jbe (bad) fisubl adc and xor (bad) push movabs hlt leaveq popfq cli xchg pop insb retq pop and out and (bad) mov sub cli mov mov add fisub jle and push fstp mov jne mov rex.WRB mov (bad) xchg icebp rex mov xor pop add jbe js rex.B mov sbb insb repnz (bad) test movsb cmp mov ror in icebp in add mov leaveq adc (bad) cmp or (bad) loope (bad) cmpsb movabs rex.X cmp add jno lret sahf mov sbbl fwait insl jmp cld fs movslq insb jae rex.X gs shrl fstps mov outsb (bad) jbe rex.WR test ror in jg iret jmpq lret xchg outsb or shrl fucom scas and ds adc pop movslq lret loop cwtl push jne rex.WRX sbb mov rex.RB iret movsb xchg (bad) (bad) movabs sbb test (bad) shr repz (bad) addb pop mov outsl (bad) lahf outsb or dec pop mov jmpq and (bad) (bad) cld callq (bad) (bad) (bad) std lret loopne ss mov cld pushq data16 icebp movabs xchg pop neg and and push jo pop (bad) adc jnp (bad) (bad) outsl (bad) test rex.RXB sub jns (bad) adc or shrb rex.RX cs (bad) (bad) or jno in or push xor (bad) (bad) inc out xchg add lret (bad) and xor add jp adcl roll (bad) imul outsl sbb jae add jnp out sub fmuls (bad) outsl and (bad) sbb jb insl testl (bad) mov movsb mov cmp cmp data16 rorb cmp cltd (bad) mov sahf jrcxz xchg xlat xchg (bad) add cmp or jg sbb (bad) ss sub jmpq scas adc fdivl mov mov push mov mov retq xor (bad) loope xor xlat pushfq in lahf movslq (bad) imul movabs cmp nop insb rsqrtps rex.WB insb out push xor sahf lods stos push mov pop clc std push rex.WB icebp xor sti neg or test push movsb or retq (bad) cmp nop mov mov push lea mov and (bad) movabs push cmp (bad) (bad) sti mov (bad) (bad) (bad) (bad) movsl add lahf or mov rex.WB mov mov mov (bad) add add and jmpq xor pop adc in mov out fnstenv jge xchg sbbl jb clc sub rex.RXB cmp sub pop lahf mov add je hlt xor mov adc push rex.RB xor cs insb add sar sbb cmp add (bad) testl (bad) cwtl adc (bad) outsb push (bad) push imul lret in rex.WR (bad) mov in rex.WRX add (bad) popfq test (bad) push fwait and cli or sbb test fucomp fdiv out loopne rex.WX addr32 mov xor sub in (bad) stos mov mov mov sti mov cs xor scas lods sub rex.WRB rex.RB ja sbb rex.R fcmovne cltd mov xchg movabs (bad) (bad) (bad) std pop fdivrs pushq add mov ljmp pop xchg mov rex.WR pop rex.B jp cmp or mov mov fwait push (bad) mov (bad) jnp rex.X hlt or (bad) sub mov mov rex.XB rex.RB data16 out sub std mov xor out adc pop sbb or movabs jo xor mov sti sub (bad) pop cld movabs (bad) pop push sub rex.RX fs adc adc cltd addr32 or adc pop pop mov pop (bad) add xchg addr32 nop sbb (bad) mov lock sbb lret add stos (bad) jg push mov pushq (bad) jnp push adc rex.XB rex.RXB mov mov mov pop sub mov rorl cwtl jmpq bsr scas fstpl int3 rorb (bad) insb stos adc push mov pop idivb insl sbb outsb jle pop int3 insb cmp pushq jae insl sub mov test push rex.RXB mov shrb and mov sbb pop cmc cmp jmpq jae btr xor or mov mov movsbl setge mov mov ror sar mov bt xor cmc jmpq movzbl movzbw mov retq jmpq jne test sub setae btc and adc mov neg neg clc xor add ror mov stc test jmpq shl rol mov bt rol mov cmc repnz jmpq jbe jb data16 loopne pop adc jae (bad) (bad) out mov sbb jmpq (bad) add lret (bad) in fwait std insb rex.X or fdivl (bad) jmp rex.WR (bad) (bad) (bad) (bad) cmp lea rex.WX rex.X mov sub test (bad) in xchg loopne icebp adc sbb (bad) (bad) (bad) std (bad) and add xor fdivrs mov in jmpq pop rex.WX pop (bad) ds cwtl mov lock or xchg mov add icebp push jne push or and rex.RXB rex lock stc or sbb mov mov xchg mov callq rex.WR inc bts rol shrd mov inc adc clc push shrd mov neg btc sub stc bt (bad) hlt sar push bts push cmp or rcr bsr push setae sar bswap push rcr mov bt stc test jmpq (bad) adc sar push test adc rex.RB add scas sub rex.XB loop rex.WR cld andl (bad) stc (bad) jns insb push mov xchg xchg xor (bad) in rex.W rex.XB adc fcmovbe mov add in icebp pop leaveq pop xor rex.W add rex.WR jge mov test incl mov out movabs imull jle sarb (bad) decl rex.WRB rex.WRXB (bad) (bad) (bad) sti nop mov (bad) (bad) (bad) jnp xlat jns jo rex.B cltd and add (bad) cmc insb in cmp (bad) (bad) sti (bad) jno insl (bad) xor jl rcrl mov std insl repnz and xlat push xor xchg jbe (bad) pushq or cwtl add (bad) outsb stc mov insb mov or xchg pop imul shll std movsl rex.RXB mov insb rex.X (bad) fcoms test loop sub xchg sbb rex.WX xor add or cmc and nop insb rex.WR (bad) popfq cmpsb rolb jmp sub js (bad) and stc rex.RB scas (bad) (bad) xchg sbb xchg clc lock xchg rex.RX scas xchg rex.WB xchg xchg or (bad) lret sarb (bad) mov xchg add rex.W jbe movabs or rex.WB (bad) (bad) (bad) out roll rex.RXB xchg cli rex push (bad) adc rex.WRX xchg test mov sub fstl or and add add adc or mov push push lods mov stos (bad) rex.WR xchg ds addr32 pop hlt (bad) in sub movabs (bad) fwait lea pushq rcrb xchg (bad) out (bad) and cmp ror adc sub stc jmpq callq jmpq iret movabs xchg hlt in xchg mov xchg mov xor (bad) mov lret cmpsl sbb data16 loopne mov (bad) (bad) jae frstor mov (bad) outsl jl enterq jmpq mov (bad) xchg add gs jmp cmpsl (bad) xor mov in mov movabs in rex.X stos pushq (bad) or mov clc callq rex.X notl fistpll (bad) frndint shlb (bad) (bad) (bad) sti mov fdivrp (bad) (bad) decb in in add add or push mov int scas mov xlat sbb idivl stos mov mov pop rex.XB shrb in rcrb outsl ja (bad) jb mov mov callq neg stc add and lea sar rcl mov clc jmpq clc cmpb jmpq mov movsl mov sti mov stos mov adc lods lret cmp jns rolb push xor mov rorl in xorl jp imul callq sbb push pop push mov lret sbb shrl in mov mov pushq dec repz rex.WRXB repnz repz rex.RB (bad) rex.RB pushfq xchg mov xchg outsb pushq push rex.WRB pop lods (bad) xor (bad) (bad) (bad) sti dec test retq (bad) (bad) jmpq lods cmp add add imul xor ja (bad) rex.RX fildll sbb out or xlat out nop retq xchg pop adc insl (bad) push (bad) add mov fisttpll jmpq (bad) mov mov ja bt cmc imul cmp test clc add jmpq jb stc cmp jmpq jmpq callq jmpq jae jne movsbw bswap shl mov not mov test test sub jmpq jmpq jmpq bsr sub movsbw shrd stc shld mov bt test clc sub clc pushq test bt cmp jmpq jmpq jmpq jmpq add rex.WR movslq rex.RX add test clc movb test test jmpq jmpq stc cmpb jmpq jmpq clc cmp jmpq neg (bad) lahf push sub fldl lea rol cmp and rex.WR rex.WX sbb movabs xlat xchg rex.XB cmp cmp int3 cmpsb cli pop (bad) js cwtl jmpq loopne (bad) adc cld fdivrl (bad) jns rcrl js in add adc jns (bad) (bad) sti (bad) push rep (bad) (bad) (bad) (bad) decb (bad) rex.RX xor outsl cmp movabs jb addr32 (bad) (bad) (bad) incl stos sbb fldcw in (bad) out fist xchg xor es fiaddl (bad) mov or retq pushq retq mov xor lods rorl cld pop (bad) jp sar jl jo adc bswap movzwl bswap lea mov not lea bswap lea lea movzbw mov jmpq sub jnp fimul int3 and out in cwtl out fiaddl pop adc out mov sub (bad) xor cmc xor jbe (bad) xchg cli (bad) sbb jno (bad) sarl sahf clc cli (bad) cmp sub (bad) (bad) (bad) sti (bad) (bad) rex.RB in lcall stos lea fisttp mov mov rex.WX stos sub rex.WX fcmovnb stc pop out adc fnsave mov (bad) (bad) (bad) (bad) pushfq (bad) (bad) lret fistpll (bad) ds xchg add add sbb rcrl sub cmp push or push pop mov mov cmp push fwait rclb mov rorl (bad) rex.WXB clc mov sbb mov rolb (bad) movslq mov cmp jmpq pushq jmpq outsb movabs or insb rex.WR pop movabs inc in int rex.RX add fdivrs mov cmp sub adc lods or int3 lods (bad) xor mov xchg nop mov add movabs jmpq stos (bad) cs rex.WRXB xchg xchg icebp pop rex.B neg rex.W rex.WRXB movslq push push cli push (bad) bnd (bad) mov (bad) xor mov cwtl adc cmp (bad) js out mov (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp fidiv jo (bad) jne push vcvtpd2dqy lods pushfq fs jmp xlat mov clc adc pop (bad) jbe fs lahf lock test rex.RX shrl mov (bad) jne mov xchg (bad) adc outsb test mov jmpq jl xchg xchg rex.RB mov pop (bad) rex.RB push xchg (bad) mov (bad) jae (bad) pop scas (bad) pop rex.B sbb xchg cmp pop pop mov add sub (bad) pop lods rex.WRX jrcxz xchg adc test lcall add or rex.R out add xchg movsb pushq (bad) es rex.WRX callq out xchg xlat (bad) (bad) (bad) sti cmp lret (bad) (bad) (bad) and jmpq gs pushfq callq (bad) jmpq cld fiadd mov scas or (bad) je lcall sub mov outsb (bad) out (bad) xchg mov xlat scas (bad) or lret shrl xor out in ja add adc mov shrl push test jmpq dec clc jmpq jb stc cmp jmpq cmc clc repnz jmpq test stc cmp cmp jmpq je mov movsbl not lea jmpq stc jmpq jmpq jb test bt cmpb jmpq jmpq je mov dec stc xor push xadd mov shrd ror cmp sub bswap jmpq jmpq jmpq je hlt cmp pop test inc pushq cwtl rex.R (bad) sub (bad) loopne cmp (bad) xor mov fnop stos sbb rex.W int3 mov fwait mov or adc pop cmp fidivr rex.RX lock (bad) mov (bad) insl addr32 cltd jl roll sti std jbe movabs testb rol repz jle (bad) bnd scas or out jmp push (bad) sub enterq (bad) lret hlt std jb incb add add add sahf mov mov adcl movabs imul add fcmovnbe mov (bad) pushq sbb push sub rolb fmuls sub cli sub (bad) sub imul lods mov int3 out fdivrs add fnop nop rex.WRX or fimul (bad) frstor push jno int mov sbb mov rex.WR xor and add and push sub and imul (bad) xchg and pop pop mov xchg loopne callq nop rex.WX rex.WX std or sahf adc sbb (bad) sbb (bad) std mov adc in movabs test outsb mull sub or cmp (bad) mull xlat mov cmc jle rex.WRXB sahf (bad) (bad) mov lock imul add (bad) repz jl jo rex.WR data16 jl nop clc std popfq sbb xchg jp sahf repz push stos add (bad) movabs mov xor jne lret jns add jl (bad) push add std fistp xor pop mov imul repz rex.RB (bad) lods rex.RB add cltd mov pop pop pop rcrb vmovhlps (bad) (bad) sti (bad) sar (bad) (bad) scas push mov sbb fisubrl fld1 add add (bad) cmp iret sbbl mov jno xchg sbbb mov stos rex.WR xchg push (bad) mov rex.RX (bad) (bad) xchg mov (bad) insl xor add in int jmpq fisubrl repz icebp and cmpsb outsl (bad) (bad) sub mov add xabort jns fdivs lock mov (bad) (bad) iret rex.WXB movabs rex.WB rex.RB jno adc test and lock enterq (bad) mov (bad) (bad) adc cmpl xchg pushq add xchg (bad) (bad) mov push rex.WRXB or flds (bad) (bad) sub insb out (bad) (bad) (bad) cld or (bad) (bad) (bad) (bad) clc je push sub rex rex.R imul xchg add add (bad) rex.WRX rex.WB (bad) jb mov jno retq xor lret icebp movslq mov push out pop insl enterq lahf adc sbb leaveq pop jne hlt (bad) stc cwtl xor (bad) or movsl sti ror inc add and btc mov cmp cmp cmpb jmpq jb rep bswap pop jmpq mov jmpq je sar btc stc xor push sbb mov setae adc sub setno movzbq lea jmpq test jmpq jmpq jmpq jmpq je test bt clc stc sub test stc cmp test cmp jmpq je bsr setg bsf push cmc stc movzbw xchg mov bsf sub seto lea mov bswap lea jmpq inc bt cmp neg test cmc test mov cmc bt add cmc jmpq add mov (bad) (bad) and push rolb cmpsl rex.XB movabs (bad) fsubs (bad) imul adc sub int3 xchg (bad) (bad) cld jmp imul cli fwait jo pop (bad) jp pop mov (bad) rex.WRXB mov imul es movabs cmp (bad) jp push std repnz push insl cmp movsl mov loope in test mov adc (bad) (bad) (bad) incb (bad) pop test scas add jnp (bad) (bad) (bad) incl (bad) jb movabs sbb xchg add enterq add lahf es mov jno icebp cmp int3 jmp rex.RX rex.WR (bad) mov rex.W (bad) icebp and sbb xchg ficom add mov adc jmpq jb cmp bt stc cmp cmpb jmpq je stc stc bt add jmpq imul jmpq lea jmpq mov add jbe sbb imul rex.X rex.RXB or fs movsb cs movsl lret (bad) mov gs mov adc stos (bad) add pop lcall jge scas (bad) rex (bad) rex.XB cmp mov sub mov (bad) (bad) cld adc adc repnz (bad) (bad) pop lea je stc sub add or pop retq (bad) mov pushq or cmp (bad) (bad) insb mov mov rex.WB mov jmp sub in add jne cld test js fnsave mov scas fadds rorb callq out cmp rex.R cmp addl jp negl (bad) push rorb (bad) jne pop mov rex.WRXB mov (bad) (bad) (bad) (bad) fcmovne pop sbb test (bad) pop repnz xor out xchg mov pop xor add add push je jb rex.WRB mov (bad) mov jp movabs sub jae mov lock mov leaveq cmpsl ficoml add mov jmpq xor jmpq lea jmpq bt mov cmc clc ror cmc xor jmpq je jmpq or mov (bad) cmp rex.RXB int xor mov out rex.XB retq repz mov sub cmp xchg (bad) loopne in or sbb rex.X or rorb (bad) callq stc out rex.WR insl push sbb cltd add rex.WR popfq cli push sub sbb addr32 jne outsl (bad) (bad) icebp rex.RXB rex.XB (bad) (bad) (bad) (bad) (bad) sti sbb rex.WRX jge (bad) (bad) incb and cvttps2pi int3 cmc xchg (bad) rex.WB push or in (bad) (bad) incl cmp nop sahf lods sbb fidivrl rex.XB pushq xchg ffreep mov out mov mov add adc xchg (bad) mov lret (bad) ss cmp jmpq loope (bad) sbb mov cld xor rex xor stos pushq add mov lret sub pushq cmpsl sbb add pushq push stos and cmp std and pop js (bad) cmp mov mov notb fstp pop stc xchg and pop adc (bad) (bad) (bad) (bad) cli mov (bad) (bad) (bad) std stos stos (bad) mov jge (bad) (bad) int (bad) (bad) lret jae rex.WXB (bad) int3 xor rex.WRB fwait test jl cli out jle pop or fimull (bad) (bad) (bad) pushq lods mov pushfq out cmpsl push test (bad) repz (bad) in and pop pop leaveq jae andl enterq test stos mov mov adc pop mov imul jmpq jmpq stos jmpq jmpq jmpq jmpq callq stc clc bt stc or jmpq sub negl shr and fiadd rex.WRB push mov adc movabs rex.WRX data16 fidiv jnp jns (bad) rorl and enterw adc or (bad) push cmpl fcompl sbb lret (bad) (bad) cld (bad) in movslq lcall scas adc adc jmp xchg (bad) adc loope lods sbb leaveq insb (bad) stos fild (bad) sub insl mov out add add jge or mov pop rex.RXB (bad) (bad) rex.WRB (bad) fwait sub test cld scas xchg mov leaveq out xor pop sub movslq mov int3 mov cmpl jbe es clc in or addr32 pop jge xchg (bad) or lods mov push sahf fstpl imulb outsb pop mov mov (bad) cltd movsb sbb movslq and fnstsw imul jl (bad) adc sub and xor xchg jl std stc (bad) and clc loope movsb (bad) hlt (bad) (bad) (bad) sti and movabs mov (bad) (bad) and sti cli (bad) (bad) (bad) decl rolb rex.X sbb rex.WRX fnsave mov cmp xlat lahf cwtl mov rex.R lods mov sarb mov or mov rex.WR push imul rex.WB movabs jle test jne lea (bad) (bad) mov sub adc sub bt bsf mov test cmc sub test jmpq jmpq seto lea not lea movsbw lea not movzbw movzwl mov lea lea not jmpq je stc jmpq jmpq jmpq (bad) jnp nop adc pop mov fidivl lea xlat add xor and mov (bad) mov movabs adc (bad) add outsb pushq pop rex.X mov cmpsl pushfq pop mov rex.WX add rex.RXB pushq (bad) and pushq add (bad) std or (bad) xor stc andb cmp repz add (bad) (bad) std clc xchg (bad) cmc push (bad) (bad) enterq add add or mov rex.WX mov sub rex.RX rex.WRX sbb movsb shll rex.WX sti decb sub rex.R sbb nop and mov jae shrl xchg rex.WX rex.WRXB fwait (bad) jrcxz jns rex.RXB xor mov sldt roll stos stc clc mov stc jmpq jne cmp stc movb test clc test jnp je shld clc xor shrd push mov bt rcl test mov and jmpq jmpq jmpq ja rcl stc jmpq jmpq rex.X (bad) cwtl out rex.WR xchg adc sbb movabs and out (bad) (bad) xchg or je sbb sub rex.R (bad) cs xchg push add (bad) leaveq cmp rex.XB jae mull add iret pop jrcxz fs es adc rorb pushfq cli push (bad) rex.B mov movabs loop push (bad) div pop cld icebp (bad) repz sbb lock push (bad) xchg (bad) (bad) (bad) sti jge in push (bad) (bad) (bad) (bad) (bad) imul add nop and imulb (bad) (bad) (bad) callq lahf repnz and add leaveq jp adc ja cmp jmpq rcrb (bad) insl cmp mov stos incl (bad) mov mov fs cli fimul sbb or jmpq pushq jmpq callq jmpq test int lea pushq int jg icebp roll fcomp and xchg movsl (bad) mov out rex xchg imul adc sahf rex.WRXB rex.WXB sub in jne js mov xchg or (bad) sbb xchg mov and mov (bad) lahf adc xor cmp sbb test cmp jne lods mov repnz mov (bad) (bad) sti xor mov (bad) (bad) (bad) movsb shlb or enterq xor lock (bad) (bad) lcall rcl cmp xor sbb cmp movslq data16 pop xor push icebp jg sub movabs jnp cmp out (bad) mov pop rex.W adc nop cmpsl nop mov (bad) adc ja stc jmpq jmpq jmpq jmpq jmpq mov iret out fidivl sbb rex.WRX adc (bad) rex.WRXB enterq ja stos imul jle test mov xor (bad) (bad) mov sbb shlb (bad) retq (bad) int loop mov mov cmp scas cmp jo push stos fisttpl movslq jne andl pop cmpsl movabs je clc in adc lahf sbb (bad) je (bad) mov movabs mov outsb sti (bad) xlat sti nop rol pop (bad) mov and push add add (bad) mov sti repz stc cwtl enterq jno scas rex.RXB cmpsl mov cmp rex.WB (bad) xor adc mov stc insb sbb lods movabs (bad) (bad) jo mov shll adc sub jmpq callq jmpq jmpq outsl and or xchg movabs mov pop xor (bad) insl addr32 adc xchg rex.WRX add popfq (bad) xchg jbe mov rex.WB mov add (bad) jo or hlt shll ficom xchg cmp jnp (bad) stos (bad) and out add hlt xchg xchg (bad) (bad) (bad) cli movabs mov jbe push cmpsb rex.R (bad) lahf mov retq movabs loop movabs nop ror (bad) (bad) (bad) (bad) mov rcr xor (bad) icebp pop fisttpll (bad) pushfq jbe (bad) jb mov clc movabs rorl loop stos lret sub mov fdivl adc sub sbb add lock add jo pushfq push pop mov decb jmp cli (bad) in xchg mull test bnd adc popfq xor rex.W gs adc lahf mov ds (bad) lret rex.WX sbb sbb pushfq fistl (bad) test (bad) insl stc mov sub push lock (bad) (bad) pushq xor adc mov retq cmp jl sti jle mov mov (bad) (bad) std rex.R jl (bad) add add xor lret fldcw sub mov and cmpb fsubrs imul rex.RB pushq rorl nopl rex.RX test scas (bad) fdivrl xor rex.WRX movabs adc or cwtl mov add adc jrcxz xchg or movabs mov mov movslq add pop movabs pop pushq sub and xchg in lods cmpsb test lods or (bad) (bad) xor xor mov push stos neg rcll rex.RX movsb lret (bad) test rex.RX mov retq hlt rex.RX (bad) push sarb movabs (bad) (bad) decb (bad) (bad) (bad) ljmp movsl (bad) push ds mov (bad) push ja push sbb adc jno mov (bad) mov mov (bad) rex.WX push cltd jnp test xor outsl fild js movabs (bad) (bad) adc cmp mov mov ja ror sub shr shr add neg bt or not add rcr rol ror sbb xchg bswap bswap inc stc mov ror or rcr mov jmpq fsubrl fmul stos adc mov or clc icebp (bad) xchg rex.R rex.RX mov cmp add xchg push push (bad) and cmp adc outsl std mov add rol rex.WRX xor jrcxz (bad) subl cmp mov xchg add add or rex in fdivs cmp nop cs and in movsb (bad) jne jbe (bad) jo pushq movabs jo (bad) sub fist ds lea (bad) xor add xor pop jbe xchg (bad) push notb add xchg in movabs adcl sub mov and rcr cld cwtl test mov adc cmp (bad) and mov (bad) pushfq sub jae adc jne (bad) jge rex.RXB add rex.RXB scas movabs nop icebp out icebp cmc xchg rex.B (bad) mov xchg mov sbb gs rcrb vminpd jbe push test push (bad) pushfq push push cltd pushq movabs xchg rex.XB jbe rex.B (bad) cmp rex.WB (bad) (bad) sti in clc data16 (bad) (bad) (bad) rclb retq jbe push nop mov icebp sahf (bad) adc push lea jbe rex jge cmp test (bad) xchg mov adcl xor push rex.WXB nop add and sbb sbb push outsl bswap ja adc xlat loope stos mov sahf jnp and cmp repz in rcll jb jb fldt push xor int3 addr32 out or pushfq neg out fsubrl (bad) mov insb movabs enterq sbb (bad) sbb push shrl cmc rex.RXB jae (bad) in (bad) and in movabs in repnz (bad) (bad) (bad) (bad) ja outsl insl pushq mov add fstpt mov movabs gs adc push (bad) pop and js xchg jg (bad) (bad) (bad) pushq pop push mov (bad) rex.X rex.W js rex.R add mov movabs lea rex.WRX adc (bad) hlt push sbb sti out rex.WB mov push retq adc lods (bad) sbb adc or jmpq ja jae bt cmc stc cmp cmp jmpq jmpq jge jne test xor jmpq cmc xor bt stc rol test clc cmc clc cmp jmpq je bsr push jmpq dec cmp test popfw jmpq jae mov clc xchg mov cmp add jmpq pop jl rex.X rex.WX (bad) lret in jp sub lret pop jbe mov sarl push add cwtl sbb in xchg andl test movslq movabs jns and jbe sub (bad) (bad) js (bad) test test pop ja (bad) (bad) (bad) cli xchg push in sar (bad) (bad) std mov std fld lock mov rex.RXB rex.XB rex.WRXB mov rex.RX rex.W (bad) (bad) or (bad) test push repz fldl (bad) (bad) (bad) (bad) mov xchg rex.WB cmp jo sahf ss jge lods test (bad) imul mov xchg test retq movslq mov pop jrcxz rex.RB and (bad) sub mov fidivl (bad) xor adc jmpq add cmc bt stc movzwl shr mov bt test add clc test cmp cmc mov jmpq jmpq cmp cmpb jmpq sub cmp test cmp jbe ja jmpq dec cmc test shr jmpq jmpq js scas mov lock xor (bad) mov add rex.WXB rex.WXB fwait adc rex.XB rex.X and add fildl add rex test and mov data16 clc cmpsb pushq (bad) rex.WRX rex.WB xchg cmp cli cmpsb orb ds (bad) push iret push or (bad) push or cmp xchg adc (bad) (bad) (bad) sti hlt mov (bad) (bad) (bad) (bad) es (bad) iret mov push rex.WB sub add add and pop mov jo sub mov leaveq (bad) fidivrl sbb push mov pop hlt cli xchg pop int out adc push xor (bad) test pop in mov (bad) cmp jmpq jmpq cmc cmp jmpq jmpq jmpq mov xchg lea mov setbe bswap not mov pop xchg xchg mov movsbl mov bswap not bswap mov retq je movzbw bswap jmpq ja bt imul clc cmp jmpq pushq jmpq jmpq add jmpq bt test xor test bt test repnz jmpq je btc ror inc cmp push bt bt xadd inc mov shld sub jmpq callq jmpq jl callq jmpq or mov add mov ja cmp bt cmc sub bt cmp clc clc repnz jmpq callq bt sbb add add bts neg neg movsbl mov cmc stc stc cmpb jmpq lea jmpq test (bad) jmpq jl rex.WXB popfq jge rex.W mov jnp movabs sbb jo xchg fsubrl xchg (bad) lret adc sub cld mulb jbe movslq or in (bad) (bad) enterq sub pushq mov push rex.WR cli out xchg push mov jp,pn xchg add (bad) nop xchg jne mov (bad) (bad) sti popfq imul (bad) decb (bad) lock pop sbb sbb or sti jb fwait mov push rex.R sub rcll shll callq (bad) pushq cmp xor mov adc leaveq mov lea jmpq callq jmpq jmpq jmpq jmpq jne callq jmpq bt repnz jmpq (bad) (bad) lock shlb adc rex.WB rex.WB push mov lret movabs cmp imul scas ja mov roll adc adcb fs rex.R popfq insb pop adc add mov adc (bad) lods hlt push rex.W rex.WRB cmp pop (bad) sub jp pop jle add (bad) cld (bad) pop sbb retq adc rex.XB (bad) (bad) cmpsl xchg (bad) mov (bad) mov retq addr32 xchg (bad) (bad) (bad) sti sbb (bad) (bad) (bad) decb and test lret rex.WX sarb decl adc pop cld int xor xor ds decb sbb pop (bad) pushq insl rex.WXB icebp fs (bad) mov mov (bad) push (bad) rex.WXB mov fild rex.WRX add test rex.X jmpq ja ror sub neg lea add add movzbw add movsbw bts mov jmpq clc repnz jmpq cmp cmp jmpq pop (bad) adc loope pop imul sbb ds push je cmp add notb adc repnz imul (bad) jrcxz (bad) repz jrcxz add rex.WRX cli out and push enterq sub lret mov (bad) (bad) decb rorb mov loop (bad) xchg rex.WRX xchg and loop cmc cmpsl (bad) (bad) (bad) jo push (bad) or rex.R (bad) add or add (bad) cli mov loopne rex.RB shrd dec bsr mov bt cmp and jmpq lods cld jg sahf scas (bad) movabs and movabs cli in cmp enterq push push imul push cmp adc sub xor je je pushq and imul fsubs test (bad) mov fwait mov std xchg push clc lahf sarl (bad) xchg add jp movabs (bad) mov hlt push (bad) mov fsubl or (bad) lret (bad) std clc xchg jrcxz sub xchg add add js addl leaveq rex.RXB retq (bad) cmp imul retq xchg int3 and outsl out sub mov sbb iret movslq pop and push mov (bad) mov sub cmpsl xchg (bad) repnz xchg mov fbstp std mov jmpq bt sub stc cmc bt pushq clc cmp jmpq jmpq jmpq xchg xchg xchg ljmp mov movsl or fwait icebp pop pop add or mov fisttp movsl cli push pop add rolb pop cmp and (bad) jrcxz add (bad) mov test iret lret cli mov jge imul icebp pop xor repnz sahf imul sbb jge in adc jge and cwtl cld (bad) sbb (bad) loopne scas pop mov in js mov (bad) (bad) sti pop lods lret (bad) (bad) (bad) (bad) (bad) incb rex.R in fsub (bad) movsb xor ds mov pushq rorb (bad) (bad) (bad) icebp adc orl mov roll fmull out rex.RXB test sahf out rex.RX sbb (bad) jae pop jne std pop fsubrs xchg cld sub add (bad) xor or pushq jmpq cmp lret negb cmp (bad) iret sahf cmp mov enterq xor mov push jne adc pop adc out cwtl mov shll (bad) mov repz (bad) xor mov jnp rex.WX pushq test cli repnz cs repz rorl movabs sarl adc (bad) (bad) sti jrcxz in and (bad) (bad) dec (bad) stos mov pop (bad) je js rex.WB fisttpl add add rex.WRX adc cs mov push repz (bad) nop pop popfq popfq pop push (bad) cmp rex.WX mov fstpt adc jbe or and rex.WRXB lods std rex.RX push out testl gs cmpsl int3 jae adc xchg std clc (bad) mov adc test or jg lahf rex.WX and stc movabs push push jle rcrb notl rex.RXB (bad) movabs fdivrl movabs pop mov sbb and rex.WRB fwait mov cmp or (bad) movabs mov gs pop ja ds mov pop add mov sub test movabs sub vpavgw adc fwait movsb sbbl out (bad) and mov movabs andl imul xor loop jne test stc test xor jmpq jmpq jae jne stc jb clc cmp movb cmc bt jmpq out imul retq mov rex.WRX (bad) add rex.WRX rex.WRB retq adc movslq in enterq push scas (bad) cmp outsl (bad) loopel cli imul movsb scas (bad) jae (bad) movsb xchg adc test cmpsl and outsb mov (bad) pop jmpq (bad) ja adc xor jno jo mov (bad) lods js fiadd and mov jl jg movabs (bad) retq jge (bad) (bad) (bad) jnp lret pop jge (bad) cmp imulb sub xor (bad) rex xchg jg rol popfq lret add loope scas mov stc sub add xchg mov mov push (bad) (bad) (bad) (bad) jns test rex.WXB jge (bad) mul mov push cmp lahf xchg or rex.WX xsave mov adc cli pop or push (bad) cwtl (bad) or mov leaveq pop mov xor adc pushfq shrl sbb xor sub and sahf (bad) ds jbe movsl or (bad) xchg and (bad) loope (bad) out in js movabs sub lret sub retq jrcxz rcll add add cmp (bad) hlt scas mov in (bad) sbb fnstenv pop push icebp and jge mov pop mov sbb scas movsl ror and sbb pop xor (bad) cmp push adc je pop (bad) out and sbb addr32 (bad) movabs jb loope pop xchg rex.WRB add mov xchg movabs push movabs xlat rex.WR cmp mov in adc rex.WRB lock (bad) in sbb test test mov or (bad) hlt jae (bad) xor xchg sub (bad) rex.W xchg push push (bad) xchg outsb sbb xor mov (bad) cmp fild jns xchg rex.WB mov out or insb cmp or gs (bad) leaveq cmpsl adc xchg rex.WRX (bad) test callq mov rex mov sub (bad) roll (bad) (bad) sti rex.WXB mov (bad) (bad) (bad) (bad) (bad) fsts mov div mov mov popfq ss pop xor mov cmpsl (bad) jl adc or rex.W jge pop movsb sti lahf test loope sub cmp rex.WRXB cmp jmpq add push stc xor pushq adc retq mov or test cmp add (bad) xchg adc jmpq push movslq cmpsb iret decl pushq or and (bad) sbb (bad) leaveq cs mov and sbb push mov outsb adc (bad) jle es scas sbb es lods movabs loopne sbb rex.X rex.XB nop int3 and xchg leaveq rex.WR sbb (bad) (bad) std xchg mov add or mov xchg in retq (bad) out lret pop xor sahf add test lretw outsb ja insl fmull add jns mov out cmc (bad) jmpq je shr jmpq jne shl add movsbw movzbl mov lea shl sub bt sbb movzbl mov cmp cmp jmpq xchg rcr mov bsf rol shld shrd mov dec add bsr mov test test sub test clc stc stc repnz jmpq mov lea not movzbl lea bswap mov jmpq cmc sub jmpq jnp je stc clc stc jmpq jne adc rcl (bad) testl add cmc movzwl shl mov cmp jmpq je stc jnp mov push sub neg mov shrd neg shl sub bswap not lea jmpq jne bt clc test movb stc test jmpq adc jmpq loop ficoml pushfq cwtl (bad) and ja (bad) push test xlat adc rex.WB (bad) push (bad) jo xchg xor clc faddl addr32 scas loop scas lods xor xlat mov mov ficom pop data16 movabs (bad) jmpw (bad) (bad) (bad) (bad) (bad) cld addr32 sbb jmpq (bad) sbb and test cmp rex.WR xchg (bad) lret (bad) xacquire (bad) icebp or (bad) cltd (bad) or add add jl orps xlat or repz (bad) (bad) movabs xchg jg adc sahf add sub rex.RXB or cmp cwtl std xor loope (bad) rex.WRB xor hlt xchg je btr cmc add dec mov cmp jmpq jmpq cld ss rex.W stos (bad) fsubrl add (bad) lods jne sbb mov (bad) (bad) movabs loop mulb loopne adc fcomps ficompl pop xor (bad) sti cmp (bad) fistp fbstp fnstenv clc enterq rex.RXB or imul hlt stos enterq (bad) rex.WR (bad) (bad) std or jns cmp (bad) fidivrl fxch mov cwtl std pop (bad) fstl pop test xchg cmp mov jle in rex.X (bad) (bad) (bad) callq cmp (bad) (bad) (bad) (bad) (bad) cld mov push jge movsb clc adc fstl pop adc rex.W (bad) in rex.X (bad) pop stos (bad) sbb adc pushq iret mov imul cmp clc cmp cmp add jmpq jne cmc test movb bt cmp cmp clc test jmpq test mov repz movl mov sub (bad) fisubl xchg rex.W sbb (bad) out lods sbb (bad) mov cmp pushfq push in and repnz (bad) jle lea (bad) subl ja adc jmpq xchg shrl jmp insb (bad) imul (bad) stc mov adc pop xor (bad) (bad) (bad) (bad) (bad) (bad) sti push (bad) or decb (bad) (bad) (bad) adc and (bad) scas mov push (bad) (bad) (bad) dec mov push sub out add and cltd mov xchg xor je push mov (bad) popfq scas sarl sub cmp iret sahf clc clc pushq pushfq mov jmp out lret mov (bad) and jb cmp jmpq std sub (bad) rorb gs (bad) jrcxz cltd shrb sub add sub imull add lahf pop rex.X sbb mov rex es flds out mov movabs roll jmp rex.WX enterq xchg cmp cs rex.RB pushq mov cltd lret (bad) mov mov (bad) fild jnp sub rex.RB xor in (bad) (bad) std or movabs enterq add mov movsb rex.WR mov xchg std sub xor pop insl mov (bad) movabs xchg (bad) mov lret (bad) jnp int3 sub or int lock (bad) cmp (bad) std pop (bad) imul push cmp add pop fisttp insl rex.X mov out cmp fisubl rex.WX rex.WX rex.XB mov sub stos outsl test rex.X jl lea cmp or fdecstp jmp cmp or std mulb sbb in (bad) jge add jnp xchg mov pop sbb (bad) add (bad) or (bad) hlt xchg mov cmp cmc mov std mov and fcomp or or loopne (bad) lea (bad) jno push ds xlat mov (bad) cmp icebp xchg adc push loopne,pt iret jne mov (bad) (bad) (bad) std sbb add add or adc mov (bad) scas mov jae lret rex.WRX (bad) jae cmp loope mov (bad) insl (bad) jne out adc add mov out (bad) rex.WX pop adc std out pushfq add repnz xlat cmp out (bad) lock rex rex.W (bad) cmpsb pop cs mov mov out out loope loopne cmpsb rex.XB xchg pop mov rex.WRXB cmpl pop mov scas mov pop adc (bad) (bad) sti add (bad) (bad) std in stos movabs rex.R mov sbb jmpq sub sbb add (bad) cmpsl jb push jle pop (bad) push test (bad) jnp xchg shr movabs xor xor jrcxz int3 sbb (bad) cmp sub cmpsl adc fbstp cmp pop xchg xchg adc xor pushfq mov push mov out std xor gs gs imul rex.B adc jne not mov jmpq test jmpq je bt shrd rcl test push test seto dec mov stc jmpq je jmpq callq jmpq bt bt mov jmpq push jne cmp xchg je test mov mov stc callq mov adc cmpl movslq popfq mov (bad) (bad) std out jb (bad) or cmp add or (bad) or (bad) jl retq push cmp sbb jmpq fwait mov or jbe in lret push in rex.WRX lret in imul adc xor enterq es xor std loope sbb sarl add pcmpgtw sub cmove pop xor popfq cli xchg rex.WB jle movsl rex.WRXB xor pop (bad) out loope fsts cltd clc push rex.XB and sahf mov lods iret xor in xchg (bad) xor rol xor push sub int adc rex.RXB test in xchg adc pushq repz push sahf mov (bad) push jae (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp mov (bad) in and rex.XB rex.R (bad) and js jne std out (bad) std add xor movabs jl cld insl pop lods add sub rex.WRB rex.RB subl adc insb rex.WX adc fsubr lret fstpt rex.WRXB push pop add roll retq add or ss in xchg sub (bad) div lahf (bad) jl sbb jge std repnz adc add and stc add mov ljmp push retq xchg rex.XB (bad) cwtl out jbe lret jnp rex.WXB jmpq (bad) mov pushfq pop jg (bad) (bad) lcall xchg (bad) retq (bad) cmpsb add outsl jmp test adc mov (bad) push mov mov cwtl cmpsl mov (bad) loop sub cmpsl ficom ss sahf adc cmp mov rex.B sbb (bad) pop cmp (bad) lods rex.WX fidiv shll add rex.XB jns jl in ja cmc push and pushq dec add sar cmp sbb xor inc dec jno not not setnp stos jmpq jmpq jmpq jmpq jmpq jne cmp test clc movb stc bt test jmpq (bad) mov cmpsl pop adc or jrcxz sti (bad) fldt rex.WXB mov mov jmpq or mov out adc pushq xchg mov jne sbb sub cmp push cmp cli xchg (bad) (bad) lods xchg and mov roll pop cmp (bad) xchg pop out pop int3 scas cmc in lret out adc movsb movabs cmpsb jno fucom pop sbb (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp mov add mov xor cltd test rex.XB pop loop je rex.WX sub rol mov jae shl rex.WX clc or sbb jo jb scas (bad) out and in movabs cmp loop mov test fnstenv insb add jmpq jmpq bt cmpb jmpq rex.WRXB adc movsb rex.W lahf mov adc or add loope sub push mov pop iret stos fcmovb jno push cmpsb rex.RXB (bad) add xchg adc (bad) icebp pushfq (bad) push roll data16 icebp mov mov adc stos (bad) sbb xchg pop loope (bad) (bad) cld jne and jmpq jmpq cs cmp add mov add idivb (bad) es xchg cmp (bad) xchg cmpsb add movsb push push pop mov jno cmp jmpq pushfq push rclb (bad) add add rex.B test rex.WRX pop sub stos decl jmp test icebp sahf scas (bad) jrcxz jns cmp or rex.WR add mov cmpsb or (bad) retq jg push rex.R cli addr32 sahf add cmc add and add test add rcr bsf and sub rcr mov clc stc sub cmp bt pushq jmpq push rcl ror mov mov and sub jmpq add rex.RXB gs imul outsl outsb rex.WB outsw add test xor add movabs je bsf adc lea clc push rol and movzbq btr mov sub jmpq jmpq (bad) xchg out popq outsb jl sub (bad) pushq or cmc callq mov outsw (bad) (bad) lods out in xor mov jl andb fstl (bad) cwtl mov (bad) mov iret adc fwait std (bad) xchg xor (bad) sar (bad) mov insl (bad) sbb leaveq lahf pop or jp jo sub mov cmpsl sub rex.WRB xor pop xchg repz (bad) (bad) decb (bad) (bad) (bad) ljmp sbb adc icebp (bad) lahf or jge out insb (bad) test pop cmp callq or push xchg push cltd fwait imul add mov pushfq mov pop cmp push movabs mov cmc in jge mov push xor xor fs insb add test rex.RX mov jmpq cmp jmpq pop sub rex.R mov in movabs mov in add rorb rcr (bad) mov mov (bad) loopne push ss (bad) lods rex.WB (bad) callq mov scas add addl fcompl xor cs xchg xor and add pop testl cld hlt fcoml (bad) (bad) (bad) (bad) std or (bad) lods (bad) (bad) (bad) std clc fwait cmpsb in fdivrl mov add add or sub jmp roll jns xor cmp push rex.W xchg xor cmp rex.WX push pop (bad) cld rex.WRX sbb rex.X (bad) fstl pop rex.RX mov mov cmp lods fidivl add mov cmpsl popfq std rclb repnz rex.RX adc mov jmpq shrd neg rcr mov and add shl movzbq sub lea movsbw lea not lea jmpq lea jmpq cmp cmc add cmc bt cmp jmpq je test stc test jmpq ja inc ror bt seto sub dec add cmc mov neg mov test repnz jmpq jmpq jmpq lret popfq push cmpsb (bad) (bad) clc fisttpll data16 (bad) pop mov xchg mov rex.WR rex.WR cmp in cmpl sub in xlat lldt mov fsub mov push mov sbb nop xor fwait or (bad) out xor (bad) xor insb or xorl and out push andl (bad) addl mov jne mov adc (bad) (bad) sti pop cmp mov movslq rex.WB cltd mov add (bad) add pushq sub (bad) (bad) dec (bad) rolb gs (bad) stos mov sbb jnp jnp sub cli outsb lret mov (bad) push js (bad) rcrb or scas stos int jae mov mov clc rolb std rol mov add add cmp shl setne lods clc xor stc add cmp xor jmpq setb lea jmpq jmpq jmpq je cmp clc test jmpq callq shl cmc add ror inc and mov clc test jmpq je bt cmp cmc test sub test clc cmc bt cmp jmpq imul cmc clc add jmpq clc cmp jmpq jne bswap setge lea mov jmpq jne dec xor sbb mov test shr add adc xor clc shr mov stc cmc clc jmpq jmpq lret sbb xor add mov adc (bad) xchg jg sub add mov js xchg (bad) clc (bad) icebp (bad) (bad) ficom sub or (bad) mov xchg lret out xor pushq fwait rex.RXB adc xchg (bad) xchg sub rex.R pop (bad) (bad) (bad) (bad) sti jp adc (bad) and fisttp fbstp jb loope add rex.W (bad) (bad) jle mov mov in std pushq shrl rex.R (bad) (bad) inc jmpq (bad) scas rex.B fwait movsb sub xor (bad) (bad) hlt mov fwait adc pop out jo (bad) mov mov sbb or movsl retq pop (bad) cmpsl ss mov movslq xlat add callq shll jmpq add rex.RXB gs outsl fs rex.WB outsw jb (bad) je outsl outsb add xor mov sar jns adc jmpq in test cmp sub in repnz repz (bad) rex.WR rex.RX jmpq (bad) xor add lret sub push nop mov (bad) fiadd fcoml rex.WR sub xor rex.RXB cmp fstps lock out fs test imul neg fistl (bad) (bad) (bad) (bad) jrcxz pop nopl jnp lods jmpq (bad) (bad) hlt and (bad) pop cmp popfq add (bad) shl (bad) test or lock (bad) cmp imul js lods fsubs sub pushq xchg add add jne leaveq outsb fiadd cmpsb mov test movabs (bad) nop lret scas negb or and mov cmp push push rex.XB (bad) mov data16 push shlb out andb mov add je outsb je imul insb add add add sub adc mov bt test jmpq test stc cmpsl or xchg mov shll cmp rex.WX rex.WR addr32 jl push xchg mov xchg add cmpb cld mov iret repnz out (bad) retq and ficompl xchg add rex.WRX xor (bad) xor mov out (bad) adc movslq mov jae sub or xchg sbb xor jg mov ss int (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp (bad) repz es xchg mov scas sub (bad) cmp out pushfq xchg int3 scas pop cmp cmpsl (bad) pop imul retq rex rex.B cmp in xchg xchg mov movsl lret push (bad) fildll (bad) mov stos push push (bad) je xchg pushq and out cltd xor (bad) rex.WX (bad) sub cmpsb out (bad) add mov scas mov cld (bad) cli mov retq mov rex.RB (bad) retq (bad) add sbb cmpsl pop adc movslq jb rex.X mov xchg jmp (bad) (bad) lods xchg and add rex.WRB data16 int (bad) add mov lods cwtl jp xor sub fdivrl outsb sub loope mov sbb subl fidiv mov in rex.W xor imul rorb (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp (bad) (bad) cmp es (bad) sbb cld mov or test xchg mov (bad) jmpq rex.WX (bad) je rex.WR in sbb sarb movabs (bad) retq or int mov adc sbbl jae rex.X cltd fiadd icebp std movabs repz sub mov fiaddl mov sub sbb popfq retq rex.RX imul mov xchg (bad) cli loope adc jbe test pushfq (bad) (bad) (bad) decb sbb (bad) sbb xchg jmp rex.X mov movsb sahf lock rex (bad) jnp mov in cmovs fdivrs mov (bad) (bad) (bad) insb es xor mov ja jo add popfq cmc add jns jl je jmpq jne jmpq cmp jmpq jne rex.W mull out or div mov jmpq mov jnp movsl movabs in sub sbb (bad) movabs jnp or (bad) hlt retq idiv in out rclb sahf (bad) je gs int3 rex.WRB test jg xchg jnp imul lret mov (bad) (bad) cld rex.XB jo sarl (bad) sbb (bad) (bad) (bad) mov (bad) jp xchg sbb add add sahf shrl (bad) jbe pop pop push clc lods insl movsb cmp enterq cmpsb stos mov scas enterq shr xchg pop int3 icebp rex.WRXB hlt pop loop and (bad) pop shll rex.X mov (bad) xor jl add jne rcr bts test mov adc btc or mov cmp jge sub jmpq jmpq fsubs test ficompl add push (bad) sar jno (bad) lgs cmp faddp cs push (bad) retq out lods sbb loop (bad) test pop mov cmp scas mov test (bad) (bad) (bad) (bad) jmp fnstcw rex.X jb fnstcw out int jne lahf insb lret pop (bad) adc mov (bad) (bad) std (bad) leaveq idivb add add cltd xchg movsb or xor xchg jbe and cmp push jg scas (bad) cmpsb vandnpd jbe sbb fimull and int3 mov jl pushq test sub sar ds xchg (bad) jbe add gs leaveq mov (bad) rex.WB (bad) outsl rex.X add or xchg adc add add adc jmpq jne ror btr inc neg mov clc clc add bt movzwl sbb btc sbb mov jmpq pushq jmpq jnp fisttp xchg add je loopne cmp mov or (bad) add lods cmc fidivr add rex.WXB pop pushq or retq ss mov sub xor cltd jmp leaveq rex.WR rex.WRX xchg mov and test sbb rex.W je (bad) (bad) (bad) (bad) std or mov test insl mov cltd addr32 loope (bad) (bad) std clc xchg test jle lods (bad) add jmp add add or and imul (bad) jge xor adc push out rex.WB callq insb sbb cmp adc cli xchg sti movsb adc cmp sahf cmp mov hlt movsl out fadd sub xchg loope xor lods mov add mov sub stc test jmpq stc bt clc bt sub jmpq rex.R and test mov jbe adcl (bad) rcll or pushfq (bad) out mov sahf sbb pop in xor shll mov imul jmpq mov fsubl jne test cmp jl or mov scas sub (bad) fdivrl in jl pushq pop cmc (bad) xor mov (bad) cmpsl (bad) cmpsl stos mov rex.R cmpsl and mov add loop lods sbb mov xchg jl rex.W pop (bad) in fld sti imul bswap (bad) or leaveq (bad) rex.W pop sub movabs rex.XB lahf (bad) mov mov (bad) add popfq div adc cs jmpq cmp mov xchg jmpq imul lods loop add cmpsl sub negl (bad) mov xchg rex.WR scas push mov (bad) (bad) data16 rex.W jb and jns cmc movabs fist (bad) add add or rex.WX cwtl mov mov mov outsl ja retq push mov jbe mov rex.WXB adc mov adc mov add cmp xor (bad) sbb and test jns ss (bad) (bad) mov (bad) cli (bad) cmpsl rex.WRXB jp (bad) (bad) mov outsl movabs (bad) fadd hlt rex.RXB lret cld xchg movabs (bad) (bad) rex.WRX sbb xor mov (bad) repz out callq outsl mov sti sbbl (bad) (bad) (bad) insb mov rex.WRB mov push es fildll and and js xchg mov xchg sahf test test fwait or orb xlat addr32 rex.X sub push rex.XB (bad) (bad) (bad) (bad) (bad) mov xor test retq mov (bad) in ss (bad) sbb mov jmp xor (bad) xchg mov std pushfq negb out cmp shll nop (bad) ss (bad) mov add movb (bad) adc retq clc cmp jmpq clc jmpq jb cmc bt cmpb jmpq xor jmpq jne jmpq movsb (bad) lods imul sbb jrcxz popfq sbb shl (bad) sti jmp (bad) sub (bad) stos (bad) push mov pop and (bad) rorb in add rex mov nop (bad) (bad) push pop cli xchg and (bad) rcr js cltd or fstpl xchg or sub mov mov (bad) (bad) (bad) sti pop rex.RB jnp (bad) (bad) (bad) incb pop jns xchg xchg jnp rex.WB pop xchg idivb ds (bad) mov xchg adc jmp xchg repz rex.WB retq lret push fsts fs (bad) movabs test xchg sti sub (bad) (bad) callq cwtl sbb (bad) decl rex.WRX enterq mov out (bad) (bad) mov fwait mov movabs or movabs mov (bad) rex.RX loop out movslq leaveq add test pop sbbl stos pop push jge fwait sbb movsl rex.WR and or in or jp sbb and xor cli sti imul sbb neg js rex.X mov scas mov add and jmpq push push xchg jg adc lea lods (bad) mov mov loop,pn enterq (bad) lods sahf fwait mov repnz lahf (bad) (bad) push fwait mov lret push xlat mov insl add push rex.RB rex.RX xor jnp xorb sarl rex.XB out test (bad) scas fist adc pop in sub (bad) (bad) (bad) decb (bad) (bad) (bad) decb cmp xchg rex.WRB rex.X sub mov or enterq xor push sbb cmp adc mov lret add lods xchg fsts cmp lahf cmp mov (bad) lahf mov pop (bad) lret add movabs jrcxz jbe outsl pop mov (bad) mov add lods cld ffree addr32 outsl sarl enterq (bad) adc (bad) out lods rex nop fidivrl rex.WRB rex rex.RXB push (bad) (bad) (bad) decb pop stos push pop jne and lahf addr32 rcll rex.WR cmp mov cmc (bad) js test sbb or and jl in stos add mov imul add cwtl cmp (bad) mov outsl mov (bad) xchg in loopne lods sahf cmp loopne movsb pop jbe sub pushq rex.RB pop retq popfq add lock sbb (bad) xchg sahf div jle push cwtl cmp adc lret stos and push adc xchg (bad) (bad) (bad) (bad) decb sar (bad) push fxch hlt jae test out rex.WX or (bad) push negl push rex.WX int3 sarl sahf mov stos mov rorl rcrl movsb incb loop loope push shlb sarb cwtl rex.RB (bad) pop cmovp in rex.WX fldt pop std divb data16 mov leaveq jmp mov jmpq (bad) pop sbb adc mov sarb rex.X xor pop gs xor jns roll mov rex.RB movslq lods xacquire mov or (bad) (bad) stc push cvtps2pd jns mov jbe cltd and mov xor (bad) rex.RX sbb std jg xchg stc cmp lahf addl push (bad) xlat (bad) jo or (bad) (bad) loop (bad) (bad) (bad) decb (bad) (bad) (bad) jmpq mov rex.WXB sub xor scas sub pushfq sti sub or (bad) imul (bad) mov or jle lret jrcxz repz movsl sub pop insb rex test lret (bad) pop (bad) add sub xchg sti out lret xchg (bad) or hlt cmp (bad) in or lods iret or cmp xchg (bad) rex.WRX lea or callq jns adc mov lret push xor fidiv adc imul (bad) stos push add (bad) decb in xor out add adc es push mov mov mov cmpsb mov (bad) xchg sbb in hlt pushfq test rex.W sbb or (bad) retq xor xchg mov mov mov rcl rex.WB jno sbb sti adc (bad) mov jbe adc jne cwtl (bad) fdecstp (bad) (bad) (bad) (bad) pop rex.X callq mov or test (bad) cmc jmpq xchg (bad) andl pushq xlat adc xchg repz mov add fistl mov (bad) jnp (bad) mov cld test cmp fwait rex.WXB lahf xor rex.R fcmovu adc std stos rex.WXB insb add cmpsb sbb cmc (bad) stc stc test (bad) and ss mov mov int xchg (bad) mulb fbstp pop (bad) (bad) (bad) sti add (bad) (bad) sub out (bad) (bad) pushq add add insb (bad) and cmpsl cmp sub xchg (bad) xor fcos (bad) (bad) jmpq js cmp xor icebp cmp stos lret adcl xchg lahf iret out roll xchg fadd out xchg movsl cmpsl lret mov pop stc mulb jo xchg lret adc sub rex.WX pop addl negb (bad) test movabs sti nop mov fs jmp (bad) jbe test xchg (bad) sbb sub xor cltd test int3 popfq cmpl (bad) movsb lret cmpsb pushq sub adc (bad) cmc and cld jae mov jb pushq scas js push mov jmpq jge rex.WXB rex.RX pushfq retq add lods sub rex.RX es xor jl je (bad) (bad) sti mov (bad) (bad) (bad) jbe (bad) (bad) repnz (bad) push cmpsl (bad) fmull imul pop mov repz rex.RB jnp pcmpeqw mov loope sahf mov (bad) jb or fs in adc sbb shrb jne nop movslq and sub (bad) (bad) jmpq jmpq bt sub jmpq jmpq jmpq bt cmc test jmpq stc cmp jmpq jmpq (bad) lock clc loope jae fmull fsts xor lret adc std jmp and adc test lret in cwtl cld loop loop mov rex.WRB repz jae jmpq lahf test addb push xor (bad) mov rex.WX stos (bad) stc sbb push xlat (bad) (bad) (bad) cld pushq stos (bad) xor (bad) (bad) callq xor (bad) leaveq add sub push jl fidivl pop xchg sbb (bad) pop jmpq cmp add rex.W enterq stos lea pop mov repnz xor sub fnstsw rex.W rex.WXB pushq (bad) test lcall (bad) and rex.RXB rex.WR jg adc ss or sti fcos jmpq mov lea btr mov shl add dec add sar mov clc stc jmpq lea jne callq bt clc or jmpq cmp jmpq js dec cmp cmp xor bt jmpq callq jmpq jmpq cmp cmc cmp jl jb cmp cmp cmp jmpq (bad) mov and ds pop rex.WB adc xor jl (bad) cmp sahf mov (bad) mov repnz movabs or jle (bad) imul pushfq cmpsl in mov hlt movabs in mov sub rex.X stc mov (bad) mov shll andl sbb dec adc enterq jrcxz sub (bad) mov sti jo xchg pop adc and push sub push (bad) (bad) xchg mov (bad) (bad) (bad) faddl hlt and (bad) (bad) sub (bad) cs and (bad) and rex.RXB sub rex.WR shlb (bad) rex.B sbb inc mov sahf cmpsl int3 pushfq add pop adc mov adc test push add stc mov test bt test test test jmpq ja je clc sub cmc add shrd add and lea bts ror mov cmp mov stc repnz jmpq jne xadd mov sar inc cmc stc sub inc ror sub mov clc sub cmc stc pushq bt cmp jmpq es xchg sub int xchg in fldt mov shll retq js xor loop xchg fldl jo or and test std loop in (bad) add xchg or xor icebp add cmp (bad) sub xlat xor mov (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) jnp andl hlt loope add (bad) stos mov pop vunpcklps insb sbb add test test in lea data16 movsb punpckldq (bad) imul and cmp jbe fisttpl jl xchg retq adc imul add scas leaveq stc (bad) push fcompl or rex.WRB mov lret jrcxz repnz (bad) lea xchg rex.WRXB test int3 retq lods mov stos push std and retq pushq rex.WRXB bswap or test andb data16 rex.RB sarl cmp rex.RXB es rex.R adc push (bad) outsb rex.B rex.B xor rex.RB stos (bad) xchg rex.WX push push (bad) loopne xchg mov rex.B orq sbb in fnstenv (bad) jne cmp fstps mov jp rex.R js xchg mov pushq sbb add add or cmp sub cmpsl pushfq mov cmp mov sbb rex.WB ficoml rex xchg mov adc (bad) pop je mov push movzbw mov mov stc cmp stc sub jmpq callq jmpq jmpq add jmp mov movsb test or pop pop cmp subl mov rcll (bad) sti out rex.WRXB xchg (bad) push rex.WRB rex.XB rex.WRX loope mov (bad) cmpsl fdivr jg loope (bad) incb cwtl (bad) adc and xlat callq fdivrs outsl and cmp rex.RX push rorb stc sbb idiv (bad) (bad) decb (bad) (bad) (bad) incl (bad) mov (bad) movabs (bad) imul jg (bad) fistp lret (bad) xchg movabs xor (bad) jle xchg mov xor rex.R lods add (bad) jns xchg mov sub sahf movabs je and jns in stc push (bad) pop (bad) (bad) xor jns sub cmp xor (bad) jge jg (bad) insl mov (bad) and iret test sub xchg fsubrs (bad) xchg jno int (bad) movsl loope or (bad) sbb insl and cmpsb mov push rex.XB cmp mov mov add xor jle mov mov scas fbstp movabs rex.W fsubrl adc xchg mov adc (bad) gs adc cmp cmpsb scas movabs pop cmp add xchg scas faddp movabs ja ja mov repz sbb or mov or jge cmpsb sub gs xchg cmp mov fdivr (bad) (bad) decb cmovae or (bad) out rex.B fbstp movabs mov mov (bad) pushq (bad) jrcxz (bad) mull xchg std mov mov jg (bad) jae and mov gs movabs adc nop mov sub inc xchg repz add in cmp repz sbb sbbl add repz add mov jmpq jae bsf add mov cmp movzbl movzbl mov inc sets bt mov stc test xor clc jmpq jmpq imul cmc stc jmpq fisubrl xchg scas rex.RXB and sub or fsubl je cmpsl jmp movsb sbb rex.XB clc mov roll pop pop pop mov sar pushfq shrb (bad) in movsl push (bad) mov clc sarb outsl mov lahf fwait jmpq add in adc in mov (bad) jmp stos mov out mov (bad) retq cs rex.W repz cltd in scas adc (bad) (bad) (bad) sti lods (bad) cld pushfq movsb (bad) (bad) (bad) (bad) cwtl xor rex add mov jae pushfq shll add add xor xchg mov icebp pop or in cltd scas add nop rex.WB in ja out ds jle adcb (bad) cli pop imul imul fist mov rex.R mov adc je test test bt stc sub cmp jmpq addr32 mul pop push add jrcxz pop (bad) icebp mov push (bad) sahf mov (bad) (bad) sub pop (bad) pop (bad) rclb stc ffreep stc sahf add subl movabs cld retq xchg xchg xchg mov xor mov sub stc cld lret lret jno rex.WB ds (bad) push insl rex.R push in sub imul rex.W int3 sub fdivs push cmp sub fist (bad) lret icebp loope mov sahf mov rex.WRB movsl (bad) insb mov divb movabs std test (bad) ljmp movslq mov and shll pop sub mov loopne xor sbb fildll lret insb scas mov or (bad) xchg sub push fsubrs mov ficompl sti (bad) xorl and xchg bt and not sub sar bt add rcl setne mov shr mov stc repnz jmpq xchg movsl js loop scas shrl sub add (bad) movslq movabs jnp scas rex.WB add sbb retq gs mov mov lea (bad) (bad) rex.RB pop fildl add out jrcxz xchg ds std je jne imul (bad) ljmp idivb pop xchg add adc pushq xchg mov sub pop repz jge js xchg data16 jmpq jge fsubrs mov fist rcrb sub hlt add rex.WXB xchg ljmp mov sbb push cmp bswap bswap lea jmpq and mov es pop mov sti pop push sub jno pop xlat rex.XB fs rex.WRX jmp test rclb xor frstor addr32 rex.RB clc cwtl (bad) (bad) mov and cli in or xlat xorl stos jnp fnstcw xor sub insl xor movabs lea clc jp mov (bad) (bad) sti (bad) lret pop (bad) (bad) (bad) (bad) sub movsl fucomp push lods add (bad) jae rex.R ss outsb jo mov (bad) (bad) (bad) ljmp jp iret test jo rex.XB adc pushfq pop push xor in rex.XB mov fidivl fisubl in in pushfq add mov jo mov rex.WRB add (bad) mov sbb add bsr shld jmpq je jmpq add test stc bt movzwl bsr mov cmc add jmpq bt test jmpq jne clc jmpq jmpq jb bt cmpb jmpq jmpq jmpq jmpq jne inc mov sbb neg sub movsbw mov cmp stc sub bt stc pushq cmc stc clc stc cmp jmpq jne shl jle xor or sar mov shr add bt sar and mov test bt bt test jmpq jmpq lret out cmp jmpq xor (bad) push cwtl frstor iret test in or adc and mov add (bad) mov (bad) or (bad) retq sar push (bad) sbb xchg sti lret icebp out int xlat xorl pop in and (bad) sbb push repz lahf and rex.WR rex.B push mov cwtl in (bad) (bad) (bad) sti imul in out repnz fsts (bad) pushq (bad) (bad) (bad) callq movsb or rorb pop int3 (bad) out movabs adc rex.R xor cmp and mov and (bad) mull rcr mov jbe mov mov sbb or gs jmpq rex.RXB movabs mov cmpl rex.WXB sar cmp iret cltd decl or push (bad) roll leaveq sahf rex.WRB adc popfq add rex.X es lret jne jne add movabs (bad) int3 imul pop imul mov fnstenv xor cmp (bad) (bad) (bad) ljmp fld xor cmp sbb roll (bad) xchg out data16 loopne negl ja or add add (bad) icebp push rclb fidiv and insl jnp jns in ss movabs sti or adc mov mov insb mov rorb fnsave shlb scas mov stc mov mov sbb adc pop rex.WB xchg xchg rex.WB or pushfq and add lret or outsl push sbb or (bad) pushfq rorl xor (bad) vpmaddwd (bad) adc stc push out (bad) test pop pop lret jg pop mov je imul pushfq cmpsb test mov movabs push sbb sub imull adc xchg mov stos mov bnd rol out push data16 jmp in jge leaveq add xor decl and rex.RXB pop rex.WRB lea ljmp adc mov lea jl callq adc jmpq (bad) push xor push jg cmp xchg push jg mov mov rex.WR rex.W and mov (bad) jne (bad) pop stos add pop (bad) rex.XB repz (bad) xor add popfq (bad) stc shl sbb cmp or xor jge push repz (bad) sahf mov xor scas xchg (bad) or (bad) (bad) (bad) decb mov fwait push repnz (bad) movabs testb (bad) (bad) jmpq je lods (bad) loop jns cmp jmp push and sub (bad) adc movsb sub pop sbb icebp (bad) rex.RB mov rex.R (bad) (bad) (bad) (bad) scas (bad) callq xlat xchg mov mov jnp int3 mov rex.WRXB or xchg mov (bad) pop mov shlb jge loope negl js nop xor add test add movabs or jrcxz cwtl jo rex.X mov movslq rex.RX rex.WB js sti leaveq out adc cs sahf sti cmc pop pop leaveq in mov cltd pop movabs or or in jne or adc movabs je xlat jp,pn lods (bad) idiv jnp (bad) pop rex.B rex.X (bad) int lods test xchg test sbb movabs mov pop movabs (bad) loopne hlt rex.RB rex.XB and adc inc pushq mov sbb jne dec sub shrd bswap btc mov test add ror add rcl mov mov cmc test jmpq jmpq jmpq jb stc cmc jmpq cmp cmc repnz jmpq xor sub bswap sub jmpq jmpq je jmpq movslq out (bad) data16 push cld lret in pushq cmp or lea cld (bad) rorb gs vpunpcklqdq mov test cmp (bad) std imul scas jrcxz repz scas add xchg shrb add pop movabs lods fdivl mov rex.XB rex.WRX int imul sbb pop outsb retq xor (bad) jmp outsb xchg mov pop cmp and xor rex.XB sti xor loopne test sbb fistpll fist (bad) (bad) lcall gs test pop adc iret xchg pop mov nop adcl push (bad) (bad) xchg xchg mov out rex.RXB fdivp rex.RX (bad) jo jnp movsb shrb cltd adcl adc loopne fnstenv xchg rex.XB and adc jmpq jb cmp cmp jmpq je rcr sar push sub mov cmp setno sub lea bswap lea jmpq std neg cmp gs cmc (bad) lods and (bad) mov sub or fdivrs mov adc hlt in sahf rex.WB adc cld xorb int3 movabs pushq (bad) loope retq cltd cmpsl adc je and xchg cli sbb xchg mov subl movabs cmp (bad) out jns push (bad) jno mov sti sub (bad) (bad) (bad) (bad) sbb fcomp (bad) iret cmp cmpsl mov push cmp push jge jbe (bad) (bad) (bad) lcall (bad) add push or retq movsb mov mov icebp xchg sub rex.X cs cmp pop xor (bad) xchg mov out mov and rex.RB rex.B mov and xadd mov bt ror shld sub lea setnp movzbl movzbl lea jmpq (bad) loopne mov add loopne mov xlat pop loopne fsts add jo cli loopne nop (bad) jno xchg jrcxz loopne outsl sbb jp movabs mov (bad) loopne xchg shrl jbe in in mov stos sar loopne insl in addr32 xor sub xor cltd loopne add loop (bad) shr pushq (bad) imul sahf movabs sbb in loopne adc and in insb loopne (bad) mov jge callq divb shll in pop loop fdivrs adc movsl hlt loopne rex.WXB or push (bad) out rex.XB rex.WR pop add add loopne or ja or sbb (bad) (bad) out fdivrp pushq lods mov rex.WRX js,pt (bad) scas loopne stos enterq (bad) shl cmp (bad) and cmpsb retq mov (bad) mov fs or jmpq push nop or sbb out nop/reserved mov roll loope movabs mov sahf in add notl test jo mov (bad) mov ja rex.X int (bad) leaveq fucom sub rex.WRB out jmpq rex.WX shl jmp movabs jrcxz (bad) (bad) cmp (bad) movabs outsb rex.WR cmc push mov rex.W jae std pop and decb loop rex.WRX adc out fdivs popfq test (bad) sub rex.WRXB mov sbb scas (bad) js (bad) movabs movabs and sbb jbe in (bad) (bad) adc movabs jb jmp adc loopne jp add push retq cs sahf xchg cmp (bad) stos fcmovnb in loopne loop out pop es pushfq mov ffree xor lret jne cmp or mov lock stos shr rex.XB insl rex.WRB fs sbb jno clc loopne sbb stos (bad) rex.B cld or js mov cmpsb shl cmp movabs cmp ss loopne xor mov stc pushfq loopne xchg xchg (bad) test jmpq insl cltd retq rex.X adc rorb rcr loopne mov jns loope adc xchg fbld gs push insl or mov loopne (bad) sbb (bad) outsb loope imul rex.X adc fs (bad) jg cmp sti (bad) (bad) fmull mov loopne add rex.WRX rex.WRB std (bad) sub xor xchg mov add add clc or outsl lods sub pushfq loope cmp xor xchg shr cmp es mov mov rex.XB loopne rex.RXB (bad) roll fimull jg jb rcll loopne xchg fstpl mov and ljmp gs leaveq rex.RX loop pop loopne clc mov (bad) addr32 mov enterq fsub test in (bad) std data16 xor add (bad) mov mov and jg lahf scas jmp stos mov mov sbb in movb rex.B iret (bad) retq stos mov jmpq jae psubw js mull xchg jmp vpavgb (bad) movabs mov xchg add rex.W idivb pop orb (bad) ja decl jae addb sbb mov loopne (bad) or cs loopne adc sbb jns and add loopne stc fwait cltd (bad) mov xor jbe ja rex.RB cltd (bad) mov xor rex.WRX xchg retq sbb rex.B rex.WRXB xchg test and (bad) (bad) sbb nop (bad) jbe xchg pushfq (bad) add pop or cld ds pop outsb and cwtl xchg rex.R movabs stc jp cwtl (bad) cs sahf jo mov and loopne lret popfq repnz (bad) (bad) jmpq jo addb jmpq out push rorl loopne mov pop int3 out xchg (bad) loopne,pt stos movl pop (bad) mov out vpavgb (bad) js insb movslq pop addb (bad) movabs shll add loopne cmp (bad) out (bad) jo loopne (bad) in imul mov cmp (bad) outsl callq callq stos (bad) in ss jg (bad) lods (bad) cmp (bad) frstor lock sbb adc shrb mov xchg and jne rex.RXB fiadd in mov xor sbb jmp pop subl xchg rex.R sub pop jrcxz rex repz insb andl cmp out adc push mov or popfq lret (bad) mov or subl mov in mov test loopne jle sbb cmpsb or (bad) sti je mov outsb loopne,pt add mov loopne or and jnp xchg xchg icebp xchg mov or mov loopne stc (bad) jae pop (bad) lret xchg rex.WB xlat shll lock xor loopne stos mov mov (bad) repnz movabs sub test loopne jno or loop repz xchg fsubs mov adc ss mov pushq sbb movabs loope test enterq sbbl loopne imul loopne push rcl movabs cmp enterq jnp xor divb loopne lods retq or cli retq push and js rex.WRB add loopne mov mov out retq test jl jne (bad) loopne or sbb add xor movsl xchg sub (bad) xor adc rex.WB sub loopne xor cmc out rep mov (bad) lahf mov mov (bad) loopne cmpsb jp je callq mov (bad) icebp cmp test (bad) jle loopne xchg (bad) jnp mov out push (bad) xlat sarb sahf out fs jne add rex.WRB loopne rex.WR cmp lret (bad) or jne loopne push (bad) sub loopne mov out icebp shr stos movabs insb or xchg xlat pop loopne movsl enterq scas je jnp rex (bad) lret mov mov idiv cwtl add rex.XB mov ds cmp mov adc rex.WX rex.R outsb lock popfq xchg enterq jbe pushfq loope rex.XB cmp sbb or sbb test imull mov rolb pop test rex.XB lahf mov int3 lret sub xchg enterq fneni(8087 cwtl callq in mov pop xchg (bad) (bad) (bad) xor loopne sbb int lahf (bad) in rex.WRB es mov adc xchg add and fmul push sub fidivrl or test mov loopne jg movabs xchg sbb pop jmp fnstsw sbbb loop (bad) movabs xchg test int3 fnstsw mov mov rorb mov (bad) insl (bad) xor pop cltd leaveq scas sbb sarl pushq (bad) rex.RX rex rex (bad) mul nop rex.X mov rex.RXB or clc loopne imul es xor sbb add adc (bad) callq sub enterq adc sub cmp and stos sahf and xor add lods enterq sbb and (bad) pop clc mov jo rex.W rex.RB hlt sub in pop movabs callq in inc adc iret js movabs jrcxz rex fs nop int movabs xchg test xchg xchg enterq imul (bad) (bad) rex.W int pushq rex.WB xor push movabs iret je movabs rex.W stc loop (bad) movsl lock lock (bad) cs (bad) jrcxz rcl addps cli rcr mov shrb xor outsl (bad) (bad) orb nop xchg in movabs cli xlat pushq iret mov rex (bad) sub pop (bad) stos stos incb push (bad) xchg stos (bad) ds rcr xchg mov enterq or enterq mov jmp clc or rcl mov xchg jle repnz mov nop (bad) jno push sub rorb mull test lock mov jbe xchg lahf fbld cmp sbbl add mov and out mov (bad) pushq pushq sub pop xchg xlat nop test mov (bad) movabs int enterq mov (bad) movabs (bad) and xchg lock nop sub sub (bad) mov xchg in shrb (bad) cmc add rorl test mov shrl cmpl sahf xor cs fdiv mov test rex.RB mov lods rex.WXB callq mov out xchg repnz sbbl cmpsb sbb mov xor mov mov lods jg xchg lods in lock jbe jbe sub out clc mov mov sbbl mov fdivp (bad) mov callq movabs xchg test iret in shl test movsl xorl xor clc add stos movabs or movabs mov in cwtl xor clc fs rex.X jo cmp sub cli je jrcxz movsl sub test insb test sahf js (bad) iret jo push or adc mov out in jmp icebp loopne iret (bad) cmc hlt repz loopne div std cld sti cli shl (bad) (bad) retq enterq int3 lret lret shrb cs (bad) rcl fchs fcom (bad) fstp fcmovnu movabs test lods lods stos stos mov mov mov loopne mov mov loopne lahf sahf test xchg xchg (bad) nop out add jmpq xchg cltd cwtl xchg xchg popfq (bad) pushfq fwait (bad) (bad) in lret callq fisttpl cwtl cmp loopne out movabs cs mov (bad) fsubr (bad) sub mov out (bad) nop xchg mov (bad) push mov outsb movabs xchg mov mov adc cli sub push jl test jl stos repz (bad) decl jmp in (bad) lret test mov rex.X pop jle orl xchg jl mov movb int3 mov xchg hlt lahf fs mov fidivr mov mov cld imul xchg ror addr32 incb pop adcb jae test movl cmpsl sub sub (bad) mov (bad) mov cwtl lret rex.RX lock lea pop data16 jp mov and mov mov mov in ss lret (bad) mov lea enterq lret scas jnp movabs mov lahf (bad) xchg mov rex.R cmpsb lods test pop movsb jbe mov (bad) js lret enterq scas fcoml out fimull xchg cmpsl test xor or rex.RX (bad) roll sbb cli cwtl test out rex.WX rex.WR or lret ss (bad) mov movabs mov (bad) xchg or adc fidivl (bad) cltd (bad) retq movslq push data16 push stos xchg in xchg lahf (bad) cpuid (bad) sub rex.XB (bad) lea xorl xchg (bad) sub and in xlat jp cmp (bad) add rex.RXB or rex.WRXB mov andb mov jnp (bad) rex.WRX xor mov xchg lret mov mov jo xchg std (bad) add repnz movabs (bad) outsb (bad) add retq push and lea movabs xchg push xchg es xorb int (bad) cld xlat mov fimul adc subb test rex.R adcl xchg mov and xchg xlat pushq (bad) test mov push (bad) rex (bad) rex.XB cwtl mov lock add lock sar iret pushq xor rex.WRXB sub add out push xchg clc imull add pushq cltd cmp out rcl cli cld or sarb pushq out and js xchg rex.WRXB sub xlat mov loope test xchg mov xchg (bad) mov add adc jrcxz mov jae (bad) (bad) jno (bad) lret (bad) fsub nop mov mov stos movslq (bad) lea cltd jne ficoml add stos xchg (bad) fnop sub mov lret fdivs (bad) in (bad) shrb cmpsl jg jo jrcxz and fsubl sti sub in jb fisubr callq rol add pushfq rex.WRX jne push (bad) cli (bad) in adc addr32 pushq loop lret jg stos (bad) in (bad) jle hlt jrcxz (bad) jmp movslq cmc (bad) (bad) jno mov pushq fsubrs (bad) test (bad) add ror sub or (bad) mov add test loope rolb push fsubrs in pmaxub jb mov (bad) jle test rorl fsubl jae cmp (bad) data16 decb (bad) loope (bad) (bad) (bad) rex.WRXB sub loope loopne incb mov or xchg ljmp decb cmp or shl (bad) jg gs (bad) imul loopne jno rex.WRXB rex.WRX jae jb js jbe jl loopne rex.B rex pop rex.RB rex.R rex.XB rex.WB rex.W rex.RXB rex.RX rex.WRB rex.WR rex.WXB push push scas scas push push push loopne pop pop push push pop pop pop loopne and (bad) ds sub (bad) es xor femms xor cmp (bad) ss add (bad) (bad) add or (bad) (bad) or adc outsl outsb adc sbb (bad) (bad) sbb loope pop mov sarl movabs xor or xor (bad) mov mov xchg sti mov xchg test push lods lea lret mov xchg cli (bad) test sub mov xchg mov movabs mov mov xchg cli clc mov add rol xchg nop jle stos sub or js xor out adcl mov fisub (bad) mov mov xchg jge mov xchg sub fxch xchg sahf (bad) jo sbb mov pushq enterq add xchg add pop ficompl xchg sbb sbbb sbb test fild rex.XB (bad) (bad) jns fbstp or mov mov xchg xchg jo xor push icebp cli xchg enterq xchg push mov xchg movabs loopne lods (bad) callq sahf mov movabs cmpsl clc movabs mov sahf or test lret rex fucom xchg lods rex.RX mov xchg test xchg rex.WRXB pop (bad) lods pop sbb lock movb cmp xchg test mov cmpsl pop movabs (bad) rex.RB (bad) cwtl rol (bad) ja sbb xchg enterq fcoms mov sbb (bad) or and in fsubp retq sub fcmovbe callq out (bad) int (bad) stos pushfq frstor fsubp (bad) ror mov iret mov fidivr fsubrl retq sub shrl fcmovb jmp rex cmc (bad) rex.W pushq sub (bad) xor fistpll (bad) mov mov enterq (bad) sbb lock mov test test out rex.WRXB lock cld rcl enterq popq movsb in (bad) mov movabs and xlat lock test outsb nop jmp bnd rolb rex.R adc rex.WR retq rex data16 pushq add out test movabs and lock insb (bad) mov sbb (bad) adc or add cmp xor xor sub pop (bad) data16 andl and pop cld pop pushq push (bad) rex.WR rex.R rex jl js test insb sub fs cmp out cwtl xlat xchg cld nop pushq mov mov sub xlat sar clc pushq callq xor out jo nop cld mov test add and js cwtl cld mov add rex.WRXB rolb callq test jo mov out lock movslq (bad) nop sub (bad) (bad) callq and cs xchg jl retq lret leaveq rex push lock lea jrcxz sub add xchg andb xchg rex.WR fldcw lock lock rclb xchg xchg sbb rex.RXB lret ror mov sbb mov mov out mov mov xchg rex.RXB out (bad) rorb rcrb (bad) push movsb stos clc test mov ficom mov xchg in in jl cltd xchg pushq mov in in xchg out scas (bad) xchg and enterq pushq out mov xchg push lock or in test fcomi cmp add rex sbb (bad) (bad) mov mov xchg test mov rex.WX lock add sbb mov test int clc mov lock lret mov (bad) sahf mov xchg shlb xchg xchg sahf sbb hlt mov mov xchg stos lock cmc mov pushq enterq retq out fbld (bad) xchg mov rclb mov (bad) cs mull clc cs lea repz add lock out lret je sbb rex.X ss (bad) (bad) out mov insb lock mov add decl callq xlat pushfq paddusb xchg (bad) fist (bad) mov lock mov clc mov movsb imul insb pop pushq jo rex.WRX (bad) lock outsl (bad) cli lods adc ja mov clc push xchg push enterq mov mov (bad) mov xchg loope andb cwtl mov movsl (bad) xor out cmp fdivp xchg jmpq rex.WRB (bad) retq vmaxss (bad) mov sbb clc mov idiv loop out jrcxz rex.WRXB out mov mov (bad) or test shlb and lock test mov lods movsl mov movsl add mov sarb sbb movsl test (bad) test sub test callq mov pushq rex.WRX and orb mov movabs clc lret clc (bad) callq lock mov add movabs lock push jo lock sub movabs lock and fcomp movsb movabs callq sbb lock data16 xchg es movsb sub mov lock je cmp mov scas xor mov mov test rex out lock clc in movabs or movabs xchg jo lock jo fildll data16 add cs movabs clc test mov adc mov add rex.RB xor xor fcoml xor adc jno sub scas and adc push pop js test pushq nop clc adc lock scas jo lock jo cwtl lock and xchg and lock lock nop mov cmpsl (bad) test shrb fistpll lods pop rex cmp mov add imul push (bad) insb lock in xchg div jmpq callq adc and mov mov stos je adc cwtl pop test mov mov mov pop cmp mov or rex.B cmpsl mov cmpsb mov lods lret mov (bad) mov nop xchg mov xor jo jl stos push xchg sbb mov (bad) cli hlt mov leaveq mov (bad) fsubrs callq push xor repnz in cmp mov clc pushq mov scas mov leaveq (bad) repz callq rex.WR callq retq lret (bad) movabs movabs xchg fsubs mov outsl xchg xchg in int xor es xor ja ror iret mov ficomp add outsl loopne add or int3 insb jg dec and movsb in jno sub xchg adc xchg rex.WB fdivl lock (bad) out in clc (bad) enterq fstpt (bad) fdivp movsb not addr32 fnstenv jmp (bad) xlat movsb movabs lods mov fcmovb (bad) cs retq ja movsb (bad) mov mov mov rex.WRXB fidivr mov cwtl addr32 ja or test test jl ja shrl cld repz ja fsubr add mov mov rex.WX loop jrcxz es xchg push push test cmpsl out bswap adc jmpq add sub fistpl pop iret jrcxz fnstsw (bad) mov jmpq jg,pn pop callq (bad) repz adc jmp sahf out jle xchg retq outsl or cmp mov rex.WX movabs push xchg (bad) xchg (bad) pop xchg (bad) jbe (bad) jne lret imul sub and jmpq cltd (bad) xchg iret movsb outsl loopne loop mov out cmc fsubp callq and out (bad) mov repz (bad) pop (bad) (bad) (bad) retq mov movsl ds ds jno addr32 movabs rex.WRB cwtl mov (bad) xor xchg mov outsb xorl cmpsl adc mov jns xchg sub mov jmp xchg or jnp rex.WRX xchg add movslq shlb nop xchg (bad) xchg mov (bad) (bad) pop fldz lea cs jo jb xchg (bad) add mov movslq (bad) (bad) stc mov lods (bad) sarl jl xor (bad) cmpsb movabs sub sahf pop sub and rex.B xchg out (bad) or fcmove adcl (bad) insl mov mov test test xchg (bad) sahf cwtl mov xor (bad) xchg cmp add jmp (bad) pop mov add pop xchg xchg rex.RXB add jbe scas mov (bad) movabs jmp std rex.W or rex.WRX (bad) pushq test push cmp or (bad) or int3 mov fidivl stos jmp mov xchg (bad) movabs mov imul rex movslq repnz adc mov movsl sahf stos sub mov sub cld mov rex.WRX rex.XB (bad) xor lret (bad) mov movb mov (bad) xchg fsubl lret rex.WRX callq mov fsubrp enterq out xchg (bad) gs xchg insl sbb popfq push (bad) sbb rex.WRXB fldl jmpq mov jno mov fldcw movabs rex.R fwait or cld rclb mov callq outsl out pop rex.RB movabs xor sti jp or xchg sbbb mov xchg (bad) lock jnp adc jle shrb mov fimul mov outsb add (bad) rex.WR pushq int3 mov cmp insb xchg rclb int mov xchg rorb (bad) rex.B mov sub lods xchg add test fldl lret test mov fucomi (bad) jmpq pushq (bad) xchg pop in callq rex.WRX and rolb cli mov pushq mov sub mov clc std mov sub or push test test outsb iret nop mov lea cmp insb loop (bad) rex.WRB cs jge movabs mov rex.WX cli pushq repz jbe cmpl (bad) cmpsl outsb mov scas mov rorb pop jne rex.WR sbb pushq je or cmpsb xor out rex.WRX rex.WR fcmovb test add xchg int cwtl mov (bad) test sbb cmpsb lea mov rex.RXB rol rcl (bad) jg (bad) sub xlat mov (bad) and pushq rex.XB cs jb (bad) movsl lahf xchg fdivp (bad) sub (bad) cmp (bad) (bad) test (bad) hlt jb lea mov loope pop xor cs lret stos mov fsubs add gs cmp or fldt pop push mov in pop mov or stos mov imul fisttp insl (bad) mov and xchg cmp mov or loope addr32 enterq mov rex.RB cmpsb cmp mov sbb push repnz fwait jmpq add (bad) dec xchg enterq mov xchg int movabs movabs (bad) (bad) popfq jb (bad) jp (bad) add (bad) sub movsb pop jl sub movabs cmpsl out xlat xchg movabs mov xorb (bad) js test jo movabs rex.WRX xchg cmpsb (bad) icebp in enterq data16 outsb fmul movslq cmpsl mov es pushfq xchg lahf xchg rex.WRXB (bad) ffree ror sbb and jrcxz (bad) repnz int movabs retq jo cmp cwtl lods ja cs mov int popq (bad) test push (bad) fidiv jp rex.XB or pop rex.WXB xchg sti rex.RX hlt xchg cli xchg (bad) fcoml mov jge xchg mov rex.WRX loope cmp xchg or adc mov rex.WXB or mov or (bad) jne (bad) jns rex.WX lea cwtl cmpsb jrcxz nop jns sub sbb push repz stos lahf cwtl pop add (bad) cltd outsl add xchg or retq (bad) jne xchg adc xor cmpsb rex.WR and retq leaveq rex.WB pushq scas xchg jno xor (bad) mov xchg je pop mov and pop rex.RX rex.WXB rex rorl (bad) xor in mov mov (bad) jmp cli stos iret lea sbb mov (bad) mov lods cmp (bad) cli mov movsb (bad) mov insb pop negb clc test pushq movsl jne nop rex.X mov (bad) add adc test out mov enterq stos (bad) retq (bad) mov movsl in mov shrb rex.B in mov jle cmpsb (bad) insb add mov (bad) sahf ds insl jp and sahf int3 in (bad) xchg (bad) scas (bad) mov sbb mov mov mov pushq push sbb lea pop leaveq sarb xchg cmp jae test pop cli movslq mov je rex.W je outsl xchg test ss sub scas (bad) xchg (bad) xor fdivs (bad) loope mov mov mov fcoms pushfq push jns push pushfq push cmp scas enterq movsb jb mov in pop test or es jnp jns lea loope lahf repz jne test mov movabs lret test out xchg (bad) lret idivb je xchg (bad) clc sub imul movabs movsb movsl popfq fdivrl cmpl test (bad) movsb add pushfq rex.WRX imul clc adc lea (bad) out retq repnz test adc cmpsb mov mov fnsave mov lods iret cld cltd fisub lret jns outsb std loopne test test (bad) (bad) mov xchg retq jg rolb xchg add lahf outsb (bad) xor pushfq jae movabs fcoms scas fsubrs pushq jo nop rex.WRXB enterq adc and rorb and push sahf js or adc cld add pushq out clc fcoms rex.WX test rex.W mov mov fdivr lock sbb sub add out mov sar pushq or add add out adc sub rex movabs rex nop (bad) lock rex.RXB push xlat pushq test lock out js nop cld mov clc rex.WRXB cmp out rcr rex.X test pushq out test sar movabs enterq add pop (bad) cwtl sub fsubrs rex.RB test cwtl sub fcomps pop insb test fdivrs xor rex.W cmp pushq or and jo nop out fcom callq pop test retq xchg out callq (bad) stos fimull cld mov or sbb vpmacsdd callq retq (bad) (bad) jl out jo clc faddp mov and insb or fist (bad) movsb fdivrp addr32 (bad) sahf je retq jmpq jns add fdivrs cs (bad) sbb and test rex.WRXB sar sub or (bad) (bad) (bad) lret test rex.WRXB movsb lret scas cld fcmovne rcrb and (bad) or movabs mov lods and cmpsl rex.RB iret cld fistp mov and clc fsub cld mov cltd push adc ror stc mov and (bad) mov push enterq movabs loop fscale add enterq mov pushq movsb mov nop push lock cmpsb add (bad) adc scas mov adc es stos rex.WRXB rex.WX adc rex.RX mov sahf xor mov rex.WB shrb popfq xchg (bad) (bad) loopne rex.WRB cmp shlb fucomi rex.WB repz sub add cwtl (bad) fwait and mov xchg push out movsl out int callq rex.WXB orl cmc lods jae and stc mov lahf rcr int3 (bad) in (bad) mov (bad) add (bad) outsb or pop hlt rex.R shlb pop mov rex.XB push lret out movq xchg (bad) pushq test movsl add sub leaveq rorb cmpsb xchg pushfq rex.R cmpsb sahf jl movabs cmp mov ja add out test repz leaveq jne xchg out jnp ds rex.R rex.W data16 or mov mov mov mov shr cmp int add rex.X test iret mov xor jne xchg xor loop xchg xchg (bad) and fsts adc (bad) mov mov movabs pushfq mov clc add cmp rex.WRX je jnp push enterq and jns mov cmpsl out sub (bad) repz fisubr jnp or fsub (bad) (bad) mov add and rex.W jno mov fucomp cwtl xchg cli rex.RXB rex.WB add ficoml adc movabs jrcxz in iret rorb rex.XB clc adc jae pop rcll rex.WR jns rex.RX push data16 push orb pop (bad) xor push rex.WRB pop rcrb and ss shrb pushq lock or (bad) out mov movabs sahf lret fisubr mov cmp lret sahf push rex.WRB lret rex.WRX mov flds mov cwtl or out clc mov or nop in mov push imul out sbb rex.WB rex.WB mov je adc lods mov scas (bad) scas xor fcom lret jbe (bad) mov enterq sub cwtl mov lret rorb xor mov out xchg xchg mov mov (bad) cld cmc cltd cli and jrcxz cmp and stos (bad) jmp movsb (bad) mov rex.RXB in mov add mov fistpll mov vpermpd mov (bad) xchg mov callq callq sahf mov mov add scas cmpsl mov sarb callq callq test movsl test mov movabs out (bad) (bad) sbb rex.W (bad) xor push xor pop (bad) or rex.WB cmp out enterq mov (bad) mov xor (bad) xchg jnp push leaveq mov or loope loopne movsl (bad) jne jmpq (bad) enterq js mov lock and adc jge sub mov xor pop gs mov rcrl fdivs gs cmc mov loopne scas movabs sbb retq xchg fsubrs (bad) xor push ds (bad) (bad) cwtl mov sub or mov mov repz sub rex.RX repz cmp (bad) rep test mov xor mov mov addr32 loopne rex.RB ss cs xchg shl hlt clc cmp fdivl add mov mov (bad) hlt xchg mov test loope pushq mov jns mov outsb mov neg clc lods cmp rolb push divb pop sahf mov xchg jae sbb and adc (bad) jne or jb adc clc test (bad) ss movabs addr32 in mov enterq mov cmp and stos xchg mov (bad) push rolb movabs retq xchg outsb sub mov (bad) fwait or lods sahf sahf mov (bad) retq lahf cli jmpq xchg leaveq xchg sbb out hlt xchg repnz jb (bad) lods cmpsl fs mov xchg mov rorb (bad) cli jg out pop jb mov xor int3 mov (bad) clc adc mov pop mov rex lret xchg cmpsb cmpsl outsb je scas lock imul mov mov movabs fbstp xchg sbb cmpsl cmp adc lock and movabs adc insl nop sahf sub data16 (bad) xor callq (bad) jo push lock mov callq iret pushq movabs movabs (bad) (bad) callq imul (bad) (bad) jo xorl xchg test mov movslq callq nop mov xor and mov mov pop mov stos clc and mov mov push mov callq test sub jnp jl and mov mov movabs lock fdivrs (bad) sub movsb lods testl rex.WXB adc push cld fcmove lock test mov (bad) mov mov iret pop test mov xor lods xor rcll (bad) jle (bad) sub idivl xchg iret rcl pushfq rex.R xor (bad) jnp leaveq add (bad) (bad) (bad) popfq (bad) (bad) cld (bad) insl fsubs movsb xchg int3 frndint callq movsb stos mov movsl int3 mov jo xlat movabs xor fdivl push rex jl rex.XB cld (bad) pop test mov in add rex.WRB mov in clc pop jmp es lock clc xor hlt sub fnop (bad) mov repnz (bad) mulb cmpsl (bad) (bad) jne sub sub mov hlt jo ss jo jnp jbe cs (bad) rex.R hlt rcl movswl test cmpsb pop movsl (bad) test lods imul adc test (bad) hlt (bad) mov test test rorl mov (bad) (bad) pop retq data16 (bad) je xor fcoms out test sub div fcomps jp nop/reserved (bad) mov hlt (bad) addr32 nop movslq mov leaveq rcrl (bad) hlt or jne xor test add push fcoms gs add (bad) cmpsl (bad) xor fs (bad) ds movsl (bad) pushq lods movabs test movsb clc insb cwtl imul retq push clc mov (bad) out (bad) sbb je xchg (bad) inc mov ss fdivl (bad) add test (bad) dec je test rex.W repnz imul shld fsubr jl (bad) or mov xor (bad) clc movsb movabs sbb pop jmpq cwtl rex.WRB or callq sarb (bad) mov (bad) cmpsb lods xchg rex.RX cld or xchg movslq mov out outsb jge movslq sub add clc imul jl jo (bad) xor (bad) mov imul callq mov (bad) stos enterq (bad) (bad) (bad) fmuls add hlt xlat insl stos movabs sub fsubl hlt andl es int push enterq jo fcomps sub int pop mov movabs (bad) xchg lret and lret add cmp pushq lock mov push (bad) out movabs imul hlt mov cld lods sbb jle (bad) cwtl fs insb mov imul hlt (bad) js fmuls push std rex.W hlt mov stos callq pop xchg (bad) rex.WXB cmc enterq (bad) lods cs mov rex.WRXB rex.WR (bad) insl rex.R or add fisubr (bad) push movabs iret sub callq (bad) (bad) jne xor iret movsb add fild stc pushq stos lods add mov out (bad) xor ja (bad) rex.WRXB xchg insl and mov movabs (bad) sbb (bad) (bad) fistp outsl fdivr cmp add ficom xchg adc rex.XB (bad) pop out mov rex.WRXB stc sub outsb rorl rex.R stos (bad) sarb iret fs add (bad) (bad) repz pop (bad) mov fmull outsl (bad) iret decl iret rex.R iret rex.WRXB stc sub outsb rorl push fiadd push add out imul in jle,pn jno pop fild (bad) out and and cmp mov add lret outsb fnstcw sub rorl insl add (bad) rex.XB lock sbb (bad) (bad) out callq insl sbb ficom stc sub and jg insl rex.R pop movabs (bad) stc sub outsb lret callq iret insl outsl pop cmpsb (bad) xor test cmpl (bad) add sub rex.WR adc repz mov rorl insl add sahf sub and fnstenv jge rex.X (bad) push iret movabs sub sarl rex.R iret rex.WRXB cmp (bad) push iret movabs in je push retq es mov (bad) movslq outsb lret in (bad) pop iret movabs stos nop mov pop iret movabs iret xor iret (bad) repnz jrcxz (bad) or add push fldl stc (bad) or outsb pushfq iret insl movabs sbbl movabs loope sub cltd mov retq mov fcoml callq movsb in rex.R push out jnp mov cwtl xor fchs imul cwtl xchg xor out cwtl xchg cmp fsts xchg movabs in rex.R push mov rex.WRXB pushfq insl add sahf sbb adc scas fwait insl or ficom stc sub outsb rorl insl add sahf sbb rex.WRB (bad) (bad) sub jb sub mov fincstp pushq mov out mov rclb stos leaveq jge add (bad) cmp (bad) stc sub outsb rorl out xor jp out cmp retq enterq notl std (bad) mov rex.X (bad) repnz jg (bad) stc sub outsb rorl insl add fidiv (bad) or jb xchg cmc ja push (bad) xchg loope out (bad) fild stc pushq rex.RXB (bad) stc sub sti and fild (bad) repz (bad) xchg iret mov fisttp insl add and iret pop enterq movabs jge fild (bad) repnz pushq add fimul insl add movsl xchg out jbe xchg rcll fsts mov mov loope xchg adc push (bad) lods xchg lahf loope xchg jbe (bad) data16 lea mov mov and (bad) mov shlb adc mov (bad) pop (bad) icebp stos lahf (bad) movsb sbb movabs rorl lret out (bad) enterq cmp (bad) popfq rex.B notl push lahf leaveq lret (bad) mov retq retq xchg movabs xchg fisubrl (bad) adc xchg lret (bad) leaveq add lret xor insl (bad) xchg test jbe mov xor test inc lret (bad) (bad) mov test enterq data16 sub (bad) fnop jnp jg (bad) mov xor (bad) rex.WXB mov popq mov lock (bad) lods mov out popfq sub jne enterq (bad) jae sub lret fisubrl callq js add mov (bad) mov mov clc xor rex.X push data16 (bad) jns (bad) rcr (bad) cltd out mov cs movsl xor xor mov test mov fadd (bad) add mov pop pushq in test sarb (bad) fstl cwtl mov (bad) mov stos jo test or mov cs add adc insb addr32 xchg cmp shr or repnz js pop add (bad) fisubr rex.RX in and mov xchg xchg rex.WRXB sub push (bad) (bad) (bad) mov stc jnp sub out xchg ss movabs mov leaveq ss rex.XB insb scas lret jle xor mov and retq enterq xchg out (bad) xor sub sbb sub repz mov adc fdivl loopne xor rex.W jmpq push xchg (bad) mov test rcr idivb faddp (bad) fcoms (bad) scas xor pop pop adc loope mov callq (bad) sub movsl rex.WRXB movsl mov test rex.WRXB mov cmp enterq repz lret retq movabs xchg test cmc xchg mov adc mov mov pop in lret fcmovbe fcoms pop jns in and mov (bad) ja xor movsb rex.WRXB rex.X fbstp fidivr jg rcrb and pop and mov add scas sub es imul add mov push adc (bad) (bad) out (bad) lock adc (bad) xor xor mov out (bad) jb (bad) retq movabs lret mov setl rex.WRB push rex.WRXB (bad) int adc mov jo lret (bad) cmp movabs lret xchg mov (bad) rcrl mov xor sbb xchg cltd cmp sbb cmp mov xchg (bad) sbb repnz adc test (bad) outsb sub add cmp fsub mov cmp mov mov callq pop out int3 ljmp cwtl pushfq out xchg cmpsl lods mov rex.R rex.X bndstx mov (bad) stc cwtl mov adc rcrl rex.WXB jne mov and icebp or or cmpsl jp jmp test jl push jae xor and test add jo loop push rex.X in ja retq fcmovb (bad) pop movabs cmpsl callq add (bad) sub movsl (bad) stos movsb mov rex.RXB rex.WR (bad) or stos test xchg movl ficoml adc or add sub in or out xchg (bad) gs movabs add rex.WRX fs iret pop lods mov sub (bad) mov jo sub fdivrs fistpll out mov insb mov xor movsl or (bad) test cs movsl pushq mov rex.WB rex.WRX rex cs (bad) movabs adc rcrb movabs (bad) lock rex.RXB rex.WR movsl out sahf mov out mov stos lret rex.WX retq mov rex.R (bad) mov repnz data16 fnop pop sub xchg jbe pop (bad) rex.RX (bad) (bad) jo rex.WRXB (bad) add rex.WR lock test fistl sbb lahf (bad) out (bad) mov (bad) mov or rex.WRX addb xchg rex.W mov rex.WRX lods sbb xchg lods lret ds fwait sahf cmpsl test jno fcomip rex.XB (bad) lret sbb retq xchg movabs (bad) adc (bad) xor jl xor or es sub movsb lods adc xchg add retq mov retq mov mov xchg jmp mov movsb mov rolb out lods enterq rol (bad) mov (bad) mov mov push mov scas mov mov mov xor lods (bad) jmpq es sub sbb lods (bad) (bad) data16 movabs rex.WXB mov test scas test mov movsl ficoml sbb jo jge xchg test mov cmc jo cmp mov fnstcw rex.XB roll (bad) mov cs rex.XB mov (bad) retq test xchg rex.XB mov stc jl rex.WB mov retq test test and test mov lret push test xor stos mov (bad) in rolb clc callq in mov (bad) fs cmp xor lock fdiv (bad) lret fwait test push jnp cwtl rex.WR rex.WRX enterq movabs pushq movabs callq xchg mov out outsb adc sarl xchg sub sub mov retq (bad) gs push loop enterq rex.W rex.RXB insl xchg out xorl rex std (bad) (bad) pop fs sti or cmpsl jmp rex.XB repz movabs cmpsb (bad) lock mov fcomip xchg push xchg cld (bad) mov jo xor shlb iret (bad) retq out lret repz xchg xchg in mov test hlt stos cmp sbb cmp add sbb div cmpsb cmp xlat test rex.RX movsb jbe bnd lock sbb jae (bad) mov cmc test (bad) (bad) (bad) (bad) lea cli not int (bad) hlt (bad) sbb addl mov mov xchg pop shlb push mov and retq pop (bad) rex.R out cmpsl rcl (bad) rex.X (bad) icebp mov sti hlt pop or mov rex.RB test stos movsb stc xchg rcr ficom (bad) mov out sarb xchg sbb retq imul mov xor pushq push mov out (bad) xchg xchg in (bad) fisubrl jrcxz mov pop test loopne jmpq in in in in (bad) (bad) push mov cwtl and je fs callq sub add out jmp repz rex.R xlat xchg in mov insb fsubp lods movsb sub addr32 mov or cld rex.WRXB mov pop (bad) pushfq retq sbb jno idivl mov test rex.WRXB ficomp movsb (bad) rex.WRX addr32 (bad) (bad) cs rex.WRXB fisubr out cmpsb (bad) es (bad) test rex.WRXB (bad) movsb divb mov ss (bad) test rex.WRXB ficom movsb loop addr32 test rex.WRXB fiadd movsb bnd mov xor shrb adc sub lret rex.WRXB or cmp fisubrl sbb (bad) (bad) fildll (bad) movsb iret rex.WRXB addr32 (bad) pinsrw scas rex.WRXB fisubr out cmpsl (bad) (bad) (bad) (bad) test rex.WRXB (bad) movsb divl mov (bad) (bad) xlat test rex.WRXB ficom movsb jrcxz addr32 test rex.WRXB movsb repz mov xor shrl adc sub lret test rex.WRXB or cmp fldt sbb jl jne sub mov movsb xor push movsb push insl rex.R push movsb adc push movsb insl insl rex.R push movsb sub push movsb rex.WRB rex.R push movsb or push movsb jge rex.R push movsb cmp push movsb pop insl rex.R push movsb sbb push movsb imul sub test push movsb rex.WB rex.R push movsb or test push movsb jns rex.R push movsb cmp test push movsb pop insl rex.R push movsb sbb test push movsb jno rex.R push movsb xor test push movsb push insl rex.R push movsb adc test push movsb rex.B rex.R push movsb add test push movsb and test push movsb loope rex.R out fsubp shlb (bad) nop test rex.WRXB enterq addr32 test rex.WRXB faddp movsb test addr32 (bad) (bad) xchg lods in gs movsl rex.WRXB test repz cmp (bad) addr32 int movabs movsb (bad) out (bad) (bad) loop repnz rex.WRXB fdivrp movsb iret out div in (bad) repz addr32 (bad) in cmc test rex.WRXB fsubrp cmpsb stc xlat (bad) (bad) test in test add out out test test add (bad) cmp (bad) (bad) cmc (bad) hlt sub repz repnz add pushfq divl negb sub loope (bad) jo insb pushq push je pop lock iret cld (bad) pushq cmc (bad) repz bnd stc outsb clc movabs adc push cmc loop rex.W out insb (bad) sarl rex.WR sub clc push xchg rex.RX jp (bad) out cmp and jnp rolb stos and (bad) psrad clc pop jrcxz and mov (bad) mov mov imull lret (bad) xchg movabs (bad) xor out lea addr32 or (bad) repnz and jmp icebp iret addr32 (bad) stc (bad) std test rex.WRXB movsb (bad) frstor (bad) mov test rex.RB and imul je in xchg (bad) jmpq adc (bad) fbld lahf out clc test push mov stos insl outsb shrl test out cmpsl in cmp xchg addr32 xchg or sbb and (bad) sbb rex.WX (bad) jns push rex.RXB loop movsb jrcxz in in mov movsb (bad) cmpsb rex.W rex test mov xchg mov jmp mov (bad) mov callq lock sub lock loop pop mov enterq callq xchg (bad) and movslq (bad) rex.WRX rex.R lock (bad) lock loopne shr cltd int3 lahf loopne or out mull mov jno xchg loopne jae jp pushq pop cmp cli add (bad) jns int push out pushfq scas (bad) loopne lret pop or and test pop (bad) outsb rclb out loopne adc fwait xor ss or push outsb adc sub gs mov loopne lea or andl push (bad) (bad) mov test fcomi (bad) adc loopne imul mov mov add xorb out cli mov movabs movslq (bad) lea rex.XB (bad) rex.W rorl lcall movabs xchg mov xor mov cmovge retq cld cmp repnz xor loopne adc ffreep and mov ja push xor rex.XB pop out jp dec callq (bad) loopne and (bad) in scas imul loopne (bad) fcmovne (bad) push jo loopne xchg loop cmp (bad) js lock movslq push loop add rex.B xor or jmpq icebp loopne rex.W clc js (bad) (bad) pop jmp (bad) lret fneni(8087 mov jns test mov (bad) (bad) cmc sahf lahf or cmp cld andl jmpq xor (bad) adc jle and adc and push xorl pop pop insl pushfq pushq sti cmp fwait adc lods xor mov sub lret (bad) xchg loopne rex.RB shl pop xor rex.XB and cmove xchg xchg (bad) movabs xchg lret in add sti in subl jrcxz add (bad) fmul lock in pop (bad) shr retq in mov out (bad) loopne rex.B sub (bad) cmp mov fimul push push loopne cmp stc fistl jg jmp lret pop pop rex.WXB and gs or and jbe (bad) jnp movabs push cltd movabs cmp (bad) in test je xchg (bad) xchg loopne (bad) add loope jne mov jp fwait movsb xor adc loopne callq cli sbb loop,pt mov loopne andl mov or (bad) loopne xchg std xor add xor ss cmp mov adc movsl add stc xor push orb xor jne loopne and cmp mov icebp mov mov and push loopne lods shrb loopne lods std out adc xchg in and rex.WRXB pushq loopne xchg pop xchg sub rex xchg loopne rcrb mov sub test (bad) loopne rol jrcxz pop fstl and (bad) pop scas rex.WRX int loopne push mov (bad) loopne xor jp int3 sti icebp rex.WX retq loopne jl xchg incb out movabs cmc mov and jae xchg pop (bad) rex.WX loopne fdivr push in jge (bad) loopne jmp xor pop adc in xor xor loopne sbb mov sub pop jg retq adc cltd push xchg shrb mov loopne xchg loope fucom jmpq iret jo xorl rex.WX sbb and or jmp mov gs ds in lahf loopne mov repnz loopne xchg cmpsb loopne cmovp xor (bad) loopne add mov pop loopne and cmp scas loopne (bad) loope sar outsb pop (bad) data16 ds movabs jrcxz xor loop sub mov mov (bad) (bad) loopne pop cmpsb lahf and std mov mov fstps jmpq and imul dec (bad) add pop cwtl sub xor mov mov lcall addb (bad) adc adc sub and sub sbb (bad) icebp mov and or rex.WX in mov or (bad) addr32 sbb jnp jl or rex.RB and jrcxz std js rex.XB fcmovnb int in mov stc jmpq jbe lea and js inc (bad) (bad) stc xchg loopne xchg out (bad) or mov (bad) rex.WB (bad) xchg (bad) (bad) fldenv movsb mov rex stc insw (bad) insb ss scas xchg (bad) loopne rex.RX push (bad) adc jbe (bad) fldenv sbb idivl cli in (bad) std loopne out lods mov (bad) leaveq rex.RX add loopne fcoms lods mov or fwait adc loopne scas xchg clc popfq lock callq cmpsl mov rex.R andb movabs callq pushq jbe (bad) or and sub ror fcomps jp rolb sbb loopne rex pop lods push subl fnsave (bad) add sbb rex rex.B imul cmp lods xor callq cli adcb jle cltd rclb add add jno or xor (bad) (bad) test jmpq (bad) add or adc lock cmp pop add xor sub loopne push clc push shlb lods fcmovbe sbb fnop shll pushfq jno rolb (bad) loopne orl out insb loop std test sub (bad) cmpl pushfq pop movabs pop (bad) or or xchg pop addr32 (bad) cmp movabs jo jmpq (bad) jbe rex.WX pop (bad) movabs xchg and iretw xorl addr32 xchg loopne mov (bad) lods je movabs sbb jno xor cs push test pop movsb xchg std test rex.WRXB (bad) movabs (bad) sbb (bad) test rex.WRXB loopne fsubp push js rex mov mov data16 imul (bad) ja lock xchg sbb mov (bad) (bad) loopne loopne jns movabs callq sub (bad) out pop jg sub cmc pushq test (bad) xor cwtl mov xor rex.WB (bad) nop mov int movabs and sub rex.WB mov (bad) push jmpq andl xchg xor mov pop loopne jmp push pop (bad) callq lcall (bad) and sbb repz int (bad) icebp (bad) cmp rex (bad) pop enterq rex.WB movsl loopne rex.WX callq rex.X mov insb adc mov xor or adc sbb sbb loopne rex.WR in lock fldt or (bad) movabs sbb je jl fcomip mov add xchg shlb lea rex rex.WRX movabs shl jno cwtl cmpsb addr32 in sbb shrl add jbe mov mov icebp sub lods je push push repnz and mov loopne sub xor (bad) rex.RXB rex.W push push callq (bad) mov xor add xor jbe mov jne mov insb adc in mov (bad) xor xchg sbb shrl rex.X (bad) mov clc jns in rclb movslq add xchg callq callq adc sbb xchg loope xlat popfq (bad) rorb mov xchg (bad) loopne jb (bad) adc in repz (bad) mov test icebp nop add cmp xor (bad) sub lea test icebp jae jo sbb out mov sub (bad) cmc loopne (bad) push test movabs lock jge (bad) repnz loopne test retq (bad) in (bad) test rex.X (bad) add loopne loopne xor or lods loopne hlt loope cld sar mov loopne cmpsb pushq callq fucomi loopne cmc or shll xlat imul (bad) loopne adc int jmpq rolb cmp fsts fs jno adc ds pushfq rex mov rolb mov out loopne adc and cmp loope test cltd movabs and icebp (bad) test insl rcrb (bad) ja cltd callq mov pop loopne push pop and push movsb xchg cltd push loopne and sar cmp idivb pop xor (bad) mov (bad) (bad) in gs jmpq cmp enterq mov loopne lahf fidivrl loopne in movsl add loopne sub lods cli std jg in in rcr adc rorl icebp push nopl or and loopne insl jno xor (bad) xor loopne sahf adc loopne pop xchg sub lock rex.WRB loopne mov add pop (bad) loopne leaveq movslq mov jo movabs stc movsl pop xor rex.R xor out pop mov out cmpsl or jo imul je xor imulb loopne movabs sub sbb in xor push and mov (bad) mov movsb nop cltd outsb pop stc loop (bad) loopne test jrcxz lret (bad) sub xchg shrl adc loopne cld (bad) rex.XB jnp fstps loopne int3 iret jmpq pushfq pop rorb adc mov rex.WRXB repnz rorl int sahf (bad) loopne push mov jbe lea (bad) cwtl rex callq loopne in mov lock xchg mov pushfq iret icebp xchg insl sbb sbb add sarl int je rcrl mov stc xchg and loopne stc adc xorb mov mov std jns jmpq loopne js (bad) sbb sbb pushq scas jp adc loopne cmp jge xchg xor or ja (bad) cmp loopne mov mov rex push cmp xor fcomip (bad) mov (bad) in jle cld jno (bad) (bad) (bad) pop lock mov loopne cmp out enterq cwtl add (bad) (bad) (bad) mov cmp loopne push mov ror jne push mov stc and lock jge gs enterq lods lahf loopne add push repnz pop sub (bad) sub push and rex.WRX cmc jnp (bad) jmpq add pop jmpq pop std add rorl adc or add sahf xlat and xchg mov movabs fwait loopne hlt imul fdivrs loopne add pushfq stos pushq rex.WXB lret test mov loopne lock pushq and loopne xchg jns mov jbe clc fcompl movsl repnz in xchg push adcl sbb (bad) jb loope (bad) or imul and sldt (bad) in enterq mov adc in cwtl in and push xchg mov loopne sbb and sub lods jne outsb adc sbb jle lock iret add lods and (bad) insl enterq lahf ss (bad) xchg es mov int push loopne push jge or (bad) nop adc (bad) add enterq jmpq movsl rex fadds jno movsb loop in cmp cmp jns or cwtl fcmovu movsl push xor (bad) ss sti sub pop and mov fsubrp jno (bad) stos (bad) repnz mov (bad) in js popfq loopne or shrd or pop jo rorb lock sarl loopne rex.W rex.WR adc cmc (bad) movl lock callq movabs (bad) hlt jp test in (bad) decl rex.RB loopne mov sub leaveq cmp push add mov (bad) or xchg adc fcomp sub incb or or clc jmpq rex.RB iret int3 fistl sbb mov jns (bad) add mov cwtl loopne jno fbld cmp stc fisubr sbb (bad) (bad) loopne xor and shlb clc or jns shrb or or mov (bad) loopne push jge xor loopne sub pop push xorl (bad) testb lods (bad) (bad) xor cltd mov imul mov in loopne xor xor loopne movsl sti rcrl int (bad) cmp pop in int3 loopne pop and scas scas push fcoml (bad) movabs fstps jo out pop or int3 ficoml (bad) sbb pushq rex.R ss and ja clc adc fadds rclb cwtl loopne jno cli movabs adc rex.WB loopne xor (bad) and jge nop xor test fidivr (bad) (bad) push xchg out mov test sub nop out jl fbstp cltd mov sbb or nop sbb push and add imul rex.WRB rex.WR int3 (bad) mov mov mov mov lods rex.WB sub add sub and xlat std jl sarl loopne cli (bad) (bad) mov sarb cmpb enterq addr32 (bad) je notl (bad) mov loopne lea adc lock loope in enterq lea and imul add loopne insb cmc jne mov in lock frstor loopne adc lock gs out fxch fnstsw retq and (bad) add sbb xchg stc loopne lret push (bad) jge and jrcxz pop adc hlt jg (bad) and (bad) or loopne shrb jmp fmuls xor sub pop sub lret cmc fadds (bad) (bad) movslq push or push (bad) (bad) loopne imul test rorl outsb rex cmp and xchg in jne rex.WRB add add or (bad) adc pushq (bad) mov rex.WRXB cmpsl leaveq (bad) mov push sbbb movsb jno jne rex.WB test (bad) int3 xchg (bad) rex.WXB jb cmp lock loopne jnp mov cld (bad) lock jmpq pop and cmc cmc xchg loopne (bad) cld imul clc push in (bad) fistpl rex.RB xchg in push loopne cs clc push loopne lock retq sbb adc loopne loopne xlat fcom add clc sti loopne cmc xchg push rex.W (bad) xchg fidivl (bad) movsl movabs pop loopne sbb cli cmpsl rex.WB mov (bad) testl lcall jg or and add nop mov sbb (bad) ds loope movsb (bad) push or rex.X cmpsl insl in insb or mov pmaxsw push sub sbb negb fs loopne loopne in xchg sbbb jne cs cmp and xor fs loop insl push rex.WR jg cmc mov fdivrs loopne rex.WX and loopne xchg pop jrcxz out or or js rex.WB jne idivb (bad) mov jg in outsl movabs pushq (bad) cmc mov nop rex.RXB jmpq adc rex.WRB cld loope mov fiaddl movabs movslq ss mov loopne add movabs and (bad) ficom xchg pushfq loopne mov loopne vpsrlw rex.RB add pop nop and xor cmp (bad) cmp fsub xchg xor sti cmp mov (bad) pop or std out add and int3 test rex.WRX sub or loopne nop xorb mov loopne (bad) out decb in xchg mov test push loopne push movabs (bad) (bad) (bad) loopne push (bad) nop cmpsl repnz sbb mov stos rex.WRX fcmovb and movl in mov (bad) stc lock pmovmskb loopne xchg xor loopne (bad) push out sub mov (bad) (bad) movabs loope loopne (bad) (bad) repnz loopne pop rex.WB scas rex.RXB lret loopne sti xor idivb add popfq data16 loopne adc sbb cmpsl cli rex cmp in jrcxz cmp mov and mov out jno,pn test fild jae xchg sbb (bad) mov push rex.X rex.WX loopne push fimull and (bad) or sbb test cwtl std (bad) pushq push out pop rex.W (bad) hlt pop lahf (bad) jo cmp mov mov test int3 imul or retq mov rex.WX (bad) (bad) xor loopne sbb icebp shlb mov mov movabs imul pop ja out xor jne addb nop stos fs icebp cld mov loopne xor movsb loopne xchg retq sub in lods add icebp xor test rex.W jmpq lods sub jbe sub ror (bad) mov insl in mov fisubr out es jle (bad) test adc jle rcrl rex fwait out loopne jns add or or (bad) mov mov add in mov (bad) jnp rex.RXB (bad) xchg movabs in imul (bad) rex.WRXB ja jg push loopne and xchg es loopne rex.WX mov movsl jp loopne xor in test clc loopne xchg jns or std loopne push loop rex.RX outsl adc cld mov loopne scas out cmp test fnstsw pushq movabs push nop fist hlt jmpq add test (bad) jle loopne sti retq gs icebp push cmp in pop (bad) rsm (bad) and js or mov rolb rex.WB rex.WR popfq mov test xchg xchg loopne (bad) sub push in sub (bad) lret pushq shl (bad) sbb leaveq movabs mov sbb or xor (bad) (bad) jns outsb loopne jge rex.W cltd pop (bad) (bad) shl sub rex loope icebp out xchg adc lods in sub loopne pop cmp jne fimul int3 popfq loopne (bad) cmpsl pop mov xor icebp leaveq push mov rex.RB sbb pushfq pop fdivrs insl push (bad) in popfq xlat lods loopne sub mov decl pushq cmp out rex.B (bad) loopne and (bad) add jle,pn repnz loopne (bad) icebp push (bad) lret add (bad) jl rex.RB pop fsubl cmp scas fcomps push jmpq callq movabs and cmp clc sbb xor fdiv sar callq mov pushfq fdivr (bad) rcrb gs or sub jnp movabs rex.RB loopne in leaveq add clc jmp lock movabs imulb cwtl rex.X push (bad) xor mov adc leaveq adc cwtl out jbe pop cwtl loopne loopne push fmuls data16 in fs lods cmc movsb leaveq mov shrl cmc rex.B (bad) (bad) jns loopne and loopne and cmp xor fmul shl sti callq lock loop in jo pushq sub add mov adc ds out jmp insb (bad) callq xchg repz (bad) callq rclb insb (bad) callq (bad) rolb ss vpcmpgtd cli cmp and lea pushq jle jge decl add and int3 loopne lock mov push sbb or sbb or fisubrl lods push rorb stos shrb cmp lock repnz (bad) nop xchg retq loope loopne ficom xchg movabs xchg decl adc int3 (bad) loopne mov mov icebp (bad) pop js (bad) pop (bad) (bad) nop (bad) in cmpxchg mov rex movabs mov (bad) repz and movabs in rex.R cwtl in test loope icebp mov loopne xchg icebp (bad) jo int xchg mov mov lock lods lock lock jl pop imul js test (bad) in mov and in pushq (bad) (bad) lock callq (bad) lahf lock (bad) jb sub lock lock (bad) movabs rclq xchg loopne rex.W and movabs (bad) mov loopne loopne or jmp jmpq nop adc jge xor cli add loopne sbb insl xlat shl hlt xchg mov sbb icebp jge sbb sub or loopne nop add (bad) out push (bad) cmpl lods loopne (bad) jne rex (bad) and in (bad) iret (bad) mov (bad) int3 icebp test rex.WRXB movabs cmp movabs lahf scas rex.RXB movabs cmp mov out or fs lahf mov clc cltd test (bad) add cmp xor nop or (bad) mov or jg xor xor (bad) jrcxz std loopne sti rex.RXB pop rcll in fild xchg (bad) icebp int stc loopne fisttpll jmpq movabs push adc cmpsb in mov xor (bad) es loopne pushq jge rex rex.WRX rex.R push in rex.B jg (bad) pop rex.WR addr32 pop rex.RX rex.X push (bad) pushq (bad) movabs loopne mov xorl js loopne (bad) ss mov (bad) lock cld xlat int and (bad) callq loopne (bad) cli (bad) retq loopne fcmovnu (bad) (bad) cmp paddsb (bad) loopne addb fchs (bad) sti int roll loopne xchg push repnz cli adc sbb scas imul jo shrl push sbb (bad) add (bad) and (bad) lock rorl in mov out fstpl and xor cmp (bad) adc pop push ds cli lods fcos out out callq in loopne nop jne (bad) iret rex.XB rex.WXB loopne xor rex.WRX rex.WX mov (bad) stos loopne mov rex.XB insb divb sbb insl movsb jmpq adc and sub js retq rex.WXB cmp rex.RX movslq loopne (bad) mov icebp movabs add push add jo movabs movslq (bad) pop test out enterq callq rolb jo pushq sub xor cmp sahf sub fdivr (bad) (bad) xor (bad) and adc cli pop outsb cwtl fbld test loopne clc add sub shr (bad) test fwait (bad) lock clc jno data16 faddp adc sbb icebp (bad) mov test pushq sbb add movabs jmpq scas sub lahf mov loop xor gs sbbb test rex.WXB or je rex (bad) in addr32 test pop push pushq jmpq mov movabs (bad) push or outsl rex adc and lock sub callq orb movabs cmp add loopne lret xor out lret adc add or jle (bad) sbb loopne (bad) mov movabs xor jmpq adc (bad) callq loopne movslq movabs jmpq jg jbe pushfq add rex jbe stc (bad) mov fisubl pushq sbb add shrb jge pop icebp cwtl imul mov roll (bad) loopne sub fs loopne js js loopne rex.RX rex.WRX fsubrs jge cmp clc repnz clc (bad) js cmp pop xlat push (bad) jno jrcxz rex.W sti lea clc rex.WR pop je sbb rex rex.R mov cmp sahf loopne callq loopne lret js jo pushq xlat (bad) xor add sbb pushfq push cwtl jae movabs (bad) sbb adc stos outsb jno icebp jnp jp jo pop lock in rex.WB loopne scas sub cmp pop lock (bad) cmp cmp outsl leaveq add out clc (bad) insb loopne sbb (bad) rcrb xchg loopne movabs (bad) (bad) xchg mov (bad) loopne (bad) add clc repz callq rex.WRX test or cli (bad) loopne mov mov mov cwtl (bad) nop nop jmpq imul (bad) or jl sub push fsubrs loopne test sub pushq (bad) cmp cmp outsl leaveq add mov (bad) (bad) rex.WRX (bad) loopne (bad) (bad) clc add xlat (bad) enterq callq mov in movabs add sbb loopne add xchg cmp sub rclb loopne rex.WRX clc pop lock mov cld push fwait pop imul xchg in loopne cltd add (bad) push or iret xor mov xor xchg or sti or out or insl xor jae faddl xor pop sbb in (bad) mov (bad) stos (bad) (bad) (bad) jg enterq rex.W roll pop (bad) mov rex.RXB loopne (bad) jge (bad) mov mov rex.WX push gs je loopne xchg sbb jmpq cmpl popfq repz rex.X scas (bad) jg and cmp rex.WRB sbb or sub pushq push sub fbld loopne test xchg in pop mov cmp cmp rex.WXB jrcxz lahf rex.WB sub or movslq rex.X shll add rex.RB std ror add push fcompl icebp (bad) movabs test mov ror cmp outsb jmpq rex.W jnp adc jrcxz fwait cmc imul (bad) rex.WRXB cli fisubr xlat cmp repnz rex.WB repz lea adc imul in (bad) mov mov sbb retq or rex.WRB xor loopne push jno push (bad) (bad) loopne jge je sbb insl pop lret rex.XB sub and loopne jmpq add loopne jne jg cmp jnp rex.WRX cmp mov popfq callq cmpsb (bad) mov test mov pop stos rex.RXB repz sti outsl mov sahf xor pop add (bad) jp or add mov sub add and cmp ja andl jb retq xchg loopne movabs (bad) jle jae loopne rex.WRB shl sbb (bad) stos xor mov mov rex repz fildll callq adc (bad) loopne movabs xchg loope sub pushq iret stos callq movabs scas (bad) sbb rcll adc push negl (bad) xchg pushfq mov mov loopne mov sbb in sub mov add hlt mov cwtl or (bad) sub mov scas sub (bad) fst (bad) fcompl (bad) in rex.WX out mov (bad) (bad) movabs mov xor or fs leaveq andb loopne pushfq mov es loopne or fidivl movabs popfq fcoml push sbb loopne cli clc adc jge lahf (bad) fidiv outsl rex.X add xor mov loopne (bad) sahf add pop xchg ljmp out adc xor shrl movabs pop loopne lods movb addr32 mov jns pushfq cmp jmp xor and fneni(8087 pushq xlat nop jl lahf xchg (bad) loopne mov adc (bad) sbb xor int (bad) movabs pop in pop mov sarb cmp js or and outsb (bad) in (bad) cmp xchg sbb movslq jno rex.WRXB pushq xor js push (bad) loopne (bad) xor (bad) loopne jns (bad) cmp push movslq push cwtl scas mov test cmpsb cmovo (bad) mov sbb pushfq (bad) test enterq stos movabs rex.W roll pushq (bad) pop in loopne movabs adc gs jp nop jb rex.WR movabs or movslq and cmp or decl lret cli nop (bad) out mov int fmul xor rex lret pushfq jp pop lock insb xchg loopne out nop mov (bad) jrcxz mov (bad) xorb rcl rcrb movabs xchg and stos xor mov and jmpq or (bad) mov push je imul xchg jge repnz add or rex.RX sbb add (bad) (bad) rex.RXB loopne or add (bad) (bad) addr32 fisubl cmpsl sbbb loopne push (bad) jns repz loopne cmp xlat retq jmpq pop nop (bad) add xchg rex.WRX hlt loope loopne fidivr mul and sub jb loopne cmp adc (bad) insb out mov (bad) jle repnz test add loopne rex.WX scas int addr32 (bad) jo retq sti in cmp or fild retq mov xchg cli loopne in in std push in loopne sbb adc jmpq out rorb sbb js loopne stc movslq in lock fadd (bad) sbb cwtl adc fild or cltd fsubp mov add mov and je,pn rex.WX cmp push es sbb cmp add sbb cmp or sbb mov (bad) sbb (bad) rex.WB (bad) sbb sbb js movabs sub cmp or mov (bad) pop xchg xor sub shl mov in mov pushq jae mov pop cmp jo or loope test (bad) mov sahf (bad) loopne fwait (bad) rex.XB (bad) outsl or adc and adc (bad) cmpsb or (bad) scas incl dec sti sub mov js loopne imull hlt (bad) push lock (bad) xchg mov roll lret loopne and sbb popfq stos loopne (bad) mov jmpq mov xor rex.RX fisub iret jl loopne fwait mov addr32 mov jg rex.RX adc sti cmpsb sbbl cmp test (bad) rex.X lock mov adc mov movabs (bad) (bad) sub add icebp rol xchg pop mov movabs sbb (bad) (bad) loopne jnp (bad) adc add and test callq movabs lods xchg fbld (bad) mov sbbb imul push rex.WXB lea mov mov outsb retq cmp mov jmpq add fnsave loopne or addb jbe (bad) xor clc vaddps loopne and pop push loopne pop adc mov mov cmc (bad) jrcxz fnstsw pop sub std (bad) (bad) int jmp cld cmp cmp sub push rex.X movabs int (bad) in icebp sub mov andb enterq cmc sbb jg cmp rex.WB cs movabs xchg xchg xchg (bad) test sahf and sub in adc xor (bad) jmpq mov jg loopne xchg ja rex.RB loopne sub insl (bad) loopne fidivl ja fs jmpq rex.WX and add movabs rex.B adc mov or cli pop int3 or adc (bad) jo (bad) test cmp sbb in cmp xcrypt-cfb cmpsl movabs add lods xchg loopne orl ficomp rex.WX adc push pop pushq adc rex.WXB loopne (bad) pop (bad) rex.WRX rex.XB cmp sub pop mov movabs cs mov (bad) mov push pop icebp jmpq (bad) (bad) (bad) mov hlt xor (bad) sub rcll adcb imul gs (bad) icebp data16 jp in push or cmp rex.RXB lea push (bad) fcoml jg int3 pop cltd clc push add xchg (bad) mov cmpsl mov rex.RB jns in enterq xor (bad) movabs fsub (bad) rex.RX fnop pop mov (bad) scas mov adc fildl cmp repz cld lret cmpsl in outsl lahf rex.B (bad) add loopne add pop cmc rex.WX rex.R ss add and test rex.WR out fwait clc mov (bad) mov loopne iret mov (bad) and rex.WRX xchg movsl decl cmpsl (bad) scas xor xchg cmp rex.WRB mov loopne cmp pop retq loopne cwtl (bad) loope (bad) lret loopne lock ja (bad) add push rex.W insb fwait imul mov xchg mov loopne adc (bad) in fs xor movsl rex.RXB andl pop test in pop repnz int hlt loopne jmpq iret shl loop cli in int3 (bad) repnz adc push (bad) jp and cmp rex.WRB lock callq jne loopne faddl loope movslq (bad) (bad) cmp jo sbb leaveq sub sbb and add and (bad) rex.WRXB js push mov (bad) cltd and fiaddl int3 out push sti iret fmul es fisttpll jg xor (bad) jno sbb xor rorl (bad) adc push cmp push pop ss in cld sub (bad) (bad) jb test push pop loopne and adc sub jle jno stos (bad) sti out mov (bad) pushfq loopne mov (bad) loopne popfq (bad) test cwtl mov orb or lret mov jmp repz iret cld stos jmp movabs xchg es add loopne push mov rex.R and or cld sbb movsl pop (bad) lods mov cmpl loopne xchg fwait in (bad) scas (bad) loopne lods repnz loopne fsubs data16 and mov push pop sbb mov clc fbstp std incb movsl test xchg rex.RXB adc repz sahf xchg (bad) rex.WR and (bad) rex.WRXB (bad) std cmpl mov movabs rex.RB imul jb test add rex.RX data16 (bad) mov (bad) xlat retq int3 lret cs and push sbb rorb mov push cld rex.R callq stos pushq fildll sbb xor mov (bad) (bad) mov pop xor sub mov cmp jge or mov mul loope (bad) or sub cmp (bad) xor mov (bad) cmp in xor xor imul outsb cmpsb xor lahf roll mov mov xor fwait insb xchg jno nop and (bad) rex.WRX add rex.WX and sub lock (bad) adc rolb sbb rex.B add jno es fidivrl loopne cmp loopne sub imul sbb (bad) scas sub push xchg and mov (bad) (bad) xchg xchg cmpsb movabs (bad) mov rex.B push or in xor rex.R loopne mov movabs cmp movabs loopne xchg adc cmp pop (bad) cmp xor (bad) out cmpsb repz test mov callq in testb jmpq (bad) movsl pushq sbb cld iret repz movabs or cld mov loopne cmp retq subb test xchg imul mov cld jmp test pushfq loopne fnsave rex.WB pop (bad) (bad) in scas mov (bad) pushq fdivrs js sub rex.X in mov movslq insl xchg rex.WX mov loopne (bad) adc (bad) sbb xor popfq adc nop jo push rex.X loopne icebp rex cmc jp sbb add mov ficom rex mov cltd sbb and rex.W data16 negl pop loopne imul stos cli insl (bad) rex.XB cld sub in callq jbe pop add mov mov add movabs rex.WRB rex.WX mov cmp jl mov loopne fbstp add fucomp or pop movabs enterq test stc cmp fidivl xchg rex.WR movabs (bad) iretq (bad) mov mov sbbb push and mov repz (bad) xchg (bad) (bad) jne rex.WXB rex.WRB outsb xchg (bad) shl out fldenv mov popfq retq adc (bad) mul scas lret fs (bad) adc loopne movslq data16 sbb ficomp and rex.RB rex.RXB rex.WRX jb int3 xchg cmp imul rex outsb sub (bad) add nop xchg retq lea insb loopne xor scas or rex.W (bad) sub loopne ja addr32 xchg pop fsubs sbb sbb adc and add loopne sub pushq jno loopne js (bad) jle cmp rex.WX push (bad) insb shl sbb (bad) mov mov lods (bad) and and (bad) loop (bad) jmp out (bad) pop lock mov cld mov out mov loopne sahf (bad) jbe push mov cli mov or (bad) movabs rex.W pop lret xor idivl fstp movsl in out rcrl loopne adc movsb incl cmpsb adc jl xor rex.X loopne pop cmpsl jle movabs insb push (bad) sbb (bad) xor movabs pop rex.R add rex.WRX rex.XB lret xchg js out (bad) (bad) cmp and mov (bad) clc jge (bad) es xchg (bad) insl ja xor lods mov and jrcxz jbe push jl push rex.WRB retq add (bad) xchg fnstsw stos lahf (bad) cmc jo jne out rex.XB in push rex.WRX mov insl loopne testl enterq in mov (bad) fdivl cwtl addr32 loopne not (bad) outsl adc jmpq repnz (bad) (bad) pop inc or nop std mov pop sub out push test rclb loopne retq sub cmp cli fildll and adc (bad) xor xor push scas sahf in rex.W out adc sbb jp in mov xchg scas stc js jne mov test adc insb mov cmc outsl in jrcxz in lret xchg loopne (bad) fidivr xchg in push pop mov test (bad) (bad) pop (bad) and loopne insb and sub loopne mov or rorb mov iret es jbe cwtl lock mov gs loopne jp sub (bad) ror (bad) in xor sub loopne pushq imul and outsb jrcxz shrl clc adc adc scas cmp sbb mov pop and add (bad) repz shrl xchg fisubr in lret test incl sbb cld mov loopne (bad) rcr (bad) int3 loopne ficompl lcall jne loopne in imul std hlt movabs sub adc rex stos pushq sub repnz cli rcrl (bad) (bad) rex.WXB add or jrcxz rex.XB sub loopne (bad) movabs (bad) rex.XB sub or xor test add (bad) movsl loopne lods add pushq xor or add outsb imul lock mov xchg sbb loopne movabs mov (bad) jne fnsave xchg (bad) mov push loopne pop jnp jge jg loopne repnz rorl sahf loopne pop jp jge adc add fidivl outsl mov loopne out out insb andl movabs cmp add fldt imul adc callq (bad) jrcxz testl fistl rorl pop popfq pop push fistpl cmp int3 pop or cltd insb add loopne repz movabs (bad) add (bad) ffree jrcxz je xor in (bad) jns outsb (bad) callq xor (bad) sbb rex.WRX (bad) imul pushq jno sti rex.B sbb shlb pushq fcoml add std (bad) xchg rex.W mov pop icebp xchg loopne mov rolb fwait movslq ja cmp fimull xchg lret pushfq loopne int3 sbb fneni(8087 and (bad) sub icebp push and adc sbb xor jbe popfq scas (bad) (bad) rcrb loopne cmp scas or or jle xchg fstl hlt pop (bad) (bad) add cld in (bad) loope adc rex.RB and jle orb mov loopne jae mov or xchg in lock and js packsswb pop (bad) adc mov out xchg fcmovne stc rex.WXB loopne movabs (bad) loopne xchg mov mov out xchg insb fldt mov (bad) loopne rex.WRXB jge je sbb pop jne scas orl or xor cmp movabs pop mov int3 (bad) movabs je add sbb cmp mull shl push repnz retq (bad) loopne clc xchg loop mov mov hlt add add rex.WB push lods jno xlat rex.WRX jp jne pop push or sub xchg nop rex.WR cwtl adc cmpsb (bad) jg scas (bad) rex.WX rex.RXB loopne (bad) (bad) rorb (bad) out in xor fbld and and (bad) (bad) lods jle jno push loopne mov (bad) int3 xor sub rex.WRB lock mov orl fcmovnbe (bad) shrb (bad) add rex.B cmp movslq cwtl mov xchg (bad) popfq test rcr (bad) loopne and cmp (bad) loopne (bad) fsubrl cwtl add loopne out hlt (bad) movsb sub cmp pop imul rex.WXB mov loopne lret pushq or rex.X adc scas jp adc loopne std and jnp cmp loopne mov movsl sub rorl jrcxz xchg xchg gs or stos jle (bad) loopne lea add mov loopne xchg jge and pushq jl rex stc sbb (bad) (bad) cmp xor jrcxz loopne and or loopne movabs (bad) cmp idivl callq (bad) icebp sahf or mov pushq sbb mov xchg (bad) lock pop rex.WXB addb in cmp lods loopne (bad) outsb push rex.WB rex.RXB jge (bad) movabs clc and fs ss xlat cmpb mov adc rex.XB rex.RB cmp (bad) jne loopne rex.WB rex.W or sbb (bad) icebp (bad) je fistp loopne movabs (bad) sbb jmpq retq jmp pushq xchg (bad) pop xchg retq push (bad) in jmpq fnsave loopne (bad) xchg (bad) mov loopne xchg fnstsw in rex.X (bad) mov ja mov (bad) rex.WR push (bad) cld xchg add nop mov loopne movabs insl pop loopne and add or or sbb not hlt ss sub loopne add xor sarb (bad) or cmpb (bad) imulb sbb add and fildll addr32 cld (bad) lock mov cwtl push movabs nop xchg subl cmp movslq outsl fsts or fnop (bad) cmp scas loopne pop lret sbb loopne rex.RXB mov (bad) enterq movabs or js addr32 cmp add push jg loopne jnp xor rex.WXB fild outsb push sbb cmp ss or shlb xor in xor sbb lret rex.WXB loopne pop in ds cmp push sbb std roll in xchg stos jg rex.WRX fcoml out cmp (bad) cmp flds rex.XB jp (bad) jnp hlt out adc iret loopne ss lahf in xlat xor cltd xor sub fbld sbb repnz ds fdivs xchg push or mov (bad) loopne cmpsl movslq xor pop sbb outsb (bad) xchg jge mov rex.W iret rex.WXB loopne and jno push pop loopne push (bad) movabs in (bad) xchg xchg (bad) shl xor insb mov in loope pushq rex.WXB data16 add movabs insl mov repnz pop rex.X sub (bad) xlat stc (bad) push pop cmp cmc loopne rorl (bad) negb lock movslq loopne rcrb xorl push sub jg out (bad) mov xor (bad) rex.WRX (bad) clc outsl cmp mov (bad) mov push retq (bad) out loopne fsubrl fucom mov sbb out (bad) sahf add retq fs (bad) xor test (bad) shll pop mov movslq (bad) jns fmull push (bad) sub adcb push and loopne fwait or rorl paddusw jb neg cmc xchg imul loopne js lods stos sbb pop loopne in pop cmp push out movsb adc imul xchg loopne pop movabs rex.B rex.WX xor loopne mov (bad) mov (bad) fcompl sbb stos adc cmp (bad) xor mov (bad) xchg lret enterq cwtl outsb test pop out jmpq (bad) shlb int xchg loopne or mov lahf (bad) loopne xor rex.X mov (bad) rorl xchg adc out cmc loopne movabs (bad) insb sahf scas rex.WX lret jle out out mov retq rex.RXB movabs loopne adc sub loopne pop mov mov xchg mov repz and pop or rex.XB sbb rex.RX jmp adc jo pinsrw jl loopne add (bad) (bad) and rex.WR fcmovu lods enterq cmc adc imul sar mov (bad) movabs or lods adc movabs mov xchg push lahf cwtl pop adc mov mov popfq divl mov cli fs mov mov mov jg push (bad) rex.WRXB adc fildl (bad) in mov or and (bad) or pop adc (bad) enterq repnz (bad) mov sar in jnp mov rex.WB in pop pushq jle mov in sbb retq add test loopne mov mov push (bad) lods int loopne (bad) (bad) adc outsb cmp pop repnz rex.XB or loopnel enterq leaveq sti cltd iret fwait movabs (bad) mov (bad) outsl jo mov loopne cmp mov loopne (bad) stos xchg pop fs xchg (bad) loopne add jbe (bad) (bad) xchg loopne mov enterq es leaveq adc loopne fldln2 cmc fstpl rex.X rex.RX rex.WX in xchg (bad) (bad) pop add cmpb mov xor adc loopne rcll rex.RX rex.WR leaveq sar callq lods out xchg (bad) rex.R loopne mov xor jno pop sub add and in cmp add ss lods icebp mov jl xor rex.XB data16 or loopne rex.W rex.B (bad) sub (bad) loopne (bad) enterq or rcrl rex.RB outsl jg nop loopne loopne (bad) (bad) mov loopne sbb xchg xchg mov mov loopne cmp or push sub loopne cmp cmp faddl mov gs cmp movslq jns push add jp jnp rcrb adcb (bad) (bad) loopne jae adc rex.X imul cmp jo scas xchg test popfq jne xor pushfq cs cmpl loopne sbb and mov push rex.WR js loopne (bad) or cli (bad) (bad) xor (bad) fnstsw test loopne rex.B movabs out add (bad) jno out pushq ja callq rex.WB imul loopne xor cmp sbb cmp xchg and (bad) (bad) sbb jae rex.RXB pop loopne push lods mov mov and out callq and adc or push add loopne pushq mov lea nop (bad) mov repz mov movabs sbb mov ja callq add mov rex.WRB shll fisttpl push rex.RXB iret in (bad) sub leaveq rex idivl fdivl jmpq mov (bad) jge xor pushq mull cmpsl mov (bad) int3 in sbb loopne push in (bad) notb loopne lods (bad) xchg addr32 sub pushfq xor fs cmp add rcrl rex.WRB xchg sbb (bad) push and mov cmp loop iret mov (bad) xor (bad) rex.WRX (bad) loopne jmpq lods mov (bad) rex.WRB pop sbb cmp icebp imul (bad) add xchg mov rex.WXB add stc loopne or xchg shl cld rex.XB (bad) or jnp roll push pushq decl popfq and (bad) xchg cmp pop in incb fmuls lock mov out xchg sbb xchg lret xchg or xlat addr32 mov mulb ror push mov (bad) (bad) pop mov (bad) sbb add (bad) pushq xchg cwtl stc sbb sub rcl movabs xchg push andl shlb lods (bad) xchg fwait add jnp ficompl stos mov retq cmp (bad) jbe addr32 mov mov scas add (bad) sbb cwtl out rex.B xchg (bad) loope and out (bad) lret rex.WB xor sti lret sahf mov (bad) xchg data16 in nop mov rex.R test iret lahf xchg sub in test jno xor (bad) rex.WX sbb (bad) rcr add mov (bad) out xor rorl (bad) int3 cs push xlat sbb (bad) lock in sub cld shll (bad) (bad) outsb rex.R imul xchg rex.X (bad) in nop (bad) mov outsl lods rex.W push (bad) xor nop and lret movabs add jnp rcr pxor jns addr32 mov adcl (bad) lahf popq rex.WXB (bad) pop loopne adc sub mov sbb pop flds (bad) imul test fist (bad) retq mov test sbb (bad) rex.WR pop xor (bad) (bad) xor (bad) (bad) hlt fdivs (bad) rex.RX pop rex.RX rex.RB lea out movabs int3 test int3 shr cmp clc es xor (bad) add sbb je in lahf cwtl xchg nop (bad) outsb xlat mov movsb jle test xchg int adc and mov movabs or lmsw (bad) cmp test push or rex.X lea pop shr fs in std mov rex mov fdivrs mov icebp cltd or push pop stos stos (bad) cmp cmp mov mov push xchg test mov (bad) mov imul sub cmp jns (bad) mov xor (bad) sub retq xor (bad) adc roll movsl and cmp retq mov adc mov mov leaveq xor xor (bad) cmpl mov mov or cmc cwtl adc rex mov repnz enterq push and pop jp sbb in adcb hlt out xchg (bad) (bad) imul movabs xor rex.WRX mov sbb retq repz mov mov or test push fist rex.WRX enterq test outsl mov faddp (bad) mov add jbe pop (bad) scas movslq movabs mov incb movb xorl es cs std (bad) mov add push mov cmp sub int3 lahf xchg push clc push pushq insb adc xchg rex.R out sub lahf and iret xchg lret (bad) movabs mov xchg add lea xchg rex.WRXB data16 or popfq mov (bad) rex.WRX jl or push movabs (bad) sbb lahf mov and (bad) add mov jmp int clc mov (bad) xor (bad) or (bad) xlat stos pop xchg pop (bad) hlt rex.WX push cmpsb rex.WX hlt xchg mov rex.WRX iret ds rex insb scas hlt roll jnp enterq mov sub jnp test xchg fsubrl (bad) cltd (bad) xor sti jmp jbe out sahf jle rorb lock shrb pop adcl enterq xchg jmp jb xchg movntps cmp fadds xchg (bad) (bad) (bad) (bad) cmpsb jg xchg xchg movabs (bad) mov (bad) adc js rorl rex.WRXB xchg cld in push push rex.RX mov rex.RXB adc test divl hlt and lret (bad) pop jl xchg rex.W movabs sub (bad) es ror xchg cmp pop sahf imul repnz sti incb jno movabs xchg (bad) rex.WX (bad) out (bad) jnp cwtl (bad) cld shlb pushfq push rex.WXB lods addr32 (bad) in mov fimul movabs iret jmpq in xchg jno jo insb jno sbb sub andb imul je (bad) sbb movsb (bad) movsb callq xor rex rex.WRX rex.W or movabs cmp callq scas iret shrb fadd (bad) jb xorl rolb xor mov (bad) je enterq sbb shlb xchg ror rex rex.W cwtl xchg repz add jo (bad) out out int3 jp rex add shlb cwtl rex.WX and jo sbb iret test inc hlt iret movsb callq callq pop push sarb imull fistpll mov jbe hlt movabs rorb adc cwtl or (bad) movabs mov adc rex.X movsb rex.WB xchg sbb pop rex.XB jo rolb stos sub lahf or mov vpunpcklbw mov test rex.W adc retq sbb mov jl mov ds xor callq xchg mov push test and jmpq andb shrb insl jns xor lods shrb outsl shll movabs movabs (bad) rex.WX (bad) lock fnop movslq push (bad) jo xchg push adc (bad) mov rex push sbb lods scas rex mov xorb cmpsl scas rcrb pop adcb ds scas xchg (bad) cmp and adcb push sar nop shlb xor push insb xchg insb insb cwtl cmp and movabs ffreep (bad) fldenv hlt push faddl (bad) (bad) push push sbb test push cwtl adcl cmp (bad) adc movsb in clc cmpsl pop (bad) movabs fildll pop fadd adc (bad) sbb (bad) pop shlb jne cwtl sbb jge ds push adc in test (bad) fdivrp retq enterq imul cmp callq enterq (bad) sbb sub enterq mov mov ja sub in leaveq movabs and pop mov (bad) out jrcxz jo rolb fldenv cwtl mov cwtl mov xor (bad) lock ficompl mov xchg mov (bad) outsb sbb nop pop xchg test (bad) and test xchg rex.W xchg (bad) (bad) pushq rclb test sbb lock shrb sbb rclb std sub (bad) xchg callq rex.W rex.WXB push pushq mov (bad) cwtl xchg (bad) mov mov rex.XB sbb rex.WRXB (bad) cwtl pop mov (bad) (bad) fbstp movabs test rex.WRXB lock rex.WXB mov sti loopne pushq (bad) push scas adc callq (bad) push notl adc (bad) and mov rex.WRX and clc mov shrb in adc (bad) nop movabs mov (bad) rol (bad) adc scas callq mov test mov xchg xor or xor (bad) mov outsb test (bad) iret mov pop lock jle shr rcrb in (bad) pop enterq in mov (bad) jo idiv mov push jge xchg in in lock xchg mov outsl sbb rex.X rex.RXB nop shl mov scas movabs negl cmpsl sarl pushq scas add imul and lods popfq sub add pushfq adc rex.RB cwtl mov jg,pn (bad) js rex.WRXB fistpll (bad) cmp xor sbb rex.XB add out adc movabs mov div andb sub incl test js xor clc pop mov (bad) cmp mov (bad) adc sub pushq xchg pushfq mov (bad) outsb callq (bad) pop sarb rolb cmpsl jo nop rex.XB jo jo cwtl pop rex.WRXB nop mov iret fsubrs (bad) (bad) pushfq mov push xorb scas (bad) adc push cmpb mov sbb cwtl (bad) xor rex.WR cs clc adc sub ja testl (bad) rorb iret loopne pop pop data16 (bad) xchg andb lret (bad) mulb xchg xor scas rex.W mov mov (bad) shrl imul pushq jmpq hlt test scas mov rex rex.WXB pop rcl xchg mov icebp (bad) push movabs test js (bad) nop icebp iret (bad) lock icebp (bad) sub (bad) test callq out std nop push push ja (bad) add andb movabs cmc add (bad) xor and nop in adc mov push cwtl ja jmpq cs sahf mov (bad) (bad) xchg out test xchg callq xor and rex.RB clc lock callq pop test mov (bad) (bad) (bad) callq lock and nop jnp rcrl xchg (bad) callq lock clc adc repnz xor and cld (bad) test mov movabs hlt imul int rex.X out callq mov (bad) sub rex.WRX pop push fisub adc jle andl sub movsb cmpsl testl loop clc push cs iret cld (bad) movabs andb (bad) rex.WRXB callq iret cwtl icebp rex.RXB jmpq sub add xor push enterq ror callq out lods enterq xor lods nop pop mov mov jg (bad) lods test out mov mov (bad) in xchg callq stc mov cltd lahf mov cmc nop (bad) lret sti test (bad) movabs js mov jrcxz test std cmp xchg sahf lock (bad) in js negl push pushq (bad) push (bad) callq lock sub movslq or jo test (bad) out in xor and nop out and movabs add rex.W fildll fdiv and scas (bad) divl in out pushq out lods (bad) sub add cmc sub add icebp out (bad) int3 xchg mov fmuls (bad) rex.R iret addr32 (bad) in fsub gs cld xchg test test mov pop and rex.R retq nop outsl (bad) jmpq insl clc mov adc in xchg retq movabs loop (bad) movabs xchg jmpq jnp xchg pop add imul or mov shr rex.WR in in (bad) iret mov mov (bad) pushq mov retq hlt (bad) fadd jmp loopne out jmpq in in (bad) rex.WR in shrb adc add cmpsl sarb test jmp je add fisub cld adc cmp movsl fs in lock addr32 (bad) icebp rex.R fmul cld cmp add callq addr32 cltd and shrb pop and roll out cld adc add clc xor and lahf and jrcxz add (bad) incl pop fdivrp movsb stc cmc loopne (bad) rex.WRX callq in incb or iret lock jrcxz hlt mov mov popfq pushq sub cs jo mov (bad) (bad) in jrcxz or sub (bad) mov movabs mov cs clc xchg fsubs shr retq (bad) out in incl std scas mov (bad) in cli jg,pn icebp xor and shlb in push callq jnp rex.WRB ds enterq or imul cmpsb loop cld and mov negl out mov (bad) mov test pop mov push sub (bad) adc (bad) in (bad) cs adc and ds (bad) je rex.WX lock fidiv (bad) mov mov (bad) mov jmp test sub out out (bad) shl movabs cwtl add cld (bad) retq fadds test xchg movabs stc cmc xchg (bad) lods out je shlb and jg jrcxz or (bad) jmp in iret out insl callq sub movsb lock movslq icebp mov pop shrl insb or sub push lahf add xor (bad) imull (bad) test pushq and mov sti cwtl jnp rex.R pop and shll testl or jo fxch test pop int3 jmpq hlt in fsubs rex repnz outsb xor (bad) mov cld std addr32 in ficom test test loop in jns xchg addr32 decb callq (bad) cmc imul jne sub jmp push callq shlb ss in stc out and jg adc mov adc stos rex.WRXB jno adc loope or out ljmp push rex.WRX jo in and (bad) in cmc (bad) lock rex.RXB (bad) adc (bad) out pushfq imul pop jp (bad) rex.WRX (bad) iret cmp movabs cs je cli mov es cli cmp loopne out callq mov sti loop out stos mov jbe popfq push repz ficom sub adc jle adc (bad) out out cmc ljmp movabs mov (bad) in pushfw fs pushq push jae jo callq lret and lock clc rex.X (bad) xor out pushq xchg xchg and hlt iret push int3 int3 jno (bad) test and movsb adc out icebp popfq callq je cld lret test test cmpsl rclb lret cmp movabs int3 and lock pop pop rex.WRXB lock clc out fs jo jne adc addr32 idivl mov (bad) movabs xor hlt or cwtl (bad) pop (bad) callq out xchg rex.X (bad) and hlt or mov fs xor fdiv jo lock test (bad) mov test xchg rorb mov (bad) icebp subb sbb out fcmovu (bad) or cwtl clc lock out test mov and pushq (bad) and (bad) xor hlt or out cs cli xchg and scas test mov in fs adc movabs add hlt js push divl rex.WXB fcomip sub push addr32 lock out fmull (bad) out scas addr32 cld retq or cs hlt pushq add imul sub (bad) xor insb icebp cld lock in xchg je fldl jbe jge clc xlat stos mov shr xor mov out enterq jmpq fcoms je imul out cmc (bad) retq xor mov dec mov and sub insb in in add jl movsb lock clc (bad) cs jp fcos in mov cs shl mov sub out rex.WR add xchg in jp fcos cmc js and out addr32 push xchg movabs movabs lock rex.RXB fnop jmpq iret adc icebp add xor and nop callq loop loopne pushq xchg push jg pushq rorl (bad) mov mov mov cli mov rex.WR xor and sub mov shlb rex.WRX and lock cs (bad) loop out callq sahf (bad) out xchg movabs sbb in fcompl or clc (bad) mov xor sbb lret hlt adc add mov mov rex.WXB rex.W mov pop push jns (bad) xchg hlt adc and jo xor outsl fisub (bad) fmull nop (bad) xchg and mov fld fcomp push movsb callq scas cmpsl mov xor pop xchg cld and in (bad) adc lock pop cmp hlt xor mov mov jne or mov loop out hlt xchg rex.RXB rex.WRXB mov mov std jmpq sarb xor negl mov fadds add movabs jp jo (bad) loopne jmpq in pushfq fistp cmc out xchg xlat mov hlt mov iret fucomip rex fldenv pushq movsl hlt cmp lahf out mov es mov mov rex.WR insl (bad) or cld mov cmp retq in push in mov stos adcl jle outsl je pushfq test in clc cltd gs adc hlt rex.RB outsl (bad) (bad) (bad) cmp out (bad) (bad) lods adc test jo (bad) shll (bad) fs rclb movabs pop sub cld outsl (bad) in push callq pop pushfq push addr32 test callq rex.RX mov movsl cld rex.WRX add rex.WRXB jl insb cs (bad) fadd addb rex hlt adc (bad) add (bad) xchg jmp callq sbb jmpq fiaddl shr mov movsb cmc cmp (bad) xor rex.XB rex.WRX jp jo cmp add rex.WB rex.WRX faddl out fmul mov xlat rex.WR movabs adc test and xchg int3 jle lret and (bad) (bad) (bad) (bad) subps lods lock (bad) out cwtl out and hlt add pop in mov (bad) gs mov enterq clc insl out cwtl rex.WRXB mov jb movabs cmp adc xor (bad) pop iret nop lock and sarb fwait out cwtl stos and jg and mov cld shlb jp repnz subb in rex.WXB mov repnz clc mov jmpq add xor rclb rcrl xchg rex.X xchg callq callq int3 test (bad) sahf scas out xchg mov in and out movsb pushq clc (bad) gs and rex movabs lods jae insb shlb in pop cld movsl clc fs (bad) sub in movsl jne,pn loopne cs loopne jmpq push nop (bad) out notl stc add and xchg imull in nop out xchg pop pushq adc fsub out out jl xor and movabs jmpq (bad) push push enterq sbb pop mov in cmp movabs pop cmpsl xchg mov rex.WRB ja (bad) outsb out push (bad) add cld xor mov (bad) callq in adc je sbb lods lods or enterq rex.WR (bad) jmpq incb mov loop out int3 popfq (bad) mov fcomi fsubs mov not in xor rex.W push in pop out pop fdivr lret adc enterq test jmp out mov loopne mov nop jns movsb (bad) xor scas (bad) mov test push (bad) pop out popfq retq in mov lock cwtl sub adc (bad) out cmpsb in mov and cld fldenv jg iret xchg lods hlt in lods test jle in mov mov cmc sub pop jg (bad) sbb in popfq pop callq outsb cli clc jp sub out lahf pop in in mov adc mov sub and out or mov clc (bad) sub movabs insb nop stc cwtl xor cmpsl mov mov cmp insl and in lock pop jns lods mov rex.W jmp xchg movabs data16 cmp or movslq rex.WR movabs rex.X (bad) shlb (bad) nop rex rex ficom (bad) mov adc add xor jp in ss (bad) out (bad) callq test js (bad) movabs nop callq out movabs rex.W divl outsb in mov movsb out mov or mov mov lock movabs xor xor in ror out fcompl enterq or enterq enterq lock test jne add in cwtl pushq fs mov adc add cmpsb mov sbb addr32 in (bad) out hlt add mov rex.W (bad) cmp int3 fdivrs (bad) lock icebp test in notl (bad) std loop (bad) jl callq lods fisubr fadds lretq add in (bad) mov add rex.WRXB outsl cmc out rex.X (bad) lret cwtl jne iret cld subb andl xor movslq nop test int3 callq lods in mov rol pop jne mov clc loopne out repnz iret ja,pt (bad) movabs (bad) pushfq scas test xorb cltd mov xchg retq sub pop sar or xchg fdivrp mov pushq data16 add test xchg mov sub rex.WRXB addl repz pushq jmpq jae js insb cwtl fcmovb callq add rex.WB rex.WB movabs cld ds hlt scas jo hlt lods (bad) lock in jrcxz rex.WXB xchg movabs (bad) cmp (bad) (bad) movabs mov (bad) mov ljmp ds in adc mov data16 xor test (bad) jg js (bad) rex.XB fs pop push (bad) (bad) add jmp movabs callq stos (bad) sbb jg js in push out pop lock rex.WRB (bad) (bad) out stos fdiv not pop sti (bad) (bad) lock outsb in subl pushq nop mov (bad) sbb mul incl in cs out jle xor (bad) hlt rex.R enterq or fdivrl js callq mov sbb out (bad) mov callq pop mov rex.W in pop decb retq leaveq and test lret fimul scas (bad) adc push out gs xchg in (bad) jp pop sbb in cltd lock in mov test nop (bad) sahf jo mov rex.WR outsl out mov sub fcomip sub iret lock xor mov cld rex.WRXB rex.R je out js andps in fsubp movsb out jg out enterq callq and test cld callq (bad) nop rex.WRXB (bad) callq fdiv (bad) in (bad) add sti hlt pop xchg (bad) xchg out fdivr (bad) add cmc callq imull mov cs movabs enterq out loopne mov cli repnz (bad) callq int xor fdivrs fs callq mov repz cmpl cmp callq hlt test scas jg addr32 fs clc mov xchg xor mov pop pushfq fld1 fcomp (bad) and rex.WRB lock push xlat add add sub pop xor lret jo push movabs (bad) movslq cmp (bad) xchg rex.RB clc fs (bad) js retq cwtl je fsubl rex.XB fwait out rex.RB jl mov clc (bad) xchg fsubr cld clc and adc (bad) callq test add mov scas loopne rex.WRX mov callq (bad) fdivrp fst xchg or lods (bad) mov callq rex.W nop sbb test movabs mov jrcxz add ljmp mov (bad) popfq iret adc jb lock (bad) rex.RX lock int3 pop rclb push pop lock test in in nop out lods (bad) rolb xchg mov fsubs neg (bad) push sub rex.WRXB fcoms stos jg rex.WR xchg lock nop nop mov enterq jae insb (bad) lods out imul jl test hlt mov (bad) idiv mov pop cmpsl lods xchg mov scas rex.RB (bad) mov adc outsb (bad) int (bad) iret rcl (bad) push mov pushq mov mov pushq cwtl (bad) int pop jo lock mov movabs in fs loopne (bad) int3 scas sub jl cld lret jb push sbb movsb sti callq test (bad) callq (bad) jrcxz (bad) xchg lock xchg mov sub rex.WRXB lret popfq enterq (bad) or (bad) (bad) (bad) lock (bad) callq and int je (bad) nop rex.RX js sbbb callq loop (bad) out cld addr32 jo imul sub xor and pushq xchg (bad) jmp (bad) add outsl test fsubrl jg (bad) pushq xor lods rex.WRXB repnz hlt clc movsb rcl addr32 in fidiv add movabs jnp fldl stos mov sbb sarb insb callq cwtl cld rex.R (bad) lock xchg loop test rex.WR test lret inc lock (bad) push xor and out insb lock in movabs sbb lock repnz stos lcall xor nop es movslq ss hlt fcos hlt sub (bad) pop rex.WXB scas rex.R cld movabs incb fmulp in (bad) and cmc sbb cld adc cwtl jno (bad) test int retq shrb and mov (bad) je in cltd (bad) out lock orl lock cmp (bad) clc (bad) xchg sbb and and faddl lods lcall jo out sub out jl lock clc sbbb push fucomi ss (bad) in callq insb out xor in adc xbeginq xor (bad) test je (bad) test jmp and mov shl rex (bad) hlt (bad) jp jo and (bad) in in rclb sbb rex.WB sbb add jo (bad) (bad) and adc es hlt jb add out fisub stos mov (bad) mov (bad) mov (bad) lock push repnz imul mov mov icebp adc xor (bad) decl (bad) nop bswap shr pushfq sbb repz fs movabs cmpsb in (bad) enterq jmpq scas cli (bad) xor cmc (bad) jnp loopne hlt rex.W int loop mov xchg (bad) (bad) ljmp xor (bad) cmpsl retq stos (bad) sub (bad) mov (bad) (bad) iret rex.WR cmp push push rex.W fs xlat hlt (bad) mov js xchg add jrcxz in adc rex.WXB mov lret rorb hlt pop mov rex.WX rex.WRX pushq in pushq sub pop test imul rex.W rex.WX jno fsubs add out movabs retq movsb mov cmpsl jae rol mov test push cli and test cmc sub clc hlt outsl clc (bad) lret and lahf fs (bad) or movabs xchg insb cwtl mov fdivs rex.WRXB sub fmulp out (bad) popfq (bad) or sub mov or mov retq xor fcoml (bad) ficoml (bad) in fidivl jns sbb sbb out (bad) lods movabs movabs jmpq fist (bad) mul push (bad) mov fist nop pop lods shl jmp hlt outsl (bad) sarb mov cwtl in movabs callq mov vpcmpeqb out sbb xchg movsb in and lock xchg lcall movabs rex or xchg lock (bad) iret xor fmulp ffreep shrb in fsubl cltd (bad) movsb enterq jmpq test rcl cwtl and retq outsl rex iret int3 nop iret ss movabs hlt (bad) movb and and insb xlat rex and iret and lods lock (bad) out clc callq pushq mov neg mov (bad) (bad) xchg in test mov rolb rex cs andb fisubr cld cmp fnstenv pop in test ja jl sub iret mul (bad) test nop movabs rex.X lock jns lods retq addb mov ror pushq and sub enterq jg pop out je movabs addr32 cld jae clc movsl hlt xor lahf iret sbb idiv in fdivrs ss clc cltd addr32 lret xchg (bad) pushq sahf int add sub mov rex.R jle add cld mov (bad) cwtl test callq adc xbeginq movsb nop cmp (bad) insl movabs callq std in jl pushfq shrb js rex.WXB and iret lret fsubr jnp test and (bad) pushq xchg jmp (bad) in and clc mov xchg jae push movabs iret mov shr rex.WRX mov (bad) out add pushq movabs out adc addr32 cmp nop mov hlt jb hlt and and hlt (bad) (bad) cld (bad) mov push scas (bad) cmpsl jnp rex.XB hlt (bad) imul push insb cmp data16 push cld and xor add adc mov and adc outsl rol (bad) mov fdivrl sub mov ror divl add lock cmpsl data16 push scas cmp test sbb mov pushfq loopne jb fadd movsb movsb fadds mov stc jno (bad) rex.X int sub jmp (bad) mov (bad) out jns adc in sub mov jae out clc fcomps sbb nop popfq in movsb (bad) (bad) js mov scas cmpsb cs int3 insb cmpsb subb adc mov scas jl cmc jo adc rex.WR retq (bad) movabs ds fldt movabs rex.W or in sahf (bad) out js callq out rex.W (bad) lock rex.WB leaveq jmpq add mov mov (bad) or in (bad) and or ficomp jns js movabs push loop mov ja data16 hlt (bad) in adc and rex.WB (bad) enterq ds out in or sbb orb mov movabs rex.WRX repnz (bad) mov pop loop add (bad) addr32 sbb or insb cwtl push insb mov lock clc pushq enterq ds fwait leaveq (bad) lock rex.R jle outsl (bad) int repz mov in push (bad) lods lock cmpsl mov fcomps cld mov mov repz hlt in (bad) add (bad) mov cmp sub retq (bad) and jmpq fcomp xchg sbb test push enterq (bad) imull insl adc (bad) adc rex.WXB nop cs sbb sub pop (bad) sbb (bad) outsb out movabs test xchg and or (bad) (bad) xor adc (bad) (bad) loopne sti adc std add xor and movabs or pop adc mov rex.RB out xchg cmc jp xlat (bad) stos rolb add in jno sbb add callq jrcxz adc add movsl add (bad) lret rol add xchg rex.R out nop (bad) shrb jne (bad) lods xchg sti pushq (bad) std leaveq mov rex jo cs std (bad) (bad) fdivrs pop je pop in mov xor xor (bad) ss jl push movsb xor add sub movabs rex.WX mov cmp sub adc clc iret test cs mov enterq sahf jne cmpb loop (bad) out lods jnp test in xchg mov clc jns add jp (bad) div in ds push mov add or imul cs mov je mov rex.R (bad) in (bad) mov callq add hlt and callq popfq push imul mov (bad) and xchg adc (bad) (bad) inc ficomp (bad) (bad) movsb (bad) (bad) (bad) frstor movabs add addr32 jmpq mov and jbe xor pop and sub lock add fmuls callq fsubr xor (bad) mov int3 test hlt repz xor and rex.W xor or sub jl rex.X lock test sahf xor xlat (bad) lea icebp jg (bad) xchg rex.W sub sub iret hlt xor pop rex push insb mov movabs jp out retq callq mov cmpsl mov test mov jrcxz xor hlt fsubl movsb (bad) push movabs xor sbb movabs movabs movslq jl clc pop jne rex.X test in jne adc insl sub lock adc pushq add sub jle mul cmp xor (bad) (bad) hlt cmc lods sahf movabs fs testl and mov in sbb (bad) (bad) out and pop iret callq pop mov mov fcos mov fistl mov shrb stc loop xchg hlt and (bad) xlat cld movabs cs callq fdivl cld cld movslq jo pop shlb mov out pop sbb testl xchg callq test sbb lret cld test pop ja pushq (bad) mov pushq test movabs mov lock cmp and std (bad) retq sti cli leaveq xor add pop ror xor push insb ror rorb rex jg xchg mov xor cmp xor (bad) enterq icebp adc (bad) stc fadd not cld in xor jo mov and sbb jp (bad) cld cmp (bad) cs pushfq incl enterq (bad) test cld (bad) in jns movsb adc mov mov cmp rex.WRX cmpb lock je lock cmc jo or xchg push or (bad) (bad) fs pushq and shr adc adc xor enterq pop mov jae out neg pmaxub in adc (bad) sub and and faddl sbb out loopne cwtl xchg insb push rex.WXB es mov hlt jnp mov push mov ja leaveq pushq test inc sbbl pushq (bad) sub rex.WXB sbb nop or hlt outsl callq fist mov rcrl adc rex.RX xchg rex.WX rex.WX rex.WXB rcrb hlt callq push hlt mov test (bad) rex.RX (bad) jo popfq push xlat enterq (bad) mov sub leaveq xchg movsb adc movabs and push rex.WRB movsb rex.WR data16 (bad) cli jnp mov (bad) cld movsl clc rex.WRX add shrb imulb sar (bad) mov pushq cld rex.WB add and rex.X movabs clc (bad) rex.WXB clc push hlt out and test mov cmc idiv lret jo cmpsl fs cmp lock (bad) mov jns sbb mov (bad) in in js callq pmuludq jmpq test in (bad) mov mov adc rolb cli add scas cmpsl rex rex.WRX rex.R rex.WR adc hlt ljmp cmc mov movsb rcr (bad) stos xchg rex.WR lock push fsubs lock test hlt sub (bad) push mov mov test and cmpl hlt in icebp hlt (bad) rex.WX mov test rcl mov ds add (bad) cmp mov cmp nop outsl clc (bad) outsl shr fdivl (bad) mov iret adc or (bad) lret ja pop (bad) (bad) sub (bad) adc insb leaveq neg outsb adc mov xor jns or fmulp mov leaveq cli mov movabs in clc (bad) jne xor and mov callq leaveq add repnz addb jo mov mov in rex.WR adc mov mull (bad) int (bad) sarb rex sub stos (bad) jle insb leaveq push test jo push cmp int3 movsb sub mov rex.WXB lock and movabs push movabs and test jns pushq movabs rex.WRXB cmp push lock lods callq (bad) adc pushq bswap lock (bad) and lock test shrl adc pop stos cwtl xor rcrl movabs test add sahf out idiv xchg rex.X lock sub or stos stos or stos stc repz outsb push (bad) fsubs adc pushq push ja pop (bad) (bad) fisubl pushq cld jo out mov jno iret pushq js out pop (bad) adc mov cmpsl rex.W lock fcompl callq test lock xor sub (bad) add push mov (bad) add cmpsl data16 jnp (bad) insb fiadd xchg or lock cmpsb jno cmp add insb vmovaps hlt sub add push push data16 xchg iret iret xor jno iret rex.B lock add mov xchg mov mov jmpq out xchg mov push fist ss int3 test (bad) mov add rex.WRXB rex enterq jle sbb retq rex.RXB enterq sbbl lock gs sti outsl test retq outsl clc fldl test sub add out outsb jbe callq pushq add or movabs sub rex.W rex.R sar (bad) lock pop (bad) rex.W lods or adc jno pop retq rcrb xchg and push or and ds outsl jno iret pushq out nop (bad) rex movsb jmp (bad) (bad) rex.RB lock (bad) add sahf lock (bad) ja xor cmp xchg mov (bad) movsl adc and rex.X js hlt mov iret jno repz sub insb mov fsubl lock rex.WB (bad) fiaddl nop xchg (bad) and (bad) lock (bad) mov (bad) xchg mov (bad) mov adc callq movabs lret cmpb sahf add sub clc retq outsl mov rex.WXB rex.WR js cmp (bad) sub subl fmul and fisubl lea lods incl outsl test xor (bad) (bad) outsl cmpsl mov rex.RB cltd stos xor sub pop insb hlt adc sub (bad) out cs jp fisub (bad) repz movabs pushq xor fs push cmp mov and rol cli movabs sub sbb clc movabs ss lock iret gs vpinsrw xor mov lods lock jl (bad) sti fs retq mov push adc sub iret xor hlt out insl mov rex cli lock xor lock movabs (bad) fisubl test add (bad) lods or repnz cli rol iret (bad) (bad) insb rcl retq rex sahf push ja movabs je callq (bad) fildll data16 test or push fs js hlt mov mov cmpsl repnz je rorb mov (bad) xor fsubrs iret nop imul pushq fsubl adc pushq mov jge jle jmpq mov lods push iret cmpsb js addr32 mov hlt jrcxz out xchg rex.R rex.WR cmc in (bad) pop mov ja sti adc test subl fs rex.X lock leaveq (bad) xchg mov (bad) fiadd jmp or cmpb xchg push out insb (bad) enterq lret ja rex lods jo push iret addr32 mov movabs fdivl (bad) test and sbb cld pushfq rex.R rex.R in fdivs mov and mov or and lock movabs cs cmpsb (bad) imul mov jp push cmpsb push sbb repz jrcxz jno hlt test leaveq xchg (bad) sub (bad) sbb (bad) jbe (bad) adc mov frstor (bad) shrb int3 test rex.WRXB (bad) sub clc enterq jno iret jno (bad) sahf lods jne lock in repz jnp (bad) rex.WRXB (bad) rex.WRXB pushq lock mov stos out (bad) mov sahf (bad) lahf movabs ficom xor jo lock ror cmp or adc pushq fs sbb (bad) outsl test stos outsl retq mov mov test addr32 (bad) and lret push push mov jl (bad) mov clc xor (bad) test div rex.WX (bad) test lods lock (bad) (bad) rex.B push int in cmpsb push cld out xchg imul out (bad) mov (bad) jbe es fcomp mov (bad) mov movsb push mov movsl hlt (bad) out push or mov stos add sub cwtl mov push scas (bad) mov clc fsubl in push outsl (bad) int3 pushfq jo adc lods push or neg ss movabs (bad) jl (bad) addr32 cltd mov pop test rex.WRXB fist (bad) mov pop jl test stos (bad) (bad) mov in (bad) mov rex.R mov adc cmp xchg mov adc (bad) callq mov stc and callq retq in ljmp lods hlt push int jrcxz or divl (bad) mov and int3 mov xchg lock pop sbb test in fs je pushq js stc test rex.W cmpsb enterq (bad) repz loop hlt adc add (bad) lahf xor (bad) add cmpsb andb lock sbb movabs enterq enterq (bad) rcrb sub xor jrcxz mov js sbb movslq lret dec sbb movabs cld mov mov rex add loopne (bad) iret (bad) rex.XB sbb mov sbb adc jle (bad) jnp in (bad) fsubrp pop sbb and repnz sarb jae and rex.WRX hlt or rcr (bad) loopne orb imul pushq pop and xor rex.WRX sub out sub loopne out lods add mov loopne cltd (bad) (bad) xlat (bad) pop loopne je out test (bad) and xchg and enterq loopne jne xor xchg shl lahf add mov ja push rex.WXB loopne push mov xchg cmp data16 mov movabs mov and imul add out loopne xchg (bad) push fildll push loopne imul imul (bad) mov rex.WXB add sbb (bad) (bad) loopne out add sbb loopne add loope ja xor movsl mov mov and (bad) outsl pushq sbb (bad) mov mov loopne jnp xor sbb loopne sbb cmp xor ja loopne,pt or jg add (bad) mov jne mov (bad) movsl jrcxz clc pcmpgtd callq xor enterq loop adc xor push cld rex.X jl insb rex.WRXB sub xlat (bad) mov test sub xchg out mov loopne fiadd rex.RB xchg movsb mov (bad) stos callq je add adc xor lock add cmp sub and sub jo (bad) xlat xchg mov test loop (bad) xor cmp out movsl (bad) callq sub movsl callq sub xlat push cld ds cmp (bad) rex.WRXB and sub cmpsb pushq mov (bad) rex.WRXB sub out rex.X ss js test retq lock movabs or and out pop xlat jp rex.WRX lock mov fcom (bad) cld (bad) pushq adc iret sub add out rex.WX rex rex.WRX (bad) int cmp callq adc sub add out push xlat js pushq (bad) rex.WRXB sub add out (bad) es add test push sub jbe data16 xchg cld subb (bad) (bad) sub fsubrs lock cld in pushq adc iret add xor out push xlat jp rex.WRX pushfq (bad) mov mov frstor push js lods callq xchg sub xlat hlt cld out (bad) iret (bad) sub add out sub push cld jbe test mov fadds out repnz xor (bad) pushq (bad) int xor sub (bad) rcrb insb loopne (bad) loop xor xor pop callq add out push fsubr or insb mov mov lock cs mov insl rex.WB jmpq add in sub clc je and shr movabs outsb ja cmp fwait mov ja adc adc sahf callq (bad) pushq (bad) (bad) mov out jb rex.X push pushq es sbb xor fsubrs stos (bad) (bad) sub rex.WR pop xlat add (bad) loopne sti pushq sub (bad) add movsb fadds out pcmpgtb xorl push fdivr cmp mull out leaveq fadd jp rex.WRXB and cmc fdivrs out mov cmc lods callq (bad) es pop cmp xchg callq cs in cld in pushq (bad) callq sub add nop (bad) callq mov rex.RXB sbb callq outsl cmpl jl mov mov ja (bad) movslq sbb test cmp (bad) pop fnsave fdivrs (bad) sti sub imul movabs mov nop push or adc loopne lock popfq (bad) pop rex.WR (bad) sub adc mov mov (bad) (bad) rex.R (bad) ss imul mov and (bad) xor outsl sbb imul rex.WXB movabs or vpmuludq xor rex.WRXB adc (bad) (bad) loopne loop mov movsb loopne xchg mov rex.WRXB insb pushfq (bad) enterq pop loopne adc (bad) fsubr push fcmovu loopne rex.WR stos movabs push mov lahf std loopne (bad) ds and movabs push cmpsb loopne rex.XB (bad) cmp loopne sub add mov push enterq fisub (bad) icebp xchg xchg iret loopne rex.RB rex.WRX xchg and loopne jrcxz adc adc lock jb sarl rex.B fwait loopne imul jnp xchg push sbb (bad) lret in pop rex.WRX sbb jrcxz and push rex.WRB movabs (bad) cmp retq cmpsb lret xlat xlat mul test mov rex.RX add sbb push loope adc vmread and xor test rolb in in scas sbb xchg imul repz (bad) ficomp ss (bad) (bad) (bad) rex.WB jg adc push loopne mov and (bad) pop (bad) loopne movabs loopne fld sub cmp xchg incb xor fwait movabs xchg loopne (bad) and (bad) and sub jle push adc vaddps test push leaveq (bad) rcl shrb sbb jnp mov loopne or (bad) mov in icebp jmpq mov imul xchg mov rcr jne mov outsb adc jl mov std (bad) push and out fwait nop in fildl mov icebp jge in test cmc in push cmp and loopne pop xorl (bad) (bad) test cli loopne rex.RX outsb (bad) sub in xchg pop xchg adc rex.WRXB mov loopne fucomi insb fcomp scas nop nop fs (bad) sbb loopne loop shr fnstenv repz stc pop xor (bad) int sbb and sbb sbb cmp cmp cmp rex.R sahf loopne xchg fcom (bad) loop add cld jrcxz (bad) fimul pop or fmul (bad) sbb xor jl (bad) mov (bad) mov sub adcl pop xor mov (bad) (bad) (bad) mov cmp andb icebp mulb js std sti (bad) in fldt rclb (bad) lret jo rex.RXB iret xor adcl add (bad) jae je test push rex.RXB data16 (bad) loopne in movabs (bad) (bad) mov (bad) shll mov xor test rex.WRXB push adc cli iret push xor sar add popfq ficomp int3 cmp rex.W adc xchg out xchg mov loopne and rex.XB mov movabs std rorb in pop (bad) xchg movsl lock jmpq cmc leaveq jmpq sub rex.WR (bad) nop and cltd (bad) (bad) loopne jp rorb pushfq mov nop mov rex.RXB and int3 enterq (bad) retq mov pop (bad) movsb fsts mov in loopne rex.W test jmpq divl jne mov jmpq xlat (bad) or addr32 faddl fwait insb outsl movsb and loop xlat loopne push imul rex.WB (bad) gs mov (bad) retq adc loopne (bad) divl pushfq data16 outsb nop loopne lahf xlat lock sub repnz je push (bad) cmp mov pop (bad) jno xor (bad) ja mov loopne fstps sbb clc adc mov pushq icebp scas add add xorb jmpq (bad) jo (bad) je callq repz and adc add lret ficompl int3 jg cli movabs nop sti callq rex.RX mov stos fwait (bad) sub and (bad) sub jo imul pop roll push cmpsl testb jmpq mov xor insb out dec pop rex.WRB (bad) xor (bad) insl jae and loopne rex.W stos pop jg loopne mov mov fsubrs mov jmpq addl loope jae loopne out test mov outsb fdivrl test sti (bad) (bad) sbb xor or callq xlat cmpsl add rorl movslq sbbl rex.WB mov std (bad) rex.RB push xor add push loopne add es (bad) mov mov jl movabs movabs rex.WRXB add ss callq (bad) adc retq (bad) sub (bad) and loop mov in rex.W add sub mov cmp adc add add sbb rcrl imul pop movslq or insb xor pop add cli shrl in push in js mov add repz cmp or movabs (bad) add jo xor in lret rex.WXB fcompl movabs push outsl callq lea mov icebp loopne and (bad) cmpsl mov subb mov fsubp outsl out (bad) and cmp (bad) test loopne adc outsb (bad) jl rolq (bad) and add cmpsl sahf mov (bad) negl sbb mov scas rex.WXB stos jle cld movsl or sti lods push jb shl retq adc movsb clc test xchg sub ds out rex.WRX loopne jmpq jno loopne cmp sub psubsw rex.RX (bad) imul loope xchg loopne sub movabs (bad) and xchg pop jae insb jmpq (bad) fsubl push push test mov xchg fsubp pop xchg scas (bad) (bad) push sbb adc and out cld or sarb push (bad) jae outsb (bad) out rex.WB fwait int lods lret adc push push lret in pop xchg pop sbb jmpq xor xchg mov pop loopne jns cmpsb movslq and cmpb int3 loopne pop stos xchg add push outsb jrcxz lahf adc sub sbb hlt jp decb movabs callq jge lahf pushfq shrb jnp and movabs subps fcompl fwait jg in xor and (bad) lahf (bad) mov push sahf int3 sub cld or mov mov pop int3 pop in (bad) lea lret test repz scas jbe mov jo int jge movslq sbbb movabs (bad) cli (bad) adc rex.XB rex.WRX (bad) cmpsb loopne jle fmull lods mov cmp xchg (bad) and jae add decl sub loope loopne jns mov push in mov mov (bad) (bad) (bad) rolb pop stos jg (bad) push out mov cmp loopne sub adc add ficoml jmpq push mov rex.WXB mov or sti add sbb rcll (bad) loopne or test (bad) loopne pushq jb loope (bad) cmp int mov movabs xchg mov out loopne mov je (bad) rex.WRX gs (bad) jmpq (bad) (bad) ss movb stos outsb pop xchg cli add mov xor movsb xchg (bad) mov out and test push callq mov and addr32 retq fsub jl sub clc mov (bad) mov and stc in sbb loopne or xchg shr rex.WRX fs fsubl sbb loopne mov add addl sub loop sub jns fdivrl mov xor push insb (bad) cld or xchg sbbl cli mov fwait adc adc push out (bad) xlat nop xchg outsb sbb loopne push fldl (bad) in cmp xor ljmp sbb pop movabs (bad) loopne shrb or mov jno gs fdivr loopne xor loope pop movl fiadd (bad) and stos mov jne out sub or cmp sub mov adcl mov scas (bad) es jmpq push test imul ja (bad) (bad) (bad) (bad) shr adc stc scas (bad) loop adc (bad) rex.X loopne (bad) fs (bad) js (bad) mov cmpsb loopne add popfq mov fcoms lods pop add xchg adc jmp (bad) rex.WXB sbb loopne sub movsb incl (bad) stos notl push sub sbb (bad) jg loopne xchg cwtl incl (bad) jb jae test jrcxz xor movabs rcrb (bad) in lock je xchg in mov rex.WRB rex.WB test sub test je jno loopne mov jmp loopne (bad) scas (bad) mov loopne add xlat push callq pop lock sarb adc xchg lods add out cld (bad) sti fsubrl hlt icebp movabs cmp out jp add lock xor (bad) loopne gs mov (bad) insb rex.RX rex.RB test (bad) xor (bad) icebp xlat add sarb fwait out mov ss not (bad) cmc scas pop loopne sbb (bad) fucom (bad) xchg insb mulb sbb stc loopne pop outsl adc ja adc loopne add and fnstsw loopne rex.X jbe lret xchg (bad) sbb pop adc cmp sbb mov sbb nop xchg icebp (bad) or movabs (bad) outsl (bad) pushfq loopne lods retq movslq jl or cld ja jp or movsb sub and (bad) or loopne js lahf loope loopne test mov jrcxz jg lods (bad) fsubrs mov add sti jrcxz xchg sub and popfq loopne add fnstsw adcb xchg sbb sbb push nop lods lods (bad) cmp rex.WX jno sti jnp sbb int jo pavgb rex lods sub ds loopne lahf rcrb xlat and fdivrs jmpq rex bnd decl movsb xor iret ja cwtl adc jl shl cmp xor jns push loopne int adc ja push jo rex jae (bad) pop movabs shll clc es jmpq pop (bad) loopne insb test push (bad) sbb nop mov jrcxz fstps sbb lret rex.WRXB mov mov js lods movabs mov adc (bad) rex.X cld lock out loopne icebp cld insl ds (bad) repnz movabs movsl nop (bad) out sbb loopne mov pop sub (bad) or (bad) xchg xchg pop cwtl add cltd xlat (bad) adc pushfq rcl rex.WRX rex.WX (bad) movabs push loopne rex.RX cmpsb lods add adc in adc cmp jl push loopne (bad) in int retq (bad) mov adc idiv cs sub rex.B scas sbb or (bad) nop mov imul adc cmp lahf loopne rex.RB (bad) loopne sub cmp (bad) jmpq stos cmp loopne rolb sti xchg loop movabs cmc jno in (bad) loopne push adc xchg insl xor sbb popfq pushq rex.WX rex.RXB mov in loopne push out lods icebp int mov cmp mov rex.X and pop fs js (bad) mov rex rex.RB mov js xchg sahf loopne cwtl repz xor jae loopne mov rex.RX sub jg (bad) (bad) and scas add (bad) (bad) ss mov push (bad) (bad) cmpsb sbb (bad) nop pop xchg lret pop icebp std or rex.WB sti and xchg out loopne push jb sub or clc repnz (bad) repnz mov sbb jrcxz (bad) (bad) mov shl loope fdivr ja jp loopne jle cmp adc push loopne cmp rex.XB jo decl mov and xlat and jmpq jrcxz clc (bad) fild sub xchg sbb cmp loop push rex.WR or (bad) xchg test scas outsb icebp mov (bad) rex.XB sub loopne xor xchg mov repnz imul lods or loopne stos adc (bad) mov shll (bad) popfq outsl push sbb sti callq cmpsl cld rex.R and xchg mov loopne cmp add in movsl (bad) int3 (bad) sbb and pop push mov leaveq pushfq cmp pushq mov fwait out cwtl loopne (bad) xchg jmpq rex.XB mov stc mov xchg xor push cmp loopne cltd fsts or cmpl in xchg fbld xchg sub retq cmp adc loopne jp repz push pop sti mov loopne imul (bad) callq (bad) xchg rex.R cmpsl sub xor movabs (bad) jg int adc movabs jmpq rex.X fsubp sarl rclb retq pop (bad) popfq xor pushfq stos jmpq add sbb hlt loopne cmp mov (bad) fildl xor rex.X stos outsb cmpsb jbe pop rol adc outsl insb enterq (bad) mov in clc cli pushfq xor jne faddl xchg loopne test rex.B cmp repnz mov sahf push rex.RXB mov loopne jmp mov and fld in (bad) loopne adc (bad) ja retq xor sbb jrcxz rorl xor (bad) icebp lods add imul idiv cmpsl and test (bad) mov lea int3 xor (bad) xchg push rex.W sti mov adc xor retq loopne test add sub pcmpgtw andl leaveq (bad) xor clc insb sub lock adc xchg and rex.WRX rex.WR xor add loopne xor (bad) xchg in icebp mov (bad) mov sub loopne xchg (bad) cmp sub adc jmpq movsb xorb sbb lods int callq jbe jbe pop add in in (bad) add and (bad) movsb (bad) adc sti (bad) loopne std movabs rex.X pop or jg push in cltd in mov and fcomi and push cwtl loopne movabs push (bad) icebp out rex.W mov movabs out add in mov sbb and movabs mov xlat loopne pop and sub (bad) movabs stc push (bad) (bad) loopne movabs rex fisubl rex.WXB mov out add (bad) mov (bad) or and and push repz (bad) xchg push mov std sti loopne lret loopne mov jae jmpq xor cwtl xchg xor add adc ficompl shrb loopne rex.RX xchg (bad) jmpq add xchg shll mov jl loopne movslq mov pushfq enterq sahf (bad) ja (bad) rex.W popfq (bad) lret and loopne mov rex.RB (bad) std xchg mov and int3 jo mov mov or leaveq enterq mov push push ja,pn (bad) xchg cmp insb lock ror retq cltd xchg adcb cmp sbb pushfq mov outsl int rorb loopne add and sbb loopne je mov cld rex.X push loopne jae push and (bad) outsb pushq (bad) movabs jrcxz push loopne movl repnz cmp in sbb cmp (bad) stc cwtl and testb (bad) mov movabs cwtl (bad) (bad) xor int xchg or fsubrs test (bad) cmp addr32 xchg repnz sbb jne divb movsb int rex retq (bad) shl jp or loopne rex.WXB stc in mov cmp cmp (bad) or mov cmp loopne imul cmp pop pushq jbe mov lahf gs push jrcxz ds jrcxz (bad) stos frstor push movabs loop rex.WX pop add (bad) popfq in xor rex.WR pushfq hlt (bad) insb lods jmpq loop test callq scas xor in pushfq movsb or push movabs mov sbb icebp std adc push jmpq or enterq sarb xlat cmp scas (bad) jmpq std rex negb pop sub pop test roll loopne popfq mov sbb scas movsl jl rex.WB fstps mov cwtl test and rex js test in (bad) movabs movabs jmpq jmpq jmpq jae cmp bt cmp jge jae jmpq jmpq jmp add (bad) (bad) mov clc push iret pushq out mov cmpsl mov (bad) (bad) sbb rex.XB cld jg mov (bad) push test lahf rorl (bad) movabs rclb rex.RXB xor jge inc loope push adc xchg sub add movsb sub fldl xchg jrcxz sub hlt add adc rex.XB fildl (bad) sti movabs mov cltd push (bad) push sti sahf lods jnp add add or mov or (bad) movabs out or sahf scas sbb ss lahf test test sti mov (bad) push hlt repz ficom sarl out push movsb mov (bad) xchg mov scas sub repnz jns xor clc stc jmpq jb cmc cmc cmp jmpq jne not add inc sub mov cmc stc clc clc add cmc movzwl cmp mov stc cmc test add jmpq callq rol or rcl stc add bswap rcr mov cmp cmp stc cmp cmpb jmpq jmpq jae cmc xor xchg clc mov sbb add mov jmpq push movslq xor cs insb add xchg jle add xchg (bad) (bad) add imul stc bt add jmpq setns mov jmpq lea jmpq rex.WX retq (bad) ja fcomip popfq loop rex.X xor idiv mov push mov leaveq push ds push jg (bad) (bad) (bad) in mov xorb cmp push sub (bad) (bad) mov adc (bad) xchg test mov lret pop or jns push add xorl jno jl test and xor icebp mov jno jp callq (bad) (bad) (bad) sti js (bad) jb (bad) (bad) (bad) (bad) movslq subb je sub (bad) (bad) (bad) jmpq movabs (bad) (bad) fildl mov jae mov rep sahf mov (bad) push xor mov jns (bad) cwtl in adc add lea jmp (bad) fistpll idiv sahf lods (bad) xorb lods jg sub flds rex.WR in xchg add icebp mov sub rolb (bad) retq sbb cli xchg loopne faddp insb (bad) cmp push (bad) or xchg int3 cmpsl stc (bad) jae outsl std push rex.XB movsl jne lods pop adc rex.WRXB negl sar push sub lret jno jo (bad) outsl nop out iret ss sar (bad) (bad) decb adc clc pop bswap pop rex.X (bad) fnstenv lock sbb (bad) (bad) mov test test xchg xchg cmp push decb jb ss repz (bad) (bad) incl xor (bad) add lock sarb adc pop int add mov xchg jne pop xchg pop out (bad) pop out (bad) or sbb lods std xor popfq iret and jne mov in rcr and pushfq sub decl sbb stos rex.R data16 test bsr push mov and (bad) pop pop (bad) in (bad) loopne js xor jmp pop test jnp rex.WRB sub loop pop (bad) addr32 test (bad) in xchg stc xor scas cmpl add loopne push stos mov stos xor insl cmpsb fnstenv (bad) rex.WRX loope jmpq mov mov (bad) (bad) (bad) sti jg rex.RX (bad) pushq pop je sub (bad) (bad) (bad) (bad) (bad) ss rex.RXB rex.WRX xchg (bad) test rol stc callq pop rex.XB fwait mov icebp pushq movabs (bad) mov out mov rex.R (bad) jge clc enterq xor cmc cmpsb mov in rex.WRXB lods movabs ss sbb xchg lsl je movslq ja mov or repnz xchg hlt pushq rolb (bad) pop jo mov (bad) sub stc int3 and lret mov sub (bad) outsb pop (bad) (bad) xchg (bad) lret insl test mov sbb std sbb (bad) xchg cwtl test (bad) (bad) std mov cmp cmp (bad) jle xor sbb (bad) jne push mov repnz mov mov out (bad) out movabs sbb rex.WB cmp test jrcxz sub adc jmpq je shlb (bad) or fdivrs (bad) jbe adc push (bad) (bad) and fistpl xchg (bad) (bad) pextrw pushq xor mov out adc retq (bad) ja add sub btr bts add sbb xor neg stc mov xor sar mov bt clc test stc repnz jmpq jmpq (bad) lock mov or in or sub sbb rex.W (bad) cwtl rorb xchg pop or (bad) mul in out rex.WX rex.RB xchg (bad) loope (bad) sub fwait mov lods rolb lret andl imul mov fildll adcl mov scas xchg (bad) push push mov repz rex.RXB mov lea mov (bad) (bad) decb (bad) (bad) (bad) ljmp mov (bad) push add xchg imul (bad) adc mov mov (bad) retq mov or in loop (bad) xchg pop scas negb jmp or out lock fimull stc xor (bad) movabs lods ds test cmpb jmpq (bad) jrcxz cli cld rex.WR cs mov rex.WRXB cltd jno cmp mov mov cmp insl addr32 pop jmp fwait rcrb fwait (bad) enterq subl sbb adc adc pushq sbb div sahf (bad) push or push nop mov rex.RB push stos sub sbb stc sbb cmpsl stc add or movsb lea test (bad) (bad) cs rex.W enterq shl (bad) (bad) (bad) sti (bad) stc adc ja (bad) (bad) (bad) adc push icebp mov mov and (bad) or (bad) (bad) (bad) callq (bad) or testl sub (bad) pop (bad) jl and (bad) mov clc movabs je mov (bad) jp push retq cli scas in mov adc xor xchg mov jmpq callq xor shrd dec and add adc data16 repz stc fisttpl cltd rcl lock mov jmpq je or shrd cmp or push test clc mov shr bt btc sub jmpq stc imul clc clc add jmpq jo ds rex.WRX rcr fcom jl pop (bad) sbb (bad) rcrl xchg pop cmp pop (bad) fidivl lea stos out adc jae (bad) or int3 cmpsb and sub scas xchg lcall fwait push sub loopne outsl mov out xor xchg pop hlt jmpq pushfq ja fwait add sti and (bad) imul out scas or (bad) sti mov (bad) (bad) (bad) (bad) cmpsb fbstp movabs lret add add add fild test push test sbb mov mov pushq add add mov callq lret stos test in mov retq (bad) mov xor sub (bad) (bad) jo jg adc jmpq dec cmc xor bt jmpq jmpq je shld push xor inc adc mov not not sar neg sub seto movsbq sets lea jmpq xchg lea (bad) iret and scas rol scas adcl jrcxz jnp leaveq repnz sbb (bad) mov cmp sbb adc mov push (bad) in (bad) sbb loope loope in mov xor stos rex.WRB cmp and jae add rex.WRB or mov fwait (bad) rcll js xor rex.R (bad) (bad) sti mov (bad) (bad) (bad) (bad) mov fnsave clc jo jg mov jl (bad) test add in adc loop rex.WR cmp ss rex.WXB mov cmp add add faddl sti (bad) sti mov movabs adc mov jno mov mov adc or pop loopne rex.RB fidiv adc (bad) mov cmp jl (bad) rcrb adc rex.WX add subl hlt (bad) pushq sub ja sbb adc jl lods pop or push mov xor addr32 in (bad) adc mov xorl mov sub sahf jl push movsl xchg movabs outsb rex.R adc (bad) push (bad) (bad) (bad) decb pop (bad) mulb mov (bad) rex.XB (bad) jp cmp (bad) pop shrl mov insb (bad) repnz mov (bad) cltd popfq lcall rex.WRX or insb pushq fmuls mov cmc and rex.RB lock inc inc and sub bsr (bad) lock or btr bsf mov not shr (bad) lock cmp clc repnz jmpq lea lea movzbl mov not pop jmpq xchg rex.WRB mov add mov (bad) add cli rcll adc jo sbb jae xor push add imul xor xchg iret sbb int3 sub stc (bad) adc loope (bad) out rex.RX and data16 xchg int3 (bad) cmp xchg rex.WX rex.RX faddp rex.XB cmpsb (bad) movabs shrb callq (bad) (bad) sti insl in xor (bad) (bad) (bad) (bad) pop adc test mov mov callq add jl add xchg (bad) push push rex rex.WRX (bad) (bad) dec xor sbb callq adc rex.RX lods push rex.R cmp xchg rex.WXB (bad) cmpsb rex.W lods lea cli mov nop add (bad) lods (bad) add in sbb (bad) rex.WRB pop cmp and jo nop movslq test adc lods and xlat (bad) and fnsave stos rex.WB rex.WB mov lret pushfq push (bad) jne test (bad) sub sbb pushq rex.X xor (bad) mov stos pop (bad) std push (bad) movabs test mov rex.WRB fcmovnu or mov add fs mov sar test xchg movabs in xchg rex.WRB ds test push mov in fild mov cltd (bad) es add enterq popfq out and (bad) (bad) sti scas enterq (bad) (bad) (bad) (bad) (bad) cmc xor add xor pop enterq and callq add sbb cmp loop (bad) retq pushfq (bad) mov mov loopne cmp jrcxz popfq stc (bad) push fisttp movabs loop roll loop rex.WX movabs mov retq jb stc cmp test cmpb jmpq movsbw sub bsr mov clc seto rcl (bad) lock and rol shr setbe mov test stc test stc test jmpq jne clc ror jmpq cmp test jmpq jmpq push push push push xor cs insb add sub movabs mov test add jns test movabs lock mov mov (bad) cwtl je push xchg cmpsl movsl imul cmp movabs movabs jmpq push adc ds rex.WR xchg lret or jp pop push sub (bad) (bad) (bad) cld movslq mov (bad) (bad) (bad) decl rex.X cltd in xchg mov mov cmp rex.RXB pop pop ss sti lret pop cs (bad) mov add add lahf xor cli (bad) movslq je fisttpl xor test cmp cli sahf scas mov sbb push jle enterq test xor jg jge rex.X movsb (bad) (bad) pushfq mov imul enterq (bad) lcall xchg (bad) repz (bad) popfq add and sbb pop (bad) sub test movslq rex.WB push add pop (bad) push callq mov incl push pushq rcl iret in cmpb xchg roll not loop roll repz pop rex.R mov mov pop mov cmp mov or (bad) (bad) mov sbb pushfq in (bad) (bad) (bad) sti int3 mov (bad) (bad) mov shrl adc bswap in sbb sbb adc pop cmp out lea and cmp rex.WB callq scas mov fwait rex.WX sahf (bad) loop mov cmp add cmp shrb push es cmp out xchg add js adc outsb (bad) adc sub in int (bad) or and mov clc cltd sub sbb shrl sahf mov cmpl pop push xchg (bad) out mov rex.WRXB adc jmpq outsb rcll adc rex.B clc (bad) lods je int3 (bad) data16 sub rex.WRX jnp (bad) adc jle lea int3 lods add (bad) cs (bad) sub jne fldcw out or and xlat pop icebp movsl xlat pop repz mov int3 cmpsl movabs xor xchg fwait mov push (bad) gs (bad) (bad) sti mov or (bad) (bad) (bad) decb movabs add jnp int3 pop xor loop sub hlt add fdivrl imul adc mov (bad) cmp mov icebp pop cs mov cmp (bad) test (bad) mov cli (bad) (bad) sub jmpq add divb pushq mov in mov xor xchg cmpl (bad) add mov or sub or xor xor (bad) add scas cmp xchg xor cmp mov fisttp sti test (bad) pop xor cmpsl js (bad) test xor mov (bad) xchg rcrb movslq cmpsl clc sub test or test (bad) movsb cmp cmpsb cltd add (bad) popfq mov cmp pop (bad) loope gs (bad) (bad) std sbb add add or (bad) rex.WXB icebp iret insb loope sub (bad) hlt xlat ja lret cld sahf out mov retq sbb loop push cmp add push rex.X cli stc sub (bad) je jmpq callq bts shl add not mov test cmpb jmpq mov cmc mov stc repnz jmpq sbb or rcrl or push xor (bad) nop nop add mov or movsl pushq (bad) sbb jge mov (bad) sbb (bad) mov (bad) (bad) je mov or xchg sub mov data16 mov mov rex.B sbb mov data16 add (bad) rex.WR and pop fldt add (bad) (bad) cld sbb (bad) (bad) incl add in xor test (bad) insl jns (bad) sub (bad) ds rex.W pop callq jns xor cmp movsb cltd fxch movabs sbb add add sbb and or (bad) sahf mov icebp icebp orl pop jl stc pop jno jg jo fnstsw sub pop out (bad) mov (bad) (bad) pushfq mov push mov sti outsb xor (bad) push push push rex.WB cs rex.WR rex.WR test bt cmp add cmp cmp jmpq test js push mov xchg mulb retq or pushq (bad) repnz add cmp ja and xchg retq pop lock fidiv cli and xchg mov rex.WR lahf repz js mov leaveq cmp push mov sbb out loopne movsb adc movabs (bad) (bad) cmp imul movabs nop lret add mov (bad) (bad) cld and fwait cmpsl cli (bad) (bad) (bad) lcall (bad) nop fs (bad) push sbb ja (bad) repz mov push rex.WRX rex.RX sgdt add add jnp fadds xlat mov fisttpl mov pop rex.XB (bad) rex.RB add push or in cld popfq and std scas add sahf rex.WRX add sbb sub fdivs out lods fnsave clc rex.RXB jmpq add jmpq andb test es pop cmpsb rex.WRB orb jo mov (bad) repnz retq cmpsb (bad) ss jrcxz xchg (bad) movsb and sub xchg movabs mov in shrl push jo leaveq and jno xchg cli rex.RXB rorl ficompl sub je mov mov rex.WB (bad) stc push (bad) (bad) (bad) sti sub test (bad) adc test push leaveq je lea movsb sti sub (bad) (bad) dec pop jae rex.WRX pushq rex.XB (bad) pop test add cmpsl rex.WXB xchg jb sub or outsl adc cli outsb adc jbe lods sub cs data16 sbb fnsave mov jmpq xor mov ss (bad) jb jns and jno test fisubrl (bad) cmc icebp test (bad) mov idivb xchg jns iret out xchg mov insb data16 xchg nop (bad) (bad) mov (bad) mov xor or jbe (bad) add (bad) fisttpll sbb cmp push xor and mov cmpb nop sbb (bad) mov retq icebp fstps (bad) js mov test and rex.WXB (bad) (bad) (bad) xchg sbb out mov and add add and xchg mov (bad) xchg or cli int mov jg retq stc (bad) rex.RB add jrcxz (bad) jmp out mov jle out rex.WXB movsb in rex.WXB rex pop es cs mov add sldt jmpq jmpq add test test cmp jmpq jne gs xor fs insb add pushfq mov jae pop xchg in mov addl int stos sbb mov mov imul test fxam fiadd rex.WXB sub add mov out (bad) pop movabs int3 (bad) jb addr32 enterq in out clc rex.WR lock (bad) (bad) sti sbbl rcrl pop push jmpq cmp xchg sahf and fildl test xchg fistp fcoms mov fcomps scas (bad) stc mov (bad) (bad) sub (bad) xlat hlt (bad) (bad) (bad) callq xchg rex.WRX rex.WXB mov cmp outsb (bad) (bad) outsl (bad) xor retq (bad) sbb rex.XB movsb int3 mov sub jo cltd clc push sbb outsl lock (bad) sub sahf data16 gs mov add cmp jmpq jmpq add jmpq mov in lahf rex.WRXB pop mov xor loope jo movslq sub mov xchg negb or fwait sbb xchg jg mov (bad) mov outsl jae push fist clc jg insl outsb jg or rex.WRB (bad) pop jo lods (bad) rex.RXB cs fstl (bad) (bad) cld xchg rex.WX pop add (bad) (bad) (bad) cmp adc (bad) sbb mov push test push xor and mov push rclb lock (bad) rex.WRX jno add add (bad) add je movabs (bad) and hlt in pop pop cmp enterq xchg cli (bad) rex.W ficoml add pop (bad) imulb add stos mov sub push sub mov in jle (bad) cmp popfq cmc movsl sbb loop ds xorb pop adcl (bad) (bad) or retq xchg in adc push jle (bad) (bad) lret retq jnp leaveq and sub fcmovnbe lods mov (bad) and out roll (bad) (bad) sti or jrcxz add (bad) (bad) std repz insl adc add mov incb xchg mov xchg jne test push nop decb frstor jbe retq movslq (bad) xchg rorb mov (bad) jne xor callq sub xchg mov adc pop data16 push sub or xchg fwait xchg xchg rex.RXB rcll test mov and mov add icebp push jne setb bswap mov shrd bsf sub clc bsf bswap mov cmc stc bt sub bt test stc clc pushq test test bt bt cmp jmpq jmpq cmp jle add bt jmpq (bad) sbb clc lret (bad) pop imul adc rex.RX (bad) cmp fdivrp movslq pop mov or je iret out (bad) imul jae mov nop cmp std add (bad) test xor jl mov mov rex.WRX (bad) (bad) (bad) scas (bad) add rcr mov adc (bad) (bad) callq mov leaveq popfq xor mov retq add decl scas rex.RB lret outsl (bad) mov pop rex.WRXB movabs or mov fisttpl xlat pushq add or cmp bt sub bt bt cmc pushq clc cmp jmpq cmpsb rex.WR lods rex.WB (bad) and pop mov xchg push (bad) retq mov jg jp imul (bad) jae sbb xor xchg test sbb jl andl adc int3 adc sti bnd jge sub cmp cmp push sbb jnp movsl fisub pushq push or push in add movabs sub js mov (bad) fs xchg jl fnstsw cwtl jnp (bad) (bad) (bad) sti mov ror (bad) (bad) (bad) decb (bad) sti sbb add add jnp outsl jbe adc pop adc outsl mov sti hlt pop pop (bad) sbb rcrl fldt pop mov mov and lock sub adc or push jmpq sbb and sti test loope xor (bad) and outsb rex.WRX (bad) imul ss rex.WRX (bad) mov movabs mov sub (bad) enterq xchg xchg add xchg scas (bad) retq out (bad) (bad) movsb ja or (bad) in mov mov xor fldenv add jp sub iret mov rex.WRX mov loopne or repz (bad) (bad) sti mov mov (bad) (bad) (bad) decb push mov cs cwtl add add or fidivr mov sbb in mov sub out rex.XB jnp or fnstsw (bad) mov fs addr32 adcl rex.WX rex push retq xchg mov add xor outsl pop test pushq jl movabs (bad) (bad) mov rex.B (bad) add jo jmpq fs mov sarb mov jne mov (bad) add cmp nop shll (bad) rcrl test rex.RX sarl mul popq mov cmp rex.RX xchg add jno mov sub dec lahf or callq mov mov jns out jns cmc mov add (bad) (bad) (bad) decb (bad) (bad) (bad) decl fstpl fnstcw (bad) movabs mov (bad) or movslq loopne repz rex.WX (bad) jge outsl (bad) sub lahf adc add and stos (bad) cmp out rex.R xor (bad) or (bad) adc lods (bad) mov pop mov iret (bad) retq rex.WX rolb rex.WRXB xor (bad) jrcxz cld cmc xor jp mov cmp xchg adc test mov popfq add adc sub fimull (bad) and repz (bad) or (bad) pop pushq int (bad) (bad) movabs mov pop jo lods movabs (bad) sti sub pop (bad) pop (bad) (bad) (bad) (bad) (bad) lods and pop (bad) adc lea or sub (bad) (bad) callq retq add lret rex.RX jge rex.B lret addr32 sub rex.RB std int3 cmpsb sub or xchg sbbl repnz in rex.W jle xchg lcall insl mov (bad) test hlt bswap sar push xor mov clc sub lea not lea jmpq jmpq jne lea bsf inc sub xor not cmp sub cmp mov setnp and add add rol mov stc jmpq jmpq clc test sub jmpq jle rep bswap pop jmpq cmp jb jae jmpq (bad) mov rex.WRXB ffree xchg cmp xchg rex.B rex.WRXB rex.WRXB gs insl pushfq out xchg lock rex.RXB push cmp lret pushfq or outsb push add imul pop jmpq leaveq mov movabs out popfq push jp push in push (bad) test popfq flds sbb idiv addb rex.WRB add movsl int subb (bad) cld or push icebp mov (bad) (bad) incl rex.W outsl stos xchg js ja movabs mov lahf jno lea (bad) cmp push (bad) pop cmp icebp push (bad) xchg (bad) xor sbb cmp shll retq test pop cmp jp jp lret fnstenv or fisub stos (bad) mov bswap btr jmpq jmpq add jmpq bsr rcl movzbw stc mov cmp and cmp cmp bt jmpq callq or neg and add and sets movsbl mov cmp clc cmpb jmpq xor jmpq in xor rorl imul sbb or sbb add (bad) jno jnp cmp int3 xchg div or xorl (bad) xchg fist fiadd or add pop mov out jl movntps lock and (bad) add jl xchg test cltd rex.WRXB (bad) xchg jbe sarl or fimull jle sub test sbbl ficom mov cs movabs xchg pushq fisttpl and pop sub xor mov adc add mov mov test or push scas xchg movsb (bad) mov jo rex.WX sub rex.WRX andb (bad) js (bad) rex.WB pop mov je and insl retq pushq mov cmc ljmp pop gs jp imul (bad) or mov jns clc outsb xchg push rex.X jl,pt rcl je rex.WR rex.WX pushq mov and mov (bad) clc xor xchg retq (bad) retq rex.WRXB or pop or lea push rex.RX cmpsl lea jp sub mov icebp (bad) jl pop jmpq (bad) and sub imul (bad) (bad) sti cmp ja in repnz (bad) (bad) cld mov mov sbb jnp stos fwait xchg rex.WRX push (bad) mov movsb push (bad) push (bad) leaveq (bad) (bad) (bad) decb pushfq xchg cmp sbb (bad) (bad) decl andl (bad) (bad) jg fadd lahf add mov enterq in xchg movsl sar xchg loopne pop int3 clc push outsb lret (bad) jno fistp xchg lret jrcxz in repnz or rex.WXB popfq (bad) pop sti nop mov (bad) movabs rclb add stos adc sbb mov pop pop gs jle mov vmovss xor xlat jnp cmp (bad) outsl fucomi rex.WR pop int3 lahf scas sbb mov (bad) (bad) retq xchg rex.W cli shr lods sbb jae xchg movabs sbb ds rex.RB lret outsl sub (bad) (bad) sti cltd sbb clc rex.RX (bad) (bad) incb imul rolb loope pushfq jo jmp lods (bad) (bad) out ds (bad) (bad) pushq pop movsl cld sub sbb add add jno jl fwait out rcr mov rolb es xchg loope (bad) xchg (bad) push clc mov (bad) (bad) lret cmpsl or lret jrcxz jrcxz mov cmp test mull adc rex.XB loope fcom (bad) mov add mov add mov mov jmpq pop rex.WRXB cs lret pop hlt (bad) rex.WB sub (bad) mov cmp in (bad) icebp callq lret sub lods out xor xchg lret (bad) pushq push (bad) cmp (bad) jl pushfq loope and (bad) adc or fist (bad) (bad) (bad) decb test adc (bad) rcrb es bswap mov (bad) cmp fcompl movslq (bad) mov xchg mov out data16 fimul and (bad) jge add and scas cmpl rcrb jno jns rorb (bad) nop mov or mov add add (bad) jns movsb pushq movsl push adc xor add scas add movabs xor pushfq (bad) jmpq nop mulb fidivr leaveq movsl lahf test clc jp xadd mov pop cmpl jmpq rex.WB iret rex.X cmc (bad) rex.WRX je outsl push cmpl cmpsl jnp (bad) pop sbb enterq (bad) (bad) push repnz mov mov (bad) (bad) (bad) stc in imul cld fcomps push rex.X pop sbb or repnz rex.RB (bad) (bad) (bad) pop (bad) clc mov xor loopne push ss (bad) out pop cmc pop out sahf (bad) sbb xchg pop ss rex.WRXB rex.X (bad) mov rex.W loop (bad) imul (bad) mov movabs fcmovb scas out (bad) lock stos sub rex.WXB xor (bad) (bad) lcall (bad) (bad) (bad) rex.X push sti (bad) cmpsl mov cmp jp data16 xchg insb mov retq outsl clc popfq and rex.XB repnz outsl iret pop rex.WRXB cmpsl mov rex.RXB mov (bad) jrcxz repz callq jmpq jmpq je jmpq je jmpq stc add cmp (bad) lock cmc test jmpq jae clc xor jmpq mov jmpq bt jmpq jne data16 test add stc bt bt sub clc or mov not mov clc clc sub jmpq xchg movb jb cmp popfq push stc repz lods mov xchg rex.WXB cmp sbb sarb adc nop cmpsl pop pop jg sub cmp (bad) shrl xchg stc sub jnp rex es rex.X add fwait or vcvttsd2si scas adc (bad) cmp pop cmc (bad) rex.XB add pop addr32 sub cs mov rex.WRXB rex.R cmp lock mov (bad) (bad) (bad) (bad) (bad) fistpl xchg sarb int cmp lods mov sub xor popq add add add fistp lock or sti (bad) outsb or test rorl rex.WX sub push or sub (bad) jns lods rex.X (bad) test lahf std out mov (bad) mov std adc add movabs mov (bad) shl mov test stc jmpq (bad) insb push push rex (bad) leaveq (bad) movslq (bad) adc adc (bad) or (bad) (bad) in loope addr32 leaveq jmpq roll adc rex.WX xchg xchg (bad) lods outsl add fimull fstpt xchg (bad) rex.WR loop and sub movabs in (bad) push sbb push iret jg mov cwtl mov adc lret cmp add push (bad) adc fwait and jg adc and mov cmp loop cli xchg notl repz (bad) (bad) (bad) cld adc (bad) (bad) (bad) sti leaveq stos movabs add sbb gs add mov cmp jne mov jrcxz hlt movsl add jrcxz out pextrw rex.WRXB rex.WRB (bad) stos fdivs (bad) (bad) (bad) cwtl clc add adc cmc movsb lods mov xor jns mov adc roll or cmp (bad) movabs in push or or and jmpq jmp cmp out adc jrcxz cmp mull cmc cmp scas add fisttpll push negb jge (bad) jbe out or mov mov jns ficom add leaveq and clc mov lea add retq jp rex.RXB mov cld repz pop frstor xor (bad) sti mov (bad) (bad) (bad) (bad) movsb or adc jnp push jmpq out movsl adc and and xor imul jne pop or loope (bad) xor push repz (bad) pop icebp push jrcxz add loope fidivrl and xchg stc fisttp mov adc shlb mov jp add btr shr bsf stc mov cmp stc cmc cmpb jmpq jmpq jae jmpq jp (bad) sti jrcxz cmc out sub mov lods rex.WRXB jnp stos cmpsb (bad) xor cmp xor jmp int and movsb xchg cld (bad) repz rex.XB rex.WRXB lods (bad) xor (bad) and divl movabs mov or xor (bad) add lods lea cmpsl pop xlat xor (bad) decb in enterq xchg js js mov nop (bad) pop rex.W jle fs loop (bad) sti fnstcw (bad) mov (bad) lods cmc adc mov (bad) and movabs mov rex.X (bad) mov (bad) (bad) (bad) or jae loope push adc (bad) and xor iret pop lret xor cmpsl int3 outsb je stc (bad) gs xor imul sarl (bad) add out test fwait lret mov adc cli repz mov jmpq push or jl adc lret (bad) xchg jg gs test fnstsw cltd sbb mov movabs mul movsb sub nop movb nop mov ja (bad) lahf loopne addr32 xchg negb mov loop jmp scas movabs mov lock rex.W repnz outsl jrcxz lret (bad) (bad) (bad) sti (bad) hlt movabs cmp decb mov outsb mov rex.WX movslq rex.WRB add adc adc xor (bad) lret hlt mov mov sbb cmp and cmp (bad) pop shlb rex.WR lret lods scas rcrb adc jmpq ja jmpq jmpq add jmpq cmc movb bt bt test jmpq ja jmpq jmpq data16 in cmc rex.R jb (bad) jle lods (bad) mov std sti sub rex.RX cmc outsl add movsl test rex.X sbb push (bad) push test sbb (bad) push cmp nop rorl sub fidivl sub fistp fild jnp (bad) sub rex.WRB pop cmp rex.WRX rex.WX repnz (bad) (bad) js sahf (bad) lods (bad) (bad) (bad) sti pop xchg jns pop (bad) (bad) (bad) decb fwait mov jno rex.R adc movsb (bad) lahf movabs xchg cmp (bad) (bad) (bad) pushq cmp (bad) mov addr32 insl (bad) rex.WRX xchg rex.WX rex.B rex.RXB lock xchg add cmp iret sti movabs (bad) lock jnp jl je (bad) rex.R jmpq xchg vmovups mov xchg mov cmc sbb test rcl sub lea not mov not lea jmpq callq shl bt add ror rcl mov test cmc clc cmpb jmpq jne ror data16 (bad) mov sub rcr jmpq lea movzbw movzwl lea mov lea bswap not lea mov jmpq jmpq jb jne bt cmc test cmpb jmpq je movsbw lea lea not movsbq movzwl jmpq jmpq jmpq jmpq jb test cmc cmp cmp jmpq je bswap bswap movsbw seto lea jmpq gs cmp stc mov rex.W rex.RX jb push xchg outsb mov sub test in lret cli cltd rex.RX jo rex.WRXB lods mov push cs (bad) (bad) sbb push enterq (bad) mov mov mov fidivr xlat pop add (bad) (bad) decb test loop fs add mov xor cs popfq cld fwait sbb push xchg test adc cltd xor fucom mov add int3 fs mov (bad) mov mov jne bswap bt inc jmpq jmpq rex.WR mul xor hlt pop xchg loope insb movabs sbb leaveq sahf sti rex.WX adc (bad) pushq test (bad) pop rex.WB mov rex.WRX ss repnz mov or icebp movsb notb cmp leaveq cmpsl test add pop repz insb in rex.WX and xor and jae rex.WR sbb (bad) (bad) sbb stos int3 in cs xchg sti push xrelease mov xor loop (bad) jne (bad) sub (bad) fadds scas (bad) lret (bad) ja push out cmp jb loopne in (bad) mov fimul xchg outsl fimul movsb loopne or outsl rex.WX sti sub jbe (bad) mov mov cs (bad) (bad) (bad) ljmp cmp outsl sti or fnstenv sbb xchg repnz shll sub fwait mov adc mov fcomps push cmpsb push or (bad) insb movabs jp (bad) (bad) mov jne or adc sti mov jb (bad) or mov rex.WR fdivl and (bad) lods in loope pop pop sahf or imul push je sbb fisttp es or movsl cltd (bad) adc retq loop (bad) and jge (bad) (bad) (bad) decb rex.X cmp out cmp xor lods iret (bad) rex.RB cmp cmpsb (bad) stos mov xor sbb (bad) (bad) mov jno push (bad) or callq imul sahf imul adc mov pushq cmp rex.WRXB sbb mov jmpq je (bad) cmc adc bts clc push movzbl mov stc sub movsbw lea jmpq subb cmp jno test jno imul test jo add loope adc lahf rex.RB (bad) (bad) fld jbe js adc jns adc int jrcxz in lods adc pop repnz sbb (bad) xchg sub push rex.RX (bad) (bad) jns (bad) xor (bad) (bad) (bad) sti jnp pop imul data16 adc xchg rcll out and push xchg ss xchg xchg mov add rex.WRXB rex.X jns test lret rex.WB rex.W push imul or sbb xchg std (bad) (bad) (bad) dec add jrcxz mov xorl movabs or (bad) hlt data16 pop xor (bad) ja cmpsl mov lret pop retq rex.RXB xor jl sub mov sbb push hlt (bad) (bad) jmpq callq jmpq je cmc neg xchg ror sub movsbw inc mov stc btr rol mov bswap rol shr shr mov jmpq jmpq sub movzbl bswap not lea jmpq stos jmpq jo xchg mov sbb cmc mov movabs lods adc xchg cmp pushq (bad) scas (bad) psllq add push jb mov in mov add (bad) (bad) std scas sub mov (bad) callq xor mov mov (bad) mov add (bad) insb adc rex.B (bad) (bad) (bad) (bad) std xchg mov (bad) (bad) mov sbb loopne leaveq rex.WB fisttp add (bad) xor pushq shlb loopne rex.X add pop push stc (bad) pop ja adc mov mov adc enterq bsf push rol bsf mov shl test sub mov lea jmpq jg je cmp bt cmp retq jne rcr cmp shld btr mov sub adc sub sar mov clc sub cmp jmpq test cmpb jmpq jle cmp movzbw lea lea mov pop jmpq add rex.WRX gs outsl movslq rex.RXB jne rex.B fs gs (bad) gs add test test retq xchg add cmc jmpq mov jmpq jb retq popfq nop (bad) (bad) (bad) (bad) rex.X js xor adc xchg retq test (bad) (bad) movsb imul add (bad) lret jo sahf (bad) imul sbb xchg incb fucomp callq and xor (bad) mov movabs sub lods jo (bad) xchg negl test cld shlb (bad) (bad) (bad) sti or add repz movabs mov rex.W rcrb (bad) cwtl callq (bad) (bad) rex.R test movsb cld retq mov jle (bad) cmp jg sbb mov and (bad) (bad) (bad) dec shr (bad) fnop retq (bad) sbb (bad) mov adc mov leaveq imul (bad) sahf mov cs (bad) or out jle movabs out pop cmp (bad) mov sbb and loop scas (bad) imul int sub cwtl mov (bad) lods rorl jo negl add fcompl subb in xor (bad) shll rex.X sub imul cmp (bad) adc (bad) (bad) rex.WX (bad) (bad) (bad) (bad) cld cmp sysexit or (bad) (bad) jmpq sbb stos fxch sahf mov xor lret cs cmp or in movslq xchg jmpq gs cltd out loop popfq lea fwait xor add add or repz callq rex.RX (bad) loop mov add push cmp cwtl or (bad) test jbe lods orb mov cmp push in movabs (bad) out mov (bad) cs (bad) jmpq test cmp jmpq jmpq pop xor mov retq cmp sbb sbb jb mov ja (bad) (bad) (bad) int xchg movabs jb rex.X movabs std lods add pop pop mov loopne push cmp ss es je scas adc (bad) (bad) (bad) sti jl or scas loope mul movslq and xchg jg sub pop or out mov lahf (bad) xchg (bad) (bad) (bad) lcall jne mov mov fcoml sti imul int3 loop fstpt and cmpsl (bad) clc push jg rex.WX pushq test insl (bad) xchg xchg fs mov loopne adc fs mov (bad) sahf retq addr32 movabs (bad) mov xchg (bad) mov xlat sarl (bad) rol (bad) cwtl pop pop and stos sbb out lods (bad) (bad) rex.RB std clc mov xchg out xchg (bad) or (bad) jae,pn adc scas (bad) pop (bad) (bad) (bad) cld cmp rex.WRXB (bad) (bad) (bad) pushq xchg (bad) jo (bad) mov cmp insl (bad) nop (bad) mov mov sbb jmp cmp nop adc cmp movabs stc es (bad) push (bad) mov retq rex mov add add jnp iret xor mov psllq mov movslq jge mov and (bad) mov lock cli ss (bad) imul xchg int in adc cld adc ds mov fidivr and jns (bad) xchg mov insb push (bad) mov push (bad) pushq jbe fisttpll loopne jnp jae adc test push mov fist mov (bad) mov sub pop test (bad) retq xor mov cwtl adc add (bad) xchg ja rex.WX mov ds mov (bad) (bad) (bad) cld (bad) push mov add (bad) (bad) decl (bad) pushq movabs imul lods int mov (bad) in sub add add mov mov push hlt movl cwtl sub lahf insl sbbl sbb push (bad) ffreep and fcoml cli rex.WRXB (bad) xor in jl rex.RXB in jle mov adc mov and sarl or cmp jrcxz int3 mov es cwtl (bad) jrcxz and (bad) lfs ds mov mov callq add xchg and rex.WX (bad) mov and pop push test xor (bad) (bad) (bad) decb xor xchg sti out cmp (bad) roll (bad) cmc rex.RXB rep and pop movabs idivl mov icebp xchg movabs in (bad) movabs rcrl (bad) movsl (bad) mov and add fbld repnz adc test xor xchg movsbl movzbw pop mov not pop mov xchg pop mov movsbw pop jmpq jmpq je test jmpq rep bswap movsbw bswap bswap pop jmpq std mov jl adc add xchg fcoms (bad) (bad) or jne pop cmp cld cli sbb sub xchg lea js mov sub xor mov jno pop xor in adc int jo repnz subl in nop push addl add (bad) scas push (bad) adc rolb mov scas adcl (bad) pushq fnsave (bad) cld (bad) enterq pushfq rclb js pushq ficoml and loop mov sbb outsb (bad) rex.RXB push adc (bad) insb (bad) xor clc push rex.WX movsl cmp sti jg mov rex.RX (bad) (bad) (bad) imul imul movslq fs test (bad) xchg jnp rex.B and out rex.B xor stos (bad) mov sub repz cs mov test jmpq jmp mov mov rex.RXB jnp sti lods jnp rex.WXB and jle (bad) stos sbb sub rex.RX jp rex.X mov pop rex.RXB movsb xor sbb mov sbb int3 ds push iret popfq (bad) jmp mov and (bad) leaveq jmpq adc scas rex.RXB sub or mov add cmp retq adc sbb rex.RB cmp (bad) sub fsubp (bad) and mov jns fistl shr rex.RX xlat add rex.B loopne sub (bad) rex.B ss cmpl (bad) add cmp rcrb sub cltd (bad) (bad) (bad) sti mov sub (bad) (bad) (bad) (bad) (bad) fwait mov sbb xlat outsb xor xor cmp push add stos add add adc cmp and (bad) sub pop cmc sarb int3 popfq mov adcl gs mov (bad) icebp cld scas stos xchg sbb fmul mov and pushfq xchg (bad) adc xchg fadd imul lock jb and add outsl add jmpq shll outsb xchg (bad) add rex cmpsl bnd testl (bad) adc cmc mov movabs test lahf cmpb or sahf (bad) (bad) jle mov addr32 (bad) xchg rex.WX je mov mov ss xchg loopne shrb pushq xchg xchg movabs rex.WRXB (bad) (bad) decb pop mov rcrl add add or movsb and (bad) movabs iret pushfq leaveq movabs out loopne rex.WRX rex.WRB iret (bad) rex.RB int push in pop rex.RXB pushfq (bad) setbe (bad) js sub mov and movabs and and movabs jmpq insb xchg (bad) push orb fisttp xchg (bad) (bad) int3 test sub lahf scas movsb fisttpll in sub loop movabs lea movabs and or pop jns (bad) (bad) (bad) cld xchg lods stc rex.RXB (bad) (bad) pushq rex.X rex.WX ss mov rex.WX (bad) jg add add or pop cmp imul mov pop cli cmp cltd mov cmp push ds rex.RXB mov pushq sbb rex.WB rex.B jge out rex.W jbe mov es jg stc add jmpq jae xadd xadd btc mov bts or data16 mull jmpq dec movsbw dec mov cmp jmpq test jmpq jmpq jmpq or mov mov test and test sbb sahf scas (bad) je (bad) pop add lods mulps ficompl sub mov push and nop in retq repz jb maskmovq jae rex.WR rex.WB rex.RX fsub out imul jbe sub (bad) push repz scas rex.RX stc adc mov sub pop adc lea (bad) cli in (bad) mov (bad) std fadds (bad) (bad) pop mov rex.R rex.RB repz xchg sti cmp pop data16 leaveq rex.WR (bad) (bad) inc movsl and mov lret insb (bad) mov movabs addl in mov sbb test movabs mov xlat (bad) int3 stos (bad) (bad) lock sub cmp jle rorb decl (bad) and rol (bad) adc fwait or stos mov retq cmc cmc clc cmp cmpb jmpq cmp bt clc sub stc cmp clc pushq stc jmpq popfq (bad) (bad) mov loopne stos mov iret (bad) rex.WB rex.X popfq jmpq adc cmp or sbb (bad) (bad) push (bad) (bad) stc test (bad) fcompl xor mov adc clc fwait sbb cmp in mov mov fsubrl rex.XB rex.WB out movslq fildl movslq (bad) cld repnz clc push scas cwtl (bad) push test jnp (bad) stos idiv (bad) (bad) pushq stos rex rex.RX mov test icebp mov callq mov or out (bad) add (bad) out movabs (bad) (bad) push imul add jnp jb iret stc jmpq jbe rex.WRX cld (bad) mov in (bad) sbb loopne adc add movsl rex.WXB es push push cld sti rex.WRXB jp or rex.W mov sub xor jmpq mov shl sub rcl add bt shrd mov cmc jmpq callq jmpq jmpq callq dec jmpq rex.RXB xchg int stos rcr rex.W rex.RX rex.RX leaveq clc mov movsb rex.WRX (bad) sahf push sub nop rex.WRB push cmp cltd jns and adc cmc jmpq adc sub sbb pop push flds and movabs jns (bad) cs sbb rex.X in rex.B ja pushq lock xchg icebp addl decb lret pop sbb (bad) retq cltd and rex.WRXB out jno sub lahf cwtl shrl insb sbb pushfq sbb mov add rex.RX test rex.W fcmovne outsb jmpq (bad) pop pop (bad) movabs sub bt adc sbb mov clc sub bt bt repnz jmpq movsbl not mov pop bswap movzbw movsbw pop not movsbw pop retq cmp lods std sub in (bad) sbb stos and and test (bad) test add leaveq and ja or callq xchg rex.R addb rex.WRB and rex.WRX cli jmp jmpq sub or movabs ja frstor jg in mov (bad) repz (bad) sti pop sbb rex.WRX repnz (bad) (bad) decb rex.WR psubq outsl (bad) int3 mov sbb mov (bad) dec cmp (bad) adc (bad) adc sub lock jl xchg (bad) sti cwtl add (bad) fidiv fs sbb pop cmp pop cmp pop rex.WRXB pop enterq mov in sti mov sub int3 adc jmpq movslq pushfq xor test scas (bad) add cmp (bad) mov mov rex adc rex.X sti jl (bad) xor xchg lret in xchg jrcxz lret cmp je lock hlt and jns stos mov lock je mov imull rex.RXB rex.WXB out rex.WR es rex.W (bad) (bad) sti (bad) jg rex.WRXB (bad) (bad) (bad) inc mov mov sbb lods imul and fs (bad) test push pop or add insb jns jg test or mov test pop nop rcr je cmp int jp (bad) (bad) jg je (bad) or jbe jmpq (bad) sti hlt pop (bad) lea retq mov sub jg rex.RB pop pop xor xlat (bad) push sub (bad) mov (bad) mov rex.WRX shrb xor fistp sub cmpsb hlt xchg push cmp sbb (bad) rex cld lret imul (bad) mov rex.RB movabs movsb nop xor (bad) fwait mov sub jb (bad) js loop rex.WRXB (bad) (bad) int3 imul sti movabs lea rcr faddp jns retq mov rex rex.WRB add add rex.WXB add in stos cmpsb leaveq stc and and sbb or adc clc xor adc xlat lret rex.RX int3 scas loop repnz (bad) xchg xchg add hlt add loop adc cli mov sub mov (bad) incl (bad) jle or mov loop add callq push pop (bad) mov lret cmpsl movabs retq and fstp mov fcmovnb outsb pop or (bad) rex.W addr32 std push add (bad) repnz sbb jo (bad) mov xchg rex.R or movsl jle movslq mov mov mov cmc adc in mov retq stos sub sbb leaveq fiaddl leaveq xlat (bad) push adc jg jmp cwtl (bad) (bad) mov mov jb (bad) (bad) std sbb add add or shlb mov lock data16 rex.WB jae movslq pushq pop jg outsl sbb icebp stos cmp std mov cs movslq in and test rex.WRB fs rex.B jne and in or retq jmp xor mov xor int sbb xor add xor rex.WRB adc or jmp fdivr add add (bad) scas test rex.WR sbb mov test add push ds jb mov xor (bad) (bad) sti cmp (bad) (bad) (bad) and movabs pop or movabs (bad) test pushq lahf lcall push std cmp add jp cmp rex.R test clc rex.B es cmp (bad) mov cli mov sbb (bad) movabs je adc cmp sbb mov push test neg mov adc sub bswap lea jmpq jmpq xor rex.W test mov rex mov movslq insl cwtl mov fcoms fcoml in in (bad) fisttpl rex.RXB in sar rcll out adc (bad) and jno add loope rex.RXB (bad) fwait in and clts mov in sub mov cmc add xor fstpt jl (bad) xchg je (bad) insb (bad) movabs ja ror (bad) jle (bad) es scas cmpsl mov sbb and add (bad) sbb and (bad) push outsb and (bad) test or fcompl mov cmp imul movabs push (bad) fwait jbe (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp rex.WX and add jg (bad) test xor out jns cs mov sub mov jbe out cmp sbb int3 pop (bad) lahf clc rex.B es or cltd (bad) loop adc mov lea jg callq bswap add dec shld mov clc cmc bt bt cmpb jbe jne bt clc xor ror jmpq test cmc mov je stc test bt test jmpq jb cmc cmc cmp jmpq callq jmpq jmpq lods mov sar push in pop jl std insl (bad) flds jp xchg or (bad) cltd push int3 pop sub push mov callq mov jns,pt add (bad) pop cmp in or rex.X mov int3 add ror lss hlt lock int rex.XB push repnz (bad) (bad) sti cmpsb sbb out (bad) (bad) (bad) (bad) xchg and std popfq stos xor and popfq jne (bad) sub xchg rolb pop ja rolb add movabs or imul in repz out mov (bad) sub push clc scas mov (bad) movabs and xchg cli xor jns (bad) jl or mov mov xor mov imul adc sub cmp cmc pushq jmpq jne test jmpq stc test clc movb stc stc stc clc test jmpq ja bt cmc clc bt imul stc test add jmpq clc pushq stc stc cmp cmp jmpq add rex.WR (bad) imul add xchg ficoml add fdivrs cld xchg pushfq lods pop pop (bad) mov mov andl pop and data16 imul rex.WB pop adc sahf push adc sbb nop rex.WB (bad) ja or cmp add mov xlat rex.B rex.RXB (bad) pop cmp (bad) lods (bad) xor add (bad) (bad) cld xor mov (bad) (bad) (bad) lcall movabs push rex.B jle insb retq pop rcrb movslq loope rex.WB test jmp repnz icebp cmp sahf xor adc pushq pop (bad) outsl pushq mov (bad) cmp cmpsb imul jmpq nop decl jnp out fdivl pushfq movsl lret rclb add rex.RXB rcr jnp jge rex.WRX rcrl pop ja mov adc int and jmpq test cmp add clc cmc cmc mov cmc test bt test jmpq clc clc sub bt cmp jmpq je jmpq loop jrcxz roll sub mov in jge xor sub or stc (bad) rex.XB pandn popq lret (bad) xchg rex.RB pop out imul fistp (bad) sub mov shl mov or jbe (bad) rex.RXB cltd mov xchg callq shrl add add cmp rex.WRXB (bad) (bad) sti sub (bad) (bad) (bad) (bad) sbb rex.WXB adc lcall mov xor mov lret mov cmp std or es sarl leaveq pop rex.RX std and lods mov movabs and adc pop lods cld rex.WXB stc cmp jmpq sub xchg fcmovb rex.R rex.WX imul adc sbb je mov and mov (bad) (bad) std subb mov sahf rex.RB fwait cmp notb frstor jl rex.W adc (bad) or jbe stos sahf mov cmp xchg jge sbb cmp or je enterq (bad) std sbb rex.WX mov (bad) idivb in cmpsb (bad) sbb rex.X (bad) gs xor bnd movabs (bad) rex.WRX (bad) rex.X rep mov and adc xchg sub (bad) clc test stc or jmpq ja rol ror sub and rcl dec btr add movsbw mov ror rcr shr or mov test stc repnz jmpq pushq jmpq test add clc jmpq bt jmpq jmpq test lock in jle push scas pushq stos sub iret movsb cmp sahf rex.XB xchg sbb jne lods pushq sub (bad) stos pop mov cmpsl and jnp xchg jmpq rorb adc lea rex.WB lock (bad) fcmovbe jo cmpl (bad) (bad) (bad) cld and cmp js (bad) retq mov mov rex.XB or rex.B sub fmuls lret sbb jne pop xor (bad) repz (bad) (bad) or (bad) (bad) push xchg imul mov (bad) mov (bad) cmc lahf cs rex.WRX rex.WRX mov enterq outsb clc scas (bad) addr32 mov ss nop stc out lret adc pop mov pushq hlt sbb scas (bad) (bad) shlb jp (bad) cmp (bad) cmp stos mov (bad) rorb rex.RX sbb lods mov jae js mov add jbe,pt orl mov mov nop push (bad) rex.WRXB rex.WR push test loop lock jg xor add sbb rex.WX (bad) (bad) decb (bad) (bad) (bad) (bad) stos iret int rex.RX int xchg scas xchg lock shlb sub adc je test pop (bad) rex.WX mov test cltq mov mov or rex.RB cmp jno push rex push (bad) retq sahf add (bad) pop pop mov mov (bad) jns pushfq cmp xchg (bad) cmp cld imul jp adc addr32 mov cmpsb retq mov movabs rex.RXB mov cmp enterq (bad) jmpq rex.R jle jmpq (bad) (bad) push sub mov xor xchg insb (bad) mov out mov repnz add mov mov rex.WX jp adc pop (bad) cmp neg or in or in mul sahf rex.WB shll pop sti push cmpsl rex.WRX (bad) adc imul repz (bad) (bad) sti jmp push mov (bad) (bad) (bad) (bad) xchg mov sub movabs xchg out cld cmp xor (bad) adc jl or (bad) clc cwtl mov jne rex.WB xchg loopne mov or nop mov xor stc xor mov cmc cmpsl mov mov pop sub push mov cmp roll cmp (bad) add xor mov sbb repz stc stc sub jmpq xor (bad) fdivrs movabs rex.WR and imul pop sbb cwtl and cmpsb rex.R hlt (bad) add mov mov test ja sub movabs (bad) or (bad) sbb enterq mov cwtl movabs push out jge sbb mov shrl loopne (bad) rex.R enterq movslq rex.WX icebp push cwtl rex.WX push jp (bad) (bad) (bad) sti imul callq (bad) push insl ss (bad) (bad) (bad) callq pop insl cmp fildl andb jmpq in push adc fsubr mov (bad) retq cli rex.X es int3 mov adc push sarb (bad) (bad) rex.WRX xchg pushfq mov rex.B fsubs leaveq pop rex.XB lret fwait add mov cmp rex.RX adc jmpq jmpq jmpq jne cmc add stc clc jmpq jmpq jmpq jmpq jmpq insb retq add callq ja iret in (bad) divl mov sub mov rex.WRXB and and (bad) cmp imul or xor outsl movabs or sub jle mov rcrl mov sarl mov sub xchg cld rex.WRX ror js rex.WXB rex.B sub (bad) (bad) (bad) cld imul (bad) (bad) callq add je push and fdivrl rex.XB (bad) repz add add rex.WX push and or xor sub push cmp (bad) mov mov lods rex.RX retq sub cld push rex.WB shll adc cmp cmp sbb add cmc cmc movb clc bt stc test jmpq jmpq jp adc fdivrl outsb (bad) jno (bad) (bad) cmc push xor xor mov (bad) repnz fildl (bad) stos rclb in jno callq mov (bad) jae scas add sarl outsl xchg (bad) sbb push addl imul paddsw cwtl cmp sahf retq mov rex.WX nop cld testb mov (bad) mov push (bad) loope cltd (bad) rex.WRXB std cmp xchg cwtl (bad) pop outsb pushq (bad) (bad) sbb (bad) (bad) (bad) std sbb add add or or ds rex.WB adc mov (bad) (bad) xchg mov (bad) mov adc lods rorl pop fidiv movabs sbb stc (bad) jns xor sarb pop push cmp xor jg imul fstpl jp xlat (bad) mov fistpl sub mov xor fiadd xor mov mov (bad) mov mov push insb push pop jge pop pop (bad) nop lahf xchg scas (bad) ja mov out (bad) sub leaveq add adc mov (bad) (bad) sti movabs mov retq icebp pushq std (bad) test rex.X add (bad) adc (bad) movsb mov rex.X jg loope scas pop lret (bad) movsb mov test je push cmp stc movsb mov (bad) mov add fdiv (bad) (bad) xor add sub mov jb mov cmp nop cmpsl sti push out mov cmp iret imul fcomp add (bad) fidiv (bad) and out (bad) jrcxz mov push (bad) pop pop xchg (bad) out adc test lods adc addr32 jno cmp movsb es pushq rol xchg loop nop mov sub xor lods addr32 pushq jns sub push sbb lret add mov mov clc push fwait std push rex.X xor sub mov lahf callq rex.WX push (bad) repz lahf pop pushq (bad) (bad) (bad) (bad) dec fdivrl movabs pop ja enterq rex.WX pop adc jge push cld mov pop cmp and mov xchg addr32 rex.WB mov out mov rcrb sub js sarb mov (bad) test fiadd shrb rex.R cmp repz (bad) xor out btr jmpq fiadd pushq adc add fwait add in test add fidiv leaveq repz mov rex.WR imul incl (bad) (bad) (bad) decb add and movabs in xchg jbe add jl cmpsl fs sbb mov jae nop mov jnp (bad) (bad) or pop xor (bad) sub adc xchg (bad) adc push clc cmp pop or add je neg shld push jmpq jns sbb lret insl rex pop movabs fistl mov mov loopne cmpxchg sti (bad) icebp or (bad) xor lock or fdivrs movabs insl cmp cmpsb adc pushfq xchg enterq mov repz (bad) jge xlat sbb loopne (bad) (bad) (bad) std hlt fsubrl add rex.XB int3 out lods enterq xlat xor push movabs test cmp pop dec cmpsl sub xchg jge mov pop mull mov (bad) rex.XB rex.RB lock std std mov xchg fidivl rex.WXB popfq and pushfq mov (bad) (bad) ss pop mov sbb (bad) cmp fs (bad) pop pop (bad) in and js out test rex.WB rex.RX mul rex.RX adc xchg (bad) rex.RX sub sti push enterq rolb mov or fcoml add test (bad) decl mov not movzbl bswap mov jmpq callq xrelease sub push jb cli out in test mov xor xchg rex.W (bad) pop (bad) sahf push (bad) xchg push xor mov sbb test (bad) push in push mov (bad) imul (bad) rex.WR xor add cmp rcrb (bad) rorb retq (bad) in lock clc sub (bad) xor out and rcll xchg add fldcw iret sbb (bad) sti mov loope jmpq popfq rex.WXB (bad) push mov add add repnz or cmpb xor jbe push jmp stos mov jb add mov (bad) (bad) (bad) js test stos rex.WRB xor add cltd add jp fdiv xchg mov stos mov or fsubrs cmc mov pushq cwtl push mov cmp (bad) rex.B cmp js xchg adc test sti fwait jg popfq std test pushq mov xchg movslq in rcll add lods or or rex.WX repz push cmpsl add xchg mov retq jg sbb jnp mov (bad) or je rex.WRX push xchg rorl (bad) (bad) decb cmc (bad) fsubrl and add or jle,pt push ja test (bad) jrcxz rex.WRXB xorb mov rex.WX int3 nop std movabs (bad) (bad) ljmp cmp cmpsl and cmp mov mov popfq xor sub cmp mov jrcxz sarl sarb jo cmpsb cmc movsb mov add (bad) pop enterq xor cmp mov add add add add (bad) add add add add (bad) add (bad) add sti add push sti add nop sti add mov add add add add add add add lods xor add cmp add cmp add cmp add cmp add cmp mov (bad) ljmp mov lahf push fcomp test cld xchg je cmp in xorw adc icebp push or mov xchg in fdivs (bad) mov (bad) pop xor add mov jno sub lods rcrl in ja imul push pop (bad) jp rcl jne rex.W divl icebp xorb xor rex.WRX lret sub rex.RX mov (bad) xlat pop or je jno xchg and cltd pop lock retq iret add rex.W pop jnp rex.WXB add jg stc rex imul jl pop mov (bad) jae ss add add and repz mov mov movabs and pushfq rex.WXB xchg cmpsb push (bad) xor cmc rex.WXB or xchg rex.WRX pop pop rex.WRXB sahf pop sbb jrcxz enterq adc xlat or cmp rex.XB (bad) (bad) retq jb push retq jmpq cmp push fs nop add mov mov insl test cmp add mov ss movabs cmp ficom (bad) push (bad) std nop scas je lods std imul sbb test cmp imul callq mov pop cmp (bad) movabs adc enterq data16 fs mov fsubrs push (bad) std push lahf jrcxz cmpsl je mov cld mov sub fmull pop clc in cmp pop out push fisub mov int jmpq loopne mov cmp adc int out cmc (bad) sbb (bad) mov rex.WXB mov js rex.WB cltd imul callq mov rex.RXB sub nop xor cmp cltd movabs rex.WRB sub in movabs mov cmp std pop mov or movslq imul sbbl insb and pop xor gs pop mov leaveq cli adc fwait vunpckhps imul push andb or xor je jge jge rex.X rex cmp in lods out shr add mov imul mov jl push (bad) xchg xor in callq or rcrl jrcxz rclb rex.XB cmp jae fsubs adc popfq adc in data16 adc callq scas and enterq ror sub jmpq lods icebp push test in data16 mov in in int lret js rcrb (bad) in insb adc retq jp lea (bad) cwtl out mov mov rex.WRXB fwait stc sub fnstcw cmp stc lea cs es movsl nop stos cs jns callq jle enterq push movsl cmp rex.RB sub popfq sub mov push (bad) adcb adc sbb test sbb test or xchg scas test (bad) gs rex.RXB xchg adc pop pop jmp mov int clc sub hlt cs (bad) lods (bad) jbe movabs xchg enterq lea add (bad) scas (bad) pop adc mov (bad) rex.X rex.RXB (bad) adcb push (bad) (bad) xor pop mov rex.WX (bad) mov push in (bad) xor (bad) int sub stos and xor xor (bad) fcompl jge rcr outsl pop pop sbb sub pushq (bad) fistpll sbb pushfq (bad) rex.WR fisttp (bad) (bad) or fucomip rex.XB sub rex.WRB mov mov add (bad) popfq test jbe shlb (bad) cmp xchg sbb mov add fldl (bad) rolb movsb jnp sbb mov sub (bad) gs sbb or (bad) mov movabs adc push in insl movsl loope pop jnp xor sbb data16 xchg enterq in imul jle pop rex.XB fwait lahf mov icebp xlat or push rex.W and (bad) sbb adc pop (bad) xchg loopne sahf push orb cltd (bad) pop js out rcll out idivb sub mov imull subl adc jnp (bad) lock mov adc or mov cmp int3 (bad) ss mov add sub sub loopne mov cmpsb iret fildll ds fcoml push imul (bad) cli out enterq in push rex.RB data16 (bad) orl fsubr cmp (bad) add xor sbb mov in (bad) mov loope lahf jae (bad) mov ds xchg sub jmp push je imul fsub pop lret xor int mov rex.XB (bad) in test orl lahf (bad) mov and (bad) jge xor movabs cld rex.WR jb rex.WR push rorl decb negl mov (bad) cwtl mov scas (bad) jbe sub mov or add int3 xor and or pop adc rex.WRX pop out adc lods icebp iret sub jg gs outsw (bad) test push sbb or out fistpl stc push xchg mov rex pushfq (bad) outsl mull (bad) sahf outsb or stos fisttpll outsl (bad) jae adc fnstsw rex.X stos out jne fisub xchg (bad) xchg push and adc (bad) lods cwtl jb,pt rcrl push and rex.B mov rex.WRX jno (bad) sbb xlat pop (bad) (bad) je pop fsubl pop ss scas scas sbb mov imul (bad) rex.B mov shrb jrcxz (bad) xor (bad) jrcxz adc add jns jle (bad) jns cli scas sbb and jnp fcmovu mov mov hlt add xchg sti outsb (bad) sbb xchg fucompp cld lock lret pushq xor (bad) movslq (bad) mov (bad) movabs push cmp xorl je mov rex.RXB mov cmpsl mov xor pushfq adc rex.R movabs fcoms scas (bad) (bad) (bad) fcomps test push sub ror xor (bad) jne iret xor in test xchg jrcxz hlt int leaveq xor fidivrl ss push in jl adcl jmpq movslq cli add jge adc out push rex.RX icebp and sbb jg (bad) stc cld cmp int3 lret test je jnp imull jnp sub loop sahf pushq add rex.RB stos jno loopne mov cmc sub sub fildll pop jns es rex.B and test jae pushq pushfq cmpsb pop fisttpl rex.WR cltd add imull or xchg mov mov pushfq iret pushq (bad) ficompl mov mov jnp pop (bad) push (bad) adc scas cmp pushfq add lock insb push popfq (bad) xchg (bad) (bad) mov push lsl (bad) xor jl movsl enterq enterq insb xor js and mov mov out repnz sarl add rolb rex.RXB jne fdiv xchg gs or loope in decb mov je mov pop rex movsb xor int3 mov mull mov rex xor (bad) xchg jbe (bad) in rol in callq (bad) mov (bad) in (bad) add jp pushq rex.R rex.XB repnz xchg mov add test movabs cmpsl add cmc jg sub (bad) cmp (bad) movabs rex.WRX mov test (bad) xor pop sbb push rex.WRX (bad) pop jo retq (bad) stos in xorl fwait cld pop outsl cmc xor and jp (bad) retq imul jp jmp callq rex.WB (bad) push out add (bad) xchg out push add scas movabs cmp (bad) jae int (bad) xchg out lret xchg jbe jnp cmp repnz (bad) adc pushfq pop rex.W repz idivl mov cmp sarl mov (bad) shr (bad) rex (bad) testb outsl push mov cmp cli sbb xor in xor loopne cmp jbe mov sbb or repnz jbe rex.RX or (bad) rcll rex.WRB out adc cs pushq mov (bad) jne or jp (bad) pop ss sti (bad) or (bad) imul mov mov adc (bad) and scas retq add js pop jge ja add lret cmp ficomp divb xor (bad) adc mov xorl (bad) cmp test jno lret (bad) test cmp nop (bad) mov pop (bad) (bad) pushq enterq (bad) or or pushq fcomp adc outsl leaveq sub rex.RXB rex.RB js mov (bad) incl sti push addr32 sbb pmaxub xor rex.WRX mov in sub add imul add sub (bad) adc mov xchg add jbe adc retq movabs (bad) sub insb or sbb int3 push movabs jb (bad) pop int3 (bad) movabs (bad) mov imul jae push adc and (bad) (bad) nopl mov movabs xor sub and fnstsw and popfq test stos rex (bad) xchg jnp sub je rex stos mov lahf in or jg (bad) loop cld jae (bad) jno (bad) cmpsb (bad) enterq push add mov movabs mov xor (bad) fmuls adc push xsha1 cmpsb or rex.WR (bad) fs gs rex.XB jne je jb gs push je imul gs movslq jb add outsl js rex.R insb add insb outsl (bad) fs gs rex.XB jne je jb gs push je imul js jb js pop insb insb add imul cs insb test cmc jmpq data16 movsl cmp xor rex.RB cmp xchg push movsb cmp cmpsl fs jle sub xchg rex.WRXB rex.W cs cmp mov pop mov jo jae cmp rex.RX adc mov rex.WRB fist scas (bad) es (bad) or in mov cwtl pop jg fildll shrl and movsl div (bad) lea (bad) jmp jb or (bad) and ja (bad) (bad) xchg jrcxz (bad) (bad) (bad) sti (bad) (bad) je (bad) (bad) (bad) js std scas rex.WRX fidivl (bad) (bad) clc out rex.XB ss hlt cld adc pop lock and or movabs (bad) jo add callq sahf std push je mov loopne sbb mov rex.WRXB outsl ja test shl (bad) lock not sar add lea jmpq jmpq jmpq jmpq jmpq pushq stc cmc stc test cmp jmpq mov cwtl hlt loop in out in adc repnz (bad) imul sbb mov sub pushq lock (bad) jae std lahf iret jmpq push add xchg push or notl in cmp movabs push add jbe mov xlat rorl hlt cli mov sbb movsl (bad) push (bad) mov js adc ss gs (bad) insl cmp rex.WR mov clc (bad) lods movabs and (bad) (bad) (bad) decb xchg fist rex.RX in pushq sti out (bad) (bad) decl push mov sar sti flds hlt rex.XB adc push ss test add (bad) stos out fwait mov sub push xlat mov (bad) jl cld jge,pn mov push jbe (bad) push sub cmp pushq bt test cmp cmp jmpq jne sbb lea mov movzbq adc movsbl sub stc mov test clc cmp bt sub jmpq jmpq jmpq jae ja bt bt sub adc shld bts add xor sbb and shld mov rcr xor mov stc repnz jmpq ja sar bt sub clc bsf add bsr clc rcl mov shl mov test test bt clc repnz jmpq je movsbw bts adc push movzbw movsbl bsf sbb mov cmp stc test sub jmpq mov add mov or (bad) mov fimul sbb faddl sahf pushq sbb push add (bad) cmp (bad) rex.WRB jp cmp mov movsw lods push cmp ja test xchg jp cmpsb stc mov (bad) sub cwtl sub jo rex.XB (bad) loope (bad) lret add hlt (bad) mov xchg (bad) xchg sub mov (bad) (bad) (bad) sti ds and pop (bad) (bad) (bad) (bad) sub add test mov cld (bad) (bad) (bad) ljmp data16 rorl (bad) xchg mov and sbb (bad) sarb (bad) cmp retq or pop or jae lret pop (bad) mov jb cmp divb sub sbb decb (bad) shlb (bad) jmpq rorb mov cmp (bad) sbb mov cmpsl xlat add add std (bad) rex.WRXB lock sbb fsub loop mov or movabs xor cmp (bad) (bad) (bad) (bad) sub pushq leaveq pop movsb (bad) jp xlat pop xchg add xor cmc movabs scas retq and (bad) (bad) (bad) decb (bad) (bad) (bad) pushq int3 push cmp scas mov rex.RXB xor sub (bad) pushq imul retq pop cli push rex.RB pop out pushfq pop rex.WR lret sbb adc rcll icebp cld imul mov callq in (bad) (bad) xor (bad) pop rex adc mov (bad) adc jne and sbb cmp mov cmp or jmpq jmpq jmpq jb bt bt clc cmp jmpq cmp jmpq jmpq jne stc test movzbq clc sub shr shld dec sub mov dec sets add rcl shl mov stc cmp test jmpq cmp js test cmp jmpq je and push mov mov cmc adc lea sub movsbw movzbw not lea jmpq dec jmpq negl lret adc pushfq (bad) fdiv push ja push (bad) push and fsubrs rcll movsb (bad) (bad) rex.B jge movabs (bad) fisttpl mov mov iret in jmp (bad) mov pop cmp out pavgb jrcxz cltd xchg sti mov (bad) (bad) (bad) sti (bad) (bad) or adc (bad) (bad) inc mov mov fadds lods pop (bad) add out pop mov in movabs pop ss or sti push add sbb xchg pop cld iret add add sbb hlt cmp rex.WXB xor clc (bad) (bad) jp sbb callq iret mov xchg pop icebp rex.WRB xor out ja lret imul push js rex jmpq stc stc cmc cmp jmpq je stc bt cmp jmpq add add jmpq jmpq jne shl bswap xor shr btr cmc mov cmc rcr add sub cmc mov bt bt test jmpq rex.WXB xchg rex.WR repnz loop adc jge imul adc jo xor int3 stc xchg pop rex.B cwtl cwtl rex.X (bad) or adc (bad) jae and (bad) xor mov mov sarb fldl sbb cmpsl movabs mov cmp xchg fidivrl cmp (bad) rex.WB stc mulb xchg mov push (bad) ror pop mov test clc test jmpq add rex.XB (bad) je imul rex jmpq xchg rex.WR (bad) retq js notl int3 out retq xchg fcoms xor sub rclb rolb out in cmc icebp jmpq pop std rex.X rex.RB pushq and fwait mov lret outsl jmp lret sarb cmpsb add rex.WXB shll jnp or cmp xor rcl rex.R addr32 cmp out (bad) (bad) sti mov iret test loopne or movabs (bad) cld (bad) adc (bad) pop xlat xchg rex.XB fwait outsb in out insl (bad) rex sar (bad) (bad) (bad) decb add add or pushq rex.XB (bad) gs add data16 or adc jns push sti insb (bad) icebp out and rex.B ds (bad) ficoml movabs icebp rex.RB xchg fcmovnb (bad) adc int rex sub int3 sub rex.WRX jp fwait callq xchg push xor cs fsubs jl adc mov mull push jae (bad) xor (bad) out and fldcw xchg scas (bad) pop xor mov pop xchg (bad) neg (bad) nop jae imul (bad) mull rex.RB sarl jge adc ffree or roll addr32 (bad) pushfq (bad) rex.B sub (bad) addr32 cmp or test push mov pop (bad) shlb (bad) int cmp stc push (bad) adc (bad) (bad) (bad) nop sub out rex (bad) mov outsb loope add add xor mov leaveq mov imul sbb pop pop cmp adc mov add mov (bad) pop (bad) movabs pushq fmuls stc xchg mov in mov pop mov scas popfq cmp movb cmp test jmpq add rex.XB (bad) je rex.RB jbe jb outsb insl outsb je insb outsl movslq cld fcoml repz adc int3 mov xchg mov loope jmp rex.RB std jrcxz xchg cli test cmp jnp xor (bad) mov lahf rex.RB cmp and xlat jnp test push rex.WRX (bad) cmp and sbb lret jae (bad) xchg rcl insl cmp lret (bad) sbb xor jmp add lods std (bad) (bad) (bad) std sbb add add or jge cmp adc mov push iret push rex.WX push or pop stos movl push (bad) jno out outsl pop movabs mov pop pushfq iret mov test mov cmp stc bt cmc test jmpq push rex.W rex.WR push rex.WB cs insb add (bad) xor jne rorl es rex.RX mov adc mov xor (bad) xchg hlt rex.RXB callq gs add (bad) hlt and xchg mov pop push out movabs cli loope rex.RXB add mov in pop cmp jrcxz xchg push test vhaddpd pop sub callq sbb cmpsl (bad) rex.WXB xchg (bad) or test stos neg (bad) (bad) (bad) sti mov jnp (bad) (bad) (bad) decb cmp add or rex.WRX stc cltd or mov mov sarb sahf cld retq push fisttpll adc rex.B mov rcrb ja lock and xchg subl (bad) (bad) stc jmpq je jmpq (bad) xchg rex lret movabs pop mov retq jmpq insl add push push pop xor cli xlat sbb jle and ficom mov stos sahf mov shlb mov rex.WXB jge outsl xchg rex.WRXB pop mov sbb sahf add fbstp movabs test cmpsl sbb (bad) cwtl xchg jae add xor (bad) (bad) sti (bad) gs (bad) (bad) (bad) (bad) (bad) insb sbb xchg rex rex.W jbe addr32 mov imul test (bad) (bad) (bad) in es (bad) mov xor mov jge xor (bad) cmp (bad) mov (bad) rex.WRX rex.WRB or fstpl cmp idivb sub push iret push adc or je rex.WB callq bsf add shld xor clc mov clc bt test bt cmpb jnp jne inc bt sub movsbq cmp btr mov sar sub not cmc add shl (bad) lock sbb (bad) decl test (bad) btr inc bsr mov shr sub add btc shld bt mov stc cmc jmpq callq rcr movzbq add xor mov test cmpb jmpq sub clc stc bt stc cmp jmpq jmpq and addr32 xor jno xor (bad) pop jns lea jp cmp mov cwtl addr32 pushfq rex.WX mov sti lock fimul stos or addr32 ds (bad) mov enterq cli clc sbb pop cmpsl (bad) adc and (bad) movabs jle add (bad) divl (bad) jrcxz pop in xchg cmp cltd sub (bad) jp sub xor icebp not rex.WRXB imul add nop cmp fdivrs sti rex.WR insl sar (bad) (bad) (bad) (bad) mov pop mov rex.R repnz (bad) int3 jl (bad) (bad) (bad) pushq out lods mov rex.WR mov rex.WRXB xchg mov loop rex ss mov retq insl lret in or cli push (bad) xchg vunpcklpd outsb rex.X test leaveq adc cmc clc stc sub clc test jno cmp jmpq jmpq jne setle not mov setns pushfw (bad) repnz rol mov mov cmp jp xor cmc jmpq jmpq jge jno gs (bad) mov (bad) pop fdivl mov cli xchg (bad) (bad) cmp sbb hlt (bad) lods std sahf pop mov loope or jae xchg rex.WRX outsl rex.WRX sbb andb lods fcoms push mov jne popfq repnz test rex.RX lret push cmpb mov adc (bad) (bad) sti (bad) jbe xchg (bad) movsb (bad) shlb jbe rex.WRX out (bad) pop mov gs movabs and pop cmp nop (bad) sti rex.W jle jne xor sub mov popfq lret or add add pop outsl (bad) push (bad) shrb sub mov (bad) xchg rex.X out imul mov out rex.RB rex.WRX cmp and mov xor xchg pushq jae jmpq test jmpq jne test cmp stc movb cmp stc stc test jmpq jmpq cmc imul stc clc add jmpq ja sbb shr sub rcl dec add shr adc btr mov sub mov bt stc jmpq jae xadd xchg cmp not mov jmpq fmul scas lods push (bad) outsb (bad) sub jb jmp callq (bad) in push push pop jle push mov sub jmp sbb (bad) (bad) (bad) int3 (bad) out (bad) outsl push cmp lcall movsl test test repnz xchg jmp pop out cmp cmp add rex.RB rex.WX (bad) out sub scas xor (bad) (bad) cli lods mov mov (bad) (bad) (bad) std cwtl scas (bad) insb add or addr32 cmp (bad) rex.X (bad) fcomps (bad) push (bad) and mov sbb andl (bad) push xchg vrcpss sub (bad) cmpsb cmpsl and outsl cmp (bad) imul pushq jb insl cs rex.WRX push gs mov cmp or mov (bad) sbb fisttp test adc not not xor cmp jmpq push (bad) (bad) stos (bad) mov test mov sub jae popfq lret lods insl push movsb subl rex.RB sbb rex.R pop xchg mov (bad) rclb scas add xchg or lods sbb and fadd mov ja flds mov xchg cmp mov rex.WRXB fwait adc jmpq xor pop (bad) loope ss (bad) (bad) cld (bad) fwait mov sti (bad) (bad) (bad) (bad) icebp retq push (bad) test push hlt mov lock mov add jno in jb jb add push divb cmp push divl rex.W add pop mov xor and or (bad) mov vcvttpd2dq lods mov rorb stos jle adc xchg (bad) mov jne bsf adc mov sub inc mov cmp add jmpq js mov mov lea lea pop retq cmp outsl push adc rex.WRXB mov (bad) jp mov (bad) adc sub sub (bad) xchg in in scas sbb out addr32 sbb fwait scas rex.WR rex.X sbb (bad) mov adc in cli sub sbb xchg mov jne xor xchg mov (bad) mov (bad) stos jbe sbb movabs jge rex.R (bad) std sbb add add or mov mov test fldenv or rex.WX ds ss (bad) rex.X jg xchg add cmp rex.WRXB push or mov (bad) mov mov in pop sbb outsl (bad) add push (bad) xchg pop mov mov retq lods cli lahf push xchg (bad) ss (bad) addr32 out jmp or rex.WX add xchg hlt (bad) pop rex.WB cs js lar movabs fs test adc rcll in mov ds jae push cmp (bad) and repnz xchg (bad) (bad) (bad) sti mov xchg scas (bad) (bad) (bad) (bad) jns insb addb leaveq andb jg,pn (bad) (bad) (bad) (bad) stc movabs movslq imul lahf in imul jbe jmpq jp je cmpsb (bad) jmpq cmp insl pop adc add or rolb iret (bad) mov (bad) js or test clc add (bad) xchg insb cmc gs (bad) xor movabs shl add (bad) sub xor push je xchg cmpsb mov movsb imul xchg jmp mov (bad) (bad) mov xor (bad) (bad) cmp jne (bad) xor jmpq rex.RX rex.RB and xor or (bad) (bad) (bad) cld outsl mov push in (bad) (bad) (bad) lcall or jns (bad) and ja jae mov (bad) movsb pop push add add rex.WRXB sub or enterq out xchg in lock cmp sarb or imul rex.RB rcll sub push jl jae test movabs adc mov adc int3 pop pushq in fwait mov (bad) xchg rex.WRXB push or movsb (bad) loopne jne sbb jmpq (bad) mov jns (bad) cmp movabs cmp pop jbe rex.WRXB jbe nop ss jrcxz or push in xchg icebp leaveq rex.RB pushq pop cmp mov mov pop idivl (bad) (bad) (bad) sti cmp (bad) (bad) (bad) and jrcxz cmp xor std jo sub (bad) (bad) (bad) (bad) jmpq (bad) mov pushfq fwait mov outsb or mov rcrl (bad) lahf (bad) loopne rex movslq lods lret fwait mov add (bad) js rex xchg js jb jmpq movabs jrcxz seto adc (bad) cltd fistl movabs fsubl xchg mov movabs mov (bad) jg outsl lods imul pop push lahf (bad) (bad) jg gs loope and pushfq mov insb mov (bad) and movabs gs (bad) sbb data16 (bad) loope movslq (bad) and lods je mov loopne insl mov cs callq (bad) mov mov mov ds (bad) jo out outsb cmp mov fsubs loope (bad) je stos enterq loopne cmp imul adcb je (bad) movabs retq (bad) mov xor mov out xchg iret icebp test fs rcll xchg repnz xor add clc or (bad) or mov pop movabs rex.WX push fadd rex.WX hlt fsubr xchg adc loope cmp cmpsb xchg sbb addb fistl mov (bad) mov clc in mov sbb (bad) xchg (bad) jnp (bad) mov out or movsb clc pushq andl retq (bad) (bad) in callq in (bad) adc cs or add and mov sbb xchg rex.B rex.RXB rex.WRXB icebp enterq or je sarl movsb and sti xchg sbb shlb sahf icebp (bad) idivb sbb hlt lock js fs hlt fstpl sub cs pop lock and or shll movabs mov add enterq shl add jge rex.X lock mov mov pushq cmpsl sub mov (bad) ss rex.WRXB in loope repnz js jo mov stos fs pushq movslq cmp or and (bad) fisubrl fs fdivl (bad) (bad) loope inc movabs (bad) mov and sub rex.WR rex.R sub movabs fsubrl adc mov mov (bad) mov es mov xchg xchg roll movsl xchg push sbb cmp js xor (bad) fisttp movabs and cs (bad) in out adc (bad) (bad) and fidivr and sub in int3 xor (bad) mov imul mov (bad) (bad) xchg mov ljmp cs movabs insl adc rorb gs sar pop mov and jle (bad) movabs rcl pop and enterq cld fildll add jne (bad) shr or addr32 out iret or (bad) xchg (bad) movabs xor (bad) push push out loopne,pt (bad) mov nop xor (bad) ss rorl loop (bad) iret (bad) pushq (bad) rcll fmull (bad) fs insl test paddq lcall and mov test (bad) (bad) mov test cmp rex.WRX shr jrcxz imul sub (bad) (bad) test (bad) iret lock and lock hlt shlb xchg mulb movsb ficoml lret ror and cld jle and lock xor scas (bad) shl fstl sub test lock xchg mov mov mov callq lea andl in retq movsb movabs ja ds fdivp ficom sbb in (bad) mov fbld and (bad) hlt rex.R sub es jrcxz and jl out mov mov lods sub push callq pop gs jp mull decb lret (bad) lods callq sahf jo (bad) in or pop (bad) cs and or fsub (bad) xchg in addb clc cs (bad) lret (bad) (bad) sub sbb (bad) xlat sbb imul lock imul cmpsb adc (bad) (bad) (bad) (bad) test jle and shr add movabs mov fucom cld push movsb negl or adc movsb ror sbb stos fldz cmp rex.RX shl mov rex.WR xlat ja addl add jo out jns mov sarb push xor int3 mov push retq fdivl mov stc in rex.WR xor repz loop es jne iret mov movsl or and and test in rcrb stos movslq mov cs out (bad) or sbb (bad) (bad) mov or nop (bad) adc int adc rcl xchg in pushfq (bad) or adc sub hlt rcll jl int3 (bad) sub sbb notl and fs and jmpq rex.R rex.WRX in test in repz pop pop addr32 xchg repnz (bad) (bad) adc cmpsl movabs sub div movsl hlt mov callq push jle mov rex.WR xor jmpq movabs xchg (bad) cmpsl callq out fiaddl out jg mov or test repnz (bad) fwait movslq cwtl (bad) xor cli retq movabs movabs ds loopne xchg loop add (bad) (bad) jb and stc jbe or (bad) mov (bad) loop mov lods xor and jg add movslq in mov mov loop (bad) and xorl add sub inc mov mov cld in or imul in fwait jmp retq shr mov sbb adc es adc movabs or and pop mov mov (bad) sbb jrcxz jg je sti (bad) (bad) or pop in sub out jb (bad) mov enterq out (bad) cmp rex.RX (bad) cli (bad) movabs loope xchg mov xlat jl xor sbb ja (bad) or adc add add callq cs xor stc movabs (bad) movabs data16 movabs outsb jo shl rex.RX rex.W rorl xchg rex.RB cwtl movsb movabs rex.WRX add rex.B loopel xchg add mov mov xorl jae mov dec nop mov jrcxz test rex (bad) mov push cmc mov (bad) (bad) nop mov loop fist jne in mov jo icebp (bad) movslq gs je jg fdivs and rolb mov pop mov (bad) enterq test loope pop subb adc (bad) movabs ds repz (bad) rex.RX jg enterq rex.WRXB fisub jp jbe jo add rex mov cli xor ds retq push (bad) lock xor jge retq enterq mov shr push test std mov pop mov sbb int retq (bad) (bad) xor rex.RB rex.XB (bad) enterq ltr rcl sub mov xchg jg data16 rex sar callq orl repnz xor in callq xorb gs xchg stc rex.RX or jrcxz in jg callq out (bad) or mov mov sub and jrcxz jmp repnz pop cmc decl jo in or rex.XB iret rex.WXB jnp (bad) or xor (bad) pushfq mov sub push nop rex.WR rex.RX or push lods rex.WB (bad) adc in fcomps xchg (bad) shl lods pushfq (bad) jle or adc repz int (bad) scas hlt pop ljmp rex.X sub jmpq rex.WB pop in addr32 out pop sub enterq jl insb xchg movabs (bad) xchg (bad) pop push mov (bad) xor lcall loopne mov pop lods lods and hlt cmpsb mov callq outsb add lock mov (bad) callq adc add callq (bad) (bad) in callq fsubl mov movabs incl mov movabs (bad) in push pop iret js imul (bad) push push repz rex.W sub test in enterq mov callq rex.WRX lock cmp ds xor cmp (bad) in (bad) out out adc sbb dec imul sub sbb loopne es cmp movabs ficomp addr32 fadd add sbb cmp iret (bad) int3 iret jnp lock (bad) outsl push movsb jmp mov xlat (bad) or shlb mul adc xchg (bad) out (bad) fistpll mov (bad) lock stos cs movsl insb movsb xor fs xor outsb leaveq in cmpsl js mov sub xchg in fisubr (bad) xchg (bad) jl mov xlat cwtl movabs out (bad) loopne xor jns shlb (bad) or out (bad) (bad) in in (bad) andl (bad) xchg sbb mov (bad) push fiaddl rex.X icebp lock std or movabs xlat cld add (bad) adc (bad) jle callq mov or or insl enterq sbb push jg test or mov lock retq cs test movsb (bad) mov loopne sbb in adc (bad) adc xor in xor stos callq mov incb icebp test callq jae mov mov jrcxz (bad) cld mov and rex.RXB in and (bad) enterq (bad) push sub mov (bad) (bad) add (bad) cmp pop mov or test in int3 repnz add stc mov sbb rex.X mov pop pushfq cwtl cmp mov (bad) push addr32 pushq mov test pushq sbb (bad) sub (bad) cwtl mov jrcxz test (bad) in rcl in data16 rex.X insl pop adc js cs movabs (bad) lahf (bad) sbb sbb or rex.RXB div fdivrl pop (bad) sub (bad) cmp js lods (bad) jae mov outsb push add test jo in mov lock and mov movsb (bad) loope insl stos push (bad) (bad) (bad) enterq movslq test shrl sub (bad) test out push in movabs icebp addr32 shll push stos rex.X mov movsb shlb sbb imul xchg (bad) test (bad) imull imul js sti (bad) sbb lock lods rcl xor jp mov fs or and or xor movabs (bad) adc jo (bad) cmp in and ja rex.WRX callq mov (bad) (bad) shrb pop sti push rex.WB out (bad) (bad) int3 std iret jg sbb movabs lahf and retq ficomp sub sbb add (bad) out (bad) (bad) stc pop mov movabs cmp fcmovne rex.RB mov in sahf cmc sub xor add (bad) pop add loop (bad) stc shll loopne and pop lea rex.RXB (bad) and movslq (bad) imul adc jle jae sahf mov loope pushq (bad) mov rcll sub test pop rex.X cmpsb sub push addb xchg (bad) mov divb movabs cmc fcmovnu addr32 adc rex.RX or ss (bad) rcr js and cmp sub xchg cmpsl (bad) add mov ds and in fdivp rex.RB sbb test (bad) ds and in scas jb cld lahf in mov movsb push retq cmpsl movsl int3 shr pop stos sbb fadd cmpsl sub (bad) je (bad) (bad) mov push mov insb adc gs in bswap stos mov rex.XB lock xor in sbb imul rex.RX (bad) jge (bad) js cld sti (bad) idivl loop add push rex.RB rex.WB rex.WR iret sbb jmpq pushq jo clc movabs callq xorb and mull in movsb push retq adc ss and jmpq jne gs lret (bad) out data16 (bad) leaveq rex jle clc mov clc jg test addr32 push xchg lock gs jp mov sub (bad) in in jmp movsb sub push (bad) frstor and push nop mov lods imul repz pop enterq xchg out fadds or sbb adc movslq ljmp pop xchg stos retq clc rex.WB insl and sti mov push cmc mov (bad) rol jle pushq cs xchg pop and and pop and rex.WR jb rex.RXB lret adc and cmpsb out neg adc and mov sarb ror popfq in sbbb mov or cltd xor pop (bad) rex.RX data16 add (bad) je xchg (bad) sub scas lahf retq in pop sub scas nop callq out mov rorb movb add adc hlt cli stc fild sub mov xor out loopne imul cmc loope rex.B xor (bad) movabs sbb shll movsb (bad) xchg adc sbb out (bad) cmc shlb (bad) (bad) (bad) js (bad) xchg test lods rex.WRB (bad) sbb and (bad) out jbe fnstsw jae rex.WXB xchg cwtl orl cli jmp in (bad) cmpsb (bad) mov (bad) rex.RX jmpq insb adc lods test fcomi retq (bad) rex.X rex.WRX in sub sub ja out callq add xlat scas (bad) xchg movslq (bad) sub (bad) cmpsl es insl out (bad) rex.WRX mov lahf rorb (bad) cmp rex.W bnd (bad) rex.WRB repz cli rex.R cmp bnd retq jmp callq cmp icebp movsb (bad) mov movabs (bad) sti mov jae sbb stc (bad) retq xchg rex.XB sub sbb movabs xor shlb gs imul and lods in mov loop (bad) int3 movabs pop out repz ficom in sub (bad) jbe jbe mov (bad) cmpsb add ds (bad) sub mov mov rex.R fs sbb mov ja jl sarl jns sub (bad) (bad) in add jb cmp fsubrl jne roll in (bad) movabs adc callq js jo sbb (bad) and fiaddl out or test movsb sub (bad) lock out faddp cmc and movabs je and (bad) ja jle in (bad) or jrcxz loop mov in icebp pop test leaveq repnz and sub retq (bad) jae addr32 (bad) callq cltd xor add iret out in movabs add in (bad) cli js retq loop fisttp fimul or sbb (bad) fiadd xchg lahf mov leaveq enterq (bad) jge icebp (bad) jno mov icebp or test ss pop cwtl xchg test adc mov xor out lods out (bad) loope (bad) cwtl push rex.X repz jl (bad) mov push mov mov fbstp mov and ds in test lods orb movabs (bad) sbb sbb sub jmpq hlt sbb mov lods in (bad) data16 mov roll (bad) callq repnz (bad) sub lret gs (bad) (bad) adc repnz jrcxz fxch not enterq jmpq rex.RXB mov data16 (bad) pop je ds mov sbb (bad) (bad) rex.WXB jg icebp lock sbbb sbb retq xor fsubr int3 fcoml (bad) jmp (bad) adc rcr lret stos (bad) movslq stc cmp mov lods sti test rex.XB mov subb rex.WXB (bad) xor std (bad) or rex.W and pop fimull icebp pushq std rex.WXB mov insl movsl (bad) jb movslq xchg js mov mov adc jp (bad) mov mov stos sub sbb rex.WRX callq movabs cmpsb rol push push gs in pop rex.WX cmc in out cmc js sub iret stos push (bad) (bad) lods ds in jo add sub sbb (bad) out and (bad) cs pushq cmp (bad) or iret sbb xchg (bad) out (bad) rex.XB gs leaveq mov out scas (bad) cmc adc cmc (bad) jb mov jmp jmp bnd xchg jne push mov (bad) repz jp lahf retq mov adc shrl imul sti scas rolb xchg fcompl out mov xor lret (bad) lea lret rex.X out xor (bad) (bad) jb insb sub lea xor mov (bad) outsl jle sbb sahf push (bad) repnz xchg adc and and rorl sahf cs push mov pop insb xor jae lods or gs je sbb lock (bad) jrcxz sub (bad) or sahf mov cld rex.WRXB mov popfq shlb int sub imul jp jne cmpsl add (bad) outsl in lret ja loop mov (bad) nop push (bad) sbb lock (bad) sarb add je test (bad) mov std fcomps (bad) sbb and in and loop jo nop ds and (bad) jge out (bad) outsb (bad) or cmp pop xor (bad) (bad) lcall sub and xor (bad) xor jp callq jp (bad) (bad) (bad) in adc push mov repz add incl clc sbb jmpq (bad) imul fisubrl rex.XB (bad) (bad) outsl pop (bad) cmpsl mov out in fcomps mov sub sahf addb xor and test icebp imul cmp subl mov popfq mov and retq cmp sbb sub (bad) (bad) or in movsb loop (bad) mov enterq (bad) lea mov rcr sub xchg sub mov (bad) adc adc pushq lods addr32 cmp sub (bad) jl and mov clc (bad) movsl mov (bad) sbb sbbb (bad) out jns mov adc (bad) loopne mov sarb hlt pop fs mov sbb idivb movslq mov xor fidiv jrcxz mov (bad) rex.WRXB out sahf and int3 adc orl rex.WB movslq (bad) push out scas jne mov icebp pushq mov clc (bad) adc and push cld (bad) (bad) (bad) adc jae (bad) rex.WX pushq out cli xor int jg (bad) rcl movsl test xchg cmpsb clc int int3 mov pop rol pop jmpq icebp jnp and imul shr test outsl (bad) xchg cmpsb (bad) sub (bad) (bad) fsubrl (bad) xlat cmp adc (bad) jg xor and lahf (bad) cmp rex.B fadds fs cmpl sbb jbe hlt lret stc (bad) insb movsl out (bad) pop insl ja fldcw jle movabs xchg xchg (bad) pop xchg rex.WRXB ds xlat out cmp fdivp enterq sbb fbld cltd fstp and fs scas (bad) rex.WX pop (bad) (bad) xor xor jle stc rex.WRB rex.WB rclb jrcxz ror in insl int3 pushq mov (bad) js and jg orb js retq mov (bad) jg shll and mov cs xor es jbe sahf in sahf xchg rex.WRX scas or movsb lahf notl fadds sbb (bad) data16 mov (bad) push mov cli callq cmpl (bad) fsubrl xchg xor mov ss cmp in mov pop addr32 xor mov and clc repnz in jb hlt rex.WRB outsb mov je out sahf cmp (bad) mov and sub rex.WB push out stos cmp rorb xor adc (bad) mov jo imul jne rex.R jbe mov retq sbb jmp or rol hlt fiaddl (bad) incl (bad) adcb cmpsl xchg addr32 push iret and pushq (bad) jae mov pushq rex.WRB imul mov callq xchg ja out ds pop xor jmp jno retq bnd movslq (bad) add adc or and sbb scas adc cmp ja xlat movsb xchg out cmpsl (bad) gs in (bad) sub js (bad) icebp subl (bad) imul setbe (bad) (bad) cmpl adc andb in mov rex.RX xor (bad) mov adc stc rex.WRB mov cmp fsubl sbb or out or cmp out add out or (bad) std retq repz (bad) jmpq (bad) test outsb (bad) rclb test (bad) shlb retq mov movsb in mov (bad) fwait mov sub in jae sbb fidivr mov (bad) repz push push imul cmp fisub shl xor (bad) jae test rex.WRXB pop jne stc lods es and mov rex.RXB jmpq in rolb sbb cld sbb sbb rex.RB fwait mov sub lock sub rex.WX rol (bad) adc fisub sbb lret xchg adc loopne (bad) jle movsl cmpsb jp cltd jb and rex.R rex.RB jrcxz (bad) mov xchg stos lea lret (bad) divps out lock (bad) and mov jbe out jb add xchg fdivr mov sahf rex.XB (bad) in movabs (bad) xchg ds fstl add loop outsb jge or (bad) rex.WRXB (bad) fbstp xor (bad) ds fadds es (bad) fucomp xlat pop (bad) xor rex.RX movabs add ds cmc leaveq sub test pop and xchg cmp (bad) rex.B ljmp mov movabs jrcxz (bad) sub pop cmpsb sbb jge cmc cmc add (bad) cltd or mov cmpsb mov sahf rex.WXB lret sbb add cmpsb rex mov sbb rorb movslq (bad) mov rcl scas mov pushq rex.R imull add and sbb cmp (bad) cmp mov adc xor sub or mov (bad) mov sub rex.X pop and cmc xor movsb jge rex.B rex.R sbb xchg sbb in enterq xor neg adc (bad) test rex.WRB xorb (bad) sahf movabs lret imul xor (bad) (bad) sbb outsb in lock sbb xor iret (bad) rex.WR repnz jb (bad) icebp and cmp adc pushq je gs jnp mov add hlt (bad) iret push movsb and rolb rex.WXB insb rex.XB rex.RXB popq (bad) (bad) icebp cmc add xchg and pushfq repnz sub and fsubrp xor and js cs imul cmpsb jrcxz in pop add fneni(8087 rex.RX fld and fmuls jg sbb icebp rex.WR (bad) fs xor (bad) leaveq (bad) testl adc sbb sub push mov rex.WRXB fisubl push data16 adc (bad) add insb jrcxz (bad) jns mov (bad) or movabs sub enterq cwtl xchg (bad) jns mov mov lock outsl jg prefetcht2 movabs insb movslq loop in adc cmp ss jb ja loop (bad) adc movslq adc jo adc test add jrcxz test (bad) adc push subl movabs add rex.R (bad) or sbb sbb icebp jle cmpsb cld insb ja add rex.WRB test and add iret movb adc jge xor cmp sub rex.RB mov mov rex.WRXB mov je mov int pop sarb icebp imul movsl retq shrb std lret jo rcl in (bad) (bad) cmp lods rex.WRXB stc rex.XB (bad) sub lock retq push cmpsb adc mov xlat and out (bad) (bad) callq cmp in mov nop adc rex.WRXB xor jle ror sub nop jl stos (bad) (bad) sbb (bad) cmc leaveq enterq in adc and cmp mov rex.WRX sbb gs int movsb pop cs mov orl xchg icebp rex.WR rex.WX bnd (bad) (bad) in rex.WXB push rex.RX adc push out sub sub pushq outsb divl and rex.W adc jns or jb (bad) adc (bad) (bad) in mov stos pop and movslq or pop and sbb addr32 adc adc mov or stc negl addl lahf gs mov (bad) sbb (bad) sub scas xchg insl fdivrs ja out test (bad) hlt sarl push imul fwait repz (bad) (bad) (bad) int jno sbb cltd jnp retq loop (bad) mov bnd cltd mov lods (bad) enterq sub (bad) adc andb jno sbb mov lock xor lods sbb sbb enterq jbe cmc xor cmp movabs jb sbb cli in iret imul pushfq fmul sbb jnp (bad) jle (bad) (bad) (bad) adcl sub jns (bad) repnz (bad) cmovle movabs shrb pop pop (bad) jg vandps addr32 adc pop callq jl xlat (bad) xchg mov xchg clc cmp and cmc and retq test xlat adc cmpsl insl hlt and xchg pop jne rex.X sub cmp pushq lods sbb jge insb xor fisttp imul and cmc lret or adc ja stc and sbb (bad) (bad) xchg (bad) add je xor jae cmp cmc (bad) add or cmp mov and test sbb (bad) in rex.RX sbb jne loop sub cwtl or (bad) (bad) (bad) jrcxz lahf rex.WRXB push in mov jrcxz or lahf xor data16 icebp lret rex.WRX iret or xchg and or (bad) sbb pushq and std (bad) or add (bad) clc movsb mov (bad) (bad) xchg mov (bad) and retq lock sub (bad) repnz rex.RB repnz or fs jae rex.X or outsb jmpq push (bad) in loopne ss cmc sbb subl fcmovb (bad) rex.WRXB data16 sbb rex.WRX rcrl (bad) data16 push rex.R retq imul lahf out cmp loopne and and add jmp clc out and (bad) insl ds out push mov or pop mov mov clc test int3 jrcxz loope or loop xor and in adc sbb sub push jns rex.X loopne add mov (bad) jg ds mov (bad) movslq in adc leaveq out mov and cmpsl (bad) (bad) pop cmp mov fs pop or and rep cmc (bad) xchg xchg (bad) (bad) imul out out (bad) jl callq js imul icebp out xlat sub mov rex.RXB jmpq mov add sti pushfq sub xchg sub ja out movslq mov movabs callq sbb movabs jns movabs lret loopne leaveq or dec sub and rex.RX rex.WX add stos loop lret (bad) retq out leaveq jae outsb movabs stos xlat xor add popq (bad) in adc (bad) or fbld cmpsb adc adc adc cld repnz out loopne adc push insl adc (bad) xorb xchg in pushq callq rorb lods cmp jmpq adc and push adc rex.WRX cmc sub adc add andl insl pop mov adc and (bad) mov jl jg xchg imul mov mov or fs jmpq add xchg sub pushq or add movsb in outsb stos and sub (bad) mov rex.WRX mov jg sbb popfq sbb adc rex (bad) out icebp (bad) adc std (bad) test shl jae jrcxz,pt mov movsl scas jmp add ja xchg test xor add xlat xchg and (bad) leaveq test xor insl pop (bad) (bad) stos shr (bad) jmpq pmaddwd adc loopne add (bad) stos clc (bad) pop stos movabs fidivr in fisttpll (bad) mov cmpsl jp out (bad) int3 cld (bad) jle mov std data16 or ds or js je out outsl sub rex.RB jae shr movsb (bad) mov rex.B data16 jno jae lods (bad) hlt (bad) int xor fbld adc je sbb and (bad) jo mov pop sbb in rex.RX (bad) outsb rex.XB sub fadds (bad) sub (bad) add (bad) lock cmp mov in (bad) cmpsb retq cmp adc pop xor jae data16 std jp sub ss adc xchg sub sti scas retq jb scas fild jmpq rex.W stos repnz mov ror scas mov in adc add (bad) movsb lock jp jb jns mov pushq pop mov mov mov sbb jbe push jns (bad) gs push sbb mov dec fcompp sbb add push ficomp repz jb negb js (bad) out sbb cld (bad) and in test sub jg rex.WR and vpcomuq rex.WX in scas jrcxz rex.WR rex.WXB scas fiaddl loop movabs (bad) adc movabs stos (bad) jo leaveq jb test adc out (bad) in jle outsb jno movslq jno callq (bad) or pushfq lods (bad) mov mov (bad) mov cmp fcmovnb retq mov enterq cmc and jg fdivs cmp mov jg jae pushq (bad) (bad) fsubs push (bad) addr32 leaveq add test xlat sub sub loopne (bad) fildl stos cs adc leaveq mov jne,pt adc (bad) loope mov cmpsb sub out lods sbb add lock adc (bad) cmp (bad) jne mov (bad) stc (bad) imul and lock callq mov loop jo cld std in jmpq in loope mov in out xor rex.XB pop loop (bad) in mov int3 (bad) movabs iret pop (bad) (bad) cmc fisttpll rex.WR insb shr hlt enterq cld repnz stc xchg in clc imul div mov callq pushq fdivrs pop (bad) paddd (bad) (bad) movslq xchg cltd stc mov scas fst sbb retq xchg sahf rex.WR movabs (bad) jmp je scas retq and (bad) retq add and (bad) jg adc enterq (bad) ss scas (bad) jae mov add movslq sub cmp jns js pop and push ss lods imul rcrl cmp rex.XB add (bad) xchg jg jo,pt add jae mov fsubrs ss subl or test fisubr add test xchg and or fsubrl mov sbb fdivrl loopne xor icebp jp and adc mov sbb xchg sbb sub sub jg lahf (bad) orl sbb or cmc xor fdivrs (bad) sbb in add mov push mov fiadd mov pushq mov or mov (bad) loopne and js and and outsb sbb add add in hlt (bad) xchg mov mov jbe jle (bad) out (bad) xchg sbb (bad) sti movslq adc outsb test (bad) lahf ja cmp outsb retq mov rex.WRXB cmp (bad) jnp cmpsl ja rex.B retq cmp sahf jbe movabs jb je rex.WX and hlt jg (bad) mov or cwtl enterq (bad) and rex.WXB and and lret cmpsb test adc out (bad) iret iret add or adc test pushfq mov stos rex.WRX rex.R rex.WRXB out cmp retq adc (bad) insb lods push xor popq lock mov pop rex.XB xchg movabs stos (bad) cld in retq sbbb push sbb or (bad) (bad) mov mov ss sbb add ficom (bad) and mov cmc rex.W rex.WR or mov sbb rex.R rex.RX (bad) movabs retq imul jo pushq mov lahf ds adc rex.B (bad) movsb add cmc (bad) stos xor sbb sub in fdivs xor repnz add js rex rex.WRB rex.R rex fs fs and add lahf cmp int sub adc sbb cmp jle rex sub sbb (bad) jnp pushq cmp (bad) mov movsl rolb sub fnstsw in jno xchg adc xchg icebp mov mov (bad) (bad) xorl sbb test repnz (bad) adc (bad) mov or rorb loop and fmulp sbb cmp fs add (bad) rex.W rex.RX jmpq and pushq data16 mov (bad) rex.W rex.RXB (bad) rex.R outsb push (bad) rex.WRXB or (bad) rex.W sbb (bad) mov jrcxz dec movabs divb data16 (bad) stc or stos cmp and and adc jo sbb xorl jmpq (bad) rex.B (bad) sbb pop (bad) pop (bad) (bad) negl cmc clc adc (bad) (bad) movabs xor cmp lret sub mov mov jp and mov out cmp rex.WRXB ss mov mov mov push fs xor out movb (bad) rex.XB cmp add movabs ds and movsb (bad) xchg or insl pushq pop xchg sub not fs rex.RXB rex.X repz insb rex.WRX adc and in icebp rex.XB jo (bad) sbb and (bad) or rex.WR icebp (bad) rex.WRB pop xor rex.RB and jae xchg (bad) jb add jno and add mov xorl fiadd xor xlat mov js idivl in jne cmp adc (bad) mov cmpsl movabs xchg and fsubl pushfq push test sub (bad) (bad) cmp mov xchg lahf rex.XB test jae or insl add fidivl add (bad) pushq adc clc ja or mov ror mov retq sahf in (bad) lods ja and sub (bad) fcompl pop pop jo push (bad) jns stos sahf (bad) (bad) and xlat es and sub xchg popfq imul and pop jmp xor xchg iret pop add (bad) (bad) movabs (bad) mov rex.B hlt rex.XB fnop (bad) gs lret icebp jo sub xorl int3 test gs push xchg mov ja loope imull pop mov jle (bad) and sbbl adc stos jnp sub in fs rex.WX movb in insl int3 (bad) in fist (bad) xchg pop cld (bad) retq js and mov leaveq icebp movslq jns fs (bad) rex.RXB movsb add and (bad) pop movabs scas and xchg jns xor jae imul fistl mov (bad) (bad) rex.WRX mov sub xlat xor mov ds addr32 (bad) sbb and (bad) data16 in rex.RXB rex.WXB loop out repz sub movsl lods sbb pop sbb jle fdivs add or (bad) push rex.X rex.WRX and pop pushfq fldcw mov loope fs add lret (bad) jae cmp (bad) sub scas fcmovnbe pop enterq jrcxz jne mov nop sub rolb jle jae mov push and jo sbb insl rex.WRXB and rex.WRB push rex.B vcvtpd2dqy (bad) (bad) jle sbb test movabs mov (bad) (bad) mov test mov (bad) test sbb mov fsubs imul push push data16 xlat add lar (bad) outsb xor jns (bad) (bad) mov int xorb or test adc (bad) xchg sub (bad) je add fwait pop pop stc adc add rex.WRXB and jns rcr ds xorl pushq jle add gs in pushq out leaveq (bad) and mov in rex.X fs (bad) jrcxz or sub sbb (bad) (bad) popq clc in and sub leaveq (bad) lods movabs es and cmpsb pushfq loopne pmulhuw pushq loope rorb rex.RXB cmp or sbb or and (bad) (bad) (bad) in xchg jp out jrcxz adc (bad) cwtl pushq adc rex.WXB jnp in push pop mov ficompl and and (bad) jb fild and xor cli (bad) test mov rex.WRXB int3 movabs xchg fiadd jle insb (bad) rex.WRB rex.WXB jbe sub (bad) xchg (bad) add (bad) rex fdivrp fsubrs (bad) repnz xchg sti push cli (bad) rex.X sbb (bad) shll push (bad) icebp test (bad) sbb cmpsb (bad) mov cmpsl iret or sti imul sbb lods outsb pop add movsb imul xor (bad) and sub xchg (bad) mov (bad) jmpq mulb pop (bad) cltd (bad) mov js fisubr add out cmc xor jne rex.WXB lods adc rex.WRX fwait sarl ss and rex.RXB (bad) lods rex.XB rol (bad) pop and sbb (bad) (bad) cbtw cmp rex.B rex.XB scas rex jge negl fstpl cli jb movabs mov nop ds rex.W sbb pop add pop (bad) (bad) retq lret icebp out mov mov in fisttp (bad) leaveq sub (bad) jo fdivrp adc movabs (bad) lret rep frstor (bad) outsb fidivl js nop adc cmp ss cmc mov sbb loop cmp cmp (bad) xor sbb (bad) in adc jg js xor fsubl rex.WB push (bad) in callq (bad) loop and and (bad) add scas and xchg loopne adc roll fldenv (bad) int add out incb jrcxz (bad) (bad) cmp ds jmpq rex.X adc gs cmc fwait add cmp sbb mov push or jmpq out jne mov push lods pop sahf xor or mov movslq mov jns movsb es fildl (bad) pop stos pop (bad) clc femms mov xchg repnz sbb jno in mov adc cmp test push pushq mov (bad) (bad) retq and js mov xor adc in jns adc outsl test lods or jno mov in and lret pushq mov fldcw push xlat push adc fiadd mov (bad) movabs andl jae xchg sbb rex.X and add mov mov outsl addr32 (bad) in mov js std icebp jne or addr32 pop (bad) fisub mov lea add pushq cmp push and (bad) lock out xor cmp mov je or jno (bad) jo sbb mov enterq add movabs stos add movsb out addr32 xchg test jrcxz sub (bad) loope,pt int shlb (bad) adc mov adc in (bad) add xchg enterq mov cmp lods (bad) repz div loope lods sub (bad) mov int mov mov xchg data16 (bad) jrcxz (bad) (bad) (bad) add add leaveq in xchg rex.W sub movabs adcl pushfq adc ficom callq rex.XB adc (bad) cmp push loope or (bad) testb (bad) and pop mov mov movabs xor iret insb lret (bad) lods cmpsb ss (bad) flds jae (bad) (bad) rex.WX movabs jmp pushq stos out stos rex.RX and (bad) push and rex.WRB xchg in (bad) (bad) push (bad) rex.WX (bad) clc (bad) in (bad) fs adc js loop sti rex.WXB pop in dec pushq mov sub (bad) ds imul sbb movsl enterq mov rex.B mov pop movslq insl sbb push push pop sbb shl test movabs add lock push rex.WB and cmp (bad) callq out jmp lock or movslq and cmp push jg (bad) sub mov pop sub and cmpsb sar repnz imul lret (bad) test lret jl,pt ficom lock jmpq (bad) add xchg rex.WRX jne clc lods movsl jrcxz add insb or adc mov fcomp push sub or hlt fs loop jae out sbb jge or test rex.RXB add pushfq retq sub addr32 out and movslq sbb imul icebp jg sbb jbe fnstenv stos jnp lock negl lret movabs jo jbe (bad) pop sbb jo xchg (bad) push jb (bad) test in rorl rex.WXB sub rex.WRXB or ds (bad) rex.RX rex.WXB fs add xchg (bad) pop mov (bad) cmp in rorl (bad) xor adc int xor je (bad) cltd retq jno sbb int sub out jo stos adc mov and adc insl pop adc rcrb (bad) fcoms mov cmc sbbl outsl pop fwait sahf and sub ja fisub rex.WXB fwait adc int3 leaveq fldl xor adc or mov mov add ja rex.WB rex.W cmp jo callq iret mov lods push je (bad) mov push (bad) loop (bad) (bad) cmp outsl fisubr (bad) cmpsb xor cmpsl iret mov (bad) (bad) ds lahf out (bad) (bad) mov notl (bad) fldt fsubs in (bad) adc pushq add xor (bad) test movsb sub rex.B addr32 push hlt test cs mov (bad) icebp cmp sbb rex.WRXB rorb sbb pop adc test int3 (bad) and xor xchg mov jae xlat cmp cmp cmp rex.WR jmpq sbb (bad) xchg fs adc (bad) pop jle es out mov out (bad) outsl std cmc movabs lret rex.RXB and xor (bad) sbb xchg fsubr rex.XB and adc loop sbb jb sub shrb (bad) mov out (bad) (bad) mov mov cmp or (bad) jno jl xor loopne xchg stos lret je (bad) jo (bad) (bad) in jl jmpq pushq jae test cmp xor fcos es and rex.WX iret retq mov xorb int (bad) ja test addr32 add push mov movsb xor sub rex.WR jns callq enterq std (bad) sub test movabs jns (bad) cli add in scas (bad) data16 hlt jnp in (bad) fnstenv cmp xor test in in adc in (bad) scas jge sbbl clc mov fistp ds test insl push mov notl rex.X in movabs movabs mov cmp (bad) out scas in decl mov imul punpckhdq negb xchg imul out in test (bad) and in (bad) in rex.WRXB rex.WRXB add lock in addr32 mov jp rex.WRXB ss scas scas movabs jmpq js (bad) add xlat lods mov repnz push iret in mov (bad) adc adc mov and outsl and retq add (bad) cmp and jb pushq (bad) mov pushq xchg (bad) mov sti es pop pushq popfq jle iret sub movabs push fwait push adc (bad) (bad) mov push ss add xor xlat test movslq outsb (bad) sbb (bad) (bad) and add xor mov adc fcoms xchg (bad) roll lock movsb and fidivl sub rolb retq and rex push sub out mov adc (bad) sbb shll sbb adc xchg lods bnd jmpq xlat fistl adc shl in (bad) outsb pop pop xor (bad) es imul jns in repz gs add xchg jnp (bad) sbb repnz sbb mov mov lock imul stos adc lods pop lahf cmp jg push fwait cmc cs (bad) (bad) fsubl stc lock add in push mov pop int jmpq or cltd mov (bad) rorb decl cmpb push jle movmskps mov rcrb jmpq xor (bad) cmp mov movabs idivb jo imul adc mov rex ds in scas xchg pushq in pop in add sub in jnp cltd pop (bad) jmp movabs (bad) or (bad) rex.WRXB pop test jge scas rex.W adc rex.XB rex icebp jae mov fisub pop data16 sbb jle,pn mov jrcxz movslq insl popfq push (bad) imul push int3 add mov outsb in rex.WXB add (bad) js jmp cld mov mov in rex.RB loope and (bad) (bad) mov pushq ljmp pushq jg (bad) out jrcxz callq scas negb pop (bad) mov (bad) cld pushq mov decb mov fwait enterq enterq (bad) test (bad) mov stc cmp out jbe sub mov pushq jg sbbl sub lcall movabs lods (bad) scas mov rex nop decb in addr32 (bad) push rex.R or in (bad) add sbb out rex.R gs sub popfq jo mov in xchg fs rex.WB xor mov rex.WR pop mov (bad) (bad) std (bad) clc rex.RX pop in xchg or pushq rcll lods push test lahf (bad) movsl pop sbbl int3 fs (bad) pushfq (bad) lret icebp test shlb rex.WRB push sbb or std ja xchg mov xchg addr32 rolb sub movslq fsubs icebp data16 cmp sbb pushq scas insb rcrb in add ja mov cmpsl xchg rex.RX loop movabs fs and (bad) (bad) callq je icebp jl (bad) cmpsw (bad) cmp andb jge imul mov pop out ss (bad) movabs cmp scas sbb (bad) lret (bad) insl mov sbb (bad) xor cmpb pop rex.RB xor jmp movsl push ja mov and xchg jg sbb mov in je pushfq jrcxz push or xor cmp in mul xlat xchg out in gs (bad) rex.RX pushq sbb test jo addr32 shrl cwtl xor xor and adc lret in hlt movslq divb rex.R mov cmp faddp in pop jg cmpsl jno (bad) in push and js xor jb (bad) loope loop out fmuls stos fistp jge jne imul sbb xor js sbb xchg mov adc imul addr32 push ds rex.WB repz loope out movabs loop xorl fisub or punpckhwd stc movabs imul xor loop pop repz (bad) or mov and push lods jno por push callq rex.WRB xor nop cli (bad) out addr32 ja and rex.W rex.RXB out rex.WRXB (bad) mov rex.RB and mov int lret addr32 jle jmp icebp jne (bad) out pushq xchg pop pop lock or jrcxz mov gs test mov rex.WR in xchg cmp and jmp rex (bad) add (bad) sar adc in jrcxz (bad) movabs sbb imul (bad) mov out mov fdivrl xlat fsubl retq (bad) (bad) sub sahf sub adc fwait jo add in pushq test jmpq lock (bad) movsb mov jmp jle (bad) (bad) add mov fistpl and (bad) sbb rex.WRXB repnz and cmc movsb cmp rex.WXB out xor (bad) movabs outsl jg imul cmp xor movabs jb jae jns pushq in (bad) (bad) rex.WRXB adc (bad) adc jno out pop xor fsubs or icebp jle psubb pop mov rex.WRX loop or or fs movslq in pop loopne,pt lahf (bad) (bad) rcpps adc outsb jle add enterq lret sub sbb or or cmc pop jmpq movsl adc add sub add and cmp xor cltd sub movsl add rex.RXB sahf add pushq out (bad) sbb addb sar popfq repnz xchg loopne and mov (bad) sub or sbb cmc test jae cs loopne gs add insl jp loopne pop lock pop or (bad) sub push in cmp xchg ror mov and callq pop loopne xchg (bad) mov mov (bad) loopne add rex.WRB push loopne fadds mov cmp mov pop and pop repz int je sub insl or int3 xchg loopne idivb out scas adc lock (bad) mov test movslq fiaddl (bad) lret (bad) push out xchg test notb cltd rex.WR pop push test lret lea rex.WB out ja sub mov xchg out std add xorb negl cmc or cmp loopne add add fwait xchg (bad) outsl pop scas lahf jmp mov add mov loopne xchg xor sbb js loopne push (bad) in mov jge sbb callq icebp (bad) xchg iret fildl loopnel add mov loopne xor mov loopne (bad) insb mov or xlat stos push or fcoml xchg sbb (bad) rex and (bad) sbb fsub je mov lea mov (bad) mov jrcxz insl and bnd push imul (bad) nop pop scas stos (bad) xorb je (bad) movsl xor in xchg ss imul fcmovnb xchg or imul in ss xor sub push or adc loop xor sub (bad) out mov stos insb lret (bad) int3 xor loopl jle sahf push xchg movabs jrcxz stos push rex.RXB sub xrelease jne rcrl movsb movabs test stos fsubs ss mov sub jo pop (bad) cmp sub subl clc paddsb mov (bad) (bad) or jle xchg jno fs xchg xchg fs lahf clc (bad) mov mov push (bad) je rex.X (bad) mov and cmp sarb (bad) pushq cmp rex.WX (bad) cld mov rex.X repz stos notl movsb adc add add stc js in jl out jmpq (bad) lahf stc push std rex int sbb repz fdivrl push lods pop jrcxz jl (bad) callq sub callq (bad) pop movsb mov iret rcll (bad) sub retq movabs cwtl add cmp in rcl (bad) xchg cld rex.WR insb pop movabs add loop data16 rex.WXB pop xchg clc or or (bad) sbb push and sbb push pop icebp stos (bad) xchg add (bad) jle cld (bad) adc mov rex.RB in adc jo jns js sbb test retq movabs rex.WXB rex add orl mov and jrcxz push lret or jge or retq js in cmp icebp std jle push cmp (bad) repnz (bad) scas and mov mov (bad) adc test pop cmp in sbb jno and pop retq or push stos pop push (bad) xchg xor ja movabs and retq unpckhps enterq (bad) in jmpq (bad) in xor roll in mov (bad) repnz (bad) push mov out stc clc sahf (bad) xchg xor out jne iret loop (bad) out lock xor mov lret fcomps (bad) and mov nop xchg mov or imul fwait popfq (bad) (bad) sub and movabs (bad) and mov sar fidivr movabs add push callq loopne rex.WRXB pop retq test out fistpl in in mov (bad) iret clc jl cmc lock cwtl rex.W out (bad) rorb loopne (bad) imul rex.W cmp adc pushfq fdivl rex.WRXB rex.WRXB (bad) (bad) jnp add mov pushq push loop push lock xchg (bad) outsl iret pop nop nop or cmpb icebp (bad) ds hlt cwtl sub xchg sbb (bad) (bad) mov repz mov fist add xorb rex.WX clc mov test outsl (bad) mov adc (bad) movabs (bad) add shrl mov sbb push and loop xlat scas imul loope retq add and data16 mov and test (bad) in and rex.WX sub (bad) cmp movsl stos (bad) add xchg xchg jge fidivl (bad) (bad) (bad) pushq or imul hlt flds clc int je callq fwait and movsb and rex.WRXB out xchg lahf in outsb (bad) retq leaveq jmpq out test loop pop xchg jns (bad) xchg mov jae sub sar push data16 xor pushq retq pop jle cwtl (bad) int3 movabs mov xchg mov sahf and pop or rex.RB adcb sarb hlt pushq push push in mov (bad) fnstcw insb push rex.WR (bad) cmc cmpsl movsb imul lock jle cmpsl sub add (bad) (bad) out lods add and adc push cmp lock iret (bad) rex.XB in sbb movabs sub push cs push and rex.WB sbb in (bad) rex.RB pop (bad) mov (bad) lret lods adc pushq cld add mov incl cmp insb lods adc sub rcl mov (bad) test rex.WR fnop mov (bad) add sbb loopne xchg adc and sbb xchg cmc sbb mov xchg (bad) (bad) movslq ror mov cmc (bad) xor mov (bad) or in sbb cmp movabs push icebp sarb sbb pushfq cmpsb (bad) jo (bad) je adc ljmp loop icebp cmp in movb pop push jmpq jl (bad) in mov sbb add adc mov mov lock (bad) and (bad) sbb and fs (bad) (bad) (bad) hlt insb and lret jmpq loopne xor outsb (bad) mov loop test jmpq sub cli and sbb cmc (bad) (bad) cmpsl mov pop shl jrcxz sahf xor (bad) adc enterq sbb movsb loopne (bad) cli movabs (bad) mov hlt fs xchg sub lret clc push scas cld jmp sbb rclb mov mov (bad) fs (bad) mov out xor imul (bad) stc insb rex.XB (bad) (bad) mov retq (bad) and out jle (bad) and xchg rex.RX add or (bad) or push loope ss shlb mov jmpq fmull (bad) retq rex.XB jmp sub rex.XB (bad) test lods std lods lods movslq (bad) cmp jge add fwait mov clc xor mov cltd sti jl (bad) movabs jp mov xchg pushfq and or (bad) enterq sahf scas and mov (bad) movl pop and sti movabs sub add outsb in jmpq sub pop cmp adc out (bad) jge mov sub mov adc (bad) sbb (bad) callq insb xchg out (bad) std cmp cld js cmp out popfq rex.XB or (bad) adc lock loope,pn (bad) adc adc or adc (bad) jg jge push push movabs test mov (bad) push xor mov mov xchg jnp add lods cmp pop outsb fldenv xor push mov fmulp (bad) add insb movabs shll jae (bad) jle rex.RB (bad) retq stos (bad) ja sar loop mov lret xchg orl addr32 jrcxz ficomp jl in rex.WX add and sbb shl stos or lock adc cmc mov cld jg lret bnd in adc rex.RXB (bad) js (bad) roll push mov jo mov retq in (bad) pop in rex.WB rex jmp jge mov adc ds mov jp (bad) jb hlt rex.WRB hlt pop movsl rex.RX lods pop cwtl rex cmc in out jmp mov mov push fwait in rex.RX sbb jmpq or rex.WR icebp movslq mov jmpq js sub fisubl (bad) mov xor mov lret rex (bad) pop hlt sub or push js (bad) mov jno fsts lods (bad) mov rorb fstpt cs jo rex.WRX xchg add cwtl shr outsl leaveq loopne sti cmp (bad) lret clc jo push outsb sub jae movslq xorl xor retq rex.WRB int xor sub cmp mov out jle pop out test sub (bad) outsb push push and (bad) mov lock hlt jrcxz fbld out ja out jns fmul (bad) enterq mov rex.WXB adc add (bad) push cmp (bad) outsl retq xchg andl adc cmp movabs (bad) (bad) rex.X cmpsb pop pushq lret sub (bad) rolb xchg push add jne imul test sarl add sbb (bad) jns lss movabs sub rex xchg stc (bad) loopne rex.WXB push push push (bad) icebp jnp jo (bad) mov (bad) mov (bad) and push (bad) (bad) mov rex.WX fs (bad) jno sbb xchg out shrl xor jbe enterq jnp and (bad) sub jle shl (bad) incl stos (bad) sub movsb movabs lret imul mov cmp and mov sub push xchg dec repz sub xor movsb out (bad) cmpsb sub clc fcmovne je and in pushq push mov and mov (bad) loop addr32 mov push (bad) jmpq and rex.XB out (bad) jge (bad) insl in mov out add lods test cld ds test in sti cld (bad) (bad) rcrl jrcxz pop in sub repnz xor movsb mov nop mov jl leaveq push and xlat js cmc pop (bad) and cmpsb rex.W in loope and out repz push insb add movsl cmpsb cmp cwtl mov add jge (bad) movabs jrcxz push rex.WR insb mov mov js out rex.RXB xchg (bad) push out add (bad) xor ror sarb cmp sbb lahf shrb jmp rolb sti add xchg lahf shrb movabs jo (bad) xor sub mov rcl addb jno rex.WB sarb cwtl (bad) in movabs push fnop (bad) enterq cmp imul pop xor add insb rex.XB lock out mov andb cmp js scas mov nop (bad) mov callq js rex.WX pop repz cmpsl add out (bad) lods add adcb insb (bad) (bad) (bad) test or rex.WXB cmp (bad) and sbb and rex.WB (bad) js mov gs mov sar mov nop xchg enterq movabs (bad) mov (bad) icebp (bad) mov bnd xchg mov in in shlb (bad) rex.WRX cmp mov mov fnsave lahf mov shrl stos jo and clc (bad) or cmp movabs cmp (bad) xor mov js out add rolb mov and mov jno lock add (bad) lock mov subb rol retq or fs ja cmpsb mov cmp adc sarb mov movabs cmp and (bad) (bad) nop pop mov pop rex.WRX and cmp sbb stos movabs rex.W push push enterq or xor cwtl adc sbb xchg js rol adc fadds fadds add (bad) cwtl rex.R iret cmpb repz test cmpsl sub jp test cmpsb xchg fnstsw mov rex enterq cwtl (bad) cwtl movabs icebp mov js jge xchg lock nop (bad) mov rex.W cltd test lahf cmc pushq rex.WRXB (bad) xor mov rex je jge cmpsl clc cmpsl adc pop add sarb repz push movabs pop test (bad) xchg jne (bad) jmpq (bad) adc fnsave loopne and test lret jns test cld add xchg fsub (bad) (bad) fdivr nop (bad) pop sahf (bad) loopne lret pop repnz test cli adc jnp mov rex.X rex test or leaveq loope loopne jnp (bad) test out rex.WRXB rex.WB data16 popfq callq add clc xchg rex.W es cli in (bad) (bad) (bad) sbb loopne add rex.WRXB lock cmp (bad) icebp jp mov movabs popfq scas jno (bad) sbb pop add fiadd outsl (bad) pushq rex rex.W cli pop add (bad) rex.RB in add push fistpl cld fistpll popq ss pushq cmp and rex.RB mov loopne retq in jg or repnz mov (bad) or pushq fmuls movabs sub rex.WB divl adc lock push retq jl movsl fwait js in mov jne rcr loopne rex.W ds mov push and neg add fisub movsl mov cmpsb iret (bad) (bad) add rex.R and insl mov loopne rex.WRB js (bad) jno jmpq pushq hlt adc pop (bad) icebp and test movabs cmp adc and sub sbb xor adc rex.WRXB mov out flds fwait mov cmp push xchg lret loopne and addr32 leaveq mov rex.WR sar adcl (bad) (bad) (bad) adc mov ja loopne cmp cmpsl jrcxz outsb in mov sub push loopne pop idivl xchg rol or loopne (bad) ficomp (bad) xchg cltd loopne adc xchg callq ds sarb or mov (bad) sahf xor or push add outsl and push enterq (bad) cmp (bad) loop add out fs (bad) sti int cmc jp lods test rex.W loopne sti xor add rcll (bad) pop rex.WR rcrl loopne adc sub jae mov rex.RXB (bad) insl (bad) jbe loopne mov repnz rex.XB pop ss test fmull pop jl addr32 adc cmp pop loop in rex.X mov push (bad) or and (bad) xchg (bad) repnz or rex.X movabs sarl jrcxz (bad) adc rex.X mov pop rex.RB rex.R (bad) (bad) loop scas xor loopne rex.W sbb jle cmp cmp fiadd loopne (bad) (bad) rex.WB pop or cmpsl mov icebp cltd ss add pop add ffreep xorl stc loopne pop pop rex.WR xor loopne cmp sbb push cmp sti (bad) xor jo pop (bad) (bad) rex.RB lahf gs (bad) xorb cmpsl adc rcl std xor sar jmpq loopne cmpsl sbb loopne mov stc rex.RX adc and sub cmpsb loopne and add imul cld mov andl pop (bad) pop pushq cmp shr fwait xlat mov test in xchg or leaveq adc sbb mov loopne idivl adc js lret cmpsl in movslq cmp loopne mov mov jl (bad) jp (bad) sti subl pop (bad) xorb cld lods test mov lret ds js jp sbb fist sbb jmpq out (bad) sub jge sub (bad) push sarb (bad) jmpw mov (bad) jo add loopne and adc jle pushq scas clc adcb mov sub movabs scas loopne mov push rex.RXB or adc in or in (bad) je fimul shl loope sub insb (bad) (bad) out pop and insl rol hlt fdiv jns loopne or sbb xlat movabs faddl leaveq add in rex.XB xchg (bad) loopne add push (bad) faddp push loopne icebp in xor repz cmp and in (bad) movabs (bad) mov or int xchg (bad) loopne cmp rex.XB adc cmp loopne add rex.WR cld lret loopne (bad) xor rcll pop add pushq sbb (bad) jg xor lock xchg frstor ss sbb lock sub iret jae lcall adc sub popfq in (bad) rex.XB add loope jg loopne pop je mov adc cmpsb sti (bad) testb in icebp xchg rex.B and ficoml lret loopne cld outsb (bad) imul loopne mov lods stc cmc pop mov and and (bad) or jge push sbb (bad) popfq loopne jle xchg clc scas mov (bad) sbb (bad) loopne sub out xchg jae fnstsw out add movabs fcmove stos mov sbb pop and sbb cld cmp ror loope js pop (bad) roll lods lahf adc cli push rex.WRB and fwait in and loop push loopne mov subl add cs jmp push andb cmp loopne jb adc cld sub in and decb adc lock and test sbb cltd (bad) (bad) jnp int3 rex rex.RB (bad) icebp push movabs rolb (bad) cmpsl jrcxz sub and xchg (bad) loopne mov repnz loopne jle mov rcrl add ds nop loopne push (bad) fdivs test xchg cmp loopne ror mov and ds rex.RXB loopne sahf (bad) jnp push stos (bad) jmpq mov xlat and jle cmp movsb mov loopne lods and stc pinsrw rex.XB (bad) (bad) movabs sahf out sbb (bad) loop enterq xor int3 loope (bad) (bad) (bad) ja loopne stos (bad) cs mov mov adc mov loopne cwtl (bad) pop xchg add (bad) nop (bad) or or in imul cli mov out rex.WX sub mov xor cld imul retq pop enterq rex.WRXB es xor jp cmp callq cld and jmpq push (bad) jo adc (bad) sahf fdiv jnp scas je pop fstpt cwtl lret (bad) lret out movabs cli pushfq xor iret or mov mov add shrl pop mov (bad) add (bad) mov and xor hlt mov loopne adc or popfq add mov adc loop sub jnp test (bad) loopne adc mov and rex.RX fnstsw push add sti rex.WXB in push (bad) cmp popfq jge adc and fldcw outsb xor idiv andl (bad) mov jmpq out movsl (bad) (bad) jnp stc xor and or sbb rex.WB imul mov sti pop or fstpl fsubp (bad) movabs adc gs cmp mov cwtl stc and or adc pop or xlat mov mov xchg push adc (bad) sbb jrcxz hlt sub js add rex.WRX je rex.RX test gs cmp (bad) mov push rep mov loopne (bad) addr32 add rex.WR xchg push xor mov push fcmovbe sbb xchg mov (bad) push loopne mov jbe or (bad) loopne mov mov pop sti cmp dec fs cmpsb imul xchg pop loop xlat sbb sbb testl lret pushq mov sbb loopne (bad) rclb sub or rorl pop (bad) (bad) cmp (bad) xchg jl jl sbb test fwait cmp frstor push stos (bad) mov mov test loopne xor ficompl pushq jae imul cld push add (bad) push cmp insl mov (bad) add xor movabs add xor cli callq nop loopne jns fildl rex.WXB cltd pushq fnstcw sbb or rcrb in cmp mov fidivl (bad) data16 retq jo cmpb push loopne mov es sub enterq rex.WB and pop and pushfq loopne xchg xchg xor out and lret jne mov rex.B rex.W addr32 mov loopne out mov addl loopne addr32 (bad) movabs mov addr32 (bad) mov rex.WB mov mov pop (bad) (bad) jo or jae adc add xchg leaveq jg cs adc push cwtl and addr32 mov outsb popfq (bad) rex.WRX (bad) rol ja fidivr mov and jmp jmpq callq insl in jo mov jrcxz outsb sbb jrcxz sbb jge mov iret jp sti outsb rorl hlt nop out cmpsl xor loope rex.RXB out lahf loopne orl loopne pop sbb add fadds adc ljmp callq nop xchg loopne retq xor loopne ja pop pop js loopne popfq xchg pushq in adc lods mov out sbb loopne ror jmpq loopne rex.RXB (bad) movabs retq (bad) ds ficom imul faddl (bad) (bad) sahf retq rex.XB xchg pop jge movabs push subb (bad) movabs jge and lret lahf xor rex and fstl sti sbb (bad) rex.R adc sub adc (bad) lret iret rex.WXB sub or sbb ljmp sbb fildl js rex.RXB xchg in test sbb imul movabs sbb shl mov (bad) or (bad) mov scas insl xor sbbl xchg (bad) rex.WR xor test (bad) loope loopne cld outsl cmpsb (bad) pop or pushq rex.RB addr32 xor lcall fimul xlat xchg fmuls rex.WRX cmp (bad) ss xchg (bad) (bad) jno stc movsb pop mov cs cmpl (bad) add loop lock (bad) loopne add (bad) pop rcr loopne mov (bad) nop sub push ljmp andl incl xchg xchg adc loopne addl mov fidivrl xchg (bad) sbb rex.W (bad) icebp push nop mov loopne (bad) mov or rex.WB lcall movsl outsb imul rex.RB in sbb sahf xchg push lods loopne movsb stos (bad) sub sbb mov cltd and and (bad) (bad) movabs sbb movsl loopne insl (bad) sbb outsl (bad) lret (bad) leaveq loopne (bad) (bad) jns (bad) xchg insb loopne xlat mov add rex.WR std loopne scas fmulp sbb (bad) mov lret pushfq mov (bad) jl rex.X cs (bad) jbe clc mov mov cwtl lods int3 cmpb (bad) ds push cmc fadds lret vmovss pushfq xor push (bad) movabs popq cmc (bad) roll mov loopne movabs scas movsl (bad) (bad) xor mov xchg pushq xor sar loopne,pt and sub (bad) retq xchg jl out stos jle mov xor cld xor add rex.B rex.RX add out mov adc (bad) test int out retq scas jbe loopne mov sub loopne xchg and mov rolb repnz (bad) jne push xor sahf jmpq mov test movabs out adc xchg jmpq in mov test int sbbl scas xchg cmp loop adc (bad) sbb rex jrcxz cld (bad) fbstp pop pop xor loopne sub rex.XB jae loopne xor rex adc mov sub pop fmuls in enterq sbb mov and scas in es lahf popq gs sub test sbb stc in movabs (bad) out push in fcmovnb movabs cmp push jns and cmp lock pop add movabs push lret mov mov out cmpsb sbb xchg (bad) (bad) or clc movabs icebp imul rex.RB (bad) add lock jae out cmp cmpsl test imul jo xor (bad) jne (bad) (bad) xor enterq (bad) (bad) mov (bad) retq sbb (bad) cli (bad) scas fwait (bad) (bad) loopne je and mov movsl xchg movslq std pop xor loopne sub in mov xchg (bad) repz jne push jmpq or rex.WXB fs dec in add mov (bad) mov pop pop movabs imul (bad) loopne movsb rex.WB cli mov callq rex.WR push (bad) loopne imul in mov retq loopne pop jp (bad) cmc rex.WXB push rcl out push out mov add and push and rex.WRX (bad) jmp neg lock pop adc lods jge loopne fisubrl fneni(8087 adcb cld mov ss clc or rex.WR sub loopne add sarl rex.WXB add pop pushq loopne push movabs sub (bad) fcmovne cmp jo incl xchg int3 jmpq lret in (bad) (bad) (bad) xor out stos jmpq rex.X and mov movsb or loopne or (bad) xor or stos loopne jne jp adc pop mov sbb loopne cmpsb in cli cltd sti repnz (bad) (bad) cmp (bad) mov in loopne add sarb adc push movsl rex.W pushfq add mov movabs loopne cmp adc sbb callq push leaveq fnstcw (bad) (bad) loopne cmp mov loopne (bad) loop (bad) mov test clc (bad) pop xor loopne lock fiaddl ss xor adc cltd xor xor pushfq cmp movabs jb (bad) callq adc mov in or ss test cmpsl xor pop sbb sub push icebp or sub jmpq lret orb adc (bad) xor lock hlt stos in rex.RXB (bad) cld (bad) rex.R jrcxz (bad) mov or (bad) lods mov (bad) sbb rex sub js mov (bad) cmp loopne (bad) rex.XB test fcmovnbe (bad) (bad) jbe mov push jg pop sub (bad) (bad) loopne int fiadd movabs adc in movabs push or (bad) rex.RX fcomi mov (bad) callq mov xchg jge (bad) movsl clc sbb imul sub hlt or pop (bad) (bad) cmpsl cwtl sar iret adc (bad) in and (bad) movabs adc and push and imul lods cli imul loopne cmp cld cmp fdivrs add loopne,pt push cwtl test insb (bad) rex.WRX mov mov scas jb lods (bad) repz (bad) int mov sti push in data16 outsl (bad) cmp rex.WRXB repnz or idiv cmp movabs mov divb pop cmp (bad) rex.WB (bad) loopne shlb cwtl (bad) lahf je in mov (bad) rex.W mov mov add rex.WRX dec sahf sub movabs int3 loopne movabs lock sub xchg mov cmpsl rclb (bad) outsl pop push adc loopne xor mov sbb adc loopne test in lret loopne adc in lods cmp (bad) loopne (bad) mov mov mov mov lret sbb pushfq mov cmp push mov lods adc (bad) sub sub jmp adc rclb rex.WRX movabs lods (bad) (bad) cmp add (bad) (bad) cmp (bad) scas rex.R addr32 sub movsb int fcmovne lock xor mov jno and insl (bad) in iret (bad) sarb outsl adc lea pop (bad) movabs jmp out roll pop (bad) scas sbb lahf lock outsb popfq in ds ja cmp retq xchg mov jp add add in pop xchg fwait push lahf gs mov leaveq notl cmpsb repnz (bad) movslq (bad) iret shr out mov shl (bad) xor loop (bad) xchg movabs cmp lods pop xchg callq sub rex.RB (bad) rex.W push rorb xchg and or and jo sbb rex.WX adc in sbb jmpq lret fist loopne xchg outsb (bad) pop xor (bad) fsubp rex.WXB rex.RB fnstenv jo adc test sbb shr and stos cmpsl mov (bad) loop (bad) jle mov mov xlat jge fucomip fsubrs lret fisub (bad) mov mov sub adc sti jo insl mov jle mov push pop decb in mov jae out (bad) (bad) lea and stc cmpl in lock add movabs adc (bad) (bad) (bad) cmp add jmpq mov xlat cmp jo adc (bad) jns cmc adc sbb lods in (bad) lahf jge enterq loop jrcxz lretw je imul (bad) movsb rex.WRXB jmpq jne shrl sbb outsb sahf out (bad) jo lock rex push jg in lahf pushfq xor rex.RB xchg repnz fsubr mov subl jno sub cmp jns adc jbe loop out (bad) xor fs adc callq and icebp (bad) jb rolb sbb cmpsb leaveq jl pop (bad) movsl pushfq dec stos rex.WRXB and sub movabs jo nop stc xchg cld (bad) xchg (bad) fild (bad) (bad) retq movsb loopne fidivrl rex.WR iret popfq stc jp cmp push rex.WRXB mov lods stc sahf rex.WRX imul (bad) loopne retq push adc mov (bad) jp fistpl or add adc negl loopne xor rex.WB icebp cmp mov rex.B jns (bad) data16 jmpq in movsb callq loope xchg mov and mov loopne jmp jne adc rex.WXB (bad) rex.WRX repnz xor loopne (bad) retq pop jmp loopne mov cmp sarl xchg jnp rex rex.WX or loopne (bad) sbb out mov rex.XB gs (bad) cmp jb retq repnz cmp loopne mov outsl cltd (bad) loopne insb rex.WR mov fisubrl add push fucom movsb or jbe lock and jmpq je outsb and pop loopne sub and xor retq cmp movabs push in stos shrb fwait loopne jo jne (bad) mov test (bad) icebp (bad) rex.XB pop add roll or (bad) movabs rex.W mov loopne jg (bad) mov mov adc lods nop fsubrp loop lahf xor push in mov mov xchg jo es loopne and xlat mov cwtl pushfq movabs loopne loope xchg pushq and jae mov pop icebp (bad) mov mov je xchg xor fadd lods loopne rex.RX add js mov shr (bad) inc (bad) in mov or pop loopne (bad) insl imul loopne icebp (bad) lea jb jrcxz (bad) or pop incl pop outsb jl and loopne lods pushq retq jno pop and add and loopne test (bad) (bad) (bad) loopne data16 push jp rex.R xchg rex.B gs mov loopne int3 pop rex.WRB scas rex.WR movabs mov fnstsw xor movabs cltd cs push add shl fs stos push sti jne loopne push xchg (bad) stc movabs adc loopne add cld loopne stos (bad) rex.RX pop scas rex.RB shrb or (bad) outsb mov jb fcompl adc shlb insb cmp add notl movslq (bad) or je pushq lret loopne mov lods add loopne push leaveq adc sbb or (bad) mull mov (bad) jp (bad) push loopne sub mov in sbb sbb adc add mov movsb lret clc (bad) je rcrl loopne mov xor xor data16 sarl orb jg js rorl and mov test dec scas (bad) adc sub rex.X imul (bad) in mov loopne mov jg popfq (bad) loopne adc jrcxz out mov mov and loopne (bad) (bad) mov retq cwtl xchg leaveq es jg rex.RXB fistpll rex.WXB shl pushq xlat cld js out out movabs sub scas add rex.WX rex.WR and mov inc (bad) sbb push cmp jb jne shlb hlt loopne rex.X gs cltd pop jno sbb (bad) rex.WB lahf test mov or sub and jo cli rclb (bad) enterq mov fs retq in rex.B rex.RXB rex.RXB adc js shrb adc int3 jmpq xor sub mov loopne (bad) addr32 add mov (bad) mov cwtl ljmp ja in sbb xor callq cmp js cmp mov or cli pop (bad) repnz (bad) cmp shll movsb (bad) xor and pop enterq (bad) (bad) jmpq and pushfq sar loopne retq rex.WX mov out add xchg loopne rex.WXB psllw fs push rex.WR outsb movsl jg or iret xor insl in in xor jo jp mov (bad) jnp (bad) adc nop in mov sub iret pop (bad) imul test xor cmp shrb jg cmp jrcxz rorl je sbb sub mov sub add cmp in xchg in cltd ss imul sbb loopne pop pop (bad) movsb and stc pop (bad) (bad) or mov sahf out and xor jge loopne and mov jnp imul leaveq xor (bad) loopne movabs fidivr (bad) jmpq adc (bad) rex.RX addr32 (bad) (bad) (bad) sahf test sub shl mov xchg clc scas push add jno icebp movabs (bad) icebp rex.WB js jbe loopne cmp push rclb data16 repz jno mov loopne xchg or rex.RB jns loopne mov lret mov repnz gs or fcmovb jmpq fs (bad) push rex.WB rex or (bad) (bad) cmp xor fsub rex.WX cmp loopne leaveq mov stos jge in (bad) mov pop add xchg stos mov in sub fucom adc (bad) (bad) movabs mov xchg adc cmpsl outsb push vpmovsxbd sbb loop and addr32 push (bad) pushq repnz sbb (bad) scas cmovle xor sbb lods adcl adc rex.WR bnd jne and gs stc leaveq jge jae xchg loopne mov pop xor mov jp adc jnp mov xor loopne adc push jne (bad) sbb xor out xor pop (bad) loope add (bad) jmpq cmp lret mov retq sbb jmp mov (bad) loopne mov repz and sub (bad) jmp jno roll jle cmpsb xchg loopne (bad) (bad) mov pop (bad) jl fmul mul cltd add sbb pop es fist cld movabs movabs (bad) (bad) rex.WRX lahf cmp loopne loopne fdiv mov (bad) (bad) xor js add push or shrb in shll jb loopne push cmp cmp cli and mov loopne int3 adc and pop push fs (bad) lock jb loopne adc loopne pushfq add insb (bad) cmpsl (bad) loopne imul and adc rex.RXB cwtl mov jrcxz fs mov mov leaveq mov repnz push shrb mov addr32 (bad) pop insb mov in sbb xlat movabs push pop out scas adc xacquire mov gs loopnel mov int3 test xor loopne mov stos rex.X repnz xlat push (bad) mov loopne imul addr32 rex.WRXB adc std in in cld mov or rclb mov movabs pushfq xor cmp lret (bad) (bad) xchg movslq fwait (bad) (bad) sbbl mov jp lods (bad) adc sub shlb rcrl lods and loop and mov scas icebp callq (bad) mov pushq (bad) in xor (bad) cld sbb rex.WXB xor (bad) (bad) stos sub enterq in pop or pop icebp imul rex.WR movslq (bad) cmp jo cmp adc rex.WXB fwait rex.WRX rex.XB mov mov lea addl faddl mull sub cmp ror mov mov rex.XB or mov sbb repz mov (bad) xor data16 rex.XB jle ss mov jne jmpq mov sti pushfq add in mov (bad) jge loopne xchg rex.RX repnz scas fwait sbb and movabs jmpq mov jrcxz movabs testl pop sbb or (bad) jmpq cld lods movsb and mov icebp test cmp pop out (bad) loopne sti jmpq in loopne or repz mov push mov add jno sub and (bad) pushfq xchg jp adc mov movabs sbb jno mov negb (bad) loopne xchg test adc (bad) loopne sub enterq loopne rex.B xor fcmovnu sub loopne (bad) sti ss sbb rex.R outsl xchg cmp rex sub and lock leaveq rex.XB loopne add sahf movabs sub rex test jnp mov shlb sub sysenter (bad) (bad) adc loopne rex.R movslq loopne (bad) in sub loopne mov (bad) jnp xchg loopne xlat (bad) xor sti fcoms pop pushq out adc sbb (bad) outsb or out fsubs pop rex.RXB retq loopne mov fidivl rex.WRXB (bad) gs mov cmp lods ss jbe mov loopne push cmp (bad) push rex.XB outsb incl sub jp sub lcall int xor or shlb (bad) xchg rex.X ficoml (bad) mov adcb test insb jnp movsl enterq xchg nop loopne (bad) jmpq and mov rex.B rex.WRXB and pushq adc pop test rcrl decb loop jmpq adc (bad) jle loopne movsl or jbe movabs rorb insb ljmp xchg add hlt in push mov (bad) (bad) pushfq (bad) fcoml adc jae int3 pop jo loopne (bad) fwait mov rcl int3 loopne lret scas rex.WXB rex.X rex.WR sub loope sahf (bad) sub out pop rex.WRX mov stos jmpq rex.WXB ficom movabs rex (bad) repnz add ja loopne out jno (bad) pop insl or pushq sbb sahf xchg subl or xchg loopne sbb sbb sbb cld movsb cltd add stc subl mov loopne jmp sbb pop (bad) loopne mov insb (bad) retq rex.WRX in clc push in xor adc lods cmpsl xchg pushq mov fisttp out (bad) xchg pushq (bad) pushq mov rex.XB xchg sub adc push pop lret test cmp push rex.WRXB pop clc lock loopne fwait rex.XB out adc loopne in lods add sbb (bad) out movsl xor mov shll rex.B mov (bad) mov adc movsl rcr and mov nop mov lock jne mov sub fildl fnsave (bad) sbb pop nop push hlt (bad) sub pushfq icebp clts (bad) jmpq add add scas push lret subb (bad) (bad) shl jnp push push (bad) adc push rex.RXB loopne int mov loopne clc pinsrw retq sub or (bad) mov lods hlt loopne xor (bad) push jae mov out (bad) (bad) fistpl jle sub jo sbb loopne or ss rex or leaveq mov and push popq push idivl push xchg cmpsb add out int jae loopne fbstp leaveq loopne cmp (bad) mov test jnp scas xorb rex.RB mov jg xchg stc imul test incl stos xlat fisubl loopne mov sub retq mov mov rex.WB loopne xchg scas repnz imul lods sbb outsl cmpsb add and jbe (bad) rex.WXB jle mov ss pop (bad) scas loopne adc callq loopne rex.W rex.WXB mov jne clc callq icebp mov add gs pushfq jo stos shr fimull and jbe mov add cs (bad) mov and jne or pop rex.RB or sub icebp int add loopne mov cmpsb xchg (bad) repnz (bad) cmp icebp sub int3 loopne mov repnz fdivrl rorb mov or gs retq rex.WRX (bad) icebp (bad) sub mov loopne and jb repz loop sub mov (bad) mov retq sub xor in mov mov lcall cmc int3 sub jmpq movabs adc and lahf fildl callq lods mov popfq mov (bad) mov rex.R and xor xor (bad) loopne (bad) rex.WX adc xor movabs fwait rex.WXB (bad) sbb (bad) pop (bad) or shl add (bad) rol mov add scas sub rex.RX (bad) fidivl (bad) jnp repz (bad) fwait mov fsubl loopne xor in fmuls cmp add pushq sbb shlb loopne fs enterq loopne xchg fnop (bad) jmp (bad) push cwtl fnstsw mov sbbb imul insl sahf sbb cld rex.RXB stos sbb sbbb (bad) (bad) lea mov (bad) and (bad) pop fdivrs sub retq loopne (bad) fld setns fisubr loopne cli (bad) hlt repz es or fstpl and gs jbe loopne jno negb cld (bad) loopne jb adc sbbl rex.WXB add and insb (bad) sub mov (bad) cli xorb loopne mov repnz cmp jle (bad) mov lret add xlat movlps cld mov dec imul shrb jmpq mov fwait clc cwtl pavgw rex.WRX shll xchg sub sub mov fstp retq (bad) sbb enterq push cmp pushq sti (bad) rex.WRB pop sar out pop subl lock fld insl lods adc cmp rex.X add jnp movabs shl retq rex.R add sub adc xor enterq rex.WRXB jo mov out lret iret callq loope xchg rorl cmp push (bad) cltd xchg jo lea outsb add pop fildl jnp and lret js add cmpsb movabs cmp ficomp shlb (bad) orb xlat retq (bad) in insb loope frstor add pushfq out leaveq (bad) xchg or (bad) (bad) push sub adc popfq and shrb ss leaveq xchg and jmpq (bad) (bad) pushq scas adc sub (bad) pop (bad) (bad) add rolb push xchg (bad) sbb xchg pop orl mov sub clc icebp (bad) cmc rex.XB mov rex.WRXB sub (bad) pushfq out js fadds jrcxz xor and adc movl sbb and (bad) lret sub mov sbb sub sbbb lahf or add (bad) jg out popfq pushq rex.R mov xor and sbbb pop rex.WR repnz and (bad) push and stos rex.WRX lock retq enterq sub jle cwtl cld movsl mov adc movabs lock (bad) (bad) (bad) mov scas (bad) (bad) movsb insb mov movsb mov sbb (bad) and mov insl jge push (bad) clc cmpl (bad) jb mov xchg repz stos cltd push outsl jmp rclb (bad) test gs (bad) jg jae (bad) xlat imul sub (bad) mov cmp sbb jl (bad) jnp xor adc test popfq addb adc cs movabs sbb movsl rex.WXB add movabs fnsave mov movabs adc jo pushq xor icebp (bad) movabs mov movslq and (bad) jns enterq and addr32 clc adc pushq rex.B jo in xor ds pop out xor (bad) in mov movabs (bad) add rex.RXB xor rex.WR (bad) icebp xor rex.RX jl mov cmc rex movsb sub bndldx (bad) cmp or std adcl clc jmpq test leaveq jne fistpl scas (bad) mul (bad) (bad) in movabs xor (bad) clc out (bad) out pop fs add imul mov mov jrcxz push movsl xchg clc cmp cmc sbb xor cmpl enterq mov rex.RB es shl pushfq leaveq ja mov mov adc adc and xchg or lods and fnstenv cwtl fmuls outsb add imul adc shrl js fldenv clc hlt rex.WRXB je ficompl xlat mov int3 (bad) int pop rex.B sub adc mov pop retq mov scas fiaddl movsl rex.WR add xor lret mov shll (bad) (bad) (bad) movsb out lock (bad) jrcxz vmread lods sti shll sub add fcomip mov inc mov fs (bad) push movslq movslq sub ljmp (bad) loopne sub mov pop jns jo (bad) rex.W jno (bad) repz cltd (bad) (bad) xchg cmp insl sub pop adc sbb int cmp addr32 cmpsl retq ja xchg es cmp sbb xchg cmp (bad) loop movabs stos sbb in (bad) cmpsb cld sbb sbb and mov andb push rex.B fsubrp xor int rcrl insl loope xchg (bad) mov (bad) movabs push push sarb jge xchg (bad) sbb je cmpsl (bad) adc and hlt (bad) int3 ds pushfq jns adc jle mov (bad) incb out and (bad) rex.RB cmp callq nop add fisubrl repz lahf (bad) cld mov (bad) ds shll in or push addr32 popfq (bad) movabs (bad) pop nop jb fidivrl int rex.RX repz adc and ds and (bad) (bad) sbb fsubr insb (bad) mov scas out adc je (bad) nop fisttpll rex.WRX push jbe sub cmp int3 test add fs jmpq mov push outsb incb cli pop sub xchg out jae adc (bad) in xor jl and callq gs mov jge mov rex.WRB rex.WRXB jae or and (bad) out scas (bad) xchg jo icebp stc mov and pushfq mov add push js (bad) sub (bad) mov test repnz xchg add fstpl jae insb fs int3 hlt mov pop rex.WX adc (bad) jmpq rex.RB rex.WR jne fnstcw rclb xor jnp fisubr mov ss ja adc out fisttpl or ds xor pop in jb jo (bad) icebp data16 mov lahf (bad) in test test (bad) lahf xor or loopne mov (bad) loopne (bad) paddsb xchg loopne repnz (bad) adc ror hlt and loopne shlb sub jns lret sub loopne (bad) or (bad) stos test rex.WRXB fs fimull loopne stos out (bad) add insl shl adc jae test rex.WRXB sbb fneni(8087 loope repz retq push (bad) jmpq sub pop test out jns iret (bad) cmp mov (bad) (bad) faddl rex cmc jmpq pop movabs xchg or (bad) loopne and push loopne jrcxz,pn scas or (bad) pop cmp jbe loopne rex.RB outsb test rex.RXB (bad) jnp je sub sub xchg sbb jne sub (bad) xor (bad) int3 (bad) (bad) mov sub pop outsl mov and retq loopne mov xlat (bad) loopne outsl adcl mov jo movabs rorl pop adc push rex.RX jg mov jo shrb sub adc rex.WRB sbb xorl (bad) fist xchg cmp or cwtl (bad) mov out sub test sti (bad) rex.R (bad) mov test lods (bad) loopne fnsave xchg cmp (bad) pop or nop ficomp lret pop nop jno mov xor mov (bad) xor movabs and jle mov jne rex.RB push jbe jb ss div or (bad) clc sbb jp (bad) sysenter pop and jg ss callq sbb (bad) rex.XB mov cmpsl xchg int3 rex.B in xchg in jge in sarb retq mov movabs xor xor adc cwtl gs (bad) scas in mov mov or and (bad) out popfq test gs push (bad) cltd adcl insl rex.WRX out rex.WX movabs or jno mov rex.X fdivr cld adc icebp pushq adcl test rex.B lret rex.RB scas lods movabs push pushfq sahf sahf cmpl and jge (bad) (bad) adc outsb cmp mov push out jrcxz cmp repz lock rex.WRX and cmp rex.RXB int in jrcxz repnz xor (bad) test push mov (bad) clc push movsb callq js leaveq push addr32 es push (bad) and mov in sub sub xchg rex.WRB jb (bad) (bad) adc xor jno mov or sub fwait jp cmp out and rex.WR pushfq outsl enterq mov shr sti mov rex.WR xchg add (bad) jnp test and scas mov iret lods and jmp push adc rex.RX (bad) mov sub cmpsl add jge cmpsl (bad) (bad) mov rex.W cmpsb (bad) (bad) xor (bad) rex.RX lock pop lret or movsl mov (bad) je rex.WXB adc retq push jrcxz lahf mov lods test int3 orl adc cld loop iret jle loope (bad) (bad) rep xchg rex.WXB mov movabs mov rex.RB or ds imul icebp in popfq xor jle insb or xchg test xlat jmp vpsubw rex.RXB rex.RX movabs sub or movsb insl add insb rex.B loopne rex.WRX repz mov jae fsubrp fstps retq add push pushq mov movabs (bad) and mov jns enterq rex.WX or insw pop out sub (bad) psubsb lahf xchg (bad) push (bad) leaveq retq pmulhuw insl in lods (bad) sub rex.WB shlb xor (bad) movabs rex.WRX repnz pushq ror (bad) mov movslq jl adc mov ja (bad) fstpl (bad) rex.WXB lods es (bad) mov (bad) out jge mov test and or (bad) rex.B cmp rex push retq jb sbb (bad) fldcw outsl (bad) stos test fs movabs (bad) xchg (bad) ja (bad) (bad) xchg out add cmp or pop loopne xor stos or in addl lods not mov sub insb insl pushfq mov loop xchg or mov mov test and mov (bad) mov (bad) hlt xchg (bad) adc cmpsb lahf std jrcxz jmpq cmp cmp outsb push mov stos xchg in retq lock mov cmc lret cltd jns adc push cwtl test push lock xor (bad) bnd mov jno pop jg (bad) ficoml xchg (bad) out jne jb or out rex.WXB mov push out (bad) pop (bad) mov sub and xchg adc sti or (bad) push (bad) hlt jbe sub (bad) andb addr32 loopne push sbb fstps callq rex sub mov mov retq cmpsl cld mov and (bad) loopne adc or jmp ja jne pop (bad) (bad) movabs sbb mov repz pop in and notl (bad) or loopne stos rcrb sbb movsb gs imul and loopne sub mov push (bad) loopne mov (bad) cmp movabs pop fisttp cli and movabs jmp sbb sub lods imul fnstsw adc add pop loopne (bad) sub cld scas (bad) sub out insb xchg rex.RXB cmp jnp and addr32 jle xor rex.XB insl retq loop lock je cmp iret cmpsb int3 pushq jmpq rcrl punpckhbw outsb and sti pop test jnp mov (bad) out (bad) (bad) fcmovnbe orb (bad) (bad) movsb imul out std out mov imul jmp and or rcrb stc adc (bad) loope stc jp cmpsl (bad) sub rex.WXB mov (bad) (bad) fcompl (bad) outsb push rcrl rex.WRX mov mov sub mov fsubrl lods shlb cmp mov or nop (bad) adc adc (bad) add jnp mull and add mov jo clc movslq (bad) fidiv (bad) pushq xchg (bad) loope lods sub xchg rex.X subl addr32 jmpq xchg enterq loope leaveq (bad) and (bad) lret loope int rorb gs imul and fbld callq (bad) (bad) and sub popfq stc push (bad) rex.WR icebp xor test xor insl and pushfq mov lock rex.X (bad) movabs out or add (bad) sarl (bad) (bad) je in rex xor addr32 fdivrs cwtl pop jge mov mov rex.WX callq mov add xorl lret adc sub mov (bad) es cli rex.WRB mov (bad) pop rex.RX xor (bad) es loopne jb cmp mov or or cld mov pushq pop xchg jg rex.R ja in add sub mov adc retq lret adc nop stos (bad) adc xor push cmp (bad) movabs adc gs fsub xor rorb adc sbb (bad) pop je out (bad) add jle (bad) pop int3 (bad) push xchg loopne pop lods lret jns popfq test movsl loopne in sbb (bad) ljmp mov mov callq cmp sbb int3 cmpsb rex sbb xchg mov scas sbb jno jae loopne mov xlat callq xchg cwtl cmc fcmovbe mov push ja mov movabs sti jmp (bad) jmpq fadd test loopne insl rex.B mov loopne mov sahf leaveq loop (bad) jle imul movabs xchg (bad) xchg adc mov xor adc std rex.WX (bad) cmp movabs rorl loopne cmp fucomi std (bad) (bad) movsb xchg mov lods xchg test repz sbb sbb popfq loopne cmp xor in and cld mov rex.WB cmp retq cwtl out cli nop sbb in adc xor adc sub xchg rex (bad) out (bad) mov cmp sub (bad) (bad) xchg mov and add rex.WRB jne cmp in add xor loopne or (bad) pop add (bad) fisttpl lods and clc loopne pop xchg jnp movabs icebp lret add rcr rex.R (bad) loopne add icebp loopne rex.X insb pop xor icebp jo lea adc push je mov mov add rex.WRXB (bad) loopne pop rex.WRX rex.RB adc mov in insb lcall fneni(8087 jno pop rex.WRX mov (bad) rex.RX mov movabs int neg test mov sbb (bad) hlt movabs rex.WRX in pushfq pop cltd test (bad) rex.X cltd icebp insb sbb loop rorl scas rex.WX loopne sub rex.WR push lods imull pop add or xchg mov push and rex.WRX fwait jnp rex.B out fistpl adc in leaveq and (bad) jmpq icebp jns (bad) sub and sbb and ss fcmovnb lahf jmpq in pushq pop xor sbb mov mov and rex.XB lock jo mov out mov jbe leaveq sti or fiadd rex.RB cmpsl xor fisubrl xchg cmp insb mov loop or xor sbb sbb fisubl (bad) imul and cwtl in lods fcomps xor (bad) (bad) lahf sbb and repz rex.RB movsb fwait repnz (bad) cmpsb loop jns pushq rex.RX xor loopne gs (bad) scas (bad) loopne int3 ja (bad) fstpt (bad) std rex.WRXB xchg xacquire jrcxz int mov loopne cmp lret stos (bad) in movabs loopne enterq psubd (bad) sub (bad) fsub in mov jo cmp push push adc xchg int cmp sti sub addr32 sbb fistl (bad) fisubl fdivrs lods rolb in cmpsl scas loopne jns jl jrcxz push loopne xor or loopne and or sub shl jo (bad) mov loopne jmpq or (bad) mov movsb (bad) out in jl and jb movabs push and lods icebp (bad) jp jo xor (bad) xlat jne retq add cli lret pop test in loop hlt iret fdivp stos loopne (bad) int3 (bad) lock std and lea in and out sbb adc (bad) jb and cmpsb in rex.XB rex.WR (bad) imul (bad) movsb loopne shrl (bad) stos adc jne mov (bad) (bad) mov push xor and rex.WRX push fwait cmp jg adc negb lret xor (bad) or int3 out push cmp pop lcall sub rex.X (bad) (bad) jbe sbb push outsb mov jne cmp test rex.WX (bad) cltd xchg sbb bnd cmp outsb sub sub loopne (bad) mov lahf lods out and rex.RB rex.WB stc loopne insb movabs mov rex.RXB (bad) or cli sbb cli mov add jmp stc in xor rex.RX cmp out fs cmp incq mov jmp rex.RB out hlt loopne je sub jle and out (bad) mov test es (bad) imul (bad) mov loopne sti in mov loop (bad) mov cmpsl out (bad) callq out xchg mov (bad) xor in add outsl or pushfq gs sbb rex.RXB push decb (bad) mov and (bad) jp movsb jle mov stos (bad) gs (bad) loop mov mov sbb ficoml insb jmpq (bad) in mov rex pop sar hlt js stos roll adc insl and add cltd cmpsb cmc jg rex.WRX sbb and out clc sti stos (bad) (bad) clc jle xor movsb decl retq cmp addr32 hlt (bad) iret (bad) in pushfq (bad) loopne mov test loopne sti (bad) add lahf mov lea sbb add icebp sbb pop out je adc (bad) cmp xchg (bad) loopne mov pop loope callq lret sti frstpm(287 jmpq fnstenv fwait jne cmp popfq rex.WRX xor (bad) mov test pushq pop xor pop repnz jmpq cmp (bad) loopne (bad) xlat callq mov xchg movsl jle mov rex.WX repnz push cld rex.R loopne rcr (bad) mov (bad) fild fwait cli and add cmp mov sub cmovb xor insb rex.WR jo rcr int3 (bad) in and test loopne mov lret mov fstl jg xchg out add rex.B mov xchg pop push adc xchg and mov push enterq fsubrp rex.W and icebp add pushq fnstenv rex.XB sub cmp mov mov xchg scas rex.RXB jg callq (bad) push mov jbe push mov mov pushq rex.WR push push and (bad) cmp mov jecxz cli (bad) in lock push out xchg out out mov popfq xchg insl jl xor imul xchg sbb cltd sahf mov test mov (bad) (bad) subb imulb popfq in jle mov out jge mov (bad) (bad) cmp or pop bnd sbb in (bad) ds sahf adc loopne jle sbb test insl (bad) popq jmpq jmp (bad) jb add jl mov (bad) sarl or add in loop loop rex.RB sub nop xor lahf mov sahf and add rex.RB sbb xlat adc pushfq push out andl addr32 lret mov (bad) (bad) addr32 rex.WR or jle (bad) in cmp loop or xchg out jno mov insb lods pushfq and retq repnz sub (bad) sbb pushq rex.R rex (bad) scas and sub movabs jle loopne (bad) push cmp cltd loop sub adc loopne cmp pushq jge mov rex xchg (bad) cmp movabs mov ss gs loopne xlat std in rorl xchg retq sub (bad) repnz int3 (bad) mov movabs xchg insb loopne cld jrcxz,pn add lods jmp loopne rex.X mov xor push callq data16 scas cmp in jle jrcxz sub cs fildll pushq (bad) lea sub (bad) mov data16 movslq mov (bad) fnop or or insl jnp pop sbb shr icebp js push jg mov (bad) pushq sarl (bad) push push hlt mov (bad) lock sbb (bad) (bad) mov (bad) mov pop cmpsl jl int callq (bad) mov xchg and (bad) add (bad) jo lods decl and scas jle cmpsb movsb pop movslq cli jg adc (bad) mull (bad) (bad) mov test enterq out adc add mov gs rex.XB pop mov ss (bad) rol rex.RX movabs adc sub loopne xor sbb fwait xchg adc movabs pop jge,pn gs jnp movsb loopne jle mov (bad) outsb pop jo cmc fs int3 loopne xchg mov sbb sbb xchg add clc cmpxchg sbb sbb movabs movabs cmp callq jrcxz (bad) rex.WRB (bad) loope (bad) (bad) pop test xor or mov mov loopne mov movabs and (bad) in add (bad) mov out sub insb or icebp lret rex.WB push rclb add or lods jg gs cld (bad) movsl lret sbb (bad) loope retq rex.RXB sbb (bad) out lock jg or loopne rex.WRB add pop xchg xor mov movabs fisubr test rcrl xchg insb enterq rex.WRX xor loopne sub mov mov (bad) icebp or sbb mov in jae (bad) (bad) (bad) xor adc out (bad) adc or add lahf jmp xor loopne xchg movabs popfq xor fmul loopne clc mov faddl (bad) loopne sub cli in rclb rex.WB and insb (bad) jmpq xchg add sub (bad) (bad) add pushfq outsb cli push xor enterq xchg xor (bad) sbb fs mov xor insb add adc not (bad) mov jl rex.WR hlt (bad) xor jge (bad) cmp (bad) (bad) in mov movsb (bad) push mov sahf pop and jne (bad) (bad) movabs cmp mov stos xor (bad) (bad) movabs movabs pushq (bad) jge cwtl (bad) xchg outsb sahf js loopne getsec hlt (bad) xchg loopne cltd mov (bad) stos (bad) loopne stc jmpq xchg cmc xor callq loopne out imul cmp (bad) int (bad) loopne jg (bad) pop add jne rex.W jge shrl cmp loopne xor mov loopne sbb jne xchg pushfq loopne mov rex.WX sbb (bad) jg insb out adc jns fsubrl add sbb or pop jrcxz xchg rex.WR int3 and movabs mov icebp mov movslq sbb pushq rex.RXB test loopne es outsl movsb outsb add (bad) movslq xchg rex rex.WX rex.WXB cld or punpcklbw xchg loopne pushq push jl (bad) xchg add test cld imul mov (bad) and gs movsl loopne outsb cmpsl mov andl nop add (bad) mov (bad) (bad) and (bad) pop sbb xlat out cmp xlat adc nop outsb loopne cltd lods rex.X data16 sar and test adc jo lods mov (bad) jb (bad) (bad) rorb and adc pop (bad) clc adc movabs jno mov xchg sub pushfq jp enterq loopne leaveq cli mov xchg loop adc rex.RX ss jmpq adc cmp std (bad) add enterq (bad) xor sub cs fnsave (bad) and stos loopne push pop mov rex.XB setno pop xchg push (bad) adc (bad) icebp movl sahf sti and pushq rorb loopne (bad) xor push rex.WXB loopne (bad) xchg cmp clc or rex.R imul adc rex.RX pushq loopne rex.WB adc (bad) push loopne (bad) mulb callq es rex.RB (bad) adcl leaveq jae not and jnp out je rex.WX sub (bad) (bad) sbb loopne jl push jns rex.WRX in and xor push jmp sbb xor add adc rex.RX hlt mov out (bad) mov callq jnp xchg jrcxz pop and test jg rex.WRB rex.WB add (bad) movabs xchg xchg mov rex.R rex.WRXB xchg loopne mov rcrb (bad) rex.WB lock repz rex.R insb add nop mov and fnstcw lock rex.RX cmp (bad) loopne (bad) xor and fwait push xchg movabs movsl pop sbb loopne sarl fldt out (bad) mov (bad) rex.WRXB and (bad) adc jb add xchg ficomp jno lock jb sti (bad) (bad) sub enterq xchg pop retq retq push jmpq (bad) loopne lods scas fnop test gs jo jbe sbb and shrb cld test imul cmpsl retw xor push (bad) (bad) notb adc lea movabs test xor shl insl stc mov and test (bad) in cmp rex.RB jle (bad) (bad) mov mov loopne (bad) (bad) xchg je xchg es ja cmpsb fwait mov ljmp (bad) mov push sbbl movabs mov int3 or (bad) (bad) je movabs and and loopne xchg (bad) pop pushq cmpsl lret jno (bad) or std sub adcb movsb retq xlat (bad) (bad) or and mov cmp xor and mov lea push jo sub (bad) jnp scas rex.RXB xchg mov push pop fs jl (bad) push retq mov movsb sbb mov add add xor loopne jns push add (bad) loopne shlb push (bad) cmp vcvtps2pd mov sub outsl (bad) rex.W (bad) mov out sti xor fdivs mov and loopne rex.X fmull cmc or ficom sub ss xor sti loopne rex.WRX rex.R clc cli outsb sbb mov stc cmc addb loopne sar pop out xor loopne callq fdiv loopne imul (bad) xor fstpt rex.WB sub (bad) or negl and add (bad) mov mov xor loopne data16 rex.WX push loopne rex.RXB (bad) push sbb js (bad) rex.RX (bad) pop loopne cmpsb jo push fadd xchg jrcxz sub sbbb mov push jae (bad) rcl (bad) decb iret cli push mov stos shlb lock (bad) (bad) out (bad) fxch rex.WXB and outsb mov out int3 cmc movslq mov sub xor sbb psubusb sarl sbb cmp sahf cmpsb mov mov (bad) leaveq (bad) lods adc cmp outsl movsl pop mov push (bad) jmp (bad) fidivl add rex.WRXB sbb scas cmp retq testl add mov rex.WR retq repz (bad) loopne mov fs callq rex.RB xor (bad) fsubp test in repz adc pop retq cld (bad) mov rex.WRB loopne push (bad) jg xor mov and push rex.WX loopne pushq jp sti pop mov imul add adc rex.WRX loopne xchg lret loop jbe shll cmpsl loopne mov ficompl (bad) in xor sub or hlt lods jge out pop retq (bad) lock ja in pushfq repz rex.X loopne push xor loopne (bad) (bad) (bad) adc (bad) xchg pop (bad) sub rolb adc (bad) mov in (bad) loopne mov sbb jo test ficoml stc in and loop hlt addr32 (bad) pop jno cmpsl rorb mov pop sub jmpq cwtl fs xor (bad) (bad) fidiv and rclb (bad) (bad) icebp (bad) shl rclb faddl (bad) (bad) cs (bad) sbb jp add jge jo and clc shll pushq or jmp enterq rex.WRX sbb cli (bad) pop sbb cmp ja (bad) or je (bad) jg,pt (bad) sbb add lock rolb mov movabs iret (bad) mov enterq (bad) out rex mov (bad) push jge rex.WXB add add retq push je sbbl in insl rcrl (bad) rex.WRXB adc (bad) sub (bad) jo cs (bad) movslq lock hlt xchg iret rex.WRX clc (bad) cmpl or je cmp jrcxz sub rclb movabs push retq (bad) js insb jnp in (bad) sub (bad) push xor repnz xchg cmp (bad) test insb jmpq fsubrl jp pcmpgtb lods mov subl jb pushq sbb imul push out rex.WXB jb (bad) xlat (bad) jae rex.WXB in incb or ror push hlt or xor push rcll nop addr32 sahf mov popfq (bad) lock jp insl (bad) adc rex.RXB rcrl mov rex.WX rex.W retq lods out movsl jge leaveq cmc (bad) jp movabs mov (bad) add (bad) out notl (bad) in mov push mov movsb rex.RXB or sbb gs iret xor (bad) (bad) (bad) jne mov jbe (bad) movabs mov push adc rex.RXB in pop push int3 adc lahf cwtl movsb test (bad) cmp fsubrs add fwait and (bad) jmp xor push xchg ss movntq out (bad) jmpq adc sbb inc pushfq andl mov (bad) mov lret movabs imul rex.RB icebp repnz mov cmp fnstsw cltd loopne rex.RXB loopne mov andl jrcxz vcvtdq2ps cmp xchg jbe cmp cld mov (bad) jns sub es int addr32 cmp loopne and rex.WR loopne rclb xchg pop cltd mov mov xor rorb (bad) cld test movabs movabs icebp decl mov scas imul loopne (bad) rex.B int3 callq xchg sbb mov or pop lock mul rex.R sbb (bad) retq in cmpsb stos rex.WXB (bad) and movabs and push rex.WRX rex.RB loopne jp int3 (bad) and jrcxz mov sub jle movabs jmpq xchg push rex.R in rex.WRB data16 pop xchg (bad) sarl rex.WR mov pop lock jmp add (bad) enterq (bad) mov xchg movslq (bad) (bad) movslq lret mov je rex jmpq gs sahf add out jbe rex.WRX jmpq fistp retq mov fdivrl mov loopne movslq out (bad) jle fwait add xchg add (bad) and (bad) popfq xlat loopne add rex.WRB lretw adc loopne pmaxub loopne cmp cwtl cmp hlt je pushq (bad) sahf rex.WB xor mov test rex.R (bad) out std (bad) cmc loopne jl mov and cld lods sub subl xor shl out repnz rex.RX loopne imul rcl mov (bad) lods fidiv cltd lea loopne jns clc mov or rex.WRXB mov loopne xchg ss sbb cld rex.RB movabs xchg jrcxz (bad) add rex.XB retq jmp jno cmc mov loopne pop iret ss xor jb loopne enterq fistl or icebp es push rex (bad) push rex.WRXB bnd cmpsb jne cmp mov rex.WRXB pop cmp mov mov test rex.WRX xlat pushfq stc loopne rorl mov sbb jb stos add xor sbb xchg shrb and pop cld icebp js mov repz adc sbb imulb cmp (bad) pop pushq je push int3 icebp jge fldt lock jle cmp pop or xlat mov (bad) es in xor xchg mov out cmp jmpq in (bad) add movabs rex.WB loope sahf loopne and pop xor pushfq in sbb fwait mov rex.RX movslq sub xor cli addr32 (bad) cmp fcomps xchg ja outsl and jbe fmulp outsb stos gs pop cmpsb cli adc iret jo callq mov (bad) es and jne out rex.WXB movsb adc pop (bad) scas in rex.RB (bad) lahf rex.WRX add cmpsb movabs jb clc and push cmpsb rex.X pop out pushq rex shlb sbb (bad) adc lods loop retq pushq jno xor rcl jrcxz (bad) rex.W enterq subl fistpl popfq jp in mov push jb stos and loope adc fs (bad) in sub (bad) (bad) out mov imul (bad) (bad) jno movabs pop push leaveq sbb fwait jmp push jge jg pop in mov pushq (bad) rex.B xor (bad) xchg imul pushq in xor adc insl mov xor add jmp out jae out (bad) jne mov (bad) mov test rex.WXB mov xor icebp movsl jmp enterq pop jrcxz (bad) out fadd ja or stc jmp leaveq jg adc lea (bad) lret je mov rex.X push cltd (bad) sbb xor cld cli fadd cwtl mov cs mov sbb xchg sub (bad) add es nop sub out rcr repz negl lods js push xchg addr32 mov adc sbb cmp jo mov sbb scas (bad) (bad) callq (bad) pop retq in loopne cmp retq add push and lahf mov (bad) jne (bad) xor (bad) fist scas xchg (bad) movsl xchg jrcxz sub xchg and repnz and push (bad) repz callq jbe xchg xchg add (bad) cld xchg rex.XB in in iret (bad) and imul jbe rex.WRXB loopne fwait jle cmp jrcxz lods pushfq (bad) loopne mov cmp icebp out cmp (bad) shrl (bad) loopne (bad) xchg mov mov (bad) loopne (bad) rex pop and adcb sub fisttp loopne cmp xor mov push loopne (bad) jmpq sub or sub xchg movabs or xor (bad) xor inc push mov rex.X movsb and (bad) push (bad) pushq test jrcxz int jae and sbb jnp gs mov sarl rex ds and jno pop mov (bad) movabs in (bad) jo mov rex.WRXB leaveq rex.XB jmpq imul je xor xchg loopne movsb mov xor mov lahf loopne hlt cmc or (bad) retq callq rex.X sbb (bad) push fchs sahf or cmpsl fwait add insb loopne mov lret rcr mov je clc or mov rex.X loopne movabs mov rex.WXB sub jle imul cmpsl in adc jbe std jg mov jo rex.WRXB pushq icebp loopne mov sub callq in retq xor retq cmp loopne rex.W jge (bad) addr32 and imul cmp add scas and sub jbe and (bad) loopne mov cld shll nop and push loopne popfq movslq cmc sbb flds rex.X insl (bad) mov (bad) adc lock pop fsubp jne movsl int out (bad) pushfq flds (bad) jp mov jb push movsb in lock (bad) sbb imul fdivs rex.B (bad) shlb jle sub jbe rex.WXB jae retq xchg or lret push clc mov movabs sub jmpq in mull outsb rex.RB lret sar cmpsl xor jle int xchg cmp cwtl xchg movabs push jg add rex.WXB cmc out imul sub out loopne jns pop rex.WX (bad) (bad) pushq rex.WRX test xchg rex.WRX ljmp xlat pop sub jle movabs rex.X mov mov loop sub jno icebp loopne pop pop adc rex.WXB cmp mov in and pop stc movabs in movabs (bad) push jnp (bad) jo loopne mov cld in mov jno rex.X jle mov in mov and movabs push loopne mov faddl xchg jle push rex.X or and push cld (bad) loopne movabs mov scas sar sub jne (bad) (bad) fisub rex.RXB cmc in jg int popq rex rex.RX (bad) idivl adc fmuls loopne cmp cmp jmpq (bad) mov push jle (bad) pop cld stos nop rex.WR mov in pop add stc jo retq (bad) jne (bad) lret (bad) in and rcl and xor loopne jo rol sahf in movabs adc std loopne pop (bad) sarb rcrl sub jo loopne (bad) mov rex.B rex.RX cmpsl mov rclb push mov mov (bad) pop xor or repz loop loopne sbb pushq loopne pop pop sub or jb out and decl jne movsl (bad) clc jge (bad) nop es push clc loopne mov (bad) xchg fdivr rex.XB hlt jg leaveq xchg fsub andl rex.WRXB and test sub pushq nop fistl xchg shr leaveq cmp mov mov rex.WR rex loopne pop rex.RXB (bad) divb adc cmpsb add loopne leaveq rcrl nop xor insb fcmovnb mov jmpq sub fsubs or outsb movslq rex.RB clc jo loopne push (bad) cmp rorl loopne mov hlt and pushq retq movabs (bad) ja loope loopne rex.WXB (bad) sub xchg xchg cmpsb fisubrl rex xor jb adc xchg cmc in cmp pushfq cli lock xchg (bad) fsubrl cmovl sahf cmp pop (bad) rolb jno (bad) retq cmp (bad) (bad) int3 mov and jg (bad) movabs add jnp jg and mov mov and pop frstor sub cld callq rex.WX mov (bad) movsl shrl xchg std lods in rex.R and in push (bad) pop js (bad) (bad) js shrb (bad) (bad) (bad) sbb popq xor mov adc outsl (bad) and movabs (bad) lahf subl callq rex.RXB adc mov rcl or jle (bad) xor movsb and loopne loop mov clc push sbb movabs (bad) sub fcoml repnz out rex.XB pop mov xchg fnstcw jae js cmpl (bad) testl and fdivrs cs movsb sub ja xlat xchg loopne jp sbb and andb (bad) sbb push rcrl mov leaveq jae cs repnz fdivs mov or cld loope stos jl (bad) in mov xchg movl pop enterq loopne rex.B (bad) add mov int3 fbstp (bad) fdivrs (bad) mov pop (bad) and repnz jle lock xor roll test enterq (bad) scas (bad) loopne fbld leaveq mov (bad) jl in jmp sbb lret movsb loopne mov std mov (bad) in lahf fld or loopne (bad) hlt adc es fwait cli sahf mov (bad) or xchg (bad) lret mov jrcxz iret test scas test cwtl fs rex.RXB insl fcoml and clc fadds in sbb (bad) (bad) jg cli (bad) sbb (bad) roll or adcl sub in xor rex.WRB repnz loope movabs adc loopne shrl in popfq rex.X movabs movl cld adc lods (bad) pop (bad) loopne divl add push rcr rex mov int3 loopne rex.WB push fcoml movabs pop mov enterq test rex.WR mov in adc in test (bad) push ds loopne (bad) mov rex.RB (bad) leaveq jrcxz lcall ja (bad) or or out push add fnop cli lea mov adc push and gs loopne mov imul pop rex.WRXB sbb (bad) retq stos fwait pop cmp loopne js iret in cmp mov (bad) (bad) sub cmp loopne lods fcomip (bad) (bad) (bad) popfq loopne lahf outsb fs in mov adc movsb ja addr32 mov icebp jb decl rex.WRX test hlt lret nop pop cmc rex.B mov ds jle outsl in icebp sbb jle jge rex.RX addr32 xor sbb (bad) movb je sbb cli (bad) loopne cmp rex.XB rex.W push (bad) repnz and and sar xchg pop jnp es (bad) push sub fiadd clc rcrl (bad) and mov xchg and cmpsb iret (bad) and pushq in mov jmpq mov rex.WRX out ja cwtl in xchg (bad) pop add (bad) sub pop mov stos lret fucom mov mov stos callq or movabs pcmpgtd insb sbb movslq in xchg (bad) pop (bad) sbb mov (bad) lret sub outsl mov imul jrcxz ss ds fnstcw jne mov movabs movslq rex.RXB stc sbb jns (bad) out (bad) pushq mov mov lock repz rex.WRXB rex xchg repnz loopne int (bad) (bad) nop add (bad) mov (bad) mov adc cld push pushfq popfq insb xlat loopne out mov loopne mov (bad) rex.WRXB xorb pop and (bad) cmpsb movabs push (bad) rex test cwtl xchg mov outsl or shlb sbb mov push sarb and and (bad) inc sbbl mov cmp insb jns (bad) (bad) sbb int3 (bad) sbb shlb insl (bad) cmc movsb cli fsub stos negb pushfq (bad) pop push (bad) xor std test (bad) jg xor xchg xchg loopne retq and mov pushfq (bad) lods mov lock decl movabs and loopne pushfq stos icebp cmp std pop or movabs xorb cli sbb or (bad) sub cmpsb lret add sub rex.WR (bad) push (bad) movabs jo (bad) (bad) loopne lods adc movabs retq cmpsl idivb (bad) gs std addl mov test add pop push (bad) mov and (bad) jnp (bad) xchg ds mov add lea loopne mov jbe rex.XB (bad) adc mov and jae (bad) out loopne mov add andb pop (bad) loopne mov gs xchg mov adc fnstcw and or test js cmp jmpq xor fcmovne pop (bad) enterq movabs (bad) add out movabs mov add push xor xor jns (bad) loopne and fcoml (bad) xor cmp std xchg in jg mov (bad) (bad) (bad) loopne mov movabs popfq insl fimul in (bad) out pushq or cmc xchg in cld (bad) js int loopne and rcrl pushfq loopne jo icebp (bad) fnop xchg sahf or sub jrcxz test rex.WRB fcoms (bad) loopne imul in jg xchg ja scas or ffree xor lock rex.R adc divb cmpsb rex rex.WRX loopne movabs rex.WB lods test mov sarb push (bad) mov and sbb mov int3 mov fldenv int xor jns rex.WXB cmpsb js pop jp loopne sbbb mov (bad) xchg rex.X data16 out fstps jbe jl loopne rex.WRX adc jo retq imul out (bad) pushfq fist iret retq rex.RX fsubrl adcl (bad) (bad) sbb rex.WRXB pushq (bad) jle add adc rex.XB enterq es xchg cmp adc (bad) push mov xor or adc out movsb and je rex.XB loopne rex.RB sub sub in ror (bad) push loopne sbb scas jmpq movsb sbb loopne lahf rex.X repnz stc test (bad) loop pop callq xchg jge insl rex.W scas divl cli xchg or nop xchg pop or xchg (bad) fistp (bad) repnz jp (bad) pop rex.B shl pop int (bad) outsl loopne and rex.WRXB mov sbb mov in enterq scas cmp (bad) lock cli mov xor (bad) movabs xchg lods loopne addr32 mov js loopne movslq pop loopne sub and (bad) (bad) or sbbb cld fwait jg test loopne fs pop jbe mov pushq or xor (bad) mov rex.R popfq loopne mov (bad) lret xor mov jrcxz and (bad) clc rex.W nop push xor push loopne adc cs and xchg in adc movslq (bad) (bad) pop rex.RXB hlt loopne andl loopne mov (bad) callq cmc fstpl xchg xchg iret fchs stos rolb out (bad) icebp add imul rorl add jle jmpq mov sub or (bad) jne sti loopne sub jae scas loopne (bad) (bad) loopne (bad) idiv (bad) nop mov pop (bad) xor movsl (bad) out (bad) ja jb jg sbb adc mov retq pop cmp (bad) test fnop mov sbb loopne mov retq vpavgb xchg jae,pn (bad) rex.WR mov sbb jmpq mov lods decl xor xchg push (bad) and sbb loopne pop pop jp iret shr in mov mov (bad) hlt (bad) mov in rex.X jbe je push rex.WRXB and rex repnz cltd (bad) or and (bad) adc loopne sub cwtl pop (bad) (bad) (bad) xchg movabs add mov xor loopne rex.RXB push mov (bad) cmpsb and (bad) xor rex.RX jge add out icebp leaveq test or lods (bad) callq cmp out (bad) movabs xorb (bad) jge movslq lret rex.W movabs cmp pavgb retq not stos fistl (bad) add int mov pushq rex.RX mov fidivrl movabs outsl (bad) and lret pop and jg insb rex.RX fwait xor add jg (bad) fxam cmp mov sbb shll lret rex.WXB pop push (bad) loopne (bad) callq scas loopne lret (bad) insb rex bnd (bad) mov scas (bad) out jmpq (bad) repnz sbb int3 loope mov or (bad) add mov adc in (bad) fstpl push rex.W data16 stc rex.WR (bad) addr32 sahf (bad) or or (bad) outsb in rex.WRX movabs sub loopne movslq sub out imull pop xor xor loopne insb push std rex.WRB rex.RX xchg icebp and in subb (bad) fnstsw or (bad) fwait and xchg movabs push sbb repz xchg insb or movabs sub push (bad) loopne and add xchg mov (bad) pop rex rex.WR (bad) mov mov rex.WRB rex.WX loopne adcl and (bad) (bad) jg decl lahf jmpq mov retq rcrb callq movabs (bad) rex.WXB cwtl or xchg and ss movabs rex.WRX mov (bad) pop mov loopne test push (bad) lock loopne movabs repnz jo sbb (bad) movsl add xor mov mov pop notl or or jmpq xor add (bad) outsl (bad) adc loopne mov lock fiaddl jmpq sub mov rex.WRXB movslq imulb xor (bad) gs loopne (bad) sub lahf loopne fsubrs pushq vcvtdq2pd push pop cmpsl (bad) cmpsb mov rex.WX push mov and or decb cmp sbb (bad) imul loopne retq hlt rex.RXB xchg (bad) loopne jl cld (bad) mov pushfq loopne or mov mov or popfq stos cmpsl enterq mov rex.XB jnp fcompl jp add mov pop hlt movabs pop push sti sbb pop (bad) sub jmpq lahf (bad) jg in add pushq rex.WB testl std loopne int (bad) iret test jmpq pop push xchg sbb mov in movabs outsl (bad) sbb loopne xchg in push add sub (bad) rex.B in xor clc pop pop fsts lahf push enterq movabs rex.X iret add cld js movabs popfq fdivrs (bad) mov loopne in fisubr push (bad) (bad) jrcxz mov jne and add (bad) mov (bad) xchg fwait (bad) loopne out jrcxz incb or movslq out sub imul cmpsl (bad) mov in (bad) jo lahf (bad) sbb adc insb jmp mov xlat mov fcom stc rex.WR loopne int push push (bad) stos ss loope lods cmp lods out rex.WRX sbb andl fistpll movsl loopne or movabs int (bad) cmp mov xor jmp out pop sbb pop push (bad) (bad) push scas cld (bad) or mov sub add imul mov rex.X (bad) push cltd add and xchg and rex.RX scas mov (bad) mov popfq sahf mov (bad) and pop mov (bad) nop insl stc mov add lods xchg pop jmpq mov push jo stc (bad) (bad) xchg or jge movslq test jmp pop in (bad) (bad) push jns icebp sbb mov and adc xchg add enterq mov and jrcxz adc (bad) adc jne add (bad) stos adc or xchg fdivrp and mov jp (bad) push rolb sbb rclb (bad) jrcxz xchg and movabs icebp and outsl gs jmpq pop sub mov sbb (bad) push mov data16 lret test clc hlt movsb jmpq (bad) sbb rex fdivrl (bad) jo in sar mov push icebp jbe ds push pushq (bad) pop and fbstp mov idiv rex.XB shll stc adc jrcxz jle rol add gs icebp (bad) (bad) sahf fistl sub (bad) (bad) (bad) sub rorb addr32 xlat jrcxz xorl (bad) (bad) (bad) callq icebp pushq (bad) rex.WRX jmpq addr32 subb fildl pop cmp or (bad) cmp and movsl jp add fs jmpq rex.R gs xchg xlat push loopne (bad) sbb loopne adc sbb xchg ja jge rex.WB roll or fmull rex.WRX mov jnp (bad) shrl roll loopne sbb mov xchg jb outsb mov stos xor jne (bad) loopne insb pop hlt scas rex.W jne retq or mov or (bad) roll cmp pop loopne mov cmp icebp cli (bad) out push jle lret adc je or push jo movsl mov mov cmp jg adcb loopne (bad) (bad) jne imul jae mov icebp gs movslq movabs or (bad) (bad) add mov lret stos outsb in mov imul jb (bad) int3 rex.RXB (bad) add in xlat xchg (bad) rclw loopne movabs mov psrld mov mov rclb outsb rex.RXB loopne rex.WRX nop stos lret mov in out (bad) cmp and enterq imul mov (bad) add sub sbb jmpq mov mov xor shlb push mov xor xchg icebp test mov insb jno (bad) or callq rcrl enterq (bad) jbe cmp push pop in loopne adc cli mov sbb rex.W adc in in (bad) repnz in mov addr32 loopne sub push add add cmpsb (bad) repnz rex.WX (bad) lods xchg retq jrcxz and je (bad) ds leaveq loopne out and movabs lret rex.WB rex callq enterq or hlt loopne push addr32 xor mov mov stc imulb clc adc (bad) out cli sub cmpsl add push sub cmpl in rex.B fsub rex.WX and and or ds shrb mov std jl idiv jnp pop loopne and xor (bad) sbb adc (bad) test adc imul cmp in rex.WRX push movsb or push jp mov sbb mov push (bad) jbe adc imul and add loopne in movsl popfq mov mov add scas lahf (bad) mov (bad) cmc jae xchg repz fxch rex.WX test (bad) shl cli movabs (bad) sub or and movsl in loopne rex.WRX movabs loopne push jp cli (bad) mov mov std mov jb ja or xor (bad) fstl in and xchg gs in fisttpl mov mov repnz (bad) mov xor sbb loopne movabs test push loopne pop cmp notl and nop test in adcl rex xor pop lret movabs adc mov loopne ss (bad) (bad) adc push ror jg loopne fucomp retq and leaveq and int3 (bad) rex.WRXB loopne (bad) cmp rex.W (bad) (bad) icebp or iret cmpsb (bad) (bad) stc in lret lea shl mov in loopne addr32 mov adc and out add in and pop mov fildl scas icebp pop cmpb or (bad) cmp and cmp loopne jbe cld cmp in (bad) loopne rex.WRXB cwtl div rex.WB icebp mov xor sarb sbb movabs rex.B out vpmullw (bad) lods sbb jp gs cmp and sbb (bad) cltd loopne out mov mov test sub imul pop in (bad) movabs fisubl xchg (bad) or icebp (bad) push push lret sarb fnstsw movabs xchg loopne (bad) in jmp mov xchg mov cltd adc sarb rex.RX push lret xchg or jo clc and add rex.X mul out callq cmp incl or mov loopne (bad) (bad) rex.WXB fwait rex (bad) mov (bad) sti (bad) stos lea popfq cwtl (bad) cld loopne cmp pop (bad) mov sbb adc add adc xlat test clc imul popfq (bad) jae pop loopne mov pop add pop or jmpq loopne (bad) jne fistpl jmpq add loopne xor (bad) and loopne (bad) in (bad) pop pushfq lods in or pop in mov loopne and mov repnz and out repnz cmp rex.RXB rex.WRXB and (bad) loopne push insb pop push add mov mov mov and lods xchg and outsl fisttp xor jae adc sbb xchg pushq je adc loopne jno enterq out rex.WX ss add add or adc add (bad) fsqrt rex.WRX cld (bad) in rex.W loopne nop xchg and add retq mov xchg cwtl loopne icebp mov int3 rex.RX pop sub es (bad) and jp fneni(8087 lret (bad) rex.RX fwait xchg jl jmpq adc loopne in mov xlat loopne pop add repnz rex.RB gs jbe pop and rex.WB (bad) mov rex.WRB callq loop cmpsl js mov and xorl push movabs lods and mov loopne stc and sub jbe mov callq imul jmpq jrcxz mov pop pop (bad) loopne sub mov in fstpl stos and or popfq in jmp scas xor ja in push lret insb sub mov push fcoms sub int3 mov adc (bad) jnp shlb cmp addr32 sub pop (bad) hlt mov rex.RX mov push loopne jne fisttp pushq std jo xlat je loopne scas stc sbb mov mov and xchg (bad) movabs loopne adc mov cwtl loopne in pop cmp shrl cmp (bad) fmuls add out xchg loopne ja enterq je and rolb in ss cmp fstpl (bad) rex xchg stos push add (bad) rex.RXB cmpsb in pop sub (bad) jo callq jne ja (bad) jp fiadd mov (bad) add mov adc loope mov rex.WRXB adc fildl in cmpsb (bad) rex.RX push xchg imul lret cmp shl movabs xor sbb lods test fs sbb push (bad) cmp (bad) sub cmp (bad) mov (bad) pushq adc push mov mov (bad) jno jl mov vpaddq mov loopne insb or or push cltd cmp sub movabs clc in or fwait jg or jbe fst push rex.W pop loope gs or loopne jp ss in (bad) int cmp (bad) adc lea adc mov xchg cmp insl sbb movabs or sbb in jmpq (bad) in callq int3 jae mov cmp (bad) mov loop and xchg in adc mov in je (bad) je jp mov (bad) and outsb loop in and movslq pop scas xor jns (bad) (bad) in cwtl sar xor retq out out (bad) mov (bad) push sub cs (bad) sbb loop je and push ficoml xchg gs jl mov sti (bad) hlt adc (bad) movsb jle callq rex.RB rex.W rex (bad) in fcomps movsl sub and or rep out enterq outsl incb jb lahf rclb rex.WRX retq mov jmp xchg movabs sub hlt xor rex.WB or (bad) add or (bad) mov repnz xchg (bad) loop (bad) movabs cmpsb callq shrb icebp insl movabs scas (bad) insb fadds imul jne xchg (bad) lea xchg rex.WRXB mov movsl jp scas out pushq jmp and mov xor rex.WRB lock mov hlt mov repnz push mov fldcw pushq jle push outsb lret jmpq pushfq sbb mov add subb mov and xchg repz lods (bad) mov ljmp enterq jnp fbstp enterq fildll rex.WXB or cmpsb jae (bad) mov or push mov jns pop rex.WXB movabs mov sub mov movslq rorb or (bad) enterq mov jl sub sub fnop (bad) rex.B and sbb mov loopne (bad) jg mov sahf fdivrs xor (bad) rex.WRB cmpsb fwait in js adc (bad) mov add mov jl out cmpsb rex.WRXB or adc lret xchg mov rex.RXB sub jb adc out pop imull enterq shl (bad) or popfq mov and and push mov loopne,pn addl sbb fdivrs mov cmp and mov jrcxz movabs sub add xchg rex.RB rex.WRX fwait lret shlb (bad) xlat lahf out mov iret mov sti loopne rex.X cld (bad) sbb int imul test (bad) in cmp pop shlb rex.RXB jnp callq rex.WRX loopne mov pop repz loopne jmpq jnp loopne jno xchg pop leaveq (bad) icebp in xlat data16 xor pop loopne rex.WRX stos jmpq rex.WR out add pop icebp enterq xor inc orl add sar loopne popfq subb xchg imul rex.WXB movsl rex.WRXB push (bad) jno in (bad) rex.WXB or cltd jmp and insl jmpq sub hlt loop shll add mov loopne (bad) lret rex.X rex.RX loopne movsb ja repz rex.R addr32 push adc rex.WXB and rex.W retq lods add or jnp sahf notb sbb xchg adc (bad) xorl callq sbbb rex.RXB in out add imul rex.RXB jg (bad) (bad) iret addr32 test pushq sti pushq xchg ficomp rex.WRX pushq sbb xchg jno movabs and cmpsb sub add (bad) adc idivl movabs stos enterq movslq cmpsl jle adc sbb jmpq sub pop cmpsb jge scas retq repz in (bad) pop jne adc callq sub pop xchg pop leaveq out xchg loopne pop mov or js out jg js movabs mov adc (bad) push xor mov (bad) sbb lret sub rex.W xor or push jns rex.W cmc int jmpq mov sbb lock insl rex.WRX mov (bad) xor (bad) (bad) push push clc xor rorb (bad) push movabs loopne rex.WRX push (bad) outsb sbb cmc pushfq jmpq pop (bad) sub or xlat and pushq neg rex scas or pushq fcomps jrcxz lahf stos or jo outsl and loopne loope and lods loopne jno xchg jg jae rex jle scas add pushq popfq jne rex.R lcall iret (bad) rex.WRX xor scas mov (bad) mov addr32 movsl jmpq rex.X jp lahf rex.WRB pushw test xchg cs nop out shll and and jle (bad) (bad) (bad) out pop movsl jnp rcll sub and callq movabs cmpsb mov retq shl (bad) test rcrb (bad) xchg ja,pn andb cmpsl (bad) and flds cmp shl (bad) loopne fsubrl xchg movabs in jge rex.WRX jns mov loope (bad) in adc xor pop add sbb mov (bad) mov rex.WRXB add in sub fucomp loopne (bad) int3 icebp movabs adc (bad) add (bad) push jmp in loop rex.B adc or mov fcoml cmc loopne add cmpsl and iret sarb leaveq and (bad) (bad) sbb movabs push fucom push cmp loopne rex.WX mov loopne rex rex.WR pop jmp subb cli test or in clc rex.W in loopne shrl movabs rorb (bad) (bad) (bad) sbbl notb clc jmp (bad) test movabs int mov es rex.X mov loopne sbb lods or adc (bad) mov fsub (bad) sbb jmp mov hlt sti pushq (bad) and push in push cli xlat add (bad) stos xor rex.RXB and (bad) movabs sar (bad) jns (bad) push jl pop dec fistp rex.B roll and rex.RX lret (bad) jg adc rex.WB loopne test xchg rex.RXB ss loopne popfq loop cwtl xor orb loopne pop mov hlt xchg imul xchg (bad) jno insb or frstors divb xchg jbe loopne rex.B xlat lock xchg or es stos mov cli int3 sar jbe loop movabs rclb adc mov loopne (bad) sub xlat clc and pop pushq (bad) cli repnz (bad) and cs enterq jl out test and movsb std lods pushq (bad) (bad) xchg icebp add pop push (bad) data16 (bad) mov rex.WRXB (bad) and lock (bad) mov lea add xchg (bad) mov jp outsb sbb lahf cmp cmp (bad) (bad) sbb stos cmp sub jmp cmp int loopne rex.RX xchg repz and test add loopne (bad) sbb pop cmp xchg nop (bad) loopne hlt rcl stos mov std cmp (bad) (bad) rex.XB (bad) pushfq cmp pop jbe sbb adc (bad) add mov (bad) sti fisttpll jbe leaveq outsb ja movslq mov (bad) xor je mov cmpsb rcrl out rclb push mov (bad) decb test in (bad) xchg clc retq (bad) movabs rex.WB icebp iret rolb mov int3 cmp (bad) fimul xor (bad) (bad) loop sbb sti (bad) movslq notl jbe iret mov repz sahf and rex.R push fildl out jp add in adc mov mov (bad) repz rex.WR repz and retq fdivrs jno rex.W out sbb stos xor push (bad) add movabs jmp in (bad) rex.WRXB rex.X movabs test popfq adc loopne lods add rex.RXB fwait mov nop (bad) icebp push movsl mov lock (bad) retq xchg mov jo lods popfq in cmp fistp in pop (bad) fmull decb rex.WXB ds stc mov addr32 cwtl jo push rex.W xchg cmp sahf rex.WRX imul cs clc xor mov (bad) jnp add fwait hlt sub adcl pop fs push stos and (bad) mov rex.B gs jrcxz sbb lods push scas rex.WXB pop movabs lock stos sarl gs sti std xlat jae mov rex.WRXB push xchg mov (bad) cmp (bad) (bad) gs std or icebp setge movsl test push mov femms add nop (bad) rex.WRB fidivrl jge adcb jnp push nop ds fnstenv sbb xor sub lret test mov ficompl rex.WRXB test ds movabs repnz adc rex.WX repz test test (bad) movslq sbb pushq mov cmp mov (bad) pushfq in loop xor movsb rex.WRX test retq adc int fs callq sbb imul sbb repnz orl (bad) insb and rcrb (bad) push adc cltd mov pop lock or fisub (bad) insb lea movabs adc shll xchg stc mov add out enterq fs pushq and pushq out andl add stos push jle mov push push fcomip (bad) pop (bad) addr32 mov mov cltd (bad) rex.W outsb (bad) mov mov in (bad) test mov sbb icebp rex.WRXB loop sbb or cmp fsubl popfq xchg neg xor cmp lcall jnp rex.W adc movsb ss out mov hlt test sub xlat pop test nop xor pop rex loopne fucom (bad) and rex.RXB or xchg lods (bad) mov mov mov mov sahf lods rex.RX gs mov stos movsl (bad) xchg rex.WRX test int3 lahf mov subl xchg movslq adc xor and xor fsubrp rex std xor ja and sub push jb stos jnp vpcmpeqw sbb mov (bad) fadds (bad) rex.R rex.WRXB test lret adc sbb xor jl (bad) lret rex.WX cmp (bad) loopne jp out (bad) jne retq jrcxz repz rorb enterq in (bad) mov pushq mov pop cmp and mov and in (bad) imul lret rex.X cs (bad) std fwait mov xchg loopne (bad) (bad) callq (bad) and test rex.RXB mov rex.WR cs add (bad) pop mov mov (bad) xor stc (bad) adc adc loopne rcrl loopne loop fisubrl rex.X jle in jbe loopne test (bad) enterq rex.WR clc adc (bad) movabs (bad) lock mov repnz rex.WXB pop movabs xchg or shrb jmpq fs ljmp mov scas pop cmc shrl cld scas shr leaveq or stos (bad) pop (bad) insl mov (bad) add je leaveq mov pushq shr movslq pop jae (bad) mov (bad) test fidiv stos retq rex.RX sbb lahf mov (bad) pop push (bad) cmpsb fcomps and jnp mov cbtw mov mov fistpl sbb sub jle (bad) add (bad) jns enterq pop scas sub rex.WB mov or adc rex.WRXB addr32 (bad) scas es test jmp test xchg jno movabs test fs mov rex.X repz mov lret jb ljmp jmpq in lret in xchg (bad) jb loop or ss test mov and xchg or loop rex.RX jno clc vdivpd outsl xor in (bad) rex.WRX jle add rex.WRXB fldt pop adc cmp and fucomp out stc addr32 movabs and lret and pop addr32 cmp ror and js push jae (bad) stc (bad) in (bad) (bad) mov je and popfq leaveq rcrb rex.WR rex.RXB fwait lret cmpsl pop or pop stc jbe (bad) (bad) push shr jl push jns rex.WXB xor rex.WRX pushq and xchg or cli mov (bad) fdivrp mov iret cmpl shrl mov in cmp out (bad) test out jne int rex.WRXB (bad) fmull (bad) and jns push sahf (bad) mul mov retq in and lock xor test fdivrp callq icebp loop jp xlat push pop clc pop mov sub (bad) movabs movabs rex.RB sbb adc jo stc adc (bad) mov movsl mov rex.RXB addr32 rex lea loopne rex.X outsb rex.W repnz in rex.R mov rex.RXB and cmp mov xor retq adc mul jl movabs rcrl loopne lock jmp rex.R (bad) andl xor loopne data16 add hlt rex.WR lods loopne rcr int3 gs rex loopne (bad) jo cmp rex.WRXB addr32 int3 fwait loopne jnp movslq andb (bad) rex.W lock mov adc jns and (bad) fsub jrcxz rex.WRB repz cmpsb in pushfq movslq adc lahf (bad) loop rex.RXB sbb add ja loopne and sbb adc es (bad) sti mul mov and popq pop xlat leaveq cmp sar rex.WX xchg mov cmp and sub mov or and xchg xchg sbb (bad) nop sahf add leaveq mov cwtl jbe adc jns loopne out mov mov rex.R cmp adc jle or insb (bad) cmc jrcxz pop add fs rex.WX repz insl add sti retq test testb xchg (bad) fnstcw mov and cltd ja imul and mov mov incb add js xchg cld in retq in rex.WB push jo in insl rex.WX adc xor lret mov rex.WR retq jno cmpsl lret lods mov xor loopne movsb sahf mov gs retq or (bad) adc jle rex.X movabs (bad) decl notb (bad) mov data16 mov cmp loopne and (bad) jae fwait jrcxz js out or pushfq ss and and xchg rex.WB popfq add rex.RX nop ds imul or rex.WXB sahf loopne rcl (bad) orps cmp (bad) jmp sub and adc or repnz rex.B movabs add jrcxz stos pop xlat lahf (bad) fisub fwait loopne xor test push es test and in in pushq push mov (bad) xchg dec mov (bad) (bad) and (bad) loopne xor scas sub pop fsubrs (bad) ja fdecstp rex.RX cltd loopne rex.RXB pushfq mov (bad) jmpq in (bad) (bad) test or pop (bad) xor cmp rex.WRXB (bad) out xlat xchg loopne clc mov cmc jrcxz stc orb and add add (bad) jmpq pop rex.WR xchg loop rex.RB (bad) pminsw and mov push xchg fstp (bad) (bad) hlt sub and pushq sbb rex.W rex.RX sub (bad) movsl pushq (bad) adc xchg pushq xchg sbbb rex.WRXB mov xlat and adc mov movabs (bad) add loop sub push loopne fimul addr32 imul (bad) je stos insl jmpq rex.WR rex.RXB adc (bad) push jp movabs sub callq push cli repz std lret sti outsl mov callq stc loop pop lock (bad) popfq sub retq std jmp jl pop xor out sub test mov cmp cld mov xchg nop (bad) fdivp jmpq (bad) jns rex mov sbb jmpq shrb sub fistp adc jg pushq int3 loop cmp movabs (bad) rex.W rex.WRX jbe jmpq and icebp mov push jns movsl loop (bad) std rcll sbb xchg rex.WRX in nop adc addb rex.B adc leaveq (bad) xor rex.XB rex.B xlat pop (bad) mov add nop mov popfq fistpl xlat lret (bad) cmp nop lock cs in (bad) jge xchg mov mov loopne retq in rex.XB add push (bad) idivb (bad) (bad) rex.RXB decl push jl xor and mov (bad) (bad) fldl and adc out in cld rcl and mov add pop mov jbe and (bad) (bad) lret add (bad) cwtl (bad) (bad) cmp cmp outsb (bad) test push in jrcxz (bad) (bad) movsl repnz push scas js (bad) ja xchg push rex sti and movsl or gs add stos out rex.XB xchg nop insl mov mov adc (bad) sub mov cmpsl pushq hlt push sbb mov push (bad) shll (bad) sub lahf jo xor mov ja sub rex.RB (bad) addr32 mov rolb pushq icebp mov test nop enterq rorl (bad) (bad) mov xchg xchg out jmpq push lea xchg out mov imul shl stos mov lret jno ror icebp jae xlat add cmp (bad) sbbl shrb mov xchg (bad) ficoml iret (bad) rex.RB xchg sbb leaveq jae outsb cmp test sbb pushfq cmp out vpavgb rex.WB loop mov and loopne xor ss out cli fwait js lret cmp (bad) cmp rex.RB test rcrb rex.WRXB (bad) sub xchg rex.WX inc mov push (bad) (bad) mov lea push pop add ror fwait xor loopne sbb retq and (bad) push xor or icebp fwait or (bad) xchg mov adc loopne mov (bad) mov mov mov loopne cmp pop jbe or sbbl jo (bad) or and dec mov mov rex (bad) sbb add xor add jle (bad) rex.XB and (bad) (bad) out roll not (bad) jl sar jno (bad) and fdivrl jge mov shl xor mov cli retq cwtl jge cmc fs xchg sub mov and ja push (bad) (bad) or lods jp xchg pushq mov in push cmpsb rex add xchg jo (bad) (bad) (bad) sbb loopne cmp out sbb (bad) (bad) retq (bad) (bad) in cmp push xor add (bad) adc and push (bad) sbb lahf loopne movabs jo mov (bad) repz add (bad) jno rex.WX in je (bad) and rex.RX and adc (bad) lods or stos cmp jp (bad) nop pushq rol pop movups (bad) nop stc (bad) movsb cltd lea push cmp lods rex.WRB loopne lret add pop data16 outsb pop (bad) (bad) shl faddl pushq xor mov out (bad) loopne rcrl jp loopne out (bad) pop cmp loopne (bad) test fwait loopne xchg push xchg sub movslq fiaddl nop stos movabs or mov rex.XB out (bad) rex.RXB psadbw testl jge vpavgb cmp scas loopne cmp sub jg shrb (bad) (bad) sbb xor push mov pushq adc sub dec fsubl (bad) movabs cmp (bad) movslq vpaddd cmpl rex.RX pushq outsb outsl fisubrl mov (bad) addr32 ficompl callq push rex.R repnz (bad) addr32 push (bad) (bad) mulb sahf (bad) pop mov mov jge cwtl retq adc (bad) lea fucompp jnp mov test andb add ss rolb mov or movsl fcomps lods xchg leaveq xchg loopne and data16 out in add and (bad) jbe rcr cmp mov retq mov jo in adc pushq pop in rex.WX (bad) mov adc fldl retq out add and cld (bad) cld sub (bad) lods add cwtl cltd (bad) xchg push add xchg in cmp scas cli or fdivl clc lret ss (bad) movabs and mov jle (bad) (bad) movslq jrcxz sbb jb (bad) add rex.WR push out xchg add loopne pop rex.RXB jp pop pop mov fistl cmpsl stos ds lea (bad) in and mov jae lock push and mov sbb iret je (bad) xchg rex fmuls movsb ss pushfq sbb mov mov retq jle in in pop insl (bad) xchg rex.RB xchg sub sub (bad) fprem in movsb (bad) xchg xor in icebp imul mov adc and out (bad) adc push scas jge or out rex.RXB push sbb hlt rex cmp mov jne rex.R fisttpll rcr (bad) lods lock cmc outsb sub rex.WX mov jnp sub imul rex.WRXB or rex.RX mov or jnp xlat mov pushq (bad) cmp sub je nop lret div add (bad) rcl or in pxor fwait in sbb enterq add stc int jmp shrb rex.RX fs sub movslq rex.WX sub ficoml cmp cmp stos (bad) mov cs (bad) fmul sub sub rex.WXB fsub js pop fsub and leaveq retq mov fimull cmp out add jge and icebp cmc mov rex.XB pop mov cmp (bad) cmc jl out pop (bad) push xlat movsb lret jo hlt test rex.RB xlat pushq (bad) jns cmpsl push sarb cmpsb repz jae (bad) jae fdivl xchg and sbb lods rex.B leaveq in repnz fs cld add loop cmpsb and pop movabs mov pop jle cmp jmpq xchg or rex lahf push (bad) sar insl rclb and movsl jae fst sub leaveq ss out xchg push add out sub je sub mov (bad) cmp loop lock and loop and loopne rex.RXB out mov (bad) (bad) add lock data16 pop jo (bad) movsl out mov cmp iret lods mov mov mov lods xor add jge cmp and push mov mov jb jp (bad) sbb and xchg xor (bad) outsl callq add mov sarl repnz in jnp (bad) add mov rex.WRX rex.WR sti and push adc (bad) pushfq rclb loope test cmpsl jae (bad) in stos cvtps2pd rex.X jne xor scas sbb xchg movsl or mov movabs add sub and mov jne mov xor jp xor jrcxz (bad) decl adc cmpsl out jae fwait outsb jge in pop loope and cmp sbb jrcxz movsb hlt movslq pop (bad) push pop add (bad) scas add cmp xchg (bad) jbe cmc (bad) xor or (bad) in sbb push test imul sbb mov sahf retq (bad) pop (bad) pop sub movabs mov pushq xchg jmpq scas sbb punpckhdq and movabs mov adc retq imul cwtl adc jbe stc lods mul nop andl or enterq cmc jrcxz push decb out adc mov mov xchg mov rex.R ds rex.WXB hlt sarb (bad) (bad) pop or ds rex.WRXB mov xchg mov rex.RX mov and out outsl jg mov pop adc (bad) scas sbb fisttp mov push pop psrld nop sbb in (bad) cltd and rex.WRB (bad) xchg cmp (bad) repnz xchg mov nop add insb (bad) mov jae add xlat repz push es pushq mov (bad) (bad) (bad) (bad) out rex.RB and or push (bad) and icebp movslq cmpsl movabs cwtl mov in retq mov mov add push push movabs and jg mov rcrl fisttp es rex.WXB (bad) addl sahf mov (bad) popfq add mov cmp mov fstps rex.WRX lret or (bad) repnz out jne adc pop sarb shr pop pushq xor push ss stos scas pushq rclb pop jle (bad) adc rex.B rex.WX cmp cmp movsb xchg jrcxz mov cmp cmpsb lods jmp xor push in lret rex.WXB or lea mov in push and pushq insl push mov (bad) pushfq in sub mov (bad) sahf (bad) mov leaveq in jl movb (bad) mov mov or insl lods int3 (bad) lock (bad) subl (bad) callq cmpsb movabs (bad) add test rorl jle rex.WX jmp enterq fdiv (bad) callq ja loopne (bad) rex.RX push mov movsb xchg jb sti xchg push cmpsl add rex.RB rex.WX imul rex.RX rex.WR rex.RB add cmp mov add mov fisubl xor jrcxz std or cmpb rcll rolb (bad) (bad) scas (bad) sbb (bad) (bad) fmull loope,pt (bad) mov rex.RXB mov shrl xor (bad) in clc (bad) pop in retq idiv push mov cmp mov loopne ljmp fsubs mov (bad) rex.WX pop idivb push cs out mov cltd cmp push cmpsb icebp fisttpl movabs nop out (bad) jge cmp jne mov rex.WB add (bad) jbe and hlt rex.RXB jp mov mov sub rclb and (bad) jmpq popfq (bad) or (bad) (bad) in jp sub xchg cmp xchg rex.RXB movabs rex.WB xchg lahf xchg sarl lods rorl loopne xchg in xor (bad) repnz (bad) fadd leaveq mov (bad) mov add sbb cmpsb rex jrcxz movsl xchg xchg mov (bad) sub and (bad) callq (bad) loopne ss movl fs fisttpll pop ficoml (bad) lea retq adc or push jae push loopne iret mov cmp (bad) idivb and adc sbb sbb loopne pushfq sub mov (bad) cmp cli adc (bad) sbb leaveq callq cmp sub cmc movabs (bad) repz rex.X (bad) and out cwtl jb out (bad) stos callq idiv (bad) jmpq gs jne ja and cltd hlt (bad) lret pushq (bad) repnz lock mov out push (bad) in int3 (bad) (bad) xchg (bad) xor jmpq mov outsl mov (bad) out (bad) (bad) mov xchg clc or (bad) jbe outsb lods and or jbe push ficom (bad) xchg sub rex.XB push (bad) sysenter cli (bad) (bad) (bad) sarl pop scas jle sbb jmpq jrcxz pop int3 push repz stc xchg add lret loope (bad) out xchg retq (bad) addr32 cwtl push andl ficoml jae rex (bad) in jns add out jae icebp jno mov inc jmp (bad) (bad) (bad) add out or callq sub adc stos leaveq (bad) addr32 xor decb (bad) andb gs and and rex.WB cld int3 jle insl jrcxz or fnstcw (bad) lret cwtl leaveq rex.WR movabs (bad) mov and (bad) rol sarl rex.WRB ja or js out (bad) test (bad) stc rex.XB loopne rclb out jmp mov jmp (bad) idivl jle sbb adc ficom sahf mov gs jne jrcxz mov pop adc or xchg jmp and jmpq xchg adc js sbb lock clc and xchg icebp jns insb or fidiv sub jo out clc cmc hlt pushq callq movabs sub movslq jrcxz in xchg callq (bad) movsb jrcxz xor xlat movsl callq jo xchg leaveq fucomip jae out (bad) stc rex.XB jle xchg repz (bad) shlb clc decl xchg mov (bad) (bad) cmp gs mov push nop adc mov mov fcmovne sub cmc movabs push in push std jns clc pop leaveq mov xor or or movabs sub mov add xchg (bad) in in (bad) or lahf (bad) sbb add (bad) gs sbb sub (bad) retq sub sub xor mulb or movabs fwait shrl pop callq jge jl push (bad) in or (bad) nop rex.X sub lock sub cmp (bad) and insl mov add fmuls jo movabs loopne insl (bad) cmpsl hlt bnd adc jle fs sbb (bad) scas hlt rex rex.WRXB cltd imul (bad) pop testb add neg (bad) hlt outsl xchg sbbb lahf and cltd in (bad) push xor jrcxz (bad) or mov (bad) (bad) sub mov jb (bad) xchg rex.R je stos insb loopne int3 movsb pushq js repnz (bad) addr32 (bad) or rex.RB rex.RXB rcr lods pushq mov int3 scas xchg (bad) adcb xor (bad) mov pushq cmpsl movsb fimul es or xchg (bad) icebp pushfq test icebp int3 out pop mov repz or test insl fisttp adc cmpsb insb fiadd push sbb xor (bad) (bad) repnz sar adc push idivl lods or sbb rol lea (bad) rex.WRB jg pop mov mov (bad) jb fcoml and sub retq sbb push sub sbb ja mov jbe movsb (bad) mov movsl shlb sbb or sti movabs push and xor sub sbb repz adc jle in rex jg mov jp pop stos imul repz (bad) bnd subl mov lret mov hlt sti lods cmc lock (bad) (bad) movabs xrelease callw lods int3 in rex.RX (bad) jmpq stos insl cmp rex.WRXB (bad) rol fisubl xchg stc movabs or rex.R shrl cmpsl and lock xor fisub movaps cmpsl and loope sti mov hlt and (bad) jo test cs lret jrcxz or in (bad) mov in (bad) (bad) movabs icebp movslq in movabs (bad) or retq mov or fistp fnsave hlt cmpsb (bad) callq imul xlat js out (bad) (bad) ja jge jne loop je repz and mov out add fcomip jrcxz add data16 je or (bad) cmp add es outsb push hlt (bad) rex.XB sub (bad) cwtl jnp jg ds fs repnz (bad) mov ss (bad) mov rex cmpsl (bad) jg (bad) (bad) xchg out pop rex (bad) or in lret insb rex.W outsl enterq rolb loope mov rex gs lcall pushq movslq cmp or test (bad) in repz xchg retq sarb iret mov in lods stc enterq fmul xchg retq mov (bad) scas (bad) imul insb adc clc sbb pushfq rex.WRXB enterq and movsb fldt pop jae out sub (bad) fwait sbb mov or gs test (bad) lahf mov pushq fs mov jmp sbb rex.WRXB mov ss fmul (bad) add (bad) data16 int3 mov lock cmpsl xchg fldl fmul sbb callq movsb sub test ror mov (bad) (bad) mov push rex.W sti in jrcxz pushq jnp rex.WRB xchg addl lods cltd and in jrcxz,pt int3 insb addl or xorb pushq (bad) in mov and js movabs (bad) xchg adc sbb repz je in xchg sbb and addr32 and outsb and and rex.WRX mov jae std (bad) push pushq outsb (bad) (bad) (bad) or or adc (bad) addr32 xchg sub sbb stos jne jbe fildll in movsb fadd test test pop incl mov lahf pop jmp (bad) push test adc rex lret (bad) pop pop and test insl jp jp cmp fisubrl or (bad) fcmovnbe mov loopne push out gs (bad) rex.RXB sub or or xor out shrb xchg callq mov stos adc jmp hlt addr32 rex.WRXB lock adc mov loop add (bad) pop in add mov jb loop callq jle int mov cltd test mov xchg out movabs mov in or ds and stc pushq loope int3 and retq cli gs lods insl mov or and xchg mul shll pushfq or repz sbb add jmp in sti jmp movabs clc jg gs cltd outsl (bad) pop leaveq (bad) fstpl xchg (bad) rcrl mull jbe or (bad) (bad) sbb popfq std jmp add sbb mov xor xlat movabs imul addl fildl (bad) sbbl outsb clc movsb callq sub push mov mov mulb ficomp jp addr32 jbe fild hlt icebp mov add jl rex.WRB and int3 cwtl shl push in sub pushq jge pop push adc mov dec sub rex.RXB outsl movsl sub lret pop (bad) cs (bad) mov adc push callq jmpq in and cld (bad) clc test callq int in or jbe (bad) sbb movabs loope pushq pop xchg (bad) cmpsl out (bad) data16 jl xchg enterq (bad) mov adc leaveq rex.WRXB in cs retq xchg rex.W (bad) pushq enterq rex.R leaveq or push cmpsb or and pop cmp movabs int3 hlt imul push (bad) jle (bad) int pushq rex.WRX jmpq es cld rex.X sti xor es hlt idiv movsl mov (bad) jmpq cmc movsl and sbb cld out and popfq movslq outsb and out cli jb mov mov mov ror sar popfq fdivs add pushq fstps cltd rex.WRX jrcxz jrcxz jmpq test push mov jmpq (bad) cli hlt jb es leaveq jbe addr32 xorb (bad) mov (bad) iret (bad) outsb rex.XB retq jae rorb imul sarb lahf adc jmpq xlat loopne data16 cmpsl loope pop cwtl stos shlb or adc cmpsl cmc add adc (bad) jrcxz (bad) std xchg hlt test rex.XB sti callq adc xchg pushq (bad) fsubs xor (bad) (bad) fild stc jo jmpq pop cmp movabs mov xor hlt movsb out repnz sub xchg xor cmp fnstenv jg cmpsl outsl jmp push pop and clc cmp movabs repnz in pop movabs out out (bad) sbb cmc clc jp rex.W adc shlb movabs xor pushfq fs rex.RX (bad) outsb lock gs rex.XB (bad) in (bad) sbb jp (bad) loopne mov in test pop rex.RXB mov xor je adc pop (bad) or rex.XB pop mov sub callq (bad) lcall mov test hlt sbb adc pop clc addr32 mov (bad) xor xchg cs test (bad) cltd ja mov rex.WB lock sbb nop xchg hlt mov mov (bad) xor pop mov jbe pop (bad) jne orps rex.W xor fnstsw (bad) (bad) repz (bad) ds (bad) jp iret repnz push iret lock retq scas (bad) pop test mov (bad) mov jrcxz (bad) mov in fcmovnbe mov (bad) leaveq sub lock shl lods out fisubr flds in loope cmp rex.WRB cs andl insl jrcxz lret movabs push jrcxz xlat repz or fistpl divl adc rex.W mov (bad) xchg lods mov test push sub push jmpq mov cmp fisub jmp sbb jmpq in jmp add movabs outsb mov lods callq or (bad) adc retq add iret lret rex.RX rex.XB or in adc leaveq mov cld adc out (bad) enterq jmpq (bad) imulb leaveq rex.WRB sub lahf imul mov in jmpq mov imul lret xor xor repz cmpsb sub out (bad) hlt cmc icebp data16 out sbb lods (bad) mov sbb in jmp sbb sti enterq mov (bad) cmp sarl mov outsb sbb cmp std (bad) (bad) (bad) or cld rex.B pop pushq (bad) xor leaveq loope cmpsl xchg enterq adc lods sbb pushfq (bad) mov jge cmc sbb ja enterq movabs (bad) jne fcomps test rcrl rex.WRX fnstcw mov nop in add jmpq push add mov or adc test xor jmpq mov fistp pushfq cmp mov imul mov test out or imul lods loop jp and out callq rex.WRB adc add shrl loope (bad) or stos packssdw sti jae (bad) scas in (bad) xlat pushq mov out cltd mov movsl (bad) jrcxz mov (bad) andl outsl fisub or xor add (bad) pop subl nop pushq ds and pushq nop cmp pushfq hlt or mov rex cltd out mov cmpsb imul in rex push scas rorb clc sub cmc (bad) jmpw xor and es jns jl jrcxz div repz nop in mov int not test mov stos fcmovnb nop jmpq outsl ficoml lods xchg cmp loope movabs pushq jo in shl xor mov mov stc mov in (bad) out hlt data16 nop fmull (bad) inc cmc cld cltd pushq jmpq imul rex je rex.RB stc (bad) xor cli xchg xor sti mov ja add push pushq out mov mov xor and (bad) or adcb repnz testb in xchg paddsw xchg lcall (bad) out js or icebp or cmpsb sub jo rex.B fs std loop sti push or lods pushq loope xchg (bad) jrcxz lea rex.WR mov mov (bad) pop add pop shrb (bad) movsl cltd mov rex imul rex.B not callq es cwtl jnp mov insl (bad) (bad) in std insl rorb pop sbb mov rex.WR leaveq icebp sbb mov repz std (bad) (bad) movabs or xchg (bad) test push data16 hlt push nop ja fsub sti (bad) movabs in sahf cli and movsb clc push adc cli in jrcxz adc lret sbb or add in xchg jmp stos or test (bad) clc test jp lret jg sub and mov sbb xlat sub push or and add jrcxz (bad) jg or (bad) in clc (bad) jbe andl or jrcxz std pop (bad) or int3 adc xor sub movsl and stos cld lods rex rex.WRXB outsb nop callq ds mov icebp (bad) imul sub fstl enterq xchg xchg test fstl cltd repz repz rex.WRXB out je xor int xchg adc (bad) fdivr (bad) shr movabs fsubs insl stos in int3 (bad) rex.R push pushq out clc jp jmp lock or jmpq mov (bad) jmpq cmc jrcxz iret retq movslq (bad) in jge push (bad) mov loop sub (bad) add iret xlat sti out sbb lret or jae out movabs mov push pop push enterq (bad) movslq xor sti xchg (bad) hlt mov ror iret sbb xor cmp pop (bad) xor callq movabs notl callq int (bad) pop xlat data16 cmp rex.RX (bad) add out add in fcomi pop mov cmp adc or mov xor cmp add int3 (bad) addr32 ds movsb or sti pushfq mov lods (bad) fmul and leaveq (bad) (bad) movabs cwtl rex subb sub movsl xlat adc lock lea loopne add movsl in clc (bad) jno retq imul cmp sub rcrb rex.RB and (bad) addr32 xor callq movslq in pushq js (bad) sbbb rex.X mov (bad) mov (bad) pop loopne sbb movabs (bad) outsl sbb insb out pop jrcxz or xlat negb (bad) in je,pt (bad) jo (bad) rex.WR jecxz (bad) gs sbb in jg callq push adc ds sti sbb fwait imull movsb mov xor sar je rol or (bad) jo fwait stc and mov rex (bad) (bad) (bad) iret and mov movabs fadd callq movabs lods (bad) xchg sahf iret imul rex.WX or shlb add and xor xor (bad) decb pop fbld or adc jmp scas test (bad) (bad) mov and push shrl mov mull push addr32 outsl mov idiv xchg fldt leaveq fdivrl jo enterq push retq push cmp push rex.X fnstsw insb mov gs lock ficompl mov (bad) xchg lock out or (bad) stos int3 jmpq jno rex.RX fidiv outsl adc jmp mov mov clc es data16 lret repnz fbld sbb and adc fwait or jg (bad) imul test mov or out out gs sub sarb (bad) movsl fistp popfq pop nop jno shll rcl adc sub (bad) movslq retq cli enterq sub insl mov callq sub bsf pop mov div (bad) adc out (bad) jg mov in (bad) jg (bad) lock (bad) sar in imul repz in (bad) lock callq cwtl rex.R iret mulb rex.WRXB rex.RB in (bad) and add cmpsb pop incl movsb jmpq mov mov fild (bad) rex.XB rex.XB movslq (bad) in rex.XB pushq (bad) adc (bad) mov in sub jne (bad) cmc (bad) lods xchg es stos ffree cmpsl xor retq jo (bad) (bad) rex.WRX movabs sbb repnz and push out mov xchg cmp adc push (bad) sub (bad) js rclb lahf in icebp or mov insl and hlt (bad) mov add (bad) (bad) movabs int3 data16 sub rex.RB jmpq (bad) ds and test rex.WRB enterq imul adc loope insl enterq jns push clc mov clc (bad) pushq rex fs mov mov rex.RXB test fbstp rex.WRX data16 iret (bad) movabs sti cmp cmc shlb sbb movslq stc (bad) movabs js or push jg jo cld (bad) fcmovb add outsl jmpq or cli gs sbb je mov adcl jmp pushfq retq lret xchg (bad) data16 add or pushq or in mov nop outsb jae mov jo adc jns (bad) in out callq mov xchg (bad) cld cmpsl int mov sub fmuls shll or (bad) (bad) (bad) mov (bad) add and sahf cwtl (bad) es add fs movabs (bad) sub pop rex.WRB jno std imul sti and mov mov cmp (bad) loop or (bad) mov enterq movsl rex.XB xchg int xor adc nop (bad) loop divb jmpq loopne movabs cmp out imul jae fadds shrb out or sub rorl mov in movabs jl enterq fnstsw jp (bad) test and addr32 jrcxz (bad) rex.W (bad) test sarb rex.XB xor or and cmp cli movabs rex.WXB jns or lret insl sbb and sub rex.WXB sbb lock fidivr (bad) lock and cld movabs mov imul movsb nop jg,pn (bad) mov (bad) jno mov pop rex jbe jae mov lods sub (bad) (bad) fcomps lods andl jmpq xor xchg lret (bad) adc std or insb lahf or jmpq and (bad) sbb pushq es stos nop push icebp xor sbb or cld sub (bad) in mov outsl in xor add sbb fucomp fwait out lret mov insb test rex.B (bad) repz (bad) mov movabs pushq rorb xchg jmpq fiadd ljmp std (bad) int3 push lcall callq rex.WRXB jg lods test ja loope fdiv test adc mov cmp in (bad) mov add sbb shr lods xchg rex.B mov in gs adc retq int (bad) mov movabs jmpq or icebp (bad) lret mov sub mov enterq lock addr32 movsb lods rex.WX and push xor enterq or fwait (bad) xor icebp (bad) fidivl iret test imul mov mov push icebp (bad) out fisttpll jns add mov jno mov jg movslq adc xchg gs (bad) rex.X ror adc sbb (bad) (bad) adc shrb (bad) repz clc movsb cmp (bad) cmc or (bad) in pop (bad) adc and in movabs addr32 out loope in clc (bad) xchg movabs cwtl sub fcoms or sub mov adc xlat (bad) push callq (bad) mov pushq and add or test fistpl retq cmpsl mov ja in sub xor mov add jo popfq xchg fwait cwtl rex.WRXB (bad) (bad) cmp lock xchg stos xchg mov lods rex (bad) rex.WRXB ljmp (bad) and (bad) movabs in sub insl sbb retq (bad) sahf cmpsl int incl cltd mov (bad) (bad) icebp test xor sbb out sub movabs adc (bad) (bad) rex.WRX js js addr32 jb outsb lods xchg xor or cmp mov outsl repz (bad) rex.R test (bad) movsl pop in or movabs or and mov or (bad) xchg fcmovb test (bad) add sti fisttpll jl lock fisubl (bad) jb jrcxz ds cmpsl rex.B stos fstl rcll insb add sbb (bad) (bad) test rex.XB mov stos clc adc sub roll cwtl pushq pop push xchg rex.B pop mov push (bad) or sbb or sbb rex.WRX and rex.WRX jmpq (bad) retq std (bad) (bad) stc mov cmp sbb rex.WB xor jns fistpll mov pop lea fs rex.RXB test shld callq int mul lods xor loop or out cltd loop sub and outsl pop cmpsb je jle (bad) and and mov pop movsb lret (bad) in or jae in push and jrcxz movsb cmp add rex.WRX lock pop pop hlt (bad) popq mov (bad) movsb jne (bad) and rex.WX repz clc mov lods (bad) fisttpll int3 (bad) xchg sbb or xor jge rex.WXB sarb (bad) (bad) std mov rcll (bad) pop push jne sbb test test xor or jle insl (bad) insl mov pop lahf insb jns rex.WRB in (bad) mov cltd mov sahf movabs xchg leaveq test movabs rex.RX add jb movabs (bad) out rex.WR decl pushq rex.WRXB rex.RB in insl mov rex.RXB rex.WXB mov mov xchg rex.WX testb (bad) sbb (bad) xorb test leaveq jmp sahf out jo jg lret add test xchg ss je hlt lret rex.W (bad) mov insb callq (bad) jae mov lret (bad) mov sub incb sub cs (bad) cmc or rex.WXB icebp jbe in std and mov jmp rex.WX fwait or jrcxz push scas movabs (bad) sub and (bad) movsl out sahf mov rex.XB repnz jle (bad) cmp sti pop xchg adc fisubl test addr32 (bad) loopne test or imul addr32 jle insb movabs gs add sub rex.X loop jmp or (bad) adc leaveq (bad) (bad) and repz imulb and ja or in (bad) mov loope or or sub outsl repz or mov callq mov rex.WX rex.W adc (bad) in (bad) callq rex.X jnp out sub repnz jbe leaveq add (bad) (bad) xchg test test mov or mov addl lret int3 retq rex.W divl cs not sub repz xor (bad) mov or jmpq rcr rex.X push in (bad) jne or and or ds xor and jrcxz rex.XB or cmp mov rolb insl (bad) (bad) cmp stc callq lahf rex.WX stc (bad) out outsl in icebp (bad) xor pop fiaddl mov cmc clc (bad) xor fistl add test out loope ja clc jbe pop fldt add or xchg outsb clc xor xor mov or mov repz sub add mov fcomps in icebp and cli mov nop sub cli ja clc out jmp sub rex.RB rex.WB and (bad) jmp lret data16 mov nop (bad) loop xchg movabs sub rex.R cwtl stc adc fdivrs mov jg cmp mov fs xor in jae (bad) rex.W pushq leaveq jrcxz in mov test sahf rcrl cmp cwtl lock mov in movabs in (bad) and int3 sbb (bad) cmp lods cmp mov adc or outsl ror mov mov lahf cmp fcmovnb outsl cmc xchg stc cltd loopne (bad) or (bad) in add sbb imul jnp add jmp or push (bad) ffreep or test repnz test mov and ja cli outsl xlat ja icebp (bad) mov sub (bad) and or xchg (bad) cmp sub rex.WR xchg jae ror psubsb push int and mov (bad) mov push or mov xchg pop xor cmpsb pop and (bad) cmpsb imul out sbb pushfq and jmpq decb sbb (bad) lods in es rex.WRXB rex.XB movslq retq insl cmp pushfq test xchg (bad) (bad) fs xchg leaveq pushq (bad) (bad) (bad) lock std rex.WRXB sub je in pushq xor int3 sbb out xchg pop pop js (bad) rcrl xor data16 sub mov adc mov out (bad) jge int3 or outsl hlt push jno movslq (bad) pop (bad) subl (bad) imul pop push jrcxz fnstcw cmpsl xchg fcmove push adc xor (bad) xchg jne outsb sub (bad) cmpsl jnp icebp (bad) je add mov pop leaveq and xchg (bad) xor sub out mov jbe xchg jo imul xchg mov mov shrl or rex.WX mov mov outsb imul clc or lret int cmp mov (bad) outsl or repz jb jmp xor sub add clc movabs rex.WRX test stos xchg jo (bad) sbb cmp (bad) mov xchg mov add (bad) std cld (bad) mov adc out iret rex cli and (bad) cmc in nop (bad) divb enterq movabs in (bad) cld sbb data16 incl sub add xchg rex.XB cmp jae inc xchg (bad) test or and sbb outsb sub jo xchg push xor adc jmpq cmc lret add xchg shrb jp cli xchg andb jbe jmp lods lods repnz in pop (bad) rex.WRXB leaveq (bad) sub xlat jrcxz or stos insb pop jmp or jl leaveq test mov and repz push pop movsb rex.X jmp add retq (bad) sub sub sbb jmpq pop hlt mov (bad) jb pushq enterq fwait cmp mov jge notl test cmp idivb mov adc callq ja mov rex.RXB or cmp fwait (bad) rcr ja imul imul jrcxz in cwtl jo jns rex.WR lock push xlat and loopne or pop in shr sbb test stc fs andl sbb lock incl (bad) out cld movsb fimul push jo mull callq (bad) movabs mov xchg clc or xlat ja adc loope clc rex.RXB imul lret (bad) gs sarb xor sub andb rex.RB mov xchg vpacksswb negl out sub rex.WRXB imul add mov (bad) lea mov and jrcxz fstl setno and mov mov jle movabs out cli jns cmpsl jnp cmpsl (bad) insb sbb int3 (bad) (bad) repz sbb and (bad) (bad) mov in ds (bad) psubw (bad) mov mov mov rorl mov enterq test decl push or rex.RB popfq ffree sbb movslq mov pop jmpq jns sbb mov cmp xchg out mov rclb push (bad) mov js enterq (bad) mov (bad) (bad) (bad) lods sbb insb (bad) rex.W jle pop (bad) (bad) xchg scas (bad) sub shlb in rol (bad) or adc mov mov mov cwtl rolb iret or sub stos hlt lea lret repnz and (bad) imul (bad) imul or test retq out and (bad) loop jg xor mov xor rex.WXB add nop scas mov movslq stos cmc rex.WR mov or mov mov sub and or mov fnsave xchg mov je loope (bad) shrl add mov fdivrs push jnp mov jb in movsl movslq incb movsb mov or (bad) (bad) je retq cld out movabs fcoms gs cmc imul callq xchg mov pop pop mov insb in (bad) mov xor and rex.RXB data16 movabs or test imul (bad) and rex.XB subb (bad) sti mov or pop sbb movabs movsl mov hlt vpsubsb pop mov movabs test and jno insl iret movabs out movsl fildll test fcoms sarb xchg stos out lahf cld sbb cld mov test fldenv lret mov xlat imul insb jrcxz add cmp gs je (bad) mov lods divb mov sub xchg lods mov cmc outsb shll sub jno repnz rolb mov ja addr32 int nop/reserved adc pop lahf in (bad) jo mov lahf xchg sti sbb xchg roll int cmpsb (bad) pop sub repnz xchg (bad) in in or fisttpll popfq negl pop (bad) (bad) fnop adc out jg adc test lret jae (bad) imul hlt mov fs mov rex.WR push and imul or jae push stos push lret push loop pop in sbb xchg rex.W (bad) xchg imul sub pushq stc mov push sub mov test and iret and or mov xchg fwait icebp test leaveq rex fs jnp idiv and (bad) xchg (bad) jg pop mov lods mov mov (bad) negl (bad) push or fstl lahf icebp pushq pop lret rex.RXB out sbb (bad) mov outsb hlt push xchg repnz xchg sahf ja xchg cld pop mov sub andb (bad) imul (bad) or xor or cmpsb in loope (bad) rol lock iret in gs movsb (bad) xchg adc and (bad) (bad) and push ficomp pop sbb mov scas neg ljmp shlb (bad) out (bad) js imul or loop test (bad) out mov xchg or (bad) rex.RX lods mov rcr (bad) jrcxz jmpq sub sub sub movabs fs cmp xchg out rcrb or stos outsl shlb xchg testl test stos and sbb jae repz in loop test in jo in (bad) pop in stos retq pop data16 cmp callq mov in and adc fwait (bad) scas addr32 jne pushq mov xor mov (bad) and add rcrq (bad) (bad) cmpsb out push out in fwait loop (bad) (bad) test pop xchg sbb (bad) loop (bad) movabs pop retq xlat (bad) sbb xor jns ror fisubrl fs out pushq rex.WRXB rex.WRXB xlat std (bad) xchg add pushq cmpsb rex.WRX or rex.RB rex.WRB test imul test adc fstpl jae ss adc out jg lret pop xchg or or sub test jae lea or or stos add or pop sbb out adc movsb push or (bad) add adcl rex.X add sti addq pop cmpsb mov rex.WXB movabs rex.R rex.RXB lods movsb (bad) xor sti pushq insb divl rex.XB xchg jmpq fs or (bad) sub pop shl movsl (bad) (bad) fist loop adc mov (bad) callq mov cwtl cmpsb (bad) movsl (bad) or stc rex stos mov pushq sbb in sub (bad) test je mov addr32 (bad) push sub int cmp (bad) mov mov jmp xchg repz rclb not mov lock stc add (bad) lea sbb mov jge ds sub fdivrs loope or fldt popfq test fsubs nop push (bad) jg imul and sbb xor (bad) push push sub es pushfq outsb divb imull (bad) repz sbb (bad) jne mov pushfq mov pushq push (bad) clc test mov jo mov sbb push (bad) out (bad) mov jrcxz pushq pop ss add pop fcmovne (bad) std (bad) sahf mov push jl rex.X cmpsl xchg lods out mov movabs sub test test cmc (bad) xlat cmp fs (bad) (bad) mov (bad) adc (bad) iret mov adc rorb nop popq mov (bad) (bad) (bad) lret sub rex.X (bad) lock adc insb cmpsl pop sub hlt fs (bad) fild hlt mov imul mov rex.WR rex.X mov imul (bad) or mov adc or iret adc (bad) outsl int3 (bad) mov stc (bad) xchg retq ror cltd negb xchg rex.WRX icebp imul rex.WRXB rex.WRX popfq xchg movsb repz xor rex rex.RB fdivp ds repz jb pop movabs (bad) ja push pop lahf imul movsb mov rex.W rex.W clc or and sti (bad) push mov rex.WRXB stos mov xchg mov jbe or lods out rex.R fstp rex.WRXB fidiv mov bnd rex.WRX pop push insl cmpb fidivr add sarl jmpq fdivs movabs and popq mov and fdivrl add std rex.WRX sarb push ror (bad) fnstsw (bad) (bad) xchg test (bad) loopne int and neg gs enterq (bad) clc jrcxz out xor sahf repnz add mov std cld mov add adc xchg clc clc cmp cmp out (bad) jb mov sub shrb mov cmpsb out popfq push repnz sbb out mov lock movabs test (bad) push out add repnz leaveq enterq retq data16 in imulb jne gs cmp pop (bad) lods jle test sbbb pop jne addr32 add (bad) mov xchg adc vpmovmskb pop inc and (bad) out rex.WXB fwait sub pop movsl hlt lea or retq rex cs push push cwtl clc and xchg out ss cwtl rex.XB fdivrs repnz xchg int3 stc adc loop,pt (bad) rex.WRXB addr32 mov outsw (bad) sub sub and xchg hlt (bad) out xlat jrcxz (bad) (bad) xchg xchg mov (bad) jmpq sbb sti (bad) (bad) (bad) rex.B out retq xchg sub push outsl hlt xchg (bad) out outsb rex.B pop lret jns rex.RB test xlat rex.WX mov (bad) jo (bad) mov (bad) add sbb cmpsb cltd and jle xchg fiadd out mov mov mov jg cwtl and or movsb (bad) jnp xor sub test (bad) movslq iret adc xchg pop (bad) lods jnp (bad) gs cli movabs fs cmp jg mov (bad) jae rex.WRXB or in mov mov lods mov (bad) repz adc pop and loope mov fidivl sub out in lret test adc xchg lret xchg lahf mov in mov and and out or xor rex.XB lock (bad) imul ffree adc push rex.WR packsswb (bad) or xchg retq (bad) out pushfq xchg mov (bad) jno iret cmpsb xlat movabs iret callq adc mov jmp fimul (bad) mov iret fist leaveq adc mov pushq lods cmp fs xchg rcll cmpsl mov test (bad) mov repz or jbe cli or rex.WRX mov rex.WRX push faddl movabs (bad) clc mov cmp pop mov cmpsb ljmp enterq jae (bad) xor xor cmc mov xor out sbb shrb movl test retq rex.W (bad) adc sarb adc sbb in enterq (bad) xlat jmpq (bad) iret mov jne fdivrl enterq addr32 iret xchg in cmp shl lea jrcxz out xchg xor rex.WXB rclb fsubs movslq fisttp jnp (bad) rcrl (bad) mov cmc fbstp iret rex.RXB jo rex.RX rex.WRX mull hlt movb jp and xchg (bad) movsb insl xor rex.WR lock mov nop mov cwtl push (bad) (bad) pop (bad) cmpsl (bad) (bad) (bad) cmp outsb (bad) mov jno mov (bad) rorb or mov (bad) (bad) mov fldcw mov add data16 clc sahf pushq jo rex.RX insb (bad) lret jb push test (bad) mov jecxz pop adc or scas fstpt pop xor (bad) jmp mov mov rex.XB repnz sub or cmp (bad) xor sbb adc repz xchg movsl movabs and out pop addr32 in (bad) std xlat add (bad) callq movabs out and vmulsd retq sahf jnp (bad) mov mov lods imul test jmpq pop out rex.X clc icebp lods or fild (bad) shl sarl lock cmp int and gs xchg add movabs cmpsl imul (bad) xchg mov test sub rclb imul test sub rex.RXB (bad) adc xchg sarl movsb (bad) mov mov js out (bad) jg add lea jmp (bad) cmpl mov mov movabs test nop (bad) jmpq lea mov repz lods movabs lock rex jbe retq mov adc (bad) cs or mov and add callq lahf sbb jl sub sar push test fnsave (bad) and lods callq (bad) cmp jl rorl push jmpq adc (bad) ss or movsb sub mov pop sbb (bad) cmpsb mov movabs (bad) lods fptan rcl xor and (bad) xchg in movabs pushq push rex.WR (bad) and movsl pop rex.RX lock mov dec test in rex cmpsl and xchg ds test test lock sbb mov xor mov sbb push cs jle test rex.WX adc mov je roll rclb and rex.RXB or mov out sub mov cmp and rex.WXB jns pushfq cmpsb scas lret rex.X jl fisttpl (bad) sub jg mov in or jp (bad) fsubl lock xchg hlt fs mov and rex.WB (bad) sarl cmpsb sbb mov dec (bad) fnstsw fdivrl nop mov movsl (bad) or jge retq cld shl frstor in out lods add xor out scas mov cmp jg in insb pop xchg pop xor and or xor loop leaveq jle out add lods (bad) rex.RB rex.WXB rex.X repnz jmp scas (bad) or rol (bad) (bad) pushq adc pushq xorb outsl adc jne (bad) fildl adc (bad) lods loope jp callq ficom leaveq movabs fidivrl xlat lahf mov movsl lods pushq rex.WRXB jg sub or push loopne fbstp movabs movabs (bad) pop (bad) cmp test es (bad) adc rex.WR fs jrcxz out rex.WX (bad) or stos jb retq addr32 retq and leaveq sbb (bad) mov (bad) shlb sti movslq rex.B cmp fidiv rex int3 sub iret loope shlb jmpq push (bad) out or cmp test iret out icebp pop jrcxz lock es (bad) jge stos mov sti or movsb cmp cs mov test (bad) and jmp mov testb (bad) iret sub pushq test add lret (bad) (bad) or movsb shr add (bad) imul and mov mov mov rex.RB pushfq fcmovnb mov rex.R rex.WR xchg stc in rex.WB xchg setl fwait (bad) (bad) subl pop push (bad) ljmp pushq xchg mov shll xchg hlt outsl repz cs data16 adc add mov rorb and cltd mov shr adc movabs push add and cmp imul or retq pop adc mov and fisttp in nop incb test icebp movsb sub movabs cmp repz test in rex.R (bad) lret (bad) push push lahf sbb leaveq xchg sbb repnz and sbb (bad) lods (bad) movsb fs outsl jle lret enterq (bad) in sub (bad) test sarb adc (bad) (bad) movsl in sbb (bad) fisttp (bad) push mov imul adc addr32 sbb rex.WX sub lods movsl movabs (bad) xchg (bad) or sub fstpt pushq adc and mov ljmp sbb seto fsubs (bad) xchg mov imul sub mov rex.WXB (bad) xchg jo cltd int3 pop pushfq (bad) jae clc imul mov mov and mov or in rcll nop (bad) jrcxz and xor jns adc mov or (bad) sub (bad) and or (bad) (bad) mov pop test out or adc (bad) ss (bad) (bad) jo clc shlb pop sbb stos insl cs callq out fcoms int or mov outsl xchg jle (bad) mov pop shll sub movabs loopne mov sbb fdivrp mov xchg lret (bad) rex.WRXB rex.WRXB cmpsb fstpl (bad) mov or adc jae or pushq xchg mov test mov xchg enterq cmp xor cs (bad) int ja sub repz mov sbb sub mov test fildll callq (bad) jb lahf and push sub lock xchg (bad) xchg pushfq push rex.RB xchg sar rex.B xlat lret rex.X es sub add xchg shr push (bad) xor out (bad) jmpq imul out xor rex rex.RB cwtl test loopl (bad) callq (bad) xor out push cs lods cmp in insl mov iret mov (bad) in or fldl outsb sbb (bad) (bad) jae xlat ja jo int3 data16 sahf pushq jrcxz scas rex pmovmskb (bad) xchg cmc rex.R sahf ds (bad) add (bad) in add icebp cli xchg fldcw jl movsl rex.W mov mov jrcxz test or mov (bad) jp sbb retq cmpsl cmc outsl cmp xchg iret rex.WRB rex.W callw lods pushq leaveq jmp fs in imul in (bad) cmpsl (bad) (bad) retq outsl fimul mov stos mov mov xchg pop or jmp sub clc sti clc and pop retq callq callq xchg (bad) jo hlt pop lock fisttp fisubr movabs jno (bad) iret (bad) decb out pushw out callq addr32 or xor cmpsb add or js (bad) (bad) fucomp mov rex.X rex.WRXB mov jns mov out pop add adcl in and pop jmp lret ja fist cmp lods cmpsb xor out mov mov xor (bad) stc (bad) sti (bad) mov push ds in jle mov fmul movsb mov ds (bad) rex.WRXB pop test xchg fist (bad) cmpl sti (bad) rex.WX rex.WRX sbb or repz out and (bad) (bad) mov add push mov callq shll (bad) adc in xchg loop int insb addr32 rex.XB sbb movabs fsubrp cmc in iret pop jae outsl scas (bad) subl (bad) (bad) retq pushq adc (bad) loopne rex.RB callq movabs or adc je push movsb jmpq out and (bad) cmc ss cmc ror iret or mov pop insb and movabs adc sbb add sub rex.RX in movslq jmpq and sbb push add adc retq icebp fistpll movabs stos not cmpsl je js (bad) (bad) sbb ja mov in invd loopel rex.RXB (bad) movsb sbb es mov movabs rex.WXB callq (bad) and iret cmp (bad) incl imul add rex.XB jnp rex.RXB add add callq pop cmpsl (bad) sar lock jno jmp sbb sub movabs pop add (bad) sti xorl cld pushq mov movabs stos mov (bad) sbb cmp pushq mov cmp push cwtl add mov mov rex.X sub (bad) movabs outsb rcl mov add mov callq sbb push (bad) popfq pushq leaveq rex.XB adc (bad) je and enterq (bad) out sbb rex.RB (bad) push movabs loope ja sbb jmpq rep movsb lea or (bad) adc icebp stc sub (bad) movsb jne mov rex.R adcl callq hlt jne sub sub or callq addb mov jmp (bad) xor out subl cmp (bad) repz loop mov fstpt rex.B cld xchg and movabs fs adcb cld mov adc rex enterq rex.W frstor (bad) pop shll test rex.WXB (bad) pop rex.WRB lret or fldl jp jg jmp rex.RX rex.XB mov cld (bad) mov pop std adc (bad) adc rex.RB sti retq imul xor adc (bad) icebp adc loopne cmp popfq callq and pop je or mov jrcxz (bad) xor or (bad) jp movabs loope out sbb lea xor lahf movabs jno ss sub ds xchg xchg pop addr32 xchg fldcw gs jb repz sbb jrcxz mov shl push add leaveq sub sub sbb jb,pt jmpq jl (bad) cmp pushfq add (bad) and rex.W addr32 hlt insl add mov xlat fsubr test rex.W and fldt and rclb mov sub iret fistp in imul jnp outsb jmp sbb (bad) loopne and (bad) pop hlt jae icebp leaveq xchg outsl movabs jo fcoms pop and iret add mov mov frstor imul out cli lret (bad) jbe loope cmp movsl xor mov jae mov lret jno in rex.WB in cmp movabs in clc out rex.R shr add ds cs iret pop (bad) add sub rex.RX xchg clc movabs (bad) (bad) ror fwait xchg mov (bad) es sub test mov stos callq insb xchg sbbb mov insb xchg fsubs lret cli cwtl mov (bad) rex.WRB rex.X fsubrp pushq fs clc js retq adc mov in movsb rex.W push callq (bad) and and fimul callq (bad) add xor pushq nop (bad) sbb test addr32 lods fcomip iret movabs idivl iret cld clc shlb fnop iret in movabs or rex.W rex.RXB sub (bad) mov (bad) mov nop shlb nop or retq (bad) sahf rex.W lock xchg (bad) jb cmpsb rex.XB rex.WRXB mov clc mov shlb enterq cmpsl iret rol ror fldcw rex.WRXB pushq fisub pushq leaveq rex.WB xor (bad) rex.RXB jo jns rex.WRX callq adc pop cmp cmp rex.WRXB in and lods in jmpq (bad) (bad) or (bad) mov out mov jle test (bad) (bad) ja (bad) stc rex.WRXB out xchg push (bad) (bad) addr32 and sbb sbb sbb (bad) sbb adc repnz mov hlt and callq in xchg int3 (bad) movsb pop (bad) push or (bad) sub (bad) icebp ror jp outsl lret cmp (bad) jo lods (bad) push (bad) callq andl movsb rex.WX (bad) lods stc lock ss clc leaveq addl adc adcl xor jno jmpq in xorl add adc push repnz sbb xor add or add int pushfq mov xchg stos adc cmpsb pop or seta stos jl or add lret xchg iret (bad) movabs jo pop sub lret outsl fdivl lea mov jrcxz pop (bad) scas andb or push in loop and add (bad) (bad) jrcxz (bad) out sub leaveq lods pop and (bad) cli lods scas out sbb movabs mov in and movabs (bad) adc sar sbb retq xchg (bad) cmpsl xchg mov movabs (bad) fcmovbe mov in or lock subl fwait clc (bad) cwtl jae rex.WRX cltd jrcxz mov pop (bad) out shll xchg adc sbb xchg cmpb rex.XB cmp pushq (bad) in test andl in sub imul sub mov pop test adc callq jb xor retw popfq jg xor test sbb pushfq (bad) (bad) or sub xchg (bad) sub cmp sbb sub lods test movabs movabs jg (bad) callq movabs movsb pop lods es jrcxz ror add mov (bad) int pushq xor rex.WRXB data16 adc addr32 movsb xlat out pushq fstps movsb cltd cmc repz xor mov xor sahf mov (bad) rex.R mov and movabs sub rex.RX (bad) sbb rcrl ss (bad) callq imul (bad) mov rex.RX movsl jo rol orl fisttp (bad) gs stos es mov (bad) stos scas jns xchg ss cmp fnstcw mov xlat pop pushfq (bad) outsl insl (bad) fistp adc shrb rex.RX out callq (bad) movabs loop int3 fiaddl or subl and rcpps (bad) ja int enterq rex.RX ds (bad) shlb sub adc or cmp (bad) mov fisubr fs and and movslq (bad) jg xchg push (bad) loopne,pt out or xchg jrcxz (bad) mulq ss movabs cwtl pushq lods push pop js sbb je test imul or fwait add sub add callq jo popfq sbb in iretq cs (bad) pop pop fsubs clc pop rex.W jg rex.X xor push sub insb and or enterq jnp scas adc in fimull and mov loope test callq cmpsb jmp jle xor and (bad) jno mov and and fldl (bad) push insl jb mov mov std pop icebp hlt int3 xchg out pop enterq jle (bad) int sahf idivb sbb ficom insb mov movsl rex.WRXB retq or in imul fwait sbb pop test xor jmp test lahf add out callq insl sub (bad) mov xchg fs or mov movabs (bad) ds out in (bad) ja outsb movabs callq mov out xor movabs and (bad) cs mov rex.RXB rex.WRXB leaveq or sub cmp sti xchg or popfq pushfq test mov cs sbb rex.RXB (bad) cmpsb jl (bad) rcl xor (bad) cmc cmpsb insb or mov stos movsb je pop push rclb clc xor jmpq mov jnp (bad) repz rex.WX rex.WXB or scas sbb enterq jbe cli mov or rex.RXB movabs imul ficom out (bad) nop in pop andl xchg shr movslq cwtl rclb out xchg bnd and in or jp movabs shrl and lea nop jg int3 cmp out push xchg jnp lods jb jno add cld fbld fmuls jo rex.WRX repz clc sbb (bad) shl (bad) or jo test cmpsl and or rex.RXB mov cmc (bad) sbb ds mov rclb jbe test (bad) sbb fdivrs cmp popfq imul lock push adc movabs mov cmpsb push fcom push mov cmp or or es movabs (bad) shlb add xchg repz rex.WRX (bad) hlt or (bad) pop push mov (bad) jmp or (bad) enterq rex.WRB repz (bad) (bad) adc cmpsl jmpq icebp insb rex.XB repz sti and lock adc (bad) sbb gs and shll jo lea mov icebp pop lods rorb int3 out add mov (bad) pushfq mov out pop xlat sub jo mov callq rex.X jno xor jbe pushfq xchg cmpsl loope or push xchg xor mov sub or iret lods movslq lret mov (bad) pop cmpsb pop (bad) xor rex.RB mov cmc pop (bad) sar add mov jns enterq std or mov int imul je loop pop (bad) jrcxz or pop ror fbstp icebp test pushq (bad) mov outsl pop clc mov sbb jrcxz mov rcrb cmpsb insl in adc mov stos (bad) loope mov movabs cwtl jae mov popfq and sbb rex.W pop jo movabs leaveq mov jnp ja outsl mov jrcxz (bad) notl adc lret or imul jrcxz cmp hlt xlat mov movslq icebp (bad) je and jrcxz callq adc push notl idivb mov decl lods mov in lock cltd data16 sbb mov rex.RXB jrcxz decl cmp test (bad) in adc and xchg mov hlt xor mov jrcxz stc mov lock fsubl fstps icebp mov mov rex.WB retq out enterq pop (bad) gs or xchg and sbb push pushq xor stos movsb cmpsl fnstsw xor imull cmpsb adc xor mov (bad) lea mov jbe sbb mov jrcxz rex.WRB fwait and rcrb sti cmc jnp mov jmp mov (bad) in fnstcw lods cmp adc jnp mov sarl int in nop jmp mov jbe lods adc push hlt mov movabs mov test jle jmpq gs or out xchg and insb movsl (bad) rcll insl mov sbb or add and out mov fnsave mov incb sbb jo rcrl cwtl and and and int3 jle sub xchg jl sahf xorl (bad) (bad) jmp xchg iret xorb fiadd insl or jl clc roll cmp in fst fbstp adc xor or mov enterq rex.XB rex.WR (bad) clc cmp cmpsl lock pop sub and iret lods rex.RXB jno divb rex.WRB sbb cmc mov movsb outsb adc jmpq sarb xchg retq push or fsub in xchg in pushq mov and loop in jg sbb xor (bad) mov movabs je std movsl push and rex.WX cmpl rex.W xchg roll (bad) xor pop sbbl movsb xchg lods push iret je pop stos loope (bad) rex.WXB rex.R (bad) fnop clc in fidivrl push rex (bad) push callq hlt (bad) sarb (bad) jo cmp cmpsl (bad) in cmpsb add (bad) push and in (bad) (bad) retq icebp callq fnop rex.WXB rex.WRB mov add in je cmpsb pop (bad) or fbld xor xchg movabs adc mov std fucomp mov decl ds rex.X out (bad) rex.W jb xchg cs nop int lods cmc jmpq (bad) insl (bad) push mov xchg ja ds sub (bad) pop repz js sbb fimul (bad) rex.RXB test sub jo addr32 insb pop xchg jmpq and (bad) jg sahf adcb int adc pop or rex.WB (bad) (bad) cmc icebp jno mov jb rolb jo mov (bad) movsl addr32 sub pop rex rex.WRB or jno rorl mov retq je mov sub (bad) (bad) pop shll push hlt imul (bad) (bad) setg fisttpl sbb imul mov cmp test (bad) int fildll insb (bad) sbb hlt pop mov scas add lock sarb add jl xchg jle or xlat fwait add jb jne es pop pushq (bad) lock lock rex.W stos push fbstp mov (bad) ja jmp jb movslq sbb jmpq push repnz adc jl sahf callq (bad) movabs repz rex.RX (bad) loope insb mov cld (bad) push clc lock jp adc and push jg callq (bad) or adc movslq cmp pop mov jle subb jmp or jbe or lret cmp ds (bad) cmp movsl repz (bad) sbb push mov callq fiadd rcll movabs fmuls (bad) cld orl scas pop hlt stos jp push (bad) gs jrcxz mov lods outsb or rex.WRXB rex.WRXB rex.WR sbb sub xchg fild js xchg (bad) imul enterq pushq (bad) iret cwtl (bad) test jns rex.WRX addr32 or rolb retq or xor cmpsl add lods pushq pop (bad) jns lea outsb adc popfq retq ds cmp mov data16 (bad) loope lock sbb jrcxz (bad) xor sub adc sub pop fimul retq xor jns push jg cld fistl lret and retq shr add (bad) mov cmp and pop fcoml hlt or fisttpll out (bad) (bad) (bad) mov cltd lret pop rex.WRB rex.RX (bad) xor fimull loop (bad) in sahf es (bad) movabs rex.WRX push (bad) (bad) clc mov or repz retq leavew sbb (bad) (bad) ss icebp rex mov sti xchg in or insl movabs movsb fstps mov int out jle gs mov imul std push sahf xor adc fs scas data16 in gs jle pushq loop,pn mov retq or shrl push sarb insl retq mov clc adc shlb callq int or pop outsl jbe (bad) rclb loope imul push jnp (bad) (bad) push rex.B xchg ss movslq pop iret scas test or shrl callq cmp adc mov (bad) fdivr jae (bad) jg lret mov fistp faddl shrl push (bad) sbb (bad) sahf (bad) iret (bad) adc xchg scas sarl add cmpsl in cmp movabs (bad) icebp cmpsb sbb mov rex.WX mov pop in jmpq cmc xlat jg (bad) movabs sbb fdivp fcompl imull lock xchg (bad) fdivrl (bad) out stos jae cmp movabs jrcxz shlb frstor and fs sbb (bad) es (bad) pop or rorl (bad) movsl (bad) movslq leaveq addr32 sbb (bad) movabs (bad) popfq cmp out idivl or addl rex.RX or in xlat mov (bad) test sbb rex.B clc and mov xor sub xor jmp jns mov sar adc out (bad) paddw jns push mov sub addb xor (bad) hlt insb sub cmp xchg loop ficom and mov rex.B lods pop and rex.WX xchg add (bad) push rex.WX lock rex.RB test sti fstl rcrb mov lahf and jae sub push out xchg sti rex.WR sub in out xlat scas insb xchg (bad) (bad) icebp jg fucomi mov out enterq xchg (bad) fisubr (bad) addr32 es rex.WRB (bad) (bad) (bad) (bad) (bad) scas rex.RX push rex.WRX test decb mov insb jmp je shrb imul out xor push or xor (bad) fs sub (bad) mov pop fwait mov pop (bad) rex.R rex.WXB rex.W movabs push movsb (bad) rex.RX pushq (bad) (bad) xor xchg (bad) or rolb mov or addr32 mov (bad) movslq test add js imul jle in (bad) lret in fstpt jge xchg mov push push fsubrp sub sub jrcxz or sub outsl push mov mov pop iret mov rex or sub rex.WRX movsl fimul cmp rex.RXB out cld fadds repnz movabs mov (bad) pop cmp jrcxz sbb (bad) jno rex.WRX rex.W js or rex.WB test jae mov rex.R icebp or test movsl in (bad) fs push mov (bad) push stos lahf mov (bad) xlat callq incb (bad) hlt jg mov movabs (bad) clc jb adc mov (bad) jmpq shll loop (bad) fcomp clc cmpsl fucom cli insl (bad) in (bad) js out out movabs flds cmp enterq data16 sahf roll add out (bad) (bad) jmp pop ds int3 or stos int (bad) cli xor (bad) pushq outsl movabs add adc xor jp mov and leaveq repnz mov data16 jns or jnp jge mov rex.WB callq imul je shr mov neg stc sbb callq cmp mov movsb scas lods retq and rex.W ss xor mov fs in out push int jnp hlt cmc rclb cmp mov add mov (bad) xor (bad) mov ffreep (bad) out (bad) pop insb sub scas cmp mov add jl jbe cmp jae rex.XB gs jae fldcw (bad) mov sbb or (bad) repz mov es (bad) cmp fdivrp rex.B adc fmulp jbe imul (bad) (bad) je push movabs js rex.WRB clc cli mov sub push outsl xchg xchg sbb fs cs (bad) fcoms mov repnz and out insl stos add leaveq jmpq add ja (bad) insb fdivr xor jle cwtl loope cmp lock enterq mov (bad) jne hlt push lea mov and cmpsl mov js loopne imul (bad) xchg insl sbb (bad) jrcxz and pop jmp (bad) adc clc pushfq jl test pop movabs rex.XB clc scas jbe in int3 fcompl jno jnp adc movabs (bad) insl (bad) lock or rex.R es rcr stc outsl or out pop xchg enterq repz rex.RB cwtl cwtl xor (bad) mov rex.WXB (bad) callq mov add leaveq rex.RX iret lock stc (bad) or cmpsb movabs xchg fmull in push rex.RXB loopne add jg lret cli rex.WXB cmp stc xchg add (bad) pop sti xchg loopne mov or ss and cmpsb insl cmp and cli (bad) (bad) movsb fcoms push fstps lock lods mov sbb jrcxz sub (bad) (bad) sbb pop movabs sti cs pop or rex.RX movsb mov imul test sub rex.RX adc or jmp out mov jmpq (bad) leaveq (bad) push push ds (bad) clc mov (bad) add cmc sub addr32 fildl movsb pushq nop mov add fwait repz (bad) out ss sbb sub test jae (bad) rex.RXB callq (bad) data16 loopel and mov (bad) cmpsb out fistp repnz mov or mov in xor movabs (bad) adc dec or mov (bad) cld rex out lods test jrcxz jle add add mov or loop add mov jns and fistpll scas adcb lret mov icebp (bad) or jb (bad) (bad) rex.X lods gs add repnz xor (bad) lea jns retq cmp adc fdivr xchg (bad) movabs xlat int lock in (bad) lret or xor xlat sub or nop mov (bad) and addr32 or sub and ds mov (bad) (bad) jmpq int3 mov loopne icebp push test (bad) leaveq xchg repz (bad) js or and adc rex.WRB clc or in rex.XB xor gs mov adc (bad) (bad) imul data16 fisttp xchg mov loop (bad) outsl xchg sub or rex.RB mov rex.WXB jge loope pop movsb sbb (bad) mov (bad) cmpsb sub (bad) mov icebp movsb sbb and rep repz push jae (bad) insb rex.XB xchg xor es fcomps repnz ja cmc sbbb and out xchg pushq hlt rclb (bad) (bad) rex.WX and movabs and mov ja fldl push xor fiadd loope (bad) (bad) enterw mov and push push and icebp rorl sbb cmpsl adc lea push movsb insb pushfq (bad) insb and rex.XB scas mov mull (bad) mov (bad) lock pushfq scas fs test cmc (bad) outsl popfq rcl cld leaveq pop (bad) mov sbb and sbb pop test pop rex.XB push paddb sbb mov out mov or rcll xchg (bad) rex.R (bad) jae rex rex.R jbe cld in out loope ror xchg (bad) jo mov scas addr32 xor and je ss gs xor xchg scas jnp es sub pop push movabs xchg lods xor xchg (bad) xor sbb add int3 rex.B jge (bad) jl test insl rex.W insl mov movabs movsl cltd push rcrb jnp pushq pop test (bad) (bad) fld pushq sub (bad) or jns clc add out enterq jmpq insl sub movabs (bad) incb jle mov fsubs addl adc pushq mov jnp loop mov retq int iret in sub rex.WB rex.WR mov mov (bad) pushfq insb orl jae sub (bad) cltd jbe and xlat (bad) push sub movsl in jmp rorl movsb mov jmpq add (bad) jrcxz fldenv sub shrl subl in or cs (bad) jo or nop add (bad) push xor (bad) imul rex.RB jnp in fs (bad) cmp (bad) or sub in pop addr32 cwtl cmp clc and rex.B and fs leaveq callq cmpsb or xchg rex.WRXB pop cmpsl or jbe data16 cmpsb rex.WXB outsb addl loop gs pop (bad) add stos (bad) enterq fdiv movsb sbb (bad) or jo mov cmp test scas loope lahf rex.RB pop cli sub rex.WX fstp xchg and sub loop or rex.RB pop mov and (bad) retq or pop mov sub xchg jb callq fnstsw leaveq movsl sub mov cmp mov add jg and ds loop push fldt add rex js pushfq add orl pop movabs mov mov (bad) mov rcrl retq push cmpsl pop add (bad) xor (bad) push stc or jb (bad) mov (bad) fs in rex.WXB rex.WRXB fs mov js rex.WX je sub adc clc jo (bad) movabs rex.B rex callq cmpsl lock fcoms retq mov lea popfq rex.X js cmp (bad) in fbstp addr32 movsb data16 mov pop or movsb add adc nop rex.WB cltd (bad) imul outsb rex.XB jo mov (bad) (bad) sbb cmp jbe cmp mov pop jge movsb test mov movabs movsb xor bsr cld repnz lock andl jg sbb in mov loop xchg (bad) cli nop rcrb jb fcmove (bad) icebp pop or rex.WRX rex.WXB rex.WXB mov jmpq jns sbb jne add (bad) adc jbe xchg (bad) ja repnz loope leaveq sbb fs mov cld retq lock repnz mov adc jge addb adc je scas push cmpsb movabs verw or xchg and add and mov sub mull cs testl rcr (bad) hlt jb rex.W cmpsb push hlt adc pop sub addl or gs movslq cld shrb fwait nop ds iret (bad) enterq rex.XB push mov outsb stc je adc fdivs je push jrcxz popfq stos jmpq movsb movsb stc mov lods (bad) or out rex.RX (bad) rex.WRXB mov xor repz pushq mov hlt or mov push in cmpsl adc mov or mov sbb rex.B outsl mov mov xor fcompl shrl add loop jecxz,pt fildll (bad) xor xchg shll repz jmp sarl movabs mov movsb clc pop or iret (bad) (bad) fcmove (bad) and and (bad) (bad) sbb xchg adc cs (bad) (bad) (bad) icebp (bad) mov out sbb (bad) loopne fcmovu mov retq loopne push (bad) ja cmp shlb jrcxz sbb je or iret (bad) loopne jb xor adc in jg jge out pop xor jmpq cli xor lods enterq callq lea out sahf jrcxz test movabs and adc out jo sbb movsl mov (bad) gs xchg rex.X rex.WXB stos jns loopne,pt push sbb loopne mov (bad) jg test jg push (bad) xor or sub retq shr rex.RB push movabs mov loopne or (bad) insb movabs jmp or rex.X mov callq cmc iret repnz add out mov xchg cld pushq test adc and rclb xor xlat rorb push or loopne rex.WX xor adc rex.X iret (bad) hlt pushq push mov out (bad) adc add mov jno (bad) cli and in rex.R std pop test loopne imul jp enterq je jmp and add add fs mov mov or test shrb adc jmp sbb mov or (bad) xchg icebp dec sub add rex.WR mov or loope loopne stc sub or jo rep rex.WX in cmpsl lcall adc (bad) xor rex mov (bad) jb (bad) nop stos jmpq loopne and (bad) xchg xlat in (bad) xor push mov retq (bad) mov jrcxz imul mov xor test adc pop loopne mov (bad) mov in loopne pop mov push (bad) sahf mul sbb sub movl mov (bad) popfq ss and jo mov pop mov in jb adc or retq test clc (bad) xor jbe cmp ficoml frstor rex.RB rorl (bad) loopne mov rex.WR loopne cmp fidivr scas (bad) pop jg fdivrs dec lea sbb xor xchg mov mov mov pushq js js fs xor cltd (bad) (bad) cld loopne jnp pop (bad) xor loopne adc push loopne jne pop icebp mov mov out xor jnp cld mov clc rex.X cmp sbb scas addr32 add xor jbe int jg stos fwait and push movabs clc (bad) push movabs repz cmp jo add movabs jmpq (bad) hlt int3 mov nop clc div mov movabs pop lock adc movabs in loopne (bad) icebp lock (bad) cmc hlt loopne repnz clc div std cld loopne cli rol faddp (bad) loopne retq mov lret (bad) cs (bad) loopne rcr fcom (bad) fstp loopne fisubl movsb loopne movabs stos mov (bad) mov mov mov lahf sahf test test xchg xchg nop out out xchg loopne xchg xchg cltd cwtl xchg xchg popfq (bad) pushfq fwait (bad) (bad) out pushq xchg (bad) xchg ficoml out clc mov mov mov repnz cmc or rex.X rex.W stos mov mov sar pop (bad) mov nop test rex.WR xor mov jno xchg addr32 (bad) xchg add pop adc (bad) lock movsl adc (bad) jp sahf add xchg test addl xchg out cmp jle fadd cwtl test (bad) cs (bad) xchg push cli mov rex.RX (bad) pop xchg callq rex.RXB lret mov (bad) mov imul pop and mov sub push sahf sarl xchg out js mov data16 add rclb negb out rolb sbbl (bad) xchg xchg rex.RB rex.WR xor or sbbl rex rex.WX gs (bad) pop rex.RX je lret rolb loopne enterq or pop rex.B (bad) rex.W stos jae xor movabs divl js fidivr sbb xor rex.B mov (bad) nop cli stos add xchg adc (bad) or add (bad) mov test add mov cmc movsl jnp mov (bad) cs out callq or rex.W test (bad) xchg cltd rex.WRB pop or mov lea test fist lods xchg xor rex.XB sub adcb push shrl add xlat pop sbb xor adc adc (bad) insl or movabs (bad) ffree test xchg enterq mov mov lahf outsb test mov (bad) jo mov add rol and lea push lock in mov out xchg fwait adc cmp mov pop cmp retq add imul jmpq mov cltd mov out movabs rex.RB rex xor lret rcll cs xchg pshufw (bad) push imulb (bad) stos rcrl in (bad) (bad) int3 mov lods or test sub nop sub mov cltd mov adc (bad) movabs (bad) mov rex.W in repz btr fs rcl push popfq enterq pushq cmpsb mov mov int3 imul (bad) rex.WX sub test mov lret rcr cmpsb movabs jb imul pushq test rex.WRXB add fwait sar int incb lret (bad) repz fs (bad) fimul sbbl (bad) movslq (bad) fadd cs pop scas mov (bad) jmpq retq (bad) (bad) movsb (bad) rorl xlat inc incb (bad) loopne sbb data16 (bad) (bad) icebp (bad) (bad) (bad) cmp hlt (bad) (bad) sbb sbb icebp (bad) (bad) jg gs (bad) imul imul rex.WRXB rex.WRX loopne jb js jbe jl jnp rex.B rex pop rex.RB rex.R rex.X rex.WB rex.W rex.RXB rex.RX rex.WRB rex.WR rex.WX push scas scas push push loopne push pop pop push push pop pop loopne pop and (bad) ds sub (bad) es xor femms xor cmp (bad) ss add (bad) (bad) add or (bad) (bad) or adc outsl outsb adc sbb (bad) (bad) sbb (bad) mov push jns cmpsb loopne mov mov movabs test (bad) mov movabs out pop in sub rcl (bad) jmp mov callq movsb addl movabs (bad) (bad) icebp mov iret jb gs movslq cwtl cmpsb mov mov lock xchg test sahf xor cmpsb sbb mov xor mov mov lods jg xchg lods in lock xchg mov mov mov xchg xchg (bad) (bad) fidivrl iret hlt mov (bad) jle xchg mov mov jge mov lock enterq mov cmp test cwtl pop jo (bad) mov (bad) loop sahf xchg push mov (bad) ds fsubrs (bad) lahf repnz push xchg add mov cmp mov mov mov mov mov cs add nop cwtl mov rex.XB and leaveq rex.WR xchg cli xchg jge pop pop out nop (bad) mov (bad) mov xchg clc jo rex.WB push (bad) enterq rclb cmpb adc lods sub mov enterq in push sbb (bad) xchg icebp (bad) movl lahf in mov rex.WRX xor pop imul andl fimul sbbb (bad) rex.RB fwait rcl rex.RB jae fcompl mov retq xchg mov rex.WRX mov lods xchg and jo shrb popfq test mov xchg pop mov jb cmpsb cltd (bad) retq xchg (bad) pop cld rex.WRXB fisttpl orb movabs mov pop or add fiaddl pushq (bad) mov rex.RXB rex.XB cwtl test movabs cmpsb cmp (bad) (bad) jno (bad) mov rolb xor (bad) fbld repnz mov ja sbb (bad) outsl jno sbb mov (bad) insb clc mov fldt pushfq out leaveq fdivr out add rorl lret fmulp movsb (bad) pushfq add (bad) cs fmulp (bad) loop iret cmp faddl cmc retq fsubp sar lret fcmovb rorb in adc (bad) callq fimul std fistpll out movabs (bad) sbb lock orl (bad) lock out (bad) xchg hlt lock cld rolb rex.R mov (bad) stos shlb mov shrb nop (bad) callq rex.X jne ss jge not sub (bad) pushq out adc cld scas movabs and jae sub test fsubs movabs add out enterq clc pushq hlt (bad) in add in (bad) jbe sbb adc adc or test add cmp cmp xor xor sub test and pop add out push xlat push cld rex.WR rex.W sub cltd cmp out mov mov movabs iret sub rex.W out adc cld clc pushq sbb xor push add cltd sbb cltd cmp out lods xlat movabs pushq cwtl xlat test enterq cmp cwtl sub out mov (bad) enterq repnz (bad) loop jl lock in or jo jrcxz rcl jrcxz test mov rcrb mov (bad) (bad) stc xor mov push in nop jb loope movabs cli cmp mov and jle hlt push and inc in pop loope mov pushq sub fidivrl xchg ror cs mov xor xor cltd psrad nop movsl callq jns jp rex.XB movslq push mov fimul fnstcw mov scas lods mov lahf in movsl (bad) sub sbb fcoms lret fistpl mov rex.R mov push stc gs xchg xor callq movabs mov adc jae add mov xchg xchg lods fild sbb (bad) shl and xchg (bad) cmp movabs retq jl jns and (bad) xchg mov fnop xor adc gs jmp mov movsl movabs outsb out pop scas clc loopnel lea xchg add stc add (bad) (bad) fidiv fcomps scas movabs rex.WX fistl sarl xor rex.W (bad) push mov fcomps idiv enterq int or leaveq pushq scas sbb xor pop rcrb int (bad) adc sub loopne xchg sub (bad) (bad) fnstsw jmpq mov movsl pop enterq loopne cmpl rex.X rex.X sub ja lods push adc mov add fsubs movsb out add fwait rex mov cmp jl popfq adc cmp repnz fdivs loop in add callq enterq callq mov insb js mov stos push mov add movsl add cltd (bad) icebp adc test je xchg sbb (bad) loope sahf rclb pushq pushfq mov cmp (bad) rex.WR test mov mov push andb mov lret movabs out jrcxz and (bad) je pop es xchg xchg repz mov xchg clc (bad) lock (bad) test jmp lods sahf push (bad) xor sub (bad) lods jrcxz pause retq jns fnstsw (bad) rex.W mov push add lock callq jrcxz enterq mov (bad) mov iret cmp (bad) loopne mov cld loopne cmp lret jno or (bad) fcompl rex.WR and (bad) (bad) (bad) test and mov in subb clc ja repnz pushfq shrl mov icebp loopne (bad) int stos mov lods mov mov xchg stos and cmp icebp pushfq loopne or rex.W loopne,pt and and mov (bad) xor xlat push jrcxz (bad) xchg add leaveq sub imul rex.W stos cmc mov sub (bad) movabs rorb mov fistpll iret faddp fdivl (bad) movsb sahf jl pause retq repz xchg mov notl (bad) shll rex.R fcom gs rcrb rex.WRB pushq adc cwtl rcrb insb add insb (bad) hlt sub nop clc mov clc and nop cld insb (bad) pop callq mov xlat int pop ds bnd xchg adc (bad) jrcxz or push (bad) addb (bad) sub in retq jo rex.WR jrcxz lods xor stos rex.WB loopne rex.WRX rex.WR orl (bad) je shrb add push mov shl repnz mov loopne fmull outsb clc jbe or adc callq fcmovbe (bad) (bad) std adc pushq jp (bad) (bad) xchg mov clc jb (bad) lret in rex.B rex.W pop nop and pop test loopne fisubl rex.XB xor jmpq sub sub and sub int3 fs cltd mov repz shr lods test movabs mov pop (bad) (bad) mov sub test mov mov nop lahf movabs add rex.R lock loopne lea jmpq mov outsb ss (bad) mov lea lea lods int3 cld int (bad) xor loop or xchg movabs mov int3 ss int3 add out fisubrl xchg mov out sbb mov fdivs (bad) lods (bad) jns rex.WRXB rex.B rex.W rcrq je cld push sbb and mov (bad) pushq mov rex.WRXB (bad) push mov rcl (bad) clc (bad) rex.XB rorb cmp and xchg adc (bad) mov pushfq xor test rex.RB cwtl (bad) (bad) xchg movabs (bad) jae hlt or sbb sub movabs xor enterq sub rex pop (bad) mov mulw js sbb (bad) add movsb rorb or sub movabs addr32 cwtl add fcompl rex.WXB mov shr clc or adc movsl or xchg rex.WR mov rcr jo mov outsl lods shrb div or push outsb rol (bad) and jl test mov xorb incl jmpq in sub iret and or rex.W mov rcrb negl loopne rex.WRX repz add xor icebp and nop in sub (bad) sti nop add mov icebp (bad) movabs and icebp out callq pop test callq iret and (bad) cltd pushq pushq shr and test push and (bad) push sarl in nop (bad) lock sti xor (bad) iret js (bad) jmpq lock lock push shll lock sti insb (bad) out in xor and nop jmpq movabs stc insb pop and adc mov enterq and or test jo,pn repnz (bad) pop movabs cmp mul movsl (bad) lret iret cmc mov rex.WX cs out (bad) sahf movsb in rex.R idivl (bad) rex lret jmp movabs rex fs loopne (bad) scas out callq in (bad) mov sarb icebp insb add rex.WRX in sahf pop out enterq mov out (bad) xor (bad) sbb xchg xchg test push xor rex.R fs ja mov sbb loopne in in (bad) out rex.WX add (bad) cs xor jbe,pt (bad) mov rex.WRXB icebp in stos stc xorb out xchg cmc enterq test (bad) mov rex.WRB hlt nop div (bad) in mov sarb (bad) add out push loopne in out addr32 rex.WR mov addr32 je jo icebp cmpsb jp adc in pop fxch cld adc sti jo pop pop (bad) out clc adc add xor (bad) and int3 test movabs out jmp js imul xchg clc (bad) test (bad) (bad) bnd test adc add pushq fsubs (bad) (bad) je (bad) pop nop iret (bad) hlt jo test rex.W adc sub mov shlb out callq pop in callq out mov cmp (bad) fucomip (bad) xchg rex.R in lock sub loopne cld adc add xor cmpsl and vshufps or out (bad) adc add xor test movsb pop fadds jge retq rex.WRXB movabs scas insl jle sub mov sahf (bad) mov (bad) cmp sbb adc sahf cmc shl sahf rex.WRXB enterq in xchg movabs loopne out jmpq cmc and (bad) cmp iret in xchg out stc out int3 lock mov adc pop (bad) xor and rex.WRXB rex.W imul out mov add (bad) cli add xor and nop in adc fdivrs cmp callq shrl mov stc adc icebp out mov int3 out jo rol push (bad) (bad) out in xchg (bad) ja xor std jle mov rex iret jge fistpll (bad) rex.WX rex.WR rex.WRXB mov rex.W jmp in in out iret hlt mov rex.R ss mov test sbb sahf (bad) lock test callq rex.WRX cld int3 (bad) rex.RXB clc retq test add mov and out pop or iret loopne clc mov iret lock or pop rex adc xchg rex.RX adc lods fsubs in in insl retq (bad) mov or out (bad) rclb rex.WRB jae hlt subb iret cs (bad) loop fcomip icebp scas (bad) xor and mov mov rex callq (bad) (bad) sti sbb adc out jl fnsave jns mov pushq mov enterq cs and jmp mov mov adc jg (bad) je pop rex.RB rex.WR sar rex.XB and (bad) cld add test hlt popfq xor lock (bad) xchg cmpsl (bad) shrl lock (bad) mov cs in nop jo xorb callq mov jmp push mov xchg mov cmp (bad) adc (bad) pushq adc and retq ja movabs out mov jmpq callq in cld push fucomip mull je sub pop and mov fldlg2 (bad) fmuls (bad) cmp out jmpq shr lods lock out adc sbb hlt movabs rex.XB push nop (bad) and xchg sub out rolb imul out xlat test and test add pop clc movslq in rex.R pop mov jmpq add in (bad) lock push (bad) cmp xchg or repnz sahf cmpsl sarb rex.R mov adc (bad) mov popq (bad) in mov fcompl jnp fbld hlt mov sub mov in clc nop insl (bad) pop rex xorl fs fadd push mov jrcxz out test test xchg mov test jb jo in cwtl lods jg out sbb xchg notl xchg jno shr enterq mov rex.WRB (bad) xor clc lahf out sbb rex.WRXB mov jrcxz shrl add (bad) sub andb sbb push (bad) movsb xchg mov jrcxz lret mov sti gs repz hlt rcr stos and hlt out (bad) jmp xor fadds je lods mov mov loopne lock je (bad) mov jmpq (bad) jrcxz add mov movslq rolb (bad) (bad) out iret add push enterq and int test movabs xchg and mov xchg fs fdiv sub and in push xlat movabs loopne movabs lret fs (bad) fdivrl (bad) jae fnop (bad) movabs int3 nop test in rol je pop pop loop hlt push lock rcr jo push iret lock fstps or (bad) (bad) icebp jo mov mov sub xchg lahf sub or cwtl int3 insl (bad) (bad) jl (bad) imul shrl pushq out xor adc sub (bad) iret (bad) mov (bad) (bad) icebp loop rclb in in jge adc out out psubd add repz rex.WRXB shl rex.WRX pop repnz cwtl mov pop cwtl mov xchg xor xchg imul test (bad) stc hlt xchg (bad) fmuls adc and rex.X rex.WRX repnz cld mov cmp stc push mov lock sbbb cmpl adc sar add (bad) movabs fs cmc enterq sub pushq xorb adc adc add mov cmp or out out cwtl mov rex.WRXB int3 and test mull or pushq (bad) mov add push xor rex.W lock test out mov xor hlt (bad) (bad) fsubs (bad) sahf scas (bad) pause in or mov (bad) retq cmpsl callq in lods (bad) out orb rex cmpsl (bad) movsb andl (bad) jle in adc add retq mov test pushq loop out lods sbb jmpq adc (bad) xor pushfq rex.R rex.WRX andb fnstenv hlt cmp addr32 sbb nop and leaveq jmp add xchg sar fs or fidiv mov insb rex.WRXB in movsb rex.WRX cmp cmp push (bad) movabs leaveq test scas cld pushq mov hlt xlat mov fstpt (bad) add clc popfq lock push fsubrs loope jl mov callq enterq xor shl mov out fmull jrcxz and or hlt cmp out sbbl xchg rcr out mov and (bad) ffreep mov cmpsl loopne int test retq movabs iret xor mov jmp callq jg push addr32 loope enterq (bad) cld pushq enterq mov (bad) mov rex.WR mov jae rcrb or rex.X rcrb out loope sub hlt xchg notb (bad) faddl lock hlt (bad) decb add mov rex.R lock push sub mov clc xor jrcxz and es or in in test callq out rex.R lock rex.XB pop (bad) adc je,pn (bad) nop cmp jg jbe xor lods mov add js mov cs cmpsb add mov test fidivr movabs xorb jle out mov add xor cmp add (bad) stos movabs jg jbe pushq in hlt rex.R or hlt shlb fucomip (bad) rex.WR repnz cld push xor jl cmpsl xor hlt movsb and (bad) movabs cmpsb adc add movabs in (bad) in rex.WRX cmpsb xor sub callq rex.WR (bad) xor hlt or in (bad) xchg jmp pop cltd mov in sub fdivr data16 (bad) in add movabs iret sahf push (bad) rex.XB mov mov iret (bad) jrcxz and jmpq cld out lret push xlat cmp test hlt cmp sub test lock adc in (bad) xor jo jmp xchg cmc mov mov insb (bad) jae add rex.WR lock (bad) out jb int addr32 xchg callq inc xor rex.W lock xchg rex.WRXB xchg in mov outsl loop pushq in icebp fcomp enterq cmc sub and cmp fisub jmp cld pop jo sub sarb flds pop in hlt xlat enterq and lock in (bad) iret addps jns jrcxz out in rex.WR rex.R movabs (bad) xor fcomps (bad) stc cwtl test test callq (bad) (bad) dec scas adc or and mov sarb out in push cld sahf xor jp push mov movsl mov addr32 (bad) (bad) in lock pushq out out test out test stc xchg xor rex.WR rex.RX (bad) add xor enterq out in xchg movabs xchg cs decl out std adc fsubl nop (bad) or push nop (bad) or pop jne out jrcxz test in jge out rcrb jo outsb callq fcmovnu mov insl (bad) out mov xchg sbb (bad) callq rex.W stc pushq mov js out jmp js test scas in stos hlt rex.R not rex.WRX mov jl jae orl jmp jl xor out cli movsb repz rex.XB test and (bad) pop push xor fistpl out loop (bad) fisub mov clc cmp rex lock and jl loop sub callq xor mov fldlg2 jg (bad) pop in loopne test (bad) and out out in and jmpq fwait (bad) callq xchg jb (bad) (bad) ror jl jae sbb jbe (bad) (bad) in pushq fwait mov sbb mov sahf out rex.X out lock jo xor fdiv and es stc cld (bad) (bad) cwtl test jp push sbb xor in mov andb add mov notl xor movabs cli rex.WX xor rex.R cs jp insb pop mov cld or test mov rex.WR pushfq pop push lock in (bad) rex.RB rex.WRXB rex addr32 lods jl cmc and sbb test xor movabs callq pushq jmpq scas adc callq and retq push stos jl fidivr rex.RB pushq addr32 (bad) callq and gs iret adc (bad) add xor add rex.WB rex.RB out pop and and (bad) (bad) mov shll lock cmp sbb adc add xor out out mov and xor addr32 mov movsl (bad) rex.R out faddp movsb cmc icebp addr32 (bad) mov adc and in sub (bad) sub push (bad) xor (bad) (bad) cli test mov fiaddl (bad) repnz and sub clc (bad) out out adc callq icebp fdivrs orb adc lock (bad) (bad) or mov adc add fidiv (bad) (bad) (bad) retq add cwtl xor cmp in mov fld adc ja data16 (bad) mov lock (bad) test sub fimull stc pop cmp data16 pushfq mov in repnz jae jl xor callq loop xchg cmp xchg sub callq and xchg push in fdivs push movabs callq cwtl mov lcall sbb nop rex.WR pop (bad) jo callq mov xchg clc iret and in mov fildll scas loopne movabs xchg and sti gs xor outsb jb je sub jne rex.WXB (bad) or pop pop add decl lock (bad) test rex.WRXB xchg (bad) ficoml rex.RX sub (bad) (bad) rcll callq (bad) rex.X rex.XB (bad) mov callq (bad) and out xlat movabs lods callq push add sub add out add xorl callq test mov xchg rex.WRXB sub out push xlat and xor add adc repz out fcmovbe mov mov (bad) (bad) jl scas add out cmp add or (bad) (bad) adc callq test (bad) sub out and cmp adc stc insb test sub xlat data16 jbe test xor cmp in movabs pop push movslq callq fadd xor lock lods callq repz icebp xor fiadd cmp and adc movabs ja rex.X out in sub sbb or (bad) (bad) sub jmpq mov inc out cmp mov in fucom mov (bad) mov push decb pushq andb (bad) cltd add loopne rex.X (bad) sub jrcxz cli incb (bad) xchg (bad) xchg xor loopne mov clc test rex.WXB jl flds (bad) mov mov int3 xchg test (bad) icebp rex.RB rex.WRX psubd cltd pop movabs repnz sub icebp xchg add mov jp fcmovne fstpt push loopne movsb mov data16 and (bad) stc mov cmp loopne mov (bad) sbb adc jo xor sbb imul jb roll push sbb lock out rex.RXB cld loopne and in ss nop mov (bad) cmp jmpq movabs int3 sbb int cmp mov test (bad) sbb pop lret notl xchg rex.WX rex.WR stos push rex.WRB rex.WB incl repz mov jmpq mov imul pop xchg sub sbb rex.R insl xchg (bad) pop lahf icebp fwait (bad) and and push (bad) jbe cmc add mov movabs jge rex.WRXB adc loopne gs rex.WXB cmc xchg loopne mov loopne adc rex.W mov jne fcompl jmpq loopne jge notl loop lahf (bad) lret xorl fsubr (bad) data16 cmp enterq sahf pop push loopne cltd push movabs loopne (bad) jmp or loopne xchg lock loopne (bad) xor clc add fsubr insl rep add data16 mov mov pushq xlat xor nop in (bad) sbbl loopne (bad) or cmp and push mov cmp movsb jmpq (bad) imul (bad) icebp fnop es movabs jmpq xchg sahf jo jmpq jl (bad) adc adc fadds loopne je fs scas jmpq push outsl hlt loope sbb mov jno mov rex (bad) (bad) jo callq sub xlat repz mov data16 cwtl std out mov push jnp and (bad) push fdivr leaveq pushq sbb cmp mov cmp push jrcxz fstl cmp (bad) (bad) rex.RX mov sbb xor add in sahf loop (bad) or fdiv fistp mov sbb (bad) (bad) mov or int3 cld pop callq xchg pushfq int jns mov (bad) rex.WRXB loope jnp rex.W loopne and jge rex.R jg mov (bad) and xchg (bad) scas xchg loopne cmp scas lock mov jge lods icebp jmpq cmp loopne (bad) out in rex.WRX xor (bad) and cmp (bad) xor add rex.W movabs (bad) loopne (bad) pushq xchg mov push rex xchg fdivs out sbb cs out xor movabs push lret mov je loopne (bad) mov xchg rex.WRB xchg es cmp mov pop cli or retq movslq adc (bad) mov or rcl ds loopne rex.WX fnstcw repnz add repnz rex push sbb xor (bad) loopne out cld shr add xor adc andl outsb cmpb loopne mov or hlt jno rex.WRB loopne callq cmpsl or pop addr32 jg (bad) (bad) scas push nop (bad) in mov (bad) (bad) std loop xor pushfq (bad) add xchg cmp mov fld xchg mov loopne,pt outsl xorb repnz mov std icebp xchg movabs loopne jge movabs (bad) insb or fwait xor cltd lahf (bad) callq add loopne sbb stos and scas mov add rex.X and xor jg or sub mov outsl (bad) sarb push jmpq pop mov push cmp scas (bad) rolb lahf (bad) popfq xchg sarb xchg cmp (bad) rex.WRX rex.WRX rex.RB loopne in retq rol (bad) test rex.R cld (bad) push jae sub mov sbb rex.WR shr rcrl and mov (bad) mov cmpsb or add movsb loopne fiaddl mov repnz (bad) fchs mov in insl movabs mov rcll shrl mov in rex.WRB lret cmp fisttpll (bad) pop xor ror loopne rorb fwait push sbb xchg cld pop std imul cld adc out and jp lods loopne fidiv rex.WX jmp cmp rex.RX (bad) and movabs movabs cmp pop push stc sahf and adc xlat scas rex.WB stos sbb pop loopne (bad) popfq rex.RX rex.XB jne pop incl xchg push xor push jmpq lock (bad) std int3 loopne adc loopne sti out mov decb cltd and cli repnz movabs sbb data16 (bad) jp cld movsb pushfq insl loopne rcrb cs in loopne add out xor (bad) mov mov push (bad) fstpl fndisi(8087 (bad) sub sub leaveq (bad) rex.W cli es data16 push gs (bad) je (bad) (bad) or loop addr32 sarl cmp pop cwtl mov jnp loopne scas sbb out bnd xchg loopne jnp (bad) (bad) not movabs xchg loopne cmpsl rcll loopne push jo repz and fsubs lret add shlb jnp movabs push and and mov mov sub and popfq scas push pop sbb movabs adc in clc xor fmuls push divb jno (bad) push pop rex.WX movabs sbb ss (bad) loopne rex.W rex.WR (bad) xchg xchg sub jmp movabs rex.W sub lock (bad) pushq pop rex.WRXB int3 push sbb xchg jrcxz movabs (bad) stc loopne ljmp or shrb push imul mov and sbb jae mov test je,pt (bad) int3 loopne (bad) or out push (bad) cmp mov push loopne lret ss rex.X loopne notb (bad) loop or cld fwait ds icebp jnp shrb mov and pop or popfq sub or mov data16 mov mov es jge rex.WRB mov loopne jb mov pmulhuw movabs cld out adc adc movabs mov (bad) in sti or and nop adc cmp (bad) scas and rex.WX rex.X and adc mov pop xor mov lret adc mov loopne add retq (bad) lcall popfq ficomp mov rex.RXB cmp mov push hlt movabs rex.R sub rorl (bad) (bad) xor lods jns std mov rex.WXB loopne mov faddl xlat xchg loopne je andb rex.WX rex.WRX or jrcxz (bad) sbb xor loope push cmp test rex.WB loopne lock adc lea push mov mov (bad) mov mov or loope xchg add pushfq jns lods cmp (bad) movabs rex.WRB movsb or fcoml xchg loopne movabs or push pushq sbb (bad) insb mov out or icebp clc mov sbb sahf loop jrcxz (bad) cwtl jg adc fbstp negb loopne xorl in jmpq (bad) clc fldt sub xor mov fnsave cmp and or sub or sub xchg (bad) jns loopne out fisubr divl stos scas xchg push sbb fldcw mov (bad) xor loopne js add loopne rex sti mov lret pop cltd popfq enterq (bad) retq stos test rex.WRX ss pop and lods or (bad) out sbb loopne (bad) test insl jno (bad) loopne push movabs rorl jo (bad) (bad) je orl jne test repnz sbb loopne ds imul loopne adc cs adc retq jbe mov mov repz add test loopne xchg rex.WX repnz in sub imul rex.WR scas imul cmp sub rex.WR mov jo (bad) loopne mov pop rcrl pushq loopne fmuls jmpq or xchg insl xor lret (bad) push (bad) xor cmp negb cmpsb adc loopne and sub test mov (bad) lock xchg (bad) shl ds movabs push movabs (bad) out add icebp adc sti add jne loopne cmp push callq loopne mov mov sbb mov xchg test pop mov mov push add mov stos pop lcall iret jae xorl orb mov in rex.WB xor rcll hlt rex.XB (bad) (bad) cmp scas loopne sub mov add cli add (bad) mov fmul in (bad) hlt (bad) or jmp outsl cwtl loop sti repnz jo mov or out (bad) and add cli lea movabs icebp test and mov andl loopne (bad) adc rex.B imul mov pushfq adc add sub and loopne sub sub jmp rex.WB imul pushq sub jmpq ficoml out gs xchg lods in int3 test clc or jmpq hlt xchg cmpl (bad) rex.RX movabs rex.R add (bad) lret mov add addl enterq lock mov jnp rex.WB rex.WR enterq movabs mov (bad) rcrb sbb out movabs add js cmp xor ffreep hlt rex.X fs rex.XB mov (bad) (bad) rex.W cld (bad) rex.RB cmp callq rex.WRXB jmpq mov rex.W jrcxz out mov xchg movslq xor (bad) (bad) mov mov cmp shrb (bad) and pushq jmpq hlt and movabs callq movabs lock rex.XB mov (bad) cs ja in clc (bad) rex.WRXB out jmpq out mov cld fucomip add (bad) fsub callq cs iret retq (bad) (bad) in clc fild shrl lock rex.X mov clc (bad) mov je andb pushfq orl nop rex.WRXB int rex.WR shlb (bad) push add callq cld fs rex.WRXB addr32 lock rex.WX rex.R (bad) pop rex es test out clc cmpsl repz (bad) in xor fdivrs callq lock cmp out rex.W out lock test iret add out (bad) fisttpll cmc xlat mov clc pushq cld imull adc imulb pop add cltd cmp out mov pushq ror (bad) pushq fnop rex nop pushq cwtl iret adc add out xchg xlat xor sbb test pop xor mov rolb mov lock sbb (bad) rex mov cmpb (bad) xor or add (bad) mov (bad) icebp sbbb jb sbb lcall (bad) pushq movabs (bad) (bad) int3 sub add out clc xlat lock fcoms je test xor xor out sub and and pop (bad) push sub rex.WR rex.W rex jo test test mov movabs frstor jne out in add (bad) (bad) lret push or sbb mov and (bad) or rex mov div xor ljmp out movabs mov jp add rex.WRB sarb adc mov push scas mov andl rex lock out cli (bad) (bad) jns sub xor adc fsubp stos pushfq mov pop jo test test rex.WRXB fidiv push xor (bad) shrl sbb fsubrs xchg jne enterq mov leaveq and pop rclb mov andl ror enterq test xchg xor rex.WB mov popfq mov adc mov enterq or (bad) stc test rex.WB xchg and xchg push enterq (bad) pop in movabs orl mov test (bad) lea mov movabs mov (bad) movabs mov (bad) (bad) callq loop rex.WB mov iret push jno nop (bad) jae mul cmc mov mov callq rex.WR clc callq jl test iret and imul cmp andb iret movsl imul (bad) mov test fcoml (bad) rolb jbe jbe lods and stos fadd callq shrb repnz cld clc (bad) callq callq callq jp (bad) callq add callq fdivp push shrb iret rex.XB callq rol (bad) or ja repz ror push (bad) xor xor add and sahf xor mov rex.WRXB (bad) (bad) ds xchg mov iret int3 cld callq test pop lret in hlt lret xor out sbb mov cmc (bad) shr or push xor jmp and callq test sub hlt cmp sub xchg (bad) and (bad) iret int (bad) fs sbb callq movsb clc callq divl (bad) mov fldt cmpsl xlat mov clc addr32 notl callq mov and jno movabs jmp retq shrb cli lock orb adc pop callq out psubb imul movabs or callq clc addr32 clc retq out sar insb mulb (bad) xchg in adc out sbb callq notl adc callq pop clc callq clc callq testl cs add add pop clc addr32 clc (bad) test callq iret mov pop ss sub cwtl clc iret callq pop clc callq (bad) in callq clc sbb jrcxz mov clc addr32 sbb xchg (bad) callq sub callq clc addr32 clc retq callq jno movabs callq divl iret (bad) mov sbb jrcxz jbe mov js in callq clc callq movsb clc callq (bad) (bad) ficomp (bad) iret rex.X cs push (bad) xor callq clc cmc callq divl rex.R rex.RXB ror adc mov jl mov test clc nop iret adc out callq iret xor rex.WR adc callq clc callq outsb in mov mov out cmp callq clc xchg push or cmp insb cwtl retq out pushfq clc xor je callq and callq adc cmp (bad) callq out mov mov push adc callq clc callq nop mull callq in callq adc (bad) cli xorl sub in testb in rex.WB xchg (bad) mov rex clc addr32 clc fsubrp stos sahf rex.WR mov iret xchg test (bad) lods insb (bad) iret (bad) mov or callq mov js cmc callq clc lods callq cwtl xchg xor stc scas xchg xor mov (bad) rex.WB sbb (bad) (bad) or rex clc addr32 clc retq out clc clc mov (bad) or out mov movsb loop callq pop clc callq push clc rex.WRB mov in adc fsubs cmp callq pop clc callq clc addr32 clc retq out fdivr adc or out out sarl movabs rex.RXB out clc lods callq notl retq mov test rex iret retq xchg xchg mov push sub mov xchg rcr or xchg (bad) (bad) iret scas in rex.WRXB cmp iret xchg cwtl (bad) add adc cmp callq out callq pop clc callq js clc callq clc iret callq mov xor (bad) or (bad) clc retq out and callq je clc pop xchg in jae out clc rex.WX mov movsb (bad) mov (bad) sub xor iret callq mulq addr32 xor mov retq lock movabs callq clc callq rex.WX (bad) callq pushq out cmp ja out rex.WXB mov lahf rex.X callq fs psubb (bad) ja adc outsb cmp (bad) rex.RXB jrcxz mov clc retq out insb not test rex.WRXB mov (bad) in iret xor rex.RB rex.WR jo sahf push iret gs rex.WRXB jo iret enterq (bad) iret xor (bad) (bad) cmpsl add jg mov adc iret (bad) je jl iret pop scas test and iret insb scas (bad) mov (bad) rclb shr xor movabs (bad) push stos vcvtsi2sd insb and iret lret mov adc sub pop cmp adc callq mull mov callq clc callq xor (bad) ja (bad) out (bad) movabs iret (bad) (bad) out cmpsl sahf add push pop sub iret movsl pop mov rex.RB fs stc ficompl pop sarb jbe (bad) clc retq out (bad) clc mov jg xor callq out movsb clc callq divl pushq int3 mov or (bad) rex.XB int3 loopne subb callq orl out psubb (bad) jge in clc callq rex.W rex.X jns fstpt pop clc lods callq clc callq movsb clc callq clc xchg rex.X rex.WR repz adc (bad) hlt clc fwait push lock callq (bad) in callq notl push movabs sub push mov push out cmp callq pop clc callq clc pop xchg cmp callq clc (bad) paddq mov lods callq clc callq jns fistl (bad) je jle callq clc (bad) (bad) test fbstp in callq clc callq fdivp xor jl (bad) rex.WR iret sub mov clc sahf iret mov xchg sbb or callq pop mov jbe int3 clc sbb movabs out sbb callq (bad) clc cmc callq clc or movabs (bad) movabs (bad) push js mov xor jrcxz xchg callq ds or movabs xor fdiv mov pop icebp jae fistpl add rex.WR loop repz callq iret ss add add pushq jrcxz js jbe mov callq clc callq test callq mull callq in callq clc callq push clc mov (bad) loop and callq add mov callq rex.WRXB xchg mov icebp insb rex.WRXB (bad) out (bad) jrcxz jno mov callq rex.WRXB fs insb lock (bad) test pop movabs cmc notl (bad) and xor (bad) (bad) iret xchg sbb xor insl (bad) bnd jge out testl cmpsl (bad) push pop iret (bad) (bad) int3 and iret (bad) cs in mull popfq adc (bad) out add callq jrcxz jno movabs stc sti in add (bad) fcmovnb (bad) rex.RB callq add callq mov (bad) mov rex.WR nop rolb (bad) xor callq je and test movabs (bad) mov (bad) jl (bad) kmovw (bad) test cwtl iret sbb rex.R mov iret (bad) es test rex pushq movsb and data16 or sarb rclb iret (bad) mov (bad) lods adc in (bad) in iret ror in sbb ror pop add clc jmp sub int in sbb sub iret jmpq and mov callq shll clc fs jrcxz rex.R callq (bad) cmpsl insb iret pushfq pop rex.R jg adc mov push movabs (bad) shlb rorb outsl loop iret pushfq es clc sub push fdivrs js push iret mov jg outsb (bad) sbb scas sbb callq or xchg movsb mov icebp rorb je sub callq fs (bad) rex.WB insb iretq sti movabs test mov iret mulb cld iret rex cs jmpq test callq cmpsl sbb iret (bad) movabs and sbb lods divl lock add movabs rex.WRXB add push iret sbb in lods in iret (bad) movabs out loopne lock mov pushfq lock pop mov lods testl adc lahf mov sbb fldcw jmpq rex.WR (bad) test fcmove xchg mov (bad) cwtl iret fwait mov pushq jns (bad) hlt iret stos mov data16 test insb and sti mov and rex.WXB and lods iret or fnstenv sahf iret xlat mov cmp mov iret and scas in pushq or adc (bad) rex.WX mov push hlt iret cld xchg jo (bad) rex.B (bad) (bad) rex retq xchg mov subb rex.X movsb je pushq and rorb sbb (bad) lea (bad) iret add mov fcmove adc iret (bad) nop (bad) cwtl insb (bad) iret mov out shrb mov (bad) out retq (bad) iret mov rex movabs xchg cli adc (bad) cltd cwtl (bad) iret mov hlt out outsl callq mov fmul xchg (bad) callq (bad) stos popfq callq mov nop iret (bad) pop int3 (bad) int3 fwait callq jo iret rex.WXB insb push iret (bad) mov rex.WRXB sub rex.XB sub add jg test mov adc fild hlt out outsl callq push iret sar (bad) rex.WR ror mov shr sbb pushfq movabs mov fs iret adc (bad) negl iret or je outsb callq movsb mov iret xchg out sub push iret (bad) rex.X movsb sbb add iret sub sub (bad) movabs jge sub or (bad) retq push iret (bad) test and (bad) jnp pop mov fldenv (bad) rcr iret jns sub and sub insl cli jp push (bad) iret test (bad) jg (bad) imul rex jge mov loope rex.W rol (bad) or (bad) iret test mov test test std rex.R test rex (bad) ja sbb add iret jmpq callq cwtl not iret xchg fsubrl mov or mov sbb movabs out outsb jo cwtl rex.W rex.WR rex.W callq (bad) sahf iret mov ds rex.WRB es pushq callq rex.WR or js orl lock nop push fisubl mov jo sub sub jmpq iret rex.WRXB out (bad) test in lock rcll test movsb jo lock (bad) push and int jo nop iret pop and or (bad) mov cmp (bad) adc (bad) callq jg leaveq lods in lret sti (bad) callq callq callq hlt scas in xor (bad) sub movabs iret mov movabs in (bad) callq callq (bad) rex.WX icebp callq callq jmpq sbb mov movabs fmull sub fsubrp pushq jl iret jmpq callq sbb xchg sbb rex (bad) movabs (bad) pop cwtl imul pushq fwait xchg icebp lahf loop xchg (bad) mov cmp rcrl loopne pushq mov in test cmp or cli jo add lea loopne mov or loopne (bad) xchg test pushq sub loopne imul incb cmpsl loopne adc test fsub or xor loopne or mov gs insl loopne jmpq xchg sbb (bad) mov mov fiadd add in sbb cli mov loopne jge cld scas and xlat movabs sbb repnz ss je rex.WRXB fdivrs adc rex.WR loope outsb jno loopne add iret cmpsb (bad) icebp cmpsl loopne clc add mov loopne jo ds sbb push sbbl stos jno loopne mov mov jl rex.W and insb or loopne or adc (bad) out nop loop (bad) (bad) data16 push loopne add int and nop mov repnz add mov vmovshdup jmpq stc cmpsb xchg loopne in jnp add test pop mov and pop xor rep loopne cmc sbb shrl pop loopne in jae xor (bad) cmp lods (bad) sbb sbb (bad) loopne mov xor (bad) shlb add pop loopne (bad) jge or out (bad) hlt popq loope cmp or pop mov movabs mov push (bad) add jmpq stos cld loopne movabs loopne in lret (bad) ja mov adc mov sub (bad) loopne mov push in xor sub pushq fxam in fstpl flds (bad) callq xor and movabs sub fstpl cmpsb pop adc xor adc mov in cltd mov data16 sti loopne jl pop outsl (bad) outsb movabs cmpsl adc jbe adc jmpq (bad) stos sbb xor in mov int jmpq mov pop pop pushq int3 movabs loopne rex.WR rex.WX pop jmp xchg lods gs mov jmpq lea (bad) dec mov popfq mov loopne repnz (bad) jno adc (bad) test adc cmc mov sub jp and mov jb loopne hlt movabs (bad) lock cltd sbb in pop xchg xchg retq pop (bad) loopne adc sbb cwtl cli stos mov (bad) (bad) test out loopne (bad) fdivl (bad) push or mov rex.WR rex.WRB rolb rex.R (bad) (bad) rex.RXB jno loopne rex.WRXB ja leaveq loopne flds jge mov shl (bad) out (bad) cld (bad) roll cmpsl rex.XB xor push jl sub loopne sbb loope scas (bad) (bad) loopne mov mov xlat (bad) mov rex.XB sub mov and xchg loopne add (bad) sti loop icebp movabs roll loope mov and leaveq sbb loopne lock pushq adc (bad) mov movabs loopne stos in xor std popq out push cmp mov (bad) iret add (bad) loopne jbe (bad) xor sbb (bad) jae adc cmp (bad) cmc cmp cmp pop rex.W sahf xchg (bad) fldenv sub xchg std loopne rcr (bad) cmp pushq adc jbe imul std jmp xchg outsb sbbl rex.RXB xchg mov jnp roll loope add cwtl xor mov (bad) stc adc loopne and rol sti popfq clc loopne sub adc xor vmovdqu fsubs or xor ds loopne scas or xor (bad) loop jne (bad) rex.WRXB rex stos loopne jrcxz fnstenv rex.WRX ja lods and push jmp mov fs test xchg imul pushfq callq adc in xor xor mov mul stos int3 repz (bad) sbb scas xchg mov cmp repnz push mov (bad) sub scas (bad) fmul (bad) (bad) ja add loopne mov fwait mov cwtl out push add (bad) cli jmpq (bad) pop test xchg adc (bad) and fiadd and sahf mov cmp xchg callq negl loopne (bad) pushq loopne int test rex.WRX and outsb sbb cmc test popfq cld push (bad) movabs pop icebp loopne fwait repz std sub out xchg (bad) sbb rex.RXB in std loopne or (bad) test stos or loopne rclb (bad) (bad) cmc cli mov shlb jrcxz test add js loopne mov (bad) iret pop jp loopne leaveq xchg (bad) xor mov (bad) mov xlat (bad) mov std cmp fsubr and rex.W loopne sub xchg loopne jo push (bad) test adc cltd test jnp lret ljmp loop ja (bad) fadds (bad) leaveq rorl movabs rex.R or (bad) mov sbb callq leaveq insb add (bad) movsl add rorb xor scas pop in rcr icebp rorl pushq rex jrcxz stc clc lret shl (bad) adc leaveq out jo and (bad) fiadd jnp adc rex.W test sti adcl (bad) mov pushfq xorb int3 xor sahf fwait jmpq sbb (bad) cmp mov pop imul sbb lods or jbe cmp shl rorl xchg xor cltd fnstsw sub xchg loopne (bad) xlat mov mov xchg and rex.RXB movabs stos incb fldcw xchg imul mov xor push movsl addr32 loopne outsb and or (bad) and lods (bad) adc sbb loopne sub cmp mov loope mov lret rex.R cmc xchg pop mull or pushq push xchg ror adc xchg mov xchg and mov sub sahf es movabs addb fwait lods fcoms shlb out rex.B (bad) jns rex.WRXB or loopne fidiv ffreep add or or callq fstps cmc testl outsb (bad) rex.WRXB mov leaveq xorl insl xlat sbb loopne lods rex.WXB xchg xchg adc (bad) push mov cmp sbb retq test jae rex.RX jrcxz pop out repz movabs (bad) loopne rex.RB (bad) out lret loopne jae pop fmull fdivrp fistp leaveq sti fwait jae es pushq add lods js jmpq out lods cmp cmp cwtl (bad) (bad) push rex.R cs adcl jmpq movabs (bad) sub and push loopne cmpl (bad) xor rex.WRB and loopne add and adc loopne rex.W sub xor cmp gs shll loopne (bad) (bad) mov loopne lret rex.RXB test ja xchg xor mov cmp adc popfq xchg pop rorb xchg jbe push xchg in lret jns stos xor fcoms mov popfq (bad) xorl jo push add test (bad) out stos (bad) icebp in xor int3 enterq lea sbb adc scas and movsb (bad) mov pop jnp loopne ds loope rex rex.WRX movabs enterq loopne repz cltd shll push xor xchg insb sti loopne rex.WX rex es cmp test mov or cmpsl add (bad) xchg jmpq mov rex.B add in cltd xor popfq loopne out sbb xchg jmpq xor pop rex.WX loope insl loopne mov leaveq (bad) (bad) clc idiv and (bad) movabs jp sub pop add sahf roll xchg cltd and rex.R rex.WR rex.WRXB xchg nop sti callq lea in jge add cltd sbb rex.RX out jmp xchg orb add xchg cwtl in cmp and int loopne pushfq out jne jp loopne out in (bad) mov cltd sub rex.X fstpl and rex.WB mov jmpw sbb int3 mov icebp in nop sahf jmpq pushfq xchg fsubr mov rex.RXB rex.B rex.RB rex.RX scas loopne movsb add iret xor fildl pop rex.B jne xchg mov loopne lea (bad) lahf (bad) (bad) rclb sahf loopne jo mov loopne cmpsl and loop jl loopne (bad) mov (bad) rcl callq sbb (bad) adc xor rol jno pop js lret (bad) repz cld xor (bad) add xor jge stc pushfq (bad) (bad) shlb in cmp cmp xor stc mov cmp jp (bad) loopne mov jo xchg mov in sub loopne movslq rex.WR lods cmp xlat in (bad) movzbl loopne xchg (bad) movslq sbb rex.WXB sbb test adc push sbb loopne or (bad) mull (bad) rex jg scas rex.WRX (bad) movabs loopne mov xor xchg mov int pushq ljmp mov (bad) adc cs mov fdivl int3 outsb mov loopne adc add loopne pop mov enterq shr cmp loopne jrcxz stos jle repz (bad) int3 loopne mov jae jl pop mov (bad) xchg rex.B sbb mov add pushfw mov int adc lock mov or sub movabs mov adcb loopne xor hlt mov adc fcompl iret (bad) in push loopne cltd adc loop xor clc mov imul movabs loopne stos jrcxz,pn and loopne cmc (bad) cmp test int cmp xor or fs add pushq and fmul or int mov or xchg retq cli (bad) fwait (bad) movabs (bad) (bad) movabs movabs rex.B (bad) and lea callq sub or jp sbb jle,pt loopne fsub cmp jrcxz mov outsl mov imul rex.WB jmp (bad) jmpq (bad) gs enterq sarl loope (bad) mov data16 adc (bad) (bad) hlt (bad) jbe rex.RXB jg movslq stos and mov outsb cli sub rex.RX mov and rex.WX (bad) loopne sar rex.W add movabs add rex.X je adc (bad) push push loopne int fisubl (bad) cmc lods rex xor jo (bad) icebp xchg and ss sbb (bad) ds out (bad) xchg sbb (bad) ljmp loop lods xchg xor jmpq or out push xor test cmpsb in cmp jle out mov lret ja int3 outsb sbb loopne out (bad) (bad) mov mov loopne popfq pushq in incb push scas sub add rex.WRB jae rcl in mov xor ss mov push rex.B pop xor movsb or and in rex.WX xor (bad) retq mov test fwait pop fistpl (bad) (bad) leaveq and int and loopne mov je and movsl (bad) or add sbb addr32 loopne xor (bad) sarl (bad) movsl jrcxz enterq sbb mov or stos rex.B jo ja sub sbb rex.XB and in rex.X adc ds fucom sub imul sarl leaveq loopne (bad) es loopne fcoml mov sbb (bad) add sub or movabs nop and sbb fsubs rex.RXB data16 mov repnz pop jnp shl test adc frstpm(287 (bad) mov rex.B or stos repnz clc xchg outsl insl rolb rcrl (bad) std orb add loopne (bad) push mov rex.W mov xchg cld lods icebp push (bad) xlat add nop push repnz loopne cmpsl pop jrcxz rex.RXB (bad) loopne stc fisttp sti mov (bad) lods rex.X movabs sub scas jnp or rex.X (bad) rex.B mov mov shlb (bad) fisttpl (bad) and mov jmp jno stos rex.WX rol in js in (bad) mov imul cmc retq (bad) sub pushq clc test push flds insl addr32 add mov jg fisubrl or jae retq sub nop jo cmp lea jns decb (bad) add vmaxpd mov shl push add mov cs fiaddl and push cmpb leaveq fidiv xor (bad) repnz fdivl clc jge and rex.WXB rex.WRX jl es loopne rcl xlat pop movl bnd sbb lret lret (bad) push loopne retq int3 jmpq cmc js cld jmpq lahf or int mov sub (bad) mov xchg jmpq (bad) mov and jrcxz adc insl movl pop ds sbb cmp or shl add callq rex.WB popfq movabs nop sarb (bad) xchg data16 std fsubrp (bad) xor rcr loopne (bad) rex.XB stos lods add fadds iret mov xor xchg (bad) (bad) rex.RXB movabs clc notb (bad) outsb (bad) adc mov addl movslq rclb retq stos fwait cmpsl (bad) push js loope mov cltd mov add fs cwtl and rex.WRXB rex.WX mov sti out test movsb loopne sbbb (bad) mov (bad) movslq sub loopne mov sbb ffree mov (bad) icebp (bad) mov out rex.RB pop cmp es insb xor (bad) imul xchg (bad) adc (bad) loopne sahf sub out loopne cmp pop sbb (bad) gs jmpq mov fwait loopne pop outsl lea fnop std xor insb xchg rex.R movabs xor rex.XB rex in (bad) mov out and int3 retq cmp out rex.RB xchg or xor cld (bad) sub jge pop jnp and xchg popfq xor (bad) (bad) cmpl pushq js dec lret rex.WB xchg out mov lock jg jg out and push add push push int3 je movabs hlt fiaddl callq data16 rcr add rex.B xchg jl add loopne cs xor (bad) adc loopne test push loopne imul mov (bad) ds push xor sbb xor mov out movabs (bad) xor rex.WXB rex je vmovd pop xchg adc loopne cmp xor sub outsb push enterq loopne (bad) sub ja (bad) xor (bad) jmp (bad) movl mov insb jnp loopne movslq cltd je add cwtl cmp popq outsb jmpq sbb jae loopne (bad) mov adc (bad) or stos icebp loopne sbb xor mov mov fchs mov add cmp mov (bad) pop push adcb insl fcompl stos xchg (bad) (bad) pmulhw jle sbb rex.X jmpq sub adc clc nop outsl icebp pop cmp retq cmp stos movslq bndstx jb mov adc lret mov icebp (bad) loopne retq (bad) (bad) xchg fildl sub cltd sbb sarb xchg xchg and rorl mov (bad) roll in out loopne rex.RX pushfq or loopne add xchg fs xlat icebp xchg xchg rex loopne ds sbbl mov (bad) (bad) mov rcrb lret int in shrb leaveq loopne xor xchg loopne test (bad) xchg movsb xor in mov jmpq pushq or jmpq movabs mov jg mov addr32 movabs rex.WRX ja mov pop loopne xchg push insb and loope repnz mov jmpq jle mov stos out loopne xlat pop mov loopne rex.RXB mov mov mov out pushq mov xorl loopne adcl jmpq rex.WX cmp rex fdivp retq lahf (bad) in pushq mov sub frstor rex.WRXB je sar xchg repnz mov loopne fld1 pop mov xor add sbb movabs leaveq cltd (bad) lods fcmovu (bad) loopne push and outsb sahf int rex.RB mov xchg add cld jb xchg cmp ljmp push jno in imul loop,pn add xor sbb outsl in loopne pop add add in sub jmpq sbb jo sbb imul (bad) test xor loopne jmpq enterq movabs xchg and pushq nop cmpsb movabs xor cmp xchg (bad) fiaddl mov sarb (bad) cmp (bad) push movabs xchg (bad) loop insb outsb mov pushfq loopne pop mov xchg loopne in jl sbb pop loopne pop rex.WRXB jmpq (bad) jno loope (bad) mov xchg xor (bad) xlat (bad) jrcxz movslq mov (bad) rex mov pop (bad) xchg mov (bad) mov sub (bad) or pushq or mov stos (bad) loopne (bad) push rex.WRXB rex jns fdiv cld xchg mov push icebp lahf iret (bad) adc jp jl ss or sti sbb popfq jbe loopne fs sub push (bad) loopne scas shrl icebp ds insb out loopne cmp rex.WRXB xor rex rex.WR mov fsubs mov lods stos loopne (bad) add cmp int3 decb rol mov or out pop rex.WXB jae (bad) (bad) (bad) (bad) push mov sub fwait loopne mov jge rex.WB loop mov imulb push sub loopne clc leaveq (bad) sarl mov stos (bad) loopne js sub rex.RX cmp cmpsl lret rex.WR fildll (bad) imul and add rex.WRXB js fidiv push cmpsl std gs jl adc loopne xchg imul cmp notl in ficoml stos rex.X rex.XB pop loopne xchg push clc jns iret pavgb mov loopne xchg cli loopne pop xor pop (bad) lahf movsb loopne xchg adc (bad) (bad) (bad) mov in add movabs hlt loopne sbb (bad) mov (bad) rex.X adc jp pop rex.RXB cmp rex.RX js rex.WB fwait enterq lea pop test xor (bad) jmpq popq push lret sahf decl (bad) jne jmpq test sti lock lods in mov pop imul inc xchg (bad) out (bad) loopne adc mov push in orb enterq rex.RB repnz (bad) fadds loopne std sub rcll loopne xchg mov (bad) fs leaveq (bad) hlt es repz (bad) add xor stos clc or loopne movsl movb push imul and out scas fs (bad) jge mov (bad) popfq push cmp sub rol lods loopne (bad) neg mov xchg clc callq std xor mov icebp movslq mov in jmpq sub cli int3 repz (bad) shrb jno or (bad) (bad) movsl cltd retq stc (bad) loopne add fs loopne sub cmc loop (bad) cwtl enterq (bad) (bad) or push fs pushq ss sub push mov lods (bad) nop std outsl cmp movsb stc rex.WXB iret repnz xchg int3 test or and jle xchg gs sahf outsb rex.WX mov (bad) push push add rex.WRX decl jae retq jns add adc (bad) movabs (bad) cmp es test fs scas retq mov (bad) adc mov xchg loopne or scas in mov loopne sbb in jge (bad) (bad) in rex.RB xchg rex.WXB icebp (bad) enterq push cmp or fwait cld callq and rorl (bad) movabs jns in movabs xchg fist ja add mov jl or loopne and std pop loopne fimull (bad) (bad) cmp or outsl loopne jle imulb mov jne,pn outsb mov rex.WRB js rex.RXB mov (bad) rex.WRXB setp neg and add or xchg sahf and mov out stc (bad) mov jl pop outsl (bad) incl rex.WRX (bad) push push cmp stos shrl push (bad) mov pop rex.X es rcrb xchg jbe adc add mov shrb mov retq imul std jns mul movabs rex.WX (bad) insb mov repnz (bad) rex.RB rex.WXB add fdivrl push mov (bad) adc scas pop xchg cmp xchg mov lock loopne jno out rex.XB (bad) mov loopne xchg push pop insb lods (bad) mov out in xchg scas xor mov in retq xor ja sbb cmp pop es loopne jmp jmpq popfq add rcll cli sti sbb scas xor or xchg rex.WRX sbb fs test rex.W jl sub retq stos xchg push shl rex.RB lock lods add and cmp and (bad) lcall pop icebp loopne lods std (bad) mov loopne insl add (bad) rclb cmp int xchg rex.RXB loope mov sub icebp data16 in (bad) ror test jp fs xchg loopne jg pushfq stc scas (bad) lahf movabs loopne mov and xor mov rex.R xchg add sbb sub rex.X (bad) xor jp in (bad) (bad) pop push mov loopne cmpsb scas rex.X pop cmpb mov xchg nop xchg sub rex.WRB out shlb (bad) cs (bad) loopne cmpsb repz int add cld out push loopne add sbb rex.W push mov mov loopne or shll xchg xor mov in gs movabs and imull in loopne stos int pushq pop jne (bad) mov in sbb mov sbb (bad) jae jns pop ss rex.R mov adcq hlt (bad) cltd jmpq mov lret loopne rorb movslq loopne xchg cmp xor jmpq mov fstpt inc lods imul lret jrcxz jo or jmp gs out loopne mov mov loopne pop pop add in jb es movabs (bad) rex.RB add pop insb (bad) rex.W lahf jmp loop loopne (bad) sub xchg jp rex.WRXB rex.RX clc or adc callq insl rex.WR cld (bad) (bad) test or (bad) (bad) and mov push movswl jmpq movabs ljmp insb rex.RX sub sbb jne loopne movsl xchg lahf mov mov adc loopne je pushq ds loop data16 loopne int3 mov rex.RB hlt rex.WR jno lods sbb stos movabs (bad) callq mov fimul and mov mov (bad) push movsb loopne mov (bad) enterq adc movabs sbb movabs add rcrl jae pop outsl shl (bad) push pushq cltd cli icebp rex.WRXB mov rex ss mov pop mov mov test js xchg sub shl shl xchg setne add jge mov fcompl (bad) test and pushfq mov loopne (bad) pushq outsb cmc scas xchg (bad) pop stc jle push std push (bad) callq lods test loopne xchg push (bad) mull lret cmc jno sbb jrcxz loopne (bad) rex.RB shll loopne out outsl jns rex.X lods hlt cwtl xchg and cmp rcrb mov push or fistpl sub add movabs pop test mov popfq stos int3 mov and andl lahf leaveq loopne jno jle cmpsb imul movsb mov fnsave and sub loopne (bad) mov loopne jp insl rex.RXB fsubp push mov in jnp ficoml xlat sub cmp mov out cmp or mov and sub xchg (bad) sub loopne jns jmpq loopne cmp cwtl push jae movsl jmp rex rcr je loopne mov scas or movsb (bad) loop xor cmc popfq rex in xor icebp rex.WRB or sbb in push jbe repz pop xchg rex.X movsb mov xor rex.RXB mov loopne (bad) or and pop add (bad) rex.B xor adc addr32 xchg jrcxz sahf push rex rcr mov xlat xor cmpsl mov xchg (bad) and mov out add (bad) sarl mov sbb gs ror icebp (bad) xchg add rex.XB ja jp jmpq loopne cmp xor loopne add or rex.WX movsl or xchg sahf icebp cld (bad) mov imull mov fdivr test imul adc sub loope loopne rex.WRB sub and mov (bad) mulb cmp add and enterq rcrb sub movabs pop stos repnz (bad) fstl (bad) sbb lock and pop loopne adc jg mov clc movsl jb lret sbb lods jmpq std cmp xchg fimul out outsb jg adc fcomi loope js cmp xchg cwtl (bad) sbb and fwait sbb sbbb callq (bad) adc (bad) (bad) rex.WRB sbb rex.WRXB sub fcomip xchg rex.X lods rex.WR adc add loopne xchg testb mov and mov fcomps mov movabs test out adc sbb (bad) js or loopne imul movabs in loop loope (bad) inc rex.W (bad) subb loopne (bad) (bad) out add jp loopne (bad) iret rex.WRXB sbb loopne jrcxz je xor test sbb xor movabs and (bad) lahf cmp sbb fucomi sub (bad) pop mov loop (bad) or sbb cmp sub cld xor (bad) idivl xchg or jmpq in rex.RB rex.X rex rcl imul test push ja cmc xchg mov in out cmp icebp rex.WB xchg loopne lea push adc loopne (bad) (bad) popfq cmp nop cmp out xchg out (bad) cld cli js xchg and (bad) callq lahf movabs rex.W sbb xor xlat movabs retq push ja xchg hlt fwait mov pop and (bad) incb insl rex.WB and nop jg (bad) mov movsl (bad) pushfq push rcrb mov (bad) cmc add xor (bad) rex.WRXB sub in xchg loopne xchg movabs mov mov xor (bad) loopne xchg cmp in pop mov loopne sbb loop cmp jmpq mov repnz xchg jmp xchg mov or shr (bad) xor or fldl mov (bad) retq adc xor out xchg fmulp loopne nop jp cltd movabs lret adc pop jmpq (bad) mov (bad) (bad) loopne push leaveq mov (bad) pop rex.WRXB test cmp cli rex.WXB mov pop or loopne lea andl sbb in ffree loopne xchg enterq loopne (bad) shr cmp data16 (bad) lahf js movabs fnstsw mov rex.RX mov loopne repz stc (bad) out lret fs fidiv rex.WXB rcr xlat cmpsb jg sub test movabs loopne cmpsl decl loopne (bad) imulb sub mov cmp add (bad) xor mov loopne xchg cltd hlt adc lret (bad) loopne rex.RXB rclb popfq (bad) xlat leaveq shl mov (bad) fistl pushfq cld in mov shlb adc (bad) fwait callq sub (bad) jns movslq fchs (bad) and add in (bad) jne mov rex.W rex.RXB (bad) retq (bad) mov lea push jae fisub pushq sub mov sarb and movsb xor loope mov loop data16 retq movsl loop scas mov cmpsb push out rex.WXB loope pushq pop sbb mov mov adc cmp pop loopne xchg sub retq mov or nop jmpq rex.WRXB lock cmp jo mov xchg xchg test frstpm(287 sub mov movabs add mov mov xor loopne mov repz rcll and mov loopne jmp (bad) stos js xchg sub mov mov xlat rex.XB mov rex.WR rex.W and (bad) (bad) mov xor in mov outsb rex.R (bad) (bad) ljmp push pop (bad) cltd jmpq in jl fwait lret loopne cmp lret pop incb (bad) mull outsl or js loopne xor and clc mov movslq cwtl stos loopne mov pop test icebp divl jl push rorl push sub rex xchg outsb add adc sbb xor test adc (bad) (bad) rex.RB (bad) dec andb loopne rex.WXB sub (bad) (bad) frstpm(287 and xchg sbb fistpll imul test mov fst (bad) jno pop adc fmuls mov (bad) adc shl sub (bad) jne rex.WRB sbb in jp sub out mov (bad) (bad) jns add movsl adc mov loopne movabs movsb xchg ficompl (bad) cs jae cmp sbb cmpsb and leaveq (bad) xchg mov mov sub mov (bad) mov jmpq pushfq push addr32 ljmp popfq shrb xor movsb or loopne movabs pop sti stos pop adc nop ffree sub std sub rex.R pop (bad) sub add es ficoml xchg mov (bad) xor rex.RX loopne (bad) mov pop push and mov loopne sub and pushfq and test int3 test scas outsl pop (bad) shll popfq rex.XB mov movabs (bad) fimull loopne jmpq testb iret rex.WX loopne add mov xchg movabs insl loopne xchg pop jae xchg lcall ja mov shl es movsb jg repnz sub rcrl pop (bad) rex.RXB movslq callq pop ja xor fwait mov in and addr32 imull je movabs add mulb (bad) adc pop sbb stc retq adc add int shll (bad) and movslq sub mov popfq fimul rex.WRX stc cmpl test cs scas in mov jle lods rex js jmpq mov in (bad) mov out mov adc clc or sarb loope (bad) fild out sbb std sbb (bad) callq loopne cmp cmp fwait test mov push add psubq mov std add mov fs fwait pushq pop fmulp lods adc or mov push xchg mov popfq rex add sarb and idivl (bad) jmpq mov mov lret loop mov push mov ja cmp fbld xor add xchg mov (bad) outsl addr32 loop (bad) in xor scas lret pop loopne jrcxz in lret clc movslq lret (bad) mov out or rex mov (bad) icebp fcmovnbe sub ljmp data16 adc pop mov sahf nop mov loop (bad) rex.RXB or rex.XB lret fisub or pop fsub imul mov (bad) and mov (bad) sbb (bad) movsl (bad) (bad) pushq (bad) shrl movabs ficoml rex.WRXB rcl andb (bad) rex.WRB (bad) xchg jmpq mov add movslq (bad) xchg sarb jae retq loopne movsl xchg mov hlt and jg imul shrb lods mov enterq retq rex.WXB sbb mov adc jb in pop (bad) lret rex.B fwait sub mov pushq push mov loopne jrcxz add mov xor (bad) mov xor (bad) mov or mov rex.WRX (bad) je loopne pushq movslq cmp rol (bad) rex.W in jbe cmp jg rcr movsb loopne sbb rex.R sbb jmpq mov jae rcll cld and mov xchg pmaxsw jmp adc (bad) (bad) lods int pop retq rex.XB loopne add loopne,pn adc (bad) loopne push fwait or pushq loopne cmpsl jnp adc lea add xchg xchg rex.WRXB rex.R cld jp nop (bad) shrl (bad) cmp out sub and mov iret pop cmp xchg test and sub pop pop loopne (bad) popfq sbb cld js xchg lret xor rex.X adc loopne rex.WRB fcmovne cmp rclb mov scas rol in jo mov stc dec rorl adc and sbb test in xor cmpsb in stc and loopne xchg divb xor rcl cli and mov cld push mov addr32 adc loopne xlat or cmp sbb js fld xchg movslq cld jne mov adc leaveq jge out lock (bad) pop sub cli mov and test xlat (bad) cmpb (bad) pop loopne cltd repz shrl loopne int mov in loopne (bad) add movabs add rex.WR push cmp ss loopne (bad) push (bad) xchg sbb or add cmp in addl shlb mov mov cmpsl loopne sub push push sarb pushq ds outsb callq mov (bad) (bad) fstpt out sbb sahf sub xchg lret setp push cmc add movsl xchg xlat ja xor mov add in movabs outsl loopne clc pushq push sbb (bad) adc sub jmpq lods rex addr32 (bad) mov loopne mov fsubrs rcrb rex.W insb loopne (bad) pop outsb scas stos rex.RB xor fsubrs (bad) jae rex.WB lret rex.X jns sbb (bad) push jl xchg adc rex.RX adc in (bad) cmp (bad) ja out mov es loopne pushq mov mov loopne rex.XB (bad) es iret fidivrl pop js insl rex.RB xchg sbb std jg rex in (bad) data16 repnz (bad) (bad) retq (bad) (bad) mov in add adc iret icebp loopne xchg (bad) xchg ss sbb rolb add lods (bad) mov (bad) pop adc cmp adc (bad) jl rex.R sub rex.WRB rex.WXB rex.X (bad) xchg scas shl in lea rex.WR jo movsl in shl loope sub int cmp jmpq cmpsl mov (bad) mov leaveq test sub in fisubl (bad) sbb sub cmp push (bad) hlt jle scas test jmpq in rex.R jmpq mov sbb mov or mov loop jge (bad) xor (bad) push mov hlt loopne cmp callq cwtl ja shrl mov xor pmulhuw and sub sbb insb mov jns xchg sti xor mov movabs mov sarl pushq sub rex.RX (bad) icebp scas jge cmp sbb stos lret clc in or (bad) (bad) mov sub sti jmpq rolb mov xchg shl loop (bad) (bad) nop rcr in popfq rex.W sarb push mov imul xchg xchg and and pushq mov pop jae and sbb repnz fsub fwait popfq add lods (bad) (bad) mov test cmpsl mov or push cmp fdivl and ss push (bad) sbb lock fs xor jrcxz test loopne rex.WRB clc fnop push loopne (bad) add push loopne mov divl int loopne sub cmpsb retq (bad) and push mov pop gs outsb xchg sbb loopne lret jnp fldenv jge jmpq cmove mov pop movsl in adc loopne sub in adc rex.WRXB or pop es pop (bad) insl sub cmc movabs cltd (bad) xchg add xchg jmpq push sarb (bad) cli lret add subb (bad) jns rex.WRX add mov imul loopne loop mov loopne jnp rorl cmp sub in movabs loopne sub (bad) loopne lods enterq (bad) movabs and rcrl sub mov mov shr sbb outsb rex sti mull decb (bad) fisub mov js mov and (bad) rex.X (bad) sbb (bad) (bad) shr push cmp pushq jl out cltd push loopne popfq sub (bad) (bad) adcl and iret rorb jp in enterq jne loopne insb (bad) int3 (bad) scas push sbb xchg leaveq shr adc mov je rex out add sbbl lock sub and stc (bad) sub (bad) xchg push shrb je mov pushq callq pop movabs ss pushq and movabs fisttpll (bad) fistl xchg rex popfq mov loopne movabs negl jmpq ljmp add jnp and loopne fdiv (bad) fidivr outsb fnop repnz xor mov int loopne rex.W jl pop push mov stc cmc pop rex.B lods jo sti push nop and (bad) lret rex.W rex.WR loop sbb push in test pop rex.RXB or (bad) (bad) stc mov jne pop (bad) and lods int3 icebp pop movabs jae mov in jo cld popfq xchg mov pop mov pop (bad) cmpsb jmpq nop in sbb loopne adc rex.R (bad) add imul (bad) je in adc test cli mov pop lret or rex.WRX outsb and sub jo loopne pop fimul cmp loopne rex.WRX mov outsb insb scas jb fstp in xor cmp sub jg jle (bad) jae sub cld in rex.WX push movabs rex.R icebp mov rex.WX rex.WRX adc lahf loopne jrcxz (bad) lods testl add roll add pushfq scas mov roll scas (bad) (bad) movabs icebp xor (bad) (bad) data16 movslq push jne rorb mov pop xchg add (bad) mov pushq sub jmp in (bad) add movslq add (bad) mov jmpq jp stos loope or cmp mov fs add mov jge (bad) pop sub adc loopne scas rex.WX xlat fcomps jp mov xor stc insl movabs add jle jmpq sbb (bad) loopne xchg test rex.X rex.B (bad) mov mov out mov xchg cmp int3 loopne add flds mov je lods add ljmp (bad) in sbb rex.XB insb shr adc adc (bad) or clc rex.WRB pop and (bad) mov rex.WB sub xchg xchg cmp ljmp add retq mov jne nop lock cwtl fs data16 stos (bad) ds sahf ja int jns pop xchg mov js rex.WR out and xchg in sub (bad) loopne lods or cmp push add insb mov pop imul lea loopne jmpq xor fisttpll mov mov fsub jmp pushq xchg loopne jp cli xor (bad) or and cwtl push lock xchg (bad) and js xchg popfq roll xchg (bad) fldln2 cmp nop mov (bad) sub (bad) pop std jno (bad) pushfq (bad) repnz cli jne lahf mov sub (bad) clc movsl add loopne push outsb pop pushq jb (bad) cmc clc jns add or push (bad) pop rex.RX or loopne mov or mov loopne pop adc lods (bad) out loopne (bad) fistpl pop inc (bad) faddl gs adc fiaddl hlt add fisttpl fnsave pop mov adc stos in callq sub in xor imul js or xlat mov push xchg loopne cmp rex.R rex.RB movabs loopne rex xor push roll (bad) pop movabs ja femms fcoms mov adc mov sub jg jmp test sbb lock outsb adc loopne shrb rex.XB pushfq pushq and stos hlt insb outsb jno push in adc (bad) push sti (bad) sub mov icebp adc xor loopne test (bad) sbb movslq xor (bad) jno mov out loopne add (bad) jae (bad) enterq in sub add jg mov movslq pop enterq loopne jns lea (bad) jmpq (bad) shlb loopne xlat rex.WX (bad) (bad) loopne (bad) rex.W fdivl cld test notb loopne xchg movabs pushq (bad) fwait push nop stc (bad) jo add xorb movsb mov std out rex.WRXB add rex.WRB leaveq js in jns adc rex.B divl (bad) pop (bad) movsb stos jmp mov ja in jbe pop (bad) cs fnstsw sbb neg mov adc pushfq add rex.WXB gs pop xchg (bad) fisttpl adc sub adc movsl mov (bad) xchg (bad) loopne or cmp (bad) rex.R (bad) sbb loopel out pop insl (bad) cli pushq andb icebp stos cmp pop callq in (bad) sarl cmpsl (bad) shll sbb rex.WB fsubrl adc (bad) loopne cwtl movabs insl mull es adc cld mov (bad) xor (bad) movabs popfq fnstsw or (bad) cmc flds ja sub rex.WB lahf push rex.WRX jl (bad) mov pop iret loopne pop sahf pushq addr32 jmpq jl (bad) mov push movslq loopne scas push and xchg out retq and mov (bad) in cmp addr32 nop rex.R loopne xchg outsb cmp pushq movabs jmpq (bad) pop stc rex in cmc xor in and mov push mov mov rex.WRX or insl jns xchg mov lret in cmp mov in add xor scas push (bad) cli and in lret rex.W mov shrl out std cs (bad) loop out retq cwtl (bad) icebp (bad) mov movabs loopne cld (bad) push xor rex.RX add mov stc xorb jp rex.X lahf rex.RX (bad) mov xchg cmc jns in xor jo sub int3 mov (bad) jne fisubl push pop lret nop (bad) in sbb pop movsl xchg loopne cltd out rex.R loopne fwait pushq insl in and loopne out clc (bad) (bad) xor or js pushq push cltd sub xchg cmp and add loopne adc rex.W pushq gs sbb rex.WRB cmc push in (bad) stc (bad) movswl retq int3 nop movsl test jge (bad) jl mov movabs imul movsl xor lahf jo mov lock cwtl ja (bad) jge mov (bad) jrcxz sub lret or sub adc fdivrs in adc out jg adc xor callq cwtl jb mov mov loopne addr32 ficoml loopne rex.WRB mov clc lock ror cmp imul loope lret cld xchg xor loopne movsb rex movabs jb std loopne vmovapd xor in jl pop cmp jo movslq cmp in or sbb loop pop add incl xchg and iret rex.X loopnel pushfq (bad) rex.WX add and rex.B rex.WR rol js sahf (bad) loopne (bad) sub rex.W cmpl leaveq lods (bad) adc sti icebp sahf xor loopne lahf out cmp sbb xchg jp and jmpq xchg (bad) jmp loopne rcrl adc (bad) mov pushq adc loopne mov (bad) movabs movsl jmpq int3 loop pop imul mov cwtl sub sub cld xlat sbb loopne adc mov (bad) jb (bad) int3 loopne movabs fdivs xor xchg pop adc pop cmp loopne pop outsl (bad) jne xchg sbb rex.XB (bad) je fcoms notl rex.WR sti (bad) rcr popfq sbb std or cld or and sub jbe rcr mov (bad) and lods jns jmp lret (bad) xchg xchg xchg pop push loopne adc (bad) rorl rex.WB (bad) xlat fwait jmpq ss xchg loopne xchg mov jns rex sub loop or cmpsl (bad) rcll rex.W sub js or fwait xor jrcxz (bad) ds or push fdiv loopne and testb je outsl (bad) int jb jmpq xchg push rex.W jae loopne pop or sub lret push fwait out rex.W outsb shl retq sarb jae rex.WRX fwait or loopne (bad) fidiv jae sbb lods mov callq adc cmpb in jb lea je xchg push loopne cld or (bad) loopne outsl pop xchg fcomi (bad) movsb js (bad) popfq push out cltd movabs (bad) (bad) mov std subl xlat and shl (bad) movabs nop push and cmp add mov push pop shr test jl xchg and icebp mov loopne sbb rex.WB and jbe icebp in loopne push mov xchg movabs cmp (bad) rex.RB cmc (bad) frstor (bad) retq iret pushq fidivrl test cmp loopne pop fisub and rex.WX pop fwait leaveq loopne (bad) mov mov rex stos cmp pop xchg rex.X or adc push fisttpl shrb leaveq rex mov mov (bad) negl imul ljmp mov mov fmuls adc loopne mov vpavgb xchg (bad) cli sub or push and sahf adc loopne and adc out mov pushq xchg lahf loopne jle es (bad) scas add (bad) mov jp int3 (bad) mov callq rex.WX (bad) stos (bad) test xor (bad) fs icebp flds jg incb lock jmpq pop sub loopne cs sub (bad) gs icebp push jmp rex.WB loopne hlt shrl (bad) (bad) push loopne fwait (bad) (bad) or out xor rex.RX (bad) mov cmpsl cmp fisttpl int3 rolb mov jle xchg add cmp movabs xchg loopne sbb movsb loopne ds jnp fcoml stc and sbb jno imul imul pushfq mov rex.B push xchg faddl rex.WRX rex.WX js test (bad) jge (bad) rex.WXB movabs (bad) (bad) cmp hlt psubsb fcompl mov (bad) popfq xor sbb int cmc cmp (bad) jp movabs mov sub rex.XB es (bad) icebp pop sbb mov lret mov out mov ds jno (bad) xor loopne (bad) xor adc and (bad) scas (bad) loopne int in rex.X loopne out rex.WRX sbb mov or flds clc cld adc (bad) and rolb mov in out cs pop movabs adc mov (bad) (bad) push (bad) (bad) cmp loopne fdivrp cmpb sbb out add jbe js sbb outsb xor fnstcw (bad) loopne pop fnstsw loop pop cmpsl (bad) loopne fbld pop loopne sarl mov fildl push cmp xor cltd add rex.W lods mov loopne fistpl loopne rex.WX jrcxz rex.WRX cmp fdivl callq sbb movabs ss sti adc (bad) sub jb fsub fstps out jbe fdivrl lods movslq (bad) out sbb push pop adc jae adc shl out mov loopne ss sti xchg mov loopne movabs and icebp cmp out loope or js (bad) sbb shl lods mov pop outsl loopne (bad) xor or mov rex.R imull rex.WRXB jge mul stos movabs (bad) out or pop sti cld loopne movsl mov xor loopne add xchg add repz xor adc leaveq cmp (bad) (bad) rex.R (bad) xor addr32 (bad) loopne popfq xor out mov (bad) (bad) clc int mov adc shl xlat pop movabs sbb fsts xlat movabs mov rorl loopne (bad) xor loopne and and loopne nop mov rcrb cld (bad) insb pop pushq mov (bad) and insb pop loopne (bad) jb pop or dec jo clc rex.WXB mov (bad) push cmp jbe fnsave push out add loopnel rcrl rex.WRXB movabs jg xorb and mov imul rex.W rorl xchg cli divl mov rex.R in imul cmpsb movabs rex cmp stos xor (bad) jno mov mov out loopne (bad) push cltd shr mov mov pop mov and (bad) test std cli test xlat mov mov lret (bad) callq loopne (bad) pop rex.XB test hlt pop or (bad) xchg jne mov adc pushfq loopne adcb or loopne xchg mov (bad) out jge sub movabs adc cmpsb (bad) add xchg mov test sbb xchg iret int paddb out loopne mov mov sbb jle pop (bad) rcrb pushfq cld in rcrb jb fisttpl loopne rex.X (bad) sbb loopne icebp jb es jmp pop xlat stos rex.B adc add loopne cli (bad) add imul jo adc (bad) je scas pop imul rex.WRXB rex.WX movabs addr32 sbb pop faddl xor movabs adc rcrb and cmp jge shl adc mov add loopne sarl (bad) iret stos jmpq mov jno fimul jp cmc xchg std (bad) in mov xchg sbb clc repnz es adcl jp lret (bad) cld js mov mov movabs jnp orl repnz flds leaveq (bad) movsl sbb or (bad) mov add sbb add in and lods leaveq (bad) (bad) popfq jo add loopne rex.R mov and movsb sti mov or sub cltd cmpsl pop leaveq (bad) stc push movabs lock setge movabs rex.WRB cmpsl fucomp pop mov cs push loopne xor pop and sti sub adc sub cmp fnop adc cld stos cs jmpq jb push adc and repnz cs jnp cmp sbb outsb loopne loop out xor mov mov out ljmp mov rorb sbb jo loopne (bad) loope adc fistpl retq sahf fdivr xor cld push mov movabs lock repz cmp and xor movabs pop cli shll fdivrl in push add cmp sub sti xchg in or mov push pop cs mov (bad) and sbb pop (bad) iret or and scas clc in (bad) xor sbb xchg in test test roll push (bad) or mov popfq jno popfq cmp hlt cwtl es ja fistp clc in out pop movabs idivb loopne fistp cwtl (bad) movslq in (bad) rex.WX movabs jne in movabs and rcll retq sub (bad) sbb (bad) add shrb imul jg mov faddl imul xchg scas (bad) jmpq (bad) movsl outsl scas rex.RX sbb jns jno jmpq mov stc (bad) add add adc test push (bad) (bad) xor push xor pushq movabs loop pop cmp push rex.W test (bad) (bad) idivb cmpsb cld fildl neg ljmp (bad) and cmp (bad) xchg outsl xchg mov mov andb ds and xchg fcomip jbe rex.WRXB in adc cld mov fcmovne loopne enterq movslq ja add data16 and rex.XB in test fnstcw jmpq (bad) mov je mov test loopne adc ja (bad) mov fadd xchg in pushfq loopne (bad) callq rex.XB (bad) and (bad) loop gs or hlt rex.W mov popq cmpsl xchg loopne jo (bad) mov int mov jmp rex.WRB add repz mov adc shl lods imul pop pop movb xchg add xor lods sub out pushq iret faddp xor rex.WR pmulhuw pop or or xlat in lods jae popfq loopne jge (bad) (bad) addr32 (bad) jno (bad) rex adc popfq rex.RX jne lods cltd jle jmp jl and ss (bad) mov repnz out add pop cmpsb add out mov es iret cmp icebp lods rex.WR (bad) shl adc sti jmpq mov lock shll in or add xor mov movabs push (bad) hlt outsb adc leaveq mov rex.WX pushq repnz jns fmull std add adc cmpsb loopne decl pushq or test jo mov lock add pop add mov sub (bad) jmpq add xor sbb fstps loopne outsl rolb nop adc sub movabs add xchg sub or sbb pushfq cmc insb loopne cld out add fildll cltd mul push lods jbe shll and loopne,pt mov fistpll in cmpsl leaveq mov rex.WRXB mov fsubs xor fstpt scas sbb rex.WRXB rex.X hlt (bad) (bad) in mov fs (bad) jae (bad) cmc lock adc fisttp jmpq jo add jmpq (bad) cmp in cmpsl or (bad) or sbb add or mov incb in xchg cmp scas xor data16 imul mov icebp rex idivb popfq xchg pushq (bad) rex.RXB fs lea rex.W (bad) leaveq rex.R and movsb and (bad) lahf pop xor cmpsl sbb xchg hlt jg and stc cli sbb loopne outsb ja jge rclb (bad) (bad) lods neg in sti mov loopne retq iret rcrl jl outsl xchg lahf shrl in and rex.RXB leaveq (bad) mov in (bad) in out jns nop insl xchg (bad) mov (bad) out scas lock push sub jmpq (bad) mov pushfq loopne xchg mov fucom imul and loopne and data16 (bad) loopne push (bad) loop insl mov loopne rex.WR in mov (bad) rex.WRB (bad) cmp cmpsb (bad) retq and or adc (bad) or scas fnstsw xchg cltd (bad) mov jbe icebp (bad) jp rex.WR add jmp repnz loopne mov mov xchg mov pushq je insl rex.W sbb sbb mov loopne mulb xchg idiv movabs loop loopne (bad) iret pop stos jns out xor jmpq lret and gs test mov mov (bad) loopne sbb fwait cld icebp pop (bad) (bad) cmp pop cmp and loopne lret adc sub (bad) (bad) gs jo test rex rex.XB lock gs ss mov pushfq int3 mov pop sbb xor add (bad) (bad) or loopne rcll cmp popfq repz (bad) in jmp cmpsb rex.RXB repnz pop sub (bad) pop jne outsl pop mov adc retq loopne cmovae pop xlat mov cmc movsl xchg (bad) rex.WRB mov rex.XB xchg rex repnz (bad) lods and loopne jb rex.WXB push loopne pop jae xchg mov cmp out loope mov cmp mov cmp int3 retq sbb or std loopne sbb out scas sub movabs (bad) and loopne sub add cmc (bad) mov (bad) rorb loopne popfq push loop (bad) fstl loopne mulb xor loopne addr32 push movabs mov cltd cmp jbe sbb cmp (bad) loopne iretq xor data16 cmp out in mov or xor loopne nop xchg add (bad) cmpsb push loopne mov jge js std loopne sbb (bad) in imul rex.W sbb fstpl insl js movslq mov xchg test cmpsb (bad) (bad) jne jnp and pop outsb pop addr32 (bad) (bad) loopne icebp (bad) movabs jrcxz pop add rex.WRB (bad) loopne adc mov (bad) push or pop jne repz sbbb (bad) rex.WRX mov retq jns nop jl adc je sub in sar or in fisubrl or js cltd (bad) mov (bad) jrcxz fsincos cs loopne lret cmp fadds xlat movsl mov test (bad) jle and jge mul ss sub fistp movsl loopne and rex.WRXB jmpq stos mov lahf leaveq xchg lret add cmp jns dec fidivrl andb (bad) (bad) mov rex.WXB mov pop (bad) cld mov repz loopne jrcxz sub out loopne mov push jl iret cmp (bad) (bad) cwtl clc xchg out loopne roll loopne rex.W rex.WXB sub mov jns mov mov shrb cld pop push or (bad) push loopne (bad) jo cwtl push mov cmp ja fcmovbe shrl loopne adcl cld or loopne (bad) mov jmpq int sbb (bad) jmpq sub push enterq or (bad) sub loopne mov rex.W repnz xor fidiv jmp in rex.WRB addb nop mov add xlat (bad) push fwait (bad) sbb sub fdivs loop mov loopne sar sbb sub (bad) cwtl in retq or (bad) mov and sbb out rex.WXB (bad) movsb sbb rex.XB push and mov imul enterq stos je pop cmp cwtl sbb ljmp jrcxz xchg sub movabs sbb mov xchg stc movabs test fxch movabs sarl outsb lcall adc out loopne mov (bad) cmp stos loopne clc mov push (bad) xchg in (bad) xchg mov ja retq mov roll adc mov scas pushq push addr32 adc movsl (bad) shl lret cli lret andl cli jb shlb or insl (bad) nop xor sub loopne pop add push mov mov icebp repz rex.X cs loopne outsb pop sub jg (bad) sti addr32 mov fsts cmpsl cwtl xor retq (bad) jns sub jmp xchg (bad) int3 rex.WB and pushq cmp icebp roll mov sbb leaveq add fisubl es js xchg movabs lock and jg sbb test je mov add loopne rex.WRB movsl add adc or mov xchg repnz pushq orl loopne mov mov push add (bad) xor xchg pushq cmp cmpsl mov cmpsl loopne rex.WR pop loopne (bad) rcrl add test loopne (bad) (bad) ja xchg loopne loop sbb xlat (bad) cwtl (bad) push js fldl loop sar fildl loopne cmpsb xor mov jae outsb jl (bad) vaddpd push adc mov ja mov cmp push jno (bad) cmp jo out adc or mov mov cmp out xor mov mull in test js xor loopne (bad) jnp pushq add iret or out retq in pop jo mov fnstsw jmpq incl mov (bad) (bad) (bad) xor xchg loopne iret (bad) xlat test cmp (bad) (bad) (bad) loopne mov add mov rex.XB pop sbb cmc loopne jle retq push mov jno pop retq rex.RB outsl (bad) rex.WX add repnz addr32 jp lret imull (bad) rex.XB (bad) add cmovg mov clc retq xor mov and push jp loopne jg rcl cwtl rex.RX xchg lods shrb add rex.WXB lret pushfq rclb loopne int3 lods movabs rex.RB sbb xor in jmpq adc sub loopne (bad) sub pop cld jg rex.WX xor sbb loopne loope or loopne ds and in loope mov jmpq push (bad) test rex.WRX lret int3 callq mov push sub lea mov cwtl loopne push or xchg sti rorb adc (bad) movsb xor hlt (bad) cwtl push loopne pushfq movsl rex.WRXB stc jbe (bad) icebp cld (bad) (bad) xor pop cmp (bad) cmpsb sbb jmpq enterq xchg (bad) rcll pop in loopne rex.WRX fsubs cs out mov mov sahf jmp rex.WRXB cltd psubb pop jae (bad) outsl adcl mov fwait push (bad) (bad) mov rex.WR loopne rex.RB iret (bad) cmp out and shr out test add sbb rex pop sbb jbe cmpl sub sbb outsb decl xchg add mov mov sub loopne (bad) rex.WX xor ja iret fsub hlt (bad) movabs lret outsl (bad) stc fwait decl cmp test cmp xlat (bad) or push add xchg cmpsb xchg out loopne ds jno push loop jbe cld sti cltd and add imul mov ss push fmuls loopne (bad) es rex.WRXB leaveq mov jo retq in callq (bad) je sub popfq and or pop (bad) cld push orb mov add push loopne negb cmp and clc mov ror mov js jno cmp pushq rex.XB push lret clc cwtl fcom mov out rcrl popfq movslq scas cli and cmpsl rex.RB xor (bad) out lods imul mov leaveq cld (bad) loop mov add out loopne (bad) test (bad) adc nop stos (bad) (bad) sub mov adc sbb cwtl loopne lods add in add pushq (bad) xchg jbe jno sub jne ja mov rex.WRXB rex.RX add stc imul stos movabs push jnp sbb adc gs cmp subl fwait enterq rex.WX sbb add mov out loopne cmp sbb push add ja int3 rex.WX imul out (bad) fmull loopne jge neg loopne movsl jbe fisttpl fwait loopne adc es jp cmp and nop sbb loopne sti mov inc stos rex.WRXB stos mov mov fisttpll fisubr jne (bad) shl jno movabs loopne lahf sub addr32 roll lock xchg (bad) (bad) (bad) fist and adc adc fcmove jmpq cmp sub sti retq rex.WRX jns lods rex.RXB loopne cmpsl in movslq xlat xchg movabs stos cs cmp lods adc rex.XB push push cmpsl pushq data16 mov (bad) mov cmpsl jmpq jge retq rcl test addr32 (bad) adcb loopne sub and pop loopne pushq (bad) fwait (bad) mov in mov sbb (bad) shl mov movslq roll sub nop xchg fidivl pop (bad) loope (bad) jl or (bad) mov and or mov out rex.WB (bad) test popfq sub (bad) js and xor mov adc cmpsb roll pop loopne xor mov loop lahf jo mov (bad) (bad) icebp cmc mov (bad) ja test rex.WXB out decb mov add (bad) push int3 (bad) mov (bad) xorb cli sub callq cmc rex.WRB (bad) out movabs xchg sarl mov rex.X add cltd roll sbb cmp movsb xlat int negl (bad) mov jp mov jne loopne,pt and sub (bad) adc push adc loop js pop xchg loopne jae or cmc imulb add retq xchg jge rclb xchg (bad) movabs rex.WRB fucom stc sarb iret rex.X xchg jg fwait (bad) (bad) clc popfq or cmp insb (bad) or cwtl callq loopne pushfq rex.R leaveq cmp cmpsb (bad) xor rex.B movabs pop ficoml hlt loopne js icebp sti rex.X lahf test rcrl pop loopne lahf roll (bad) std or lret (bad) fisub stos rolb mov in fdiv sub pushfq jg sarb cmp outsb mov or loope and rex.WXB gs mov mov clc xchg mov movabs adc jae jmpq xor cmp jmpq pop movabs and pop fcom (bad) xlat xchg fdivr movabs rex.WX cmp mov cmp clc and and movabs jns jne inc rcrl (bad) movsl movslq xlat sub ds cli (bad) (bad) (bad) rex xchg xor jp in (bad) fisttpll or mov cld pop insl xor (bad) loopne rex.WXB add loopne je xor jge cmpsl sbb andb in clc (bad) jg mov (bad) cvttps2pi rex.RXB test (bad) icebp adcb cli cmp loopne add xchg movsl loopne lods and clc in loopne lret fildll sbbb pop push jge movabs mov add (bad) loop movabs fidiv lahf cwtl xor pop cltd sub retq mov jmp leaveq loopne jbe sub rex imul out (bad) and (bad) sahf jae jmp or (bad) pop rex.RXB leaveq rex.WX cmp int mov xor or sti icebp in lock sub cmp and rex.RX rex.WX (bad) (bad) mov rex jb mov std (bad) jle js fsubrl adc (bad) sub (bad) xchg cmp xor rex.RB adcl fxch rex.WX cmp lret shrl sbb loopne scas or push loopne and int3 in (bad) cwtl pushq mov loopne and (bad) data16 pavgb push sbb sar ljmp imul pop (bad) enterq mov (bad) in rex.WXB lock loopne popfq adc jg repz mov mov loopne cmp icebp adcl mov incl pop decl sub jae icebp outsb outsl or rex.WRXB mov xor sti sti jmpq jmpq lock loop incl jb fwait mov loopne add sub mov mov loopne (bad) and xor imul rol pushq in rex.XB adc ds mov loopne outsl (bad) (bad) sbb xchg push scas leaveq test int3 pushq pop ds (bad) rolb loopne cmp clc test int add jne stc mov cmpsl loopne and (bad) stos (bad) sub iret adc addr32 es and xchg movslq (bad) jrcxz (bad) push push lods vmovntps or (bad) mov xor jnp rex.WX (bad) loopne (bad) mov std cld jg mov sbb adc push (bad) adc and lret rex scas fwait imul (bad) std xchg ljmp cld imul loopne rex.XB and (bad) lahf loopne callq movabs mov fucom js icebp adc iret mov and stc fwait (bad) adc mov mov (bad) loopne and rex.WRB pushfq rcr stc movabs xchg shl sbb retq loopne mov outsb mov xor movabs adc nop movsl xchg jo pop pushq fldl rol mull add jmpq jae loopne out (bad) loopne xchg int rex (bad) rex.WXB mov (bad) loopne jrcxz sbb adc lods lea je (bad) lods test leaveq mov flds in movabs mov adc xchg or cmpsl (bad) jne or loopne or mov loopne jmp cmp retq enterq jmpq xchg adc xlat mov add pop or loopne insb ds rex.W fsubs adc test and cltd (bad) roll pop lock out xor mov xchg loopne mov cld xchg outsl clc mov test fchs je pop lretw mov xor push pop xchg ja rcll rex.RX callq pop and test fs xor mov mov test rolb sahf (bad) loopne (bad) repnz rex.RB loopne sub rex.WB (bad) pop clc (bad) or cmp sbb jmpq movabs loopne rex.X lock adc out xchg (bad) push add (bad) jns fisubr sbb xchg cli loopne (bad) (bad) ficompl int mov in in xchg mov (bad) loopne movabs stos rex cmp (bad) cmp cli cmp repnz (bad) scas loopne (bad) insl pushq test adc jmpq mov jno in (bad) frstor out movabs (bad) jge xchg and mov lods and pop and cli cltd mov fmuls sub pop std and sarl (bad) scas (bad) test rex.WXB pavgb or rcll test cmc mov rex.WXB jnp int3 sti sub jo xor xlat loopne fcoml or insb loopne js (bad) (bad) negl loopne cmpsb cwtl mov (bad) rex.WX and clc jnp nop sbb (bad) retq jrcxz adc cmp repnz (bad) jmpq (bad) andb rex.WR (bad) fimull sub sub fdivs cmp add icebp xor sbb jl scas (bad) and mov (bad) adc cmp cmp and lods rex.RB loopne fwait movsl (bad) adc jl xor mov (bad) sbb xor cld hlt js int3 mov pop adc adc shll cli xchg lahf loopne jmp fsts movslq sbb rex.X push repnz mov loopne jne jp xor (bad) subb in rorb pop (bad) fisttpll test xchg push cwtl jo in rex.WRXB fcoml jno clc mov (bad) mov in jmpq or cmp orb loopne (bad) callq movabs cmp cmpsb sti fiaddl lret and jne fucom mov mov out shr pop test xor retq (bad) and adcb loopne mov (bad) retq (bad) addb and sub xchg or (bad) mov jrcxz sbb sbb leaveq out cmpsb int3 movsl and (bad) sti (bad) mov cli adc (bad) loopne ja mov shrb mov adc nop js fcomi add cmp rex.X in jmpq and pushq cltd loopne,pn or fmuls icebp fsubl rcrl xor and in sbb (bad) (bad) cmp push add rex.R (bad) (bad) jp jne push (bad) rex.WX or out clc movsb stc sub pop (bad) or addr32 out push jl add loopne cmp xchg and movsl loopne cmpsl out cmp (bad) xlat in sbb or jmpq (bad) or outsb (bad) jo xor pop jg nop vmovaps lock movsl callq icebp in roll loopne in jbe cmpsb rex.X loopne sbb (bad) loopne (bad) in mov icebp rex.WX (bad) adc div std clc xor (bad) lea mov adc out cld lods xlat add cmp rex.WX rclb pushq xchg cli pop jmpq (bad) sub jbe stc (bad) mov addr32 sbb add fcmovbe sub outsb pop xor sub jne mov pop fwait (bad) nop mov cmp sar sub repnz sub std and loopne test gs loop sbb test mov mov push rex.XB rcll xor imul sub xor loopne (bad) add mov adc gs cmpsl jge cmp test retq mov pushfq loop rex.WXB test int pushfq and ror (bad) (bad) cltd push sti retq loopne int pushfq in mov sbb sbb subl rex.WRB and (bad) fwait sub outsb mov movabs loope pushq and mov (bad) in mov scas (bad) jmpq cltd xor rcl in out loope xlat pushq (bad) repz (bad) add (bad) loopne mov sbb cmpsl xchg (bad) fwait (bad) sub (bad) jg outsl adc out addl loopne jbe push (bad) adc rex.X (bad) jg (bad) fstl (bad) push or movslq rcll sub sbb loopne sbb sub mov sub adc lret movabs shr jno jns cmp rex.WXB (bad) (bad) int3 xor roll jp js icebp rex.WRXB adc cli (bad) cmp mov cmpxchg jge (bad) pop (bad) clc or adc movsb or mov mov and or fiadd sbb out movsl loopne xchg mov and cmp jmp loopne rex.RXB rol sbbl in (bad) cmp rex.XB or rex.X and or jmpq ja cmc (bad) (bad) xor rex.RXB repz (bad) not loopne insb rex.RB adc pop (bad) (bad) jl movslq loope pop jrcxz rex.WXB xorl sub loopne sub (bad) jae (bad) mov and push sub xchg dec je rex.WX iret lahf in sbb in loopne xchg rex.RX enterq pushq xchg rex.R jns mov in shrl add mov jg mov movabs imul mov (bad) fisubl cmpsb movsb (bad) jmpq pop and in loopne xchg rex.WB int popfq loopne jp andl imul or addr32 pushfq (bad) (bad) jo mov shrb loopne or push lods int3 xchg icebp pop jbe jae xchg repnz jns cmc loopne or sbb sbb fucomp rex.RB ficompl add movsb nop jno sub pop ja mov loop xchg retq test in sahf and ja and fdivp rex.WRB loopne xlat sarb loopne xchg cmpsl fwait cmp ss retq nop movabs adc jg rol (bad) push loopne mov ds loopne movsb or jle xchg cld mov retq mov lahf (bad) jrcxz stos in retq shlb jnp and and scas loopne mov sbb test cmc rex.WRXB movsb (bad) loopne (bad) sbb jrcxz in std movsl add loopne test sbb and (bad) adc sub popfq adc (bad) jrcxz (bad) movsb imul mov sub icebp test cmp sarl (bad) in lret sarl rex.R cmpsb xchg std (bad) rex.RX jne and andb lret fwait cmc out in decl and xor sbb mov (bad) clc orl jo test mov (bad) stc mov and out adc pop cmp repz xor (bad) (bad) fcmove jbe xor xlat (bad) movabs scas (bad) push cs sub (bad) hlt test repz es push nop loopne xchg cmp jmpq (bad) add mov cwtl and adc lods clc fdiv adc and movsl rolb fsubl (bad) jl rex.XB sub movabs icebp cmp (bad) mov (bad) and cmp insl fsub (bad) rex.RB sub adc xchg leaveq loopne mov repz fsubr adc in (bad) (bad) insl (bad) mov and lret or rorb mov loopne cmpb and (bad) mov js (bad) cmp (bad) (bad) add int test addl in (bad) callq fnop sbb (bad) mov sar xlat and jno pop jle and xor cld cs xor gs add jrcxz push loopne (bad) sbb jle pavgb out jl rex.R fmulp callq xchg or push loop (bad) push ss in stos cli rex.WRXB xor rex.WB jae (bad) fcomps xor mov ja (bad) jmpq and xchg repnz add jmpq test (bad) rex.RXB jne jae or lcall jge rex.WRX add in test and (bad) cwtl sbb adc ds pop lret add loopne xor jns loopne fbstp mov idivl stos push jbe (bad) flds rex.WRX jne jmp ja lahf or add cmpsb (bad) rex.WRX loopne pop (bad) movsl rex.WRX jrcxz sub (bad) add out adc clc pop loopne adc jno mov jmp movabs jns rex.WRXB rex.B repz in test sbb or sub add (bad) rclb adcl cli movsl or cmpsl (bad) and xchg adc cmpsb movabs repz rex.WRXB cli mov mov sbb fsubr pop fcoms test rex.XB movsl loopne int sbb or out movabs stos mov lods nop lahf lret in movabs rex jno pushq (bad) cmp cmc push loopne xchg cmp ss orb or sub rex.WRXB orl loopne mov push insl loopne movabs or std in (bad) (bad) sbb sub ds (bad) mov sbb lret or pushfq lcall mov add or (bad) (bad) cwtl loopne (bad) (bad) clc data16 jo sub (bad) repz pushq add fidivrl jp sub pushq cmp add pop add sub xor roll clc mov (bad) shrl jb or clc es loopne fisubrl mov xor mov repnz cmp fnop out loopne lock sbb adc movslq (bad) fiadd jns imul es loopne,pn xchg jae out sti (bad) pop sar pushq iret sub (bad) test mov in sub outsb addl jbe pop es (bad) xlat sbb loopnel data16 scas bnd cmc cs loope notb sbb cli iret fadds mov add loop (bad) leaveq lret loopne sbb jle movabs (bad) pop (bad) pushfq out (bad) sbb cli and mov (bad) out jmpq pop in sbb iret cmp nop loopne lret imul rex.WRX xor imul push cmp fidiv popfq movsl mov sbb in int (bad) push and (bad) popfq (bad) ss xchg (bad) rex.RXB add callq cld ficoml push loopne movabs jmpq or (bad) xlat cmovnp (bad) mov (bad) loopne icebp subl adc mov add mov rex.W rex.RX loopne mov jge push (bad) fstpl jl push pop rex.WRXB out sbb add enterq (bad) sti mov nop mov loopne or sbb es out icebp callq jmp gs loopne divl or ss fisubr jmpq xor cmp loopne mov (bad) adc adc scas pop (bad) adc mov (bad) lret and js jnp jbe rex.WRXB movsl iret jrcxz sub fnstsw loop rex.WR push (bad) (bad) cmc rex.W mov loopne in int3 adc lahf loop insb int lock out (bad) and loopne rorl and (bad) push pushfq jns push jno (bad) sub imul add rex.R punpckldq addr32 (bad) movabs insl fcomps cmpsl outsb rex.WR jb movsb (bad) (bad) cld (bad) adc (bad) (bad) sub (bad) loopne sbb jmpq rex.X pop jp scas movabs mov sub movsl jmpq adc (bad) loopne mull (bad) sub (bad) iret (bad) xlat shrb mov rex.WXB xor (bad) cmp xchg xchg (bad) (bad) nop out cmpsb test cwtl (bad) cltd loopne (bad) mov icebp rex.WRX loopne movd mov rex.X fwait gs (bad) pop sar sahf and sar (bad) in adcl int3 clc stos (bad) mov jb jmpq mov repz leaveq movslq (bad) (bad) cli (bad) and jg add mov loopne sbb gs loopne pop rex.B xor loop icebp cmpb sbb mov insl lock (bad) jrcxz (bad) fsubp callq jno retq and loope jmpq negl push loopne (bad) lock lea icebp cmpsl cmp pushq and movslq fidiv or jno jp,pn in loopne cmp cld mov jl (bad) mov (bad) rex.B jp (bad) xor in (bad) pushfq imul cmpsb (bad) jmp push pop xchg movabs loop sete loopne mov loopne fstps and loopne cmp fnop sub callq jns mov (bad) loopne fdivs cli in push or repnz out (bad) rex.RXB adc or out lret mov loopne leaveq (bad) and fisubl loopne (bad) cmc (bad) std mov fwait mov nop adc sbb jo mov xchg (bad) jmp (bad) andl nop mov rex.WX enterq loopne xchg add loopne data16 stos rclb (bad) retq sbb (bad) stc (bad) je (bad) jb (bad) enterq and out in mov mov retq stos (bad) xor jns retq cld lret out rex.RB pushfq and cmp jo sbb sbb xchg add loopne push rex.R rcr loopne pop movsb scas mov xchg mov rex.WRX or xor test movsl xchg test movslq (bad) pushq cmpsl (bad) (bad) mov out js rcr (bad) (bad) lock and (bad) fs mov cmp (bad) icebp xchg jo es (bad) xchg xchg sbb mov or int3 sbb mov in loopne lahf xor loopne data16 xor mov cmp or setge sahf movabs jo roll xchg rex.RB xchg mov nop pushq jne xchg xchg sbb rex.RX pushq stc fstpt je jge in jp movabs (bad) jg push rex.WRXB push loopne adc leaveq callq jle outsb mov cmp rex.X adc xor jmpq pop (bad) or sub (bad) xchg sti and insl fstpt fdiv (bad) xor mul es rex.WRX int3 pushfq insb (bad) enterq jmpq (bad) push and stc jmpq test in hlt loopne rex.WB jbe add jp lcall (bad) (bad) adc mov sbb adc stos (bad) (bad) mov adc mov (bad) rex cmp loopne and fldt sbb rex.RXB rcll push jrcxz (bad) or xchg (bad) and rex.WR jg rex.X adc jmpq sbb and push jl sub pop loopne sub xor jmpq cld mov mov repz rex.RX rex.RXB cmp mov decl mov int sti popfq loopne xchg (bad) movabs (bad) pop push fnop (bad) ss add out rolb (bad) in cmpl int xchg movsb in mov loopne jle (bad) sbb rex.WX rex.X imul loope adc rex.WB fwait loopne sbb rclb mov popfq mov loopne pushq jo push jb loopne repz (bad) addr32 sti loopne push push cmpsb vcvtsd2ss (bad) (bad) in or stos or rex.R mov add xor sahf mov rex.WRB faddl outsb icebp xchg mov and cmpsl xchg xor or adc xor repz xchg shlb cmp add jmpq (bad) ficomp (bad) pushq movabs and (bad) movabs push mov int lock loopne mov es add mov (bad) add sahf cmp or rclb mov jp xor jg jle push mov test stc roll or fimull xchg xlat mov mov (bad) cmpsb xchg pop loopne ja push out xor (bad) retq fwait (bad) xchg xor (bad) stos xchg cmp negb pushfq and shl mov or in je xlat ja loopne icebp movsb fidivr cmc outsl rex.W (bad) rolb (bad) xorl out sti mul mov xlat mov vpcmpeqw xchg addl lods retq xchg loopne nop mov insb js loopne (bad) jno js push or or cltd in callq jp (bad) loopne (bad) (bad) push out and callq rcl rex.WRX adc int movl loopne mov mov (bad) jge retq lods (bad) mov sbb xor js adc imul out lock xchg cld push xchg movabs jb in test pop rex.RB xorl callq (bad) jo rex.RB movabs and pop xchg cmp nop loopne mov xlat out scas int3 fcomps ja sub ficomp movsl rex.WRX mov or cld add xor out mov adc test test outsl sbb jmpq iret int3 stos adc mov (bad) (bad) outsb (bad) retq mov cmpsb testl (bad) scas in (bad) pop jae sbb xchg jbe (bad) movabs retq jmpq xlat movabs ds movabs xchg int3 (bad) (bad) retq out (bad) xchg outsl lock loopne mov jae xchg mov loop xchg (bad) mov xlat xchg (bad) jb stos int3 xlat lret (bad) loopne lock (bad) stos mov cmpsl roll loopne mov ja mov outsb push and test adcl sub (bad) adc (bad) sbb loop or outsl pop test retq (bad) scas rcl loope cmp shl stos cld sub mov loopne rex.WR xchg fwait rex.XB sbb lods (bad) xor (bad) mov lret or xchg movabs mov rex.WRB pop sbb ficomp rex.WRX shr movslq insb mov loopne jp mov (bad) lods sahf rcr (bad) test and loopne iret rex.WX in adc fldenv (bad) (bad) cmp (bad) cmp (bad) xchg lret fchs cld sbb jmp in (bad) lock (bad) add movabs or mov and test jrcxz or pop rex.XB rex.WX and (bad) (bad) jmpq rex.XB cli test (bad) pop jle rex.X cmc lods cmp rex.RX fs test sub jge rex.RXB or adc rex.WRX or mov subb (bad) mov shrb adc adc loopne pop lret and in clc mov fidivl adc adc idivb (bad) (bad) xchg pop or xchg (bad) hlt pushfq rex.WRB pushq mov (bad) (bad) rol (bad) ja mov leaveq sbb adc stos rcr loopne or cld cmp test mov loopne add nop rcll adc jnp loopne (bad) cmp sar rcl sub test mov rex.X sub rex.X sub jae test adcl movabs or (bad) fadds or nop subb (bad) out adc adc jno (bad) (bad) fxch imul mov loop mov loopne xor (bad) xchg sub mov xchg jle lahf rex.WB rex.RB movabs fsts loopne fnsave jbe test cld callq jne pop rex.WX clc xchg push (bad) sbb test (bad) popfq mov jmpq leaveq and rex.WX (bad) fistl sub mov (bad) xlat iret xor outsl mov in gs stos cmp (bad) sbb mov (bad) jno data16 gs in cmpsb (bad) test mov pop pop int3 rex.WRXB (bad) rclb cltd xchg mov enterq frstor (bad) mov mov (bad) loopne push jno (bad) outsb rex.RB cmp and shrb adc insl (bad) xor loopne loop xchg jmpq xor mov (bad) rolb loop (bad) loopne es repz cmc adc movabs hlt (bad) and insl rex.WXB in cltd mov es push mov shlb js or std (bad) cmpsl lret or imul movslq pop (bad) (bad) jo fs test (bad) pop mov (bad) out jmpq (bad) mov jle,pn roll adc in loope cwtl out (bad) (bad) stos and fmuls sbb or fs adc shll jo sbb fcmovnu jns in adc cld cmp (bad) loope pushq mov sbb outsl (bad) xor cs cwtl fist test add jg movsw mov pushq (bad) sub jrcxz xor clc (bad) rex.WRXB jae push mov (bad) pop mov cs sbb insl or (bad) sbb pop rex.WR fildl shrl (bad) xlat pop out (bad) xor xor fidivrl add out and rex.XB and clc xor sbb (bad) or pop (bad) (bad) out fs lock sub rex.WRX pop jo mov (bad) (bad) icebp (bad) callq mov in (bad) (bad) push and mov insl jge ja clc fidivr outsl sbb adc sbb imul js ficompl mov jo rclb (bad) pushfq mov push mov xchg out imul jg jge (bad) sub (bad) (bad) (bad) repnz adc xchg xor jne xor loopne int3 rex.W cwtl (bad) fst and mov jmpq in mov movsl cmc sbb loop xorb fstl rex rex.X rex.WRB rex.WRB jrcxz movabs (bad) sti cmp movabs (bad) mov shrb (bad) (bad) shr mov cld (bad) mov retq ror out nop push jge add lods mov adc pop jo rex.WR and mov sahf rol adc movsb fildll je fistpll and push test adc in (bad) sbb (bad) (bad) out (bad) jae rex.WRX ss jo enterq rex.XB and or cli rex.WRX xor (bad) or sub jp mov adc imul pushq (bad) (bad) fiadd in callq sub rcll push es movsb rex.WB rex.W sub xor mov std (bad) xchg (bad) mov xchg cmpxchg or mov sub in and lock jge lahf cmp divl add lahf decb sahf out jo and mov xor rex.W loop ds jle test and and xor and (bad) (bad) sbb adc lods out lock sbb callq imul mov push pushq in xor out (bad) adc jrcxz sub pushq movsb in addr32 (bad) fildll jmpq (bad) pushq adc cld movsb insb sarl mov insl movabs cld sbb pushq (bad) mov xchg mov enterq sub cmpsb push fisttpl xchg (bad) in (bad) movsb sahf mov push add fisubrl imull fcomps rex.WRXB and fnsetpm(287 or sub rex.WR or mov sbb rex rex.X pop (bad) and jmp adc or jmp pushfq out (bad) callq lahf push mov mov insb stc retq out pop addr32 jo push (bad) (bad) (bad) push lea pushq js clc or (bad) sub movabs sbb adc rclb movabs jmp (bad) (bad) (bad) fmull (bad) insl outsl out lret rex.WX in mov movabs rex.XB je (bad) (bad) cmp scas sub outsb and je loopne lock leaveq jns jmpq xchg xchg add xchg sti xchg movabs fistpl shlb and loopne loope cld pop pop cmp pushq (bad) xor jmpq add xchg sbb jae lret or fnop and movsl retq rcrl (bad) pushfq movabs (bad) cld movsb xchg or pop rex.WRXB (bad) shl mov xchg mov es fimul xchg xchg jge cmp pop loopne cmpsl ss clc pop or (bad) inc and and cs or outsb add movabs rex.WB sub loopne mov lods imulb pop loopne fsubs xchg je xor cmp jnp (bad) loopne sahf adc xchg add (bad) push test (bad) rex.WRXB sahf test push loopne (bad) pop cs cli (bad) pop lods jp (bad) rex.WRX cmpsl adc jns xor jmp (bad) movabs icebp push leaveq or fwait movsb lret loopne scas (bad) xor pushq (bad) lods xor movabs (bad) cs movabs (bad) mov incb pop je sarb (bad) fbstp jmpq addr32 lock xchg callq scas icebp clc jno sbb mov (bad) in rex.WRXB pop jne push cmpsb adc out rex test xor (bad) jne jo or shl (bad) cltd or pop shlb cmp cmp ja sahf jl or incb and cmp test popfq insl jge add gs jo clc mov push icebp cmp cmp movabs and addr32 mov lret nop (bad) mov and and mov mov js in add sub xchg rclb addr32 jae fistl cmc shrb (bad) lods and (bad) movabs jrcxz movsb stc xor ja enterq scas adc out sti (bad) notb (bad) orb scas sbb nop loope jrcxz mov fmuls rex.W (bad) jmp (bad) addr32 loope (bad) adc test (bad) in push (bad) sbb lock (bad) (bad) lock scas xchg fistpl lock rex.X (bad) std in mov (bad) jg out fmuls int3 sbb pop jrcxz repz adc js cld lods insl cmp (bad) enterq cmp cmp addr32 rex.WRB jne stos jmp push or callq fdivrs jp push rex.X rex.WRXB repz (bad) mov jrcxz (bad) in cmp int3 sub iret lret mov test sub out nop pop mov xlat lock mov roll jle (bad) (bad) in sahf clc repz push sub and cmpsb fucomi shlb adc nop (bad) stc rex.RXB mov rex.WX iret sbb cld lret fnstcw mov jbe or sbb sbbl and stos rol or iret sub push xchg (bad) sets xor nop ds (bad) mov test mov jl movabs xchg jb rex.WX xchg jnp mov cwtl xor jle rex.RXB xor in (bad) (bad) mov movabs ds sahf je and sub cmovs push jg mov in (bad) xchg iret shlb rcrl in jne adc cmp mov out pop data16 add (bad) fwait cmpsb rex.WX pop cmpsb (bad) icebp (bad) je xchg jmpq pushq popfq decb (bad) (bad) cmpsl xchg adc xchg jrcxz imul jl pop pop lods movsb rolb rex and (bad) test xchg sub xor clc retq imul movabs movl imul nopl rex rex jo in cmp rex.X mov mov (bad) movsb jns fwait stos movabs and addb xor jmp cli (bad) mov jrcxz adc add retq loopne rex.B jp,pn pushq ss fisttpll sbb fnop and jrcxz (bad) fs loopne iret movsl imul adc loopne xor (bad) rex.WB loop xchg or sub sub hlt xlat incl (bad) cmp rex.W cmp mov mov stc or stos jbe gs sahf sarb test out and out fwait mov sarl rex.WXB int3 xchg (bad) fldcw popfq xchg fstpt adcb loopne ss (bad) out stc or push insb and lea je mov mov test rex.RB mov (bad) or retq mov (bad) xor (bad) jb leaveq lods rex.WR pop loopne rol xor adc in movabs loopne fwait xor loopne loop insl pop add (bad) xchg mov add (bad) (bad) lret lret pop in and (bad) clc jo xor jmp loopne js movslq mov cmp jnp jrcxz icebp in or (bad) addr32 movslq outsl jo xlat add mov jrcxz jb sbb pushq (bad) flds out rex.W movslq cmpl sbb xchg ficom fdivrl push repnz imul (bad) lock gs cmc (bad) (bad) lock shr add cmp (bad) (bad) (bad) sbb cli in lock sbb loop xor mov mov (bad) (bad) data16 xor stc jne (bad) and outsl cmp and and or rex lcall cs (bad) add add mov and (bad) retq xor (bad) ds mov mov popq outsb or (bad) sub rex.R (bad) out js callq (bad) pop (bad) rex.RB lret mov pop sbb loopne cmp (bad) mov push (bad) jle rclb mov lret cmp loopne andb in hlt jrcxz fwait (bad) xor in fisubrl rex.B movslq or mov iret incl (bad) rex.WXB pushq movsb (bad) jo imul mov hlt sub xor and lret vmulpd clc in sbb (bad) iret push pop pushq mov (bad) jge (bad) rex.WXB add (bad) callq pop rex.WRX enterq jg pop (bad) repz (bad) (bad) and insb retq sbb and add rex.WX mov enterq (bad) in and addr32 mov loopne js cs (bad) mov push (bad) loopne imul flds imul lods and push in iret cli fwait xchg movabs adc fiadd pop jge mov jmp clc (bad) jg push sub xchg cmp (bad) rorb (bad) in (bad) mov (bad) lods jg test mov (bad) mov rex.WB (bad) xlat js xchg loopne push sub leaveq (bad) rex.WRXB mov (bad) nop pop loopne insb xchg out mov js push out add rex scas (bad) shrl or or push addr32 fdivs fs add rex.WRB sbb adc hlt cli adc add test out retq loopne xor rex.WR xchg (bad) out cs or clc cmp rolb push (bad) adc iret imul ss (bad) (bad) cltd cmp test (bad) mov lahf push push jmpq xor add or xchg sbb rex.WB sti loopne jb mov mov out rex.B loopne out jmpq jo loopne stc scas pop and loopne xchg pop bswap icebp sbb loopne push (bad) pop jp ror and insl std (bad) cwtl and mov (bad) cmpsb and cmp jge pop (bad) push jrcxz xchg (bad) in mov push movsl outsb (bad) movabs incb (bad) (bad) pop rex.RXB sub test sti (bad) mov fcmovnu sub jge cmc rex.WRXB movsb adc loope andl sub (bad) retq (bad) pop in jle movslq fs rex rex.WRB gs ucomiss in mov push fidiv cld movabs jg jno xorl jl and outsb insl movsl fs (bad) addr32 out in out push adc loope xor and ds (bad) sbb lods lret ficom adc (bad) sub cmpsb cmp mov mov and jmp shll (bad) (bad) jbe mov jle push sbb je (bad) sbb data16 (bad) add (bad) icebp xor xlat addl scas jnp jmp push repnz shr jg (bad) int3 jae mov sbb data16 push bnd shl in jmpq (bad) fbstp rex.W (bad) insb sbb rex.WXB (bad) (bad) je (bad) scas or movsb (bad) enterq callq sbb rex.X lahf mov addr32 rex.WRXB (bad) ja and sbb (bad) movabs mov (bad) cmpb repnz jg rex.WRB in mov sahf fld mov cmpsb jge mov test pop sahf push fiadd xchg jrcxz in mov jrcxz repz jb rorb decb lock ss and (bad) xor (bad) es repz lods xchg rex.R cwtd xchg imul add test sti xor mov and pop xor adc (bad) test iret icebp pop sub mov lret mov (bad) mov fstp rex.WR pushq rex.R lea (bad) jae jg or ds rex.RB loop (bad) sti jle add mov lods (bad) test add lods mov or insl mov scas out mov jg pop scas rcll jns rex.R pop retq fnstsw push out mov or es jrcxz rex.WB cmp loop (bad) fmul (bad) hlt stos mov rolb in lret addr32 mov stos sub (bad) add jg (bad) (bad) xor callq mov out sti pop jp xor push loopne in mov addr32 scas cmp or (bad) fnstcw andl jp pop (bad) loopne sahf lea popfq mov fmull movabs xchg xor gs pop (bad) out imul pop rex.WB (bad) jnp (bad) stc adc decl cltd outsl fwait add jge loopne shlb adc loopne fsubr fisubrl cmc test out xchg (bad) rex.WB xor int3 rex.WX sub clc rcrb jo loope fwait xchg rex cli fs loopne mov fcom loopne data16 add pop je (bad) cmp adc movsl (bad) (bad) insb stc (bad) ss mov rol sbb push sbb (bad) and xor loopne xorb icebp sbb and jae data16 cmc adc jo rex.X (bad) movabs sbb in andl movabs and push repnz rex.WR loopne enterq xchg cmp loopne int rex.W incb leaveq test insl xor test lods loopne jo repz push (bad) loopne movabs cmpsl mov in xchg adc fcomip (bad) in pop pushq push (bad) addr32 (bad) movabs add scas (bad) js lock or callq cmp jle out out addr32 (bad) (bad) icebp pushq xchg (bad) mov cli fwait mov push rclb ficomp sub js jmpq xchg in mov xchg pop (bad) (bad) push push mov insl test and fbstp loopne xchg pop out loopne (bad) mov mov (bad) loope rex.WXB nop xchg xchg (bad) (bad) pushq jge sub push (bad) adc xchg (bad) gs rex.XB mov (bad) (bad) ss push xchg pushq xchg mov stc fistl retq and (bad) (bad) shrl cmp ficom cmpsb jns data16 rclb and (bad) push and (bad) lods adc cmpsl in fwait (bad) cmp jns (bad) mov (bad) movsl (bad) xor mov push loopne xchg and and retq in (bad) cld (bad) xor outsl xor rolb sbb lahf add rex.WRB and rex.WX icebp mov iret andb out and jnp clc or out (bad) loopne stc xchg cmp xor repnz in loopne lret sub mov xchg stos fsubp movabs jbe pop (bad) retq out sbb rex.WRX sub sbbl in (bad) (bad) adc xor and add loopnel mov sub cltd sbb rcr mov jne fsubrl xor or sbb fldenv lods sbb movabs jo mov sub mov stos out sub movabs cltd movsb sahf (bad) lret mov push leaveq flds callq sbb sbb cli (bad) sub in (bad) repnz rex.WXB mov rex.WX test or (bad) rorb fdivrl out (bad) sti xchg js icebp shlb sbb (bad) cmp loop (bad) (bad) xchg rex.RX add cmp out lahf imul mov test (bad) (bad) scas add movabs rex.W popfq jmpq adc sbb movabs out mov and shl (bad) fcmovnb and (bad) xor test rcrl movsl cwtl in (bad) add es push loopne sub cwtl int3 cmp (bad) insb fmuls (bad) xor rorb add xchg shl jb jmp movabs movslq insb movsl loopne rorl or test insb rex.XB rcrl adc mov test push sbb loopne rex.B xchg in sar pushq jns adc rex.WRB rex.W adc and rex.WR test xor hlt sbb xchg stc and rex.RX xchg loopne and xchg jo adc rex.W sbb mov mov stos insl sarb fstpt jrcxz inc or sub or jmpq mov movsl jns add ficompl adc rex.XB in (bad) adc mov retq jmp test add jrcxz (bad) stc gs rex.WX repnz push ja out (bad) fsubrs js jg icebp (bad) in rex cltd adc xor mov mov fdivrs xchg mov loopne sub in pop mov gs test cmc (bad) fadds xchg cltd xchg flds fidivl mov cld ds ja movsb (bad) or movabs orb out add rex.WX ja int (bad) push in and rex.B mov adc sub loopne lret pop add (bad) push add xor cmp out enterq loopne lods (bad) xor or cmc fdivrp (bad) jg loope fistpll xlat sbb (bad) (bad) stos rex.XB lock mov xorb es rclb push sbb retq cmp jg push je loopne add scas test movsl sub (bad) rex.XB movslq icebp imul add popq (bad) (bad) movabs jrcxz mov (bad) pop (bad) fcmovb cli jg (bad) add (bad) rol sub sub ds leaveq xor and outsl (bad) jnp mov jo loop (bad) rex.WRX sub push and retq outsb out jrcxz icebp (bad) and jge in (bad) je imul sub loop push in icebp icebp (bad) movslq rex.WRXB rex.XB (bad) pop (bad) (bad) sub imul cmp test and out sbb test scas (bad) cmp rex.WB add popfq shl add pushfq fcmovnbe jnp (bad) sbb (bad) hlt cmp pop jne (bad) sbb repz cmp xchg xor (bad) sbb cli imul jle add mov retq (bad) or sbb repnz in push rex.RB out lret data16 add (bad) and cmp callq out movabs fcmove (bad) fdivl movabs callq insb (bad) mov movabs adc or mov mov icebp fcmovb mov in (bad) (bad) push jno mov std fcmovnb fbstp xchg mov icebp add out (bad) mov add (bad) (bad) int3 pop jns pushfq test out adc rex.WX addr32 callq in (bad) sbb mov fnsave mov add rex rex.WRX sub mov subb push insl push add out addr32 add fisubrl (bad) fucomi add cmc adc imul jne mov fiadd movslq mov cld je and jne insl out jae imul jne rex.RB test sbb sub mov fistl (bad) hlt jg mov (bad) rex.RB rex.WRXB cmc movabs icebp cli mov roll (bad) jmpq fmull rex.WRXB movabs cmp (bad) out xor pushq adc push xor int push leaveq movabs rex mov cmpsb pop push sub sti mov fsubrs sahf jge in cmc (bad) mov add adc (bad) std mov and shlb (bad) xor mov pushfq cld mov sarb add cmp fcomip insl rex.WRX addr32 and (bad) je in callq loop push rcl sbb callq sub fldt jmpq jge and sbb jo xorl leaveq ffree cmpsl pushq (bad) (bad) and scas mov and and leaveq (bad) pop movabs cmp rex.WX sbb loopne (bad) rex sbb loopne or mov adc (bad) (bad) shl jo data16 sub (bad) (bad) leaveq retq loopne jb lods add add lods jge and lock adc hlt callq enterq fcmovnbe in cli (bad) cltd (bad) (bad) mov (bad) xchg cmpsl fsubrs out (bad) jbe pushq lea (bad) or (bad) rex.R mov in xchg movsb lods jo insl shl rclb jge (bad) lods push out fwait (bad) testl lahf int3 mov (bad) or lods loopne jl and nop rex subb (bad) xchg xchg pop add xchg xchg fs rex.RX nop in adc sbb (bad) icebp retq movsb mov (bad) rex adc ficomp cmpl lock sti jb cmp fiaddl (bad) cwtl movabs cmp in (bad) and stos movabs mov pop imul fs (bad) (bad) movabs movabs enterq and fstps movabs mov push jge and (bad) or and (bad) mov mov cmp (bad) cltd xchg (bad) jmpq rex.W sub imul scas sbb data16 cld clc sarb (bad) lock test rex.WXB sub (bad) imul int3 rex.B insl fsubl pop mov mov loopne (bad) neg xchg ds ficom (bad) clc sub (bad) fmuls jmpq ss sbb rex.WX loopne (bad) (bad) cli flds jo test movabs (bad) xchg rex.WX movabs imul or add stos lahf cwtl (bad) rex.X (bad) and pushfq fwait (bad) retq sub movsl loopne xchg jmp push (bad) iret pop out (bad) and sub add sti (bad) rcr loopne fwait movabs xchg jrcxz cld adc movabs pop movabs pop cli xchg subb loopne pop adc idiv movslq or mov xor lret mov cmpsl push cmp sub lret add rex.WR mov lods (bad) fisttp in mov xchg rolb jg or enterq cmpsl xchg cmp je mov gs clc cmpsb roll sub cltd mov rex.WRB (bad) loopne pushq cwtl jo adc sbb repnz sti adc cmpsl or mov rex.WXB rex.RB stc scas idivl test adc rex.X repnz loopne mov push xor loope insl rex.RX mov mov mov and xor sbb xchg gs rex.WR scas add jp loopne jae pop clc or add mulb hlt (bad) adc jrcxz (bad) mov test cltd movabs movabs cmp mov fstps loopne or pushq in clc pop loopne (bad) sub test xor loopne mov rex.RX rex.WRXB or lods rex.XB cs test (bad) nop and movabs movabs pushq js sub jle pop rolb sbb sti mov stos mov fisub (bad) lret jae ja cltd and (bad) in or repnz (bad) pop cmc add callq rex.RX (bad) (bad) leaveq loope lret jrcxz (bad) decl add xchg add add pop retq jmp scas add test xchg popfq lock loope rorl incl enterq movl rex.WR loop cmp add out (bad) outsb adc jg xor cli or pushfq sub loopne pop (bad) imul adc shrl add sbb jns loop ss xor (bad) cwtl rex.XB ja rex cld rex.WXB mov mov (bad) fwait push cmp (bad) mov insl incb incl icebp rex.WRXB in mov xchg rex.W rex.B xchg js and (bad) insl and cmp stos (bad) xchg out or nop xchg xchg rex.WRX shr in jnp gs and cld in mov (bad) es cmpb (bad) push lcall (bad) icebp jbe (bad) insb (bad) and and fs movsb pop pop sbb pushq (bad) xor in neg cmpl rex.W or xor iret jrcxz shrb and data16 leaveq pushq push rex.RXB (bad) mov jae out repz lcall insl xchg cmp xor (bad) (bad) and mov icebp fs in fbstp jo imul sbbl imul cmpb rex.W fnstenv movsb cmp cmp (bad) (bad) (bad) add sbb or shrb cmp sub xor negb adc sbbl (bad) mov cmpb enterq mov push jne insl or je or loopne loope adc icebp jge jns insl cmc lock out lods (bad) (bad) shlb rex.WRX shl sbb xchg (bad) movabs jmpq sahf adc in xor pop cmp lods and (bad) gs jg adc (bad) push sahf (bad) (bad) jno stos test sub cmp (bad) or xor (bad) pop jrcxz xchg roll stos xchg mov sub out jns fcoml and mov rex.RB movabs fs sub pop movslq and pushq (bad) xchg sti rex.WRX sub mov adc sbb xchg mov movsb out jge cs cmpsl pop sub or lods cmp in mov mov pop lret ljmp jmpq cli icebp and pop fsubr pop and in fldenv (bad) (bad) pop jo fdivs mov fucomi push jo,pt jae pushq (bad) (bad) cmp out rex (bad) pop clc sbb loop xchg (bad) popfq xchg mov rcrb cmpsl sbb mov xor je retq notb callq lret push jo xor pop push mov shll (bad) mov out (bad) repnz hlt data16 stc mov mov sbb jmp and jle callq (bad) fistpll add cli lods mov or (bad) rex.R fldcw fildll sahf rex.RXB insb fadds xor loop loop (bad) mov (bad) lahf mov adc (bad) (bad) fdivs cmpsl jg mov insb cmpsb jbe iret add fisubl movabs int3 repnz nopl and movsb fisubl sub lods jne adc xchg sbb xor lret jmpq lret sahf xor fidivl sbb or xchg fstl sbb (bad) (bad) sub and mov loope (bad) and addr32 cs outsb mov out lods (bad) lods mov (bad) (bad) jg fisttpl jns jle callq lret (bad) in (bad) rolb (bad) decl test and rex.RXB fwait int test in incl (bad) popfq (bad) rex.B mov movslq mov pushfq test sbb add retq fldcw or (bad) ja sub ror shlb (bad) mov fisttpl retq (bad) test iret xlat test rex.WXB xlat xor rex and imul lret movabs (bad) (bad) (bad) mov add lea std loop xor jmpq jo,pt mov insl (bad) lock rex.WXB rcll in callq in (bad) (bad) mov pushq ss (bad) mov out xor cli test pushq (bad) xor insl pop or add cmpsl (bad) jg jrcxz rex.XB mov rex.WRXB xchg in pop callq cmp cmpsl and lods (bad) push cmpsl (bad) sbb rolb addl lods orb xor jrcxz push mov movabs sub push xor mov xchg jo fstps adc add (bad) push popfq jle (bad) imul insb (bad) cwtl loop cmp cmp mov test in xchg (bad) jp (bad) sbb mov cwtl rolb xchg fcmovne mov (bad) movsb xor int adc jmpq loopne sbb push add sub outsl jp cli mov sbb in lock (bad) lret sub loopne pop (bad) pop adc sub (bad) xor retq pop loopne in adc je loopne push or or xor cmpsl jbe in cld rex.RB sbb nop out pop rex.WRX cli pop and data16 (bad) rex.XB sahf rex.WXB (bad) mov rex rex.RXB rex.WRX or leaveq (bad) cmp mov xchg (bad) (bad) mov data16 xchg and xchg mov jbe adcb fisub jge fsubp xlat xor in push xchg pop or and loopne leaveq adc insb rex.XB cwtl fnstsw lret shlb push pop loopne in lods decb rolb push adc jo or clc sbb sub pop or dec adc jmpq push cmpsl outsl mov and mov vandps rex.WRB out mulb or (bad) xchg fnstsw nop mov jmpq icebp sbbb jmp mov push es jg sub test int3 (bad) fist pushq enterq cli adc sub xchg rex.WR cs stos adc cltd mov (bad) sub test push int3 pushfq in addr32 jnp fisubl jmpq (bad) (bad) (bad) push (bad) (bad) add sar lret outsb (bad) xor sub (bad) rex.WX movslq and rex.WRB sahf push mov std cmp test nop movabs loopne or sub rex.B sub sahf and and out push movabs sub add sub lods (bad) movl vpaddb xchg sbb sti lret jns xchg loop mov mov push mov xchg (bad) sbb (bad) sti mov sub xchg rcll lret orb std xchg loopne pop xor (bad) xor adc push rex.WXB xor lahf add xchg loopne and sbb pushfq nop loopne mov (bad) mov (bad) add mov jg xchg shll add mov (bad) fistpl divb leaveq (bad) movsl jl (bad) mov loopne jle mov jmpq and pushfq or loop push rex.R (bad) repz cmpsl lods add mov adc (bad) rex.XB jle xchg (bad) sarl and adc xchg jmpq (bad) mov sub lock cmp rex.R sub loopne test mov add (bad) stc rex.X mov (bad) lret pushq outsl js adc mov jg mov rex.RB rcll or (bad) rex.RX or and int3 add (bad) lahf repnz adc repz lock clc scas sub sub test mov (bad) pop (bad) or je loopne pushq xor xor xchg stos cmp pop xlat add fwait movsb movabs loope iret sub rex.B insl sbb rex.RX cwtl stos mov or mov push (bad) xor icebp outsb mov scas rex.XB adc cmp mov (bad) push sub cmp (bad) lret (bad) fwait clc mov rex.WXB rex.RX addb adc cwtl fidivl sub adc nop and xchg (bad) push cmp push test jae cmp (bad) lea adc outsb xlat pop ds (bad) cmp repz sub loopne loope sbb adc mov xor push cmpsb test add sub mov (bad) retq pop jrcxz lahf jo movabs repz rex.W rex.WXB (bad) clc cltd xchg cmp loopne fisub gs imul cld mov (bad) icebp imul rex.WXB loopne rex.RXB cmp rex ja clc in pop pushq lret lret loopne sbb andl in pop loopne sbb in jle movslq fwait pop movabs pop js loopne iret push jo pop gs (bad) mov int3 mov cmp xchg mov test add loopne pop add pop lock cmp scas push stc xlat cli or in cwtl sub sub pop loopne jno ds add je adc fyl2x fsubp imul (bad) xchg mov pop (bad) jb nop adc loopne addr32 cwtl xor rex.WB mov lret and loopne (bad) (bad) xchg push lahf icebp data16 jrcxz jl lret leaveq add jle (bad) mov retq fwait (bad) rcrb jne rex.WRXB mov callq lret xor xor out movslq cmp fild or fcom clc mov mov stc push imul xlat sbb (bad) sub mov rclb add fldenv rex.XB sbb (bad) jl and sub (bad) xor rex.XB add jne and addr32 repz cwtl sbb xchg clc movabs sub (bad) icebp ja pop cmp movslq and test lock clc in int3 jl incl (bad) adc shrl xchg jno sarb cmpsb out notl loopne lods xchg nop xchg mov shlb (bad) test leaveq (bad) mov pushq cmp sub cmc adc pushq push movabs sti or and mov loopne mov icebp mov pop icebp punpckhwd sahf mov or xchg int xor ja out and mov pop fnstsw retq popfq repnz fsub cmpsb cmc rex.RB pushq lock mov test jp mov pop or jmpq pop push cmpsl xlat loopne rex.R test mov (bad) or mov adc (bad) loopne cld fs es fwait sti and shl iret (bad) push rex.WRB shll loop mov add loopne (bad) (bad) (bad) mov cmp decb lods (bad) add ja (bad) clc adc pushq int (bad) xor loopne scas add pop mov pop in and (bad) jb (bad) mov loopne cmp (bad) (bad) (bad) mov add (bad) sub jge stos andb loopne cmpsl (bad) xlat pop sub jo fsubrl loopne rclb loop test mov movslq add sub adc (bad) test mov and (bad) in cmpsl rex.B rex.W xchg in rex.WRX test mov out ds xor cld (bad) jne loopne data16 in clc jmpq mov jbe (bad) mov mov sti push rex.WXB fwait mov xchg mov (bad) sub (bad) fdivrs notl hlt and fbstp sub sbb mull (bad) (bad) cmp (bad) loopne jns cmpsl mov sbb mov rex.WRXB popfq jmpq mov adc jl sub and (bad) retq mov and push and jmpq rex rex.B cmpsb xchg and movabs sbb sub xor (bad) jbe rex.RB pop retq and repnz (bad) (bad) rex.RXB mov hlt lods int xlat rex.WXB movsl nop sbb pop leaveq and fisttpl xchg jmpw imul jb out pushfq xor pop addr32 (bad) sbb (bad) stos xchg rex movabs (bad) movsl xchg sbb rex.RXB mov mov loopne (bad) (bad) sub scas cmp xlat (bad) adc in icebp cwtl sbb jrcxz xchg pushfq (bad) rex.RXB xor cmpsb js jae loopne scas outsl insb jnp and loopne push callq idiv imul push mov (bad) xor pop adc (bad) bnd cmp icebp lret movabs and rex.W clc movsb sub mov retq je hlt mov xchg xchg fneni(8087 rex.RB adc cld push add in and vhsubpd push (bad) movsb loopne pop or and retq scas retq adc jbe xor rex.R rolb insb adc lret rex.WX (bad) in (bad) rex.WB fwait jge iret rex test or cmp clc out pop andl (bad) jp (bad) mov cmpsl xlat cli loopne movabs loopne push test push sub and mov (bad) cmp pop je rex.WRB lock repz in movsb xchg fistpll jmpq fchs and pop lock (bad) adc int3 in (bad) out jmpq out leaveq jmpq (bad) pop or push sub jns xor leaveq loopne push callq lods fwait (bad) (bad) xlat pop jg movsb loop,pt push and cmp fwait mov lahf movabs adc pop xor stos loopne (bad) xor adc jp gs mov push cmp and mov movsl mov rclb (bad) loopne rex.WXB std jae retq sbb movslq lret cmp adc icebp loope mov loopne movsl pop fwait cmpsl retq mov loop in add loop mov jo rcrb ss rex.WXB loopne stc retq jg push jbe loopne imul hlt rex.W rex.RB ds jp movabs jb loopne mov mov out (bad) in (bad) sub in adc loopne movsl rex.WR pop lahf insb loopne stos xchg (bad) (bad) and xlat adc jmp movabs lock nop add or rex.RX pop rex.WX rex jb out (bad) sti faddl (bad) in push rex.R movsl xchg (bad) jmp sahf mov movabs xchg xor (bad) xor pop or and add insl rex.WR sub xor jae repnz js mov sub iret (bad) (bad) mov insl cltd add loopne idivb loopne jns rcr movabs int sub or rex clc nop pop loopne rex.R retq lods pop jb insl (bad) add insb xor loopne movsb jp out rex.WRXB mov (bad) out imul pop jp push pop mov adc jle jmp rex.WRB jbe mov cmpb icebp sub xor (bad) jmp jo jmp or jnp in push callq (bad) (bad) (bad) xor fnstcw in mov cmp mov (bad) xor cmp pop loopne test and cmp jmpq loope mov mov mov mov loopne (bad) adc (bad) in mov sbb (bad) mov lret fs gs (bad) cwtl mov movsl enterq loopne add mov loopne add (bad) push rex.W stos pop lock pop push repnz stos (bad) loopne mov mov cs mov xchg (bad) loopne sbb gs fwait adc loopne cmp fcmovb (bad) loopne cli (bad) mov jrcxz jmp adc (bad) jg push fcoml xchg in rex.RXB idivl in mov data16 push jns ficompl loopne movabs (bad) leaveq fistp jp cmpsb fsubrp and (bad) xchg rex.WX loopne rex.WRX rex.XB adc cmp punpckhbw (bad) mov in sub sarl cmpsb cmp movsl outsl fsubs fucomp icebp (bad) (bad) in jp adc test loopne std (bad) xchg loopne mov stc rex.RX mov loopne shrb or (bad) pushfq xchg cli in andb jg (bad) jae rex.WXB sub mov hlt es (bad) jo fsub adc clc ja add rorl enterq adc xchg xchg jo stos sbb jp rex.X xor lret in rex.RXB rex.WXB loopne mov lods jb mov jp loopne adc js in in pop gs jge loopne pop pushq jl rex.WRX icebp sub movsl loop sbb jne data16 xchg jbe mov loopne push (bad) rex.RB rcrb lock fnsave sub cmp (bad) sub out jb and pop out cli mov orl jbe repz fnstsw rex.WR movabs rex.RX loopne xchg mov and int xchg sahf fstl fiaddl jrcxz (bad) hlt jmpq (bad) add cmp add (bad) in mov sbb mov (bad) mov mov in lret rex.WRX push mov mov mov jp (bad) jmpq sahf adc xorb loopne cld mov (bad) sti rex.WR rex and pushfq (bad) icebp sub ds and (bad) (bad) iret fdiv rex addr32 xchg mov (bad) cmp rex.W cmp orl rex.WB xchg xor xchg clc adc (bad) and rol (bad) mov adc xchg loop ja movabs leaveq sub pushfq mov (bad) sbb rex.WX (bad) pop jle test in (bad) pop adc sbb in stc outsb jb xor loopne (bad) jle insb cmp jmp sub pop movabs (bad) in repnz (bad) rex.RB sbb push sbb loopne idivb pop or xor (bad) (bad) mov lahf jae repz sub out movsb add sub pop jmpq (bad) jge xchg jno out mov mov add in cwtl fdiv (bad) enterq (bad) and loopne adc testb add movabs jp (bad) sub ficompl push test mov (bad) mov loopne maxps icebp push cmc or rorb out cmp loopne (bad) jb pushq (bad) pushq movabs rex.RB movsl icebp fwait (bad) (bad) hlt (bad) (bad) fdiv or insb jmpq cwtl sub or scas clc fsub mov xchg loopne mov jmp ja jmpq mov sub sbb xlat out cmp callq fcompp retq xor cmp add cmp pop push cmc mov rex.XB mov in sti (bad) test jno movslq pop mov jg rorl (bad) adc jo jnp mov pushq out mov scas fstpl out popq sub cmp (bad) addr32 and icebp xor sbb test (bad) rex.XB outsb lock xor mov cmp fisttp (bad) sbb (bad) pop clc loopne xchg jle cmpsl or (bad) out sar xor adc test or sub or shrb hlt rcr out (bad) (bad) (bad) rex.RX xchg mov loopne and ficom sbb jno out shll cmp adc leaveq je mov callq sbb cmp sbb (bad) jo pushq orl push cmp mov jno shll mov jmpq rex.WXB mov shrl jbe (bad) sub cmp rex.XB xor (bad) shlb movabs pushq cld std mov adc lods jg in jrcxz add insb add loopne or (bad) scas and mov mov flds rorl stos adc mov mov mov (bad) fucomi xor movsl xchg sbb cltd mov loopne movabs sarl rol test xchg (bad) loopne hlt fs rex.WX clc retq sub sti loopne in xor rex.WRXB and xor adc shr (bad) rclb pop fisttpl jmp mov out (bad) cmp loopne ffree (bad) adc jne hlt mov jmpq pushq stos addl jp sarb clc (bad) test jae loopne nop movsb and (bad) lret pushq (bad) cwtl enterq rex.WRXB jno sbb cli (bad) sub add mov add shll rex.XB loop xchg xor (bad) loopne movb push cmp (bad) movabs retq ja add xor movsl sbb (bad) retq (bad) xchg pand jns cli or (bad) jp in adc jrcxz insl shr add mov fstl and add subb loopne or push jmpq xchg push scas cmp mov adc lods shlb insl (bad) add loopne (bad) xlat out (bad) andb cmp rex.R (bad) lret loopne in (bad) loope out mov cmp loopne mov rex.WX ja in negb insl mov (bad) fsubp (bad) mov adcl fs movabs (bad) movabs and jno cld movabs sbb insl mov mov adc loop in imul outsb jmpq (bad) movb add pop xchg add rex.WRX jo lods int3 loopne mov jae or pop loop or sbb cmp push imul loopne sarb in pop (bad) loopne lahf jge pop or (bad) subl fpatan xchg icebp sti loopne and (bad) (bad) rex.R idivl sub cmp xchg xor (bad) push std mov test mov xor pop sub (bad) rex.RX mov jmpq adc repnz lea xchg loopne (bad) rex.RB pmaxsw gs clc (bad) adc (bad) or (bad) jo imul mov and adc mov (bad) xchg sahf loopne mov mov int3 in (bad) lcall mov out fbstp mov (bad) icebp stc rex.RXB stos (bad) mov loop callq jge in movabs sbb mov (bad) cmp or xlat jnp (bad) jge pop jp movabs xchg and push movsl sarb test xor sbb es xchg and mov movabs rex.W (bad) mov test (bad) push xor lods mov loopne pushq loop (bad) xchg in rex.XB push icebp jge pause callq push or rex.WRX push jae mov (bad) xor mov mov nop/reserved (bad) paddsb push jg mov push or jne jns xorl movabs and test js subl clc int add rex.WRXB pushq movsb mov insl xor rex.WRB jo (bad) out out subl mov (bad) xchg sub in pop mov jle ja (bad) cwtl (bad) jne push or (bad) loopne sub or jge xchg fs out or or (bad) rex.WRX xor mov or adc mov xchg enterq loopne pushq movslq (bad) lods xlat sub jb xchg xchg mov cmp rex.WRX movsl nop mov xor mov jo cmp callq mov (bad) es movsl mov sub cmp adc cmc pop repnz cli js rex.WX rex.WR insl retq rex rex rex.WXB and jb mov test hlt cmp or flds and adc fistpl sbb scas (bad) add cltd in (bad) or rex.WR lret and rex.WRX fild jae or cmp cmc fild retq jnp lahf retq or test (bad) (bad) cmp fistpl movabs jb and in loop pop xchg (bad) sub (bad) lock adc add cmp ds gs loope (bad) lock mov sub movabs fistl sbb xchg sahf rex.XB (bad) loope jne sub pop pushfq enterq (bad) (bad) or (bad) mov lahf (bad) mov jmpq enterq mov jrcxz in rex.WRX sti jg in mov in adc in in (bad) pop mov (bad) callq cmpsb rex.WRX (bad) xchg mov rex.WRB mov in pop cmp mov jle adc fwait (bad) mov (bad) cwtl sbb push clc pop test jp and mov mov cmp movabs retq leaveq cmpsb sub stc ds sar in cmp rol sbb xchg (bad) mov (bad) lods rex.X data16 ds and (bad) jmpq andl sub (bad) fs pop rex.WRXB (bad) shll lcall push movslq (bad) jle xor mov xor movabs sub xor mov ja mov pop xchg (bad) pushq mov fiadd mov std (bad) fistpll jo pop xor rclb or insl and adcb std (bad) mov mov (bad) or (bad) loopne sbb jne shrb (bad) loopne sbb (bad) mov pop xor movabs or mov movabs (bad) test sub mov rex.W (bad) lahf mov (bad) jmp out loopne jnp add (bad) sub xchg rex.XB (bad) loopne movabs iret callq xchg sub loopne (bad) pushq movabs rex.B mov lods xchg pop jo sub lock ds adc es fmull (bad) (bad) out cmpsb cmc (bad) (bad) fcomp mov jg xchg shlb in mov movabs ja cmp add add or repnz (bad) rorb and icebp mov scas pushfq xchg retq mov xor and rex.WRX (bad) xor lret and sbb push movabs ja sub (bad) jae insl (bad) xchg fcom in stos mov (bad) (bad) out callq test and pop je adc gs pop xor in rex.X rolb rex.X push jrcxz outsb (bad) (bad) (bad) xor push push push push and mov js lock (bad) repnz popfq (bad) popq rex.WRB add callq sub mov jg adc push mov (bad) (bad) or (bad) pushfq out (bad) emms fs sbb xor lods shrb and rex.WRXB adc xor icebp mov jmp leaveq (bad) in in sub callq movabs movabs lods rex.WX jrcxz out (bad) adc mov fidivl pop xor or adc pop mov cltd rex.WXB icebp leaveq insb iret cs (bad) loopne jnp movsb (bad) xor pop jp stos icebp add lret mov sbb mov sbb fcomps lods rex mov movslq rex.WRX lea add push mov fcomps xor imul jne (bad) xchg shr clc xlat (bad) and xchg std pop retq sti loopne (bad) (bad) mov xchg rex.W adc rex.WX in sbb (bad) rex.WB clc and xchg cmp mov and movsb xchg (bad) mov in movabs jmpq int3 rcr test mov pushq jg fsub fwait (bad) sti stos jp sbb scas cmp jmpq sbb callq cwtl jmp loopne adc adc outsb sbb jno mov and fsubr xchg insl pop xchg stos (bad) test int3 mov fsubl (bad) retq adc cmc neg es js and loopne xchg xchg lods (bad) lret loopne mov mov pushq lahf loopne int3 sub scas jmpq stc (bad) xor pushfq loope movabs ja xor roll sub and scas rcl movabs lock out adc (bad) jge push mov out (bad) and stc insb sahf jp rex.RXB (bad) fadd cmp out jno mov test icebp mov xchg insb enterq xchg enterq (bad) stc pop or adc imul or rclb decl (bad) (bad) (bad) shrb push and mov jo sti nop sahf jbe fidiv (bad) stos sub xchg (bad) lods outsl retq adc outsl in repz add rex.RX mov fbstp mov mov clc ficompl pushq rex.X cmp test cmp mov test rex.WR add (bad) test cwtl mov fcos push and mov jns movabs movabs jmp rex.WXB (bad) xor mov mul jl jmpq xchg sbb fwait jle (bad) in jmpq pushfq xchg imul jbe xor rex.R jrcxz out cmpsb out rcrl rex.W and xchg xchg in adc jle test jmpq ds xchg sbb mov int (bad) jo lods js movabs (bad) outsl sbb and stos fcoml fmul pushfq testl push test xor lret jns push lret (bad) rex.XB and mov rex.WRB rex.WB mov xchg repz fdivp rex.WRB cmp xor insl mov rex.WRXB cs add (bad) out mov and xchg sub sbb or pushq fdivrs rex.B lret lea add enterq (bad) rex.WB psubb push sub rex.WXB pushq incb (bad) ja sub cmp pcmpeqw lret adc insb insb add jl adc (bad) insb stos lock in in and (bad) hlt (bad) fistpl sub fs ljmp pop stc movabs mov rex.RXB ror mov insb adc pop movsb rcrl xchg movabs xor jns jge adcb jle in (bad) (bad) ds in data16 sti jmp (bad) adc mov push adc lock cmc xor shrb (bad) mov sbb (bad) and (bad) sub add (bad) (bad) retq out pop and scas add pop test cs ds sub (bad) mov (bad) mov retq test (bad) div jrcxz jmpq sub add incb lock mov rex.WRXB cmc xor loopne xor adc cmpsl xchg movabs (bad) push testl shrl loopne or outsb or pop jno (bad) out std lods fxch mov jrcxz sub mov shll retq and rex.RX (bad) xchg mov enterq in int3 sub mov mov iret (bad) jae imul xor rex.RXB mov jle loopne,pn xchg outsb lock xor rex.WXB sub mov (bad) fdivrs movabs adc cs out push sub cmpb or jo mov loopne (bad) (bad) rex.RXB outsb mov cli (bad) and adc add and sbb loopne jmpq xlat (bad) in xchg adc mov movsl pushq shll cmp rex.R std (bad) enterq and ficoml in (bad) adc pop (bad) (bad) pop fbstp mov addr32 rcrb rex.WRX (bad) out sti mov xor repz int3 retq pop imul or jmpq lods or (bad) fcmovne in notl mov (bad) (bad) (bad) push je decl imul cmp or rex.RXB cmp adc mov jg and shl popfq (bad) rex push je repnz jmpq jns (bad) mov cs vmulss and enterq jle cmpsb imul (bad) inc imul lock loopne push rex divl pcmpgtw vcvtsd2ss sub rex.RX mov and leaveq jge lahf cld mov (bad) movabs shll mov lock (bad) loopne movabs pop cld (bad) loop lods ror lret loopne (bad) movabs xchg xor (bad) cli (bad) loopne shr cmp rex.WRB ss sbb mov adc (bad) and cmp cmp lret lret fxam and fidiv sbbl mov xchg loopne (bad) cmpb jbe push in sbb movabs loope jmp incl cmp add or cmpsl sub lods data16 or and cmc mov sbb mov xchg sbb pop test data16 fs jmpq adc add adc (bad) hlt push cltd rex.WB lock xchg callq (bad) jmpq repz loopne,pt adc mov incl jrcxz loopne push (bad) sarb pop loopne (bad) fldl sarb addl push sarb loop jmpq mov pop jae rex.R loope in pop rex.WR cmp (bad) rex.WX jge mov js (bad) cmp rex.WRB pop (bad) and mov jns (bad) xor test mov lods cmp nop or js sbb mov (bad) loopne cmp push jmpq movslq lahf and push rex fs sub sbb rex.WR xlat pushq int (bad) shlb mov cmpsl xor sti sub push adc leaveq sbb xor (bad) push (bad) mov jmpq add pop loope in sahf fdivs jns mov mov cltd rex.WRXB sub (bad) cmpsb pushfq mov mov retq data16 cmp in callq out ss vpaddq andl (bad) push adc xor (bad) jb jnp mul in and stos jnp add pushq retq jge rex.R add movabs sub sub movabs fwait (bad) adc movabs sarl fadds (bad) cmc jb in mov test (bad) scas in (bad) outsb jb (bad) rol in pop xchg xchg or repz cmpb in int sbb cli xchg in lret lock push rclb add and (bad) adc jp ds hlt and rex.WXB loope (bad) rcrb pop xor sbb (bad) outsb xor (bad) rex.W rex.XB stos rex (bad) xor xor (bad) (bad) stos fidivr movabs cltd lahf sbb cmpsl addr32 fnstsw sub lods (bad) addr32 in xchg jnp pushq cmpsl pop xchg retq mov incb int fbstp rex.X movabs stos jle loop push push (bad) jmp (bad) adc mov (bad) xchg xchg jno jmpq add xchg roll icebp sub lahf mov add lret test lock xor and adc adc rcll sub adc in cmpsl or clc sti cs mov jb jle mov (bad) psubq push push fs rex.WRXB xor movslq test repz cmp mov sbb sbb rex.WB addr32 push loopne (bad) pop (bad) cmp wrmsr loopne stos cltd xchg cwtl enterq rclb popfq mov movabs retq pop mov orb movsl loopne lret push (bad) (bad) movabs in sbb pop xchg (bad) (bad) push (bad) jl adc subl cmp scas outsl insl jmp (bad) sub adc (bad) and sbb popfq insl xchg scas jp sub cmc rex.R or in retq (bad) (bad) rex.W out mov (bad) (bad) push jnp push js (bad) lea stc mov loopne adc in loopne cmp fsub mov (bad) movabs sahf jae xor xor movabs or mov jns retq (bad) fsubrp rex.R rorb push add lods andb mov or (bad) pop sub imul adc push movsl loopne fild sbb movabs sti and in xor addr32 cmp rex (bad) cmc jrcxz xlat mov movabs mov jge and mov push cmpsl (bad) fldt rex.WRX fsubp (bad) (bad) jle (bad) fs outsl hlt jnp (bad) (bad) addr32 adc push gs mov test or sbb stc or mov add in (bad) sbb jrcxz sbb fcoms loope jmp (bad) movabs rex.WB and imul in jnp loop mov lods (bad) (bad) cwtl jg lock and test sbb sahf rex.WRX (bad) push bnd data16 mov int3 jmpq sti sbb insb xor out push adc test ds sub mov int3 jne push cmpsb out cli jle (bad) mov jp adc js pop fiadd push lahf mov pop loopne test (bad) loopne push add sbb mov (bad) ss rex.W (bad) lea mov push push mov cmp xor (bad) hlt scas iret shlb and push pop jg (bad) pop lock and mov cmp cmp mov in imul sub fisubr icebp rex.X leaveq (bad) xor jp (bad) mov (bad) ds movabs or rorb sub sbb stc fcoms (bad) fldl add xor rex.WXB rex.R rex.WB mov test test cmp out (bad) jno je cmpsb mov adcb (bad) mov jge (bad) (bad) adc loopne xlat lods push out jnp jmpq and mov cmp in pop lock rcrl mov je decl movslq (bad) ds (bad) push or movabs lea std data16 rex.WRX movabs rex.WRB (bad) (bad) (bad) fs cmp lahf (bad) pop add xor push rorl icebp mov leaveq (bad) sub xlat test rex.RX mov pop (bad) mov rex.WRXB push in (bad) add rcr mov jle cmp outsb jg (bad) rex.XB push jl rol sbb xor xchg adc je hlt rex.WX rolb pop es add mov movsl xor (bad) int3 negb or or mov cli retq jle (bad) cmc mov or add sub loopne mov push push jns cmp out ror repnz lret outsl stos (bad) add (bad) (bad) jmp sub pop retq xor sub mov sbb loopne fs rex.X movabs imul loopne (bad) (bad) (bad) callq fcomps and rex.XB roll sbb xchg mov movabs cmp rex.RB sbb jns mov add (bad) adcb (bad) je (bad) loopne imul pushfq or pop adc leaveq rex.RXB rex.R jo clc adc mov or (bad) movabs loopne xor (bad) mov in cwtl (bad) imul xchg xorl (bad) adcb rex fcompl in rex.W in (bad) retq xchg push cwtl in enterq loopne adc in loopne fdivl mov mov callq loopne jmpq jge xor xor ja mov jns sub mov cli (bad) and xor push pop fnop jno lods (bad) mov adc in (bad) cltd lret in fisttp jb pop insl (bad) jae push adc (bad) (bad) frstor mov cmp fs rex.B icebp sbbb (bad) sub cli loopne add movabs rex.RX rex.WX adc fld (bad) adc rex.WB ljmp jno cmpsl (bad) pop xor xor xchg nop and lret cmp adc in popfq rcrl xor (bad) fstps in add sbb imulb lods rcrl in pop sub xchg fisubr or std and in jl (bad) jmpq pushq (bad) mov rex.WRXB xchg jbe mov test and es jmpq (bad) (bad) rex.XB jrcxz and lret (bad) rex.RX jp (bad) pop retq jg fs insl jns ds and cmp rex.RB out rex.WX adc pushq push (bad) adc cmpsb fsubp (bad) xlat xchg xor and pop sub adc (bad) stos pop clc jmpq xor rex.WXB xor outsb shrl or sbb lea (bad) jae rex.WB rcrl sbb sub repnz adc (bad) in (bad) jbe jmp out adc in and sub (bad) xor rex.XB pop and jg pop pop sub and bndstx ljmp push xchg (bad) retq and and (bad) repz popfq (bad) addr32 pop movabs xor (bad) (bad) retq xchg (bad) adc shr out jmp loopne (bad) hlt rcr (bad) (bad) movabs cmp rex.WX rorl jno outsl xchg (bad) (bad) popfq fstpl (bad) sbb (bad) (bad) jp rex.X data16 repz pop rex.R (bad) orl cs or adc mov jb movabs in (bad) idivb cmp pop out xchg or push xor rex.W cmp jge iret mov xor rex.RX mov xchg and adc (bad) movabs pushfq mov xor rex.X cld fdivrs xlat je loopne rex.WX pop int or loopne or jae scas jl in test cmp test push pop jmp jae mov fmuls loopne sbb nop mov in add sahf lret xchg sbb xor or rex.WRX int cmpb rex.WRB cmc cmp jbe rex.W jnp rex sbb cmpsl test out loopne rex.WB (bad) int3 loopne adc addl in js shlb std shll jl or (bad) out pop jns loopne xchg cld stos (bad) loopne pop add enterq (bad) (bad) lahf int3 loopne xchg icebp in xor (bad) loopne jp mov loopne (bad) pop add (bad) mov cmc jo shll (bad) rex.WXB mov sbb pushq (bad) repnz and int xchg and push jb rex.WRB cmpsb (bad) (bad) iret rex.WX js fstpl hlt (bad) pushq sbb jbe pop int3 and rex.WRXB (bad) icebp shl (bad) sub push cltd cmc movslq sbb jp mov int3 cltd mov scas or xlat loopne xchg ja loop loopne mov or mov pop (bad) repz (bad) mov adc sbb mov sar (bad) loopne rex.R loopne lret xchg and (bad) mov jge nop (bad) js fist (bad) (bad) out jmp in in sbbw jb (bad) (bad) add movabs jns movabs (bad) out imul out cmpsl lahf movabs out jmp fs es (bad) push rex.XB cwtl sahf cwtl jbe jno or lahf movabs out xchg sbb fs mov pushq (bad) mov pop jns rex.WRX jb (bad) rex.WRXB mov ds fstl push sahf in jo shrl out js add movabs cmp (bad) or mov paddsw fnsave mov (bad) (bad) jp scas es xchg cmpsb pop movslq scas sub sub out fwait (bad) cmc imul (bad) fdivl int3 (bad) xor push xor sub (bad) loopne rex.RB repz (bad) pop test (bad) xchg mov jmp rex.W add xor fcmove out nop rex.WXB (bad) loope jg fisubl xchg cmpl lret loopne push sbb add pop nop loopne jbe lock sti jp loopne or out jmpq rex.WXB sti sub or loopne jb negl movabs adc in icebp (bad) sahf movsl or mov cmp cmp outsl test loopne lret addb mov and movabs rcrl sub loopne fbld ficompl rex (bad) and xor jp xor loopne je jge sub xor lock mov or sbb xchg jmp and mov (bad) (bad) fistpl or (bad) pop adc mov pop add lahf icebp rex.RXB ficomp rcrl jrcxz pushq mov (bad) xchg sbb mov scas or mov cmp mov insl sub rcrl loopne jns jp cli loopne int rex.WXB mov loopne mov retq (bad) rex.RX rex.WX out loopne popfq jns (bad) (bad) roll push (bad) sub out pushq and mov movslq add mov (bad) pop gs (bad) (bad) (bad) (bad) and mov (bad) and movabs mov jne (bad) je fucom movabs loopne sbb hlt adc in jg add jo and cmp jrcxz cmp (bad) jmpq es jp int3 rex.W (bad) loopne jmp mov adc mov rex in pop movabs xlat rex.WRB and jmpq lock sbb stos loopne add sbb shrl sbb and xlat cmp adc fmuls mov rex.WXB (bad) outsb jle loop sub loopne sbb mov pop repnz rolb (bad) lahf pop loopne mov and (bad) lods (bad) rex.WB add mov fadd push mov loopne and mov jae mov icebp shl and leaveq roll fucom lahf xlat (bad) cmc mov mov iret sbb pushq xorl adc jrcxz xor add xor cmp jnp loopne rolb andl fs or jl test mov repnz data16 loopne (bad) (bad) push or in mov loopne (bad) add mov popfq retq cmp xchg cli add xor (bad) mov stc (bad) loopne or (bad) mov rex.WRX imul jne xlat loopne (bad) rex.X jno rex.XB shlb jle jnp xor (bad) cmp xor add in pop movabs (bad) (bad) pop xlat loopne pop in lret rex.WRXB sarl loopne (bad) cmp rolb (bad) (bad) jmpq jno cmp (bad) loopne jae and (bad) ss add cmp mov adc mov xlat negb pop loopne xchg in (bad) jmpq (bad) test fiaddl xchg pushq xchg pop add mov add loopne shl mov rcr and insb jmpq mov test (bad) jne (bad) sahf pop loopne jnp cwtl pop rex.WX rex.WRXB sbb lahf setb retq sub rex.RB adc rex.WRXB loopne jmp fadds shrl out cli xor xor insb cltd mov rex.X loopnel scas std lock xchg jmpq rex.WB fs jae jnp icebp test xchg xchg mov (bad) movabs clc rex.X outsl jmpq (bad) movabs xor push enterq cld push fs insb fsubrl test pushq cmpsb sahf lea pushq (bad) loopne add retq clc jmpq pop jo sub cmpsl (bad) jae adc pop loopne mov je (bad) cwtl loopne (bad) movabs std retq test test or jrcxz or callq xchg retq pop callq or mov mov fbstp loopne rex.WRX rex.X lret push ss out insl (bad) (bad) pop loopne rex.WR roll (bad) adc (bad) std (bad) fldenv loopne jrcxz loope ljmp or rex.WB mov mov push lods rex.XB jmpq (bad) xor loopne mov out loopne movabs sbb sub mov xor (bad) xchg jb test jge cmc cmp pop loopne ja movabs sti popfq jo mov in (bad) and sub cmpsb xchg (bad) jl mov mov mov adc cmp jno mov std out loopne movabs out cmp xchg movabs cmp jno (bad) jnp iret and (bad) and xchg loopne movabs jne jp (bad) lea clc rex or loopne xchg jle sahf loop insb loopne cs (bad) mov cmpsl rex.WR and sbb (bad) mov sub retq divb pop sarb leaveq rex.WRXB push mov pop cmpsb pop (bad) loop pop jo adc lods sub rcrb and jl loopne and hlt jno (bad) icebp sahf (bad) mov mov loopne mov jmpq mov add rex.X loopne sbb xchg add xor movslq imul test mov mov jg repnz and sti (bad) (bad) or rex.WX and mov in sub movsb xchg clc (bad) loopne loope mov icebp push cmp pop (bad) mov int3 fldcw cmp (bad) mov sbb fbstp jmp pushfq cli pop test (bad) and pushq loopne (bad) movsb cli sahf mov adc xchg sti and (bad) sub in (bad) sub xchg xchg movabs leaveq mov fucom mov popfq mov popfq mov test (bad) mov subl (bad) mov rex.WR imull xor add rex.WB lahf ficompl sub retq push lahf xchg (bad) mov pop xor loopne cmp callq (bad) repz rex std rol xor sub retq pop rex.WX and or nop shll xchg mov rex.X fbstp adcb sub jl sbb imul data16 mov (bad) sbb jge movsb cltd lea loopne callq mov es adc lret jb mov or sub out (bad) loopne push or adc fimul add stc (bad) popfq in (bad) rex.WB sub mov ja movslq enterq push rex.WRXB or mov sti andl movabs mov rex.WR rcl nop iret (bad) loopne mov sub mov fldenv mov xor and sar movsb mov shlb fs clc outsb std mov sbb jns stos loope mov add mov push loopne jno sbb je insl pop gs shll mov add adc xor sbb adc rex.WRX adcb loopne enterq test fiaddl jno iret mov push movslq add add xchg xchg loopne jbe (bad) mov mov (bad) jmpq outsb fnstsw stos and mov mov jmp mov (bad) and jmpq ss mov (bad) in scas and and sarb fiadd (bad) sbb loopne xor int3 hlt loopne xor in cs sub leaveq jae retq cmp in cwtl rex.R rex.WRX and jb gs pop (bad) in shrb rex.WRX movabs mov imul movsb xchg in jmpq fnstsw sub mov test lahf jae mov pop hlt loope or mov insl or and shr movabs or pop mov (bad) (bad) stc movabs adc adc retq faddl jg movabs or gs outsb popfq or mov pop (bad) rex.WRX lahf loopne push mov add out cmp xorl sar sti and jrcxz add mov iret rex.X rex.WXB xchg mov or loopne movabs jno (bad) cld mov add repnz pop in (bad) jb rex.RB (bad) ficoml jno adc xor nop retq sbb (bad) push or popfq adcb cmpsl xchg in pop loopne rex.WXB loopne jnp shr push (bad) sahf mov cmp rex.WR xor rex stos cwtl rex.WRX test loopne mov rex.B loopne rex ja out add (bad) loopne je cs orb data16 lods add outsl fwait (bad) loopne jnp (bad) sub insl in add cmpsl (bad) (bad) add movslq sbb mov push test ss (bad) fidiv xor loopne jmp mov jo xchg (bad) jns and rclb outsl es mov (bad) adc (bad) cld (bad) rex.RB cmp xlat push mov adc (bad) nop rex.W outsb movslq lahf jg sbb add mov jmp xlat jmpq rex.WX out mov clc int fstp push pop loopne repnz pushq rex.B rex.WRXB out stc (bad) (bad) out (bad) xchg xchg xor xlat in jl in mov mov movsb loopne mov or (bad) push nop icebp push cmp (bad) orb int sub movabs std jge fsubs (bad) fstp insb leaveq jg mov pop (bad) adc lahf enterq (bad) cld add pop mov rex.WR mov pop jb movabs cs stos cmp rcrl sub add (bad) outsl mov mov lcall rex.RB mov pop or (bad) in rex.RX (bad) out jae fiadd cli cltd fwait loopne rex.RXB add insb xchg (bad) jg rex.XB (bad) lret in rex.WR (bad) or lods out out sub test mov fisttpl jno jmpq (bad) and cwtl cmp or (bad) (bad) out in out rex.W loopne lods psrlq in testb (bad) rex.WRXB fdivrl sbb movabs (bad) rcrb imul xchg rex.WRX cli or fld loopne cmp (bad) out xor mov mov xor sub rex.WX fyl2x mov (bad) (bad) adc pushq add retq rex.RB sbb xchg mov nop jp pushq addb adc xchg lret loopne lret adc add incl imul jp ss (bad) cmp hlt loopne mov xor popfq fsts pop addr32 push xor test sbb pushq push sbbb orl mov adc mov callq jp jae adc xchg retq mov add xor pop in rex.WRB test lahf (bad) jae mov cmc jg in adc xlat stos loopne jno xchg (bad) fs mov (bad) xchg jmpq scas loopne mov push shrl rex.WR rex.WX vcomiss (bad) rex.WXB pop xor cmpsb add xlat pop xor loopne decb mov xchg testb pushq (bad) icebp fsubl cltd data16 loopne cmp sbb pop (bad) out (bad) in mov rex.WRX lods xchg loopne (bad) push scas mov xor xchg xchg adc rex.B rex.WRB (bad) cli insl rex.WB pop and movslq jmpq sbb and (bad) js loopne jb (bad) adc cmp loopne ficompl rex.RB or jo movslq insl mov js insb (bad) or sbb (bad) fwait cmp adcl (bad) in and loopne xchg shll push mov jl (bad) movabs jle ds add (bad) add add pushq pop xchg jae xchg loopne (bad) xorb mov shrb popfq mov movabs mov push loopne mov test cld rex add outsb leaveq (bad) rclb loopne adc push movabs movabs (bad) (bad) loopne lods adc (bad) xchg icebp xchg xor fisttpll imul and xor mov lods jbe mov pushfq cmpsb push and xchg int3 mov pop out rex.WRB rex.W (bad) idivl iret lock gs cmp jmpq (bad) callq ror sarb cli lods rex.WB lret (bad) (bad) lahf mov stos adc sahf jge or add mov fimul jrcxz fstpt (bad) (bad) ds xchg sbb xchg jae rex.WX cmp cld cli incl fwait loop movslq (bad) (bad) bsr stos and rex.WRXB jmpq rex.WR rex.WRX (bad) rex.XB rex.R jo movabs (bad) leaveq sti rex.XB (bad) xchg xor cmpl and fwait jb rolb (bad) lods sahf rex.RXB imul jmpq mov cmpsl rex.XB sbb xchg rex.X fnstsw push out jb sbb mov iret repnz jns and jmpq movsb (bad) push mov mov test (bad) out roll (bad) (bad) and xchg loop adc xor mov mov mov rolb pop cmp rex.W rex.WRXB pushq rex.W xor (bad) mov fcoms (bad) and jns adcb in adc popfq shlb lahf push (bad) out or icebp cmp in lret loop icebp or hlt jno cmp jg xchg repnz decl loope (bad) movsb in out shrb pop movsl lods (bad) in (bad) movslq mov rex.XB addr32 sub and jbe sbb nop icebp (bad) rcr rex.WRXB rex.WR xor (bad) adc sbb insl mov hlt jmpq (bad) std and insl mov sbb xchg cmp vpsubusb (bad) pop in and push test sbb sbb movabs shlb es scas jp cmpsb lahf sahf fstl in (bad) push leaveq sarl rex.WRB cmp loope movabs subl sub jp adc scas popfq rex.RXB adc lahf (bad) test mov sub sbb loopne mov pop js push mov rex.RB add loopne push hlt and mov xchg cli cwtl rex.W shl or jmp loope and xchg xchg xor (bad) xlat adc mov (bad) add cvtpi2ps add lahf push mov (bad) sbb adc (bad) hlt outsl jrcxz push (bad) mov sub cs rex.B adc lea xlat out jl fnsave sbb and add rex.XB xchg (bad) leaveq je out sti xchg (bad) mov lea mov sub sub std mov retq (bad) cltd and cmpsl (bad) imulb mov (bad) movabs pushq lret sti jo mov mov repnz movabs pmaxsw lret jp stos loopne callq cmp andb stos loopne (bad) jmpq movabs xor xchg (bad) jnp or jae (bad) cli pop adc (bad) xor outsb movabs sahf scas incb stos lret xchg movabs pop and addps rex.WB in push adc int3 data16 movabs (bad) rex.WRX jne ss and shlb repz int mov xchg out lea add loopne (bad) clc mov add cltd cld sbb rex.XB lret adc loopne (bad) pop rex.W orl (bad) cld cmp mov ss loopne out inc iret xlat rex.X cmc loopne sub scas jmpq pushq cmp sahf mov shl or jae push adc hlt adc mov mov sti rex.WB rex.WR (bad) cs add adcb or xchg movsl cmp callq pop pop sbb fnstsw and out rex.WX movabs sub (bad) sub roll jnp (bad) ds maxps out rex.WB loopne popfq xchg shr cltd mov loopne pop cwtl sbb repnz loopne imul cmc jrcxz mov rcrl cmp mov jmpq mov jmpq jl repnz sub je enterq pop rex.WRB push push mov stc jne (bad) loopne (bad) add pop clc (bad) (bad) mov (bad) push (bad) movabs je (bad) (bad) mov movsl xchg ss push push fdivr sarl movabs jbe lods scas in rex.WR pop push sub jl mov shr cmpsl imul mov je add push cli cmp leaveq mov or xchg ds add sbb retq lods cmp xor xor and xor pop in fdiv mov add in pop xchg (bad) xor (bad) loope js jo push or and sbb imul sbb adc mov fidivl loopne adc push jb pop or pop xor retq js (bad) and ljmp fcompl mov adcl movabs rex.RB ja loopne adc cmc jbe dec enterq retq (bad) add lods sarl loopne mov or jmpq (bad) xor rcrb mov jmpq movabs mov add pop push sub imul sarl rex.RB movabs popfq jge insb xchg mov loopne add mov or sbb loopne (bad) or sbb repnz (bad) outsl rex.WR loopne movsl add cmc lods pushfq enterq and cli jo loopne fild mov mov rex.WXB mull adc mov stc lock ja rex.RX fndisi(8087 rex.WXB rex.RB rex.RXB leaveq and rex.WRX mov loop decl jae in sbbl adc mov (bad) push fdivl outsb cmpsl int3 test (bad) and in add vunpcklps rex.WRB or or loopne pop (bad) cmp (bad) jrcxz xlat andl push push lret or scas rorb rex.WR lret fs mov jbe rex cltd mov (bad) xchg mov and pushq hlt adc adc pop jnp or insl cmpsl cmc jmpq rex.WXB jne jo jbe sbb lods rex.B pop rcrb mov and ds sahf (bad) adc lods movslq callq out pushq or jmpq adc rex.X leaveq mov pop mov pop rex.WRXB pop sub or jg sti sub in and fwait iret jge sbb mov ficompl (bad) enterq mov (bad) xchg xchg xor jge rex.WR rex.WRXB (bad) movsb lret (bad) test and cmp adc movabs hlt (bad) imul xorl sub (bad) ficompl pushfq je cmc es rex.WRB fisubl fwait (bad) sahf xchg (bad) imul (bad) jge fadd xorl cmpsl roll cmp or adc jrcxz rclb pop bswap iret jns mov sbb out cmc (bad) jae jg outsl rex.W gs (bad) pop (bad) mov mov or (bad) or fwait (bad) add in add mov rex.XB rex.WRX xchg rex.WR imul int mov fdivs loope subl fdivrl adc push (bad) push movabs xchg roll icebp pushq cmp and sub sarb sbb adc (bad) rex.WB mov out lret pop push push jl lahf sbb addr32 callq out pushfq push sarl (bad) scas (bad) movabs in decb (bad) mov jae shl rex.WX test sbb retw rcll mov fnstsw (bad) pop add loopne in test mov rex.RB movslq mul pushq add mov xor (bad) mov pop out scas (bad) (bad) movabs loopne std repz cmp loopne data16 (bad) outsl ljmp popfq fwait mov (bad) loopne out in sti xchg imul xorb or ss and lcall (bad) rex.XB (bad) (bad) rcll jg adc (bad) or (bad) repz mov xchg (bad) cltd push movsb xor rclb sbb in out adc cmp loopne xor adc pop mov push loopne pop rex.R es loope adc (bad) rex sub rcrl xchg pop jbe (bad) adc jnp out imul cmp pop adc pop (bad) xor loopne cmpsl (bad) int3 xchg sub movsb (bad) (bad) push hlt mov icebp shll cmp movabs rex.XB mov mov sbb out shr mov mov loopne and icebp (bad) (bad) (bad) (bad) loopne mov xchg (bad) mov in adc shrb and bnd rex.WX jo add cmp loopne test push clc cmpsl loope fnstsw sti (bad) (bad) ror xlat (bad) sub (bad) adc add (bad) je rex.RX test stc icebp rex.XB sub (bad) subl (bad) js jo loopne mov jg loopne ror xor mov jmp cli (bad) in adc shlb jrcxz jo adc sbb xchg in rex.XB jb je movslq loopne frstor in in add ror (bad) movabs rex.WXB mov std or jno rcl gs xor insb jl (bad) movabs (bad) insl (bad) rex.B (bad) out mov js movabs stos sti add hlt loopne js (bad) push jp pushq rex.WRB or (bad) movabs sub mov sbb repnz adc scas clc movsl mov lods cmc (bad) xchg add push cltd (bad) (bad) loopne loope fldenv sbb mov movsl int js (bad) cli movabs mov mov or mov loopne rex.WRB fdivrs (bad) (bad) mov mov mov xchg (bad) or mov imul movabs (bad) cmc lock rex.WR insb jp insl rol and sub push loopne jge mov rex.WRB jb movabs loopne pop adc in int3 mov nop scas js in std (bad) clc out (bad) js rex (bad) in imull xchg jp movabs std lock sbb in sub (bad) (bad) or mov es movslq push jmpq movsl testl xor int3 adc jb shrl rolb mov idiv jnp cmpb pop loopne jae jrcxz cmp data16 scas (bad) or cmpsl fbstp callq test clc xchg loopne or (bad) sub jmpq leaveq rex.WB movabs lock (bad) mov rex.WRX cmc sarl loopne clc rex fidivrl pop mov int jo xchg iret in out loope xor sbb (bad) loopne sbb jns or rex.RX addr32 rex.R mov imul mov cmp out loopne rex.RXB mov out lea add retq (bad) loope mov (bad) in test ficompl mov enterq rex.B fwait (bad) loopne mov add cmpsb (bad) sbb xchg adc (bad) add roll sarb cmp outsb loopne ja scas and (bad) sti sbb (bad) movabs nop cmpsl lock jg cld mov xor retq jmpq outsl push mov mov jmpq leaveq adc and (bad) xchg mov pushq movabs lods push add add mov fstps leaveq scas jo and sbb (bad) jl loopne fidiv retq loopne xor lret sbb adc push fadds (bad) adc push add lret rcrb (bad) sbb jmpq fs xor (bad) movsb lret or cmpsb xor clc popfq repz rex.WRXB adc xor in callq loopne lret fiaddl rex.XB and pop push jle gs sbb fistpll retq fsub rex mov test mov pushfq mov idiv rex.WRX rex (bad) pushq sub add jo (bad) lods movsl jnp rex.WRX mov or pop loopne jo cmp data16 rex.WR add mov popfq push rex.WX xchg loopne rex.WXB loop and icebp lods mov rex.WRB out stc movabs ja (bad) adc jge (bad) xor and rex.RXB xorb (bad) popq (bad) jmpq rex.WRXB jnp in loopne (bad) (bad) push (bad) leaveq lods outsb mov rex.WRB adc xor loope push (bad) adc jnp (bad) jbe pop xchg cmc or rex.WB sbb gs pop mov (bad) cmp mov push movabs hlt xchg xchg notl js (bad) jle movabs rex.WRX pop jl test out xchg stos rex.WX rex.WRX test push rex.WRB fsub (bad) xor fwait cmp and mov fwait cmc rcrl data16 cmp or rex.WXB jrcxz enterq out sti jno jo (bad) cmp mov (bad) (bad) lods retq (bad) test cmp jno rex.WXB adc (bad) add and cli mov mov lock iret std movabs cmc (bad) rex.WRXB loopne and loop jmp sub push xlat adc rex.WB loopne pop jge,pn fldz mov (bad) in jmpq enterq xchg imull loopne mov andl jns stos loopne rex.WRX rex.WX cmpsl (bad) out cs ss mov movabs mull (bad) fcoml (bad) or cmp cmp sub xlat (bad) loop dec (bad) (bad) cmpsl addr32 (bad) pop xor (bad) mov sbb xchg xor movabs rorl (bad) (bad) repnz add scas mov add clc ror add push ss pcmpeqd lock pop pop addr32 lods pushq push (bad) (bad) jmpq insl (bad) loopne adc xchg fcoms loopne rex.WXB out flds je pop mov loopne mov movsb sub fsubr fisttp in clc xchg loopne out mov loopne jnp iret or fistl mov (bad) imull stos sub mov jns retq leaveq loopne (bad) xlat jmpq loopne insb scas js jp push outsl (bad) (bad) jg mov movabs mov push (bad) out test shr pop icebp and (bad) out cmp es cmp in mov movabs xor push cmp (bad) in fwait pop and (bad) jb loopne cmp out rex.RB rex.WR vsqrtps int jmpq mov jae rcll jl rex.RXB (bad) push and pop loopne fnstenv rex.RXB (bad) shrb sbb mov loopne jbe and clc rex.X out mov (bad) sbb cmp mul and rclb sbb or (bad) clc (bad) shl (bad) movabs or mov loopne fs xchg jns jo repz insb sbb rex.R rex.WRX push loopne addr32 and loop movabs adc rex.WRXB fdivl gs (bad) cmp xor xchg push and mov sbb hlt fs and sbb sbb cmpsb sarl cltd enterq mov mov loopne out xor jmpq sub mov notl scas jae mov or xchg repz rex.WRB mov rex.WR outsl negl gs cli mov in and jns scas mov movabs mov fist (bad) xchg adc pop and out jrcxz imul adc (bad) lahf cmp rex.RXB cmpb std fisubrl out mov movslq insb retq sbb movabs popq xchg loopne pop mov cmp clc scas (bad) movabs movabs mov add and sbb sbb fildl int andl sarb push loopne jae insb (bad) jp sub sbb or mov (bad) xor js iret cltd (bad) out (bad) mov push jg jnp (bad) cmp rcrl nop cld or and mov fimul loopne cmp (bad) and leaveq jmpq movslq mov mov push fldcw jnp jns sarb subb xor jbe adc rex.RB repnz rex.XB (bad) mov mov (bad) rex.RX lock pushfq imul repz callq (bad) outsb (bad) sbb (bad) cmpsl loopne jb push sub in xor push fbld add in sti cmpsb (bad) outsl xchg (bad) in (bad) mov pushq jg mov loopne rex.XB rex.WRB rex.W cs sub cmc (bad) mov loopne adc sahf (bad) mov mov pop rex.R movsb adc loopne mov push rex.X movabs cmp (bad) maxps xor dec sub (bad) (bad) pushfq loopne cmp jmpq in std scas loopne (bad) lods sti mov sahf jmpq hlt add loopne cmp test or cmp (bad) loopne xchg sbb xchg cmp and jge push roll icebp in (bad) sub xor or sbb sbb (bad) add rex.B pop loope (bad) (bad) jge jle rex.WRXB mov repnz rex.WX (bad) fcoml (bad) sahf roll movabs mov sub (bad) (bad) xlat loopne or jl loopne mov rcrl (bad) jmp outsl (bad) xor in add out cwtl lret in rex.W fsubp sti rex.WRXB jmpq jno xlat pop (bad) (bad) loopne and jrcxz push rol loopne mov and loopne fcomip repz notl (bad) jrcxz stos js (bad) or mov pop rorb and frstor mov xchg (bad) (bad) loopne jge mov (bad) cli jmpq adc sbbb loopne push leaveq (bad) repz in loopne mov (bad) in jne fsts push add and loopne add cmp ja (bad) adc cmp xchg sahf mov or mov cwtl jl callq jrcxz sarb bswap sub clc rex.WXB fs (bad) add cmp loopne adc mov lret mov adc and loopne sub test mov xchg xchg jmpq mov out (bad) mov sub xchg sub jmpq movabs (bad) and loopne orb loopne or in cmc loopne push rex.WRX or adc rex.B pop lock test outsb mov movabs rex.WX mov rex.RX or or rex.WR rcr pop loopne nop loope movabs rex (bad) xchg test sbb push fsub mov lock loopne cmp shl in pop movsb cs jmpq rcrb pushq loopne xchg popfq negq adc or imul mov test add loop jmpq rex.WRX sbb scas and or rex.WRX mov (bad) addb (bad) neg or lods jle jo and lods imul and xor orl sub ror mov sbb pop mov shll add sub xchg (bad) jbe xchg mov adc rex jno shl (bad) xor fs xchg xchg xor rex.B mov pop adc rex.RB loopne lret es rex.WR lock sbb and lods (bad) in (bad) (bad) jg (bad) (bad) ficoml push (bad) fiaddl (bad) repz scas add movsb int3 xchg test jmp (bad) lods out leaveq mov xor icebp (bad) sub scas cmc mov add (bad) rex.XB adc and sub jmpq push cli mov rex.WRXB xchg stos cltd ja (bad) (bad) cmp rclb mov in sub int jns lahf (bad) mov or fidivrl (bad) or sub scas lods retq mov (bad) sti mov cmp insl jg loopne out rex.R mov or loopne sti loop pop rex.W fwait je test mov pop loopne outsb and clc out loopne cmc fmull scas (bad) rex.WR push loopne xchg in cltd movsb (bad) loopne retq sub push pop retq sbb fwait (bad) xor int3 mov movabs sbb ja pop cmp imul shl (bad) (bad) std mov in cmp jmpq out jmpq sub loop jmpq pop fimull in rex.WRXB jbe push movabs adc retq out movsb mov sbb push (bad) jo rex.WRXB rex.WRB shl enterq jbe sub pop retq lock adc sub mov loopne mov cltd mov (bad) pop (bad) pop pushfq in lods loopne out (bad) rex.X xchg mov adc rex.B loopne jnp jmp out loope mov imul (bad) in lret mov out test lea insb lahf xchg sub jne adc sbb sub insb in lret or decl sub fwait insl (bad) mov loopne cld (bad) xor scas push (bad) xchg or jb and js loopne test (bad) mov movabs cld rex.XB rex or adc loopne rex.WRX jo icebp fildl stos pop add testl add data16 rex.RB mull cmp stos movabs imul add pushfq out xchg rolb rex.RXB cmc mov test lods movabs in cwtl shlb jle mov fs (bad) lcall movabs retq mov and enterq fdivrs (bad) fwait loopne fidivrl cmpsb leaveq xchg loopne jbe xor adc test fwait (bad) in mov rex.RX and retq adc in adc sub mov rex.RXB ror cld mov leaveq sbb add (bad) decb sbb sbbb movsl (bad) xor mov pop adc jle and (bad) ss int3 nop pop adc add in jbe (bad) imul out lret or repnz fcmove sbb iret rex.WRB (bad) rex.WRXB xor (bad) loop callq stc rclb lea xchg adc pop jg (bad) xchg push xor (bad) clc jnp repz and and stos shrl rex.WRX adc mov lods (bad) sahf repz movsl sub decl test out add out xchg outsb popfq cmc rorl push movaps movslq (bad) sti mov or push (bad) adc mov push adcb cld sbb push cmp (bad) mov jne rex.WRX rex.WRX xor in in mov push in pushq jrcxz pushfq loope pushq mov rex.XB cmp jmpq fdivl movabs sub mov rex.WRX pop jb jmp ja jrcxz stc mov push lret out popfq nop hlt xor mov rcrb out sarl data16 loopne cs je cmp nop fucom ja xlat (bad) jae add loopne (bad) jle push rex.B out (bad) test jo test and loopne cmpl nop rex.WX out movabs xlat sub jmpq int (bad) xor lahf mov adc and iret (bad) imul xchg mov sub (bad) mov int enterq and out jl cld (bad) mov mov outsl in add push lahf mov sbb (bad) mov and xor shrl gs jrcxz (bad) data16 cmp sbb movabs (bad) pushq mov and cmp loopne (bad) movslq shrl loopne add lret or (bad) jmpq mov fs sarl rex.WRB adc (bad) loopne rorb xchg stos int js or loopne mov mov or in jno adc movsl xor cmc mov rex.RX rex.WRX push add imul retq and stc lods loopne scas push (bad) jbe movabs insl adc ja andb out test mov (bad) loope sbb mov outsl retq lea xor sbb movabs and in pop mov faddl pop fcom (bad) loopne sbb cmp in add test pop leaveq lcall rex.RXB imul (bad) sbb test cmp ss jo mov mov mov cmpsb rclb test fs jg inc loopne std (bad) je lods loop in (bad) fcoms pop or adc icebp or (bad) gs xor rex.WRB rex.W ss idivl loopne adc (bad) mov jae xchg callq (bad) in cmp add rex.RB push or addr32 pushq lock or cmc out push fimul test sahf pop and lock rex.WRXB push repnz stc movabs out fisub pushq adc mov int3 lret sub decb xor fldt ficomp jae ja push jmp xchg (bad) (bad) movabs jae and rex.WXB (bad) rex.WB (bad) (bad) jp callq add out pushfq insl (bad) xor lahf sbb ds fwait sbb rex.W (bad) xchg scas jl xor out cmc rex.RXB pop icebp sub jle test sbb (bad) (bad) and cmp mov loop mov (bad) pop cmp cld xor mov movabs (bad) in cmc cmp movsb pop jnp jo (bad) fiaddl push out (bad) sbb es push cwtl movslq mov rex.WRX in mov lret rex.B js push push incl fimul sub mov fmuls (bad) and repz (bad) popq mov mov xor lea cmp fs adc movabs cltd xor (bad) clc mov jmpq data16 (bad) jo cli mov rex.XB (bad) imul rex.XB mov mov divl (bad) sub outsb in lods xchg pop mov push rex.RXB jrcxz sbb int3 mov mov xorb mov fwait int jmpq sub adc jmp fsubr lods loopne outsl imul rorb mov loopne (bad) sbb (bad) rex.WRB pop add stos retq ds (bad) cs jmpq lahf fdiv loopne movsl rex.WX cmc add callq mov nop outsb iret loopne add out (bad) loopne (bad) movslq movabs int3 add push sbb in mov test fwait imul sbb movabs or or pushfq rex.WR mov enterq (bad) fildl xchg jne xor rolb sbbl rex.WRX or outsl fnstenv loopne sub sahf sbb xchg loopne outsl xchg add rex.XB rex.B rex.RXB rex.WX stos xchg sub loopne xchg icebp lahf insb or loopne (bad) cli xchg test xor callq cltd loopne sbb pushfq pushfq xor xor jne fdivr sub and js test movabs stos hlt rol mov lods sub incl insb pop nop sti sbb (bad) push and fwait rex.WRB rex.WXB xor rol cmp jae in add in pop sbb movsb xor rex.R lret add mov subb adc int mov sbbb (bad) cmp sbb rex.R jmp mov rcl adc sbb leaveq (bad) jrcxz adc jb mov rcr xchg mov pushq leaveq cmpsb pop mov mov out (bad) in xchg outsb xor movabs cmp mov out lods movslq mov jb loope in lock rex.WRXB movabs (bad) sub sub adc out push sbb icebp fsubs icebp test rex.WX rex rex.WXB sub (bad) cld xchg sbb (bad) scas (bad) cmp xor sbb mov xor (bad) cmp fwait adc callq insl movsb (bad) (bad) add and fs sub pop xchg cmc (bad) fistp mov add out lods and pushfq sub imul adc outsl xor (bad) xor clc cmp xor push or out jnp insb sub jg lret rex.RB lret (bad) mov xor callq icebp pushq sbb rex.WRB jp mov (bad) mov cld out rex.WRXB (bad) adc in outsl adc rex.WX cmpsb mov rex add lret (bad) add rex.XB addr32 subl hlt (bad) and add push out movabs pushq mov rex.WX (bad) jle mov stc movsb int3 lods cli fimul lea int scas pushfq out icebp sub pop mov mov cli (bad) mov loopne std xor movsb rex.XB cmpsl popfq movabs imul jb and adc fcoml (bad) rorl shrl xchg sub sub sbb add cmp jae xor and outsb sbb lock xchg xchg stos mov nop (bad) loopne sbb mov adc (bad) push movslq loope rex.RB push out mov mull test and sbb push cmp loopne in xchg mov (bad) leaveq and push and rcr (bad) or or cmp outsl and (bad) sub loopne mov fcmovnb mov loopne push cmp es loopne mov sbb (bad) test rex.WR rex.W iret add (bad) out mov (bad) retq repz mov pushq cmp sbb xchg jg out xor push (bad) in out leaveq faddl (bad) sbb loop push add mov pushq in pop rex.X or outsl test mov cmp (bad) je jns loopne mov scas xor mov and int callq xlat and (bad) and outsl sub xchg and neg test loopne xchg leaveq cwtl stos cmp (bad) cmp lret cmp fisubrl rex.B cld mov cmp sub xchg cwtl stc (bad) push rex.WRB cwtl cmp or (bad) xor jns loopne rex.X imul mov rex.WB retq jae or xor mov psraw adc xor mov movabs in cli (bad) (bad) jmp and rex mov mov jmpq or mov ja and sbb loopne lods pop rex.WRX mov lret adc sub rolb pushfq adc rex.WX sub sbb sbb imul rex.XB jle cmp loop jp cmp movabs loopne (bad) insb (bad) outsb jrcxz shl fcmovne movabs (bad) xor xlat mov rol or push jge or cmc in (bad) (bad) xor cmpsl (bad) (bad) mov mov jl pushq ja in mov cltd lret jb sbb rex.X (bad) (bad) jmpq movabs lret cwtl rolb out loop mov (bad) fs push jmpq cmpsb xchg test rex (bad) icebp movslq in repnz pushq clc lret cmp cmc rex.X cmc jno push loopne movabs sbb jl sub sub mov sub sbb stos mov pop (bad) test out imul mov loopne ds test adc sbb rex and rex.WR sti rex.RX gs loopne xor cmp jl pushq imul cmp push add shlb movb mov retq and (bad) loopne fistl add rex.RXB rex.WX repnz movslq insl je (bad) imul jno rex.WXB add int3 lods xchg sbb rex.RX lret or push addr32 (bad) mov xchg loope adc mov test in lret rex.WRXB subl leaveq rorl cmpsb in rex.WB or xchg push sbb int3 repnz (bad) or xchg xchg jbe outsb shrl mov cld in cmp lret xor mov rex.WRXB (bad) callq push (bad) not mov mov jnp (bad) rex cs mov mov movabs sbb mov (bad) pop (bad) push in and cmp cmpsl insb (bad) sub loopne adc in (bad) adc vmovaps rex push insb enterq mov (bad) fsubrs rorl jno outsl adc cmp sub push stos (bad) cli (bad) push out xor mov mov (bad) (bad) xor retq cmp mov sbb mov cmp lret pop loopne xor mov sbb or fwait rcrb jae add loopne sarl jp (bad) mov fidivrl fadd gs rex.RXB sub xor jo enterq jg (bad) mov lret loopne mov fcom (bad) xchg lret (bad) lock (bad) and outsb jo hlt and shrl pop and (bad) sub cmpsl adc loopne stos or sbb out (bad) (bad) subl cmp cmp pushq mov loopne jb mov shrl mul jmpq in pop fwait cltd pop pushq out xor loopne sbb loope jmpq xchg (bad) cmpsl lahf in xor sbb imul xchg enterq adc mov cmp cld (bad) movabs out sbb lret (bad) out add pop shll lret (bad) add insb in out jmpq out pop lods xor rex.B movabs mov rex.WRB mov push retq (bad) hlt (bad) fadds loopne fstpl insb push je (bad) mov shrl mov pop mov (bad) stc in (bad) (bad) or loopne (bad) shll xchg loopne pushq sub retq fnop mov imul (bad) mov (bad) or add rol cmp in loopne xchg mov nop (bad) ror jb cmpsb movabs pop movabs push fdivp loopne movsb xchg xchg (bad) cld jl outsb outsb ror xchg loopne pushfq mov (bad) test add loopne sbbl retq loopne mov rex.RX loopne pop push rex.WRB xlat cld pushq mov mov cld jns cltd sub outsb (bad) rex.WRXB (bad) (bad) and and (bad) sbb ljmp pushq sbb pop loopne push rex.B sbb jmpq (bad) jbe in fstpl retq popq jne iret (bad) loopne mov xchg sub retq fnsave (bad) (bad) rex.WXB sbb rex (bad) movabs movabs add rclb mov jg cmc pop int sti pushfq fstpl push mov pop add movabs lret pop cmp pushq (bad) rex.WRB rex.WX lods mov (bad) rex.X (bad) mov faddp int3 cmp jge jg jg xchg mov (bad) pop test movabs addr32 (bad) outsb xchg rex.RB rex.WRXB popfq xor add insb cs ror sbb mov fcoml cmpl mov pop sti cli int (bad) mov (bad) xor mov pop insb cltd jmpq popfq cli and callq cmpsb imul lock jae rex.R pop jmpq jmp pop retq (bad) pop jmpq rex.WR rex.WRXB rex.WRXB rclb add test xor mov (bad) movabs je (bad) in (bad) (bad) adc rex.RX (bad) xor loopne imul mov nop int (bad) jmp jne jl jo push retq sub rex.R data16 ljmp push xor and adc in loopne jb xchg (bad) addr32 popfq loopne insb jbe mov movsl sar mov cs xor sbb (bad) cli in (bad) add jo (bad) mov cmp push rex.WRB hlt je (bad) scas movsl jo loopne in scas mov jmpq xor mov loopne (bad) (bad) rex.RXB shr push rex.WR add sub cli outsl pushq in add scas jp movabs pop mov (bad) cmp jrcxz callq rex.W sub (bad) push enterq rex.WRX jle pushq loopne andb data16 pavgb int mov in mov mov xchg add rex.WRX repz fwait loop sbb scas movabs je movabs jne std jle sbbl (bad) jmpq (bad) mov retq or pop gs (bad) fdivrp loopne (bad) sub sti (bad) fcompl mov add mov cld (bad) rex.X loopne std in stos retq (bad) loopne pop sbb sbb fildl stos (bad) jns out sti mov fs js outsl jnp pop (bad) jbe (bad) mov add pushq loopne jle jnp (bad) test jno icebp adc cli sub out push xor add repnz mov push pop xchg cltd loopne add out test js loopne (bad) cmp xor cli icebp add (bad) cmc rex.WRB pop hlt jp mov loopne idivl xchg add jmpq fcoml or and pop loopne retq (bad) movslq rex.RB pushq jrcxz fs jmpq pushq jge movslq pushq xor jl (bad) rex mov movabs data16 sar sbb (bad) gs pop adc fucomp movsb stos xchg or div and pushfq rex.X (bad) push nop adc fs push cli jle mov retq and scas test js retq cmp add or jrcxz rex.B rex.X in mov jns es mov jb rex.WRX lahf or mov (bad) xchg and faddl push imul sub fwait jmpq shl sbb (bad) imul pop ror nop movabs jns fdivr cmp (bad) pop mov fwait shrl sbb (bad) fldpi cld (bad) rex.WX fsubrl rex.WRXB pop nop imul neg icebp xchg addl xlat lret loopne addr32 loope jno test xor fstpt (bad) mov loopne cs cmp scas add fidivl fsubl xchg loopne push push es jmpq rex.WRXB jmpq rex.WX pop and mov or (bad) mov imul jge rorl cmp jmpq adc outsl loopne (bad) add movslq in add cs xor test add divl (bad) addr32 adc add push jno mov mov rex.WXB test insb rex.W jno mov test pop cmp and pop loopne sbb in adc mov sbb sub xchg rex.X mov sbb rex.W jl sbb test jmpq xlat in mov std loopne (bad) jns jb rex.WXB mov xchg cmp je loopne xor scas xor jle loopne and adc notb (bad) (bad) (bad) js xchg cli rex.XB leaveq cmp pop loopne rex.WR ficoml adc fld xchg test or push xor shrl fmuls (bad) loopne or int3 (bad) (bad) adc xchg test or es jns loopne xchg mov (bad) in lods and loope (bad) callq clc (bad) xchg sbb in cmp xor rex.X xchg (bad) add scas (bad) lods imul mov xchg pushfq loopne push sub xchg rex.WB loopne retq loope pushq (bad) cmc test rcll mov in (bad) hlt adc movslq (bad) movsb rex.R jmpq cmp pushq retq jae (bad) mov loopne (bad) data16 movabs (bad) mov insb loopne jp clc gs test xchg fadds lret sbb adc rex rex.WXB out push gs adc jbe and add sar adc xchg sarl loope cwtl jnp xchg (bad) rex.X loop mov pop add mov ja loopne jp test jmp movsb fiaddl rex.RB retq fdiv (bad) loopne sbb andl push pop insl (bad) xlat or rex.XB icebp push (bad) xlat fidiv test loopne mov (bad) rex.WXB fs in cmpsl jmp enterq (bad) sub rex xor push in (bad) xor loopel and push loopne rex.WXB rep (bad) mov in jb jl icebp pushq cmp xor mov add loopne stos xchg mov (bad) std rex.WX xchg jg lahf push (bad) mov (bad) loopne movsb stc stos je sbb (bad) loopne,pn rex.X lock fidiv in and mov rex.R rex.RB std sti jmpq loopne lret jnp loopne sbb (bad) loopne push xor mov sbb rex.B incb or rcrb xchg mov outsl loopne rex.RX out pop xor xchg add movabs cs loopne jnp mov outsb sbbl mov (bad) (bad) xchg cmc (bad) add (bad) (bad) (bad) xor icebp push clc rex.RB stos loopne (bad) in mov loopne test lret fs out (bad) and xchg mov movabs mov insl push or mov adc pop hlt jne cmp in pop sahf (bad) (bad) xchg adc (bad) cwtl sub (bad) movsl add in loopne mov pop in (bad) lahf push std fsubrl (bad) outsl loopne jne (bad) lods cmp (bad) pushfq in mov fwait test leaveq mov test add jmp adc adc shl int sbb adc cmpsb rex.WX loop add sub (bad) push and sets test (bad) and stos movsl adc adc (bad) (bad) push rolb pushfq loopne rex.WR rcrb add sub fnop rex.W fimul push (bad) sub adcb sbb fsubl movabs jb push fldenv and movabs mov adc or loopne rex.R repz retq int3 or mov sarb (bad) lret (bad) in scas push lret lods outsl test mov rex.WX add (bad) xchg rex.WRX (bad) jl (bad) loopne and pop fnstenv (bad) (bad) fs sbb adc rex rex.WX pop rolb sbb movsl adc (bad) (bad) outsb rex.WRB popfq stc (bad) in imul gs ss addb sub int3 rcr in and lods pushfq rex.W rex.X sbb stos insl nop jne movl or (bad) mov cmp mov lods rex adc pop js loope adc (bad) movabs and jbe mov std icebp jne sub rex.WRXB or sbb jmpq mov int sub (bad) fiaddl insb adc (bad) sahf mov add sbb xchg sbb rex.W adc rex.RX iret jno (bad) loopne push jle xchg orl (bad) cltd cld (bad) jne sar in push scas xor jo scas cmp (bad) push (bad) xor popfq (bad) loopne or adc sbb jmpq adc adc push fwait mov shrb mov mov mov gs insb or gs jmp in (bad) lea stos rex.RB mull leaveq movabs iret repz (bad) test (bad) adc fmuls movabs rorb jno out cmp outsb movslq testb ror rclb in data16 (bad) (bad) adc (bad) and jo mov (bad) rorb out adcl enterq sub (bad) sbb mov ds jae test mov rex.WRB movabs data16 pushq mov mov cmp (bad) idivl push pop clc gs sbb and mov lods push sbb (bad) rex.W (bad) imul data16 cs andl xor sbb mov rex.WRB out rex (bad) sbb std lock jne insb repz es push out mov pushq jrcxz xchg cltd jge xorl fs fdivrp (bad) frstor cli fwait cmp and ja (bad) retq add icebp add clc out (bad) rcl rex.WRX add loop sbb fmul mov fwait sbb notb (bad) push (bad) (bad) xchg movabs pop push pop and mov mul sti sahf clc cwtl (bad) test lret cmp movabs xor test (bad) jrcxz repz movabs rex.WRXB in xchg jo,pt pushq hlt jmpq in (bad) (bad) stos int xlat loop movsl faddl loopne movsl push and jmp stc (bad) scas addr32 loopne (bad) (bad) lock pop adc fimull ror sbb rcll movabs movabs mov outsb xchg movslq xlat xchg fidivr (bad) sarl cld mov (bad) sub rcrb xor cli xchg mov add (bad) (bad) or (bad) (bad) movabs push (bad) es loop adcl (bad) gs jmp imul sub loopne,pt xchg xor icebp jae mov xor mov or loopne retq adc mov pop (bad) adc jae rex.WRX test rex.WX jmpq mov ja xchg rex.W (bad) or outsb jrcxz lret cmp rex.WX icebp in rex.WB (bad) sbb fsubrl mov nop and xchg xor subl rcrb and sbb jrcxz movabs pop sti es jmp xchg mov rolb rex.WRXB jle (bad) mov insb pop loopne lea movabs adc mov (bad) mov (bad) movslq mov push add lret out add test (bad) stos rcr repnz xor movsb or jae (bad) sar jb nop loopne mov xchg xor sbbl callq mov mov fucomp (bad) mov push test test loopne addr32 jb (bad) mov jmpq cmpsl (bad) test mov pop jo loopne and jmpq (bad) kmovw movabs jge jno and (bad) cs loopne rex.WR mov (bad) and push cmp cmpsl loopne cmpsl data16 (bad) inc sub cli outsl in cmp pop (bad) mov adcl mov loopne sti (bad) rex.B je (bad) xchg jns repz or mov (bad) sti pop repnz pushq andb loopne rex.WRXB test std lret loopne mov jrcxz sbb cmp adc (bad) mov xchg (bad) in jmpq xchg nop retq (bad) loopne fnsave push retq repnz int loopne data16 lods and addb scas (bad) cmc loopne in rex.WX rex or leaveq jrcxz sarb shrl pop loopne mov pushq in and fcomi and adc loopne mov or cld movabs adc stos add int mov or push rex.RX adc movabs rex.XB jge add (bad) decl cltd lods (bad) leaveq and fnop rex.WRB sbb sarb cmpsb (bad) int pop in stos mov movslq jmpq out faddp or (bad) loopne sub std retq int3 sub repnz frstor cmp rex.B mov movabs mov (bad) in loopne (bad) scas mov (bad) movslq (bad) add nop rex.RB push loopne mov adc (bad) and cmp and mov sbb loop test pop (bad) cli fistpl jrcxz sbb add jg rex.R mov xor (bad) (bad) (bad) rex.WX loope (bad) (bad) and push (bad) hlt mov cmp pop ficom xlat and loopne rex.WRXB pop (bad) sarl rex.WR jb popfq (bad) sarl and lods add mov loop repz shl movsl addb (bad) jne loopne cmpsb xor jmpq cmp jg lahf adc frstor pushfq loop fsubs add jp (bad) (bad) mov (bad) add mov mov jae sub callq test or (bad) jmp (bad) pop push push pushq enterq int3 (bad) cmpsl cmp cltd in fisttp (bad) jg mov cmp loopne rex.WB loopne jmp mov adc mov lods or rex.WRX loop (bad) mov sbb lret fidivl jne pop loopne rolb add rex.WRXB scas pushq or test or pop cmpsb lock enterq scas loopne rex.X (bad) xor jns jbe add mov push movsb (bad) in rol and (bad) mov jp out stos sbb xor enterq scas jne mov cmp mov in (bad) jns clc movabs mov nop xchg (bad) mov loopne (bad) frstor xor (bad) xor icebp xchg lret jmp sub lahf jrcxz mov (bad) or loopne repz push hlt and jb ljmp ja jp xlat mov pushq sub retq xor (bad) notl sbb cmp movabs add or rorb xchg jmp loopne (bad) mov pushq in cmp or insl xor xlat or and js out (bad) mov repz or loopne and (bad) rex.WRB pop pop loopne adc pop gs test sti xchg subl pop sub cmc push loopne shll movabs (bad) cmp loopne pushq mov or pop andb (bad) mov test sub movsb test stc sub jge (bad) lock loopne stos in push push out push sbb lret xchg lock cmpsl ror rex.X cmp test (bad) rcr add pop cmp xchg movabs loopne lock xchg xchg in hlt pushfq outsb mov icebp rorl and cld shl stc loop cmp mov movabs fucom xchg (bad) xor sub push and ja mov loopne scas lahf xchg std callq add xor add shlb loopne stos rex.WRXB fcoml push imul int rex.X adc push mov (bad) loopne jmp rex.WRX test fwait loopne insl retq or adc xchg mov loopne jle or push rex.WX adc mov stc in or mov sti xchg stc test test (bad) mov jp cmpsl out and pushq jp out repnz adc movabs mov loopne sub or mov mov sti cmp rex.WX retq pushfq jmpq ja sbb (bad) fnstcw pop clc scas jg (bad) icebp (bad) fldenv repz xor xchg push sub push and jns rex.WX stc and pop (bad) (bad) mov sub jg or rex.X sub and nop decb outsb (bad) sbb vpshaq sbbl sbb lods sbb pop mov cltd movabs test pushq (bad) mov xor out in insl movsb (bad) adc cmp ror (bad) fiaddl (bad) (bad) fwait jp jb jg jns vpshab cmp insb je pop cmp jle mov push data16 mov icebp push cmova out pop pushq movsb std rorl sub jg fisttpl (bad) jmpq mov loop and fistpl sbb test (bad) jo rclb test push loopne (bad) sbb (bad) xchg test adc rex.XB sub sahf mov (bad) xor lock sub rcl lock adc repz retq push repnz and lock fcmove rex.WRXB in rex.B mov and add lock shll shrb (bad) cmc rex.XB rex.B (bad) loopne rclb cli lods or loopne and push scas cmp sub pop mov stos out cmpsb in sub mov (bad) xor loopne mov jp mov in scas fwait push mov cmp loopne xor (bad) in in jmpq repz outsb (bad) and rex.WRXB cmp and xor pushfq (bad) sub rol movabs sub mov pop retq or (bad) fs xchg clc ljmp sub (bad) cld in mov mov lods push add sub nop in rex.WRX jne (bad) iret or out jmpq xor cld rex.WXB movabs (bad) mov mov (bad) or xor sbb (bad) loopne movsb cld (bad) sub adc je rex.WR rex.RXB enterq hlt pop retq (bad) (bad) mov rex.R or cmp rorb sub sbb (bad) (bad) outsl clc and adc (bad) jmpq jns cmp (bad) sbb movabs popfq sahf sbbb jns out loopne movslq icebp fidiv xlat (bad) mov stc loopne lret or loopne movslq or sbb sub mov adc xchg or lods sbb fsubp cmpsl mov push rex.R and ss mulb (bad) test jno loopne fmul sub int rex.RX or in rex.WRXB cwtl (bad) jno cmp mov adc movabs out rex.RX jo push mov adc (bad) mov and xchg (bad) fisub pop mov loop cmp xor sbb push rex.WB (bad) sub callq cld (bad) mov fs sbb mov mov stos pop scas (bad) enterq jmpq jle cmp xchg icebp jbe and addr32 (bad) lock rex.WX sbb mov xor pushq insl jmpq cmp fidiv fidivrl pushfq sahf (bad) mov in stos jle xor scas adc lods roll pop repz jb cmp pop pop rex.XB callq shll (bad) lret fmuls cwtl movabs xor je rex repz xor mov pushfq icebp stos mov xor fsubrl xchg sbb mov pushq push fdivrs (bad) sahf fisub (bad) fdivs fs jmpq stos pop iret push and callq jle (bad) ja lock insb mov icebp movsb jmpq lea in ds or xchg rex.WR rex.W outsl xor jg (bad) mov test lock cmc outsl rex.XB icebp (bad) pop rorl cli (bad) fsubs rex.WRXB sbb imul leaveq sbb sub out jo jae and iretw loop frstor cwtl rex.WRB rex.R loope scas jl adc in int3 jle adc jmpq pop retq pop in leaveq (bad) (bad) roll (bad) mov (bad) pop xchg cmpsl cmp lock fldl pop mov retq callq repz cmpsl gs add mov cmpsq (bad) fisubr jmp cmpsb xchg (bad) sub adc push sbb data16 pop shl sbbb xchg xchg std rorb xchg (bad) rex.WRX rclb sub out mov test jge clc pushq xlat xchg sbb pop ja (bad) sbb adc sbb enterq cmp adcl or jmpq (bad) movabs jge pop (bad) cltd xchg popfq jns pop xchg sub movabs callq jrcxz pop loope (bad) mov loopne sbb sti loopne movsl lea push scas fsqrt fisttp popfq loopne mov xchg cwtl pop test in jns sahf mov rex.WR in or adc (bad) adc loopne jb xchg gs xchg loopne ficomp loopne cmp mov rex je add loopne fisttp loopne,pn nop loop (bad) imul sub imul loopne retq (bad) (bad) jns (bad) outsl fcomps outsb mov out (bad) loopne incb add retq (bad) adcb std movabs mov in rex lret sbb lahf rex.RXB fwait in jnp movabs loop pop mov retq lods popfq movabs sub adc cmp (bad) leaveq jmpq mov addb je and jbe xchg sub xchg loopne mov pop loopne,pn (bad) cld fnop rex.XB rex.WB insb xorl scas (bad) loopne xor loopne and rex.X mov ds repnz xor in test (bad) js rex.RXB loopne,pn jl (bad) rex.XB std icebp or pop xchg sbb rex.WRX and loope sahf addr32 movslq sub sub jmpq push pop mov (bad) xor es and loopne rex.WXB mov out loopne (bad) fnsave fdivl mov in callq movabs lahf pop mov mov (bad) jns int3 sbb cmp loopne sub xor in adc fptan loopne add retq loopne cltd (bad) push (bad) out lea mov xchg fiadd stc mov fnstenv and cmp sahf mov mov loopne rex.R es push jmpq in or (bad) (bad) (bad) xor out jbe mov pop hlt sub loopne (bad) xor fbld out and rex.RXB rex.RB repz (bad) jg rex.WX mov xchg loopne (bad) rex.WRB jmpq and in or loopne (bad) scas cmp movabs or in add mov movsl xor jmp mov lods loopne cmpsb jbe pushq (bad) mov cmc fimul push or mov insb pop outsw test xor (bad) jo fwait cmp sbb (bad) cmc outsl jl movsb insl pop rex.WRB xor push rex.X jg xor or mov ror and adc lea pop lock callq std stc movabs mov mov adc rex.WB stos mov (bad) xchg mov fwait jrcxz and loopne push repz cli sbb in and (bad) xlat sbb adc pop mov loopne rex.RX adc add mov (bad) loopne xor jo and scas rex.XB movabs loopne or jae insl add fmuls xor loopne (bad) and int pushq (bad) lahf (bad) mov lods loopne addr32 (bad) pushfq in mov repnz adc shr (bad) push (bad) iret mov jno pushfq fsub xchg pop sbb sub sbb mov (bad) loopne repz clc (bad) and jo insl and mov pushq pop pop sbb lock outsb movabs orl add mov (bad) outsl (bad) rcr (bad) out xchg (bad) sbb cmp (bad) rex.W movsl clc pop (bad) test adc jmpq mov xorl jo (bad) (bad) enterq lods (bad) rex.WR jb (bad) mov pop adc xchg lret add movl (bad) movabs in je sbb or pop ss jae add and loopne (bad) pop movsl imul enterq jae rex.WR (bad) and jl (bad) mov (bad) retq sub in sub jnp rcr or ss xchg (bad) fwait (bad) out mov push pop loope out cmc mov mov loopne (bad) movabs cmp mov rex.WRXB jmp mov pop jp sbb (bad) cli loopne jrcxz sub adc mov fiaddl or cli adc (bad) in rex.RX mov std (bad) fnstsw out cmp (bad) xchg ds jmpq loope mov mov sahf mov add loopne rex.RXB pushfq in loopne push (bad) mov loopne rex.WR out out (bad) sub cmp and fcomp sbb loopne retq in mov rcr or and cmp clc mov or (bad) mov (bad) test push ljmp fnsave insb repnz and or (bad) pushq mov js xchg cmp sti sar sub shl sub adc test pushq or repnz pop rex.WRX jp xor movsl (bad) or fidivl jrcxz movabs cli in movabs jmpq loopne mov sbb out cmp fidivl loopne mov xchg pushq sub or adcb loopne (bad) stos add rex.W mov and (bad) imul callq (bad) xor pop movabs sub pop adc mov fdivrp pop cmc pop icebp rex.X shl (bad) xor (bad) (bad) or xor xchg pop jno in loopne test jp push loopne jbe insl mov nop push loopne (bad) mov and out add loopne sub or lods or mov out shl add xchg scas (bad) jae xlat retq cltd or loopne rcr xchg or sti repz rcll (bad) rex.WRXB xchg or fcmovnbe or loopne adc xchg sahf cmp movslq out jmpq rex.WR adc jmp (bad) in mov callq xor (bad) rex.XB rex.B rex.WXB mov mov retq nop cmc adc add loopne lods xchg push rex.RB cmp insb out test xor rex.X rex (bad) cltd rex.XB loopne adc int3 cmp loopne and iret (bad) (bad) or cmp (bad) push test rex.RXB (bad) sahf (bad) pop pushfq in insb addr32 jb jo rex sti add rex.X scas test mov (bad) push int3 (bad) rex.WX adc (bad) cmpsb pushq rex.R and jle (bad) loopne insl mov cmp rclb xchg add psubsw nop in (bad) pop pop loopne (bad) mulb loopne out jmp mov fs pop imul and mov mov (bad) cmc fimul test outsl in add xchg (bad) mov mov movabs push movabs mov cli rex.RB out jp (bad) icebp pushq or (bad) and and and retq cmp test mov mov repnz mov in popfq rex.WXB or jns ss out mov mov loopne rex.WB xchg mov psrad nop mov xchg sbbb push movsl test frstor mov pop and add repz lret je movslq pop rex.R jmpq movabs mov jrcxz out incl push cld jmp jmpq rex.WB pushfq and fcmovbe sbb jb (bad) fidivr imul enterq movsl popw rclb pop lret (bad) and (bad) loopne repz pushq sub push mov adc jmpq (bad) lods popfq outsb loopne jmp fs mov in xchg adc or loopne (bad) jne pushq ds insl cli or cmp jp in and and sub and in fisubrl xchg (bad) mov jbe or movsl rex.WX add cmc shlb rex.WRX pop (bad) rex.WX rex.WRB mov jmpq fdiv sbb adc pop incl jg cmc adc and ss pop rex.WX rex.XB in mov sub cld adc not in pushq loope or cli mov pop loopne movsl adc insb add jno add jo or rol cld mov ror movabs movslq mov (bad) icebp (bad) and (bad) jmp in imul cltd cmp push xchg (bad) retq mov (bad) pushq pop jo (bad) gs lret (bad) movabs sarb cmp mov jl clc int3 (bad) jns cmp push mov jmpq fnstsw push adc add xchg cli jbe cwtl (bad) cltd (bad) sbb (bad) loopne mul or stos xchg (bad) (bad) clc jg loopne mov sub jrcxz (bad) cmp movslq fcoms cwtl (bad) loopne rex.B sub shl add imul or (bad) mov movsl ja cltd cwtl in mov pop add callq imul cltd (bad) js (bad) insl xor stc rex.RX lods div sub fisubrl popfq fnsave jl push adc (bad) rex.B rex.WRXB movsl or (bad) (bad) mov add rex.RX fstpt cld jg (bad) pop rex.WXB xor movslq imul lahf pop jmpq or (bad) jo js or addr32 jg adc loop (bad) mov movabs repz pop and rex.WRB scas xor pushq cwtl add xor mov and std (bad) pop jae mov adc (bad) or lahf stos fnstsw sub jg shr (bad) loopne pause push cs mov (bad) xorb jmpq icebp mov (bad) jno sub or add add pop es in or out loopne xor rex.WB xor rex.WRB repnz pushq lahf incb int xor jnp andb sbb stos fucomip adc std rcrl cmp movsl cmc imul xor ja (bad) xor sti mov scas movsl xchg iret lahf xchg fsubrs test fisub add mov mov add (bad) xchg out pop jb jnp mov rex.WR (bad) outsb out (bad) test adc add adc and (bad) fildll (bad) mov icebp cmpsb (bad) add mov and sub xchg stos repz xor test mov (bad) stos imul in (bad) sbb mov lea loopne mov enterq gs jnp shrl pop (bad) popfq (bad) xor roll xchg hlt loopne cltd mov xor xor (bad) clc pop xor test roll js cwtl div (bad) (bad) xchg loopne test sbb sbb lea rolb data16 pop out xor jle orb cmp mov rex.WB sub mov stc rolb xchg cmp mov sub jns andl adc loope mov rex.W rclb rex rex.RX or sub mov xchg js faddl adc (bad) jns cltd (bad) mov mov xor lock loopne icebp (bad) add mov mov add loopne and rex.R shll (bad) rex.WRXB lods (bad) scas lret pop rex in test xor (bad) and xor rex.WRB (bad) and jb movsl retq loopne std (bad) xchg or repz mov (bad) xor loopne pop jp cmp add push jns cmp and sbb jmp nop mov loopne and add xchg mov mov loopne (bad) movabs xchg (bad) sbb cmpsb cmp rex.W or pop add (bad) jmp fild (bad) in and pushfq jl xchg (bad) pop mov test lods and mov (bad) data16 jmpq (bad) push xchg (bad) xor cld add mov (bad) out sbb in leaveq (bad) or in sbb rex.X jnp or pushq and imul sub (bad) in mov jo fcmovbe push lock fadds add loopne and rex.WXB or add callq or jns mov in scas (bad) mov add pushw out sbb callq movabs mov (bad) imul mov rex.WXB lock fcmovb or movsb rex.W jmp sub (bad) fdivrl (bad) sbb in and sub xorb cs and rcr imul rex.RXB rex.RX int3 rex.XB push mov jo pushq jb cmp scas sub cltd icebp (bad) fisttpl rex.WRB (bad) pop movabs mov jrcxz jnp rex.WRXB (bad) sub fadds xor scas xchg callq cmp or lret orl rex.WXB (bad) stc and pop (bad) adc sbb jmpq gs sbb rex.W pushq lock rex.WR movsl callq (bad) (bad) (bad) cmp (bad) jnp cmp xchg sub and out or in stos shl retq and xor jo sbb in movsl rex jrcxz push movsb rolw (bad) clc movabs xlat out (bad) add rex.B enterq (bad) (bad) out (bad) leaveq (bad) mov retq out pop out popfq movabs rex.WRX jns xor leaveq (bad) and fst xor fs jnp mov out rex.B rex.XB repz jae sbb rex.WRX stc fnstenv out xlat (bad) (bad) mov stos movntq (bad) and (bad) (bad) jns mov gs sbb add rex.WRXB adc rcrb gs and rex.B mov push incl push movsb pop (bad) je in push test mov (bad) addb xchg sbb mov int3 imul test xor ja movslq fucom fnclex fldenv test repz xor movabs subl rex (bad) (bad) jno pop loopne (bad) fstpt jrcxz fs sahf lcall push (bad) pop rex.WB mov sti and rorl cmp mov add loopne shlb jmpq mov fs (bad) stc adc (bad) xor mov pushfq jns mov add jae int3 pop push out jle fimull mov test loopne mov leaveq (bad) (bad) rex.WX sub pop stos addr32 loopne adc (bad) out sti and pop xor imul movsb stos sub in or test cld lods (bad) (bad) pop je icebp rolb roll js rex.X or in rex.RX ss pop mov adc pop xchg loopne push add jmpq out pushq pushq xor sub rex.XB movabs rex.WRXB jae shl mov cwtl imul lret nop cmp rex.WXB (bad) mov mov jp jno rex.WRX in loopne mov (bad) loopne (bad) sub adc (bad) cmp lahf outsb fs adc loopne (bad) addr32 mov mov adc loopne jbe std lods push mov movsb out enterq (bad) xor pop movabs mov idiv sbb (bad) jno rclb repz xor and (bad) cmpl add cmp insl mov (bad) mov sub push mov or fstpt xchg insb mull (bad) movabs addr32 fidivr shlb leaveq rex.WXB rex.RB xchg out pop hlt in and xor insl iret sbb push cmp mov out fcomps stos (bad) rcl cmpsb mov je out rcl xchg adc mov mov mov and rex.WRX push movslq adc and xor in add leaveq es xchg cli jg sbb cmpsl xchg (bad) jmpq rorl xor push mov scas subl retq rex.R jrcxz push (bad) (bad) in rex.WXB (bad) repz (bad) sbb xchg retq pop in pushq pushfq jns fs fmul rex.WRX mov fsts loope mov pop movabs rex jmpq mov pop sbb rex.WRB rex.WXB imul in jo mov jns (bad) jbe (bad) lahf sahf jo in push in xchg add in mov sub (bad) lock (bad) (bad) repz rex.W pop rex.W fs (bad) stc xor scas loopne movsb xchg or es push fsubs in movabs cmp loopne (bad) repnz flds jb retq shlb pop cli loopne mov fneni(8087 add jmpq mov mov loopne rex.RX or cmp loopne xchg fwait scas fsubp js scas movabs icebp or sbb adc fwait mov xchg movabs imul (bad) rex.RX loopne add (bad) mov (bad) iret and rex.XB push (bad) in or clc cmp (bad) sub sbb push (bad) rex.WR jmpq sbb mov rcl jmpq repz xor insb sub (bad) (bad) jg mov (bad) mov iret ss sub vminss faddl (bad) fcompl cmpsl lret xor out shl pop enterq loope stos lret mov mov test mov hlt or pop pop jns pop mov hlt and out jb (bad) in (bad) adc (bad) cmpsb fisubrl push pushq cmc adc cs shrb cwtl cmp mov subb and mov test cltd fwait jo mov jns retq clc or in sub mov adc xchg in in imul pushq lret mov cmp in nop sub loopne rex.WRXB push repnz (bad) cwtl loopne clc push add or inc pop adc mov loopne mov mov rex.X test outsb xchg loopne std jg (bad) xchg mov push fcomi mov jo sub rex.WRX test (bad) mov sub xor in mov movabs std rcll shlb rol (bad) (bad) adc data16 cmpb es ss push jrcxz loopne cmp rex fwait cld loopne (bad) mul jmp mov (bad) in push or int3 in retq loopne cwtl or out add jne or (bad) cmpsl or addr32 push cmp in repz fidiv rex.WRX (bad) sbb push adc sub cmc mov cmp jrcxz fdivs pop jg,pt test rex.WX pushfq insl pop cmp cmp xor jb rclb sbbb sbb jb sbb or loopne pushq adc in test movslq rex.XB adc leaveq retq scas out jno (bad) nop xchg movabs jrcxz adc cwtl xchg cmpsl (bad) (bad) (bad) mov sub add out (bad) fisttpl clc rex.WXB pop jnp out mov ss movabs (bad) repz add fst cmp push icebp out add xor jns sbb imul (bad) sarl imul imul (bad) test mov and or cmp sbb (bad) nop insl rex.W fcoml mov mov scas je xchg jmp and jg (bad) jnp loop xor jg int3 shll cmp mov scas adc jg pop in xchg data16 adc xchg sbb push lret rex.WB rex.WXB push outsb sbb out jg mov callq movabs outsb (bad) mov stos or jle popfq out rex.RB ja push (bad) rex.WXB lock (bad) in clc repnz loope nop rex.B movslq rex fdivrl sbb jrcxz addl sbb hlt adc (bad) xor ja out jne (bad) in mov xchg (bad) jo loopne xlat and rex.X retq sbb ficom xor mov popfq movslq (bad) loope ja and shrb or jmpq in and pop sti rcll cld (bad) and (bad) movslq lock push jo movabs rclb and or rex.WRXB in rclb sbb test lock jp fstl xor (bad) (bad) jmpq clc out or lret xchg fdivp mov rex.R mov retq movsb or loopne rex.WX rcll lret in or cmc movabs insb (bad) cltd and add neg jo mov sbbb addr32 (bad) int3 xor fcmovnb incl jg xor outsb lods lock mov in (bad) mov (bad) loopne,pt cmpsl out (bad) fisubrl loopne sub loopne cmp xchg (bad) and (bad) jmpq and sub xchg cli int3 sub xor imull pop or hlt (bad) rex.RX (bad) stc fstps xor stos xlat out cli rex.WR xor (bad) jmp adc sarb mov fisubrl or mov xlat adc jmp (bad) cld mov cmp lret movabs rex.RB loope loopne xchg cmp jle rex.WX sbb mov (bad) loopne sbb pop push pop mov xchg sub subl imulb and lods and adc loopne scas retq jbe xor outsb and pushfq mov pop or cmpsl add rex.XB (bad) lods sub jg xor sub movsl int jmpq pop cmp (bad) mov mov jno adc xor cmc fimull xor mov sbb rex.WRXB fs xchg cmp rcr loopne out (bad) stos outsl jns (bad) cltd js mov out pop lret rex.WR (bad) (bad) sub jo loopne add xchg rex.RX (bad) (bad) xchg jg movabs (bad) lret jmp cmp loopne ja xchg scas out (bad) in push movabs sbb (bad) (bad) push add and loopne rex.RXB out xchg fisttp rcl in fcmovnbe (bad) mov rex.WB loopne test ja ds rex.WRB pop and hlt loopne mov es movabs sub xor movsl jmpq xor mov (bad) push fistpl cli (bad) xor loopne (bad) mov loopne jae (bad) xchg mov pop icebp rex.WRX rex.WRB loop sbb mov (bad) lret (bad) stos sti sub in sbb imul mov cltd fsubr rex.WRXB xchg add rex.X xchg sub in adc sub (bad) mov loopne lods out cmp loopne jmpq int (bad) lods sbb loopne pushfq repnz outsl loopne xor subb adc movabs scas rex.RX xor (bad) (bad) movslq in jrcxz sub xchg rex.W (bad) jnp data16 push sarl and sub push fidiv sbb clc lahf sub in cmp lods in in sub movabs jge fcmovbe jo shlb (bad) addr32 cli test jle and (bad) sbb jne jno add xlat sti xchg (bad) movsb movabs xor fldenv int (bad) (bad) xor scas cmp xor cmp (bad) jl jo in loopne jrcxz adc adc stc rex.WRB or jae fstpl popfq dec (bad) (bad) add test cs out mov in retq jmpq out test cmpsb or loopne mov push xchg adc cltd rex.WRX adc decl (bad) push (bad) mov in sub imul mov or retq stos loopne cmc hlt loop (bad) cli cmp xchg jmp jae fisubr or in test sbb push (bad) cld shrl movabs and jge xchg mov hlt push cmp mov jnp and stos loopne mov sbb pushfq stc xor or lods in cli mov lods ss adc pushq imul sbb (bad) jrcxz sub mov (bad) sub rex.WB pop (bad) outsl xor loopne stos gs int movabs sbb mov pushfq (bad) cli test sub xchg (bad) (bad) (bad) mov jns in add sbb out insb movsb (bad) mov (bad) rex.RXB sbb adc mov pop pop jrcxz jb out sbb rex.WX orb mov (bad) jbe in push loopne (bad) movsb (bad) cltd mov xor insl pop addr32 mov jg cmp pop xchg rex.WRXB fimul loopne xorl out jmpq rex.WRXB cmp fsubl idivl (bad) (bad) mov cmp test or mov rcr jmpq je jbe subl sti pushq xchg (bad) loopne pop repnz jae (bad) out cmp loopne sub es jbe jmpq (bad) in fisttpl push cmp pop es movsb imul ror icebp fisttpll mov imul (bad) rex.WXB scas jno test fnstsw outsb sub adc and cmc pop jl jmpq nop adc pushq in popfq or retq pop and icebp loopne adc cmp loop mov cmp (bad) cmp cmp mov retq and subb xor cmp lret jbe (bad) clc sub repz (bad) rex.R rex.X cmc in clc int3 (bad) out (bad) inc or clc (bad) mov jne outsb mov fisubl fmuls rex.XB (bad) rex.X mov ss mov callq and jae rex.WRXB pop fcom xchg jg test push adc iret jl cld movabs out and pop mov pop fisubl stos stos rex.B (bad) and icebp cmp sub (bad) mov add ja in mov (bad) bswap out cmp mov hlt xchg rex.WRX (bad) adc loop lea push cmpsb mov xor pop enterq stos addr32 mov movsb lods pop test adc stos gs (bad) and in jmp sarb mov (bad) jle popfq xchg pop repz (bad) callq (bad) mov cld cmpsb sbb mov stc sub movabs pushq in lahf xchg mov stos mov cs (bad) pop mov in cwtl loope or jl jnp sarl (bad) (bad) rex.X gs lods pop or pop (bad) and adc insl (bad) sub test fwait add sbb in (bad) movabs out cmp cmp insl (bad) xchg sub in xchg movb pop mov cli cmc (bad) adc (bad) (bad) decl rex.WB cmp in push (bad) retq repnz xor fdivrl in pushq sar and movsb mov data16 repz adc rex.WB jge or test movabs pop (bad) (bad) fnsave rolb sub retq movabs jmpq in mov sbb iret mov imul cwtl shrb or movabs js mov cmpsb rex.RB fadds movabs (bad) and push or cmp xchg clc jo lret sarb clc cs mov (bad) mov retq cmpsb (bad) mov or mov fadds jns outsb xor repnz jmpq (bad) sar (bad) outsb icebp adc (bad) enterq mov jle rorl add fmul add (bad) test shlb mov pop xor (bad) test and pushq (bad) cmp rex.R jae mov iret xor (bad) cmp (bad) cmpsb test int3 in cs je adc ja sub jmp jno movabs pop jne rex.R test imul or sub int3 mov xor lock mov lea movsb sub insl cmp xchg pop movabs (bad) mov rex.WXB in fs jnp add push fstpt (bad) hlt gs pop imul insb sbb jrcxz movabs (bad) mov jbe (bad) icebp out cmpsl mov jmpq jg movabs (bad) mull adc (bad) cli jmpq add std cmp mov in sbb cmp leaveq movsb retq (bad) in or pop cmp or (bad) adc mov mov sbb jle pop jrcxz lods jnp jno pop orb mov sbb lock rex.WXB push rex.WRX rex.WR lods adc rex.WB cmp jbe in rex.RXB rex.WX mov test test xchg sahf movabs sub sub pop push jmp loop jne rex.WXB xor ds (bad) rex.WRXB addr32 jbe xchg out push cmc retq pushq in rex.R out movabs (bad) or fldenv jg outsl fs rcll and int jo fsubrs mov cltd shll lret mul xchg xlat push fiadd loop sbb retq adc movabs (bad) (bad) mov (bad) and fmul push rorl (bad) in xor imul cmp and sub mov sbb mov push mov and fs popfq sbb jo test (bad) or xor andl mov insl (bad) push sbb negl cmpsb sub mov in psubsw (bad) in stos cltd sbb movsb push cmpsb (bad) out ds mov (bad) scas or jne pop xchg rorb xchg and addr32 clc lods mul jge incl push fiadd add jo mov mov cwtl int3 int jb mov loopne push sub adc and add xchg leaveq xor cmp sub (bad) insl sti mov (bad) movabs (bad) adc cltd rex.WRX fcmovnbe fidivr rex.WB loopne,pn rex.WX sti js xor jmpq retq outsb cmp add xchg (bad) sub (bad) or lret cwtl jmp lahf fbstp (bad) retq test xchg out jmpq sub cli sbb imul jle rex.WRXB es and fiadd (bad) xor pop mov rex.WB in push rex.X movslq fidivrl decl stc (bad) (bad) xor cltd (bad) (bad) repnz mov adc (bad) negl (bad) rex.RB mov xchg push loopne popq clc rex.WXB rex.WRB (bad) mov push movabs xchg je lret (bad) in pop cmp sbb (bad) test pushq cmpsb adc pop or out xchg fsubs incl adc outsb movabs push pushfq sub in (bad) ja add mov mov imul sbb or sub loopne test repz std pop or sar (bad) fldenv stos je push loopne lock loopne mov std cwtl pushfq xchg xorb (bad) xchg or (bad) lods fxch (bad) retq add cmp loop (bad) or out clc xchg mov std push adc cltd xor addb movabs (bad) movsl and loopne movslq rex.WRXB adc sub lods jnp jle rex.XB rex.WRB loop mov in (bad) mov xor and clc cmpsl jrcxz and loopne rex.WRX (bad) sbb sarl (bad) xchg insb cmp xor lods xor mov mov es out insb (bad) push int sbb sub in rex.XB jb movabs (bad) jno rex.R imulb (bad) (bad) cmpb mov lods xlat movabs vmovhpd cmpl (bad) (bad) cli cld rex.X (bad) idivb fcomip add negl or rex.WXB repz retq cli mov rex.X rolb loopne out hlt (bad) roll cmpsl mov negl mov (bad) retq icebp jg sbb jg in mov sbb sbb mov xor or sbb loopnel mov and insb sub shrb adc (bad) jg rex.WRXB in mov rex.W (bad) cmp imul leaveq cs rex.WRX shlb out div xor (bad) (bad) jg sarl fwait or (bad) test mov and rex.RB callq mov (bad) xchg stc loopne add mov icebp sub rex.WB (bad) loope lret sbb (bad) xchg jmpq jp iret mov (bad) (bad) (bad) movabs loopne addr32 pop rex.WRX rex.XB rex.WRXB jnp repnz xor xlat cmc je in or jrcxz cmp rcrb mov xchg cmpb push mov rol push mov xchg fldln2 pushfq shll sbb movabs cwtl loop cmp (bad) loope (bad) insb or sbb fstl clc jp test iret jmp insl mov (bad) mov xor rex.RB movabs fldcw adc scas (bad) (bad) push jg push xor repz (bad) jo (bad) mov punpckhbw hlt in jne cmpsb pushfq and mov (bad) out pushq out js pop xchg hlt data16 (bad) and decl or jns xchg or pop movsb (bad) js (bad) sub retq mov add je loopne mov and jno js push pop mov (bad) xor (bad) (bad) push pop adc (bad) xchg mov lret push rex.B stos adc add sub mov test (bad) xchg pushq sarb or adc and sbb mov addr32 adcb (bad) repz mov mov xchg mov xchg mov test mov adc sub sbb (bad) jp sbb out pop loop (bad) mov lock xchg pushq rex.WR cmc mov sbb mov pop sub js shr sahf insb mov (bad) and lret out mov movsl cmpsb add pop int jrcxz,pn rex.W mov fistpll out pop add ds (bad) outsb rex.W js rex.RB stos stos enterq adc rex.RB jbe rex.X int fs sbb cli xchg fsubs (bad) and stos sbb pop leaveq (bad) popfq (bad) sub out rol or jle lahf (bad) add shlb in stos cld insl pop xchg ror addr32 rex.WR retq outsb retq mov (bad) stos cmp and fsts (bad) mov mov xor testb outsl rcrb insb xchg icebp xchg and (bad) pop (bad) sarl sarb sub cmp add pushfq rex.RB icebp push ficom (bad) iret outsb (bad) pop (bad) paddd (bad) mov lahf pushfq cmp mov jp movabs adc mov or (bad) out js mov push cmp pop repz rex.WRX mov ficomp mov jrcxz (bad) (bad) repnz fs adc (bad) jg adc or int3 stc adc cli lods pushq out movabs add leaveq in in add push out mul vpsubsw test cmp fstpt rex pushq mov stos rex.RX mov out rex.RX jge adc jno js loop rorb (bad) fsubrs xchg movabs popfq rex.WR movabs jne sarb or mov stc (bad) (bad) push and retq cmp and add push sahf insb mov jae and jge adc loopne pop cmp loopne rex.WR rex.X adc data16 retq rex.W xchg sbb loopne and lahf mov cmpsl mov or lret (bad) xchg pushq jmpq rex.RX cmp popfq sbb (bad) and movabs sti jrcxz lret adc sub xchg add loopne push xchg js (bad) jl in sbb xchg shrl loopne mov pushq in test mov rex.W movsl cmp (bad) ss sub mov decb jl in mov xor (bad) sbb cmp mov mov cmp (bad) repnz retq sbb int add and adc stc mov (bad) mov sub mul loope test sub loopne,pt sbb xor lcall xchg cmp xor retq mov roll sbb mov mov loopne (bad) push sub movsb vpavgb lahf mov sti (bad) out rex.WX mov xlat test xor (bad) pop rex.WRXB lods xchg movabs adc loopne jb popfq add cltd cmp data16 movabs mov pushq cmp pushq rex.RB ror xchg loopne repz sbb rex xor loopne movabs add or mov (bad) je loopne js xor xlat jl test xor (bad) movslq pop (bad) cmc loopne rex.WR je sbb nop loopne push int (bad) lods or (bad) or jmpq add xchg xchg cmp ja out lock cmp adc movabs xchg lock mov rex.WXB add cmpsl (bad) movabs mov mov pop lods lock sahf in movslq lahf (bad) (bad) (bad) mov retq popfq push test (bad) fist push insl push movslq andb out movslq movabs movslq stos pop mov jge rex.WRXB sbb mov fs (bad) or xchg (bad) out (bad) pop pop mov jbe addr32 mov or mov sbb (bad) jb loope in add adc mov push (bad) out es iret or lods xchg movslq (bad) rcrb sbb (bad) mov jle sub cmpl mov pop (bad) (bad) jrcxz xor pushfq icebp in rex.XB cmp adc sub fidivr or loop in neg movsl and sar sbb jl retq insb mov pop rex.WB mov insl fs (bad) xor rex.XB add mov icebp cli cmp cmp movsl movabs fildll push movabs cli push pushq or rex.WX mov (bad) scas in or jne (bad) (bad) adcb mov jg std mov lret rex.X pushq stc (bad) mov push mov pcmpgtw pop cwtl adc push (bad) sub cmp mov rex.WB sbb xchg rex.X xchg rclb rep push mov jb rex.RXB ja mov popfq push cltd mov insb mov imul notb sub test clc push leaveq adc in lahf add sarb test and jno loopne add (bad) jae cmpsl loopne mov out adc pop and popfq rex.WRB loopne jp jb or scas in (bad) lock test mov rex.W push loopne rex.WRXB loop out pop or push insb retq in negb jrcxz in rex.X in push repz mov outsb xor stos data16 outsl mov mov cmp notb adc data16 cld add (bad) in cmc cwtl jg ds shll std add sti pop rex pop (bad) (bad) cld lock push loopne push jno (bad) stc rclb sub divb xchg (bad) jno (bad) movabs cmpsb pushfq repnz jbe,pn (bad) pop xor sub lock xor and (bad) mov jb test sub (bad) push jae loopne or xchg jp (bad) jge (bad) and fbld rex.RB push loopne stos mov insb push popfq adc xor push xor imul mov fs mov or loopne mov add cmp mov loop cmp mov xor int (bad) xor loop shrl sar retq and push jmpq add mov rex.RXB fcmove xchg in fchs leaveq ds sub imul (bad) jns and pop jg cmc rex.WRB loopne xor stc (bad) enterq jns loopne cmpsl xor pop sub (bad) rex.W loopne mov adc es sbb jo cmp mov xchg (bad) loopne or in (bad) loopne cli js sub stos loopne (bad) mov callq (bad) and mov pop xchg out (bad) (bad) jg (bad) bnd shrl and mov mov push rex.W test (bad) xor jnp (bad) movslq sub rex.RX jge sbb jmp push jb (bad) adc (bad) fcmovne or (bad) (bad) sti jo or rex.WX (bad) cmp (bad) movabs iret (bad) adc es stos loopne cmpsb retq (bad) cmp cwtl retq clc mov adc scas (bad) (bad) sti outsl mov loopne jns jge mov sub (bad) pop (bad) out rex.B rex.WRXB movsl addr32 push (bad) fsubp adc xchg movsl rex.WX push jp outsl mov rcll loopne (bad) rex.WRXB in cmp js fmuls imul xchg movabs push jo or icebp xchg (bad) cmpsl xchg std loopne imul movslq xchg jmp cli and or fildl mul (bad) rex.B (bad) rex.WR es sub mov outsb rorl cld imul fs scas sub cmp (bad) cmc loopne mov loopne jle (bad) movabs sbb or cvtdq2ps mov add iret es loopne enterq shlb mov shld push in push ss mov movabs in adc (bad) and loopne (bad) enterq fistl xchg fsub mov (bad) and or stc mov js xchg out xlat loopne pop es jmpq repz callq sbb xchg mov fs adc lock xchg mov movslq pop rex.RXB pushq int3 sub insl jno or jmp ja (bad) subb (bad) shrb cwtl xchg sbb xchg addr32 mov jg (bad) push int3 and lock (bad) je (bad) (bad) fcmovnb rex.B idiv sub movabs or imulb cli nop jle outsb sbb outsl mov or sub cltd adc cmc (bad) add add fsubs (bad) mov insl addr32 or jle ds sub shr fstpt and test lods mov cmp and hlt cld (bad) xor mov insb (bad) je imul push out mov (bad) pushq xchg adc nop xlat mov jne or shll icebp (bad) stos js or cmp fcomps and rex.B fwait mov loopne lahf (bad) mov (bad) xor xor rex.XB xor fildl shlb (bad) out xchg nop lea icebp fcompl or xchg andl outsb rex.X stos (bad) (bad) mov mov sub loopne add callq in xor je or rex.X add (bad) cltd cmovs (bad) shl insl sarb mov sub jrcxz (bad) loop or rex.WXB mov out jb xchg pushq lret and jo mov dec js xor rex.WR loopne in cmp xchg callq sti movb iret enterq (bad) loopne fisub cld push sbb movabs cmp xchg rex.WRX ja rex.RB cli outsl cmc mov fwait in gs mov jmpq (bad) jnp xor cmp test adc cmp (bad) movsb pop jns pop pop loopne movsl shlb xor cmp fs push icebp stc (bad) loopne rex.WX rex.WR int3 or (bad) insl fsub lea sahf (bad) adc js sarl mov ja andl adcb (bad) rex.WB sbb adc loope xchg xchg add jmpq sbb push jmpq adc mov js fsts jmpq sub repz mov shr nop rcl sahf rolb jmp fptan out cmpsb sub mov in xorl lock (bad) in adc mov pushq decb sub jmpq cli movabs pop (bad) (bad) sbb retq in (bad) mov add pop xchg push (bad) not out decb xchg xchg mov sbb sbb repz push rcrb stos or (bad) lahf add sub loopne cli mov shl xchg sbb mov jo fs jrcxz rorb cmp shl sub jbe,pt rex.W cwtl push rex.RB int3 (bad) hlt loopne and (bad) rcrb lods jmpq addr32 out loopne sub loopne xor cld fs (bad) and push stos lahf sub jrcxz or pushq jl xlat sub jo pop rex.XB out loopne jrcxz push sbb sar out shr or adc out xor add pop sub (bad) je add add adc cwtl pop (bad) fsts cmp (bad) (bad) (bad) jecxz sarb jp jg (bad) mov callq in movabs rex.XB movabs xor or loope,pn or push fsubl and mov push hlt rex.WXB andb nop (bad) jp sub jo in cmp imul rex.W and xchg lea hlt (bad) jge loop imul adc (bad) movsl callq xchg iret pop in (bad) sub push retq sub rex insl cmp rex.WX movabs (bad) insb xchg (bad) andb loop adc xchg adc xchg add rex.RX and (bad) (bad) jae (bad) movabs es cmp add outsb mov pushq mov xor in ds shlb callq loopne jp,pn pop jae loopne (bad) lret fwait mov sti sub (bad) loopne pop and imul cwtl mov loopne sub fldt rex.W xchg (bad) out movabs movsb jl pop insl loopne test ljmp mov cmp loopne movabs stos out fcomip out (bad) jl ss (bad) mov ljmp mov cmp jns icebp fistpll rex.RX adc mov (bad) cmp test cli mov (bad) or rcr movslq loopne (bad) pop (bad) jg (bad) movsl cli repnz jb jg retq xchg imul and loopne add lods sbbb add mov lods test in jp rex.WRXB sbb sahf adc int3 (bad) scas (bad) (bad) mov fucomi repz push popfq jg fistpl jg mov (bad) xlat mov mov xor pushq movabs xor adcl loopne movsl or push icebp loopne (bad) cmpsb (bad) or stos jmp jrcxz retq jbe xlat movabs loopne retq mov loop cmc mov int insb loopne movabs add jnp jge retq out lcall add fldcw int3 rex xchg pop jmpq xor mov mov mov (bad) loopne enterq loopne mov ds std fiadd in clc (bad) jae cmp movabs int3 (bad) cmpsl mov sub std (bad) xor jge push jns fmuls sbb xor addr32 repnz in repnz andl (bad) rex.R (bad) loopne xor jrcxz xchg jmpq adc rex.WX push jb jl xor in mov add cli mov gs clc push cmc js mov mov rex.WRXB gs fstpt (bad) out callq (bad) jns ss in shll jbe outsl sub (bad) jmpq jle rex.WR and popq pop gs fucomi rol movabs (bad) cmp rex.W movabs (bad) mov loopne mov in mov shrl push rex.WRXB mov sbb rep movabs inc (bad) fnstsw adc (bad) or push jmp nop rex.WXB rex.WRXB cmpsl add movabs (bad) mov jl pop add sub add push loopne nop movsl sub sbb ljmp mov xor repnz std pop and and sbb cwtl rex.WRX rex.XB xor outsb clc fsincos adc rex.RXB data16 (bad) lock (bad) loopne sbb callq loopne mov mov xor shr mov cmp (bad) push loopne mov cli xchg jmpq pop push mov std loopne (bad) hlt xorl stos loopne pop mov lods insb (bad) rex.B lods enterq and rex.RX xorl and rex.X add sti and (bad) sbb cmp (bad) pushfq decl test xlat sub (bad) pop and fstl loopne rex.RX ja imul xchg cmc fidivl je xchg sahf fdiv rex shrb movabs jmp loopne outsl shl rolb push sahf cmp pop xor cmp pop outsb push push mov xor (bad) stc sub xchg add xchg loopne popfq or test mov push jmpq pushq (bad) xchg icebp mov jmp sahf (bad) xchg loopne cltd cwtl movsb pushq rex.WR (bad) (bad) callq push rex.WRB (bad) jl xor pop (bad) and xchg rex.RXB jrcxz rex.WRX loopne sbb imulb fmulp icebp fdiv rcrb sbb out (bad) (bad) jge lock or (bad) and movabs sti cmp shl add movb insl push mov (bad) (bad) cwtl loopne and loopne (bad) sbb or jrcxz (bad) iret rex.WRB movabs mov insl cli mov mov rorl loopne cmp xchg stos std loopne push mov pop pushfq sub add movabs xor mov fucom cld and retq gs loopne xchg (bad) xor andb and loope leaveq xor cwtl sub addl loopne push int insl rex.R repnz rcll or sbb scas ja lret add (bad) (bad) cmp retq rex.W xchg push pushq or (bad) imul cmp enterq push hlt mov rex.WX insl mov mov and out xor cld or pop (bad) mov rex.B xor jno jle movabs push retq loope cltd scas loopne xchg mov test mov xchg lods xchg jmp pop loopne (bad) sub rex.X and mov mov movabs cmp (bad) test lea or fcoms jmpq (bad) adc jrcxz cmc loopne mov fstp jl mov callq xor in and (bad) fsubrl loopne add clc or cmp sbb mov push sub mov out and insl adc retq testb scas jnp sub (bad) outsl movabs (bad) loopne (bad) retq sahf (bad) cltd push (bad) in (bad) je punpcklbw lcall fisubl (bad) or mov (bad) int3 jg pop loopne mov xor (bad) jmp rcl in insl jmpq push xchg (bad) pop loopne (bad) rex.RB (bad) mov test mov (bad) push xchg int icebp cld adc push (bad) je loopne scas rex.WRXB and pop loopne rex gs jrcxz rex.W cwtl test jae sub pop icebp cli or push (bad) rex.WX cmp or mov and (bad) xchg (bad) adc loopne iret fwait (bad) jge loopne adc loopne push xor out (bad) and adc or add shlb xchg rex.WR outsl out insb loopne adc cmp loopne gs jle or jb (bad) insb shrl test push or xchg pop sbb nop repnz mov jge sub (bad) cwtl mov (bad) int xor loopne xchg xchg out add movabs ss sti push es (bad) jrcxz loopne imul (bad) jne hlt sti jns (bad) jno rex.RX iret pop push jmpq fwait and adc loopne jge fldcw shr xchg iret movsl (bad) or mov loopne mov in loopne sar lods movsb std lods test rex.RB xchg data16 loopne jmpq mov mov (bad) int sti cmp (bad) jp pop (bad) mov pop (bad) jmpq and (bad) test test sub push xor xchg (bad) pop outsb (bad) out adc stc mov cmp (bad) (bad) jns or loopne xor jae rex.W jb sbb xchg xchg rex.WR (bad) push adc loopne sti sub sbb rcll callq (bad) out (bad) hlt and rex.WRB pop shll cmp push decl js push adc (bad) cmp (bad) and (bad) adc xor (bad) xor jmpq (bad) shr add sub rex.WRB (bad) loopne cwtl mov pushq fs sbb jmpq xchg rcll loopne mov shlb nop repnz retq pushfq rcrl cmp sub mov sbb rex.WRX jbe (bad) xchg (bad) loopne mov shrb add loopne lock repnz cli stos (bad) pushq in adc xor stc (bad) push and push loopne rex.WRX xchg xchg loopne (bad) mov mov cli mov cmp adc rex.X fwait mov in mov rex.W rex.W (bad) mov pushq loopne and pop out in scas xor fisttpl incb (bad) retq adcb rex.WX adc es pop xor mov loopne (bad) movabs in jns fs (bad) rex.RXB clc leaveq shrd pushfq (bad) sti (bad) mov mov test movabs jmpq lods loope rex.RXB sti add ficoml (bad) push std fcompl jb mov jae (bad) lock (bad) jns sar out mov rex.RX lods push sub mov (bad) loopne fcomps (bad) loopne xor rex.WXB cmp push ja (bad) enterq loopne add and test pop cs (bad) push test scas fucomi fisttpll and sti (bad) mov (bad) cli cli cmp xchg mov iret loopne push pop jmpq sub mov syscall in decl jrcxz outsb callq cld (bad) sbb repnz jne loopne loop pushq sub or movabs sub in pop (bad) xor imul jmpq pop (bad) test push lods adc rex.WRX mov js or callq callq rex.RX cmp fldz jb (bad) (bad) mov (bad) loop sbbb icebp in jnp (bad) fbstp mov cs pushq imul jrcxz and adc pop in (bad) pushq (bad) xchg popfq outsb movabs jb jp (bad) xchg sbb cmc ss popfq mov rex std (bad) mov jge (bad) (bad) (bad) sbb (bad) (bad) rex.XB xchg (bad) icebp fs and sbb bswap (bad) sbb cmp xor (bad) (bad) (bad) xor vcvtps2dq nop fs (bad) push xor xchg in xchg pushfq movabs in xchg (bad) pushq xor cmp fs sbb loopne outsl adc mov and fstpt (bad) flds xor or jmp sub std loopne pushq (bad) jge jae test retq pushq rolb mov pop sbb cmp lret scas jmpq fidivr adc (bad) push stos cmp loop (bad) (bad) addr32 loopne es xor xor cltd iret lea (bad) in sbb shrl insl movabs lret stos rex.B xchg sub jns subl fstl lcall js sub loopne and adcb sub rcl or pop sbb loop xchg rex.RXB xlat loopne lods (bad) (bad) add rcr and rorb push and loop (bad) and sbb (bad) and xchg (bad) (bad) mov retq (bad) push pop add cli callq mul (bad) frstor loopne loope (bad) adc (bad) loopne jne ss (bad) repnz mov (bad) add (bad) sarl and jmpq leaveq xor rcrl imul and data16 sub cld adc rex.WB movsb (bad) mov fstpl mov or rex.W push test loope (bad) cmp mov loopne rex.W (bad) xchg pop sahf fcoml jle mov lods sub scas and pop stos push rclb int3 add callq test in sahf mov add mov gs and xchg in or rex.WXB sub or loopne clc mov jrcxz out loopne pop (bad) fdiv stos push sub push rex.XB mov mov pop in imul out negl jbe test loopne mov push (bad) (bad) jno sti sub jno (bad) test xor mov mov pop jmpq adcl loopne jb xchg imul mov jmpq mov and mov shlb or pushq (bad) cs sub mov nop cmc cmp (bad) mov data16 loopne xchg movabs movsl xor lret jmp (bad) sbb fiadd loopne pop jl in mov and push pushq sub jo nop (bad) jmp jae mov or cmp xor subl jl or mov (bad) rorb xchg imull lea fneni(8087 int3 cld ss cmp movsl jle es jb in imull add lret jl sbb sub jrcxz pop movabs out (bad) xchg rex.R incl (bad) cmp and (bad) rex.X movabs retq xchg adc imul mov sub cmpsb (bad) clc stc cli (bad) xor xchg loopne rex.XB and sbbl xchg adc loop fiadd nop lea fildll mov loopne in gs rex.WXB rol (bad) andb fdiv (bad) xchg (bad) repnz data16 cli (bad) (bad) cmp (bad) scas lcall shll xchg mov jle hlt jb flds cli insl mov retq es cmp rex.B mov (bad) xor movabs xchg add pushq cmp scas cmp test mov retq icebp test adc lea lret cmp loopne and jnp in (bad) xor jne sub je pop (bad) (bad) or sub or (bad) clc jle add (bad) adc out (bad) add stos xor out sarb xchg loopne jbe pop mov fmul cmpsl xchg movabs rex sahf push stos push in fsubl mov or mov push mov addr32 sub loopne loop sahf outsl pop data16 std or xchg (bad) xchg mov in pop hlt or retq rex.WX xor and xor mov mov movabs pop pushfq lret mov mov rex.WR cmpl je (bad) movabs test jg pushfq callq xchg movabs mov loopne pushfq or out add mov out repnz (bad) rex.RB fisub cmpsl xor nop stc adc mov ds cmpsl cld xchg jno jmpq and (bad) push and stos (bad) negl (bad) repnz mov addr32 mov jmpq icebp fs push nop mov out rex.WRX test cmp pop push movabs (bad) (bad) insb (bad) (bad) jo lods jo test pop insb popfq mov pushq (bad) push mov clc fisttp (bad) addr32 (bad) icebp rex.WRXB xor jmp rolb adc in adcl xor adc and (bad) sbb (bad) loopne ror adc or (bad) sub cmp push lret in push loopne jmp pop (bad) xchg jmpq cmp lods movslq adc scas fldl add xor sub movsb loopne retq (bad) and (bad) rex.WRX mov (bad) loopne jge mov icebp (bad) cmc rex.R xor cmc adc adc cmp cmpsb (bad) sub fmull adc loopne pushq xchg nop rex.WXB loopne movabs std imul jmpq cmp fwait lcall and es add xchg (bad) loopne fidiv retq adc stos ja pop in adc data16 rex.RB add fnstcw loopne cmpsb lret jno stos iret adc rex.WR pop in sarl loope jmp fild add mov retq (bad) vsubss retq fwait jge (bad) callq jnp rex.X xchg jp (bad) movsl out cmp mov lahf jmpq mov cli rex.WB (bad) std outsb test loopne loop movsl sbb movabs jg adc (bad) adc and jge rex rex.WX jg cwtl rol cmc cmp stos loopne cmp out (bad) (bad) fwait loopne cltd rex jns cwtl xchg jge (bad) (bad) not mov push xor add (bad) (bad) idiv mov push or jmp cmc rex.WRX and jrcxz mov movsl pushq rex.WXB rex.WRB stos sbb pop mov lods (bad) sbb (bad) stc xchg movabs xchg pop test lret je loopne retq adc xchg (bad) jmp mov (bad) loopne cltd mov sbb (bad) (bad) (bad) loopne enterq pop loopne sub jge sbb or sbb (bad) in out lods (bad) rex rex.W cs test (bad) jge cwtl loop loopne or jg test rex.B adc mov rex.WXB ja rex.WRX mov (bad) loopne sti (bad) ffree mov fdivrs mov adc or adc outsb (bad) es in cli mov xchg cmp and mov xlat in (bad) and mov sbb (bad) push xor push mov xchg loopne jrcxz imul (bad) cmp xchg fimul loopnel repnz push xor jns fildl (bad) jno fildl jg add pushfq retq and jmpq loopne int3 add or cmp xor out repz or cmpsb movabs push mov rex.WB ja jnp movabs rex.B cld (bad) push iret jne (bad) (bad) jg (bad) fsubp loop and orl and mov jbe loopne (bad) movsl add insl cltd add xlat (bad) (bad) rex.WRX int3 loopne or mov and rclb ja pop movabs out pop js nop cld xchg sti stc stos sub sub enterq imul insb nopl shrb fsubr lret add jmp sub cmp sub add jle loopne outsb rex.RB loopne (bad) jne cltd in cmp (bad) xchg cwtl xor fisubl lock (bad) xchg jne mov divl outsl fcomi rex.WRB (bad) jrcxz (bad) movabs jp fsubrs (bad) cmp (bad) (bad) xchg and fistpl rex.WRXB (bad) (bad) mov js sub div xchg fistpl add loopne pop outsb (bad) rex.W decl test rcrl sbb es xor in mov xchg lret shlb jnp loopne sbb fs add add fist mov xlat jg ss sti (bad) mov (bad) clc retq scas mov cmc loopne sub lods popfq or mov gs mov or pop lods add sti jae roll (bad) jmp (bad) (bad) jmpq pop movsl fs out xorb (bad) jne xchg push fld loopne xchg push clc (bad) es loopne,pn or in rex.WRXB loopne mov xor adc pop loopne scas (bad) mov loopne fist rex lods cli test je push and (bad) cmp pop adc loopne je and (bad) jae sbb xchg jns outsb ja sbb cwtl loopne scas fwait add (bad) callq mov (bad) cmp loopne fsubr int3 stc movabs je or rex.WRX popfq lods fist (bad) xor loopne test push out pushfq (bad) loopne fdivr jmpq loopne jbe cmc sub cmpl sub mov xorl (bad) rex.W jle jno imul rcrb and mov std pushq xchg movabs imull rex.XB nop jmp sar mov (bad) mov stc sti nop or rex stc add mov fcoml mov and mov push xchg xor pop sbb jrcxz retq (bad) (bad) out sub mov jbe fsubs (bad) rcrb jle or loopne add mov imul rex.RB es adc lret loop fadds adc in push cmp out pop rex rex.W mov stos and (bad) in scas jnp movabs mov pop jl movaps cmp xor movsb lahf mov push jnp (bad) sahf repz retq and and movsb or jrcxz or pop rex.W (bad) and sbbl test jo rex.WRX (bad) sarl scas rcl push movabs xchg or cmp (bad) (bad) cmpsl jle cmp out retq mov sbb loopne mov out rcrl out (bad) pop xor mov loopne (bad) cmp in mov loopne rex.W outsb rex.WRX icebp rex.WB and movsb outsl adc and pushq in outsb (bad) cs sub imul (bad) or in sahf rex.B mov loopne popfq outsb pop (bad) in cmp stos adc cmpb sub rcrl (bad) movsb jne pop insb xlat jl movabs sub cmpsl xorl data16 cltd pop pop out mov xchg adc xor movsb (bad) add cli stos or add pop xchg lahf cld rex.B mov sub movabs pop (bad) mov addr32 bnd (bad) (bad) test movsl leaveq (bad) (bad) movsl movslq xlat and mov sub rex.WRXB pop (bad) (bad) fs pop (bad) jrcxz rex.RX lock mov (bad) es xchg callq lea in add fucomp and mov xchg (bad) lahf loopne push test pop retq push or pop cmc rex.WX (bad) (bad) orl ror (bad) jo mov sbb xor adc fldenv fnsave pop int loopne rex.RXB stos insb sub movsl fildl cmp sti pop fnop fistpll mov retq pushq fildl nop in out jb movabs movabs movabs xchg js movabs in pop imul sbb (bad) adc loopne xchg xor and or je mov repnz jno in fldt loopne (bad) mov rex.RB cli pushq testl jmpq (bad) jle sub mov pop in test sub push rex incl shll pop rex.WRB jle (bad) push pop cmp or rcrl sbb frstor mov jle (bad) fnstsw cld adc stc mov mov xlat and retq lea cwtl loopne pop data16 mov gs and (bad) jp icebp xchg lret (bad) loopne sbb fcoms mov sub mov loopne mov ja loop (bad) pop cs loopne cmp in mov fimull sbb jmpq mov rex.WX callq rex.WRXB and cmp add cltd (bad) loopne imul shl movabs (bad) loopne lret (bad) rex.RX xor and stos (bad) cmc jp cmp (bad) or bswap mov lock sub cli int (bad) outsl adc add lret xorb mov rcrb (bad) sbbb scas sahf (bad) je push (bad) leaveq js cwtl fstl (bad) jg mov rex.WB add out cli adc (bad) movabs fisubr cmp cmp loopne movsl xchg movsb adc lods or pushfq pop rex.WB loopne cmp xchg imul xlat fs movl loopne test rex jmpq pop add cmc and popfq sub outsb callq and jge xchg lret (bad) or mov jne lret sub and in insl (bad) xchg retq nop lock cmc and fwait rex.WRX out lret (bad) xchg callq loopne mov (bad) icebp jns pushq scas data16 cwtl addr32 mov jo sbb or rex (bad) out jo lods or fwait scas cmc mov movabs stc mov movabs mov insl jne sub pushfq mov (bad) mov movslq push or icebp lahf movsb movsb xchg and xchg lret mov sbb rex.WRXB cs cmp mov xchg (bad) mov jae or (bad) push xchg cld (bad) pop lahf (bad) (bad) mov jb and lock and int sub pop mov enterq mov (bad) adc cltd pushq rex.RB pushq sti pop sahf out (bad) rex.WX rex.RXB xor adc repz callq in int3 jmpq movabs (bad) imull xchg (bad) and retq insb xchg in cmp int3 mov subl es pop je divb rclb std data16 (bad) or (bad) mov (bad) addr32 in fsubs and sbb sub mov pop (bad) ja jbe rex.WRB cmp jb mov mov loope insb orl sahf in rex.WB rex.W (bad) jle fimul andl hlt outsl addr32 in xchg enterq sbb mov mov movslq (bad) mov in xor movabs lock jmp mov js testl push rex.WXB adc sbb je or (bad) in loopne xchg mov mov jne in push adc (bad) loopne (bad) or adc jae loop pop leaveq or loopne cltd (bad) jne addr32 loopne adc lock clc (bad) ds jl jno rex.WR pop and add rex rex.XB es lret sahf loopne sub sbb rcll addr32 (bad) ficompl loopne sub mov divb (bad) mov loopne rcrl stos xchg fimull repnz xchg loopne in (bad) add sub lret adc add jmpq movabs cmc mov sbb sbb in lahf mov jnp hlt icebp (bad) (bad) (bad) jmpq rex.WRX sub or in add mov lods sub mov add sahf pop cmp cmp (bad) ficomp add fwait (bad) or imul pushq loopne out xchg loopne popfq outsb jns (bad) ljmp mov jae rex.B insb adc (bad) (bad) mov (bad) add mov clc movsb or movsl fsubrl or xchg (bad) sub rex.X pop rex.WRXB mov movsb es loopne int mov mov int3 (bad) js pop xlat pushfq xor movabs pushq lods (bad) rex.WRB mov out sbb rcll adc movabs rex.WRX in jae adc fistpll (bad) and out in xchg (bad) lock jns repnz mov pop enterq outsb loop movups xor fisub ss and out shlb popfq xchg cmpsl test clc repnz (bad) loop sbb and psubq out movabs (bad) gs and movabs clc (bad) test or int int cmp pop jbe rorb mov jle sbb jmpq jg push fsts sub out cmpsl jae add mov lea sbb and or data16 js and push cmp xor fisub add (bad) cmpsb or (bad) jg push xchg enterq hlt std pop jrcxz jrcxz mov (bad) je or fldenv mov pushq or movb mov rex.WRB mov movslq (bad) loope imul (bad) adc adc retq adc mov xlat xor xchg pop (bad) ss out imul movsb sbb mov fcmovne enterq jmp jns (bad) jg sbb lock mov rex.WXB jmpq add jle fadds xchg pop (bad) repz rex.RB out cmp fld in insb (bad) callq repnz xchg adc scas enterq push cmp lods movabs fcmovb jns push lret rex.W ror or pushq cmp cs lea (bad) mov icebp lret xchg movabs clc rex.R rex.WRXB and push (bad) cmpsb out mov push imul (bad) movslq jmpq pop (bad) jae in xor sbb jg cmpsl (bad) or loope in hlt psubsb in sub lock insb push in (bad) (bad) and jl testb sub insl cli jp fdivrs cmp (bad) xor pop loopne mov lods mov leaveq or sbb push (bad) rex.WRX mov loopne jae mov xor xchg (bad) rcll cmp loopne movabs mov jae (bad) sub (bad) retq sub loopne sub xchg fdivrl (bad) (bad) mov (bad) xor and hlt adc enterq jrcxz mov (bad) cmp loop in cmp cltd xchg and jle mov (bad) sub add hlt mov in sub sarl push or sbb loopne (bad) sub xorl sub pop jp out fldl (bad) (bad) (bad) lcall mov xchg out lret int retq jmp insl rcll sub jle rex testl (bad) mov xor xchg and loopne pop sub jp mov loopne (bad) mov sub (bad) jnp js rex.WR adc pop (bad) loopne rex.WXB rex.WX or movslq retq (bad) xchg push ja data16 sbb lcall movslq rex.XB stc (bad) (bad) out and movabs mov (bad) jmpq outsb (bad) cld fcmovnbe rex.WB (bad) (bad) movabs sbb sbb rex.W sub cmp sub (bad) jmpq cmc xor sub lods rcr (bad) callq movsl mov ss add add mov rex.WRB in lahf xchg cmp sbb (bad) (bad) jge mov lods mov movsl rol cmp fstl (bad) mov cmp stos add rex.WX jmp sbb xchg (bad) mov pushq mov cmp retq pop lods jmpq (bad) pushfq sub rex.XB sbb int mov data16 rex.WRB xor mov cmpsl loopne sbb rex.X out cmp and cs repz orb jrcxz jo fsubp adc lock shll cld pop push pushq cmp jp cmp fstps (bad) clc mov xchg movabs outsl mov cmp idiv cs sub loopne adc rex.X pop rex sbb mov mov fist push loopne jle xor movabs (bad) in iret in push cmp (bad) icebp scas fwait (bad) (bad) movabs xor stc shrb sbb loopne xor stc add rex.WB rex.WX jo pop in (bad) (bad) (bad) je out insb rex.WX movabs sbb rex.WB nop (bad) (bad) rex.WRX adc cmp cmp loopne and retq addl xchg (bad) movabs sti test js rcl lea scas loopne ficompl sbb movabs cld rex.B rex.RX cmp cs movabs mov lods (bad) rcr mov and leaveq bt (bad) adc cltd (bad) loopne jbe lahf fildll jnp mov test out cmp cmpl cwtl lods sarb cli add lret enterq jmpq callq add mov (bad) in nop mov icebp addr32 cmp out pushq sbb nop mov (bad) callq add cltd movabs add xchg (bad) xlat negl imul rex loopne or imul movabs leaveq scas rex.WXB pop adc movsl sub mov stos xchg idiv cmpl in add (bad) stos (bad) loopne repnz int3 xor sbb jmp (bad) loopne (bad) (bad) insb or jmpq adc rex.WRB rex cwtl mov sbb pushfq rex.X or (bad) cld callq outsb or not loopne cmp mov or mov push pop loopne (bad) jrcxz sti in lods xchg enterq loopne cmpsb or jne cmp mov xor test (bad) in xor xchg imul cmp sbb xor push movabs in neg or push loopne adc movsl mov rex.WRXB mov rex.B sbb movabs xor add ds (bad) push out ja and or outsb or push xor int and insb insl xor jmp rorb (bad) in cmp jb shrl jo mov and rex.RX add sti loopne mov loopne or mov std lods or retq mov or loopne cltd sub loopne imul mov loopne insl (bad) push jb sbb (bad) xchg fdivrs loopne (bad) and cld xchg rex.XB rex.RX sub scas push loopne pop (bad) adc loop (bad) mov sub sub mov loopne rclb or sbb in xchg xor (bad) and xchg (bad) jno lret jmp (bad) push lods cmp mov int3 mov lea outsb adc pushq or (bad) mov fsubl loopne lahf adc sbbl xchg (bad) in mov jb xor add stc and movabs sti adc fwait clc cmp sbb movabs jns (bad) decl (bad) xlat mov push imul sbb test movabs std (bad) or loopne shlb nop cmp fdivr (bad) adc repnz add incb movslq rex.WR iret loopne retq push adc cltd mov mov ja loopne rex insb sub test sbb and imul adc nop popfq pop loopne jns and repz (bad) cmc add fcoms (bad) (bad) cmp lret rex.WRX jno out hlt out mov pop xchg or sbb out popfq je mov cwtl rex.R in push in enterq mov mov (bad) or add (bad) neg and mov out clc jl pop rcrl in loopne and cmpl cs push rex rex.X jmpq jb stos out test (bad) mov mov mov loopne (bad) cmc lret out movslq std xlat cmp test mov push rex.RX pop in pop rex.WRX cmp mov test scas loopne lret pushq in adc or loope outsl rex.XB rex.WRXB loopne in rex rex.W fs test push xor cli pushq sbb scas icebp ja pop in push cmp jg fldcw (bad) iret leaveq fsubrp out bnd divb loop jrcxz cmc rex.W sti mov add movabs and fisttpl jns add in pop rex (bad) cmpsb lret pop sbb (bad) icebp rex.B push retq or gs retq lods mov int3 (bad) and movslq loop lret jno int3 adc lods (bad) jo push (bad) enterq in xchg lret add xor insl enterq add pop pushq pop fsubrl icebp or or lret fwait jge out (bad) hlt lcall mov mov jrcxz pop sub xchg data16 (bad) push sbb cmc insl subl xchg mov fistp and js rex.XB lcall ror add xchg hlt movabs iretw sti (bad) add fs xor in jg (bad) rex.X xlat icebp (bad) (bad) mov (bad) cltd (bad) xor push push (bad) (bad) jg (bad) roll lock movabs mov cmc in (bad) mov movabs and (bad) (bad) movabs xor sar mov pop add mov sub adc and (bad) jg (bad) cwtl xor sbb callq jno rex.RXB mov rex.WRB or (bad) icebp data16 sbb add xor and loope in leaveq in add lods (bad) xor mov jns icebp xor cmp dec sbb shll clc add cmp and push in outsb iret sub (bad) out sub (bad) (bad) cmp callq ds or sub rex.RXB pushq pop rcr and push sub lods movb add and push adc rex.RX mov lods jns leaveq lret add rex.R rex.WX pop repz (bad) push fmul add mov adc mov lret in pop (bad) and insb mov gs fs (bad) retq push adc in (bad) rex.WRXB retq rolb hlt adc sbb lods fnstcw or es stc mov jb out mov loope rep lcall rex.R (bad) sbb shlb test movabs or jae rclb jbe loopne pushq ja movabs test movsl pushq in xchg hlt jo rex.WRXB jl ja or mov mov lret outsl outsb sbb cli jbe (bad) xchg and addl (bad) sti ja sbb (bad) (bad) adc xor out sbb cmp in rex.RXB push (bad) lock mov flds adc sbb (bad) punpcklbw repnz fwait callq fs xchg sub and xorb mov out (bad) (bad) mov add mov ja in loop sbb jg mov mov jns rex.WRX sub or iret lahf retq lods sbb rcrl (bad) (bad) fbstp mov outsb cltd (bad) fwait icebp cmp push loopne test add sub decb scas cmp rex.WXB jne cmp (bad) xor loopne cmp (bad) or add pop fldl push mov movabs add sti mov and sub fdivs movsl movabs gs cmpsb ss push add cmpsl enterq (bad) in imul cmp mov jno jmp (bad) xlat (bad) fstps data16 test (bad) cmc mov mov or movabs adc outsl xchg (bad) loopne xchg movabs (bad) mulb mov xchg loopne pushfq stos sahf adc mov fwait sbb xorl sub fnsave push sbb sub gs (bad) loopne cmc fiadd ror sub in rex.WRX (bad) adc pop fadd loopne mov lret cld int (bad) pop push sbb movabs loopne (bad) cmpsb repnz (bad) loopne mov sbb mov jne jle rex.WXB mov (bad) (bad) pop (bad) test repnz frstor sub loopne pop mov sahf rex.WXB mov jp jrcxz jb callq pop mov in adcl push ficoml sbb mov adc icebp xchg add lock (bad) sub add movl js xchg (bad) loopne mov (bad) rex.WRX (bad) callq jns sub stc and lock jmpq sbb ss rex.X loopne sbb pop xor retq (bad) loopne movabs (bad) jb (bad) (bad) loopne mov adc ficoml cwtl loopne scas mulb insl movsb xor (bad) push xor test cmp (bad) js sbb lock cmpl (bad) movabs jbe ja clc popfq mov loopne sub jge in out pop int3 sub push (bad) loopne fnstsw in add pop xchg loopne cmp pop jrcxz push sub repz xor and (bad) mov mov clc pop subl loopne xchg cmc out and mov jae,pt js jmpq sti sbb rex.WX rex.WRX rex.RXB div shll cmpsl add loopne rclb lret (bad) loopne sbb (bad) (bad) jne,pt (bad) data16 push movslq sahf jp lods rex.WB rex.RXB mul rex.B cli add mov loopne hlt or or test cwtl movabs (bad) retq imul rex.XB (bad) mov xchg subb cltd (bad) scas loopne sarl cmc xchg movabs pop rex.WRXB mov xorb mov nop in loopne movsb sub xchg adcl (bad) rex.WRX (bad) loopne pop xchg cmp sbb push cwtl and fisttpl loop xchg (bad) loopne mov (bad) callq push cld movabs fimul xchg rex.R retq loopne lahf test rex.XB loopne pushq push (bad) je pop adc loopne retq stc pop jnp shl test imul (bad) sub orq fisttp cmp cwtl add push sarl jae add repnz pop (bad) jnp (bad) xor push movabs hlt (bad) add loopne ja popfq or sub mov std (bad) sbb cli (bad) (bad) loopne retq and adc movabs sub push loop (bad) (bad) jae loopne (bad) scas jrcxz sbbb loopne sub add fstpt cltd out lfs in ss cld sub loopne imul pop in movabs sub rex.R (bad) jmpq push mov sbb movsb and mov gs sbb xor push loopne cld rex.WRB mov cltd stc out test (bad) or rex.X notl sti (bad) ja jp data16 out or test pop xor gs loopne insl xor cltd je rex.RB xor js (bad) jl loopne xor rex.WRX sub sahf adc push mov xchg callq fnop pushq jno movslq xchg imul rex.X ja (bad) jmpq rcl jns (bad) rex mov mov fldenv mov lret loopne notb pop pop insl cmc pushfq out out movabs (bad) incb mov sub rex.X pop rex.RXB and jmpq xor jg fs loopne push js sahf mov pop mov or pop rex.X fnop sbb cltd push mov leaveq sarl rcrb cmp mov nop jp jl sub mov stos (bad) fst add movabs pop or nop sti outsl or jae add (bad) add movabs test test add (bad) or sub or test (bad) rex.WXB jl,pt xor lods xor out mov js loopne adc cmp cmp (bad) xchg hlt mov mull int3 imul fsubr cld cs movabs add rex.WRX sub (bad) jb scas pop jnp fwait loopne pop or shl jle mov mov jbe in movabs cmc add (bad) shlb sbb sub (bad) jo xor fdivs push pop jle adc jae gs (bad) shlb mov xlat out insb pop (bad) in repz (bad) push adc in iret mov rex.RB lods movabs imul movsb adc rex.WRB pop xor jno pop rex.RX jmp cmp sub popfq add adc mov pop shll pushq push pop pop jmpq push mov mov rex.XB shrl (bad) mov and mov loope scas fidivr xchg callq movabs mov mov (bad) scas in jo loopne fnstenv rex.WR (bad) loopne loope addr32 add push (bad) (bad) jns jge nop or cwtl loopne pop js rex.RX xor and addb outsb rex.W mov sti and jbe movabs mov addl rex.B stc rcl pop add pushfq (bad) loopne clc scas (bad) rex.WR or add stos fstl mov loopne jge sub mov (bad) in xchg jrcxz mov jp (bad) jmpq icebp insl (bad) test (bad) (bad) movabs (bad) out xchg mov sub xor (bad) rex.WB stos stc fimull (bad) adcb sbb mov mov (bad) mov jae rex.WB rex.WRX rex sbb in shlb rex.WRB mov ja in rorl data16 (bad) fmul pushq mov shlb insb adc loopne (bad) xchg jle xor mov ds push es iret fwait xor (bad) clc (bad) icebp fstp mov jo pushq rex enterq shlb (bad) negb xor (bad) sbb add mov in fwait out rex.RB rex.WR add cld test inc and popfq xor imul xor lea pushq lods rex.W xor loopne leaveq mov movabs lods loopne fstl xchg loopne push sub loopne psubq out mull loopne (bad) rex.XB pushfq (bad) scas in lret movabs (bad) sub cwtl sub fcompl cmp stc loopne movabs sbb mov insb hlt cwtl cmc xchg rex.RXB jnp in push repnz iret cs and (bad) rex.RX or rex.WX (bad) rcrl adc (bad) (bad) xchg pop lock test pop or stos mov (bad) cs jrcxz fucomip and ficompl push xor jns andb repz add (bad) lret out jle (bad) or std rex.WRXB cmp jae lahf adc (bad) in pushq push lret out pop test (bad) (bad) mov nop add sbb lods in cs pop lock (bad) lock jmpq jnp xor pop pop mov movabs (bad) sbb movslq (bad) add jns fild sbb movabs icebp sub or loope (bad) sbb addr32 shl adc in mov pushq ds lea xor sbb add scas (bad) ja jge rex.WR rex.WRX push adc sti stos fwait cld mov scas or mov rex.WR and cmp (bad) retq cltd fcom (bad) data16 sub repz pushq stos test rorb jnp stc in nop xchg out jg cs mov imul test and icebp pushq sbb and sub sub rex.WRX pop (bad) rolb jrcxz (bad) sbb rex.X (bad) (bad) ss icebp push push movabs (bad) callq lret sbb fs rex.B rex.WRX cmp mov and (bad) jrcxz add es sbbl jg adc fisttpll (bad) sbbb xor ss (bad) mov sbb xchg loopne adc movabs rex.WB cmp mov and loopne jl testb in or xlat shrl loopne jbe mov xchg fs (bad) sti out (bad) pop insb nop or retq movsb incl sub and imul fistp shll mov and adc lods jns repnz sarb (bad) rcrb shrl (bad) adc rex.WRXB (bad) push add pop rex.X gs hlt jo test sub jbe (bad) (bad) notb pop jmpq out lahf mov rex.WRX gs push mov rex.WX (bad) pushfq (bad) (bad) outsb rex.XB sahf (bad) jbe rex.R rex.WRXB outsl push xor (bad) (bad) add mov sti stos (bad) (bad) popfq lods pop jmpq adc jrcxz xor loopne cmp push movabs jg xchg mov rcrl std fsub and xor loopne shrl fwait roll (bad) mov and pop in or xlat rex.WXB loopne sbb cmp fsubp hlt rcl xchg sbb lret loopne fs mov enterq pushfq sbb mov cmpsl repnz xchg rex.WRB loope (bad) mov jne add adc (bad) stc (bad) jl loopne and test xchg cli scas retq out je out rex.RB (bad) (bad) xor mov jae (bad) (bad) lock adcb mov xchg loopne out (bad) cmpsl jg mov loopne jns or stos fwait loopne retq xchg push lahf in sub nop cmp fwait loopne sbb (bad) rex.B xchg rex.W (bad) mov cwtl (bad) lea xchg clc mov retq shl and (bad) test movabs pop callq jle retq jbe sbb popq xor cmpsl rorb loop scas jnp pop jrcxz insl xor xor lock repnz sub cmp cltd pushfq add pushq mov rex.W loopne rex popfq (bad) clc loopne movsb (bad) mov jae stos mov rex.RB fs (bad) hlt (bad) (bad) (bad) mov add mov jl or mov in callq nop fnsave mov lods test cwtl (bad) repz loopne and (bad) imul adc xlat (bad) movabs fwait (bad) lret loopne jge roll in or test loopne push sub (bad) clc xchg mov sbb add loop out add fwait cmp jb xchg or cmp jl mov movabs repz rex.WR lods out sub loopne mov lahf mov mov cmpsl mov adc cmp jb shrl rex.RX (bad) std sub adc lods jbe cmp stos fwait jmpq and cltd add (bad) jmp iret push rex.X hlt pop sbb fisttpl mov mov rex.RB imul xchg sahf jrcxz ds fs (bad) pushq xchg rex.WB and lret enterq xor (bad) add rcrb movb mov fdivl outsb adc (bad) xchg (bad) add sub or in pushq jg xorb rex.B (bad) rex.R jo (bad) movslq sbb rex pop add mov loop jno jl out and (bad) mov in or and sbb xor jae shlb fiaddl (bad) retq fistp mov retq leaveq movabs mov cmp (bad) and rex.WX push std xor adc sbb rex.WRX callq rex.WXB mov in ss mov sub outsb xor fwait add cmpb jb sahf movabs sbb (bad) pop iret xchg lret (bad) loop cs add ficompl mov mov (bad) cmp movabs mov (bad) mov data16 fbstp (bad) sub clc pushq (bad) xor or (bad) sub mov or mov sarl pop sub movabs stos rolb xor sub rex.B sub loop addr32 cmp pop movsl (bad) sbb cwtl mov fwait lock out jrcxz scas imull xchg mov imul out fimull roll sub test jnp xor in (bad) (bad) push hlt cmpsb pushq (bad) cmpsb pop (bad) cmp mov fnop lret xorl orb loopne and jp (bad) cmp lock pushq testb pop movsl mov fsubs xchg test jg sub xor xor mov rex.WX fstpt push retq mov (bad) (bad) retq loopne in adc loopne leaveq pop (bad) fbstp andb mov xor xlat mov in xchg shr and clc out rex.RX (bad) add mov pushq imul insl iret jrcxz xor loopne or mov mov pop adcl xchg insl sbb (bad) adc scas stos fwait stos rex.WX movslq loopne (bad) pop lock test cld rclb xor (bad) cwtl mov push lret out cli (bad) frstor shll or retq movsb fmuls sarl mov (bad) out pop (bad) cmp mov xor xchg adc insb fisubl outsl or scas (bad) ja sub lock adc callq clc mov mov enterq rex.WRXB sub mov out mov rex.WRX stos rex.WRX fbstp fcoms pop cli cwtl add mov ficompl sbb push pop ficoml cmc out (bad) mov bnd xchg rex.WR sbb or in stos and clc pushq sbb lret cmp mov push pop repz and iret sbb in movsb rex.W rex mov hlt or sub adc insl lods (bad) sahf xchg hlt cmp xorl callq (bad) fs int3 in std fwait (bad) out jg jmpq in mov (bad) cmc iret (bad) rex.XB push and sbb out (bad) (bad) addb fldenv push insl pushfq adc retq adc icebp mov (bad) (bad) cltd out movabs pop insl ror sbb (bad) or jne jo rex.R enterq iret fsubs fisubrl (bad) mov (bad) lea sahf callq xchg mov sub or movabs jp mov pushq push test fstpt pushq js push test mov xchg mov jp (bad) stos cs push (bad) pop rex.X xchg and rcrl imul add (bad) test clc mov or xlat xor repz fild push enterq cmp mov addr32 clc mov lret rex.RB (bad) movabs or cld jle and pushfq pop mov pop xor in xchg and in test (bad) mov (bad) mov cmp (bad) shrl push cmp rex.WRXB rex.WRX add es imul outsb test (bad) jle rex.R (bad) sbb push cmp subl scas (bad) pop sbb mov jp sarl and retq jecxz jl sbb loope gs addl or lea or outsl (bad) (bad) fwait in cmc cmp fs mov retq mov mov (bad) adc push test rex.RX je rex.WRX push xchg lea rex.WR in cmp sub fnstenv add out ja pushq rex.XB (bad) cmp stos pop (bad) (bad) icebp data16 (bad) push sbb mov (bad) rclb (bad) movabs xchg outsb (bad) (bad) jne (bad) sbb mov and jno imul movabs mov sub ds out pop out addr32 (bad) rex.WRXB lods movslq rex.W mov or (bad) rex.XB pushq movabs in (bad) cmpsb out xchg xchg leaveq jo fisubl negb retq movslq rex.RX sbb (bad) mov mov sub (bad) rex.X lret data16 xor and stos mov xor pop (bad) pop (bad) insl ds imul repz fucomp loopne jno (bad) (bad) rex.WRX (bad) ja roll sbb test (bad) rex.WRB add (bad) in cmpl in jrcxz out rcrb outsl fdivrs je (bad) enterq jge push push pushfq jns xchg mov push callq ss and mov movslq ds or xchg sbb xchg sti movsl (bad) sub addr32 (bad) pop fimul adc rex.W push add rex.RX (bad) in retq rex.WR jle (bad) (bad) movabs adc push lret xor pop jge pushfq sub xor in cmp and mov movabs fwait lret (bad) (bad) mov adc xchg gs outsb movabs hlt cmovno pop or (bad) (bad) and rex.WXB (bad) gs mov test xor fisub (bad) callq rex.WX add mulb movabs fistp (bad) mov xor xor lods jg mov icebp jrcxz cmp sbb (bad) jp repz mov cmp cmp in sar jmpq jmp loope and rex.R sti movabs jrcxz sbb (bad) or sarb jle mov sub in pop mull mov (bad) (bad) sbb (bad) or fildll jl (bad) sbb lahf int adc (bad) (bad) sbb callq rex.XB jb sbb fs divl pushq insl xor mov test sub jb and (bad) es outsl addr32 sbb jnp pop rorl adc hlt rex.B cmpsl loop repz sbb sub (bad) pushq leaveq (bad) sub callq pushq push or rex.RX cmp jg xchg (bad) lret rex.W pop scas adc mov retq push out mov bnd sub jmpq ds cld add sahf ror cmp idivb rex.RXB rex.R lret push fnstsw stos (bad) loop sarl rex.WRXB rex.X push movabs and callq jp mov cmp jrcxz adc (bad) adc xchg loope cmpsl (bad) mov jrcxz pop data16 rex.RX out sarb add (bad) lret (bad) test sub test rex.WXB xchg test lea pop sbb pop pop insb rex.X popq mov cld movslq (bad) cmp mov je out xchg sbb leaveq (bad) sub (bad) leaveq iret xor (bad) lret xchg mov (bad) cmp ljmp clc xor sbb fsubrs adcl (bad) pushq scas jle lods add (bad) xor in cmp sub pop fildl fwait movabs movabs (bad) (bad) (bad) xchg leaveq or mov mov adc sbb (bad) pushq pop add (bad) xchg ror (bad) icebp fsubl adc scas ss (bad) pushfq movabs (bad) cmp stos add (bad) jae xor cmpb in test cli xchg fsubrs loopne jmpq (bad) loopne vzeroall push imul out sahf outsl fsubrp pop add cli mov add push cmp icebp rex.WRB popfq and lea nop je rex.WXB (bad) std es sbb loopne pop (bad) jge (bad) fcmovbe outsb sub add (bad) movabs in xor rcrb (bad) pushq loopne movabs or pushq in leaveq in and loopne add or mov sarl sti loopne test rex.RXB nop nop loop rex.WRX ds movabs test icebp cmp int3 jge rex.X sbb shll in push (bad) in jnp mov sbb fucom scas jrcxz test and xchg mov or repz sbb adc loop enterq add xchg (bad) xlat jo loopne or rex.WRX mov (bad) mov addr32 (bad) data16 (bad) fucomp (bad) jl repnz or (bad) (bad) cmp ja or leaveq (bad) lock outsb pop or (bad) xor mov or mov loopne rex.WX repnz sub adc loope push xchg out rolb pop and (bad) (bad) movabs (bad) fsts (bad) loopne rcrl decl mov movsl sbb rex.B jo cs movabs scas movabs xchg lret (bad) xor loope loopne test retq je push or fcomi rex.RXB jmpq mov stos (bad) movabs callq rex.RXB mov or mov push and xor adc (bad) callq adc sbb rex.RXB (bad) jle loopne pop xor mov mov sub in ficompl js adc mov cmp rex.WRX outsl pushfq rex.WRB (bad) fsubrs add loopne rcll xchg lock lret cmp mov loopne lock jp ds mov data16 jl leaveq mov movabs icebp add mov (bad) mov sarl (bad) (bad) cmp mov movsl cmc (bad) rex.WR add insl addb outsb (bad) (bad) sarl cwtl add push jg clc cmp stos hlt add sub jmpq (bad) sar dec in retq rex.WR loopne sub cmpsb cs mov add and (bad) rolb adc or (bad) sbb (bad) mov in rex.RXB mov push movabs rcll in or out int cld and cwtl orl sti (bad) rex.RX mov es loopne jns outsl sub mul addb (bad) loopne fildl jnp mov pop loopne jmpq cmpsb xchg loopne (bad) or or xchg or loopne (bad) scas jae loop cli loopne or icebp pop jbe movslq jne push cmp jo,pt loopne out retq (bad) inc fcomip jl push (bad) ja xchg cmp (bad) sbb repnz movabs loopne in mov (bad) jge pop (bad) jmpq mov (bad) stos rcrl or fs or fbld (bad) in adc enterq addr32 sbb xlat out jne (bad) mov cmpsb push adc in jle notb mov mov in rex.WRB out pop shlb lahf out jrcxz clc test adc sbb (bad) imul (bad) mov cwtl icebp sbb jns (bad) (bad) mov movsb jne loope push (bad) icebp outsl ftst push mov movslq rex.WX retq xchg cmp push rex.RB (bad) loop iret test enterq add movabs jmpq sub (bad) movsb sbb and adc pushq or fidivr sarb out or ljmp jns (bad) add wrmsr rex.WX xor sbb cmpsl in fdivr outsb (bad) repz and (bad) imul rcrl mov iret push mov (bad) mov loopne fs imul (bad) pop (bad) out xor sarb (bad) rex.WXB je push hlt mov rex.W rex.R or (bad) insb mov xchg je cmp mov pop jrcxz sbb (bad) jae movabs (bad) incb mov (bad) jo or (bad) out rex.WB out outsl callq (bad) fisubl adc pushq (bad) xor (bad) xor rex.WRX retq jmpq (bad) sbb callq and adc outsl rex.R mov data16 rex.RX jbe clc imul gs and (bad) in or lods movsl ss rex.WB cld icebp pushq pop loop cli sub (bad) sub std pop rex.WXB (bad) sub loope out jmpq rex.WB rex.B lock xchg pop mov jp mov push cmp xchg jge cs movslq push mov movabs rex.RB andl xchg in adc loopne ds pop adc scas leaveq cmp (bad) stc in mov (bad) (bad) add (bad) repz movsl loopne sbb sub loopne mov jle (bad) mov cltd and cmp xchg mov ds and repz outsl (bad) sub stos retq and cmp loopne sub fwait repz adc rex.XB (bad) sti stc loopne pop stos movabs rex.RX add cli jns setne lret (bad) mov enterq pop mov (bad) scas decl (bad) (bad) xor sub icebp push test and stc sub (bad) hlt or mov fdivl sub loopne nop xor or jrcxz (bad) ss fsubs xchg mov mov nop (bad) pop (bad) movabs sbb loopne push jns (bad) xor lret xchg loopne add loopne adc callq enterq negl stc fsubp rex.WXB (bad) (bad) mov imul (bad) lock cmpb mov repnz out out adc mov (bad) in cltd or fildl (bad) mov rex.WR leaveq cmp in jmpq pshufw mov sub mov (bad) (bad) insl (bad) imul (bad) in mov shrl movabs xchg sub mov jmp outsl pop test gs mov xor (bad) nop js outsl adc scas fidivr (bad) clc lock xchg imul rex.WRX scas xchg clc (bad) jno (bad) rex.RXB cmc lods mov mov (bad) clc (bad) movabs insl movsb imul scas push rex.RX jns mov (bad) sbb es (bad) (bad) add xchg jl std in in (bad) leaveq push jrcxz imul jmp movsb (bad) mov xor (bad) jg xlat (bad) js push (bad) imul (bad) mov mov jge roll cmpb push xor int insb adc xor mov and pop sub cmp (bad) mull int jmpq insb (bad) xor push (bad) enterq pop push enterq movsb fs int3 and stc add and jo out mov movsb lods in scas (bad) add sahf movsl push pushfq cld test (bad) adc loop cs jmpq loope in stc negb pop (bad) pop imul xchg sub or fmull sub lahf adc mov cmp and push sub icebp xchg (bad) je mov je movabs (bad) cs clc nop push movslq movabs mov (bad) xchg mov (bad) loopne jg stos pushq jrcxz popfq lahf (bad) mov push imul xchg fcompl out rex.WRX and cwtl adc pushfq pop mov rex.RXB cmp (bad) sbb data16 add sub int3 movabs push sbb or jle es and jnp sbb adcl jle sub jo and mov cmp rex.WB flds mov test movabs rcll sbb xor (bad) adc jmpq outsl add movabs sub out jns cmp lret movabs or mov adc callq retq jge mov pop sbb test push pop rex.RX adc and rex.WR push sub std gs cmp (bad) stos rex.RXB rex.B sarl je cmc push outsl add cmpsl outsb adc xor jns jne lret fdivrl int3 out decb jb pop mov decb pop test jb (bad) or jp lahf in rex.WRXB rorb mov jo adc roll (bad) insb in (bad) out popfq adc (bad) rorl xor rex.WB mulb (bad) shlb jp lret int3 (bad) (bad) mov cli (bad) jrcxz (bad) notb (bad) mov lahf add sbb sbb mov (bad) pop clc (bad) (bad) callq jmpq pop mov or sub (bad) (bad) xchg in cwtl adc in out ss (bad) mov in icebp (bad) insb or ds test add shr add adc movsb xchg sti in sti in imul adc (bad) sbb sbb xchg es jl (bad) mov jl mov xchg cli rex.WXB mov lcall sbb test nop jrcxz and rex.WXB rex.RX adc add rex.XB sti xor addr32 pushfq or iret cwtl stc test lock movsb out mov movabs rex.XB push lahf jmp mov negb cltd xchg (bad) loopne mov fldln2 mov retq in sar push out and jno xchg xor rex.X gs mov loopne lret (bad) pop push (bad) in loopne sahf lock pushfq and mov (bad) (bad) out sbb std mov xchg push loopne (bad) rex.W xchg (bad) mov xchg rex jmpq cmc add xor rex.X sub push icebp push sub movabs imul add xchg jmp mov adc ds (bad) cld lods (bad) rex.RXB loopne out push xchg mov sbb push addr32 push fcmovnbe lock mov (bad) rex.WRXB movslq outsb mov in mov or fstpt fs rex.WRB fsubp mov rex.WX fwait lock jbe movabs shrb and rex.WXB pushq push (bad) mov jae sti loopne fadds push adc fs push loopne jno mov psubusw loopne sub cld (bad) loop mov in (bad) xchg push loopne or adc add scas sub movabs movsl sub rex.WXB loopne cli out cltd rex.WRX rex.RXB decl jg (bad) lret scas mov mov sub je jae mov es mov mov (bad) cltd pop rex.WRXB and rex.X stc adcb retq mov jne loopne or outsb fidivr pop add and xchg xor (bad) jno add (bad) decl cmpl and push loopne and lods in movabs mov jne outsb fldl xlat (bad) cmp clc sbb fdivl fbld mov hlt scas loopne mov xchg rex.WRXB loopne adc cwtl or lods fwait movabs mov mov clc mov loopne repz rorl fistpll (bad) sub lods sti stc icebp push xorb cmp xchg in xchg xorb sub jo movabs (bad) lcall addr32 (bad) rex.X and (bad) jo sub insl rex gs enterq mov add retq xchg enterq lods shlb rex.WRB sahf jrcxz or mov xchg add icebp test stc (bad) addr32 mov lret loopne mov (bad) (bad) pop ss cmc mov lods mov sbb scas push pushq mov and rolb mov fnsave icebp xchg (bad) (bad) and add (bad) (bad) js stos (bad) hlt jmpq jge (bad) lods test cmpsb jmpq xor test and pop xor loopne sbb faddp cmp (bad) divb xchg rcl add (bad) (bad) (bad) cmc (bad) dec (bad) loope sahf xor out sub (bad) push jl (bad) in xchg ficom (bad) and push enterq cmp shl mov rex.WRX nop jrcxz and push xlat jmpq push loopne adc loop test in insb cli (bad) xor (bad) fs fcomi cmp rol (bad) loopne mul jl movabs jnp mov jle xchg add mov pop (bad) jne rex.W (bad) rex.WRX shl int jns pushq (bad) add xchg in and (bad) test out cmc (bad) lahf jp leaveq and int3 jae rex.RXB jmp test out loopne push push retq mull ss (bad) pushq shl data16 rex.WRB or sbb cwtl popfq push loopne stc jle rex.WR add rex.RX fwait push cmp push add add mov sbb pop leaveq in xchg ss movabs (bad) or jrcxz xor loop stc push jge loopne rex.X fsubrl (bad) loopne (bad) (bad) (bad) imul rex.WB callq cmc mov push (bad) negb xor std rex.WRX movabs rex.WX cmpsb imul cmp ja mov mov xchg loopne (bad) jmp out xor pop icebp jae sahf (bad) sub (bad) mov fwait xchg rex.WB mov (bad) sub movabs mov adc or mov loopne (bad) or xchg jno xchg sti (bad) push outsl loopne add movabs (bad) xor or xchg adc sbb loopne sbb scas (bad) mov lea sub fsubrl clc rex.WXB rex.RX or in loopne pop rex.RB retq fnsave (bad) fmul jl (bad) out pop (bad) jns mov sub movslq or rcrb (bad) and in lock int3 out jg (bad) jns (bad) mov mov in mov pop insb fnclex lahf and sub (bad) and xorl fmuls retq int3 mov add rex.RB (bad) (bad) repnz and in or xchg retq mov loopne scas insl test outsb sbb scas jne lahf enterq jmp out push cltd sti xor lods movsl insl (bad) out push pop (bad) fs notb pushq pop xchg rex.B (bad) loopne in movabs outsl loopne xchg (bad) test ja out xor cmp mov jl movl push ss pop ja jg loopne pushq add xchg push push jae mov jo mov je push xchg xchg lahf loopne es leaveq adcb test (bad) sbb out out sar sub pop in movsb imul mov rclb (bad) std roll fstps in pop rex test imul repz push cs loope push bnd mov mov test out fisubl sub movsl movsb lret je jmpq fistl ss clc test cmpsl cmpsl or loopne (bad) jg xchg shrl loop sbb xchg fldt cmp movsb xlat cmp (bad) push (bad) mov (bad) cwtl imul (bad) fucomi (bad) loopne retq shll rcr or mov shl sub insb cmpsl callq xchg clc mov (bad) (bad) (bad) fidivrl adc fcmovnu cmp pushfq ss adc (bad) push jmpq and add (bad) pop sti cmpsl sahf cli (bad) cmp (bad) push (bad) lock (bad) pop xor add jnp rex lahf and push jmpq fldl leaveq stos add out enterq add sbb rex rex.XB pop sbb out cmc jno jmpq fs mov or (bad) cwtl xor in xchg and or (bad) (bad) test (bad) mov (bad) (bad) sti mov mov lock mov mov (bad) (bad) sub (bad) mov rcl lock loop (bad) or or xchg hlt (bad) mov adc test push xchg rex.W jb in cld movabs (bad) cmp movabs lret movsb or push cmp lret sbb jo cld callq and and movsb fbld xor pop faddl pop mov callq xchg pop fistpll mov insl xchg mov cmp xchg rex.WRXB repz jrcxz or rex.RXB and push xchg in jmpq jrcxz and out icebp jns xor sti movsb ficompl mov jmpq ja jb movsl faddl push or or rex.WR sbb mov mov in adc xchg loope (bad) xor jle mov pushq sub sbb xor movsb (bad) (bad) jmpq out fwait rex.WXB scas je in (bad) pop lret ja test pop mov jrcxz data16 in xchg xchg mov rclb (bad) adc fldcw sub rex.WX (bad) loopne mov repnz loopne loop xchg jle vmovss loopne rex.WRB pop data16 (bad) sahf loopne lahf stos xchg xchg out cmpsb (bad) mov callq iret test jmpq rex.WXB (bad) repnz decl std add jge sbb (bad) (bad) loopne rex.WRX or retq clc loopne rex lock mov stos gs icebp jmp sub stc jo (bad) cli jmpq pushfq mov sarb shl fsubp pop (bad) push fnstenv insl loopne rex.WRXB mov sbb cwtl lods adc add xchg add loopne cmp cld adcl jle out pop sub movabs pushq push (bad) sub sbb push lret (bad) rex.X rex.WXB fcoms outsl loop pop loopne callq (bad) mov or jo jmpq pop fbstp clc add iret sbb js loopne int pushfq cmp xlat in cmpsl shll push xchg jmpq rex.RB (bad) (bad) mov (bad) xor and (bad) push xor sarb or insb scas push loopne jrcxz and loopne jnp (bad) hlt xchg pop callq leaveq loop (bad) sahf test insb int3 movabs movabs pop jne ss and loopne,pn jno mov cmp addr32 mov or popfq pop shrb (bad) jno movabs pop popfq (bad) and shrl in loopne sub push (bad) jl xchg rex.RXB rex.WRX add loopne jno sub imul lock cmp idivb pop loopne cs rex.WXB addr32 hlt fisubl test sbb jmp (bad) (bad) cld adc and sbb gs adc retq out pushq (bad) pop cmp mov xchg cmp scas mov jnp xor mov popfq xor (bad) test callq add in sahf xor movabs pop test sub pushq movabs jnp scas outsb fs fwait in jrcxz adc xor jg mov shll leaveq jg out jrcxz and push (bad) adc cld jmp movsb cmc jmp (bad) mov or add xor in mov rex ds (bad) jge pop rex.RX or cmp fcmove int3 adc jns (bad) mov fnsave xor addr32 (bad) push (bad) jmpq mov mov cmc pop rex.WR adc in rex.WX sarb (bad) xlat cltd mov mov cmp or pop adc stos jbe jns rex.RB retq sub in lea es sbb add movabs scas adc data16 sbb rex.R lock in stc xchg movabs fnstsw gs (bad) iret repnz push rex.RB rex.WX xor shll js in (bad) cmp xorl mov nop mov (bad) rex.X adc (bad) jp sub loopne adc movabs popfq jo sbb jmpq cmp loopne in lods lret rex.B rex.WXB repz loopne movabs hlt fldcw scas jae loopne cmp rex.W ss xchg mov (bad) adc rex.R enterq rex.WRB out repz loopne stos xchg (bad) sub pop mov loop rex.WRXB clc push mov and (bad) xchg subb callq cmp (bad) jrcxz mov xchg pop loopne cmp out out imul mov fnsave and rex.RB je loopne or leaveq loopne mov pop in (bad) mov loopne sub mov loopne (bad) lods test js (bad) lock (bad) cmp mov mov xchg fsubl (bad) movabs (bad) movsb adc cmp jae js outsl repnz fisttpll test movabs es sub sbb (bad) cmpsb mov pop clc adc cltd and out cmp xchg (bad) pushq mov movsb addr32 mov int3 repz insl (bad) fiadd cmpsl jge sub jnp rex.WRB loopne out std jns (bad) (bad) subl hlt mov (bad) test mov in rcrl movabs ja (bad) (bad) sbb in callq (bad) and and pop retq or sbb out fcmovnbe jrcxz jbe rorb xor cmp addr32 (bad) (bad) cmpsl adc (bad) add outsl leaveq rex.W lahf ljmp xchg push orb mov scas loopne sbb out shl jns addr32 int rex.XB sbb (bad) or (bad) cs add in pop je movslq cltd retq rex.WXB push jrcxz (bad) callq sbb in adcl push rex.R push (bad) xor rex.WXB xchg (bad) loopne rex.WR stos push (bad) mov int3 push (bad) add int jrcxz mov rex.XB xor icebp (bad) int xor xchg cmp mov loopne jl pushq outsl and (bad) xor fwait loopne ss fsubrp add int cld scas mov (bad) (bad) rex.WB (bad) xchg jl je in out rex.WXB mov mov repnz sbb lret test rclb loop and loopne outsb rex.RX rex.XB loopne fdivs push (bad) sub (bad) rex.WR movabs loopne push jb xor mov (bad) pushq mov or loopne loop addr32 sub mov adcl loopne popfq rex.WRX rex.WX data16 movabs rex.W cwtl mov push in mov cmp jp retq cli dec (bad) lods mov outsl hlt (bad) cmc jne (bad) pop insl or js (bad) jrcxz or andl pop out lods loop pop (bad) adc (bad) leaveq test scas stc adc rex.WX imul or and scas test movabs insb insl rolb pop pop mov rex.R fs sub sbbl xchg or sub fistp in fmull and sbb cltd and in (bad) xor and mov xchg cwtl loopne insb je mov rex.WR repz rex.WB and adc sbb stc (bad) insb ror test xor and iret loopne add pop mov or mov nop mov (bad) (bad) push adc in (bad) (bad) xchg popfq xchg xor in icebp xorl adc pushq imul in (bad) jle ja pushq rex.WRB imul push icebp push rex.WRXB loop repz mov fisttpll and and vpsrad add (bad) repnz sahf loope mov and or sbb inc rex.WRXB jl test or (bad) (bad) repnz xchg (bad) negl cltd outsl sbb jno rex.RXB pop xlat loopne addl ficompl xchg lock ja jbe clc xor sar jp mov xor stos mov scas in fwait jmp xchg (bad) callq sti mov adc leaveq rorb lods outsb mov pop (bad) push xor loopne idivl jne or rex.WRB adc cmpsb sbbl cltd add test or (bad) fcmovnb mov cld jp jb add mov rex.X (bad) (bad) rex.W lock rolb fistpll fsubrl out xchg jnp in jo or (bad) nop (bad) (bad) fld movabs xchg (bad) cmp outsb mov mov (bad) sahf lods and addb movabs sbb and retq data16 pop cld lret (bad) push sbb add or lahf (bad) outsb cmp in jrcxz addb int int3 push xchg clc (bad) stos cwtl adc cs jmpq or fmuls (bad) cld (bad) movabs out ds repnz lret cli sub (bad) rex.X mov or sbb imulb lret int3 movabs rex.WR movabs loopne cmp sub mov lcall push jp ss (bad) lret rex.RX cmc (bad) (bad) fsubp (bad) push mov (bad) js sub out stos in jmpq jmpq addl subl cmp sbb fdivr loopne (bad) and loopne stos loope in lock incl sub rcl add loopne xchg sbb rex.WRX push xor stos push loope or add (bad) mov (bad) jno stos push sbb loopne js cwtl fisubl enterq add leaveq loopne fadds rex.WRX lods incw xchg mulb fnstcw outsb (bad) (bad) je es rex.WRB movabs sarl (bad) out loopne ficompl pop sti jg nop loopne mov gs retq xchg rex.XB imul fninit in scas adc sub or leaveq fistp and loopne (bad) jns jae (bad) sahf loopne sub pop fdivrs jl jmpq xor cli or (bad) (bad) mov ds leaveq (bad) in stc (bad) xchg (bad) cmp cmpsl lret ljmp repz cmp in jle pushfq (bad) loopne cmp subl test shlb rex.WRX add mov fisttp cmp andb or sar or mov and (bad) loope add pop push loopne sbb (bad) mov stos movabs ror rex.X xchg (bad) loopne test movsl test loopne fs mov out xor enterq (bad) rex.RXB sti fs test fs sbb and mov and cltd pushq xchg xchg xor cmp ja (bad) sub in and mov test (bad) nop sahf fstpl pop es (bad) cwtl xchg jno and loopne mov pop vpcmpgtb fcom jmpq and cmp (bad) scas outsb jg hlt rex.WXB bndldx jl loopne (bad) sbb (bad) jne pop loopne sub xchg loopne nop push add and out (bad) sbb icebp sub (bad) push adc stos test jmpq (bad) (bad) movslq loopne callq sub cmp cld and jnp jo (bad) xchg movabs callq out push add in or (bad) movabs (bad) (bad) sti adc outsb cmp push and add test lahf test jo mov push mov push (bad) movabs mov (bad) push mov pop and push hlt (bad) adc idiv (bad) mov pushq rex.WR (bad) mov in and mov imul enterq in icebp ja retq (bad) lods addr32 rcrb cmp rol add or fdivp pop (bad) icebp mov xlat jbe sub and (bad) jl out test stos mov jns hlt (bad) pop cmp pop insl add out add pushq xor jmpq (bad) mov mov jbe cmpsb xor repz mov (bad) sbb sub clc movabs (bad) jns jge and (bad) rex.RX movups rol xor (bad) (bad) fcomip outsb rex.RXB rex.RXB jno mov retq add jle cmpsl adc sub jge (bad) mov xchg (bad) in xor pushq out (bad) (bad) lock movabs jmpq mov push xor lahf in lods divb lcall or loopne loop (bad) or jbe loopne pop fs cli cmp in mov (bad) test mov js sub xor shl (bad) mov lea stos popfq (bad) out pop (bad) rex.W loopne test pop cwtl sar jb shll xchg and mov sub cmp jle rex.XB cmpsl jo mov pushq (bad) jne callq fmull jl sub (bad) rsm and out sub scas movabs loopne adc add mov rex.RB pushfq loopne rex.WRX lods retq loopne xor imul jo loopne jge rex.WR movabs or xchg clc stos test int3 rex.WRXB rex.WR rex.W callq leaveq cmpsb mov adc rclb hlt out icebp addr32 pushq cmpsb rex.R fdiv insl movabs cmpsl xor xor cmp pop push and je or (bad) jnp push push or sub (bad) out (bad) pushq rex.WRX (bad) xor sub rex.RX rex.WRX and sub ds mov pop pop sbb or mov jg add rex.XB rex.WB mov jrcxz jae xchg clc out or (bad) loopne lods xchg sub mov fstl orl loopne xor lock or loopne rex.RXB xchg clc (bad) jl movabs (bad) loopne retq add loopne xchg rex.RXB pop rex.B xchg rex.WXB vcvttpd2dqx repz (bad) pop loopne jge movabs or shl fist pop push loopne lea stos (bad) mov sahf (bad) (bad) sub pushq loopne mov pop jo retq outsb (bad) lods jrcxz jmpq imul jo xor pop (bad) cmp xlat loop leaveq rcll jmpq mov jo clc mov (bad) pop add push (bad) shr push xlat jmpq cmpsb sbb sbb (bad) out shrl rex mov adc fmulp mov mov in adc test movabs mov or fldl loopne scas sbb mov leaveq rex.RB fucomi (bad) (bad) fisubl gs (bad) mov rex.X jae lock xchg rex.WRB mov loopne push rol adc loope data16 outsb adc jne sbb jl lahf (bad) fyl2x xchg gs insl fisubl jmpq sub jrcxz sub fcmove loopne (bad) xchg test jge loopne sbb lahf outsl xchg xchg mov (bad) xchg xor clc fchs (bad) (bad) icebp fadd sbb (bad) fisttpll push je loopne rex.RB add jmp and mov pop out (bad) cmp pushq (bad) mov or loope fisttpll jrcxz push and (bad) push stos cmp clc sbb rex.WRX in out mov movabs push jp in loopne mov sub je rex.WXB cld sub cmp rorl retq (bad) movabs jb push (bad) rex add add ficomp lcall (bad) (bad) out stos (bad) jb out in ss rex.WRXB shll (bad) ds rex.R jo sub and (bad) lods shlb (bad) add push sbb or outsb jmp adc out jg jbe (bad) ja sbb lcall (bad) rex.RX retq scas jbe (bad) and int mov in in out (bad) retq jl addl pushq loopne rex fs ss loopne icebp mov pop (bad) add sbb test test mov out (bad) sub loopne jle fidivr and (bad) mov mov jp (bad) (bad) loopne outsb xlat retq mov scas (bad) sub andb fistpl shll cmp retq cmpsb roll in out jp sbb xchg or enterq and psubw (bad) sub pop sahf xlat insl (bad) js outsl mov in pushfq icebp rex.R fs shl xor shr loopne add jrcxz (bad) out (bad) loopne int movsb retq scas in imul sub loopne (bad) (bad) push jae mov rex pop fsubp rcl cli roll pop int sahf or mov rex.WRXB rex.WRB push notb cmp xor callq sbb int mov (bad) ss fsub (bad) mov sbb or rclb callq in (bad) loope sub adc cmc sbb (bad) sahf cmpsl mov xor jg movslq fs fwait test lock sbb rex.B movabs pop outsl (bad) push imul and xchg sti (bad) and (bad) cmp int (bad) pop rex.WRX xorl repz rex.X rex.RX jmpq mov cmp iret retq and add pop add cmp (bad) (bad) mov rcrl movslq movsb sub js or xor repz nop sbb lret mov (bad) cmpsl orl mov repz callq sbb ds fs jo jo iret cmp jrcxz (bad) in fs movsl imul sbb adc mov jge cmp pushfq rex jns and iret rex.W rex.RX sub pushq sti rex.RX hlt (bad) pushq mov sbb (bad) jnp (bad) (bad) mov rex.W (bad) (bad) fbstp jmpq push (bad) jl xlat mov rex.WXB rex.WB testl (bad) mov fnstcw pop jle cli shlb in loop or cs stos in hlt cmp loopne sbb (bad) jmpq xorb jl mov rex.W xchg mov xorl sub sub push sti (bad) (bad) rex.WRB subl pushq lods loop or (bad) pop loopne outsb outsl jbe (bad) rex.RX in movabs add jno loopne adc mov cmp jns cs mov ss movntps sub retq loopne cmc (bad) sti jbe adc movabs (bad) (bad) int3 insl and int loopne rex.WRX jne repnz test mov out (bad) push (bad) mov loopne sbb mov lock decb hlt add pop add sub push rex.X mov rex.WXB add rex.WRXB rex.B pop add icebp push outsl mov xor movabs jmp (bad) cli lods pop mov xor test fsubp rex.RB jmpq mov (bad) jmpq xchg mov cmp (bad) sti sbb outsl xchg xchg jmpq cld mov jge rex.W repnz ficom mov mov lods outsb (bad) rex.RXB (bad) out rex.WX lea rex.XB retq iret int mov xlat retq in push jnp loopne adc out jg xor outsb mov out xchg pop enterq loopne mov pop adc rex.RX sbb movabs xor movabs mov add (bad) shl cmp adc lret (bad) cmp in jmpq jae popfq lret test ja mov pushfq cmpsb in add imul mov push repnz cmp loopne (bad) movslq rex.X xchg or sub push in (bad) imul cmp loopne push pop adc mov iret loopne orl loopne rorb divl xchg or sub movslq loopne out jp adc (bad) loopne sbb hlt loopne shlb jge movabs (bad) sub cld retq in pop (bad) movsb pop jp jnp loopne out or adc test rex.WRB (bad) shlb fcomi nop and sti or lahf xlat xchg xorl push mov jmpq enterq retq cwtl imul cmpsb mov jno add sbb sbb (bad) mov decl rex.WRX loopne mov cmpl jmpq (bad) mov and rex.WXB lock rcrl cmp (bad) (bad) ss rclb rex.WX pop (bad) jo sub (bad) loopne pop rex.R xor (bad) loopne out imul out rex.WX fnstsw push jmpq cmp ljmp and loopne xor sub mov mov fnstcw repz outsb pushq jmpq cmp and std (bad) and fmuls (bad) je xchg sub mov push mov (bad) rex.WRXB loope rex.B je sbb stos add mov jmpq sub vpavgb iret and or in mov rex.W or mov js,pn xor sub in mov fsts (bad) add clc xor pushq shrl repz fcmovne add jno cwtl mulb (bad) pop cwtl fs rorl sti pop movabs loopne rex.X ss data16 loopne jae in sti (bad) xchg mov (bad) xor push sbb cwtl xor cmpsl stc mov cmp mov add push mov and enterq cmpsl sub sbb push gs jne lcall rex.WRB (bad) mov fstpt xor loopne icebp and movsl pushq xor test imul (bad) xchg (bad) cmp mov cmp (bad) pop retq push push movabs (bad) loopne lea jle pop cmp pushq mov (bad) fwait rex.WRX in fisttp in outsl rcll clc fmull or rex.B rex.WRXB push add cmp mov psllw in xchg xor movslq cmpsl loopne pop jge pop push and leaveq fdivl fldcw cmp sbb mov mov iret and jne jne and xor int3 mov cmp (bad) mov stos nop loopne pop (bad) (bad) decl xlat sti push add and and lods cld in mov loopne (bad) jrcxz rcr cmp or sub add (bad) cmc loopne stos or loope adc (bad) lret in xor loopne insl fwait push callq mov repnz (bad) (bad) rex.WX add loopne and callq sbb add mov pop or jno or cld addl stc mov sbb lock xchg test add mov (bad) jo movsb adc (bad) loope movsb cmp pop cmp xor and xchg jo loopne sbb xchg (bad) ds out clc and outsb fidiv fistp xchg xchg xchg and jg movabs (bad) icebp pop jl (bad) (bad) mov fwait clc cli fdivs in imulb (bad) js (bad) jns or (bad) add mov cmp (bad) ja xchg sbb not enterq repz rex.WX push mov cltd sub out repnz (bad) in mov pop iret cwtl push loopne shl (bad) mov cmp incl mov xchg mov rex.X movabs mov insl imul xchg cwtl in and jmp lret (bad) in mov pop xor (bad) jp sbb (bad) outsl adc cmp sub jl or (bad) callq cmp loopne or sbb (bad) adc lea (bad) adc loopne rex.XB outsb jno iret loopne pushq pop cli (bad) and mov out leaveq mul int cmp fnsave fmuls jrcxz sub rex lea loopne and pop lods pop rorb fstpt rex.RX mov sti cmp icebp movabs (bad) mov add (bad) rex.WRXB std (bad) mov cmp or sbb rcrb fld or jmpq (bad) sarb (bad) mov rex.XB and pop sbb xor mov movsl loopne (bad) rex.WRB mov rex.WR repnz lods cld (bad) outsl insb (bad) adc div cs lcall loopne scas out cmp sub xor (bad) fsubl xor (bad) sub movsb xchg loopne add imul ror pop and (bad) xchg mov sbb in sbb or loopne pop jge jbe rex loope fsubrl or scas rep and add outsb (bad) mov movabs adc xor scas je rex.WR xchg mov xchg rex add (bad) adc adc loopne push ficoml xchg je lods (bad) fbld push movabs (bad) je push mov movabs cmpsb negl pop out imul adc mov out movsb sahf test add gs jne mov mov retq test xlat and mov (bad) and push fwait jmp adc adcl icebp mov fxch (bad) cld (bad) push retq (bad) mov xor sti and mov sbb (bad) jl push insl cmp rcr mov add (bad) and xchg js mul pop out jb insl cmpsl ror rex insb loopne add sub and data16 loopne pop iret xchg rex.X cmp (bad) mov clc (bad) jnp adc outsb push (bad) fnsave mov notl pop retq add jmpq js pushq and std rcr rex.R push clc (bad) xor rex.WRXB retq popfq fcmovnbe mov mov lahf sub sub (bad) sub rex.RX cmpb pop rex.RXB (bad) sahf in add ja pop or je jb sarl es add push loopne add rcrb (bad) mov in cltd mov sbb in adcl retq mov movabs mov rol js loopne (bad) or movsl add xor push or rex in incb loopne jle (bad) mov cmp push lods ss (bad) adc cmpsl sahf jmpq jrcxz mov (bad) loopne (bad) (bad) and (bad) lret mov movsb scas insl test (bad) pop mov icebp mov in out (bad) pushq sbb movabs cltd (bad) mov in push iret loopne outsl jp fnstsw (bad) (bad) repnz push repz in (bad) adcl rol xor xchg loop fwait rex.W roll adc mov (bad) pushfq sarb imul (bad) xchg lret lock (bad) ror cltd sar stos mov loopne xor movabs rex.W retw leaveq jrcxz xor sub pop hlt outsl fldenv add (bad) mov add data16 (bad) out fcomip loopne add or outsl (bad) mov es (bad) xor rolb pop pushq (bad) loopne je rex.RB in jo cld sub retq sbb xchg xchg loopne lods cs rex.RXB (bad) (bad) adc sbb sbb push push jno rclb movabs nop test repz xor mov mov in (bad) in mov movslq clc xor sysenter jle sbb sbb outsb sarb push or sarl or loop mov sbb std movabs cmp sub (bad) jp loopne jmpq lock sti divps sbb xor rex.RX xor adcl sub add pop push jmpq mov retq cmp (bad) test or movsb incb (bad) (bad) push add (bad) loopne xorl loopne xor (bad) jl ja mov in scas jbe lret shrb pop loopne mov sbb pop mov cmc jle add mov popfq divb push sub jb pushq or hlt adc pushq orl outsb retq mov mov (bad) jmpq retq xor hlt mov (bad) (bad) scas add (bad) sbb loopne fdivs jo (bad) (bad) add in jns jnp out add outsb movabs decl adc retq cmpsl mov jae or pushq mov (bad) sbb enterq loopne data16 mov mov (bad) (bad) xchg adc (bad) sti (bad) fistpl in mov fidivrl mov (bad) push mov andb fcmovnu rex.RB loopne (bad) xchg scas sbb cwtl cmp insb (bad) mov jae loopne mov jg cli (bad) xchg push loopne (bad) leaveq repnz nop movabs (bad) icebp adc pushq (bad) imul mov std (bad) (bad) sub nop rorb cwtl data16 rex.W jnp cmp pop and fucomi mov (bad) xlat xor callq roll movsl test adc mov sbb cld loope mov lret lods xchg cld xchg jmpq std rex.WX rex adc sbb fwait enterq (bad) jmpq orb jnp xchg shrb repz shrl mov mov in or mov rex.W mov sub adcl imul mov jnp pop sub callq mov mov icebp loopne (bad) sbb mov sub in pushfq adc fidivrl adc outsb gs rex.XB cmp sbb mov fisubrl icebp and mov mov xor pushq cmp xor rex.WX outsl mov or test adc sbb (bad) jb outsb xor rex.RX mov loopne (bad) or sbb fiadd jo cmpsl adc loopne xchg xor cli movabs ucomiss (bad) xor and mov jp (bad) jb (bad) mov in and cvtpi2ps nop xor and xchg movslq js vpaddsw loop loopne add xchg roll imul add icebp lods (bad) out loopne repnz add add insl mov cmp cmpsl icebp jg (bad) (bad) outsl xchg icebp movb int3 add loopne callq jrcxz enterq jg adcb (bad) or adc loopne and rex.WRX mov (bad) (bad) stos repz es push and out pop (bad) pushq (bad) xchg mov fnop jno (bad) int fchs or rex.WX (bad) in icebp and movl fisttp jmpq jne movabs rex.WB int add sti xchg mov stos loopne leavew insb jae rex.RXB in movl xchg rclb rcl jmp or enterq xor loopne jmp std mov mov stc (bad) movabs xchg rex.XB addr32 insl (bad) outsb movabs lahf or es xchg mov roll (bad) pushq int3 rex.WRX nop mov rex.WR clc pop outsb fisub cmp (bad) js fcoml mov (bad) adc sbb pushfq repnz push rex.X or mov cwtl nop mov or shrl jl and callq or sub mov jl and mov (bad) push nop fldcw push cmp rex.WXB loopne or push loopne insl and stc rcrb mul gs cmp out xor jp movsl adc int3 pushq je enterq (bad) xor jns rcrb jge pop mov (bad) in mov (bad) adc sub sub loopne nop mov adc cmp jae (bad) (bad) cwtl add loopne rex.R retq outsl insl jbe retq repz fldl rclb test xor adc cs rex.WX test xchg out movsl clc xchg pop clc fstpl mov add rex.WB jg jno loopne icebp (bad) xchg scas in rex.XB cmp in mov pushq imul mov push in loopne cmp and incb cltd shll movabs add xor and or cltd jl sbb popfq movabs rorl cs rcrb xor cmp rex.RXB xchg or (bad) sbb and mov movsl pop (bad) adc xchg xchg or (bad) data16 out mov std pushfq mov rcrb cs (bad) or loopne push pop rex.WRB gs loopne or or in (bad) pushq sub (bad) jle mov in sub in icebp jns ja stos (bad) (bad) test or sarl sub in jrcxz cmp mov stos sbb insl sub test movslq xchg xor adc icebp jl and and (bad) pop xchg (bad) cmp (bad) mov outsl jmpq imul in roll mov pop or imul push psubw mov rex mov xchg rex.WX in lret retq jge xchg in cmp mov sub adc rex rex.RXB shrq add (bad) (bad) lods out sub lock jb rex.WRX movntq cmp sbb push test cld and movabs xchg loopne xchg sahf jns lods int3 sti in jge adc rex.RB (bad) loopne pop (bad) sub add outsb (bad) jmpq and jmpq push loopne (bad) add outsl add (bad) lock add pushq (bad) pop jne out fbld test pop loope retq mov cmp pop adc sbb icebp test (bad) repnz jrcxz xchg pop (bad) sub rex.RXB rex.RB rex.R rex.XB (bad) mov imul adc loopne in subb shrb sti fdivrl lods lret jb cwtl rcl (bad) negb add in sbb (bad) in cmp pop lods rorl jae mov out (bad) (bad) in cmpl jmp and cmp add lret jne (bad) hlt icebp pop rex rex.WB (bad) insb cmc (bad) icebp jne js adc stos adc xchg mov and mov (bad) lock sahf xlat lret mov cmpsb pushq cmp push jrcxz hlt repz rcll rex.RX jrcxz popfq and (bad) (bad) rex.WRX add (bad) pushfq sbb (bad) outsb mov test xor mov adc fwait (bad) cltd pop je insl (bad) mov rcr out jns mov sub fadd rorl leaveq sub subb ja movabs cmpb rex.WR stc fcmovnu push rex xchg mov jo rex.WRX sbb push cmc jno rex.WXB and jo sbb pushq push lods (bad) sbb test mov adc mov push and andb incl pop add pop adc lahf fdivr mov sbb (bad) jmpq and sbb and cmpl scas rex.WB mov lea movabs adc or jge mov mov mov cld movabs int3 mov mov fdiv leaveq jmpq out nop adc loopne rex.WX push lret loopne jno (bad) pop int jge scas movabs rcr loopne adc movabs jmp push (bad) (bad) push loopne enterq icebp mov loopne jmpq pop or test outsl fwait cmp js add rex.RXB jb sbb xor fsubrl fldl (bad) cmp mov or lret mov test fistp and xchg js loopne out (bad) or loopne cwtl sub imul rex.X (bad) xlat (bad) sub incq jl nop in retq rex.RXB mov lods add orl push fsub subb loopne cli (bad) mov shlb xlat xor or and jle stos lret lods stc xlat xchg idivl clc pop (bad) pop xlat cmove or mov and cmp movsl push jnp mov push jge retq pushq add sub test iret (bad) (bad) gs adc (bad) not loop sbb movabs mov (bad) (bad) (bad) mov rolb push rex.WRB or in (bad) jmpq adc movabs sub and sarl loopne mov repnz rex lahf jg fmull cmpsl cmp pushq fwait repz (bad) mov stc icebp (bad) out mov xor loopne repnz insl jne xchg mov gs and sbb jle lods mov je popfq loopne xchg movsl sub jno cmc fcomi (bad) icebp (bad) or loopne hlt loop pop sub movsl jb data16 mov sti fwait (bad) (bad) loopne adc enterq loopne ja sarl sub adc adc adc xchg and (bad) add xchg rex.WRX imul and xchg or js and jo out (bad) nop sysenter movabs (bad) xchg popfq es xchg cmp (bad) lret rorb data16 lock out sbb jmpq mov rex.WR sahf loop xchg movsl outsb and incl sbb jmp mov push sub shr clc pop jns xlat xlat or js movabs pop pushfq lea callq rex.WRXB cmp in (bad) sbb cwtl rclb in pop loopne (bad) movsb add in in add adc cmpsl fmull pop loopne and scas (bad) rol (bad) push (bad) sarl (bad) fs test (bad) out pop add movabs (bad) jno xlat cmpb sub rclb fdivl (bad) mov push rex.XB cmp loopne out sub in pushq out lock mov pushq sbbb push (bad) loopne xchg sbb fcmove add (bad) jns jle or xor (bad) loopne notl fnop rex.WXB loopne (bad) movabs orb sub cwtl rex.XB (bad) movabs movsl jge mov cwtl rcr loopne xchg cmp pushq jmpq cmpl loopne cmpsl (bad) cmp mov (bad) pushq loopne cwtl rex.WRX rex.WR sahf loopne enterq (bad) (bad) iret loopne test fucompp (bad) push callq jle sub (bad) stos adc mov movslq ds mov or rex lahf xchg neg jl adcl cmpsl rex.X (bad) fstpt shrl loop and es or ds sub pushq (bad) mov imul jge pushq jbe (bad) rex.XB xor stos (bad) mov cmpsb loop jl stos xchg (bad) adc int (bad) mov lcall mov fs mov (bad) mov test lret (bad) lock (bad) cld sub rex.WXB fwait mov in loope movslq sbb int sbb cltd icebp xchg and cmc mov test lock test pop (bad) enterq shr rex.RXB stos jge (bad) pop xor jo (bad) callq rorl orl loop (bad) xchg mov adc (bad) clc movabs leaveq fnsave rcrl cltd adc (bad) sbb insl idiv (bad) sbb sbb and (bad) mull fstpl add int (bad) xchg jnp jrcxz pushq jmpq callq and (bad) (bad) xlat xor (bad) faddl (bad) (bad) (bad) out icebp es jno mov cmp fdivr jg pushfq add rex.RXB loopne leaveq decl mov rex.WRXB rex.XB xor ffreep out (bad) popfq adc movabs mov insl xor loopne ss out loopne sub rex.B and mov xlat mov pop (bad) gs (bad) (bad) in clc mov outsb loopne int fisubrl jne loopne (bad) jb leaveq or test sub andb add int rex.WXB jge pushq imul jecxz jp popfq movslq rex.X mov (bad) xchg xchg sbb and fwait push fcomp rex.WX movabs jl push sbb cmp and xchg jp (bad) movabs mov or and jle adc push cmp jmpq jne int xchg retq loopne,pn adc sbbb (bad) js (bad) mov push frstpm(287 lret xchg in cmpsl (bad) (bad) pop jo shll (bad) sbb fdiv or cmp mov movabs mov xor sub sbb sub add mov rex.RXB (bad) or pop add insb outsl sbb (bad) rex.RX add sub or fidivr ficompl rex.RB loopne divl ror lods pushfq in cld (bad) (bad) stc and fldenv sbb xchg adc pop (bad) cmpsb mov loopne (bad) imul or sbb and (bad) jrcxz jrcxz lods movabs (bad) lret retq js (bad) mov (bad) (bad) loopne out adc jns push cmpsl (bad) jbe ds sbb movsl leaveq (bad) pop jge cmp sti test (bad) push movabs (bad) mov repz rcll cmp sbb pop rex.WRX or rex.B mov loopne mov sub loopne (bad) movsb clc callq xchg sub (bad) mov movsl loope sti or push lret add lods and xlat sub rex.RXB xchg push mov cmp or or jbe (bad) hlt movsl fnstsw mov xchg fsub rex rex.X loopne and in divl hlt in movsl (bad) or fsubp xor jne stc mov int3 movabs push mov (bad) jno flds mov or rex.W pop pop pmaxsw adc retq ror imulb in mov sub insb cmc test lret loopne mov (bad) enterq sbb add jmp imul retq (bad) idivb cmpsb movabs pop add loopne fs out in and movabs xor inc orb movabs loopne (bad) stos xchg xor jns loopne clc rex.WRB ds imull jno (bad) mov loopne andl out xlat stc loopne and lret loop (bad) mov jge sar outsl cli jmpq sbb (bad) retq lods rex.WR rex.WX loopne rex.X test cmpsl sti (bad) outsl imul (bad) cwtl push (bad) sub loopne jmp ja movslq push pop rex.RX sahf and jne int out jge popfq push mov iret fsubr rex.WRXB rex and (bad) ja jae push stos cmp repnz adc mov (bad) push xor ds mov mov and mov (bad) loopne sub fwait (bad) mov pushq (bad) (bad) sbb cli pop and sub push (bad) jno fistpll mov mov cmp or rex.WB xchg cmc lret scas cwtl sub loopne insl jp (bad) mov jno (bad) mov cmp repnz pushq loopne xor test fidivl leaveq in jrcxz add out movslq jg fwait cmpsl xlat jbe cmc out xchg adc mov shr std in and mov movslq rex.WRB mov cmp add loopne pop add enterq pop movslq xchg xor lods pop adc (bad) pop or (bad) out (bad) ljmp notl cmp movsb cs in rex.WRXB (bad) rex.WRX push sarb push scas jnp cmp (bad) nop loop (bad) (bad) movslq movslq cmp mov data16 mov cli rex.X fs or jno movabs (bad) xchg idivl insl (bad) je pushfq (bad) (bad) ss mov in lret rex.WXB mov out clc rex.WRB rex.RXB lock xor add pop cwtl addr32 movslq ja jrcxz mov mov mov retq jmpq (bad) pushfq loope or rex.RXB rex.WB cmp movslq xchg or xlat mov fwait (bad) (bad) mov and in fsubrl and rex.WRX je enterq in jrcxz sbb rex.WX sub (bad) adc mov ds (bad) xchg xor and mov ljmp movabs cmp es in movsl sbb out mull lods leaveq imul out push pop mov push or push bnd (bad) jbe rex.RB xchg (bad) shlb out fdivs sarl clc icebp mov mov (bad) and cmp ds rex.WRX js popfq xor pop shrl sbb shlb ja loop (bad) pop xchg repnz jle sbb xchg outsb (bad) and fmul pop xchg callq fisubrl gs movabs mov lea (bad) loopne test fcmovnbe cmpsl add retq xlat mov fidiv xchg cld mov or movabs xchg test and jnp adc movsb xchg gs push (bad) mov ficoml lret jge rex.RB (bad) mov jns mov add (bad) mov sbb ja shrb mov or jo lods mov mov lahf jmpq mov loopne (bad) mov sub cli fs inc add fdivs cmp test loopne fcmovbe mov out stc mov sbb in int3 in rex.WRX jl and nop xchg imul hlt loopne (bad) (bad) outsb add loopne fimul movabs cmp adc sub ror imull out cmpsb sti test (bad) addr32 xor mov rex.X pop (bad) rex.RXB ja (bad) repnz in jmpq cltd (bad) pop fnop mov leaveq movabs imul push rex.B (bad) xchg mov and callq je sub fisubl cwtl cmp or test in jg fisttpl rex.WR loopne (bad) jge jl fstl loopne add pop mov test test and (bad) pop fisttp movabs je sbb cmp outsb (bad) or jmpq roll (bad) movl retq sbb xor and test sub adc jmp mov outsl xlat xorb xor xlat test (bad) sbb sbb jge in and stc jnp out int mov or xchg data16 pushq xlat mov fmul cld rex (bad) lret sub lods add jae rex.WB cli adc mov jp jb adc cmc gs insl (bad) mov and and (bad) xor outsl add movabs (bad) ljmp mov lea fdivl (bad) (bad) rex.WXB jbe (bad) xorl jo out rex.WB cmpsb fs (bad) loopne xchg rorl imul mov insl icebp (bad) jrcxz mov add xor sahf or loopne hlt jmpq loop xchg jg dec outsb sbb shll pop rex.WRXB imul out adc outsl jnp cmp imul mov jmp adc callq gs (bad) rex.W sahf xor sub int3 cmp or mov mov in (bad) sub fdiv xchg rex.WX cwtl stc push (bad) mov (bad) clc pushfq cltd xchg xchg sbb lret (bad) add fadds mov (bad) rex.RX xlat jmpq cmp and fs (bad) mov fistpll cmp xor sub movabs mov push callq add or int3 (bad) jle repnz callq mov fwait pop decl add push rex.WRXB sbb clc rex.WRB fcoms imul (bad) xlat jmpq rex (bad) pop jae rex.WR mov jb imul mov cmp out cmc je pop (bad) callq sbb es jp mov (bad) push incb jp shrl pop (bad) mov rol movabs movslq outsb cmp xchg cmpsb sbb outsl ds fimul jne popfq xor cmp sub rex.WRB cmp int3 (bad) fiaddl stos jg jns fnstsw or in outsb and enterq rex.R rex.RXB sbb mov test xchg lods cmp (bad) rex.R (bad) iret sbb ja (bad) ss (bad) cld lock (bad) (bad) test rex.RXB movabs jb sbb lcall (bad) (bad) and (bad) js pushq out cmc clc (bad) (bad) jrcxz out iret xchg or or int mov lret rex.W push leaveq pop notb lock sti or jl mov jb mov and adc sub int xchg pushq and jle or add cmp mov (bad) movsb shll (bad) pop add pop mov push int3 dec movabs sub push loopne (bad) mov xor enterq rex.W cld mov (bad) movabs xor (bad) retq (bad) lock (bad) push add addr32 adc sbb loopne sub movsl cld xchg rex.RX ds (bad) jl (bad) je push loopne mov adc loopne (bad) pop (bad) xor ja popfq lret adc mov fnstcw in movabs push adc pop loopne rex.RB mov insb sbb (bad) fistpl pushq (bad) movsl (bad) cmovo lods jmpq out test rex.WX lods or (bad) loopne ss jae add rex.X andl (bad) and movb sti dec rex.WX sub sub (bad) icebp cmpsb icebp (bad) rex.R (bad) sahf nop cmpsl (bad) in popfq jne lods rex.R sti rex.WXB movsb imul out rex.W rex.WRXB fs mov retq loop movabs insl add stos fs and lahf in adc (bad) lahf and scas stos retq mov fwait xlat rcrb mov xor sbb push rex.WR in jns cmp js ja jns fistl data16 jnp and insl es xlat push (bad) iret imul rex.WX xor test loop xor (bad) (bad) andl cmc movsb rex.RB xlat add repnz and mov and out rorl (bad) addr32 xchg callq jl mov adc mov andb loopne mov addr32 movabs cmpl pushq cwtl xchg test sbb jmp fistl mov iret retq pop (bad) (bad) (bad) idivb (bad) mov push hlt stos add lock (bad) test (bad) and repz (bad) (bad) mov sbb outsb int loopne sbb push (bad) sbb lods movabs jg rex.WR cli mov sbb outsl sbb or jp and lahf and movabs pushfq and sti (bad) (bad) jnp iret mov lret pop sahf movabs (bad) (bad) fisubrl es es adcb jb mov repnz xchg (bad) (bad) cs sbb pop mov setnp clc (bad) cltd sbb cmp cmpsl (bad) cmpsb out fstpl hlt clc (bad) movsb mov pop (bad) push rex.X cwtl js rex.W add (bad) xor jns shrl pop out in rcr test rex.WRX sahf (bad) movabs pushq out mov xchg mov cld mov rex.X (bad) in jmpq xchg jne add rex.RX lret rex.WRX mov fmul xor loopne (bad) outsb rex.W jge scas (bad) jae popfq popfq and jne (bad) rclb loopne int3 lods movabs sub movabs je xor neg fisub (bad) jmp (bad) out rex.RXB cs cwtl notl (bad) rex.W xchg loopne lods mov mov (bad) test pop rex.XB cmpsl je or loopne pop push jbe imul push xor (bad) sub jmp loopne (bad) push or (bad) fsts and add cld jno adc out mov xchg rex.RXB (bad) or cwtl out or jmpq movabs pop rex.WXB and and rclb push or (bad) mov rex.RB xor jnp (bad) jl mov std movsb retq retq mov sahf sbb and rex.WRXB push push mov push (bad) adc (bad) roll loopne rex.WXB add mov pushq icebp and int or pop adc loopne sub iret in pushq sbb jmp rex.RX (bad) jns cmp jp xor clc rex.R test push frstpm(287 lret jo jmpq or movabs mov cmp jp mov (bad) movabs (bad) adc loopne out pop movsl in jp (bad) and (bad) fsubp rex.RX loopne mov lods cltd jne stos jno xchg lret adc lods (bad) sti cld insl in int3 fidiv test cmp mov stc in pushfq jrcxz movabs (bad) idiv rorl push ja or icebp pop and (bad) mov lea imul addr32 scas pop imul addr32 and sub in or lock rex.WB rex.RXB mov mov mov rex.B jge or repnz xchg mov sti xchg pop int3 sub adc mov lods cmp lret jmpq jg or rex.WR out push sub mov mov pop sbb scas xor repnz lahf mov mov (bad) xchg add pop (bad) repz shrl addr32 movabs cmp (bad) movb push cmp (bad) (bad) add cmp adc lods shlb in sti fsubrs (bad) fcoms or cs je cwtl movabs cmp lret push pop movabs push pushq sbb pushq gs jmpq or xlat (bad) repnz jnp imul callq pushq mov pop mov incb pushq jnp pushq xor fwait in int3 pushq (bad) jg lods test (bad) stc push (bad) xchg callq add loopne and icebp std cmc loop push mov (bad) (bad) movabs iret loope xchg lret out cmp loopne (bad) in mov rex.RXB (bad) xchg movsl xchg xchg xor jns add (bad) pop (bad) jbe out mov loopne decb movsb movslq ljmp adc int3 xor sub (bad) rex.WB mov mov idiv shlb movabs rex.W (bad) cld push xchg cld jns gs jrcxz cs fcompl push or ds nop mov mov loopne cmp cmpsl (bad) fldt cld shr mov hlt (bad) cltd (bad) mov or pop (bad) repz jae cmp roll loopne,pt rex.X movabs pop fwait mov fnop xlat (bad) mov out out push (bad) lock sbb and mov mov rex.RXB mov cltd repnz out xor loopne adc rex.WXB push and and pop loopne push jne addr32 (bad) stos mov push adc lret ss adc pushfq sbb je fcoml jmpq and rex.R rex.WX addr32 rex.R rex.WRB cmpsl (bad) int3 mov imul fildll jl rex sbb cmpsb movabs add (bad) js mov rex.WRX push (bad) jo je mov movslq shl lahf mov (bad) sub pushfq add or loop,pn mov rex.RXB lock push add rex.WB js (bad) or and out lahf (bad) (bad) out (bad) adc mov rex.WRXB loope mov lods lods sbb lret (bad) xor (bad) fdivl add out mov xchg xchg mov stos int ss rex.WR icebp rex.WX pop xor leaveq xchg rol xor sbb outsl rex.WR fcmovu jge (bad) cld sbb jns sub sub mov mov mov fld sub gs int test (bad) (bad) cmc sub pop addr32 add (bad) mov test int3 (bad) mov movabs loopne xchg mov (bad) data16 mov icebp std loopne xor mov loopne scas enterq sub xchg sbb (bad) mov stos icebp or mov ja,pt movslq lret or movabs cs insb fistpll mov rorl loope rex.WB rex.WX cmp rex (bad) hlt ds pop rex.B loopne outsl or xor mov movabs mov fldt loopne scas lods rex.WRXB sbb loopne sbb shl fbstp (bad) cld (bad) clc mov mov cmp rex.X movb es cld (bad) gs movabs mov jno adc loopne and (bad) stos mov (bad) std mov pop loopne mov rex.WX fs mov push rex.RX rex.XB mov scas (bad) pushq (bad) popfq and or push imul callq mov xchg movabs lock cmc test cmpb (bad) mov sub retq je adc mov mov or adc pushfq scas pushfq rol (bad) or push jrcxz xchg inc fdivr add (bad) pop (bad) mov gs stos loop rex outsl jg sbb retq mov movsl scas lods cmp mov movslq and jbe,pn jmp mov shlb loopne mov and (bad) loopne mov in test (bad) jmpq (bad) sub loopne out mov mov mov jge (bad) rex.WX jnp in pop xor insl add or fnstsw sbb callq and int3 mov (bad) pop adc xor sbb icebp shll and rex.RX push loopne mov xchg loop mov xor pop mov cltd push loopne adc vpcmpeqw add (bad) hlt retq sub rex.RB jge (bad) fisubl mov or jmpq jle (bad) callq jge sub out mov cmp (bad) cwtl loopne iret mov pop add movabs xor cli pop idivb mov movsl sbbb icebp scas sbb ja stc and push (bad) jb cmp jrcxz rex.RX add insb movabs callq xor (bad) or loopne sub xchg out stc jmpq fidivl cltd rex.WB lods cmp movsl xchg cld pushq jl sbb std mov mov scas xor loopne ss sbb lret or pushq add loopne sbb (bad) test in movabs xchg (bad) mov (bad) sbb fadds mov adc jle lock mov loop pop in xor sub (bad) enterq lret loopne add rolb mov pop (bad) xchg push (bad) in fsubs or rex.WRB out mov sub rcrb mov add rex.WRX popfq lcall mov clc js rorl in rex.RXB jno lret out (bad) (bad) (bad) fs rex.WXB pushfq mov lahf rolb fwait sti cltd repz and xor ss (bad) adc jle adc loopne in xchg and mov cmp lret repnz loopne in mov popfq sti rex.RX (bad) mov add xchg loopne and and rex.WX fisubr cmpsb int3 cmp pavgb imul stos movabs (bad) mov pushfq cli lock cmp loopne icebp and loopne xor and in (bad) push adc (bad) jne je and lret lods lcall pop (bad) (bad) mov in testb jrcxz add scas movabs push lea scas rex.WRB sbb add (bad) enterq and jae out jne push mov callq cltd pop jl fdivr cmp mov mov leaveq jg sti push and cmpsl (bad) mov fsubs sbb jmpq (bad) lods rex.WX rex.X and mov loopne int (bad) movsl (bad) jg pop pushq lods or (bad) push add movabs (bad) sbb rex.WX mov ffreep movabs insb add loopne (bad) movabs imul imul int3 pushfq jrcxz (bad) enterq jmp push jns (bad) cmp push movslq push in cltd adc jrcxz mov outsl shrb (bad) pop pop sbb lods or push jb adc mov fs push cli iret loopne icebp movabs movabs push or and cmpsb add rex.RB push lcall nop (bad) jne and adc jmpq sub sbb outsl sti mov (bad) pushq in jp cli sbb mov pop or or cli rex.R loopne lret jo js jge loopne or xchg icebp cmp adc xor (bad) cmc add adc loopne rex sti movb in and xchg icebp inc jge out add cmp loopne,pn mov fiadd xor test xchg (bad) and (bad) lods lret cli lcall jne std sbb rcll push xchg movabs (bad) rcll or movabs addr32 retq rolb (bad) imul fisub loopne retq or (bad) out xor (bad) cwtl (bad) (bad) adc loopne jae (bad) ss cmpsl loopne sahf cmp lret cld xor out xor rex.WRB stos lods sbbb mov sub movabs jmpq pop push data16 cmp jne imull rorl xor mov cli (bad) test std cltd xchg fs rex.WRXB in push jb (bad) mov xchg sub jrcxz (bad) mov and (bad) (bad) (bad) callq movabs loopne enterq mov cmp pushfq lret (bad) test loop cmc mov cli mov fildll loopne sti mov jmpq retq cmp jp shrb sub adc and scas callq xlat (bad) push pop fs shl and lods or add (bad) cwtl rex.B mov (bad) pop or add roll fucom cmp fldt (bad) ds (bad) pop push and repnz int pop or xor loopne leaveq add lock out popfq shrb test (bad) (bad) jns psrld loopne xlat in rex.WXB movabs xlat sysexit add mov push test cmp and (bad) cmp movsl xor in outsl cmp gs (bad) in (bad) xchg pop or cltd rex.WRXB xor stos (bad) xchg (bad) lock test and (bad) xchg lea (bad) enterq outsb and jo fsubrs (bad) mov mov sub add retq (bad) nop mov or cmpsl in sub loopne push pushq rex.WRX callq rex.RXB out (bad) (bad) test ja in fmull rex.W lock jrcxz jrcxz pop mov fs icebp bswap test loopne out push clc out add lahf or roll bnd sub xlat movabs or pop loopne (bad) (bad) xor loop test in int3 fcomps sbb stos cli pop sbb movsb lahf stc movabs adc fsubr and mov and sub loop mov decl (bad) jbe in xor (bad) fdivr sub xlat sbb lret fidiv movsl (bad) retq (bad) out in jl (bad) xchg jrcxz and xorl cld cmp sarl or hlt and sub mov adc sub ktestw (bad) and fcmovbe xchg and (bad) neg callq pop stos movsl outsl cmp sbb in cwtl (bad) out push imul xchg leaveq lahf mov and (bad) cmp loopne int3 out mov (bad) movabs xchg in outsb (bad) xlat cmpsl (bad) loopne adc shll jge add repz xchg cmp (bad) cmpsb retq lock callq loopne retq cli loop and rex.WXB (bad) in xor loopne sbb icebp loopne (bad) and clc adc out mov mov loopne in (bad) mov sbb loopne cmp shll cmpsl in testl loopne (bad) sub adc imul idivl mov sbb int (bad) sub outsl (bad) sti movslq mov pop lret (bad) sbb out pop lret fidiv out stos xchg scas sbb rex.WXB (bad) xorb cs add pop (bad) xchg jne (bad) cltd mov sub mov shrb jnp jmp or scas popfq add (bad) rex.WXB addr32 fnop adc fxtract (bad) rex.B loop movabs mov addr32 jge loopne (bad) jne out xchg (bad) mov (bad) lahf loop fs (bad) (bad) imul imul cmp or pop callq sbb add rcrb sahf sbb loope hlt cmpsb xor (bad) jno lahf loopne mov jae adc in mov std jbe (bad) push fild in jno jae sub in retq shlb jns push xor fsubrl rol and jmpq adc add sarb out loopne rex.WX (bad) enterq cmpsb (bad) stos loopne add push shll (bad) imul repz shlb int3 rex.B outsb sbb add xchg (bad) lahf mov xor mov rex.XB adc js shrl sbb pop cmp insl lret push cmc mov int3 (bad) in fldl scas (bad) in push fsubs in mov xchg (bad) sbb adc add sbb mov or fistl leaveq add outsl outsb rex.R (bad) stc retq loopne pop test rcll and jle retq rex.XB mov imul (bad) (bad) gs pop fcmovbe pop out mov jae movabs mov (bad) int mov sub pop pushq add out xor lods (bad) jmpq movsl xor shrb push (bad) int rex.R ja jnp nop (bad) fdiv test add (bad) push rex.WRX cs in (bad) fsubl loopne (bad) cltd in and loope sbb orb je jo xchg movabs mov rex.RXB out nop loopne jge movabs lods rex.XB repz in cmpsl scas adc loopne cltd xchg mov pushq adc mov (bad) lock xchg mov test or adc pushq adc (bad) nop movabs mov (bad) add sub stos enterq adc scas or out (bad) loopne pop rex.WR fs mov imul and xchg jp push je clc rex.X popfq rex.WXB movsl and movabs loopne idivl sahf rex.WX fcom loopne mov lods (bad) loopne sbb movabs (bad) movabs leaveq setg and pop sbb rex.B rex.WXB jnp cli mov cmp cld (bad) nop (bad) loopne jle int3 loope in xchg loopne leaveq mov sbb or loopne callq jg in ds or test iret (bad) stc (bad) jae loopne pop xchg sub ljmp (bad) addr32 icebp sbb adc in sarl (bad) mov and pop loopne adc int3 icebp mov jrcxz add jns in (bad) xchg push rex in (bad) (bad) rex.WX push fs sub xchg out ds pop outsl mov mov jl add cmp sti adc mov rorl xor push fldl xchg clc addr32 sarb nop lret (bad) rex.B (bad) iret loopne test adc (bad) rex.R jp sbb loopne incb pop sub mov pushq (bad) mov xor mov fcomps (bad) loop loopne sbb retq (bad) (bad) es fdivl (bad) mov idivl or icebp stc jno movabs in (bad) mov xor jg in out rolb repnz rex.B (bad) sub cs xchg icebp rex.RXB loopne jl sbb retq fcoml stc lret loopne movabs retq pop (bad) xchg mov ds cmpsl rex.WR rex.WXB loopne pop jo adc mov mov or cmpb movabs nop (bad) (bad) ficoml and movabs jrcxz mov (bad) in sub adc loopne xor (bad) cld (bad) sbb mov jae rex.WRB sbb scas pop or nop loopne and loopne loop cmpsl add pushfq loopne cld push mov adc jne ficoml pushq lods loop mov (bad) rex.RB (bad) xchg mov out clc mov in stos test xchg pop stos scas retq popfq sti and loopne (bad) push pushq rex.RB cmpsb loope jbe mov jno add icebp xchg test loopne int3 test jns jae loopne xor (bad) (bad) test xchg cwtl jo rex.WRXB jmpq jp lret sub (bad) fld sbb ja push outsb and loopne cmc fnop rex.RB rex.WRX mov fdivr (bad) or mov (bad) or pushfq ss lret pop xor push loopne (bad) mov xor xchg mov test sbbl fcomps mov cmp mov lods xchg rorl stos fsubrs (bad) retq mov pop sbb lods (bad) jne in ffreep or rex.RB mov decl xchg shrl or pop push rex.RXB icebp jnp xchg leaveq movabs (bad) in ds and or mov adc (bad) add loopne insb push stos pop sub push lcall stos movabs (bad) push mov repnz xor (bad) push pop cmp lods cmp (bad) fnop out pop imul cmpsb loope loop (bad) (bad) flds push fnop out imul test fnop lods andl xchg mov pop rex.WX rex.RXB rex.X jae ss movabs pushq jo add cwtl sarb rex.X (bad) (bad) rex.RB pop (bad) (bad) adc (bad) cmp mov and pop sbb rex.WB (bad) sbb std xchg test movabs lods mov rex.WRX mov adcb int3 lahf stos retq clc jmp movabs push es loopne push rcll sbb ja loope fadd (bad) mov imul loopne (bad) adc cmc adc mov pop sub pushq mov (bad) cmp bnd pop (bad) loopne push mov in (bad) js sbb loopne lods cltd (bad) in rex (bad) in cmp cmc (bad) and add loopne jle js (bad) (bad) (bad) loopne int pop insb xor rex.RXB pop imul xchg ss loopne mov test xchg rex.RXB adc test lods (bad) stos insl adc rex.WB shrl hlt jrcxz cs adc jo imul clc (bad) mov fstl loopne insl sbb loopne add (bad) (bad) rex lods sbb hlt pop sbb or stos movsb in pop cmp mov js push xchg cld loopne mov adc pop gs mov icebp xchg outsl pop mov test (bad) mov adc pop int3 (bad) xlat pop (bad) and (bad) mov pop add je or adc movabs pushfq xor cmp (bad) js mov add push decl cmp rex.W jmpq mov jae rcrl pop adcl mov andb loop xor fstpl fstpl ja rcl cli (bad) (bad) in enterq pop jmpq std xor out add (bad) jne push xchg rex.WX adc repz retq addr32 (bad) incl rex std fisttp loopne (bad) xor and pushq frstor rex.R data16 loope xlat (bad) (bad) (bad) mov lods add xchg mov (bad) movabs push rex movabs mov pop shl mov push sub movsl or rex.WRB fnstenv loope xor xor movabs sti xchg sub movabs adc push loope jns jmpq xor sub sub or in test pop jns xorl callq in sub adc lret out sbb loopne (bad) pushfq clc retq (bad) movsl (bad) xor sbb rex.B (bad) movsl xor in push jl push sub movb cltd fisttp (bad) jmp fdivr sub fwait movsl (bad) cmp loopne push scas add mov insl repnz (bad) test loop cmp loopne or sarl (bad) pushq and xchg jmpq sti jo mov or push cmp (bad) add sbb (bad) xchg xor xlat (bad) unpckhps loopne addl movabs movslq sub in add ja sub adc int3 js imull push mov std stos (bad) mov jo lret cltd sti movabs jbe (bad) sbb movsl add (bad) out (bad) fdiv xchg in cmc and mov in roll cld divl mov icebp pop mov xlat and (bad) adc insl rex.WRXB stos add mov negl es rex.WRB insb fnstsw icebp (bad) adc (bad) cmp rex jp pop jbe (bad) jns (bad) jmpq (bad) sar lea cwtl out adc push loopne and (bad) rex.XB and mov imul roll push loopne jnp sbb enterw or jrcxz rex.WX insb outsb mov cmpsl mov adc rex.WRX rcr nop (bad) xor sbb loop (bad) push (bad) mov sbb sti jno rex.RXB fcoms loopne xor xor enterq xlat stos (bad) icebp (bad) xchg movslq cmp push loopne or xchg push fsubp fwait and sbb xchg cmp shlb (bad) loopne jg mov lret jl loopne pop es rex.WRX mov and pop in (bad) sub cmp mov scas ja in mov cmc adc loopne rex.WB rex.B mov lods loopne subl loopne adc cmpsl repz mov out loopne mov callq cmp loopne adc lods outsl rex.RXB test fcomi adc loopne (bad) (bad) mov sbb cltd cmp (bad) cmpsl popfq add xor loopne (bad) xlat nop rex.WX gs loopne pop fucomip in js enterq fidivrl (bad) (bad) mov out mov repnz and rorb in shr xorb callq xor sub (bad) sti loopne cmp out (bad) pop loopne cmpsl or movabs sbb imul loopne int cs cmpl (bad) popfq (bad) (bad) (bad) xchg cmp leaveq or clc out in (bad) (bad) fcos (bad) jmpq sub add shr xor and mov loopne loop,pt rex.WRB (bad) movabs test cmp (bad) rex.WRB jne loopne rex add out add (bad) lret cld fsubr shrl test (bad) nop movabs out mov in mov xor in test mov (bad) ss adc scas rex.RXB mov test (bad) xchg xor xor jb icebp or push loopne ja rex.WR in cmp in or movabs imull mov (bad) incl or rolb mov add jp cmp (bad) cmp fs (bad) pop and loopne insb (bad) push (bad) mov popfq (bad) sbb (bad) (bad) rex.W hlt loopne imul fwait loopne adc cmc sbb pop jrcxz push (bad) (bad) sub movsb sahf (bad) rcrl or add fadd mov xchg rex.RX loopne out rex.RXB xchg fiaddl xor xchg cmp cmpsb rorb push mov cmpsl lret push rex.XB (bad) in loopne and cmp fchs ror (bad) cld sbb pushq (bad) fild xlat scas jne rcrb repz loopne ja xchg and push rex.WRB mov loopne (bad) jge std sbb decb icebp lret add sub loopne fs (bad) cmp cltd push ss adc cld mov nop xor pop int3 pinsrw (bad) loope loopne jecxz push adc (bad) push add or (bad) loopne (bad) andl sbb (bad) xchg (bad) jrcxz (bad) sub pop rex.RX (bad) rex.WRX movabs lods (bad) or adc mov (bad) ss (bad) (bad) ds pop sbb loopne out xlat adc push fidivr (bad) mov cmp sub loopne mov ds xchg jb lods in fwait (bad) sub stc stos and insb (bad) mov rex and mov pop (bad) (bad) mov addr32 loopne (bad) fild pushq out rex.WRX fdivrs pop xchg roll rex.WXB xlat jmpq int3 nop rex.X repnz lahf icebp jrcxz (bad) test and rex.WRXB inc add add cmp in push ljmp mov xor stc nop jbe mov out sub sbb jo pushq (bad) or add stos cli (bad) add mov shlb rex.B (bad) sbb loopne xchg jl imul loopne fistl callq sahf fisttpll (bad) (bad) (bad) (bad) sbb mov imul pushfq rorb (bad) imul rex xchg (bad) rex.WR (bad) (bad) je in loopne hlt and sbb rex.WRXB (bad) int or loopne leaveq faddl clc jno mov cmovp push mov jmp jl add or (bad) movsl repnz enterq jmpq orb add xchg mov stos cmp mov out add pop mov movsl add (bad) mov outsb in in out push add or ds pushq xchg (bad) adc in rcr rex.WR loopne mov push or (bad) lods jmp movabs or (bad) push xor mov (bad) pop push sub and (bad) out lods xchg push sbb jrcxz add (bad) xchg mov cli (bad) mov int fs (bad) stos rorl js push in xor add or fnsave lock loopne jo lea mov in int rorl adc jmpq fwait jns sub jb clc nop cld mov cmp fs imul gs retq (bad) adc cmc cmpsb add outsl rex.B test out sub (bad) fcoms or mov and (bad) lret movsl adc loopne rclb test mov jp rex.RXB rex.W hlt loopne mov sbb (bad) sub jmp lods (bad) lahf and adc pop (bad) loopne sbb jnp xchg mov loop xchg adc rorl cld stos cmp (bad) rex.RB mov (bad) jmp rex.WRXB jg movabs rclb cmpsl sbb and iret xchg hlt push xor vcvttss2si int3 loop (bad) (bad) movabs sbb rex.RX movsl (bad) mov (bad) leaveq (bad) and (bad) lret jl cmp pop xor (bad) cmp add test sbb outsb scas int3 pop (bad) xor mov addr32 (bad) add sbb sbb jbe and (bad) pop lods (bad) add (bad) movsb push (bad) shl sub retq retq in pop pushq (bad) callq xlat (bad) cld sarb fistpll lret cmp test or loopne rex.WR int3 jne loopne (bad) sahf mov (bad) mov jge fdivl loopne out push add or popfq faddl jmpq sbb push adc loopne callq mov cmp xchg sbb in shl pop sbb mov sub push rex.WRX sbb scas (bad) (bad) mov sarq stos cmp (bad) insb sbb cmp (bad) ror (bad) jg or xchg rex.R adc test xor in callq push xadd pushq (bad) cmp cmp movabs adc imul mov xor out (bad) movsl mov idiv ds (bad) rorb mov jb jne movabs enterq sub cmp pop insb imul (bad) sub (bad) fdivrs loop or (bad) adc sub rex.RXB cmpsl sbb push xor xor xor out mov fwait and mov mov (bad) fstpl cmc adc rex.WRB mov movabs test xor (bad) add sub jns and and xlat jrcxz test hlt or iret shlb add jmpq sub fs (bad) fucom loope sub (bad) sub jmpq xchg xchg iret out pop cmp cmc pop out sub mov mov xchg mov mov orl pop lret mov movabs pop clc rex.WRB rclb repnz (bad) jge rex.RXB jmp (bad) outsb sbb ja mov stos in leaveq xorl mov or pop rex.WRXB cld jmp data16 imul mov pop mov clc add push (bad) fwait movabs xor (bad) jmpq or andl callq in pop lods push cld pop (bad) and jo,pn test rcl imul retq sbb scas (bad) sbb rex.RB rex.RB xchg repz out adc (bad) ds pop push mov pop xor js jl ja add icebp mov in sub lock adc in mov shlb mov in (bad) movabs push (bad) (bad) cmc push mov mov gs popfq (bad) ds adc add nopl insl and mov xor popfq js xor jb (bad) sti clc cmpsl callq xchg stos cmc cmp rex.WRXB rcl jrcxz gs (bad) or out mov (bad) pop push push (bad) adc (bad) sub and (bad) cmpsb in cmp outsl fbld callq push callq out test (bad) mov ja rex.WRX notl mov cmp jo jmpq movslq rex mov rex.WRX xchg movsb mov rex.WRX orl (bad) add or (bad) rex.WXB adc jae jb (bad) add xor retq cmp rex.WRX loopne add fcomip pop sbb fs loop cwtl (bad) lahf test (bad) rex.RB lock jne movsb jno data16 push pushfq rex cmp pushq (bad) outsl cmc rclb mov addr32 sbb jmpq xchg cmpsl lods xor lods cmp sub mov and scas mov addr32 in mov rex.R lods movsb scas add (bad) jns icebp pop rcrl xchg mov rex.XB test push repz rex.WXB idivl (bad) cmp leaveq vmovntps hlt add (bad) jrcxz (bad) cmp frstor (bad) imul int3 xchg imul movslq and push stos andl mov movsb (bad) fimull cmp (bad) (bad) mov pop out addr32 cmp mov rex.B (bad) in ja in (bad) adc sbb insb jae out rex rex.W cmp sahf cmpsl fs jno loop loopne cmc (bad) rex.XB (bad) mov sahf mov jns pop pushq (bad) xor shl (bad) es (bad) (bad) mov cld fistpll pushq mov mov shlb or add and sub and sbb pop ds hlt and jno mov repnz push adc pop (bad) and sub fistpl rex.WRX scas lahf mov add outsl adc adc addr32 pop mov (bad) je pop (bad) out and in jb outsb adc xchg lock xchg test (bad) mov push sub sbb mov and test iret cmc sub jg (bad) add loopne push int3 jl lods rex.WX adc gs mov (bad) loopne sub in fcomps push rcrb sbb sub mov lods loopne mov push lock sti cli stos or sar or jge jmpq imul ds stc (bad) (bad) jae movabs insb adc lods movabs in sbb mov xor pop xlat sbb insl (bad) mov jmpq callq xchg and xchg ss (bad) mov adc test add (bad) loopne cli in pop (bad) jg cltd jmpq callq mov loopne fldt sti rex.X (bad) fcoms sbb test (bad) jmpq movabs (bad) out and xchg lock scas loopne add add (bad) and out icebp idivb sti sbb sbbb mov in lods (bad) fstps cmpsb cltd pushq rcll loopne push lahf or xor add es sbb (bad) mov mov (bad) mov mov shrb mov rex.WRB sbb adc add mov mov xchg loopne fsts sar sahf mov test mov (bad) ss (bad) and icebp mov sbb adc outsb xor retq add jmpq add movabs loopne jmpq jmp scas xlat sub out std mov hlt int mov pop stos add test movabs add loopne mov enterq xchg xor mov fnstcw (bad) (bad) fisubrl movsl shlb mov loopne repnz jge mov ffreep mov and in rex.WXB (bad) movabs (bad) loopne (bad) iret rex.RXB pop sub push cmc loope (bad) sbb test (bad) loopne fstpt push or loopne (bad) (bad) mov imul mov mov xor jne push (bad) jmpq (bad) idivl test outsl xchg cltd push loopne stc rorb data16 (bad) out ds test orl or movabs mov sbb cmc and (bad) cmp hlt loope rex.WRB push jno adc xor icebp fidiv pcmpgtw (bad) out sbb movabs rex.WRB lret fcmovb (bad) icebp (bad) movsb out xor (bad) testl xchg cli rex.W rex.WRXB data16 (bad) loopne adc lahf (bad) lea in mov pop out jns outsb jo (bad) push fstpt cli sub out add loopne xor icebp xchg frstor xchg mov jge rex.WRX ds cmp sub (bad) outsb orb xorb movsl (bad) loopne lock jae (bad) in (bad) sub xor dec out or int3 popfq add and movabs out ss xchg (bad) (bad) icebp (bad) rex.XB ds mov jbe (bad) in add mov rcrb jb cmp pop (bad) xor adc mov (bad) push rex.WRX loopne sarl js loopne jl xor xchg (bad) movsl add (bad) xchg callq insl scas cmp mov xor add mov stc jae (bad) cmpsb (bad) rcrl push adc cmpl leaveq retq fldenv mov insb rex.WB rex.R rex.WXB callq xor lahf ja addr32 adc movabs js sahf test retq loopne cli (bad) jo shl sub xchg mov shr stos loopne jnp fcompl (bad) cs xor xchg ficom add pop in xor clc lahf mov sub shlb imulb and loopne fs (bad) repnz jmpq pushq jb test (bad) adc (bad) cmp repz mov (bad) rex.RX loopne mov (bad) or sub test and loopne (bad) setae fs ds cmp loopne icebp leaveq (bad) sub loopne (bad) roll push mov add loopne rex.XB (bad) and test cld rex.RB outsl movabs add or xor push test out test std cwtl shr lret adc and sbb (bad) loopne push mov out cld (bad) imulb outsb fwait stos rex.WXB jmp movabs (bad) (bad) fcmovne cmp xor (bad) loopne test loopne (bad) cld sti (bad) rex.WRB pop jb or push (bad) jge xor bnd lock (bad) push pushq add shlb loopne jp jns xorps cmc xor cmp (bad) rex.WRX rex.B rex.X gs fsub (bad) pop shr pop rex.WRXB pop fs mov xchg xchg cmpsl cltd loopne js roll xor add outsb (bad) loop stos lahf mov in movsl xchg retq jno stos out pushq (bad) push (bad) movabs rex.WXB add or fwait nop shl in push repnz cmc loopne,pn retq mulb out (bad) loopne mov mov jo pop (bad) cmp and fcmovnbe andb adc sahf pop cmp (bad) in movslq rex.RB test jg or movabs movsb mov rex.X xor popfq (bad) fwait out mov mov fcoms icebp scas test sahf sub fldt rex.XB fwait add loope sbbl enterq insl jmpq mov icebp data16 (bad) mov js jle and adcl xchg push mov mov loop pushfq cmp lock (bad) jb xor rex.WRB callq movabs sub mov in icebp out sub std or leaveq push xchg jle or out movabs (bad) sub adc mov icebp out (bad) or or xchg pop out adc jmpq push adc icebp loop (bad) movabs pushq movsb or push sbb mov push push movslq adc pop add adc xchg retq pushfq in lods pop jae adc sahf push or or fwait sub xchg rex.WX fxch add orb rex.WX rex.W callq (bad) lret imul movabs mov push (bad) mov ds xchg outsb jbe push test mov adc or mov push mov gs ds (bad) lahf in push callq (bad) push xor movabs mov (bad) ja or (bad) pop fstpt lock sbb lahf push rex.WRB (bad) push lods jno (bad) mov fistpll sub movslq mov rex.RB lods sbb mov sub sbb adc xlat sub imul movsb sbb loop,pt jo push adc stos add cmpb and (bad) outsl loope data16 callq movabs xchg xor stos jrcxz rcll (bad) rol scas ficom loopne rex.WXB mov xchg xchg sbb loopne in movslq cli addr32 movsl std jne clc push movabs mov xorl mov pop sbb adc xor icebp mov out jns lods (bad) loopne ficoml loopne loope pushq movabs (bad) xorl jmp movabs sbb xorl sub movabs fdivs fwait xlat loopne sbb rex.WXB (bad) in rex.X test stos (bad) stc (bad) xor je pop mov jmpq cltd scas pop (bad) loopne jbe jp or enterq pushq rex.RX or sub outsb (bad) sarl movabs sbb cld (bad) jno (bad) imul cmp xchg fwait or mov and add ror (bad) (bad) and movabs push rex.W data16 loopne ja hlt (bad) xor (bad) mov adc jbe ja imul out pushfq (bad) loopne and xor mov xlat subl loop rex.RB cmp jp push rex.WRB (bad) (bad) jle lea pavgw lods (bad) jae adc mov rex.X leaveq jmpq add jle or andl outsl lods shll mov mov out sub pop rex.WXB sub adc cmp fs mov (bad) (bad) in or cmpsl sarb (bad) test xor sbb (bad) incb sub jnp hlt outsl (bad) push fcoms cmp (bad) idivl add loopne add xor xchg mov lret mov lods nop jmpq push rex add in scas mov push lretw callq (bad) lahf out and loopne push sbb cs fs rex.B loopne push out xor (bad) enterq jb xchg mov pop (bad) loopne (bad) (bad) (bad) mov add loopne xor adc loopne mov enterq test sarl (bad) fcmovnbe lock rex.RB sbb (bad) movsl in lea add loopne leaveq (bad) retq jno jmpq xor sub fistl mov movsl enterq test xchg jmpq pop loope and sub (bad) cmp out in repnz hlt mov sbb (bad) test jp cmp adc xchg (bad) mov and enterq sbb xor jo rex.WR stos mov xchg jrcxz movslq loop movsl and movabs pop adc in movsb sti rex.W mov (bad) rex.W rex.R fnstsw rex.RXB faddp mov jo retq sahf jmpq xchg (bad) scas lcall pushq test xor orb and or push mov xchg and test adc shll (bad) popfq fild (bad) (bad) mov xchg (bad) pushq insl clc (bad) incb in mov and rex.X es in pop (bad) adc pop faddp in mov jno (bad) rcrl pushq xor rex.WX jmp jl repnz (bad) adc ds out sbbb lahf (bad) lock pop add pushfq lock hlt ja enterq xchg (bad) movslq cld mov movabs mov cmpsl xchg mov cmpl lea pop sbb int3 add repnz pop push loopne (bad) mov in rex.WR enterq ljmp or mov or add rex sub in icebp loopne add ss add loope or xchg mov repnz callq (bad) mov mov fdivrs js (bad) loopne jle xchg pop (bad) movabs pop loopne sub popfq and rex.RXB jb adc rex.X movabs sbb (bad) cmp add repz std lcall cmp enterq out lahf movabs loopne cmp (bad) je xor add add jo pop and ljmp data16 sbb lret pop mov mov sub mov cmp (bad) fdivs lock ss cmc (bad) or scas xchg (bad) (bad) pushfq xchg int mov lods (bad) cwtl sub in add xor mov cmp retq rex.WRXB fs addr32 (bad) insb jbe rclb cld stos (bad) out cmp (bad) cmpsl cmp jg push sti retq in xchg mov leaveq xchg rex.WR in iret rcll or lock imul icebp lods (bad) retq jo (bad) rex.XB or mov sti xor push cmp cmpsb cmp adc push (bad) pop and fstpt adc jnp retq movabs push and fsubr sub adc pop lret out popfq loopne mov pop mov sahf lods (bad) xchg (bad) sbb push (bad) loopne cld (bad) std in popfq cmc in jl sub rex.RXB loopne mov mov add add leaveq es in (bad) sbb xor (bad) jmpq or xchg std loopne outsb (bad) mov cmc xor loop mov in (bad) (bad) mull xchg rex.XB out sbb js adc (bad) (bad) nop jrcxz (bad) sbb mov fldenv jp push and cltd out xlat in pushfq xor jbe scas pop xchg mov movabs mov loopne in xchg rex.WRB and gs mov cmp int3 xor fucomp loopne push add out xchg shr fwait lret fsts xorb scas loop rex.RX repz mov (bad) repnz loopne adc pop pop loopne sbb fucomi or iret fsubl (bad) jrcxz rex.WRXB (bad) mov shlb incl pushq fxch pop in (bad) orb stos mov (bad) scas mov adc insb enterq in in jp stos (bad) and scas lods cmp mov (bad) callq stc mov jo (bad) scas outsb imul jbe sti adc js out repnz mov (bad) loope in fneni(8087 sbb lahf outsl fcompl (bad) out loopne xchg sahf shr mov mov decl sub fsubrl rex.WR cmpsl loopne test sub xor clc mov fstpt ja mov cmp sahf (bad) xchg rex.WR (bad) (bad) and (bad) scas rex.RX fwait (bad) (bad) (bad) mov cld retq movabs hlt (bad) fstps or xchg movabs xchg xchg fistl pop jp cmp pop xlat (bad) repz loopne movsb lahf xchg repnz out rolb jg mov in cmp jae icebp movsl repnz movabs rex.WRX data16 rex.WXB loopne (bad) int3 (bad) or mov mov add and jo sbb iret js rex adc and xor adc (bad) (bad) popfq mov (bad) cmp (bad) loopne or rex.R hlt pushq in int3 or (bad) xchg lods (bad) sub mov sub (bad) xor outsb fucom (bad) mov rex.R loopne jnp jno cmpsb or in add xlat or callq xlat orb sbb mov xor hlt lahf callq (bad) loopne movabs fstpt cmp jno std retq or mov sarb loopne test xchg adc loop loopne cld popfq movabs sub fstps insb or (bad) add mov (bad) mov xchg cld add fdivs mov retq mul rcrl out xor mov (bad) roll loopne (bad) mov sti sub (bad) mov rex.B cmp mov cmp insl jp jno and lret jg (bad) icebp sbb imul xchg movsb jmp imul adc xchg add adc xchg (bad) jge mov subl imul callq mov pop rex.WRXB loopne iret loope (bad) mov sub and stos insb out pop rorl rex ja mov loopne xchg cli push (bad) pop shl je sbb sbb xor (bad) jne add rex.XB xor pop (bad) test and mov retq or out flds enterq add sbb stos rclb fsubs rcll (bad) rex.RX (bad) mov mov sbb adc sbb ficom sbb (bad) pop sub xor (bad) rex.WX rex callq xchg lahf push sub (bad) test jnp movabs jae adc rex.WX negl mov xor loopne mov sub jrcxz push or and idiv jbe int3 movsl mov (bad) in mov out xor and (bad) rex.RXB jl (bad) pop fimull or (bad) or test rcrb adc add sub sub xchg sbb loopne mov cli (bad) nop sti mov adc cmp je movabs loop loopne test rex.WR pop out in enterq data16 adc sbb enterq fwait mov pop int test std cmp stos push (bad) enterq sub jrcxz imul (bad) icebp pushq pop rex.WB or fwait (bad) std rep (bad) adc in es repz rex.X rcl push hlt imul push retq xchg sbb scas movslq fcomps (bad) rex.WRB rex pushfq fwait in (bad) pushq jmp incb lock xor rcrl ds jns xor (bad) cmp rex.W cmp pushq mov cmp lods (bad) fistl (bad) sbb and pop and int3 in push jne xchg xchg fcomps jns lods (bad) in (bad) sub subl add and cwtl or fwait test ja mov rex.WXB fisttpl rex.RX popfq jnp mov (bad) (bad) xor xchg mov (bad) popfq movabs mov loopne (bad) addr32 loopne rex.R retq lret insb decl movabs fisubl sbb jb cltd gs fcmove in (bad) lods imul pop (bad) in (bad) repnz movabs adc adc loopne insb mov mov sub rex.WXB xchg lods (bad) jns rcll ja adc mulb (bad) data16 xor stc jg add and jrcxz or sbb retq xor lret in mov shl jno jae cwtl xor mull (bad) jmpq push mov or (bad) rex.RXB rex.WR movsb mov sbb push and xor (bad) in lret jp mov (bad) stos in xchg jp icebp sub mov (bad) (bad) (bad) xchg mov jbe (bad) xor xor rex.XB stos (bad) movabs or jle test fcom add rol lcall mov (bad) lret sbb movabs sbb (bad) mov (bad) sub addr32 orl icebp jle sbb adc rex.WRB jg scas mov addr32 ds xor sbb je push test lahf jle out cmpb rorb (bad) mov mov xor and push stos outsb add rex.B in negl xlat movabs jno sbb mov (bad) xchg test test scas adc (bad) movabs in xchg adc mov outsb es (bad) loopne and in rex.WR or xchg ljmp loopne (bad) rex.RX rex.WXB out and xlat movabs jnp callq sub nop rol adc (bad) (bad) movabs ja rex.WX sti fcmovb mov and int3 mov sub cmp je rex.WRX movabs rcl xlat insb outsb loopne xor stos (bad) movsb in insl cmp xchg mov or (bad) std mov loop sahf cmc loope shl rex.W sti pop add rex.WB callq std mov sti sub loopne and js lret mov sub xchg rex.WR loopne add mov sbb fwait ss iret mov loopne cs (bad) and ds lret and sub retq (bad) in add pop and jle (bad) shll out repz push loopne (bad) lahf push add rex.WRB xlat rex.WXB jnp mov loopne adc sbb mov cmp imul fstl xor adc mov xchg leaveq cs push pop mov loop pop add cmp in jrcxz sbb jp enterq (bad) shrb sbb loop mov jnp xlat in scas mov test clc or (bad) loopne (bad) (bad) out in in xchg fwait jrcxz fsts cmp sub (bad) loopne and outsb stos sbb sbb fcoms rex.RXB xchg loopne mov jmpq add and lret and lret cmp add pop push (bad) jp in int3 cmp rex.XB cmpsb xchg xchg movabs rex.RX (bad) or add nop movabs loopne sbb add stos add cmp loop cmp (bad) (bad) in sub nop sbb in imul in loopne rex.WB movslq xchg cmpsl mov xor and subb mov in push test imul sub xchg jmpq rex.WR rex.RB sbb (bad) cmp mov movabs jo cs sub mov addr32 adc (bad) mov data16 es or loopne cs pop pushq out sub rex.WR rex.WRXB rex.WXB (bad) mov (bad) bnd lock nop cmp sub pushq sbb movabs repnz popfq xchg out icebp add push (bad) clc or mov cmp adc stos loopne add out out and mov out cs mov andl xchg loop sbb in loopne pop callq add js loope (bad) lea loopne (bad) and retq and jl xchg movabs xor insl push sub loopne (bad) retq cmp scas sbb loopne mov fs xorl mov (bad) test out rclb rex rex.WB lods jle rex.RX (bad) add mov xchg icebp nop cld scas (bad) xchg fsubs cli idivl cmpsb out mov (bad) mov add push push cmp (bad) jmpq and rex.B ss (bad) adc rex.X adc rex.WB test mov lret jmp and (bad) cmpsl loopne mov rex.WRXB loopne jl imul jmpq or punpcklbw jne out cmp fisttpl push mov (bad) mov loopne (bad) fimul sbb mov jmpq xor mov and and jg lret iret loopne out or xchg pavgb iret (bad) (bad) rex.WX (bad) add pushq jmp decl and enterq lods mov add xchg sbb testb pop pop push sub (bad) jge fadds negb (bad) adc lret cmc mov and mov sbb push (bad) and fwait rolb add test cmpsb loop (bad) scas rex.RX xchg rex.WB shr mov (bad) adc mov leaveq loopne test cltd shlb lahf fwait rex.WR xor sbb int sbb ja jmpq xchg mov pop imulb or push sbb or pushq out (bad) je mov cmp stos loopne push rex.RXB loopne in movabs enterq jo loopne (bad) or add and sbb in movslq sbb push cmp rex.WXB ds push in test jp es subb jnp sbb or lods pop or lock (bad) sti rcr stos imul mov push (bad) rex.XB or (bad) popfq mov rex.W fnstsw jae sbb jbe enterq loopne movabs hlt mov loopne xchg cmp mov (bad) loopne xchg hlt or (bad) js (bad) je outsb loopne out jle pop icebp loopne popfq or mov jbe rex.RXB repz stos lret out jle loopne nop sti rex.B pop repnz lock push jae mov rex.WRB xchg mov push out iret pop rex.XB push (bad) mov jle mov orl jp cmp out test nop incl popfq rex.WRX sar mov and push rex.XB xchg cmpl cli in ror (bad) cmp shrb push and (bad) add insl (bad) ja (bad) addr32 lock retq and fwait mov pop mov (bad) jl in sbb and and mov mov orb retq cmp pop jg rex.WRXB movsb (bad) icebp sbb sub out xor rex.WRB rex.RX lahf (bad) (bad) out int3 (bad) or mov fimul (bad) (bad) rex.B (bad) xor and rex.WR add fsubl sbb sub mov lock repnz mov mov (bad) pop mov sub jge xchg vpminub pop cmc adc movabs jo movabs mov (bad) sub (bad) jrcxz int3 (bad) (bad) xchg xor jo push jbe sbb shrb or adc iret cmp fs (bad) and ffree sub mov adc mov loop (bad) adc out sbb lea pop pop fbld jmpq lea adc callq sub rex.WB mov jns (bad) int3 (bad) pop xchg xor orl mov sub retq pop (bad) outsl mov rex.WRX cmc sbb pop mov add movsl add pushq or rex.W fs and je sub shrl in in sbb imul rex.RXB pop sbb and jg xor hlt imul pop mov (bad) rex.WRX ss cmc (bad) (bad) shlb sub ss gs rex.RX sbb mov sbb decb adc (bad) mull mov insb (bad) (bad) data16 xor test xchg (bad) cmp rcrb sarl je mov mov push fildl add (bad) shl (bad) fsub movslq popfq nop data16 mul sub mov xor pushfq (bad) add pop pushq cld repz repnz test imul imul (bad) (bad) loopne and movslq enterq rex.RB pop mov int3 clc and (bad) repz (bad) sbb cmp (bad) xchg cmp loopne xor jb and test adc stos (bad) jns rex.W rex.WRB xchg imul iret loopne in mov lea outsb rex.WB add pop icebp sahf hlt mov rex.WRB loopne (bad) fldcw loopne or loopne (bad) adc jns movsl fadds (bad) (bad) and (bad) je sub loopne or mov (bad) repz (bad) in mov jo lock loopne lret callq xor (bad) loopne pop iret (bad) sbb xchg loop pushq (bad) sbb loopne in xor cmp add pushq rex.RX rex.XB cmp (bad) sub cmpsl sarl fildl rex.X retq int mov xlat xchg rex.RX rex.RB movabs ja push add fs rex.WX (bad) push es jmpq mov callq rex.XB sub ffree pushq div rex.RXB sbb ds (bad) jnp movsb (bad) jle lock and sbb js xchg out cmp jg xchg (bad) add repz test gs ss movsb adc retq cs mov (bad) icebp rex.W (bad) outsb scas mov (bad) rex.W sbbw xlat xor pop stos clc (bad) and incl cld jg out lods xchg outsl mov or cltd (bad) (bad) stc jmpq sbb loop vaddsubpd and cmp xor loope cmp adc and and adc addr32 adc cmp movabs std movabs add fwait xor roll movabs sbb data16 popfq insl jge iret mov (bad) mov imul test in and iret xor (bad) rex.WR decl rex.WRX ror sub shlb sub adc xchg mov ds roll callq push fmuls movslq jp (bad) je in rex.WRX gs add callq test in and sbb out (bad) (bad) or in (bad) fldenv in pop cltd rex.WX fisubr clc and (bad) (bad) cld mov rex.WRXB or test in cltd jmp jo pushq adc icebp fs and push rex.XB addr32 loopne xchg cmp pop (bad) fdivs outsl pushfq rex.WRX testb jl movabs sahf cld adcl rex.WRXB adcl mov enterq outsl or pop and cld mov (bad) sub movslq sbb add insl retq imul mov jno lcall mov (bad) je sahf (bad) (bad) sub xchg loop jp sbb mov out cmp lods loopne jns jae (bad) lods stos loopne and rex.B frstor push cmc (bad) xor fistpl loopne adc (bad) rex.WX or sub mov (bad) mov in loopne test xor movslq fstpl (bad) shll enterq sbb (bad) add fiadd shll mov (bad) (bad) push loopne cmp outsl xchg roll data16 std jle rex.WR in cltd mov (bad) movslq ds jmpq loopne xchg jnp cmp hlt xlat cmpsb loopne test (bad) fiadd lock cmp pop insb movsb jg cmp (bad) (bad) push add xchg pushq lock loopne mov shll out stos xchg (bad) sbb loopne jo xchg push loopne xor (bad) or sbb loopne rex.XB or adc loop subb pop loop lock lret in retq and rcrl out xor loopne push or cmp rex.WB adc loopne pop rcrb fdivs pop (bad) test movabs push add (bad) cmp adc (bad) (bad) sahf sar sub je test cmpsb sbb rex.WR pushq hlt (bad) or jrcxz mov movabs and (bad) repnz sub sbb sub test sbb std adc cmc loopne (bad) movabs outsb xchg (bad) or jg (bad) pushfq rex.WRX add push (bad) in sub sub rorl cmpsl shl loopne lret mov jle (bad) test icebp or mov js outsb movsl xchg jne (bad) rex.WR adcl (bad) mov jg ja fnstcw outsw shl cmc (bad) loopne sbb mov (bad) jnp rex.RXB (bad) mov mul mov fildll sbb fldt jmpq xchg sub (bad) push sub loopne mov loopne mov fnstcw shrl adc jmpq or loopne addr32 out rex.XB xor or and push adc vmread xor xchg int3 mov (bad) pop lods loopne xchg cmc nop cmp cs ds mov and movsl add mov mov cs sbb add mov in push retq (bad) sub (bad) rex.R xchg (bad) (bad) fwait rex clc sub xchg jrcxz int3 mov shl adc cmp rex.WR repnz sbbb pop add jo sarl rex.RXB rex.X push addr32 xchg std loop jp mov int mov (bad) mov sti rorb in xlat push rex.WXB rex pop cltd cmp xor rex.WR push rex.WRB gs enterq lret fldl in mov out or mov in pop (bad) (bad) mov ss sub mov xchg pop fcmovu mov outsl (bad) (bad) loop rex.WXB fidiv and or sbb (bad) rex.W scas cmp movabs sub pop (bad) xor (bad) (bad) (bad) orl icebp scas xchg (bad) rex.WRXB cmp mov outsl rex.XB retq callq adc mov cs jp bnd jb (bad) cmc icebp loopne sub callq or pop adc cwtl jae in mov gs out xor je fidiv sbb loopne adc imul lahf jmp shlb in int (bad) sbb push and retq psubw sub rex.WR outsb adc mov pop leaveq cmp cmp and fcomps or xor jmpq sbb (bad) clc (bad) out enterq loopne idivl and jmpq mov loopne xchg mov pop in xchg mov orb lods nop fsubp pop mov jb add retq mov (bad) fwait (bad) pop jo push (bad) std ffree push imul pushfq cli rolb xchg imul addl loopne clc fs (bad) fnstsw test xchg lea xor (bad) (bad) mov xchg cmp out stos adc sbb xor cmc (bad) add push movslq (bad) rep jp adc (bad) push stos mov rex.B ds mov adc cmp (bad) fcomip jge jle sbb jbe (bad) repnz rex.RXB (bad) mov fcmovbe icebp insb lods andl add in rep jp rex.X loop (bad) cmp rex.WX rex.WXB adc mov clc (bad) rex.RB outsb jne sahf mov leaveq out gs notb (bad) rex.WRX repnz out sbb pushq xchg jo (bad) testb ds push (bad) jrcxz push imul jnp fs outsb cmpsb fs stc (bad) and sbb callq rex.WB repnz test out push iret (bad) push enterq jae cmpsb movsb test jo sbb jb jg xchg lahf movabs rex.WR and jnp rex ljmp movsl pop (bad) imul and mov callq sub and add pop flds jmpq adc sbb stos movslq (bad) lret (bad) mov cwtl xor and test push (bad) in adc rex.RX xchg iret jbe xor loop (bad) sbb (bad) fsubl rex.RB jge ss rex.WR sbb adc xchg fwait xchg jmpq lods movabs cmc sbb (bad) fstp test add cmp jg jbe xchg xchg or scas adc rex.WRXB lods or xor (bad) fs es xchg jrcxz data16 jg and adcl push jmpq scas rex.X (bad) js (bad) lret cmpsb std adc xchg loopne jmp or sub fsubl fimul jmpq mov rolb mov out jne xor (bad) rex (bad) andl fild jle decb mov imul test pushq and pop xchg jmpq scas mov mov cmc mov in imul (bad) movabs in mov add fcomip cmpsb (bad) callq inc in rex.XB stos sahf imul rex.WRX test callq (bad) (bad) data16 mov (bad) jrcxz hlt sbb popq callq or mov mov jmpq sbb pop fucomi (bad) jb gs test lods xchg js cmp retq sbb or mov and mov callq pop jmp cmp loopne movabs int (bad) and xchg lret stos sub out sbb jne (bad) je cmp scas rex.WXB mov stos (bad) (bad) enterq clc in or rorb gs movabs lret jae testl xchg mov rex.WR lock xor and (bad) lock cld and movabs rex.WB mov mov flds repnz push shlb in sbb mov out callq adc jp in out (bad) sti mov adc cltd xchg cltd push push mov test or (bad) fucomp rex.WRX jmp (bad) fbstp adc mov fbstp scas movsb mov rex.W lods add jae not rex.WRB loope cld sub fidivr sbb push (bad) loopnel callq test (bad) lea test loopne adc shl pushq sbb hlt fs sub sti pop std test rex rex.WR rex.RB repnz es mov and push sbb dec cmpsl insl jl (bad) (bad) xor sahf jne (bad) test push lahf sub push (bad) sub int3 callq mov loopne cwtl (bad) test pavgb movslq pushfq push lret and jns (bad) mov (bad) cmp jb xlat lret fucomi cmp rex.WXB retq (bad) sti mov test ds in test rex.WR or mov cmp and (bad) scas jmp mov pushq jp (bad) xlat rex.WX (bad) rex.RB push xlat addr32 sbb rex.X xchg add (bad) cld mov cltd sarb (bad) jmpq push add add mov rex.RB iret (bad) in (bad) scas sbb outsl or loopne xchg sahf sbb in loopne mov lahf sbb rex.WRB repnz (bad) movsl push rex.WX shlb retq add jle cltd (bad) xchg xchg (bad) movsb add jg rex.WX rex.WRB rex.WRXB push loopne div (bad) fs fsub test (bad) out add test retq lods lock hlt rex.XB fs rex.WRX in adc in lret and stc (bad) fdivrl loopne stos and sub push (bad) xor loopne cmpsb xlat icebp and repnz (bad) sbb rex.RB sub (bad) adc lret (bad) rex.WRX jmp add fs loopne sbb (bad) mov int3 xlat loopne movabs retq (bad) sub fiadd and out mov (bad) mov rex.WX xchg xor retq or (bad) out or jne sarl or fs repz sti movabs (bad) loopne cmp pop (bad) (bad) sbb adc repnz (bad) loopne cmp lea rex.RXB lock and rex.X lret clc rcl xchg mov repz mov test adc mov loopne push add out mov and movsl loopne push mov movsb (bad) jae rex.WRB rex.X add loopne int3 clc xor (bad) std shl test (bad) movabs rex.WRB fwait pop (bad) loopne rex.XB int popfq or in mov cltd test push sub and cli (bad) mov loopne lods add loopne mov enterq jmp movsb mov rorl push imull loopne mov sbb or test mov mov fs mov jno je loopne loope xchg rex.RB pop or stos js add mov sub sbb cmp in pushq cltd stc add (bad) rex.WRB mov mov (bad) and lea js xchg jmp movsl mov jo sub rex.X xor xchg jmpq sbb jg lahf or jl sub (bad) xchg cmpsl retq int3 add rex.R sarb push ja push retq fisubl jbe rex.R and pop rex.WRB jo mov fwait cld js (bad) subb retq hlt sbb xor cli cmp (bad) sbb icebp lahf sub fmull push loope lret mov cmpsl rex.WR add mov rex.WR repz retq rex.B pop fwait mov loope,pt sbb stc rcrl test jo (bad) sbb jle imul xorl mov loop movsl adc fwait clc jne callq movabs add loopne jbe cwtl rex.WX repz je lea mov dec in test out nop (bad) in cld es (bad) and adc and mov (bad) cwtl xchg lret (bad) cmp lea mov sub ds sahf jae (bad) in loopne jns xchg repz fistp or callq jne (bad) hlt rex.RXB (bad) jne add sub lods rex.WB (bad) xchg add (bad) adc test in pushq xchg jno xor std outsl movsl add loopne adc sbb (bad) (bad) mov push decl sahf gs je outsw rex.WB mov cmpsb ss pop outsb (bad) jae (bad) cmp out gs cwtl (bad) add (bad) fadd jle imul xor cli loopne out movabs in test flds stos (bad) lock rex.WRB sbb mov subb or adc sti out (bad) sbb fisttp jmpq callq xchg scas xchg loopne jmp sub pushfq lods callq loopne mov lahf (bad) mov jns (bad) insb gs fwait sub and cmc in sbb retq pop movsl xchg mov and cmp std vmovntdq imull faddl fnstsw movabs mov out jbe (bad) (bad) out gs out (bad) loopne (bad) fdivrs cmpb and movsl push jle xchg and loopne xchg (bad) cmp loopne cs add callq pop rex.RB jl test (bad) pushq rex.WB and (bad) cmp cmpsb (bad) test loopne push rex.X (bad) int3 (bad) fcoms mov (bad) ficom int movabs xchg loopne sub retq rex.WRXB nop xor add jbe out loopne rex.W adc sbb in xor int rep callq jrcxz mov add (bad) xchg out pushfq add loopne cmp adc gs sub imul cmc rex.WB orb push lcall mov repnz rex.X in rex.RX repz movabs xor add jbe imul retq rcll outsb jns push push jo roll mov enterq sub xchg add nop jrcxz sbb jge mov pushq xchg mov jo cmpsl sbb (bad) negl mov xchg fld mov sub or (bad) movslq sbb outsb lods (bad) mov mov rex.WRXB adcl jmp cmpsl pop sub mov rex.XB lock jle loopne clc push and adc rolb pop pop nop ss mov mov and imul pop (bad) jmpq bswap rex.R add xlat mov xor (bad) jp ja (bad) pushfq fidivl sti adc sahf loop (bad) jbe fsub fwait retq sub loopne mov and out pop loopne movsl xchg fimul xor sbb (bad) rex.WRX xor sub jno (bad) mov sti sub sub rex mov repnz push push shl jrcxz xor and jp in adc in cmp jge add loope scas mov sbb and adcb cmp sub cmp push imul pavgb xor and pop loop lret lods and (bad) pop hlt add stos inc cmp outsb mov sbb xchg gs insl negb mov retq nop xchg mov pop lret repnz movslq (bad) ficompl addr32 xlat cmp or (bad) loopne rex.RB xchg hlt rex.B mov movslq pop adc loopne sbb (bad) lods loopne mov pop adc cltd ja (bad) mov (bad) leaveq incb out loopne pushq lods jp in loopne cltd sub rcll fchs cli push rclb fwait and cmp loopne lods mov (bad) movabs leaveq idivb scas jbe in rex.WX xchg rex.B test ficomp loopne pop andl and rex.WR sub push (bad) add (bad) lock jbe (bad) divl sub out stos mov movabs scas ss or rex.WRB test imul (bad) pop inc mov (bad) popfq int3 ss (bad) xchg loopne (bad) scas jae (bad) loopne mov addr32 popfq add in ja sbb mov (bad) push sbb gs sub (bad) ds sarb mov lock loop mov or loopne or ds sbb adc mov lret imul insb or pushfq test jp sub lahf (bad) and movsl leaveq (bad) add loopne xchg jge in mov add (bad) sub adc sar jmp leaveq loop mov rex.B popfq add xor fldl2t add mov imul rolb cmpl xlat (bad) xor or xor cld (bad) pushq notb loopne stos in in adc rex or (bad) jrcxz (bad) or mov ja jg (bad) jl mov rex.WRB imul loope cmpsb test pop sub and xchg enterq (bad) loopne pushq test in sub js mov jrcxz sbb push jp leaveq in (bad) scas sbb js or (bad) (bad) movslq out pushq enterq jns (bad) js pop (bad) in sti cmp (bad) icebp and rex xor (bad) in mov xchg fisubr retq adc pop movabs lock jb loopne es in out and jbe pop mov xor push out lcall in mov xlat addb scas add ds loop lock (bad) std mov cmp movslq mov loopne (bad) lret mov neg int3 loopne or (bad) out cmp mov loopne xchg (bad) stos (bad) mov out (bad) in or pop cmpsb pop outsl jl sub jmp jbe loopne fs sub movabs imul (bad) cld push imul stos outsb (bad) push xchg cmc (bad) mov cmpsl or std rex.RX (bad) data16 icebp test rex.WRX or ja lret (bad) shrl rex.WR fxch jns sar sub loopne add rex.RX pushq cmpsl xor (bad) js and cs and sub adc (bad) retq xchg movabs fwait rorb movabs mov jbe cld mov push in ja jno loopne (bad) callq int divb je xchg sub cmc test push (bad) and push flds retq adc fucomi lock (bad) cmp mov (bad) test jbe jg jo test xchg int outsb fdivrs test and sub sub (bad) loopne test or (bad) andb jno (bad) rex.WR (bad) loopne hlt jb (bad) lahf fidivrl adc (bad) jg mov cltd mov and xchg cmp ja rex.WX shl stc test add and sti clc sub jne leaveq push rcrl pop (bad) scas sub movabs rcrb push cmp cmp and xchg loope lret fcmovbe mov or mov icebp mov push and mov nop loopne rex.WB out vandnpd (bad) adc (bad) loopne or callq sbb xlat sbb (bad) movabs (bad) cmp jg addr32 (bad) repnz jo xchg repnz (bad) jo jae out mov (bad) and loopne sub test pop mov sbb sub xchg mov mov out jp stc jmpq pop (bad) andl cmp mov (bad) cmc int and (bad) and xorb test or enterq jno pop sbb rex mov jle jmpq add repnz sbb (bad) (bad) mov fwait in movabs loopne rcrb int gs mov jrcxz adcl mov push (bad) movsb (bad) nop scas or cli rex.B (bad) clc (bad) mov sar rex.R jmp rex.X jnp repnz out test cmpsl loopne (bad) neg shll mov xchg jno rex.WB lods push lea (bad) (bad) movabs mov pushfq jg out lahf (bad) icebp nop push in loopne gs cld xchg pop pavgb (bad) xor loopne cmp jg loopne (bad) xor lods or imul std shlb cltd (bad) mov xchg add add fbld xlat cmpsl int3 loopne ja pushfq adc clc test movsl scas je xor and rex.WX or movabs push shl xchg mov loopne rex.WXB push jne callq (bad) xlat insb (bad) sbb vpsubd xchg gs and jle mov xor xchg pop or xchg or (bad) adc or loopne xchg rex.WXB and movabs pop loope cmpl sbb outsl xor cmp jno mov ds adc repz mov (bad) xchg mov adc lock add shll (bad) rex.B cmpsb mov gs mov pushq jmp cld movabs mov popfq stos pushq and (bad) add test (bad) or rorl lret add (bad) pop mov lret fmull cltd adc leaveq (bad) popfq loopne icebp (bad) rex.RX xchg sub push popfq adc lods loopne push rex out cmpl stos jrcxz (bad) xchg cmpl (bad) enterq pop (bad) cmp loop xor callq rex.WRB rex.WRXB adc or nop ds mov adc shlb notl rex.RX fldenv andl push (bad) pop push and loope mov adc rex.R xchg mov mov movabs xchg in in sbb cmp adc callq sbb jl rex.B ja in retq jno addb lret sbb stc rex.RXB in push movabs (bad) and pop outsb mov add fdivs cmp insb lods mov ficomp in lock pop (bad) loopne repnz addr32 fimull and es pop loopne sbb fistp notb rex.WX cs loopne movabs lret cs xor data16 sti sub nop setp scas jp jrcxz (bad) xor (bad) movabs andb xor push insb jp (bad) leaveq push xor (bad) sets add jbe loopne xchg (bad) or loopne icebp push cmp cli xor loopne nop mov in loopne js retq mov stos xlat pushfq sahf imul loopne (bad) pop push mov pop mov (bad) es loopne cmpsl insl and psraw rcl cmp and xchg fisttp test sti in cmc adc jo hlt (bad) (bad) mov movsl leaveq and scas sub (bad) pop outsl jns rex.B test out pushq adc xchg sbb xchg stos pop or adc icebp (bad) cs fisubr jmpq pop ds outsb rolb callq and push add cmpsb rex.WX and imul (bad) loop adc add mov cs rex mov and loopne stos enterq (bad) fchs sbb out outsl adc sbb mov hlt sub (bad) scas (bad) and lods xchg fisttpll loopne add and (bad) xor retq fsubrp adc xlat loopne rex.WB rex.RB fs rex.RX rex.WRX (bad) or (bad) cmp rex.XB fwait (bad) leaveq sbb xchg cli cmp cwtl loopne xchg bnd jl loopne popfq mov adc xchg rex.WXB xchg (bad) pop ds xor sub sahf (bad) mov mov loopne add or mov xor stos loopne in test jge xlat int callq (bad) stc xchg loopne sub fidiv jns mov (bad) in and loopne retq negb mov rclb (bad) callq rex.RX in loopne rex.X rcr add movsb int3 (bad) (bad) (bad) sub retq jmpq loop rorb rex.XB pushfq cmc loopne callq (bad) mov jo rex.WX and cmp cmp loopne and (bad) cltd loopnel (bad) mov scas xlat (bad) test jmpq outsb repnz loop adc movabs push (bad) or movslq icebp jno loope out (bad) rex.RB xchg insl adc (bad) push jp (bad) jnp js cmc jge in (bad) fcos rex.WRX pushfq popfq rex.W xor or callq ficom push imul retq repnz mov decl (bad) mov sbb (bad) (bad) jmpq lock adc (bad) xchg rorb xchg (bad) pop test pushq lock (bad) lock fwait mov jle stos jns (bad) cmp or or movabs (bad) (bad) fcmovnb push (bad) lods addr32 cmp stos (bad) push xor (bad) notl jrcxz jmpq loope mov fs sbb (bad) xor lret push outsb rex.WRB (bad) cmp rex.WXB outsb iret (bad) xchg in rex.W lock in fcmovbe nop jns pop sti cmpsb shlb mov jg cmp or pop hlt (bad) rcll addr32 add and (bad) loope adc (bad) jae int rorb test test rex.WRXB rex.WRX xor outsb decb mov or rex.RXB movabs or movabs (bad) stos lods jle xor loop data16 jrcxz fidivr (bad) shlb enterq insb mov pop (bad) xchg jg pop xchg stc (bad) fs ss fwait (bad) outsw mov jp int sbb (bad) sti orl fnsave pop pop pop icebp jbe adc xlat push addr32 sbb and pushq cli cmp sarl test and mov mov add pop retq and sbb ljmp vmaxsd out rcl cmpl jae stc xchg mov loopne movsb orl pushq xor and sub pop loopne cmp lret sarl (bad) fdivrl enterq loopne xchg ficomp push ja xor xchg int3 negb loopne (bad) jg push lret (bad) sbb pop mov jne fstpl rex.RX and cld loop xchg (bad) rex.WB add lret cmp int3 stc mov (bad) lods mov mov subl clc xor in jle fmull je and stc (bad) add mov cmovns loopne mov jns push jb cmp rex.X fs imul lret mov pushfq nop outsb sub push in (bad) jmpq or (bad) push (bad) push cmp mov (bad) lahf add loopne popfq repnz insw fwait loopne (bad) mov (bad) (bad) fs outsl movabs rclb (bad) gs cli loopne xor and test test rex sub scas jp xchg (bad) (bad) adc jnp rex.WRB (bad) jmpq push test (bad) mov insb cmp (bad) cmc in stc pop jbe lret repnz shrb (bad) sahf je in (bad) and (bad) sbb adc adc xchg rex.WX cmc xor out add data16 mov adc or or and sub pushq pop mov sbb stc jnp sarb stc mov push sbb retq add int3 (bad) sbb retq cmp in sub (bad) loopne push or (bad) mov jns movabs mov jle mov cmp lahf sub rex.XB or lret in xchg (bad) out rcll jb movabs pop outsl fucomp xchg rex.WRB cmc roll rex repz icebp in movslq outsl (bad) pop cmc adc cmp (bad) jle js ffreep push rcrl scas jne fisttp hlt loopne and sub jns and add pop ficomp movabs js cwtl mov fcomip or push (bad) cmp jle lahf sbb rex.WRX callq insb callq iret sbb sub or mov xor cmp push sbb addl pop out rorb (bad) adc mov test neg jg (bad) (bad) fnstsw jbe adc adc enterw movsl mov in gs fwait fs jns punpckhwd rex.RXB sarb lret stos int push movabs nop rex.WRXB rex.WRXB rex.R lods fwait mov mov (bad) cmc (bad) (bad) mov (bad) out (bad) jbe pop pop je sbb (bad) sub mov and out (bad) jmp cmp js xchg fidivrl (bad) jle sub scas xor enterq mov and pop js sbb (bad) jmpq mov adc jne sbb push or mov xor sub jo cmp mov sbb sbb movabs adc clc and adc out (bad) loop mov pop xorb rex.WXB (bad) mulb (bad) adc clc int push imul lods incl pushq (bad) pushq pop add rex.WX loope sbb (bad) sahf fucom sbb (bad) sub jb jno (bad) rex.RXB rex.WRXB (bad) rex.WX movsb mov rex.W ss mov add sub xor (bad) sbb pushfq jns adc ja movabs cltd ds (bad) mov mov xchg outsb mov jmp (bad) sub mov int3 jb cmc jp xchg scas sarb gs xor stos sub jnp movsb in icebp (bad) cmp addb (bad) fstpl test sbb add jg (bad) fdivs mov orl cmp fstl xor rclb (bad) imul test callq repnz sbb insl xchg (bad) out push test sti (bad) shrl (bad) test in mov test mov cmp xor hlt sbb jbe sti movslq jmpq cmpsl repnz rex.WRXB pop push sub or (bad) mov xchg (bad) faddl insl fisubl (bad) xchg push pop (bad) rex.WXB fwait jg hlt mov and mov lods in jg jle xchg push (bad) (bad) mov mov int3 and in add push imulb out sbb rex.WRB rex.RXB sbb addr32 pop test pop (bad) adc fs jns (bad) sbb xor sub rex.WRX jmpq jne pop out push cltd jg jle jb mov add scas (bad) (bad) and adc or sbb movabs (bad) xchg adc insl cmc loope (bad) xlat hlt mov (bad) rex lret addr32 or test push mov (bad) adc movsb xchg out adc fsubs lahf test pushq or rex.WX imul sub fs rex.WX (bad) pop push add adc (bad) sbb jrcxz (bad) jl xchg loope in pushq lock enterq sbb rex.WRB int3 xlat push sahf test rex.WX sti pop icebp add mov movabs mov (bad) rex.WB or cmc sub (bad) loopne rex.W pushq loopne cli in sub mov jbe pop (bad) add add outsb loopne bswap (bad) jmpq bnd sbb loopne rex.RB clc cwtl (bad) adc add (bad) cmp ds (bad) xor adc (bad) pop lods hlt sbb movabs ficom movabs or test loopne pushq or cmp adc (bad) loopne (bad) xchg nop jbe lahf jg xor popfq xchg (bad) mov pop jnp roll movabs rex (bad) sbb loopne jl lods or rex.W loope xor cltd pop vandps loopne repz mov roll loop cmpsb std (bad) jp push (bad) movsl and sbb xlat pop retq movabs lock sti rcll and rex.WX clc rex.WR movabs pushq or or mov rex cmpsb or sti rex mov cs (bad) js outsl movslq loopne adc rex.XB mov out sbb sub mov (bad) icebp (bad) (bad) enterq imul jns xchg add (bad) cli fild (bad) imul test in pop fnop lea icebp (bad) scas rex.B movslq push add (bad) (bad) cmp and popfq mov pushfq pop xchg sbb (bad) fistl decl and push jo movsl ss nop cmp (bad) loopne cmp xchg xlat loopne (bad) (bad) mov sbb outsb push jmpq rex.WB push sub jp adc retq add movabs pop and and in (bad) outsb (bad) andb pushq clc insb rex.WX add xor xlat stos in xorb test cmp xchg in mov sbb pop loopne rex.RX or xchg add (bad) (bad) mov data16 loopne mov loopne mov lret push roll orb mov outsb jge (bad) cmp jle and shl (bad) and fisubl in (bad) cltd popfq shr pop mov loopne je jp mov fcoml hlt shll movsl or sbb adc loopne add out in loopne mov rorb es mov scas movabs out rex.RX add jne std sarl xor jb in mov cmp addr32 rcrb rex.WRB fstpl shrl xor and out jl fisubl addr32 (bad) hlt loopne sbb rex.WRXB xorb clc in xchg rex.X popfq and (bad) negb (bad) (bad) hlt rorb push pop (bad) loopne ja sbb mov (bad) (bad) (bad) push es js (bad) jnp rex.WRB loopne in jo and xor cs jno rex.WR loopne cmpb stos movq or callq mov mov jb adc fsts and out stos sti jb and (bad) jae stos jrcxz incb js jns callq retq outsl rex.WB jg es pop cmpsl pop sub mov fwait sbb xlat push cmovno movslq jmpq lret adc (bad) retq addr32 (bad) mov (bad) insb fildll (bad) sub in icebp jle add imul and pandn jg pushq (bad) (bad) (bad) mov jo int pushfq sub add (bad) pushfq push cmpsb jge ss (bad) pushq rex.WRX sub rclb sbb lock jae (bad) (bad) repz data16 jl push out rex.WRX addr32 movabs and and lock rex.W fwait scas pop sbb pop adc pop sbb push lock xor cmp mov mov outsl jg mov cmpsb loop sub push retq sub repnz in icebp sub cmp or and and callq lea jb (bad) sub test loopne (bad) and adc xor mov xor jb sbb jbe ja insl xchg loopne rex.WRX pushfq (bad) testb cld loopne fsubs fnop cmp or mov rex.X or mov movabs jne setae xchg int and imul xor leaveq (bad) hlt loope mov xor imul push cmc stos or sub jmp stc loope xchg mov sar and fbld (bad) (bad) pop xor (bad) cmpsl loopne or test xor out cltd (bad) pushfq add fs (bad) xchg (bad) sti lods rolb (bad) adc xor mov in sbb leaveq mov rex.WRX cld sti sahf and (bad) rcr (bad) (bad) pushq frstor (bad) fucomi cltd sbb add pop loopne (bad) movabs xchg int sbb (bad) jno pop out mov sbb mov lret rex.RB mov xchg add jb rex.RX xchg out push loopne mov fisubrl adc jb (bad) movabs sub xchg mov sbb xlat movabs fisttpl cltd rex.RX cmp test xchg rex.WR adc pop jo rex.B in jns fistp mov sub add fnstsw rex.WRXB (bad) repz pop movabs rex.WR ja loopne (bad) xchg (bad) enterq add adc add push jmpq test (bad) stc fptan mov movabs mov lahf (bad) vpsrlq icebp out add xchg mov (bad) pop xor add (bad) sbb jp cmc rex.WRX fs or add jmpq jg retq lods jnp loopne popfq and loopne or shl jmpq xchg gs xor subl and rex.WB clc loopne (bad) jnp int jbe loopne (bad) rex.WXB rex.WRXB idivb xlat jrcxz movabs and (bad) adc (bad) jno je (bad) adc or (bad) push jp (bad) sti loopne cltd and xorl callq shr leaveq fstpl loopne xlat iret nop shll rcll and xchg outsb (bad) loopne push xchg (bad) cltd mov test insl loopne jne cwtl callq xor movabs insb icebp or imul lods mov cmp rex.X (bad) repz (bad) push jp loopne jns mov mov mov icebp and (bad) adc add mov adcl mov push add out int loopne shl xchg rex.B jmpq faddl sti movslq (bad) clc cmc and or mov add addr32 and sub shr (bad) or jmp cmp movsb movslq sbb callq jg cmc rex.R lock sbb (bad) add shl pop hlt mov jmp or cmpsw pop or (bad) (bad) adc je cmpsb pop push mov (bad) cwtl mov rex.WRX push (bad) sbbl ffree pop and add leaveq sbb xor jns xor sbb sub sbb rex seta rex.X jle mov mov repz sub mov (bad) pop xor xchg xor mov sbb (bad) stc jg xchg (bad) lea mov push (bad) rex.RXB lock (bad) pushq rex.WR lods adc mov sub stos in movsb xchg rex.X enterq imul addb pop jrcxz mov push (bad) rex.WRXB xlat cmpsb insb in add pop pop ss sbb (bad) cmp leaveq (bad) in rex.WRX movsl iret lret jae mov add jbe pop cwtl (bad) shl jnp jp (bad) callq loopne ror fwait in rex.WRX divl sbb push iret cmc (bad) jle roll jae jns loopne (bad) scas push test (bad) xor mov (bad) pushfq cmpl or xchg iret pop add pop add stos cmp sti out icebp rex.RXB data16 jmpq std mov fdivs (bad) loopne sub in and add jno fbld add loopne and (bad) sti cli adc rex.WX insl mov jp add rex.R popq retq mov stos icebp cld jmpq loopne ficoml jmpq add add (bad) movabs out std lock (bad) (bad) loop rex mov pop mov mov enterq rex.WX (bad) mov (bad) loopne mov lock mov cmpsl jnp jge andb movabs lahf cmp in (bad) in (bad) and movabs xchg mov sbb or cli push sbb stc xor sub pop subl insb mov shlb fldcw std xchg sbb (bad) push mov fdivrp and jbe mov jrcxz pushq mov jmp iret adc cmpsb test rex.WRX jl adc adc adc (bad) rcl fwait sbbb fsubp (bad) (bad) mov in in (bad) jge jbe (bad) cmp push sub and pop or lods (bad) in and out rcrl (bad) incl movslq enterq in test mov jae test jg jl movsl insb mov and adc stc (bad) loopne test pop pop cmpsl mov xor xor sbb jo nop fisubrl punpcklbw mov cmc movabs sbbl out cwtl loopne push (bad) fsubrs (bad) int loopne sbb test rex.WRXB cld enterq repz callq movabs rex.B loopne repnz popfq fcomip rex.WR movabs or xor xchg cwtl js sbb push rex.WXB retq in lods rorl xchg (bad) repz (bad) pop (bad) cmp out nop (bad) mov pavgb mov mov outsl movsl rex.WXB cltd test addb xor pushfq std (bad) fnstsw (bad) sbb pop jb sbb (bad) mov add bswap cmp pushq pop sti fs nop sahf and js xchg in loopnel push (bad) repnz movsb jrcxz pop (bad) pushq jo fchs pop adc pop lock movabs (bad) mov jrcxz movl (bad) popfq rex.WB (bad) jnp loop add (bad) mov ficomp jl (bad) push sti cmp adc rex.RX gs bswap outsb mov xchg pop pop jae es sar mov movabs mov or sbb sbb ja xor sbb imul movabs adc loopne sbb or loopne clc mov insb loopne rex.WB iret jrcxz (bad) repnz negb (bad) out rex.X pushq sbb fisubl sbb rex.RB sub adc fbld shrb cmc js mov push jo lret xchg jmpq xchg lock cmp pop jbe loopne rex.XB mov xchg loopne in cmp pop movabs or jb ljmp jbe sub loopne and out sbb or retq jne add and fcomp (bad) sarl jnp mov cmpl jg insb cmp shrl incl cmp (bad) rex.WX xlat loopne gs cli (bad) mov mul imul decl (bad) jrcxz or (bad) shlb test icebp fs (bad) pop rex.WB in scas and repnz test jrcxz imul clc cmp jg in (bad) insl rex.WXB jnp rcr mov int3 rex.WX cmp adc icebp jno xchg (bad) adc mov jrcxz and add int3 rex.WRXB (bad) rex.WRX addr32 movabs outsl in repnz andl jns and (bad) std jge movabs mov jg rcr test mov mov loope add lods jg fisubr xchg push xchg (bad) jmp mov jrcxz xchg icebp movslq or and jno sbb rex.WR xchg cmp pop int3 (bad) loopne rex.R lock mov rex.WXB movabs (bad) (bad) nop rcll xchg test jmp (bad) mov shld (bad) sbb es cmpsl mov cmp sub rex.WXB rex.RX leaveq movabs loopne (bad) mov (bad) xchg jg loopne mov pushq loopne lods mov rex.XB or mov callq xchg mov jno jae je mov lods frstor test es (bad) cli mov sub jp jb mov lock cmpsb push add cltd mov retq mov fs push fadds lret (bad) cmp jl pop clc and jg addl sbb cs add cmp pushfq iret rex.WRB pop in mov jge (bad) jbe cmp mov loopne (bad) or (bad) jl lret loopne mov cmp out fisttpl pop sbb loopne jnp (bad) out in (bad) loopne mov (bad) (bad) loopne rcr fildl add sahf rex.W fildl xchg pushfq movabs add (bad) ja in idivb (bad) rex.XB adc and out vpavgb (bad) xor (bad) mov cmpl and mov insb add (bad) scas cmp adc pop rex.WRB jno int loopne in rex.RB gs mov or int3 jb movl lret mov adc loopne xchg cwtl or and in sbb rex pop callq sub insb outsl cmp lret in jno loopne loope rorb in out clc (bad) pop movsb sbb push mov or in rex.RX and loop mov sbb stos mov add int mov and and and callq ja lods adcl pop xchg mov int (bad) rex.WR adc int3 lods push inc xchg or loopne add or cmp mulb movabs cwtl rcll sbb insl repnz and (bad) ja rcll int enterq insl mov loopne (bad) movabs sub (bad) mov mov movabs rex.RXB push add pop loopne (bad) test xchg lret fcomi (bad) pushq outsb push gs insb cmpsl sub int rex.RB mov mov jmpq sbb out (bad) xchg and (bad) cmp (bad) mov xchg pop loopne test stc sub xchg adc and (bad) (bad) movabs jmp jle rex.WXB es or loopne fnstcw pushq cmp xchg (bad) std cld pop rex.RXB xchg lret rex.RB jmpq or cmp in push sbb loopne xor adc (bad) stc jnp rex.W scas pop in (bad) callq repnz mov notb out xchg or (bad) retq cmp fsubrp test scas outsb dec xor (bad) out cmp hlt fistpl adc rex.WB gs sarb jae in loopne mov (bad) hlt loopne or xor mov outsb inc addl shr imul jp and adc ljmp sahf out ror sbb out or fcoms and jle (bad) (bad) jno (bad) scas cwtl addl in (bad) movabs and cli adc fisttpl and xor rex.WRXB pop and jbe sbb ds xchg cs (bad) loop jl mov stos in cmp movabs xchg fist leaveq loop movb mov rex.R and in (bad) (bad) mov (bad) (bad) xor mov xor (bad) mov sub push pop rex.XB cwtl xchg (bad) (bad) loop rex.XB loopne sbb mov cs add (bad) (bad) sub and (bad) jns stc sbb movabs (bad) rex.W cmp rex.RX rex.R adc (bad) xchg mov xor and adc data16 loopne or jo rex.WB (bad) je jnp loopne pop xchg test insb (bad) notb and or cmpsl (bad) cwtl rex.WRX cmp clc (bad) mov stc fcmovu loopne lret pop or (bad) out (bad) pushq loopne jns cmpsb sbb (bad) repz xlat loopne rex.RB repnz cmp (bad) rex.R cld adc (bad) ja loopne sbb rex.XB stos mov (bad) pop adcb lret add sub rex gs xchg ss mov loopne es xchg jae sub rex.WRX cwtl or (bad) xchg (bad) fs rex.W addr32 mov pop cli (bad) sbb rex.WXB (bad) fs rex.RX fninit rorl xchg sahf add rcrb rolb rex.R sub mov loopne jle lret fisttpll (bad) add lock scas or in jrcxz mov adc stos cmp loopne rcrb mov loopne movabs jle fnstenv movabs pop cmp retq and adc rex.WB rex.RB or and adc (bad) pop rex.RX rex.B out adc je mov rex.RXB rex adc ljmp rex jb insb xchg fdivp loopne cld mov loop mov mov loopne mov xchg mulb fcomp (bad) jg callq mov loopne (bad) jge in out mov xchg fstpl movabs jg std iret add fstl rex out rclb loopne (bad) push push mov je popfq pop (bad) sti mov loopne sbb movabs rex.B loope fcomps pop mov sbb xchg rex.B loopne rex.W movabs test xchg leaveq (bad) mov movabs stos (bad) xchg xlat fucomip int3 and enterq pop cmpsl xchg retq (bad) nop mov movabs mov cmp jo (bad) int3 mov fwait or adc retq add xchg enterq js retq psllw pop addr32 (bad) popfq sub jp and icebp pop sbb loope movsb xlat (bad) sbb sbb jb or clc push (bad) (bad) in (bad) jmpq out sub lock scas (bad) rex.WRB and xor cmp mov test jmpq (bad) cmp nop sub sub (bad) jmp rex.WR (bad) mov lods fbstp frstor (bad) rex.WXB rex.WRB cmp sbb jrcxz rex.XB cmpsl adc js (bad) shl xrelease (bad) sub adc cmp rex.WRB cld ljmp push fxch mov (bad) test fwait stc (bad) jo xor or leaveq pop mov (bad) hlt sub sbb xchg rex.WRX push scas movabs in add mov push in jmpq pushq cmp push cmc shr mov cltd add jmp (bad) cmp jns (bad) cli ss xor mov pushq add movsb rcrb add clc jg (bad) xor out and jnp pop xchg adc and mov jb in rex.XB jo (bad) in jmpq jb lea jg icebp add cmp sti in push cmp xor nop cmpsl (bad) jne add jmpq fs jae lods pop shr stos sub movabs mov mov pop adc loopne movsl xor (bad) (bad) rex rex.WRX stos (bad) stos (bad) pop loopne add mov out push and mov lret or add sbbb xchg mov loopne cwtl rex.RX mov pop push sti movabs (bad) (bad) (bad) jp mov loopne int3 push xchg xor mov (bad) clc jg add mov leaveq lret jmpq cld rclb jb outsb (bad) (bad) scas rex.WRX mov mov (bad) loopne js mov xchg jmp loopne cmp and (bad) mov mov (bad) pop test xor repnz (bad) and rex.RXB mov es (bad) std jrcxz xchg (bad) mov (bad) or loopne movb in jnp xchg mov sar (bad) or xchg in (bad) xchg movabs loopne mov callq jns xchg cmpsl mov movsl sahf (bad) adc sbb push mov sbb loopne mov rcll (bad) jmpq scas out addr32 jno jo sar or (bad) jo jle adc repz sub movabs icebp xor subl jl mov loopne movabs fmuls lret pop cld mov add mov fidivrl and fnstsw fcomps cmpsl mov loopne mov (bad) jno test rex.WR ja callq (bad) movabs rex.RXB and rorl rex.RX sbb movsl pop jl xchg mov xor repnz fs gs (bad) rex.WRXB retq jmpq jle (bad) jne mov or push jo pushq stos jmpq (bad) rcrl rcrb in adc (bad) pop pop (bad) movabs movabs data16 jno pop xchg retq lret loopne je imul jo cmp fildl and je or pop (bad) cmp gs cmc movsb js,pn jb loopne (bad) mov nop shl (bad) mov outsl rex.R retq (bad) (bad) push jae fst mov lock mov movabs negb sbb and xchg adc (bad) imul mov pop cmp adc loopne rex.X addr32 fadd roll jmpq rex.WXB loopne pop callq (bad) rorl or xchg rex.WXB int loopne jl jnp adc or rex.WRX enterq imul outsb pushfq xchg callq (bad) loop in (bad) rex.RXB fs mov mov or (bad) mov rex.X xor movhps push and xor cmp cmp mov int3 mov (bad) cmpsb sbb jle rex.WRXB int add test lods fdivs or popfq rex sub in jmpq pushfq cmp insl loopl jmp mov lods and (bad) pop xor mov and pushq sahf nop jmpq imul rex.B xchg jno add data16 cmc out mov jae cmp push and mov sbb rex.RB mov lods cld pop rex.WRX repnz mul cmp insl leaveq push jb sub xchg xorl sbb (bad) or jmpq (bad) and rex.WRX mov data16 mov enterq cmc repz addl jnp (bad) (bad) cltd (bad) movb lret (bad) movabs rex.WRXB cmp in adc or imul sti lret shlb (bad) xor sub xchg mov sbb int (bad) adc and mov xchg int3 movabs pushq jno and (bad) push (bad) xchg (bad) xor (bad) (bad) mov jno shlb add rex.WRX cmc (bad) pushfq out adc jb jb cmp push clc hlt in (bad) cmp jo or ds js,pt cmp push cmp rex.WB cli mov shrb (bad) loopne or mov loopne add (bad) (bad) rex.WR lret jp mov lahf adc out xchg clc sub (bad) jge roll mov (bad) sti jp mov callq xchg xchg in pop adc jae xor lods add adc rex.RXB cmpsl mov rcr ss mov decb lock loopne xchg adc pushq rex.WB add jmpq out enterq int3 sub je (bad) jno jg retq shll lret rorb lods lret xchg jg shlb cmp jl push (bad) cld cwtl psllw xor mov pop outsl (bad) (bad) jmp add test adc xchg push ja sti in pop movabs mov xchg loopne rol jrcxz sub js mov jl adc scas rex.B cmpl lods popfq rcll rclb add push in push (bad) xor cwtd decl sub and adc test lods (bad) push (bad) rex.WRX or add out adc or sub (bad) rex.WRB jo loopne mov rex.WRX mov mov loopne add movabs or cld or pushq (bad) es loopne mov pop movslq incl mov adcb jrcxz push add push (bad) (bad) (bad) mov in repz add push or sub (bad) (bad) mov scas adc sbb out rclb rex.WB sub jge xchg pop cs or xor stos (bad) rex.WRX adc loope pushq mov add icebp jp cmc adc (bad) xchg shll rex.WXB and and outsl (bad) mov pushq and jmpq leaveq jp sarl (bad) fstps push (bad) pushq jbe movabs and rex.WRX loop movabs movslq out sbb and sub adc addr32 jmpq and xor int3 jge mov sbb (bad) xchg pop add imull pop movabs jb xchg mov rcrb and (bad) (bad) xchg jmp xor xor loop jl and (bad) movsl leaveq sar push rex.RXB push (bad) cmp jrcxz cs jno ss sbb loopne cwtl fisttp rex.WXB jbe (bad) movabs fs mov lock rcl cmp loopne (bad) mov (bad) cmpsl (bad) movabs sub lahf sahf in pop rex.WB js rex.B (bad) mov repnz lods icebp leaveq jb pop in sub (bad) xchg rex.WR mov movsl clc rex.WX push test sti fmul ja cltd mov shll (bad) jmpq (bad) (bad) rex.WXB loopne ja or fsts bnd ljmp pop sbb mov retq push jns test rcrl mov push test rex.XB (bad) iret (bad) mov adc loop xchg xor repnz loopne hlt ss jrcxz,pn add loopne stos mov andb mov mov or mov pextrw stos mov sbb movabs xchg fidiv hlt fistpll rex.RX pop add jo subb (bad) (bad) and sahf retq movl jb movabs cwtl in loopne ficom xor push test in pushq sub pop push (bad) loopne fimull xor lret sub mov leaveq sbb jo fmuls jbe (bad) (bad) hlt rex.XB movabs lock scas leaveq rex.R or sarb movabs or mov pop and fstpt sub imul (bad) cmc fdivl nop sbb xchg xchg out movabs jl es (bad) mov (bad) jg rex.RB imul (bad) movslq loopne rex.WX or mov mov jle clc sbb movsl rex.RB loopne in clc ffree sbb cltd fsubp out int and gs rex.R fwait rex.XB pop callq adc rex.WRB and cltd jo mov xlat test loopne mov xchg lods loopne (bad) movsl sti and loopne sbb sbb cli stos jg add add (bad) (bad) rcll (bad) push loopne fsubr jo popfq xor loopne outsb xchg or vphaddubw loopne (bad) pop or mov loopne mov ss mov loopne jmpq jrcxz loopne (bad) (bad) (bad) fimul cltd mov xchg insb rex.X fs icebp loop icebp (bad) and scas movabs fdivr sbbl (bad) loopne sub movslq icebp rex.W push cmpsl (bad) (bad) or xor es ss repnz sub rorl stos mov rex.WX out pop loopne xor pop loopne cs rex.WX lods xor mov or nop add loopne icebp (bad) mov xor jnp or rolb (bad) jle imul popq loopne xor (bad) jb movabs rex.B addr32 retq cwtl shr mov pop iret loopne repz fstp in rex.WRX mov sahf fmul divb rex.WXB leaveq movabs imul es incl sub js jl adc sbb (bad) out sti fldt xor xchg pop data16 ror jl leaveq (bad) nop adc icebp sbb mov and pushq int popfq (bad) (bad) loopne or xchg (bad) data16 loopne and test scas loopne or fs mov fsubr push rex.WRX jmpq push pop add mov callq mov loope mov jae and pushq mov lods adc rol (bad) loop or and pop cmp notb cltd lods lret sahf adc clc scas pushq sbb movsl rorb callq or jp (bad) rex.WXB int adc insb sbb mov test sub (bad) push lock sbb (bad) or xchg xchg jae mov loopne lock iret cwtl clc sub mov jge rex.RB pop rex.WX movslq enterq rex.WRXB and js (bad) retq (bad) repnz mov pop insl xchg jo jo movabs lods jae jo xchg (bad) (bad) insl (bad) scas divl hlt (bad) in sti cmp mov mov (bad) int3 movabs cmp cmpsl cmp fwait adc xchg cmpsb jns sbb jmp jge out gs scas shr lock adc mov callq rex.W xor sbb jle pop callq scas retq addr32 xchg jp movsl jns cmc mov out push rex push rex.WRB rcr pop xor scas ljmp add mov loopne addb cld xchg in jle mov sbb mov lods in push (bad) (bad) and stc xchg loopne (bad) fidivr loopne or mov retq loopne rex.WXB rex.RXB or rex.WB pop movabs mov insl cltd (bad) rex.W es std fmull in rex.WR sub jmpq mov add xchg gs addr32 flds xchg pop xor jno (bad) (bad) (bad) (bad) loopne (bad) xchg rex.WX imul enterq and sub xchg mov jrcxz (bad) out movslq loopne (bad) jmp sub cwtl mov mov negb or pushfq push rex.B add and mov xor (bad) (bad) rex.WRX scas add out imul pop (bad) and lahf cwtl fs (bad) (bad) pushq test rclb lods add scas lods adc (bad) (bad) cmp imul and sahf rex.RB lock rex.WB mov cmp (bad) cmp in and int3 add gs in sar mov push (bad) fs rex.WRXB imul cmp and push gs clc int3 (bad) sbb (bad) insl lods jle rex.X (bad) test loopne mov fnstenv (bad) js int adc add (bad) xor loopne cli (bad) jns out sti enterq jl adc insl or cli ja (bad) xor subl (bad) xor add rex.XB ss cmp rcrl (bad) lret pop testl (bad) movabs jp out mul xor mov retq (bad) jnp fisttp jns std loopne jo out or cmp (bad) cmpsb subb mov std lea enterq xchg test rex.XB gs adc sub loopne and sub cwtl xchg (bad) shufps pushq cmp loopne out xor movsl stos cwtl js gs movabs insl out clc lret stos in (bad) cmp fsubp (bad) stc mov in xchg push push enterq data16 lahf jrcxz loopne pop sbb rex.RB cwtl or (bad) or pushq cmc mov xor xor jb rex.WB lret loopne movslq leaveq jmpq xor insl mov (bad) icebp xchg sub (bad) fcmovb movslq fnstsw cld in xchg stc cmp (bad) (bad) mov add jrcxz cltd loopne hlt mov rex.WXB (bad) movabs jae lret jrcxz fcmove sub loopne cltd movabs ja stos out xor mov rex.WX movsl and add loopne jrcxz mov loopne out (bad) (bad) mov mov loopne addr32 fisub loopne test pop lods (bad) mov or xchg mov rex.WX pushq in jl cld stc and xor cli loopne mov fidiv rex.WRX loopne (bad) outsb sbb addr32 sti and add xor (bad) or pop (bad) dec sti test xor or mov insb jrcxz fs push xlat in adc (bad) jge sahf add stos jl loopne adcl loopne retq xchg or pushq xlat sbb rex.X cmovno cmpsl add xchg cmp push loopne adc rex.WR jno retq rolb callq movabs xchg mov xchg fs data16 rclb movsl adc loop rex.RB mov push mov adc pop fs (bad) cmp jno sti (bad) mov movsl xchg mov mov rex.WB int3 mov (bad) pop and loopne or pushfq cld xchg (bad) cmp loopne callq iret (bad) jrcxz rex.WXB (bad) (bad) and scas and push xor test mov adc loopne sub rex.WRXB sbb (bad) xchg (bad) loopne int3 subl jl jrcxz shl jl negb (bad) mov lret loope gs pop (bad) xchg roll in push (bad) (bad) rex.W xchg popfq (bad) pavgb sbb xchg in xor sub in rex.RXB rep cltd lcall cmp and retq loopne loope movabs fbstp loopne (bad) xor loop (bad) in lods (bad) and push push xchg (bad) pop or and mov lea repz out (bad) (bad) add jns leaveq fcoms or xchg xor xchg xchg and xchg jne sbb movabs decl (bad) je rex.WRX sar loopne mov push loopne mov clc jl jge jmpq test and in add (bad) nop loopne sbb push xchg fisttp mov adc int3 xor or mov (bad) repz mov or fiadd fmul xor pop sbb and rex.XB mov push jle (bad) lods out loopne (bad) add or pushfq inc iret lea (bad) cmp movsb (bad) rex.WB int callq (bad) nop jns loopne mov ss (bad) rex.R fwait pushq out cwtl (bad) stos rex.WX push (bad) out and sbb idivb add fwait jno pop add loopne outsl (bad) (bad) movsl imul movabs xor adc sbb or repnz repz jne (bad) xor icebp (bad) jns mov and push (bad) cli and (bad) iret xchg gs lock lods mov loopne mov shl cmp sahf ja (bad) sbb push addl loopne clc pop movabs loope movsl stc lods (bad) leaveq loopne jb jo mov adc repnz or rex.WRXB cmp add shrl loopne addl pushq pop rex.W xor movsb add cwtl xchg rcr test movabs loopne xchg xor jmpq (bad) jo xor adc (bad) mov (bad) cmpsb mov jo imul jb (bad) cmpsb add js in xor (bad) scas sub movslq pop int pop lret mov xor (bad) push fsub rex.RX add lods pop (bad) (bad) xor pushq cmc (bad) outsb nop and sar in sbb (bad) scas rex.RXB pushfq mov rex.RX out add loopne xor fstl mov out (bad) enterq (bad) (bad) push loopne fimul mov or (bad) add rex.WX (bad) pushq add (bad) jl movabs loopne pop cmp sti add movabs stos loopne decb loop (bad) rorl movabs cmp xor xor fucomp test push loopne,pn (bad) xchg jge jns scas nop rex.X or adc sub rex.WRXB rex.WRX cmpsb movabs cmp cmp fstl repnz sbb gs xchg (bad) out mov std cmp jg jne xorb or or add cmp adc sub loopne icebp jle insl cmp in push mov fstl imulb jo xor mov mov (bad) adc imul enterq mov and in pop jno outsl mulb cli jne fist mov data16 pop imul jb xor sub and es nop rex.WRX fs fsubl xlat movabs repz shlb push out (bad) pop xchg addb mov rex jge outsb iret jg xchg sti jmpq imul out (bad) (bad) in pop (bad) stos retq xchg test (bad) mov (bad) (bad) rex.WRXB mov (bad) lahf mov or cmpxchg (bad) adc mov (bad) cmc sub (bad) loope insl rex.WXB movabs push pop js xor cs pop rex.WR rex.WRX cmpsl sub andl rex.B je sbb pop xor in sub outsl mov add scas ds test rex.X lods cmp movabs shlb sub cli ja jo jns cmp cmp rex.XB cmpsb lret (bad) test mov jnp xchg lret add fsubr lcall test ficompl out or sub ljmp cmp mov lret out je (bad) mov int3 rcrb (bad) mov pop lahf cmpsb jp stos sbb movabs mov xchg (bad) push and and fnop mov cmp add ss sub in and mov lock xchg (bad) std (bad) out test loopne sbb add out cmpsl loopne (bad) jns icebp stos xchg jg (bad) fs (bad) cmp jmp (bad) (bad) test (bad) icebp loopne rex.WXB mov xchg loope and jo in stc scas xor repnz mov mov rex.XB loopne (bad) (bad) mov jne rex.WR xor cmpsl ror mov in cs pop faddl subl addr32 movsl sarb (bad) icebp jnp (bad) xchg stc iret rex.B movabs sbb xchg idivb scas (bad) movabs adc cmp in stc xchg mov fstpl mov movabs ja shrb jbe (bad) (bad) scas fisubl add pushfq movabs clc push cli mov mov nop adc xchg sub jo movsb mov loopne cmp in adc add mov movabs rcrl pop mov rex rex.RX push adc frstpm(287 mov pop adc loopne mov push add or test add xlat in lods ds sti rex.WB and and cmp xchg out (bad) loopne enterq rex.RXB scas fsubrs fnstsw mov jmp add loopne std lock rcrb jrcxz add jb mov pop xchg adc (bad) in sub cmp dec jmpq push ror ror (bad) (bad) outsl rex.W loopne repnz jno mov mov mov movsl callq fcmove enterq adcb add pop (bad) loopne retq (bad) (bad) loopne sub adc jo xor lret movabs xchg jbe rcl push jmpq pushfq xor add scas clc rcrb mov rex.RXB movsb jmpq sarb adc clc test xor pop mov (bad) pop in (bad) adc shrb in pop rex.WR xchg fiaddl mov or fdivrl loopne movsb xor and jmpq or sub xchg shl fimul adc je (bad) loope push scas or movsl shll jne xor (bad) es (bad) pop cld (bad) xchg (bad) movabs jmpq out cmpsl test movsb xor loopne (bad) ja loop test loopne lods mov xchg testb sub outsb or in fsub test movabs push or mov pop test sbb in sbb (bad) (bad) stos out push and loopne (bad) mov (bad) xor in pop shrl push cli rex.WRX (bad) mov imul stos xchg jbe scas ljmp cmp (bad) mov je (bad) mov or (bad) rex rex.WX rex.WRXB rolb cmp xchg (bad) (bad) ds adc (bad) in (bad) setns mov sub loopne pop xor (bad) sbb (bad) jae mov and and mov and rex.RB lret (bad) push cmp out adc mov rex.WRB loopne sub xchg jrcxz push rex.RB pop in (bad) mov pop decb movabs in sarb mov cmc (bad) retq rex.WRXB pop shrb sbb test mov movabs ds jnp cmp test pushq insb rex or lea sahf cmc test (bad) mov sub and add in movq cmc movsl outsl iret xor xchg fucomip in xor jb (bad) insl sub cmp hlt icebp pushq mov mov jmp (bad) scas punpckhbw ss mov mov sub (bad) loopne (bad) or enterq push xchg rex pop (bad) jae insl out (bad) sahf gs add addr32 imul movslq pop lret xchg xor sub fwait test jge (bad) movabs lock bnd (bad) adc loopne,pn cmp vpavgb iret stos scas (bad) xchg cld sub jnp rex.RX rex.RB and adc pop loopne popfq int test jo loopne (bad) or insl mov stos sti shl out (bad) stos subl rex.XB fmuls insl fiaddl xchg loopne adc mov movsl (bad) or test popfq jo retq out int loopnel xor jmpq movslq xchg notb xchg push sbb fsubp and ja jo and pushq and enterq jge jmp sbb mov fiaddl or callq rex.WXB mov or test rex.WRXB loop jns setns jb test jp fbld rex.WXB callq in leaveq and fldl2e clc adc jle mov addr32 xorl shr imul rex.WRX mov (bad) fisttpl (bad) movsb xor xchg sbb pop sbb rex.WXB clc repz outsl fildl xor push in test outsl stos (bad) cmpsl out addr32 xchg fcomp movabs or jbe,pt enterq retq fwait lock sbb adcl xor and rex sbb jle xor enterq (bad) (bad) and sbb (bad) xor xor outsl imul rolb xchg int shrb (bad) pop pop pop xor jrcxz outsl loop or rex.B mov rex.RXB jmpq jle sub jge sub lret fsub rcrb adc out jb mov loopne or (bad) jns cmc outsl cltd sub loopne (bad) and fs xor (bad) rex.WXB repnz add rex.X cmc loopne xchg fs loopne adc add loopne hlt jmpq shl in fwait scas fstpl sub movslq cmp pop xor jno cld mov retq lods loopne mov sub rex.XB test jo mov scas or movabs loopne sbb pop (bad) jge (bad) js adc jo loopne test xchg xor mov icebp (bad) sbb shl rex.WRXB flds sbb popfq pop adc int sub stc rolw stos jrcxz fs and movl lods pop in rex.WB mov pop and shld mov mov loopne hlt push (bad) lret and sub rex.W pop leaveq cmpsb cli int3 adc pushq adc adc callq mov jmpq mov (bad) mov or adc std loopne adc (bad) jge add loopne push data16 iret (bad) outsl jl adc cmpb out (bad) cmp rex.WX mul (bad) mov sub fyl2x (bad) fidiv push xchg xor cmp sbb or js loopne jg stos cmp movabs adc loop pop xor out push rcrb in rcrb test loope loopl (bad) add cmp leaveq sbb (bad) mov add adc movsb out push mov push (bad) or cmp insb rex.WR cmp and (bad) xchg push pop nop cmpsb sbb leaveq jne and dec pop sub cs mov adc sbb repnz movabs fucom cmp jnp (bad) (bad) rex out loopne xchg mov sub jnp (bad) jb adc adc fisub jne (bad) (bad) xor int3 jb test (bad) roll retq sub mov data16 int sub (bad) cwtl lahf mov jle movabs jp or int3 xchg (bad) mov (bad) rex.WX push push loopne pushq shrb int adc out mov and movabs xchg pushq pushq jne sti int mov (bad) and leaveq loopnel hlt cwtl xchg cmp in xor repnz xor movabs (bad) mov loopne and mov mull jmpq repz or and sbb loopne rex loopne xor mov adc loopne insl rex (bad) lahf icebp cmpsb lret lret test jmp mov enterq mov test push (bad) sbb mov sarb and callq in bnd pop cmpsb jp mov lahf sbb adc lret add jl push jo pop (bad) fld1 rex.WRX fs out and stos retq js rex.WRX cs or xor out orl add jg sbb enterq (bad) fimull (bad) jb cs fwait test mov mov sbb sti pop xor cli adc mov ds insb vpmaxub loopne (bad) cli xchg sub mov fdiv mov lret rex.R in vaddss xor or stos orl sub and jns stos jae (bad) fbstp callq retq adc add (bad) xchg test rcll pop loopne push mov sub hlt fcomps push cmp in js (bad) shl mov mov (bad) movabs mov sbb sub mov (bad) out (bad) jbe loopne (bad) xchg sti rex.R or mov push and pushq cltd movabs movabs sub (bad) or fldpi int gs repnz dec rex.WX jb xchg retq jnp rex.WR push (bad) cwtl add test cltd cltd loopne fs pop jnp jle sbb loopne cmpsb outsl jb (bad) add loopne loope xrelease xchg mov test jne addr32 sbb cld sbb roll and retq mov rex.R and jge xchg icebp (bad) pop fnsave fisubr cmpsb rex.X rcl rex.XB rex.WRX movslq xor and or (bad) icebp imul jrcxz pop and rex.WRB rex.WRX movabs adc jns mov fcomps (bad) imul sahf repz cs shlb out (bad) push rex.R jae fdivrs sub xor jg movabs lock sub mov sbb out addr32 rex.WRXB (bad) sub mov lods cmp lret xor xchg pop jns (bad) movsb jrcxz fildll xchg shl or (bad) mov jmp cmp jp (bad) xchg movabs xchg stos push test mov js,pt sbb xor sbb or (bad) sbb rolb rex.WXB jmpq mov and jae jl in (bad) rex.RB rex.WRB lods sub iret stc gs rex.RXB ds pop adc rex.WRX (bad) out and fbld notb push addr32 jns rex.WX movslq sub fcoml test (bad) (bad) nop jmp fidivl rex.RXB imul xor or or rex.WB xor (bad) (bad) out insb jl fidiv lret and sbbb insl push rex.WRXB and out adc sbbl jrcxz cmc sbb sub cmp rex.W or adc jo cmp in roll or int3 adc jnp xchg js xchg cmpsl xchg (bad) xchg mov rex.WRB stos shl (bad) movsl jmpq movb enterq mov rep or mov sbb xchg xchg leaveq jmp out outsl add enterq mov out adc (bad) nopl add out sbbl mov (bad) or pop retq mov movabs in out rex push (bad) cmp (bad) jno (bad) push mov movabs adc loopne lea mov out fidivrl sbb mov repz push jmpq pop sub jne rex.WX in fldt sub or (bad) cbtw loopne negb add push cmp out jo enterq jb rex.WRXB rex.RXB (bad) jp pop adc push sbb popfq cld mov push cmp rcl sbb incl repz jp or out loop push lods pop adc out mov js movabs test cmpl or jne adc jno rex.XB rcrl movabs loope cltd (bad) pushq repz xchg push (bad) mov add fwait lret leaveq (bad) mov (bad) (bad) mov add xchg (bad) vpsllw repnz (bad) or (bad) (bad) xchg adc mov add int3 sbb add (bad) fnsave rex.WXB or sub push mov (bad) movabs movabs test addl shl lock std or loopne jp cmp (bad) (bad) sahf mov loopne push rex.WXB retq adc sbb xor popfq loopne jrcxz pop cmp or pushq cld test test jmpq test sub loop push rex.WR js sub shl lcall cmc jrcxz adc mov lock jae rex.WRXB and or cltd xchg cmp and ja push loopne movslq add icebp stc retq rex.WR test ss cmp mov movabs lock cltd loopne and (bad) iret xchg (bad) pushq in gs loopne rex.R in mov xor xor jo es (bad) out mov (bad) (bad) (bad) xchg fimul movsl jl out and mov test mov or mov movabs rex.RX (bad) loopne cmp outsl in jrcxz or (bad) (bad) cmc add xchg test test (bad) push scas rcr scas (bad) sbb lods and xchg clc cmp shll mov (bad) (bad) jno fisubr xor add je and (bad) ds and gs xchg icebp jbe mov cmp (bad) (bad) out pushq test (bad) cmp scas rex (bad) mov rex.X add vmovaps sbb loopne pop adc xchg mov stos xchg xchg sbb jno (bad) (bad) loopne imul rex.WRXB rex.W lret sbb adc fwait std js jmpq rorb jns sbbl mov mov retq mov push add push and (bad) jb scas cmpsb test loopne (bad) cli cltd adc sub callq push and jge and (bad) fstl or mov jrcxz cmpsb imul loopne xlat stos in rex.WX cmp or mov add mov xchg movabs fwait mov xchg jp icebp in and sub imul and nop (bad) sub icebp callq gs or rex.WXB jg sbb jmp xor test xchg repz icebp (bad) std enterq test scas sti rex.WRX shll adc push shr xchg loopne mov hlt stc sub xor pop repnz lock (bad) or mov out (bad) rex.WRX pushq insb js ficomp mov dec (bad) movabs cmpsb pushq (bad) add xor sub loopne pop jb sbb xchg loopne iret movslq (bad) mov icebp stos loopne adc rex.WX rex.RB cmp push pavgb insb cmp (bad) sub jp mov pop add xor jbe (bad) test in push (bad) movsl lret clc fnsave (bad) test adc out mov rex.RB and mov (bad) movabs icebp lret lods (bad) pushq rex.XB mov add mov rolb loopne xchg movsb xchg cs lahf xchg loopne loop mov loopne sbb lock cmp loopne mov or and cmp loopne mov (bad) stos cli mov retq (bad) pavgw imul add test sahf (bad) scas loopne jns gs fisubrl mov or in decl nop (bad) mov sub in xchg cmp mov addr32 and cmc adc lock nop lret out outsl lcall sbb (bad) movsl (bad) cmp loopne lock stos rcrb loopne (bad) pop loope push jo (bad) add cmp movsl (bad) pop jmpq cli push pushq loopne xor roll clc (bad) rex.WRX add pop (bad) (bad) jnp xchg or in pop icebp mov lret fistpll pushfq hlt lcall xchg test or loop jns paddusb negb pushfq notl movsl xor mov loop pushq mov (bad) (bad) adc loopne (bad) lret jge mov push imulb jmpq pop add pop jp sbb and cltd sbb loopne out or rex.WB jrcxz xor (bad) sbb stos loope or ja mov orb loopne push mov shll loop mov (bad) adc loopne mov or lock ss jno stc (bad) icebp rex.RXB fsubr fld rex fldt add pop cmp xor rex.RXB sbb (bad) movabs std jmp adc xor adc repnz rorb or push (bad) mov ds mov and (bad) lods adc sbb pop mov (bad) sarb fwait sub add mov repnz (bad) fsubrs retq push (bad) cmp jmpq cmp (bad) loopne jge test mov jo jns fnstenv in jne (bad) ss retq movsb xor (bad) rex.WX rex.WXB and sbb cmc push and pop cmp push jb rex.WX and test rex.RX rex.WRX retq stc mov clc (bad) (bad) push rcrl ljmp xor int3 rex.RX cltd add (bad) shrl pop data16 (bad) (bad) (bad) loopne rex.XB add rex.WR retq ja or movabs mov (bad) lods loopne movabs adc nop rex.WX fdivr sbb and or xor pop lret hlt cmp and or push cld cmp (bad) movabs movabs rex.XB cltd mov mov push movabs in in imul and data16 or (bad) movsl and (bad) sub fbstp sbb cmc push sarb pop es jae cmpsb movabs hlt xchg stc retq or (bad) std (bad) jno scas jmpq or sbb mov fist mov outsb movabs out lcall rex.B add pop lret (bad) jrcxz retq mov pushfq movabs sar jnp fsubrs mov (bad) adc loope pop mov pop sbb rex.WB lock jne adc cmpsb enterq cmp sti lock movsb adc add and jno (bad) cltd std add lahf rex.WRX ds (bad) rolb push leaveq rex.WXB (bad) and adc pop push negl gs out lock push rex.RX rex.R icebp callq (bad) jbe out adc cmp stos rex.WRXB scas rex.WB rex.WRX pop stos rex.X out std (bad) cmp iret in xor lahf adc mov adc cmp lret or (bad) insb subl loop sub and mov jrcxz xor (bad) xchg jg loopne insb push xor mov sub mov mov (bad) loop,pt sbb pop movslq push cmp hlt (bad) xchg wrmsr (bad) push (bad) (bad) cmp rcrl imul xorb loopne,pt testb loopne fstps rex.W cwtl loopne jne imul cwtl mov add push in nop push rex.WRXB outsl (bad) rcrl cmp cmp or adc jno pop (bad) rex.WRB addr32 push lcall rex.RXB jrcxz lock in fstpl (bad) fwait push cmp xchg callq xchg (bad) fsts mov and pushfq pushq cs retq adc xor sub push rex.WRXB sub (bad) cmpsb xor (bad) pop (bad) movabs pop test scas (bad) and push es and rex.WB jno jl rex.WB xor callq ds adc callq rex.WB shrb rcr loop clc push imul mov cli or pop rex.RX ss sub hlt jae data16 je mov jp fidivr rex.RB mov pop stos lea (bad) jge xor jnp add sbbl hlt mov ss out (bad) cs (bad) (bad) mov mov js fisubr adc cmp (bad) mov xchg ljmp fs clc movabs loop mov iret roll mov jnp xchg (bad) xlat or sbb int3 cmp or sub rex.B fs sbb std lahf out addr32 scas in mov scas xchg test jns in pushq mov enterq cmp (bad) mov shrl out stc movabs sarb int3 cmp addr32 rolb cmp rex.WXB insb shlb xor movabs repz in sbb or mov rex.WRXB or pop rcl (bad) rex.WXB stos (bad) movabs xchg or fdiv test rolb test movslq movsl rex.WRB fisub xorl and in sbb (bad) rex.RX (bad) addr32 movabs in pushq pop jmp pop cmpl pop sub (bad) sahf cmp rex.RB mov (bad) fwait movsb lret retq outsb fldenv (bad) (bad) retq add jrcxz (bad) or in je mov (bad) imul loop iretw cli cmp fwait pushq push rex and icebp loop (bad) jne imul movabs cltd mov out jo push (bad) fdivr mov adcl (bad) sub mov lock rex.RX (bad) in retq mov (bad) in mov jrcxz lods push sbb rex.RB cmp xchg movabs and cmp sub rex.RXB (bad) and (bad) or loope mov fsub roll retq mov xor rolb rex.WXB mov pop movslq bndldx or shlb int3 stos sub scas (bad) (bad) out sarb std stos cmp frstor (bad) fdivs movsl rcrl repz jge mov xor (bad) and rex.WRB jle sub rex.XB ds jle push xchg mov cld jrcxz pop test out xor rex.R mov or (bad) ja sbb mov mov stos mov orl (bad) sub js sbb movabs fsub mov sbb pop cmc stc adc (bad) mov (bad) adc jns ds mov push test jmpq hlt xchg (bad) in (bad) jmpq mov jrcxz rcrl faddp in jge adc jmpq jrcxz int xchg ds and add (bad) mov mov hlt (bad) mov jae rorb callq jns pop and int3 sahf jno mov mov mov cmp mov shl xchg rex.W (bad) pushq (bad) rex.RX in addr32 push add push cmpl jmp (bad) cs (bad) push (bad) jg addr32 and out push sbb (bad) fisttpl (bad) pop callq and (bad) loop xchg pushq (bad) push rclb pop (bad) mov loope (bad) or sarb lahf addr32 jnp out adc (bad) in xchg adc icebp lock rex.WX and and jp (bad) jg pushq (bad) sbb adc cmpsl (bad) and loop mov gs push outsl jmp out adc sub addr32 lcall (bad) sbb sub pop gs or fsubs and mov add jrcxz and jl shlb (bad) gs pop (bad) lods (bad) pop jns mov push mov (bad) loop pushq in (bad) pop pop mov out fsub mov (bad) retq jo fidivr (bad) jae retq loop cmp js lods xchg movabs mov and mov sbb rex.WRXB jno insb lret test in lea sbb rex.WB movsl in jg (bad) ficompl scas ja in pushq movabs ja or and stos jbe (bad) adc (bad) push or or rex.RXB iret es (bad) (bad) (bad) rex.RB icebp imul fld lods movabs push cli mov cmp jl push test icebp jle pop ss (bad) rex.R rex.XB push mov cs (bad) pop (bad) and movabs push xor test cmpsb rex.WR es fcomps (bad) loope loopne add sbb (bad) (bad) jnp or adc addr32 pushfq (bad) lods xlat sub or shrl (bad) jp rex.WRX mov jl (bad) out rex.X movabs sbbb loope int and (bad) ss push (bad) (bad) cmp push cmp jne (bad) (bad) adc (bad) or (bad) (bad) or pop sbb and adc (bad) int3 pop push mulb cmpl push xchg xchg cmpsl xor rex.WXB pop (bad) add clc push frstor sarb (bad) (bad) pushfq test xchg pop jb mov jrcxz adc shrl pop mov (bad) mov jae mov pushq pop je pop callq pop pop ja and add sub sub outsl push rex.WRXB rex.WXB mov pop mov adc js jmpq test and and in and loopne (bad) push movabs pushfq rorb jno movabs (bad) cmp sbb mov (bad) (bad) or rex.WRB and and imul (bad) in mov fisttpl shrl movabs mov rcl out iret (bad) (bad) movabs insl cs callq add repnz mov xchg jp test fsubp mov push rex.W rex.WX and xchg jge scas or fimull push std fdivp outsb and pop (bad) push add xor popfq and callq or jmpq xchg insl sbb jg mov sub roll rex.WRXB rex.W cmp sbb je rex.B rex.WXB sbb cmp out xchg cs cmp jge jnp fadds (bad) sub mov movabs jrcxz pop mov jmp cld add fs cmpsl pop vpor (bad) lock pushfq fcoml and movslq scas incl sbb jle insl mov lock jmpq mov (bad) in (bad) rex.RX rex.WRX lock and cwtl mov (bad) (bad) rex.WB test or lods adc pushq pop rex.WRX (bad) insb sub retq sbb sub movabs in adc lahf mov adc (bad) (bad) mov (bad) lea rex pop out or mov loope (bad) cli scas sbb in cmp rex.WRB xchg mov (bad) jbe push mov outsl rex xchg adc scas out rol and cmp pop adc adc xor sbb (bad) cmp jmpq jb mov loope jae (bad) rex.WX sub jp loopne mov sub rex.B leaveq in xor xchg rex.WRXB insb lret movsb sub or jae stc inc movabs shl xor (bad) add mov loopne cmpsb jns movabs lahf mov pushq mov jmpq or xchg pushq xlat fadds imul fcompl icebp movsb mov movabs icebp jno repz mov (bad) test sub mov loopne and je imul push out (bad) loopne (bad) mov xorl xchg or sub rex.X cmp lea cmc ss loopne insl (bad) (bad) rex.RX (bad) and rex.R add fcmovnu rex.WXB outsl movslq and imulb loopne or push push retq loopne mov (bad) dec fxch (bad) adc jne (bad) push (bad) sbb cmpsl adc loopne (bad) jb cmp test imul cmp (bad) sarl movabs add rcl jnp mov (bad) rex.WRXB jno shll loopne cmp gs add clc push ss (bad) sahf jmpq fnsave fwait sbb mov xchg (bad) and rex.WXB fwait adc subb rex cmp repnz rolb mov repz and push loopne retq mov or std in jmp (bad) and (bad) xchg (bad) leaveq push (bad) sbb pushfq sbb xchg clc out clc jmpq (bad) fdivs (bad) jnp enterq add loop in sbb ds loopne sti (bad) (bad) mov fucomp (bad) stc ja test loopne mov jmp fbld jne sub sbb mov fxch ja or popfq outsb rex.WR sbb mov jns (bad) mov callq in mov (bad) add icebp insb adc (bad) xchg (bad) leaveq mov push or js sbb loope xor lods (bad) rex.RXB loopne jnp (bad) (bad) mov in push xor std (bad) (bad) int3 adc pop loopne roll je cmpl sbb cmc (bad) sbb loopne je lret fdivs xor loop mov test push xor adc imul jno test ss cmc mov loopne push divb or xchg mov js loopne clc rex.RX test (bad) push (bad) jo cmpl loop je rorb mov test mov jg stc pushq test xlat xchg jmpq stos rcrb jg test xchg je lret cmc rcr and add add jbe loopne jno xor and push outsl xchg loopne sub (bad) js rex.X pop sub xchg in (bad) (bad) in dec popfq movabs push sub pop stc loopne enterq (bad) movabs mov lods xor (bad) cltd (bad) pushq rex jge (bad) incl (bad) cmp or loopne (bad) or (bad) clc rex.WXB mov mov lahf or (bad) xor leaveq rex.R mov pop mov (bad) cmp or lahf cld and loopne fstpl ss cmc decl retq repz cs jnp rex.WB lea lahf adc (bad) rolb repz cmpsb mov loopne andl or loop mov adc pushq mov in stos (bad) out jno insb jg xchg movabs pushq shl cld cltd pop cmp test jmpq pop in in mov loopne movabs sbbb xor sub retq hlt (bad) mov and (bad) xchg sahf enterq xor icebp movsb movabs cwtl push (bad) pop lret es rex.B rex.X rex.XB add rex.X mov insb xchg fwait out add stos xchg int3 rex.RB stc test (bad) xor stos xchg js ljmp (bad) push sub lahf lock adc in je sbb gs (bad) rex.WR movsl jrcxz adc xor in xchg repz lahf and add pushq bnd and xchg (bad) sub clc leaveq cs fistpl rex.WX movabs gs pop (bad) xlat adc shrl (bad) push or sahf sub nop sub nop fwait add or loopne (bad) (bad) sbb rex.B xchg jb sahf rorl out jo add stos mov xchg or leaveq jmpq jnp (bad) mul test rex.WB mov rex.RXB clc xchg movabs mov loopne (bad) xchg xchg jnp (bad) rorb xchg rex.RXB retq and in cld cmp movabs movabs (bad) mov adc movsb xor xchg xor xchg in (bad) gs fucomip in xlat (bad) adc loopne in out push (bad) out add rex.WB cmc movslq mov sub (bad) icebp (bad) idivl xlat (bad) pop rorl cmp xchg pushq movabs mov add rex.RXB lret or xor icebp (bad) stos or stc leaveq cli fisttpll mov callq push jl sti (bad) mov sbb imul (bad) rex.WRX cli or mov ds movabs jl (bad) (bad) dec jrcxz rex xchg add pushfq loopne jle cmp push cmc jmpq int (bad) loopne rcll (bad) and (bad) lahf rex.WRXB ds pop jge (bad) sbb (bad) fiaddl in jg repz sbb (bad) cmp shl vphaddw mov mov xchg rex.WX fisub out sub lods cmpsl jae push xor cmp repz pushfq sub mov loopne jo adc scas pop and jg popfq adc js loopne jp fadds jrcxz mov in mov jle out pushq cmp rex.WB rex push cmp lret stos gs test loopne jne mov std (bad) rex.XB pop retq rex.WRB repz cltd fwait loopne mov rex.WXB jrcxz rex.W jmp sbb sti mov mov push je jl xor loopne cli rex.WRX push mull fcomip cwtl movsl retq sbb adc addr32 adc data16 sbb mov xchg cs lahf fwait cli nop mov lea pushq mov movsl (bad) loopne push in lock sbb sub mov jg (bad) or mov cmp pop addr32 rcrl sbb (bad) (bad) (bad) rcrl mov sub xchg (bad) loop in or imul push cmp movabs adc jrcxz (bad) roll mov in cmp int3 push mov (bad) (bad) imul pushfq roll pop fxch test fimull jmpq jo xchg movabs callq (bad) in cmc stos jb movabs (bad) push in rex pushq jrcxz std mov loopne fidivl mov repz orl (bad) (bad) or rex.B movabs xor rex.RXB xchg stos mov xor pop mov and xchg sub sub xor enterq loopne adc mov (bad) lahf jnp mov sub test out retq out cltd jo out movzwq mov je (bad) (bad) (bad) sbb mov jnp sahf pop repnz fidivr sub (bad) jmp mov push jl or (bad) sbb fs movsb rex.RX callq movsb insb jne fist mov (bad) xorl cmc pop adc rorb in retq mov rex.WRB pushq jae je (bad) cmp in mov movabs xchg outsl ror mov (bad) xor mov scas fs fs std retq push (bad) rex.W jmpq pushq push in fwait add (bad) (bad) add and xchg in sbb ja adc shlb cmc rex.W jg mov xor (bad) rex.WRX pushq (bad) jp pushq pop retq sbb rex mov std (bad) add pop (bad) lods movl hlt sbb mov jg test cmp rex.RX xor in nop and mov movslq clc jae movsl test xor repnz pop rex.WRXB clc mov cmp icebp out andb add cmp pop or (bad) mov xor jo fs xchg push push mov loop cmp or fdivrl mov loope xchg fsubp add mov callq loopne pop movabs pop push movsb cmp xor (bad) cld mov cwtl sbb mov movabs pop cmp (bad) pop cmpb sub imull cltd fild adc add xchg int3 mov fldt in insb callq loop jge lahf add gs (bad) repnz out add in movsl in sbb negb outsl jle faddl cmp cld in rex repnz fsub sbb cmp (bad) (bad) (bad) movsl pushq push retq mov (bad) rex.WB lahf (bad) pop (bad) cmp repnz jbe (bad) mov (bad) sbb fdivrl stos fildll and push loopne push pushq gs lea adc clc icebp xchg lock jrcxz jmpq cmp mov fdivrl rorl movabs add pop cltd icebp sbb ljmp mov leaveq and ds and imul sub pushq lret in in shrb and fbld jrcxz (bad) sbb (bad) (bad) xchg movabs and incl (bad) insb callq insl js jl or fisttpl retq rex.WRXB imull movabs (bad) cmp clc scas clc rex.RB (bad) ja sbb sbb out (bad) fdivr cmovb xchg leaveq shll sbb (bad) loopne (bad) mov sbb xor lahf xchg add xchg push pop lods loopne jrcxz pop rex.RX fwait push shl retq sbb sbb cmp loopne fadds scas adc sub loopne add (bad) rex.WB (bad) jno (bad) iret add mov cmp pop mov rex.WX in (bad) ja lahf pushq xchg sahf fmull (bad) or jg xorb add ds xor cmp rex.WR adc adc xchg in adc jnp and and adc es mov and cmp (bad) fcmovnbe (bad) cmp push sub or sbb sbb push adc mov cmp sbb sbb movabs scas cwtl (bad) or test loopne cmpsb rex.W cmp cmp loopne add ja ficoml icebp loopne cmp out mov (bad) jb scas cli fistpl mov push out retq mov xor mov mov ja iret jbe pop cs out mov sbb jmp sub stc sub (bad) xor cmp nop adc fistpl xchg add cmpsl movsl ja in cmp rex.WRXB nop addr32 loopne idivl negb cmp adc rex.X lods mov mov sahf rex.WRXB jrcxz xchg lahf mov (bad) loopne mov xchg add (bad) cs push or sub and mov jrcxz cmp lret (bad) push adc (bad) cmp or add jnp je hlt test in jrcxz mov pushw pop (bad) repnz lret movabs (bad) loope sarb pop cmp in roll retq adc or cmp movabs xlat je and ljmp movabs cmp sub (bad) fcomip jge rex.WRX mov outsb rex.WRB bnd adc mov ja (bad) fdivr (bad) rclb (bad) sub mov or lods rex.RXB xchg (bad) pushfq gs (bad) insl or (bad) rcrb sub (bad) fstpl add lret shll xchg sbb imul (bad) pop movsl iret mov pop icebp (bad) push (bad) pop jnp sub or (bad) jae pop movsb xchg out icebp out rex.XB fstpt (bad) shrb jbe in jo mov (bad) adc sub cmc cmp retq loopne jo (bad) cmc (bad) cli (bad) int movabs sub test imul sbb rex.R loopne sbb mov cmp mov shl out mov shl stos lret jge mov clc sbb loopne and movabs (bad) (bad) xchg repnz pop gs fadds rex.WRX testb and (bad) in fisttpll rex.R or xchg loopne scas pop and lret (bad) callq loopne jne jnp gs (bad) jb sahf shrd test adcb loopne rcll mov cwtl nop (bad) cltd fwait mov stc add loopne movabs and enterq xchg mov pop mov leaveq rex.R (bad) jmpq (bad) test jb pavgb fiaddl or fwait test enterq repnz outsb jg add stos jnp xor jns and loopne cwtl (bad) (bad) idivl decb fiadd repnz jmpq pushfq shl xor and in jmp lret clc stos (bad) test shl insl xor lea cmpl test or retq sbb repnz loop repz cld mov and lea sub (bad) (bad) in scas (bad) xchg addr32 and in xor je int3 loopne push (bad) cmp cmpb leaveq xor (bad) (bad) and (bad) rex mov (bad) enterq mov cli data16 loopne mov js sbb jb jo rex.WB ss roll jmpq and loopne rex.XB ds sbb leaveq jae data16 push fbstp and cmp movsb loopne cmp sti jno outsb js sub lods fnop mov add imul shr loopne xchg movsb repz xchg in pop loopne (bad) mov fsub cmp sub sbbl cmpsb xlat adc out loopne add rex.B loopnel xor jbe icebp sahf test lock (bad) sbbl loopne rex loopne xchg rex.X cwtd (bad) loopne pop push sbb mov (bad) fdivrp cmp mov jg mov rolb (bad) icebp (bad) repz and ror pop movabs push test rex.RXB rex.XB add cmp jb adc (bad) mov scas (bad) movabs (bad) rex.RB pop out (bad) sbb cmp sar mov pop mov cmpxchg cmpl and (bad) jno out (bad) mov mov in rolb xor loop mov out repnz sub and push (bad) stc pushq (bad) js,pn shrl jmpq (bad) pop (bad) and movsb xchg push adc in movabs callq xchg jmpq sar or (bad) sbb lret xor xchg mov retq loop xor movb (bad) outsb insb cwtl stc mov movabs pushq pushq cmp fstpl jbe and mov ds sbb movabs sbb sub fisubrl pop xchg mov (bad) pop push test cwtl sar adc imul xor mov lock (bad) lret test (bad) (bad) loope mov rex.WR lahf (bad) lods jg push mov push out movabs adc hlt (bad) xor mov pop jrcxz stc pushq roll sbb jmpq insb xlat (bad) add sub je pop js sub movsb mov sub adc (bad) movabs jb xor lcall ss (bad) add loopne rex.WR pushq (bad) rex loopne or adc je fs rex.RXB cmp add xchg stc and rex.WRB mov xlat adc ds (bad) ss (bad) (bad) (bad) xadd enterq (bad) rex.XB mov outsb (bad) adc jrcxz scas sub movb (bad) je rex.WX data16 loop push out (bad) pop (bad) mov callq mov and shl jae popfq or sbb mov mov stos (bad) rex.WB rex.WRXB out rex.XB jge jne in mov (bad) mov jns (bad) rex.WRX cmp sbb push cmp rex.RX std (bad) (bad) or xchg pop rex.WR cmp (bad) lret ds fwait (bad) repz mov and and retq cld rex.RXB lea int imul cmpsl fwait mov movabs (bad) (bad) adc push (bad) sahf mov (bad) shrl clc sub lock (bad) mov retq stos (bad) notb sbb test outsb loop jo cld sub je stos mov adc loopne leaveq add (bad) pop (bad) hlt loopne sbb xor adc neg mov push (bad) loopne mov mov stc movslq loope retq sub fchs mov (bad) rex.WRXB jp jbe pop mov rex.WR push (bad) fcoml (bad) loopne mov sub out loopne add cmpsb sti imul mov add imul (bad) pop sbb jnp loopne test cli stos mov lods jns or rex.WR loopne movabs xlat xchg mov mov sub mov out insb (bad) xchg (bad) clc fcmovbe fstpl cmc movabs stc (bad) cmpsb lret or xorl pushq cwtl imul retq int or and ja jge pop pushq rcll in mov decb movsl cmp in jbe fcmovbe popfq and jno sbb pop adc (bad) xchg push jle (bad) xchg ss add add repz out pushfq cld test lea jge (bad) mulb xlat (bad) and fistpl loopne (bad) ror push pop cmp stos in sub sti mov (bad) xchg (bad) and (bad) movabs loope lea mov mov jrcxz test roll ror cli (bad) xor (bad) loopne push (bad) lret decl mov (bad) enterq add shl fistpl cmp rex.RX adc and (bad) (bad) or lea cmp xlat int3 cltd xor fsub jnp mov loop (bad) or popq in je mov jns jne clc cwtl fsubp movabs rol test sahf fwait mov (bad) test or push sbb lods pushfq (bad) jg (bad) jrcxz test mov scas xor fwait loopne mov out rep adc fnclex retq (bad) popfq imul cmpb test lods fldenv (bad) pop rex.XB repnz sbb (bad) imul adcl adc loopne test jae movsl out sti (bad) (bad) cld orl (bad) xchg (bad) shll xor (bad) test (bad) hlt loopne out (bad) mov sub in and lods cmc mov or int test movabs xchg cmp pushfq imul and mov icebp fidivrl or jrcxz pop xor in xchg in cmp xor scas add out sarb out sub loopne in jno adc jmpq sub loopne (bad) test xchg rex.RB std pushfq rex.WR repnz and mov adc sahf push (bad) xor loopne xor rex pop jnp and add loopne add loopne lret mov sub jnp push rex.WRXB and rex.WX pop xor jg jno (bad) sub flds (bad) and jge lahf and sbb (bad) mov (bad) (bad) mov in fistpll ds rcl (bad) pop stc retq in outsb cs stc rex.WXB xchg cltd add push enterq cmp cltd push or push lods stc pop jmpq (bad) retq sbb rex.WB jo mov in enterq std int xchg and fsubrs jmpq mov cmpsl mov (bad) in (bad) (bad) out rex.WXB cli shr test xchg jnp out or shll lea icebp je (bad) rex.RX fstpt pushq rcrl and mov xor and rex.RB retq cmp or pop lods jmpq js jbe rex.B repz or std insl adc add rex.WX movslq lcall (bad) cld cmp add cwtd rcrb sbb and and jge cmc xchg int3 nop jbe and xchg add push fwait (bad) and push addr32 stos sbb callq mov gs jle (bad) (bad) lock jge in pop callq fwait (bad) jnp movabs (bad) cli scas mov loopne insl out retq movsl add callq loopne xor (bad) js jno loopne xchg fnstenv loopne fbstp movabs fwait imul cmp and xlat sub loopne sbb mov adc sub out and sbb jmpq test add addr32 cmc mov xor xorl jne sub xchg sub int sub fldt rex.RB sbb icebp pop mov nop add in rex.XB loopne (bad) push test loopne xchg enterq mov pop iret rorb outsl jmpq mov mov shll adc pushq cmpl mov (bad) scas xor rcr xchg clc retq jge (bad) fsub in cmc rex.WB add pop mov sbb jmpq xor xor and cmp and add jo and lock sub rex.WR in stos insl push sbb sbb jl sbb or xchg (bad) jb push loope gs mov je (bad) mov sbb cmovb add out in dec pushq (bad) (bad) fcomi test add adc divb int pop (bad) (bad) cltd movabs loopne jg shl loopne es push cmp push (bad) jge lahf je scas fs or fucomip sarb sub es stos pop rex mov lcall pushfq cmpsl xchg loopne (bad) fisttp cld adc rex and jno fstpt invd loopne scas mov add in mov mov jmpq (bad) nop rex.RXB sar (bad) (bad) sub cmpsl retq mov (bad) and lret lea jb (bad) mov repnz rex.R fsubr fiaddl repz rex.WRB enterq (bad) add (bad) jmpq idivl push mov loop cmp pop (bad) add or pop sbb mov clc pcmpgtd retq mov pop push stc scas outsb jmpq mov movabs in lods movslq test jb sub mov in movsb xor loopne movsl cs cld add rex.WRB jns ja add (bad) loop xchg push movabs jbe jg (bad) movsb rex.R leaveq loopne and movabs sub movsl jle (bad) add (bad) fwait rex mov jmp movabs js or (bad) xchg loopne test imul and (bad) mov mov insb movabs gs callq (bad) std or lea and hlt xchg and push in jnp sbb lret loopne rex.WR pop xchg rex sarl (bad) add in test cmp scas add repnz pop pushfq jo icebp sub movsb mov (bad) icebp jbe test rex push pop in (bad) (bad) test xor fdivrl jno js jmpq xchg shrb (bad) outsb loopne icebp int3 xchg (bad) jmpq shrb cmp insl lods add incb (bad) (bad) loop add retq rex.WB insl rex rex.X pop xor (bad) fmull xchg xor loopne cwtl nop xor loopne out mov jmpq ffreep lods and cmpsl movsl sahf jns push stos loop (bad) cmp (bad) test xor outsb js loopne data16 loopne mov lea xorb loopne xchg subl psllw jmpq nop mov pushq in (bad) retq xchg (bad) push or loopne repz or mov lret fsubs fidivl and ljmp adc clc jrcxz (bad) cmpsl pushfq pop xor cmp (bad) mov mov (bad) divb adc cmp xor or xor sar xchg (bad) loopne movb sahf xchg or mov (bad) mov cwtl (bad) test loopne add cld xchg int3 ss (bad) (bad) lret (bad) jrcxz out rex.RXB gs jrcxz movslq jg rex.B xor push loopne or xchg and outsl jne jmpq rex.R jle (bad) rcrb jmpq fiaddl pop or rex.XB outsl in fadd cmp orb loopne nop lea jo (bad) int movsl add (bad) xchg loopne rex.WR push mov movsb loopne (bad) mov retq sahf rex.B (bad) sub cwtl mov lret test or es nop jg outsb or clc clc test (bad) movsl or mov sub stc fstl loopne jge rex.WRB (bad) leaveq pop nop pop iret rex.WRX loopne lahf fcmovnbe sti (bad) sub sbb rex.RXB callq sub callq loope fwait or insb (bad) (bad) cmpsl rex.WRB movabs leaveq or xchg enterq cmp loopne pop std pushfq xchg outsb sbbb roll sub xor retq (bad) mov in lret loop lahf stos sarl jp test cli mov mov and or loop imul fsubr stc or jne pop sub lret (bad) pop adc and scas cmp mov fmul adc jle mov sub jbe (bad) (bad) and mov jae sub cmp outsb loopne lahf ficoml and loopne and es movabs mov xlat sar movabs rex.RX and xorb adc rex.WXB lahf in icebp pop loop or xor pushq and (bad) fnstsw sbb (bad) test shlb gs (bad) push or adc (bad) xor mov jrcxz rex.WRX sbb (bad) sbb in lods movsl jrcxz cmovs cmc pop loopne shl adc cltd sbb jrcxz mov sbb int3 (bad) or rex.WRB rex.W adcl fneni(8087 sbb xchg mov lods callq (bad) (bad) movslq loope loopne xor (bad) pop iret in (bad) lods enterq and xchg sub lods retq setp jns (bad) roll loopne rex.R icebp nop and mov fidiv loopne and pop jne mov nop inc movabs sbb sbb jl movabs jmpq push xchg pop xchg rorb (bad) jbe cmpsl xchg fstp stos lret push adc lret cltd push adc mov clc cmp sbb sbb mov insl lret loopne fbstp xchg gs movslq cmp xchg mov add xor pushfq mov adc rex.WB ja callq or jrcxz xchg mov (bad) cmpsl sub loopne fsub loop movsb sbb jmpq adc sub lret retq jmpq (bad) mov cmp stos cmp movabs rex.WRB (bad) (bad) or pop or sub or scas icebp outsl rex.W addb push lret cld rorl rex.WR iret cmp cmpsb (bad) sbb rex.WRXB (bad) lods fdivp (bad) (bad) loopne outsb pop (bad) (bad) repnz loopne xchg pushq movabs outsl jbe rex.WRX cmp loopne out pop add fadds pushfq (bad) sub stos in rex.WRX or insl leaveq mov notl cli (bad) add std mov sbb imulb movsb (bad) rclb jne imul movabs xlat test and (bad) loope adc push pop test rex.XB (bad) mov pop rex.B or and or popq (bad) ficoml loopne outsl sbb shl rex.WRB enterq (bad) scas xor mov roll xor add rex.WRB (bad) pop mov in sbb jl push xchg jg rex.XB insb add andb movslq sahf fsubp xchg in insl movsb fs js (bad) mov (bad) test sti or cmp cld jge loopne out cmpsb fcomp cmp (bad) fucom mov (bad) in icebp xor add mull sbb fldenv int jne cmpl (bad) icebp sub mov mov sub cmp mov xchg popfq lock rex lret sub shlb jp rex pop insl mov cmp sbb movabs push shrl jno cli jo cmp sbb and or rex.R mov adc pop adc ljmp and cmp pop rex sub cmp push in movabs pushq cmp cmp fstpt mov xor xor mov jl icebp mov and movsb xchg or (bad) loopne (bad) cld jrcxz rex.WX retq jo loopne add callq cmp fcompl icebp (bad) fiadd rex.WRB rex.WRX stc sbb xchg rcrl (bad) shrl jo imul cltd mov rex.WRB sbb pop loop or add iret rex.R es rorb hlt jno movabs adc or cmp jle out push and rex fldcw sahf sub (bad) (bad) lock in add sbb mov sub fcomps orl neg jmpq cmp xor or outsb push movslq sarb jmpq movabs sub (bad) movabs (bad) (bad) movabs jrcxz (bad) movabs (bad) rex.WXB outsl (bad) xchg sbb imul or ds or (bad) mov (bad) jge (bad) enterq (bad) clc rcrb xchg mov add xchg fmul ja adc xchg data16 mov rex.RXB jge clc cmp jle divb (bad) in es lock sub (bad) shl jno pushq in insl rex.WXB add mul and ds fstpt (bad) xchg in sub jrcxz (bad) (bad) int mov xlat (bad) sbb jmpq enterq shl mov (bad) pushq (bad) fimul (bad) lret lock push or test (bad) (bad) (bad) jmpq fwait fs (bad) xchg loopne cmp loop jo (bad) jmpq and rex.WRB pop loopne (bad) movabs mov loopne out xchg pushq rex.WRB out sbb sub or data16 mov hlt (bad) pop callq mov sbb push out (bad) or mov lret push out movabs mov (bad) pop int3 sub rex.RX cwtl nop xchg loopne sub movslq (bad) sbb cmp retq mov fnstenv (bad) add shrl xchg insb adc in mov adc loopne add loopne rex.WRX lret xor loopne gs sbb lock (bad) mov xchg cmp movsb cltd loopne lods rcrl pop (bad) loopne imul loopne fs rex.R lret lods pushfq xchg shl shll xchg (bad) data16 pop add test push add (bad) rex.X enterq loopne sub or cmpsl cmp stc fst movabs sub loopne push add xchg retq sbb (bad) scas in loopne (bad) (bad) jmpq loopne (bad) fdivr mov shl lods (bad) and mov mul add in pushfq sub or out xchg imul (bad) loope xchg jbe and out mov (bad) mov cmc mov jno jo retq fsub (bad) push add pop xchg jrcxz jge pushfq nop outsb shl adc scas ljmp int3 out nop fdiv mov and push mov mov loopne xchg lock mul test rex.B rex.XB add scas loopne loop xor cmp icebp enterw lret (bad) out add stc add mov pushfq rcrb lret (bad) imul loopne fidivrl pushq jb shl movsl lret ds clc xchg decl push cmp movabs adc je cmp (bad) jno rcr (bad) repz jl mov push fistl pushq popfq sbb cwtl cmc jge icebp adc rex.B xchg stc mul xor ss outsl ja pop loopne or (bad) loopne mov loopne callq cs pop rex.WRX enterq xchg sub jg mov and incl mov or pop mov mov and or sbbl and mov ss (bad) movabs (bad) mov sahf (bad) pop loopne xchg fsubrs movabs mov rex.R mov (bad) add loopne mov in fstp rex.WX (bad) mov push or (bad) (bad) rolb mov fnsave fsubrl mov or pop (bad) pop xor rex.WRXB or shl mov ficompl loopne mov push sub push loopne rex.WRB (bad) (bad) add fdivs loopne movabs (bad) mov loopne loop (bad) int repnz loopne mov test adc enterq jrcxz (bad) pop jnp lret jle rex.WB fimul xorl lret insl pushq insb (bad) (bad) cmp cwtl in in jle rex pop or jb push out shrb sub xchg (bad) sub and and rex.WRB addr32 mov sub retq (bad) enterq int3 movslq jno in (bad) mov xchg imul cmpsb sahf add mov movabs (bad) (bad) or rorl movabs out or xlat push add or (bad) cmp (bad) pop js fcompl callq jrcxz mov xchg (bad) add leaveq test mov lret rex.WRXB pop rex.WX es rex.WRB and adc and or xlat push scas loopne je fcompl shl mov and repnz mov (bad) cltd xchg clc xchg pushfq lret (bad) cld or shrb rex.WRX (bad) xchg movabs (bad) cmp scas and sub xchg (bad) insb lret fcoms and retq rol fcmove mov (bad) lret dec (bad) (bad) adc cltd cmc gs orb mov pop pushq loopne psraw icebp gs xchg fiadd add (bad) loopne outsl xchg (bad) rex.WB pop adc imul sub or ficompl rex.XB mov rex.WRXB rcr (bad) loopne jge pushfq (bad) adc stos or push roll rolb adcb (bad) movsb cli add in add sbb adc mov pushq (bad) xor imul cmpsl mov loop (bad) adc mov add push sbb pop in fdiv cmp pop mov (bad) je (bad) xchg pushfq pushq xchg mov and js sbb add clc (bad) in sbb and (bad) cmpsl (bad) rex.XB in cmp rex.R adc loopne loope hlt jno sub nop enterq rex.WRXB (bad) cmp in clc icebp rcl jne test (bad) loopne mov (bad) idiv in imul imul rex.RX outsl test (bad) in fnop mov scas (bad) in (bad) rex.B imul jo xchg jnp popq je callq mov sub jmpq sbb jle out xor add cmpsb ror add sahf and mov out (bad) pop fmuls (bad) xor push rex.XB push fwait add and scas outsb rex.RXB loopne pop movslq xchg (bad) xchg out or repnz test fisub loopne sti mov add push pushfq (bad) (bad) jle adc (bad) loopne sbb cmpsl leaveq mov jo loopne and and out adc retq lret (bad) fstl mov jrcxz or in cli rcll adc or and cli (bad) pop in (bad) lret cltd mov mov int cs adc test fs jno and rex.WRB loopne jnp (bad) cmp rex.WXB mov or rcll (bad) jo loopne mov sbb mov add sub jl jo vcvtps2qq (bad) (bad) jo cmpsl (bad) loopne sbb pop push sub in rclb (bad) test mov xchg sbb or sub xchg push popfq pop xor adc and push sbb js mov out mov add sbb cmp xor int sbb sub insl incl pushq mull (bad) mov test lods mov cmp lret add (bad) adc (bad) loopne cmp jg add push push clc retq add movsl rex.R and sub stc cli (bad) pop (bad) mov pop jg (bad) rex.WXB rex.RX loopne lret xor ja loopne add scas loopne xchg jrcxz mov xchg sbb and incb cmp (bad) loopne test mov loopne lods mov jmpq (bad) in lret loopne in (bad) out add cli jb fucom cmp rex.RXB loopne xchg xchg rex.R (bad) (bad) movabs movsb loopne (bad) sarb rcr cltd xchg mov or scas loopne adc in enterq rex.WR cmp add cmp (bad) cwtl sti mull mov fisubrl adc jmpq cmp loopne pop repnz je and xor push rex.WB rex.XB fistl repz int (bad) push sti scas xchg loopne cmc pushq mov retq sbb push adc pop imul cmp sbb loopne fist adc xor rex.WB lahf loopne sbb fwait out cmp rcrl fistpl push movabs movsl (bad) cmp rex.RB cmc mov sub mov fwait xchg lret stc and pushq xchg or insl (bad) (bad) xchg and cwtl mov and jmp and loopne cltd cmp loopne mov sub (bad) (bad) (bad) rex.X xchg pop jb jl je leaveq loopne rex.W ror data16 in scas lock mov mov mov xchg mov jg or sbb mul or (bad) adc (bad) stos loopne cmpsb sub mov rex.WXB jl (bad) movabs callq jmpq or test cs outsl cltd adc cld cmp (bad) movabs cmc loopne jp insb (bad) sti loopne mov push add (bad) mov sbb scas or out stc mov movabs xchg incl mov ror cld pushq fisub fnstcw jmpq and jo rex cmpsl loopne rex.RXB imul mov (bad) cmp (bad) rex.RXB loopne cld cs or rex.XB (bad) in mov addr32 jg (bad) loopne adcb stos int3 xchg cli or sub lods in fdivr sub mov mov loopne std sbb adc pushq mov or in movabs (bad) sbb cmpl push out roll loop insl jns (bad) jg cmp cld (bad) or (bad) mov rex.R sti in sbb loopne mov and and cmp movabs fldt lret or or rclb jbe imul shlb (bad) mov add jo (bad) sub sbb scas test loopne js loop addr32 cmp cmp cmc adc test cmc pop mov es mov test xchg rex xchg leaveq xchg adc mov ror shlb movabs (bad) or loop sub rex.WXB leaveq loopne mov popfq loopne rex.WRB jle andl xchg mov sar rex.WRB adc mov (bad) data16 hlt loopne lret adcl cmpsb in add rex.WR movsl adc pushq or (bad) mov cmc out (bad) movabs xor icebp adc int3 insl loopne movabs lods nop cld jnp test sub add movabs callq xor xchg mov sbb (bad) sar hlt (bad) jns (bad) mov fwait addr32 (bad) lret iret scas cs rex.WX jmp mov sbb icebp rex.RXB callq sub (bad) fwait push out std lahf sti push or (bad) sbb (bad) sub push repz decb (bad) sbb mov in cmp (bad) and inc mov iret (bad) rcrb movabs add cmpsb xchg jg sbb pop fsub adcl mov and out outsb rex.RB and imul sbb jno es sub rex.RX (bad) (bad) imul pop mov fisubl outsb rex.RB gs sbb fadds pop insl dec retq loopne cmpsb (bad) xor fs out (bad) sub js rex.WRB cmp and rex.RX mov (bad) cmp mov rcrb mov adc (bad) jns callq repnz pop (bad) imul (bad) sub or addl xchg rex jne jmpq (bad) (bad) test in cmp test movabs (bad) addr32 in mov sbb fisubrl sbb push (bad) loopne mov jo mov pushfq mov pop jmpq movabs sbb cmpsl out mov sbb (bad) loopne and sbb fwait int (bad) rex.WRXB loopne pop fistp loopne fldenv add (bad) sub loopne xchg mov outsl leaveq xlat rex.WB (bad) (bad) ficom jge cmpsl test (bad) push jl cmp sbb (bad) mov test pushq stos or int3 movabs outsb jae outsl lret sbb (bad) pop xor and add popfq lods add (bad) data16 loop adc mov adc and cmp (bad) movslq addr32 and rex.W in test rex pushq icebp movsb outsl xchg (bad) xchg fcoms rex.XB lret (bad) pop addr32 in and (bad) imul int3 pop outsb (bad) pushfq out or scas jl rex.WXB stos (bad) (bad) pop sar callq jae jo insl xchg jns push rcr rex.XB mov lahf rex.WB out ds and orl fisubr mov shll fimul cmp test (bad) jo movsb std fdivl rex.WR sahf in out jge rorb fcompp rex.RX shlb xchg rcr loop (bad) mov mov fs fdivrl rex.RB lods (bad) mov adc iret jae lret and (bad) (bad) clc mov out jle push and add pop push (bad) in mov (bad) cmp (bad) jb mov and (bad) mov rex.WX rex.RX gs addl sub in es or loopne jl subl movsb imul insl mov xlat xor sub sahf xchg mov enterq mov xchg cmp lods rex.WB rex.RB rex.RXB cmp (bad) rex.WRXB fldenv insl push pop or notl (bad) lods pushfq push and in pop sub push (bad) (bad) (bad) pop sbb insb pop std lods jbe rex.WRXB clc (bad) and rex.X outsb test xor (bad) neg movsb (bad) cmp rorl cmpsl in xlat std pop add fcomip rex.WB movslq movabs rex.WRXB decb ds mov pop rex.X mov mov leaveq outsl (bad) mov mov and or sbb add int3 iret (bad) (bad) lock or mov jmpq push jne outsl jle rex.RXB rex.R (bad) lret in popfq out lret movabs js add cmpsb (bad) adc jp adc (bad) (bad) cltd sbb (bad) or xchg xchg loopne frndint lods adc cmp in sub cmp loopne cwtl (bad) pop mov (bad) rex.WX lret movsb push sub jp rex.X cltd (bad) in std mulb outsl movabs lods mov jae loopne,pn cmp xchg loopne cmc movsl jge (bad) add cs ljmp std (bad) cmpl (bad) jl (bad) cmpsl add and hlt mov jmpq es ss outsl loopne in sti insl adc push (bad) loopne stc (bad) je mov cld xchg push loopne in jnp enterq movabs xchg and mov lret (bad) movabs xchg (bad) xchg test lods lea xor retq movsl pop sbb (bad) out outsb adc testl lea lock adc sbb cltd rex.WRXB (bad) sarb (bad) rex.WRX in mov in (bad) pavgw mov (bad) clc xchg mov or incb out icebp incl jo movb push shll cmc jne rex and or fcmovnu (bad) movabs je xchg push repz xor push sahf shl retq xor mov nop mov mov in rex.WRX retq jae (bad) movslq int in sub rex.B hlt out outsb clc retq lahf fwait sbb insl in (bad) mov jns lea cmc pop fstl gs movslq push out sub enterq cmc mov rcrb lock subl stos or rolb enterq and movabs lret jl (bad) out mov or rex.WB push out jrcxz cmpsl add mov (bad) xchg incb mov in gs (bad) rex.WR (bad) retw (bad) adc mov cmp lods ds adc movsb rex.RB pushfq add lock add jle andb add repnz cmpsl or jg lods loopne xor int3 jne repz enterq mov ror in cmp int3 jb stc and rex.WRB jo xchg adc hlt sbb sbb (bad) cmp and and ss fs outsb sbb cld (bad) mov jns and cmp sarl fs mov mov adc retq adc and jo iret and scas pop xchg iret jrcxz lahf repnz rex.RXB rex sub movabs movabs (bad) pop xor (bad) sbb push shr lret test outsb clc std ja es push outsl icebp test (bad) repz sbb in jb push (bad) lret jmp mov (bad) in retq pop jne mov imul and rcll push rex.RXB pop (bad) rex.WRB adc (bad) add adc sub xlat xor or mov jmpq sarl mov callq sub gs (bad) xor cmp clc cmp pop adc subb or test adc pop fstp mov mov pushq in sbb negl push subb (bad) clc xor rex.XB sbb loopne iret test sarl cld mov out or mov xor (bad) sti (bad) pavgb and fdivs pop test retq jae or pop mov cmpsb (bad) loopne (bad) movsb fisub (bad) stos mov pop imul lods jl outsb clc decl sub and xor xor adc loopne or jbe rex.W movabs (bad) in (bad) rex.RX mov xor and rcrb push (bad) loopne lret loope cmp and adc xchg cmp in adc movsl loopne pop fcoms idivb pop loopne movabs loopne hlt shrl jrcxz in pop pushfq andl cmpsl loopne rex.WR rex.WX (bad) (bad) jmpq jp and mov shrb adc sub loopne leaveq mov cli decl xchg cmp movsl (bad) loopne and scas adc (bad) (bad) in loopne pop mov pop (bad) test sti xchg (bad) jo insl sub push jne stc jmpq adc movabs icebp or loopne (bad) pop add pop imul test sbb mov cmp loopne,pn (bad) rex.W xchg cli cmc adc int push (bad) (bad) xor stos retq jo sbb outsb test lods imul loopne iret mov sbb outsb int out mov xchg repnz enterq test (bad) (bad) (bad) lods loopne mov rex.X movsl movabs loopne push icebp insl rex.W (bad) and jbe retq pop movabs fistpl rex.WX (bad) es jl add mov cmpsl xchg jmpq movsb sahf fs and pop adc rex.XB jmpq jrcxz loopne add xor loopne (bad) xchg mov shl jmpq sub sbb cli cld sbb mov cmp (bad) mov int3 fsubr fidivrl out out mov pop (bad) loopne (bad) hlt repnz mov loopne leaveq rex.RB push sbb rex.WR loopne rex.XB hlt sbb lock loopne (bad) leaveq rex.WRX jle imul shrb loopne jbe enterq fsub mov (bad) pushq fs icebp add mov (bad) loopne push jae loop movsb xchg sbb loopne xchg rex.WRX test sahf (bad) shr mov loopne (bad) jno rex.RXB icebp rex.XB (bad) mov lock and rex.RXB loopne (bad) sbb sti mov pop loopne cwtl out addr32 xor (bad) cmp lret adc jl mov jns data16 (bad) jge jg rex.WX pop sub loopne jl push cmp sub pop test insb rex.RX adc and jrcxz cmpsl adc and rol sti movabs callq mov fcmovbe movabs xchg jb in (bad) xor cmc sbb sti and test jmp cwtl loope stc loopne mov (bad) or mov cs add push cmp leaveq jae xchg (bad) (bad) sbb cmp (bad) cmc pushq rex rex.XB (bad) es mov rex.RX jl stc out loopne adc (bad) sar sti sub jno cmp (bad) xchg sub add rex.WX rex.R and jne test test xchg loopne adc ds rep (bad) (bad) (bad) jo sbbb mov (bad) cltd in rex.WRB jae xchg pop adc xchg (bad) int rex.R lods mov jmp ss xor loop loopne rex.WR add fcomps clc mov mov rex.WR and pop xor rex.RXB sahf cmp fsubrp data16 pop or sub xchg push adc sbbl in cmpsb loopne rcll (bad) stc test mov xor (bad) es jne and enterq addl fsub (bad) insl and xor movabs jg retq mov add xchg jle (bad) cmpsb (bad) sub cli (bad) (bad) test (bad) rex.WB int add loop add loopne rclb mov rex.RXB or lods sub xchg pop adc rex.RB test lret jae sbb test cmp cmpsb mov fmuls insb (bad) sti mov ja rex.RXB orl (bad) jb mov jnp push loopne callq movabs mov mov cltd repnz adc mov pop pop dec cmp stc jrcxz (bad) jg rex.R mov sub xchg (bad) and movsl ljmp fisubr orb in loopne add xor scas or rex.WR movsl callq jne xlat xor loopne cmp sbb adc jo loopne rex.B or fiadd pop rex.WR xchg or push fsts loopne mov xor in in int sti xchg cmp xchg mov data16 xor xchg int xorb mov sub pushfq rex.WXB incl (bad) and rcrb hlt or retq adc ss (bad) add and loopne sbb stc and ss pop in xchg test movsb xchg loopne sbb push imul (bad) rex.WB pop (bad) rex out or sbb (bad) loopne lods in xor bnd loopne imul rex.WRX jp sbb mov push mov rex.B jae sbb jo rex.RXB loopne sub js rex.WRB adc movabs retq addl loopne mov sar add jns out movabs sub jle sub loopne addr32 cmpsl jp mov sub jnp movsb lahf lea in lock and test xchg popfq adc (bad) movabs rex.RX mov mov (bad) pop retq lock sbb repz enterq add pushq lret pop (bad) mov cld sahf out movabs pop fwait lods push mov (bad) mov and loop movabs sbb (bad) movabs or loopne icebp mov fmull rex.RB xchg loopne int test movabs rex.WB mov ficompl sahf or clc or (bad) sar lea sbb xor imul sub ja clc adc adc mull mov xor (bad) data16 mov pop sbb (bad) rex.R fcoms (bad) cmp movsl in xorl add in jrcxz (bad) mov retq addr32 xor rex.WR loopne loop push adc rorb out nop adc fbstp (bad) jbe (bad) gs add and rex.XB (bad) jb loopne ror imul adc jno sti and jns push jne fsubs clc loop mov xchg adc xchg (bad) mov (bad) stos fistpll jbe clc imul xlat (bad) rex.RXB mov jg (bad) in (bad) jle pop (bad) (bad) movslq imul cltd xlat (bad) rex.WRXB pushq (bad) insl addr32 add (bad) or movabs sub mov mov loopne rolb mov sub rcl jne cmp add sbb imul loopne popfq rcr mov jmp cltd in xchg movabs subl repnz in rex loopne adc out mov rclb (bad) sub loopne lea stc lret movabs bnd pop loopne rex.XB rex.RXB fldl mov loopne rex.RX add pop ds (bad) mov (bad) sbb fstps mov or inc mov sbb sarl xchg push rex.WRX sub (bad) loopne int3 xchg sub (bad) (bad) mov mov xchg test frstor and in pushfq cmc rex.RX loop jmpq xchg loop xchg movabs lret (bad) (bad) cmp icebp lret lods movabs divl or adc cltd (bad) sahf and mov movsb adc and lea je add pop (bad) lret cmpsl sub (bad) (bad) mov mov (bad) pop loope jns std insb add loopne xchg xchg mov (bad) push rex.X rex.WR cmpb add loopne enterq lods xchg push cmp mov fcomi pop insb imul in and lahf add popfq rex.WRB lods cld jns or pop outsl add and loopne pop mov pop loopne mov (bad) cli ds shlb (bad) (bad) loopne lret (bad) rex.W xlat cltd add (bad) jbe rex.RX sti or movsb sbb (bad) add adc fisttpl (bad) leaveq js loopne repz (bad) stos cmp loopne ja retq in rex mov cmp movabs push sbb insb jge mov shl push add lods out cmp out and add xchg loopne jp lret (bad) push movabs xor pop ss sbb cmp rex.WR and retq adc push rex.WRX mov mov mov xor or iret mov test retq je or mov (bad) xchg icebp in pop xchg andb adc loopnel stos add pushq mov sub out xchg jg movabs xor test pushq add rex.RXB xchg rex.WRB and (bad) push pushfq loopne cmp gs mov in idivl sti in out nop hlt pushfq xchg add cwtl jle add xchg xchg iret icebp jrcxz add nop je (bad) jmpq (bad) out sub js mov rex.WRX (bad) movslq movabs out cltd mov out shrb in jrcxz cmp xor (bad) pop popfq shrb jg test xchg (bad) mov mov (bad) push rex.WB rex.WR movslq or sbb jmpq rcrb add pushq (bad) rex fidiv push and rcll mov xchg (bad) rolb or roll jl loope rex.RB imul js mov sbb jae rex.R (bad) sbb (bad) or add (bad) adc xor mov xchg jrcxz popfq (bad) xlat (bad) mov xchg (bad) loopne int3 movsl mov (bad) rex.WR ss outsl xchg or fiadd adc paddd movsb sbb out fmull adc mov testb movabs cmp pop pop (bad) retq xor insl movabs lea and and sbb imul repnz push xchg (bad) repnz icebp rex.B repnz adc jrcxz (bad) movabs add (bad) insl mov fidivl ds sub xchg adc xchg push mov cmc adc and fwait in (bad) or rol setg sbb cld cmp mov and fnstsw sahf in sbb insb xor mov pop int3 mov fidivrl (bad) fcoms mov jle out loopne retq in pushq rex.X je mov ja xor sub (bad) in rex.RB pop jne in mov repnz or loopne push test rex and add sub cmp rex.B xlat (bad) (bad) rex.WX mov cmc fsubrp xchg loopne rex.W ja pop loopne adc pop test cmp jrcxz leaveq retq (bad) mov stos xchg (bad) push add shr sub cmp lea (bad) xor pop enterq mov cmp jmpq xchg sub add jle mov jg incl loopne sti lods add (bad) push iret (bad) test lods cli loopne (bad) test (bad) pushq rolb xchg js lods mov pop xor rex.RB lods (bad) xor sub (bad) in cltd out flds rex.WRXB movabs pavgb mov stos std sti fdiv mov test rex pop out mov push (bad) push in or fsubrp add int (bad) sbb callq pop mov sub sbb sbb pop sbb out xchg jmpq or jmpq xchg xor or popfq cwtl (bad) (bad) stos (bad) (bad) pushq movabs test sbb out add (bad) or push rex.RB rex.WXB jle pop nop (bad) fucom rex.RXB (bad) sbb xor loop enterq (bad) movabs cmp sbb mov repnz jle movslq movsb imul ss (bad) (bad) gs (bad) int (bad) data16 xor (bad) fstl adc mov loopne sbb (bad) push loop (bad) repz rex outsl pushfq and rex.WX jnp cmp or cmpsl stos test rclb iret fdivr js loopne adc data16 and (bad) rex.WX loopne,pn adc sub rsqrtps loopne xor gs (bad) loopne movsb xor movsl retq mov loopne (bad) (bad) loop xor pop loopne xorb rex.R mov insb (bad) out movsb leaveq clc loopne callq mov (bad) (bad) lahf add add (bad) movabs rex.B fsubp pop lods sbb andb cmp (bad) shll jmpq or mov psubd push sub iret jl xchg cld (bad) (bad) movsl cmp lods and loopne (bad) sbb xchg rex.WRB lods loopne fisttp jl (bad) insl lret mov retq and jo in mov cmp mov or jmpq in lahf mov int xor push mov in (bad) and rex.WXB enterq (bad) movabs cli (bad) mov (bad) adc add jno cmp jg sahf loopne or sbb add imulb rolb xor xchg rex mov movsl fnop jle sarb jb mov (bad) push pushq shll rex.WRX loopne,pn rex.WRB cmp fnsave add icebp add mov xchg mov sti (bad) jg loopne outsl jbe sbb xchg (bad) movsl adc rolb cmpsl loopne mov xchg insb cs and movabs or leaveq or loopnel push rex.X jb nop loopne xor stos retq and rex.RB fldcw and sti pushq rex.R imul xchg pop (bad) outsb (bad) out test loopne xchg mov mov adc rex leaveq cltd loopne or jrcxz push push cmp rex.WRX lret (bad) fwait kmovw (bad) (bad) xor hlt xchg loopne out movabs mov mov jl add mov adc (bad) callq adc ss rex.WX mov sub movsb (bad) nop pop fs xchg imul xchg sbb sbb adc (bad) (bad) mov push (bad) xchg rex rex.WXB pop mov loopne sub sarb mov movslq xchg loopne mov cmp int3 in mov movsb push cltd xorb and (bad) scas sbb mov je sub in sbb (bad) enterq loopne gs rex.WB scas test pop loopne mov adc loopne sti lea andps fiadd sbb insl ja (bad) loopne in lret xor sbb rcrb mov retq jb (bad) mov (bad) addb fwait loopne nop movsl pushfq (bad) addr32 push fdivrs cmp leaveq loopne movsb xlat xchg sti loopne mov xchg adc fsubr loopne sarb mov loopne icebp xor movabs sbb cmp jne callq mul lea lods cmp rex.WRB jmp sbb add bnd (bad) loopne push (bad) rex.WX loopne jle (bad) mov loopne subl mov loopne (bad) stc xlat std (bad) sub jle push rex.RB (bad) mov repz or popfq (bad) clc jns (bad) adc gs (bad) (bad) scas (bad) jg add or and (bad) sbb sub mov jmpq mov push or loopne rex.RX mov and fdivr outsb (bad) in pop (bad) callq loopne mov lods xchg mov and mov loope shlb xor pop je pop ss jrcxz (bad) rex.WR (bad) loopne mov mov pushq (bad) fisubrl (bad) data16 (bad) jg push rex.WRXB test (bad) cmp jo loopne xchg fldl lret mov mov repz pop cmpsl add fwait scas jne mov imul jle sti adc xor movsl add fistl loopne movabs pop rex.RX sub (bad) stc jmp cmp adc in adc ds in push js lock scas movabs in adcl jmpq pinsrw (bad) leaveq jl add movslq and retq rex (bad) pop rex.WRX cmp loopne icebp insb leaveq jmpq rex.WXB loop (bad) jmp (bad) movabs movabs movabs rex.WX rex.XB lea xor pop gs rex.RB mov push mov mov cwtl (bad) sbb mov rex.WRB callq test mov cmp and repnz cmc shrl pop rex.RB fstps sbb popfq add mov rex.RX mov loopne callq or mov mov jae rex.WB adc sbb hlt lods stos cwtl or in xor subl (bad) rex.WX shl push repz jb movslq jbe xchg add adc (bad) sahf mov or pop or loopne (bad) subl rex.RXB sahf jl mov (bad) adc mov xor sbb shrb (bad) loop mov loopne sbb jp movabs paddw rex.RXB fs pop loopne (bad) cmpsl (bad) (bad) sub sahf pop add pushq mov sbb gs loopne or mov test mov movslq loopne rex.WRB loopne sti icebp retq and lahf imul (bad) mov cltd sbb sbb xor sbb jrcxz adc callq jge fwait (bad) add push (bad) loopne sahf lods (bad) rex.B rex.RB fstpt test cmc fsubrl stc nop lods add jrcxz sub jb adc in lods (bad) sbbb loopne vxorps (bad) repz callq and loopne cmp jrcxz jns loopne loop iret lods popfq mov push xchg loopne fimull movsb mov xchg cs enterq pop sub pushq xor (bad) sub (bad) and shl rex.WRX adc xchg (bad) xor xor (bad) (bad) (bad) xchg loopne mov mov mov push loope jns pushq stc mov imul jae rex.RX or pop sti (bad) movabs rcr ja jp cmp rex.R mov xchg movabs out leaveq (bad) pop outsb ficomp add mov and xchg mov rex.WB pop rcrb mov rex.WR callq adc rex.WXB (bad) rex.R in loope pop or or loopne ds sub add icebp sbb std mov sub int3 mov in pop loopne jo mov xchg push (bad) pop and cli sub popfq loop callq push rex.XB (bad) rex.WXB loopne add pop loopne clc (bad) nop cwtl mov cli and (bad) (bad) sub adc test push fist pop or enterq in sarb sub movabs (bad) loopne add add mov (bad) loopne rex.WRB rex.RX cld mov jl sub loopne cmpsl sbb rex.XB loopne sub push jp and mov stos movabs movabs and adc stos ss mov es rex.WB (bad) mov leaveq out mov repz or add imul jne adc decl mov cmpsl sbb (bad) (bad) pushfq sti adc pop and (bad) fnstenv sbb xchg xor mov (bad) jg fmuls ja xor gs movabs adc (bad) mov (bad) loopne (bad) jnp sub pushfq cmp mov loopne (bad) rex.B cmpsl lret fucom loopne jl xchg or fild rorl loopne out rcl and sar add rex.B loopne fimull or push imul bnd in mov gs out cmp cwtl (bad) rex.XB rex.W movsb in pop fs adc callq jmpq (bad) (bad) jp and sub or rex adc fstpl int3 cmpsl push insb icebp jmp sbb mov ficompl rex.XB sbb pop in movslq (bad) cs fstl repnz mov lock lea loopne imul (bad) shlb push xlat test loopne cmp and push repnz push imul test in rolb adc or rex.RX adc fwait and (bad) loopne leaveq clc fucomp enterq lret or loop repz stc lods insl and xchg loopne (bad) push negl scas and sbb rex rex.RX out fdivl jge hlt (bad) mov xor popfq mov mov sub rex.W (bad) sbb leaveq pop add sbb movslq add sahf nop push xor and pushq add rex.WR (bad) shrl (bad) clc rex.WB movabs ss stos cmp xchg (bad) loopne mov (bad) fwait (bad) mov outsl cmp push push fisubl cmpsb rcll lods (bad) sub (bad) and cs mov (bad) cmpsb rex.XB rcr popfq mov repz (bad) out (bad) loopne rex.WR cs rex rolb pushfq (bad) rex.WRXB add xchg jge mov mov fnsave (bad) loopne rex.WR int3 mov mov or mov movabs loopne (bad) (bad) rex clc cwtl (bad) mov movabs (bad) out (bad) out leaveq lret cmpsl xchg push adc pop psubusw cmp fisttpl cs xchg push pushq (bad) sub imul mov pop (bad) add xchg (bad) sbb adc loopne mov out (bad) lret sahf lods sbb movabs add loopne cmp cmpb adcl jno in pop callq scas rex.RXB (bad) insb (bad) rex.RB (bad) (bad) rex.WXB mov and and in rcll cmpb loope mov rex.WXB movabs or jae or rex.WB je or loopne addr32 clc sarl mov sub cld (bad) pushq (bad) scas ss repnz jrcxz mov cmp (bad) (bad) cmp lods mov cmpsb jb rex.WRB pop rex.WX add icebp mov andb movsl or repz rex.WRXB stc xchg rcrl (bad) int3 (bad) fsub gs (bad) mov clc fneni(8087 lahf sbb cmp and nop cli in mov (bad) retq add retq mov adc movabs jl movl pushq sbb (bad) fistp jo rex.RB jne rcr push shlb sbb sub jne lret fistpl xor add retq in sbb adc in test lods or adc or stos test xchg adc retq jo in mov (bad) jnp and jne (bad) and lea loopne xchg cmpsb xor in adc add mov ds mov in push stos imul or repz rorb adc mov outsl xorl cmc enterq loopne (bad) iret in xchg sub (bad) ds xor pop movsl fsubrp movsl adc lret cld in xor imul lea insb rcll mov sub sub adc (bad) jmpq loop pop and sub mov idivl push stos jp sub movabs (bad) (bad) lcall imul and fmul and rex.R rcrb in (bad) or (bad) xchg add (bad) jl retq test lret (bad) sbb fsubr mov (bad) loopne mov or incl jno add jmp (bad) sbbl out rex.WR or rex.WX sbb add sbb jg xchg loopne sbb and outsl lret add sbb (bad) cmp fdivp sbb rex.WR and fadd mov cmp jo xchg insl lods movabs mov iret mov loopne and ficoml cmpsl loopne fwait pop or push ss out sub xchg (bad) cli rex.RX retq adc cwtl sti movabs iret (bad) rex.RX movabs repz outsl xchg lea js rex.B rex.WR roll jle adc in jg jns mov cwtl testl loopne pop mov out xchg cmpsb cmp push sbb sub mov (bad) movabs jp scas callq pushq (bad) rex.WRXB ss shl (bad) in shll es mov loop insb loopne rex.WRB movslq cmp or rcll mov mov add in (bad) nop (bad) sar or (bad) rex.WR push js sub jp jbe fucom clc sbb scas pop add and push pushq negl rex.W callq (bad) callq add movabs xor jge pop rex.WXB cltd out in xchg adc fistl pop mov sarb rolb in cltd xor jl movsl fsubrp pop loopne or movabs mov sub pop or (bad) loopne (bad) retq test (bad) je jmpq iret nop rex.WRX and push movabs movabs add (bad) repz sub cld push cmp test adc (bad) and stos lcall lock (bad) (bad) and jbe test xor ficoml in nop jbe in and (bad) sub fnstsw rcl (bad) mov (bad) (bad) xor int3 cwtl push pushq jl jle pushq (bad) push push and es leaveq loopne pop jmpq loop (bad) cltd lret loopne movabs (bad) je jle jo repnz repnz loopne popfq rex.WX and sbb and jne fwait popfq (bad) mov rex.WRX mov mov lret push pop cmp cld (bad) cmp loopne and mov mov loopne or loopne jns movabs (bad) jg pop movslq jg pop cmpsb adc nop pushq rex.WR shlb (bad) (bad) and sbb neg sub adc and cltd (bad) xchg callq jl (bad) (bad) movabs andb mov rorb sarl sub (bad) fsub sti or add cld jg xor lea gs (bad) lahf leaveq loopne rex.WX push clc loopne mov fwait or cmc cli jmpq in movabs in push cmp fcoms xchg lahf repnz cmp sub sbb jle lahf rex.WXB mov xchg or push cld (bad) jp loopne rex.WXB xor cs jge adc and sub sub mov push xor loopne sub cmp (bad) pop je roll jmpq cs shll jo pop (bad) loopne rex.RB xorl and (bad) or (bad) and popfq lods loopne and rex.WR sarb pushq orb xor xchg loopne loope jb fs in mov rex.RX (bad) lods cmc (bad) lret loopne loop jge sbb loopne scas jrcxz pop jne add test movabs or imul std cs (bad) lods out add jnp repz sub retq fs xor mov (bad) adc (bad) fmull jrcxz scas int3 mov in movsl fdivr (bad) add xor mov insl cmp xchg (bad) (bad) jnp imul adc retq cmpsb (bad) pushfq (bad) in mov mov movabs mov add sbb rex.RX jrcxz pop pop jo movsl push js jmp out clc pushq push push (bad) fs adc push out (bad) sub cltd adc sbb sbb (bad) or (bad) in jle (bad) (bad) push pop rcr movabs in or sti xlat mov lods lock add mov mov pop in fs sbb mov sbb and mov sub (bad) in gs rex.WR fild push mov mov pushfq js mov sbb xchg lret (bad) or movabs sti cmp cwtl (bad) movsl push or loop mov mov rex.R movabs roll (bad) mov (bad) rex.RXB leaveq cmp ljmp fsubrs sahf in (bad) mov add leaveq cmp sbb xor push in addl rex out (bad) sarl mov (bad) and sbb jns mov cmp addb int and sbb incl in mov fistl add fisubl jo jno pop cmpsl out sbbb jo fldcw iret sbb sbb mov pop retq add sbb rex.WRX (bad) (bad) jne pop repnz or push cs cmp fisttp outsl cmp rex.W jrcxz insl lret rcl cli enterq pop ss rex.R sbb mov mov add retq pop roll scas andl fcmovne rex.R loopne imul sbb lods in add jg add shlb out jbe mov xchg pop (bad) loope pop adc repz jle lods (bad) cmpsl in je sbb cwtl xlat ds rex.WRX (bad) in lahf in xor and loop (bad) fcomp out push (bad) cld push sub rcll nop in (bad) jp jrcxz rex.WRX insl mov mov push (bad) rex.B adc int and pop scas mov (bad) (bad) adc clc (bad) fcmovb rex.WR pop (bad) push (bad) imul (bad) lods add movsb in (bad) stos enterq int3 mov out jnp jp scas retq fstl mov (bad) cmp outsb jo and cld stos sub mov xor jp fidiv jno nop enterq jmpq movabs jbe xchg int3 sbb rex.R (bad) pop out jo pop mov and add loopne cltd cli mov enterq rex.WXB cwtl (bad) (bad) int adc sub rex.WX rex.R stos and (bad) jmpq in xchg add rex.WRX or outsb movslq sahf mov xchg jmpq push stos (bad) sbb mov push xor je mov xor leaveq (bad) movabs imul adc sar cmp cmpsb loopne jl test pushfq (bad) icebp loopne lods loope or jbe retq cs (bad) xchg out imul cmpsl (bad) lahf (bad) sub cli fsubrl (bad) loopne icebp push popfq cmc or outsl (bad) (bad) imul (bad) (bad) (bad) jmpq jno (bad) sahf sub xchg std mov cltd inc and xchg mov or test xchg rex.WXB jle int lret or lret mov callq mov movsl xchg or lods cli imul mov (bad) adc adc sti stos callq rcr int cmpsl sub pop jmp mov movabs cmp rex.WRXB xor repnz mov add pop sar (bad) adc push nop (bad) test test loopne ja cli (bad) rex.R pop xor mov (bad) loope movabs or loopne mov rex.B fcompl rorb xor mov ss adc or rex.WXB (bad) insb (bad) push add sti adc push bnd jae jbe js mov or outsl (bad) es cld rex.WRB iret (bad) loopne subl loopne pop (bad) cmp add rex.WRXB jle movsl pushfq rex.X pop rex.B sub adcl loopne jl mov and rdpmc loopne and mov pop loopne pop mov pop jmpq cmp sahf add adc jno movabs rex.WR sbb fs loopne rex.W add fnsave loopne mov in je (bad) out retq shl adc and xchg mov loop jg lahf sbb rorl (bad) (bad) leaveq (bad) xchg push mov (bad) outsb enterq mov (bad) sub pavgb cmp fs (bad) scas lods cmp rex.W and (bad) jmpq hlt nop sahf enterq insb pop cmp adc or fstps rex.WX (bad) pushq xlat lret xchg rex.RB rex jle stc jmpq (bad) jo mov sub (bad) (bad) sbb std loopne (bad) lret addr32 in cmc lods sub test loopne sti jge rex.XB (bad) and repnz rex.RB out sbb jrcxz (bad) (bad) test lea loopne (bad) xlat mov loopne mov test in lret sub pop lret xor in (bad) cltd out adc push xor jle xor movabs mov in pop retq (bad) jmpq sbb loopne pop (bad) enterq repz cmp jp imul pop (bad) and xchg lea fiaddl sti adc (bad) (bad) sbb loopne movslq popfq cmp jb xor mov fsubl test xchg movabs icebp (bad) scas (bad) (bad) addb (bad) (bad) mov repnz rex.X lret rex.WRB xchg sbb (bad) sahf adcl xlat (bad) jb lret xchg loope jno scas xchg js sbb hlt mov sub cli lods sbb and repz cmp sti xor (bad) cmpsl cmc int3 fiaddl push (bad) jne pushq pop sub pop sub and add cmp xchg jle rex.WRXB enterq jmpq nop jmpq adc (bad) add ss sub in pop jno cmpsb loopne pop in (bad) lahf rex.X gs (bad) jle push (bad) fsubrp mov mov adc fildll mov (bad) imul (bad) retq sbb jmp pop xchg rex.WX (bad) lret loop lock data16 mov jle mov retq sub adc add and test movabs (bad) scas (bad) bnd in int xorl adc loopne nop mov int lods mov cld mov cwtl xchg xor loopnel push mov out (bad) leaveq mov stc ds xchg jb (bad) fdivrl rex.W xchg loopne sub push setg repz (bad) pushfq mov xchg stc repnz rex.WRX (bad) adc lods mov imulb adc imul xchg adc (bad) fidiv cmc or jnp (bad) add jae iret add pushq loopne movabs je loop cmpb adc xchg xchg insl stc xor add sub (bad) flds std popfq pop movabs loopne mov sbb repnz pushq cmc rcll leaveq mov loopne insl je scas rex.RB vcvtsd2si cli sbb (bad) jo ss sbb and xchg retq fucomp sub xchg pop loopne add loopne in xor in (bad) mov mov and and (bad) orb js pushq pushfq fmull mov mov jbe jo retq jmp movabs pop mov ror outsb hlt (bad) mov out jo pop clc (bad) and stc mov outsb push and add mov loop loop mov push rex mov leaveq jl incb jge fucom icebp insl in (bad) mov (bad) jp mov and sbb sbb add (bad) (bad) lock xchg xor pop in and in and popfq push sbb sub cmc sahf (bad) jns hlt (bad) sbb out cwtl and clc fdivrl test insl cmpl rex.WXB mov mov mov clc ja pop callq lock adc fisubl cmp outsl jno mov add int3 loope and cs (bad) add xor (bad) int3 loopne retq es mov iret jbe mov (bad) shlb (bad) fisubrl rex.WXB mov loopne mov xchg int3 stos iret je jle loopne xchg ss (bad) data16 cli xor mov enterq pop lret xchg movsl rex.WRX es add sbb pop mov jmp or cmp std scas and test movsb mov jbe in lods out push (bad) rex pushfq (bad) sahf sub or jb (bad) xchg xor adc or pop rex.WR pop (bad) movsl jmpq clc sti xor addr32 push test test cmp loopne loop add loopne (bad) in jge lods in cltd fild (bad) xchg mov xchg loopne jmp xor or push stc pop shr (bad) (bad) jae sub push mov in jp (bad) (bad) xchg mov rex.WRB mov jmpq test jnp xor cmpsl imul (bad) mov test rex.WR pushfq xchg jnp loopne add lock rex.WX callq sbb fsubs or (bad) pop mov rex (bad) or xchg mov (bad) adc (bad) out popfq mov or or sub pushfq icebp loopne mov xor iret movslq (bad) std ss (bad) pop loopne negb adc rex.W outsb mov loope lea push and (bad) out rex.WXB rex.B jmpq adc pop add fidivrl retq rex.WRXB xor mov (bad) mov push jg loopne cmp and sbb mov (bad) and xchg rex.WRB loopne xchg xchg pushfq push js sbb and faddl imul in movabs (bad) rorb fcomps push adc xorb pushfq push (bad) xchg retq xchg movsl addr32 (bad) rex.WRXB jb loope xor loop (bad) loopne pop movabs es push (bad) cmp xor repnz mov xor mov (bad) incl jrcxz mov loopne push or fsubs xchg loopne rex.WB loop rex.WR testl loopne test shrb mov fsubp pop xchg and stos stc sti add movabs (bad) mov cltd (bad) and (bad) jo loopne (bad) shr outsb cmc (bad) mov sub jne (bad) or (bad) leaveq adc jo push and lock rclb test movsl in xorl fidiv sub (bad) pushq sub xchg (bad) pop cmp clc cmp sbb nop outsl rol push rcrb adc (bad) jmp (bad) pushq adc (bad) jg (bad) or fsubr mov xchg shl mov movabs jrcxz mov push (bad) (bad) mov je lock mov lahf cmp (bad) rex.RB mov adc pop xor cld or sbb (bad) jg cwtl (bad) rex pop sub mov loope movsl (bad) add (bad) rcrb add xor (bad) jb pop scas sbb sbb addl loopne xor pushq mov loope repz add push pop or (bad) shr cmp in mov (bad) jno (bad) in fcmovnb sub out out xor pop fbld rex.WR (bad) je shrb stc or shlb sub sbb rcrl adc in cmp movsb jnp inc out jle (bad) rex.WR pushq rex.RXB rex.RX adc xor xor mov sub je clc callq movsb (bad) fwait sub mov sahf imul jns out and test add sub fs and (bad) xchg in cmpps and xor mov xor rex.R push adc mov or rex.RB rex.RX movabs pop mov sbb (bad) in out and lret adc rclb (bad) scas rex.WRXB gs lret nop rex.WXB cmpsb cwtl retq insl cmp xor rex.B rex.B rex.WRX cmp movabs xor mov xchg sahf rex.R mov add loope stc retq and (bad) adc fnstenv out xchg push rex.X mov rex.B pop (bad) leaveq imul rex.RB mov xorb xchg fbstp rex.RX lahf (bad) sbb shr (bad) cmp movsb pop lahf orl add and mov sbb and insl pushq std out mov add ss (bad) lea loopne pop jl retq jo insl (bad) (bad) (bad) rex.WRX and push (bad) pushq int3 adc imul out (bad) (bad) (bad) out pushq xor cmpl addr32 pop mov or cli imul add andl test in icebp (bad) push lret pop push or sub (bad) addr32 xchg add mov loop repz je and stos jnp fwait sarl fwait int3 movabs decl gs and nop sub or (bad) fsubrs cmp or or xor and push (bad) in cmpsl xchg jb (bad) jne movslq in pushq push stos xchg jg pushq (bad) movsl xor fmull push adc mov scas repz lahf push (bad) add movabs pop add add mov adc pushq mov jg sbb addr32 fcoms sbb sbb sub lahf mov fdivrs retq in fsubr shlb fcmovnb push clc jge out imul sub out (bad) movslq mov outsb cmp mov push (bad) xor rex.RX cld jle fucompp mov sub test cld jno popq push psubusw fs mov repnz loope xchg loope insb rex.WRXB movabs in insb test in bnd (bad) xor or icebp gs pop sub iret sbb loop rex.WXB lock movabs es (bad) repz and stc cmc jge mov (bad) callq cli mov push fbld rex.RXB iret (bad) scas lret sbbl (bad) xor jb movsb outsl int movsb rex.WB mov pushfq rex.RX enterq sub (bad) in js icebp mov sub pop (bad) sbb and or pop rex.WX vmulpd hlt (bad) (bad) cmp adc loopne test jns outsl (bad) and mov rex.WB jb rex.RXB xchg xchg xchg loopne test fnstenv loopne fsubrl movsb addr32 cli ja lods mov andb rex.WRXB pop rex.RXB xchg movsb lret or callq loopne cmpb mov icebp mov movabs in fwait loop adc rex.WR rex.WX pop outsb (bad) xor loopne (bad) (bad) fsubrs xlat repnz (bad) xchg cmp notb (bad) clc mov jg loopne cmp adc imul add cmpsb xchg and clc jmp jb in decb jmpq (bad) (bad) imull xor or (bad) mov cmp mov rex.WR lock push push movabs xor (bad) jmp outsl jp rex.X leaveq out cmp xchg pop fneni(8087 int mov and push je sub jo fneni(8087 mov adc lods rex.WX es mov loopne jae mov adc cltd (bad) xchg callq mov stos movswl rcll jmpq movb mov (bad) jmpq add lods cmp jo sarl rcrb rex.X pushq fsubs (bad) (bad) add jrcxz test fdivrp jne scas mov scas (bad) fimul rex.XB pop rex.W negl rex.RX rex.WRXB fiadd rex.RB outsb xchg outsb adc loopne,pt and outsl pop mov jmpq push (bad) ficom lock rex.WB pop outsl mov callq data16 retq pop cmpsb cmpsl push roll xchg rex.WRXB (bad) adc xor (bad) xchg (bad) cli in loope popfq movabs add sub (bad) cmp movabs pop fucomi cmpsb test and rclb (bad) hlt repz movsl lret repz rolb mov push enterq loope pop frstor addr32 xor std out sbb sahf imul js cmp movntq cmp rex.B rex.WXB mov rex.WRB mov in js jnp sbb (bad) jne xor jmp push stos sub decb int3 xor add adc (bad) cmc (bad) pushq xor lret pop jle (bad) clc or (bad) lahf sbb push add cld rex.RXB hlt lods lock in xor shlb jrcxz movabs test in movabs pop rex.WXB sub cmp add (bad) test xchg sahf jo ja ss (bad) stos fldl mov cmp stc jo (bad) (bad) and adc adc loopne jae (bad) out test rorl loopne loope rex.WRB or cmp loopne jg jrcxz rex.WB jne sbb out rex.RB loopne (bad) divl and (bad) fs add (bad) push rex.X or jns or cltd loopne movsb lret pop (bad) cld scas lods cli fmuls movabs rcl (bad) popfq icebp repz jl xor push add mov or (bad) rex.WB rex.B (bad) imulb jp sub xchg cmp pop lock in imul push cwtl jnp sub push fsubs (bad) and stc xlat iret pushfq (bad) add cmp lcall int3 stos add push (bad) fistpl sbb repnz xor hlt mov movabs rex.WRXB rex.WR sti sti loope xchg mov lcall rcrb ss (bad) roll fisubrl testl (bad) nop (bad) add xor loop rex.XB pop loopne insl (bad) adc xor shufps sub loopne js out pop rex.X and rex.WRXB xchg pop shr mov rex.XB cwtl andb loopne jmp (bad) pop cli int3 shl in imul (bad) movabs xchg clc push incl loopne or in add sar lock or or (bad) xchg rclb pushfq rex.WR sbb cmp nop out mov xor (bad) and (bad) (bad) xchg in xchg pushq test movabs (bad) (bad) js lods loopne (bad) pop adc sahf insb in rolb insl (bad) std sbb loopne cltd (bad) rcll iret rolb sbb xchg sbb rol and rcll cmp and (bad) rex rcrb mov jbe out movabs fnstenv in loopne mov jne jmp and sub rex.WB (bad) mov cli rex.WRX in test lret loopne (bad) (bad) movabs push in (bad) popfq (bad) movabs adc movabs jle mov (bad) (bad) (bad) loopne xchg gs mov (bad) and or movslq mov (bad) mov lods lock (bad) retq imul mov (bad) std ss cli (bad) shrb rex and add callq std (bad) movabs xor rex.WX or movsl jns cltd mov loopne adc pop lock retq or loopne adc pop mov or in jmp cwtl adc rex.W push pop in cmp rex.WX rex.WR ffree scas cld jrcxz mov jnp mov loopne jne sbb add loopne stos rex.WX (bad) mov gs jmpq mov retq xchg test mov (bad) loopne adc xor and (bad) rex.X shl xchg xorl repnz (bad) (bad) sub out test (bad) (bad) push enterq pop (bad) rex.WRB cmpsb xor loopne pushq push sub mov imul or xor orl cmpsb fdivrl rex.B lea add gs insl mov loopne fidivl mov xor movsb loopne adc xorps mov out stc rex.WRXB movabs movabs jbe cmc xchg xor loopne rol ja sti jmp js loopne imul xchg and gs pop test add rex.WRX mov xchg jnp mov push mov mov movabs (bad) mov adc xchg jb xchg loopne sbb test mov stos pop (bad) xchg sub movabs jne mov in scas sahf (bad) repnz imul jg fcmovnb mov movsl adc fcomp or cmp rcrb pushq cmove subb (bad) xor insb xchg rex.W (bad) mov rex.XB sub loopne rex.RXB ss cmc (bad) (bad) loopne iret shrl test fsubp and adc loopne imul xor loopne fidivl sub cmpsl or (bad) and cmp (bad) movabs sbb (bad) out or cmp jbe mov in icebp nop sahf callq movsb movabs rex rex.WRX outsb in loop in fwait lahf rcr sbb movslq loopne test rex.WB push in imul fabs and movabs cmp shl lods pushfq movslq loopne xorb pushq cli (bad) push addr32 push mov add lods jge pop cmp xchg sbb jrcxz stos roll xchg (bad) orb loopne negb add shrb fiadd (bad) mov rex.W push add and (bad) pop lods and rex and xchg fimul mov ljmp js enterq (bad) mov fiadd (bad) cld or sarb rex.WRXB (bad) ja xor (bad) test sub or (bad) sub (bad) mov (bad) loopne movabs gs sub lods fld (bad) push xchg fwait int3 (bad) jmpq adc loopne jmp rex.WXB lret rorb xlat adcl mov xchg adc push cs es mov add lahf xchg insl (bad) vpmulhuw xchg (bad) cld loopne (bad) in push sub rex.RXB movsb (bad) and (bad) ljmp adc rex.XB test sahf adc loopne mov (bad) scas jl push loopne rex.R sbb and cmpsl jp (bad) (bad) (bad) clc sbb (bad) loopne rex.XB fnop lock icebp push hlt mov loopne in movslq rex.R rex.WRX rex.WR mov loop jl lods sti sahf testl add jno movsl adc xor cmp js in rex.RB mov cmp clc jmp push enterq (bad) fnstenv test xor mov add sub add add jnp in hlt mov or cmp loopne mov popfq push xchg rex.X int (bad) icebp fcmovbe mov add rex.WRB rex.RXB (bad) and and shll sbb pop hlt fnstcw mov mov retq clc cmp or rcl and (bad) and enterq push retq mov fstpl jrcxz sub in cmp jle setne or retq cltd in hlt and (bad) push (bad) cltd and adc insl (bad) pushfq (bad) cmpsb jb (bad) cmp movabs mov movsl (bad) adc fldcw gs cmp loope sub clc (bad) adc (bad) add (bad) pop movabs rex sbb jl hlt je cmpsb pushq loopne and push sub lea xchg xchg lret stc jmpq enterq push sbb jrcxz nop in adc sahf repz mov (bad) or (bad) pop leaveq imul add pop (bad) je xchg and (bad) sahf jae fstl jnp iret (bad) mov jg cmp xor add (bad) test jb lock loopne (bad) sbb stos adc (bad) rex.RX retq jl xor movsl rex.WRX cmp or and nop callq mov adc pop jmpq jl adc in jns jmpq movabs pop fwait (bad) (bad) sub mov and retq fwait jle (bad) icebp loopne cmp (bad) (bad) xchg movabs sub push (bad) movabs es loopne pushfq jb leaveq sub adc mov (bad) loope fstp cmpsl in movsb adc or (bad) loopne mov or addr32 negb rex.X lock jg decb mov lret scas (bad) xchg fdivrp in test movabs xlat sub (bad) cld jp xchg loopne (bad) or stos (bad) shrl jbe adcb pushq outsl and sbb mov loopne xchg scas xor or shrb out loopne (bad) callq mov stos and add cli sbb sub add fimul loope xchg (bad) jrcxz or mov jg repnz xor adc xchg in (bad) in mov mulb push push popfq loopne int3 sbb flds cmp mov adc (bad) (bad) xor push insb mov xor mov nop xchg (bad) and outsl or or enterq jmp js icebp xor rex.R mov push sbb data16 (bad) in xor loopne imul movsb cmpb loopne (bad) xor insb cwtl push loopne xchg push xchg (bad) retq sahf sbb mov jmp cmp sbb jb (bad) xor cmp add jp repnz jle stos lret test int3 rex.WB sbb xchg adc sbb mov jnp int sbbb movabs ficom rolb repnz pop (bad) loopne sub scas and rex.R (bad) xchg (bad) mov stos outsb mov rex.WRB insb movabs test mov loop cmp mov movabs imul jg mov (bad) push pop rex.X fs icebp (bad) out rex.RB push jg (bad) xor (bad) movsl repnz and pop in add adc (bad) pushq cmc push (bad) xchg mov mov push rex xchg stc loopne jmp icebp in rcrb (bad) rex.WR movabs sbb in mov mov add mov stos and fistpll (bad) adc sbb pop cmpsl (bad) (bad) lods pushfq mov and push push in fs adc mov sbb in cmp (bad) or flds sti (bad) loopne imul addb loopne mov jnp loopne stc mov mov (bad) cli push mov loopne and sub and (bad) mov rex.R subl xor mov xchg cmpsl rex.RB add and in movslq (bad) shll popfq mov (bad) (bad) mov movsl js xor es rex.WRX scas rex.WRXB rex.WXB add pop (bad) clc (bad) (bad) or in (bad) (bad) stos in sub (bad) roll mov cs lock pop (bad) (bad) rex.W and fsubrs (bad) (bad) add std and pop jo (bad) and lods sar retq mov (bad) pop jnp jae out sbb mov pushq rex.XB addl jrcxz icebp cmp hlt lock jmp (bad) cld mov (bad) iret (bad) dec subb insb in (bad) stos mov pop add (bad) mov pushq xor mov cmpsb sbb cli es (bad) hlt (bad) ss mov rex.WXB or jg rex.WRX testl (bad) fildl repnz add push (bad) mov (bad) sbb divl insl xchg sub rex.RXB insl sahf movslq retq adc enterq rex.XB pushfq cmp cmp mul sub enterq hlt (bad) add jno rex.WRB and loopne rex.X rex.WB sbb movabs mov push loopne icebp std lret mov mov callq imul (bad) (bad) imul loopne in ds enterq stos fsubrs jmpq mov add loopne fidivr movabs cld out xchg iret mov jl mov icebp orb (bad) cmp movabs pushq pop sbb (bad) (bad) loopne in mov jns pop loopne adc (bad) loopne (bad) (bad) flds mov loopne pop es rcl loopne xor loop cmp jo leaveq loopne push nop xor insb hlt mov testl (bad) jnp sbb shl (bad) ja or fidivl pushfq mov sub mov loopne icebp enterq fstl or add movabs rex.R lods fs loopne ds rex.WRB rex data16 lret stos pop xchg loopne xchg (bad) js fstps pushq cli retq xor sahf addb mov (bad) fucom cmp cltd (bad) out outsl sarl fisttp xchg (bad) push loopne mov loopne fwait std xchg je xchg loopne add jns in push mov loopne (bad) jne mov mov add or mov jrcxz or enterq sub jg movsb xchg jne mov fisubrl iret jrcxz nop out or divb adc mov (bad) leaveq imul loopne add rex.RB rcll sub rclb adc (bad) movabs sar lahf mov sbb (bad) fstl insb rcr (bad) negb pop shrl lret push test cmp loop adc mov cmpsl (bad) orl jo in loope add push icebp lods insb rcl jmpq loopne rex.RXB sar mov iret shlb rex.WRX lret add jae (bad) out (bad) mov mov rex int jmpq (bad) rorb clc test mov jno movabs or mov cltd add loopne (bad) out jb pop rex.RX xchg mov or adc jne fidivrl rex.B rex.WX outsl rex.WR jg rex loopne,pt addl rorb rex.RXB pop rex (bad) loopne mov jbe (bad) push jno ss jns xchg callq (bad) rex.WRXB cmp xchg negl jbe ror (bad) in jle jo jb and insl pop add (bad) sbb or xlat (bad) push jmp (bad) clc mov vmovmskps loopne sbb sbb rcll sub sbb mov lods cmp mov out (bad) mov xor or sbbb cmc movabs rex.WRX (bad) enterq cmpsb insb movabs xor scas cmp rex.WRX cmp adc lret xor (bad) xchg sahf test jmp rex.WRB repnz cwtl (bad) mov retq es lods cli pop cli cs out (bad) add (bad) mov xchg (bad) pop or (bad) mov retq and pop xor int and scas rol movsb (bad) cmc push decb adc retq (bad) scas std (bad) shr sub sbb nop paddb out (bad) (bad) (bad) stc fadds mov in xchg scas or xchg (bad) (bad) jg fildll rex.R rex.WX (bad) xor push or pop or loopne jno mov in nop and (bad) (bad) ds (bad) mov or hlt mul test or pop loopne xchg mov sarl fsubp in rcll xor jle rol cmpsl (bad) jmp push jne lods or push loopne icebp and ss (bad) (bad) fdiv rex.WRB imul mov shrl xlat je jrcxz hlt lea callq (bad) mov loopne rex.XB je loopne rclb mov and rex.RX jnp xorb std cmpsl (bad) lahf mov icebp in test cmp fdivr mov movabs xchg repnz (bad) loopne mov add (bad) nop lret and pminsw loope xlat rolb mov (bad) scas xor (bad) or loop popfq stos sarl (bad) (bad) rex.WRXB (bad) outsl pop mov rex.RX rcr rex.WRX mov pop xor loopne fldl lock pop or jne sar rex.R rex.X push xor loop jb pop mov jmp movl xchg scas mov mov xor cmp stc callq and fnstenv push retq (bad) mov cmp lock insl pushfq sub mov es (bad) (bad) (bad) rex.RXB jle test movsl testb xchg (bad) mov hlt rex.WX repnz (bad) mov rcr rex.B test rcll jnp (bad) mov fdivrp sub (bad) xor in xor (bad) (bad) mov push movsl rex.R mov test or jg xlat (bad) fstl cmp pushq movslq jmp xor and (bad) fwait in pop mov rex.WR push rex.WRB cmp mov hlt add push loopne mov sub shrl cmpsb outsb (bad) mov out rex.XB in rex.WXB rex.WRB loopne loope cmp xor in fyl2x fisubr lock xchg rex.WX hlt xchg out add (bad) ds push add jno sbb (bad) idiv add fs jmp (bad) rex.WB (bad) (bad) cltd in mov lret cmp push popfq sbb sti mov (bad) (bad) adc sbb push movabs js jge sub rolb gs (bad) mov adc retq and xor push (bad) (bad) enterq xchg rex.RXB add cltd fucom add cmc cli xchg movabs mov cmpsb shr (bad) (bad) jne in je xchg (bad) jl jp sti jo sub insb cmc xchg add jge fsubs movabs (bad) and int callq xor out (bad) (bad) add jge cmp pushfq jo mov lods cli (bad) xor rex.WXB push (bad) mov sbb iret rex.WXB clc sbb rex.RXB ss sub retq enterq (bad) leaveq rex.WXB (bad) ficompl leaveq add xchg push push ja xor jns nop sub jrcxz xchg or in pop stos rep mov lods rex.WRB cmp movslq and loope (bad) ja xor jrcxz pop jae insb je mov jrcxz cli pop and leaveq (bad) or rolb push loopne mov sbb loopne cmp push ds adc (bad) push mov cli sub cmp add orb rex.WRX test jmpq and rorb cmpsl or rex.X mov movabs (bad) xor loopne jne outsl pop xchg xchg retq retq rex.RXB pushfq gs rex.WXB icebp (bad) orb cmp (bad) pop (bad) (bad) mov rex.XB mov in (bad) jne sbb out clc xchg (bad) movabs in jrcxz and (bad) hlt pushq cs xchg loopne fadds mov jmpq clc rex.RX and xchg xor cmp jp,pn cmp (bad) (bad) repnz (bad) out scas or sub sbb outsb xchg cwtl xor mov mov callq int3 xchg or movsl movb (bad) loopne ds hlt lods insb fcomp in mov (bad) rex.WR in adc rcl lods (bad) pop jmp or repnz in (bad) cmp loopne pop rcrl clc rolb lock ficom (bad) jmpq in es out data16 rex.R gs insl fcmovnbe mov out mov and rex.X sub mov xor and fnstsw (bad) or (bad) adc movsl or mov mov (bad) retq shlb imul add rex.WXB rex.WB xchg xchg pop outsl push lock adc cld test or (bad) mov fstpl pop loopne push movabs loopne lods cs pop sub or pushfq (bad) loop (bad) pop in adc jbe (bad) lahf cld jno sbb xor nop shrl ja test enterq xor or int test fs (bad) mov out stos loopne jno xchg add sub (bad) cli rex.WRXB mov mov int (bad) (bad) mov and jl loopne jno movslq outsl mov (bad) mov (bad) xor loopne jmpq in loopne sub (bad) and (bad) in mov movabs cmpsl (bad) adc iret sbb outsl fs mov in je rcrl xlat retq addb (bad) out xchg clc insb loopne sub add loopne xor xchg leaveq sub movabs test loopne (bad) jbe add cmp jge add movslq shrb callq stos jl mov callq movsb (bad) movabs iret flds lret loopne sar xor rex.WX int enterq adc loopne pushq in lea adc loopne (bad) movsl xchg jb loopne out iret mov cld add clc shr (bad) (bad) xchg ja fmull xchg loopne fwait icebp cmc (bad) outsb mov mov mov pushfq loopne jb (bad) in out xchg (bad) loopne outsb (bad) ljmp mov test (bad) xchg loopne,pt stos fs (bad) and sub rex.B rex.WXB loopne pushq pop ficom adc and xchg rorb cmpsl sahf loopne fsubs jne adc ss (bad) loopne (bad) and jmp data16 and and rex.RX push js xor (bad) (bad) rex.X loopne cmp enterq cld pushfq jmpq push xor push out sti rex.WX scas (bad) adc xor and sub jo jp int3 jbe rorl and scas rex.R jns lock enterq xor cmpsl add rex.WXB repnz rex.WRB jmp callq adc (bad) in rcr mov (bad) loop movabs es cmp sub fs pop mov adc (bad) loop rex.WB ss and mov in mov mov (bad) int clc rex.B add insl test loopne mov movabs cmp add jno loopne out nop jbe movabs imul (bad) loopne sub loop rex.XB rex.W cmp xchg push cmp (bad) movsl outsl movabs or loopne jrcxz stos mov (bad) loopne lods (bad) in rex.RB fsts loopne insl pop in fisttpll mov cmpl sbb popfq (bad) fwait (bad) in xchg sbb lret and push xor jmpq jmp insl (bad) or loopne sub and repnz jp jrcxz pop cwtl jmp or (bad) mov sub rcrb (bad) rex.WX ljmp pop cmp ss xor fsub push jne (bad) or movabs pushfq push shrb push js adc outsl lea mov mov (bad) pop xor stos lock in push sub insl add xchg (bad) out rex addr32 (bad) push add scas rcrl adcl pop adc loopne push pop rcll ss loopne iret pop mov mov loopne rclb rex.WB (bad) retq xchg loopne pushq loopne (bad) lea rex.RB test sti rex.WRB pushq leaveq loopne xor (bad) or nop mov cmp mov mov loop rex.B leaveq rcl loopne xchg lods mov add test xchg pop outsb add mov push or mov (bad) fstl mov in repnz or (bad) push xchg cltd nop sbb lods adcl (bad) jno mov rcr scas movsb jo,pt in xor sbb rex.RB andl sbb loopne test rex.WRXB mov adc sub rolb rex.RB (bad) imul (bad) clc (bad) retq xchg pop lods push std cli (bad) scas cmp cmp cmc and scas pop leaveq test cmp rex.WB push jb (bad) fsubr jp sub fwait or (bad) adc in (bad) out adc (bad) cwtl mov and (bad) xor sub lods movabs addb lcall mov xchg cs mov (bad) add sbb cld rex.RX or movabs pop fwait int add fiaddl loope and loop sbb cmpsb (bad) cmp jmp and outsb push fsubs insl (bad) xchg sahf rex.RB jo (bad) repnz retq loopne clc (bad) mov (bad) jmpq fisubrl push imul int3 rex.WRX jle mov addr32 adc loopne add (bad) pop (bad) cld jrcxz stos and and loopne pop add iret cltd jge loopne mov (bad) test mov (bad) (bad) pavgb pop add cmc xchg in enterq (bad) cmc in loopne retq out xor ds add adc or retq ds subl cli cmp fwait mov (bad) enterq or add adc mov rex.RXB jp repnz imul (bad) loop pushfq imul repz sbb lock jo cmpb cvttps2pi insb out mul insl addr32 out clc (bad) sub fwait test push leaveq pop jmpq sub and movabs mov cwtl rex.WX rex.WXB jge sbb icebp pushq xchg mov or retq lret (bad) mov jb rex.XB (bad) mov (bad) clc mov pop mov or imul cmp lret add or jrcxz jnp nop adc callq (bad) push jo rex.WX movsl clc (bad) (bad) (bad) mov and adc movabs and push sbb fwait pushq push xorl fnsave (bad) mov and adc insl clc icebp jae and icebp (bad) rex.WRXB insb cmp mov or sbb fwait mov mov jge mov mov callq sarl (bad) mov cmp scas xor mov rex.W pop (bad) jnp out mov loope adc push mov xchg add add in push jg (bad) push xor pushq (bad) xor test (bad) cmp (bad) scas in (bad) cmc lea (bad) int add sub adc out dec add mov div adc ds cmpsl (bad) fsubrl sbb and rex.WRX out jg (bad) js loopne idiv pop out movb pop retq mov sbb xlat (bad) cltd xchg js fnsave xor and test xlat ficoml ds sbb jno pop pop out fs (bad) jne jo in nop loop xchg repnz data16 mov fadds cmp push pushq hlt outsl ljmp fisubr push (bad) js (bad) jo rex.WX insl xlat pop mov test pushq (bad) mov mov pushfq test loopne loop jp cmp or repz sub retq shrl mov fwait jmpq movabs jbe leaveq cmp test rcl (bad) movabs sub movabs jg (bad) pop (bad) (bad) cmp loopne scas lret or xor vrsqrtps mov pushq (bad) loopne (bad) icebp sarl jo xor scas sti outsb xor mov callq mov (bad) movsb ror andb jmp sbb (bad) pop insb rex.WRX xor out out push mov fcmovu enterq (bad) mov jle mov (bad) movabs jo sbb (bad) adc adc shll mov cmpsb push test rex.WXB movabs xor cli pop ss js xor mov out sbb rex.WXB mull mov pushq (bad) xchg (bad) mov pop mov mov mov retq stos loop pop adc retq popfq jb pop xchg loopne test pushfq xchg mov mov shl or repnz cmp out pop fcoml xor loopne push add jrcxz sti loopne movsb repnz or popfq rcr sub add std (bad) (bad) push leaveq mov cltd jne loopne (bad) ja or jae loopne enterq xchg jmp callq mov rex.WRB add mov (bad) sti rcll int3 cmpsl loopne push adc xchg (bad) cmp scas (bad) jno setns jae in fwait cmp movabs adc notl mov adc sbb pushq cmc sbb js jmpq jo in stos movabs mov mov (bad) in cwtl out push cs loopne mov adc lock (bad) jns scas jno cwtl jge and sub loopne fadd jb jrcxz add stos (bad) test pushq loopne loope stc (bad) push ljmp in jnp test xor (bad) cmp adc jno fcompl test sub jne lods fmuls xlat fnstsw subb imul lock (bad) rex.WB rex.RXB loopne fistp test mov movl divl loop (bad) movabs data16 sbb rex.RX (bad) stos (bad) icebp and xor (bad) pop cmp add rex.RXB (bad) loopne (bad) clc rorb push in (bad) and (bad) loopne (bad) out (bad) in jnp sarl pop (bad) and loopne pop cmp lret sbb or in repnz retq rex.WRX repz pop rex.WR pushq mov xchg imul xor f2xm1 int3 pop nop lea pushfq jne pop (bad) mov sbbl rep shr cmp pop (bad) lcall subl hlt movabs test out pushfq rcl in push stos mov (bad) js adc (bad) cmpsl (bad) loope and repnz movabs (bad) (bad) and (bad) or xor (bad) (bad) in out lcall mov cmpsl push mov movabs repz (bad) movabs sub ficom icebp mov in stos cmp xor pop pushq pop sbb rex.W in jmpq mov (bad) pop out fidivrl js push movslq data16 insl sub (bad) mov xor mov sahf (bad) jnp (bad) (bad) insb cltd (bad) sub mov fisttp (bad) (bad) (bad) in push out jbe rex.WRX ss in adc in movabs (bad) xchg (bad) push fwait and push pop subb fistp mov mov (bad) mov sub outsb rex.WRB push xchg adc gs xor jns iret cmc sub pop (bad) fmul jle cmp (bad) cmpsb test in jp pop xor (bad) sub out mov pushw fs push mov jrcxz outsl icebp (bad) (bad) mov or xchg sub movsb xchg cwtl (bad) iret fucomp stos or (bad) lahf jno test push lods jno (bad) jrcxz hlt movabs (bad) (bad) cmpsb sub cwtl in icebp gs nop mov (bad) hlt incl nop (bad) in movabs or (bad) adc push in xchg movsl and repz adc mov or jne sbb rex.WRXB test fisubr xchg rclb enterq dec xchg lock cmp and mov cmpsb xchg mov add jge cs lods mov rex (bad) loopne xor nop add rolb jne (bad) loopne jg jae movsb lea xchg jmpq int (bad) scas fsubs adc (bad) add add jmp lret movabs rex.RX (bad) xchg cld rex.WR retq jp push jl fwait test imul and (bad) cmp mov stc (bad) cmpsb loopne jnp out sbb nop test (bad) imul or rex.WXB or loopne out cmp mov and sbb mov pushfq fwait (bad) retq loopne lods pop (bad) cli mov loop je sar loopne (bad) repz movabs fcmove loopne (bad) mov cmp cmp hlt movabs imul jrcxz lret scas loopne xchg sbb rex.X movabs sbb and pop (bad) sub push fbstp scas (bad) clc jrcxz rex movabs or pop retq in xorb (bad) mov (bad) and mov js fstl (bad) cmp (bad) mov mov movabs (bad) and cmp lea sub jg fs loopne rex sbb add jl gs cli insl (bad) mov fistpl cmpb jmp mov loopne mov lea sub in (bad) (bad) (bad) push loopne movslq movabs pop jmpq push (bad) lods imul xchg add cmpsl cwtl (bad) pushq jne (bad) loopne rex.RX rex.WRXB jo mov fsubr retq rex.WX pop and data16 (bad) cmp fimul push rex.RX pop test cmp pushq xor insl loopne callq mov mov add mov fdivp movabs retq sub sbb loopne xor cmp enterq movabs pop rex.RX shrl icebp sti rex.RB and mov mov adc add (bad) mov repnz fidivl stc out movsl jo movabs divl mov movslq xor mov hlt lods mov fbld loopne xlat kmovw loopne int3 mov rorl retq shl lahf (bad) sbb movslq (bad) (bad) cmp (bad) outsl jb sub mov mov shll es rex.WRB movsb movabs lock sub fsubp (bad) int jrcxz retq cmp leaveq pop (bad) mov jo add in jg add out ss xchg rorl cld (bad) lock loopne pop (bad) jrcxz xchg loopne rcrb in int3 sbb mov rex.R rex.RXB (bad) loopne iret add fnstenv adc shll sbb outsl (bad) loopne lods cli (bad) mov movsb out cmpsl (bad) sub mov cld push jrcxz rex.B adc jl imul pop jbe mov in (bad) push ss rorl jns loopne xchg jb int3 add rex.B adc pushfq bndldx movsb stc stos mov pushfq rex.WXB push je loopne repnz in mov (bad) in clc (bad) int3 enterq in add sub mov rex.WRB mov loopne (bad) orl xchg adc loopne sbb (bad) cld lahf mov and jl (bad) (bad) push cltd callq mov rex.WXB paddw and mov add loop cmpl (bad) outsl cmp and repz sti test (bad) gs pushq mul mov callq loopne rex.B xchg cld negb loopnel fs rex.WX (bad) fwait pop jle sbb loopne pop sahf pop mov add loopne jnp cltd in movslq adc xchg add leaveq in rex (bad) fcomps ja in imul (bad) (bad) jl stos sbb mov callq or (bad) cld jrcxz (bad) (bad) mov insl xchg or mov lods (bad) (bad) in in loopne rex.WR mov xchg lea (bad) loopne rex.WX jge or cmc rex.WRX cmp pop (bad) jmp or fisub jl (bad) iret outsl (bad) callq out in jnp insl je (bad) cmp jne (bad) (bad) int3 stos in movslq ljmp ror pop sti mov ds mov jrcxz in outsl (bad) rex.WR rex.RX mov xor xchg lret (bad) in fwait add adc rcll (bad) loope pushq lock jb xor rex movabs (bad) scas mov (bad) retq stos std (bad) (bad) shrl mov je cmp mov (bad) pushq pop insl insl test scas pushfq lods and push loop push (bad) adc pop popfq insl push repnz jl out sub mov cwtl jrcxz pop rex.B out xor and ja adc or (bad) xchg cmp rex.RX rex.WRXB enterq lock iret std add (bad) imul js out cmp pop out clc out and rol retq pop push sbb jrcxz rcl cmpsl mov (bad) lods lock mov (bad) cli rorl sbb fildl mov xor ss mov xor (bad) cmpsb rex.WRX adc in xchg (bad) stos pop in pop nop sbb (bad) in mov pop jg rcll movb fmull scas (bad) jg or jg outsl decb mov jmpq sarl jno push jb xor (bad) and lods iret pushfq jnp hlt icebp (bad) (bad) cmp pushw mov fldenv insb jb jns cld movabs pop movabs and mov sarb and (bad) insb int cli pushfq and and jle (bad) sbb add sub sbb ficom movsb and sub pushfq out mov stos (bad) negb mov mov add push pandn mov ror (bad) imulb mov and lret jmp shr mov pop data16 (bad) callq jrcxz rex.X test outsl rorl and mov in mov fidivl or sti jns fwait sbb and loopne jle stos popfq add js pop or notb adc fnop mov ja std pop pop enterq (bad) in (bad) mov (bad) cmp (bad) pushq loopne (bad) sbb or leaveq pop (bad) imul movabs cwtl (bad) loopne retq movsl push test subl loopne push adc out pop fs rex.WRXB mov jle cld je shll rex.WX pop rex.R loopne jmpq lea xlat (bad) rex.XB rex.RXB repz sbbl callq enterq xchg xor xchg add (bad) icebp (bad) (bad) mov insl mov imul lea jmp pop ja push negl and imul (bad) adc out lods (bad) rex.RXB (bad) (bad) (bad) jb test lcall jae rex.W cwtl rex add loopne add cli (bad) loopne rex.WXB pop sar and loopne test (bad) mov out loopne mov movabs movsb (bad) loopne rex.X pop (bad) loopne mov sub (bad) repnz negl (bad) sarl and fcomps cwtl cmp jne (bad) popfq ss adc (bad) out callq (bad) mov and xchg sbb cmp mov loope or fdivrp (bad) shrl cmp lods popfq mov je push clc adc test (bad) stos loop mov lret in adc test and outsl insb sti or rex.WX sub and pushq (bad) int3 jle shl (bad) or jmp out scas pop js adc sar mov sbb jg imul movslq sbb mov leaveq cwtl adc (bad) (bad) outsb outsl sbb (bad) pinsrw xchg and sub mov movsl push fisttpl xchg (bad) hlt mov (bad) (bad) orb fidivl mov pushq (bad) loopne outsl fwait popfq rex rex.WX loopne adc jno retq xchg rex.WB cmp jl movabs test add xor cltd jle movslq shrb outsw loopne mov cmp rcrl enterq mov and out mov (bad) loopne sahf jp rex.XB loopne push insl pop rex.WRB in decl cld xchg sti xchg fcoml ljmp in adc out mov xchg (bad) out and int ss icebp jns cmp stos jrcxz mov (bad) (bad) adc sbb jnp jge add mov callq xchg jg insb rex.WX shrl pushq (bad) sub cmp clc mov inc movsb insl rex.RB rex.W lock rex.WRX sarb (bad) jmpq xchg leaveq std (bad) adc imul (bad) rex.RX (bad) fstps hlt sbb xchg (bad) (bad) add pop in sbb rex.X repnz or testl (bad) ficomp (bad) and rex.WRX mov sub add (bad) or jbe fld movabs sbb (bad) mov jo (bad) rex.RB pushq sahf cmpsl push (bad) and xchg rex.WXB fs adc movslq add jb lret jno clc int jle (bad) jne and xorb lods jmpq (bad) (bad) movsb xor retq (bad) fwait stos leaveq jrcxz and movabs rcrb rclb xor fwait adc scas icebp mull rex.R sbb cmp or sbb (bad) movl insb xor mov rex.WRXB xchg add (bad) scas or cmp sub cmc sbb jrcxz imul adc and (bad) scas sbb stos idivb lods (bad) sub fistpl es (bad) pop xchg lret jnp sub jns jnp sub rex ja sbb xor mov jrcxz mov (bad) sbb callq loopne (bad) pop (bad) pushq rcl (bad) cld shlb jo mov data16 (bad) callq (bad) (bad) movabs and (bad) cmp stos (bad) jrcxz popfq push (bad) xor addr32 stos mov (bad) rex.WRXB rex.WRX sub (bad) rex.WR cli push jns push (bad) cmp add cmp imul movabs xchg mov pushq xchg fcomi fmul and or (bad) stc lods pop (bad) sbb mov rex.B mov mov test hlt rex cs pop xor or xchg repnz out (bad) pop lret jae lea xor jl jo std in cwtl rex movabs (bad) mov out (bad) in lahf xchg (bad) gs (bad) (bad) cmp insl retq int3 xchg and fs mov jmpq (bad) icebp sub and (bad) movsb sub (bad) adc in addr32 mov add pop pushq xchg mov and test xor push pop (bad) retq (bad) mov (bad) test out push cmovns (bad) xchg addr32 sti (bad) xor adc push add popfq movslq notb jns push imull rex.WXB lock pushq push push (bad) jge movabs (bad) in or xchg sbb push (bad) add xchg test nop cli (bad) pushq in xchg (bad) mov mov rex.XB insl test test cmp ds rex.WR cs in mov (bad) cmp adc in (bad) jrcxz pop enterq rex.RX (bad) test movabs rex.RXB jo ja rex.WXB movabs out (bad) rex.WRXB and (bad) (bad) sub movabs adc (bad) add enterq pushq movabs or movsl cmp mov out mov (bad) mov pushq pushfq add or fs cmpsb loopne lock cli jl jge cltd xlat loopne callq xor and xor add neg iret add or xchg sbb and jne jmpq addr32 jbe (bad) js or pop mulb mov mov (bad) (bad) or fnsave xor xchg scas loopne pushq and (bad) sarl xchg and xor icebp pop in pop (bad) jrcxz int int cld sub cs loopne push sarl jmpq stc mov movsl bnd lret rex.W xchg jns push and cmp and jp or loopne push (bad) mov js retq jmpq rex.RB xchg pop rcrb popfq or sbb rex.B cltd cmp rex.WRXB (bad) pushfq xor loopne jnp rolb (bad) rex.X loop adc or in rex rex.XB jmpq add mov (bad) flds movabs mov frstor loopne rex.B popfq cmp loope xchg or movabs data16 mov add add adc movabs loop insb je xor jbe stc mov lods in xchg int3 (bad) in cli mov mov add out loopne jmpq lea fmuls cmp jnp cmp mov mov (bad) out test cmc (bad) sub (bad) callq cmc pushfq loope rex.W (bad) mov and jne loopne movsb rex.WRB imul rex.XB retq rex.WR (bad) mov cltd jrcxz cmp clc loopne in and test (bad) (bad) add rex.WX flds (bad) cmp (bad) movabs es sub movabs or (bad) (bad) mov mov imul movd jno push xor push (bad) adc pop adc (bad) fimull pop jne xor mov add xchg jmpq in or mov pop rex.WX loopne cmc cmp (bad) loopne lea retq out mov test jg jae mov movabs in retq rex.B mov jae,pt data16 and loopne int3 movabs jmpq rex.WRX sub movabs and (bad) out mov push add mov pop cmp rex.RX cmp and adc loopne xor (bad) scas cwtl in icebp (bad) out (bad) and or and callq leaveq mov sbb and adc push rex.WRB sub (bad) ja xchg (bad) rex.RB (bad) sub lea js andb loopne rol add (bad) jae icebp sbb js test jbe xchg xchg loopne jns insl in dec imul scas jbe fldcw push (bad) movabs mov (bad) push mov and rex.R mov sub xchg lods sbb xchg out cli xchg lods and jmpq nop sahf cwtl vcmppd loopne in mov scas scas fldcw mov mov push rex.RXB rex.WRXB jb in jo in or xor jle jae mov pop push out sub adcb cli sbb test fwait and movabs out mov movabs sahf mov lret pop loopne push cmpb insb (bad) stc sub loopne (bad) negb sbb jb ja mov jmp mov jno incb ja movslq and (bad) push fucom leaveq cld pop cmp subl xchg rex.WRXB or rex.WRX (bad) cld mov pop insb push jrcxz lret mov in rcll loopne int3 mov mov mov push decl cltd cld callq (bad) adc enterq jrcxz sbbl shr cmp mov retq and or out je fs xchg push jrcxz nop push jnp rex.WR xchg or push movsl imul jl (bad) adc sub popfq mov mov rcrl add rex.X xchg cltd xchg retq adc or mov in xchg and (bad) (bad) lret loopne jb pop rcll out scas outsb add ja mov popfq mov mul push jo jge shl mov fld push mov (bad) sbb sub push (bad) out imul imul in mov xchg (bad) cmp stc in fneni(8087 lret lock rex.B mov (bad) stos xchg fnstcw (bad) jmpq xor sub xor (bad) (bad) mov iret (bad) (bad) add and retq sbb cltd xor imul lods add (bad) lahf ljmp (bad) fisubl lock sahf in xchg xchg mov (bad) sbb (bad) ljmp pop (bad) ds sub mov sub mov std loopne xchg (bad) jle jbe data16 xchg add rex pop insl sarl cmc jrcxz cld (bad) mov test mov mov jne fsubl fidivr lods rex.RX mov mov rex.W sahf rex.WRX sub (bad) js orl int3 gs adc std shr and jns imul fmuls loopne jle fs lahf (bad) bnd mov pop lret jno mov cwtl rex.WRB (bad) lahf out jl pushfq xor jno add cmpsl (bad) jge leaveq jrcxz rex or loopne jno sub xor mov pushq ss add (bad) xchg push mov stos loopne lret xor andb add (bad) jle movabs rex mov sarl xor loop adc rex.WRX rex.WXB movsl sbb lea repnz insb scas jge test xchg mov int3 xor sub stc and jle insb adcl in fnop xor xchg out add jnp or xorl roll pop (bad) (bad) cli insb lea rex.WRX cmp jmp lods negb in (bad) jg pop int or sahf push movabs rex.RB mov packuswb test in cmc loopne xchg sbb cwtl mov add loopne pop jae sbb test loopne add test cmp jns push sub stc jmpq jmp gs mov enterq in and xor movb sub movsb jae loopne sbb cmpsl xchg jns enterq data16 gs xchg loopne mov xchg loopne in repnz mov retq (bad) jne rex.W clc fnop (bad) push (bad) scas rcll lods fs mov jmpq fdivs pushfq mov cmp js rex.WR repz jnp or out cltd jrcxz flds out add rex.WXB rex.WRX rex.XB fsubl (bad) mov (bad) in mov sbb add in (bad) in mov xchg xchg xor nop test rorb or mov repnz add jg cmp addr32 push pop (bad) pop test gs (bad) (bad) mov rcrl rolb adc in gs movabs pop clc ficoml sahf out cmp xchg pop (bad) push and sbbb (bad) loop scas lret retq imul callq mov imul mov (bad) xchg ja pop movabs push mov movsb (bad) in movslq out scas sbb (bad) jb adc insl scas int rol loopne pushq rex.RXB loopne lret insl rex.RB rep out (bad) and mov insb fdivrs rex.RXB mov adc sub or rex.B mov es rex.WXB push mov jg lock pop xorb retq sub (bad) rolb xor imul iret (bad) loopne imul jno adc push add (bad) push flds test mul and jo rex.RXB leaveq pushq rex.RX gs (bad) adc loopne pop loope (bad) xchg lret and stos ss push cmp mov fcmove imul adc push mull clc mov or flds (bad) shl (bad) or add icebp rex.R movabs lods retq rex.WR or sub in scas and rex.WXB jmpq shlb loope adc jbe push adc popfq fsub cli rex.WX addr32 (bad) (bad) push jmpq (bad) lahf pop xchg cmp rex.B outsb rex (bad) xor cmpsl or lahf (bad) pushfq (bad) in hlt (bad) cmpsb shrd test sbb mov mov adc rex.W scas insl ja andl mov (bad) movabs in pop pop out shrl cltd insl (bad) add out push mov lahf mov rex.RX jae (bad) retq mov jg and movabs (bad) fldenv jae and xchg hlt (bad) rex.R and (bad) in pushfw (bad) sbb in rclb pushq (bad) fcoms nop movabs push xchg (bad) icebp pushq jbe xchg pushfq imul ds cs callq rex.RX sbb or (bad) or and paddusb cmp rcr in (bad) pop (bad) push xor (bad) push enterq repnz add or sbb cltd cmp (bad) insl rex.WRX data16 callq and (bad) insb leaveq jne xor (bad) rex.WRB cs int3 or cmp (bad) rex.X pop scas loopne (bad) sbb out fcompl xchg (bad) sbb xchg jns jnp scas leaveq or lcall in cld loopne in jne xor in xchg rex.B repnz rex.WRXB fucomp hlt sbb add (bad) mov nop int adc js sbb out cwtl (bad) (bad) pushq cld and mov jmp jrcxz sti (bad) jg or enterq mov stc nop jnp fisttpll int or and in or test pop add in test xchg cmp xor xor rex.WX jmp (bad) ds flds in loop test retq ja and rex.WX cld mov xor push (bad) movabs push lret shl scas ja cld sbb movsl xchg mov (bad) mov jmpq mov in ficoml callq (bad) mov (bad) out mov mov sti add rex.WXB xor mov loope stos lea xchg fbstp and pop xor pop loop pop out push out xor (bad) jg (bad) addr32 rclb stos jrcxz int3 mov pop xchg cmpl mov jnp pop repnz push adc rex.WX rex.RB sbb insb fsts rex.X jle rex.WRX push lods add callq leaveq fsubrs xlat jo hlt std mov clc rex.W lret negb jrcxz or hlt (bad) out push pop jp xor mov and fs (bad) and rex.RB adc jrcxz xchg or retq lock add ror test rex.B lock and cli mov (bad) sbb (bad) loope cmp mov mov (bad) ds jmp sbb sub lea (bad) rolb movabs (bad) movslq js jmpq loop je leaveq jrcxz outsl xor movslq bnd (bad) mov ss xchg (bad) enterq adc leaveq (bad) (bad) movabs rex.RB int3 movabs push and jns repnz in pop jg push lods (bad) mov enterq ja retq leaveq ficompl ja pop jmpq jrcxz out mov sete mov gs imul or movabs adc jle add movabs (bad) rex.RXB add (bad) decb (bad) pop mov (bad) subq fidivl push and enterq cmpsl mov rex.RXB loop sbbl mov (bad) rex.WXB or cmp or lock sbb mov adcl (bad) movq fcoms push (bad) mov decb mov jbe cmp sub jae add add cmp (bad) mov cmc shr add sbb rex.WRX jbe leaveq fs imul mov ds mov sbb lock rex.RXB scas push insb mov clc sbb lret rex.WRXB xor xchg and mov stos sbb cs add sub xor sahf (bad) cwtl cmp scas or fiadd cmp cmp and leaveq add loopne xchg (bad) jg pop jb lahf rcll stc (bad) (bad) mov (bad) or test stos stos sbbb mov lret cmc or xor jge mov add (bad) outsl nop movslq (bad) rex.RXB movslq pushq adc (bad) out and callq and rex.WRXB mov mov mov in sub fs (bad) pop (bad) mov in adc retq or loop subb and and (bad) stos scas xchg pop movslq cwtl push decl scas or rex.WB hlt or (bad) movabs push push sbb loopne divl movsl loopne sar cwtl sub xchg out in push cltd (bad) loopne (bad) jrcxz cli jl mov mov outsl adc or pop int3 xor mov stos sahf pop lret je (bad) rex.RX out (bad) ds in test rex.B loopne rex.B jrcxz,pn loopne loope fdivrl pop rex.WRXB test xorl repz movabs (bad) movmskps add loopne pushfq lea mov mov decl rex.RXB (bad) lret xor and pop (bad) shrb imul xchg adc movslq insb loopne je xor (bad) pop fdivrs (bad) (bad) or loopne rex.X mov sbbb mov test movslq loopne adc subl (bad) in loopne enterq out clc and push jbe cmc cltd jg (bad) (bad) mov sbb adc lahf stc stos jo clc outsb (bad) in test and sbb mov imul adc jae out pop xor (bad) sbb jns xor in or hlt js jae loopne insl jl out retq loopne cmp jnp loopne mov jne loopne and mov inc xor mov loopne mov mov adc subb imul loopne rclb in jne callq loopne adc retq push shll (bad) jmp clc (bad) movabs rex.X add loopne lret xlat int mov data16 mov rex.WRB shlb (bad) rex.WB fisubl gs fisttp subl add mov xchg and rex.RXB sbbl test push jae (bad) outsb mov (bad) popfq rex.W add loopne jp fidivl sti cmpsl enterq sbb shrb rex.WR jno rex.RX std lods movabs pop sbb rex.WRB xchg jnp (bad) xchg (bad) sbb loopne leaveq scas mov pushq rex.WRX (bad) add (bad) movabs (bad) js cmp sbb loopne jmp jp xor pushfq mov xor jb rex.WXB sbb repz loopne imul pushfq cmp nop jo (bad) mov retq clc pop jl cmp cmc je and mov jge cmp cmpsl push in jo add (bad) (bad) rex.WB in adc out scas in insb push es out callq (bad) movsl adc cmp adc mov sbb (bad) gs rex.XB mov push mov out ljmp (bad) and jo mov js cmp cwtl cmp icebp out adc rex.WX cmpb cltd ficompl movabs adc loopne xchg movabs fildll pop add (bad) movsl push rex.WRX js,pt test imul adc loopne sti (bad) rex.RXB and mov xchg ficompl pop mov lods popfq (bad) mov xchg mov and sub pop loopne out xchg movsb or xor rex.RB jmp mov orl mov jo (bad) movabs je sti cli in and adc fldl and (bad) and in mov test test add jg int cmp (bad) rex.XB repnz push sub sbb jnp jmp xor (bad) movsl xor stos (bad) add loopne sub repnz loopne (bad) (bad) mov subb lock loopne jp or rex xchg loopne int rex.WRX mov (bad) sti imul rex.WRXB in mov (bad) mov out xor movsl fstpt leaveq mov sarb (bad) (bad) scas rex.X (bad) (bad) pop loope (bad) cmp jnp mov loopne cmp int cmp loopne lock sbb (bad) jle fwait sti adc adc stos scas ror nop (bad) pushfq std loopne movabs jle (bad) sahf (bad) loopne sub push cltd cli out mov out cmp xchg loopne mov movsl jmpq adc fcomp xor loopne jecxz pop mov movabs xchg sbb loopne xor loopne icebp mov cld push movabs and mov test or (bad) ss xlat pop fwait push jno xchg cmp cmpsl (bad) (bad) mov (bad) xlat adc add jns (bad) (bad) pop mov fidivl out and movsl sbb cltd pushq sbb mov push fsubl in adc lret fs (bad) xchg sahf fidiv test xchg (bad) cld rex.WRX or jmpq cmp pop mov and pushfq hlt (bad) lods xchg add mov push pop movabs ja out cmpb sub in add loopne jmp (bad) (bad) jrcxz decl stos mov fsubrs clc stc xchg rex.RX or (bad) je movabs out (bad) (bad) adc loopne or loopne push sub sub in jb scas rex.WRX add xchg (bad) pop fdivrs ds (bad) (bad) cli jrcxz ss mov and cs push (bad) pop jl inc cmpsl decl push mov add pop jl mov cmc (bad) ds (bad) (bad) (bad) pop loopne mov ja loopne sub cltd (bad) (bad) mov int3 insl xorl (bad) sbb in (bad) js lods popfq loopne (bad) mov pop push movabs sbb out cmp xlat pop hlt xchg movabs insl pushq push mov (bad) (bad) jmpq (bad) xor outsl scas mov mov imul pop mov sbb in jp test xchg and jo (bad) (bad) loopne mov (bad) adcb rcrb (bad) mov clc fcmovnb fs (bad) insb out scas je (bad) callq loopne rex.WRXB (bad) (bad) cld cmp nop sbb lock mov stos scas movabs rex.WXB out mov sub test or in subb (bad) orps and sbb movsl pop sub rex.WX repz (bad) loopne icebp cmp rex.XB out add rex.WRX xchg nop in fmul popq (bad) mov pop in loopne test sti (bad) jrcxz out fisubr add cmpsb retq loopne lods and loopne add xor repnz iret movsb scas or test cld (bad) fldl cmp movsl mov in ja loop (bad) xor scas and rex.WXB loopne retq xchg andl cmp add neg (bad) (bad) loopne sti nopl and rex.RXB pushq rex.WX jo mov cli xchg mov and or add or adc stos mov sub sbb popfq cli pop test rex.W orl mov (bad) cld sbb rex.RX push movsl add in fdivr sub loopne push insl sbb xor sti rex.WXB mov loopne mov sub mov mov cmp jmpq callq sbb loopne movabs or movabs js sub xor rex.B scas adc (bad) cmp jle mov and loopne sub sub rclb movsl mov sar (bad) jrcxz addr32 adc fldt and push jge lods jnp adc cld sub (bad) js mov in out pop rol mov retq popfq fsubrp ss (bad) movabs sub inc fistpll sbb mov insl push jge rex.WRB sahf and mov xchg imul test insb in clc pop ja xchg test xor roll idiv (bad) pop out sarb rex.X mov rex.WRXB fcmovbe add (bad) sub int (bad) jrcxz cld push cmp stc jmpq repnz rex loopne cmp xchg movabs mov mov lahf xor pop lods add loopne andl mov xchg cmp cmp outsb mov jns (bad) (bad) test fs in test jno cmp in and cmp adc outsb xor mov (bad) movabs add loopne push or (bad) jo cmpb jge and cmc sub gs retq jl pop lods cmpsl shlb jmpq add fs movl mov sub cmpsl (bad) jp in rex push (bad) (bad) jrcxz or cmp sub (bad) lods or jne mov fwait xchg repnz push (bad) addr32 outsb js movabs add add jae (bad) adc rex.RB rex.R cmp movsl sbb scas fdivrl movsl lahf in adc mov push std xchg rcr rorl sub lods sarb adc (bad) pop cs (bad) loopne vpshab cmc jmpq out adc imulb push sar jne or rex jge in mov std loopne push sbb loopne push (bad) lods retq (bad) loopne movd loopne adc sub mov rex.WB add and sti (bad) jmpq (bad) (bad) cmp adc ss (bad) (bad) adc or jge fiaddl outsb cmpsl loopne xchg mov rolb jno jnp lock pop shll xchg sub (bad) (bad) fisubr cmpb std pop (bad) adc (bad) or lea rex rex (bad) xchg lods lret cmp mov loopne jl jrcxz sub (bad) stc loopne cld int (bad) rcrb adc icebp cmp rex.RXB gs out repnz stos mov xor test rclb and lret ds fadds xor fwait (bad) or sbb xchg pavgb repnz ja (bad) mul mov rcrl add loopne loope iret incb lea leaveq loopne xchg enterq pop rex.WR xor jrcxz (bad) xchg (bad) rex.WX mov decl (bad) out test push xor pop fdivl movabs cltd (bad) xor data16 (bad) xchg nop repz jrcxz pop cli cmpsb cwtl xlat xlat xor lret (bad) sub mov movabs outsb add jb loopne jrcxz push callq or (bad) loopne sbb retq mov rex.WXB jle sub mov xchg int3 pop jle xor jl movabs cmpb jp clc rex.WRX int3 (bad) cmp jbe shlb lods in out adc icebp (bad) cli adc xchg jne cli sbb and xchg xchg mov mov (bad) rex.W loop mov nop (bad) fwait pop (bad) mov ss cmp xor roll cmp or (bad) lret mov and sti ficoml out (bad) (bad) cmp rex.W out cmp movsl sbb decl frstor shl cmpsb scas (bad) nop (bad) lods pushfq loopne (bad) sbb sti (bad) loope loopne,pn cmpsb and out stc in xchg rex sbb (bad) (bad) mov (bad) xchg shrl mov test rex.WRB int mov fisubr push cmpsl enterq incb mov je or fnstsw jle and fsubs shl (bad) hlt (bad) loopne jmpq xchg mov (bad) scas movabs (bad) (bad) rex.WRXB pop in mov loopne rex.WX lock popq and in loopne rex.R rex.WB rex.RB icebp insb add sbb (bad) pop or (bad) xchg (bad) sbb pushfq stos mov rex.WXB int xorl add out loopne cmp xchg cmp mov (bad) xchg cmpsl es (bad) out xchg rex.WRXB adc ss insl loopne insb jbe xor sar loopne jle jg or rex.W fidivrl movb setae rex.WRB out loopne (bad) pop (bad) repnz (bad) cmp icebp movabs jnp xchg xor (bad) (bad) loopne xor pop jle decl rex.B rex.RB sbb fild sbb (bad) ss popfq (bad) test lahf mov retq movsl bnd (bad) cltd rex.XB rex.X loopne loope movabs push nop jrcxz std subb sbb jmpq fldl mov loopne fnclex retq xchg cwtl or in pop (bad) es (bad) jo lret xchg out sbb loopne mov loop rcr mov (bad) loopne stc lret xor in xchg lahf loopne (bad) fnstenv (bad) add stos rex.XB iret sbb js,pt ss xor pop (bad) icebp loop adc sbb or jno jno and sbb adc sbb loopne jp sbbl faddp pop xor cmp mov nop (bad) push icebp rex.W roll pushq or shr imul cld xlat (bad) or (bad) (bad) sub or fsub jo jae (bad) popfq (bad) cmp (bad) (bad) rex.WRXB jmpq and loopne iret decl xchg retq (bad) fwait cmc retq and mov insl cld loopne xchg pop cmp sbb xchg (bad) icebp pushfq test movabs xchg loopne rex.X (bad) pop enterq in add sub mov loop gs lea sti and mov retq imul (bad) mov jmpq movabs (bad) stos sbb out fs (bad) rex.RXB fdivr cmp mov js push sbb mov subl (bad) popfq sbb pop sbb sbb push mov (bad) mov addr32 stos fistp jns (bad) jne negl cmp lret outsb pushq fdivs push sar push (bad) add cmp adc loop xchg cmp icebp pushq (bad) jmpq xor lock cld mov (bad) (bad) movabs lahf (bad) fidivrl and imul push jl rex.R or xchg jnp add jne sbb adc sti cmpsl rex.RXB cltd nopl outsb add push int shll je (bad) (bad) rex pop (bad) add xchg (bad) (bad) pop xchg rclb lods push jmp (bad) sub (bad) xor out mov out cmp insl lret mov stos (bad) lock adc rex.WX jnp xchg (bad) in jae pushq (bad) jmp rex.WB rex.RXB pop push (bad) mov and mov pushq lea mov loopne jae xlat fmul scas rex.X (bad) xchg or pop popfq fnsave adc rex.X cmp mov (bad) pop cmp iret add (bad) xchg rclb (bad) rex.W mov loope sbb int3 cmpsb imul data16 lret ja and repz rex.RB rex.WRXB repnz cwtd mov jb jrcxz mov rex.WRX xor in leaveq mov stos stos (bad) mov int xchg idivb loopne cmpsb mov ss jbe outsb jne out mov (bad) cmc ds movabs in add ss ds cmp cltd mov rex.RX mov (bad) retq out (bad) insl ss (bad) (bad) jl sub outsl mov rorb mov rex.WR rex.WRX add mov (bad) and enterq insl adc decb jrcxz cmp callq lret movabs mov js push (bad) in and repnz xlat xor jne jb jmp lods data16 fwait rex.B (bad) add rex.WRXB data16 sbb movslq or (bad) pop hlt pop jnp adc mov mov in in sbb add rolb rolb jg inc pop movsb jne add xor sub mov xor push pushq sub mov rex.WRX (bad) (bad) rex.WX mov xchg rcrb adc xor cmp jo pop (bad) (bad) in in rex.WR rex.WRXB or ja xchg rex.RX mov pop (bad) push jno jmp loopne mov cmp decl (bad) jl loop (bad) loope fs rex.WX fmull sti (bad) sub (bad) and scas jb xchg rex.WX xlat (bad) add es rex.WRX pushfq (bad) in jmp jne adc loopne (bad) int lods cwtl imul or test (bad) and jg pushq xor fwait out (bad) rex.WX cwtl sub fildll and loopne test (bad) jge (bad) out rex repz jle adc rcl adc xchg sarl sub add lods sti mov cmp fldenv (bad) neg rcll (bad) (bad) cwtl push rex.RB sbb (bad) or in add jne fcmovnbe sub sub rex.RX cmp hlt (bad) loopne cs rex.WX (bad) and fsubrs (bad) or adc pop pop cmp mov jne shl je lock rcl addr32 push fst out callq outsl rex.WR (bad) sahf and mov (bad) clc in mov rex.W and push xor (bad) imul mov jrcxz loopne ror pop movabs mov sbb decl rcr push clc (bad) xorl (bad) push out or fwait mov movabs and loopne rex.X pop (bad) rex.WRB mov imul (bad) jp stos pushq nop jrcxz rol jg pushq (bad) cli and (bad) shr loopne icebp jb rex.WRX lret rcrl cwtl (bad) xor push (bad) movsl (bad) rex.RX pushfq sub mov shrl insb (bad) cmc (bad) sbb rex.RXB rex.WX je xor xor sbb xchg sahf pop add cmc jrcxz (bad) jae pop loopne (bad) nop movsl lods and test add mov (bad) rex mov rex.WB pop (bad) in test fildl js (bad) cli lea adc rex.WRB mov loop pop loopne mov lret loopne mov (bad) scas loopne sbb (bad) mov jle jmp or loopne pop rcll stos mov cli rolb rex.RXB push movabs loopne fcmovu lods and adc xorl adc pushfq cld out rex.WX and and insb cs loopne rex.XB lret (bad) js pop rex.RX cmp lods rcr movabs loopne (bad) test xor mov loopne adc int mov jne test (bad) lea rorb out xor jb or push fld1 rex.XB add lods cmpsl retq cmpsb and mov jbe (bad) (bad) (bad) scas (bad) xchg pushq (bad) loopne scas xchg es fimull sub (bad) cmc and adc loopne lock xor cmp lods and scas cmp loopne outsb jnp (bad) rex.WRB add cltd insb jbe callq sahf rex.WB jo loopne jle shll or or cmpl (bad) cs adc js (bad) jle sti or outsb incl pop jl mov or gs ja (bad) (bad) imul (bad) mul mov (bad) decl (bad) rcr (bad) (bad) cmpb and mov flds (bad) cmp add and cltd cld (bad) outsb rex.WRB (bad) out adc out jmpq sbb out lcall xchg ficomp xchg movabs pushq cwtl (bad) xchg out outsb cmp addb and adc mov and jbe mov mov (bad) (bad) xor in sbb jmpq jne or xlat cmp rex.B (bad) and sub (bad) sub or mov sahf pushfq out test (bad) push (bad) or jg rex.WX scas imul add add cld mov adc jnp jg data16 fcompl push xchg incb jno movslq cltd add mov xor rex add sbb jg movslq std (bad) rex.R insl rex.WXB setg sbb insb mov jns cmpsb shl rclb (bad) fcomi jle out (bad) lea rex stc addr32 mov nop movslq xor in loop rex out clc cli icebp push adc mov add adc xor jno (bad) outsl clc push add icebp jg push jnp mov mov mov (bad) mov fadds push add push xchg jrcxz sbb (bad) push cmp in stc (bad) add movabs (bad) loopne addr32 movabs callq cmp add lret (bad) push xor or and cli (bad) loopne rex.RX fs rex.B mov jns push movl xchg mov insl gs mov push jae clc xchg sahf jg cmp mov rex.RB sub rex.XB and data16 cltd xchg test shr (bad) es sub (bad) jnp ja loopne or xchg (bad) pop loopne add and push enterq insl loopne rex.RXB cmp insb fchs mov mov lahf (bad) cmp (bad) outsl or pop loopne out cmp out nop loopne mov pop in add gs js sbb icebp push rex.WRX int insl rex.RB out add xor (bad) jmpq mov std (bad) mov mov mov shr ficoml loopne adc (bad) mov push adcb rex.WRX lret add out pushq sbb push fwait (bad) pushq (bad) outsb (bad) (bad) (bad) rex.RXB push (bad) jmpq jo sub iret rex.WRXB lods fwait loope fisubl adc loope loopne hlt cmp mov adc divb lahf xchg test test loopne loope stc sbb movabs icebp mov rorb adc rex.W cs and xchg push mov jl loopne (bad) lret adcl leaveq retq callq fnstcw and (bad) test movsb imul movabs outsb nop lock pushq loopne notl cmp movabs pushq sbb (bad) jns rex.WRB (bad) or (bad) lods (bad) loope xchg adc ss out xor cltd cmp add and loope or (bad) mov jg or out loopne pop adc pushfq or insl js (bad) mov rex.WRX (bad) mov mov retq lods mov nop pushq loopne push pop cmp or mov jl mov shl (bad) adcb adc nop hlt fsub lahf (bad) (bad) mov loopne es scas in imul jge outsb xor (bad) rex.WRX rex.WXB xchg sub mov test loopne jae fsubl (bad) int jg jmpq cltd movslq adc movabs add mov je imul pop cmp pop fucom or and loopne repnz (bad) imul xchg (bad) (bad) loopne add mov cmp movsl repnz mov lcall fmull mov xor movslq cmp movabs out pop js jg outsb gs cmp enterq (bad) in pop sbb cltd push ds test (bad) sub pop adc mov sbb (bad) loop mov jae rex.X lret push jrcxz negl or iret fisubr retq shlb data16 ja (bad) cld sub std shlb lret cmpsb and mov mov mov shll in adc cmp pop stos in xor jg cmp decl (bad) and div mov (bad) jno loope mov mov (bad) movabs (bad) clc mov pop or cmp mov in cmp (bad) in mov pop rcl xchg sbb int outsb sbb and xor movabs pop loopne rex.WR jl movslq jae (bad) jle cli xchg shl movabs xor insb test (bad) jge lret cmp out popfq ss xchg (bad) mov xchg fidivr push xchg xchg xchg cmpsl in xor nop mov movabs lods pushfq sub jno (bad) or in xchg rclb rex.WXB or xlat loopne (bad) push imul scas stc popfq rex.RB nop jmp adc add lock and mov in popfq xchg in (bad) jno repz sbb mov (bad) jbe sbb jo in push and and rex.WR out mov jmp adc rcrb push sbb adc (bad) je cltd out jge pop and sarl jae scas in leaveq out (bad) int sbb cmpsb jb js outsl lock (bad) (bad) iret lods (bad) pushq (bad) xchg repz enterq mov out pushq jae in ja icebp sub sarb adc cmpsb in jmp (bad) mov (bad) pushq rex fwait rcll leaveq (bad) cmc lcall sbb or (bad) jg fldl fild sbb adc push pop mull rex.WXB add cmp adc xchg outsl callq int repz rex.WB xorl callq fildl mov cmp jl mov roll cmp (bad) sub (bad) icebp insb pop imul in insl es and (bad) pushq xor or add enterq jmpq and stc addl addr32 cmp mov fstpl cs or adc mov xchg gs movabs push (bad) (bad) test xchg ds (bad) iret pushq (bad) jl pop mov jnp rex.WRX out jmpq add pushq rex.WR mov jg cmp loope or subl rex.XB insb cmp rcll mull jo lods mov (bad) xor jg,pt (bad) (bad) stos enterq push adc cmp jnp pushq idivl rex.X add push (bad) movsb sbb adc (bad) stc (bad) adc (bad) jge (bad) (bad) cmp loop and or (bad) push xor scas xchg repnz mov sbb addr32 push sub loop (bad) adc (bad) test jrcxz insl movabs jmp mov loopne lock outsl rex.W xor sti push jp and negl jno (bad) loopne scas imul es clc out rex.WRB add (bad) push incl (bad) or rclb (bad) es lods xchg cli cwtl repnz adc rex.RXB or pop (bad) loopne scas sub xlat lea scas jbe rex.WB xchg rex.WRXB sbb loopne mov int3 cmp mov cmp cli mov orb fwait and loopne jle mov adc push loopne push mov stos sub loopne adc cmpsb movabs (bad) add sahf mov repz movabs (bad) (bad) xor shll sub (bad) push (bad) push pop (bad) jmp loopne ja jnp mov mov rolb mov add rex.RX loopne rex and nop loope xor rex.W mov (bad) pushfq (bad) retq sbb loopne pop or insb rcr xchg lods (bad) add adc (bad) rcl lahf movsb or rex.X and (bad) push (bad) movabs loopne mov sar mov xor rolb jle (bad) es outsl in rcrl je (bad) loopne cmp fsub mov push cmpb push or jno sar xchg mov xchg (bad) adcb out cmp (bad) mov rorb mov movabs xchg sti and xchg repz rex.WXB adc shll rex.RB xor mov jmpq (bad) add and retq mov jge rex.RX test (bad) (bad) rex.X cs jl (bad) push enterq loopne mov movsb int3 push mov mov pop cs push loopne std jbe hlt and jb scas (bad) (bad) cmpsl sbb cmpsb loopne mov or int (bad) pop rex and rex.X gs in movabs jmpq and sub in hlt jno rolb (bad) jle rex.WRB outsb addr32 enterq loopne pop notl add movabs sub repz test xchg repnz test (bad) rorl mov int decl pop and sub imul loopne mov and out loopne pop jno pop or addr32 jle adc data16 fisttpl mulb loopne cmpsl insb enterq mov decl loop,pt pop push (bad) adc cli fildll adc xchg xchg loopne xor jg fstpl push rorl and jmpq (bad) mov jbe je jle mov (bad) in cmpsl mov adc and sahf loopne repz cld add and mov mov pop in rex.RB or scas insb (bad) rex.WB pop (bad) test sbb cmp (bad) push fucomi mov (bad) cmp (bad) insb add mov in fidivr fstl mov outsl fsubrl pushfq loopne push movsl xchg nop loopne ss fs rex.WRB pop or add cmp (bad) outsb loop jmpq in adc lret icebp rex.WX cmc xor jae (bad) sub or test hlt (bad) add sahf nop sti (bad) rex.WB lods (bad) rex.WR stos (bad) fs sbb push mov (bad) mov pushq sti mov mov pop sub mov fwait outsb mov loop in or and loopne (bad) popq cwtl in adc clc sahf adc (bad) mov and jae adc (bad) cmp or pop loopne and jo nop repnz jae rex loopne imul cmp (bad) callq outsl jbe (bad) mov mov scas imul hlt (bad) xor loopne xchg andb mov xor mov ja (bad) xlat (bad) scas xchg sahf loopne jne sbb shlb push and xlat and hlt mov cmp fwait sbb or fsubrs cld jo add retq or loopne or movsb xchg loopne fwait orl test repz rex.RX rex.WX test rex.X push cmp (bad) xchg rex.WR xchg in push rex.RX fwait fs movabs (bad) roll cltd movabs stos fstps fprem xor sbbb mov jle cmp out repnz movsl mov rolb pushfq sbb fcmovne sbb scas pop rex.WB repnz cmp cmp lahf (bad) xor scas (bad) (bad) mov xchg in ss adc loopne (bad) pop and add fs imul cltd loopne adc adc rex.X xor xchg movabs fild in push (bad) pop (bad) jbe icebp adc lret and xchg rex.B (bad) callq lods pushfq mov mulb push ja (bad) (bad) xchg clc loopne fdivs mov loopne mov sbb int3 (bad) mov fiaddl jrcxz rex xor sbb movabs cmp mov mov (bad) cmp add scas gs add xchg adc cmpsl stc mov pop rcr mov pop rex.RX movabs jne (bad) jg pushq add pop (bad) push (bad) cmpsb (bad) xor xchg and icebp fs (bad) int xchg sbb int pushfq shll adc (bad) adc adc movq jbe rex.WB clc fcompl xor (bad) push incl cmpsl cltd loopne (bad) (bad) sti fwait mov jl xchg xchg rex.WB (bad) (bad) xor loopne iret int3 jne jmp xor pop loopne rorl add fist mov lea movl loopne push xchg fs test int jrcxz and loop lods add xchg xlat cmc xchg mov movsb xchg (bad) mov imul cmc (bad) imul leaveq (bad) lret nop lea (bad) movslq in xchg mov (bad) pushq pop fist add fcoms in (bad) lods lret mov or rex.WRB adc fucom out loop (bad) mul pop rex.W addr32 iret lods lret xchg add adc (bad) cmp icebp test (bad) loopne cwtl mov movsb (bad) xchg rex.WXB imulb rex.WR push test loopne int3 mov mov (bad) pop loopne orl loopne xchg enterq rex.WX jmpq movslq incb icebp test loopne and (bad) test fistpl fnstenv rex.WRXB sub loopne loope push lret lret loopne and pop rex.RXB test cli (bad) rex.WRX movabs outsl xchg scas fcomps out pushfq mov mull mov (bad) jmpq push sarb xor gs xchg xchg loopne rex.WXB mov es (bad) icebp add sti (bad) xchg pop mov loopne (bad) fildl jmpq (bad) sbb cwtl outsl divl jb sbb cmp jle sbb retq fiaddl cmp loopne jp rex.B (bad) jmp fistl (bad) jg ffree push rex.WRB movabs lret loopne rex.X movslq or (bad) jle mov in insb pushq xchg sbb loopne rex.RXB add and mov sar out in rex.RXB fldl out xchg adc add and lods rex.WRXB test mov mov (bad) or iret in add or rcr (bad) clc jl xor mov rex.WB adc cmpsb and (bad) fisubrl xchg loope (bad) retq stc xor mov lea ja rex.RX icebp (bad) adcl adc callq xchg jmpq push rcr jmp loopne leaveq mov es roll jo sbb adc push (bad) loopne icebp rex.RB loopne xor push pop (bad) mov jrcxz rex hlt add push and and rex.WR rex.WX loopne loop movabs callq movabs sub (bad) (bad) push rex.RX mov (bad) fcos lahf push ja cmpsb mov loopne (bad) sbb (bad) loopne pop push pop mov jl ss iret cmp rex.RX loopne sub movabs insl add fwait addb add insl or jmpq rorb jnp push cmp (bad) sti (bad) enterq test fcomps movslq jno out rex sbb adc jmpq push je xchg xor cmp and sub fistl mov loopne (bad) sub loopne (bad) jnp adc fistpll mov sbb jg stos test int push jno rex rex.WR int3 (bad) push loopne lahf ds jmp adc add insb (bad) rex.WRX popfq adc push jrcxz lret in push (bad) (bad) jne retq pop (bad) mov (bad) mov xchg mov out je pop (bad) cmp (bad) (bad) gs sahf (bad) or sbb (bad) pop sti xchg rex.X iret movabs (bad) jbe callq or sbb (bad) push lret or adc mov jg sbb popfq jnp (bad) es outsb stos in test in (bad) rex.WRXB pushq test xor mov mov pushfq gs fcomi cmp mov vpavgw std cmpl adc rex.WRX lock imull loope pop (bad) add add (bad) xchg pushfq mov (bad) mov xchg adc xor xor cmp add hlt (bad) mov js sbb rex.WRX in cs and pushfq (bad) fcomps adc rex.RXB jne shrl pop (bad) xchg mov mov pop rex.RX jno es jne cmp rex.W rex.R push rex.W or push out xchg (bad) out cmp test (bad) cmc in cli callq xor pop insl jnp or addl xor and add mov (bad) test (bad) addr32 test je (bad) mov rex.WRX mov mov rex pop rorb jmpq jo (bad) cmpl (bad) shrl rex.X mov cmp jl lcall pushq (bad) (bad) or jl repz (bad) cmc and insl (bad) lahf push lret xchg (bad) (bad) ds popfq push in ds and in jae push xlat (bad) psubb nop in (bad) lea cli adc js and xor sub (bad) xchg xor xor push out enterq push xchg mov (bad) xor js outsl rex.WX fdivr push sbb hlt stos cmp out shlb fiadd sbb (bad) jb cli out mov and outsb ja mov (bad) pop (bad) jb gs sbb cltd xchg and jle jmpq xchg lea repnz (bad) jne (bad) icebp in sbbl push and (bad) movabs popfq fiadd push callq (bad) outsb rolb and iret movabs cmp rex.RX mov push loopne test add xor xor adc add stos movsb repnz (bad) test fist jno data16 rex.RXB cmpsl jrcxz stos (bad) xchg test mov xor callw test movsb (bad) sbb movabs loop gs mov faddl (bad) cmp or repz (bad) lret rorl mov pop adc (bad) retq or mov loopne mov mov adc loopne cld mulb sub jmpq scas jne (bad) (bad) push movabs sbb add mov xchg pop shl decb insl fwait mov push insb loopne push es rex.WRX shr rex.W repnz mov add jb int shrb xchg (bad) out or shrl stos movabs or (bad) retq or xorl loopne (bad) lods insb movsl xor loopne ss (bad) xchg jns loopne (bad) out out (bad) mov leaveq mov movsb scas mov cmp loopne xchg adc loopne rex.RXB cwtl icebp and pushq test es sbb cmp pop ss in lret jno pop adc sbb ljmp mov loopne (bad) rex (bad) xor lret rex.WRB mov (bad) mov rex.WXB (bad) sbb (bad) mov test cmpb (bad) stos fs rex.RXB pop hlt add sub xlat jmpq xor cmp sub push imul fildl movslq xlat lret fidivr pushq in xchg fs rcl (bad) rorb in ficoml in movsl loopne add mov pop loopne (bad) test pushq loope rex.X cmp clc sub adc cmp rex.B pop loope cmp in retq sar out sub sub out mov sbb (bad) pop rex ss pop mov callq jnp (bad) jbe in jno fistp test (bad) jmpq jle shrl lock cmpsl push mov (bad) int ljmp repnz (bad) jge cmp and ficoml jrcxz (bad) xor adc cltd xchg jp pop and or sub rex.B adc xchg (bad) (bad) in test (bad) mov lret (bad) loopne (bad) xor test or fs or iret (bad) cld movabs fs rex.WB rex sub int3 lods sub in int3 (bad) imul movslq pushfq cmc (bad) rex.RB adc sbb mov fisttp cmpsb iret outsb sub movabs repz pop imul jbe imul push fld test movabs xor (bad) callq stos popfq loope fdivl int xchg movsb out rex.X (bad) cmp jmp pop movsb hlt or in lret xor mov movsb and callq mov popfq lahf sbb movabs jl (bad) (bad) (bad) sbb fs push (bad) xlat test test movabs stos in stos rex.WRX push jmp andl loopne add xor fdivl (bad) loopne pop stos std (bad) cmp loopne pop scas int popfq (bad) jbe movabs (bad) loopne hlt nop xchg and callq mov jae jg sbbl loopne sar fcoms popfq mov xchg lods (bad) and repnz callq movswl loopne imul loopne xchg fwait sub cmp rex.WRX (bad) fdiv sbb fcmove in and sbb sub jmpq mov orb lret enterq faddp cmpsl fstpl mov xchg pushq (bad) jmp rex.WX fiaddl sbb loopne lock in movabs (bad) test (bad) int insb in pushq (bad) and (bad) and push movsb roll loopne mov out loopne ja insl rcll and popfq int3 xlat sbb sbb fisttpl nop jo push shl repnz sbb cwtl add (bad) pushq pop jle mov adc jg loopne (bad) jns xchg xchg lahf mov in repz cmp retq (bad) rcrb xor cmp in scas jmp loopne (bad) rex.WRB mov (bad) cmp sub jbe mov lods loopne pushq lock adc jrcxz (bad) adc sub loopne rex.WXB rex.B rex.R es jmpq (bad) movabs mov loope repnz (bad) mov fadds sti in and rex.WXB movslq loopne xchg jb rex.W (bad) loopne xchg sar sbb loopne movslq jmpq movabs mov loopne (bad) rex.B rex jl (bad) rex.WXB in adc adc nop lret lods jg cli cli fbld rex.RX ss xor outsb gs (bad) mov xor retq cmc adc mov in pop loopne pop clc js sbb loopne movabs mov sub js addr32 xor xchg cltd loopne mov and adc mov loope push rcrb scas loopne (bad) sbb mov adc sti orl push or loopne fadd mov repz jmpq or (bad) movabs or sbb (bad) and mov sub mov adc scas cmp sub adc push in sub (bad) sahf xor (bad) (bad) repnz (bad) or (bad) push leaveq int3 loopne sub jmp loopne test cmc in std cmpsl loopne push or fcompl jmpq rclb ss je sub movsl jl rex mov loopne ss int3 movslq xchg loopne fstps fwait push adc movabs lret ficompl loopne fstpl push xchg or rex.R jle xchg sbb in imul loop xchg sahf sub cld loopne xorl gs shlb icebp rex.WX rex.B fild lock sti or cmpsb loopne test retq sub ja rex.RXB repnz out test loopne movsl adc (bad) sub mov add adc loopne jae lret es addr32 rex.WXB sub rex.B pushfq movsb xchg rex sbb retq xor (bad) sub (bad) pop loopne addr32 test xchg (bad) (bad) add js pop rex.RXB or js and add stos lret loopne pop and std movsl mov (bad) mov test movabs cmp (bad) push jle and pop (bad) push (bad) mov lret clc ss in (bad) cmc movabs add add lea callq adc add (bad) and cmp sub loop sti (bad) ficoml insl movslq cmp (bad) sbbl or (bad) out jle (bad) loopne push movslq mov shl lahf lcall fwait loopne mov out add adc rex.RXB mov sbb shl movsb add loopne scas mov sub stos retq (bad) (bad) nop sub and (bad) (bad) add pavgb (bad) mov sbb sar rex.X scas xchg retq (bad) loopne push cli in pop jg or sbb adc rex.RX (bad) clc movabs sbb sbb rex.RB sti (bad) jmp (bad) stos rolb movsb (bad) xchg in xchg (bad) cmovnp (bad) movsl and mov mov sbb pop xchg cmc xchg cmp (bad) addr32 ja nop mov test movabs lods loopne and fsubrl mov repnz addr32 loopne faddl out pop fldt jmpq push sarb in loopne fisubl movabs (bad) (bad) adc rex.WXB sbb in or sbb in mov sbb rex.RX imul and mov movabs in jns jle (bad) mov xchg rcr (bad) xchg addl pop mov (bad) (bad) ja (bad) out fisttpll jno adc xchg retq pop rex xlat and mov stos cmp subl in pushfq (bad) sbb jle loopne (bad) bndstx (bad) push xchg xchg fnstenv enterq adc callq xchg sub mov mov adc rex.W mov test nop xchg rex.B clc sub lods (bad) out scas mov add inc xor add pop jb int mov movsl shl mov mov jp mov (bad) out movabs cli or movabs leaveq out lret mov (bad) movabs (bad) ss imul (bad) jb out jp mov xlat (bad) ss (bad) lods pushq sub pop movsl cmp (bad) add loopne sub pushq test (bad) push xchg in xchg mov hlt scas add loopne jle test cmp sbb jns jmpq fcom (bad) mov mov add add sub mov sbb loopne (bad) addr32 insl fnop xor ror je push js (bad) fsubrl (bad) xor (bad) push in loopne outsb xchg shl jge fidiv mov mov loopne rex.WX movslq adc lret mov roll lret jp popfq retq xor in insl pop and (bad) int mov (bad) (bad) rex.WX add xchg callq fldl xchg mov fcompl hlt rex.WXB loopne lock stos xchg mov adc mov jo test std (bad) hlt sub xor loopne xchg (bad) rex.WRX sub jmpq (bad) jo shrb movsl repnz pop cltd pop cltd popfq loopne (bad) mov loopne movsb or leaveq movabs jo callq in std and (bad) (bad) fidivl pushq mov or (bad) mov in (bad) movslq andl (bad) jg out mov (bad) cmp (bad) nop push (bad) clc xchg (bad) cld lret cli xchg outsl rex.WRB clc loopne push cwtl retq loopne,pt jb xor fcmovbe (bad) (bad) in repnz (bad) (bad) and jg and (bad) mov mov cmpsb rex mulb (bad) fild push loopne repz sbb jbe movsl mov (bad) movabs movsl loopne (bad) loop movabs es xor mov mov jmp (bad) jle mov xchg lods (bad) imul rex.RXB loopne (bad) test mov sub test loopne clc jle sti (bad) mov (bad) rex.WXB (bad) mov cmp loopne or mov loope fcmovnb mov xchg xchg cmp pushfq (bad) movabs stos (bad) xor (bad) fwait test loopne lods sub hlt mov loopne adc push sbb sarl xor mov fdivl add nop (bad) (bad) sahf (bad) rorb mov lret loopne rex.WXB loopne mov xor popfq (bad) sub (bad) add decl rorb rcrl scas mov adcb cmpsl pop subps mov sub lahf fucom push movabs jp insl xlat lock jg (bad) (bad) and movabs adc jno movsb cltd xchg sbb int and add icebp imul callq add in jge icebp (bad) outsb in jp fistl cmp (bad) (bad) loop ss push loopne cmp movabs mov pop imul push xchg and fcomi (bad) jb (bad) xchg rorl rex.XB in add cmp jle xor push xlat repnz jmpq (bad) inc in cmp sbb xchg jmpq rex.WRB nop loop (bad) loopne scas ficomp sbb add loopne or fsubrs (bad) retq xchg neg xchg sti xchg (bad) mov xchg int repnz mov (bad) xor (bad) xchg (bad) stc cs fcmovnu popfq cli loopne xchg cmc push out xchg lea cmp nop out loopne stos (bad) idivl mov or sbb shrb add mov xchg push sbb (bad) xchg jmpq std ja cmpsl retq rex.WRX mov (bad) int cmp test int push pop jbe (bad) add push adc in out lahf push psubb (bad) fwait (bad) (bad) callq adc insb ds rex.WB in sahf (bad) rex.WRB cmp repnz js push sahf jbe and movl pop cmp rex.X mov (bad) cmpsl mov sbb movsb (bad) sbb sub pop loope sbb fwait jns scas or rex.W fldl2t rex.W rex.WX lret (bad) adc sub sbb (bad) jo xchg loopne pushq repz sbb rex.WRB lock add icebp mov fildll je rex.WRB rex.RXB add es rex.WRXB hlt jrcxz test rex.WX out xor (bad) icebp insl lret je and retq clc in (bad) std (bad) (bad) jl sbb xor jbe loope cmp rex.XB jle mov jns imul loope adc xor fwait cs (bad) enterq xor (bad) sahf mov or enterq (bad) pop mov xor loopne lret rex.X xor (bad) sub (bad) rex.RXB repz cmpl loopne movslq add loopne xchg (bad) (bad) icebp popfq sub loopne cmc xor mov (bad) (bad) jl (bad) pop sub rex.R (bad) mov loopne xchg hlt sbb ljmp or add shl lock lea add jle jmpq jno stos jmp pop push adc (bad) and repz add pop stos ss mov ja sarl cli movsl test mov and movabs add in stos nop mov pushq pop rex.R sub mov sbbl (bad) jae jl sbb (bad) jrcxz push (bad) sbb loopne (bad) xlat movabs movabs (bad) rex.XB push and out xchg jp gs stos loopne push icebp test (bad) rex.WB jmpq cmp or loopne test pushq (bad) cld in jb (bad) rex.RX jrcxz imul movabs jb (bad) (bad) rex.WR mov js mov mov movsl hlt sub lret int3 rex.WR cli cwtl sbb (bad) or rol push sti orb (bad) lret cs imul sbb and movsl add fbstp movabs push xlat rex.W and lods xchg sub insl and popw mov jge (bad) jle (bad) test or rex.W fs xor (bad) jno jge jmpq mov and jle callq rex.WX (bad) shrl mov (bad) and sub rex.WRB (bad) xor fisttpl cmp (bad) mov cmp mov sbb loopne push sub cwtl adcl fsubrl in movabs mov shrb rex.RXB ss or (bad) lock jg fisub sub mov lock fneni(8087 mov pushfq std push loopne cli add and sbb (bad) jbe stos jrcxz or (bad) rex.WXB loopne mov add push add loopne add mov and (bad) or pushq pushfq gs subb mov out jmpq sub lret repz add xchg (bad) loopne mov sub mov adc es in movslq add mov stos adc and fistpl (bad) out callq add xchg mov rex.W cmpb (bad) fcmovne add sbb movsl (bad) mov (bad) fdivrl adc jg mov jle jrcxz std or cmp pushq loop jp dec loopne out (bad) test mov loopne in xor (bad) or sbb mov scas rcll jmpq movsl cwtl jnp xchg out jne or mov in movabs xchg mov (bad) rex.RXB adc movabs repz out (bad) cmp pushfq loopne mov rcll xchg (bad) movabs (bad) clc (bad) add (bad) pop callq adc jle rclb sub (bad) (bad) mov mov in mov mov mov data16 rorb dec push popfq jle mov jae cld movabs retq iret sub je jo cmp test cmp xor (bad) sbb jnp jrcxz push xchg (bad) mov in rorl sub rex.RX (bad) xchg fistpl (bad) loope jnp cmp (bad) jnp ss outsl pop in mov rex.RX jo cmpsl mov cmpb or sbb or lock callq cmp movsb cmpsb int3 lahf rex.WRX xchg cld and cltd stc rcrb (bad) and sysretw jl fimull cmp imul and (bad) rex.RX rolb movslq pushq sub xor sbb sub sub (bad) outsb popfq pop (bad) sbb leaveq (bad) sbb xchg cmp in test cmc xlat shr sbb mov sbb loopne jmpq sbb loopne push mov fmuls (bad) jbe (bad) lea fnstsw loop popq test adc jle (bad) or hlt (bad) rex.WRX insl mov loopne pop incb movslq movabs fadds js rex.B out or jae int3 retq jmp loopne mov fs jb imul loope (bad) mov adc (bad) jmp rex.WB loopne or rex add add fsubs mov es in sbb and pop shlb rex.WXB sub (bad) std rcll cli xchg jg idivl out (bad) imul xor jo mov callq mov sbb (bad) enterq addr32 rex.B lcall (bad) lock mov lea ds cmp jle cmpsb movslq scas jns mov cmp xor fcomps nop pop mov rex.X sbb or cmp jmpq pushq int fisubl cmc xor xor fwait loopne adc stos loop xchg jg mov add sbb outsl mov test or loopne cs rcrl (bad) (bad) add lea xchg out hlt fnop fs es fwait loopne insl cld jg jae cmp jbe loopne sub pop icebp (bad) jo rex.WRXB (bad) sub out add insl std (bad) pushq jge (bad) push mov repnz sbb lock jrcxz stos loopne (bad) jg (bad) jge in in loop stos (bad) movabs sub xor cmp outsl push loopne fstl in cwtl lods int3 js scas (bad) cmp add loop rex xchg or mov movsl cmp ljmp push mov test adc hlt mov (bad) xchg sbb add (bad) subl xor and movslq rex.WRXB loopne imul mov (bad) imul stos outsb xchg fcomps pop cld callq iret xlat addb sub sub insb (bad) pushfq lret lret (bad) xor rcll adc retq callq fcomps stos fcmovnbe loopne mov pop (bad) stc and sarb xor repz loopne sti stos push outsb mov cmpsl (bad) sub cwtl loopne (bad) mov loopne add insl jns (bad) (bad) loopne and push jl and (bad) (bad) jne enterq xchg fucom cmp lock xchg (bad) cmpsb incl leaveq sarl movsl loop add sarl cmp mov jb jrcxz or loopne mov fcom int out in and in (bad) (bad) sti (bad) mov ss fwait jo sub xchg rex.R mov loopne cmp clc rex.WRXB adc cmp out push jmpq (bad) xor rex.WX repnz (bad) and (bad) pavgb sbb mov mov movabs and (bad) out callq outsl movabs sbb je jae push sub mov iret lret add rex.WXB rex.RX mov imul std gs sub mov (bad) add xchg (bad) (bad) loopne (bad) sub pop and loopne mov icebp mov jb (bad) xor pop pop xchg (bad) mov xlat and ja fsub add pop ss dec loopne clc or in jg jae data16 repz pop (bad) rex.WRX test sti sub mov (bad) jb stos in movabs jp loopne clc sub jmpq rcr xor cmp icebp lock andb pushq sbb mov (bad) (bad) fldl loop mov rex.RX or ja xchg jmp loopne leaveq or bnd js pop (bad) mov push rex.WB or mov push out sti rex.RX or sbb (bad) test loopne insb sbbl cmp (bad) mov jmpq sub outsb movslq loopne cmpsl (bad) mov mov mov jae (bad) scas jo sti sub rorb rex.B rex.RB and xchg xchg rex (bad) mov push (bad) jmpq rex.WB mov (bad) loopne neg cltd jp mov push xchg outsb (bad) stos (bad) (bad) std adc shll (bad) retq loopne xchg (bad) push (bad) (bad) loopne rex.WB cli mov loopne sub out mov ss (bad) cmp add stos loopne jge add jbe mul mov xor adc fildll sbb (bad) fucom pushfq mov ja add es jmp idivl cmpsl loope or xchg mov adc out loopne pop pushq mov (bad) sbb fisubr rorl movabs mov out mov (bad) xlat (bad) fdivrs (bad) loopne adc lahf pop adc rex.WR repz lret nop adc jrcxz and jg loopne je int (bad) pushq loopne sub jp jbe cld and xchg or loopne mov stos in push xchg retq mov rcr (bad) loopne test stos jmpq mov cli xchg jg (bad) popfq in loopne pop movsl repnz (bad) jmpq push leaveq add or sbb push fdivs movabs pop push add icebp xchg (bad) adc nop (bad) lea (bad) jrcxz sarb mov xor icebp (bad) add in shl jp add cmp movabs pop add mov test adc rcrb movsb xor rcll stos sbb rex.WRX rex.RB ficoml fidivl cwtl stc in mov adc loopne and (bad) adc movabs cmp mov xor rex.RB pop loopne xchg xorl rex.WR rex.WB roll movsb adc mov cmpsl (bad) push cmp (bad) mov test adc pop inc push cli mov (bad) adc in mov xchg jmpq outsl nop mov stc test add adc pop sbb in testl mov pop sbb (bad) mov lret (bad) rex.RXB sbb lods (bad) rex.WXB outsb loopne (bad) addr32 test loopne cmp mov or in loopne es callq push mov push addb mov loopne (bad) scas cmp loopne fistp lods sbb mov test jl (bad) cld cmpsl rorl (bad) shl loopne stos cmp out jnp rex.XB add mov cld (bad) cld in (bad) push (bad) in rex.W and cmp sbb xchg sub adc cmp out sbb mov sub sbb callq nop pushq pushq push icebp jb (bad) mov (bad) notb loope in cmpsl (bad) sbb bnd in (bad) ds jns loop or fildl (bad) (bad) fisttpll out and fwait movabs int mov (bad) (bad) scas xor repz xor sbb jno mov push (bad) (bad) push je (bad) or (bad) lret ja in cmc cmp test jmpq (bad) out adc pushq sub int3 jp insb (bad) (bad) (bad) fadds (bad) pop xchg push push push mov or mov divl iret (bad) pop mov out jno (bad) (bad) xor jnp xlat (bad) or (bad) and (bad) push (bad) xchg js adcb or mov and (bad) (bad) imul cld sbb pop ror rclb lock clc jns pushfq cmp loopne movsl (bad) vpsllw cltd mov (bad) stos rex.WX repnz loopne icebp outsb outsl rex.RXB or jp push (bad) clc xchg jg shlb xchg jb stc pop cmp (bad) cmpsb jl sahf loope mov mov add rex.RXB shr fiadd mov pop stos divl mov loopne (bad) out mov stc test movabs int jo (bad) mov sti std rex.X rex.WRB rolb stos (bad) repz loopne loope fimull gs jo movslq push xchg insl loopne stos movabs out lret rex.WRX jge push rex.X rex.WRB add divb movhps fdivrs loopne movabs imul in (bad) loopne (bad) test sub mov and rex.RX addr32 pop jg jns sbb rex.X loopne ja stos gs xchg loopne icebp and loop iret loopne (bad) sbb int3 (bad) mov inc insl or push (bad) rex.B (bad) pop sarb (bad) mov insb xor and fiaddl rex.RX xchg xchg loopne jp (bad) mov xchg int3 cmpsb push jne (bad) ja (bad) std cmp jg (bad) (bad) popfq cs (bad) movslq icebp push ja (bad) (bad) out (bad) mov mov pushfq (bad) rex.R movsl (bad) shrb pushfq lods nop js mov jne in (bad) rex.WX loopne icebp shrl mov and and cltd cmp test loopne es or mov loopne sub cmp or pop (bad) jmpq push movabs jno rex.RB and (bad) mov (bad) fwait pushq add (bad) out sbb loopne (bad) or pop mov movabs std jmp pop (bad) xor jmpq (bad) scas sub icebp adc (bad) and addr32 mov cwtl push mov fdivrs (bad) out rex.XB mov xchg (bad) (bad) outsl mov rex.WRX hlt or scas loopne jrcxz mov repnz cld mov sub adc fsubs xchg cmp lcall xchg popfq cmp and add push pop movabs and sub (bad) int mov test xchg ds outsb xor pop jne (bad) mov fs js push scas mov mull sahf icebp adc cmc in in rex sbb ficomp xlat loopne out roll mov xor (bad) xchg lret jmpq int3 sub mov mov cmp jnp xchg xchg mov adc popfq (bad) loopne push pop (bad) icebp fildll dec movabs loopne push callq (bad) push xlat cltd mov test push rex.XB sar sbb jp cwtl jmpq pop jo cmp cmp push add and out mov jae loopne pop fnstcw inc rex.WRX add (bad) repnz shrb adc (bad) movslq in mov lea pop jmpq addb int fist pop js (bad) and iret mov (bad) in pop rex.B rex.WXB push (bad) rex.XB cmp (bad) test out scas scas icebp jno adc xchg ss movabs cmp push loop fwait xor fisttpl mov jg (bad) sbb int3 (bad) (bad) rex.WR shlb test int jge mov loopne sbb mul rex.XB (bad) test (bad) fldl pop mov imul sbb jrcxz sub outsl lahf in and (bad) push (bad) (bad) incb add cwtl rex.WRXB fnstenv (bad) (bad) cmp int (bad) push clc (bad) test xchg rex.RB pop ss enterq lret mov sti out loopne adc cmp sti cwtl mov loop pop lret repnz lods sbb loopne sub test xchg rex.WXB fchs rex.WRB mov add (bad) (bad) icebp xchg loopne pop (bad) stos mov (bad) outsl mov movabs jnp cld adcb jle fistpl or push rex.R out mov rex.WB rex.B int3 mov repnz (bad) or xor rex.X sbb cmc movsl xchg xchg add pop loopne (bad) cmp loopne jp hlt xchg fldenv and int movsb rex.WX movsl xor jmp retq and rcrl movaps xchg and (bad) mov std cmp mov shlb cs add and add cli movabs xor out (bad) or lods stos lahf leaveq movabs rex.WR (bad) add (bad) sbb out fidivrl rex.WX retq jnp in movsb (bad) rex.WB sub adc sub xchg (bad) repnz scas adc or roll loopne sub add in movabs notb lods roll add sahf out mov xlat push fstpt addr32 xlat lahf fsub xor shll mov sbb (bad) sbb (bad) rex.RXB sub leaveq xchg orb fildl loopne adc fucomip stos push rex.XB jg sti (bad) sahf jne sub (bad) scas rex.X jge and (bad) jo loopne enterq in (bad) out push xchg loope add mov lock xlat icebp rex (bad) loop jmp loopne rcl (bad) cs rex.XB (bad) mov mov and jg sahf fistpll mov sub and out rex cld push xor mov mov pushq push loopne push movslq (bad) jmp pop cmp (bad) subl popfq hlt jle xchg lahf (bad) movsl in (bad) cmp or (bad) or push orb cmpb jmp add jrcxz and jnp fisubrl mov (bad) icebp repnz pop cmpsl scas add adc (bad) add xor jmpq enterq es icebp rex.WRB mov mov sub cmpsl lock mov pop sbb fidivl iret out cli (bad) mov xor xchg pop sbb ja sub (bad) loopne shlb out and mov insb jae loopne push lahf or mov mov loopne fdivrl rex.W cs adc (bad) ror in mov or loopne xor lahf loopne xchg kmovw out loopne adc rex.XB loopne imulb (bad) pop clc rex.WRXB xchg out test cmp mov insb lret adc rex.WRX clc (bad) or hlt adc jmp lods (bad) je (bad) mov cwtl (bad) dec movabs out push loopne (bad) (bad) add and loopne stc xchg xchg mov imul or stos movabs (bad) xorl mov sbb or (bad) adc fwait (bad) mov jg addr32 in mov (bad) repz (bad) lahf outsb in or js xor nop jmpq xchg scas xor hlt (bad) xor rex.XB outsb shlb out jnp (bad) loope jle mov or xchg stos jrcxz (bad) stc cs lahf pop movabs pop push (bad) loope fsubrs and sbb cmp movsl nop sbb popfq adc cmp insl jae adc adc (bad) je data16 (bad) mov rcl (bad) in (bad) shrl fcoml (bad) add imul adc jle add (bad) cmp leaveq (bad) loopne push mov (bad) loopne out mov gs rex.RX jb mov icebp push (bad) or mov fs pop push loopne jle (bad) adc pop mov rex.W rex.RX clc retq xor movabs mov movabs icebp push popfq xor (bad) rex.WR popq movabs clc sub loopne sbb test sub and (bad) xlat pushq loopne mov fcomps movabs xor pop mov test loopne jno xor loopne jne out xor (bad) stos xchg cld loopne shl rex.WRXB and jo sbb fsqrt jl shl movabs push (bad) rex.WRX (bad) (bad) leaveq loopne push int (bad) idivb loopne mov (bad) fidivrl mov push iret and jne (bad) enterq jmpq (bad) rol rol loopnel add mov mov xorl movsl or nop add (bad) mov push shlb mov mov pop vpsrad xlat in pop mov insl sub push (bad) mov fchs xor sti pop rol or mov push fidivl rex.WB mov cli lret push mov rcl rex.WB push and and repnz (bad) sti (bad) jp gs rcl test (bad) (bad) jnp (bad) mov pop loopne xchg adc cmp and cmpsb adcl int3 mov fimul and mov cmp gs out (bad) and xor movabs adc loopne pop movabs xor lock (bad) pushq or std jne in testl lret (bad) loopne cmc cmp mov mov mov adc jrcxz (bad) sbb clc test stc mov (bad) loopne (bad) rex.RB cmpsb fcmovne (bad) fldenv callq gs jle rol jnp callq pop xchg in loopne xor add cmp insb rex.XB out (bad) data16 lahf sub leaveq jbe xlat (bad) and cmpsb cmp adc fidivr xlat cmp js popfq push jge sbb pushq movsb int3 mov and movsl (bad) jge sbb movabs sub rex.WRB cmp rex.RXB shlb lock insl push mov or addl mov lret fiaddl loopne push mov jae (bad) mov jno fsts push (bad) rex.X cmp (bad) loopne shr xchg lahf jnp cld xchg or iret mov std jmp shl pushfq sub jg pop (bad) mov rex.X mov xor idivb loop pop subb ss (bad) mov add in lret loopne mov adc add sahf xorb mov movsl lss (bad) push in (bad) xchg out xchg sub push sti and lea sti cmp repz loopne (bad) or adc sub add orl jge sub push rex.WRXB sbb fdivrs xchg pop ss (bad) gs test ror pop rex.RB (bad) push xor and shrb scas add in idiv ds rex.WXB (bad) scas idivb (bad) adc mov jmpq cltd ds rex.X es sbb outsb mov (bad) jmp jno xor and in rex.RB js cmp loopne (bad) xchg jb xor mul rex.RX sbb std jl rex.WXB mov int3 cli pop mov paddsw jne xchg (bad) lahf mov sub rolb cli sub add movabs cmp pop sbb mov divl (bad) mov js (bad) je sar mov negb xor enterq and ja rex.RX rex.R es pop jle jmpq (bad) (bad) movsl push lret cmp int3 (bad) mov movabs pop and and mov push add imul cpuid loopne or xor or (bad) cmp xor and xchg xor push movslq xchg lods adc loopne sbb rex.W or xchg mov and adc xlat data16 repnz (bad) jmp (bad) rex.WB cmp adc icebp shrb jge test xchg loopne push jne out xchg (bad) sub mov movsb leaveq int (bad) mov loopne fmul push insb (bad) jrcxz adc (bad) cmc (bad) or (bad) sbb rex.RB xchg rex.WXB addb push callq jno movsl mov in adc (bad) add cmc xchg sbb loopne mov rex.WB xor in xchg (bad) in clc loop sahf mov (bad) jae fwait pop xlat jmp loopne movabs loopne add loopne,pn pop xchg loopne adc in or vhaddpd lret mov (bad) push loopne cs xchg fstpt and repnz rex.W add ss (bad) rex.RXB add jae mov loopne outsb (bad) pop pushq (bad) loopne movslq xchg sub jg add neg out xor jnp ror imul adc mov mov loopne int sub push (bad) loopne movabs (bad) loopne (bad) mov out (bad) (bad) xor insb rex.RB rex.WXB mov cli cmpsl (bad) (bad) xchg (bad) rex.B cmp movabs and out stos mov movabs rcrb xchg sbb xchg cmp mov lods ss loopnel fucomip xchg or (bad) loopne fisubr mov hlt loop rex cmovle (bad) sbb jbe mov and rex.WRXB loopne lahf popfq je jl retq xlat imul sbb stos cmp (bad) pop loope add lahf xchg add loopne pop (bad) (bad) mov hlt mov rex push mov in and adc rex rex.WRXB (bad) (bad) loopne stc jne xor pushq adc sbb rcll rex.RB sti sbb pop (bad) scas jnp sbb add xlat xchg jmpq mov movabs loopne rex.WRB repz sbb mov in jbe movabs adc retq and pop scas loopne (bad) mov ja rex.RXB insb cmpsl rex.WXB rex.WRXB jmpq jns rex.WRB xor mov fdiv or (bad) imul xor (bad) (bad) pop rex.WX fisubl xchg (bad) in fwait callq mov icebp jg jb (bad) addb sub (bad) js (bad) adc pop in iret (bad) in (bad) jle lods imul sbb (bad) clc lods sub jrcxz lods iret (bad) mov fcomps rorl std mov loop mov flds (bad) jl pushq loop gs stc in fnop es or xchg stos adc addr32 lret fnop mov (bad) rex.RX ss and fiadd pop mov pop sub jmp pop (bad) add mov jo jrcxz xchg es insb sub (bad) (bad) in es mov (bad) or movabs sbb loopne mov cmpsl adc loopne std and (bad) loopne sub add sbbl add cli xlat xchg pushq and shll xchg cmp repnz (bad) out and rex (bad) adc cli mov cli mov (bad) (bad) ds movabs fnstenv jne js cmp mov xchg rex.WRB gs push loop (bad) mul fstpl rex.RB stc insb loopel xchg data16 mov out and or (bad) stos xchg fwait in (bad) loopne sub push and rex.RXB loopne leaveq cmp sub or cs (bad) jmpq jns (bad) js and jl fldenv test movsb (bad) cltd pop mov (bad) ja pushq or loopne in test rorl sbb jo mov xchg (bad) cmp loope subl jns adc (bad) jl rcrl clc mov fldl lret (bad) test pop rex.RB rex.WRXB cmp (bad) xor rex.X jmpq mov sti loopne pop mov cmpsl decl notl jg jne push (bad) cmp retq loopne int3 or sti pop loopne or in xor in retq mov scas cli cmp std (bad) xor movsb (bad) pop cmp rex.WXB (bad) fwait push sti (bad) cli loopne popfq (bad) (bad) mov (bad) jbe (bad) pop (bad) imul scas (bad) sti rex (bad) mov out mov loop jmpq (bad) mov (bad) mov insl sbb cmp std sub loopne mov movabs pushq popfq cmp xchg loopne (bad) incb jne rex.RB out mov clc and sarb mov rex.B lock in imul jae scas (bad) rcrl jg (bad) sub popfq mov lock and (bad) imul (bad) mov xor add fbstp loopne test mov popfq cli sub sbb sub push loopne (bad) mov stos xor or stc jnp iret (bad) sbb gs rex.RX loopne xor xorb (bad) xchg retq rex.W scas sub (bad) cmpsl adc movabs (bad) jne mov (bad) rex jg stos movabs rex.WR xlat adc and out pop xchg rex.W mov jbe mov jrcxz xchg xor es xchg mov sahf jrcxz (bad) sub or or sti adc ja loopne push lods (bad) push adc pop rex.RB lods (bad) jl subl cmp loopne jg fsubp fdivrl loopne sbb repz cli (bad) push or addr32 jno mov js fwait andb loopne sti xchg mov sub rex.WX loopne (bad) and fs loop in movslq (bad) in (bad) loope (bad) or xchg imul loopne stc (bad) int3 jrcxz retq movsb pop movabs mov adc loopne mov or shll (bad) mov sbbl cmc (bad) pop int (bad) xor cmp test cmp lods mov (bad) mov cmc fsincos cs jae and (bad) scas or loopne fdivs pop (bad) xlat (bad) rex.XB leaveq callq mov mov mov insl fwait (bad) fistp fidiv rex mov jo pushq (bad) out mov (bad) (bad) sahf mov jge xor pushq pop xor rex.WB mov jg cmp fiadd rex.WRB adc cmpsl lret (bad) fiaddl jmp movsb callq fisubrl cltd cld push lret lret xchg or cmc movsb stos icebp repnz cmpsl push jns rex.B sub mov rex.R leaveq (bad) shrb cli jrcxz xor insl rex.WXB mov jle jl ficompl (bad) cmpsb pop xchg callq out and rex.X mov (bad) jrcxz jle (bad) (bad) lret sbb div (bad) (bad) (bad) in in rolb xchg jl or sbb rex.WRXB xchg mov rex.WX icebp xor mov loope cmp retq dec test (bad) nop (bad) stos loopne pop rex.R mov mov (bad) pushfq loopne fnstcw popfq xchg mov jmpq test push callq adc retq push (bad) or and or out cmp test (bad) pop xchg mov (bad) loopne outsl mov rex.WR pop (bad) (bad) mov (bad) rex.RXB adc add (bad) jo rex.WB movabs in gs rex mov lock or gs adc lret add (bad) sbb xchg (bad) adcl xchg loopne cwtl jb test sbbb (bad) xchg add jnp ja rclb or movabs int3 cwtl mov jo (bad) sbb (bad) pushq jg (bad) push pop and (bad) rex.WR xor mov shrb mov and in or jmpq rex.R data16 cmp mov test pop fisttpl mov movabs add (bad) icebp loop rex.RB callq jge (bad) in rcll cmp icebp repnz fildll rex.WRB insb insb movabs loopel outsl (bad) rclb add in rolb mov (bad) push (bad) rex.WXB xor mov (bad) cmp test rex.WRX std mov jl clc out or retq (bad) rex.WRXB and or xsavec cmp and pop movslq lret or pop lea (bad) sub addr32 (bad) popfq rolb (bad) (bad) pushw and (bad) mov sub outsb stos adc out pop pop test pop nop rex mov xor test adc pushq in cmp shll or (bad) and mov or clc icebp push (bad) repnz pop (bad) (bad) jg fild rex.RX or jno jrcxz popfq rex (bad) mov fsubrs in adc mov push jg pop cli repz push icebp add xchg movabs pushq jrcxz mov sub adc scas repnz mov in movsb rex.RX test ljmp xchg mov jmp rex.WRX fstpl sbb adc and cwtl (bad) mov fistl sbb fildll rol add movslq test std stos jge ds xorb jnp retq lret addr32 mov xor jne callq rex.W callq cmc push jnp (bad) cwtl push add pop adc mov xlat jno outsb or rex.RXB xchg sub mov je (bad) rex.XB (bad) mov mov (bad) (bad) mov fwait in sub xor (bad) sbb roll (bad) movsb sub movslq sbb adc adc fs imul xchg sarb retq stc out (bad) xor rex.XB rex.WRB add ds stos lock in ds hlt (bad) sbb out (bad) (bad) rex.WR rex.WRX or rcrb (bad) mov in lret xchg clc insl movabs fldcw in rex.WRX imul jp (bad) mov xor out pop in (bad) push jp adc test push fcomps xor adcl cltd sub pop sbb popfq vpaddd mov ja adc (bad) addr32 sub out pushq and test test fwait insb callq sarl (bad) movabs pop fsubr cmp xchg jo (bad) sub mov push lock rex.RB pushq push push adc (bad) insl ds cld jrcxz imul mov xchg movabs lods (bad) sarl hlt retq rcr insb cs jne jmp rex.WRXB sti mov ficom vorpd int3 xor rex.RX jp out movabs sbb sbb rex.WB (bad) and mov add xor fstps (bad) (bad) in lret pop mov nop int3 fisttpl hlt xor stc jmpq (bad) sahf push in cmpsl clc adc sti lock pop test sbb jnp lret mov (bad) cmp ds or (bad) sub mov (bad) data16 rex.WR adc xchg jg insl and pop out clc pushq pop jrcxz pop rcrb adc mov mov (bad) rorl xor lock (bad) xchg xor movabs sub (bad) jge in icebp sub add lock adc rex.XB loopne mov mov loopne xor outsl idivl jmp out lea iret xor loopne xchg mov (bad) or xlat loopne mov sbb (bad) mov sbb test enterq mov addl (bad) fxch outsl pop loopne sub add out jmpq stc test (bad) mov and xchg sbb pushq fmuls hlt decl (bad) getsec add cmc (bad) (bad) and fdivrp (bad) adc lahf sbbl sub hlt pushq jmpq (bad) loopne cld xchg (bad) xor jno jg lcall sub loopne lea jmpq xchg icebp (bad) ficoml or mov (bad) loopne in mov loopne push jno cmpsb test (bad) loopne (bad) ss xor (bad) or fildl and xor rex.WR enterq xchg nop (bad) loopne rex.W mov push mov xor cmp or movsb repnz ss adc xchg (bad) mov retq stos fwait push out jae mov outsl addr32 xchg movsb rex.WXB rex.RX mov in sbb test stos push (bad) callq loope mov rex.WRX fsts adc add lret xchg repnz pop pop rclb movabs cmp push cmpsb std jbe jrcxz (bad) test (bad) retq cmp xorb scas rex (bad) or cmpsb outsl insl cmp repnz sahf lods and cmpl (bad) imul (bad) movabs test xorb movabs in (bad) loop jbe fidiv leaveq repz sbb or retq es sbbb mov in jmpq and icebp pushq mov jo lock out (bad) callq jae (bad) ds hlt add fiadd test (bad) (bad) lahf divb test movabs shr xchg sub movslq (bad) mov xchg sub fwait (bad) and scas in loop in (bad) and rex.WR rex.WRX pop (bad) xchg or mov push test or iret test rex.WB test cmp (bad) xchg loope fcmovbe rex.RXB cmp loopne nop test rex.R add jo rcr add rex.X in cmpsb callq (bad) mov add loopne xchg mov (bad) loopne pop fmul jnp (bad) pop xlat push jle sub stc xlat rex.WRX nop bswap or rex.RX and in adc retq and sbb adc sub flds cmp rcr jg jmpq pop (bad) jl mov push rex.WXB lock int3 out xchg (bad) fisubl iret sarb (bad) rex.WX pop cmp test xor cmpb loopne mov or xchg and xchg pop sar jae xchg test adcb movsl loopne lods xchg (bad) push (bad) icebp retq (bad) sbb iret rex.WX rex.WRX mov jno mov or rex.WB rex.WR rex.X sti jbe xor rclb mov push mov sbb pop fidivr (bad) rex.WRB gs in movabs (bad) (bad) sbb (bad) fwait jmp jmpq xchg rex.WRXB and repz pushq rex.RB int cmp (bad) lea sti fcmovbe iret (bad) loopne (bad) icebp nop scas js jne pushq out push or (bad) mov (bad) (bad) repz cmpsl jge adc movabs in lahf jp cmp jno test mov rex.X xchg fsubrl rex.R fcmovnbe lahf sub in loop incb (bad) in rex.XB lods sbb or movslq shl xor mov loopne cmc sbb pushq and out xor je scas movsl xchg lock callq (bad) movabs and push add jmpq xchg mov loopnel leaveq (bad) jae rex.WRX or loopne adc rex.RB jge loopne lret (bad) rorl cmp xchg rolb add pop shll jg push stos (bad) fildl (bad) xor loopne cmpsb movabs jrcxz,pt int3 (bad) and cmpsl loopne in mov stc push sti dec sub adc rol adc (bad) jle rex.XB rex.R (bad) mov and loopne add pop decb loopne adc scas loopne jns or loopne pop adc movslq jbe jp push loopne rex.X xor cmpsl pop jmpq rcrb mov loopne mov or adc clc sub fdivp int3 lahf cmp sub (bad) xlat add and push cltd mov cmpl cmp pushq outsl cmp retq shrl mov lods cmc jb popfq or stos xchg lods mov loopne cmp mov icebp imul (bad) xor sbb loopne sub (bad) push sbb xor cld rorb rex.WRB iret cwtl rex.B and mov pop sti out lock retq mov sbb retq xchg loopne rex.X mov (bad) imul jb (bad) pop insl cmp sub push loopne fcoml outsl rex.WX pop jae (bad) sbb jb in out mov cld ja lahf out mov loopne mov pushfq (bad) pop out pavgb cltd cmp loopne (bad) xor jp jae loopne mov sbb xorl push insl or fldt cld loopne (bad) push rex.WRB rex.RX xchg mov (bad) sub add (bad) loopne jbe (bad) (bad) or insb (bad) cwtl push mov outsb (bad) scas hlt (bad) lock rex.X imul loopne cld fs jns psubsw (bad) xchg std lahf (bad) cmp loopne mov (bad) stc rex.B add loopne in fldenv push insb (bad) loopne clc test rex.XB test hlt cmc or jno rex.R rex.WR add cmp jmp fcompl loop mov mov loopne sti xor lock or callq xor (bad) fs (bad) (bad) pushq adc xor xchg rex.RX out test jmpq (bad) jg mov scas sub in lea clc lods retq jo xchg pop rex loopne add in (bad) (bad) loopne jns scas lret ja jno imul adc add je mov loopne lahf rex.WRXB rex.WX mov retq movd rex.WX xchg movabs (bad) decl jl rcr test out loopne mov shl test movsl or pop cmp nop test (bad) imul cltd shl jmpq out scas xor cmp rex.W loopne cmpsl lods xchg (bad) mov cltd (bad) cmp push add outsb cmc add mov and loopne and push pushq or stos (bad) sub xchg cmp add in sar scas and mov out adc stos sbb push jmpq mov in in fdivr in mov ror out cmp add xor sti sbb pop outsl jp loopne nop fbstp loopne jrcxz push or (bad) jno (bad) jmp popfq rolb and insl rex.WRB lret (bad) loop fisttp adc scas shrb jmpq adc imul push add movsl add ds lods in jno decl pop add mov clc or in enterq add (bad) cmp lret or push (bad) push test (bad) mov loop movabs adc std pop mov (bad) int3 inc insl rex.WX (bad) test lret lret push cmp (bad) nop cmp xchg orb (bad) fildll movabs (bad) mov sub shl xchg leaveq (bad) (bad) loopne (bad) cmp fbld mov (bad) loopne (bad) jl test (bad) rex.R loopne fildl push jmp scas loopne add movslq cmpb jrcxz addr32 sub mov rcrb (bad) insl loopne iret lar mov in jne jmp pop leaveq movsl cmp (bad) loopne mov cmp rex.WRB sar (bad) loopne add cmc or (bad) xchg (bad) mov pop loopne outsb adc roll (bad) jmpq insb rcr fisubrl js jmpq push outsl lods mov movabs rex.B sbb cwtl cmp in rex.WX rex.XB fs push (bad) rex.WRXB movsl adc sbb sub xchg sbb hlt out test jns mov add add mov xchg jmpq stos adc (bad) xor cli imul jmpq loop jae cld jo (bad) fdivrl rex.R sub iret fstpl loopne add sub repz stc scas fwait xor ja xor int fmull jnp mov scas movabs jbe fchs scas xchg mov fldl2t (bad) rex.RB or jmp icebp add cli rolb hlt loopne push mov xchg int lahf in (bad) (bad) data16 xlat mov out gs sbb mov (bad) clc (bad) adc (bad) (bad) test loopne cmp pcmpgtd mov minps callq sub cmp jle rex.RB in push add mov lock icebp xchg sbb xor sarl adc mov push push adc rex.RB mov jmpq (bad) xchg lods add insb mov cli xchg in lret rex.WB ds sbb rex.RXB (bad) mov jle fisubr adc cmp mov mov or add mov cld pop push cltd xchg pushq lret stc (bad) cmpsl mov sbb js mov int3 movabs cld push std mov movslq (bad) (bad) jae movslq adc cmp or push mov (bad) add pop pop mov movabs push xor add (bad) sub rex.RB rex.RX mov (bad) (bad) shrl (bad) adc in rol mov out pushfq jmpq xor movslq push lcall outsl sub rcrb rex.RB pushq sbb cmpsl xchg icebp out xchg rex.R es push (bad) or rcrb jo (bad) ds jrcxz (bad) loopne movabs (bad) rex.WRB rex.X cmp and mov rex.WRX (bad) pop loopne or sbb loopne pushq stos (bad) sti rex.RX test jmpq (bad) (bad) cmp rclb loopne cld mov (bad) loopne mov pushfq in pop cmp or xor loop movq loopne pushq adc add int jmpq rcrb loopne pop sarl (bad) mov or cmpsb int loopne stos or subb out jne loopne mov loope loopne mov icebp (bad) rep rex.WRXB mov rorl loopne push scas sub (bad) imul sbb lret stos fsub rex.XB mov rex.W (bad) sub icebp hlt pushfq repnz cmpsb xchg mul jmp test pop fbld mov (bad) rex.XB mov pop es push shlb add es test sti pushfq jb lret mov mov lcall test pop (bad) rex.WXB int3 (bad) mov xor mov add fsub mov (bad) js movabs fistpll in rex.WR jle cmc loop in and retq sarl setbe in scas mov imul add mov (bad) jge jne (bad) mov adc jmp or rolb movabs pop repz (bad) scas sbb add sub test je sarb (bad) int (bad) lret mov rex pop orb (bad) sbb (bad) fsubs (bad) xchg callq in (bad) xchg push (bad) out ror sbb xor mov pop loopne rex.WRX es fmuls rex.RB loope movabs fsubs mov adc xchg scas jp and sub sbb mov (bad) mov xchg lods or repnz add jb rex.RXB rex.WRXB es (bad) (bad) loopne mov sub fs loopne stos imul test lret mov shl loopne mov nop lcall sub or callq sahf (bad) mov (bad) notb js movsw jrcxz lahf ja adc movabs mov mov fdivrl rex.WXB (bad) adc sub (bad) cmpsl jmpq gs out orb pop xchg rex.WXB mov lock rcl pop (bad) dec sbb int sub fwait (bad) jne test mov (bad) sahf or (bad) (bad) fneni(8087 (bad) (bad) push sub and pushq out fisttpl adc shll lfs adc jne sub cmp (bad) ljmp cmp cmp shl xchg jg (bad) popfq sti data16 loopne scas add loopne (bad) ror (bad) xchg xchg loopne (bad) stc fwait (bad) loopne movsb adc jne or fmuls lcall and and jnp jmpq mov pop jl xor movsb movabs in ss jb add retq mul xchg cmp mov enterq fcmove test xchg adc enterq lods fdivrl jns mov (bad) (bad) nop mov jg (bad) test sub jle adc rex.WX jg pop cltd repnz (bad) (bad) (bad) rex.RXB rex.WRB mov fmul ss cli xor add xchg cwtl cmpb jbe (bad) pushq jg imul sub mov scas rex.WRB rex.XB insl pop (bad) add (bad) push in (bad) (bad) stos test pop mov loopne (bad) (bad) clc adc retq shr or rex.WRX pop insl add test mov enterq fistp outsl pop movabs sub sbb in fidivl lods pop (bad) movabs cwtl and hlt mov out ja and rex.WRXB loopne and loop xchg jae (bad) addr32 fcoms push ss loopne decb out fwait rex.WRX adc insl lods add jmpq movabs rcr jbe (bad) fwait or stc pop fucom mov vpavgb loope (bad) lea in leaveq rex.WRXB out callq (bad) push pop add loopne cmpsb fdivrs sbb adc rolb iret (bad) repz sldt loopne add jns adc lret (bad) (bad) andps cmp loopne cwtl out xchg jbe mov scas movslq cmp xlat fldt rex.XB add fadd rex.WX test rex.WRXB rex.WRX fdivrs ja (bad) mov (bad) add loopne test (bad) shl enterq jns xlat ss fstl (bad) lahf lret enterq rolb repz jmpq add retq stc and sub add clc rex pushfq (bad) hlt adc pop outsb gs movsb outsb scas pop pop rex.RXB (bad) sti (bad) and (bad) lock imul fidiv repnz callq fcmovb jo pop movabs cmc mov (bad) (bad) repnz addr32 (bad) lret mov xchg lock or retq movsb (bad) adc push (bad) and adc and rex.WRB cmc (bad) out push insl mov xchg cmp xlat push in pushq enterq rclb (bad) mov movabs sbb je rex.RX lret callq mov lods ror rex.WX icebp pushq outsb retq retq jle lock pop adc mov (bad) (bad) jne pop adc sbb add add push movsb lea pop (bad) movsl or jp (bad) mov outsl cmp rex.W loopne cltd movabs sub (bad) jl mov (bad) rex.R adc (bad) loopne sub cld mov pop loopne retq jae and jle loopne (bad) in mov or mov shr (bad) (bad) and cltd cld xchg frstor mov cli cmp shll pop fsincos (bad) int3 loopne jo mov cld loopne adc sub pushfq lret out rex.WRB rex.WXB movsl xchg pop cmp in fld1 (bad) movsb (bad) mov rex gs xchg incl adc nop mov adc adc pop (bad) loopne mov imul adc jp mov rex.X or in loope in pop in (bad) xchg and retq loopne hlt lods cld stos test rex.WRB mov mov loopne (bad) jo (bad) sbb xor loopne in (bad) (bad) jno icebp icebp ficoml test cmp xchg (bad) cld rex.RX rex.X in lods xchg mov sbb (bad) loopne mov pop mov (bad) jae (bad) jg test sbb loopne and and loopne push fstl add stos fprem1 stc fs (bad) (bad) callq and sbb loopne sbb pushq cmp movabs loopne nop ss int3 out (bad) sarl add push add loopne adc callq jmpq movabs mov mov jmpq (bad) (bad) xchg movsb lar mov mov (bad) mov out outsb (bad) btr fistpll rex.RX pop mov (bad) ds sub insl mov rex.WXB (bad) mov rcrb in sbb sub lea je xchg or cmpsb out mov in xchg sahf pushq jle (bad) push mov lea in mov rex.WR jl push add ficom adc push loopne (bad) and lret (bad) movabs andb (bad) in xchg add (bad) (bad) adc jns (bad) push insb cs adc mov sub imul fld adc jrcxz retq push push out incb fildl movzwl mov (bad) movabs push outsb add or insb popfq callq sub or push adcl retq push xor insl repnz mov mov in mov jo sarb divl and (bad) lods add in je rex.WRXB imul outsl je or (bad) shrb push (bad) mov pop (bad) addr32 or mov iret lret addr32 jae jbe mov sub rex.WXB vmovaps out (bad) repnz (bad) xchg pop stos addr32 out insl decb jo mov and scas shrb clc cmp xchg rex.X andnps clc repz sbb sbb mov cmp pop (bad) jae cld jle cmp and gs and or jp sti jrcxz adc addr32 hlt test lret xor repnz outsb pushq out leaveq push out (bad) (bad) jl or mov pop xor mov icebp jl mov sbb movabs sbbb loope (bad) (bad) adcl sbb add cmpsl addr32 jmp mov xor (bad) adc rolb (bad) xor pop mov sub rex.WRB mov pop es cmc out in sbb ja movslq pop addr32 (bad) mov movabs mov test outsb sub mov jle lret fwait loopne add (bad) adc ds shl sbb lret push stc push movslq sarb stos sahf fisttpll cltd jo push ss lret pushq jge mov (bad) rex.WRXB push rex.RB stos rcll add rex.WR out add mov mov sbb xor jmp iret adc or jo sbb cmpsb lods jl push (bad) jmpq out mov (bad) (bad) pop sbb and jle (bad) pop (bad) and enterq sub xor fdivl icebp sub je hlt in out xor xor jmp gs xor jg push movabs pop movslq movabs enterq mov pop or sub (bad) mov cmp pop fwait movabs push cwtl lea mull out jnp loopne and mov scas movsl mov in fdivrp insb or sub mov xor shl or (bad) mov popfq loopne icebp rex.WRB rex.B cmp movabs push jnp push out pop (bad) loopne and fwait cmpsb callq (bad) (bad) mov mov mov jae xchg movabs fs xchg jo rex.WR (bad) (bad) mov (bad) and mov jle rex.XB addr32 add jae mov xorl jne fucomi adc pushq adc leaveq xchg repnz jb jo sbb cmp rorl (bad) jmp or test xchg rex.XB sbb cmp sub adc (bad) cmc (bad) fistpll cs fidivr rex.W idiv sub adc jns int3 rex.WRX in movabs lock jmp iret (bad) add mov loopne push xchg pushq movsb jl loopne rclb push or adc shlb mov movabs cmp loopne pop test loopne stos lock cld or adc xchg or adc jne retq push pushq add repz outsl movabs movsb mov in (bad) fist and cs lods jne mov ja loopne out stos out ss callq push (bad) xor (bad) mov mov enterq jle jg loopne incl rex.RX (bad) loopne xchg sub fadd sub and stc int (bad) push cmpsl leaveq jo (bad) or loopne jae jne (bad) icebp mov xorb add mov mov in xlat test (bad) cmp insl (bad) xor (bad) fbstp scas jnp jp (bad) (bad) xor fidivl icebp gs (bad) jmp cld or lods movabs mov xor cmpsb rex.WRB out sbb and (bad) push clc (bad) or test xor rcrb xchg and (bad) in (bad) (bad) adc leaveq icebp retq jnp xor (bad) sub jae lods jl rex.WX jb (bad) ss fucomi mov xchg (bad) rex.WRXB rex.WRXB lock loopne rex.B cmpsl xchg mov sbb pop (bad) notl jrcxz rex.WXB sub outsl and sbb (bad) xor in adc xor rex xchg movabs (bad) jmpq push test js fidivr or jmpq (bad) (bad) icebp movabs in lahf scas in jmp adc mov loopne mov add xor and (bad) ja jrcxz xor add (bad) loopne data16 fisttpl retq jg loopne fmuls cmp and loopne (bad) (bad) push jnp retq xor lea frstor pushq fldt xchg mov (bad) push out mov sti (bad) and or out mov movslq loopne mov xchg rex.B lahf (bad) loopne enterq mov out shrl loopne clc fwait movsb mov push (bad) movabs iret adc loopne (bad) pop mov stc (bad) (bad) xor stos adc andl xchg jg sub movabs adc addl test insl loopne rex.WRXB rex.WB cmpsl in and and rex.RX rex.WRX movabs rex.R fmuls (bad) shl je (bad) (bad) adc jnp cwtl and sub jo rex.RXB mov rex.WRXB mov (bad) jge xchg jnp pushq mov adc (bad) movl loopne (bad) addr32 mov std loopne rex.RB jbe cld (bad) in or mov subl repnz push mov or sub sbb in jno pushfq mov js xchg and movl fistp test retq mov xor (bad) lcall jb sub stos mov fistpl or push shll xchg (bad) (bad) (bad) sbb (bad) loopne jg (bad) out add rex.WRX adc (bad) xlat cmpsl xchg movabs (bad) cli hlt cltd ds jge pushq push sti (bad) xor rex.XB ror sbb and sub loopne mov incl or mov movabs loopne push mov loopne jmp js (bad) (bad) sti repnz movabs (bad) rex.WRX (bad) pop xlat xlat retq rex.R rex.RXB mov sub (bad) movabs loopne sti xchg movabs adc pop (bad) cs clc or add mov outsb cwtl rex.RXB cmp fdiv jns imul mov xchg mov sub mov retq (bad) fmul addr32 or rex.WX (bad) int3 rex pushq cmp (bad) loopne (bad) cld sbb rex.WB es test pushq loopne cltd (bad) (bad) scas jae repnz shrb adcl lods (bad) rex.WB loopne lahf rex.X iret mov fs mov loopnel and or add (bad) stc stos (bad) push jmpq sbb je xor data16 sbb jg push adc dec rex.R rex.RB fcmovnbe addr32 repz shl fist mov push movsb rex.WRX xchg sub xor jb jne idivl rex.X shlb (bad) mov gs out or pop (bad) (bad) hlt icebp jge mov fisub xchg mov or fsub sbbl xchg fwait mov ja jle clc mov rex.WR lret rex.WX popw in mov in iret outsl jmpq lods adc jg mov rex.WR rex.R jo rex.WX push loop insl and cld push rex stc lods rex.XB sbb adc rex.WXB fiadd mov mov rorb rorl mov sahf mov cmp stc idivb in rex.R or pop imul (bad) loopne rex.WXB (bad) sbb andl scas insb loop jl sahf sub and jo jne sahf fdiv cmp cmpl jle pushq push cmp or (bad) (bad) and push sbb (bad) hlt cmpsb in (bad) rex.RX rclb (bad) addr32 rol push in movslq rex.WRX fxch rex.RXB loop (bad) mov mov rex.RX stos cltd loopne retq (bad) cmp mov mov (bad) int lret in rex.R jge add jno and shr (bad) push icebp jp out stos scas fbld imul sbb movabs cmovae xor mov cmpsb cmc adc movabs fcomp (bad) sub cltd shrl repnz loopne sti clc and or rex.X out mov movabs leaveq loopne rol cmp jle ficomp (bad) push std (bad) stos movabs pop loopne lret not cmp mov jmpq rex.WRX rol popq pop cs sbb rex.W leaveq and rex.WB int loopne fidivl (bad) loopne xor movabs (bad) and push rex.B xor and (bad) xchg in not add roll rex.WXB push loopne cltd (bad) lock loopne add sub rex.WB push fneni(8087 jl (bad) xor sub (bad) mov insl fdivs in (bad) sub rex.RXB or (bad) loopne rex.W lock mov shl (bad) (bad) jrcxz rorl roll adc (bad) mov sbb xor repnz sub in or xchg adc loopne add mov push pop (bad) (bad) test pushq mov stc fwait xchg fisttpll xor sub mov (bad) loopne pop retq in jge loop in and fistl movabs adc xor jg movsb xor xchg andl xlat scas iret orb (bad) jno pop add out addr32 sbb stos or loopne cmc mov (bad) loopne fild adc rex.RX pop loopne add mov xchg popfq (bad) jae cmp (bad) xchg (bad) in mov jmpq shlb clc and addr32 outsl rex.RX pop scas test test fcompl in loopne out rex.WRXB ja imul (bad) fs sub test es pop jne pop shll mov out mov jg jmpq (bad) jmp (bad) cld (bad) cmpsb lahf xlat (bad) (bad) loopne lret push mov fmul ljmp mov (bad) cmp mov (bad) and sub jno jbe sub in je or movabs rex.WRX lock repz pop mov int and xor xlat mov movabs clc (bad) std push (bad) cmc movabs jno loope xchg movabs mov in negl xlat rex.B jmpq rex.WR pop pop leaveq decl push jo mov lods shr cmpsb imul movabs (bad) rex.WRXB adc movl and rex.X cwtl or jnp pop sti (bad) in (bad) stos sub sbb rex.XB and rex.WRXB es and rex.WX popfq xchg test mov cld lods gs (bad) (bad) retq out fist rex.R or loopne (bad) adc sub sbb and rclb rcll popfq loopne rex.W (bad) fdivl rex.XB repz loopne adc rorl mov (bad) jb sub out sarb (bad) mov rex adc (bad) jmpq mov rex.WRX loopne push movabs xor rex.WRX (bad) movsl stos outsl adc cmpsb and gs rex.B (bad) cmpsl rex.WX es repz rex.WB or rex.WRX lock xor (bad) cmp enterq cmp (bad) in (bad) rex.WXB mov cmp jb mov push out pushq mov gs mov add sbb stc or mov fldl xor adc and out cmp (bad) sbb adc (bad) push orb pop jnp push jo and negb es xor sub (bad) cli sti repz adc (bad) cmpsb mov jge lods mov sbb (bad) mull cmpsb out xchg push je mov lret es cld jg movsb (bad) (bad) (bad) stc in rex.R enterq mov out rex.W (bad) jl (bad) cs nop fwait push outsb pop (bad) shlw add (bad) rex.R retq fnstenv sub je rex.WRX (bad) (bad) (bad) pushq loopne es rex.XB loopne mov (bad) movabs test in xor or decb jge lahf and js mov or test pushfq loopne adc jno (bad) loopne cmc sbb rex.WRXB xlat in rex.WX (bad) mov mov sbb lods cli loopne shrl lret loopne in sbb or pop loopne mov jbe rolb loopne and rex cs imul (bad) xor mov mov fneni(8087 rex.WXB push stc sbb adc movsl sti sbb icebp cmp cmpsl cld (bad) (bad) mov stos cmc pop loopnel int sbb (bad) lods sub mov (bad) jle mov xchg test cmc (bad) mov (bad) fnstenv loope scas loopne xlat clc jns hlt (bad) outsb test loope (bad) jbe mov stos xchg jle xor (bad) xchg fdivr clc pushq movabs out loopne sub (bad) loopne jmp loop mov sbb inc mov lock jmp mov sbb shr imul loopne test (bad) xchg iret test scas stc mov fsubrs xor loopne xchg retq lahf stos cmpsb sub out (bad) (bad) test loopne mov mov loopne pop mov outsl loopne rex.RXB lret pop ja rolb (bad) lret jmpq mov ror mov gs cli in and jp mov pavgb mov (bad) push pushfq (bad) sub iret xchg jg and jo jae notl sbb (bad) hlt popfq clc rex.WRB mov jmpq movsb retq push cwtl rex.X repz push divl jge insl pop retq and test rex.WR rex.WRX fiaddl (bad) cld loopne int3 fnstenv loopne jp,pn movabs cwtl cmc adc loopne jns pop rex.WX cs rex.WR out (bad) cmp je sbb sbb movabs push and rex.RX push xor popfq movabs sbb es xchg mov loop xor cmp movabs adcl loopne cmp (bad) mov add (bad) xchg shr adc rex.XB cld in mov cmp sub jmp (bad) outsl mov in inc pop xchg mov icebp rex.WRXB jae mov insb xchg cs cmp xchg rcll mov jl callq cmp loop or sub mov leaveq mov adc rex.WRXB push loopne fdivrl push mov loopne (bad) xchg xlat xor mov mov scas (bad) (bad) cli enterq or or xor xchg (bad) mov test movsl in adc xchg in fsubrs rex.WB cmp je (bad) ss loopne (bad) pop int3 cmp in and jae push push rex.RB cld in movsl (bad) loopne sub mov loope (bad) loopne out lock movslq stc loopne movabs loopne (bad) jo mov (bad) movabs sbb (bad) loope in (bad) (bad) cli leaveq pop jmp or stos enterq pushfq or int jmp xlat mov jmpq lea rex.B lret add cmp fwait loope mov scas sub add gs xor (bad) fdiv pushq add jne push jbe cmp mov jmpq (bad) xor insb sub lret enterq testl (bad) iret lret (bad) sub movabs push flds out (bad) nop jrcxz mov jg xor (bad) out icebp insb sub jnp add je loop fldcw push out enterq mov callq js mov mov ror rex.RX loopne xor leaveq loopne (bad) (bad) imul loopne nop cmpsl faddp (bad) jrcxz loopne addr32 and movslq (bad) pop mov (bad) stc (bad) rex.WRXB (bad) lock xchg cltd lahf nop sbb push mov loopne jg leaveq sbb sbb mov (bad) loopne (bad) sarb fimull sbb add or sbb loopne mov pop loopne (bad) movabs leaveq fwait clc and mov (bad) push scas (bad) xor mov jp decl xchg outsl je loopne lods cwtl sti es loopne ljmp jge cmp cli xchg rex.B loopne sub and loopne (bad) xlat mov mov lret cwtl rcll rcrb adc loop pop push add nop (bad) loope mov xchg (bad) mov pop sbb std add addr32 loopne push add loopne (bad) fcoml (bad) xchg (bad) in loopne es movsb (bad) loopne (bad) pop cmp (bad) stos shl (bad) loopne adc (bad) mov rcll push sub lods test fwait pushq xchg rex.X mov in cmp lods out (bad) test fcmovnb (bad) xlat jle (bad) mov (bad) push xchg sub fs (bad) int in mov xor jno int3 adc pop lahf (bad) out lret mov test std adc cmp (bad) jnp fldl fisttp rex.WRXB mov scas (bad) and (bad) test rex.WB (bad) (bad) (bad) jmp fldenv movsl pop rex.WRXB (bad) icebp rex.RB sbb jrcxz mov (bad) sbb (bad) movslq and rex.XB and xor cmc ja and sbb addr32 in in push sbb rex.WRB add sbb cmp repnz out pushq rex.WRX loope cltd in sbb push in adc pushq jmp movsb imul icebp jns test rex.RXB adc pop jl lock repz retq adc popfq and test jl rex.WX fistl xor iretq push jp mull adc movabs shlb stos rex.WXB jne xor fwait (bad) ss lahf push loop mov mov jmp imul mov ja cmpb scas lea cmc je adc (bad) ficom repz nop mov mov mov hlt (bad) mov movabs sbb mov rex.RXB rex.W xor cmp fisubr sub sub mov mov adc (bad) xor and in lret (bad) cmpsb xchg add xorps cmp outsb in adc (bad) push push clc cmp and lock (bad) jb (bad) xor test scas fsubrp and movabs mov and in and (bad) mov jl (bad) (bad) jns (bad) clc sbb cmc ja callq jae test retq adc push pushq (bad) sbb outsl nop fadds jp rex.R insl movabs in in movsb or add mov mov loop nop xchg push addr32 std sub movabs jns (bad) sub (bad) jp or rex.WR push rex.RB imul jle or (bad) sub cmpsb xor or fwait jl (bad) repnz int3 jne adc loop ds scas xchg movabs jmp stc movsl sbb adc mov pushq (bad) push jo rex.WRX loop xchg jrcxz addr32 movabs sbb add push iret repz in movsl fisub loop push sahf icebp clc jo and (bad) mov lods in rol rex.B cmpsb icebp (bad) insb repnz pop sahf in cmpl lahf hlt mov and rex callq xor fnstsw sti rex.WX mov hlt add movabs mov jo mov jle (bad) sbb push outsl cli or loop mov mov ffree sbb retq mov lock and rcr jae jg pushq lods rdmsr (bad) stos push rex.WRXB adc jg adc scas (bad) add addl add sbb mov shlb sub rex.WX xchg in cli sbb sub rorb adc (bad) fidiv scas push es div std add jmpq mov push (bad) push jmp mov cmp (bad) sub mov or cli cmp and movslq jo pushq (bad) and movabs in sbb sbb xchg out in jb rorl jne mov or ds xchg mov addl jrcxz (bad) in or cmpsb in (bad) fwait imul iret fdivrl cwtl movabs cmp imul stc out loope retq (bad) (bad) pop sbb (bad) jp adc xor movslq adcb xchg and (bad) (bad) rex.RX jg adc jp es jae push sub (bad) and nop or jle or test sbb loopne (bad) insb in push in jg mov out rex andps jnp jl je (bad) ljmp sbb push jb lods jmpq in (bad) pop shr loopne add fisubl rex pop xor jnp mov fiaddl cmpsl nop leaveq mov out out mov or jmpq lock movabs iret loopne mov xchg cmc movsl (bad) fchs in lret addr32 cmp push mov (bad) jo rorl rex.X add rex.WRXB fldlg2 sahf rex.WR cmp (bad) std (bad) (bad) jnp mov (bad) jmp loopne (bad) (bad) rex.WRX rex.WX loopne xor or (bad) push xlat add (bad) rex.B add retq movabs or xchg repz or loopne rex.WX nop cmp js loopne rex.WRX data16 rex.W loopne lret push imul (bad) or mov callq stos (bad) pop push sbb pop in roll insl imull movabs (bad) incl adc movsb (bad) jrcxz (bad) rex.WRX adc sub (bad) (bad) (bad) std outsb cld (bad) movsb push xchg mov (bad) jb rex.WRXB fwait xchg push fidiv and outsb lretw rex.WXB shr lret mov xor out (bad) insl imull (bad) jo shlb rex.WXB pushq sub movabs decl cmp mov leaveq (bad) lock (bad) xchg jmpq and push mov in push mov add rex.XB orl rex.WRXB cmc fwait mov sbb adc mov jg mov (bad) pushq ds xor mov sub xchg ror negb adc (bad) (bad) retq (bad) xchg sar clc (bad) push cmc (bad) movslq mov sub adc test cmc repz (bad) (bad) out and (bad) rex.WRB adc ds mov stos lea (bad) adc sub nop repnz cmpsb movabs repnz rex.WR rex.WX fs adc rex.RXB jmpq retq in mov pop xlat jle int (bad) mov fwait (bad) in jmpq (bad) jrcxz in out sbb callq ds sbb in push mov sbb xchg loopne imul cs mov jae lea je jo icebp pushq clc divb mov scas movabs adc leaveq test and pop movabs (bad) jo sbb loop xchg fldl lods in mov in std rex.R jge push in (bad) or loop mov or cmc fldl (bad) movabs cltd rcrb adc movslq loop adc stos sti callq sub mov rex.W fbstp out pop mov pop lret retq clc fstpl pop (bad) xchg rcrb sbb rex.WX rex.R repnz (bad) fnstcw loope in insb addr32 (bad) roll (bad) icebp jle (bad) pushq pop xchg std xchg jo fbstp cmp rolb and (bad) rex.WXB or jbe nop rex.WRB jnp sbb repz xchg sbb (bad) rex.R xchg mov icebp jl (bad) mov cmp sti mov cmpsl or jrcxz pushfq mov scas scas mov sarb mov mov rex.R push stos mov xchg mov (bad) add xchg in (bad) pop scas loope (bad) cmc mov in int push mov sub mov gs (bad) or (bad) jle in rex.B or jg fimul pop rex.WRXB rex.R cmpsb lea adc insb pop outsl movsb icebp (bad) insb sbb push andl (bad) fnstsw out mov int3 es pushq jnp or lea pop gs push and jrcxz cmp ss jle pop adc sbb hlt mov xchg rex.RB mov scas mov fsts cmpsl loope (bad) pop cmp negb sub (bad) (bad) or outsl xlat mov clc push push test xchg sub out cltd subb rex.R loop sbb pop adc adc mov (bad) js pushfq sub xchg test rex.RXB mov scas cmp jnp nop cmp rex.WRB retq insb xor in (bad) fisttpll lods fidivl mov sbb and push (bad) sbb cmp fldenv sub movabs add mov sti sub sub clc icebp xor in lahf rex.WRX rex.WXB lock cmpsl adc movabs lret cmpsl jg bswap (bad) pop lock rex.WXB movabs and rcll sbb adc xor mov mov push clc in (bad) or mov mov lock xchg (bad) sbb (bad) (bad) test lods xor lods sub rex.WRX sarl fsubp or rex.WRB pushq push sarl mov xchg and shl lahf ror (bad) mov callq cmp rex.WB sbb sahf xor (bad) shrb fsubl sbb mov (bad) js sbb scas repz movabs mov movsl push adc (bad) (bad) repnz (bad) cmp ss jb sahf rex.WRXB movsl stos rex.R rex.WRX in (bad) movabs sub (bad) (bad) (bad) pop cmp pop fcmovb rex.WR imul retq insl sub xor pushfq cltd cld xchg xchg xchg (bad) mov fstpl scas loopne gs add xor outsl (bad) rex.WR cmp fcoml jle sbb push jmpq sti lock (bad) xlat mov lea jmpq leaveq movsl xor jge sbb push and pop mov jrcxz rex.RB push (bad) sbb loopne jbe (bad) pop loop xchg loopne rex.X xchg lahf add cmpsl fstpt xchg cmp ss loopne cmove jnp jno pushfq pushq loopne pop adc out xorb push rex.WRXB add orl cmp xchg cmp mov loopne cltd adc fist cmp int rex xchg pop gs andl std and (bad) (bad) test clc loopne movsl out or mov fdivrs mov loop lret mov movslq (bad) push (bad) test jne add and data16 cld (bad) lret lods jle movabs movsb js loopne pop cs jb push rex (bad) jrcxz (bad) lods (bad) mov in leaveq xlat mov lahf mov insl stos fcom adc rex.WR or sub and adc mov add movabs rex.RX or and addr32 adc iret shr retq push mov or fild movsl sbb fs mov (bad) movslq xchg (bad) jle xchg sub fldl jg incb mov inc adc loope and (bad) xor adc xor movsb (bad) add adc loop (bad) or iret loop jbe fisttpll fcomps pop fmuls gs notb movsb (bad) jg lahf rex.R retq movabs rex rex.RXB (bad) (bad) push pop (bad) mov add ss (bad) xchg jp in loopne or pop je rex.W xchg loope pop add mov hlt rex.WX gs ds xchg rex.W (bad) pushfq movslq rex.WR pop (bad) loopne push push xorl loope (bad) loopne lret pop mov icebp rex.WXB push (bad) xchg mov pop adc loopne (bad) ja stc and (bad) rex.B rex.X imull js push add shlb jnp xchg fisubrl outsb addr32 movslq hlt xor (bad) mov loopne int adc push xor out (bad) (bad) loopne imul test xchg xor and popq movabs (bad) vmovaps xchg add and (bad) jle in lret jae loopne mov enterq hlt jmpq jnp ja rex.RXB in pushfq repz icebp (bad) mov shll (bad) loopne rex.WRB rex.RB test xchg scas (bad) mov mov mov ds decl sbbl (bad) popfq outsl (bad) or xchg jo loopne (bad) retq nop sahf test (bad) mov cmc push rcr loopne fld sub test loop movsb rex.WRXB adc movabs rcr add loope mov in stos cmp fadd adc xor enterq sub pop xor repz push rex.RB repnz mov cli jrcxz xchg (bad) sbb cmpsb pushfq (bad) enterq std sbb loopne callq adc scas sahf mov jg rcr add (bad) icebp xchg loopne sub (bad) sbb movsb repz fildl jmp sub adc movabs lock (bad) mov sub or testb (bad) sbb (bad) (bad) addr32 add jrcxz pushq adcb push mov pop jne mov callq rex.WXB enterq cli rex.WR pop sbb movabs fistpl imul cmp mov add pushq sarl and rex.RX (bad) add adc and and and (bad) out adc insb shll jrcxz hlt iret shr and cmp rex.RX sahf jno or movabs rcrl loopne popfq sub in adc mov movabs hlt mov sub movsl sub (bad) clc jo (bad) xlat rex.B mov jg rex.WXB callq add jae (bad) test loopne flds cwtl icebp jo xor in or jmpq mov lret clc cmp sarl jmp hlt fiaddl loopne nop sti pop ss and (bad) adc and push loopne mov jne loopne add loopnel xchg rex.WR pop or xor test mov rex.W movabs jb out jmpq (bad) mov sub adc loopne pop (bad) cwtl xchg repz loopne pop xchg add adc movabs (bad) repz out rex.W jb es movsb lods (bad) xor stc iret add pop jle (bad) mov in icebp insb movsb push test (bad) movabs mov scas jg push movabs rex.WRXB (bad) rex.RXB callq in ss mov push mov int3 (bad) out es je retq xchg and rex.X rex rex.B lea loop cwtl callq jmp je xchg pop rex.WR hlt rex.XB (bad) movslq add jmp jmpq insl mov mov insb cld and mov rolb (bad) sub and adc add shl (bad) and jmpq (bad) mov jns rolb add or add outsb cmc cmpsb jo out sahf es ljmp mov sbb gs (bad) ror shrb pushq cmp enterq lret adc retq in (bad) jne or (bad) (bad) push in rex.X repnz xchg or shrq test rex.RB lea push lahf or adc test hlt mov (bad) add sbb rex.XB in fiaddl repz push (bad) ds fwait (bad) (bad) data16 rex.WRX cwtl fwait mov fcmove rex.RB (bad) js (bad) or pop adc sbb enterq cmpl retq mov movsb subl fcomps mov in js and mov or stos fwait (bad) icebp xchg pushfq cld pop cmpsl (bad) jmpq or pushq push (bad) clc fwait std jae fs mov pop and xchg movabs pop lods jg mov outsb loopne (bad) (bad) (bad) fidivrl enterq clc or fwait mov jnp cmc je sub insb movslq fdivl rex.WB cmp sbb out loop mov sbb push test xor sub rclb xchg xchg push (bad) push jb cmpsb sar sahf rcll mov (bad) xchg out add mov rex.R mov hlt xor mov (bad) rex.WRX ds pop test add xor callq in in sbb jg movabs pop rcrl out out (bad) fwait adc retq (bad) loope pop test gs jmpq sarl insb (bad) rcrl cwtl in fs (bad) mov pushq mov mov stos fidivr mov int lock fucomp lock stos cmpsl rex.RXB rex.W push add cmc enterq fwait rex.WB retq (bad) sbb lea cmc and or mov pxor (bad) (bad) (bad) shll sbbb imul sub (bad) jbe test fs pop je rex.WXB js rex.WR pop in in sbb pop je xor mov jge (bad) mov mov (bad) xor and mov (bad) (bad) test push adc push fstp movsl rex.X stos add cmp and mov rolb loope nop (bad) mov (bad) fucom retq (bad) in lods adc rex.XB xchg sbb add lret (bad) jo lock repnz jrcxz push loope adc mov pop sbbl (bad) sbb lods rex.RX test nop test retq mov test lret jle push (bad) (bad) fst xorl add movsb mov xchg icebp data16 mov (bad) js (bad) (bad) push stc xlat rex.R adc cmpb rex.W movabs bnd cmp rex.WRX cmpsb rex.WX sub mov test mov out addr32 loopne movsl movabs xchg jmp loope and (bad) movabs rex.B test and add (bad) xchg sub fwait orb adc lret in addl js jmp and out (bad) pop sbb (bad) fbld mov jle push mov imul jrcxz movabs sub fwait mov (bad) pop sbb sub (bad) mov hlt (bad) callq xchg (bad) cmpsl (bad) ficompl mov cltd (bad) rorl xor cmc retq rex.WRX jg jb (bad) ja push (bad) adc test push (bad) pop xor mov (bad) stos fwait jg jno scas rex.B rex.XB lods adc rex.WRXB rex.WRX xlat (bad) fidivl test fs addr32 negl push enterq gs shll rol mov adc cmp mov shl pushq addr32 sbb leaveq jmpq mov rex.RX lahf rex.XB scas insb sub movabs fwait addr32 in (bad) loop,pn repnz pop out ja xor icebp cmpsb rex.WB lock cltd fcoms adc pop xchg fsubp rex.B rex.WXB (bad) sbb in pop lods and sarl xchg fs push repnz test jb lock and rex.RB rex adc negb repz insb iret icebp retq jno sbb imul repz pushq je fistl push outsb sub scas movabs leaveq imul mov push sub decl fs rex.B (bad) (bad) rex jae cli rex.WB subb fsub icebp xchg test movabs mov sub and adcb pop loopne scas insb (bad) xchg nop mov lods adc loopne and sub mov add jnp fildl movabs (bad) pop and adc adc add mov pop outsb sub xchg sbb rex.RX cmp cwtl movabs mov lea addr32 rex.XB (bad) (bad) adc sub (bad) pop idivb cli fwait (bad) fsubp stos movabs cmp xchg (bad) loopne fild in xchg sub (bad) adc je sub (bad) (bad) push push ss loopne add movabs mov shr (bad) lahf lods loopne pop add mov cwtl cld mov out mov sub fchs stos test sarl shll cmp jrcxz psraw and loopne push add jmp (bad) loopne cmp (bad) cmpsb lods mov rex.XB pushq mov sahf xchg addl mov cmp mov mov movsl mov pushfq sub stos xor xchg lret gs cs ffree cmc add (bad) (bad) ficompl loopne mov rex.RX jmpq and and loopne cs pop push rex.WRXB mov cmc (bad) pop pop loopne repz jo mov mov cli jbe (bad) loopne fnstsw add xchg cmc loopne (bad) pushq sbb xor (bad) movabs mov cmp (bad) nop test rex.WX es jne sub je push stc (bad) xchg sbb loopne xor (bad) cmpsb loopne xor (bad) pop movabs lods orb jmp rex.X decw pop mov (bad) lahf xor adc and jbe mov rex.RB (bad) xchg shr cmp (bad) (bad) out outsl int3 test test mov mov rex.WR callq out rex.WX addr32 js fistpl xor loope test loopne (bad) movsl (bad) lods rorl cmp movabs cmp (bad) in mov xor jmpq retq xor rex.XB loopne jg adc (bad) pop rex.RXB jle push (bad) sub or lods sarb hlt rex.XB in std (bad) clc or adc (bad) cli pop outsb (bad) callq adcl rex.RX (bad) cmc (bad) nop sbb (bad) out testb mov hlt test rex.W fldenv stos xchg insl and jg xor push pushfq in insl xchg fild add (bad) fisubl jrcxz jle pop xor sbb lods add cmp int (bad) bnd flds jl (bad) push fwait insl cmp mov and lret sub fwait int3 data16 movabs out stos mov int xchg sbb rex.RB sbb sbb data16 out test out loopne jae fldcw push add loopne fnsave icebp sub jmpq pop adc or cmp xchg repz mov jmp jle and loopne (bad) test push test or pop movabs lock shl test insb cmp or (bad) test (bad) (bad) (bad) in loopne mov (bad) xchg test hlt and ja push lret mov push mov jnp addr32 mov loopne (bad) not cmc subl sbb or movslq fistp add pop imul repnz mov movabs js adc add pop sub sti loopne mov jmp mov xor insb pop cmp movabs (bad) subl enterq loopne jl xchg iret rex.WX cs loopne rex.WRXB rex.W rex.RXB jl rex.X loopne repnz jns (bad) loopne test cltd xchg or adc (bad) and mov mov lea rex.RXB pop loopne xor and xchg (bad) (bad) loopne xor mov (bad) loop callq sahf rcr rex.RX rex.W (bad) loope sbb mov mov pushq cwtl pop fdivr pop (bad) jrcxz mov loopne (bad) and mov repz stc in leaveq xchg loopne ss stos and repz test (bad) (bad) jmpq sti stos (bad) int enterq hlt loopne retq out or jge push mov sbb push mov mov (bad) (bad) pop fnstenv (bad) (bad) push add sahf adc retq or loopne movslq cmp (bad) in lret es cld addl pop cwtl fneni(8087 ss push (bad) shrl (bad) jno (bad) test lock (bad) loopne sub cmp mov and test push xor (bad) cmp int sub xlat cmp (bad) and add es retq mov xchg sbb in rex.WX rex.X rex.WR add (bad) pushq mov ljmp cmp scas xor clc not stos test cmp (bad) push imul rex.WRB jae sub movabs and (bad) xchg movabs and pop rex.WB mov js loopne xchg movb (bad) sbb movabs adc (bad) and fcmove xchg clc stos cmp int movabs rcll jp movabs (bad) jmpq push (bad) (bad) mulb (bad) lret rex.WRXB push test fcoms icebp mov pop in enterq movsb xor pop stos xchg repz push loop movsl cltd cld (bad) fchs push lret (bad) leaveq lea cmp ss jae icebp imul cmp or rolb jg xchg xchg loope popfq push rcrb (bad) xor ds xlat cli lahf cmpsl cwtl loopne sub repz in loop mov sub iret mov pushq test rex.XB (bad) cmp loopne test sbb jp pop loopne in (bad) retq (bad) adc sub jrcxz callq cmpsb leaveq repnz mov adc mov xor mov mov test jbe (bad) stos cmp jg rex.B xchg jmp movabs lahf fwait (bad) jge (bad) pop fs adc loopne (bad) pop in rex.B rcrl pop ja int3 sub add loopne xchg test (bad) loopne in rex.XB pop rex.WRXB out loopne adc callq loopne outsl cmpsl cmp push (bad) rex.WRB pop movabs cli rex.WR addr32 (bad) loopne jbe rex.RXB sbb or movabs loopne and rex.WX and pop jp retq test jrcxz movabs (bad) cs xchg movabs loopne sub in rex.XB loopne sbb ficoml (bad) imul adc movabs int3 movabs sub rex.R xchg or fisttp retq (bad) jrcxz push mov and (bad) cltd rex.WB es mov (bad) (bad) and xor add loopne rorl xchg fisubl ds (bad) xor and in rex.WRXB movsl rex.WX rex sbb (bad) cmp fcmovbe movabs mov and push pushq stos mov and ja (bad) stos nop jrcxz jmp sub pushq (bad) retq rex.WX mov cmc xlat (bad) cltd (bad) sub push lret (bad) loopne cmpsb rolb and and (bad) loopne pop (bad) int push insl movslq jo out in mov roll sub in insl pop jno jle shlb xor in cli and sbb (bad) outsb movabs cs cmp adc movq mov movabs xlat in loopne jle (bad) cmpsb xchg xchg sub mov int in adc loopne (bad) or rex (bad) rex.B rex.WR pmaxsw rex idivl and cmc sub iret xchg rex.WRB data16 in retq sarb fwait add loopne or mov clc (bad) adc cmpsl sub pop mov and nop ficomp gs notl xor adc sbb es mov mov decb push add (bad) and (bad) dec rex.B in push movabs adc imull rex.WXB clc xchg mov es mov xor (bad) je mov (bad) loopne xor test fnstsw xor cmpsl sbb loopne mov in movabs loopne xchg adc mov pushq stos adc rex push movslq rex.WX ds jbe (bad) loopne (bad) movabs outsb pop imul loopne jne hlt and movabs add test movslq test outsb rex.RB leaveq jmp mov enterq mov mov lods repnz (bad) retq jae stos lret cmp or cwtl movabs pop pushq add loope fcoms rex.WX fwait push add rol lods repnz xchg (bad) test retq xor (bad) pop rex.W ds rex.B (bad) adc leaveq sub (bad) callq mov jb xor mov rex.X xchg xor rex.WRX shrb rex.R fistpl xor mov and cwtl xchg (bad) clc (bad) vcvtdq2ps fistl xchg pop mov (bad) callq or retq in cwtl in jae (bad) ds cmp mov in add rcl lods std gs fwait sbb in test test pop nop adc shl icebp (bad) jmp ss (bad) (bad) sti scas addl rclb movslq loope sub or add cmc rorl jl cmp cmp movabs pop lret and enterq loopne ja scas std and (bad) sub movabs rclb lret sub jnp (bad) adc xor in mov (bad) push std (bad) out adc rex.WXB rex rex.XB lea (bad) loopne xor or mov sub loop sub adc (bad) movsl hlt xor nop add mov or addr32 mov pop loopne movabs lea jp cwtl jmpq cmpsb add scas sbb adc js jbe loopne (bad) (bad) (bad) jmp stos iret loopne or push jge mov (bad) rcrb push lock out (bad) jg (bad) xchg cmp pop or shl push (bad) add xchg sarl shr ja lea movsl mov rex.W xchg out add andb jle xor xchg add enterq sbb roll lret (bad) rex.WR xchg movsl jl (bad) add (bad) jle cli cltd loopne cmp js (bad) loope xor sbb xor test icebp add sub (bad) mov fsubs mov mov js jg hlt test xchg sub push (bad) loopne add (bad) lret xchg lods loopne (bad) sbb rex.RB addr32 movabs or adc (bad) push (bad) xor loope (bad) rex.RB test jo out fmull movabs xchg (bad) loopne push data16 fcmove or notb lret (bad) loopne movabs (bad) lods mov adc loopne stc rcl (bad) xchg pop hlt loopne cmp push cmpsb shlb sbb jmpq rex.RB fucomip pop cmpb sbb out cli mov sbb add (bad) fs cmpxchg mov clc mov rex.RXB loopne pop movsb (bad) mov addr32 jle retq rex.WXB rex jo (bad) push (bad) sarl mov jle fldenv (bad) ja outsl std test scas jrcxz icebp fs (bad) rex.WXB gs addr32 rex.WXB jb ja cmp sbb xchg sbb fs adc push mov jne mov (bad) mov jmpq rex.WX (bad) cwtl jmpq ds mov or rclb (bad) or jo,pn jge (bad) lods rex.WX mov fs rex.RB shll shll mov scas xchg or in xor scas nop rex.B mov retq or pop rex.XB fisubrl scas (bad) fidivr pop insl add sub lock je movsb rex.WXB icebp pop cmp std adc adc fild in xchg jae xchg insb (bad) rex.WR adc gs scas push mov or mov scas leaveq repnz mov add xor jmpq and lahf andl mov rex.WB (bad) scas add cld pop xor (bad) fwait rex.WXB mov mov loopne jl (bad) loopne sub std xchg jp rex.X rex.RX popfq jb adc rex.RB test lods repz insl int pop (bad) or add cmc mov (bad) cltd add mov clc xchg int in and (bad) pushq adc js jo and jb mov rex.W cltd (bad) in in (bad) loopne jmp (bad) jo ss (bad) callq and jmp cmp icebp fdivrl movsb rcl out enterq mov or imul jno vmovlps rex.XB mov insl (bad) pop cmp jnp sbb (bad) xlat out leaveq mov stc rex.WX and push (bad) movabs jmpq stc pop add cmp fiadd adcl (bad) xchg add (bad) mov (bad) out (bad) xchg xor insb mov pop xchg (bad) jmp mov nop mov xchg fstpl movabs enterq push sti sbb (bad) out (bad) mov sub (bad) loopne lock loope xchg (bad) nop jg loopne out jmpq rex.R (bad) fsub pushfq xchg (bad) mov int3 out (bad) rex in mov rex.WRXB xlat mov shlb (bad) (bad) and jg xchg rex.WX xchg callq pop out cwtl in int3 cli sub mov mov retq xchg loopne mov outsl jmpq lea cld mov es retq rex.RX (bad) add outsl fmuls jrcxz fbld (bad) loopne retq sqrtps cld gs sub (bad) sbb movsl add fmul rex.X jne push (bad) (bad) movabs callq rex ror push movslq (bad) (bad) out pop movabs or (bad) cltd and pushfq rorb insb sub lods loopne add callq lret ss pop (bad) ror push jne hlt std loopne jg (bad) mov adc xor popfq loop ror (bad) rex.RB mov movsl lret (bad) jbe cwtl push push loopne rex.WRXB pop loop std fsubs ja loopne shl xor iret fistl push cmp or mov (bad) xor jbe ja js sub sti lahf outsl mov rex.RXB rex.B data16 loopne pop xchg fcoml mov pop rex.RX (bad) pop lock and pop sub cmp mov fildl test sbb js stos cmp addl and jle fcoms (bad) xlat or xor ds movsb scas icebp add adc or mov jbe xor pop lods loopne cmp or or push rex.WR mov sbb movnti cld (bad) (bad) in out rex sub loopne (bad) fstps mov (bad) out rex.WRB loopne xchg jl (bad) and callq stc jmp gs add and mov pop lret rex.WXB loopne gs sbb jl icebp cmp shrb (bad) outsl (bad) adc mov jne pop lock loopne (bad) cmpsl adc loopne adc push loopne rcrl out mov (bad) idivl mov loopne xchg fbstp movabs rex.WX fs (bad) mov loopne xchg clc fsubrl out rorb mov loopne adcl mov sub or (bad) retq outsb and jp mov rex.W es xchg mov loopne jns sub mov add lods insb fwait addr32 sti or push rex.X insb outsl xchg jnp movabs loop (bad) movabs xor rex.R rex.XB repnz stos add in xor add movabs (bad) out in enterq shlb imul ja cmp mov adcl jbe loopne xchg adc cmp xor push js (bad) andb (bad) or stos test jne (bad) (bad) sub fwait cltd rcr mul int3 (bad) hlt mov pushfq popfq jae mov mov (bad) ds cmc xlat cwtl fisttp pop or mov push xor adc gs jmpq pop add jrcxz cmp (bad) (bad) in fdivrp lret rex.WRB (bad) (bad) cmp mov lret xor push sub out loope xor sbb movabs sbbl and cmp pushq or mov fnop movsq or ds in (bad) mov mov adc lret mov je loop jg mov gs out std in pop sbb scas or cmp mov movslq (bad) icebp jne and mov xchg (bad) xchg ds vfmsubps retq cmp cmp mov mov in rex.W cmpsl (bad) mov jrcxz xchg xor push loope in enterq (bad) scas (bad) iret pushq (bad) cmpl in (bad) in retq rex.W mov movabs rex.WRX adc movslq jge (bad) stc mov sub cmp and jae clc adc pushfq and push and in rex.WRX test (bad) ds (bad) xor mov rex.WX sub cwtl rorl decl cld xchg jmpq movntq out scas xor adc fild (bad) loope movabs (bad) cmp mov fsub icebp cwtl rex.WRB mov icebp and adc (bad) (bad) loopne movsb mov push mov cli leaveq jno movabs mov (bad) (bad) pushfq cmp mov add negb lock push (bad) cmc (bad) (bad) out sub and je fimull fldcw test (bad) mov lret adc jns jp adc (bad) shrl pop mov (bad) outsb adc retq loopne es movabs cmp movabs xchg testl jge xchg sbb test xor and and lahf insl out leaveq in sahf loopne addr32 (bad) stos ss test (bad) (bad) loopne xor pop in test add adc add (bad) jo sub (bad) loopne (bad) or loopne add addr32 (bad) push ss sub xor sbb adc (bad) sbb push (bad) (bad) rex.X fs jnp nop mov mov int3 (bad) pop mov cmpsb cld adc (bad) fldt mov cmp insb rex.WRX loopne adc adc sub jnp push loopne or rex.WR pop pushq (bad) frstor mov (bad) rex.W lock mov adc xor cmp rex.WRB jl push add (bad) jo xlat sbb jns psrad jmp rex.W loopne xchg jns xchg push cmpsl mov insb or lock mov (bad) enterq movabs mov jle loopne lea add repz sub enterq pop and lods stc adc js mov cmp retq adc pop or rex.WRXB out xor push leaveq in in data16 (bad) jg xchg rex jp rex.X movsb loopne and lret loopne mov (bad) ja xor or sub (bad) fsubs loopne scas xlat mov and loopne or (bad) (bad) pop cmp callq in (bad) movsl (bad) mov (bad) loopne adc hlt jmp callq xor notl xchg cmpsl int sbb and push xor add (bad) movabs cmp (bad) (bad) jp (bad) std rex fwait mov out loopne hlt (bad) mov xchg pop loop rex.WRXB gs cmp lods cli (bad) bnd rex.WRB fucomp mov clc icebp xchg int xchg xlat testb mov and (bad) loopne enterq stos int3 std lret jle nop or rclb scas sbb pop (bad) in testl retq and movabs adc fmull movabs fdivs (bad) mov incl and (bad) imul mov rex.WX jo fimul and fmuls rex.WXB or insl (bad) in mov mov loopne rex.WXB notl fucom (bad) add cmp (bad) loopne add xchg fmull lret mov cld push xlat rcr mov sbb push mov test (bad) int ds mov nop rex.RB callq js enterq lahf jo push mov rex.RXB adc and out lock jb in add js (bad) xlat mov xchg repz lret retq loop jb xchg rex.RX pushq push out push xchg enterq (bad) push rex.R in pop pop or cmc (bad) loopne jnp pop mov jb sbb ss (bad) sub sub movsl movabs jge adc sbb or and imul (bad) scas and sbb jns pop jrcxz (bad) adc cmp mov add (bad) fisubl retq (bad) fs cwtl shr mov and pop push sbb (bad) sbb imulb mov data16 cs rex.B out sahf movsl sbb retq jo xor mov cmp xchg outsb mov imul sub (bad) int3 jns mov insl sbb add sbb (bad) retq fwait or (bad) jo jns jrcxz rex.R lea pop jo icebp imul jnp lret mov sbb pushfq jrcxz rex.WR adcl int jb in and loope mov (bad) fsubl pushq lea in jp lock (bad) outsb cld jrcxz (bad) cmp stos mov outsl movsb clc rex.XB imul jl cmpsl fnstcw rex.WR adc stos cmpsl idivl loopne cmp nop xor loopne sbb lret mov xchg push add pushq mov icebp add lock and jbe fneni(8087 pop lods lea jmpq enterq push cmp loopne sub rex.XB lods or (bad) xchg in mov xchg (bad) rex.WRXB mov rcl push (bad) sahf in cwtl test int3 out loopne add stos (bad) rorl loopne je rex.WXB rex.B rex.WRB jl in sbb loopne fwait sbb jrcxz jl movabs ficomp fbld rex.WRX shl rex.RXB rex.WRXB (bad) (bad) sbb adc or cwtl enterq incl lock rex.WX mov and out cmp (bad) rex.WRB (bad) or loopne mov adc adc jg (bad) ds (bad) subl push xchg stc loop mov js adc ss test jge rex.WRXB int push rex.WRX ds jp or (bad) sub xor cld rol mov sub or mov mov (bad) hlt rex.RXB popfq pushq rex.RX fwait add movabs rex.WRXB fs cmpsl pop lea (bad) outsb mov jmpq xchg rex.WRB xacquire (bad) decb notl and adc in pop (bad) or insl movabs (bad) loopne rex.R adc (bad) loopne icebp test push (bad) adc nop (bad) add or vpandn rex.B test mov ja sbb mov xchg cmp mov fist (bad) mov (bad) ja andl and stos or add adc rex.WX (bad) cmp cmc (bad) jae subl loopne pop (bad) xor mul lret or sbb loopne mov (bad) in jmp mov pop add mov (bad) add js add (bad) mov cmp xor sub sub loopne retq jnp popfq sub pop ror pop movabs rex.WRB xorb sarb mov mov and (bad) (bad) push loop in (bad) es mov rex.RB mov (bad) (bad) xchg push mov cld push and int3 mov xor (bad) sub out adcl jnp sar out (bad) mov roll and cmc mov test lock mov jp jmpq movslq fimull (bad) pop (bad) (bad) (bad) (bad) or lahf movslq stc mov xchg rex.W fidiv (bad) nop add jns and fucomip xchg mov and mov (bad) (bad) rex.WRB jno in fcoml (bad) (bad) loop jle cmc add push loopne in icebp orl retq and loopne pushq add pop xor jbe gs cltd cmpsb data16 xchg je sub shrb sbb xchg xor jmpq mov imul mov xor loopne xchg mov jg movabs rex (bad) mov jns (bad) lods outsb mov imul loopne sbb pop jnp jg (bad) xchg mov mov rex.RB loopne sbb fisubrl rex.WRXB insl (bad) movabs (bad) cmpsl mov cmpb lods nop and sbb fsubrl xlat movabs xor in out sti and jb imul cmp loopne (bad) insl hlt xchg adc loopne add scas mov jge add loopne (bad) xchg push (bad) mov cmpsl or jne rex.WXB (bad) jmp push loopne pop xchg adc in imul (bad) add cmp push (bad) jl cmp scas int3 stc jmp loopne iret stos jg lock pop xor (bad) (bad) mov fs adc popfq push (bad) push lea cmp jno mov testl (bad) scas xchg mov rex.W jg (bad) out rorb jmp lods add cmp push mov (bad) movslq (bad) adc icebp xor adc xchg xor sbb movabs pop sub loopne sbb push jns cmp mov mov rex.XB jrcxz pushq adc adc mov shlb shr callq test pushq xchg leaveq (bad) rex.RXB outsb cmp mov jle and cli imull addr32 loopne jmp (bad) pop jnp rex.R rex (bad) cli and xor jns or addl movabs xchg rex.XB (bad) loop push (bad) stos lret mov sub outsl pop push (bad) sbb xor (bad) ffreep (bad) (bad) rol or lods mov in xor int3 xor mov (bad) ss add (bad) callq jg mov loopne out push fs (bad) adc adc (bad) sbb pushq ror xchg fs rcr fnop in pop rorl int3 (bad) adc cld xchg popfq sahf fisttpl loopne leaveq jno rex.RX out xchg punpcklbw pop (bad) xor rex.RB rex.WRX rex.RX xor (bad) mov (bad) rex.WX in xchg or sarb mov testb add rcrb stos jmpq jg mov addr32 rex.R sub movl xchg cwtl fsubr mov leaveq pop push sbb sub lret rex.WRXB es (bad) mov sub or sub jne cmpsl loopne or cld js push jno,pn addr32 hlt repnz pop loopne and ljmp sbb mov fdivrl (bad) lahf mov pop mov int3 callq jbe mov and cmp (bad) loopne lods in pop mov (bad) iret in or sahf loopne lret (bad) stos jnp stos (bad) adc scas sahf insl imul test pop (bad) mov jmp stos movabs xchg add imul sub mov xchg retq cmpsb add loopne jmp mov add incb push cmpsl scas repnz and jae rex.XB rex.WX imul loopne pop push rex.WB jg loop mov pop mov clc push sbb movabs testb rex.RXB adc (bad) cli cmp and callq add add (bad) loopne mov mov (bad) fidivrl (bad) add negl or movabs sub mov out jrcxz addr32 movsl and (bad) sub (bad) xchg loopne (bad) cmp push pop push pop loopne mov mov xlat xchg loop jle sar test clc movsb xchg sbb mov xchg sbb mov and mov andb sbb (bad) loopne ror callq ds rex.X cli pushfq rex.WR adc test cmpsb loopne pushq retq (bad) repnz (bad) and mov out add test sbbl (bad) or (bad) mov test sbb jno mov movsl outsl (bad) mov rex.XB mov (bad) cmp loop sub xchg and test pushq (bad) pushq scas cmp rex.X and adc add jo and sarl cwtl pop (bad) gs and (bad) pop xchg movl and adc xor rex.W xlat add sub shll (bad) (bad) lret movabs (bad) sub sbb adc lods add mov andl rex.WRXB sar movabs rex.W rex.W rex.RB in loop loopne (bad) adc fs rex.WX callq sbb outsl loopne mov adc (bad) mov cwtl xchg fmul pop sub movsl loopne mov xchg insl xor sbb jg jrcxz jnp retq rex.WRB mov in cmp sbb cmc xor enterq adc jmp add iret or jmp or (bad) sub movabs xchg movabs stos retq push push pop xchg loopne pushfq test fldt in in in test lods fsubl test cltd pop int3 xchg adc sbb callq movsl or insl loopne mov gs adc pushfq mov jne fidiv sbb mov fwait jl loopne and sti add push xor (bad) (bad) shrl mov fsubrl rcrl jne pop add adc push (bad) movabs imul sbb retq jl test out jbe (bad) and (bad) cmp and xor (bad) out mov es out icebp (bad) clc in ss cmc clc xchg pop jno jns jae mov rcrb mov or add add or add (bad) mov lahf test rcr (bad) movabs rex.WX sub (bad) (bad) push out (bad) out cmpsb push and sub (bad) test or adc notb adc (bad) sub test rex.WR in mov fwait cld rex.WR mov ja (bad) shl jmpq loop in rex.RB leaveq pushfq sbb scas mov adc fistpll ja mov or adc adc push movabs xor rex.WRX pop rex.WRB (bad) movabs push add in jae adc and mov in fnstsw rex.B rex.WX loop repz imulb xchg retq jg fcmovnu (bad) lcall push (bad) jns clc jg movslq fild popfq scas (bad) fs (bad) push cltd mov cmc push pop and sbb rex.WRX iret fcoms sub (bad) std add fadd divps sub loopne xchg sti repz and notb fwait (bad) (bad) jnp add out loopne mov and rex.XB retq jge loopne callq fdivrp (bad) cs or clc fnop xchg sub (bad) cmp add mov imul mov adc sub loopne sti (bad) xlat and xchg jl mov mov (bad) (bad) rex.WB rex.WRXB push add xor loopne pop sbb loopne pushq sub int3 (bad) lret loope movabs movsl (bad) movslq movabs xor jrcxz adc loopne leaveq mov rex.WRX mov loopne rclb jne mov cmc in sbb loopne (bad) mov and (bad) movabs hlt int xlat (bad) pop cmp (bad) xchg mov mov rex.XB out in fisubr push nop ljmp loopne pop or test loopne and sbb (bad) test movb repnz mov pop push (bad) xor in (bad) sbb jge test cs loopne enterq repz loopne cmove pop iret loope scas and stc jle (bad) sbb int3 cmpsb retq pop jo or imul (bad) mov (bad) (bad) adc jmpq (bad) jl xchg mov or add (bad) (bad) xchg mov rex.RXB (bad) jl imulb (bad) pop xor rex.X sub pop xlat adc test nop (bad) (bad) cmp loopne cmp push pushq mull lcall sub push xchg xchg sbb push loopne gs imul (bad) shl rex.WRB insl or fcmovne pop je repz fmull out rex.X loopne and and rex.RB repnz sarl pop sbb movabs and rex.R rex.X mov mov push push je sub rcrl movabs push loopne mov iret clc cmpsl (bad) pop rex.X xor mov in movabs pop sti mov mov (bad) jo mov (bad) rex.W (bad) roll movabs (bad) rex xor out adc rex.X rex.RX jmpq lret clc (bad) repnz loopne sbb int3 gs (bad) rex.WRX adc test (bad) insl add adc pop retq and out and adc (bad) stc int3 cmp mov nop sub lahf cwtl faddl movsl (bad) (bad) loopne (bad) or loopne (bad) (bad) pop mov push jae out insl rex.WXB rex retq adc add mov sarl loope movl sub add sbb (bad) add xor loopne in mov (bad) test cli mov pop (bad) jrcxz mov testl sahf xlat retq test loopne cwtl fild jg (bad) callq outsb clc and ljmp insb ds (bad) sub (bad) loopne xor mov xlat (bad) ds nop mov movabs xchg sub retq or (bad) jg out movabs jmpq and sub push movabs mov es (bad) fwait mov rex.RX jb (bad) stos loopne movsb (bad) (bad) movabs jo pop enterq rex.W popq (bad) add sub mov roll retq add jrcxz loopne rex.RXB or pushq rex.WRB fs xchg and gs mov (bad) shll outsb idivl (bad) cmp xchg cmp scas movabs loopne xchg gs sarl fwait loopne jno sub scas (bad) (bad) loopne xor mul lret fistpl (bad) loopne retq push rex.XB sub loopne movsb (bad) in enterq loopne nop fsubrp cld (bad) rorl (bad) rex.WXB mov fidivl and push (bad) xor sub cs and fisttpll push outsl add fadds (bad) pushq xchg repnz (bad) (bad) pop lea (bad) sbb pop rex.R adc retq mov xor (bad) lea xor out (bad) or test or in outsb sar jnp jrcxz insl outsl jns cmp stos mov pop sub pop and xor sbb mov mov (bad) outsb sar mov xor fcmovnb sahf and stc and jg jae js and lods loop cmc adc outsb hlt jle sub in jrcxz jrcxz lahf cltd mov in loope mov pop sbb pop retq or xchg jg pop (bad) jne mov jrcxz add mov callq jrcxz nop jne movslq jno jo (bad) (bad) xchg loop push and pop cmc pop jae jle adc xchg xchg jnp insb movabs insl int lods xchg or and (bad) sub push in pop sub rorb je mov imull or hlt rex.WRXB jmpq or movabs jge mov pop (bad) in mov jno loopne mov (bad) xchg cwtl jg fimul movsl mov stc insb mov loopne (bad) movabs cld jl jbe cmpsb loopne add or push push clc nop sahf xor loopne (bad) repz (bad) pop loopne std js xlat iret xor loopne (bad) cmpsb fldt cmp sbb xor loop in xlat leaveq shr iret and pop loopne es (bad) ss xchg loopne stos movabs mov xchg sub xchg and adc ss or pushfq mov addr32 or movabs add push popfq loopne (bad) cmp (bad) loopne fs ror pushq (bad) clc lods xchg mov pop rex.WB cmp jp mov fucomip fdiv (bad) movsb loopne rcl (bad) loopne (bad) adc loopne (bad) rex.WXB (bad) loopne and (bad) (bad) push loopne or adc fcoms and rex.WR icebp negl movabs pushq xor loop (bad) lea cltd mov fisubr xor pop int3 lods idivl adc in outsl rex.WB mov jrcxz mov divl clc push cmp push rorb push xlat in (bad) cmp mov adc repnz insb fninit cmc (bad) (bad) retq or jl xchg add sbb loop (bad) test rex.RX fadd scas lods push clc callq movsl and pop jl push pushq leaveq (bad) notb rorl (bad) lock mov mov xorl sbb (bad) mov adc sub movabs sbb adc sub lock push cmp jae hlt movabs sbb pop mov jnp xchg (bad) rol icebp out sbb add repz repnz rex.WRX movsb stos fcomps fcmovnbe and jns cmp loopne add movslq (bad) xor push ja fdivr mov clc std (bad) pop xor and push (bad) leaveq lods imul cmc (bad) cmpsl loopl out movsb fstpt (bad) (bad) sbb rex.W shll imul repnz jle movabs callq imul cmp pushfq in lock shl icebp imul cmpb icebp (bad) (bad) test lahf retq xchg (bad) mov push and xchg (bad) (bad) mov addr32 sbb insl (bad) cmp (bad) cmpsl test decl adc es cmp es (bad) jb rex.WRB mov jo (bad) imul (bad) gs or adc (bad) shrl mov out rex.W rolb xchg adc push sbb mov fmuls and fistpl lret cmpsl pop test fstps lret rex.WXB mov rex push add push ds orl repz (bad) sub in rex.WXB xchg push mov (bad) (bad) add and (bad) cs (bad) callq jns fst pop loop sbb cmp insb (bad) mov sbb in rex.X (bad) mov cmc and jp or mov test sti sub or loopne jae test loopne sub fistp or movabs lock enterq add pushfq (bad) fimull pop mov (bad) (bad) sahf (bad) mov (bad) push lret (bad) in (bad) mov ds lock loopne add adc fucomip (bad) jnp xchg jmpq fcmovb cmp mov rex.RX std rex pop cmp xchg test jno fmull in rex.WB fnop ja movabs add xchg push fxch (bad) js lock clc (bad) (bad) (bad) frstor pop rex.X mov int3 jge adc xchg test add movabs cmp out adc repnz xchg (bad) mov sarl loopne (bad) in test xchg out (bad) (bad) add movsb sub iret loopne rex.WRX xchg rex.WR imul loope ja and out fnstsw es rex.RX loopne callq jrcxz loopne test xchg test stos and rex.R test xor lods adc add xchg hlt jrcxz sub sarl xchg xor (bad) in sbb (bad) loopne cmc nop and cli pop fcoms cmp (bad) lret shr (bad) loopne sub test add sbb rex.RX nop sarb (bad) xchg rcll loopne pop ja cli xchg faddp loopne movslq stc loopne movabs int (bad) movsl mov sub push movsl mov cmp mov (bad) adc lods loopne ds sar enterq mov fwait adcb clc (bad) mov loopne (bad) js rex.WX loopne cli clc add jge xlat in loopne mov push mov mov cmp cld and scas divl and rex.B test loopne out in loope jnp jrcxz xchg mov xor mov jmpq retq adc (bad) cmp movabs (bad) and loopne rex.WB (bad) lods push movsl imul movabs test mov fdivrl sub xchg (bad) (bad) mov rex.RB add adc movslq push icebp (bad) in (bad) sub retq stos push mov pop (bad) rcll and mov xchg (bad) int rex.WB repz pop movabs movslq popfq (bad) nop loopne (bad) mov loopne mov ja (bad) lahf out mov (bad) jg sbb (bad) adc test (bad) adc pop xor mov jge scas rex.WR sub outsl (bad) fidivr sub push mov or (bad) fadd and pushq mov jo (bad) pop mov out jl fsts sahf rex.WRX jmpq or pop cmpsb loopne (bad) jp rex.RX rex.X mov gs rex.W push (bad) xchg (bad) loopne shr (bad) nop add stos (bad) cltd rex.WRXB movabs mov jrcxz ss (bad) sub jne movsl subb ja fdiv (bad) rex.WRX callq cltd loopne outsl jbe pop mov jae mov retq jl xor lods loopne divl jne data16 add pop pop in xchg xchg push loopne mov rolb jl jmp mov movabs sahf mov hlt rex.W rex.RX rex rex.B (bad) add pop loopne ss jmp pop mov mov cmc add push mov rclb loopne rex.RX xor lods rex.WX cmp stos rcll mov movabs loopne add pop (bad) xchg push loopne in (bad) outsb imul mov sub loopne push out rex.W (bad) lods jmp xor (bad) pop pop rex.WRX lret rex.B sti (bad) sarl rex.XB (bad) (bad) repnz sahf or loopne enterq rex.WB nop rex.WXB fadd fsub add (bad) leaveq and in (bad) mov fldt or sub (bad) mov jp cld jrcxz movabs adc addr32 jmpq fs fidivrl jg incb (bad) mov xor retq jl jrcxz push in xchg push pushfq xchg lods movsl sti jg stos enterq rex.W addr32 mov (bad) int cltd jno clc add (bad) and sbb mov and imul lret std rex.W punpckhbw retq rex.WR (bad) lods cmpsl scas (bad) mov jno insl (bad) rorb push sub cmpsb pop fiadd xor cmpsl rclb popfq (bad) (bad) movb xchg rex.WR (bad) rex.RX mov sti push lods ds and in je rex movabs rex.W jmp or jae xlat xchg movabs mov or in fs jrcxz addr32 push jae xorl xchg jg (bad) (bad) xchg mov adc repnz mov sub cmp and sarb rex.WRXB rex.W (bad) cmpsb movabs jg movabs int3 loope mov (bad) or out shlb cmp xchg movslq addr32 xor and xchg sahf sbb ss lock rex.WR icebp icebp pushq jle adc jns pop insb movabs cmp int3 and in jo rex.X (bad) clc repnz leaveq movabs retq out leaveq sub jrcxz sarb callq es or lahf (bad) pop jae jrcxz data16 repz nop mov mov rex.RXB fwait ror (bad) mov insb test (bad) adc (bad) (bad) jne cwtl mov nop (bad) xor cmp rex rex.RXB addr32 jrcxz (bad) scas mov rex.RXB cs imul cmpsl insl (bad) mov lea mov lods (bad) and mov movsl adc (bad) pushq (bad) adc cmpsl sbb addr32 (bad) in test and add add repz adc cmp cmc test and and or push mov sub add (bad) out (bad) xor int3 sbb std mov (bad) xor (bad) mov addb xor (bad) rex.RB sbb pop fnstcw pop lea xorl and repz fwait stos (bad) jg push movabs fistpl cld movabs mov or enterq (bad) cmpsl test addr32 mov (bad) and retq mov lahf lea mov (bad) enterq cwtl rex.WRX rex.WR (bad) lea (bad) (bad) in pushq and xor cmpsl outsb (bad) (bad) (bad) sarl fs out sbb (bad) pushq movabs nop push jae shr addr32 rex.RX xchg movslq imulb adc xchg sbb or mov mulb mov and movabs jae movslq (bad) (bad) jns (bad) mov (bad) repz callq xchg jmp (bad) add clc rex.WRB pushq in fdivs (bad) (bad) mov xchg mov test jl movabs add int3 jns cmp insb rex.WR jnp stos rex and mov xorl pop rclb test popfq stos scas rex.W rex.XB in movsb and ja push mov or xchg and orl cmpsl (bad) mov ja jno jno rex.WRX jne icebp jl and movsb imul movabs (bad) or pop rex.XB cmp stos imul jrcxz (bad) lret mov or pushq mov or movsl sbb rclb insl in addr32 jge (bad) (bad) je in and in (bad) rex.B xor jbe mov (bad) ror sar mov push int3 std icebp (bad) jp rex.RX xchg and xor cmpsb movabs jmpq or (bad) in mov out jle (bad) test push movsb insl repnz or or (bad) rcl stc rex.WXB lods xor outsl sub xlat (bad) cmp fmuls shlb repz cmp test (bad) xor popfq sarb mov (bad) rex.XB jle out cmpsl movl outsb (bad) sahf xor pop ds lea sub xor cmp (bad) cmc in xor icebp rex.RX cmp or push outsb xchg clc test sbb cltd and or callq (bad) insb rex.B cmp (bad) imul mov (bad) loope and loope rorl cmp loope out xor cmp sbb sahf mov (bad) sahf mov pushq retq sbb cmc mov (bad) fisttp push rcrl addr32 cmpsl js (bad) fistpll mov fisttp fcomip (bad) decl jge lea in jae xor cmp in xlat rex.R (bad) retq and pop and or cwtl clc icebp insb repnz in insl add pop mov jp cmpsb shrl sbb sbb jg push (bad) in in push fsub rex.WRB pop push (bad) xor adc pop je std (bad) rex.W icebp cmpsl nop (bad) (bad) xchg rex.B rorb (bad) adc lods cmpsb inc push xlat jno rex.R rex.R scas cwtl movsl sub fst mov jle test (bad) gs pop jrcxz sbb and mov outsl xor or fs mov rcll xchg mov movsb (bad) mov incb cmp fldt flds (bad) iret (bad) sub movsl lea jae pop js rex.WRX push mov mov (bad) xchg lods sbb gs cmpsb insl rex.WRB (bad) (bad) mov pop mov jl mov loopne push add (bad) rorb fadds cmc repnz enterq sbb movabs (bad) mov movabs ficomp and add (bad) jo in or callq lock lods mov (bad) sbbl sbb pop (bad) (bad) sbb (bad) and mov (bad) repz and mov pop adc shrl loop add movabs retq in sbb jle (bad) mulb clc mov jno,pn leaveq jnp mov movsb test insb or and out mov cltd and (bad) (bad) add jrcxz rex.WRB jle clc ds rex.XB ror rex.WRXB (bad) mov (bad) fist std rorl (bad) (bad) icebp pushq lods jae test lock pop nop loop xchg roll xchg idiv rex.WXB push (bad) loop repnz (bad) mov sahf addr32 movabs pop out (bad) int3 (bad) xor mov lods rex.WRB mov hlt jnp or loop rcl xchg add xchg rex.WX rcrb movsb out jg popfq cmpsl pop insb js jrcxz xchg cltd jle push (bad) fbld lret movslq jl cmpsb and fldcw push xchg cs enterq (bad) jmpq jo xor fcmovb cli xorl int3 lret cmpsl rex rex.WX fstpt sub xorl rcrb xlat cmp mov push xor mov (bad) cld in push movabs (bad) jp,pt scas int xchg and cmpsb rcll adc mov jle fs loopne mov stos sbb cmpsb mov es rex.XB jae jg leaveq movabs enterq outsl and (bad) fdiv and lods callq (bad) loopne loope data16 xchg sti (bad) rcll movabs (bad) cltd clc retq sbb (bad) loopne mov stos loopne adc mov (bad) push jl (bad) xchg rcr jno (bad) movsb pop out sbb test or outsb mov movabs rex.WRXB jmpq cmpsb mov and sbb scas lock mov (bad) (bad) test rex.WRX cmp (bad) rex.WXB es int3 rex.X sub rex.WX subb loopne jl (bad) imul gs sbbb rex.WXB rex.RXB loopne sbb jl fistpl loopne mov or cmp movabs int3 jnp mov movslq jg lret rep andb ss pushq (bad) popfq push jmpq in xor or int rclb callq mov xchg loopne xchg int lret jmpq rex.WR rex.WX and je repnz push adc (bad) mov (bad) loopne rex.WB jmpq jmpq loop rex.WRB mov cmp lret and adc rex.XB xor push pushq jae clc rcrl loopne jrcxz cmpsl mov add rex.WXB push mov loope jbe popfq rex.WRB icebp mull loopne adc adc rcl (bad) in xor pop push lret test loopne lods cmpsb sbb adc (bad) jne mov (bad) push subb xor cmpsl adc clc (bad) cmp outsl lret loopne (bad) rex.WR mov adc (bad) lods xchg rex.W (bad) push movabs sub pushq (bad) sub (bad) and hlt cli fcomps movabs rolb stos fldcw xlat (bad) loopne fbld (bad) loopne push pop js cmp xor test fsubrl mov movsl mov add movabs rex adc (bad) retq pushq push add in in jo cmpsl (bad) fcoml xor xor (bad) incl mov (bad) rex.WB insl xchg enterq (bad) lret mov gs jbe pop loope shll movslq (bad) retq lods or push xlat cli movabs mov fdivl ficoml movslq sub in adc mov mov push lahf xchg adc (bad) repz cmpsb in rex.WX add mov je iret jnp (bad) sbb push (bad) (bad) mov std loop mov cmc in jo out mov (bad) pop es lret rex.WX repnz (bad) or lea icebp sub mov shll lret leaveq mov test jge (bad) or loopne cmc xchg and movsl adc mov jg adc push repnz jmpq pop cmp jne mov push mov loopne mov test rex.WRX movsb cwtl or (bad) movslq int3 rex.RB sbb lret nop add scas stos and inc outsb lahf jmpq (bad) (bad) (bad) sahf sar rex in invd mov loopne mov test stos mov mov rex.WR out repnz fisub orl xor out (bad) ja jmpq and cs test sub repnz sbb (bad) pushfq loopne adc fadd jge fiaddl and mov in mov (bad) cmc jb add loopne add popfq pop add add je mov retq outsl pop sbb (bad) movslq push (bad) xor data16 loopne movabs int3 mov fistl loopne sbb movsb (bad) icebp movslq (bad) or loopne sbb jge (bad) rclb rex.WB shl mov adc mov mov add loopne sub outsb rex.W nop xchg hlt (bad) insl test loopne jle cmp mov adc and pushq rex.WRB sahf mov pop (bad) cmp pop icebp loopne shrl cmp xchg loop or pop xor js pushfq hlt mov mov rclb leaveq adc fwait add cli jg gs cmp add mov (bad) sub (bad) rorb xchg adc xorl in rex.W rex.X xor mov rex.XB ss (bad) push rex.WR mov nop xchg add loopne movsb repz scas jnp (bad) cld loopne out (bad) (bad) pushq mov or sub (bad) out je stc (bad) int3 mov add loop loopne xchg mov lea rex adc rex.RXB or push iret loope lret adc movabs xor (bad) (bad) mov movl xorb and rorb (bad) push (bad) callq pop loopne icebp shlb adc pop iret mov es sub sub movabs add int3 lods cmp xchg sub (bad) loop (bad) pop rex.WX (bad) (bad) (bad) in pop ss xchg sti int3 jmp lcall (bad) jle add mov enterq sbb and in sbb fs cmp in enterq xor cs (bad) and out mov sbb lods loop addr32 (bad) rcll in and jl jo push (bad) mov push insb cmpl int rol (bad) sbb incb jns andb vmaxps cmpsb adc popfq rex.WXB mul cmp movslq cmp loope jl (bad) jl movabs cmp icebp movslq cmp fmuls loop mov je mov addr32 cmc jp in xchg sbb es cmpsb andl (bad) and lret jo ljmp cmp insb movabs pop rex.RXB or pop mov shr sbb jg cmp xor xchg imul shll (bad) sbbb rex.R sar cmc int3 in icebp jns mov xor loopne sub subl mov (bad) callq movabs xlat (bad) rex.WXB rex.XB xchg ss (bad) cmpsl (bad) or (bad) (bad) repnz cmp sar (bad) addr32 sahf jmpq pop xor mov sarl jrcxz and jge fmuls push fs incl add mov (bad) fwait insl lret ja movsl cmp loopne push cmp sbb movabs xlat (bad) lahf rex.RB clc push (bad) rex.WR lock scas lahf and (bad) fwait stc scas loopne movabs add sbb lret jmpq pushfq xor or iret pop xor std or mov stos rex.B cmp adc (bad) rex.WRXB rex.RX fs add (bad) pop or jo and repz sbb pop sbb jg add pop or sub sub jb xchg xchg rex.WX rex.WRXB xor mov rex.WRXB push xlat add adc movsl leaveq rex.WRX fbld out pop test sub (bad) or xor in and mov sub loopne movslq push push sub xchg loopne repz pushq mov (bad) out (bad) loop xchg push cld (bad) enterq loope sbb or jmpq jbe mov rcr mov icebp ficom int3 (bad) mov xchg sbbb loopne stos rex.W jmpq retq fwait sti sbb xlat or (bad) (bad) pop test fadds decl (bad) in xchg test repnz sbb movabs movabs pop test lea (bad) pushq (bad) add jnp fucom shll xchg and loope rep (bad) loopne mov (bad) cmp and pop jo in (bad) (bad) adc adc jge sub cld (bad) ss loopne out add in xchg rex.RB cld sar loopne vrcpss out xor loopne rex.R idiv movsb sub cmpsl movabs repz int3 pop mov loopne rex.WX (bad) and or mov cmp jrcxz and add rex.RX add movsb loopne (bad) iret cwtl rex sahf movabs out enterq add or mov movabs mov or outsb mov test sub pushq xor mov es (bad) jne rex.WR mov clc (bad) or fnop rex.WB repnz jle sub subl stc rex es mov and pop jo loopne outsl and lret add pop enterq loopne xchg cld mov xchg sbb out xor jne (bad) (bad) jl (bad) xchg movsl movslq out mov pop je and adcl out sub loopne (bad) jmpq rcr fldl insl cmp icebp pop jmp movabs loopne (bad) sub test and mov sbb (bad) jnp mov movsl (bad) mov (bad) sti jp rex.WRB leaveq mov loopne and cmpsb or or cld out adc lret (bad) or loopne jle fnstcw rex.WR and jmp push cmp xchg loopne rex.WXB sbb movd loopne ja pushq (bad) mov xchg cmpsb (bad) int loopne (bad) (bad) sbb push (bad) vsqrtps xor adc xchg adcb xchg sarl sbbb adc lods nop mov mov rex.W jle (bad) stc add test add out or retq movslq mov leaveq callq or (bad) (bad) add push rex.RXB rex.WX or mov imul (bad) push pop mov sbb movabs rex.W (bad) adc in mov (bad) (bad) jrcxz adc test fcom flds adc (bad) shrl or push (bad) sub scas and xchg cmp (bad) repz sub cmc sub xchg xchg in or cmpsb push enterq adc lret ja mov outsb mov ljmp (bad) lea and lret hlt jns lret xchg or je cmc cmp push shrb (bad) stos xchg (bad) jo gs lret jp outsl loopne ss imul mov js xchg out (bad) movabs in rolb in bsr mov xchg xor jns jns add (bad) pop rex.W jnp jg push rex.WRX or sub (bad) popfq outsb (bad) lock adc rex.WX pop sub mov enterq (bad) (bad) (bad) or sbb test pop xchg sbb add sti loopne (bad) rex.WR (bad) ja sbb notl mov (bad) loopne (bad) (bad) pushq out (bad) xchg ds loopne lret sbbl pop push adc xchg (bad) loopne movabs repz cmp sub jrcxz rex.RX out (bad) and rol jmpq push jo test (bad) pushq xor (bad) add rex.WRXB rex.RX (bad) (bad) pushfw pushq (bad) or cld movabs jmp loopne mov xchg rex.X loopne (bad) push jge cmc jno loopne imull add push stc cmpsl xchg (bad) loopne cli stos insl lret cmp imul fldcw mov rcrb xchg mov outsl setl add mov (bad) sbb in rex lret pushq mov lock or pop (bad) or adc pop pushq clc cmp fcmove movsb sbb jl and movsl test cwtl push or and scas add movabs data16 (bad) repnz gs xor and add dec mov (bad) repnz add mov (bad) clc (bad) push (bad) repz retq xor adc loopne pushq push rex.X adc loopne jrcxz test sbb shl retq xlat mov (bad) lret xchg jbe addl jmpq jns cmp pop loopne cmp rex.RX adc loopne (bad) lods insl or leaveq (bad) scas sbb pop and (bad) xor loopne fwait rex.XB pop jbe out lods (bad) pop movabs jl mov or fs adc add shrb outsl mov and movabs pop rex.WRX repnz pop enterq rex.B xchg cmc jle pushfq jae adc (bad) fnop scas pop pushfq rex.B retq and clc rex.W fs vpsrlw push jns not rex.WR (bad) lret jmp jle icebp mov movslq pop addr32 or (bad) ja mov mov repnz xor pop test mov cs pop loopne mov add loopne retq divl jbe xlat pop and jmpq xchg mov loope xor (bad) xchg loopne mulb add xor jp mov or insb lea push sbb sbb (bad) xchg add stc (bad) xlat repnz rex.XB insb (bad) sbb dec (bad) cmc fwait out in add loopne,pt xor xchg mov sbb stos lret movabs sbb mov rex.WRB insl (bad) rorl add (bad) (bad) (bad) (bad) fucomi (bad) rex.XB cmp jl out movslq (bad) loopne leaveq insb add lods (bad) repnz sti es test or fstps popfq scas stos mov (bad) pop lcall imul (bad) movsb cmpsl out (bad) jmpq rex.RX pop jp adc fs retq cld test mov mov sti sub sub in jg and (bad) xchg jae sbb add xchg in loopne (bad) push frstor (bad) rex.WX sbb rclb lahf push mov (bad) push (bad) clc rex.WXB loopne (bad) fcoms mov jmpq xor xor rex.RXB and sub (bad) in hlt xchg mov in enterq pop loopne cmp outsb loopne scas rex.WR std sbb loopne mov sahf retq loopne (bad) cmp adc mov loopne and outsb (bad) (bad) (bad) pushq sti subl rex.WRB (bad) fbstp movabs js (bad) xor (bad) jno int3 adc sub movabs jae sub jge mov pop xchg (bad) xchg out adc loop loopne mov lret sbb movabs (bad) cmp cltd adc rdtsc es mov mov fildl jne (bad) in adc insb ds jo test cwtl (bad) loopne loope int enterq lea pop std jmpq loopne xor lss or je rolb rex.XB pop rex.WX (bad) jl mov add or sub (bad) rex.WRB sbb rex.RB xchg jle cmp rex.WX lods (bad) std jg scas push cmp addr32 mov fwait stos lahf adc xchg cld retq xor xor icebp and push (bad) jb rex.W rex.R mov jl cld dec repz outsb (bad) cltd in data16 jns push and jbe hlt cmc gs sub xchg sbb scas js rcl push leaveq repnz sbb icebp lock fucomp gs leaveq xor rcrl pushq mul (bad) mov (bad) rex.RXB loopne mov jb jrcxz,pn jmpq movabs (bad) lock (bad) adc loopne (bad) rex.WRB mov xchg loopne jbe loope (bad) mov sub xlat adc fsubl rex.WXB and addr32 jae loopne iret cltd lret fidiv mov insb ja rex.WXB je cmp mov (bad) adc cs in fidiv loopne adc xor sbb (bad) pop jmpq pushfq mov jmpq adcb xchg movabs adc test (bad) mov xchg rex.WB (bad) jmpq rex rex fs repz decl rex.XB xor test retq sub (bad) cwtl fcmovb jbe loopne and lods test fs sub out (bad) xor rcr loopne imul loop jno movabs jo and sbb loopne (bad) and int out xor movsw adc imul add jns or sbb pop test test in jo xchg mov lods adc gs popq loopne loop testb sbb or nop (bad) loopne sub rex.RX movsl or in jg fstp mov or adcb ja mov rex.X (bad) jnp and xor roll mov sbb pop (bad) stc movabs sar fbld out xchg pushq jno sbb xchg push loopne cmpsl pop ja out je (bad) jmpq cmp divb loopne leaveq rex.WXB (bad) fs pop cmp std pop loopne mov scas (bad) fwait (bad) adc jo or rex.B rex.WRXB push mov xchg and sti addr32 incb retq js icebp sbb fiaddl movsl (bad) cs add sbb faddl cmp xchg int3 insb lods (bad) cli xchg rex.WX jl sub mov es loopne movabs ficoml (bad) shl test (bad) sbb movsb jmp ror movabs mov pop cld movsl add loopne mov in push pop out fisttp loopne add (bad) cs jno adc mov jmp push adc push stos enterq cmp mov and loopne test rex.W (bad) sub shl xchg notl rex.XB rex.WX (bad) adc add rex.WRB fdiv (bad) rex.RXB cs mov xchg lret loop xor clc mov leaveq xor loopne (bad) cs (bad) (bad) (bad) jmpq (bad) (bad) cmovno cmp mov jmpq loopne jb rex.W (bad) (bad) pushq mov sub (bad) mov sub pop (bad) xchg fsub xorl jmp in push out lret (bad) push cmp movabs mov adcl mov icebp cli fs pop mov je rcr (bad) sbb mov jl rex.WRB movsl adc fucom pop scas xchg (bad) mov (bad) mov xor mov cmp (bad) rex.WX outsb rcll rex.RB addr32 loopne jb and xchg (bad) and adc loopne stos (bad) rex.RB rex.R sbb shrb (bad) adc retq in rex.WX rex.RB retq loopne (bad) sbb cmp mov cmpsl add rex.WRXB in cmp (bad) mov rcll (bad) jno lods loopne mov rcrl xchg std (bad) (bad) pushq add data16 mov test notb rex.XB jo push scas pushq (bad) fldln2 xor in pop (bad) loopne (bad) push in cld cmc mov jmpq (bad) lock jae loop or fs adc hlt and stc rex.WXB pop sbb je (bad) cli (bad) repz xchg xchg mov jg out nop loopne cmp xchg (bad) (bad) jp xor mov push cmp and jle xor rex.WR rex.XB (bad) (bad) in nop (bad) mov or xor rex.WRX imul mov xchg mov push (bad) gs movsb jnp insb cmp loopne (bad) pop or test fneni(8087 adc rex.RXB cli ffreep (bad) mov es insl ja out mov repz leaveq jbe (bad) cmp push xchg fwait mov stc rex.RX decb add (bad) xchg out outsl jrcxz,pt pop (bad) jno cmc xor push movsb fisubl (bad) cmc es (bad) std mov out (bad) xchg sbb xchg rex (bad) pushfq repz adc int pop push lret or lods xchg enterq adc rex.W xor add std popq (bad) jo loope insb cld xchg loopne cmp pop loopne (bad) push or in pop add (bad) (bad) pushq movabs stos add movabs int3 rorb (bad) (bad) lock jbe (bad) (bad) ds rex.W mul out leaveq (bad) xchg fistp in or jo incb movabs (bad) xchg jle repz xlat jrcxz (bad) stc jne loopne sbb adc lahf hlt (bad) (bad) sbb outsl sub mov rex.WXB lea lock (bad) (bad) out and sub mov mov (bad) xlat callq (bad) rex rex.R rex.RB loopne rex.R (bad) mov xchg cmp out loopne and (bad) rex.WXB cmc or (bad) in sbb adc idiv or (bad) xlat in (bad) loopne pop out sbb int3 ja add adc jbe jne in (bad) rex.WRX int fucomp push insb lahf test and cmpsb in mov clc mov push add (bad) rorl mov (bad) (bad) (bad) push and xchg or (bad) paddsw pop loopne sub (bad) and lock pop std (bad) loopne jmpq xorl test push jae movsb and iret shll xchg mov xor jnp (bad) rex.R mov cs mov fadds shll jle callq in mov (bad) mov mov lahf xchg loopne and cli rorb (bad) loopne sbb loopne or mov mov idivb push repnz mov (bad) jmp mov (bad) xchg notb (bad) push (bad) loopne cmp sbb rex.W movsl pop (bad) xchg fwait jnp loopne cmp cmp rex.B andl in or jnp nop faddl stos (bad) xor mov loopne cmp fs test xchg push jrcxz cli xchg (bad) xor mov mov (bad) (bad) add movabs jns flds cltd cmp (bad) loopne xlat mov mov cmp push push loopne (bad) (bad) mov and (bad) movabs andb fstpt loop (bad) pop sub rex.WRB sar pushq loopne mov imul cmp loopne sub pop lahf movabs cs loopne jb outsl sub jo loopne pop (bad) xor fwait imul mov test shlb or js std and or cmp push xchg retq lock jrcxz sbb sub loopne adcl xor (bad) jrcxz or jmpq repz push fcmovb ficompl scas iret jge repnz pop adc in sub cli (bad) insb subb stc push cld cwtl mov jmp xor loopne jbe out mov jne loopne rex.W repz (bad) rex.WX adc jge in test xchg push and sbb stc xchg mov int3 loop rex.B icebp ficom mov outsb (bad) cmp rex.WRX callq add (bad) movabs (bad) out cmpsl rex.WR pop cmp movabs xchg iret jmpq rex.WR xor lcall outsl lods rclb mov mul and jmp scas push insb rcrl add add (bad) cli in xor xchg add mov movslq icebp (bad) pop pop cwtl or mov nop (bad) mov pop xchg xchg sbb test movabs fstpl jle cld movabs in adc data16 jl (bad) adc pop int3 (bad) lret enterq (bad) or sub cmp andl callq stos loopne test push je (bad) enterq mov xchg (bad) rex.RB (bad) callq cmp pop or mov loopne cmc jnp xor movabs cmpsl cmpsb adc mov pop xchg sub mov (bad) and lods pushfq mov stos loopne rex.WRB cmp xor sbb (bad) jl add sbb jo (bad) cli pop outsb loopne rex.B jbe icebp lret ficomp cltd (bad) cli or jg es std out stos cmp (bad) rex.XB mov (bad) add (bad) jmpq adc int and loope sbb jmpq cmp fnop leaveq bnd movabs adc sub insb rex.XB xor nop retq (bad) test rex.W mov add adc xchg xlat mov sub mov mov cmpsl pop mov neg mov loop (bad) rex.WRX ds in rex.WRXB jg rclb in movabs mov test rex.WB push loopne or sti iret test movsl loopne stos lea in sbb loopne rex.WX mov cmp vpsrad or rex.RX mov mov xor or loopne cmpsb fimull sti (bad) or (bad) movabs jnp pop rex.WX rex.WRX loopne push rex.RX loopne pop jne cmpl fdiv sbb movabs (bad) retq pushq (bad) loopne shll rex.X stos shr cmp enterq test (bad) sub sbb movabs lret add subb fwait lock (bad) (bad) outsl in push loopne sbb or xchg std callq mov stos mov outsb lods (bad) jns loopne popfq lahf negb callq nop rex.B push leaveq movsl (bad) pushq fistl scas xorb sbb mov insb decl jb sbb pop (bad) fwait loopne xor rex.WX lock mov (bad) fs or scas cmpsl (bad) sbb sbb es or xor ds and or in loop cmp jle (bad) (bad) mov mov mov fisubrl rex.WRX mov cmp test (bad) xor jmpq xchg adc mul cli pushfq sahf and rex.WX repz mov (bad) mov mov sbb add popfq xchg fbstp mov push int mov std leaveq cmp lea cmpsl sbb in (bad) movsb add adc orb jg or cmp jp sbb movabs (bad) shrl pop xor out pop sub xor mov mov in insl add jo sbb enterq in mov sub test (bad) fmull and lods or stc cmp (bad) jp xchg in sub rex gs fdivrs rex.WXB jl movsl mov and loopne fwait rex.RXB loopne mov xchg xor mov loopne addr32 (bad) (bad) pop or and loopne testl loopne xchg ficoml loopne rex.WX loopne sti icebp (bad) negl (bad) fdivs shl mov mov xlat push movslq sar movabs (bad) push jo xchg sbb loopne adc xchg adc loopne loope movabs pop leaveq iret movabs mov sub sbb (bad) lods (bad) mov movabs lret repz jmpq jne movslq loopne mov xchg mov and pushq (bad) mov data16 popq vmovhps fist insl fsubrl nop (bad) loopne jns insb (bad) movsb dec test jb or and sbb xchg and pop js leaveq stos (bad) (bad) rex.WRXB rex.W pop xchg and push rex.X pop cmp jmp pop rex.R and fsub rex.WB mov sti (bad) hlt (bad) movabs xchg out xchg or data16 cli add fist rex.B fnop callq mov addr32 adc xchg (bad) (bad) out jl loopne callq xchg cld mov test (bad) loopne insb and cld outsb movslq and or xor mov add add cmpsl mov (bad) (bad) and pushq cmpsb fwait add sbb push je repnz ss in xchg (bad) imul enterq mov push shrl jmpq movsl stc rex.WX xor push (bad) scas (bad) xlat pop ss fucomi jns leaveq pop (bad) loopne outsl mov mov lods test and shrb (bad) xor in lock cli (bad) rex.WRB cmp rex.WX popfq (bad) jg (bad) pop loopne insb and sbb fstpl sbb sbb movabs (bad) stc adc movabs lret jp fcomps mov xlat rex.RB xchg sbb leaveq (bad) or (bad) xor rex.WRXB jo (bad) lock add rex.WRXB repnz or mov cmp sbb (bad) xor cmpsb loopne (bad) and hlt movsb pop flds xchg out iret loopne ds sbb or loopne out mov cmp mov push lahf sub (bad) gs fist loopne (bad) test lea xor insl retq jp jge imul pop adc or sbb add in lods repnz cmp scas sub notb loopne (bad) xor sub mov loopne loope mov mov loopne jno xor fisub (bad) xchg adc (bad) movslq in or addr32 loopne leaveq gs es add mov rex.W xchg fstpt (bad) js rcll lea sbb test callq jns (bad) jg loopne rol rex.WRX xlat (bad) ds scas andb subb icebp mov mov pop rex.WRX loopne mov adc ss rex.WB (bad) loopne icebp cmc sbb ror fdivr je push movsb cmp add sbb in xchg mov mov scas mov and (bad) add hlt pushq cmp (bad) movabs loopne fs sbb (bad) push xlat jo mov mov sub (bad) or pop jnp or mov add lret (bad) lret stos (bad) cli cltd (bad) xor nop mov adc pop cmp xor imul loope mov (bad) adc repz sub add movabs xchg orl jmpq adc mov cld xor or (bad) or (bad) (bad) (bad) rex.WB xlat pushq adc movsl pop and mov and in cld pushq (bad) rex.WX movabs rex.R rex.WRXB xor rex.W in sbb hlt clc xchg cmp rex.WRXB cld jo retq (bad) movabs cmp add movsb outsb rex.WRX (bad) (bad) (bad) xchg mov (bad) mov xchg stos cs je or sbb add mov or (bad) pop mov pop or rex.WB rex.RX movsl xchg sbb loopne stos mov fwait add (bad) mov jns test mov std rex.WRXB push leaveq lahf out (bad) (bad) movabs or pushq rex sub fmuls push int jbe out std fs out (bad) rex.WXB lods xchg and rex.RX rex.WRB scas pop jl fadd (bad) loopne xchg (bad) std pushq add jg cmp (bad) loopne nop pushq rcrl mov loopne (bad) in fidiv je push sbb rorb in xor mov xchg repnz movabs fcmovne out test jae (bad) fs rex.RX loopne clc scas mov orb loopne rcl add (bad) and movabs xor js mov (bad) (bad) add (bad) repz jae cmp lret out cwtl rex.XB or rex.WXB rcrb pop loopne jl out (bad) mov cli sarb movsl out rex.WR scas (bad) or (bad) xor outsl callq ja mov loopne in jmpq push popfq xor popfq (bad) decl push rex.RXB adc negl mov jmp (bad) mov lods jrcxz enterq and outsl loope loopne repz xchg in pop (bad) imul jg rolb stos icebp jmpq loopne and mov jmpq rex.WR outsb stc imul loopne fstpt xor jle jns test push testb (bad) loopne movabs cld push xor divb mov (bad) cmp sub lods sbb xor in icebp xor add jp std sbb pushfq mov pop movabs rolb add (bad) enterq repz (bad) je or adc (bad) push sbb jl out adc add jrcxz mov rex.WRB loopne xchg mov or imul in andl and fwait dec cmp rex.B sbb subb (bad) es push cmp adc push jg out jns (bad) (bad) cmc xchg loopne mov rol jle jns jo (bad) xor xchg (bad) lret shr loop (bad) mov rex.XB add test pop scas mov add in fmul jbe movabs cmpsb cmp sub adc in jne insl rex.WB ds pop mov icebp loopne mov pop out (bad) mov and loopne mov gs cmpsb add push fs mov adc cld retq jmp fwait shrb adc (bad) loope test cmove pop add sbb je ja pushq nop (bad) and scas movabs lret idivl or fs (bad) (bad) cld xchg out loopne jle (bad) mov rex.XB sub movsl (bad) loopne mov pop cmp (bad) out add lock in lret adc push rex.WXB xor scas decb sbb (bad) lods icebp sub (bad) out add sbbl lahf pushfq (bad) xor loopne mov test jrcxz loopne sbb in mov add fnstcw out hlt je and or loopne out rex.X push add jbe (bad) outsb or retq mov loopne repnz xor outsl adc (bad) std pop (bad) lret cmp push sub add rex.RXB sbb or loopne xchg jae or cmpsb retq mov jmpq movabs add test pop sbb xchg mov fdivr (bad) roll lock cmp imul (bad) mov (bad) xchg (bad) cli (bad) rex.WR addr32 loopne mov pushfq movsb loopne mov retq rex.WX xor xchg iret in andb loopne (bad) (bad) and loopne jge rex lods cmpsl lock cmpsb mov int (bad) movabs sbb leaveq xor lods fneni(8087 cmpsb incl test stc lock rex.XB (bad) fnsave ss sti cmp rcrb sub mov iret loopne sbb rex.WRX or in adc push or xor pop cmp (bad) insl out (bad) sbb (bad) xchg add loopne (bad) xor cwtl (bad) cmpb retq imul scas (bad) mov (bad) xor fisubl fsub repnz rex.B fsubl mov rex.RX pop jp fwait xor leaveq or ja rex.RXB (bad) xor sarb add (bad) cmp and adc fwait stc addq add and and push cwtl jnp mov xorl in (bad) mov cmc adc rcrl cmpsl (bad) and in nop rex.WRX push xor pop scas (bad) (bad) sub jmpq cld nop mov or (bad) cmp mov or stos int rex.R sbb out xchg fisub sbb push (bad) or orb sub loopne or in loopne push add in (bad) mov hlt fs shrb out mov rcrl jo loopne outsl push cmp outsb jno loopne mov xor in out cmp cmp or int3 sbb and je movabs (bad) rex.WR fs (bad) and rcl nop add cli (bad) or ds movsl (bad) (bad) (bad) in imul nop jns leaveq adc (bad) movabs lret jrcxz rex.WB (bad) in pop in pop js rol rcr (bad) xor sub fsubs sbb movslq pushq xor lock notl jl xchg ror or (bad) lret and and fdiv sub rex.W push sbb and sbb sub (bad) mov push mov (bad) in rex.XB (bad) push sti loop lahf (bad) adcl (bad) fbstp out fs (bad) rex.R (bad) pop stc jmpq sbb movabs out (bad) addl rcll lea test (bad) cmp sarl rclb or sbb js addr32 (bad) sub (bad) mov and loopne int3 jge repz (bad) (bad) (bad) jl outsb jrcxz pushq pop mov stos sarb xchg jo cs loopne jne rex.WX xor loopne stc xor movabs pushfq rex.WRX in jp lret loopne (bad) (bad) rex.WX es xchg cmpl xor (bad) ja xchg mov push ss test rex.WB mov cmpsl (bad) retq outsb shl jns fwait insl mov or (bad) pushfq int fcompl movslq (bad) jrcxz mov mov clc sub push xlat sbb loopne pop mov rex.WRX in (bad) adc (bad) leaveq mov and clc rex.WX movabs cmp pushq pushq rclb mov xchg or loopne pop cmp lock test add (bad) ficom addr32 shl flds loopne (bad) push adc out rex.WX rex.WR in sbb mov cld jbe sbbl fsubs jp sbb in fisubrl retq loopne loope xchg sub sbb (bad) int js sub xchg xor sub callq loopne sub je loopne or fdivrl scas sar loopne rex.WXB push loopne cmp pop ds in sbb or or in shrl sbb pop lods fwait (bad) loopne rex.RB cmp adc test mov add add (bad) popfq xor lods (bad) xchg (bad) and (bad) retq ds jg enterq mov xchg jp lock mov (bad) test and mov sarl adc rex.B fcmove (bad) scas (bad) stc and fs movabs cli and and xchg movabs in xchg (bad) loopne fmull sub rcl shlb mov (bad) lock cmp pushq pushfq and movabs movabs sbb mov or (bad) (bad) shr lret callq (bad) (bad) mov (bad) insl jrcxz jae loopne pop sbb add pop cltd jb enterq mov clc rex.RB mov jg jno xor (bad) movsl push loopne mov xchg stc (bad) adc (bad) sahf loopne movsl jrcxz movslq push (bad) rex.X loop adc lret cmp cmpsl sub outsl out loopne jmpq flds add loopne xchg cwtl addr32 (bad) jns push in cmp cld fnsave push add iret (bad) in leaveq (bad) loopne lods xchg rep xchg (bad) xchg loopne data16 or xchg xchg sbb push mov mov movabs cmp jl (bad) push add mov or minps fs in shrl xchg mov mov xor cltd jmpq retq shl and int3 push fisttpl movsb loopne jo sbbl mov (bad) pop in mov rcrb stc lret test loope mov cs sub xor in sbb in retq add jrcxz retq rex.WRXB (bad) xor push loopne cltd cmp or pop adc imul mov (bad) xor out sbb cld ja (bad) pushfq outsb push loop (bad) jmpq and mov movb or fadd adc rex.RXB (bad) lods sbb adc push repnz rcrl outsb (bad) movsb (bad) xchg sbb pushfq xchg sbb and add (bad) movabs fcmovbe (bad) fild rex.WR fadd rex.X pushq divl (bad) loopne rex.WRXB jge xor in push (bad) rex.WXB loop lock loopne (bad) movabs stos jl movabs mov push pavgb (bad) xchg xchg loopne insl fcoml mov mov (bad) mov stos mov pushq insb fsubr rex.WRXB cmc push xchg nop in loopne mov cld jae movabs cs sub sahf (bad) int3 xchg nop jne adc je or mov ds (bad) loopne (bad) sbb xor pop movabs adc (bad) jnp movslq (bad) sub pop and loopne push rclb loopne movslq in fcmove xorl or stc pushq rcrl pushfq cltd fcmovnu out in imul stos rcr xchg hlt in cli (bad) shlb rcrl ja jg pop loopne cmp xchg scas jno xor rex.WRXB rex.WRX (bad) lahf (bad) decl cwtl lods jae (bad) movabs mov jne add jmpq loope xchg (bad) test and jmpq rcrb popfq rex.WRB add out cmp loopne (bad) (bad) sbb sar loopne (bad) pushq (bad) cmp cltd cmpsb lret lahf lea insl fldenv or stos and addr32 std (bad) clc (bad) insb jle cwtl rex.WXB mov loop cli (bad) icebp cs sub mov jno sbb jmp loopne rex.WB repz mov sarl not (bad) rex.WX outsl hlt fnstsw fiaddl rex.B (bad) notl add sahf rex.WXB loopne callq xchg or and andb pushq mov loopne jns mov or loopne (bad) xchg sub or xor cmpsl cs movsb enterq cmp mov mov (bad) out ficompl xchg sbb (bad) loopne push cmp pop fcomps (bad) lods or pushq icebp loopne cmc outsl movabs loopne lea ss (bad) loop repz lods (bad) lods outsb rex.WB rex.XB pushq loope fchs lods sbb insb xchg (bad) in fnop jmpq outsl loopne xor cmpsb (bad) clc jrcxz loopne rex.WRB adc cmpsl (bad) in out sti and mov mov movsl clc out xchg rex.X hlt push xlat adc rex.RX in lock rcrl cwtl mov es gs sti cld jne or mov cmc cmp addr32 sti rex.WRXB test push (bad) int3 adc push in nop sti xor rol iret out mov jo mov pop and push fstl sbb jmpq mov xlat (bad) cmp in xchg ss add rex.WXB (bad) xor rex.B enterq sub rex.WR and push rex.X jmpq and (bad) push jae or cli and sub (bad) nop adc insb sbb loopne rolb in (bad) inc pop cld out rex.RX adc (bad) xor retq iret rex.WRB add (bad) cmp (bad) orb and test movabs jmp rcll xchg mov (bad) (bad) push jle (bad) or adc mov outsb or (bad) push or out (bad) or or (bad) movabs cmp adc and cmp mov pop scas outsb xchg retq (bad) fisub leaveq xchg push gs sub stos jmpq fnstenv and stos shld loope addr32 shrb stos jmp (bad) push in enterq sarb scas mov add fmulp (bad) push sarb int3 and rex.RB mov rex.RXB fs sbb imul adc xorl xchg (bad) lret mov jp jrcxz in ss fild (bad) retq cwtl cmp mov adc shr pop insl jge xchg and sti hlt (bad) test jle addr32 jae rex.WR ss push pop add test iret or andb rex.B int sbb hlt out mov sbb jrcxz sbb (bad) jle (bad) cmp (bad) imul fcmovnb in stos adc jge,pn insl jmpq test mov push jp out sub jle cmp adc int3 sbb enterq rolb sbb (bad) es outsb (bad) and push sar callq adc fs pop pop mov sbb xchg (bad) mov in cmp imul jrcxz stc mov and sub icebp insl sbb incl loopne repz outsb cltd cmpsl or mov fist js (bad) mov mov mov pop loopne xchg pushq test cltd (bad) movsl out or fsubrs sbb adc push jg mov (bad) or mov fist shrb scas pop gs pop jmpq xchg mov loopne (bad) jge sub cmc loopne movsb (bad) jmp sbb or jrcxz fstps sub (bad) pop cli mov pop movabs sub mov cs cmpsl pop int3 jmpq xor cld std mov cs cmp cld pop js (bad) mov pushq xchg pushq rex.WXB (bad) fmul xor in jge jbe mov jrcxz push mov add jmpq or lret or (bad) push add (bad) xor movabs lea ja test int (bad) sbb stc nop lret cmp mov (bad) div outsb popfq fs (bad) (bad) and movabs es (bad) jge loopne bnd sbb int3 fsub int push fldt mov push movsl (bad) jne pop lods (bad) add cmp sbb mov outsl and incl (bad) jbe mov loopne xchg outsb fstps jnp xchg sbb (bad) shll retq cmp mov jmpq adc loopne mov sub cmp sbb push push loopne cmp stos (bad) (bad) push loopne lret test mov movsb xchg mov push rex.X (bad) adc jae fcomp pop adc fidivr and loop movabs rex.WR (bad) xchg mov notb (bad) fdiv or movl movsb push (bad) rex.XB xchg xchg movabs lock imul jne mov jbe repnz loopne lods jb (bad) jp add imul repz sub mov rex.RX fiadd (bad) xor jns (bad) jno gs sbb stc (bad) mov fmuls movabs leaveq loop icebp or icebp sub movabs add loop mov or loopne or loope push movsl repz (bad) rex.B mov mov and adc mov (bad) loopne xchg xchg fdivs jnp adc sub (bad) retq adc jl jo mov loopne sahf in jmp xchg out cmpsl (bad) sbb (bad) insl clc xchg pop rex.WRX in out jmpq mov jbe fcmovnbe adc andl add cmp loopne int3 push mov jns push loopne rex.W jnp adc pushq mov mov in loopne push loop movabs adc or insb mov fbstp orl fstl add cmp (bad) sti push je and enterq mov fldt cmpsl test jbe push cmp rorl and lods test lret (bad) fisttpll xor xchg mov add stc mov movabs jno js (bad) loop,pt xchg loopne xor out test int rex xor jae adc or scas jmpq sub xor loopne pop pop ss scas jo sbb mov push (bad) xor (bad) sbb in rex.R jl xchg int rex.W mov push movslq jmp test (bad) lods sahf or sbb ficomp rex.B scas out rex.RB lahf callq xchg mov cmp loopne pop (bad) pop mov mov add pop adcb loopne rex.XB jmp (bad) jb loopne xchg test or mov (bad) rex.B jb out cmp addr32 pushq vpcmpgtw sbb (bad) mov rex.WB mov out mov (bad) cmp loopne cmp fwait xchg rex.RX fistl add jrcxz sbb xor movslq (bad) (bad) push rex.WXB cmpsl or sbb add xor loopne out fs fnstcw outsb rolb loopne movsb (bad) and scas or xor out and out decl out cmpsb or mov or loopne push stc cmp (bad) and in (bad) sub fsub rex.WXB cmp movsb rex.WB outsb imul shll pop (bad) rex.WR ds (bad) movsb std loopl loopne fcompl lahf jnp test outsb (bad) mov add jns add cltd lret js and (bad) add mov callq pop and adc cmp stos fcompl repnz stc mul push jl (bad) and push rex.WRXB mov jl test push movabs xor (bad) fxam mov (bad) mov sti (bad) scas loopne popfq cmp jmpq jns rex.WXB cli (bad) sub mov cmp (bad) loopne (bad) (bad) js enterq loopne cmp sbb test jg fs (bad) mov sbb (bad) mov fdivl pop cwtl gs mov jb jns jp (bad) sub mov xchg icebp cltd xor add clc stc lods loopne and and shlb add jmpq out (bad) loopne icebp int and rex.WRXB pushfq (bad) jo and imul or jmpq mov xlat add add pushq jae cmp fidiv in or and mov callq (bad) loopne (bad) cltd (bad) sbb mov (bad) jl sub movabs insl retq sar cmpsb lahf fisttp jmpq test (bad) (bad) or pushfq in mov jne mov (bad) sub retq fwait and enterq std and or in (bad) xor movabs (bad) idiv loopne (bad) mov xor sbb xor mov xchg and jmpq and loopne sub fwait (bad) icebp push lret and sbb (bad) pushfq incl mov jp or xor mov adc rex.WRX out cli adc xchg pop lods in mov int adc cmp callq mov add jnp leaveq adc loopne pop add sub (bad) (bad) in sub xchg int data16 out sub loopne in mov xchg (bad) xchg test push adc jb shr outsl jmpq sbb xchg stos and and (bad) sbb sti jb loopne rex.WB cbtw nop push fsqrt (bad) push sbb ds jo sub (bad) xlat loopne xchg mov cmpsl (bad) xor rex.W pop outsb lods pop sbb in and fstps xchg stc movsl sbb push movabs movslq and loopne (bad) sarb loop or imul jl sub fdivrl imul loopne xchg out (bad) (bad) rex.WX sbb jle cmpsb loopne sti push xor mov (bad) fisttpl push in and enterq (bad) mov stos pop jo jle fdivs fsub (bad) cs fisub (bad) push mov or lods jp (bad) rex.WR mov repnz sbbl or iret movabs mov (bad) decb scas adc cltd shrb sub xor icebp insb rex.XB in mov xor pushfq lods rex.WX rex.RX mov pop (bad) (bad) jo in add imul cmp xor mov rolb lret scas push insl cltd (bad) in push callq in movabs sbb (bad) clc push scas mov (bad) orb mov (bad) adc (bad) packssdw (bad) or (bad) pushfq sub pushq cmp rex.WRX loop roll iret outsl xor cmp or pushq lret addb xor cmc loop adc jb fidivrl xchg sbb jg stos movsb xchg (bad) (bad) (bad) or shll loopne add jns mov xchg movslq jrcxz (bad) rex.X rex.WX or repnz adc sbb pop cmc test and cld xor jno cmp cmp xor rex.WR repnz lods mov fcompl jmpq sbb jmpq and loopne cmp xor fildl scas ror cmc or jbe std lret in cwtl (bad) loopne fyl2x xchg (bad) jb (bad) cmp leaveq shlb movabs ss rex.B jl xchg cmc in movsb std push movabs xchg jmpq xor and sti push ror jrcxz rex.WR xchg clc retq jmp (bad) popfq (bad) sti xlat pop (bad) and push mov cwtl in cwtl loopne sbb pushq sbb pop sti (bad) loopne pushfq rex.WB outsb rex.XB int3 rex.RXB (bad) xor loopne (bad) fwait and (bad) repnz and sbb rex.W sahf fist xor (bad) movabs sbb movsb sub fwait sarl lods add rex.WRXB sahf pushq or add int3 out int mov cli (bad) add ja movsl jle pop outsl cmpb add (bad) pop in repz mov (bad) test test or (bad) (bad) mov shl (bad) ficoml test (bad) sub repz imul jno jae (bad) jo jrcxz mov addl shl iret (bad) xchg jb cmp stos jo faddl jnp (bad) loopne or ja mov mov lods int3 and mov not push enterq retq out rex.WRB push mov callq jne rex.B cli movabs rex.WRB nop loope loopne mov and sarb rex.R (bad) clc (bad) or loopne (bad) xor test mov jmpq jae (bad) lret pop js push es test stos imul outsl lret (bad) mov callq lahf mov rcl stos decl rex.XB (bad) movsb or pop and and pop or pop and gs push fsub imul mov clc jg and rex.R fs shlb cld outsl mov nop cs clc cmp ds decl hlt pop mov loopne repz add fiaddl rex jo in mov movsl and pushq fsubrs outsb rex.RX ss or (bad) pop pop (bad) mov jbe xchg in push and xor (bad) mov movabs stos xchg jnp addr32 out jne push push rex.RXB in cmpsb sbb sub xor sub push cltd mov loopne adc (bad) (bad) mov cli cmp pushq mov (bad) adc imul add imul jmpq scas xchg cmp movabs (bad) loopne cmp push (bad) pop sarb mov (bad) loopne xor outsl fs sti loopne xchg int jp sub loopne mov std imul jmp lret fucom enterq jo fidiv fidivl add lea loopne or test (bad) rol mov rex.XB loopne int and rex.R outsl rex.WRB fdivrl cmpsb negb movabs jne ja addr32 sub repz pop fld1 xor outsl cmp jnp mov pop test movslq (bad) cmp out lock rcll (bad) or out jo imull stos es in cmp jrcxz stos jbe cmp xor (bad) lea sub rex.RX data16 (bad) sbb rex.RXB jno test (bad) push add rex.RX and sbb pushfq mov sbb subb jno or (bad) fcompl in rex.W rex.WX mov (bad) out (bad) or imul (bad) cltd rclb ss push fs adc loop rex.WXB (bad) icebp imul sbb (bad) or push cmp fcomps jmpq in mov sbb xor rex.WX pushfq lahf callq pcmpeqw out (bad) loopne mov sub loopne jns rorl ds (bad) fisttpll cmp cmc sub sti jge (bad) mov rorl mov repz pop icebp xlat sahf and or sub push adc and (bad) add and push jnp push rex.XB test ror rex.RB jo mov add rex.WRXB lret cwtl (bad) (bad) push cli xor adc pop jl cmp outsb push fwait jns xor (bad) jg gs xor out sbb nop out (bad) loopne testb xchg in leaveq and mov and ja add add push leaveq loopne mov mov hlt (bad) loopne scas or mov (bad) mov jmpq adc add imul lret sbb and in rex.RB loopne test jl leaveq fwait testb test andb lret shr fimul sahf push add cld in (bad) movabs std and movsl lods test shr xchg insl fs stc (bad) mov adc jb test cmovno pop cli (bad) jle outsb sub jnp xchg or in xchg cs pop rex.RX add lock rex.WRX (bad) icebp fcompl xchg jne rex.WRXB loopne rex.RXB pushfq repnz movsb outsl lods sbb pop setge (bad) or loope (bad) movslq rcll mov sbb in cmp xor cld (bad) clc pop repnz stos jno callq jge cwtl js cmp (bad) jg (bad) adc adc in (bad) cmpsl mov sbb rex.WRB xchg lahf rex.WB fisttpl test icebp gs pop (bad) and rex.RX sbb fs (bad) (bad) or jae or (bad) clc sbb (bad) rex.RXB movslq stos xchg pop or gs or orb in push adc sbb cmp leaveq sbb stos out (bad) mov movabs int3 in in repz pop out lret cltd mov jle movsl cmpb je jae jbe jrcxz mov ror callq scas (bad) (bad) js add (bad) xor fistpll mov clc and int3 retq mov lea repz insb (bad) retq rex.XB cmp (bad) cli pushq xchg (bad) loopne jne xlat rex.RXB (bad) ljmp adc loopne or pop cld adc xor add jbe jae addr32 roll loopne callq movsl cmp fwait rex.WXB out shrb or jmpq (bad) push xchg xor shrl xor pop jrcxz cwtl mov rex.WX loopne (bad) add stc out xchg loopne callq (bad) idiv fcoms (bad) leaveq pop mov loopne leaveq pop rex.WXB xor in outsb cmp rcrl jmp movabs mov xor loope (bad) mov ja adc sub fistpll fwait mov mov movabs sub fstpt loope scas mov loopne jle add sbbl cmpb andb cmp fidivrl xchg pop (bad) pop outsb rex.XB and icebp (bad) rex.RX ds jmpq or (bad) mov retq fnstsw loopne and lods movabs (bad) pushq sti pop xor (bad) adc out sub (bad) fldt data16 ljmp rex.WRB loop mov (bad) (bad) addb (bad) out sti jmpq fwait shrb push in pushfq stos add loopne or stos mov lods pop jmp incl lock mov in mov xchg (bad) (bad) xor xchg push shr cli jbe in rex rex.X mov notl rex.WX shl js jge (bad) fildl adc (bad) rex.X xchg adcb enterq (bad) mov mov test add (bad) push stc xor movsb cmp loopne (bad) mov decb enterq cli pushq imul sbb shlb loopne xor gs (bad) cmp imul mov enterq pop shrb loope cmp lods retq or (bad) loopne cli mov imul rex.XB (bad) mov xor imul or and (bad) mov rex.X add jmpq roll lret push in out icebp xchg jmp cmpsb sbb (bad) xor retq xlat add test pop add (bad) adc cwtl or cld add adc std in (bad) (bad) (bad) ficom stc movabs xor cmpsl (bad) mov or in (bad) jp rex.WB movabs rex.XB (bad) out pop mov je movabs lods (bad) (bad) (bad) loopne or xchg insb (bad) sbb (bad) loopne mov sti push xor loopne mov or fcomps in test sbb (bad) loop mov nop hlt or and rex.RXB test shl mov mov (bad) adc test in mov loopne lock fsub jnp sahf (bad) pop pop addr32 insb xor cwtl pushfq imul adc push retq movsl xchg cmpsb sti rex.WX xchg cs jnp push rex jne (bad) mov mov (bad) out (bad) (bad) loopne (bad) shrb in shll fnstcw loopne sub mov cmp add mov test and sbb (bad) xchg and (bad) lods (bad) movsb loopne xchg jbe lods push in negl rorl mov outsb callq repnz sub mov add (bad) fsubp and imul sar movl sahf pop callq adc adc pop sbb (bad) cld lahf and mov mov pmaddwd xchg and (bad) rex.RB (bad) in (bad) or adc rcrb (bad) rex.XB jns loope rex.WX jb push adc hlt xchg adc outsb rex.RB sbb pop pop pop (bad) in retw andl or out negl mov je loope addr32 stos jae (bad) and lret or push jo (bad) push mov add (bad) jmp sbb retq sub sbb pushq jmpq sub jne,pt retq (bad) and out (bad) adcl cld mov cmp rorb cmc mov mov sbb repz mov (bad) adc sub test (bad) xor loopne movabs mov lret icebp add add adc push (bad) jle (bad) push and loopne xchg (bad) adc stos callq loopne rex.R pushq xchg (bad) mov jne (bad) add pop sub movabs rex.RX (bad) mov rex.WR popfq or in rex.WRB (bad) pop sub mov (bad) out test movabs pop cmp out and loopne divb cmc xor xchg pop (bad) outsb fnop sar clc rex.WR fwait rex.WB (bad) pop lret lock jnp (bad) (bad) fdivrp iret jge int3 xchg stos pop es jmpq callq sahf mov pop (bad) push outsb pop xchg mov pop xor or addl (bad) out cltd (bad) loope sub addr32 loope stos pushfq jbe lock faddl loop mov icebp mov sub (bad) cwtl sbb mov pop movsl mov pushq push pop (bad) icebp adc nop mov sbb (bad) (bad) xor sub mov or sbb pushfq xlat lret sahf xchg fwait clc pushq insl push xchg sbb lahf jge jbe ror xor rex.WRB pop lods cmp xchg lret and add cmpsl jbe in rex.WXB sub std stc outsb data16 movabs pop jle shlb movabs (bad) enterq and adcb or icebp (bad) jle xor lret adc jns fbld rcrb (bad) in adc pop push jnp fnstcw loopne mov mov loopne pushfq cmp and jae rex.B loopne and jmpq pavgw adc loopne insl mov imul rex.WXB (bad) mov imul (bad) hlt xor (bad) stc loopne jbe and loop (bad) cli add sbb jns cltd pop loopne adc cmpsl xchg push cmp ds cmp mov cmp jmpq push rex.WR rex.R cmc add push jno or (bad) lret sahf pop cmp add jrcxz or movabs (bad) and rex.WB (bad) loopne sti mov (bad) hlt lock jo jg add repz rex.WRXB rex.X leaveq (bad) cmpsl out fdiv lret xor lods icebp push (bad) sbb mov mov xchg retq xor (bad) lock movabs and fs int and movabs mov sbb sti or adc jle loopne (bad) push (bad) or fistpl loopne mov loop xchg mov cmp cli rex.WXB movabs in mov or es cmp (bad) cmc add loopne rex.WRB int3 sbb mov sbb lret fcmovbe mov xchg sub popfq mov loopne repz (bad) loope movabs loopne mov fs xchg lret add adc push movabs (bad) loopne addr32 jb cmpsb sbb adc fisubr sbb lret xchg mov mov adc stos xchg pushfq rex.X sub test pop (bad) imull cs sbb push nop adc movsl stos rex int movabs rex.W adc hlt push pop (bad) jle or xlat mov int3 rex.WXB es repz test mov mov test loopne rex.W std mov stos and punpcklwd xlat nop cmp mov rex decl cmpb jnp loopne (bad) cs fs rex.WRB pop stos pop add and mov es xor loopne xor iret xchg shl jbe cmpsb pop and cmp (bad) (bad) (bad) popq ds (bad) and add lret (bad) mov stos int3 retq cmpsl (bad) loopne loop adc push push adc pushq retq xor es (bad) jmp (bad) (bad) mov insl cmpsl and cmp fnop outsl adc rex.WXB rex.B adc pop xchg xor mov jrcxz mov rex.WRB (bad) mov adc push (bad) and loopne mov push jp out xchg xchg cmpsb retq cmp movabs shr xchg mov (bad) (bad) test (bad) pop xchg imul loopne leaveq pop (bad) add out fs mov lods in int3 mov jmpq (bad) adc cmp jns (bad) out (bad) iret in jl (bad) mov loopne or (bad) ffreep xchg imul mov in jge (bad) mov lods or ja push fs mov jmpq outsb and xor sbb adc mov jmp rex.WX add cmp rex.WB (bad) shrl adc fidivrl loopne xchg (bad) mov sub xlat rex.RB (bad) (bad) or icebp jbe or adc loopne cmp (bad) (bad) xchg loopne movabs (bad) mov rex.WXB or js (bad) sbb stc xchg mov es adc and data16 fneni(8087 jb js push out shr sarb ljmp cmp and in pushfq (bad) repnz xor test int icebp lods in (bad) mov (bad) mov mov js cmp (bad) xchg mov or (bad) xorb (bad) in jg add outsb (bad) jne xchg or int3 loop (bad) push movsl add or insb ffreep loopne out rex.WRXB sbb cli ds (bad) lock iret fwait mov and insb or out test leaveq xchg mov mov fsincos jmp callq xchg mull jnp (bad) sbb sub fidivl rex.RXB xchg xor xor fwait mov cmp or loopne ffreep jae lock (bad) (bad) clc fimul fbstp mov popfq xchg sub loopne jbe xchg test sbb sub callq xor mov cmp fdivr mov scas (bad) pop in sbb ror xor push rolb xor pushq shll sbb xor rex.XB mov jmpq lcall xor mov and nop loopne retq cmp rex loopne cmpsb sub shrb loopne mov imul rex.WR rex.R fmull ss push lods (bad) movabs fidiv loopne and sub sub jbe (bad) mov rcrl (bad) ja jmpq callq fsub pop fistpl mov rex.WXB (bad) (bad) loopne sbb sub andb mov imulb movabs cs xorl or loopne jnp cmp (bad) decl mov mov (bad) shll (bad) xor nop clc mov cmc mov or mov callq jge js push and test or or roll loopne repz sbb jmpq lock mov cmp imul out int mov (bad) cmpsl fmulp stos rex.X lea jg (bad) jae icebp shl or pop out jl outsl jbe push in fiadd nop movabs jp cmp loopne stos push shrb rex xchg cli lret stos add repz xor and addb sub in jns rex.RXB rex.WRXB or jrcxz (bad) movabs in or je loopne pop rex.RXB jnp shl xchg xchg sti scas pushq lret shl jl mov std add rex.WB (bad) js add movd repnz callq cli push scas add or rex.WR jmp mov mov loop test loopne in sahf and (bad) loopne or lret mov rorb and rex.RX add cltd in lret in sbb (bad) shl movabs outsl jmpq sti loopne fwait (bad) shl hlt rex.RXB fidivrl jne mov sbb (bad) xchg add mov in pop xchg mov out jmpq lock sub sub xchg out xor xchg loopne out (bad) (bad) mul (bad) jrcxz jp movabs fnstsw sub and rex.RB sahf xchg xlat (bad) rex.W or fmuls jmpq push jb jbe (bad) xor cli pop lret sub mov jns pop in f2xm1 loop push clc (bad) (bad) lods rex.WRXB (bad) push add (bad) mov mov loop jb lcall (bad) cmc sbb pushq divb mov and (bad) iret jp in mov test test rex.X jg mov sahf loopne and mov sub cmp iret mov fs sub add imul movabs leaveq xor fild (bad) orl sub cmp (bad) push xchg (bad) es rex.WB rex.B out sub and jns (bad) callq leaveq add (bad) jle test adc hlt pushq fisttp addr32 pop (bad) sbb adc insl mov jns lock sub std cmp cmp divb xor fs or (bad) jle ficoml mov adc jae adc (bad) sbb out in cmpsl sbb iret jle repz es fs jrcxz,pt rex.RX cmp (bad) sbb sub jns icebp rex.R jnp jb rex.WR addr32 outsb or xor rex.WRXB rex rex.WXB lock or fistpll in enterq fisubl rcrl sbb callq out icebp add xchg shll rex.WRB or stos callq mov mov cmp sbb rex.WB lock mov retq adc rcl rex.RX jb int loopne push (bad) sbb pop jnp jno xchg addr32 (bad) fistpl rex.W stc retq jg add mov (bad) mov in jne notb and (bad) addr32 jnp mov loopne sub je test or loopne gs rex loopne (bad) push xor rex.X gs fwait cmp cltd cmpsb xor (bad) in rex push int3 loop rex.RXB add callq mov icebp cmc mov xchg shrl pushq int3 loopne push (bad) mov mov out lcall fwait movsl test xor rol mov loopne sbb mov cmp mov incl cmp movabs int (bad) push orl stos pop xchg or xor push (bad) mov stos fwait loopne rorl rclb pop fucom sbb (bad) mov mov loopne lods es mov pushfq pop movabs rcl loopne jo fsubs rex.WR sub rex.WB movl orb retq imul xchg insb lret loopne (bad) add jmp je jmpq xor fneni(8087 shll out retq lret loopne sbb mov sbb fildl repz loopne movsb jb cmp or loopne (bad) insl adc pop sub and sbb cmp repnz outsb rex (bad) sbb (bad) sti (bad) out add test xchg (bad) and jbe adc rcll xchg loop loopne adc and rex.WRX and movabs enterq lret cli or mov movsl popfq fldenv retq mov mov loopne push fcomps xchg fneni(8087 lea cmp cmp or gs cmpsb pop sbb (bad) fwait stos adc loopne jae sbb in loope jle and push mov test (bad) movabs xchg cli (bad) (bad) loopne (bad) sti fcomi (bad) jge in sahf mov (bad) (bad) mov loopne rex.RXB adc loopne stos leaveq push lock sbb fisttpll loopne rex.B shl rex.RX callq (bad) mov and cmp or push ja or mov fisubr out data16 push mov mov jl mov cltd (bad) loopne lods sub (bad) rex (bad) shrb pushq (bad) jmpq rcr fucomp cltd clc (bad) mov mov loopne retq ss pop je (bad) mov cli and mov ss enterq or cmp mov mov jb loopne rex.X je shl mov data16 in pushfq pop xor lods jb add jge lods mov pop rclb rcr (bad) push clc (bad) rex.WXB mov sub pop int sbb rex.WR or (bad) icebp stos movabs (bad) repnz pushfq xrelease (bad) popfq sbb mov (bad) sbb xchg mov jnp mov jmpq jns sbb rex.RX (bad) sbb mov rex.RXB and (bad) xchg loopne imul out mov loopne pop (bad) (bad) or mov add pop sub xchg and cmp lods xor pushfq loopne push in (bad) movabs sbb movabs mov xor outsl rex.XB (bad) adc incb cmp pushq imul test fist jbe push in sbb lret add mov insl in bndstx popfq int3 stc mov shrb push outsb (bad) adc mov and lret pop insb jb out cmc ss rex.WRB (bad) (bad) (bad) out fmul icebp movslq (bad) sbb (bad) rex.XB or cmp fwait (bad) pop (bad) xor (bad) mov or mov out clc fstpt mov jae fwait rex.WRB jnp pop (bad) fsubrs adc mov pushq sbb fisubl repnz cli (bad) sub pop fstpl out imul rorl scas rex rex.WXB mov outsb or fcoml or sahf data16 adcb test stos mov add adc insb pop ds add (bad) jle (bad) scas mov mov fisttpl loope mov mov cmpsb out out cmp rex.WRB (bad) and adc mov jnp ss je (bad) (bad) sti push fcoml fisubl and (bad) adc sbb sbb rorl mov pop data16 sbb or cmp (bad) (bad) in cmc mov sub sbb jg or loope and (bad) sbb push cmpsb rex.X fildll add out add sub fs (bad) adc cmpsl cmp adc loopne mov jo rex.B cmpsl pop sbb cwtl sub movsl (bad) loopne push add xor (bad) mov sbb nop sbb push rex.X or scas gs out int and rex.WX jrcxz or mov movabs test (bad) lock (bad) cmp add out add or cmp (bad) pop insb add fist adc cmc icebp rex.RB sbb shlb sbb (bad) out jp mov lea bswap gs or pushq movabs add outsb idivl xchg sbb pop scas pop sub sbb rex.RXB outsl movabs cmpsb lea (bad) cmpsb movsb xor pushq push movabs (bad) out movsl pop fist jmpq push sti xor adc cmp outsb xchg (bad) mov callq cmc and jbe sahf xor (bad) adc sub callq fwait jmpq (bad) test int3 add test int mov pop rex and cld retq mull movabs adc insb jmpq lock pop clc add int loopne sub xorl mov cltd sub cmp (bad) out mov and rex.RB rex.WB sbb adc sub (bad) lret mov (bad) popfq xchg and cwtl lahf nop (bad) cltd cmpsl stos pushfq add out xchg sub jge mov movabs (bad) (bad) (bad) out mov xchg test sbb adc adc out movabs repz (bad) xlat xchg (bad) sub movabs mov insb cmpsb (bad) fs and lahf (bad) sahf mov rex.RXB cwtl cmpsl cmp jb adc jbe sub mov cmp test (bad) movabs xor in lods ja push subb mov decb outsl sbb sub leaveq and fildl cld movabs leaveq rex.WX jg rex.X cmpsl ds add je cwtl mov imul stos mov out clc fiaddl test scas rex.WB js push vmovdqa (bad) (bad) (bad) (bad) retq sub rex.R rex.WX (bad) movsb lods (bad) rex.WB sbb fdivl push movsb rcll sbb pushq movabs (bad) push loope fcomps (bad) movsb out (bad) jmp rex.WRX cmp xchg lock paddb movsb std rex.WRXB cmpsl jne add movabs lcall and std xlat stos out retq retq mov cmpsb (bad) lock xchg clc push lock orl cmp divb movabs pop (bad) or popfq (bad) (bad) jp or in xchg mov rex.WR mov (bad) jle jbe loop leaveq enterq pop sbb sarb cltd (bad) (bad) movhps lret sar jo subl mov xchg bnd mov cs cmp (bad) lret cmp stc movabs cmp jne sahf cmp (bad) push test xor loop pushfw fnop mov cmp sub (bad) sbb shrb sbb insb movabs push in rex.WX stos loope xor inc sub pushq js xchg in sbb pop (bad) (bad) adc jmpq and jb fstpt test jge pop outsb adc jl and lock (bad) loopne (bad) mov jb add push adc idivl jg test rex.WRXB adc fwait (bad) (bad) sub sub (bad) out xlat xor push mov fsubl (bad) (bad) cmp rex.WXB add (bad) (bad) lock shlb pop outsb hlt neg add and cmp sbb (bad) movslq lock cmpsb push (bad) iret (bad) loope movabs sub loopne and mov andl enterq mov (bad) sbb leaveq cltd rex.WB sub (bad) jmp rex.WXB repnz movslq cs lea sar adc rex.RB xchg (bad) gs ss pop rex.WX rex.B (bad) shr jae callq push retq (bad) add adc insb push in pushfq mov sub (bad) xor imul movslq decl test fcoms (bad) sbb outsb callq es cmp or rex.RB jmp pop add (bad) insb jl or out jmpq in or (bad) cli cmp jle adc jo add add fstl rex.B mov (bad) loopne (bad) jbe rex.WR loopne callq ficompl loopne mov xor xchg rex.WR idivb fsts push xchg (bad) jmpq (bad) (bad) sub leaveq shll jl lods rolb sbb jmpq (bad) mov mov xchg (bad) rcrl or movsl and jge je scas loopne,pn mov ds clc enterq rex.WXB (bad) pushq in push cmpsb sti xchg fistpl loopne js and fild sbb fiadd movabs jge mov mov mov test mov shll (bad) fist test jmpq loopne and or rex.B xchg addl mov sbb insl (bad) in sahf out xlat outsb adc (bad) fneni(8087 movsl and and (bad) sub rex.WRX in test xchg mov and rex.WRX rex.WRXB cmc jmpq rex rex.WR loopne mov mov in push outsl loopne add (bad) jmpq xchg (bad) add sbb fldenv in or test (bad) rex.WRX rex.RXB loopne xor pop int3 in sahf orb loopne loop ss mov (bad) (bad) (bad) fcomi sub xlat sub loopne (bad) jmpq movsl popfq (bad) jrcxz mov ljmp lahf xlat fisubl sar movsl movsl push stc or mov mov and gs out (bad) movabs mov retq jp (bad) sbb cli fcoms rex.WRX lock scas out (bad) loopne out (bad) rex.WB add (bad) xchg test mov loopne jmpq in gs std rex.X mov lret or mov stos ffreep repz mov je (bad) jl and rex.WXB movabs loopne sbb mov in scas ss pop rex.WRB rex mov clc (bad) sbb sarl xchg loopne fcmovnu in xor cmp leaveq mov ja,pt or sub pushq movabs xchg push addr32 cltd fsub std jl out xor jne decl cmpsb (bad) (bad) test sub (bad) fmulp cmp mov retq rex.WRXB insb test mov callq (bad) mov jmpq flds stos add xlat (bad) (bad) sbb loopne in mov mov xor (bad) xchg (bad) iret rex.X mov ja jae rex.R cld movabs xchg or shl je movabs fiaddl xor jrcxz,pn xor jp adc mov (bad) and js sub loopne (bad) and mov rex.WXB adc movabs mov (bad) mov add retq jl xchg lret rex.X push add mov sub mov notl pushq (bad) xchg and cld xchg xchg scas (bad) repz rex.W cmp and (bad) (bad) sbb loopne xchg sbb xor ficoml rex addr32 loopne rex.WB xchg pop shl mov rex.RXB loopne pop rex (bad) jae add out jl cmp in enterq rex.RB test (bad) jmpq rex.RX mov ja push in xor loopne mov rex.WRX insl jl jmpq jge mov pushq or fmull (bad) mov jp mov loopne fdecstp rex.WRB fneni(8087 stos leaveq mov push loopne xchg popfq rcrl mov push (bad) stc sub pop mov loopne (bad) icebp mov pop pop outsb loopne (bad) xor loopne imul out rex.B retq adc add (bad) jbe xlat rex.RXB xorl rex.X mov or jg add jnp pop sub mov data16 popfq ss mov mov jrcxz xchg rex.WB pop movabs fsubrs jmpq and lret jo push (bad) sbb push xor movslq clc pop sarb lods (bad) jns jno (bad) fisub jo addl pop rex.XB add or lock mov movabs (bad) mov xor add jle (bad) ffreep pushq icebp imul jp rex.WXB cmpsl or (bad) add rex.WRXB cmp (bad) movabs (bad) stc add cmpsb rex.RB callq repz (bad) jge and addr32 mov cmpsl (bad) rex.RB ds pop mov mov add (bad) and mov shl mov (bad) cltd in popfq mov jo adc or rex.WRXB xchg push ror movabs cmc test xor rcrl sbb test nop subl test (bad) rolb jmpq (bad) lods sbb outsl xchg mov mov fiaddl in push adc add icebp mov test rex.RX jp (bad) cli lods (bad) or rclb push and xchg cmp (bad) lcall scas rex adc imul mov pop or push fidivr (bad) lahf stos (bad) jmpq jno sbb (bad) mov mov lods (bad) fsubp jmpq jno (bad) out lret mov pop add fstl test (bad) callq jmpq cmpsl lods shll int3 jb or pushq lock cmp loopne pop jrcxz out mov loopne std xchg xchg sbb jg imul (bad) cmp loopne jl test pushfq pavgb and scas loopne pop fbstp ja rex.W loopne rex.WXB (bad) std cmpsl add loopne xchg jnp push add test movabs cmc (bad) fdivrl (bad) leaveq mov cmpsb (bad) loopne imul rcl pushq fcos xlat or jrcxz pushfq xor orl out add push xchg or (bad) pop lods loope cwtl jae jne (bad) (bad) mov out rex.B fisttp xchg hlt jo gs out rex.WRX push fsubl push mov jnp jmpq notb retq sub pushq (bad) mov (bad) rex.WR movabs sarl pop rex.WRX loopne outsl mull pushq mov mov jle pushq sub rex.XB outsl (bad) mov or sub add push rex.R (bad) or (bad) adc jmp cwtl push (bad) (bad) pop mov rolb push shr mov (bad) rex.RX loopne out mov push xor mov ja mov lret scas cmp and out add lret push adc sbb loope (bad) loopne cmc push push enterq lods xchg or sub mov cmc rex.W pushq loopne and (bad) or mov retq loopne jmpq rcrl andl jae leaveq lods insl mov (bad) (bad) loopne xchg (bad) idivb (bad) cmc lods rex.RXB cmpsb loop sahf nop and fcoms adc or push rex.WXB and std (bad) loopne icebp jrcxz ds (bad) loopne (bad) rex.WRXB popfq mov mov imul sub mov cli sbb cld xor (bad) rex.B loopne push add jmpq mov rcll lods repnz fsub rex.WXB (bad) adc sub jb sbb rclb (bad) rex.WRX jbe lods (bad) add sub jmpq loop xor hlt in mov add mov in jnp lahf push jne loopne clc mov mov cwtl rex.RB cltd popfq (bad) lcall repz out (bad) rex.W jb,pt imul jo and cld hlt (bad) in (bad) movabs (bad) movabs jrcxz xchg sub pop (bad) fisub pushq (bad) loopne (bad) cltd shll int mov xchg loopne (bad) push (bad) (bad) jne test (bad) loopne push cmp rex.RB jmpq adc rorb add rex.WX rex.WR jrcxz lods scas int add and in xchg push loopne add rex.W pop (bad) and add cmpsl js sbb loopne and (bad) mov push (bad) jno pushq stos stos cmp and lods fisubl (bad) in lods adc (bad) jo rex.WXB in and (bad) xor iret cli rex.RXB movabs cmp sbb imull pop rex.XB sahf xchg out movsb out pushq mov (bad) pop loop test jb loopne adc (bad) in jge adc ja or (bad) (bad) out adc jg scas fisttpl loopne xlat hlt mov (bad) and xchg (bad) pop lret xchg cmpsb rex.XB jb or leaveq (bad) ss (bad) (bad) xor mov out out fcmovb push jno add mov out out loopne push or xor mov retq int sub lock loope lods (bad) pop callq loopne (bad) rex.RB push int3 movslq jne cmpsl xor sub lcall pop xlat (bad) loopne stos rex.WRX rex.WXB mov sub movabs cmpsl test xchg lock imul jmpq rex nop sub loopne push (bad) test mov testb (bad) in cmp (bad) (bad) jmpq pushq sub cmpsb (bad) sti jbe push pop nop sub or cli adc movabs outsl mov pop data16 cmp add pop imul (bad) mov (bad) or (bad) (bad) rolb and test sub loopne in cmp (bad) or jmpq push iret je sbb jle pop adc xor (bad) lock stos jnp cmp fnstenv hlt rex.WR imul cmpsb cmp xchg (bad) add movabs rcr stos mov push repz xchg push callq in cwtl xchg movsb sahf js (bad) xchg loopne (bad) test es xchg in (bad) (bad) loopne fucomp adc scas jae movabs pop leaveq jne fcoms loopne lods xchg rex.X cmc std rcr or mov sub loop adc icebp add add fwait (bad) (bad) pushq jle retq and fdivr xchg mov fmuls mov stc loopne and pop adc (bad) loopne xor ror push and adc std outsl and push (bad) or out iret xchg cwtl icebp outsl rolb mov jg shll and popfq xor je (bad) mov icebp pop (bad) xchg mov xor rex.WRB jmp stos adc cmp xor add xor mov outsb mov add (bad) push mov cwtl xcrypt-ofb cmpsl sub cmp fldl repnz rex rex.WRX adc jns and xchg pop out or or iret rex.WRX test jnp movslq sbb (bad) out loope rex.WB rolb or jl (bad) and jmp sbb (bad) lock fsubr mov sahf shlb insl ja stos in fnop loop mov in rex.WX or sahf sub loopne (bad) enterq sbb fldl sti adc mov pushfq rex.RX xor and fldl popfq sti cmc rex.R loopne retq sbb pop sbb mov rex.WRB xor out int3 (bad) mov jns stc loopne cmp rex.WRX xor insb loopne or out (bad) callq xor xorb and mov movsb (bad) sbb jrcxz push enterq pop imull or (bad) xchg movabs cmp scas test mov mov xchg rex.B cmp (bad) (bad) mov jl leaveq sub mov mov xchg xchg mull jl fchs scas fwait (bad) scas cmp retq or pop (bad) adc (bad) adc push add (bad) rex.XB and xchg push movabs loopne sbb rex.WR xchg (bad) mov out je sub (bad) (bad) or sbb clc in int test rcll adc rex.WRX xchg mov jrcxz int fwait stc (bad) popfq insb cmp sub cwtl (bad) add jle jmpq add adc adc add xor push loopne jb adc pop rcrl sahf movsb cld jp stc je pop stos pop add and (bad) jmpq cmpsb movabs loopne jg rex.WRB cmp outsl xor or (bad) test (bad) sub loopne nop jle out not push (bad) cmp (bad) (bad) push movsb or (bad) movsl cmpsb or in lea mov xchg xchg loopne test (bad) mov movsl loop or movabs outsl xor loopne and (bad) icebp pop rex.RXB rex.RX je and (bad) movabs rex.XB jae test xor loopne int3 xlat xchg sub mov std xchg mov int sti movsl outsl xchg sub (bad) xchg mov (bad) lcall inc lods jmp nop out lahf in sbb (bad) (bad) test xor adc loopne adc imull cmp mov rex.RB fwait xorb loopne sub loope cmpsl leaveq (bad) (bad) sbb adc sub cs mov or or nop xorl (bad) mov cli xchg jg xchg pushfq (bad) test jbe loopne sarb mov imul js loopne and push xchg sbb lods cmp retq (bad) (bad) shlb loopne push (bad) movslq shlb pop outsb (bad) jrcxz ljmp rex.WR (bad) (bad) out sbb subps imul rex.RB mov out cmpsl movabs jp push (bad) lret jbe cmpsl and lea mov (bad) (bad) int3 (bad) clc movabs sti jb int3 fildll add jmpq and xchg and (bad) lods or pop loopne fdivrl test movabs and or hlt add rex.X sub sub repnz push sar movabs (bad) mov mov sbb in add jo imul fdivrs push lahf rex.RX sti leaveq in outsb cmp rex.WB rex.WRX push adc xchg sbb mov ds (bad) (bad) lret out movsb stos mov adc and and inc push nop add fsubp mov xor scas loopne mov mov rex.WX rex.R loopne (bad) (bad) rex.WR (bad) (bad) sbb fimull loopne in xchg (bad) xlat int rorb push jl clc pushfq retq loopne and outsl rex.WR cli js loopne test (bad) movslq mov rex.RXB mul rorb pop xor mov loopne js mov (bad) fwait mov shll fstpt mov divl push movabs jge and (bad) pop (bad) (bad) and mov adc movabs scas mov push jrcxz fidivr in fcoms sub (bad) mov lret nop pop fildl stos mov cmp adcl hlt (bad) (bad) rex.WB lock loope leaveq loopne sti pop and rex.WRX roll cltd sbb outsb lods int3 xchg and (bad) jae loopne ss movabs loopne or outsb (bad) (bad) lods or iret mov cltd xchg xchg xchg out subb rcr leaveq (bad) jne mov (bad) jrcxz repnz sbb (bad) add (bad) rex.RB rex rex.WB jo pop loopne (bad) stc lahf rex.WR lret imul or (bad) add sub movslq loopne cmp and retq in rex (bad) rcll shl push flds or rex.W (bad) pop pop and mov cld or fdivs int popfq mov fcmovnu push pop cld xchg (bad) sti in es gs (bad) lret pop fisubrl rex.WRX out loopne jg sub (bad) clc loopne mov xchg mov sbb movsl out sbb rex.RX jrcxz test (bad) shrl mov outsb add loopne movsb push repnz (bad) sbb pop (bad) in loopne jae (bad) or test push and (bad) test jmpq rex.WXB (bad) sbb loopne push xor xchg loop testb push (bad) (bad) cmpsb js mov mov roll rex pop rex.X sub rex.WB jnp test stos repz mov (bad) jbe jno loop (bad) adc mov mov xchg test movabs (bad) pushq rcrl mov loopne jmpq mov subl iret pushq test sbb movsl jmpq xorl push adc loopne nop jge andb fs int sub rex.WRB insl mov pop js sbbb or loopne fs jne in mov push rex.WRXB xchg lret pop (bad) mov and es sti in sbb (bad) loopne out (bad) rex.B outsl loopne lods add xor movabs sub rex.RB xor jb fcompl testb or push cmp jns xor icebp loopne emms scas jl xor stos xchg mov loopne pop sbb out xlat movsl rex.WX jnp loop xchg jl loopne mov jb rex.RB loopne movabs xor (bad) subb lahf repnz xchg and push loopne loop mov lret shll scas addr32 adc loopne callq cmp cmc mov (bad) icebp rex.WX push rex.RXB pop std (bad) sbb roll fs mov adc mov add mov test (bad) mov (bad) loopne and rex.WB (bad) loopne mov js mov (bad) jle rex.WRB loopne ja shl mov sahf repz imul clc or pushq movslq outsb ja rclb cld jmpq lcall rex.WXB rex.WRXB adc add es loopne xchg mov in push fstpl xor (bad) and adcb sbb in xlat sub cmpsb xchg cld movabs lods sbb rex.WRX popfq sub fbld int3 or ja or sub pop and jo jmp xor cmp (bad) in loopne jne or pop (bad) mov push jmpq gs or data16 jmpq je pop (bad) incb (bad) rex.X loopne (bad) xor movabs rorl mov ss lret loopne mov lods sub bnd xchg add adc roll mov rex.WXB lret xchg push adc adc (bad) xor insl add rex.WRX loopne (bad) jl pop lods xchg fisttpl mov imul (bad) lods mov ficomp (bad) loopne push nop (bad) fsts rex.WXB xor loopne pop mov rex.WRXB retq mov cmp scas roll movslq (bad) stos and loopne outsb jnp (bad) loope (bad) out rex.R add fwait mov jnp xchg out rex.WRXB add jo mov es (bad) mov rex.B rex.WRX cmp push lock jb sbb sbb scas fadd (bad) loopne push lahf push popfq sub sbbb xchg and in loopne add mov faddp test sti pop gs cmp mov cmp loopne mov (bad) (bad) and js test or add rex.RX stos int sub cmp rex.WX stc fld mov sub mov fsub jo (bad) cmp movb out es xlat (bad) cs mov rcl mov mov jns xchg rex.W lods mov movabs jb stos or and xor (bad) int3 (bad) shrb jo mov push rex.WRX xchg cmp xchg pop loopne jnp xor mov (bad) icebp mov or add push jne test rcrb movabs jmp mov jbe xchg hlt fwait fs add (bad) mov addb lock sbb loop movabs stos movsl shll js loopne xchg jne mov cmc sbb out sti rex.X addr32 add sub (bad) sub mov (bad) and out jnp cmpl (bad) cmpsb gs jo int3 cmpsl cmc mov sub cmp neg jmpq mov and loopne mov xchg mov loopne adc or out xchg sbb fcmovb xor lret mov jmpq lea sahf lahf in iret cs (bad) cmp mov (bad) xchg pop sbb push cwtl xchg and in jne popfq sub push (bad) jnp lahf movabs in loop loop xchg js mov xorl (bad) xor sub sbb stos mov rolb gs adc retq in ss (bad) pop jl pop rex.WRXB data16 clc subl (bad) incl and fcmovb cld cmp iret nop jmpq add out rex.RX in and (bad) lret repz xor sub icebp popfq imul out sti ds (bad) mov faddl lods xchg or in push repnz and retq (bad) sbb insl fwait rex.RXB mov rex.WX outsb (bad) jge jmpq addr32 shr hlt cmp jge (bad) int3 mov sub rex.RXB retq movabs scas pop xchg divb retq sbbl lods xlat rex.XB rex mov shlb testb sbb loopne lea (bad) xchg cmp stos in and or ss mov pop iret fcos test push cmpsb scas rex.WRXB loopne sbb fs out jmpq test cli or sbb (bad) movabs push sub icebp iret loopne push jno add sti fidivrl push (bad) mov jo (bad) movabs imul enterq jae jns stc (bad) sub jge movl sbb stos (bad) (bad) (bad) loopne mov add (bad) adc repz popfq gs rex.RB movabs sub mov (bad) loop rex.WRXB rolb xchg (bad) rcrl loopne rex.XB rex.RX rex.WRX fbstp (bad) ljmp pop mov cmp rex pushfq cmp jno mov (bad) iret int3 jmp loopne and movsl and loopne (bad) mov leaveq sub mov or rex.RB pop je hlt jmpq in std lock cmp (bad) loopne (bad) (bad) mov mov rex.R xchg rcr loopne (bad) push js ja out loopne in (bad) sbb add in (bad) enterq loopne rex.X movabs lret jrcxz out repz stc in push imul loopne push rex.WB (bad) js stos loopne xor rex.X ror addr32 loopne fnstcw out rex rex.W data16 loopne (bad) loope (bad) and sub (bad) cmp imul jle (bad) (bad) stc out loopne cmp ja sbb add (bad) pop mov bnd mov pop push shrb (bad) retq (bad) hlt ds cmp mov jp loopne in (bad) imul incl add adc loopne add adc adc or imul mov cmp adcl jl mov xor lock xor movabs jl movabs (bad) fnstcw std addr32 xchg lret loopne mov xor xchg rex.W mov loopne andl cld (bad) pushq and andb or jo cltd xor rex adc xchg shrb mul mov fnsave push (bad) fcompl (bad) jg lods outsb loopne lea push ss mov rex.WX add push loopne nop movsl fistl and (bad) js loopne movsb negb cmpsl add (bad) rcr and mov xor loopne sbb push jbe imul xor insl mov or loopne pushq xorl mov jmpq ficom pop (bad) icebp mov bt lods push rex mov js cmp pushq cld addl loopne (bad) push or setb loopne mov cli jl rcll or fbstp (bad) out cld loopne stos movabs test cmp loopne imul iret or rex (bad) loopne cmp mov mov (bad) cpuid mov loopne or movabs stos out adc mov loopne (bad) mov add mov pop ja sbb loopne subl (bad) lahf fs rex.WR mov jmpq xchg out repnz pop cmp lea or (bad) imul mov jmp in (bad) xor (bad) rex.WRB int3 jrcxz mov imul rex.W lahf (bad) cmp loopne xchg loop mov stc loopne or fwait (bad) ja xor mov cmc loopne cmp mov xchg loopne hlt imul rex.RX repz push xor jrcxz (bad) mov cwtl sbb outsl add loopne callq hlt nop xor loopne cmp pushq loopne xor cmp (bad) movabs scas fmuls mov mov or xor cwtl (bad) in lods adc push mov cmpb loopne clc mov rex.RXB pop xchg rex.WX jmp loope repz loopne mov xor int push xchg xor outsb adc imul clc cmp loopne xor rex.RX mov cmp in (bad) lea push movabs push or or in shlb push lret stos adc push int3 movabs adc orl jl push rex.WX shl pop jbe sbb sarb movabs jmpq lock xchg jno sbb mov adc mov in mov push cmp popq scas loop rex.RB cmp popfq mov fsts (bad) mov test sbb out xchg lret scas or sbb or int3 rex.WX out sbb (bad) mov add pushq mov (bad) test rex.WRXB jrcxz cmpxchg push jns leaveq or out out movsl insb ss pushq jo rol vandps xchg push iret mov cmp add xchg (bad) lods int int3 rex.B subb xor sbb pop fild repnz mov loop movsl or (bad) (bad) sbb jg sti cmpsl jp rex.WX lea pop xor jne clc (bad) (bad) shlb xor scas push fidiv mov and sbb rex.WX (bad) (bad) mov movslq movabs pop (bad) sti (bad) sub jp mov rex.WX jns sbb int (bad) (bad) (bad) insb rex.RB mov fadds in (bad) cli add cmp and icebp (bad) and push pushfq (bad) xchg shl out adcb (bad) dec (bad) (bad) (bad) in adc (bad) icebp insl jne loope cmp lahf mov mov xchg out (bad) mov adc in (bad) jrcxz xchg (bad) pushq add adc xor movabs stos add adcb (bad) xlat xor or repnz icebp js and cmc movlps rex.RX lret cwtl push nop insb jge iret and sbb pop in (bad) in imul movabs (bad) mov rex.WR cltd andl jae in imul jb (bad) (bad) outsl push test loop sbb xor xor lret (bad) cmp rex.B pop gs (bad) rex cwtl xchg sbb addr32 jmp jo movabs (bad) rex.WB (bad) adc (bad) frstor rex.RB mov mull rcrb xor cmp sub rcrb movabs insb jmpq (bad) rcrb data16 ficom (bad) loopne (bad) sub cmp jae jmp and (bad) sub in rex.XB cltd fisubrl (bad) and (bad) retq sbb jnp rex.XB add add jae push (bad) fstl loopne pop add stos or xchg imul fdivl xchg (bad) lahf add sti rex mov loopne (bad) (bad) rex.WXB jae movabs jl (bad) cmp xchg (bad) pop iret and jne mov out fs jle (bad) add ficompl mov nop (bad) jne clc rex.RXB rex.WRXB (bad) (bad) xchg std scas mov pushq mov pop rex.WXB jmp (bad) imul add fs mov movslq outsl pop int mov loopne insb cmp mov loopne out mov lods rex.WR movabs sub xchg hlt loopne int3 je test cltd cmp xchg cmpsl jnp mov jb mov mov repnz rex.W stos xor push jl (bad) rex.B mov jo (bad) rex.W (bad) gs movslq pop mov (bad) xor pop (bad) icebp out xor xchg (bad) pop mov rex.WB data16 or xchg jmp and iret rex.X gs addr32 pushfq loopne lock mov mov rolb (bad) (bad) loopne movabs or mov cmp cs callq (bad) add sbb (bad) rex sbb or cltd mov push (bad) insl cmpb push out adcl rex.WRB sar adc loopne rex.WRX mov leaveq rex.R (bad) mov fistpll pushq pop cli lods mov xor xchg fstpl and movsb shlb scas movabs loopne mov jmpq sbb jb fnop stc and fdivr in mov leaveq loope (bad) movabs xlat (bad) fsubl out mov or jle (bad) sbb test (bad) xor and sub addr32 scas stc mov pop sbb lods sbb xlat cld fwait rcll out jrcxz imul movabs jmpq pop test imul xor (bad) loop movslq adc repz fmuls jle mov adc callq in adc add cmp clc cltd (bad) sahf gs pop sarb push out or adc mov rex.WRXB movabs jns data16 fnstsw jmpq ds pop sarb (bad) mov push pop push pop lret pushq loopne mov (bad) (bad) out movabs pop rex.WRX test leaveq sbb (bad) clc (bad) xorb mov or enterq (bad) mov clc ficompl or push rex.WR in xor pushq rex.RB lahf jp and cmc jg rex.RXB xlat xor in (bad) js fsubs xorb mov addr32 (bad) lock int retq mov test adc test or sbb clc or jns ficoml loopne jbe test cmp (bad) xchg push (bad) vaddsubps add in clc sub mov movabs pop sahf rcll sbb cmpl (bad) (bad) (bad) jmpq loopne adc std or mov jle (bad) repnz out in rex.WRX iret fisubl push cmp lret out (bad) mov movslq (bad) xchg sti xlat sbb imul (bad) rex.RXB or sbb (bad) in or xchg adc movabs xlat cli fsub rex.WX mov and and (bad) xchg jae xor addr32 (bad) out testb xor and retq jmpq jae mov xlat repnz rolb (bad) in cmp rcrl lret jne cmp and (bad) (bad) rex.RX lock mov pop (bad) (bad) mov (bad) (bad) test clc in jo adc (bad) cmp lahf in (bad) jmp js movsl xor leaveq popfq jp mov (bad) add std (bad) imul int3 outsb mov (bad) add (bad) pop cli (bad) enterq mov out add loopne es mov loopne mov movabs sbb cld jae lret fsub sub and (bad) loopne sbb (bad) lahf outsl and pushq xlat callq mov (bad) frstor (bad) or retq adc rex.XB rex.WR adc lea sub xchg (bad) (bad) and add movsb test lock stos loopne push sub in repnz rex.W (bad) pop xor rex.WR xor xor rex.WRXB sub mov sub rex.X (bad) stc ficoml (bad) rex.WXB ds mov adc xor (bad) cmp jg rex.X jne xchg and mov adc out jbe ss shl and iret jl outsl mov addl mov and movsl movslq loope sbb int jne insb adc sbb scas loopne mov (bad) (bad) loopne rex.R (bad) xchg addr32 push (bad) loopne add loopne (bad) (bad) mov (bad) (bad) jne (bad) or fmull idivl loopne insb jne xorl rex.WB (bad) out (bad) xor sub rolb icebp xlat push pushq loopne adc jg loopne fcmovnb mov pop add (bad) jb xlat pop sar icebp loop lock rol pushq test (bad) cltd xchg push cli callq (bad) (bad) push adc (bad) movsb in cmp hlt sub jmpq (bad) decl rex.RXB rex rex.WXB fs xchg jo rex.WX pop cmp loopne pop insl movsl insb add push rex.X imul jbe (bad) rex.W callq lret movsl loopne add std rex.XB lret xor jge out fs add (bad) (bad) rex.WR sar lea sti (bad) or hlt (bad) cmpsb or adc adc and sub mov xchg loopne jnp jno sahf xchg (bad) loopne sub icebp outsl pushfq rex.WRB repz cli loopne retq rex.RXB out outsb fnstsw jp add sahf adc in (bad) movabs pop repz loopne mov pop flds pop mov leaveq mov rex.WB mov loopne rex.WRXB mov sbb repnz cli rorl rex.XB sub retq out jnp movabs xor sbb movsl xor loopne sub (bad) mov pop shll push rex.WB (bad) (bad) rex.RX movabs mov (bad) icebp movabs cltd mov (bad) mov stc push add int3 jmpq in fmull pop (bad) (bad) mov loop lods in sar movsl popfq mov xlat adc pushq xchg fs fs pop jg mov int add sbb outsl mov ja loopne in notl adc rex.XB sarb (bad) scas rex.R divb push or shrl xor rex.RXB sbb movsb mov leaveq movsl fcomps out adc or lods retq cmp sti and jl jmpq int test cmpsl rex.WX mov rex.RX cmp jnp mov stos loopne in xchg (bad) jns push (bad) sub xchg andl gs rex.W repnz loopne ficomp (bad) repz and (bad) shrl push in cmp cmp sub (bad) sbb or in rex.W cs xor xor jle sbb jg clc retq (bad) fnstenv cld loopne (bad) lret mov idivb stos mov xorb rex.RXB rex.WRX cltd loopne cmp (bad) pushq (bad) loop fcoml rex.WXB mov sar ds (bad) mov (bad) (bad) retq mov (bad) cltd enterq cmpsl (bad) fimul (bad) xor jmpq mov out pop push cmp loopne xchg (bad) in int3 (bad) loopnel cld xchg xchg or loopne sub test out mov (bad) pop outsb movsb insb andb insl sub cld loopne,pn in fildll loopne js (bad) mul sahf (bad) out sbb enterq push cmp mov add and (bad) (bad) sub rex.WX adc retq out loope lods imul push (bad) lret lahf sbb mov mov sub sahf (bad) fcomps and fmuls xchg gs addr32 fnstsw shr adc pushq (bad) sbb sub sarb push rex mov rex.RX sub cwtl mov callq mov sbb callq pop cwtl sub fist (bad) fnstcw test jrcxz lods add fwait out (bad) pop mov nop out sbb push and mov (bad) jle fnop out repz (bad) (bad) (bad) xor (bad) test pop cmp (bad) lret (bad) out scas xchg mov or (bad) icebp sti xchg out cmp jo and jnp sub outsb pop data16 jg testl mov or (bad) and pop (bad) (bad) adc fwait sub (bad) jbe push jns mov pushq mov fs xchg sbb js lods pushfq or cmp stos in rex.B rex.RB adc in icebp jno xchg (bad) cmp movslq rex.RB add adc retq xchg mov icebp rex.WRX loop (bad) sti std int jbe pushfq push sub rorb lods (bad) adc push test (bad) loop outsb cmp xor sbb (bad) (bad) (bad) adc jnp rex.R mov insl cmc mov pushq pop callq jne sbb add and in or rex.WRXB outsl lea cs jbe repnz mov out (bad) jo lahf cmp (bad) roll jbe rex.RX pop popfq jo xor xor addl (bad) fisub or icebp cwtd rex add and fistpll jnp dec enterq and sbb add cmpsl jl cmp rex.X xchg (bad) loope xchg sar movabs add mov (bad) cmc (bad) in mov pop icebp mov hlt popfq movabs pushq gs roll (bad) sbb cltd mov sub pushfq fsubs pop (bad) (bad) cld iret out xchg mov adc loopne jp jbe pop jmp in mov mov (bad) neg sbb xchg loopne in rex pop rex.WRXB cmp cld pop xchg je loopne cmpsb shrl mov fbld callq idivl in rex.WRXB lods sub rex.W int jmpq loope mov roll mul ficomp mov rex (bad) in loopne lock xor scas hlt (bad) bnd or loopne stos roll pop iret (bad) in je stos push sub sub mov lcall fdivl sub shr movabs cli push add xor sti xchg imul mov (bad) test and in outsl rex.WB (bad) (bad) (bad) mov jne pop loopne sub push xchg cmp shlb xor addr32 loopne mov adc jmp xchg mulb sbb lret pop loopne pop rex nop rex.WB push lret clc sub (bad) scas retq pushq (bad) or lret loop movsb mov xchg fcomps in test xor shl negl add cwtl and outsb cmpl in and hlt pop xchg std loopne (bad) mov cmp jo jrcxz movabs lahf adc ljmp jnp je mov shrl movabs gs loopne sbb or lods cmp sbb push xor sbbl jmpq sbb loopne sti sbb pushq nop out (bad) jl loope pop push pop add rex.WX loopne movslq cltd shl (bad) push orl cmp (bad) xor add cmp (bad) mov (bad) mov sub push scas (bad) out jrcxz pop jp xchg or loopne (bad) outsb sub and jp loopne rex.WRX repz xchg jrcxz sbb (bad) pushq loopne icebp mov (bad) in mov scas stc mov loopne jmpq adc cmp pop cmp scas loopne paddb adc movabs pop (bad) outsl js jle rex.B rex.RXB rex.R fs add lods pop mov sub scas jae and fsub in jle loop or test jne movabs lods cmpsb fdivs sahf push std in cmc lret (bad) jle lods xor es insb xchg (bad) mov fnstsw rorl pop cmp push add negl xlat mov data16 rolb (bad) (bad) adc jbe movslq sbb loopne lock cld loopne popfq (bad) loope mov rex.WRB loopne fdivrs nop jmpq pop (bad) imull add sub rex.WRXB cltd (bad) bnd loopne enterq (bad) pushq popfq push retq test xlat stos in (bad) lret rcll xchg xor push push cli cmpsb cwtl icebp out scas adc loopne (bad) (bad) cmp xchg repnz add (bad) in sub push mov in loopne pushq movslq sbb sbb ja push je adc in (bad) add rex.RX loopne cmp sbb or loopne jmp mov clc mov js xor sbb test out mov (bad) pushq rex dec mov adc mov add mov movslq lret (bad) (bad) rex.WXB cmp pop cmp in lahf (bad) sub test xor (bad) imul mov xor scas cmp hlt sub and (bad) mov test lock mov je pushq (bad) sub addl cwtl mov lret fidivl psrlw pushq retq scas sbb movsb xor in sbb mov mov xchg rex.WRX pop icebp mov stos retq jg push stos push imul (bad) outsl ss xorl jmp in mov insl (bad) loopne push callq imul (bad) mov jmp shrb push (bad) push sub or loop xor loopne mov mov mov rcrb movsl cmp mov sub (bad) mov or xor push movsb (bad) ss loopne add mov or (bad) callq out rex.R rex.WB cmp add lods repz cwtl fwait xchg jo or cltd ljmp xor adc int3 movabs rex.WB fs adc (bad) xchg cmp (bad) (bad) jg dec (bad) (bad) jns lret sbb rex fwait xchg movsl fcom repnz (bad) icebp xlat rex.RXB xor movabs addl add fistpl fmull push cs xchg xchg mov sarb callq fstps xchg loopne mov push rex.WXB rex.WR rex.RX (bad) (bad) lea (bad) sbb cli lods (bad) fdivrp mov jnp fsubrl pushfq push shll (bad) sbb out movabs (bad) (bad) xchg ds xchg cmpsl xor cld or movabs xor loope loopne xchg pop adc (bad) pop jns sub loopne (bad) xlat rcrb mov rorl popfq es rex.WRXB mov movabs out cmp (bad) rex.RXB fs stos sub and mov sub cs callq adc vmwrite (bad) cmp fsubr (bad) jnp xor rex.WX shlb jrcxz adc test loope lahf and out (bad) add test pop or mov jne gs std mov xchg callq (bad) test cs movsb xchg jnp in pop adc callq movabs addr32 out cmpsb cwtl and rex.WB xchg (bad) icebp insb (bad) mov jl addr32 outsl jl mov cmpsl (bad) movsl jrcxz push adc mov jl (bad) in xchg (bad) rex.WXB (bad) sbb outsl and push (bad) movabs jg (bad) (bad) pushq rex.X add iret leaveq addr32 jmpq scas rex.WB test es jnp adc jge (bad) sub data16 rcrl ror add cs pop (bad) in test in (bad) pop ja cmp (bad) (bad) lods add xor insl in mov cli lods movsb add leaveq iret (bad) cmp cltd icebp or pop xchg (bad) imul and (bad) mov fadds and sbb mov callq outsb jg fs leaveq fnstcw (bad) adc callq (bad) (bad) movslq (bad) add sub cmp (bad) loopne iret jl mov enterq vcmpsd fsub rex.B (bad) (bad) lods rex sti mov outsl jae fwait nop mov je or out pop xchg stc add insb (bad) rex.WRXB (bad) lods icebp jno xchg data16 fdivs leaveq rex.WRB mov mov jae or (bad) out xor pushq popfq loopne mov cltd xlat loopne jb (bad) add jbe cmc (bad) xchg sub loopne loop and sub or je imul rex.WRB (bad) mov and stos rex.W (bad) loopne rex.WXB repnz xorb iret loopne (bad) adc cli xchg mov rex.WX outsb sbb or (bad) add pushq in enterq mull clc rex.WRX cmc jno rex.WRXB (bad) shlb (bad) (bad) pushfq loopne fstl (bad) fcoml or imul js nop lret and (bad) pop rex.XB je jp and jo adc mov clc loopne rex.WRX xor cmp jae fidivr loopne movabs imul or rcrl (bad) cwtl adc out loopne cli in sub xchg icebp in add stos movabs cmp test rcl loopne jle pop or fdivrl rex.WRXB rex.WRB jbe callq data16 std in (bad) movsb or andb fstpt gs add fs in sahf nop adc rcrl push sub xor mov (bad) fdiv movabs and mov stos mov and test jge (bad) xorl lahf mov loop test jnp int sbb pop loopne cwtl movslq lods xchg rcr loopne cmpsb cmpsl leaveq sbb nop mov push loopne mov xchg rex.RXB add icebp xor ja andb lret jo or icebp (bad) mov leaveq jae xor sbb rclb adcb push adc pushq mov es loopne cmp xchg rcl pop loopne roll rex.WRX (bad) loope (bad) add xchg insb (bad) loopne sbb jbe sub rolb test mov add (bad) je jbe insl adc (bad) pushq (bad) out enterq adc frstor test (bad) (bad) mov push rex.WR test fisub push or stos clc out fisttp (bad) icebp xlat mov jne (bad) clc add mov movabs and jrcxz (bad) mov stc ds gs loopne add enterq mov sbb (bad) mov (bad) int int jmp lods cmp iret xchg fnop movabs (bad) out xchg popfq lods (bad) loopne iret (bad) jbe outsb push and (bad) sbb in (bad) mov fildl (bad) adc (bad) (bad) leaveq (bad) sub lea mov push cmc push pushfq (bad) xor (bad) xor jb sbb out andb cli icebp sbb movabs sbb rex.R mov sbb loopne fistl mov mov int3 xor outsl (bad) frstor loopne mov loope in xchg fwait mov loopne in xchg sahf jae rex.RB rex.XB loopne (bad) mul jp in jge mov rex.R enterq loopne sub mov (bad) adcl stos rex.WX or jle or cli (bad) loopne mov rex.W adc (bad) mov cmp cmp clc loopne negl retq sbb xchg nopl (bad) int3 int loopne gs popfq xchg loopne cltd insl mov fwait out rorl scas mov imul rex.RB gs cmp in and test rex.WRB hlt adc (bad) out pushq loop jbe (bad) movabs cs ss insl or sbbl push repnz addr32 jle adc nop insl rorb rex.RXB lea lock gs addr32 cmp push cmp push in mov retq cmpsb xchg mov mov out fisttpll stos loopne (bad) push xor sub insb adc pushq hlt lods jp mov fist pushq mov (bad) xchg and callq loopne jle addr32 push shr (bad) scas xchg xchg iret movabs mov ja rex.WRX (bad) (bad) test sbb jmpq loop ffree jl loopne xchg pushfq std or out sbb rex test mov rex.RB rex.RX mov or sbb cmp cli shr and mov jae jnp and popfq mov push (bad) (bad) ja fdivl mov sbb outsb (bad) cmp pop or callq (bad) js icebp jle push mov movsl rex.RB enterq mov rex.RX xor fadd adc test (bad) outsl (bad) test shr test rex.WR adc test (bad) retq sub nop imul mov sbb lock mov adc add jge pop (bad) and cmc (bad) sub push pop jo mov xor (bad) in fwait or testl (bad) push lahf rex.RXB push subl push sbb rex.R mov movsb jrcxz (bad) mov and lret sbb fdiv je or (bad) (bad) pushq (bad) (bad) rex.WRXB rex.R iret (bad) ror bnd js insl callq rorl repnz pop addl (bad) out mov xchg lods xchg (bad) ja mov mov (bad) ds mov js cmp mov lods or ds jmp push rcrl rex.W sub (bad) mov outsl rex.WRX test cli out rcrl add fdivrl or decb push and (bad) mov mov jmpq jns icebp pop (bad) cmp (bad) add out callq (bad) ss sbb sbb loopne (bad) mov fs test in pop scas sbb mov mov in rcll (bad) lock (bad) and (bad) lods jae sub leaveq out lcall notb pop in push cmp mov jne repz loopne test (bad) jo movabs push mov jmpq xor in rol jns xor rex.WXB retq sub lret pop xor cld jg add out xor ja,pn adc loopne rex.WB (bad) (bad) repz (bad) clc rex.WRX (bad) fistpl or cmp cmp sub loopne rex.RXB lock out pavgb rex.X stc loopne xchg rex.WRXB cmpsb retq outsb mov (bad) callq add cmp (bad) jmpq push (bad) data16 pop mov outsl ss pop jp cmp jmpq sbb std loopne fistp cmp shr cltd push (bad) push rcr (bad) scas (bad) rex.WXB (bad) idivl push cli jbe fldenv mov stc xor mov mov (bad) (bad) test (bad) lret popfq (bad) loop in cld xchg movabs cmp mov pop (bad) jrcxz cwtl stos loopne xchg (bad) mov gs push jrcxz nop rex.WB mov jno fwait idiv int3 pop (bad) lsl or (bad) rol cs or test jns pop repz jrcxz (bad) push loopne rex.B retq mov add xchg adc or sbb push jp fcomps (bad) nop adc (bad) mov movsb mov and adc rex.WRX adc sbb cli and add movsb mov rex.WXB (bad) (bad) push pushq stos sbb sbb add shrl or and fcoml jmpq cld rol int3 test mov add xchg sbb cld (bad) xor cmp add sbb pop movabs sbb (bad) loopne xor sub lret jmp pushq hlt (bad) push gs rex.X callq mov rex.RB (bad) (bad) jno movabs repnz adc pushq ja lock (bad) mov xchg fdivr rex.WRXB gs mov pop or sbb loopne cmp int3 jne mov (bad) lret jge mov std frstor imul rex.X data16 sbb jmp (bad) cmp adc xor (bad) stos adc loopne (bad) add pop xchg pop loopne sbb sub je xchg (bad) cmp jno fwait push sti jmp loopne rex.XB and negb enterq jrcxz (bad) add pop jrcxz pop cltd add (bad) loopne xchg jmpq sub cmpsb cmc shl in (bad) movabs (bad) push in loopne in xlat rex.XB and test nop std (bad) (bad) fnop scas (bad) in add mov (bad) loopne (bad) push (bad) cld cs (bad) loopne jae cmp sahf and push retq sbb popfq jae pop (bad) movsb or and retq pushfq (bad) and or int3 mov and adc jp jae or mov adc ficompl out jg cmp (bad) sub add (bad) loopne mov add push push loopne (bad) movabs orl negl (bad) and test or jle loopne (bad) hlt add (bad) sbb loopne xchg push pushq sbb cmp sub paddsb cmp jb add iret xor (bad) movabs movabs xor enterq lahf loopne imul add push enterq loopne rcl xorl pop rep mov mov push movslq iret int3 js rex.WR rex.RB add rex.WX loopne (bad) stos mov mov cwtl loopne jle ja and pop push callq pop in lods sarb insl add nop loopne sbb leaveq rclb lret js rex.RX insb divl push cli in (bad) (bad) and mov punpcklbw iret mov sarl imul or (bad) and mov loopne rex.WX loop (bad) gs js mov fldl or xor out in adc jg out adc xchg adc loope cmp scas jno movabs fstps mov or rex.B in cwtl loop jrcxz sbb (bad) in mov (bad) jae rex (bad) xchg cmp or roll xchg adc sbb retq xchg sbb sbb fstpt mov retq (bad) cmp cmp (bad) imul jrcxz sbb outsb nop xlat icebp pop (bad) and fcomps movabs std scas repnz pop pop iret rex clc pushq xchg add sub push lahf and loop orb test punpcklwd (bad) rex.B sbb (bad) movsb xchg test jo in out mov (bad) mov or pushw sbb mov scas sub (bad) icebp movslq sti cld cmp (bad) or rclb (bad) xorb rex.XB jge (bad) sti cmp fs or cmp shrl movabs (bad) pushq jb in cmp rex.WRB cmp xchg xor icebp add xor jae fcomps add jnp adc cmovp insl adc sbb ss sub adc pushq (bad) mov add stc gs push (bad) mov rex.WR sbb shr (bad) sahf insb cwtl retq icebp mov (bad) movabs fmuls adc movslq stc sub pop notb pop loope in (bad) jg pushq (bad) rex.WRB outsl mov (bad) jmp or xor or mov mov (bad) rex.R jae out jle outsb in cmp (bad) fildl test push cs (bad) in cmpsl cwtl addr32 hlt mov sub loope js repnz pushfq jne in testl (bad) leaveq scas sbb jl enterq jae (bad) or jne mov iret iret cmp movabs fcomi and in jne sbb rex.R rsm pop movsb cmp jb hlt jmpq (bad) pop outsl jg rex.WRXB (bad) loopne lods xchg sahf mov int3 in loopne (bad) icebp movsl xchg insb retq retq movslq xor or in mov jp lock push (bad) loopne icebp out (bad) (bad) add in mov and iret loopne nop (bad) mov sub xchg fiaddl repnz rex.WX mov rex.WR lock sbb sbb rex.W cmp rorb push xor pop (bad) jmpq mov mov xchg push xchg outsl loopne or rolb or cmp xchg (bad) icebp movabs (bad) loopne push out icebp push xor (bad) xlat rex.RX add scas or xchg rorb loopne (bad) sbb cs rex.RX (bad) jmpq push (bad) mov or mov mov mov in and xchg rorl sub loopne (bad) mov ds xchg (bad) loopne (bad) rex.R retq iret mov stc (bad) loopne jmpq (bad) loopne test cmp cltd (bad) xor xor jmpq cmpsb sub adc (bad) rex.WXB rex.WRX cmp adc xlat or (bad) fnop mov xor push test and in mov adc fmull movabs loopne in (bad) (bad) or pop xchg std fsts and mov scas sbb (bad) stc cmpsb or test push xor xchg pop jmpq rcrb xchg pushq mov and (bad) sub callq mov mov movsl (bad) out pop sub rex.XB jle add sar js (bad) cltd loopne rcrb jb (bad) fwait cmpsb out and shrl loopne retq fdivr or hlt rex.WX sbbb lods rex.X loopne rex.R loopne out add out cli (bad) in cmpsl jo movabs jle xchg popfq mov rex.WR sahf movabs (bad) mov loopne adc xor and mull cmp loopne rex.RX xlat mov movabs add in int3 ss lret stc rcrb and jmpq fs shld loopne (bad) rex.WXB sti (bad) movslq mov sbb cmp cmc cmp or mov ds (bad) shrl mov sub and nop scas mov loopne test xchg ror push rex.B movsl fistp cmp movabs sub or movabs mov iret mov repz add cmpsb (bad) test shr fcmovu fimul fmuls insl movabs sub loopne sbb mov (bad) adc rex movabs and fwait idiv cmpsl pushfq rex.RXB or data16 jmp sbb icebp xor callq fcomp (bad) in (bad) add mov (bad) and jmpq jb or fsub shr xchg adcl mov jg repnz test loopne lock pop out cmpsl loopne mov pushfq idivl push in (bad) jo loope mov sti add pop insl fwait sbb sbb sbb push (bad) in push and or fidivr mov (bad) fiadd scas (bad) in test mull rex.WXB loopne jl (bad) insl rclb jns movslq jmpq (bad) cmp cmp (bad) icebp push xor out loopne xchg xchg lret (bad) (bad) mov and jb rex.XB rex.W data16 repnz sbb adc out imul test (bad) rex.X pop add movabs adc loopne xlat stos fildll fnstenv scas (bad) and cli xchg loopne retw loopne in sub (bad) mov cmpsb (bad) je imul or loopne sti jns mov repnz push outsb movsb repnz or imul (bad) cld rex.WB jmpq xchg mov or fwait sbb xchg (bad) fnstenv rex.WXB retq callq rex.XB loop push cs rex.X mov movabs jp cmp icebp nop fadds test stos add (bad) push leaveq jl and rex.WRX flds add lret (bad) out xchg (bad) (bad) je fcoms push sbb jo cli and (bad) jno (bad) add clc fs in add push push jmpq movsl and out lret mov (bad) jl test int3 rex.XB sbb loopne out (bad) rex.WB rex.WR pmovmskb mov roll add (bad) fdivrl lret (bad) leaveq int addr32 loopne int ja xor rex.RB pop or and mov push jnp loop jno rex.W or in jne sub (bad) jg (bad) retq xchg rex.W outsb (bad) push ss adc mov rex.R pop xchg mov pushfq and (bad) fiaddl or cltd (bad) popfq mov xchg mov loopne (bad) lcall (bad) or jns sbb rex.WX mov jle xlat pushfq stc push add sbb jns pop ljmp jae,pt xchg (bad) out fisubl test pop shrl in js jns mov fisttpll sbb sub lock (bad) sbb roll sbb retq rex.WXB push out movabs jne rsm pop (bad) repnz (bad) stos xchg xor (bad) mov adc mov sti (bad) rex.WRX sub hlt insb add jrcxz xchg and pop xor (bad) jo shll and addr32 sub sbb icebp push adc movabs ds mov adc mov (bad) jge (bad) mov mov pop and or add loope out rex.WRX adc (bad) jo or sbb leaveq and (bad) xchg enterq lods and cli xchg fild (bad) shrl rol or push sbbl fsubrs rorl sub icebp rex.WRX ds ds adc scas push in int3 xchg sbb std test mov mov movabs mov nop (bad) (bad) fbld cmpsl icebp movsb xor scas mov push xor (bad) loope lret (bad) movabs (bad) xchg (bad) fs xchg in (bad) (bad) pmulhw hlt rex.B lock repz jle (bad) rex mov mov int3 rex.RX rex.WXB callq stc (bad) xor xchg adc rcll (bad) (bad) test decl leaveq fstpt adc test out pop sub rex.RXB outsl sub (bad) jne push gs xchg (bad) hlt jmpq cmpb mov insl cmp (bad) jae loopne sbb in push mov rex.XB xor adc in xchg cmp mov jmpq adc cmp xor (bad) loopne cmp push faddl cli cmp out ds leaveq jae sbbb and xchg lea mov rex.X mov rex.WXB out or (bad) jne rex.WRXB imul fdivrl add add push cmp loopne outsl xchg (bad) (bad) and repz cmp and adc add rex fsts mov stos or sar iret (bad) lahf loopne (bad) xor fstl rex.B loopne (bad) (bad) pop jae rex.WRB xor (bad) pushq jb int3 add loopne jnp cmc xchg cmp loopne movsl stc roll or in rex.WRX jmpq jmpq mov (bad) loopne rolb loopne sbb hlt sub (bad) and xor mov repz mov (bad) jmpq (bad) lods and test lock rolb loopne and fwait rcl (bad) adc cmpsb movabs nop adc (bad) (bad) rolb fsubs movabs and mov add cltd repnz incb jp push stc jbe movabs cltd xchg sub (bad) jno in jb scas andb jmpq adc outsb lret out and xchg (bad) fidivr hlt add jle ds imulb in xchg xlat retq int cmp rex.RXB lahf xor loopne hlt callq (bad) (bad) rex.WRX loopne retq in (bad) loopne cmpsb jae add fdiv adc pop cmpsl in (bad) (bad) mov sub (bad) sub cmp pushfq xlat and rolb scas fnstsw jg retq (bad) (bad) cltd loopne or rex.WB xor mov rex adc (bad) jns pop (bad) or add xchg rex.RXB outsl scas (bad) loope rol loopne xchg movsb add push decl pop icebp or (bad) int3 outsb rex.WR loop xor adc add loopne mov jns shlb rcl (bad) xchg or js jp movabs add add xor jno jae rex.B ja insb lock adcl in (bad) lea popfq cmc sbb movsl adc out lock mov out addr32 mov rex.WR sub add rex.WX fisttpll xchg test cmp in mov loopne (bad) push push retq and in and loop cmp rorl and mov pushfq (bad) mov rex.WRXB roll and test stos imul test loopne retq rex.W rex.WRB adc (bad) mov or scas movabs mov adc loopne sbb or test and movabs rex.WXB rex.X es idivl xor in xlat (bad) or jns fs fimul sti rex.RXB addr32 sub pop xor or and xor jl mov pop add (bad) or lahf sahf adc cltd sti (bad) jno mov jmpq sub mov rex jo or loopne mov (bad) pushq cld mov or mov movsb repnz or adc lock rolb leaveq loopne cmp xor lret pop push (bad) mov sub loopne (bad) pop and insl mov (bad) push mov add jo callq cmc fs sbb add in imul stos rex.WX pushq jnp mov addb (bad) and (bad) jns push retq jrcxz (bad) cltd mov pushq in fstpl rclb cwtl mov (bad) clc and jge (bad) (bad) int rex.W hlt (bad) push xchg (bad) (bad) pop push sbb sahf sbb mov adc sbb add (bad) push rex.R rex.RXB addr32 icebp jnp in (bad) (bad) sub jo jp sbb mov (bad) xchg out outsl mov jg cmpsb rcl mov ds (bad) repz jmp and out outsb mov cmc cltd fstps std incl (bad) jno pop jmpq fldenv lock callq mov or mov lahf cmpsl jrcxz loope mov addr32 clc shrb ficom jbe cs jmp adc mov fisttpl pop push leaveq int jp sbb rex.WRB mov and push mov xor icebp (bad) iret and scas xchg cld mov or or sbb in enterq adc lret mov movd (bad) jae mov jo mov cli std and rex.RX mov data16 vsubsd data16 (bad) ss add push scas (bad) rex.WB shrb icebp (bad) (bad) adcb xor xchg repz (bad) adc rex cld (bad) decb rex.WRX rex.WRX mov vsubpd imul mov mov (bad) (bad) (bad) cmpsb sbb lock rex.WR je cmp icebp pushq rex.WXB (bad) shl add pop mov push sub pop jnp loop test scas rorb outsb mov retq mov xor incb in jae rex.RX adc cli mov mov movabs (bad) pop adc (bad) gs rex.WRX or rcll (bad) (bad) lahf sahf add loop jle xor (bad) mov mov pushq in (bad) fdivs push out xchg je shlb mov push data16 imul (bad) xchg mov rex.WRB js (bad) lcall rex.WR rex.X fdivrs data16 (bad) sahf sbb xor loopne (bad) (bad) pop sarl scas loopne (bad) out enterq popfq cli rex.RB loopne out fldt rcr loopne in jbe (bad) or stc loopne mov adc xlat rex.RX rex.R cmp (bad) rcll (bad) adc loopne mov cmp jmpq fidivr imul js loopne cli jnp test movabs xchg hlt es test cmp rex.WRB loop add xchg rex.RX xchg cld popfq mov movsl mov loopne lea in adc cmp clc (bad) add mov loopne cmp cwtl loopne iret mov (bad) sbb (bad) icebp (bad) push cwtl sbb (bad) pop (bad) movabs loopne shr fs movabs pop lea and fist cmc push loopne xchg xchg retq sub mov jns rex.R sahf mov pop test (bad) lods mov xchg icebp int3 (bad) jp shlb xor loopne or loop add rex.RB rorl sti movslq stos sbb xchg push xchg test sub pop adc rex.W xlat or sbb int rex.WRX test cs loopne push jne mov xchg rex.WRXB stos mov or icebp xchg mov mov xor in push ss (bad) pop and mov pop loopne fisubl (bad) (bad) js mov (bad) jae jnp (bad) in xlat mov sbb mov loope rex.WB fadds repnz stos sbb test retq subl sarb cmp lret xchg sub test sbb adc mov (bad) movabs mov jmp xlat data16 jbe movabs sahf movabs cmpsb fmuls imul push push push jrcxz xor rex.X (bad) jne imul rcrl cmpsb mov jns in sub outsl push xor add or cmpsb sahf fnstsw mov jnp shrl imul loopne (bad) scas (bad) mov mov adc nop loopne cmp out mov pushq test lret outsl sbb loopne repz cli loopne retq iret xlat rex.W loopne xchg (bad) cmp sti add jno (bad) mov loopne rex.WRX jle loopne pop mov mov in or loopne mov (bad) add adc js lock xor and in rex.RX adc loopne mov out in (bad) ds movsb (bad) andl loopne int rex.WXB (bad) or loope fcmovnu scas cmp outsb jbe pop push add es (bad) movabs and rex.RXB (bad) loopne rclb fnop test mov push test pop xor in mov jmp test loopne (bad) hlt adc cmp lret (bad) outsl and adc mov (bad) cmp cltd enterq out sarb int jne xchg stos loopne xor and fstpt loopne pop fsubrl repnz mov cmp std xor (bad) loopne (bad) mov callq test mov sbb and adc (bad) cmc jo pushfq loopne pop sahf (bad) mov (bad) cli (bad) stc flds mov in or repz jo pop cmpsl icebp mov in (bad) ds (bad) enterq push (bad) cld pop xchg andl add or cli loopne mov (bad) sub jnp repz and cmc (bad) or mov adc addr32 stos (bad) loopne (bad) mov rex.WX movabs cli push loopne mov adc rex.WRB test std scas (bad) and (bad) cmp rcr xor cmpsl mulb loopne (bad) sbb rex.WRX jg in cltd (bad) ss cmpsb loopne fisubrl movabs (bad) mov add xchg cmp xchg icebp loopne xchg test fnstsw push sbb adc fsubr (bad) (bad) mov xor xchg loopne in mov (bad) xor movabs (bad) callq push (bad) shl shlb cwtl mov rex.RXB ss fisubl and pop loopne iret adc test sub imul ror (bad) mov cmp scas add mov ljmp xor insb rex.B mov or movabs scas mov adc loopne cmp jb adc sbb mov js jp loopne rex.R movsl mov loopne mov jl sbb rex.WRX (bad) sbb (bad) loopne movabs sub pushq lahf in (bad) loopne xor jl lret stc jrcxz add and and loopne sub leaveq xchg (bad) scas rex.WRX rex.WR std test test icebp roll push push gs in (bad) callq stos and insb pop ljmp cmpl subb lea add lods in mov jb out rcr jns mov rex.WXB fbld adcl loope xor adc (bad) sbb fsubs jge (bad) sub adc movabs add xor int3 lret in pushq (bad) push xor out jrcxz xor lods cmp jmpq jns pushq and xor (bad) xor mov out nop imul js (bad) sub shrb cmp (bad) or sbb fisttpll (bad) and xor (bad) jrcxz and rex.WRB mov pop add push outsb jl (bad) repz rex.WR repz rex.RB (bad) rex.WRX rex.WX jg mov ss (bad) sbb rol rex.R rex.RX jnp fmul jmpq insb xlat rex.R xorl rcll sbb lret mov lock rex.XB rex.WRXB movabs or repnz fimull (bad) rorb (bad) icebp xor or (bad) cli push lret cmpsl mov xchg rex.RXB sbb mov ffree jl rcrb in sub add mov fcmovnu and cmp cli jle outsb fcomi xchg adc (bad) jnp repnz jrcxz movabs (bad) add rex.RX jnp lock jns int rex.WRX pop shll pop (bad) rex.XB (bad) (bad) in cwtl loope fs jrcxz mov imulb repnz callq jl cmp xchg fistl (bad) lock (bad) icebp sbb pop adc movups (bad) mov and xchg (bad) rex lea mov imul mov and and (bad) shrb xchg repz sbb sub out xchg rex.WRB addr32 stos (bad) xor (bad) (bad) xchg jge or xlat mov add mov cli (bad) hlt movsl movabs jg add movsl adc in ds fwait hlt jmp movsb (bad) clc mov (bad) cmp out xchg popfq push imul and cli cmp insl push movsl sbbl mov pushq and cmp rex.RXB sbb and out sahf test sbb int3 (bad) adc (bad) mov (bad) lea (bad) (bad) lahf or faddl out test or rex.R (bad) fs pop (bad) cmc stc mov push rex.WXB and xor adc push (bad) loopne (bad) out out or cmpsl loopne lea mov sub scas (bad) xchg cmp out rex.RB cmp pop stc fstps test mov fdivrl adc pop (bad) iret rex.WXB and jns (bad) push out retq addr32 and mov pop xor pushfq lods xchg sub clc xchg mov mov stc int sbb sarb and movsl dec xor cld movabs stos add rex.WRXB sbb (bad) (bad) lahf cmc push (bad) imul in cltd jrcxz loopne sub xor nop stc std push movabs rex.RB lea xor (bad) mov cwtl cmp mov int add lret mov (bad) jno loopne stos add (bad) or mov subps (bad) jbe (bad) leaveq out test xor loopne (bad) and in rex.X cs shrl mov (bad) mov cmp add lock (bad) mov pop (bad) jbe sti pop (bad) (bad) movsl mov rex.XB es xlat mov (bad) or xchg sbb xchg loop (bad) xor out loopne cli sub and adc in sbb movsb cmp (bad) lea (bad) loopne jmpq add cmc loop rex.WRX rex.WX pop pushq rex.RB sbb mov adc in retq push repnz (bad) (bad) sub (bad) jne fwait xchg jae cmc rex.WR es rex.RXB rex.WRX mov push (bad) rex.X repnz retq rex.R data16 cmp movabs add sbb jmpq or loop int3 (bad) rex.WR sub adc rclb imul cmp and rex.RB add stc and lods callq in (bad) movsb or mov and push push loopne mov push jbe pop or mov pop (bad) rorb in mov pop jb rex.RB fwait or (bad) insl scas jge (bad) rorb jp and sar or jne rex.WXB testb rex.WRXB (bad) loop rex.R sti mov sub callq (bad) and mov mov clc adc or bswap lock mov lahf (bad) or mov xor jl adc (bad) addr32 rcrb test rex.RB es leaveq jae int3 rex.RXB adc mov mov and pop rex.WRXB xorb adc jp repnz addq lahf push loopne cmp lods not loopne mov xchg sahf mov sbb rex.RB out (bad) out cmp rcll jno pop movabs pushq push loopne sbb rex.WRB lahf (bad) cli xor (bad) sbb sbb js cmc mov mov in stc pushq ficom jb rex.RXB int and leaveq adc xor push loopne or insb loopne add or mov data16 (bad) out jrcxz repz cmc push fwait in test loope jge mov clc mov (bad) (bad) mov fxtract (bad) mov mov shl (bad) xor mov (bad) movl jmpq sub in xchg fchs hlt (bad) and pop enterq xor jnp lret repz and enterq mov (bad) mov jbe callq rex.WR rex.RB imul xlat test (bad) push jne movabs cmp fs (bad) push stos movsb mov repz andb fstpt xchg mov mov (bad) sahf mov loopne subl or stc leaveq pop mov movabs and cmpsl xor jmpq cwtl loop int3 out rex.WX mov fstl loopne pushfq lret cmpl push or in insb xor pop (bad) push addb out adc in out xchg repnz lret sbbb test sti jle or (bad) sahf sbbl xchg mov (bad) sub xlat xchg cmpsb (bad) jrcxz (bad) mov mov loopne rex.WX clc in fstl jno lret ja sbb rex.RX repnz movsl (bad) test mov (bad) push mov cs std fsubr (bad) jmpq (bad) ficompl add shl fwait add and shr mov loopne adc test rorb fldenv pop clc and sahf (bad) add rex.RXB frstpm(287 (bad) (bad) sub add enterq rex.WX fdiv sbbb loopne push (bad) sub add (bad) ror pushfq ja repz mov xchg cmp rex.R mov sub loopne lret xlat jo and (bad) add adc cmp mov fmulp jmp loopne or or sbb adc adc jbe (bad) out rol (bad) popfq (bad) loopne add sbb or iret sbb xchg mov (bad) in (bad) sbb movabs or callq movabs in xchg je (bad) lret or push (bad) mov (bad) (bad) (bad) test sbb in test in xor mov retq movabs loopne pushq xor sub push loopne ja movabs add sahf loopnel,pn pop mov outsl rex.WX loopne sub test pause cld out lret retq movsl loopne xlat loope (bad) add loopne in jae out gs sub (bad) popfq (bad) (bad) push jmp sbb shl (bad) test pop xchg cmpl loop mov sbb xor psubsw loopne cmp sub sarb mov (bad) pushfq sub mov (bad) clc and sbb retq sbb cwtl test movabs int cmp jmpq cwtl mov scas or cli neg or loopne sub std pop in loopne int leaveq cmp mov cmp outsb xor pop lret xor sbb push (bad) fwait (bad) fnop jb (bad) mov popfq loopne lahf adc mov (bad) cmp mov out sub int3 lods cmpsl jle rex.WR fs xchg add rex.XB rex.WRB add adc outsb repnz out or push and leaveq loop callq test ficompl mov xor (bad) jo movabs adc or xor fcomi rcl leaveq pop movabs (bad) repnz movsl movabs int3 and hlt outsl fadd sbb jns jno or push sub rex.WX in pushfq fsub movabs in lods faddl clc xor shlb (bad) (bad) (bad) (bad) adc cli mov (bad) rex.WRX negb rol imul (bad) xor push xchg mov (bad) scas fmull rex.RXB xor jns add jmpq add add loopne lods int jl adc loopne fcmove movsb cltd addr32 loopne and jp sbb popfq (bad) sti xor jae rex.WRX rex.RB adc loopne add loopne stos add jrcxz xor loopne adc jp jb and rex.WXB (bad) (bad) fldcw enterq (bad) rex.X imul sbb jns mov (bad) shrb loop mov movabs mov pushfq xchg sbb (bad) ss mov and int (bad) xchg int3 rex.RX (bad) jp (bad) sbb loopne vpmullw mov movsb stc xorb push shl lahf cltd xchg cmp loopne (bad) sahf icebp fs sub ror js rcrb jmpq xor loopne rex.WRXB vpunpckhqdq shl pop jnp or enterq add or leaveq in test jb sbb or (bad) or popfq adc cmp leaveq lock lret in in lea loopne cmp mov mov (bad) lods lret loope mov (bad) add jo fildl xor xchg (bad) rex.W loopne xorl cmpsl jmp sub rex shrl js rex.X movabs movabs sbb (bad) movsl loopne mov lods loopne xchg (bad) sahf xor ja or mov repnz jp and ljmp adc jnp pushq rex.R mov sbb ss insb mov (bad) (bad) rex.W jmp jge jrcxz mov rex.RX add mov orb jne mov jrcxz adc cmpsb loopne imul mov mov subb loopne xchg out adc cmc (bad) inc mov callq (bad) vdivsd in cltd (bad) loopne movabs jp mov (bad) retq out and retq mov in adc loopne int3 je sbb (bad) sti outsl rex.WXB jg xor (bad) add push (bad) loopne sub add jg (bad) loopne mov jae fldenv jmpq add gs (bad) xchg movsl adc clc fs or (bad) movslq pop mov mov cmpsl (bad) fadd sbb jmp rex.WRXB xor stc xchg retq loopne int3 fs cmp lret add (bad) and (bad) push retq sti jno rex.WRXB movabs lret icebp (bad) rex.WR rex rex.RXB test cli or cli and shl mov mov loop add push add hlt add pop mov sbb (bad) movabs lahf (bad) in jns (bad) jmpq cwtl cld fstpt loopne push rcl (bad) movabs sbb loopne repnz sub rex.WRXB cld jg (bad) xchg rclb fwait out jae cmpsl (bad) rorb pop xor (bad) insb rex.RXB loopne xchg adc xchg (bad) cld push add inc xchg loope nop add enterq push (bad) icebp jnp sarl loopne jmpq pop (bad) stos mov stos in jno movabs lods stos rex rex.WR (bad) jns fmuls adc repz icebp (bad) xor (bad) (bad) mov mov rex.XB insl fcmovbe orl callq add cmp push mov (bad) (bad) sub (bad) sub outsb andl adcb pop cmp jno sbb repnz or adc in callq rex.X loope adc (bad) (bad) or outsb gs (bad) sti gs (bad) (bad) movabs lods in lock cmp nop stc add (bad) test in (bad) or xchg rex.RX movabs sarb ja (bad) insl addr32 int add jb in clc out xchg push sbb cmpsl cmp movslq stc ds imul push clc enterq rex.RXB (bad) sbb jg movabs loopne mov data16 cmpsl xchg xchg test rex.WR fistpl pop scas xor xor (bad) and in rex loopne jp test rol (bad) loopne movslq push jae mov in cmp cmp jmpq (bad) movabs int3 cld mov push nop (bad) nop xor loopne (bad) movsl pop jbe mov je insl insb or lret (bad) in gs mov jmpq sbb rex.R loopne jo push sbb clc sbb cmpsl loopne test and adc (bad) mov mov (bad) pushfq push leaveq (bad) cmp movsl repnz std pop sbb mov push in hlt movsb xor xlat clc (bad) loopne jns pushq jmpq or and mov rex.XB (bad) mul and xchg pushq popfq jl cmp movb imul retq callq fs scas jnp rex.WXB mov imul cmpsl fsubl movsb sbb cmpsb jo (bad) mov outsb rex loopne (bad) (bad) cli inc push nop and shl clc loopne data16 decl sbb (bad) loopne rex.X rcrl jb movabs cmpsl xchg jmpq lret fdivl loopne popfq rex.WB rex.WXB xchg std push stos or mov adc (bad) loopne or mov and push sub mov leaveq add (bad) jno cmpsb icebp or out add cmpsl in (bad) push cld test loope or mov pop (bad) mov rex.WXB (bad) callq xchg jg (bad) jge movsb ds jbe jmpq retq decl (bad) push and fmull pop (bad) out (bad) loopne decl outsb js add loop rex.WRB movsb and (bad) mov imul add add cwtl (bad) jmpq jns retq push outsb sbb lea roll cld rex.WRX sbb push xor int mov or or (bad) (bad) (bad) (bad) mov cmp shl rex.WRB rex.XB gs (bad) (bad) movabs sub mov movabs scas cltd mov loopne ss (bad) (bad) in (bad) loopne repnz (bad) jbe loop stos (bad) mov stos loopne and adc out pop mov cmp mov pop loope or pop lret xchg rex.XB jno insl stos push jmp sbb pop xor push add xchg out push or add stos mov in xor pop pop xchg jmpq (bad) cmp cmpsl out push flds lods je decl rex.WXB cmp js popfq loopne mov pop pushq cmc jmpq push fdivrp (bad) notb hlt shl (bad) mov movabs outsb xor lods callq push cmpsl mov test mov lock (bad) adc mov int adc mov subl xlat lea or popfq xchg loopne loope and loopne rex.XB (bad) cmp mov rolb rclb sbb adc (bad) in outsl retq js jrcxz,pn fcompl loopne (bad) movslq jg sbb loopne xchg xchg cld loopne in cli adc rex.R rex.B ss mov callq mov loopne sub in mov (bad) xor push rex rex.RB sub retq movb and ss jle mov add and add nop pop (bad) leaveq int movabs add add imul cmp cmp (bad) (bad) out (bad) fnstcw rex.B stos xor repnz insb or movabs insl (bad) mov sbb (bad) adc (bad) mov sbb pushq (bad) xchg lahf in pushq icebp mov mov push mov shlb loopne mov jno loopne scas or clc stos cli jae leaveq loopne mov (bad) loopne and insl scas retq cmpsb cltd loopne add imul lock fisubl pop jmp push xchg mov (bad) sti xor repnz js jne faddl (bad) xor mov loopne cmp icebp adcl jrcxz mov in gs ss movsl pop rex.RXB loopne (bad) mov in lods rex.WRB test ss push pop (bad) ljmp xor pop repnz and (bad) sbb fnop cmpsl loope (bad) xor mov fs movabs and (bad) test out loopne fildl sub mov rex.WRX in push sbb rex.RB out add scas rex.RX rex.WRB jrcxz int rcl push sub adc sub cmp leaveq int or rex.W shll loopne,pt jg loope (bad) cmp (bad) cmpsb rex.RB lods retq fcmovu jl loopne (bad) (bad) lea (bad) rex.WX imul adc or movabs jns rex.WR push stc pushq add (bad) insb in (bad) fs loopne mov jb repz (bad) (bad) fchs orl jne imul rcr and push jg rex.R mov xor cld shl xor (bad) loopne push repz iret rex.WRX loopne cmp (bad) xchg mov adc icebp (bad) loopne stos in rex.WRB or push test sub sbb imul movsb stc cmpsb (bad) fneni(8087 mov cmp (bad) cwtl jmp rcr loopne rex.XB push sub jne loopne test jp mov shrl loopne sub je ss jmpq or sub mov sub mov pop xchg (bad) mov pushfq add and cmc test loopne and (bad) adc pop cmp cmp or mov mov (bad) (bad) adc leaveq sub (bad) mov adc lods fistl int mov (bad) in test movabs gs and mov jnp in movabs callq cmc mov jmpq icebp adc (bad) jle clc in (bad) (bad) mov movabs and data16 enterq (bad) sub lret or pushfq jns data16 icebp fs cmp sbb jg (bad) fs jge mov jp mov jl adc xorl add rex.B jle loopne pop callq cmp xchg mov movb js mov loope fdivl movsb in insl push (bad) jg mov addr32 xchg adc fcmovbe std cmpl cld es sbb (bad) hlt stos cmpl insb adc push rex.X icebp (bad) es pop jae push pushq testb jl insl sub scas mov (bad) cli or and rex.B cmp (bad) mov popfq sbb icebp rex.XB popfq rclb fistpll (bad) add movabs callq xor mov sbb loop jg xchg sbbl xor (bad) sbb pop cs cmpl sub or jae loop test cmp adc cmp jb add insl repnz addl movabs andl adc ss jno loopne (bad) sbb (bad) and movslq (bad) add in jrcxz adc out sbb insb (bad) (bad) addb movabs rex.WR in rex.WRX fsubl movabs mov (bad) data16 icebp xchg xchg push ror cmp rex.XB fdivrs rex.X rex.WXB sub (bad) loopne fldt stos sbb loopne (bad) or loopne jge rex.X loopne (bad) ds mov movb sub rex.WB xor stos cli adc ss sbb stos mov lock sbb data16 push mov std (bad) lret fadds jne (bad) adc push loopne (bad) jmpq gs insb pop xchg mov loopne retq add xchg rcl movabs scas cmp movsb jne in loopne imul pushq xor fbld (bad) rex.WRXB test loopne rex mov mov repnz lret shl fist (bad) movsb jnp loopne cmp cmpsb (bad) iret xchg shl (bad) mov movabs retq rcr es cs sbb xchg xchg incl iret mov mov loopne adc pop test gs xor hlt lods sbb loopne (bad) mov je cli in push or rex.WX xchg (bad) in pop fnsave movslq sbb out pop mov jns (bad) out xchg add sbb movabs add jns (bad) or (bad) test jl scas add jge loopne (bad) (bad) iret sub (bad) (bad) clc js rex xchg xor movabs mov (bad) cld cmc (bad) mov mov cli add xlat and lock out (bad) xor xchg xchg movsl loopne mov popfq sahf cld cmp jbe adc add jrcxz test jmpq push movsl divl pop adc cld jrcxz ja imul mov sub cmc fist out in rex and xlat stc sub add push stos imul or pop and idivl test mov jmpq pop adc cmp test stos sahf (bad) (bad) fsubrp in jb and adc (bad) in xchg cltd retq mov xchg adc (bad) nop mov clc shl mov pop (bad) in (bad) pushq cmp fadds (bad) pop (bad) movabs loope add pop (bad) loopne fcomps (bad) imul cmp xchg xchg jno loopne mov push xor leaveq popfq inc rclb lods pop pushq (bad) rolb jnp cmp jl (bad) popfq sti pop loopne pushfq xor ja pop (bad) icebp cmpsb int3 out push adc in fchs xorl pop cmc lods jbe (bad) (bad) movabs scas shld callq movabs pop imul jge test or shll cmp cli icebp ja sub xor sub (bad) jne mov fsubr and (bad) mov jbe (bad) (bad) imul (bad) jns outsb insl cmp sbb imul (bad) rex.R sub loope cmp (bad) jbe int3 mov or icebp (bad) gs sbb pop sbb mov fwait xor int sbb xorb (bad) xor xor push mov (bad) mov and jno mov mov imul xor or (bad) movslq cmp movabs clc ds push cmp sbbl mov (bad) out push cmp sbb push xor cs jo xchg push jns adc add jmpq (bad) or mov (bad) cmc add fstl repnz mov movabs movabs mov jo xor (bad) rclb rcrl test shll mov (bad) ds pop (bad) add pop fsubrl sub scas jle fwait out stc xchg add sbb fadd icebp je xchg outsl cmp movabs (bad) imul and (bad) adc out sbb iret (bad) movslq pop sbb movabs (bad) xchg mov sbb addr32 jne and ds stc (bad) pushq fidiv in pop mov (bad) andb add (bad) pushq add jle mov insl rex.WXB (bad) sbb rcll out or mov fs or (bad) stc jrcxz fsubrs pushw es sbb ffreep (bad) out movabs icebp data16 jge cmp rex.R jnp jo rex.WR es mov js sub and imul add mov retq lods jrcxz sub cli sbb xor rex.WR mov cmc rex stos jrcxz sbb jl in icebp insl int xchg cmpl jbe pop sbb push and xor (bad) sahf (bad) (bad) (bad) imul stc nop push push mov stc lahf (bad) or sbbl push pop (bad) xor jrcxz test (bad) out cld enterq stc (bad) repnz in jl cld sahf movsb mov pop callq sti and jo retq fsubs adc clc cmp rclb in (bad) in rex.WX or mov or jp (bad) jns fcoms jne sbb jl fs sbb divb push (bad) movabs fs sub add jns sub (bad) or and (bad) add (bad) pop or xor andl jmpq xor cmp (bad) outsb sbb sarl and iret jmpq mov (bad) imul rex.RXB test add lahf or xchg sbb es (bad) test (bad) out mov (bad) movsl add addr32 sbb enterq out rex.WRX or pushq retq cmpsb jne sbb adc pushq or mov rclb shrb mov rex.RB add or sbb and in loopne pop (bad) (bad) fistp (bad) add or push mov adc and pop (bad) xor fs and loopne out retq xlat nop rex.WX gs jmpq sub loop jno xchg repnz sarb (bad) sbb sahf rex.WRX lods movabs es jo or addr32 adc imul fldl std icebp fcmovnu ds in xor (bad) scas (bad) pop repnz jp cmp mov cmp (bad) addr32 jns (bad) mov cmpsl cmp lahf jp adc pop (bad) mov movsb scas xchg mov out (bad) dec pop jno cmp xlat pushfq fcmovb int3 idivb clc (bad) xchg sti ljmp (bad) xor (bad) rex.WXB imul add jle (bad) int outsb rex.WRXB jrcxz (bad) rex.X rex.RB (bad) mov sbb mov and rex.WX rex.WXB jp push jb (bad) pushq stos pushfq int3 sti mov leaveq rex.WRXB addr32 mov movabs mov ja xor mov rex.RB and jnp sbb enterq shll rex.WXB adc movabs jl (bad) jno adc mov in xor (bad) mov movslq add popq shrb out sub and adc mov cmp shr rex.WX out pop rex.WRX xor adc rex.WXB mov cwtl cld ds jle jrcxz xor sub fst test scas xchg int3 jrcxz sbb sub cmpsb imul fdivs xorb adc lret mov (bad) (bad) jnp callq (bad) or and (bad) negl and (bad) fisubl movabs pop enterq xchg lret int3 (bad) sbb fs cmp (bad) fdivrs add (bad) cltd pop jg jg in adc push out rex.WX jo mov (bad) push (bad) jle pushq cmp add (bad) mov (bad) (bad) pushq addr32 jnp rcr (bad) push rex.XB rex.RX rex.R mov lret xor out push loope xor sub repz add rex.WRX test rex.RX test fucom lret add in movslq hlt imul mov and mov (bad) cmp addr32 (bad) test dec jnp stos sub movsb movabs and mov jo jmpq in sub push (bad) je sbbl and mov scas jnp (bad) pop (bad) rcl lods xchg adc rex.RX rex.WRX (bad) mov xlat popfq cmp movsb jg (bad) lret mov gs scas xchg cmpsb push movabs movsl movabs shrb lods cmp es (bad) insb rex.WXB rex.WB mov lock xor mov out jae (bad) lods fimul movabs (bad) (bad) mov mov xlat xchg mov cmp (bad) jbe outsl push insl shrb lcall leaveq imul cli mov gs loopne xor cltd mul pop cmp in (bad) rex.XB mov rcll je mov mov rex.X fwait adc rex.XB movabs out scas cmp lock cwtl jnp movabs xlat out push and sbb push push icebp addl movsb (bad) (bad) push ds (bad) cwtl lret lahf mov leaveq pop (bad) fidivr (bad) fwait pop xor (bad) lahf adc lret loopne leaveq mov mov sbb (bad) rex.WX rex.XB xor jmpq adc (bad) test callq in movsl sahf sub (bad) pop (bad) sbb testl push jns mov mov loopne pop fadds or scas (bad) test mov loopne imul mov xchg (bad) and jbe js out jns rex.B loopne mov (bad) push cli test in test sbb rex.R in push pop fld (bad) cltd xchg mov pop unpcklps jb rcrl cmp pop ss adc mov (bad) xchg lods shlb xor pop ja loopne push ss enterq leaveq fidivr and sbb loopne popfq or repz rolb xchg iret fsubs sbb pop cmp and jp loopne jnp xchg mov jnp loopne mov and xchg int3 mov jrcxz lret (bad) mov popfq test repnz jnp sets imul or std sbb jo pushq cmp mov add xor (bad) xor movsb rex.R adc cmp outsb push rex.WRXB lods mov imul rex ljmp adc xor xor lods sti pop (bad) lea or fs xchg idivb and loopne fsts loopne and mov imul lea adc adc sbb xor cmc lcall jg ja mov adc xor mov je es (bad) xor rex adc lock mov loopne ffree in (bad) loopne fsubrp or fsubs movsl (bad) cmp imul es movslq lock sbb (bad) movsb loopne jne ud2 imul cli mov (bad) sub es pop (bad) loopne lea or stos fildl add sub xchg or movsb mov movabs pushq out jne sub loopne jg rex.WB (bad) rorl (bad) (bad) sub sub push and (bad) mov jae popfq xor icebp jno mov jge adc jae callq mov sar xor xchg in rex.B cmpsb (bad) (bad) imul loopne lahf leaveq test mov outsl decl jg mov roll sbb fcomps cwtl mov jp xchg mov movabs movsb pop movsl cmpsl jne cmc (bad) pop (bad) (bad) (bad) cmp or int sbb or xchg fcmovne sbb repz or xor adc ds js or loope (bad) sbb and add xor retq callq sub jbe imul je ds xor cmpsl icebp (bad) xchg ja add (bad) xchg fsubs xor (bad) loopne push int iret cs xchg outsb stos addb (bad) sbbb jnp jl (bad) rex.W lock mov (bad) stos (bad) (bad) clc (bad) outsl jno jp sbb cmpsb cmp jnp fcomps or mov in rex.WRXB andl pushq (bad) pop sub out (bad) lahf mov sub rex.WR xchg mov (bad) out (bad) xlat jb loopne (bad) push out mov pop loopne data16 xor gs mov and mov js loopne loop mov loopne out (bad) (bad) cld loopne pop (bad) mov js adc jbe cltd cwtl (bad) xchg jle clc mov scas mov movsb movabs pop loopne (bad) sbb clc and ja (bad) push cltd loopne int3 xchg sub shlb (bad) mov mov loopne mov jmp sbb (bad) movsl movl (bad) mov cmp outsb loopne (bad) pop flds incb add pop (bad) rcrl jg rex.WRXB lea or (bad) xor movsl or mov mov int3 (bad) adc sbb loopne add fwait cmpsl (bad) loopne loope adc pushq stos movabs xorl loopne jmp rex.X loopne (bad) mov loopne xor out in (bad) sub adc subb pushfq or (bad) out pop rcrb out cmpsb insb add mov adc in ja out cltd adc pop insb (bad) shrb jp (bad) xchg out rex.WRX orl cmpsl mov sbb (bad) ja retq adc (bad) and jge pushq addr32 movabs rex.XB mov or retq callq int xchg mov mov sahf sbb sar mov xchg add and (bad) lock rex.WX int rex cmp out movabs (bad) or add (bad) mov (bad) movntq and fdiv cmpsb cld imul sub jp insl (bad) xor cmp (bad) pushfq mov icebp pop (bad) rex.WRXB icebp js fadds mov in sbb outsb cltd mov (bad) rex.WRB loopne fist xlat movslq in stos xor (bad) stos clc out and rex.RXB lock (bad) mov (bad) movabs rex.WRB pushq jno data16 loopne js sbb out push iret je sbb repz lods fiaddl sub (bad) mov movntq sbb insb or loope cmpl jns sbb jmpq mov pop jg adc ja (bad) test or jmpq mov (bad) push andb divl imul movsb loopne leaveq cmp loopne xor jg movabs or notb std mov repz sbb mov pop cmpsl insl pop push jbe cmp (bad) scas in mov loopne scas in sbb leaveq (bad) test insb add adcl sarb (bad) loopne push cmpb mov pop jo shl mov insl add mov repnz adc cmp jbe nop icebp scas imul cli pop pushq (bad) adc lods stos loopne and retq mov jne adc xchg and rex.X stos xchg xchg loop,pt xorl (bad) lea pop loopne or (bad) retq enterq rex.WXB outsb add (bad) je cmpsl loopne ja cmp rex.WR cltd sti cld scas jnp (bad) jbe and hlt cmpsb and sub stos (bad) mov movsl add push rex.W fisubr shl int3 (bad) rex.R repnz (bad) je loopne incl data16 rex.WRX and pop rclb pop xchg adc scas mull loope lret add push ror xchg in adc and add mov (bad) (bad) (bad) jge pop xor in sub mov rex.WB cmpsl insb int fdivl (bad) sbb jmpq fistp icebp sbb add and jbe jl,pt mov ficompl (bad) (bad) or (bad) repnz cmp fcomi or loope outsl and retq in ljmp cmpl rex.WRXB callq (bad) loopne jb scas rex.WXB (bad) sub xchg mov insl icebp xchg rex.WRXB mov rex loopne cmp jns rex.X es subl loopne cwtl mov cmp in add pop and pushq add loopne cmp retq stos imul mov (bad) movsb loopne (bad) mov sub stos xor movslq lcall cmp adc loopne loop push push fsubl (bad) movabs jb rex.WX rcrb punpckhbw scas loopne (bad) cmp shlb pop roll in loopne callq rex.RXB loopne,pn (bad) push add (bad) and add or adc lock push (bad) jae and adc xor int3 mov loopne or rex.RX add jl cmp pop mov jmpq (bad) xchg or movabs xor or mov cmp mov movabs add add sub xchg loopne jae mov mov loopne pop or mov je fnsave loopne jge xor rex.XB test mov retq xor xor movsb mov sbb add mov push (bad) (bad) (bad) in mov (bad) out lods or je movabs push rex.WRB jmp (bad) cmpsl sti pop adc test lret loopne sbb and rex.WRXB mov and negl cmp sub rex.X mov je and rex.XB pop or (bad) rex.R in shlb (bad) rex.WB and or sub push (bad) loopne jne fdivs nop pushq hlt mov (bad) in sbb sti (bad) notb cld lods rex.RX movabs int3 fist adc mov mov bnd and jno fisttpl mov popfq or ljmp cmp adc push ljmp mov jb lods mov faddl mov sbb ficompl stos rex.WRXB loopne stos insl (bad) mov sti in mov retq rex.WRB (bad) (bad) data16 fnop fistpll adc loopne pop adc faddl mov adc sbb loopne xchg icebp jbe (bad) (bad) and sub mov push fs loopne or (bad) cmp mov imul pop (bad) rex.X movabs mov in pop in jb shlb pop movabs jp push loopne rex.X (bad) test movsl out retq icebp adc mov (bad) rex.WRX rex.WRX mov (bad) loopne jrcxz rclb rex.RB mov xor (bad) loopne mov jae (bad) pop cmp (bad) and cmpsb rex.RB add test loopne (bad) jge cmp xchg scas rex.WRXB loop loop cmpsb (bad) or nop (bad) xchg sti sbb js xor sbb sti xchg pushq adc in rex.B scas mov leaveq callq shll mov loopne cltd stc jle ja out clc jg fisubrl lret in sahf mov rex.RB rex.RX sub loopne cmp in retq pop loopne scas jae rex (bad) (bad) addl and in loopne cmp icebp mov addr32 jg cmp mov jmpq xor ss (bad) mov andl jp sti (bad) movsb mov xlat stos (bad) test adc jae (bad) (bad) iret scas leaveq xor (bad) jns add add icebp (bad) pop sbb out add adcl and push add scas (bad) nop in pop es movsl pop xchg nop outsb stc jb push stos loope rcrb rex.WRX jbe sarl jmp movsb add out xor xchg (bad) rex push rex.X sti pushfq (bad) (bad) movabs inc jrcxz xor pop jae and jne (bad) push sti lods loopne sahf mov gs jmp lods mov jae xchg fdivl rex rex.RXB sti add mov mov in test and mov lret imul (bad) (bad) loopne shrl rex.WRX hlt mov or jnp cmp and mov fs mov hlt pop rex.WXB or mov (bad) movsb loop sbbl fiaddl cld (bad) and ds rex (bad) pop and push (bad) (bad) push (bad) (bad) cmp mov scas cmp ja imul mov in mov xorl add and jg in js cmp xlat and fwait jmpq faddl scas out (bad) sti in cmc fiadd jge shr xlat loopne (bad) fs xchg cmpsl (bad) clc andl push movabs add decb loopne or (bad) ds test loopne movsb cmp sub (bad) push movabs xchg and pop roll mov clc loopne (bad) mov mov xlat es mov mov punpckhdq enterq push sbb xchg push add addb mov mov pushq add frstor clc std sub sub repnz sub test insb loopne add rorb or loopne or add loopne (bad) mov rex.WR fwait (bad) xor adcl pushq loopne push (bad) stos cmp or (bad) xchg or clc lods flds psubb mov sti nop sub rex.WRB loopne mov rex.B cmpl jae scas rex.WRXB mov mov je test xor adc in retq add xor jbe loop cmp nop lahf mov loopne xlat (bad) lea repnz xchg lahf jo cltd xchg (bad) cmp push jrcxz out and test addr32 push loope loopne orb in movsl add (bad) cld or pushq push repnz in std xchg lods rex.WXB rex.WRXB rex.XB roll nop cmp mov fwait rex.RB loopne and cs mov jb mov mov notl sbb add sub xor sbb cmp hlt pop fucom mov fildll sub movabs rex rex.WXB cmpsb loopne (bad) push (bad) ficoml or add (bad) in push outsb mov outsl (bad) jns fsub and cmpsl cmpxchg (bad) mov hlt (bad) (bad) push push mov pushq stos mov jg (bad) (bad) sti (bad) (bad) outsb rex.RB rex.WRXB pop cli fcmovnb shll sbb (bad) jns cmc stc movsl (bad) mov out xchg (bad) stos js,pt jmpq fs rex.WRX xor repz int3 ja,pt loopne (bad) loop add loopne mov bnd lods out push sbb (bad) enterq lods xchg (bad) pushq out rex std and lret fwait insl lods test rex.WRXB cltd mov add pop rex.W popfq in loopne sub xchg mov idivl lods rex.B (bad) loopne rex.WRXB and xchg (bad) pushq adc rex.W fistl (bad) loopne rex.XB (bad) jp (bad) rex.WR loopne in icebp and xchg (bad) cld cmp addr32 xchg test movabs xchg and scas fidivl jmpq adc loope scas loopne sbb pop xchg loopne jbe rex.X adc mov or (bad) pushq (bad) loopne hlt icebp mov add lock loopne shrb pop insb pop pop int3 loopne outsl popq pushfq sub incl add cmp (bad) shrl clc pop mov cmp jmpq (bad) xchg xlat adc mov add rex.RXB pushq rex.WXB adc movabs fistpll sbb nop and iret (bad) sbb and pop sub xchg shlb or jrcxz and sarb gs mov rcr mov rolb sbb jmpq xor (bad) (bad) ds (bad) (bad) test (bad) sbb mov retq movabs mov addr32 movabs imul mov popfq mov push jnp cmpsb push gs adc cmp enterw addr32 ja pop adc js in or fldl addr32 cmp mov mov adc mov (bad) ds add popfq movabs xchg pop out mov imul xchg ljmp sub gs rex.W cmp mov jae or (bad) add (bad) incb and je out ja sbb xor jns push mov mov rcll rex.B cs cmpsb sbb (bad) scas and xchg movsl fs outsb icebp sbb adcl sbb mov or pop cmpsb and jmp xchg rex.RB rex.WRX imul push mov push (bad) pop lahf pushq movabs add setl (bad) (bad) sbb jmpq sarl shl sbb pushq test sahf add pop adc shrb add cmc jle jnp mov sub lods adc jae (bad) rcrb add gs cmp mov xor movslq movsl lea xchg and mov pop xor rex.WXB add loopne,pt cld add xor jae xchg stos or jne in data16 cmp je pop and jrcxz fst cmp jns (bad) (bad) adc (bad) in nop add fcmovne jo mov je rex.WRB rex.RX loopne adc cli jb mov movabs fldcw popfq mov (bad) test (bad) imul int cmc (bad) (bad) (bad) insb loopne or sahf sub (bad) (bad) jmpq leaveq pop (bad) (bad) xor pop enterq (bad) (bad) retq jl pop jmp lods loopne xchg mov out test add adc loope sbb andb jg cmp xchg insb loope movabs sbb (bad) int3 stos pushq jne add adc in sti mov cltd xchg (bad) rex.XB add cmp int movsl rex.X loopne xchg rex.XB (bad) callq and add std ja pushq jmp rex.RB loopne mov movabs (bad) (bad) cmp push ss imul (bad) pushq test jle (bad) (bad) out rex.R (bad) rex.RXB and in (bad) cmpsb adc loopne mov (bad) icebp (bad) (bad) in pushq xor rex.RXB or loopne mov addr32 xor (bad) (bad) mov xor sub and mov (bad) push (bad) sbb shll addl fnsave in adc insl out neg jo jnp outsb cltd jmpq lret cmpb add loopne stos (bad) mov sub roll nop loopne push test in pop shl xor jle (bad) fcomip lods mov (bad) addr32 retq in adc (bad) pop rex.W outsb jmpq xlat icebp insb incl or xor bnd retq mov repnz mov in rex.WRB (bad) outsb rex.WRX adc (bad) or xchg fsubs xor rex.WXB lods jp in sbb and (bad) js decl push (bad) cmc sbb outsl scas popfq roll outsb mov out in jl sbb retq shrl mov (bad) mov or callq sub andl sti lret sbb pushq (bad) push add add sbb clc pushq adc mov addr32 stos rex.X (bad) loopne xchg pop fsubl in in cmp or cmp add je mov loopne out lret mov adc jrcxz mov sbb add shl mov and fmuls rex.WXB sub loopne cpuid sbb sub rex.X sub loopne hlt xlat in mov in mov cltd jmpq rex.WX add (bad) mov movabs fcoms movabs stc jp stos or fs gs loopne cmp xor orl jno (bad) (bad) rex.WB rex.RXB js push (bad) sub mov add adc fstpl add sti pop jno (bad) sbbb pop (bad) icebp sahf (bad) rex.WRX insb cmpsl gs jp sbb and lea jl imul js cwtl test int3 jbe (bad) and jnp adc xor imul gs fwait mov in add push and xor pushfq je mov mov pushq std mov mov lret (bad) (bad) iret sarl cmpsb out xchg imul (bad) or add cmp cwtl (bad) (bad) clc loopne (bad) movsl repnz adc (bad) std push (bad) rex.RB cmp jns clc stos outsl jmpq loope mov and loop loopne mov jb pop loopne (bad) xor xorl (bad) sub loopne fnclex pop sub test mov cltd sti mov push rex.WRB subl loopne sti iret fcom sbb rex.W jrcxz outsb imul xchg loopne movabs sbb jo and adc (bad) (bad) jbe je (bad) sahf orb (bad) (bad) mov rex.WR (bad) loopne cmpsb nop add mov loopne pop stc jne jrcxz,pn mov and xchg (bad) xchg (bad) fsub xlat stos (bad) mov clc test (bad) rex.RX loopne mov adc outsl or loopne movabs lret out fbld callq sti int lcall sub sbb (bad) in push cld push rex.XB loopne out addr32 repnz insl test mov (bad) in int3 rex.B lods rex.WB adc sbb sbb test adc xchg (bad) and xchg shl imul sub lar subb sti mov pop (bad) loopne hlt je fs xchg or lock in (bad) jg repnz (bad) stc loopne lret jb mov divl movslq mov (bad) (bad) shl jg cmp fistl std pushq rex.R push adc loopne imul rex.X (bad) xchg test xor and xor insb cmp cmp jg pop pop pop add and (bad) add imul (bad) xlat loopne retq add movsl jb test stc mov cmp jnp nop add jg (bad) int (bad) cli movabs and mov pushq out or loopne jae in mov xlat jnp callq stos jmpq shlb in rolw rcr sar shll jns push sbbl loopne (bad) mov mov faddl js jle (bad) (bad) imul rex.RB xchg loopne push stc stos (bad) rex.B rex.WXB retq sbb pop jns adc add rex.WRX sub adc mov js rex.RXB jne je in lahf pop loopne rex (bad) (bad) xchg or hlt jp (bad) jle in stos jmpq (bad) xor repz cmpsb loopne lahf sub (bad) movabs imul in mov mov add sbb es pop pop (bad) fdiv sti loopne (bad) lret rex.WX cs orl int jg (bad) rex.WR rex.X stos xchg sahf mov test sub push and mov mov lock fidiv mov sti push enterq rex.WX (bad) cltd rex.WB (bad) clc add jl sbb xchg xor fmull popfq (bad) (bad) (bad) pushq movsb xchg adc cwtl scas cs and cmp (bad) fs cli xchg push sub mov xchg (bad) decl retq jmp movabs push jl or (bad) jns clc jb loopne mov cmpsb jp mov jmpq ficoml (bad) jb mul fxtract jg pushfq jp xchg loopne xchg stos popfq mov lods cmpsl (bad) or and push stos out (bad) movabs bnd xor rex.B scas fs loopne gs sub (bad) or movabs loope (bad) push jbe mov (bad) in xchg cmp (bad) popfq jp leaveq mov loopne sbb cmpsb loopne (bad) push imul rex.WRB cmpsl fprem1 cwtl loopne popfq (bad) (bad) jp shl adc insl push sub cltd repnz in (bad) nop ljmp lods popfq mov xor repnz mov xor (bad) add add fisubl fldl xchg sub (bad) rex.X loope loopne (bad) (bad) xchg xchg movsb cltd fadds rex.WRX xor rex.XB test loop jrcxz or vmovaps in enterq test movabs pop or cli rcll and pushq fcoml (bad) outsl or movsl jp test push add movsb leaveq cmp movabs xor lret callq mov adc mov loopne sbbl loopne insl add clc jg sbb xchg (bad) pop cmp loopne pop fwait (bad) ds rex.WB loopne ror out (bad) (bad) (bad) loopne data16 sub add mov cmp push loopne popfq enterq (bad) jnp rex.W or callq mov xchg pop push mov (bad) rex.WRB data16 sbb es repnz jb fyl2xp1 xchg push loopne jne pushfq rex (bad) mov (bad) sarb push int3 (bad) icebp fidivr add iret fs shlb and rolb in in testb (bad) repnz hlt xlat fstl push pop out xor xchg cmc xchg jb cmc adc rex.XB movabs rex.RX (bad) push mov pushq (bad) pushq in pop lret rolb push xchg rex.W jne mov (bad) adc mov mov ss mov fimul add xchg repnz rex.WB mov xchg or xor ds shll loop add fstps add rex.R out movsb pushfq loop add rex.WB xlat paddsb adc pop mov add jp sbb movabs neg and stc fildl rex.WXB mov sub mov mov (bad) xchg pop (bad) (bad) sarl imul cltd stos rex.XB movabs rex mov push mov sbb scas (bad) sbb out int3 or callq test sbb mov (bad) in mov rex.W rex.WRX cmpsb movabs sbb (bad) insb lock out stos callq sbb push lret icebp adc rex.WRXB push retq repz or push push and imul gs clc rex.XB lods in sbbl out (bad) and cmp (bad) mov sbb inc fnstsw (bad) fucompp jl sahf jg pop jo shr push rex.X fmul repz test lods lods xchg fsubs jo imul or adc js (bad) jbe (bad) (bad) mov cld and (bad) fcmovnu (bad) sub test adc jno out mov add movabs insb cld adc sbb decb fwait mov (bad) xchg and add cmp in movabs sarl (bad) bt mov in shrl imul pushq mov (bad) sub rex.WRXB lret (bad) rex.B cld sub cli movabs and loop push int3 xor iret and sub data16 fcmovnb pop sbb mov movabs sbb adc out sbb adc test mov ficom (bad) stos pop cmp jl cmc decb cmpsb or xchg sub add xchg sub movabs out rex.W rex.WX stos mov sub jmpq add cmpsb gs fistpll sub (bad) loopne movslq mov leaveq sbb outsb add sbb cmp jmp sub jb movabs push andps xor cwtl xchg mov icebp adc (bad) cs (bad) loopne movslq (bad) xor stc loopne cwtl mov rex.XB pushq scas (bad) in je (bad) mov test jl loopne retq xor loopne or xchg loopne push test cmp out lea sahf js mov (bad) cwtl push sub rex.R rcl and xchg loope,pn cmp (bad) loopne xor xchg retq push (bad) in movabs ss cld xor adc or in imul es cmpsb jnp mov movsb jmp mov fs out mov rex.WRX stc cmpsb jae jle mov pop adc xchg or sbb int sbbl mov movabs loopne pop lock bnd cmp in scas jb or not shrb cld clc fstl fisubr loope icebp fs sbb je push add (bad) rex.X rex.WRB cmpsl jmpq adc cli xchg rex.WXB jrcxz xchg scas add cwtl pushfq jbe lret jp movsb rex.WR add jrcxz movsl mov pop lret or jmp jns movslq movabs test rex.WR idivb imul (bad) push (bad) mov adc (bad) int3 (bad) mov test jl btc sub shrb mov mov (bad) mov (bad) movsb rex.WRX push rex.WR (bad) test movabs jo sbb mov insb (bad) pushq rex.WB sub outsb rex.WX mov push rex.WR js xlat jo or pop loopne (bad) je rex.RB rex xchg and jnp in xchg cmc ficomp (bad) cli sbb lods add mov pop stc lret out stos insl std (bad) pop (bad) jne cmp pop hlt (bad) not (bad) movabs (bad) (bad) and xor callq sbb (bad) rex.WRB jnp,pt rex.WXB cmc mov (bad) repnz (bad) sub mov cwtl push cmp (bad) pushq movabs retq add push in rex.WRX rex.RX jrcxz cmp gs rex.B jle mov and pushq xchg mov (bad) insl movabs xor fnstenv xor sbb (bad) pop mov mov jrcxz sub xchg cwtl rex.WRXB movabs rex.WR rex (bad) (bad) in fcompl xchg addr32 in mov mov (bad) sub rex.RB xchg test mov pop sti movabs pop cmc mov (bad) fisttp lret clc lret rex.WRXB cs adcl pop out sbb out lret popfq pop (bad) in adc addr32 (bad) lea movabs fimull loope jge fild rex.RXB jae mov mov scas pop ucomiss movsb jmpq jle movabs rclb rex.WR cmpsb or sbb movabs pop lret and pushfq addr32 jno sbb (bad) pushq out (bad) mov cmp addr32 (bad) xlat xor sub mov shrb out int3 add jno int (bad) sub loopne push cli fisttpl pushfq (bad) sub cmp or jmpq sti lods (bad) (bad) fnop pop outsb jl insl mov add movsw fsubrs (bad) mov sbb (bad) jbe xlat pushq movabs addr32 sub xchg fs jge rcr rex.R leaveq loopne (bad) adc adc and jl std mov mov xorl movsl loopne sbb cwtl loopne rex.WX or jb imul loopne hlt rorl (bad) cld clc (bad) cmp lret nop fdivs jno callq and movsb or pushfq (bad) leaveq movslq mov cmc jno or fwait jnp cltd or mov push fsqrt (bad) (bad) loopne pop sahf decb test jne (bad) cmp add add jmpq (bad) lock loopne and (bad) jb push rclb rex.XB and loopne movslq pop xor loopne push (bad) push jmpq jge rex.RX sar sahf movabs xor insb mov or mov mov rex.R (bad) adc xchg cld or repz cwtl sahf jmpq rex.WRB lret int3 sbb movabs (bad) or out add adc fwait movabs sub sub notl rex.W and js lock out pushq lahf cld mov (bad) rex.W cmp sub fadds shlb lods cmpsb (bad) fld rex.WXB pop mov (bad) int mov adc cmc xchg gs xchg fstpl or scas fwait enterq cli jge jae shr jp icebp jle (bad) pop jmpq rex.WB movabs rex.RB jo clc add xor pop mov rcrl add xor sbb rex.X and cwtl mov mov fdiv sahf rcll jge xchg xchg loope out and out rex.RX test jp (bad) and sub and xchg fsubp fdivl (bad) or cmp movslq xchg fildl retq push shll sbb lods sbb jmpq movabs mov in jbe mov (bad) retq insl push add stos js (bad) rex.WRB rex.RX in xchg pop xor adc rex.RXB loopne lret (bad) lea adc loopne data16 cmp scas loopne stos jns sub in push hlt pop xchg or fcompl xchg (bad) mov in cmpsb add cmpsl adc cmp fstps addr32 loopne in mov push loopne mov push (bad) in out mov rex.WXB mov jo loopne or add loopne adc (bad) popfq mov shr or jmp fstps loopne sbbb adc callq movslq clc in or lods loopne fsubrs (bad) adc (bad) lret movabs movabs pop je jno xor add xlat nop rclb shlb retq out (bad) jrcxz fs adc cmpsb rex.XB hlt rex.W loopne lret leaveq cmp cmc jo in gs (bad) and rex.WX or insl jle and out cltd rex.W (bad) shl push cmp stos loopne xchg xchg (bad) rex.WXB cmp in pushq sub (bad) pop addb lret es mov jrcxz rex.B mov jl je roll loope cmpsb or fiadd pushq fxch or mov adc jmpq xor in mov jo push mov xor cmp (bad) fcoms sub loopne scas lods nop xchg mov loopne fs (bad) rorb push rolb pushq in test jnp (bad) in iret jb xchg sub out xchg adc xor (bad) scas add xchg retq fildll mov movslq loope rex.WR or nop (bad) mov scas addb loopne sub jp (bad) loopnel cmp loop pop lahf loopne (bad) xchg push int (bad) jl cli fcoml mov jbe xchg (bad) mov mov loopne ror sbb frstor test test jb movslq (bad) mov rex.X fs movabs (bad) rex.RB rex gs jmp xor mov lret rorb in adc mov or jmp lea (bad) add hlt in rex.B imul (bad) (bad) (bad) adc pop sti loopne xor cs mov (bad) mov jnp sub pop push popfq xchg jae rex.RXB leaveq or mov or rex.WRX rex xchg sbb andb or pop mov imul stos repnz push cmp mov hlt xor add repnz loopne rex.WR xchg (bad) push sub (bad) rex.RX adc (bad) jp xor jg out (bad) cmp xor test lock addr32 pop xor repnz movslq lock (bad) or cmp pop insb sub fsubrp out btc pop test (bad) push rex.XB xchg movabs or ds sub cmpsb jns in rex cmp mov in movabs rex.W cld push rex.RXB (bad) jns lret popfq fbld or out (bad) jrcxz xchg adc rex.WXB cmpsb mov jbe xchg (bad) jno (bad) (bad) out jnp scas cmpsb int orb and shl (bad) retq sbb popfq mov jp imull xor js rcll pop or lods xor or icebp jnp jge mov movabs int mov mov adc js ror adc movabs fstpl adc stos insb pop stc (bad) push lret outsb (bad) mov sbb and add (bad) loop adc pop xor loopne in (bad) jge loope loopne test lret rex.RX retq cmp mov jrcxz loope test (bad) pop xor loopne nop xchg jbe sbb add sarl (bad) sbb jle xor loopne jmp (bad) jno or loopne sbb or fnsave (bad) icebp sbbb sbb adc adc pop rorb loopne sub stos loopne (bad) cmc rex.R mov in lods push mov cltd cli jne (bad) loopne rex.WRX repnz retq movabs out jmp or fs movabs xchg sbb jbe (bad) jns nop loop rcll push (bad) outsl in xlat (bad) test xor pushfq stc rcrl rex (bad) and (bad) jb,pn adc lret retq fildl xorl leaveq out xchg add (bad) cmp pushq out rex.WRX rex.WRB xor popfq mov callq and push movsb pop fstl jne and fs jrcxz adc jmp jo movsl sbb sbb mov out xor data16 adc rex.WR mov out stos (bad) sub and int3 lahf (bad) mov or repz cmp in mov pop movsb adc mov fistl cmpsb jmp imul rex.WRXB xor add xchg ja out xchg divl loope jmp adc jrcxz rex.RB xor sbb ss sti test outsl in xchg movslq pop subl js (bad) xor fcomip mov js or fmulp leaveq and mov rex.WRB fbld fcmovnb jnp pop fcomi xchg mov mov pop jne jle sbbl out and in xchg jmpq rex.WX jo mov andl divb (bad) insb mov and xor xor pop adc (bad) (bad) fidivrl sbb mov sbb push scas int fwait cmpl rex stos loopne rex.WRB repz jno mov mov loopne out ds mov gs imul rex.RX push je or loopne sbb adc rolb cltd callq in cld movswl add (bad) xlat (bad) fbld mov rcrl xor sbb (bad) sbb fmulp movabs pop jg (bad) jmpq repnz movabs int3 in movabs (bad) mov xor data16 mov jl rex.WRX idiv push movsb (bad) fsubr mov add insb fstpl adc xor xchg push movabs rex.WRXB (bad) loopne xor xchg push jmpq jge jnp repz loopne gs sbb rcll (bad) (bad) or iret pop rex.RX loopne mov xchg rcll xchg xchg jmp mov sbb in (bad) (bad) sti andb pop cmpl or movabs out fdivrp fisttpl cltd and (bad) mov (bad) (bad) ss jo gs rex.R or stos mov push xor jge (bad) cmpsb rex.RX lea lock retq (bad) or mov (bad) cli adc and lret test add loopne rex.RX repz loopne pop mov test rex.WXB data16 (bad) sbb sti mov (bad) rclb gs retq loopne adc (bad) mov loop sbb push shrb lods adc xchg adc sarb rex.RB mov mov xchg (bad) and loopne push negb cmpsl sub loopne lret icebp rex.B ss adcb xlat fist insb cmp cmpsb sbb stc add jmpq (bad) pop (bad) fstpt fdivr mov pushq and push (bad) enterq sahf jb rcl (bad) lret cmp (bad) ja mov rcrb xor push xchg mov cltd popfq shlb add xchg rex.WRX (bad) test (bad) movabs (bad) (bad) rex.B loopne xchg xchg cmpl xchg test jae sub and or mov retq int loopne (bad) pop (bad) movabs (bad) sbb rex.WRXB jmp shrb cmpsl pop cmp adc xchg sbbb xchg insl (bad) mov cmp push loopne lret (bad) mull (bad) pop cld push (bad) jne stos mov subl repz pop movsl loopne lods fildl in xchg jmp ror mov sbb addr32 add shrb mov fcmovnbe nop jb xchg ss (bad) ficomp loopne js imul movsl xchg and (bad) lods (bad) test and lock rex.RX icebp xchg nop fbstp mov rex.RB movabs int test sub rex.WRX repz pop outsl loopne enterq mov in fwait in (bad) and test (bad) add mov sbb rex.WRB xlat mov adc push (bad) (bad) ds xchg loopne xchg xor pushfq (bad) loopne (bad) jp (bad) leaveq rex.R out rex.W push pop movabs jnp push jg js (bad) cmpsl movsl stc (bad) ror adc repz cs imul xchg jp callq (bad) pop sbb and mov rex.RB (bad) (bad) movabs rex.WR mov cs sbb (bad) (bad) ss (bad) jmpq iret test loope and rcrl lods fcmovb stos add add push loopne xchg imul sub rex.R rex.WXB nop out mov loopne mov out loopne mov icebp int add adc movsl xor adc mov cmp out fnstsw shrb or cld outsb lods pop (bad) (bad) data16 push xor sti adc cs in (bad) (bad) mov loopne (bad) stos outsb rex.RXB cmp mov jge (bad) or sahf mov or jp adc rex.XB mov add or jg push sub out scas sti (bad) rex.WRB or insl (bad) jl add rex.RB rex.W pop mov lods jne ds cld loopne ss xchg sbbl imul pushq mov loopne jmp jb jno (bad) rex rex.WX loopne sbb rex.RXB mov (bad) pop and jmp sbb (bad) mov loopne (bad) rex.WB callq xlat add jae add pop notl cmp sahf (bad) (bad) fldl lods (bad) je rex or icebp rcrl (bad) sbb sub outsb jbe add jrcxz test fistpll lea rex.WXB lcall mov add jge ja xchg xchg or loopne js add retq jo fimull int loopne add push mov (bad) loopne (bad) or pushfq sub cli ja rex.WRX cmp jnp mov sbb div (bad) cli incl (bad) test add loop sbb or xchg add cmc (bad) es mov hlt and adc (bad) (bad) jmpq add mov in rex.XB insl (bad) xor (bad) popfq cmp sub mov pushq mov jo icebp data16 adc loopne xchg movabs and repnz int3 popfq jmpq loope out and jno jmpq push jo outsl loope loopne adc fistpl callq ljmp lods pop (bad) pop rex.WRXB sbb loop sub loopne sub jl stos pop adc test xchg ja rorl mov (bad) leaveq pop add loopne loope sar icebp cld jmpq jbe jmpq jle rex.WXB ja pop loopne test cmp or mov adc lahf adc loopne mov loope xchg insb rex.RX (bad) (bad) (bad) loopne icebp rex rex.WXB sbb mov cmp jrcxz (bad) lods mov fnsave (bad) (bad) out adc (bad) repnz (bad) stc mov rex.WRXB (bad) xor sub add lahf (bad) push or (bad) jae jrcxz imul rex.WXB adc xlat sbb shrl movsl and and xor rex.R cmp shrl adc nop outsb (bad) cmp (bad) (bad) pop xlat adc and jno loop xor rcr xchg mov ss xchg rex.RXB bnd jl out in addr32 movabs mov push rorb movabs push xchg lods (bad) jmpq rex.WRX loop mov or and insl pop mov in xchg jno addr32 rorl jnp callq jne mov xor mov sub sbb (bad) and (bad) cltd movabs mov test fsubrl push rex.WX (bad) sbb xor pushq mov out movabs outsl int3 lret sahf decl insb xchg rcrb push and pushq rex.W mov ds adc or sarb scas cli push (bad) or lahf fdivp movabs enterq movslq xchg rex.X rcll fdiv jb (bad) cwtl in icebp (bad) cmpsl pop movabs movsb imul out sbb cmp lret repnz (bad) sbb jl (bad) jns push mov pushq (bad) scas retq xchg icebp jle mov in out lahf (bad) xchg fwait jae insl jge pushq out pushq rex.WXB mov pop add (bad) lret (bad) cmp jb mov cli gs mov (bad) pop adc push jo xor jl data16 std stos adc mov movabs movabs (bad) ja std sbb in repnz or pop xchg xchg or and mov imul adc rex.WX adc (bad) jmpq rex.RB outsl (bad) movabs (bad) jae insl jl sub sub test movabs jne,pt xor lret xchg adc mov (bad) movabs ja movslq or (bad) (bad) in (bad) fs stc (bad) pop mov fsub lods sub (bad) movabs icebp xor movslq fcmovu sbb ds orb callq xor in sub incb adc lea (bad) or mov mov sarb pop mov out scas (bad) sub ds mov adc sbb out (bad) xor pop retq and sarb push int3 mov js out cwtl movsb incl lea adc popfq mov xchg (bad) cld stc repz lret test out (bad) loopne jne callq (bad) pop jmpq xchg sar rex.RXB push sbb add xorl in cmc (bad) movabs xlat (bad) std icebp (bad) or loopne ja scas rex.X rex.WR cld loopne stc cmc xchg sub sbb (bad) shll (bad) retq out loopne movslq (bad) or cmc in (bad) xchg mov nop cmp and and jmpq push in outsb jg mov jmpq (bad) jge cs ficom enterq imul test mov push xchg enterq cmp mov movabs pushfq (bad) (bad) sbb in sarl (bad) movabs data16 xor push sub gs sub nop (bad) pop fimul (bad) (bad) xor mov test sbb xchg jl movabs js cmp retq fistpll rex.X popfq rorb mov or int3 add xor (bad) mov icebp jl pop cmc or mov icebp xor (bad) loope or lret or jmp icebp push or pushq jg and mov mov clc (bad) sbb pop mov pop rorb adc (bad) loope gs push cli pushfq sub rex.XB add decl loopne loop xchg pop movabs (bad) jp (bad) jb insb shr xor ja lret jmpq sub xchg scas xor repz (bad) add sub mov out rex.X lods (bad) rex.WRX or jmpq rcrb sbbb lret rex.RB jp cli cmp in xchg jg sub imul (bad) mov jmp mov pushq adc (bad) loopne movsl ds (bad) (bad) (bad) mov sub (bad) mov pop sbb callq mov lock jns sbb push push xor ffreep loopne je rex.WRX xchg (bad) xor femms loopne adc pushq sub push mov (bad) jo popfq loopne adc ds sub repnz loopne rex.RB fnstcw addr32 jl mov iret movsl js mov lahf sbb loopne rex.XB cli insb jp xlat loopne pushfq xchg cmpsl rclb rex.RXB inc (bad) mov add sbb sbb (bad) jns rex.XB pop iret stc mov pop cmpsb mov add and sub (bad) mov or (bad) mov movabs jge mov pushfq loopne movslq test pop popfq stos rex.RB fcoms xchg movabs jne cmp cmc jle rcrl cmp mov adc jo (bad) outsl push lret stc mov adc (bad) movsl rex.WXB rex.W cmp retq (bad) mov (bad) cli insl hlt pop push rex.WXB int3 pop idivb (bad) movabs pop (bad) jae (bad) sub or or jne movabs push xchg (bad) movslq sbb jne loopne mov cmpsb sbb and sbb stos cwtl push cs test sub je loopne (bad) pop rex.R lods icebp sarl sarl or sbb pmulhw fisttpl loopne (bad) movabs mov shl rex.WRB xchg add fcmove xor imul out mov mov fist loopne (bad) movsl idivl (bad) sbb xor mov in fcmovne in movsl add test lret xor es jo mov js in mov push (bad) jg loopne fs rex.RX lock nop jnp push sub ficompl sbb fdivl jmpq fcmovnbe rex.WX and js,pt rex cwtl (bad) stos insb popfq cmp (bad) in sbb fs (bad) jb iret rex.WXB fwait (bad) loopne cmc fmuls or js vmulps loopne lcall mov retq loopne sti (bad) movb and retq sti stc enterq mov retq mov sbb (bad) (bad) clc pushq fisub rex.WR cmp lret mov enterq cld (bad) icebp xor and ds sbb test jae lods sbb test fcoml bnd rex.WRXB lods rcr mov mov mov lods adc jns rorb sti es cmpsb sub (bad) mov rex.RX clc sub add roll test xchg pop scas (bad) (bad) in mov jg adc in loopne xchg (bad) clc jmp jg mov (bad) sahf (bad) je rex.WRB shrb loopne adc and rex.WRX (bad) pop (bad) mov add fist and ja and gs adc mov in cmp loopne in enterw pushfq loopne and callq cmp rex.WRB (bad) jmpq rex.X es xchg int3 loopne cld lods (bad) and sbbl cli movslq stos (bad) scas callq stc in repz setb (bad) sbb add movabs or (bad) (bad) (bad) add (bad) push je outsb (bad) imul insl cmp mov cmp (bad) cmp stc and fidivrl jnp and je xchg rex.WXB fiadd add cmp mulb (bad) xor add add es mov jp or sbb add in push loopne cmpsl add cwtl sbb add sti popfq jbe (bad) sbb loopne jne mov (bad) sahf mov and rorb jmp je mov or or (bad) and cli mov ror adc xchg jnp or rex.R nop rex.X loopne rcrl adc imul xor (bad) lret cmp (bad) cmp (bad) fbld out loop jo pop sbb mov es hlt fdivs mov jmpq mov stc lea loopne insb adc jbe jno mov mov and (bad) callq loopne rex.XB pop sub cmpsb adc lods or (bad) (bad) mov lcall insl lods je (bad) (bad) lret mov push mov out rex.WR adc repz enterq cltd adc mov outsl mov pop mov clc add cmpsb in xchg test mov pop (bad) mov out or xor (bad) hlt xchg or loopne sbb cmpsb mov es (bad) loopne lock push negb cmp fsubrl out movabs addr32 mov es pushfq push fiaddl (bad) shrl (bad) cmpsb (bad) adc data16 adc data16 and pop rex.WR (bad) (bad) add mov imul xchg lahf jb jrcxz xchg jrcxz (bad) or (bad) (bad) rex lods sbb mov jp stos (bad) in mov test hlt sbb xchg (bad) rex.RB in push (bad) fs enterq and in mov insl (bad) outsl rex.X and sbb cmp (bad) lock sti jmp mov sbb mov mov mov rex.X push adc add and (bad) (bad) xlat mov mov push push sub xor (bad) icebp pushq mov fistl and callq adc xor fisttpl xor sbb lock in icebp or fildll test clc pop in mov add (bad) rcll mov sbb incb fsubs andl lock and rex.RB (bad) jrcxz mov push imul mov (bad) push cmc in pop retq movabs std jbe pop jno push pop pop rcll retq mov icebp mov sbb (bad) repz jae lret rex.WX repnz and repz rex out (bad) jns sbb mov xchg fisubl imul rex.WR rex.WR fcoms rex.WRX (bad) or data16 clc jae xor (bad) (bad) in hlt pushq mov adcl in mov (bad) rcl cmp and icebp jg (bad) sbb scas rex.WRXB loope or fs callq xor (bad) in mov jmp out mov loopne lret pop xchg jno adc repz retq sub (bad) or xor imul xlat mov loopne pop shlb or sub rex.X (bad) sub adc add loopne xchg test mov sub adc lahf loope push (bad) fnstcw rex.RB retq jmpq push pop nop insl adc js outsb mov adc lahf (bad) jrcxz scas loopne test clc rex.XB sbb mov xchg inc (bad) push loopne rex.WB lock (bad) ror adc rex.WR out sti movsl (bad) (bad) and std sbb rex.R sub cmp mov fsubr push or rex.X loopne sub mov pop ja cmpsb sub rex.W insl and (bad) out ficomp (bad) shll mov fnstcw (bad) and fnstsw sbb (bad) rex.XB jrcxz xor loopne (bad) add (bad) gs (bad) stc repz (bad) imul sub mov stc rex.R rex.WR jns mov xchg adc lock loopne popfq test (bad) (bad) leaveq xlat in in push and repnz pmuludq add rex.B imull rex.WB callq jns cld push rex.X loopne xlat stc fxtract (bad) or (bad) shl out (bad) adc movabs negb adc adc fdivs mov (bad) rex.R loopne push addr32 xchg (bad) lods loopne ss lea loopne (bad) outsb xchg insb (bad) in (bad) iret scas roll and mov xchg xor (bad) mov movabs jmpq (bad) cwtl leaveq in sbb sub rcrl sub cmp clc mov insl sbb out movabs jmpq (bad) sbb test xchg sub gs shll loopne rex.WR repz stos (bad) jmpq xorl repz and insb imul out sbb mov ja and (bad) iret lock hlt shl pop mov pop push (bad) rex.X movsb (bad) rex.RXB xor rex.RB mov rol cmp mov loopne and (bad) jae rolb xchg loopne fmulp sub rex.WR cmp mov mov std fisttp in mov retq rex xchg int3 test in icebp (bad) mov fisubr xchg (bad) movabs mov shr loopne pop rex.WRX mov (bad) cltd insl retq insb sub outsb loopne (bad) or lods or pop callq rex.B xchg (bad) sub add (bad) sti cmp mov sbb nop (bad) loopne shrb rex.R callq icebp data16 movabs (bad) fmul gs (bad) repz cmp in jp rex.RX loopne movabs andb adc cwtl cmp sbb push in jmpq (bad) outsb pop out xchg int3 sar (bad) mov push jnp mov (bad) push movabs add xor (bad) push test out add fnstenv sub pop shrb xchg (bad) jnp push movsb fisubr test (bad) sbb loop xlat mov rorb movabs callq fdivs (bad) adc (bad) mov mov cld (bad) and js cmp (bad) mov (bad) imul sbb leavew jle js imul fcoml cmp mov icebp adc fwait std in xabort jrcxz (bad) movslq (bad) or xchg add and jle movabs mov sarb sbb fisubr mov adc loopne adc loope rex.WRB test mov cmp and jmpq rcrl retq sti fwait add loopne push cli and callq rex.WRXB jmpq jmp (bad) int3 (bad) (bad) (bad) leaveq in rex.WXB rex.X iret xor loope shrb cmp sbbb xlat fisubrl (bad) test and rorl (bad) fldt xor cs add rclb loopne rex icebp sbb xchg loopne (bad) loop xchg push xchg (bad) rex.WRXB shl xchg pop lahf loopne js lock add (bad) (bad) roll stc rex.WX rex.WXB mov add (bad) in loopne lahf je mov fs and insb sbb jo (bad) clc in sti loop cmpsl jno add pop bnd adc loope movabs or and popfq loopne gs movabs retq in jae rex.WXB callq (bad) (bad) jns cld sbb outsb jo (bad) sub jrcxz sbb xor insl cmpsl sub push add movslq pop retq movslq or adc test (bad) mov sbb in icebp jo xor jle (bad) lcall in ja rex.WX push jbe (bad) jg push push xor sbb pop mov mov movsb rex.WRX adc scas rex.RXB cmpsl pushq xor and sbb lock (bad) rex.WRX rex.W xor or jmp xchg mov or cmc rex.XB (bad) rex.WB ds (bad) push movsb (bad) mov (bad) sbb (bad) scas sbbb sub (bad) pop add (bad) icebp imul mov repnz (bad) repnz lods push xor sub (bad) (bad) loopne jl and shrl rex.RXB test loopne jb cmp adc pushq int rex.XB mov jno lods cmp rex.WRXB cs fsubs or in (bad) sbb mov (bad) mov and int in incl adc lods popfq pop cltd cld (bad) loopne std mov rex.RXB movslq jmpq cmp mov (bad) jns stos out (bad) sbb popfq nop (bad) packssdw or jnp and and jrcxz movabs xor cmp in rex.WR lahf adc callq push jns (bad) fwait scas jbe (bad) push cwtl lods insl sub rex.WB lods cmp mov loopne adc xchg loopne (bad) repz callq in mov adc jnp lret jno out sbb insl dec insb lock cmpsl fs and test jmpq add jge xor shl inc lods retq mov fsubrs adc rex.WXB nop rex.B in in (bad) sub js (bad) or shr loop xchg loopne nop xor (bad) push gs movsl add push jp rex.RX add loopne xchg mov sub sub out sbb stc imul idivb (bad) movabs stos xor jmpq push mov (bad) retq rex.RB js sbb xor loopne cmp fucom adc (bad) xchg rcl add and retq data16 (bad) in stos xchg cld rex.RXB sub rex.WRXB loopne (bad) push jrcxz push insb nop loopne mov mov jmpq icebp loopne in sarl lcall adc addr32 fwait (bad) (bad) fdiv mov sbb push adc loopne adc or pushq out mov jnp mov fwait (bad) add lret int3 pop out xchg loopne movabs bnd lods cli imul cmp out out rex.WXB rex.B testb in jb fs cltd mov push jmpq push mov cmp (bad) (bad) jae (bad) (bad) fistp add insb movsl movabs loopne stc fsubrs (bad) cltd jns jmpq sbb and loopne,pt jle pop mov rex.W cmp rex.WXB rolb xchg xchg sub sbb push loopne ja sarl sub frstor punpckhbw cwtl loopne sti (bad) scas outsb mov je test jae (bad) popfq rex.X insb not iret gs fildll div (bad) cwtl push movslq cmp bnd icebp movslq pushq sub (bad) rcr out sbb callq mov or sbb test xlat xchg sbb jl sbb insl (bad) pop adc jrcxz jl out jnp pop jae mov rex.WRX repnz movabs pop sub sahf rex.WRXB ds (bad) cmp jle lret enterq loop mov (bad) cld jae mov rex.WRXB test movsb hlt enterq stos lods or rex.WR pop cmpsb (bad) sti (bad) movabs mov mov movabs data16 rex.WRX insl jg or cs out imul in rex.WRX in hlt lret push or push rex.XB (bad) movabs rex.XB mov or insb rex imull or mov sbb (bad) scas or (bad) xor mov or xchg es fmulp jrcxz pop test and (bad) andl pop pop sbb mov test imulb rex.B in rex.B sti movsl jbe in xlat fs add rex.X out (bad) and and (bad) (bad) jae jb shrb adcl (bad) mov movsl div in sbb push fcomps (bad) xor mov callq lcall push (bad) roll pop adc loopne sub jbe loopne test fidiv imul in orl sarb rex.RB (bad) out iret (bad) and fcmovbe xchg ss push lods pop push outsb sbb pop (bad) adc callq add xor xchg rex.WX rex.XB rex.WRXB imul mov loope jrcxz stos rex.WB sub sti rex.RX rex.RXB (bad) xchg fstps and out loopne fstpt mov mov add cmpsb enterq jno int mov sbb loopne xchg (bad) cmp mov jp xlat jrcxz sub xchg retq test sbb rex.W movabs xchg sub and addr32 jrcxz iret not in add xchg xchg sarb andb xor jne loopne mov rex.RX and in loopne adc fwait rex.WRXB movsl pushfq rex.B fimull jae roll incl pop addl in neg retq xor imul icebp or lods jrcxz icebp mov enterq jne test loopne (bad) movsl divb mov out mov push add loopne mov mov int3 and cs std (bad) adc loopne or xchg lods rex.WX gs pop mov mov loopne out and (bad) fsubrl mov fmuls test loopne fildl pop push sbb sbb rex.WX add and out mov pushq scas loopne or fs xor test std sbb rex.RX jl insl xor sub fimul in cwtl or int3 loopne sub es loopne sahf lret test loop iret (bad) loop shl sub clc xchg fiaddl cltd lret andl movabs loopne pop loop retq (bad) clc ja push mov (bad) loopne enterq test jo mov cmp repnz lret xor jo mov bt xor loopne shll fidivrl xor in (bad) iret sub or adc mov movabs loopne std (bad) or jge loope popfq xchg repz mov (bad) (bad) (bad) cltd clc pushq (bad) mov addr32 (bad) rex add cmp push mov add (bad) sahf jbe cmp movslq mov in cld push add and movabs sub and data16 in sub push (bad) (bad) cmp rex.WXB fstpt xchg (bad) jmpq movsb push jns sub xor sti and or addr32 (bad) rex.WX rex and loopne lea cmpsl push stc icebp insl adc xor in movabs hlt fwait test jno xchg mov adc loopne xchg negl js in fcmovne and (bad) test xchg rex.WB rex.WX popfq mul sbb adc out rex.WRXB (bad) xchg adc pop cmp loopne es and (bad) movsl fabs sbb mov xlat (bad) mov add cwtl ja loopne xchg pop cmp loopne (bad) int3 decl lret (bad) (bad) jp jns and out rex.WRX hlt rex.W jo movabs xchg sub hlt or cli ss push and adc scas movabs rex cmpsl mov pop addl (bad) shrl xchg and out loopne mov (bad) movsl jnp jb clc jl jbe add scas (bad) cld callq repnz rex.WX cmp loopne (bad) jp xchg (bad) jne jmpq jns mov cmp jmpq rex.WRXB xor fs (bad) in lea mov add (bad) or (bad) rex.WRX adc sub bnd loopne adc in repz (bad) cmp push comiss pop imul pop rex.WRXB scas fxch insl movsb (bad) decb jle cltd (bad) rex.R xor xor xor callq in pop movsl ja (bad) or rex.RXB loopne mov rex.RB mov and push addl (bad) lods leaveq icebp gs jo mov (bad) mov and (bad) pop jmpq (bad) xor cmpsl fnstsw outsl mov and clc mov leaveq xchg int pop sub rex.XB mov movabs movsb in jle add (bad) xlat (bad) ss push loope (bad) gs outsl movsl adc loopne xchg rex.RXB push rex.WRXB rex.R std cmpsl mov test mov (bad) fucom mov and adc loopne rex.WRXB mov rex.WR shll movslq (bad) cmp (bad) sbb in rcr add nop sub movslq adc rolb (bad) cmp out pop loopne jg (bad) mov pop jns clc (bad) rex.WRX xor retq add pop or rex.WRXB and rcrb push rex.RX cltd cmpb sbb and adcb sahf sti or mov ss rex.WR (bad) and mov or (bad) loopne xor sti iret xchg add sbb xchg subb loopne (bad) add iret scas movabs mov outsb test sub or es add rcll fcoms loopne cmp test sub (bad) test (bad) xor (bad) pushq rex.RXB mov or xchg pop lods add movsl or mov popfq mov loopne pop add repnz incb adc outsb pushq (bad) and (bad) ror insb or rclb outsb cmp fstl fdivrp add cmp hlt cli js and movabs incl fcompl rex.WX mov add jo xorb sahf xchg mov rex.W rcll test dec rex.WX incl xchg loop pop sbb pmovmskb lret adc (bad) jmpq xchg retq ds cs mov loopne fdivrs jnp adc mov sbb loopne or mov cld loopne (bad) mov sub popq cmc rex.RB xor and rex.WB notl data16 (bad) or clc (bad) rex.WR int push decl stos cwtl adc rex.WRX outsb rex.WX cmp cs (bad) cltd fstps loopne rcr add outsl cmp add popfq lock mov loopne notl lahf and pop loopne repz and xchg cmp mov xchg notb xchg (bad) loop cs rdtsc lret sub imul add sub outsl stos retq repnz (bad) (bad) callq (bad) push and add push add add in loopne (bad) and cmpl insl or loopne outsl movabs push in lock out rex.B adc rex.RB adc and add mov movabs adc sbb rex.W (bad) rclb mov pop mov (bad) cmpsb in (bad) xor adc xchg sbb (bad) cmp (bad) repz mull jae jo mov icebp and insb xlat ds jae mov nop push cmp pushq (bad) and mov gs leaveq sub fsts ss push (bad) (bad) sbb mov movabs (bad) jb adc mov out clc nop (bad) scas (bad) cmp repnz iret fcos (bad) sti jge out cmp insb xor rex.W (bad) or sbbl mov je retq adc sbb sub scas (bad) (bad) mov lret (bad) addb (bad) fstl jl nop icebp xor rex.R pushq and jno shl stc rex.WRXB (bad) jae xor addb in push insb movabs sbb xchg xchg (bad) fnstsw (bad) or stos cltd loopne stc in add add vucomisd sbb mov jrcxz je jae mov shlb in in cmpsl std sub jmpq rex.WB xchg loopne push and (bad) pop or fldt xor lret rex.W rex.RXB nop (bad) xor adc loopne sub loopne loop lock mov (bad) (bad) movsb loopne adc test sbb repnz add stc cmpb cs cmc sti loopne (bad) lahf rex.XB rex.X pushq loopne rex rol jmpq (bad) loopne mov shr rex imul jp insl adc cmp add add movsl jno jrcxz add mov and iret loopne rex roll jp loopne cmp shrb pop loopne movb jno jmp loopne lret or loopne push (bad) cmp lods rex.WRXB jle adc mov pushfq loopne cmc icebp mov loopne cmp adc mov in xlat mov xchg mov psllq test jbe adc js jp rex.B sub cmc lret popfq loopne sub movabs xchg movsb lret movsl cvtps2pi mov icebp and cmc xchg add mov (bad) mov pushq mov mov and sub loopne fdiv (bad) sar sbb (bad) sbb xlat sbb fldenv cmp hlt cmp xor out cltd scas (bad) out loopne andl mov sbb pop adc pushq fcompl or sub clc rex.WX out ficompl loopne andl rex.RB fcomi adc sbb sbb cmp add jmpq stos vpaddusw xchg cltd loopne iret sub xchg (bad) rex.WXB add (bad) rex.WRX rex.XB xchg jmp out or imul mov rex.WXB loopne and push cmp jg (bad) cmpsb push jmpq cmp test movslq add fcmovbe (bad) lcall fldenv xlat sub (bad) jl mov loopne adc push cmp rex.WX loopne iret and (bad) movabs repz loopne,pt sbb out (bad) loopne test pop idiv pop push loopne js mov (bad) xchg xchg sbb mov pop (bad) (bad) movabs out fstpl (bad) mov cmpsl rex.X or cmpsl (bad) or (bad) mov and iret cmpsb mov adc add (bad) fmuls jno iret loopne jns xchg (bad) (bad) xchg es rex.RB movabs movabs (bad) movsl loopne jrcxz rorl loop rex.RB (bad) lret xchg adc sbb stos add fsub imul scas loopne and callq mov jnp loopne cmp je jns (bad) cltd sarl outsb xor fisttpll (bad) mov retq lods rex.XB (bad) mov and retq pop or (bad) (bad) in gs jbe rex.WXB xchg cwtl loope add mov rolb cmp movabs cmpsb lahf loopne add rex.X rex.WRX loopne imul (bad) (bad) push fnstsw push cmp nop (bad) mov insb mov test ss jnp and paddq (bad) (bad) (bad) testl cmpsb pop je addr32 scas jg (bad) imul jno fisubl sbb loope loopne pop pop (bad) (bad) rcr test or xor loopne (bad) (bad) jp testl jl movsl jo and mov fs out test pop rex.WRXB cmc loopne sbb add mov mov (bad) rcl mov mov cmpsb imul pop shl cmpsl movabs mulb adc mov pop pushq xlat movabs or ja and (bad) mov rex out rex loopne pop loop sub rex.WRXB addr32 repz xor fdivrs cmp hlt jae (bad) pushq mov adc loopne fidivrl (bad) loopne imul xchg adc ja pop movabs sbb popfq int3 out in mov movabs rex.B stos lods iret in rex mov adc repnz icebp rex.X repz out jl callq xor mov cmp (bad) clc sub mov xchg repnz jp mov jrcxz sbb rex.WX rex.XB xchg and (bad) jl rex.RB push sbb loopne mov jae out scas rex.WRX insb iret fstps cld test loopne and fucom pop rex.W (bad) rex.WB cmp mov es loopne (bad) jmp cltd xchg lea xchg or nop (bad) scas xchg int3 in cli leaveq jrcxz pushfq xor xchg adcl rex.X retq scas loopne rex.RB sub (bad) loopne (bad) retq (bad) mov or test cli outsb (bad) jae xchg repnz movslq clc loopne or pushfq roll jle adc jl mov loopne,pn (bad) jne rex.WXB cmp cmpsb mov clc stos loopne add push adc popfq repnz stc lahf outsb (bad) adc rex.WB xchg repnz loopne push or xor loopne cmp jno cmp movabs repz test sbb jnp callq (bad) cmpsb rex.RXB mov xor jmpq cmp (bad) pop mov int je movabs xor cmpl lret in pop cmc (bad) xchg and loop rex.RX mov loopne adc xchg movabs rolb enterq movabs rex.WRX xor int (bad) ja (bad) push rex.RXB (bad) out in rex.B (bad) enterq adcl cmp xor and pop popq movsl rex.WRXB loopne,pn pushq mov mov movabs fidivrl lret jno lahf (bad) (bad) xor decl hlt xchg in rex repnz rex lock xchg loopne jg cld and xchg movabs xchg loopne pop jmp cmc (bad) notl cld test pop rolb (bad) xor fcoml (bad) je pushq lret push (bad) loopne xchg xor scas and hlt (bad) cmp loopne,pn mov mov sti xor cli adc or cmp xchg lret (bad) pop cmp lea cmpsb sti stos shr push mov mov and lods add rcr (bad) mov pop adc in (bad) or jns mov xor cld repz scas (bad) (bad) mov jne adc inc mov rex.W and fsubp imul (bad) jae lea movsl and (bad) clc (bad) cmp test mov (bad) mov loopne mov sub pop stc pushfq cmpsl loopne pop rex.WXB in loope xchg (bad) xor rex.WRXB add cltd rex.WRB push or psraw loopne mov jb leaveq (bad) push pop test scas in sub loopne stos (bad) pop sbb shl jl adc enterq adc sbb and rex.WRB icebp neg loopne push add nop mov fistl loopne sahf and xchg xor loopne cld movabs cmc mov cmpps adc (bad) ja (bad) iret xor (bad) sbb add cmp clc sahf sarb and lods push lods (bad) mov sbb mov xchg test add scas jmp push rex.XB sub stos paddusw rcl rex.WRB jrcxz push mov jle and stc pushfq out fs xor (bad) jns push sub cmc xor cld mov cwtl (bad) mov in imul fiadd nop (bad) loopne (bad) imul cmpsq scas loopne xor loope push retq mov push and loopne outsl insb fstps (bad) std (bad) jl xlat stc loopne rex.RX cs js out xchg fucom (bad) nop xchg add movsl sub rorl js rex.RX (bad) rex.RB callq jbe cmp and callq lods fadds scas sbb cmc jmp xor rex.WX xor pop and rex.WX out fdiv fist mov rex.RXB (bad) loopne hlt test push movabs fstpt mov mov xlat and (bad) (bad) cmp out (bad) (bad) insb (bad) jge movabs stc rex.R loope (bad) (bad) cltd lret fcomps rex.WRX sahf jg sbb fwait mov (bad) (bad) (bad) mov in movabs mov adc (bad) or mov rex.WRB rex.B mov imul ds out (bad) (bad) cmp shr fidivr lods out rex.WRXB addr32 sub pop in or lahf xchg ss adc push sub insl test jns out (bad) repz mov push xchg or and (bad) add xchg clc add loopne add xchg mov push (bad) in pushq mov push push popfq fcomps int3 out sub xchg sti icebp ss scas orb (bad) mov mov pop add (bad) xor xchg (bad) (bad) cli outsb cmc and fiaddl lods subl loopne (bad) (bad) push sub pop loopne retq movabs xor xor hlt mov rex.WRB (bad) movsl add (bad) jb pop mov mov mov (bad) pop loop loopne and rex.WR rex.R xchg cwtl shl pop or stc mov (bad) or rex.W callq pushfq jg (bad) in rex.RXB (bad) test movabs loopne mov pop sub mov mov ss icebp mov mov or xchg adc loopne sub icebp (bad) (bad) jns xor and loop in rex.WR shl and fdivrl (bad) mov push retq callq mov frstor adc xchg lret push push loopne insl (bad) (bad) pushq sbb and in (bad) cli int3 loopne and xor in mov mov (bad) push sub push adc loop in jp xlat loopne movsl rex.WR mov mov cmp jno (bad) sub mov mov fwait cmp fs jo mov jno in movsl repnz enterq mov xor retq rex.R gs sbb xor xor push sub test jbe push add or (bad) movsl jmp jp loopne add or xchg (bad) rex.XB out loopne (bad) rolb loopne (bad) cmp (bad) fwait insl mov ds loopne (bad) test (bad) rcrb rex.WRX push xor retw loopne mov jl (bad) inc loopne (bad) sahf es and (bad) mov sbb jno (bad) fwait cmp jb in icebp and (bad) (bad) loopne rex.WRXB rex.XB adc in sbb (bad) stos mov cltd pop xor cmp jns mov cmp jmpq out (bad) movsl sub nop fnop scas jbe rcl shl jp cltd xor mov sti jae mov sub rex.WR xor (bad) cmpsb or outsb mov hlt in pop (bad) and push fldlg2 cmpsl mov stos xor movslq mov sub mov in rex.WRX jb jmp insb pop hlt loopne cld mov or mov (bad) (bad) sahf std fsub loopne rorl rex.WX jae sti ficom adc adc outsl fwait test rex.WRB icebp sti test xor repz rex.WRB xor iret loopne callq out fwait sbb pop cmpb rex.WRXB xchg rcrl push rex.XB cmp (bad) xor or nop (bad) imul loopne repz scas (bad) mov xchg addb fstpl mov lock mov movabs sub xchg ja adc int3 out out and mov loopne (bad) mov stos loope cmc in fcmovnbe sti mov rex.RXB xlat in ds cmp mov in std or lods (bad) or xor xor int in movabs fldl popfq cmp push repnz rex outsb test jg in jo cltd sub adc push lock sbb mov nop cmp cmp add sub fstpl fisubl rcr mov pop mov (bad) inc and mull lock push jae xchg rex.RB adc (bad) pop jns sbb xor mov std xchg xor push loopne popfq imul repnz loopne mov stos pop (bad) xlat lahf mov pushq (bad) jno stc jle loopne sbb out push xor xchg rex.RXB jbe stos mov push int xchg (bad) pop loopne add sbb pop loopne jae addr32 repz adc js mov movslq mov lock in jne sbb (bad) in pushq or stc scas xchg rex.WR adc nop or pushq adc (bad) pop loopne cmp data16 jrcxz mov (bad) sbb pop in decl (bad) push loope sbb (bad) rex.WB shrl mov stos cmp push loopne xlat (bad) fwait out mov (bad) icebp (bad) xchg rorb mov jno sub (bad) loopne repnz cmpsb movabs xor shl mov roll sbb cmp je add mov push loopne (bad) repz stos retq (bad) (bad) sub sub xor (bad) movabs rex.WX loopne xchg nop loopne mov movabs mov rex.X mov divl (bad) movsl loopne add (bad) rex.WRB js cmpl test mov js adc jo (bad) jnp leaveq and (bad) sub add mov (bad) xchg (bad) or loopne fldt cmp test and push int ficomp mov lahf sub rex.XB lods (bad) and (bad) pop and loopne mov jns fist pop xchg shrl xchg ds mov cli out xchg or rex.RX xchg rex.WRX loopne mov lods mov or mov push addr32 sbb vmovaps out sahf mov sbb lret (bad) jmp sbb and and in pop jrcxz fs rol fimul loopne test icebp or add adc fcoml xchg or gs add (bad) scas sbb mov lock adc mov (bad) imul rclb (bad) pushfq pushfq adc adc mov xchg adc in lods or ss loopne hlt movabs loope mov jg (bad) out or rex.WR (bad) outsl (bad) xor pushq jnp rex.W sub jbe leaveq movsl insl adc jmp xchg xchg (bad) jmpq pop xchg cli in mov (bad) cmp jg cmc rex.R jmpq jns rex.WRXB rex.WRB cmp jne and (bad) xlat pushq and or mov scas addr32 cmp in add jle or xchg jmpq xchg adc (bad) add cmp xchg rex.WX mov lea sub mov std (bad) in repnz sbb imul mov (bad) rclb (bad) loope mov sub xchg (bad) xchg cmp xchg rex.WB pop xchg (bad) ds xor test sar mov cmpl (bad) loopne sbb xor (bad) rex.WR rcrb loop (bad) out xchg jrcxz rex xchg int3 loopne insl mov lahf adc data16 pushq pop push (bad) mul in jae (bad) es add test movabs (bad) stos cmpsl adc jne pop enterq pop (bad) repz loop adc fcompl jmpq rex.WXB rex.R or pop rex.X rex.WRX and sbb pop loopne (bad) xchg retq sub cld rex.R movabs mov fimul leaveq movabs (bad) pop (bad) stc in or mov out insb outsb jne rex.W clc scas int3 movabs (bad) push (bad) iret fiaddl lahf mov add rex.WRXB icebp mov (bad) fcmovnb cmc lock mov movabs pop (bad) icebp out out clc test push fcmovne loopne stc sub rex.RB add jbe (bad) (bad) imull in pop data16 lret loopne push (bad) callq and (bad) cli pop mov xchg in (bad) (bad) movabs adc cmc test movabs outsl mov fmuls fwait shl mov sbb loop mov loop jnp (bad) xor loopne (bad) cmpsl rcrl imul in icebp add (bad) xor out (bad) adc loopne and lods sub (bad) pop imul fisub jp and fsts (bad) leaveq xchg int shl pop (bad) mov loopne hlt xchg rex.RX jrcxz adc loopne push add int3 and and jl jg scas loopne add rex.R stc cltd mov adc add and jmp out or repnz and mov or loopne insb jne or adc mov loopne mov mov loopne mov stc in pop (bad) (bad) and (bad) mov outsb test test or mov cmp (bad) sti rex.WRXB (bad) sub (bad) imul xor mov sub notb mov mov sub loopne cld lret jb adc mov in icebp mov movabs out rex.W rex.WR rex.XB rex.B mov pop (bad) jns (bad) jmpq (bad) (bad) loopne xchg sbb scas xor xchg and cli (bad) stos lahf jg (bad) or negb and cmpsl add (bad) mov sub outsb loopne adc and fld std fwait rolb sub xchg ffreep movabs loopne (bad) and (bad) jmpq cld rex movsb (bad) (bad) cld sti adc and loopne and mov (bad) xchg in cmp cmp jns sub cmp mov adc je mov jae stos jl loopne movabs rex.RXB rex.RB (bad) mov sbb xlat (bad) cwtl loopne rclb (bad) mov add mov loope or rex.R rex.B shrb xchg (bad) cmp mov push in leaveq mov fwait iret pop sub stc (bad) icebp and movb fcom hlt (bad) in movslq (bad) cmp adc out adc and cmp fcompl jae and (bad) xor (bad) iret and mov rex.WRXB mov (bad) movsl (bad) insb sbb add mov mov cltd incb repz fistp movsb (bad) (bad) scas rex.WXB movabs pop or or loopne cmp test retq int int3 mov nop (bad) pushq in leaveq lahf mov (bad) (bad) cmpsb jae xchg rex.WRX (bad) mov mov loope out int3 mov stc pushw callq cmp (bad) jno shrl adc add (bad) jrcxz pop in lret push mov (bad) rex.WRB rex.WRXB nop sbb push and pop and shrl adc loopne jnp imul (bad) mov loopne retq and push out xor loop movsb mov loopne notb sbb fdivrs lods loopne mov adc mov jno rex.RX xor fcmovnb push nop mov (bad) incb mov leaveq cmp jae notq rex.RX loopne repz (bad) mov frstor stos in leaveq mov (bad) xchg (bad) out jmp (bad) lock rex.WRXB popq ja (bad) xor add loopne (bad) push imul shl cli rex.WB pop cwtl sub and adc fstps or push or nop (bad) in mov or lods sub jrcxz add and xlat test mov cmp and add js xor roll mov addr32 loop xchg or jl rex.RXB cs sbb mov mov lcall and je xchg xchg (bad) movaps xor and jge rcl pop hlt sbb popfq (bad) jbe (bad) rex.RX shr orl in cltd add es (bad) fildll or jo loopne add mov (bad) or loopne rcr ss in loopne (bad) in test std cltd in cmp jrcxz pop gs add movsb adc jp add cmc (bad) add jg rex.X rex.W stos pop cmp int pop scas repnz add addr32 es loopne mov cmp loopne jmp repz cmp dec sbb cli icebp rex.RX mov jae cwtl out fs mov xchg mov pushq jnp xchg stc repnz scas adc jmp jb jmpq rolb loopne sti adc sub jo loopne cltd mov mov (bad) faddl jmpq xchg movabs sub mov sub mov or rex.XB (bad) fcmovnb cmp loopne push xchg lret mov fimull insb add loopne (bad) lods int3 rex.WRX (bad) data16 (bad) sbb adc (bad) rex.RX movsb mov (bad) rex.WR add xor (bad) pop movsb retq cmp fwait or cmp and (bad) loopne sub lea mov loopne fidiv mov enterq lea loop je or cwtl push loopne xor sbb retq flds loope jo (bad) movl out movslq cltd scas (bad) repz mov test and mov lods in clc (bad) mov pushfq fisubrl stc mov (bad) ss loopne xor addr32 mov repz sti (bad) (bad) (bad) pavgw lret (bad) out in xchg cmp imul insb xchg mov test roll xor sub movsb es rex.R xor mov rcll test (bad) xchg repz andb (bad) sbb (bad) rex.W jno out cmp or mov (bad) pop fstcw jrcxz movslq jno jne loopne fwait (bad) lock cld xor callq or fnstenv icebp in (bad) cs mov leaveq pop mov or (bad) mov ds test jo xchg mull lods (bad) (bad) loopne xor cmpsl sub cwtl fisubr andl lods lret (bad) jp callq xor (bad) rex.WRB int jae sbb mov jrcxz add jl (bad) xchg rex.WRX xchg jrcxz repnz push (bad) lea std jrcxz xchg cltd hlt loopne mov sbb lret loop iret mov rorb popfq (bad) gs (bad) loopne outsl scas pop loope leaveq mov mov mov in movslq mov ja rex.RX adc jl dec (bad) xchg xor push pop jmp (bad) xchg xchg jmpq movabs mov movsb jnp or rex.RX (bad) (bad) add mov in retq jb push movabs insb xchg (bad) stc ja rex.WRXB adcb lock (bad) vpavgw mov lret jl (bad) sub jo lods (bad) xchg movabs mov xor jns loop loop add callq cmpsb sbb mov adc (bad) (bad) (bad) xor callq rex.WR cmp (bad) sbb pop mov jg jmp loope movabs sbb sbb adc paddusb movsb scas and fwait mov in mov cmp hlt cs subl xchg faddl enterq js jbe pop ja in loop jo icebp imul adc cmp jge in flds and cli gs cmp adc jo mov mov rex rex.WRX lock (bad) rex.X movabs sub pop in (bad) or mov xchg fbstp (bad) (bad) mov and rcrb repz cmp rex.WRXB movabs es and (bad) stc (bad) sbb jle and mov popfq and fs (bad) or sub jnp fidiv jbe mov jrcxz xchg (bad) (bad) repz lahf outsb mov xor outsl rcl test (bad) mov lock cmc add iret rex.WX xor (bad) cwtl or mov sub sbb enterq mov (bad) mov addr32 fsubrp rex.WB hlt push (bad) rex.B add icebp fsubs (bad) notb mov mov sbb xor (bad) rolb in push imul cmp and cltd int3 loopne mov icebp in mov cmp out lahf loopne lret je (bad) ss pop (bad) xchg jb (bad) jns lret in (bad) sbb jae vpaddusb addr32 jo xchg mov lea cmpb scas adc loope stos sbb addr32 (bad) leaveq loop or rex.X add sub mov xor cwtl push je mov sbb mov (bad) (bad) jrcxz (bad) rolb insl cmc push clc (bad) movabs hlt adc and mov insb (bad) pop jns (bad) rex.WXB jmp iret sarb mov jrcxz hlt sbb loop pop mov mov push (bad) out cmp loope pop rex.RXB incb rex.WX mov out cltd pop (bad) sbb jmpq mov jmpq jp rex.WRXB lahf jno pop repnz cmc fsts (bad) cli sti icebp (bad) rex.WB rex.XB data16 int3 mov movslq rex.RXB rex.B xchg leaveq rolb sub mov cmpsl fistpll pushq xor movabs (bad) or (bad) xchg sbb rex fcomps popfq loopne xchg stos jrcxz loopne (bad) out nop sti cmp adc sbb mov jl jno ss repnz xor pushq (bad) mov stc in (bad) pop scas loopne sub lahf rex.X outsb loopne or test (bad) shl out cwtl rex.RX jle xchg movabs xlat movsb and mov fstp sbb (bad) adc in cmp rol adc jae add pop rex ss rex.WRXB rex.WRB mov loopne xor sarb pop sbb pushq mov push data16 xchg callq rolb loopne jge (bad) push (bad) rex.X pushfq in push pop add stc jmpq movabs mov add scas add mov pop sbb and mov mov rex.WX cmp cld push es divl xor pop mov mov adc rex.WRXB (bad) push lahf pushq xchg (bad) and stc insb retq pop adc popfq mov adc loopne imul adcl out add (bad) mov in in rolb lock int retq retq fist in movabs loopne cmpl rex.WRXB sbb rex.RXB loopne,pn sbb ficoml mov (bad) jnp outsb jp (bad) mov jg ss cmp cmpsb xchg mov adc je push jmp sar push (bad) fistl jmpq xor mov (bad) rcrl movabs xlat loope add xor repnz out test rex.WRXB (bad) xchg stos jrcxz xor loopne imul rcrb jbe (bad) fistpll sub (bad) (bad) out loopne rorl cmp lods loopne fnsave and cmp movl cmc xor or out sbb mov cmpsb push out scas (bad) cmc movsb (bad) rex.WX rex.WR cltd cwtl shl (bad) xor callq xor fs (bad) xor push hlt rex.WRXB repnz fs mov mov icebp rcrb test movabs mov imul pop hlt mov icebp and xchg and cld jl cmpl pushq add pushfq mov test sbb jp and cltd (bad) sub (bad) sub (bad) sbb push std cmp scas sarb fisubr (bad) loopne je rex.RXB xchg xor cmp adc fstpt imul jmpq repz loopne adc xchg out mov enterq (bad) iret (bad) rolb mov test outsb push push and cmpsl loopne cmp shl sahf movabs mov push (bad) xor mov lock scas mull mov rclb iret loopne movabs jnp jg cmpsl (bad) nop or in clc pop js xchg (bad) xchg add loopne push je dec stos jmp test neg (bad) push mov sarl (bad) (bad) and (bad) mov (bad) rex.WRX mov stos and movabs lret or push xor mov sti cli mov adc int3 je cmp mov fcmovne (bad) loopne mov jge scas jmpq mov mov jo mov cmp or and cmp or xor rclb mov xchg test adc in adcb or jne popfq fs adc loopne mov (bad) shr (bad) sahf in fmull cmc mov js insb (bad) loopne push mov sti jmpq xchg loope (bad) (bad) (bad) fstps lods loopne cmp mov cmc mov shl jl sub and xchg clc idivb adc xchg mov cwtl jmp rex.WXB icebp xor rolb popfq js jrcxz,pn push stos pop xchg gs retq or cmpsl jrcxz callq in and sbb loopne jmp cmpl jrcxz mov lea rex.R loopne movabs (bad) fisubr popfq (bad) loopne imul movabs adc (bad) callq add movsb mov (bad) rex.WX movabs or add dec cmp cmpb icebp (bad) (bad) lret in (bad) push int3 fucomi rex.W cld (bad) out pushfq pop add ljmp adc xchg jmpq rex.W xchg fisubl shrl mov adc (bad) loopne,pn xor rex.WB rex.WXB add add (bad) fcompl mov (bad) pop leaveq rex.XB in (bad) or mov loopne cltd jnp hlt movabs push in fchs loope (bad) (bad) icebp pushq xchg clc rex.WRXB ds sub (bad) scas ja sbb jmpq scas gs sbb and in cmp rex.WR outsl and imul test icebp in cmp and xor jg or xchg pop cmp xor shrl lret out (bad) and jo (bad) sub icebp cmc pushq and jg pushfq push mov movsb adc add (bad) fnstcw test sbb jg add inc rex.WX xor addr32 movabs not and pushfq sbb fs test cwtl mov lods outsl sti and pop movsb loopne and add popfq mov (bad) rex.WRXB cmc and (bad) idivl jrcxz mov lea push mov lock or xor (bad) and adc lods (bad) in rex.WRXB repnz mov xchg jmpq adc loopne enterq mov xor in sbb callq add rorb (bad) shl xor fchs jo repz jg mov loopne fisttpl pop lods loopne mov push js clc or cltd lret mov (bad) stos jns xchg or movabs mov nop (bad) loop lahf rex.WRXB (bad) xor rex.XB rex.WR test (bad) jmpq xlat mov mov cmpsb clc (bad) in movabs rex.WRX jle xchg mov mov mov (bad) loopne xchg xchg mov mov push lods cwtl pop scas lret loop (bad) mov fs in jbe sbb rcl jrcxz je xor loopne rex.WRXB jno pop xchg (bad) loopne cmp add xchg mov xchg fcmovnu adc sub loopne hlt rex.XB cmp adc mov sub rex.RX movsl push (bad) loopne (bad) lret js cmp pop sti xchg movabs mov (bad) pushq fldenv loopne jbe lret ja in sbb jrcxz movslq rex.WX jne mov (bad) rex.WRXB (bad) lret leaveq sub loopne rex.XB rex.WX sub or test loopne mov movabs push outsl in mov sbb mov xlat adc out shll jle int loopne (bad) fdiv add addr32 xchg mull in pushq (bad) imul xchg add adc xor rex.W rex.WXB (bad) loopne fistp in push (bad) push retq mov fnstcw out cmp and rex.X lcall sarb (bad) xchg nop xor pop cmc movabs jrcxz test cli push or jo rex.R rex.XB insb push add in (bad) cmc movsl (bad) cmp nop push sti pop cmp fwait cltd sbb xor in test int loopne mov jmpq loopne (bad) js rex.WRX addr32 loopne push mov jb (bad) mul mov xor (bad) push rex.RX (bad) clc and mov sbb rex.W gs sub mov loopne sbb mov stos repnz loopne sub (bad) (bad) (bad) data16 lock mov and out push (bad) loopne rex.W loopne gs test rorl xor add loopne mov sti cwtl loopne adc fs movslq add movabs sbb jmpq mov out lods cmp (bad) movabs (bad) jb movabs (bad) mov and sub loopne lret mov (bad) movabs std (bad) add (bad) pushq lret scas cltd and loope shl fist mul sbb retq (bad) (bad) cwtl pop sbb add sti movslq jp and mov repz (bad) cmp rcr test push sbb std out adc fmulp (bad) leaveq rex.WRXB pop sbb insl (bad) cmp sbb lea cli (bad) cwtl adc (bad) fimul (bad) loop mov pop lret (bad) jmpq xor (bad) int push rex.WR nop (bad) jae rex.WRB (bad) repnz pop psubusb sbb rex.RXB (bad) rex.WXB or mov xchg mov rex.RX add and xorb jmpq rex.WRB push retq add adc rex.X jg push mov outsl and outsl sbb insl ficoml mov cmpsb ja (bad) jrcxz pop repnz (bad) lret callq cs sbb mov (bad) cmp lret (bad) lods loop popfq in fucomp test (bad) cmp lock fwait in (bad) push mov js cltd lods faddl pop mov adc sub mov shrl ja sbb scas xor (bad) enterq fcoms iret out lods hlt mov insb jg (bad) rex.RX stc jle lods jmp jae (bad) xor fiaddl movabs test rex.W es in or in jrcxz add rcrl test mov loopne rex.WR sbb jmp mov push in loopne out (bad) out rcll loopne cmc sbb icebp shll cmp rclb rex.WB add adc xchg hlt fcoml pop jl sahf lret loopne int jno mov data16 out mov (bad) adc (bad) (bad) (bad) callq cli loop mov xchg rcrb jp movabs or insb hlt shrl loopne xchg rex.X rex.WR test (bad) jnp lahf insl rex.RB test xchg int3 mov push adc jo sar pop retq loopne test pop mov ficomp mov (bad) rex.B loopne cmp int3 movsb movabs add xor fwait (bad) (bad) rex.W mov pushq jmpq sahf cmc shrb (bad) pop stos xchg add (bad) push (bad) mov mov sbb mov rex.WRB movslq (bad) pop and jle jbe cmc (bad) sbb data16 rcrl rex.X (bad) in mov cs mov ficom jmpq adc rcrb lock mov jrcxz nop in movabs mov rolb add ja ficompl icebp je sub sub out repnz mov out stos fsubl jrcxz pop (bad) rex.WRX rex.WRXB xchg (bad) rex.WB pop mov sahf and sbb mov lock (bad) or adc adc andl movabs lock mov out (bad) in push stos out or pmullw lods (bad) rcr mov fwait (bad) loopne movabs scas rex.WXB xor (bad) rex.W or pop (bad) xlat fsub mov sub test sub movabs and cmp lods loopne sti jrcxz (bad) loope adc or push mov sbb or adc (bad) js mov sbb rex.RXB test mov lods (bad) mulb imul add sbb insl and ss (bad) (bad) ds sbb (bad) add mov loopne sub lret bndstx jg (bad) sub and mov (bad) lods std (bad) outsb fcompl jp nop cld xor pop xchg loopne scas shr jge mov jno (bad) pushfq lret repz (bad) ss mov and fnop rex.RXB shrl imul in rex.X sar test popfq in adc sub xor (bad) (bad) cltd jo or loopne ds movabs (bad) or jmpq sub (bad) loopne mov stc retq mov imul cltd repz mov mov movsl movabs and movabs xchg jo retq outsl (bad) or movl and adc jne loopne mov loopne pushfq jb insl mov mov in lahf stos jo loopne retq cmp shrb cld lret (bad) (bad) repz sub fs data16 outsl rcll (bad) loopne fwait adc lock rex.WR loopne pop cmp mov pushq mov xor lret adc shl icebp leaveq rex.WR pop xor js push jns in hlt sub mov xor xchg cmpsl fimull (bad) (bad) pop (bad) mov stos insl in jnp lret push mov outsl xor or pop and mov push (bad) jnp loopne cli popfq in lock stos cmp mull sub adc adc and (bad) movabs or rex.RX loopne push sub (bad) adc movabs (bad) lahf stc mov (bad) movabs jmpq push (bad) or xchg mov lret leaveq and xchg test (bad) pop retq cltd xor test xchg jge xor (bad) xor loopne mov lret adc sbb repnz (bad) test iret (bad) imul in pushq (bad) movsl movabs test jge rorl mov xchg or sub mov mov (bad) or out rex.WXB pop jo rex.R xor adc (bad) ja push push xor rex.WRX pop sub out push rex.RXB jo in sub cmp (bad) out xchg fwait sub (bad) outsl cmp retq mulb pop movabs jnp pop cmp in mov or addr32 (bad) adc in int (bad) in sbb out add sub (bad) pop jrcxz (bad) lods or imul xchg sub icebp pushq (bad) adc xor mov mov cmp jmpq pushfq out (bad) xchg cmc insl adc xchg sub loopne jmp movabs (bad) and mov add (bad) clc xor mov mov sbb sahf mov (bad) cmc sub ds shlb (bad) (bad) or cs (bad) retq nop rex.WB (bad) (bad) movabs pop movsl and (bad) mov add cmp iret jno xchg mov xchg sbb pop rex.R mov repnz adc or add rex loopne fucomp leaveq rex.X (bad) xlat or and (bad) negb jrcxz xchg cld cmp xchg rex.R rex.RXB test (bad) icebp xchg push imul insl clc in cmc mov loopne and callq (bad) mov add push xor xor mov (bad) loopne movsb push sub rex.WRXB xlat stc (bad) mov push shl or sti xchg decb push loopne rex.RX fisub sbb out and nop pop (bad) xor fistpll pextrw sub rex.RXB jne rex.B loopne fmull mov add roll (bad) mov rex.RXB shl (bad) jne sub xor movabs xchg mov mov jne (bad) (bad) retq jp mov fwait xor pushfq loopne sub xchg lahf adc rex.WB shl mov push sbb xchg insb loopne cmc or mov cmp (bad) outsb rex.WB jge sub mov stc jg jae ss retq (bad) loopne add (bad) xchg cwtl and add add xlat (bad) rorb std in jmp pop jmpq cmpsl xchg add imul (bad) xlat xor jg fildl stos and cmp (bad) sub sub (bad) rex.X clc (bad) (bad) rex.WRX sbb scas lods decb int3 (bad) jg rex.WRX and xchg cmp (bad) sub or int3 mov stos cmpl cmp loop pop pop outsb icebp in icebp pushq rex.WRX es std test lahf jp xchg pop cli movabs in lahf mov (bad) (bad) repnz rex.WXB adc cltd ja mov rex.RXB jp cmc (bad) add outsl adc and in sbb out jo scas (bad) shl outsl push cwtl (bad) jmpq (bad) pop jae mov pop and fistp jg or sbb enterq (bad) repz push hlt outsl gs rex.WXB loopne mov (bad) add retq in jmpq xlat mov cmp adc out insb cs sbb in lret sti mov sub sub in pop test loopne stos xchg (bad) sub pop jrcxz lock add fdivrl jns incl insl rex.WR mov lock sub mov mov sbb scas xor (bad) adcb (bad) or int3 lcall scas (bad) jo cmp repnz adc and (bad) in imul movsl xor xchg insl or in or leaveq jmpq jb jae movslq (bad) movsl in pop sub (bad) ficomp xchg movabs rex.WRX in mov movabs insl movabs push fldenv xlat loop mov and fsubrl mov jmpq fwait xor sbb or fimul cwtl loopne cmpsl rex.RB or repnz movabs or xchg jne rex.WR leaveq out inc lea movabs loopne sbb jle loopne add (bad) movslq mov rex.WRXB sub (bad) (bad) jmp punpcklwd or fldl adc insl scas sar xchg rex.RXB rex.RX rex lock in rex.X sbb sbb xchg test stc xchg (bad) jl lcall push es (bad) (bad) and imul xchg (bad) clc rex.WXB pop (bad) idiv subb std (bad) (bad) loopnel rex.XB (bad) pop jmp (bad) loopne stos sti rex.RX cltd (bad) imulb jmpq jbe xchg fstps (bad) incl xbeginq rex.WR mull add cmpsb int3 loopne sub mov in (bad) mov or lret repnz imul leaveq loopnel and pop stc cmpsl imul pop rex adcb loopne mov xchg imul rex.XB nop js xchg (bad) in cmpsl je movslq loopne cld callq mov imul movslq mov and rex.WR lahf mov retq (bad) xlat sti loopne adc repnz xchg out cwtl loopne mov adc xchg loop fimull shr rcll cmp (bad) loopne outsl lods or (bad) loopne jnp vpunpckhbw loop rex.WRX (bad) shlb jo (bad) or and rex.B rex.WX cmp (bad) loopne (bad) xchg pop imul add fidivrl xchg outsb movabs rolb xchg jrcxz jne movabs mov rex.WRXB loopne imul cld test fsub in sub orl mov loopne pop push (bad) cmp rex.B mov imul mov shrl loopne (bad) mov sub (bad) or jne retq hlt loopne or fisub mov sub gs stc shl xor sbb loop sbb mov cmp lods outsl nop rex.B xor (bad) scas iret push sub loopne mov xor pop loopne push in cmpsb xchg insl cmp pop mov pop cmp mov push popfq cld rcll test rex.WB rex.WB xchg retq icebp popfq es jp loop mov sub mov mov (bad) stc adc jno mov enterq jns test movabs cmpsl stos lods jno in cmpsb mov movabs stc mov pushq rex.WRB mov mov pop adcl xlat rex.X jge mov jrcxz or outsb retq and jne pop loopne or psubb (bad) push adc (bad) rex.WX std es mov (bad) mov stos mov and cwtl loopne pushfq mov mov rex.W jb rorb roll add jl pop jle fucom push nop retq sarl pop jmp xchg cmpsl and js loopne vmwrite rex.RB xchg fneni(8087 loop xor int3 xchg jne loopne rex.RX rex.X gs jp stos push and pop movabs fdivr loopne sbb test (bad) push pop (bad) (bad) movabs sbb ss (bad) out push push loopne mov vpmulhw incb mov mov xchg add sarl stc (bad) fchs sub clc insb pop pmulhuw scas pushq jo and addr32 loopne cmp mov adc decl cmc rex.WRX mov and in int mov jmpq testb cmp popq add cs adc adc xchg push ss jo pop and fsubl jnp sti jmpq js (bad) mov mov in lods int3 (bad) lock cmp adc jnp jo hlt cmp mov (bad) (bad) adc fiadd adc pop xor and pushq or jo and mov rex.B in flds gs mov (bad) mov shlb out xor mov clc int3 sbbl out push fcoms fisttpll rex xor rex.X lahf (bad) hlt cmp sbb mov (bad) es iret mov addr32 (bad) data16 xchg (bad) rex.R push pop lods jmpq roll iret adc ja insb popfq cld sbb (bad) push gs pop movsb pop xchg sarb sbb fucomp adc pop rorl xor rex.WRB push clc and and rol popfq movabs sbb loopne (bad) imulb (bad) (bad) push loopne bnd mov hlt movabs rorb cmp loopne enterq movabs out shl pop add loopne lret jmpq add movsl retq lods rex data16 popfq mov mov je fisubr (bad) outsb loope popfq cmp loopne push movabs add dec sbb mov mov jbe out (bad) or cmp add outsl callq in pop lods int3 (bad) pop (bad) addr32 sbb rex.WX icebp loopne mov shr mov or cmp loopne push sahf rcrb mov (bad) sub nop xor sbb std sub jmpq movabs add rcpps push sbb mov cltd xor sub mov (bad) add loopne cmp rex.WR push (bad) rex.RX pop jge rex.XB (bad) jrcxz add shl sbb orb outsl sub jns or ds mov rex.RXB pushfq (bad) mov sbb and xor jae push movabs (bad) xchg repnz sarl shrb jl (bad) adc scas in andl sbb and (bad) nop test push mov and ficompl in add (bad) cmpsl enterq lahf and lea mov iret pop outsb (bad) (bad) mov fisub es cmp (bad) mov jrcxz insb and shll mov pushq cmc (bad) mov rex.X sub xor mov or rex.B scas sub rcl sub movsb jo pop (bad) adc fcoml fsubl mov (bad) movabs lock and clc jmpq and movslq mov sbb cmpb (bad) (bad) add or repnz (bad) int3 (bad) mov mov js jnp sbb (bad) jge imul ss jb (bad) rcrq (bad) rolb stos repz mov (bad) jbe pop sub (bad) and (bad) cmc mov jmp outsb and (bad) (bad) rex.WRXB imul and cs sbb or lea shrb mov xchg jns sbb fwait push nop mov rcll out or rep rex.X mov xchg retq xor or xchg decb mov cltd repnz rex.RB (bad) (bad) hlt mov push rclb (bad) xchg jae nop sarl (bad) cltd js pop ja and and jae add add rex.WRB adc push fsubr adc mov or callq mov in pushq sbb and (bad) jg clc jnp popq test rex.WRX mov (bad) jmp mov outsl insb (bad) test repnz xor lret roll out mov je or pushw jl movslq movups icebp insl push ficom adc fstpt sub jrcxz jp cwtl (bad) sbb sub (bad) (bad) jmp cmpsl mov cmp outsl sbb rex.R rex.WR mov and out outsb lahf test jg fsubs rex.WB callq jg sbbl mov mov adc and cmp movsb fs scas callq andl jae rex.WB outsl outsb decl jmpq sbb (bad) out insb xor sbb rex xor mov ljmp adc add and loop xchg enterq fdivl mov xchg xchg addr32 sub imul jbe mov jrcxz out xlat and (bad) mov cmp rorl sti rclb sbb sub push mov adc and loopne movabs jge (bad) pop cli insl add lods cld xchg rex.WB rex.WRX (bad) scas je loopne cmp jle movsb (bad) add loopne mov div (bad) loopne mov (bad) popfq loopne out mov movabs not clc loopne adc pop rex.WRB cmp xor adc cld addb pop loopne rcl jmp popfq loopne and fadd loopne adc hlt (bad) rex.WB jbe mov push fisub pushq (bad) gs (bad) loopne leaveq cmp and (bad) rex.XB adc (bad) and adcb int loopne mov shrb lret (bad) cmp (bad) or cltd xchg sub jl add ss retq xor cld (bad) jle (bad) enterq rex.WRXB loopne xor adc in adc pushq lea mov pop or cltd jge jne jl cmp in loopne gs or xor add mov ds cmp mov and (bad) or jp loopne sahf (bad) lods enterq fwait xor mov rex.WRXB adcl (bad) cmp loopne rorb cld cmp pop rex.WRX (bad) jne sti movb sarb xchg addr32 lret or fidiv push out and mov loope out xchg xor fs movabs or cpuid clc and cmp adc (bad) xor (bad) ds sub test ss (bad) sbbb adc and sub insb nop sub out sbb (bad) mov xchg fisub mov push jge outsl (bad) enterq test xchg rex.WR xchg or movsl shlb movslq rex.WB lock xchg (bad) in add movslq jo imul jle int adcl retq fs (bad) xchg int in rex.RX and idivl out jns (bad) adc js or xchg mov sbb je stos test sti (bad) jp (bad) cmpsl sarb out fwait mov rex.WRX adc push sahf xchg add stos cltd xchg and adcl xor rex mov loope fdivrl push imul jp xorb rex.WRX jg sahf mov xorb (bad) jnp pop sbb mov rex cmpsl addr32 sbb cmp lods and sbb and cltd mov movabs xchg out push movabs (bad) jno sahf push fwait int mov (bad) mov clc xor outsb add lahf fdivs (bad) pop test lods mov fwait xlat rex.WRX fwait retq repz add shrb out sbb (bad) adc pop cmp imul push jb jns mov mov (bad) inc outsl loopne rex (bad) and mov repnz pop sbb cs rol std loopne enterq pop rex.WRXB stc and mov or sarl test lock (bad) cmc ja (bad) sbbl in icebp fs pop faddl add hlt xorps lret xchg xor push adc add (bad) jbe rex.WRB xor fbld movabs mov out mov outsl (bad) and mov fistpl outsl insl xor or (bad) imul stc (bad) fildl xor insb sahf movabs (bad) xor add clc pushq jo (bad) (bad) enterq xchg js (bad) xor pop nop (bad) jle push repz add mov hlt movsb enterq add rex.WXB fsub jno pushfq xchg movabs push adc rex.R and leaveq rex.WB stc rex.WRXB lret lea sahf sbb (bad) pop and cld (bad) rex.WRXB rex.R pop cmp out movsb pop shl or nop mov rex.X andl scas mov data16 mov fyl2xp1 outsb and loopne push lret (bad) sti (bad) jmpq loop je jmpq insb adc sbb rex.WRX (bad) mov (bad) (bad) xor push adc callq loopne leaveq and movabs sti icebp mov rex.RXB movabs xchg fdivp jmpq jg or pop rex.WRB xor movslq push incb adc and sbb jbe push lret (bad) mov mov outsb scas sub jne es sahf push (bad) negl (bad) movsb movabs insl and movsl xor rex sbb movabs pop nop and adc cmpsl mov jbe retq xlat insl xor testb mov stos jb shlb clc jae push movabs mov lret mov mov fwait pushq (bad) (bad) sub (bad) adc out loop lock cmc sub adc addr32 fwait (bad) pop (bad) cmp fsubs outsl (bad) (bad) (bad) cmovs or (bad) (bad) roll pop outsl cltd jb lret sub sbb mov and jno mov pop imul movabs std (bad) out and xchg (bad) (bad) (bad) lret fnstcw adc mov or and (bad) lods xor rex.WRB in in icebp clc push jne rorb sbb in xchg mov xor (bad) test pop mov push or pop pop jno or insl push jns popq pop add mov jne add push pushq (bad) rex mov push insl push out push loopne add lea push idivb lret movslq (bad) mov fimull in sbb movslq retq (bad) jne je test sbb xchg jbe cmp (bad) shrl iret retq sub out imul jb sub push adc ds pop retq adc cmc in cmp (bad) mov mov jae movslq ds test out mov (bad) adc sti and movabs (bad) int3 sub lcall mov retq jns or data16 xor or mov movsl adc movsb add sub push push movabs pop rex.WR mov popfq lret sbb jns test and (bad) xchg lock pushq jge outsb jmpq jp (bad) test mov jbe rol pushfq stos outsb xor pop jns movslq (bad) xchg pop xor cmp or sbb and pop mov imul jnp in push add frstor jmpq cmp or xchg cmc loopne addr32 (bad) push retq loopne sbb (bad) repz es rex.W lods sti xchg sbb cmc loopne lret (bad) push sub cwtl (bad) sar or xchg vpcmpeqb cld cmpl xchg sti insl push loopne and imul jp cmc test cmp or and mov xor pop pop (bad) loopne mov mov addr32 (bad) jl movabs loopne mov (bad) in loop mov xor mov mov decb popfq loopne movsb jmpq pop loopne nop adc (bad) out adc jge jmpq cmp mov out rex.WRB rex.XB rex.RXB and xor fwait add push js rcrb sbb es sbb jne or (bad) (bad) pop add loopne adc or ja jno and push jp fwait (bad) loopne mov sbb (bad) (bad) jle lret callq xor mov jmpq rex.WX dec sub (bad) sub retq pushfq and sbb rex.WRXB rex.WXB jo nop fnsetpm(287 mov jo int icebp jg outsl loope je or add sbb repz lods (bad) in lods ds mov retq pop stos cmp sti rex.WRB shll fcomps rolq jns adc imul cwtl jmp stos push jo jno (bad) rex.WB jp (bad) loop add clc add scas pop (bad) jbe icebp leaveq out cmp sbb test adc (bad) fidivr rex.WR insl mov jge cmp outsb cld ja mov sbb mov fst mov (bad) mov pop insb fs push test sub xchg mov mov cwtl enterq (bad) (bad) fldl adc in sub or pop loopne out sbb shr loopne jno or jge (bad) xchg nop fisttpll rex.W loopne sbb nop pop movabs rex.RX push sti lret dec js,pt (bad) lods cli cmc (bad) mov xchg je and jne pop movsb (bad) loopne movabs js sbb cltd (bad) push mov decb rex.WRB fsts loopne rex.WR (bad) fstl push mov and sbb lret push mov (bad) sub jp movsl or (bad) mov repz (bad) js sbb push jb pushq cmc jrcxz push xlat or rex.RX xchg js jns cld punpckhwd fstl pushfq (bad) repz fmull stos (bad) mov xorb and sub sub outsl adc xchg std shlb xor ja xorl rex.B cmp movabs add (bad) ss stc loopne jmpq fnsave fs mov lods (bad) sbb mov in xor pushq adc mov push mov loopne xchg pushq movabs and ja mov mov rcrl or movabs adc sti add rex.X icebp push and sbb frstor sbb outsb mov cmpsb xchg adc rex.R imul adc (bad) xor xchg mov (bad) push stos mov jo icebp pushfq (bad) cmp sbb loopne cwtl mov (bad) faddl mov jno shlb (bad) (bad) (bad) (bad) loopne stos lea in xchg loopne mov jne xchg in (bad) rex.RX cmp mov int adc lock test fwait cmpsb (bad) mov adc mov or cmp movabs jle clc jmpq movabs (bad) loopne add cmc sbbb test rcl loopne mov mov fs in xor cs xlat loopne test addr32 outsb addl jb add (bad) jmp rclb (bad) shlq callq xor test or cmp xchg push outsb sbb mull fdivrs pop push fild lret nop (bad) in lods (bad) lahf loopne retq mov fsub subb popfq rex.WB rex.R (bad) (bad) rex.WXB (bad) mov rcrl cmp sbb enterq test frstpm(287 insl or xor (bad) repz pushq sbb movsb out lret and xor pop loopne pandn mov xchg loopne enterq adc adc mov int3 xor imul (bad) mov scas loopnel xchg in mov pop xor enterq std sbb test movabs test movabs rex.XB xchg (bad) (bad) hlt sbb adc movabs sahf and adc insb xchg sbbb stc cmp lea (bad) jae test lock jl,pn nop xchg push (bad) and jb jle (bad) sub decl (bad) xlat insl callq loopne push push (bad) adc rex.WRXB fcomip lock (bad) mov mov lcall (bad) rex rorl cmc lock std lods xor jmp rex.X add jl push insl movslq (bad) mov or xorb enterq rcrb (bad) mov (bad) mov fdivl (bad) push xchg (bad) data16 in data16 sbb push jle and rex.WRX rex.RXB (bad) sbb push ja,pn stc in sbb (bad) pop (bad) (bad) test mov in jno (bad) incb jl stos jbe fs push rex.RB (bad) stos outsb repnz sbb xlat cmp mov sbb pop outsb cli stos (bad) rol sub sbb fldl add icebp jle movabs rex.W mov push mov sub adcb push xor imul xor int3 or sbb sbb mov in mov test or (bad) int3 movabs sahf stc fwait pcmpeqw and leaveq sbb fsubrl stc mov (bad) mov xchg push or pop stos sbb loope pushq xor ror (bad) lock or rex.WRX cmp fs mov fsubr out sahf (bad) test movsl mov movabs mov (bad) adc xor rol je (bad) mov (bad) (bad) loopne sbb sbb xlat add cs clc outsb and cmp cmp imul xchg and rex.WRX mov test fwait cltd sbb mov pop je imul cmp sbb add in (bad) clc and (bad) pop gs hlt sbb mov xor cwtl stos sbb and lret (bad) sarb fwait and xchg addl jo jrcxz fsts dec (bad) sub xchg clc rex.W rex.WRXB movslq or testb cwtl (bad) cmp cltd sub cmc jb cmp sub retq fimul or (bad) rex.RB rex.WR xor decl lock rex.WXB rex.XB mov add cli sub xor cltd (bad) xor cmp push jmpq jmp xchg sbbb cltd out xor rcll rex.RB loopne leaveq fisub (bad) rex.WRXB insl (bad) and fwait sarl and rcl (bad) lahf cmpsb mov movabs mov stc jmpq rorb in xchg pmuludq rex.WRXB and shll cmc loopne loop adc jmpq xchg insb loopne adcl in or mov or cmp add scas test pushq ljmp sbb push cmp jg std (bad) cmp outsl jmpq movabs insl lret rex.WRB loopne (bad) rcrq cmp (bad) sub mov sub push imul mov pushfq (bad) ds cmp loopne out xlat (bad) (bad) repz in (bad) lret xor (bad) shl leaveq lods movabs clc fs insb shr in or (bad) pop scas scas pop and mov leaveq sbb xor loopne (bad) out (bad) mov xor push sub (bad) push int push cs sbb lret pop sub xor (bad) and sbb callq clc lret jl xchg movabs xor rex (bad) push (bad) loopne sbb retq rex.W ss insl xchg lods sub and sub movslq jl push test and pop xchg lods ror pop sbb stos cwtl shll add cld jno pop jo add lods negl xchg retq retq xor mov jnp lahf add pushq xchg (bad) xchg shll sbb push rex.W rex.RXB rorb sub cmp mov and addr32 add enterq sbb (bad) xchg loop adc mov cmpsl jmp mov pushq rex.WR in or mov jo (bad) adc (bad) jb icebp fs (bad) push pop movl (bad) mov test test or sti sarl (bad) insb pop cwtl rorb jne adc loopne callq xchg xorb lock xor sub (bad) repz mov jnp jl mov mov popfq cmp mov add cs lahf jg sub cmp (bad) rex.WB rex.RB repz (bad) movabs and mov adc adc retq cmpsb cli stos jmpq and cmp xchg scas (bad) in gs (bad) sti xor (bad) push (bad) movabs jo lock in enterq rex.WRXB jg (bad) or fdivr adc mov loopne in movabs sti (bad) je adc sub (bad) add push (bad) and psubsw and lods int3 (bad) rex.WRXB outsb (bad) (bad) (bad) or jle add (bad) jae mov lods loopne rex.RB mov loopne rex.RX push movabs xchg mov sbb xchg cmp add rex.RXB rex.X jb test mulb jns sbb (bad) icebp (bad) sbb (bad) loopne (bad) std xchg jae out loopne (bad) or sub cmc loopne jp rex.RX repz fscale loopne (bad) mov (bad) mov jge out jo outsb (bad) (bad) and test std or loopne pop or (bad) loopne rex.RXB (bad) ds jg cmp xchg lods loop adc pop fs add jg out pop rex.RXB rolw add adc pushfq rex.RB rex.RX or fs mov (bad) jl (bad) xor (bad) movabs mov (bad) pushq mov rex.RX (bad) loopne rex.WRX (bad) lcall callq mov insl adc in adc (bad) (bad) pop loopne nop hlt loop (bad) movsb mov fld leaveq adc fsub sub rex.WRB stos (bad) lahf mov lea sub fwait cmp in push stos xchg (bad) add rex.RX pop (bad) sbb jnp movabs shl (bad) mov adc (bad) pushfq loop rcl mov rex.WX rex.WB ds push or in mov rorl mov push jl rex gs and loopne fisubrl cmp adc sub repz xor mov mov and out and in cmp cmc and and (bad) jp push pop rolb fwait (bad) test (bad) test mov and in xor lods cli ds pop mov rex.WX rex.W pop stos sbb out movslq or sti pop xor clc sub loopne (bad) jle test loopne (bad) (bad) rex.WRB rex.WB add pop (bad) sti sbb xchg rex.RB lods popfq xchg rex.W fs jl popq outsb fsubp (bad) out idivb shr (bad) fistpll or pushfq rex.B jmpq sub test incl xchg (bad) jmpq shrl adc (bad) adcb mov xchg mov mov rex.WRX xchg pushq xlat pushfq and pop mov loopne jge or (bad) (bad) mov cmp jbe sub (bad) fildl sti icebp scas mov mov sub in add rex.WB xor (bad) movabs xor and or mov (bad) pushfq loopne cmp movabs stos (bad) (bad) jrcxz cwtl cmp mov ja rex.WRB frstor repz sbb ss nop xchg add xorb clc hlt int mov (bad) xor mov shr jbe iret or loopne mov mov test add jae xlat cmc mov mov outsb imul push push sbb divl cltd adc xchg (bad) out test (bad) loopne movslq movabs callq shl loope xchg (bad) cmp fs (bad) fcomi rex.WXB rclb lea enterq sahf (bad) add (bad) cltd cld adc loopne fdiv push jb cmp icebp mov push in sub xchg sbb js push addl iret loope jg in pop je xchg or (bad) mov fcomps loopne adc callq cs (bad) icebp mov pop push insl jnp mov mov retq or test in mov mov (bad) rex.X insl andl lea cmp adc xchg loope rex.RB and jo xchg pushfq loopne (bad) (bad) sbb loopne sbb sbb jle rex.WRX pop rex.RXB adc loopne mov xor pop pause cltd (bad) out (bad) cmp mov pushq in xchg rex.R rex.XB xlat mov add retq rex.WXB loopne add shlb movabs mov leaveq jbe test in fwait mov rex.WR sar mov mov pop movabs loopne mov xchg pop rorl mov loopne (bad) (bad) xor in rex.WR xchg jrcxz push or rex.WRX mov and push sbb (bad) (bad) addb stc scas mov fnstsw sub loopne (bad) sarb (bad) mov rcl rex.WR rex.WX outsl xchg movb loop mov cld and (bad) (bad) push test stos shrl adc sbb xor clc loopne and and sub movabs mov xlat loope retq (bad) loopne jge enterq and cmpsl in loopne xlat lret jle rex.R sub retq loopne scas pop mov mov movabs shlb loopne or pushfq jbe fs mov cmp rex.WB sahf jno movabs rex.WRB jo (bad) (bad) (bad) (bad) mov xlat rex.XB lret pushq adc add xor pop jmpq sarl mov jno stos fdivrl fcomps (bad) (bad) or xor pushq movabs rex.WXB loopne xchg jge jns (bad) rex.WX sbb stc repz lods (bad) pushq loopne imul mov imul loopne in sbb and jrcxz loopne insl adc (bad) (bad) and pushq stos cmp callq pop (bad) sub rorl rex.WRB clc cmp cld movsl jo (bad) mov (bad) js rex.WX push (bad) or jmpq cmp add inc sbb (bad) jg xlat cmpsl rex.WRXB mov (bad) lret pop xchg mov in mov sbb mov add loopne jo shll sbb loopne jl xchg push movb jle cmp js sub rex.WRX rex.WX adc loop cld test jl loopne movabs jmpq (bad) mov cmc (bad) rex.RB pop je jle jns imul sbb loopne callq outsb or lahf mov push (bad) xor pop cmp pop xlat ss cli mov xor outsl sahf (bad) loopne cmpsb test (bad) push mov mov mov fimull lea adc (bad) or jp xchg push movl jnp jmpq (bad) fisub sbb (bad) (bad) icebp gs mov ffree push sbb cmc shll adc mov and adc and iret int out leaveq jge cltd stos (bad) mov and mov mov sbb sbb (bad) (bad) pushq mov or mov mov cs cmpsl movabs (bad) pop loope jrcxz adc divb (bad) lock jl mov (bad) fdivl jo setne mov push sub insl cltd lock jns (bad) lods (bad) lock mov xchg mov sub jp int3 sub pop pushq add cmc int3 jbe gs leaveq and xchg (bad) stc rex.WX mov in xchg pushq xorl pushfq lret rex.WXB rex.WRX retq sbb (bad) (bad) retq sbb loope (bad) or in pop jmp test xor xor (bad) (bad) cmp (bad) mov jmpq rol movabs push rex.RB jns in or xchg add jmpq (bad) (bad) (bad) enterq jns rex.WRXB (bad) jo sbb ds shr test rex.WX sub (bad) js adc fstl xor mov jge rex.RB ljmp rcrb add pop mov xchg jo fist fwait or xchg mov fmull sbb rex.R pop mov xchg icebp (bad) mov rex.WRXB gs cltd (bad) sbb adc (bad) pop push loopne sbb fwait (bad) push (bad) xor (bad) cwtl and jle and push jg jge loopne sub stos (bad) sbb mov (bad) and rex.X jmpq push rclb cli repnz loopne and rex.X movsb cmp cmc pop pop hlt add sbb or out adc shrb push lret push rex.XB jp (bad) (bad) (bad) rex.RXB js repz jo in pop xchg (bad) out mov jp (bad) cmp mov adc (bad) xchg mov push out mov shr in cmp push or loopne cmp movslq cmpsl imul jmp data16 loop nop pop cmovl rex.WXB (bad) (bad) or icebp add mov in (bad) xor (bad) movabs iret retq loopne sub rex.W and stc adc xlat mov movabs (bad) and movsb mov mov in repnz pop in lock loopne hlt es xor cmp test js mov (bad) repnz rex.RXB movsl rex or js cmpsl jmp es loopne mov xchg not xor loopne out push (bad) callq rex.WRXB loop movntq out (bad) fstpl xchg jnp (bad) mov in (bad) out mov mov (bad) sti and add mov fsubr loopne xchg add sub add fild movabs and jl movsb repnz jbe loopne movsl rex.W mov add pushq and (bad) (bad) fnsave cltd (bad) loopne (bad) jg sub push jle add out jge sub (bad) push fs out (bad) (bad) sub (bad) (bad) and fidivl and adc sbb pushq stos cmp push fneni(8087 (bad) jmp sub addr32 (bad) pushq movslq ss mov in or loop xchg test sub out xchg std sbb icebp fwait rex.WRX fwait movabs xchg jmp adc and iret loopne jg pushq add jmp push ja lret jrcxz cmp jmpq xor mov movabs mov popfq or or test adc cmp enterq and xchg gs fbld lret xor sbb loopne icebp (bad) in nop callq cwtl push add movabs scas (bad) or (bad) (bad) loopne subb (bad) mov rcll outsl xor pushq retq adc mov jnp jo cmc lret mov pop sub jbe xchg xor int3 sbb rex.W mov out out cmp jg addr32 sub lret movabs cmc (bad) push xchg pop movsb (bad) sub pushq cld xor clc mov loopne in mov (bad) jo loopne and jg sub in rex.RXB nop xchg (bad) rcr mov lahf std popfq and jne add jge loopne jl es xor add fdivp (bad) add loopne lret stos adc jne sbb mov sub sbb loopne add (bad) (bad) std pop loopne shll rex.RXB movabs cmp lea loopne mov ror fs cli push adc cmpsb mov (bad) fstps pop (bad) and jp loopne rex.RX pop (bad) scas (bad) mov (bad) outsl jge xchg push jg shlb in rex.W rex.WR rex.X out add ds xor add xchg mov clc (bad) rex.WRB (bad) sub mov rex push jo mov int in data16 je rclb addr32 pushfq fdivrs sbb lahf retq jp cmp data16 repnz (bad) pop fwait iret rcl test add (bad) cmc fidivl xor xchg sbb cmp push sbbl test sbb std and ds pop (bad) leaveq pop (bad) insb int sbb mov rex.RB scas (bad) mov sbb sbb sub mov movabs jmp xchg rcrb and rex.RB or sti sub (bad) sbb jae sbb pop or xor pushq stc sub stos repnz roll jrcxz movslq or pushq jb adc adc pop lret shr rex.RXB lock out ss ds mov cmp sub movabs and (bad) test push push rex.W outsb stos and adcl sbb xchg sahf cmp rex.RX (bad) sbb movabs imul push ds pop (bad) mov cmp repnz (bad) js repz (bad) ja and sbb jle xor (bad) in xor (bad) (bad) mov lock fs repnz movsl ds jmp jo or stos std (bad) and rex.WRX rex.RXB cmpsb imul outsb loop add add (bad) mov (bad) xchg out pop adc decb outsb mov pop movsl comiss (bad) cwtl (bad) (bad) sbbl (bad) insl jge jbe (bad) (bad) fisubrl rex.RX pop ds cwtl scas (bad) rcrb sbb mov loopne mov popfq cmc sub (bad) in jg mov scas xchg (bad) push (bad) stos popfq nop jrcxz cmc fsubr test jg or or (bad) mov data16 pop jne add in movslq es mov rex.X cmpsl shl sub or movsb jmp js loopne jbe test rex.WX out loopne jmpq loope callq or rex ds fisttpl (bad) (bad) js loopne xor in or and mov (bad) lock in adc pop test jb rex.WRX fnop and retq jae (bad) xchg cld jmpq clc rex.WXB rex.WRX stc subl in mov (bad) movabs nop sub (bad) xchg jo and jrcxz loope or jl hlt orb out test outsb cmp mov lret pop ljmp xor sbb sub sbb scas xlat xchg mov adc and adc mov loopne push lods mov in (bad) retq fstl mov shrl ficompl loop (bad) sarl sbb mov ror sbb sbb sub jae (bad) imul push xor xor adc mov mov imul orb (bad) push jne iret and loop pop rex.RXB loopne rex.XB lock ficom clc movabs sarb mov xchg ss stos data16 fdivrl jmpq rcr cmp push sub mov (bad) xchg loopne pop rex.RX mov xchg jbe rex.WX test push and int add mov in mov jmpq int3 sub cmpsl cld and (bad) lahf pop cmp enterq cmp mov lret loopne faddl mov loopne cmp int3 push mov mov jrcxz andb in fsub rex.X pop stc movslq (bad) (bad) add stos test js and data16 cmp out push or data16 and es and movsl mov fiaddl callq cltd popfq movslq xor xchg mov cld rex.RB rex.W and pushq sarb negl fnsave sub stos push push add leaveq xor iret mov pop loopne out add (bad) loopne xchg sub rclb stos lea loopne cmp in retq callq data16 insb sar push (bad) cmpsb pop fwait loopne std jno xchg push lods loopne jge lret js sti sbb sti pushq loopne (bad) mulb adc clc rex.R (bad) movabs shlb callq shlb rolb fstpt (bad) adc xchg (bad) cmp sub mov or movsl cmpb (bad) pushq pop loopne mov mov rex.WRB (bad) movslq xor retq xor xor rex.RX jmpq xchg jl outsl add push loopne cwtl (bad) mov (bad) in cs lods retq jo movsl (bad) in loope adc sub add adc rex.W callq jns movabs sbb (bad) (bad) mov (bad) or callq adc mov mov sub retq (bad) insl (bad) pop xchg pop xor (bad) mov mul sub cmp sbb xor add jrcxz stos (bad) mov or js (bad) movabs add xor adc loope (bad) loopne mov in mov (bad) cmc push rex.WRXB cld sub lods (bad) loopne movabs rex.RX jae retq (bad) (bad) xlat int xchg mov jns rex.WRX loopne movsb (bad) in pop rex.RB (bad) rex.WX int3 adc jmpq rex.RXB sub in mov rex or test loopne jnp (bad) push (bad) movsb (bad) loopne lods (bad) bnd rex.XB or movabs repnz cmp loopne sbb rex.WRXB rex.W sub out (bad) subb cld gs (bad) adc insb rex.WXB xchg mov lret push (bad) (bad) leaveq (bad) cltd loopne rex rex.WB cmp loopne and std pop fsub jrcxz (bad) jbe clc pushfq movabs callq sbb cmc (bad) (bad) in repnz sahf xlat sti jrcxz xchg sub and sbb pop loop adc push pop sar in out pushfq (bad) sub xchg movabs pop ss ffree repz rex.X (bad) loopne and shr push adc (bad) out pop xchg cltd and mov (bad) mov out (bad) rex.XB orb addb mov mov (bad) (bad) lret jbe lods lret (bad) leaveq and cs loop mov adc nop outsb rex.R repnz (bad) (bad) pushq rol loopne xchg add add movslq fcom rex.WRB pop sbb test (bad) lods loopne in lret sub rex.WR jne loopne mov jno sub add lods or jb ss rorl jnp leaveq loopne mov sbb ds movsl xor enterq rex.WR movabs loopne push xor in xorl int3 and (bad) pushq fimull fcomip pushq xchg xor add rex.WR loopne rex.WRB shll pop mov repnz rex.R add cmp jl repnz clc mov in or out add fdivr movabs movabs mov mov sbb gs icebp lods fsts out loopne sbb pop or and fcmovu cld cltd icebp fwait sbb xchg movabs cwtl add (bad) (bad) add pop rex.WRX in test sub add or adc fstl retq mov mov xlat (bad) insl icebp cmp retq imul out (bad) (bad) js fistl (bad) sbb (bad) loopne cmp pop in fucomip lods push pop (bad) insl out (bad) (bad) fstps adc add jae (bad) cmp movabs xchg sub lock or iret (bad) stos loopne movabs rex.WRX xchg cmpsl xor loopne push mov jno outsb (bad) or rex.WR movslq jbe loopne or rex.X xor push (bad) (bad) xor (bad) rex.WB (bad) (bad) jmpq lret movabs lods shlb enterq jg sahf xchg repnz cli cmp cmp out add lock adc rorl lahf mov (bad) xchg sbb loopne in xor fcoms icebp jb pushfq nop xchg jmp xor (bad) add and xchg out rex.WRX cld stos sub es and (bad) lret frstor imul or (bad) gs pushq or mov sbb pop adc iret sub push in enterw rex.WRX je or icebp cmc (bad) add rex.WXB sar push movsb hlt (bad) jb cmp (bad) push sub pop adc callq pop ds mov xchg jl shrl jbe pushq loope cmp mov orl mov sahf rex.WRXB lods mov ds (bad) mov in jo adc pop sti fbld jmp cmp in jnp ds mov mov xchg add in js in jmp and sub pop rex sub (bad) and adc pop or add icebp push and loopne xor add js pushq (bad) std (bad) mov stos (bad) (bad) sub sbb pop add push dec cmpsb icebp xchg pop je out mov movslq adc int3 (bad) jb stos xor pop shlb in (bad) and pop in imul data16 mov enterq push (bad) and sbb xchg (bad) (bad) jns shr adc (bad) icebp in sbbb mov loopne shld jae ds (bad) repnz repnz (bad) imul (bad) sub push pop mull jae (bad) repz loopne rex.WB loopne jno lret cmp xor sbb in adc (bad) push mov loop movabs adc adc xorl jmpq loopne cmpsl xchg loop pop (bad) lahf loopne stos cmp scas ja loopne mov add rex.WRXB jns rex add pushfq loopne mov shr stc loope mov cld adc (bad) sub mov imul loopne jbe cmp and sbb movslq cwtl add cmp cmp (bad) fneni(8087 cmp xchg fldl (bad) loopne (bad) pop mov sarb or rex.WRX sbb jg rex.RB loopne test jb loopne shr mov mov js (bad) jmpq loopne mov xchg loopne insb pop nop (bad) (bad) fldt rex push jnp rex.X push nop (bad) movslq out mov mov mov (bad) leaveq or mov cmpb xchg (bad) movabs sti movsl (bad) and push jo (bad) fdivr mov popq (bad) mov push (bad) vpxor test movswl iret es (bad) nop cmc or (bad) (bad) sub in scas and mov ja (bad) push xor fsubrp callq scas lods mov out stos add xchg (bad) and mov mov xchg out movabs (bad) loopne pop (bad) cmp popfq and rex (bad) fstpt rex.RXB sbb sbb jrcxz loopne rex.RX movsb cmpsl callq (bad) (bad) in rex.WRB scas rex.X sbb nop loopne in cld clc xor mov cmpsl sub cmp (bad) stos pushfq or retq rcll cmpb and out mov pushfq loopne cmovbe (bad) loopne imul sub addr32 out (bad) stc sub (bad) (bad) or int3 (bad) sar test (bad) je rex.WRB or lea loopne adc rex.R cld shr pop jmpq out rex.X test xlat loopne jl push and jae loopne rex.RXB (bad) adc cld rex.WR in test (bad) stos (bad) ds push adc cmp data16 (bad) cs clc xlat loopne rex (bad) enterq (bad) jmp hlt adcb loopne nop sbb scas shll movabs sbb (bad) add movabs xchg xlat and mov outsl (bad) xchg divl int add shll (bad) rclb loopne jrcxz push addl imul in rex.X add mov in mov rex.WXB movsl out jl push mov cmp push mov xchg cmc xchg jge jo outsb movslq sbb movabs (bad) retq out insb rex.WX loopne (bad) repz loopne stc cmpsl retq push rex.XB mov int3 out xchg add stc xchg (bad) movsl movabs pushfq or rex.W rex cmp cmc jp sahf in (bad) retq and xchg mov cmp loopne or jns or add nop jrcxz movabs repnz rex.WRB pop (bad) sub scas (bad) cmp lods jp (bad) adc jns or xchg (bad) jl (bad) iret hlt cwtl rex.W (bad) add (bad) shrl fildll jrcxz sub icebp leaveq mov lock loope movabs adc out loopne mov rex.RB fcmove jnp iret fcomi pushfq and add (bad) adc pop sub fstps xchg scas add js movabs sti mov fdivr enterq fsubrl jmpq mov (bad) int insl std js sub and loopne mov stos cs xor adc jns xchg cmp retq mov sar adc cli xor sub js,pt mov out pop mov push add adc lods mov (bad) movabs and xchg nop in mov fisttpll movabs jmp std add sub jmpq jb lods faddl fcomps loopne xor sbb incb scas ficomp jl neg sub mov mov fidiv push cmpsl (bad) rex.WRXB sub cs xor rex.WX (bad) push xor fs scas rex.WB push push jns loopne mov rex.B add jns (bad) frstor shll rcrb jnp xchg lock xchg repnz loopne (bad) adc sub (bad) add or (bad) lea or cmp lret ss in xchg movabs (bad) push test jnp (bad) loopne mov (bad) mov rex.WX sbb (bad) xchg clc loopne addl gs in incb adc loope sbb (bad) jl rex.W xchg jle adc leaveq mov int (bad) rex.WRB mov sub cmp rex.WX in in imul loopne pushq (bad) test test (bad) loop mov or adc mov xchg leaveq cmp xchg fisubr loopne xchg or mov out idivb (bad) rol cld callq jrcxz shlb push (bad) jnp cmp or repnz leaveq loopne lods mov movabs xchg (bad) jnp sub rex.WRB int rorl xlat jg mov nop loopne mov and (bad) (bad) fistp xor loopne adc sbb cwtl rex.RB cwtl push or (bad) loopne and sbb or push (bad) mov gs retq and loopne ds or rex.WB rex.WXB (bad) in sbb jg mov xor and sarb pop loopne insb add movabs shr pop (bad) rex.WRX rex.RX rex.WRB es leaveq jnp (bad) xor rex.XB or shll (bad) jmp cmp sub push mov movsb xor xchg (bad) repz cmp mov nop mulb adc jb and imull mov jne,pn (bad) (bad) xchg (bad) (bad) testb jo loopne xchg clc xchg pop lock scas rolb add adc ds jmpq push retq sub or rcrl cli xchg (bad) xor or sub or mov test mov rex.WX lahf sbb movabs rex.RXB adc jmpq pop adc cltd movslq xor fneni(8087 pop jl and mov xlat popfq adc cmpsb movslq mov loopne cmp or pushq movabs sub and jae callq xchg adc adc in mov fwait (bad) movabs jrcxz mov (bad) xor loopne (bad) pop repnz jge cld xchg xor pushq xchg stos (bad) mov icebp jnp lea jle mov movabs cmpsb rex.RX xchg mov and movabs push (bad) fidiv stos xchg xor sub lock addr32 movslq xchg movabs (bad) retq add (bad) in mov push adc push xchg mov and mov int3 sbb mov (bad) push push pop rex.WX clc mov fldcw jns scas subl (bad) xorl scas std cli xchg pushq addl mov stc jbe mov int3 (bad) andl jns cli xlat in out test mov sbb mov rex.RXB pop out and addr32 lods fimul or ds jl mov cltd test je movabs mov push (bad) sti jae rex.XB movslq movsb push sbbb mov xor jae outsb cld (bad) out jmp rex.WRB mov jns xor (bad) pop (bad) cld rex.WB adc sbb cli (bad) mov xchg and (bad) rex.RX add sbb jg (bad) repnz push and pushfq jo push rex.WX or shrl pushfq pushq mov (bad) cltd callq jo callq shll popq repz sbb and icebp and mov sbb jo shrd cmc (bad) sbb lock movsl loope and rex.WXB in mov movabs mov (bad) lods out addl repnz push mov (bad) cmp (bad) cmp fidiv out testl jmpq in (bad) (bad) push push (bad) (bad) mov jne xor (bad) loope cmp jge sub jae int3 sub mov clc xchg and (bad) jrcxz jle rex.RXB out add (bad) and outsb in cmpl (bad) jns rex.WB callq push imul xchg incb scas (bad) loopne or pushfq iret flds jmpq (bad) incl in (bad) jne sbb (bad) or add pop (bad) cmp loope mov adc test jo lods pop scas loopne enterq int3 jno loopne pop or iret cmpsb add loopne xor xor (bad) push cld xchg sub lret xor push mov (bad) repnz (bad) cmc lea loopne int xchg std fstpl (bad) mov add rex.W sbb or and (bad) lret orl loopne (bad) mov test fsub xor pushq icebp iret cmp loopne pop (bad) adc callq pop cld (bad) sar jno jmp and dec fdivrs lret insb in mov and div pushq lret (bad) mov (bad) lods lret jnp movabs test movabs data16 in loopne (bad) movabs rex (bad) xlat xchg cld loopne imul cmpsl xchg data16 rex.WRXB insb jbe shl cli loop stos cmova sub push (bad) pushq in cmpsb lret mov shrl icebp test sbb jmpq stc push (bad) (bad) andl clc rex.R stos retq (bad) hlt or ss rex.WRXB loopne data16 outsb sbb add mov unpckhps loopne rex.WRXB rcrl jl (bad) adc imul push loopne (bad) add mov jg mov rex.XB adc pop loopne cld sbb mov mov rex.RB mov add (bad) rex.RXB push rex.X mov rex.WX rex.RX mov and in sar or mov movsl (bad) xor rex (bad) clc (bad) out (bad) add xchg pushq clc and mov retq in jnp cmp add movsb adc and pushfq push xor (bad) callq push pop rcrb rex.WRXB ja lret callq or push pop (bad) cltd cmc jno test es shl roll jns rclb negl mov jg mov callq xchg pop loop sub loopne (bad) rex.WX ja and fist js loopne in jrcxz lods mov sahf loopne lods sbb (bad) mov rcrl or loopne (bad) and loopne ja sbb scas out int xor fildl fneni(8087 cmp iret (bad) (bad) (bad) push xchg (bad) sbb stos mov fisttp jb (bad) rex.WX (bad) fcmovnu pop or or jmpq sbbb cmp push and adcb (bad) mov mov (bad) jg add cmp loopne (bad) mov (bad) sarb sub cmc sbb mov sbb (bad) mov pop fcoms retq (bad) movslq add loopne and (bad) xor lock (bad) mov movabs (bad) outsl cmp xor rex rex.WRXB sti rol xor cmpsb loope sbb push sahf sub (bad) repz cli outsl pop add push fs xchg nop (bad) cmp rex.R in jnp test movabs xor mov pop loopne and movsl (bad) mov shl test repnz cmp pop xchg rex.XB (bad) rex.WXB xor loopne add movslq (bad) fmul and jmpq out rex mov jo rclb insb je int3 cli mov ljmp cmpsl cmpsb loopne xchg (bad) pop test fcmovne in cwtl jne jns rex sub sbb out rex.R mov lret loop adc movabs (bad) rex.WX jrcxz outsb (bad) (bad) push and lret or (bad) cld jmpq fist retq xor and rex.RXB rex.R (bad) movsl es add push in jne xchg in mov lahf (bad) movabs xchg movabs fisubr in out pop push (bad) mov retq or (bad) xor fist rex pop (bad) pop retq adc xor sbb test lahf pop test stos xor fnstcw mov sub sub rex.WXB enterq rex.X (bad) hlt sarl xlat pop jo scas (bad) sbb (bad) sbbl clc pop xchg (bad) push movabs sbb mov lods mov add sub je (bad) shll hlt (bad) fwait (bad) gs out rex.WR sbb xlat rex.X xor jl jns jrcxz pop cld stc xchg sbb scas (bad) (bad) jle (bad) in sbb or out or shl icebp cmp in push and or retq rorb and xlat cli fdiv stos or addr32 (bad) decl leaveq jmpq mov loopne in or lahf lods imul es jns mov jnp movsb jle cltd (bad) rex.RXB pushfq or adc sbb sahf mov pop sbb jmpq cmp loopne jle xchg int3 lods (bad) jrcxz mov rex.RX or rex.WX rex.WRXB fisttpl (bad) sbb movsb loop pop cmp sub (bad) out adc (bad) outsl rex.RX leaveq (bad) or fmul rex.R jnp jmpq movsb or push cmp mov mov push rol fiaddl retq push cs sub test nop sub icebp out addr32 jnp jmpq sbb in movsb sbb (bad) iret (bad) adc in movsb movabs outsb cmp lock (bad) (bad) cmpsb cwtl repz add mov callq rex.RXB sub cli xorl jp js incb xchg rex.W iret and or xchg sub jp insl nop addr32 sbb clc movslq push cs leaveq rcrl xor loopne mov mov rcr (bad) rex.WRX clc decl sbb sbb pop and (bad) sahf sbb bnd sbb push sbb pop jg push cld mov callq (bad) mov jge pop cmpl int ror int3 mov cmc stos pop adc rex.WRXB stos lock lahf leaveq xor cwtl (bad) xchg cmc cltd (bad) mov mov sbb fs fcoml nop lret adc mov (bad) or mov rex.R mov jno jg jge rex.RX mov scas (bad) roll out repnz rex.B sbb (bad) retq xor (bad) sbb xor outsl mov mov addb jbe rex.WX sub xor (bad) ss fildll rex.WR adc data16 xor movabs jbe or mov out sar loopne flds cwtl test xor loopne (bad) sbb and icebp and and jns fsub lahf jmpq sahf (bad) in mov xor push (bad) xor or jne data16 xchg rex.XB (bad) lret jmp sub loopne je push rex.WX loopne cld in xchg mov or shll loopne (bad) cmpsl xchg mov push loopne (bad) ds mov jne loopne lock std fadd and and (bad) rex.WRXB mov push mov cli mov xchg pop loopne xchg (bad) data16 xchg (bad) fsts or lea sarb and lods (bad) (bad) or sbb cmpb mov or and movabs (bad) ficoml mov addr32 mov jge rex.RX in rolb sbb mov cmp xorps (bad) lea mov xor enterq mov hlt pop xchg jrcxz (bad) movabs es movabs and push adc (bad) imul cmc mov nop fs pop insb loopne out xor and pop insl (bad) mov push mov rex.RB rex.WRX shrb lods test and loopne movsb (bad) callq sti in rex.WRX outsl pop jae out pop (bad) xchg fcmovnb movabs mov loopne iret lea in push cmp and fnsave (bad) jns subl loopne add xor rolb cmpsl shl push rex.WRB cltd (bad) pop in rex.WR mov ss jp (bad) nop sbb or sbb add jg scas jb xorb out sti retq ja sbb rex.XB adc jmpq cmp shlb push sarb or loopne cmpsb pop enterq rex.WX (bad) icebp and pop (bad) mov pushq mov (bad) xchg lret (bad) (bad) scas adc fidivrl movslq in jmpq sti cli mov (bad) mov retq (bad) xchg mull (bad) and (bad) rorb test cli faddl adc sbb or (bad) outsl sub lea jmpq xchg adc pop push repnz pop out lret mov popfq cmp movsb leaveq pushq in (bad) rex.R (bad) push add adc jbe xchg in add xchg ds jno mov xchg sub jmpq (bad) pop jg rex.RB movabs loopne data16 (bad) lahf sbb sub fdivrs (bad) nop (bad) mov pushfq cmp jo,pt sbb xor (bad) cmp setns rex.WX scas (bad) sbb jae callq or jge jbe sub pushq mov rex.WR jmpq (bad) and repnz adc push and mov clc fimul leaveq (bad) int3 mov (bad) cmp adc adc pushq mov xor lahf (bad) cmp rex.RXB out mov movsb cltd cmp imul add loopne cmp je sub loopne pop (bad) lods cmp (bad) lret pop retq xchg (bad) or faddp rex.WRXB cmp mov or loope pop (bad) (bad) test movabs movabs fmull (bad) (bad) (bad) push rex.RB rex.WXB repz (bad) (bad) mov andl push iret pop ss adc mov (bad) mov jnp cld jmpq (bad) mul cwtl sbb sti (bad) pushfq (bad) repnz loopne sub test std cmc push rex.WX rex.WRXB rex xlat out out in (bad) jae in rex.WRB test xor setl mov jb and cli int3 (bad) cmpsb (bad) (bad) cwtl fs (bad) outsb stos and rex.WRX std insb jns mov mov (bad) rex.R xor pop in addr32 outsl cs push gs (bad) out fistl adc and and xor lret fidivrl cmp loopne sub jge stos (bad) push test sub and idivb push out sti rex.WX (bad) outsb jg ds insl rorl in jbe rex (bad) clc out (bad) repnz rex.XB (bad) sbb push jne (bad) sbb rex.B outsl ja lea (bad) (bad) int test push sbb out jb rex cli ss movabs (bad) loop in out (bad) sub add rex.RB xchg imul (bad) fistpll jb rex.X nop movsb loopne or sbb mov xor movsl rorl push fldl mov mov loopne mov scas fcomip mov loopne insl or loope push vdivsd loopne or xchg xchg std in leaveq push rex.WRB push lahf and xor rex.R (bad) mov and loopne xchg push movabs pop (bad) mov and (bad) imul shr push jo jmp mov jns fisttp rex.WB repnz add jae sbb stc lods rex.WB rex.WRB test subb enterq jle out popfq cmp (bad) test mov lret imul outsl xchg loopne es xor and movsl repz add rex.WRB and iret adc andb or fcomps outsb insl int or out jbe push and loopne pop retq or fsubrl lret push loopne sub or loope cmp fwait rex (bad) fisttpll (bad) movabs xchg sub out stos icebp jo or sbb (bad) scas jrcxz retq out fistl sub (bad) or xor jmpq rex.RX insb sti je lahf (bad) cmp sbb cli jrcxz,pn fucomi mov sub sub (bad) xor (bad) addl mov shrl pushq loopne mov sub loopne out fwait repz icebp lret (bad) outsl movslq in pop movsl stc sub loopne sti sub (bad) test mulb (bad) in cmp or icebp jrcxz leaveq add movabs (bad) in lods sub mov cli pop movslq orb (bad) mov rex.RXB (bad) mov loop (bad) loopne mov mov out xchg rex.RXB in movsl movabs in loopne xchg cld test in (bad) fisttpll (bad) std fsubr push rex.W loopne fidiv jmpq icebp (bad) imulb add lods or out and loopne pop jne ja ss jb mov rex.R rcr stos mov or loopne (bad) mov loopne mov sbb adc (bad) and lahf mov pop sub loopne movabs retq in rex xor ljmp adc in int3 sub test mov or mov mov outsl sahf out sub or (bad) cli push shrl mov (bad) lcall cwtl cmp push or mov out pop outsb xchg popfq out (bad) mov (bad) fistpl js (bad) (bad) lock rex.WX ds movabs xchg loopne sbb adc xchg sahf cmp rex.WRB push mov pop decl cltd rex.WB add popfq (bad) loopne lock (bad) (bad) test in jb xchg (bad) (bad) xchg cmpsl rcrb mov sub or xor or (bad) rex.B (bad) loopne (bad) mov mov xor pop rex.WXB mov and loopne adc out repnz stos cs mov jp adc icebp enterq (bad) faddl and mov movabs or add sbb xor (bad) sub jo test pop cli rorl decl mov jl sub pop clc callq xor stos scas xchg sbb rex.RB lea test sarb in cmp outsb rex.RX rex.WR rex.R std int3 ja (bad) jne cmpsl pop mov (bad) push sub out movsl (bad) repnz int test loopne and fnsave cmp and loopne (bad) adc jge jo in cltd (bad) mov cmpsl adc and (bad) in mov mov test push js icebp fstl mov cmpsl loopne jae loop push xor loopne sbb loope ja loopne int or rcrl xchg or push mul cmpsl add (bad) jb adc in enterq jrcxz callq (bad) sahf (bad) push rex.WXB ds fistl mov adc leaveq push jrcxz cmp rex leaveq jl pushq jb (bad) (bad) (bad) mov enterq sub repz sbb sub (bad) mov jl pushq xchg ja (bad) jrcxz outsb adc mov jno test mov xor jge (bad) sbb (bad) xor shrb out or int3 lods ja xchg sbb (bad) retq in pushfq pop insb adc retq (bad) lods push sbb push adc push cmpl (bad) (bad) sub icebp jl jo fisttpll outsb (bad) rcl ss out scas shll and cmc add sbbb mov sbb fcmovnb (bad) (bad) xor jno mov fs sbb sub sbb lods push stos cmpsl fidivl push repz ds jl rex.X retq sub or sbb loop mov rex.WRX jg in and lods push sbb (bad) adc cs sbb (bad) shl in insl jge andl pushq stc (bad) xor (bad) clc (bad) rex.WX icebp (bad) or movslq pop jrcxz or loopne movabs pushfq (bad) and sub rex.R stos mov iret mov sbb jo movabs cmpsb (bad) adc pop push rex.B out (bad) (bad) cmp lods es jo pushq (bad) loopne lods (bad) rolb adcb js pop xor jae ds xor jbe and fabs lahf in callq out cld pop mov adc adc ds in (bad) or movabs leaveq fsubrp retq callq insb xorl sbb callq fldcw lods push rex.WR cmp (bad) (bad) pushfq (bad) rex.R rex.WB rex.WRXB (bad) xor mov jmpq pushfq (bad) add lahf sbb test (bad) (bad) enterq mov loop mov gs movabs sbb rex.R (bad) test xchg (bad) stos (bad) mov sbb out (bad) or jp popfq xor sbb lahf fmul in sub stos in lret (bad) and lea retq jae jb xchg mov mov (bad) cmpsq cs leaveq rex.RB adc adc (bad) movsl (bad) push fbstp loopne stos nop jbe or fwait imull and adc pop loopne and test jle scas loopne xchg or rex.RX loop cmp lods out xor (bad) and gs cmp mul xor sub mov (bad) pushfq cmp rol rex rclb repz test (bad) stc loopne movabs fcmovbe and rex.RB mov movabs insl rex.WXB jb test push je movslq mov cwtl loopne pushq in xor (bad) xchg in mov (bad) xorb loopne hlt sbb mov mov rex.RXB jge pop (bad) xlat (bad) (bad) out sarl mov imul int adc cmp sub loopne vpcmpuw mov loopne rex.WB sub (bad) movabs retq (bad) add rex.W imul and add je jns movsl leaveq loopne cmp incb cmp mov fdivrp cmp stos sub mov (bad) lods push add add add pushfq sub loopne data16 cli adc shrb ror shr loopne incb jns (bad) imul mov mov fxch jrcxz jp je cmp fldln2 push movslq int add retq jae cmp and or loopne jbe mov xchg pop insb mov int pop xchg iret xlat push jle ds xor loope int3 decb je xchg movsl (bad) (bad) mov or in stos or mov (bad) rex.WRX loopne rex.R xor mov sbb (bad) cli push sar or pop xor jno imul jbe pushq (bad) rex.B pop (bad) push jge loopne mov (bad) loopne jo cmc (bad) movabs rolb cli sbb rcr callq (bad) lock mov lods test lret rcrb mov retq (bad) jbe in lods frstor xchg (bad) pushfq callw pop int push rorb mov int3 loopne jl cmp cmp loope push cmp (bad) cmpsb (bad) jmpq cltd pushfq movabs outsb (bad) out mov and (bad) in or rex.RB retq popfq (bad) cmpsl sbb and xlat loopne cwtl xchg pushq jae mov fidivr test jrcxz loopne fildll cmc loopne pushfq sub jnp sub stos and (bad) rex.R rex.WRX (bad) add imul scas movslq (bad) and add cmp fldcw mov sbb (bad) sbb pop sar lock push (bad) in mov xchg pop (bad) and lea pushq movabs movslq (bad) int add rex.WR or pop rex.WXB lret lods cmp sbb outsb (bad) cmpsl loopne push int lock jp loopne enterq in clc popfq (bad) loopne fs mov add in or rex.W stos (bad) rcrl gs in je sti (bad) and (bad) xchg movabs loope xor (bad) and mov rex.W enterq push loopne sbb ja mov xchg fsubl stc out and rex.R nop movsb cmp test clc icebp mov test cli fsubs (bad) (bad) cmc loopne stc sub pushq jne (bad) rorb mov mov mov (bad) test loopne adc js outsb incl mov sub retq mov in cmp stos fbstp scas rex.WB cli pop xchg pop pop shrb xor push jp (bad) jge rex.WRB pushfq test loope out loopne (bad) sarl repnz enterq movslq or (bad) adc mov xlat iret loop sbbl and (bad) rex.W gs iret sbb movabs cld imul retq (bad) stc (bad) (bad) pop (bad) jmpq lods lock movsb push xor movsb pop (bad) mov xlat leaveq js fwait mov mov rex.WRX rex.WX movsb fisub xor adc and (bad) xorl imul lea rex.WRB retq jns clc cltd push gs sbb rex.RX and mov and and retq cltd sbb (bad) movsb or pop clc mov and hlt rex.WXB rex.RB stc in cmpsl xor push mov mov callq clc (bad) adc and (bad) mov mov stc mov cltd (bad) loopne,pt sbb mov or loopne rex.X stos loopne (bad) (bad) (bad) add cwtl (bad) mov rorb loope ljmpw out pop sbb jbe or (bad) (bad) rex.XB sti rex.X (bad) mov or loopne leaveq (bad) jns sbb loopne ffree movabs rex.WRB pushfq add lods es outsb xor and movabs mov cmpsb or xchg repz nop (bad) mov andl push rex.X addr32 rorb mov loopne data16 and lret repnz jmp or (bad) je retq rex.WX push or loope add in fistpl cmpsb sub pushq xor rex.WRXB or insb (bad) mov add xlat sub sbb decb cmp fwait push pop xchg or rex.WRX mov imul xor cmp fcmovb or cmp sbb jrcxz lock rex stos loope jl rex.WR (bad) (bad) nop ja xor add mov mov clc (bad) xor fdiv jg cmpsb mov sahf lock out jp (bad) shrl (bad) sub ss pushq xor out movabs (bad) rorl (bad) pop loope addr32 lea and sbb xchg rex.R xor rex.XB add adc (bad) jmpq fucomp test scas and lock mov rcrb pop adc (bad) or sub out rex.XB movslq and (bad) mov imul es sahf lods test mov in lcall icebp rex.RB (bad) xor push mov retq add shl and xchg mov jge (bad) sub sbb mov jg in movsl sbb cmp jmpq pop (bad) and jle incl lods lock lret (bad) add jrcxz pop sub or mov push jmp jns icebp hlt data16 imul cmc test (bad) lock rex cmp jnp fcomps callq cmc rcrl cmp mov sub in cli pop movsb add repz ds lock insl (bad) or test pop int repz jmpq adc (bad) paddw (bad) lods xchg loopne jns mulb movabs rex.RB icebp mov mov or loopne,pt add push (bad) sti pop sbb mov sub sbb out add lret sti gs clc mov jrcxz,pn jmpq cmp jmp add retq (bad) repnz loopne enterq pushq (bad) in or jne rex.W repnz jrcxz rex.R stc cmpsb sti adc adc and lret mov cld add mov jbe xchg stc rcr enterq js jmpq imul (bad) jb (bad) pop loopne int3 xchg pop clc loopne retq add push cmp pop adc mov (bad) cmc roll stc add out out (bad) (bad) lods movabs add (bad) stos cmp movabs (bad) rex.X xor sbb jne enterq rex.R (bad) cltd rex.WXB iret rex.XB jb mov js movsb rclb xchg sahf stos in movslq fidivr jmp rex.WXB sbb in in (bad) rclb gs mov jno test xor addr32 xor (bad) andl mov mov adc adc imul mov andb icebp insl sti push and (bad) repnz jnp adc mov xor sub movslq in testl mov jb sbb xlat imul cmpsl rex.RB jle in sbb stc jrcxz std cmp retq ficom in sub mov jmp pushfq sbb jb rex.W (bad) in (bad) rex.WR xchg adc cli mov jns rex.WX xchg clc sub sub and loopne rex.WB (bad) jmp out js loopne push xor and rex.WB repnz and mov jrcxz fnstenv cli cmp (bad) pop fildll enterq mov push cltd mov hlt jmp jnp loopne mov pop outsb xchg sahf fucomp lock fbstp (bad) xchg adc rex.XB (bad) xor dec (bad) jmpq movabs (bad) loopne mov (bad) imul adc mov (bad) retq nop jg stc popfq push jne and push add retq jae,pt rex fwait stc (bad) movabs adc mov (bad) (bad) jo add rex.WXB mov pushfq fadd mov pop in lods in rex.W (bad) (bad) pushfq push ds sub cmp xor (bad) clc jbe xor pushq or push jmpq mov pop and in ss mov rex.R std xlat lods (bad) data16 cmp fcoml imul jo outsl adc insb stc stos add xor (bad) mov jle outsl fdivs retq mov push pushq (bad) add pushq adc xchg rorb jnp jne gs in pop roll test movabs scas loopne shll mov sbb pop jg mov rolb (bad) fist add (bad) (bad) rex.WRB es mov popfq cmp int3 (bad) jg (bad) in rex.RX loopne mov mov (bad) xor add cmpl pop cld xor (bad) and sub rorb and retq in lock in (bad) (bad) cld fcoms jno and rorl hlt mulb out shl cltd sub retq int xchg add xor jrcxz sub (bad) adc jo test pop (bad) (bad) callq xchg fnop out xlat mov fcomi sub cli xchg xchg rex.WX rex.WRB rex.WRXB (bad) outsl jmpq rex.WB cmp (bad) xlat xor (bad) movabs std xor loopne sbb fs (bad) loopne,pt cs addr32 pop andl adc dec xorl in rex.WX repz xor rex push iret sbb jb je cmp jp jbe shlb test loopne in push (bad) movups loopne mov clc repnz pop loopne sbb cs and mov loopne fisubrl orl sub xchg pop rex.WR xlat (bad) loopne lea xchg cmpsl fwait movabs adc adc jno clc adc popfq out jp mov sub jo imul and lods in rex.RB in stos xchg pushq movabs (bad) test mov pop lods icebp clc (bad) shrb lret pop int loopne xlat out movabs stos push and loopne pop outsb pop or and fidivrl loopne out rex fs testl insb callq pop (bad) add rcrl xor and (bad) lret movabs loopne cmp rex.WRX nop (bad) jp iret jnp clc (bad) movsl repnz loopne sti hlt cmp rex.WRXB loopne sub jmp jrcxz scas sti or mov test jg xor test cld lahf loopne test hlt ds push loopne mov jbe sar stos (bad) retq (bad) cmpsl (bad) (bad) xchg mov xlat jae (bad) and rcrb adc xchg retq rex.WRB rex.XB fmull sbb and pop adc sub mov callq movabs pushfq add cmp (bad) rex.WR push rex.W (bad) or pushq sub mov sbb (bad) jp (bad) movabs fcmove movsb insb add fucom push and rex.WRXB rcrb rex.WR int cmpsb (bad) mov jbe (bad) loopne (bad) retq scas incl imull nop movslq loopne (bad) mov mov retq add mov repz out add in and (bad) (bad) and enterq sbb mov sbb (bad) cmc cli rex.WXB movabs fbld pop xor and jmpq je (bad) loop imul and bnd push (bad) loope int3 movabs mov loopne mov int add lret cld andq std xchg outsl loopne mov jmpq movabs (bad) imull add (bad) jo sbb mov sub lods cld shll add rcr test movabs loopne andl xchg shll shlb nop or cmp fs (bad) jrcxz jo test jmpq repz xor cmc (bad) mov rex.WRB lock jge pop (bad) fistpl ss (bad) sbb in rex.XB sub divl sbb (bad) mov cmp mov addr32 (bad) or lea callq (bad) movabs clc ss push rcll add fadds fisubl lret or sbb pop jae movsl push in shrb movabs mov retq loope rex (bad) jns rex.R adcb (bad) (bad) loope sahf sub (bad) xor cmc xchg adc jg adc in (bad) mov lods movabs (bad) out or int3 fwait mov shl mov jrcxz pop insb sbb in icebp mov rex.XB adc (bad) and or stc movabs rex.WB sub sub jle insl rex.WRX cmp sub cwtl in push pop push sbb rex.WX fsts clc lock (bad) cmpsl push lahf or push sbb ds outsl jg (bad) jns xor rex.XB std lret fldl xchg lret (bad) movabs xor mov cmp cmp xor (bad) rex.RB in in xchg icebp rex.WRX pop (bad) fiaddl pop in (bad) scas xlat movsl (bad) mov (bad) mov lret rex.WX pop std sub rex.B (bad) lock negb test (bad) movabs (bad) rex.B sub fiadd (bad) sbb cltd (bad) shll iret mov sbb (bad) cmp mov adc jle sub in int dec (bad) popq sbb sbb lret xor leaveq mov outsb hlt rex.B (bad) cli fwait movsb or mov or push (bad) adc icebp cmc data16 repnz out xor jg mov std gs shrl mov rex.W xor sub add out pop cmp pop mov idiv xor adc neg sahf rorb push (bad) ss pushfq shl (bad) (bad) adc and clc (bad) (bad) xor jno icebp movabs (bad) rex.WR push idivb imul pop loopne pop rex.WRX (bad) and lret xchg cmc fdivrs xlat mov cld stos and jmpq imul in rex.WR test decb sbb rex.WX rex.WXB (bad) ja test (bad) lock (bad) out lock add jo jo in mov mov lods mov movslq pop and and cmc fsubrs push in lock loopne (bad) push pop lea xchg (bad) loopne jl fsubrs add loopne mov sub xor callq rex.WRX (bad) in xor push mov fnop mov mov rex.WR sbb (bad) test shl addl callq mov cmp sbb adc (bad) decl adc mov movabs jns insl pop jo mov loopne repnz cmp in clc mov icebp (bad) (bad) jmpq cmpsb rex.WX gs (bad) hlt (bad) out cmc (bad) xchg lahf cld iret sub xchg mov and imul (bad) jmpq rex rex.WXB xor subb rex.WRXB mov stos (bad) mov (bad) rex.WR in pop adc (bad) (bad) jnp pop cmp lods or retq (bad) (bad) xor xchg movswl loop pushq leaveq cs mov (bad) rex.WX pop xchg jno cmp jnp lock fwait in repnz jg retq sbb pop and pop fildll lods orb jp lock test js mov (bad) outsl (bad) addr32 xor (bad) mov loopne jnp lea push xchg fiadd jmpq rex.WXB es cld and mov sbb pop in scas jno (bad) cmp pop test xor rex.WRXB sub sti mov add fwait rcl rex.B fcompl orb mov (bad) and data16 add mov loope sbb (bad) and imul testl (bad) jmpq push xor jmp fdivs and loopne rex.W push rex.RX cmp in and (bad) jrcxz push sbb pushfq mov repz (bad) jo jns sbbl rex.RX (bad) rex.WX or xlat (bad) jl or scas and and xchg shlb rex.XB rex.WRX sub popfq mov rorb popfq (bad) and rex.RX leaveq mov push jno lret pop push (bad) push lods shr ficoml rex.WRXB (bad) and fbstp loopne xchg cmpsb sbb (bad) mov rex.W repnz loope rex.WRXB (bad) sbb fisttpll push xlat imul (bad) fwait loopne rex.XB mov add xor add movsb out movabs pop (bad) pushq js loopne xchg sub pop imul in rep out jle cld loopne jo and mov fucomip scas xchg cmp sti shrl cld loopne and add jrcxz xchg jl test (bad) jno jp movabs add loopne pcmpeqd jnp movabs loopne rex.W mov (bad) (bad) adc in lahf (bad) fsub lods (bad) jl sub xor jo (bad) adc insb faddl stos (bad) or loopne mov mov rorl (bad) in out jbe and rex.WR sub rcl vmread lods adcb loopne test rex.X loopne icebp mov (bad) xor adc mov test mov retq (bad) pop fmul xor cmp mov (bad) xchg and xor push adcb cltd mov jmpq (bad) push popfq repnz cmp out cmp jno adc sbb enterq xchg or xchg xor cmp imul rex.R outsl loopne test mov scas rex.X in or jne movsb stc jle rex.R cltd rex.WX xchg xor sub push fs xor pop xor (bad) shll and rcrl loopne insl imul repz push loopne lret xlat mov cmp popfq loop in push (bad) rorl push rex.WRX mov and stos loopne jmp movabs pushfq mov mov rex.W (bad) adc sbb jmp loopne xchg (bad) repnz rex.WRXB (bad) out sub (bad) mov loop andl pushfq and pop jmpq rclb xchg xchg in loopne outsb lret in rex.WR fwait es fcomps xor inc (bad) (bad) mov sbb loopne lea movsb adc in (bad) stos shrl push adc adc test (bad) mov push (bad) int rex.WR pop shlb nop movabs or shlb lret add test pop xor out movsb add loope jne rex.WRX rex.WX adc or cli out loopne imull out pop fildl sub (bad) hlt loopne sbb roll callq xchg jns lcall (bad) push jnp loopne jge (bad) data16 scas jo gs loopne jae fwait lret push rex.XB lret (bad) jmpq gs (bad) testb and cmp sbb rex.WX sbb cmp xchg sub sar mov std mov rex (bad) fildl ds or mov cltd test outsb rex.XB retq mov mov js mov ror or (bad) mov and xor jp lock cmpsl fcoml rex.RX lretq loopne sub cs rex.RXB nop jo popfq insb loopne test cmpsl (bad) mov cmc jmpq data16 jmpq ja (bad) rex.W jb xchg or and int3 cmpsb xchg fucomi hlt sbb loopne fwait lret cli addr32 stc pop out insb (bad) test jmp cmp (bad) jae loopne jnp incl cmp or mov and leaveq jns xor loopne xor out fiadd jp sbb cli jns imul fnstenv loopne rex.RXB out leaveq lea repnz mov (bad) jp clc add fdivrs stos loopne (bad) icebp mov fcomps rolb (bad) movsl and cltd (bad) lahf push mov add or loopne and cs (bad) popfq in (bad) or (bad) cld fsubl pop (bad) adc retq rex.X xchg jg lods fimul sub xor rex rex.WXB hlt add int3 out xchg jo xor movabs ficompl pushfq fstpl and mov push fistpll sbb in frstpm(287 movabs add sysexit (bad) lar xlat mov loopne xlat (bad) loop rdtsc pushq add sbb pushfq (bad) fldenv (bad) imul (bad) fxch test (bad) jrcxz jmpq out (bad) jne loopne fldl xchg sbb hlt lock mov shl (bad) in pop rex.RX rex.WR adc mov cltd leaveq xchg push jnp in push jns xchg loopne insl mov adc mov fsubl jb lods cwtl (bad) jmpq subb mov lret mov xor sub (bad) lods adc leaveq jp rex xchg test (bad) loopne adc mov leaveq repz decb (bad) lahf fstpl subb mov rex.WXB fsubl out (bad) fistl fnstsw loope xor sub xor movabs cltd (bad) mulb (bad) adc (bad) rex.WRB push (bad) add out movabs xchg outsl rex mov imul divl xchg and (bad) mov (bad) in (bad) mov pushq lea test mov (bad) rex.WRXB rex.WR rex push adc or popfq mov insl jl loopne sub lret loope (bad) cld sub fiaddl movsb fwait loopne xchg mov (bad) loop pop add mov out add and xchg or out loopne or fmuls loopne js and xor rex.R (bad) movsl (bad) xor mov (bad) jnp rex mov and pop sarb rcr ss loopne rex rex.WRXB ficomp nop sub (bad) pop (bad) pop cmp (bad) (bad) icebp loopne xchg mov loop (bad) jrcxz pop xchg (bad) (bad) loopne (bad) outsl (bad) cmp (bad) rex.WR xchg jle pushq lret std sbb (bad) loop xor xchg stos and pop adc rex xchg pop sahf adc sbb xorl test xchg out (bad) jne and clc roll jo loopne adc mov es pop mov rcr jo (bad) (bad) jl fidiv movsb mov loopne xlat jnp enterq fidivl loopne rex.X imul (bad) rex.WXB rcll cli cmp sbb pop add fimull fistpl xchg loopne xchg cltd jge adc sub fidivl mov rex.WXB jg xor and mov cwtl out and adc (bad) mov movsl rex.XB (bad) mov sbb mov sub rex.RB cmpsb shrb (bad) xchg sub mov retq mov (bad) sbb xor out cmp iret ficoml icebp add out rex.WRXB rex.RX mov loopne cmovno (bad) movabs jmp repz int (bad) ljmp (bad) rorb in fmul xchg push push xor nop fneni(8087 mov (bad) (bad) cmpsb insb (bad) loopne vdivpd mov movsl loopne adc loop rex.WRXB movslq ficompl sahf (bad) pop adc adc add rex.XB mov adc (bad) cmpsl adc rex.WRB push push loopne jg or rex.RXB loopne fsubrl loopne fistpl (bad) loopne push insb mov (bad) cmp movabs test and jmpq out repnz (bad) jbe cs loopne xchg jne cmp hlt shlb pushq pop jae adc loopne push fbstp mov sub xchg in rcll xor mov push (bad) sub setl imul (bad) movabs push xor hlt nop jmpq (bad) loopne iret (bad) mov icebp mov clc mov and add punpckhbw fwait negb adcl movabs loopne imul push hlt adc js in pop imul add (bad) sub sbb (bad) push (bad) jl cmp jo adc movabs pushfq hlt jge lods and push xor loopne jle mov (bad) and mov cmp cmp outsb movsb ds test (bad) loopne xchg (bad) jne adc retq (bad) or xor loop loopne cmp rex.RB cmpsl (bad) jbe xor (bad) xor (bad) ss (bad) sub mov (bad) mov sbb and in mov cmp jb imul jmpq (bad) outsl ss hlt cmp loopne pop (bad) push (bad) (bad) out lret rcl int xchg out sbbl adc jge (bad) (bad) iret rex.WX retq movabs rex.RB adc in or lahf (bad) rex.WXB movabs stc push rex.B lahf xlat cmc xlat jmpq (bad) test sbb add push xchg rex.WXB lock in out rex.R xchg add mov push mov jge test je push or retq jo imul (bad) cmp icebp jno pop hlt fnsave orl adc insl addr32 in in sub (bad) sub sbb rex.RXB rcll retq sbb shll jp mov mov sbb rex.WXB sbb jbe lods gs xchg popfq ficoml movabs mov (bad) add popfq rclb test rex.WX rex.RB (bad) movabs (bad) lock cld xor adc rex.RXB (bad) enterq push loopne sbbl add test (bad) cmp (bad) insb and sub rex.RX jmpq rex.W rex.WRX push loopne add cmp (bad) rex.R (bad) negl or or and addl (bad) mov imul cmp (bad) pop loopne cmpsb (bad) test xchg xor mov mov sub in rex.RX jmpq (bad) movabs movabs pop fisttp mov lods fs lret jns in sbb imul out mov ja pushq fwait add jle pop sbb add loopne ljmp or adc jo (bad) (bad) in (bad) adc sar and mov xchg loopne retq rex.RX cs pop mov movsb push jg mov xlat pop adc mov adc pop and mov (bad) rex.RXB repnz loop sbb pop (bad) xor movsl push lret push rex.WX rex.WXB loopne xchg cmp lods out pop decb (bad) jmp add add fnop (bad) orb (bad) xchg mov push insl sti rex.W rex.XB incl negb xor fchs cmpsl je (bad) (bad) outsb or pushfq mov push jmpq rex.X loope movabs push jne xchg loopne jns cmp cmp (bad) movsb push mov xchg sub (bad) (bad) stos imul rex.X cld stc rex.R out cmp lods outsb loopne movabs and sbb sbb cmpsb xchg rorb loopne (bad) xor js fprem1 (bad) xchg rex.WX sarb lahf (bad) push add loopne rex.RB mov addl retq mov out or sub mov add addb adc repz jae rex.RB movsb inc mov addr32 adc icebp (bad) insb sbb in lea pop jrcxz and xor adc repnz sbb out sti andl mov fimul clc jo (bad) jo (bad) callq sub sbb pop scas adc mov rex (bad) xchg std adc popfq pop and cmpl lods adc (bad) subl icebp iret add rex.X (bad) and movsl (bad) stc in mov push (bad) adc xor iret cwtl push lods rex.WXB ds ja (bad) leaveq cltd adc sbb movabs callq pop and pop stos and mov pop sbb movsb cmp mov push in push or test rex.WRB lock mov sub (bad) loopel gs (bad) xor cmp movslq mov and faddp rex.WXB cmp outsb (bad) pop sbb mov fidivr test lret xor insb (bad) shr fwait (bad) retq (bad) (bad) cmp (bad) lret jl sbbl fadd nop mov (bad) sub push cld or std loopne push rex.XB loop in rex.X mov (bad) out mov icebp mov rex lods push jne (bad) sbb fsubr (bad) sbb jp xchg nop xor and push mov lods in (bad) xchg pop push mov mov ds lods (bad) (bad) (bad) shlb and mov shll cmp lock (bad) adc pslld mov mov adc jo (bad) mov sub jl xor in (bad) jge or xor (bad) popfq (bad) in mov mov addr32 xchg (bad) (bad) (bad) jl cmc lret push jrcxz cmp ja pop cmp mov xchg (bad) push and andl sti (bad) (bad) xchg cmp stc or rex.RB (bad) sti leaveq and cmp (bad) and loop nop mov (bad) lock sbb fimul test mov leaveq movsb xchg mov cmpsb ds sbb pop ds cmp jnp imul int sbb mov js lods loop xorb in lods stc jae (bad) push rorb out out lret xchg push xor pushq scas mov imul (bad) (bad) push (bad) jmpq jbe insb push int3 jno enterq lock callq mull lock jge test int pushq pop enterq (bad) adc int mov mulb xchg sbb xlat (bad) rex.WRXB rex.R lock in or in in sbb push or addr32 ficoml rolb in pop mov lea loop insb lahf (bad) ja mov int3 (bad) repz cmpsb sbb add leaveq lods in adc pop mov cmpsb (bad) (bad) testb fdivrs or rex rex.WXB (bad) out (bad) lahf adc or and xor sbb (bad) jo push scas (bad) cmp cmpsl rex.X and sub int3 movabs mov jg clc mov jg movslq cmp movabs jmp sar jo stos mov movabs and sbb fidivrl pushq jrcxz sbb adc (bad) (bad) ds jg adc (bad) fidiv jb (bad) (bad) (bad) test movslq addr32 jl xchg sar sbb cmp (bad) stc cs jmp cld rex.WRXB mov es in push mov icebp scas out (bad) imul loopne fisubr (bad) loopne mov in (bad) loopne adc push retq sub or scas insb add (bad) sub mov insl outsl (bad) push rex.RB (bad) jne cmpsl cld jns pop xchg clc loopne,pn push sbb test jae loopne (bad) rorl lods cmp cmp and retq imul and adc or mov (bad) movsb not out xchg loopne jmpq (bad) pop in rex.WRB jns gs out rex.WX xlat adc std (bad) mov loopne movabs mov cmp fucom in xor loopne cli stos vmovdqu repnz mov xlat push jnp (bad) in push ss jae mov jg sub fisttpll mov repnz push cmpsl (bad) mov (bad) in imul adc sub mov pop jne xchg mov es (bad) data16 scas jnp cwtl in int clc jl and mov mulb jge movabs adc test rex.WRB scas (bad) xlat addb xchg pushq sub (bad) (bad) pop (bad) or repnz rex.X fbstp loopne cmc (bad) (bad) lock je jmp sbb std or xchg cli pop shrb pop (bad) (bad) scas (bad) cltd add hlt adc test mov movsl jno loopne out sahf outsb data16 sub repnz and mov sub add int3 mov fstl cmp pop rex nop xchg orb loopne leaveq (bad) rex.B rex.WB scas (bad) loopne adc rex.WX clc (bad) cli jns imull push cmpsl rcrb adc insb (bad) loopne icebp rex.X or rex.RB mov lods sub or pushq and pushq (bad) sbb (bad) or rex sbb clc andl rol test add xchg sbb sbb lret loopne ss mov mov clc sub jb out sub and fidivr movabs mov jp push leaveq cmp rex.WRXB jno or loopne jns rex.X jb loopne xorl loopne out jnp std lahf insb jge scas or cmp sub out xchg xchg (bad) loopne js (bad) (bad) xor rex.RX (bad) fs pushq adc mov in jns rex.WRX rex.WR mov in jb (bad) loopne mov imul pop or mov sub in xlat loopne pop pop (bad) adcl (bad) xchg mov sub add jl (bad) loopne fiaddl callq mov mov (bad) insl (bad) (bad) loopne or in cmp in push fldt fcompl xchg insl sub (bad) rex cld push (bad) jb add jbe insb fnstsw pop (bad) add retq lcall push and rolb push lahf adc loopne jne xor movabs movabs xor outsl pop jg xrelease in flds cmp jne repnz sub (bad) (bad) movabs stos add and mov es adc mov push test (bad) idivl xlat cmp cmpsl int or fsubrl fstl ror rex.RXB rex.RB lock cmpsl mov loopne or rex.W int loopne jg push imul xor in andl adc pop rex.WRX fpatan and out add push in xor icebp lock (bad) (bad) (bad) mov test push mov and pushq loopne pop (bad) mov rex.RXB sar pop ficomp sbb (bad) xor push loop (bad) lahf (bad) cmp loopne fistl rex.R (bad) adcb jae add icebp add sub sahf cmp mov shrl jno shrb xor out cmp ljmp jne mov xor pushfq (bad) imul cmp clc (bad) loopne cmpsb scas pop pop or mov (bad) mov lahf sub mov loopne mov add mov clc mov push xor (bad) mov cmpsl and lock (bad) rolb movslq (bad) (bad) (bad) xor and in mov int sbb (bad) pushq lock (bad) xorl (bad) adc sahf popfq retq rex.RXB jrcxz and cmp add jbe stos adc xor loopne nop mov mov rex.XB iret mov ljmp mov jmpq (bad) adc mov loopne (bad) movabs test add push loopne lret adc rex.WR shr cld pop adc and cmpsl loopne ds mov push (bad) jle jns sarl mov cmp jnp outsl xchg cltd or sbb mov cs fimul loopne rex.WR mov adc gs orb loopne (bad) es rex.WRXB add ds cli add scas mov loopne pop scas (bad) xchg or jne lock divl loopne fwait sbb in xchg pop add callq cmpsl loope js mov test rex.XB rex.R cmp mov and cmp loopne rex.B xchg or imul add pushfq cld clc lods xchg lret lods (bad) fcomp insl (bad) mov push (bad) fildll jrcxz adc sahf (bad) pop sti out (bad) loopne add jno jl or movabs jns add (bad) (bad) (bad) xchg adc (bad) cmpsb (bad) cmc cmc (bad) in (bad) loopne cli (bad) pop (bad) cs pushfq mov (bad) or subb (bad) sbb cmp jnp movslq rex.WRXB lods mov in andl sub mov sahf retq cmp or stos or jmp or sbbl loopne xchg (bad) movabs scas insl loopne add leaveq loope outsl xor movsl imul loopne (bad) or pushq sub (bad) shr test add rex.WX pop sbb xor cmpsl pushfq loopne icebp sti (bad) movslq jno pop std ds pushq cmp (bad) je jmp sbb xor sbbl lret jmpq sahf lods loopne nop je (bad) (bad) cmp icebp or scas movabs xor (bad) xor or (bad) xchg paddsb or cmp sub addb xchg pushfq sub rex.WXB or pop js jnp (bad) rex.WRX ds xchg xor and lret lock add mov in cs xor (bad) loopne cwtl cli xor hlt movsl test imul fbstp adc lods jbe sbb push (bad) or decb rex.R jae,pt movabs adc icebp jmpq and sbb loopne addr32 adc in mov repz sub lea rex out sbb (bad) jno adc sbb loopne (bad) adc (bad) outsl addr32 (bad) cli or jnp pop imul jb ljmp enterq (bad) mov loopne mov lods popfq loopne (bad) addr32 test (bad) loopne nop rex.WXB imull lods retq mov ss or ja xor fimull stc or test push repnz icebp push xor test jns rcll rex.R shrb and (bad) push scas ja lahf (bad) fistpl rex jb mov (bad) (bad) mov rol mov jmpq movabs mov push (bad) sti cmp rex loopne movsl repnz cmp adc je (bad) pushq popfq (bad) incb iret cmpl cltd (bad) (bad) mov nop rex.RB rclb clc loopne ja xlat fiaddl decl or mov repnz (bad) cmp out xchg fdivl scas repnz loopne rex.WRB pop movabs movabs fnop sarl xchg mov (bad) addr32 jl ds cmp movabs loopne fstpt or mov loopne adc rex.WR jp repnz sbb cltd or fxch mov xor fnop add iret jne cld cltd cmp movabs mov sbb in (bad) or loopne outsl in add sbb loopne int3 push rex.WXB out rex.RXB clc adc int3 in jle adc mov and push mov (bad) sbb cld (bad) lret (bad) jp rex.B (bad) sub clc mov loop pop mov out (bad) mov add mov cmc ss loopne (bad) lahf rdtsc adc adc movsl add pop (bad) xor loopne mov add sbb sbbb outsb rex.WR es lods out loopne nop rcrb rex.W movabs mov movslq test mov fmuls out and push mov rex.W lret ficomp shlb pushq fdivr test loopne xor pop mov retq out (bad) rex.WR repz rex.X or rex.RB repnz rex.WX fs loopne add rex.B mov rex jmp sti cmp pushfq lock (bad) jge xchg lret loopne (bad) pop retq (bad) repz movsb test loopne sbb pushfq (bad) mov loopne fmull lods mov push cltd retq and (bad) rex.WB imull jmpq rcl jge retq insl (bad) lret rex.WRXB je in enterq lods lods shl xlat shrl rex.RB push loopne (bad) cmp add movabs imul movsl jmpq or adc mov cld (bad) iret xlat pushfq jle shlb jp,pn icebp loopne adc shlb xor rex.WR xor jae jle sbb push test cli lret (bad) enterq or mov (bad) xor mov jo outsb add movabs and out loopne sub sbb (bad) add lret cmp rex.WB (bad) jge fistpl jg mov movabs push jp rex.R jmp in (bad) rex.WRXB (bad) fidivl push (bad) callq retq ja jl (bad) sub sub loopne (bad) and or (bad) (bad) loopne lahf mov push xlat rcrl icebp in sti adcl stos lahf sub mov jmpq int3 xchg ficom cwtl and mov in xor rex.WX and in movabs rex.WR and pop cltd (bad) jno xchg andl insl std lret pushq rex.RB out xchg sbb sbb mov xchg rex.WRX popfq (bad) jg jbe (bad) shlb movsq jnp rex.WB lock retq mov out pushq and (bad) cmp (bad) lret adc insl adc xor mov rex.WRXB loop adc xor imul xchg (bad) jae cmp mov fimull insl movabs mov sbb lret sbb (bad) lahf add xor cmp lret rex.WXB jrcxz ja adc add je sarb pop mov add rcl jrcxz cld rex.WR fcoml xor ljmp enterq std (bad) gs adc adc popfq lods or in push (bad) (bad) mov (bad) lock push fwait rol insb push loopne and push (bad) addr32 add mov shll in and callq icebp gs mov loop xchg (bad) add js (bad) xor (bad) pushfq std mov js jo fildl in cltd jne xor pushq jp add xchg add (bad) and in (bad) cmc push (bad) addr32 sub and iret (bad) xor fmul (bad) loopne (bad) (bad) rex.XB loopne push sti (bad) rex.RB jno xchg imul sbb loopne loop pushq loopne mov test iret cmpsl loopne rex.WR cmp mov movabs loopne xchg or outsl loopne out push add and rex.WX iret cmp mov mov cli pushq shrl lea in (bad) jg adc mov xor in fdivr (bad) out mov mov loop jne ja xlat loopne (bad) pop pushq and in xchg shlb xlat addr32 imul rex.RX rex.WXB leaveq int3 sbb fistl sbb sbb rex.W lock loopne (bad) (bad) sbb loopne (bad) popfq or mov retq sub shl test jne mov rex.XB in sti (bad) rol lahf (bad) jmpq jg mov jb loope loopne in xor cmp cmp (bad) (bad) (bad) retq rex.RB out (bad) movsl callq scas (bad) and jbe loopne pop sub xor outsl rex.RXB xor test sub (bad) orb insl shrb jmpq (bad) insb shr ds out lods ficomp mov movabs (bad) jmp in mov jmpq sbb cmpsl mov loop or rex.WRXB rex.B loopne xchg retq pushfq pop jns movabs lea xchg rex.X xchg lods cmp in movsl sar cmc push and xchg xor mov xchg push int3 (bad) sub and out mov jno loopne and hlt and (bad) fstl pushq scas and negl or cwtl nop in xchg loopne xchg (bad) xorl mov loopne (bad) popfq lret xrelease test (bad) mov movabs or (bad) and push add ficoml or xchg lret or pop mov loopne in fwait lret mov (bad) std (bad) fmull jo xchg fildll loopne xor sbb rcrl adc loopne pop mov rex cmpl (bad) cmc outsb mov xor enterq mov icebp test stc rex.RX (bad) je insb mov (bad) loopnel mov mov or lret (bad) in mov jnp pop icebp sub jmpq mov xchg cmpsb lret loopne sbbl rex.XB ss insl jno xchg loopne mov movabs pushq or rex.W (bad) lods or (bad) loopne add push test clc loopne adc cmp loop (bad) fidivrl loopne sub cs (bad) adcb out push outsb rex.RX rex.RXB mov popfq cmp or add xorl adc cmpsl adc loopne sub push je mov cmc outsb mov add mov push mov loopne add (bad) mov fidiv (bad) inc fdivl loopne test fstps sahf or and cwtl loope (bad) loopne sbb add movslq lret stos stos int3 shr hlt loop popfq xor rex.WRXB in (bad) cmp loope jae sbb fstpl cltd fdivrs sti or mov jns jns (bad) insb in movabs test rex.B (bad) jb mov rclb push rex.WRXB mov movabs (bad) rcrb xchg sbb sbb xlat (bad) clc rex.WR clc nop mov stos adc pushfq rorb leaveq jo sti fs cmp insl test jns mov jg loope adc out jp retq fidiv adc sub ud2 pop (bad) mov pop mov sarb in ficoml movabs pop or ds xor pop pushq cmp mov rex.RB mov adc (bad) ror andb mov loope rclb xor (bad) rex.X movabs stos xlat (bad) or pushq jmpq std cmpsl mov jle sbb ds mov lock out (bad) movabs rex.WRX rex.WRB (bad) mov add movabs mov xor (bad) rolb mov movsb xor xor loopne out adc mov pop jp rorb loopne (bad) lea push out mov pop sbb (bad) jl mov (bad) out mov cmp xchg sbb test xchg mov sbb movabs pop sub loopne scas rex.R lahf adc xchg in mov out loopne cmp rex.B mov stos (bad) insl lret movabs jge (bad) jl pop sbbb fstpt loopne (bad) shrb and add mov scas pop sbb mov pslld mov sti stos or in popfq mov push movabs and rex.WRX cmp leaveq out jae in rex.WR movabs out xor movabs jmpq rorl add rex.RX fwait sub (bad) in movsl shrl mov rolb (bad) scas loopne cmpsl mov stos mov test (bad) ss push xor rex.WRB or (bad) mov jne data16 nop cld cltd loopne jae fidiv cmp or retq out (bad) ss in (bad) rex.WB or scas cmpsl xchg pushq jnp jrcxz xchg out cld xlat or rex.XB (bad) pop mov push cmp out mov and adc scas or (bad) or adc mov fs xor (bad) lods (bad) jmpq cs jmpq xor pop jmpq or nop cmpb movl rex.X rex.WRB lock cmpsl xchg lahf loopne sub mov outsl (bad) movsl or leaveq fimul (bad) outsb (bad) loopne scas sbbl mov mov (bad) loopne cltd xchg mov stc repnz lret outsl mov movslq (bad) or cli and jnp sub xchg pop push sahf loope add and sub test (bad) icebp and (bad) jo loopne pop xchg (bad) sar adc (bad) push (bad) mov or repnz hlt push loopne jmp rex.RX pop sarl loop lret (bad) and push xchg movabs add rex.RX stos cmp mov fnstsw outsl (bad) (bad) loopne mov cmc ds sar loopne sub in sub outsl lods fsub xor loop js mov pop and fcoms lret data16 rex.RXB mov incl js adc clc ss movabs xlat loopne rex.WRB mov ja fsub mov xor jae (bad) je rex.WRB mov decl and (bad) adc loopne retq pop (bad) mov or jnp and subb loopne lret push mov loopne icebp stc and (bad) roll loopne (bad) xor jnp adc movabs (bad) (bad) lods ror (bad) add movabs fwait push cmp loopne mov outsb in cli stos cmp and jo pop movabs (bad) movabs fwait cld cmpsl (bad) outsl mov fidivrl mov faddl test lret (bad) sub or pushq rex.WRB or retq (bad) mov movabs movabs pop cmp jle lret cmp repnz push cmpsb sbb lods lret out rex.WXB (bad) scas jns sbb sbb rex.WRX jo icebp jae (bad) scas pop insl repz rex.RB mov movslq lods pop add (bad) rex.WX addr32 lret mov outsl ss ror push (bad) loopne mov xchg sbb mov xlat sti hlt (bad) movabs repnz loop (bad) sbb movabs cmp lahf stos pop movsb movb sbb outsb add jnp loopne xchg retq add adc movabs (bad) in (bad) flds lret sub cmp and leaveq callq rex.XB rex.WR (bad) cmp mov cltd xlat xor (bad) pushfq cmp xchg mov mov mov data16 (bad) cmp movabs push jge pop (bad) cwtl out loopne data16 insb stc sub jmp loopne sbb test loopne rorb popfq test jb movslq (bad) (bad) pop (bad) add retq loopne jle imul rex.WRX loopne std pop xor ffreep jmpq loopne or fdivr sub xor jrcxz icebp shll sbb movabs mov xchg jrcxz xor in jae je xchg and hlt pop and or loopne stos add sbb ficoml and loopne nop outsb mov loopne test and pop (bad) incl es add or mov sbb cmovae add ss xchg or sbb sub rex.W int (bad) out paddsw xchg (bad) lret sub or data16 lret xchg rcl rex.WX rex.XB jne push add leaveq (bad) sbb push add jp outsl (bad) rex.X idivb scas adc or mov int3 xchg jmp loopne pop std out cmp fsub xchg xchg movsb rex.W int jne pop rex.WX rex.WR out mov movabs and pop stos loop (bad) fwait (bad) es fucomp xlat sub popfq (bad) or mov ja (bad) pop testl addr32 pop add test mov cmp (bad) out mov subl (bad) (bad) lcall pop or or mov (bad) adc push icebp (bad) (bad) xor xorb (bad) out fwait mov outsb and sbb push or rex xchg rol fldcw (bad) int3 jbe out cmp cwtl and rorl jrcxz cmp fidivr mov cmpsl cmp fscale insb loopne mov rex.WRX icebp retq fisubrl mov mov add loop (bad) mov lock adc addb add mov test cwtl adc add (bad) loopne (bad) jne repnz xchg xor scas mov (bad) (bad) out cmc mov in (bad) sbb mov movsb movsb and rex.WRXB (bad) xor mov push stc pop ss or cltd out ds fsub movslq jb pop lret adc xchg int stos adc repnz (bad) sti cmp movabs push jp (bad) (bad) ficomp rex.WR (bad) sahf sbb and (bad) loopne cmpsl (bad) (bad) out in (bad) (bad) jnp lret cs and rcr mov cmp lods movsb std lods fs sbb pop or pop sub mov ficoml adc sub (bad) cs loope pop sti in loopne or cmpsl callq fneni(8087 sub jnp addb movabs (bad) clc lods decl cmc (bad) pop xlat xlat xchg cs leaveq (bad) gs cmp xor xor and cmpb js (bad) inc sbb loopne callq rex.WXB sub insl movabs or xchg movabs (bad) mov (bad) retq xchg rex.WB xchg or sbb stc (bad) adc icebp movabs sub loopne mov (bad) shl pushq pop sbb adc xlat sti cmc add adc (bad) loopne popfq repz (bad) mov push in add xchg loopne pop jno (bad) sti loopne stos jnp push xchg cmp (bad) adc fcomps (bad) je iret and rex.WRB rex imul js loopne (bad) fsubrl pushq repz shrb gs add std or movabs out jmpq sub (bad) and jae xor xchg (bad) push xor and scas cmp mov add sbb loopne or rorb stos sub retq cli ds xlat cmp retq jrcxz mov js (bad) mov (bad) jnp out fdivp sbb shr sbb jae xlat mov or sbb mov (bad) int mov jle loope int3 movabs add pop cmpb movabs and leaveq (bad) xor mov or addl mov jle cmp jo adc out cmp pop add in sbb sbb sbb rex.WRX rex.WXB add push popfq and icebp movsl imul add outsl (bad) retq (bad) cmp rex.WR adc out cmp xchg out mov jbe lock outsb js and stos fadds jno xchg decb std test mov fsts out sbb sbb test rex.WRB lock add (bad) jg cmp sbb (bad) rorb (bad) (bad) retq int lea gs rex.X fs outsb loop mov (bad) stc and mov (bad) fstpl mov (bad) mov callq out mov fistl test pop sub nop pushq xor gs sub mov mov movabs in push loopne jmp addr32 test jrcxz movsb insl mov adc lods (bad) in clc (bad) (bad) (bad) pop shrb adc movsb rex.WXB jno rex.WRB movabs out jmpq xor ljmp insl (bad) stos in (bad) movsb pushq jrcxz je (bad) and (bad) xchg nop lret in push jnp and and mov sbb rcrb sub jnp lock cmc rex.W adc sbb imul lahf add mov mov in movsb and addr32 sub and rex.WXB loopne movslq pop mov jmpq pop xor pop rex.RB mov cmp rex.XB cmp adc cltd sub lock callq jns lock rolb cmpsb scas sbb adc (bad) (bad) hlt data16 (bad) push push (bad) sub (bad) adc cmpsl mov sub movl repz mov outsb rex.X lods or rex rex.WRX push callq (bad) push mov sub add or add rex.WR pop movl mov popq jae (bad) repnz mov jrcxz xchg lods movslq leaveq xchg xchg incl stos adc cltd rex.XB jns jg js xor loopne test fsubp sahf outsb incb pop cmovnp sbb add add jmpq movslq jrcxz jno pop cmpsb sbb pop shll repz movl jae push in lret hlt (bad) icebp jp and pop and xchg xor or in sbb rex.WRB jge gs cltd rex.WX jae add outsb fnstenv rex.WRB loop movabs rcll (bad) imul mov push ds movslq (bad) subb (bad) test push lods js sbb lahf outsl adc neg (bad) mov rex jns sub rex.WXB test jge cmp movabs cmp xchg fmuls jbe jne (bad) addr32 jle orl (bad) pushq fs clc push and pop or insl cmp movsb test adc push (bad) adc (bad) retq sbb mov (bad) stos repz cmp test mov jl sbb xor jno adc mov cmpsb loopne leaveq (bad) cmc (bad) movabs sub loopne fwait xchg adc add jg movabs pop jge xor sub loopne shrb shld adc xchg addr32 cmp rex.WRXB rex.XB (bad) vmovdqa loopne or mov in flds imul cmc popfq or pushfq sbb (bad) pushq in int3 rolb (bad) push leaveq xor nop (bad) movsl lods sbb or out lret cmp ficom loope push test mov (bad) movabs movabs addl sbb (bad) rorl (bad) in xchg and xor or push mov fcomi leaveq ficomp mov je in (bad) fisttpl movabs je lods (bad) outsl cmp (bad) mov test sahf imul pop rex.XB rex.R (bad) (bad) sub rolb xor rex.WR (bad) xchg jmpq rex.R xorl test sbb (bad) stos (bad) cs jmpq lret sub cwtl rex.RX movabs sub xchg icebp fwait cmp data16 repz (bad) (bad) loopne mov cld sbb loope rolb je or and pushq push jmp pushfq (bad) loopne pushfq xor pop stos (bad) test ss int3 cld fsubr ficompl push or retq (bad) rex.WRX mov and je sti (bad) loopne and cmp (bad) adc lret jae movsl push rex.RXB gs frstor retq subl test push push cmp jmp lahf sar sbbb adcb rorb in (bad) sbb jg fs shlb int3 pushfq in pop sarb xor fimul adc pop (bad) rex.W loopne enterq push fisttp pop xlat (bad) mov lods pushq in inc mov adc fneni(8087 cmp pop stos ja (bad) shr lahf movabs adc xor imul sti adc stos int retq loop sbb jae xchg js jno mov and retq stos jno int3 (bad) push fisubrl (bad) push loopne sahf iret mov rol jl enterq pushq jg push jb xor jrcxz (bad) rex.WR clc cld mov loopne insl cmc outsb (bad) or or xor cltd cld retq add xchg or or test jmpq sub or stos mov sbb (bad) test add push cli sub (bad) adc or mov sub test pop nop add rex.WR sbbb sarl in sbb insb xor mov jmp test subb loopne movabs shrl jge (bad) xlat sbb lret ss jg (bad) rex.WB shll callq (bad) mov (bad) jg (bad) cmc and and pushq je in (bad) pop (bad) shr mov fbld loopne (bad) mov xchg lahf hlt rex sbb je loopne push icebp rolb sarl and rex.WRX add cmp in not add movsl data16 repz push rex.WX pop cmp cmc ss xchg cwtl cmovno paddsw jb pop imul shrb loopne (bad) xor fdiv mov fldl2t mov rolb (bad) mov rex sbb in mov imul out cld or retq jbe (bad) xchg popfq (bad) sti out rex.WX xchg retq adc (bad) decl stos (bad) jno std shr add shl mov fwait jge cltd rex.WR hlt (bad) rex.WX (bad) retq loopne cmpsl add clc sub cmpl mov retq loopne (bad) mov xor push jge movsb repnz add lret sub cmpsb jo,pn lods mov loopne (bad) rex.R out sbb loopne fdiv rex.W in sbb add push xchg je fldt icebp pushq or js (bad) (bad) rex.WR in pop mov add mov adc (bad) mov mov lods out cmp pop jbe xchg mov (bad) push (bad) (bad) insl movabs loop or out cmc in add stos ja callq mov and lock cmc (bad) (bad) jg mov movsl test push outsl in loopne pop in (bad) rex.WB fnsave push jns (bad) lock mov cwtl (bad) (bad) mov movslq and rex.XB xor cmp fcoms in cld adc and (bad) test rex.RXB xor pop stos sti pop (bad) repnz mov (bad) loopne and or rex js mov lcall jmp jo sub loopne adc xchg int3 lahf mov rex.WRB rex.RX test xor (bad) rex.RB jmp mov cli ja rex.WRB sti sub sbb (bad) in rex.X or rex.WB imul orl adcl jg or callq rex.WRB pop popfq add jmpq sub and rex.RX mov jno rex.XB mov jo and iret cld sar add repz rex.WRXB xchg fcomps push loopne rex.WXB sahf pop lods leaveq ja movabs shlb pop loopne xor movsl mov imul and (bad) jp (bad) rcl rex.RX (bad) pushq icebp pop rex.XB and outsb (bad) xchg jle loopne cmp and xchg jp movabs (bad) testb (bad) xchg sub cmpsl stos rex.RB test movslq lods jo pop in mov test js clc sbb mov rex.RX and rex.X adc loope jmpq incb loopne movabs addr32 pop imul cs adc sub xor out pushq mov xchg add or cltd int sub jmpq or fcmovnbe int cmp lods movabs (bad) cli int3 jp out loopne jmp xor icebp mov push mov rolb loope cltd add or loopne ds js scas test loopne rex.XB xor push or in out pushq loopne jne fwait (bad) lahf js pop add rex.R lret (bad) inc lods cmp fdiv popfq mul sbb cmc rex.WRX cmp and movabs lods loopne (bad) mov adc add push (bad) and xchg sti xlat (bad) loopne (bad) jne cmp lods xor rex.WRX incb nop out out rex pop mov add and mov (bad) sub (bad) cmc cmp push sbb fmul sub jrcxz pop jne jo push (bad) in (bad) sbb push loope movsl push cmp mov add out (bad) or cmp movslq mov sbb cmp mull sbb xor lods fsubrp mov movabs nop (bad) mov and (bad) (bad) pop jbe (bad) fwait xchg movabs stos mov sbb adc mov lea or js (bad) pushq jle lods rex.B rex.WRB iret sahf and gs adc shl (bad) out (bad) pop rex.WXB adc outsb rex.WRXB insb lret cli jmpq (bad) xchg sbb in xchg and mov xchg jge rex.WXB jns (bad) pop and jrcxz (bad) (bad) testb adc (bad) idiv rex.RB rex.RX in shr cltd cs fs (bad) clc imul mov out sub rex.WX (bad) divb movsb clc sub int cmp sbb sub sbb leaveq mov jno clc sub xor nop out int (bad) mov clc iret lret adc scas cmp mov cli cltd and (bad) jae push sbb rex.WRX rex.WR callq add lods and xchg enterq (bad) xor xchg fwait lret (bad) loopne clc sub fisttpl cmp xor rex.WR icebp (bad) adc sti adc rex.R fimull and hlt movsl jno sbb jnp loopne rex.WRX (bad) je jns fisttpl fs (bad) cmc shrb sbb xchg fist iret ficoml out repnz cmp pop clc or (bad) pop lret push rex.WXB and (bad) add movabs and rex.WXB and test fcom icebp insl fs push xchg and scas jno rex.R loopne adc popfq cmpsb repnz in out stc and cmp shr jmpq addb fsub sbb or jge test icebp loopne sbb (bad) jne sub xlat and (bad) mov sub xchg (bad) xchg test (bad) mov loopne and retq test int cmp retq (bad) sub out or hlt fsub mov push adc (bad) sub cmp loopne push xchg cld jg add jmpq lock xor xchg inc cmpsb add test mov xchg stc jmpq xor (bad) rex.RXB movsb (bad) mov insb enterq int3 stc movsl jae pop sbb loopne rex.RXB fisubr jp retq loop rex.WB or subl subl add movabs (bad) jmp or and cmpsb loopne addl stc in push sub clc loopne rex.XB jne (bad) cld or jrcxz cltd mov repz cmp pop loopne jae stc (bad) cld xor add and mov outsb (bad) sbb mov jmpq (bad) adc and rex.WRX fs (bad) add sub sub jge sbb pop fs xor cmp (bad) adc pop repz (bad) xchg enterq cmp je rex.XB or (bad) icebp sub fwait pop jno sub loope adc loopne (bad) clc rex.W mulb (bad) je cmp lods xchg mov cmc xchg cmp xchg out sbb (bad) mov lods (bad) (bad) movabs rex.WR (bad) loopne insl add jl jle adc loopne xchg mov sar rcrl adc sbb sub shrb sbb loopne (bad) xor loopnel out sbb movb jge shll mov fcomps rex.WXB (bad) or rex xchg jg adc add jp xor (bad) test and js pop loopne outsb xchg rex.RB addr32 sar mov rex cmp movsl loopne or jne push or sbbl adc (bad) pop loopne (bad) add movabs (bad) jo sub imul out xor shlb cwtl loopne (bad) mov retq (bad) callq sub fmull jnp cmpsb (bad) (bad) retq nop loopne cwtl xor sbb (bad) loopne mov (bad) (bad) loopne pop imul sub lret jle cmpl out loopne jb mov sub pop push cwtl lahf xlat test gs rex.WXB push rex.WRX idivl rex.RXB mov mov stos pop loopne (bad) adc jrcxz lret adc rex.R jb sbb (bad) fcmovne rex.RXB outsb (bad) leaveq adc add and and xchg imul sub sbb (bad) repz push jns stos add push lretq rex.WXB loopne jno push pushq in loopne add mov mov sub out xor xchg mov rex.WX ss rex.WRB jmp mov scas jns test sub loopne push (bad) (bad) in imul mov outsb loopne mov jmpq or in and lods test stos movsl sub or loopne data16 (bad) (bad) sbb (bad) lea movsl retq sbb movabs test push loopne jbe (bad) pop rex.WXB (bad) push rex.R loopne rex.X and jl mov test cmc and push fmuls jo sahf jg shrb rex.WXB rex.B mov movabs (bad) es xor xlat xchg rex.WB jle,pt (bad) (bad) (bad) lret rex.W loopne xor and sbb lret (bad) adc jo rex.W cmp pushq jns movabs add nop rex.RX mov cmpsl ror bnd xchg sub xor and push sub lea loopne (bad) movabs xchg sub lahf add (bad) unpcklps loopne adc rex rex.WXB mov loopne (bad) insb cmp movabs rcll sub (bad) (bad) (bad) stos mov movabs callq rex.B ss push jl clc rex.WX (bad) loopne imul hlt mov push and (bad) clc xor (bad) (bad) and (bad) xchg (bad) out sub lahf test xor push pavgb mov cmp test fnop int fsubr fnop lea pushq loopne (bad) rex.WX (bad) imul ja or int3 lret (bad) loopne fstps adc push xchg movsb mov ja mov pop rex jae push rex.WXB std js push (bad) pop sbb cmpsb fdivr add movslq jmpq or xchg (bad) fidivl shl pop lods cmp loopne adc in js in mov hlt mov or sbb mov push lods in leaveq (bad) (bad) xor negl push pop (bad) rex.WX rex.RB rex.RB repnz loope (bad) cld sub js pop pushfq and rex.WXB add lret and and (bad) clc repnz movsb addr32 push (bad) (bad) mov loope es (bad) lods retq cmp (bad) out loopne (bad) pop ss mov shrl jo rex.RX mov out movabs movsl fwait sbb in stc out (bad) adc push push icebp jae sub rcrb ucomiss sbb cvtdq2ps cmp (bad) push push and rex.WB lret jno cmpsl jns and lock lock pop adc (bad) jnp mov cmpsl outsl callq xchg xchg fdivs (bad) nop pop xchg pop pushq cmp bsf movsb (bad) (bad) mov (bad) enterq (bad) or adc (bad) in retq (bad) cmp rex.XB adc cmp rex.XB rex.WX rex.WRXB xor movslq lock mov rex.RB xchg scas fldl fs cltd pop insb (bad) (bad) jns xor pushfq loopnel mov test (bad) jbe ror sbb xor adc insl (bad) adc loopne movslq loopne outsb ja callq push (bad) movabs xchg sub (bad) loopne rex.WXB adc jg mov (bad) jmpq clc es xor and (bad) stos mov xchg fnsave xchg fldcw (bad) (bad) mov movabs xchg divb pop insb fbstp rcll pop pop fnop xlat rclb (bad) stos sub pop xor sbb push rex je mov (bad) mov loopne (bad) fist jmpq mov jb loope mov (bad) fidivl insb adc dec rcr or pop rex.RB (bad) outsb shr and outsl jp and repz fstl loopne (bad) stos mov loopne flds (bad) xchg xor push xchg es imul movsb mov pop loopne xor cs loopne sub (bad) loopne lahf test (bad) loopne movabs adc jne jmp cli mov js callq (bad) lods sahf sub shlb bnd roll add pop loopne lret ds mov sbb clc sahf (bad) xlat andl sbb lret std push fcmove imul rex.W ss data16 lret xlat add and xchg loopne test mov out or rex.WRX mov sbb cmp mov mov loopne sbb mov xchg cmp loopne icebp sti push insb adc and outsl and jno (bad) lret loopne mov jl loop movabs xor repnz lahf outsb (bad) mov (bad) sbb jno xchg fwait mov xchg popfq push adc mov js in pop xchg scas xlat pushfq (bad) mov jmpq sub sbb lea add (bad) rorb test sub scas pushq icebp cmpsb popfq mov mul (bad) js mov hlt loope fstpl xchg jb mov xchg xchg (bad) lods retq (bad) add adc (bad) nop loopne jl loope jle add push loop mov add and pushq leaveq test mov loopne outsb ficom shlb rcl jbe mov in push sub mov cmp stc jg jle xlat xchg add test cmp loopne test mov xchg xchg fnop rex.WX lret (bad) clc (bad) movabs jae (bad) shll in jp fisubr loopne iret je or idiv mov (bad) (bad) nop (bad) (bad) clc lahf xlat and imul or or mov mov pushq sbb (bad) adc (bad) repz retq xchg push loopne pushq jg xor jle adc mov stc sahf sbb or (bad) fidiv shll jle cmp rex.WRX jl or loopne mov adc sbb push retq movabs (bad) mov mov fidivrl xchg cmp vpand mov pop and xor (bad) pushq cmp ss (bad) scas mov (bad) rcrb loopne sbb rex.XB (bad) jmp push imul movsl (bad) rex.W mov sub nop sti jns adc or loopne xchg xchg mov (bad) and xchg std sbb jge jo cmpsb mov repnz sub decl loopne jb out ror int test insl loopne or cmp loopne adc pushq jo pop sbb rex.WRB pop loopne rex.B rex.W loope in sub retq rex.WR cmp rex (bad) je (bad) xchg loopne (bad) mov addr32 push or movsl cmp movabs and insb cmp callq lret push xor adc (bad) lahf cmc stc mov mov loop jmpq mov mov (bad) movsl scas mov mov cmp sub sbb scas xor jne pop pop stos movsl loopne (bad) gs imulb or sbb mov loope sbb (bad) sub std loopne je lods (bad) add (bad) loopne (bad) sets fcomps test cli (bad) sub loopne cs and push rex.WB ja sub ljmp rex.WRB rex.WXB out movsl insb int3 ficom jge mov (bad) in (bad) int fcmovu js (bad) mov rex.B pop shl data16 int3 (bad) adc out movabs loopne or pop outsl push mov jge jne pop loopne or jp cs add xor pop or add ss push cmp retq pop loopne jbe mov cltd loopne pop (bad) (bad) movslq fwait pushfq (bad) jmpq movmskps insl cmp loopne je jmpq loopne cmc sbb shll adc adc xor and cli ficom add loopne orb js xor out mov sbb (bad) rex.R cwtl (bad) test callq (bad) (bad) imul cltd sub pop enterq (bad) (bad) pop xchg (bad) jge jno movabs adc mov rex.XB jnp push (bad) sbb pop and sbb adc sub (bad) rolb test insb sahf jmp mov mov jle movabs lea mov movabs jmp in mov rex.WB (bad) ja add cs cmpsl movabs out fdiv (bad) jmp es sbb or (bad) repz sbb outsl callq mov (bad) mov mov sbb push test rex.RX pop (bad) out rcr sbbl rex.XB clc mov (bad) (bad) lods cmp rex.WRXB and xchg xchg retq (bad) notb cmp pop lock jae xchg insl sub add fisubl enterq out mov imul (bad) (bad) shll stc clc (bad) scas fimul adc je (bad) leaveq push and pop xor (bad) (bad) addr32 retq popq out shrb mov insl jge xchg cwtl (bad) retq xchg movslq movsb movsb sbb pop add jg (bad) rex.RX xor mov enterq or adc xchg rcll pushfq sar icebp fs rex.WRX in cmp adc pop and sti fdivrl pop add adc (bad) xor xor fildl loopne jle out lahf mov leaveq jmpq (bad) nop mov jns sub (bad) xor ss stos loopne outsb jp loop and sti movabs lods (bad) adc (bad) xchg icebp xchg (bad) jrcxz (bad) jle xchg invd xor rex rex.R (bad) sub jno xchg cmp repnz (bad) xchg sub add cltd mov push out xor icebp enterq xlat rex.R rex.B gs mov loopne xchg rex.RXB (bad) jrcxz js sub jo cwtl mov and add rex.WXB push xor rex.WX stc ds (bad) (bad) jb cmpsl rex.WB rex.WRX cwtl out (bad) loopne add add subl icebp loop jge add movabs leaveq out add loopne push (bad) push movsl fchs (bad) stos xor loopne nop fcmovb and loopne mov (bad) loopne add pop ja (bad) stos enterq jl xchg in gs adc incl jrcxz ror cli loop mov loope lahf rex.X (bad) pop fsubrl pop sbb xlat scas jle (bad) jnp in mov xchg hlt mov out vmovaps shll xchg (bad) movslq incl xchg cmpsl mov push nop test movabs out jrcxz out and (bad) xchg lahf loopne retq stos mov in (bad) cld jb lock add loopne ja cltd mov cmp or out xchg jge or clc jns cmc xchg mov xor in or (bad) je sub (bad) test rex.WX (bad) xchg xor hlt movabs leaveq pop cmc rex.WRX in xchg data16 add cld sub addb xlat xchg loopne (bad) rex.WXB fnstcw stos fdivs xor jo (bad) (bad) rex.W mov rex.WB jnp js hlt test (bad) lret rex.WRB or callq (bad) in rex.WRX and ja sbb decl rex and and xchg xchg sbb stc icebp clc (bad) neg stc insl sarq push sahf mov (bad) fildll (bad) mov (bad) lea adc clc (bad) adc (bad) int test (bad) imul sub int3 test rex.X xchg fs rex.X pop jae sbb stos xchg cmc mov in rex.RB (bad) jae (bad) fnstenv mov icebp jle sbb mov xchg (bad) rex.WX out popfq sti enterq (bad) push mov push sub adc pop mov icebp imul std jge js callq sahf jmpq movsl stos (bad) fs outsb icebp or mov sar loopne mov rcrl (bad) retq out loopne sbb push loopne mov jg (bad) lahf fist (bad) loopne jge jmpq loopne mov movabs or cmp (bad) jle push (bad) (bad) movabs mov cs (bad) loopne jb jbe (bad) (bad) mov and mov add imul fisub push or (bad) movabs add leaveq loopne in mov mov mov mov pop rex.XB sbb sbb mov mov add out (bad) idiv (bad) (bad) movabs fwait movslq insl sbb jge mov in sbb fwait ror add and loopne cmp leaveq or fs jmpq jmpq push cmp shl shrl mov rorb sub loopne cmc cmp clc jae retq (bad) mov mov movabs fwait rex.WX outsb and xchg xor mov rex.WR fimull js rex push mov sub cltd mov fdiv fiadd mov movabs loopne jrcxz lahf add add mov jg lret (bad) (bad) xor lea int3 loopne cmc movsb (bad) jge sbb loopne cld (bad) jp (bad) shl in sub xchg add xchg jg jae (bad) mov jbe movabs cmpb int mov loopne loope rex.RXB xor std fs (bad) mov cmp shlb fsubr and mov je or scas pop mov add pushfq and rex.W es jrcxz xor xor rex.RB sbb (bad) in loopne mov (bad) retq stc shr mov mul fs movb divb jp jne sar out pop loopne fistp pop loop cld (bad) mov movabs shl retq gs pushq rex.W movslq (bad) and (bad) outsb mov sbbb retq lahf loopne or loopne lret cs push cmpsb pop insb js loopne xor stc mov ds mov mov stos mov (bad) jb (bad) (bad) fstl cmp mov xchg enterq in mov cmpsl sub (bad) pop loope mov or mov adc stos jo (bad) out test insl sbb outsl mov sbb shrb mov rex.WR js jae test iret mov lret ficoml cmpsl xchg out (bad) (bad) clc lods mov jb and (bad) mov mov int3 cld sub (bad) or and xor clc mov (bad) rex.WXB je (bad) mov (bad) fs out iret movabs adc test mov je cmpsl or insl cmpsb (bad) push rex.XB push cmp addr32 or pop add cmc and jg in and adc out mov cmpsl sbb cmp idiv popfq movabs (bad) sbb fdivl sti mov stos fdivrs jrcxz mov rex.XB and clc add out clc xchg push (bad) xor sbb hlt sub loopne (bad) xchg xor xor fisubr mov loopne rclb sub (bad) sbb jle (bad) rorb pushq cmp sbb in cmpsl jae (bad) (bad) push cmp cwtl pop nop mov int3 jp test divl mov rex.WX (bad) out (bad) fsts push shrl push (bad) loopne int mov (bad) add xorps fdivr sub and rex.RX or int or xchg rex.WRX rex.WX jb jo or loopne push adcl push (bad) jmpq (bad) (bad) outsb mov test repz cmp pop loopne hlt test in jmpq cmp std loopne cmp push adc stc movabs movsl out pushfq sbb mov or lods mov imul sub lret xchg sbb rex.WRX cmp faddl (bad) xlat jl cmp test xchg pushfq rex.RX (bad) pop movabs adc push xchg js add sub xchg (bad) loopne std rex.X je mov test (bad) jb shr xor test xor pop (bad) add mov (bad) mov (bad) (bad) jne rex.WRX shlb add in out repnz (bad) xchg add mul rex.WX fsub cs (bad) (bad) cltd test xchg cltd mov pop rex.WXB rex cmpsb clc loopne (bad) movabs loopne callq (bad) decb mov (bad) adc fimul scas rex.RB test mov movslq sbbl mov (bad) (bad) movb rex.WXB pushq loopne cmpsl xlat mov pop adc jle (bad) lods (bad) (bad) pop xor callq in and (bad) jg xlat (bad) and cld sub (bad) stc mov sahf fcomps (bad) xor add pushq lret jl loopne enterq (bad) pop rex.RX jmp movabs imull leaveq and cltd rex.RX pop add adc (bad) (bad) icebp add test xor loope insl (bad) loopne mov rorl adc mov jl sbb (bad) (bad) stos sub mov xchg pushq mov xor add (bad) test mov cmp xchg cli (bad) mov push mov cld rex.WRXB (bad) loopne add mov (bad) loopne mov (bad) xorb push push shl fucom movslq sahf xorl (bad) pop mov in enterq negl (bad) (bad) lods movabs cmp rolb jae loopne sbb mov (bad) jge mov int rex.WRX callq sub repz pop lahf shr (bad) sbb outsb (bad) mov (bad) push add (bad) icebp (bad) leaveq (bad) jno enterq jle pop (bad) fucom orl test add rex.R scas punpckhdq loopne and test rex.WR pop icebp retq pop add lret loope mov (bad) mov repnz xchg cmp loopne cs (bad) outsl or rex js cltd sahf mov cmc cmc out mov sub enterq loopne jge and xor loopne leaveq test notl js adc (bad) add repnz out hlt movabs leaveq rcr test fwait mov or sti iret cmpsl (bad) movabs ja addl adc cmpsb out push or imulb insl fcmovbe rex.WRX push sbbb mov xchg xor sub mov jle xchg icebp lock xor sub rex.RB std mov sub cmp fdivl mov add fsub iret in je xchg and movsb (bad) mov (bad) jrcxz int mov fs enterq test clc test or or mov (bad) fidivrl sti xchg or fnop and mov pushfq sub pushq in (bad) xor stc rorb (bad) movabs movabs test stc jle xor lret insl mov mov loope stos ss (bad) imul pop (bad) mov rex.WR cmc xor jne (bad) in (bad) jg rex.WB push (bad) (bad) (bad) lret rex.WXB rcrb cmp in push mov adc (bad) pop rex.XB mov rex.X pushfq xchg xchg xchg fmul sub movsb rex.WXB add add mov movabs sbb ds idiv add mov or movabs lods loop add jl out lret rex.B rex.WRB out rex.WB or lods (bad) (bad) rex.WB in (bad) mov stos pop ja movabs push imul (bad) jne adc hlt fwait (bad) jne out pushq retq movb mov add lret jrcxz cmp adc mov addr32 cli in or jo rolb or leaveq jg outsl test mov add movabs scas data16 (bad) addr32 hlt or test push sub cli pop (bad) jae pop leaveq (bad) sbb jl lods movsb push (bad) cwtl add pop pop fdivr and loopne js jnp (bad) fwait scas loopne sbb idiv jge rex.WRXB out sub loopne pop int3 cmp (bad) nop icebp sub jmpq out test add in cwtl lret loopne xchg mov jmpq mov lods int3 (bad) pushfq loopne in jp test sbb repz cmp add imul sub rex.RXB out ja callq jrcxz and adc sbb loopne adc rex.B icebp lret lock sbb out push retq stc popfq rorl sbb mov test ficompl mov je push shll jmpq sbb stos cmpsl (bad) loopne (bad) rex.WRB mov pop loopne sbb (bad) loopne (bad) cmp (bad) cmp rex.X (bad) cli (bad) insl or fs mov xchg callq rex rex.WRX (bad) scas or xchg roll rex.RB cmp callq cmpsb jnp add in cmp (bad) rex.WB add (bad) sub in in pop popq cli adc notb sub popfq xchg cwtl loopne rex.WXB mov mov int3 loopne (bad) imull fidivr bnd jno adc jo loopne test pop jb cmpsl and fistp (bad) loopne mov add ss rex.XB lahf repnz icebp pushfq cmpsb fsubp movabs fdivr (bad) pop rex.W rex.RB or adc (bad) add imul rex pop jmpq sbb or push loopne cmp adc loopne cwtl xchg in pop sbb pop fidivr cmpsb pushq xor pushq xchg loopne xchg rex.X cs rorb clc leaveq mov movabs push outsb push xchg xor (bad) in loopne jrcxz mov rol loopne or shl movabs jo retq lock adc mov sub (bad) mov sub nop retq xchg mov (bad) decb mov (bad) adc rex.W xchg icebp and and fldt insb mov or rex.WB cmc out xchg (bad) cmp push cld retq xchg stc and or or loopne cmp or in rex.W repz pop push jle mov rex mov push mov repz loopne,pt xor out movabs (bad) sbb mov int xchg movabs and nop sbb rex.WRX imul rex xchg rex.WRX add mov popfq (bad) repnz out loopne rex.RX rex.WXB dec test lods loopne repnz rcrl xchg (bad) push mov lcall in (bad) pushfq jno shll fcompl mov rex.W mov icebp outsl jl adc add js (bad) add add lret or or sub pushfq cs (bad) jge iret add jbe retq mov (bad) push (bad) jl test (bad) ja adc (bad) loopne test popfq idiv mov (bad) (bad) jge addr32 sti shrb mov xchg (bad) pop or movabs sbb push pop loopne adc cwtl pop mov and and movsl cmovs xchg adc (bad) jno push xchg jg cs cmp cmpsl and ja pop movabs cmp gs outsb in xchg in in loope,pn or hlt lret adcl mov movabs (bad) (bad) mov lock (bad) (bad) adc push xor jge rex.WB repnz cli insb mov scas jle int3 ja adc sub push loopne xor adc and mov lcall xchg (bad) xor enterq popfq xor in pushq and xchg lods mov (bad) subb loopne push jrcxz xor fs (bad) xchg rorb movabs lock or loopne (bad) stos movabs mov out fiadd rex (bad) cmp pop rcrl loopne repnz cli xchg adc cmc pushq rex.RXB fisttpll mov rex.WX xchg sub rcll or rex.B nop movsl fneni(8087 sub pop (bad) jo pop loopne pop leaveq loope xchg rclb (bad) and data16 addl (bad) callq fsts jg mov ja fsubrl mov mov icebp es xchg rex jge mov jmpq out (bad) repnz loopne xor mov xchg mov and xchg in (bad) or xchg rex.WXB jl pushq rex jne enterq push xlat sub out rex.XB scas add data16 repnz mov shlb (bad) jo loopne imul cmp dec fwait insl mov outsl sub jle fnsave cmp adc imul out mov loopne adc sbb lea pushq xchg push std retq in in sbb pushfq popfq pop decl (bad) callq retq mov adc (bad) xorl xor pop rex.RB (bad) xor sbb and add rolb xchg iret jl mov fsub retq xor int in jne scas fs in lret repnz test xchg jge int3 movabs lret lods (bad) test (bad) rcl (bad) movabs cmp ficoml jge cld (bad) std jmp test cmp (bad) movsb push or loopne sbb jle mov (bad) sbb jmp imul cmp orl incl lods jp imull sub add (bad) loopne,pt rex.XB sbb jae je lahf mov retq test mov in jmpq adc (bad) andl decl xor (bad) and in loopne (bad) jmpq cmpsl jmp (bad) movabs push (bad) or (bad) hlt (bad) push lea sar test mov icebp jb rex.XB (bad) fistpll cmp int3 rex.WRX (bad) iret sti mov mov and int3 add loopne add rex.WRX mov and ds clc test flds pop (bad) mov mov loopne mov test xor and jrcxz add rex.RB mov icebp stos movabs fsubp cmp mov sub rex.WX lock pushq cltd cwtl xchg movabs pop retq xchg rex loopne out stc pop lea pushq rex.WRXB stos rex.XB mov lahf leaveq int3 pushfq fsubp add mov xor or test loopne jnp rex xorl sbb fldl jmpq (bad) jbe (bad) jmp (bad) push xlat lahf pop xor movabs xchg insb lea sti mov rex.WB scas cmpsl push in or jae test rex.WRX cltd loopne pushq mov sbb or mov fisub xorl pop jo out push loopne add rex (bad) loopne mov push movsb loop loopne lea idiv jrcxz xor data16 (bad) sbb loopne retq (bad) sub xchg (bad) jne (bad) xlat jl adc out sahf and fcomps jmpq (bad) rol rcrl mov mov sbb xor rex.WR int sti jmp push loopne lahf outsl (bad) sbb in (bad) (bad) ficom xor (bad) adc jae pop cmpsb (bad) rex.RX rex.XB lret fistpl xchg repz loop fwait test xor sub rex.RX pop ja clc push rex mov outsl lods cmc xchg rex.WR mov shr pop jae or clc mov div int3 stos lods rex.RX notb cmp out rex.WXB insb pushq repz sbb cmc and sbb (bad) lock adc es addr32 xchg pop (bad) (bad) jb mov or jp jne cmc (bad) or nop jb test xchg mov and stos retq jmp loopne lret and sub (bad) rclb rcll (bad) fnstsw mov enterq jno in sbb loopne movabs (bad) rex.WB addr32 leaveq (bad) icebp pushq xchg mov jae pop cmpsl hlt test lret rex.WRX xlat adc movabs in adc cmpsl and fs sbb rex rex.WXB rex.XB incb jrcxz cwtl mov mov (bad) mov rex rex.X pushq (bad) fucomi gs (bad) loopne subl pop sbb shll adc xorl or rex.WRXB std xor in mov xor loopne hlt or popfq loopne cmc rex.RB cs cmpsb (bad) cli test movabs rex.RX xchg rex.WRXB ds fdivrl clc adc outsb incl rex.XB or loopne or shr xchg jmp icebp and pop loopne rex.RXB xor ja sbb jp and pop cmp mov sub sub push (bad) in loopne scas and (bad) decl stos add (bad) (bad) roll callq popfq and xchg lea enterq mov rex.RXB lahf stos and movslq (bad) mov out cmp cmp adc jl xchg vaddsubpd sub add mov ss or (bad) icebp in sub cltd add or (bad) (bad) shlb out leaveq mov jae (bad) jmpq xor (bad) loopne mov (bad) (bad) loopne mov fiaddl movabs loopne leaveq and cld (bad) jp mov sub negb stos (bad) fistl push push sbb or je jl jo sbb cmp loop iret add mov loopne loop (bad) nop pop adc add rex.WX mov cs test cmpsb cltd fsts (bad) cli and (bad) push nop shl sub insl rex.W (bad) std (bad) sti sti and (bad) (bad) mov cmp icebp lret (bad) jnp loopne lods pop mov rex.R shrl (bad) incb xor clc cmp sti in ja sub lahf icebp repnz sub clc xor (bad) mov out std (bad) enterq add (bad) cmp push movabs loopne clc mov pop loopne pop or mov (bad) (bad) mov mul add cltd sub fst test (bad) jge cmp in ja subl sbb xchg mov mov (bad) (bad) (bad) out (bad) mov (bad) (bad) (bad) xchg test movabs cli jl rex.WX loopne (bad) xor (bad) movslq push jp shll pop pop subb mov push cmp leaveq mov sub add mov and push loopne repz fucomi (bad) movsl fisttpll test (bad) sub rorb (bad) and mov stc (bad) xlat rex adc jnp rex.WB jmpq and loop rex.WRX test movabs fnstcw (bad) loopne jmpq (bad) rex.WB and pushq and rex rex.RX (bad) loopne rex.RB jmpq jle mov sbb (bad) mov fsub leaveq cld cmp (bad) mov loopne jle xor test add xor in loopne not xchg popfq cmp push (bad) (bad) nop (bad) rex (bad) rcr (bad) mov loopne (bad) stc push jmp push loopne pushfq popfq push cmp mov sbb mov loopne sbb xchg xchg test jbe jae fimull icebp mov (bad) (bad) clc xorb int lock fcompl mov mov pop add or stos in pop movslq lret mov (bad) movabs rex rex.WRB (bad) and popfq push sti movsl loop (bad) loopne sahf (bad) (bad) jno out loopne stos cmpsl (bad) push (bad) jbe jl mov fwait cmp popfq (bad) repnz stc (bad) sti xchg clc test (bad) movsl cmp loopne retq in pop cmpsl ljmp push and lea lods test sarb jle (bad) popfq (bad) mov out mov or gs pop repnz xor mov or mov loopne (bad) popfq or add add pop movsl lods frstor clc data16 and stos jmp je sbb xor loopne sarb ds rex.WX cmpsl fidivr adc or (bad) scas (bad) adc mov mov (bad) lock outsb rol xchg incb sub cmpsb (bad) mov (bad) mov fsubp ficom pop out add xchg jno sbb mov jl adc in mov jo icebp je cld xor mov gs fadds (bad) popfq cmp xlat or sbb or push push lret pop loopne mull lock mov sti xor (bad) and pushq scas (bad) iret popfq repnz (bad) sti push (bad) pushfq sti movsb add cmp rex.B sahf xor repz (bad) out add (bad) (bad) lea pop movabs xor movabs ss fstpt mov and (bad) or mov leaveq mov cmp popfq loopne ficomp (bad) loopne (bad) idiv (bad) (bad) (bad) ffreep push xlat in loopne (bad) int3 jmpq mov and fimull rex.R loopne cmp test mov mov lea and movabs jge outsl or repz add xchg loopne add lods ljmp nop (bad) (bad) cli (bad) cmp (bad) loopne (bad) ja sub loope add hlt push or xor mov loopne rex.WRXB rex.WR fistpl xchg testb (bad) sbbl or (bad) add (bad) loopne rcr sub fidiv pause mulb push (bad) sbbl cmc cmp fwait retq fidivrl mov js stc cltd add lock loopne (bad) sub loopne adc jns mov iret cltd movsb xor loopne or test cmpsb sti push loopne sbbl push insb (bad) scas xchg (bad) sti pop jg rex.RXB nop in cmp mov sbb fs pop xor mov jg cmpsb or retq loopne cli (bad) in xchg (bad) fucomip pop (bad) loopne add cmp sbb (bad) in jo cmpl xchg add and insb adc (bad) mov in lea jg notl (bad) sub rex.B add cltd std cmpb rex rex.WX add (bad) cmp add and scas loopne rex (bad) lods (bad) jp int jle jo jp mov movslq pop sahf (bad) in or jno rex.B (bad) in leaveq or mov fsubrs pop rex.X or push callq push bnd adc repz mov mov addr32 pop jmpq xchg xor mov push divb push ds xor mov (bad) pop and fidivr jb lahf cmp xchg cmpsl leaveq test adc sub (bad) mov jmp popfq xor enterq jns mov cmp mov pushq mov popq test movabs ss movabs jo movabs scas in rex.WRX loope (bad) iret fistp int and mov icebp cmp cmp mov pop sbb loopne mov rex.RXB rex.WRB jl loopne (bad) jne movabs jrcxz and xlat in xchg cmp int3 loope mov pop loopne mov rex.R loopne cld jnp shll loopne pushfq mov add xchg out jp push rclb repz sub (bad) cmp jmpq adc int rex.WX loopne push xchg movsl add xchg (bad) or xor add rex.XB imul data16 lods popfq nop loop mov pmovmskb cltd (bad) or xchg push loopne mov jb icebp (bad) mov adc (bad) cltd add cmp popfq adc or mov xorb rex.R subl xchg mov xchg loopne cmpsb (bad) push jbe add cmp (bad) ds (bad) movsb add add stos sub (bad) mov mov fisubrl cwtl test fwait sub js (bad) mov mov sbb add (bad) mov mov sbb loopne,pn out jmpq loopne adc jnp (bad) (bad) pop loop push pushq (bad) outsl loopne pop imul (bad) xchg or or jle jrcxz mov adc sar idivb pop js xchg add mov clc mov jmpq (bad) sbb (bad) (bad) movabs outsl cmc (bad) shl jno (bad) mov adc fimul in lret movsl lret jo jl cmpsb fs loopne (bad) test loopne pop jbe fs outsb add (bad) movsl in cld shrb movswl retq jl (bad) loopne lock cmc xorb (bad) mov sar cmpxchg fldcw add sbb mov fdivrl je mov and cli fsubs add loopne (bad) rex.WRXB mov callq popfq cmpsl cmp imul mov and loop (bad) rol loopne mov loopne rolb add enterq mov and out popfq mov idivb cmpsb retq mov js pop out jmp xchg (bad) jns cmp pop (bad) out mov jne cli ds test (bad) movabs pop movabs callq sti lahf in (bad) lea pushq (bad) ja in xchg out (bad) mov clc adc add icebp (bad) (bad) sub or cmp scas (bad) pushfq jmp adc hlt jge (bad) jae loopne xchg leaveq lods (bad) out rex.WRB sub xchg add imul rex.WB pushq cmp mov pushq xor push retq loopne repz mov je scas js loopne (bad) js in fcoml pop enterq sub outsl fwait test pop rex.RXB rex.WX in movabs sbb loopne add and test repz loopne (bad) rex.WB lods push loop cmp xchg or loopne (bad) imul rex.WRX cmc sti popfq loopne (bad) jbe (bad) jl andb or lock (bad) rex.WRXB gs leaveq imul test mov lock xor sbb (bad) sbb xor shll xor test enterq loop loopne je rex.WRXB add loopne cmp mov (bad) psubb in sub xor mov and movsl test gs rex.XB shrb (bad) mov xchg loopne sahf push leaveq pop or clc jbe rex.WX jo add stc xchg pop adc test xchg cmp sbb or pop rex.R iret loope xorb jrcxz jmpq xor xor or and (bad) loopne adc mov out mov mov stc loopne pushq (bad) pop (bad) xor cs rex.R (bad) (bad) cmp div pop adc (bad) and (bad) cwtl fisub pop sub rex.RXB testl cmp pop cmp repz cmp int mov (bad) xchg sti scas (bad) (bad) loopne cmpl fistl jmpq loope (bad) jmp rex.XB rex.WRX mov fwait (bad) jae ss adc loopne loope cld mov and test add mov jmpq rex.WRX add (bad) jmpq pop sub movsb pushq sti (bad) (bad) jg jge sub rex fs rcll jge andl mov (bad) loopne (bad) xchg jrcxz pushq or stos popfq jp push jle (bad) mov push movabs or shlb sbb loopne mov movabs (bad) and lret loopne jge cmpsb rex.RXB add (bad) (bad) out mov sarb pextrw (bad) adc iret jne mov jl shr xchg in out subl xor jle sahf adc or (bad) mov out rcrb int (bad) in xchg push movabs leaveq jmpq adc jno add outsb add mov jge (bad) (bad) mov insl and je fcoms mov mov cmp outsb shll mov push cmp xor out cmp dec cmp add rex.RB mov jns mov adc stos mov xorb sbb scas xor insl xchg rex.XB (bad) sub sub rex.WB je loopne (bad) (bad) jrcxz or (bad) jp fdivs or or add loopne stos int3 mov ss cli (bad) xchg jmpq repnz lods add test add loopne mov mov (bad) or scas sub (bad) in jl cmp xor movabs loopne add adc (bad) sahf and jno adc add js sub loopne xor out jmp movabs fsubp mov push subb and jle (bad) sub sti loopne and (bad) mov not nop jrcxz mov (bad) (bad) stc (bad) fnstsw insb out fnsave jo mov cmpsl pushq rex.WXB sbb in (bad) add vpunpcklbw leaveq mov shll scas sbb cli (bad) and (bad) sbb or decl push jmp (bad) xor cs movabs xchg loopne (bad) lods pushq xchg loopne lret movabs pop sub sub (bad) out (bad) loopne scas xchg (bad) lret rex.WRX gs movslq (bad) xor loope and (bad) sbb cmpsb xchg lahf mov jnp (bad) lar fs rex.W ja shrl push jo enterq loopne out mov (bad) (bad) callq (bad) sub loopne outsl and adc sbb cltd fucompp (bad) cmpl xchg vpavgb jg (bad) loopne sub (bad) cmpsb repnz jae pop lods mov retq sub popfq and nop imul xchg (bad) mov push (bad) movabs or sub xchg and cmp stc es cmpsl (bad) (bad) loopne fsub add xchg sub rex.XB (bad) lret data16 mov hlt scas mov and and retq loopne in rex.WRXB jp (bad) jmpq movslq pop and insb adc xchg retq sub rex.R sub pcmpeqb lods rcr jrcxz (bad) in enterq loopne jbe test (bad) rcl xchg (bad) data16 out push xor mov xchg rex.RX movabs fidivrl fbld or clc pop rex (bad) in mov or mov mov jmpq movabs or movsl xor test xchg mov (bad) scas rex.RB movabs jne loopne jge sbb jae mov pop xor (bad) mov cs popfq rclb push xlat nop retq and add leaveq pushfq or cpuid (bad) movsl lock and xor ja push sbb cld (bad) rex.X (bad) mov jg,pn xor imul jmpq xor xchg xchg mov mov push pop rex.WRXB add pop rex.W int loopne in testb outsb add cmp and mov in rex.WX shrl loopne and icebp ja xor ficompl pop addb test add rex.XB outsb and mov (bad) adc movabs mov fsubp (bad) sbb sub callq pop jnp cmp rex.RX jb push test add mov sbb loopne adc test lods cld cld jle jg jns subl out incl movsb xlat adc loopne mov pop loopne movabs nop rex fstps scas cmp rcrl and jmpq sti movabs or loop adc (bad) xor repz (bad) and adc loopne adc sbb (bad) (bad) mov leaveq rex.WRX test (bad) add mov loopne push lret cmp mov movabs popfq add push mov lahf rex.WRXB jle mov shl cmp mov int3 sar repnz loopne cmpsl push getsec mov or rol jmpq sub xor loopne stos (bad) sahf cmp loopne movslq clc adc loopne xchg insb add out push loopne sbb movsl js (bad) (bad) jns in push movsb xor sub xlat (bad) lods (bad) in sbb mov sub (bad) add mov (bad) or jmpq jbe (bad) cs retq (bad) decl rex.X imul fsts adc cli jmp mov jrcxz jrcxz jg pushq rol pop fs jbe out (bad) pop out (bad) fwait stos (bad) sbb test loopne and fs mov cmpsb mov stc add out (bad) jge out xor jle rex.WX push mov insl (bad) js lock jae xor xchg sbb andb lahf (bad) fdivrl cld fs pushq (bad) imul jrcxz lods sbb push push xchg fucomp (bad) push rex.WX sbb jne xchg rex.WX shlb push gs jmp clc mov out adc lret (bad) or xorl loop xor mov fidivl rex.XB std test cmp mov movabs mov jne test out retq cmp stos mov fyl2x addr32 (bad) push gs fiadd out test movabs mov roll outsb pop and repz jl jrcxz mov (bad) sbb jge fbstp hlt pop loopne ds fstl imul stc pushq pop rcrb mov and push in mov rex.RX pop (bad) icebp movslq mov (bad) xor icebp rex.WXB sbb (bad) jle ss mov (bad) rex.B jne sbbl clc mov mov (bad) je sbb lret sar (bad) xorl fcompl or add sbb repz rex.WX gs movabs add jge and cmpsl rex.R cmp push lret rex.WXB push mov fildll or in mov repnz (bad) (bad) nop xchg cmpsb mov js stos jmpq ds jge repnz mov (bad) mov (bad) (bad) (bad) sub movabs add lret (bad) mov cmovbe icebp bnd xor add loop lret test lock repz insb outsb jg pop xchg mov and fisubr icebp stos (bad) out movslq mov addr32 out adc mov (bad) rorb add gs shrb xlat out retq pop loopnel rex.RXB add fucom xchg xchg mov ss xchg shl icebp movsb repnz loopne je popfq fidivr (bad) adc (bad) loopne movsl mov (bad) cmp rcrb (bad) repnz flds fwait jmpq leaveq adc scas movsl cwtl (bad) neg cmpsb (bad) in mov subl push cltd repz jo (bad) movabs (bad) test (bad) push rex.WR rex.XB out lea (bad) mov mov paddq out loopne out movabs sbb mov in rex.WRX loop movabs std movabs int3 lret (bad) in sub or pop lods fwait mov jbe xlat lods and lcall loopne (bad) test xchg cltd sub mov and fld xchg movsl loopne pop jns mov xlat out pop (bad) mov fnsave push jbe loopne stos (bad) insb cmp mov loopne stos fisttpl clc sbb std (bad) cmpsl cmpsb fiadd loopne pop xchg push add movabs xchg xlat mov mov flds callq stos out insl jnp sbb (bad) xlat orl jg pop adc mov mov std jle cmc subb sbbb adc loopne jg lea (bad) std loopne jmp mov rclb nop loopne enterq mov loopne adc push negl mov movl rex.WRB jbe (bad) rcrb (bad) and clc leaveq mov add (bad) mov fs test movabs adc jo data16 loopne mov cli fwait insl js loopne pop mov add lret xor std adc scas nop fisttpll mov rex.WXB addr32 loopne ds movabs push mov xchg mov cmp cmc (bad) shr movslq (bad) cmc rex.RXB (bad) and out stos pop mov xor movabs pop sbb adc test fwait add (bad) add movabs pop sub sarl loopne sbb loopne mov sub shr or loopne sub add test movsl and jmpq clc xor cmp pop mov add loopne mov insb rex.RXB (bad) (bad) sbb loop cmove (bad) hlt rex.RB jne pop outsl jns jmpq cmp mov fyl2xp1 shl in (bad) iret rorb (bad) (bad) idiv (bad) rex.W push int cmp add mov sub or mov loopne out cli and loopne mov out out or cld xor rex.XB (bad) movabs sahf jbe adc (bad) loopne (bad) movabs mov fbstp jbe pop and xor or xchg cmp retq or shl cmp imul (bad) rex.WB and rex xlat lcall jmp sti outsb xor insl out in and sub or incb rex.XB sbb xor (bad) cmc fisubl jl je test sahf jg scas psrad rex.B rex.WRXB scas rex.RB cld movabs jle mov loopne jno xor (bad) cmp (bad) fisubl cld movsb fmul repz int add pushfq in insl push push push mov out rex.RX (bad) out push jmp idivb (bad) and outsb (bad) movaps (bad) push jle icebp jle lret imul movabs ds sub outsl (bad) xlat and loopne push leaveq test xor adcb shl sbb and add push fidiv (bad) sbbb xchg loopne pushfq or mov pushq int loopne mov loope sub ss outsb (bad) loopne fiadd out lock xor rex.WX jmpq (bad) rex.XB (bad) sub and pop movsl mov (bad) xchg fs push enterq cmpsb push mov ljmp (bad) xchg out sub sbb or imul pop (bad) enterq (bad) mov rex.RB and rex.RX ss xchg sarb and jrcxz (bad) rex.WB gs (bad) or jle adcb stc (bad) (bad) loopne mov nop rex pop loopne (bad) shlb add jb movsl rex.WRB adc mov in gs mov out jnp xor lods rex.R push fnop sahf mov rex.W or cli movabs in sub cmp rex.RXB mov loopne ss mov or fidivl sub loopne test xchg stos cld in sub (bad) sbb int3 int3 out xor xchg rex.WX loopne ja cwtl (bad) mov adc mov repz lret movabs popq enterq jp subl mov xchg rex.X fadd push (bad) mov ds (bad) (bad) fildll std mov rcrb jo loopne je add mov sub sar pop (bad) or enterq push (bad) fsts or movslq cltd mov rclb pop xlat or mov add add (bad) movsl cmpb lea jge int rex.WRB sub lea rex.WR movabs scas sahf lret ja stos (bad) (bad) (bad) push mov rex.XB movsl jg mov jnp jg or in scas ds pushq fsts or enterq mov (bad) retq imul addr32 shrl data16 add test mov loopne (bad) rcrl (bad) jl rex.XB fs and lahf jne pop pop sub mov (bad) lret rex.XB jnp jb jae xchg loopne mov add xor and pop fistl (bad) (bad) movslq or jmpq xorb hlt xchg out loopne or jb mov cli fidivrl jno jmpq loopne (bad) mov (bad) (bad) push in add in cmp icebp pop rex.W mov sub in pushq stc cmpsl jrcxz loopne lea jns cltd jmpq xchg xor lock xor loopne imul (bad) loopne mov sahf (bad) (bad) sbb (bad) (bad) (bad) movsl push je add loopne add sbbl rex.R retq sbb repz pop and push cmp sbb fstpt (bad) pop stos jmp (bad) xchg (bad) cmp xchg adc sub xchg push loopne xchg rorb push cltd jg shl jns (bad) mov sub rex.RXB (bad) sbb scas pop and jmpq jmp (bad) mov std mov push vpunpckhbw (bad) adc scas xlat and loopne (bad) jl mov xchg or loopne stos jp xchg mov sti loopne (bad) gs psllw mul push adc test jrcxz outsb imul cli (bad) loopne incl lods ficom fistp rex movabs xchg sti stos js in sbbl faddl add (bad) retq out shr retq adc mov lret (bad) jg jns cltd and retq imul fwait gs mov (bad) (bad) sub (bad) fldt repnz cmp jne mov fisubl testl xorb pop rex.X sbb pmulhuw jae adc sbb rex.WRX or cmpsl xchg push and mov fildll (bad) mov (bad) and loope (bad) (bad) in or cmp xor outsb cmp jp xchg (bad) sub add sbb jp xchg repnz add insb xlat movabs sti fs outsb cs fidiv fstpt or ds leaveq callq lret movsl cmp sbb cmp add sub gs adc sbb or (bad) (bad) stc sbb fldt loopne mov in mov (bad) mov fnstsw icebp clc xlat sub insl (bad) ja mov xchg rex.W scas fbld and test mov es out lret jb cmp push pop push int cltd jrcxz loopne fnsave xor out mov adc movabs js scas sub (bad) out rex.RX adc loopne sub mov mov ja ficompl (bad) cmp xchg test rcll sub push sub repz add pop insl xchg callq and rex.R cmp jle push mov xorb (bad) decb and jrcxz repnz mov sub (bad) int3 sub loopne out movabs subb mov out and (bad) mov rex.RX rex.R in insl sti or std (bad) adc push loopne jnp pop xchg and in rex.WB out adc jrcxz pop sbb (bad) lahf rex.WRX cmc iret (bad) cmp pop enterq movsb adc (bad) adc fisttpl rex.WRXB lods shr lock (bad) pop mov xor sbb mov ds icebp jbe nop mov sbb jns popfq (bad) out in rex.WR adc movabs addr32 addr32 sbb xchg or in push cmc shrb int3 movabs cmp push clc push cmp out jne add data16 test div (bad) (bad) (bad) ss or adc sub fnop jo mov mov stc in adc xchg xchg rex.WB rex.RB lock lods rex.WRB fldenv js movabs movabs rex.WR rcrb adc sbb mov mov cli sub mov fbld fstpl adcl decl cli (bad) push pop and pop add movsb mov imul (bad) js jbe scas (bad) fstpt or popfq rorl sub jmpq insb xor in stos xchg loopne fs rorl js loopne js jle movsb rex.X test mov rex.WXB sbb loop xchg and cld lods enterq xchg push sub orb mov sbb jns cwtl fsubs rorb outsl jne lahf fcoms pop xchg adc (bad) out loopne addr32 xchg sarl std stos fwait imul loopne rex.RX retq push jmpq enterq loopne mov lret rex.XB or jge rex.R sub rex.WRXB (bad) mull xlat lahf add out jns loopne jrcxz and loopne cwtl sti pushfq xor pop cli outsl andl jmpq retq mov (bad) loopne add sub clc mov sbb mov gs xor xchg loop loopne adc fisubrl push es test insb (bad) lfs rex.RB adc pushfq xor loopne jmp retq adc (bad) and int3 test sub stc movabs sub in xlat cli pushq lret imul push (bad) xchg cmp pop and (bad) callq jno fimul rex.W jrcxz jle test xor fisttp rex.WRX cs jns js rex.B jmp fisttp insb (bad) sbb adc fsubs (bad) xchg fstl es btr loop lahf ja rex.WRX (bad) fisub loopne and cmp adc rex.XB jle stos (bad) mov out (bad) jo or (bad) jae and in cmp test loopne push or cltd add (bad) (bad) out test cmp stos fdivrs (bad) mov std jmp cmpsb ss (bad) loopne mov cld psllw imul rex.WR shl rex.B fadd cmp sub mov add (bad) and mov cmp jle jmpq rex.X std cmp test decl and (bad) int3 rep mov cli (bad) movabs sbb add add imul add cmp jrcxz adc sub mov loopne movabs lods loop (bad) xchg add (bad) cld and jg pushq rex.B rex.WXB frstor and es rex.WRX jp cmp xor divl in add (bad) (bad) movabs jo and xchg lcall and mov jno movsl rex.WRX cmp xchg (bad) jge out movsb mov mov sub (bad) movabs loopne jae pop or mov adcl and (bad) loopne sbb push xchg gs outsl test jle mov (bad) in pop add (bad) jmpq pop (bad) mov stc callq xchg sub adc cmpsl lahf pop loopne xor mov jae xchg xor lods add (bad) fs cmp rolb (bad) stc idivb (bad) (bad) push int cltd scas mov jrcxz (bad) divl (bad) mov adc jo rex.B clc fcmovnb pop retq xchg imul adc (bad) hlt (bad) mov retq mov add pop loopne cmp adc (bad) (bad) and movsl jmpq icebp mov jl xchg and jns and mov rorb xchg (bad) out scas jne sbbb lock sbb (bad) sub xchg (bad) jbe setno sbb loopne or jo xor fs sub and jmpq mov adc pop pushq insb cmp mov or (bad) (bad) cltd cli sub or sub mov stos (bad) xor (bad) loopne xor rex.RXB sub mov xchg add test mov loopne pushq or and xchg cli popfq xor in decl cmc (bad) (bad) (bad) rex.WRB sbb or adc sub jle out retq cmp mov loopne (bad) xchg loopne pop lock fsubp rex.W cmpsl fwait cli jne jns loopne movabs sub rex.WRX cmp (bad) hlt ja adc jno loopne push rex.XB (bad) jle rex.RB (bad) and mov sbb add jrcxz cmc rex.WRB fsub add (bad) sbb (bad) and or (bad) js xor sbb out push xlat loopne sbb mov (bad) nop rclb xchg insb sub rex.WRXB sbb sub cwtl test insb in (bad) retq and imul push imul cmp (bad) out and enterq je jl andb out cmp int3 outsb enterq (bad) jge cmp out adc movsb lret lret movslq fdivl pushfq or pop loopne jns lods shrl rex.WXB (bad) lock es clc sub je (bad) push rex.X mov (bad) mov in (bad) cmpsl or (bad) push push mov leaveq (bad) (bad) hlt lock lock sub imul rex.R rex.WXB adc lahf cld rex.RX in or imul gs mov jle ja xchg or lock xor clc jbe xlat imul out rex.WRXB (bad) rex.WRB icebp and cltd adc push (bad) push in xchg mov rex.XB jle mov mov in (bad) callq adcl xchg movabs jo push or (bad) stos rolb mov sub mov jg cmp out cli mov (bad) movabs subl loopne (bad) sbb rex.WXB xchg cmp mov or pop loopne es rex.RB (bad) clc (bad) add loopne pop adc cltd loopne fucomip (bad) hlt push stos jb or loopne sbb (bad) or xor rex.RXB lahf (bad) fmul ds sbb rex.RX add lahf sbb or push adc jl sub and (bad) (bad) mov lods add (bad) or xchg or and xchg popfq pop rex.WRB (bad) movabs jrcxz (bad) int3 icebp and movabs movsb mov (bad) lock ss jp (bad) (bad) es pop loopne or rex.W fwait (bad) loop adc pop xor in xor xchg stos pop roll rex.RX stc (bad) rex.RB imul scas pop rex.XB rorb in lods in fild loopne,pn jbe (bad) (bad) mov retq cmp xchg test sub (bad) adc xor popq sbb xchg loopne mov int xorl mov adc pushq (bad) mov mov pushq lret jno loopne cmp (bad) mov test adc shlb pop loopne (bad) jp incb rcr rex.RXB sub xor iret mov sbb mov rex.W loopne mov je rex.WB sbb shr ss and (bad) cmpsl cs cmp in mov movsl xchg (bad) or loopne jge pop push andb mov cltd repz loope rex.XB xor loop jmpq cmpsl loopne rex.RX ss pop decb in pop xor fisubl or loopne jge lock jle (bad) or movsb adc movabs mov jo xor popfq rex.W push test test jp loopne xchg (bad) mov movabs cmp xchg cmp xlat retq (bad) pop cmc ljmp or (bad) in rex.WRB (bad) push (bad) jns lret loopne jg or rex.RXB rex.WB rclb sahf mov (bad) push add cmp movsl cmp xchg loopne fsub (bad) (bad) or loopne cltd sbb and out rex.R (bad) movabs leaveq rex.WX rex.B cmc add sbb sub (bad) in cmp sbb cs push movabs repnz int3 movabs mov xor outsl push mov bnd js in add out mov cltd mov sarl (bad) xchg fsub vpcmpgtb scas jge (bad) sbb add incl movslq xor or push add add loope jp cli cwtl pop (bad) movabs mov scas sbb mov loopne mov lea cmpsb mov (bad) mov fwait rex.RX (bad) cli jg jg cmpsl ficompl js shrb or push sbb subb cmp loopne leaveq mov (bad) in jno movabs lods in in es jrcxz or (bad) loope mov and in pop loopne mov loopne (bad) mov mov add (bad) xchg rex.WRB xchg shll (bad) loopne mov (bad) loopne hlt xchg sbbl movabs jmpq adc loopne loop pop add jmpq stc shll movabs (bad) (bad) (bad) sbbl movsb loopne mov sub loopne cmp (bad) movsl sar mov (bad) cwtl stc (bad) jg (bad) xchg je shl cwtl popfq xchg jrcxz jl rex.WXB or outsl (bad) xchg cmc add xor retq mov push mov insl movabs ds fdivs data16 ja pop (bad) std (bad) loopne mov jnp test cmc and mov xor test movabs rex.WRXB xchg callq fs fistp jmpq and pop xor (bad) rex.WXB movabs rex.WRX (bad) out ficompl xchg (bad) jmp int3 cmp idivb add sbb add repz push mov sarl rorb xor (bad) (bad) (bad) mov and loope (bad) in rcl bts xor xor cltd cld xchg sbb jbe cltd cld scas mov jmp repnz leaveq mov cltd (bad) fdivrs sbb xor subb mov (bad) xchg sbbl (bad) xor sub (bad) mov fs cs xchg and (bad) sar (bad) push loopne sahf mov fwait jl push xlat addr32 cmp xchg add sbb sub push loope loopne push jno pmaxsw loopne xor hlt (bad) cmp mov rex.WB adcb rex.X test sub lea mov shrb rex.WX gs cmpsl mov lret (bad) loopne mov jne imul out (bad) cmpsl (bad) rcl xor (bad) adc out mov loopne subl in cmp mov jb and movsl icebp push jbe (bad) and repz mov mov adc setae movabs add (bad) decb cli cmpsb add insl sub pop mov pop add rex.WRB shl pop cli cld in sahf adc (bad) stos jrcxz insl outsb insb retq sbb jnp (bad) (bad) and and push push xchg int3 loopne jne rex.WR rex.WRB jg loopne sbb rex.RXB (bad) sub sub movabs retq clc clc ja jp mov rclb repz sub xchg sub xchg xor movsl rex.WRB gs sbb pop sti shll sub fwait xchg fstpt mov xchg fcmovu in lahf rex.WRXB cmp and bnd jmpq or loopne adc jns enterq (bad) cmp pop loopne pop pop jge (bad) roll (bad) lret hlt adc test lea loopne in sahf mov xor mov (bad) push (bad) mov out rex.B jle fimul rex.X rex.RB mov movsb xlat test xchg pop push rex.WR rex.X xchg push (bad) es rex.RXB and out fstl movsl pop push in (bad) movsb (bad) adc stc pop loopne pop (bad) mov rex.WRX push (bad) in neg in shll movabs sub popfq loopne rex loope movabs adc outsb xor adc in cmp test movslq cmp loop (bad) movabs stc leaveq (bad) outsb mov jne (bad) callq loop mov movabs loop popfq test lock stos jo jrcxz xor loopne in adc push add cwtl mov imulb (bad) loopne mov (bad) jae xor loopne sub cmp mov add rex pop ror jmpq in lret push loop sub xlat or rex.RX fwait (bad) mov scas (bad) movntq out icebp cmp mov sub mov retq sub movabs (bad) pop jmp xor pushq or jnp loopne jl sub iret mov adc mov in icebp push add push pop in jle rol outsl rex adc xchg mov cltd (bad) sbb pop push pop iret (bad) xchg lret push adc fldenv ja std gs adc jnp (bad) add mov or cmp ss mov (bad) push push mov mov (bad) mov cmp ss frstor sbb (bad) mov in mov sbb mov (bad) shr adc cltd pop sti pop jmpq fildll mov rex.WR xchg loopne jg (bad) movslq mov iret rex.WX gs (bad) or or test fstpl adc jge cmp loopne hlt movslq notb rex.RXB repz (bad) int rex.R rolb in xlat add (bad) sbb rex loopne mov mov sbb xchg loopne mov push cmpsl adc push rex.WR adc xor test (bad) mov or (bad) adc and js (bad) loopne pop jg imul (bad) jnp rex.WRXB jle jo mov (bad) mov fsubr xchg lods in jmp mov (bad) sbb pop mov incb adcb (bad) jmpq (bad) jo mov shl sbb notb ja icebp add test pop or mov rcll out sbb (bad) icebp loopne movabs loope loopne (bad) sbb lods adcb loopne movabs cmp fwait js xchg loop mov add xlat in enterq jmp movabs jge rex.WXB test clc (bad) xlat sbb xchg xor rex.X rex.XB decl fs or (bad) loope xchg xor push loopne in cmp add rex.WRX adc cmp cmp or out push loopne (bad) mov add clc nop xor push jo js repz mov movsl loopne fmull cli pushfq sub sti in mov rex.XB movsl pop out or loopne rex.RXB rex adc fnsave loopne and (bad) cld (bad) in add movsb (bad) mov out es xor or cmp mov cs loopne pushq and fistpl mov jno,pt cs andb fwait xchg lods xor mov (bad) pop and xlat icebp js outsb pop mov (bad) pop or (bad) mov sbb and stos (bad) mov cltd (bad) in (bad) pushfq clc retq sarl push hlt (bad) (bad) pop cmp out ss rex.WXB cmp callq push cmp jl icebp (bad) xor sahf lcall addr32 pushq cwtl in rex.WB loopne pop mov jns out pushfq jno gs movabs sbb subl or cmpsl sahf cmp in push sbb (bad) pop jg adc cmp mov adc (bad) in or lcall loopne fistpll js loopne cmp sub rex.X sbb jmpq lods sub rex.WRB sbb addr32 mov not jb (bad) xor loopne fwait pop (bad) jrcxz je jmpq loopne mov sti sub pop loopne rol jmpq rclb addr32 rex.W cld test sub out idivb sar imul jmp faddl cltd pushq push cmp cmc cmp addr32 jns test out mov xor outsb or (bad) rex.WR rex.RXB (bad) mov outsl xchg fsubs repnz rex.RXB shrl or mov adc cli insl rex.WRX rex.R clc rex.WRB (bad) (bad) loope loope mov sbb jbe (bad) and xchg cmpsb fcoml (bad) movabs lods (bad) mov mov push fwait rex.WRX pushq rex.XB sbb sbb sbb fistl mov clc adc jrcxz add es rex.WR xchg pop jg sahf fstpt and adc pop cltd mov testb lock (bad) (bad) movsb je sbb mov adc mov adc or (bad) adc movsb pushq fmuls rcll xlat cmovge jge stos out adc xchg in or (bad) push adc (bad) imul mov icebp insb pop add pop (bad) shlb sarb or (bad) rex.WRXB (bad) (bad) (bad) xor jns add xor (bad) xor jl jmpq xor sub inc adc pushq xchg shlb push jnp addr32 adc xchg sub rcll adc punpcklbw pushfq add (bad) (bad) mov (bad) or cs movsb fs insb (bad) rorb jrcxz jns xor mov in insb mov ror jp mov push out stc lea adc jb push addr32 scas jg jns fwait mov (bad) pushq push notb lret in rex.B mov outsb lock cwtl movabs int3 stc sbb mov fdivs mov mov nop cmp cmpb or loopne rex.R (bad) loopne push enterq repz adcb xchg mov or mov scas (bad) cmpsb and and (bad) xor hlt insl (bad) fisttp callq fmulp jbe add cwtl rcrl std mov or rex.XB add loopne fstps pop pop fistpll pushfq pop ds or sub pop jo jg xchg sarl xor lods cwtl mull stos loopne (bad) and mov pushq (bad) mov pushq jb and jns fs loopne sbb mov jmpq xlat mov (bad) (bad) and repnz (bad) (bad) repnz sbb (bad) notl fcmove rolq sbb xchg pop cmp cmpsb or lock pop (bad) fisub sbb (bad) sti jge loop movabs mov fmuls jmp sbb ss je pop rex.WXB lods iret xor mov add (bad) roll cwtl fs fcmovnb (bad) mov test cmp push in sbb (bad) cmp mov rex.B in rex.X rex.WB jno xor fwait in movabs adc repnz jno fs retq (bad) sub jrcxz int3 lods or test sbb add cli enterq in jb in jmpq (bad) in dec xor addr32 adc cmpsl cmp fcoml out or rex.R rex.WXB lock pop rex.X pop cmp rorb (bad) enterq rex.RB cmp push pop sbb rex.WRX rex.WRB loop (bad) sbb cs jno sahf adc rex.RB movsl sbb (bad) (bad) es subl (bad) icebp rex.WRXB cltd xchg cli in mov in add pop mov and (bad) andb adc rex.WR loopne cmove (bad) callq jmpq sbb cwtl add loopne add loop outsb add push xor nop cmp cltd clc je and fidivr rol sbb sub adc mov cmc jbe shrb jmpq shrb lea or loopne cmp test loop scas ss decl (bad) and jnp xchg mov sbb xor jmpq out fnsave mov and lcall (bad) jmpq incl test (bad) roll mov (bad) (bad) movabs mov addl jae sbb mov repnz xor ficompl (bad) int3 movabs sub mov fild std (bad) leaveq stos (bad) (bad) adc ds add subb (bad) cmp mov gs icebp mov and es and add frstor loopne cs cmp test add rex.WRXB xor hlt and negl clc sub pop sahf xlat fs rex cmp pushq movabs sbb sub xchg (bad) mov or mov rex.WR data16 pop cwtl (bad) (bad) clc outsb mov xor in push and push loopne jg hlt addr32 repnz (bad) cmpsb (bad) mov outsl fistpll loopne push retq rex.B rex.WRX add loop (bad) mov loopne movabs mov mov (bad) out and repz icebp rex.WRXB lret stos xchg rex xchg callq adc js xchg stc loopne jp pop out cmp rex.WX cltd repz (bad) retq pop loopne jge imul push data16 hlt cmp clts loopne mov or loopne jo mov mov repnz stos or clc loopne (bad) adcb pushq cmp cmp out mov sub clc xchg rex.WRX gs cmp imul loopne cltd jg lahf loop rex.WR pushfq movsb or push pushq (bad) cmc add rolb and and (bad) stc cmpsb rex.WRB jno,pn and js mov push movabs mov and rex.WX icebp gs and out rex.RXB sub fisubl jl (bad) or loopne (bad) add push push adc loopne jp xlat (bad) lret xor sub and loopne lods fidiv retq loopne push lock xchg not loopne mov and jo (bad) loopne sub sub jmpq xchg (bad) imul (bad) callq (bad) mov lock jno (bad) jno nop mov (bad) jl and sub movabs mov sub rex.RX imul pop lret rorl (bad) sbb rex.R lods out xor pop rex.XB add lahf (bad) nop add jno pop loopne lret rex.X pushfq movsl imul xchg clc mov (bad) xor pop rex.WRX mov jae cltd movabs cmp adc jns loop std mov mov loopne test stos cmp imul and loopne (bad) cld movabs pop (bad) (bad) add xor pushq jo pushq rex.W and sbb out adc mov loopne xlat insl in outsb add sti leaveq jne loopne rex.RXB (bad) jbe push cmp imul jmpq sub sbb push pop cmp (bad) loopne lahf (bad) (bad) xor and add (bad) out fstpt (bad) fsubrs (bad) out sbb rex.R out or lods or mov retq ljmp push jne rex.W in (bad) and hlt pushq loopne test cwtl out jmpq adc lahf pop ffree sub ds (bad) leaveq push loopne ficom rex js (bad) test movabs std push add (bad) mov lods stc je sti jns shll (bad) add jmpq callq fs adc sbb push adc in pop adc and stos frstor fmull xchg (bad) mov add retq test movabs pop lea fnstenv rex.WR loopne adc (bad) out loopne rex.WRX and jmpq repnz xor (bad) addb cmp and mov sbb pop and fnstcw sub in mov pop psubsb xchg rex lock sbb insl (bad) rex.RX adc xchg xor mov insl flds rex.RX push (bad) decb push adc pop (bad) pop lcall cs push xor sbb addr32 pop mov adc jns xchg test xchg sub imul or shr (bad) rex.WRX jp mov rex outsb in movl mov clc pushq sub gs outsl subl std pushq (bad) fcoml cmpsb or push and icebp jb jbe xlat imul xor xor sbb pop adc and jmpq (bad) rex.WX retq (bad) (bad) (bad) std scas jg sbb mov cmp (bad) or (bad) adc rex.X or xor addb mov mov rex.B (bad) loopne in sbb (bad) lods jmpq jp cmp andl (bad) mov divb sbb in adc je and and pushq pushq out add movabs mov sub stc in xlat popfq jnp push push sbb or test loopne or outsl out (bad) and movslq xor repnz xchg fcmovnu (bad) lods hlt xchg sbb test (bad) jb sub sub icebp movabs cli loopne mov push pop in shl rex.WRXB sbb mov out (bad) cmp mov and sahf xor xlat int (bad) rex.WRX iret cs (bad) pop (bad) fucom outsl movslq (bad) repnz je push pushq movsl rex.WRXB or movsb adc adc xchg (bad) jns xadd or jno xchg xlat in xor rex.WRB (bad) (bad) add pushq rex.XB jmpq mov rex.W mov in or or rex.X outsl cmp (bad) gs loopne out mov in sbb jbe scas add mov rex.W (bad) and cmp or cwtl rex.WRXB sti rex.RXB or mov loopne (bad) jno inc clc (bad) jmpq je or mov movsl in jno iret out scas retq cmp rex.WRX push cmp xor movsb movabs sbb lret nop (bad) push mov (bad) decb mov callq mov and nop jmp loopne pushq rex.R mov sbb jae loope scas push lret (bad) loopne rolb fwait (bad) loopne out repnz mov fdivrp movabs jmp xchg (bad) mov xor sub sarb jbe data16 xor push xor add imul pop and jae sub stc cld mov (bad) movslq rol xchg test (bad) or xor (bad) mov push or pushfq mov or xchg scas sar (bad) stos (bad) out lods sub xchg jns jle pop jnp movslq jrcxz or lret cmp insl in jae push mov and data16 (bad) fs fisttpl cltd rex.WX xlat bnd rex sbb movabs sbb stos (bad) movslq or (bad) (bad) jg or xor clc sbb cmp retq (bad) sbb cs cmp sahf jmp fmul out sub jrcxz and repz retq mov pop rex.RB (bad) repz mov imul sbb (bad) sti stc sbb ss jle jno mov out (bad) mov mov adc pop push or callq mov (bad) pushq int3 xchg loopne enterq pop in rex.W insb cld rex.WX jl mov sbb rex.R pushq jmpq jmp cwtl cmp icebp adc (bad) jno sarl test repz or inc rex.WRXB fisubr jrcxz (bad) retq scas xor cmp mov (bad) jbe or xor xchg out (bad) xor sub jle xor shl rex.WRB movslq sbb (bad) int3 insl push xor push adc rorb mov pop add mov psraw xor (bad) xchg (bad) pop xchg xor pop fs insb cmpsl or mov pop repnz pop add andl sbb (bad) and sbb mov (bad) sub imul or cmc (bad) jo and jrcxz push (bad) and retq rcrl sahf shlb rex.WX repnz icebp mov sbb xor mov movsl out jne in (bad) (bad) add push pop (bad) fistpll fsubrp mov mov mov incb insb mov jg rex.WX rorb jns movsb in es cmpsl ficom shrb lods (bad) vpsubw sbb xchg cmp sbb scas (bad) xor jbe sbb rex.B ficomp fcomip data16 lret movslq cmpsl pop addr32 sbb xor bnd fsubs (bad) icebp movslq js (bad) lods rex.WXB in inc and pop xchg (bad) add repnz and ucomiss out sub (bad) jb outsb xchg or icebp insl clc mov and or enterq sbb scas cmp jmpq (bad) stos or push add jrcxz subl insl addr32 sub (bad) scas jle jle xchg and sub leaveq mov push and jp movslq or push jrcxz rex.WRXB jnp sarb xor jmpq xchg test cmp (bad) mov xchg stc add (bad) (bad) pushfq in shrb push out js cmp jrcxz adc divl (bad) ljmp loope rorb xchg retq ja add and fisub clc shrb jl nop fadds or movsl shlb repz (bad) jg mov mov gs mov sbb jrcxz push pushq div movabs rex.XB pop xor add movabs sarq sbb sub (bad) add pushfq loopne lret (bad) callq rclb jrcxz (bad) test clc loopne pop cmp sub ja sub rcrb xchg mov je,pn (bad) pushq minps cmp lret cld jns retq sub xor lods es loopne rorl and rex.WRX or mov sbb (bad) xchg pop (bad) fsub fimull cmp loopne lret lock in jbe in push (bad) mov jae and loopne or xchg fwait xor in loopne data16 mov popfq (bad) in mov (bad) mov adc out movslq repnz mov addr32 lcall rcpps jmp pushq mov mov movabs xor movabs pushq fs jle js fisttpll mov loopne (bad) jo and push imul rex.RX xor adc or xchg cmc jmp jns sqrtps iret ja jrcxz mov fs xor (bad) idivb cld cltd repnz mov enterq fstps imul and rex.B loopne push (bad) pop in xor loopne xlat enterq adc loopne test jae jno jo in shll cli add adc leaveq xor decl sbb loop jne (bad) loopne rex.WB or loopne fwait mov mov mov retq pop jb movsb push pop cli add loopne push jo mov mov (bad) (bad) lea icebp fdiv pop mov rex.R sahf adc cmp sti leaveq mov enterq sbb retq xchg mov or sub (bad) incl push rex.WB fwait test (bad) (bad) or rex repnz (bad) jne xor pushq out rclb loopne sbb add fiadd (bad) jmpq shll mov pop loopne cmp xchg adc rex.WR xor jno pushfq mov movsb (bad) (bad) in fs rex.RB sub (bad) scas js (bad) repnz mov and (bad) and stos loopne adcl fucomp retq (bad) (bad) (bad) jbe jrcxz cmp (bad) rcrb movabs or and loopne mov cmc fcmovu mov xchg rex.WB mov pop xor ds jnp movabs pop loopne jae rex rex.WB (bad) (bad) push rcll mov lret je push mov xchg pop (bad) xor and pushfq jrcxz clc loopne cmc rex.W addr32 (bad) (bad) in jbe xchg gs gs pop push add orl xchg outsl ror cmp loopne jb cli and cld out or (bad) outsl (bad) jne repnz movslq and rex.R test mul insb mov mov loopne cwtl cmp (bad) sti (bad) loopne jp mov loopne jb pop (bad) jrcxz (bad) loopne cs lods pop ficompl in mov add and rex.XB jmp repnz sbb sub cwtl js int3 rex.WRXB imul (bad) (bad) rex.R xchg imul jae pop jne rex.WRB leaveq and (bad) movsl out loopne mov adc push fcomp repnz movabs hlt jns and sub pop adc sub imul sbb push add push movsl (bad) (bad) loopne jno imul jnp add and push cs cmp pushq sbb leaveq xchg rex.RXB xor and fildl or or (bad) add jrcxz cltd push add repnz shr sti loopne fstpl mov out repnz xchg test xchg loope outsb mov loopne push test sub pop sbb push (bad) cmp pop rex.WXB fs sbb cmp push (bad) hlt rex.R cmp cmpl insb leaveq movsb pop fsts and mov orl test pop sub rex loopne cmp mov rex.WRXB xchg rex.XB sub add mov (bad) push sub sub pop movsl mov loopne test clc (bad) or rex.WXB sarb cld shr mov xchg (bad) fisub movabs cmp cs shrl orl xchg scas loopne imul mov rex ds jno cltd js fldl rex.W movslq (bad) cli xlat shr rex.XB nop or push xchg fdivr mov adc or (bad) mov xchg sub in test imul mov loopne push cmp mov addl out cltd imul or rex.B jno fs std jle outsb fsubr je cmpsl mov sbb pushq or xor test rcr (bad) (bad) or rex.WXB enterq test pop movsl adc loopne rex.W xchg mov imul (bad) (bad) adc push add xchg lock (bad) add sbbl add pop rex.WX mov clc scas ss outsb rex.RB outsl rex stos or jp push movabs (bad) hlt rex.X sub sbb loopne adc sbb pop idivl or (bad) or (bad) in rex.WRXB loopne (bad) ror (bad) fsubrl sbb lods (bad) adcl sub (bad) loopne push xchg xor movabs rex.WRB vpsllw add (bad) mov loopne rorb std adc out rex.WRB sub loopne outsl je pop xchg (bad) test rex.WRXB mov (bad) or in jg rorb sbb add jge rex.R repz push repnz or pop movabs (bad) sbb pop mov mov cli lret push jl ficoml in cld jmpq xor cmp js callq sub out (bad) movabs (bad) rex.WB cmpsl (bad) hlt pop xchg jrcxz and xchg data16 movabs rex cmpsl (bad) cmovns jmpq mov pop xor add mov cmp loopne cmp rolb movsb push mov and xchg data16 push ss mov test mov subb (bad) jrcxz add (bad) (bad) and push and sbb movsl (bad) outsl (bad) sbb jb (bad) icebp rex.WRX xchg (bad) rex.WX adc sahf fnstsw adc cmpsb sbb movabs push (bad) movslq mov mov faddl jp xchg pushq fs sbb in (bad) mov lods mov xor lahf iret (bad) (bad) xlat and xor adc rex.WRXB outsl movabs movslq sub cmp xlat sbb mov add vmovlpd in sti rex.XB mov movabs or stc sub sbb mov data16 (bad) decl or cltd rex.WRX pop int (bad) xor stc repz rex.WR fs cmp (bad) pushq xorl (bad) mov (bad) sub mov (bad) jge push jo sbb xchg jle mov rex.X fcmovne sahf rex.RXB sub jns sub roll enterq imul jns mov (bad) cmpsb sbb (bad) jmp insl imul movsb xlat xchg mov add fnstenv xchg mov (bad) lock sub sti adc jge mov or (bad) xchg cmpl js vmovntdq loopne sub notb loopne rex.X mov jne mov add lea rex.W loopne test (bad) mov sub fistl fs xor lahf jmpq mov scas (bad) xchg xor rex test decl in jns iret lahf stos sub lods shlb pushq roll lahf (bad) icebp mov jb rex es fs pop mov popfq (bad) or hlt loop clc mov and sbb add rex.WXB rex.XB mov stos (bad) incl pop fldenv xchg (bad) mov test (bad) ficom jb (bad) xchg imul jge xor in sbb loope lods insb test sub in rex.WXB cmp mov fistp or mov nop and ja fimull (bad) adcb rex.WRX mov (bad) loopne fistl iret ds sti loopne sub and rex.WRB repnz fisttpl sub cmpsl xchg (bad) rex.XB icebp rex.R mov jrcxz lret in movabs xchg mov xor push add xchg jae movabs mov fisttp (bad) cmc test add cld js loopne movabs rex.XB (bad) mov push (bad) xchg loopne add pop cmp jg in (bad) insl in loopne orl (bad) xchg test callq rex.B rex.WX loopne mov test in jrcxz push mov (bad) (bad) xchg clc cltd add (bad) loopne push (bad) adc pushq mov pushq loopne imul rex.WB sbb movabs xchg loopne (bad) lock or jns pop cmp pop pop test scas jno add addl pushfq rex.B ds cmp rex.WRB mov pop xlat (bad) shll (bad) add icebp ror xchg jo xchg mul sub sbb rex.RB cmp fimul xchg (bad) or add add jp movabs jl cli rex.WRB rorl (bad) mov (bad) outsl popfq rex.RX clc fcomps cmp sub fwait xchg mov or mov jae add adc rcrb movsb (bad) cmp add xor adc mov fwait adc rex.RB cli int3 (bad) test mov nop rex.WRXB adc negl ffree loopne int or (bad) xlat icebp imul mov movabs loop xorb nop in ficompl loopne xchg cwtl pop test (bad) xchg loop pop or jo xor (bad) loop (bad) movabs outsl ss add adc push (bad) rex.RXB mov xlat lods popfq add pop (bad) xor (bad) xchg movabs sbb xchg mov sbb rclb (bad) add lret cli (bad) and cmp cwtl jnp insl sbb jrcxz add rex.RB mov addr32 sbb jmpq mov mov pop (bad) ss jne xchg or movb stos xchg sub icebp cmpb repz or in (bad) (bad) and push adc fbld sbb xchg rex.W retq movabs pop mov outsb and adc pop jns,pt cltd (bad) pop mov out sbb xchg ficom lahf movsb (bad) sbb or jle in jmp mov out (bad) mov lods fcmovb (bad) icebp in jle lret shll in sub cmp nop pushfq ds punpcklbw rex.XB adc fst movsb rex.WRX and push popfq loopne add mov mov (bad) sbb adc (bad) (bad) sbb cmp jrcxz (bad) rex.WRX enterq (bad) and outsb lret popfq fnsave stos (bad) iret retq cltd (bad) pop mov sbb lahf sbb rex.WRX rex.WRXB outsl and adc cmp shlb data16 rex.XB fdivrl (bad) (bad) adc pop lock repz repnz mov fmulp (bad) mov in (bad) and sbb (bad) lock rex.RXB adc and pushq (bad) cmp (bad) popfq loopne cmp mov fwait in movabs mov xor mov ss sbb (bad) pushq (bad) xor scas stos (bad) or andl in rex.WRXB fwait (bad) or xor mov and cli pop mov (bad) jo sbb sbb ds mov jmpq roll in cmp fcompl mov jrcxz insl lods (bad) adc mov loope rorb adc xlat (bad) (bad) divb in pop (bad) cmpsl cmc addr32 and js clc fistl popfq (bad) stos movslq (bad) pop mov mov scas (bad) cmp cmp jae out (bad) sti rex.W rex.WX cmpsl imul callq pushq (bad) xlat mov rex.RXB rex.RXB rex.RX (bad) xor jg (bad) (bad) mov out cld pop pop cmp es clc (bad) pop rcrl stc or callq (bad) or xchg xor callq mov mov rex.WB lock and adcl xchg and in adc pop lret faddl in jne push (bad) and (bad) push sub mov mov xchg and int scas js rorl retq and push iret pop rex.X clc and push rcll cmpsl popfq or push (bad) fucom loope jge rex.RB (bad) int fmul xor rex.WB (bad) loopne mov push (bad) in adc push lods (bad) jmpq vzeroupper cltd (bad) xor nop loopne mov pop rcl leaveq loopne and lock mov jg mov mov orb in retq cltd mull adc mov (bad) loopne (bad) lods stos xor popfq sub (bad) mov pop js sarl fwait sti rex jrcxz cwtl mov (bad) xchg rex.WR test shr adc jmpq sbb (bad) lock rex.XB lretw rex.RXB (bad) xchg ljmp adc xchg and loopne imul mov (bad) outsl (bad) sub gs movsb push scas mov jo shrb (bad) sti cmpsb xchg retq add mov lea in addr32 xchg retq callq (bad) lret lret cli (bad) sub out cwtl cld leaveq pushq sbb sub xchg push mov jmpq (bad) fdivr pop adc in shrl (bad) or callq (bad) callq retq (bad) in icebp imul pop retq pushq (bad) (bad) or mov out (bad) es rex.B (bad) push mov js fstps int3 sbb sub rex.RB (bad) or cmp jmpq jl loopne xor mov movslq or (bad) mulb in add jbe jo push hlt adc (bad) pop imul lret cmpsl jp out lods cmp cmpsl mov add jnp sbb xchg nop rex.WRX mov shlb fwait sub fwait (bad) icebp in fs dec jge jae mov movabs push (bad) ss rex.R jrcxz mov sbb rex.XB gs scas jrcxz (bad) jrcxz fs cmp int3 loopne sbb xchg add (bad) flds xor adc cltd or in sub xor rorb int incb rex.WRB (bad) je rex.WX (bad) (bad) in imul sbb mov or rex.WRXB (bad) loopne lods (bad) pushw or movsl (bad) sub sub xlat hlt (bad) rex.WXB ljmp fidivr (bad) rcrl orl loopne add sub rex.RXB (bad) loop lods mov (bad) in int or imul cmp (bad) sbb jrcxz test loop mov push xlat jrcxz imulb (bad) (bad) pushfq and icebp loopne rex.WB shl repz frstor or in jbe pop (bad) callq jmpq movabs add int push (bad) cmp pop lret in (bad) add test and (bad) mov rex.WRXB and jge in (bad) cmc mov js push rcl sub loopne sub movabs andb jnp rex.RB sub xor jmpq movslq add and (bad) jg (bad) (bad) out sbb (bad) fldcw sbb stos loopne rex.RB rex.X not loopne cli rex.RX lea and push js xchg mov cmp xchg andl (bad) test (bad) or fwait (bad) loopne mov sub in sbb mov and push pop (bad) and jrcxz in push (bad) cwtl pushq cmc jmpq out rolb sbb xchg fst lahf shl (bad) and rorl (bad) and add sbb enterq lods test push paddw cmp mov rex.RXB ds loop and loopne sub pop jmpq cld sahf out sar rex.X xor mov (bad) test rex.WXB scas xchg retq rex nop shl (bad) outsb mov or loopne or mul jns je (bad) or jmpq movabs or (bad) icebp (bad) add (bad) (bad) ja xchg pop mov sahf (bad) cmp or add retq mov xchg fs cli stos loopne movsl out cmp setl cmp jno xchg cmpsl adc pushq sbb jmpq (bad) mov jb or adc stos loopne or jmp loopne xchg clc sub loopne lea loop out std and mov mov shrl ror mov in cmp pop sbb fsubrs jmp pushq sbb std xchg (bad) jnp fildl mov add std movabs xor jp mov lret (bad) loopne (bad) or xchg push add (bad) and cltd cmp loopne jle ds outsl rorb pop decl or fldenv stc mov loope mov jae mov jmpq rex.WRX rex.WRB pushq (bad) pop in cmp sbb mov movslq mov loopne rcrb mov (bad) xor (bad) roll xchg cli loopne rex.RB loop or loopne adcl mov mov pushfq movabs loopne jno mov movslq test xchg in loopne add movsl push rcr loopne or gs lret shrb or (bad) js mov pushfq xchg addr32 loopne rex.R loope stos jl add loopne jae mov loopne mov xchg rex.XB fwait xor je icebp adc add add stos (bad) sub loopne int mov loopne add rex.RB rex.B push cmp jg mov mov sbb mov lret mov es rclw xor mulps loop cwtl xor jno jnp outsb (bad) jno and mov rex sbb jp clc cwtl mov cmpsb sbb sahf leaveq mov add retq push movslq imul (bad) adc lods or (bad) in sbb imul stos jp (bad) and rex.X jbe movsb (bad) (bad) (bad) xor sti jg rcll rex.RXB mov jle xorl sbb retq pushfq out adc loopne enterq insl (bad) jp loop jno jne xor cs xchg (bad) (bad) jg repz jg mov cli pop push xor (bad) cmp in push push (bad) push pushfq rex.WX rorb (bad) lret mov (bad) repnz and add (bad) rol sbb and ficom jmpq in (bad) adc mov insb rex.XB (bad) jge (bad) and stos mov jrcxz (bad) sub (bad) stc xchg sbb adc add fstpl stos add in mov mov add hlt leaveq adc mov movabs adc xchg xchg cmp (bad) (bad) jl (bad) cmpsb pushq ja (bad) sbb (bad) cmc ss sub sub xor cmp in rex.WX sbb (bad) jg jmpq sub jg cld mov cmp addr32 mov cmp and or push adc sub or ja pop loopne pop movsb repnz mov or cmp rex.W movsl addr32 mov adcl jne popq push (bad) jmpq adc (bad) loopne mov fidivl pushfq cli mov jnp movabs or or sbb or (bad) gs cltd xor xchg data16 add movabs sti mull in (bad) lea sub adc xor pop (bad) xor (bad) loopne (bad) rex.WRXB add jmp push ds lods outsl (bad) or or ss js (bad) pushq in add scas jno icebp lods mov rex.XB cmp pushq or cs fs (bad) add loopne sub (bad) (bad) ss movabs loopne ror sub movabs (bad) and (bad) loopne rex (bad) (bad) (bad) pop sub or push loopne shlb (bad) (bad) (bad) xchg cmp xchg (bad) add rex.WR xor xchg (bad) pushq pop std fadds jl jbe sarb jl rex.X pushq xchg retq (bad) push or rex.W xlat (bad) fcoms adc cld or (bad) sbb sbb rex.WRX or loopne (bad) fs adc (bad) mov and mov pop (bad) jmpq movabs or imul xchg shl loop stos rex.X mov ja pop or pushq jb (bad) in jnp sbb and pop (bad) enterq movabs cmp jg add fisttpl xchg mov sbb stos fisubrl pop orb (bad) fwait imul cmpsb lret or and and loopne leaveq jo xor mov loopne jrcxz jbe loope ja test cs cltd push repnz icebp xchg in test xchg loopne fsubs fneni(8087 and negl lahf loopne (bad) movslq (bad) (bad) cmp (bad) int3 and rex.XB (bad) movabs (bad) movsl out retq (bad) mov xorb jmpq imul or cmp rex.R mov add loopne movabs mov mov stos cld sub (bad) movsl movsb data16 (bad) fild mov scas movabs (bad) jnp (bad) mov test cmp movabs in adc mov shl enterq stos movsl shl jmpq jo (bad) jne loopne clc or or cs mov mov lahf fcoml movabs rcll push cmp movsb loopne ficoml pop xor imul andl retq data16 sti or in fmull push cmpsl or push loopne rex.W pop adc loopne pop (bad) movslq (bad) enterq and pop mov fwait cmp lcall loope andb mov adc jne out (bad) fwait decl jmp roll xor fadd or rex.X js and loopne jns (bad) or (bad) stc outsb imul mov adc andl int sbb sarb insl out lahf (bad) insl mov cmp sbb pop (bad) xchg sub sub (bad) push xchg rex.WX mov rex push loopne mov and rex.XB mov movsb loopne rex.W cmp test mov sub sarb ds in cld lods (bad) lcall or callq jmpq sub (bad) xor sbb mov data16 insl insb loopne adc adc (bad) movabs (bad) loop loopne cmp retq and or pop xchg rcl (bad) adc or icebp sbb (bad) icebp xchg mov mov add ss pop mov xchg adc movabs rex.B loopne xchg in sar rex.WR test sbb or mov leaveq ss movsb sub cmp (bad) sbb mov lods in (bad) (bad) stos (bad) or sahf or pop (bad) lods lods adcl imul and fidivrl mov outsb mov (bad) mov rex.X xchg out cmp out (bad) loopne idivl loopne data16 xchg rex.X (bad) in mov or loopne mov cwtl imul int3 icebp jle retq test rex.WRB popq nop fcmovnb loopne lock data16 fcoml add (bad) sbb add mov imul rex.WRXB (bad) in pop (bad) push shll fisubl add enterq fwait (bad) sub subl in xchg cmp callq movslq pushq mov rex.WRB loopne test fs stc pushfq rex.WRXB std mov test (bad) subl or sbb test in loopne adc adc cmpsb cmp rex.WXB (bad) rcrb sbb (bad) sarl (bad) xchg jno imul in fiaddl sti jbe pop rex.WR loopne mov loopne out sbb (bad) ss rex.WX cli adc (bad) sub or sub xor clc mov rex.WRB lret cmpsb loopnel rex.RXB fucomi nop mov fisttpll xlat loopne negb fwait (bad) fidiv pop push in push sub loopne pop jp xchg (bad) stos add and fsts movsb (bad) (bad) jb outsl cmpsl loopne mov xchg jge sub rex.WRXB stos add idivb loop add (bad) push xor mov fwait and push jns fimull (bad) callq cmp fwait lahf xorl loop mov test lret (bad) fucomi jmpq rex.W hlt movabs (bad) sub adc loopne mov (bad) (bad) xor adc loop loopne and mov (bad) add fadds roll jle jae loopne add add push sar sub movabs xchg rex.R (bad) jrcxz repnz subb xor pushq loopne in or sbb movslq imull (bad) mov fcmovne adc or add rex.WB ficompl sbb jns sub rex.WX rex sbb add (bad) push loopne sti (bad) adc icebp (bad) scas loopne (bad) push (bad) xchg gs xchg add push add pop (bad) (bad) mov icebp and out rex.WX xor rex.RX retq (bad) mov sbb lods xchg cltd fwait or xor adc or cld fmull push loopne (bad) lock (bad) movabs adc pop sub fcoml mov rex.WXB cld fdiv (bad) cmp data16 sahf xchg lods lret pop pop fisub mov rol (bad) loopne adcl callq jo outsb mov cld (bad) mov cmp loopne (bad) sbb pop in sbb es xor jno loopne sbb adc fcmove cmp mov fwait lea (bad) and (bad) nop add insb (bad) int3 rex.RB test loopne and adc add (bad) push cld cli and retq mov je (bad) (bad) loop push rcr (bad) (bad) cld and out mov jmpq mov out callq (bad) mov mov cmp adc pop mov mov imul loopne mov rex.WX mov jge cmp jrcxz cld or test rex.XB out rex.B fcoml push cmp rex.RB rex.R mov test fyl2xp1 rex.W (bad) loopne out sti lock sbb in jg adc jo push (bad) jns jle (bad) xchg jmpq cmpsb add adc (bad) mov in (bad) roll xchg icebp lock push jle mov shr jrcxz outsb (bad) lock sbb stc rex.WX (bad) addr32 mov nop in and movsb mov ss jne (bad) loop mov (bad) mov repnz adc icebp sub (bad) xor enterq (bad) cmpsl cmp or and scas stos jle xor not retq mov xchg callq jns mov stc rex.WRX push and pop sbb push fcoms cltd add push (bad) lock mov sbb mov sar icebp add fsubrs add sbb mov mov jrcxz scas add shrb (bad) or (bad) (bad) movabs lahf enterq sbb retq outsl lods (bad) rex.WXB jbe sbb cmp (bad) add ja in jae (bad) xor and (bad) sbb rex.X movsl fs outsl (bad) jns rex.W fmull mov (bad) lret callq jge loopne xchg data16 pushq out adc cmp lods cmp add (bad) in jnp shrl adc sub rex.XB push jp (bad) cld rex.RB xlat retq (bad) pop loopne pop rex.WRB (bad) mov loopne scas movabs xor mov loopne scas xchg adc sbb hlt decl add roll jnp (bad) xchg rex.RXB out ficom add (bad) (bad) (bad) (bad) rex.WRXB xor or movabs rex or fisttpl outsb mov outsl rex.RX pop loopne adc fs (bad) scas sarb test (bad) mov sub jbe divb mov rcll push subl mov int (bad) cmp movabs mov movsl out pop sbb (bad) jb rex.RB cmp fs xchg sbb push jnp (bad) jle lret fistl (bad) loopne cmp xchg sar add rex.WRXB xchg (bad) (bad) iret mov (bad) ss fdiv or sbb (bad) movabs loopne push testl jbe jne (bad) imul fmul callq jnp cmc shrb fucompp sbbl mov jo repnz push loopne sahf sbb pop es lahf repnz and andb roll (bad) mov hlt movabs test ds sbb gs fdivr cmp or leaveq cld sahf stos icebp sub or xor mov jb (bad) pop and cwtl or loopne jle repz jnp in cli lret ds fsub mov (bad) pop icebp loopne pop mov xchg stos sbb in fwait adc loopne xchg fild in push or rex jo loopne rex.W rex.WRX fs (bad) test adc (bad) movsl add xchg (bad) xchg cmpsb loopne cmp jl incl xchg test jg ficompl lock xor cmpsl (bad) mov rcrl fwait mov xor fsubp movsl or pushq push (bad) or cmpb fisttpl in xchg notb cs jae mov rex.WRB loopne pop outsl mov nop loopne jae fsubs push rol loopne sbb xor test in cmp test jo jl ja mov sbb (bad) movabs add mul mov xor loop loopne add jae sub loopne ds ss movabs stos clc fist fcmovne and sbb pop mov mov rex.WR add cmp loope and outsb repz ds movabs rex.WX hlt roll fiaddl adc mov xorl addr32 or (bad) adc mov insb pushq xchg jg lods test or xchg cmp scas jl loope add stos fisub in movabs xchg (bad) mov xor loopne mov int xchg cmp (bad) xchg movabs mov or callq leaveq jge rex.WRX xchg movsb sahf sub ljmp lahf cmp jne or xchg xchg sbb imull mov jo jg jns mov sub insl lods pop xchg test sahf sbb movabs (bad) (bad) sbb (bad) jns sbb mov imul cmp mov (bad) xchg rcr rex.WR in (bad) and rex.B imul pop push (bad) (bad) ja add (bad) popfq cltd orl rex.WXB mov out rex.WRB rcrl sti adc (bad) and test xor loopne movslq (bad) sub jbe lret loopne fnsaves loopne mul in xchg xor loopne enterq push jrcxz loopne push jge and mull stc sub mov jne rcrl and mov mov cmp sub xchg sahf cld loopne pop add add loopne sti xor (bad) movb clc cmp in rcrb js (bad) jno (bad) (bad) mov cld mov and fldcw loopne rex.XB jle movsl and (bad) xlat pop icebp (bad) adc loopne mov stos sbb add cmp cmpsb sbb fistl insb (bad) loopne sub (bad) stc pop xchg mov or stos mov shr jg shr jrcxz movsl (bad) scas cmp divb rex.WRX sarb push (bad) (bad) xchg xlat xor mov rex.W and add xchg leaveq add rex.WB data16 movslq (bad) loop rex (bad) out mov fsubrs loopne mov jrcxz roll xor fildl mov loopne adc (bad) clc lahf jrcxz mov sbb pop xchg and cs in jg add leaveq cmpsb in push rex.R and rex.RX (bad) cmp add pop jg sbbb or in sbb mov fwait ds loopne add (bad) loopne or cld cltd test mov sbb std adc pop andb loopne xor mov movsb jno jp movabs jne retq rex.W imul pop loopne sbb pop or cli jmpq xchg lock mov jnp cwtl mov loopne mov mov loopne pushq xchg loopne or int3 je (bad) add xchg mov out cmp sub sbb rex.RB rex.R loopne (bad) sub (bad) cmp fisttpl (bad) movabs adc xchg sti xor loopne movabs iret rex.WX imul movslq sub clc or xor rex.R xor jno (bad) fildll out fistpl (bad) sbb and sub rex.RB shl mov loopne (bad) out pop retq sahf loopne in (bad) mov xchg (bad) adcl sub loopne pushq incb loop (bad) sub rex.X rex.XB (bad) subl xor rex.RXB pushq xchg ffree or xchg loopne test shll movslq (bad) jge repz rex.RXB mov lret pop andl iret adc rex.WXB stos or imul sbb mov loopne (bad) add in sti stos jbe lods and in pop jno (bad) add rex.WRB repnz hlt loopne lods push sbb loopne cmc pushq cs out jge mov fneni(8087 mov (bad) cmp lahf jp mov test jno ljmp mov cmp loopne jae mov mov and retq cwtl movabs (bad) lret add mov retq ror rex.WRXB (bad) ktestb (bad) movslq (bad) loopne rex.RXB jb ss or js insl adc loopne stc lret mov popfq push mov cmp pushq mov jge sbb (bad) jbe mov repnz xor lret pop rex mov (bad) xor mov lods pushq callq or loop int3 in out pop leaveq loopne callq (bad) sbb sbb mov (bad) imul movsb rex.WR je (bad) adc insl sbb xor jmpq mov (bad) int3 adc sarl (bad) notl fldt int loopne rcl stos xchg or or (bad) (bad) jne (bad) add loopne mov hlt fisub test jne or (bad) cmp jo (bad) (bad) (bad) cwtl icebp rorl (bad) pushfq gs movabs xchg movd xor cld (bad) mov cmpsl outsb cmpsb loopne jb lret rex.WB mov (bad) (bad) loopne movabs push imul or (bad) jbe mov (bad) push (bad) int cmc push mov stos push and pushq (bad) leaveq sarl and xchg insb and sbbl mov jp cmp mov mov scas jl or adc xchg rex.W mov std loopne lea jl callq lock or push in (bad) sahf rex.RXB inc adc fidiv loopne rex.RX (bad) (bad) (bad) mov (bad) (bad) cld jge (bad) icebp faddl and loop (bad) sub add sub addb (bad) fwait xchg (bad) push loopne push outsb or xchg cwtl leaveq (bad) rex.R insl add lods int3 rorb retq (bad) (bad) sbb rex.WB lret push pop (bad) pop or (bad) adc loopne add jb out (bad) rex.W sub retq (bad) (bad) jmpq enterq and out jge mov movabs leaveq in sahf sbb pop (bad) rex.WXB sub sbb cmp stc imul (bad) stos (bad) pop and add mov push rex.WX xchg scas push (bad) rex.WB fs (bad) hlt mov lods and cmpl repnz (bad) test add mov rex.WXB xchg cmp addb rcl rorb test fs xor pop ss lock in out sti sbb (bad) and (bad) clc xor in sarb lods jns in or retq add xchg andb jmp xchg ja fsub loopne callq pop xchg or (bad) sbb (bad) xlat shr pushq retq jo jge mov (bad) rex.WB adc cmc (bad) lock ud1 xor adc out and xchg push movabs (bad) cmc movsb incl pushq cld int3 (bad) (bad) loopne in cmp (bad) cwtl int3 fisttpll xchg je lods sbb and cli sbb loopne jb jo rex.WXB (bad) imul sub or add mov test pop mov insb jbe rex.WR pop mov shll add sbb loopne shlb push rex.RX fwait cmpsb xchg movl sti stc ss rex.X push (bad) gs loopne cmpsb jo xlat xor ficompl (bad) xchg lahf add loope push cld jrcxz rex.XB outsl out (bad) (bad) pop adc push in mov (bad) xchg xchg loopne and rdmsr adc jp cmpsb push js mov cmp (bad) mov movabs loopne popfq pushq std loopne or lahf jmpq loopne pop (bad) rex.B rex.WRXB jrcxz fcomp repz ss js (bad) jae mov (bad) and rex.RX lret movsb pushfq jns sbb sub fneni(8087 (bad) (bad) and fcoms push mov jg enterq mov push loopne hlt pop cmp jmpq int3 or xchg mov (bad) loope rcll fimull (bad) movabs (bad) pop and jge (bad) roll mov cmp cs mov cmp jle or jns movabs loopne xchg add rex.RX in sub shlb sbb cmp rex.RX sbb cwtl mov rex.WXB adc jno out mov cmpsl loopne scas fist mov pop rex.WR mov or (bad) push jne adc nop int and and in rex.X out mov clc es popfq loopne mov lods int3 loopne mov movabs adc cmp xchg loopne xor rex.WX popfq rex.WRB loopne negl adc lods and out mov sbb stos imul mov test loopne cmp xor jmpq adc (bad) mov (bad) retq cmpsb (bad) (bad) loopne mov sbb sbb (bad) loopne xchg or mov mov cli loopne jbe (bad) ficoml enterq sub xor pushq xor (bad) (bad) movabs (bad) mov loopne mov retq and stc lods std (bad) rex.X addr32 cmp callq pushq xlat fs lahf sub mov loopne (bad) sbb push cmc cwtl (bad) outsl (bad) and xor jmpq jle jno (bad) mov lods (bad) pop pop (bad) subl cmpsb cld fcmove xor loopne adc or (bad) xchg rclb mov mov and jne pop clc in (bad) sbb mov cwtl adc cmc sbb test (bad) repnz (bad) outsb retq andl adc shrb (bad) clc cmp mov data16 outsl (bad) cmp mov callq (bad) out (bad) movabs imul pushfq repz rex.XB retq (bad) push fldcw movabs jmpq fldl stc idivl lods sbbb jge push inc mov (bad) retq mov sbb sbb adc in outsl fbstp cmpb sar gs rex.RX enterq sub shr out hlt (bad) jge (bad) rex.RXB (bad) mov mov (bad) cmp loopne leaveq (bad) (bad) xor xchg lock test lahf fdivrl (bad) sub (bad) stos addl xor (bad) outsb cld add mov sub insb out sbb loopne xchg je jmpq subb shl jo lea sarl (bad) es mov fchs cltd mov adc loop push push pop rex.WXB stc iret in movabs out int3 in test cs (bad) lea enterq loopne xor cwtl pushq or or (bad) sbb loopne jns sbb (bad) outsl sub (bad) fisttp mov sbb and xchg (bad) ja jno loopne xor outsb mov (bad) lods loopne jnp cld out movabs lret jmpq stc loopne rex.WRXB rcll sar cmpl rolb sbb cmpsb xchg in ds jo lahf adc sar jb rex.WRX insb cli (bad) rex.WRB adc pushq loopne push cld cltd cmc add (bad) jmpq (bad) jns (bad) xchg push movsl loop mov sar (bad) pop adc mov sbb adc mov pop loopne insb pop (bad) (bad) movabs or jno (bad) loopne fcoms and adc enterq sarb jmpq loopne jne cs cmp movabs adc loope push leaveq (bad) (bad) mov (bad) outsl loopne pop mov push stos popfq sahf loopne (bad) rex.WR adc and rex.WRX (bad) rex.WRB xchg test movabs (bad) ja adc rolb jge (bad) out sahf sub leaveq rex adc rex.XB retq popfq leaveq lret jbe divb mov scas mov sub push test imul sub lret jg in adc cli rex.RXB ja lock (bad) mov addr32 in xchg test mov es (bad) or callq jmp cmp loopne cmp nop shl loopne subb pushq (bad) loopne rex.X fdivr mov loope sub push cli out fs rex.WX (bad) or imul loopne popfq adcb push mov gs sahf (bad) rex.WR vhsubps repz loopne out xor rex (bad) loopne add leaveq lods xchg jnp (bad) mov ss sbb rol jne mov roll and (bad) lahf ficomp (bad) iret rex and js loopne and mov (bad) cmp rex.WRX push sbbl or (bad) xchg (bad) add adc adc test enterq xor (bad) add add pop stos repnz nop data16 out mov add or jle loopne lret jrcxz xor rex.W mov loopne subb fsubrl sub icebp lret ds jrcxz lods (bad) sbb in fstl mov cld mov movsl rex.WRX in mov mov outsb loopne loop jae test jmpq rcll int pop (bad) (bad) movabs mov movslq es and sub xchg imul or adc dec out stos (bad) (bad) imul mov mov mov hlt rex.WRB rex.R outsb loopne rex.X loopne rcr jbe mov (bad) fs xor jmpq fstl or and test mov or xor (bad) pushfq adc (bad) jg add rex.RB rex.WXB xchg rorl jmpq fildl fidivl (bad) pop mov mov mov rorb or jmpq add sub ds mov lahf sbb mov mov rex imul loopne rex.WXB sbb (bad) in test or rex.WRX in (bad) add jrcxz rex.RXB data16 loopne rex.R enterq and rex.W lret fs clc (bad) (bad) sbb in fwait and and in cmpsb fdivp (bad) xor (bad) loopne scas (bad) rcrl fldlg2 movabs icebp cld cmp add js shrb and movabs popfq (bad) jmpq jle callq add adc movslq (bad) rol push push fmulp je add (bad) rex.WXB pop pushq incl pop stos cli rorl lock loop fldcw idivl imul xchg jo icebp (bad) addl jne es mov mov push mov outsl mov fwait xor imul jrcxz pop scas sub (bad) out loope (bad) pop mov (bad) xor sub xchg mov sbb pop hlt movabs fstp xor push (bad) sub add xor cmpsl mov (bad) sbb mov imul cli xchg (bad) adc stos repnz xchg pop sub sbb xor lahf or xchg jnp (bad) loopne out int3 mov loopne rex ds jbe sub test xor cli add pop scas loopne cmp cs mov xchg ficoml sbb (bad) sbb pushfq push movsb nop loopne mov jge fisttpll (bad) data16 movabs nop adc jp fnop sbb (bad) out outsl xor add jo jrcxz cmp (bad) rorl jbe or (bad) cli nop jo adcb xor (bad) loopne pushq mov lock mov shr test fidiv cmp xor ficompl jl cmp or insl and scas rex.R and int3 gs xchg and rex.B adc push (bad) (bad) push decq retq rcrb outsl jo add and (bad) test in mov push int3 rex.WRXB testl adc jo add pop adc pushq icebp (bad) xor movsb mov (bad) fcomps (bad) int3 mov retq jmpq or in xor sbb (bad) (bad) jns movabs fisttpll sbb pushq jrcxz sbb lock and xchg push sbb (bad) cmpsb add js,pt mov icebp es mov rcll (bad) mov clc or mov sahf (bad) adc clc jrcxz sbb push sbb outsb adc std mov out mov fwait mov pushq sbb in rex.WRXB popfq pop loopne and lea (bad) adc jne (bad) int mov test sbb cmpsb andl loopne es or insl pop sub pushq loopne test cmpsb rex.XB movabs rex mov and (bad) mov loopne rex.WRX xchg fidivl mov or jae loopne movabs sbb mov (bad) cmc xorps icebp loopne cs or rex.WB lock movslq rex.WX not in addb jno out cwtl loopne leaveq rex.B (bad) rex.WRB xlat stc and adc notb or hlt popfq repz jnp sub repnz loop rex.RB mov pop stos jnp movabs cli loopne jae stc sub jno mov pop adc loopne movabs clc movsl std xor jrcxz loopne fst test xor push movsb mov nop cltd xchg in std (bad) adc (bad) (bad) stos loopne xchg (bad) scas mov (bad) pop mov imulb jnp cli movabs loopne adc clc (bad) mov lret movabs sbb rex.RX pushfq or loopne fnstenv rex.WRX jae mov cmp and jb movsb adc (bad) sarl outsl movabs or loopne repnz pushfq rex.WR stc insl movabs icebp movsl outsb and test test repnz pavgb (bad) (bad) in cmpsb jae pop andl mov cmpsb loop lods rex.WRX fs repnz adc sbb and xor loopne outsl rex.WRB (bad) adc jae mov in nop push mull (bad) js xor push add movabs pushq lret (bad) push or jo sbb push pop fs cmp cmpsb cmp loopne add mov ss ficom add xchg stos xlat and lahf rex.R rex.W rex (bad) mov cli lods and out rex.WXB mov lahf (bad) outsb and xor cmc (bad) pushfq mov cmp lods sbb imul (bad) loopne pop or callq test rex.WRXB stc je rex.W pop lcall imul andb add movabs jno repnz and test fimul sbb pop cmp movslq in test adc loopne movabs mov out retq adc gs xlat adc and mov cmpsl mov (bad) jmpw mov shlb cltd rex.WB and loopne xor pop fistpll add loopne mov push je (bad) sar mov incl test std or rex.X outsb or push popfq adc movsl ss loopne sub jbe (bad) faddl movabs jns out adc cmp retq xor insl cmc movabs mov cmp (bad) (bad) test cmp cmp imul fcompp cwtl sub jns loopne mov mov jmp jmpq (bad) movabs cs (bad) and in shll scas jae icebp enterq cmp loopne mov hlt mov stc movabs in fist xchg lret pushq cwtl push adc add cmp sub fwait mov rex.WXB stc fsub retq loop push push movslq (bad) lret rex.WX rex.WXB imul adc fiaddl sbb xchg push movabs rolb jp callq (bad) jo stc jmp or mov sbb (bad) adc (bad) add ds addl (bad) (bad) div repnz int jmpq xor rex.RX lock push cmc cli movsl rex.WX repz lock cmp lret jp add xor loope push rex.RB notl add pop test lods iret mov leaveq mov ss (bad) mov scas sub (bad) xor mov xchg xchg fadd add rorb rex.WRXB rep push xor mov je sbb sbb roll sti and movabs es xor cmp sub and rcr rex.RX test int3 adcl add rex.WX in mov incl xor pushfq mulps repnz loopne (bad) xchg cmp adc (bad) mov jnp ss push xor out rex.WRX (bad) retq (bad) loopne push scas jb pushq add mov hlt xchg sbb and mov sub (bad) fs jbe (bad) int3 jp mov popfq rex xchg js shlb adc shrl sti mov add rex xchg mov callq mov in xor int3 movabs (bad) adc stc mov (bad) (bad) push mov fcom rolb loopne (bad) movslq xchg or jb jbe mov jrcxz loopne es rex.WB pop insb (bad) (bad) (bad) mov fldl in movsb (bad) cmp jbe (bad) mov or fisubrl mov repnz fisttpl rex.WRXB lods cmp loopne (bad) rcll negb adc (bad) (bad) clc jg cmp rex.WB mov in pop jb jno sbb xlat movabs gs (bad) clc mov and (bad) stos add leaveq jge fnstcw adc int add jb loopne cld test fnstenv (bad) push add pushq adc (bad) cmp add sbb (bad) xchg cs jno ss mov xchg nop xor or xchg (bad) mov loope or (bad) (bad) push pop pop lea jb repnz movabs mov rex.R or pop pushfq jmpq scas (bad) (bad) jne (bad) (bad) xor fwait ss xchg mov (bad) fadds addr32 movabs push adc sbb sbb ss cmp gs sub (bad) (bad) cmp sbb jnp (bad) jbe jns mov fisubrl out loop fnsave xor (bad) rex lods adc rcrl jb clc xor cli xlat cmp movslq std loope jg jmpq (bad) incb or mov test loopne cmp sub in jns xor lret test and mov mov push jge (bad) out movabs cmpsb rex.B movabs mov pop fmull pop or sub jae,pn (bad) mov popfw xor add mov fwait sub rex xchg loopne fsubrp rex.WRXB add fnop pushq sti int lods loopne jnp (bad) xorb popq jmpq cmpsb or jp jmpq or mov loopne (bad) jnp (bad) idivl jb mov (bad) push xor mov loopne rex.RXB and out add retq loopne (bad) hlt (bad) in (bad) mov sbb nop xlat rex.RB xchg or sub stos fdivr test cld xor xorb hlt xchg mov add movsb test and adc ss pop movsl xor adc mov xchg jrcxz repnz (bad) (bad) fstps (bad) sbb rex.X pop outsl sbb mov push sti int3 out rclb or adc incl fiadd nop test push add (bad) sarb mov (bad) fisubrl in cmp out (bad) test jno pushfq sbb insl in xchg rex.WX ds adc addr32 icebp incb adc mov rex movsb retq (bad) (bad) (bad) sub cmp jrcxz iret xchg mov rex mov and lahf add jb or je lahf jg pushq out test in and ds jrcxz fcomip pop out movsl js lock and rex.R jno (bad) movabs movabs repz mov ss rex.RX sub sbb loope shlb loop (bad) jb xrelease adc int3 lods (bad) hlt icebp rex.RB jnp push outsb jmp in (bad) in ds (bad) fnop cmpsl (bad) and (bad) (bad) (bad) (bad) imul adc imul xchg sub xor xchg sbb in movslq (bad) adc cwtl pop jns callq lret movabs movsb mov stc adc stos (bad) lods repz ds (bad) fidivr fsts jb rex.WR out icebp insl retq movabs xlat pop pop cmp (bad) leaveq adc jo rex.W jrcxz mov (bad) xor (bad) rex.XB in imul cmp ficomp xor sti mov mov sub pop (bad) sbb (bad) xchg sarb addl cmp nop in jg in sbb add movabs jg (bad) sbb adc xlat shrb mov (bad) cmp out gs mov decb add and lahf cmpsl lods mov push (bad) sbb sub test jle mov out testl lret ficomp int3 (bad) push mov rclb mov shr rex in test clc rex.WB pop addr32 and mov shrb rorl idivl clc test fnstcw push pop (bad) sub jb mov repnz mov sbb (bad) (bad) clc mov in adc jb outsb (bad) xor (bad) rex.WRXB (bad) adc (bad) addr32 loop mov leaveq push notl sahf cmp xchg out and jnp add rcl fnstsw ficomp push jmpq mov (bad) sbbb (bad) (bad) rcrb jl insb movabs scas jmpq roll movslq sbb test lahf insl sarb jo rex.XB sbb addr32 mov cltd fs sub rex.WXB scas fwait clc nop repz adc sub nop (bad) rex.WR repz sub pop rcr sbb jbe out (bad) or sbb push (bad) xor adc (bad) (bad) movslq out xor sub mov shlb cli in rcrl sub (bad) adc mov repnz or mov (bad) jo jrcxz (bad) jg in (bad) add fidivrl stc sbb gs std cmpsb mulb out (bad) and jle (bad) add adc add (bad) sbb xor fucompp pop sbb in sub adc mov icebp add jne test (bad) (bad) (bad) xor movb (bad) mov (bad) sub movslq retq (bad) movsb (bad) (bad) rorb mov sub mov cmp (bad) mov hlt lahf (bad) out outsl in and rcl push jle icebp data16 mov jg pushfq jnp iret (bad) lods imul lods rorl cmpb mov ror outsb xor (bad) fstl add push sub (bad) xchg cs cmp (bad) (bad) and pop ja (bad) rex lahf cmpb pop jno fs mov sbb je mov adc push retq (bad) (bad) loop or (bad) xchg (bad) rex.W adc fsub repz ss paddb ds addl movabs jrcxz outsb adc push imul sbb pop mov mov mov add imul test (bad) jae mov (bad) mov mov sbb (bad) cmpsb cmp addr32 rex.WX xchg pop sbb movslq test or rex.RB push insb (bad) (bad) or test out or (bad) cmp mov icebp clc (bad) mov insl jge rex.X sub movsl mov pushq (bad) mov and pop (bad) out adc insl lcall leaveq in fistp repz xchg cmp (bad) lret pop ror (bad) lret outsl and jp (bad) adc pop and xchg movsb xor (bad) rex.WRX mov addl and cmc sahf in push movsb lock sar xor jmp fiaddl addb sub (bad) push sbb (bad) sbb sub movsb (bad) cmp es (bad) mov lods (bad) and in xchg pop (bad) sbb callq fs (bad) rex.WXB and mov push lea in jge fwait out (bad) ror add scas addr32 (bad) jo movabs movslq movsb or sbb mov pop int3 or mov gs sbb sahf movsl xor and (bad) in (bad) mov loope adc lret (bad) jle (bad) retq mov xchg mov mov rex.WRXB push adc repz divb int3 mov rex.R (bad) popq xor sahf stos sbb ficom cli icebp add sbb in adcl fwait (bad) (bad) sti sub sbb rex.WXB rex.XB fbstp adc mov jns (bad) rex.WRB scas lret mov rex.WXB loopne insb jrcxz imul ds outsb pop out ss sbb in jns lods rex.RX cli rex.WRXB ja loopne and (bad) pushq mov hlt and mov js out adc mov sub loopne (bad) rex.WR and xor (bad) add pushq cs or loopne mov outsl rcl add scas xlat sub (bad) insb test (bad) fst rcrb pop repnz ss stos nop (bad) cmc in lcall pop push loopne rex.X enterq pushq mov xchg loopne jge jb jns xchg loopne iret rcrb outsb xchg test sub (bad) cmp fist and (bad) rex.WR retq (bad) (bad) ds jae je (bad) in cmp xchg add pop loopne pop movslq leaveq jmpq or rex.R rcrl test add and lcall test add adc and sahf rex.WXB xchg movslq (bad) mov jl cmp lret jmpq (bad) add out jg rex.WR fiaddl icebp loopne insl (bad) repnz (bad) and pop xchg sbb loopne and out push mov in fsub jno fmuls (bad) rex.WXB loopne,pt xorl loopne rex.WR pop add xchg (bad) adc ja loopne imul pop js xor cs jl in lods cmp cld pop cmp mov sbb jnp rex.X pushq add (bad) loopne jae jg xchg iret pushfq (bad) cwtl mov xchg callq add add loopne icebp mov retq outsb mov cli ficom rex.WR (bad) mov cs jmpq insl xchg sub mov sbb (bad) hlt movabs cmc repz lods sbb sbb jb (bad) insl and cwtl rex rex.WX xor mov mov (bad) (bad) callq jge rex.RXB mov loopne popfq jbe xchg fcmovnbe loopne int3 rex.RB sarb sahf rex.WR jne mov rex.B loopne xor test imul js fs (bad) or and loopne mov in fildll or hlt lock (bad) shl mov jmpq and imul jb insl pop xlat lret jmpq verr scas sahf (bad) xor adc (bad) add fwait retq ds rex.X addr32 and sti loop icebp andb lret add insl rorl xchg add gs jnp outsl jl and scas movslq mov pop loopne (bad) jo movsb fistpll xchg loopne out (bad) gs lret and fwait test shl movabs imul (bad) rex std (bad) jle (bad) sahf and rex retq jb sarb sar outsl rex.X movabs clc (bad) sub pavgb push vpaddsw shl loopne,pt jg push jp sub push xor and cld fsub es jno (bad) loopne adc jb stc xlat out shrb rex.RX loopne sub loopne enterq xchg rex.XB jmpq rex.WR movslq adc jl in mov cltd ror (bad) (bad) scas ss enterq jo or xchg outsb jrcxz (bad) loopne cmp movabs rex.WX xchg lea jp rex.WRXB adc icebp mov (bad) sub lret rex.WB xchg mov callq cmp leaveq lods (bad) add rex.R lods (bad) pop jns or push loopne pushq je fdiv fs adc (bad) xlat loopne fidivrl (bad) mul add rex.WRB sub (bad) push push retq xchg stc loopne or ja add clc and push jrcxz (bad) retq movabs xchg xlat mov lret mov outsl (bad) mov loopne jae cmp (bad) add fnstsw leaveq cli sbb (bad) xor cld jge mov loop jae xor loopne cli mov jnp shll add loopne test mov in stc mov loopne (bad) or mov (bad) (bad) addr32 sbbb in cmp fmuls stos enterq (bad) sbb (bad) rex.WX xlat mov lods rcl movabs sbbl fbld rex.RB hlt mov (bad) push (bad) sub rcrb or mov ja (bad) out pop data16 rex.RB rex.XB jle (bad) test loopne addr32 fs in adc mov je and and mov enterq jg mov fstps xor jno shrb cmpsl jmpq and (bad) cmp rex.X fsub adc loopne fcmove in xchg repnz rex.X loopne callq (bad) and js cld out and sub pop icebp jno or (bad) sti imul push add loopne pop rex.WRX (bad) test lock mov xor fucom push pop push or fnstcw loopne cpuid sti push sub (bad) cmp adc (bad) add and xchg rex.WRB mov and fwait es loopne nop xchg insb leaveq rcrb cld push add stc jbe loopne retq and repnz movabs (bad) (bad) ds loopne in xchg xchg (bad) (bad) xor imul rex.R sub (bad) and js mov scas repnz sti mov mov jae movabs xchg xor cmc mov (bad) cmp icebp sub add sub loop (bad) lock dec (bad) loopne cmp movsb xorb stos add rex.WR callq loopne or out add rorl rex.RX jge test in and adc and adc (bad) or (bad) or retq cwtl test mov outsl sbb mov jne imul scas sbb (bad) mov retq rex.R sub out test sbb loope (bad) add stos (bad) movabs jle in mov retq loopne rex.RB adc int push or xor add jmp int3 stos mov test mov jrcxz jp cmpsl rex.XB fsubs add or je (bad) in jmp (bad) sahf cmp movsl (bad) mov pop push cltd fdivrs (bad) cmc cli in pop icebp clc push loopne int3 (bad) rex.WRXB loopne sub rex.XB mov out cmp cli stos mov (bad) cld imul (bad) rex.WRB js (bad) mov fdivs jno loop cmpsb movabs add loopne in in subl xor (bad) pop shlb movsl or loopne (bad) (bad) pop xor xor (bad) test fist subl cld xchg mov clc ficoml cmp jbe callq mov mov je xchg stc out fnstenv fdiv in xchg movsl push ss lea movabs lret test (bad) push jrcxz fbstp xchg push pop loopne iret xchg rex.X mov out (bad) and push loopne jo (bad) fiadd rex.WR adc jno gs mov test out rcrb mov loopne rex.WRB data16 popfq sbb fwait xchg adc fsubrs idivl or pop or int3 (bad) testb push rcll cwtl loopne (bad) lock loopne (bad) out and rex.WX hlt (bad) sbb imul rex.XB add push cmp xor mov mov jp jmpq mov test rex.WXB movabs (bad) imul jno lret repz rex.WRX pop xlat clc or and mov xchg mov (bad) sub pushq sub rex.WRX (bad) mov (bad) (bad) and mov push cmpsl retq loopne (bad) pop jl fucomi cmp mov fiaddl lock rex.WB push jmp movslq pop imul (bad) mov (bad) pop rex.WX sahf callq pop fstl rex.RB gs shlb (bad) out (bad) pop sbb push adc xchg mov (bad) andl mov cmpsb (bad) iret int3 sbb (bad) add xchg sub xor popfq in lock rex.X out cmc loopne mov es push and gs loopne (bad) sub loopne sbb jl or sbb push xor scas (bad) iret adc repnz mov loopne (bad) adc lods loopne xor rcr incb or hlt loopne retq je xor ja in jns retq rex.W push decb adcb rex.WRXB mov lret fwait (bad) loopne push pop jg jmpq (bad) jne imul pushfq cs movabs fucom retq ja mov jae addr32 xor in inc sub (bad) test pushq mov xchg cmp push rex.RX cmp fistpll pop lahf cltd iret in adc cmp imul jmpq cli (bad) hlt xor retq sbb loop jle jbe loopne (bad) cmp sub in movsb adc loopne (bad) xchg rex.RX (bad) loopne rex.WRB (bad) outsb pushfq rex.WRX loopne add jbe cwtl pop outsl in push (bad) (bad) mov add rex.WRXB jrcxz stos leaveq jge loopne jrcxz sarl and retq sbb mov retq xor in loopne movabs loopne fptan pushfq sub cmp loopne (bad) xchg ffreep mov (bad) rex.B test xlat pop rex.X xor loopne sub data16 sbb loopne push mov movsl lret xor sub (bad) popfq rcll dec lea sbb sbb popfq fist and xor test rex.WR rex.XB pop movabs or sbb xchg sbb mov notb push pushq rolb (bad) out (bad) (bad) push test out xchg rex.WRXB rex.WR std and pushq lahf shl mov mov callq (bad) stos xchg lret (bad) xchg ja jge and (bad) mov enterq add stc sub outsb xchg pop loopne or jmp sti mov (bad) movsl je rex.WRX rex.RX cmc jle xor loopne jmpq loopne imul test adc repnz leaveq lock outsl jg sti adc jb (bad) sbb roll push fstl and mov (bad) (bad) sub rcl (bad) (bad) xlat loopne (bad) sbb fbstp mov loopne subb sbb (bad) pop fucom cmp (bad) cmp cs and jge outsb movabs (bad) (bad) push (bad) clc movabs jmpq mov rex.W mov jne jb shl in (bad) icebp decb faddl fcmovne mov add cmpsb push (bad) fistpll sbb in push insb in sahf push (bad) fdivrs push or fwait cmp pushfq gs lock jrcxz (bad) insl jg jmpq jge rex.RX fisubrl out cli fcoml leaveq mov sarb adc pushq or and insb cli loopne jne cld (bad) clc callq subb fucom movabs rex.X nop (bad) pop gs sub rex.X out cld test pop xchg add cwtl add sarl (bad) outsb sub pushq adc imul in or mov (bad) in (bad) test out sbb mov jo rex.RXB sub (bad) sbb shrl xor (bad) cmp in rorl test sbb test cwtl (bad) cmp sbb out xchg loopne repz loopne pop jnp stos pop push xchg loopne jno sub cmpsb and sub scas rex.WRX movabs (bad) lods push and push sbb in int fadds sub movsb jae pushq scas cmp jns push fstpl rex.RX ss and (bad) and xor fwait outsl cli shlb (bad) pop rex.RXB rex.RB rex.XB rex.W iret clc add (bad) movabs pop mulb loopne (bad) stos sbb pushfq test or push (bad) xor rex.RX add jl (bad) loopne xchg pop (bad) (bad) cmc (bad) adc in or mov jmpw movsb push adc jne xchg (bad) (bad) push int3 mov test push jns (bad) test sbb adc stos xor stos push add jb mov lcall fdivs movsl mov mov movabs ror loopne retq stos xchg jo sti loopne cltd cmp mov mov movabs (bad) lock (bad) jnp fstpl mov mov lret movabs mov and int jo rcrl ficompl loopne icebp pushq jrcxz leaveq (bad) fdiv imul (bad) lods addl add mov add rex.WRB add cmpb out lahf movabs shlb rex.RB test lret push (bad) gs (bad) movabs xor push (bad) movslq (bad) add pushq lahf mov fist push movsl int3 rex.RX loopne gs pop add sub sti cmc int fnstsw testl sti add clc (bad) lock sbb or and enterq (bad) es xor loopne fadd xchg imul jmpq repz out mov hlt test mov adc xchg test (bad) jmpq xor or xchg sbb subb lahf adc or jns sbb cwtl cltd lods in (bad) mov xchg (bad) fs rex.WRB or jo sbb and out fs adc leaveq and mov sti (bad) add jrcxz rcll (bad) cwtl callq movslq sbb cmp adcl mov cmp gs (bad) (bad) sbb imul pop hlt loopne rex.XB mov pop (bad) pop mov popfq push or imul mov lea lods sar movabs push popfq sbb (bad) or int jmpq movsb hlt icebp (bad) scas rex.R mov cwtl callq sbb retq (bad) outsl cltd cmpsb cwtl cmp jg sbb pop (bad) adc sbb jo gs cwtl fistl inc adc mov add (bad) xchg (bad) xor iret sbbb sub lods lods test rex.WRX sbb (bad) push or sbb (bad) mov fisubr (bad) pop pop rex.R jbe retq ds rol sub xor sarl or decl loope shr jp out sbb mov (bad) movabs jnp rex.WB shlb xchg in pushq jmp (bad) sub rex.W mov (bad) adc adc (bad) mov in popfq jl adc (bad) stc sub or test sub in xchg out pushfq out (bad) push lahf xor (bad) int3 sub (bad) push (bad) adc pushq gs jmp (bad) adc sahf mov xor stos rex.WX jge test xor pushq fs rex.RXB (bad) jo cmp addl repnz and fstl pushq scas loopne jns (bad) sbb movabs sbb jnp jmpq (bad) jmp std insl (bad) movabs sti minps in (bad) (bad) retq mov in pop es sbb decl jo icebp fs pop ja out sub fcoml outsl cmc cmpsl insl (bad) pop cvttps2pi movabs jo jbe (bad) lret movsb (bad) clc jo mov adc jb lock jo notl fdiv cmp xlat adc jg cmp (bad) add loopne movsb mov (bad) loopne jns and insb xor stos std adc lods retq insl jmpq cwtl shlb icebp stc addr32 pop rex.RX movsb (bad) retq adc cmp sub push mov insl ss repz rex.WRB rex.W (bad) xchg (bad) mov sbb sbb push xchg sub cmp and (bad) test (bad) ljmp in movabs (bad) cmc xlat adc cmp mov and stc jno repnz std jo xlat cmp addr32 movnti clc test cmpsl rex.WRXB out rex.R enterq pop jmpq (bad) or (bad) imul ja mov fstps adc (bad) xchg movsb pop jae rex.WRXB jmp movabs leaveq xor rex.WRX clc rex.RX stos xchg jo fstl or rclb (bad) mov mov in (bad) and imul callq lahf mov callq or loop mov sbb out jnp mov push int3 sub sbb jns movslq or js cmp (bad) push fistp adc lahf imul xor hlt test lea pop pop outsl xchg mov sub adc or xchg rex.WXB (bad) ss jne xor cmp es testb jns sbb mov (bad) mov in (bad) pop f2xm1 sti pushq addr32 test fdivs stc jle ss mov loopne jp sbbl jl loopne jae pop fidiv sub (bad) push loope sti mov loopne lret adc pushfq add test xor loopne imul fcompl mov adc movsl jo and loopne or cli rex.XB jrcxz and or clc rex.X pop pop jo icebp jg cwtl mov callq and mov lret sub pop movsl (bad) adc pop sbb loopne (bad) mov (bad) fwait icebp (bad) movabs sbb jbe andb in jrcxz add sbb ds loopne sub sub shrl jbe leaveq loopne rex.WR es mov (bad) test push (bad) loopne movsb or xor (bad) xlat rex.WX loopne addl loopne stos movabs add push loopne sbb frstor sti cmp cld jg std pop jne rex.XB jbe insb (bad) popfq notb adc cmp (bad) (bad) (bad) add loopne lock (bad) rex.WXB test movabs add sbb adc shrb xchg scas (bad) mov pushq test lahf cmpsl (bad) xchg fild stc mov clc fcoms callq jo push xor rex.WRB mov rolb loopne cs and movabs and imul not adc cmpsl jne out pushw pushfq lret (bad) retq pushq fs (bad) jge mov loopne rex.X or in jrcxz and mov cli pop imul xchg jg ja xor rex.WXB jae mov in mov fdivs sub sbb (bad) and retq data16 sub sbbl nop adc scas jl fldt (bad) (bad) rex.WRB fdivs (bad) callq sbb int3 and (bad) (bad) rex.RB (bad) rex.WXB (bad) cs lods loopne (bad) or loope rex.RX rex.WRB mov (bad) movabs loopne callq stos mov mov xor adc xchg add mov add push loopne loop js or cmp data16 xor xchg pop cli rex.WXB loopne cld repz push loopne fcmovne push je lret movsl loopne adc jns (bad) repz stos xor rex.RB (bad) lods add rex.X pop sub (bad) movsl and xchg mov movabs loopne push sbb in (bad) mov rclb xlat and fs push stos cmp xchg pushq pop rex sbb rex.XB (bad) cld (bad) sahf fnsave rcrl test lahf sarl outsl push push callq or adc movabs loopne es fwait mov (bad) hlt jmpq std rsm pushq pop rex.WR loope (bad) (bad) sbb loopne mov mov loopne (bad) insl add roll jo adc retq fs cld out and and or pop and or js loopne or rex.WRB (bad) std loopne bnd add mov xchg int3 push sbb sti xor adc callq icebp (bad) add movsb stc lahf rex.R (bad) cld sbb (bad) callq or jl or and xlat movabs jb (bad) sub comiss or in cld jo (bad) jb cmpsb leaveq out mov insb in pop (bad) fimul xor xchg (bad) je xchg icebp mov loopne fldcw rex.WB sahf ficompl rex.WR movabs scas pushq loopne stos movabs int xchg fistpll adc pop (bad) mov push xchg cmpsl xchg rex.WRX or (bad) sub rex.X add stos jrcxz add cld cmp loopne lock (bad) cwtl loopne (bad) rex.RX xor sub loopne jbe mov jle imul or sbb js (bad) leaveq jno rclb (bad) fs imul add xor callq cltd leaveq xchg stc (bad) xor jle rcrb xchg test addr32 cmpsb (bad) nop jnp movabs loope mov pushq rex.X rex.WR jrcxz xchg (bad) xchg sub mov xchg mov loopne mov jle sbb jo callq mov shufps loopne jmp lret xchg in loopne sbb mov or (bad) (bad) loopne adc and loopne (bad) in leaveq jb jmpq xor sbb jmpq stc ds jmpq jb movslq outsl in jno int3 sbb (bad) scas out (bad) sub sbb shl lods pushfq push push je jle add jrcxz xchg ss loope,pt in (bad) lea sub fucomp pop (bad) js adc imul pop (bad) (bad) xchg and sub sbb loopne lahf adc jl (bad) lock push pop (bad) hlt rex.RXB jmpq retq movabs push addr32 sub cltd (bad) inc mov fs (bad) jae pop (bad) push rex.WXB outsb loopne (bad) xor pop jo out (bad) rex.RB rex add or lret rex.WR leaveq rex.WRX xchg rex.W stc cwtl movabs push sti (bad) lahf and (bad) movsl pcmpgtw cmp movabs (bad) loopne movabs (bad) xchg and in rex.WX add loopne adc xchg mov pushq lock (bad) jns xlat incb fiaddl outsl rcll in and push (bad) iret outsb (bad) loopne fdivr cmpsb pop insl adc shlb adc add or push lahf fucomp rex.B fwait (bad) popfq (bad) cld sub in movsl xchg pop (bad) out movabs insb cld lods ja gs loopne lea mov jg sub mov (bad) movabs jge cltd pushq scas out jb cli loopne xchg adc jae rex.WXB in pushq loopne je mov mov loopne jmp pushfq mov push jb jl and andl add loopne mov xor xchg mov and (bad) outsl mov mov int3 push icebp fidivl rex.WXB cmp pushq je movsl adc add mov cmp mov (bad) and cwtl xor pop rex.WXB or add je stc stos test loopne fsubrp add add adc mov shrl (bad) lret in retq xchg ss icebp in shl (bad) loopne mov shr pushq cmp (bad) mov sarb jae and jo jmp enterq push scas sub xor or lock mov out xor insl test stc (bad) sbb add repz sub push adc sbb rex.RXB addr32 mov rcrb sub fsts (bad) (bad) scas jmpq mov fcoms or adc xor enterq or (bad) push jo lret rex.X sbb cmp data16 loope orl rex.WRB clc mov (bad) mov imul mov or retq push sbb (bad) (bad) pop (bad) and rex.RXB mov rex.WX rex.X icebp addr32 (bad) notl leaveq (bad) add icebp insl cli adc jo pushq in cmc and and (bad) callq xchg (bad) xchg in (bad) in mov (bad) (bad) movsl and adc leaveq lret mov add (bad) insl rex.WRB retq xchg xchg mov lret fs (bad) xchg jg rcrl fimul jmpq jmp pushfq mov in ficoml jge (bad) insl cwtl cmp shl xchg pop lock sub xor loopne sub cmp pop out adc rex.R (bad) fstp rex.WRX in mov and sbb jo lret lock lahf js xlat rex.RB jnp xor rex.XB xchg jne leaveq pop rex.WRX (bad) jo data16 (bad) xor jno push sti adc movabs (bad) mov fsubrs mov mov test movslq jae (bad) int adc fisubr lret (bad) in mov jno rex.WRXB push jne rex.RX es sub (bad) shrb push pop insl in xchg and idivb adcl insb cwtl mov adc and jrcxz scas and cmp push cmp rex.RX sbb movabs data16 (bad) rex.WRX sahf jmp fidiv xchg lea or (bad) repz xor test xorl (bad) adc mov loopne xlat ror add (bad) loop (bad) fs xor sbb popfq mov in out (bad) (bad) (bad) or push xorl rex.WB jge jle (bad) movslq sub rex.X (bad) and xchg loopne rex.R mov sti stos jl cmp loopne and cmpl je mov adc fldt lods out movabs in leaveq and jmp loopne or pop in xchg and movslq rclb repz loopne out (bad) loope (bad) in loopne cmp sahf push rex.RX (bad) stos cmc xor rex.B fisttp mov fstpt mov mov (bad) jae xchg stc scas (bad) sbb lock imul callq rex mov cmp mov in xlat sub pushfq cmp mov sbb jle mov rex.RXB fwait iret rolb jbe lahf pushq fdivrl push loopne mov xchg retq loopne fdivs cli in stos cmp fildl rex.WRX gs in add fcmovbe adc sti jbe and clc or sub mov shrl loopne icebp fisttp xor or retq (bad) rcr (bad) jne movsb mov push or and jo jle insb cli lock enterq xchg orl loopne or xchg pop or rex.B (bad) sub sbb mov adcb hlt or outsb rex.WR add cmpsb loope add push jne xor mov movsl mov adc outsb movabs fnop sbb (bad) jns xor cld adc or jmpq lret pushq and nop not jmpq ficoml jno fsts mov rex.WX (bad) addr32 or popfq cwtl movabs cld adc jp rex.W (bad) rex.WRX rorb (bad) pop leaveq es and (bad) sub movabs mov loop cmpsb sbb pop rex.WB movabs js test incl (bad) cs roll lahf xchg fneni(8087 movabs mov (bad) icebp (bad) xchg lock loopne test popfq cmc and rex.WR ja fwait jl mov cmp mov sub mov (bad) repz sar (bad) cmpsl rex.WB sbb and xchg mov shl in cli cltd mov addr32 sbb rex.WR fnop xchg fnsave rex.R xlat movsl xchg pushq (bad) jp cmp or xchg rex.RX pushq and push loopne rex.W mov jb xor je imul xchg (bad) pop (bad) cmp cmpsl xchg pop jnp jb adc and (bad) rex.B xchg loopne out add and fwait xchg (bad) icebp int test xchg out mul rex.RB pushq out cmp movabs add xchg push fstpt (bad) gs cli xchg (bad) flds mov (bad) adc mov scas sbb add hlt loopne push sbb fmuls loope popfq rex xchg lea shl clc pop insb orl in rex.RX pop retq lea movabs loopne and mov jae rex.WRB pushq cmpsl pop jnp sarl xlat fsubs jo int ja or int3 js pop loopne clc stos jae (bad) in test or jl mov mov sbb popfq mov pop pushfq hlt and movabs loopne mov jo loopne rex.WX (bad) fwait rex.RB xchg rex.WRB addr32 jge cwtl xor loopne push jmp movabs add enterq sbb cmp cmp mov jmpq rex.WRB xchg mov sub out lods sub adc rex jmpq cmp lods add mov sbb sar sahf sub cmp (bad) mov fidivr add and loopne fwait push xchg iret rex.WRB orl fld xchg (bad) (bad) mov sub loopne sbb xchg jle jrcxz icebp adc xlat iret loop pushfq jmpq xor pop fwait loopne mov jp rex sub sti add push jae push and out (bad) mov mov (bad) (bad) xchg (bad) stos enterq adc or (bad) xchg mov mov (bad) mov and repnz (bad) mov or pop (bad) (bad) push (bad) loopne push cmp mov decl icebp pushq mov and (bad) pop (bad) rorl in mov mov retq fs push fistpl jb addr32 xchg sbb (bad) rex.WXB ds repnz cltd mov stc sbb addr32 (bad) (bad) (bad) lea idiv rex.RX rex.RXB fwait loop sbbb mov adc adc mov jne mov (bad) (bad) mov mov lea xchg pop jg scas out jnp sbb movabs jb (bad) (bad) pushfq pop stos jge (bad) adc sbb xor fisubr std (bad) cmp xchg outsb (bad) gs rex.WXB jnp push jne mov nop repnz xchg (bad) mov and rex jrcxz cmp pop jae rex.WRX loopne (bad) jo out mov mov and js mov sbb fwait cmc sbbl test cmc stc (bad) fcos (bad) and or push cmp loopne mov popfq int3 sub (bad) mov (bad) rex.RXB xor (bad) and mov out xchg nop icebp loopne rex.WRXB iret int3 (bad) imul js in pop out loopne xchg pop sti lock rex.WRXB rex.WRX pop push (bad) mov xchg xor sub or push loopne rex.RXB repnz xchg clc mov (bad) cmp pop fsubl in xorb clc lock xor cli lahf xchg es mov pop loopne xor or testl xor jg lea insl cmp mov icebp data16 adc mov mov shll jrcxz adc (bad) mov add gs (bad) (bad) cmpsl pop jge movabs es mov cli loopne movabs mov loopne mov rcr xor out (bad) ffree (bad) cld movabs lock imul push or or ss loope movabs outsb adc jae outsb fucomip push subb fidivr xor shrl andl xor in and ficoml mov insl add repz (bad) xchg pop adc or loop jle add rex.B mov loopne lods and cmc shlb (bad) (bad) rex.X jg sbb movabs cmpsb test hlt jne or cmp xor loopne (bad) lea cli retq cmp and out pop mov loopne retq iret sub movabs add outsl (bad) sub xor sbb out repnz add (bad) lods pmulhw xchg (bad) and mov cmp insb fildll add adcb in movsb test pop xor (bad) (bad) loopne xchg rex.RXB or lahf or ror (bad) (bad) movabs xor lret jle insl adc sub mov adc xor nop fwait in rex.RXB rex.WR and (bad) jnp xor (bad) or jmp mov rex.WRXB ficomp test movsl sbb divb fdivr stos jle jmpq (bad) leaveq mov xlat adc int (bad) (bad) adcb add add add lret xchg not imull jl scas (bad) cmpsb lret rex.RB movabs adc loopne pop (bad) xchg sbb pop cmpsl out rex.WB rcll (bad) (bad) cld shr repnz xor sbb stc xlat cmpsb (bad) loope callq enterq push rclb and gs (bad) fildl (bad) cmp (bad) (bad) jle sub sub adc pushfq cmp loopne pop and xchg shl (bad) gs adc jns jle rex.WB movabs jmpq (bad) sbb xor (bad) mov nop sbb scas icebp or shll pushq (bad) test cmpsb mov subb sub sti and jmp rex.R rex.WRX repnz rex.W sub xor lock push (bad) cmp rex.WRXB fucom rex.WB jae xor (bad) jmpq (bad) xor (bad) push mov push and jnp out jmpq add mov in rex.WR add mov iret (bad) lods popfq movabs sub js mov cmp (bad) movslq (bad) int3 jl lahf loopne (bad) jmpq add xchg or popfq repnz iret loopne cltd sbb xchg mov loopne xor jne fistp loopne sub mov sti (bad) pop cmp loopne jnp jae out (bad) loopne adc sbb enterq (bad) sbb (bad) out ss jnp cltd cmp rex rex.WXB fs fcoml pushq (bad) mov mov (bad) lahf cmc lret sar jbe (bad) lret ds (bad) mov (bad) (bad) or sbb cmpl sbb test movabs imul pop add (bad) out xchg leaveq imul fnstenv (bad) pop retq add clc rex.X cwtl cli xor mov test (bad) loopne (bad) loop sti cmp lahf add test in (bad) and add scas jg loopne cltd rcr (bad) test pop sub loopne jno jae sbb rex mov sub ds cmp push int3 loopne fdivp rex.RB mov lahf (bad) shr pop outsl loopne xchg vminss add xor (bad) cld adc rex.WRB (bad) (bad) sub cmp and loop (bad) movabs or (bad) imul (bad) stc (bad) xchg (bad) jl fwait rex (bad) (bad) or loopne push ffree imul lea lods loopne loop add jnp (bad) mov cmpl in mov cmp out jmpq and sub (bad) (bad) mov (bad) rorl xor pop loopne or in (bad) repnz insl mov sbb (bad) in sbb mov test add (bad) pop (bad) (bad) insb retq loopne out outsl xlat jo adc cli xor imul (bad) sbb fnstsw xlat gs mov insl push add sub xlat and sahf mov (bad) add jp mov fsub (bad) loope in shll in rex.W fcmovnu addr32 in pop loope enterq cmpsl xor xchg push clc shlb movabs (bad) (bad) cld insl (bad) pushfq (bad) and adc sarl xchg (bad) loopne push fcompl xchg out xor push or movabs mov push xchg pushq (bad) jo mov movsl pop adc and cld movsb cmc ds clc movb (bad) cld jmp scas clc data16 fwait shll int pop lret adc loopne (bad) stos xchg (bad) rex.RX rex.WRX jmpq fldcw mov adc loopne xlat mov std mov shrb mov xor in rex.XB sub rex.WR in cli scas cmp (bad) int cltd (bad) rex.RXB loopne mov (bad) je and sbb mov cmp xchg js movsl imulb mov xchg xchg insb movabs in rex.R movabs mov pop sbb jmpq out lods (bad) mov rex.WXB lock jl (bad) mov adc (bad) jmpq retq stos (bad) cs cld cli sub and cmp movabs cli mov fldenv loopne mov sub fucomip (bad) loopne stos jrcxz sti mov callq outsb fnop ja rcr rex.WX jnp stos xchg rorl cmp in pop (bad) out xlat loopne xor movabs cmpsl callq jo (bad) xor test out (bad) mov add insl fwait in movsl (bad) in jp (bad) lods leaveq pushq (bad) lret loopne (bad) fwait xor xchg xabort mov loopne mov scas jle mov roll and sub jl (bad) in adc sbb push cmc (bad) jo pop rex.WXB mov sahf rex.RB insb cmp rolb push movabs (bad) loope loop out pop (bad) (bad) stos jmp decl fwait (bad) or xchg imul movslq jno fldcw out jns movabs cwtl cmp (bad) sub mov (bad) mov add rex.RXB cmp push sbb addr32 in loopne (bad) mov in mov xchg sarb push cmpl rcrl int rex.WRXB loopne add cmc test jl int3 (bad) (bad) out adc loopne leaveq add xchg rex.WR cmp mov and pop jrcxz jnp (bad) mov pop add sub sahf xchg cmc repz clc fcmove ljmp loopne in mov sahf sarb (bad) cmp out cmp jne (bad) leaveq (bad) (bad) mov rex.WXB insl movabs xchg mov test insb rex.WX (bad) pop and sbb scas lret adc hlt icebp jo gs fs sbb enterq and in push test pop rex.R cmp xor sub callq xor enterq xor fsubs out adc (bad) icebp fsubl mov sbb incl clc js icebp jle add mov data16 jle cmp cmp jns rex.WRX ss icebp out movabs rex.WXB in pushq push pop add popfq int3 cltd rorl mov mov cmp (bad) cmc rex.WRX rex.WR movslq jg jae addr32 sbb jl incl (bad) mov leaveq xchg sub adc (bad) (bad) xchg jmpq in and jnp imul rex.XB data16 fcompp (bad) cmp retq sti int3 insb sbb sub push cmp (bad) xchg vpminub pushq es insb mov fwait bswap movsl (bad) cmc mov scas add jmp (bad) jo clc lods cmp (bad) push mov rex.WRB loop and stos in or lock scas mov out rex.WR and orl sbb mov rex.RXB and sbb (bad) rex.B outsl hlt sbb rex.WRB lgs cwtl scas rcrb movabs sub out xor loop cmp cmc icebp insb jno mov rex.XB fidiv (bad) sbb (bad) std pop in cmpl insb cmp cli jrcxz (bad) (bad) jle adc sbb pop mulb jnp jrcxz (bad) addr32 (bad) (bad) and adc callq (bad) scas and mov sti out or cs pop icebp push or mov xor cmp lock sbbl adc subl outsl mov jle xor (bad) xchg mov retq cmp jae movabs xchg pop adc movabs add sbb (bad) rex.WR or sbb rex.W rex.B rex.WRX push sub xchg push rex.WR rex.WXB fildll in (bad) (bad) sti cmp rex.RX movabs je pop je shr add fldenv mov rex.WRXB push rex.XB decl (bad) mov jg movabs cmpsl sub int mov enterq loopne stc pushfq xchg mov xor (bad) mov mov (bad) in mov (bad) mov xchg mov out mov pop sti lods addr32 out xchg rex.RX shl int movabs jle xchg imul (bad) in jg xor rex.WR mov mov es mov retq xor jo (bad) fdivl adc add xchg loopne popfq sarl lods or test xor rex.WRB sub jp test rex.WR addr32 loopne sub (bad) pushfq mov rex.WRB loopne gs rex.RX (bad) mov popfq and sbb lock xlat (bad) loopne fs int nop mov sbb mov jmpq mov sub movsb stc loopne roll (bad) push loopne add icebp rex.R leaveq out sbbb and sbb loopne out pushfq (bad) icebp dec in xchg lahf xlat rex.RXB (bad) (bad) movslq fisubr mov popfq stos sub and jne out (bad) mov clc add (bad) adc (bad) add push js ds cmp (bad) in rcrb sbb mov sahf (bad) sbb rex.RB (bad) pushq mov adcl jnp add sbb sub xor (bad) pop movsb stos xchg (bad) (bad) cvtps2pi and in rex.WRX rex.R pop jne fldcw adc (bad) add insl adc std hlt or stc movabs xlat lahf movb jg jae push rex.XB rcr stc mov out (bad) cmc sub lock in hlt add insl (bad) imul pop rex.WXB rex rex.WXB jg rex.R jb sbb std (bad) sub (bad) iret and shlb sbbl jo std test insl repnz movabs rex.WRX jbe (bad) lret movslq test pop retq stos jo insb pop rex.WXB addr32 cmp repnz (bad) adc add (bad) repnz sub notb sub (bad) rex.WRX loop (bad) ss (bad) mov and (bad) and xor fwait mov sub loope push (bad) mov in fmul mov es es mov insb in sbb jge cltd cmpsb (bad) int3 in insl mov xchg mov rex.RXB bnd (bad) (bad) sbb mov rex.R callq xchg sub rsm retq cmp popfq test fstpl jno sbb in scas shll (bad) in cmpsl rex.WRXB cmpsl jmp clc xchg stos or xchg sbb jle mov imul (bad) sub (bad) test and scas sbb adc rorb jo rex.W rex.WRB in sub movabs (bad) add dec mov (bad) sub cmp cmp and (bad) adc cmc js (bad) mov repz jne (bad) mov lgs shl enterq retq sbb xchg imul test sbb pop loopne jns xchg mov cmp pop (bad) repz and mov out rex.WRX pushq sbb push rex.WRB xchg lret mov icebp test or loopne sub rex.WRX movabs (bad) mov sti loopne rex.RB sbb adc clc rex.R (bad) out jmpq lahf (bad) mov rex.WXB lock cmp loopne or mov or (bad) jp (bad) cli xor mov jmpq mov mov xor rcrb rex jmpq xchg rex.B outsl or sbb rex.RB pushq jmpq xchg cli add cmp rex.WXB (bad) mov sub (bad) repz fidivrl (bad) or leaveq (bad) sarl out xchg scas sti xchg movabs xlat pushfq or scas mov xchg (bad) adc (bad) jmpq rex.WRXB rex.R in rex.WXB iret (bad) cmpsl roll popfq loopne js add mov loopne xor sbb sti and outsl (bad) out sbb pop lock mov out xchg loopne test (bad) (bad) xchg push adc jg mov sbb jg rex.RB movabs fs cmp sub mov rex.XB loope sbb jl stos fdivp and movsb loopne mov mov iret mov (bad) (bad) rex.WRXB (bad) ja or add cmpl cld (bad) jo lods popfq fcoms pop jmpq iret and int3 js jge mov (bad) and and (bad) (bad) out movsb fisttp mov scas and (bad) loopne (bad) (bad) fdivl (bad) jl sub and jrcxz cli and (bad) ss and sub xchg cs pushq cwtl mov mov sub mov adcb sub bnd xchg (bad) leaveq jp xor (bad) cwtl (bad) mov jnp (bad) loopne movabs clc adc and xor movslq adc mov in int3 (bad) movabs jl sub loopne ffree in sub out loopne (bad) rex.R mov jns push xchg push (bad) (bad) or std loopne (bad) mov xor (bad) add (bad) in jl sbb mov jne mov mov mov push push shr push out rex.WRB addr32 sarb rorl mov rex.X fistpll sub (bad) in (bad) ja (bad) xchg cmpsl retq cmp cltd icebp mov pop rex.RX int xor sbb or leaveq out cltd (bad) rex.B std lods mov loopne mov mov gs xchg pop (bad) cmp testb jle sub andl shld in (bad) test lock cmc fldt (bad) mov (bad) rolb clc test (bad) cmpsl push (bad) loopne int ss jbe stos fnstsw loopne sbb (bad) lret fcmovnu (bad) stos data16 addb sub mov jbe rex.WRX int (bad) out add or rex.WXB ss hlt xchg jrcxz push out icebp loopne mov rex.WXB mov jrcxz jnp rex.W ss out sub insb xorl (bad) jne rex.RX out sub out (bad) inc or repnz out rex.RB (bad) shll cmp add hlt fdivrl mov in insl mov or mov mov incl (bad) lret out loopne add (bad) (bad) int3 rex.WRXB sbb enterq mov insl rex.WXB addl (bad) insl rex.B adcl xchg imul and jae jae adc and in jnp xchg leaveq out lods outsl and (bad) (bad) repz movabs callq xor rex.W push loopne and sbb lods jle rcl loopne repnz loopne mov jne (bad) jrcxz (bad) pop add in callq icebp movabs sbb pop sbb fsubrl (bad) loopne movabs jae xor jbe fldl xor lea xchg in js (bad) stc adc imul adc movslq mov rex.WR sbb movabs jg jl (bad) push (bad) scas in and and out sar lret enterq adc mov cmpsl sbb cld rex.RB and push or pop (bad) or movabs rex.WRB movabs fdivr sbb jle and jmpq ds loopne cmpsl (bad) mov and xchg cli xor sub pushq rex.X xlat mov movabs lock jb jne cmpsl (bad) retq pop mov repnz ss mov pop rex.RX sbb movabs pop out jnp pop cld (bad) movabs jmp mov rex.B xchg loopne in cmp mov xchg incl add int rex.WX pushq mov leaveq sbb push loopne pop rex.B rex.RX (bad) pop out je (bad) test insl callq repnz sub xchg movsl mov adc (bad) xlat loopne loop jl jnp mov outsl rex.X jle gs sbb (bad) mov insl rex.B jg jl insl sarb sbb rex.RB icebp xor rex.R (bad) data16 or rex.WRX cs sbb movabs mov addr32 add cmp or js hlt repz jge cmpsb (bad) lods and sub adc xchg cmpsb jnp cld js in sub ja rex.XB sbb (bad) nop rex.WRXB (bad) mov xchg (bad) push mov jp leaveq subl fnsave xor pop jae jmp js adc push movabs or fdivrp rex.X adc mov sti orl rcrl cmp (bad) and (bad) xchg fsubrs jle addr32 mov fsubs std sbb add (bad) jl adc movsl (bad) (bad) pushfq sub (bad) sbb (bad) lock push (bad) sbb retq pushq sbb mov (bad) mov data16 movabs gs std rex.WXB outsb and xor sbb out or loopne mov test mov pop and push (bad) lret sub and in in cmpsb out sub stos pop lret rex.B cmp fcomps cmpsb (bad) in fsubrs lods sbb lods cwtl rex.XB xor pop jmpq adc iret mov cmp ja push in lea (bad) and cmp icebp fnstcw retq xchg (bad) adc push jo (bad) cmpsl scas cmp cmp cwtl lock lahf insl push int3 rex.WB jbe jno mov fmull jnp je retq (bad) xor sbb fwait sub and xchg (bad) jp jno data16 sub or (bad) loop jg retq out (bad) (bad) jbe mov cmp jg (bad) cltd (bad) sub sbb mov mov divb jae (bad) jge fdivrs rex.B rex.WRX (bad) adc add lods mov scas mov add pop cs push outsb (bad) add (bad) (bad) mov fwait lods xchg (bad) jge cmp sub (bad) retq callq lods imul (bad) mov cld mov outsl out adc and xlat sbb fs fadd (bad) retq adc rex.WXB (bad) xchg mov adc jne sub cmc add sbb ja or ds mov hlt adc stc (bad) insl pop es cmp jrcxz enterq movsb cli ja (bad) stc callq adc int adc or rcll adc pop orb fiaddl callq sub popfq (bad) mov jo jnp lret add leaveq pop je fstpt scas stc (bad) mov rex.W pushq adcb rex.B mov fisttpll mov movabs je (bad) mov (bad) sbb icebp rex.XB cld insl lods (bad) mov and (bad) (bad) or pop and loope hlt incb movsb xlat (bad) push movabs push mov xor mov jrcxz adc or faddp and sub jp fsubrs (bad) mov mov sub push rex.WRXB fidivrl mov push fbstp cltd adc (bad) shld cs movsb rex.X repnz adc rex.WB rorb (bad) scas (bad) jnp xor adc xchg jmp movsb enterq jns test push mov out cmp movabs mov es mov sti cmp push sar xor icebp jecxz insb xor (bad) pop (bad) test sbb lods sbb insl movb add (bad) (bad) sbb (bad) (bad) sbb pop stc adc insl xchg repnz sub insb rex.RXB rex.XB ffree rex.W in retq in push fidivr cwtl lret pop mov movabs sub stos (bad) (bad) pop (bad) xchg adc movabs je sub jnp rex.WB cs mov lods insb push push cmpsb sub std jbe rorb cmc jge jo jp mov mov jl mov jns jnp loopne rolb in push rex.RX mov and rex.R xchg and callq roll loopne mov mov in xchg (bad) jno gs jae out (bad) adc mov rcrb in (bad) lock rex.WRXB rex.X test je (bad) lret js (bad) mov (bad) (bad) repnz popfq mov adc out jnp xor out in movslq (bad) movabs (bad) imul pop xor pop push out rex.RB mov (bad) imul setge sarb loopne mov sbb or loopne jg sub movabs movabs es jnp loopne or jp adc (bad) adc in xor xor jae stos sar jns (bad) imul subl sbb scas lods cmp faddl and ja mov loopne lret jb cs (bad) stc ss in add scas addr32 (bad) fnsave je add scas loopne add (bad) movabs cs rex.WRX mov jl sub fsub and pop rex.WB loopne jle leaveq rex.XB cmpb sub loopne xor fneni(8087 js mov or push rex.WRB xor or xor (bad) add mov and sub jrcxz (bad) loope movsl test jbe (bad) (bad) sbb es pushq rex.WX (bad) lret loop xor or lods (bad) pushfq sarb add je push int loopne xchg mov andl pop sbb ss rex.R loopne movabs scas loopne stos clc repnz rclb (bad) adc pushq rex.X add (bad) out rex.WB (bad) jl (bad) xchg jp loopne sub fisttp (bad) jo repnz fucomi and cmp jbe cmp cmc jl xchg mov je adc (bad) jmp callq add in xchg (bad) or cmp cmpsb xchg rex.WRX imul icebp subl jle mov ss in movabs xor cmp lock jmpq movabs jae pop mov (bad) rex.W mov and mov movsl (bad) loopne cli cmp pushq jge (bad) mov adc loopne cld (bad) push (bad) xchg xor xor add lods repz push pop jne rex.W out fs sarb sbb es test (bad) in test xor rcrl xchg mov sub loopne (bad) xchg retq mov test movabs mov push (bad) loopne insl jnp leaveq mov sti xor cmp pop cltd loopne push fstpt rcrw (bad) test sti cmp jmp cmc outsb adcb xchg loopne or (bad) mov xor fdiv out (bad) sti push in retq sbb cmp xchg xchg repz adc jge movsb jmpq (bad) rorb sub pushq out (bad) sbb push (bad) ja (bad) jl pop cld sti cmpsl mov add adc mov or fdiv and xchg sub stc pop loope bnd pushq flds mov mov in out loopne push movsb xchg and loopne mov in pop cli fsubrl movabs and gs sti rex mov mov stc nop mov pop xchg rex.WRB jne mov test rex.RB ss mov sbb lods sar (bad) jbe retq rex.RXB (bad) jb xchg xchg sbb jno xchg test out xchg xor rex.RXB (bad) mov pushfq or (bad) iret adc insb add repnz loopne sbb pop jne add jbe (bad) out pmulhuw (bad) movabs subl sub (bad) stos movabs and stos adc pop (bad) adc iret rex.WRB (bad) fs negb fldenv (bad) (bad) (bad) rex.RB pop lret mov pushfq repz callq or add and out rex.X rex.R insl jge stos lock icebp add pop rex.RX mov rcrl and lods movabs outsb int3 test jo mov mov ror push (bad) nop incl push add pushfq push sub pop cmpsb leaveq sub insb (bad) push add jrcxz (bad) xchg imul (bad) fs test (bad) in jge jmp sbb mov adc lea jo add pop jno and lret (bad) or imul pop jno sub scas loop scas fwait callq ficompl push push xchg sbb (bad) mov and jle mov pop mov mov mov (bad) jmp jrcxz loopne test mov mov adc (bad) pushq mov jo pop stc test jle,pn rex.WRXB cmp lock sbb jp rcrb xlat sub (bad) in pop rex.X jne cmp stc push test rex.WR mov outsb repnz decl (bad) and lods mov sub rex.WRXB rex.B out lret rorb in add adc rcrl rex.R rex.RXB pushq lret sub (bad) sahf std hlt (bad) rex.WB sub rex.WRX test adc data16 (bad) pop movabs retq (bad) mov hlt rex int3 stos pop jns ds mov int3 in pop jmpq and or pop pop (bad) rex.WRB cmpsl insl cli rex.RX cli sub stos mov jg cmp sbb sbb test jl pmaddwd jb pushq push (bad) out fnstsw pop cs fnstenv (bad) and nop (bad) movabs rex.B rex.W stc pop sub jmpq fnop shrb xchg mov rcl jae pop push and scas std lahf sub (bad) adc ffreep mov rorb out mov (bad) (bad) sarl movabs out add cmc insb pop (bad) (bad) mov cwtl (bad) out rex (bad) mov cli imul sub jo int xor (bad) adc pushq rex.WXB ror push or sti jmpq xor jae push in jg (bad) outsl (bad) sahf mov mov (bad) enterq push mov add pop jo jnp jmpq outsb movslq cli rex.WX retq icebp jge paddb lods (bad) scas mov lret mov sahf mov lcall rol cmp fldenv (bad) (bad) sbb (bad) (bad) push outsl push (bad) (bad) jbe retq jbe (bad) push add loopne fwait nop xchg movabs cwtl xchg test shl rex.XB rex.RXB sbb lock (bad) pushq cmc xor push pop or fdivr pop (bad) rex.WXB js xor mov (bad) sbb pop jle add or jmpq (bad) add rex.X rex.WX (bad) xor mov sbb rex.R or xchg or mov jb popq or roll (bad) adc ja jae movsl lret jno cltd not scas sub movabs cmp loopne cmp jno retq sub xchg sub fs sbb (bad) fisttpll (bad) mov push (bad) callq scas jmp add notl loopne sbb (bad) sbb jnp mov loopne stos lret mov xor pop jmpq lahf cli (bad) retq mov pop movabs add pushq loopne push mov rex.RB cmp fucomi sbb sbb xchg mov outsb fiaddl push (bad) jle adc mov sub in out jae cmp test jne mov sub mov push sar mov mov adc in leaveq cmp rolb xchg (bad) loopne int3 test rex.RXB mov add xchg cmp sub (bad) adc sub shlb (bad) jmp jle pop or lret add clc rex.WB data16 addr32 loopne xchg je adc cmp addb jne push cmp (bad) add add nop loopne mov (bad) (bad) (bad) mov or sub cld (bad) rex.RB xlat cli (bad) sbbl cli xchg test fstps or and xchg lret ficomp fistp retq (bad) in popfq mov xlat sarl cmp movabs jbe jae jns movabs rex rex lock xor outsl rex.WX jp addr32 (bad) scas cmp xchg hlt pushfq (bad) rex.WRX ds cwtl rex.WRXB int3 (bad) (bad) loopne sbb (bad) jns mov andb jrcxz cld pop fidiv loopne sub pop rex.R loopne xor mov test jae imul movsl rex xor (bad) (bad) jle rex.XB and (bad) and rex (bad) cmp rex.RXB sahf nop or test mov pushfq loopne std loope (bad) scas (bad) (bad) or push push and sti sahf and movabs or jmpq add and rex.RXB rex.WRB mov xor (bad) fs fild (bad) movabs loope (bad) (bad) (bad) cmp jmpq rex.XB (bad) cwtl or loopne mov movabs cld cli xor push loopne pushq pop (bad) (bad) loop lret adc loopne test jnp movabs add jae (bad) xchg js in imul test cmc callq in (bad) js xlat cmc in loopne pushfq mulb (bad) rex.XB rex.RX (bad) movsl cltd mov loopne (bad) sub cmp or popfq movabs cld loopne (bad) mov sarb lcall (bad) (bad) data16 push cmp loopne repnz (bad) ds jle popfq cs jg sbb xchg (bad) rol rex.W xor lods test loopne (bad) pushq xchg loopne sub (bad) callq push mov test sbb (bad) loopne rex.X fs (bad) in (bad) loopne rorb leaveq mov xchg and lea xor push addr32 (bad) stc rex.X cs sub enterq fcompl movabs rex.R mov xchg rex.WXB jl xchg (bad) jmpq cwtl xor incl imul mov sarb lahf in add add xlat repnz int jl cmpsb in roll adc mov sbb ja (bad) rorb cmp jle rex.WRB mov xchg ficompl loope cs xchg fstpl out jmpq sub sarb fs lods jg fcomps movabs lods enterq jl mov sbb (bad) (bad) (bad) jmp es rex.W adc fs incl out jns rex xchg pop dec clc xchg outsb (bad) rex.WRX sub pop add mov sbb jrcxz out (bad) jge rex.WR jmpq mov movabs (bad) (bad) cli adc in mov movabs xchg add xchg fidivrl mov (bad) movabs rol out and push or rcrl xchg (bad) mov jmpq test mov pop mov (bad) rcl rex out sbb addr32 (bad) retq and loopne sub jp (bad) sbb jb andl nop loopne popfq out loop movabs rex.WRX cltd int imul (bad) xor sbb pop cwtl clc movabs cmp cli and sub cmp cli push and loopne movabs cwtl or loopne insb (bad) cmpsl rcr out sbb std cmc pop (bad) xor jnp jmp rex.WXB sbb pushq es mov lock jb and (bad) cmc sarl (bad) idivb adc pop xchg pushq scas (bad) xchg loopne xchg mov in and adc pop (bad) mov out (bad) lahf xchg sti imul sbb orb push fisttpl rcrl pushq rex.WX loopne xchg clc stos movabs (bad) adc rex.RX jle out repz (bad) out jmpq nop rex.WRB stos (bad) leaveq jmpq es cmp cmp cli (bad) fistl lods shrl js loopne pop sbb loopne jrcxz (bad) pop in leaveq loopne nop rex.RXB lahf in mov rex.WRXB outsl movabs loopne jl sbb or sub movabs icebp lods iret and test pop lret in (bad) (bad) mov jae mov movslq and mov adc cmp (bad) sbb rolb mov jns (bad) movabs add movabs cltd cmp imul jrcxz mov (bad) repz loopne in fimull (bad) add add lods (bad) leaveq sti add push adc sahf jrcxz mov out leaveq (bad) scas push add cmp jp jge pushq jg gs rex.WR loopne icebp fcompl mov pop (bad) in cltd xchg rex.WXB insb adc callq rex.WRB jmpq hlt es cmp sub (bad) pop retq decb test adc imul stos and rex.WR cmp add fisubr jmpq jmpq je and xor push mov incl pop (bad) jle sub loopne (bad) push and jno fcompl xor rex.WRXB movabs and pushq add fidiv sub (bad) rex.WX cli lods cli cmp (bad) loopne (bad) mov fidivrl out (bad) retq pop jb mov xchg lock mov loopne shll mov cmc pop rex.WRXB loopne and retq cld mov iret movabs mov (bad) and jo sub xlat es cwtl xchg mov loopne (bad) add lret (bad) loopne push or xchg rex.B (bad) loopne jp cli rex.WX addr32 movabs (bad) lods mov pop (bad) adc dec movabs (bad) sub mov test insb lea jo loop cmp (bad) (bad) adc rex.WB icebp repnz (bad) or in icebp iret mov in xchg mov sarl orl cmp sbb adc popfq test icebp gs stos stc stos sbb sub (bad) jbe add pop (bad) adc fwait test (bad) imul ss (bad) jmpq xchg rex.B rex.WRX flds and mov xlat (bad) (bad) retq jp pushfq and mov push (bad) movabs (bad) adc in cmp jo fs push popq movabs mov roll push ja pop (bad) adc (bad) cmpsb stos jmp rex.WX mov (bad) lcall lea mov sbb andl cmp (bad) cli mov (bad) pop repnz cli test sub pop (bad) movslq push pushq sbb sub lret or (bad) lods andl sbb (bad) and loopne mov int3 loopne pop (bad) imul jge fnstcw (bad) or imul cmpsl rol loopne in fmuls sahf imul loopne rex.WR add xor insb xor sahf fdivl cli jo mov lods xor adc movabs mov je loopne sub enterq pop xor cmp pop add (bad) xchg and mov nop leaveq add cltd or jmpq negb xchg in push (bad) xlat mov and lea icebp adc (bad) rorl fldl scas push sub lret jae (bad) cmc movslq callq push jbe (bad) lahf fdivrl incl (bad) rex.WRXB or ror mov adc cmp rorl fldt mov insb jnp jno pushfq in in (bad) push rex.W mov push fwait sbbb jrcxz scas or and rex.WXB mov in adc sahf outsb clc adc (bad) movabs mov or cmc (bad) mov adc retq jle scas and int (bad) out (bad) pop add stc and xchg adc je nop stos (bad) out rex.WX (bad) (bad) (bad) rcll (bad) cmc (bad) rcrl mov out (bad) sbb movabs (bad) icebp xlat (bad) (bad) cmp (bad) ds jp sbb pushfq pop fsubrl test iret pop pop (bad) sub pop loopne xchg out cmc fild cmp lret rex.RB (bad) movabs rex.W (bad) mov movabs jno mov in scas mov (bad) push xchg leaveq fisubl cli (bad) loopne sti pushfq cmp fcomps sbb jge int3 mov rex.WRXB addr32 cltd je stos enterq rclb (bad) jmp mov lcall xchg test addl sbb vpunpcklqdq icebp out movabs test imul jnp (bad) lock (bad) pop pop (bad) rex.WXB rex.RX cwtl retq push pop loopne imull callq lods jno mov fucomp (bad) repnz cmpsl es (bad) movsb int3 xor add lods (bad) movsl clc iret sub cmc jb cmp in mov jne rex.WX or (bad) cs movsl rex.WRB pop loopne repz stos xchg sbb add (bad) loopne sti int (bad) (bad) xchg pop loopne cmp xor cmpsl int3 pop rorl rex.RB js cmpsl repnz jb idiv xchg jg sbb andb out rex.RX (bad) imull lods movabs imul out lret movabs test loope movabs cwtl xor pop orl icebp retq mov xchg cmc loopne and xlat in (bad) sbbb jne (bad) loopne adc retq out push sbb loopne push rex.X mov (bad) movsl fbld xor loopne cli fcmovbe mov jne popfq mov (bad) (bad) (bad) in pushfq xor (bad) xor fs leaveq movabs (bad) outsb sub fcmovnb pop or cmp popfq (bad) in loopne xchg (bad) mov test sub push mov mov (bad) in rex.RX repnz xor push adc mov popfq jl mov int sbb rex.XB test neg (bad) mov fxch popq (bad) jp xor loopne divw loopne jne add lret adc jmpq (bad) xor add loopne add ds and sub in out rex.WR lods mov rex.WRX push movabs jns orl add mov push loopne xchg (bad) rex.WRXB rex.B jnp push enterq loopne rex.RXB inc and callq rex.WRXB adc (bad) mov jne in rex.WR xchg test int3 sbb add repnz (bad) add jbe mov loopne add loopne rex.RXB pop add fisub jmpq add xor (bad) or rex.W pushq cltd or mov rex.RX or xchg add stos sbb jrcxz (bad) (bad) mov loopne xchg cmpsb pop je sub incl mov fstpl hlt sbb jmpq mov (bad) pop in lock gs movups rex.XB xor pop shrl (bad) rex sbb mov leaveq sub fcmovne movsb lcall (bad) (bad) mov (bad) loopne mov rex.WR test fdivl xchg add pushfq (bad) xchg fldenv mov mov mov (bad) imul xchg add movabs rex.XB ss add loopne jg mov lahf adc (bad) movabs adc addl adc cltd mov (bad) popfq or xor lret loopne jl in mov rex.W fisubrl cmp clc adc enterq scas rex.RB (bad) mov sub (bad) and rex.WRX ja (bad) insl roll loopne lret rcl or (bad) loopne jnp jg (bad) hlt gs rex.RXB mov (bad) xlat std popfq stos jae xchg xor rex.RX loopne add sahf loopne movslq fstps jle xor (bad) (bad) xchg (bad) mov jge test sbb rcrb repnz loopne mov mov in sub and rex.W addr32 in lock rex.RXB (bad) repz pushq (bad) (bad) mov stos cmp repnz (bad) rex.WXB rex.RXB jno xchg push hlt je and jb mov (bad) fldcw lahf iret mov rex.W movabs rcrl rex.RX lock jp outsb mov gs stos repz sbb mov (bad) fisttpll mov pop jge test xor test mov cltd adc imul xor movabs pushq (bad) mul test in test xchg rex.WXB mov ficomp mov xchg xchg scas fstpl stc and sbb out retq jae (bad) mov (bad) out sbb sbb rex.X rex.RXB fs mov add jg int xchg loop js cs rex.WRXB xor in or adc pop rex.WRB push (bad) loopne (bad) (bad) cmp pop sbb jrcxz test mov sub test (bad) retq loopne std stos callq jrcxz push in (bad) and adc movabs mov (bad) je out test lret in mov sbb cltd pop or push (bad) loopne add rex.RB adc jne pushfq mov es jg (bad) stos loope mul enterq popfq out fs jb (bad) (bad) (bad) mov loopne (bad) or ss fsubrp jae stc (bad) in cmp (bad) movabs sbb fcompl mov mov or or imul mov stos std (bad) and push (bad) decl lret (bad) data16 xchg loopne ja (bad) pushq (bad) push loopne rex.WRB clc jns loopne in mov nop movabs sub jno cmp pop (bad) lods cltd cld ficompl fnstsw and imul mov xor loopne jmp stos rex.X out jl jge stos and enterq loopne mov (bad) adc sub mov or rex.RB loop jnp,pt jb sbb test in (bad) push lahf sbb or inc imul jle rcll (bad) (bad) (bad) mov xchg js adc jg cmp (bad) sub (bad) cmp add movabs movslq pop mov (bad) sbb cmp sub pop push jge int3 adc (bad) (bad) xchg (bad) callq fs rex.WRXB in (bad) adc (bad) add lock (bad) xchg stos xor movsl add cmp jg int jbe (bad) xchg push fildl fimull sbb (bad) pop xor (bad) sbb ja xchg rex.RX out and or mov scas (bad) retq (bad) rex.WRXB rex.B (bad) or sub (bad) outsl sub (bad) shr outsb sbb in test (bad) pop imul cmp (bad) out loop xor rex.WRXB insb push (bad) cli pushfq mov push sbb in (bad) lea xor in retq pushq jg xor lcall xor sbb pop fstpt fnstcw cwtl in rex.XB stos (bad) (bad) xchg lea fmul (bad) mov sub lcall out adc movabs and test cmp (bad) in mov rex.WX xrelease fwait loop (bad) sbb (bad) loopne mov rex.X mov nop jge mov in or adc sub je mov and add cmp (bad) sub (bad) movabs rex.WXB int3 mov rex.WRX mov rex.W xor cmp mov rex rex.W lock mov ja xor rex.RB out sub pop hlt nop sub adcb loopne adc in ljmp xchg loopne out test movabs rex out mov sbb cld lock lret (bad) rex.WR sbb int fmull xlat mov add rex.R push lods (bad) rex.XB (bad) fmull rex.RB ja loopne out adc mov add (bad) fsubp (bad) sti push pop shlb mov sbb adc loopne jne fmuls pop insl sbb imul jo pop xor enterq out xchg mov (bad) and adc mov lret cmp or (bad) callq stos repnz imul flds mov test sbb dec pushq out pop orb sub jnp rolb mov mul (bad) incl xor xchg xor lea loopne es iret fs in xchg rex.RXB jg adc cwtl add lahf jmpq (bad) jg pushfq or lods mov and ss sub mov push sti (bad) loopne sub (bad) loopne rex.WR or and (bad) fstl ficoml sarl sbb hlt mov shrb sarl lods fsubrs (bad) (bad) rex.X jrcxz repz rex.WXB test loop and pop in movabs sti sub sub (bad) cmp retq adc pop mov jnp sub push movslq sti (bad) cld or test ds es (bad) enterq movabs gs or rex.WRXB and outsb data16 (bad) jmp sub (bad) mov jns add movabs data16 icebp imul add rorb cwtl clc sbb cmc fs sub cmp (bad) addl adc jge loopne jo rcl mov rex.WXB and (bad) mov loopne push jb mov jge loopne or (bad) (bad) (bad) rex.XB rex.WRB (bad) jo and pop (bad) xor stc rex.WXB repz (bad) shlb (bad) rex.R push sub pop mull rex.RXB xchg mov (bad) or (bad) loopne pop mov jbe cwtl sbb in sbb adc out cmpsb movabs addr32 sbb nop enterq rclb rolb mov lods and int3 lret adcl cmp (bad) rcll (bad) rex icebp lret (bad) jrcxz cmp jrcxz adc lea mov jbe jrcxz retq adc (bad) jmp (bad) (bad) mov and sbb iret sbb fwait sub loopne mov addl mov and jl nop gs (bad) out jae sub sub movabs mov xlat mov (bad) adc (bad) divb (bad) shrb sbb rex.WXB lock callq sub or out jg out rex.W jno out pushfq mov add lret es icebp pop xor adc adc add sbb pop or lret mov icebp sbb (bad) (bad) insl jge jns pop xor rex.R rex.WB push (bad) sbb sub cmp (bad) and test (bad) (bad) add xor lea popfq repnz or add lret fadds out rol pcmpgtw cmpl pushfq pop loopne (bad) pushq fsubrs mov rex.WX out (bad) jg es (bad) (bad) sarl rex.W stos loope insl cs push (bad) mov (bad) jmpq loope rol mov hlt mov repnz and mov popfq mov (bad) shll push cmp rex.WR in loop enterq popfq sahf movabs xchg idivl xor (bad) (bad) sbb mov movsl push fdiv imul outsb rex.RXB add rex.RX or (bad) fiaddl and lods (bad) pop jg add (bad) mulb int3 fwait (bad) callq in (bad) movabs rorl (bad) mov fisttp xor (bad) push cmp mov xorl in iret cmp xor icebp fidivrl adc test (bad) cmpl in jnp xchg mov repnz (bad) ds push push int gs sahf pushq imul retq mov push jmp and (bad) (bad) loopne je and mov divb outsb sub sahf loop shl xlat jl pop data16 (bad) xor pushq mov movabs rex.RX lahf (bad) je adc loopne xchg and cld adc mov mov mov xor jae scas lock out (bad) mov and mov icebp test out movsl gs add (bad) mov ja cltd xor fldt (bad) mov (bad) rex.XB add in mov jne (bad) jae jnp jbe (bad) (bad) xor (bad) jle mov (bad) pop (bad) test out xchg xor xchg retq stos (bad) xor cmp retq mov int3 sub xchg lea scas lea push fsubrs fnstenv mov and rex.X (bad) mov xchg (bad) sub xchg (bad) xchg adc decb sti imul mov movslq mov mov je int3 movabs (bad) outsb and mov shlb test gs fisubrl stos rex.WR pushq jnp lcall rcrl imul sub lods pop add or fs jle or movabs adc vmaxpd vpsrlw xchg (bad) subb (bad) sbb jl mov test jb (bad) out pop es push push cmp xchg mov fcmovnu or insl xchg fs movslq (bad) sbb fistl repnz icebp or sub or and (bad) xor xor jo pushq sub (bad) repz and mov in pushq jrcxz cli shll add mov xor movsl imul xor (bad) pop fisttp (bad) push (bad) loope and cmpsl (bad) jp or loop scas mov imul rex.B es pop rex.WR rex.RB pushq xchg push mov mov loope lret sbb sbb lock pop (bad) rex.WX (bad) mov jp sbb sbb in (bad) (bad) clc (bad) cmpsb in cmp leaveq add popq mov mov sub (bad) jle in (bad) cmp js insl xchg jge out popfq orl insb pushq pop addl and xchg (bad) xor xor mov (bad) je movabs retq popfq push (bad) sbb (bad) out and (bad) out (bad) adcl outsb test (bad) lock cmc (bad) add mov pop movsl mov pop out (bad) in (bad) int3 out mov movslq cmpb jmpq test loopne adc sarb (bad) add psllw fstl add clc jns cmpsl out sub xor or fsub jnp mov test loop lods jp (bad) rex.WRX pop jmp add mov xchg xchg push loopne test in rcrl fstps jae sub outsl fcoms or (bad) cli lcall in jg shr pop sub ficom rex.WR and (bad) loopne rex.RB sub cwtl roll icebp jno push adc loopne es cltd (bad) pop gs mov mov rex.WXB (bad) fsubs out leaveq out pushfq rex.WRXB (bad) loop fsubp rex.RX rclb add (bad) mov sahf pop mov adc in mov mov jmpq rex.WRB jo insb sub jmpq pop rex.XB loope rex.WRB sub xchg mov adc adc mov pop movabs fcmovnb mov ja xor cmovg test mov or mov sub notb xchg (bad) rex.WRXB jbe push gs rex.WRX add rex.WRB add mov movabs loopne lahf clc movslq mov mov xchg retq pop xchg rex.RX xchg fldcw pushq rex fistp (bad) icebp sbbl in or rcpps mov movslq (bad) sub push pop push (bad) enterq mov jl or mov jbe leaveq and push rex.RX (bad) adc push mov add retq sbb loope (bad) jb out mov movabs jl stos clc icebp gs mov xchg rex.WRB cltd xchg stos mov insl rex.WXB je fdivs retq (bad) xchg repnz (bad) and xchg (bad) (bad) loopne test (bad) loopne sti (bad) mov rex.WXB rex.RXB (bad) callq mov or sbb int or sbb rol (bad) loopne test xchg add mov repz movabs cmp sti repnz cli (bad) scas (bad) stos or and addr32 icebp and sbb and ja repnz lock callq rex.WR sub add jge rorb or jo loopne xorl loopne je push add leaveq sbb clc mov push xchg popfq loopne callq rex.B jbe xor (bad) sahf lret loopne rex.RX mov int loopne sbb ja loopne test (bad) xor jo movabs int rex.WB mov rolb repz jbe movabs or (bad) cli jmpq jg cmp (bad) pop rex.W rex.W rex sbb in loopne xchg mov in insl cltd loopne mov (bad) and fucomp imul movsl lcall xor movabs xchg cmove test push adc (bad) mov addr32 faddl mov push sbb rex.WRX repnz (bad) loop and jo jrcxz mov faddl mov cli and cmp (bad) adc adc (bad) rex.RXB test jmpq or in and pushfq mov fwait add xor adc test bnd mov shl movabs sahf and rex.WRX fwait (bad) cltd jrcxz rex.WXB adc (bad) movsl hlt rex.WB icebp (bad) mov scas ss pop in sbb push cmp add and test mov loopne sub rex.WRX (bad) movabs xor and jmpq fcomi cld es push (bad) icebp movabs movsb and sti js loopne nop push jg add leaveq loopne fsubrl test psubd adc mov lods jrcxz stos push addr32 add adc cmpsl adc xorl movabs mov xchg rex.R and and ds movabs test ds loopne (bad) fistp fsts insb (bad) stos loopne movsl clc cmp or mov movabs mov hlt cwtl leaveq mov fistl gs incb jo jp int3 mov pushq test movabs jp loopne (bad) (bad) and sahf cmc es scas rex.WR push stc movsl movl sbb xchg in (bad) lret pop mov sbb and callq jmp mul sub fnsave and rex.WXB xchg cmpsl cwtl (bad) jmpq xchg cmp sti and out loopne int repnz jnp pop xlat loopne or and (bad) loopne xor out or pop int3 and loopne icebp rex.R push sti dec push push cli mov nop adc repz rex.W cmp fwait xor push pop pushq jge sti (bad) loope mov mov addb ds movabs scas mov jae adc (bad) fimull xor (bad) loopne mov rex.W mov gs cld (bad) mov fsub xchg fucomip pop xchg and (bad) push jmpq stos movslq (bad) (bad) sbb mov cmp jrcxz and fidiv icebp xchg icebp and (bad) out (bad) mov loopne push test rex.XB xchg loopne mov rex.WXB in and (bad) mov es fsubr shl (bad) jge and mov (bad) mov pop adc rex.RX fnstcw add xor (bad) and mov rex.B (bad) fbstp jge xchg or and add retq adc rex.RX (bad) rex.X (bad) cmp mov xchg retq nop sub jo loop push rex.WRXB movabs data16 clc movslq and loopne hlt cltd xchg add ss stc sbb shlb (bad) (bad) pop fmul (bad) mov pop ja cld push push popfq (bad) or loopne mov rex.WX lods push xchg cli adc xchg cltd loopne ja rex.B lock (bad) out pop jrcxz out (bad) in add add cmpl push test xchg sub push rex.RX hlt gs (bad) rex.WR add cmp roll adc (bad) pop mov test mov (bad) sub mov (bad) cmc fs clc in rex.WR idivb mov rex.WX loopne sub sub (bad) jrcxz (bad) roll mov sub jnp lret mov rex.RB rex.WR cwtl movabs rex ss fs retq and loop repnz (bad) lods rex.WXB sbb inc cmp or movabs in (bad) xchg cli loopne fs subb (bad) fmuls (bad) cwtl jo fs (bad) mov mov loopne fdivs pushfq lret (bad) loopne jge cmpsl mov loopne mov cmc jmpq (bad) nop leaveq (bad) rex.W add retq jp and jmp mov and test ffree movsb retq loopne (bad) (bad) xor loopne push sub mov cmp (bad) push push (bad) xor test (bad) xchg sahf (bad) mov out cmpl es lea and out mov in mov jg rex.WX (bad) xchg add (bad) cli lods outsl mov (bad) loopne (bad) jp movslq xor mov imul rex.WB rex.RX rex.R xor xchg data16 (bad) shlb xchg scas mov jl cmp psubb (bad) jrcxz data16 insb stos pop pushfq (bad) mov add rol nop mov mov (bad) sub and jno cmp movabs cmpsl adc xlat (bad) jns (bad) movsb inc test xorb adc loopne fwait sub out push ja sarb add mov pop rex.WRXB addb in (bad) fisttpll std fsts xlat add adc ja mov (bad) fldenv xchg loopne xchg (bad) test sbb pop clc rex.WX orb stos mov loopne movslq cld out xchg xchg adc mov cmp cld xchg jae (bad) retq xor movsl (bad) data16 js movabs rex.WX or fcom jo enterq add cmp loopne mov jns rex sub and jrcxz test negl test movsb in lret cld adc pop xor movsl add cmpsl mov sub cli (bad) jg cmp sub (bad) repnz xchg and lret (bad) out nop (bad) jae xor pushq jnp or adcl ja mov mov xchg push adc subb (bad) rex push ds mov push fsubr loopne sbb movl sub je (bad) in loopne test (bad) xchg cs rex.B rol test mov xchg mov sbb pop out push loopne mov fstpl (bad) ja leaveq (bad) (bad) fucomi movsl scas jl nop and mov loopne push sub lahf xchg sbb fs jp loopne or movabs pop cli sub repz mov outsb (bad) cld lods jno xchg imul and sbb icebp fimull pop movabs xlat sub mov popfq flds imul cmp movabs lret movabs push loopne (bad) and (bad) (bad) mov sbb in jne es mov icebp loope repz test (bad) stc lahf (bad) xchg loopne cs sbb callq pushq push fs andb pop add hlt xchg icebp mov sbbb xor lock add rex.RX cmpsb pushq push js movabs in data16 rex.RB loop (bad) repnz jg icebp sbbl cwtl lock ror outsl enterq addr32 sbb loopne (bad) scas rex.XB rex.WB xchg sti xchg (bad) insb push (bad) mov rex.WRX mov loope loop mov pushq jb xor ror adc push lret jns in rex.WB (bad) (bad) insl or adc fadds jns xor movsb mov leaveq test mov or xchg loopne jle movabs gs (bad) movsb (bad) xchg sub shl pushfq rex fstps enterq pop mov xchg incb in rex.RX (bad) movabs mov jl loopne out jge mov ljmp cmp lods mov es (bad) iret sbb jb xchg push cmp imul loopne (bad) sbb mov loopne cmp (bad) add (bad) rex.R (bad) (bad) (bad) stc (bad) popfq mov movabs stos cmp adc and int3 enterq rex xchg add (bad) mov rcrb callq sub (bad) (bad) out (bad) (bad) in loop sarl mov out (bad) cli loop mov xor push (bad) in adc loopne push (bad) mov push ror cmp or repnz outsb ja mov out out imul and sbb cli movslq jno rex.XB (bad) in pushq mov adc (bad) fneni(8087 adc jge cmp in jle xchg add sbb mov mov push fcompl out rex.WRB rorb jp (bad) cld pushq js sub mov loopne jle or xchg xor cld xchg adc nop loopne mov (bad) callq mov shll (bad) repnz ss mulb (bad) test repz test xor jl sub xlat mov in xchg adc lods outsb push (bad) in (bad) and lods adc xchg mov sbb adc mov loop (bad) sbb mov rex.WRB int3 sub or rex.WRX add js sbb xchg (bad) leaveq iret (bad) mov sarb outsl pop adc xchg (bad) pop adc (bad) repz sub xor jno jrcxz sahf scas xor in rcll xor and xor jb test (bad) test or jp add jbe pop jnp,pt mov rex.RX ja test add scas jp repz rol leaveq lock cltd (bad) sahf pop cmp iretw (bad) data16 idiv rex.X fs or rex (bad) rex.B iret callq add (bad) mov (bad) lfs push push sbb xchg and lock or fisubl adc in addr32 (bad) (bad) std cmp es mov cmpsb sub (bad) lahf std or decb (bad) sbb in in out mov sbb (bad) fcomps lret movaps jb push sbb iret jo pushq sbb xchg mov jb (bad) fstl (bad) pushfq (bad) push or rex.XB xlat rex.WXB out retq jno add in stos jge mov std stos sbb sub rex.XB pushfq js rex.WRX (bad) mov mov (bad) fdivr adc xchg and in jmp jle and rex.WRXB (bad) stos (bad) movsl cwtd mul (bad) movabs jb mov sbb test and imul rex.WRX jne popq and loope in xchg jp or movabs lock or cmp sbb icebp push (bad) push shl (bad) lret imull pop (bad) adc mov xchg rex.WRB addr32 shl push (bad) out mov rex.RX rex.WRXB cs callq shlb mov (bad) sbb jle mov (bad) (bad) or mov and pushfq nop loopne jrcxz movabs rorl jge xchg jmpq lods movabs mov nop idivb xor jae iret (bad) rex.WX fidivl mov mov (bad) (bad) jns mov mov xor (bad) sahf jp xchg sub jge add rex.WB jne in pop adc lods sbb and xchg jle loopne push mov pop jne and test (bad) cmpsl sub pushq mov (bad) mov mov rex.WR jrcxz pop sbb movslq (bad) xor mov xor rex.WRB push (bad) jbe jmp pop loopne cwtl stos vpsrad sbb lret shr rex.RB xor (bad) shl in mulb rex.WRXB pushfq jo rex.W loopne add rex.RX adc (bad) add rex.WX rex.RX mov adc movabs fwait loope add or rex.WX or loopne out cmp pop jbe test rex.X sbb adc fbld cmp std sub add sahf xchg mov lods or mov test fistl retq movabs loopne add lods test (bad) loopne (bad) (bad) add cld sub mov fld jg (bad) rex.B cmp lahf (bad) sti adc rex.WXB outsb pushq loopne rol adc mov outsb loopne mov rex.RX sub pop loopne cs rcl lock loopne jne in mov jmpq out imul push loopne and and scas js loopne sbb cvtps2pd mov rex.R rcl movb mov iret lret sahf rex.WRX (bad) (bad) loopne xchg cmpsl (bad) jp or xor rex.XB or repz stc fcoml mov callq mov (bad) xor pop cltd incl je (bad) cmp (bad) adc lret cmc loopne sbb xchg loopne cmp mov out jne pop mov mov (bad) es int fildl out xchg sbb lods pop std loopne iret jbe jp xchg cmp mov test adc dec in rex.RXB add movabs jns rex.R mov rex.RXB lods (bad) rex.XB mov jmpq adc sbb leaveq cmp popfq (bad) out loopne and (bad) scas xlat movsl (bad) (bad) loope (bad) push push pop and jg rex.RX xlat (bad) cmp (bad) loopne xor jo and mov mov hlt sbb cld frstor pushq cli rex.WXB or icebp jg movabs mov (bad) xor mov mov in jle icebp or stc and (bad) fstpt leaveq rex stc cld jo rex.WR or adc (bad) mov pushq jrcxz mov int3 clc (bad) pop insl rex.WR jle pushq lods mov jle shrl sub pop adc pop mov js cmp pop fidiv (bad) or adc mov jmpq xor push adc rex.WRXB cmpsb push jl negl sbb add sub or movabs enterq out add mov (bad) pop and stc add cmp sub lret sbb in mov (bad) jge loopne stos mov retq js loopne mov (bad) pavgb rex.RX movabs (bad) sbb cwtl lea loopne lods xchg mov push stos (bad) mov nop (bad) jmpq mul (bad) (bad) movsb sbb out (bad) push icebp loopne add or cmp fdivrs push (bad) loopne (bad) in mov cmp (bad) test cwtl cld rorl rcll cmc fneni(8087 insl outsb add jp int3 mov lret loopne mov loopne stos rex.WRXB cmc fyl2xp1 (bad) fisttp xor and jmp icebp pop (bad) (bad) fdivr rex.WX or sub orl fldt out xchg jns sub jmp (bad) fsub (bad) movslq loopne (bad) mov push imul pushq rex.WRB pop mov callq (bad) in addr32 sbb or in (bad) loopne push add push jge pop pop addr32 in jns icebp mov cli rex.W add xorb (bad) sbb (bad) adc jo outsl mov cmp retq xor pop (bad) xor gs cmc pop push movsb fidivrl add movabs rex (bad) cmp (bad) insl rex.WRX loopne jno mov jnp scas cmpsl xchg and mov test xor mov loop punpckhdq rex.R cmp adc xchg (bad) fmul jbe pushfq sub sahf (bad) movslq push (bad) (bad) (bad) mov lahf bnd or add callq cmp sbb pop mov clc mov callq pop pop mov movabs (bad) frstpm(287 (bad) push jbe vpshuflw (bad) nop xor jae mov cmp pop jrcxz out cmp mov mov sarb or jle popfq xchg in gs (bad) lret fildll rex.WR (bad) movsl (bad) sub (bad) ljmp sarl rcll pop in xor add imul fsubl (bad) mov fistl rol mov (bad) movabs out (bad) icebp add xchg and adc and sbb icebp addr32 xchg ffreep movslq mov mov and sbb test or test nop (bad) (bad) or jo pop (bad) cmpsl hlt shr xbeginq pop (bad) and and repnz or add jb js and icebp (bad) push adc repnz sub in fcoml fidivr push lods fwait (bad) sbb mul (bad) movsb imul adc xchg rex.WX (bad) ds cmp pushfq mov jg xlat test or push (bad) sbb jbe cmc push cmpsb (bad) pop xlat lock outsb (bad) outsl (bad) pop xor rex.W adc xchg xchg (bad) in adc mov (bad) cwtl ds jo adc mov xor rex.WRB sub adc jbe test movslq adc test pop sti rcr xchg fdivl int3 icebp insb popfq jae (bad) rex.WXB stos movabs sbb lock mov iret (bad) repz rex.W fadds lret (bad) xchg movabs sbb jno movabs mov lods shlb je (bad) (bad) and std movabs repz adc (bad) movabs xchg hlt push push decb popfq push lret mov sub (bad) stc popfq xor pop loop lret (bad) (bad) std rex.RXB rex.WRX sbb data16 ja movslq or je adc lods data16 add xlat cmc or jae adc jns (bad) adc (bad) (bad) mov sbb js rex.XB fstpl in cmp pop and rcll shl in callq ds and mov in push (bad) movabs rex mov rex.WX push sbb lret rex.RX adc fdivp sub repnz pop add xchg push xor jge orl rex.WRXB stos out jmpq cwtl sbb mov jo decl cs (bad) fdivrl hlt int3 rcrb sub (bad) (bad) sahf adc push (bad) ja and jb movabs pop xor loopne (bad) fidiv (bad) (bad) sti subl loopne std ja (bad) shrl rex.WXB testb cmp loopne loop pop jp stc xchg nop and scas test sbb push sbb cmp (bad) rex.RXB xorl lods popfq repnz rex.X out in pushfq (bad) sub mov in (bad) pushq movsl jrcxz imul jbe cmp cmp (bad) (bad) adc loopne (bad) (bad) popfq repz rex.WB sub cld mov jmpq cli rorb (bad) lock jno sbb mov or insb add in mov loopne nop (bad) push (bad) movsl leaveq pop loopne rex.X fcomip loop jmp and rex movabs movb mov jle xchg outsl in push leaveq lods xchg jrcxz pop xor sarb xchg loopne xor lock jle xchg pop loopne cmp xor lret cmp (bad) (bad) fs cmp or add mov loopne sub mov sub (bad) mov cli out int pop lods (bad) out loopne rex.X or sti insb (bad) (bad) jmpq movslq add mov sbb loopne pop (bad) jge sub fsub hlt sbb cld add loopne mov ss pop pushq lret (bad) jmp callq cmc xchg cwtl jmpq rex lock fchs or rex.X pop xchg lea or jbe loopne enterq clc fadd loopne pop shll mov pop and hlt mov jg jno xor rex.W pushq or rex.RX rex.W (bad) orl data16 fsubl pushq loopne ja lods xchg popfq rex.WX icebp jge mov fdivrs lock rex.WB jno or rex.X loopne out insb jae adc js xor sub xchg icebp (bad) pushq sbb sub adc test (bad) jo loope mov test fcmovne (bad) fdivrl adc add sub imul mov sub xchg jne bnd pop lods loopne cmp fisttpl loopne pop rex jbe pop (bad) in pextrw mov lcall (bad) push rex.WRXB rex.B and fmull add cmpsl shlb loopne (bad) fdivrs int out xchg jae and movsb xchg loopne (bad) xchg lods mov out loopne pop add rex.WX mov adc imul mov xchg jo cmpsb adc sbb jbe loopne and clc push test jmpq or sbb (bad) movabs pop flds rex.WRXB adc pop shr (bad) jge loope push add movabs and icebp (bad) movslq out iret jmpq mov loopne mov mov loopne (bad) mov jne sub fdivrl loopne xlat cmc add jle cmpsb rcll xchg (bad) jge (bad) iret or insl (bad) outsl and movabs pushq add mov ds add pop (bad) rex sub mov movsl jmpq je (bad) adc fcmovb (bad) rex.WR or mov (bad) mov lahf add (bad) js fmul leaveq rcll bnd xor lret in movabs out jo push orl (bad) cmpsb (bad) or cmc icebp jb (bad) shrb test or ljmp mov movsb pop nop push or sub (bad) or fimull es loop (bad) mov mov sub xchg cld adc rex.W xchg loopne jns leaveq jb cmp loopne (bad) (bad) adc (bad) ds add rcrb add (bad) cwtl xor loopne jmpq je loopne cmp xchg clc jl loopne jo mov not xchg rex.WX es loopne mov callq lods out push cmp or out jmpq mov or xor (bad) cmp loopne movsb (bad) icebp pushq adc flds insb loopne jnp scas add mov (bad) push loopne stos sub jmp pop cmp movsb callq (bad) out loopne fcoml jae jns imul pop rex.RB xor rex.WB pushq data16 and ss cltd cmp addr32 adc mov jno mov (bad) jne (bad) and sub xchg int3 test movsl mov loope stc add clc or test (bad) (bad) cli or mov loopne (bad) or xchg push xor mov (bad) rex.WX loopnel and sbb shrl movsb fstpl rex.RXB lahf (bad) add loope mov frstor insb mov retq leaveq lods rex.RB negb out fdiv (bad) in fsts icebp pushq mov mov pushq mov rex.W es and (bad) (bad) fucomip cld and (bad) lods xlat lahf and repnz fsubrs in or shrl loopne xor cmpsl loopne cld movabs notb ffreep cmp rex.WX rex.R out and mov xchg loopne outsl adc sub js add flds cmp movabs or (bad) add js lea or rex rex.WB xchg icebp (bad) mov stc repz pop rex.XB js in lret (bad) (bad) and retq or (bad) mov (bad) sbb mov popfq push movabs jl icebp xchg sub icebp (bad) or add mov pushq retq (bad) int fcompl loopne lret in (bad) xlat outsb xor mov mov adc jle push xor jl movabs data16 lods xor callq mov scas add xor lods (bad) rex.WR ljmp push add (bad) push loopne gs mov adc icebp shll (bad) pop decb pushfq mov mov adc or (bad) loopne add movsb xor xchg jo sahf jrcxz xorl movabs (bad) or movabs insb movabs std rex.WXB loopne lock sbb jg icebp stos enterq xor lcall movsl lretw movabs (bad) int xchg in cmp scas mov cmpsb mov sbb outsb retq shl retq push lahf (bad) jl xor add fisub jmpq retq movabs enterq mov fist fbstp cltd sub mov or out (bad) callq rex.WRXB xchg loopne adc hlt mov mov jbe cli outsl rol xchg movabs sarl mov xchg add xchg sbb jle scas sbb sub push gs cmp rex nop mov xchg jne loopne mov movslq (bad) mov lock (bad) jae or jbe loopne fsubrp mov mov loopne mov add jno pop in out mov stos retq movabs cmp rex.WB sbb fild and (bad) jo jb pop scas callq rex.XB lea retq ja insb rex.B loopne movabs cmc xchg adc rex.RB stos fbld mov mov and sub retq push add and mov mov jg sarl loopne mov roll insb sti and sub mov gs xor xor fmulp outsl rex sub out shl rex.RXB (bad) loopne in (bad) xlat shlb (bad) data16 jb movabs sub in popfq and shlb (bad) loopne rex.WXB jnp (bad) xor rex.WB sbb sub std sbb mov in push enterq pop loopne pushq ja push vpavgb stc out xchg (bad) scas (bad) negl push hlt icebp lret fcoml loopne out xor sbb adc loope repnz xlat mov fisttp rex.X jle stos add (bad) movabs cltd (bad) out (bad) stc xor and xor rex.WB loopne stos mov lock mov sbb push push sub (bad) scas int lret gs lea ja in retq lock and add int3 rex.WRB jmpq jnp (bad) adc in (bad) jb lock pop (bad) cmpsl loopne mov repz pushfq (bad) stos icebp mov gs movsl pushq leaveq rex.WB mov sbb mov movabs ds int3 movabs jmpq (bad) mov movsl jno or xchg xor test in in (bad) repnz push movsl cmpsl jg popfq stos fisttpll jrcxz cmpsb pop (bad) xchg pop mov and (bad) cmp scas adc mov jmpq movabs andl test (bad) imul in (bad) mov in nop (bad) nop std (bad) lret icebp lock jnp (bad) insl rex.WXB btrl retq and test movabs xor js jns jmpq jb (bad) mov movabs int3 xor repnz rex.RX (bad) rex.WR (bad) movsb and sub (bad) rclb or outsb (bad) rex.WRX pop mov and in (bad) (bad) pushq sbb add loop scas jo loopne cmpl in fsubs in mov (bad) cld (bad) (bad) or jne jno mulb rcl jrcxz push loopne js movabs sub pop loopne sub loopne cmpsl sbb imul notb lods rex.WRB rex.XB rex.B rex imul lods cmp loop mov cmp xchg cli jmpq and xlat cltd push rcrl (bad) sub jg jmp cmp jrcxz pop add movabs add movslq mov cmp jns sbb pop xor insb pop sbb mov or rex.X movabs (bad) (bad) cmpsb jns loopne pushq mov mov xlat xchg pop (bad) lea loopne cmp and add js movabs (bad) xchg test sahf cli js adcl addr32 subb movabs xlat lea sahf loopne adc in mov test mov add test jne sbb insb loop mov (bad) rex.XB rex.WRB je icebp (bad) (bad) fsubp or mov (bad) mov mov fwait stc rex.WB popq (bad) insb incb xchg scas sbb icebp lahf rcrb loop sarb jle (bad) stos sti outsb mov adc xchg lock xor (bad) popfq cmc jle test mov jbe loopne mov xchg mov jno mulb and adc xchg cmp imul rex.WRX ds mov (bad) rex.WR rex.B andb pop movsl loopne xor cmpsb pushq movabs js andl movsl or je js clc (bad) stos mov pop loopne sar rex.RB mov cmp enterq loopne and lahf xorb callq sar movabs xor in jb iret (bad) rcll ss retq pop cmp (bad) mov or jnp (bad) lret retq nop (bad) (bad) or rex.WB jp push out xor and out xchg imul (bad) jl rex.X out mov mov rex.RX movslq (bad) (bad) negl jns xchg rorb in fimull sub rex rex.WX cmpl and adc (bad) gs (bad) movsl loopne pop test fcmovu xor cltd movabs sub movabs (bad) cmp ss cmc sub mov in rex.WR sub mov mov adc sahf in sbbb (bad) (bad) jbe repnz cli jmpq adc xor adc push pop xchg rex.RX (bad) mov test lods cmpsl incl mov loopne rex.WR hlt mov sub popfq pop mov mov jbe or (bad) retq movabs callq decb mov xchg rex.R jae (bad) xor (bad) jrcxz test xor mov (bad) xor ss rex cltd callq not xor xor (bad) adc sbb in imul lret add pop rex.W lock jnp movabs xchg pop xchg (bad) (bad) (bad) retq ljmp jrcxz outsb rex.R (bad) repz clc hlt mov stos in mov cmp push ds (bad) push mov mov mov nop pop (bad) or (bad) and insb lock add or jmp sub cmp (bad) sahf rex.RB rex.RB and pop sbb test push rex.WXB rcll (bad) callq push adc divb imul cmpsb rex.B jp,pt xchg fcoml frstor jno callq in jg jns adc (bad) movabs push jp in rcll adc or sbb jl cld lret lahf sbb pop rex rex.WR pushq andl lret adc mov (bad) mov rcll ds rex.RX stc mov addr32 or xchg xchg subb xor jnp jo fnstenv rex.B jrcxz cmpsl pop movabs popfq retq scas int movsl jns scas not movabs adc jae js jge shlb and sub dec movslq push es or mov movabs mov adc lret mov (bad) icebp (bad) stos cmp popfq out callq outsl (bad) xchg lahf mov shlb (bad) mov mov jg,pn lods (bad) (bad) or cmp (bad) or test clc rex.WR insl addr32 lock mov rex.WX decl in (bad) cmp icebp cld rex.WRX jb pop cmp add out ss in fsubrs lock sub hlt loopne lods addr32 (bad) movabs icebp loope lods and (bad) shr icebp fwait subl rol loopne push (bad) movabs out (bad) js inc push push leaveq loopne pop add xor out scas (bad) xor gs cltd popfq pop loopne mov imul rex.B pop mov pop scas vpminsw (bad) mov loopne (bad) xchg mov rex.RB adc movabs test and cmp (bad) xchg ficom xchg or insl sar rex.WB lods push setbe pop loopne fisubl xchg jl and and fcomps (bad) mov frstor (bad) movabs (bad) or loop push scas rex.WRX (bad) pop and and nop lea mov push push imul rex.XB lods rclb pop add shr (bad) in push movabs iret and movabs pushfq sub vpunpckhqdq movabs rex rex.XB push (bad) xchg pushfq loopne or cmc sub cmpsl in or xor in popfq lret std sbb cmp movsb callq push rex.WRB rex.WB (bad) mov mov mov (bad) callq xchg outsl mov imulb shrl jae lret loopne push out or (bad) hlt or cmp in loopne (bad) push (bad) movabs out insl sbb (bad) sbb cmp add bnd in and cwtl out cmp cmp faddl xchg repz or lock jg nop out fnop add push sub (bad) pop addb repnz retq loopne mov (bad) rex xchg rex.X retq shr in sbb test and popfq rclb mov adc jo push or and rex.XB (bad) (bad) shl sbb cmpsl sub push rex.WB sti loopne decb mov (bad) repnz (bad) movsb xchg out icebp sub add rex.X or xchg imul loop add mov stos int loopne in jge test jmpq (bad) add shll xor rex.WRX test loopne mov adc pop bnd push or loopne adc retq sahf and mov fcmovnb repnz mov rex.WRB jle outsl jg (bad) jg rex.XB adc cmp fsub pop gs mov sub addps (bad) jno in jo (bad) cmc and push int3 loopne push out nop jg or jmpq enterq rcll jg loopne stos push (bad) movabs mov (bad) repnz test ficompl lock int (bad) gs stc mov rorb icebp rcrb std or outsl repz mov sbb mov sti cmpsb movabs lret mov (bad) xchg pop loopne xor xlat sub scas lods cmp pop loopne add (bad) cmp jle pop xor (bad) repnz imul loope lret lods enterq movsl and in hlt shrl sub shl leaveq adc (bad) cmp mov xlat lahf imul add rex es notb loop pushq ror mov or add (bad) mov xchg xor sbb movabs push pop pop adc lret icebp ficompl adc rex.WRB push and mov fisubl repz es mov sub gs jne scas loopne sarb in pop cli xchg rex.RB loopne shrb gs enterq xchg and std (bad) push popfq xchg test es sub movsl loopne push cmp (bad) (bad) push fldcw flds loop movabs xor push (bad) (bad) mov movabs sub mov push (bad) or movsl xchg mov pushq jbe (bad) adc loopne rex.W gs fnop mov adc lahf loopne mov xchg or (bad) mov mul or in fld jmp (bad) loopne clc pop test nop psubb and es rex.WRB rex.WR jno out jmpq lea and mov movabs mov jmp xorb test (bad) fucom pushfq cmp lock repnz frstor mov roll pop rex.WRB movabs xchg outsl mov cli rorb mov andl sti rex.B clc callq cmp add mov rex.WB rex.WRXB pushq jno mov pop sub rex.WX sbb cmpsb jmpq lea (bad) xor cli (bad) add lret clc movabs sahf xchg (bad) pop loopne add movsl (bad) ds or mov insb rex.XB xchg outsl leaveq cmc jb xchg mov xlat out add mov gs cmp jle loopnel callq repz (bad) movabs callq mov or popfq imul cli loopne icebp sbb jno and pop (bad) fisubl (bad) fucomp retq cld fwait xor int3 movabs addb adc int3 repz outsb mov movabs int jo mov push loopne (bad) and xor mov sub xor out (bad) jg out add movabs mov mov (bad) loopne mov fdivrl loope lret sub jg (bad) fadds jno retq and and add add retq pushq scas cli (bad) jo cmp std in lret sub (bad) subl hlt pushq lock adc jbe rex.WRX mov mov cli or movabs rex.WXB mov in pop jmp retq (bad) cmp push sub fnop pop movabs (bad) (bad) loopne mov mov sti mov add (bad) subl movsb retq (bad) loopne jbe pop and push push ds scas stos ror es cltd in (bad) (bad) jmpq push in scas in imul punpcklbw (bad) out in mov sub orb jp and mov mov (bad) in (bad) and xor fildl jno icebp xchg (bad) jo mov cmp (bad) scas insl adc rcrl jb fstl rex.WX stos jg cmp data16 mov rex.WR rex.RB loopne loop mov nop xor cmc (bad) rex.WRB and loopne jo pushq fwait lret loopne (bad) fsubs in mov push pop icebp fildl in movabs in mov and rex.X (bad) pushq test (bad) rex.RX fs (bad) nop adc xchg add (bad) pushq or cmp rex.RXB div sti (bad) and jb (bad) iret xchg loopne (bad) repz (bad) cli push mov incl add lea rex.WXB sbb and add retq add loopne sbb out xchg shl (bad) mov cli callq adc add xor sbb in out cmpsl xchg rex.X scas (bad) mov outsb (bad) fnstsw (bad) push jb icebp stc mov loopne xchg mov outsl loopne mov mov push cmp loopne sbb mov loop popfq cltd add mov loopne mov pop subb rex.WB (bad) sbb xchg nop loopne data16 jg rex.WX loopne lahf adc pushq cld (bad) nop rex icebp movsl sbb jns fsub scas (bad) movabs rex.WRXB rex.B (bad) mov (bad) jmpq fwait add (bad) (bad) js sbb (bad) (bad) cmpb add mov (bad) (bad) adc lahf test shrb or xchg int outsb rex.XB test rex.WR rex.WB (bad) mov push rex.RB out mulb push callq insb lahf xor mov (bad) fmull xor loopne rcll in jg cmpsl std js out rex.RXB pop (bad) sti out divb movabs jb adc mov pop sub (bad) clc (bad) cmp xchg cmpsl sbb xor loopne push and and jmpq xlat (bad) rex.WRXB shlb insb jrcxz (bad) adc ljmp out (bad) push jg rolb (bad) scas jge sbb retq lea (bad) in jl,pt sahf fs and (bad) std (bad) in flds adc and sti rclb cmp mov (bad) pop jl hlt jle add xor mov mov adc push pop (bad) (bad) push and mov jo pop retq cwtl sbb fdivrs xor jle out jge scas (bad) mov jbe pop lcall nop pop xchg sar jno jnp mov xchg pop rcrl js mov fadds out jrcxz hlt cwtl sbb and out cli out test in retq add cmp push rcrb adc cmp pop (bad) cmp retq cmc or xchg icebp rex.WRB (bad) jae rex.RXB rex.XB ucomiss (bad) test adc push out fldcw sub cmp mov callq jmpq out adc rex.X jmpq in mov repnz pop rex.WRXB or xor scas push testb imul retq pop pop loope fs jg decb jmp lret int jmpq mov (bad) or (bad) movsb outsb loopne ja push add mov rex.B xor loopne or sbb fwait mov (bad) (bad) cltd (bad) add mov (bad) or jl cmp (bad) sbb movslq rex.WXB jmp js adc (bad) mov mov mulb and pop (bad) callq fimul cmp and sbb adc adc retq jge (bad) jno sub jg (bad) (bad) cmpsb adc rex.W xor in fucomp rex.WRB sub (bad) mov jl sbb loopne nop xchg loopne xchg pushfq mov (bad) int3 (bad) scas sarb rex.WR xchg loopne sahf (bad) ss or out mov (bad) (bad) sub loopne icebp (bad) imul in ss int3 rex.RB shrl fwait mov je sbb add and insl loopne fistp mov (bad) xchg jle pop sub (bad) shlb xor movabs movabs test sbb (bad) and decl rex.WR lods add movabs lret loopne mov (bad) add jnp insl pavgb push pushq flds fistpl xor adc jle push cmp movabs loopne (bad) mov (bad) mov retq incb pop fadds adc jl (bad) rex mov xor or rex.X fcomi xchg rex.R or iret int3 loopne lret out cmp add add mov fistpl sbb sbb movabs jns xor imul out sub in loopne int rcr xor lods out in mov pop xchg leaveq loopne xchg mov loopne pop cmp sub loopne (bad) pop jns lock pop loopne cld xlat cmc add xor mov adc vcvttpd2dqx sub (bad) (bad) sbb xchg rex.RX out movabs (bad) xorl jbe or vphsubwd repz nop callq push add mov mov push loopne xor ror mov mov and (bad) (bad) xchg add loopne push or jo retq mov (bad) je loopne (bad) sbb nop scas sub loopne or jmpq loopne (bad) push je imul mov rex.RB sub out mov rex.XB mov jo cli stc cld mov xor sbb (bad) add jl loope cmp push jo loopne inc xor ss push decl imul or cs xor and outsl or mov mov loopne xor mov movsl pushq mov sub xor callq (bad) data16 rex.WX (bad) cld icebp (bad) mov mov and and loopne sbb mov sbb rex.X rex.XB pushq lock rex.WXB pop (bad) cltd mov sub cmpsl cld or insl and xor (bad) and xchg mov out cmc push loopne and mov mov xor rex.RXB lea pop or and jmpq (bad) adc push callq stos movsl (bad) xchg adc (bad) jmp or or in loopne (bad) (bad) (bad) push mov fild add orb cmc pop test mov rex.WB test rex.WX mov fld lods out stos mov fs lret push imul loop fistl mov enterq jb loopne fimull add (bad) loopne adc rex.WRX jmpq sbb ror xchg (bad) mov push xlat repz pop jrcxz cmp pop xor vmovaps pop cmp popfq lea decl js sbb subb in nop and mov push incl lods fcomps in test idiv shrl mov (bad) out cmpsl xchg (bad) jrcxz gs outsb (bad) jbe outsl in lods push rex.B icebp lret stos mov (bad) in or add mov (bad) fidiv and push cs loopne jrcxz shld add nop fld jo rex.WRXB fistl sub ds jb or scas clc lock data16 jmpq cld repz mov repnz callq and fadds es cmpsl in (bad) (bad) jmp movsl or or cmp loopne rex.X test insb sbb mov movsl andl jmp test adc or lret lock jnp (bad) sub movsb popq push mov fldenv repnz pop rex.RB jmp leaveq shl retq repz jg sub pop adc xchg lock or pushq mov sbb int sbb adc loop rex (bad) add pop (bad) icebp jg xchg jmp test lods sbb lods ror sbb outsb test cmc outsl scas adc jae jns or (bad) loopne mov (bad) or subl int pop jnp movsl (bad) loopne mov outsb push ds jmpq mov pop ja xchg mov jno test mov (bad) fs rex.R loopne outsl jb rex.RB and adc push add and clc pop (bad) pushq sbb jo jmpq adc pop lock jo in adc lods (bad) rcll loopne jg rex.RX movabs cmp sub sahf rex.WRX loopne mov cmp scas ss cld rex.X loopne movabs (bad) sbb retq cmp icebp rex.W pop sub (bad) int3 es xchg addr32 lahf js loopne (bad) cmp and sub (bad) mov (bad) xchg out outsb lock push cmp push pop and loop add rex.WRX lahf (bad) in and ljmp in sbb and pop out popfq lock stos movsb fcmovnbe rex.RXB (bad) xor cmpsb (bad) js loopne cltd fdiv (bad) insl scas jge repz pop xor (bad) (bad) jae (bad) pop loope (bad) out (bad) addb and mov movabs stc fs movabs (bad) loopne and (bad) xor cmp rex.WRXB fcos pop test stos leaveq and add rex.WB popfq cmc jl xlat insl cmp cld loopne or mov (bad) adc js loopne pushq and popq fsubrp in jg loopne adc push je rex.RB rex.X es mov mov andl (bad) clc retq loopne jle mov stc pushfq jae loopne push fdivl sub cmp cld rex.RB loopne pop (bad) int (bad) loopne jb lea sub popfq mov (bad) outsb shl loopne mov xchg push repnz cmp ss insl movabs jns xor in xchg jne pop sbb popfq ss pop sbb hlt or pop jnp incb sti repnz xchg icebp jb or fiadd sbb (bad) fwait rcrl cli mov fsub jle jo jbe imul cs rex.XB cmp sub cmp jmpq mov repnz (bad) and fmull xchg lock loope (bad) movsb stc jmp pop cli jae xchg cmpsl or test out cmc fs sub scas (bad) lea mov psllw hlt jmp mov mov add enterq insb icebp ja sbb and (bad) (bad) jbe pushq repnz xchg (bad) mov (bad) enterq cmp (bad) (bad) jg sbb push mov pop callq imul rex.RB cmpl icebp adc callq pushfq retq pushq pushfq retq frstor fcoml (bad) add (bad) xchg or jg mov repnz stos lea pushfq js adc ss rex scas jle pushfq pop addr32 pop mov mov jg and and lahf add int3 jmpq sub fidivrl icebp out hlt pushq rolb retq and push ss (bad) loop cmc jno (bad) adc imul pop mov xor mov mov movabs mov xor hlt push in (bad) xor lods push rorb leaveq mov pop sub sub fistp sbbb scas lea lock retq stos (bad) jno outsb and pop pop xor movabs (bad) push callq lea sub movsb jle jnp or scas (bad) adc callq repz push jp (bad) insb in or mov in sub (bad) (bad) or movsl lahf lret in pop pushfq scas outsb sbb fidivrl rex.WRB add or test push add out pushq ja mov (bad) iret mov jmpq idivl mov in (bad) rex.W (bad) lock gs mov mov imulb (bad) adc callq fstpl loope lock xchg enterq jo cmpl cmc rex.RX jrcxz jrcxz loop xor rex mov adc rex.W or rex.WRXB enterq pop mov sbb jmp (bad) or (bad) sbb mov in movabs movsb sbb fbld adc xorb lods iret iret sub test xchg mov test mov rex.WB insl lahf push xchg imul mov (bad) popfq (bad) outsl and fdivp jge ss scas xlat adc mov sbb rex.R (bad) ja and shrb jmpq rex.WX rex.B stos jno (bad) (bad) in (bad) add and push mov (bad) mov mov pop sub mov out callq in xor loop imul jp shr ds (bad) (bad) xor xor jbe sbb cmc in (bad) stos (bad) (bad) out in rcrl fisttpll (bad) std popfq xchg scas loopne mov cwtl ror cmp fucomip sbb xchg jo cmp out xchg pop add xchg fildl outsl or and (bad) icebp xor cld and movabs sbb mov in fwait mov lock sarl sbb (bad) lret (bad) in add cli mov mov jl xchg in (bad) mov (bad) xchg sbb (bad) mov icebp loopne cmpsl out shrb leaveq subl add jmpq loopne push int3 (bad) rex.RXB rol (bad) rcll pushq insb adc imul (bad) hlt je (bad) jg sahf jmpq rex lahf loopne (bad) or mov rex.WXB rex cmp (bad) rex.R icebp loopne adc xchg adc mov mov stos pop jbe movsb xlat rex.RXB jo adc (bad) mov pop cmp push (bad) mov icebp movslq subl (bad) jp movsb fcomip and rex.RX movsb (bad) pop sub icebp stc incw cwtl add rex.R push (bad) xchg xlat adc (bad) jae pop jge or imul cmpsb adc (bad) sbb cmpsl mov sbb rex.WXB cmpsb jae xchg xor retq int3 test mov cmp (bad) in pop mov (bad) lahf add lcall outsl out (bad) adc movabs adc (bad) mov sub cmc mov xchg mov rex.R gs xlat loop in movabs rorb add outsl ds rex.WR xor stos sbb or (bad) jno jl in fcmovne fidivr out loope mov rep in or mov (bad) rex.WXB repnz cmp and retq mov sbb jmp or cmp sbb xor mov mov cmpsb fdivr retq outsl mov leaveq mov adc (bad) test xor cmp popfq mov insb stc (bad) imul (bad) test jmpq sbb fstpt movabs (bad) mov imul and mov and loope mov (bad) sub pop cwtl lret movsb and bnd xor sbb jno sbb decl pop loope xor push (bad) xor pushq (bad) rex.WR push sub (bad) jbe sbb mov pop adc shl xor fisub jp (bad) mov sbb in loopne push retq (bad) movabs mov (bad) outsb fucom xor (bad) lret ds pushq loopne mov pshufw shl incb cmp (bad) rex sub imul mov adc cmp pushfq mov rex.RB ss lods mov loopne jbe xor cli cmp or loopne xor leaveq xchg icebp rex.B (bad) mov (bad) popfq int3 (bad) cld mov sbb jmpq fcoms es (bad) out clc pop and mov cld sbb mov and shl movsl out add (bad) (bad) mov iret fnstsw notb (bad) in jae data16 mov rex.WXB (bad) (bad) cmpsl (bad) adc mov fisubr std fwait callq cmpsl add mov mov std xlat xchg jmpq rcrb lods or jne (bad) xor adc lret rex.WR cs lods adc vpavgb pushfq push lahf out (bad) push (bad) jno movabs je (bad) mov (bad) xchg cltd push cmp xchg pop cmp mov sub xor loopne movabs repz mov outsb fmull (bad) (bad) lret and add test add leaveq rex.B andb lret in loopne mov mov cwtl cltd jne (bad) lahf (bad) mulb rcrb ja movsl (bad) adc decl and jnp jge rex.B (bad) mov (bad) insl cmp and and fisubr push jmpq sbb in es rex.RXB (bad) rex.RXB cmp sub (bad) loopne int3 xor fwait js popfq (bad) mov movabs rex.WRB rex.WRX fs lock xorl neg loopne retq in mov xchg je (bad) fldl add loopne sbb and mov insl adc rcll jge and sub loopne iret stc (bad) (bad) (bad) lea (bad) out shrl xchg jmpq xor and loope add and sub (bad) mov jne loopne retq jae sbb mov (bad) xchg loopne insl adc fist lret cmpb push sbb pop xchg rex lea and mov and rex.WRB xchg push add fucomi repz movabs sbb loopnel out scas (bad) rex.WXB sub mov adc xchg or jmpq adc xchg xchg xchg in scas sbb loope movsb loopne imul (bad) loopne stc rex.WRB imul mov (bad) (bad) push add loopne add mov push imul out pushq sbb and rex.B movsb (bad) rex.R add or sbb loopnel sbb cmpl push loopne movsb out add jmpq std jo cmpsb leaveq mul mov rex.XB out lret ja jle (bad) movabs cltd ss jg cwtl (bad) loopne (bad) xor mov or out (bad) test pop (bad) jmp adc cmpsl or enterq (bad) out out mov jns add cmp rex.WB loop je insb or sbb sub (bad) pop imul xor stc (bad) sbb rex.W hlt lods and adc test loopne (bad) xchg (bad) cmpsb (bad) mov loopne (bad) or xchg mov test adc (bad) xor mov adc jnp int3 popfq pop lock jae loopne insl (bad) (bad) jno es cmp fildl loopne push (bad) movsb (bad) popfq test loopne jle ss mov movslq or insl rex.RX push sbb fwait test loopne addr32 (bad) test mov rex.B (bad) callq (bad) rex.WRX lods fisubl ficomp sbb loopne push push rcll jnp lret cmp loop retq (bad) movabs movabs cmp imul cmp repnz jg push (bad) or cmp (bad) xlat out mov in ja add pop xchg (bad) lret adc cmp mov mov mov loopne movabs loop jmpq loopne andl in in pop hlt and adc loopne test fwait stos adc test fldenv mov (bad) and jb cmp and jne cltd movabs decl rex.WRX mov int and jo adc test pop fcomp jmpq movsl adc lods (bad) movabs mov sub or mov mov rex.W loopne sarb (bad) rex.WRX xchg jle fwait rex.WRB cmp mov or cmp xchg push test callq mov test out or ds (bad) clc (bad) mov push rcll rex.XB mov xchg divl fisttp sbb lock fsts adc pop movsb rex.WRXB lcall repnz rclb xchg sub and adc mov mov xchg pushq int lea push or cmp (bad) fdivr add (bad) mov xor ds out push test mov loopne jae pop and test rex.RB lea push sti loopne out stos (bad) jp mov ja in adc jae rex.WXB out push outsl jg shll lods mov xchg shrb and mov (bad) mov test rex.WB mov lret lahf push rex.RXB (bad) push rex.WX rex js repnz int retq stc pop rex.WB rex.W sub (bad) (bad) (bad) xchg sub mov sbb cmp lods xor mov es movabs cli xchg callq (bad) or fsubs adcl mov rex.WRX rex.WRX rex.WX jp rcrl movabs jnp mov sbb imul (bad) popfq pop xlat fs sub (bad) je rex.WR adc (bad) sub adc (bad) sbb mov mov lret (bad) cmp cltd mov and lret adc es xchg stos out sub add repz or cmp adc (bad) cmp sub push movslq pop adc push add lock jmpq sub cmp (bad) outsb add (bad) cmp jg (bad) xor loop jg rcll test test jg adc jmpq sub cmp sbb mov cmp jl cmp xor jp sbb rex.WXB (bad) and xor sub (bad) mov repnz add rex.WR push (bad) sub rex.B fcompl rex.WR and int (bad) decl pushq movabs cmpsb and mov pop and retq pop int3 mov addr32 jo xor test jg addr32 popfq out (bad) jp cmp add movb jrcxz mov jns callq in mov cmp cltd push or xor (bad) movslq lods push fnstcw and pop cmc movsb and int3 movslq lods mov add scas mov pushfq fisub (bad) mov mov (bad) hlt ds (bad) push sbb mov cmp lret jns (bad) jmp (bad) movntq addr32 cmp (bad) imul (bad) or xchg jle mov (bad) mov movslq movabs (bad) (bad) sahf sti rol lret and (bad) clc sbb sub cld rcll sbb mov push (bad) cmp adc rex xchg lret xchg lods xchg push (bad) shlb repz mov (bad) fstpl (bad) (bad) rex.WRB pop (bad) rex.WB clc push cwtl sbb (bad) movabs es (bad) stos or in out push (bad) movsb in jne cltd rorl push (bad) mov adc hlt movabs xor gs mov rolb stos orl insl cmpb xor andb xchg loopne cmpsb push repnz xchg mov push or mov loopne (bad) xor rex.WRX or loopne rex.WB (bad) sbb xchg mov pop (bad) jmpq sub jle or push (bad) push loopne movabs (bad) jrcxz loopne mov or rex.WR xchg cmp jne lods (bad) push movabs loopne (bad) rex.W mov cmpsl mov or clc cmpsb (bad) scas rcl popfq std loopne pushfq out movabs xchg and rex.WR fwait mov sbb jp lret mov adc in mov pushq mov cmp cmp (bad) and fstp (bad) loopne rex.WRX insl or mov sar (bad) cmp cmp jbe (bad) stc (bad) shrl xor or sbb and pop and bnd rex.W add (bad) (bad) mov pop retq and push mov (bad) rclb es shlb (bad) sub xor movb subb jg std ror adc xchg sbbb sbb jrcxz iret jg mov hlt (bad) jmpq mov fwait pushq sub mov rex jne (bad) adc outsl jno pop rex.B or mov sbb cmp (bad) in frstor ja rex.XB push fcoms (bad) loopne (bad) add divl fcomps xor or cmp mov or nop xor cmp fsubrp movabs rex.X ss jp mov loopne movabs mov cld (bad) icebp hlt movabs mov (bad) movabs mulb rclb shlb rex.WR sub in (bad) jmp adc lret jrcxz (bad) out (bad) decl and mov loopne (bad) hlt (bad) imul loopne mov sbb rolb callq mov sti jg cltd rex.WRX add in loop add xlat (bad) loopne movslq pop and rex.R xor es out clc push loope movabs rex.XB pop and pop sub movabs mov loopne sbb rex.WB pop (bad) push jrcxz roll retq add adc lahf rex.WX sbb rex.WRB (bad) rex.WXB (bad) (bad) mov or rex.WXB adc jo ffree movabs cmp movabs jmp cld mov sbb and pop jp (bad) (bad) loopne cli and test rex.R fs jle sbb mov cmp sahf mov loopne cli mov mov repnz sub out adc xor fisttpl adc pop jle sub (bad) es fadd adc push mov rcr xchg rex.W mov pushq push callq fistpl loopne xchg test loopne loope mov or in rex.XB jb (bad) (bad) sti (bad) out cmp loop and (bad) pop pop xchg retq (bad) test loopne rex.RB callq movsl sbb movabs mov rolb lret scas in rex.R pop int3 rcrl (bad) (bad) (bad) frstor add adc fcomps cli jge (bad) jle lret jo sbb incb jno sub adc loopne (bad) cld xor iret adc popfq (bad) in adc enterq loope rex.RXB gs add xchg insl xor cmpl hlt rex.B sub movabs cmp rex.WRXB cs mov xchg clc in mov cmp mov scas (bad) stos icebp movabs lea es mov and xor rcrl sbb in rex.RB jmp hlt in (bad) xchg mov sub adc push mov sahf int cmpsb lods loopne and in cmp loopne iret pushfq out fsubrl loopne xor rex.WR decq loop pop repnz fcmovnu stos (bad) in lea in js push fs sbb ja fcoml loopne nop sub in fnstsw sub or sti pop out cmc (bad) (bad) adc (bad) (bad) jnp (bad) lahf cmpsb rex.WXB (bad) pop xchg add (bad) pop shl add pushq jb out rcrl xchg (bad) out lock (bad) pop leaveq (bad) xor or jae adc sbb stc mov rex.RX jmp xchg shl lea and jge jmpq sbb ds stos sbb (bad) rex.B (bad) push fstps sbb jbe and int3 (bad) (bad) (bad) pop jge rex.RX pop add in pop mov fs rolb xchg add pushfq repnz clc (bad) (bad) js stos mov pushq sub xor (bad) movabs adc (bad) add sub lar fdiv rep test (bad) jb test xor in mov stos jge cmp fisttpl fwait and addr32 sbb jns rorb lods sbb add loop pop (bad) xchg mov data16 clc loopne mov cli lock in test xorl loopne lea xchg stc out (bad) or push cmpsl in loopne je,pt pop or sahf loopne xchg (bad) (bad) or lea mov nop hlt rex.RXB sub mov cltd mov adc (bad) in xchg (bad) leaveq or test xchg movslq (bad) fidivr test fcmovnb jl mov loopne testl cli jg cmpsb loopne rex.WB int lret (bad) xchg push adc push add movslq lahf (bad) movabs rex.X movabs xchg cmp movabs adc sub rex.XB (bad) xor fneni(8087 test pushfq loop movabs loope (bad) mov data16 retq out mov cmp rex.XB (bad) mov retq in rorl imul push rex.RB gs cwtl pop mov lods outsl stos xor movabs mov and stos or xchg cltd std (bad) sub and xor (bad) fisttpl insb (bad) popfq repnz adc (bad) or out loop cmpsb vaddsubps jmpq rex.WRX leaveq lods (bad) loopne rolb clc mov or or xchg adc and cmpsl mov in loopne mov stos sbb retq jb (bad) mov cmpsl (bad) fldl lret test pushq (bad) idivb cmp scas loopne movsb add mov xchg andl (bad) in movabs stos test pop sub sti mov hlt and push retq adc sbb add adc js sub jo loopne push and loopne pop push xor movabs fldt (bad) js loopne and push andl hlt jrcxz xor jge rex.B (bad) (bad) fiadd loopne pop (bad) out (bad) imul inc (bad) std adcb out pushq rclb pop test frstor (bad) lods sbbb add (bad) ja jp js (bad) push (bad) push out mul adc rex.WR and rex push xor (bad) jae cmp rex.RB fnop rex.WRX rex.W test scas mov in icebp movabs sbb rex divl jp out mov rcrl and mov loopne jmpq cmpsl iret (bad) and xlat leaveq jbe and imul sbb push flds shl hlt (bad) enterq mov mov mov pcmpeqd (bad) sahf leaveq xor lret mov pop jp (bad) sbb cmpsl cmpsl lods mov xlat loope mov loopne add pcmpeqw xor movabs (bad) repnz pop loop mov (bad) in xchg lahf and int3 rex.WRB adc and jne movabs (bad) jb pushq fnstenv adc mov pop sub xor sbb (bad) (bad) loopne push imul (bad) (bad) shrb outsb and sbb jo (bad) cmp insb rex.W ja gs movabs adc (bad) mov leaveq xchg cmp mov std sub outsl pushq xchg xchg pop (bad) xor pop out sbb mov cmp cmc movabs lret or hlt sbb sub sbb (bad) repnz mov xor loopne stc decl lret (bad) pushq es repnz sub outsb (bad) and lret xchg sbb sbbb xchg or jae sahf movslq movsb xor jg lret loop push movsl fsts cmpsb sahf js jb (bad) mov addr32 test rex.WXB rex.WRB mov lret or jnp xchg (bad) movsl insl push mov rex.WRX sahf (bad) sbb sbb sub cmp (bad) xchg andl cs repnz rex.WB push xchg outsl in (bad) lock mov idiv add (bad) mov cli xor loope xchg icebp imul xchg pop jmpq (bad) adc rex.XB outsl addl movsl adc mov and xor sti (bad) mov (bad) (bad) sub out rex.XB lock xor test (bad) pushfq add mov rex.WR lods mov fisubrl leaveq sbb and in out imul lea jmpq rcrl (bad) out movabs test or in push retw jg push cmpsl rex.WX (bad) and (bad) in fmul stc (bad) sbb add mov rex.WRX lret iret loop push mov and jo clc or fidivrl jno xchg xor sub mov repnz jle imul cmp (bad) pop leaveq or (bad) in vpaddsb in jrcxz xlat push in fistl jo rex jmp (bad) fisttpll clc (bad) mov cmpsb mov mov outsb lock fmul xchg pop clc pop iret shrl (bad) imul clc (bad) cs adc gs and or mov lret (bad) mov xor rex.X jmp (bad) shll subb or pop test addr32 push icebp insl bnd and push cmc fs jo and movabs mov cltd and and add (bad) xchg jno (bad) add movslq imulb rcrb mov jrcxz mov lcall add rex.RXB or pop rex.RX test loopne movsb nop push (bad) leaveq lods (bad) loopne jg sub repz adc jge adc (bad) cmp sbb xor int3 (bad) sub mov adc mov push leaveq loopne (bad) (bad) sub ja callq nop pcmpeqd loopne xor loopne test mov loopne mov or loopne or mov scas rorb cmpsl jrcxz and sbb (bad) jb add pop or xchg xor (bad) jl (bad) jae,pt fwait sbb cmpsl loopne lea adc enterq jmp (bad) in mov cmp sub loop in addr32 movsbl jg and cmp rex.RB mov int3 add mov mov negb out rex.XB cmpl je (bad) loopne es adc insl cmp loopne pushfq je (bad) data16 push cmp xchg inc callq (bad) xor stos loopne pop jb rex.WRXB rex.B (bad) add mov pop add loopne jno cmp bnd (bad) lods adc jl sub and callq add sub loopne lret cs adc (bad) rclb jns cmpl loopne pop (bad) push ja movsb cltd in (bad) cmc cmpsb mov rex loopne xor cmpsl cld (bad) lahf ds cwtl pop cmpsb and scas sarl xor push decb pop push lahf sarl fyl2xp1 rex.XB data16 in (bad) (bad) fisttpll mov lods adc movabs sbb fwait xchg loopne repnz sub pushq jge test leaveq loopne push je test in sbb (bad) xor rex.B rex.WXB repz add xchg js loopne jle cmpsb sub xchg loopne (bad) adc push add mov mov add ss xor loopne xor hlt stos or loopne pop xor fidivl lock je adc jmpq (bad) mov jae rex.W pushq xor movabs flds in rex.W pop sub sbb loopne (bad) and cmp xor cmpsl (bad) wrmsr xchg repnz xchg mov push sbb or lods cmp xor sbb jl rolb (bad) add loopne xor (bad) mov mov mov rex.W loopne psllw (bad) std (bad) cli fcoml movabs loopne sbb jo rex.WRX lock movabs loopne and (bad) loopne sbb (bad) jmp sti sbb loope or repnz or cwtl pushq loopne jb adc xchg xchg push decb mov test xor add jge lods test xor loope (bad) callq loopne jl sub mov test sub testb cmc mov js in jne and (bad) lods loopne and (bad) jae movsb jmp callq (bad) pop icebp fdiv es shrb addr32 or sbb (bad) hlt fistpll and mov rex.X retq movslq (bad) loopne int3 outsb (bad) loopne lahf mov jo js rolw cltd in (bad) rex.WXB sub push addb data16 add loopne push nop or pop retq xor (bad) in sbb jbe cwtl addr32 push rex.R adc loopne loope lea sbb rex.RXB sub insb (bad) rex.WRX jne std (bad) test (bad) (bad) repz add movabs jb sbb icebp (bad) cmpsb add jrcxz ja or or rex.B in ds jb pop (bad) mov add test ss rex.R rex.RB cmc jae cmp (bad) iret loopne adc sbb (bad) in incb test subb (bad) fdivs (bad) or (bad) (bad) (bad) and xor fbstp fildll jg movabs (bad) sub fldl leaveq retq nop scas (bad) xchg push pop (bad) pop fs out cmpsl sahf push xchg (bad) push movsb mov repz jg xor mulb jo sbb (bad) addr32 pop cmp repnz push rex.WR stos sbb rex.W lock rex.WRX gs adc (bad) push xchg (bad) (bad) rex xchg out out mov (bad) adc test movslq (bad) movabs callq insl loopne (bad) rex.WRXB xor lock adc loopne xor sbb rex.WRXB rex.W mov or loopne jb and (bad) sbb adc pop xchg mov in push es push adc int pop and outsb icebp loopne popfq xor (bad) and rex.WRX rolb cli movabs cmpsl outsl push (bad) push movsb mov movabs (bad) cmpsb gs mov movabs lret or int adc ds sbb mov jns rex.WRX xor jl xchg std xor movabs mov es xor stos sub (bad) in sarl mov xor lahf loopne mov mov loopne sbb jge pop (bad) sub and fwait (bad) cmc (bad) pushq out xchg rex.RX out (bad) testl mov in mov add cmp loopne adc clc (bad) mov int push imul xchg pop loopne cmc movabs (bad) (bad) loopne xor test loopne popfq fldl xlat jp xchg loopne movabs cmp xchg mov mov mov stos jae in and jg or add rclb mov push rex.XB sbb jnp jne mov sbb sbbl retq cmp push rex.WB test xchg push add mov iret jmpq lods (bad) push imul je stos (bad) sub xchg xor (bad) (bad) mov (bad) sbbl xchg test xor in stos fistpl cmc paddusb xchg callq icebp pushq (bad) rex.XB sbb mov cmp (bad) hlt mov enterq jne insb xor stc rex.WRX mov addr32 or cli push movsb push (bad) (bad) gs xor (bad) mov adc icebp jo stos jl rex.WRB cli sti in jle jg xchg sbb rex.WX (bad) icebp fs (bad) (bad) out sbb adc ror mov add and sub adc pop (bad) outsl jbe jmpq push rex.X repnz insb iret (bad) (bad) repnz jo rex.XB pop cs jrcxz scas test xchg rex.XB fldl2e add push jl movsl andb add (bad) push mov movslq loopne jl jnp movsl jae xchg sbb lahf (bad) rex xor (bad) xlat (bad) rex.WX rex.B out loopne add xchg icebp jle pop retq xor (bad) jp movsb sub leaveq adc (bad) movsb jp fisub lock xchg cmp mulps cli movabs loopne xchg mov fwait push pop loopne (bad) xor add imul (bad) and jrcxz and (bad) loopne mov rex.WRB lret shll pop rex.XB xchg or loopne mov jg mov mov cmc xchg push add cli (bad) stos movabs clc rex.WXB (bad) mov loopne cs mov (bad) lahf mov outsl retq xor (bad) loopne pop or test (bad) fndisi(8087 insb fwait loopne sahf data16 rex.WR push rex.W sub lret iret pushq jb rex.B lods rex.WRXB (bad) mov sub add and mov xchg (bad) sub loopne (bad) mov rex.RX mov pop pop jmpq add movabs stc (bad) loopne lods test loopne pop je outsb jb cld loopne xchg loope,pt subl (bad) sti (bad) xchg and in movabs (bad) movabs add lahf movabs mov icebp sub and xchg lret cmp (bad) icebp insb sub movabs jbe lods rex.WRX gs repnz orb mov jg fldenv (bad) in add or ja insb je icebp or pop xor adc (bad) xlat sbb shrl (bad) sbbl jg hlt fsts sub test adc or and rorl jle push or rex.WRB js or (bad) pop xchg cwtl retq xchg mov movsb pushq xor xor jmpq (bad) mov mov roll (bad) push (bad) add int3 (bad) xchg (bad) js icebp cs pop test (bad) outsl xchg push pushfq jmp (bad) mov jne (bad) rex.WRXB (bad) mov sub cmp mov lods adc pop std xorl movabs pop mov (bad) fwait mov (bad) cltd rex.WRB addr32 mov scas out subb lret (bad) sbb js repnz movabs out (bad) (bad) cwtl icebp pop and pop push sub out int3 enterq in (bad) push rex test pavgb (bad) (bad) adc loope xor stc (bad) sarl (bad) xor frstor jae jno test cld icebp sbb je out sbb loopne rcrb mov sbb loop cmc out rex.WRB rex.RXB imul pop cmpl movsb loopne or cli in icebp div imul adc mov outsl jns out test xor cmp incb mov cmp scas sub (bad) push jp add mov test (bad) pop fcmovnb leaveq push (bad) lock rex.XB jb loopne push sbbl jno push fdivr mull (bad) (bad) cmp adc fcmovne mov jge add orb rex.WRX adc xchg push cli add ror cmp adc and stc pop (bad) jle loopne insl add hlt and (bad) rex.RB add sbb adc and (bad) movsb mov loopne xchg addl cmp loopne mov scas rex.W callq movsl cmovge sbb rex.RB mov cld rex.WR sbb in mov sbb lret jo insl pop add rex.RX fldenv es cwtl lods (bad) mov jp sbb scas in cmpb sti fs (bad) icebp pushfq cmp (bad) (bad) xchg push shlb enterq fmull (bad) loopne mov (bad) iret in jnp jle push rex.RXB pop loopne pop sub mov jp pop rex.WRXB cli (bad) fdivr movabs gs repz loopne jo (bad) ds sahf (bad) fcmovnu add fildl imul xchg xor jno and shll jge (bad) add or lret movslq (bad) rex.XB out test or (bad) mov pop in adc cmpsl out mov fstpt int adc (bad) in adc xor and addr32 rex.R sub and (bad) repz (bad) pushq xorb scas or lea (bad) mov iret ds ds (bad) insb icebp shrl outsb loopne or lock (bad) (bad) outsl sbb xor scas (bad) xor push decl stos popfq jg mov xor cmp test (bad) shl add mov jle out add loopne ficomp or mov xor xchg movabs (bad) adc cwtl loopne (bad) in push rex (bad) or fwait rex.RX outsl std sub (bad) sub or sub lret insl insb or add sti mov pop (bad) pushq ds imul xor insb (bad) out (bad) (bad) cmp retq add fcmovne addr32 out rex.WXB in hlt xlat loopne or rex.RB (bad) loopne jnp (bad) repz (bad) add clc gs (bad) stc fistpl sub xchg push leaveq jbe movsl pop pop nop clc fchs push pop adc (bad) icebp (bad) imul shlb (bad) rex.XB jno fs movslq rorl fidivrl popfq cli test ds (bad) lret leaveq (bad) outsb (bad) adc (bad) xchg nop jmpq cmp fiadd rex.RX es (bad) insl mov pop mov (bad) repz test fwait shll mov mov (bad) (bad) push callq rolb rex.WRB sbb jge retq mov subl mov xor rex.RX idiv or cmp xor (bad) cld lret cmp js rex.WX loopne neg xchg sahf mov in movabs loopne or lahf sub and js (bad) cli rex.RX or sbb mov lock in mov sbb jno rex.WRX push pop (bad) loopne xchg (bad) jmpq rex.XB add cs (bad) or fnsave add sbb in or jbe js add push sub and mov (bad) imul jmp movsl mov cld (bad) retq callq (bad) movabs mov push sarb out mov mov rex.R rex.X and (bad) out or and push out rex.R retq cmc icebp js imul shlb pop fcmovnu outsl xchg rex.B rex.RX rex.XB jo cmpsl scas loopne sbbl loopne cmp (bad) loopne fildll fucomi mov sahf ja subb sub sbb mov jg rex.WXB rex.WX (bad) test fwait xorl cmc lret (bad) (bad) clc rex.W xchg push mov out movsb loopne loop ja (bad) mov mov int3 subl and sbb mov rex.B rex.WRB sbb or fucom xchg mov lock and xchg rex.WB shll jo cmp mov mov loopne je (bad) or (bad) and sub enterq (bad) jmpq pop xchg nop xchg mov adc adcb mov ss shl mov lods (bad) push pop (bad) out repnz retq out loopne mov mov (bad) fiaddl (bad) mov add (bad) shrl lret cltd xchg mov lahf mov cwtl mov xor jns lret cmp (bad) lods movsl loopne loop push jrcxz mov (bad) scas cmc pop (bad) in in (bad) jo stos xor loopne icebp lock adc (bad) mov jrcxz mov mov loope in rex.WRX ds xor and lahf (bad) fwait clc rep rex.WRXB fcmovb add (bad) (bad) or xor cmc (bad) loop in mov pushq scas int3 mov stos (bad) sbb stc jmpq mov test stos in add icebp xorb add (bad) imul and pop fucom jle (bad) mov mov loopne push mov xor subl test cld (bad) mov xor movslq mov xchg jrcxz push cmp sbb cmp (bad) nop rex.RB mov cmp rex.WRB rex.XB and gs rex.WXB loopne fscale sub (bad) fucomp loopne cmc mov (bad) (bad) in mov int3 je adc cwtl sbb fisubrl js jmp out cld cs mov (bad) xchg (bad) (bad) lret pop pushq stos or loopne sar sub cli in jb fcmovne adc mov mov sarl adc (bad) fsubr lret clc mov rex.X adc loopne mov (bad) jle mov loopne movabs and (bad) int3 (bad) icebp mov rex.WRXB (bad) loope fnop mov movabs loop xchg callq mov mov (bad) add mov leaveq (bad) (bad) xorb in scas cld movabs mov (bad) mov (bad) andb push loopne (bad) cmp in je test xor (bad) cmc and (bad) clc ja push ljmp rorl xchg cmp or jmpq pop jo fmuls (bad) in (bad) push mov (bad) fcmovu loopne iret movabs adc repz mov fistl xor mov shlq loopne movsb mov or and rex.RXB pop cli pop lods js outsb (bad) and xor fwait out test xchg test loopne push fisttp loopne sar mov loopne rex.WRB gs sbb cwtl pop out in jg sbb loop fcoms adc rex nop rex.RB mov sbb leaveq (bad) xor movabs loopne adc push cli out rex.RXB test (bad) incb rex fstps lret jp (bad) (bad) adc insb mov js (bad) add outsl fistpl push loopne mov shr mov pop rex and js rex.WX xor loopne (bad) mov adc pop (bad) or adcl (bad) push mov std icebp retq (bad) movabs (bad) or je (bad) rex.WR (bad) add rex xlat imul ja movslq repz sti loopne xlat (bad) sub and or (bad) mov gs js imul pop jo test movabs (bad) (bad) andl mov push mov test (bad) enterq add loopne sbb mov loopne adc nop push or loopne cmp rcl scas add mov sti fneni(8087 or (bad) jns es loopne idivl jle cld (bad) fnstcw add xor (bad) mov jmpq je loopne pop xor int mov outsb cmp xlat movabs sub fmull mov jmpq outsl rex cs (bad) rex.XB (bad) scas outsb rex.WRX and add hlt loopne es (bad) or jge loopne movslq jge and cmp enterq rex.R movabs jb imul movabs mov fcmovb jno rex.WXB lret outsb insb out or sub sti or rex.RX jl hlt sbb push loopne (bad) xchg gs sub rex.RB pop sbb testb enterq shll jnp rorl gs loopne leaveq cmpsl mov pop rolb sbb pushfq (bad) ljmp xlat sub (bad) or repz mov jmpq (bad) lock movabs callq add mov int lret popfq imul loop and (bad) repz (bad) in (bad) jg rex.WX out jno sbb loopne mov and loopne cmpsb retq mov test xor and (bad) adc rex.WRX (bad) (bad) movabs and ds mov sbb (bad) icebp movabs cmp loopne (bad) mov sub adc rex cmp (bad) push (bad) (bad) popq sarl cmpsl lret push jnp out lods mov ss shr (bad) test movntq or xchg int pushfq (bad) (bad) cmp mov (bad) cmp movabs movslq jmp mov add jmp std mov (bad) sbb movsl sub cld sbb jne xchg pushq loopne movsl stos (bad) rex.RX (bad) mov movabs stc xor (bad) jl (bad) insb xor movabs add (bad) xor cli js mov adc movabs test xlat imul lea popfq vpunpckldq stos sarl out callq fild cld test mov jrcxz jae lods loopne pop data16 mov jge push lea jp rex.RXB (bad) sarl clc je rex.WRX mov loopne adc movabs rolb and and movabs (bad) rex.WR rex or push fneni(8087 mov cmp mov hlt mov cmp mov (bad) xor (bad) (bad) mov add xchg lods loopne mov (bad) pushq xchg scas imul mov (bad) mov popfq rex jbe rorb loopne and jmp callq pop jno movsl loopne lret testl pushq loopne rclb xor and (bad) sar fwait jmpq push pushq push retq jle sarl push callq cld (bad) hlt (bad) pushq cmp (bad) xor mov in push out (bad) (bad) sub cmp in mov mov mov push rex.RXB jl cltd fidiv retq in mov loopne adcb mov mov cmpb sbb in push popfq jle xor stos fbstp (bad) loopne test lea lret movabs loopne (bad) (bad) fcmovne rex.RX pop adc clc mov cmp nop jmpq (bad) nop xchg mov and mov repz stc (bad) loopne mov out adc sarl bswap cmp in imul movabs pop or fcomi rex.WRXB adcb mov cmp pop rex.WRB jle push (bad) movabs (bad) loopne lret sub rex.WR lahf insb movabs or xor xor adc cltd xor mov (bad) (bad) push rex.WR rex.W out cmc repnz loopne xor movabs jrcxz xchg mov xchg and jl sub pop cld rex.WRX in jg (bad) mov xor sbb sahf shl cmpsl xchg xor out sub push loopne cltd or (bad) loopne fsubrl mov (bad) rex.WR loopne push pop lret mov stos imul and in xor or pushfq movabs mov in mov scas movabs sahf mov retq nop loopne mov (bad) fdivr or sbb cmpsl cmp orl iret xor jmpq fsubrs rorl andps loope (bad) and sub js loop (bad) jle (bad) (bad) jmpq int movabs (bad) mov lods add loopne (bad) xchg push jns (bad) in jne rex.W fistp sub fcomip (bad) xchg sub repz mov loopne in (bad) (bad) enterq loopne push jb movabs test (bad) loope loopne test (bad) outsl cmp roll loopne mov cld (bad) loopne movslq scas loopne rcrl (bad) loopne jae lods xlat xchg lea jmp movsl nop (bad) mov cmpsl push imul add sbb sub addr32 flds sbb icebp rex.R cmp jmpq adc adc lods rex.RB test mov xor mov lock loope pushq jrcxz (bad) hlt sbb push icebp jp movabs leaveq cmp jle (bad) jmpq ror pop adc movabs cmp mov mov xchg ja (bad) fidivrl push cmc pop callq (bad) jno (bad) outsl add (bad) xchg (bad) mov (bad) (bad) in (bad) xchg divl insl rex loopne (bad) sbb xchg andb rorw subl hlt lret ss rex.RX push xor cwtl and out mov rex sar cltd mov xchg js sub in (bad) int (bad) fisubl mov ss cltd mov lea jp (bad) lret xor xchg xor rorl and (bad) sbb xchg stc jle xor (bad) pushfq sarl pop and fnsave lcall lods rcll rex.WR (bad) adc mov je rex.X (bad) in mov movsb rex.W adc (bad) std loopne or ja fdivrl loopne add je retq (bad) gs lods rcrb sub in sahf in (bad) (bad) repnz cmp (bad) mov adc loopne lods jl scas callq jnp retq xchg mov movabs int sti loop incb movabs jg sbb push sub cmpsb rex.WB icebp clc jmpq enterq leaveq and xchg sti add (bad) pop xor lahf (bad) in stc pop and hlt or (bad) hlt rex.W (bad) mov mov push xchg incb or xchg (bad) in repnz mov add lock std lea jns rex.WX (bad) pop movsl scas mov lret xor insb repnz shrl repnz data16 pop (bad) jb (bad) (bad) (bad) pop push cltd jno mov (bad) cld addr32 xchg retq (bad) and (bad) mov (bad) pop mov rex cmp mov loopne jbe (bad) jle (bad) sti mov jge adcl (bad) pop lret mov (bad) mov retq jrcxz gs out jae insl ja mov in rex.WRX data16 fsubrl iret rex.WXB or rex.WR xlat sbb rex.B addr32 cmp cs loope (bad) in mov jns and cmp sbbb rex.WB lret cltd stc cmpsl lock (bad) cmp xor clc and jbe cmpsb (bad) rex.WXB cmp or (bad) mov je (bad) pushq mov adc loopne test mov add adc rex.WB shll insl mov jb fimul xchg jno (bad) push imul xchg add push jrcxz and mov and pop and lret lock jrcxz (bad) stos (bad) or push rex.WRB loop and (bad) adc and (bad) jp xor mov movabs (bad) mov outsb (bad) sbb cld or retq (bad) sbb cmp cmc rex.WX pop nop fs outsb xchg movslq (bad) jno cmpsb out lret rex.WXB ds xchg (bad) ds lea in push cmp mov adc insb outsl mov or jnp and outsb sahf lock xchg cmc cmp (bad) rex.WX mov xchg imul mov (bad) neg rcrb mov lret popfq pop rex.W cmc add loopne sbb sub lahf rex.RXB mov mov cli outsl movabs jbe mov xchg xchg rex.RX test xchg jno (bad) jp in loopne mov (bad) jle pushfq (bad) (bad) rorl or popfq cmp cltd (bad) xor fistp adc push rex.WXB retq pop loopne mov movsb fucom lahf xchg xchg jmpq jrcxz js pop lahf loopne mov cmp loopne std movabs push (bad) cltd cmp sarb retq scas out loopne add and (bad) pop adc (bad) mull insb mov andb loopne rex.WXB (bad) pushq test fstps (bad) (bad) mov cwtl cmp adc repnz (bad) shlb loopne mov sub xor loop (bad) (bad) or rex.RX jno mov xor and or rex.WR (bad) mov pop (bad) sbb mov in add pop rcrb loopne rex.XB cmc (bad) or (bad) and pop (bad) ss rex.R rex.WRXB movabs xor or pushq add jb,pt (bad) (bad) xchg rex.B mov leaveq movslq xchg loopne rex.RXB rex.RX (bad) loopne dec (bad) and retq mov sub jrcxz mov (bad) (bad) (bad) lcall imul pop cmp shrl lret add and (bad) rex.WRX mov mov jle fwait mov xchg and sub pop stos clc outsb or fwait xchg scas movabs jg (bad) cmp loope lods insl mov pop push sahf mov sahf (bad) (bad) sub lret xorl rex.WX rex rex.B adc lahf in lods rcrb sbbb rex.RXB push stos pop loopne clc cltd out (bad) lods (bad) loopne movabs jb (bad) sbb loop mov rex.XB leaveq js xchg loopne sub out add fwait cmp jl sbb pop enterq rex.WRXB es mov loope push adc (bad) repnz rcll cmc mov sub pop (bad) mov add and in add mov cli in pushq movabs testb fisubl mov lock scas sbb sub adc sub lret add push push fwait jp add loop retq mov (bad) cmpsl adc jbe mov add movabs xor mov pop loopne (bad) or bnd rex.W lock add rex.WRX rex.X rex.WRXB xchg int3 xor mov xchg sub cmpsl jle rex.WRB pop jge mov out sar jno loopne or rorl rex.WRXB rex.B loopne repz movsb (bad) mov add pop lods rex.WRXB loopne and rex.RXB fchs mov (bad) loop mov sub xlat jl int3 rcl jge test shll rex.W adc push rex.WRXB sub je jmp shl jl pop sarl adc sbb scas xchg int3 (bad) sbbl or (bad) rex.WRX fnstsw push pop mov rex.R lahf (bad) loope jne jno rex.B loop rex.WRB add in out outsb or loopne stos cmp fmul jae fdivr fisubl insl push jnp xchg in cli outsl add rcrl sub fsubrs (bad) jne (bad) (bad) fisub ds (bad) lahf subl adc mov or add shr out loope out loopne es pop data16 sub (bad) xor loopne rex.WXB icebp cmp lock (bad) (bad) sarb fisttpl movslq loopne push fidivr loopne (bad) repnz add rorb rorl insb loopne jne or mov repnz lret callq cli movabs loopne pushq sub loopne fdivrl outsl rex.WXB mov callq sti xchg sub rex jb loopne (bad) adc pop (bad) mov and cmp or xor and cmp loopne jp addl outsl mov pop cli (bad) mov and repnz adc (bad) vpunpckldq popq cs in mov jmp ss xor and lret mov sti int3 mov (bad) rex.WRB ss pop (bad) jl out (bad) int3 cltd rolb pushq xor retq jno and sbb (bad) movabs in out pop rex.WR or cmpsb retq stos in add jb test mov loopne xor insl pop rol jmpq (bad) jnp rex.XB jo decl pop jae or imul imul cwtl ds test iret push jge hlt icebp jne jrcxz or loopne jle (bad) mov adc negl mov int3 movabs ss fyl2x (bad) mov loopne retq rex.R jge nop imul and xchg test mov outsl (bad) pop (bad) pop (bad) xchg loopne lea movslq sti mov sahf loope jge sbb out pop outsl clc xchg and retq test xlat rex.R jrcxz xchg js pop mov loopne (bad) jmp (bad) orb fstpl rex.WRX lods int3 stos sti and rex.RB mov sahf sbb ds rex (bad) lock loopne subb jmpq jo,pn mov je std add in add (bad) (bad) or loopne (bad) adcb sti rorb sarb (bad) jmpq mov fadd jb loopne add xor or mov int3 jne rex.WRB rex.RX loopne sub sbb mov pop fmul fneni(8087 movabs jmpq jbe clc sub roll test jmpq sarb jmpq movsl nop adc pop sbb movabs loopne (bad) sbb rex.RXB loopne mov stos andl cwtl add jo xchg loopne jle (bad) and rex.X mov int rcr je (bad) jbe push cmp rex.WRB xor sub fildll (bad) leaveq jl fwait sbb add jmpq sbb cmpsl lods (bad) insb xchg or jrcxz mov or loopne pop rex.WRXB enterq imul in fmul add xchg loopne adc xor jmpq jb push in and xchg sti xchg insl mov jne (bad) mov (bad) cmp and out test push js (bad) test and in leaveq jmpq (bad) mov cmp mov xchg push jl rex.RX fildll push or rex.WRB rex.WX stos (bad) rex.WX popfq stc addr32 loope rex.RX sbb push clc cmp push imul sbb (bad) rex adc mov mov (bad) rclb mov out adc (bad) insb push repz xlat sbb sbb mov mov gs mov push (bad) pop lret (bad) mov xchg and add rclb nop sub add mov add rex.RB cli sbb rorb je lock mov cmp (bad) (bad) mov xor rex.WR add je pop out (bad) adc loopne (bad) cmc es adc xor mov in rex.WRXB (bad) (bad) add ss cli mov jns push sub rex fs mov cmpsb je (bad) rex.B stos (bad) idivb or jo adc xchg mov lret mov rex.W cmpsb (bad) pushq movsb loopne movsb fs (bad) sbb loopne adc movabs lret (bad) (bad) sub scas mov jno ss (bad) imul loopne (bad) fidivrl out fsubrp lret roll xor add retq cmp sbb xor rcrl ds xchg stos retq loopne rex.WRXB (bad) sub rex.WX cmpsb lret jno adc jmpq (bad) mov add xchg mov sub (bad) fistp (bad) int xchg std jbe mov sbb and fsub mov (bad) test nop sahf loopne push movabs movabs rex.WRXB rex.WRB mov and sahf adc in xchg mov int (bad) cltd jg leaveq and sbb scas in mov push xor and loopne rex.WRXB test cmc fsubs or pop mov loopne gs (bad) fldl loopne adc pushq imul add push sub cmp sub data16 (bad) xor mov movslq stc xchg xchg mov ds icebp mov in cmp and (bad) in or imul popfq (bad) rex.RB xchg add loopne mov adc jmpq and (bad) pushq movabs sti loopne rex.R rex.WXB loop mov sbb cltd movabs loopne movsb (bad) xor cmpsl (bad) sbb shr sti (bad) outsl rex.R andb jmp rex.W mov shlb (bad) ficomp (bad) retq xor xor or fs (bad) pushfq pop loopne stc iret xchg sbb pop loopne callq fdivrs insl pop lock cld mov (bad) shrb or out (bad) xchg rex.XB pop out test (bad) wrmsr pop sub jns xor (bad) sub rex.X loopne (bad) lods add (bad) cli lcall or cmp xor rex.WB lock (bad) mov rex.WX jno in add cmp cmc out or sti nop cld loopne mov rex.WRX (bad) retq test or (bad) test sub or mov or xchg (bad) (bad) rex.WX add (bad) (bad) mov sub add addr32 stos mov sub push loopne mov xchg icebp lock rex.WXB sbb loopne jo xor xor and jns cli imul or je loopne (bad) fdivl adc loopne scas retq rcl ds cli popfq rex.WRB enterq (bad) shl lods fisubrl (bad) mov lahf pop (bad) lret rex.W (bad) retq loopne xchg (bad) mov rcrl jnp imul mov in mov in sbb or add cmp std (bad) int3 lock loopne (bad) cmp mov mov jg cwtl sub xor cmp out adc rex.WRXB (bad) hlt cmc test lret loopne (bad) adc xor xchg add icebp jns je jb in cmpsl loopne mov mov lcall pop movabs (bad) retq sahf mov add mov or lods (bad) out jl (bad) test incl in jno sub (bad) repz test mov test mov movabs mov or push jbe loopne (bad) mov test (bad) loopne pushq movslq cmp and (bad) xchg mov (bad) sub rex.WRXB and loopne xchg mov int3 (bad) mov roll (bad) push rex.WX (bad) and xchg loopne cmp popfq or and fsubr (bad) (bad) pop retq fnstsw or fwait rex.WB sbb cmc and cmpsl callq je subb or test leaveq sub (bad) test nop sbb jge loopne insl jmp add rcl sbb (bad) in add (bad) add pop (bad) adc and movabs stos in (bad) lahf mov test sbb loopne xlat imul in rorl (bad) pop pushq push mov repz sub outsb xchg imul jmp (bad) rex.R cmp rex.RX icebp adc sbb sub ficom cmc (bad) (bad) xchg test xchg cmpsl leaveq sub xchg jmpq out (bad) sahf movabs (bad) xchg loopne xchg xor (bad) (bad) loop fstps sbb cmp cvtps2pd jp or (bad) shrb test or std adc jne cmc push mulb jrcxz addb (bad) in sub test js sbb js rex.RX rex.RXB insl adc xchg flds js nop pop sarl outsb xor (bad) cli int3 lret loopne sub cmp xchg gs rex.WR (bad) xor and sbb insb in loopne ja lods mov jrcxz popfq rex.WB or mov sub mov enterq (bad) imul and (bad) push idivb xchg (bad) (bad) test hlt mov jmpq adc rcrb cmp cs notl mov movabs xchg pushq andb out (bad) loopne (bad) pop repnz xchg cltd cmp cmp xor push (bad) (bad) jle mov jmpq mov test outsl cmpsl (bad) and ds jmpq jmpq out cltd mov sti (bad) addr32 fs cltd xchg adc outsl (bad) pop or push or cmp mov adc insl fs (bad) movsl add lea clc out adc (bad) mov (bad) in js ja retq outsb cmp mov rex.WRB data16 mov maxps jmpw xchg (bad) orl (bad) (bad) jbe cmpsb imul int3 cmp adc sbb callq (bad) or mov fisubrl cld in xchg mov orb rex.B stc pop pushq vzeroupper mov lock xchg (bad) retq pop lret loop sahf cld jle outsl lock jne rex.RB cmp pop rex.WR loopne rex.XB jp rex.WRB add pop cmpsb cmp (bad) push fs imul add (bad) cmpsb sti mov movsl movabs xchg mov stos xchg mov sub (bad) mov (bad) lods loopne js lret xchg bsf (bad) pop and cltd (bad) fwait push in fldenv lret je (bad) rex.WR es cld (bad) xchg in rex push adc cmpsb pop stc (bad) (bad) nop mov cwtl adc stos callq out jg (bad) and xchg int3 xchg xchg mov xchg lea scas add test cli (bad) or push loopne mov jmp sbb xchg pop jb test fisttpl mov test ss rex.R fiaddl add mov adc jl ss mull cmpsl xchg xor loopne (bad) out jle mov imul jns (bad) push or sub xor enterq sti add movsb mov cmpb push in mov loopne xchg fdivs cli push hlt cwtl and mov int outsl loopne sbb xlat mov pop jmpq xor (bad) jg (bad) jl adc shll xlat xor sti cli (bad) pop lahf (bad) jmp (bad) (bad) shlb (bad) lods retq sub roll (bad) cmpsl xchg push cmp subb push xchg sbb in mov (bad) outsl mov or fnop sahf sub lahf stc fsub leaveq loopne (bad) loope xor add (bad) mov xor cmp (bad) hlt in mov int hlt (bad) rex.WRX lock cmp out gs add xor rex.WXB add (bad) push or movslq stc rex.W rex.RXB rex.W icebp jp mov (bad) jl mov mov jo in rol adc jns xchg pop jge or (bad) mov push or (bad) fstpl (bad) adc xlat xor (bad) fmulp jg outsl loopne cmp movslq rex.RX scas sti sbb (bad) and (bad) or adc retq push jp xor ror (bad) (bad) outsl jrcxz pop (bad) xchg loop mov jae idiv pop sbb imul and adc (bad) mov shrl xchg mov mov callq jp je and jmpq (bad) (bad) jno and (bad) out push pop movslq sbb jnp clc outsl (bad) lret outsl icebp mov lret sbb jae jg (bad) movabs xchg data16 adc (bad) retq (bad) jo,pt sbb and (bad) push mov push jle (bad) hlt vxorps in cs (bad) push mov nop and popfq rex.RX jrcxz and in rep (bad) add (bad) mov ss rex.RX lock sub sub xlat callq popfq rorl outsb jae jmpq or loopne stc and (bad) leaveq rex.R loopne jno mov rex.W cmp or fsubrl jmpq movups adc callq adcb (bad) mul pushq out movabs imul fstpl mov adc in mov test shlb xlat iret xchg fsub sub (bad) fistpll test loopne cmp jg mov rolb es jrcxz mov jmpq scas or add pop gs out (bad) je movabs xor sbb subl push pmullw mov stos fstpt rcrb rex.WX movsb cmc sbb xchg add adc out (bad) stos mov sbb mov lock (bad) mov (bad) int3 sbb (bad) scas (bad) jno (bad) pop retq cltd fs adc sub jae (bad) (bad) in in sbb adc data16 movabs adc (bad) sbb sbb adc fisub and ss (bad) lret fsts loope in rex.RX div lods mov rex.W cmp rex.RXB data16 rex.R lahf rex.W rex.WB in (bad) jge (bad) rcll in insb fnstcw add rex.RX push rcrl and xor rex.WX mov sbb mov jp xchg loopne jmp pop sbb mov andb loopne sub loopne clc scas sub repnz out cmp loop in (bad) xchg clc (bad) push leaveq scas and jmpq push in mov sbb movsl mov sub vpunpckhbw retq shlb shrl and leaveq and lods loope sub (bad) outsb sbb fisttp out mov scas xor cmc mov sbb fbstp mov ds pop retq xor (bad) adc iret test retq xor jo add add sub sahf out mov xor jns push movslq int3 rex.X in (bad) sahf sbb repnz ds push rex.B rex.XB gs jae lods mov (bad) rex.WRXB rex.B icebp pushq mov (bad) loop sbb push lahf cmp (bad) jb xor jmpq scas in mov hlt or (bad) repz pop jrcxz (bad) rex.W out popfq sbb fisttpll (bad) push rex.WRB jle pop callq mov rcr jg std mov movabs (bad) sub rex.RX (bad) rcl iret mov mov test (bad) cld retq (bad) cmc mov (bad) movabs rex.WRX data16 cmpsb xor cmpsl mov insl rex.WXB rex.WRX pushq notl imul push fs xor jrcxz cmp je xorl icebp out ja jge test or (bad) sbb sahf ja pop imul xlat and adc push (bad) hlt xor adc mov movslq mov lret in cld xchg xor clc lahf movsl lret mov xor (bad) (bad) (bad) xorb rex.R gs mov (bad) loopne cltd rolb (bad) mov movslq fisubr push loopne je fisubrl push jle shr fcmovnb and add fstl jg (bad) xor and scas sub rex.RX push test hlt movsb enterq (bad) mov cwtl repz xchg push (bad) mov adc sbb js (bad) and sbb psubb int sarl loopne xchg adcl jb loopne mov jbe or roll repnz loopne (bad) cltd add fsubl int3 cmpsl pop mov xor std outsb cmp movabs in xor movslq xlat (bad) loopne xchg mov adc loopne test movabs rex.X or or data16 and mov iret in push ja xchg cmc adc (bad) rcrl clc test test loopne (bad) lahf jrcxz rex.WXB and rorb xor adc movsb xchg hlt movabs cltd iret jmpq test clc xchg rex.X shrl or cmc movabs test mov jo sub xor and rex.RX loopne (bad) (bad) sub or popfq fs in test mov push mov cmpsb ja rex.WR movsl (bad) leaveq sbb loopne adc test out sbb cli jb jno jl rex.RX xchg loop (bad) fchs sbb or (bad) push test fiadd xor (bad) movabs push rcrb mov adc insb loopne xor add rex sbb and mov mov es add addr32 adc mov movsl loop stos in pushq out cwtl xchg pop lock (bad) pushfq loopne rex.WB cli xchg (bad) push loopne mov shrb jge (bad) pop std ds xor or sub lret (bad) (bad) pop shl rex.WX (bad) in xchg clc test add cmp incb mov sub add push push shr js sub clc or loopne repnz and ss mov mov ja cmp nop pop xor imulb mov loopne (bad) fldcw cli stos test (bad) (bad) out (bad) je in pushq imul sub loopne stos stos lods rex.W nop mov insl movsl and int mov jbe add add loopne mov sbb jmpq cmp sbb lea (bad) xlat or loopne out or (bad) clc loopne jge (bad) xchg xor pushq test rex.WRXB xchg cmp push (bad) cmc mov pop vmaxss or gs push int outsb lret push xor (bad) pop mov mov pop jg fwait jmpq rex.WRX (bad) (bad) xor out cwtl xchg xchg (bad) loopne (bad) (bad) pop sti lock jns (bad) shrl movabs (bad) sub (bad) hlt fwait and out jle add jmpq stc rex.WR and je mov sub lret rex.WX add in pop mov (bad) lahf pop loopne or movslq adc iret icebp mov jrcxz loopne xchg (bad) mov pop push ss imul cmc add popfq cli (bad) pop int rex.WR rex.X repz loopne xchg jns jp (bad) pushq pop lret adc mov cmc fistpl add xchg sahf loopne push data16 insb jle movabs loopne xchg xor icebp stc cmpsb loopne ss rex.WRB xor sahf mov sbb in (bad) in add xor incl sbb jo icebp imul imul out je leaveq out fwait xchg push push popfq or pop (bad) jnp jo std mov sbb and xlat loopne (bad) movsb pop fsqrt and addl mov stc pop notb loopne int movsl adc test (bad) (bad) mov xchg xor loopne fwait (bad) mov pushq enterq loopne gs retq adc (bad) xchg js sub and jmpq pop add icebp jmpq imul loopne xchg lods stc rex.XB adc mov rex.WRB cwtl loop cmpsq fisubr loopne and movabs push int3 (bad) fnstenv jae retq out insb shl and in callq mov lret stos callq rex.WRXB pushq je loop cli jbe sti fildll loopne mov push js leaveq rex.R jns rex.WB pushq clc in jle movsl movsb jmp shll mov (bad) cltd add sub push push jmp (bad) cmp or int3 loopne fimul faddl add (bad) insb lahf fsubs nop scas (bad) sysenter adc xchg sub push (bad) sbb (bad) addr32 negb setle add lock (bad) rex.RX jae mov or sbb (bad) jns hlt (bad) mov jmpq sbb rex.WR iret xor sub jmpq (bad) (bad) rex.WRX push in (bad) movsb popfq mov rex pop (bad) (bad) ja,pt push ffreep add stc cmp shl add orb movsl fmuls add mov loopne rex.WRX movsl jnp xchg or add rcll (bad) or and loop jle enterq mov insl cmpsl xchg cmp (bad) mov imul addr32 fneni(8087 fwait (bad) (bad) cmc and (bad) cmp or rex.WXB mov fstps mov mov movl sbb rex.WX sub sub cmove and imul test test jbe rex.WRXB lock (bad) mov jmp icebp fidiv (bad) (bad) (bad) rex.WX cmpsl loopne callq (bad) sti imul sub or (bad) cmc adc loopne adc mov ja stc test repz adc repnz cmp rex.RX out stc outsb add movabs cmp (bad) in movsl outsb add mov fadds xor fstpl loopne fwait xchg lret out outsb cs add rex.RB fsubrp xor (bad) loopne (bad) nop popfq test xchg sub stos test (bad) clc (bad) lock fnsave xor mov shlb jns pop xor lods (bad) (bad) and jbe cs mov rolb loopne xor add and in sti stos jmpq pushq xor mov rex.B mov or sub pop rex.WXB push in pushfq loope callq push cmp and or and out (bad) xor and push (bad) (bad) stos in jmpq mov (bad) jmpq nop mov or xchg retq mov sbb loopne idivl sbb out fucomp rex.WRB xlat xchg push lgs (bad) cmp mov loopne rorb xchg loopne and jo sub pop loopne movabs lahf xchg mov in movabs add add movslq js loopne adc sti loopne and sub sar rex.RX out stc xchg mov and rex.XB movabs cmp add rex.WX rcll rex.RXB pop xchg jmpq js xor or (bad) sub xchg int sahf lock rorb loopne push mov cmp in adc xchg loopne rex.WB popfq jle in cld or and out sub stos and xchg imul sub (bad) loopne fildl stc loopne xchg pop xor (bad) sbb pop xchg loopne (bad) mov out loopne fild push jnp jmpq and mov add mov roll jge (bad) movslq mov jrcxz add xchg movsl add (bad) js loopne xor add loopne sbb mov sub (bad) scas (bad) jbe fisttpll shl lcall push mov mov je pop add sbb loop sbb repnz cwtl (bad) add (bad) jrcxz retq rex.W sbb fistp bnd add add xchg fsubs (bad) loopne cli mov sbb loop adc xchg rex.RB loopne (bad) roll test mov sub xor lock sahf js xchg and movabs or jle mov jmpq sbbl sti xor xor outsl lret xor and loopne (bad) (bad) pushq pushfq mov mov jno (bad) jae pop (bad) movsl (bad) (bad) out sbb rolb cmp jmp pushq mov (bad) cli fidivrl neg xlat jnp fnsave push xor (bad) test shrl es (bad) lret xor rex sbb scas rex.WRX movabs movabs (bad) out loope jns and xchg loopne adc mov loopne adc mov xor and lret sbb incb xchg (bad) cmpsl push frstor out jrcxz and xor adc lahf (bad) jnp sbb pop shlb lret movsb imull xchg loopne mov cltd divb shr mov (bad) test nop and in loop lret cmp repz stc cli (bad) (bad) js loopne (bad) jmpq mov mov sti (bad) pushq push fstps sbb lret out rex.XB loopne ja mov mov sbb or (bad) jbe shlb (bad) pop sbb push and loope stos imul cmp jnp (bad) adc jmp mov movabs addl leaveq fstpt outsl cmpsl or (bad) (bad) pop xor ss jns vdivss jno add and (bad) sahf icebp cmp movabs rex.RX std loopne xor xchg or cmp xchg push rex.WR (bad) cmp adc outsl sahf sub adc rex.RB mov insb mov and test in xchg repz xor (bad) jg push (bad) jne iret adc cmc jae rex.RB cmc callq fistpll cwtl test and (bad) out jno xchg and movabs sbb lret cli out jrcxz adc lea callq fsubrs jge cld fdivp jl (bad) std ja xor sbb loope icebp insb rex.XB xorl out inc rex.W and pushq mov rex.WX (bad) rex.W cmp push icebp cmpsb pop sub pop rclb sbb movabs lods decb jl rex.WXB xchg addr32 loopne fnstsw rex (bad) (bad) pop movsb psrlw jo rex.WRB ja sbb out (bad) nop jb lret (bad) jne jmpq cwtl add (bad) push gs jb fcomi stos jnp adc mov (bad) callq xchg adc mov xor loopne (bad) rex.WXB adc add sbb pop je push (bad) jmpq rex.XB push outsb (bad) loopne cwtl cli callq jmpq cmp icebp test push loopne loop add sbb mov mov (bad) adc sbbl or (bad) loopne rex.RXB mov (bad) movabs ss cmc rorl (bad) shlb incl divb xlat sbb mov sub jnp stos loopne jp shrl fisubl jge sub jne (bad) repnz loopne,pn xchg mov xchg (bad) (bad) out loopne xlat xor and jg (bad) fldcw pop fsts xlat or adc out pop sub (bad) loopne imul (bad) test jle test cmpsl scas enterq jge loopne (bad) lods ror loopne stos (bad) cs or sbb or loopne mov cltd add adc out and sbb pop sbb pop mov pop cmp jmp loopne xor and xchg and jrcxz (bad) rex (bad) clc sub iret lret callq int3 (bad) cltd iret rex.RB movsb (bad) clc repz out in mov sub data16 jns movsl ffreep outsb adc jno sbb xchg std jmpq pop lahf (bad) (bad) (bad) retq cli test and jns add sub or movabs xor (bad) in iret rex.B adc pop and pushq data16 xchg lea movabs rex rex sahf cli (bad) fnstsw cmpsb icebp (bad) or rex.W cs callq (bad) loopne jo (bad) sub rex.WRB (bad) gs int loopne retq in sbb (bad) sbb pop (bad) (bad) xor movsb (bad) push cmp ds mov lods lret movslq (bad) (bad) mov iret (bad) push and movabs hlt in movsl cmp fisttpl sbb (bad) push mov jne mov (bad) jnp lahf jo cmpsl xchg pushfq xor popfq sub (bad) mov sbb (bad) lret jmpq lret rex.WRX or loopne lock shlb xchg insl xlat in (bad) mov ffree or fstps sbb add (bad) pop jnp mov xchg (bad) clc pop add fisttpll mov and pushfq rex.XB testb rex.W fwait xor rex.WR rex.WX lahf pop (bad) push sub jnp (bad) sahf shll fstpl xor (bad) loope pop mov jp xchg sub xlat stc in scas mov sbb movsb push add rex.RX and test clc (bad) or pushq mov xor or (bad) (bad) (bad) test jne jl lret xchg clc sub in sub rex.W pop int3 xchg push cli adc adc fiaddl rex.XB xor insb out enterq sarl (bad) fild pop (bad) cmp out addr32 (bad) xchg popfq loopne (bad) (bad) add ljmp rex.WX lock sbb rex.B (bad) and clc (bad) or ss lock (bad) add rex.RXB rex.WB (bad) cmp mov (bad) pop jns loopne xchg cli mov repnz mov sub pop loopne push rex.R pushq movsl popfq or jmpq (bad) lret lea loopne (bad) add loopne retq pop xor mov (bad) ljmp sub (bad) dec loope sarb negl jno out rex.RB rex.WRX sahf loop push in lret in rex.WRB lods or (bad) in mov sbb xchg fisub jmpq jle loope xor (bad) roll (bad) xor retq callq (bad) ljmp cmp pop shll rcl sbb retq clc sar sub sbb xchg mov (bad) imul push jmpq scas imul xchg (bad) sbb loopne mov fwait push add jg pushq imul sbb mov loopne mov sbb sub xor (bad) (bad) add loopne invd mov sarb pushq stc jo loopne lret iret fmull movslq sbb ja adc (bad) jp (bad) xor (bad) cmp mov xor (bad) shr sbb mov rex.WRB or shl mov addr32 (bad) cmpb lret (bad) notb xlat lret rex.WXB fidiv (bad) lock int3 imul je sbb and hlt or adc (bad) cltd (bad) ja adc icebp (bad) shlb pop pop stos sub rclb adc movsl test sub xchg rex.XB jl add pop (bad) (bad) sbb pop clc pop sub rex.R xor addl movsb repz out leaveq in mov rex.W mov movslq rex.WX xor (bad) movsl popfq rex.WXB retq xor retq popfq lahf jle test or cld and add mov stos (bad) add jle gs or jne outsb cmc ds bnd or roll fdivr xor and and (bad) xor stos in cmp vorpd popfq pop adc fsub sbb jmp mov shrl cld jns test sbb jno insb jnp mov sub movabs (bad) xor sbb mov loopne rex.X mov jno out out push (bad) (bad) pop and sbb jl retq out and repz lea mov cmpsl clc mov xchg loopne mov mov push jbe jno stos pushq ds push adc nop out repnz test cld xor cltd pop loopne add movabs movslq xor (bad) (bad) cmpsl cli mov hlt (bad) (bad) pop lret sub sti gs jp loopne movabs pop incl (bad) cmp ss jrcxz push jbe (bad) jle (bad) adc push retq (bad) cmp xchg jg pop loopne imul js adc (bad) scas (bad) repnz xor and mov jrcxz jnp (bad) in in xor pop mov (bad) fstps rex.W rex.WX sbb movabs mov push xor decb in mov cmpsl incl (bad) mov push mov push xchg imul rex.B jns pop incb xchg retq jo mov retq sbb push test mov and in leaveq sbb cmc fdiv insb rex.X push sbb callq cmpsl or sbb js adc (bad) insl and fimul (bad) movabs and out in push cli xchg sbbb mov (bad) adc loopne mov shlb repz stc (bad) cmpsb push add loopne cmp push icebp push xchg (bad) or (bad) rex.XB and (bad) (bad) rex.X outsb lock incl popfq addr32 shld and or scas (bad) or loopne xlat mov loopne rex.WXB movb loope add cmp sahf (bad) loop sub push fcmove cmp pushq fsubr lea sub movabs mov in xchg fildl adc pushq (bad) (bad) fsubrl and sbb rex.RX shlb movabs loopne mov fidivrl callq scas repnz test lea out loopne xor xchg (bad) pop xor adc mov (bad) fnstcw out (bad) cmp (bad) cmp out ja adc sbb mov xor xchg rex.XB xchg adc loopne and adc fmull rex.R and js loopne xchg rorl loopne callq cmovb xchg xor lock cmpsl or je repz jrcxz movsl sbb loopne mov pushq pushq cli rex.B and add adc sub pop loopne xchg je js btc (bad) mov (bad) jnp xchg xchg pop push cwtl sub (bad) sbb sbb fsubs xchg loopne test fmul sbb push mov mov and pop popfq add in sbb (bad) orl movsl pop int clc vmovmskps add (bad) popfq callq addr32 sub jns xor xor outsb rex loopne (bad) movabs and pushq add lods lret outsl loopne cs (bad) loop jne rex.WRX fs imul in es pop jnp mov loopne sub sbb mov loopne sahf jrcxz lea cs sbb loopne xchg jp mov movabs pop sbb (bad) (bad) pushq out cmpb sub or or movsb cld fcomi repnz test (bad) loop jae movabs std in adcb (bad) loopne leaveq stos (bad) insb loopne (bad) (bad) sub scas or mov cmp (bad) cmpsl sub (bad) and rex.WX es data16 and xchg icebp (bad) divb loopne pop push rex.WRX movsb add (bad) cltd mov popfq loopne pop (bad) rex.WRB lock adc loopne (bad) test rex.WB rex.WR mov lahf movabs fidivrl icebp loope lods rcrl mov add (bad) xchg cli pop movsb add or pop mov sti cld (bad) in loopne pushfq mov mov mov rolb jne mov loope mov adc in fidiv jae cmp mov and (bad) sub jmpq movabs and lods (bad) cmp and xor pop cmpsl (bad) or (bad) clc rex.RB cli sub (bad) jg ja mov out xchg movabs xchg insl lods nop repz mov test (bad) mov popfq mov add movslq addr32 or mull (bad) xchg xlat sti jg xor loope in or (bad) (bad) ja or rex (bad) movsb mov leaveq icebp (bad) movabs in (bad) jns push jp cmp sub addb rex.WRX pop sahf in fs sbb rex.WRB xlat (bad) pop jmpq and jbe sbb data16 repz adc repnz in push rex.WRX adc jge mov adc nop pop adc xchg mov sub push imul (bad) jnp xor xchg imul xor test rclb (bad) (bad) popfq rex.B or pushq movslq sub icebp (bad) mov outsl add callq (bad) gs (bad) pushq and mov or (bad) cmc cmp (bad) xor outsb cmp jg or mov rex (bad) subb mov mov adc xor shrb cli mov rex.RXB and mov insb push out (bad) mov push outsl mov and je test sbb sub clc iret cmc cmpsb (bad) in push and movslq sbb lret loopne (bad) (bad) push sbb movsl insl adc cmp cld fwait movsl repnz popfq (bad) loopne fs (bad) loopne nop (bad) mov loopne bt stos (bad) in addl sub jbe xlat mov sbb mov outsl jp fucomip xchg int rex.WXB shr sub (bad) jmp rex.WRX mov icebp (bad) cmp xor insl mov (bad) ja pushfq pop (bad) por lods mov fs outsb callq fwait stos pop out rcl adc int mov push mov lret sub pushfq sub jmpq fistl jg pop lea xor and xor divl (bad) xor jg pop gs movabs sub xchg (bad) sbb popfq push fisubr xor sbb add push outsl (bad) xor lret in (bad) (bad) es fwait lods test mov (bad) out loope cli (bad) scas sbb repnz mov pop enterq shrb (bad) test xchg shr retq mov jb movabs fwait lock (bad) addr32 rex.R cs icebp movslq pop sbb rex.WRB stos imul mov (bad) jl pop push mov add test push out pop (bad) roll fisttpl scas (bad) jne (bad) fimull xchg out rex.WRB decb repnz sahf cmp (bad) push and popfq (bad) out sub jmpq jbe mov pop mov incl mov movabs stos xchg outsb movslq push shlb out cmp je cld retq mov leaveq mov rex.RB insl rex.X rex.B in rex jo loopne subl in shrb xchg incl stc sub push loopne negl adc push fadd je (bad) xor xor jmp push cmp movabs xchg in xor push test sub jle dec (bad) mov xorl scas (bad) rex.WRX test pushq pop jge (bad) (bad) jmpq sub test loopne mov rex.WX loopne cmp mov push jle loopne (bad) rex.WRX rex.RXB add cwtl and sub cmp jl adc mov (bad) out (bad) out add loopne sbb cmpsl movsl leaveq xchg loopne icebp add pushfq rcr mov fcmovb pop pushq jmpq sbb xchg fnstcw (bad) xor xchg in sbb loopne ja cs fsubp mov jo or retq xchg (bad) pushfq rex.WR iret mov (bad) (bad) or imul jmpq loopne es add adc or (bad) adc lcall loopne sbb or repnz loopne and pushfq xor xor icebp jmpq js stc sub (bad) outsl fs mov mov sti movabs (bad) lods stc or jmpq xor retq cld test int mov cwtl loopne (bad) (bad) pop jp out test push loopne xor int3 loopne mov sbbl (bad) jle push std imul push push or retq sbb (bad) jo std (bad) or je mov cmp movabs pop (bad) out nop rex.WR pushfq sbb pushq adc out loop in callq rex.RXB rex.W xchg insl xchg (bad) insb mov rex.WRB loope jmpq sbb loopne mov sahf jg std int3 loopne mov adc xchg stc cld push (bad) xchg (bad) cltd add (bad) sarb adc movl jmp adc jmpq and adc out xlat rex.RXB loopne adc pop loop cwtl (bad) loopne or mov (bad) repnz ds xor add adc testl sbb loopne out jle retq loopne (bad) enterq rex.XB imul jp mov rex loopne xchg mull jge adc xor (bad) add rex.XB cmp lods push insb mov or (bad) enterq rex.WRXB jae lods mov xor repnz test sbb loopne xor xchg adc (bad) (bad) loopne ficompl sbb (bad) mov stos jmp movabs movabs sub incb adc rorb rolb pushq int rex.WR sub rex.W jns enterq inc jle jo loopne and add lahf callq add or or data16 test fbld xchg sbb loopne sbb push mov ja pop cmp loopne jmpq xchg ds (bad) loopne mov and in outsb push cmp clc sub jne or enterq jno in rex.WR cmp (bad) loopne jo (bad) rex.WRX outsl jb rex.WRB rex.RB (bad) xor out popfq rcrl xchg lods push (bad) mov loopne mov cltd (bad) jge movsl loopne mov fchs addl rol mov mov stc xlat xor sbb adc mov xchg fist adc (bad) repz in sub or addl out stc xchg pop out sub (bad) mov xorl (bad) mov (bad) (bad) xchg sbb (bad) rex.XB retq movslq callq (bad) (bad) in pop (bad) xor lods xor mov (bad) jmp sbb (bad) mov adcl stos xchg movsb (bad) sub jb loopne (bad) rex.B outsl icebp insl mov pushq pop (bad) adc mov jp icebp xor fcoml xor jno mov mov movabs adc movabs (bad) out mov lret adc mov jae je (bad) mov mov icebp xchg fsincos push ss push jb mov (bad) jmpq lods cltd jbe (bad) cmp jg movabs in sarl cmp addr32 rex je jmp add jrcxz push scas fsubs cmc rex.WRXB movsb sub insl push (bad) out sub (bad) rex.RXB xor js lret or rex jnp and xchg mov rex.WRX repnz shr xchg orb jrcxz xor sbb movsl roll (bad) in enterq xchg xchg jle jmp push shl sub icebp cwtl (bad) loopne push outsl (bad) retq xor out fs jg cmp jl in movabs loopne lock loopne fstpl mov jne enterq jns jb loopne fistl loopne add out test cmp sahf xchg xchg xor rex.WXB callq (bad) sti mov xchg loopne test clc scas mov data16 and (bad) push (bad) rex.WR sbb (bad) insl or push xchg jg cli cmp in imull fwait cmp loopne (bad) nop rex.WXB iret add movabs pushq (bad) lcall xchg mov pop outsb in rex.WRXB lods fldt data16 movsb rex.WX vdivsd stos icebp mov (bad) adcb (bad) (bad) xchg jo jge lcall rex.RX cltd iret (bad) xchg push movabs stos sti pushq (bad) (bad) shll (bad) bnd jge rcrl jnp rex.B cmp or retq (bad) cmp fisubrl jno add push loopne rex.WX or push insb (bad) xchg or mov callq jo rex.WRX adc (bad) jb movsl test mov jns fistpll fsubrl (bad) fnstcw push sti mov out (bad) loop repz sahf or loopne sub rex.WRB (bad) test in (bad) rex.RB mov in callq (bad) loopne movb andb rex.RX rcr (bad) loop enterq sub (bad) rcr test (bad) jnp (bad) es or fwait xor rex.RX addr32 (bad) retq and (bad) (bad) sahf movabs and pop or stc movabs cmp (bad) loopne xchg in ja cmp sbb (bad) add mov xchg movabs lcall adc (bad) (bad) add loopne (bad) xor push xchg ficoml (bad) add (bad) out movabs test cmc xor push lahf (bad) cli addr32 in fsubp subl popfq in outsb pop sub (bad) fucompp cwtl cmpsb in subl sub movsl repnz lods out xchg rex.WRX mov sub in and jo out jnp rex.WRXB xchg rex.RXB lock test repnz rex shr mov (bad) or out ja rcll mov loop loopne mov mov jp (bad) adc jb frstpm(287 cmp jbe cmp xor (bad) mov loopne and loope cmp adc jno pushq add pop loopne loope stos (bad) mov (bad) hlt movabs pop xchg movslq stos (bad) lahf (bad) insb add adcl mov jbe sarb (bad) loopne rex.WRB rep test cmp add xor cs leaveq (bad) lods or mov cmpsl (bad) hlt (bad) rex.WB cmpb cltd add mov jle xchg mov adc mov loopne cmp jae icebp mov bsf in xchg fwait in or adc iret jbe mov rex.WRXB movsl cmpsb adc mov cs notb jmp shll out add int js outsb in std (bad) jmpq loopne and (bad) push shlb (bad) loopne mov (bad) pop cmp movabs cli add adc xchg ds movsl lret loopne repnz push repz shl mov rex.WXB sbb (bad) test es (bad) pop loopne popq or adc mov mov push loopne add (bad) lods scas repz pop jg mov and (bad) add mov lret movabs sbb adc cld xor sub mov rex.WXB adc test mov cmc loopne vpshuflw xchg loopne in es push in lret pushfq sti stos loope sbb loopne sub xchg rex.R ss cli lahf (bad) jmpq loopne neg (bad) cmp jle out rcrl popq in and (bad) cmc jp loopne jno push cmp lret rol in (bad) loopne xchg add xor mov jmpq movslq in lret mov (bad) test rex.XB mov insl or loopne addr32 and mov fild lea gs (bad) (bad) adc (bad) sbb pushfq (bad) lcall xchg push or sti jle jmpq fsubs adc fisubr out xor lret (bad) xor (bad) adc loopne hlt in fdivr adc loopne repnz loopne enterq mov lret in (bad) (bad) imul mov test in (bad) adc add jrcxz and rex.WX cmp enterq or cmp movsb or rcrb out out out outsb insb mov movsb retq in sub (bad) sar movabs mov sar sbb cmc adc addr32 imul adc (bad) lea data16 imul (bad) sarl mov (bad) jnp mov rorl icebp pop jl jne push insl in mov sbb mov sub movsb paddq add loope out rex.X rex.B in fmuls add sbb xor lods xor (bad) (bad) rex.R and (bad) (bad) or stos sbb pop (bad) out mov adc mov pop loop out mov rol pop xchg (bad) mov or pop or xchg cmpsb or popfq cmp add xchg movabs fldenv push or insb xchg add mov xor xor jo (bad) hlt and (bad) jle hlt (bad) incb push scas stos (bad) popfq sbb loope test leaveq cmpsl mov (bad) addr32 mov icebp adc and add jne callq mov rex.X int cmp std out sbb addr32 mov jl (bad) adc retq adc pop rex.RXB pushq push lock xchg (bad) div rex.WRX sub loope (bad) pushq cs jnp cmpl (bad) test in pop shlb xor rclb xchg rex.WRXB es sub mov movabs or rol or lahf sbb (bad) lock mov movabs imul rex.WX add xlat popfq (bad) cmp lret sarb ja push (bad) mov jp mov (bad) rex.WB outsb out (bad) jl jnp xchg (bad) (bad) neg in jae fwait imul jp push adc rex.X fistpl in (bad) or movabs sub xchg rex.WX in jl pop (bad) ds cs or rex.WRB rcll mov (bad) add (bad) loop adc (bad) leaveq fisub movabs fdivp jle mov rolb (bad) (bad) loop xchg or cmc jae,pt pop sbb cltd in enterq xchg (bad) rex.WRB rex jg (bad) mov (bad) rcr rex loopne push es mov in mov movslq pop in nop jmp iret loopne divb pushfq cltd mov es int3 ja add loopne insl outsl mov mov or add sub or jno outsl xchg scas (bad) add (bad) xchg pushq test stc and pop cltd pushfq mov (bad) sbb fcmovb mov mov nop (bad) cmp scas imul loopne sub retq jnp mov loopne (bad) mov es add pop fcoms (bad) sbb rclb imul ss ds xchg loopne pop mov scas loopne movsl (bad) fdivrl lods popfq lret movabs je push (bad) scas adc mov std push pop (bad) xor mov xchg pop (bad) and (bad) cmp (bad) sbb loopne (bad) cmp jae,pt pop loopne fisttpll out shll clc ds rex.RB (bad) loope cmp loopne add in xchg jle loopne (bad) lret (bad) sbb scas (bad) in loop xchg fdivr loopne (bad) and fwait (bad) hlt and and fld pushfq mov jno xor nop xchg push (bad) and stos lock sub rex cmp movsb int3 jmpq xchg cmp movabs movslq rex.WX sub rcrb movabs mov push adc (bad) loopne (bad) insl (bad) or mov or xchg scas movabs loop mov (bad) scas and xlat (bad) jrcxz cmp mov (bad) (bad) (bad) lock pop movabs sub rcl bnd movabs (bad) or sub mov jns mov pushq (bad) stc movabs xor (bad) mov pop je mov jne (bad) hlt adc cmc test test mov dec sbb in xor (bad) xor subl mov cmpsl lods cmc sub repnz rex.RX insl in adc xor (bad) sbb (bad) clc stos mov xchg loop movabs cmp or fsubl (bad) (bad) ficompl fimul imul test loopne (bad) jg mov (bad) rex.X add loopne rex.RXB xchg mov stc movabs movabs mov loopne lods std cli fcomp fnstcw sub pushq or mov insb clc mov adc pop and retq loopne (bad) push in (bad) jp in xor mov cmc fnstcw outsl lods rcr rex.W (bad) (bad) sqrtps fneni(8087 (bad) jmp movabs cmpsl mov xorb xchg lea rex.WRX imul pop decl mov (bad) and push movsb in push (bad) in pop shl xchg rex.WRB out cmpsb mov (bad) mov pop rex lods movabs (bad) insl xchg or icebp lret rex.XB (bad) push int3 mov rcll pop (bad) movabs xor (bad) js (bad) test pop add rex.XB movabs add add test or test cmp (bad) icebp rex.XB xchg jb mov loopne insl jmp xor and lock xchg mov cltd out loopne push rex.RX mov sub es outsb xchg repnz jbe data16 sbb loopne xor cli (bad) add sarl mov (bad) and jno pop loopne adc pushq mov fucom xchg ds rex.WB gs in loope sbb out outsb std and xor xchg imul lods retq insb add mov jne in adc (bad) insl sbb lods xor (bad) and xor cmp sbb addr32 in xchg (bad) fwait lea add leaveq (bad) fnsave or lods jmp (bad) sahf testl scas (bad) cmp in (bad) rex.WRB in (bad) (bad) clc mov add rep out sub jrcxz lahf rex.RX retq scas loope (bad) mov and pop rex.RXB adc mov xor mov clc gs or data16 js loopne rex.RB mov rorb and nop fwait rex.XB movabs xchg lahf and adc leaveq cwtl in mov retq pop sbb movsb adcl mov (bad) (bad) and push popfq (bad) loopne jp sahf shrb fnop and sbb push loopne jbe mov pushq lock mov mov or xorl cli (bad) in shl (bad) jbe decl out (bad) in decl in add shrl mov adc (bad) or fwait pushq rex.XB in stos mov push and (bad) cltd loopne iret fistpll in rex.RXB int mov test iret add loopne hlt mov in adc in xchg (bad) (bad) or adc loopne movabs insl rclb (bad) (bad) leaveq loopne (bad) test ss rex.WR jp rol and out (bad) scas jmpq iret test (bad) add addr32 or loopne xchg add int stos sbb rex.RB and popfq add mov rolb push roll jo imul adc sbb jl (bad) mov lret in jnp lods xchg outsl pop rex.RX insl rex.WX pushq mov unpcklps mov cld repnz addr32 loopne pop or jne jbe pop push (bad) sbb adc xchg cmp (bad) lods std test outsl sbb adc pop retq cmp pop loopne mov scas xor xchg movslq (bad) mov (bad) sbb or leaveq insb xor pop imul rex.WRB jno rex.RXB movabs mov mov scas push (bad) out test cwtl rex.WRB jae (bad) lcall sahf add cmpsl cmp and rex.WRXB adc notb mov cmpsb sti mov movb repz movabs imul jle xchg push loopne (bad) pop rex.WR gs (bad) loopne out cli int3 rex.W fimull xchg gs or loope pop sbb (bad) mov fwait shlb fdivl jle es xor adc loopne push cmp jrcxz callq rcr mov xlat loopne ja mov sbb movabs sub mov in cltd jmpq (bad) jp (bad) fcmovne pushfq or fucomi movabs mov retq pop (bad) test jo rex.WRXB (bad) shrl mov movslq fs jns outsb pop mov xchg int3 cmc cld jl rex.WR and rex.RB (bad) (bad) (bad) in icebp insl in movslq stos movsb push sub (bad) sbb mov push fwait adc cmp lret enterq and imul (bad) jb jrcxz xchg in (bad) repz rex.WRX (bad) mov or fstps cli pop in cwtl add xor (bad) sti pop out (bad) data16 jmp rex.WRX addr32 xorb sbb xchg cmp and lret jo rex.R xchg mov sbb out push add sub mov jl mov mov (bad) jmp popfq (bad) cmp add adc (bad) (bad) sub (bad) insl (bad) (bad) cmp mov jnp lret (bad) in rex.WXB mov test (bad) (bad) es adc mov retq xchg sbb add xchg rcll add callq and rex.RB mov or (bad) stos in (bad) ja rex.R xchg loope icebp shrl stos test addr32 movabs cmp and mov sti xchg rex.R icebp pushq cli (bad) xchg es (bad) cmp je mov cmpsl push callq gs fwait sub push in cli mov (bad) mov and lods repnz or loopne icebp fsubl out fst sub sub rcr rex.R xchg clc loopne adc jp xchg jae rorl (bad) loopne cmpsb push sub movabs (bad) cmpsl add mov loop (bad) sbb lods movabs jg cltd mov movabs bnd rex.WRXB rex.WXB (bad) mov mov (bad) (bad) (bad) loope rex.WRB jg or xchg mov rex.WRXB xor (bad) pushfq outsb or sub or xor out cld popfq cs (bad) retq rex cmp fsubrs fwait loopne movb test sub stc cmpsb retq (bad) sahf mov add xchg jmpq jmp mov xchg adc sbb push in in mov xor (bad) incl mov xor data16 retq pop xor movabs fsub pop (bad) pop testb outsl pushq sbb out add lock shrb insl add (bad) pop cli jl insb (bad) xor (bad) mov out and leaveq imulb (bad) (bad) push scas sbb pop cmpsb add loopne je jnp js (bad) xchg jmp test scas (bad) pop loopne in (bad) lods rex.RXB pushq lods stos loopne or cmovne clc popfq mov fstpt loopne xchg pushq (bad) icebp retq mov repnz fwait rex.WXB es loope js movabs mov cmp jrcxz xchg rex.RXB gs loopne mov and loopne movslq or or (bad) imul xchg loopne div rex xchg jrcxz (bad) xchg add jb loopne xor xchg xlat flds (bad) movabs hlt pop (bad) imul (bad) loopne ja cli movabs movabs adc mov in adc xlat jno loopne mov je (bad) fsub mov jo (bad) stc sarb fwait loopne mov (bad) pushq out xor loop jl xchg mov loopne (bad) loopne (bad) cmp pushq loope jle test jmpq andl adc out xor imul rex.RB repz stos add pop cs test cmp rex.RX jle loopne (bad) movabs and rex.X rex.WRX pop scas jns rex xor stos and hlt out adc push loopne adc mov mov in (bad) cmc callq (bad) movabs jg (bad) repnz imul rex movabs and insl movslq movslq rex.WRB rex.B out addr32 scas fimul int ja jle jb (bad) (bad) jle xor loope push and iret and xlat (bad) lods add clc xor in jmp loope icebp (bad) (bad) loopne mov imul loop lods sub adc int3 pop (bad) cmp mov out (bad) pop (bad) mull add add fistpll push movsl imul pop loopne iret pop enterq movsb in push nop retq (bad) cmpsb popq jo lret mov rex.W mov ljmp and add lret movslq mov cmp mov rcll movsb ss (bad) rex.RB (bad) xchg cld out movabs xchg js pushfq pop mov stos add ds mov (bad) out xor jg (bad) (bad) lock add (bad) mov adc mov loop mov fucompp lods retq sarl cmp rcrl rex.XB push in loopne movabs fisub je pop fldl movsl (bad) jge in adc xchg cmc repz loope fiaddl fwait xor rex.B or (bad) and nop mov sbb (bad) pushq adc clc pop (bad) sub xlat fistpl or movabs (bad) out sbb (bad) movabs (bad) cli repnz stos es (bad) int3 add movabs rex.XB cmp fnsave (bad) and std stc (bad) mov clc cmp loopne xchg fucomi rex.RX xor loopne out (bad) int sbb adc (bad) data16 movsb lods sub loopne xor (bad) jmpq jge test loopne insb leaveq fbstp data16 sub imulb je nop (bad) (bad) push xchg loopne (bad) (bad) xor icebp roll nop sarb lods jge (bad) push (bad) incb xchg movabs (bad) jl sub pop popfq psubb in movabs fwait cmp (bad) divl gs cltd pushq xor (bad) outsb (bad) nop enterq rex.R xor xchg xor mov jmpq sub mov outsl or loopne fadds xchg jrcxz cmp (bad) movabs je data16 cs adcb xor cmpsl and leaveq pushq push mov jb xchg pop (bad) retq test and add pop rex.WB mov loopne mov loopne pushq or pop add negb loopne and jb loopne sbb sbb or outsb adc (bad) (bad) loop repnz iret or in test jmpq (bad) pop sub mov lret loopne (bad) rex.WR (bad) rex.WRX fmul pushq shrl pushq rex out (bad) xchg sti stos loopne (bad) pop (bad) mov xorb pop mov or loopne cmp pushq cltd rex.B mov (bad) sbb or ficoml mov rclb stos sbb and pushfq loopne (bad) fs cmp out (bad) (bad) mov xor sbb mov (bad) hlt adc out mov ds sbb test roll loopne out mov insb and stc sub push sarb test (bad) xor mov and loopne jg callq cli insb (bad) mov cmc fildll and shl lods popfq lods cli stos mov loopne mov out (bad) (bad) rex.WRXB loopne mov (bad) pop js loopne pop (bad) xor xchg mov xchg sarl addb jmp jp xchg and adc movsb scas pop add (bad) push pop (bad) rex.R rex.WR (bad) js in sahf mov adc movabs test sub sbb icebp xchg cwtl (bad) js data16 insb push in xchg loopne clc add cmpsb (bad) cmp jo mov sub cmovne and fisttpl pop int3 test fwait sbb jg outsb cltd adc xor loopne jp rex.WRX popfq xchg add sbb jle in fistl (bad) (bad) pop insl stos loopne out lods (bad) cmp icebp rex.B int3 jl (bad) loopne test movabs cli gs (bad) mov (bad) mov lods (bad) push add rex.WR push or (bad) cmp push (bad) clc repnz int (bad) loopne pushfq or xchg loopne mov rcl jns sbb loopne rex.RX adc jnp adc (bad) rcrb loopne rex.RB cmp (bad) leaveq jno mov mov (bad) (bad) callq sub or comiss add rex.WRX jb mov or xchg movsl imul push (bad) gs rex.WRX mov scas cs (bad) add mov rex.WX jmp push xor jl (bad) xchg mov repz (bad) loopne push repnz xor sub add add je lea (bad) incl movsb (bad) data16 loopne nop cmc mov jmpq (bad) pop test pushq (bad) mov (bad) in pushfq adc loopne (bad) jle orl pop cwtl jno xchg loopne imul shrl add lret icebp (bad) mov jmpq rex.XB rex.RX loopne xchg xor ja psubsw (bad) or push and xchg loopne pop xchg retq xchg (bad) loopne push (bad) sbb lods fnstsw mov jae push and mov (bad) roll mov loopne jnp int fwait hlt sub (bad) cwtl adc rex.WXB mov jae mov mov mov shl (bad) (bad) stc and in cwtl cld loopne test movabs ja pop loopne push int and or mov mov loope rex.RB and movabs or (bad) ja and rex.RX (bad) mov loopne cli pop sub and jmpq repnz in andb out jmpq sbb int fs xchg loopne xchg sti (bad) fidivrl test jle mov mov test push insb loopne scas mov (bad) iret mov movabs (bad) jnp sbbl xchg (bad) loopne fs lret mov sti fiaddl cltd and sub xchg rex.X fdivs loopne xchg cmp push loopne roll and ja int add cs push or jp rex.WX adc mov sub adc jns fnop andb (bad) gs xchg adc loopne loope pushfq xchg jo out (bad) push (bad) cmpb movsb rex.WRB icebp (bad) push push jp mov push xchg push mov decl clc add repz lahf ja (bad) fwait scas in adc jg (bad) int3 lods rex.XB add or pop pop lock mul mov rex.WRXB fiadd mov in mov jl mov add jns jmpq or mov (bad) retq clc hlt (bad) cli (bad) lcall gs cmp mov rex.WB jo movabs push xchg mov jnp (bad) imul (bad) add fcoml (bad) pushfq sbb xchg callq push or adc add jno cmpsl shlb clc add sbb (bad) mov je pushq or jmp hlt xchg push rex.RXB out (bad) test fcmovu (bad) sahf lret enterq cmp (bad) (bad) add (bad) jae mov callq jge jae in mov rex.WRXB and mov pop outsl mov pop jb outsb pop ds adc xchg cmp js or out rcll pushfq mov sbb sub je ror rorl gs sbb (bad) adc movsb icebp sarb and pop sub icebp imul push enterq cmpsb xor adc fisttpll jg repz adc rex.W rex.W js jae (bad) in and and add (bad) pop jl or pushfq sub (bad) stos in jmpq es jae mov in mov xlat mov sbb in movslq rex.RX rex.WRX rex.X out pushq ss jrcxz lods rex.WXB out jno adc fs jo out sub jl add xchg jge outsb addl (bad) imul mov mov jl xor sub rex.XB adc rex.RX icebp pushq xchg cld (bad) rex.W xor fsts jnp lret (bad) (bad) pop sbb and movabs cmc addr32 mov xor xor rol addb rex.WRX (bad) sbb mov fs add retq add xor lods rex.W rex.WRB rex.WRX rex jp mov lret cld jge mov push add insl or mov pushq (bad) (bad) ja retq (bad) mov (bad) xor mov fcompl addr32 sub xchg (bad) jl iret retq roll add add add (bad) mov adc pop cwtl or outsl and jno cmpsb outsb andl and sub rex.RX fidiv jo,pn rex.WRX mov or cmp mov (bad) loopne adc js rex.RX (bad) xor (bad) and xchg sub movabs (bad) mov movabs pop xchg insb sbb rex.WX jl callq (bad) pop or xor test and cmp mov out retq rex.WRXB icebp jle (bad) sbb cli mov testb rex.WXB ss pop sbb addr32 int shr pop or cmp xchg lahf xchg rcll adc and ds sub cmpsl test mov out repnz adc and mov sub (bad) jae mov fwait psubusb adc xor pop nop gs and (bad) rex.WRXB stos cmpsl fcmovnu (bad) and icebp mov cmp (bad) rolb pop lret fsubs in pop rex.WXB cmpsl test mov mov and jmp push out sbb lret xchg movsl or mov loopne rex.WX fnstenv cmpsl mov outsb (bad) pop adc in rex.W pop scas (bad) and xchg test xchg loopne xchg in push jg xchg sub mov stos mov (bad) mov std cwtl loopne loop fildll (bad) jge push xor rex.RXB fwait loopne or test mov xlat and mov rex.WRB loopne sub cmp (bad) mov in lods movabs cmp jmpq (bad) loopne (bad) cmp loopne (bad) (bad) in (bad) fidivrl sbb rclb dec sar in orl jg xchg add loopne jge xor jmp rex.XB movabs cs jmpq loopne (bad) jg xchg rex.WXB add cs out lret test mov loopne scas repz push enterq imul loopne (bad) rex.WR loopne (bad) sti or pop fdivr mov sbb sarb sub callq (bad) loop xchg rex.W test and loopne rex.WRXB gs rex.WRX loopne ss cwtl (bad) clc retq rex.RB stos outsl (bad) jo int or add icebp mov adc movslq in and mov ror (bad) (bad) mov mov xor loopne and ficom scas add nop mov jl movsl xchg rex push sti jns (bad) (bad) movabs loopne or in clc fs push nop xchg (bad) mul lret jrcxz icebp cmp add loopne cmp mov stc push loop loopne (bad) mov psllw lret ja (bad) sub mov mov jl jmpq in int xor and push or cmc (bad) sbb loopne enterq mov lods sbb ss movb (bad) lret jmpq pop and (bad) mov jl out lret fimull add loopne ds mov jmpq mov fisubrl sbb pop movsb xchg loopne sbb and loopne add (bad) mov rex.WB xchg sbb repnz and mov mov xor rex.RXB iret mov incb out xor shlb mov movsl movsb out rex.WX (bad) andl in test adc out loopne sar xlat (bad) pop add and rclb stos mov mov push add pop pop (bad) xchg cs test clc popfq movslq loope icebp jmpq loopne mov imulb adc in rex.WX (bad) jne pushq add loopne data16 lock mov push xchg loopne sbb cld push scas loopne xor cmp mov lret adc adc popfq loopne movabs push push pop retq movsl sbb ljmp pop sar add mov loopne cmp (bad) fbstp loopne xchg xor or movabs sbb pushq (bad) repnz fiadd sub mov mov xchg xchg rcl dec roll cmpsl (bad) sub rcrl orb test rex.WXB adc jp loopne rex.WB repz adc adcl cmp push jns int xchg jno fcoml outsb mov mov rcr mov lahf (bad) jp movabs out and callq (bad) sahf push mov sbb (bad) rex.XB js and nop and (bad) (bad) loop in sub movabs fwait loopne mov imulb (bad) cmc and repz or mov xlat cs shll xchg (bad) in xchg xchg fidivrl nop sbb rorb scas pop roll outsl sub mov or pop pop add (bad) xor fisttpll or fwait (bad) rcrb sub pop (bad) out std (bad) push mov js push add scas fwait xchg decl (bad) mov xchg rex.WR xchg (bad) loopne jnp jge mov (bad) push mov mov pop shl push lret rex.B pop cmp jmp xchg cmp and loopne mov imul add cmp (bad) push out pushfq (bad) (bad) rex.WRXB mov fnop mov adc rex.RB retq xchg cmpsl sbb cmc xchg movsb (bad) jns or scas rcrb jbe loopne mov pop sar in and jl divl or or xchg cmp sbb cmc rex.R loopne cltd mov sub test mov push movsb xchg orl add push (bad) jl std xchg rex.RX rex.B cltd movsb pushfq shl (bad) gs jg out xor rcll or adc xchg mov (bad) (bad) repz xor leaveq cli cltd mov test (bad) rex.RXB pushq and mov stos cmp out cmp sti test xchg (bad) cli xchg cmp and shl imul (bad) mov or loopne add or or rex.RXB jrcxz notb shrl rcrl jp and loopne jb xchg jg or fidivr xor (bad) add jmpq sbb movsb loopne fisubr mov addb loopne callq test loopne cmc js push cs rex.WXB rex.RXB imul retq mov or sub pushfq mov imul sbb jne iret (bad) out out and sub mov xchg (bad) mov out (bad) (bad) fcmovu sbb std cvtps2pi xor push imul icebp cmp mov cld mov loop xor in xchg adc mov rex.RX mov pop (bad) lahf fwait (bad) neg rex.XB mov xchg hlt rex.R movabs and adc sbb mov jl push push xchg xlat mov loopne mov loop and js rex.WB rex.W test retq jns (bad) add repz jrcxz push je mov or xchg cltd out mov loopne mov and loopne add (bad) xchg rex.WXB rex.WRB mov (bad) rex.R addr32 enterq loopne mov mov test and add js movslq (bad) (bad) xlat (bad) enterq loopne xor clc xchg sahf repz jb push mov sub mov cmp addb (bad) loopne loope sub (bad) cli jmpq xchg xchg and ss mov mov sub shll loopne (bad) xchg mov mov push out cmp rex.WRX shll (bad) in sub (bad) rex.WXB sub and scas jmpq mov sbb xchg cmpsl popfq mov jb retq callq movabs movb lahf insl repnz lea scas cmpsb push pop in roll and in lods adc and fs (bad) movslq sbb out xchg (bad) (bad) or hlt xchg lock subb xor jg fist jrcxz stc mov sti ror retq adc stos cmp (bad) test pop rex rex.XB out jp xlat sti jbe mov add fldt in loop gs cld fsubrl inc mov (bad) clc (bad) test lock in imul cmpsl xor adc xor sbb sub leaveq stos jle test jle cmp push xchg xchg mov test sub mov popfq (bad) jne (bad) adc repnz mov adc in gs std jp outsl add (bad) shrb data16 or rex.WX (bad) lock stc (bad) fimul out test jo (bad) lods jae add scas rex.WXB ftst data16 mov jrcxz xchg add mov and and retq psrlw out jnp js,pt cmpsb xor sarl test cmpsb in push sub (bad) xor or push rex.R jmpq movabs push int in xor adc movsb mov sbb rex.RB ss mov retq pop (bad) (bad) sbb mov fsubs push sahf mov mov (bad) sbb (bad) xor push (bad) add (bad) add lods loopne mov loopne ja cmp and movabs nop fsubs mov pop mov in xor movabs (bad) add fsubrs repnz mov adc pminsw rcrb and or fistpl jmpq (bad) sti movsl fidivrl sti and add jmp shll mov xor out pop (bad) pop cmp (bad) clc mov cmp xor in xor jo mov loopne test sub lods xor rex.WB cmp fdivp cwtl xchg retq retq loopne or callq loopne or and loopne jae sti lods add out cltd rex.B lods fistl outsl pushq sbb xchg mov or cwtl (bad) andl fxtract callq leaveq jmp xor add rex.X rex.WXB rex.WR add sub mov (bad) nop add add pop or in es (bad) rex.WX int3 fildl loopne pushq lods in mov (bad) rex.WRX lea rex pop jmpq lret outsl cmp xchg js push in (bad) jbe rex.WX (bad) icebp sub cli cmpsl add jmpq sbb sahf (bad) lret (bad) xchg sbb fcmovb jmpq fwait out add lods sbbb decb rex.RXB jl scas lahf rcrb and fs and (bad) pop test and jno xchg shl jnp mov fchs adc loope rex.XB sar out lret pushq and sbbb loopne jl mov cli loopne sbb and jns fstpt (bad) jp movabs push leaveq and loopne mov jmpq loopne movsl mov mov cld sub rex.W pavgb push (bad) test and (bad) outsb xchg sbb cmp mov cmp jg pop mov (bad) in popfq sbb test mov sub jrcxz jnp mov rex.RXB xor and adc (bad) in out (bad) cmp and sub andl loop or (bad) push fneni(8087 loop rex.WRB fsubrp leaveq and enterq (bad) jne adc cs (bad) loopne repz ror and sbb pop sub xchg cmp (bad) mov sub (bad) xlat out fldl negb in mov movsb (bad) movslq insb adc pushq mov adc test fucom jno rex.RXB ss int pop ljmp (bad) xchg sub loopne (bad) (bad) jg roll xchg mov rex.WR rex.RXB rex.RX movabs and and jmp imul and pop decl xchg (bad) add icebp jmp movabs fwait or int3 (bad) jo loopne adc xor add sbb imul add add xorl out pop push rex.RB mov mov shl int3 jge roll movslq loopne cmp sbb jo sub cmc rex.RX xor mov xchg repz fdivrl movsl xchg fisttpl mov (bad) pop int (bad) xor loopne hlt sub (bad) cmp cli sbb (bad) fiadd cli or mov fdiv rol negb retq sahf xor in rorb sbb sti rex.WR (bad) pushq push rex mov mov mov (bad) mov push loopne loope lret mov fisub (bad) rex.WB cld cmp (bad) xor ja xchg notb loopne mov sbb rex.W decl stos pop rex.WXB rex.WB rex.RXB rex.X jmpq loopne xchg stc fs test push jne mov or cmp nop and adc xchg callq fistl xor pop or clc add sar jae icebp (bad) ror and loopne test jl in ja out cmpb mov (bad) fstpl add jrcxz sbb movsl cs (bad) ja xlat or int mov jnp cmp push pop lods (bad) cmc add jbe or sbb fs mov sub (bad) movabs js leaveq jle (bad) push movabs test (bad) fsub or movabs sbb sbbl rex.RX movabs cmp (bad) out pop jno mov adc (bad) rex.WR add rex.WRX push (bad) rex.RXB in nop cmpsb loopne jge mov movabs xor out (bad) (bad) mov xchg adc (bad) loopne rex.WX xchg repz stc loop (bad) jmpq sar xchg jl rex.RX or rex.WB xchg (bad) (bad) retq cli sub jne pop cmp pop outsl rex.RB pushq es and sbb and hlt mov retq mov mul sbb (bad) xor cmp mov (bad) (bad) test fdivrs sub test gs retq (bad) jo sub pop rex.X xlat imulb rex.WRX rex.RX test jo fwait notl sub sub adc (bad) callq addr32 rex.B insl rex.WRX lahf (bad) lret sbb rex.WB rex.WRXB sub xchg add rex.WR cli icebp add es (bad) int3 pushq rolb sbb push push movsl loopne (bad) rex.WRX add jmpw push (bad) sbbb jrcxz jbe (bad) jg (bad) lods cmp pushq cmp jno push jrcxz std ds mov mov jmpq adc and cwtl sbbl jmpq (bad) adc (bad) pop jb xor (bad) sbb (bad) and mov mov loopne decl fcomps adc lods loopne adc addr32 rex.WB or add rex.RB mov or sbb xor mov (bad) scas nop cs sub rex.XB xor std gs (bad) pop stos mov add cld clc (bad) fisubl xor shrl (bad) mov repnz jns (bad) mov xor callq sub rex.WXB pop xor (bad) js sbb loopne adc jl jae xlat mov movabs (bad) pop rex.RX mov movabs xor sub idivb iret fisttpl (bad) or int rex.WB (bad) (bad) mov jne jle (bad) xor rex.WRX xchg push ja (bad) xchg outsl sti fstpt gs icebp (bad) retq or push push pop loopne ss xor jp cmp fisttpll movabs out adc (bad) sbbb loopne sti in nop (bad) mov or rex.RXB incl pop imul movabs sti or add add pop adcb and lea mov loope sbb cwtl (bad) jno (bad) rex.WRXB stos retq jmpq jmpq cmp xor mov icebp xchg testl (bad) movsl pushq mov xchg sbb icebp ficompl jo xor repz insb push (bad) add jns (bad) mov cli clc pop imul (bad) fistl ror in cltd movabs out sbb out (bad) fsubrl pop vaddpd retq mov clc sub jmpq rex.B sbb in (bad) rex.WRB loopne out cmpl cmp sbb icebp (bad) and js loopne cmp jb (bad) stos movabs loope adcq (bad) not cmc out fnsave add data16 xchg out or (bad) test sub rex.RB push movabs xchg cwtl in xchg (bad) outsb sbb (bad) sbb cmp lret rex.WRXB (bad) in out (bad) sub mov xchg iret jg sbb (bad) (bad) imul cld cs add pop jno hlt rex.RXB div (bad) callq cmp xor cmp push sub fisttpll xchg movabs in jo out loopne or repnz mov decb mov xor sarl pop (bad) pop outsl rex.WRB sbb fs mov (bad) lods movabs mov rex.RXB jae lret mov (bad) pushfq icebp sbb pushq add jmpq js leaveq stc sbb lods mov mov or cmp adc (bad) xchg pushfq mov xor or mov jrcxz (bad) callq sahf pop ja xor jg pop outsl (bad) lcall (bad) rex.RX movabs xchg cmp rorl loopne add pop leaveq pop stc imul or pushq sub leaveq outsl insl push cmp mov mov cmp jns cmp add testl test test push cmp (bad) mov mov je clc adc mov iret loop enterq sbb rex.RB fldenv sub popfq rex.RXB outsb popfq loopne mov jbe (bad) pop movabs fwait test fimull sbb movslq rex.WR gs rex.XB (bad) mov rex.RB jne mov push jge xchg lods jmpq rorb fs add rex.RX (bad) sub icebp lret mov (bad) out jnp fstpt xchg jns push pop popfq lahf fldt mov out loop outsl int test xchg add rex.WRB retq sub pop sub jns sbb movabs mov sbb test and adc adc jl cmp rex.WB (bad) (bad) ds jmpq (bad) rex in add loope nopl or xchg sbb jmpq std push jbe (bad) in callq outsl loopne mov pop pop add (bad) and pop push js in (bad) mov retq mov loopne rex.XB loopne (bad) (bad) and (bad) mov sbb mov push in jno mov cmpsb loopne rex.WRX jrcxz imul mov or loopne cmp (bad) pop movabs pop hlt sub mov mov (bad) sbb in xor (bad) cmp movabs rex.RB push xchg mov push sub fwait (bad) (bad) jge test mov (bad) cmp pop movsb and nop and lret icebp pop fild fmul test sahf es lret pop cld jle stos outsl jmpq pop sbb out lretw (bad) (bad) (bad) (bad) mov (bad) clc and jl test lods (bad) mov fwait adc add iret xor rex.XB or xor insb add subb in xor push (bad) rex.WXB jl sbb ss xorb rex repz (bad) mov (bad) cmc add retq (bad) or sahf rex.X push or loopne xchg jmp add jb movabs sub pop xchg (bad) mov or loopne or shlb sub retq fisubrl std (bad) mov cmp pop sub and add rex.WRB sahf (bad) rex.WXB (bad) mov jns test rolb xchg mov add adc mov nop test add sbb movl push (bad) test xchg cld mov jmpq retq pushfq and test (bad) or (bad) fsub rolb rex.WRB (bad) or int3 rex.WRXB out cmp xchg rex.RB rex.W test incl data16 sbb loopne dec sbb loopne and xchg (bad) cld jle ja (bad) gs movabs rex.WRX mov test fbld mov loopne rex.WRXB xor jmp loopne and rex.RXB add jle fildll mov xchg insb movabs add jnp mov fldl imul scas add adc lods add sbb (bad) rex.WRX fs xor in (bad) scas xor mov (bad) jae and rex.XB addr32 jmpq in fsubrs add gs ss rex.WR (bad) cmp rorl std in xchg rex.XB (bad) sbb repnz xchg leaveq rex.WRX mov mov loope lods callq mov push mov or or adc jns lahf in (bad) push retw cmc mov movsl rcr mov (bad) pop xchg cmp sub rex.R stos (bad) mov mov sub (bad) (bad) jne in incl out xchg mov mov or pushq xor jp fcmove sbb mov test (bad) rolb jae out idivb jrcxz jns lods loopne add lea sbb pop lods int jrcxz stos xor lods rex.RXB mov adc scas or push push (bad) lods rex.WRX pushq sbb fnsave imul mov sti (bad) movabs rex.WX int retq nop xchg adc xchg sbb (bad) loopne and rex.WB jmp (bad) rex.WX int3 sahf xor xlat fidiv (bad) (bad) xor (bad) out cmp and pop pmulhuw pushfq ror add orl (bad) shr test loopne rclb (bad) or lods mov pushq fild or outsl scas mov push (bad) (bad) sahf (bad) retq jge cwtl or rex.RB fsub adc (bad) xor jne (bad) gs adc scas mov xchg and nop rep or sbb add rex.WRX mov add movsb loopne enterq push cld outsl loopne sbb sbb sub fistpll out cmpb mov cmp movabs loopne jo int adc lock pop clc fstl insb sti xor mov loope jno pushq test fwait sbb (bad) add (bad) (bad) or push movabs movsb repz xchg vmovups (bad) rex.XB rex.WRB and pop mov loope repz rex.WRB jns rex rex.X loopne sub cld cli (bad) cmc adc jb subb (bad) mov sub rex.RX pop xchg adc rex.RX movsl stc rol lock in or clc (bad) (bad) cltd sbb retq loopne and sub mov test (bad) jbe mov movabs add (bad) icebp fwait addl jp mov rex.WB jnp jmp (bad) rorb xor loopne sbb shr adc mov adc adc xchg jg rex.WR rcl nop jl adc cmp and mov movabs cltd faddp mov cmpsb pushfq xor pop pop (bad) add (bad) (bad) cmp loopne xchg cli (bad) es out loopne andb in or jp mov cmc (bad) jbe adc cltd negb jge repnz pop add xorb mov loopne in idivl rex.RB fs cli (bad) add adc retq mov xlat jrcxz push and icebp out jle (bad) mov (bad) lods xchg cli fldcw loopne clc mov rex.RX xor iret test (bad) lods negl imul push insl loopne xor or fcomps xchg cmp rex.WRB retq cli loopne and jl ficompl leaveq in cmp f2xm1 fwait rex.WXB fwait movabs in mov (bad) fimull rex.B adc adc cmpb mov mov test data16 and test cmc loopne mov ds (bad) sbb sub ss cmp jne mov sahf out lods (bad) insl mov (bad) stos add jp lret add cmp sbb mov cmp (bad) jb (bad) callq rex.WX or lret lods sbb scas in (bad) jno movsb rex (bad) jge sbb or loopne sub mov loopne mov stos xchg loopne pop mov jns adc leaveq sbb xor loopne cmp lods mov lahf stos movsb lret mov (bad) sbb jnp loopne sbb clc push push rorl (bad) movabs (bad) cli add je rex.WRX jo mov mov ja lods retq cli adc sub xor jrcxz push sub xor test sbb (bad) pop (bad) test loopne outsl mov mov rex.XB int test sbb subb loopne rex.RXB jmpq outsl rclb imul int3 (bad) xor and subl sub adc rex.WXB sub mov jg (bad) and lret outsl jrcxz (bad) test jrcxz js add movabs shrl out jmpq cmc rex lret loopne roll pop je in sbb xchg stc (bad) and add jb xor rex or leaveq cmp lods sub cmp out out or ss xor loopne adc pushq es xchg in pop xchg sbb rex.WRXB loopne sbb rex.WRX rex rex.WR adc loopne movabs (bad) sbb sbb rex.WXB push xor js adc lahf jrcxz lea lwpins iret (bad) push loopne mov std xchg mov pushfq cli movsbl loopne push ss je mov (bad) rex.RX add jnp loopne sub sub (bad) sub mov cmpsb (bad) cmp movabs outsl in mov loopne vmovd rex.WR in shrb gs sbb rex.W out sub mov int3 loopne (bad) pop rex.WRXB (bad) mov or mul (bad) mov lods icebp xlat lahf (bad) xchg loopne hlt cmp push add adc decl rex.WRX mov push (bad) mov (bad) xchg (bad) sti add sub int3 jmp pop jle cmp push fwait shrl push sti punpcklbw (bad) adc fadds add push pop movslq movabs jrcxz (bad) in mov movabs jmpq retq imul rex.WRX (bad) insl cli cltd nop out (bad) lahf jp cmpsb cwtl cli sti xchg pushq outsl add test xchg lret imul sub fs lods in cmp nop sti (bad) jge (bad) adc pushfq stos loopne ja pushq loopne (bad) xor movabs fistl mov add adcb sbb jg xchg xchg and rex.XB pushfq loopne retq sbb (bad) imul loope (bad) jno loop stc push nop jmpq jge shrb rolb (bad) clc addr32 sar mov (bad) and (bad) sahf lahf rex.WR fucomi movabs in scas roll mov pop mov (bad) or insl sbb movsb (bad) add (bad) loopne pushq adc loopne fist int fdivrl movabs imul pop movb fdivl push in jo mov lods in (bad) (bad) int3 outsb leaveq (bad) imul mov movslq cmpsb ss (bad) movabs mov (bad) jge loopne rex.XB (bad) sbb (bad) movsl jl mov loopne cmpsb repnz adc jle icebp movabs stc int jrcxz sub xchg jmpq in cmp fildl out (bad) test lret jns (bad) pop subl rex.WXB or jb add rex.RB (bad) (bad) movslq or sahf mov mov or (bad) xchg (bad) or jle loopne movabs (bad) pop xor xchg add rex.WR xchg (bad) xor (bad) and mov cmp and sti sbb js add ja jl lret (bad) lea loopne mov mov xchg incl sbb or jrcxz (bad) cmp stos shlb fsubrs rex.X jo xchg cld rex.WRX popfq (bad) jle sub fimull jo fdivs mov push sbb (bad) jne mov or sbb rex.RB movabs orl xor jns imulb ss pop out movslq xchg mov mov pushq xor jnp (bad) rorl movabs or mov mov lock cmpsl mov out jbe (bad) out sbb pop stc clc adc rcll loopne adc cmp xchg mov mov fdivrl jmp idiv sub (bad) sarl sbb rex.R cmp and or loopne (bad) cli cmc callq retq push adc adc pushq loopne add add retq fildl sub movabs sbb cmp rex.XB retq cmp xchg sub jle add ja pop stos loopne (bad) (bad) mov cli loopne not and adc loopne outsb (bad) jns jmp mov sub sbbl jns xor lret in (bad) fldl adc xor (bad) xchg andb es sub or movabs movabs icebp outsl (bad) rolb jbe and movslq (bad) fidiv xchg and addb xorl test cld jb movabs (bad) and loope adc or fldt and mov mov mov push jmpq pop rclb out jmpq popfq (bad) mov xchg clc loopne stos mov popq (bad) (bad) (bad) xor rex.WX loopne push xchg sbb fs in or cld sub sub (bad) popfq insl (bad) cwtl fistpl loopne sti rol xlat shl andl pushfq es add jge rex.WRXB or lret (bad) jns mov adc xor sbb pushfq cmp clc mov imul (bad) repz (bad) hlt and cmpsl loopne mov cmp fcmovnbe sahf sbb hlt loop pushfq mov cs (bad) stos out (bad) pop test loopne imul loopne and shrb jbe notb pop mov xor rex.B rex.WR loopne sti cld jnp mull (bad) fiadd movabs sub movabs scas add loopne fnstsw cmp mov jae xchg test jge adc pop cmp outsl jne sbb loopne fldcw jmpq sbb jrcxz xchg pushq js rex.WB sar or xor pop cmp loopne pushfq data16 cld or in xchg lea rex.WXB xor loope rex.WRXB mov jnp incl (bad) sbb xor sbb loopne push sub (bad) loopne je out enterq retq or or or loopne jmp repz adc (bad) movabs push fdivl sahf clc (bad) jb test repnz stos ss rex.WX icebp addr32 mov (bad) or cmp loopne and test test (bad) fdivl cli mov xchg clc stos pop ffree shl leaveq test cmp loopne sub pop (bad) mov jp loopne push fsubp and cwtl shl (bad) (bad) test fsubs cmc js (bad) loopne xchg hlt xchg jrcxz loopne and std xor (bad) movsb hlt repnz sub in stos loope loopne out xchg imul loopne cmove rcl loopne test sahf rex.B fwait (bad) cltd loop push rex.WRXB movl and sahf sub push mov rex.WRXB movabs insl rex.RXB addl sbb xor fadds and callq rex.W add loopne (bad) (bad) jmp add sbb (bad) nop and (bad) sub (bad) cmp fisttp sbb mov scas (bad) push loop std (bad) push (bad) sub mov add sbb xchg jrcxz pop mov sbbl icebp mov rex xchg loopne stc rex.WX enterq rex.WRB ss mov fsubrl incl in fidivl pop and iret (bad) out imul outsb jmpq popq mov cmp jle movsb (bad) (bad) pushfq xor mov xchg (bad) cld xchg mov xchg xchg loopne (bad) (bad) push cmp popfq retq jbe cmp nop loopne and int fistp mov push lret and (bad) test jo loopne (bad) and or mov out pop jmp push in jrcxz xlat xor mov xchg test adc and jnp (bad) mov and jne (bad) loopne jb or mov callq jno sub rex.WR and je or add rex.W xchg in mov pop rcll rex.WRB xchg sub (bad) and (bad) xor rcrl rclb rex.WRXB loopne adc jmpq rex.R xchg adc jmp test push loopne (bad) mov cmpsb in add imul lret jmpq rex.W repz cmpb sub rol adc cmc rex.RB lods (bad) (bad) rex.WB (bad) pop loop (bad) mov js sbb fild loop xor cmp (bad) fs cmp xchg repz (bad) outsb ljmp int movsl rex.RX (bad) movabs icebp push cmpsb jmpq (bad) xor pop addr32 lcall adc jl and xlat and popfq stc xchg sub mov mov loopne scas idiv xlat in repz and callq fscale xchg and rex.WX add (bad) jrcxz adc loop pop ffreep xchg push out or scas icebp and movabs ds (bad) test fmul loopne adc insb mov mull mov shr loopne out xor out rex.B loopne add lods rol fcomp stc (bad) (bad) push jae add xor and cmp test (bad) loopne (bad) cwtl xor (bad) rex.RX (bad) movslq and cmp (bad) jb or pushfq enterq (bad) fdivr out cmp test adc jg pop or jnp (bad) in (bad) sbb in adc (bad) xor outsb std pushq or mov in sbb adc outsl sbb mov fdivl sbb and sbb roll mov loopne (bad) fbld (bad) adc lods imul fstl pushq cmp jns sbb out rex.WX jge loopne jnp pop (bad) icebp push rex jmpq (bad) rex.RXB loopne mov scas and cmc movabs in and add enterq add mov jns out (bad) cmc sub ja push repnz mov xor sub xor in in in lods or insl adcl jge push sahf jmpq jmpq lret (bad) push in or jrcxz icebp (bad) mov xor sarl xor sarb rex.WRX rex.WRB retq mov sbb leaveq jno outsl fs rex.XB jle and push movabs hlt rex jmp (bad) negb cltd fs fdivrl sbb stos mov gs (bad) in (bad) cli adc js and rex.W rex rex.WB xchg repnz cmp (bad) adc (bad) movsb pushq jb (bad) push xor in mov imul rorb cmc xor jmp mov stos movb pop mov mov (bad) mov nop rex.XB fist jmp mov icebp jo lahf jl movabs jb or lods xchg imul pop mov jrcxz rex and in (bad) js or mov mov adc (bad) (bad) (bad) jo (bad) test add add and add roll iret cmp shlb sub je push mov (bad) js pop (bad) xor push pop in loope fistp add movabs outsl mov adc lods jg js movabs js pop pushq (bad) hlt je xor pop (bad) rex.WRXB lcall and push mov es in imul out xchg jmpq lods sbb ror (bad) jg or in cltd mov pushq jle testl xchg out sub (bad) adc (bad) cmp scas (bad) (bad) mov cltd cmp mov xchg mov mov (bad) push mov fs sbb (bad) out cs rex.RX rex.WX (bad) jne cmc push movabs adc mov (bad) sbb rex.XB scas movsl xor xor sub rolb lret (bad) sub jns (bad) xlat (bad) sbb sbb mov and pushfq retq sti (bad) sub fsub rex.WRXB repz (bad) movslq cmp retq pushq in (bad) lock int3 sbb pop pushq adc rex.WRX rex.XB (bad) imul test ficom mov icebp add jnp jge movabs rex.WX rex.X mov sub movslq test rex.WB rex.X in sbb jmpq pushq rex.WB cmp sahf cmc cmp jrcxz fwait sub jnp data16 lods out outsl in addr32 jmpq (bad) pop and (bad) cmp cltd adc xor rex.WR int3 test (bad) (bad) pop cs lahf lods rex.WRB frndint (bad) ror sbb or or in sbb movabs or js add cmp pushq mov cmp retw jg test fmuls sub sar std mov sub jrcxz pop jb retq jo,pn test cmpsb mov movabs std (bad) lock in add xchg rex.R rex.W movsl add sub jbe mov mov sbb test mov sbb lock sub xor int repnz push pushfq test in xor or cld or sbb mov (bad) (bad) int sub push add sbb sbb sbb lock cmp in (bad) scas stos adc add jrcxz xor cmp sbb mov or in int3 leaveq mov in insb pop add (bad) sahf fimull xchg pmuludq mov (bad) jno sbb es addr32 rex.RXB (bad) sar (bad) or sub push push (bad) outsl adc jne jne mov rex.W rex.XB pop enterq (bad) je rex.XB sub int3 in (bad) (bad) out xor addr32 sbb loopne add rex.WR fcom icebp push jno jg jo shlb test lahf loopne lock ss loopne push imul sbb loopne xlat inc (bad) pop insl add mov imul xchg gs pop or lods mov and (bad) in int3 jne jrcxz xchg leaveq adc pushq push or xor pushq add (bad) cmp out (bad) cmc sbb movabs rex.WRXB fucomi scas lea js add (bad) xor (bad) cmp sbb lods in in xchg and and notl stc or adc cmpsl xor mov (bad) or enterq jg mov clc rex.WRX (bad) pop in (bad) vpblendd and jmpq (bad) xchg fs (bad) mov sub lock cmp popfq jo in sbb sahf out scas jo (bad) (bad) movabs pop add cld fisttpl fwait sbb mov (bad) (bad) ss scas (bad) mov xor jb retq pop jmpq movslq in (bad) add adc (bad) cmp insb jrcxz out mov and (bad) adc in (bad) rex.WXB push je stos loopne mov (bad) cld cld repnz pushq (bad) mov fdivr cmc xchg or loopne xor (bad) hlt add pop xor jbe in shl or or sub mov and xchg (bad) loopne rex.RB (bad) cli sbb (bad) pop (bad) mov mov pop (bad) leaveq loope push rex.WR loop adc clc pushq je pop cmpsl loopne push sbb mov (bad) xor enterq rex.WRB lock and movabs mov gs cwtl pavgb shl movabs stos ds and mov loopne mov mov lea movabs adcb test jrcxz cmp jnp mov insb rex.RX movslq int movsl loopne clc cmp subl cli mov jne repz jae rex.B cmpsb sbb sbb ss xor mov lods adc loopne jae int3 mov xchg add jmp outsl cmpsl fsubp sahf imul loopne jb in xchg repnz (bad) in cmp jno jl xchg lret loopne adc jae (bad) jge sub (bad) push (bad) fistpl loopne jns rex.RX adc sub push pop xchg sbb (bad) loopne (bad) push lea and addr32 mov (bad) xchg popfq movabs mov fucomp loopne xor (bad) sbb jmpq fmuls js sbb movabs enterq cmc push je in fstpt jo jmp (bad) loopne fcomps addl in movsl sub (bad) (bad) adc scas jrcxz jmpq mov rex.WB loopne (bad) lock jo pop jle (bad) loopne cmp fisttpl rex.R jmpq xor sbb or movabs push ss out (bad) add lret push xor mov mov mov rex (bad) rex.WRX push mov loopne mov out hlt in jb pushfq adc jo rex.XB loopne adc mov stos in (bad) cmpl and loopne scas rex.B out sbb (bad) add (bad) rex.WRB jmpq icebp (bad) or mov rex.WB cmp pop (bad) (bad) std mov fbstp add loopne mov jg fdivl out cmp sub movabs (bad) movsl clc or adc jmpq mov sbb sahf xchg cli loopne rex.WB shrl rex.R adc mov fnstenv sbb sbb (bad) gs movsl add js rex.WXB (bad) stos (bad) mov repnz mov scas sub loopne nop cmp loopne sub add icebp (bad) xor or roll loopne stos mov movabs jg (bad) cmp fsubs adcb pushq retq and sub mov rex.WX movslq (bad) or adc in retq cmp (bad) mov mov iret mov rex.RB movsb cltd (bad) mov sbb adc movabs jl sbb lock mov fadd pop xor jl data16 push rcll movsb cld push or popq and pop loopne rex.XB rex.X lods cmp rcrb mov mov (bad) jbe adc adc xor in xchg loope icebp sub jrcxz mov mov clc sbb adc hlt cs or popfq fsubr rex.WRXB mov fxch cli (bad) je (bad) (bad) rcl rex.WRB xor test in pop sbb cltd adc in xchg stc xchg pop in cs mov negl loopne jnp rex.R rex.B cmpsl rex sub jne ja int testl mov pop adc loopne pushfq inc jmpq sub mov xor pop lock icebp (bad) movsb loopne rex.WRB fwait xchg (bad) jge loopne shl push jbe test rex.WRXB and out loopne leaveq jno rex.WB loopne movabs std stos mov sbb cmp xchg int leaveq stos sub shr setns sbb insl rex.X loopne (bad) icebp notb mov pop mov adc int3 sub loopne pop or int jmpq setg xchg subb loopne pushfq fstps cmp (bad) mov scas loopne xor (bad) je int3 (bad) mov jns callq fucomip movsb rex.WR sub cmp mov int3 je jmpq rex.WR mov lret in sbb push movsl add mov in stc andl cmpsb insb or (bad) push pushq int3 and test add mov movabs gs and sbb repz sub xchg or jge rex.RXB and ss in jle (bad) sti (bad) loopne pop and and insl lods fwait xor pop (bad) in add or push rex.B movsl fst loopne and mov (bad) imul (bad) xchg or enterq nop rex.WX and (bad) (bad) xchg pushfq (bad) out rex.WRB icebp (bad) fdiv or fisttpll loopne pop fstps (bad) out in jno adc mov jle andl xchg cmpsl cwtl fstl (bad) (bad) int3 (bad) sbb shl rcrb pop mov lahf cmc rex.WXB repz movsl ficom loopne push outsb (bad) add nop loopne (bad) jge rex.RXB mov pop test lahf loopne sub (bad) (bad) gs outsl add mov (bad) jmpq loopne pushq pop clc fmull (bad) subb imull gs (bad) cmp out (bad) cmp lock push add (bad) test (bad) (bad) in (bad) out jl inc adc shr icebp in (bad) fsubrl pop rex.WX int mov movabs (bad) sbb es (bad) sbb add in fs push ss loopne rclb push cld sub (bad) (bad) fnop jb xchg (bad) jmpq popq (bad) rcrl mov (bad) (bad) jno and loopne pushq popfq rex.WB (bad) stos movabs data16 loop (bad) lret nop out jmp sbb shrl cli add retq loopne cmp movsl mov je jb (bad) add mov shl mov or pop or pushfq pop loopne mov jle rex.W jb (bad) adc cltd and pushq jno rcll mov sub sbb pop cmp icebp (bad) (bad) push xor sbb cvtpi2ps and jb and fidivr jp jg fucomp jrcxz adc (bad) pop mov cmp (bad) fdivrp insl pushq rex.WR sbbb (bad) pop xchg xlat mov (bad) rex.W sahf iret mov jmpq pop fwait or cmp (bad) jg push jrcxz or (bad) xchg push push sbb movabs rex.RX cmp sarl cmp cmp ds xchg (bad) mov lea sub rex.WRXB rex.X (bad) in pop leaveq movabs jrcxz add shlb sbb rex.RXB (bad) cmp loopne jg sahf subl cmc (bad) rex.WRXB data16 loopne mov repz ja js pop fdivrs (bad) loopne out repnz sbb xor sub or in outsl xchg add mov outsb (bad) jp rex.XB xchg add sub gs rex.W xor mov mov cld add loopne (bad) adc rex.X cmp adc mov retq mov mov cmpsb loopne loop enterq repz cmpsl jge callq rex.WB sbb rex.WRB push (bad) cs cmp movslq cltd sbb mov (bad) in mov cmp cmp movabs (bad) xchg sub sbb hlt rex.R xchg add cwtl adc fcompl adc fs add (bad) mulb stos mov rex.WRB out shll lock add cmp (bad) cmp sub or faddl rex.XB rex.WX int loopne (bad) loop mov xchg sbb ss sub (bad) mov repz (bad) loopne and rex.WXB fsub (bad) jmp rex.WB loopne sbb int callq cs pop loop pop rorb (bad) std adc int cmp (bad) xor (bad) hlt icebp mov in ficoml (bad) out mov or lret repz rex rex.WRB addr32 sub (bad) (bad) (bad) jbe sbb adc outsl (bad) movslq (bad) loopne ficom cmp sahf mov in (bad) ds sub (bad) sbb movabs pushq fwait cmp pop lahf icebp (bad) lock (bad) jmpq loop push nop pushq movslq push ds pop insl in and xchg icebp js (bad) mov jo retq (bad) int3 test js lock out test cmpsb and mov rex repz int3 cmp mov lahf imul (bad) (bad) adc adc bnd (bad) push rcrb jge jns xchg (bad) xor xchg loopne rex.XB callq fsubl loopne jae xchg test xchg fistpll (bad) or es and adc cwtl test fmuls adc retq cld out repnz pop rex.X scas jrcxz and shlb pushfq sbb sub mov cmp out rex.WX data16 xchg (bad) (bad) jo rex.WB loopne fdivrs rol lret (bad) stc mov rex.WB add rex.WRXB pop and out movabs mov (bad) es jp,pn push lock rex.RX lea sbb loopne pop (bad) (bad) fcoms loopne (bad) mov push enterq fwait xor andl cli loopne repz cmc loopne hlt mov add movabs cltd loopne (bad) lret je xchg lret hlt es shlb in mov (bad) rex.W xchg (bad) loopne and mov (bad) cld (bad) (bad) rex.R push push adc jmp std fwait (bad) icebp xchg rex.WRX and rclb rol (bad) mov out in xchg push (bad) mov movabs xchg sbb test push (bad) loopne rex.WRXB push ds in scas loopne setb repnz es xchg adc adc mov stc rcll insl icebp fdiv outsb in fucom ss rex.B cmp and loopne movsl mov mov (bad) (bad) test scas cmp pop (bad) or ror push pop (bad) and ss orb mov loopne lahf cmpsb xorl cltd cs shl (bad) jnp in movabs mov cmc sbb out movabs out adc sbb or movabs callq rex.W xchg hlt fldt (bad) fucompp xor and (bad) mov mov icebp lahf mov psllq mov callq push mov icebp jle (bad) add pop pushq jge gs sub negl lret rex.RXB cmp fnsave stos (bad) in lahf (bad) mov (bad) movslq mov fnsave adc jmp sbb cmp jns repnz xlat mov fcomi in jbe cmp sbb enterq rex.WB fcoml push idivb (bad) loopne mov and adc enterq or mov mov loopne pop and sbb jmpq pop jne (bad) sub icebp adc cmpsb rex.RB (bad) outsl lahf (bad) lods hlt fmul rex.R push (bad) xor in fsubl mov callq and mov vmulss xor and jo stc in adc rex.W lock or in iret loopne add xchg jo fcoms movsb fisubrl (bad) insb lret xchg adc push imul cld fadd mov clc (bad) rclb add pop (bad) xchg loopne pop outsl and mov lahf loopne pop ficom (bad) sbb push movabs jbe andb (bad) or mov repnz movsl loopne jne xchg cltd mov loopne mov xchg stos sbb sub sub lods in sbb adc cmp (bad) mov jb cli or (bad) jp mov pop movabs rex.WR (bad) rex.B mov sub push mov cltd shl fwait jmp mov divl loopne rolb retq out icebp rex.WR adc (bad) movabs outsl pop xchg (bad) fwait xchg and sub loopne,pn (bad) add fmuls cmpsl loopne rex.B xor (bad) outsl fdivp jge shlb mov pop (bad) hlt cmp mov in push gs adc pop rex.RX in mov mov test fidivr sub xchg gs jno std rol mov loopne cmp adc insl retq (bad) xchg leaveq fild mul mulb sub add sbb rex.WB test (bad) jl add lock (bad) nop jo or (bad) hlt idivb jae add adc jnp (bad) cmc mov sbb iretw iret nop ss xchg fdivrp pushq out pop adcl mov (bad) fs cmpsb cld xor pushfq mov (bad) (bad) (bad) mov loope (bad) (bad) jo sbb cwtl cmc movslq rorb adcb sbb test shrl xor jb stos pop rex.W or sbb sub jns xchg rex.R adc jl (bad) and xchg adc mov pushq mov retq rorb sbbl (bad) shrl mov add (bad) lock adc test clc and (bad) adc enterq sbb and stos xor xlat sub lods mov in jg repz ficompl jrcxz mov addr32 cld (bad) sbb and xchg (bad) lods xor lock rex.XB imul and rex.WRB or test push cli ss pop jns or push sbb rex.WX lock mov lret hlt sbb rex.WX jns je cmc rcr sbb jl sbb pop (bad) out xchg fcompl (bad) (bad) sar (bad) adc xchg shr or and adc jge pop cmp enterq rex.XB xchg adc movslq sub cli rex.WXB xchg outsl stos shrb sub sub js movsb insb pushq cltd push stc jbe or (bad) loop fistp es in rex.WRB jne pop sbb and in mov sbb adc fsubp and insb test push pavgb outsb rex.W jmpq rex.XB movabs and jg jo sbb cltd loopne (bad) or xor and ss lahf jge popfq xchg pushq int3 adc callq loopne add add fwait lret or scas shrb (bad) out rex.WRX xchg stos xchg add stos loop movl out add insl mov in rex.RX mov rex push (bad) rex.WXB rex.WRXB mov cmp push (bad) or rex.WB retq andl cld out test lods movabs stc (bad) movabs adc in out loopne clc rorl stos sti (bad) jrcxz insb jns lahf mov loopne rex.WRX jo xchg mov loopne pop add lcall (bad) test (bad) rex.WRXB or rex.RXB loopne pushq sbb sub sub mov movsb sub push xchg adc jmpq jmpq (bad) imul callq loopnel xchg add clc imul jbe and in rolb mov sbb callq or sub (bad) jmpq (bad) iret (bad) outsb mov mov xchg lods rex.RXB rex.WX (bad) adc (bad) cmp loopne rex.W xor jo lock rex.RXB fdivrs (bad) mov adc rex loopne add stos clc loope iret movl pushq int (bad) pop loopne outsb sub cs (bad) sbb and jno mul xchg sbb xchg lret cmpsl (bad) out or cmp movsb mull imul rex.RX fs mulb (bad) lods callq movabs js cli xchg (bad) stos (bad) repz add and jmpq lret mov xor (bad) cli xchg jnp jmp push loopne gs fwait loopne sbb and jmpq adc loopne sbb adc fcompl (bad) mov (bad) pop movslq rex.WRB (bad) callq rex fs (bad) retq scas (bad) adc movabs push movabs movsl retq scas add xchg int and enterq and jp mov xchg lret pop negb cwtl cmp pushq in push loopne (bad) xchg in scas xor sbb (bad) loopne and rex jmp loopne xor rex.W ds lret cmp lahf in jae mov jo mov (bad) sbb jge mov fidivrl rcrl adc in adc jmpq sub stos cltd (bad) loopne xor xor lods in (bad) add jg js loopne in jp je cld jle hlt loopne xor scas or push (bad) mov sbb add (bad) and sbb mov (bad) or mov mov jmpq loopne jp sahf mov push mov jns (bad) rex jg sbb (bad) (bad) adc movabs push add (bad) (bad) push add sub cmp fild jbe lock sub cmp js insl rex.B xor (bad) test stos (bad) loopne rex.WXB xchg shr ficoml test movabs fimul cld (bad) cltd push jle adc pop jns rcrb es xchg in adc pushq movabs out sti rex.WRB add pop mov (bad) movsb retq fcompl add lahf mov push stos out push add mov fldpi out adc sbb jmpq rcl in repz cmp js lods adc scas loopne in pop sbb sbb sbb icebp mov repz lock (bad) pop xor fwait int inc jl je lods (bad) mov or cmp imul loopne sbb fnstsw loope nop cmp and movabs cmpsb cld (bad) (bad) pop (bad) fs jo imul movsl sbb loopne mov (bad) jne movslq xlat cld sub in add mov sarl (bad) rex.WRB loopne stos es loopne lahf xor adc loopne add or insb pop add jmpq jne insl inc (bad) loopne mov sti cmp sbb and mov push (bad) jmpq mov pop fistpl cmp mov or and je (bad) loopne test cmp sbb (bad) movabs sub xor and sub in and cmp insb movabs out rex.RX push jb lret loope xchg mov rex.B cmp fisubr loopne stos (bad) jge (bad) mov in xor rex.B cmp (bad) cmp lods sbb rex.RB stc xor push jo test fucom cmp (bad) mov loopne add mov mov es (bad) (bad) lods rol movsl enterq rex.RXB sub test fwait loopne jo sbb out (bad) mov repnz fsubr fs lods (bad) lea test icebp pushq mov sarb (bad) sahf or pop iret (bad) xor cmpsl ss (bad) sahf js loopne rex.RXB push adc rorb xchg sub loopne xor adc mov (bad) sbb ficom lahf xchg adc in jns nop xadd mov stc add mov add push (bad) pop xlat (bad) fnstsw loopne data16 push and rex.RXB lcall cltd mov push adc (bad) out jl sbb (bad) and jae (bad) fimull pop jp in movabs jge movabs (bad) pop jo or cmc jle test sub xchg jmpq (bad) movabs adc add loopne,pt sbb xchg cld gs hlt sarb loopne (bad) jns mov insl loopne lods (bad) mov mov xchg loopne mov xor incl pushq cmp int ss (bad) test retq mov or push xchg (bad) (bad) repnz roll fsubl jl mov mov mov (bad) imul sahf push sbb rorl or ja and callq or (bad) pop mov (bad) mov nop or and add rex.WRX fnop mov (bad) pushq repz (bad) mov cli stos repnz fdivl pop retq rex.WR adc incl ja in scas test ds std rex.WRX cwtl in mov xor mov (bad) hlt sbb xchg adc jo shlb and or rex.WB mov mov add cmpsb mov rorb callq sti xor push xor mov mov lods push cs int stc xchg fisubl push (bad) movabs fistpl add adc xchg pop jl (bad) insl fnsave sbb insb retq leaveq push add rex.XB jns std in (bad) (bad) sbb mov out (bad) jle stos mov (bad) xchg mov push push mov shrl (bad) outsl lret or outsb (bad) cwtl xor rex.W scas pop movabs jnp repnz sbb rex.X repnz jo (bad) fs mov (bad) push or in mov movsl cmp movsb rol adc lock lret sbb cmp (bad) pop or mov sub add mov lods and insb cmpsl or pop callq mov (bad) lock lods addr32 (bad) sbb rex.WRB add cmp mov callq fsubrs mov cmc xor scas rex.WRX sbb movabs in stos std sti cmp retq xchg int push pushq mov jmp lret add xchg cmp (bad) push insl rex.WRX test imul pop adc jo mov cmpl enterq ficoml insl xchg mov rex.WX movsb movabs pushq add idiv std sbb lods cmpsl rex.W adc push (bad) jae cwtl cwtl rex.B fnstcw je insl pushq (bad) fsubrp mov in pop adc (bad) (bad) in (bad) pop and rorl callq test (bad) sbb or rclb (bad) jae,pn jle and pushq loope jmpq mov cmc in rex.WRB andl pop loope pushq pushq or fmulp fisubl cwtl fildl (bad) sub (bad) int adc jo movabs jp (bad) add or divl shlb lret add repnz (bad) imul lods (bad) (bad) jmpq or mull push out sbb rcr rex.W and mov jae jg adc mov (bad) mov jl cmpsb loopne rex.WR je push imul sbb or sbb loopne scas xchg cmp outsl loopne sti insl rex.WB rex.B and cmpsl test jne repnz xchg pop loopne stc (bad) sbb add xor pop or fwait (bad) jmp or retq mov xor loopne pushq sbb sub rex.X or pop fbld xlat popfq mov loop cmc mov ficom jge rex.WRX out movabs (bad) jo sub sbb loopne scas fsubs mov and add rex.WRX ds in sbb sti mov cmc shr jo js (bad) jle test pop (bad) (bad) mov clc pop fcmovnbe add (bad) cs cmp decl adc mov jmpq mov pop cmp (bad) sbb (bad) xchg div (bad) rex.WRB cli loopne (bad) neg mov mov rex.WX leaveq adc mov jrcxz mov pop sub outsb outsb rex.RXB and sar imul icebp mov (bad) (bad) loopne (bad) mov insl fwait mov stc cmp in rex.W out xor (bad) and movabs (bad) out xlat repz and or in loopne mov test (bad) fldl loopne cltd mov out rex.WRX rex.W mov mov shl pushq loopne in xchg cld (bad) mov retq (bad) leaveq xor outsl loopne mov loopne movslq mov (bad) (bad) hlt rex.WX sub and jno xchg cmp andl popfq (bad) xor int retq (bad) or retq hlt jg imulb int3 xor push in mov movsl sub mov mov sbb cwtl (bad) rex.RX repnz loopnel lods fimul pop sbb movsl xchg xor fsubrs mov mov outsb (bad) xchg mov xor jo popfq xor popfq mov fs clc xchg xorb in rorb (bad) loope movabs (bad) rex.RXB rex push (bad) cwtl loopne cld sbb hlt (bad) lock (bad) jo add movabs vunpckhps js sub sub ficomp movsb test jge mov in hlt test mov stos mov push outsl add xorb sarl insl pop loop or mov (bad) and lods (bad) nop es insb loopne push pop jle fidiv (bad) roll mov jl outsl (bad) xchg inc vhaddps fwait (bad) jo push jae int3 (bad) cli movsb lret xchg mov retq int3 callq jo rex.WXB fs imul cmp retq and xchg imul addr32 pop sbb sbb (bad) shlb (bad) rcrl int xchg (bad) and sbb scas pop fs (bad) or jmpq test add or and mov sub out add fs (bad) pop sbb pop jrcxz cmc sbb leaveq leaveq (bad) xchg cmc mov sbbl jge (bad) (bad) (bad) mov xchg je cmp enterq rex.WXB cmp loop sub pop rex rex.WXB outsl (bad) rex.W pop js out loop push rex.R gs mov cmpsb jbe rex.WXB (bad) fmuls (bad) mov enterq mov sbb in jnp (bad) cmc loopne add lock rex.RX lret xor mov iret sbb rex.WRB or test data16 add mov xor adc retq loopne (bad) stc cmc sub sti (bad) jrcxz in fs (bad) and (bad) rex.WB out (bad) (bad) loopne jmpq rex.WXB xor rex.WRX adc (bad) sbb movabs lea jne loopne ljmp movabs mov cltd jo push push in lods icebp sub mov test push or loopne movabs xchg cmp (bad) lret sub mov mov jg js and incb xor sub ror loopne rol rex.RX fcmovne callq cmp pushq mov (bad) jb cmc (bad) fnstenv add jl pushq rorb (bad) loopne (bad) and loopne (bad) mov sub sub xchg pop imul add jmpq rex.WRX fadd fucom sub xchg xchg test imul pop rex.X rex.WRX jp pop (bad) (bad) ja xor (bad) sbb mov (bad) (bad) push or in in rex.WB jp xor pushfq sbb pop loopne pushq mov (bad) cld lods ljmp test loope add out out and sbb jns add rex.WB xchg adc movsl jne popfq sbb xor mov jg in (bad) fsubr xorl loope sub jmpq pushq cld leaveq sahf in jmp mov subb cld push cmp adc mov mov rex.WR sub (bad) mov shl (bad) sbb (bad) outsl (bad) repnz (bad) sub xchg retq fwait jo pop (bad) adc pushfq (bad) cmc rorl fucomip ds sbb (bad) mov in gs jne or callq and iret out in push xor in clc cs pop xchg sub icebp insw sub stos loope scas pop cmpb out xor test jno jnp push stos pushq (bad) sahf movsb adc jg mov ficompl rex.W jno js or jns addr32 imulb int3 add (bad) add or push push adc leaveq pshufw icebp rex.WRX xchg xchg cmp sub add or out or (bad) and or sbb (bad) (bad) jb (bad) mov movabs cmp frstor movabs (bad) (bad) cmc in push jl std loopne and repnz cmp xor jg pop (bad) xchg (bad) fcmovnb and xor sbb movabs popfq jo xchg jns icebp addr32 pop and out jns callq movabs cmpsb adc roll int3 shr adc jo or imul pushfq jp and adc int3 mov rex.WX mov in movabs xchg ja and push leaveq xor (bad) or pushq rcrb (bad) xlat pushfq adc enterq push add (bad) cmpsb (bad) push pop (bad) pop xchg (bad) and retq xchg (bad) mov xor add and cld rex.WB cmc scas int rorl rex.XB push and cmp cmp out (bad) (bad) je xchg xchg nop and sbb or lock rex.WRX hlt mov xor leaveq hlt sbb mov sbb in (bad) sub cli mov jns cs (bad) sbb sbb rex.R lret xchg push lock rex.WB rex.WRB xor (bad) rex.WB (bad) and pop (bad) jnp hlt and cli and cwtl lea (bad) xchg push loopne mov fwait lock fstps sarb hlt xchg mov fcoms cmp clc mov mov stos mov add loopne push out movabs (bad) test in rex.WRX mov cmc (bad) out pop sub rorl or retq xchg push loopne jnp (bad) mov (bad) pop xor sub fstpl (bad) (bad) jrcxz stos callq (bad) mov in push mov rex.R pop cmp (bad) mov (bad) (bad) cld xor lock add sti mov rex.R test jbe shl stc jnp pop xor hlt loopne fwait (bad) sti or lods jp (bad) rex.WRX rex.RX (bad) popfq and movabs std nop rcrl loopne lods stc addb (bad) loopne cmp mov mov (bad) loopne fistpl mov js or (bad) std and mov jns movabs outsl rex.WRXB (bad) sti push in iret rorb fs rex loop pop loopne scas std (bad) nop add jge movabs neg fsubrs (bad) fdivrs loop mov mov data16 adc fcmovnb popfq mov rex.WXB ja lods pop movabs scas jmpq popfq rcrb or (bad) rex jle iret jg lret test rex.WXB rex.B (bad) loopne je fcompl jg mov std popfq loopne cli shlb mov and lahf add push push nop xchg jns movabs jge pop imul incl xchg adc mov (bad) and lahf outsb jp and rol repz test icebp int3 mov cltd scas loopne lahf sub loopne push sbb push loopne fistp or pushfq lcall (bad) (bad) (bad) es pop xor xor sub fsubp mov movabs adc rex.R add jrcxz and adcb push xor outsb sbb leaveq (bad) jle mov lods mov adcb (bad) std sub movabs add xchg jne mov rex.WRB lock mov (bad) pop cmp xchg pop iret loopne mull cwtl jp jno pop cld loopne mov stos and pop and test (bad) jl test mov and (bad) (bad) fstpt sbb or and andl (bad) int lea jnp xchg loopne push (bad) jge retq in out cli fs xchg sub jg (bad) outsb sarb insb or rex.WX ss sahf (bad) cs (bad) in adc mov test loopne cmp pop jne push jp loopne insb rex.WXB adc movsl mov shll sub sahf test fsubrs rcr cmpb pushfq int3 lret add loopne cmp mov lods cmp insb or mov js icebp lahf push repnz repnz pop xchg jmp je cmp jno outsl (bad) mov push es push (bad) insb movabs sbb cli jmp enterq jo adc mov clc pop xchg int3 (bad) (bad) retq mulb and loopne adc cmpsl jp insb mov rex.W jbe sbb stc cld jbe rcrl cmp adc mov mull (bad) add movsb adc (bad) mov or mov movsl mov cmp sbb rol (bad) es push jle sti pop stos xchg (bad) mov add rex.WR loopne retq jae (bad) (bad) and and cmp mov in rex.WRX add (bad) lahf pop or iret (bad) movabs pop or or or fsts cmp pop sahf jmpq add xchg rex.WXB repz or pop (bad) xchg orb enterq (bad) imulb mov mov (bad) outsl mov cmp (bad) jle sbb in js clc retq push xorl sbb pop shlb loopne movabs callq jmpq pop xor out mov xor sbbb rex.XB add xor rex.RX movslq rex.W (bad) mov loopne jbe sub adc int adc (bad) mov insb xchg sub (bad) movabs or fwait rex.WXB pushq add (bad) loopne or iret rex.WRB loopne testb jmpq out adc xor adc cltd fimul xchg (bad) fiaddl loopne xabort std shll or loop (bad) or scas and (bad) (bad) jge and (bad) (bad) adc mov and outsl mov loopne scas (bad) push and jmpq pushq xchg enterq (bad) lret push test sti jmpq or and mov rex.WX xchg (bad) xor mov clc in pop lret and loopne push adc cld stc pmaxub loopne push (bad) rolb scas sbb or (bad) jmp (bad) movsb cmp xor shr xchg cltd (bad) jg mov pop xor (bad) hlt loopne rex.RXB lret cmpsb fcompl adc adc movabs (bad) adc mov mov sub add mov loopne test sarl mul or imul cmp mov repnz pop adc sub cmp (bad) mov jo sbb loopne incl add (bad) jb fstpl loopne callq adc movsl cmp mov jmpq cld loopne outsb (bad) jno mov (bad) sub fs rex.B cmpsl addr32 int3 test icebp (bad) jns push jg loopne xchg sbb xchg sub rex.WRXB imul fldenv loopne stos pushq mov and shll (bad) mov (bad) adc (bad) (bad) sbb xchg insb (bad) pop rex.RB jmpq imul test (bad) loopne cmp rex.WRX movb stos mov outsl push cltd loopne rex.R pop rex mov (bad) jmp insb outsb jmpq mov popfq (bad) lods or movabs sbb mov mov mov mov mov rex.WB stos loopne cmc pop jno fsubr cmp rex.R lods iret xor movabs (bad) mov sub (bad) (bad) pop and cmc movabs sarl pop retq imul (bad) add (bad) ficom mov mov and sub (bad) movabs in adc push or jp,pt xchg cmp (bad) jg jl stos rex.WRXB mov add xlat (bad) js (bad) (bad) jrcxz mov (bad) stos (bad) rex.X add retq mov subl shl cmp (bad) rex.RB (bad) push push js out loopne fidivr loopne (bad) and icebp rex.WRB loopne jp rex.R out test (bad) loope cli adc fcomps (bad) jge loopne test sbb in (bad) and xchg in movslq adc (bad) sub rolb iret loopne shrb (bad) loopne adc lea out insl cmp stos (bad) icebp cmpb mov add adc jnp loopne mov rex.X xor rol test jmpq icebp movsb out rex.WB or pop rex.WRXB xchg add (bad) cmpsb add (bad) mov and in add ja mov out mov loopne cwtl xchg (bad) pop stos (bad) (bad) loope movabs decl shll mov loopne (bad) (bad) mov loopne movabs (bad) mov rex.WXB in jno (bad) and je jmpq pop loope xchg jnp test jbe icebp rex.WX (bad) add sub sbb clc jrcxz insb mov mov loopne sarb mov test out jb xchg cmp rex.WR imul (bad) insl mov loopne jnp loop lret decl xlat cltd lods pop sbb outsl fnstsw (bad) jp mov mov and rex.WX stos data16 rorb fistl movabs cli xchg sti sub (bad) decb cmp add lods clc pushfq mov test mov cmc xlat scas loopne mov movslq loop (bad) enterq retq sub insb loopne (bad) mov out xchg (bad) loopne jbe xor sbb xor stos enterq sbb data16 cmpsb adc loopne,pn outsl or loopne mov or decl fwait rcrl adc fnstsw (bad) (bad) pop addr32 fwait add rex.WRB (bad) fidivl xchg lock xor add (bad) cmp (bad) push loopne or rex.WX jle movabs sbb in sahf jmpq mov rex.RB cmpsl and sbb js fsts xchg jle cltd cmp mov (bad) movslq test lock (bad) (bad) push cmp pop mov fistpl mov pop out jae (bad) jnp movabs jno sbb roll loopne (bad) adc mov pushfq push cmpsl sub shlb xchg not (bad) xor out int3 sbb imul hlt loopne lods rclb (bad) loopne (bad) add push (bad) mov cmp xchg xor in mov (bad) push cmp lock (bad) icebp xchg push in stc mov rclb (bad) rcr retq mov rex.RXB (bad) fs xor cmp out (bad) fldcw lods pop callq jmp sbb pop xor (bad) jne leaveq jnp xor and cmp fsubr movabs sbb movslq (bad) shrl pushq push test lahf and jo push (bad) fcompl and movabs rex.WRB nop out (bad) bnd pushq lea rcrb subl addr32 (bad) mov (bad) icebp add sub imul pop (bad) xchg (bad) hlt (bad) pop (bad) pushq rex.W sbb ror sbb hlt retq fldcw rex.WX mov add jle loopne test sbbb movabs movabs mov sub (bad) jb movabs mov stos mov xchg loopne mov mov loopne or icebp sub mov cmp cmp scas sub insb xchg mov xchg (bad) vzeroupper rex.B pop adc and jrcxz fstpt clc repnz nop (bad) jbe rcll add (bad) jno pop cwtl movabs pop scas test in retq movsb mov loopne or in (bad) cli loopne test movabs (bad) jns retq mov nop or sbb xor and jle (bad) rcrl rex.WXB leaveq (bad) ss mov adc adc loop in and adc loopne rex.W loope repnz loopne xchg (bad) xchg cmc loopne fildll and xchg test xor pop pop add rex.RX pushq push loopne jmpq xchg pop loopne movslq mov mov loopne or xor orl xor mov xchg fdivrl pop bndstx jb mov hlt lods mov jg push stos (bad) add rorl adc jrcxz in pop imul rcll mov cmc and pop (bad) jl jb sahf adc mov jnp pop test out xchg int int3 ds (bad) loopne pushq and loopne mov rex fsubr repz test outsl cmp hlt loopne push sar adc fsub xchg mov or retq rex.RXB (bad) mov sub test popfq add mov jrcxz rex.WRB (bad) out xor callq xor rcr pushq mov addr32 hlt cltd sbb icebp (bad) (bad) (bad) lods lahf (bad) test shrb xchg out (bad) rex out sti icebp (bad) mov add rex.RX rex.RXB in movslq sub mov (bad) adc int pop mov dec xchg fdiv xor rex.WX push test mov (bad) lea jo cmpsl cmc enterq in push pop mov loopne push cmp xor cmp or orb and jg mov rex.WX in es ja push jl enterq adc (bad) retq sti and (bad) xor xor sub (bad) (bad) mov data16 jmpq xlat loopne test rex.WXB loopne push jnp mov cli xor ds jmp icebp mov repz and enterq or mov jno adc insl pop rex.WR fsubrs (bad) rex.RB push rex.XB (bad) loopne pop sbb jg cmpsb push in xchg and (bad) (bad) fwait cmp and retq pop rex.RX nop sbb loopne or (bad) pop in fnstcw imul sub sbbb mov (bad) loopne fwait jge mov loopne cmp in loopne xchg in ss mov callq mov or adc rex.R movsl cld fdivs pop test rex.WRX and push clc sti pslld ds jne rex.B loopne cld sub (bad) rex.WRX jno pop icebp rex.XB fs mov adc push mov jg mov cwtl rex movabs js loopne imul enterq jne adcl mov sub pop out loopne and (bad) loopne adcl sub iret loop cmp (bad) mov stc mov mov (bad) movabs stos icebp int hlt loopne iret in stos rclb jno adc (bad) mov loopne jmp jb adc (bad) in cmp jbe shlb push movabs mov rex.B sub cmp lahf andb xor jnp adc clc mov add xchg mov or and je in rex rex.WRX mov pop movabs out loopne xor (bad) or callq (bad) fidiv rclb lock cmp pop mov repz jl roll movsl or addr32 movabs clc jmp lods and outsb mov jrcxz add andb (bad) or (bad) movabs (bad) fdivrp loopne rex.XB cli fwait cld mov rex.RB ja lret clc jrcxz movabs or mov sub (bad) (bad) rex.WRXB insb (bad) jg sub (bad) cli mov or shrl mov mov icebp fs (bad) loope faddl adc sub stos fsubrs movsb in (bad) sti jg add xor xor (bad) callq adc rex.RB xchg scas sub mov sbb fsubrp sbb enterq hlt or rex.WRXB (bad) icebp jno paddd xlat sub rex.WRX mov xchg icebp rex.RB scas movsl and in mov je (bad) adc add xor jge (bad) or cmp or icebp xor pop js js (bad) fildl push in sti mov je in leaveq adc cmp adc mov repnz rex.RX xchg (bad) mov xchg mov jrcxz movsl cli ss push jg in lea pop and (bad) in (bad) xor jrcxz pushq (bad) rex.RB movabs out (bad) xor loopne cmp mov cli cmc std add sbb (bad) or cmp fcmovne (bad) negl add cwtl rol sahf xor movabs loopne sbb push clc test lahf (bad) cmp (bad) roll (bad) fcompl loope (bad) sbb sub jae rcr cli jmp adc (bad) sub lock lods and mov add (bad) pushq out or cmp xor shrb cli jle enterq test (bad) push sub sub sbb out callq rcl je loopne (bad) fnstsw loopne pop or mov jp (bad) pushq pop cs scas (bad) fstpt rex.WX cltd push xor sbb jmpq mov int clc rcrq sbb in pop (bad) add adc (bad) (bad) adc not sbb (bad) in add (bad) lret jrcxz,pn jne callq pushq mov pushq loop loopne and jge out lods push loopne rex.RB mov movslq mov mov sbb and rex.RXB (bad) jle fwait adc loopne mov popfq mov in cmpsb (bad) jnp rex.WRB xchg outsl loopne fistl xlat loopne mov divl (bad) (bad) jle cs movabs negl sub jmpq fbstp loopne pop adc loopne rex repz pushq rorb add add movslq jl pop mov sub xchg loopne (bad) iret (bad) mov out pop mov rex.RXB repnz icebp push loopne rex.WB insb movabs (bad) outsb inc pop cmpsl or pop js movabs cmp ds (bad) jbe test movsl nop loopne push retq mov loopne ds jg pop (bad) lea add xchg test jb cli (bad) xor in add rex.RX pushq fdiv loopne ds mov rex.WR (bad) (bad) loopne xor xchg push xor cltd loopne and jo loopne insb (bad) repz ficomp (bad) push cmp test fadd leaveq (bad) rex.WXB and mov rex.WR rcrl cmpsb adc ss mov retq and mov fucomp cli xchg (bad) mov (bad) shrb rex.XB imul sbb movsb retq xchg loopne stos rex.WRXB rex.X movsl jns loopne icebp jb sub push sub scas (bad) fsubrl rex.W (bad) pushfq (bad) movabs sbb loopne or mov loopne fnsave pop rex.XB sarb xchg loope xor cmc jge xlat clc not (bad) fsub loopne stc jo movsb fucom movslq test movsl fcmove fcoms pushq loope (bad) (bad) loopne (bad) pop (bad) (bad) and add loopne xor (bad) je js fnstcw add add (bad) jge imul movabs cs pop push jrcxz rex.R sbb out mov loopne and (bad) jb (bad) push pushq ja cmp out pop outsb (bad) (bad) mov fneni(8087 pop cmp mov and push fwait (bad) insl andl int rex.WRB lock sub test xlat mov jle rex.RXB mov icebp shll mov cld idivb data16 lods mov sarl (bad) pushfq (bad) adc jbe sub repnz pop loopne xor loopne sarb push cs xchg enterq loope lea rex sbb out loopne jl cmp and or xchg mov rex.RX fs repz mov (bad) rex.WRXB lods xchg add addl enterq fs enterq mov sbb loopne movsl orb sub (bad) cmp loopne or rex insl jl (bad) divb mov shrb (bad) xor rorl jle jg pop (bad) jge rex.WX xchg test sti or movabs cld rex.W rex.WRXB shl xor (bad) movslq fadd in movabs pushq jge int outsl imul mov out sahf movabs jno (bad) (bad) rex.WXB mov out nop rex.RXB data16 sahf (bad) loopne out cli and movsb xchg loopne fmulp pushfq (bad) xchg push ljmp mov cmc loop adc push lret stc pop movabs std mov rex.WR stc shll insb jns (bad) cmp or (bad) loopne out and (bad) movsb stc stos loopne (bad) adc rex.B rex.WRXB clc cmp (bad) (bad) adc rex.R rex (bad) cli fstpt gs adc cmc (bad) xlat xor loopne pushfq mov nop movabs jo sbb pushq cmp xlat fnstsw insl adc (bad) rex.WRX push (bad) cs mov jb pop stos (bad) mov (bad) fstp xor sbb xchg (bad) movslq callq (bad) (bad) repz (bad) jns cltd xor popfq or mov add lods xchg add in out addl (bad) cli xorb movabs (bad) or in decl rex.RX jrcxz rcl mov pushq xchg (bad) std xlat loop outsb movsb retq fsub xchg add fs and mov fcmovbe jns flds add (bad) pop loopne rex std mov and sbb (bad) out cmp pop xor and add add in jmp cmpsb mov push test mov in out (bad) mov add lock (bad) (bad) iret addr32 xor movabs lods popfq retq in jb (bad) or fneni(8087 and retq rex.WB cld lret movabs int3 shll loop hlt jl loopne out rex.X or rex.RXB jnp cmp sbb mov mov rex.W sub iret (bad) movabs rex.WRB fldenv rex.WRXB (bad) in cli rex.R movabs mov cli repz (bad) and neg pop sbb scas ja mov loopne (bad) mov (bad) adc lods jge popq xchg add nop (bad) sbb (bad) movabs lock or shrb pop pop loopne sbb not or cmp rex.W lret out sbb mov js jmpq pop mov loopne cmp sub rex.WR push movabs fwait (bad) adc add retq sahf fmuls pushq and and jbe subl mov adc adc cwtl mov ja in jp sub xchg in inc (bad) and mov loopne and rex.WR jae jo icebp loopne retq adc jne iret and mov loop add leaveq xchg (bad) mov xchg nop/reserved out jmpq and mov cmp fiadd sbb (bad) fisubl sub mov loop cs ss stc rex.XB sub insl or lret rex.WRX and loopne cmp jp sbb out (bad) icebp ficoml loopne (bad) js rex.WR lock push loopne sbb loopne int retq popfq out mov mov mov cli and (bad) (bad) fsubr enterq pop cltd (bad) (bad) rex.WRX (bad) add icebp pop (bad) xchg leaveq pop clc sbb push adc rex.WRXB rex.B jmpq and js and fcoml loope xor (bad) sub xchg rex.XB (bad) repz mov adc addr32 (bad) sub andb sahf mul and xchg rex.WRX add loopne leaveq and loop mov adc sub sub rex.X adc or rex.RB es add add xor adc int3 movabs popfq cmp rex.RB ss rex.RXB push sub outsb xlat enterq callq (bad) (bad) mov jg cmp movabs (bad) fldt add xor adc out (bad) loopne jne rex.W (bad) xchg (bad) loopne insl stos (bad) mov sti (bad) loopne xor mov rex.R jnp pop adc and test loopne cmp fsubrp (bad) sbb pop retq rex.RXB jbe pop cmp push sti loopne cwtl pop cmp in sub in iret sub adc loopne sub jp (bad) mov loop lods js xchg fdivrp pushfq (bad) movabs jmp adc out loopne jnp callq loopne loop fcomps pushfq cmp idivb or std lret rex.RXB adc (bad) decl mov jl xor cmp imul lock loopne jge fs jg andb mov (bad) rex.WX mov iret (bad) mov pushq mov rex.RB xchg fnstsw xchg sti callq mov loopne out and loop cmc and pop mov jo adc loopne (bad) xor (bad) lods mov clc mov rex.WRXB (bad) xchg (bad) pop rex.WR loopne cmp or rex.RX movslq mov or out xor (bad) (bad) pushq jne out xchg mov lret sbb sahf add fnstenv rex.RXB addr32 mov gs shl shr sub cli iret (bad) loop push jns (bad) pop imul std callq mov add jl ss rex.R or add pop loopne test push outsl xlat roll in fxam adcb rex.B test adc mov lret jbe add xor loope (bad) loopne std lods gs imul sub push movsl stos jb and rex.WRX (bad) mov push in push push (bad) cmp ds scas sub test (bad) and (bad) std rolb je shl sbb test stos loopne,pn mov pop in (bad) clc lahf adc cmpsl mov mov clc sub lods xlat movslq jmpq rolb cmp mov loopne rex.WB repnz fwait lods cltd (bad) or or insb mov (bad) clc mov (bad) leaveq hlt and callq movabs (bad) sbb push sub outsl sbb cmp out loopne js jmp fistl (bad) fucom jp jns int3 (bad) mov shll clc ja notl loopne movsb (bad) (bad) fisttp pushq pop movsl in pop xor sahf jnp movabs jno (bad) adc xor lret in addl mov stos mov divl (bad) pop (bad) jno outsb fidiv mov out jae rex.WXB lods xlat scas loopne xor xor xor loopne fistpll mov mov lret push pop xchg pop (bad) or lcall mov or and mov rolb mov cmp out sbb push movabs decl (bad) jbe xchg test mov jns (bad) push sbb loopne retq (bad) loope clc (bad) xlat mov fcoml lret loopne (bad) jns and mov xor stos shl fistp sahf jae and loopne in adc sbb pop mov jns in ror add stc sarl rex.WRXB sub adc sub fsubrl jne jbe cmp add and xchg jo scas subl lods retq (bad) pop push jmpq nop sub sarb rex.WXB loopne jbe xor insb jne mov pop jno adcb shl stc test (bad) adc jmpq out rex.WB (bad) loopne mov mov movabs out jb (bad) rex.RXB add jmp cmp push loop pop adc rclb insl and stos (bad) jg mov lock iret adc shlb pop (bad) loopne (bad) push adc or in jbe or mov test (bad) add rex.WR or jmpq sub sbb (bad) callq testb pop adc outsb mov int (bad) (bad) test or (bad) popfq repz incb adc cmp sub shlb loop (bad) add fadd and insl ja test sti jo mov xchg xlat (bad) movabs (bad) loopne movsl xor or out or popfq int3 adc test xor or mov ror sub adc (bad) add fisttpll (bad) push sub loopne int3 xchg rex.WXB rcrb adc stos fstpl sbb loopne mov mov loopne jb rex.RXB (bad) (bad) callq rex.RXB add and fmull push cwtl jmpq mov addr32 loopne loope rex.WRB loopne sub loop xlat (bad) sti movabs mov mov (bad) loopne (bad) (bad) sbb xor (bad) jmpq jge,pn std lods and xchg sub (bad) or test out rex.WB rcr loopne (bad) mov mov movabs outsb jnp jno jp or cmp in in retq movslq scas mov insb rex.W cmp icebp mov (bad) loopne loop (bad) adc loopne jge (bad) cmc addb adc loopne xor mov sub repz retq pop cmp adc loopne add cmp (bad) (bad) cmpsb (bad) repz jle (bad) (bad) (bad) cmc mov (bad) rex mov loope and (bad) fisubl cmp addr32 (bad) sub jns mov (bad) pushq (bad) inc jge ss (bad) mov and jle,pt (bad) mov (bad) pop mov (bad) divb cmp hlt (bad) xchg push xchg loop sbb es insl imul mov retq jnp mov out (bad) insb fs cmc pop rex.WRXB out xlat (bad) out mov loope shr es nop (bad) hlt cltd jl enterq pop jnp push mov jae pop callq mov insb loopne fiaddl cwtl stc loopne fs gs xlat pop rex.WRXB mov fucompp out xchg sbbl add pop in popfq ror (bad) (bad) sub jns (bad) movabs negb sahf xor (bad) jno movsb jmpq in loopne scas int sbb rex.WX xor or sbb mov pop test in xor pop (bad) iret xor rol or jo loopne mov shll jl callq adc shl shlb mov and icebp rex.RXB sarb xlat xchg loopne mov rclb jle xor lret data16 add insb retq push addr32 frstor sub jbe stos cmpsl (bad) mov push (bad) scas (bad) js jrcxz test je pcmpgtw (bad) mov mov and (bad) loopne cld mov movsl (bad) or sti lock (bad) sub sub rex.RXB rex.WX push fs (bad) leaveq xchg mov sbb (bad) shll mov fs adcl adc (bad) (bad) loopne ds mov enterq icebp movabs (bad) loopne sub mov mov or clc lret sub (bad) jmpq loopne xlat and and (bad) sbb (bad) fbstp (bad) or (bad) cmp (bad) pop (bad) pop fnstenv cltd scas test cmc jo retq xchg rex.WRB (bad) loope loop sub movslq callq shrl xor loopne (bad) xlat mov (bad) iret stos push and (bad) and sub rex (bad) sbb sbb stos mov (bad) jbe mov cltd callq in xchg movslq sbbq repz lods (bad) icebp loopne cld cmp loopne insl xor stos leaveq sbbl (bad) mov jge repnz (bad) sub mov jrcxz add pop movslq xor sbb loopne adc out and stos loopne (bad) mov shrl jmp lret (bad) (bad) mov out or rex.B stos push lock outsb js sbb (bad) in add rex.WXB (bad) sbb movsl or (bad) (bad) rex.WXB add movabs adc out cli (bad) (bad) sti xor xor (bad) jl loopne iret adc xor clc (bad) stc insb stos cltd test (bad) loopne hlt (bad) fidivrl add jmpq (bad) repnz mov xchg sarb cmpsq adc pushfq sti js pop loopne hlt cmp rex.WXB imul je stos or loopne mov add rex.R mov mov callq rex.RX cmp retq loopne adc sub or in rex.RX hlt fdivrl pushq sahf lods (bad) mov insb movabs adc out sbbb test (bad) icebp (bad) repz loopne and sbb mov loopne and rex.RB pop loopne pushfq retq or loop addr32 icebp cmpsb adc xlat loopne popfq out (bad) mov pop loope enterq rex.RB rex.RX rex.WRXB loopne cmp adc icebp (bad) shrb movsb fmul (bad) jg (bad) out lret cmp adc ss mov or icebp (bad) sbb movabs cmp xlat mov mov lea xchg pop mov xchg (bad) loopne or jrcxz notb cmp add test cmpsb mov ja out (bad) (bad) lahf imul and fmull sub repnz callq outsl (bad) xor mov js xor in sbb push out lret (bad) lcall es negb je sbb loopne popfq stos movabs (bad) and andb (bad) out scas jge mov loopne movabs xchg in xchg adc jbe pop (bad) scas xchg cli cmp stos enterq icebp je rex.RX (bad) cmp sub lret lret cmp xor adc movb out std mov (bad) xchg xor mov mov loope out loopne or push xor xchg mov clc fnstsw adc (bad) outsb add add decl imul lret in (bad) xchg xchg xor andl adcb idivl mov ds fwait dec mov or xchg xor (bad) rex.RXB (bad) ja lods fs adc outsb (bad) jmpq rex.RB (bad) (bad) in (bad) mov mov add enterq jns or adc in rex.RB xchg loope fnstcw sti jne pop loopne frstor xchg rolb stos (bad) loopne or in (bad) rex.WRXB rex sbb (bad) out loopne (bad) (bad) cmp sbb ss sarb incl pop add mov mov mov (bad) pop pavgb xlat (bad) adc pop outsl (bad) jrcxz sbbb adc loopne mov (bad) int push xor test xor loopne fidivrl push add cltd (bad) mov rex.WRXB mov and iret incb stos mov cmp (bad) (bad) pop add orl rcrb rex.WRX lock rex push adc loopne xlat cmpsb add add jbe loopne mov iret cmp loopne cmp fdivl loopne (bad) fs (bad) pop xor fsin rex.R movabs (bad) cmp sbb lea and add cltd cmpsl rex.RXB xchg or movabs add roll and pop (bad) icebp push es rcll fwait adc pop rex.RB cld sti or fdivrs imul mov rex.W fwait rcr or mov lods xchg sahf (bad) out outsl out rex.RXB xor rex.WRX loopne ja stc cwtl (bad) jmpq cli (bad) mov xchg (bad) pop std stos movsb (bad) loopne xchg movabs (bad) movabs loopne (bad) xor jbe insl add notl fcomps or sbb fbld loop scas jg ds std (bad) loopne push insb add jge fnsave retq insl (bad) lods mov pop (bad) enterq out movlps scas mov rex.RXB xchg lahf sub cmp ficompl xor adc adc add in (bad) (bad) (bad) fldenv fwait hlt loopne repz icebp leaveq xor jne ficoml adc sub (bad) adc mov loopne pop (bad) mov scas ss mov movabs jle loope ds rex.WRXB bnd loopne sbb mov (bad) jo sub add jo (bad) rclb and add rorb rex.X mov in loopne jae fs movabs fildl in lods sbb fwait (bad) jbe mov repnz mov lock xlat mov test ljmp rcll mov shrb movabs xorb mov loopne test es mov rex.XB loopne mov sbb and ja imul fdiv push xchg test xlat mov rcll xchg pushq hlt (bad) mov (bad) xchg sbb test sarl (bad) movabs iret (bad) lret or fistpll sub andb sbb push jmp push cmp loopne fisttpl xchg (bad) mov mov retq fs or mov mov rex.R (bad) rex.WRXB xor in cltd lods (bad) movabs loop xchg paddq nop or (bad) pop gs (bad) loope sbb loopne test xor cmp xor insl or cltd in mov mov mov rex.WRX xchg outsb mov or mov mov (bad) xor out jo (bad) iret loopne xor add loop rex.WXB or loopne xor callq in (bad) mov loopne (bad) mov fwait loopne xor outsb ss lods xchg jl test in xchg cmp (bad) sti movsl push std loopne fidivr cmp and adc loopne stos xchg cld out (bad) out sar (bad) mov cli xchg movabs lret ds (bad) cmp and jmp cld lock sub dec xor or mov push cmpb in rex.WB rex.X rex.R jmpq or loop (bad) or stos (bad) loopne jmp sbb jne callq cmp pop jae (bad) loopne push mov lods (bad) xor std push rex.WR mov mov test mov movabs pushfq add sbb es adc fcoms mov lret and jle stos cmp outsb (bad) loopne jrcxz out (bad) jbe jo (bad) fisubrl mov ja lret movabs pop or pop (bad) movabs loopne in (bad) add test mov shl mov cmp rex.WB push rex.X orl fsubrs out xor in insl or (bad) sahf in jmpq push sbb outsb sub xchg test (bad) imul sub mov cmp pop rex.WB ss and sub (bad) xchg movabs retq xlat add rex.RX addr32 loopne sub jmpq xor xor cmp push adc lods rcll decb movsb fsub mov test jnp xor loopne stos repz jne icebp mov rex.XB rex.WB imul push rex.W push lahf retq mov icebp (bad) (bad) sbb test in lahf and lock sbb (bad) outsb ficompl pop (bad) cmpsl (bad) pop cmp mov rcrb jb imul iret ficompl and ficom jmpq xchg cmp in sbb jnp scas pop and (bad) rex.B rex.XB jae pop xor out (bad) jrcxz jmpq xchg rcll (bad) xor (bad) mov (bad) mov in sahf sti (bad) (bad) mov sbb gs addr32 orb pop out pop (bad) mov xchg fnop add mov lods mov sub fs adc lahf movsb movq mull mov sbb rex.WRB outsb (bad) rol mov adc movsl push je pop scas insb retq leaveq rex.RXB addb data16 sbb jno add sti sbb leaveq lret xor insb push xchg xchg mov jge (bad) sbb fistpl in sub jle rex.WXB xchg xor movabs sub pushfq in std icebp sub enterq test cmc (bad) out xchg lret mov rex.WB adc in sub pop sbb rex.R adc add movabs pop icebp stc ja callq int or movslq and (bad) jmp movsl adc clc jo lods (bad) (bad) repz mov sub sbb adc mov pushfq sbb lret callq mov mov callq fadds (bad) or jb lock icebp repnz in nop int fstl pop (bad) push and jne rex.X push out (bad) js adc mov addr32 sarb out fcompl (bad) (bad) (bad) out fist push adc fstl and (bad) xor in shrb xor ds pushq (bad) adc imul out add mov xchg movsb (bad) mov xor cmp mov icebp gs lcall cltd (bad) and shr jmpq pop in lock pop pushfq rex.XB fs and mov es in sub jbe movabs mov sbb (bad) (bad) insl test (bad) mov lahf cltd (bad) (bad) and push scas jbe std mov rex.XB rex.RXB shlb cmc pop mov sub out loope clc gs rex.WR fs mov stc enterq iret push xor out xlat adc rex.XB rex.B rex.WRX lock divl fiadd lods in fimull rex.R jmpq pop mov rex.B mov out iret in jmp lods (bad) (bad) mov sub ja (bad) pop jnp (bad) fsubr add adc (bad) add sbb push in outsl (bad) jae jb cmp bnd xchg adc (bad) enterq cmpsl mov cli pop and mov mov movsl xchg xor xor mov sbb cmp sbb xchg ja outsb mov jle addr32 clc jb clc repnz lods xor out in (bad) movslq sub rorb repz jb xor rex.RX jbe pop mov jrcxz rex.WRX in xchg sub add or and (bad) sub stos mov (bad) stos push pop lods (bad) xor pop mov mov out cmc (bad) pop jnp mov movslq jbe sarb jbe jge sbb std movabs rex.RXB jg in rex.XB mov rol rex.WRXB (bad) insl adc sbb js add in jg mov pop sbbb (bad) and jmpq (bad) not fdivs xchg sbb rex.X push lret rex.WRB mov in jmpq mov rex.WRX test lock sbb shll rex.RXB or leaveq movsl pushfq cmp lret (bad) rex.X pop insb fs (bad) sbb xchg retq sbb repz clc movsl cwtl or push rex.WRB repz (bad) jns push pushq retq cmpsl loopne decb lock rex.WRB repnz rex (bad) (bad) cltd rex.W mov (bad) cld push jb rex.WB lods sbb cltd testb loopne rex.XB rex.WXB (bad) xchg test add iret adc es clc rex.RX cwtl pushfq icebp lea mov loopne xchg out pop out (bad) mov jmpq (bad) pop xchg sub (bad) (bad) (bad) test test leaveq loopne add adc mov (bad) sbb mov loopne scas rex.WR pushq jle xor loopne mov adc jmp (bad) loopne (bad) lahf stc jne xor in scas outsb (bad) cmpsl cmp sbb (bad) pushq xor cld clc loopne mov adc xchg (bad) loopne xchg retq divb rex.RB mov callq mov xor rex.XB loop sub rolb (bad) sahf mov shl add out cmp movsb loop cmove sbb loopne xchg (bad) rex.WX pushq test stos sbb mov fldenv rex.RB (bad) (bad) push mov xor (bad) lea cwtl or out ds mulb adc (bad) je and pavgb (bad) (bad) outsb in es int3 sub loopne enterq out xor (bad) lret rex.WRX scas mov mov je movabs outsl xchg out lcall jmp addr32 fwait pushq or (bad) mov repnz mov or adc cmp and loopne stos in mov mov mov or adc mov movslq es rex.WRXB scas lods mov rex.RXB add sbb and xor fsub scas (bad) mov xchg mov jno loopne xchg sbb (bad) xchg pushq jl add out (bad) mov mov jg clc stc loopne fdivl pushq in (bad) loope testl add push (bad) jae loopne lods pushq adc (bad) jbe sub xchg cmp pushq or pushq jne fcmovne push rex.WRB mov (bad) jae cmp sbbl and movslq (bad) stos nop jmpq out jp pop jmpq cmc lock jg xor int3 and sbb jns popfq and sahf add (bad) in xor pop (bad) sub mov add in int3 movslq (bad) cli (bad) jae,pt movabs mov imul insl pushq cmpb int (bad) mov (bad) and add stc (bad) movabs or ss (bad) rex.RB loopne movabs scas (bad) cmp cs stos lods jmpq mov and callq (bad) dec test cld (bad) fsubr rcrb (bad) cmp adc rex.WRX stc add stos (bad) jp loopne add mov sti sbb callq add iret adc push out in rol roll or adc fldt pop jns lret cltd repnz fwait pop gs sahf loopne add std xchg mov push int mov loopne mov sbb (bad) jge out imul (bad) out (bad) cld mov sub loopne (bad) xchg xchg rcll cmp divb mov (bad) pop or xchg icebp adcb mov mov loopne cld cmp int3 jae (bad) loopne lret fcom mov rex.RB rex.WRB maskmovq negl (bad) loop cmc xchg cmp icebp (bad) adc push rex (bad) fcoms loopne test addr32 (bad) sub outsb pop lcall adc (bad) (bad) or cmpsb jnp fnstsw rex.WX pop enterq pushq pushfq loope adc incl in pop push xchg lea mov movsb loopne rex.RB (bad) clc mov test jp xor jae jge sbb sbb jmpq mov lock sbb (bad) out in (bad) (bad) cli (bad) or jno (bad) xor rclb xchg fimull loopne (bad) je (bad) cld scas and or data16 push xchg test fs lcall rex.WR or addr32 jle adc sub (bad) movabs jae test mov or lahf (bad) loop add mov movabs (bad) loopne test xchg xchg loopne adc gs (bad) loopne vdivpd dec movsb sub faddl cmp mov in (bad) lods adc movabs (bad) pushq (bad) mov lret test adc fisubr movabs popfq or imul rex.WRB sbb sub rolb push (bad) loopne and ds pop mov int3 (bad) cwtl in sub mulb mov jmpq xchg lea (bad) xchg cmp (bad) movsb loopne out or in loopne (bad) fcomip cmp mov pop fstpl (bad) fucomi add jnp pop mov (bad) mov vpsrlq or loopne int cli mov adc movabs and add push add nop (bad) cltd insl test es (bad) mov push and mov pushq push add pop rex.RX imul xor xchg pmaxsw add jns xchg loopne test mov loopne cmp push icebp jmpq mov in (bad) (bad) cmpsl shll cld in jae cltd (bad) (bad) insb retq mov (bad) out jmpq sar (bad) in ja test rex.WXB rolb and sub pop (bad) pop shrb rex.B enterq xchg fdivr (bad) lret lahf fimull js loopne xlat int stos cli int3 fsub jl (bad) outsl cmp mul mov inc fildll ds loopne out (bad) (bad) jge loopne fxch cmpl rex.WRB add movslq xchg jnp rex.RX rcrb leaveq sti lods or out movabs jge jns cld lods mov jp cwtl (bad) xrelease (bad) pslld pop add push loopne pushq movsl (bad) ds mov sbb cmp dec callq cltd cmp sarb (bad) (bad) movabs ja xor loopne bnd pop callq xor retq add sbb and pushq (bad) es adc rcrl jrcxz mov and in repz mov (bad) movsb pop loopne movabs rex.XB fnop fnstcw and mov cli xor mov hlt rex.X and (bad) ficom pop loopne lahf adc rorb mov cmp rex.WB movabs (bad) fs int xlat (bad) in xchg (bad) or mov loopne jrcxz repnz pushq push pop xor mov jae xchg movslq add jl (bad) loopne or loop lock and xchg xor je outsl cld (bad) (bad) push jb sbb loopne insb pop jo stos mov in outsl fbld fwait and fsubp sbb imul movslq (bad) and add sti ja,pt rcl (bad) rex.W adc rex.WB movsl outsb xchg loopne orl mov ss (bad) adc jl jg adc loopne add or sbb repz (bad) xor xchg retq pop (bad) add ja sbb jbe pop jp (bad) ficoml loopne rex.R out cmp movslq adc loopne js mov loopne rex.XB rex.B addr32 xor pop dec (bad) sbb cmp test ja sub push sbb jbe out pop jo jl cmp js imul outsb leaveq xchg cltd (bad) cld (bad) (bad) push pop mov mov in (bad) xchg add pop sbb sub xor jne or sbb sub and push insl sbb cs int3 movabs and (bad) paddq add mov or mov idivb sti out mov movabs sub pushq rex.XB fmull and rex.B ds cmc (bad) adc jrcxz cmp push scas in fs cs mov rex.RB ss rcr xlat and loopne rex.WXB out std (bad) scas rex.B movsb push lret scas (bad) mov jrcxz mov add jbe cwtl (bad) (bad) test mov (bad) add loopne pop cwtl (bad) jbe sub jns in stos mov movsl or mov (bad) movabs jno sbb sub retq std ds jle in pop (bad) orb add sarb sbb (bad) mov loopne sub rex.R test (bad) xchg adc rex.RXB (bad) xchg movabs xor sbb (bad) int adc ffree mov mov mov mov adc add shll sti movabs pop push fldcw adc and push push stos movabs je loopne pop rex.X out iret rcrl mov loopne add scas (bad) cmp (bad) mov cld cmp jo sbb test enterq in loop add insl and add je xor fs test rex.RXB subb shll (bad) addl push int pop pop bnd sti jae (bad) and lcall mov cs (bad) mul and cli xor rex.RX mov (bad) mov insb lods cmpsb (bad) push sub xchg mov in rorl adc lock clc rex.R (bad) in mov add icebp fisubl add enterq in jrcxz int xchg mov fisub xor xchg rex data16 out pop jrcxz iret pop enterq scas lods fwait jrcxz (bad) js sbbl pop cmc sub loopne in push test add outsl in cli cwtl fsubp xchg (bad) rex.WR sub fdivr iret cmpsl popq pushfq loopne (bad) add mov cwtl repnz loopne sbb retq rex.WXB sarb rex.WX cmp lea xchg rex.RX leaveq loopne rex.W (bad) rex.WR loopne cmp test es in outsl test mov sub (bad) and jg xor adc sarb rex.WXB mov mov sbb xorl int xor lods data16 rorb (bad) mov mov add xor int3 imul xchg (bad) cli ss xor loopne mov mov mov (bad) mov adc (bad) cli iret (bad) rex.WXB push in and xor (bad) loopne retq push fwait or in cwtl lock sbb and adc loopne (bad) lods rex.RXB (bad) and sar mov inc mov in adc add xchg loope jle adc movntq in out push stos jrcxz ja mov pop movabs movabs push movabs (bad) out (bad) stos jbe loopne add movsb stc jle sub rex.RB xchg jmpq outsb rex xchg cld fimull fnstenv adc rex.WR jl mov or (bad) loopne outsb xor or loopel and fildll repz sbb movabs mov sub imul (bad) xchg retq or lret test cmp insl sahf (bad) imul (bad) mov mov add adc rex.WXB (bad) icebp add je (bad) xchg rex.WX (bad) xchg pop rex ds (bad) decb sbb icebp sub imul pop orl (bad) and push xchg add or mov jrcxz sahf cmp rex.R xchg setnp sahf rex.WR (bad) int3 fcmovu (bad) jo lock mov jle repnz (bad) mov push xor (bad) ds icebp gs or sub and out or sti (bad) rex.RB (bad) or or (bad) in jno stos adc movslq cmc jg lret std sbb mov adc out pop xor movabs stos imul and gs pop retq (bad) jns pslld (bad) insb ds xor lock test cmp (bad) (bad) mov lret mov sub lahf jns fsub lret rex.RB lods mov (bad) iret (bad) retq sahf loope jl (bad) adc test in callq leaveq (bad) mov push add sbb cld or adc popfq sub lea jmp push insl idivb rex.W (bad) or retq loopne std rdtsc pop (bad) loopne pop imul rcrb ffree popfq cs hlt inc movsb adc add jae mov xor sub push sbb pushq add imul add or jb shll (bad) pop push in movslq (bad) pop mov or out sbb sub (bad) xlat mov push fdivs lret (bad) jns sub pop sub test jl and cmp js cmp mov sahf rex.RX cmc loopne std (bad) (bad) mull ss loopne lret rcll sbb movsl data16 int3 cmp pushfq rex.WR in out fmull loopne out xchg mov icebp (bad) (bad) lret loopne pushq mov loopne sbb push xor test mov fist loopne rex.RX rex.RB jo loopne pushfq notl xchg scas mov scas lret pop (bad) loopne int jns iret repz jl mov rcll in xchg xchg add pop loope (bad) push (bad) pop jnp cmp and movsb xor (bad) clc rex.WX movabs (bad) xchg retq mov cmpl sbb adc (bad) rcrb movabs addb (bad) and add xchg loopne repnz mov push gs imul es and add mov xchg mov sbb scas ficompl nop sti pop loopne xchg push cli retq lods or or mov fistl push xor jmpq mov adc fs scas addb pushq mov popfq test fsubp sbb xchg fs push and cmp outsl fnstenv mov lahf loopne movsb fdivs cli hlt fwait adc (bad) pop xor mov and rorl (bad) add sti imul push (bad) loopne rex.XB and sub sbb movsl data16 rex.WRB rex lret rex.X rex.WRX movabs xlat mul fsubr (bad) xchg scas pop mov loop retq xor rex.RX loopne (bad) sub or rex.RXB or movl test cwtl leaveq movabs and jp mov outsb fcom scas ror rex.WR loopne jrcxz xor jmpq push movabs or (bad) enterq in xchg lahf pushq shr hlt jno rex.X push or sbb imul mov sbb adc es movabs retq rex.RX test jmpq and fucomip sub shrl push jp pop mov rex.WR loopne movabs pop rcrl push lea mov cmp callq int3 decl mov in popq add push loopne mov add pop leaveq in rex.WR (bad) std out loopne cmpsb xchg rex.W (bad) cli stos insl rex.X or rorb adc cmc sbb outsb sbb (bad) imul mov in (bad) add sarb shrb push xor (bad) or adc scas xchg scas in add (bad) rex.WRX push loopne mov mov in movsb (bad) cli int3 (bad) (bad) rolb xchg sarb loope add (bad) mov (bad) jrcxz imul rex add out xchg rcl xchg repnz jb (bad) xchg (bad) loopne push xor (bad) sbb xchg lock loopne mov fistpl ja in cld (bad) outsl (bad) pop push adc callq movsb or adc rcl sti out sbb jmpq shrb cli adc rex.XB mov mov ds std in xor in fstpl loopne addr32 mov mov in xor jo lods rex.WRB sbb rex.WXB iret ds mov es jmpq fwait loopne add and or xlat and imul nop rex.B cmp je (bad) adc xor jae sti pop (bad) (bad) adc addr32 xchg mov cwtl outsl jne pushq data16 loopne or imul and cmpsb add faddl rclb mov cmp rcr mov (bad) mov jns lret loopne retq add cmp xchg and sub mov insl adc pushfq loopne out rex.R out mov in jns pop cmpsb scas jge jmpq rclb loopne xchg rex.WX rex.RB repnz cwtl jmpq (bad) push or test rex.RXB and (bad) rex outsb js cmpl hlt (bad) movabs push nop cs in jg paddusw sub adc rex.B push mov jno cmp and out repz rex.WRB jrcxz lock clc fcomps and rex.WB fs xchg xchg nop stc sbb out adc movsb sub rorl insl push je ror adc sbb in lea or sbb addr32 (bad) lock add jmpq mov mov repz jb out iret mov callq lahf (bad) sbb sub (bad) fwait adc mull xchg lock sarb clc loop or icebp imul jg (bad) jrcxz movabs out jl,pt movslq jl jmpq cld retq mov xchg fs and adc mov sbbl gs push test mov pop stc leaveq mov cmp mov rcll rex.WR fwait pop ficomp in mov rex.RX sbb movabs cmp lock (bad) movsl pop pop js addr32 test nop sbb iret mov out ja or movabs pop and jg ss fisttpll sbb cmp rex.W push retq xorb rex.B mov cmp pushfq loopne add movabs push pop xor loopne (bad) jne cmp rcr pushfq cmp (bad) retq pop (bad) sbb adc rex.X loop,pn (bad) retq (bad) lret pushfq mov (bad) adc icebp leaveq ja (bad) sarl shrl cmpsb mov insb push cwtl xchg not mov and movsl push (bad) sar rolb cmpsb rex.WR ds (bad) (bad) movabs outsb mov icebp jno xchg rex.R mov rex.WRXB push cltd rex.WR xor rex.WRXB or mov xor adc sbb out (bad) adc movabs js xlat (bad) notb sarb and mov movsl push (bad) xor je mov (bad) lret ss int movabs sbb push movsb lea add out in push mov movsb test rex.WXB mov data16 pop pop std (bad) and xorl stc int or lret jno pop (bad) pop or out xchg sbb xor jno iret (bad) mov mov hlt xchg mov (bad) data16 ss (bad) out stos jo xchg sbb and loopne mov jle add xchg retq (bad) (bad) stos jnp push cmp cs clc out cmpsw loope out out lock (bad) rex.WRX repnz imul rex.WRXB rcrl cld jge ss adc addl std (bad) rex.WRXB sub rex.R rex.WXB jg cs rex.WRXB pop xchg (bad) (bad) lahf xchg add retq mov pop jo fisubr vmulss push mov sbbb retq rex.XB rcrb mov jle xchg mov cli stc adc int fnstenv (bad) movsb mov jns movslq (bad) rex.WRX (bad) or enterq jmpq loop xlat adc movabs and (bad) sti (bad) (bad) cmc mov or xor subl icebp insb movabs movabs sarb out rex.X or jrcxz in dec (bad) ficomp sub push and movabs insl (bad) add icebp iret xor cli pop jno movabs (bad) sub int add retq (bad) rcll add push (bad) fwait loopne cmpsl sub jp pop pop (bad) lock adc jmpq cld xchg rclb xor lret popfq in rex.WRB fdivrl mov ds xchg mov jmpq es jns and rex ja and test jno mov mov xchg rcrb rex.WRB fs (bad) adc jbe mov out or movsl int3 xchg outsl movabs movabs push test jmpq retq loop jne (bad) rex.WRXB rex.RX mov jmpq or fwait pop cmpb lods cmp or pop insb scas movslq test jne in pop rex.WX xchg nop xchg pop cli rcl movabs and sbb sbb jo (bad) and sub rclb cli or adc mov loop sti cmpsl add xlat xchg push (bad) cs mov movabs jno pop add xchg sarl lret rex.WRXB scas push enterq in in mov loopne xchg push cwtl jnp (bad) lahf loopne jrcxz test (bad) pushq out mov mov cmp jmp sbb loopne cmp jnp lods (bad) or ja adc adc outsl loopne es fs rex.WRXB addr32 fmuls es (bad) and clc jo nop add (bad) pop (bad) stc (bad) (bad) rex.RB jbe test rex.WRXB adc jno jne sbb and mov lret xchg fsub cli or stos push xlat nop lock mov rex.WXB (bad) clc mov imul je pop jne pop rex.B xchg mov fstl (bad) sbbl push movslq (bad) clc xchg xchg mov popfq loopne imul loopne leaveq pop jge cltd mov or mov sbb adc xlat (bad) loop (bad) jmpq mov adc sub (bad) scas in (bad) lods add loope jge retq movabs (bad) loopne test jrcxz loop loopne xor pop (bad) push xchg (bad) movsb mov fidiv callq pop movabs punpcklwd rex.XB mov xor rex.RXB mov test jg lods jnp (bad) pushq shlb test sub jmpq mov roll fiaddl (bad) mov add retq sbb (bad) (bad) mov in scas fldl loopne sbbl or lock rex.WRB xchg push fsubs (bad) test and lea (bad) outsl (bad) (bad) xor test imul test rex.WR mov fstpl (bad) xchg add loopne xor jae jg test (bad) mov jo flds or or fnstsw mov sub rex.X out cmp lods xor or push xchg je imul cli xchg and icebp push int3 fldcw push icebp cwtl push stc xchg adc jnp add push movsb mov mov rex.WRX adc repnz jae in jg push loop push (bad) cli mov xor mov cld out std inc sbb cmpsl (bad) mov mov sar lret sbb sti sub rex.X test cmp xchg sbb clc movabs lcall mov rex.WB mov pop rex.WRX iret sbb xor (bad) rex.WXB sbb imul xor in int3 stos in mov xor sbb jb in and rex.B in and cmc in test cmp push push sbbl rex std cmc and rex.WRX mov nop (bad) xchg lea (bad) xor insb loopne movabs sub fucom push mov jae (bad) or sbb (bad) or mov loope retq loopne (bad) mov sahf shr fsub rex.WRX jo stos out es (bad) pop ds sbb loopne sahf or jle pop lods or stos movabs (bad) out popq xor push and rolb (bad) xchg xchg loopne js cmpsb and push add sub sbb ja xchg test scas jno (bad) cmpsl (bad) loopne mov loop jne (bad) test pop cmpsb or add (bad) or mov (bad) cmp lock rex.X lods (bad) loopne movslq rex.WX loopne sbb mov scas xchg jle (bad) imul add loopne out mov jle,pn sbb int3 rorl rex.WRX push icebp vpsrlw test (bad) movabs jp stc loopne icebp sbb pop mov mov gs movabs xor xlat (bad) add pop js rex.RB cs (bad) sti cmp hlt xchg push mov gs rex.WB rex.X cmp (bad) add sbb loope (bad) jmpq js test sbb pop xchg mov jno add loopne or xlat in movabs push xchg rcrb loopne loop imul lahf fs lret push (bad) mov pushq pop bnd and sub mov rex lret (bad) jmp cmp insl add icebp (bad) icebp push rex.WB sub scas and rex.WRX pop add pop jae sbb xlat (bad) mov vrcpps lock roll callq sbb xchg sti rex.WRXB fildl xchg fwait in (bad) int3 test (bad) (bad) icebp adc (bad) and or cld lods rex.WRX lret movsb imul xor and out retq jmp (bad) test fnsetpm(287 (bad) sbb xlat (bad) mov movsb sub and ss and (bad) rex.RXB fs (bad) (bad) movabs rex.WB repz jg mov rex pushq loopne rex.WRXB rcll insl mov lods lock jmpq rex.WRX (bad) (bad) pop (bad) loopne mov stos mov test scas negl movabs loopne and jmp (bad) loop xchg sbb (bad) fdivrl (bad) xchg jno adc push loopne cmp sbb loopne xchg xchg mov insl (bad) mov add (bad) jb jle lods cmp rex.X rex.W (bad) in pop mov xchg loopne add movabs sbb jne or js test xor pop sbb stc xor stos pop clc (bad) cmpsb rorb lahf movsl jb push rex.RB data16 (bad) sbb (bad) (bad) loopne repz add jrcxz xchg push js test mov rclb sub fcmovbe repz shl jbe lea and xor mov lcall add mov lret fucom mov je pushq rex.WRXB lock jmpq (bad) add and rex.XB lock shr callq (bad) sub (bad) and cmpsl ja push add mul gs (bad) rex.WXB scas or out (bad) pop push stos jmpq or roll test (bad) icebp sarl (bad) mov sbb push loope lods enterq jge lods retq xor popq (bad) stos shr fdiv rex.WRB cmp movabs movslq jae (bad) rex.XB xor rex.WRX mov and rex.WRB es rorb in sub xor out movsb sbb test jo (bad) mov and cltd (bad) jae cmpsl sbb sbb lock callq (bad) jb imulb (bad) or lahf (bad) jb (bad) pop pop (bad) mov jle (bad) jmpq (bad) (bad) imul in sub xlat jb outsl loope mov mov sub pushq (bad) and xor movsb xlat (bad) (bad) (bad) stc jg fcomps jns xor rorl sub add rex.W mov and sbb mov movsb and popfq rex.WRX xchg fcomps push sbb jno mov lahf mov (bad) addr32 mov push pop jrcxz fs int3 mov loop (bad) (bad) out mov sub in (bad) pushq sbb mov shll (bad) icebp data16 adc std jl rex.WX or stos (bad) jne imul and (bad) cld mov ss loop cmpsb sbb (bad) addr32 mov pushq imul xor mov push jo rex nop xchg rex.W pop and fs rclb xchg adc (bad) loop and sti fstpl retq adcb jo xlat sarb push jo retq (bad) jns push (bad) cli repz or xchg sub (bad) mov jmp nop jmp mov test rex.WR rex sbb mov sub enterq icebp or (bad) rex.RX mov (bad) (bad) std gs mov cmpsl mov lret jp mov std callq psllq xorw cmc stos rex.RXB (bad) sub jo pushq sbb (bad) hlt rex.R xor adc add mov roll jrcxz xlat xor adc data16 jbe (bad) jp (bad) mov and cs or ds stos push fisubr in and (bad) pop icebp sti pop rex.WRB out sbb (bad) (bad) mov rex.WX outsl pop and (bad) leaveq rex.X rex.R pushq (bad) rex.WRB rex.R add (bad) mov insb test (bad) in outsb ja loopne pop fdivr sub movabs (bad) movsb out imul mov (bad) (bad) jae loopne addr32 (bad) test lret out xchg lea mov outsb stos rex.RXB adc out loopne add cmpsl loopne imul jrcxz test cld mov movabs rex.WXB loopne mov jno shr shr mov jo sbb push in lods rex.RXB cmc jae add push (bad) fdivs test xor add rorb out add jo and mov cmp loop xchg mov rclb retq (bad) (bad) (bad) loopne mov xchg push adc and loopne xchg mov (bad) jb loopne int push and sti jle movsl and lea adc ja rex.WXB repz cwtl (bad) sub iret loopne mov push imul scas hlt pop mull mov mov cli int loopne jbe sbb jmpq jmp fisttpll rcrb cmc and movabs mov loopne (bad) jbe push cmp test data16 rex.WX rex.XB in hlt fwait pop jae movabs sbb (bad) in or push xlat cmc fildll (bad) in dec rex.WX rex.WRX rex.XB (bad) push xor jno int mov cmpsl sbb es sti adc xchg (bad) jrcxz retq imul mov cltd rex.WRX (bad) mov add fwait push sbb jae popfq mov pop sbb xchg adc push rex.WX addr32 mov mov addr32 jo jge shlb test fwait or movabs leaveq nop jp adc rex.WRX inc jno xchg lea xchg movsl rcr push jnp loopne (bad) sbb movabs or jns jle repnz loopne adc adc adc mov in mov imul mov popfq (bad) nop stos jo loopne (bad) sub lock rex.X repnz push xchg lret sbb gs cmp jnp jp fucom xor in loopne push mov push in test xor sub loopne movabs insb ja (bad) add mov (bad) pop push adc popq (bad) enterq (bad) pop outsl cmp jle (bad) xchg lahf fsts add lods loopne in lret retq shr xor add rex.WRXB retq in mov push jnp add sarb adc loopne and (bad) or sub fldl push decl xor push rex.RB (bad) pop pop sarb lahf and mov sub loopne pop push sub (bad) xchg loope cli add (bad) sbb mov clc (bad) fs mov ror (bad) out loopne sub jae jns jmpq xor not fistp repnz fsubs rex.W in mov sbb imul (bad) mov (bad) loopne or add mov lahf (bad) loopne rex.WX std (bad) mov sbb jrcxz xor stos shr sbb (bad) insb (bad) mov lcall (bad) (bad) loopne xor andl roll cmp jl loopne or (bad) cmp loopne xchg adc rex.WB enterq adc jno loopne pushfq mov (bad) xor xchg (bad) ja test (bad) jno (bad) popfq in stos cmp (bad) cwtl loopne fbstp (bad) pop or mov mov push and (bad) imul mov xchg sti iret pushq sub movabs mov jae mov test sub (bad) adc ja callq nop xor movsl and leaveq repnz pop xchg loopne retq cmp ljmp jp (bad) sarb push xchg cmp (bad) mov lods (bad) scas jne mov mov pushq loopne xchg (bad) retq pop fisttpll push je cmp (bad) adc (bad) and sub cmp mov sub rex.B rex.XB (bad) push jb push sub jle rex.R xchg mov pushq mov add adc movabs fimul js loopne out adc (bad) rex.WR sahf in pop rex.R repnz pushfq jg movabs mov movabs jrcxz xor pop (bad) ljmp notb (bad) mov out rex.WX jle out pushq fs xor push rex.WRX mov es jbe cmp xchg mov jne fidivrl jns sbb sbb mov out mov (bad) xor sar nop rex loopne (bad) out (bad) (bad) lret adc (bad) movabs (bad) test mov adc in pushq xchg xor cmp or jle movabs lahf cmpsb add fsubl cmpsb rorl hlt push scas sub sbb add (bad) (bad) insl (bad) clc stos sahf loop (bad) ficoml (bad) mov rorb jbe add (bad) movabs push or fildll retq sti (bad) jrcxz pop cmp lret mov ja xor jae outsb push es (bad) jmpq (bad) sbb and loopne (bad) fcompl adc loopne loop mov (bad) scas xchg loopne lock callq icebp (bad) adc loopne pushfq std (bad) out je loopne adc in loopne clc (bad) push add fsub xchg sahf movsl sub mov pop xor (bad) push icebp (bad) mov iret (bad) loopne jbe sbb mov adc jb ss add or mov add lods test mov jmpq jg rex.RXB lods shl insb lock bswap out loopnel (bad) (bad) rex.RX mov sahf es or and cltd mov mov rorl pushq rex data16 loopne out sahf (bad) push sti mov cmp (bad) sbb movsl fwait cwtl loopne mov (bad) push lret loopne rex.RB es lods pop loopne (bad) fs jrcxz adc (bad) fistl cld loopne je rex.WRX jge or mov cmp mov rcrl loopne rex.XB jmpq pop (bad) jno not stos and xchg loope icebp and lahf callq (bad) shr or fstpl outsl mov (bad) jae pushq leaveq mov xlat out jnp test jns idivb (bad) sbb cmp and mov pop mov adc (bad) (bad) sbb (bad) shlb and cmp out nop fisttp retq sub rex.WB gs bt sti xchg (bad) rcrl movabs (bad) (bad) (bad) cli sti cmp loopne mov or pushfq lods addb loopne (bad) sbb (bad) xor loopne enterq mov jb jno add imul push add cmp loopne xor jae (bad) jmpq xor mov mov sti lods hlt pop loopne int3 movsb xor mov scas sub jb loopne repnz loopne adc rex.WXB in stos cltd sub and (bad) rex xor rex.WX nop or je pop mov inc push rex.WRXB int loopne jb (bad) (bad) xchg loopne xchg cmpsl leaveq icebp mov jae cwtl movabs adcl adc loopne mull jb push rex.WB sar fcomip jrcxz rcrl fisub add fs js orl rex.RXB jo stc mov cmc stos lock icebp cmp (bad) adc pop loopne cmp loop scas and stos loopne (bad) mov and (bad) fcom out loopne popfq dec adc mov add test add rex.RB rex.R loopne (bad) cmpsl pushq (bad) addr32 in mov push mulb mov repz pushfq mov jp fs and (bad) rorl pop cmp loopne out add adc rex.RX gs cmp jmp rex.WB rex.R add sub pushfq rorb and je loopne or (bad) movabs lods loop loopne push adc int3 xlat mov loopne enterq or mov rex.RB addr32 rex.XB sbb in jmpq or fdivrl shl rex.WRXB add mov jns jo xor rex.WB mov xor decb push sbb cmc rex.WRX out loopne and add pop xor (bad) pop fs or pop ror (bad) mov mov lods (bad) (bad) movslq test imul sbb mov (bad) movabs add mov fsts in (bad) stc mov mov lods std nop mov (bad) loopne test retq in sti xchg jl push js es rex.WRXB in stos cmp push xor adc es mov in (bad) sahf divl adc xor (bad) fimul (bad) ds rex.X ficomp sbb push sbb sub mov jns out jae rex.WX repz gs frstor adc pop push mov and xchg lea insb mul outsl in (bad) callq loop (bad) in xlat jno (bad) imul pop add or (bad) jl ficomp (bad) (bad) mov insb loope ja adc int fstl xor mov outsb insb repnz cmp hlt sti nop pushq stos pushq cltd in cmp hlt or (bad) jno retq retq and xor xchg shll movslq repnz std and (bad) test jne xor xor enterq or pop mov icebp out movabs data16 mov mov push mov add sahf adc sbb mov rcrl leaveq add (bad) jo adc and retq pop jo pop (bad) cmp push add loope mov (bad) (bad) sub mov cwtl mov cltd mov stos jmpq sbb jmpq sub and in icebp push add or sub repz (bad) scas push jne imul add sub mov int jbe (bad) xor push (bad) or xchg mov sahf sbb and fmul (bad) loopne or pop je out loopne push jp mov fildll xchg loope pushq loopne repnz add rex.R mov pop cmp xor cli rex.WR rex.RX (bad) or cmp (bad) fcmovbe in (bad) out rex.RXB rex.W int3 clc loopne loope adc sbb jnp movabs mov jl gs rex.R jbe cld rex.RX ss lret rex.RB mov push mov lea movabs sub xor and pop mov xchg cmp xchg test std fcmove adc and mov outsb fdivr test push rex.RXB (bad) adc loopne (bad) cmpsl rcrl cmc cld fnstenv fmul (bad) (bad) rolb int3 mov int3 cmp (bad) stos (bad) (bad) movsb insb fdiv rex.WRXB xlat xor jrcxz pop pmaddwd out test (bad) (bad) enterq movsb mov jrcxz pop or movb xor xor lods sub rex.WB or jmp xor (bad) xchg sbb imul (bad) adc and mov xor scas cmp sahf jns clc rex.WRX (bad) (bad) mov add scas rorb (bad) push clc rex.RX cmp xor (bad) in fisubl repnz and loope fdivrs lock jne xchg shrb rex.WR rex.RX out outsl (bad) mov pop stos xor xchg push sub push movsb xor push jnp in adc mov (bad) (bad) mov mov sbb retq fs rcr pushfq leaveq sbb cltd jg jmp sbb outsb leaveq (bad) movabs and sbb and rex.WRXB rex.WX popfq cmp cwtl loopne ja fsts repnz in jo add xor pop lea gs (bad) sub sahf (bad) icebp (bad) in (bad) add test loopne jge cwtl in mov jmpq addr32 gs sub rex.RB pop loopne (bad) nop xchg in movabs movabs (bad) jb js sbb adc imul (bad) xor xor retq xchg jns (bad) mov ljmp mov rex.W sti (bad) pushq std int in cmp push add (bad) sub hlt or test cmp lods push xlat mov (bad) out (bad) rex.WB test cmpsl out mov push movabs xchg xchg popfq jrcxz addb roll mov rex.WXB rex.X fnstsw xor (bad) and mul adc push lret outsl fdivrp loop callq loopne repnz lret (bad) loopne loope sbb andl jmp rclb (bad) stc push jl or loopne outsb mov pop (bad) jle movsl fcoms mov cmp (bad) adc rex.WR push jno lock pop rex.WRB push scas stc loope retq sub shl jrcxz ds fprem jb cmp sahf scas and out mov lods movsl clc test and sub enterq fidiv or movabs retq xor fdivl push mov push js (bad) rex.WRB (bad) jo mov popq jmpq addr32 pop ss movabs fistp and sbb pushq or out (bad) xor insl xchg (bad) (bad) loopne imul pushfq xchg test fdivrs lahf std and rex.B mov push movabs xchg fnop loopne push pop cmp add mov mov (bad) (bad) rex.WR adc xor stos fsubs loope repnz sub or (bad) sarb callq fisubl jae (bad) push sbb callq addr32 (bad) pop out (bad) adc or (bad) sar (bad) stos xchg movabs add jmp fbstp test jnp (bad) (bad) pop mov add jno leaveq lret mov rclb loopne nop xor cmpsb rex (bad) sahf (bad) leaveq (bad) jg or fidivr rex.WR or out xor mov (bad) rex.X (bad) std je,pn mov jle adc mull sub loop cmp jb (bad) pushq (bad) mov mov frstor sub retq (bad) in xchg (bad) fs adc fstps sbb mov mov insb or sbb rex.WXB lods movabs xor test in nop jb in mov fldt mov addr32 enterq sub push push sbb int3 and (bad) movsb (bad) lahf rex.RB mov int3 adc orl fcomp jo push mov cmp lcall cwtl (bad) sub fdivs (bad) cmpsb clc adc add sarb cmp (bad) xor idiv lock jrcxz pop pop rex.WRB rex.WRX shrb push add iret sbb movslq mov pushq fsubs sub movabs jle nop sbb adc loope mov (bad) mov fbld sbb mov xchg out (bad) testl xor adc and xor callq adc fwait push xor movslq and icebp test loopne mov imul (bad) sub xchg ror sbb (bad) sarb or (bad) (bad) and movabs rex.WXB jns and sub cld rex.WRXB rcrb (bad) icebp movslq retq cld movabs add cmp loop and out (bad) mov subl test mov mov mov (bad) sub sbb jno retq out (bad) rex.RB mov pop add rex.R (bad) out (bad) (bad) adc cmp cmp (bad) (bad) mov cltd cmpl pop loopne rclb loopne or lods xchg jmpq lahf rclb adc cmp jnp and mov push movabs jo adc xor mov addl loopne cltd mov push imul (bad) pushq jle rex.XB pushq clc jbe in test repz cmp push loopne jno sub jrcxz xor rex.R incl (bad) rex.WXB imul or imul xchg cmp andb xchg movabs and es movsl xchg std mov iret fisttpl in push clc mov callq loopne rex.WRXB cmp jno fistpl sub pushfq retq (bad) sti sbb rex.WRX jns mov shr (bad) cwtl pop js in adc cld in and cmp mov mov (bad) es add xchg in adc rex.WRX xor sbb in fsts enterq fninit mov in fnstsw movsl js,pt push jmpq (bad) (bad) adc xchg adc cmp movsl sbb loopne push addl (bad) in addr32 jne and sub retq loopne (bad) mov rex.WRB loopne out (bad) mov sub in jo retq out (bad) rex.RB jmpq int mul lods cmp pop add insb retq movabs jp pop jg cld loopne setbe cmp decl cli out decl xor rex.RX loopne movabs roll rex.X (bad) loopne cltd lock callq rex.R insb mov imul loopne adc out lods add jg loopne xor pushfq cmpsl int3 (bad) loopne lods (bad) insb sbb jb pushfq retq loopne lock pushq fisttpl je jns frstor movabs (bad) pop loop jnp callq hlt rex.X rex.RB (bad) cmp jne mov cmp xlat out jnp fisttpll imul (bad) mov fdiv retq in (bad) pop xchg cmpb outsb hlt push fiadd cld fcmove push loopne (bad) xor push test pop (bad) lahf imul movabs loope,pn popfq adc jno adc in push (bad) stos sub jp adc rex.RX (bad) jne (bad) fnstsw sbbb mov icebp out in mov outsb rex.W ja cld (bad) (bad) adc (bad) loopne (bad) pushfq adc xor cld and cmp xor stos lods (bad) push in movabs sbb imul movslq pushq mov rex.WRX lock cltd sbb addb (bad) movabs movabs lea callq ss add (bad) in testb or jge test jrcxz cmp add or adc testb cmpsl (bad) and adc mov rorb xchg sti movabs mov imul (bad) cmp loopne (bad) or sub (bad) jmpq clc xor (bad) mov callq and xor and (bad) ss rorb pop clc or iret (bad) pop loopne int3 sub loope movsl push fwait ds (bad) and jnp in movabs rex.WR movabs xor and adc cmp loopne xchg jns fldenv stos and outsb (bad) mov jmpq jnp movabs xor (bad) nop jge mov adc mov icebp xor fildl xchg loopne rex.RB je in fwait ljmp fistpl xchg add fnsave stos (bad) ja rcrb or test mov fcomps xchg (bad) cwtl sti loopne or mov sbb repz loopne movsb cwtl out xchg lret ror push jnp mov jae xchg jrcxz (bad) push loope pop lock callq nop stc (bad) mov addb loopne adc loope callq sarb loopne (bad) fcmovnu rex.WRB xor push loopne in clc rex.WXB ficoml rclb jbe ficom (bad) mov iret xor fstpt insl xor je jp jno (bad) push (bad) rex.WRXB (bad) rex.RXB movabs insb rex.WRXB gs jb jrcxz adc rex.WXB div push pop cmp (bad) sub and movabs xchg lods hlt mov cmovge jle or mov lret add and jae pop icebp mov xchg test (bad) jb rex.WB and and add fs (bad) (bad) sbb je sub adc adc cmp (bad) loopne incl (bad) sub sti sti fidivr sbb jl mov callq sbb jno rex.WXB jrcxz mov lods (bad) out add loopne sar adc cmp (bad) adc mov leaveq adc mov insb pushfq (bad) (bad) xor ds or (bad) imul lods enterq (bad) lods sbb and sahf repz ja adc addr32 nop sbb lahf lea xchg pushfq add add push mov cmp cmp movabs push cmp or mov adc and movabs or lret mov xor dec icebp jne or xor in fldt jge cmp imul sbb js rex.W or jl js roll sub pop push jp sbb add pop movsl jns movsb callq in (bad) mov mov and lock push (bad) xor movabs mov and lods cmc xor stc test mov xor or in and mov clc sub rex.R (bad) out movabs insb (bad) and in (bad) (bad) lahf add (bad) leaveq out bnd (bad) add and and (bad) jmp lret push in jrcxz xor pop lods push lahf sbb in push mull and sti (bad) out stc (bad) hlt and fild jp (bad) loopne sar test push jb pop (bad) rex.WX rex.RB rex.WRXB (bad) (bad) push scas (bad) add (bad) loopne mov (bad) (bad) jmpq add xchg lahf (bad) mov push mov in loop cmp (bad) outsl or loopne leaveq xor sbb lods rex outsl (bad) jb stos jno cmpsl fwait in loopne cmp mulb and loop (bad) leaveq pop mov cltd fwait xor pushq xchg lock icebp or fstps movabs sub outsl outsl add mov lret cmpsl pop rex (bad) sub rex.RXB rex.XB stos test jl imul loope xor mov (bad) cmc rorb ja mov or and out xor (bad) fnop pushfq gs clc mov and mov push test xchg xchg loopne jrcxz (bad) lcall mov loopne rex.WRXB emms js push jmpq sti fldenv and fiaddl (bad) cld cs (bad) or scas mov imul jrcxz rex.W rex.RX sti xor add and lock xchg add xchg jne rex.RX jmpq (bad) lock xchg (bad) (bad) out xlat (bad) icebp cmp gs (bad) mov ja (bad) adc adc rex.WRB jae loop adc fiaddl mov jo add jns ds adc rex lods mov or sbb pushq fbstp mov pop pop xlat xor cli sub adc or cmp mov mov shlb fsubl mov (bad) jbe push jle sbb xchg lock movsb push hlt pop je scas lret mulb mov ds loope pop out notl jg lock loop (bad) rex.WRB insl stos mov jae rcr rex.R rex.R push cmp xchg pop jne insl shrb retq jle sub in stc loopne (bad) outsb (bad) jno (bad) loope sub loopne mov stos xchg je xchg loopne mov xor jae sbb mov (bad) (bad) decl pop add flds es push popfq push or xlat mov (bad) mov xor sti lret rex.RXB xor (bad) or divb xchg (bad) loopne (bad) jmp mov mov add push rolb (bad) sarb loopne addr32 jrcxz jae loopne mov add xchg test (bad) loopne (bad) not rex.WRB movabs and and divps callq push rex.WR (bad) (bad) retq rex.WRXB xchg xor cwtl rex.WXB pop cwtl rex.W sbb mov xor fs fldt jns sahf xchg pop ljmp sbb rex add loopne cmpl jmp rex.X xor lods jmpq test fwait (bad) loopne xor cmpsl lods addl rex.WXB (bad) pop mov rex.WRB sbb adc cwtl rex.W jae sbb (bad) ja jmpq in jo movabs sub jnp mov or loopne mov mov loopne add mov xchg or data16 je xlat rex.WXB pushq faddl (bad) fwait xor mov xor xchg or in (bad) movabs push int scas leaveq push cmp test (bad) pop movabs lods loop je rex.RX jg out movslq cmpsb fisttp fdivrl (bad) loopne mov popfq es mov icebp cmp push jl callq fcmovne rex.WRB rex.WRX rex.WB mov cmpsb cmpsl jmpq (bad) (bad) addr32 jbe ja adc retq jmpq (bad) out push jg cmpsb jl xchg pop sbb push jns sbb rex.WRB add xor and lock jmp xchg loopne out ja pushfq loopne fsubs (bad) loopne push nop pop (bad) xlat cli and (bad) cltd xchg imul mov out rolb loopne popq out loopne outsl loop mov push push or push mov cmp add movabs (bad) ds mov cld lods (bad) mov fsts (bad) add in test mov fdiv mov (bad) adc (bad) jl (bad) nop out mov loopne cli (bad) hlt es rex.WXB insl movabs fwait retq lock adc lea loopne rex (bad) and xchg mov fimul fs fwait xor adc (bad) jb mov sbb mov (bad) int3 xchg add (bad) loopne (bad) xor pop sbb icebp or (bad) mov adc mov retq (bad) repnz or clc mov (bad) adc or (bad) jnp cmpl (bad) jg pushq push rclb rex.WR xor sub rol pop fistl movsl loopne (bad) pop add mov loopne lret in cmp hlt sub cmp shrb or ds out cmc and sub and scas cmp rex std xchg loopne rex.WRX movabs adc mov push add loopne out rex.X pop lods mul adc pushq loop in xchg cmp lret sub rex.WRX fwait sbb mov jae xchg mov (bad) ljmp (bad) stc fcmovnu nop (bad) (bad) (bad) sub mov add or jl pushq mov sbb xor movslq test pushq mov add sub xchg movabs rol push leaveq mov loopne movslq cmpl or (bad) (bad) xor mov lea retq cmpsb cltd (bad) mov rex.W insl (bad) sub movsb jl jmpq pop or sbb sbb rex.R (bad) cmp loopne data16 jp cld push mov (bad) xor or shl leaveq adc movabs push fildl and loopne test mov repz xchg pop adc jo mov or ss jmpq fdivl callq (bad) fdiv nop je mov es push add or xor pop insl retq lods mov cmp lfs jp mov cwtl cmp jb scas repz int rex.WR sti rex.RX (bad) jb jrcxz cs movsb xor or mov cmp mov jl xchg (bad) movabs movabs movsl mov int3 mov stos (bad) (bad) mov xor adc rex.RX ss fdivr pop nop pop xchg add xor jne fcom repz adc rex nop retq sbb sbbb (bad) and (bad) (bad) (bad) xor cmc rex.WX fnstenv xchg sub jns pop (bad) rex.XB nop sbb add clc cmp xchg nop fnsave sti xor movsl fcomip int3 in insb pushfq and mov cld (bad) (bad) xor adc pop mov imul pop (bad) lret mov jp mov xchg xchg xor xchg pop mov (bad) jl cwtl sub mov cli out rex.RX cmp in (bad) adc mov rex.WXB enterq jae (bad) in mov (bad) sub pushq scas (bad) stos add in adc insl and mov xor rex.WX xor jge xor cmp scas xor xchg and movslq mov hlt stos (bad) cmp ror (bad) sbb adc rex.WB rex.WRX adc lea in or rex.WRXB (bad) pushq (bad) pop (bad) jrcxz sbb (bad) repnz rex.WR or insl leaveq iret mov cmc cmc (bad) enterq xchg (bad) ds rex.W mov loop add (bad) jmpq rex.WRB callq retq sbb cmpsl pop pushq push loopne mov and (bad) lea rex.WB mov (bad) xchg xchg cmp and es sbb adc mov divb push movabs (bad) (bad) xor sti rex.RXB repnz mov sub retq mov jl add jne loopne pop jbe movabs pop jne loopne vpsllvq loopne fdivrl fstl scas (bad) loopne adc xor leaveq out cmp fadd rex.XB (bad) sarl (bad) xchg add (bad) jb (bad) loopne mov outsl js and lock int3 mov and rex.XB repnz loopne (bad) mov clc add jmp hlt pushq shr xchg adc mov int3 sti mov pop sbb and (bad) (bad) xchg (bad) adc icebp mov test movabs jo jb fidivl outsb incb test cmp sub int3 inc sbb jmpq loopne (bad) xchg pushq insl loopne rex.WX fnstcw clc (bad) mov adc cld or push cmp fs fcoml movabs (bad) mov jbe lret and enterq mov fisubrl adcb sbb loopne mov jne (bad) or xor mov movslq fwait (bad) mov test mov adc jnp xor js cld loope insb movsl (bad) repz or sub (bad) stos nop or imul rex.WRX loopne (bad) mov mov fs callq xlat push cwtl (bad) or rex.RXB mov push ja incl or fsubp rex.R cld xor jg cltd add rex.WB rex.RX (bad) fidivrl nop jno lret icebp rclb jne rex.RB fildl jmp (bad) pushq movsl rex.RXB mov iret jg sub movabs lahf xlat rex.RX cmp or sub cmp mov in (bad) jo out setno xchg in xor popfq and rex.WR rex.WXB sub vpaddsw rex.WRXB stos insl jp in andl add fnop cmp nop retq enterq in adc (bad) add in loopne lahf mov pop cli outsl xchg addl mov or movabs (bad) cmc add in or loopne scas mov (bad) ds pushfq incl push fild fldl adc lret cmpsl (bad) (bad) rex.WR (bad) pushq loopne jb rex.WXB inc cltd iret xchg es pop (bad) retq (bad) movsb jnp cmpsb test subl rex.R jg push adc fs rex.WX lods rex.RX lods rcr rex.XB test or fcompl lret push outsl rex.WRX (bad) iret (bad) cmp mov jge loopne mov out mov sub xor sub xchg cmc loopne js jb fwait out add rcr (bad) imul loopne pop (bad) cmp add int3 push pop mov (bad) jl (bad) cwtl jb (bad) callq movsb (bad) mov retq xchg mov iret rorb lods xorl rex.WR in xor push frstor orl js xor lahf and jmpq (bad) mov movabs mov rex.R lock lods mov (bad) sub rex.R add pushq xor rex.RX rex.WB cmp in mov cmpl push loopne cmpsl retq jl mov (bad) enterq (bad) jmpq add or (bad) out jnp cmp gs sahf rex (bad) and xchg (bad) rex.B pop sub mov icebp hlt add and jb push sbb sahf xchg rolb sar cmp add or js ds (bad) loopne mov (bad) mov add mov pop stos jrcxz add mov (bad) mov outsb adc jmp rex rex.WXB shr jnp mov add xor sub mov mov out data16 out cmp iret or adc fneni(8087 nop mov rex adc (bad) xor mov rex rex.WRXB (bad) mov stos jo sub pop (bad) (bad) cwtl (bad) ss in in jb or (bad) pmuludq imul mov mov (bad) movslq and addl sbb (bad) pop gs jbe mov jae cs movslq (bad) or movslq and fisttpll movsb pop fwait sub (bad) std adc xor (bad) scas jne in push (bad) out mov outsb out mov (bad) jge pop in decl (bad) add fsubp adc rex.WXB lock xor jmpq leaveq ds sbb mov out stos (bad) subl xor xchg mov mov incl jle rex.X mov lods lea xchg xor fcompl loopne rex.WX (bad) lret fisttpll mov jae repnz testb (bad) (bad) jne cwtl rex.WRX fs jo sbb push (bad) cmp lahf (bad) (bad) xor in cmp outsb fsubrl add xchg pop mov adc loope fsub test xchg rex mov (bad) lock pop ja mov fs data16 xor insl adc (bad) (bad) test icebp xchg fsubrs rex.WX stos or fs lret (bad) mov mov rcrb xchg loopne rex.XB sub (bad) mov sti adc pushq (bad) (bad) mov loopne push shlb stos or cmp addb sbb add loopne mov xor rex.WRXB (bad) in test retq add fwait stc mov jmpq data16 jne xchg sub mov (bad) loopne mov (bad) (bad) jo movabs sbb jae cmc cmp cmp jbe and xchg in shrb mov (bad) jb (bad) mov test add mov xadd (bad) sub pop (bad) fnstsw shlb cwtl (bad) icebp jmpq rex.WRX rex.WRXB repnz lods shl mov div jge mov lea xchg in and rex.W mov pop icebp out loopne and scas jl and (bad) movsl xchg mov sti sub add pop ror jmpq movsb (bad) test adc fwait retq (bad) fcompl pop rex.WX loopne mov mov (bad) and (bad) in mov cmp loop or loope sub lret (bad) push (bad) fstpt or push (bad) fbstp pushfq rex.XB push (bad) movsb sub jrcxz jmpq shl mov and add loopne ja fcmovbe incb sub pushfq rex.WRB xchg adcb loopne rex.XB rex.WR lret jmpq xchg (bad) and rex.B cmp rex.W push fwait loopne,pt mov (bad) popfq roll jmp pop rex.WRXB int3 test (bad) fidivl movl and add in nop retq fisttpl (bad) fisub xor mov (bad) lea loop enterq add lods pushq and leaveq movabs retq rex.WRXB push mov mov (bad) (bad) (bad) mov fdivr fidivrl add xor mov mov sbb out fcmovnb movabs mov loopne and rex.RB sub imul xor test int sti mov rex.RB (bad) loopne cltd test repz test loopne (bad) mov loopne jne adc sti (bad) push and pop movslq subl nop loopne jb sub jne leaveq test sub adc add adcb cmp imul (bad) pop or movabs clc (bad) or rex.R push movsl add ss out insb adc add loopne vmovntps data16 push add popfq (bad) loopne int out leaveq mov and push or cli (bad) nop mov jb xchg imul rex.WRX cmp xor lcall pushq sbb xchg mov sbb cmpsb scas jge loopne adc (bad) xor adc loopne sti cmp (bad) imul xor add je ror fneni(8087 sar xchg test loopne rex.RX and adc fs stos mov push in sbb in xchg (bad) data16 mov sbb pop mov imul (bad) ss xor (bad) je (bad) (bad) mov fcompl leaveq jnp (bad) xchg rex.W sbb or fnstsw mov je cmp xchg mov xor xchg in pushfq cmpsl cli movabs sub adc fdivs (bad) sbb fwait mov jno sub movabs fwait out leaveq shl jrcxz (bad) (bad) enterq callq retq pop mov rcl rex.WXB adc cli xor clc (bad) adc imul out ss int3 mov add mov sub ja mov mov out and pop add add pop and (bad) rex.WRXB test xchg fcompp movabs callq rex.R add add (bad) push cmp hlt stos movslq fwait mov push rex.XB mov imul mov cmp pushq (bad) ja or or movslq (bad) cmc xlat ds callq (bad) xchg rex.WR push pop jmpq negl mov rex.X (bad) addb and or xchg jge push clc pop xchg shr fdivrp pushfq fwait and xchg outsb xchg mov jg enterq jae movsb (bad) retq (bad) adc push xor mov (bad) mov sub rol lock lock sbb stc mov repz (bad) rex.WR lahf mov subb loopne fs (bad) and jg mov sbb loopne (bad) lret (bad) adc movabs movabs iret movabs xchg andl xchg or enterq movabs fcmovnb loop cmpl rex.WRX (bad) lret pop (bad) rex.WR pop (bad) rex.WRB or out mov fdivrp fcoms jb cwtl (bad) lahf adc int (bad) mov lret callq insl mov imul sbb pop cmp fldt (bad) movsl cmpb clc pushq fmul jo pop mov insl es in rex.WRB rex.RXB mov shlb mov callq mov or (bad) (bad) enterq mov rex.RXB add in (bad) (bad) xchg (bad) (bad) mov fisubr out and mov adc (bad) mov pushq jae sbb xchg push mov cwtl lret add mov jmpq xchg movsl lods xchg xor movabs rex.W incl and js movsb pushfq and cmpsb in cld (bad) jne jmpq (bad) pop push loopne fidivl cli pushq movsb loopne rcll mov in mov (bad) nop shll mov clc push xor enterq loopne xor movabs and rclb push loopne add cmp mull sub (bad) loopne adc rex.RX pushq mov add ffree cltd loopne fdivl pop pushq retq (bad) rex.WB jne or movabs mov loopne loope mov mov mov xor add or addr32 movabs jle pop loopne gs jb fmuls cltd and (bad) rex.WX idivb pushq rex.XB mov insl rex.WRXB int ror (bad) (bad) mov and and test test cmc adc fchs (bad) std lea (bad) shr fucomip (bad) (bad) adc sub jne fcomps xchg (bad) push xor cwtl loopne cltd fistpll jo mov mov (bad) pop (bad) xor je and sbbb pop fcmovne jae sarl mov sti xchg loopne repz rex.WR (bad) or pop (bad) sub (bad) test sbb (bad) xor push scas or rex.WR (bad) adc loopne sbb sti sub gs insb out rex.B xacquire loopne cmc jle or lahf mov loopne scas je insl mov xchg push loopne and mov (bad) mov imul (bad) mov pushq rex.WRXB movslq and mov jmpq sbb movabs xchg (bad) add rex.WRX mov (bad) mov loope sub (bad) rex.WRXB loopne sub (bad) test xor test insl cld adc cli loopne push xchg out in jmpq fistp sbb fs stos (bad) xchg test subb callq (bad) mov rex.R out xor (bad) and test loopne js xor xchg jl xchg (bad) or cmp loopne pop jnp push jne add rex.B cmp adc scas mov test (bad) loopne mov sbb loop sbb insb jnp jmp add pushfq add xchg mov jge mov xor rex.RX cmp jns icebp add rex.WXB es add xchg cmp rex.RX (bad) jle rex.WX mov lods je lret mov jo add push loopne adc push rex.B rex.R iret roll pop test pop (bad) mov fs (bad) jae movabs int3 fdivrl xchg loopne pop pop (bad) leaveq pop rex.WR rex.RXB lock cld retq push outsl idiv push sahf sub cmc sub roll pop or sbb (bad) outsb loopne and (bad) sbb push rex mov movabs loop lods cwtl hlt xchg fdivrp (bad) movabs pushq xor (bad) or add jle and jae rex.WRXB xchg jno in rex.WXB mov js (bad) movsb out loop loope retq (bad) rex.WRXB sahf test or rex rex.R fildl negb test fsubr push loopne xor push rorb pushq cltd mov push test imul mov mov popfq pop or in xor adc mov in sbb lret shrb rex.W in sbb push and loopne (bad) (bad) pop mov stc xor (bad) jle in int3 xlat lret sub cmpb loopne movabs mov pop and cmpsl loopne rex.RX rex.WRB and fwait (bad) cltd loopne (bad) jl add loop sub fsubl mov icebp icebp (bad) loopne (bad) icebp mov or cltd xchg sub and je incl xor ja lret (bad) xor test movabs rolb or movsl or adc cmc rex.WRXB (bad) jle mov insl cld push push callq pop lret ja movsl or int rex (bad) xor fs sbb mov sub lods and pop sarl sahf fsubrs int3 int3 fdivl cltd loopne cmp loop sar fiadd (bad) test out popfq (bad) cwtl jb mov je cmp cmpsl cli (bad) pop jnp insl sub cmc cmpsb fsubl jmpq jg or jrcxz cmp add mov js or jge (bad) (bad) fcomi (bad) lret cmp rex.WRB imul (bad) adcb ja push leaveq xchg fmull xchg cli nop data16 iret loopne movsl rex.WRB push (bad) sti and cmp (bad) cmp loopne sti out es push decb mov rex.WRXB loopne push or (bad) leaveq sbb (bad) xchg add pushq adc and pushq lods fiadd push sahf cmpb sbb loopne mov add shrb (bad) and cmpsb rol movslq mov movsl cltd sbb add pop xor mov mov iret loopne rex.RB cmp loopne rex.W mov sub jbe rex.B insb cmp cli mov cmpsl insl pop xor (bad) stos loopne retq (bad) rex.RXB (bad) repnz (bad) cli clc lock (bad) jb pop fmuls lahf sbb sbb (bad) mov sub (bad) fidivl (bad) mov fstps add push out or jl adc jmpq lock cld retq mov fwait mov fsubr sarl lods (bad) mov imul loopne mov adcl clc in lods loopne (bad) cmp rex.WRX fsub rex.B cli xor jl clc cld xchg sahf mov rex jbe jp xchg sti xchg (bad) (bad) in mov out std in mov cmp loopne (bad) push es (bad) xchg cld (bad) cmc (bad) and cmp (bad) fsubr push icebp outsb (bad) sbb ja movabs je pushfq xchg mov je pop jle jl jle mov xorl iret pop rex.RXB (bad) (bad) mov adc and in adc pop out (bad) mov insb cmp rex.WRB mov push cmc jge gs sbb add push jge lahf out (bad) mov loop or jrcxz lahf pushq rclb add sub hlt sbb insb or rex.WXB je (bad) cmc cmp xchg andb pop cmpsb mov rorb or xchg pushq push or (bad) (bad) mov fidivr mov jb xor jb mov js out xor sahf testb loop js pushq (bad) fcomp mov sub out or fldenv cmp icebp jle and loope (bad) jno pop sarb cltd xchg sbb pop lock mov sbb gs ds fdivs je mov or and movabs in icebp movsl xor insl sbb adc (bad) push sarb xchg rex rex.WRXB pushfq or (bad) jo ror (bad) (bad) cmp jmp mov xor mov scas shrl loope rex.B (bad) and pop xor rex.X mov retq (bad) xor cmp movabs sub pop add sub data16 jge adc adc or mov (bad) and (bad) (bad) je cmp jg test (bad) add and nop (bad) mov (bad) jbe add rex.WX and fisubrl sbb or mov (bad) repnz rex.RXB repnz js int3 adc sbb mov sub jge cld xchg cmc out sti (bad) enterq adc ja callq (bad) in pop cmp push fcmovb enterw (bad) mov (bad) rex.WRXB pop (bad) (bad) and movabs pop fwait es jrcxz xorb (bad) movsl add lret stc (bad) jle sub mov mov es test rorb rex.WRX in (bad) jmp insl add pop xor callq (bad) and (bad) xchg and jrcxz adc ja (bad) sub (bad) (bad) in (bad) js enterq and lret (bad) loope (bad) rex.WR jmp gs jns (bad) jg out mov cmpsl and movsb (bad) jp imul xchg (bad) jle pushq (bad) je (bad) mov test out rex.WB pop xor mov insl mov (bad) (bad) lods rcrl push xchg (bad) (bad) (bad) jo rex.WB xor jl cmp push xchg (bad) mov incl jne movabs add jl and xchg mov add sub pop jo lods (bad) and cmp retq (bad) push in loope and subl sbb rex.WRX fwait xor jl (bad) rex.RX adc std mov in jmp sbb clc (bad) in cmpsb or pushq xor push out lock (bad) mov (bad) fsubs sti jg xchg cmpsb cwtl rex.WRXB or and (bad) fdivl (bad) sbb pop and jle cld (bad) add xor cli or (bad) xchg shlb cmp mov fwait (bad) es test sti cltd push vpaddsb (bad) xlat insl cmp xor (bad) jo roll (bad) add sbb mov xchg pushq (bad) xchg rex.R jg mov nop popfq retq shrb sahf data16 shrl lock and sub lret cmp in gs adc fcmovu popfq sbb repnz fucomp rex.RXB sub jbe (bad) sbb xor rex.WR rex.RX test fcomip (bad) lret fcoms rex.WRB rex.WXB rex.RB cmp sbb retq adc clc xor (bad) movabs in or in push mov xor out es (bad) xor jl leaveq xchg je clc pushq outsl mov rex.RX or sbb scas (bad) lret rex.WRX insl addr32 rex.W lret loopne adc or add rol cmc pushq mov mov push mov (bad) (bad) push mov repnz roll add xchg mov (bad) and push sub rex.XB movabs scas jrcxz jmpq rex.WXB jae movabs rolb mov loopne cmpsb (bad) fs mov mov or repnz loopne rorb sub movabs push pop incl mov or jmpq cmp (bad) jrcxz xchg cmp stc push sbb rex.W mov sbb loopne callq (bad) add out and sahf xchg xchg outsb mov mov jl sub pop cmp cmc (bad) (bad) (bad) loopne fstl and jmpq lods loopne hlt out sbb cld pop stc cmp rex.WB adc rex.WRB test loopne icebp sbb jo (bad) or sbb imul movabs jo lock pop pushfq loopne mov and insb loopne stc (bad) mov loopne shrb ss sahf mov (bad) jmpq jae push rex.WRXB push cmp pop rex.WXB (bad) out cmc sub or loopne (bad) and add cmp xchg cmp sbb xlat xchg mov mov out pop rex.WRXB fdiv (bad) (bad) mov mov mov jmp lods fisttpll xor jle xor (bad) jmpq mov pushq adc stos xchg test pop imul jl rex.R loopne rex sub int nop cmp movabs sahf shr loopne rex.WRB push int (bad) mov stos jmpq clc add and jnp push (bad) (bad) cmp loopne fwait (bad) pushq shr (bad) movabs xor retq movabs int xchg iret (bad) fsubr fnstsw xchg mov movabs add iret mov in fs and sbb cmp nop (bad) mov loopne nop stc xchg (bad) sbb fisubl and xchg cmp mov fbld rex.WRX loopne std int sbb add fmull sub test push jnp xor xchg insb add cwtl sti or stc test scas loopne add in pushq decb jrcxz popfq xchg cmp adc out js (bad) push cmp callq cld xor shrb loopne addr32 jrcxz int3 (bad) or xchg rex scas jge jbe out popfq es and (bad) lods mov sbb repnz outsl mov fidiv adc js xor sub rex.XB and (bad) fyl2xp1 sub mov addb loopne rex.X rex.WX rex.WXB xor movabs callq cmc movabs retq xchg lock add shr stos or test (bad) loopne xchg test mov rclb rex.WB ja movsb loopne mov lret jp pushq mov rex.R push movabs fmull loopne add mov sti callq xlat movabs lret cmp (bad) mov rex.WRXB ds mov mov loopne in and outsb movabs sbb xor cmp cmc cltd rex.WB ss xor (bad) insl fmul push pop or rorl in js xor (bad) loopne rex.W lock rex.WRB (bad) fdivrl icebp rex.WRX imul loopne iret out rex.RB roll loopne pop movabs rex.WRXB (bad) hlt sbb scas pop outsl jrcxz jmpq mov (bad) loopne and (bad) push loopne mov jmp loopne xchg sub rex.X cmc lods rex.WXB enterq and adc movabs shl repnz jmp pop and test out movabs or jne jrcxz mov and mov jg push rex (bad) mov loope stc sti loopne rex.R rex.WRB cmp mov pushfq rex.W repz xor xchg hlt sub (bad) loopne (bad) xchg mov incb lods (bad) pop cld movabs xchg mov mov rex.RB mov out mov sub movabs (bad) sbb js iret loopne cmpsl cmp leaveq cmp adc (bad) icebp int lret pmuludq (bad) in fwait in xchg (bad) movsl fsub clc rex.RX (bad) movabs (bad) cli test loope rex.WRX and rex.WXB or hlt mov repz add and stc sbb mov jle mov test loopne mull jb jo xchg (bad) mov adc add shrl cwtl repz loopne xor pushfq (bad) loopne xchg (bad) shll (bad) xor (bad) mov jmpq xchg (bad) rex.RX lods xor (bad) xchg add mov cli in or jne sub jge lock or insl jne cwtl add (bad) (bad) sbb cli sub cmp sahf xlat xchg out push rcr adc loopne mov and lea jp pop mov xor ds adc loopne (bad) rex.WRXB add cmp test rex.WR xor jmpq (bad) jo mov iret xchg mov pop loopne insl mov jg cmp popfq movsb andb and xchg xchg enterq movabs push lcall (bad) push rex.WRXB imul add xchg xchg add in sub stos (bad) jne or lret rex.RXB (bad) jl test sub cltd ds (bad) sbb jrcxz lret ficoml and cwtl enterq fsubrl out add adc loopne (bad) jne movabs imul shlb shlb cmpsl fnsave mov push ja fnop minps shl cmp and sub push (bad) sub (bad) loopne xchg out mov (bad) movabs (bad) loopne push jl in pop push loopne xor pop push popfq sahf mov mov cmc or fstpt (bad) add loopne push lahf roll out scas movabs fisubl (bad) rcl push xchg sbb in add loopne rex.WRB (bad) js addr32 insb (bad) subb out movabs loopne mov clc rex.WXB fs rex.WR loopne (bad) xor loopne add (bad) (bad) pushq rex.WRX push stos cli movslq add or or sub jo rex.WRXB cmp add lods movabs cwtl push lock rex.WB es in movl mov loopne (bad) xor fidivr lods (bad) test sahf lock rex.XB loopne jns mov loopne and movsb idivb callq push ss mov imul shlb sbb sahf jg insl pushfq pop nop push loopne int3 cmp data16 jge sbb ss or sub cmc xor add test and fs loopne scas jb std shr lahf loopne sbb mov loopne sahf imul jmpq imul jmpq cmp xchg cld (bad) cwtl loopne sub mov out in (bad) cmp cmpsb (bad) scas adc sub xchg (bad) sub xor rex.RX movabs scas xchg nop cltd (bad) (bad) mov and rex.RB adc (bad) scas and mov in fstl (bad) adc rex.RX decl fsts iret in push (bad) out push fwait sbb mov lret mov jmpq out or test lahf add cmpsl insl lea imul in adc sub movq loop jmp iret mov pushfq imul (bad) gs mov jnp int3 mov repnz jg mov and push shrb rcrb jnp pop pushq xchg (bad) decl xchg and xor and or loopne cmp or loopne xlat mov loopne leaveq cmp xor xchg subl repnz add test (bad) in loop jmpq (bad) (bad) loopne pop rex.XB out nop push cmp movsb mov adc in addr32 or ja xor repnz add test and jmpq int3 jb rex.R or add jg rex.RX adc or sbb xchg mulb loopne sub movabs push xor movabs cli cmp jb (bad) loop xchg rex.WX add jo cmp sub push cmp (bad) mov hlt jmpq lea pop shl rex.WX loopne retq imul cli (bad) loopne xchg and xchg cwtl mov lahf (bad) mov in mov rex.X cmp (bad) loopne push rex xlat rex.RX (bad) test or movabs add in ss jb loopne mov mov js cmp test push mov push jmpq mov out test and rex.WRXB jmpq fildl jg out cld push mov (bad) mov and in (bad) pushfq (bad) cmp gs leaveq jg pop repz pop add loopne in cmp divl rclb xchg rcrb mov mov xchg add mov (bad) (bad) push (bad) clc (bad) jle gs int3 (bad) outsb pop (bad) and jg pop addr32 pushq sbb data16 cld shrl xchg or pop stos test mov add jo adc push pop mov ds cld and in test jle xor retq xchg mov sub rex.RXB pushq out pop rclb fdiv pushq (bad) insl xchg addr32 mov sbb mov test (bad) jno add (bad) and jmp rex.R fs push sbb jns nop cmp fistpll (bad) stc retq rex.WRX movabs loopne xor pop (bad) mov iret loopne idivb rolb push loopne (bad) xlat lahf out mov mov lret jl or sahf add push pushq loop mov cld xchg push (bad) (bad) (bad) (bad) test movabs (bad) enterq movslq pushfq iret mov retq hlt xlat in movsl loopne shl mov loopne cltd pop movabs pop pushq (bad) loopne es mov loopne ja cmp out sub cltd jno pop movabs lret jge ss xor pop rcl or loopne xchg (bad) jno push insl push loopne test cmp (bad) jns mov ror popfq jmpq retq add rex ss (bad) mov stos sarb xchg add movsb fistl loopne std lods mov (bad) loopne adc psubsw in (bad) decb outsb gs mov clc rex.WXB addr32 sti ss mov mov sbb push loopne lahf cld pop and xlat push rex.WRXB cmc rex.WX loopne in mov xchg out fimull inc add (bad) loopne cmp mov (bad) xchg rex.RX cmp sbb loopne jl and (bad) movl cli pop ja loopne sahf clc (bad) cmpsb xchg rex.WXB nop shl ds movabs stos mov pop jrcxz imul sbb loop and and rex.WRXB movabs (bad) jns fs mov add cli faddl (bad) cmp mov (bad) lods or sub shl (bad) or pop loopne xchg lret (bad) outsb jns or ja mov (bad) (bad) jrcxz icebp push xlat fcmovu xchg loopne mov sbb loopne jmp rex.WRB addr32 fisttp adc imul fnsave jmp callq es xchg (bad) js loopne mov mov loope add sbb (bad) icebp (bad) incb lret movabs jne rex.WRB scas rex.WB xor or (bad) mov or (bad) jb js fucom pop sbb add push rex.W (bad) incb in scas int3 js insl push adc jle cmpsb in jbe in test rex.WRB loopne rcrb (bad) push add es (bad) (bad) pushw (bad) nop (bad) (bad) loopne (bad) sbb jae pop rex.WRX data16 (bad) or in jno,pn (bad) rex.WX mov loopne stos lock (bad) add (bad) iret cmp loopne lods and pop imul fs (bad) stos sbb (bad) sarb in pushq movabs loop jo jg fchs xor sbb (bad) loopne or imul jb mov clc nop or ss adc rorl scas lock and or cmpb loopne ja mov jae insl (bad) jl push add sti retq jmpq jmp rex.WRX callq (bad) xchg add (bad) sar rex.X test icebp pop mov xchg jmpq mov or lahf mov (bad) in mov pop xorl (bad) mov jge xlat shlb std mov (bad) (bad) (bad) sbb ffree in paddsb imul movabs andb fistpl loopne pop mov (bad) fwait rex.WB xor adc fnstsw pop mov enterq cmp rex.W lods cli push movslq out data16 loopne and (bad) fidiv ss (bad) cli xor add jmp adc rcll mov xchg mov mov in out and fdivs pop xchg test outsl jl xorb mov cmp cmp subb push xchg xor (bad) (bad) mov repnz (bad) cmpsl addr32 push or pop xchg jns cmpb rex.WRXB pop and add (bad) sbb test xlat loopne scas mov lret cmp lcall cmp out gs xchg (bad) (bad) shrl sti rex.RB rex.RX (bad) icebp testl sub pop loopne sbb jno shrb lods xchg cmp loopne mov xchg loopne pop ja push cmp (bad) insb add pop movabs enterq jl (bad) mov cmp rex.RB cmp lahf xchg int xchg jnp mov int addr32 imul and fwait mov flds add loopne in (bad) sbb movslq adc or (bad) std xor sti mov xchg in movabs out cwtl in (bad) outsb movsl test add nop and cld mov loopne std mov leaveq imul (bad) test xor (bad) loopne sub sbb jg int3 lahf in fsub rorl lods cmp rex.W fistpl loopne sbb data16 mov loopne (bad) (bad) (bad) fiadd mov mov or sbb fmulp incl jle sbb xlat std scas (bad) in notb mov mov mov cld (bad) cmp cli xchg js,pn pop es (bad) cmpsb xchg in and xor movabs lret stc scas rex repz rex.WX icebp movabs add cld mov cld jle std and fucomp mov pushfq hlt jno mov stos (bad) fbld nop mov and adc push cmp mov sbb jne movabs rex.WX or xchg ss cmp adc mov callq outsl fildll gs add loopne pop add rex.WR xor (bad) rex.WRB xchg xor loop out rex.WXB movabs sub cs rex.RXB addb pushfq xor add (bad) ss sbb loopne lret jno movabs insl xchg gs and imul mov add (bad) loopne rex.WRXB in add std or pushq cmc jp jg push imul and mov xchg repz movabs or mov rex.RB insb movabs sub fdiv fidivrl nop rex.WXB movabs (bad) pop fldl loopne (bad) mov pop rex.WR rex.WB add vmovddup cmp movabs pop andb jrcxz lret retq loopne sub int3 (bad) loopne lods (bad) push addr32 (bad) adc sbb pushq cmpl adc sub or pop or imul mov rex.WRB repz fsub (bad) or imul jle cli loopne iret test push sbb std mov mov mov adc cmp and (bad) rex.WRX outsb loopne xchg imul lods xor je cmc stos rex.WRB subl push sub sahf outsb xchg adc sub (bad) loopne mov push and vmovdqu mov sub xor sar (bad) cmp clc rex.WX sbb loopne (bad) (bad) jns jrcxz (bad) mov cmp (bad) repz rex.X (bad) (bad) fwait rex.WRX fcmovbe fsubs rex.W xchg rcrb cmp add loopne or rex.WXB or cmp scas mov or fldl jbe jge or movslq adc loope fistpl sbb loopne shrb jle (bad) pop hlt loop sbb sub (bad) lret and xor (bad) rcrl push xchg lret fldenv mov or loopne pop push (bad) push (bad) sbb sbb adc loopne icebp (bad) repnz (bad) or test loopne movsl int xor movabs rex.RXB push lock shrl nop push mov sub xorl adc clc shrl mov adc insl push je pop mov add and sub lock jg xchg mov (bad) mov cmc insl jrcxz (bad) rex.WR movabs and outsl (bad) (bad) jrcxz and sbb mov rcr lret js cmpsb sbb cmp fidiv push adc and jg xor (bad) mov scas xchg mov bswap xor jle in rex.WRB rex.RB pushw rex.XB mov rcrb pop mov cmp rex.WRX rex.RX rex.XB ficompl movsl test popfq es js (bad) cli xchg (bad) xor cwtl (bad) jb mov rex.RXB rex.WB jg scas xlat sub xor xchg loopne callq out jo cmc add movabs (bad) rex.WRB mov push int3 pushfq (bad) leaveq jbe sbb nop mov in cmp loope je fcmovnbe xor loopne mov in push or push callq or cmc scas xchg lahf sbb and adc stos xchg sahf (bad) adc decl iret rex.XB mov es (bad) and mov icebp adc pop (bad) fdivrl rex.WX (bad) (bad) out clc push (bad) xchg enterq je rex ds int popq cmp pop pushfq rex.R in movsb fmuls lcall fbstp mov pop loopne sbb cmp cmpsb test loop lret jle movabs sbb loopne loope xchg rex.RX (bad) jbe cmp js rex.R add xchg loop hlt cmp loopne test (bad) roll sbb in std fstl out loopne repz and sub rex.WB xor gs or loopne jle mov (bad) pop cli fisttpl gs sahf jo (bad) (bad) fisttpl in cmc push jns push retq loopne rcrl popfq adc fwait in mov (bad) iret adc cmc and or loop ja in push or mov push in cmp fstl or push subl setle (bad) nop callq mov xor loopne fmuls adc add and in xor (bad) sti sub xchg loopne movslq adcb repnz lahf stos fistpll sbb sbb ss jg outsl mov rex.WRX mov sub imul fwait rex.WXB retq loopne mov add sbb movsb or loopne test std jl rex.WRX retq shlb rol lods lcall sub jmpq add or loopne xchg add callq pop or (bad) push push in xor sbb rex.WRXB (bad) adc rex.XB clc in pop pushq (bad) (bad) (bad) rex.RX add mov xchg rex.R loopne (bad) lea (bad) xor add and cmc enterq gs or xchg addr32 or fiaddl loope (bad) movabs imul (bad) mov xor and rorb jo jp or add stos sbb (bad) cli (bad) test icebp xchg xchg or fxch loopne shufps rex.WX insb pop cwtl pushq adc xchg rex.WX or rex.WRXB mov repnz je (bad) rex.WRB movsl loopne (bad) push test or iret in (bad) je test mov rex.WR test loopne (bad) icebp rex.WRX ss icebp pushq mov jge cmp movsl (bad) hlt stc xor adc loopne leaveq xchg mov sub je stc cltd pop rex.XB (bad) (bad) mov jg xchg mov rex.RX fiaddl movl rex.WB xchg stos mov in cmp imul leaveq mov sub mov cmp movabs std xor jrcxz outsb adc adc xchg (bad) in xchg adc (bad) addr32 adc ds or jmpq mov imul push lret add (bad) (bad) stc (bad) rep jae push push mov adc sbb pop fdivrl pop (bad) xchg xchg xchg (bad) pop mov mov (bad) lahf fcoms pop repz (bad) cmp jae sbb outsl test rex.X sti adc push sub xor mov out cmpsl (bad) callq mov jrcxz lret or rex.RXB xchg cmp jl cmp in cmpsl xor loopne (bad) nop (bad) sub xchg test sbb loopne (bad) je pop xor jne mov adcb and lods mov or stc loopne xchg add cmp pop icebp add callq xchg movabs sub mov jne loopne jb rex.WB and xchg rex.RB in adc repz test sub jle,pn rex.X mov movabs outsl jnp pop or addr32 cmp in jle movabs retq out test (bad) or mov movsl xchg and pop xchg xlat loopne or loopnel,pt sbb xchg (bad) loopne xchg push movsl rex.WXB jne pushq mov mov sbb pop cmpl notl movabs mov jge xchg scas jno add or mov xlat (bad) (bad) scas jl mov mov push rex.RXB xlat incb xor xchg jne and loope sti je ss test rex.RB push jg xor mov (bad) in movabs lret (bad) push insb insl movabs (bad) sbb repnz test repz (bad) mov rex.WB (bad) (bad) rol (bad) jb shrl mov xchg jrcxz jge sbb lret mov mov retq push xchg mov movsl sbb out (bad) (bad) loopne sub mov or loopne mov jb (bad) jbe pop mov ja movslq test cmp js callq and jbe insb fwait (bad) (bad) in out rex.WB push sbb (bad) shl pop adcb std clc xchg fnop fstpt pop xor xor mov sti rex.W jp rex.RXB scas cmpsl push xchg cli (bad) insb jbe lock sti adc sub push test out rex.X mov (bad) mov push cld outsb jl clc rex.WXB pop test in in adc mov hlt xchg repnz xchg pushq xor xor mov pop movsb in add (bad) jl jo fcmovnbe fs jg scas sbb jge sub cmpsl movabs mov jp push xchg nop loopne fmull mov cmpsl sbb pushq sub rex.WRX push xlat (bad) pop rex.X or jge mov and sahf out imul (bad) adc mov es push rex.RX lret stos jg and clc cmp rcr (bad) mov xlat je cmp fldenv mov jp pop (bad) rex.WRB pop out jrcxz rex.XB push outsb and sub (bad) in leaveq adc jne in pushq sub dec mov and cmp loopne repnz sub push push adc (bad) xchg rex.WXB out repz loope (bad) xor push (bad) jle data16 xor push imul sbb and addr32 (bad) xchg lret (bad) (bad) scas adc adc fs loop mov sbb rex.WRX outsb lret movsb xchg mov nop scas lret push or add or or loopne pop repnz ficoml mov mov jl loopne out xchg mov or mov shll fimull cli shrl (bad) xor mov jmpq in loope loopne in mov adc rex.WRX insl or or adc (bad) and rex.WRB rex.XB rex.RXB out test icebp xor add jp (bad) callq sbb movabs stos xchg in sbbb cwtl mov (bad) iret and movsl xor pop fstpt and mov outsb xor (bad) loopne cld (bad) sbb (bad) fsubl cmp jo cmpsl (bad) test lret and jmpq and (bad) rex.R (bad) sub stos or loopne pushfq sbb jne (bad) xchg loopne jl mov loopne mull mov imul in es mov sarb xchg mov out cli movabs or movabs cwtl jo rex.WR gs add sti loopne movsb rorb cmc (bad) cltd sub push rcll loopne cmp pop loopne xor loopne callq (bad) movabs (bad) cld in rex.RX imul xchg or lods int3 (bad) xor insb jg xchg in lret (bad) rex.WR mov popfq (bad) incl pop mov sti test (bad) jo fmul jbe or (bad) rex.WRX addr32 rex.WX mov or decb sbb rex.RB stos (bad) sbb fmuls retq insl fsubl loopne rex.R imul mov (bad) sub lock movabs stos jns mov cs loopne out and movabs sahf stos shrl jne scas fcomi (bad) fistp movabs (bad) mov xlat mov es cwtl bt test or negb mov and rex.WR fs sar rex.WRB fninit (bad) cli stos (bad) fldt add loopne,pt fildl push loop (bad) loopne idivb (bad) xlat mov sub cmpsb ds push loopne mov out in int3 stc loopne out sub icebp not sub cwtl (bad) (bad) leaveq loopne xor and movabs in sub mov (bad) (bad) xor in js (bad) gs negb (bad) rclb adc ss stos rex.X jge movabs outsb adc or out pop xchg push sbb sbb fisttpll movabs xchg pop test rex.RXB fmul adc push gs ja js enterq rex.WR iret callq adc jns loopne jne (bad) mov loopne lock rex.WRXB mov or in (bad) xor loopne fsincos mov incb (bad) cmp imul retq sub loope callq mov add mov (bad) rex.WB push rex.R mov loop out sub cs rex.WRB (bad) jmpq and pushq (bad) fiaddl cmp out (bad) jp sbb loopne (bad) movsl mov loopne mov or popq sar lods mov xor adc (bad) popfq add test loopne (bad) (bad) negb test imul frstor jle add xchg test jno pop in adc jne (bad) pop or (bad) add js mov enterq mov cmp xor loope mov ds shll scas add mov jrcxz outsb mov pop (bad) shrl loopne sbb es movabs cmp mov icebp (bad) add xlat cs loopne jmp or outsb loopne stos leaveq jnp mov sbb xor mov pop stos (bad) mov (bad) loopne rex.RX in mov jle fsubrs loopne mov (bad) jne pop add adc rex.WRB jbe (bad) and fnsave movsb xchg retq or mov xor mov or loopne sbb xlat scas adc loopne cld (bad) rex.XB cmp loope xchg orl fwait push (bad) jp (bad) mov int3 cmpsl mov sbb adc mov test movabs in callq int sub insl scas movabs (bad) xor ficom (bad) pop sub sbb push add (bad) (bad) mov decl lock xchg rex.X rex.W loopne,pn lods outsb (bad) or pop and retq rex.B int cltd roll (bad) cmc rex.X sub loopne cmp pop (bad) jp loopne roll xchg jle mov mov mov cwtl or ja testl enterq (bad) (bad) cli icebp pop pop cmpsb jg add adc sbbl adc xlat mov loopne scas mov (bad) (bad) (bad) (bad) xor fcomp js loop (bad) out pop movabs in rex.X movsb pop mov (bad) neg in callq rex rex.B rex.WRXB pop pushq fmul sarl or mov loopne cmp (bad) pop mov sub rolb sar jb mov push pushq fistl fcomps xchg jo mov sub push or fcomi or push iret xchg loopne xor insl (bad) adc in enterq (bad) repnz push mov movsl jg xchg out (bad) and int3 movslq in mov retq fs lret mov loop fnstsw int sub (bad) nop (bad) test loopne jmpq push loopne,pt xchg sub mov xchg (bad) loopne popfq or xor fcmovne in and mov jo mull adc (bad) mov test mov mov (bad) fs sahf sub adc push inc (bad) xor rex.X loopne cli (bad) mov sub pop sbb pop enterq and and repnz movsb rclb cmc (bad) adc test (bad) add add out addr32 cmp push stc and mov outsl (bad) pushq test insb push cli (bad) pop add cmp mul sub adc (bad) loopne xchg xchg jp rex.WB sbb mov fcmovne jno out in or loopne loop sbb (bad) popfq and testl ljmp cmp cmp cmp rclb std insb rex.X rex.WRXB lret (bad) loopne adc js sub loopne lret rex.WB fsubrl cld push rex.R fsubs push pushq lock add xor jne pop rex.WRX xchg add fistl loopne mov rex.WRB xor mov or fldl (bad) loopne imul push (bad) cwtl vmovq test jae cli rex.RXB out pushq (bad) loopne and cmp cli pop outsl mov (bad) (bad) xor pushq icebp jrcxz clc mov jb addr32 mov xorb js,pt test test ss (bad) mov jmpq or sub fwait (bad) rorl fldenv push mov js cmp loopne jne rex.W imul or xor (bad) cmp fwait std loop movabs (bad) pop rex.W loopne xchg divl cmp movsb jrcxz push stos add xchg xchg mov pop (bad) (bad) xchg (bad) loop outsl loope adc (bad) mov (bad) in (bad) rex.WR leaveq loopne push cmp fwait (bad) imul and sbb out sbb rex.RB pushq leaveq movabs rex.XB sarl js loopne int3 rex.W xor int outsb (bad) (bad) repnz mov (bad) push lret (bad) add in rex.WRX add jo loopne (bad) xchg out sub and movabs test out movsl mov jg pushfq and sti rex.XB movslq mov (bad) hlt movsl (bad) xchg push loopne add (bad) rex.XB rex.WX (bad) sub mov or cwtl xor in test sub fildl idiv movabs or sub add out loop push ds int or pushq push jg scas rex.RX adc clc cmc fldz or mov mov cwtl in pop jns callq out cmpsl adc add xor mov out push or scas xor jae add (bad) ja insl movabs sbb in push rex.W loopne movabs decb (bad) mov rcrb movsl (bad) int3 movabs mov loopne stos (bad) imul (bad) (bad) insb or xor (bad) push cmp out or imul xchg icebp jl (bad) sub out mov loopne cs loope (bad) push adc mov (bad) in mov scas retq popfq xor nop je imul mov scas adc jo (bad) shlb xor sbb cmp xchg icebp rex.R and sar movabs (bad) jle cmp (bad) insb rex.WRB leaveq loopne rex.WR xchg loop imul loopne add popfq loopne (bad) push sub xor or pop mov in fadds xor stos jae cmpl (bad) es cli ja (bad) (bad) nop mov (bad) mov retq xlat rex.B xor xorl fdivrs and (bad) (bad) jns sti loopne mov or loopne mov mov xorl rex.WR (bad) xchg or callq loopne jp mov sbb (bad) retq push insb (bad) addr32 repz enterq flds shl callq jge and pop (bad) push retq ja rex.WRXB push cmpsb (bad) add sub sub pushfq fdivrp cltd (bad) add push iret mov retq (bad) (bad) cld jo rex mov (bad) push mov fwait adc jle cmpsl mov pop hlt xor cmp (bad) int3 lods jo cltd cmp callq in leaveq mov mov lea fstpl imul xor movsb shl adc js (bad) cmp mov mov clc push pop pop stc sub push and jmpq popfq and cs mov mov and lret push pop callq outsl lock lahf or mov xchg shlb xor ja cltd stc stos sbb outsb or cmp jo loop rex.RB loopne xor add sbb dec push jne out sahf gs mov sbb movsl test or movabs imul cmpl lret retq fwait cmp or mul cltd or (bad) (bad) mov mov jrcxz (bad) loopne (bad) mov test ja sbb rex.RX mov leaveq rcl and pushfq sbb in (bad) (bad) and (bad) loopne pop push sub loopne (bad) jno jns rex.B rex.WRXB (bad) (bad) xor pop lcall int3 movabs in xor enterq pushq jp incb loopne pushfq (bad) pop (bad) notl movslq callq or fsub (bad) add lods int3 (bad) xchg loopne retq push jae mov cli (bad) rex.WX loopne movabs xchg cmpsl out xor outsl sbb nop mov mov repz in mov pop data16 jmpq loopne push adc icebp pushq mov scas add (bad) and sbb (bad) loopne callq or loopne adc xchg lahf mov (bad) loopne lock or jbe test loope stc pop movabs mov movsb push shll rex.WX xchg mov xlat cmc andb mov jg loopne xor lods (bad) loopne out rex.RB (bad) add mov lock mov xchg mov mov xchg (bad) (bad) and enterq (bad) in jl nop rex loopne,pt cmp rex.RX add icebp rol sbb cmp sbb loopne (bad) jne (bad) mov sbb xor (bad) pop add lods add int cltd loopne cld rex.WRX mov div (bad) jns (bad) loopne mov sub rex.WRX sbb mov (bad) cmpb adc fiaddl loopne pop scas (bad) sti sub jrcxz cltd rex.RX test mov scas icebp ds clc (bad) jrcxz rex.WXB in adc sbb (bad) (bad) data16 mov pop sub or sub fnstenv stos mov add rex.RX rex.WB fstenv lock sub adc cmp in out (bad) lret (bad) sbb ss repz (bad) adc push iret and (bad) mov (bad) rex rcrb (bad) enterq mov add (bad) cmp icebp pushq mov and (bad) adc (bad) xchg outsb xchg (bad) cli fidivl (bad) mov movabs (bad) (bad) xor je xor jne es sahf rex.R push xchg sarb pop fidiv rex.WB jle rex.RX jge jmp cmpsb (bad) push pushq (bad) jns rex.WX xchg (bad) icebp or cmpb add sub sahf xchg mul sbb add out or xchg (bad) loopne and outsl mov loopne rex.WXB in xchg (bad) fs push je mov movabs icebp leaveq cmc es rex.WRB (bad) cs sub rex.WRX repz rex.WR (bad) pop adc lock fwait (bad) xchg loopne xchg std jmp ss outsb ds gs jae (bad) fwait jp pushfq (bad) xchg sub rex.X and rex.W and sbbl rex.B loopne pop jbe xchg pminsw fnstsw (bad) adc adc add sub repnz (bad) jmpq movabs (bad) pop push xchg mov je pop rex.X test sub mov sbb rclb rorl and jl and and cmp movabs leaveq mov in sbb rex.WR (bad) (bad) sbb out loopne out add rex.RX rex jmpq pushq movsb and rex.B fwait sbb movsl and ss rex.WRXB icebp clc (bad) nop sti insb pop jno rex in orl in nop mov loopne fstpt push test in clc adc fstps in xor loopne out xchg pop add rex cltd movabs jo jmp in adc (bad) retq test retq out jo add (bad) and iret loopne stc jnp popfq jns callq mov int jbe rex.WRXB lea clc mov (bad) lods xchg (bad) or fdivs out movabs out cmp ds rex.X mov (bad) loopne retq (bad) (bad) testl mov jle and test loopne xchg xchg or cmp and std loope sbb rcll mov fiaddl fmull or loopne out flds add lods or loopne mov mov jmp stos xchg mov (bad) je lret cld rex.B jmpq add jne in clc ja cli loopne int3 mov repnz sti icebp cmpl (bad) adc push pushfq int ds (bad) jg lret cmp cmpsl and xchg rex.WRB pop hlt ljmp in sub (bad) loopne (bad) cmpsl enterq push loop cwtl or mov mov loopne fistpll adc movb mov loopne cs rex.WR mov xchg outsb ja test lea loopne imul cmp lods popfq jnp leaveq (bad) cmpsl (bad) ds fisttpl loopne mov out movsl (bad) jmpq rex and adc loopne jge jp addr32 out or push jmp icebp leaveq (bad) mov in xchg pop xchg rex.XB and (bad) loopne hlt movabs xor loopne mov jrcxz sbb movsl loopne sar insb pop rex.B fwait movabs (bad) imul sbb scas rex.X loopne rex.WXB hlt outsb popfq mul (bad) imul loopne xchg sub dec xchg (bad) (bad) scas in leaveq out mov stos sbb sub in clc (bad) sbb sbb add std (bad) cmp sub xor movsb xor vshufps movb callq jns sbb js and mov sbb jge jle add pushq cld pop rex cmc cmp fbstp fdivr cwtl lea xchg (bad) mov (bad) out cmp scas repnz add push push (bad) mov repnz sbb adc (bad) (bad) ffree and mov outsl clc int mov add adc sbb (bad) (bad) rex.WRB stc fldenv test (bad) or jg rex.WRXB ss xchg xlat sbb rcr callq jrcxz sub sub or (bad) jmp sti pushfq adc mov rex.RX movabs mov xchg xor retq mov movsb lret ficomp (bad) es mov outsb pop jmpq ds cmp (bad) (bad) icebp ja es es outsl cmpsb (bad) rex.RX out sub cmc int3 cmp gs pop mov xor rex.WRXB int lods (bad) (bad) sub add cmpsl jge lea lahf lock (bad) xchg sub and xchg mov rex.WRXB cmpsl test (bad) pop popfq fisttpll in icebp pushq mov sub fiaddl enterq fcmovnu adc insl mov jg mov mov mov je imulb test mov in gs sbb rex.WRB xchg cwtl in hlt (bad) mov adc movabs pop sbb cld jl adc imul in add lea adc loopne out jmpq jne and test xor (bad) cmp cmpsb mov (bad) fcmovbe xchg xchg rex.XB (bad) cmp xchg insl push nop mov jno or cld (bad) mov and mov sbb loopne cmpb cld xor push (bad) cmp loopne mov rex.WXB sbb jle shl loop insb adc mov scas pop mov loopne outsl push add (bad) xor (bad) adc leaveq jl rex.RXB and scas (bad) or jp sub and stos lcall imulb fwait sub enterq loope nop cmp cmp mov jb jno jbe sbb xor xchg or pop (bad) out hlt (bad) callq rex.B xchg (bad) std pushq mov (bad) sbb (bad) or and cmp xor mov loopne mov or in xorl fistl movabs mov adc xchg stos rex.RX (bad) cmp adc loopne rex.WR xor mov loopne out (bad) loope adc (bad) xor push loopne je retq (bad) pop mov in rcr cwtl loopne movabs loopne mov test jge (bad) repnz fistl movabs fwait loopne cs lods push jns movb xlat pushfq (bad) adc divb jle push xor xorb mov pop cmp (bad) xchg jb (bad) orb sahf fdivl jmpq rex.XB and cli test (bad) lea jp jge movslq rex.XB rex.R xchg cmp jrcxz rex.X and lret loopne pmaxsw pop add leaveq jmp movsl xchg retq loopne (bad) sbb adc (bad) adc sarb (bad) (bad) push stos decl push sub movabs (bad) imul (bad) or mov pop sahf sti mov addr32 loopne scas fcoms (bad) push and mulb rex.WRX mov mov jg jne mov out cli icebp sahf fucomip shlb (bad) and fwait (bad) mov ja sar pushq decb and cs fwait (bad) xor (bad) rex.RX rex.RB (bad) sub in in jae pop mov out movslq ror (bad) movb rcrl in stc mov (bad) adc (bad) (bad) (bad) out cmp movsl jg nop or icebp imul sbb push adc loopne leaveq (bad) xor cmp loopne xor out and (bad) (bad) in push sti rex.X loopne rex.W fcmovne es addr32 rex.WRB test loopne push insb loope or lret loopne push mov jne xchg rcrb imul mov cltd add rex.WR sub (bad) jmpq (bad) sbb hlt mov movsl mov loopne (bad) cmpsl cmp cmp (bad) pushq (bad) mov cmpsl int3 mov push pop lods (bad) jmpq add adc or std jle loop loopne rex.WXB loopne out ss loopne cmc pop pushq in sti hlt cli or xchg jg or movabs cmp retq stc insl outsb in pushq add cmpsl sbb loopne (bad) mov (bad) loopne or loopne pop add fadd jge out rex.B hlt and addr32 lock popfq in cmp int3 (bad) pop cli rol fildl (bad) or sbb loopne sub mov jo leaveq loopne js sub loopne xchg mov or jp rex.RXB rex.WR fs jl cltd (bad) mov pushq mov add callq adc lock adc retq gs clc xchg movabs (bad) retq (bad) (bad) iret rex.XB jb and or jl enterq pop std leaveq rex.WRX push movsl mov js outsb mov (bad) (bad) mov cmp jg jge scas out movsl and (bad) (bad) jle jns (bad) jbe sbb retq (bad) and scas mov push (bad) lock insb (bad) xchg mov (bad) pushq sahf (bad) rex.RB pop jae rex.X fs (bad) lea rex.W repnz sbb retq lret and (bad) mov xchg rex.WXB clc mov rex.W sub sbb pop mov rex.R cmp (bad) xchg outsb adc xor push jns test icebp imul repz mov insl push mov rex.X rex.WB test and sbb fcoms repnz or pop xor imul xchg in (bad) (bad) loopne fsubs jge xchg int (bad) rex xchg sti mov sub rex.WRX jnp pop fsubs xor je mov out pushfq out mov ja lock rex.WR mov in callq retq loopne (bad) iret lret sahf and rcl (bad) xor in (bad) jmpq (bad) xchg loopne outsb jrcxz divl mov adc mov fcomps cs repz (bad) lods or scas (bad) movsb out sbb sbbl negl callq fcomps hlt mov (bad) xchg xchg adc fs rex.W rex.RXB cmp stos movabs add pushfq (bad) (bad) data16 (bad) imul xchg mov sbb (bad) xor xlat movslq rex.WX fidivl and mov loopl hlt jle rolb (bad) mov sahf iret divb xchg (bad) (bad) or out pop cmpsb movsl rex.WX xor or mov sbb sub rex.XB pop mov adcl (bad) cltd in movsb or cld mov in sbb (bad) loop and lret shl adc and and (bad) and lods jne xlat jp rcrl pop mov iret pop jge stos mov or rex.WB hlt cwtl push stc cwtl mov loope cmp (bad) jo xor out sub mov in cmp scas (bad) mov repz pushq jae and clc test (bad) jrcxz jbe rolb pop mov lret (bad) jp (bad) callq decl movsb (bad) mov icebp in movslq out rex.WRX rex.RB or xor lods out std jrcxz xchg jg or push jno cmp push and test sahf (bad) in mov and rex mov mov movabs jge mov jae sub ds es sub insl addr32 (bad) in fdivr and mov xor xchg outsl lret outsb lret adc loope xchg sbb cmp ficom (bad) int popfq xchg shrb scas lret out sub insl jb je jne fwait loopne xor and rex.WRX cli mov fs sub adcl (bad) addr32 lods test jge rclb jle movsl test (bad) (bad) and mov cmpsb hlt jg je and stos push xchg rex.XB or adc in movabs jle rex.WX push fdivs pop pop addr32 jle movsb sub rex.WB loope xor (bad) jle rex.WXB es in cmp (bad) lret jbe push mov fdivrl cwtl xchg adc orl xchg xchg out out pop and mov loopne movabs movabs (bad) xor xchg rex.WB xor pop pop addb sbb loopne mov jns shl movsl (bad) enterw rex.WRB test int or xchg mov add addb mov or sarb sub outsb movabs shrl loopne scas pop adc in sub (bad) lahf pop test xchg mov xlat sub pop cld (bad) (bad) mov push fldt nop rex.WRB lods addr32 xchg cmc popfq jb clc pushq movabs movabs xchg outsb insl jl or add xlat sub (bad) cmp sarb add loopne jnp sub out movsb sbb loopne (bad) mov (bad) add outsb loopne sbb and paddusw cmpsb mov jmpq sbb hlt and mov cmp movabs jmp push and imulb insb rex.WR and or jmpq pop mov mov (bad) movsl fdivr or (bad) repz jp rex xor mov (bad) (bad) rex.WRX str (bad) cltd movslq test cmp fptan (bad) fs pushfq xchg push or (bad) jl out (bad) sti add ds stos jb test loopne (bad) repnz cmp and sub (bad) paddb ljmp sub xor pop std decl mov (bad) movabs push imul fsub ja jnp rex.W jb (bad) mov stos mov add sub mov xor pushq (bad) (bad) rex.RXB (bad) push lock cltd incl (bad) loopne pop xor add (bad) loopne in jl sub jne mov adc or loopne or je gs and sbb jbe movabs lods jmpq (bad) lock xchg xor or jl add nop pop xchg test cmc mov in addl and callq rex.W or shr test callq icebp movslq clc mov push jno test xchg hlt or push jmp lret clc mov movsb jmpq xor in icebp cmp test (bad) std add (bad) loopne sbb (bad) shll push xchg (bad) loopne leaveq (bad) jae orps rex.WRX xchg in imul jmpq testb xchg test pop jns (bad) cmc jb movabs sti loopne adc fnsave fcomps movsb loop sti adc loopne test imul imul fimull jle mov or outsb nop push xor xor ffreep in mov loopne mov leaveq smsw adc enterq adc rex.WX loopne loope out mov test xor lods pop sbb shr xchg imul jge loopne pop outsl retq adc cmpsb (bad) fsub pop rex.RB xchg xchg leaveq out cmp pop rex.WRX shrl push rex push lock jmpq (bad) xchg mov adc lret adc rex.XB pop in (bad) movsl in cltd xor lea movabs rex.X gs rex.WB ds icebp mov sbb xor fisub and insl xor incb rex.XB loopne (bad) iret imul pop loopne retq xchg fiadd rex.WB in mov loopne vpsadbw outsl xchg loopne sub push in or or rex.WRXB add pop xchg icebp repz jge jnp ficomp loopne rex.WRXB fiadd decl cmp add adcb lahf (bad) jp push insb or xlat stos (bad) xor jl jo sub nop (bad) movabs adc loopne (bad) or sub fildll (bad) xor or stos pop (bad) xor (bad) pop loopne add cmp loopne int3 addr32 in movsb (bad) rex.XB (bad) (bad) leaveq (bad) idivl popfq jnp fidiv outsb movabs and sub adc cmp push out add pop loopne rcll sar (bad) or xlat rex.WRX loopne fcomip sahf adc repnz orb or mov iret cwtl (bad) loopne retq (bad) ds (bad) loopne popfq stos (bad) xor xchg retq rex.WRX int3 jmpq in xor gs insl loopne (bad) mov cmp cmpsb or out (bad) je xor xchg loopne add loopne scas xchg shr loope xchg retq loopne push xor je pop movsl (bad) repz test (bad) fs and or repnz jge and or stos xchg (bad) repnz loope (bad) movabs sbb xor mov in test (bad) xchg loopne adc and xor jmpq push shlb and add (bad) jne loopne jb lock adcb cli cs and jl in jo out gs sub imul and js rex.RX addr32 (bad) adc sub mulb shl (bad) xor cmp rcrb or cli shr rex.WRXB (bad) or test xchg mov (bad) pop cmp jge sbb retq or sub or or (bad) (bad) (bad) scas (bad) add out add in and (bad) fdivrl loopne adc cli sarl sub rex.X nop mov jmp outsl (bad) sbb loopne callq in (bad) cmpsl sub scas and (bad) cmp rex.WRXB out jno sub adc pop (bad) loopne adc (bad) mov mov in cmp mov lahf sarb movsl adc icebp loopne push loope shrl jo popfq (bad) (bad) rex.WRXB (bad) and (bad) int3 (bad) (bad) mov imul enterq leaveq or cmpsl (bad) (bad) negl sbb adc movslq (bad) (bad) addr32 adc rex.WRB movsl int addb (bad) loopne fs rex.XB gs (bad) cmp or add pop retq (bad) (bad) (bad) pushq pop enterq jno movabs (bad) mov jge fstpl rex.WRX loopne mov push sar outsl lock movsl (bad) add rorl jl repnz movabs (bad) jo pop adc jb pushfq pushq pushfq (bad) leaveq sti lods mov rorb rex.X jl (bad) insb repnz stos ja jno jge loopne lret rex.WRX (bad) rorb enterq loopne xchg pop xchg test (bad) cmpsb lret mov retq loopne jle test (bad) lcall mov (bad) pop cmp mov ss mov adc movabs (bad) mov rex.XB push (bad) xchg insb mov (bad) mov lret lods lea xchg and (bad) popq loop loopne scas mov push mov out push mov or icebp cltd retq jmp test shrl pop adc push add add and nop jmp cmp lods pop loopne or jns (bad) sub xchg ja movsl mov or xor (bad) decb xchg mov loopne sbb jnp pop stc (bad) rex.WRXB adc push clc pop jae cmpsl (bad) (bad) loopne (bad) data16 (bad) stos (bad) lock xor jbe mov idiv sar in jns test push (bad) out scas (bad) test rex.WRXB mov jmpq jle mov push lods (bad) addr32 clc sarb or outsl or cwtl lretq xorps pushq pop rex.WX jrcxz (bad) xlat (bad) cmp outsl loopne test lock jbe xor jns adc loopne out (bad) (bad) pushq rex.RXB sub jrcxz cmp movabs push sub and rex.WR cld sbb iret rex.WX rex.XB negl cli xor jg (bad) cmp jmpq (bad) rcl movsl movsb loopne jl rcll andb mov mov cmp pushfq push imul jp in (bad) mov or xorb xor cmp rex.RX sarl xchg movslq lock cs mov std mov and adc mulb in sub push ja loopne mov rex.B (bad) js cmp movabs outsb add sub movabs imul movslq cwtl jle jb insb lahf in and pop test mov int sbb jo lret stc imul (bad) movabs cmp add xchg pop mov adcl js sub (bad) in adc jmpq data16 sbb adc jrcxz (bad) int3 andl loopne movsb movabs fs pop sti xchg add ss fisubl rcr sub mov jge icebp push pop pop shll rex.X pop pushq jle fcmovu jb loopne or loopne jne lret lods std mov sub cmp mov loopne mov imul cs mov loopne jl mov cld addr32 and subl out lods clc (bad) rex.WRX mov icebp loopne nop mov xchg add mov (bad) sub mov xorl jg ljmp mov or adc xor loopne sbb (bad) mov rex.WRX rex.RXB xor push sub loopne (bad) orb and fst fwait adc xchg rex.XB cmp rex.WB mov leaveq rcrb add mov lret je xlat xor repz and pushq jne or (bad) (bad) sbb push xor (bad) shl push retq pushq cmc mov lock sub rolb xchg xchg int cmpsb hlt (bad) addb add (bad) (bad) (bad) sti movabs shrl (bad) fmul movabs cmpsb leaveq push sub (bad) or push rex.WB (bad) jo in movsl clc loopne sbb test shr loop (bad) xchg xor loopne hlt lock jmpq test fucom mul (bad) adcb sbb addl and jo (bad) lock clc jns shl mov (bad) xlat movsl add fwait loopne adc jrcxz cmp jmpq (bad) and xor xor jmpq popfq rex.WRB cmp (bad) lock retq lods imul loopne mov cld rcr lods or (bad) int (bad) pop rex.XB (bad) sub (bad) xlat rex.W add data16 jp stc (bad) js retq enterq (bad) int3 scas (bad) and jb rex.WR sbb add pop rex.W (bad) (bad) test repz cmc out rolb cmc cmp rcrl xchg cmc xchg gs mov sbb xor mov jnp pop sbb movslq push leaveq int3 (bad) rex.X int (bad) (bad) pushq sub add ss mov es fcomps out movslq pushq cmp rcrb pushq (bad) pop rex.X rex.WXB es addr32 sub callq loopne rex.X jmpq xchg clc (bad) mov (bad) fnstsw test (bad) and (bad) (bad) (bad) fcomi (bad) rex.XB pop movsl mov push adc mov (bad) rex.WX es rolb fildll (bad) or lret cmp sub hlt loopne je add rex.WRX sub (bad) jmpq mov sbb xchg std fwait push loopne mov pop or (bad) jne rex.WRXB clc (bad) mov (bad) movsl loopne loop imul movabs rol in and int3 sub (bad) lret in sti adc loopne and loopne mov (bad) xor ds loopne jno or add scas js jmpq (bad) (bad) and out pop jrcxz movabs loopne movabs xchg loop loopne jp mov in or sbb mov outsl adc (bad) and loopne out notl int3 fcmovne or loopne cli adc out (bad) cmp sbb (bad) mov mov callq stos stc mov sti fnstcw pop pushq rex.W mov sub adcl (bad) icebp int3 rex.W retq jae and (bad) lret (bad) (bad) add fsts (bad) sub (bad) loopne retq imul hlt in xlat loopne (bad) retq push rex.RB loopne jl stos lret (bad) outsb insl xchg (bad) dec fsubs sub loopne xchg scas int3 xchg sub fstl movabs sub rex.RX mov shrl xor flds out pop xor loopne sahf cmc and jb out jno adc xchg mov (bad) loopne ficoml sahf (bad) je cmp stos repnz mov cmpsl pop jns test loopne movslq mov xchg loopne xor xchg fs cmpsl loopne lret or stos (bad) in adc test (bad) rex.WRX (bad) cli insb ss mov fsubl loop negl cmc cmp (bad) mov push jrcxz fbld rex.XB (bad) cltd gs (bad) xor rorl add int (bad) adc inc sarb addr32 mov (bad) int mov add loopne mov fwait xor adc mov enterq rorl lret pushfq mov sbb loopne movabs (bad) cmp add push (bad) lock or pop fsubr rcll loopne (bad) sarb and leaveq or (bad) subl xorb jl loopne out retq (bad) pop loopne loope movabs (bad) (bad) mov jo mov (bad) retq scas loopne mov test clc xchg (bad) jp xor lock js add mov push and cmc mov in cmp (bad) xor push repnz movslq sti rex.R pop adc (bad) loopne lods xor test loopne enterq or rex mov cmp loopne vpmaxub fcmove loop cmp ss mov (bad) nop cmp out mov loopne mov cwtl rolb (bad) icebp add adc int lods jge (bad) insb sbb mov je in repnz in rex.WRB icebp es (bad) xchg (bad) fdivrs and movslq stos add pushq pop jo fimul cmp mov adc cli (bad) (bad) clc loopne or fcoms je movabs adcl adc xchg bswap xchg stos or add int3 (bad) je xchg xor cmp jmpq xor movabs int lret push jne mov adc retq iret (bad) loopne int pop sub loopne in ds callq stc insl adc xor push loopne sub (bad) iret loop mov add adc xchg mov (bad) loopne xchg fisttp jmpq cli fnstsw imul in test pop or jge rex.RB movabs nop loopne jno ficompl sbb lret incb scas test test (bad) jp fnstenv cmpsb cmpl rex.XB loopne insb cmpsl shlb (bad) icebp rex.RXB out sub in sbb (bad) cmp ja or jrcxz cmp sti xchg movsl xchg (bad) sbb jle sbb cmpsb movsb (bad) sbb push (bad) cmp and xchg jle (bad) or fmul mov (bad) loopne mov not in (bad) push cmpsl cs xlat test xchg data16 or loop lock clc loopne xchg cmc push rex.RB jg test and repz movslq sub push xor cmp mov rex xor xor out (bad) mov (bad) cmpsl jmp (bad) int3 cmp xor cmp pushq xor sub loope test adc retq leaveq incb fs adc push pop xor cli rex.WRX (bad) iret mov mov mov mov (bad) in cmpsb addl rex.WRX loopne ficom loope xor rex.R rex.W cmp enterq sub nop cltd insl (bad) and add adc pop imul fdivs fsubrs loopne movsb xchg iret shll (bad) or lods (bad) lret loopne outsb adc rex.RB pop (bad) sbb loopne push pop rex.R popq mov jmpq lods fildl sub mov (bad) sbb fimull lods add xchg mov push rorb sbb int3 sbb jne adc lods retq jo (bad) pop xor in imul icebp adc rex.WRXB in loopne mov orb hlt (bad) testb (bad) jmpq out movabs repnz mov in or nop fildll rex es jno cmp sbb sbb adcb (bad) loopne mov xchg jmpq add fisubr loopne (bad) or js adc repz and test callq (bad) (bad) (bad) xor pop rex.RB loopne (bad) sbb pop sbb mov (bad) jo cmp (bad) loopne pop cmpsb mov (bad) push leaveq movslq cwtl (bad) jl cmpxchg adc shlb xchg cmpsb stc (bad) rex.WXB mov sarl (bad) xor outsl xchg sbb jmpq mov or rex.W xchg fist movsl js xchg rcl out lock jl (bad) or push (bad) ljmp and lock cmp sub mov ds sbb (bad) pop ds scas sbb (bad) sbb (bad) mov js (bad) retq jg mov movabs (bad) (bad) xchg (bad) mov test cltd cmc leaveq sbb clc (bad) icebp (bad) cli retq mov (bad) out lea pop incb outsb push adc je lret retq hlt (bad) cmp push mov ss mov movabs sub mov and scas movabs push sbb int icebp in jle (bad) xor xchg push sbb repnz callq loopne adc fs movsl adc cwtl cmp (bad) in push jrcxz out (bad) jmpq sub jmpq outsb addr32 iret retq push xlat cltd cmc loop and leaveq xchg jle notb imul cmp jg adc and lahf mov shlb ss rex.WRB rex.WRX loopne sbb scas lods (bad) retq movslq xlat mov xor cli int movabs sub jmpq icebp xor mov jge setnp cmp mov or xchg sbb (bad) mov jmp insb loopne xchg orb movabs (bad) sub pop loope sbb jge movabs jmpq ss movabs mov jge ljmp cltd mov xor rex.RB (bad) xchg loopne popfq and pop or (bad) lock in jb loopne sti out xor cwtl out int rex.R sarb loopne xor insb sbb loopne rex.RXB rex.WRX ror mov (bad) in rex.RB xor add loopne mov cmp in imul mov (bad) jl push pop mov (bad) adc rex.WXB and data16 lret sub pop cmpsb movabs sbb jp sbb pop (bad) pushq xchg int3 retq (bad) pushq movabs imul pop movabs sbb add std and sbb clc jnp fs (bad) and sub cmp jmpq mov lahf rex.WB adc movabs mov int3 xchg xor rex and stos rex.WX sub (bad) (bad) mov cwtl enterq adc or (bad) in rex.WR rex.WR (bad) sahf xchg jrcxz (bad) mov (bad) xchg in lret mov (bad) xchg xchg add rex.WRB mov xor add (bad) (bad) loope stos (bad) cmovno rex.XB add (bad) (bad) shll retq rex.X sub xor rex.WRXB sbb push sub js rex.RX sub hlt xchg add xchg stc pop jmpq lods xchg roll insl shrl (bad) cmp (bad) retq rcl sub jmpq push xor nop adc ds xor mov ss xor std in jl hlt xchg loopne movabs scas adc (bad) fisubl cmp rex.WRB sbb sti add adc in mov rex.X push (bad) mov std pushq sub cmp in (bad) add test jmpq mov andl icebp es (bad) sbb and rcll (bad) xchg movb fildll sub jmp nop out and add mov (bad) out roll loopne lcall add rex.WRXB (bad) xchg xor fisubrl jrcxz cmpsl add jle out mov (bad) pop loop enterq sahf jae xchg sbb in xchg (bad) jne fdivrl sub pop ja je xchg (bad) test pop pushq outsb imul jg or movsl push xor mov add or pop jg rex.WXB addr32 outsb jno jl (bad) (bad) in sti cmp mov rclb xchg or stos jo lods xchg movsl adc jae pop xchg idivb imull rex.RB xor sbb rex xchg sub movabs mov (bad) in movslq js jle je loopne fstl xchg (bad) loopne jb outsb mov jrcxz imul xchg iret rcrl and stos (bad) (bad) or loopne (bad) fistp clc add pop pushfq out ror callq movabs pop loopne jg fisubl xchg pop loopne rex.WB push cmp loopne pushq iret (bad) loopne es jnp in pop cmp out mov in push rex.W sbb mov loopne in nop mov loopne rex.X rex.WX gs sarb subl je (bad) loopne mov sbb xor cmp fcmovnb and adc je xchg jo sbb in leaveq out add and cmc outsb loopne or (bad) cmp or mov retq leaveq or loope movabs pop scas sbb add xor loopne fcompl sub cmp add or ss mov (bad) nop rex.X lret cmp loopne cltd (bad) (bad) fs out xlat mov imul jb xchg out js loopne idiv jp (bad) addb jle stos nop (bad) push loopne imul loopne mul mov add (bad) lods pushfq and mov (bad) (bad) (bad) lret push mov rex.WRXB fimull pop pushq nop pushq movsl jns lods movabs push mov mov scas mov jo jg or (bad) mov add int3 ror xchg (bad) insb mov push mov negb lcall and push addr32 (bad) mov (bad) (bad) mov lahf add addr32 (bad) sbb addr32 add pushq mov or repz mov cmp cmp mov cmp pop push sbb mov add stc out movabs (bad) (bad) xchg (bad) test in (bad) sub loopne in sub fnstsw xor loopne sti sub sub pop pushfq loopne movslq rex.WB (bad) (bad) sbb (bad) and cmp mov (bad) mov cmc cmp pop loopne retq rex.X (bad) jno (bad) repz loopne fcomps rex.WX mov pop imul rol sbb sub (bad) fstl mov xchg loopne rex.RX push adc pop shrl mov leaveq add loopne and unpcklps jle sbb pushfq loopne sub ds fdivl (bad) mov stos sti jo enterq decl rex.WXB (bad) mov loopne rex.WX incl (bad) int test repnz (bad) xchg cmc ficom loopne loope ja out rex.B addb mov adc (bad) adc mulb ja add iret test fild je xchg loopne repz xchg (bad) (bad) mov jne movsl loopne (bad) hlt sub add rex.WRXB jnp xchg pop rex.WB and cmpsl sti cld mov loopne pushfq mov (bad) push movabs (bad) cmp in rcrl (bad) mov rex rex.RX xor loopne vpsubd retq sbb and sub (bad) adc (bad) pop jmpq jg push mov sub sub fdivrl lods xchg mov sub fnstcw jg xlat std xchg pushq insb add or lods mov rex.WB loopne or shl cmp lock loopne pop jns loope xchg (bad) loopne jb (bad) callq mov (bad) insl rex.R mov jbe icebp movl or cs and cmc mov and loopne push add mov sbb add rex.W pop (bad) loopnel movslq movabs xchg xchg fdivl rex.R fs jg pavgw jno fcoml fistpll xchg out in xchg sti xchg rex.WX fisttpll and xchg (bad) pop loopne cmpsb add cltd rex.R loopne lock xchg loopne (bad) cmc test sbb movabs sub push divps (bad) jae adc push rcrb xlat bnd cmpsl lret std jmpq (bad) movabs ja xchg and jmpq out and rex.XB (bad) or int3 and cwtl cmc mov (bad) pop out (bad) ss mov and mov (bad) and sub (bad) sub (bad) and loop mov cld pushq or out jg pop jl imul popfq mov sbb out jg adc lods push movabs xlat mov negl xor rex.WX faddl and movabs ja mov loopne out xchg xchg mov sub rex.WXB sbb clc mov sbb loopne loop rex.WRB enterq cmc hlt sbb rex.W lods xchg sub loopne mov xchg (bad) (bad) fs leaveq in pop fidivrl (bad) int3 imul cltd fildll or mov sub movabs js xor mov (bad) movsl loopne jo rclb mov add jo sti scas (bad) (bad) loopne mov rcl pop frndint (bad) rex.WX (bad) lock push (bad) es xor push (bad) cwtl loopne movabs xlat div or mov lea pop cltd pushq jp add loopne pop jo jns rex.R loopne mov movabs fstl jp xlat mov sub or int3 int3 enterq fidivl add (bad) shlb retq sub in or enterq fs add (bad) gs in (bad) lock add insb mov clc jle cmp (bad) cmpsb (bad) repnz (bad) rex.WRB pop and mov mov pop outsl (bad) mov rex.WR adc or retq movslq icebp (bad) xor mov fxam rex.WXB loope jo bswap loopne js mov out leaveq jae xchg or loopne cmp (bad) imul and loopne jrcxz leaveq retq and xchg loopne sbb push lret jae (bad) jb loop jp xchg (bad) shl (bad) or movsl lret rex.W loope in mov pushfq loopne adc test xchg roll packuswb loopne push or jge (bad) adc data16 mov (bad) rex.RX pop loopne push rex.X in adcl xor and lret pushfq test movsl in out (bad) rcr sti enterq (bad) xor push movabs jmp mov mov in faddl or ror loopne jg jb stos xchg movabs movslq mov fs push (bad) mov (bad) add sbb repz rex.WB adc popfq imul int3 mov (bad) (bad) repnz repz jle push rex.XB rex.WRX rex.W mov mov andl or adc (bad) movslq shlb enterq jns rex.X addr32 mov int3 shll movsl fiaddl repnz xor data16 iret add jno sbb sbb cmc movslq xchg mov mulb mov insb push and shlb or (bad) rex.WRXB mov movsb out adc (bad) movsb push (bad) sbb (bad) mov fs adc (bad) je mov subl ds (bad) repz add imul mov psrlw sub cmp sbb sbb adc mov adc in (bad) out mov lahf mov rex.WRB rex mov push nop/reserved lret add xchg mov (bad) push rex.XB cmp out (bad) int push push enterq icebp fsub rex.WXB adc mov sbb sbb mov test fadds retq sahf outsb adc (bad) loopne sub and mov sarb out loopne (bad) adc xor mulb clc shrl mov loopne rex.RXB jmpq adc in xor mov sub rex.WR in jrcxz insb fimull mov cmp (bad) loopne add movabs sarl and (bad) fadds mov test sub sbb jne or in fs fnop rex.W (bad) add pop loopne pextrw cmp (bad) loopne stos rex.B sbb test (bad) scas (bad) push (bad) cmp xchg xor loopne cld (bad) adc cmp cmpsb subb adc mov (bad) orb cmp adc fucomip fnstsw stos (bad) insl imul xor add sub (bad) test (bad) or and (bad) or in pop lret cmp (bad) loopne sub mov mov jg and push (bad) lret loopne rex.R cmp lock (bad) in lods retq sub xchg js pop loopne,pn rex.RXB mov pop loopne push (bad) divl es jbe xchg movabs or imul in sbb outsl and (bad) adc cmc loopne (bad) (bad) rcr add xor cld cmp cwtl sar movsl fsubs sbb (bad) stos lods or cs fsubp loopne and cltd movabs insb adcl rex.RXB cwtl fldt mov mov jo push dec jmpq cmp stos jl scas loopne mov pop or pop loopne (bad) mov jnp std mul mov test repz (bad) loopne rex.RB cmp (bad) adc in (bad) addr32 or je sub test and insb sbb (bad) jnp sbb incl jp (bad) adc nop rex.WR int3 movabs decl (bad) (bad) rex.R xchg rorb and (bad) imulb sbb fsubp pop int3 xor enterq add cwtl cmp rex.RB xchg mov jbe lods clc and sub lahf and int xor adc mov mov rex.WR in mov (bad) cmp stc (bad) xor pop cli (bad) (bad) (bad) lods mov xchg movsb rclb lock jb lods movabs movabs mov je (bad) and sbb (bad) out retq (bad) in adc insb pop or (bad) loopne and mov decb rex.R xor (bad) sbb int fistpl mov fidivl mov mov mov rorl sahf (bad) (bad) cli mov enterq ss std mov lahf mov cli (bad) push rex.RB sbb neg int3 js sub cmp push rex.WXB iret xchg (bad) pop rex int3 stos scas and jb iret out scas loope sub retq mov adc jrcxz cmp xchg xor jle loopne out scas (bad) add xchg shll lret (bad) jmpq adc jp mov roll (bad) push or fcomip outsb sbb rex.X cwtl sbb xor mov insl (bad) retq nop fs mov rex.WXB push (bad) jo mov (bad) stos mov sbb xor in and and (bad) in add loopne jno repz test cmp xchg mov nop add stos mov nop mov loopne rex.RB rex.WB (bad) pop fnstcw pop xor pop jrcxz movsl nop decl jb imul rol loopne vcvtsi2ss pop add sbb pop jbe lea jmp callq movabs push gs (bad) cmp xor loope rex.WR rex.WRB rex.WXB shl xchg pop or adc insl in jmpq and in int in jle (bad) mulb cwtl js enterq mov loop lcall xchg retq cmp movabs nop es push sbb mov push xchg xor pop pop std xchg loopne rex or repz (bad) hlt xor fildl in callq loop pop pushq add rex.WB retq jl loopne jne jb in pop (bad) loopne clc mov imul push push mov (bad) (bad) int3 (bad) (bad) cmc (bad) pop js pop outsl sbb mov popfq loopne push xchg cmp xorb xor orl (bad) sbb jge out cld (bad) xchg rex.RX int3 cltd sti xor mov jmpq enterq loopne push (bad) subl (bad) jg mov add xchg (bad) mov cmpsb mov loopne ficoml fucomip jmp and loopne or cmp scas cmp lods (bad) std in loopne sub movsb loopne or (bad) loopne jp rorb sbb rex.WX rex xchg mov out sbb mov adc and lahf (bad) int add jb add cltd outsb mov enterq pop (bad) cmp and mov adc push cld (bad) (bad) lods pop rex.W sahf add or jbe test sub pushq int3 (bad) lret jp (bad) in in add and and xor cmp loopne mov (bad) push cmp fistpll jno icebp pop loopne sbb xlat lret xchg clc rex.WRX mov sahf scas int3 rex.WB or adc lcall lret add imul rex.RX (bad) and fldl adc pop pushfq not or mov cmpsl vcvtps2dq (bad) rex.WR cmp loopne mov cwtl or loop loopne pop in rex.XB retq (bad) and lea lahf icebp loopne movsb (bad) xlat jno clc lea mov sbb (bad) rex.WB (bad) mov out sub (bad) movsl rclb int popfq add pop pop loopne or push data16 mov movsb imul movsb xorl cmp jb rolb (bad) xlat sbb ss mov movabs (bad) push int int outsb addl xor pop jns mov adc and xbeginq ds vcomiss int rex.WRXB lahf jmpq fdivs and mov in mov es movslq sub jno (bad) rex.WRXB xor leaveq add pushq (bad) loopne repnz loopne (bad) jge,pt outsl jle loopne mov pop scas mov (bad) fnop lcall push cmp jns push loopne cmp cmpsl rex.WRB ja xor mov jnp cwtl adc sbb rex.RB or (bad) loopne imul loopne (bad) repnz (bad) adc loopne jmpq scas (bad) loopne movabs sbb sub sahf cmpsb push xor movsl jbe rex.RXB pop mov sarb cwtl icebp outsb mov or push hlt loopne pop (bad) mov stc fs mov sarb data16 rex.RB (bad) (bad) sbb loopne adc add loopne xorb fcmovnu adc fwait mov add rex.WB xor pushfq loopne cmp lret cmpsb lret sub mov shl movsl jmpq sbb sub (bad) adc (bad) in rex.W (bad) fbstp cmpsb pushq test roll int3 js sbb pop imul add movabs pop (bad) cltd xchg (bad) (bad) cs push mov and lods mov insb loopne stos mov pushfq in movabs movb mov rex.RXB in insb (bad) rex.X fistl in xor cmpsl addb sti lret pop out jnp mov rex.B callq jnp jg data16 rorl jl (bad) rex.RX pop movabs js loopne and rex.WB mov xorl mov rex.W enterq jae scas pushq stos rcr and adc lods in in loopne repnz cmp (bad) adc xlat push add or setg mov js shl clc rex.WRB jae (bad) add stc cmp jl cli loopne jmp addr32 loopne mov nop cmp pop pushq sbb mov (bad) sub or or xchg movabs mov (bad) rex.WX rex mov rcrl icebp test sbb xchg sbb fs push icebp cmc fs and (bad) (bad) jnp jmpq sub jb sbb stos cld rex.WXB lock loop pop cmp push rex.W add and sbb mov (bad) bt mov sbb mov addb and pop (bad) ss movabs gs (bad) leaveq or (bad) mov lock ja and lods jg cli (bad) addr32 out (bad) rex.XB xchg fsubr push (bad) rex.X icebp movslq jns shlb imul in dec mov faddl (bad) adc scas stc rex.W movsl mov callq xchg leaveq xor (bad) rex.WB sub jo jg (bad) and and jmp sbb sbb imul rex.WR pop clc repz sahf (bad) sub (bad) icebp js fmulp in or jge jo jg int or test imul rex.WB ja insl mov sbb xchg rex.WRXB mov mov sub mov mov movslq jno adc lret adc repz clc or nop jle test (bad) add pushfq rol (bad) (bad) test jl sub pushq jl test jmpq loope cmp scas xchg xchg (bad) sub adc add jl jmp mov xor pop jo clc or imul (bad) (bad) mov sub adcl test adc or in retq rex.WR pushq add (bad) popfq rex.RXB movabs or jne lods sbb adc xor pop (bad) mov push cmpsb add gs add hlt adc (bad) mov xlat jp in cmpsl (bad) push pop sti scas fucomip loopne (bad) and shl sub rex.W add pushq or (bad) (bad) (bad) (bad) idivl loopne push sub xor lods pushfq and rex sub lret sti rex.WX lods movabs sub xlat push jns xor mov frstor cwtl loopne or pop jae (bad) mov fnop sbb jmpq sbb leaveq (bad) push loopne push sub lahf (bad) xor (bad) imul (bad) rex.WX adc adc sbb xlat (bad) fsubl jp push mov rex.RB cmp mov xlat (bad) sbb xor xchg rex.RXB (bad) mov add movabs movsl add rex.WX in jmpq test fistl mov sub cltd pop fstpl nop movslq loopne sub xchg cltd sub divl and adc jl (bad) out xchg mov and fnop rolb int3 mov rex.X rol (bad) add xchg loopne xchg iret test out lods fiaddl mov rex.R sub and jmpq xchg adc mov sub loopne movabs (bad) cwtl (bad) in pushfq xlat xchg loopne push rex.RXB cs jmpq cmpsb movabs jl pop pushq cltd adc pop movabs cltd and (bad) jrcxz xchg sub shl imul cli (bad) rex.R or jmpq and push add jnp movl (bad) rex.RX (bad) xchg loopne and sbb loopne push jns jnp sub and fwait clc xor imul out loopne (bad) pop adc xlat test js pushfq pushq mov fneni(8087 (bad) or (bad) loopne rex.WXB mov lock test rex.WB (bad) fs loopne xor rex.WXB sbb jns sbb pop pushq (bad) fldl cli iret (bad) rex.WXB mov sbb fnstsw loope insl outsl (bad) callq or (bad) cmc mov push push roll rex.WR cmp movabs fnsave and and hlt (bad) pop pop or add rex.WX xchg jle jrcxz pushfq sub and (bad) xlat repnz pop or loopne lret rex.WRXB push rex.R ss mov pop shlb jno loop rex.R sbb rex.RB loopne dec rex.X rcll mov out and movsl (bad) jmpq out or (bad) sbb push loopne jle add pop add sub xchg pushfq rex.RXB push loopne sbb mov fidivr xor adc xchg js rex.WXB test pop (bad) adc add (bad) cmp fpatan or pop xlat loopne pop jp rex.WX movabs xor xchg mov loopne addr32 jne lahf (bad) loopne push sub mov (bad) cli cmc pop mov std jmp loopne sarb xchg (bad) idiv or mov in ds mov adc mov movslq rex.WX (bad) (bad) in mov (bad) stc lret hlt rex.X mov iret faddl fdivrl rex.WRXB test out (bad) rex.WR add xor data16 xlat cmp loopne enterq scas jnp nop loopne repz mov fistl mov in sub xchg movsb or push loopne int3 in jg pop (bad) mov xor fimul cld rex.RXB out cwtl loopne adc sbb in imul (bad) lods mov nop jne rex.B repnz (bad) rolb rex.WR mov jb movsb cltd data16 orl (bad) cmp sahf ja (bad) mulb test iret (bad) loopne retq jo jae repnz add std and jns (bad) rex.WRX fucomip xchg (bad) loop in push (bad) sub decl add xor (bad) cmp and hlt jrcxz mov and jno (bad) (bad) retq adc stos xlat (bad) stc callq (bad) cs hlt fmull xor adc xor movabs movabs (bad) fsubs pushfq or (bad) (bad) and lock fwait (bad) (bad) testb xor adc or icebp (bad) fs mov test jnp mov rex.B mov shr stos (bad) push sbb fistpl mov xlat loop (bad) (bad) xlat mov insb cmp leaveq and (bad) insb fisttpll cltd rex.WRB xor imul jns rex.WRX rex.B maxps adcl mov pushq jle adc adc andl iret and sbb mov sub sbb mov lods cmp out mov or mov add adc (bad) rex.WB xor rclb adcl (bad) or mov jp (bad) gs ds lock lods loop scas mov sub jmpq mov and lret ds add pushq add scas pop movzbl insb jl rex.R ficoml and (bad) repnz jnp or enterq loopne movabs add test add add xor repz rcrl adc pop jbe push adc callq mov and loope ja and sbb pushq in mov mov insb or sbb cld cmpsb int movabs (bad) callq out fistp mov (bad) fisub rex.RB loopne xlat lods cld (bad) xor loopne push outsb movsb mov add cmp cwtl cltd and loopne xor fsubrl cmc sbb loopne popfq movl loopne mov repnz insl in (bad) xchg rex.WR loopne and xor std (bad) imulb (bad) mov lods leaveq stos out sbb movabs shrb sbb xor test mov sbb (bad) xchg pop or (bad) repz fadds rex sbb jns jmp push adc (bad) xchg xor mov add or ljmp sub adc sub (bad) icebp cli mov sub (bad) lea xchg add sbb js sub rex.RXB gs jnp psadbw adc jl in rex.R adc xchg jle (bad) incb rex.X (bad) sbb push imul (bad) movabs jne fcmovu gs xor fmul es loop mov sbb (bad) div jnp mov sbb (bad) xor sbb rex.W sbb rex.XB sbb xor (bad) jo shll mov outsb or iret adc xchg adc (bad) adc sbb cltd add cmc xor and jnp cmc mov es pushq sbb and addl rex.WB movslq repz sahf sub movabs sub add jmp outsb mov bnd leaveq sbb cli mov adc (bad) movabs pop push ds xchg xor test movabs and jl movsb pop shl adcl and xor movsb rex.WRXB xchg loopne mov pop sub fbstp retq movsb adc pop in test jrcxz rex.XB rex.W repnz mov loopne (bad) sub outsl and mov rex.X lret repz imul add add (bad) fsubr fistpl rex.B pop sbb jmpq xchg add testl (bad) xchg ja mov cltd rex.W test rex.WB mov rclb (bad) and stos xor add mov push callq jmpq pop add add xchg insl movabs xchg adc loopne mov rclb (bad) jl rex.WR ss enterq js shr fidivrl (bad) mov out and insl fcomi stc sub and (bad) fldcw out (bad) pop loopne fdivl adc cli callq xchg (bad) loope (bad) (bad) xor (bad) (bad) outsl pop jle cmp fsubrs (bad) adc callq add loopne (bad) sub cs data16 jne lods out (bad) cli jrcxz iret xchg mov (bad) pop stc jne (bad) (bad) xor mov in jbe sbb es push fwait loopne (bad) (bad) push mov (bad) gs pop xchg mov and movl mov add (bad) sahf loopne mov rex.WRXB in rcrb fwait (bad) cmp pushq jg (bad) sub (bad) loopne xchg cmp hlt pushfq add (bad) xchg stos loopne pop enterq mov sub vpaddusb rex.RB sub pushq add movabs mov or data16 insb jae lock mov mov xchg out sub cmpl (bad) loop (bad) push xor fucomi mov stos test sub rex.RB sbb sub loopne icebp mov (bad) ljmp ja cmp xor es or xor mov iret adc and xchg pop adc adc push jl pop add xchg loopne retq jns and clc adc repnz xor (bad) stos (bad) push or loop or test movsl sbb rex.WRXB loopne ja pop cmp push repnz fs mov je loopne or and and pushq push jmpq sub shrl mov mov movabs shl and mov xor rex.RB xor scas (bad) cmpsb sti add xchg shl mov fidivrl rex.R sub mov jmpq ss jne (bad) repnz iret mov pushq not mov sub in rex.XB insl xchg (bad) nop xchg imul pop sarl fnstsw pushq test loopne xchg hlt pop (bad) sub loopne mov jl xor (bad) loopne lahf gs sbb (bad) loopne sbb cltd push rex.RX fisttpl (bad) movabs in rcrb in pushq cmp out out loop js jo (bad) cltd mov pop rex.RX repnz (bad) loopne leaveq movabs lods out cmp fs mov mov jmpq test test test loopne jnp sub stos add mov sub push incb psubusb test (bad) leaveq (bad) (bad) cmp sbb sbb imul iret out xchg sbb jmpq fisubl or out jrcxz (bad) clc and mov retq (bad) jbe xor out cltd (bad) cmp movabs out popfq mov (bad) sbb (bad) pop xor insl cmc and pop stc addr32 adc rclb insb mov jo mov xchg mov sbb lret push test mov cmp orl cmpsl jrcxz icebp sub sub dec (bad) cmp rex.WRX and sbb jbe adc mov cmpsl rex.WRB (bad) pop (bad) lret pushq mov icebp xchg push (bad) (bad) mov fcmovne scas rex.WXB ja xchg sbb sub imul or jnp pop cmc xchg adc cmp cmp and loop movabs cmp stos cmpb cld sub cli cmp insl retq push rex.B fwait (bad) loopne xchg add rex.WXB repz xchg clc ficoml out pop mov cwtl insb js xchg add and pushq decb lret xchg sbb jg add (bad) rex.RX mov in in or push stc fwait adc rex.WB mov loopne jae rorl jo retq pop loopne rex.WRXB pop xchg xchg xor (bad) addb (bad) xor and pop orl or jmp movabs movabs xchg jmp test mov sub ds fisttp loopne (bad) mov fsubp pop sahf and jne mov icebp rcrl sbb (bad) and (bad) lahf mov repnz jmpq mov xlat (bad) loopne movabs push stos or (bad) (bad) sar gs cmpsl movsl cwtl xchg add jmpq sub rex.W jrcxz push fwait loopne pushq pop int pushfq ja shrl jb and (bad) or movl jmp xchg add fs test push sarl or jmpq add mov or pop or incl mov rex.WRXB (bad) pop lret in pushq jno mov pop insb cmpsl iret rcll loopne or insl fwait rex.XB lods in in scas mov rcrb jle jb fildll rex.WR xor adc xchg idiv (bad) mov nop callq sbb mov data16 js cli rex.WRX jo pop (bad) in movsb or mov mov sbb xchg cmp test pop (bad) fld cli add in sbb mov outsb pushq je cwtl mul and pop rex.W ds (bad) xchg shl outsl jbe add movabs xchg add (bad) incl adc add sub fnop pop (bad) mov rex.R retq callq cmpsb rex.WXB mov pop movabs xchg out cli cmpsl sub loopne (bad) pop sub add loopne xor loopne sub mov and loopne out sti fstps mov rex.WRX in pop rex.RX stos xchg xchg ja rex.B rex.WX icebp pop sub loopne cmp jrcxz enterq fmull or hlt (bad) pop in loopne jl jno (bad) loopnel push mov ficomp (bad) rcl jmpq (bad) repz sarb fisubr scas lock cmp jmpq andb adc cld and retq loopne xchg (bad) lods sub xor leaveq rcl or retq enterq decl jae rcll (bad) push outsl mov jp jo and scas jno mov lods mov icebp ds out es jg movslq jno add rex.RXB in xchg cld mov xchg (bad) adc loopne fmuls (bad) rclb stos lret xchg add pop mov sub out sub (bad) (bad) xchg cmp (bad) pop rex.WR loopne (bad) jp sub insb (bad) sub or repnz (bad) rex.RX fmull and ficom rcr mov jmpq cli (bad) (bad) xchg pop add insb fldt (bad) (bad) pop cmp and retq adc (bad) mov rex.WX (bad) cmc add adc jno lret rex.W loopne movsl push xchg sbb add jg xor sub sbb fucomi (bad) mov xchg fiaddl sub neg rex (bad) mov adc (bad) mov or loopne in cmpsl sub xchg cmc xlat cld rex.B pop outsl jnp js add rex.WXB (bad) mov sbb (bad) adc (bad) rex.WRXB and stc xor fcmovnu lret jmpq xor in (bad) jnp lock sahf movabs pop incb sbb or sub cmp (bad) rolb cmp cmpb (bad) adc insl (bad) lret (bad) ss sbb sbb push ja (bad) callq or sub cmp je mov lock in sub (bad) clc push int iret roll test enterq rex.RXB mov orl xchg xor (bad) mov jge (bad) in pop or (bad) mov loopne xchg shr loopne (bad) (bad) or push insb (bad) loopne loop cld repnz xor jrcxz pop sbb rex.B mov loopne shrb pop movsb add mov (bad) mov nop enterq and xchg pop loop iret xchg rex.RX rex.WRB rex ja (bad) sbb mov test and mov jl and rcrb (bad) jrcxz test mov and xor sarb xchg or pop (bad) (bad) (bad) xchg xchg rex.RXB ficomp xchg pop je cmp out (bad) addr32 fisttpll nop movabs rex.RX movsq in test imulb mov cmc xchg pop loope loopne sub (bad) (bad) int jle repz loopne and (bad) xchg pop (bad) jns (bad) (bad) jmpq rex.WRB test jle mov pop vmovlps lahf enterq (bad) movabs and xchg and rex.WR es and mov jmpq push pushq sbb (bad) jbe (bad) sub xchg rex.XB pop pop xorl imul (bad) iret push (bad) jge push popfq addr32 sbb jns outsb pushfq or retq add (bad) in and loopne rex.WXB pushfq popfq mul cli andl adc js mov movsb (bad) xchg mov stos shl jrcxz rex.RB fstps out in sub and add mov outsb out (bad) mov sbb add je (bad) xor pushfq icebp hlt retq cli jmpq fimul xchg xor (bad) retq int and iret and lahf popfq lock cmpsl xchg cmp inc sub mov add sbb mov rep sub ficom add in jp test decb fsubs cli fs rex.W or and (bad) out insl sbb movabs push movsb rex.XB movabs (bad) mov jb and adc shlb out addr32 (bad) rex.RB jg xor pop fmuls int cmp mov jmpq and sub xor (bad) mov cmp loope roll xor in repnz xchg or rex.RB rex.XB jno jae sti and cmpsb lock psrad add sbb or xchg xchg mov fwait movabs pop pop (bad) adc movabs out mov cmp mov loope and jmpq rolb pop mov sbb push andq push pop (bad) test test and fmuls (bad) cmpsb (bad) icebp imul cs xchg add jg xchg jrcxz fisub jp adc out mov int enterq pop jle sbb sbb scas rex.RB and sub or lahf push pushq callq rex.RXB out (bad) ss (bad) (bad) mov mov adcl (bad) jmpq fwait push jle divl lock sbb in (bad) adc pop js fcoms (bad) jns movabs clc in (bad) rolb lret loope movabs pushq loopne mov (bad) (bad) jle js (bad) rex.XB mov hlt (bad) adc lret mov fs leaveq sbb fidivr out pushfq pop sbb loope and mov movabs (bad) scas and fs (bad) sbb addr32 ds adc pop xor sub add movsb mov (bad) cmp fnstcw je and rex.RXB push clc lods adc addr32 movsb mov js xchg (bad) loopne xor sbb (bad) loopne movabs xchg sarl stos int3 (bad) cltd scas loopne push lret imul loopne loope adc (bad) adcl movslq cmp lods cmp add xlat (bad) cmp (bad) and ds loopne ffree xor mov pushq loopne js ds xor adc loopne and (bad) push mov sar jb (bad) pop icebp adc xchg gs jmpq sbb rex.WX cmpsb repnz loope pushq add jnp (bad) mov and jrcxz xor (bad) or adc out cs loopne movsl jl outsl rex.WB leaveq int3 (bad) pop cmp pavgb jmp rex.WRX loopne fwait xor xor loopne push jmp lret loope mov enterq cld clc fsub rep or inc mov fisttpll loop pop (bad) mov jno jnp (bad) rex.WX push fist loopne jge rex.WXB sarl jmp es rorb (bad) loopne push pushq mov adc (bad) xor adc lret push imul mov idiv enterq (bad) addb sub lods test insb data16 xor (bad) and (bad) imul loopne sarb rex.XB sti (bad) mov loopne loopne push add hlt jns add jmpq xorb and add (bad) test popfq movslq int3 sub push (bad) lock mov cld pushfq cltd out xchg push jg jge adc std pushq rex.WR jrcxz jp pushq rex.WB out lods (bad) jo stc rex.XB adc stos jg nop (bad) cmpsb adc rex.WB test cmp fdivrp sbb sub mov sub rex.W sub loopne rex.WX pop ficomp and outsb rex.WRXB jg xchg (bad) mov enterq pop mov lock std add pop loop mov sahf ja pop ja imull xchg push and cmp (bad) outsb insl leaveq (bad) mov mov (bad) xor cmpsl nop jle icebp movslq adc stc and push push adc sbb mov adc fwait push scas (bad) ljmp sbb cmc (bad) es clc (bad) imul rex rex.X rex.B rex.WXB jne or fsubrs rex.WRXB repnz lods jmpq or mov mov (bad) and flds test jbe xchg retq out js xlat cmp loopne sti lcall jl adc jmpq js or icebp rex.WR jmp orb cmp test in js in es loopne,pt (bad) mov out cmp (bad) xor retq and xor (bad) (bad) add dec ds mov test add jmpq sbb in rex.B andl loopne lret sahf cmc add and rex.WR adc (bad) (bad) sub cmpsl outsb fstpl in sbb jle (bad) rex insb pop rex sub mov xor adc jl cmc jo and sub jbe sub orb xchg xor movsl sub or rex push (bad) push cmpsb shlb mov test loopne lea sti loopne add xchg sar enterq sbb rex.R loopne adc in mov mov push push rex.B jnp mov pop jp rex.WX (bad) jmpq test xchg mov mov adc sub jo and (bad) push (bad) in xor lods pop rex.X (bad) pop (bad) xor ds mov mov xor adc mov xchg xchg icebp rcr lahf xchg retq iret cmp add (bad) (bad) rex.W cmp loopne adc mov ja movsl xchg and movsl int3 icebp cmp ja test add shll rex.WXB loope rex.W mov mov jrcxz loop clc (bad) and (bad) jrcxz in cmp lret rcl mov imul loopne mov repz sub hlt movabs (bad) loope jmpq rex.X cmp (bad) fimul negb (bad) (bad) (bad) andb rex.RB out or (bad) loopne hlt loope (bad) out mov loop pop or scas test (bad) loopne pushq retq shr pop sbb jne push clc shl shrb stos cmc or ja add test sub push loopne rclb movabs divl shrb mov mov shl (bad) pop cmp (bad) decl (bad) fsubs movl nop fistp cmp xor movabs fimull movsb xor (bad) stos leaveq mull jae and jbe pushq fs xchg cli xchg (bad) shlb shr cltd vpavgb and nop incb movabs jae (bad) mov and (bad) (bad) adc xchg hlt lods push mov test pushfq movabs sar (bad) (bad) pushq out roll xchg (bad) and andl adc cmp push (bad) mov lock std cwtl (bad) rex.X xor in loopne lods or in out clc movsb lret rex.WRX jo retq add pop ja rcrb xchg loope push roll (bad) loopne adc jmpq add int3 cmp and (bad) stc (bad) roll (bad) (bad) sub jb push je in jae (bad) xchg fwait outsl sar jo movabs cmp mov (bad) jmp (bad) ds mov stos clc or xchg sbb pop (bad) fsubrs fisubr add add rex.W mov jg ja fwait shl addr32 cmc xor fnstsw shlb lret cs cld fwait pushq (bad) lock or jl pop mov insl stc pop mov movsb test rex.W (bad) lods xor jo jno pop jge mov pop cmp (bad) mov movslq adc (bad) adc mov cmp cmp adc imul cmp add cmc (bad) pop retq cmp loopne stos push (bad) (bad) in in cld cs adc jge rex.W cltd nop jmpq cmp gs pop pushq mov rex.WRX push or mov xor rex.RX and mov mov (bad) xchg shl shl pop imul inc (bad) (bad) mov (bad) mov xchg rex.W loopne andb std sub lods loopne stc pushq test (bad) in jae sar out movabs cmp mov and push rex.WXB (bad) loopne test mov fisttpl lret rex.WR (bad) in add (bad) outsl (bad) and cmp je (bad) cmpb clc loopne (bad) xchg es rex.WX and adc adc scas cli xchg and push fidivr add jg outsb scas or xorl movabs insb in loopne pop rex jo out xor popfq (bad) pop jmp fcomi or add jg (bad) lock jno xor sets shl (bad) mov adc rex.WXB movsl add (bad) cwtl jns sbb stos jmpq xchg movabs in add add cmp fs vstmxcsr in loopne shll jbe xchg loopne jge (bad) mov cmp loopne xor jb sbb (bad) loopne repnz push jo rex.RXB (bad) cs icebp out pop callq rex.R adc (bad) (bad) (bad) xchg or in (bad) rex.W es out and mov pop push (bad) mov cmc imul sbb movslq (bad) and movsl in xchg push mov pop (bad) callq (bad) mov (bad) rex.RXB and jb subl sub adc rex.XB adc and fist std (bad) (bad) mov lock in xor pushq icebp gs mov xor shr and movabs std mov scas cmp pop add cmpsl insl mov xor lock lods addr32 nop (bad) movabs add adc (bad) mulb and rex.B cwtl cmp sbb outsb movabs out mov movslq gs fs adc cmpsl outsl jns fisttpl mov sbb sub loopne in cmp fidivr (bad) callq out push nop rex.WRB push push (bad) (bad) test scas sbb sub loop mov xor adc movabs clc sbb sarl (bad) sbb in icebp insb or std push mov mov retq cmp retq (bad) addl (bad) adc jl cmp rex.WRX fwait mov xchg incl (bad) pop rex.X cmc cld sub rclb push rex rex.RB xchg mov icebp imulb callq lret loopne imul (bad) pop mov jmpq hlt fiaddl loope sbb loopne clc xor and adc sub mov or push in xchg retq or cmpsb or (bad) xor cmp mov push jp adc push sti mov lret (bad) fldcw fsubp scas sub rex.WRX jns lods adc adc loopne (bad) rex.RX xor jl push test iret rclb retq pushq and movabs mul jl retq movabs hlt clc xchg mov test add movabs xor out loopne rex.R xchg add sub mov xor in add rex.W sub retq add loopne flds sub add loopne in fmul jg (bad) test loopne xchg (bad) mov loopne add (bad) in cmpsb movabs loopne mov sbb andb xor loopne or iret add sahf sub jbe imul add rex.WRXB ds and test loopne div addb sbb jae ja adc or loopne push mov push xor mov (bad) (bad) jl fistpl (bad) sahf rex.WXB mov gs and adc sub mov mov (bad) fs (bad) (bad) ds and push jp loopne leaveq (bad) fbld xchg (bad) push rex.WB and push push loope rolb cmp mov pop (bad) sub loopne,pn pop cmp mov jmp fisubl gs pop movabs adc cmp (bad) jns mov or fimull rex.WRB rex cmp loopne fs pop pushq loopne je (bad) imul stos movabs and mov mov sub pop add loopne fwait stc repz adc sbb cltd loopne sbb mov (bad) movl (bad) xor mov movabs add nop rex sub int clc retq xchg je xor (bad) cmp (bad) push out retq and test xchg push add (bad) lods jg stos rolb negb loopne adc sub cmpsb mov lods sbb jmpq sbb movsb push leaveq andl test imul jb lret mov xor xchg cmp test test hlt fisttpll and push out (bad) insb mov adc and rex.RX adc mov xor movabs (bad) es psubusb adc roll mov xor leaveq fisttpll xchg loopne rex.WR sub insb sbb sbb pushfq leaveq pop mov pushq and (bad) fsubrs cmp push imul rex.WB sbb cli mov jno xchg mov jo leaveq addr32 mov jmp sbb push pop sbb pushq rex.WX rex.B icebp (bad) or (bad) rex.RX or sub stc mov sbb rex.WX jmpq fwait add retq and add cmc scas or outsb rex.RXB sub out (bad) jae mov (bad) xchg icebp data16 (bad) sbb cli (bad) rex.RXB xchg (bad) mov and jbe (bad) xchg icebp imul pop js rex.RB rclb sbb gs lret (bad) rcrb adc sbb sub rex.W out imul mov xchg and jns out in repnz adc or fs jo stc std sbbl xchg mov shlb fimull enterq add fs mov cmp insb adc sbb push adc and or (bad) rex.XB (bad) retq sahf or lock mov xlat loope retq es (bad) (bad) lea push push or movslq orb push fwait mov adc cmpsb lahf (bad) xchg rex.WRX and lahf loop sbb (bad) test pop (bad) mov movslq rex.WRB fsub sbb sahf sarl lock (bad) (bad) jge adc xchg hlt adc lea or rex.R loopne mov pushq inc jl sub mov movslq and rcll push loopne fidivrl cmp jmpq xor push rex.WRX imul cmc loopne adc cmpl jge (bad) (bad) (bad) mov (bad) jmp xchg div sti (bad) xor loopne mov xchg jnp,pt outsb sub in in xor mov fsubp xchg jrcxz pop (bad) (bad) (bad) push loopne rex.WXB imul movabs mov mov rex.WR jns cwtl rex.WX sbb sti lods lret out (bad) test jne mov idivb cmc push xor sub and loop scas (bad) adc in cli ds sub or rex.WR jp adc jno loopne or xchg jnp rolb jg rex.WR cmp rex.WRB mov pop (bad) gs pop ds mov xor in loopne cli iret (bad) push scas jno loopne retq sub roll rex.RX repz (bad) mov stos por shl add (bad) pop fcmovb fneni(8087 xchg (bad) and in push jle sarl jbe lcall jae test adc out fisttpll mov push mov xor fildll lret xchg rex.R jno (bad) stc out jp mov (bad) fimull (bad) sbbl pushfq retq push jns push rex.WX sub jb neg loopne (bad) (bad) loopne (bad) loop shll lretq js (bad) jnp icebp in mov mov out mov rex.WRX movabs mov pushq adc mov sbb scas mov rex.WRB es loopne adc loopne sub (bad) (bad) in jle mov scas add xchg leaveq (bad) movabs jbe stos mov (bad) iret mov jns (bad) test ljmp (bad) (bad) cmp loopne rex.WR (bad) sbb fwait push loopne (bad) jae mov jle xor sbb rex.RXB loopne xchg rex.WR jns push cli add cld fsub test pushfq loopne (bad) (bad) loopne cmp cs loopne loope scas ja pushq jo push repz add lea jno cli loopne (bad) lahf lock fisttpl mov or (bad) adc sub rex.WX shrl loopne jmp push add jo sbb xchg loopne js lods mov cmpsl (bad) xchg jb fwait lret mov js jge sti callq andl jg ss xchg cli add rolb (bad) cwtl je rclb jp retq loopne or and cmp xor loopne (bad) dec jbe imul and mov mov (bad) leaveq cli lret roll cmpsl (bad) jno repz or cmp stos repnz (bad) push pop in mov sbb (bad) loopne mov and sbb in jrcxz pop (bad) push pushfq movslq cmp mov or pop loopne movabs test xchg xchg mov sbb and negb rex.RB (bad) (bad) rcrl add (bad) mov movabs fwait sub in mov movsb xchg jo cmp enterq out fwait xorl mov xchg sti sbb fcompl (bad) cmpsb rex.RB (bad) jne xchg mov rex.RB or rex.WRX cmp addr32 sbb jmpq mul stos rex.B rex.RX (bad) out mov (bad) xor rex.WRXB rex.R add push enterq retq or loopne sbb pushq loopne loope xlat mov cmp xchg test pop orb (bad) cmp movabs xlat xchg lea retq (bad) loopne xchg jge adc mov imul rex.WXB rex.WRB xlat push test xor fstpt imul movabs (bad) (bad) (bad) (bad) fwait rcll jmpq xchg (bad) movslq xor jo or cmp mov push in rcll clc and shrl loopne scas repnz add rex.WB mov xchg xor (bad) jnp (bad) out mov in cmpsb cltd sbb xor scas xchg or or lret pushq loopne idiv adc sbb xchg rex.B sbb push (bad) loopne mov or fistpl in mov div fcomps in rex.WRB fmul stos in push cmp adc jp push sarb mov cmp mov sbb jo cmp add (bad) cwtl (bad) movsl outsl lods pop loop or fdivrl mov jo loopne and fiadd mov add and and adc fwait scas (bad) leaveq mov shll adc rex.RXB sbb xor callq adc (bad) rex js adc out jle fnop movabs jmpq mov add movsl sbb add (bad) js cmp sub retq sbb movsl push (bad) rex.RX rex.WR out out fcompl lock loopne (bad) jno jns (bad) lods loopne pushq negl xchg je xchg xchg loop (bad) (bad) rex.R (bad) jmpq adc (bad) pop (bad) fwait mov add rex.WRX fdivs xchg and and test rex.WRB adcb cmpsq lret inc adcb incl (bad) push jrcxz push (bad) test shl (bad) callq push (bad) jg (bad) mov xor mov sub movabs jo icebp or mov adc loope (bad) iret rex.X adc rex.RXB cmp test jp jnp sbb jae (bad) mov and int pop mov mov cmp xchg (bad) loopne jge xchg jb,pn and jno xchg push movabs icebp jg xlat sbb sbb clc or mov xor jo callq rex.RX xor mov cli sub out rclb rex.WRX sbb push rex.W lret (bad) popq jg cmp jle jle lret sbb push and loope mov xor xchg (bad) fidivr add rex.RXB pop xor (bad) ja adc sub (bad) jnp rex.WB xchg xor movabs leaveq test mov and and jns push icebp push outsb jo rex.X and hlt sbb lret enterq sbb push cmp and insl xor and leaveq mov mov (bad) cmp sub out in add (bad) or (bad) out rex.WRX fs adc mov cs in push add xchg pop rex.XB mov push pushq jl pop outsl mov cmp movabs fbld jl sub xchg cmp xchg lods jle insb out cmp shrl retq mov rex.B xchg out callq (bad) rex.X sbb sub sbb test outsb or movabs xor imul loop pushq jae out xor (bad) fcompl imul movslq (bad) mov mov xor xor out add icebp movslq fistp and mov jbe addr32 xchg cmp fs adc in (bad) mov rcr (bad) icebp jns jb pop pop mov push mov pushfq outsb out hlt rex.WRXB (bad) cmpsl (bad) orb jle or push mov adc repnz out cli cmpsb pushq shrl movabs jle sbb jge rcrb or sbb and or and ja jl out sub cltd rex.WXB rex.WRXB xor rorl xor sbb xchg sahf imul push jmpq fwait movabs rex.WXB vmovdqa jg jno rex.RB test (bad) (bad) mov sub adc (bad) (bad) fnop rex.XB addr32 xchg (bad) leaveq fwait hlt out rex.WB mov fwait out xchg (bad) (bad) ja (bad) repz pop retq xor cmpsb (bad) mov and movabs (bad) int3 (bad) sub (bad) rcrb ja outsb jne cltd adc (bad) jl and movabs adc cmp (bad) (bad) cld loopne pop sti sarl jp fdivrs sbb jb lods test mov mul in test pop rex.WR mov loopne sub push pop mov loopne out out xor or and xor retq mov rex.WB in int3 (bad) mov rex.W (bad) ja shrb pop loopne push cs and loopne insl int3 pushq xchg repnz movslq test jno pop (bad) loopne int pop add sbb (bad) add xlat (bad) shr loopne mov pop push or retq loopne rex.WXB movb (bad) popfq fdiv jmp scas cli mov xchg fbld sub xlat iret add hlt xchg jae or out rex.WRB nop mov cs fildl ror xlat sub xchg int3 fs in (bad) cmpsb (bad) repnz xchg jbe fcoml (bad) and lret gs fsub fcoms and mov mov movabs pop sbb pushq jl mov jmpq loopne imul loopne (bad) mov fbstp or mov fistpl pop pop sti (bad) xchg loop movabs or repnz int3 insl movslq divb rex.XB xlat push leaveq (bad) sbb out test mov sti outsl xor jmp pushq xor fsub icebp hlt pop insb test rex.WRB (bad) callq mov (bad) lret test rex.XB sbb int3 rex.R pushfq rex.W icebp (bad) or (bad) push sub loopne cmp (bad) add push rex.RX mov subb retq loopne movabs clc xchg out mov mov (bad) movsl je and rex.WR scas rex jb (bad) loopne pop xor clc loop sub movabs (bad) cmp mov mov cmc in push jnp in push loopne js movabs rex.R rex.W (bad) cmp imul out and jbe lods insb cmp push jno pop (bad) stc (bad) jmpq adc fucomp (bad) mov xlat jge mov jmp adc (bad) jnp xlat or lods adc movslq (bad) mov movsl add mov fcmovne pop (bad) insb sbb fcmovb pop in jo icebp (bad) pop loopne int3 leaveq pushq fistl and pop loopne and imul sqrtps xchg push or cmp out in jg in (bad) jge pop cli adcl pop loopne (bad) mov lret jrcxz lret data16 mov loopne mov (bad) popq pop cmc je ficompl loopne scas std cmpl jmp (bad) rex.R add mov loopne mov andl lret pushq mov push rclb punpckldq or rex.WXB (bad) loopne push (bad) movabs add loopne sub cmp xchg bnd loopne (bad) jb pop out xchg adc out xorl jnp addl lods mov (bad) (bad) jmpq xor mov loopne lock in lret pop and jle push loope jl lock jg adc or (bad) or retq jbe sbb stos addl jae mov icebp (bad) cld xchg int3 test loop and sbbb rex.RB rex.WRX je fnstenv lock gs sbb icebp out addl (bad) insl add mov add mov loopne lods cld cmp jl movabs adc (bad) rex.WX pushq mov (bad) mov leaveq mov adc or mov es repnz loopne or shl pavgb clc rex.WXB fsubl cs sti cltd adc sahf xchg addr32 sub out jnp push callq (bad) sub (bad) movsl or mov loopne stc xchg and mov xchg jmpq (bad) (bad) mov out dec out (bad) add (bad) jo jo decl add add add test (bad) rex.W loopne jg sbb movabs in mov (bad) jmp gs int adc loopne nop leaveq hlt (bad) (bad) movabs push jl cmpsb lock rex rex.WB jrcxz jne loope mov (bad) je mov sub and rclb (bad) mov callq xlat test push cld rclb stos or xor mov xchg rex.RX addr32 repz sub retq stos jmp push loopne xchg xor push jo rorl sbb push adc loopne pushq xor (bad) mov in out ds pop cmc adc loopne (bad) cmp sbb jmpq xchg nop mov jg (bad) push rex.R cmp rex.W enterq stc test pop gs rex.WRX adc sbb jrcxz sub movabs jb rex.XB stos insl adc sbb xlat repnz loopne mov rex.RB rex.RXB insl mov and in (bad) (bad) xchg cs repz or jmp jnp cmp and push mov hlt rex.R or mov mov in rex.WXB sbb jb pop movabs jrcxz sub jo loopne loope sub outsb add addr32 clc movabs sub xor cmc test mov (bad) sbb movabs cmpsl (bad) in sub jle jmpq pushq pop lahf xor xchg loope fldt xlat jmpq (bad) and cltd iret rex.XB sub shlb cli xlat imul (bad) jno push insl and and push in add (bad) pushq incl adc loop shrb xchg jmpq jp repnz rex.WR addl cmpsl movabs jg jo add and inc fcmovu and in (bad) xchg xchg (bad) clc imul in imul sbb in repz push add jne enterq mov sbbb or in rex.WB xor lods rex.WRXB enterq (bad) and xchg mov movabs in (bad) (bad) rex.WX in test loopne loope out or mov sub pop push cmp movabs push fsubrs pushfq rex.WRX es scas mov insl rol (bad) (bad) cltd out rex.WB lods xchg imul stc mov add int3 (bad) and (bad) test jp loopne and mov push or in mov rex.WB (bad) and test shr sbb xchg cld in rcrl or (bad) lret loopne adc insb (bad) andl (bad) cld jns add and (bad) fst pushfq outsb pop xlat stc scas (bad) movabs lcall ja lock sbb jrcxz out lods (bad) leaveq loopne mov stc fmulp stc in hlt (bad) movabs jnp (bad) nop fwait or (bad) out (bad) xchg (bad) outsl add adc lahf movsb rex mov rex.X clc pushq in pop sub cmp fimul rex.WRX and test pushfq jae lret mov xchg adc adc rex.WB cmpsl jg xchg scas sbb sar rex.WRB mov push scas test cli out divb adc pushq lods mov push (bad) lock lret pushq xchg xchg or jge loopne out sbb rex mov and (bad) ficompl pushfq (bad) sub (bad) mov rcrl fcmovb (bad) movabs stos add add loopne mov lods retq push cs or mul xchg test push scas in cmpl or loopne xchg (bad) sbb fisttpl stos loopne add rex.WRB jg (bad) scas (bad) (bad) imul mov int rex.X rcrb in (bad) callq xor loopne and jb add lret je (bad) push lods loopne sarb or (bad) fwait mov test test jo jnp loopne (bad) or jmpq (bad) mov fistpl (bad) loopne (bad) rsm mov mov fucomip in gs and sbb xor mov addr32 xchg movabs dec in rclb rex.WXB xor xor pop push jno sahf mov pop adc or xchg (bad) mov and pop js out loopne xor xchg imul in fdiv jrcxz rex.RXB mov sbb sub mov mov loopne loope rex.W loopne mov cmp sub movsl mov loopne rex.B pop jle (bad) loopne js,pt cmpsb cmp loopne enterq pop cmp add or jrcxz outsl mov mov fidivrl (bad) jmp mov push pop cli sub jge loope icebp rex.R (bad) add icebp hlt sub rex.R xchg xchg mov movslq (bad) sub xchg (bad) (bad) out xchg in mov xor mov addr32 fsubp push pop xor add ja xchg xchg (bad) adc fimull fneni(8087 data16 and gs (bad) fsubrl (bad) rex.WRXB cmpsb or stos cmp (bad) mov loope sbb out rex.R or fadd loopne mov xchg movsl pop fisttp loopne icebp cmp or notl (bad) fs (bad) sub icebp add cld add xlat pop xor out loop mov test out rex rex.WX mov movabs out loop fwait adc sbb js add shll mov sti mov pop movabs add movabs rcll cltd (bad) incl pop fisubl sti rolb test sub fcoml add pop and pushq retq test loopne xchg rex.XB (bad) icebp push cmp mov in lods xlat icebp adc out gs (bad) mov incl add icebp push fwait movslq mov in and push rex.X in popfq or push movsb and sahf (bad) jb (bad) jrcxz sbb mov loopne (bad) xchg sub sub stc and loopne clc sbb (bad) pop jl jns icebp push loopne fbstp (bad) out cli stos cs movabs pcmpeqb (bad) push push movabs (bad) sub sbb (bad) (bad) (bad) cmp cvtdq2ps movabs rex.RB add add in and retq mov rex movslq cmpsb cld or loopne lret out xchg (bad) loopne add sti icebp xor jmp ficomp (bad) in shll loopne adc rex out sbb mov mov jge (bad) rex.WB xchg xlat mov (bad) movabs pop xor push mov jle push (bad) jge (bad) clc test xchg (bad) mov jmpq in xchg xchg enterq lods rex.WRXB outsb mov (bad) in adc fstpl jp (bad) lods pushq (bad) hlt sar rex.WR xlat and add adc rex.WRXB sub add mov fdivs mov movabs (bad) xor loopne std and test sub pop adc pop xlat loopne xor loopne stc jge mov mov je (bad) shll test xchg pop loopne mov movabs callq es loop push pop cmpsl mov callq rex.WRX (bad) push adc in pmaxsw movabs (bad) neg fidivrl flds mov rex.X test loopne repnz incl jl sbb cmp in (bad) mov retq or adc (bad) adcl rex.WRXB cmp and mov loopne mov mov cmp rolb scas (bad) fcmovnb adc xor jae mov sub fs xlat in (bad) (bad) jge push loopne cltd sbb (bad) test (bad) (bad) outsl sbb icebp pushq retq jb test in out cmp rex.R (bad) mov hlt jnp (bad) in (bad) nop pop rex.RX jo (bad) int3 movabs fst xor (bad) adcl mov mov jns adc xchg insb or fcoms pop adc (bad) in fisubr sbb outsb jle jb sub cmp mov jmpq rorl (bad) xor sub movslq idiv pop (bad) push loopne mov rex.WRX or fnsave pushq xchg or fldenv sub ss cli std and movabs cmp sti int and int3 loopne add adc cs mov clc pop rex.WRX sti loope int3 xor (bad) mov adc jl cmp (bad) jnp cmp pushfw pushq jmpq loopne and xchg mov jnp jns xchg movsb test sub loopne cmp clc shl jne cs xchg rolb repz lock jg (bad) loopne insb or mov jno test movabs out retq push xor outsl add pop rex.W mov and (bad) (bad) cli add (bad) sbb imul out repz insl jns pop int3 (bad) movabs (bad) fistp fisubl (bad) xchg xor (bad) rex.B rex.RX fildl stos and xchg (bad) int enterq (bad) loopne stc es cmp and add jno xchg lahf stos add loopne xor pop (bad) icebp mov adc jge mov xchg loopne subb fcoml jmpq or (bad) in cli (bad) lret push (bad) jo push repz in xor insl (bad) fsubs out pop mov fdivl cmp fimul or (bad) rex.W pop rex.WRB jmpq and (bad) push push lret loopne (bad) jle sub push loopne mov lock pushfq cmp icebp sti fidiv roll in shl rex.WB lock or stos movsb add xor decl in xchg rex.RB adc sub xchg mov (bad) std sub mov mov jno or and movslq mov cmp movsb js mov loopne mov jae in mov std xchg cmp push js (bad) (bad) adc js movslq (bad) imulb loopne rex.XB jo mov data16 xchg loopne rex.WB and lods add mov mov (bad) jl bts (bad) (bad) and es xchg pop jmp (bad) jb push mov data16 rorl lret fisubr mov (bad) cmp rex pushq xlat sbb xlat gs test sub sbb loopne stos (bad) leaveq mul mov add (bad) shl sbb jl (bad) es mov callq adc xor rex.XB sbb sahf (bad) fidivr sbb cmp jp test (bad) adc (bad) or cmp adc movsl sbb jmp cmp adc or mov outsl (bad) xlat loopne adc mov loopne out cs popfq pop sarb rcrw jo loopne out (bad) jb add in pushq jrcxz callq sarb pop jp xor movabs adc and and xchg rex.RX pop (bad) rex.RXB cmp loopne fyl2xp1 cmpsb xor xor (bad) adc xor jg loopne rex.X ds sub xchg push mov add (bad) rex.WR int pushfq jg icebp xchg clc jmp in gs shl test (bad) xchg mov lcall loopne rex.R or (bad) mov xchg sub sbb cmp cltd pop push fnop (bad) (bad) movabs (bad) repz sub mov loopne xor mov (bad) nop jae xor sub xor loopne (bad) lock nop and sub adc loopne test leaveq adcb ffreep or in and push add hlt ds sti xchg xchg rol in popfq stos int cli cmp (bad) and and adc (bad) push cmc mov lods push lods (bad) add sbb (bad) (bad) push jae add xchg (bad) jg mov mov (bad) jmpq sbb sbbb rex fs je icebp addr32 sbb (bad) jo cmp mov in push insl out jmpq lock (bad) xor and (bad) stos xchg loopne movsl stos outsb mov orb xchg pushq (bad) mov jno jle mov rex.RB movabs or mov add add rex.RXB rex.WX movabs fidivl push repnz pop xchg mov out pop cmp fisttpll pop and out and insl xchg rex.R mov sub lcall mov adc fadd orl jl insb mov (bad) jnp rorb (bad) (bad) pop cmp xor mov fdivs outsb push rol testb jle pop out repnz rex.RX (bad) je sbb xor mov cmp push clc movabs cmpsl add fdiv sahf imul adc icebp imul adc cmp hlt jo cwtl popfq clc sahf in mov (bad) icebp jle sbb jb jns iret movabs imul jnp jp imulb mov clc leaveq xchg movabs sbb out and nop adc test or add int (bad) in out retq mov cmp lods test and (bad) rex.WRB movsb jmp mov jp gs sbb callq movabs sub pop xor and lret xor sarb mulb xor (bad) pushfq fidivl mov mov std jb popfq fstp fild out sub mov push (bad) sbb outsl pop jae loop adc cld mov rcrl test (bad) sbb add xor js (bad) adc and cmc (bad) xor loopne mov or rex.WX sub js lahf cmp xchg or lods cmp (bad) add sti jge int pop pushw lret outsl std or fcmovnbe je adc fs push (bad) mov adc jp (bad) addl mov adc jg (bad) and sbb push in mov cld lret rex.WRX (bad) sbb movsl push pop and test push mov addb (bad) jg loop in cmc push sti sbb stc and outsl icebp jg fsts mov in lret (bad) sub add fdiv movsl push gs push pop sub cmpsl retq add test cmp pop movabs cltd out rex.WRXB jmpq sub (bad) jo stos retq add movl jnp sahf test xlat (bad) jns jle loopne or leaveq pop pushfq xor rcl mov mov test and andl vmovups sbb xchg out pop sbb shrb cmpsb jge (bad) loopne mov (bad) out test add jrcxz (bad) push sbb cltd cmp test repnz icebp clc lahf (bad) fiaddl insb pop sub test mov movsl add addr32 loopne cmp cmp fcmovu and loopne sub push cmpsb rex.RB sbb andl subb std xchg (bad) (bad) rex.XB incl xchg stc test and (bad) and sahf sbb add or addb movsl sbb loopne insl jns icebp xchg push enterq rex.RX and (bad) je loopne (bad) pop pushq cmpsl cmp movsl hlt rorl add loopne rex.X rex.WRX movabs cmp rex.B cmpsl (bad) rex.RX jne ficoml xchg sbb fstpl callq mov fneni(8087 xchg test jmpq fildl addl je add nop test sbb cmp or xchg sub flds (bad) cltd xchg loopne cmp in rolb jo ds (bad) cmp add (bad) es (bad) adc mov retq (bad) mov ror addl jne xor jb pop pop loopne cmp int mov gs jmpq pop loopne add vpavgb sti roll lahf rex.XB push ja loopne mov rex.WR (bad) mov add or movabs leaveq sub retq movsl nop js (bad) jne roll mov lret lcall in pop (bad) movabs retq rex.XB fidivrl (bad) lock (bad) lret rorl (bad) retq loopne enterq in sbb rex.RXB or outsb lods in movsl fchs lret push nop (bad) fdivrl mov pushq (bad) cli xchg rex.X movabs clc pop add sti lock rex.R pop mov in (bad) pop or jmpq rex.WRX mov shl cs scas jp (bad) loopne jb rex.RX rex.X loope rex.WRB fisttpll add in sbb pop stos (bad) and incb idivb loop rex.R roll callq fneni(8087 jo xlat and je (bad) cld xchg xchg movabs nop out adc mov (bad) rex.WRB xchg hlt loopne fcmovne rex.X add jb insl (bad) shl (bad) (bad) int in rex.B rorl mov lock je (bad) sti sbb add jb xchg jo mov (bad) sar in movabs ss xlat out cli stos rex.WRXB sub xor jae jg (bad) xor rex out push lock (bad) cwtl cmp lock pop xor sbb in (bad) sub pop (bad) sbb lock jmp cmp adc (bad) pop push fistpl mov popfq push jnp and rex.RX rex.XB or mov out adc (bad) mov push stos retq rex.WRXB and lock or loope sub test add movsb (bad) rex.WRX mov rex.RX ficoml (bad) xchg jp xchg cmp (bad) lock lret (bad) and stos and loop movsb push mov movabs not and (bad) lret pop (bad) sub sbb jne (bad) xor adc sbbl pop rex.WRXB push jrcxz sbb cmp retq lahf retq and imul (bad) in clc push adc (bad) jrcxz loop insb stos mov cwtl xchg loopne sbb (bad) or cli shrl (bad) loopne and adc mov nop add cmp mov pop stos int (bad) jo pop (bad) or (bad) jmpq jp rex.WRX cmp adc loopne orl shlb mov rex.W pushq (bad) rex.WR xor loopne xchg rex.RB movabs and jmpq sarl fcmove pop in fwait sub (bad) notl mov xor rcr icebp add fisubl push enterq leaveq jrcxz pop rolb sub xchg enterq or movabs scas jno (bad) fist in mov loop fadds mov mov fcmovnbe (bad) pop or and repz retq mov data16 xchg mov (bad) rex.RXB (bad) mov cld lock push in repz leaveq repnz ja ss (bad) or push loopne adc stos rex.XB gs rcll (bad) movsl (bad) (bad) sbb stos jmpq pop push in and loopne mov (bad) fstpt orb cmpsb fs add xor stos cmp data16 repnz es insl incb lahf sahf loopne imul ljmp push lea lret rex fsubr mov (bad) and out add mov (bad) cli cld or movsl cmp xor shl sti lret (bad) jne and loopne js jb movabs retq (bad) (bad) loopne mul mov mov rorb (bad) repz xchg movsl fisub loopne cmp ja fucom xchg gs sub mov jo xchg (bad) (bad) fsubs mov and loopne push gs ficomp in (bad) xchg loope mov jmpq xchg xor cmc rex.R rex.WB (bad) mov mov stc rex.RB and pop (bad) repnz and rex.B cmp (bad) lret xor mov sub mov pop out mov pushfq fs out loopne mov add xchg (bad) loop sbb hlt movabs (bad) add mul and repz add clc (bad) in sarl neg movabs cli movabs or jle jge and (bad) (bad) xor and lahf jge test sbb pop lret stos or xorb sub rex.WXB cmpsl (bad) mov add ljmp and rex.XB and out xor loop outsb sub movsb or pop cs loopne or xor mov rex.WRB (bad) jmp xchg adc lock rex.RX rolb sub cli (bad) cmc jrcxz movsb (bad) loop (bad) fcomps jmpq test push loopne (bad) fcomps fs cmpsb xchg cli add adc fild mov push out (bad) jmpq (bad) movsl adc mov test lods loopne jne sbb (bad) iret jmp (bad) subl cmp mov lret loopne xor mov jmpq movslq or sarb (bad) (bad) movabs xchg lea enterq (bad) out jmp xorl mov loopne xor int (bad) sub (bad) ja rcr fcomps sti decb lods dec xchg loopne cwtl movl xchg lahf out xor (bad) rex.RXB js icebp gs pop mov cmp xchg rex.WB repnz rcrl add xor sbb xchg mov or (bad) add push add mov sbb add imul xchg push or mov loopne int push add adc loopne (bad) rex.WXB rclb loopne sub mov pushq cmp icebp push lock pop test pop cltd mov mov (bad) pop in rex.WRX in fisubr mov (bad) (bad) lods cld push (bad) rclb push mov (bad) add sub rex.RXB and (bad) mov jp pop mov loopne fcomps (bad) rex.WRXB rex.WXB (bad) lock mov lahf mov mov retq jmpq add sub (bad) pop cltd int and (bad) pop sbb retq in shll mov pop std jns rex.WX retq xor xor lret mov add lahf sbb mov fbld adc mov rex.RX outsl cmp in jb jp add in or xchg (bad) cltd jo loopne lock sub mov (bad) and in sarl (bad) lods adc loopne int3 sbb loopne lret fnstcw loop fiadd cs out pushq movabs push enterq xor ss je xor push rex.RXB rex.B rcll sub and pop add iret mov xchg movabs bnd jp (bad) (bad) rex.WR loopne outsb pushq pop loopne adc pop mov fwait (bad) (bad) (bad) push ficoml pop mov rex.RX jle out or mov sbb or (bad) pop fisub outsl xor test push sbb es int (bad) hlt (bad) (bad) and pop fwait clc cltd rex.WXB (bad) mov stos jb rex.WRX gs xchg fcomps pop fwait divl (bad) fbld std out nop adc xchg enterq rcrl decb icebp (bad) and je push out mov (bad) movslq test pop push pushq (bad) rex.XB rcrb shll lahf adc or xor scas jo sarl sahf rex.WRX sarb divb jb mov (bad) xchg pop jl jle mov std in mov movsl sbb rex.WRB bnd (bad) and sbb in loope mov jmpq scas setns lahf (bad) fisubl (bad) adc rclb jge and icebp insl hlt xchg lock (bad) push out (bad) mov (bad) jo,pn out (bad) rex.WRXB stos and lock movslq cli rex.RB es (bad) mov jg xor xchg push (bad) iret sarl rex.B (bad) pop hlt xchg test cmp and or addb in (bad) (bad) iret and clc xor adc (bad) sahf retq loope add add and xchg or rex.X fcoml cmp pop xchg (bad) xchg (bad) (bad) callq or outsb mov pop stos sbb test js pop sub fcmovnb and imul out repz add loopne (bad) sbb stos pushq pop jg pushfq cs jbe sub rex.X pop adcl mov pop push (bad) stos incl cmpsb rex.WX xor (bad) push (bad) sbb mov movsb (bad) jae lea xchg sbb jp icebp jne loopne jno movabs sbb (bad) and (bad) cwtl adc in scas rex.WX loopne xchg scas lret mov out mov sub rex.RXB xlat cmp (bad) loopne jp callq loopne outsb jbe mov scas js (bad) (bad) mulb fiaddl sbbl (bad) sub xor (bad) std mov loopne xor pushfq fwait movabs repnz xchg loopne sub es (bad) xlat or (bad) jo in (bad) jge sub sbb je (bad) push mov rcr sar movsl add movsb add mov loopne lret jno (bad) cmpsl fstl jmpq lock andb rex.WRX push loopne in sarl loopne mov jae loopne frstor sahf loopne insb mov data16 test loopne jo movabs notb mov pop test rex.WX or push (bad) sub xor loopne in xor stos or xor es jmpq loopne pushfq mov sub hlt fs or fcmovu fadds loopne insb xchg (bad) and ja mov (bad) (bad) loopne push rex.RB addr32 mov vmptrst test in sub rcrb fucom rex.WXB mov stos pop xor out and loopne fsubr enterq mov jns clc (bad) mov shrb cmc (bad) movabs lock cmp mov shrl ss js (bad) movabs (bad) adc lret pushq cltd push jp sub xor mov mov nop jnp sub jrcxz movslq loope leaveq sub adc pushq mov fs sub push lods sti and pop mov loopne (bad) cmpsl retq rex xchg pop loopne (bad) add jmpq rol sub loopne,pn (bad) rex.RB xor data16 addb idivb push addr32 shl mov adc xchg rex.RXB cmpsl loopne add jp fdivrl (bad) mov xor add (bad) jrcxz (bad) fiaddl ffreep loopne xchg xchg lods mov mov movabs data16 imull in sbb out (bad) cmc movslq psubusw loopne insl add mov gs (bad) xchg loopne bnd xchg xor shl ss loopne,pn jae (bad) rex.X popfq jge add insl loopne enterq retq loopne mov hlt add ja xor add sub sub cmp jbe cs add loopne and fsubp push xchg pushq xchg scas jnp cmp (bad) fcompl stos push fidiv nop clc rcl mov add outsb push rolb imull sub test insl xor fldt (bad) mov testl movabs mov leaveq push iret push mov (bad) fsubl (bad) push xor es pushq and addr32 retq in and test rex.WXB repz loopne (bad) or xor (bad) rex.X ds movabs and je (bad) and mov sub (bad) pop xchg js loopne ds sub jo (bad) sub (bad) enterq loopne adc xlat cmc rcrb rex.RXB sub jge pop (bad) (bad) mov (bad) cmp mov jp (bad) mov (bad) cmp fucom (bad) test push (bad) rex.WXB test out and (bad) (bad) ja add movabs jne out loopne int3 pop (bad) (bad) xchg xchg loopne xchg shlb push (bad) psubb movabs xchg loopne sbb insb mov sbb (bad) (bad) and xlat rex.W stos rex.RXB push in out sub fs and repz mov sbb push pop loopne notb sub mov fwait cmp cmovge and (bad) insl pop or lahf push push cmp loopne (bad) mov clc clc scas mov (bad) movabs cmpsb jmp fs mov loopne divl shrl mov std lahf jmpq (bad) cmpb sub rex.WR lock movabs fdivp (bad) (bad) xchg cltd and fldl2e callq movsb (bad) (bad) fnstsw rex.WB jns sub loopne,pn fldl add (bad) movslq or rex.RB pop add (bad) fwait je mov pushq in lret mov or (bad) mov (bad) cld jle rolb cs loopne rex.WRX jnp adcb loopne jge sti and (bad) shl outsl movb push xor (bad) outsb (bad) (bad) loopne (bad) rex.WRXB rex.R fadd (bad) jp movabs rex.XB jg sub sbb cmpsb xchg mov sbb shll loopne and mov pushfq xchg loopne jbe retq lods or and (bad) rorl (bad) rex.RXB retq lret out mov cmp sarq callq add or mov jmpq mov in fisttpl loopne pop imul cltd (bad) rex.B jne pop jns mov sbb pop (bad) psrld push (bad) pop roll xor mov and movabs loopne (bad) sahf pop mov incl push pop mov rex.WRXB stos pushq xor fsub pop xchg loopne (bad) xor movabs (bad) add callq rex.WR add movsb jmpq mov mov pushfq cmp and mov fneni(8087 xchg or push decl stc cmp sarb es rex.RX (bad) jne pushfq movabs (bad) cmp sub push and in rclb icebp push outsl (bad) mov (bad) loopne xchg sbb adc stos divps js inc jrcxz rex.RX fs imul pop cmp loopne outsb cli cwtl mov (bad) mov addl add xchg add movabs gs je fdivrp loopne pop and movslq lret loopne (bad) lret in mov cmp rex.X pop xor cmp pop rex.RXB mov in cltd outsb push xchg jge and (bad) rcl js jo sbb jmpq repz sar ds cmp out rex.XB jo or xor mov roll rcrl test mov movabs rex.WR add fstl stos xchg rex.W sub rorl jle xlat in (bad) (bad) (bad) adc ds mov js (bad) rsqrtps clc fprem movabs movslq and (bad) outsb (bad) or (bad) or imul xchg test mov (bad) jb pushfq mov jae or push rex.XB imul (bad) cmp xchg jle movabs insb sbb jbe and shll in mov (bad) jne and sub cmp jmp (bad) or rex.RXB add and xor imul add clc shrb out (bad) rex.RXB rex.RB ss movsl pop adc icebp fs enterq sub xchg jle pop push insl sbb push and pop sub (bad) jmp (bad) jg addr32 es and rex.WB or (bad) test (bad) rorb jns xchg movslq mov (bad) popfq movsl test vpaddsw test push scas or sahf and movabs pop repz and rex.WX xor in (bad) cmp mov decb movabs cvtdq2ps rep rex.WXB fs movsb jnp xor bnd cmc sub and enterq xchg mov repz sbb mov insl rex.WXB mov callq test push adc cltd (bad) hlt adc mov es bnd push andb shr (bad) outsb pop mov and rex.R mov lock rex.WRB mov (bad) sub (bad) pop mov rex.WRB push sbb push insb push hlt add out ja sbb cmpsl pop retq xlat sbb xor mov fidiv (bad) cmp sub pushq jno (bad) (bad) pop cld outsl sbb mov jrcxz or (bad) adc jbe sbb (bad) cmpsl mov pop rex.WXB popfq or add mov sbb pushq and loopne cmp mov lea scas mov sbb cmc mov (bad) adc xor xor jae clc xchg in add adc push retq (bad) adc in popq outsl jp xor out add sub cmpsl jg xchg stos add mov (bad) adc mov push outsl rex rex.WR (bad) sbb mov callq and rex.RB ja jno (bad) sbb enterq loope fiadd in pop mov push (bad) shrl push sbb jo (bad) pop rclb lods adc (bad) fistpl cmp test adc int3 in icebp jns test movabs rex.XB scas mov fidivr lods jp test adc mov in (bad) push (bad) sbb pop fdivs or jg jmp pushq cmp scas movabs fyl2xp1 (bad) (bad) (bad) js (bad) imul jae cmp push add popfq pop shl xchg (bad) rex.W rex.WRB pop jns xor cmp jnp (bad) lods xchg jl sub mov js jns jg jbe (bad) pushq rex.WXB out rex fs lock cmc movslq (bad) insb sbb sbb (bad) xor (bad) in sub xor mov pop lret movsb mov (bad) ss lahf negb lret mov mov or leaveq lods decb cmp mov (bad) rex.X adc mull rex.RX (bad) and mov in or outsl or push cmp (bad) (bad) and or shr jnp fcom (bad) repz jrcxz push fwait sub rex.WRB push repnz mov cwtl rorl pop and (bad) rex.WX movsl pop jle lret lret (bad) (bad) xor movsl mov (bad) (bad) (bad) cli cmp mov sub cmp xor mov retq test mov sbb lock mov rex.WB mov loopne add and callq jns clc cmp or lret jbe jl push sub (bad) loopne sarb (bad) cltd xor test loope scas leaveq in jb in mov jg es adc (bad) rorl ss movabs sbb (bad) loopne xchg rex.WB fcoms cmpsb mov loopne mov or push pop iret loopne jo rex.WR repz in sbb loopne retq (bad) es rex.WRX fsubl adc psraw in rex.R sbb fadds nop and jno test adc rex.XB push (bad) pushq movabs nop or in (bad) xchg add idivb (bad) int lret jmpq xchg xor (bad) cmpsb (bad) out js movabs loopne (bad) cmpb add adc movabs sub out addr32 (bad) jle shrb lock rex.WRX xor rex.WX push lock pop sub enterq xlat and pop imul stc (bad) (bad) sub out or loopne (bad) rex.WRXB pop movsl sbbl rex.RXB xor jge rcr lock sub test mov in cli (bad) pop movslq (bad) (bad) mov mull pop cmp and (bad) rex.WR loopne in pop add xchg jg mov mulb lret ljmp mov mov and jmpq xor movsl in mov out or mov enterq sar in movabs (bad) jmp fisttp adc in rex.X jmp (bad) retq rex.B rex.WX cmp mov ss mov cli hlt retq or ja imul or outsl loopne xchg scas fwait jp jnp in sbb cmpsl lret ror in cld (bad) sub cwtl (bad) out jae and mov movabs fnstcw rex.X gs sbb movabs js movabs (bad) in cmp jmpq test jnp jle loop sub bnd icebp rorb int movabs adcl scas repnz shl clc cli add push icebp rex.X adc mov sbb stos cmp sarb lock loopne pop imul jns xchg sub and scas sbb (bad) (bad) or lret fdiv cmp in hlt cmpsb xchg loopne xor jmpq ficoml ss xlat lods retq (bad) pop add cmp movsl xchg (bad) movsl rex icebp adc out out movabs jmpq test jne sub add js fstpt icebp rex.B pop movabs out adc sub sbb xchg cli fidivrl (bad) add loope fisub pop jl std mov mov in jb fistl xor cmpsl (bad) push pop jb or (bad) push pop ja mov rcll jbe in mov rex.WX icebp movabs and scas icebp movabs (bad) jns mov xchg stos cld lods loopne lock std xchg lret xchg rex.WB scas lock sarb adc sub loopne je js jae cwtl jnp or (bad) (bad) pop jp mov vpmulhw push jo testb fdivrl or insb (bad) mov mov and jb push out sub (bad) lods loopne test xchg xlat (bad) xor mov loopne (bad) mov cs stos or xor or (bad) and (bad) jp fdivr jbe xchg movabs (bad) xchg (bad) xor and movabs adc sahf push fmuls pushq rex pop (bad) in popfq cmpb (bad) (bad) imul fwait add adc outsl loopne insl and xchg lret fidivrl xor fisubr (bad) fsubl in cltd loopne add cwtl xor ss rex.WX mov xor movabs fisubr enterq loopne (bad) js mov pop int3 (bad) xor mov cld scas ja loope mov sarb and fnstenv scas xor mov lods adc (bad) insb fwait sahf push loopne jnp leaveq movsl rex.WRX (bad) loopne rex.WRXB fmul lahf pop out icebp (bad) xor or mov out repnz rep jne out or ja adc (bad) in pop cmc cmp adc mov jae (bad) or rex.RXB retq insb jo rex.X xor mov jg adc sub dec cmp in cs and movsb lods loopne (bad) pop rex (bad) out mov cs sub insl sbb push (bad) lcall test mov (bad) xlat add loopne rex.WR outsl and test mov adc or pushq out fldt rex gs pop rolb ficom pop pop (bad) jge inc cmp rex.WXB icebp movslq (bad) sti loopne outsb (bad) pop insb loopne jmp ss rex.RXB mov cld or xchg in stos rcr movabs insb lahf mov sbb in cmp pop push sbb (bad) rex.WRB or test nop sahf (bad) rex.WRXB sbb fidivr popfq sti (bad) loopne cmp cmp jne jmpq stos (bad) stc jrcxz mov (bad) xor (bad) fiaddl in hlt fdivrl in loop repnz (bad) push rex.WXB lods (bad) xor xchg retq sti out in jrcxz movabs jns movabs push cmp add imul and adc cmpsb sbb or sbb test in push es mov mov add retq stos sub (bad) rcl out sti add sbb (bad) (bad) movabs or push (bad) nop rex.WRX (bad) data16 (bad) rex.WX fsubrs xchg pop or movslq mov jnp xchg test sbb pop add hlt retq mov (bad) (bad) incb sbb adc xchg xor mov ficoml fistpl add out rex.RB jnp outsb jge add cmp lret jo mov rex.WX xor sbb (bad) xor pop (bad) adc sbbl sub and (bad) (bad) or mov fcompl gs (bad) cs (bad) add mov loopne sbb xchg jb sub icebp std xor (bad) mov jnp js pop rex.XB mulb sub push pop loopne jbe sbb xor pushq (bad) mov movabs movabs mov cmpsl rex.RX stc (bad) hlt jg clc imull pop out pop cmpsl hlt cmp jb mov rex.B rex (bad) stc jge sub and jl addr32 out sub in cmovae sbb mov mov retq movslq clc (bad) xchg movabs jne xor jae mov subl lahf push sbb and jbe jo xchg xor out pop adc sbb in add lret cmc add std insl (bad) ja adc (bad) xchg shll loopne (bad) out insl lods (bad) xchg (bad) hlt pcmpgtw addr32 (bad) sbb callq adc (bad) addb icebp rex.WR ds or lahf cs sbb pop sbb add mov rex.WR jnp (bad) fmul cs add jae out xor lret or xor or mov and mov iret sahf (bad) pminub cmp (bad) xchg movabs (bad) repz rex.WXB fwait (bad) rex.WRX xchg xchg (bad) push jle rex.B in and stos (bad) push loop in (bad) sbb cltd (bad) (bad) rcrl stos pop (bad) mov mov mov icebp clts (bad) jmpq rex rex.RXB pushq xchg xchg mov hlt test in imul sahf jrcxz leaveq jns fidivl (bad) stc setno (bad) (bad) hlt (bad) rex.X gs jo movabs rex.R add jns (bad) loopne xchg notl test gs out sub ds (bad) fnstcw pop decb mov xchg jg push (bad) (bad) stos retq fisub adc clc rex.R add rex.WRX movabs jnp adc add rex.RX pop mov mov in loop pop jo sub jns movsb xor in adc rex.WXB mov (bad) adcl rex.WRXB push pop movslq mov mov rol pop xor cltd jrcxz pushq mov movabs add cmp jmpq icebp gs int3 repnz mov ja sbb xor rex test rex.WRXB (bad) mov imul (bad) rex.WXB (bad) mov retq (bad) (bad) mov sbb rex.W rex.X xor (bad) jge in loopne adc fisubl (bad) (bad) cmp sbb adc ja ftst popfq (bad) (bad) mov (bad) (bad) cltd repz jb insb add std loopne pushq out (bad) mov test (bad) and enterq imul ds push in loopne shrl enterq xchg push push xchg or adc pop fucomp scas in mul rex.WX sbb cli push decq add mov mov imul loopne repz movabs xor pop xchg cmp xchg nop loopne rex.XB jle jl in (bad) mov mov (bad) fldl fchs mov movsb sub loopne insl imul loopne rex.WRX stos leaveq sti push loopne hlt push imul jb nop loopne imul cmpsl out xor xor lret jmpq jno and pop loopne xor cmp (bad) rex.WRXB ss callq xchg lock pop cmp (bad) movslq pop xor mov sub cmc jb cwtl in (bad) pop (bad) insb mov xchg cmpsl pushfq rex.RXB leaveq pop xor jmp (bad) rex.WB (bad) sarb shl cld mov push int3 push xor or pop rex rex.WRB rex.XB jp repz adc loopne outsl fistpl mov push fsubl fdivrs pop xchg cmp and push in clc scas in mov sti out test lock scas loopne rex.X loopne (bad) add mov (bad) cmp outsb mov mov mov jmpq jb (bad) mov pop (bad) ss xchg (bad) adc push rex.RB loop sbb xchg loopne shl push rex.XB fwait retq mov (bad) add pop push mov or in retq fisttpl cli xlat loope pop lret sub in jne adc mov pop jmp (bad) sub mov shr sbb clc jno imulb mov (bad) (bad) pop in loopne,pn (bad) adc (bad) in or mov rex.WX xchg (bad) jns adcb mov fs loopne sub out cmp push lret add mov and out decl mov mov sbb test jns adc js rex.X fucomp lock and (bad) cmp mov rex.RB push sbb loopne mov pushq and test mov cld shr ss (bad) pushfq xchg loopne sarb add pushq xchg jne xor mov adc (bad) jrcxz xchg and and in test (bad) mov and out movl sbb rex.RXB and sbb sarb sarl loope imul popfq fcompl (bad) loopne mov imul movsb rex.RX mov sbb hlt mov and scas jmpq mov rorl cmp mov rex.WR jg loopne jbe jp mov pop (bad) xchg and sbb and scas ss jmp jmpq cmc mov sbb cmpsb loop sub loopne mov cmp pop movsb loopne pop leaveq rex.WRXB loopne (bad) (bad) retq in (bad) pop jl movsl push loopne outsb sti xlat xchg and int in (bad) outsl loope subl mov rex.WXB xchg (bad) or xchg rex.WR sub movabs retq cltd lock sbbl notb fneni(8087 mov (bad) je cmpsb jg loopne mov jo jle out rex.WRXB xor fcmovnu (bad) (bad) rex.XB movslq movabs repnz jae and movabs adc mov (bad) enterq repz in cs shll xor xchg (bad) mov sbb movsl out ja add rex.WXB (bad) sbb fwait mov xor out pop xchg cmpsl xchg pop (bad) mov ds cli cmpsb out andb jb std jmp add fwait push loopne ja adc (bad) (bad) in xor loop in (bad) (bad) cmp pop cltd loopne mov pop xlat xlat (bad) test sbbb (bad) (bad) sti movslq insl ja xchg (bad) retq test rex.WR movabs loopne jno mov clc mov xorl orb cmp (bad) loopne xorb popfq and jo (bad) fildl test rex.WRXB int mov xlat pop in pop xchg out fwait or push pop cmp lods xchg (bad) jmpq rex.WR mov imul movsl insb jnp movslq addr32 popfq mov icebp mov and sbb test loopne clc fs fucom mov xor xor movabs sub loopne fiadd lahf andb cmp xchg sahf movabs jno xor rex.WRB fwait in negl (bad) retq in retq sahf mov fwait xlat cmpsb in hlt icebp jg cmp icebp mov and jrcxz adc mov push movabs adc stos (bad) (bad) jmpq cmp cmp (bad) mov cltd stos fmuls and sub fwait ja push sub rex.WRXB and (bad) in in (bad) xchg sbb and clc sbb in xor add cmp dec (bad) out xchg jmpq fs cmpsl lret cli mov adc jle adcl push and push sub (bad) or pushq mov rex mov and mov repz iret scas mul leaveq in mov (bad) bswap lret xchg mov std jb jo js add xchg sbb je add (bad) cmc and add leaveq lahf push sub (bad) add push rex.WRXB rex.RB repnz pop movabs (bad) (bad) je out push mov mov test (bad) jg (bad) cmp (bad) rex.RXB rex.WX fs rex.WR xabort loope fs adc (bad) push mov jp xor or (bad) pop (bad) dec (bad) (bad) jg rex.WRX sub (bad) jrcxz js adc repnz (bad) jmpq cwtl sbb mov shrl in movslq sbb fcmovnbe lods adc and mov (bad) ds mov subl jp sbb movaps sbb add clc sarb fstl (bad) retq cmc fwait popfq fidivl cmp mov cmp movabs lods jle mov add mov and or rex.WRX hlt and (bad) pop (bad) stos sbb cmc (bad) jle movsl (bad) (bad) je movabs mov push (bad) icebp and sbb pushq mov add or sub loopne int xor in and sbb fucomi and add adc (bad) add sbb adc pop sti and cmp xchg test pop xor mov mov mov (bad) xor js push popq outsb xchg loopne rex.WR ss (bad) rex.WRXB xchg cmpsl fsubs in cmpsb mov or adc rex.RB cli xchg jrcxz (bad) (bad) pop mov cmc test push adcb (bad) pushq imul jp fucom lahf testl sub (bad) (bad) push rex.WX add loopne (bad) movabs mov pop fldl2t xlat gs es (bad) pushq mov sbb hlt sbb in jo cld fcomps and stos (bad) or test (bad) cld scas gs xor rex.WRX lahf hlt mov sub push adc sbb lock (bad) shl mov cmp insl add hlt popq xor or loopne fs lret int clc retq outsl imul sbb cli jns loopne (bad) mov rex.X out rex.RB sbb pushq or loope xor cmp lock pop fnstsw addr32 mov (bad) loopne in (bad) mov sbb ds xor movabs or loopne adc nop sbb pop xor loopne (bad) xchg mov adc lods lret push je and cld (bad) cli (bad) fcomip cmpsb xchg ss pop mov (bad) mov (bad) fiadd or in rex.RB cli retq or jae (bad) pop or adc and loopne sti sbb push sbb push mov addb lret mov lods (bad) rex.RB cld add xchg icebp addr32 rex.RXB cmc retq mov sbb in fisub cmp or sbb cmpsl leaveq adc addr32 cmp cmp (bad) xor (bad) adc bnd movabs mov cmp rex.RXB ficompl icebp (bad) int3 mov sbb jg mov movsl jmpq sub stos mov xor icebp fsubrl es out sbb xor mov clc add lret xor (bad) sbb jg test rex movabs (bad) cltd and xlat enterq jae sub pushq add mov or (bad) jmpq (bad) fistl adc (bad) loopne mov rex.WRB test loopne xor xchg out xchg mov mov xchg mov push fbstp (bad) mov ja cmp and jbe sub mul cli roll lods xchg cmp add adc rex.WB jno add mov rex.WRXB std fsubs icebp xchg out leaveq insb xlat nop xchg xchg cltd mov js cmc push add roll loopne add and (bad) mov loop in jmp (bad) push loopne mov rex rex.WX xchg leaveq in adc mulb nop jae adc (bad) (bad) xchg (bad) or loop pop xor or loopne rorb in fdiv pop movslq or mov stc xchg xchg xor out cmp adc outsl xor (bad) xchg rex.RXB sti add jle fisub adc rex.RB sub in jl jno and rex.WB in movabs add or (bad) fcom pushq movabs mov cmp sbbl (bad) and add xlat mov mov mov nop test js nop je pushfq movabs sbb push sbbb mov and fnstenv pop jae xchg push (bad) out sbb pop cmp mov sub repnz loopne,pn pop jge cltd cli sbb mov loopne sbbl pushfq (bad) shl (bad) out fsincos loopne movsb mov out mov loopne fs mov jge out or loopne mov mov rex.X (bad) movsb (bad) enterq roll jns mov or test loopne (bad) xchg cmpl cltd (bad) add xchg callq adc (bad) (bad) inc jmp sbb (bad) jae xor cmp in or cli xchg (bad) test js loopne (bad) or pushq (bad) icebp (bad) leaveq (bad) (bad) jrcxz js adc rex retq (bad) loopne mov enterq loopne or rex.WX loopne (bad) xlat add stos movabs pushq addr32 and nop xchg sub (bad) callq movsb popfq loop (bad) cmc sub loopne leaveq mov and stc out loopne movabs test mov push movsb xchg icebp std (bad) xor fdivs callq lods adc (bad) mov js callq sbb jmpq rolb xchg fwait cld (bad) (bad) (bad) adc sbb or movabs leaveq ja cld mov sbb xchg cmove and fchs cmp fstpl (bad) rex.RXB in lea test loopne cmp mov rorl stos (bad) mov frstor loopne lock pop in push jle adc psrlw rorl and loopne xchg outsw push rex.WRX sbb loopne mov movl (bad) cmp cwtl push incl sbb or and xchg mov ss rex.WX std movabs lods icebp ss ds clc mov out (bad) loopne pop scas rex.X gs xor mov iret jrcxz jbe sbb test cld (bad) rex.RB fwait lea stos loopne push or pushq (bad) gs (bad) mov pushq movsl loop xchg retq loopne in mov movabs push adc rcll cltd and rex.W mov lahf in icebp sbb push outsl (bad) jrcxz rex.W loopne push xchg adc sti lret movabs or stc (bad) jrcxz jmpq addr32 cld cli mov mov jno (bad) rex.WRXB (bad) fadd xchg push loopne icebp xchg mov movslq loopne out fs cmc (bad) shl adc xchg mov cmp rex.WRX std mov push cmp (bad) xor shlb (bad) sti loopne mov xchg jo jl and insb (bad) loop lret jg or adc enterq cld (bad) (bad) or cmp xor xor jmpq (bad) mov pushq rex.WXB push mov rex.WRX fsubp mov (bad) jns adc add cmpsb mov push xchg movabs (bad) sub fistpl incb cmp (bad) or rex.W sub scas jae gs loope (bad) loopne bnd rcrb loopne cmc int3 add loopne outsb or add and mov push ja rex.W pop shll and loopne sub sbb sub lahf (bad) jle adc xchg xor out in and xchg jnp (bad) loopne xor jbe loopne jns mov sub jmpq sbb cltd loopne sarl test cwtl callq cmp (bad) xor loopne adc movabs (bad) and (bad) repnz data16 push loopne jle add sub rex.B outsl sbb clc xchg (bad) loopne rex.RB or loop hlt pushfq mov (bad) loopne callq (bad) jmpq mov mov callq (bad) cmpsl sub scas loopne cli insb or clc or pushfq mov jb jge xchg lret rex.WRX sbb in out and (bad) loopne test stos fisttpl in lret jae sbb insb hlt push (bad) xor push xor cmc icebp adc movabs in imul add jne cmpsl test loopne lret in (bad) lock (bad) (bad) xor jae rex.WX jmpw outsl (bad) and rex.WRXB cmp xchg mov ss or pop (bad) pop xlat icebp lods cmp add lret rex.RB (bad) (bad) xor loopne pop rex.X pushq ficompl sub rex.WRX xchg icebp and cli mov xchg scas push (bad) movsl jrcxz movslq rex.B mov cmpsl outsl (bad) std jmpq movsb in or jge mulb pop jmpq movabs lret es or rex.WRXB fnstsw jnp pop cwtl pushq and clc or (bad) in xchg rolb movabs (bad) sbb xchg loopne (bad) mov (bad) loop or scas (bad) test rorb add pop (bad) mov rex.WR in mov (bad) rex.X notb add push loopne cltd sub data16 outsb movabs cmp scas loopne rex.WR hlt rex.WX in (bad) jns (bad) xlat adc (bad) stos sbb loopne je (bad) jle sti (bad) loopne negb loope rex.R adc outsl movsl adc fmul jmpq cmc jp fnop add jl adc cli cltd rcpps out (bad) cli scas lahf icebp sub cmpsl xor sbb push adc lock xor jge in and (bad) jle rex.RXB gs or jnp lcall mov adc sbb jmp xor adc xor push stc loopne lahf in (bad) fcompl xchg loopne cmp stos in sub mov loopne jb roll retq sbb in mov cld xchg in (bad) cmpsb and pushq stos mov movsb loopne adc in loope and (bad) (bad) lahf ds jnp sub pop (bad) and (bad) push xor std mov (bad) insl add xchg and push lock cmp (bad) sbb (bad) xor loope lock cmc lret rcrl mov (bad) ficompl xor lret test xchg fs or (bad) insl rex.WRX sti andl stc (bad) jle push adc mov lret pop lahf sbb in xchg or mov (bad) (bad) lock sbb mov adc rex.B movabs (bad) (bad) lret push fmull or mov xchg test (bad) rex.RXB test (bad) rex.RX cmp cmpsb mov test adc rex.RXB popfq or (bad) adc pop in adcl cmp rex.WB (bad) (bad) and rex.R mov sbb clc jo movabs mov mov retq test sbb out mov and xchg sbb test push rex.WR rex.WRXB out (bad) add mov rex.WR in clc sti push movabs adc add xor sbb pop xor (bad) in addl jae pop cld ss and std movsl imul push add cld and lock and jae callq jg or iret cmp add sbb ja imul sbb cltd jg (bad) or mov (bad) nop test (bad) ss sub mov cmc and loope loopne and adc in ss sbb leaveq (bad) xor mov jne mov xor rex.WRX fs sbb sarb cmp cmpsb popfq incl and leaveq repz cs cs outsl lret pushq jo cmpsl adc or rex.W push je (bad) or (bad) (bad) pushq jmpq (bad) js ds rex.WRX add repnz sub ficompl std je enterq lret push sbb cmp or pop pushq cmc pop cmp xchg fbld (bad) test lcall lods xor in lret xchg (bad) mov mov xchg callq movsl and add jb movabs adc jae sarb or cs stos pop (bad) xchg pop rex.RX fs rex.W or add adc sarl fwait rol pop movslq iret loope mov and jmp jno xor rex.RXB rex.W push mov mov mov (bad) retq insl or or hlt xchg imul (bad) test shr rex.WX or imul fs or loopne push outsl (bad) retq and pushq (bad) mov mov sub pushfq mov fstpt jns and (bad) movabs prefetcht2 xor (bad) cmp pushq mov (bad) rex.WRB loopne (bad) or rex.WRB xchg vpcmpgtd pushq (bad) sbb loopne mov stc mov movslq scas rex.X test mov push jp stc sub mov cli mov rex.WR loopne xchg mov mov (bad) mov mov add xor lods jno out mov rex.WX (bad) cmpsl shll loopne sbb lret loopne int pop jrcxz rex.B movabs js imul nop add loopne lock xchg sub mov adc sbb adcb push (bad) mov sbb add sbb fimull (bad) movl mov rex.WRXB mov jge jae shl loopne (bad) cmp loopne xor pushq fnstsw push mov or adc adc sub (bad) mov or (bad) (bad) pushq and xchg fwait (bad) cli adc loopne int add cmpsl xchg in movabs enterq rcl (bad) loopne repz sbb sbb out pop jb test mov jbe mov sbb (bad) rex.WRX (bad) mov movslq rex.WXB lods add (bad) push lods (bad) gs in add popfq loopne sub add int (bad) xchg and adc or fwait rex.WXB sbb xchg adc shr (bad) xlat lock repz data16 mov xchg lret cmpsb (bad) int3 mov adc movabs (bad) mov imul jne rex.W jnp loope je xchg shlb cmp popfq mov adc lods (bad) sub add imul cmpsl cltd rorl rex.X push pop (bad) cli xor icebp rex.RX (bad) fst mov (bad) or sbb sub sub xor (bad) (bad) imul loopne mov je cwtl or fwait and roll pushfq mov pop push cld movslq jl jmpq add loopne outsl (bad) sbb loopne clc (bad) lret (bad) mov jns repz imul jmp mov hlt ds jns out xor sahf repnz mov loopne and cli (bad) sbb in (bad) movabs stc loopne out in (bad) and sti mov pop or pop cli jbe xlat and pop loopne push adc (bad) add (bad) loopne std int3 ja int jbe or callq add punpcklbw rcl rex.RB leavew fucomp sub fistpl sbb jno mov in (bad) rex.WRB jne insl adc lea sub or clc (bad) rex.WR cmp (bad) ja rex.WRB add lret jae push fistpl (bad) add fwait loopne xor movabs mov imul cwtl jmpq retq nop in cmpsl shlb loopne sub jb adc loopne (bad) jae rex.XB pop xchg rex.WXB jno push jb add xchg pop sub jmpq (bad) jo or (bad) movsb fdiv rex.R (bad) adc (bad) retq cmc cmpsb or js rorl mov pop xor (bad) (bad) pushq lods sbb insb out (bad) mov pushq out cmp in pop movsb ds rep sbb xchg in push jbe movsl movslq adc loope insl adc rex.WB repz (bad) (bad) add loop jno mov icebp (bad) pushq scas cmpsl loope rex.R jnp pushq lret sub cmp mov out movslq subb andl cmpsb rex.W and pop and and adc xor cmpsb out and sbb callq out stos sbb fsubrl sbb mov fmull sbb pop push fdivrs movabs push add sbb orl add mov and xchg (bad) pop and or outsb imul fincstp (bad) mov (bad) rex.WX es loop icebp ja cmp sti add out (bad) stos int3 cmc rcll jmpq movsb push enterq movabs jp out in mov or ja jne fwait outsb cmp ss in mov loope rex.XB mov jmp jge or rex.RXB mov xchg lahf push sbb cmp rex.RX in sub imul (bad) sbb mov jmpq add mov xchg movslq insb mov adc test rex.XB fninit (bad) (bad) mov popfq adc sbb (bad) outsb xor jo popq idivl or lahf jl pop adc fs jne sbb (bad) (bad) jmp or rex.WX pushq callq or addr32 (bad) and cwtl jmp or mov pushq sbb popfq mov add stos cmpsl pop mov out mov or stos pop (bad) jno pop mov adc and pop sub (bad) ja or cld (bad) xor mov cmpsl stc mov and mov push xchg jl (bad) hlt and sbb (bad) xchg or mov (bad) and testb push xor roll repnz add cmpsl and xchg rex.WRXB mov xlat addr32 ss rex.R push mov mov fldl repnz xor rex.B (bad) insb mov ds xchg loopne sar adc popq stc in imul mov mov jge pushfq rex.RXB rex.W rex.WRB es (bad) (bad) cmp sbb stc fbld cwtl loopne adc in loopne jnp rex.WXB pop sbb jne sub adc insb mov clc sub outsl cmpsl loopne xchg stos rex.WRB nop pushq test rex.XB pushq mov sbb rex.WRX stc test int loopne xlat test pop icebp mov fldt sbb js or sti jmp or clc int3 and movabs xchg add pop paddsb loope int es adc shr or xor add push cmp cwtl cmp adc sub scas loopne jge and stc cmc (bad) mov imul int adc add fwait (bad) mov sahf in push mov loopne mov rclb rex.RXB push imul cs rex.WRX add je sub out fdivs (bad) xchg scas xor mov iret rex.RB pop mov imull and out loopne mov fisubrl (bad) xchg cli retq (bad) loopne jmpq leaveq mov cmp lods mov movslq (bad) jmpq mov rex.WRX cltd fdivs hlt std repz sub lea lods loopne xchg (bad) callq pushq (bad) and loopne jnp xchg cmp rex.WRB jbe cltd add sti xchg xor loopne jns rex.X decl xlat iret cltd xchg jge rcll retq rex.W icebp outsl xor rolb int rex.WXB jg sub cld push (bad) (bad) xor (bad) loop imul (bad) jrcxz mov scas mov loopne scas (bad) and loopne pushq std jge movabs insb push mov (bad) rex.WX (bad) ror mov mov je sti jle pushw rex.R rorb cmp lock jnp lret stos subb movb in out rex.R leavew or (bad) or xchg cmpl mul movabs adc mov sbb jns xchg add xchg ror fwait mov (bad) fcoms callq shrb pop int xchg mov mov mov rex.X fwait retq loopne (bad) nop xor cli adc or scas or cltd or fs out (bad) (bad) or mov movabs cltd mov std rex.RB icebp and mov pop loopne lock out rcr adc icebp out xchg in (bad) repz pop loopne xchg movsl fldcw fmul sarl repnz movabs jb cmp loopne rex.W data16 mov cmpsb (bad) rex.WX loope mov imul repz scas and or (bad) jrcxz,pt (bad) cmpsl (bad) (bad) (bad) callq and push hlt adc pushq scas or scas xchg (bad) pop pop fisubl (bad) jb enterq pop rex.WXB mov adc adc movabs js leaveq xchg ja jmp rcrl jne bnd pop or imul repz icebp outsb mov mov sbb sarb mov sbb xchg callq std fstpt cmp cmp add push xor es jge xor adc add lods mov (bad) loopne fcompl fbstp movsb pushq rex.W (bad) movabs sub xchg or lock sbb loopne movsb xor pushq loope clc (bad) and sub loopne cmp rex.WR loopne cmp loopne and shl or mov or in movabs (bad) pop lods mov div stos sbb fcmovnb jrcxz cmp jg lock sbb std jne mov out (bad) test (bad) testb rex.WR cmp out (bad) movabs push jrcxz pop rorb movsl std enterq or cmpsb xchg mov pop push pushfq rolb (bad) insl cmp jnp cld in fucomi psubusw loope nop rex.RXB movsb mov fnstsw (bad) sti js sub test rex.WRXB cmp retq in mov xlat rorl (bad) cli push loopne int ja iret rex.WX rex fcoml (bad) in (bad) cmp cwtl movabs push or ds and fdivr cs rex.W (bad) xlat (bad) sti es (bad) (bad) sbb lret mov cmc sbb clc jb jrcxz mov xor push int3 leaveq test sarl jae or rcrb (bad) bnd imul xchg out (bad) mov (bad) xchg std nop loopne retq cmp (bad) mov lret cld adc mov test sti or in loopne rex.WR fcoml loopne gs mov movsl cli nop movabs loopne mov adc loopne sbb xchg vpsllw movslq cli ror (bad) loop rex.RXB fs movl mov cmp movabs add loop clc loop adc (bad) adc (bad) (bad) jae mov lret fisubl punpckhbw nop rex.B jrcxz rex.WRXB retq (bad) mov sub imul (bad) loopne fwait rep adc (bad) adc stos cltd add loopne pushfq pushq mov cld xchg jmpq in rex.RB loopne (bad) xchg decl movabs mov lods out adc (bad) test rorb callq mov nop je loopne out in stc pop jbe lret xchg xchg xchg retq movabs pushfq sub mov fldl add xchg loopne sub jbe (bad) outsb stc loopne xchg (bad) lods (bad) sub jno add push sub xchg jbe in lods loopne adc es push rex.WRB loopne sbb out and rex.XB leaveq adc in xchg cmp loopne or rex.WXB insb mov inc (bad) pop (bad) mov je (bad) mov add or fdivrp jb leaveq (bad) add (bad) loopne jrcxz outsb rex.RX test popfq cmp lret jbe (bad) (bad) mov xor and cmp (bad) and (bad) (bad) sbb imul jg retq loopne or data16 (bad) stos xchg addr32 in enterq repz loopne add movslq iret xchg rex.B and (bad) retq mov cli (bad) fstp mov mov imul xchg push jle cmc sti xchg lea jmpq fimul mov rex.WB and jbe or adc and rex.WRXB out bnd int loopne sarb lahf mov push rex.WX mov push imul or jmpq (bad) nop mov fwait jmp (bad) subl (bad) (bad) fidivrl add movabs adc clc xchg int neg mov rex.WRXB gs mov adc xchg add clc and adc (bad) fwait movslq xor xchg add jae mov rcrb mov retq add loopne enterq sbb (bad) pop xchg mov rex.WXB pop (bad) adc push rex.WR sar cmpb pop (bad) test nop rex.XB mov xlat jb jno mov (bad) xchg lret (bad) sbbl negb (bad) or (bad) pop push sub pop cmc xchg (bad) xor imul orl out mov adc jmpq inc (bad) rex.WRX rex.WRB (bad) test negb lret rex.XB (bad) repnz cmp jmpq sbb mov pushq pop pushfq add push sahf cmc dec push xchg pop sub imul (bad) mov rex enterq je scas and or rcr loopne mov xchg mov pushq shl push lock xlat je xor jno out adc cmp xchg clc mov xchg retq xor imul (bad) rex.X rex (bad) ss rcll int jbe mov fildl movabs pop insl rex.WRX add fdivp rex.WX cltd cmp out in ss adc fmuls (bad) loopne test mov xor jp popfq cli pop loopne stc faddl retq stos leaveq lods mov (bad) test test (bad) rex.WX sbb pop in adcl push int3 fwait sbb (bad) gs pop xor adc in lahf ror (bad) sti (bad) rex.WXB data16 rex.W sub loopne mov rex.WRX lock (bad) stc nop xor mov mov rex.WRB (bad) adc xchg and (bad) hlt pop ss movabs js xchg pop cmpsl or pop mov jrcxz (bad) mov clc rex.X (bad) jae bnd scas or pushq js fistpll (bad) jle (bad) cmp and int3 int3 sub adc cmp mov stc mov xchg scas adc lods addr32 pop rex.W fidivr push or sbb (bad) (bad) ss retq (bad) icebp movabs jl js mov mov rex.WRX insb add and scas or xchg sbb pop xchg mov mov (bad) xlat popfq sbb jnp sub mov in add cmpsl lcall (bad) xchg jne pop and pop sahf and lods sub mov jrcxz mov outsb lea loopne pushfq mov (bad) sahf (bad) loopne mov rex.WRX stc jg loopne icebp (bad) lock imull test hlt loopne push (bad) std pop lret sub add lea cwtl and rcr jns rex.WRB (bad) mov stc push mov icebp (bad) fldcw add or out scas rex.WRX pop movabs outsb loopne (bad) cmc xchg push or cld cli xlat mov lods mov pop movslq (bad) adc (bad) mov mov loopne roll (bad) loop jl fbld (bad) rex.WB sub in jmp repz fwait lahf test add push cld enterq gs jp or rex.WRXB nop add shrb test sub xorb (bad) stos mov movabs lret and decb jno int xor shl rex.RXB adc push mov (bad) and cmp xor sub xor repz sub sub rex.WRXB jl mov sbb std jmpq outsb lock loopne movsl rex.R rex.RXB mov mov imul loopne movabs xor jrcxz and mov js rex.WRB cmp jl xchg out mov clc callq pop loop addps cwtl loopne pop js (bad) (bad) imull jno or cmp rex.R icebp adc sub icebp test pushq fstps nop fdiv adc jrcxz movslq clc mov (bad) scas in mov (bad) and lea gs sub scas movabs or push in sarl push (bad) push add lret loopne (bad) mov loopne cltd in cld pop movslq scas mov rex.WR lock and jmp rex.W repnz cld mov push xor loop ds (bad) jbe rex.WX jbe lahf cmpsl add fisttpll lock rex.WRX loopne out gs or (bad) mov pushq xchg mov jl and xchg add mov stos out adc scas lock in out or mov test stos cmp (bad) rex.WRXB or jae std jbe pop add loop sti stos mov (bad) repz rex mov clc (bad) leaveq cmpsb mov rex.WRX sbb mov test fwait sub nop fwait in sbb push cmp cmp (bad) sbb retq mov jge cmpsl (bad) and sbb sarb sbb xchg mov mov add (bad) cmc test mov add fnop sbbl vandps shrb in fcmove pop je loopne add xchg pushfq push loopne int pop sbb and push outsb enterq scas pop ja sti jge pop loopne jbe mov loopne (bad) int std loope cmp test xchg lods loop xchg icebp xorl es mov (bad) icebp rex.X in rex.XB (bad) cwtl loopne rcrq js subl fidivl movabs rex.WR pop pop jp rex.R lahf adc in movabs pop (bad) popfq insb rex.WXB loopne,pt cmp (bad) (bad) (bad) xor mov and mov jl leaveq (bad) fidivl pushq pop out repz loopne iret (bad) and xor cmp cmpsb movslq or stos (bad) rex.R sbb pop mov pop loop add ds test lret jno ljmp clc sbb rex.RX rex.XB retq rex.R xor sub jle xor cwtl mov ja mov mov xchg loopne rex.X rex.WRX sub and jle and jg mov xlat (bad) sbb outsl js and pushq retq mov hlt jmp and push xor add ja (bad) xor fild jrcxz in mov movabs adc loopne (bad) lret gs incb repz push cmp adc (bad) loopne in fs lret mov icebp rex.RX mov loopne mov fucom retq stos fwait push (bad) mov sub retq (bad) imul mov pushfq decl lcall std (bad) mov mov (bad) mov scas (bad) loopne or test xlat loopne fcmovne scas rex.WX jrcxz (bad) js (bad) pushq test movabs pushfq scas adc enterq (bad) xor retq and stc xchg jrcxz adc push sti rex.W adc popfq mov jae hlt imul (bad) loopne (bad) push mov rex.WXB out insb jg jg ss cmp xchg fwait (bad) jge add in jrcxz imul jmpq cld rcrb mov test retq fwait (bad) adc add rex.W cmc pop loopne (bad) in retq rex.WXB (bad) retq or jae cmp out out push (bad) xchg mov push sti add lret movabs adc sub stc in jnp mov data16 addr32 mov test imull addr32 or cmp fwait shl rex.WR push (bad) mov rex.XB stos (bad) or rex.RB xor in fbld mov movabs jae decl xchg rex.R or xchg stos rex hlt xchg in xchg or movslq add or xchg cli rep ss xor je subb xchg push loopne add pop sub mov loopne (bad) push add test (bad) loopne (bad) xor loop mov pop mulb ja,pt int movabs push rex.RXB jbe callq movabs mov add cmp xchg loopne movsb pop in rex.RB rex.WRX cs rorb sti mov push pop test rex.WRX movslq int jbe movabs incl (bad) loopne jp xchg rex.B xchg in lret shll (bad) (bad) add jb and loopne or mov (bad) cmp shll add sub mov loopne mov (bad) in leaveq jg xor (bad) sub sbb lea clc movabs push add pop xor (bad) imul pushq je jne adc shl mov mov dec rex.W sbb pop fbstp movsl loopne cs sbb loopne rex.RX (bad) pushfq sub cmp popfq cmpsb or mov xchg imul test (bad) in fist cmp test (bad) cmp mov adc loopne (bad) test (bad) out (bad) xchg retq in pop cmp loopne int (bad) hlt xlat (bad) ds (bad) sar rex.WRX add mov loopne cwtl xchg (bad) in fsubr push iret out or cmp sbb repnz cmp mov (bad) push xor cmp adc sbb add sbb in adc mov fisub popfq icebp mov pop adc xchg rex.WR (bad) enterw (bad) jmp or retq cmpsb rex.WX jb and (bad) jns cmova decb jo icebp es fdivs (bad) gs jrcxz (bad) rex lahf pop push leaveq pushq xchg sbb out imul shlb (bad) jno repz in pop push std (bad) (bad) cmp mov iret (bad) sbb jns rex.WR add jmpq rex.W clc and fmuls callq iret xor add (bad) repnz jge sub lods jl (bad) movabs adc or scas sbb in cmp (bad) cli (bad) (bad) adc fstps (bad) in adc add jg pushq sbb and rex.RXB (bad) (bad) adc (bad) loope push jmpq adc addr32 sub in int3 and mov push adc rclb (bad) rorl push (bad) in or xchg and and rex.XB movabs mov (bad) loopne and cmp icebp insl (bad) pop add rex.RX (bad) movabs int3 fwait mov retq mov movabs pop int3 mov nop movabs icebp fwait loopne jg (bad) std cld jbe fwait lods loopne stc sub sub add xchg xor mov imul rex.RX or ja outsb mov stos loopne (bad) cwtl (bad) jle shll cs loop and in (bad) pop adc mov pushq adc fdivrl fwait pushq pop rex.RB cmp test out loopne and es cli sbb (bad) (bad) mov insb rex.RXB loopne (bad) fist push popfq loopne jnp (bad) jp enterq sub (bad) rex.WRX and loopne std mov fneni(8087 push mov mov push in iret loopne insl xchg (bad) and scas rex.WRX (bad) in jae fist movabs pop (bad) (bad) adc loopne jg push rorb shrd sbb loopne cmp rorb (bad) jnp fstl mov and jmp mov (bad) sbb loopne rex.WRB int3 (bad) jl xchg loopne test and movabs or cmp (bad) adc loopne jne adcl xchg sbb stos rex.WXB je pop rex.WRB sbb (bad) mov repnz and out mov or in and jno nop mov push clc mov pushq icebp push cli orl and nop cmp adc cmp rex.WX xor pushq decl int sbb shl mov (bad) outsl rex.WRXB jne loopne sbb and mov adc in fcmove pop jl insl mov jg movabs mov shll xor or rorl mov (bad) in loopne xchg lods or jl mov jne (bad) loopne mov sub in in sub cmp adc mov cli in rex.RXB rex.XB decb mov lods test push jo mov cmpsb and mov outsl stos mov rex.WRB jrcxz not and out add mov (bad) hlt mov pop insl push mov insb adc (bad) xor (bad) sahf loopne cli shl icebp iret push lods loopne retq xor lock fprem1 mov pop (bad) fnop loopne xchg and (bad) repnz test and mov loopne js xchg lret pop or mov pop adc stos add sbb es cwtl sub in rex.RX clc imull (bad) movabs movsb (bad) repnz and (bad) cmp fs adc sahf jrcxz mov sbb (bad) jae repz movabs cli (bad) mov iret xchg bnd cmp xchg out and cmp in sahf rex.WR mov pop or adc loop cmp rex.WRB fidivrl shrb callq fcoml xchg xchg pop loopne retq and leaveq enterq mov sub lock mov faddp (bad) sbb cmc adc and add (bad) jmpq loopne xor pushfq outsl outsb cmp jmpq adc pop pop fsubr (bad) in scas ss pushq jo xchg (bad) icebp adcb xlat mov jmpq sbb scas lods cmp clc mov (bad) stos insl inc hlt (bad) nop cld rolb fwait stos icebp xchg sub rex.WX insl (bad) pop push or sub xor imul clc xchg (bad) and mov mov adc pop (bad) (bad) jmpq mov mov cli clc lock adc movabs xchg cli decl (bad) (bad) cmpsb sti pop (bad) pushq mov sahf out cmc mov in xchg rex.W push jb (bad) shl jno adc or loopne rex.RB imul retq xlat mov rcll movsb imul and adc incl add retq in loopne xchg push push rclb insl cmp rex.X cmp idivb imul repz es rcrb jge rex.XB (bad) (bad) notb or jo (bad) hlt rex addr32 mov out mov fisubl loopne movsb adc cs mov repnz mov mov stos cmp shl mov lock (bad) fwait mov pop mov add (bad) std hlt retq xor or loopne adc lea nop mov retq (bad) or in (bad) or loopne cwtl and loopne jb je fnsave (bad) xchg stos pushq sbb jp addb or loopne repnz xlat rex.WRB sub add callq shll or rex.X mov adc fimull and jmp rcrl xor mov jle fdivl (bad) (bad) fstl outsl add insb rex.WRXB loop sub movabs or (bad) fildll mov loopne cltd jo lea push (bad) jrcxz (bad) push (bad) (bad) or mov loopne xor movabs (bad) callq push cmp (bad) loopne (bad) xor adc in jg and xor or cwtl (bad) mov fcmove outsl (bad) data16 sbb loope sbb test loopne or xchg sbb (bad) lahf je jg mov fistp pushq push sbb jno (bad) cli (bad) (bad) mov jbe adc je xchg cld loopne in adc xor movabs sub rex.WRX mov rex cltd fimul fisttp loopne rex rex.WRXB rex.WRB add in out loopne movsl sbb mov and (bad) stc adc or rex.RB cmp loopne fwait jmp rex.WRB jrcxz mov push mov (bad) scas jb rex.WRXB or or rex.W sti loopne retq xor sub lock (bad) popfq xchg in out cli clc rex.X gs in lods cmp loopne cmc rex xor adc mov movslq enterq lret pop pop jg fs adc test (bad) rex.X callq movslq pop notb test xor pop xchg sbb (bad) adc fstps jmpq cmp addr32 fwait adcb rex.WRX outsb mov stc xchg outsl ficom mov (bad) pop jrcxz cwtl pop mov mov movabs sahf sub xchg cmpl (bad) (bad) (bad) add loopne and cmp out movabs retq xor test clc xchg callq add hlt movabs cmc sti scas loopne (bad) mov add cmp cmp (bad) adc icebp (bad) insb pop (bad) (bad) xor (bad) mov sahf mov cmp mov (bad) mov (bad) mov and pushfq xchg xlat in fidivrl jns jo loopne pop mov rex.RXB (bad) loopne rolb sbbl mov rex.WR rex.WB mov or movsl rex.X out in enterq (bad) xor in insb shlb rex.WR loop mov sti xchg mov (bad) or xlat cmpsl sub cltd movslq jne fisttpl loopne lods xchg subl loopne sub cmp mov push jrcxz loopne insb (bad) push or loopne pop rex.WRB nop fsubp scas add mov loopne insl and sar mov mov int3 pop movabs (bad) (bad) xchg sub add loopne in xchg rex.W cwtl adc cwtl mov sub in rex.X xchg rclb movsb (bad) rcr jmp cld jne jnp rcll xor push enterq jmpq jo (bad) je push xor pop loop (bad) or and out pop in jo fsubr (bad) xchg retq mov (bad) cmc pop (bad) icebp retq nop out scas rex.XB (bad) mov icebp stos jb sub outsb fsts decl or jnp (bad) rex cmp jge sahf (bad) rex.WX jmpq and movsb stc or adc cs jrcxz pop (bad) loopne fsub sbb int xlat loopne je (bad) hlt xor test addl mov xor (bad) rorb cli (bad) incb push add rex.WB fidivl fwait sub adc mov loopne movabs in sub lret cwtl loopne pop addr32 (bad) hlt or xor shl add sub movabs lock fdivs mov jmpq add rex.RB rex.RX rex.WXB mov sti (bad) in rex.WRB callq loopne mov movsl shl (bad) addr32 rex.RX incl jo cmpsb add mov sti test mov jg pushq sbb pushq loopne subl movsl divl xchg in xchg movabs es loopne cmpsl pushq retq stos in in mov addr32 pcmpgtw push xchg (bad) mov (bad) mov stos jg fstpl es insb mov data16 popfq (bad) (bad) es rex.R xchg mov shl push sub test xchg sbb stos lret mov lock fisttpll loopne adc stos scas movabs pop sub mov xchg sar fsubs loopne push stos cmp xor or iret frstor mov (bad) loopne rex.WB pushfq (bad) fs and mov roll retq add hlt cld rex.RXB fs add or popfq (bad) loope scas outsb loopne fs rex.WX test loopne (bad) mov mov mov rex.WRB add int loopne hlt nop imulb mov (bad) pop pop in sub (bad) mov pushq (bad) (bad) adc mov adc pushq jo lret repnz cli (bad) popfq add (bad) mov (bad) sti sar adc sub (bad) rex.W scas pop push push mov (bad) movsb out mov adc and (bad) jns sbb repnz lahf (bad) out rex.WB mov sub shr sar ss sbb push xor cwtl clc jo loopne or or (bad) ljmp iret cmpsb sub sbb sbb and movsl popfq callq out ja mov mov sahf negl sbb or rex.W cmp movabs sti sbb mov fisubl pushq test scas loopne cli pushq fnop int and movslq lea xor cmp jrcxz out insb loopne adc sbb (bad) loopne cmpsb cmp mov test (bad) jmp cmpb mov shl pop outsb pushfq in enterq loopne jne mov (bad) (bad) rex.WRB cmpsl movabs add rex.WR fadds rex.WRXB xchg andb movabs stos (bad) sub loopne fsubrl in xchg cmc rex.RB fisubr outsb cmpsb (bad) fstpt rclb or rex.RXB (bad) loopne out mov pop xlat sti push jo jne adc ljmp and adc rex.W sti xchg sub loop jne xlat (bad) movabs cmpl loopne out scas rex.B je add xor pop movabs loopne jae outsl jmpq (bad) (bad) loopne rolb add loopne push sti in cmp stc xor insl mov icebp imul sbb xchg fnop incl mov in sub xchg push (bad) loopne repz movslq xlat loopne add mov (bad) adc loopne shr adc jns mov pop rex.RB loopne cmpsb andl (bad) sbb loop pop loopne cs xor fucomip cmp mov rex.RB retq xchg fwait out or loopne lea pushq push pop loopne cmp stc scas add rolb (bad) or in loopne xchg insl fmull adc (bad) test leaveq loopne out xchg mov js loopne and (bad) pavgb rex.RB loopne push or and and movabs loopne movslq mov loopne mov lahf fsub gs rex.XB rex.WB loopne adc or pop jmp xchg and fisubl movslq cmp mov (bad) mov (bad) (bad) std jnp add (bad) loopne int3 test rex.R incl scas add xchg cmp int rcrl (bad) pushfq and movsl (bad) loopne int sub js jmpq and xor mov pop movabs push (bad) add test stos rex.WRX pop sbb movabs mov addb loopne out cmp jmpq adc pushq shl jne int3 or jno pop add mov cmp sbb loopne popfq movslq movabs cmp fs pop mov (bad) fwait cs (bad) loopne xchg es sbb ds sbb movabs mov xchg (bad) in rolb in or cmp in addr32 int3 or pop (bad) stc (bad) mov (bad) rex.WX adc imul sysenter adc imul (bad) sbb mov lret icebp imul or cmp (bad) not adc and pushq sahf (bad) (bad) cmp xchg rex.RX iret jns popfq jo push lods jmp insl (bad) xchg fcoms adc (bad) movabs pushq jns iret rex.RX sarl mov lret out test int3 movslq hlt (bad) pop sub cld ror rex.WRXB test insl js repnz (bad) mov jmpq mov rcrl sbb cmp fistpll (bad) (bad) (bad) jmp in popfq in test scas jmpq xor sbb sub mov jl rex.XB outsb or lahf shll icebp std jg test jge push stos fwait clc in pushq mov adc pop (bad) and insl pop fwait or iret loopne movsl rex.WRX (bad) mov lock (bad) xor pop (bad) mov movabs int3 out mov sbb xchg sti (bad) or add lock rex.WXB rex.WXB fistpll in (bad) (bad) cmp (bad) adc or cli icebp addr32 pop (bad) scas and fiaddl mov cltd mov mov (bad) rex.WX gs (bad) callq lahf cs mov (bad) (bad) cmpsl or fucom lea pop push fwait add test xchg (bad) (bad) mov cwtl push pop jo jl imul adc (bad) sbb adc adc adc sub push shll xor mov adc in push cmp cld pushq xchg jae add nop add (bad) or fimul adc scas movsl loopne sub loopne adc (bad) pop loopne test xor push (bad) loopne iret out roll repnz std in rep cs or mov stos cmpsb sbb insl xorl xchg retq pop lret (bad) leaveq xor (bad) mov in mov jg loopne mov and loopne and fwait (bad) popq loopne outsb mov mov or xchg jns sub gs loopne sarb (bad) (bad) sub (bad) mov loopne rex (bad) xlat movslq (bad) adc pop scas rex.RX stc fs fsub lock cmpl and add mov and pop pushq or (bad) xchg stc fildl cmpb movsl xor xchg (bad) pop rex.WRXB jge push in (bad) rex.RX mov or rex.RX imul adc (bad) lock (bad) (bad) leaveq mov or out test notb ja clc adc and jo (bad) or retq adc lcall xor sbb xor (bad) cs lret mov in (bad) gs sub out and test sbb ds or fwait test or loope and pop and mov xor imul adc (bad) adc and loopne adc pop pop xor movabs add callq stc scas rex.WRXB rex.WR outsl (bad) xchg in mov (bad) xor (bad) pop rex.W enterq loop or pop movslq rex.WX out adc jp out movabs or repz cmp cmp xor pop pop (bad) (bad) cmp (bad) jp push sub ficompl addr32 (bad) movabs (bad) loopne (bad) xchg mov rex.WRX mov fldt ja out or rex.WR in jo pop (bad) xchg mov pop loopne rex.B fsubrl mov fsubp sar (bad) pop xlat leaveq push jmpq cltd cmc sti xor cli and sbb mov leaveq xchg jae outsb jb add incl (bad) sub out enterq addl fisttpl jns sti vrsqrtps mov loopne pushq xchg add repnz mov (bad) retq sarb out and std and push test pushq data16 sub push adcb loopne stc sub mov sbb fildl fiaddl loopne and (bad) pushq mov xchg push xchg shr mov xchg loopne pop out and sub adc (bad) movsb mov jae add movsb mov sahf mov in cld out (bad) data16 add test stos in or xor pop (bad) mov fucomp loopne fist int3 xor (bad) pop adc loopne adc and add movsl adc (bad) jg fsub clc (bad) rex.WRXB lahf (bad) lods loop mov inc out cs sub outsb jnp test (bad) js in cmp mov pop in lock cld sbb movntq push xor or push in cmp jb xchg subb jrcxz xor jns jle mov ficompl (bad) mov cli icebp pushq enterq lods adcl sbb xor (bad) rclb (bad) adc adc sub and add retq jb pop out cmp adc sbb (bad) movslq sbb rorl adc xchg mov je lahf insl jge outsb (bad) add movsb push leaveq cmpsb cmp sbb lods lods add (bad) (bad) je (bad) (bad) rex.R repz je insl pop (bad) jmp mov punpckhwd movabs mov xchg ss pop enterq cmpsb sti jg pop adc stos (bad) adc cwtl cld xor (bad) lahf hlt mov test loop out rex.WRX adc repnz rex.R (bad) adc sbb jbe (bad) xor jmp mov je sbb pop popfq pop pop stos repz sti jge movl in jb int3 scas fs shr movslq (bad) lods jnp mov outsl (bad) jo adc rex.WRX mov xor mov jle out stos lcall and lock xchg rex.WRX (bad) push ja fistl fwait in (bad) es rex.W faddl jne lods out add test callq data16 fnstenv lahf repz mov (bad) (bad) (bad) rex cmpsl xor pop (bad) (bad) adc sub movabs pop sub movsb xlat (bad) pop and addr32 xchg (bad) cli jns lret in icebp test push div mov sub fnstsw (bad) stos movsb pop add movslq in popfq test sbb add test jg fiaddl sub mov sbb int3 outsb xlat mov scas rex.RXB fwait sub ss sti rorl loope and mov (bad) jno in fcoml jmp popfq fcmovnbe sbb (bad) cmp frstor xchg and out sbb lods test (bad) stos or xor or (bad) xor cmp rcrb movabs (bad) ss sub retq (bad) jae (bad) or sar lock sbb loopne in xor sar (bad) add (bad) fdivl mov xchg lods pushfq cmpsl (bad) mov lock roll rex.WRXB fucom lret fcompl rcll ja jo icebp rclb or cli sub in outsl mov cmp iret pushq and add mov xchg outsl (bad) add cld (bad) (bad) and mov cld add sbb pushq and rex.WXB lahf icebp fldt add jbe xor cwtl hlt sbbb stos (bad) xor (bad) jns pop sbb sub lods popfq cmp shlb or add xor fisttpl sub xor ss sbb mov cs out iret push insl mov xchg pushq jo mov sbb mov adc cld int3 out xchg sbb movsl rex.WB fs cltd lock xchg fsubrs adc in cmp mov pop out testb rclb and (bad) jrcxz scas pop (bad) rex.WX sub xor xor fist data16 sub shrb insl addr32 bnd ja (bad) jbe xor add orl int adc fdivrs cmpsb pushfq clc rex.WRXB cld (bad) and and sub loope (bad) adc popfq xor movabs sbb pop lods (bad) jb movslq (bad) jg mov mov and movsb (bad) repnz xchg adc xchg mov mov and mul push iret (bad) cmpsl add sahf cmp sub jle scas (bad) or sbb xchg out callq sbb xchg add adc rcrb adc lahf mov jrcxz mov movsb and push (bad) loopne js (bad) mov xchg mov (bad) loop xchg cmp rex.XB push enterq (bad) out retq scas or sub (bad) (bad) mov retq rex stc sub jg adc rex.WRB (bad) movslq js leaveq incb jl cltd lea lret fstpt decl xchg rex.R pop fsub sbb loopne repnz loopne push testl rex.WRXB addr32 sar scas inc lret mov sub xchg push jmpq lret fcoms cltd add push pop sbb cmpsb rex.W movsb xor sbb (bad) (bad) sub jrcxz callq lods (bad) (bad) rex.WX fwait jg (bad) and fmul fidiv clc mov xchg (bad) rex.WRX shrb stos add jmpq push (bad) sbb rex.RB test jbe xor adc imul fimul js rex.WRXB pushfq jbe,pt rex.W rex.RX add mov mov pushq (bad) in sbbb loopne sti (bad) sub cld jle xor add lahf lods jp jmp mov pop or (bad) movsl mov scas push cmpsb sti sbb (bad) mulb int3 xchg je movabs xlat mov rex.WX rex.WR mov push mov and sub rex.WXB rex.RB adc test (bad) rex.W xchg xchg loopne (bad) data16 fs movsl and jno std and mov cmpb incl sub xchg and push add enterq lea add (bad) mov cld jg jno test push and cmp lahf (bad) (bad) cli or movabs mul jp and test sbb (bad) movzwl (bad) jno mov xlat mov in pop je and (bad) loopne jle push rolb mov loop ja out scas retq mov add loopne rex.WR xchg mov add sub push imul add stos mov loopne add cld out hlt loope sub (bad) cmpsb fsubrl or cwtl movabs je movsb test rex.WRB mov (bad) test frstor rex.WR xor (bad) in jns adc mov jge xlat test lods callq out fstp in in fisub andl rex.R mov (bad) or rolb mov (bad) imul jmpq ror sbb leaveq mov stc rcll clc (bad) mov (bad) mov cmp pushq cwtl sahf and adc enterq mov jnp loopne loop scas xor push rex.RX lret test jae jmpq adc adc (bad) stc loop movsl rcr mov (bad) xchg iret movabs mov insl ja mov insb fnstenv (bad) movabs cmp adc roll fnstsw pop cmp cli sbb popfq loopnel (bad) rex.RX scas movslq loopne jnp cltd xor sar (bad) mov fwait addr32 scas add rcll rex test subb mov stc and or xchg fsub sbb lock lods mov not add pop in std (bad) stos movl (bad) mov shrl sbb mov iret lret orb testl mov rex.W fdivl pop mov xchg callq rex.RB add push mov (bad) in jmp repnz rex.X mov jnp mov jns lret lods or add sbb (bad) mov int3 iret (bad) xlat rex.WRX insl pushq jp (bad) jne fisub out clc mov out or int3 movabs (bad) sub mov in movabs jrcxz (bad) xlat or stos sbb scas callq retq adc mov lret push insl lret rorb sub add (bad) rex.RX push fidivl lock or mov add (bad) mov test push fldcw mov lahf subl movabs cmpsb cmp jns ds add xor movslq or and test imul (bad) rex.WRX (bad) mov lods xlat lods pop cs fwait lea adc (bad) mov jo cmp test enterq movabs movabs retq je cli pop jl mov sarb loopne stos (bad) jge (bad) or out xabort and (bad) jmpq (bad) lock test sbb rex loopne hlt xor loopne lret out (bad) fstp push and sub retq mov imul and add loopne push rcr add jl test pushq mov and rex.X loopne push jno jmp xor loopne cmp insb loopne rex.WRXB xchg pushfq out loop rolb in movabs decl sub loopne addr32 xchg push sub sbb (bad) fcmovnbe push rex.B gs jg (bad) sbb and (bad) mov (bad) loopne fcom xorb cltd xchg icebp (bad) loopne rex.WXB enterq loopne (bad) jrcxz leaveq loopne (bad) rex.B orb sbb movabs push stos fisub jo cli callq fnsave test add fistpl leaveq loopne or addr32 movslq ljmp push js jp movabs stos mov loopne in movslq or adc or in movabs popfq in pop rex.RX es movabs out (bad) in push movabs (bad) int add movabs xchg xchg mov sub (bad) xchg rex.XB or jb ficom sar adc xor sub loopne xchg (bad) (bad) xchg jl sbb movl loopne ss or jge (bad) sub (bad) movabs add movabs sbb loopne std or xchg jg sbb retq xchg jrcxz hlt and out (bad) jmp jo (bad) decl in and add push test (bad) lock (bad) fmul lret or (bad) loopne stos imul loopne xchg and xchg rex.WXB sti shrb movabs fidivrl pop (bad) out mov (bad) (bad) rex.WRXB and xchg rex.WRX xorl sub (bad) rorl push sti mov lret (bad) mov loopne gs xlat xchg mov rex.WRXB cmp enterq (bad) shlb mov ja xchg mov retq std (bad) cld sub (bad) mov pop fadds jb pushq sti jrcxz loopne adc loopne rex.WRX mov movabs xlat or (bad) jo loopne mov or rex.WRXB mulb loopne rex.WB xchg es popfq rex.WRB fiaddl in xlat mov stc in (bad) pop ss loope adc mov mov fnstsw push cmp (bad) xchg jrcxz loopne and out mov movsl rcl fidivrl (bad) push stos in (bad) mov pop outsl sbb in rcl push (bad) jno jg test fsub stc rcll fildl loopne pop xchg mov incl (bad) movabs (bad) mov xchg adcl loopne pop enterq lea (bad) (bad) jns loopne not pop retq jno xchg loop lret (bad) mov lahf out push loopne fildl adc add (bad) movabs fstps sbb test push lods mov loopne hlt mov lea pushfq mov jbe xchg loopne rex.B repnz (bad) je mov adc (bad) (bad) cmp jg jl pop test (bad) sbb repz scas lret rex.WRB or sti sbb cmc loopne outsb in movabs push jge lods hlt movsl retq (bad) adc cli jmp fstps loopne xlat pop (bad) imul rex.W sub (bad) mov ss clc rex.X fcomi jo xor add add pop movsl adc sbb (bad) mov decb movabs mov shr fs and rex.X jmpq rex.WRXB mov (bad) jbe (bad) out out pushq loopne mov out sub loopne mov rorl jg cli sbb jnp (bad) movsb repz cmc loopne sti cmpsl mov jg jae nop loopne xlat pop shlb fucomip rol mov fisttpll cmpsb mov (bad) enterq or jne fs mov add (bad) push (bad) and add loopne xor cmp push jmpq fwait cmc rex.WR loopne cmpsl xor frstor out mov push (bad) and mov (bad) loopne sub mov jne sbb jmp outsl mov loopne ds sub xchg scas loopne add (bad) sbb adc addl out xchg pop lahf rex.WRX cmp movabs pushfq or add push sbb mov push (bad) or rex.RX mov (bad) jo vmovsd adc rex.XB push rex.RB jrcxz adc (bad) sbb in (bad) in insb and (bad) xor shll mov insb jb push mov xor insb iret mov insl sbb icebp gs mov (bad) (bad) jg rex.B outsl movslq jl rex.RX (bad) out sbb xor test or jns xchg mov mov leaveq (bad) adc jmp jbe rcrl (bad) std push (bad) sub (bad) pop mov mov mov icebp in rcr in (bad) lret movabs movb cli pop add sub out (bad) test movslq push movsb rex.RB mov stc jle adc (bad) mov rex.RB int out jns adc (bad) rex.WRX iret incl rclb adc mov jns rex.W rex.XB pushq movslq (bad) (bad) outsb or loopne incb (bad) loopne add adc loopne icebp cmp movabs icebp fdivrs (bad) fistpll retq and push jo and rex.X lods test mov outsl pushq adc loopne notb mov xchg icebp and pop jnp rcrb loopne (bad) (bad) mov xor out imull xor loopne adc mul test in sbb push loopne xor fs (bad) loopne mov loopne pop lahf (bad) int3 test (bad) movabs (bad) jrcxz rex.WR xor (bad) mov (bad) jns pop rex.WX loope es and sbb cmpsb jp fcoml shrl shll movabs scas je andb (bad) callq jle lret mov mov jmp movabs rex.R push (bad) jg jno in test or loop (bad) loop test retq mov or repz adcl rex.WRB jnp xchg jne and sbb jmp sbb cld rex.WXB in (bad) (bad) and out fldt ds mov xchg mov ja mov and (bad) fs movabs lods adc add fildll (bad) pop rex.W fwait mov in (bad) sub icebp fldt (bad) sbb mov rex.R mov (bad) pop test jrcxz sbb jrcxz sub loop (bad) clc loopne (bad) mov negl (bad) (bad) scas adc cmp cmovle sub sbb loopne insl adc mov out cld cwtl add mov jrcxz xchg xchg cli nop push fisttpl ss test movabs cmpl push add fs and (bad) es enterq mov fstpl ds mov sub in icebp mov movsl testb (bad) adc popfq (bad) enterq movabs clc insb or (bad) hlt rex.RB push sub sti loopne nop fnsave push (bad) insl (bad) loopne ss (bad) jno push lret (bad) mov movabs xor (bad) fimull loopne cltd imul in xor movsl retq mov (bad) movabs (bad) (bad) stos pop mov pushq pop clc fmull xchg shl and mov loopne push cmp rorb mov (bad) rex.WXB repnz or repz (bad) mov jno sti (bad) fchs movzbl xor shrb movsl cld lret mov cs (bad) mov loopne outsb pop xchg loope (bad) jg adc in push clc sahf xlat sti js,pt jmpq xchg nop nop (bad) add repnz pop push in sbb cli pop loopne sarl loopne clc (bad) xor es callq (bad) cmp ja cwtl jne cmc loopne orl out (bad) stos (bad) icebp js cld fsubs or pop (bad) test and inc sbb mov test jmpq sub (bad) movsl (bad) sub pushfq (bad) (bad) in sbb ljmp xchg xchg shll addr32 pushfq int loopne push mov mov xor jae and jbe (bad) pop movabs cltd cmp or mov retq insl cmp (bad) jno loopne (bad) pop push sub sub repz lret in or incl imul xchg pop loope rex.WRXB jp push lea (bad) (bad) jno cld sub (bad) push xchg or imul cmp xchg jo xor adc mov ss movabs sbb jb (bad) (bad) xlat rex.WRX cmpsb rex.WXB loopne repz mov (bad) mov and jmpq (bad) vpmovusqw (bad) std loopne sub adc rex.WR movabs outsl (bad) callq pushq cmpsl (bad) jae in push (bad) movabs rex.RXB (bad) cmp loopne (bad) or in jrcxz push addr32 movsb retq (bad) sub loopne mov jle loopne rex.XB leaveq out cmc ror (bad) fucom mov icebp rex.XB xchg sbb rex.WX cmc (bad) add (bad) jge push add fmull loopne rex.R (bad) pushq (bad) loopne xor rex.WRXB jmpq fnstsw sub cmp mov xchg add rex.WR decb rex.WXB scas add scas loopne rex fsubr int3 mov outsb ja mov push cs movsl loopne enterq ss pushq and iret (bad) cltd or mov lods rex.X fs mov sub (bad) scas jg mov packsswb (bad) pushq ja jg clc sbb (bad) mov loop (bad) cwtl (bad) jmp (bad) push adc mov sub adc lods int movabs cmp lret (bad) (bad) (bad) (bad) (bad) (bad) mov adc pushq mov sahf fisubl jae push mov jle in sbb sub adc jmp movsb stc rex.WB jbe sbb sbb jae push (bad) mov mov fwait xor add push mov pushq sbb test or rex.WR dec stos mov insb add sbb shll (bad) xchg loopne sbb (bad) (bad) jno adc nop (bad) lods in sub sbbl imulb push sbb (bad) rex.WB insb pop (bad) fmul retq xorb (bad) nop rex.WRX (bad) cmpsb mov lock sbb adc xchg clc (bad) addr32 leaveq stos ja movsl lods fcoms fs icebp sub sbbl std out cli loop add cmp mov or fs outsl test int push and mov (bad) sbb (bad) adc sahf xor or loopne (bad) fsubr fidivr mov loopne jns int3 icebp mov rex.WX (bad) jmp push jae jmpq and (bad) and gs movsb (bad) (bad) mov pop (bad) ja or or movabs (bad) sbb outsb or sbb addb jrcxz movabs sub or or pushq add sbb and fimull (bad) out (bad) sbb movabs mov rex xor mov loopne insl (bad) add loope (bad) and xor or sbb and rex.RX sbb cmp iret pop jrcxz (bad) jg fsubrl (bad) shrb jg xor callq stos cmp and (bad) retq cmp (bad) (bad) je lods loopne out cmp or out mov (bad) in xor mov loopne mov rex.W push loopne popfq negb decb fildll or stos sbb sbb loopne gs test loopne imul lock fstl xchg (bad) in (bad) or pop jne loopne adc mov in push imul loopne pop mov xchg loopne (bad) rex.WXB sub movabs cld loopne xor pop adc in (bad) cwtl cmp cmpsb (bad) leaveq jno movslq jne lret rcl mov mov xchg (bad) jp in and mov jb jge or adcb jae sbb adc fistl scas jmpq in jo mov cmc fcmovnu pop loopne rex.WB movsb test xchg loopne int movabs rcl fdivr subl sbb (bad) loope and loop add xlat loopne shrl jp push cmc loopne mov rex.R lods lret clc (bad) loopne jbe movabs (bad) sbb mov (bad) loopne sbb in cmp rex.RXB pop add fcmovbe lret mov rcrl sahf loopne pop push pop and (bad) cmp sub push (bad) xchg rex.RB push (bad) push push (bad) adc icebp (bad) orb rex.W hlt lock in rex.RB jp cmp lahf clc cwtl movsl xchg test fsub xor sbb sub or (bad) loopne stos cmp in insb (bad) retq gs movsb pop xor (bad) cmp ja js rex.XB jge imul cmp loopne and in jo and (bad) out pushq pop (bad) shl (bad) adc (bad) in clc movabs nop (bad) adc jbe loope adc test (bad) mov cltd loopne imul (bad) clc fadd (bad) (bad) push cmpb lahf lcall rex.WRX add movabs addr32 mov mov xchg scas shll (bad) sub add loopne movsl rex.WRXB je pop (bad) scas jno mov movsb (bad) lahf shrb jge mov xor jae rex rex.WX adc adcl sub or mov (bad) xchg mov xor rex.RXB loopne cmp movabs movabs iret fdiv movabs addr32 or rolb in or sbb loopne (bad) (bad) loopne ja clc fmuls sub cli jmpq push (bad) (bad) imul sub mov movsl lret lods loopne (bad) (bad) push rex.WXB and mov and fneni(8087 cltd (bad) jg cwtl sahf or loopne test mov hlt xchg ja enterq addb cwtl sbb callq push mov ss in cld adc push addr32 jl mov sub (bad) js mov rex.X rex.WB rex.WXB xchg jl (bad) ror cmc in loopne adcl xchg int3 rex.WB sbb (bad) stos test mov jne movslq or (bad) rex.WXB xchg scas test xor pop xor push cmp jl jnp jmp (bad) cmp loopne iret lods in cmp (bad) cmp add (bad) lret or adc push in rep data16 add xchg fnop outsb rex.WRB jnp xchg (bad) mov jns leaveq lock loopne (bad) fucomp mov and loopne hlt mov (bad) (bad) movsb ja xchg mov rex.R add loopne mov fdivrs loopne and cmp mov or xchg (bad) push xchg shll mov rex.R xor loopne jo lahf pop xor (bad) fs rex.XB jl sbb mov mov rex.WRX rex.WRXB rex.B mov movsb lret (bad) jge adc movabs cmpsl outsl cmp (bad) jo loopne (bad) scas leaveq rex.WRXB (bad) in mov cld (bad) xor cvtps2pd decl incb (bad) jp and mov mov pop adc cmpsb mov andl jl mulb fcmovbe xlat fsubs cmp mov pop pop outsb cmpsl loopne int3 mov lods adc cwtl xchg jmpq mov jo jae pop fucom imulb mov add (bad) (bad) std rex.XB sbb loopne jmpq loop or push mov in insl cmpsb lock pushfq cmp sti (bad) std loopne in rex.WR (bad) roll cmp pushfq retq loopne mov fbstp mov add (bad) and insb or cmpsb sbb rex.WX (bad) rex.RX outsb jns push adc xchg sbb jmp sbb (bad) out (bad) sbbb testb hlt rex.WRX (bad) cmp xchg add jp movslq sub rolb (bad) jns shrl rex.WR rex.WXB repz int ja or retq (bad) cmpsl pop inc in test sbb cmp push (bad) movabs in insb adc movabs fldl (bad) jo cmpsb xchg (bad) in (bad) cltd add lcall (bad) rex.RXB outsb in jle movabs enterq sbb jo rex push sub movabs push (bad) rex.RX stos stos mov nop (bad) adc mov ds jo pop rex.WXB loopne rorl and rex.RB jp loop loopne test adc or (bad) imul mov out jno jae mov out test loopne je mov jns outsl nop in (bad) outsb loopne jae stos in push loopne std (bad) adc jmpq and cmp loopne or mov sub rex.R in (bad) loopne sbb lcall or jno mov sbbb loopne add retq (bad) rex.R sub xor andb in adc loopne rex.WRXB rex.B (bad) xchg jne rex.RXB rex.RB loopne loop in imul clc add out movabs sub (bad) jge rex.WX or and rex.WXB leaveq mov in cmpsl imul jge (bad) push stos cmp xchg rcll in lods movabs adc movsl cld sbb movsb xlat xchg loopne rex.RB cmp scas xchg (bad) rcrl rex.WRB jno cltd mov cld sbb or mov rex.X (bad) pushq in mov mov add cmp rex.RXB fist mov retq mov rcl xchg test loopne pushq lods mov loopne fdivl and loop outsl fistpll fucom popfq mov adc outsb xchg loopne (bad) sub pushq icebp pop mov or cld jl repnz pushfq (bad) (bad) rcl in decl sbb pop fadd xor repnz (bad) pop (bad) stos adc or rex.WXB test jp lahf pop shrl lock lahf jmp mov and sbb fistpll loopne jb (bad) cltd cmp movabs fsubrp fbstp mov (bad) jne sub mov es test (bad) lret imul xchg cmpsb loopne sub rex.WRB jno loopne sub adc jg ds fninit jno cwtl repz jne (bad) fildll mov enterq (bad) (bad) jo (bad) (bad) (bad) retq cmp fdiv sahf loopne cmp mov pop cli pop sbb mov ja (bad) int test mov (bad) shl jrcxz jne pushq out loopne rol sub or cmp (bad) loopne adc mov retq xor jo hlt rex.B add loopne stc rcrl xchg jmpq (bad) jns jg jb scas (bad) jle fdivrl loope rol movsb lea cwtl jmpq stos (bad) jae cli cmp sbb mov test (bad) gs pop fisttpl shr lods and rex rex.RXB rex.R adc data16 rex.WB (bad) fldt gs mov xchg loopne fstps sbb mov (bad) mov callq mov mov test cmpsl (bad) cmpsl icebp (bad) cmp loopne pop decb xor mul push (bad) movslq jne data16 xchg mov sbb mov mov and fisubr cmp or (bad) loopne pop mov or mov loopne data16 adc xlat sbb je sbb jae (bad) add xor cmp jg sbb loopne or xchg xlat push rex.W xchg data16 stos jmpq hlt and or push outsb ja rex.WRB (bad) push (bad) jnp (bad) push sbb scas callq (bad) xchg out or fwait jge mov movabs jno (bad) mov (bad) mov (bad) sti (bad) xchg cmpsb ficompl xor and rex.RB (bad) data16 loop adc mov mov add push jmpq sbb (bad) xor scas jne in add sbb sbb sub push callq hlt rex.RB cs fnop (bad) loopne in xchg retq lods or test jo or loopne (bad) rcr icebp xchg outsb loopne mov data16 mov loopne push rex.WRX or jmpq and repnz stos mov xchg jle rorb xchg icebp lea fcompl pushfq and shrl jb or icebp mov cmp sub lret test sub iret cmpsl movabs in hlt (bad) mov xchg out xor movabs xbeginq retq (bad) cmpsb or (bad) ss and and and (bad) pop loopne jbe out sarl (bad) mov (bad) xor xor cwtl scas loopne addr32 sbb (bad) jo jae enterq sbb insl and pushq add (bad) and cmpsl mov pushfq (bad) out mov insl stc rex.WB loopne jnp jo mov (bad) in mov lea movabs push js cmpsl mov xchg xor or mov xchg repnz scas rex.B callq dec cwtl xor scas cmp test xor jp (bad) jmpq loopne sub (bad) lods js or mov test (bad) iretq cmpsb jmp jp fmull (bad) mov pop (bad) (bad) mov orl jo movl sbb sbb jb xchg test loope xlat xor and (bad) popfq mov jne pop in jbe (bad) rex.W jmpq sbb nop jmpq (bad) shl (bad) mov and lret mov in sbb sbb incb cs pop (bad) mov icebp gs std xor push out mov add pop enterq loopne out xorl mov rex.X add lahf (bad) and (bad) data16 scas rex.WB addr32 movslq and std loopne fldl (bad) loopne movabs (bad) rex sti (bad) lret mov in adc rex.WR cli (bad) pushq data16 lret loopne in shl cmpsb int3 add loopne jb jbe insl ficoml lods sahf sbb xor (bad) (bad) in fwait sub (bad) jge js loopne js add loopne mov rclb icebp test fnop jl leaveq xchg sbb (bad) cli mov sub add (bad) sub (bad) fidivrl (bad) notl adc pop cltd jb lods lea imul loop (bad) nop (bad) leaveq (bad) dec xchg sub fnop and (bad) jb mov (bad) (bad) (bad) rex.WRB jns (bad) sbb loopne lods xlat pop sbb hlt fistl scas or xor icebp or fild imul rex.W (bad) lock movabs std sbb fldl cmc addr32 jmpq fistl movabs pushq movabs mov pushq mov and ds ljmp movabs decb imul or jmpq mov jg xor mov insb loopne sti imul xor je mov data16 push gs mov (bad) sahf (bad) (bad) (bad) and (bad) nop adc sub lock (bad) jnp (bad) repnz stos rcl loopne enterq (bad) loopne or loopne out repnz movabs callq std cmpsl cmc (bad) jmp ficomp sub xchg (bad) lods sbb xchg in xchg imul (bad) (bad) rex.X add in mov xchg rex.XB sub lret sbbl xchg (bad) movabs enterq loopne jg rcrb mov imul cmp loopne jl pop rex.RX stos enterq rex.R gs rex push (bad) pop mov add rex.WR rex.RX (bad) cmp or push (bad) jnp mov pop es mull rex.W je sbb in fwait push cli movsl loopne cmpsb sub outsb mov add and loopne cld pop int iret adc icebp rex.WRXB cmp sub (bad) xor lret pushfq cld and retq mov rex.X or push sub xchg cmp rorl pop sbb test loopne rex.RXB loopne ss inc push xor pop sub out loopne mov cmc cmp push int (bad) insl (bad) (bad) rex.WXB pop retq cmpsl (bad) loopne es (bad) lcall xor (bad) (bad) and fdivs push divl retq stc or loopne add rex.X imul jge jb jne mov jmpq mov mov mov cmp cmpl (bad) repz retq mov data16 cmpsb cmp popfq or add sbb loopne in rex.WRX je xchg adc (bad) std mov fsubl mov cmpsl loopne (bad) sub cmp and pop (bad) mov sub pop jge (bad) mov incb sbb adc callq addr32 leaveq add ror jnp movabs jl sti sbb lods movabs mov jno fdivrs cli mov rcll cmp (bad) adc lret jl lock rclb xchg cmc retq enterq (bad) (bad) (bad) and add (bad) cs hlt or scas rex.RXB jmpq add cmpsl rex.W int adc hlt adc (bad) loopne xchg std xchg sbb data16 pushfq stos pop (bad) jne fmuls in sub push insl loope adc loopne lods cmp xchg or imul insb adc movslq (bad) stos xchg outsb rex.X testb (bad) or and in stos rex.WR mov cmp or (bad) cs push mov add not loopne imul rex.B pop cmp fildl icebp (bad) fstps or loopne xchg sbb loopne leaveq fcmove jg add xchg scas mov iret out out xlat loopne cmp pushq icebp push retq jae sbb rex.WRX or addr32 out in xchg fdivrs outsl stc or xor and shrb incb (bad) vandps mov pop enterq (bad) (bad) mov outsl sbb fnop jrcxz loopne (bad) sbb lock mov pop xchg jrcxz or sub scas rex.RB addr32 jg loop sbb test (bad) loopne (bad) icebp cmp loopne (bad) rex.X gs rcl sbb in and ss push rex.X shlb fbld (bad) scas loopne sub fidivr in jrcxz jg cmp adc data16 loopne cmp rex.RX mov icebp stc (bad) (bad) rex.WRB adc popfq loopne jrcxz cs loopne stos stos push rex.X insl mov push and in lods in ss and vmovsldup (bad) repnz loopne test (bad) popfq cmpsb loopne rex.WR imul (bad) shrl (bad) sub movabs sbb (bad) rolb adc adcb out insl je (bad) (bad) iret adc xor (bad) (bad) ljmp adc push add cmp rex.RX (bad) jo pop outsl in loopne movsl (bad) (bad) (bad) rex.R loopne jo (bad) cwtl add loope jbe rex fiadd imul jg loopne xchg sub sub (bad) mov pop add (bad) stos (bad) jbe (bad) repnz mov shrb (bad) (bad) mov mov xchg xchg fs (bad) xorl test int3 sbb outsl rex.RXB jo or loopne cmp push (bad) lods (bad) rex.WRX pop rex.WRB rex.RB jo xchg popfq loopne mov rex.XB adc sbb insl clc (bad) pop or (bad) lods push mov std xchg rcll add pop adc xchg clc test fwait mov movabs (bad) xor cld xrelease loopne in adc add pop xchg leaveq mov jl rex.WXB rex.WR (bad) mov rex.W mov xchg int3 hlt mov fdivrl xchg sub xor pushq pop sbb fnstsw add cmp (bad) gs xor icebp (bad) fisubrl mov movsb repz sbb rex.WXB (bad) (bad) scas xchg stc cmp leaveq hlt fstpt loopne mov (bad) ss loopne outsl lock sub pop fdivr insb (bad) pop or movabs jmpq lahf loopne in popfq cmp ds rex.XB pop cltd jp rex.WXB and movsb int3 xchg (bad) mov adc sti mov in or sbb lods (bad) loopne cli push movslq (bad) (bad) clc (bad) (bad) mov jge push (bad) mov loopne cltd xor in and loopne test movsl jnp sub jl outsb push (bad) insl rex.X loopne add cli or (bad) add cmc clc xor rex.RX pushfq ja push pushq jg (bad) mov loopne or (bad) stc mov retq sbb sti jmp js cmpsl jmpq mov outsb andl jb movabs (bad) cmp (bad) loopne jo (bad) cmove int sbb mov (bad) jno loopne popfq mov (bad) (bad) sub cmp mov (bad) mov fcomip mov movabs (bad) mov (bad) mov lret int3 jge or shrl xchg (bad) fcmove insl loopne add (bad) lods fcmovnu pop cmp lahf (bad) (bad) mov outsl mov fiaddl pop sahf (bad) clc (bad) rex.WXB rex.RXB (bad) xchg cli fsubrs add movsb (bad) mov xor cmp (bad) (bad) mov rex.WB loopne outsb mov (bad) fcmovb loopne xchg in mov loopne out rex.WB in jmpq scas rex (bad) jle loopne mov mov (bad) sbb mov rex.RXB add or fdivr xor cmpsl rex.W loopne mov rex.X jmpq adc rex.WRXB (bad) rex.WX fcomi mov (bad) or (bad) (bad) (bad) (bad) frstor loopne (bad) xchg cmp (bad) loopne add jrcxz pop (bad) adc and stos outsl rex.WRB (bad) pushq movsb mov leaveq sub add mov out shll loope sbb clc xor icebp shl mov (bad) mov outsb loopne rex.W gs fldt cli sbb pop movabs scas insb (bad) (bad) jrcxz in add cmp lods mov clc movabs (bad) (bad) add shrb rex cmp loopne data16 cmpsb lret jmpq add or (bad) jle mov cld lret loopne movabs stos enterq or hlt or jp mov mov mulb rex.WR mov (bad) mov loopne jmp rex.WB outsl sub mov insb js rex.WRXB mov add leaveq test loopne stc push cmp xor push add in sbb rex.RB sbb psubsw cltd pop cmp rex.WB jg cmp movslq xchg loopne sbb lret cmp pushq leaveq loop in xchg cs loope mov add jne and cmp test fbld loop cmp add jae cmp (bad) add (bad) jmpq imulb imul clc jmpq nop rex.RX loopne xor (bad) out fidiv (bad) (bad) int3 fldt (bad) movsl loopne and cli callq movsl add mov mov sbb jle xchg fisttpll add and xor jge rex.RB xchg movabs (bad) jmpq mov jnp (bad) test test movsb loopne push rex.R in (bad) rorb or sahf cli sbb fiaddl pushfq data16 scas loopne xchg rcll xchg sbb cli cmc (bad) andb cli sbb repz movsl in jns rex.WB cwtl mov (bad) mov repnz in ror outsb loopne or mov cmc scas icebp rex.X adc loopne push lods xchg mov sahf (bad) cmc lret outsl movabs mov push movabs (bad) fcomps scas loop ja movabs xlat cmp loopne jbe mov adc (bad) cwtl lahf mov out add loopne es push mov in cmc add movabs xchg cmp lretq fistl cmp pop out movabs jl (bad) test (bad) test rex.X push int leaveq sbb xlat cli xchg (bad) sub sbb add mov or xor lock mul xor in (bad) jae sahf (bad) mov jmpq (bad) pop int3 mov movslq (bad) loopne out mov rex.RB mov xlat and (bad) pushq push fneni(8087 sbb js jno rex.WRB lock and pushfq cmp loop cmpl rex.X mov (bad) mov jmpq jmp iret shrb loopne pop scas bswap xchg ss loopne jo movabs sahf rex.WRXB ds sbb push or mov movslq mov lret stos pop rex.WXB sarb and clc (bad) loopne cmp iret mov jle and movsb callq (bad) addr32 mov mov add ficom sub fwait hlt rex mov adc mov sub (bad) jns (bad) xor sub imul and cmp test jle (bad) or push mov add adc (bad) jbe out and sbb rcrl xchg mov cmc (bad) xorl outsb pop rex imul xchg and retq jae xchg cmp retq test cmc test cltd scas sub outsl sbb (bad) fwait and push (bad) test mov sbb dec lea or sbb mov xchg xchg (bad) shll (bad) sub jrcxz and (bad) int3 (bad) (bad) out fs xchg xchg lea movabs xchg sbb int3 data16 or in sbb (bad) xor jns clc ss xor je stc mov lret insl or fwait gs pop outsl mov (bad) (bad) rex in mov fstps mov pop fs (bad) mov (bad) rex.WXB and (bad) rex.WXB (bad) jl adcl pushq test jne (bad) and jmpq pushfq jl rex.WR rex.WRX and lea mov rex.WB data16 mov push or mov test movslq or out (bad) fiaddl xlat pushq (bad) movabs adc mov loop jle mov (bad) rex.XB adc pop roll nop or mov movsb rex.RXB and (bad) cs rex.WRB fs and pushq (bad) jle mov jle rex.W xor out fwait sbb repnz push popfq sbb jg and (bad) or cmp in mov mov shrd pinsrw push mov lea xor fcomp sub pushq mov (bad) sbb (bad) out pushq xor out addr32 sub jne and nop cmp sbb mov in loopne in mov loopne (bad) ds (bad) retq pop hlt knotw (bad) mov retq sbb (bad) in loopne or subl (bad) (bad) ficom cld leaveq adc data16 loopne wrmsr js (bad) callq mov jle int3 loopne rex.WRX pushq and loopne rorl adc lock add mov pushq mov mov repz rex.B loopne jmp lods movabs cltd (bad) loopne mov jrcxz hlt rex.X mov loopne push icebp flds ss lods mov mov sahf pop xor loopne sbb cs test mov scas repnz loopne in or jl mov xchg xchg mov mov loopne and sbb callq gs jge enterq lods jle or hlt movabs sbb push and jne loopne (bad) enterq (bad) js and stos loopne xchg movsl data16 fidiv pop lock out ss movsb loopne gs lods fistp icebp loopne lahf mov sub or (bad) pop xchg (bad) lock sub rorb dec cmp adc adc test imul rex.RX sub fstp int stos mov jge cmpsl in ror xlat in movabs insb cld rex sbb idivl push loopne jmp push sub pop loop rclb adc or movslq pop or fnop push sbb push sbb fadds xor xchg loopne push mov in rolb (bad) cmpsb (bad) sub jo pop jnp loopne xor (bad) push pushq lods lret imul sbb mov leaveq (bad) nop push in (bad) retq (bad) xchg jmpq rex.R mov cs adc sbb loop (bad) pop rex.RB (bad) rex.R mov mov clc sbb scas cmc (bad) mov sbb or in jbe js loop sbb cld subl gs jno push sub outsb lock mov mov and (bad) jge movsl (bad) pop adc push and in fs or or retq movabs rcr repnz (bad) mov jmpq adc scas cmp sahf rolb popfq adc rex.WRB data16 int test loopne sbb test xlat cli loopne or shl (bad) fdivrl jo in cmp in stc mov out movabs cmp (bad) mov rex.RB icebp popq jg,pn rex.RX icebp jle xlat ss cmp pop es mov mov adc sbb (bad) jae fsubp or cmc (bad) fwait rex.RX xchg jmp (bad) sbb fdivp rex.RXB (bad) insl popfq push vmovlpd fs es sbb gs sbbb cmpsl mov sahf mov mov mov jg repz shll sbb (bad) push sbb movabs rclb or stos retq mov cmp xchg insl (bad) xchg outsl push stos (bad) out js sarb xchg in sti sub jp or data16 sub (bad) jmpq xorl rex repnz pop fdivrl mov (bad) cmp jnp fildll js movabs mov xor pushq insb add (bad) int3 and (bad) loopne rex.WXB imul shrl mov rex.RX enterq imul fild pop (bad) adc loopne cmp jl mov cmc cmp (bad) fchs add fucomi sti mov shll pop rex.WRB xor cmp movabs jo sub cmpsl ds (bad) lea rex addr32 (bad) push and mov loopne in fcompl fildll loopne rex.XB data16 sbb out (bad) in cld out (bad) loop cmpsl rex.WRX adc movabs jl in out pop rex.XB (bad) cmp pushq cmp jge in add loopne stos (bad) ja mov sbb je xor loopne out jmpq rol sbb jmpq sub jo cmpsb stos and enterq test frstor rex.B loopne pop or add pop imul mov popfq lods loopne xor jp cmpsl pushfq loopne push sbb (bad) icebp cmp pop (bad) (bad) (bad) jp iret fucomp mov lock shrb repnz (bad) jrcxz jl pop cmp mov (bad) loopne cltd sbb (bad) fsubl popfq fs rex.W vunpcklpd jmpq mov cltd subl mov (bad) xchg xchg retq out xchg subl rex.WXB push rol insl sbb and jns adcl callq mov cmp cmp stc jne jne or (bad) scas jmpq callq loopne fmuls adc lods jmp or jl retq xchg rex.WRX retq sub retq (bad) (bad) lock pop (bad) push (bad) and xor mov jne movabs cmp (bad) jns add (bad) mov sbb scas mov mov rex.WRXB rex.WXB cmp icebp sub stos push sbb ds (bad) scas jle (bad) sti sbb mov fisub out xor in add lods addr32 rex.RX fistl rol cltd xor mov repz adc jbe callq adc xor (bad) cli fistpll insl test pop decl lret icebp pop (bad) adc loopne fcoml mov jmpq or pop rex.XB add (bad) adc add pop mov movabs repz (bad) (bad) xlat xor int3 movabs pushfq mov push add (bad) jmpq rex.W and cmp jbe loopne mov pushfq or sbb sub adc push rcrl sti or loopne add and (bad) (bad) mov loopne pop movsb in loope jae imul or movsl adc loopne callq rex.RXB jno movabs pop rex.WX loopne (bad) or insb loopne sahf jmp mov adc loop mov xor movabs imul or mov and test in orl and callq jo xchg (bad) loopne jns jne sub loopne stos outsb mov clc movslq movsl sahf js jrcxz pop in cli (bad) mov xchg rdtsc or pop (bad) xlat test and rex.WXB rex.RB gs pushq fstp leaveq (bad) notb (bad) mov or pop mov pushfq pop loopne sbb cmpsb movslq lods jmpq xchg (bad) rex.XB cmp xlat or in sahf mov or xor jg jne enterq or lods rex.WB rex.WXB xchg adc loopne mov (bad) loop xchg enterq shll cmp pop cmp outsb retq (bad) xor rcr (bad) sbb push and (bad) cmp sbb fstpl jmpq mov jg movsl int outsl jmpq pop stos rex in mov cmp xchg movsl loopne sbb (bad) loopne lock sbb adc scas retq sbb mov ja rex.WX repz adc jrcxz add push loopne insb or addb retq out loopne movabs sbb rclb retq jb loopne jnp rex.X ss ja out rex (bad) cmp jle xchg movabs sub or jae cmp shrl xchg xor int es mov xchg insl (bad) rcr in nop orb rex.WB push add sub xchg xchg mov mov cmpb loopne (bad) (bad) rex.WX loopne jbe int3 fwait rex.WXB in mov sbb loop rex.WRB icebp loopne lea cld lods rex.RX loopne jl sub jge xor xchg xchg (bad) sbb sub rex.RB or mov xchg sub (bad) faddl pop pop in mov loop in (bad) lods fs pop loopne int scas (bad) mov mov icebp and (bad) sub (bad) push cmpsl rex.RX add insl rex.WXB loopne outsl and std cld or mov sub sbb lret loope lahf jrcxz cmp (bad) scas cmp shlb mov cld shr movabs ror pushfq int pushq xchg movswl jae movslq insl and pop loopne add pop fcomps mov sahf test (bad) and iret test sub mov (bad) rex.RB rol test mov mov and jrcxz jl sti mov add addr32 idivl cmp out imulb jae sbb (bad) lods sbb pop jno lret jns jrcxz or push insl jne cmpsb sub (bad) (bad) xor jae rolb (bad) (bad) (bad) jnp xchg xor scas data16 lret rex.WR xchg callq lods and xchg (bad) (bad) lods scas callq in (bad) (bad) jrcxz int cmp rex.WRB mov add (bad) (bad) imul adc push loopne (bad) (bad) std test ss cs xor mov (bad) in test je xor loopne fs (bad) rclb loopne rex.XB (bad) xorb loopne jp in xor sbb jmp rex.WX mov cli movsl pushfq (bad) mov and rolb (bad) fbld test loopne pop jb fisttpll adc loopne rclb (bad) loopne xor rex.XB mov out gs add loopne cmc pop jmp xor loopne lods (bad) (bad) retq mov cld (bad) lahf loopne push loope or rex.WXB rex.RXB ffree (bad) icebp movabs stos add js mov jae mov rex.X rex.RB xchg sbb (bad) mov adcb insb ds movabs iret (bad) jmp icebp xchg lret in mov in rex.X lods pushq movabs mov lcall bnd cmp lret (bad) rex.RXB in add loopne fistl (bad) (bad) or rex.XB retq rex.WXB fwait (bad) andb rex.RXB mov insl (bad) pushq rol movabs mov mov cld xchg scas jp rex.RX cmp cmpsb sti mov movsl roll fistpll fs mov loopne std pushq repnz push in sbb jo jrcxz add loopne rex.WRX test jmpq sbb jne test rol mov cltd rex.WB imul jmpq fnstcw xor cmp pop leaveq xchg mov movsb movabs rex.RXB sub lock adc test nop shl (bad) mov repnz enterq fistp sub loopne rdmsr (bad) (bad) icebp (bad) mov mov loopne popfq mov mov xchg mov out pushq (bad) mov adc cmpsb mov cmc xchg adc xlat mov lret (bad) cli cmc push loopne (bad) fidivrl (bad) (bad) in add jae iret lods rex.WRXB (bad) adcl rcrl cs mov xchg (bad) (bad) idivb std movabs fimul (bad) ja push adc insb xor stos add fs shll int jge or rex.RX push movabs adc in sar mov fstpt mov fcomps mov cld test fwait xor push jge data16 xorb xor movabs shll xor jbe callq pop out adc ds (bad) cmpsb (bad) in in mov (bad) sbb ja add sbb retw loopne sbb movabs sbb (bad) cmpsl mov (bad) in rorb (bad) imul retq repnz icebp jrcxz sbb (bad) repz js loopne sub jl mov (bad) pop xor xor callq es mov cmp loopne cmp adc sbb lret sbb loopne pushq push cmp shrl adcl rolb mov in mov or (bad) pop cmp std sahf (bad) jge mov rex.RB outsl add movsb nop cld int3 pop movabs jno repnz rclb xchg cmp fldcw xor test loopne xor (bad) insl (bad) addr32 insb sahf (bad) adc lret sub pop xchg (bad) data16 fimul cmp push cmp pop mov rex.WXB leaveq (bad) mov loopne (bad) sub (bad) sbb imul rex.WRB rex.X or xor jmpq xchg mov in (bad) orl lea loope scas sub (bad) (bad) ss cmp (bad) icebp pop fsubrs lock clc rcrb divl (bad) loopne rex.RXB (bad) out (bad) mov movabs insl or mov movsb mov loopne outsl jp incb push test hlt mov loopne cltd scas cwtl in mov loopne mov sbb enterq jmpq lods push and pop push loopne rcl mov xlat xor xchg loop pushq (bad) std loopne (bad) jbe ja (bad) or loopne (bad) jg rex.R mov test sbb sub out rex.WR xchg and mov rex.XB mov vpcomq stc xchg pop cmpsb rex.WRB bnd xor std loopne xchg (bad) mov movabs pop pop fs cmp pop pushfq adc (bad) jae add loopne sub leaveq mov scas lods add (bad) (bad) rorl lahf loopne mov rex.RXB mov fnstsw mov mov rex.WR movsb int loopne push (bad) xchg (bad) out stos xlat inc loopne adc cmp movabs xchg rex.WXB movslq fldt in fmull push pushq xlat out in lock mov (bad) (bad) fmulp loopne jns mov shll rex scas fs stc (bad) nop loopne out lea rex.X cmp add outsl (bad) fsts and and jmpq cltd mov loop add rex.RB add jmp stos jns cwtl loopne or sub push (bad) and fchs adc xor scas loopne retq in add or leaveq lods pushfq mov (bad) movsl push rex.RB outsl adc sub data16 loopne int xor (bad) rex.B jl sbb (bad) enterq movabs adc xlat retq and pop cmp stc jo in test cmp in loopne lods xchg sub pushfw mov mov loopne cmp (bad) or retq je loope out xchg (bad) ds lods mov (bad) add or gs (bad) sub jmpq in retq cmpsb cs sub in movabs (bad) ss jbe (bad) (bad) icebp retq pushq (bad) xchg mov and mov cwtl movabs (bad) jg je stos xchg vsqrtss clc fwait adcb jmpq add adc jb lock (bad) in sti icebp (bad) mov pushq (bad) push (bad) nop gs xorb xlat sub push movabs fnstsw jnp adc cmp (bad) cltd or fwait sbb jbe xchg (bad) sbb mov (bad) rex.W jnp (bad) sub scas xor mov mov pop loopne (bad) outsl sub cmp xor or xor xor pop stos jg push mov sub icebp xor xchg pop (bad) nop mov ss sub rex.WB stos jne out or lea fwait jmp loope icebp fisttpl retq pop loopne repz test cmp mov xchg (bad) repnz add retq outsl jno jrcxz and movabs mov and movabs and mov mov cltd loopne lret push or (bad) stos rex.X loopne mov loopne jnp jp pop rex.WRXB jge or pop out pop jb mov callq rex.WRX mov cmp clc xchg mov xchg or rex.RB (bad) pop jae sub jnp mov std shl lret cmp jle cli mov mov (bad) in movabs mov (bad) jmpq rex.R imul movsb xchg xor xchg (bad) movabs pop or or fimull rex.WRXB cmp cltd sub and xchg lret sarb add pushq mov jge rex.R rex.W lahf ficom sbb jle (bad) sahf sbb out cwtl sbb add or pop nop (bad) clc lret sub pushfq mov (bad) cmp loopne cld adc jno sub int3 test mov jmp mov sub sub movabs pop sub (bad) xor mov (bad) addr32 pop jo and rex.W rex.X loope test sbb mov (bad) mov sbb and and rex.W addl and (bad) cmp out sbb (bad) loopne sbb (bad) mov rex.WXB (bad) out retq clc (bad) push xor in icebp rex.WRXB cs xor fs or (bad) mov rex.WB ljmp (bad) (bad) test in addr32 scas mov jns clc adc (bad) decl (bad) js repz (bad) mov lret enterq out (bad) (bad) nop fwait cmp (bad) or rex.B inc in (bad) sti roll (bad) adc fsubrp callq fsts loop jmpq in fadds and xor or fs clc rex.X lahf (bad) leaveq (bad) rex.RB fnstsw pop sbb jg (bad) js pushq or rex.WRX adc (bad) sbb add in lahf in jnp shrb xchg adc (bad) sub and insb mov xlat cmc push (bad) ss movabs (bad) jmpq sahf nop mov fnsave (bad) negb pushq shl jae push cmp sub mov (bad) fsubr mov xorb mov lret lahf int decl rex.WB jne cmpsb or lods add loopne (bad) and mov (bad) scas (bad) or js mov std xor rex.WR (bad) test jbe or add fwait push mov rex.WRXB jmpq jo jle fsubr push cmp adc cmp (bad) adc std gs loopne add pop loopne (bad) mov test and push pop xor push jmp pushfq (bad) push (bad) cmp fs (bad) push adc clc popfq (bad) loopne rex.WRXB stos pushq shrl sub movabs test sbb notb rex.RB sbb cwtl pop rex.RXB (bad) in movsl scas movabs mov out pushq add (bad) cli test cmp mov (bad) sbb gs loopne (bad) scas movabs orb cs (bad) out pushq jo stos mov (bad) mov out pop rex.WRXB jmpq cmp retq sahf or rex.RB repnz cmp mov jne in jno sbb es (bad) stc iret cmpsb mov fimul loopne mov sbb mov mov adc or jle cmpsl lret mov (bad) cwtl (bad) loopne jo fbld rex.RXB callq in pop jp cmc lods cmp loopne and pop sahf sarl (bad) xlat ss loopne (bad) (bad) push rex.X (bad) loopne mov in sub loopne mov cmp loopne add pushfq mov int3 loopne test push cmpsl std xchg xchg rol rex.WB and and jno mov jnp sahf add (bad) loopne cltd mov loopne (bad) or clc sbb outsb mov lret sahf sub rex.RXB movsl retq and jns xchg es loope (bad) add loopne movsl pop cmp lods mov and sar fnstsw roll retq pextrw out in mov mov fchs cltd sbb xchg add hlt rex.XB loopne xor push movabs lahf es jg std xor gs cmc fsubrs rex.B loopne (bad) roll in rex.WX lock add cld movsl adc rclb push mov test ja fcomp andb in loope pop jnp sub sarl cmp mov loopne test shr in lods or mov and bnd (bad) xchg mov lret out loopne enterq loopne jns xchg (bad) sbb mov addr32 or movsl cwtl (bad) hlt xchg sahf (bad) stc in cld jg movabs rex.W rex.RX loopne sub xor ror jl (bad) push in mov cmp (bad) loopne test sbb icebp sbb rex.WX mov popfq mov or data16 mov (bad) jb repnz adc jrcxz (bad) mov stos and (bad) jmp sub lock sbb (bad) jbe sub jnp cltd and js pop (bad) decl mov mov sub rex.WX (bad) rorl mov or jmpq adc jge sbb sub push xchg xchg (bad) (bad) mov jmpq cltd sub sbbb callq fmulp loopne and fsub jae lret and stos pushq and push add sbb loopne cltd cmc (bad) mov (bad) cmp test cmp out test fs js cli (bad) push jo sub jl (bad) (bad) andl test out xchg lret loopne rex.W sub je jle scas xchg and cwtl ffreep movsl pop push movabs (bad) (bad) outsl (bad) fxtract fucom je sbb or xchg out pop loopne js sub fidivr rcl add pushq loopne cmpsl (bad) and loopne test icebp in gs sub cmp (bad) loopne fdivrs jno or (bad) add retq adc shll pop in mov adc (bad) pushfq push (bad) test (bad) cmp int sub js sbb test movabs neg imul or jp xchg (bad) mov std cmpl xchg js leaveq or add repz fimull loopne scas int3 mov jmpq scas icebp andl lret jns and rex.XB in mov rcr mov pop in repnz loopne stos mov callq jg loop loopne outsl mov loopne std (bad) jl insl pop pop (bad) rex.WRB mov int pop mov imul xlat fldt enterq cmp loopne add clc cld fcomip sbb jae jge insb sbb gs mov clc js,pt (bad) (bad) mov (bad) xor (bad) test mov loopne jrcxz (bad) callq lahf in outsb rex.RX sbb retq clc mov loope cmp fidiv cmp and in cli clc int loopne push fist loop xor mov fimul (bad) stos and popfq mov (bad) imul cwtl lret pushq (bad) adc rex.WRXB loope ror movabs loop add loopne pop rcrb fucomip sub lahf (bad) jmpq cltd hlt or push adc mov (bad) sahf movabs (bad) out rex.RX rex.WRX (bad) cmp cwtl (bad) xor add add or sarb addl xchg cli loopne fnop cmpsl xor incl adc jrcxz or sbb cmp enterq cmp out xor nop mov pushq or xchg in sbbb and nop sarb cmp and out mov loopne pop ljmp pop cld loopne test add and pop loopne mov push cmp push in sti cmp (bad) (bad) cmp sahf or icebp out adc movabs rex.RXB lock jb add enterq pop int imul cmp (bad) loopne rex and movabs cvtps2pi fstpt push movabs (bad) movabs stc (bad) test pop outsl loopne retq or (bad) xor orl ss dec pop repnz jne outsl movsl mov jge movabs rolb and rex.X xlat push (bad) popfq (bad) (bad) movslq jrcxz in sub mov js and add loope lods loopne cmpsb mov (bad) (bad) (bad) jmp fsubr add out and (bad) add je sbb cs retq adc mov shl mov (bad) xchg loopne (bad) out cmc mov (bad) adc (bad) cltd insb outsb lods add cmp and pushq pop out movabs scas loopne fldenv in cmp pop leaveq mov push out xchg (bad) repz loopne addr32 cwtl add retq mov movslq in jmpq rex.RX sbb jno clc and loopne jnp mov xor adc insb fucom (bad) sbb mov cwtl rex.WRB fwait stos out rex.B iret (bad) mov or and (bad) ja fcoms (bad) loopne xchg pop xchg adc (bad) sbb adc jo jle (bad) (bad) test fisubrl fdivrs lods xchg add sub (bad) fs add loopne lret jne cld int3 nop mov mov (bad) mov sarb movabs adc add xor adcl and movabs pop sbb jo movsb (bad) in jno mov rex.RXB mov pop sbb jno sbb jp imul pop and in cs movsb lahf mov js rex.WB (bad) sbb cs xchg (bad) adc nop xor mov gs mov xor (bad) xor ljmp mov xchg rex.WB rex (bad) mov in cltd (bad) pushq data16 movabs (bad) leaveq sbb push movabs loopne (bad) (bad) rex.X jmp xchg fsubs adc (bad) (bad) (bad) (bad) jle (bad) mov es rex.WX iret (bad) and pushq sti in mov xchg (bad) (bad) andl js xchg xchg cs rex.X repnz or sahf pop jrcxz mov hlt int sbbl (bad) andb int3 mov test sub sub jrcxz rex.WRX movsb (bad) mov (bad) push lods jbe mov rolb pop outsl xchg fwait in pushfq mov loop je sbb adc rex.WRXB fwait sub adc es (bad) in cmp xor je (bad) mov push rex.XB fbld (bad) jns (bad) or sub adc (bad) push je sub rclb adc pop (bad) adc iret jmp mov movsl ds (bad) mov rex.RX in mov adc push callq jae addr32 addr32 nop add rorl rol mov (bad) rcrl push (bad) imul rcrl mov or scas lods mov xorb push xchg mov adc or lret fldt roll lahf and push sti adc lcall push rex.RXB iret in movsb in icebp jle jne sub rex.WRX fs (bad) cmp gs mov mov loopne xchg (bad) cwtl cs adc or (bad) iret sbb (bad) int (bad) rex jmpq cmpl xor xor jnp or cmc xchg rcll adc cmpsl (bad) jo in jmpq and loopne and push movabs rex.WRXB (bad) or std adc rex.RXB (bad) cmpl insb rex.B ds movsb loope jns pop push (bad) (bad) pop jne (bad) mov mov lods adc adcl jne (bad) cmp (bad) loopne enterq xchg stos icebp scas outsl test sub stc in loopne jne lahf out (bad) and xor fwait ds adc fsubrs in xor add mov mov loopne sbb (bad) push imul and loopne nop int in loop out add jg pushfq out (bad) xor (bad) leaveq lods xchg sub jp jo retq scas icebp outsb (bad) in mov pushq or xor (bad) xchg adc sbbl sub add (bad) in retq sbb mov sub or lock or movabs fsub sub add adc (bad) fnstsw sub xor sbb fbld xchg ss out in sbb in sub sbb xor (bad) adc cmp xchg (bad) movabs rex.W mov movabs lods (bad) or es icebp or rex.WRX ds sbb cmp enterq cmp fwait bnd jrcxz (bad) movabs movb mov xchg rclb (bad) iret (bad) fimul xorl sub in out iret add pushq xor insb mov jmpq gs ss sbb xchg (bad) or mov cmp mov lods adc xchg lock xchg xchg leaveq xor and (bad) mov movsb adc (bad) lods cmpsb (bad) out xor outsl (bad) int3 xchg cmp or idivl sub (bad) test push jge lret or mov vmovhps lock pushq addb pushq or adc add xlat cmp fs xor addr32 sub or retq jb (bad) (bad) pop movsb mov jae int3 addr32 mov jno mov rex.RX add gs jbe (bad) jmp xchg fidivr adc or (bad) jns sbb and ficoml test pushq rex.WRXB mov shll xchg cmp sub (bad) (bad) sub out or (bad) sbb (bad) (bad) jbe adcl lods add cmp lock out adc rex.W and iret push jb cmc (bad) movb movl rex.B rorb loopne xchg add push movabs movsl add fwait (bad) retq shrl (bad) sbb add sahf lock jg or pushq sub (bad) loope or movsb scas retq leaveq mov add insl ror cmp icebp mov (bad) push movsb (bad) imul clc ficom mov leaveq (bad) xchg (bad) pop jb add je mul cld sbbl sub ds (bad) rex addr32 lea pop iret andb pop rex.RX (bad) movabs lahf lret cmp (bad) idivb stos and jge and (bad) sbb pop in xchg lods rol imul xor sub (bad) icebp (bad) add mov cmpsb (bad) imul data16 sbb rex.WXB stos std scas (bad) fadd fisttp outsb movslq or movsl (bad) rex.RB addr32 ja nop rcrb insl (bad) (bad) mov adc push (bad) mov sahf (bad) rex.W psrad scas imul and callq (bad) and rex.WRXB pop rex.WRB mov (bad) mov pop movabs insl sarl movabs loopne mov sbb xchg mov (bad) ds push pop mov movabs sub insb jmp (bad) div and sub loopne shrl sbb adc rex.XB iret xchg rex.RX in jb pop jge loopne xor sub loopne lods and (bad) (bad) jg cmp callq imul cmpl rex.R insb pop jp (bad) fstpl clc hlt (bad) xlat sar fisttpll jno adc loopne jmpq cmp cmp pushq fwait (bad) and fbstp fcomi std loopne pushq testb mov (bad) add sbb fidivr in and (bad) lret sbb add sub in orl mov movabs jo loopne (bad) mov push jmpq rex.WB (bad) movsl (bad) jmp (bad) retq scas out mov xchg clc jno test cmc clc movsb repz lea repz (bad) mov mov xchg shl enterq scas in xor out push pop xchg (bad) or mov mov test rex.X movabs out sub mov jns (bad) jo ljmp mov movslq mov pushq int test (bad) outsb sbb shl loop mov in sub adc ror cmp stc iret loopne out rex.WRB pavgb cltd rex.WB ss sub cli in loop movabs (bad) add flds movabs pop sbb sub in rex.X jg xchg notb lret loope loopne cmp rex.WRB rolb (bad) sbb (bad) loopne (bad) xchg lret mov lea loope movabs sarb ja sbb or (bad) adc rex.WB nop clc scas mov (bad) fisttpl (bad) jb or cmp loopne xchg lock (bad) (bad) rex.WB lahf jmpq gs jo mov insl pop adc (bad) loop cmp jae loopne cltd gs sbb add inc pop movsb (bad) jns xorb mov loopne mov out loopne movsl sub gs movsb loopne pop out std push stc and shll loopne and jns or (bad) mov cmp int3 rex.WXB and jp add sub fmull (bad) in mov clc lret jmp adc fcomi loopne movabs cmp or test icebp jle in movslq rex.X rex.WX stos rcrb sbb mov movabs cs movabs (bad) xchg jge jo es in cmc xchg rex.R rex.WR popfq mov rorl sbb loopne rex.WB lock js rex.WXB movabs sbb lahf rex.WRXB scas sahf cmp mov out (bad) loopne xor rex.XB orl shlb cltd add (bad) add jne lret mov mov outsb rex.RB lret rex.R data16 out cltd in xor movabs std fiadd pop lret sti loopne fcoms and add xor sbb (bad) (bad) hlt sbb (bad) mov out push in cmpsb adc mov in push leaveq mov sarb sahf retq add retq mov div (bad) add add sub jge cmc bnd movabs lahf (bad) rex.WX add icebp jg insl adc hlt clc fs (bad) outsl xor bndldx push adc rex.W cld vandps in cmpsl (bad) (bad) jno,pn movabs es pop jg (bad) (bad) pop or loopne xchg rex.W pop fsub imulb rcll movabs pop test add cmc cld xchg mov rex.WRX loopne stos mov in stc add rex.WR sub js cs addr32 rex.WRXB add mov pop loope imul adc repz sub cmpsb loopne inc mov hlt repz std (bad) xchg xor jp sub in (bad) rolb jae loopne faddp (bad) mov xor (bad) xchg fucom and ss and (bad) add icebp mov loopne rex.WRB cs sti loop sbb add and loopne jg xchg movslq repnz in clc (bad) out (bad) xor xchg pop nop rex.B mov callq cltd imul notl mov mov out fistpll mov jle repz movslq push jbe test adc xor xchg pushq pushq or movabs sarl push rex.WRXB mov mov xchg lods xor loopne pushq out in mov popfq pushfq retq sbb cmpsb rex.WB loope fs jmpq push (bad) fcompl or in loope cmp leaveq jl (bad) rex.X movabs sub hlt and rex rex.XB nop sti loopne mov (bad) psubw idivl je xchg loopne fstl (bad) iret (bad) fcoml (bad) hlt and fsubp popfq xchg movabs movsb jp fstpl jno (bad) jrcxz loop mov (bad) xchg sbb xlat mov test fs push xchg xlat in mull pushq mov pop loopne or pushfq pop scas in loopne out pop sub (bad) jle pushq and (bad) fwait xchg leaveq loopne push rex.WRX jle xchg and in rex.W cs jge add mov and int3 lahf pop mov test rex.WR cli rex.WX cmpsb and cmpsl adc jae jo pushq rex.RB gs loopne xor xchg cld callq jg (bad) add sub sub fnstenv add xor data16 cwtl in cmp (bad) fbld sti or pushq int3 xchg mov and (bad) loopne mov movsb (bad) mov loopne out xchg mov mov mov xchg pop cli ja pop movabs mov movabs pushq and movabs pop icebp (bad) movabs jge xor imul mov data16 mov movabs adc pushq adc shr lock outsb clc mov scas rex add cmpsb loop adc mov lods jo push and add and leaveq xor xlat in fnop enterq jle (bad) or (bad) (bad) jg xchg pushq sarl int (bad) (bad) sbb lods fabs (bad) lock loopne addr32 sbb or xor stc imul rex.RX (bad) pushq or xchg or add je lock sub scas out addr32 and jne rcrl adc cmp xchg cmovbe or rex.B xchg rex.WXB iret decb sbb xchg jo scas sub shrb adcl sbb shrl xchg sub loop sub sub in rex.RB pushq pop es adc or movabs and jrcxz lahf rex.XB push repz sahf callq imul xor mov rex.RXB lret leaveq fldcw addl je js icebp movslq out stos mov retq (bad) pop movsb je outsb ss (bad) (bad) mov jg cmp jmpq jge stos pop shlb loopne (bad) adc or mov (bad) (bad) xchg sbb rex.RX cld enterq xor fs mov out mov out push add or je jb rex.WX sub rex.RXB or (bad) nop loope (bad) xor sub loopne leaveq and jle (bad) mov (bad) rex shr add in popfq cmp sub and xchg callq in pop (bad) (bad) jmp sti test adc ds mov gs loope mov and shll shll shll mov cs mov mov sbb cltd xor pop jne fdivs mov ds xlat add xor sub push or fimul fwait adc movslq mov jb cmp jmpq mov retq jae,pt (bad) mov loop loopne push xchg adc xor xchg loop adc cmp fucom sbb adc cli jp sbb cmp mov push adc fsubl or rex.WXB pushq push add cmp add cld pop clc mov lahf clc lret outsl loopne cmpsb sub add mov cmp push sti out faddl xchg lock cs je xchg push data16 xchg loop lods enterq mov push fldl add loopne xchg and (bad) sbb mov lods or rex and push (bad) repnz movslq jrcxz (bad) xchg movabs (bad) push rex.RB loopne jle fstl pop imul js adc movsl out xchg (bad) pop rex.WRXB movabs sahf popfq fucom out push jbe (bad) iret loop in sub js movabs and retq lock popfq cmp push imul loopne jmp outsb sti fisubl sbb movabs (bad) and sub rex.RX or mov and (bad) (bad) icebp rex.X (bad) std (bad) test (bad) (bad) xor jno jns je rex.WRXB lods and movabs (bad) mov (bad) pop out (bad) imul add fsubs movabs xchg cs xlat (bad) int and lahf cltd sbb xchg ss retq negl or and cmpsb adcb movabs clc (bad) gs xor scas cmc jrcxz sti in (bad) mov (bad) (bad) std mov mov jo (bad) jmpq mov ja cmpsl loopne (bad) rex.XB xorl (bad) mov rex.WRB adc add andl (bad) fldl movsb adc rcl mov (bad) pop loopne cmp in jo mov adc mov mov (bad) lods imul repnz adc mov in lods add pushq mov repz xor lea test add imul pop (bad) pushq adc sub in callq cmp (bad) repnz xor cmpsb adcb add jmp jg pop rex.RX addr32 in sbb in clc pop xlat out addr32 fbstp retq (bad) movsb loopne xchg jnp push in in xor adc (bad) out add loopne mov outsl and mov xchg cmc xor jbe fmul cmp js (bad) gs movabs mov xor outsb sbb jmpq jo rex.RB out and (bad) pop rolb retq add fildl jmpq rex.XB mov test (bad) mov in rex.XB movabs int3 bnd xchg lods pop movabs cmp loopne std cmpsb shll (bad) enterq loopne mov jmpq in mov mov jge loopne (bad) pop rex.RX (bad) jns (bad) gs dec (bad) loopne (bad) sub rex.B (bad) cmp movb xchg jne xor (bad) xchg (bad) sub rex.RXB rex.WRX cmp loop in movabs xor adc (bad) (bad) (bad) sub mov fidivrl movabs pop loopne stos adc pushq in xchg in rex.WXB (bad) rcrl push (bad) push jb xor push cmp lret (bad) rcrl xchg rex.WRXB pop xorb out (bad) mov mov (bad) (bad) cmp cmp in flds xlat rex.WRXB (bad) repnz mov (bad) jnp out cmp add cld stos sbb jae adc fist rolb and add ja sbb mov loopne callq (bad) in out loopne (bad) sub jb mov cli out mov movabs stos pop (bad) rcl retq loopne rex.WRX mov jbe or fsubs mov decl (bad) push iret jo std adc movslq (bad) jrcxz (bad) (bad) sbb in and sti fldenv mov rex.WB xchg cld jo insb mov out neg cli clc inc in movsb repz rex.WRXB push cli or (bad) pop cld sbb xchg (bad) sbb je adc (bad) sti xchg (bad) repnz retq icebp adc xorb (bad) outsl test or (bad) in push test callq and and sbb or negb (bad) callq fsubl and in adc mov outsb mov adc test lods push mov out or cmc cmp push sub mov sbb rex pop (bad) mov sbb in stos or pop add xchg cmpl sub jge (bad) mov add rex.RXB xchg lahf clc rex.WXB mov pop mov stos pop movabs pop icebp mull jo (bad) adc scas (bad) mov push imul mov adc stc rex.WRXB rex.WRB jb cs movslq nop fs icebp addr32 jns sbb mov mov rex.R xchg outsb scas ljmp (bad) sub insl loopne mov hlt cmc mov jo addr32 loopne or pop scas in add enterq outsl xor loopne cmpsb jl mov imul (bad) and fsubr test push (bad) (bad) lret cmp out cmp gs mov (bad) (bad) push cmc rex.W (bad) mov (bad) cmpsb xlat pop mov movslq sub and mov mov and loopne jnp or rex.W mov xor loope mov insl in xchg stc movabs jp out sbb adc and loopne (bad) imul (bad) loopne (bad) ja sbb cmc cwtl xchg xchg rex.WRX iret xlat adc sahf in (bad) fist cli std rex.XB cmp (bad) mov out (bad) loopne cmpsb cmp (bad) (bad) mov rex.XB rex.WRXB jmpq rex.WRX cmc jrcxz rorb jne adcl pop (bad) test test mov (bad) ljmp icebp js (bad) and xchg movabs movslq adc (bad) pop leaveq pop xor pop xor pushq sub (bad) rex.X and sbb insl (bad) (bad) clc fdivs movabs sti cmc movsb cld in (bad) (bad) mov or icebp sub idivb insb shl ds mov (bad) lods jmp loopne jnp pop xlat repnz in jmpq mov (bad) sbb rcrl (bad) and stos in cmpsb loopne rex.WRX jns retq jo loopne jge sti out sarl jrcxz push (bad) (bad) loopne retq callq (bad) or sub mov (bad) rex.WB clc mov jle jg cld sbb sti enterq loopne pop sahf sbb incl in push xchg mov out pop mov pop loopne out (bad) cmpb sbb loopne test (bad) insl in jb push or mov jmp jno cli rex.WXB int or lods (bad) mov and adc fistp insl movsb incl test and sahf pushfq mov rex.WX jmpq out scas and test (bad) xchg outsb (bad) icebp (bad) (bad) fcmovbe test test loopne pop adc add in (bad) sbb sub pushfq (bad) mov loopne ficoml mov mov loopne (bad) (bad) mov or loope scas movabs or cltd hlt or or cmc movabs or icebp mov out push loopne add sar int3 pushfq (bad) rex.WRB or add pushq xorb or in xchg (bad) push mov fnstcw (bad) push sbb (bad) xor enterq push (bad) cmp cmp sub push mov push mov loopne (bad) cli int xor xchg hlt sbb (bad) ja cs rclb loopne cli lcall jmp (bad) loopne add adc sbb loopne (bad) mov mov fcmove (bad) xor rex.WXB (bad) mov loopne sub sbb mov mov xchg xchg (bad) and loopne negl or lods xchg xor int mov rex.WRX loop jmpq mov movabs (bad) (bad) cmp loopne sar lods adc or sti xchg nop xor loopne xor sbb cmp pop leaveq mov cwtl test pop movsl stc rcll out xor rex.WB imul and sahf in jae (bad) enterq inc adc sbb add loopne stc (bad) pminub sti out callq lret cwtl std (bad) cld loopne (bad) xor in mov loopne or fisubl fildl (bad) rex.WX (bad) (bad) mov pop add incl cmpsl add imul setno fmul sti (bad) retq (bad) leaveq jl pop mov (bad) xchg loopne or loopne push in xchg push mov mov sbb or mov fwait (bad) clc (bad) jg,pt mov and iret fxch addr32 roll loopne icebp cltd mov sbb cmp xchg xchg cmp loopne mov je rex.W cmp in xchg loopne fsubl mov sti (bad) test int mov loopne fdivrl imul lock or (bad) jmpq xor or jle clc jg cwtl jae stos sti gs cmc (bad) loop fcmovnb loopne leaveq movabs xor mov int3 adc cli cmp sbb jb fstl or xor mov rex.X (bad) pop loopne movsl pmaddwd xor sbb rex.W jle out mov pop stc add mov mov in mov (bad) ja xor imul jne loopne jbe pop push rex.W (bad) pop movslq lret loopne jne sahf xor mov or jno sub push xor xchg lea and test movabs (bad) jno (bad) xor xchg xchg xchg in outsb mov rep lock or mov lods (bad) mov sbb (bad) rex.XB in lock push sbb xor add shll loopne (bad) insl (bad) rex.WX mov pop out repnz cwtl lret rex.RX rcrb loopne adc or loopne cmp movabs mov loopne rex.RX out mov rex.WX popfq xchg nop data16 loopne cmpsl int (bad) adc (bad) rcr or adc je jno (bad) jb xchg or cmc loopne mull frndint (bad) (bad) fisubl fwait rex jb pop imul cmp loopne mov test fsubs sbb rex.WX rex.WRB jnp movabs mov (bad) shrl gs lods (bad) mov roll push (bad) rex.WXB repz fsubrs (bad) sub test fist sti add jno movabs pushfq in sub lods test adc cmpsb and lcall out (bad) roll insb and lods loopne cli (bad) (bad) xchg (bad) mov sbb loopne je (bad) negl loopne scas mov pop or jl iret adc jnp sbb rex.WR (bad) (bad) rex.R adc rex.WRXB enterq jae xor mov loopne xchg scas sub pushq cs jp in addr32 xchg (bad) cmp (bad) adc mov (bad) sti mov rcll push cmp mov jmpq cmpsb push push shrb sbb cld xchg movsb icebp jo (bad) (bad) out and fwait jns popfq cmp movslq mov mov insb sti pop cmc add int3 (bad) mov mov iret shr frstor add or jl nop lcall mov (bad) rolb loopne rex.XB rex.WRXB fnstsw test (bad) cmp or mov leaveq mov imul pavgb push fdivrl loopne mov cwtl rex.R in repz mov fisubl fmuls clc (bad) ja xlat repz movabs jo ds cmpsl (bad) add es lods fbstp push mov rex.RXB pushq xchg loopne test xchg push push pushfq rex.XB add cld and rex.WB push mov cmc lahf out push loopne movabs rolb add data16 in pushfq and adc fisubl mov jmpq rex.RB (bad) iret jl mov scas mov mov (bad) jrcxz decl xchg fidivrl lea (bad) or xchg pushfq cmpsb hlt cmp jl in movslq pushq rex.WB or mov rol enterq loop (bad) rex.WRB jno loopne mov ss loopne mov loopne pushq sbb (bad) sub xchg rolb xchg add stos or loopne rex.X xchg sub fdiv loopne (bad) (bad) fidivrl lret (bad) fildl mov (bad) mov divl rolb imul adc adc mov loopne rex.RX insl (bad) rclb (bad) (bad) repz or fs std xchg retq xor loopne add imul hlt lock je in fstpl pushfq or loopne ljmp mov loop mov mov loopne cmpsl pop shl test pop leaveq jnp (bad) rcrb add mov or cmc callq (bad) loopne es xchg mov (bad) pop jl (bad) (bad) sub pop loopne mov mov lret loopne mov (bad) (bad) in jmpq outsb mov test pushq ja in je (bad) nop jl insl data16 xorb lret sar pop (bad) rex.RX pushq (bad) mov clc test (bad) (bad) add xor rex.WR rex.WB jrcxz sbb decb or cmc (bad) lret gs mull insl rex.WB loopne jge (bad) mov in sbb sub ljmp xorl loopne push jnp lea rex.WXB rex.B mov pop (bad) jnp (bad) loopne movslq cmp imul (bad) rex.RX js sub rex cltd cmpsb movabs mov sbb icebp (bad) fimull movabs (bad) jb (bad) lods pushfq push add insl fwait (bad) mov (bad) or (bad) in stos cwtl nop mov mov fwait lret rex.RB rex.WXB and jnp andb xchg xchg and addr32 lahf icebp (bad) jns add xor ja (bad) loopne jrcxz in adc retq in fiaddl jmpq rex.WRX es (bad) jno xor loopne fistp rex.R rex.WRB mov mov sbb (bad) sub hlt loopne pop pop std jmpq pushq shl sub (bad) cwtl stc mov adc callq loopne in xchg jl adc rex.WRXB loopne or or scas push movabs jbe (bad) sub sub xchg (bad) (bad) loopne adc xor and imul xchg (bad) repz jg,pt jle lahf rex.X js loopne mov rex.WRXB loopne mov frstor rcr xchg stos nop loopne sti and movslq callq shr loopne cmp test jl ja jae rex.B rex.WXB callq rex.X fucomp sub (bad) neg outsb retq jge jno add loopne jp enterq rex.WRXB mov (bad) cmp (bad) fnstsw loopne cmp js out add mov xchg rex pushq rex.WB cld mov mov pop loopne pushfq cli (bad) add stos mov or loopne (bad) (bad) fs jp (bad) mov xor sub loopne fld loop and jne shrl mov test icebp cwtl stos loopne (bad) gs (bad) lods rex.XB jmpq repnz in cmp cs (bad) loopne jo jle jg hlt (bad) xchg imul pcmpgtw fidivrl loopne fcomi (bad) insb rex.RXB retq xor xchg rex.RX mov sbb (bad) cmp loopne retq (bad) test adc jae div retq in sbb sub mov mov clc fisubrl jo cli std pushfq rex.WB or fistl jg sub (bad) or mov sub fistl rex.RX (bad) jp add stc insl loopne xchg imul xchg mov icebp pop test mov push fmull pushq divb lahf push popfq jle (bad) sbb sbb popfq retq pushq mov cmpsb ss add lods movabs jmpq xchg pop fyl2x (bad) lods push lret xchg out stos loopne cmp jae idivl push lock loopne lods cmp movabs jmpq add or or mov xchg xchg movsl add loopne adc sbb sti jg adc mov (bad) push out pushfq stos test cmpsb ror loop (bad) movsl icebp add movabs repz loopne xchg scas (bad) jge in (bad) xchg test rex.XB or mov loopne mov cmpsl sub jae (bad) adc enterq push cmpsl (bad) lahf and or cmpsl (bad) rcll (bad) (bad) sahf cld or rex.R (bad) (bad) add (bad) (bad) (bad) (bad) test add loopne fdivrp (bad) std rex.WXB adc cmpsb sbb jo push adc and lret (bad) jmpq test add mov fcoms cltd mov fbstp (bad) pop mov (bad) cmp and in or add jno rex.XB loopne jg lea (bad) jl (bad) hlt or (bad) outsl testl mov loopne add pushfq (bad) mov or out lret outsb mov rex.WR jp sahf sub leaveq cld sbb rex.RX cltd mov mov (bad) mov test movslq xor rex.B pop adc mov jmpq fidivl sub sti adc jmpq cmp sbb (bad) sti icebp mov cmpsb (bad) and mov in loopne xor add (bad) insb or mov js xor in cmc rex.RB popq jrcxz pushfq jnp (bad) icebp pop lods retq (bad) out xchg mov rex.X push or retq (bad) cmpsb or rcr sbb (bad) rcrl xchg xor jle in lea sub (bad) sbb lock mov loopne callq icebp xor jmpq (bad) (bad) test mov cmp (bad) subl loopne or (bad) loopne rex.WRXB mov add repnz outsb xchg pop jne mov jle (bad) pop fisubl (bad) rex.WRX es cld out rex.WRB sbb rex.WB mov mov loopne rex.WR hlt sub popfq rex.WRXB xchg push or push add insb rex.RB pop (bad) (bad) add adc mov jno and gs cltd fisubl adc jb incl adc rex.WXB pushq add (bad) jg jno (bad) test (bad) fnstcw fwait mov add (bad) es psllw jo shlb mov (bad) mov pop (bad) rex.R int3 icebp rex.WRB (bad) and fcmovu std loopne (bad) insl pop sahf cmc sbb in loopne (bad) sub jne (bad) fidivl stos movabs fistpll jp outsb lods jmpq pop lock or xorb or loopne (bad) (bad) cld xchg repz cmp pop test add mov add jne cmc (bad) test mov loopne shrl loopne (bad) pop xor (bad) mull (bad) jp sub cmp or js loopne cmp cs mov clc hlt scas pop xlat sub rex.WRB in sahf in loop pop jp loopne movslq adcb (bad) mov (bad) mov retq and imul fmul and (bad) icebp (bad) xorb mov rcll adc add mov mov loopne mov rex.WRXB or mov rex cmp clc and cmp mov cmp sbb sub repnz insb mov loopne add movabs mov jnp mov (bad) addr32 cwtl in loopne (bad) shrl (bad) cld sub fcoml stos jg sar xor (bad) loopne and ja cs movabs rex.RXB rex.RX not imul or push sub in push (bad) (bad) cli imul cmpsb (bad) add mov rex.WRXB cs (bad) sahf in leaveq sbb test adc ja xchg add pop incl popfq pop rex.WX je pop loopne test mov mov ss cmpsl loope sbb rol test cmpsl sahf pop and cmc mov xchg (bad) loopne retq add sbb (bad) rex.B es push lock (bad) repz je repnz and test xchg or mov (bad) lret rex.WRXB rcl rex.RX out jmpq jo int (bad) (bad) mov and mov pop ja in rex.R rex.WRX xor mov repz imul jo pop pushq add (bad) (bad) imul cmpsb mov out rex.R jnp out divl rex.W (bad) adc movabs rolb mov icebp jrcxz out and sbb mov (bad) jp rex.R js loopne sti setno mov pushq (bad) outsb adc xchg in sbb and jl loopne xchg cmp leaveq (bad) rex.R loopne rex.RB callq and pushq push leaveq test callq lret rex.WX mov jno roll loopne (bad) movsb xor adc and xchg (bad) mov (bad) push jl loopne and add adc loopne,pn insl sub sbb icebp and scas ss sub jne or (bad) pop fisttpll jb outsb in je lods adc clc (bad) push mov (bad) cmp cltd add sti (bad) (bad) jmpq jmpq ss adc (bad) xchg (bad) rex.WB (bad) sub pop loopne mov retq lret or mov mov push loopne jmpq push js cmp mov in loopne or callq imul (bad) fnstsw insl (bad) jmp xor ja loopne sbb (bad) stc jrcxz out (bad) adc mov sbb js xor test cld jle push jp jmpq pushq and adc sarl loopne mov rex.R rex.WR xor xor (bad) loopne push or mov pop xor jmpq shlb jo or pop cmc pop jmp pop loopne adc xor popfq rex.WRB mov xchg jle (bad) mov xchg loopne (bad) cmp (bad) nop rex.R fiaddl sbb pop cld (bad) or lea (bad) mov mov push stos outsl rex.WR loopne (bad) cmp push loopne lods cmp pop rex.XB mov ss jp cmp push adc subb and sub int3 jnp fucom retq (bad) xor (bad) int or fdivl or mov jle rex.W add rex.WRX fildl adc shr pop js divb je xchg loopne sub sub jo data16 adc jno sti xchg cmpsb cwtl rex.WRX sbb loopne repnz repnz in (bad) movabs jae (bad) rex.WXB imul cmp rex.W (bad) addb pop sbb (bad) jmpq and (bad) (bad) stos scas outsl rex rex.R rex.WXB xchg fsubs rex.WR (bad) fmul in cmp loopne insl xor sub (bad) cld sbb rex or (bad) (bad) pop adc es loopne fldcw rcrb pushfq popfq pop idiv out movabs xchg (bad) and mov xchg addr32 mov xchg sub stos cmpl adc movsl (bad) lret (bad) or pop (bad) js rclb xchg out (bad) (bad) movabs rex.W mov fdivl or cli cmc mov loopne or rex.WX in xchg rex.B mov pushq rex.WR rex.RB retq xchg jo out (bad) (bad) sbb rex.R js addl je jp fist cmpsl (bad) (bad) rex.RB sarb (bad) loopne mov add loopne (bad) lret or (bad) mov jrcxz loopne jns pop rex.WXB mov jae cwtl pushfq out mov sbb cmp loopne jl pushq cld jb rex.WX mov loopne push rcl cmp or in sar es test ljmp pushq rex.WRB movsb scas and cwtl rex.RB mov xor and (bad) (bad) push std pop clc loopne movabs nop loopne fwait push (bad) (bad) dec in cwtl rex.W and xor popfq lock xor movsb mov cld cwtl jb mov nop mov sti iret mov rex.W (bad) loopne mov movabs loopne lock rex.RB mov (bad) retq jmpq (bad) lock sarl xchg enterq int3 mov sub adc hlt loope push mov add mov rex fisubl mov loopne stos rorl jb loopne insb pushq xchg hlt add test mov enterq mov mov cld mov (bad) rex.WRXB (bad) sub shl cs xor xlat lahf in out rex.WXB rex.RX fidiv (bad) test loopne movsl fdiv insl adc stc in pop jbe sbb xchg lahf sbb js jb stc (bad) sbb mov movabs xchg cwtl rex.W pop ss cmp or adc (bad) jae pop push jns rorl in xchg (bad) xor xchg add jnp je xchg rex.WRXB mov movabs or imul rex.WRB addb stos (bad) rex.X imulq cld (bad) rex.WXB (bad) movabs (bad) (bad) jrcxz sub addr32 xchg jle flds fs mov rex.RXB cmpsl pop (bad) nop or xchg adc movups xchg sub push jrcxz adc or xchg and outsb test movslq adc cmpl pushq cmp mov and mov out (bad) pop rex.B sbb xor and (bad) xchg rex.RX rex.W test mov (bad) scas (bad) incl push add push loopne cltd cmp out xor lods test mov fsubrp (bad) rex.RXB movabs sbb je rex clc loop adc icebp (bad) xchg subb sbb or out cli movsl nop pop (bad) jrcxz sub fsubrl rex.WRB movabs push insl add cs lret pushq cmp imul jno movabs (bad) subb sbb push rex.WR repz loopne add and jnp cmc shrb loopne (bad) nop movabs rex.RB mov (bad) cmp rex.WRXB mov xchg rol mov mov rex.R add loopne sbb and lods out movabs movabs movslq cmp sub xchg (bad) xor cmp push fs or movabs add in rex.WR push xor jrcxz cmp insb mov pavgb add cli lods in outsb cli cwtl (bad) rex.X (bad) subl shr retq xchg mov in (bad) iret in mov loopne mov sbb clc (bad) rex.WRB stos mov loop jmpq pop mov movabs ficomp insl lea in mov rex.WRB ja repnz fstpt mov add mov cmc pushfq outsl (bad) jbe rcll (bad) (bad) cmp (bad) lock mov (bad) rex.WRX stc cltd mov vdivss (bad) fistl int3 lods lret push (bad) (bad) (bad) fsub out cli and mov jl jp cmp cmp loopne or and sub mov imul lods movabs (bad) cmpsb std jg cltd (bad) cmp callq cmp cmp rcl cld and mov iret cmp cmpl fldl loopne xor xchg add loopne sbb (bad) jmpq (bad) adcl retq rcll shl test loop incl rex.WRXB cwtl rorl mov mov jmpq int (bad) adc cli (bad) loopne std push mov repnz pop cmpsl rolb cmp mov rex.X loopne rex.WXB mov mov xlat add fistpl (bad) cmp (bad) cmc mov js jbe,pn or (bad) loopne xchg (bad) (bad) in xchg data16 rex.RB (bad) mov (bad) cltd or mov in push es loopne and imulb cmp loopne test cmp hlt xchg mov mov loopne rex.B cs mov testb in jl mov hlt add (bad) out retq and fs push jle loope sahf sub mov and data16 jns sti rex.W (bad) xchg rex.XB (bad) pushq xchg (bad) out loopne mov jp pop rex.WXB data16 rex.X mov (bad) pushq outsb fisubr (bad) push loopne rex.WRXB mov rolb in pushq insb jno mov mul gs or (bad) fnop adc (bad) movsl push rex.WXB cmp enterq (bad) pushq addr32 add and testb mov test cmc mov xor (bad) movl mov loopne,pt lock es sbb (bad) xchg (bad) jbe loop addb xchg or jmpq retq orb ficoml add add fmuls stos loopne mov loopne out fdivrs adc fisttpll rex.RX mov sbb jl or stos lock adc in cwtl mov mov movabs sbb (bad) ror clc loopne or lfs sub rex.WRX jo rex.X add in add iret add sbb jg (bad) movsl rex.RX rex.B lods (bad) gs loopne shll fstpt loopne or std loopne jl jrcxz outsl (bad) or sub retq lods test mov mov (bad) (bad) jb loope xor xchg out lea sbb scas xchg sub outsb xor cltd xor (bad) gs rex.WRB sbb loopne jg adc xchg jge shrb test push loopne (bad) movslq mov movsb fstpl lea rex mov (bad) cli (bad) and mov xchg sub xchg lods or jrcxz cmp fimull rex.XB rex.RXB adc repnz or fucomp jne pop mov leaveq jo cmp rex.WXB rex.WB jno rcr loopne (bad) (bad) jle jrcxz (bad) and sub (bad) xchg lock mov loopne (bad) xchg rex.WRXB or imul jg ja mov (bad) pop imul in (bad) sbb in sbb fsub jnp rorb iret icebp xor retq adc and sbb rex.WX add leaveq or xor outsl cmpsb and sub je (bad) pop insb rex stos sbb mov pop shr and mov and out movabs (bad) leaveq pop outsb (bad) shll jnp movsb lods loopne in pop movabs sub rex js in or push rex.W sub pop iret out rex.WRX std loopne add rex.WR add mov frstor in mulb cwtl out imul jns loopne (bad) cmp (bad) (bad) lea jb (bad) loopne xchg (bad) sub loopne shrl orl rex.X test loopne push add xor rex.XB (bad) (bad) xlat xchg fstp outsb mov add pop sub and (bad) rcrb xchg lahf rex.RX loopne pop or jne xor mov add lahf (bad) xlat xchg (bad) (bad) mov (bad) test inc pushq in fsub scas jg (bad) (bad) in pop nop xchg push (bad) loopne,pn or sahf jl mov mov and mov cmp mov or fnsetpm(287 lea stos (bad) callq jrcxz jo mov or movabs (bad) in lahf xor movsb rcll cmp rex.XB loopne cs cmpl (bad) (bad) add (bad) sub or (bad) or js pushq cmc and cmp fnstenv in (bad) out mov decb rex.X (bad) out or movslq andb sub cld sub hlt loop movabs lret and (bad) movsb cli idiv cmc rex.X push jmpq callq (bad) loopne js pop add fdivp sti (bad) data16 xchg lods shll (bad) ja rex.RXB xor mov xchg fdiv movabs mov fildl xchg jbe cmp and adc cwtl rex.WRXB cmc pop push imul out leaveq icebp out loopne sbb iret add out nop in lret (bad) xorb cmp roll (bad) nop incl rex.W or shrb (bad) sub pop loopne shrl adc and mov (bad) movabs test in mov add jo int (bad) js mov mov pop (bad) jns lret sbb retq rex.WB pop sub nop movabs rex.WXB mov and leaveq and sti fs mov loopne stc adc xchg hlt jo loopne pushq mov add fcomi xchg rex.WRXB (bad) xor (bad) xchg outsl fadd rex.WB rex.WRX ds and je rex movsl (bad) cmp data16 cs ja loopne rex.WRXB fsubrs rex cmpsl loopne cmpsb mov pop loopne cld sub (bad) adc jne adc jnp (bad) rex.WR rex.X pushq add xchg int3 sbb loopne rol cmp idiv rex.B (bad) rex.WRXB jns iret loopne adc movabs pop movabs rex.WRXB and (bad) add sbbl (bad) loopne push xchg imul sub movabs lock mov mov adc ficompl rex.RB adc out data16 int3 jrcxz add or mov mov push (bad) mov decb movabs js loopne imul clc idivl sub mov fsubs scas xor insl mov and xchg jrcxz (bad) xchg (bad) loopne cltd add cmpsl loope test pop movabs (bad) pop sub xor (bad) addr32 (bad) sbb movsl rex xor hlt movsb (bad) enterq (bad) (bad) fist xacquire or sub testb xor shr and or sbb nop jns scas mov ss iret mov sbb pushfq movabs rex.WXB lret hlt jns retq mov faddl cmp lock rex.XB xor sbb cmp movsb (bad) int3 movabs (bad) (bad) lret (bad) (bad) mov (bad) cltd rex.XB (bad) jle fstpl scas fistpl rolb ja jmpq callq cmp jg (bad) and adc (bad) (bad) cmc ds rex.XB add adc movabs (bad) and lock out adc and jne sbb pop adc (bad) rex.X jrcxz rex.R fnsave xor rcr (bad) mov rex.W rex.RX (bad) sbb rex.RB out (bad) (bad) cli pop cmp mov mov (bad) lret (bad) mov popfq push insl sub cmp (bad) in rex.RXB mov (bad) (bad) (bad) (bad) rex.WX (bad) sti jge (bad) mov jns (bad) pop mov mov rex.B xor cltd fistpl push pop cmp (bad) mov icebp (bad) (bad) in and out movabs in pop fcom (bad) xor jle jb movabs (bad) adc or out fimul add fisubrl icebp mov (bad) jo xchg xchg add rex.WRXB in stos fcomps pop (bad) adc ror roll stos adc mov in (bad) cld adc (bad) fwait sub fimull xor rex.XB rcll outsl mov (bad) fsubs repz movsl sub (bad) in (bad) ds adc (bad) fstps (bad) and iret adc pop (bad) push test orl (bad) jrcxz sar (bad) (bad) shrl in addr32 (bad) pushq push out iret sar adc (bad) jle lahf jmpq cli icebp xor scas (bad) imul adc shr sahf pushfq adc cmp insb xchg (bad) push adc (bad) add pop sbb pop jb outsb stc movslq je (bad) ja add mov sahf sub or jp flds hlt jp jbe (bad) mov sbb push cmp (bad) sbbl pop fs rclb mov add lock lods repnz and (bad) (bad) mov lods jb hlt jmp push (bad) movabs (bad) add repnz mov mov cmpsb sbb rex.XB mov iret cmpsl in cmp shll outsl (bad) jmp imul rex.WRXB es mov mov sbb jo fcmovu sbb pop sbb es movabs leaveq sahf jne (bad) mov in (bad) xchg xor rex.RB shlb rex.RB jrcxz icebp imul notl and gs pop in rex.R or cwtl scas (bad) popfq rex.W (bad) in test jl or adc or movabs rex.X enterq push stos or xor and in sar and mov pop iret push jmp pop icebp xor pop pushq je rcrb mov add xchg out cmp test jns sbb pushq idiv test sti shlb sbb mov rex.WRX pop jnp (bad) in (bad) stos movl mul mov rex.R imul jae mov fdivl mov add add es jo stos (bad) or rex.W test in divl in (bad) sbb sar (bad) stos lock stos lods jno sub mov and (bad) insb xchg cwtl pop mov push jne test (bad) loop pop shlb adc sbb pop movabs sub sbb test and adc xor push push push lods stc push test rex.XB jns sub loop rex.WR mov scas (bad) rex.WRXB xchg pop jbe rclb fidiv xor cmpl push mov (bad) jrcxz fmull outsb jp rex.RXB mov pop (bad) xchg and icebp movslq adc xor in pop callq sub hlt pop mov loopne xlat enterq sti stos fistpl movslq rex.XB or adc loopne push je cwtl cmc (bad) (bad) loopne movabs nop loopnel mov leaveq (bad) test and (bad) sub (bad) loopne and xor loopne,pn add fdivr (bad) cmpsb fsubl push pop pop adc jb xchg scas mov adc add in mov cltd iret loopne mov rex.RX or loope sahf sar pause (bad) jmp (bad) loop xor in and pushq scas (bad) jge adc xlat movabs push xor (bad) js (bad) sti cmpsb adc loopne push adc loopne jns out ss cmp or fildl push ljmp outsl sbb mov or jmp icebp xchg sti int (bad) add (bad) mov (bad) loopne jge (bad) jnp or mov fimull or jne jg lock (bad) mov jle rex.W mov mov jbe movabs mov xchg leaveq test rex.WX jge cmp jne (bad) fildl xchg rex.RB and (bad) mov (bad) roll std push jbe xlat sbb rex.WRB rex.WR loopne insb outsb mov jne (bad) in cmpsl scas movabs cli mov loopne rex.WXB fneni(8087 sar add push ja xchg push mov and sub sub iret and sbb in (bad) (bad) sub sbb stos mov cld cmp roll adc mov cmp jmpq mov lahf (bad) push jmpq in mov (bad) callq (bad) sti mov mov leaveq jnp scas xchg jmp xor pop or out lret loope (bad) (bad) scas pushq rex pavgb test mov sarl (bad) (bad) loopne add incl (bad) mov xor movabs lods mov xlat movabs xor fucomp and movabs pushfq (bad) outsb loop xor mov loopne movabs (bad) rex.WXB fidivl mov lret in retq jmpq push loopne rex.W and mov and test adc loopne rcl adc stos (bad) cmpsl (bad) rex.WR cmc movabs fs pop lret jmp leaveq mov scas sbb mov out (bad) shr (bad) or rex.RX (bad) push in test loopne movabs (bad) and clc (bad) or js loopne out hlt mov in rex jle cmpsl xchg rex.WR xchg pop fcom loopne cli movsb (bad) cmp push mov jrcxz cmpsb rex.WRX pop cmpsl add clc movabs movabs test and lret mov iret rcl movb loopne (bad) jne movsb jo jge imul xor rex.WRB loopne fsubrl cmpsl insl addr32 cmpps (bad) (bad) push cmp or push iret and mov (bad) push xor sub incb sbb sub outsb ljmp mov cmc xchg pop (bad) js fimull (bad) decb nop mov cmpsb push leaveq mov cs rolb mov movabs lods fcoms insl leaveq xchg jge callq in add ljmp movabs nop test out data16 jns jo rex sahf sti rex.WR in ss (bad) fsubr adc stc pop in jle lods fsubr mov je shlb cmp or in cld mov movabs add (bad) popfq sbb mov mov xor hlt cmp sub loopne and pop icebp push jae and out mov movabs pop add cltd xchg (bad) ffreep rex.WB and or push rex push push (bad) (bad) or loopne jrcxz in mov adc in loopne xchg cmc rex.WXB xrelease popfq sahf nop (bad) loopne rex.WRXB movsb xchg mov add jne test jnp loopne movabs mov push fchs (bad) and js loopne pop or (bad) enterq lods or retq (bad) mov push lahf nop rcr loopne push nop in pop out xchg loopne ds loopne sar mov and out repnz adc sarl sub xchg jo (bad) in lods mov cmc popfq imul movabs dec es pop (bad) xchg icebp stc mov rex.R in xchg jp scas xor jno xchg adc (bad) repz sub xor push pop shll add adc xchg xchg rex.WRB mov jno cmp (bad) in xor loopne (bad) pop adc jae push adc test loope (bad) pop jns enterq movsl cwtl cmp int jp movsl sbb mov sbb rex.R mov (bad) loop lret loopne mov or fcomps add or cmpsb cmp popfq cmp loopne shl cmc pushw sti (bad) ja and (bad) push rex.RX repz fwait leaveq divl add xor shrl (bad) loopne movslq jg fwait in (bad) test or cmp mov xchg (bad) jns repz retq pop fnop leaveq sbbl adc lods (bad) fdivs out retq (bad) test rex.WRX outsb movsl push rcrl and xor repnz xor push xchg movslq lahf mov cmp (bad) es lahf cmp sbb lods lret rol loopne xlat xchg add push mov cmp cmp stc xchg fisttp xchg loopne js rex.R rex.B repz pushq sbb xor xor rorl rex.XB lret sub mov rex.X mov and (bad) rex.W divb roll callq sahf std adc rex.WRX (bad) sub (bad) (bad) movabs shl sub xor loopne movslq or add movabs movslq push xor push (bad) and test je out mulb imul jne xchg cmp xchg (bad) movabs (bad) in pop lock add xor sbb (bad) (bad) loopne out xchg mov movabs xlat fwait loopne adc cli xchg outsb loopne rex.WRXB pop add in mov mov test rex fimull (bad) mov push (bad) xlat adc xchg (bad) outsb in lea xor andl (bad) enterq mov leaveq (bad) shlb pop js add in and sbb int3 cli jmpq loopne xchg and sahf push add loopne movsl cld add cmp in cs add and and test xchg loopne sbb push (bad) (bad) rex.WXB fdivrs jmpq (bad) fnop pop and mov (bad) rex.B mov fs rex.WRX (bad) in testb sub retq movabs and and jae sahf repnz insl and stos adc mov addr32 (bad) add insb (bad) or sub (bad) pop add (bad) xor or sbb xchg sub and in fcmovnbe movabs nop movsl shl fmuls sti cmpsb (bad) lahf mov mov loopne jmp rex.WXB enterq xchg test mov and cmp xor shll (bad) cmpsl jg loopne mov sbb jrcxz cld rcll jb adc jmpq jrcxz cmp (bad) sti push int3 mov movabs add loope loopne cli cwtl pop (bad) pop sub adc adc xchg clc cmp xor mov out out imul xor popfq sub xchg pop loopne in imul movabs (bad) sbb cmc loopne mov cmpb jge xchg rolb imul fisttpl (bad) jrcxz mov add fsub pop outsl movswl mov jo (bad) rex.WX and lret stc push jrcxz (bad) es sbb lods int3 pop cmp jg push rex (bad) xchg (bad) xor mov mov sub mov dec mov sbbl mov retq pushfq pop sbb imul cmp sub pop lret (bad) or sub pop ss movsb es cld (bad) and jmp sbb retq jle jg scas mov (bad) ds out std jnp mov jae icebp data16 add sbb fadds adc test jns jnp addr32 jrcxz sbb notl movabs outsb pop rcll mov pushq jo rex.RX movsb callq mov callq push cmc mov pop xor sbb pop sbb (bad) jle sbb js rex.WRB jnp (bad) cmp (bad) (bad) fs mov pop scas (bad) rex.B fbld retq gs fs in rex.RX (bad) mov sbb mov mov xchg fsubr (bad) pop lret cli int3 xor repnz sbb cmp cmc test mov stos xchg (bad) fisub jp roll movabs add jmp (bad) gs mov outsl mov (bad) movsl jmpq data16 rex.RX sub jns (bad) rex.WRB sub mov rex.WRXB (bad) sbb adcb (bad) fldl jae fimull (bad) mov sbb ror int3 sbb leaveq xchg (bad) (bad) jno pushq out test ds shll (bad) adc repnz rorb and imul push (bad) jo mov cld in retq pop sbb or (bad) out ds xlat callq mov add or (bad) mov sub xchg cmp (bad) add or pop sbb and rolb sahf sub mov (bad) (bad) cli idiv pushq leaveq in fsubl adc mov fsts movsb movabs in insl ficom (bad) mov faddp (bad) (bad) (bad) (bad) (bad) xor pop jb leaveq rex.W xchg es (bad) jb hlt cmp loopne (bad) mov jo (bad) rex.W in xor xchg loopne rex.X out xchg (bad) push (bad) (bad) mov or mov sbb in scas push (bad) or loopne jbe clc sub sar sti scas and loopne js jo fdivrp lods loopne and (bad) mov adc movabs mov fldcw movabs adc push std and xchg faddl sti gs rcrl mov sbb (bad) (bad) stos cs sbb lahf mov subl sbb (bad) (bad) pop scas mov movabs pop popfq or push in push jns iret nop xchg fimull add mov out enterq repz test shlb je loopne in ja sbb xchg adc nop icebp (bad) (bad) cmp cmp sbb loopne stos cmpl fstpl divb loopne movabs mov sti xchg (bad) pop (bad) cmp mov and loopne xchg xor adc jmpq scas rclb pop lcall and out (bad) xor jmpq (bad) or pop and adc out or (bad) rex.RB mov loopne loope es pavgb lods (bad) movabs jmpq retq ss hlt jo rex.R rex.WB gs sbb mov cmp movabs or mov mov add popfq fisubl gs fbstp cmp jmp rex.RX stos (bad) fimull int and cmp sbb stc xor or pop and sub stos xchg loopne xor pop pushq (bad) add (bad) push sti jno jp jg xlat xor scas std movsb jge rex lret jnp (bad) loopne xorl test rex.W cwtl cmp jns adc (bad) lahf loopne retq rex.WXB in loopne push (bad) xchg (bad) sub outsl pop retq ss (bad) outsb mov lock rex movabs ffreep in insb xor jrcxz stos (bad) mov pop loopne (bad) int3 rex.WR or xor mov cmc cmp (bad) pop test retq add mov icebp fs rex.WX shl ffree jle rex.XB fwait enterq mov push shll loopne es adc lret insb sbb (bad) loopne sbb push loop es je cwtl stos xchg pop xor push imul loop and outsl loopne mov (bad) jg mov sbb hlt fwait xor fcmovnu xor loopne add rex.X (bad) imul shl movabs add and or push (bad) adc shll (bad) pop inc jge jbe std add xor leaveq in cmpsl (bad) movabs loopne pop (bad) rex xchg stos add callq movsl mov lea xor mov jnp or mov sbb shrb fnstsw (bad) test rex.WR clc push cmp movsb sub rex.R sub lods movabs test sbb fldenv (bad) add test sbb (bad) pushq clc loopne movabs fdivs rolb loopne rex.WRB (bad) loope (bad) xlat (bad) sub rolb fsincos je loopne (bad) sub loopne enterq xchg jbe clc retq (bad) cwtl movsl fucomp fdivrl mov mov fisub test (bad) or clc loopne addl shl (bad) jbe leaveq sub clc movslq (bad) lahf jns pop mov (bad) or (bad) mov (bad) (bad) movzwl loopne mov (bad) pop pop cmpb repz loopne (bad) cmpsb cmp push add lahf (bad) test fcompl loopne (bad) repnz and shl mov jae out cli lock movabs rex.WX lods (bad) loopne (bad) (bad) stos (bad) jge sub (bad) mov cmpsl loopne cld sbb xor retq (bad) loope repz (bad) and js (bad) movsl lret retq movsl loopne fwait (bad) rclb adc fcompl negb mov jo add loopne rex.WRB repnz rex.XB loop sbb rex.W sbb insl lret push in jmpq push (bad) rex.XB xchg adc test movabs mov loopne and mov test sub mov rex.WRB sbb and loopne scas (bad) hlt pushq and push movabs outsb push (bad) (bad) sbb rcrb and sbb cmp fdivrs xchg repnz push movabs xor cmp (bad) leaveq je fstpl gs cmp xchg ficoml pop loopne add mov mov (bad) (bad) adc loopne (bad) sub insb cmp loopne addr32 jp sbb loopne rcrl movsl loopne pop xchg (bad) outsl jne rcrb add loopne jrcxz rex.RB sbb jne orb out (bad) mov mov cmp jp stos jne jg loop fsubrl jle (bad) and mov jns in add lock and fmulp xorb xchg add push rex.WR pop icebp (bad) and (bad) callq mov icebp gs adc loop rex.WRX (bad) (bad) fcom adc cwtl notl loopne adc adc cmpsb mov (bad) fs (bad) outsb loop sbb adc sahf nop xchg shrb push (bad) xor mov insb movabs mov test mov mov adc cmp (bad) (bad) xor data16 loopne pop int jnp stc adc pop add or nop test ds cltd xlat cmpsb retq js mov retq mov clc xchg and cmpsl or and xor data16 fyl2x nop outsl or sub hlt cs rex imul stc loopne outsl lods jmpq (bad) (bad) rorl jns xor (bad) mov push cld loopne mov (bad) and sbb (bad) lods icebp out scas ja (bad) jmpq bnd cmp loopne mov sbb ljmp (bad) (bad) leaveq incl pop retq xor adc sub stos (bad) cmp or xor repnz loopne add jnp imul sub rclb rex.WB in adc (bad) test mov (bad) or or cmpsb mov mull cltd cmp shlb (bad) in jl icebp je push jbe (bad) adc test xor or movabs cmp lahf pushfq xor repz or repnz sub mov rex.W iret sbb xor sbb or callq shrb icebp jg mov mov jmp repz (bad) cmpsb xchg mov loop mov rep vpunpcklwd mov pushq in cmp push sbb xchg rcll (bad) jle cmp pop repnz pop xor pop (bad) xchg int3 movabs (bad) add xchg mov (bad) loopne idivb adc loopne,pn or xor cmpsb (bad) lock out jbe jae movabs add loopne (bad) fmul pop mov loopne sub lahf loopne rex.WRX repz jmp loopne (bad) js cmc mov shl and lods push lahf fisttpll loopne xor loope (bad) (bad) rex.RX adc fcomip test rol xor fcomps adc cmc pop sbb and rex.WRXB subl rex.W cmp add mov insb rex.RX lock rex.WRXB nop (bad) icebp or jge loopne mov (bad) rex.RXB (bad) mov lret loop cmp jne (bad) jbe mov sti jnp jge push jg adc adc (bad) cmp clc rex.WRXB pop test sbb insb sub loop rex.RXB std lods shl jb pop or rex.WRXB (bad) xchg and xor push rex.X in xor pop (bad) xlat js jbe callq rex.WXB cmp jae sti rex (bad) jl xchg es sub (bad) cmpsb mov xchg rex.RX cld mov xor sub movabs loope jge in icebp repnz sti mov test or lods out movslq rorl adc (bad) sarl je popfq xor cmp (bad) xchg loopne (bad) jrcxz,pn jae pop rcrb fnstcw movslq movabs testb (bad) js femms movabs jnp pushfq sti icebp fisubr and in xor rex.RB pop (bad) sti (bad) ja or rex.WRX adc cmp pop rex.WRB push std callq xor jo sub leaveq pop mov test jle xor in mov rex.RXB sub sar popfq rex sbb jmp jno retq scas mov movabs test imul nop jo xor cmp movsl bnd scas icebp retq ds roll sarl scas movabs std (bad) loopne jno xchg es mov push xor pop push or movabs (bad) cltd movslq shlb or loop (bad) (bad) repz jb fildl in push cmp (bad) jno rol jns loopne (bad) sahf adc xchg jrcxz sbb loope movabs loopne icebp mov pop or scas loopne gs hlt test (bad) rex.X fnsave (bad) movabs orb fdivrl xor int (bad) in and cwtl loopne mov or mov movslq frstpm(287 pop retq bswap (bad) lods cmp adc mov loopne mov pushq scas jne stos in adc rex.WRX loopne rex.B pushq in or outsl adc mov sub movabs jle enterq ficompl (bad) fs scas jo divl lret lock and sub retq cltd fbstp out (bad) jae lret mov jne adc (bad) add sub fs xchg and in rex.WX adc movabs or and test rex.RB movsl add or loop repnz jle (bad) mov push add mov in xchg (bad) data16 sbb (bad) (bad) int3 sub cmpsb (bad) out lods outsb imul rex.B rex.WRXB add out (bad) jne test icebp jo (bad) insb xor pushq xorw xor xor jle out sbb sub imul icebp jge and adc jg pop sub rex.WRX lock in lock mov (bad) sbb leaveq out (bad) xchg jmpq notb (bad) (bad) out adc out and negl cmp iret adc sbb mov repz and pop fmuls imul (bad) (bad) xchg (bad) in rex.WXB sarb (bad) fisubr pushfq and push movabs sub rex.WB mov or jg or mov sbb sbb out retq adc (bad) (bad) cmp (bad) xor cld test mulb (bad) subb insb out (bad) mov cmp (bad) mov jl out mov movabs push (bad) adc (bad) jge cmp loopne mov (bad) xor fchs push push cmp mov xchg insl or loopne cmp mov stc in and mov (bad) mov sub xchg sahf enterq loopne mov (bad) push mov sar mov xor pop add sbb or retq mov nop rex.R loopne add imul (bad) pop or mov movabs mov or adc data16 sahf mov jmpq repnz loopne mov xor push cmp loopne xchg std gs jne loopne out stos pushq (bad) data16 push adc or xor test (bad) insb loopne xor rex.W (bad) sub (bad) cmp pushq or loopne repz and add xor enterq dec cmp cmp (bad) rex.RX out test pushfq xor jp adc rex.WRB fdivrl (bad) and push rorl jp (bad) fcmovu sbb pop add rorb xorl add sub mov scas push sub adc data16 je shrb or (bad) xchg outsb movsl mov sbb loopne and jmpq (bad) nop xor or add movabs sbb jp (bad) jo movabs or mov rex outsb out cmp jmpq ljmp clc movabs adc (bad) cmp lret pushq jo mov rex.WB in jmp lahf mov loopne rex.XB nop rex.W mov outsl xor rcll cmp loopne adc (bad) xchg mov pop sti jrcxz repz in jne loopne (bad) pushq cli scas jb inc ja out pop movabs out stos rolb xchg (bad) lret sahf sar sbb (bad) (bad) pop rex.RB sbb rex.B add lock popfq mov divb cli pop loopne (bad) repz adc sub fsubl xor fcomps dec (bad) jp sub jb (bad) rex.WRX test hlt adc sub lods or (bad) shl (bad) callq (bad) loopne mov sub loopne sbb cmp (bad) stos callq and loope lods retq in pop jrcxz mov (bad) (bad) loopne sub cmp (bad) leaveq xor xor (bad) sbb (bad) cmc xchg rex.RX imul test hlt rex.X jmpq mov (bad) stos cmpsb adc out sub rex.WR addr32 loopne mov rcll std test (bad) cmpsb cmp retq imul xchg (bad) enterq lods sub in cli retq rex.RXB (bad) outsb push movabs (bad) jle sub (bad) movsb adc int3 lods callq lock jnp xchg (bad) add mov test jle cli rcrb jne mov rex.WX cwtl pushq hlt (bad) loopne mov (bad) cli jne fnop out push insl js xor or sub mov (bad) cmpsl repnz xchg (bad) loopne adc jb mov (bad) cld mov loopne (bad) movabs (bad) rex.RB xor cmpsb incb cmc pushfq lret fnstsw rol loopne lock push pop sbb gs fucomip sub popq movsl icebp push ss loopne out scas xchg push add mov jbe jae (bad) insb loopne cs fwait sahf retq (bad) shll movabs neg jmpq test sub shrb sqrtps jg jle cmp add (bad) (bad) loopne callq xchg (bad) jmpq sbb lret cmp and xor jge rex.XB sbb movsl retq fcom sarl test insl lea jmpq xor mov cs jae jge std loopne sub repz and xor (bad) mov (bad) xchg mov push mov movabs rcll loopne sbb cmp loop jrcxz cwtl (bad) movabs pop or sub adc rex.WR xor in pushq nop push push cld rex.WRX mov (bad) sub int3 clc adc jo (bad) loopne adc outsb insb and cmc in (bad) cltd (bad) je insl (bad) (bad) movabs (bad) out std mov xchg xchg cmp movsb (bad) xchg sub fmulp xchg xchg loopne lods push mov stc and loopne pop cld mov sub sbb insb (bad) mov push adc fidivrl sahf loopne mov xchg out fisttpll pop push retq loopne popfq cmp jmpq rex.WRX jg (bad) xor imul adc loopne lret sbb outsl jge (bad) rex.RB adc and sub test movabs shrb cmp jnp incl jge clc and (bad) sarl lock xor stc rorl xchg cltd mov jbe sbb cwtl sub loopne jmpq repnz pop cmp pop loopne nop xor add xchg callq movslq rex.R shrl sbb rex.WB cmp and push xor rex.XB rex.B insl loop add adc test (bad) fs sub adc add mov lods rex.R movsl jp loopne fwait (bad) imul adc (bad) mov repnz (bad) insl scas retq test leaveq loopne rex.B scas fcmovbe (bad) jmpq stc loop cld xor push or loopne xor insb (bad) (bad) (bad) (bad) mov add cmp xchg addl rex.X rex.RXB icebp loopne mov callq loopne mov movslq mov add mov mov and out movabs jle (bad) lahf (bad) adc rex.R nop xor (bad) add and outsb rex.B adc adc loop out fmull sub xchg mov sahf cmp adcb add and push (bad) (bad) cmp in lods sbb fucom cmc movabs test sbb jmpq rol fisubl out (bad) push jno and or enterq sub mov cmp lock nop mov xchg or leaveq jno xchg rex.XB (bad) test pop (bad) loopne hlt sbb (bad) icebp out add and test rex.X fisttpl rex.WRX pop ja push loopne xor decl retq cwtl (bad) xchg nop sbb or (bad) jrcxz retq rex.RB rex.W or mov cmc (bad) lock pmullw (bad) (bad) jge and ds adc and notl mov adc shl pop rex.WRB mov fsubr callq (bad) adc or adc in ss and pop ljmp iret loop cmp mov xchg in lea loopne and (bad) xor jns outsb pop adc lret mov repz clc xor sbb xchg rex.RX movabs loopne movsb jb rex.WX nop stc xor xchg in pop fldcw outsb mov scas (bad) sar or out jg (bad) (bad) pop jp sbb add jmpq push (bad) rex.X (bad) sub (bad) mov std fisubl xlat mov (bad) add divb (bad) (bad) sbb and rex.WB orb xchg jmpq sbb scas mov sbb rex.X mov movsl test and (bad) adcl rcrl jl sbb (bad) loopne pop adc popfq sub adc (bad) jmp ds fldcw shrl (bad) rex imul cld ja sti (bad) or pop jge fs xchg scas (bad) stc movabs out xor xor insb jno or pushfq movabs rex.RXB (bad) addr32 ds sub sbb popfq mov (bad) mov imul insl retq movabs mov sub (bad) negb mov adc xchg lock es xchg mov sbb fwait clc test xchg jbe loopne rex.WRXB and (bad) test loopne pop or loopne cmp out sbb loopne addr32 or nop repnz jbe in adc stc jo out jo push (bad) lea ja sbb movabs icebp mov pop adc lods addr32 es fldl lret lods loopne cmpsb in mov loopne add (bad) or adc jns js sbb (bad) divb mov (bad) ja outsb (bad) pop adc sbb or fmull movabs xchg cmp repz rex.XB jno in (bad) out loopne jrcxz rex.WRXB rex.RXB sub loopne fidiv adc (bad) push setl je movsl outsb xor xor or adc in (bad) movabs sbb loopne add cmp (bad) fwait jg jrcxz xchg mov scas or (bad) add and retq mov (bad) cmp movabs mov cmp in jge pop (bad) (bad) sbb push (bad) jg push icebp loopne jne xor rex.RXB popfq insl in jb mov (bad) loopne push scas xchg fcoms pop ss mov paddb (bad) (bad) (bad) add pop sbb loopne (bad) (bad) (bad) lahf je test movabs es test dec iret je (bad) (bad) (bad) sbb cmpsb mov cltd pop push and xor insl lea (bad) test fs lea or pop or mov (bad) mov cltd xchg add pop rex.R out ss adc xorb xchg add jne popfq xor or (bad) (bad) (bad) rex.WRX rex.WR rex.RB in jae sbb (bad) ds fwait outsl ljmp push sub out (bad) stc nop ljmp and fdiv loopne movabs test jo or retq test adc rex.XB xor jnp push jl test sub out cli frstor push rex.RXB xchg xor stos adc (bad) in (bad) sbb or in frstor jrcxz mulb (bad) and (bad) push sbb callq sub jne movabs (bad) cmp cli out shl movabs jae rex.WRB xchg clc gs rolb lahf orl addr32 xchg (bad) adc push movabs sub add xor repz (bad) scas lock mov lret (bad) sbb mov rex.B sub or rex.WRX adc adc jno (bad) (bad) int rex.WB repz cs rex.RB adc test ficompl xor or cmp out sbb push js (bad) imul xchg (bad) rex.WRXB int3 rol cwtl leaveq cmpsb (bad) (bad) (bad) cmpb (bad) rex.WXB xor rex.WRXB mov or movabs add rex.WRX mov pushq clc loopne adc pop rex.W mov lahf rex.WRB rcl popfq pop or outsb cmp sub pushq loopne lods (bad) stos enterq loopne (bad) cmpb and or movsl fcoms jmp imul test sbb loopne (bad) leaveq stos test jge out lahf (bad) xchg (bad) jmpq mov jo sub cld ss sub callq loopne push adc add rex.WR jrcxz loopne out (bad) (bad) (bad) (bad) or sbb pop movslq fsubr add sbb xorb mov outsb fstl loopne movsl jno jbe adc sub add pop stos fwait rol (bad) rex.XB (bad) out and callq mov cmpl mov (bad) fidivrl out rex.W ds outsl scas xor cli cmc cmp jno (bad) jle (bad) cld add rex.WRXB push or sbb sub sahf pushq shll (bad) fildll leaveq loopne movslq sub (bad) push outsb add outsl add jno rex.RB sbb (bad) imul lock jo cmp xor ds and rex.X jns (bad) fisubrl icebp (bad) xchg add jb addr32 (bad) mov out xchg cltd xchg pushq rex.RX decb xor xchg mov push in in insl and mov ds rclb (bad) movabs (bad) (bad) pop sub sbb (bad) (bad) (bad) movabs mov (bad) mov jg decb xor sub (bad) jle clc cmp icebp js (bad) push mov movabs lods imul fmuls adc rex.XB pushq sbb (bad) mov (bad) jle mov and rex.WRB icebp xchg loopne fildl adc lret jmp fbld cs mov pushq movabs adc mov jmp (bad) jno adc xchg test sbb adc out imul enterq cli pop (bad) insl xchg cmp loopne movsb mul lret ds enterq push jnp (bad) leaveq loope xor sbb xlat loopne lods add adc rex.WRB mov pop jno adc enterq xlat jmpq and test pop or cmc pop pop jo insl jns loopne mov loop ja icebp jne cmpl fnsave (bad) jg or cwtl adc fwait rex (bad) push mov push xor lret mov movabs ds lods jg retq jno pop push loopne adcb sti xor lock push xor xchg mov clc and jle jg rex.RXB rex.WRB push (bad) loopne jle cmp mov xchg rex.WR pushfq cmp cmc and xorps rolb (bad) (bad) (bad) cmpsb cltd (bad) (bad) (bad) and hlt loopne test xchg rex.RX sub fucom movslq (bad) test adc cli (bad) sti lea (bad) in loopne gs movsb imul pop mov loopne (bad) lock cmpsb jbe lret sub mov clc jns scas shrl loopne lock shrl (bad) mov in rex.WR loop xchg mov out out mov jrcxz rcrb mov loopne rex.WRB push sub jmp loopne es pop sub jg sarb mov mov (bad) jl sub loopne cld cmp rex.WR loopne mov movabs movslq adcb in hlt jne clc loopne fmuls jns in stos (bad) movabs rex.B mov jno cmp lods (bad) fwait xor ror jg test addr32 ss out or lahf sarb leaveq mov flds (bad) pop add push jmpq pop rex.WRX mov and popfq cs in test out mov adc or mov jmpq or movabs movabs push test pop xor pushfq sub not fisttpl (bad) rex.WB (bad) jmpq movabs add xchg lahf jo pushq sbb (bad) sti (bad) adc sub jb sbb movabs lock movabs pushq movabs rcl icebp int3 add fs lret jle and pop loopne and xlat js shl jne rex.W jns decl loop (bad) pop (bad) mov loop push cmpsl sahf stos mov rex.WRB lods sti or (bad) mov or mov xlat rex push sahf (bad) scas (bad) repz xor push fchs mov and loopne (bad) xchg rex.RB subl rex.B js sahf (bad) cmpsb (bad) repz and add movsb cld loopne test js fstp sti mov retq decb rex.B callq adc mov jb lods fs rex.WRXB or pop mov int3 xor ss xchg subl push (bad) add movsb sbb cmp dec clc lret pop add mov mov mov sbb insb or (bad) icebp push callq (bad) rex.WRB (bad) jmp leaveq mov adc mov enterq stos rex.WX or pushq and xchg (bad) (bad) cmc sub jp movabs repz jo rex.RB in (bad) test (bad) xor icebp cli out (bad) cmpsb (bad) (bad) movabs pop (bad) or sbb cmc mov adc sbb push or rex.WXB movslq std (bad) jo rex.WRXB pop push mov (bad) jl fdivl repz rex.WR rex.RXB std fmul lock pop in jo push add outsb mov (bad) movsl cmp imul movabs pop rolb int3 (bad) adc fidivr loopne repz jno xchg gs outsb rcr rex.RX fidivl clc (bad) (bad) cmpsl xchg push faddl mov jns sbb leaveq shl pushq cmpsl fucomp and sub adc scas (bad) rex.RX stos jrcxz pop rex.WB out out jae mov fwait loopne (bad) cmp out lods add loope (bad) cmp mov and in rex.R fs fwait loopne xchg pushq rex.W sti mov (bad) (bad) push xchg cmp or shl cli (bad) sbb pop loopne callq sub cmpsl retq movabs jge mov movabs push (bad) rex.RX loopne test lods lret sti leaveq stos shlb sub fsub iret cmp loopne xor cs adc movabs adc js loopne add mov sti push js in adc insl xchg cmc pop movabs (bad) sbb and jns mov mov (bad) out jle sbb (bad) movsb and lock addr32 in jle movabs lret jmp test jnp pcmpgtb lods (bad) rex.WXB rex.XB insl and (bad) loop mov loop movsl sahf and (bad) test movl out test sbb fnstenv out icebp jb xor rex.WRB in mov and sbb lea (bad) adc out (bad) cmp int3 sub shlb cmp mov jno (bad) and jmpq (bad) retq jmp sbb rex.WRX add sahf sbb test gs nop out mov sbb stc (bad) movslq pop sub pop push outsl or (bad) or pop add js adc cli (bad) (bad) adc jns out sub (bad) rex.RX fs mov jno movslq scas cmpsb decl pop pop mov movabs rex.B movabs xor xor sbb lods cmc sub sub pop out sub pushq retq jl xchg xchg callq test leaveq rcr or adc insl pop and sarl or in out mov jle (bad) sbb sbb imull movabs adc loope xchg push cmp xor lods imul lret pushq sub out rex.WRX mov rex.RXB add mov jmp mov mov sti jl divb and insb cmc (bad) rex.RXB pop pop jmp jae xchg rex.XB (bad) mov sub jno sti addl cmp (bad) test lods movsl sbb gs xchg addr32 xchg outsb mov pop adc add movabs movsb (bad) xchg rex.X in and in fnstsw pop out xor test jmpq rex.WRB rex.WRX sub es jns ljmp push rex.RB in insb sbb fisubl (bad) in jb sub movsl movslq xor adc pop mov loope (bad) (bad) sbb mov es (bad) rex.XB sub mov and insl jns (bad) mov (bad) jbe or sti sub fnstsw xor in sbb or (bad) (bad) lods repz mov sahf rex.RXB shrb es scas or sub add movb sbb orl xor icebp rex.B rex sti jmpq push rcr fdivrs rolb nop movslq mov (bad) sahf xor (bad) push fcoms movslq outsb sub rex.WX stos cmp std xchg (bad) jge addr32 rex.RB cwtl mov cmp (bad) (bad) (bad) icebp callq (bad) adc movslq mov rex.WR jmpq mov sbb outsb jae pop jno xchg callq (bad) push mov push cmp lods pop mov repz out sbb and add mov outsb xor rex.X (bad) (bad) cltd adc out rex.WXB rcrl (bad) xlat stc (bad) cmp lea rclb (bad) cmp lret callq and imul loope cmc cltd adc fbld int3 cmc rex.WRX rex.RXB (bad) je movsb or jmpq (bad) jo movabs xor sub and adc loopne push (bad) (bad) xchg cmp xor cld iret xor icebp pop loopne cli sub mov xchg jrcxz imul xchg (bad) outsl or jno outsb shll jg stos imul pop adc push movabs std add (bad) leaveq imul cmp sbb rex.WXB loopne addr32 lods cmp (bad) and repnz mov pop adc cli and mov xchg sub mov rex.WRB loopne sbb in fs stc scas push xchg add mov and hlt movsb cli (bad) mov xchg rex.WRXB stc std fidivr jns mov xchg add loopne lock stos cmp mov xchg (bad) clc fs (bad) sbbl (bad) xor lret mov movabs scas and and sbb cmc (bad) add insl sbb outsb movabs and pop (bad) rcrb xor cmp loopne (bad) sub lods (bad) mov movabs sub test outsb popfq jbe mov mov addr32 mov pop push in icebp jno pop sbb (bad) or out (bad) lahf or mov xor rex.WRXB mov lock rex.RX mov jmpq jns jge cltd insb cmpsl xchg loopne lods lcall xchg fs sbb sti and mov loopne stos gs mov (bad) loopne or jbe inc adc and xchg repnz mov (bad) xor movabs loopne incl adc fmulp jmpq testl rex.WX repnz xlat (bad) (bad) shl fisttpl movabs (bad) rex rex.WX leaveq out push jmpq pop vaddsubps (bad) mov loopne and int (bad) rex.RX and push push (bad) and insl adc loopne movabs xchg loopne mov enterq insb loopne in lret movabs (bad) jrcxz fistpl rex.W subl movabs jle out lret mov (bad) pop or loopne (bad) sub cmp ror lods mov xor mov xchg pop mov add in adc movabs lods mov sub xor push loopne and pushq shrb xchg fldt retq (bad) fsubs pop fcmovnb mov rex.WX adc (bad) rex.X fs xchg cmp xlat sti sti jle push and pop sbb (bad) retq sahf lock adc xor (bad) fbld jno mov and fmuls pop rex.XB lock (bad) leaveq leaveq xor fucom mov out fisttpl mov sahf out loopne jp enterq cmp cmpsl loopne adc lods pop xchg and add insl mov adc ja (bad) mov xor rex.XB rex.WRXB jbe loopne rex.RB (bad) rex.WB add enterq (bad) (bad) jl xchg mull movslq fs rex.WX pop callq cs loop sub mov (bad) mov movabs cmpsb fdiv pop (bad) (bad) jp xchg add imul in je fnop or movabs add (bad) std fadds test outsl in fisttp pop js sti rex.RB mov je rex.RX (bad) (bad) mov sbb sti cwtl int loop rex.W jns movabs pop loopne mov cwtl xchg rex.WRX jl movabs jg in jnp rex.R mov movabs rex.R (bad) mov rex.XB frstor jle cmp in xchg jne sbb (bad) gs movslq (bad) xor cmp add xchg sub scas loop xchg cmpsl fwait mov mov rex.WRXB (bad) (bad) (bad) (bad) pushfq lret rex.X retq loope (bad) xchg rex.RXB xchg pushq (bad) mov mov pop insb xlat or std lret cwtl rex.B (bad) orps pushq push in lods (bad) mov cld jo fsubrl loopne jnp (bad) rex.WX std push adc loopne jmp xchg cmp movabs int loop sbb (bad) rex.XB loopne lea push je jbe loopne xor push repnz cmpb (bad) fmuls mov push (bad) loopne rcll movabs and movl (bad) add ds (bad) loopne negl cmp (bad) or sub mov adc fnop rex.XB shl add push loopne scas mov jg sbbb (bad) (bad) orb xchg (bad) mov mov mov enterq notb outsb cmpsb (bad) (bad) rex.W mov (bad) (bad) or fnstenv fisttpl retq jmpq decl xchg jge enterq pushq xlat icebp loopne pop (bad) lahf push ja (bad) hlt loop adc and sbb cltd in push cmp cli int3 mov cmp and sti icebp cmc movslq or mov add jnp (bad) ja push stos mov and cmp (bad) adc scas jb adc stc adc sub nop movsb test adc sub rcll rex.WRX (bad) imul lret callq or sbb loopne fucompp nop rcll and cmpb loopne xchg es nop xor fisttpl mov nop cmp cli rex.WXB sbb mov xor mov (bad) add loopne pop stos add insb mov mov (bad) rex.RB leaveq pop loop cmpsb add (bad) adc jnp cmpsb (bad) (bad) out or and push xor and adc sub fisttpl xor rcl pop add loopne xor sbb mov lock cmpsb (bad) test clc (bad) movabs pop xchg in rcrb rex.WR cmp cmpsb xchg (bad) sbb idiv js fistpl add test and sub push cmp loop shll fcmovnb or ss jg (bad) int3 out cmp mov (bad) (bad) in sahf and (bad) clc and (bad) leaveq cld cltd xchg xor mov gs cmc adcl sarb push fnstsw rex.WB loopne mov jnp ss fucomp fcmovbe (bad) sbb pop addr32 hlt pushq pop sti mov in rex.XB (bad) lea in fsubr mov and xor jp fwait cld (bad) ficom (bad) cmpsb (bad) mov pushq shlb fldcw adc js shl jp lret or push cmc je jbe loop mov ljmp mov popfq leaveq loopne insb rex.B stos or enterq jmpq out popfq gs loopne stos nop xor repz and mulb movsl in in (bad) and stos (bad) (bad) sbb jmpq sti jg (bad) pop lret nop add xor jp loopne xor in add lahf (bad) retq cmc loopne popfq xchg nop and xchg mov rex.W or add pop adc movsl adc hlt jp loopne pop and jmpq cmc outsb sub lods (bad) xchg loopne mov xchg roll data16 (bad) xor add xchg (bad) (bad) mov js lahf cmp rex.WRB movsl stc jp cld push and (bad) mov out loopne lock lahf push loop movsb (bad) lea loopne cli rex.WRB rex.RB loopne mov (bad) jo cmc add loopne jnp sub cld movabs in nop icebp cmpsb std rcrb rex.RXB pushfq jmp xchg xor add sbb cli sub mov push loopne or xchg rex.WX scas rex.X xor movabs movabs test pop jno out xchg icebp scas mov sbb mov rex.RXB mov imul fdivrl jae xchg insb sub pushq popfq fildl or hlt je fcompl jno mov cltd loopne test (bad) jmpq movabs jbe push push loopne jmp mov rex rex.WB loopne repz incl leaveq or std loopne mov icebp lock (bad) loopne sub (bad) push cmp mov xor push and leaveq (bad) jle mov jle xchg adc mov clc lret jp (bad) (bad) pop mov mov mov xorl (bad) sub (bad) loopne out sti rex.WRXB insl lock sub scas fidivr or loop (bad) in ds mov adc loopne (bad) (bad) (bad) cmc leaveq (bad) test in mov movslq rex rcl or mov cmp iret loopne xorl add pop rex (bad) push mov cmp fcmovnu (bad) data16 or rex.XB xchg xor cmp scas in jl rex.WXB loopne cwtl stos adc jnp callq rex.WR repnz xlat cmp mov sbb pop jmpq sbb mov or leaveq loop (bad) mov adc pop xor in xchg loopne in push test mov (bad) fsubs sub fldl fildl cli and jo (bad) sbbl cmp xchg and subb add jle (bad) cltd jp loope data16 rex.RX (bad) loopne fcoml jg or (bad) and or mov pushfq xor pop mov (bad) movabs (bad) movslq adc imul jp loopne movsb movl fildl sbbl (bad) movsb xor push pop clc push decb xor lods push cli xlat or or loopne jnp out adc cwtl and callq and jle cmp (bad) mov pop in jg rex.RXB (bad) (bad) and cwtl adc addr32 adc movabs and out fidivl (bad) mov mov and fldl jp cmp movsl sbb (bad) movabs and (bad) nop fadd and orl pushfq jp shrl rex.RX clc (bad) mov retq xor push (bad) and or mov (bad) (bad) (bad) retq setp rex.WX (bad) (bad) movabs mul data16 cs test jne fs cmp sub in jle stos mov stc loop lret xchg (bad) cmp nopl push shlb add ss test sar (bad) cmp push xor xchg sbb loopne rcrl fdivr callq jne adc pushfq and icebp loopne mov pop loopne pushq (bad) iret loopne js ds movsl cs in xor stos cmp loopne mull addr32 ss xor out pop xor sub rex.WXB hlt shr fwait adcl shlb cmp xor mov jmp pop int3 loopne movabs out add push push rcll cmp mov movabs mov sarb sub loopne lock xlat sti pop add loopne jrcxz je or pop loopne fwait xor in std pushq loopne jbe pushq loopne hlt fdivs jrcxz mov add movslq push mov outsb shr xchg sti stos loopne loope pushfq shl mov mov add jmp (bad) pop andb fdivrl in (bad) or cmp adc xor add lock (bad) notb int (bad) adc lea rex.WXB rex.B cli pop (bad) loopne (bad) adc movabs pushq add std (bad) adc (bad) and and cmp jrcxz xor imul sub sbb addr32 or jrcxz push hlt rex.RX cs fnsave pushq sub mov (bad) mov (bad) jno xorb jbe fild cmpl (bad) rex.WX mov fisttp pop (bad) jge std pop out bnd rex.R (bad) jrcxz push sbb adc cmp (bad) fisubrl enterq mov rex.RB or (bad) and pop rex.RX mov outsb mov test sbb negl fwait jl popfq sub icebp (bad) imul mov mov enterq (bad) cmc sbb jno sub (bad) movabs push pop mov (bad) out or lar fnop loopne mov push (bad) pop lock xchg lock xlat movsl (bad) (bad) xchg loopne test jns sbb xchg (bad) cmpsl out jo (bad) cmp pop sub pushfq out loopne jne (bad) int add xchg movabs and test rex.RB (bad) std (bad) loopne pop cmc (bad) out rex.WRB and and pop rex.RX pushq mov xor (bad) (bad) repnz mov loopne push movsl or ffreep rcll adc (bad) jo loopne (bad) mov xchg xchg js sbb add xchg out or xor lret (bad) jne repnz clc jnp (bad) movabs or add loopne out (bad) jp test mov adc pushfq loopne xor xchg jle pop loopne (bad) hlt (bad) fadd xor mov sub loop (bad) sar lock rex.WRX lret mov mov enterq and (bad) jle jrcxz shrb cmp lret mov (bad) xchg rex.X jae mov pop cld xchg jo movabs rex.WRB mov mov nop sub out (bad) add loopne jp rex.WX out jg pushfq sub int3 jbe push and loop (bad) push sbb movabs jns sub sbb loopne mov ror rex.RX incl or xor mov insl scas jmp push loopne movsl mov xchg mov add mov imul jmpq jne movabs add rex.X (bad) iret sbb outsb repnz or (bad) (bad) popfq fucomi or cmp (bad) nop xor test add mov movslq jle cmp adc jb js stc in jrcxz loopne icebp mov (bad) cmp leaveq jno int hlt (bad) jmpq (bad) and test loopne cmp imul and lock loopne rex.RXB je rex.RX and loopne (bad) cmpl (bad) or loopne test cmp cltd and test push (bad) in sub sbb sbb (bad) jno sbb pop (bad) loop jbe rorb scas mov stc jno and pushq iret rorl rol (bad) jbe sub add out repz in (bad) xor jb outsb sub xchg xchg sbb jp jo rex.R rex.RX in jmp sbb sub pop rex.RB push xor (bad) (bad) (bad) push clc jo add loop and xchg rorb jrcxz rex.XB imul repnz pop test xchg pop xchg insb (bad) add sete mov (bad) jge cmp rex.WB jns lea (bad) stc enterq cmpsb (bad) rex.W cmpsl cmp rex.RXB and and orl mul mov es mov jmpq sbb jl fmull lea mov leaveq mov push pop push in sbb mov pop (bad) jb mov test pop lods (bad) test sub data16 (bad) (bad) out popfq or mov imul xchg push popfq cmpsb push cli rep std fcomps rex.WX rex.WB xchg (bad) fadds ss fbld iret movslq stc jno sbb sub cmp (bad) (bad) jbe shlb mov mul loopne rex.WXB test rex.WRX xor movabs scas add loopne test outsb loopne pop cmp jl movabs test xchg lods sbb rex.RX rex.WR stos test ja xchg loopne push (bad) jge (bad) pop shl cmpsb fmul and out lret adc cmp xchg mov rex.W xchg jns pop movabs mov mov (bad) (bad) (bad) (bad) icebp fbld or out mov sbb lret mov test rex.WRB or cld (bad) fmuls add add mov sub in cmp ljmp icebp in (bad) movabs movabs push xor xor repnz and add loopne retq and insb add (bad) mov jns gs (bad) mov (bad) shl (bad) mov subl shr (bad) lea pushq push pop ja sahf mov enterq loopne pushq pop mov lret sub ja and hlt cmpsb loopne cmpsl out es (bad) pop mov add (bad) pushq insl js cwtl rex.RX push rex.B (bad) in (bad) loop (bad) mov movsl xchg jae adc adc stc fisttpll cmc retq xchg rex.XB js xchg in outsb add cmp or pop movabs loopne jb xor rex.XB loopne rex.WXB mov and jmp retq out pop pop (bad) adc int3 movabs or outsl sub add (bad) sbb (bad) cwtl and xor loopne fsubrs icebp mov mov movabs (bad) cmp decb jno push jl adc push jmpq and jne and mov flds cmc rex.R stc mov rex.RXB (bad) jb jg cmp (bad) loopne mov add cmp pushfq loopne cmp pushq retq loope (bad) lret and cmpsl testl add sbb sahf (bad) loope adc or pop stc jle add stos rorb movabs mov xorb loopne jns push shrl hlt mov mov (bad) movabs adc rex.B loopnel cmp sub (bad) rex.WB test xchg xor (bad) fldcw rex.WR jo movabs sbb xor rex.R jrcxz sahf jne (bad) out loopne leaveq icebp mov (bad) fdivrl or jne rex.WXB cld rex.R or mov ja rex.RB cli push rex.WB out js iret loopne ror imul (bad) cltd loopne xchg fsubs mov fwait xor ficompl loopne enterq xor in or rex.RB mov mov fsts add jb fnstsw (bad) jmp rcll outsl fsub jp ss mov rex.R loopne (bad) movslq cmp xchg lea xchg in fldl jmpq and ds loopne lock xchg (bad) (bad) mov jmpq fisttp sti loopne and (bad) mov int3 or out rorb adc pushq rex.WRB (bad) mov rex.RB pop (bad) sub imul xor movabs loopne popfq and rex.R (bad) test rex.WX cwtl (bad) lods fs insb mov cli or sbb adc fsub test rex.X loopne popfq lock xchg xor icebp insb jmpq rcrl sbb sbb fnop mov mov insl or and xor sub rep loopne mov (bad) sbb xor (bad) and loope icebp lock sbbb mov mov jmp (bad) pop sub jno ja and rex.RXB mov loop (bad) mov cli push adc jae sub sti rex.WX pop rex.RXB cpuid rex.WX adcb nop lods fistpll outsl popfq in pop (bad) test jl adc repz (bad) jge rex.R push pop cli clc xchg sub cmp pop or (bad) rex.XB lods push sbb test adc fbstp out mov or mov fildll mov (bad) in lods rex (bad) shrb rex movslq pop rex.WR rex scas add (bad) pop fwait cwtl outsb in icebp xor cld leaveq mov adc movabs mov testl add adc mov sub iret lock outsb callq cmp fs insb stos fwait lahf push lock sub in rcl rex.W (bad) stc mov in clc in mov mov mov (bad) rex.WB add jrcxz fisubl mov ja or int3 fs (bad) adc jge (bad) push (bad) jle mov sbb (bad) jo pushq movslq popfq jp pushq (bad) adc loopne or jle cli (bad) fsubr add sbb movabs cmpl push imulb xor sub sub subb rorl cli cmpl adc push jge fcomp sbb callq mov loope and cmpsb js loopne cs (bad) cmpsl cld mov js loopne push fs imull leaveq loopne cltd xchg jae xor xlat lea mov test (bad) je,pt or mov cwtl out xchg nop fcmovnbe scas (bad) int3 (bad) (bad) stos jns (bad) loopne push rex.WRB loop xchg repz adc (bad) rex.RX shl ror rorb mov jl sub out loopne pop (bad) (bad) sbb (bad) leaveq cmp (bad) rorb xchg lret cmp (bad) imul loopne pop xor mov mov ror rex.RX out (bad) loop movabs add loopne nop sub mull loopne rex.R fdivrs rex.WX mov adc js repz out test jmp xor jl icebp jne mov (bad) outsl mov lods push outsb (bad) sbb leaveq push cltd xchg addr32 pop jp movl in cwtl rex.WXB mov add ja leaveq fs iret mov fsubs lret in rex.RB rex.RX imul cwtl int or clc jg imul (bad) or in in and add jrcxz add pushq cmp jle mov callq test imul retq (bad) retq pushq or movabs fsubr push cvtpi2ps lret ljmp rcrb loop (bad) (bad) mov sbb cli loopne cmpl (bad) loopne and (bad) rex.X imul or (bad) or enterq in push nop xchg fs mulb (bad) ds fimul in sbb loopne repz (bad) (bad) mov loopne out cmp loopne stos add sbb cli rclb movabs or jmpq rclb add sub movabs pushfq mov xor rex.WRXB xchg rol test loopne or lret std maxps (bad) rex.WRB sbb jge xor jo sub xor out fistl outsl xchg cmove and (bad) cmp (bad) pop push xchg (bad) xchg lahf insl sahf outsl movabs xor sbb test mov pop retq imul (bad) data16 pop sub cmp movabs (bad) xchg pop xor loop adc jmpq xchg rex es (bad) jmpq pop ljmp cmp (bad) jne cmp push loopne pop xchg nop test lods jbe pop fadd mov or in xchg (bad) mov mov (bad) loope and loopne fimull pushq (bad) push xchg (bad) cltd jns test sub jnp lret pushq (bad) ficoml in (bad) or sub mov movsl fmuls jmpq fbstp outsb out add loopne iret ss shrb and mov nop js sub mov (bad) (bad) rex.WRXB xor lock (bad) mov xlat (bad) sub loopne mov (bad) fildll add lahf xor ja xchg out push mov mov add sub xchg sbb (bad) loopne movabs rex.X xrelease jno popfq stos (bad) (bad) jmp (bad) and js jle loopne push add mov ss test mov repnz in (bad) loopne mov jl iret loopne callq mov insb add retq (bad) jmpq stos sbb (bad) loopne sahf nop cmp jl (bad) fcmovnb sbb movabs mov jb cmp rclb repz lods or outsl test adc loopne sbb repz jns insl pop loopne and icebp jbe mov and nop pop xchg jmpq (bad) add mov mov stos fwait (bad) data16 xor adc icebp (bad) loopne and mov ja rex.RX mov popfq lret or retq cmc cmpsl roll fucomip add (bad) rex.WR xchg mov mov rex.RX adc add push repnz loopne rex.R (bad) in pop imull push push sub loopnel jbe mov mov xchg retq sbb cli rex.WXB movl loopne sub sbb (bad) loopne cmpb popfq mov pop (bad) test sahf mov xlat (bad) repz (bad) out push data16 loopne scas add (bad) stos or add in xor imull in jg rex mov rex rex.WR and adc xor iret ja mov cltd lcall rex.XB rex.WXB lods xchg add callq loopne add push rolb mov rorl loopne rex.WB (bad) jae rex.R mov shr rcr cmp jo mov movsb fbstp and mov sub imul cmp fnsave push push jbe rex.WXB loopne or (bad) stos movabs sti sbb loopne mov mov rex.X fs add add rex.B scas pushq lahf and jno (bad) test pushfq loopne rex.W sub mov cmp pop (bad) push adc cltd gs (bad) rex.WR pushq repnz cmp clc lret push adc fidivl sub je (bad) sbbl fist out adcl rex.R shrb push jmpq lret (bad) push and nop and rex.WXB cmc in (bad) cld mov mov or dec or cmp jl loopne subl loopne cmpsb (bad) mov adc lock jle mov mov fcomps mov pop movsl and sub (bad) pop and (bad) movabs int3 rex.WXB jrcxz sbb shrb sahf loopne (bad) xchg (bad) (bad) rex.WRB in cmp (bad) icebp rex.WX sbb (bad) add mov (bad) mov pop push cmp rex.XB add out xor cld xor lahf pushfq (bad) adc add sti adc add lods sbb (bad) clc loopne,pt (bad) (bad) cmpsb movabs pop rex.WXB fstp out (bad) fisubr cmc sub sbb loopne jrcxz mov (bad) je or cmp (bad) cmc sub mov mov addr32 jrcxz adc rex.WB xchg jnp and push (bad) adc add loop mov (bad) (bad) es sub mov movslq int fdivl (bad) add loop xor adc lea adc (bad) rex.RX (bad) or sbb mov add (bad) xchg jle sti movabs and je or jae mov imul xor (bad) loop (bad) sbb clc movslq sbb lea out in or iret rex.WR or imul (bad) push in mov pop sbb clc (bad) xchg adc rex.W rcll sbb in (bad) retq rex.WRB out sub mov rex.WR rex.R and out test and pop mov jg cs and (bad) stos jbe sbb test sbb in (bad) or mov loopne lret rex.WB (bad) (bad) (bad) push fnstsw add xor loopne rex.RX test mov cld and sbb loopne out or mov sahf shl and leaveq jmpq cld int pop mov or jge or gs adc xor cwtl (bad) mul outsb pop xor in lret out cmpsb sbb nop or cwtl xchg rex.WB cltd gs adc sub jmpq (bad) rex rex.RXB rex.WX (bad) popfq rex test pavgb jno mov xlat pushfq jle imulb insl (bad) xchg pushfq decl test (bad) mov stos retq lods in sub scas iret jrcxz adc addr32 (bad) lods in fs sti retq jmpq or xchg loopne (bad) jp (bad) xor sub sbb cmpsb scas sarb xor retq test xor loopne jno jns mov rorl pop pop lret rolb sub mov xor or and out loopne jnp pushq in repz adc cmp rex.WRXB loopne loop movabs mov add repz sub loopne (bad) in mov rex.RX (bad) (bad) loopne rolb push decl push jp (bad) or rex rex.WRXB cmp in movabs or lods sub loopne (bad) fadds add xchg or out std and jns repnz push (bad) (bad) xchg sub xchg idivl cwtl lret loopne in cmp clc push jo (bad) pop shl or cmpl ja movabs scas and pushq xchg clc outsl pop rex.WRX shl imul xor stos test (bad) (bad) sub sti cmc pop loopne lock sub mov xchg or push (bad) loopne es and insb mov loopne rex.X jmpq jbe mov retq lods (bad) mov retq add loopne outsb xchg int (bad) xchg in mov loope sbb adc xor push jnp pushq (bad) (bad) callq (bad) loopne std fidivrl loopne mov jg mov lods (bad) mov movsb iret imul movabs incl clc hlt test loope (bad) iret sbb xchg and (bad) or addr32 in or xchg iret callq in je or lods jp pushq (bad) pop or lods data16 lods movslq or (bad) cs and push xchg in (bad) jmpq add pushq gs icebp fimul outsb icebp movabs in (bad) outsl rex.WRXB mov and mov or and rex.WXB in jrcxz rex.WRB mov push decl xchg sub cs out push xlat loopne out (bad) cltd int (bad) (bad) loopne shrl (bad) std imul mov ss fmul setne and xchg loopne push or mov sbb cltd add idivb pushq sbb or ss loopne xorl cld xor sbb test mov add roll xor adc push xchg rorl popfq (bad) jle rex.WR sub (bad) addb js loopne int3 and push pop sub leaveq cld cmp (bad) loopne int3 fnstenv cs loop mov pop out jl (bad) pop (bad) and add callq mov mov movslq divl adc movsl loopne decb callq sar loopne rex.WRB (bad) push cmp movabs int3 pop pop cmpsb (bad) and (bad) mov retq rex.R loopne push xor rex.XB (bad) mov loope cmp xchg or pushq push jb loopne fnstcw and (bad) fwait cmp sbb es lock loopne lea (bad) orl xchg (bad) shr rcrl adc rex.WX in sti rex.WXB ss jb rex.RX pushq sub fmull sub sahf rcrl (bad) loopne (bad) lods (bad) insl (bad) out repz rex.WRB cmp jne (bad) mov fdivr rex.WRB shl out clc sbb and pushq pushfq cwtl (bad) cmp jmpq pop movslq push mov enterq sub (bad) sbb nop cmp rex.RX loopne in or out subl int mov rex.WX lock rex.RX ds xchg sbb mov pop nop cltd movsb xchg (bad) fdivl test loopne sub push mov add xlat (bad) icebp lret loopne (bad) (bad) movabs movabs mov movslq and adc jle (bad) clc mov jns stos roll xchg xlat loopne lret pop movsb (bad) pop lock callq in mov pushq shll add shrl loopne out test jne loopne or sbb int3 rex cli (bad) lods (bad) jle movslq xchg or vpabsb add (bad) and add lret loopne movabs jmpq cmp pop mov and (bad) loopne rcrl rex.WB fs rex.WXB fwait and rex.RX nop cmp rex.X pop mov ds rex.W rex.WX icebp in sbb add and fldcw rex.W rex.WRB mov sub mov movabs fsub scas add retq loopne sub mov lock mov jge add jne mov push jns jae sbb lcall jge and (bad) rex.B jns je jle adc or xchg rcrl icebp shr adc callq repnz test retq loopne rex.B lods clc (bad) loopne mov pushq sub fistp ja hlt nop jrcxz movsb (bad) (bad) mov hlt sbb out out movslq jl stc xchg loope sbb movabs (bad) rex.WXB mov sub adc fs mov sti or xchg mov cli xchg sub jmpq (bad) lods nop int cmpsb fucomip shrl test (bad) or sub add movsb cli cmp xor mov clc jp push xlat cwtl test jge add movabs sbb (bad) fadd add xor movabs push jbe (bad) loopne or add push ss outsb jb jmpq fcomi or shrb mov popfq loopne jo xchg pop sarb out xor in in or loopne adc pop in (bad) mov mov sbb (bad) fcmovnbe xor loope (bad) and loopne adcb in and or lret loopne sahf pushfq rorl mul loopne (bad) lods jo ja and loope callq mov fcmovne or fild pop in retq jmpq xor xchg retq mov scas frstor lahf retq loopne adcl jrcxz (bad) cmc imul add (bad) in js adc rex.W loopne push inc and jle push add cs out adc loopne fadds repz (bad) jle lret cmp and (bad) and (bad) int3 loopne mov mov retq (bad) lods roll lahf lods add loopne sarb loopne cld jrcxz adc cmove loopne cmp sub test jae (bad) sbb (bad) xchg adc int3 addl stos jb cmpsb rex (bad) pop ds icebp cmp cmp addr32 shlb iret mull loopne popfq cli stos jle xlat jae test sbb mov fcompl imul rex lock mov out or int3 pushq (bad) xor int3 or xor retq (bad) int rex.W imul rex.R addr32 loopne sub push jrcxz push adc mov sub shr test xor ss enterq cmc (bad) cld add xorl icebp mov (bad) xchg or fwait pushq fxtract or loopne (bad) mov lods rolb sub push sahf adc lret loopne cmpsl xchg test in sar xlat repnz sbb movsl lret fistpll adc jrcxz sbb pop jp cmp pushfq loopne pop (bad) mov scas (bad) adc mov loopne and or (bad) rorb (bad) mov (bad) adc lock adc sarl add add pop rex.WRB es data16 rex (bad) loopne pop rex.RXB fsubp mov je loopne rex.X cli loopne rorb loopne es mov (bad) jg (bad) movsb (bad) xor loop lcall (bad) sbb lret sti mov scas lret stos mov loopne addr32 vpaddsw in imul popfq lahf int3 in add in vpshufhw pushfq cmpsb gs pushq add fs jns clc pop rex.B cmpsl or (bad) jo nop cli shll and rex.WRX sbb (bad) loopne movsb rcr test jrcxz jge repnz xchg rex.WR xor pop jbe ja rex.R (bad) mov adc jb cld in pop mov pop add movabs fprem and (bad) rex.RXB or movabs (bad) adc xorl repz adc loop repnz hlt pop jrcxz out ror rclb cmpsb or sub cmc and iret (bad) adc pop sbb movabs xchg pop mov movsl sbb cmp jb and popfq xor repz (bad) mov nop jp loopne (bad) int3 in stc rex.WB icebp std pop (bad) (bad) add jae adc pushq popfq cmp repz (bad) or loopne mov pop movabs add (bad) and jnp xor and lods or stc rorb (bad) je (bad) leaveq xor movabs insl jge and shll fbstp mov and int3 mov jo xchg push sbb xchg cmc lret insl fcoml (bad) adc add and paddsw and mov scas movsl xchg rcrb int3 icebp insb and push xchg in xor clc callq (bad) xchg icebp nop pushq sbb hlt xor fildll (bad) movsb fnstsw movabs rcr pop sahf pop callq fs xchg retq adc mov repz or (bad) jne test sbb sbb sub rex.RXB rex.WRX lret movabs add retq push repnz (bad) xchg adc adc sub jno cmp jmp pop mov cmc xlat pop sbb rcr in sbb lock lret add xor or rex.WX xchg (bad) rex in shl mov sbb rex.X mov jmp (bad) (bad) rcrb outsl xor pop mov insb movabs sbb callq (bad) enterq cmp cmp callq cmp rex.WB sahf adc or push sub (bad) in lret or cmpb pushq lret jmp sarb xchg nopl rcrb movabs rex.RB in rex xor mov repnz lret out sub jb (bad) jnp jo repnz icebp (bad) negl rex.R lock jno add rex.WX or loopne icebp jle push adc or and and lods or pmaddwd mov faddp loope jns (bad) movabs adc int xchg insl js adc and lret outsb loope jnp (bad) data16 mov xchg xchg sbb jmp jb sub mov xchg movabs js icebp jae (bad) push lods xchg mov fdivr jmpq lock callq jle insl push fcmovnu mov scas movabs (bad) sbb mov int enterq test (bad) sahf lods outsb or cmp cmp add jrcxz rex.RX fistp sbb fidivr movabs shlb pop loopne xor cmp (bad) loopne gs sub rolb int jne pop cmp push pushq jrcxz cmc (bad) mov jg xor or sub mov (bad) (bad) (bad) (bad) cmpsl add sbb (bad) sub cmp and mov xchg push and loopne jle fadd cli rolb jno jns ja xchg not icebp xor nop loop fstpt and xchg repnz psubb mov dec cmp jle stos outsb sbb mov push in cmp sbb cmp add ja rex.WRX callq mov stc nop jno rcrl mov push (bad) fwait clc xchg mov loopne cmpsl adc rcrl test pushfq xor jl sbb shrl cmpsl cmp popfq bswap sub loopne sub jp jmp retq (bad) shrl sbb xchg cli rex.B rex.RXB sbb add (bad) sbb movabs pop xchg jne cli loopne and popfq cli xor and xchg xor jb clc decb loopne (bad) push sbb rex.WRX cltd (bad) movsl (bad) (bad) movabs imul insl mov ds adc mov jp fdivrs je lods (bad) fnstenv mov jge cli sbb enterq lahf xlat scas loopne,pn rorb loopne (bad) cmp xchg jo lea cwtl lods cmc adcb loopne jmp jne rex.RX insb sbb lea out andb movsl (bad) (bad) pop or lret mov and xor xchg xor ss jmp add loopne es xchg pop (bad) ficompl or movabs loopne (bad) loop jge idivb loopne mov int jnp loopne rolb and mov mov lock repnz (bad) (bad) cld (bad) negb and mov fwait xchg shrb loopne add cmp popq test lock rex.WX or fisubr cmpsl callq add loop mov jns sarb add rex.WRB pop add lods or jg fistl incl pushfq cld lods hlt sub retq test cmp sbb (bad) outsl add and cmp scas in decl cltd cmpsb fwait mov (bad) out (bad) (bad) in sbb insb cmc lcall push and or push loopne mov in loopne rex.RXB sub xchg sar hlt idivb cmp push or sbb jmpq cmc xor sub mov fisubr fbstp (bad) mov mov popfq or (bad) jp pop sub sbb fstp xchg loopne test icebp cld rex.RXB movabs mov jae push pushq scas (bad) icebp lods fwait push jo (bad) or mov pushfq nop roll je (bad) loopne loope test cli jl movabs mov (bad) pop loopne sbb in jge mov mov mov jg add movabs rcrb fadd test (bad) pushq rex.RX loopne ja cltd loopne or xor pop mov and rex.WXB sub loopne cmpl rex loopne pushq mov (bad) rex.RB test cmpsl or fistl jno (bad) imulb adc loopne mov fistl negl rex.XB rex.WRXB jp loopne pop xchg loope icebp movabs push cwtl cld loopne sbb add (bad) ja cltd xchg inc loope add (bad) test mov jrcxz xlat loopne movslq (bad) xor lods retq loopne imul lea jmpq mov movabs push xor sub (bad) loopne movabs jbe add test iret adc fadd shrb cmp add mov xchg mov ja xor loop loopne movabs gs fs je (bad) shl push (bad) leaveq (bad) jp (bad) sbb and gs imul jl stos and shll sbb icebp xchg jg (bad) add callq callq movabs sbb (bad) lods adc in nop adc adc cmpsb mov jle xor push icebp mov sub add fwait je fisttpl rex.RX jb in (bad) repnz (bad) sub (bad) std (bad) jp movabs divb fsubrl icebp leaveq rex.XB rex.WB mov cli xor (bad) (bad) rorl andl icebp pushq orl ficom retq repnz mov mov mov rex.RXB xor cmp nop (bad) std lods shl and js push rex mov (bad) mov or lea xchg jg and loopne cmc fsubrl (bad) fdiv mov (bad) shl fcomip (bad) cmpsb in hlt and int3 (bad) sub or fidivr loopne adc ja (bad) (bad) rex.WRXB cmpsl in adc hlt movabs mov cmp mov (bad) xlat pushfq loop rex.WRB fwait mov xor rex.X int3 (bad) lods adc jns subb es test push (bad) mov (bad) retq jnp sbb lret hlt int3 (bad) loopne (bad) fcomps mov push movabs add cmp cmp leaveq mov fnop add pushq adc mov push or outsb movabs rex.X pop pop xchg cwtl fildll (bad) rex.WRX xor add hlt fsubs xchg xchg jo jmpq movsb jl nop xlat jb sbb icebp nop (bad) js,pt rex.WXB xchg iret (bad) mov jg movb std roll push (bad) stos or jns movabs notl shrb in and nop fsubrl jl jno adc xchg scas js rex.WRB shrb xor rex.RX jle rex.WRB fldl fcoms movsl out int (bad) nop out adc jbe loopne sbb (bad) cmp loopne out pop sbb fiaddl loopnel fs std mov pop add sbb gs (bad) gs roll loopne pop jge push fldl lret xchg mov int3 xadd sahf fisttpll shr push add sbb lock jle cmp xor jmp (bad) movabs (bad) imul (bad) scas sahf add jns test cwtl mov add imul mov add cmp loopne jo enterq and adc movsl xchg or mov (bad) (bad) add xchg (bad) repz orb jmpq movabs jns loopne movslq movsb loopne movl imul sub sub rex.WB (bad) rex.B lcall jae shr movsl xorb in xrelease test add (bad) test in (bad) data16 sub ja mov rcrl loopne (bad) loope lahf sub mov imul shr (bad) xchg cmpsl sub movsb nop sub fidivl push (bad) sti cli sbb jmpq test loopne callq pop rex.WRB shrl cmp cmc rorb movabs xchg rex.WXB packuswb loopne (bad) shrb mov sub pop pushq fnop int3 rex.X add sbb test (bad) lret (bad) fisttp sbb sbb stos sbb mov (bad) adc pop lock xor data16 add pop rex.WB cld adc (bad) mov hlt sti mov xor lret mov jmpq cld repnz ss jge (bad) out rex.B stos rex.WX adc sbb cltd lods sbb fimull push imul pop pop (bad) push scas lretw pop rex.R clc xor rex.RB sahf adc (bad) cmp pop and fs push sbb rex.RXB (bad) leaveq lret rcrl (bad) mov jl fdivrs xchg iret movabs movsb cmpsb repnz stos outsb loope pop push (bad) loopne ja retq mov jg jae fs sub outsb (bad) movslq sbb imul add xor and cltd out decl pop and fstpl mov (bad) out xor mov xor in and mov sub imul vmovupd (bad) or jne (bad) leaveq rex xchg cmp stos add rex.WR repnz std sbb cli ss stc loopne sub (bad) ljmp (bad) movabs pop rolb movabs fnstsw rex.RX out (bad) in and fmull (bad) loopne rex.X (bad) (bad) callq (bad) int popfq (bad) mov push (bad) shlb mov (bad) std outsl pushfq fdivp rcr mov mov sbb mov xchg jp add loopne xchg rex.WX sahf pushfq or loopne,pt mov sar rex.R insl loopne mov imul (bad) or in push jnp in rol cmp sub rex.W jg in sub retq pop cli rex.XB jmp sub fidivrl cmp imul shlb or icebp xor mov (bad) in ja sbb fdivr ds adc (bad) sub test (bad) fisubl (bad) or mov push (bad) repz cltd (bad) jrcxz loop loopne adc xlat cmp rex.RB test test pop ds xor out imul in jg and sbb jp test shrb inc stc incl adc mov (bad) loopne (bad) jmpq ljmp jb add add and scas jns mulb (bad) (bad) in rex.WX jp lahf retq cmp (bad) cmp nop lods xchg movsb movabs adc outsl push mov rex.RXB sbb rex.WRX push imul std je movslq (bad) jg mov sahf jno mov and push sbb hlt mov (bad) popfq (bad) jb rcl mov leaveq stos sbb mov rcrb loopne out xchg out shlb push cli pop nop (bad) mov jg repz and cmp sbb push lods cmp add retq rex.X loopne mov or jrcxz jne (bad) cmp loopne test mov or add out rex fsubrp jge in add loopne mov push in loopne push mov clc faddl loopne push cmp jne vmovlpd mov lods (bad) adc or test ss pop rex.WRB mov pop hlt shll std xchg pop sbb outsl roll fnsave andl (bad) out (bad) in xchg rex.R decl insb cmp rex.RXB cwtl loopne mov push push lahf (bad) and flds or sbb loopne pop fdivrs xchg (bad) loopne in lahf sbb and mov jne movabs (bad) and mov out in xlat mov cmp and mov es cli loopne jmp rex.R cmp test imul loop rex.WR fmull fucom mov sub cmpsb xchg pop sahf adc icebp adc fbld loop nop mov mov movabs repnz push push fimul shlb xor (bad) rex.RXB stos movabs mov loop rex.WRX fld mov ffree in out callq fist sbbl test decl sub stos rex.B mov push lret sarl (bad) iret jl adc xchg mov out movabs xchg movabs shl callq pop mov mov rex and jnp in add (bad) hlt rex.W fdivrs xchg push cli mull and lret nop jle in sti int3 loope cmpsb sbb fisubr (bad) adc cs movsl cmp addb out xor sarl and out (bad) imul lret xchg subb or fmuls rex.RB (bad) fchs (bad) xor (bad) repnz rex mov test rex.WRX (bad) out cltd (bad) rex.WR shl and sbb in loopne cmpsb iret flds jb insb sbb add mov stc test adc repnz pushq shl add movabs add loopne xchg lahf cli cwtl out rex jns nop iret or movabs mov in mov (bad) lods pushq imul mov fnsave stos retq rex.XB addr32 xchg ror mov push cwtl (bad) xchg mov loopne je sub and push outsb jae sbb movabs sbb fdivrs mov fwait (bad) icebp xchg (bad) sti (bad) and callq jp int3 jae sbb push loopne lahf ds insl push cmc rex.RX ror and loopne rclb add (bad) or outsb loopne or (bad) rex.R (bad) sub mov (bad) xor cmp rex.WRXB out fimul pop xor fcompl lcall test rsqrtps mov (bad) (bad) enterq jbe pushq and mov rex.RB rex.XB sbb xchg sbb sub pop cli sarl hlt mov (bad) (bad) cmp loopne cmp rex.XB add callq sub jmp jge (bad) and lret xlat rcl adc add mov sbb jg adc adc sub jns rex ror xchg xchg icebp fisttp sub jp rol pop cmp mov add movsl loopne mov sub sub jrcxz (bad) xchg adc xchg negb in frstpm(287 in mov pushq push rcrl rex or stc lock (bad) outsb fidivr fisubl and rcr xchg movabs (bad) (bad) jbe rclb int3 in sbb cmpsl lret loopne rex.W cmp add xchg pop lods pushq enterq stos loopne out rex.R mov sbb rex.RXB loopne sub pop (bad) jne add (bad) js,pn (bad) lock (bad) fsubl mov out rorl leaveq mov (bad) (bad) repnz jmpq repz mov and negl loopne sub rex.W stos cmpsl sub movabs rex.WRXB mov (bad) adc out test mov push rcr loopne int3 lods loop (bad) nop mov and xchg xor stos ror xchg loopne rex.W data16 sub lcall (bad) (bad) repz fnsave sub loopne scas mov gs xchg xlat (bad) fwait jnp xchg loopne pop push int3 xchg (bad) loopne rex xor movabs sbb (bad) lods insb (bad) pop je test sbb (bad) and cmp cli mov movabs xchg (bad) and sbb loopne shr push add iret mov outsb cmc xchg and in sub jbe cmp (bad) popfq jge in adc int (bad) cmp pushq js rex.WRXB mov mov xchg loopne xor or loopne not or push mov loopne jmpq rex.WRXB xchg sub icebp cmp xor adc xchg in rex.WRX add loopne or loop (bad) imul xchg test lods loopne (bad) push cmp push repnz rcrl scas std sub cmpsl jle lock xor pushq mov loopne icebp nop movabs fsubrl xchg rex.WB (bad) nop mov loopne (bad) test iret mov mov jbe insb (bad) roll loopne,pt mov xor (bad) leaveq idiv movabs rex.RX jle sbb imull (bad) push retq xchg push hlt xchg or and rex.WXB iret nop repz loopne (bad) mov mov (bad) jg negb (bad) test sub ds lret in add jg sbb leaveq cld fwait or loopne in (bad) jge enterq and (bad) and ror jns xchg lods (bad) (bad) (bad) in pop rex.B (bad) pop imul push js fsts in sub (bad) and (bad) fwait and scas (bad) repz cmp test jmpq pop movabs (bad) jge (bad) std loopne (bad) cltd xor mov xchg jmpq push push pop rex.WRB rex.X (bad) jbe (bad) movb scas xorb add movabs sub and pop jo xlat (bad) (bad) sbb and cmp fstps (bad) movsb xor fadd loopne xchg rex.WRXB imul cmp jmpq pop pop sti and lock loopne retq xor cmpsb push loopne cld xchg xor pushq pushfq out xchg retq sub movslq rex.WXB rex.WX retq or stos (bad) addr32 je (bad) push movabs rex.RX (bad) outsl (bad) cmp or loopne or push (bad) cmp fnsave pop (bad) (bad) jle mov cmc fadd loopne sar gs pushq out or adc out jmpq (bad) loopne cli jns (bad) hlt cld mov jmpq xor mov cmpsl jno add (bad) mov pop pcmpeqb cmp rex.RX and (bad) outsl loopne xor xchg insl rex.RB decb (bad) (bad) mov push add sub movsl gs pushfq (bad) cmp adc or mov clc mov outsb out push xchg sbb jo push xor (bad) mov enterq (bad) sbb repz mov xor cli and gs (bad) lock ss mov adcb (bad) xchg (bad) leaveq sbb (bad) push adc push (bad) rex.WX cmp add (bad) stos pushfq and rex.RXB push cmpl rorb hlt mov rex.W rex.WRX mov (bad) adc movabs pushfq mov jrcxz sub out (bad) movsb (bad) and lods (bad) in repz adc movabs adc cmc xlat sbb out (bad) pop mov (bad) sbb movabs jge (bad) or (bad) and push (bad) test rex.WXB shrb in jmpq cs pop mov mov pop (bad) push idivb retq (bad) sbb rex.X icebp movslq outsb sbb sarl insl lods mov rex.WRX repz (bad) or out fcompl retq (bad) cld rex.WXB xor push int3 retq sub (bad) in hlt xchg (bad) jb (bad) (bad) rex.X pop out (bad) (bad) data16 xchg adc jne std lea pop (bad) rex.RB sbb movabs callq adc pushq in lods (bad) jns mov mov rex.R in shll (bad) push mov adc mov (bad) pop rex.RX ds mov sub mov push sub add mull movsb mov pop enterq pushq (bad) scas out cs sbb xchg rex.WX rex.X cmp mov sbb test loopne repz std and sti rex.RX rex.WX sbbl (bad) mov rep (bad) loopne jl (bad) cmp mov or jg out movabs pop jl (bad) cwtl fs mov cmp pushfq sbb outsb insl add mov data16 rex.R mov shl rex.WR mov mov xor mov (bad) add loopne xchg jns fistp in stos sbb xchg add rex.R insb lcall ja sub mov loopne je pushq (bad) (bad) fisubr frstor rex.WRX mov in xlat rex.W (bad) rex.R negl stc adc mov mov orl or sbb add movabs mov loopne mov (bad) adc adc imul repz in mov rex jp rex.WR movb add sbb lods loopne jbe (bad) sbb fcmove loopne adc xchg (bad) fiadd fwait lret lea out leaveq mov (bad) pop scas sub rex.WXB adc jae (bad) int3 jb (bad) movabs jnp sti mov fdivl add (bad) mov in loopne rcl rex.RX (bad) repnz or (bad) pushfq cmp (bad) xchg loopne sahf jbe test (bad) sti add (bad) stos fist movabs out add rex.WB or jne test mov loopne rorl or movabs (bad) lea mov (bad) sbb xchg outsl sahf cmp mov rex.WXB sahf rex retq insl loopne cli and stos std xor (bad) mov pushq pop (bad) jb stos cmpb sbb jp callq rex.WR xchg (bad) and adc cmp (bad) nop loopne iret movabs repz cmp jnp loopne insl cs insb (bad) pushq (bad) and ss and add (bad) xor jge xchg rex.WX rolb mov adc stos loopne mov test movsb sbb (bad) loop xor test out and movsb add std shrb sarl (bad) cmpsl loopne pop (bad) xchg (bad) cwtl mov ss stc retq outsb (bad) testb rex.B (bad) fisubl adc (bad) (bad) fstpt clc outsb rex.R retq sbb in fildl loopne adc or loopne,pt jbe jl out pop lcall jno lahf (bad) lret xchg imul in adcb je lahf cld out scas (bad) (bad) incl lock stos loopne push jmp (bad) cmc jb stc sub (bad) minps xor andl jae adc add jl pushq or out shlb frstor jnp mov sbb (bad) push loopne (bad) sub cmp hlt mov mov addr32 rex.X mov rex.RB ds adc pop rex.WXB (bad) xchg sbb test mov retq in leaveq clc (bad) mov movsl add movabs movabs loop jnp retq loopne xor sub outsb adc xchg add adc or test pop rolb xor (bad) and (bad) rex.R outsb ss or mov rex.WRB andb fistpl sub (bad) and enterq and (bad) fildl in sbb or xor and out rex.X mov (bad) pushfq fsubr mov loop cmc (bad) (bad) (bad) pushq fldenv outsl pushfq rex.WRB adc mov fst fchs scas sti mov imulb jns xor loopne add movabs pop movabs (bad) idivl stos (bad) cld clc rex.RB test jmpq icebp gs (bad) cltd (bad) mov iret lods loop sahf jo adc stos hlt repnz int loopne mov rex.X rex.W test rcrb cmp shrl ljmp rex.W and add callq (bad) rex.R lock adc loopne gs fadds rex.WXB (bad) cmp loopne movabs push xchg xor mov loopne cmp pop lret xlat and idivl jrcxz (bad) mov cmp adc push mov (bad) xor and mov enterq push sbb push pop rex.RB mov cmc (bad) xor fwait add movabs rex.RXB cmp xor and cmp jle mov sbb out int icebp fidiv mov movabs mov pushfq icebp rex.RXB cmp vpcmpgtb lods cli loopne sub fdivs sbb setp jrcxz scas loopne callq rex.WRB loopne pushq xchg xchg int3 in loopne sbb movabs (bad) mov mov cmp stos xchg rcrl vunpckhps mov adc and (bad) mov jo iret gs (bad) xor lock syscall and (bad) (bad) addr32 je cmpsb (bad) jmp rex.WX (bad) rex.WR (bad) sbb (bad) (bad) jg rex.B rex.WB out repz xchg mov rex.WR clc stc icebp xor pop es mov in xchg shrd mov and (bad) mov mov xor (bad) (bad) in (bad) xor insb (bad) xor xchg sub movabs mov imul rex.X add rex.WRXB pop adc and mov push mov or jno adc movabs cmp sub rex.WRX jae jl add sub adc rex.WRXB xchg movsb (bad) imul movabs sub and mov out push outsl cli sub rex.R adc (bad) jb jp (bad) jne rex.RX xchg ja push (bad) adc out mov (bad) insl icebp (bad) imul add jp ficomp in repz xor movsb rex.WRXB callq xchg sub xor xchg rex.RB (bad) sub add add and adc xchg (bad) (bad) out retq decl xlat (bad) (bad) adc mov in sbb (bad) jp (bad) pushq sbb xchg movabs rex.RXB rex.WR fldcw jb adc (bad) cwtl cmc (bad) push rcl idivl push (bad) and imul and sbb sbb cmpb lock (bad) loopne (bad) rex.WRXB in adc and jge (bad) std mov or jl xchg xchg adc in (bad) rex.WXB leaveq and loopne rorl repz rex.RXB cld xor lret movb sbb (bad) sbb loopne outsl rex.WR ss lock loopne (bad) mov lahf out mov mov mov loopne push rex.B xchg add stos insl hlt and (bad) sbb (bad) out sbb push js or mov (bad) scas loopne (bad) pop int3 fdivrs out sub rex.WB imul in (bad) push add icebp fistl int loopne push (bad) ds xchg imul jrcxz mov jg jo es lret (bad) cli (bad) jmp rex xor mov and rex.WRXB repnz rex.RX sbbb adc icebp xor sub jnp imul out loopne rex.XB out fbld pop lahf loopne cmp icebp and cmp (bad) rex.XB (bad) mov pop sbb popfq stos (bad) mov sub (bad) mov mov rex.WXB es (bad) add cvttps2pi xchg adc cmp loopne lret (bad) enterq add pop or xor sbb cmp add jl (bad) rex.WB xor xchg (bad) jp insb rex.RXB adc pop (bad) or jnp jmpq add cld loopne jrcxz jg mov pop loopne (bad) fisttp imul leaveq cltd xchg lret js int3 popq fcmovnb mov enterq (bad) cmp cwtl xchg loopne jbe xor xor scas sbb and pavgw mov xor and or jl xchg mov (bad) shlb jns pop (bad) cmc int jmpq callq iret pushq icebp rex.WRXB lock or (bad) test pop pop je pushq mov sahf sti out sub push (bad) and jns ja (bad) push flds mov jae stc sub (bad) mov adc (bad) scas or add (bad) (bad) lods mov loopne mov cmp andb sub (bad) loopne add add stc movaps out rex.WB fwait mull je lods rex.WR loopne mov stos jl loopne lea xchg rex.W es jmpq fsts loopne notl mov push pop jmpq and add xor rex.XB ss leaveq adc callq cmpb out jmpq rex.XB (bad) loopne ds add stc sub mov lods push rcr add pop mov (bad) jrcxz and cmc pop gs pushq pop push mov xchg addl movsb lods mov scas or jp fisttpl jg (bad) mov loopne jb mov cli cmp push (bad) or rex.W loop,pt sbb movabs cmc rex.RXB jrcxz and jno cmovne js mov add jle fwait movabs in insl movsl and (bad) nop mov cmp (bad) icebp testl lods jno cmpsb mov pushq add retq loopne enterq (bad) or rex.WB jmpq jno sahf stc out xchg loopne movabs rex.WRX add lret in mov rex (bad) sub pop in jnp xlat or pop dec (bad) in in out adc loopne nop (bad) add jrcxz mov add or xchg cld callq rcrb adc jo hlt sti push or cs ficomp add loopne retq adc (bad) iret xor push test pop stc rex.RXB (bad) (bad) movslq and loopne (bad) jl pop rex.WXB imul js or loopne rex.WR cs out rex fisttpll movabs jo in add movabs sbb (bad) cltd (bad) repz add loopne es mov stc or loopne xchg mov mov xor lret loopne in movabs rex.XB xchg jnp subl mov push rex.WXB (bad) or js or ja test jmpq movabs ficoml subb pushfq repz (bad) movsb clc rex.R test (bad) (bad) and cmpl or jrcxz xchg pushq xchg (bad) stos clc ficoml lock fmul sbb (bad) pop (bad) pop push int (bad) and pushq xchg insl mov nop (bad) rex.WRXB (bad) (bad) pushfq or add movsl popfq nop loopne iret jrcxz stc and loopne cmp hlt out shl adc retq xor rex.WR loopne (bad) rex.R xchg cld nop cwtl loopne,pn loope jl pop loopne or cmp retq lods mov xchg or in pushq pushfq jl or (bad) loopne enterq xor or xchg cli jrcxz rex.X mov lret jbe stc jmpq insb jg (bad) (bad) xor rex.RXB loope je std xchg cltd in rex.XB movabs movabs gs and cli (bad) xlat rex.WRX or popfq xor sbb pop and jns pushq xchg rex.XB je callq (bad) mulb (bad) mov rex.WR loop or pop movsb (bad) cli sbb stos clc loopne cmpsb rex.X jmp pop xorb (bad) leaveq (bad) fstl (bad) icebp sar mov mov sbb and in xchg (bad) sbb clc mov fdivl cmp (bad) mov or mov sahf negb pop jne loopne (bad) jp test retq lahf (bad) pushfq sbb out and adc jne movsl fildll xchg rolb in (bad) push jae mov hlt add xchg retq xchg rex.WRXB or lods loope loopne popfq cmp mov add js push mov xchg mov pop push fsubrs and jrcxz (bad) adc mov cli loopne ja in push retq loopne add and xor jmp lahf xchg idivl (bad) rex.RB fwait movabs or lods xorl test pushfq shrl fptan cmpsl xchg rolb or (bad) loopne xor jp rcr pop leaveq (bad) pop rcr stos loopne rex.B rex.WXB (bad) popfq and retq mov loopne cmpsl (bad) adc xchg loopne mov (bad) (bad) sbb in pop xor jp rex.X fwait loopne enterq ss sarl movsl or (bad) mov mov (bad) movsl or test enterq mov sbb mov (bad) sub (bad) adcb loopne (bad) (bad) sbb and push fist (bad) add jmpq pushfq (bad) xor xchg mov (bad) stos data16 clc outsb andb lods push xchg icebp sbb mov lods insl rex.RB nop cwtl add movabs outsb enterq (bad) add ljmp stos rex.RX sbb xor (bad) pop (bad) (bad) std xor scas lahf loopne push (bad) mov push add out (bad) shrl clc frstor loopne xchg and leaveq mov (bad) jb jne mov xadd mov mov (bad) lock sbb je rolb cmp xchg rex.RX mov mov pushfq cmc repnz (bad) pushq in rex.RX rorb movabs lret xchg mov test mov repz retq rclb lods (bad) (bad) jae (bad) add rex.RB ds in sti sbb (bad) leaveq out (bad) add cmp (bad) hlt and push (bad) (bad) sbb test rex.X (bad) movslq cld or jp xchg mov sbb rex.RB addr32 sub sbb add mov jo std (bad) jb fnstcw pop lahf loopne popfq int rex.RXB and loopne imul (bad) in imul jmp mov scas out movb cli (bad) rex.WX and rex.WRXB ja loopne (bad) retq (bad) loopne (bad) (bad) mov jl in pushfq out callq (bad) rex.W cmp lods cltd shl cmp rorl loopne mov or insb (bad) push mov jmp add mov jno ds cmp lret leaveq movabs fcmovu (bad) (bad) xchg and jns sbb sahf lfs pop clc ds sbb jle sub cmpb test sbb retq sbb shr adc (bad) sub fldcw add (bad) sbb xchg bnd (bad) lfs data16 bnd (bad) loope repz rorb movsb popfq xchg fsubs jl mov test fwait rolb jo mov pop fcom shrb (bad) sbb sarb pop iret fwait insl xchg and sbb (bad) callq movslq xchg xor adc loop rex je addl rex.R cld std cmc cvtps2pi loopne (bad) movabs xchg test es add (bad) jmpq (bad) mov retq loopne pop xor (bad) int3 lods jnp (bad) pushq loopne stos pmullw xor in insl push ds (bad) xor loopne or (bad) sub rex.WB (bad) or push retq xor jne retw jo mov sbb loopne cmp pop mov stos rex.RB rex.WRX cli rex.W cltd add jge shl xor jae loopne cmp cmpsb movabs and (bad) cmpsl push clc ficom int cmc add stos fistp lret cmpsl in out adc (bad) callq lods ror scas mov sbb movabs or movabs scas loopne xor (bad) cltd xor mov mov pushq rex.RX lods lea je ja nop mov (bad) movabs scas (bad) jg lret sahf clc je outsb sbbb int sbb adc ljmp rex.WRB loopne (bad) jno lods loope fwait loopne cltd movabs xchg mov and or loopne and mov in or or int jg cmp es sti (bad) pop cmp and (bad) xor stc xor (bad) rex.WRX pop loopne clc mov icebp out jp pushfq mov loopne lods insb movsl and loopne rex.WRB outsl (bad) repz loop mov mov test add loopne repz loopne (bad) xor retq jmpq insb rorb (bad) xchg (bad) shld negl and imul (bad) shl sar (bad) pushfq (bad) mov (bad) fucomp mov jmpq (bad) and jne clc mov jge repnz insl movabs (bad) mov adc jle stc (bad) (bad) mov add pop pop jge rex.XB adc mov add (bad) data16 rex.WB pop cld adc rex.RB enterq in nop fdivr frstor iret or in fsubrl jmpq mov fsub mov sub (bad) push addr32 (bad) loopne insl (bad) sbb retq cltd jg (bad) out mov lods cmp mov test jp retq stos (bad) cs lea pushfq xchg (bad) sub mov loopne push sbb pop jge add fwait (bad) rex.R pushq mov mov fs in or (bad) mov movslq lret lret imul fs retq in movabs icebp (bad) mov rex.WXB sbb movsl (bad) sbb cmpb sub push sbb jno jns (bad) pushq mov ds pushfq jp in xlat or rex.RB (bad) gs scas imul (bad) callw in and sbb adc rex.WXB rex.RX outsl push movslq mov or adc xchg in ror (bad) push xor imull jb sub rorb sbbl imul iret insb in std xchg xor shrl adc mov repnz mov mov jrcxz mov scas adc imul mov pop adc (bad) sbb stos fcmovnb jg data16 callq cs xor fwait movabs jl repz sbb hlt jb mov rex.X (bad) std fisubl mov xchg lods xchg sub lods rex.WX movsb lea cmp insb repz jbe (bad) jnp adc mov in cmp test sub mull rex.RB or jle sub pop jne adc cmp mov pop imul cwtl jmp adc (bad) cs fcoml (bad) sbb mov (bad) int3 adc mov rex.RX rex.R or add add lods (bad) mov in fdivrp sbb jge xchg callq mov enterq rex.WRXB (bad) xchg movabs (bad) pop push rex.WRX rex.WR gs mov push movabs (bad) (bad) sbb jg es adc mov jne jrcxz rex.WR jmpq xchg mov lock insl rex.WRX xchg insb js fldenv rcrl in sbb adc pop out push mov sti enterq or imul rex.WB xor loop rex.B icebp xchg cwtl mov (bad) in push (bad) (bad) fadd rex.W in ss or (bad) (bad) js mov pop cmp or callq (bad) (bad) push loopne add adc loopne and or repz in imull rex.WRX enterq jmpq rex.WRB add (bad) lcall nop stos (bad) outsl loopne and mov mov mov mov sub (bad) rex.WB mov je mov cmpsb jmpq mov scas fiadd rex.WRB (bad) jbe (bad) (bad) add xor mov xor scas loopne movabs xlat rex repnz push loopne sbb xor shlb (bad) jo pop sbb loopne je (bad) test cli incb movb cmp loopne rex.WRXB (bad) sub sti rex.W add or (bad) rex.B outsb sahf popfq add (bad) pop out (bad) test jbe (bad) in (bad) andb pop rex.WRX (bad) (bad) (bad) pushq mov rex.W test rex.WX lret loopne pop sbb mov rex.WX jmpq js (bad) push (bad) mov adc retq imul (bad) or cli movsl repnz imul enterq adc jl xor jrcxz std add rex.B xchg xchg or jo sbb rex.WRXB mov lret loopne orl (bad) (bad) rex.WRB xchg rex.WRXB rex.WXB rex.XB jns outsl add rex.WRX jmpq int scas rex.WR push pop mov xchg xor test mov stos incl lods (bad) xor pop (bad) ss adc (bad) mov (bad) pop pop loopne mov xor sbb out pop loopne adc jo in (bad) and (bad) ja loop sub int3 stc xor rex.WRXB (bad) (bad) addr32 jrcxz rex.RB cmp rex.WB (bad) rclb xor movabs mov mov mov rolb insl (bad) loop (bad) repnz or insb (bad) add pop adc push fs adc in xchg or test jg rex.WRB je sbb pop lea in (bad) xchg subps add add stos retq rex.WB lods xorl jp retq or fmuls jo ds mov fadds repz lock (bad) sbb push (bad) movsl pop sbb (bad) icebp sub jb or or jrcxz lea leaveq xchg jmpq push sub movzwl pop clc pop sbb cmp callq or pop jns sbb push enterq addl (bad) rex.X and (bad) mov (bad) lock (bad) (bad) fmull cmpsb or cwtl mov adc (bad) (bad) and (bad) or cmpsl or (bad) mov adc adc sbb adc not adc mov sbb jle in push jno cs ficomp (bad) rex.WRB loopne xlat mov lods rex.WR mov add loopne (bad) in pop rolb (bad) comiss es rex.WX add test fwait imul jb adc cli sub mov (bad) mov (bad) lret int3 imul push xor sti lock and loopne insb jnp sub jne (bad) imul cmp xchg sbb jb push mov mov jns cmp (bad) mov enterq xor fidivrl data16 adc icebp sub scas add jrcxz in or rex.XB xor (bad) or outsb jns or sbb repz jge mov cmp repnz rex.WRX in (bad) stc (bad) ss (bad) xchg fadd cmpb pushq sub mov nop nop (bad) int icebp es (bad) (bad) sbb orl jb (bad) rex.WR fsubr mov test xor test leaveq rex.WRXB mov (bad) jb cld (bad) jns sbbb pushfq orb js xor (bad) enterq lods push rex.WX test fnstsw sbb adc rex.WR mov or cwtl xchg js mov imul rex.WRX retw int cmp mov fwait movslq mov jo popfq shlb insb enterq outsl lods mov pop rex.WXB rex.RX pushq movabs (bad) adc cmpsb mov adc shrb pop adc cmp retq xchg rex.WR rex mov and and xlat int (bad) rex (bad) movslq adc cwtl fildll cld rex.R add (bad) lret movsl sub in (bad) sahf data16 je test pop push rorl lock and notl jo repnz cld (bad) xchg es xchg callq test xor cltd sbb loopne and push cmp add movabs fdivrp rcrb (bad) sub cmp adc sub imul (bad) outsl loopne pushq xchg mov loopne outsl jns notl loopne cli cmp sub adc rex.X iret int3 sbb rex.RX repnz sub hlt loopne rex.W scas cmp test (bad) imul mov or or adcl int3 cmp mov sub jmpq jo loopne movsl negl sahf xchg in pop loop loopne jl stos nop shrl enterq xlat push ss sub and mov rex.WR and outsl out (bad) jrcxz movabs scas rex.WB imul clc out cmp or rex.WRB xchg xchg jmp in insb jl decl cmp xchg retq mov jmpq psraw xchg test rex cmp insb pushq sub lods mov (bad) mov movsl movl movabs adc add xor ja jrcxz movabs loopne xchg adc (bad) (bad) (bad) sbbb cmpsl adc rex.B shr adc cmpsl fidiv callq adc rex.WX out mov lret js mov stos in fadds or adc cmp and rex.RXB cmp xor xchg (bad) jrcxz sbb gs leaveq sub mov popfq mov jmpq jne orl mov (bad) lret ffreep mov int3 jrcxz test sub ror cmpsl pushq cwtl xor insl rex.R repnz (bad) (bad) int3 xchg mov rex.WRX loopne sar (bad) cmp sub xor fimul sahf gs mov xorl cwtl xchg mov adc and loopne mov (bad) push lret lahf mov xlat rorb jg add int and fsub sbb in frstor stos jle push ja add std (bad) in rex.RXB subw rex.WX lock mov out xchg and nop rcrl (bad) test pushq sub rex.R fmull fisttpl flds ficompl loop xchg mov mov stos cmp rex.WR or lret nop (bad) or popfq adcb fwait rex.WXB adc movsl and loopnel and xchg nop jbe xor (bad) and mov loopne cmp and (bad) fimul pop movsb popfq cmp rcr loopne mov jo sbb xchg out xor in sbb pop (bad) pushq (bad) pop cmp or fistl test sbb fist sbb mov or pushq or movabs push sbb std adc (bad) jns mov (bad) nop mov decl (bad) fistl (bad) xchg outsl (bad) callq fs (bad) (bad) sbb retq mov mov rex.WXB (bad) int out pop addb lock add stc mov enterq outsl push (bad) cmp mov rorb xchg callq add jge mov test adc fiadd add js stc and and add (bad) add push outsl popfq in and in push sbb cmp scas (bad) adc (bad) and addr32 jmpq or jmp (bad) and (bad) mov negb xor pop fistp negl sub movslq xor xor outsb test pop rex.RX adc push lcall (bad) jns insb rex.WRX lock outsb popfq sub pop (bad) adc retq (bad) jns movsl xchg outsl shl rex.B (bad) sarl mov or (bad) cmpsb adc (bad) adc movabs (bad) cmp rex.WX lcall movabs callq (bad) and cld adc cmp pop int3 movabs mov cmc pop (bad) (bad) loopne iret and mov (bad) (bad) loopne cld mov pushfq xor (bad) scas (bad) lcall sbb jo (bad) pop loopne sbb js ljmp push and fmuls pop movabs xchg loop insb rex.B int jnp (bad) cld push movabs xor xchg rcrl add jb xorl push (bad) repz in cmp int push xchg popfq mov loopne xchg sub mov movsb (bad) adc loopne stos (bad) xor fnstcw loopne test adcl popfq jo loopne shll lods cmp ds callq test fildl pop scas xchg loopne sbb je push stc cmpsl jrcxz loopne (bad) (bad) sub lea pushq xorl and ja callq outsb mov mov cmpsb loopne or pop jp sub cmp mov (bad) movabs ja scas sbb (bad) repnz adc rex.XB pop mov nop xor cld xchg sbb jge (bad) callq stc xor insl sti repnz jno push shlb or mov add fist int loopne (bad) (bad) lret mov jle rex.B icebp and fsubrs (bad) out (bad) jmpq shll sti pop sar (bad) mov rcrl (bad) and or (bad) (bad) mov cmp out fisubrl add add jp loop lret movslq rex.R (bad) sub xor sub cmp lock test push loopne mov cmp loopne push cs negb mov rex.WR pop add outsb sbb add xchg jns add je sub pop mov loopne xchg int rex.RB cmpsb xchg test mov (bad) rex.WXB mov addb rex.WRX (bad) loopne jo cmpsl cmp or sbb lahf movabs (bad) mov cmp (bad) cli jp push movabs cld cmp (bad) insb test xlat (bad) jmpq push lock mov xchg or test jrcxz fiaddl xor jl iret cli loopne cmp int3 loopne xlat or rcrb pushq jmpq xor loopne or mov jmpq mov fisub in cmp sbb (bad) lods (bad) (bad) (bad) js retq fsubs loopne xchg mov outsb pop add in cld sub push test in rex.WRXB lock leaveq jmpq sti jns jg loopne rex.XB or (bad) insl loopne (bad) rex.WRB (bad) stc fdivr sbb movabs (bad) add idiv (bad) stos fbld rex.XB rex popq loopne pop test rex.WRXB and stos sbb sub sub or cli and loopne rex.WRXB cwtl mov lea jnp (bad) pop (bad) repnz pushfq pop (bad) mov adc jrcxz push jg fldenv adc lahf mov lea mov data16 sub icebp repz (bad) or (bad) xlat lret fdivr decb adc callq cmp loope incb push sub (bad) lret stos (bad) fdivl clc and mov rex.R lock ror es (bad) cmp movabs cmc mov jo loop mov xchg shlb adc mov lods pushq shlb mov or outsb (bad) and mov loopne adc jmpq stos jmp push js loopne mov adc mov lret std (bad) xor rex.RB lret cwtl cmp in and sti (bad) (bad) sub fdivrs (bad) repnz or xchg mov in adc adc (bad) movsb (bad) jmpq rcrl cmp jmpq and and or (bad) pop (bad) sub jb xchg loopne iret sbb or out in mov loopnel (bad) add lea mov cmc out add (bad) (bad) jrcxz cmp pushq mov popfq cmpsl andl enterq mov fwait loop adc rex.XB fnstsw or mov in outsl popfq movabs (bad) lods pop loopne mov xchg pop pop hlt or and push rex.RXB rcll in xor movabs mov movslq (bad) cmp mov pushfq rex.WR loopne (bad) push mov loopne adc pop in rex.X lock insb jbe adc (bad) clc fisub lahf test pop (bad) loopne rex.WRXB push or jg (bad) rex.WXB out mov loopne (bad) movabs in stc std jae adc test retq xorb popq repz sahf in mov retq (bad) push sbb imul scas push (bad) fldcw cmp and rex.W cltd jb xchg xchg (bad) (bad) movabs xchg push retq cmpsl sub fcmovnbe movsb callq rex.WB push es movsb decl repz loopne rex.W (bad) rex in js retq rex.RB cwtl cld ror rex.RXB loopne fsubs rex.WXB repz xor pushq movsl mov adc rex pop callq addr32 retq sbb movsl stc xor add loopne fiaddl lahf mov loopne (bad) je cmp test in outsl pop and pop add in test jmpq jg mov sub cld push cmp rex.WRX adc xchg in leaveq rex loopne add loope in adc fmulp fcoms mov (bad) mov (bad) loopne movabs fbld sarl pushq or push leaveq fnstsw movsl rex.WXB sub scas in addb xchg test mov sub loopne mov mov in cmp nop mov cmp loopne and rex xchg jmpq enterq test scas cmp (bad) stos rex.X loopne (bad) mov add mov pushq jrcxz sub (bad) loopne jbe fild loop (bad) sbb callq cmp test sub fs lods ss sbbl movsl xchg bswap or rex.WB pushq cmp (bad) and and mov jns lock lcall cli xchg (bad) xor movsl lods rex.WB out fmuls icebp movslq push sahf adc rcll shlb (bad) in or xor sarb out adc mov out rol sub pushfq mov mov retq callq (bad) sarl xchg mov push cs ds icebp rex.X in (bad) rex.W test push add rex.WRB adc pop or sbbb cmp push loopne (bad) and mov pushw xor outsl jmpq lret sub pop or jmpq pushq lret (bad) and loopne out sbb (bad) mov outsb jge data16 (bad) loopne adc js xor jnp (bad) nop adc jns loope xor imul (bad) andl xchg movslq (bad) cmp pop movabs movabs test (bad) lock cmpsb (bad) rex.RB xor in fstpl fistl cltd and (bad) nop (bad) adc jae xlat mov cmp lock and adc idivb sub jbe shrl or icebp loopne movabs callq pop test (bad) movsb stc movabs mov or sbbl je scas jmpq lods rex.WRXB (bad) (bad) (bad) (bad) cmpsb imul cmp and and cmp mov xor (bad) rorl shlb loopne es imul outsl rex.RB lret icebp out in imul xor fnsave movsb fisttp mov adc mov add sub (bad) scas cli rex.R mov xchg sbb lods sub jp clc stos lock lret jb loopne callq (bad) loopne,pt cmp (bad) cmpsb xchg rex.WX or js (bad) mov add jns retq jmpq rex.WR jnp mov jns jae cltd (bad) int shrl icebp cli rex.R mov stos movabs movl and cmp outsb adc jae imul rex.WB xor movabs es sahf clc mov xchg (bad) sub adc xor jo jb (bad) pmulhw adc in int cmpsl xchg rex.R repnz popfq scas inc mov xchg (bad) lock or mov (bad) out lret rex.WRB cmp and insl in test cmp mov (bad) movabs movabs cmc cwtl sti mull jne hlt outsb mov in repnz (bad) cmp stos rex.WX cmp pop rex.X icebp loopne xor jmp sbb imulb (bad) mov or mov fcmovu movabs (bad) rex.WRX jmp sbb cli rex.W push xor insl movabs jno rex.WR loopne xor and cmp rex.WX rolb insl pop fiadd add rcll in stc mov loopne ss fstpt xchg (bad) cmp (bad) in rex.WRXB imul cmp popfq pop push in sbb or sub mull (bad) out rex.WB cmp cmc outsb retq test sarb (bad) (bad) push out cwtl mov xor movabs repnz ficompl add cmpsb sti fstl loopne iret lahf rex.WR add mov js rex.WX and rex.WRX int xchg (bad) rex.WB xlat (bad) or loopne mov rex.B adc ss in jmp push pop jle (bad) lods xchg std mov (bad) jrcxz movabs fwait adc rol (bad) sahf loopne cmp add sub jmpq fwait mov loopne xor mov sub andb movsl and jmpq leaveq rex.XB sub and loopne test (bad) incl mov js sub jp sbb adc sbb cmpsl cmp xor fnstenv jo loopne adc mov loopne repnz add sub loopne nop jmpq lahf pop adc hlt cmp (bad) mov rcrb scas out push jb add jmpq movabs out retq pop sbb jl (bad) mov sbb cmc rex.WRB rorb push jo (bad) sbb idivb cmp ficoml mov cltd pop (bad) sub xor rex.WRX loop sub data16 (bad) stos (bad) jge add jrcxz (bad) xchg gs idivl callq rex.WR rex mov cltd (bad) sub fsubr sbb jrcxz sahf or (bad) lea mov out cs leaveq loopne (bad) or stc sub or add jns adc and (bad) shll pushfq lea (bad) retq cld rorb mov (bad) mov mov movabs (bad) mov (bad) rex.WR cli pop rcrb jnp push (bad) cmp xchg jmpq rex.X fnsave (bad) mov xor (bad) push mov movabs lods rex.WX pop jmpq ja sbb test mov mov (bad) (bad) cmp or add rex.RX rex.X (bad) hlt scas sarl pop cld ja (bad) callq cmp rclb mov add xchg stc loop and cmc fwait loopne or sbb lock in xor rex.WXB fs push cmc rex.R xchg ja sar int mov pushq rex.XB push in pop icebp incl (bad) push pushfq (bad) mov fnstenv or cmp (bad) and xor movabs loopne rex.B xchg testb (bad) loopne push repnz cld fidivrl (bad) stos fisub jmpq push loop mov nop push outsl loop loopne (bad) in mov push cmp cltd add jmpq rcll ficompl mov and add in pop jno int3 fstl imul retq test sti jne hlt movsl adc scas (bad) stos lcall (bad) rex.WRXB xchg movabs mov sub adc cmc loopne add push (bad) jmpq mov (bad) test sbb in (bad) or loop xor loopne callq mov adc xchg push cltd pop jbe sub rex.WB hlt (bad) out fsubrs rex.WXB xor adc add cld mov push rex.WX fstpt xor rex.RB fcoml push jns rex.RB rex.WB adc xor or icebp mov rex.WR add in sbb jp shl loopne fistl (bad) loope out mov sbb rex.RB mov dec mov retq jg loop movsb push rcrb xor loopne retq cmp fidivl (bad) outsb rcl add loopne std fbstp xchg (bad) orl cmp xchg (bad) mov loop (bad) jb icebp movsl loopne orl xchg add (bad) push outsb (bad) and jmpq pop adc scas sti rex.X rex.WR xlat sub loopne out mov loopne mov rex.X sub movslq data16 (bad) (bad) cli mov and sbb loopne (bad) fs sub cmp in clc lods (bad) rex.WRXB hlt out rex.WXB (bad) (bad) cmc pushq xor sbb in push cwtl or and clc mov mov (bad) (bad) adc loopne iret xchg cld mov sbb xchg add push movabs shrl loopne outsb pop mov loopne or push add in adc test mov (bad) xchg sti xlat cltd loopne movabs mov outsb jns rex.WXB icebp movslq test sub inc ss in ds mov jmpq jns cltd movabs sub mov loopne je cmp movabs (bad) pushfq mov cli test (bad) popfq cmp push lret fldl loopne or fadds xchg gs test subl repnz jo (bad) loopne rol xchg jno (bad) adc (bad) (bad) movabs (bad) push rex.RXB gs nop (bad) pop mov and icebp sbb hlt (bad) mov sbb or (bad) jp mov rex.WRXB callq jne rex.R rex.W retq sar movabs (bad) fistpl test adc movslq pushfq cmpsb pop movabs es popfq rcl (bad) pop (bad) es (bad) jb cmpsb (bad) mov (bad) imul lahf cmpsl sbb stos hlt (bad) xor pop stos pop (bad) and imul in fld sub rex.RB rex.X int insl rex.R sahf (bad) icebp in in adc (bad) fildl mov popfq orb movabs cmc out mov (bad) adc and int3 lret mov retq icebp rex.RXB mov pushfq xor movabs add (bad) rex.R loope jl xchg rex.WXB stc (bad) sbb pushfq sbb push shrb (bad) adc add xchg add test xchg cmpsb insl sub xor rex.XB cli (bad) repnz xchg jl pop push loopne movabs test (bad) (bad) ja add and cltd je callq cltd nop (bad) in (bad) xchg retq (bad) jae (bad) shrl cmp push mov or xchg mov pop xor movabs pop adc mov outsl mov stos enterq (bad) xor addr32 sub (bad) (bad) push outsb (bad) cmp lea jmp (bad) pop (bad) mov or shll mov pop scas stc pop cmc push sbb jrcxz and cs mov (bad) in outsl xchg mull psubw (bad) mov sbbl mov jmpq rex.WRX rex.WX sbb movabs movsb push rex.RX rex.R js jns mov in lret sub xchg jmpq in rex.WRB jrcxz mov cmpsl mull mov and adc lock jle xchg adc add stos retq sbb out xchg out je test pop rex callq (bad) and icebp or mov retq (bad) sbb movslq cmpsb movabs lret sbb lock or mov enterq insb cwtl mov test stos cmp push jb xchg jnp xor add add (bad) es push lods (bad) (bad) mov cmp in cmp mov hlt outsb fstl xlat and (bad) lret lret pop fbstp addr32 (bad) (bad) gs std test mov sbb sarb orl xor pushq fwait in jno negl sbb test lods loop push in add pop cmp fldt pop add rex.RX xchg sahf in (bad) outsl mov add lret (bad) rolb (bad) mov rex.WXB or (bad) mov rex.X shl idivb retq xchg int mov pop movabs in loopne stc (bad) (bad) repz int rex icebp or jb add out xchg (bad) icebp out rclb push add xor pop xchg xor test and (bad) callq icebp divl loopne sbb enterq xchg mov fcoml outsl (bad) cltd cmp pushq (bad) mov add or cmp lock pop ficoml cli fmuls push std sbb loopne mov popfq (bad) icebp (bad) jno rex.X sbb adc loopne rex.XB shr xchg loope loopne push sub int3 mov pop movabs xor mov test add ss out loopne rex.WB (bad) je fimul subb fcompl movsb lret and rcrl (bad) sbb xchg xchg loopne pop sbb loopne jae (bad) pop jmp jne pop icebp (bad) or xor clc sti fwait cmpsb rex.W pop lret rex.RXB mov or lods imul rex.WR pop (bad) or iret cmpsl frstor (bad) push rex.RXB cli cmp repnz (bad) pushfq out jmpq (bad) xor mov mov jno mov hlt and or loopne rex.RXB pushq loopne xor mov fsubrl jle sahf adc cmpl sub jmpq (bad) adc adc stos (bad) cs sbb and (bad) loopne outsl (bad) (bad) (bad) add rex.B rex.X shlb rex.XB lahf (bad) pop movslq and mov sbb (bad) fwait (bad) subl mov test lret ja rex.X (bad) fisubl mov xchg popfq or pop cmp xor push in or idivl loopne stos iret push movsb in xchg (bad) or (bad) loopne outsl rex.R in and mov (bad) jae xchg cld pushq or and pop rex.WR ja (bad) (bad) mov outsl or notl push add mov jns addl insb rex.WR loope stos retq (bad) data16 loopne xchg jne (bad) mov test add mov icebp movabs sahf loopne (bad) xchg repnz fs js cltd (bad) in (bad) jrcxz xchg and jl or (bad) cli cmc adc cmp add rex.RXB (bad) out test ss (bad) pop int3 adc loopne mov packuswb out (bad) or movb jbe adc callq iret and out pop and jmpq rex.RX rol or lahf mov loopne jae repnz enterq jl mov mov (bad) loopne mov sbb insl mov (bad) adc jl sti loopne (bad) pop movabs pop outsb enterq and (bad) js outsl rex rex.W in loopne jnp mov (bad) shrb rex sub loopne (bad) rex.WRB rex.B sbb sahf (bad) rex.X sbb insl (bad) fdivl sbb sti fist loopne xor pop push cltd nop push neg mov rex.WRXB repz cmc roll movabs retq sbb fnstenv cli cmp pop xchg cmpsb loopne pop lahf cltd fstpl lret sub rex.WR xchg test or rex.R in adc jmp mov stc scas movsb (bad) and rex.RXB loopne xchg out lahf icebp insb js mov xor int mov xchg stc cmp movabs (bad) or insb push cmp rex.R movabs adc cmp movabs and repnz lods mov rex.W in mov cmp (bad) je or (bad) ljmp jo sbb push push xor outsl mov sbb rex.WX movabs loopne test lahf scas loop loopne (bad) sbb sub jge in rolb pop mov loopne add imull mov repz jbe pop xor jg ss (bad) xchg fisub adcb mov mov add movsl push lock (bad) mov xor xlat mov cmp rex.XB (bad) sti push cwtl add sub es lods mulb in jmp xchg imul in loopne mov mov ljmp jg int hlt out lock xor or (bad) callq xlat cmp (bad) cmp (bad) retq (bad) lret jg or dec out mov or jmpq lret adc add (bad) popfq sub rex.RX pop loopne adc cli or adc movabs vmulpd loopne (bad) pop rex.WXB rex.RXB (bad) iret movabs fcoml pop fsub (bad) or mov sub (bad) hlt test cmp and (bad) movabs adc push test movabs scas cmp xlat mov (bad) xchg negb (bad) push imul rex.RB movsb jo rex.XB (bad) cmpsl and sbb adc in mov and callq (bad) mov hlt xchg out (bad) jo jne add ss rolb bt (bad) cmp cld adc or loopne add mov (bad) sub out (bad) loopne sbb (bad) fdivr jg and jbe js jmpq int add xchg in mov imul test (bad) test push sbb rex.WB push loopne fisubr mov out subl loopne pop rex.WX rex.RB jo xor or roll mov icebp (bad) jbe mov xchg adc test fistpl (bad) out (bad) push loopne out or adc xadd mov mov imulb or in jno fwait add cld sti clc rex.XB sub and rex.W cltd mov mov lret (bad) rex.RB popfq and retq xchg (bad) loopne vmovsd divl (bad) adc fsincos (bad) rex fldl sbb jl xchg mul add scas (bad) mov ror cmp or sti cltd fwait iret incl xor sub (bad) xchg add (bad) loop mov ds nop rex.RX clc add loopne jrcxz mov sbb loop nop push push xor loopne xlat fs shrb decl fisttp imul and (bad) mov stc (bad) stc (bad) callq repnz ja jge pop fistp out (bad) pop lret loopne xor mov lahf rex.WR in iret sahf jmp loopne enterq loopne mov pushfq fcmovbe pushq out mov (bad) int3 jmpq test sub mov mov outsb pushq jmpq adc rex.X test (bad) fdivs adcl out jne es std pop sub faddp imul cwtl (bad) pop loopne add stos insl std ja cmpb (bad) (bad) add test push bnd std (bad) (bad) push jrcxz rex pop fistpl xchg pavgb and mov mov sub enterq (bad) lods (bad) movsl jne insl xor sbb in (bad) cmpsl pop sub push out cli int3 mov xchg xor minps popfq mov callq in (bad) sbb int sbb lock iret subb (bad) movabs iret repnz xchg bnd xor (bad) enterq cli movsb int enterq loop (bad) out sbb nop sbb pop push rex lods and (bad) scas insl std lret rex.RXB mov sbb pop cs push (bad) (bad) rex.R adc (bad) sbb in adc movsb sub sbb cld pop rex.RX out push (bad) lea adc jo in (bad) pop cs jg push (bad) (bad) data16 pop movslq mov xlat sbb loop fs loop mov mov (bad) repnz iret (bad) sarl (bad) add pop mov (bad) lcall (bad) sbb push cmp (bad) rorb adc adc rex.XB xor sbb adc (bad) (bad) sbb xor leaveq adc and sbb adc (bad) pushq iret (bad) callq mov push int out sub adc rex.WRX in (bad) (bad) sbb mov xor xlat sbb mov cmpsl adc in sbb mov outsb mull push or rex.R pop sbb fsub stos push (bad) (bad) fidiv xor rex.RB stos xchg (bad) rex.XB cmp outsb xor or (bad) (bad) test (bad) mov rex.WX rex.WXB in jge adc jb fiaddl rex.WX jg mov pop imul test fdivrp nop (bad) (bad) cwtl gs rex.WB mov hlt fbstp sbb jg jno out movabs movabs movabs mov (bad) js enterq movsl cmp jl (bad) or sbb idivl pushq retq and and js rex.WB jmp fidiv add jge callq jns fcoms lea fmulp popfq mov insl cmp (bad) sub sub movsl jge rex.RXB pushfq movabs movabs and outsb movsb (bad) icebp pushq push mov push outsb sub (bad) (bad) jae cs loop testb popfq (bad) in xor sbb mov (bad) pop mov rolb ds jle addr32 mov in and mov mov jbe retq lahf (bad) (bad) outsl cli (bad) hlt adc popfq mov ja fstl lcall movabs movslq (bad) (bad) icebp rex.WB xor (bad) loopne leaveq mov notb stos movabs int3 mov mov iret or cmp adc (bad) sbb (bad) rcll shrl out pop rex.WRXB es jg loopne (bad) or ja sbb lahf xchg jbe stos mov stc pop popfq loopne rex.WX enterq fcompl insl mov test and pop and xchg push retq loopne decl loop and ror (bad) cltd mov imul mov sarb or (bad) cwtl rcr out outsb in jno ss in sub rex.RX mov push stos (bad) imul jno (bad) retq jl xchg push loop xlat retq add movslq subl callq (bad) xlat xchg loope mov push sti or mov (bad) cld push (bad) (bad) add add (bad) movabs mov insb pop jl loopne (bad) or pop xorb fwait cwtl cmp or mov loopne xchg cld fstpl fsts pop rex.W (bad) (bad) add jmpq pushfq sbb rex.W (bad) (bad) loopne (bad) out gs rex.WB adc rex.WRB mov imul add or jne in gs adc nop movabs (bad) loopne mov (bad) hlt and and adc clc xchg int repnz mov mov stos orb jb repnz cmc pop clc (bad) (bad) sahf cwtl (bad) mov mov movabs xchg cmp mov or loopne fs (bad) cmp outsb and (bad) js push mov loop jmpq popfq mov rep outsb fwait loopne rex.WRXB lods cmp lret xchg stos mov jmpq mov andl jmp jmpq and test in sub shlb fsubr fimull and repnz fmull shr pop mov rex.WRX jb nop and xchg adc js cmp in mov imull gs mov xchg xchg lea lret or sub lods mov jbe retq mov jne sbb movsl fs sbb cld rex.WRB cwtl loopne stos int jno mov shl (bad) insl lret sti mov in std lods test stc imulb rex.WRX pop loopne sbb (bad) scas icebp or gs cli jo sbb in loopne fisubr iret pushfq xlat stc loopne int3 std (bad) pop mov xchg icebp cs mov loopne rorb loopne (bad) (bad) pushq (bad) (bad) loopne test scas sub xchg xchg rex.W pop rolb mov xchg xchg (bad) rex.WRXB sbb loopne fwait jmpq fsubp jge add in loop (bad) pop cmp loopne callq pop rcrl mov out loop (bad) jae (bad) cmpb mov scas lret pop decb in ss outsb adc loopne add js movabs hlt rex.WR jmpq rex.B rex.W jae lret mov mov ds jne sbb (bad) in fldt mov jp (bad) movabs sub (bad) loopne,pn jae lret and cmp shl jmpq pushq add clc pushfq cmp adc ds rex.WR (bad) loopne mov rex.WRXB cld and or sti rex.WXB adc cltd (bad) fistl loopne mov in out stc cmp mov in iret jp cmp sbb mov adc adc cli data16 popfq jmpq sahf test test mov sbb loopne jmp movabs loopne adcl loopne repnz (bad) out (bad) mov stos (bad) and retq cltd (bad) in rex.WRB pushq sub mov repz callq (bad) rex clc adc and in setae rex.WRXB (bad) test lods fisubrl sbb mov xlat mov fisttpll repnz (bad) fptan (bad) int3 adc insl and sahf je out sbb sub stos sahf add jo addr32 or mov mov push jmp and imul test iret loopne jmpq in roll lea pushq jrcxz movabs out jmp sub movabs (bad) mov in (bad) jrcxz rex.WRX push cmp mov stos lret movabs (bad) jmpq icebp jmpq xchg (bad) loopne enterq fisttpll cltd callq int jmpq loop adc or mov loope adc jb mov cli (bad) add iret imul retq movabs pop (bad) lock jg xchg jl mov xchg push cwtl repnz fstl test test jle leaveq cld push pushq gs cli (bad) rex.WX je loopne pushfq pop adc callq js rex.W sbb jo andl xor outsb cli pop or loopne loope (bad) push mov mov cmp sar xlat add loopne jno (bad) scas mov rex.WXB (bad) je rex.B (bad) gs movabs lock mov fwait ss (bad) loope movabs sbb sub jmpq xchg or push add outsl loop push loopne fnstcw (bad) lcall shr mov test (bad) loopne hlt cmp adc std xchg add in mov or not pop pushfq rex.WRX je (bad) pop xchg or scas repz lret mov xchg (bad) std pop add xor add lods divl out mov insl or (bad) rex.WRXB ds outsl adc test popfq mov outsb movsl popfq lret lods callq mov sbb (bad) push sbb (bad) in cwtl in insl addr32 mov lods jp cs sub mov fwait jg ja sahf fstl js xor cmp fucomip rex.WXB sbb push fnsave (bad) sbbl (bad) and xchg rex.WB rex.X insl out rcrl incb loopne (bad) sbb jo stos mov leaveq pushq ljmp add retq roll and lret add push sub jae retq and and fist (bad) cmpsl sarl sar (bad) mov stos sbb pop xchg outsb (bad) repnz cmpsl adc fnstsw jno pop loopne sub repz adc (bad) pavgb rex.XB test push retq lock sbb loopne (bad) rex.WB cltd pop fisttpll loopne adc pushq loopne (bad) hlt retq sub loope loopne ss cmp test mov cltd sbbb or rex.WRXB xor jmpq mov roll xor mov (bad) pushq (bad) lcall cltd cmc addb enterq mov mov mov in mov (bad) outsb loopne push lock cmp fxch pop in xchg out (bad) mov in jrcxz (bad) movsb or iret xor movabs in push jno push cmp loopne (bad) jmpq fdivl jrcxz rex jl xorl and out jmpq movabs xchg xor rex.WX repnz ss adc rex.RX lahf mov (bad) mov ja xor mov enterq push js out sub (bad) mov (bad) (bad) pushq repnz xor out rcrb icebp or (bad) roll add pushq sub pop in and xchg ficompl loopne (bad) stos or jne mov mov xchg push rex.WRB add loopne outsl sahf xlat mov xchg rex.WXB ss js loopne out xchg testb (bad) mov push enterq xor and test fs movabs (bad) cmp movabs retq outsb jge push (bad) jo mov xchg mov mov fwait insl js enterq jl movsb cltd (bad) ja gs mov rex.W cmpsb (bad) push sub js rex.RX loopne out stc xor pop add and sbb fsubs adc int xor pop or adc movabs lret loopne push fs mov add hlt or enterq (bad) loopne mov loope gs loopne (bad) andl jns jrcxz mov cs push sub addr32 mov (bad) (bad) mov subl sub (bad) (bad) mov xchg scas popfq xor (bad) insb mov pop jo loopne jmp mov rex.WB mov (bad) rex (bad) (bad) loopne clc data16 sbb (bad) mov in jae imul rex.WRB shrb repnz jmpq imul (bad) xor pop lahf outsb and loopne notb cmp decl and xchg movsl cmp adc jmp mov lods cmp shrl fsubrl adc (bad) pushq loopne sub hlt (bad) pop (bad) lret rex.WRX xor (bad) test popfq mov imul out out push jp lock stc jmpq rex.WR loop jbe (bad) sub imul in stc (bad) xchg (bad) ss std sti jae movslq test jmpq (bad) enterq fs in loopne data16 cwtl (bad) xchg sbb cmp loope callq jne (bad) adc addb mov loopne imul clc mulb xchg add cmc push mov mov (bad) jo (bad) mov rex.W ss jle mov lock or loopne (bad) xor in (bad) and imul in rex.WB out loopne push rcl (bad) cmp loopne (bad) rex.R (bad) pop stc in fcmovb sbb sbb mov sbb (bad) subps mov (bad) push lret movabs mov shr sbb (bad) lods add push retq (bad) mov pushfq data16 movabs leaveq mov cmp jrcxz xchg pop shrl jbe (bad) sub and pop or mov cli scas movslq rex.WR in fisttpll cmpsb stos xor clc roll scas push jnp cmc rex rex.RB mov movsl lods sub stos insl lret imulb js movsl mov rex.XB cmp cld pushfq ja movabs pop jae sbb (bad) sub cmp sub rex.WX (bad) sahf mov mov rex.RXB sbb add mov fcmovu pop jb movabs rex.WX mov insl test cld (bad) sbb mov sti mov ja loopne pop cli xchg rex.W and xor (bad) loopne enterq out add lret xor mov cmpsl jrcxz fisubl pop (bad) rex.RX adc (bad) xlat addr32 fwait nop ss rex.WB outsl add (bad) sbb jb in and (bad) push rex.WB repnz (bad) movsl pushq outsl mov fistpll (bad) jl jno jg mov sub cmp movabs jmp rex.R test (bad) (bad) sbb insb sub (bad) (bad) lcall insl cs movabs mov (bad) pushq jl xchg rex.R rex.RX shl cltd std imul fdivrp pop (bad) fistl xor push (bad) xchg add in sub test iret ds lret pushq add rex.RX iret lods movabs js fdivrs pushq js rorb push leaveq cmp adc int jnp (bad) (bad) xchg lahf movsb add pop fnsave xor sbb test add sbbl (bad) retq sbb insb jl pop xor rol (bad) (bad) and jne cs retq sbbb or jns (bad) out imul adc pop sub add sahf adc mov lret xchg xchg loop (bad) adc cmpsb (bad) push mov rex.RX mov clc pop rol lods xchg callq jle mov movabs sbb callq mov mov mov (bad) andl rolb or sbb insl insl sub mov and pop jae scas imul sbb movabs adc (bad) cmp xor pop jo mov test retq and (bad) cmc (bad) leaveq add (bad) in sbb push leaveq sbb movabs out addr32 xchg jp and jno imul rex.WX adc rol sti push jl mov leaveq sbb mov fdivrl movabs (bad) popfq cmp fisub je movslq xor (bad) es adc movl xor xchg outsb or mov repnz xlat sbb pushq jle sbb pop sbb lock movabs and notl cmp cmp (bad) mov push outsl in and (bad) mov loopne (bad) (bad) (bad) (bad) jne jne out (bad) andl leaveq push cmp cmpsb mov xor or iret out lahf rex.W or test hlt rex.WXB xor movabs add rcrb xor add jns and sub jno (bad) xchg movsl cmp (bad) jle (bad) mov (bad) sahf lods jno in push pop je loopne add cld xchg adc out pop loope (bad) rex.WX (bad) pushq cld mov rex.RX loopne loop rex.X sbb imul (bad) (bad) or scas outsb (bad) cs jl repnz in (bad) outsl rex.WRXB sbb movabs fistp pop movslq cmp (bad) cmc mov lret adc (bad) ror cmpsl mov in test fld loopne rex.WR push unpckhps rex.WRB xlat jge jno adc cld loopne sarb cmp out imul imul xchg loopne pop clc es rex.WR loopne lock push rex rex.RB fsubr and mov outsb loopne mov test leaveq stos push loopne sub or rex.XB (bad) and nop (bad) loopne in jmpq or xchg fs add add mov movslq jp jnp popfq rex.R and (bad) scas (bad) jle repnz adc in mov loop (bad) cwtl mov mov sbb loop sbb callq imul rex.B pushq rcr iret adc (bad) js in push retq sub rex.W andps (bad) stc lods rex.WRXB rex.WX adc cwtl and sub in fistpl xor lods (bad) cmp sbb rex.W (bad) xchg xchg (bad) cmc and or imul (bad) cmp (bad) rex.RXB cmp stos (bad) jbe rcrb pop lcall mov mov xor and (bad) rex.WRB mov loopne repnz mov lret rcll add ss fistpl or xchg (bad) rex.WRX and imul (bad) jbe xchg fsubl (bad) out xchg repz lock pop (bad) mov jrcxz,pn mov fnop (bad) jnp mov fwait loopne fsts mov fidivl fisubl sahf xor lret mov loopne cmc in neg cmpsb or adc sti cs sub out loopne push jl (bad) out ss mov xchg sbb lods idivl sub pushq xchg add loopne mov rex.WX mov xchg retq sub jno fldt (bad) rex.WRX or xchg mov or (bad) xor rcrl add sahf mov lods and movsb std rex.WRX movabs xchg mov push enterq jmpq sbb xchg (bad) (bad) loopne push and loopne xor jrcxz fiaddl stc insl or or (bad) lock stos mov or js jb adc rex.WX movsl loopne xchg (bad) movsl sbb (bad) or jne pop push adc sbb mov jb jb pop adc or xor int3 pushq mov rex.B scas stc popfq add (bad) (bad) out (bad) jge jg loopne repz iret pushq loopne movabs pop rex.WRX stc jle (bad) ss (bad) or mov loopne test (bad) in rep nop loopne mov or pushq adc sbb (bad) cmp add mov and pop rex.XB fistpll lods ds (bad) jno add lods pop (bad) xchg rcr pop rex gs xchg adc cmp push pop sbb rolb sbb xchg int3 rex xchg rclb cs sub or mov pop sbb nop cmp mov sarl out lock and rcll addr32 rex.WRX add sahf and (bad) sub or mov lahf jl in ja leaveq stc loopne rcl es loopne cmp fwait cwtl testl loopne (bad) std xor mov or jbe add fs stos jp jmpq out (bad) pushq je (bad) pop pop jo xchg xor cmp out fdivl ss mov jno rex.WRX addr32 pop ds lock fisubrl icebp sbb lea stc pushfq iret or pop shl or callq (bad) cmpsb xor mov sub loopne retq jns cltd fs scas mov or sbb (bad) mov mov sbb loopne jnp and mov stos insl sub cmp xor addl loopne xor rcrl jmp cmp xchg shrb jge loope imul mov xor mov (bad) or in sub mov outsl rex.WX in (bad) (bad) movabs (bad) jrcxz movabs cmp std xor rex.WRX loopne insb ds (bad) popfq movabs rex.WRX movabs movabs stos pop mov mov movabs rex.WXB (bad) decl xor hlt mov sbb or loop adc rex.XB push insl (bad) sub outsb rex.WRX hlt cmp rex.WRX nop (bad) out movabs test pop ds stc insb lock sbb loopne jg stos movabs pavgb fs lcall cmpsl clc in push cmp push mov movabs adc mov xor decb cld mov and mov movabs fcoms sbb test (bad) hlt (bad) cmp faddp pushfq xor mov jg adc repz jo mov mov pop and jmpq (bad) loopne xor and out (bad) jle js fdivp add rex.WR movsl mov pushq in repz cwtl loopne fwait sbb sub stos (bad) jmpq cmp adc fistpl rex.WRXB (bad) movabs add retq or sbb push mov loopne in (bad) je jb rex.W loopne callq (bad) js (bad) cs (bad) in cli pushq clc insb cltd decl nop push mov movsl loopne in sub xchg sbb mov loope jns add jl and mov movabs sub add lret cmc jns (bad) je or es in loop retq (bad) lret and rex.B loopne stc jno mov outsb outsl movabs int3 mov xor lahf xor xchg fnop (bad) fldenv (bad) xor mov cmp jle insb loopne (bad) and rex.XB jae (bad) xchg callq sub loopne cwtl outsl repz movslq lock jae xchg mov incl push pop xchg lret or loopne mulb and mov in sub (bad) (bad) (bad) pushq or scas stc sahf (bad) movabs (bad) loop (bad) mov stos xchg loopne jrcxz sbb lods imul (bad) sbb rex.RXB movabs add (bad) rex.WRXB (bad) loopne icebp xor pop cli rex.RXB adc loopne (bad) add sub jno pop stc pop sbb fnstenv or xlat rex.RX movabs int3 loopne rex.X outsb jnp (bad) movabs sbb test xor mov jbe jae cltd js rex.WRXB icebp xor lahf pop push vshufps (bad) (bad) (bad) callq roll loopne fldt add (bad) jns in test in push sbb loopne cltd movslq or movabs push or (bad) push loopne push lret movabs push imul pop cmpsl and lret scas negb loop roll addr32 in mov in jo test callq (bad) lock stos (bad) (bad) fnstcw rcrb (bad) jmp and loope retq sbb or (bad) insl lahf stc imul loopne sbb mov icebp sarl push fcmovnb or (bad) ds push popfq cmp (bad) xor jmpq rex.XB fldenv out lea fildll outsl cmp sbb adc fisubl data16 pushq mov fcmovbe test stos js icebp xchg mov imul popfq adc sbb pop (bad) (bad) xor loopne mov fsubl movslq and mov or cmc sahf movabs ja sbb retq loop leaveq lods xor addr32 add (bad) rex.WRX (bad) insb lcall mov fwait lock retq in rex rex.RXB push mov movabs or pop movabs push mov fstpt (bad) movabs xor nop (bad) or (bad) jg add loopne ds (bad) cmpsb and jg in (bad) jo incl mov ficoml callq mov sub pushq rex.WRX out movabs jbe mov mov repz (bad) jmp sub cwtl rex.WXB jno (bad) callq (bad) and adc leaveq lock idiv loopne push rex.WX stos sahf pop and stc or add jrcxz jmp leaveq rex.B rex rex movabs (bad) and mov icebp fcomi out mov cltd je clc fidivr test sub jl xorl push movabs (bad) shlb loopne adc and in cltd jbe sbb xor and lret xor stos movsl test pushq jg push int fidivl pop loopne (bad) and xor shlb cmpsb insb pushq (bad) movabs xor (bad) lods jp jrcxz xchg rex rex.RB loope imul add (bad) push loopne (bad) push xor int ja,pn adc jl movsb (bad) (bad) lods (bad) push int3 rex.W test (bad) mov xchg loopne add xchg add callq (bad) lock lods xchg callq repz shlb lret rex.XB adc hlt icebp jmpq roll lock stos jmpq lahf sbb sar retq adcb cld add loopne je movslq rex.X push fmul enterq (bad) loopne (bad) fcompl xchg lret fs cmp or fnstenv in mov rex.WB cmpsl stos sub es sbb xor loopne xor mov out callq pop hlt sbb cwtl in (bad) je or lock xchg enterq jno and rex.XB in in pop out sub (bad) mov jo loopne lea scas cld sahf mov pushq out shrb (bad) callq movsl lret sbb mov movslq out sub mov jns out push xor (bad) gs sub (bad) jp push jl sbb sarb test sub mov rcll cmp xchg gs movsb lret adc rex.WRX sbb test add loopne add mov test sarl pushq mov rex.WRXB imul movabs pushq ror loopne mov movsl pushq cmpsl rex.WRXB cltd sbb loopne or jl jle sbb xchg pop jmpq adc pop rex.RB fisubl (bad) ss (bad) adc lock (bad) stos in movsl xchg scas xor cmp fs (bad) sub (bad) jg sbb callq add mov sti mov mov fwait jl stos nop gs (bad) pushq sbb cs movsb mov fisttpl xlat cmp mov ljmp xor (bad) inc cmc and nop adc (bad) or rex.X repz mov mov rex.WRXB (bad) jmpq sbb fsubs mov loopne sbb pop shl fcoms lods js (bad) loopne in mov (bad) out lcall (bad) xchg cmp push (bad) sub fnsave movsl cmp pushq idiv iret (bad) enterq mov loopne mov xchg push loopne sbb fucomip mov adc fwait rex.RXB xchg int3 adc (bad) mov add sub (bad) sti or icebp mov fwait rclb mov cmpsl (bad) loopne or fnstcw cmp mov in vrcpps rex.WR gs loopne mov xor mov (bad) pop adc retq mov out xchg mov loopne or (bad) sbb mov xchg xchg (bad) (bad) cmp pop rex.X (bad) push imul add fwait sti test jle movabs stos adcl add rex.X icebp (bad) xor adc mov frstor (bad) (bad) cli mov sub rex.RXB jg fs lods loop (bad) sbb repnz std add jbe popfq adc sbb lret rex.B mov outsb js je scas sarl lock (bad) jnp or stc push jmp rex.RXB sbb pop lret add nop (bad) lods lods lret sub or pop cmp (bad) rex.WX mov (bad) movslq sub rex.WRX cli jg (bad) mov mov movslq rex.RXB adc pop and (bad) mov (bad) (bad) incb add scas movabs fstpl adc (bad) mov jae jns (bad) lock retq scas leaveq lock or sub xor xchg sbb or jge (bad) jge and cmp lods lret xorl hlt (bad) xor (bad) leaveq loop (bad) add movabs je sub rex.XB jns adc lea sbb pushq push sub sub mov fwait lock fs and or xchg movabs xor mov in jne cld fistpll add xlat scas sti minps rex.W cwtl xor retq jle (bad) fs ja rex.WX out rex.RX add (bad) callq (bad) sti mov jne cmp (bad) (bad) (bad) lahf mov int movsb rex.XB (bad) faddp (bad) pop adc add mov scas rex.RXB rex.B mov in fnstcw xchg scas adc subb (bad) xor adc cli xor mov mov xchg (bad) cmp cmp mov sub stos mov test imul stos imul ss jnp jmp (bad) jl (bad) (bad) and roll push mov jrcxz and xchg (bad) loop xchg push rex.X push add or xlat movsb test sub fisubl (bad) imul push rex.WRXB packssdw sbb (bad) mov pushq fstp sbb std mov (bad) (bad) (bad) sti xchg jp int (bad) (bad) (bad) incb movabs mov (bad) adc add pop adc imul (bad) mov mov movslq outsb push (bad) (bad) xchg rex.WXB and cltd and (bad) mov mov mov mov sbb adc add rex.RXB gs gs imul callq xor lea or bsr mov cmc shl jmpq jae bt jmpq xor fbstp (bad) loop (bad) jmpq lock or fisubrl enterq lahf rex.X movsb rex.XB (bad) loope adc lods int (bad) xor jle sti in test retq repz sti add repz add lret jo jo out jp,pn (bad) (bad) (bad) sti retq callq (bad) lods cmc jge in gs jl cmc lahf cld mov add mov stc ja sbb rex.WRB mov cltd div mov cmp mov xchg add add push rex.W fwait cmc or pop fidiv pop jg jg xchg fs fdivrs icebp xor or test pop out rex.RB or jge mov and cmp stos (bad) adc sub pushfq xor stos out add jmpq jmpq add rex.R jae jne jb pop add int icebp incl pop cmp test lahf rex.X rex.WXB stos pop push pop mov adc lock cli lea cmp test jrcxz (bad) int fcmovnbe std in test clc pushfq cmp jle adc add (bad) pop jle rcrl test lret sahf cmp jne movslq sub rex movabs adc jnp stos pop in jle or js fucompp jno loop cmp xchg movabs adc mov (bad) sbb (bad) andb fwait leaveq je (bad) (bad) (bad) sti rex.X (bad) (bad) (bad) sub push clc pop out lods rex hlt add repnz (bad) (bad) ljmp hlt callq add xchg sub cmc and jbe mov mov or jge mov add pushq insl or hlt in pop add leaveq (bad) fwait lret mov stos jrcxz movsb mov movl (bad) clc test jmpq ja bt stc cmc imul stc test clc cmp add jmpq callq xor add xor add mov clc cmp cmpb jmpq sub mov in xchg fs cmc fwait icebp movslq icebp fist (bad) repz cmp jo scas rex.WXB vpextrw vpxor pop ja scas (bad) (bad) cmp add add stos rex.WRXB enterq hlt mov and rex.W imul int xor shll (bad) cld add or (bad) (bad) (bad) (bad) in imul mov or (bad) or pop fucomi popfq pop mov int3 adc repnz and rex.WRXB rex.WRX (bad) or (bad) and add add pop (bad) movsb mov add imul (bad) jg xchg subb fmull in mov adc xchg mov (bad) push pop cmc xor lods mov and (bad) loope xchg rex.WRB rex.WXB sub or mov fcmovb add mov mov (bad) repnz jp pop push cmpsb imulb (bad) xlat (bad) rex.WB rex.W xlat retq or cmp xchg (bad) clc mov jbe lahf pop pop (bad) sbb jne push (bad) lock loopne stos (bad) (bad) mov or cmp (bad) sbb out movups (bad) (bad) (bad) std xor (bad) fwait jb (bad) (bad) (bad) (bad) lods repz xor cmc movabs mov pop std (bad) jge xlat (bad) rex.WR retq ficom fisubrl pop (bad) or push push icebp lock and je lretw int3 lods sahf sub outsl cmp xor iret (bad) mov jne xor movsl test addl pop xchg or jne fsubr outsb repnz lea in in add movabs add add xchg popfq or cwtl rex.XB (bad) mov loop fucom int (bad) cmpsb test add mov cmpsl (bad) rex.WRB rex.B (bad) insl rex rex.W leaveq lods mov lahf cmc and jg mov (bad) mov mov imul pushq rex.RXB add sub xchg popfq int movabs movsl rclb cmp add and (bad) test pop pop xchg rex.WX fwait cmc ja insb pop cwtl int movsb push pop pop jle push xor xchg (bad) cli out fidivl (bad) fidivrl or leaveq popfq scas mov pushq int3 scas push xchg (bad) ud2 lret rex.XB or sbb fdivr (bad) (bad) clc xchg sti pop or adc movabs decb stos int add add mov test adc (bad) jnp sbb mov ror pushq mov sti xchg in pushq gs mov mov (bad) mov rex.RB sbb (bad) xlat (bad) repnz mov scas or callq jl sbb cmp sbb xchg (bad) jle jae rolb loop cmp xorb loopne (bad) stos mov mov out (bad) out (bad) pushq pushq movsb (bad) out push in or xchg rex.XB cli (bad) repz jle ds lret rex.RX or xor rex.RB es mov mov out icebp cld (bad) movabs or and cmp mov in out mov jae (bad) int cmp (bad) (bad) (bad) sti leaveq sub mov rex.WXB rex.WRB data16 fidivrl (bad) fldcw rex.WRXB rex add add xchg push fcompl mov adcl imul rex.WX int3 mov orl xor add jae fisttpl fs (bad) (bad) nop mov fidiv and jae setle adc bsr mov xadd mov bsr or not bts mov jmpq jae add setp mov dec mov mov shrd bswap or mov clc clc stc cmp xor jmpq je clc shld bsf clc push sar clc sete stc mov stc bt cmp sub jmpq xchg jns (bad) cwtl out cwtl and pop outsl adc cmp lahf cmp xor sbb jge cmp cwtl jno addr32 push mov lods out adc xchg mov rex.XB scas int (bad) (bad) std test mov jmp insl int rex.WRB mov pop mov cmp and rorl (bad) (bad) (bad) std add (bad) (bad) (bad) (bad) pushq ss rex rcl stos int imul (bad) xor add or int (bad) rex.WRXB repnz pushfq xor fimull xchg and mov hlt ja xchg (bad) orps xchg jo test fild mov in rex.WRX cmp (bad) in shll mov mov fdivs sub cld rex.R jl sbb cmp push or movabs rex.W xchg push out in (bad) mov je mulb xor stc outsl push push push rcrl xchg enterq (bad) (bad) cli mov (bad) (bad) (bad) std cmpsl movabs insl rex.X cli (bad) and test lea sarl adc rex.RB or imul popfq (bad) loope enterq stos rex.X cld popfq (bad) cs out imul rex.X add rex.WB mov xor (bad) ss jb adc xor adc gs cmc or cmp mov ror movslq mov stos roll add test movsbl shl not add bsf sub rol sub rol rcl bt shr adc dec mov and cmp cmc add (bad) mull mov or iret add mov cmc clc shr jmpq clc sub jmpq jmpq jmpq ja (bad) mov add out insb mov add fdivr ficomp rex.B (bad) sbb xorl push cmp retq sti add (bad) fisttp and sbb lods (bad) sub (bad) jae (bad) cmp (bad) xchg (bad) push sti cmpsl (bad) data16 cli pop movabs push stos pop jnp mov addr32 add adc (bad) (bad) callq rorl add scas fidivr shl movsl test ja rex.W and scas out jne or (bad) add add or in sbb scas add cmp mov adc pop pop stc xor xor rcrb movabs (bad) (bad) cmc lahf (bad) lods mov cmc xor addr32 (bad) jmpq or (bad) enterq rex.RX out and incb xchg rex.X (bad) (bad) xor imul cltd rex.W xchg cli test retq out loop (bad) xchg (bad) pop cmp mov test sti (bad) rex.WX sub int3 and jle in rex.R or and int3 xchg (bad) jmpq rex.B out pushfq cli mov xor xor out and mov lret std and (bad) (bad) (bad) sti popfq (bad) test decb push mov test mov pop add add or lea (bad) js out (bad) (bad) enterq sysenter pushq xor and mov cmp ja cmp (bad) test std movabs rex.WB mov (bad) jmpq jmpq rex.RXB rex.R xor cs insb add add imul je outsl outsb add (bad) sub stos int push cmp ja adc rex.X mov int pop jbe (bad) fwait movabs xchg mov (bad) mov adc xchg rex.WR jbe jnp sub mov and cmp ror sbb je or xchg jnp cs (bad) (bad) (bad) sti (bad) imul (bad) (bad) (bad) incb lods adc clc loop sbb lahf cmp add pushfq mov xchg rol loop sub (bad) (bad) add add imul mov fnstsw jns (bad) roll push sub outsb push movsl cmc (bad) adc lods (bad) mull adc pop (bad) insl add movabs add movabs (bad) mov (bad) stc clc pushq jmpq callq neg rcr clc add setb shr bswap rcr mov stc clc cmpb jmpq cmpb jmpq movb test test jmpq je setne ror or push and not rcl mov jmpq jmpq rex.WRX sbb jno pop rex.WX jbe (bad) negl retq test or jae mov sub je mov movabs pushq sbb (bad) mov jle je mov leaveq and sub cmc (bad) test rex.R (bad) cmp and sti cwtl add (bad) add imul and jmp (bad) sub adc cli pop mov lea add fimul cltd jp jo rex.WR int (bad) xor (bad) cmp sub nop idivl mov xor mov sbb jo rex.RB push rex.X test mov movabs (bad) imul mov jbe retq cmpsl movabs rex.X adc test rcrl rex.RX (bad) xchg movabs xor add in ja pushq mov (bad) rex.WRX outsl fcmovnbe movabs sub pop lods push movd pop retq mov rex.XB stos sbb mov xor scas loope sub push mov rex.RXB (bad) (bad) (bad) decb jg retq in xor (bad) cmp mov addr32 xchg (bad) ja mov jl (bad) subb cli movslq rex.RXB (bad) lock fcoml xor repz and and jle movabs and btc add movzbw jmpq jnp callq and rex.WRX xchg rex.W in nop out fiaddl mov hlt mov (bad) push scas and xchg addl (bad) push xor pushq fdivr shrb fldt sbb adc out add cmpsb jecxz pop movslq js rcl jge sub iret lea (bad) (bad) (bad) cld lea sbb js add mov scas xor (bad) (bad) jns lods (bad) mov outsl mov push adc (bad) retq sbb xchg loopne pop (bad) or or xor sbb movabs xlat adc (bad) lcall and mov rex.B jnp jge adc adc xlat jnp out outsb adc adc (bad) mov xor pop adc push (bad) or in lock mov mov mov bt cmc clc or jmpq mov mov mov in rex.WRXB rex.WRB mov mov (bad) (bad) cmpsl (bad) rex.WXB or fucomip loop mov outsl sub fs (bad) sti sarl xor add mov fldcw rcll movsb cmp cmp cmpsl jo retq scas add int3 test sub subl push add mulb lods add in (bad) rex.WR rcll sets xchg (bad) (bad) xchg (bad) (bad) mov or std sbb add add or cmp imul cmp (bad) mov cmp or adc sub (bad) fidiv mov mov (bad) cmp nop push scas rex.RXB fcmovu (bad) popfq lret lods pushfq sub mov xchg sti xlat (bad) jbe cmp (bad) lods adc pushq xchg push repnz rorb repnz (bad) cmp jge (bad) adc (bad) stos sbb outsb movslq fdivl rex.WX mov sti mov mov and sub mov rex.WB xchg rex.W xor (bad) mov or mov and jmpq jmpq jmpq adc jmpq je cmc bt cmp jmpq bt mov movzbw neg and mov not mov and xor mov bsr rcr lea push and rcr add xchg mov stc sbb cmc bsr sub shr movsbw shl clc xor xchg not movsbl xchg lea movzbl xchg movsbw movzbw mov movzbw mov movsbl movzbw lea movzbw movsbw not mov not movabs mov lea jmpq jne rcr rol rcl jmpq repz (bad) ss out je xor rol jmpq xor ja push jo push xchg jg mov xchg rex.RXB xchg adc in xor sbb jrcxz (bad) xor or mov in sub xchg fstpt xor push jbe adc test movabs (bad) and xrelease rcll movabs sbb sub add scas mov and in pop lahf push jae gs sarl in rex.X (bad) callq (bad) cmp fistpl (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) loope (bad) (bad) iret pop in (bad) xchg cli or callq mull mov cltd (bad) adc mov mov lods (bad) cld insb rex.WXB or pop nop add ficoml adc (bad) icebp movslq ja imul adc or xor mov mov out push add mov repnz rorb pushfq rex.RX mov fdivp imulb rorl (bad) jbe xchg rex.XB repz icebp testb (bad) or push pushfq rex.WB adc in cmp shlb jbe gs icebp callq icebp sarb ss shrl rex.WR push push outsl rex.B movabs add mov (bad) (bad) (bad) lock mov rex.RB lret ss (bad) or add add mov clc faddp mov (bad) (bad) std movslq mov rex.R nop or mov sbb xchg jg orb leaveq mov xlat push sub or imul out rex.R mov mov and cmp test xor es (bad) xor jrcxz mov insl cwtl and loopne sub mov push sbb cld test loope adc retq mov jmpq je movabs in mov fidivl lret cmp jo hlt sbbb hlt fwait lods mov sub int3 test (bad) outsb adc cmp mov mov (bad) (bad) add (bad) sti orb or (bad) (bad) (bad) (bad) imul cmp or and or (bad) (bad) (bad) (bad) jmp and (bad) cli scas mov (bad) xchg shlb add push (bad) rex.WB xchg sti pop sbb movsl cmpsl test imul mov (bad) cmp ss mov lea jmpq pop jmpq jmpq jmpq lods js movabs xchg ds add roll fcoms add (bad) mov scas (bad) mov stos cmp sbb (bad) fwait pop fsubrs or xchg decl or xor and add callq rcl xchg hlt xchg add shll mov rex.R xor mov or (bad) add sbb and (bad) (bad) (bad) sti (bad) lods cltd (bad) (bad) (bad) (bad) mov sub adc rex.WX rex in out jp mov add add fisubr adc add movl rcrb (bad) (bad) orb fwait cmp fwait mov outsl adc sub xor fs mov jmpq callq jmpq sbb int3 pushfq push adc sub (bad) lods adc pop mov push jg push xchg or xchg repz (bad) cmp cwtl push push stos pop and or pushq mov xchg push jp fwait in fxam cli add adc movabs movslq (bad) (bad) decb (bad) scas (bad) shr addb (bad) sub pop rex.WRXB (bad) sbb in xor test insl movslq shrb jg (bad) leaveq jp rex.WR mov mov adc (bad) rex.RX test xchg test mov rcl in jae test dec cmc mov dec sar shl add not jmpq ja sub sub movsbl movsbl add rcr sbb mov bt mov stc stc bt cmp repnz jmpq add jmpq jge push sbb (bad) sti mov jns cmpsl and mov ja (bad) (bad) pop pushq jmp or test lret imull cmp movabs sub jge shrl (bad) enterq (bad) (bad) (bad) stc stc movsl adc pushq jmp kmovb mov cmp sbbl (bad) out xor mov movslq lods andb (bad) (bad) cld (bad) sti pop sbb leaveq mov nop out out cmp in int icebp (bad) or loop jae out mov push test jmp rex.RX vpaddsw or callq or sub or leaveq fisubr outsl fistl stos mov jns test adc mov std mov enterq in in movabs pushq (bad) cmp (bad) (bad) (bad) incb xor out retq retq sti add mov add add movabs rex.B (bad) pop rcr add jae retq xchg add pop sbb push xor mov cmp lahf add (bad) mov mov in mov rex.WX lret (bad) mov retq add bt cmc clc stc mov cmc cmp test cmp test jmpq callq push incl movabs xchg xchg ror in add lock loop es incl (bad) test in fdivp mov in in rex.WRXB clc movsb jrcxz loopl out jmpq sub add cs in cli mov fsubl mov hlt fmulp mov in clc fildll (bad) lock movsl es orl mov pushfq mov clc fimul cld (bad) out push rex.WR shlb push mov callq gs rex.WRXB je lock jo rex.R cs rex.WB pop mov test rex.WRX (bad) cs add ja loopne mov xor rex.X movsl callq lock pop movabs (bad) mov mov mov xchg xchg jmpq xchg callq movsb loopne movabs stos mov (bad) mov mov lea in rex.R sbb sbbb callq callq (bad) jle rex.WRX add pop rex.XB jg add movabs ss cmp sbb movabs movsb push xor pop add neg add or mov movabs and lret cmp add (bad) (bad) (bad) jne rex.WRB (bad) movsl movsl fs rex.RB movsb callq add out (bad) xlat sar enterq (bad) callq or add cmp test xor sub sub and and pop pushq pop (bad) push sub js insb xlat fs xchg sub test fsubrs rol int3 rex.WRXB (bad) sbb faddl rex.X mov callq sub add out and push cld rex jo cwtl rex.WRXB add out rcl enterq test callq lea out or add cmp sub push rex.WRXB sub xorb lock callq xlat fdivr shrb iret sbb pushq pop xlat rex outsb or (bad) (bad) ffreep cltd es mov rolb movabs jo clc rex (bad) callq pop in fs mov (bad) pushfq loop popfq rex.XB lock mov mov loope loope (bad) out movabs movabs incl iret lcall jno in (bad) cli add lret or bnd insl mov lret (bad) cld sbb xorq mov addl stos push (bad) stc enterq mov add xchg (bad) cs lahf mov cmpsl icebp addl xor (bad) sbb (bad) mov xlat mov mov out sbbl fdiv mov int rclb (bad) nop in callq int rolb lods xchg test sub lahf adcw jle xchg nop xchg movabs (bad) movsl (bad) xlat addr32 (bad) shlb (bad) sbb lret out lahf xchg shlb int3 outsl fnop movsl ficoml movsb xor lahf jo sub lods pop jnp mov cmpsl test (bad) movabs add sbbb mov js xor rcl pop scas rex.W callq or sub sub cwtl out adc cld shrb callq cmp out pop xlat rex.W js test mov mov xlat callq mov callq fisttpll nop xlat cmp rex.WXB enterq fcomps push insb mov callq (bad) insl int rex.WRXB cmpsl rex.W clc shll (bad) movabs sar addr32 fcomp rex movabs pop jo in push mov icebp movslq (bad) enterq js rex.XB pop test lock pushq jg or or xor adc nop int rex.WXB xchg xor jmpq gs jb jae movsl (bad) jrcxz (bad) push jp (bad) and rex or jno jle adc loop loope rcrl add (bad) test mov leaveq callq imul add cmp jnp or movsl pop add loopne fs movsb enterq rex.RX add or sbb cmpsb xchg jae movabs rex add stc in xchg jg add mov callq fst pop scas or fistl jp mov movabs insb fstps mov cmp mov rex.RX adc adc (bad) loopne lods (bad) jge shlb mov sbb jmpq sbb cmp rex.RB jrcxz sbb mov fldl mov jns ror adc and (bad) jmpq outsl and icebp (bad) test rex.WB movabs fldenv adc fneni(8087 pop mov and pushfq or sbb lahf fs cltd sub pushfq add shrl je jae (bad) cli rex.WRX fstl jbe push loopne mov xlat movabs (bad) pop adc (bad) lahf insl pushfq xchg or scas mov (bad) pop pushfq and loop rex.WRX repz (bad) xlat add icebp (bad) (bad) rex.W (bad) fwait rex.WR add loopne pushfq movabs sub mov gs rex.WRXB and (bad) notl (bad) and addr32 jle jns loopne cmp cmp pushq or loopne movabs lret out cld fmull vucomiss cmpsl jo xlat rex.X and pop push loopne (bad) mov loopne mov lock retq cmpsl add lret rcl mov rex.WX in and ds sbb jp pushq fsubl mov fdivrp stos icebp lods sbbl je or cmp (bad) (bad) sub cmp out jo rep (bad) (bad) adc xor shrb cs (bad) rcl fldln2 fcom int repz jrcxz movabs and lock sub pop cld rex fmul xor add mov hlt cwtl mov add sbb cmpsb icebp js (bad) lods rcr mov rex.X jg ror or movabs ficom stc sub outsb retq mov lods hlt sub sub cld mov callq movsb xchg mov mov cs and cs shrb lock rex.X (bad) je movabs cmc mov mov fadds test rex.WRXB sub jge jnp callq rclb (bad) test hlt cs add xchg pushq (bad) (bad) jmp test out rex.W (bad) andb sarb mov js mov mov pushfq add out cmp mov es lock callq rcrb (bad) test (bad) out loopne xlat (bad) pushq cs in sub xlat (bad) cld jle test sub mov imulb je movsl out xchg xlat (bad) cld xor test (bad) sub out data16 cmpsb cld adc test bnd add xchg je movabs test loop (bad) add out or cmp mov pushq test (bad) rex.WRXB cmp std out mov lret pushq (bad) (bad) stos sub pop iret loopne gs (bad) (bad) sub (bad) lahf cld fildll pop (bad) jg mov pushq test xlat xlat (bad) rol rex.WRXB sub add out outsb fisubrl mov test shr fisubrl rex.RX add out movabs jbe fwait cld fldt sub xlat jmp imul (bad) mov loopne xchg out (bad) xlat and (bad) (bad) or ja add std out jb test xor xlat int push pushq in (bad) lods sub (bad) mov cltd out (bad) sub (bad) leaveq sub jmpq cld or subl (bad) pushq movabs cld icebp pushq jno mov sbb loopne (bad) movabs (bad) scas shrl loope (bad) sbb jno (bad) (bad) (bad) (bad) shrl sbb add (bad) vmovhps sub sbb add (bad) vmovhps shrl sbb rex.WRXB (bad) rex.RB sbb rex.WRXB sbb jno sub test rex.WRXB sbb test rex.WRXB cmp pop (bad) (bad) test adc jno add and loope mov (bad) rex outsl (bad) mov mov insl cmp mov in mov mov movabs (bad) mov mov addr32 jp mov callq andb xlat mul (bad) jmpq out movabs movabs nop sarl mov repz adc (bad) rorl push test cmp (bad) repnz nop rex.WX mov lahf pop movabs in mov test ror xor adc rex.XB or (bad) (bad) out (bad) mov (bad) movabs add xchg movsl hlt jp mov retq (bad) movsl stos xchg xor sbb ds cld cld sti mov mov icebp mov out cmp orl (bad) mov or cmp int3 (bad) enterq test rolb decq xchg cltd xor xchg fadd mov lret movabs xchg hlt mov adc (bad) in mov cmpsl mov ja cmpsl movsl je mov sbb movslq lock popfq adc ror imul in lret in add lods jrcxz (bad) mov fdivl nop rex.WRX repnz jo xchg addl cmc cmpsl movsb lahf (bad) mov cmpsl test cmp (bad) jno jmpq pop jp (bad) outsl jmpq mov xchg (bad) mov (bad) sahf xchg cmp fcomip add pop jl rcrb mov push (bad) iret and rex.WRX xor repz callq jns sahf xchg mov out rex.XB pop (bad) rex.B (bad) cmp (bad) jge (bad) rex.WRX out hlt (bad) mov xchg mov nop int sahf out jb push (bad) mov (bad) add push clc (bad) (bad) mov mov out (bad) mov popq test (bad) push push sub adcl out (bad) jno nop (bad) (bad) int (bad) add repz (bad) out insb mov pop (bad) (bad) rex.RX loope rex.WRXB cmp callq cwtl movsb push insl movabs leaveq popfq rex.WB ffreep lock test loope pop sbb out (bad) test sub clc rex.XB rex.WRX xor movabs shll nop xchg sahf mov (bad) (bad) (bad) xchg xchg (bad) jo (bad) rolb pop out mov movabs (bad) jb divb mov sar (bad) (bad) or fnstenv jnp mov sbb jno jae xchg test fsubrl retq sahf out jb (bad) mov rex.B rex.WR movsb push rex.WRX rex.XB rex.WX lods sub rclb icebp pushfq jo jo stos xchg sti lods mov in movabs movsb (bad) ds mov jne orl sbb rex.B rex data16 hlt (bad) mov pushfq add movsl push test sahf retq lods cltd sarl xchg mov mov icebp movabs sub cmpsl lahf xchg xchg xchg pop lock (bad) jo sbb xor add xchg stos lods (bad) mov callq mov sahf stc movsb js rex.WRXB xchg cmpsl xchg xor push xchg stos cmp cltd orl rex.W rex.R cmp callq xchg (bad) notb repz (bad) pop add rex.RXB out rex.RXB and lods mov cmp repz cs rex.WRXB or imul (bad) xchg xchg test add and xchg rex.WXB test push in rclb lods mov in (bad) xor std (bad) stc mov xchg cmc int3 jge insb cld cmpsl mov (bad) sti hlt jg addl (bad) sti scas pop adc mov outsb shll jbe mov pop xchg rex.R (bad) out rex.RB ss xchg (bad) rex.XB rex.W mov test (bad) stos movsb mov test retq shlb cmpps sub leaveq (bad) lods xchg (bad) cmpsl mov scas xchg jne shufps xchg repnz test lahf retq outsb (bad) (bad) hlt adc lea (bad) jo addr32 cmpsb xor callq sub (bad) or callq iret sbb pushq sub pop cld and cs cmp jmpq fistpl jg cwtl jb xchg cmp pushfq (bad) rex.XB rex.R roll rex.WXB rex sahf loopne (bad) fs lods fisttp loopne rcrl sbb rex.W gs dec sahf in add xchg mov adc (bad) pop rex.R rex cmpsb rolb push loopne sbb lret loopne (bad) mov js frstor in xor rex.WRXB movabs mov fistpll mov rol rex.WB and movsb jmp mov repz test add jae cwtl fcmovne ror xchg or loop (bad) movabs loopne mov orb lods loopne and callq mov add movabs push xorb lahf loopne jmpq jge loopne test (bad) loopne jo mov (bad) xchg loopne cld mov icebp test pop outsb imul int3 lods (bad) cmp stos (bad) scas add xchg or movslq adc leavew pop loopne lods sbb fwait andb (bad) rex.WRB fsubp sub pop leaveq mov mov fstpt loopne scas (bad) add (bad) cmp (bad) jg loope or loopne (bad) mov and rex.W cmp sub int3 xor rex.WX loopne std cmpsb push and test fsubl or out (bad) cld and (bad) in jl (bad) sahf (bad) push jae rex.R (bad) mov mov cmpsb (bad) mov fnstenv test (bad) int3 fs loopne mov add lods or fcmovne ss jno fwait (bad) loopne cmpsl jl rex.WRXB (bad) sub or rex.RX addr32 addb xor loopne jrcxz mov out nop loopne rex.WB pushq mov add or pushfq rex.B fs sub sub roll test (bad) out adc push (bad) or loopne hlt cmp pushq insb adc sbb (bad) nop gs adc mov or or push imul adc test xor movslq (bad) pushq xchg xchg jbe fidivl cld and sub icebp (bad) and jge cmpsl (bad) adc push cmp adc sti xchg jne in jbe adc push cltd in mov sbb cmp pushfq imul (bad) (bad) sahf xor fsubp pop rex.WXB stos (bad) push movabs add (bad) pop (bad) and sub clc adc loopne cltd jp xchg scas sbb fisttpll (bad) outsb and pushfq mov (bad) iret loopne (bad) (bad) fcoms loopne or and addr32 loopne pop cmpsl cmp loopne mov (bad) rex.WR js add jae rcr cli pop (bad) std movabs (bad) in xor push loopne enterq or loopnel stc jp rex.XB stos rex.WRX pop mov in loopne (bad) sbbb sbb xchg fstps mov outsl loopne and pop and and (bad) orl (bad) (bad) rex.WRX rex.R cmp shl scas mov in pop icebp (bad) enterq lret adc mov and mov xchg (bad) cmp jmp loopnel ja nop jle popfq jno pushq mov xchg loopne test test lea adc out sbb rex.WR hlt cli fimul loope in (bad) incl xchg sbb mov addl loopne cmp push lods adc loopne (bad) neg sbb mov loopne or rex.X loopne mov popfq leaveq rex.WX rex.XB sahf sbb movsl jle es orl push lret jmpq adc seto cltd fwait sbb in outsl loopne mov loopne pushq pop movabs xor push fmull (bad) loopne add fidivl gs lods (bad) mov loopne rex.RX pop cltd xchg loopne ds or (bad) ficoml loopne insl mov sub jnp sub mov lods xor or xchg clc jle lods test and (bad) or imul xorl mov mov (bad) (bad) movsl in iret rorb xor xchg std pop jb scas idivb fnstcw insl imul cmp pushq loopne movslq jbe (bad) cmc cs cmpsb mov loopne (bad) retq or test push mov movabs lods rex.B mov adc sbb sahf movabs or add loopne rex.RB rex.RXB sbb jl jrcxz fs jge or xor rex.RXB lock add mov xlat and mov mov enterq movslq (bad) rolb in imul je mov pop rex.WX es retq mov (bad) and loopne outsl cmpl xor ds rep shl (bad) add mov loopne xchg test add (bad) fsubrl movsb (bad) sbb jg jrcxz rex.WR rol jmpq rex.B or rex.WB rex.XB fucom sahf sub pushfq insb jns pop mov sarl (bad) (bad) pop in mov adc xor stc (bad) (bad) add rex.RB rex.B imul addr32 rex.RX loopne,pt xchg and stc (bad) xchg loopne mov addr32 loopne cli push rex.WXB and out test loopne jb sbb and jmpq mov mov xchg fsub push loopne callq fneni(8087 push (bad) add or push jmp mov mov add loopne int3 (bad) push gs icebp jb mov shr fstpl rcrb shll mov jne cltd rorb rex.WRXB callq test mov cld frstor loopne jge stos (bad) fwait jle loopne test (bad) adc in rex.RB sub jl (bad) mov jne sbb rolb (bad) pop (bad) loopne jo xchg add xchg push xchg loopne rex.W rex.WB lods mov out fistl rex.WRXB pushfq (bad) out or xchg rorl mul ja (bad) ss jmp fidivl insb (bad) add (bad) add in push mov and jmpq adc rex.RXB lock icebp imul and sub sbb jo loope xlat repnz test or outsl loopne sbb loopne jg (bad) push pushq cmc loopne mov fistp sub loopne (bad) sub (bad) mov xchg jno cmc pop rolb test (bad) loopne movsl stos pop test int3 loopne sub retq rex.WRB rex.W and out loopne movslq loopne pop sub vmovntpd loopne decl cltd retq push loopne lret ror rex.WX sbb mov test jno cli movabs jae add loopne jge jmpq loopne out and data16 mov jrcxz nop (bad) movsb cwtl fnstcw push (bad) jo,pt mov sahf fiaddl xchg cli mov push loopne xor mov sahf cmp sbb adc sbb (bad) mov jae data16 loopne add (bad) xchg sarb adc xor repz jae rex.WRXB (bad) (bad) repnz mov loopne test scas test ss push scas xor jne fs nop jmpq adc stos (bad) loopne xchg int jo icebp xor pushq xor (bad) rex.WB loopne xchg pop (bad) push xchg testl popfq loopne mul sahf rex.X test je stc xlat in mov loopne cmp jge loopne fs sub and loopne push (bad) mov rorl jmp rex.WB out add ds lock cld cmpsl movabs sbb rex.WRXB cmp popfq (bad) movabs push (bad) rex.W loopne jb xlat add pop (bad) loopne fistp or jnp mov movsb push lret mov sub sti loopne jg (bad) (bad) imul add repz jo mov shll imul out (bad) test cmpsl xchg mov mov bnd jbe loopne rex.WRXB jae movabs scas mov pop mul rex.WRXB hlt cmpb and add fsubr jmpq cmp xor mov mov sub fucom js loopne lahf xchg enterq loopne outsb and fcoms add sub (bad) ficompl imul rcll fidivl fadds out test decb and stos (bad) jrcxz stos sbb int3 jmpq pop push push sbb loopne add loopne fildll sar (bad) mov jle cld cmp (bad) (bad) sub mov int3 cmpsl pop rorl (bad) add xchg std rcrl cmc imul adc test and (bad) pushfq icebp mov add nop pop mov mov (bad) sub insl (bad) loopne negl sbb (bad) mov add xchg (bad) addr32 push push sbb loopne out jo rcrb ljmp movslq or rolb lret jmpq lods leaveq sbb cmp (bad) xor add loopne sbb loope loopne push (bad) pop (bad) leaveq cmp jmpq adc lock jo loopne (bad) push lahf adc add pop jae mov sub loopne rex.RB cs loopne and xchg adc rex (bad) loopne retq pop test loopne jbe mov loopne adc data16 (bad) callq movsb pop movslq (bad) xor loopne icebp retq outsl jle loopne (bad) (bad) pop sbb rcll add cs rex.WRX xchg (bad) loopne sub rex.RXB or int lret mov int3 rex.XB xchg jno sbb outsb pop loopne push notl cli jmp cmc xchg es adc fs mov je push movslq loopne or and (bad) mov xor loopne xchg cli (bad) outsl js xchg insb std out (bad) in lret (bad) (bad) (bad) pop cmp jmp (bad) fcomps adc loopne movabs (bad) loopne rex.RXB ljmp (bad) xlat adc add jmpq adc adc jl fwait sbb mov cltd in adc pushq loopnel xchg cmc fbld stos fnstenv stc add loopne mov and enterq fsubrl out lret (bad) sbb ja sbb push jmpq loopne jae (bad) (bad) (bad) (bad) cmp (bad) sbb sub xchg rex.X sbbb (bad) mov movabs fisttpll loopne pushfq xor (bad) test rex.WXB sub or icebp (bad) sbb push (bad) loopne mov loopne retq iret or rex.XB (bad) adc or (bad) shrb sbb jae fcmovbe mov rex.WXB jbe (bad) mov rex.RX fistpl in (bad) mov rorb cmp (bad) fistp and hlt jmpq (bad) adc add fwait xlat loopne or mov mov loopne and and push out mov fs rex.WRX scas xchg jbe incb and mov (bad) push clc (bad) and retq loopne jbe mov or (bad) loopne cmp js loopne rex.X movslq stos mov loopne rcll (bad) rclb fwait sub jb imul and push insb loopne rex.RB add icebp or cmp and jmpq ds cmp xchg loopne loop mov cwtl loopne,pn rex.WB fnstenv xlat jmp loopne outsb rex.RB fwait pop jmpq loopne lods jg jbe loop loopne movabs (bad) clc adc rolb lods push (bad) ficompl in loop jmpq xchg mov add (bad) add movsb (bad) (bad) loopne sub (bad) (bad) sub adc repz and cmp (bad) loopne pop shr rex.RX mov mov out add mov popfq ss or repz cmp sub (bad) out outsb in jl mov (bad) or (bad) push repnz xlat or add adc loopne mov movsl push fistpll loopne fs adc or loopne lods mov (bad) pop xchg and test mov push je sub stc (bad) and mov movsb or in notb add movabs jno sbbl (bad) and in (bad) sar or addr32 mov movabs (bad) cli cmp movabs adcl jp mov xor jrcxz (bad) hlt jl stos (bad) lcall or repz mov pop movabs xchg mov loope retq mov (bad) jnp pop es or mov fwait movsl loopne imul rex.RX mulb pop out movabs mov mov mov jns iret cmc loopne push dec fcmovne sub (bad) jae (bad) (bad) nop mov ja loopne add (bad) jo cmpsl push (bad) and fisubl movsl cmp in jl jle adc mov rex.WRXB (bad) int and jnp push rex.R cltd loopne cld je mov xchg push loopne shr cmp or sbb stos lret rex.RB jg pop mov pop fcompl jrcxz repz out (bad) popfq and mov pop incl int3 mov and test add jp adc mov sub jne pop mov rex.WR loopne incl cmp mov out out jg or mov subb xor callq mov xchg pushq jmpq in nop stos sti xor and jo adc loopne fs js or loopne pop and (bad) loopne stos add loopne movslq lret xor pop (bad) cmc imul xor push loopne cwtl cmp lret and imul rex.RB loopne icebp std jb (bad) fsub (bad) loop mov loopne cmp pop xchg xchg lahf lods rex.RX rex.RXB xchg fs and jg popfq sbb movsb leaveq stos (bad) js xchg rex.X (bad) addr32 out loopne mov push adc enterq rex.R fldcw pop add jns decb sbb movsl cltd and xchg (bad) add (bad) sti (bad) movabs cmp ss (bad) jge out loopne enterq cli sbb xchg in sub movabs push jae (bad) jns cmpsl push pop nop and mov add popfq or (bad) loopne jp cmp sbb (bad) pop (bad) jmpq fstpl adc (bad) scas test incl and pop and movabs cmp sti and mov test callq lods out test jmp lock stos cmp push and fmul mov lret loopne in outsb ds (bad) and shlb jb lret movabs pop add and cld (bad) jl and jrcxz sub leaveq (bad) movsb loopne push (bad) in (bad) mov adc lahf xor mov shl mov pop callq psubusb jmpq ja iret movabs sub sub rex test rcr enterq mov test xor sbb xor mov sahf xchg (bad) sbb jne (bad) sbb loope (bad) mov test out int3 xchg push (bad) cld loop pushq xchg (bad) xchg mov cmp (bad) lahf test stos (bad) xchg callq fbstp rcrl subl lahf (bad) mov mov mov fadds xchg movslq (bad) (bad) push imul or cmpxchg pushq movabs mov (bad) mov pop enterq and mov test jmp mov (bad) xchg mov mov mov cmp testl (bad) test pop rex.RX sub jp xchg test (bad) loopne setbe add adc lahf js pushfq xor mov enterq popfq cld xchg rex.WXB fwait lret imul jmp enterq pushq jno (bad) mov sub lods adc mov std pop ficompl pop cmp (bad) (bad) (bad) rex.WRB adc (bad) pop cmp out cmc xchg sub int push loope or adc fild (bad) sub xchg add fnsave or (bad) (bad) cld adc lods (bad) xor (bad) (bad) (bad) sti clc lock int3 ds mov sub (bad) test add add jnp movabs (bad) jnp jo add mov (bad) (bad) cmpsl or jrcxz jns out add xor rex.WR insl adc or roll jp xorl xchg mov xor xchg movabs icebp movabs imul rex.WR mov push shrb int3 (bad) xchg in (bad) movabs adc int3 adc sbb rorb cmp rex.WB (bad) lea cld lea xchg add popfq int movsb sar adc and (bad) mov push sub sub xor jge (bad) cwtl mov (bad) sbb ds add movabs add (bad) (bad) (bad) in mov insl adc sbb (bad) fs rex.R addl add insl movabs mov retq cmp int mov fxch pop xor (bad) adc rex.WR rex.WRB ds insb retq stos adc xor rex.RXB movsl (bad) mov out jle rolb push push xor cs insb add (bad) sub stos rolb (bad) add pop push rex.WRB ss cmp int adc rex.WR loop (bad) out pop cmp test add sub push movsb (bad) in (bad) fs rex.XB (bad) mov sub pop mov movabs add pop test add callq add (bad) (bad) cld (bad) mov mov pop fisttpll out cld push (bad) (bad) pushfq xchg (bad) scas mov add jg popfq adc nop (bad) add add or out add jb jno and or pop clc pop cmp out movslq mov or sbb loop mov mov xchg leaveq mov add and mov out int3 out shrl clc repnz jmpq cmc jns (bad) xchg jne push (bad) pop movsl hlt pshufw stos adc xchg lock fwait mov sub (bad) xor (bad) test ffreep xchg pop mov mov fistl (bad) sti xor xchg mov mov insb add sbb push repnz lea icebp cmovae adc jns sub push (bad) (bad) (bad) (bad) sti retq push sub mov scas xor rex.B push cli int (bad) cmp add jle xorb adc jrcxz (bad) lcall adc rex.WRB inc xchg xchg mov (bad) loop test (bad) in (bad) xlat jl (bad) loope jrcxz movsb mull rex.X mov mov (bad) mov callq jne jmpq ja clc imul cmc clc test js add jmpq setge movsbl lea jmpq cmp (bad) xor push pushq cld out push (bad) div out (bad) lret or (bad) test sub rex.RX test xchg cli push sub mov ror sbb pop push lock sub add rex.R rex.RXB rex.R push mov adc je insb (bad) mov movabs rex sub (bad) (bad) (bad) sti (bad) rex.W mov (bad) (bad) (bad) (bad) mov rex.WRX mov mov in lea (bad) jo jge jno rex.R std loope addb jne test (bad) sub pushq mov orl mov add imul (bad) (bad) pushq rex.RX (bad) sub add mov mov jmpq jmpq loop (bad) out push xor or mov adc out push (bad) in (bad) test addr32 or (bad) ds xchg lret cld sub xlat sub rex.WRXB rex.XB repz (bad) (bad) rex.WX rex.R xchg (bad) sbb test in stc in mov cmpsb cmp int3 out (bad) push sub (bad) in movabs pushfq repnz cmpsb (bad) mov fist xchg sub lret movabs and test adc add rex.WX cmp test (bad) outsb push push jle mov cwtl cmp stos mov cmp sti rorb and sbb jno scas std (bad) adc cmp movsb cmp sbb callq jmpq mov cs mov rex fidiv (bad) mov sbb lods ss sub movsl rex.B mov mov (bad) (bad) mov or xor movabs push cmp (bad) hlt (bad) mov mov icebp rex.RB cmp (bad) lods rex.WXB in mov add (bad) out cmp sub mov mov mov jrcxz sti popfq rex.RB pushq rex.WRX cli addr32 add fnop jmp insl int rex.WX rex.WRX mov enterq xlat (bad) (bad) (bad) (bad) mov adc stc cmpsl sti out stos add xchg leaveq insl add add add (bad) cmpsb imul fwait rex.RX movsb adc jle fdivs andl xchg mov cmc jle or adc es mov add lods rol sbb mov mulb or dec lock jmpq push and or (bad) cmp jl cmp mov loop pop sbb movabs iret mov (bad) mov or pop (bad) pop jne push cld adc hlt rorb cs movslq push stc ds and retq movsb testb movabs (bad) xor push and rex.W int3 cmp in in rex.WX stc xor push sbb (bad) (bad) sti in out (bad) xor (bad) (bad) dec insb stc or fwait int push hlt mov (bad) (bad) movsl rex.WXB outsb xchg add add mov add (bad) adc notl lahf ja movslq out movsb mov and enterq jns shll mov pushfq cmp icebp (bad) jg jg add mov in in add movsl mov jno xchg rex.W rex.WRX xor callq or lods rex.X lcall (bad) int3 adc fs mov insb out pop xchg xor add movabs pushfq cmp clc sar in mov pop xor rex.WXB gs rex.B stc out or fmul or (bad) (bad) sti (bad) mov ss (bad) (bad) (bad) jmpq push pushfq mov rex jb imul add imul mov cmc and mov ds rex.R rex.RB push add in or sub or popfq mov adc (bad) xor sub sub rex.WRXB mov in nop pop loop push (bad) and xchg mov sub movabs rex.WXB pop rex.WX (bad) sbb pop mov jg or movabs mov (bad) mov pop fistpll xlat adc or jle lods (bad) xor adc (bad) adc jmpq ljmp mov rex.WXB xor cld mov jl (bad) (bad) (bad) std or lods ficoml (bad) (bad) (bad) std xchg mov (bad) xor sbb movsb in vpsubw fwait and (bad) xor add add or sbb scas push push (bad) mov xchg (bad) mov mov cmp gs test (bad) or mov sub outsb rorb sub cmpsb mov (bad) or fs mov add (bad) xlat xchg lods cwtl add sub mov out adc fcoms rex.RXB rex.WRB movabs in roll cld in cmc (bad) (bad) ja andl (bad) stos movabs stos mov (bad) (bad) std movabs xchg jbe push sbb rex.WXB cltd movabs insl (bad) and jne imul (bad) sbb mov out cmp movabs sti enterq stos (bad) (bad) (bad) (bad) mov rex.WXB (bad) jb outsl (bad) pop insl or rex.RB add add xor imul (bad) cwtl fnstcw fadds pop (bad) lods push (bad) (bad) push neg jb fwait in movslq ja cltd clc push lock and or movabs xor sbb mov out addr32 (bad) (bad) je data16 icebp dec bt inc push xchg movzbl mov shr movsbw sub not movabs setno lea jmpq jne jmpq jne jmpq rclb jo and cmpsl leaveq pushq (bad) or int adc loopne movabs (bad) jmp int3 movabs mov sbb (bad) mov std cwtl xchg lret cs and sub mov xor jne out (bad) mov (bad) rex.XB fwait loop cmp pop decl cmp xchg lods adc nop pop jge pushq (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) (bad) mov (bad) rex.X push insb int int rex.WB (bad) (bad) (bad) jmpq mov cmp adc ss rex.B push callq (bad) movabs jne mov (bad) sub cmp es rex.R adcl and (bad) and jmpq loopne lock jg (bad) mov iret fmulp callq ror rex.WX and add clc sahf push iret jle rex.WRXB jo iret (bad) out insb (bad) (bad) jbe add lret bnd iret (bad) test callq callq xor insb iret insb shr mov iret in fucomip pop clc ror cmc retq (bad) test iret fwait leaveq (bad) divl callq sbb es rex.WRXB out mov lods mov (bad) (bad) mov iret retq lret callq and or adc shr fsubrl add fs shr adc imulb rex.WRB clc callq mull ja in mov shr push (bad) sbb js callq sub callq mull addr32 fnstenv js adc mov sub pushq xor jo iret fcmovbe callq (bad) (bad) out movsb clc callq movabs retq out (bad) mull movsb rex.XB cmp in push iret ss and callq mov clc callq fdivr addr32 clc vcmpps repz repnz rex.W iret rex.WXB in push iret (bad) (bad) movsb mov mov sahf addr32 mov movabs rex.WR lock mov in callq clc callq movsb clc callq rex.WR addr32 clc retq out insb clc callq insb test lock callq clc iret callq mov (bad) mov callq lret sub shrb mov adc rex.WRXB rex.B cmpsl int push iret cmp out test iret add xchg in hlt iret iret mov (bad) out (bad) (bad) and fstpt movabs jae in loop add mov sub add shlb movabs lods retq iret pushfq mov sub add movabs (bad) nop iret movslq out cwtl lods callq clc callq fdivp xor jmp mov callq test (bad) rex.RXB (bad) out movsb jl callq jae callq or lock and sub nop rex.WRXB rex gs rex.W lods callq test insb nop iret ja out add callq pop mov out divl cmp push add add jne sub xor test add leaveq sahf rex.R adc mov in nop (bad) rex.RXB push (bad) (bad) mov insb adc adc sahf iret cli test mov in callq clc callq movsb clc callq pushfq jle callq clc callq pop clc callq mull movabs rex.W iret (bad) test xor push (bad) mov pop mov iret (bad) mov pop jo add sbb (bad) addr32 out cwtl callq and (bad) and (bad) iret xchg in rex.WRXB lock xchg (bad) adcb mov (bad) and mov (bad) fcoms callq add jg xchg ja insb mull rex.B push callq (bad) xor lock fdivp shlb mov out clc lods callq clc callq movsb clc callq clc iret callq test add iret jg or mov in movsb (bad) mov andb pop rex.WRX repnz iret mov out pop es pop clc callq clc callq clc addr32 mull mov out shlb push sarb ja lock movabs ja out pushq xchg (bad) mov nop iret (bad) addr32 mov (bad) out clc lods callq testl data16 push (bad) lock iret (bad) out movsb callq pop clc callq jo clc callq not movabs ja out pop clc callq clc addr32 pushq data16 outsl iret push cmp callq iret fisttp mov fiadd test (bad) jnp (bad) pop rex add stos jne mov callq cmpsl adc xor fs (bad) (bad) retq and callq clc addr32 jo callq movsb shr rex.XB clc notl (bad) jae mov fs ss insb scas testl or jae cmc in js and shr movabs add clc callq fdivp nop movsb pop push sub and jnp jl enterq iret je xlat pop cmpsl xchg iret data16 mov or in (bad) lret iret rex.RB scas mov notl cmp iretw stos rex.XB divl or iret rex.RXB rex.X clc push iret in rex.W push movabs add rex.WR (bad) xor (bad) rex.WRX (bad) iret cli rex.WRB rex.X jl mov xchg sub rex cmc callq mull rex.RB push (bad) iret cmp mov add rex.WX jo rex.XB fcmove xor rex.X (bad) lock xchg mov iret mov in (bad) addr32 rex.RX (bad) test jp (bad) callq iret sub stos pop callq callq outsb rex.XB fidivr and mov scas clc movabs rex callq (bad) in callq notl insb outsl addb (bad) mov jb and mov and cltd and sbb rex.B iret (bad) (bad) sarb sub insb js ror fs cmp add lret outsb int3 iret test jp mov lea or iret xor imul je addr32 xchg sub and mov or mov (bad) ror out je (bad) jo jne callq rex.B callq clc addr32 callq clc movsb callq popfq cmpsl js push imull in rex.WR cmpsl addr32 test xchg lahf notl icebp jp callq test shr in int3 push clc lods callq clc callq fdivp shrb add int3 movb pop fs addr32 rex.WB int3 mov push and mov rex.WRX int3 iret (bad) stos add iret adc xchg rex (bad) sub outsb out test add rorl cwtl js iret xchg or cmpsl (bad) (bad) insb iret jge callq insl iret adc sub iret stos xchg outsb (bad) rcl mov jne out subb callq (bad) pop clc callq clc addr32 divl lret adc and in or jb clc pushq subb iret (bad) mov cwtl pushfq insl cmc iret icebp (bad) stos movabs rex.XB mov movslq js rex push sbb push (bad) and mov pop int3 callq (bad) in (bad) enterq addr32 clc retq out sbb callq divl pushq rex.WXB (bad) iret xor mov callq movabs int3 shrb in je push push insb iret mov pop fs mov jne je (bad) (bad) callq (bad) iret shl outsb ja movabs mov mov clc callq pop clc callq clc addr32 divl iret movslq test jo iret sub callq iret lea callq (bad) in (bad) callq int3 out sub shrb rex.RXB rex.WR jbe add (bad) sub callq hlt (bad) and (bad) icebp callq and lahf lock and cs callq iret test out jne adc iret cmp and (bad) add cs hlt callq clc bnd iret pop stc (bad) xchg lahf push and rex.R mov ror idivb (bad) and callq data16 cli callq iret sub nop callq mov jbe in (bad) vpsubsb imul xor movabs iret (bad) mov callq iret mov mov (bad) test callq iret scas cs (bad) cmpsl and std (bad) mov callq movsb sub callq movsb div iret (bad) lods out cwtl addr32 clc (bad) rcl callq xor mov clc callq fdivp adc cmp shrb add push fadds rex.W and rcr jne sbb (bad) repz cmp add jle rex.WXB sbb rex.R callq (bad) in callq testl iret (bad) movsl je xchg rex.RXB iret imul (bad) (bad) jo test (bad) xor jg rex.B mov clc nop out (bad) (bad) mov rex.XB jo callq clc cmc callq imull (bad) movabs callq mull repz callq iret xor sub sahf add mov jbe cmp iret out jo jo callq clc cmc callq clc lods callq clc callq fdivp andb stos lea out fdivp movabs shl jge callq psubb (bad) movabs push testl (bad) adc test lock adc lock mov in sahf iret (bad) mov in jo iret lret movabs and mov xchg callq sbb retq rex insb or sub test mov in rex.X iret (bad) add mov test iret mov imul mov lock pushq and or iret jp and out clc callq jo clc callq pushfq pop clc callq clc addr32 clc retq out lods divl or iret repz je lods rex.W sub adc retq pushfq and iret andl rcr jo (bad) cmpsl xchg loop (bad) test outsl xchg (bad) iret lret rclb and iret scas (bad) mov jg addb iret addr32 fadds iret int3 shll jns xor lock lods imul rex.WX int ficompl nop (bad) (bad) add and enterq repnz imul mov fcomp notl push (bad) jbe mov callq mov in mov cld (bad) pop add iret mov nop iret xor rex.RX callq sub callq clc pushq fnop leaveq callq push iret (bad) lret jbe sub ror rex.XB clc (bad) iret cli shll xor callw sub iret rex.W imul push cmpsl pop iret int3 pop jl div (bad) iret pop rex.R pop retq movsb addr32 in (bad) fdiv rex.B cs push rex.W iret fwait out movsb jo add out clc iret callq outsb callq je test jno callq sub and adc iret callq pop clc callq mull jle callq pushq callq or (bad) or out movabs divl push in jo out shrb fs (bad) testl nop rex.WX lock add fsubrp hlt push lods rolb fxch out clc cmc callq divl callq or movabs rex.WRB xor in callq clc callq nop mull xchg insb xor or cmpsl mov callq movabs ficompl lahf mull rex.W (bad) adc mov insl callq cmpsl test rex in sub xchg and setl mov (bad) mov retq (bad) pushq xchg push callq (bad) or in (bad) (bad) (bad) lock sub xchg mov xor pop cmp callq movabs callq divl add cmp mov in movabs callq notl xor callq rex out pop clc callq clc addr32 pushq fs callq movsb clc callq shlb mov cmp retq out sub callq rex.WRXB mov xor popfq or insb mov (bad) loop testl ja out pop clc callq pop mov out clc movabs rorl push clc sub movabs xchg adc cmp iret push nop out shr repnz test jle callq mull insb nop iret (bad) mov (bad) in sbb iret sbb out andb shr jp and clc callq movsb clc callq rex callq mov out psubsb in callq cs test callq pop clc callq clc addr32 imull rex.R notl mov adc jl cmp clc callq clc pushq fnop retq out rex.R callq rex.WRXB fiadd mov clc retq out lods testl cmc mov rex.W ror out callq iret fldln2 (bad) ja movabs insb iret sub or nop callq test callq iret nop cmpsl (bad) jo sarl (bad) xor add (bad) rex.WRX callq iret add out rex.RB callq clc addr32 notl je lahf ror adc repz rex.R idivl (bad) in callq clc callq mov jg or hlt notl iret adc in lods test test jb add cld push xor xor insb adc std test (bad) rex.W lock movsb sub sub push clc cmc callq adc iret fcmovb mov xchg xchg out clc retq out nop divl movsb rex.W sub mov sub leaveq fisubr pop jae insb xor adc out test and jo callq ja out pop clc callq clc mov add (bad) iret out retq callq rex clc iret callq shrb xor (bad) iret mov iret cmp mov testl test rex.WRXB pushfq fs (bad) insb iret push out xor mov adc cli lret test shlb mov je in test callq xchg and jmp (bad) (bad) iret lret xchg (bad) xor jg fsubrl (bad) cmpsl sbb (bad) mov (bad) cs iret mov jmpq movabs (bad) pop iret xor repnz xchg shrl iret jle jne (bad) mov iret es (bad) cmp mov add iret sub callq iret rex.WRX movabs (bad) lods fdivrl (bad) jrcxz xchg xor iret (bad) (bad) cmpsl sahf js stos fimull mov iret (bad) int (bad) mov jne rex.WRXB cmpsl movabs and shlb mov or (bad) cmpsl fdivr callq callq or (bad) repnz (bad) lahf mov iret rex.WRX (bad) mov out rex.WRXB sbb (bad) mov adc out cmpsl sbb iret cmpsb test insl iret mov xor rex.XB insb iretq outsb mov rex.WR iret jg xor test lods lret callq iret sub iret (bad) std mov cld iret stos add and xchg (bad) cmpsl and cmp iret ss mov sbbb (bad) rex.RXB int3 cs lea callq xor fsubrp xchg mov sbb (bad) adc callq (bad) xchg (bad) iret mov mov pushfq outsb push jo test (bad) rex.WR enterq lods or adc in rex.W mov (bad) rex.WRXB jge (bad) out (bad) movsb add add insb sbb and and sbb clc test (bad) fadds (bad) sahf iret adc iret rorb xchg xor (bad) (bad) rex.WRX (bad) callq mov movabs movsl out retq sub movsb iret rex.XB rex.WRXB and mov and (bad) movabs cmp mov lods xchg (bad) or xor lock out outsb rex.X (bad) or je (bad) ja mov sbb rex.WR incb cwtl rex.WRX loopne movsb iret sti xchg outsb (bad) sub ror or callq xchg rex (bad) sbb jle pop loop iret out fs jo mov callq in iret imul (bad) insb lock js shrb callq xor iret jmp js lock retq movabs mov pop fisubr add in rex.R (bad) data16 mov iret jg insb callq iret or jl iret (bad) imul pushq push cmpsl sahf cwtl iret mov movsb sub ss sub cmp fisttp pop (bad) je (bad) in sub in pushfq (bad) jge scas iret rex rex.RB (bad) xchg rex.W iret pushq ficoml (bad) (bad) push iret cmc rex.XB hlt es movabs xchg pushq adc or cmpsl rex.RXB cmc lods fcmove jno test jo sahf rex.WR rolb int idivl iret sbb (bad) jle incb callq adc movabs (bad) iret jl push movsb clc callq insb fmul fiadd mov iret mov (bad) xchg (bad) ja rex.R rex.WRXB push fisubr test divl test rex.WRXB add add rclb jl insb iret mov (bad) mov and cwtl iret (bad) and sbb lods (bad) sbb shll rcl iret es and shr sub (bad) iret sub and iret pop (bad) rex.WRX (bad) fadd callq shr sbb mull out js sub mov or sub movsb xor jns jo js sbb retq sbb lret lods js adc cmp adc movabs add fdivl add cmpsl rex.R xchg cmp sub iret (bad) test callq iret mov jl divl mov and iret scas or jo push and stos or mov and callq nop clc iret callq shlb iret add callq rcrw and iret int3 callq movabs iret pushfq cmp clc add movabs (bad) callq pop je insb pop iret adc movsb adc add (bad) jg rex.R callq test in testl sti loope callq (bad) push out clc pushq callq iret rex.WX iret (bad) test test callq push rorb fs insb iret cltd in callq iret iret pushfq jmp pushfq movabs ja and rex.WR rex.WRXB and add (bad) and xchg test cld (bad) add fcomip mov testl movsb (bad) hlt callq jne in je (bad) rep sbb (bad) bnd (bad) (bad) (bad) iret jae callq iret cmpsb clc sub pushq mov jb clc addr32 cmp iret rex.WRB in movabs iret xchg outsb scas push in cli sti add cld (bad) xor je clc jo not cli callq iret pop jb in retq sbb rex.R test hlt (bad) nop fcmove and scas ffreep fcom push iret cmp cmp (bad) mov clc (bad) xor or (bad) hlt iret enterq movsb iret jl (bad) callq inc (bad) cwtl lock in movabs jae (bad) iret imul jo iret and sub je clc sub faddp and iret pushfq movabs cwtl and (bad) leaveq callq iret pushfq mov rex.RX out and iret out enterq iret mov (bad) iret cmp rex imull js iret (bad) out (bad) js iret rol rex.R mov iret jae clc movabs iret loop rex.WRXB callq cwtl pop callq sahf xor movabs cwtl movabs cld (bad) iret repnz ja clc iret test rolb shr xor callq sbb rcl movabs sub lock sub fnop cmpsl in in pushq (bad) callq leaveq xor iret (bad) cmp lods movabs pmullw test xor fcmovnbe rex.R js callq rex.R rex.WRXB fdiv movabs cwtl insl in (bad) (bad) iret sub stos shrb push fldenv mov clc and movabs sbb hlt iret add clc insb adc (bad) mov adc sar iret (bad) cltd movabs rex (bad) (bad) mov iret callq rex.B cs mov xchg (bad) out lahf (bad) (bad) iret push clc rex.WRXB jnp fisubr movabs cs xor or (bad) movabs cwtl fsubrp mov callq notl jg rex.WR jo in test callq mov callq fdivp (bad) movabs in clc cmc callq test iret (bad) cmpsb (bad) (bad) iret (bad) in rex.WRXB pushq fisub callq (bad) in callq clc callq sub xchg iret (bad) stos in movabs (bad) callq clc addr32 cmpsl push iretw jo (bad) test imull out pop clc callq clc (bad) div iret cli (bad) out clc movsb callq sub callq mull sbb iret fidiv mov xchg and clc scas iret emms in add movabs out psubb (bad) add jl notl shrb callq clc retq out sbb lret in cmc callq fs iret test xchg fs retq lods and (bad) ror callq jo callq divl rex.W iret add add (bad) mov pop int scas iret rex.WRB movsb sub sub jl iret callq fs retq out xchg clc callq rex.WRXB repnz mov sbb cmpl adc mov (bad) rex xor out shlb sub callq mull mov shl xchg (bad) callq clc addr32 clc retq out idivq test mov callq iret cli mov rex.WRX rex.X movabs iret and jae (bad) (bad) out movsb test lods (bad) mov cmp addr32 clc retq out pop rorb xchg ror sahf jne notl callq sub lods mov ja mov adc xor (bad) sub pushq and (bad) in callq testl jl jno jbe jb jl rex loop jo xchg movabs jo out clc movabs sub mov insb cmpsl popfq sub shr ja out movabs callq (bad) in callq testl rex.WR movabs hlt (bad) or (bad) (bad) out fdivp movabs stos pop jo mov push out test callq sub jo js clc callq divl clc xchg jae (bad) pop out movsb test fwait cmpsl jle pushfq jle callq clc callq rex.WRXB xchg (bad) callq mov stc callq sub callq clc addr32 notl iret add lock mov xorb pop jae insb and sbb out ror callq outsb callq rex rex.WRXB test callq mov rol xchg jg imul (bad) (bad) ja insb in (bad) out andb enterq sub clc rex.WRXB lock jo pushq rex.WRB lock fdivp andb ja mov callq fdivp and imul lods in add iret callq stos jge rcrb out movabs callq int3 clc cmc callq not (bad) fwait test rex pop mov out divl rex push clc retq test movsb rcrl lock movabs je out testl lock movsb clc callq outsb callq cld pop clc callq mull in callq clc callq fdivp and mov callq (bad) in callq mull add js rex.XB enterq out xchg jae repz rex.X xchg jg out je cmp (bad) iret sbb mov test fild pushq sub lock pushq cmc and iret movntq callq rex.B callq pop mov out clc lods callq notl popfq rex.WXB or ja push out pop shr (bad) rex.WB rex.WX in callq mov iret adc pop callq add callq fdivp (bad) movsb pop xchg data16 movslq mov out out div (bad) jp (bad) rex.WRXB rex fisubrl mov mov iret push push jb sub pop sub adc jbe xor (bad) push (bad) callq push out psubb cmc fcompl hlt mov iret xchg pop mov jbe in popfq pop shr pushfq (bad) callq pop mov out clc lods callq rex.WRXB iret fdivrl out outsb jge xchg iret mov clc (bad) lock add (bad) add callq iret sub sbb mov jg (bad) mov (bad) callq (bad) (bad) nop iret movslq push hlt cs rex pop enterq iret cmp in cmp gs loop xchg sahf fs in (bad) lods push (bad) imul iret rex.WXB xor incl insl iret lret add and ror xchg es xchg iret mov in fimul loop cmp callq cwtl pushq (bad) pushq cmp int3 iret sbb (bad) movabs mov enterq stc iret retq int3 imull clc mov fisttpll fdivr iret stos or (bad) cmpsl mov mov mov testl lods callq loop sub jo rex.WRX in callq (bad) mov iret outsl es adc lret mov rex.WR repnz stos sbb pop out js pop iret movabs jl xor and je pushfq (bad) rex.R lock mov js iret jg rex.R mov (bad) mov js iret (bad) ljmp int3 iret (bad) (bad) pop fincstp (bad) iret add callq jno jmpq rex out callq js rex.W callq (bad) outsb mov xchg (bad) in sub (bad) cmpsl nop and sahf in callq iret or es (bad) pushq iret lods icebp (bad) mov scas iret (bad) lock mov mov out jge sub sbb clc stos callq jo iret rex.B repz iret fdiv (bad) callq jmpq imul iret (bad) xor iret ror sub sbb fsubs iret (bad) fldcw iret xor (bad) rex.RXB iretw loope sub mull lock imull cwtl test mov sub jrcxz adc in sbb clc fsubrl jrcxz cs in out lods in mov hlt out in xor (bad) jo rex callq callq pushq callq callq (bad) mov (bad) jrcxz jge in out push in mov hlt (bad) in xor (bad) or out in div iret cs in (bad) callq callq (bad) outsb movsb rex.W movabs callq callq js (bad) out fwait (bad) mov sbb sarb (bad) rex.RXB icebp mov sahf fucom and cmp fisubl nop sub rex.RX pop xchg ja shl xchg and xchg mov in nop movabs iret or cmp shlb rex (bad) sub scas iret shrb iret or test adc lods test xor (bad) iret mov adc rex.WRB (bad) (bad) iret xor rex.R retq out rorb in cmpsl cmpsl mov iret int3 lods in movabs addr32 mov movabs (bad) iret rex.RB movsb push push and shrb xchg (bad) test push es add sahf shrb add test mov cmpsl cmpsb in movsb mov out add test (bad) callq sub hlt test sub movabs clc lock (bad) in sub rex.WRXB (bad) xchg in rex.WRXB fmull mov pushq xchg jl decl cld lock xchg bnd mov bswap movsbw lea pop movsbq pop movzbw xchg lea pop not bswap movsbw bswap pop jmpq jne clc cmc cmc clc movb stc cmp cmc test jmpq jmpq jmpq movabs shlb ja add scas in fadds stc stos mov pop cld es (bad) rex.RB movsl push xchg (bad) (bad) jbe fnsave push rex.WRX movsl fs or sbb cmc jae (bad) mov fs mov cltd iret adc and jbe add adc sbb out rex.WRX rex.WB movslq test add (bad) add callq or add shl rex.WRX int3 cmpsl std fistp or subl lea mov loop paddusw mov movabs (bad) (bad) rex.WRB mov xchg sti xchg (bad) cmp lea xchg fldl sub cmpsb mov out mov jp out movabs rex.WRB clc test jmpq jne shl sub dec not add xor mov adc add cmc mov cmc stc test jmpq stos add rcll sbb pop mov add mov movsb xor test fnop mov divb pop (bad) jle rex.W jns je pop andb je retq (bad) (bad) jo cmpsl rex.X rclb je mov xor std rex.WRXB jno xor jb test cmp mov mov hlt jmpq sbb mov jmp xchg (bad) (bad) (bad) sti mov pop rex.WRX (bad) (bad) decb in rex add insl mov stos lret and (bad) or mov lea imul xor (bad) (bad) and (bad) nop in push (bad) imul pop jnp adc scas mov rex.WRX mov push (bad) (bad) (bad) mov add mov retq lods hlt in (bad) pushfq (bad) or loopne enterq (bad) ss sub push (bad) ja movabs rex.B rex.X jb rex.WX xor xchg mov or cmpsb jbe adc hlt push out mov mov fs sahf cwtl es (bad) (bad) (bad) cld jp (bad) jmp (bad) (bad) (bad) jmpq mov xchg gs cmp add add (bad) imul and or pop jns rex.WXB outsb sahf cli mov jno mov cs mov rex.XB lret movslq sbb xchg cli add mov xchg sub sbb test jmp int3 imul jne jmpq data16 out or (bad) mov jbe adc (bad) push mov js imul (bad) pop test retq mov test stos pushfq mov xor mov (bad) (bad) and jno cs callq pushq iret sti std cmc cmp mov xchg repnz xchg jnp mov (bad) rex.RB std xlat rex.RXB xlat rex.XB mov xchg (bad) (bad) (bad) sti mov negl (bad) movabs lret test pop push adc (bad) movabs lahf or pop insb adc rex.WX jmp mov rex.RX push xchg sbb andl in sbb mov mov (bad) scas mov push rex.R (bad) sti mov pop test cmc repnz jno jne clc btr dec inc mov shld sub shrd rol clc or mov clc test sub clc stc cmc cmp pushq jmpq jmpq xor xchg leaveq sti jb and jno rex.B mov jmp jp rclb movsl out lea movabs ficompl and (bad) rex.WB lods pushfq mov mov (bad) imul add pop lock cmp (bad) xor (bad) loope (bad) loop mov (bad) (bad) (bad) cli movsb pop icebp cwtl mov (bad) pop jne (bad) rex.WRX (bad) cmp mov (bad) sti adc or movabs fcoml push outsb or add push sbb jg hlt (bad) idiv repnz pop (bad) and rex.R fldl and xchg and xor fisttpll pop (bad) fstps (bad) in repnz jns xchg xchg (bad) repnz rex.RXB (bad) fldt jno push xchg imul add popfq movabs pushfq iret (bad) (bad) (bad) (bad) xchg jge (bad) xor sbb fisttpll popfq fstl sub add (bad) jae mov and jmpq mov movsl js (bad) add push rex.WR (bad) mov add fdivs insb outsb or rex.WB (bad) cli (bad) (bad) pushq xor (bad) adc and rclb mov adc mov stc jmpq cmp cmc test cmp sub jmpq jne stc sub jmpq (bad) cmp in test (bad) jo rex.X sub sub retq mov notb movslq adc mov fs xor sbb xor xchg mov mov and cmp bsf mov rex.RB xchg sahf (bad) movabs jp jrcxz sub icebp test ja movslq out (bad) (bad) or (bad) (bad) sti popfq push mov jns (bad) (bad) decb lea sbb out add add or mov and fs movabs add gs cmp add xor insl cmp and decl rex.WX sahf cli sub out jmpq clc clc test stc xchg jmpq jmp fsubrl popfq loope xchg (bad) (bad) imul (bad) sub mov nop adcl xor cmpsb sbb jg cmpsb mov or push add clc xor data16 (bad) shrl or (bad) cmp jnp cmpsl mov loope cmp ss jge and outsl nop jmpq ror data16 mov jnp (bad) (bad) (bad) cld movntps pop (bad) (bad) (bad) (bad) cli pop sbb (bad) xor adc pop fistl jmpq add jno xor fadd movsl (bad) jrcxz jo loope (bad) adc shlb (bad) negl movabs out (bad) (bad) pop psraw xor ds mov and xchg in movabs rex.WX iret addr32 imul (bad) or ljmp (bad) xchg movabs mov add mov jno cli (bad) insb push pushfq cmpsl (bad) notl mov rex.RXB or mov sub pushq adc mov cmc (bad) jp or push (bad) retq pop xchg addl insl leaveq data16 loop jl xchg (bad) movabs xor outsb push stos (bad) (bad) (bad) cld adc (bad) cmp (bad) (bad) (bad) (bad) std xor xor (bad) ds or mov push (bad) popfq fstl sub loopne pop add add add sub rex.R insb push cmpsb negb or mov and scas mov pop hlt movabs pushfq shrb push adc sbb xchg xchg xchg mov pop push hlt sbb test and jo fdivrl repnz mov rex.RB lock jmpq rex.WRXB and and gs sub loopne and add (bad) (bad) xchg rorl (bad) in mov (bad) in leaveq callq xchg retq adc cwtl xor es jno (bad) cmpsb movabs mov int mov sub shr fisttpll (bad) outsl add xchg fwait lods int3 (bad) (bad) and loope ja (bad) (bad) (bad) sti pop xchg push (bad) sub (bad) (bad) incb mov (bad) mov lret pcmpgtb jp lea (bad) (bad) (bad) inc mov pop xor (bad) jl orl rex.WX pop stc leaveq fs addr32 (bad) fisubr pop cmp xor fidivl lods mov xor adc sbb (bad) xor (bad) jmpq stc test jmpq jne cmp rcr and or xor rcl sbb mov dec ror clc add cmc mov cmp test clc bt test jmpq jmpq icebp xchg add out roll iret cmpsl test out cmc std push jmp rex.WRXB rex.WX add push sarb or sbb in xchg cmp xchg loope in int add lods sbb pop mov shl loop loop fs subl rorl sbb (bad) rex.RX lret sbb pop rex.WR xchg std lahf mov fimull cltd (bad) (bad) (bad) sti rex.WRX rex.X rex.WR (bad) (bad) (bad) (bad) cmp jmp mov mov sarb scas iret (bad) (bad) (bad) (bad) (bad) mov cmp mov xor xor rex.WRXB sbb adc (bad) outsl rex.B mov xchg test std movabs cwtl iret (bad) (bad) mov mov pushfq mov mov (bad) xchg test push lea jp mov lea setae setl setnp mov movzbl mov setns jmpq or lahf (bad) out (bad) pop rex.W rex and jrcxz out rcrl adc sub lea mov btr movabs adc (bad) in adc and lret pop loop (bad) xlat js (bad) (bad) rex.RB enterq rex.R outsb sti lock rex.WR (bad) mov ds (bad) push or outsb rolb lods xor sti xor jo cmp xor or push clc test (bad) lcall packsswb push xor cmpsl mov jg rex.XB outsb add or xchg fsts xchg jg cmp imul or mov rex.WXB notl pushfq (bad) (bad) jl cmp push or jne add add or cld push mov xlat lea ss pushq cmp in shrb test sub icebp movabs jmpq (bad) pushq (bad) pop rex.WRXB jns sub (bad) mov pop push or xchg jo (bad) xlat or push jmpq cmc pop xor rex.WB mov movslq movabs cmc fmuls adc (bad) xchg rex.W movabs lods adc retq or adc decb (bad) (bad) (bad) ljmp (bad) (bad) loop rcrb xor pop stos sti push rex.RB imul iret insb sub lcall adc insb fdivr js xor jb jp lea mov lahf cmp add lahf int retq jle mov mov and xor sub fsubr pop xlat lock jp or pushfq lods (bad) mov push xor repnz imul andl data16 mov iret scas and movzwl (bad) loope push out and sti movabs movabs mov gs xor sahf clc in rex.WX (bad) in fcmovb adc xor jl push vmovntps lea rex.WRXB sub jle (bad) (bad) cld add scas xchg (bad) (bad) (bad) (bad) in rex.WX divl lods cmpsb (bad) movabs add insb pop (bad) push sbb sub mov rex.WX and xchg fisubr sub sbb rex.WB jmpq mov sbb jo mov sub mov fsubrl xor and imul jne movabs std cld loopne scas test sbb mov stc mov fs jnp and or pop rcrl cwtl xchg lret or rex.WRB mov lods popfq orl shr (bad) retq in iret in int3 out or (bad) or jbe callq and pushfq (bad) add loope cmpl retq in sub jo xor sub pop adc mov fisttpl cwtl sub mov sub vpmacsdqh test lahf fwait cs mov cli fcoms (bad) (bad) (bad) sti es (bad) (bad) (bad) adc xchg cld sti lods mov mov mov in (bad) (bad) (bad) callq pop xchg (bad) rex.WRX addr32 pop sbb loopne in (bad) rex.WX adcl rex.RXB adc jg pop sbb sti fwait sub sbb in jns in sbb movabs adc fucomip cltd cs pushfq rex.WXB add jrcxz xor fmuls push lods push sbb stos (bad) mov (bad) cmc cmpsl imul rex.XB movabs mov mov pop sub mov cld (bad) insb int mov mov lret cmp outsb rex.X repz xchg jne pop fcomip add (bad) (bad) (bad) mov pop movabs rex.WX adc mov sub rex.RX rex.WXB in cwtl mov cmp (bad) adc rex.WRX gs cmp sahf pop icebp mov and sbb (bad) js mov jp rol mov and mov gs outsl fs imul add xchg idiv (bad) stc imul cmc add jmpq cmp pop (bad) movabs mov push mov sti (bad) lahf test or gs repnz push xchg xchg sti rex.WXB rcrl lods stos lods mov insl jrcxz jne and nop and pushq xchg movabs sub mov add imul (bad) (bad) (bad) adc sar mov popq mov (bad) (bad) (bad) (bad) sti jbe xlat roll in and adc (bad) movsl mov jnp (bad) (bad) (bad) jmpq rcrl scas adc roll rex.WXB adc icebp (bad) shlb lock ds xchg mov mov movabs fdivl rex.RX ffreep (bad) in rex.R rex.WRB and mov movabs sbb (bad) out (bad) sub out fldenv adc and mov sub loopne (bad) rex.WXB lock mov test sar mov jle rex.W rex.W xor lret sub mov xor sbb and adc (bad) mov es lods jno sub cmpsb and rex.B adc and lods sbbb (bad) jle add gs rex.WRXB rex.WRXB and mov sbb (bad) (bad) (bad) (bad) sahf rex.WRB mov rex.XB add (bad) rex.WB sub add add cmp pop adc stos retq cmpsl or (bad) (bad) int mov xchg or cmp callq sarl rex.RX (bad) pushq lods cs int jo rex.WXB mov xchg gs and int3 add out push xor xchg sbb fild es hlt in sub stos (bad) jmp xchg rex.X test repnz sbb lods jle stc xchg mov adc rex.WX imul mov subl out push cmp jae lods mov add (bad) callq rex.WXB add adc iret imul xorl leaveq and add ds out repz es xchg in js xor rex.R and enterq sub add je mov cmp push mov jl adc lods mov sbb ja (bad) (bad) cmpsb sub loopne jrcxz push mov cmc jmpq movabs (bad) mov jp mov stc (bad) lahf push adc std movabs mov xor jnp rex.WRX rep addb jno xor callq enterq mov xchg sbb movabs popfq (bad) jge xor rex.WRXB xor ss rex.WB push push push pop lea adc ss (bad) fisubr or rex imul (bad) cmpsl push rex.WRB xor pushq cmp sahf (bad) std idivb sub (bad) ja xchg mulb mov cwtl pushq (bad) fst mov rex.WRB movabs callq fidivl fidivr add sahf orl pushq enterq rex.RB scas std movslq cmpl sbbl jmp adc cmp addl out outsb orl pushfq enterq rex.WXB cmp cmp stos out sbbl (bad) data16 popq (bad) xor xor mov and (bad) xor neg fucomp push push mov (bad) (bad) rex.WRB in movabs jg mov mov xchg or mov (bad) cmp (bad) xor mov sahf rex.WRXB gs xor repz (bad) jne cwtl (bad) xor or xor and fs cmc cmp jp ja shl shr sets add neg add bt je sbb xchg cmc bts mov (bad) repz pushq sbb (bad) cmp jmpq stc movb cmp test jmpq mov and mov insl rex.WR add mov jo scas add cwtl cmpsb scas sub movabs lods fdiv cmp pop adc and fistl cmpsb (bad) jp int loope and scas rex or test jo (bad) cmpsl ror xor rex.R cmc jl lret ja xchg or (bad) sti (bad) (bad) enterq (bad) (bad) inc cld sahf jno clc jle adc imul jns push mov mov rex.WB popfq rex.XB add add imul sbb (bad) jl xor jae (bad) pop out lods (bad) mov and (bad) notb jmpq sbb sub gs pushq cmp and fs sbb xchg lock test lock decl mov cmp movb test test jmpq xchg clc notl lahf pushq xchg (bad) rcrl adc jle mov sub icebp icebp loope movsb or and jp int rex.WXB (bad) xor in jp add add mov addr32 adc xor lods test (bad) sti and retq push vcvtss2sd jrcxz xchg je jrcxz adc sbb pop nop pop in fnop push pop mov pop jle hlt jmpq (bad) (bad) (bad) (bad) pushq sti loope (bad) add (bad) xchg cmp (bad) (bad) callq xchg rex.WX movabs mov rex.RX mov adc jo insl and (bad) enterq xlat (bad) mov retq rex.R sarb and and xchg and repnz adc movabs adc stos pop or sub xor std out in sahf push lahf sbb (bad) imul scas mov (bad) movslq out movabs cmp retq mov (bad) push ds sub adc out xchg rex.XB xchg rex.WRX repz rcl jge jrcxz (bad) in or push and (bad) (bad) cld in (bad) jbe (bad) (bad) (bad) callq and ss movabs jp sti (bad) loope xor xor (bad) (bad) pop adc (bad) paddusb and jb cs cwtl jbe mov sti xlat rex.WB pushq mov add (bad) fstpt push push rex.WB xchg out (bad) fs rex.R pop enterq xor retq rex.X cmpsl int3 add data16 jbe ja (bad) test mov and leaveq loopne rex.XB jmpq add hlt popfq mov pop test insb cmp rex.WX (bad) mov leaveq int xor jg pushq jns test or push pop pop or mov sub sub cmp adc fildll or push sub push jge int3 or mov sahf (bad) xchg (bad) xchg test rcrl fxch (bad) repz cmp std rex.WX (bad) rcl (bad) push cmp (bad) (bad) (bad) sti imul rex.WB (bad) (bad) (bad) (bad) push shrl cmp fisttp xor (bad) rorb (bad) lods (bad) (bad) (bad) callq fdivp or add iret xor lret (bad) popfq not test test (bad) insb stc in rex.R rex.RX (bad) in or fistpll addr32 (bad) xchg cld fcoms rex.WX xorl cmp rex.R in mov push pop add rex.R mov mov leaveq (bad) shl fidivrl mov cmp cmp rex.WR out add sbb sub ja sub and enterq mov notl (bad) rex.WR mov cmp (bad) scas out test xor rex.WRX pop rex.RXB and fidiv outsl stos (bad) add xor push xchg xchg rex.RXB (bad) cmp js adc pop out test (bad) mov movsb mov (bad) mov jle jne cmp (bad) mov je test ja rex.XB repz rcl fimull jl scas push insb pop add rex.R iret and sti xchg rex.XB lret mov mov adc (bad) or xchg out (bad) cmpsl rex.RB pop (bad) (bad) (bad) sti stos decl xchg jb jrcxz rex.WX rex.XB leaveq stos popfq add add (bad) adc fisub cmpsl insl mov pop lret js xchg mov push in jo add rex.WRX rex.WR test xor push retq xchg or test sub (bad) outsl mov sub stc cmc test jmpq pop (bad) (bad) cli xchg pushq mov or gs iret sub rol pop in xchg jno or sbb push push xchg retq nop adc (bad) fdivrp and sbb sbb test jle cmp (bad) mov rex.RX xchg jrcxz xchg lret add movsb (bad) adc and (bad) (bad) (bad) cli icebp ja stc rex.WRB (bad) (bad) std fsubl rex.RX sti (bad) vmovaps fcmovne hlt (bad) pop (bad) lret adc movsl enterq repz sbb adc mov scas pushfq adc (bad) pushq mov test jmpq (bad) loope adc pop xchg jno (bad) jb movslq pop (bad) test pop push repz add rex.R fstl push or (bad) cmpsl mov cs or cli in hlt pop or mov sbb or pushfq rex.XB rcr or lea mov (bad) movabs push xor pushq or scas (bad) mov add adc mov loope test (bad) cmp mov cld (bad) mov (bad) (bad) (bad) jmpq (bad) test mov loope xchg jge (bad) je jo movsb mov rex.RXB scas test adc cld xchg outsb movabs test retq cltd (bad) mov mov gs test movsl (bad) sub cmp add sub sbb (bad) rex.WRXB push mov (bad) outsl xchg imul movabs in sub jmpq cld add movabs (bad) jg jb pop add mov (bad) and or xor xchg rex.WR movsb rex.WXB push add outsl xchg (bad) incl cltd mov pushq sbb cli push movabs mov xchg add adc test jmp nop sbb (bad) (bad) sti mov sub (bad) (bad) (bad) (bad) pushfq rex.RXB (bad) (bad) sbb pop mov movsl jle mov in sar cwtl or cmp mov pop ja mov jge xor jl (bad) sub repz mov mov add xor ja pushq sub mov movabs cltd (bad) rex.B int3 pop (bad) rex.WX sbb or negl xchg andb sub popfq mov and scas rex rex.WR mov rex.W cs pushq and (bad) cltd rex.WB cmp fisttp xor (bad) movabs imulb rorb cmp or addl jrcxz (bad) ds cmp cwtl pop cmp (bad) mov (bad) jbe cwtl mov (bad) jg fisubr xor adc rex.WRB (bad) (bad) decb rex.RX sti in xchg add adc lret clc popfq rex.WX jg scas cmpsl rex.WXB stos adc or mov (bad) add jae outsl scas mov (bad) (bad) (bad) lcall rex.WB push (bad) xchg iret stos cltd mov mov mov pop adc (bad) xor cmp (bad) (bad) xor pop stc xchg cmp mov movabs cmc movabs rex.R mov outsb or scas sub pop mov xor ja decl test icebp incl and shrd sub not shr rcl shl mov stc test cmc sub stc clc clc cmc pushq cmp cmp jmpq jmpq rex.WX cmc push or (bad) cs (bad) cld mov and push outsb jg xor add (bad) pop mov jrcxz adc or (bad) mov int loop cmp (bad) lret sahf mov lret cmp and rex.WX push and movsl movslq mov imul (bad) sti xorl cli (bad) ss ss xchg xor stc and cmp mov (bad) (bad) sti (bad) pop in jrcxz (bad) (bad) (bad) (bad) scas mov mov xor jb pop mov out cld xchg retq lahf lods movslq sti add add movslq scas loopne cmp (bad) rcrl xchg mov rex.WRXB adc mov pop enterq out rex.B xchg std jns pop callq (bad) sub mov stos (bad) adc test xlat stos mov xor mov movslq (bad) addl cli in push xchg xchg xchg mov xchg mov cmp (bad) add xor (bad) mov pop adc sbb pop adc mov add callq cli jg hlt push (bad) adc incb push and std and movabs pop jle cmpsb js pop pop (bad) lods pushq jbe jp rex.WB jp (bad) sub jp pop (bad) push rex.WRX fisttpl imul (bad) (bad) sti movabs mov sbb jg add pop (bad) movabs popfq xchg sub push rex.R lods mov rex.WX cmp and add mov or (bad) je (bad) mov cmc cmpsb (bad) push and sarb cltd cmpsl cli cmp mov xor sub push ja sar add xor setns add bt bt or xchg test mov cmp test mov cmc cmc jmpq je sbb push cmp bsf clc btc mov cmc btr jmpq callq cmp jmpq jne rol sub ror mov ror add rcr rol rol mov stc cmc test jmpq movzwl bswap lea movzbl lea mov lea mov jmpq pushq jb pushq jmpq pushq jmpq mov cmp (bad) ds lea mov jbe fisubr (bad) rex.RB push mov retq out (bad) lock in sub outsb es rex.RB rex.B lret ja rorb pop push nop pop in cwtl pop icebp xchg pushq (bad) callq jns imul rex.WRB mov xor fist and in retq test lods mov imul rex.WX jnp push rex.WRB test mov (bad) cs sti rsqrtps fwait (bad) (bad) (bad) std cli pop movl (bad) outsl (bad) xacquire imul sbb (bad) in (bad) (bad) ljmp addr32 push cld mov stos rex.WRX test push pop (bad) or repz push test punpckhdq rex.X insl fisttp rex.X mov pop ds (bad) mov xor cmp jmpq ja mov not movzbl movsbw pop bswap not movzbw pop setb lea not pop lea pop jmpq jmpq ja clc jmpq jbe jae clc test cmc xor jmpq je btc shld push adc shrd mov dec sub movzbw lea jmpq jne add bswap sar test mov sar test btc sub stc mov jmpq pop jg callq bswap cmp data16 clc sub sub rex.WX rex.WRX rex.WRXB mov rex.WXB or xchg loopne out pushfq add jl outsb test (bad) rex.WX or rex.WXB mov iret add add sbb (bad) mov rorl pop mov retq cmpsl mov jbe sub stos test pop mov movabs out (bad) (bad) sti mov (bad) (bad) (bad) (bad) test (bad) rex.WX movsl lea cmp xor cmp (bad) fisubl xchg fsub mov xchg and (bad) lret iret add add or enterq gs add rex.WRB add rex.WB hlt xor cmp mov sbb and leaveq stos out rex.XB cmp cld (bad) movabs addr32 cmp cmp add jmpq callq jmpq cmp cmp jmpq push push rex.RB rex.RB rex.WRX cs insb add or xor add ja bt and sub not sub btc add cmp bsf btc mov xor dec (bad) lock mov stc cmp repnz jmpq jge je ror neg push btc mov sbb sub jmpq jne cmc test movb cmc stc clc test jmpq jne mov sub setp sub jne lea xor shr mov (bad) lock add and test sar and mov clc cmc test jmpq adc jmpq nop mov lods jg fs or add rex.RXB stos outsl or (bad) add jl imul xchg rex.RX jno mov sbbl mov repz retq rex.W rex.X jge cmp jb adc xor mov test (bad) push add (bad) sbb leaveq mov out mov pop and push pushq xor xchg test cmp (bad) sti pop gs test decb cmp push sbb (bad) xchg rcl punpcklbw pop (bad) (bad) (bad) dec je jb sub loope (bad) stc jrcxz mov repnz in mov (bad) push (bad) sub jb imul fisubrl add movabs mov mov cmp xchg mov jmpq je jmpq and (bad) enterq sahf jle jmp xchg test rex.XB push (bad) and (bad) ss cmc and xchg cmpsl rcrl js std scas jo pushfq and sbb jne sbb rex.RX jmp cltd fimull adcb mov negb mov sub (bad) lahf sahf rex.B jle mov repnz (bad) fwait jmp adc push xlat jno adc fwait cmp (bad) (bad) sti xlat sahf retq (bad) (bad) (bad) (bad) (bad) inc (bad) mov and or jne (bad) rex.WRX test rex.X or lea add pop jle xchg push scas (bad) movabs xor callq add lar sbb (bad) icebp cmpsl and jno es push or cmp (bad) cmp sbb xchg rex.WRXB cmc cmpsb sbb es sti sahf scas rex.RB rex.RX cmc in fsub (bad) lahf push jnp test rex.WRB add sbb in (bad) div movabs push addl (bad) movabs mov or stos mov or (bad) sarb xlat (bad) (bad) (bad) (bad) (bad) std retq xchg xchg mov in popfq mov pop cmp (bad) jmpq or xchg sarl and pop test and scas (bad) add (bad) (bad) decl push and outsb jl cmpsl jp cmpsb fisttp sbb rex.X jnp insb and (bad) out (bad) movslq jno mov retq xchg pop adc scas subl (bad) jb and lods mov jne stc stc bt cmp movb jmpq xor ljmp rex.WB jmpq mov sbb adc (bad) lret and retq (bad) cmp negl rex.WRXB scas out jae xchg imul (bad) movabs (bad) rex.RB rex.WRB xor stc rcrl loope xorl int add jl and (bad) jrcxz cli cmc (bad) negl xor xor sbb pop prefetchnta sbb cwtl lahf imul xor outsb addr32 rex.XB (bad) (bad) sti cmp (bad) (bad) (bad) (bad) sub cmp loopne cmc cmpsl xlat jmp test repnz (bad) (bad) ljmp sarl movsb mov cmpsl adc mov es insl shll sbb test cmp rex.RB jbe outsl insb cmp and insb imull sbb rex.R jo push rorl and xlat cwtl push lea enterq (bad) out movabs stc (bad) adc lea add add addr32 or sbb imul fsts or jg fisubrl lret and fiaddl rex.WRX ss or fsub mov and or jae movslq rex.WR mov sahf rorb cmp jnp (bad) cmp stc cmp jmpq pop cmp push xorl sub mov sub sahf retq cld cmp cmc or (bad) in sarl lods add in fistpll movabs sub jo (bad) out orl and and (bad) mov ja adc std clc mov cmp push int3 (bad) mov mov (bad) mov (bad) add in pop (bad) (bad) (bad) sti data16 cmp (bad) (bad) (bad) push (bad) rex.W jns xchg mov (bad) xchg push sub (bad) (bad) callq or jrcxz fstl xorl pop rcrb sub pushq jae push push (bad) movabs out repnz xchg add mov test (bad) cltd mov cmp jmpq jns callq jmpq je shl ror bts push ror rcr adc sar mov sar sub jmpq enterq fdecstp pop xor callq jg (bad) imul add (bad) test and jnp (bad) repnz and mov add or rex.B movabs add xor jp xor cwtl lea (bad) and (bad) sti fstpl adc (bad) (bad) (bad) dec test (bad) cmp xchg rex.WRX rex.WRXB pop movsl (bad) repz cmpsl mov mov jmp repz sub addb pushq xchg rex.RXB or add loop xor jb fiadd add add and out (bad) mov cmp iret jp imul lret scas sbb jmpq ds (bad) callq vunpckhpd rex adc (bad) cmc xchg lea jb,pt xchg gs jge,pt ss push add or add pop movabs add nop test test test test test test test test test test test test test test test sub rex nop test mov test clc test sbb lock clc scas add sbb xor scas push scas pop scas (bad) scas pushq jo add add or cmp pushq test mov test or cmp add add mov mov stos shrb callq stos add sbb xor stos push stos pop stos (bad) stos pushq stos subb stos movabs stos enterq fsubrs lock clc stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs nop add adc add jo andb movabs add movsb rex push movsb (bad) movsb jo andb shlb add xor (bad) movsl jo andb movsl shlb movsl add xor (bad) cmpsb jo andb cmpsb shlb cmpsb add xor (bad) cmpsl jo andb cmpsl shlb cmpsl add xor (bad) test test test test test test test test test test fsubrs lock or and cmp push stos (bad) stos pushq stos subb stos mov mov stos shrb lock clc stos add sbb js subb add add pop movabs andb movabs shlb movabs add movsb and movsb rex rex.W push movsb pop movsb (bad) movsb pushq movsb andb movabs movsb enterq fsubs movsb clc movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb jo js subb add rolb add add push movsl (bad) movsl pushq movsl andb movsl movabs movsl enterq fsubs lock clc movsl add sbb xor rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb nop cmpsb cwtl cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb cmpsl movabs lock sbb add cwtl test test test test test test test test add add add add js xor add add movabs rex.W jo js mov movabs movabs test mov mov cmpsl shlb callq cmpsl add sbb xor rex.W test test test test test test test test test test test test test test test test test test test test test test and cmp push test pushq test nop test test mov mov test loopne callq test adc sub stos rex.W push stos pop stos enterq or mov mov mov stos shrb add add movabs js andb movabs and movsb callq movsl xor movsq push movsl (bad) movsl add rex rex.W push cmpsb pop cmpsb (bad) cmpsb pushq cmpsb andb cmpsb movabs cmpsb enterq fsubs lock clc cmpsb add sbb xor cmpsq push cmpsl pop cmpsl (bad) cmpsl pushq cmpsl andb stos sbb xor stos push stos pop stos (bad) stos pushq stos test add (bad) add add sbb (bad) add add xor rex.W push scas pop scas (bad) scas pushq (bad) add (bad) add add shrb add add adc shlb movabs loopne or mov add (bad) add add (bad) movsl add or add adc (bad) add add jno add orb sub add nop movabs fsubs or movsb movabs nop or int3 add add stos callq stos add lods and lods lods rex.W push lods pop lods (bad) lods pushq lods subb movabs lods enterq fsubrs lods clc lods add sbb xor lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas movabs scas enterq fsubrs add add loopne callq movabs and push movabs callq movsb add sbb xor movsq push movsl pop movsl (bad) movsl pushq movsl andb cmpsb (bad) cmpsb add or faddl add add xor mov cmp cwtl cmpsb mov cmpsl sbb xor callq test cmp pushq test mov test or cmp (bad) stos pushq lods rex lods push lods pop lods (bad) lods pushq lods subb lods movabs lods enterq fsubrs lock clc lods add sbb xor rex.W push scas pop scas (bad) scas pushq scas subb scas shrb scas loopne callq scas add xor add or cmp add lock sbb xor movabs callq movsl push movsl (bad) movsl mov fsubs (bad) cmpsb rol rcl push add push bts push shr push bsr inc jmpq add add or insb rex.R mov rex.X jns mov or fucom jrcxz rex.WXB mov icebp (bad) (bad) add pop xchg in xchg (bad) adc sbb jmpq fist or mov adcl pop sahf xor movslq (bad) (bad) decb adc push rex.B es jnp ja movabs int3 xchg or (bad) roll loope test pop xchg clc fwait in rex.WRB pop cmp or pushfq callq (bad) pushq imul xchg clc add jmpq repnz jmpq mull movsb and adc mov stos sbb jrcxz cmp mov pop mov insl add (bad) (bad) adc add mov cs out retq rex.XB sub pushq std mov push cs jrcxz (bad) mov movsl rex.WX sub test mov mov (bad) mov sbb and pushq movabs and hlt (bad) (bad) (bad) (bad) xchg push rex.W ds xor sbb add add adc cmovs fiadd mov and in (bad) pcmpgtb out adc xor sbb (bad) adc in add repz test cmp rex.B add lretw outsb insb leaveq cmpsb mov mov rex.WX rex.XB out xlat mov movsb lods (bad) mul xor lea and bndcn popfq (bad) mov mov nop (bad) xor cmp fs out movl int3 scas (bad) adc in fmul out in xor jne jl cli fdivr mull cwtl mov stos movsl test rex.B mulb incl rex.WXB rex.RB test (bad) (bad) sti mov iret adc (bad) (bad) (bad) (bad) movabs (bad) xchg xor (bad) sub add and (bad) lea mov push jae mov adc adc jle rex.RXB in push repz add pop (bad) mov sbb pushq callq (bad) insb cmpsb mov out (bad) mov rex.WXB ss outsl int shlb in repnz jmpq jmpq jne bsr and shl adc sub shrd lea clc mov setg xor add test ror or mov bt stc stc bt test jmpq jmpq ja jmpq callq sbb neg and add bsf mov cmc jmpq je stc test add test bt bt jmpq jmpq jne lea mov lea mov jmpq jmpq ds scas pop pop rex.WX cmp and mov (bad) iret mov rex.XB retq rcrl rex.WXB scas rorb xchg push push adc cwtl add jb jo jae and iret movabs (bad) rex.X je xor callq push (bad) fwait rex.W adc jns cmp jmpq xchg mov sti retq (bad) (bad) (bad) (bad) (bad) (bad) pushq pop or fdivl nopl mov movabs (bad) sub sub adc (bad) lret mov push rex.XB repz pop (bad) mov rex.RX rex.WR iret pop rex.WRXB mov adcl mov in jp push xchg in sarl xchg add jno clc sub add (bad) gs and or xor add jnp mov (bad) out adc icebp xchg (bad) pop jbe adc scas and lods add loopne (bad) rolb xchg adc mov (bad) ja (bad) mov cmp adc and sti stos scas clc (bad) jae (bad) (bad) (bad) xchg mov (bad) movabs cmp add add add mov cmpl sbb xor or shrl pop cli ss pop leaveq lret rex.W clc movsb leaveq in rep int (bad) sub sbb lcall jno lock jmpq clc test jmpq seta bswap mov mov mov mov jp movsbq bswap bswap mov mov jmpq jmpq jmpq not mov jl push sete lods bt cmc cmc neg jmpq mov mov movabs lock rex.R xor mov imul xchg or jmp jns and rcrl cmp addr32 in rex.X (bad) retq cs in (bad) cs rorb jl test sub xor lret rex.WB mov jbe fsubrs add icebp movslq vaddps stc jg add (bad) (bad) jle pop adc (bad) xor xchg pop (bad) (bad) (bad) sti mov cmp (bad) (bad) (bad) (bad) jp rex.RB gs movb xchg adc (bad) (bad) (bad) cli (bad) mov xor cmpsb mov mov not rex.RX adc in sub cmpsb xchg xorl in in setbe or psubsb (bad) rex.WB xor mov rex.WRX (bad) pop jb cmp test cmp jmpq out repnz add insb pushfq mov movsb sti ja (bad) pushfq movabs sarl mov lods push movslq mov movslq rex.WXB sbb fstpl mov sub rolb roll mov sub rex.WRXB jge pop (bad) movabs rex.WRX (bad) (bad) (bad) cld push movslq (bad) (bad) cmp out out (bad) mov cmpsq xchg jno mov xchg in addr32 and xchg movabs add leaveq in hlt rorb (bad) (bad) rex.WRXB (bad) push rex.WXB mov mov (bad) fstps cmpsl xor xchg cmpsl xchg mov add add sti iret rex jns adc (bad) shlb mov sbb (bad) adc std mov push and stos out movslq add add jg jl (bad) insl jns xchg mov cmpsl lret callq xchg (bad) test xchg imul xor jmpq mov stc cmp cmc clc cmpb jmpq jmpq lods loopne sub iret cmpsl xlat cltd sub (bad) mov xlat mov (bad) jns rolb push je push and in (bad) xor (bad) mov pop or rex.B es rex.WRXB pop lock mov push xor (bad) rcll shll sub jns (bad) (bad) cld pop xor (bad) (bad) (bad) (bad) (bad) incl lret cmp popfq fwait mov stos push cld lods pop (bad) pop loope or fildl (bad) scas xchg out (bad) xchg pop xchg ljmp (bad) std sbb (bad) in (bad) bnd xor fcomi stos push outsb data16 imul cltd mov (bad) in add add and outsl rclb (bad) shl fwait sbb jbe sub jnp scas add xchg adc fisubrl in adc xchg (bad) add rex.RX jmpq mov push (bad) fstl add shlb movabs loope btr add bts shr mov cmp stc test bt cmpb jmpq sarb test rex.X or adc xor rex.WRX rol mull pop push xchg out nop clc add mov lret (bad) jo adc sbb sub (bad) xchg rex.WB xor push xor cmp mov out rorl pop xor int pop xor sbb jge insl rolb stos pushq lods fimul sub rex.R xchg (bad) cmpsl or repz sub xlat (bad) int3 (bad) insb popfq or sub cli in (bad) (bad) (bad) sti pop lret (bad) (bad) (bad) (bad) (bad) push stc mov sahf push (bad) cmp add sbb cmpsb rex.XB cmpsl (bad) (bad) (bad) callq idivb repz rex.RXB cs rex.R or mov xor (bad) icebp xchg pop mov and out add repnz rex.RB (bad) jmpq mov (bad) or movabs jrcxz jmpq movabs test ds movabs (bad) (bad) pop cmp cmp mov js cmp fildl cmp add sbb jae jmpq mov cltd (bad) add sbb test nop rcrb retq (bad) loope scas rex.WB rex.WRXB rex.WRX pop fldl and or add pop (bad) jle jp frstor or xchg xor jne int (bad) add loop setg in push stc rex.WX fs int movabs sti add movsl pop add cmp jp test cmpsb mov (bad) xor out adc ss jnp (bad) (bad) movabs rex.WRB adc push mov (bad) or in (bad) (bad) movslq jnp push rex.X int sbb rclb insl and repz add mov cmp addps rex.X xchg rex.RX movsb (bad) lahf iret int and roll mov (bad) scas iret test mov adc std mov xchg or or (bad) sub out rex.R out pushq xchg xor and sub mov (bad) (bad) sti (bad) js (bad) xor (bad) (bad) incb test sahf xor jo fmull (bad) (bad) (bad) (bad) incl cwtl jmp mov addr32 add rex.RX mov jp pop shlb lods rcrb leaveq shrl js fwait imul popfq (bad) mov fs push jl mov add fcomip popfq pushw rex.R mov jnp add rcll xchg rex.WX mov cmp (bad) shl lea xchg sbb adc jmpq retq movsl rex.RXB test push adc (bad) and movsl xchg (bad) mov mov sub lret out xchg retq nop clc cld add (bad) std (bad) js lahf or push xor or (bad) jg fcos (bad) (bad) sti mov and (bad) (bad) cld xchg xchg test enterq rex.WR (bad) (bad) decb sbb mov movabs loop rex.WRXB je test (bad) jo,pt jmpq add lea cmp fucomi rex.WRX (bad) sub rex.RB sti or xchg insb mov push and icebp (bad) sti (bad) mov movslq hlt cmpsb xor retq sub shlb rcll sbb (bad) out (bad) rcl mov pop jno in sbb cmpsl xchg sbb rex.RB and adc in xchg xchg mov int3 movabs test pop jl xchg adc or (bad) movabs mov (bad) sbb stos subl (bad) lock mov sub add movsl fidivr stos cmp (bad) (bad) sti pop int je (bad) (bad) (bad) decb jns (bad) (bad) cmp xchg outsb (bad) movabs (bad) iret sub xchg (bad) jge sbb (bad) (bad) stc mov sbb test sub cli push shlb and (bad) enterq fidiv rex.B mov pop rex.WRXB sub mov push (bad) cmpsl or or sarb loope icebp push movb cmc bt cmp test jmpq pop cmp xorb in std leaveq jmp xchg fbstp adc fistl fimull fwait push push rex (bad) or popq xchg add cmp test retq and lret stc xchg movsl jle outsb pushq (bad) ja test (bad) push imul addr32 ja mov (bad) (bad) cld adc xor (bad) (bad) (bad) (bad) sti jge imul (bad) push out lock pop mov xchg pushq (bad) scas std roll push cmp xor movsb sbb mov mov add add mov xor in hlt sahf (bad) rex.WR rex.B add rex.W (bad) push fnop mov retq (bad) retq jo (bad) or and and out nop cmpsl (bad) test icebp movabs cmp mov pop adc sbb (bad) icebp (bad) stc cmc cmp bt cmp retq add jmpq cld lods or (bad) (bad) cmc fsubl xchg rex.RXB mov lret and fidiv rorl cmpsl outsb mov test subl sbb lods (bad) push rex.WRX rex.RB xchg (bad) adc (bad) ds rex.WRXB rex.XB rex xor and in add movabs or cmp rex.WXB rex.W callq pop sarl fadd cli rex.WRX rclb pop adc add add leaveq test stos mov xor mov (bad) scas (bad) ja and out and xchg mov xchg or mov mov std rex.WRXB (bad) or and sahf and flds repnz mov mov cmp jmpq jns je bts bt lea push stc bswap cmc bt mov test cmc sub jmpq jmpq clc rol cmc test bt cmp cmp jmpq jmpq cmp jmpq jne dec movzbw shld xor shrd inc inc mov sub neg add add mov test cmc test jmpq ja sar (bad) lock fmuls sti inc setb add dec setae rol shl mov neg mov jmpq jmpq mov pop icebp (bad) insl xor sti mov sti mov shl sbb cwtl clc sub (bad) movsl cmpl mov retq pop pop movabs sbb repz xchg (bad) mov lret add xchg nop es jp (bad) xor repnz mov (bad) mov data16 (bad) retq movabs xor (bad) jns mov pop cmp idivl xchg nop movabs incl sbb (bad) (bad) (bad) sti adc (bad) (bad) (bad) incb movsb pcmpeqw xor xchg xchg lods lret sti jne (bad) (bad) (bad) incl in fist cmp xchg cmp sub cmp pushq rex.WB (bad) insl mov xchg mov adc insb fiadd repnz mov pop (bad) jrcxz mov (bad) decl nop (bad) stc shr or push sar shl mov cmc (bad) lock setp jmpq add push (bad) je imul jae add lret lock mov int3 cld sub int loope or cmpsl cmc mov xchg pushq and (bad) movabs add mov push pushq xlat mull int3 cld cmp mov cmp add pop push mov sub jns mov pop js (bad) (bad) (bad) cld sub (bad) (bad) (bad) lcall out xor pushfq sbb (bad) jl cmpsb stc sarb sbb push lret sub mov (bad) xchg mov lahf movsl ficoml repnz (bad) ror nop mov (bad) movabs xor (bad) (bad) js jmp mov xor mov (bad) (bad) retq or loope add mov rex.B int adc scas rex movslq fisttpll sbb (bad) decl test rex.WR jmpq or jmpq test (bad) jge pop xor jo sub add add pop lea movabs lods (bad) add rex.WB (bad) cmpsb sarb jne (bad) (bad) jmp pop out lahf mov shrb sub rex.RXB sub pushq lods xlat adc rex.WRX cmpl sub rex.RX add (bad) (bad) decb adc mov sbb callq and jl or sbb mov jp rex gs or xlat mov (bad) pshufw mov jo (bad) (bad) int3 stos std std and mov and (bad) and xlat (bad) ss jb gs rex (bad) repnz repnz cmp jae (bad) repz jno cmc jmp jae (bad) sub fmull (bad) out rex.RXB rex.X push cmp int3 xor retq pushq or mov mov sub test push xor (bad) movsb std js (bad) testb (bad) (bad) (bad) decb (bad) (bad) (bad) incl xor scas mov mov and in movslq push repnz (bad) mov mov out in es mov jmp (bad) jae ja push pop rex.X and jbe (bad) rex.WB (bad) fmul pop (bad) rex.WRXB rex.R push sub sub add add add rex.WB rorb (bad) add rex.WX jb adc add rex.WX xchg movabs sub sti (bad) and mov add rex.WX add (bad) add sub (bad) cmpsb (bad) add (bad) add sub (bad) adc add sub jnp (bad) add rex.WX sbb mov add add add add add mov add add add add add (bad) (bad) add rex.WX icebp movabs sub jmpq mov add rex.WX xor mov add rex.WX sbb add mov add rex.WX rorb (bad) add rex.WX rorb (bad) add add mov movzbw mov bswap lea movsbw movzbw lea jmpq jmpq (bad) (bad) lods (bad) shrl ss mov or cmpsl lods cld jmp (bad) mov and sub xlat fld add (bad) and popfq out sub stc xor (bad) push pushfq add mov out adc sti lret lahf pop cmc (bad) add and sub (bad) in jmpq sti mov sbb (bad) (bad) (bad) (bad) pushfq xchg jrcxz rex.X out (bad) sbb enterq mov leaveq adc sbb rex.WRXB loop rcrb (bad) cmpl sub add ja or jno movabs sub cmp roll and and adcl ljmp jmpq (bad) sbb (bad) leaveq mov pop loope jp cmpsl cmpsl not or (bad) iret repz sub sub rex.XB lret fcoms pop mov (bad) enterq outsl jno mov outsl cmp xor push cmpsl and xchg gs setnp pop (bad) rex.WRXB mov out (bad) xchg lods fs test mov (bad) pop rcrb divl cwtl cmp xchg xchg jp gs sbb (bad) (bad) and retq mov movabs outsl xor gs xchg sbb cld fisub std fdivs xchg fidivrl (bad) (bad) (bad) (bad) insb movabs sar (bad) (bad) in popfq incb out (bad) (bad) mov iret movabs imul jnp pcmpeqw gs (bad) insb cmp jrcxz (bad) pop pmaxub cmp and cmp es pop cmc or lods mov (bad) fs rex.RX icebp jmp mov (bad) and add (bad) push rex.WRB mov rex.WXB data16 pushfq cmp rex.RXB (bad) mov pushq xchg or callq cmp shll ja (bad) in movsl or fstpt (bad) mov rex.RB rex.WB sbb nop adc mov fcos (bad) (bad) sti insb pop std mov (bad) push mov rex.WR insb and out mov mov test jne or (bad) (bad) rex.R (bad) clc push fistp add rex.WRX mov xchg (bad) ss pushq rorb sar (bad) ljmp and mov imul jle xor jae callq mov cvttps2pi jne lods push clc and mov (bad) scas add push (bad) ss (bad) jmpq (bad) cwtd rex.WR andl add or mov bsf mov rol shld bsf bsr mov clc jmpq jmpq push loop in fist nop js or in (bad) (bad) mov jge es rex.WR mov out lock (bad) push pop jge (bad) (bad) mov and or xchg add mov hlt test lods cld (bad) jns ds outsb movslq and jb adc in mov cmp gs test cmp pushfq rex.X mov sbb (bad) lret xchg insl scas in (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) scas (bad) retq lret or and jne (bad) ja test jae pop mov cmp cmp sub stos add adc fisttpll xor xchg mov ja push fistp mov jae adc (bad) sti mov andl (bad) repnz rex.R out sub faddp (bad) (bad) cmp lods packsswb rex.WXB cmp fmull fadd sub push repz movslq add push gs sub sub cld in fsubrl mov or xorb or xchg cltd negl movsb cltd clc repnz test adc mov xchg cmc ficoml (bad) mov movslq and (bad) (bad) lea (bad) rex.WR mov decb out rex.R adc cmc xchg mov imul pop repnz and adc mov sub movsb lock insl sti in test lret push (bad) in (bad) sbb movslq mov clc jmpq sub jmpq jmpq movabs (bad) pop imul fsubrs in mov (bad) nop iret shrl xchg (bad) mov movslq icebp fs imul and insl lods (bad) imul pop retq lahf rex.W callq mov int3 cld sub in (bad) (bad) shrb callq mov addr32 imul xor hlt hlt int fild (bad) in lods imul sub mov pop xchg pop enterq sti push jrcxz (bad) xor sarl and cmpsl movsl cli and loope mov jbe shll in fstpt rcr or shr (bad) jnp mov mov addr32 movb (bad) in pop sbb gs mov callq mov or in js jrcxz xor (bad) and adc mov sbb scas (bad) cltd (bad) (bad) ja in and cmpsb jmpq out stc fistpll mov sub icebp jrcxz and (bad) repz sti loop movabs hlt mov or pop (bad) mov cwtl mov int3 jo jb xchg out adc out mov loop repz insb rex.X (bad) sub pop jle jg rex.WRX cmp xchg test callq mov and xor (bad) cmp rex.B (bad) enterq cmpl (bad) out jbe (bad) faddp mov xchg (bad) (bad) mov idiv jmpq fsubr adc pushfq sbb xchg out out or clc (bad) jo test push jle or scas retq adc push out js adc gs or jbe retq lods neg mov loopne sub outsb mov mov xor or or lret or (bad) mov adc movsl push loope fcmovu insl addr32 rex.WRB out repz int pushq mov add push and sub movabs cmp (bad) and clc roll insl jl (bad) and pop data16 icebp cmpl pushq or pop rex.RX or mov ds (bad) sti pushq (bad) imul imul jne movabs xchg roll callq es test and movabs in jo out mov rex.WR pushfq (bad) mov test (bad) sbb mov enterq jns cmp or jp out cmp jns in hlt sub xor fs add stc adcl imul movabs xor shll rcl idivb frstor sub fisubl cli adc mov movsb sub adc adc xchg cmp fild (bad) movabs (bad) mov pushq cs ds sub or sarb xor shrl pushq push xor (bad) mov cli imul pop test lock sub movslq and test mov mov pop outsb decb sti clc stos (bad) jne movl mov jrcxz movabs cli xchg push pushq xchg cmp mov movabs std repz rex.W fimull mov (bad) mov icebp jmp insb (bad) (bad) sub cli mov outsl xor mov xor xchg xor cmpsl mov pause cmpsb cltd loop movabs and icebp enterq cmp bnd cmp repz shrb (bad) cs mov popfq fist cmc fiadd fcom mov hlt retq insl test mov mov and in lahf movabs pop (bad) lock xchg fistp sub (bad) lock out rex.WRX es mov sarb rex.WB push pushq rex.X in xor sub or in scas cmp leaveq lock movabs rex.X ds movabs sub (bad) (bad) fcomip or jrcxz push divl addl cmp jrcxz rex.R movabs movabs out sbb out sub add xchg jmpq in jrcxz callq rex.X fwait jrcxz (bad) hlt mov mov repz in movabs lock (bad) mov rex.WRXB out vshufps rclb ss in addr32 and xchg and jrcxz fmul test mov pushfq in ds pop cmc cmc adc adc movabs pushfq jle pop in sbb or add std clc out mov ror fnop negl (bad) sub mov insl js fadds (bad) in insl jle (bad) or (bad) add loop shll (bad) jnp insb lods mov in cltd sbb xor jmp clc int xor mov (bad) (bad) movsb and (bad) mov repnz xchg mov pop ror shrl (bad) (bad) testl movabs (bad) (bad) (bad) pop in rex.RXB cwtl nop movsb pushq or fisttp movslq int3 cli es xchg rcr jae mov scas push out jrcxz pop or shll mov adc addr32 enterq repz pop vcomiss push shl movslq std enterq test lahf jno in jrcxz sbb (bad) test mov test ja sahf shl and mov stos lock (bad) fdivrs mov movabs lods cltq stos pop cmc or std sub repz mov sbb mov stc lahf pushfq rex.RB mov xor imul shl mov rex.WR rex.RB (bad) or cmpsl loop rex.WR pop fcoms loop movabs scas push cmp pushq mov (bad) mov mov and sbb cmp sub movabs (bad) enterq (bad) mov iret loop (bad) out callq test int3 (bad) mov iret jrcxz jg (bad) hlt sti sbb sub adc cmp push (bad) jrcxz pop push lret (bad) iret outsb ljmp repnz lret movabs int3 lods jae hlt jrcxz rex.RX addr32 fcomip (bad) in sub (bad) insl retq rex.W test pop lret rex.B iret (bad) int3 rex.WB cmp xchg rex.B rex.RX or enterq sbb movabs retq mov imul xor lock add jne xchg movabs movsb (bad) lahf in rex.X imul in rex.WXB je (bad) rex.WXB (bad) stos iret rclb rex gs mov rex.WXB rex.B lretw (bad) mov pop pushfq (bad) pushq (bad) fidiv callq (bad) (bad) lock sbb jp cmp jo scas mov (bad) (bad) push clc (bad) sti (bad) out push or subb fdivs (bad) or rex.WX (bad) (bad) xorb fisttpll or test enterq rex.WR (bad) lods sub rex.WXB or jge push (bad) in jle jmp (bad) (bad) out pop insl jno (bad) movabs in adcb and mov shlb (bad) (bad) (bad) loope jnp rclb (bad) in fadd pop pop lods retq ds rex.R cwtl nop add rex.RX fidiv fsubrs negb loopne (bad) callq sbb cmp movabs lret rex.B rcrb out xor insb (bad) loop rex.WRX rex.WRB rex fsub fisttp jp (bad) push mov sub (bad) in test rex.R jp rex.WRX and icebp push sbb shrl std mov rex.WXB imul fdivp (bad) fiaddl pop test and xchg sbb sub cmpsl sbb mov sahf jo jmpq neg (bad) movsb repz (bad) imul jns cmp add xchg movabs pushq sub clc xchg in in (bad) in (bad) pop jmp ffreep sbb rex (bad) (bad) xchg hlt rex.R add cld callq rex.X or jrcxz jl enterq add jmp loop add rex.WX (bad) or hlt (bad) (bad) (bad) (bad) in (bad) pop xor out (bad) add mov outsb cld enterq (bad) (bad) jae jne clc imul je int insb movsb jmpq sub fidivr movsl mov fwait mov sub cs sahf enterq mov fucom rclb (bad) and (bad) jmp cmp lock mov or sub (bad) cmp rex.X addr32 add enterq and jle add and (bad) (bad) lret callq rex.WB in cmp loope (bad) (bad) lock (bad) sub sahf stos iret fiadd push sahf lods int xchg clc movabs (bad) cld icebp (bad) test mov xchg in pop in push rex.WRX outsb movsl xor sti insb test loope and stos cmp cwtl jmp rorl xchg rex.RX callq jg test lock sbb rex.R (bad) hlt iret retq in or ds sahf sub lock jns int fsubrl cld and or movabs jg orl in fdivp sarl loop cmpsl clc xorl rex.R or cmpsb sahf lock lock imul mov icebp movabs and movslq sbb push lock (bad) or subl mov and pushq pop mov xchg ss lods loope insl outsl push retq cmp (bad) xor int3 (bad) xor movabs outsb rex.WX icebp movslq fdivr insl cmpsl rex.XB loop jp adc xor jo (bad) (bad) mov jle or insl sbb out callq fnstcw sub lret je pop pop and (bad) mov mov (bad) (bad) mov rex.WRXB lock int3 sub mov sbb pushfq stos incb mov push xor adc rex.RB movb xchg and mov sahf movsb int movups fisub adc callq or test fwait leaveq in leaveq or test jmp pushq test xchg js clc or (bad) (bad) rex.WRX int mov (bad) pop fisub in sub (bad) loop cmpsl imul and cli data16 movabs rex.WRXB pop out test shrb add (bad) (bad) mov mov jmp addr32 test lock mov (bad) or movslq fnstsw (bad) (bad) hlt in sub addr32 insb rclb (bad) jb push add jrcxz or add out imul sub add enterq jl xchg sub shrb xchg (bad) adc jns fnstsw mov addr32 jo xor (bad) fucom cmp mov sarl sub cld rex.RX push xor enterq mov data16 sub iret xchg (bad) lods stos lock cld mov mov mov rex.WRX retq xchg out or add and es imul (bad) jns in fnop (bad) pushfq ds jle cmpsb enterq (bad) repz xor and mov or jle jmpq repz cmpsb (bad) pushq (bad) imull lret repz callq or jp retq movsl in iret rcll fsubrp insl stc rex.WRB in sbb roll or sbb xor (bad) cs xchg pop xor rex.XB addr32 sahf (bad) lock callq cmc add xor ds loop mov fcomi int insl movslq xchg lret jrcxz fcoms (bad) sbb push (bad) in pop jne jle add enterq mov lahf iret jns jrcxz (bad) sub icebp mov movsb lock jo (bad) rcrb movsl pushq fldcw stos std repz movabs push hlt (bad) rex.B lahf pop xchg jo movabs iret xor callq jns out stc popfq (bad) cmp roll jl (bad) in push jo movabs iret (bad) lods rex.WRXB nop jl insb (bad) pop pop pop leaveq and jbe ja pop std sbb jg rex.WRX rcr lret movslq test orb mov adc sti insb loope xchg jno (bad) mov mov fs and or test (bad) (bad) sbb jb out xchg movsb jbe int sbb jno cs rex.R (bad) loop or movsb adcl sarb stos nop (bad) mov sti (bad) divl lock rex.R test and hlt scas rex.WR pushq fldt (bad) movabs popfq xchg lock cli (bad) js push and fstpl movabs adc repz adc (bad) fnop out adc retq rex.WRB cld fbstp imul sub pushq movsb (bad) insl ss lods cmp in push sub or (bad) xor int push movabs or enterq ficoml pop jg or xor cmp mov lret (bad) xchg retq add lahf test nop (bad) shr icebp mov pushq (bad) (bad) rex.WR xor (bad) es xorb or movb negl mov rex.WRXB (bad) fldcw ljmp ljmp callq mov rcrl jrcxz iret shr fsubs (bad) fs mov data16 test out jbe ja sub movslq scas fdivrs fs movabs outsl or out movabs es (bad) push pop adc mov or rol mov mov rex.RXB rcr movabs cmp enterq xor rex.RXB shl (bad) pushq outsl jne out adc retq (bad) movabs mov sbb mov pushq cmc enterq (bad) repz ja push (bad) rex add test and and addl and lock sbb adc push movabs stc imul lods addr32 sub rex pushq fs jne imul addb lock movabs outsb imul adc add retq stos xor stos jle std int jle (bad) xor (bad) jnp jle addr32 xchg mov fdivs xor movabs cs (bad) or xchg outsl rex.X test rex.RX leaveq jns scas (bad) rcrl clc enterq lock push mov sub push jo mov (bad) sub cmp es rex.WX data16 in xchg cli lods jrcxz fsubs pop cltd (bad) (bad) mov jnp sti ficomp jbe (bad) xor bnd enterq stos iretw rex.XB cmpsb orb gs shrl xchg test xchg clc pop jbe rex.WRX addr32 pop jo cmp adc (bad) mov mov rex.WB (bad) fstpt mov cmp fiadd jl and (bad) (bad) push out xor iret cli ds insb (bad) clc callq (bad) push test sbb rex lock lods in movsb shl adc (bad) movsb sub (bad) mov adc xlat cltd pushq push jrcxz (bad) lods mov stos insl shll adc pop cmp pop lods and sub adc clc or cmp cmp (bad) (bad) pushfq movabs sahf retq data16 xchg jo xor in rex.RXB bnd repz mull (bad) (bad) pop callq (bad) rex.WRX and xchg lods iret imul mov divl subb stos rex pushq sub jb outsl or movsb sbb callq in (bad) retq (bad) je movabs (bad) ss mov adc mov scas retq incl or jmp adc add movsl xor mov movsb in fisubr mov cmp movabs hlt push sbb mov (bad) cmpl push sub popfw cld (bad) pop or rex.WR callq sub pop mov movsl adc insl sub pop imul js sub cmp and mov pushq fs push (bad) retq outsl insl xchg rex.RB lods movabs (bad) callq xchg jle imul sti clc in sub pop (bad) fisttp (bad) and rex.WB push iret pushfq movabs mov fsubr xchg fs mov xor addl insb (bad) icebp loope pushq test cwtl rorb push sbb callq movabs and or and (bad) movsb ror rex.X lods movabs fcom retq (bad) push jae sub (bad) (bad) es add xor lret sahf mov addr32 mov mov (bad) and (bad) movabs stos stos mov mov (bad) neg in (bad) cmc add or (bad) and leaveq xor (bad) jnp syscall fsubl test insb cld or (bad) scas mov jl imul mov int and gs sbb in cmpsl shll shrl pop iret faddl xchg lods shlb xor push and sbb (bad) jle cmc xchg retq mov mov sahf fbstp mov out (bad) scas cmp in fwait test mov xor lods lods rex.RB or add add pop je (bad) jo icebp movabs callq in mov (bad) pop insl xchg flds push mov out mov rex.R rcll mov repnz lods lock or je movabs (bad) ljmp push xchg rex.RXB mov cmp lods in out in lods (bad) (bad) (bad) in (bad) imul js out jle sahf movsl xchg mov leaveq repz jne lahf ja leaveq movslq fcomps lock and lret sbb callq repnz cmpsl fwait mov rex.B repz (bad) cmc jmp (bad) callq (bad) adc int3 jns push test lods pop lea or bnd (bad) test lock xor pop stos (bad) iret (bad) xor mov mov out shrb in enterq sbb fdivrs xlat or rorb sarl nop lret (bad) push gs pop sub cld jg rex.WXB adc notl int3 leaveq movabs and rex.XB jrcxz jl or rex int3 mov leaveq xchg mov fadds sub out pop adc (bad) mov or rex.X clc movslq or sub rex.WB xchg sub rex.WRXB movsb iret (bad) leavew (bad) lods (bad) (bad) jns lock or outsl rex.WXB hlt push xchg push loop test mov cmc jge iret xor and hlt (bad) fiaddl and enterq jrcxz fwait xor xlat or xchg movabs lock jmp (bad) retq jle or pushq mov bnd mov jae cmpsl rex.RXB js (bad) pop mov xor int (bad) jrcxz rex.R es stc movabs xchg jrcxz cltd cmpb negb mov ror test add cmp mov rolb rex.W (bad) test xchg pushq jo test enterq cwtl test (bad) je mov xchg xchg stos test stc repnz mov rex.WRX out (bad) stos stos pushq and out rcrl jrcxz xlat jle (bad) enterq push and (bad) mov push (bad) in loop (bad) xor mov push mov jrcxz push (bad) xor (bad) add pop (bad) hlt mov jrcxz or out or data16 (bad) js lock repz lods xchg jns (bad) int3 rex.WR mov (bad) mov rolb (bad) cmp (bad) fimul iret mov sub iret scas ss and push lea stos jmpq fsubrl fdivr add jb fdivrs pop shr movabs jmpq jns mov mov and fimull jrcxz test sahf xchg lahf push data16 nop insl jbe outsl and mov jo rex.WRX retq sahf test retq scas repnz xlat mov lock mov (bad) sub sbb pop lock gs pop in cmp out push retq (bad) push jrcxz repnz push int3 (bad) or adc and mov jg or (bad) movslq or and stc lahf push (bad) repz mov out add jbe ficoml in out or or and nop clc rex.WRXB or fs (bad) mov callq ds or (bad) icebp xor callq stc or and movabs jne mov lock in fwait lahf and xor (bad) rex.WRXB or cmc cmp push rex.RB faddp (bad) pop and enterq in or add rex.WB nop cwtl test rorl clc or lock movabs rex.WXB stc rex.B repnz insl addr32 rex (bad) xlat mov pop mov (bad) mov movabs imul or mov or mov (bad) idivb in or xlat jne (bad) xor rex.WRX (bad) sub (bad) mov add lret ds add enterq movabs in clc or callq lods jrcxz rex.B cmp imul fwait mov lret faddp movabs pushq cs leaveq lods rep xchg mov rex.RXB rex.WR mov xchg pushq or int callq test addb cs (bad) divl nop jmp shlb (bad) or stc in lock cs movabs (bad) (bad) ds outsb pop adc ds cmpsb mov idiv or pop imulb mov test loope stc fdivrp movsl lock add (bad) xor data16 (bad) sbb jrcxz retq mov es shlb rcl fldcw ss mov or xor xor sub mov push roll (bad) jne push cmp clc (bad) mov pushq (bad) notl loop mov cwtl cs callq movsb (bad) fild fnsave push pushfq push jmp test cmp rcrb and outsb (bad) sbb adc (bad) push pop (bad) mov fcompl loope cs loop,pt jle (bad) in pushfq rex.WX pop (bad) jle and xchg loop sbbb and in (bad) cs hlt sub sub movabs addr32 ds in and iret loope (bad) (bad) xlat insl (bad) or jns nop loopne or adc movabs cmc cld stos callq es xlat hlt movsb mov (bad) sbb rclb or mov and (bad) in (bad) jge gs jb (bad) cmp mov sbb adc retq pop iret or and sub cltd andb lea and xchg (bad) lret int xchg sbb pop retq cli rex.W (bad) retq or cmpsb movabs mov xor ss retq sbb mov pushfq int mov or lods sub sar mov rex.WXB or je js sub movabs outsb mov sub fnop sbb cmc jge cli loope es rol (bad) sbb iret imul hlt cmp mov (bad) jbe lock (bad) (bad) ss cltd sbb mov rcll (bad) pop in sbb mov pop in mov test pop subl and movsl cwtl lock je fdivs rex.WRB (bad) mov adc pushq sti jmpq movabs sahf sar rex.RX rex.X (bad) imul enterq outsb rex.WX (bad) movabs outsl (bad) loope mov (bad) mov mov cwtl sub (bad) (bad) movabs cmc push sbb test (bad) movabs movslq mov out jp pushq shl xchg mov mov js (bad) and movsb xlat add fsubrs jns cwtl shrl fdivs (bad) wbinvd cwtl or mov cmpsl nop (bad) push mov in (bad) jo mov jnp and jle lahf (bad) add in xchg sarq lret xchg retq rex.XB pop rex.WRB jg int3 mov iret xchg movsb retq rex.WRB int3 movabs lock (bad) hlt fwait (bad) cmp (bad) (bad) test sub lods rex.WB pop (bad) jo jb fucomip and mov movsl (bad) jo rex.R mov sub sbb jrcxz lods bndstx push ds insl adc cmpsl in clc stos and fs jae callq insl sbb pop mov add fwait xchg test push (bad) stc leaveq sub faddp rolb xor xchg clc lods and divl scas loopne cmp orb adc outsb and (bad) loope retq fstl pushfq imul mov xor mov outsb lods xor xor (bad) sub jmp add movabs or xor (bad) mov (bad) mov addr32 test repz add negb or xorb rex.WRB movsb in retq js jns js scas out stos (bad) pushq xchg in (bad) cld (bad) mov jo test jae iret cmpsl in sub data16 mov cmp sub addb cli hlt add test add mov (bad) pop int sbb xor rex.WRB (bad) or fsub and or cs pop or mov xsha1 cmpsb or push imul movabs pop sbb hlt outsl pop lock shl jmpq movsb outsl (bad) and xor in or and and (bad) (bad) movabs (bad) (bad) mov (bad) in retq in or stc rex.RB movabs iret movabs cmc sub xor xchg push nop int3 (bad) (bad) mov sub (bad) callq enterq cmc insl adc sub mov cmpsl test popfq pushq jmpq in out adc retq ficom (bad) cmp sub sub or mov insl movabs outsl adc xchg rorb outsb and stos add adc or in or sub (bad) (bad) sbb add jge sti hlt and rex.W repz sub insb mov lock in xchg rex.R (bad) pushfq cmc adc clc out movsb jae in or cli iret je cmpsl in lock or xchg mov (bad) jo (bad) sub mov stos stc ja callq callq (bad) scas fisubl cld rex.R rex.W out insl jmpq nop (bad) rcrb mov pushq adc and movabs jle pop adc or loope vmaxps subb add mov add fdivrs rcr sub (bad) cmp cwtl and xchg xchg fdivl adc add and xor adc or pop cmpsl (bad) mov rex.X es rolb iret push add (bad) rex.WRX xchg in sahf adc push lret mov rex (bad) pop sbbl clc add rex.W movslq (bad) cmp nop pop rex.X mov callq sub sahf rex.WXB sbb and adc mov js fstl pushfq lret xchg (bad) or rex.RB sbb xor (bad) int lock rex.WX mov mov movslq in rolb icebp (bad) (bad) rex.WRXB hlt xor out sbb (bad) movabs sub (bad) sbb (bad) outsl fmull movabs ficompl incb mov fwait jl fbstp in (bad) push fdivs es and adc add (bad) out xor nop and xchg test lods xchg in ficom (bad) imul (bad) (bad) loop (bad) xchg faddl cmc loopne stos lock movslq or cmpsb jo mov insl jl and (bad) mov rex.WRXB xor (bad) cld jmp es sarb int3 xor xchg sahf movsb out mov adc rex.WRX out add loopne xor rex.W rex.WB pop pushfq (bad) or adc and xor enterq (bad) mov mov gs js in jl std stos rclb fcoms sub push out mov xchg (bad) rex.W in sahf sub (bad) cld push add (bad) pop xlat and movsb rex xor callq clc xacquire (bad) hlt adc adc in (bad) out shll clc (bad) rex.RB jnp rex.WB (bad) (bad) cmpsl movabs out mov in (bad) mov mov rex.W rex.W and push and outsb rex icebp fs sub loope jl mov fisubr ror loop sub adc (bad) rex.WRB jo xor jno (bad) xchg add out rex.XB test addr32 addr32 pop (bad) or pop jmp jrcxz jg mov cmpsl (bad) or movabs je pop cmp sarb js or add hlt pushfq pop fs iret pop lock (bad) (bad) xlat add mov shlb sbb (bad) pop mov pop xor cltd push xchg rex.WRX rex.WRXB jno (bad) movabs (bad) (bad) (bad) addr32 (bad) jle (bad) sbb jmp jae pop add (bad) fnstcw rex.WRXB repz popfq iret roll rex.X adc jrcxz (bad) fwait (bad) rex.R rex.WRX sub or retq adc sbb js callq andl and in (bad) (bad) (bad) add sub (bad) (bad) popfq cmp rex.X insb and cld rex.WX and callq icebp movslq lods (bad) retq (bad) sahf adc rol (bad) push rex.RX movabs add pushq push jp xchg in (bad) (bad) fistpl ds int and or fwait clc imul in adc es rex.R jae mov mov (bad) mov xor fistpll (bad) xor iret jo mov pavgw mov sysexit (bad) jrcxz (bad) imull sarb test mov mov in add sbb test rex.W or fidivrl or (bad) jmp in push enterq pushfq (bad) cld int out adc cmp and xor (bad) addr32 retq stos lock test mov xchg int jae and inc cmpsl mov (bad) lods fldl rex cmp (bad) loopne cmpsl insl cwtl (bad) jp retq and (bad) mov (bad) es pop loope pop ja (bad) fdivrs cmp rex.RXB xlat (bad) (bad) xchg xor icebp mov rcr cmp rex.XB repnz jmp rex.XB fs sub jg xchg test pushfq rex.WXB push pushq rex.B out xor scas rex lods jmpq jrcxz gs cmp (bad) lods imul add shll (bad) xchg cs imul sub (bad) push or rex.WB retq (bad) imul stc movabs sub mov mov lret mov (bad) (bad) xor lret imul shrl add insl add xor scas or mov leaveq std ds xchg cmp int3 (bad) mov (bad) insl pop andb cmp movsb lock stos pushq callq sarb jrcxz jp or rex.RXB mov xor fbld outsl xor icebp idivl cmp jge xor mov (bad) cmpl pop (bad) (bad) repz (bad) (bad) lods fcomps (bad) neg popfq fadd enterq (bad) retq addr32 clc (bad) insb sbb callq jrcxz cli fwait (bad) loop addl mov rex.X es mov (bad) mov jo mull xchg mov hlt pushq jmpq cs (bad) and xchg jmp movabs movabs enterq rex.RB insl xor movabs sbb xor rex (bad) out (bad) cwtl test cmpsb sub sbb sbb and (bad) movsb addr32 insb pushfq sbb xchg cmp xchg xchg shrb retq test xchg test xor or mov enterq sub adc stc (bad) pop (bad) mov or movabs out adc sarl std stos fisubl mov (bad) cmp or xor iret rex.RB rex.WRX retq rex.X rex.XB movabs lret rolb rex.WRXB (bad) loop xor shrb jbe (bad) push movsl retq xlat pushq cmc mov sub (bad) cmpsl cli mov xchg xchg (bad) callq xchg in in add movabs imul mov in ds jmp (bad) push lods jae int3 (bad) iret sbb jbe sub pop movsb or (bad) (bad) cli movabs sbb (bad) out cmp sub jrcxz repz hlt iret mov adc pushq sbb adc mov jl jo cli in mov shrb icebp pop ss (bad) lock cmpsb insl cwtl cmp jae and rex.WRX (bad) out xor ss (bad) (bad) mov (bad) (bad) mov xor rorb (bad) jbe cmp insl stos (bad) (bad) xchg enterq insl loop (bad) in loop ss mov in out in xchg add fs mov xchg adc out ds (bad) movq sahf (bad) mov xchg cmpsl or int3 push xchg rex.WRX jle pop in or pop xor clc sbb cmp mov (bad) fnop iret mov sti add (bad) jge jrcxz imul add jge addr32 add test cmpsb jae and retq out adc test sarb rex.RB mov jp outsl loop out pop cwtl movsb rex.WRXB nop cmp loope adcb push in jge lea pushfq movsb jb rorb movabs in (bad) add and mov iret push lods shlb cmpsb nop cs icebp mov jno xchg (bad) jrcxz mov (bad) je cmp and xchg hlt test push jno sbb cwtl andl mov mov cmc pop (bad) (bad) jno sub leaveq and ja movabs roll mov stos ss hlt pop cmc jb icebp (bad) sub (bad) out sub ja pmullw loope pushq sub out es mov xchg xchg hlt adc cmp cmp xchg add movslq test and mov in popfq jmpq (bad) imul (bad) fnsave and insl or ja mov mov cli or orb hlt in stc (bad) cvtdq2ps (bad) (bad) mov clc iret jge jle sub rex.W (bad) or lret xchg sti sub stos xor sahf (bad) movabs movslq insl pop repz lret addr32 or lock rex.W pushq mov mov outsb xchg cmc scas jbe test mov outsl push clc movslq mov push movabs cs loop or add icebp mov test or sub jge test cld or and clc callq loop sub out sub hlt icebp enterq rex.WRX cmp cli imul pushq add jmpq or push (bad) mov jnp stos movsl (bad) sarb cld addl popfq bsf movsl test xchg int push (bad) insl (bad) addr32 mov mov pushq lock and (bad) mov movabs fucomip xor (bad) movsl clc mov jne xor repnz pop jno rex.RB push lahf pop test xor xor rex.WB ss out add rcrb (bad) out (bad) jg mov sub jmpq in cmp sub (bad) mov rex.WXB callq orl (bad) sub leaveq or int pop rex.W lock pop adc rex.WR shrl mov (bad) or and pop cmp loopne sub jb or xor and (bad) rex.WX gs jmpq out pop shrb push pop callq push cmp int3 cmp repnz std rex.RX shlb sub retq pop push rex.WRX sub imul pushq (bad) rex.WXB sub shrl mov loop callq sub insl enterq mov repnz in pushq or es jrcxz sbb hlt rex.WX xor rex.R add jno popfq out and cmp jae xchg xor repnz lods insb xor jle cli hlt (bad) or jae int3 mov and movabs enterq and js cmp push sub jmpq add mov xchg adc rex.WRXB callq out and mov mov jae (bad) lock or in je xor (bad) (bad) rex.RB lock movabs sub cwtl add insl insl add push sarb leaveq and lahf in shll movslq (bad) (bad) repnz mov jnp stos out test pushfq outsb (bad) (bad) adc xchg sbb (bad) movabs mov gs sub cld rex.XB cltd jne mov pushq in shrb mov cwtl jo roll js and movabs movabs int rex repnz jrcxz cs sub lods pop sahf (bad) stc jae jo mov loope xor rex.RXB jl or test fsub mov (bad) mov push loope mov std pop sub retq lods imul xchg sahf push nop out stc shlb jg cmp shl fsts push jmpq mov mov pop (bad) and lods fisub mov cmc stc lods in mov xchg cmpsl in (bad) or (bad) pop (bad) sarb fstl jle or jle or xor jno in movabs lock sbbl (bad) push mov rex pop (bad) jmp fdivs enterq pop rex.RX mov movabs pushq addl scas fbstp (bad) movabs ja sbb pop pushq fnop pop adc movabs scas outsb out imul sub cmc adc fildll (bad) iret scas mov mov lods xor sti lock and insl adc nop outsl subb xchg jnp test rex.RB lods scas ds push rex xchg callq (bad) xor std jl sub pop clc insl xor or fdivr lock jle,pt (bad) mov cmpsl wrmsr xor or cmc rep mov sub xor or movabs js add mov jo shr cli add clc or xchg or movsl mov jp fimul jns js mov xchg (bad) jne or ds (bad) and sar and stos out mov movabs (bad) addr32 push sbb adc jmpq mov outsl lret movabs movabs movsl jmpq cmpsl frstor icebp jb enterq lret (bad) xor xchg in mov rorl (bad) out (bad) mov (bad) sub mov mov xchg jae scas stos callq (bad) in (bad) or gs mov xchg jmpq or fsubrl fcomps (bad) (bad) cli mov (bad) test rex.XB frstor in stos imul xor movsb int3 adc in pop pop addr32 cmp int in cmpsb xor pushq leaveq ss xchg test fdivrs std cli repz scas (bad) xor test in add movslq xchg mov (bad) ds jbe test pushq mov sub (bad) mov or insb mov loop pop jnp shl xchg add pushq xor mov (bad) (bad) (bad) or movabs mov retq rex.WB callq mov rex.WRXB icebp jl jo scas pop and lods stos nop divb mov imul cmp add movabs fdivs gs insl in out or sub rex.WX pop mov cmp jrcxz out addr32 movl (bad) test out mov shrb (bad) pushq mov outsl jmp iret movsb xor (bad) xchg fcmovb (bad) in fsts sub and sbb (bad) fs movabs fisubl cmp sub (bad) nop rex.WRX rex.RB imul pop pop mov mov js push (bad) mov add rex.RXB iret fiadd lea in fs rex.WRX (bad) fs popfq (bad) (bad) in adc (bad) adc xorl (bad) mov xor out stos fwait outsb movslq jmp fildll mov cli cmp sbbl mov movabs test mov mov fimull xchg je (bad) and add loope outsl cli pop rex.W nop cmp and (bad) sub fiadd or ljmp stos (bad) xor outsb xchg imul jle movsb movsb fisttp out jno movslq subl (bad) fs jnp lret fwait (bad) cmpsb (bad) rex.WRXB in (bad) (bad) icebp (bad) icebp push jmpq cmpsl in hlt cs outsb sub or (bad) add (bad) js mov fcmovnu jno xor mov fs mov pop clc mov pop js sarl cs outsb (bad) xchg fimull je andl divl rorl jle shll jg cltd pop loope decb mov repz cs pushq jg push and rex.XB ds stos xchg xchg sbb in in rex.B sbbl or sub (bad) (bad) mov sahf adc mov mov mov pop mov insb (bad) (bad) movabs ja mov or mov movsl (bad) (bad) int3 mov (bad) sub addr32 xchg jmp sub ds lock and lock lock imul movabs rex.WRX xor fmulp icebp rex.WRX ds retq (bad) gs je (bad) lock in (bad) cmpsl in cli movsb jle mov loop lret iret sub (bad) (bad) clc repnz pop (bad) cmc jle,pt lods lock lock sub iret sbb (bad) retq xlat retq and (bad) mov testl cmp lods xor rex.WRX sbb ror movslq callq jmp pop adc or jge mov and add in icebp movabs sbb je and sahf pop lock movslq clc clc pop or je (bad) pop mov mov fildll lods sbb fwait mov add or rex.RXB in shlb loop sub movsb je pop (bad) (bad) lret mull mov sub push (bad) lock add callq pushq std addr32 or (bad) (bad) loop orb addr32 fidivl stos xchg movabs fildl nop in lahf (bad) repz mov cmp (bad) je (bad) (bad) clc test mov ds pop (bad) retq (bad) xchg in test outsb cmp and in andl iret (bad) cmp jl mov loope stos iret sbb callq stos andl jne movsb mov and or mov repz (bad) xor (bad) fistp pop lea xchg movabs repz (bad) movsb adcl (bad) imul decb sbb sti js (bad) adc adc pop iret cmpsb or cmpsb jle cmpq movabs shlb retq cmp (bad) xlat lret faddp sub jo mov imul or shrl leaveq stc sbb mov hlt outsl or ror (bad) xor (bad) pop fsubs rex.WRXB mov callq and clc push lock xor push (bad) jle test mov imul fwait fwait or fisub xchg fisubr xchg neg add pop ds cmpsl imul callq in out cmp or xchg rcr fcmovnbe pop and fmuls jmp (bad) (bad) xchg xor mov pop (bad) jo (bad) xchg test and jo mov xchg movsb stos retq (bad) out mov or jl retq and fdivrs xor mov callq insl mov rex.B jmp sbb xor stos pop add movabs and gs outsb retq (bad) clc sti push adc in jmpq sbb xchg mov sbb rcll sbb jo hlt (bad) lock mov or (bad) and loope jle or (bad) xor fisttpll xchg pushq insl mov mov jo pushq insb push movslq sbb loope pushq or mov mov xchg jmpq retq rex fistp cs rorl test (bad) movslq movabs rex.WXB xchg jge fdiv insb movsl lock movslq pop xor fucomi (bad) lret divl add loopne or cli jmp mov adc mov cmpsl std (bad) pushfq (bad) in push xor or add addr32 jbe (bad) rclb shl sti xchg sbb sbb (bad) es rex.RXB fwait imul out shlb rex.R mov lock enterq xchg (bad) (bad) push mov insl hlt nop cwtl iret xchg lock pop cmp (bad) cmpsb and stos insl in mov (bad) sbb (bad) or cmc jg (bad) (bad) shrl (bad) mov mov jl ror xor push adc sub in test loopne xchg jmp rex.RXB mov movabs jmpq mov (bad) movabs adc mov pop mov (bad) movabs repnz fisubrl out lock fbld jns (bad) rex.RXB rcll mov hlt sbb pushfq add (bad) shl out and (bad) mov jo and out pop sbb mov sub callq data16 hlt repnz xor cmp pop callq rex.WXB lret rex.XB cld scas mov add xor or and mov adc movsb callq jbe movabs (bad) enterq jg rex.XB int3 clc cmpsb (bad) jrcxz lods or jae loope xchg cmp (bad) adc cmp or int jrcxz enterq (bad) sti xlat jmpq nop test test fstpt repnz lahf push movsl push decl cmpsl lods xorl xor push scas sbb or cmp pop adc (bad) shr fistp movabs (bad) jo callq fmulp insl (bad) (bad) ja lahf sbb in or pushq lock jnp rcl push or imul stos stos add sub (bad) jmp jo jmpq test lods mov (bad) (bad) data16 int cwtl (bad) (bad) je nop (bad) fild pop push (bad) jg mov pop sarl sbb hlt rorl (bad) lods adc fsubrs sub mull fmull out or cs stos out sub loopne movslq cmp cmp movslq pop xor insl lea jrcxz pop movabs rex.XB rex.WRX faddp sub and push (bad) adc ror rex.WRB jne rex.X lock ficomp pushfq jo jae xor xchg xor imul insb add (bad) (bad) cmpsl rex.B test and lods imul test vmovddup leaveq insl sub lods cs xlat shrl cs xlat (bad) icebp jg frstor xor pushfq test lock scas mov loop movslq sarb sub (bad) add retq iret fildl mulb pop stos (bad) neg xor movabs cmp and mov xchg cwtl mov rex.XB xchg rex.XB jmpq or mov xor cmpsb fmuls mov not cmp mov ss rex.XB sbb mov adc sbb sti std or add test test cmp sbb sbb nop lock sub decb push push movabs fmull movsl (bad) push (bad) fwait sti sarl sahf int3 sbb out ja (bad) out out decl stos mov mov stos jo mov xor mov mov (bad) (bad) or int xchg push sbb movsb andl (bad) cmpsb pop jnp out add lret or mov in pop (bad) sbb add je mov (bad) cmp sub or in cmpsl (bad) ds lea (bad) mov notb mov adc stos push rex.RB xchg (bad) cmp mov in movabs and xchg xlat in pushq test enterq insl cmp rex.WRXB xchg mov nop sub fnop mov in sbb xchg (bad) or (bad) in xchg cwtl mov xchg movabs lods add adc mov retq mov push out scas rex.X cli in rex.RX push fisub mov mov insl (bad) lret rex.RXB mov (bad) cmpsb jo (bad) rex.WXB xor js jle or fmuls out mov (bad) rex.WXB scas gs mov jle sub (bad) or cli sub jne div insb hlt jg or rcl movabs movsl (bad) cmc sub sahf je and movsb xchg and jge rex.WRX leaveq (bad) retq rex jae (bad) xchg cmpsb or push scas adc test (bad) out hlt jg sub lock out rclb xchg jae rex.RX cmpsl sbb mov add sarl xchg movsb (bad) addr32 and sbbl cmp rex.W sti outsb add push sahf cs jno scas sbb (bad) insl jmpq jo mov (bad) hlt gs divl leaveq xchg jmpq sahf rex.XB imul (bad) mov (bad) pushq enterq test rex.X (bad) insb cmc fistpl rcl and (bad) cmp (bad) ficomp or callq jno jrcxz scas cltd mov lock fwait icebp mov push fwait push lahf (bad) js sub lods scas (bad) push sbb or sub (bad) xchg mov test sub (bad) sub (bad) out fdivp imul rex.WXB pop mov ss (bad) popfq or xchg (bad) test mov pop lahf sar (bad) int cli lock test or jo (bad) stos sbb loop mov scas in mov mov (bad) and mov sbb xchg cmp rex.XB es sti rex.WR sub or mov xchg cli js xor repz loope (bad) cmpsl (bad) rex test (bad) jmpq (bad) or (bad) cmp (bad) in sbb (bad) (bad) out outsl callq or (bad) in pop movsb insl cld test (bad) fs cmpsl xchg sub or test mov add jbe (bad) cli (bad) and lock (bad) clc jae (bad) loop mov mov pop je out (bad) rcrb mov movsb or (bad) movabs (bad) push and popfq xchg sbb rex.WRX jno push (bad) mov es mov cs and callq adc fdivrs (bad) cld movabs lret sbb and sarb (bad) xchg callq and fild pushfq xor jle rclb adc mov rex.WRX ds movsl mov movabs xor pushq lods (bad) push movabs push divb rcl pop sbb icebp (bad) jae mov (bad) fstl lods icebp movabs or callq rex.WRX xchg (bad) test cld imul or rex rex.RXB (bad) fadds (bad) shrb loop (bad) sbb mov xor insl (bad) stos pushq retq rex fs adc (bad) lahf cwtl xchg mov push bswap adc rex fbstp lock sub test in or fiadd iret fsub stos and add in test out (bad) cmp subb leaveq in and adc sbb shrl lret pushq or and rex.WRXB test rex.RB xchg cmc sub (bad) push or callq ds (bad) sub cld retq and (bad) lahf retq sbbb (bad) js clc pushq lock rolb xchg pop stc pushfq (bad) jge cmp (bad) mov dec cmp sbb xor movabs xchg (bad) (bad) lock (bad) in int stos (bad) fidiv sarl sub (bad) cmpsl out jo cmpsl out outsl insl fldln2 test mov addr32 xchg data16 pop sbb scas mov or hlt (bad) lock (bad) mov rex.R idivl cltd repz rex.RXB (bad) divb push lods (bad) or rcr icebp cmpsb cs mov rclb and imul in adc jns (bad) cmpsb jl pushfq movsl jns mov and mov jp jmpq lods nop gs test sarb (bad) movslq ja enterq rex.W (bad) (bad) sbb (bad) jae mov sub insl cmpsl nop mov out (bad) lea addr32 mov or popfq (bad) (bad) in addr32 in and xor (bad) pop clc (bad) je hlt insl mov addr32 rex.WRB lock xchg rorb test xchg retq mov (bad) iret (bad) and add movsl cwtl (bad) cs iret sarl sarb xor (bad) (bad) sbb rex.X (bad) test lods fcmovne mov (bad) sub rex.B sbb xchg jmpq or clc jo jmpq mov jo in fnsave xchg jrcxz xchg mov (bad) rex.RX repnz fnsave jmpq pop mov cmp lods rcrb andl xor mov jne in xchg nop gs in rol lock psadbw push rex.WX in addr32 sub mov (bad) cmp pop imul mov (bad) rex.WB enterq callq scas (bad) movabs sub pushfq sbb pushq lock (bad) (bad) int outsb (bad) lock (bad) in rex movslq xchg neg mov sbb pushq xlat rolb mov es pop nop lods (bad) sub mov mov rex.W (bad) jns inc rex.RXB out mov callq ja movslq mov loop cs iret lods cwtl jne (bad) imul js scas sbb pop data16 xchg lret std movabs stos loop jmp xchg retq xlat pop xor sbb mov (bad) jrcxz mov out iret imul callq repnz callq xchg out mov insb callq rex.W rex.RB test lock or xchg xchg fwait adc (bad) fistp movabs or cltd loop xlat (bad) nop xchg (bad) sbb push addr32 movsl sub fwait pop pushq fs ljmp fldenv xor xchg jo fnstenv xchg icebp mov push xlat mov mov pushq mov cmc adc decl fidivl loope fdivrs movslq mov mov test (bad) callq (bad) or xchg stc (bad) xchg fsubrl sti jp movabs cmpsl ror jnp callq mov jmp (bad) mov xor in movabs (bad) (bad) mov push push pushq lock xchg dec shrb cmpsl (bad) test lock mov out stos shll lods (bad) lahf lahf mov pop mov loope mov (bad) test (bad) insb jmpq in mov (bad) div scas sub adc (bad) cmp (bad) movabs icebp and mov (bad) cmpsl fistl test xor adc sti cmp repz js push (bad) mov rex.WRXB rex.WB and callq mov es jbe insl mov (bad) (bad) fwait es xchg rex.RB fs mov punpcklbw leaveq sbb and icebp pushq pop jle jno rex.WRXB mov cs xchg (bad) mov mov mov shrb imul int3 shlb xlat fcmovnbe stos xor vmptrld or mov xchg jno (bad) std nop jmpq imul rcll ja jmpq sub mov jl mov sub xchg jo leaveq xor vpshufhw jo push (bad) (bad) gs mov xor scas fs xchg rex.RB ds cli mov fcomps test stc mov xor adcb (bad) (bad) mov cmp adc movsb xchg (bad) jg pop lods (bad) repnz sbb imul mov rex.WRX sub rcr (bad) clc iret sub cltd clc sub cmpsl (bad) test imul mov jne frstor push mov icebp mov jle mov and cs test lahf addr32 pop xor (bad) mov ficomp test cmpsb movabs retq loop mov lret fdivs jmpq movabs sub imul ja ljmp adc (bad) mov js mov (bad) sub mov (bad) xchg cld cmpsb imul jo or repz loope movabs callq int jnp (bad) imul jae mov mov mov push movslq (bad) xor xor js pop jae xor (bad) and rex.RXB shlb push lods nop sbb push xchg or or movslq adc and rcll add testl lods cmpsl (bad) mov sub or and xor mov jns rolb in test int nop jrcxz (bad) and rex.R movabs xor movabs jp pop js (bad) lods movslq movabs jg xchg cmp repz movslq enterq xlat (bad) adc sub jmp add (bad) scas enterq pop xchg (bad) int3 lock callq stc imul out cmp sbb out cmpsl mov jle cmp or jo ds (bad) stos je (bad) rex.XB leaveq imul test fisttpll rol or in xchg lods jge (bad) lods enterq (bad) testb adc or loope callq loopne stc (bad) out and rex.W (bad) sub cmpsl xlat rclb je (bad) jg std cmp fistpl cmp loope adc movslq jmpq adc imul frstor imul and je movslq ja fbld xor or rex.RX adc xchg in mov cmp out fwait jbe cmpsb pushq test popfq test rex.WRB (bad) push (bad) insb mov jbe testb (bad) xchg (bad) mov lret out loope testl rex.W jnp icebp or and iret push mov mul mov out xchg test add or jb push fistpll xchg icebp (bad) fbld sahf (bad) iret (bad) jae mov outsl retq sub and jle mov sbb pop movsb cmp mov decb rex.WR movabs sahf movabs (bad) or movabs xor movabs mov add std jb lret adc and rex.WRXB fs (bad) addl mov stos insl in adc sub (bad) xorl lods cmp (bad) fcomps or fnop cmc cmp xchg xchg fwait sub (bad) push iret or insb test xchg jl xchg cmpsb (bad) cltd cld stos in cmpsl (bad) imul jne or or (bad) mov repnz xor cmpsl jmpq or rcrb xor ja adc cmp or movsb rcll pushq sbb jnp stos sbb add movabs jmpq lahf (bad) (bad) rex.RXB movsb loope movsl psubw push rex.WRXB ror (bad) faddp vdpps clc (bad) movsl jrcxz retq push callq add retq stos iret sbb hlt cmpsb in retq cmpsb scas jge repz fs jp or shrl or insb rex.WRX es addr32 mov enterq sub rex.RB and cmp imul xor shrb (bad) es adc rex.WR (bad) mov ss stc rex.WRX addr32 fisubr sub add movabs (bad) and add sahf adc popq in rex.W mov callq xor xor mov jg fldl2e (bad) test rex.RX rex or sub out and in xor in mov sbbb pushq (bad) imul sub or cltd movabs xchg stc orb jmpq rex.WRB pop (bad) sti jg xchg outsl push je and loopne movslq push add (bad) outsb movslq test lret xor movsl push mov clc mov fcoms (bad) rex.WRXB adc (bad) and (bad) sub rcl adc (bad) cmpsl (bad) callq (bad) outsb sub and xchg ror mov jae rex.WRXB cwtl or lock fldt mov sub jo pop jle lea (bad) stos fs test int3 add (bad) mov push (bad) (bad) or xchg loop and (bad) icebp iret xor loop movsl insl mov cmp mov mov xor sub sbb jl ds retq pop loop fistl (bad) pop sarb nop mov cmpsb (bad) rex.WR lret loop imul retq fisub callq sub mov (bad) jrcxz int3 iret repz shrb mov pop sbb pushq lret mov (bad) and sub sbb xlat push test int out std fild repnz (bad) mov jle fwait add sbb cmp lahf adc (bad) negl adc lret (bad) imul cmp (bad) jb in push mov (bad) pop nop xorl lock movsb test or fstl mov fs ds rclb outsl movabs mov push push cmc outsl sbb mov shll retq pushfq (bad) negb xor sbb ficomp and out add (bad) ficomp pop or jnp (bad) cmpsl repz jno sbb movb movabs rex.WXB (bad) cs rex.XB (bad) loopne xchg xor outsb in jo iret stos (bad) loope int3 jmpq adc lock fistp jbe (bad) lods mov outsb rex.B repnz rcrb rex.RB mov (bad) add xor mov sub xor scas iret movsb and jo pushq (bad) mov lahf or popfq (bad) push ds or rex.B xchg and mov lea mov movsl mov sti sbb lods ja in je retq xorl rdtsc mov rex.WX loope roll retq (bad) clc test cld movsb shrl shlb scas add rex.WXB jmp or cmc cmpsb jg (bad) iret movabs or (bad) jnp mov (bad) (bad) (bad) ss cli pop cld and fmul or mov cmpsb jnp movsb sarb mov sbb (bad) (bad) cltd mov retq jrcxz cmp out int (bad) cmc and enterq jo (bad) addr32 scas mov loopne imul fdivrp cmp retq movsl lea pop out data16 jns add test pushq or insb movabs and lret (bad) pushq rex.RXB (bad) imul callq fs jle sub lock sbb testl or int (bad) test sbb xor push mull rex.B mov data16 (bad) (bad) adc int3 jbe jnp pop adc clc mov (bad) rex.RXB lock pop (bad) rex.W (bad) sti rex.XB (bad) or in lods jo (bad) mov push clc (bad) sbb lods or xlat (bad) rex.WRX fs iret (bad) jle sub orl movslq (bad) ja hlt pop ja repz lret mov shrb movsb shlb and addr32 fcmovb (bad) out divl cmp push sbb (bad) cmp lea cmp rex.WRB out iret push std iret je stos (bad) cmp mov jle sbb pushfq gs iret rex.WRXB callq jo (bad) in mov (bad) xchg mov and sahf mov (bad) mov addr32 rex.W mov rclb movsb std pushq rex.RXB lock cli (bad) mov loopne gs cmpsl push push frstor xor (bad) xchg sub or jecxz callq callq (bad) scas jns (bad) fimul jl pop movabs or cmc adc movabs mov out rex.R js imul test popfq jg test and add icebp pushq loop (bad) jo sti xchg subb hlt pop stos pushfq push sbb push test cld xor (bad) cmc callq sub mov scas cli (bad) pop cmc (bad) add pushq lock cmp and sarl (bad) outsb xchg mov (bad) adc shrl ja pop (bad) in mov in test movslq xchg sbb add xchg xor rex.RXB mov (bad) jne push or enterq xor sub incl int3 (bad) sub icebp (bad) repnz xor rorb jo std lock js negb rex mov movabs lock push push and pop (bad) (bad) lods int3 movabs rex.W rex.B stos push fdivs movabs adc mov sub mov icebp fcmovbe cmc add movabs js or (bad) sub rex.RXB mov movabs in add stos mov cmp int3 sub cmp jns nop rex.WRB shll lock nop sub gs sarb in (bad) sbb jmp insl in push jrcxz ja test cmp movsb (bad) insl or scas pushq lods mov xorl push test movslq (bad) fyl2x pop rex.R (bad) (bad) cmc pop testb cmp add outsl xchg test enterq movabs xlat (bad) cmp decb movabs pushq sahf out sbbl popfq xchg jb test (bad) mov (bad) or and cs and mov mov and sbb out lret or mov mov and mov andl mov mov imul jle mov movabs (bad) movabs add repz (bad) test cld push rex.XB callq movsb (bad) (bad) mov cmp std iret mov and out callq (bad) push fidivr jb test (bad) push (bad) popfq (bad) sbb push rorl pop rex.RB xchg psadbw rex.RXB cmp movabs jle repnz sbb retq rex rex.WR lods int out push mov test and (bad) sub hlt mov ss sbb hlt int3 clc je,pt (bad) (bad) jrcxz (bad) fsubs fist movslq addl (bad) jmp repz callq jbe jrcxz xchg movabs and adc (bad) pop (bad) or lods imul hlt rex.R rex.RXB pop jb movsb gs enterq test adc mov (bad) (bad) js fwait iret rex.RXB mov repnz pop in insl lock (bad) and xchg sahf sbb or pushq sub rex.WRX gs loop jb (bad) and (bad) push (bad) fs (bad) xchg out cmc jmpq jne int3 in xchg push mov push sub nop cwtl or jg mov cmovns xor movsb adc fbld cmpsl sbb cmpsb xchg out mov jb iret (bad) sbb and out cli sarb lret mov rex.W cmpsb sub sub lods xor or orl pushq mov mov and fdivp movabs mov push lret push pushq xchg icebp xlat (bad) cmp je je loope and mov (bad) cmpsl and xchg pop movslq leaveq add (bad) fnop mov add movsb lock push lock sbb fstpl cmp rex.RX mov rex.WR mov mov rex.WRX std shlb stos rex lret fnstsw sub out mul fbstp and adc shrl xchg (bad) (bad) leaveq xchg rex.XB (bad) sti rex.XB lock cwtl in (bad) add cmp rex.XB mov rex.RXB jo (bad) jl adc lock mov gs jae sbbb mov (bad) repnz out in xchg push pushq lods callq cmp (bad) fwait sti movabs js mov leaveq mov movsl mov xor movslq jp leaveq icebp fwait ja cmpsb xchg lock mov in xlat sarb movabs push (bad) pop mov fisttpll andb xchg movsb insb (bad) sub test xor in movslq cmpsl addr32 sub iret movswl lahf scas imul fs or stc out push iret out cmpsl or cwtl enterq (bad) jmp fsts shrl fisubr lock or (bad) ds add clc sub fisub jp (bad) (bad) and or ds sbb lock cmpl hlt mov jb or (bad) pop sarl mov mov test fmul out sbb enterq (bad) push (bad) mov sub xchg xchg loop fwait cltd callq mov rex.RXB rex.B out jno mov sbb or cltd (bad) retq cmp lock jae retq stos lea sbb pop in addr32 int shrb xchg repz test in mov pushq fisubr (bad) xor scas out or (bad) xor xchg cltd imull (bad) (bad) rex.WRXB lock (bad) xor in rex.RXB fmull (bad) cmpsb cmpsb pop push cli repnz add push out (bad) movabs callq sub mov retq (bad) or sahf rex.WX pop fucomi sbb retq xchg scas mov roll mov (bad) xchg fbstp test pop int lods insl adcl (bad) cmpl or in (bad) xor pop imul cmp shrl sbb xchg and jmpq (bad) stos lret in adc pop shrb mov sbbl pop insb rex.WXB movsb rex.RXB jbe sub xchg (bad) outsb cwtl ror movabs movslq in pop jl jo mov iret or or sahf cmp mov iret rex.WXB push sub sub movabs mov push mov movabs (bad) (bad) xor int3 (bad) pushq scas movsl mov mov (bad) (bad) (bad) cmc pop (bad) push cli mov imul mov mov mov enterq xor callq sbb (bad) push push es fwait add (bad) mov popq enterq pop sti jmp mov retq (bad) mov sbb xor (bad) push movabs addr32 in pushq jno mov cmp callq leaveq add push adc callq or and enterq fistp cld js cmc movabs callq sub (bad) (bad) cmpsl jnp and (bad) lret outsl xchg movabs mov mov xor movsq fnstsw rex.X fidiv and callq (bad) pop retq rex.B sahf sub lock pushq jbe lods test (bad) cmpsb movabs (bad) mov movsb testl cli mull pop cmp sub or mov jp lea push lods (bad) xchg ja xchg retq fstpl rex.W std loop cmc (bad) or pushq (bad) iret rcr pushq rex.B addl outsb jrcxz mov leaveq divb movabs clc sub (bad) ja popq or movslq insl lret lock (bad) (bad) jbe or mov in rex.WX mov sbb adc int cltd iret xchg mov loopne jp ds cmp pop jne scas or insl mov rex.WRXB rex.WRB loop rcrl js mov rex.WX xchg mov cs fsub or push outsl fisubr (bad) jns insl xchg cmp retq cwtl and or (bad) mov cmc jrcxz pop mov fistl cwtl retq mov repnz fs in cmc nop loope int out xchg lahf movabs orl (bad) movabs push fs sahf pop mov scas leaveq out (bad) rex.W loope xor test and (bad) subl push insl push sbb pop add pop (bad) pop shll sub stos xor pop mov (bad) jo (bad) pop (bad) (bad) movabs xchg mov adc (bad) fldlg2 test sbb push insb or fs gs cmp nop add pushq cmp rorb movabs scas xchg (bad) fs ja lods shl enterq lahf xor sbb (bad) fisttp lea mov (bad) movsb xor cmp xchg jo popfq callq data16 out (bad) (bad) adc lahf sub sub movabs stc sub test retq mov rex.WR rex or push fdivs clc repnz xor out add adc and mov in and cs cmp mov xchg adc (bad) push lahf ss fildll mov xor sahf add mov retq stc loope sbb popfq lret iret xchg ffreep rorl rex.R out mov add hlt decl sbbl repnz mov push adc fwait popfq ficoml scas mov add sub cld sub (bad) mov push xchg mov mov or mov fmull sbb mov cli (bad) pushq sbb insl notb add xchg div push mov jns sub sti mov (bad) adc callq test test fidivl or mov (bad) xchg cmpsl repnz rex.WRB jrcxz or push fsubrs mov mov test in callq and lods (bad) rclb mov jge mov (bad) jmpq out (bad) (bad) neg sbbl xchg insl xor (bad) xchg stc sbb xor loope fwait movsb jmpq sub cmc callq fs cmpsl fwait shlb xchg clc xchg xchg cmc jp mov add cltd mov (bad) incl or cwtl lods (bad) (bad) movabs in or (bad) or jb out (bad) pushfq sbb jl and push adc (bad) sub sub jbe add callq pushq mov and sub jo not scas retq mov mov mov jp rex.WXB cli movsb imul (bad) andl lods sub lods cmpsb out cmp cltd pushq pop sti rex.WRX (bad) cmp xor xchg xlat enterq (bad) in and jnp mov (bad) stos mov fsubrs xor cltd movabs rex.XB mov cli xor cli adc ja scas sbb jbe mov mov jp pushq adc rex.RXB (bad) mov scas rex.RXB sbb (bad) test (bad) (bad) enterq sub sub in jl repnz pop lret movabs retq cmpsl xchg cmp fadd cmpsb rex.WB (bad) test loope stos ja mov add sbb or fdivr (bad) (bad) lock adcl sub (bad) xor pop jns (bad) rex.XB imul sub mov adc (bad) fmull add rcl mov (bad) add mov clc sub jo sahf (bad) (bad) rex.WRXB cmp pushq jmp rex.WXB scas mov mov pushfq mov push outsl out (bad) rex.RB adc (bad) iret push lahf and scas scas lahf enterq add (bad) clc or mov cld xlat imul data16 in or or jns int sahf mov mov or sahf rex.B iret mov jp xchg adc and cltd sbb jno orb sbb nop pop outsl divl rcrb cld sub sarb mov cld rex.WRXB sub test sti (bad) sbb nop push sbb test jo (bad) fs mov (bad) xchg lahf in fs lahf lret lahf scas (bad) sub jp (bad) cmp rex.WXB es push (bad) callq add (bad) addr32 out rcr out cmc outsl cmp or and pop jmpq mov sbb xor adc int test int jae rex.WRXB or lock pop mov mov adc (bad) mov sbb ss retq movabs cmp mov mov (bad) rex.R xor imul or or mov push scas insb rex.RX mov rex.WX pop cmpsl pushfq adc pop mov add callq subb push mov push and ror lea rex.WRXB rex.WRX out jl lods fs push test sbb cwtl mov xorl jnp jrcxz insl fiaddl sub mov mov sti jge fsubrp icebp sub jmp imul lods rex.R loopne in int fmuls (bad) (bad) out jl repz loope push jmpq divl in cmp mov xchg scas (bad) adc iret mov jrcxz jrcxz icebp rex.RX retq mov data16 jg lods in retq hlt sarb xchg (bad) mov xchg sbb retq or (bad) cwtl jrcxz add mov stos push (bad) sbb stc fistpll or rex.WRXB (bad) (bad) mov js mull cmp jns (bad) test (bad) mov or (bad) (bad) mov movabs xchg scas pop fcmovbe (bad) jae lahf rex.W rex.WRB repz jp,pt pushq movsb fwait and and and mov pop mov stos and cmpsl (bad) fucomip lock (bad) rcr (bad) imul repnz push sub or (bad) jmp jnp pop loope out stos imul (bad) jb cmpsb shll mov stos jrcxz popfq pop hlt jmp pop jmpq insb rex.WRXB adc movsb stos sbb rex.WRXB leaveq xchg sbb (bad) adc movslq orb pop cltd out movsb icebp rex.XB rex.RX test pop (bad) sbb (bad) icebp xor nop jg jnp xor or callq and in xchg repnz (bad) idivb (bad) insl out (bad) sti xor cmp (bad) or jle (bad) nop xor and in sbb (bad) movabs (bad) ja callq fldt (bad) in cld lods cmpsl (bad) jbe sbb hlt in xor mov sbb mov shll movabs sub sub pop pop (bad) mov jl cmpsb (bad) test pop xor mov js nop enterq or ds in jb shrb callq fsubrp gs mov cmp iret js loop (bad) icebp clc xor adc rex.WR and sub in cwtl (bad) mov (bad) cld xor (bad) (bad) lock pop jbe (bad) and mov add and ds and movabs and sbb rex.WR cmp cmp mov fbld ja int sbb (bad) lret fs movsb (bad) rex.B mov pushq mov sub sub xchg add sbb jae pushq (bad) pop (bad) imul jmpq (bad) sub lods mov test movl clc imul mov loop sub sbb rex.XB movabs sub orb callq shrl adc sbb lret outsb stos out (bad) frstor cmc mov sub mov xchg jl jmp cmp xchg and test jmpq pop (bad) mov adc sbb sbb adc pushq (bad) cmpsl (bad) adc mov adc hlt (bad) mov movabs imul loop lret adc pushq (bad) cmpsl and icebp in insl xor js (bad) int3 in jno (bad) bnd cs (bad) (bad) enterq movabs (bad) repnz movabs out xchg ss in popfq cmp rex.WRX cld stc loop cmpsl int3 lock xor in (bad) adc (bad) mul jnp pop int3 (bad) cmc movsb jge testb ficomp jrcxz movsl callq pushq (bad) fistpll jo push callq jb movslq add sbb cmp xor and (bad) add jbe retq test cwtl cmpsl xor cmc xor mov (bad) xor xchg mov callq mov sub (bad) (bad) lods push insb sti enterq gs and (bad) ss xor retq (bad) test sbb fmuls flds pushfq sub lods in xchg or add test movups mov pop nop jle adc fdivr iret (bad) jnp add pushq retq xchg xor (bad) xchg jnp jg and lret fadds vunpckhps data16 jmp icebp cmp sbb rorb (bad) in add mov iret mov mov or mov in shl fs sahf mov (bad) or mov adc rex.RXB repz (bad) pop add (bad) sbb xchg jrcxz rex.WB fsubrp rex.R mov (bad) push retq or sbb pop cmp clc mov or (bad) repz add js and push cld rex.R negl test outsb insl lock mov mov mov sbb lock mov pushfq mov out rex.WRX rex.B or lret mov test rcll (bad) (bad) cmp (bad) outsl adc fs imul retq or pop fs push sbb stos loope and (bad) iret repz repnz (bad) jno out and xor test hlt rex.X test (bad) (bad) mov nop retq xchg cmp stos in cs test adc rorl popfq movabs pop rex.WRXB pop jne retq add lahf cmp (bad) xchg cmp push je rex.X cwtl pop rex.R callq (bad) (bad) xor or cwtl (bad) mov cld and (bad) mov jbe jo lock pop rol fisubr fstp nop or out idivb mov loope rex.RX cld cmpsl lock test in or retq xchg ds in and mov cmpsl insl mov xlat out test lock vorps movabs add (bad) enterq mov jo mov insb movabs jbe cwtl cs pushfq rolb adc cmp lea subl push xchg pop movsb mov out loop clc gs or cmp faddl sub (bad) xor (bad) cmp popfq mov mov mov (bad) mov (bad) cmp pushq (bad) sub push add mov cmp (bad) in sarb and or mov pop (bad) or rex.WRX xchg (bad) or movsb rex.WRXB movsb push (bad) js xorl cwtl cmp xor cmc repz fidiv pop cld (bad) cmp (bad) (bad) leaveq mov rex.WXB (bad) push mov rorl rolb cli sbb cmpb push rex.XB mov add (bad) sbbl outsl mov pop subb (bad) (bad) gs rex.WXB (bad) test and fmull sbb sbb movabs xor jnp xchg mov sub sbb lods lock push mov gs fist jl stos callq ss jnp (bad) mov adc subb xor lock retq jnp cmp jnp out xchg stos retq stos add rex.WR or iret lods loope (bad) loope in lods cwtl movslq sbb and fildl cltd mov scas hlt pop sarl push rex.B movabs movsb xlat rex.R icebp (bad) jg (bad) xor xchg mov pop fbld pop sbb in in hlt scas lret (bad) loope mov jbe sbb pop fisttpl scas mov (bad) imul mov fmuls and jg pop xor and retq out imul je shl (bad) hlt (bad) rolb (bad) rorl movabs leaveq movsb in hlt movabs callq cs mov loopne cltd popfq and jl retq xchg (bad) (bad) rex.RXB add jns jl out (bad) jbe rol (bad) mov xorl hlt movslq sub xor mov pop callq push in or movabs pushq pop sub xor mov lea scas jnp icebp outsl pop (bad) icebp int3 (bad) xor add ficomp mov cmp pushq je mov movsbl mov jno je (bad) add in sbb sbb movabs rex.RX (bad) imul pushfq xchg repz fisub or movabs mov lret int jmp mov rex.WB (bad) movabs (bad) lahf or idivl in out sahf xor fisttpll (bad) rex.XB sbb sub add shl retq adc (bad) sub rex.WRXB rex.RB fwait mov loope scas sti ss test popfq push and lret popfq or je sahf rex.WX (bad) movslq add nop and adc movabs pop lock fwait clc (bad) icebp sbb (bad) loope and sahf cmp sub movabs cmp shll mov mov rcl mov mov xor (bad) adc (bad) (bad) out idivl rex.WX cmc mov movabs ljmp jle vcomiss rex.R mov rex.W rex.WX lcall retq leaveq push jmp (bad) (bad) (bad) xchg (bad) movabs movsl pop sub jne (bad) pushq sub push fisttpll cld mov in or push fs repz lret out clc or rex sbb addr32 vpmulhw mov int (bad) fs (bad) (bad) adc cmc je pushq cmp mov mov xlat jbe fadds test int imul (bad) sub (bad) rex.WXB and popfq fdivs jb jge xchg fistpll mov out sbb (bad) fwait movsb movl mov fs (bad) rex.XB es mov (bad) rcll push lods stos in xchg in cmp mov sbb (bad) or shrb jrcxz test mov (bad) pop xchg cli fbld cli movsb mov and (bad) adc rex.RX sahf test mov shlb push rex.R (bad) in cmp add sbb jo jle xorb movslq cmp cmp xchg movabs jnp jnp sbb rex.B mov add pushq (bad) shll enterq (bad) ljmp (bad) addr32 ror (bad) sub jle rorl xchg sahf neg jo shlb addr32 (bad) pop loope mov add (bad) movabs icebp mov sbb cmpsb loopne gs lea and adc mov rcl push mov divl jne in xchg xchg adcb rex.WXB icebp adc mov ljmp pushq (bad) or out out fisubl xchg in fs xchg fiadd lock scas xchg ficom out pop sbb rex.W mov fnstsw push rex.WRX ja js (bad) stos div xor out mov pop jae (bad) movsl and mov repz (bad) jl repz cmp jmp (bad) fcmovnbe hlt lret (bad) out out insl cld push (bad) lock mov iret in add rex.WR sub mov xchg jae movabs ja push rex.XB rex adc loop scas rex.WRXB fs cmc rex.WRB stos cmp add nop cmpsb rol (bad) or mov adc (bad) cltd push hlt fidiv test test adc addr32 out movslq fstl addr32 (bad) mov xchg divb lods mov mov in iret adc jmpq jrcxz xchg negb and fs xchg cmp insb movsl (bad) cmp in mov nop enterq cmpsb push fisub movb hlt gs xchg sbb xchg movsb outsl lahf adc loop mov popfq (bad) or xor mov mov pushq pop sahf (bad) adc test mov cmp negb xor pop outsb stc rex (bad) jle adc leaveq add (bad) test cmp insb xchg and push (bad) callq movslq movabs sub sti pushq cmp jge fidivl fnstsw icebp jle mov std or jg fadd (bad) (bad) sub jo mov in fdivr (bad) fstpl add (bad) pushfq je jne adc shlb insl movsl iret stc jmp push enterq mov scas retq jg jnp lods (bad) test pop hlt rcrl adc jnp mov xor iret cmp (bad) (bad) jb push fs lret lock and loop lahf sbb sahf sub push fldcw cmpsl xchg cmp negl shll fsubs add mov cmc mov (bad) lock or repnz cmp sub mov je or rex.WR fs or insb xchg add push cmpsl test mov repnz (bad) mov rex.WXB pushfq sbb test add scas rex.RX outsb xchg lock fwait pop cmp mull out xchg rex.WRX test xor mov int3 (bad) and (bad) (bad) pushq mov clc (bad) pushq mov jb pop cmp mov stc test rolb iret pushq (bad) stos (bad) or lock (bad) (bad) (bad) (bad) cmc (bad) cmpsb jo mov cmp sti mov cmc (bad) mov mov hlt jo fs shl sbb mov rex.RXB (bad) (bad) jae retq pop movabs fucom (bad) mov mov pop cmc xlat in cld fnsave clc add mov leaveq rolb sbb fcomps add movabs iret clc movsb mov in enterq rex.WR and adc out cmp out sub out test or jb cmpsl (bad) xchg repnz in mov jno (bad) testb (bad) fild mov jbe gs mov iret outsb (bad) repz lea nop rex.WXB add jmp adc movabs jo ds repz sub js and iret mov scas mov imul cmpsl incl cltd and mov insl (bad) iret sub mov vprotb in push xchg in test rex.WRB out lret int3 retq div or and jnp mov loop or sbb (bad) cmpsl pop pushq mov push sahf insb (bad) rex.X lret js js nop (bad) sbb (bad) sbb cmp sti mov movslq (bad) notl rex cmpsl xlat mov cmpsl imul (bad) (bad) sbb cmc (bad) push (bad) lret rex.WRX rex.W mov rex.WXB cmp mov (bad) (bad) cmp repz mov (bad) mov (bad) mov rclb bnd add fist ja (bad) sbb pop lret ja mov pop cld adc rex.WRXB stos es rex.WR jb fadd sbb callq cld rex.RB or sub iret and (bad) sub hlt pop or (bad) adc cmpsb out stos rex.RXB (bad) (bad) pushq rex.WRB cs lock pop pop (bad) or notl pushq add pop retq adc fidiv icebp and hlt (bad) scas (bad) fs add jnp pushq int test xchg scas jmpq adc mov mov (bad) xor insb xor pop sub and rex.WXB sahf rcr insl sbb xchg mov (bad) mov jae pop and xor (bad) jns rex.WRX in rcrb cwtl sahf (bad) mov (bad) rex.R jo pop mov (bad) faddp (bad) repnz lea jne mov xchg in (bad) pushq test ja jrcxz pushfq (bad) stos adc (bad) enterq fstl loop mov sbb outsb lock lock (bad) xchg or mov movabs adc mov in push lods sbb mov mov mov (bad) mov sbb xchg (bad) lods mov or xchg cmp (bad) in lahf movabs movslq pushq retq fidiv (bad) add jo popq icebp pushq movsb movsl or (bad) movsb (bad) mov xlat rex.XB (bad) and and jp adc add rex.X sub cmp cmp lods mov out push push retq (bad) stos xor xor (bad) stc mov mov pop cmp add cmp in lock es rex.WRX (bad) push ficompl jle rex.WRX fs sbbl and int3 add fwait (bad) sarb mov mov and repnz sbb jmpq mov enterq xchg cmp lock mov test mov sti pop jmp sti lea (bad) (bad) xchg (bad) sub rex.WRB es insb mov xchg jns jge mov (bad) repz xbeginq lret and (bad) in (bad) in ds icebp push (bad) rex.WR in adc and cmpsb std push out mov stos sbb xlat mov pushfq test sbb (bad) js (bad) jb adc je out rex.WX cs and (bad) repz jns mov sbb outsl mov and push rex.WRB fnstsw (bad) iret sub pop repnz and (bad) enterq nop (bad) (bad) nop or lret (bad) in callq mov or pop movsl out mov out leaveq mov out clc movabs (bad) fnsave rex.WXB sbb retq lock movabs (bad) popfq (bad) callq jrcxz push rex.R (bad) ds or sbb fcoms and mov mov mov mov mov retq or push mov add es (bad) xchg jmpq stc (bad) xor sbb in pop ja mov movabs icebp movslq or mov (bad) je (bad) cmp insb fstpt fisttpll mov (bad) cmpsb loop adc xor mov lahf ds movabs or imul push mov icebp ja mov sub idiv jmp lahf mov or std fisttp enterq mov lret cwtl push pop sub movsl in mov scas adc repz (bad) and push lods xor (bad) test mov loop (bad) cmp xchg jrcxz lahf xor adc in mov xor movsb add movsb out insl mov icebp movabs xlat int3 test xchg movb sbb sub mov fs sub lods gs xchg rol movabs sub cmp jmpq fistpl ror test sti lea mov std maskmovq negl outsb jbe in movsb stc shr add in stc jl add add je mov xchg lods loope sti iret adc jno mov and out adc out (bad) jg addr32 andb lock test incb xlat mov and xor repz adc jrcxz fadd rex.WR or (bad) nop movabs ja leaveq sti jbe icebp pushfq add xorl (bad) mov push and pop pop rex.X add jle add rex.RX loope xchg imul decb fcmovb cmp (bad) in sub mov lea callq fsubs cmpsl pop rex.RB lret or cmp push cld repnz (bad) jg sub xlat add sbb rex.WRXB rex.R jg (bad) fnstcw push or ja pop (bad) leaveq adc mov and test sub push sbb cmp mov nop ficompl pop sub add xchg pop test enterq cmpsb jo in or test cwtl (bad) (bad) (bad) cltd mov out sub and (bad) cmp rex.WX or movabs jnp xor rex.RX (bad) loope (bad) fstl mov out shr movsb jo (bad) mov rcrb (bad) not shlb shlb scas mov (bad) xchg outsb pop sub lock mov mov shlb pop jo sahf data16 lahf jmpq in out lock adcl pop repnz jle (bad) push pop fwait pushq cs mov pushfq loope movslq in push rex.XB cmpsb xchg sbb loop (bad) or imul lahf add (bad) mov xor mov jge pop and rolb (bad) rolb int mov jo rex.X je lock or cld lock frstor movsb test fcompl nop mov jns (bad) movsb movabs (bad) add rex.R fwait xor (bad) sbbl (bad) hlt retq sbb (bad) loop or xor add stos insl jae,pt sub in or xchg iret jle ss push cwtl jnp adc icebp push and nop scas shrb lahf stc movabs loope cmpsl xchg (bad) rep sbb fs jg rex.RXB pop (bad) rex.WX paddusw inc gs repnz rex.RX or or fisub test mov rex.XB jae movsl popfq cmp sub xchg in or and jg retq out and xchg sahf callq cmpsl mov pop repz sub add add (bad) (bad) cmpsb adc (bad) cmpsb rex.WR push rex.XB xor fstl insl icebp pop jg or movsb (bad) movabs or cmp out retq mov cmpsl add rex.WRX loop cmp rex.WRXB (bad) pushq (bad) and neg (bad) movslq or push xor adc cli cs pop and cwtl rex.WB rex.B repz jo adc out fs rex.WRX or out js (bad) cs mov frstor stc (bad) push jl movabs or jle or iret icebp sub jne movabs (bad) xor test clc test rex.WRXB fsubrs mov int sti cmpsl enterq mov (bad) movsb sarl add int3 rclb hlt (bad) rex.WRB data16 (bad) movabs mov mov cmpl cli and cmc fnsave leaveq xor and sub rex.WB add rex.R lock (bad) lret repz (bad) movabs sti nop xchg cmp callq or and leaveq lods outsl lods insb mov or (bad) je push rex.WB pushq (bad) gs mulb cmc mov test jo mov adc movslq (bad) cmp test cmp mov add pop mov iret fadd movabs and mov mov xchg cltd jrcxz (bad) sbb (bad) (bad) rex xchg (bad) cmpsl int lret pop (bad) (bad) (bad) ds ds xor (bad) retq pushq scas addr32 imul stos rex.XB rex.WR sahf cld movabs (bad) (bad) rex rex sar jp mov cld (bad) mov mov pop hlt out imul jbe (bad) push ja pop cli mov movabs pop mov mov xor movslq add (bad) pop retq cmpsl rex.WRX pushq data16 lods xlat xchg (bad) out loope sub movabs cmp lock andnps cld cltd mov test mov rex.RB leaveq outsb data16 rex.WRX add sarb movslq xor (bad) mov (bad) movabs outsb sbb and pop push test adc push in and xchg pop mov (bad) (bad) es cmp push mov lock decl cmpsb jmpq cmp sbb rex.WRX loope int3 or (bad) sbbl add sbb mov cld cmp cmpl mul (bad) callq test test rex.XB mov rex.WRXB add rex.WRXB movabs mov mov in xor ss outsl (bad) (bad) rex.X repz scas iret (bad) divb gs (bad) rex.X lods mov fnsave push roll lods (bad) imul mov shll lock mov in iret cmp dec mov (bad) mov pop lods mov stos jmp stos pop (bad) xlat int rex.WRXB or retq rex.WRX imul (bad) std loope xchg mov imull lea jle lock adc rex.WRX or adc mov and pop adc lock jmp negb sbb imul jns (bad) repnz rex push (bad) cmpsl bnd adc or xchg cld sbb shll mov (bad) sub jmpq mov (bad) popfq movslq pushfq movabs (bad) xor lods cmp jns test (bad) add hlt or fdiv adc lock iret lock adc mov (bad) stos cltd rex.WXB cmc cmp (bad) sub xchg adc fstpl xchg xchg (bad) out add cli mov jmpq in movsl out jns mov adc (bad) clc cmp add cld add repz retq lods test retq jb adc xchg lea rex.WR (bad) xchg mov xchg mov jbe (bad) pop out movabs fcompl movsl fs and or (bad) (bad) fs enterq mov sub cmp jg imul repnz stc loope jns sahf fs and xchg mov loopne (bad) mov addr32 xchg test (bad) adc rex.R rex.RB lods pop cmpb cwtl push and pushfq and rorb add (bad) lret xchg rclb adc cmp mov movsb imul mov mov and mov add lods loop loope retq xlat xchg or js sub adc jg (bad) cmp movsb (bad) adc mov cmp pmaxsw (bad) adc or sahf mov movabs or pop idivb push mov xorl pushq rex.WRX sbb lods callq add loop or cmp fisttpl (bad) loope subb mov add outsl stc xchg mov movabs outsl insl in pushfq test retq movslq cs (bad) movabs mov push (bad) andb pushq (bad) (bad) (bad) jbe (bad) sbb jb movabs jb test nop movslq xor in or decb or stos mov xor lods movabs xchg xchg jmpq movsb sbb add repnz mov and leaveq fld sbb pop imul lret xlat rcrl mov sub xlat movabs stos push movslq pop cmp xchg pushq xrelease nop (bad) vpmacssdqh callq mov icebp scas jns rex.R mov push xchg (bad) xor ja sbb and pop fwait jo rex.WR (bad) (bad) or mov or jo (bad) fidiv (bad) xor js or push (bad) pushq (bad) test mov icebp xchg rex.RXB lock add cmc nop hlt sahf in adc in xor or sub sub (bad) lods rcll int ja je in or nop cmc mov (bad) xor jbe ja mov (bad) mov (bad) cmp rex.R mov rex and pushq iret movabs mov sbb (bad) or add mov or testb jae rex.WRXB (bad) sub rex.WB cltd (bad) stos sahf in iret (bad) add sbb or repz cmpsb out (bad) leaveq lods int3 cwtl adc (bad) xchg jno or mov int ds adc (bad) movsb xchg (bad) (bad) sub add jb,pn rex.RX or imul fsubp mov cmp fcomi mov int cmc mov repz jmpq leaveq add std mov fisub jns xor mov (bad) retq mov cmp cmc enterq mov (bad) mov retq (bad) mov rex.WRX (bad) mov jg pushq (bad) (bad) je jbe (bad) loop push mov imul hlt movabs and push repz mov rex.X movabs add cld addr32 cmp (bad) (bad) and stc and (bad) rex.RB jo (bad) test adc out stos and cmc nop clc mov pop (bad) cwtl pop or pushq mov (bad) lods (bad) cld lods mov adc add test movsb rex.W icebp retq fcmovne pop cs es lods jo mov add (bad) cmpsl shrb sarl lods rex.WRXB rex.WRXB xlat (bad) addr32 rex.W cmpsl mov out rcl mov sbb fcomps cmpsb repnz adc (bad) movsb retq repnz mov sti mov mov mov rcll leaveq (bad) in leaveq and nop and lock xor mov rorb (bad) xchg lock jg ja (bad) jb (bad) cmp scas jmp (bad) (bad) pop (bad) movsl (bad) xor or in jns cmp (bad) and sub (bad) push push cmp mov in cmpsb rex.X lods lock out insl sbb xchg rex.WR or sub rex.WB sbb movabs rcl sbb mov mov cmc (bad) rex.WX rcrb sti jae sbb divl fs je cmpsl (bad) (bad) cld cmp imul mov enterq addr32 mov ror cwtl (bad) jl leaveq shlb mov mov or mov test xor pushq addr32 and scas fnstenv stos pushq adc or (bad) rex.X scas jno int test xchg rex.WRXB fistl push (bad) add cmp data16 rex.WRXB hlt in movsb (bad) adc scas mov jmp rex.WRB fsubs outsl rcr mov test cld (bad) pushq cwtl pushq insl cmpl add lret (bad) mov xchg mov (bad) mov js xor test xor pushfq fs adc (bad) mov cmp mov sbb sub and pop cli (bad) xchg xchg subl mov rex.WB orw mov test fdivrp fmulp mov icebp mov pushq imul (bad) fcomi jle divl retq sti mov cli rclb mov repz test movabs mov mov enterq test cmc push pushq (bad) mov movabs (bad) stc jb push (bad) (bad) (bad) mov mov icebp fistp jge (bad) icebp enterq jae,pt lods (bad) xor xor test pop mov pop and lock loope mov loopne subb rex.WXB jnp insb sbbl retq rex.RXB mov test cld cmp pop adc mov mov sub mov or std test hlt (bad) mov nop sbb decb lea add pop jrcxz or xor mov and mov sbb mov cmc lahf lock jle movabs lock out (bad) lret cmp jg or int xchg fiadd lret pop ds rex.WXB movslq in xchg adc lret stos addr32 rex.WR jne (bad) in popfq cmp callq (bad) push mov and and movsb out fimull adc cmpl (bad) repnz push ds jmpq (bad) jb pop (bad) (bad) cmc mov sbb jmp fs rex.WRXB clc (bad) icebp mov out movq in pushq cli outsb (bad) cmc fisubr (bad) lret push movsl in xor mov mov pushq xchg (bad) xchg xlat (bad) insl (bad) jb or adc add (bad) rcrb sahf outsb and sub add in or lea and out fisubr xchg hlt or outsl add sub cs in stc cmp imull (bad) mov or mov sti lock (bad) cli loopne xchg repz enterq pushq mul shrl sub and pop sub test sub push add in (bad) jb mov std lods jnp shrl jns data16 andl (bad) ds mov outsl add or fmuls mov lea (bad) xchg loopne movabs ficomp iret je repz (bad) adc jbe add (bad) mov (bad) (bad) ja stc movsb (bad) rex.WXB adc movabs (bad) fnsave (bad) (bad) rcrb lret addr32 sbb (bad) (bad) repnz or pushq fsubs xchg rex.RX mov jle retq addr32 fidivl (bad) and mov sbb movslq (bad) rolb scas rex.RX int rex.W (bad) jg (bad) jle jns (bad) xchg pushfq jne int3 mov mov (bad) vcvttpd2dqx mov rcr or ficom movsl (bad) mov sbb (bad) loop mull lret xor int3 movabs sbb (bad) pop (bad) (bad) mov xchg cld rex.R movabs xor mov pushq add rex data16 mov int3 (bad) int3 (bad) sub and jae and push jno xchg mov (bad) in iret fiadd xor pushq fist xor (bad) movabs movsl mov push pop (bad) je mov hlt sub cmp sub out jmp (bad) (bad) insb hlt xor and sbb rorb je (bad) mov xchg fadd sub out add rex.WRXB (bad) insb icebp sub sbb stc rex.RXB rex.WRB lock or rex.XB in (bad) xchg pushfq stc (bad) mov rex.WXB xchg ds stos and jrcxz pop outsb (bad) lods add sub cmp (bad) and cmpsb rex.WX mov cltd outsl mov mov adc mov (bad) and data16 (bad) movabs mov mov ja (bad) rex.R (bad) jmp jb (bad) fcoms mov in callq sarl (bad) pushq sub retq rex.WRX push jmp push gs iret jle cmp movabs jns (bad) or mov jo,pn movabs rex.WRXB rex.RB (bad) (bad) mov (bad) (bad) adcb rex.WRX imulb mov cmp in pushq out outsb rex.X shrb imul sbb cmp and out sbb mov andl cmpsl mov pop in stos rex.WR rex.RB cmp fstpt mov jo or jge mov pop out (bad) sbb rex.XB mov lret sbb pop rex.WXB or stos (bad) pop jb rex.WX (bad) mov sub (bad) mov pop (bad) pop movabs fs mov jne jrcxz movabs (bad) stos add add rex.WRB mov mov in loope stos jns mov and add fs xchg ror jrcxz adc in sub fs cmpsl movaps xchg sbb addr32 neg cltd jno or stos push callq (bad) (bad) hlt and fldenv popfq sbb sub (bad) retq rex.WRX pop xchg sti es rex.R pushfq mov outsb mov movslq mov fs adc insl mov repz jbe nop xchg movabs rex.XB enterq enterq icebp mov pushfq fistp or jl,pt pop pushfq (bad) mov leaveq imul xor callq in and rex.RXB lods sub (bad) (bad) pushfq imulb out mov (bad) data16 push movsl xchg fisub sti (bad) (bad) pushq movabs mov sub and rcrl (bad) iret pushfq movsl sub add lods mov rex.WX cmp xor (bad) lahf push sub cld ds xchg scas or pop rol (bad) and (bad) xchg cmpb int sbb jg pop scas pushfq fbstp mov mov cmp imul mov shr sub (bad) xchg and (bad) (bad) int rex.WB cmp sub jb and ds shll jrcxz mov and clc (bad) rex.WRB retq rex add iret sub push add (bad) jmp rex.WRB addr32 push in sub xlat lods sub (bad) jle jmpq (bad) rclb xor movslq push in leaveq iret rclb or xchg ja sbb pop es xchg in cmp stc cmp adc movabs fwait mov cli (bad) (bad) jo cli movsl cs xchg int fiaddl out cmpsl mov gs (bad) rcrl lock insb cs lret repnz adc test rex.RX cmpsb sub sub and rex.RB rex jns int fsub retq out cmp jae rex.W repnz jo icebp imul rex.RX idivb cmp sub (bad) mov (bad) sarb cwtl clc or rex.RB (bad) rex.X test (bad) and pop out push in sub sbb loopne rep insb mov jo fmulp sub jle jge (bad) iret lret out adc and sti jrcxz or cld gs pushq or imul icebp (bad) xor xlat cmpsq repz jne pop (bad) icebp int enterq adc push lock rex.WB adc lock loopne push (bad) in cmp repnz in test jg movabs (bad) or loope sahf cmpsl mov lock mov scas (bad) (bad) xor fidiv (bad) xchg and and xchg sub (bad) repz retq mov xorl mov fistpll enterq (bad) cmpsl decl sub mov cwtl out or cmp cmp fs mov fldt add retq mov or xchg test (bad) fisttp nop jns pop rex.RXB scas cmp xor (bad) pushq sahf xlat mov push rcl cli mov pop add movsb mov xchg (bad) mov adc clc lret ja cmp movabs addr32 or cmp (bad) rex (bad) retq stc sbb rex.WRXB mov lret and (bad) (bad) callq in or loope lock rex rex.X es pop adc (bad) pop adc movabs es sti jp cmp xchg mov sbb movsb push mov callq sbb push cmpsl cs mov addr32 imul mov rex.WR lock sbb mulb adc imul mov pop xchg frstor lea xor mov addb (bad) iret xchg rex.RB (bad) mov movl in repnz fild or movslq adc (bad) notb stc ja (bad) lock (bad) mov int3 nop xor sbb pop (bad) cmpsb enterq (bad) (bad) or lock sub or cmp movsb movabs out and movabs movsl mov (bad) loopne in jrcxz (bad) and cmc pushfq (bad) rex.WB mov int3 shrb mov enterq mov fs mov (bad) rex.WX retq mov mov mov push rex.WXB in jae jne rex.WRX sub mov sub (bad) mov clc jnp xchg in rex.RX lock adc mov movabs mov mov fsub or (bad) sbb test fidivrl (bad) lods lret or push (bad) (bad) in insb popfq add jrcxz adc out test fwait movabs mov xor callq nop xor pushq ss cs sti pop or leaveq (bad) stc xor test in adc lahf (bad) push in (bad) andb enterq data16 jns mov negl mov jmp nop callq mov jno xchg xchg lods jle in and sbb insb rex.RX fimul decb (bad) loope sub (bad) cld cmp addr32 push mov rex.RXB iret je or test fstps xchg add leaveq in sub scas imul movabs push leaveq xor pop insl (bad) pop and (bad) (bad) test sbb (bad) pop cmp cwtl movsb sarb cmpsl cmovo (bad) adc sahf cli adc (bad) ds xor rex.RX (bad) xchg xor push rex.X rex.RB repz (bad) (bad) enterq in movslq cwtl rolb repz in mov sub rex mull loopne jrcxz or rex.W or jbe pop popfq roll addr32 or fcmove cmp movsl xor pop add mov (bad) and rex.WX sarb mov (bad) (bad) xor rex.WRX faddl adc (bad) addr32 push rex.X rex.X retq fcoml out xchg movabs rclb ja (bad) rex.WR and and (bad) (bad) (bad) sub xchg test fistpll orb jrcxz fidivr (bad) mov push movabs (bad) adc psllq hlt stos rex.RXB rex.XB rex.XB xor rex.X and movabs rex.WX scas sub popfq mov sar push cmpsl pop fstpt scas mov xchg js (bad) or mov test pop movsb idiv data16 cld leaveq movsb repz mov in movslq rex.WB in sbbl jl (bad) ljmp jrcxz loopne pop int3 movabs es loope loope (bad) rex.X or pushfq loopne pushq and data16 (bad) and std idivb cmpsb mov vaddsubpd rorl cmp adcb outsl (bad) (bad) jb (bad) rex.RXB and in mov fsubs mov in out (bad) movslq movslq retq pop pushq pushq (bad) out or out sbb mov imul cmp or (bad) lods (bad) sbb or (bad) or jle lea mov adc jl (bad) sarl fcompl sub lods insl mov mov push xor add iret add and mov mov in cs mov jrcxz enterq clc push mov test jrcxz cld and test (bad) jnp rex.WRB rex jne fisubr (bad) clc (bad) jge test jrcxz,pt mul fisttpll in or or cli (bad) scas jl test xchg mov jl (bad) sahf and (bad) mov jbe cmc mov mov pop mov (bad) (bad) mov xchg rex.XB xor sbb cmc sbb jbe jp rex.WRXB (bad) (bad) sbb mov add imul and or loopne cmp and in xchg sub imull xchg lods (bad) cld test mov rex.RXB shl (bad) mov (bad) mov fidiv mov nop xor shrl rex.RX rex.RXB or (bad) xor sbb outsb xchg repz cmp pop mov pmulhw idivl nop fdivp jg not movsb insl (bad) bnd scas pop vpaddq mov (bad) or pushq (bad) xor cmpsb ficom mov push xchg cmpsb mov lret (bad) in lret insl fwait outsl lods sarb lock data16 mov mov in add repz xchg pop (bad) mov (bad) sbb addl hlt adc pushq notb cmp mov test shl rex.WRB (bad) pop movabs (bad) lret or add test rex.WRX push rex.WRXB out sub movslq or or adc adc in (bad) (bad) out in add xor mov cmpsb cmpsl adc xor mov imul mov movabs sub (bad) rex.WR mov scas (bad) movabs mov imull repnz test (bad) adc xchg and or xchg jmp cmpsb sub out movabs ds jno scas pushq pop mov lods (bad) hlt cwtl lods (bad) movabs js push or sahf sub (bad) pop rex.RX movabs movabs pop movabs (bad) jrcxz (bad) cmpsl xchg rex.WXB hlt int or (bad) (bad) fbld mov pushfq int rex.W pushfq (bad) adc sub addr32 sub outsl scas (bad) (bad) sub fwait cmp lods xchg packsswb sti lods cmc (bad) jae pop mov (bad) xchg and jle cmp xor mov mov add stc sub shrl not iret sbb loope add lock shll xor (bad) sub lods sub jnp ds or iret cmp rex.WXB cmp (bad) (bad) jb jrcxz out pushq (bad) or and sbb movabs xlat push shl rex.RX iret clc push sub push stos (bad) cmp retq (bad) xchg xor or sub test mov hlt xchg rex.W fmuls cmc (bad) or shrb and and imul sbb jns jle or lods mov mov gs or or rex.WRB retq cld and (bad) mov push (bad) mov test repz movsl enterq mov lret add rex.WRX xchg stos (bad) repz es rex.RX pushq xor fbstp fadds movabs retq jrcxz stc mov mov stos jne cmc pop xlat cmpsb pop xchg jb popfq in jb icebp pop es fs mov ds push cmc jrcxz test fwait mov fidivr sub xchg in cmc lock pop in (bad) or movsb fs lret movabs push rorb movabs mov jns mov (bad) rex.WR or mov ja movsb or fdiv movabs pop test movabs nop (bad) push movsl adc mov callq jle mov fcomip add shl stos outsl sub adc mov adc out and stos (bad) (bad) add callq rcrl or (bad) fisttp xor ds div clc xor shl (bad) push fadds push xor mov jmp rex.XB xchg (bad) jne,pt add mov sub lret cmp test adc test gs jle mov hlt scas retq pushfq fbstp xchg (bad) out stos imull pushq xchg jp jle rex.RXB mulb movb sahf ljmp or lret iret xor (bad) mov lock xor (bad) imul (bad) clc rcrb fmulp imul push (bad) ja mov jo sub cmc rex.XB (bad) pushfq mov out jl xchg cmpsl mov jg rex.RXB add pop fldl2t or pushq sub loopne lock (bad) (bad) rex.WR es test cmc push jmpq or ja rex.W repz sbb mov leaveq subb (bad) jle sahf movsl addl mov pushfq jl jo loopne sub and flds cmpsb mov xlat (bad) stc enterq sti (bad) int3 (bad) push cmpsb adc (bad) mov (bad) cmc (bad) or in scas jl fwait divl mov mov xorb lahf jne loope int3 xor xchg test rex.WX stos (bad) (bad) mov out rex.WX jmpq loop or add lahf xor (bad) (bad) lods lock sub lret (bad) adc movabs add mov std cld and flds sbb cs iret addr32 test (bad) vandnps (bad) lock sub rol mov (bad) imul (bad) and sub sti add pushq cli movsl cmp cmpsb mul (bad) add or cmp sub (bad) cld movabs repz sbb mov or mov pop rex.WXB shrb mov sets lods mov (bad) add cmp (bad) fxch retq sbb (bad) and rex.W adc movabs (bad) cmp js sub rex.WRX rex.R fcomp pop ja add (bad) int clc fsubrs iret loope shrb fildll xchg (bad) ds repnz int3 (bad) mov pop sar mov in mov fs mov fsubp repz push cltd adc (bad) mov test leaveq cmp sub loope shrb push mov or jo lock callq clc in movsb jns rex.X js int rex.B loopne cmc pushq (bad) shrb movabs xchg jnp xor movabs movabs (bad) adcl fmul mov out cmp (bad) cmp cmpsb cmpsl imul callq rex.XB add cwtl or lret xchg outsl (bad) (bad) nop xlat (bad) ficom lock (bad) in or (bad) cmp fwait iret or push (bad) rex.RX sbb (bad) push callq xor addr32 out and adc ror (bad) stc gs leaveq js or and (bad) imul jmp xchg bnd ror pushq movabs add shl int (bad) or outsl ljmp retq (bad) sbb test sub add enterq test movabs mov andb sti lods (bad) adc (bad) enterq rex.RX fldcw in rcrl enterq ljmp in callq lods movabs andb adc jmpq (bad) (bad) mov sarb cmp stc gs mov sub sub out (bad) (bad) andb xchg (bad) jbe push retq lahf movabs ja rcll pop psubsw mov cs cltd repz add icebp flds test lret rcrl loope jbe cmp push stos in mull (bad) (bad) retq cmp mov insb adc movsl cs clc cs imul (bad) cltd (bad) movslq add sbb fs rcll mov cli (bad) int3 jo (bad) lods cmpsl movabs enterq insl (bad) in jl (bad) icebp lods mov mov out or (bad) fsub nop movabs xchg cmp and mov push mov jmp iret (bad) lock cmpsb rex.WXB loope xchg rex.WX rcrb adc fdivl push add or fisub xchg (bad) std idiv scas pop mov (bad) loop rex.B and testl xchg add repnz or (bad) movslq (bad) xchg callq idivb rex.RXB and int3 mov push (bad) out xchg clc test (bad) jmpq (bad) xor lods outsb rex.WRB pop jnp push or test sub in fistpll sbb je retq cmp sahf lock fdivr xchg (bad) mov jp mov pushfq outsb lock cmpsb movabs pop mov rorb out mov clc shr test jns movsb rcrb adcl repnz and sub and xchg xchg movslq rolb add cmp pop (bad) (bad) outsb shrb or (bad) xchg (bad) in insl cmc pop xor (bad) lahf int lods (bad) cmc xlat nop cld or frstor pushfq or jge rclb stos iret lods xchg xor (bad) adcl std test or mov xor cmp xchg stc clc jmpq jg (bad) or push (bad) cmc rex.R and mov cs rex.R popfq (bad) callq (bad) lret push mov test mov mov test (bad) testl (bad) (bad) (bad) and (bad) pushfq cmp xchg xchg (bad) icebp fwait (bad) or mov getsec mov (bad) (bad) or lret jae retq in xchg jb pop xchg pop mul loop in lock xlat (bad) stos push lock pushfq (bad) rcrb callq add xchg add mov (bad) fdiv mov pushfq leaveq (bad) sbb ds pop jno cmp xor out cwtl sbb sbb out negl lock (bad) mov (bad) lods fs rex.B rex fstpl (bad) jge sub jg add cmp cmp pushq sub adc mov roll sbb xor push pop fdivp js shrb cmpsl out (bad) or callq (bad) test add or cmpsb rex.RX mov add cmp loope in rcr xchg cmpsb in rex.B cltd scas (bad) movsb lods cmp sub jg sbb push pop adc rex.WXB fcoms jge fwait (bad) adc jae movabs (bad) test pop xor pop mov mov (bad) lret rex inc sbb or sbb sbb cmp ds repz insb mov or push fdivrp in inc in in mov xor outsb jnp rex out (bad) gs jrcxz and test cltd pop out add (bad) (bad) rex.WRXB rclb callq scas rclb (bad) movslq scas rex.WRB pushq (bad) or int movsl xor and jne shlb ficomp mov out rex.WX rex.WRXB add mov rex.WRXB lods fcmovnbe mov test movabs push retq rex.WRB fcmovne rex.WRB fwait and mov push mov mov data16 movabs mov pop mov jrcxz test (bad) fcmovne mov (bad) (bad) mov incl and (bad) rex.RXB adc xchg rex.WXB fcoms xchg jns ja (bad) mov gs scas icebp adc int3 lock mov hlt pop leaveq shrl (bad) xchg int (bad) insl xchg xlat icebp cmp sbb ds incl (bad) sub pop (bad) in vcomiss pop nop pop push push (bad) (bad) xchg icebp gs mov movslq js fmuls out callq callq or mov lods test data16 retq mov test lret lock mov fs xor mov pop je and cwtl or rex.RX adc in (bad) movsl (bad) popfq cmp rex.W loope movabs (bad) ja add ss sbb (bad) (bad) popfq (bad) je fiaddl rex.WR push sbb (bad) mov (bad) sbb dec ds fimul sbb (bad) adc loop outsl push (bad) fdiv mov mov or mov fwait lret or movabs cmc orb rorb scas sbb in jrcxz pop xchg out pop jo test test jns in xchg (bad) rex.WRXB in movsb int stos sbb movabs gs (bad) and jae int (bad) lods (bad) sub scas mov or rex.WR sub mov imull jae (bad) (bad) (bad) insl (bad) lret out loope addl test lods xchg movabs jnp je nop mov (bad) frstpm(287 lock (bad) pushfq jge sbb jb in shll (bad) (bad) cmp test mov fwait stos (bad) jp fadds jo movsl adc rex.WRX or insl (bad) push push cmpsb adc (bad) xchg sahf std mov shr movsl clc jmpq icebp rex.R je (bad) shrb repnz rex.RXB bnd cmc gs jb jmp test (bad) ss loop or int3 fxch adc pushq mov ds shlb adc push xchg mov jg or (bad) add (bad) (bad) pop pushfq fcomp mov rex.WR and (bad) pop vdivps out sub add stos ficoml mov xchg jns jp out sarb imul jmpq movabs jnp mov rex.WRX add test rcrl movabs test mov xor adc scas add or (bad) rex.RB jrcxz mov mov je test stc sub test mov sbb lock stc lock push xchg rex outsb movsl jnp icebp lahf xchg lods jmp rex addr32 (bad) outsl scas out adc (bad) or insb cwtl (bad) fwait cmp (bad) (bad) (bad) mov (bad) cltd sbb mov roll (bad) sahf xor test jne add pop (bad) push xorl or mov (bad) loope mov enterq rex.R cmpsb mov (bad) sbb xchg out (bad) ss sbb jbe mov decl or cld (bad) ja rex.WRX push pop subb in pushq outsl (bad) or adc xorb cmp mov sub rex.WXB rex.WRXB sarb fildll (bad) (bad) loop lea rex.WRX pop and cmpsl (bad) ficoml fildl or mov (bad) icebp cmp sbb and test mov rcl (bad) in and (bad) (bad) pop rex.WRXB hlt xchg lret test (bad) (bad) xchg callq pop xor or xchg mov xchg adc shlb callq mov add mov rclb xor jae (bad) pop shr sbb retq sbb jg adc mov movsl imul sub (bad) insl movabs (bad) (bad) pop xlat (bad) (bad) callq imul or (bad) cmpsl sbb and jmp mov and sbb test loop,pn push stc test callq xor fucomi mov pushq out pop jo sub cmc (bad) (bad) mov mov hlt (bad) push rex.WRX rex.WX add cmpsb rex.WR clc loop in sti movsb (bad) adc sub in sub bnd cmpsb sbb (bad) addr32 (bad) pushq shlb rex.WB (bad) xchg sbb movsb mov movabs mov (bad) (bad) (bad) add (bad) in mov vpmuludq in mov jle mov in cmpsb sbb sub adc movsl ss scas fucom mov xchg movsl cmpsl (bad) and sahf mov cltd loopne and cmpsl rex.WRXB and push (bad) je (bad) sbb xor add xor (bad) jo fildll mov int xchg add sub (bad) test in sub push cmc (bad) mov mov jmpq movabs (bad) adcb push (bad) rex.R addr32 mov loope ja nop/reserved adc out int rex.RX lods test (bad) iret (bad) xor push in rorb xor cmp (bad) xlat cmc (bad) jae imul cmc movsb scas push jrcxz (bad) ja es in shl rex.WRXB jbe movslq jrcxz or jle retq movslq jo,pt jae lret adc rex.RX cmp rorb and mov jg adc jrcxz (bad) lahf loop add in in or clc pop push fwait xor mov sub movabs mov jb mov addr32 rex.WR movabs sahf imul jbe leaveq movabs and pop cmpb (bad) push sar mov pop mov cmp rcrl test and outsl lods mul bnd or rex.RX rex.B (bad) sbb jg outsb mov xchg sti insl mov (bad) and xor lret (bad) or and (bad) out sbb in in adc sbb (bad) sub outsb fsts (bad) outsl xchg xchg pop xor in adc repnz and push getsec scas cld shrb (bad) or adc (bad) lock sub (bad) jmpq (bad) mov callq xchg movabs (bad) imul mov (bad) addr32 jb rex.B rex.B data16 out (bad) rex.WRB fdivrs movsl cmp xchg sub imul clc shlb pop fildll jo sub push data16 (bad) xlat jo (bad) jo fbld movslq xchg lahf nop and mov pushfq jmpq sbb test in lods in movabs lock callq imul out push out cmp xor (bad) movabs movabs adc sub adc (bad) (bad) jo enterq (bad) (bad) mov out mov mov cmp jbe (bad) jno (bad) jnp jae loop or adcl imul adc (bad) (bad) in mov loop (bad) (bad) add rex.WXB rex movslq fistl add add rex.XB or addr32 fsubs xor in movabs or push xchg out iret lock xchg and add add addr32 repnz rex.RXB push nop cmpsl in rex.WRB and and rex.WRXB movabs adc rorb pushq in iret retq fs (bad) movsb stc leaveq test hlt mov (bad) (bad) or mov in add mov mov enterq mov rex.B adc mov jg (bad) test subl xchg rex.WB je nop sbb pop mov pushq jmp push retq xor imul pop shll jne xor xor and cmpsl stos mov pushq mov jne rex.WRB decl mov rex.W xor movabs (bad) sarb icebp push add lahf out xor mov sbb (bad) (bad) out clc adc or movslq sub add mov addl pop or loop out stos rex.B sub sbb pop ds mov rex.W or hlt mov mov verr pushq add xor jmp in (bad) (bad) loope in or (bad) retq lods add or rex add int3 (bad) cmp lret lods sub pop (bad) mov xor test andb mov lret and fcomip and movabs sbb out insl test std rex.XB imul bnd retq (bad) cmpsl adcl (bad) (bad) xor (bad) push sti incl lods (bad) movabs gs jle jne repz mov rcr mov loope xor andl push je rex.WRB out in mov pushq (bad) (bad) and icebp (bad) sbb jg add out adc jg mov movsl (bad) (bad) jle mov insl cmpsb jbe cmp stos mov xchg (bad) icebp cmpsb gs cmp mov cmpl and mov fwait jl xchg test (bad) cmp cmpsl fstps cmpsl xlat lret (bad) fld adc addr32 mov (bad) rex.WR adc jne enterq rex dec add mov jae rex.WRX adc sub rex.XB hlt js test movsb rex.WXB and stos or (bad) mov enterq repz retq retq enterq test mov sub (bad) and retq cli mov xchg mov lock pop adc (bad) (bad) in rex.WRX nop xorl mov cmp (bad) fwait or cltd xor (bad) mov cmc add setae out rex.WR mov mov loopne movslq xchg divb cmp and rcll mov mov or ss jmp in movabs mov ficom xchg mov pop (bad) lock mov xchg adc test js lret push ds xor jnp (bad) mov out (bad) mov movabs and pop stos insl and push sub and add pop jrcxz xor add jnp sub in (bad) cmp pop leaveq loope neg invd (bad) and js repnz cld sarb jmp rex.WXB pushq xor ja (bad) lock rol lods rex.R rex.WRB lock outsb adc pushq popfw (bad) rclb mov (bad) ds stos adc rorb and fcoms movabs stos sub rex.R (bad) movslq lock js stc xchg out sahf rex.RB add pop rex.R (bad) int jnp jg (bad) mov mov cmc xor jo adc jrcxz repz adc mov jl scas mov (bad) mov loop (bad) cmpsl mov sub adc cmpl pushfq (bad) fildll (bad) lret cld outsl or insb jl mov es fwait movsb mov movsb movabs jmpq rex.RB jrcxz pop and (bad) out xchg cli (bad) sahf fistl movabs fbstp mov callq rex.R test movsb pushq mov frstor mull jmpq sub div and (bad) mov (bad) (bad) jmpq (bad) xor in jno cmc mov or in (bad) mov (bad) rex.WXB clc xchg (bad) (bad) stos lods pop movabs mov or in or rex.X lock xchg adc push mov pop lret jrcxz (bad) lret or (bad) out incl mov mov sub mov mov hlt pop (bad) ss sub gs jnp stos in (bad) callq sbb jg (bad) je mov rex.R imul jns and test adc or jo sbb repz rex.XB pop push and (bad) (bad) ja jb (bad) callq icebp lods repnz and callq add mov mov (bad) fdivl rex.WR cmpsl mov and scas jae ficoml loopne jle jmpq (bad) js rex.RXB fsubp in test ss xor cmc xchg int3 movabs in cmp cmc and in sub stc outsl (bad) mov pushq subl (bad) movabs enterq movsb out out xlat out pop (bad) add pushq data16 rex loope imul testl sti mov mov (bad) (bad) rorb int pop rex.WX mov sti fnop jne sub out jno push sahf rex.WXB jo and rex.WR mov (bad) sbb (bad) subb (bad) enterq in push jrcxz or (bad) (bad) je mov movabs mov sbb outsl pushq xor fist mov pop (bad) mov nop ja test cli stos adc cmc jg and cmc or (bad) or je icebp pop add sub sahf movsl mov lods enterq or movsb lods and movabs and and in push mov rex.WB callq repnz pushq mov adc movabs adc leaveq rex.WRX lock (bad) (bad) lods (bad) (bad) loope imul cmp sub mov (bad) hlt cld mov retq in cmc test (bad) enterq jmp gs jle movabs mov cltd lahf (bad) icebp icebp pushq (bad) movsb imul repnz rex.WR movabs jmp fmuls cmp jp (bad) std mov sub fcmovnb sub and pushq cmpsl xlat and repnz insb sbb (bad) xchg cmp push mov mov (bad) cs cwtl mov mov pop fnstsw jle xor jrcxz enterq movsl jg jp scas (bad) cmp mov fs callq lret rex.W or xor je sti nop mov out xchg jmp xchg (bad) js mov pushq mov in fistp jle xchg movb retq xchg sub xor mov (bad) (bad) push insl sbb xlat sub callq cld sub iret rcrl pop sub (bad) (bad) pushq sub (bad) sbb fnop mov cmpsb sbb jno cmp out cmp rex.B pushfq push data16 or jrcxz callq cmpsl or pop mov cld movsb xlat sub xchg divb insl rex.X addr32 (bad) stos pop or sahf int3 pop mov jns adc mov lea movabs in test and leaveq (bad) leaveq add repnz sub (bad) vandps in insl insb repnz push data16 pop jb in xchg retq out pop sbb cmpsl push xor or adc (bad) scas push (bad) mov retq jmpq pop out jne (bad) sub nop mov rolb iret cmp orl cmpsl add lods mov enterq (bad) callq in movsl (bad) insb lods mov (bad) lods lret (bad) (bad) or sarl clc sbb (bad) mov outsl adc pop mov pop xlat pushq fsubs test es (bad) in mov sub ja mov sbb js adc icebp lahf repz jns retq (bad) insb neg (bad) insl and jb leaveq sub pushfq lret (bad) sub cmpsl loop xor mov pop (bad) add adc faddp ror (bad) test sbb ja (bad) int repnz and retq cmp popfq (bad) callq adc (bad) push (bad) cmc loop lock insl sub cmp mov jbe xchg rex.XB enterq or rex.WR rex.X xchg xlat (bad) mov and loope enterq (bad) test mov mov xor cmpsl add retq cmp jp (bad) test callw scas mov (bad) lock in jo mov push mov sub mov test rclb (bad) mov sbb test and retq sub adc or test sahf mov sbbb repnz scas or mov fcom divb (bad) lock movabs (bad) jno mov adc mov in xor cmpsl stc test icebp jb pop cmpsb stc jge cmpsb sbb in popfq test fnsave lods icebp imul push mov xchg clc add scas insb sub or (bad) (bad) loope rex.RXB repnz je cmpsl orl cmc xor faddl adc jrcxz lock rex fwait loop sub loop fstpl pushfq es lret cld mov and (bad) add ja (bad) cmc fnstcw cmpsl mov (bad) lods and je jo and jns rex.X (bad) sub movabs rex.R in adc loope or xor (bad) insl mov popfq (bad) push out sbb int (bad) (bad) sbb flds lods out jle lock adc (bad) cld (bad) lahf out cmp (bad) fdiv and cmpl adc cltd (bad) (bad) jrcxz jbe sbb popfq (bad) jae loopne,pn or and (bad) hlt jmp (bad) in (bad) xchg rex.R rex.B in adc cmp jle cltd leaveq xchg xchg xor movabs icebp xchg lcall loope mov std fwait add sub clc leaveq mov iret loope mov (bad) fbstp cwtl test lods addl shlb sub xchg xchg (bad) out pushfq lea mov (bad) insb (bad) out mov cs cmp retq sbb sub mov hlt movabs decb (bad) lock rex.WRXB mull sbb sub xor (bad) mov or retq fwait mov (bad) and stos adc jrcxz cmp and fstps je mov (bad) iret jno cld cmp fmulp push jo hlt shrb rcr jmpq fisttp jl xor jmpq int add (bad) fidivrl outsb push mov movabs xchg xchg xor pushq stos movsb pop mov loope (bad) rcl jle and cltd (bad) jns es rex.X push mov fnstsw push iret pushq loope (bad) rex.RB insl sti (bad) lret ud1 jns outsb or paddq sbb sbb pop mov (bad) pop fistpll add movabs rex.XB (bad) (bad) fs sbb mov mov (bad) pop sbb enterq and (bad) out mov mov (bad) sub jp,pt out out (bad) and (bad) mov adc (bad) (bad) addr32 (bad) ss test adc in jl movsb cmp rex cld ja testl (bad) (bad) jnp mov mov movslq (bad) retq idivb mov cmpsb addr32 loope sub loopne stos fnstsw pushfq or (bad) pushq (bad) fcomi jne xchg mov cmc lock (bad) adc push jmpq sbb movsl lock pop rex.W add pop adcb xchg mov cwtl rex.R callq (bad) loope (bad) test cmp outsb loop gs clc fwait std sbb jl stos rex.WX mov (bad) (bad) clc movabs add (bad) insl and mov callq sub hlt (bad) cli (bad) movsl retq repnz sub lea and jnp mov in (bad) in lods retq movslq adcb cmpsb sbb (bad) xchg in lock idiv movslq cwtl (bad) fwait (bad) sub mov xchg mov and and movabs (bad) jno jg (bad) mov (bad) outsb (bad) (bad) clc sbb cmp adc push pop mulb add cmp sub rex.RXB sbb (bad) nop xor (bad) std or cmpsb mov (bad) (bad) (bad) roll pop pushq and sbb mov rex.B sbb (bad) mov (bad) ja loop (bad) (bad) mov fisttp sbb cmp (bad) fwait callq mov mov (bad) mov jmpq adc (bad) pop loope (bad) jae in rolb rcrb in xor and and fsubp insl (bad) mov out cs in (bad) xchg xchg jrcxz sahf cmp hlt jmp cmp xchg jb adc popfq (bad) jae gs (bad) or rcrl enterq mov mov jae pushq adc jae repz es insb push sub add rex.WX (bad) and (bad) add cs xchg (bad) cltd add jae (bad) retq popfq mov sti mov cmp mov jae (bad) pop xor in movabs retq hlt std sarl fild mov mov (bad) clc movabs fistp gs rex.B xchg pop sti (bad) jno (bad) mov rol lock sbb and callq int3 nop (bad) adc insb push push lahf ljmp (bad) movsb in xchg (bad) xchg fisttp scas rex.RB or rex.X icebp movabs mov mov push push rex.RXB xor push and mov pushq movabs (bad) jmp pop iret addl sub or push jle push fs push sahf or jmpq mov imul loope movabs xor ficomp mov rcrb cmpsb pop sbb test int iret push xorl sub (bad) movsb icebp (bad) movabs shlb retq and sbb shr or pop and (bad) sub adc xor out (bad) loop in lret and xchg outsl fnop loope jnp out fsubr (bad) sbb mov add or mov cmp add lods sub jrcxz (bad) in rcrl iret lret test (bad) push int3 rex.WX rex.WRXB mov mov xchg (bad) cli cwtl fwait rex.W (bad) ja adc (bad) imul (bad) mov add iret mov or lock (bad) fdivp out (bad) movabs (bad) jo js hlt push fldl jb callq gs add sarb jb rex.WXB rex.WRX fsubs rex.WXB fwait leaveq pushq (bad) mov add mov adc push test (bad) movabs es cmc push mov test test rex.WRXB leaveq int pushfq (bad) jmp mov sub pop and cs stos rol push mov lret loop rex.RB or scas nop callq adc mov (bad) xor lret sub gs int fnstcw cmc sub xor cmc outsb cs push rex.XB rorb jle push pop mov pop fcoms mov movslq and (bad) xchg stc (bad) rex.XB or rex.WRXB fsubs nop fs adc jrcxz fistpll rex.B cs repnz rex.WB rex.WR stos sahf cs mov cmp outsb test mov cmpl leaveq push fcomps insl xchg (bad) xchg in mov cltd (bad) push rex.RXB (bad) (bad) jb mov fldt mov or xor movabs xchg movabs jo mov mov or pop mov pop lods pushfq adc mov and faddp adc rex insl (bad) rex.R fcmovu rol xor rex.WX xchg (bad) jae rex.RB rolb jno mov or nop xor (bad) push imul xchg insl lods icebp fisttp cmp div ss movabs rcr stos rex.XB callq pop (bad) fucomip (bad) loope fisttp fcoml xlat pop ja and sub xor iret sbb (bad) adc stos pop or mov (bad) (bad) loope leaveq xorl (bad) mov xor rex.RX imul movslq jno std pop mov xor xor rex.WRB out movsb sbb add mov retq pushq sbb movabs rex.RX or push cld in out (bad) cld sbb mov rex.WXB outsl movabs outsl scas pop insl std es pop pushq mov and lods outsl in jp add cld cmc cs pop jnp gs sbb (bad) mov push cmp retq lret and xor add and sbb adc jle fidivr rex.WRXB enterq (bad) push popfq (bad) jbe movsb out in loope movsb imul in xlat cmp movabs (bad) rcr pop in (bad) lock (bad) jo rex.WX rex.WXB rex.X sbb push jns cmpsl stc (bad) rex.WB xchg movslq punpcklwd addr32 (bad) idivb adc subb xchg cmp shrb iret push callq and xchg cs mov movsb retq lock outsb in mov repnz loope mov addr32 rex.WXB xor sub roll iret (bad) (bad) jmp xor movsl mov jp adc movslq add cmp lea adc rex.X rex.R nop out fistp jp movabs add jo rex.B xchg ss xchg nop leaveq mov (bad) gs movabs (bad) outsb xlat jnp jne fnop pop jo sub imul fcomip rex.R lock pop out push cwtl movabs fmul retq xor xor scas mov in std cli mov and (bad) scas (bad) (bad) rex.RB push jg or test cs or xchg sub rex.XB rex.B faddp pop jo (bad) (bad) xchg (bad) xchg (bad) pop callq je mov (bad) or or jo hlt sub out rex.RB rex fstpl jb int3 rex.R add insl (bad) sbb icebp ror pop ficoml xchg or repz and sahf xor int3 (bad) mov (bad) imul mov xchg cmp cli adc mov (bad) fcoms iret mov mov in rex.WRB fs xor es jmp rex.WRB mov (bad) jno pop data16 and push cmpsb fcomi out mov test and cmpsl cmp loop es stos cld or jge (bad) out fadds data16 rex.WRX insb jnp js or out xchg xchg or cmpsl add fwait mov pushw xchg (bad) pop xchg pop (bad) jo and mov sbb clc xchg (bad) sbb jle mov jmpq (bad) pop (bad) pushq or rcl callq test (bad) outsb movabs lret iret in fcomps jmpq in sbb (bad) and movabs mov (bad) out fnsave mov out sbbl es xor movslq sbb and sbb fdivrp rex.WR lahf mov in leaveq js pushq mov fwait loop sbb out out rex.WRXB fdivrp movsb (bad) shlb (bad) and (bad) rex.WRB and push or gs (bad) imul xchg (bad) (bad) (bad) js rcr sub leaveq adc xchg lods fwait cmp pushq adc (bad) rcrb (bad) mov mov (bad) fdivr pop (bad) sub rex.W (bad) and hlt fisttp adcb lock sub pop insl fcmovnu or std (bad) data16 cmp imul (bad) mov or (bad) mov rex.WB jbe cmp (bad) shl cmc in fdiv cmp (bad) add sub sbb shrb or (bad) adc or or movabs mov incb jb rex.W movsb or (bad) or xchg (bad) lock sbb xchg rex.XB rex.W (bad) sub and adc in (bad) outsl shl (bad) or mov cmpsl stos xor lock test and cld push xchg (bad) outsl (bad) (bad) sbb or (bad) (bad) cs std retq sbb movsl imul pushq pushq shrb mov jmpq or imul or pushq rex.WR movsb mov out insl divl rex.WR rex.WRXB (bad) pushq movb cld movsl leaveq sub add movsb (bad) push rex.RB pop rex.RX retq mov adc addb push callq (bad) push callq gs ror mov fcoms cmpsl xchg pop sub fnstsw mov outsl movabs or mov rex.R (bad) fbld data16 out sbb callq and mov mov add test and cmp mov (bad) cld out cmpb xchg (bad) (bad) adc movabs in movslq add sub sub clc or sbb jae lods cmc movabs cmpsl rex.RX rol data16 jle jmpq rex.WRXB rex.RB leaveq sub rolb pop (bad) test or (bad) lods cltd mov fcoms (bad) jnp jne retq jmp mov mov pop (bad) (bad) mov fwait mov std xor in rex.RX lock or andb xchg rex.WXB outsb dec test xchg rex.RB cmp xchg (bad) loopne xor rcrb xchg sub and xor stos lock and push fist in fldenv icebp or imul sub cmp repnz jmp imul enterq (bad) pushq mov int loope cmpl and (bad) out xor rex.R enterq iret retq test mov retq cmp cmc or shrb pop adc jrcxz test scas mov pop nop cmc ja mov imul pop (bad) icebp (bad) xor sub out imul callq imul (bad) js int ficoml push adc loop int3 rex.B rex.RXB (bad) add repnz rcrb pop retq in sbb std test movabs and scas lret xlat int rex.WRB push mov xchg outsb (bad) rex gs nop cmpb and (bad) pop (bad) xchg pushq fldl test fdivs jae mov test gs mov mov xchg cmpsb pop sahf xchg xor sahf xor loopne add icebp pop (bad) in or cmpb pause mov ja (bad) sbb out fstpt add rex.XB jbe cmp mulb (bad) jb rcrl jmpq sti fistp test (bad) jno (bad) in cltd movabs sub out add jnp movsb adc and cs mov and movabs divb fisubr divb movabs fwait in add data16 insl retq push (bad) mov xor cmpsb stc xchg (bad) mov jno out sub cmp rex.WR lock insl (bad) mov or (bad) (bad) (bad) lock cwtl in xor mov cmp pop push clc nop jge imul cld xor int hlt imul movsb cmp cmpsl enterq mov ds enterq jae in insb or sub or rex.WRX rex.WXB jne push cld (bad) sarb jrcxz cli and hlt (bad) shrl mov or roll movabs xchg sub mov mov mov out pushq imulb cmp push retq clc pop add (bad) mov push pop movabs mov or fwait out shlb xchg push (bad) cli movabs ljmp (bad) push adc mov in fisubrl jo (bad) mov stos leaveq cmp sub rex.WRB test xlat mov lock cs pop int3 jrcxz mov sbb mov mov in movslq mov repnz out imul rex.WRX addr32 pop mov jo test imul (bad) test adc cli pop mov test adc push (bad) jne and adc (bad) (bad) (bad) cs fnstsw lods rex.X fs lock cs (bad) (bad) test xlat xchg mov push and sbb (bad) out push fdiv rex.WRXB icebp stos cs test cwtl enterq and clc jo (bad) jb cmc andl add rex.B or imul fist (bad) mov (bad) jne adc rex.RX (bad) gs (bad) cmpsl sub cmp shrb cld xor or (bad) cli test insb sub lret outsl push test pop pushq xor xor insl mov jae rex.B xchg (bad) in jnp fisubr out ss fsubl nop push addr32 jmp cmc repz or mov adcb jle cmpsl out fld (bad) add movabs enterq leaveq or insl mov gs int3 lret xor jnp add or je movsb movsl cmp or movabs repnz test (bad) pop lret in (bad) or (bad) repz movsl sbb out stos insl sub jns fdivrs stc pushfq rex.XB rclb jns (bad) addr32 sub idivb xor xchg and and (bad) mov (bad) dec dec mov jae scas rex.WB xor (bad) pop fs xor or ds mov mov addr32 xchg (bad) mov hlt mov rex fisubr int3 sar out push fistl in rex.B jp out mov add xor xchg imul (bad) stos sarb jns push cmp sahf pop (bad) fwait xor jns or (bad) movslq (bad) or adc add sahf mov mov (bad) stos rex.B add in fs addb in xchg jns hlt cmp jae rex.WRXB clc cmp mov imul rex.B and jns shrl mov addl and movabs pop adc (bad) movabs loop shrb stos mov scas mov sbb push rex.WX sahf rex.RXB movabs out adc rex.WRXB test mull icebp push (bad) (bad) sbb or cwtl mov scas pop hlt out outsb rex.X loope xchg pushq callq insb adc lods jg stos cmp adc xchg (bad) (bad) jae rex.WRB rex.RB stc xchg fcomps jb jbe (bad) sbb jns (bad) mov mov hlt mov push rex.RXB (bad) (bad) push insl enterq out jrcxz cmp lock rex.R scas rex.WR (bad) ja mov sub (bad) loop fmul cmp ja xor mov (bad) xchg gs fbld pushq jl nop loope (bad) sbb lret jb jmpq in callq pop (bad) jmpq or leaveq mov in out xor and pop pop rex.R and lods addr32 repz movabs ds js jne data16 or and imul in (bad) sar stos nop retq cwtl movabs xchg add adc xchg mov retq loope xor rex.WRXB mov fs callq or push retq add jo imul retq fstl movsl in stos rex.WX jae lock outsb adc adc (bad) enterq pop cmp out jg cmpsb sub (bad) (bad) mov stc jrcxz fild mov rex.RB mov insb rex.W repz ror rex.XB cmpsb idivb (bad) hlt fcoms jrcxz enterq jl mov (bad) rcr mov movsb (bad) gs and adc (bad) xchg mov (bad) cwtl lods push add test rex.X jns pop jle mul enterq jo jle pushq movslq rex.RX (bad) cmpsb rex.WX pop mov test push jp jae test and mov movabs pushq insb cmp lock js iret (bad) lock and rex.B cs je mov push rex.WRXB rex.B pop (bad) mov jo xchg xchg imul and fisubr mov sahf movabs mov (bad) imull jrcxz retq loop or mov rex.WRX xchg (bad) rex rex.WR rex.WRX jnp (bad) xchg movslq cmp pop rex.RB sub mov pop faddp xchg rex.B push jo sar jb gs cmpb lods rclb in push xorl rex.WR gs movsb movslq and or xor rex.RXB movsb test mov jno mov mul mov mov clc and jp cmpsb in jns popfq cmpsl rex rex.RX (bad) add out rol fsubrl mov (bad) adc nop (bad) shrb gs clc adc jrcxz cltd (bad) jno adc adc (bad) (bad) fucomip movsl sahf add imull pop lret roll gs jge sbb (bad) movsb rex.RB adc rex.WRX add movslq xor xchg sub cmp stos jo in leaveq jne jge div jns and divl rex.RX sub repz jnp mov cmc outsl movslq sti push rex.RXB jne or cmpsb scas sti lods jrcxz xor in add imul enterq cmpsb out (bad) (bad) ds jae xlat insb jge mov ror mov (bad) or or and xor rex.RX lock lock hlt out test in and pushq jnp (bad) push (bad) cmpsl (bad) mov add sarb (bad) cmc rex.RXB shll lahf iret jle movabs (bad) lods mov insl (bad) movsb pop lret (bad) loope in leaveq and mov rex.W scas (bad) sbb and pop movabs (bad) fsubrs imul mov jnp jo rex.RB or jle mov int3 iret jne fs (bad) or xchg sub jg je sbb test or sub movslq (bad) jns rol cld rclb pop or rex.WB mov or xor lea mov movabs leaveq and movabs or cwtl testl pop callq xor (bad) or mov (bad) lock sub and mov pop in sarl rcrl fstpl (bad) xor (bad) (bad) rex.WX cmp (bad) stos (bad) (bad) loope stc icebp test pushq (bad) xor es in outsl fbld in sub stc std gs pop sbb sbb sub movsb and xor movsb jmpq (bad) (bad) repnz xor lret (bad) or in fbstp pushfq fisttpll pushq add cs (bad) in outsb scas (bad) leaveq cmp cmc rex.WR je jmp rex.B ja (bad) fstpl sti xchg jo vzeroupper mov and cmp lods lret adc scas cmpsl rolb jnp bswap enterq cmp mov jb lret sarb in jl lods clc push nop xchg gs jns adc and popfq push leaveq or mov (bad) and pushfq mov sbb jg not or rex.X movabs shr clc lret (bad) (bad) pop lahf movabs and jg in rex.RX push jns rex.XB out rex.X lods cld xor rex.WR nop pushq sub movabs jl xchg lock fs or mov (bad) mov pop mov jo sub add lret loope jno mov rex.WXB add cmp sbb (bad) popfq lock leaveq xchg cmc subl push (bad) (bad) mov insb or rex.R gs movsb rolb or sahf divb movslq movsl lods push xor imul je retq cli mov cmpsb push sbb or push jne xchg lret in or scas (bad) rex.WRB stos insb xchg pop jg and xor push insl (bad) iret loop pop pop adc callq jne or jge leaveq rex.RXB pop (bad) mov pop pushq push vcvtss2si in jge mov movsb loop test stos in retq sub (bad) sarl mov rex.W jmpq xchg cli add (bad) (bad) insb lret (bad) cmp or rex.RX sahf add add pushq mov xor cmp (bad) iret es mov xor sbb hlt mov push je cmc test pop (bad) jrcxz sub test test jnp sbb (bad) (bad) popfq stos sub and jns (bad) cmp incl fist lods popfq outsl xchg sbb (bad) (bad) movabs push (bad) or mov fistl push xor cmp (bad) int xchg cmc mov lods imul mov mov in mov test out (bad) xchg stos scas out jrcxz adc rex fs xlat xchg retq rex.X rex.WB repz jnp mov mov and sahf push sbb mov rex.B rex.XB mov cwtl jle (bad) out push cs repz test in or jo (bad) jb in or loope cmpsb js (bad) clc jmp rex.WRX jl movabs push (bad) or nop out jae xor (bad) movsb sub jmpq (bad) fsubs (bad) rex.WRXB sub push int (bad) sub rex mov (bad) int popfq out rex.WRX shrb in rex.XB icebp push in popfq scas loope std lret or mov pop adc movabs cwtl push imul mov test enterq inc int3 rex nop js rex.R fcmove push jb add or jge in fs mov (bad) (bad) (bad) rex.WRX lahf adc rex.WB cs (bad) mov (bad) mov outsl decb cmp fdivrp mov rex.RXB stos movabs push in jb out in pushq icebp mov scas rex.XB lock lods in out in sub retq jmpq or add je rorl test jae retq cmp (bad) cmpsl mov (bad) jle lock (bad) and mov jp or (bad) js in jns or stos jrcxz jg rex.WX rex.RX rex.WB imul (bad) xor add movabs iret jae bswap add adc jmpq sub hlt rex.X retq push ja sub cltd or mov xorl out rex pushq (bad) mov or add cwtl (bad) jrcxz cwtl sub cli (bad) (bad) cmpsb sub jo mov jrcxz data16 xchg sub jo push retq lret and rex.WRX test (bad) xchg cli rex.WRXB rex.WB rex.WXB and mov pop jbe xchg cmc rcrb (bad) pop adc retq cwtl lret push (bad) nop (bad) pop adc movslq pop add push out or lret rex.WXB (bad) sti (bad) (bad) (bad) lods lock lods lods xchg in push out movabs push push sbb in fnstsw (bad) (bad) mov xchg movsl mov insb (bad) rex.W cmpsl (bad) (bad) push jns fcompl cmp add in (bad) enterq adc (bad) lock and pop mov ja outsb (bad) fist imul movsl sbb out (bad) (bad) fistp imul test adc sub rex.WRX xchg mov and es adc (bad) jmpq (bad) fisubrl sub rex.RXB xlat xor (bad) (bad) lock push mov movabs in (bad) imul in test cmp cmp rex.RXB rex.WRB lods mov push xchg movsb pop fisttpll (bad) cmp rcr rex.WB (bad) cmc int3 movsl fadds (bad) mov imul jmpq icebp pushq out jno popfq xor adc mov stc pop or mov and (bad) (bad) insl (bad) fs mov sub movabs (bad) rex.WXB (bad) jmpq mov sub jle iret (bad) push rcll fadds rex.R mov mov repnz retq cmp out jo rex.WRX fsub test (bad) fistpll lock std imul lret fs xchg (bad) xchg mov mov sbb lods loop invd addr32 rex.R lods cmpsl imul sqrtps repz imul cmp test and (bad) pop (bad) jbe out rex.WRB lahf jrcxz lods in movabs sbb cmpsb add (bad) (bad) pop test mov xlat nop fwait mov mov outsb je jmpq ror addl rex.WRXB shrl test movsl push out fs int insb insb xchg cld loop cmp adc adc popfq enterq hlt int3 mov rex.X fcomi add popfq adc movb (bad) jle (bad) outsl subb cmp (bad) in rex.RB addr32 mov fisttpl test fildl sahf addb rex.WRXB rex.WX subl (bad) test rex.R jle mov movabs movabs sub sub adc push test loop cmp cmp mov jl or mov cmp adc (bad) shr sub lods fstpl jae rex.XB jnp fstpl icebp test (bad) mov (bad) fwait (bad) (bad) test jo movsb clc (bad) mov mov (bad) cld (bad) jbe rex.WRB sub iret stos jno sbb xchg stos or mov rorl ja xchg rex push and ja xchg (bad) int mov lock rex.RXB xlat ja out callq hlt cmp std adc cmpsl insl mov mov (bad) popfq callq sub xchg (bad) mov faddl gs push in mov pushq in pcmpgtw jg (bad) pop add sbb loop movsb in imul cmpsl and loopne lods enterq fnstcw mov (bad) add add (bad) xchg in rex.B (bad) and insl xor (bad) callq ds enterq icebp insb mov mov add lea movabs rex.XB or mov push mulb mov (bad) rcll jnp shl xor fldcw movsl xchg lock fldcw (bad) cmp or lock loope jo in sbb xchg jrcxz in mov movabs xchg fidivr or movsb addl rex.WB mov int3 rex.RX in xlat enterq in clc hlt sub jb stos imul movabs sbb mov (bad) mov and loope xchg mov out mov jg insb test rex.X movabs jp (bad) cmpsl movslq data16 hlt test wbinvd test in and pop lea add leaveq cmp cltd (bad) rorb or insl push ds and jl rex.R mov mov mov icebp mov sub lods ss stc in in test loope gs jg loop inc retq add insl popfq mov adc jmp int3 cli cmpsl imul movsb fnsave add out in or xchg add (bad) sti jno jbe or nop sub fildll fcmovne test repnz xchg cmp test clc scas test (bad) mov xor callq lahf jl fadd xor (bad) movabs test add test add stos callq jrcxz in fnstsw out jns (bad) imul (bad) sbb jnp mov mov movsb addr32 ja xor and (bad) loope cmpsb inc movabs (bad) loopne xchg in (bad) push xor out mov sub movabs jo ds xchg fcomps fild outsl (bad) mov jns push jae push mov mov int kmovw and retq fs add rex.B gs jmpq jle xor lret (bad) movabs out mov xchg stos jnp imul xchg fisub movabs cs insb lock pushfq andl hlt mov (bad) (bad) out in (bad) (bad) outsb and icebp (bad) loopl add in cwtl rex.WRXB fild (bad) loope imul scas cmpsb and enterq push movslq rex.WXB rex.R cli lods in lods movabs add pop test xlat js (bad) and rolb retq cwtl int3 mov pop mov stos subl push (bad) rex.RXB cmp or push pop cli xchg movsb (bad) (bad) in callq imul adcb out mov out addl mov movabs cld and movabs mov cmp push cwtl fbld sbb adc lea notl rorb (bad) cmp xor lods xchg jne enterq mov mov icebp mov pushfq (bad) mov je mov cltd repnz movabs pushfq or adc movabs out rex.RX rex.B int sub roll xor (bad) (bad) repnz fs pop scas incl enterq rex.B sbbw (bad) sahf (bad) callq addr32 lock callq sarb xchg cld xchg (bad) jp lods lock xlat xchg mov rcll add adc mov insb lret mov lods mov rex.WR (bad) xchg cmp out pop mov test mov xor pop xchg je rex.RB rex iret jl fbstp mov or fisttp (bad) stos (bad) cmp rolb and notb (bad) cli icebp and or mov lock ds fsub in and sub mov jns push (bad) add lea (bad) pop pop cs mov (bad) xor (bad) mov clc add lcall movabs sub out out fs (bad) fcomip in cmpsl divl or div inc mov ss push lods rcl xor add (bad) xchg out addr32 and movabs (bad) sub mov paddq pop pop shrl jge and sub hlt (bad) cltd stc mulb (bad) xchg mov out xor mov xor (bad) in in rolb repnz (bad) mov pop je ss out and (bad) sahf in jne fisub in jbe xchg lods (bad) mov mov xor xchg (bad) mov frstor xchg in fldenv jmp adc outsb (bad) test mov mov xchg add mov jbe movsb in (bad) mov fnstsw rex.WRXB cltd xchg test out movabs mov lods (bad) mov pushfq movslq loope (bad) mov sub (bad) data16 mov stc fistp test callq or lods rex.RXB addr32 mov (bad) mov imulb push lock hlt jmpq movabs mov xor sbb or in addb xchg mov and cmp xor mov and mov in movsb add movabs movabs sub (bad) mov mov jo pushq mov movslq xchg adc nop push (bad) jae (bad) int3 retq (bad) js imul xchg mov movabs push loopne sbb sub iret jbe add iret int3 or mov scas rex.WX pushfq loopne and js and fs mov xchg jno (bad) lret retq out lods add fcomip adc stos jg push out cltd leaveq jrcxz pop jrcxz xchg clc adc (bad) rex.WR push (bad) fistpl xchg xchg loop xchg cs test xchg jns rex.R mov shlb (bad) lret movsb fs in xchg lahf outsl fistp mov rex.WR rex.WRXB (bad) stc frstor fbld out (bad) rclb jo rex.WRXB mov pop addl ds incl jnp out sarl or pop loope rex.WRB rex.WRB (bad) cltd test ss xor and mov pushq jg fs test xor (bad) mov repz pushq rex.WRXB sbb fiaddl jae sbb xchg (bad) sbb jb and mov imul movslq or sarb xchg sub lock (bad) js in add pop repnz int3 test pushfq movl clc (bad) pop pop hlt fcomip (bad) addr32 movsb (bad) leaveq (bad) or rcrl xchg test adc sub xor rex.RB rorl or test add in pop je mov jo out (bad) or punpcklbw mov fldcw xlat mov addr32 cmp retq sub (bad) (bad) loopne mov rex lock pushq mov add mov xorb rol adc add xor cmpsb mov cmpsb pop pushq jns int leaveq outsb mov sbb xor notl retw insl xchg mov mov divb fnop mov js or push movsb sbb xor fcomip (bad) mov rex.WX data16 (bad) shrb rcrb stc mov xor out add stos xor xor (bad) and mov mull (bad) callq xor int3 scas fist cmp adc (bad) es jmpq cmp loop (bad) test xchg je push pop repz (bad) insb jg out imul push xlat jmpq cmpsl add pushq (bad) sub (bad) sub in loope rcrl sahf xchg (bad) mov callq (bad) insl sub outsb cwtl and sub adc add rcrl jmpq (bad) decl (bad) loop movabs lods shl js mov xchg and rex.WRX (bad) or rex.RXB test movabs rex.RX rex.R gs fmulp (bad) leaveq push jrcxz test jmp movabs cmpsb jns and shlb js callq outsl int adc xor push stos (bad) imul loop (bad) and (bad) mov pop (bad) ds xor (bad) rex.WXB sbb xchg retq (bad) mov iret cmp pop shlb pop sub xor out sbb enterq int3 stos insl jmp movsb loop fs adc or rex.WRXB mov movabs ds and test (bad) movabs xchg (bad) fcmovb sub lahf loope (bad) fistpll cmpsb xor rex.R push cmp stos rex or movabs (bad) cmp movabs and divl ja ss rcll in retq test and mov addr32 out adcl or fwait callq sbb test fnsave sub jnp lods rex.W sub add adc mov fmul (bad) gs retq stos cltd rex adc sahf (bad) fisttpl rex.WRX (bad) xchg int3 xchg and test test movabs add cwtl rex.X (bad) jrcxz fdivrp (bad) mov cmp (bad) shlb loope movabs (bad) jb sti in jmpq (bad) repnz in sbb cli sbb jle imul rex.WRXB mov mov lea (bad) push lock jrcxz rex.WR (bad) je in jne outsb fidivr faddl lret rex.W rcr fcmovnbe out xchg cmpl jrcxz or adc add sbb in (bad) lock hlt addr32 pushq xchg lock movslq xchg int sbb mov fsubl (bad) mov xchg xchg lock (bad) jrcxz shrb (bad) je cmp lods std rex.WXB es rex.W fs clc fldenv jbe push movsb pop mov rex.WRXB (bad) icebp (bad) out (bad) mov (bad) jle (bad) fidiv sbb imul clc and mov rex.WR outsl fs mov lret callq rex.W xchg cli (bad) lods fisubrl sbb sub (bad) mov outsb push stos jmpq xchg in imul hlt mulb lock cmpsb in addr32 (bad) and add test movsb (bad) test scas pop mov clc jle pop adc int retq insb sub sahf cmp (bad) (bad) jb lret xchg sbb sar jle cli lods imul or ds jae rex.WX ds negb mov in adc loopne lods lcall or cmp xchg pushq nop jle push sbb pop retq cmpsl incb shlb mov rex.RXB in gs push sar jg adcl ss leaveq out in or xchg cmp cwtl subl mov mov sbbb idivb mov out rex.WRX rex.RX mov (bad) in pop add cmc rclb ja (bad) (bad) (bad) rex.WR jns rex.W and (bad) sbb pop xor xlat cmpsb stos adc (bad) jns mov sub or retq cmpb jrcxz data16 rorl nop (bad) je orl (bad) mov scas add data16 test cwtl xchg outsl adc (bad) in out je (bad) movsb (bad) insl adcb (bad) mov cltd (bad) xlat sbb cwtl pushq mov sahf pushq (bad) mov cmp stc cltd sub (bad) addr32 cwtl jb pop test rex.WRX hlt mov cli (bad) adc rex.RXB movsl fs test (bad) pushq test shrb (bad) outsl sarb insb mov scas (bad) ds mov cmp and jbe add int rex.WRB rex rex.WRX (bad) push (bad) rex.W ds lret (bad) lock mov callq popq mull jbe rex.B push add xchg (bad) or retq (bad) jp rex.WR rex.RB retq pop lods ficomp scas xchg add retq push (bad) pop lret (bad) callq in (bad) jbe (bad) (bad) test cmpsl iret loopne mov mov xor mov (bad) gs movabs jo testb fisttpl hlt fmulp jo rex.WRXB scas sar (bad) int rex.X mov addr32 mov ss enterq or adc jmpq addr32 xor fisubl xlat insb mov ficomp rex.WB lock shlb mov (bad) (bad) pop pop neg (bad) mov js (bad) stos leaveq clc jo and mov cmp (bad) sarb es movabs mov lcall lea xchg mov or sbb mov pop mov sahf sub adc cmp rex.WXB mov xchg adc fs clc callq int mov cmpsb adc push leaveq mov (bad) jae sbb mov (bad) insb xchg (bad) int3 and out mov (bad) mov push hlt or (bad) mov retq (bad) (bad) mov rex.R pop (bad) xor imul lret sbb pushfq (bad) jle cmp sub (bad) out rex.RB jo gs sub addr32 mov shr popfq fidiv mov imul mov (bad) enterq callq adc jmpq xchg callq jmpq lret cmp ja lods push movsl (bad) loopne jae xchg push rorb rex.WR pop out mov jbe out (bad) push in sahf cmp in adc stc jmpq es (bad) rex.R icebp mov fimul jne movabs (bad) in sub stos movsb fidiv cwtl pop jno testl cmc int (bad) movsl shrb vpsrad callq rex.W lock enterq fs movabs jrcxz jge hlt pop in jae,pt mov sbb rex.WRX movabs callq fs scas es in (bad) rex in jmpq xlat dec icebp pushfq jae loopne mov callq testl loope sti stos nop callq movabs adc (bad) in (bad) mov movabs cmp (bad) in mov add in out sbb fldenv (bad) rex.X cmp (bad) ja shlb in ds movsb (bad) jrcxz (bad) imul cmp lods sub iret mov scas (bad) pop xchg lods adc and stc mov mov loope mov incl pushq jns pushfq test je lret sbb xlat mov (bad) rex.XB scas out rex.WR (bad) jno idivb or adc push xchg pop sub callq scas test mov (bad) andl adc sbb (bad) xchg or (bad) fdiv movaps prefetchwt1 xchg fist (bad) xchg mov js and jmpq sbb fdivr (bad) ficompl rex.WX faddl js fiadd int fs add out movsl insb retq addr32 repnz cmp xor (bad) xor mov iret ja test and cmp movsb loope (bad) and (bad) and movabs cmc test (bad) mov orb stos retq frstor sti add sub enterq notl cmc (bad) scas movabs out add mov (bad) movabs mov fwait jo gs sub cmp out add add ds sbb sub lods pop jmpq xor push out cmc (bad) sub movabs xlat out adc (bad) sti mov pushq (bad) xor xor stc lods jmp push xchg xor gs (bad) icebp lahf cmp in mov (bad) movabs jne xchg sti pushq icebp cmpsb and movslq mov (bad) mov int3 rex.WX jb mov rex.X mov iret push cmp loop mov adc mov cmp fnsave or (bad) fnstsw xchg rcrl (bad) movabs movabs sub push xchg cmp (bad) jnp rex es gs fwait movabs jns pop stos xlat test xchg (bad) xchg mov jno push (bad) sbb out adc rex.W rorb shlb xchg or xor sbb and hlt jo rex.WR (bad) (bad) (bad) lods cmpsb fs adc cmp int3 (bad) jb rex mov lret stos addr32 xlat mov retq frstor xor enterq cmp imul retq cmpsb xor or mov cmc and insl and js adc fisubl movsb movabs mov jg or (bad) and je cmpsl loope movsb rex.X js and scas rex.XB sbb rex.WRXB outsl imul in mov cmp out cld pop loop xchg rcrb or mov in mov mov sbb (bad) cwtl rcll xchg jmpq out rex.WR pop fcomp jnp and (bad) sbb stos sbb xor sbb mov sub rex.WB sahf mov xchg out cmc sbbb (bad) loope sub sbb retq fwait imul retq mov (bad) sahf stos mov (bad) mov lea enterq (bad) cwtl clc sub lock sarl scas xor fwait nop xchg in retq xor movsl jo rex.R mov (bad) xchg xchg repz es sbb or (bad) lock (bad) sbb (bad) xor mov lret cmpsb add in pop mov sub movsb callq mov add cli cltd xchg rex sbb (bad) cmp movabs out retq std mov in shll stos or callq sub or lods stos popfq vmovddup mov cmpsb imul out in xchg movsl (bad) in (bad) callq test (bad) sub pop rex.WRX in rex.W clc cmpsb fstpl lock cmpsl xchg sbb mov lock cmp mov movsb sbb push mov sbb (bad) in or (bad) mov sbb sub callq adc jmpq jne je jle sub out (bad) out xchg lock retq lods mov js (bad) jns fstp rex.RXB pop push mov (bad) jo sub insl (bad) or mov cld rex out je xor movabs sub (bad) add rcl mov lahf out mov (bad) sub fcomi mov rex.WRXB add mov mov push (bad) (bad) xlat outsl (bad) pop retq (bad) rolb retq (bad) jrcxz jmp enterq in (bad) xor xor (bad) cmp nop sub fs (bad) push retq or (bad) mov in pop pop rex.WXB lock in (bad) push int3 jrcxz xchg mov out (bad) int3 test (bad) mov or insl (bad) stos rex.RX rex.RXB pushq (bad) add xchg jo (bad) or (bad) cmp or mov xchg cs imul or jp ds (bad) jo and sahf add jns sub (bad) (bad) xchg retq sarb adc (bad) jo fwait sub lret mov xor test insl jrcxz movslq scas mov movslq insb cs mov sub adcb movabs out clc test psrlw mov hlt xchg test out test rex.WRXB (bad) clc sbb lock stos movabs mov lret or movabs in data16 shlb cwtl jp cli nop lret xchg mov insb outsb xchg cmp xchg adc outsl imul or cld fimull (bad) ds adc (bad) (bad) mov lods jp cmp xor bnd jp es cwtl idiv movabs mov push adc xchg out adc (bad) jb mov (bad) pop insl adc xchg rex.B neg mov cmpl mov mov add and addr32 (bad) xchg nop add xor xor jne jns xor cmp sar hlt imul and xor (bad) pop (bad) push cmp pop xchg xor cmp mov push xor subb sbb fstl icebp jno (bad) pop rex.WRX movzbl rex.WRX fcomps pushq rex.RXB in (bad) (bad) (bad) xor fcoml (bad) fldl icebp pushq xor sbb pop jle lret mov nop imul (bad) (bad) cld (bad) sbb lret cmpsb sub adc sub xor and pushq (bad) sub sbb (bad) xchg jno (bad) jmpq jle in test in sub out int int (bad) pop (bad) mov (bad) mov jg mov (bad) callq test mov sbb jnp jle lods pushq mov and (bad) (bad) (bad) movabs (bad) addr32 add fs jne retq (bad) (bad) rex.WB fwait mov or add loopne sbb (bad) xchg mov retq adc js mov cmpsb pushq (bad) xchg loop jns and out int test pop pop xorb lods and mov or (bad) xor jo fidiv jno push jno adc pushq cmpsl imul clc (bad) xchg lock cmpsl in or mov enterq (bad) stos loope (bad) cmpsb movslq (bad) idivb invd hlt test xor pmullw cmp movsl and andl stos in stc lods xor mov and pushq rex.RX lods adc gs sub (bad) pop test and incl rex.RXB flds insb and idivl fucomip mov (bad) ss push sub adc cmpsl andl fcoms mov mov cmc pushq cmp jp (bad) xor sbb mov (bad) fwait (bad) rex.WRB cmpsl popfq adc rex.WRB (bad) xchg in pop jmpq repnz pushfq rex.WRX cs jl xchg in roll xor adc sub loope cmp lret idivl int3 fcmovb mov test add xchg jmp xchg in loopl clc icebp sub (bad) xchg xchg mov rex.W jne add int addr32 movsb mov cmpsl mov (bad) mov rex.W or popfq scas sbb add in lods rorb mov xlat test xchg (bad) movabs movabs mov repz loope pushq mov rex.WXB mov or pop addr32 sbb mov jg stos movslq and stc out std scas (bad) fsubr mov (bad) (bad) in (bad) xor out rex.W cld mov and cmp movsl out mov (bad) pushq (bad) (bad) mov push in in pushq fwait (bad) clc (bad) push sar jmpq stos jo (bad) mov lret fisubl loopne fadd jle mov data16 in sbb push (bad) gs push in cs and insl jg (bad) jrcxz stos test (bad) cmpsb movslq lods and rex rex.RX fmulp fwait (bad) adc (bad) lock rex.RXB in hlt mov lret (bad) (bad) fs jl outsb fcoms callq push add (bad) (bad) (bad) test callq fsubrs mov imul (bad) addr32 vpandn pushq fsubrp mov add fs adc and cltd (bad) (bad) out cltd pavgb retq mov add add loop mov (bad) cmp int imul jae (bad) callq fcomi fmull cmc and pop fldt (bad) and (bad) js jge insb (bad) jle (bad) mov or loope rex.WRXB cmpsl frstor icebp shrb out lods int jae hlt stos (bad) rex.R mov lods test push js int3 shrb jle rex.WXB (bad) js std cmp lods gs add es jrcxz cmp ds movsl loope (bad) rcr or rex.XB mov or movabs xor jbe cmpsl int cli xor and std jns es mov (bad) cs lods adc (bad) cmc fs fdivrp sbb cmpsl fs or shrl xor or xor out stos in mov pop lods fbld test imul ss pop test (bad) push (bad) jo loope pop callq adc (bad) decl (bad) push jle retq mov insb and push lods cmp test and notl js mov test movabs sub movsb repnz sbb (bad) xchg idivb lea pushq addr32 jp cli jbe int3 and lods (bad) clc cmp nop retq sbb insl jrcxz adc sbb cmp push (bad) frstor (bad) lods xchg and sbb and imul lods sbb rex.WRX mov fs or in jae and hlt jo and cmc test sub or or loop in insl rex.WXB stos adc and test maxps fwait out add movabs hlt jo callq (bad) js mov adc fisub test (bad) push rex.R xlat hlt pushq fsubp (bad) lahf mov push movslq addr32 mov pushq lret mov (bad) sbb sub and and movsb fwait (bad) adc fwait lods mov add sbb loop mov or mov mov insb mov rolb fsub loope scas rex.RB fdivr cmpsl rex.RB inc imul jrcxz addr32 insl mov cmp (bad) pushfq (bad) rex.WRB rorb cmc (bad) cmpsl retq fsubrs or jns and push in and jns (bad) (bad) clc cmp rex.R xor rcrl addr32 js out in repnz in jbe cmpsb addps xor xor movsl add in jp rex.W cmp (bad) lock xlat callq and sbb rex.W xor mov imul imul mov in icebp lods fnstenv lods rex.WRX pushq mov mov test (bad) fnstenv retq outsb sub adc in scas (bad) mov jo mov xchg (bad) shll cmpsb rex.W lods jrcxz adc out xchg mov test mov push retq stc jne test imulb mov sbb pop (bad) add mulb outsb sti xor lea mov add retq je pop pop or fstl repnz lock mov (bad) out roll jmpq rex.WRXB addr32 (bad) scas imul mov sbb insl scas pushq sub fidivr rex.B out iret push or or clc cmp adc stos in cmpsl adc xchg or repnz jmp add mov (bad) callq out nop jle movslq retq repz jp lods (bad) leaveq addr32 cmc pop lock and mov fs jl (bad) lret (bad) out add rcrb movabs out rex.RX out callq rex.WRXB cli (bad) lcall adc es xor rex.RB or and addr32 xchg iret mov (bad) callq adc test (bad) (bad) rex.XB (bad) or sub (bad) ja rex.R (bad) movabs movabs sbb (bad) test insl ds sbb cmp (bad) (bad) (bad) fadds push rex.RXB int (bad) rex.RB movabs imul mov (bad) lock lcall rex.RXB xlat out in pushq popfq callq adc outsb sbb (bad) or in jmpq rex.WRXB rex.RX jle cmc movsb insl cmpsb add out mov repnz xor sti loop fs (bad) repz and mov sbb lret retq (bad) rcrb cmpsb loope xchg xor jp jg movsb lret retq rex.WRXB mov (bad) lret jg retq repnz or in repz push adc lods sub sbb (bad) gs or add in sub fwait add iret mov ljmp xchg (bad) jae add (bad) sub stos movabs in (bad) mov xchg movabs mov out out gs clc cltd add nop rex.XB add rex je mov rorb xor jne pop pop lret and out (bad) int mov mov pushfq jrcxz sub outsl movabs jno outsl or gs iret mov (bad) (bad) mov rorb adc sub (bad) mov insb divl test cmp stos pop mov insl and rolb (bad) pushq cmc stc andl out out rex.WR je mov (bad) rex.RX push adc es jo (bad) lea shlb (bad) sub (bad) test lea (bad) repnz jb sbb xor retq (bad) fimul mov pop (bad) test fbld test sahf cmpsb (bad) rex.WRX mov test data16 icebp sti mov sub and (bad) loop add callq cmpsb and jno rex.WRX cld lods cli mov xlat pop rex.R xchg sar xchg jrcxz rex fsubr lods jmpq mov mov test sbb test (bad) mov imul jmpq in (bad) js setns callq mov hlt jge xchg pop (bad) sahf std (bad) rex.WR repnz jnp or (bad) sub bswap es (bad) mov (bad) jnp mov rex.R rex.WRB pmulhw xchg jns decb repz outsb (bad) (bad) rex pushq in clc (bad) movsb mov test or cwtl sbb cld rex.XB callq pop jno xchg lret lods adc callq mov lock fstl enterq xor rex.RB icebp jrcxz rex.WRB adc xor cmpl (bad) scas mul imul sarb add sbb xchg addr32 add (bad) imul or xor data16 adc and stos movabs loope rex.W cmc cld (bad) in (bad) data16 xchg movslq xor mov jle int nop or int movabs lock mov mov movabs (bad) xchg (bad) test sbb rex.X fs xchg insl sbb mov imul jge sbbl or jb cltd sti (bad) test jb,pt rcrb movabs lods ficom rex.R and mov cs (bad) fimul sti add push data16 (bad) jb rex.WRB out adc movsl push stos sbbl test jmpq add ja xchg pushq lods (bad) (bad) xchg loope (bad) icebp rex.WR (bad) movsl xorl fbstp rex.RXB (bad) push mov repnz nop (bad) loope add xchg and (bad) xor xchg movabs (bad) retq movabs mov rex.WB rex.X (bad) lock push xchg shrl imul adc repnz rex.R or or addr32 movsb jg ds xchg (bad) xchg (bad) in int and (bad) rex.WRXB and xor (bad) callq imul fsubr iret push mov test (bad) xor fidivr callq sbb sub xor (bad) mov rex.X cmp insl pop (bad) mov faddl xchg jp (bad) movabs (bad) repz (bad) and icebp jb pushq and xor jg out rex.XB cmpsb (bad) mov shl (bad) retq lock ficomp enterq or (bad) movabs movsl stos movabs loopne icebp pop jne ficomp fdiv int3 jrcxz mov and stc rex xor mov (bad) int3 mov sbb rorl add fdivp and test lock xor (bad) cmp (bad) repnz xchg (bad) callq ds (bad) fsubrs rex.WRX sbb fs mov retq mov rcrl mov pop adc xor in cmpsl (bad) and jne rex.WX (bad) sbb movsl pop (bad) flds rclb cmpsl icebp movabs (bad) sub pop cmpb cld mov clc loop out std addr32 pushq pop (bad) mov mov (bad) icebp fwait xor mov idiv lods (bad) lahf add rex.RX add lahf je jo lods or addl pushq (bad) test add and or adc ljmp (bad) (bad) mov rex.RX callq loop or addr32 sub cmp pushq ror rex.WXB add sub and sub add int3 mov rex.W push hlt fisttpll icebp insb pop sub rolb cmc and or or xchg and (bad) pushq (bad) xor repnz cmp xchg jne sub retq repz retq cmp loope xor lret push jrcxz stc sbb (bad) insb cmp add cltd invd sbb fs ffree retq fcoms sahf in cmp insb rex.RX (bad) pushq cmpsb rex.WXB (bad) sarb xor rcll cmp fildl fadds mov xor nop imul mov cmp mov stos clc xor rex.R setno in jmp fnstsw nop jge jae rex.B lock fs mov or rex.WR lods rex.XB lock jbe leaveq xor add sub rex.WX jo xchg rcl adc sub (bad) data16 cmpsl and notb mov movslq loope adc rcl js retq loope mov lret adc lods adc cmp jo add rex.WRXB fmull fisttp or or rex.WRB xor rex.WRX movabs hlt movabs loope cltd or cmc nop iret lods mov sahf fnstsw and cmpsl mov add movabs repnz lock jrcxz ficomp (bad) add cmp (bad) xchg (bad) fwait mov retq (bad) or jb add add or test (bad) movslq adc jb and adc insl and movabs orl xor popfq sbb movabs pushfq je xor xchg testl rex.X rex.RB mov (bad) std hlt jle mov xchg (bad) mov gs movsb fldenv ss mov and movslq (bad) (bad) xorl movslq or (bad) mov icebp (bad) mov xor imull cmp movabs sub test insw stos test xchg add jg cmpsl fidivl and mov int3 addr32 (bad) and jae rex.WXB scas add sbb lods sbb mov rclb (bad) cmp (bad) lods pop adc cmp in (bad) push mov jnp cmp rex.XB cmp mov jrcxz cmpsl add or jbe in (bad) shlb jo (bad) out test add in scas sub movsb cmpsl rex.WB rex.RXB data16 adc (bad) sub and xchg (bad) rex.WR out add xchg adcl mov sahf xor int3 mov rcrl cs out cmp push retq (bad) test cmp mov fild push sahf rex.XB fdivs and out test in xchg out (bad) int3 loope push cmp xchg (bad) out repz mov cmp fnop (bad) cmp (bad) jbe enterq jle pop fmuls (bad) push test (bad) mov xchg pop fdivrs insb loopne insl mov movabs cmpsl rex.WRXB xchg movsl movslq movabs subb movsb shll (bad) lods jl data16 jg (bad) movabs fs pop cmpsl insl mov and (bad) clc (bad) add rcr mov lret mov (bad) rcrb mov (bad) push and mov cltd lods (bad) cmpsb (bad) loope cmp clc cmpsb pushq sub cmpsl shrb retq mov retq sbb rex.WB rex.XB and mov ss adc loopne push (bad) out pop movabs test (bad) jnp mov (bad) out test sub addr32 movabs mov mov (bad) retq jns movabs cmp cmpsb mov rex.RB rorl add out and pop rex.WRX imul mov pushq sahf xchg movsl add (bad) movabs push rex.XB or mov flds vmovapd lret gs repnz rex.XB (bad) jrcxz jae in pop lret adcl es (bad) xchg jae mov pop lret xor xchg push sbb rex.XB (bad) sbb jle (bad) clc (bad) mov jb stos or pushfq mov fisttp gs adc jmpq sbb (bad) (bad) je rex.WB (bad) imul outsl addb jae movabs iret and cmp scas (bad) jb fldl push add jmpq (bad) sbb cmp (bad) adc fdivrs cmp rex.WRX nop xchg loope (bad) movsb adc rex.RX mov mov jae sbb xor xor and mov loopne fsubs callq out repnz fldenv or pushfq pop cwtl rex.WB test loope xchg rcr icebp cmp insb out flds nop cmc jae iret out movabs icebp push std movsb xlat sbb callq sbb or and retq loope rex.WRB sbb stc scas cli ficoml mov pop xchg (bad) pop and xchg jmp sub sbb and hlt adc add jmpq out (bad) sbb (bad) ss xchg jg fmuls sarb movabs sub lret fwait in out (bad) lret fwait add xchg add rex.WR cmpsb fwait and loop cmp and mov nop (bad) test in frstpm(287 bnd in add xchg scas cmp (bad) (bad) (bad) insl (bad) sbb xchg lret or imul push mov rcrl pop jg mov imulb dec callq (bad) (bad) (bad) imul cmpsl in fisttpll xchg out es enterq insb (bad) cmp mov out in sbb xchg retq rex.R (bad) mov jo outsl mov js test in or sbbl addr32 repz movsb rex.W (bad) movsb int3 shll icebp xor sub and movzwl and lret js retq mov (bad) shlb or sbb adc cwtl sub orl lret movsb cmc or (bad) cmpl fs mov xchg movabs and mov (bad) (bad) (bad) (bad) std imul movsb je loope loop mov sti jmpq or adc push es (bad) and cs jns je mov (bad) xor fdivs cmp repz enterq mull imulb insl or xor and movabs (bad) (bad) push std and lock rex.WB or imul rex.WR pop (bad) mov (bad) (bad) push rex.W pushq movslq pop test (bad) repz movabs callq insb mov (bad) add in jrcxz cltd jmpq mov (bad) pop mov mov (bad) mov jl xor and pop jb mov sub pop jae cmp xchg stos cltd nop stos (bad) insl stos add lea and pop (bad) or andl sbb test sub and pop out callq (bad) shrb movabs pushq push rex.R sub mov jbe jl sbb rex.W jne rcrl xchg add int3 movslq out cmp (bad) (bad) (bad) xchg popfq jo (bad) jmp retq (bad) and in imull add jle sti rex.WRX fstpt jbe rex rex.WX (bad) in and pop push ds sbb rcr mov pop data16 addr32 iret adc rex.WRX rex.WRB (bad) add push iret push int3 fcomps (bad) (bad) movabs sbb or rex.X pop (bad) xchg out movsb adc (bad) hlt (bad) (bad) int3 mov sbb callq pop mov (bad) mov add enterq (bad) xchg (bad) mov movslq rex.WRX cmp push cmpsb movsb callq movabs (bad) jo and movabs (bad) (bad) in xor (bad) movsl iret sarb (bad) (bad) rex.X jnp jbe xchg cmpsl (bad) movabs movslq rex.WRX enterq lock push mov ja mov rex.W mov loope rex.WRX cs xlat adc test xchg inc movsl hlt fldcw xchg hlt pushq clc push mov mov lret clc enterq sbb rorl (bad) rex.WRXB jae movabs pop mov (bad) loope lock push pop cmc nop in rex.RX cld int lock jns jns stc clc (bad) and (bad) scas vpmulhw (bad) loop (bad) mov (bad) std (bad) mov fild (bad) rex.W insl rolb nop iret (bad) (bad) or rex.WRX (bad) add (bad) add lods push (bad) pop movsb ror pop adcl jmpq sbb mov sbb jnp out jb adc sahf sub mov pop jo movabs jnp outsb xchg rex.WRXB (bad) in push stos shl sub or movabs loope mov lret pop (bad) xor cltd rex.WRXB adc (bad) jbe lret pop jrcxz movsb repnz and or clc icebp movabs (bad) push add outsb and movabs (bad) push retq fdivr movslq mov in stos insl or rex.RX adc js (bad) sbb jo jne (bad) cmp pop sbb fisttpll or movsb icebp push and cmp xchg addl fdivrs mov rex.WXB rex pushfq (bad) stos adc pushq and rsm jno mov fstl mov cmc test (bad) in std int sbb icebp insb stos out outsb xchg mov clc add rorb loope fadd add (bad) movabs movslq (bad) (bad) mov rex.WXB sarl stos xchg enterq mov pop je in cmpl rex.X jmpq (bad) sahf or ljmp (bad) jne out (bad) std or imul movsb jb push jge (bad) in enterq fdivp mov punpcklbw mov and jo add rex.WRXB fwait sbb cmp rex.WX mov or mov sbbb xchg xor or icebp add rex.WRX mov fstps mov mov cmp jo pop (bad) rorb mov sbbl (bad) callq in int cs xor adc in leaveq movsb rex.WX (bad) cwtl jle sub lock cmpsb callq lret lods or nop fsubrp adc outsb xlat add sbbl sbb fnop in (bad) cli ds in (bad) or xor or (bad) xor cmc out add addr32 lret imul cmc sbbl lret (bad) loope xor xor rex.WXB pop (bad) jns mov (bad) insl roll jle sbb (bad) jo xchg cld movabs cmp xor rex rex.X jo orl insl adc adc lcall int movsb cmpsb sub leaveq pop (bad) mov in and mov (bad) fwait (bad) (bad) (bad) loop nop (bad) (bad) (bad) movabs js adc push rcrb (bad) cwtl adc imul (bad) mov (bad) (bad) or (bad) (bad) fstpt sbbl insb (bad) mov pushq (bad) es test and movabs movabs and (bad) or popfq movsb stos ds movsb movabs rex.B (bad) callq sub clc lock rolb (bad) fs callq lcall xchg shrl push pop (bad) lods fwait add (bad) jp jnp mov and retq push int3 in (bad) mov (bad) popfq (bad) mov jge,pt (bad) or and mov popq (bad) and cltd addl cmpsb sub xchg in (bad) cld push (bad) cmp callq (bad) popfq callq leaveq in loop fsts cmpsb (bad) xchg cmp push fs and xchg jo loope add sub sub xor adc (bad) out (bad) rol addr32 cmp fstpl xor sbb test mov sbb addr32 hlt cmpsb (bad) rex.RXB rex.RXB (bad) (bad) (bad) lods sahf outsl sbb rex.WXB repz out pop cmc cmp test test sub jns gs int3 mov (bad) rcll cmp retq add mov jne mov pop lods (bad) (bad) (bad) push or mov mov in pop rol andl xchg fadd stos in (bad) rex.WB add (bad) fsubrs or int xchg jrcxz int xchg sub or sbb add lahf mov mov sub jrcxz push (bad) mov or test (bad) insb (bad) iret (bad) repnz jle mov jle out clc (bad) not jrcxz jae sbb sti repz movabs lods jl rex.W rex.W jrcxz (bad) mov stc or movsl repz clc add and pop (bad) lods icebp loop lock mov cmp (bad) (bad) jnp fild cmp nop rex.WRXB (bad) (bad) loope cltd or repz xchg retq movabs loope,pt lret in (bad) in loop pop xor in lods jrcxz,pt movabs retq repnz retq add cld cs repnz or movabs rex.RB adc mov pop jne (bad) imul push adc and hlt jmpq xor jo sub outsl and push mov rex.XB (bad) (bad) movsl cwtl sub divl icebp and sub or xchg in mov (bad) or xchg (bad) cld mov jmp (bad) in test iret cmpsl (bad) enterq fist mov pop xor cmp sub outsl enterq (bad) iret fimull jae add fucomp xchg in xchg iret out (bad) sti lock sbb and rcll ficompl rex mov xchg xor cld xorl xchg (bad) (bad) (bad) ja,pn mov (bad) mov rorl pushq cli hlt sub rex.WRXB int xlat lods (bad) (bad) cmp shrb fnstsw sub add (bad) (bad) retq or xor xor retq rex.W (bad) cmp mov or (bad) (bad) or add cmpsb push add iret sub icebp fsubs rex.RX xor retq repz fcoms mov out or mov jns jo add cmc hlt pushq ffree repz cld callq leaveq movslq jns test callq (bad) jo (bad) ds rex.WRX in xchg std rex.XB xchg leaveq fucomip nop (bad) out xlat rex.XB mov gs pop rex.W decl xchg xchg (bad) jb xchg popfq mov outsb scas fisubrl jns je pop pand xchg test mov movabs gs sbbl xchg (bad) xor rcrl stc or insl movsbl movsb in sti in retq add (bad) jmp (bad) (bad) callq (bad) xchg jle popfq mov (bad) in xchg sbb jns cmp or lods rex.R movslq xor (bad) adc (bad) clc adc fwait leaveq enterq test (bad) cmpsb hlt jbe retq add test jo cmpsb pushq enterq (bad) lods (bad) mov pushq (bad) insb mov outsb (bad) pop (bad) add out movabs xchg out pop retq enterq adc or fcmovb xchg rcll std jp rex.WRXB jmpq xor iret adc (bad) mov (bad) push mov rex.WB ss cmpsl sbb ja repnz movsl sub mov orb jp and pop rex.X jmp icebp outsl out adc xlat sbb out in xchg xor or movsb sub add rex leaveq mov fdiv lret int3 and jmpq (bad) mov mov cmp iret mov lods pop out sub nop push pop mov (bad) push callq pushq outsb loopne stc xchg xor repz or retq movsb push jrcxz push or push lret jmp loope add xchg rex.WRX leaveq adc (bad) cmp sbb shrl sub insb rex.X popfq add or mov (bad) cmpsl ja loopne sbb lods stos sub fbstp jo mov or (bad) rex.WXB insb out cmp out (bad) xchg lods xchg (bad) and stc sub rex or lods add cmpsl addr32 lods lods fistp hlt (bad) addr32 movsb and xor jnp mov nop clc test jo data16 jmp push (bad) xchg push rolb leaveq imul mov fcompl repnz addr32 lods rcrb in or cmp push fisub popfq xchg shl xor cmpsb (bad) push sahf xor sbb fwait sbb pop (bad) (bad) stos std cmp sub xchg mov loop int3 xor in cmc repnz sub cmpsl repnz mov adc out gs outsb movsl mov movslq sbb or xlat test in cmpsl hlt fcmovbe movslq loopne movabs pop pop imul int (bad) notb xlat xchg xlat xchg in jae js jmp and pop mov idivb jle or insl out leaveq iret in sti (bad) movabs int test fsub iretq xorl rol sub mov enterq jb mov or stos in cwtl subl jmpq or (bad) cmp (bad) add sahf sub or jb (bad) pop mov decb or xchg xchg retq loope jmpq (bad) lods in jl xor outsb (bad) adc addr32 jg loop xchg (bad) and and movabs add (bad) iret (bad) xchg icebp addl push sahf cs mov fidiv movabs sar insb movabs xlat mov in adc lcall sbb repz shr outsl rclb (bad) gs lock sbb mov notl out out out (bad) pop cs add callq out jmpq adc sbb out shlb mov mov (bad) outsl movabs rcl mov xor fwait (bad) pop mov ss movabs iret rex.XB addr32 xchg imul sub xchg movabs fnsave push (bad) (bad) xchg lock xchg int sub je pushq stos cmpsb jl xor jp rex.X push sub (bad) and or rex.XB sub sbb fisttp pushq (bad) lea (bad) jmpq repz jbe or movsl jae je xor xchg (bad) add hlt fcomps jle rex.RB lods cwtl push sar sbb mov (bad) and sbb (bad) adc out adc xor loope mov rex.WX cli or push xchg rex.WXB jo movslq (bad) fmull pop jno jne nop mov jp xor xchg jle lahf test (bad) in data16 xchg sar div (bad) insl (bad) cmp xchg sbb xchg jmp fdivl (bad) sbb (bad) jrcxz popq in hlt test (bad) rex.R callq mov push (bad) lods data16 (bad) pop (bad) lahf (bad) xor mov (bad) stc jo jmpq hlt enterq jg mov callq mov outsl jmp and jmp sbb xchg xor cmp xchg mov jo jg (bad) rex.RXB rex.WX push pop and clc cmp movabs repnz fmulp pop movabs out out (bad) sbb cmc clc jp rex.W adc shlb movabs xor pushfq fs rex.RX (bad) outsb lock gs rex.XB adc (bad) mov rex.XB out in xor pop stos movslq movl rex.XB jge xchg (bad) rex.WRXB rex.XB mov mov callq (bad) callq pop xor movslq test sbb adc pop movsb clc lock pop xchg xor sub (bad) cltd jne (bad) insb cmpsl (bad) rex.WB rex.XB rex cli add cmc xor hlt or pushq js sub movsb lock (bad) jbe pop pop rex.WRX xchg rex push xchg and lret fnstenv cmc jmp out and sub cmpsl callq fdivrl mov stc lods loope fbld in (bad) rolb (bad) cld outsl or jmp movslq loope rolb callq mov gs lock rex.RXB rex.RX clc lock lock (bad) vdivps cmpsl (bad) fisttpll xchg in or icebp rex.WRXB or cmpsb and xchg hlt rex.WB test outsb lods or fmulp adc movslq retq fmuls testb stc ss sub shl mov xchg (bad) ds orb (bad) loop sbb lock in and (bad) sbb xchg (bad) cmpsb and sti sub (bad) cltd rclb or mov mov lock (bad) jrcxz vmread sub and jnp mov cmp (bad) xchg rex.WRX cmp (bad) insl (bad) movsb xlat jrcxz lods jmpq mov (bad) adc (bad) xor loope jae mov and cmc mov pop jo xchg rex es lods in (bad) mov addr32 cmp adc (bad) int (bad) in fcoms adc scas fimull and xchg divb retq pushfq pop (bad) (bad) pushq cmc push andb mov mov and rex.WR imul lret out hlt pushfq mov xor sub jp mov jmpq cli fildll clc or adc add mov in outsl or jae jg (bad) xlat lahf lret int3 add movabs mov frstor jle cwtl (bad) jno (bad) int lods imul enterq movabs xchg mov leaveq rex xor out iret (bad) (bad) stos pop lret (bad) cmp push insb mov fdivs fucomip cmpsl iret (bad) test xchg fmull loope (bad) cld sbb cli movslq pop mov out pop out fwait hlt imul lahf repz enterq or mov movabs push (bad) leaveq xor (bad) (bad) outsl sbb stos (bad) movabs (bad) fwait out lret xchg ss enterq lock out rdpmc (bad) xor rex.XB sbb data16 in mov outsl mov adc retq and cmp in sbb sbb scas fdivrs movabs pop movsb cs add pop es (bad) or (bad) rcr mov adc addl imul js mov rex.WRB leaveq insb (bad) mov xchg xchg insl (bad) and (bad) mov mov int stos add add mov in jg repnz (bad) xor cld (bad) fwait sbb jg insl movabs xor cwtl hlt rclb jae mov ffree lods callq or sub imul sub cmc mov rex.W jrcxz sub in or ss mov sti fiaddl and pushfq (bad) sbb mov in jns add rex.W (bad) imul movabs fisub movabs jge (bad) mov (bad) movsb fadds (bad) je (bad) fild xor mov (bad) pop sahf callq (bad) stos mov (bad) test cs subb and pop notb insl out adc rex.WX xchg loop rex.RXB or jne in (bad) fisubr addr32 rex.RB je,pn mov cwtl push insb enterq loope cmpsb (bad) add (bad) clc rorb jge or mov mov sub (bad) callq (bad) push add jp or adc lock mov lock movabs shrb out in out stos (bad) repz (bad) xor (bad) scas insb clc (bad) (bad) sub out cmp xlat out mov out (bad) pop and hlt (bad) (bad) xchg (bad) and test insl mov rex.WB rex.RXB rex.RX (bad) or mov fwait sub repnz adc xor rex.RX lea xchg xchg leaveq lock fwait negl outsb xlat xor movslq or lret rex.WRX (bad) jb push (bad) loopne rex.R mov mov leaveq (bad) mov lods lods shrb adc loopne int addr32 (bad) rcrl fnstsw enterq movabs cli add pop xor or xor imul insb sub (bad) adc js rex.RXB shlb mov cmc imul hlt movsl sub or add int3 (bad) sub (bad) xor mov rex.B std (bad) clc out or int add (bad) rex.WR push mov iret movsl jrcxz lods or xchg test (bad) or int nop xlat or mov xlat adc xor cmpsb rex.WRB (bad) add xor outsl fwait stc repnz cmp movslq (bad) test loope addr32 mov or lods or adc mov mov pop sbb movabs sti or lock scas insl sti clc movsl (bad) ja (bad) xchg sar retq xor fnstsw (bad) pushq rex add (bad) shrb xchg loope sbb push (bad) mov addr32 lock xchg cmp shll add addr32 jmp int xchg repz insb rex.WB rex.WRX (bad) rex.WRXB (bad) rcr retq xchg in out data16 xlat (bad) pop lahf int (bad) (bad) (bad) std mov xlat rex.RXB sbb (bad) pop mov lods out cwtl or cld xchg mov div push xor jl data16 (bad) sub jrcxz push mov jg mov data16 fnop mul fmuls mov xor cmpsl jrcxz or mov pop (bad) rex.WRX (bad) xor jo (bad) in fsubl xor mov and rex.RB repz subb mov rex.RXB pop (bad) pop test or movabs and test mov rex.WRXB pop std (bad) xchg mov add loope (bad) (bad) or mov (bad) mov mov jp xor sahf fldcw leaveq sbb cmpsb test fdiv fdivs ss rex.WR push rex.R sub lahf xlat mov in and (bad) (bad) add cltd pushfq and and or sbb in xchg push cmpsb retq (bad) je lahf fpatan or shll sbb adc leaveq add sbb int3 xlat cmpsb jrcxz pop lods (bad) rex.WRB test icebp jmp rex.WRB fs gs mov (bad) movabs mov (bad) (bad) push fisttpl mov sbb jp cmp lock (bad) lahf rorb jbe orl (bad) (bad) (bad) outsb mulb pushq mov mov and or js mov mov loope enterq out and rex.WRB (bad) rex.RB cmc or and rex rex.XB adc jae in mov (bad) add fdivr xchg movabs insl out int lock lcall fiadd cmp (bad) xchg icebp mov and sbb in or shlb mov lock and popfq addr32 jnp add xchg adc out jle test hlt mov (bad) mov nop rex.R movslq mov sahf adc xchg in xchg push (bad) nop movsb mov test stos push or mov in mov in rcr sub sahf stc icebp sbb lods test fucom shlb mov or fidivrl or (bad) push out cltd rcr in cs sbb xchg out rorb sub cli xchg (bad) loope or (bad) repnz or sti jb push xchg jb scas pushq test push pop movsb loope rex.WRB rex.XB rclb mov mov movslq adc (bad) addr32 lret (bad) (bad) movabs js cmp mov movabs in gs out in outsb imul loop jmp and xchg insb lahf rex.R mov adc in int3 popfq movabs movl imul out xchg lea cli (bad) (bad) rex.WX repz enterq in sbb pushq (bad) push (bad) mov cs rex.WX mov (bad) scas enterq sub movabs add movslq mov mov cmp adc xchg jle xchg out (bad) fs jne es (bad) (bad) jrcxz sahf and in pop sbb (bad) lea mov push sub iret sub (bad) push mov fisubr fsubs retq movabs (bad) movsl sbb retq in loopne (bad) xchg cmc or sbb repz sarb jo xor je rex.X sub rex.X data16 cmpsl cmp cmc imul out retq mov (bad) xor lods add fs gs adc (bad) cmp scas lret (bad) loope (bad) cmp xchg xchg test xchg jrcxz jno cmc push (bad) test or mov test popfq (bad) fstl lods xchg (bad) mov pushq sbb retq xchg loop gs jl adc xor shl and (bad) lods hlt mov adc je sbb loope cmp mov pop cmpsb outsb sub std xlat (bad) or xchg xor mov stos repz rex.WXB addr32 jae mov jp imul fs (bad) lock outsl imul ss out push mov or mov cltd movsl jle jmp adc cltd push add cmp int3 pop js sub (bad) iret mov movabs scas int push (bad) sbb (bad) rex.B rex.RX cmpsb jb rex.WR lahf rex.WRXB jp jmpq (bad) lods rex.RX addr32 in xor callq cmpsl xchg pop mov add (bad) (bad) jp cmpsl sbbl shr mov outsb cmpsl hlt mov movabs xchg (bad) subb jg loope icebp out sbb vmwrite mov sbb mov imul fwait adc lods in cmpsl (bad) jnp,pt ds mov rex.WRX cmp leaveq (bad) adc (bad) (bad) lock addr32 cld icebp addr32 test in xchg pushq pop rex xchg subb rcll (bad) (bad) jb (bad) fisttpll int (bad) (bad) sbb jrcxz movabs xor in retq or (bad) xchg jg lock roll rex.RXB fsubs loop loope jae retq and (bad) (bad) lods rex.W (bad) lret xor mov loope in scas xchg rcl jae rex.B lock jp xchg repz lock mov sbb enterq cltd gs rex.XB push sarb leaveq mov rex.RB fwait rex.WX push sub push fstl cmc fisubrl add repnz or decb adc push jb and mov xor out callq sub sahf sub xchg decl in retq sub jg leaveq sbb sub jl rex.WRB imul (bad) (bad) movsb or rex rex.WRXB rex.WB out (bad) movabs xchg movabs ja lret push fsubrs or (bad) repz jne cld (bad) xor and stc cli pop (bad) (bad) shrl (bad) pushq in repz repz cmp (bad) xor mov cmp (bad) pop (bad) sub rex.WXB ss jb movabs (bad) fcomp stos es (bad) sarb mov popfq addr32 ficom fisubr jge (bad) (bad) rex.WB rex.WRB mov test repz stc sbb jrcxz or mov and (bad) add out (bad) stc pop fs (bad) mov out je push or adc and lods jg not rex.XB cmpsl orb jae or sbb jrcxz rex.RX mov data16 cmc shrb fs mov (bad) fs push sub push rex.WXB sub rex.WRXB push lods rex.RB popfq (bad) push js (bad) mov push cld nop sub in loop nop adc js (bad) mov out mov mov mov gs (bad) out fcmovb jle mov int adc push lea jp (bad) cwtl jg rex.WRX rex.WXB in rex.WRXB mov cmc jne,pt lods stc (bad) test in sub mov (bad) sbb movsb out addr32 fsubr rcl psubusb movabs (bad) (bad) or mull callq fdivl gs sbb in xchg clc or xlat ja adc mov clc rex.RXB imul sarl (bad) sbb rex.R movabs (bad) cs sbb and insl int xor or lock movslq rcrl and fs or movabs xchg vcvtdq2pd cli ja js cwtl repz mov mov mov (bad) xor jo notb mov lahf (bad) loopne decb lret jle rex (bad) jrcxz rex.WXB addr32 movabs (bad) push mov popfq jae (bad) (bad) push mov mov and mov push je lret (bad) in cwtl rcr movabs (bad) xchg jo (bad) xchg in adc retq cwtl lock mov fisubl (bad) icebp (bad) (bad) fs pop sub xor movslq outsl xchg js (bad) ffree rex.RXB idiv scas movabs int3 (bad) in addr32 js adc mov rcrb test (bad) fs (bad) jae fsubrs (bad) jl xorl rex.RXB jae mov stos sbb xor add orl mov out movsb mov cmp xor rex.RXB (bad) out mov xor cmc or clc in sbb movsb fdivrs jo rex.WRXB in push jmpq pushfq (bad) mull push push out stc rex.XB sub or pop rex.X cmpsb mov lods test rex.WRXB movabs stos sti lea mov sbb in rex.WRXB ds gs data16 pop (bad) callq ds (bad) cmp xchg (bad) mov (bad) xchg pop fucomip ds in ror (bad) insb (bad) in movslq (bad) (bad) (bad) xor rcl (bad) retq fsubs or mov retq movabs mov (bad) fs pop pop add pop mov mov fdivrl pop and mov xchg movabs fnstenv movabs cmpsl (bad) (bad) (bad) loopel pushq fsubrp (bad) jmpq lock loop movslq stos mov (bad) jno test mov sbb rex.WX and movabs pushq xchg xlat out jo xor lahf sbb jmp (bad) test (bad) rex.WR (bad) int or loop (bad) and pushq and mov icebp andb push add xchg retq (bad) ja xor (bad) adc ss gs jns or and and loop (bad) fiadd (bad) out sbb rolb rex.X push cli repnz cmc pop scas push stos fs xchg out outsl repz sti (bad) test (bad) nop (bad) push cmpsb pop (bad) mov pop stos sbb (bad) cmp jg or and icebp adcb sbb test pushq jrcxz fsub and fcompl sub sub adc cli (bad) mov (bad) mov insb out in (bad) mov pop (bad) movabs callq test xchg cld jmpq xchg (bad) and and je mov jle xlat sbb xchg cmpsb adc jrcxz (bad) or sti fisttp lcall stos jmpq outsb cmpsb shrl (bad) popfq and and mov jl pop jmpq je hlt test decl xchg mov fidiv outsb pushq mov push callq in sbb (bad) fcmovb lods or add jp pushq out (bad) mov in (bad) fs nop addr32 fbld out jge lods pushfq mov lods jmpq out shlb pop in movabs mov rex.WRB lock in loop test in movabs callq mov mov out out in and (bad) xchg jmpq jle add lahf test retq jrcxz test mov jnp cld pop pop xlat (bad) es rex.WB leaveq loope movslq (bad) jrcxz xchg roll jnp jne outsl pop imul (bad) in and mov mov enterq movsb retq pushfq jle int3 xlat lret movabs rex.B fnstsw mov jg and rolb sbb (bad) fstpl retq test adc jge lods jg rex.RB leaveq (bad) retq mov or iret addr32 jg sub or enterq (bad) jmp pop in (bad) (bad) adc mov retq sub cmp in fimul rcrb stc enterq lods xor retq pop in jg (bad) in xchg cli (bad) and notl repnz (bad) lock jo or out xor mulb movsb rcrb decl fs loopne lret xchg callq movabs (bad) rex.WRX sub (bad) (bad) mov callq (bad) lret rex.WB enterq pop jmp (bad) iret lods (bad) or mov rolb insl rex xor (bad) nop xchg fisttpl in leaveq xchg (bad) cmp xor rorb clc (bad) cmpb andl scas movabs xchg clc jmp mov in or fwait divl mov mov sbb test (bad) xchg cmpb rex.W sub (bad) int mov and and enterq stos jmp rex.W fnstsw rex.WR jne movabs clc and lret movslq cwtl mov scas popfq mov mov or insl xchg mov cmpsb popq retq movsb rex.WRX mov clc pop sbb movslq (bad) (bad) (bad) lock fs jo out iret and imul pushfq movsl sub loope ffreep in xor sbb ss cmpsl xchg mov jmp test lods mov pop jmp retq xchg rex.B lock js neg mov in in or (bad) jle cmpsb rcrb (bad) xchg lahf repz callq cmp (bad) push pop iret hlt (bad) mov mull callq fld1 xchg callq xchg jg callq callq (bad) jle (bad) push addr32 push (bad) sbb jp adc roll out data16 in addr32 sbb add ds (bad) cmpsb lret rex.X int mov jne rex.RX sbb or (bad) sub cmp rcll mov std imul and xor (bad) jb negb loop rex.WRX divl push out pop in insb (bad) std cmp roll rex.R (bad) rclb int fiadd iret cmc mov mov sbb lods jae (bad) es xchg jmpq (bad) es enterq callq shrb sub push ds rex.WR jo adc (bad) js jp mov or nop frstor shrl jrcxz mov add lret mov jo int3 xchg jrcxz lret mov nop rex.W addr32 out fs je or (bad) mov movabs fidivl out callq jnp stc lea lods ljmp (bad) ja jp adcb rex.R cld mov and outsl and or rex.R jle (bad) mov (bad) rex.W ds rex.WRX mov (bad) (bad) adc mov jmpq (bad) out stos (bad) (bad) mov stos (bad) cmpsb callq (bad) in (bad) (bad) hlt jmpq rex loopne es cli cmpsb sbb (bad) add in cld mov test lods cmpb cmp (bad) or xor hlt test rex.WXB rex.W mov cmp rolb loop,pt cs adc (bad) cmc sbb outsb (bad) (bad) retq movsb lea rex.WRXB rex.RXB mov movabs loope add rclb cmpsl sbb xchg add rex.WXB rex.X or subb iret add push mov callq shll sbb loopne jmpq (bad) xor and in (bad) es add xchg xlat fsubrp jmpq fidivrl std mov leaveq cmp add pushq mov (bad) (bad) stos adc rorb nop (bad) movabs sub adc xchg in je ja frstor shl ss (bad) mov mov out je or fist cs xor pop adc out sbb mov jae pop (bad) (bad) sbb cmp cmc movsl enterq adc mov jno or (bad) fdivrs jae jno rex.WB mov outsl mov sbb pop cmp pop and iret xchg mov mov movabs xor (bad) mov or roll leaveq in lods (bad) xlat (bad) mov retq jnp pop jp int (bad) (bad) pop xchg mov (bad) (bad) adc jg pop (bad) cmpb lret mov rex.WRB mov movabs in jae in outsb mov movsb mov mov pop ss jns (bad) stos data16 je int3 imul pop pop cmc sub test movabs loop push xchg mov in rex.RB in add cmp pushq sbb roll cmp (bad) sti (bad) mov xlat pop pop mov sub int fdiv mov pushfq rex.W icebp callq xlat fisubr cmpsl mov mov lock pop loope,pt adc (bad) nop (bad) add out lods adc cmp add sarb movabs add (bad) out scas jrcxz jp (bad) lods cmp mov insl movabs mov xchg mov imul jg (bad) and mov mov in adc mov jl mov rex.RX (bad) mov rcll cmovae rex.R (bad) push rorl lods rex.WRX (bad) pushfq xor mov test stos sti add and cld orb out js cmp (bad) mov rclb jg jle jmpq rorb and xchg sub movsl rex.R shlb or (bad) imul movsb scas loope rex.XB xlat and (bad) sahf clc (bad) shl (bad) seta mov rex.RXB sahf mov pop rex.WX ds xchg cmc and pop and sub out js movslq or in or mov cmc out pop mov mov sti jno,pn mov adc in sbb mul lods fs rex.WRB shrq rex.XB (bad) scas mov imul cmpsb xchg xor or stc (bad) pop enterq xchg push rex.WB imul (bad) (bad) gs retq fistpll (bad) adc (bad) (bad) mov repnz lret rex rex (bad) or insb xchg mov jmp mov xor lret hlt loope (bad) fsubrs hlt or rolb pop xor sub lret or imul pop (bad) and fdivrp lcall (bad) repnz add lret lahf imul or and fcomps push sub or xor (bad) jg or jns mov mov mov (bad) callq movsb add movabs hlt in fbld stos cld (bad) imul retq fildl test xlat (bad) in mov adc lret (bad) insb mov enterq or adc rex loop cltd repz rex.RXB fsincos rex.WRXB (bad) out je xor int xchg adc (bad) fdivr in shlb gs callq and in (bad) fwait rex.R es add out loope movabs cltd cltd cmc mov jmpq rex.B iret int3 addr32 callq (bad) rex.WX lock (bad) push fwait and or sti fnsave rex.RX icebp movslq movabs adc mov stos mov callq (bad) in pop push enterq (bad) lock xchg (bad) pop mov add callq int3 cltd negl je cmp in fnsave callq (bad) and xchg or and xor mov retq cmp fdivrs rex.R in add stc out add loope xchg divb sbb (bad) (bad) (bad) repnz xchg iret rex.WXB lock xor (bad) push in pop (bad) rex.X cmc xor adc std out (bad) fstl mov (bad) pushfq xor (bad) iret cmpsl xchg mov cltd xchg (bad) shrd (bad) ja movslq insl (bad) (bad) (bad) ror rex.B adc (bad) lock fisubr and rex.WRX repz lcall add movsl adc (bad) xor push hlt or fmulp in cmp loope xor sahf sub (bad) outsl pop xchg sub (bad) xor sbb pop mov pushq test (bad) mov test jrcxz xchg iret (bad) cmc adc pushq stos gs in (bad) pushq (bad) icebp adc mov orl add rex.W mov (bad) outsl movabs test (bad) mov in in leaveq cmp add jnp movslq rex.XB fwait nop cmp mov rex.WR cmc or cmc jg (bad) fwait cmc (bad) test mov (bad) add fucomip (bad) addr32 movabs idivl (bad) jo repnz rex mov xor test sti jne sti (bad) push adc jne retq lods (bad) (bad) lret cmp rex.WRXB out push mov xlat cmp out (bad) (bad) rex.WRX adc (bad) lods outsb fdivrs xor (bad) callq sahf pushq and push or sbb sti pushfq jg mov rorl stos sbb mov (bad) rorb cmp or sub in mov push lahf mov mov movabs callq rolb test (bad) xorb jbe movsl jle loope movsb (bad) jmpq jbe in mov jge lock movabs out rex.B movsl hlt movabs icebp jne pop hlt rex.WR enterq xchg xchg (bad) jne popfq mov push (bad) mov enterq lahf (bad) fadd (bad) mov int3 es xlat fsubrp iret or cmc mov std insb test stos nop outsl retq addr32 mov mov in cmpsb (bad) enterq mov je data16 (bad) mov lret or sub rex.WRXB mov callq (bad) sbb in fidivr jg jg mulb fsubrp mov fild imul (bad) mov (bad) icebp rex.R out adc rex.RXB sbb jb movsl jno sub (bad) pushfq pop adc notb out mov adc mov not pop xor lret stos ffree cmpsl fdivrp rex.WXB mov jrcxz jb mov xor and mov leaveq cmp adc clc in out or je icebp lods rex.WRB push in icebp or imul scas repz mov xor fbld adc pop jge mov xchg or movabs es gs sub (bad) loop negb ss enterq xchg (bad) insl adc cmp and jg (bad) gs jl,pt mov mov (bad) (bad) (bad) cs icebp movsl in retq or in pop rex.WB mov js gs and (bad) repz add je (bad) fs js or imul pop and (bad) movsl or add jns in ss rex.R outsl and cmpb cld rex.WB (bad) mov repnz (bad) xor mov es mov (bad) jle (bad) ror fsubr mov rex.WRX xor adc push or rex.W out test push or ffreep jns (bad) rex.WX (bad) int and fcom test add fs lods rex.R movabs push sahf nop (bad) rex.WR cwtl insb movsl jp scas data16 iret imul mov push sbb xchg (bad) leaveq and clc fwait (bad) stos rex.WRXB rex.X mov cltd cld jl jge xchg outsl sarl loop fdivrl jo and rex.WRXB and mov (bad) outsl fstp (bad) jle or and punpcklbw movabs fistp add xchg stos fmul xchg or rex.RX jle (bad) (bad) cs icebp jnp jo in rex.WRX fnop push (bad) xor jb xchg movsb int3 je push adc sti insl (bad) callq sbbb test jns (bad) jbe movslq jb pop fsubs xchg (bad) sub jbe add xchg leaveq cli sbb scas int3 cmp pop push (bad) pop movsb fmull insl sbb jge mov add sbb xor cmp mov pushq push jg sbb in (bad) push adc fidivl or lret or testb cmp (bad) in (bad) pushfq cmp jmp (bad) xor rex.WXB adc imul lods out clc mov scas xor lock movabs (bad) pushq shrb callq data16 pop out xchg mov sbb shll ja stc int push retq out pushq ds rex.WRXB or rex.WR xchg enterq je pop cvtdq2ps pop cwtl es (bad) xlat ds (bad) cmc pop (bad) xchg clc test retq mov test out (bad) jrcxz jo rex repnz and adc cmpsb loope clc gs sub out pop xchg sub (bad) rorb adc xchg cmpsb lret pop stc fcoml sub (bad) sbb hlt sub loopne out ficom xchg cld cld xchg roll movabs movabs sbb in jmpq or lahf lods in cli jnp pushq insl out out (bad) sub pushq cltd out or callq (bad) or xor xchg lahf out xchg adc test (bad) (bad) (bad) cmp or add mov cmpsl addr32 retq mov sbb fcomps mov (bad) xchg (bad) rex.WB rclb pop outsb test xlat jrcxz sub or stos movabs decb cmc xchg adc clc rex.XB pop rex.R (bad) add pop fistp callq jrcxz add or xor or jrcxz (bad) add push xchg mov sbb rex.RX ds sbb jle rorb mul int movabs test rex.WX (bad) cld fisttpl adc or rex.B (bad) sbb sub stc rex.WRX (bad) mov retq jae pop test fcompl (bad) lock jne mov jne pushq push jne out test jrcxz jns cmpsl sbb jns jbe mov movabs shrl rex.B repz js (bad) callq push adc retq xchg jmpq (bad) jge test clc cmp fstl xchg movslq (bad) fs xchg (bad) (bad) cmp (bad) test rex.XB retq jmp rex.XB jmpq es rex.WR (bad) sbb (bad) jl movabs mov (bad) jl sub fcoms gs rex.XB test rex.X mov mov test out mov jns addb mov or push cmpsl mov mov mov leaveq data16 mov mov xchg push sbb rex.WRX jp and (bad) xchg sbb ds lock (bad) retq jrcxz (bad) mov rex or and out pop jmp ficompl stos lret pop (bad) jmp inc mov imul roll rolb loope loopne jbe lret adc stos push movabs push jrcxz jle add mov jns cmpb repnz jnp push rex.B insl std adc lods callq movabs leaveq sbb imul cmp mov (bad) push lods pop sbb in or iret xor add add jmp cli rex.XB (bad) xchg cld movsb pushq cs pop or mov (bad) movabs xchg (bad) (bad) rorl adc (bad) jle pushq xlat fisub (bad) and jo testb movabs movslq orl sbb stc sahf lock rex.R and callq movabs outsl mov sbb (bad) loope shrl cmpsb shr test cmpsb stc in movsb out xchg push or int3 (bad) mov fistp jo sub negl outsb mov add mov xor push sar rex.WRXB rex.XB ds int jrcxz movabs jmp in (bad) fsub xchg testb movsb (bad) (bad) mov or push in sbb (bad) xor jmp mov mov fisubl (bad) rol and out (bad) nop in (bad) movabs xchg cmp rex.WRX mov fcomi lret div (bad) mov adcb (bad) cmp cmpsl jbe fistpll retq cmp rex iret rex.WRXB jb (bad) (bad) mov cmpsl in xchg mov jo rex.B mov and fsubl push xor mov push cmpsb lock lods mov lahf sub movabs insl push mov sbb int (bad) test (bad) xchg add popfq push sub hlt pop pop leaveq nop movabs sub rcrb rex.X clc ds pop jne in js xchg retq out (bad) in mov loop fmuls or gs (bad) and callq xor movabs jno sbb cmp movslq callq (bad) xchg lods (bad) mov mov xchg push retq (bad) scas xchg lods add test retq xor mov mov cs loop loopne cwtl (bad) mov (bad) movabs mov in es xor mov mov adc push jg pop jmp rex.WXB fisubl pop sub sub insl jo push jp add cmpsl stos movsb pop mov rcr cmpsl gs movabs or jae (bad) out or shlb (bad) rex.XB jle mov js add mov (bad) rcr ss jo sbbb (bad) fisttpll push mov lret (bad) imul push lock jne loope adc data16 pushq or (bad) adc pushq repz incl fimul (bad) ss callq mov mov movabs adc shrl lods rex.WRX and movslq or pushq je test jl sub add movabs movabs lock mov loop int3 xchg mov adc callq enterq (bad) sub mov (bad) lahf (bad) (bad) (bad) cmpsl mov and in negb jae (bad) xchg push sahf movabs pop popfq mov jno movsl movabs lcall (bad) jge cmc pop pushq imul clc movl out rex.RX add sub pop pop js or rex.B mov sti loope addb mov pop (bad) fdivr pop sahf stc movsb pushq pop test lea mov add or pop fs sbb adc (bad) movabs mov (bad) rorl xchg stos mov (bad) jo sahf mov cmp movabs pushq or sub pop popfq rex clc rex.RXB cmp mov sti in lock fisttpll cmpsl xor mov mov int3 icebp movsb cmc and adc (bad) (bad) in xchg out jmp rcrl pop mov sub clc orb hlt and test callq callq jns and lea cmp jae rex.W lret imul or (bad) push ja push insl adc jo sbb pop pop mov orb (bad) stos mov scas (bad) (bad) or jo imul (bad) (bad) pop mov leaveq and retq lret movsl xchg iret sbb mov addr32 or jns subl movabs rex.WRX cpuid adc cmpsl js or adc callq callq jb (bad) retq mov iret fidivr lods xor rex.WXB repz repnz enterq or jne sbb or repz imul rex.R mov sbb loopne adc mov out mov lea fdiv pop hlt in xchg hlt callq add jg insb test cmpsl xchg push or cld int (bad) movslq stos push lock shr or (bad) rex.WRXB mov mov movslq mov or scas insl (bad) jmp mov rex.WRX and fsubl cli and sbb out adc clc pushq nop sbb sbb jnp (bad) push sbb and (bad) fiaddl jle (bad) lret loope xor add mov (bad) (bad) sarl jne imul lahf rex.WRX cs mov jbe lock cmp pop nop lods test (bad) add ffree rex.WR cmpsl and jb cld (bad) or jnp mov add out cmovg rex.WRX rex.W rex.WRXB mov insl in lods fs mov out (bad) add in es rol callq (bad) in (bad) lods lcall mov stos or rol stos adc cmp xchg rex.R xchg mov fs mov jne movabs hlt jns (bad) testl jl and (bad) icebp xlat ficom fs jmp mov push (bad) sub push and jrcxz xor out cmpsl test (bad) (bad) (bad) stos shrb rex adcb (bad) (bad) jo mov movabs cmp sbbl rclb out (bad) fucomip jae jle shrb mov mov in adcl cltd xor and (bad) pushq loope jrcxz rex.X lock mov sbb jl push (bad) cmc out callq movabs cwtl in fdivrs adc and lret hlt ds mov rex.RXB xor scas (bad) mov mov addr32 cmpsl pop fprem1 (bad) pop pushq cmp lods mov pop adc out rex.X hlt or add lret in ficoml mov std test sbb push mov mov cmp (bad) lods stos sbb int3 callq mov (bad) (bad) push movabs mov sbb in ds rex.WR movsb mov fcmovnbe adc imul mov icebp insb lods sbbl incb fcomip rex.WR repnz movslq sbb (bad) xor cwtl int3 insb (bad) (bad) xchg mov subb or in (bad) mov or rex.WR sub cmc lods (bad) outsl leaveq rcr rex.RXB in adc (bad) gs (bad) mov (bad) (bad) fsubrl and je out lea lret out or fisttpll pop jrcxz jrcxz (bad) pushq movabs movabs mov ja (bad) pop and (bad) fstpl popfq mov mov rex push jae (bad) cmc mov add pop add pop mov out (bad) fistpll sbb rcr sahf xchg or sbb xor lret ds or outsb fdivrp hlt xchg negl jae pop fmul (bad) and insb movb or (bad) and cmpsl mov movsb rex.WXB (bad) mov xor in rex.WRX mov mov mov sub sbb (bad) or in enterq pushq rex.XB sub (bad) fbstp in push lahf in pushfq rex.WX data16 or (bad) jo and or cmpsl movabs movsb (bad) mov int3 movsb mov sahf rex.WRB leaveq movabs xor sbb (bad) push (bad) jnp callq (bad) cmp fadd mov lret (bad) rcr hlt jmpq or xchg (bad) or jmpq (bad) pop mov push or pop outsb rex.WRX mov movslq movabs jo xor mov rex.RXB xchg cmpsl lock rex.X retq cmp int and movabs insl jne (bad) push sbb imul lock (bad) add enterq (bad) (bad) mov rex.WR and sbb shrb add test push adc imul push cld rex.WRB sbb icebp movabs adcl rex.WRXB cmp mov rex.W mov jg movsb fs rex.WRX push rex.RXB pop lods (bad) sbb sarl je retq gs sub (bad) rex.WRXB (bad) mov jrcxz iret jrcxz scas add out stos fbstp rex.RB mov mov insl (bad) (bad) jae ds sub in add jb stos enterq std imul mov cli movsb xchg imul out add jg test xchg sub sub cmp rex.RXB mov loop xchg sbb add fisubl mov xlat jrcxz push insl (bad) xchg fisub repnz cmp sti jno callq xchg (bad) (bad) fldenv fpatan (bad) fs rclb or in shll (bad) (bad) fildll gs or (bad) callq cs xchg pop sbb stos insb mov (bad) push (bad) (bad) sbb (bad) (bad) (bad) mov retq xor and insb (bad) mov fistpll pushfq push hlt mov jae add adc stos (bad) (bad) (bad) (bad) cmp shrb (bad) clc addr32 cld fs push in iret fwait jmpq callq cmpsl xor roll (bad) mov jmpq cmc retq pop test (bad) je in mov repz lea test or mov (bad) adc pop movsb rex.WRB (bad) outsb rcr mov lock jo or adc or stc cli (bad) lahf scas xchg test (bad) lods data16 fstpl pushq (bad) rex.W xchg jnp iret lret push (bad) mov or movabs rcr js scas jle xchg stc (bad) rex.XB (bad) shrb mov lock ds mov (bad) or clc jmp (bad) or jnp pop xchg callq (bad) iret leaveq cpuid jo negb insl sti test add leaveq (bad) loope jrcxz pushq rex.WRB add (bad) pushq lods cmp xchg rcll mov xchg (bad) loop imul cld movslq retq sub add movsb xor (bad) or scas (bad) xor jrcxz jrcxz (bad) jmp movabs sub jmpq jmpq rol rex.RB iret out loope xchg cld jae cs stc adc mulb callq (bad) out nop or cmp jmpq add testl rex.WRXB repnz movsl sti adc (bad) stc or adc lret rex.WRXB pop repnz mov int3 lods fstl jge sub (bad) rex.WXB rclb fsubrs rex.WRX add (bad) mov rex.R jae (bad) hlt rex.RX or icebp cli ds lret sbb repz movsb std mov sbb iret in push mov rex.WRB jle rex.B cwtl xchg and movabs ja divl sti fstpt lods fldcw xchg mov rcrl jl rorl mov enterq (bad) mov clc rclb cmp callq cmpsl movabs (bad) incb rex.W cltd js cmpsl test sub and fstp icebp gs rex.WX (bad) hlt mov movsl sbb rex.W in jnp popfq in rex.B fstl pop cmc scas (bad) sub fcmovnbe sub xlat (bad) xchg jg add xchg enterq sar addr32 cmc (bad) out or (bad) (bad) lea rex.WX not add data16 jle movabs in test out cmp adc (bad) rex.WB jmp rex.XB and (bad) es (bad) mov movabs loop out rex.W xchg frstor xchg rorl mov movsl cmp out jmpq xchg in or stc loop clc or jmp lods sub mov fwait loop mov movabs clc cmp (bad) add jle adc out xlat lods rol xchg (bad) (bad) movabs lea enterq not movabs and fsubrs xlat hlt pop shr push sbb mov adc enterq clc and imul fs in sete sbb test pop xor or or leaveq mov lock xchg movsl (bad) in imul in sub (bad) gs (bad) js and (bad) flds or je xor addr32 rex.WR adc test push or pushq mov (bad) clc xchg mov gs out addr32 fisubl (bad) xor sbb cmpsb (bad) sbb and jle lahf xor sbb out push jge cmpsb rex add int (bad) ss in mov mov (bad) mov movabs add jae or cmp shlb leaveq (bad) (bad) or lods mov cmp cmpsl adc hlt insl (bad) hlt adc pop (bad) mov mov in stos fistpll add callq jne lahf (bad) popfq clc rcrb ss (bad) adc xor rex.XB sbb (bad) int3 movabs insb addr32 fwait in insl jrcxz mov test stc mov outsl mov pop (bad) cmp mov fsubs and adc (bad) lods rex.WX idivb sub fstl (bad) incb scas sbb jns ss cld lods subb rex.WRXB ds (bad) xor repz imul fsubrs add ds loopne pop adc rex.RXB insl (bad) (bad) mov add sbb out mov lods rol lret add sbb movabs fs mov in test or or imul jmpq addr32 mov pop mov xchg out pop cmp fmull mov jp sbb test adc or test jl lods xlat jl xchg retq orl sub (bad) cmp xchg mov (bad) fisub (bad) jp loop sbb in js lret (bad) jno in xchg jns add jmpq jo (bad) rex.WX (bad) xchg fistp adc cmp lock (bad) cltd shll (bad) push (bad) sbb jle mov sub sub cmp hlt loopne fadds mov mov mov lea mov jmp and fist mov rex.RXB cmpsb loope enterq retq push in (bad) sub jmp or add rex.RX jmpq jrcxz (bad) (bad) xchg lods enterq test (bad) fisubr je movabs sub rex.W rex.WRXB jb (bad) jns pushq (bad) fistl retq insl outsb xor (bad) xchg or rex.WRX rex.B xor sbb out movabs test add rex.R enterq fsubrs adc and sbb sub sbb mov nop out and mov je push fdivr retq add test movabs jns in outsl pushfq mov ss (bad) out test fcomi in add repnz push (bad) lods xchg int3 repz outsl mov fdiv or rex rex.WXB stos (bad) cmp mov icebp (bad) sub pop mov movabs pop pushq sarl cmpsl callq or lock pop (bad) jg or xor push rex.WRB jb,pt mov mov mov clc (bad) (bad) callq stos cmp rex.WRX lea jl rex.WRX sub (bad) mov rex.WRX movabs add lods pushq xchg jrcxz clc out rex.WXB repnz and mov jne rex.WR pushfq or negl add lret (bad) test fdivrp (bad) xchg repz cmpsb insl (bad) ds xchg or hlt (bad) mov rex.WR and fisub xor fs rorb (bad) push pop test rol rex.RX adc or (bad) rcrb imul fildll callq in retq pushfq sub sbb in sbb retq outsl mov (bad) mov jne (bad) add adc (bad) leaveq mov push mov (bad) je scas sub movslq or jo and fs jae push in mov adc sub mov (bad) sub lods out rex.WRB rex.RX mov xor cli mov insl sbb cmp (bad) imul ss (bad) mov xchg rcll (bad) or movabs iret lods or insl rex.XB and xchg mov mov out (bad) cltd clc std (bad) sarl (bad) rex.WX rex.RXB decb jo mov (bad) (bad) out pop cmp movabs movabs retq xchg cs mov mov jne jne movsb pop jl (bad) or (bad) jne clc insl movabs adcb movabs (bad) (bad) xlat (bad) sub jle (bad) rex.WX mov imulb outsb callq repz (bad) xchg (bad) xor outsl movq (bad) pop loopne movabs stc in (bad) es (bad) movabs add in (bad) fdivs movsl rex.B or jne in rex.XB adc lock sbb or addr32 (bad) lods (bad) movsb (bad) in (bad) jo in retq or movsb sarb or jge sahf sahf js hlt add cmpsl mov lahf (bad) not lea test sub mov ss jbe sbbb adc in rex.WR xchg movsb jno pop rex.WXB repz lock test and sub test cmp push pushq in lock hlt (bad) vpsllvq es movsb test jno adc adc mov js gs loope mov jrcxz movsl (bad) movabs jne or pushq cmp push clc jrcxz int lods (bad) sub rex.WRX mov sub int lock adc ficompl or xor scas movabs lea mov cmp mull fcompl enterq cmp gs mov and (bad) test jae iret pop sub mov cwtl xchg imul add mov pop (bad) sbb rex.WRX retq pushfq (bad) jmp rex.WX js outsl jge jle jae rex.WRXB mov xor rex.WRX rex.RXB lock jns rex.WRX iret js int (bad) rex.WRX in or xor add xchg movabs lock xchg sub adc pop idiv imul (bad) movslq mov push sub xor mul in adc stos jle xchg lock (bad) xchg test (bad) (bad) xchg or jrcxz pushfq xchg movsb outsb scas int jns mov int int xlat cmpsb lea pop (bad) scas rorb fwait out insb js mov push jmpq pushfq adc sbb mov xchg jbe stos stos cmp fistpll xchg (bad) xchg pop cmp add xor rex.WX mov (bad) pop ss (bad) insb loope (bad) outsl sbb movabs (bad) adc cwtl hlt rex mov lret icebp mov mov rex.R jge rex.WX lods addr32 rclb mov pushq pop pop xchg jg jge in xchg or int (bad) mov and icebp jae scas rex rex.WRB js (bad) stos jnp mov movabs pop pop (bad) fdivrp in adc fldcw in movslq cmp xchg es sub movsb xchg callq and flds xor insl push pop pop pop imul retq mov imull mov imul std xorb rex.WR (bad) adc add mov out pushfq int pop rex.RB adc outsl rex.W cli mov andl sbb rol fcoml xchg mov paddsb (bad) (bad) (bad) mov (bad) (bad) (bad) xchg jrcxz data16 or add popfq mov leaveq pop (bad) xor sub xor (bad) or mov adc (bad) mov cmp test shl or rex.X mov (bad) cmpsl (bad) fdivrl ss test fdiv cli sbb (bad) je xchg gs jbe movsb data16 and (bad) rex.WRXB mov or (bad) cmpsl (bad) sarb or adc fwait (bad) cmc mov mov rex.R rex.WX adcb out (bad) in cmp sub shll (bad) fcoml pop add imulb adc mov test in hlt jno mov xchg jp sub addl mov push lock es and ja xchg (bad) rex.RX hlt retq rcl or in mov (bad) jne (bad) fcompl mov jge in rex.R out outsb jg gs cmpsl adc in mov xchg out cld (bad) jne enterq adc xchg mov (bad) repnz rex.WRX insb push mov sarb sub rex.WRX (bad) sar (bad) in movabs test pushfq js adc fdivrs xchg movsb jmp xchg xchg cmc in out rex push imul popfq jrcxz sub xchg pop out cltd cmp cmc lods std (bad) out add fisubrl hlt rex.RB rex.X loope scas cwtl mov cmpsl cwtl shl js cmc adc pushq rcrb retq pushq movabs rex.RX or shl test cmpsl out xor jbe mov add jae add (bad) adc (bad) fdiv cmpsl in pushq es cmp (bad) mov mov (bad) mov xchg push jnp pshufw adc (bad) out (bad) sahf movsl fdivs out (bad) sub imul and mov imul lock rex.WRX push xor (bad) and or retq int movabs shlb xchg in push rex.B popfq testl pop and outsb xor gs (bad) push rex or sbb mov (bad) xorq retq add mov mov or mov cli adc imul lret lods mov rex.WRX fiaddl sub rex.RX (bad) xchg (bad) rex.WB int3 outsb and (bad) (bad) jl jmp xor leaveq fildl sbb pop sbb mov (bad) outsb (bad) mov mov movslq jb (bad) xor movabs psubw sbb int sbb mov enterq in add addr32 or out xchg cmpsb (bad) fistp enterq int3 rex.WRB xor push xor sbb sarb rex.WR sbb loop sbb mov movabs sbb stos roll jrcxz mov mov xchg push add in rex.R fcompl cmp pop retq lea mov out xlat mov pop push mov push addr32 (bad) sar callq mov (bad) adcl push cmpsl xchg cs mov nop insb je ds adc xchg lahf pop (bad) sub stc jne retq (bad) mov adc rex.WB push (bad) rex.R rex.RB ds (bad) mov (bad) rex.RX es lock hlt (bad) ja sahf adc or addr32 jg xor or test and jp in xchg in test mov rex.WRB (bad) insb movabs lret outsl int3 test cmc negb sub jmpq ja frstor clc int retq cmp sub (bad) push insl clc sti cmp mov mov sti in insb (bad) sti jl neg lods xchg and es hlt (bad) cmp mov adc jo jrcxz cmp cmc popq cmpsl adc addr32 mov xor adc push popfq jp hlt in movabs (bad) in popfq in jmp js lods stos and loop (bad) adc int outsb sarb cmp mov xchg enterq jmp fildl rex (bad) and mov and add push outsl cmp imul test fstl cmpsl fcmovb hlt push cmpsb in out cltd cs movslq rex.RX inc xchg (bad) retq (bad) jbe (bad) in shlb imul iret lock (bad) cmc scas icebp sti push (bad) clc (bad) popfq movslq rolb loop mov cmp hlt rcrl (bad) mov sub (bad) fmul push mov repz movabs shrb cltd (bad) sub cwtl sbb push rex.WRXB (bad) jge mov jmpq (bad) out imul out out loop (bad) (bad) (bad) frstor mov (bad) adc nop std (bad) or mov or fs (bad) sub sbb pop (bad) movabs rex.WX lock mov jrcxz je rex.WRB lahf mov (bad) adc lods fcomip (bad) push clc fcompl int add and mov jmpq lret (bad) movsl add xchg cs repnz loop,pt or sbb mov callq stos in jg clc decb mov insb xor jae cwtl movabs fisttpll jns (bad) es push js jg clc (bad) or (bad) gs out sbb scas jrcxz mov scas rex.RX xor out (bad) ja lock repnz pop rex.RXB in (bad) xor callq jns jle cs divb fs push out (bad) or imul (bad) sbb adc or xor movsb mov outsb xchg (bad) cmpsl adc and rex.WR jrcxz cwtl xor (bad) loope movabs cld lret sbb jg rcll je mov xor int3 pop loop or test movslq mov rex.WRB es push rex.WB repz mov or fildll xchg in (bad) movabs pushq mov and pop or js sbb cmp fsubr (bad) mov (bad) nop lods (bad) xor mov int imul sbb repz xor rolb or in (bad) loope jp mov iret pushfq rex.R xchg push mov cltd pushfq mov shrl sahf mov xor lock loopne pushq xchg iret lret mov cmpsl adc (bad) out add cmp pushq rex.R and scas push (bad) rex.WRB adc mov pop std out (bad) rex rex.RX rex.RB fs and jae jp jnp sahf (bad) and rex.X out (bad) (bad) hlt xchg stc icebp addr32 ficom lret sbb stc mov rcrl lret mov rex.XB shrl jge fld sbb push mov sub (bad) xor lret jb jo jecxz (bad) xor pop nop stos in sub (bad) (bad) fnsave movabs (bad) sub addr32 in movabs pushq (bad) movabs lods rorb and xchg out enterq fs mov (bad) test rcrb iret push (bad) and data16 add sub (bad) popfq pop rex.R lock mov mov mov add repnz (bad) xchg mov (bad) xlat sahf (bad) xor rcl scas outsb jmpq push icebp out sub add loop sti loope and mov or jmpq mov je jmpq in jno movslq clc test scas jmp ds push rex jo and add or add int3 rex.WR callq adc push gs rex.RXB and movabs movabs mov rex.WRX fistpl mov in out lods or xor cmp sbb pop adcb std (bad) gs cmpsb adc (bad) movsb sub (bad) (bad) callq fildll mov jnp (bad) mov nop cmpb add fdivr xchg jmpq out pushfq in jrcxz jbe or rex.X or sti ds ds or sub movabs and repnz sub jns and movabs add je movsl popfq andl pop and fwait pop outsb rex.X rex.B movabs (bad) leaveq jno add (bad) repnz (bad) movabs retq (bad) (bad) mov mov retq mul and xchg pop mov movabs jnp and in mov cmp rex.R sar test cli (bad) add sbb shrl movslq icebp lret retq loope adc rcr sbbl loop and sti or jne add lahf (bad) (bad) (bad) (bad) shl add and and rex.RXB loope out cmc xchg icebp pop (bad) (bad) sbbb adc sbb or xchg loop jmp (bad) (bad) pop and xor sbb rex.WRB mov or fsubrp movsl sub addr32 add jns testl add jmpq repz push out and sbb mov clc jrcxz sub hlt stos loopne icebp rex.WRX incb stos fwait mov rex.WRXB addr32 movabs mov ds jge xor in push (bad) (bad) out jo mov je hlt insl in gs stc xchg out cmp out mov push or test ja lea or mov test insl frstor ficomp rex.RXB or mov movslq (bad) cld rex.WRB cld mov (bad) data16 and (bad) (bad) sub jmp adc mov rex.WRB or out rex.XB (bad) loope subl push rex.WRX lock cmp rex.WXB sub (bad) rex.R jo mov out mov rex.WB cmc int in xlat rex.WRB ds andl pop (bad) xor mov retq and cli mov cmp pop cmpsb ja and test incl scas stc add or (bad) xor jmpq mov rex.RXB rex.WRX add mov mov mov mov scas (bad) out mov (bad) adcl mov addl mov xchg fildll and xchg retq (bad) mov repz xor mov lea (bad) outsb jmpq and (bad) sub xchg rex.WRX rex.B cmp or callq ficomp mov lods add sub sti in imul (bad) loop stos (bad) mov leaveq mov rex.B rcr out in fisubrl (bad) test add and stos (bad) je in sarl gs sub fisttp (bad) js ja and sub imul sub cs (bad) (bad) test (bad) jle rex.WRXB scas jae rorb lock stos fidivr (bad) (bad) mov test cmpsl jo mov (bad) hlt addr32 repnz (bad) outsb mov jnp icebp jle (bad) insl (bad) adc in cmp test mov movabs in (bad) pushq add rex.RX loop movabs out fbld add fs nop (bad) jmpq jo iret pop cmp cmc pop jmp add and fmuls (bad) jno in cmpsb mov sub (bad) icebp lahf jg rex.W outsl out and (bad) ja in nop int insb jmpq and insl (bad) push pop movsl fwait ja ds sub sbb sub mov add es sbb fdivl test hlt mov jmp lods pinsrw pushq (bad) addb in or ror jle or (bad) movsb fstpl (bad) pop or adc adc out sbb sub sbb iret in test callq repnz lods or add stc addr32 (bad) pop (bad) push sbb or (bad) rex.WRXB test fs in jge add lret cmc and adc rex.R (bad) cwtl mov xor fs scas (bad) enterq movsl rex.WRXB imulb mov test cld iret mov (bad) (bad) (bad) int lock mulb loope in pushq fwait fwait xchg cmpsb push mov (bad) (bad) jne rex.WRX adc (bad) loope int or imul jno in movslq cwtl xchg ffree (bad) and test out (bad) sbb (bad) rcl leaveq gs enterq mov (bad) or callq movabs lock jbe push ja cmc popfq mov cs rex.WRB sarl mov movsl lret sub adc in popfq (bad) jb repnz jl outsb push xor mov add xor lock stos sub jnp icebp pushq fwait and scas mov sbb retq xchg and shlb or test leaveq mov js in jns jb push xchg xchg (bad) rex.XB xchg test repz (bad) (bad) fs cmpsb mov cmc sbbl push pop lods cmp mov cmp mov xchg rex.WRX cmp in imulb rex.WRXB (bad) rex retq and clc (bad) callq mov icebp or (bad) cli pop movabs jg (bad) pushfq (bad) roll mov (bad) add mov int push add cmp and rex.RX xchg and imulb repz sub pushfq mov (bad) movabs mov fstpl loop (bad) out icebp (bad) mov adc pop sub popfq movabs add rex.WRXB (bad) mov loopne (bad) mov pop out xchg jle (bad) fs or mov or cwtl retq pushfq adc (bad) insl sbb addr32 jbe xchg in decb (bad) cmp add push addr32 movabs (bad) in xorl (bad) xchg lret (bad) sbb jbe in push or sbb cwtl (bad) (bad) xchg fsubl rex.RB cltd mov fscale fwait jmp sbb push (bad) (bad) or mov cmp and pop cmp adc or out xor hlt clc out push fs add rex.WR pop scas mov and es stos cmp loop rorl test imul retq and and lock nop (bad) lock sub (bad) shl (bad) or rex.XB fild pop adc subb callq cmc test mov icebp fs loope jns (bad) xor sub addr32 sub callq and jmpq xor gs pop push in mov sbb pop jns jnp mov push (bad) jle xchg subl xchg fsubr lock jg (bad) mov (bad) test jrcxz ficomp fisubr cmp test loopne movsw callq push jrcxz push jmpq (bad) cmp sub jb sbb fwait (bad) out xor cmp pop rex.W loope callq push insl or js or jl callq (bad) out insl gs cltd cmp mov rex.RX sbb jae movabs (bad) imul (bad) cmpsb (bad) enterq loop enterq pop lock and mov mov (bad) sub incb shrl lea data16 (bad) callq mov sbb cmp jg pushq andl push mov rolb loopne shld fdivs std imul sub jmp hlt callq jae mov insb outsb or js and mov (bad) retq pop adc std (bad) icebp mov in fsubrp roll add mov (bad) jrcxz mov pop pushq nop (bad) cmp rex.WRXB jp jns mov pop out pushq data16 lahf out (bad) sub or rex.WR xor test mov sbb and cmpsl imul sub xchg out xor xlat movabs fcoms (bad) lock push jle lret mov divl jp cltd out (bad) hlt jns xor addr32 (bad) sbb (bad) fs sub pushq mov cmp (bad) adc adc out stc xchg (bad) xchg movsl in in in test test movsb (bad) jmp (bad) pushq (bad) hlt insb mov cld (bad) adc jrcxz test out cmpsl test movabs adc (bad) push cmp shrl pop mov xor repz and push xchg add movslq int jo sahf cli sub mov stc icebp fldenv (bad) fdivrs and sbb (bad) rex.WX ss and mov cmp add mov je loope es out rex xlat fwait cmp xchg lahf cmp pop mov xchg mulb mov int (bad) pop fwait mov sbb out lods cmp mov xchg in or pop rex.W or je sar rex.WXB xchg or mov movabs fwait jle in jmpq (bad) movabs loope pop add jbe (bad) (bad) (bad) pop add jnp lock fsubrs (bad) iret cld (bad) scas leaveq xchg (bad) (bad) or (bad) stc (bad) jp (bad) movsq (bad) push (bad) (bad) in fcomps outsb and fwait in push (bad) enterq pushq loopel adc adc rex.WXB add icebp outsl fnsave pushq pushfq (bad) iret in hlt rex.RX hlt sahf xlat int3 in repz cmpsb ror cmc ror ss fiadd cmpsl add mov int movzbl add repnz (bad) adc sbb movslq jle movsl mov movabs jle push (bad) (bad) jge and or movabs jae (bad) in callq shrb insb repnz (bad) jnp mov mov or (bad) movsl addl stc (bad) fs je test (bad) frstor pop ds mov (bad) in cmp imul ja (bad) incb out in rex.WXB rex.R addr32 cmp (bad) (bad) jbe movabs cs rex.WRX rex.R add out mov add test sbb ja (bad) (bad) push movabs test ja (bad) icebp int (bad) lret out lods rex.WRXB mov cmp or sub jmpq or (bad) movabs mov cmpsl (bad) cmp ficom movsl rex.WRX fstl retq xchg callq xchg test sbb cmp sbb push xchg jle jrcxz push andl in jrcxz (bad) mov mov stos push shrb flds int3 rex.WB pushfq testb sti je hlt (bad) fstpl jns pop cli leaveq mov adc mov (bad) jge (bad) mov nop (bad) or andl add (bad) pop in lods enterq iret callq rex.WRXB or loop cmpsl outsb fnop fcmovnu sarl in retq cmpsl (bad) sbb fildl sbb std icebp jb mov movabs or jae (bad) mov mov movsb xor insb xchg repz (bad) subl movsl mov mov icebp leaveq pop test xlat cs rex.WRB adc and mov insb mov lahf mov jrcxz pop movsb xor push push movsb cli sbb (bad) movabs (bad) sti (bad) adc xorl mov push xchg cli jo lods jae hlt sub movsb std retq out (bad) mov std sahf mov mov mov rex.WR mov movabs push mov mov lret or cmp (bad) push push addr32 adc (bad) sub (bad) (bad) fstpl jg imul or lahf sbb loope fsubs fsts adc cmc in lret leaveq sub leaveq int3 sbb subb rex.RXB push clc retq rex.WXB fwait sahf jg pop fbstp ss roll cmpsb rex.RB (bad) movabs jae nop cmpsl lock adc (bad) pushq hlt adc pushq callq popfq and sbb lods (bad) lods sti xchg cmp outsl jo (bad) sub (bad) rex.WX icebp push (bad) rex.RB rex.W movslq add mov loope imul loop or movabs pop callq neg in rex.WRB mov out sub mov or rex.WRX add mov fimul (bad) jp in mov (bad) adc lret xchg insl insl (bad) sbb mov stos cmpsl push rex.WRXB or rex.WRX callq in cmp xor andb xchg jnp rex.WR sahf jnp mov (bad) fnsave fwait cli neg imul (bad) lret (bad) cmp or jl cmp lods rex.R ja repz and jne pop rex.WRB mov adc out gs xchg loope sub and sbb or scas loopne rex.WRX rex.XB iret movsb (bad) (bad) xchg clc movb js subb mov stc (bad) pop imul jrcxz lods decb sub (bad) or ficom movabs or popfq or lods pushq icebp push (bad) (bad) imulb or rex.RXB iret pmaddwd rex.X jo rex.WXB movslq rorb pop (bad) fnstsw test movabs push (bad) sub (bad) cltd or mov mov fadd rex.B loop push (bad) enterq (bad) (bad) mov in shlb mov (bad) pop cmp fidiv leaveq in rex.WRXB int3 subl outsl iret loope test loop and mov jle or mov pop callq test iret fnstcw and adc std rex.W (bad) push out cmp xlat pushq cmp and repnz mov jno mov (bad) cmp or out sub movsb movsb and movsb sbb jge imul xchg int mov cmp jrcxz scas xchg or outsb loop (bad) mov fcmovnbe (bad) out icebp and fisttpll adc int test (bad) rex.WXB leaveq xchg push rex.R in (bad) mov jno mov (bad) pmaxsw pop cmp (bad) fsubs in mov je mov (bad) mov mov adc test (bad) mov jno rol mov or sub jrcxz pop adc rex.RXB jae,pn pop fs hlt adc fs or retq jg scas lahf jrcxz jle nopl outsb out imul enterq mov xor xor outsb jle fstpl callq mov cltd mov (bad) push push mov js jns rex rex.WR in cmc mov in adcb mov out iret int (bad) (bad) in (bad) cwtl sub rol (bad) fsubs je push movabs (bad) icebp or movsl fsubrs icebp and (bad) rex.WRX rex.WRB enterq retq repnz scas clc jo (bad) xlat mov and gs (bad) bnd or (bad) clc xchg in mov or mov stos test rex.X rex.WRX lods int3 and imul ss mov callq gs xchg in icebp in je push mov (bad) gs cltd ds (bad) leaveq movabs (bad) cmp jle xchg icebp sub callq cs jo stc xor pushq in (bad) fs or outsb movslq (bad) (bad) imul jle mov (bad) rex.WRX callw push (bad) imul push test (bad) push movslq icebp movsb ds insl jne rex.WX rol xor out movl iret rex.WRB mov add (bad) setns jmpq lods leaveq and ror repnz cs add ja movsb push subl (bad) jrcxz movabs (bad) ror add rex.RB cmc rclb retq div fs rex.WX in hlt jb rex.WXB fmul lahf mov test and cld test pop movabs xchg sbb hlt xor repz fdivp je (bad) int rex.WX retq (bad) rex.WXB pop mov push andb lretq out xchg xlat hlt test xor mov and (bad) xor rex.WRXB bnd jno shl cmc mov xor xchg add xchg cltd lret rex.R andb repz sub fwait scas imul callq fwait (bad) mov xchg cltd pushq addr32 mov movsl rex.WR test mov (bad) cmpl stc adc rex.WX iret xchg test xor int3 (bad) int3 cmp xchg cld mov xchg (bad) jne jg jnp rex.WXB lods loope (bad) adc jl (bad) adc (bad) leaveq push rex.WB out retq jmp (bad) lods imul std or adc addr32 insl rex.WRX in mov enterq cli jmp (bad) push out fs lret jmp rex.WRB retq pushfq repz iret insl (bad) (bad) sbb add jno incb movabs addr32 push sbb sub callq and xchg (bad) lods sbb enterq jne lods rex.R jae rex.XB jnp cmp adcb xor pop addr32 cmc stos jae push clc (bad) mov jrcxz (bad) push cmp loope (bad) jo xchg repz xchg (bad) or movabs mov lahf callq or xchg rcr fnstsw cs cmpsb adc jmp js or out (bad) (bad) cmp gs mov rex.RX movabs cmc rex in xchg (bad) or fimul rex.WB icebp fs shrq (bad) jg int sub paddw jrcxz (bad) or jle lods cmpsl or shrl xor out lahf addr32 xchg or mov out fwait enterq addr32 rex.WRX es ljmp jnp adc (bad) xor sar mov fmulp pushq (bad) sub data16 sub sbb cmpsb sbb sub rcrl clc add cmp xor rex.WXB callq (bad) pushq cmp or pop cwtl and hlt xchg in rex.RB sub idivq (bad) lods out int3 popfq retq rex.WR fwait pop out data16 (bad) adc loope movslq (bad) enterq in (bad) cmpsb or jp push es pop (bad) movabs xchg repnz and rex.WRB sub iret rex.XB pop xchg sbb movabs fbstp and mov (bad) rex.WRX xchg iret and (bad) jbe rex.WRX sub rex.B pop int3 out pop mov cld iret pushfq rex.XB cmpsl adc adc fs rex.XB push rex.WRX sarl movabs jae out sahf insb callq callq cmp jl pop loop movslq mov jmpq jmp mov sub sbb adc rex.WRXB sub (bad) adc add fildll (bad) mov (bad) sub mov repnz cmpsb and ja (bad) cli (bad) jmp fstpt or jmpq sub jge (bad) out out push rex.B (bad) in (bad) callq rex.RB fcoms rex.WX rex.X xchg sub adc pop fbld jb or scas push sbb xor and out mov jg std and out int rex.WRXB rex.XB (bad) cmp xchg outsl int jbe jmpq (bad) xor movslq (bad) mov gs rex.WB rex.RXB fildl addr32 mov jmp jg,pt in (bad) cltd lret outsl mov mov cli rorb js hlt retq (bad) xchg xchg decl ds movabs lret xor (bad) (bad) sub or clc xchg andl rex.WRB cmp loope shrl push mov jg add jae rex.WRB fnstcw xchg mov jmpq rex.WRXB movslq or (bad) cmp sub (bad) rex.B mov incl pushfq or popfq adc movsb rcrb xchg mov test lret (bad) mov pushq adc mov enterq or jrcxz (bad) xor rex.W test es jae (bad) loope ja mov outsb push addr32 (bad) pop pushq iret xchg scas shrl fs or imul rex.RX repnz retq jg imul rex.WB scas xchg pop sarb retq add stos subb pop xor push enterq add and pop lock mov repnz lods movabs mov jg jl (bad) mov cmp rex.WXB xchg rex.WRX rex xor fbld mov test adc cwtl cmp movabs (bad) ja fstp sub sbbl (bad) mov jp movabs sub xor fstpl sti (bad) sub lea out rex.RB fdivrp test movslq cli hlt in test rex.WRXB (bad) in (bad) cmpsl sahf (bad) repnz gs repz (bad) (bad) movabs mov (bad) adc mov pop enterq cmpsl int3 mov lret fmulp cmp popfq sahf lret mov (bad) mov fcom movabs sbb (bad) in fmuls fistpll (bad) (bad) mull (bad) sahf test rex js movabs repz hlt mov rol fcomip lods scas push fisubl pop pushfq sbb rex.WRXB (bad) stos in (bad) push sahf fptan test fmul (bad) fisubl add or (bad) hlt cmpsl notl (bad) cmpsb fucom data16 mov jno adc pop in cwtl (bad) insb mov scas clc movabs (bad) xchg sahf mov stos and int3 enterq pushq (bad) enterq (bad) or pop rolb fisubrl mov rex.RB mov (bad) ds lock mov (bad) test enterq (bad) (bad) fdivp test xrelease (bad) (bad) nop rex.WR addr32 push mull movabs test cs rcrl (bad) push clc (bad) movslq outsb jne (bad) rex.WRXB out int jbe rex.W (bad) movslq outsb shrb (bad) in (bad) icebp mov or sub mov rol lock scas xor movabs mov xchg mov rcr push jrcxz pop popfq push pushq out enterq fnsave rex.WB add je adc and add mov rex.R mov gs cmpsb movslq outsb sahf (bad) lods in vmovups pushq out insb add loope not xchg out (bad) stos (bad) cmpsb cwtl cmp je outsl movabs mov jl mov popfq clc (bad) movslq outsb mov fucomp (bad) xlat sahf fdiv test fcmovne nop jno sbb mov repz fildll (bad) push test stos rex.X (bad) or cmp xchg sahf retq (bad) mov (bad) sti scas rex.W xchg jnp in popfq push sub imul adc movabs and mov (bad) nop pop (bad) mov and add add adc push stos movabs ds cmc out pop jge cli enterq ror addr32 movslq iret movabs test mov add fadds mov fs cwtl movsl rclb (bad) in lock fsubrp (bad) js ds rex rex.W fist cmp pop movsb xor sub fbstp iret rex.WR add je (bad) iret pushq pushfq fistp iret nop jl inc test callq fisubr mov enterq shrb and fdivp (bad) movabs or fsubrp nop iret add cwtl movabs pop sahf jo push clc js movabs insb sahf push iret (bad) clc pop movabs mov clc rex fs cmp fild iret int3 jp iret shrb hlt sahf sbb callq sbb in callq lock add clc movsb cmp enterq fnop iret push pushq movabs movabs mov nop movabs fsubrl movsb rcrb js movabs iret pushq negl adc cltd mov movabs xchg retq xor xchg lods retq push and jge,pt adc loope cmpsb stos lods pop mov sub cmc adc insl (bad) mov rex.RX fs loop cmp xorb jrcxz pop adc frstor xchg jmpq jbe rex.B mov mov mov push pushq jrcxz jmp outsl mov js lods callq hlt sahf lock push mov adc (bad) cmp rcll (bad) rex.XB add jne mov (bad) cmp sub xor mov xchg stc sub clc scas or cs (bad) rex.WB or and (bad) pop jp rex.RXB sub or out add movabs (bad) jb jmpq sub fcmove and xchg (bad) sahf movabs movabs mov rex.WRB fbld cmp outsl cmp fidivrl (bad) mov sub add int3 iret addr32 movabs movsl lods imul insl in cmp negl movsl mov mov adc test icebp movsb or movslq jrcxz and enterq imul andb cmc mov stc and mov data16 (bad) fnop pushfq cmp xlat (bad) jmp and adc in (bad) fdiv xchg or scas adc out cmp pushq in xchg outsb or pop adc test cld scas sub callq rex.WRXB mov and retq repnz andl (bad) movabs clc imul xchg mov iret out scas movabs out rex.WX (bad) push rex.WXB in rex.WRB or cmpb (bad) and rex.WRXB test or test enterq (bad) pushq stc and test sub fs sub (bad) and test and sahf nop (bad) xor and rex.WRB movslq push clc jb movabs rex.B mov cltd (bad) (bad) mov cltd (bad) sub mov hlt fisub es xor outsl pop or cltd loope jg sbbl stc xchg rex.WRX (bad) mov test (bad) mov enterq rex.WRXB movabs gs in push rex.WRXB xchg jmp iret push cmpsl rex.RX repnz callq lea ss xchg jle or enterq jbe (bad) cmpsb hlt andl scas xchg mov faddp enterq or scas (bad) stc (bad) xchg or lock scas jrcxz fdivrp cmpsl stos (bad) jrcxz fcoms push pop add jg movabs (bad) movslq sub rex.B repz test mov mov add (bad) div movsl (bad) mov fisttp data16 movsb mov shrb mov mov out std andb mov jae shrb mov icebp fbld test mov mov or std fdivp jp movsb nop or mov shrb and std data16 addr32 hlt divl scas scas adc cmpsl and popfq cmpsb sbb es icebp and mov (bad) test sub add rex.WRX xchg stc scas fimul sar imul (bad) in rex.RXB add lods flds lods (bad) adc movabs es or and mov cmp callq cmpsl (bad) mov outsl enterq xlat fcomip roll jo add cmpsb rex.X and or (bad) mov mov adc lock xchg pop xchg and jg jno xchg enterq (bad) push js test mov gs cmpl cltd mov rex.WRB sub lods (bad) mov or mov cmc (bad) sbb and scas push repnz test (bad) movabs and decl callq jo es pushq rex.B mov push in popfq sbb bnd or jle fsubs int3 (bad) lods mov repz push add lret leaveq mov or sbb (bad) pop lahf (bad) imul imul or fsubr mov fisttpl (bad) (bad) xor iret sti xchg stc mov movsb pushq rex.RX (bad) repz adc mov orl (bad) mov pop iret int (bad) xchg add test clc loop callq xor and add push mov push mov std or xchg repz leaveq and jo xchg (bad) (bad) es hlt or (bad) mov mov rex.WB (bad) rex.B jl enterq xchg loop callq xchg or (bad) fisubr in or xchg and test (bad) sub stos adc loop and cld enterq and push (bad) iret lock pop mov push pushfq mov loopne callq (bad) movabs xor sbb sub rex.WRB rex.RXB and test mov loop movabs or rex.B fs adc (bad) out mov in sbb rol (bad) pushfq mov sbb insl mov in (bad) (bad) shll test cld or (bad) in enterq cmp sub enterq test (bad) add or movabs (bad) rex.R lods sub mov cmpb add cmp cmpsb sub loop add jle mov scas and addl (bad) mov push ss (bad) ficompl retq movabs jl jle out hlt js stc or rcrl (bad) or fcoms lret lods adc stc js (bad) loop (bad) clc cmp and hlt jae (bad) out jo (bad) fild (bad) movsb pushq (bad) mov rex.W mov loop in leaveq rex.WRXB mov enterq mov (bad) fwait in xchg callq mov movsb add imul retq push mov (bad) rex.WXB hlt pop fbstp adc or rex.WRB cltd xchg callq movzwl cmc rex.R xor jp movabs (bad) adc iret adc or (bad) push xchg cmp and rex.RX out add (bad) movabs xchg mov pop rex.RB mov pushq test fldt pushfq cmpsb outsb push push mov nop mov enterq jg ror gs gs int stc cmp mov and retq ror jae pop divl pushq push test jmpq in (bad) out xor mov movabs add and sbb jne pop lock scas je cmp add rex.WX pop lea mov jo jb mov imul movabs es movsb popfq xchg pushq fldl mov (bad) pushq rex pushq fsubl or sti mov test test enterq hlt lret mov iret (bad) movabs movabs jne movabs jmpq (bad) jb jmp test xor rex.WRX jns xor jno or fs movsb fcmovb int3 in rex.WRX addr32 imul or movslq leaveq repz add mov in or cmp outsb sbb sub pop std and (bad) cmp fbstp or movabs cmpsb mov shrb rcrb sub fdivs (bad) mov scas in hlt movsb mov (bad) insb and kmovb out fcomps fs sbb lock and (bad) (bad) out in add or iret mov xor mov rex.WB or (bad) mov fcoms popfq sahf test (bad) sbb xchg cmpsl push (bad) lret adc or movsl mov movsb pop mov xchg and xor or sbb pop icebp xor sub movabs pushfq jne cmpsl (bad) xor xchg rex.WRXB (bad) lock (bad) or std (bad) or rex.WB xor (bad) loop cmpsl int3 (bad) enterq int jle (bad) movsl in callq sub lret loopne int movsl data16 push imul out rex.W and mov in std jp icebp or andl movabs gs mov cmp or jne (bad) adc mov cmpsl je in in rex.WX (bad) mov add hlt add sub (bad) fisubr xorl icebp or fwait imul jrcxz (bad) (bad) cmp (bad) retq and sbb sahf addl mov leaveq imul jrcxz jmp ds jl cli and in (bad) icebp pop test cli cli lock xchg (bad) xor and (bad) cmp push adc int3 rex rex.RXB (bad) fucomip (bad) sub cmpsb (bad) (bad) (bad) mov sbb in mov stos (bad) rex.B stos fidivrl ds movabs lock (bad) (bad) pop or or (bad) movb jb (bad) fst xchg cli rcll and adc test insl sub (bad) push mov sbb xor retq rex sub clc push insb jnp out lea rex.RXB sbb int3 rex.WXB adc or out movabs out mov jle rex.RXB callq (bad) jo jg int3 (bad) adc xor repnz xor in mov loop lahf rex.RB push std cmc or or in cmp or add cwtl and cltd cmp test scas repz fnop add mov cld pushq callq subl rex.WXB fildll add xor mov or push decb (bad) mov sbb in (bad) adc (bad) (bad) xchg repz rex.WR or subb jle adc (bad) xlat push mov cmc xchg movabs (bad) lahf movslq cs insb test or mov lods iret (bad) xchg (bad) test or movslq imul jne (bad) not xchg notb cmpsl in (bad) fildll dec xchg ss sarb jp (bad) rex.WXB or nop jmpq (bad) rex.W mov sbb mov movl int3 or rex.WR or movabs push lret mov sbb rex.R xchg mov callq xchg xchg mov jae rex.WRX popfq jl fninit jo imul test (bad) sarb or (bad) mov and (bad) movabs sbbb fmuls sub (bad) fsubrs (bad) lahf repnz retq js out (bad) (bad) fildll nop jl mov (bad) std xlat rex.WRXB mov push mov sbb or std fdivs xchg lods jp adc fnstenv nop mov in (bad) je pop jne addl (bad) mov mull rex.W (bad) jae jp in out loope lgs (bad) sbb in je addr32 or fnstsw cld test fnop popfq clc cmp cld rcll hlt (bad) addr32 sbb (bad) mov sbb xchg icebp callq adc jmpq xchg in data16 pop shl out pop add and add mov je mov and sbb mov jo in fbld retq sbb shrb outsl or je mov test pop xor jg push testl movabs adc sti gs pushq lods push repnz or fbstp stos xchg test rex.WXB data16 (bad) lock cli iret xchg sbb callq insb test imul clc data16 xor mov ja,pn jae lock pushq out cltd or clc (bad) (bad) xlat movsb rorl (bad) fimul sub and incl rolb retq imul or sahf or fwait mov rol (bad) je fs retq push lods (bad) sbb sbb pop (bad) (bad) mov movabs out fcmovnu movl in xchg mov jb ja mov xor (bad) sarb push stc adc cmp xorl roll push (bad) in test (bad) (bad) (bad) out lock mov jle xor cmp mov in or cwtl hlt (bad) mov test repnz mov sarb rex push fldl hlt xor mov in idiv scas rex.WRB pop hlt callq fmul xchg lret jrcxz or pop int (bad) (bad) loope (bad) push mov lods mov mov frstor mov sbb repz movabs (bad) icebp callq cmpsb cmpsl pop sub mov repnz outsl mov imul sbb mov xchg and adc jmpq orb int3 or xchg pop (bad) rex.WXB jge sub callq outsl outsl jne and sbb lods (bad) xchg (bad) fsts loop frstor adc push sbb leaveq orl rex.WRB loope xchg sbb movsl xor jge addr32 sbb test movabs in iret (bad) icebp sub (bad) mov retq (bad) pop push jl pop xor (bad) cmp test stos push jp in or pop pop pop sub repnz sbb or test cmp callq xor (bad) pushfq stos shll ss rex.XB or (bad) repz (bad) out or sahf (bad) loope sbb test and sti (bad) icebp lock callq add pushfq xor and (bad) repnz mov pushq cmpsb jmpq xchg sbb xor out cli out xor prefetchwt1 lret add xor in pop outsl nop (bad) rex.WRB xor stos add rex.RXB or rex.WB xchg add add jmp icebp cs mov data16 callq (bad) or pop fidivrl jrcxz insl (bad) (bad) sbb adc popfq (bad) xor xchg sahf jrcxz stos pushq mov in lret mov rorl xor cmp (bad) cmpsb orl sahf scas icebp (bad) insb mov cmc pushq fistpll mov hlt mov mov (bad) insl xor (bad) xlat mov outsb cmc rex.XB pop sub sbb (bad) jb or and pop (bad) sub int3 (bad) or mull xlat rex.WR mov sbb xchg xchg movabs fs cmp jns or cmc movsb stos push rex.W gs xchg in mov xchg in enterw pop mov xchg out rex.X fadds insl mov movabs stos xchg adc sti xlat jle stos mov xchg cmpsb (bad) lahf lods movabs test mov pop rex.RX data16 sbb cmp jmp (bad) lods or add pushq callq xchg jmp lret push lahf mov push sub (bad) push iret out icebp movslq sbb xor push stos cs lods rex.X mov sub shl adc or pop push (bad) cmpsl es rex.WX add retq (bad) sbb mov mov (bad) or rex.X repnz mov mov std jmpq cwtl fisttp mov jne rex.R mov test xchg mov (bad) (bad) lods xchg pop jge sbb sub cmpsb pop push (bad) enterq sahf mov adc cmp js (bad) rex.WRX rex.RXB in xlat sarl retq cmp jle sahf iret (bad) movabs out or adc mov test mov pop jae callq jo fnsave xchg push in (bad) outsb xor mov in rex.WRB test adc in (bad) rex.WB rex.RB rex.R rep pop (bad) or (bad) in maskmovdqu testl fs bnd (bad) mov out iret fist fucomi push or and (bad) xchg or xchg sbb in mov nop mov pop sub (bad) push leaveq stos mov cwtl jrcxz in jne test rex.WB hlt in jg mov lret in push in (bad) cli out clc (bad) loop adc fcompl rex.RB addr32 cmp cmp mov cli clc push mov icebp cli insl (bad) in lahf fisttpll out out push lods mov xor rex.WRX sub enterq sbb rex.RB lods add movabs (bad) or hlt (bad) fldl stos int (bad) cli xor (bad) pushq movabs jp cld jb adc and hlt mov rex.WRX and add clc (bad) int xor icebp mov fld lock cmp and jg fistl jge jge pushfq cmp and repnz xchg cmp cmp (bad) in fldt test xchg adc sbb js retq or adc pushq gs xchg pop rex.WRXB sti push in iret lock add or add cld mov push es mov (bad) callq test add pushq jle xchg (bad) movabs add pop movsb test xor movsb callq (bad) callq and (bad) lods rex.W push push jb cmpsb out ss icebp movslq movabs xchg ss mov in lods cmp sbb jmp imul outsb rex.WRX or rex.WR or mov int3 std div (bad) xor add sar or mov or fnop std addl jmp jmp mov cmp add jb pop pushfq sub frstor callq jns in in mov jmp pop ficompl jp pushq gs adc cmpsb scas rex rex.WXB or pop xchg sbb sub xor fwait cwtl cld jns (bad) jne rex.WX retq add jns retq movabs mov out jmp js movabs mov jne rex.WRB imul (bad) cld popfq (bad) mov cmpsb jae lret jle addr32 adcl int add repnz rex.X icebp jae and push mov lods and imul (bad) or adc out retq (bad) xchg rorb lods rclb (bad) retq rol or (bad) (bad) cmp cmp es fs xor mov rex.WX rex.RB add add mov jrcxz (bad) (bad) sub or sub (bad) rex.WRB mov jmpq imul jo,pn and mov xor fwait andl rex.WRXB xchg (bad) pop pop adc lock rex.WRB cs addr32 and hlt push (bad) nop mov (bad) shl mov sti repz test in or xchg adc jno in or adc sbb rex.XB and fbld incb in outsb loop or stos or jg sti jmpq andl jg mov (bad) (bad) mov add cwtl hlt jne div repz leaveq sub cld rex.WR rex mov fist fistpl out fimul and incb or in rex.RB cs xchg repnz jbe mov or (bad) xchg mov iret (bad) (bad) (bad) repnz mov mov cltd xchg (bad) jmp xchg (bad) insb (bad) xchg fiadd fidivl in (bad) mov adc (bad) rex.WRXB lods mov out (bad) movabs movabs test (bad) callq xor jnp jrcxz adc xor cmc movb pushq fmuls imul xor jmpq repnz (bad) fcoms repz (bad) loopne xor (bad) adc and test movsl jl cmc or orl callq (bad) ja mov or pop cmp mov (bad) and (bad) and ds cmpsb callq xor adc (bad) (bad) callq hlt cld iret or (bad) xlat int add out cmpsl icebp outsl callq iret or icebp pop out adc jnp sarl lock lock jrcxz rex.WRX sub andl adc idivl repz ja adc xchg mov insb movsl fs callq (bad) in (bad) or fsub testb and add in pop mull adc jo (bad) mov xchg pushq rex.W lock loopne and int add push rex.RX rex.R sub add mov fadd enterq mov push (bad) (bad) lahf jmp in repnz sub lock (bad) (bad) mov mov mov mov sarb fucomp (bad) mov outsb lahf fcmove pushfq pushq add (bad) loope clc cmp sbb mov andl fiaddl adc leaveq or repnz in icebp insl std add or jmpq repnz (bad) mov scas callq in in mov or test mov (bad) cwtl insl stc sarb fs rex.RXB retq (bad) xlat add rex.WRXB mov iret in lods (bad) ja cld xchg in push lock loop stc jnp mov mov fstpl xchg shll int3 rex.RX movslq add callq xchg loop (bad) add (bad) nop retq imul out test lock notb stc push lahf or rex.WRX or decb (bad) movsb xor (bad) fldcw je icebp jo add div jg push jne and (bad) retq addr32 (bad) and jnp rex.W mov pop pop mov add or rex.WRX fs (bad) jo in or jmp (bad) (bad) jle jmpq retq pop or mov (bad) stos movsb jmp lods (bad) push int push xor (bad) outsl (bad) loop rex.WRX rex.RXB in adc (bad) mov add or mov (bad) xchg pushfq movabs ds push in rex.WR rex.WRX (bad) ds or je pand push out xchg imul and lret fs xor (bad) out push int mov lods xor movabs rex rex.X cli and in iret imul scas fbld loop in mov push addr32 mov sbb iret cltd sub rex.WB fildll sbb mov fldt paddsb mov (bad) test loope (bad) cmp incb and sub callq xor mov xchg (bad) (bad) mov mov rex.WRX rcll (bad) rolb lret cltd push or popfq (bad) out cmp push out sbb mov movabs (bad) cmp (bad) ds mov sarb (bad) (bad) rex.RX xor add mov pop sbb std sub lods sbb test stc movabs in (bad) and pop ds insb lods cwtl lret sbb add sbb enterq xchg sub (bad) out rex.WX mov sarb insb and rex.B jrcxz (bad) xchg sbb retq and (bad) mov and jmpw mov test loop sbb sub push insl test fdivl (bad) mov sbb mov pop stos push xor movabs mov shll insl cld fildll jne push add movabs lock and xchg cmpsb in and xlat movabs push sub fsubrs rcll and cmp xchg mov mov push out pop out lock sbbl mul rex.WRX movsb movabs and in popfq rex jrcxz fwait int pop outsb sub xor pop decb callq (bad) loop in sti (bad) rex.RXB fwait int cmp mov cwtl int3 out test xor (bad) xchg repz movsb sahf or lods pop lret pushfq lret rex xorb out xorl andl rex.RX mov lods push (bad) (bad) jns push (bad) sbb cwtl shlb cmp and push es rolb idivl and sub pop add xorl test adc jnp in enterq push pop jmp xchg nop pushq clc add mov or add push push and mov (bad) iret iret (bad) loope cmp sbb callq mov rex.WX pop and or sbb jrcxz (bad) movb fdivp ss insl clc jnp add cli lock (bad) or movslq lret push (bad) or (bad) xchg pop add (bad) mov outsl sbb je scas clc (bad) (bad) mov pop out retq outsl outsb mull retq jno callq xchg pop (bad) in or leaveq loop xor in iret pop sbb cltd mov repnz std rex.WRX outsl sbb cmp rex.XB mov or (bad) cmc adc xchg (bad) addr32 mov (bad) (bad) adc pushfq (bad) jnp mov mov (bad) and test pop xchg and pushfq rex.WRB sub imul mov or fisttpll jrcxz (bad) fdivrl (bad) adc lahf (bad) (bad) ficompl push rex.W lret rex.XB pmulhuw mov rex.WRB mov and rex.B xchg (bad) bnd frstor xchg (bad) mov cld and callq lock rex.W (bad) xor pushfq icebp stos sub cld fldz decl (bad) outsb in and and sbb insl mov or pop add rorb clc nop icebp rex.WRXB rex.WR rex.RXB (bad) cmpsl sub mov (bad) fwait sbb mov rex.RXB add lahf mov (bad) sbb addr32 addr32 (bad) or mov mov (bad) (bad) rex.WRXB pushfq (bad) outsb xchg xchg mov mov fwait (bad) jns sti (bad) movsl lods cld cmp xor mov jns std movabs xor (bad) or sbb adc sbb ds cli testb mov movsl mov xchg hlt adc mov lcall in jmpq mov fwait or jb rex sbb movabs sub test mov adc in cmpsb pop rex.RX sbb xchg cmp nop fwait and (bad) cmp adc adc mov jmp in rex.WXB stos out retq sbb movsb or push rex.X cmpsl nop push out repz cmovl gs mov jno xchg jl mov movsl out movsl fldt fistp loope,pn jmpq outsl push pop mov sbb js testb repnz or pushq (bad) clc or (bad) or in in rex jrcxz (bad) ror adc fildl (bad) add xchg and jrcxz leaveq decl outsb add shll xchg xchg leaveq add out (bad) mov callq leaveq (bad) add ja rolb sub fdivrl orl mov mov out movabs xchg ficom rex.WRXB mov movslq adc movsb pop cmp sbb xchg movl xor rex.RB (bad) (bad) mov ds addr32 xchg or outsl jo out ss movabs retq (bad) cs fstl (bad) (bad) sub hlt xchg sbb int or in test rex.WRXB lods mov callq fmul rex.WR (bad) and mov rex.WRXB fimul je (bad) cmp push iret pop xor movabs (bad) nop rex.WRX rex.RB fcoms (bad) or (bad) (bad) shl sbb rex.XB and insl rex.XB pop jo xor rex.XB test test adc popfq in rex.RB xchg outsl xor test insl sti repnz in cmpsb loope (bad) mov outsl or sti (bad) stc sti test imul xchg test or sbb (bad) int and mov mulb movsl (bad) xlat rorl fnop mov sarl loope (bad) rex.R (bad) sbb sub movsl shlb fidivrl sub stc iret jne movabs (bad) ja (bad) loop fs movabs xchg (bad) cmp (bad) (bad) adc jrcxz sub (bad) cld sti subb mov pop in push test cmpsb movaps movabs and adc repnz insl sub (bad) and jrcxz subb push jge sahf loope iret adc data16 stc pop xchg loopne imul mov repnz lods lret xchg push xor mov xorb sar cmp rex.RXB repnz or loop data16 sbb sbb sub je jrcxz push or std in in (bad) (bad) sub (bad) push cwtl out rex.WR mov and (bad) jns adc ds sub push fmuls hlt shl icebp imul (bad) stc rorb movabs insl callq iret movsl (bad) mov push cli pop and add xchg mov sbb rcl (bad) (bad) jno xchg jle add xchg retq add incb adc (bad) loop insl (bad) movabs xchg and xor orl stos outsb mov pop xor xchg and xchg (bad) mov pop lret mov sbb fistpl sbb int mov in (bad) push jrcxz (bad) (bad) and repnz out lods imul callq jrcxz push stos xchg cmp clc or pop sbb sbb adc rex.XB (bad) (bad) fistl insb icebp scas mov or (bad) xchg sbb or xchg iret cltd lock rex fs mov lock (bad) adc shr fstpt hlt (bad) (bad) or imul nop test xchg mov pop mov ficomp rex.WRXB test xor add callq adc clc xchg (bad) pop adc (bad) or lock xchg enterq cmp jns jbe mov je pop and add or (bad) mov pop xor pop adc out movabs xlat fadd xchg mov data16 mov (bad) out test sub (bad) cmpsb xor mov jg (bad) jae mov xor rex.WX push mov sub rex.RB iret movabs (bad) (bad) icebp iret and (bad) rorl adc (bad) or cli cmp test rex.RB and sbb jnp mov sti gs in (bad) out test in movslq jmpq pop jb pushq add push rex.WXB mov fistpll add cmp or scas repnz (bad) or add jg sub (bad) push movsl (bad) xchg or or test sbb adc out xchg scas sbb (bad) adc mov addr32 or scas gs in in loop pushq out sbb xchg fmul mov mov pop jmp pop (bad) mov cmp loopne cwtl movabs in icebp and cld movabs sub sahf sarl int (bad) fstl out and mov xor jrcxz and sbb (bad) (bad) insl (bad) int loope bsf jrcxz (bad) mov pop jnp pop retq in imul cmc sti addr32 sbb mov lods stos nop in cmp lret loop iret (bad) lret in insb cli push (bad) (bad) movsl movabs (bad) test out (bad) jae or jmpq sub retq mov clc addr32 pop mov cwtl jrcxz and pushfq clc sbb lods shrl mov andb mov fldenv ss xorl callq jb jo insl (bad) pop loopne movslq gs (bad) sbb fs jrcxz or out in movslq add fldl sub fdivp xor adc movslq in movsl enterq rex.X sbb xor stos and fsubp adc iret mov push sbb enterq adc lret cmp rex.WRXB movsb int3 and (bad) gs fidivl push xor or push repz jle (bad) jle pushq icebp ja (bad) and lret sub loopne and fwait adc xor fs cmp cmpsl rep xor xor outsb push (bad) xor (bad) ds or insl pop mov push mov (bad) adc jg loop xor movabs callq sbb (bad) in sbb sub cmp mov int3 mov in in repz movsb test icebp sbb and hlt jae in callq fwait pop pop cmp sbb xchg std pushq loop (bad) (bad) callq out lods test iret or adc (bad) retq scas pop mov (bad) ror loope xor in imul (bad) jmp rex.WRX rex.RXB rex.WRXB movabs (bad) jle xor pushq cmc (bad) rex.W fs add xchg pushq movabs push (bad) insb js popfq jrcxz popfq mov mov (bad) icebp imul lret rex.WX insb push movabs test xor (bad) or (bad) mov lock jg xchg push push paddusb cld rex.WRXB xchg mov mov mov test (bad) mov nop (bad) xchg jrcxz movabs cmp fsubs mov loop (bad) rex.WRX rex.WRXB pop cmp mov (bad) movabs jp imul scas cmp push fdivl cmp mov imul adc fcmovnbe mov fadd and push push enterq jo push jrcxz (bad) sti (bad) movsb (bad) movsl fcoms (bad) addr32 pushfq jrcxz lock retq int3 mov mov idivb addr32 shl imull (bad) loopne xlat lods lods jl icebp (bad) mov xor xchg and incb es rex.WR fs cwtl testl movsb fnsave sub (bad) mov out fucom in jl callq (bad) hlt (bad) jg hlt pop movabs rex.WX fidivl sbb xor je pop leaveq (bad) cmpsl fnstenv and scas retq push sbb (bad) push fs fiadd jrcxz jge xor lods je icebp mov out addr32 and rex.XB rex.WRXB fwait sub imul mov jl add add ja (bad) iret sub cmpsb popfq mov and mov jnp movsl xchg mov mov xchg test movslq xchg (bad) add and or lock lock and in cmc lock test and jbe sbb pushq and jmpq push (bad) in mov in callq lock sub sub cmc (bad) rex.WX rex.X (bad) or xor cmp and xchg sarl jne (bad) hlt int3 fnop addr32 mov lret (bad) jg sbb fdivrp loop loop mov cs addr32 (bad) mov mul sub xchg mulb add loopne pushq hlt scas push test cs subb enterq sub and sahf rex.W jo push insb movabs mov sar movabs mov (bad) addr32 xchg rclb imul retq adc rex.XB lret jno xchg pushq gs movabs jle pushq callq (bad) (bad) (bad) and test and adcl out adc ja sub out ja (bad) or leaveq test (bad) xlat loope rex.WRXB icebp rex.WRXB jp (bad) sbb mov mov jmp (bad) cwtl divl rex.B lock (bad) test pop rex.R test out cwtl callq (bad) lods (bad) in jns (bad) sub (bad) fidivr (bad) push std test enterq mov mov mov (bad) rex.RB cmp push jle repz jb cmp mov mov jp mov mov cmpb push movabs mov mov rolb cli (bad) jrcxz jge scas int3 cmc adc cmp mov xchg push pop sahf cmp (bad) (bad) hlt jae cmpl pop test out repnz mov retq popfq rex.WRX xchg pushq leaveq repz pushq rex.WR clc loop addr32 movabs xor push pushq test ja xor incl sbbl push fs xchg es (bad) fsubl sub pushq adc (bad) or pop pushq repz mov or (bad) movslq roll loop pushfq in rex.WRB rex.WXB (bad) callq out mov repz or xchg loop stos test cltd rex.WB (bad) mov pushq add (bad) push (bad) (bad) (bad) (bad) cmpsb or sub or (bad) adc (bad) repnz push movsb (bad) cs clc test insl mov int mov xchg (bad) lods movabs (bad) (bad) ds cli test retq sub xchg outsl and (bad) mov jl sarb (bad) addr32 cmp fadd rolb (bad) (bad) mov (bad) mov shl (bad) fmul xchg xchg push rex int3 xor testb rcll cmp mov jle xor or test jg (bad) popq rex.RB (bad) fwait pushfq ja cs mov rex.WRXB lock ror clc cmc jb clc bnd shlb fiadd jg mov (bad) (bad) rolb rorb addr32 and jo sbb popfq rcrb sub lret gs movsb mov rex.W cmp mov pop movsb cmpxchg (bad) clc lahf pushq (bad) (bad) iret mov rex.WRXB rex.R fimull jle addr32 cmp (bad) movabs movabs (bad) rex.RB (bad) pop test rex.WR or jbe (bad) pushq lock (bad) outsl xchg test in and rex.W movabs pop addr32 (bad) outsb adc pop lret sbb (bad) addr32 rex.WRX adc or sub jns lock xchg shlb mov movl xchg movabs clc lret iret and loope (bad) jl movabs mov pop (bad) movabs movsl lahf (bad) xor or cs add (bad) cs jmp incb push or jle leaveq in repz mov pop pop (bad) insl jmpq sbb mov in pop sub imul addr32 xchg fucomp lods in or mov cmpsb callq mov iret movabs (bad) and fwait stc push es lahf clc outsb jg (bad) in retq and test xchg nop rex.X rex.WX imul rex.WX adc out imul adc leaveq mov insb pop cmp lods mov out fwait add xchg cmpsl stos jrcxz movabs push sub pop nop (bad) mov mov mov callq or mov leaveq movabs outsl jge cmp out mov and movabs icebp lods sbb adc (bad) add in and or ds (bad) fistpll cmp (bad) or xchg int movsb fstl xchg movsl xor stos xor or pop and xor jo in add pop pop and (bad) loope adc cmc or pop retq iret lods xor mov (bad) mov add movsl mov outsb out mov pop add fs movslq (bad) fbld (bad) xor sub nop outsb cmp rcll std rex.X or int sbb or jmpq int3 inc and xor adc rex.RXB lock rcr adc mov pushq rex.WRXB outsl mov jge jl (bad) rex.RX es stc add lods push out pushq push push rex.R lret cmp (bad) cmp out jrcxz rex.WB adc mov mov (bad) mov (bad) insb (bad) cli xor enterq pushq retq pushq (bad) adc jbe mov mov mov mov pop mov test xchg jae (bad) loop cmpsl or scas cmp loop (bad) xchg (bad) xlat ficom in pop (bad) jo jnp xor movabs pushq (bad) rcr testl (bad) cltd (bad) cltd fimull jbe mov sbb or hlt mov pop nop fnsetpm(287 (bad) pushfq jmpq cmc in ja stc xor mov (bad) jnp xchg fdivrs xchg (bad) mov pop movsl lock int3 retq ja sbb fs out loopne jrcxz lods hlt or in imul cmpsl in (bad) fistpll movsb xor retq lods clc stos scas or stc fwait sbb mov test out pushq mov xchg insb mov xlat cwtl callq (bad) (bad) mov andb adc push rex.B pop jo and in sub cld and hlt jg push or cmp sbb (bad) mov test pop fildl in loop in ror fstl stos es out mov imul test and leaveq lea shl and xchg jrcxz mov out imul retq pushfq rex.RB pop iret xor rex.RX out jmpq or iret lock cmp cmp cmp mov movsl imul jrcxz jg ss fdiv cmc (bad) cltd cli in cmpsb lock xchg cmp movslq out cld fldl out and outsl xchg mov movabs xchg (bad) (bad) mov xor jmpq jle fisttpll (bad) or add js (bad) and movslq cld or xchg clc push incl sub idivl lock out in in xor (bad) mov rex.WRX push jmpq sub adc test and in outsl mov adc in xlat (bad) or iret jno push push retq or rclb rex.RX mov and in mov mov jns out movabs pop cmpsl jbe rex.WR psllw adc test rex.W rex.WRX cmpsl jae xchg fidiv outsl sbb addr32 pushfq xchg and cwtl addr32 movsb rex movabs pushq (bad) (bad) cmpsb jrcxz cmp xchg loope movabs jns stos mov (bad) and jl lock sarb jge (bad) cs callq fs stos and jrcxz (bad) jnp pop mov pop cmp add lods sti mov sub xchg mov test push mov jrcxz cmpsb and jae pop add (bad) sbb je out or mov fs rex.WXB sbb (bad) (bad) or repnz (bad) rex.RXB xor cli (bad) jg out callq movabs (bad) in js sbb mov mov add mov push cmc and loope add retq jrcxz (bad) rex.WRB lods test lods rex.XB frstor sahf stc fild movsb adc clc pushq test and movsb jne cs or neg iret fistpl movabs in mov insl pop rex.WB and cltd mov out rex.WRXB mov (bad) iret sbb cmpsb sub popfq sbb rex.X rclb rolb (bad) insb and shr cwtl or insl movsb (bad) retq rcr mov mov or and rex (bad) (bad) xchg (bad) or shrb lock movabs rex.B (bad) rex.WXB loope rcll xchg adc (bad) stc rex.WB int mov cmp in xor xchg mov test sbb push xchg sub (bad) pcmpgtw add rex.WRXB pop push mov jg mov rex.WB lods test rex.WRB rex.R or (bad) pop add repnz movslq pop rex.WRXB push cmp jl mov or data16 jae pop add fmull clc movabs (bad) in xor push (bad) pushq movsb callq rcrb mov rex.X movabs pop (bad) (bad) (bad) jmp movslq fcmove xchg rolb (bad) or or xchg or insl mov addr32 mov es xchg faddp (bad) fbld outsl rex gs or rex.WRXB movsb cs nop shlb mov pushq lret (bad) (bad) rex.WRB rex.RXB movslq mov adc and fidivl jp cmpsb pop mov movsb in mov sub mov mov callq ds cmc or sub je pop insb jo movslq lret mov cwtl and (bad) (bad) cmpsl test rcrl rex.WR repnz and (bad) xchg jmpq jg mov jne loopne cmp adc imul fidiv adc retq mov (bad) fcmovne lods sub mov shlb sbb xchg ds mov movsb in out jg (bad) cltd (bad) out (bad) shr (bad) cld repnz (bad) (bad) hlt mov adc je enterq (bad) pop in and shlb fildll mov xchg lods (bad) (bad) stc (bad) iret retq (bad) scas fidiv lods in and stc cmpsl and mov addb mov enterq jns stc xorl add loop leaveq stos (bad) (bad) addl rex lock xchg jae imulb imul (bad) xor (bad) and scas movsb (bad) mov ljmp clc xchg fbld insb movabs je rcl fsubrs dec xchg loop (bad) or (bad) popfq loop or and mov xchg movabs sub test pushfq in js cmpsb enterq or out shrb fld iret jmp (bad) shr (bad) push (bad) rex.WRXB movabs out repz movabs pushq mov pop rex.RB rex.WRXB pushq mov scas out push mov xor fcomp (bad) addr32 cld sbbb cld add mov (bad) pushq adc stos (bad) (bad) (bad) jae callq movsl fldpi mov (bad) in outsl sub jrcxz in (bad) clc push xchg stos (bad) push xor ljmp mov jg add scas fs icebp sahf in outsl shlb imul mov rex.B (bad) or adc push cmp add cltd std sub and (bad) add sbb hlt cld iret pop addr32 pop jns rorl and or xlat mov (bad) (bad) (bad) rex.WRB lock and in and (bad) pop xor (bad) mov mov pop (bad) stc stos insl lods movabs lods cld sahf xlat and rex.B sbb (bad) jrcxz shrl movabs leaveq or push sbb stos or mov pushq out or xchg jmpq or ds and jrcxz (bad) scas out stc cmp and xorl add (bad) push mov shrb rex.X movabs imul scas stos sub pushfq lret gs xchg stos cs (bad) je fsubrl mov rex.WRX ss shlb push movabs jb mov pop (bad) test xor movabs hlt mov mov iret movabs rex.WXB rex.R push push (bad) ja mov lock xchg and mov fwait xchg fwait cmpb xchg mov (bad) hlt (bad) rex.XB add frstor out xor sub xchg jmp rex.WXB pushfq pop sbb fisttpll leaveq or (bad) or sub (bad) frstor rcrl cltd cs mov add jmp scas (bad) int3 rex.RX xchg callq (bad) mov nop fsubr stos (bad) dec add rex.WRXB or pushq movsb mov rclb (bad) ss movsb and (bad) xchg rex.XB ds (bad) rex.WRXB (bad) mov jge sarl (bad) jge fwait mov mov cmp shrl sbb jb iret or int3 mov (bad) gs cs incb push rex.X ja adc xlat (bad) (bad) (bad) mov rex.RX repnz jge jl cmc cmpsl loope (bad) rex.X icebp xor sbb movslq rex.WXB (bad) jns (bad) lret (bad) subl sbb enterq rex.WRB enterq sbb mov rex.RXB mov (bad) (bad) mov pop jrcxz test (bad) rex.RX repnz (bad) mov (bad) (bad) mov rex.WR jb (bad) (bad) int jbe mov sbb mov (bad) add (bad) jns pop outsb (bad) mov rex.WXB rorb pop rex.WB addr32 (bad) rex.WXB jns shlb icebp lret in addb rex.B loopne popfq hlt movabs cmpl popfq (bad) out ds lret enterq xor mov mov adcl rex.RB cs cmpsb movsl (bad) sbb xchg fbld int3 loop add (bad) or lock mov (bad) jecxz jae jmp fist (bad) mov (bad) or pushq rex.WXB cmc and data16 mov movslq leaveq addr32 adc lock hlt es lock pushq retq callq (bad) mov shrb rex.RXB ja data16 rex.W leaveq adc icebp movslq cltd xor jns (bad) jle xor movsb sbb mov or shlb shrb (bad) mov in callq mov int3 and movabs repz push mov movsb data16 (bad) lock mov sahf hlt loop and test adc xchg cwtl icebp adc ds cmpsb cld scas (bad) callq sbb lods mov or rex.RXB rorb or mov frstor (bad) adc loop (bad) jns or rex.WRB lahf icebp imul (bad) int3 (bad) rex hlt (bad) icebp imul rex.X mov test andb push in xchg xor xchg (bad) imul mov sbb (bad) or mov mov push cmp xlat (bad) fcomps test test insl lods (bad) insb (bad) xlat mov sbb mov (bad) (bad) jmp fst and rex.WB lods sbb or or movsb jmp xlat mov imul lock lods mov fmull ds mov in lods test lods movabs rex.XB rorb jg rex.WRX test jmpq jrcxz fstl and int rex.RX mov xor xor es fwait retq (bad) out sbb mov (bad) sub scas mov rex.WRB lock cmc lods push push (bad) mov (bad) out and fucom clc icebp insb adc mov (bad) cmp sub (bad) jbe lods and frstor jbe je sub add mov mov sahf sbb rex.B addr32 fadds (bad) std sub mov hlt stos rex.WRXB (bad) idivb lret (bad) (bad) rex.XB jae push insb stc and pop jno mov fcom movabs rolb rex.WB (bad) retq xlat ja movabs (bad) mov mov (bad) sub stc mov rex.RXB rex.WRX ds mov nop mov test movabs cmpsb push sarl and push mov (bad) in (bad) js or mov cld rex.RXB push jrcxz,pn lahf outsb ffree (bad) cmc in xor rex.WX and (bad) jo mov push cs xchg cmp push jp rex.XB in rex.WXB or scas mov gs sub mov fcomps (bad) sahf rex.X (bad) (bad) add jb sub movabs js leaveq xor or rex.WR jnp rex.R rex.WRX callq lods xor mov pop ds (bad) lock and push pop jnp (bad) jae movslq fild cmpsl icebp cmpsb out in xchg scas sarl jle (bad) mov jbe rex.WRX in rex.R int scas push cmp jle or sbb (bad) mov lods xchg pop mov retq mov (bad) fisttp fidivr movabs test mov jle mov int3 push pop pop sahf out mov (bad) pop rex.RB jl push (bad) push sub xchg lahf pushq cmp retq insb mov sub popfq and addb movsb out lock (bad) rex.WRXB inc fisub rex.WRB cli xrelease xor sti mov cwtl in sbb es movslq or rex.WR test sub mov add (bad) or sub enterq scas insl es rorb in adc (bad) mov repnz cmpsl fs push jb hlt enterq leaveq mov cmc lea cmpsl test fsubl mov mov in pop cmp stos (bad) and (bad) (bad) test fisubl sarb rex.X sbb add adc mov (bad) (bad) sbb divb fwait jne leaveq (bad) cmc mov rex.RXB (bad) movl xor rex.WB cs mov cmpsl mov pushq jmpq in leaveq mov pop imul sub mov sub xor and lods xor (bad) rex.WRB scas mov rex enterq xor (bad) lock cmp loop in xor (bad) xchg pushfq mov sub hlt rex.RXB push or jmpq mov callq (bad) and fisub (bad) icebp lret fs cmpsl iret (bad) cwtl in (bad) (bad) rex.R sbb jo retq push cmpsl out ficom (bad) out hlt outsl (bad) mov int mov (bad) pop test mov in cmc (bad) xchg cwtl gs push test in (bad) dec (bad) mov mov (bad) (bad) sub rex.WRX (bad) adc xchg rcr shl (bad) (bad) xchg adc (bad) mov int xchg adc lret mov push (bad) sub xor xchg fcmovnu insb (bad) (bad) fs cmp insb jrcxz (bad) ficom jmpq in stos rex.WRX callq mov (bad) xchg push rex.B rex.WRX xchg addb in add cltd cmpsb nop fcomi rcrb cmpsl mov adc callq cli rex.WRB sbb rorl shrl mov or out mov pop fild pushfq rex.WX rex.WR cmp cmp mov movabs (bad) movabs rclb xorl sti fucomip iret fcoms movabs (bad) cmc (bad) pop in (bad) sbb popfq (bad) rex.WRXB mov nop jne pop mov pushq (bad) or mov mov addl in cs sahf movabs mov ficoml fdivrl xchg (bad) add outsb loop movabs rcrl fs fstps jl mov sti loope (bad) mov icebp push mov in rex.WR int rex.WXB xchg stc loope rcr rex.WRXB fmul adc add adc test mov movabs hlt and mov rex.WX xchg xchg push adc pop jl mov outsb cmp xchg (bad) jo and sbb shl or rex.WRB nop pushq adc out jo or jmpq lea push in out sbb movsl fbld add mov (bad) loopne add test and shrb scas mov rex.RX rex.WX addr32 mov movslq (bad) in pushfq push (bad) add rex.WR xchg jnp (bad) jp mov fldl push xchg mov movslq mov adc (bad) cmpsb stos rex.WX addr32 push ljmp (bad) rex.WRX rex.RX cmp retq cmpsl and pop (bad) add fnstsw pushq in cmp pop (bad) mov pop (bad) mov vmovlps sub fsubrp xchg or mov and (bad) sbb pushq (bad) rex.WRXB xchg in xchg loope adc push (bad) in insb lods and fisubl adc (bad) (bad) rex.WRB addr32 ja hlt movsb cmovl (bad) fdivrs or sub pushq cltd mov mov rex.WRB movabs icebp and ja,pt mov sbb in (bad) subb jrcxz cmp callq (bad) jo mov (bad) cmpb (bad) fdivrs rolb fisubrl jne (bad) sub rcrb ja pop jle (bad) or movsb pop or mov sub cmp rcll cmpsl sahf nop movsb mov jle fsubl (bad) loope pop shrl xchg xchg mov in leaveq (bad) (bad) jle (bad) icebp (bad) lret insb movabs and push sub (bad) mov mov add int lock insl or sahf nopl in test and (bad) notl (bad) (bad) (bad) callq (bad) rcr js add js mov push mov imul xor iret leaveq rorb stc jrcxz rex.RX (bad) sub fimull (bad) insb cs movslq movabs (bad) xchg in scas or out (bad) nop mov xor xor jne outsb jno repz xchg jmp adc mov cwtl test (bad) xor frstor pop fcomp mov ffreep push mov xor jo adc nop movsb enterq push xchg sahf in pop fistp (bad) mov enterq add fisub in cmp addr32 rex movsl in fcom and xor pushfq cld cs callq test cmc hlt rcr xchg (bad) repnz shrb or cmp sbbl jrcxz (bad) adc push subb insb jmp lods xchg xchg mov stos test mov jo cmpsb sub or sarl in clc lods pop cmpsl hlt mov (bad) (bad) movsb and sub rex.WRB orl mov jmp (bad) push cmc sub pop mov pushfq rex.XB xor in lret fcoms or adc cld shr shr (bad) (bad) lock callq movslq rorb jl ja icebp pop retq rex.B pop cmp jb mov test adc mov cmp mov mov push add insl (bad) scas adc and callq test and outsb notb or push rex.B loope mov mov xor and ror test xchg jo fist pop mov add jb outsb (bad) lock rolb shlb mov or push loop mov xchg addb (bad) gs imul outsb mov rex.WRX rex.WR retq out sbb rex.XB enterq in imul in cmp sub push or add mov sbb addr32 movhps js xlat sbb lock movabs rex.WRXB rex xchg sbb pushq fstl in shlb jrcxz (bad) (bad) callq pop xor int3 mov pop rorb cmc (bad) retq xlat rex.RXB xchg xchg (bad) push mov xchg (bad) pop gs mov (bad) cli xor enterq callq insl imul or mov fistpll and pushq (bad) cmpsl test (bad) xor cmc pop rex.WRXB sahf out (bad) (bad) (bad) stc and pmaxsw cwtl clc mull rex.X jns addr32 addr32 nop movabs jbe jb jae add or callq (bad) insb int3 in retq (bad) cmp sahf pop in movabs (bad) fcomps lock idivl mov or jne sbb shl in push sub movsl lock fimul or (bad) (bad) mov stc movl adc fist lods jb xchg (bad) in rex.R (bad) vmulps sub rex.WRX imul lea in push add jg push and rex.WX xor in cwtl (bad) xchg movabs gs sbb xor (bad) (bad) cmpsb (bad) (bad) sbb pushq insl in callq movsb xlat rex.WR sbb ds (bad) cmp fildll jp rex mov movabs fwait add add (bad) mov mov and clc es xor notb cld (bad) and rex.WRXB jbe pushfq rex.WX repnz in gs mov (bad) fsubr xor cmp mov negb mov clc xor movsb fsubs movsl movabs in shr mov sarl jg in xchg adc add (bad) rol mul (bad) repz shl in and in gs (bad) lock rex.RX and (bad) fcom (bad) mov mov addr32 xchg adc mov jae pop je rex.RXB xchg out mov push adc rorl movabs fmulp sub ds and pushq fistpl (bad) add sbb popfq adc nop movabs mov scas xchg divb (bad) mov sbb outsb rex.RXB xchg out jg fldl out icebp pushq jae add mov push (bad) rex.X imul out hlt loopne cmp pushfq fcomp mov xchg sarl sbb push fistp (bad) (bad) loop mov cmc rcrb sbb sti callq and (bad) mov (bad) xlat cmpsb xchg add mov (bad) in add cmpsb and add mov pop sbb fstl mov test shrb enterq mov icebp ds in movsb (bad) jmpq cmp outsb jp bndldx (bad) sbb (bad) push sbb mov repnz (bad) push and mov mov (bad) xchg add xchg (bad) out in (bad) or retq push jo clc nop hlt callq lea fnstenv outsb fsubrl movslq movsl sbb iret mov in pushfq sbb int adc insb rex.WRB xchg shlb callq test pop adc cwtl je rorb fs insb callq or rcrl sub sub adc mov sub movsb rorb shlb xchg add movsb fldl rex.WXB out shrl (bad) mov loop loope jmp test test enterq and insl add jae jae or rcrl add mov jo fadd pushq fsubp addb jp mov adc movsl cqto outsl test nop addr32 push (bad) jo test xor fsubr stc in in (bad) lock jae pop movabs pop add add mov (bad) pop out (bad) xchg clc jmpq push fistpll cltd lock movsb in or and adc sbb in popfq icebp repnz sbb pushfq mov mov or (bad) or callq cmp sub ficom adc pop out pushq (bad) enterq jmp (bad) jg int or imul (bad) movabs scas and addr32 xor movb leaveq sub rorb adc test cmp (bad) cwtl (bad) (bad) lret xchg clc adc test mov (bad) insb (bad) jo fwait cmpsl (bad) xor rex.WRXB (bad) mulb mov movabs rex.RB mov xchg cli mov stc push adc jmp or mov or jnp push add pop jb in jg movsb out rcrb popfq sbb (bad) (bad) stc rex.WRXB pushq mov add xor xchg loope imul or movzwl jb pop push (bad) loope,pn or mov rex.WB rex.WR mov std mov test in fdivrs pushq lock jmp (bad) (bad) cmp in movabs sub fbld pushfq (bad) jp mull mov mov (bad) es mov scas int3 and xchg jns xchg pop sahf shlb lahf outsl (bad) cmp push lods in adc leaveq out mov in callq xor adc leaveq rex.WX fadds jg callq mov retq movabs mov xchg stos retq pop and ss int movsb imul loop stos jg or cs (bad) mov (bad) mov adc mov roll rcrl (bad) or sbb scas insb out mov fisub stos sbb in fistp ljmp pop push (bad) testb lret (bad) mov test mov mov int add pushfq nop data16 add jle rex.WXB xor add xor (bad) scas jb jns rex.RX rex.XB pop shlb rex.B stos sub and (bad) test (bad) ds jno cmp and lock rex.R movabs in mov sbb imul callq jmp cmc sbb mov jle subb sbb adc icebp (bad) out imul insl (bad) mov adc push cli movsl adc cli pop lahf fiaddl fucomp xchg rclb sbb sub xor lods or (bad) add or push or lret xor adc data16 jnp (bad) cmpsl popq fucomip out mov insl pushq rex.WRXB or (bad) (bad) (bad) repz push mov jg push xor or (bad) test fs pushq mov mov lret testl imulb imul sarb add js rex.XB mov rex.WRX movsl rex.RX jo popfq divl rex.WRB jnp subb pop and sbb jne (bad) lock lahf fwait movabs repz rcrl movsl rcr cltd cwtl and (bad) imul mov mov rcrb (bad) fsts lea nop (bad) jae callq imul (bad) lods hlt fild nop push jmpq jrcxz (bad) (bad) callq jmpq loop sub retq out insb jg gs iret stos insl xor cmpsl sarb add add sar movsb js lods lock imul jbe cmpsl sbb (bad) repnz icebp movsb (bad) cmpsl adc and (bad) movsb fcomps push lea (bad) (bad) cli in gs fisubl je adc int3 outsl cwtl hlt stc es xchg rex.WXB out lret jbe add scas rex.WRXB sub (bad) mov and add lret (bad) fidivr rex.RB mov pop or push vcmpss rex.X or pop mov enterq out je cmpsl cwtl idivl mov sbb (bad) mov push xlat push sub test or lret xchg (bad) ljmp mov movsl movabs hlt pop (bad) in rex.WX loope test test in jg clc lea in (bad) (bad) cmpsl xchg out sbb je out adc push leaveq jl int cwtl fstpl nop cmpsl cld mov jg lods repz rcll retq mov sbb sahf rex.XB sub addl pop rex.WXB out xchg fimull mov xchg jns (bad) (bad) decb mov leaveq gs shll (bad) pushq fsubs sbb (bad) jo xchg (bad) or (bad) mov test or test and push sbb rex rex adc xor (bad) sti or cmpsb pop mov push adc mov rex.WRXB rex.RXB lock pushq retq ja lock cmp fdiv pushq adc and (bad) insl adc mov adc icebp push (bad) mov xlat and xchg jmp cmpsb add leaveq push popfq xorb nop mov sub stc movabs mov sbb mov mov mov rex.XB xchg and lea shl sub mov xchg hlt (bad) and icebp movslq jmp nop in cltd loop clc sbb sahf mov out sbb leaveq xchg mov test out pop adc test jo outsl (bad) (bad) fiadd and mov in and ss adc xor hlt lahf cmp mov lock sub sbb shrb (bad) out mov (bad) mov addr32 push jno fistpll push icebp xchg mov add mov jae fnstenv (bad) outsb mov xchg mov xor orb add incl hlt jrcxz xchg lahf mov gs out (bad) push mov cmpsl fnop (bad) add or loop mov (bad) cli mov xor sbbl in cltd callq int3 cmc (bad) xchg testl mov or lret (bad) xchg (bad) addr32 add stc rex.WX sub mov xchg (bad) fdiv mov movabs cmp icebp repz test (bad) hlt fidivr sarb shrb cmpsl fldl fucomi mov sbb std sarb jrcxz mov int popfq or retq add lret callq sub mov (bad) sub mov adc rex.WR (bad) mov fisttp repz sub mov std (bad) xchg adc shrb sbb (bad) lock pop and xchg stos rex.W xchg xor mul mov ds cmpsl or outsl hlt movabs sbb cmpsb movslq fidivr jg out movsl (bad) (bad) retq adc or ficomp mov imull enterq (bad) pop repnz pushq stos (bad) clc pushq adc movslq leaveq cltd mov cmp movsb mov push movsl clc fldenv sbb insb retq fistp pushfq add lods jo rcrb enterq xchg or fdivrs adc adc stos rex.X rex.WRX pop rex.RB icebp pushfq ds jb jle lods lock add add add xchg leaveq mov rex.WRXB pop cli ds or imul (bad) add and mov rolb sub movabs loop addr32 (bad) in mov sub jo sub jo sub jo sub jo sub jo sub scas sbb mov int3 enterq scas (bad) repnz fsubr out pushq in fbld jo scas mov mov movabs jp rolb rex.WX mov or fist test sbb je push sbb movslq adcl xchg jo or sbb in xchg cld fwait jmpq adc in pushfq out add (bad) and jmp cld pushq pushfq loop mov loop mov movabs cmc neg (bad) in rex.R rex.WR add callq nop mov cmpsl cmp rex.WRX cwtl jns sub sbb mov xchg retq addr32 (bad) stos loop stc jmpq push (bad) fistl lret (bad) or sahf (bad) mov callq rex.X rex.WR lock icebp (bad) rex.WRXB retq adc (bad) mov push ss adc cmpsb (bad) (bad) ror pushq (bad) in mov xchg (bad) and (bad) loop outsl or clc (bad) (bad) callq (bad) mov rex.R ds mov lods (bad) (bad) xor roll adc (bad) out or sbb pop rex.WRXB (bad) (bad) rex.W iret ficom iret (bad) (bad) push sti iret ficomp iret (bad) (bad) and iret fisubr movsb (bad) xor insl fdivp mov movabs out mov mov mov and test lock xchg movslq pushfq push rex.WX mov (bad) pushq insb pushq jrcxz iret je loop js testb scas (bad) jl (bad) je rex rex.W rex.R jo pop movslq rcr push xchg pop in pushq jp xchg and sub mov stc jo pop cmp ror cmp and rcr add or sub mov jo pop fsubs sbb and mov fs dec lock mov (bad) enterq (bad) cld (bad) mov insb (bad) std mov incb lock adc (bad) mov (bad) mov test in (bad) lret (bad) movabs fsts add or adc add ffreep movsb outsb fimul repnz in pop adc or fucomip movsb adc adc pushq mov repz rex.WR sbb (bad) in or loopne jp,pt stc mov test jb in (bad) (bad) cmpsb sub pushq mov rex.X lods test lock add (bad) nop jp (bad) icebp jg jl jne rex.WB sub rex.WRXB outsb (bad) rex.RB imul cwtl scas (bad) (bad) (bad) sbb out out stos movsb rolb cmpl repnz cld fdivrp fmuls rex.WX shrb or hlt (bad) jbe int3 pop test jmp out (bad) rolb (bad) repz movsb (bad) (bad) xor push xor xchg icebp (bad) incb mov and and leaveq gs cmp add leaveq mov fwait xchg push (bad) sbb sbb pop jp loop sahf imul xlat jo or enterq out and lock rcrl pushfq jns je pop (bad) imul addr32 lods shrb (bad) mov mov roll iret jno movslq icebp gs in push adc xchg test mov rex.R fidivrl xor add rex lock fisttpl (bad) addr32 or movabs lahf leaveq int3 hlt pushq (bad) int test stos fstl (bad) frstor callq mov sub (bad) icebp mov pop or jo test add cmpsb fnsave clc xlat xchg lods jp (bad) sbb mov jno (bad) or mov mov or push sub and cmp xchg mulb iret jmp js enterq and jns outsb xchg retq xor jnp add mov data16 add rclb nop mov cwtl (bad) in mov cmpl add xchg movabs rex.X sub and jnp sub iret and pushfq (bad) repz jae and pop xchg cmpsb rex.RX (bad) shrl retq ja mov loope (bad) imul addr32 movabs ss rex.X stos rex.R mov sub js rex.WRXB (bad) orl outsb and (bad) xor xchg (bad) rex.WRB fs mull fisubl rex.WB (bad) out rex.R sub lods mov xor jo lock xor movsb cmp (bad) mov (bad) out (bad) xlat movsl in mov cli ffreep (bad) test fisubrl stos or sub (bad) (bad) loope pop pop (bad) cmc (bad) (bad) (bad) lret adc fidivrl cmc or movabs adc cmp xor push (bad) (bad) out or icebp movslq xor stc test xchg rex lods mov movsl mov sbb movabs addr32 jo xchg mov (bad) cmp xchg addr32 jae test loopne mov decl xchg xchg (bad) pushfq mov lock (bad) ds in sub mov movsb push push cs movlps push mov (bad) popfq jnp adc js mov movabs fadds sbb (bad) mov cwtl jae and in (bad) leaveq rex.WRB (bad) xor rex.WRB es xchg mov xor sub adc icebp pushq cmp (bad) pop sbb mov rex.RXB mov rex.B jb nop (bad) icebp fsubrl push sbb cwtl pop jge scas sbb movabs in jle movslq outsl push andl (bad) gs and leaveq adc (bad) xchg or xor jrcxz cmp movabs repnz fldcw (bad) mov xor sub and or negl repnz xchg add repnz xchg fdivl in in loop ja fisubr lods subb icebp retq insb stos mov fwait jb add movabs es movb (bad) rex.WRB in push insb rex.B pop sahf (bad) xchg xor outsl clc fs sbb mov (bad) fcoml xor or mov mov pushfq movabs enterq mov movsb scas int3 mov (bad) rex.XB movabs inc lods (bad) mov js mov int adc xor pop or cmpsl (bad) and jae fcomps (bad) jo in rex.WRX and jnp mov sbb adc pushfq cmpsb (bad) pop andb repnz and (bad) jnp push (bad) jnp pushq cmc out mov nop in mov adc cwtl xchg stos mov pop clc test mov movsb jo rcrl jo (bad) (bad) retq sahf stos xor xor movabs pop (bad) movslq xchg jno movsb cmp (bad) (bad) (bad) retq sub fdivrl sbb lods (bad) jo test add stos cld rex.RX retq jb rex.WRXB (bad) (bad) ja sbb loop pushq mov imul pop pop sbb movsb and or loope ja,pt (bad) xor out movabs sub in clc ja movsb (bad) jp lahf pop add (bad) push rex.WRX in and in idiv jl test jns (bad) fdivrs nop je mov push add fwait (bad) adc stc adc retq jns jl out fidivrl ds or or (bad) fnop xchg adc (bad) imul add rex.XB adc fidivl loope (bad) sub fwait loop fld xor or mov repnz mov je jbe sbb or (bad) testb rex shl (bad) cmp clc cmp hlt addr32 outsl mov movsl mov mov rcrb jmp (bad) test rex.RX jb outsb outsl js test movslq add xor stos loope rex.WRB es rex.R lods (bad) cld callq retq sbb cmc mov (bad) lret pop sbb loopne (bad) push sbb movslq in movabs (bad) (bad) or rex in stos cmc rex.RXB adc in cmp mov rex.WR rex.RXB cmpl (bad) xor movhps push mov in loope cmp and pop retq pushfq pop xor adc push sbb (bad) and data16 sbb test mov rex.WR mov (bad) sahf (bad) movabs xchg stc jo in lods callq rex.RXB adc mov pop movabs xchg mov (bad) (bad) and (bad) callq sbb adcl (bad) callq pop movabs rex.XB mov xor ss mov fild (bad) imul (bad) (bad) jb mov jb imulb or (bad) (bad) lret stos jrcxz out sub mov rex.WR lods pop sbb (bad) loope fwait in mov lahf pushq incb mov (bad) rex.RXB int loopne mov out callq out stos std sbb leaveq orb adc xchg jg push callq insl fbstp (bad) cwtl test outsb xor adc xchg xor (bad) out xchg mov cmpsb (bad) ja loop retq xor movabs movsl test jge rolb lock loop jne pop hlt movabs xchg lods mov (bad) pop movabs cltd cmpsb lret sbb hlt addr32 movabs add test add push rex.WRXB jmpq sbb (bad) jmp rex.WB rex.X out rex.RX mov int callq mov mov repnz jb int3 stos ds mov mov movabs or rex.RB mov mov insl fstpl mov sub fmuls mov jo (bad) retq xor ss movabs outsl jmpq lock (bad) add or sbb movabs push loop cmp mov (bad) (bad) jnp int jno stos sbb cli (bad) mov js in cmc movsb ja cs (bad) leaveq fwait cmpsl (bad) cmc sbb cmp jne rex.WR (bad) (bad) int shlb insl or je mov cmpsl add in mov xor test je mov mov cmpl pop loop xor and push addr32 (bad) rex.XB push cmp (bad) out ja inc push mov jmpq shlb or or (bad) rex.RXB (bad) or cs xor cmpsb mov pop insb repnz and xor lock cmp movabs lock outsb (bad) callq stos jne or fcomip rex.WB mov xchg jae negl ja lret callq push mov adc ds mov in insb rex.RX fwait clc cli rol xor ds jmp (bad) lock mov (bad) int3 nop out movabs in xchg leaveq pop es loop sti rex.WRX in addr32 jae fnstcw retq rex.XB fdiv jrcxz setae nop shr movabs lret vpsubsw data16 stc test (bad) or stos adc lea hlt cld movsl pop scas (bad) icebp test rex.WRB jge jmpq nop movsb retq sub in movsl movsl (bad) (bad) mov mov retq scas sbb retq mov cwtl sub mov lods rcrb cmp negb cmpsl imul jl mov sbb jne xchg or movabs shlb rex.WRX (bad) scas gs (bad) (bad) jrcxz callq loop rorb ss leaveq (bad) mov mov adc (bad) movsb fcomip sbb jo in outsb pushq in movabs jg rcl sti jmp insl lods cmp (bad) movabs sub or (bad) idiv (bad) ja (bad) lods rex.WRXB (bad) stos jo adc sbb sub (bad) or lods rorb insl mov (bad) frstor mov test psllw jbe xor js fs cmpsl outsl or movabs xor sbb (bad) mov stos icebp rex.XB sti pushfq push (bad) xor callq int (bad) pop (bad) jne sbb rex.WB rex.WRXB mov shrb sub movsb movslq sahf loopne in in in and movslq jae push mov add loope pushq enterq jb lock xor clc hlt insb movsl clc mov xchg nop leaveq addr32 repnz movabs insl leaveq pushfq ja fmul callq push (bad) xor sbb test cli fmuls xchg scas (bad) js lock movsb rex.WRX movabs rolb fs movabs cmpsb inc (bad) pop fwait xor rex.WRXB lods callq (bad) je (bad) xor lock lahf jg mov xor cmc or rex.WRX (bad) or cmp cmp rorb test mov (bad) test mov push sbb (bad) and jge out movsb dec mov orl sub jns jo jmpq rex.R rex.WXB jg test xchg adcl out scas rex.B rex.X cld jo mov repnz and loop or mov xchg movabs push jno jne push (bad) jb pop xor mov adc cld mov lock sub out jne icebp sub jne jmpq (bad) jno out retq rcr movsl rex.WRXB cli cld insb test or mov scas nop (bad) mov (bad) movabs test jo xchg mov xchg mov rclb mov seta jp cs rex.X (bad) fs (bad) (bad) cwtl cmpsb xchg lods mov rclb shr retq mov cmc testl rorl ds jb je mov xchg sub flds mov (bad) pushq (bad) jmp mov ds movsb (bad) in (bad) movabs repz stos in mov jle (bad) lods xlat adc es ja mov out es and push push callq rex fstpl and stc (bad) xchg ficom sub and insl movsl fcoml repnz in in imul popfq fsub or xchg rex.WRXB lcall (bad) xchg rex.RX jbe movslq cmp mov movslq ss insb (bad) (bad) shl fnsave xlat fcom rex.RXB stos test (bad) iret jns sbb cmp lods in jo push rcrb shlb (bad) vpmuludq fcompl rex.RXB icebp movslq addl out add xor fs rol in rex.RX movl ficom mov (bad) outsb callq scas (bad) (bad) je mov (bad) clc xchg repnz movslq ficoml cmpsb rex.WX (bad) mov (bad) sar ja in lods and (bad) movabs cmp test fdivp xchg std repz enterq jle mov fildll sub shrl adc (bad) xlat lea xchg test in adc jo xor (bad) push gs (bad) js,pn stc jrcxz scas xlat xchg (bad) repnz fstpt icebp rex.WXB xor mov repz cmc mov loopne enterq fwait mov test fadds add addr32 add jmpq jmpq fmul in or rex.RXB push mov mov int3 pushq add sbb rorb mov lret (bad) xor int movabs fiadd imul fisubr (bad) jrcxz rclb cmp clc (bad) mov pop xor (bad) cmpb movslq scas adc sti out xor (bad) rex xchg rex.WXB adc sbb (bad) rolb xlat pop hlt mov lods std xchg (bad) retq sub clc movabs (bad) add (bad) (bad) (bad) sub in std int and rol lods (bad) pop loope retq fiadd sub (bad) loop jg adc or sub jns insb out cmp ja rex.XB cwtl mov test xor (bad) xor jg in (bad) imulb (bad) (bad) ftst (bad) scas mov sbb sbb (bad) mov shr xchg pop in clc rex.RXB repz sbb out movslq movabs mov test fstpl leaveq pushfq rex.WR (bad) leaveq out cld rex.WRX test rex.RB pushfq repnz movabs in (bad) sbbb callq fwait or movslq jo jb repz retq sti mov stos stos js (bad) adc pushq sub lret or push rex.W rex.WXB push js (bad) (bad) add mov xlat in rex.WXB (bad) fisttp mov xor repnz (bad) xchg shl pop jnp xchg pushq fldcw or xchg out mov add (bad) cmpsl pop imul pmaxsw pop vmaxsd lret rex.RXB lret cmpsl cmp imul jp cmp rex.WRB (bad) jrcxz jnp fwait imul xor js fstps cmpsl fmuls in insb and sub callq (bad) sbb jne (bad) (bad) cmc sub cs je hlt sbb jne lock (bad) push (bad) ror insb lods sarl xchg movsl je retq (bad) fstps repnz lret (bad) push subl mov xor rcrb cmpsb adc push icebp sahf rex.WX movsl enterq (bad) xchg roll movabs sbb (bad) loope sti adc mov movabs lods movsl int pushq rex.RB hlt setp insb int3 rex.WRXB mov mov add jbe xchg rex.X and shl mov movsl (bad) cmp movsb or lods stc movabs sarb mov mov mov in pop scas lods pushq (bad) (bad) mov rex.RXB out cmc and pop pop jnp cmpsl sbb jne js rex.X movabs scas or (bad) movabs rex.RXB lods (bad) (bad) sub (bad) hlt movabs mov (bad) sbb jle (bad) dec iret fsubs (bad) repz es push stc pop lcall fdiv addr32 (bad) es fwait (bad) push test (bad) cs push mov leaveq retq jb (bad) xor or or clc cld rex.X data16 iret mov repz push movabs adc lods mov push push xor (bad) cmpsl adc sbb sbb cmpsl (bad) callq sar movabs test xchg fcompl cmc add sbb in cli xor rex.W rex.W rex.WB jmpq (bad) mov cld sahf pop mov (bad) test shrl cmpsb add push (bad) or scas xchg fidivrl (bad) jns fcomps js stc rex.WRXB rex.WRX mov movabs movabs jp xorl cld retq pop stos push lret mov sbb js and pop movabs xchg cmp test (bad) std xor cmpsl rex.X rex.WB jge xor clc gs nop int3 retq xchg jmp jl mov jmp lock xor (bad) cmpsl scas rex.R mov data16 pushfq xor std push rex.R rorl outsl (bad) out (bad) popfq mov in jrcxz mov fisub out je pushq pop imul movsb iret divl rep iret fnstenv mov movabs push jg sub and fiadd xor push movsl test stos (bad) xor add (bad) jns and or pop fist repnz (bad) and (bad) (bad) mov loop (bad) outsl mov movsl (bad) sub sbb rex.RXB (bad) xchg mov ficoml pop xchg rex or jae cmp sbb add sbb (bad) (bad) (bad) (bad) (bad) test mov (bad) cmc (bad) pop sbb insb out or (bad) adc or (bad) lret orl fldenv rex.WR cmc cmc pushq cmp (bad) adc addr32 or loop out (bad) sbb insl mov xchg xchg xor lock adc push add sbb mov lret (bad) (bad) lods imul xor (bad) hlt mov mov rex.B movabs rex lock ss cli and icebp or fnsetpm(287 clc pop cmp or (bad) mov shld callq pop sub (bad) add rcll (bad) (bad) xor sub pop rclb (bad) cld (bad) iret addr32 loope jo fs jne int movabs jo mov es cld (bad) add xchg pop pop clc rex.XB jns cs sahf jg lods (bad) adc scas mov rclb (bad) iret and (bad) (bad) pushfq in mov (bad) pop retq mov xchg sub in loop sbb (bad) rex.X xor sahf enterq fs test jmpq hlt rex.B icebp rex.WRB xor push movabs and fwait add fcomps ja (bad) repnz cmpsl in jle movabs and cmpsl (bad) cmpsl pushq (bad) pop gs mov leaveq movabs stos pushfq lahf or cmpsl fsubl movsb pushq movslq mov movsl iret mov (bad) cld rex.WRXB (bad) rex.WX sbb mov insl mov fildl jo (bad) stos (bad) jp rorb (bad) cmpsl cmp in out callq test iret (bad) fcomip scas fsubrs rol mov retq xor nop push jle lahf callq fcoml jge movabs and callq std cli loop lea jmp xor out jge rex.X lock mov pop movsb cmpsb rclb int3 rex.RX repnz outsb rex.RB or lcall in hlt sbb jne (bad) cmp add hlt rex.WB frstor (bad) jbe (bad) (bad) fild test adc mov sarb movabs cld (bad) iret (bad) jp hlt fdivrs lods pushq mov cmp data16 sti xor movabs mov (bad) mov rex.WRB hlt gs add fist xor and cmp fdiv nop test callq mov pop mov add add xor add out cmpsl (bad) in pop cmpsb add out xor movslq pushq pop lock stos fdivrp (bad) hlt sub movabs jrcxz and mov mov xchg push mov add sti je cmpb (bad) adc pop jae orb hlt in movslq lods xchg adc (bad) and imul (bad) pushq cwtl jno jle mov and stc sahf pop mov (bad) test mov (bad) (bad) test rolb int xor (bad) (bad) sub movsb pushq mov (bad) rex mov and mov and or xor retq ror rex.B mov sub int3 cmp in js movabs movsb rex.WRX in jge xchg enterq int3 mov fdivrl es es mov movabs jl (bad) fbstp jae sub and jrcxz rex.W (bad) nop pop in lock in iret (bad) cwtl cmp xchg cmp rex.WXB or in stc test (bad) enterq mov (bad) out insb (bad) mov lock (bad) sarb xor xchg psubusw in andb jmp enterq hlt test mov (bad) fbstp (bad) movabs hlt sti loop and cmc mov xchg (bad) out add xor iret add mov enterq out dec (bad) add jge sti (bad) callq movsb and jbe (bad) ds mov jrcxz rex.R rex.WR fcoms jb iret or rex.RB cs test movslq cmpl out and (bad) cmp cmp (bad) in sahf (bad) shrb fmul movabs mov movsb mov enterq int3 imul retq test (bad) int fs jae sub out cmp (bad) rorb cmpsb std (bad) out rex.R data16 insb out and rex.XB movl jrcxz and fadds (bad) mov test (bad) (bad) leaveq retq movabs int3 mull in (bad) mov mov xlat xor (bad) mov xchg rex.RXB and sbb add mov sbb mov adc push xor je pushq in cwtl (bad) xor scas mov mov addr32 movabs repz lods sub outsl nop cmpsl sbb ja pushfq (bad) repz iret (bad) stos in sbb push shrl add (bad) nop sbb xrelease xor fstpt cwtl (bad) or jo movslq imul push pushq scas retq rex.X icebp (bad) fisub add (bad) cmc insb test jg jl rex.R sub mull repz je outsl sbb lock sahf test (bad) fiaddl in jmp push (bad) fs ja stos retq and (bad) cs out and (bad) mov rex.WRXB rex.R rex.R iret outsl jmp mov add (bad) xchg test rex.RX lods xchg rex.RXB cmp (bad) (bad) insb enterq (bad) (bad) (bad) lea addr32 cs (bad) (bad) push rex.W test movabs pushq (bad) test add rex.X xchg es (bad) xchg out rex.RX test rex.W rex.WRXB xchg or lods adc rcll add lret shr popfq jae addl mov ss test sahf sub jge sahf addr32 (bad) rex.R cmpsl loope jrcxz (bad) movabs mov (bad) jae (bad) (bad) sub add ss push pushq rex.RX push mov xchg stos jns and sub xchg mov pop add xchg rcll enterq or movsb mov add rex.WRXB add (bad) cmp xor pop sub mov and sbb lods cmp mov movsl sbb sub rex.X and fcomps movslq cmp outsb fisubr es jb movl out rex.XB ss int rex mov rex.XB movabs out jmp rol callq mov js rex.RXB fsubl fs add lret sub movsl cld xor (bad) movsb cmp lock (bad) push mov adc (bad) or (bad) repz (bad) or mov enterq scas and sub jne push js add rex.WX (bad) rex.X sub repnz rex.WXB test out and xchg out cmpsb loop cmp ja cld (bad) sti xchg addl xor movabs ja enterq (bad) and and imul and cwtl mov mov sub outsb (bad) xchg adc xor shlb lock icebp retq (bad) lret sbb out lea rex.R (bad) (bad) (bad) fsubs lods (bad) (bad) leaveq fist out (bad) movsb sub test (bad) rex.R rex.W ficom movsb fs cmp cmp mov jo sub mov push imul movabs stos rex.RXB (bad) mov jb jo jnp callq mov fwait (bad) addr32 add pushfq jg rex.W pushq and rex.RX rclb add xchg pop callq cld data16 rex.RX rex.WX sbb (bad) cld xchg rex.XB jns jbe lret cmp pop rex.RXB fadds (bad) jle int (bad) mov or or sub pushq push fcomp add in and rex.WRXB insb sub jne (bad) cmp pop rclb add je ds outsl or leaveq rex.XB mov (bad) cmp sub (bad) movabs ss push int jo jg lods int fdivrs push js cmpsl mov mov jne fist (bad) (bad) jne cli mov mov mov je mov push hlt mov hlt iret fwait (bad) (bad) mov (bad) lahf fwait out xchg mov (bad) stc mov lret (bad) push hlt mov xor (bad) xor flds test (bad) rex.XB fisub mov in cmp pop fsubs pushfq rex.RXB (bad) mov (bad) je push ficomp mov add add (bad) cmpsl xchg movabs mov out out cmp add idivb cmp ror (bad) push rclb (bad) clc (bad) mov js rex.WR int fcoml sbb rex.WR add fwait imul fmuls sarb cmpsb jns (bad) rex.WR or sbbl or jnp rex.R (bad) lods imul xlat iret push popfq cmp imul or mov and enterq sahf std mov cmp lret (bad) mov stos mov test std xchg or pushfq and lods pop sbb push adc jno in mov mov add insb adc fcoms shl cmp addr32 sbb sbb lcall mov cs lret pushq sarb or cmp retq ds sub add sub jnp in outsb cmpl in cmpsl test loop mov pushq popfq stc retq addr32 (bad) imul cli cld (bad) imull and (bad) (bad) or scas jp mov and lret cmp rex.WRXB (bad) xchg jmp (bad) movsl (bad) (bad) (bad) (bad) sbb mov lahf xor ja lods ds sbb pushfq rex.RX rex.RX stc cmpsl imul lahf (bad) (bad) cmp ds enterq or jae jne out or mov cld or loope xchg repnz or or lods pushq lcall stos retq xor and cmpsb loope sbb imul adc or clc pushq sub push cmc sti lock mov cwtl jl mov fnop sub rorb mov test mov out scas frndint add (bad) xchg (bad) test je (bad) stos and (bad) or mov jo (bad) in out xor jrcxz xchg callq xchg repnz (bad) push xor in stos cmpsb or sub or adc adc movabs movsb xchg jo xchg (bad) sbb sub pushq shr pop (bad) cs add movabs iret xchg popfq mov xor mov fs mov test loope lods movsb imul movb (bad) fldenv test leaveq sbb adc rclb xchg nop subl adc xchg mov jrcxz or movslq data16 lock imul loope out (bad) cmp and sti and (bad) lret (bad) mov sbb mov (bad) cmp (bad) xlat push insb push xor (bad) push (bad) (bad) or popfq out mov notl movsl cmpb adc es lahf and (bad) outsb (bad) (bad) xor movabs (bad) lods leaveq cmp (bad) loope xor mov sub (bad) xor xchg (bad) jle (bad) rex.X (bad) pushq stos jg movsl lods callq adc out sbb fucomp (bad) (bad) out xor retq xchg or add leaveq mov test lock or orl movsl imull xor sbb icebp insl movabs cltd mov (bad) (bad) pushfq (bad) clc out repnz (bad) nop insl sub icebp cmp jns jmp popfq jmpq (bad) (bad) loopne fnsave clc push pop shld xchg in movsb jbe mov pop sarb cmc fidiv xor iret or cmpsl fs cmc fnstsw xor jle insl pushq scas loope gs (bad) fs cs jb int faddl movabs lea stos mov sahf test adc cltd mov callq jg sbb jmpq js fstpl jns cmp adc cwtl or adc rex.WX jae (bad) lahf or mov (bad) in iret jnp rex.RB pop (bad) mov sbb (bad) sub (bad) stos xor or (bad) push bnd cmp mov (bad) test jrcxz icebp bnd icebp (bad) jae jg movslq push rex.RXB movabs add mov adc adc (bad) cmpsb jae or and cmpsb sbb movabs rex.R imul sub or adc and xor fidiv cmp in xchg (bad) sbb jns (bad) rex.WX cwtl fcomps jrcxz push pushq in or icebp (bad) test adc repnz push pushfq jmpq insl sbb xor enterq sub sbb pcmpgtd shlb out repz (bad) add (bad) (bad) xchg (bad) sub or rex.RX ficoml cmp cmp and rex.X (bad) xor jmpq and in (bad) fcompl mov pop adc insb nop fcompl roll fdivrs test jmp movabs or clc adc rex.RXB lahf rex.WXB cmp fst adc outsl mov (bad) hlt jrcxz stos lock cmpsl (bad) pop in or (bad) movabs movabs mov in je std in (bad) fs icebp imul sbb mov out and sub (bad) (bad) jg mov iret lock mov idivb rclb or rex test rex.XB lret pop test sti mov (bad) mov mov push xchg rex.WRX pushq repz cmc rex.WR rex.WXB push (bad) adc mov callq cli sbb lods cld popfq sub sbb xchg and add jrcxz insl fdivr sbb rex.XB imul cld or (bad) enterq mov adc pop lods xchg movsl jbe out sub mov push sbb test ror ffreep (bad) jno callq (bad) rex.WRB imul or (bad) jp lods jae,pt cs cmc rclb (bad) out out test mov out in (bad) fmuls mov std push lret rex.WB xor scas mov fsub mov (bad) fs (bad) rex.WR outsl insl shr (bad) je and movabs (bad) cmpsl enterq loop or (bad) movabs repnz clc mov add out clc sub stos adc mov pop cwtl andl icebp jae rex.RX (bad) mov rex.WX mov (bad) rex.WR sub (bad) imul cwtl (bad) add test scas test in jle sub lret int3 in cwtl (bad) andl (bad) or cmpsl mov push loope movslq push and stos addl lret cmp in shrl mov scas (bad) (bad) sub lcall out ficompl mov addr32 or cmp or cmpsl fisttp (bad) outsl je test jrcxz or pushfq scas add rex.RXB add xor add sub test sahf andl add (bad) rex.R leaveq and in js fimul mov out mov mov in nop or jns (bad) xlat xchg mov rex.X rex.B jae (bad) lret pushq sbb xor fild lock cmp stos out pop pop lea or (bad) mulb retq mov sub pop mov jle (bad) xor clc incb sbb negl shlb movsl clc loop mov callq in push stos sbb icebp movabs sub add xor movabs push mov ja (bad) (bad) rex.WX or ss (bad) clc (bad) in cs jl insb xchg (bad) cmc fbld fisub cmpsl or pushfq js out jbe sbb mov addr32 (bad) xchg rcr mov out cld xor add jmp nop mov sbb leaveq mov pop push cmpsl lods add fimul mov rex.XB sub xchg (bad) (bad) mov lock movabs test cwtl test out sbb ja fimul or in rex.WXB jmpq movabs negl mov sub (bad) cs stc movabs callq rex.WRB (bad) add jrcxz ficoml add hlt test jg movabs fimull (bad) adc in jns shll test repz rex.RB mov push pop loope (bad) mov jg or pushfq test rex.R rex.R sahf mov mov rex.WRX rex.XB lea xor mov vmovaps or (bad) movsb rex.WRXB pushq (bad) (bad) jmpq or loop mov xchg (bad) (bad) in insl jns pop (bad) in jae hlt scas stos mov xchg mov movabs test mov (bad) xchg and in cmp mov fsubr xchg lahf pop xlat out movsb xlat mov (bad) icebp or adc out imul rex.X enterq jrcxz int shr or popfq test rex.WRXB push callq clc fwait sub lret (bad) xchg test rex.WR (bad) rex.WRB mov (bad) (bad) lret lock and mov shrl rex.W int3 nop retq (bad) pushq sbb adc xor mov cmp mov mov js push iret fcmovu (bad) iret lods icebp rolb (bad) divb adc imul (bad) sbb rex mov mov js cmpb lods cltd (bad) xor loop mov jle adc out xchg (bad) xchg rex.WRB sbbb push mov jo adc xchg iret xlat gs insl movsl out add xchg lock push ds add sub (bad) (bad) and sub cmp xchg (bad) insl (bad) sbb stos lods xchg or rex.XB cld cmc pop stc (bad) add jo int rolb out sub (bad) xor loopne mov fldl int pop ficoml movabs movsb fisttpl jmpq fiaddl (bad) mov iret rex.WRXB gs cmp xchg (bad) std mov lock or jmp movabs fsubs cwtl lock hlt (bad) or int adc movsb lock xchg lods or or sbb add (bad) or int cmp (bad) mov (bad) cmpsb mov jo loop sahf (bad) push (bad) rex.WB cli (bad) sub cli rex.WB scas sub int jle xor jl rex.B and (bad) rex.W adc sbb rex.W rex.R in imul mov movabs stos movsb or test push (bad) mov and outsb pushq or cmp pushq sbb xor (bad) shrl (bad) callq leaveq insb adc or test stc pushfq sbb mov or mul jg push add lods cmp hlt rex.WRXB jg push or repnz insb xchg jmp jmp (bad) mov fdivp mov rclb iret fs in xor add mov hlt mov rex.WRXB cmpsb cmc incl roll mov jle enterq pop (bad) imul lret xchg mov (bad) pushq xchg mov jle lea gs callq cltd (bad) mov or fcmovbe xor loope lock xchg out adc cbtw mov (bad) (bad) mov adc push or scas movabs jb imul ljmp callq imul movabs sub icebp (bad) es mov xchg and mov test (bad) mov sbb sarb repz rex.XB mov test (bad) mov (bad) dec leaveq adc es std addr32 movsl sbb mov push rex.RX xor ss repz (bad) sub xchg (bad) subl or stos sub mov frstor icebp popfq addr32 jb lock push cmp push sbb repnz cmp or mov xor and and leaveq in mov pop imulb push add test (bad) in data16 lock movabs lock sub or (bad) add fldenv mov (bad) jae iret cmpsl mulb pushq int3 mov (bad) (bad) jo mov or push xchg mov pushq sbb (bad) mov fs in shlb mov push xor lods mov test callq std ficomp sbb (bad) ror movabs add imulb sahf retq rol movsb mov shlb mov (bad) (bad) cmpsl std mov pop mov mov (bad) (bad) mov int3 xchg movabs stos (bad) mov cmp gs loope sub mov or sub mov movabs jg jo mov movabs int3 stc pushq mov sar mov sbb or test std pushq add repz rcrb rcl rex.WR jge lret cmp rex.WR push insb mov insb or pop cmp (bad) lods mov mov shlb cmp (bad) sub (bad) and out pop xor ja callq lock out cmp subb (bad) (bad) in (bad) adc vcmpeq_osss movabs callq in (bad) add jne test stos iret (bad) int rcr pushq (bad) add xchg movabs and popq (bad) cmp rex.WRX outsb hlt jl rex.WRX (bad) add adc mov rex.WR sarb ds fmuls (bad) test lods and test or push dec insl jmpq jo mov repz sub stos stos loope mov (bad) out mov mov rcrb cmc fs or (bad) test xor rex push (bad) in rex cmpsw sub add cld ss mov stc xchg pushq or movabs mov xchg pushq mov xor mov mov in or cmpsb repnz (bad) out outsl cltd (bad) jmp sbb iret idiv jge movabs (bad) lock sub and fdivrp in mov (bad) fbld (bad) jbe sti fisub xchg xchg data16 sti movabs adc xor sti fiaddl (bad) or mov divl mov movabs rex.R or sar retq (bad) (bad) cmc fistl or (bad) or xor pop fdivr (bad) (bad) xchg or (bad) cmp jae pop xchg in adc lret lods mov rex.WX rex.XB (bad) (bad) rex.WB (bad) or movabs mov leaveq pushq fisubl cmpsb sub out pop add scas jns sti mov or jmp iret fwait cwtl test rex.WRB xor stos xchg callq (bad) roll loope pushfq out (bad) xor out or in sahf cmpsl movabs es fwait test movl in lret (bad) (bad) cmp or sbb or (bad) enterq in movsb addr32 (bad) loope adc adcb or or (bad) mov cld add fcmovu pushfq cld in pop xchg (bad) (bad) (bad) nop sub add fwait loop mov mov (bad) lea pop mov addr32 and (bad) fsub rex.XB rex.WXB and or xor add sub xor jmpq lock std and pop ja hlt or clc fcmovnb mov sbb lock and repnz xor pushfq repz fwait xor adc stos in lea in cmc or push in stc fs out fcomps push cltd (bad) xor cmp pop retq stc movsb data16 or movabs lock movsb (bad) cmp xchg adc in fcompl jmp movabs jnp sub xchg sbb fsub xchg rorb loop pushq movabs pushq callq repnz (bad) es pushfq (bad) and xor hlt and jmp adc jmpq (bad) hlt movabs mov sbb or adc iret or mov sbb je sub (bad) add sub in jrcxz rex movsl adc mov repnz or mov (bad) mov pop scas rcr sbb movslq retq sbb pushfq or mov test ds (bad) or hlt sti mov gs (bad) js scas and xchg push pushq pop je retq mov xchg callq (bad) or lret movabs adc clc rex idivb test or cwtl je xor enterq jmpq cmp jmpq mov std mov insb je or (bad) out mov jg fsubrs cmp jo jrcxz sbb (bad) sub icebp movsb in or addr32 mov jrcxz (bad) movabs movabs lret jmpq sbb and sbb test (bad) or jmpq movsb rex.B movsl out mov (bad) cmp movabs mov (bad) out xlat rolb rex.WB pop (bad) and (bad) or xchg cld xchg (bad) jns adc cmp add callq lcall (bad) (bad) hlt test lock outsl pop repnz sub fildll out rex.RX rex.R cmc pushq rex ds insl and (bad) mov (bad) or es ss add pushfq rex.RX xor mov push (bad) cmp out mulb jns clc mov fisubr scas in mov (bad) jrcxz and or sbb xor outsb movsb mov xor enterq (bad) or pushq (bad) push (bad) (bad) (bad) jl adc jae (bad) mov mull mov stos add retq (bad) pushq cmpsl loope sti mov mov xor cmpsl xchg (bad) or out or jrcxz or fisubrl out adc push and idivl xchg (bad) or mov mov sbb xor add movabs or imul jno push imul rol or jb fsubl shlb loope (bad) (bad) xchg lea stos sub jnp or shrb shlb fs fmull (bad) (bad) (bad) insl lret xchg loop (bad) loope imull mov rcr pop cmp (bad) shrb (bad) (bad) (bad) (bad) add (bad) cmp (bad) decb pop fadds bt sbb callq out (bad) add fs pushfq jnp rex.WR iret movslq xchg sub add iret mov (bad) rex.R jg insl (bad) jge shll iret (bad) mov fisubl adc (bad) and ja (bad) insb jne sarl and in (bad) and and sbb mov or hlt (bad) cld (bad) and push mov add mov rex.WB stc or lods adc cmp fisubl paddq (bad) shr and (bad) test and and insb pushq (bad) add pop cs sbb cltd push insb int test lods xchg push repnz sub movabs or jge (bad) (bad) xlat pop pop (bad) ds pushq (bad) fistpll cs insl and fidivr xchg outsb cmp or mov (bad) (bad) jne stc sbb mov add stc (bad) insl loope lret (bad) mul and add nop movsb je (bad) and (bad) (bad) jg (bad) shll stos rcrb ljmp or (bad) scas sub iret (bad) rorb (bad) pushfq (bad) mov xor mov rex.XB and xor test add xor pushq xchg clc je (bad) rex.W es sbb sub (bad) out in cmp (bad) xor xlat mul seta (bad) mov test rex.WRX mov (bad) rolb enterq sub callq (bad) mov jno xor rex.XB movabs (bad) stos cwtl cs xor (bad) or cltd sti add neg pop xchg mov movabs retq (bad) stc mov jo xor or mov fdivr adc xor jge loopne fnstsw xchg (bad) repnz rcl sbb insl test or data16 sbbl retq (bad) rorb imul repnz stos jo (bad) cmpsl test or rcrl (bad) retq mov mov scas test rex.WRXB (bad) rex.RX gs xor in imul hlt xchg out out cmc cmp or je push mov adc repnz (bad) sub test movabs cmp (bad) insb mov jrcxz ss popq shlb test xor mov or pop movsb lock mov jbe jl push sahf jno and test rex mov out mov (bad) rex.WRX mov shlb rex.RXB sbb popq jrcxz cwtl push jnp (bad) pop enterq jle pop (bad) xchg cmpsb and callq mov sub cmpsl cmc or jle movabs sete pushq test jne fxch mov (bad) hlt cmp or ds outsb (bad) xchg loop or loope movsb and (bad) loop (bad) retq loopne retq sub rex.XB icebp jl jmpq movabs (bad) add pushq or callq rex.XB int3 gs and roll js lea imul rex.WX xchg xchg movabs xlat nop sub sbb cmpsb jmp (bad) cli mov cs (bad) cwtl sbb (bad) (bad) iret out (bad) adc pop cmp sub (bad) cwtl cmp adcl shll rex.WRX and (bad) push xor movabs fdivrs (bad) ja loope decb rex.RB sbb (bad) xor jns xchg and cs movabs rex.XB repnz (bad) or add in rex.WX es (bad) xor (bad) lret bndldx sahf add in clc loop shlb test (bad) add adc rex.XB jae rex.WRX and in cmpsl movsb rex.RX gs sub fwait or cs enterq xor (bad) repnz insb ja lods or test sbb rorl rorb lock (bad) xchg lea xor mov xlat cmpsl jbe in out add add retq rex.WRX (bad) movsb xchg (bad) jle lods movsl loop in xor rex.WXB rex.XB jmpq sbb cmpsb rex.WRB stos outsl rex.WB fldcw sbb sbb lret mov (bad) xlat iret shl rex.XB sahf fnstsw out adc lock test xor cmc rex.R cmp (bad) sbb out loope (bad) cmp add rex.WRXB (bad) rorl pop out lret cmc and icebp mov (bad) mov xchg shr ss fnstcw test iret xor jno or mov stos add jmp (bad) and (bad) xchg cmc fidiv outsl or div stos sbb xor adc popfq jge rex.WRB xor pushq pop (bad) iret rcrl xchg sbb lret in (bad) lock jnp pop clc or ds or (bad) jg add in pushq cmp xor jno mov and pop movabs repnz lock cmc jrcxz rex.WRXB callq xchg imul repz shr pushfq icebp or pop shlb xlat xchg adc imul or decl rex.WRXB adc mov sub (bad) sbb pop lret mov sbb cmpsb in rex.WRX repnz mov sbb mov (bad) popfq (bad) xchg movabs adc pop xor clc (bad) (bad) in push jmp mov jrcxz or clc cwtl cmpsl cld lock jmp mul sub imulb jrcxz (bad) fs (bad) sbb sahf xor (bad) (bad) in push (bad) repz cmovno xor scas movabs es (bad) (bad) shrl pop clc pushq popq hlt or xor in cmp insb callq mov add mov jae or hlt (bad) addr32 stos or jg out sbb js xchg movabs out movsl outsb stos jmpq insb stos or sub js data16 jp addr32 shlb fiaddl out cs callq (bad) cmc (bad) cltd lock fs leaveq sub (bad) cmpsb (bad) sub pop pop int rex mov xor loope sub add pop xor fisub leaveq enterq cmp movsl rex.XB rex.W fimull mov xchg (bad) xorl callq pop in mull xchg int and fdivr js (bad) in sub adc sub int sub jle push jg adc xor sub mov cmp (bad) outsb test (bad) (bad) cltd fstl fwait xor pop lock pushfq adc out xchg and sub in cmp cmp out (bad) (bad) (bad) mov sbb cmpsb rex.W (bad) out and rex.RX stc sahf nop callq jge push (bad) gs lock out cmp fsubl mov stos and callq test xchg rex.R and jrcxz or lret jo pop js jne in (bad) (bad) out icebp (bad) cmp pop (bad) rex.X pushq xor sarl (bad) out lods (bad) jle repz cmpsl (bad) pop fs (bad) (bad) (bad) sub out sbb mov rorb add int and rex.WRB rex.WXB retq imul lods sbb ficomp in lock jns rex.X lods adc fcoms or test sub cmpsb lods test callq mov addr32 (bad) pop xchg rex.RX sbb pushfq (bad) (bad) hlt cmp popfq sub and leaveq mov cmp sbb mov (bad) mov test (bad) shlb xchg cli insl mov in test andl or cmp sbb or push cld leaveq cmp callq hlt add stos sub add lret sbb clc mov xor mov (bad) icebp xorl (bad) fcomps jnp xor adc or stc mov test mov (bad) rex.WXB or f2xm1 rex.XB out int3 in cltd movabs mov (bad) lods mov int3 (bad) sarb fs lods stc sub rex.WR test int (bad) lret or sub lret sbb mov shlb rex.WX outsl cmp and int sbbb out (bad) scas (bad) fild push fcmovnu pushfq jg or (bad) addr32 mov or mov mov (bad) movsb fmuls or decb (bad) jle je test xchg xchg lret cmp (bad) in jo or loope lods xlat fcmove xchg (bad) (bad) cmp sbb rex.WRB rex.WR or (bad) std (bad) (bad) adc xlat js rex.W xor sbb repnz rex.WR lock rcrb mov pop jb pop fsubs xor add (bad) cmc or (bad) jnp xchg adc jge rex.WX rex.WB shr mov mov push rex.R rex.XB or rex.WRXB jrcxz mov data16 and enterq xchg mov faddp (bad) callq mov enterq in mov rex sbb push (bad) push rex.R and sahf (bad) lock sbb movsl jmpq (bad) fcmovnb mov mov xor mov sub xchg test push (bad) retq shll (bad) loope sbb retq ss icebp pushq mov scas lret mov jge mov sub mov cmp sbbl (bad) scas cltd (bad) xor (bad) pushfq mov sti movabs xor cmc icebp gs add in mov out (bad) adc in andl rex.WRX movabs add test icebp insb (bad) sbb cmpsl icebp cmpsl push sub rex.R iret (bad) pop movb lahf sub mov loop xor (bad) sub mov mov andl movsb xlat jne xchg insb pushq sbb movslq mov cli (bad) push sbb and gs (bad) je cmpsl int xor in subb push pushq icebp rex jmp lods (bad) xor (bad) mov sbb (bad) incb lahf addr32 (bad) lods in movsl mov mov (bad) push nop movabs rex.WR sub movabs (bad) and jrcxz sub in icebp pop mov and rex icebp lret xor and mov (bad) test xor (bad) jno pushq cld ljmp sub add pop add jg mov jnp jbe jrcxz mov loopne and outsb (bad) (bad) in in mov pop (bad) lahf (bad) sub shrl jge push and add stos push (bad) ja fwait xchg add rex or test vcvtps2dq (bad) or lock mov jno cmpsl test icebp rex.RB rex.B stos mov loop and sbb mov clc xchg orb hlt js out sub mov xchg mov mov and jrcxz xor sub mov xor fisttpll out in es mov clc or and adc cwtl mov movabs mov mov jns rex.RXB mulb movabs imul mov xor and retq xchg xor and (bad) callq in insl (bad) repz cmp mulb int rex.WRB fstpl fwait hlt jnp mov lahf mov (bad) icebp (bad) jno sti int and (bad) xchg adc sbb mov sbb (bad) ja movabs shlb sbb or sbb (bad) jp std sub in cmovns xlat xchg (bad) in stos repnz (bad) xor jo sbb sub fnstsw pushfq repz pushq (bad) (bad) pop push (bad) data16 jrcxz xchg xchg repz or out and cmp (bad) (bad) outsl (bad) cmp and xor ss movsl jns lea rex.W es movsb or rex.W (bad) hlt callq (bad) psrlq mov in (bad) je (bad) rol lods rex.WXB cmp (bad) mov rcl jbe mov pop loope and (bad) xchg inc rex.W cmp test xor (bad) sbb jae,pn (bad) sub stos test jb add xchg cmp mov jae or (bad) movabs loop fldt (bad) leaveq icebp insb cmp push jae (bad) lret movsb (bad) sti icebp push mov roll mov rex.RB pop rex.RX mov rex.WR xor add icebp es and movabs cmp cmp rex.WXB sbb sbb push (bad) test cmp outsb rex.WRX (bad) pushq and jg xchg in (bad) push fcoml lods pop cmp (bad) (bad) xor stos hlt mov iret data16 mov out iret movsb (bad) mov (bad) mov (bad) (bad) in mov or mov sub (bad) rex.WRX mov (bad) rex.WXB mov rex.RB cmp (bad) mov xchg (bad) sbb xor cmpsb mov callq cmp rex.WXB rex.WRXB loopne or loope add push add and rex.X mulb out and fcomp sbb movabs (bad) lock jb (bad) ficompl xor add rex.W movsl xor rex repz imul fbld leaveq mov jrcxz jno xchg (bad) lods icebp rex.WB xchg (bad) loop insl sbb adc (bad) cltd (bad) jnp sub stc or cld jns xchg rclb jmpq data16 fadd xchg in movntq callq adc xchg and or lock movabs mov (bad) or (bad) xor jbe stc test cmc fldt nop movslq addr32 rex.XB (bad) imul push movabs cmpb sub xlat (bad) mov loope xchg xchg icebp jmpq (bad) (bad) pushq test fwait cmp outsb xchg (bad) jmpq movsl icebp pushq push rex.WRB movabs icebp (bad) imul xor test int mov jmp (bad) insb jle push shlb rorb sbb sysret mov xor (bad) push or movsl callq lock jle in stos or xor callq in cmp psrlq sbb push jrcxz retq (bad) scas bt mov sbb out rex.RX (bad) jbe cmpsb retq mov cmc cmpsl out rex.RXB jle cltd loope movsl int (bad) cli out lret pushfq pop rep hlt push (bad) or icebp (bad) lahf adc jmp movsb lret iret stc test mov pop cmc sub jne retq (bad) (bad) movsl movabs jp and fs mov hlt mov rex.W ds xchg fs sub push fs mov sbb mov stos imul add gs (bad) jo (bad) sub jp sub rex.RXB jmp xchg adc addr32 lock fs fiadd fiadd cltd movabs mov fucomip hlt out (bad) jge sub iret jmpq xor mov (bad) (bad) lods stos (bad) imul push rcrb shrl push icebp fstpl loopne test jg mov and (bad) jmp jae jle fwait cmp or cmp rex.X (bad) hlt sti hlt or ja jo jne mov scas addr32 (bad) mov in cmc in loope clc xchg movabs (bad) (bad) pushq and rex.R jo jbe in hlt icebp pop xor cmc sub loope (bad) sub cmpsb adc rex.B rex.WR or addr32 add inc sbb cmp adc xchg cmp mov int xchg test insl movslq push sbb pushfq shrb jle lret xchg sub (bad) or leaveq xchg jmp shlb xor lahf fs in jmpq stc jge (bad) sarl rex.WRXB pop cmpsl (bad) mov (bad) and jrcxz xchg jno cmp (bad) in test mov mov or (bad) out (bad) jmpq callq mov callq (bad) and in pop mov (bad) cs sub repnz es imul pop stos lods pushfq pshufw fsubrp outsb pop mov rex.B stos frstor jg movabs sub mov shrb and movabs (bad) (bad) xor and movabs rol xlat mov or push fs scas rex.WXB add movslq (bad) jae mov lods test rex.X repnz (bad) mov add (bad) int3 jmp shrb jrcxz pop loop mov cmp push sub jns imul leaveq fstl pop rex.RX xchg in fdivr addr32 mov incl (bad) or mov adc rex.WX (bad) (bad) pop clc xor add sub push callq and fildll shlb insb cmp pushq mov (bad) (bad) shrl (bad) clc sub mov cmp (bad) (bad) addr32 insb sbb (bad) sub xchg pop (bad) jno (bad) sbb lock sub xchg add movabs or cmp (bad) and (bad) cmpsl iret rex.WX enterq xchg sub pop cs (bad) rex.XB movabs (bad) or jle mov xor cltd pushfq lock sahf cwtl cmp clc (bad) (bad) xchg mov fnstcw out mov rclb ja ficomp xchg and pushq fsubrp and mov push rex.WRXB fcmovb (bad) in xchg push sbb movabs ss enterq cs movabs (bad) (bad) (bad) je (bad) leaveq (bad) or xlat test and lods sub shlb fsubrs movabs sahf mov stos (bad) (bad) jns xor lock pop gs or movsl jg cmc callq outsb stc pop in loopne rex.WB (bad) (bad) jne addr32 icebp lock sahf (bad) callq mov pushq rex ds sbb cmpsl xor add cs adc (bad) movabs mov push test jp or ds xchg cmpsb xor hlt sbb pop sbb mov (bad) stos out mov callq xchg loop pushq (bad) in cld in shll (bad) push mov (bad) lret ds movabs (bad) rolb mov jbe (bad) (bad) imul mov fmulp test xchg jrcxz fwait xchg xlat mov push (bad) cli out adc in lods in or movabs (bad) movslq adc iret sub mov stos (bad) rorb cmp mov pop (bad) mov mov mov movabs (bad) fist jb sbb fsubp (bad) (bad) in mov (bad) rex.WRXB movabs loop div (bad) imul pop (bad) fs fbstp sahf or (bad) clc hlt movabs jmp sub retq or lock out hlt test adc mov mov cmpb outsl (bad) fimull lret (bad) stos (bad) pushq (bad) in or pop or sbbl loope (bad) (bad) lock and xor ss and rex.RB xchg iret push rex.WXB gs fdivrs xor mov or lret mov cmpsl je mov divl (bad) (bad) test cmp or mov xor (bad) xchg xor xlat (bad) out pop pushq push out movabs movabs rex.WRX (bad) cmc movabs jb rex.W fdivrs xchg in (bad) cmp sbb movsl push retq and jrcxz jns movabs mov and xor (bad) pop mov enterq cltd cmc jnp out movabs mov mov mov outsl ja (bad) lret movabs and in mov cmp lret mov jae fwait sbb in mov sub mov cmp repz test in vmovd adc in sub mull sahf (bad) mov jnp (bad) femms clc and loope mull mov xor rex.RX clc or jp (bad) ds enterq (bad) mov in sub add cmp movsb pop push bnd xor retq cmp push repz xor hlt movabs fs xchg jbe repz es mov retq xchg mov (bad) mov jne jne rex.RB add jge fs sub or push add xchg adc in lods sbb repnz xor jmp xor and repnz and rex.WRX addr32 (bad) lret lods (bad) test add cs (bad) (bad) in fnstsw push out (bad) stc fisttp test fwait rex.WRXB (bad) out mov iret cmp add rex.WRX test (bad) cli or or in out jmp jns mov xchg cs (bad) fisubr repnz or cmp mov fsubrl fisubr test (bad) or adc xchg pushfq or push (bad) hlt test lret sub cli rex.B (bad) or adcl mov push sub es fstpt jge imul jmpq lods repnz movsb (bad) sbb movabs cmc es stos enterq callq push lods retq cltd out adc mov in cld (bad) cmc callq (bad) stos (bad) mov movsb xlat mov sbb cmp xor push jne or rex.R add (bad) popq sahf sbb xchg loope loope js (bad) sbb callq mov (bad) cmc adcl cmp hlt adc cmp rex.WRX or (bad) enterq (bad) retq sbb rex.W xchg mov (bad) decl sub (bad) in fnstcw int3 clc sub mov (bad) movabs push out scas loopne pushq cmpsl mov loopne or movsb mov outsl stos rex.WRB out sbb (bad) fbstp (bad) mov fsubrp mov and loope add xlat sbb stos sbb mov rex.WRB pop fcoms lods movabs xchg (bad) imul sbb std faddl and push rex.WRX in fildll xchg sti js add stos ja adc imul cmc jrcxz xor repz mov roll jbe add leaveq mov (bad) mov mov sbb ds adc or or rex.WRX out stos (bad) mov or xchg cs jnp icebp push mov (bad) (bad) and je mov mov movabs (bad) mov lea retq cmp clc mov xor mov adc mov scas movslq (bad) or test mov mov fdiv mov (bad) in xchg sti mov (bad) pop push and sbb mov (bad) (bad) cmpsl (bad) or test jmp add data16 xchg repz movabs rex.X push and hlt movabs ds in sub outsb mov mov and (bad) rcrb loop mov (bad) pushfq xchg xlat imul lods fnstsw xchg or xchg cld std movabs cmpsl jae sbb callq xchg cmp callq and pop cwtl ds xchg callq push rex.WRXB rex.WR pushq jrcxz loopne nop adc callq test movabs adc adc addr32 (bad) out enterq shlb (bad) cltd repz mov xlat out callq fbld (bad) in lods fisttpll jae jl andl (bad) (bad) lock or (bad) sti in and (bad) (bad) js (bad) in std or (bad) callq xchg loopne imul sbb movabs je repnz jno jmp iret popfq cmp js and jrcxz (bad) push xor or pop stos xchg (bad) pop sub (bad) cwtl sarb loope fildll sbb jne (bad) rex.WRX cmpsl (bad) std (bad) pop std rex.X leaveq (bad) (bad) (bad) and sub (bad) sub sub (bad) imul movabs (bad) callq scas cs mov mov mov pop (bad) cmpsb mov xor lret ja (bad) (bad) movsl shrb jae imull cmp and mov imul fdivs cs es stos test sbb (bad) pop out js vphaddwq jne jo xchg or lock sbb (bad) jo shlb sub movabs (bad) cs xchg or (bad) data16 adc lods in pop andb pop (bad) sti movabs xchg mov sub cmpsb pushq mov inc pop loope mov out xchg sub pop or out out rex.WX sbb adc mov outsb mov (bad) retq movsl in sbb jne push in mov (bad) adc pop rex.R (bad) (bad) out fs cmp retq (bad) xor add rex.X repnz scas add lret insb jne adc xchg insl (bad) or jb sub movslq mov loop sahf and push jg or xchg rex.WX (bad) fs cld movabs enterq sarb (bad) xchg and idivb cmp fadd xchg icebp mov loope out or movabs nop jno cli sahf push jmp jne xchg movslq push in fs (bad) frstor or jo or fs out pop adc rcrb adc sarl in xchg clc xchg rex.WRXB rex.WRXB cmp jrcxz push lcall rex.X int cli (bad) (bad) fldt out add testl roll rex.WRXB hlt xor movsb mov pop (bad) shll mov repnz callq or mov mov adc fildl sbb xchg push mov push mov enterq mov shlb (bad) maskmovq testl pushfq leaveq movslq mov and (bad) cwtl (bad) lret or rex.RB data16 lods push in loope cmc mov (bad) cwtl or (bad) adc out movslq and rex.R mulb mov mov callq fadd mov push or in lods cwtl sbb rcll (bad) imul jo pushq xchg cld out or xlat cmpsb sbb cwtl mov enterq pop adc sub out (bad) cltd callq mov shlb cmp fidivr addb pop test rex.B mov mov out jmpq jnp sub scas xlat enterq pop lods sbb add mov insb clc subb prefetch or push (bad) rex.WRXB (bad) push leaveq fbld mov adc (bad) or cmp (bad) stc fs jae jmpq adc pushfq and sbb rex.XB lock shl test nop fadds movabs (bad) mov mov out jo rex iret out repz out xchg sub jne,pt (bad) (bad) and sahf (bad) bnd jg (bad) (bad) (bad) movabs jo iret std pushq add sub cmp test rorb xchg sub rex.WXB andb or add sbb push sub fs and (bad) pop (bad) mov (bad) fwait xor rex mov or sbb callq clc (bad) mov lock xchg movslq fistp (bad) clc rex.WB lock push mov data16 (bad) outsb divl rcrb iret es mov test adc cld nop pushq jbe cwtl stos jo in data16 in xchg rol fidiv (bad) lock sbb fsubs pop jno lods fildll fadds lods lock movabs test rcl cmc push fistp jmpq nop jo fs or sbb mov add pop nop movabs add adc int3 sbbl repz hlt mov (bad) (bad) (bad) mov rex.XB stos stos cltd (bad) cmpsl callq sahf (bad) cmc ficomp repz jo rclb es (bad) or or jmp rex.WRX stos loop div or push mov (bad) hlt in sbb add push mov in enterq movabs lock rolb or mov sbbb cli iret add (bad) xor cli (bad) and int xchg mov ds xor addr32 movabs movabs lock (bad) repz or push mov movsb leaveq pop adc test in insb sub outsl shlb sahf movabs sbb outsb xchg or ss lods movabs pushq mov insl rex xchg (bad) lock fsubp je mov sub movsb (bad) sti leaveq rex xchg pushq jne mov leaveq shrb (bad) jmpq pop mov loopne (bad) int3 add out (bad) pushq rex.WRB test cmp mov movabs push xlat mov rex lock mov test repnz xlat insl cld repz subb mov xchg lods cmp cmpsb movabs mov mov add adc or cmp out in sti sbb xchg (bad) or xchg xchg xor lret (bad) sbb mov icebp rorl cs and mov nop movabs retq imul sbb (bad) imul out mov jle rcrl nop test mov (bad) ss mov data16 push fimull jo movsb add (bad) add cmp cwtl adc (bad) sbb stos mov fs (bad) mov repz lock hlt xor rclb rcr out fcmovnu lock or sub jmp andl and add out fldt lock shrb stos mov (bad) pop icebp (bad) maxps (bad) ficoml repz stc addr32 hlt (bad) out not movabs adc adc add (bad) stos mov in jmp sbb (bad) mov iret (bad) jne lods fxch repz adcb lock cmp shrb pop cmp pop movsb test adc scas (bad) test jne stc push rex.XB jmp push jns imul push fsubrs rex.WRX xor (bad) jbe cltd jmp mov std fstl (bad) nop iret or pop pushq (bad) cli enterq (bad) fs movabs retq rorb adc in fistpll hlt and pop push iret push (bad) fildll rex.R movabs test int3 (bad) mov hlt push int lock fs cmp repnz hlt add sbb outsb xor mov mov es lock cwtl mov addr32 mov nop rolb (bad) fadds nop (bad) fadds push sbb lcall add insl jrcxz add shlb addr32 repz mov (bad) sbb out rex.WRB jmp mov (bad) (bad) and movabs xchg xchg (bad) (bad) in or pushq (bad) movsl or fsubs out mov mov fsubrl sbb cld test std movabs rolb insb movslq data16 pop enterq push rclb sbb (bad) adc iret cmp (bad) movabs (bad) lock sti adc fimul jrcxz sbb cld hlt (bad) cltd es mov sbb add mul out xchg lods callq movabs stc callq jmp repz xor sti jl cmpsb lahf mull stc (bad) rex.WRXB push lods loope xchg mov rex.B (bad) and xor or in push (bad) imul jo xchg (bad) rex xchg mov add fwait rcrb cld mov mov movabs (bad) rorb (bad) cli mov xchg and (bad) push in in sar insl callq testb xor rex.WB mov pushq xor push test retq (bad) int3 mov nop clc rex.R rex.X (bad) (bad) (bad) (bad) ss cld xchg xchg rex.WRXB pushq lock mov jmp movslq cmp sub cmp (bad) jnp cld jo fucomp hlt in (bad) xor cmp gs data16 out sarl jbe cltd (bad) mov cld cmp lock adc lock adc or (bad) jle (bad) pop clc xchg and rex.RB rex.WRXB callq test shl jmp (bad) mov (bad) incq or movabs xchg (bad) pop or in mov (bad) pop or xor cmc movsl (bad) add rex.WXB (bad) pop add xchg mul adc rex.RXB mov retq (bad) cmc jne and rorb jbe cltd (bad) jle jae (bad) (bad) cli mov mov int3 (bad) (bad) (bad) std lahf sub imul or xor rex.W adc mov rex.W repz jmpq pushq sbb pop rex.RB sbb jae sahf adc sbb adc pushfq rex.WX push out (bad) movabs (bad) jmpq cmc jp shll and push (bad) sub jnp push and andl callq rex out scas (bad) mov and lahf es mov rex.WXB rex.XB mov rex.X movsb jmp xchg mov rex.RB pop pop in (bad) adc rex.WRB sarl fnsave movabs enterq (bad) (bad) cmpsb mov jno rex.WXB loopne mov (bad) xor lods (bad) js adc xchg rex.WR ds nop add fidivr (bad) sbb jg fucomp outsl (bad) repnz rex.XB (bad) (bad) sti loopne jb rex.WX (bad) (bad) (bad) ficompl and (bad) xor sahf and jb xchg sub (bad) fadds add add imul or (bad) mov add lock jns rex.X addr32 scas negb cmp rex.WR xlat jb cmp xorl sbb push cmp leaveq jmpq jmpq jmpq or xchg add ror jns sub xchg cld out add pushq jge enterq hlt sbb rolb push rex.WRX lea callq (bad) (bad) jns cld fwait (bad) (bad) mov xchg xor mov push xchg push in push out movsb (bad) (bad) (bad) xchg (bad) mov in sub scas (bad) (bad) (bad) sti adc mov (bad) std cld (bad) jmpq decl (bad) ja cmp mov pop (bad) sub rex.X rex.WRXB fucomip sub rex.RX fist rex.WRXB (bad) (bad) jmpq movabs rex.XB sub ss rex.RXB adc xor gs lock or rex.R rex.WRXB clc sbb xchg rex.WRXB loopne pop leaveq out rex.WRX mov fs (bad) repz setae shl cmp mov bt cmpb jmpq jb retq lea not sets pop jmpq js xchg (bad) je fwait lret jae stos add imul (bad) mov pop xchg pop pop ds out loope loopne sti in mov fdivr (bad) (bad) (bad) pop (bad) sahf jge leaveq cld or sbb stos (bad) sbb jmp rcr cmpl ss out mov (bad) adc or (bad) mov push or pushfq fdivr imul (bad) (bad) (bad) std repnz out repnz add gs gs or mov stc jle leaveq fs addr32 outsl clc mov movabs xor imul sub push xchg adcl mov mov test hlt inc mov stc bt bt test and bt clc jmpq jae stc sub jmpq mov mov rex.XB pop xchg fcomps (bad) rex.RX movabs or jl cmpsl stc jmp test leaveq clc movabs (bad) sahf mov and stc sahf mov decl sbb mov movabs cmpb pop rex.WRB lret jo js mov shr xchg jno loopne rex.WRXB mov test xchg adc jmpq jmpq out test pop mov and movsl rex fs (bad) adc shrl (bad) movabs xchg adc div (bad) mov rex.WRXB es xchg (bad) rex.RX stos sub mov ss lods push loope (bad) (bad) (bad) sti mov movsb nop (bad) (bad) xchg mov stc rcrl jne (bad) (bad) (bad) stos fnop ss fsubrs mov push (bad) mov mov int3 and cmp jnp clc pop pushfq fdivl add add imul rex.R fbstp sbb lret adc sub or jns lods push or loopne out lods xchg pop jmp repz rex.WRB je sahf stc jmp and movabs jp mov (bad) or mov fldt mov pushq adc xor pushfq rex.X gs btc mov fcmovnu imul cmc fwait push rex push lea rex repz scas xor add sbb mov xchg in mov rex.XB hlt (bad) jg jp (bad) (bad) std fbstp (bad) jo out movabs jns sbb jge std mov mov sti nop sahf ds out cli lods adc rex.RX (bad) (bad) inc (bad) or (bad) cmc and push movslq sub add pop (bad) pushq in fnstcw sbb adc out in js stc cmp out mov (bad) sbb jns xlat (bad) mov stos (bad) mov (bad) rex.WRXB add push or cmpsl adc testb xchg rex.WX (bad) testb add adc rex.WB jp sub test ficoml int3 repnz mov cmp imul push or (bad) xor xlat rclb mov std pop retq (bad) fnstsw rex.RXB xchg sti mov stos adc in jge data16 rcr xchg add rex.RX (bad) loopne retq mov addr32 gs rex.WXB push add pop adc mov fisttpll int3 bnd mov imul push stc rex.WRX rex.RX jle cld adc cmc in (bad) (bad) decb add cmpsl mov jne lahf push insb push or callq mov callq push sti scas xchg scas push rex or (bad) cmp mov adc js push loope out mov movslq (bad) jbe mov mov add in mul out fdivrl frstor andl (bad) sub fwait (bad) ss xchg insl or rex.RXB and (bad) mov clc mov xchg push cmpsb jle (bad) jmpq and mov sbb mov jbe mov cmp add insb or cmovp int mov mov (bad) mov sbbl insb (bad) cmpb in (bad) mulb je scas xor rex.W cqto stos rex.X retq mov push adc rex.B rcl sar int out mov (bad) adcb pop or (bad) (bad) imul ficomp shrb cli jl (bad) (bad) std sbb add add or cli jne (bad) pop sarb pushq cwtl sahf (bad) sub int3 cmpsl xchg scas xchg jae rolb pop rex.XB mov lods (bad) jnp out mov add pushq add (bad) lock bt repnz jmpq callq shr add rol mov cmc cmpb jmpq sete mov stos jno not setl setns mov jmpq adc jmpq stc cmc bt cmpb jmpq pushq jmpq fwait rex.X rex.WRXB out fsubl std push je rex.WR rex.RXB pushq cmpsb sbb mov rex.WR addl jne sub out jnp in (bad) (bad) xchg xor (bad) xchg adc rcrl fisubrl cmp mov (bad) cmp fidivrl cmp mov (bad) mov (bad) cmp (bad) sti stc and (bad) (bad) (bad) in in cmp and (bad) repnz std sub retq pushq (bad) add add pop xor out (bad) mov in and (bad) mulb pop pop (bad) or (bad) adc movsb xchg mov xchg sbb fist cmp rex.WX cmpsb rorb cmp loop rex.W add mov lods in add rex.WRB stc jmpq mov and cmp (bad) or scas sbb jg movabs rex.WR and push mov and lea loope push out cmp jmpq out and pushfq imul movsb (bad) (bad) (bad) jb pop jg (bad) outsl (bad) add pop lahf rex.B mov push insb (bad) sti xchg leaveq sbb out movslq (bad) (bad) (bad) sti xchg jnp mov jg (bad) rcrb (bad) (bad) (bad) jb jb rex.RXB rex.WXB or add (bad) in and cmp xchg imul pop xor adc (bad) (bad) (bad) lcall loope callq retq sbb fsub stos fnsave insl pop gs movabs mov jle (bad) xor or leaveq outsb ja pop out (bad) clc (bad) mov fwait mov repnz int mov scas (bad) mov (bad) imul jle callq jmpq callq test shl mov rol add cmc mov clc stc stc cmpb jmpq callq cmc stc or jmpq loope or or pop mov jbe (bad) rex.WXB add xchg (bad) sub push sti jrcxz cmc mov in fdiv out outsb in add test (bad) leaveq (bad) pop rex.XB (bad) jno insb rex.WRXB cmpsl cmpl mov xchg ss xorl (bad) (bad) (bad) decb mov (bad) mov (bad) jns (bad) (bad) std movsl sub sahf cmp add add sbb (bad) rorb movabs xor test mov shr rex rex.WXB (bad) (bad) sbb insb (bad) outsl (bad) ds out mov xchg cmpsb cmp mov bt bt cmp xor jmpq jmpq sub movzbl mov lea jmpq leaveq lea retq jrcxz xchg xchg mov sub jmpq movabs cltd add cld test push xchg (bad) movslq and jle pop hlt pushfq movabs je mov jo (bad) pushq cmpl ja (bad) in or (bad) or add mov stos mov mov ds or je iret mov sarb (bad) (bad) (bad) sti jbe outsb jo (bad) (bad) (bad) (bad) (bad) sbb stc jmp cltd jb lea faddl idiv (bad) (bad) (bad) jmpq sbb adc xor (bad) (bad) loope (bad) xchg rex.W xchg add pop int3 rex.B mov js shll push (bad) adc punpckhbw fadd mov sub pop rex.R rex.X mov pop (bad) mov adc rcll rex (bad) mov stos (bad) mov mov fist (bad) mov sbb sbb xchg rex.WR int in (bad) test jg subl clc rex.X fs jae jmp es movsb (bad) out movslq mov movabs mov push lret rex.RXB outsb (bad) js pushfq insl movslq movabs pushfq add sub (bad) test pushq sub add add rex.XB mov int movabs (bad) (bad) or (bad) je movslq jae and cmp mov and rcrb cli cmpsb test imul pop jno xchg mov mov ficom add bt cmp clc xor jmpq rex.WRX rex.B xor imul jmp or fwait add pushfq sub mov cmp in stc sti jrcxz rex.WB cmpsb (bad) cmp callq lock xchg sub add mov cmp fist and callq neg sbb (bad) (bad) sti pushq (bad) (bad) (bad) stc in pushq (bad) (bad) cld xlat fstpt nop mov rex.WR (bad) xchg rclb iret hlt xchg add fisub jnp pushfq and ficoml xchg cli mov enterq add or sbb push and (bad) scas iret mov rorl xor lea and (bad) add (bad) repz sbb and lods lea jg and xchg sub out (bad) jmpq jmpq jmpq add jmpq js pop rex.WXB stos (bad) shlb adc (bad) lret (bad) rex.X adc xchg out sahf sbb hlt push out add flds cmc fwait lea sub jo subl push rex.WRXB repnz or pop test (bad) imul sahf add pushq rex.RXB rex.R je mov xchg (bad) add mov adc cmp movabs (bad) (bad) (bad) (bad) sti je and (bad) (bad) (bad) (bad) pop retq sub (bad) lods mov (bad) (bad) fbstp pop (bad) mov sbb je and rex.R movabs test sarb xchg mov or loope loopne mov gs icebp rex.WRXB sarl (bad) imul xchg mov mov cmp jmpq jmpq jne bt stc movb bt test jmpq jl jns or outsl addr32 mov (bad) mov insb (bad) retq in adc fnstcw cmp pop rex.WR (bad) idivb (bad) andl xchg lock ficom sub loopne (bad) cmp test and add lea rex.WR subb retq mov cmpsb push (bad) xor sub mov (bad) int (bad) std and pop or lret (bad) (bad) (bad) sti out rcrl sub fprem pushq test addr32 jb sub (bad) jg pushfq add add pop divb sub and movabs rex.WRX (bad) sbb push stc sarb sub sub jbe iret retq imul (bad) jp mov mov sub jl adc (bad) std (bad) incl push rex.B rex.WRXB rex.WX (bad) pop nop sbb cmp test xchg rex.WXB data16 jp sahf mov enterq mov sbb sbb add jnp mov cmp add jp sbb movabs sarl ja or movsb xchg cld lret (bad) rex.WXB xor (bad) or js insl rex.WRB popfq cmp (bad) (bad) (bad) (bad) sti pushq (bad) (bad) (bad) (bad) push cli and (bad) (bad) imul mulb add (bad) (bad) callq add push and mov xchg (bad) pop stos mov and lods mov sbb test mov pop divl and imul mov (bad) mov xchg cs rex.WX (bad) insb int3 jne test rcr mov clc cmc add test clc stc movzwl bt btc mov stc jmpq callq bt cmc cmp jmpq movsb sub mov rorl mov pop insb or add retq mov cld movabs (bad) fldcw movsl fadds pop xchg push push mov ficom push cmp (bad) insb addr32 and xlat in (bad) (bad) lahf rex.WXB in (bad) or adc and clc xchg xchg sahf or sbb (bad) jbe rex.RB stos mov movabs push jrcxz (bad) (bad) (bad) (bad) (bad) (bad) ds adc movabs rex.RX imulb addr32 cltd faddp pop (bad) (bad) sbb test retq cmp adc out add cmp (bad) sbb add add jns xorl movabs (bad) callq xor rorb sbb mov adc enterq sbb rex.WRB xchg (bad) cmp (bad) add mov mov add enterq loopne rorb add rorb cmp mov cmc test jmpq outsl insb xor cs insb add mov int test cmp bswap movsbw movzbw lea not mov not pop jmpq jne cmc stc cmc cmp movb bt cmc test jmpq test xor jmpq cltd insl or (bad) push xor sub cmp (bad) out cli out sbb and sahf (bad) cmp movslq lret xor out sbb (bad) cs (bad) (bad) rclb push lods sarl xchg (bad) rex.R (bad) loope repz test mov in outsl (bad) sbb push movsb sahf (bad) movabs mov xor cwtl std xchg ja xor outsb out sub (bad) (bad) adc sub add stc imul adc retq mov stc (bad) xchg (bad) mov add add loop rex.X or rex.R movabs mov bswap (bad) (bad) mov adc adc or insb (bad) outsl (bad) fidivr fnclex jae idivb sub mov out decl addl push shll out or retq sub lea or bsf mov setge shr add or mov bt cmc xor cmp cmc cmp clc repnz jmpq jmpq callq ror sbb sub add shl bsf shl mov clc jmpq jne shr inc rol and sub cmc btc sar mov stc sar and add shr mov xor mov jmpq jne lea bt bsf mov bt bt jmpq pushq jmpq jmpq mov ror and adc mov jmpq je clc cmc cmc add bt cmp jmpq stos jmpq je jmpq (bad) sti imulb std add push (bad) adc rex.X and xchg (bad) movabs or mov adc movabs lahf mov rex.WX mov and outsb fucom lea fs int3 shll (bad) (bad) (bad) cld adc insl test xchg adcl sbb adc (bad) and (bad) xchg cmp (bad) add mov push mov rex.WXB (bad) (bad) (bad) out sub xchg lcall jge (bad) xchg (bad) fisttpll rex.WRB add pop outsl mov or roll add outsl sti std push cs jg (bad) pop cmp pop icebp loop (bad) add mov lahf iret sarb (bad) mov scas sub xchg add sub cli pushfq rex.XB sub xorps cli rex.WXB (bad) fwait (bad) rcl stc frstor mov sub push xor rex.XB fwait mov jrcxz movabs cli je sti sub and cmpsl push ss cwtl rex.XB (bad) stos xchg push cmp in adc xchg sbb (bad) fwait scas (bad) xchg leaveq std push std (bad) mov xor test movslq xor sub stc fldt (bad) (bad) sti mov int pushfq (bad) (bad) (bad) decb test lahf cmp rex.WRB test adc or lods mov outsb (bad) iret (bad) mov movslq push outsl nopl rex.XB fidivrl push cmp stc push je cmp and (bad) retq movabs ds scas lods push imul jb (bad) (bad) lock jg (bad) ss pushq add shrl xchg mov adc (bad) cli test stos scas rex.RB add sbb mov pop mov movslq out xor sbb push sub push xchg rex rex.WB or cltd (bad) fisubrl or pop mov (bad) sar (bad) mov (bad) std pop adc add jmp mov (bad) lock out test sub adc and adc jrcxz mov and add in iret scas sarl sub or rex push (bad) pushfq (bad) mov movabs push mov (bad) jnp popfq mov mov jmpq outsl push rex.WRXB mov sbb test (bad) (bad) jmpq popfq rex.WXB mov movsb es sbb sar (bad) clc (bad) rcrb and (bad) mov movsb cli jl iret jrcxz rex.X xor mov mov sbb out mov sbb cltd jb adc pop (bad) xlat callq insb in jae movabs (bad) rclb sub (bad) adc xchg mov fdivr sbb (bad) xor push repnz (bad) (bad) decl rex jle cmp lret stc sub add add imul push jge imul jl iret pop adc js or xchg callq or rex.RX xchg shr rex.XB rex.X xlat lret push add xchg sti and pop xchg std pop rex.XB mov mov jmpq cmc cmc sub clc repnz jmpq rcr adc add cwtl and add add pop stc (bad) add add add rex.RB add (bad) adc add add add add add add add add add add or add add and jmpq sub mov adc add or add add add (bad) add add add adc add mov add add add and add add add mov add add add adc add icebp (bad) add add add sub in (bad) xchg insl push jmp (bad) and cli cld mov rex.RX insb pop adc mul (bad) mov sub (bad) addl and (bad) cmp rex.WB (bad) (bad) (bad) loopne outsb pop sub add add and loope or (bad) loopne cmc js sbbl and (bad) (bad) jae add add push and rex.W rex.WRXB mov mov sub rcrl jle push add jns add clc pop icebp mov (bad) outsb push adc push xchg jo push rcrb movaps xchg scas push push rex.WRX add xor (bad) enterq push (bad) rex.W rex.RXB rex.WRX jnp mov movl bnd (bad) loope repz cmp movsl (bad) scas rex.W fs adc icebp adc mov js jle xor pushq sbb cmp (bad) jno (bad) fildll fistpll (bad) mov (bad) scas jmpq negb adc sbb sub adc hlt add lods pop cmc mov cltd lock adc (bad) rex.X rex.W cmc push out cltd (bad) jmpq stc (bad) jrcxz jp movabs mov rex.WRXB pushq sbb test (bad) cmp pop nop push sub jg adc test push sub pop leaveq pushq icebp (bad) test imul and (bad) xchg cmpsl add out add rex.W mov jge (bad) je xor stc addr32 (bad) imul mov sahf (bad) rex.WX lock push divl push lret je rex.WB cmp jl callq sahf cmc xor std push retq (bad) movabs rex.WB mov rcll outsb cmp mov loope jns jle xor lea rex.W rex.WXB pop out (bad) (bad) and mov pop loop rex.WRB movabs lahf int or or stos add push sbb sub xchg cld rex.RXB rex.WRB mov pop (bad) (bad) or mov sub (bad) jmp movsl lret mov movabs sub imul or rex.RXB xchg rex.WR pop xor rex.WRB xchg mov adc mov shll testl push and cld hlt mov fisttpll shrb jp rex.WXB (bad) int3 and rex.WRB rcr xchg sub cmpl or ja es jge rex.WRX in out (bad) rex.WXB movabs pop rex.X movsb mov or xchg jae rex.RXB enterq lods retq (bad) add sti jbe and xor insb xlat addr32 and movabs xor fsubr out mov hlt (bad) cld jno (bad) shrl push cltd sarl in rex.WRB repnz xchg cltd xchg std cmp (bad) jmpq xchg ja add rex.WRB rex.RX outsb lods movsl adc pop (bad) mov adc and mov ja rex.WRX sbb rex.RXB jl lret movabs int3 fidivrl jae test pop (bad) adc movabs in out pop out xchg rex.X imul push sbb roll sub adc xchg ffreep (bad) cmp pushq xchg adc xor sar ds data16 mov or mov rex.RX and rex.WB cmp sub cmpsb add xchg pop jno sub xchg xchg in insb icebp movabs icebp outsb in (bad) pop test cli (bad) int and mov mov loope sub prefetchw es mov jbe rex rex.WRX rex.WRXB push ds cmpsl pop fldenv imul (bad) sti out movabs cmp retq xchg loop in (bad) cmp gs add (bad) orb notb jmpq pop mov mov xchg sbb mov rex.WXB rex.WXB mov stos or adc mov xor imul rclb jb cmp fimull in icebp sahf (bad) sub jmp cmpsl or or (bad) fiadd sub jns int3 insb stos repz xor xchg mov fildl rex.X fisubrl xchg enterq rex.WRX data16 xchg in adc jo in (bad) push mov xchg movabs pop xchg jl and icebp clc (bad) out push (bad) (bad) (bad) push test jae rex.WXB push pop mov (bad) xchg test movslq test int3 data16 and or roll in xchg (bad) stc push jbe xchg stc add sub rex xchg cli xor xchg (bad) test shrb enterq sub xor pop lret rex.XB pop jo fistpll pop ds ds and rex add (bad) addb (bad) pop test pop fcmove mov pop (bad) out pop in lock and sarl (bad) fwait leaveq int3 jrcxz in rex.WRX xchg sbb pushfq fldt (bad) (bad) (bad) xchg in mov xchg movabs jo and rex.WB rex.WB rex.RXB mov xlat xchg fs jne (bad) jg lret pop jrcxz sub fcmovbe rex.WXB lock pop mov ja adc push je pop jg sub (bad) rex.WRX xchg or rolb adc add (bad) jb cmp in mov adc add (bad) lock mov fisubl mov mov repz push push and or movsl mov xchg sbb jbe xor sbb xchg enterq mov lret jmp scas (bad) neg popfq outsb (bad) mov cmovne sub movsb imul fstpt rex.WXB scas (bad) rex.WX lret mov outsl outsb jae (bad) xchg and jge cs in (bad) xchg (bad) or nop stc xchg mov rclb mov mov fmuls nop (bad) out (bad) fmull rex.XB (bad) pop mov (bad) rex.WRX xchg rex.XB mov mov xchg out scas push or sahf sub retq adc rex.R (bad) cmc sub roll (bad) int3 out mov add and jbe movsl (bad) cmp push in adc (bad) jbe (bad) int3 cmp rex.WX retq outsl cs test (bad) in fcompl (bad) movsl (bad) mov cmp (bad) test jns jbe iret insl repz jns mov (bad) pop jo in fisubr test rex.R icebp movabs repnz jnp jg mov sub js movabs xor (bad) test or (bad) mov mov out add fisttpll mov ror cli scas add mov lea or (bad) jnp mov rex.WXB xlat lcall in (bad) sbb test ss xor and pop rex.WXB insb leaveq outsb in jne test mov outsb (bad) cld mov mov lock stos gs fucom (bad) leaveq outsb rex.WRXB xchg mov push leaveq and sub jmp sbb mov (bad) loope loope add fcomps (bad) (bad) xor sahf mov out fldl and seto addr32 rex.XB add imul iret fisubr adc (bad) rex.WB cltd push rex.B pushfq adc lcall ja movabs (bad) sub in jne int3 mov xchg jp (bad) or pop mov movabs (bad) or addr32 fcoms sbbl and in rex.RXB rex.WXB rex.WRX mov ja cwtl adc out pop jbe rex.WRXB movabs (bad) add (bad) lea mov in imul lret jns loopne repnz test mov (bad) mov (bad) mov retq mov push jg rex.WRB sbb retq and and jge insl xchg mov add fcmovu scas xchg mov mov xlat pop add movabs test out out cmp xchg mov imul (bad) fisubl stos push sub fneni(8087 pushq xchg cmp pop rclb fcoms outsb test out adcl callq sbb ds (bad) cld rex.R repz rex.WX pop fcmovnbe mov fistl fisubl (bad) sbb int3 retq outsl xor rex (bad) rex.WX cs repz rex.WR movabs and mov sbb rcrb xor and clc negb test xchg rex.B mov outsb pop retq xchg fldenv add test mov adc rex.WR data16 mov cmpsb jp fucomp (bad) jp cmpsb sbb cmp rex.WRX pop movabs movabs int lahf cmp std fs test (bad) sub ficom (bad) add in adc sarb sbb movabs mov mov jno adcl sub xor in (bad) rex.RXB rex.WX jno test pushq shrb (bad) repnz push test sbb (bad) (bad) mov pop lea (bad) pop out rex.WX fwait xorb (bad) sbb add callq rex.WB adc rex.WRB iret adc xor imul jae jg jb clc mov pushq jge sarb fxch movslq movsl fnsave jmpq outsb stc enterq jno cmpsb stos shrb xchg ss xor xchg (bad) cmp mov jge (bad) sbb cmp sbbl cwtl (bad) or sti pop int3 pushfq adc mov add xchg (bad) shrb mov divb es (bad) and js mov (bad) in movslq icebp (bad) jge and sbb mov out add fidivr imul insb rex.RB cmp fstpt in mov rex.WR (bad) sbb rex.WX (bad) sbb rex.WB sub sbb xor lods cmp (bad) test (bad) rex.B iret jb adc rex.XB xchg iret rex.WB test in (bad) xor adc adc cmpsb js jg xchg in imul adc and sbb (bad) xchg cmp jb xchg adc fisttp rcll cmp pop (bad) repnz insb push loop movabs lods mov pop sbb rex cmpsl scas xor sbb lods sbb enterq adc jns (bad) (bad) pop add jle roll bsr insb test add or stos xor loop adc retq in jne imul push fstpl cwtl cmp adc adc adc adc add fdivrl add pushq movabs (bad) jmpq (bad) cmp test jo jno jo imull push (bad) mov sub sbbl (bad) movsb pop mov rex.RX jrcxz or (bad) popq fs scas insb mov subl mov out add mov (bad) movabs xchg rclb (bad) loop enterq or fprem popfq rex.RX sbb js movabs sub xor loop pop (bad) (bad) push adc out jg icebp test test fwait jge xchg (bad) sbb pop jmpq in cmp je rex.WXB (bad) out je xchg (bad) (bad) insl rex.B sbb stc fsts movabs (bad) cmp mov push rex.X divb xchg pushfq sbb (bad) rex.WRX (bad) lods xchg rex.R rex.WB push fs shl mov push or mov lea out sarb nop jbe jp (bad) jne cmpsl in jmp xchg sti sbb xchg or xlat fcomip pushfq mov cmc sub ja xchg retq fdivr addr32 add rex.WRXB stc movabs ss jp sbb sbb jp (bad) mov movabs movsb add add add jne cmp xor jmpq cmp mov (bad) test and incb movabs pop xchg push add push addr32 pop (bad) push or hlt lods sbb (bad) jno movabs cmpsl (bad) and movsl js adc add add (bad) loopne fs mov (bad) cmp xchg xchg test out jbe cmpsl fiadd ja mov xor retq int imul pushq repnz test xbeginq mov rex add (bad) push (bad) xchg (bad) (bad) (bad) sti test mov ds (bad) (bad) (bad) xchg mov add mov (bad) xor (bad) adcl add adc (bad) jno mov movabs pop js pop cmp adc movsb enterq mull sbb imulb test push rex.RB pushfq outsl mov fiadd test std push jmpq sub lea add ror mov mov add not mov jmpq jmpq push sti cltd (bad) mov movslq mov stc cmpl fstl (bad) sar push or movabs stos sahf shlb imul (bad) (bad) sbb imul jnp clc lea (bad) rex.WRB rex.RXB push movabs (bad) sti sub out jae (bad) (bad) (bad) (bad) xor outsb sub push subl jno (bad) mov sub xchg adc lods mov imul (bad) (bad) (bad) decl jg adc mov sti xor (bad) push xchg lret (bad) sub xchg loop rex.RXB cmp sbb in adc jmp mov fist add jmpq jne lea test sub rcr mov shr test jmpq jmpq jmpq jmpq mov jmpq jnp insb test push outsb (bad) fnsave or xchg mulb rex rex.RB stos pop (bad) sbb clc xchg leaveq testb xchg rex.W mov fisubl (bad) xchg rex.WX (bad) ds lret mov rex.R rex.RX xor jo rex.WR hlt and enterq clc out xor outsl and fisubrl mov loop rex.RB xlat loope jae (bad) mov fbstp pop (bad) rex.WRX pushfq rex.WR mov mov mov adc xor addr32 pop out jle mov cmp pop push xchg (bad) mov out rex.B movabs xchg icebp jbe pop pop lahf sbb test jmpq imul (bad) sbb insl sub rex.X sahf div sub fmul (bad) mov mov (bad) (bad) (bad) sti mov (bad) add (bad) (bad) (bad) js pushq mov cs xchg jrcxz insb push xchg fnop movslq sub adc xor mov rex.WR jge cltd stc scas test scas enterq jb fs (bad) (bad) (bad) (bad) clc sbb (bad) lret movsl mov testl mov repnz scas mov outsl or cltd xor negl hlt gs loope stc mov hlt test fisubr (bad) (bad) out (bad) addr32 jb mov loope pop sbb (bad) ds adc std pop out sbb rex cmpsl cld in cmpsb iret sarl xlat pop sti iret (bad) mov int pop rex.B rex.RX mov sub test movabs add in jmpq jmp adc (bad) lods stc mov jbe mov sub or jo (bad) (bad) sti test add (bad) (bad) jo cmpsb xorl popfq cmc pop (bad) pop mov cltd rex.RXB cli (bad) (bad) (bad) (bad) push loope imul stos pushfq sbb lret fbld ror or jrcxz shr rex.WRX nop cli xlat rex.X adc movslq push xor or cmpsl mov data16 es sbb and xor callq add rorb movsb pushq mov fistpll rex.WXB fdivs sub jbe addl js xor movabs xchg insb movsl or xchg and cs jp adc mov lock div xchg rex rex test repz (bad) mov rcl (bad) ss and sub push rex.WR cmp lods pop (bad) nop stc retq mov movabs mov (bad) (bad) (bad) sti adc (bad) (bad) (bad) incb pop test subl mov (bad) movabs incl insl xchg jge movabs cltd mov mov ljmp jge cs (bad) (bad) insb cmp shrl mov rex.WXB insl leaveq mov movabs cld xchg cmc clc clc cmp js je bt clc jmpq je not jmpq jmpq jle jg sbb rex.WRB movabs mov (bad) test pop xchg clc pushfq mov fimul div sbb repz ja push repnz (bad) out pop sbb jno movsl and mov xchg ja push sbb rex.R (bad) and outsb movslq adc xor (bad) cmp movabs add out sbb movsb sbb (bad) jp (bad) (bad) push add add add hlt or or testl sbb fwait fwait add push or (bad) jge push retq rex.R pop pcmpeqw cltd mov movabs callq mov in jnp imul rex.WB add mov add xor fs cmpsb mov js or add shl loope stos cmp (bad) xchg push fwait lods pop push icebp movabs sbb rex.RX pop pop mov scas sub ds orl (bad) lahf subl (bad) std js (bad) int3 rex.WRX add cld cmpl (bad) (bad) (bad) ljmp xchg (bad) cmp cmp xchg orb sahf mov movsl add add ja repnz adc rex.WXB cmp cmpsl orl movabs sarb callq adc adc (bad) je jne rex.XB xchg orl int sbb and (bad) fimull shr (bad) roll and icebp movslq enterq adc jg movabs rex.RX rex.WRX es mov sbbl and sub cmp xor lods loopne rex.X test xchg xchg mov outsl pushq mov out jb rex.WX stos (bad) movabs rex.B mov enterq lods int sbb (bad) sar (bad) decb add movabs in lret add (bad) rex.W or adc jns add loope xor fadd pop sbb xchg shlb (bad) ljmp xchg lods (bad) retq (bad) rex.X rex.B pop rex.WRB (bad) test add insb sub movsb rex.B push mov rclb lods orl (bad) jg movslq out jle (bad) (bad) push push std movabs rex.WB out (bad) jmpq rex.R rex.WRX push rex.WB cs insb add scas (bad) (bad) mov fnstsw rex.WXB rex rex.WRX jo (bad) rex.RX push adc cmp sahf rex.WX add jae gs (bad) adc outsl add stos (bad) lahf (bad) adc out mov push jrcxz int xor rex.RB (bad) lods cmp (bad) or cmc callq (bad) rex.RX rex movabs sbb adc pop jle add sahf mov (bad) lahf mov mov fdivs mov cmp nop loop stos (bad) (bad) or (bad) movabs sti and rdtsc (bad) (bad) (bad) (bad) xor movsl mov retq rex.WRX callq fsubrl (bad) pushq sub in mov rex.WR rex.RXB outsb lock imul fmulp pop sbb fucomp retq (bad) mov dec push push repnz jp retq fidivl jle cmp pop repnz out outsb (bad) mov mov push rex test (bad) jb pushfq out stc repnz jbe fnstenv lods rex.WRXB cmp rex.XB mov jl pop movabs sbb imul sarb xchg repnz xor rorl in shrb mov cmp push in shr sbb sahf adc repnz stc test rex.W cld sbb (bad) clc movslq decb add xor data16 rex.RXB in mov jmpq pop xor fsubrl push add loopne xchg loopne mov ljmp cmp movabs cwtl (bad) rex.WXB movb jbe rex.WRX (bad) pop sarl xor retq (bad) xor (bad) sub jg (bad) rex.X orl mov insb icebp pop data16 pushfq rex.W add (bad) lahf push pop je repz or (bad) rex.R pop loop int sbb int cmc mov mov neg add (bad) jo,pt or notl mov (bad) pop rex.WX sbb sub jno cmc popfq (bad) (bad) (bad) decb cmp mov test repz jl (bad) icebp rex.WB rex.RXB in mov jne lea rex.R xor loop (bad) mov mov callq lea outsb rex.B in rex.XB rex.XB ds cltd rex.WX cmp (bad) movsl rex.WR rex.RXB cs cmp out adc rex.WB loope cmp xchg and add retq js xchg movabs retq pushfq push jae test rex.WRB cmc pushfq (bad) scas out jmpq cmp movabs sbb (bad) (bad) decb (bad) (bad) (bad) (bad) in movsb adc cwtl and pop sbb sahf mov add repnz repz jrcxz fwait mov loopne rex.WR rex.B data16 movsl cmpl sub xchg cld rex.WRX and ja rex.RXB pop (bad) (bad) jl rex.X pop lods add mov jmpq jmpq je stc cmc add stc cmp jmpq jmpq jb cmp cmpb jmpq movslq add jle push and cmpsl test jbe pop mov (bad) pop sbb cmp sbb xchg mov (bad) cltd gs lods or mov icebp int adc cmp jo vunpcklpd sub rex fisubrl movabs movabs lea rex.B mov (bad) or mov jp lea pop rex.WRX rex.XB push mov mov insl scas push cmc xor cmpsl icebp pushq sbb callq in add cli cmc scas fidivrl scas movabs (bad) (bad) lock (bad) (bad) callq rex.XB mov sub sahf repz xchg jbe scas add cmpsb scas (bad) adc adc data16 xchg (bad) rex.WRXB jrcxz pop imul push mov xchg mov (bad) stos retq jb bt cmc stc cmpb jmpq xlat adc loope lret (bad) (bad) addr32 test rex.RX xchg jmpq rex.W and lahf mov lret jge out sbb cmpsb (bad) gs mov ss push int scas rex.XB (bad) xor pop cmc enterq adc adc lock (bad) (bad) jle xor or (bad) ja ss pop sets add mov cmp in rex.XB movabs (bad) (bad) sti (bad) rex.RB (bad) (bad) (bad) incb lahf (bad) (bad) lock add add retq (bad) faddl (bad) loop lahf lret cmp lods btc xchg jmpq in (bad) icebp pop stc movsl test jno iret scas int rorl pop int or int3 movslq push pushq jle adc cmpsl leaveq add shll movabs scas mov loop cmp cmovae sti addr32 mov js sub or (bad) icebp xlat (bad) jmp out mov xor push vpaddusb vcvtdq2pd mov (bad) rex.R leaveq insb sub xchg out mov rex.B rex.XB push xchg jmpq outsb or add (bad) cmp or je mov in sub add in xor mov jle xlat rorl imul pop movslq sub mov lea lret icebp mov pop xchg push rex.WRB (bad) add add pop in out sub (bad) leaveq outsl mov ds repnz (bad) nop movabs (bad) movabs add and jo xchg mov fstpl andl add insb cmp in jrcxz enterq (bad) in sbb (bad) cmp fwait rex.R or sbbl push movslq sbb xchg jae jp rex.B (bad) clc out sbb popfq push xor lret scas fbstp mov callq in fisubr mov ds push outsb and mov cmp pop cmp cmpq test repnz int movabs or (bad) cltd outsl scas xchg mov pushq rex.WRX mov imul cwtl out rex.WR (bad) mov pop ds and callq cmp mov jge int (bad) jo movabs xlat test andl xchg jno mov repnz mov add (bad) sub (bad) sub in (bad) mov movslq scas lret cmpb jmpq pop ror lahf push pushq movabs xchg add rex.WXB (bad) xchg add movabs test test (bad) lret xor in (bad) fs sti movsb and sbb rex.WXB (bad) adc jb adc ds jmpq pushfq push pop (bad) scas adc xchg test rex.RX lret jbe sbb sub fdivl add (bad) sbb out jp (bad) (bad) (bad) cli mov (bad) callq std lahf je xchg rex.WRB retq (bad) cli pop por pushq push mov fildl xor stos xor test sbbb jp cmpsb shlb add jbe (bad) (bad) (bad) jmpq (bad) or mov or (bad) fld insb mov mov enterq (bad) jp imul ds and (bad) and add movsl (bad) cld rex.WRXB xor dec push es rex.X out stc mov or mov bswap mov shld clc mov dec or ror push shr mov btr ror push dec bt push bts dec push movsbl shl setne clc push not push sub or or mov xchg xadd shl movsbq mov movzbl lea bsr mov clc or jmpq cmp cmc add test jmpq cmp cmc or lahf push (bad) mov out int iret and data16 sbb xchg mov jb mov lock enterq pushq and pop rex.WRXB sti mov (bad) (bad) mov mov (bad) xor hlt xchg push rex.RX sbb add push imull int movabs xchg push js lret repnz repz stos sub addr32 js insb mov jl ja sbb add add pop and pushfq popfq std rcrb mov jne xchg (bad) mov or xchg cmp clc movabs sbb cmp (bad) (bad) push repnz (bad) stos add lahf scas push cli cmpsb lret sub mov lock xor in lea pop retq jne jmpq jmpq cmp mov bt test jmpq ja shl mov inc sub or dec add movsbw btc cmp mov rol mov clc bt test repnz jg jne jmpq mov jmpq mov jmpq cmp cmc clc test jmpq sub test mov stc jmpq out sub loopne mov mov xchg rex.WB rex.WRB mov out sbb mov rex.XB (bad) xor loop int3 (bad) imulb mov rex.WRX push bswap cmpsb (bad) mov (bad) push cltd fimul lods xchg rex.RX mov adc or rex.WRX rex.B mov rex.WRX jmpq and outsl mov jmpq pop test (bad) mov movq xor test cmp jp (bad) (bad) cli cmpsb rex.WRX mov (bad) (bad) (bad) std xchg jge (bad) rex.WXB rex.RX shrl jmp mov mov enterq decl xlat (bad) (bad) in (bad) xor ss pushq (bad) jo out sti push (bad) (bad) retq jle mov retq xchg mov pop lock es insl data16 (bad) test iret pushq loop bt stc or jo je stc jmpq jmpq jmpq pop xor mov jp movslq rex rex.WRX nop jp jne pushfq sbb sub stos mov jl mov pop mov mov pop mov (bad) repnz jns rex.X lods dec cmc (bad) incb add pop cs mov adc sub lock rcl mov add scas xchg mov pop ss push sbbl (bad) cltq (bad) adc and rex.WB rex imul cs adc (bad) movsb sbb orl mov shll jl (bad) (bad) (bad) (bad) cld jno sbb movsl (bad) (bad) (bad) lcall rex.X pop xor (bad) outsb cwtl rex.XB (bad) mov xlat mov mov mov jo fwait cmpsb outsb adc mov add popfq jo pop (bad) outsl loop sub ja mov (bad) add add sub adc fcompl (bad) fnsave lret cmpsl sub (bad) je mov add mov stc and movabs cwtl scas jle negl fsts jrcxz and sti cs jmpq cmp xchg fs rex.R jl cld loop (bad) movabs mov loop rex lods rex.WR rex.WRXB orl adc (bad) repz xchg (bad) mov mov pushfq rex.XB mov (bad) icebp add add or and stos xchg decb mov mov lock mov loope rex.RX add and lahf cmp ficom pop cmp mov mov lods mov xor shl mov hlt mov add add sub add xor add rex.W addb add jg (bad) addb add add test pop std (bad) stc test add xor mov bt jmpq or popfq add testb enterq jns std je cld sub add mov mov jbe lods in sub rol add rex cmp bnd jne xchg (bad) retq xchg sbb repz (bad) and (bad) (bad) (bad) sti stc (bad) and (bad) (bad) in mov pop or lods adc rex.WXB sarb xor add add adc mov adc xchg xchg sahf cmc xchg mov out (bad) orb nop (bad) (bad) ja rclb add push loop pop icebp lock fs out add int xor (bad) (bad) lock cmp mov cmc xchg and or jmpq mov seto setg movsbw mov movzbw jmpq adc lock mov (bad) mov or lahf repz (bad) icebp dec (bad) mov fcmovu xchg xchg movsl pushfq pop stc stos (bad) nop rclb lods nop fcomps hlt xchg incb std out cmp mov mov ss jp outsb rex.WRB xchg rex.WXB pop push and adc callq jge pmuludq outsl xor hlt (bad) pop jmp cmpsl (bad) (bad) (bad) cld and int iret (bad) (bad) (bad) dec cld rex.WRXB imul cmpsb scas mov add rex.WB pop and test jmp and xchg rcrl movabs movabs lcall es stos (bad) xor clc pop rex.WR mov divb adcl xor rex.R andl xorb ja rex.WRX jrcxz fnstenv jbe jo (bad) jnp xchg (bad) and cmp sahf (bad) (bad) adc add add callq jl (bad) mov int adc pop and adc (bad) mov lret push fstpt (bad) (bad) cld gs mov (bad) (bad) (bad) callq sub in es mov xchg lret sbb lea rex.WR adc rex.RX add rex.RB xchg sub (bad) lret jg lahf (bad) xor push callq push fisttp or mov repz push stc mov in push cmc repnz pop test or jle pop (bad) retq push sub jno cmp cmp repnz jmpq test jmpq ja stc jle cmc stc imul jmpq callq jle jb retq add or imul jne lret (bad) mov lods gs (bad) out stos adc int3 movsb movabs sarl adc and rex.WRXB (bad) movsb mov or in (bad) in or movabs (bad) adcl jbe enterq (bad) mov add movabs leaveq add (bad) callq (bad) pop (bad) adc sar (bad) (bad) cld pushq mov outsb (bad) (bad) (bad) callq mov jb sarb icebp rex.WB push es jl mov test add add add adc xor in rex.XB pop push mov (bad) lret add addr32 movabs stc insl pop ds je lret pop rex.XB pop (bad) adc int callq fs adc (bad) and adc out (bad) jmpq rex.WRXB jb movsb sti in (bad) std je lret or test sbb (bad) icebp cmp out rex.WRXB movabs (bad) (bad) movsl rex.WX sub leaveq repz mov xchg movabs repz cmpsb movslq xchg mov push (bad) test rex.WXB rex.XB sarb sarl es lods (bad) (bad) (bad) sti scas mov jg (bad) (bad) (bad) (bad) (bad) fisubrl orb mov add add sbb cmp loope cmp (bad) adc orl (bad) imull stc insl data16 jbe (bad) rex.WRB jnp (bad) int clc rex.WRXB repnz cs int3 xchg stc jmpq (bad) lea jmpq lahf adc sbb movabs jns sub fildl out xor pop (bad) cmc in sahf (bad) out (bad) add jo rex.WRXB (bad) (bad) mov cmp sbb push add rcll or jne cli pushq (bad) retq mov (bad) xchg (bad) sub callq rex adc (bad) fiadd (bad) jae mov je (bad) (bad) (bad) sti xlat xchg (bad) (bad) (bad) (bad) inc xchg adc (bad) jno pop cmp mov lea (bad) mov add jnp cmp or xor lods or xchg loopne (bad) cmp (bad) or rex.RX xor shlb adc jge (bad) lock cli cmpsl cmp movzbl or bts btr mov ror neg inc mov stc repnz jmpq callq jo setnp mov movzbw xchg movzbq not mov mov pop xchg xchg movsbq mov lea mov jmpq jmpq mov jmpq scas pop mov callq cmp ja divl rex.WRXB lret movsl adc and sub jnp (bad) adc imul or (bad) mov and out std mov ss leaveq rex.WB (bad) xlat (bad) (bad) and movabs icebp rex.XB adc int3 mov mov mov mov (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) (bad) sub (bad) rex.WRXB add sbb jl add add fsubr in mov mov rex.XB mov jno mov (bad) cmp rex.WRXB or rex.WRX xchg rex.RB cmp mov sti jae sbb fsubrl xchg pop (bad) movabs out rolb cmpsl int repnz mov lock (bad) outsl (bad) xor jrcxz test iret int cmp fwait rex.WR (bad) xor push rex.WRXB rsm loop mov (bad) rex.RXB loop adc pop adc push rex.WR (bad) xor sbb pop test (bad) (bad) (bad) cld and pop mov (bad) (bad) (bad) decl (bad) jbe outsb out addr32 (bad) (bad) in movabs ljmp rcll jge rex.RXB test cmc add repz jnp fild insb int3 gs retq push or add add cmc test rclb rex.WX push (bad) push (bad) and jle push (bad) sbb movabs out adc sub jae sub in pop or xor and jns out mov loop add ja jmpq pushq jmpq (bad) enterq (bad) shl or enterq push xorl xchg imulb xchg jno jnp (bad) mov movabs push movsb cli rex.WR callq movabs pop or in movabs mov fwait lea jb cmp insl rex rex.WB fs rcrl rex.WRXB jo jae int push or ja jo mov (bad) je test (bad) (bad) (bad) (bad) cld add mov (bad) (bad) (bad) (bad) out fsubrp imul adc add add add (bad) (bad) mov sbb jrcxz (bad) fwait sub (bad) js cmp cltd mov xor mull sarl rex.WRB mov cld (bad) (bad) movsb (bad) mov (bad) out repnz std fwait sub cli xchg pop not pop retq jmpq jne bt cmp jmpq callq jmpq ja bt neg sub xor and add neg sar mov bt sar mov test repnz jmpq je and bt not push xchg mov movzbl and mov shrd sub jmpq jmpq jmpq xor out cli or xchg cmp hlt jmpq mov rex.RX jns push rex.X (bad) pop mov jge movabs gs cmp stos rex.RXB add fldcw scas scas insl sub mov jge and fs lcall (bad) mov jb (bad) (bad) (bad) sti mov xchg cmp (bad) movabs add add and lea movabs (bad) xor movabs mov (bad) mov add sub (bad) xor cmpsb sbb mov sarl jnp fnstenv sbb (bad) test rex.WRX and xchg leaveq xchg add in pop std decl orl add xchg push std decl test rex.WRX jmpq iret bt and mov bt add bt movzwl lea sub sub shl mov clc cmp bt cmc add cmc cmp jb mov cmc bt test jmpq je cmp jmpq mov movabs stc lret in cmpb xchg lret movabs lock cmc jp popfq ds jne jrcxz in (bad) sub rex.R push mov test xor cmp xchg cmpsb sbb clc and push cmp (bad) rex.WX mov xorb (bad) (bad) sti ss xchg (bad) (bad) (bad) (bad) and or test test (bad) movabs fstpl pop sub flds xor pop rex.WRXB movabs idivl icebp xchg jg add or mov (bad) mov mov mov (bad) rex.W (bad) xchg rex.R (bad) (bad) jmpq (bad) loopne rex.WRB gs pop adc mov sub xchg mov (bad) push cmp cmp test callq movabs xchg mov add outsb pop repz (bad) (bad) rex.WX in mov test out pop rex.X mov insl adc or adc sbbb rex.WR push cmp adc push rex.WXB sbb fstps leaveq lods in mov mov sub push or adc fwait out pop rex and pop (bad) (bad) (bad) sti movabs mov and outsb (bad) in loop pushq pop mov mov int3 xchg mov test add cmp xchg stos (bad) add xchg movabs lea sahf sbb add sub add in rex.WXB shrb (bad) (bad) out nop jb test mov add add ja (bad) cmpb rorl rex.XB (bad) ss add callq (bad) adc rex.WRX rex push sbb (bad) jmp sbb or (bad) rolb (bad) (bad) mov or jg loope lock or add stc movabs movslq cmp jno mov adc test nop out (bad) ds idivb movabs (bad) mov and (bad) (bad) (bad) (bad) mov rex mov int jrcxz cld lods mov repnz add add xor loope popq rolb out (bad) fcmovb push jg cltd mov xor (bad) mov (bad) or sbb jo rolb pushq xor and popfq mov lret mov add cli or cmc or jmpq cmc movb stc test clc cmc test jmpq jmpq pushq jmpq jmpq jmpq add rex.RXB gs outsl fs imul add add sbb mov rex.RX push mov and cmpsb js rex.XB stos rex.WR insb iret jmp cmc adc iret lea xor push (bad) out (bad) mov movslq rex.B out and push retq mov movslq or xchg test fwait (bad) (bad) (bad) (bad) out movabs sahf scas shrl in xchg clc ja imul fcmove and rcrb jns mov xchg test mov xor rex.RB fwait mov or (bad) sub imul rex.X mov adcl (bad) xor add jno xor push rex.X rex.WXB push sub cmp mov sbb lahf int3 mov mov push rex.WRB jg rex.RB repz mov (bad) xchg callq and je jg roll pop cmp (bad) (bad) clc jbe jb mov test test out jp mov xchg mov or add rex.RX fdivl sti xchg (bad) (bad) (bad) (bad) jg lods in jno mov (bad) (bad) (bad) (bad) (bad) out push add xchg iret add add (bad) (bad) sarl (bad) jno cmc push rex.RB mov test movslq and (bad) rex jle,pn jbe add movabs sbb movabs adc (bad) fdivrl pop (bad) cwtl in add sbb add sub add xchg push and xchg movabs mov (bad) movabs (bad) lock movsl adc (bad) in movsb lret mov (bad) mov (bad) push js sbb popfq and (bad) mov (bad) mov stos fs pop insb xor stos and (bad) (bad) cmc sbbb mov andb hlt lock lea (bad) (bad) (bad) cli callq pop add std (bad) (bad) fidivl and stos (bad) hlt xchg cmpl cmp stc fbstp cmp icebp push in pop adc (bad) (bad) callq xchg jbe push lods nop (bad) and loope divb mov jbe rex.RXB lret sbb test mov repnz rex.WRXB mov add pop mov (bad) or insl enterq xor (bad) jmpq pushq jne pushq jmpq ja jo sar or sub inc bt movzbw adc add rcl movsbl jns mov rcl mov cmc jmpq adc xor (bad) rex.WRX callq (bad) out xchg mov imul cld in shl fisubrl int3 or xchg std clc in cmpsl (bad) rex.WR subb (bad) cmp rex test jbe in cltd mov cmp cmpsb cmp out lret push mov imul (bad) rex lret push jmp lods sub sahf popfq add xchg lock (bad) jle sahf xchg fldcw sbb rex.WRX (bad) (bad) sti and jmpq (bad) decb jmpq rolb pop pop cmc mov (bad) cmc pop or lods test add decl pop cmp (bad) testl std fs movabs int out mov scas std rex.RX (bad) mov es out (bad) cmc xchg rex.WRX test mov adc jmpq jmp cmp cmpsb subl js mov cmc shrb jno pop or (bad) movabs cmpb and xchg (bad) pop cs int3 test mov lods adc or repz jno out sbb (bad) pop sbb mov sbb fwait xchg int3 mov iret jmp pop in xchg (bad) mov jl jrcxz (bad) (bad) js fs (bad) (bad) (bad) (bad) xchg ja nop jnp (bad) (bad) (bad) lock divl mov mov xchg lods pushfq cmc jno mov jae or lods jl nop sbb and rex.WRXB cs cmp rorl js popfq or sub jae sbb movabs out jb popfq xor rex.B sub jb rex.RX (bad) sub jmp adc (bad) sub rex.RX je mov adc insl push or (bad) divl rex.X mov xor mov enterq fwait rex.WRXB and (bad) mov repz jns sbb imul iret movslq imul sub xor movsl rol int sbb (bad) (bad) xor iret outsb insb leaveq pop mov or (bad) leaveq cmpsl adc insb pop icebp movabs (bad) (bad) cmp rol test push sbb and mov pop xor (bad) rex.RX rex.RXB out (bad) sub lret popfq xchg mov std pop lret cmpsl mov outsb ja adc callq imul rex.W or imul fsin (bad) clc and lret hlt out (bad) adc xor (bad) (bad) ja subb shl rex.RXB sbb fnstcw add push je outsl cmp mov mov or (bad) sti mov (bad) (bad) (bad) jbe cld test (bad) adc mov pop fisttpll (bad) push rorl loop (bad) retq push jge mov xchg rex.RX enterq hlt add enterq pop callq jb stos cltd add sub jp mov xchg mov sub and cmp rex.RX sub adc mov hlt ss loop rclb pop nop movb test out clc loope movabs imul xchg fidivr repnz iret js mov xchg mov iret (bad) callq hlt cmpsb clc push xor and pop rex.RXB (bad) (bad) sti fs int ja (bad) (bad) decb mov mov (bad) rex.WR xchg ja insl rex.RX fstp (bad) mov fsubrl rex.WXB cmp fldt jmp pop lahf movabs retq (bad) xor jmpq retq repnz int3 pop (bad) rex.XB (bad) sti loopne fs out movabs jmpq insl adc pop movslq fistpll (bad) mov mov mov (bad) rcll pop or test sbb push add rex.RXB gs je jb jne rex.WB outsw add lock mov xlat jno (bad) sub cmpl jo es ja sub fs test push (bad) insl ds int inc in mov rorb mov callq mov xchg rolb insl imul outsb out jg (bad) (bad) (bad) sti in mov adc (bad) (bad) (bad) shrb jge rex.X (bad) sar (bad) sti adc push (bad) stc jle mov (bad) in xor jno leaveq sahf mov add add mov rex.WRB pop cld adc (bad) fadd mov mulb mov push outsb (bad) (bad) (bad) repnz int3 pop (bad) mov (bad) mov push pop ds cs xor movabs je jmpq jmpq pushq jmpq jmpq jb jmpq jmpq sub movabs pushfq rex.R and xchg pop (bad) cmc jmpq addl cmp or xor callq jge repnz (bad) rex.X pop sti (bad) and data16 (bad) (bad) insb push test shrl movabs mov jle (bad) in jrcxz jnp test (bad) outsl out repnz sarb fbstp (bad) pushq repnz out retq adc cmp retq xchg (bad) (bad) (bad) (bad) sti mov (bad) (bad) (bad) (bad) stos adc sbb (bad) jmpq add add sub and mov (bad) int ja out js in sahf jg in and and xchg and cmpsl int3 jmp loopne (bad) retq rex.RX pop (bad) (bad) pop mov (bad) sbb retq jne and mov add xorl ds decl xchg or (bad) jmpq add (bad) adc imul (bad) add mov leaveq (bad) push subb and jp sbb movslq pop adc callq push add xchg idiv xchg lret (bad) (bad) in mov (bad) (bad) jbe scas and fstps repnz mov lods (bad) (bad) (bad) cli fsubrl movabs push xor add mov xchg adc or and fldenv jl (bad) rcl mov push or data16 (bad) xor (bad) sarl cmp (bad) ljmp add movsl push (bad) scas jo mov (bad) retq push shlb repnz fcoml enterq rex.XB pop cli push rex.XB fstpt adc mov or jae add not mov bsf mov sub mov cmp stc xor bt cmp bt repnz jmpq jmpq jmpq mov jmpq jae jmpq je clc bt jns stc sub cmp stc jmpq mov jmpq sbb mov rex.WRB sbb (bad) out imul xor add retq stos sub in scas and addr32 mov rex.WRXB mov (bad) gs (bad) (bad) (bad) mov xlat sti ja mov pop jge rex.X fwait jbe rex.WB es sti fwait pop xor cmc push (bad) cs lret leaveq lock jmpq fsubs mov lret fldl mov (bad) and (bad) adc cmp add push jg (bad) (bad) (bad) sti retq enterq (bad) (bad) (bad) (bad) scas testl jo,pt (bad) add and add cs sub insb (bad) ss (bad) lea rex.RX (bad) callq cld lret mov cmp sbb test or lods hlt movabs pop mov adc xlat mov jmpq jl pushq jp pushq jmpq jbe sar mov mov rcl sub adc mov bswap setae mov stc add bswap adc sar shld shr mov neg movzbl movzbw mov clc shrd add movsbw movsbw jmpq mov sar mov mov stc push add btr shld xor mov stc cmp sub jmpq callq btr not shl rol add stc movzbw shr cmp mov cmp bt jmpq je clc or jmpq stos jmpq mov cmp clc jmpq bt sub cmc cmp repnz jmpq stc cmc jmpq jae push mov mov lods stc neg js dec cmc bt xor stc clc stc clc rol jmpq jmpq xchg jmpq jno xchg rex.B lods fs repnz push pushq out sbb in out shr xor cmp jns iret movabs push scas ror (bad) push nop xchg xchg imul push pop (bad) sub sti sbb (bad) std jge xorl add add add es add movslq xor (bad) repnz callq sub mov shlb rex.RX lods mov out sub xorl movslq pop rex.WRB or mov (bad) nop jo test lea xor rex.WRX mov sub jmp and (bad) fnstsw rex.W jo rex.W imul fdivrs loopne sarb rex.WXB cmc fdivrs imul cmpsb push xchg jl rex.WR (bad) loop lock rex.XB or pop xchg adc add (bad) push add bnd mov fcmovu hlt xchg (bad) (bad) adc in movslq int es rex.R pop pop pop mov jle rex.WRX imul pop movsl enterq in cmpsl adcb (bad) rorb insl popfq (bad) pop xchg movabs mov nop rex.R sbb fisttp (bad) jg rex.WRB xacquire stc pop in fist mov mov ja rex.WRX test sarb js add push pop int3 es ds (bad) sub (bad) jbe movslq (bad) or je andl cmp negl add rex.RX (bad) stos adcl enterq push push add mov push rex.X mov mov (bad) add rex.RXB and sbb test shll (bad) popfq rex.W adcl test xchg push in test push jae (bad) sub (bad) sbb fld1 jns cmp push jb incb out stc pushq mov jle jle stos jmp jg (bad) gs xchg rex.RX (bad) lahf mov nop mov rex.X mov (bad) es vrcpss rex.RX push mov fldcw jns or xchg lret sbb rex.XB nop ljmp jno (bad) cmp mov adc jle xor jmpq bt jmpq ja cmc bt bt jmpq (bad) cltd (bad) movabs mull jp and stos xor or and fcmovb cld rex.RB xchg test xchg rex.WRX movabs lahf mov push sbbw rex.B pop callq (bad) mov subb fsts jge test (bad) sahf (bad) (bad) (bad) sti mov add rex.RX (bad) (bad) (bad) fwait (bad) and sarl jbe and pushfq or jne jo (bad) add movabs and xor cld loopne sbb push jns add push jle clc adc rex.R jo mov rcr (bad) imul add (bad) jno,pn je add push (bad) rex.WB rex.X xchg ds cmp xor sbb rex.RXB mov sub out rex.WRXB push idivb lea xchg mov adc cmc cmp jmpq ja xor sub cmp btr rol add test adc mov and neg mov bt jmpq test cmc cmp setae seto movzbw lea lea lea jmpq jne shrd (bad) (bad) mov stc clc test clc add bt bt bt movzwl btc clc xor dec mov jmpq jmpq jmpq and adc rorl clc sbb add pushq pop fs push cmp movsb jmpq mov adc (bad) push mov mov xchg pop cmp test stc sub push xor cld xor push xchg cmpq jnp and hlt (bad) add (bad) (bad) sti mulb rex.RX (bad) rex.W movabs jne jmpq scas lahf rex.XB stc mov (bad) (bad) sti imul (bad) (bad) movslq out (bad) test cmpb jmpq movabs retq int flds adc rex.WX stc xor loopne shr rex.WRX pop pop adc adc rex.R cs (bad) jrcxz pcmpgtw stos cmpsb sbbl and xchg test cmove add ljmp rorl imul jg addr32 mov sub rex.WRXB sub xorl lea mov cmp mov mov adc adc clc movsb rex.RX fs movabs lods clc (bad) (bad) xchg je pushq out retq scas (bad) pop rex.WRB (bad) test jge (bad) adc adc leaveq movabs mov jl (bad) (bad) decb rex.WRX js movabs rex.WX jrcxz popfq scas (bad) jge test mov ja rex.WR xchg jge or mov xor and (bad) (bad) decl mov fidivrl lret (bad) jno xchg loope or je lret sahf mov mov adc testl cmpsl adc jge cli imul (bad) fnop jp outsb int mov test mov add lock pushq ffreep repnz and lret lahf (bad) (bad) add leaveq repnz sub outsl movslq fwait movabs cmp lods fistpl jrcxz (bad) ds (bad) xchg repz je fs (bad) icebp add jno push sub rex.XB fwait jl add xor pop ja (bad) in pop (bad) test sub fwait cmpsl sub fsubrs in (bad) scas xor cmp rex.WR fistpl movabs (bad) sbb (bad) (bad) (bad) repnz xchg fmull rex.RB (bad) jae out shr sub add fimul jmpq movabs sub push xor sub sub rex.RXB lret movabs adc jl jl iret pop lret and mov cmpsb repz decl xor (bad) adc retq sub rex.XB nop (bad) (bad) mov mov lea sbb and xor add jle movsl test cmp jle xor sbb push sbbl cmp xlat push jp mov fwait out jne xchg (bad) mov test (bad) (bad) (bad) sti (bad) and add (bad) (bad) (bad) mov rex.WRB fs cmpb rex.W xor xor mov xchg sub jle out (bad) push cmp and adc rex.RX rex.WXB and cmp push nop int3 mov imul ds rex.R pop (bad) pushq psubsb xchg mov fbld xlat mov fs adc scas sbb sub xchg rex.WRX and add pop mov xlat scas and mov sbb xor clc add xchg rex.XB loopne (bad) xchg (bad) sahf sub popfq clc repnz sub or sahf adc pushfq and test cmc loop mov xchg pushq mov callq add and mov test int3 data16 pop es add (bad) (bad) (bad) sti and (bad) (bad) (bad) (bad) adc add sbb stos mov jge sub pop (bad) (bad) (bad) callq and push jge push add sub es ja lods mov insb rex.XB (bad) cmp (bad) cmp rorl scas mov rex.WR and ja rcrb mov sbb outsl lret (bad) js and stc faddl jle jp test stc cmpsb (bad) test rex.WRX movabs cmp cmp clc mov outsb cmp (bad) (bad) jp popfq popq xchg rex.R rex.XB clc retq test xchg mov jbe clc xor sub cmc lods shll mov data16 out jno xlat mov sti sub sbb sub (bad) (bad) (bad) (bad) (bad) retq jg stos fidivl cmpsl pop add iret lock push add (bad) mov add (bad) and addr32 cmp sub xchg cmpsl (bad) and negb (bad) nop pop mov cmpsl orl jge push or push or negl and cmc movabs pop repz and mov sbb sbb in mov orl pushq pop lock movabs loop int3 mov push jle clc (bad) lock (bad) push (bad) fs sbb pop adc jno (bad) mov repnz pop adc jg jrcxz ss in (bad) movabs mov add mov jrcxz clc scas test mov (bad) (bad) (bad) sti rcll mov sbb (bad) (bad) (bad) mov ror mov adc mov mov (bad) in test mov jmp pop cmp jns push add add (bad) and stos out (bad) cld push or sahf mov mov (bad) (bad) adc cmp clc rex.B es js mov (bad) pop js (bad) (bad) jle xchg add rex.WX pushfq cmp mov sbb cmpsl scas jne test rcr mov bt bt jne cmc or jmpq je cmp add test cmp jmpq jmpq test jmpq add rex.XB outsl jae rex.R gs je jo (bad) mov (bad) int3 or (bad) wbinvd cmp sbb (bad) (bad) ss pop (bad) rex.WRB lret stc jmp lahf push (bad) scas (bad) lods add or pop nop mov fsts (bad) (bad) or sarb jnp push stos xchg scas mov cmpsb and mov sbb jno xchg out jnp hlt mov jrcxz adc add cli mov add sub (bad) (bad) decb adc or popq pop cmpsl (bad) jge mov lea fiaddl rex.RXB (bad) pop test jl and or sub (bad) ljmp (bad) pushq mov callq test loopne in jo push insb sub xchg jmpq (bad) sbb sub and jle mov cmp in sbb out lods enterq sub ja mov sbb repnz lock mov jle pop adcl fidivr mov retq movsl test mov pop push lods fistpll sbb pop cmp in add pop scas lret sub cmp (bad) std leaveq (bad) pop adc (bad) pop jae iret (bad) mov sub or (bad) rcll pushq (bad) movabs mov fs (bad) (bad) callq sbb cmp xor push imul rex.B out rex.X add (bad) lea int3 push icebp jg rex.WR (bad) mov (bad) sbb jmpq rex mov insb lahf int3 out sub addr32 rex.WRXB lods jns (bad) rex.WR push xchg (bad) out adc cmpsl callq mov out xor rex.WRB fdivl leaveq lret stos ds mov pushq out rex retq jg or jno rex.WRXB sahf jp xor sbb (bad) mov lea insl pop (bad) insb out sbb cs mov stc rex.RX lods xchg and cmc xor xchg push loope mov (bad) (bad) (bad) sti int rex.WRXB jmpq mov xor or cmp push or fadds add add xchg js movabs jg xchg or orps mov (bad) (bad) cmpb cli addr32 fistpll mov push (bad) or movabs jo and gs jmpq jae rcr sbb xor not mov adc btr bsr mov jmpq pushq jmpq fimull int3 fcmovbe xor movabs movslq cwtl iret rex.XB movabs mov lret push rex.XB add pop (bad) and repz (bad) sbb (bad) jne jrcxz loop (bad) adc jb and mov mov rex (bad) (bad) sti push stos shrl (bad) cmp retq (bad) mov mov add xor out mov loopne je mov addl xor rex.RB rex.WRX rex.WRB mov pop addr32 (bad) (bad) lcall add (bad) (bad) nop out rex.WR rex.B adc movabs jg mov rex.WXB lods or mov xor (bad) xchg add outsb rex.WRX push ja push mov (bad) pushq rorl sar sbb mov test mov jmpq test nop push push sbb adc lods sbb mov adc notl outsl lahf ficoml rex.RX enterq sbb ss rex.WX (bad) mov (bad) sub (bad) mov jg sar mov add rex.WB repnz add or (bad) add cmp cmc jl movabs movabs (bad) sti xchg rex.RXB (bad) (bad) (bad) (bad) jb mov cltd push jne push cmp sub cwtl popfq sar (bad) (bad) push sbb xchg cli shll lods sbb (bad) lods lret outsl or add cld fildll (bad) adc jnp pop lret fwait cld cld insb fimul jne push cmp and out sub loope pop adc loopne (bad) (bad) ds jmp hlt movabs lahf sub lods mov lret scas movslq movabs xchg movsb rex.B pop push stos mov (bad) mov pop outsb cld icebp mov fwait push (bad) stos ficoml data16 std (bad) (bad) rex.B mov scas pop xor loopne movabs (bad) xchg (bad) (bad) stos cmp cmp (bad) (bad) (bad) sti scas cmp fsubs (bad) (bad) (bad) cltd (bad) (bad) lret ja mov (bad) jbe fimul sbb add add pop rex.XB sub xorb jnp (bad) hlt xlat ja sbb imul rex.RXB jmpq cmp out rex.RX loope hlt callq jnp mov and retq sbb jmpq jmpq mov adc adc ja subl fs or and decb mov sti sub js fwait jl xor callq pop cmp mov pop rex.B xor and cmp xor push push loopne (bad) or mov (bad) cmc lods mov pushq (bad) std cld push jmpq test pop fcompl icebp sub jmpq retq std scas (bad) (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) ljmp pop (bad) mov out fiaddl lret insl enterq jl movsb rex.XB rcrb jg scas or loopne jb mov (bad) xchg sub mov sbb lcall js js pushfq mov xor (bad) add nop mov fwait jns fisubr or mov mov movabs add (bad) out test cwtl movsl jp (bad) movsb (bad) out add in mov mov (bad) leaveq lret test and lods rex.WXB rex.WRX push xchg loopne sub out nop std sahf lock rex.WXB sbb push movabs (bad) sti fadds (bad) mov (bad) (bad) (bad) (bad) jg (bad) (bad) rex.WRB popfq (bad) xchg test cmp test add add add shr insl std (bad) int ds in or rcrb adc retq mov mov pop rex.B (bad) mov lea pushfq ffreep divps rex.WXB sahf mov clc sub rex (bad) (bad) (bad) rex.WB cltd mov pop mov cmpsb pushq lahf mov jns movabs cmp movsl jle rex.WRX add movabs sahf cmp test imul stos rorb cmc in roll (bad) xchg (bad) jbe data16 rex.B adc adc imul (bad) mov or repnz add lahf or (bad) mov jae mov scas shll jp or add movabs mul mov pop rex.WRB and rep movsbl mov pop jmpq jb (bad) pop cmp (bad) icebp (bad) rex.WRX data16 test lret sbb jl add mov (bad) push (bad) nop rex.RX rex rex rex.X adc mov sub jmpq or rex.R adc (bad) or rex.RXB iret adc rex.RXB fwait loopne rex fisttpl retq xchg (bad) mov loop (bad) sti (bad) (bad) (bad) (bad) sti pop cmp (bad) incb sbb sub cli cmp (bad) inc (bad) add xchg sarb retq out (bad) and and rol mov (bad) jne and movabs rex.RXB sub (bad) sub mov sub js pop insl lret (bad) adc cmc ss xchg rex.WR push mov cmp fwait mov jp sub jmp leaveq mov loopne or flds es pop out movabs fildl rex.WXB rex.RXB cmp rex.RXB cmp repz icebp mov mov add adc (bad) pop push mov movslq enterq loop (bad) lods psubusb fwait xchg rex.XB je xlat xchg out sub lea int3 mov movabs sti xor (bad) (bad) (bad) (bad) mov (bad) (bad) cli iret cmc fwait loopnel rex.WB push and (bad) jo movabs xchg (bad) in xor fadd insb rex.WX jmp sbb mov out nop out rex.W adc mov lahf mov in rex.WRX push sti mov clc fmull push rex pop xor and push jmpq popfw jmpq jne movsbl shld movsbw or mov cmc add cmc movzwl xor mov test add stc test bt test mov clc clc test jmpq btc btc mov bts mov mov stc mov jmpq je stc clc bt cmc add clc jmpq mov pushq rex.RX (bad) jge push test push mov adc (bad) movabs mov xrelease outsl adc push mov mov (bad) jns push cmp fistl movhps loope movsl in and ja xor jmpq mov rex.WRXB fmull (bad) (bad) sub xchg jne rex.WRX icebp jrcxz fbstp adc test or cs int3 rex.WX rex.WX repnz divl rex.WX xor and mov mov mov pop pop adc cmp xorb (bad) (bad) incl sbb push jo xchg mov (bad) insb out fidivl cs hlt movabs mov rex (bad) je (bad) out fimull sti movabs and loop rol callq sub xchg push outsl movabs sbb scas sbb (bad) sbb loopne fwait rex.RB retq rex.WX sbb mov jmpq jmp movabs sbb rex.XB cs sub (bad) fisttpl pop xor fidivl xchg ja push or sub (bad) test icebp xor in adc mov rex.W repnz mov rex.WX addr32 jae test je or leaveq loope scas notl mov sub jg (bad) (bad) lcall sub movabs mov shr (bad) (bad) (bad) (bad) fmulp cmpsb js (bad) (bad) fwait mov (bad) and pop (bad) scas lret jl push negb or and (bad) xor gs xor retq pushfq (bad) cs sub sbb test and push rorb xchg lea bswap mov bswap movzwl jmpq push jo nop adc stos popfq mov or (bad) pop outsl push jle pushfq rex.W jle (bad) adc mov movabs rex.W int3 sub push jge mov insl (bad) (bad) push movabs xchg shlb (bad) jl es scas test adc adc orb mov jle sahf and movabs (bad) rex.WRX (bad) cltd std (bad) cmp pop pushq jmpq mov sbb add add or mov rex.XB (bad) fild cli or fldcw or in add (bad) and adc xchg leaveq mov and sar pop sub fwait adc loope (bad) in cli data16 in retq xchg xchg pushq add outsl push (bad) iret retq (bad) (bad) pop rorb xchg stc lret rex.WRX cmpsb outsb mov rex.WRX out popfq (bad) cmp pushfq rex.WB pop push push mov imul (bad) xor or mov cld enterq cmp add stos pushq (bad) (bad) (bad) cli cltd lea (bad) (bad) (bad) (bad) std test (bad) rex.X stos stos cmp (bad) imul push rex.B out std mov test lret (bad) (bad) (bad) std fiaddl adc mov rcrl (bad) sarl stos or idivl push mov rex.WXB es (bad) in ror jae pop (bad) mov cmp test lea test not add sbb shl sbb mov test cmp jmpq jmpq lea bt push rcl mov lea sar dec sub lea mov bswap lea jmpq clc mov sub lea stc add ror mov rcr setle inc mov test clc test bt repnz jmpq adc jmpq loope jp and pop and or adc int3 movabs sub retq pushq add jbe cmp mov jmp movabs (bad) vrcp28sd subl mov and stos rex.WRXB and movsb add adc (bad) (bad) sti adc std rex.WB (bad) (bad) std cld jge test cmc cwtl rex.WR adc fnstenv xchg mov (bad) adc popfq (bad) fs (bad) (bad) (bad) push cmp and adc (bad) lock cld (bad) icebp rex.WX int mov pop jmpq rex.WRXB mov jno stos or (bad) insl sti pushq (bad) add (bad) (bad) xor fwait test test es adcl sar leaveq out mov imul adc jo push push mov rex.WXB (bad) (bad) xor (bad) cmc cs cmpb mov push or iret ja mov iret loopne mov sbb (bad) xchg in iret pop (bad) push cmpsl push (bad) cmp movabs fadds rex.WX sti mov (bad) (bad) (bad) sti (bad) xchg cmp xchg (bad) (bad) (bad) outsb rex.WB mov adc rex.RX movabs pop xlat loop hlt cmpsb fdivs cmpb mov ror jrcxz add sbb or (bad) jae xor xor jrcxz rex.XB cmp pop icebp cwtl sti xchg (bad) jbe pcmpeqw pop es bswap lea pop lea jbe bswap pop mov jns pop jmpq jmpq cmp jmpq jne jmpq jmpq jmpq sub (bad) cmp fstps xor rcr mov std sti sub stos add and fidivr xor mov xlat cmp js mov sbb mov outsb sbb push mov cld and mov and (bad) rex.W iret jne ja loope jp loopne (bad) cmp (bad) (bad) callq xor (bad) (bad) callq subl pop ds mov (bad) add push ss rex.RX pushfq rex.W cwtl lock fdivrp mov cmp sub scas imul in lock (bad) (bad) jmp jne jp push adc jp lahf mov lea push lahf int3 (bad) (bad) (bad) in xchg add xchg rex.X rex.WRXB cmp js add cmp int3 out movabs out (bad) movslq add (bad) (bad) (bad) out xchg mov mov cmpsl adc sub pop fadd hlt (bad) (bad) push (bad) xchg xchg in rex.WR (bad) (bad) push xchg ficom and sub and adc in or (bad) push (bad) mov repz mull (bad) sbb sar pop xchg test rex.WXB or ds (bad) cmpsl xlat (bad) (bad) push (bad) fiadd (bad) callq (bad) (bad) clc mov leaveq adc adc je cmp xor movsb push (bad) (bad) (bad) cli or imul fildll push add add movabs idivb movsl rex.WXB es xlat mov in xchg movsb mov adc decb int stos or pop (bad) mov (bad) adc ss (bad) ds scas xor pushq jge roll add add xchg insb (bad) movabs rex.WR cmp fwait imul mov (bad) (bad) rex.WR mov xor int3 mov decl addl inc fistp (bad) icebp shrd mov rcl mov test sub test cmc repnz jmpq jmpq clc cmp jmpq ja (bad) movsl outsl rex.B rex.WRXB (bad) (bad) mov xor xor movabs (bad) rex.R sub faddl sub and outsb addl xchg mov (bad) je jmp int3 rex.WRXB cmp sub push pop rex.XB and xchg cmpsl imul stos (bad) jbe sub repz push stos test ds rex.WXB cmp insl adc (bad) cmp xchg rex.WB (bad) (bad) pop gs adc data16 icebp cmp adc (bad) (bad) (bad) cld leaveq loope (bad) xchg in mov xchg je mov test (bad) lods rex.WR and cmp adc mov pop cmpsb cmc sarb jl subl stos adc testl (bad) (bad) (bad) cld or sub pop (bad) (bad) (bad) (bad) hlt (bad) push in push rex.XB vpsllw and (bad) pushq imul sub out jnp mov xchg (bad) pop movabs cmp add add add gs (bad) pop sbb pushfq rolb cmp pop and mov or (bad) jl xchg data16 (bad) test pop idivl jo out jbe shrl mov jns (bad) xor mov xor mov mov movsb jp fwait mov sub insb js xchg and jmp (bad) rex.W jns mov jp int3 lock test pop movabs subl (bad) sub shrl lods adc mov loope pop jmpq jl rex.WRB mov data16 xchg mov and sub insb push mov (bad) decb (bad) (bad) (bad) ljmp (bad) gs mov stos and cmc cwtl rex.WRX and pushq mov subb mov cmp rex.RX pushq pop (bad) sbb je fistl or movsl rex.WB callq fsubl cmp callq jae adc mov hlt (bad) bnd shrb (bad) adc add or xchg imul int repz add push pop push stc cmp cmpsl insl or sub (bad) mov and cli repnz jmpq jmpq cmp jmpq jmpq jge jmpq test jmpq gs std (bad) rex.WRXB adc movabs in (bad) sbb rex.RXB data16 rex.WX mov out xchg js cmp je fisttpll (bad) sbb mov (bad) repnz stc (bad) lea xlat adc (bad) xchg adc outsb pop mov stos rex.WX loopne fsts cmp rex.WRB (bad) (bad) cld or (bad) (bad) (bad) cmc popq jns (bad) in fstl add add sbb push jge rex.XB rex.RXB (bad) int rorl cwtl sub mov or or shrl movsb clc ss fadd xor lahf mov xor fbstp sbb rex.RX (bad) (bad) jmpq sahf push pop xchg (bad) jp movabs iret jb jno jne sbb add fidivl add clc rex.WRB (bad) sarl hlt xor jle shl hlt out sub mov (bad) pop cwtl movabs int3 xchg (bad) or jno or (bad) divb mov lods ja clc in retq clc icebp (bad) add rex.B or rex.W mov mov notb mov shll jo (bad) (bad) sti std je sub (bad) (bad) (bad) (bad) callq mov or rex.WRX pushq fwait rex.WXB adc stos int3 sub add cmc insb adc jbe out adc lret push or and (bad) mov and mov lods iret fnsave push (bad) jns cmp mov xor lods enterq xor jbe mov adc iret cltd rex.WB cs (bad) in or push test (bad) je rex.WR imul mov sub jns (bad) shll out mov push pop pushq (bad) add mov push cli movabs (bad) (bad) sti pop sbb (bad) (bad) (bad) (bad) incb push movsb movabs jrcxz movabs jp out xor data16 (bad) (bad) (bad) mov xchg callq hlt cmpsb fdivrs ja add jmpq sub sarl (bad) xlat lods cmp rex.WX jbe add mov cwtl scas (bad) mov xor jmpq xchg stc in xchg hlt movslq imul xor rex.B (bad) adc cli clc or pop push xchg mov (bad) cltd rex.WXB rex.R pop adc lahf jo ss mov xlat (bad) movsb cwtl adc rex.RXB jrcxz rex.WRB (bad) cli (bad) push rex.WRB or adc (bad) add pushfq stos orl sub cmp mov and mov (bad) (bad) (bad) cld mov mov pushq xchg xor loop jmpq or add rex.XB jnp mov es test add add jae pushq or (bad) in rex.XB xchg jge jp pop sarb jo (bad) loope cmp (bad) scas (bad) mov add movsb (bad) push sub (bad) rex.X pushq (bad) je rex.X addr32 and rex.R rol add (bad) repz retq jmpq sub mov rex.WB data16 lret xchg addr32 in xlat (bad) xchg mov xchg push push adc stos sbb cmpsb rex.R in (bad) rex.XB xor xor fnstenv sub (bad) cmp pushq stc sub negl cmp or cli sbb lock insl rex.WB cmpsl (bad) push add fisttp (bad) mov jne pop pop ja mov mov mov adc fcompl cmp (bad) xor (bad) mov (bad) std sbb add add or or xchg (bad) xchg mov rex.B xor fiadd xchg test or jns add jne rcll pop icebp mov (bad) test mov cmc imul stc jmpq cmp sbb shll mov lods sbb (bad) test (bad) in sbb (bad) push or xchg sbb jmpq movabs movslq mov movslq mov callq out xlat or or mov (bad) lock (bad) jmp rex.WRB rex.RB push mov pushq cmp mov adc (bad) fidivl jrcxz push cs (bad) (bad) (bad) sti xor xor push (bad) (bad) (bad) (bad) sbb movabs adc lods scas mov (bad) lcall adc clc cwtl xchg mov rex.R adc pop leaveq cld movabs mov out (bad) mov insb (bad) jno xchg add mov or rex.R mov cmp hlt mov jae rex.RB jne gs je rex.WR outsl outsb push gs imul movabs cmc cmp jmpq jmpq je cmp clc cmp jno je jmpq jmpq bt repnz jmpq pushfq outsb mov or fistpl (bad) test or mov mov pop nop adc (bad) xor (bad) pop rex.WRB sbb decb mov cld xor mov sub movabs (bad) rex.WR rex.X mov mov push test (bad) (bad) std jg (bad) rex.WB rolb (bad) fldl add add in or (bad) pop mov insl and sub sbb sub push loopne shl mov sbb js (bad) cltd out std (bad) mov scas add (bad) xor fisttp loopne mov mov (bad) fnstcw and sar icebp out out sahf js sbb (bad) enterq xchg fisttpl js addr32 xlat jae push cmpsl mov xor jns sbb outsl fwait out in rex.W pushq (bad) push out cmp sbb jno adc sbb jbe insb (bad) mov rex.WRX push (bad) movslq data16 jno sbb movsb or sbb xchg ds jb sbb (bad) jle sbb jmpq push xor adc jg test mov out (bad) lret cmpb push leaveq cmpsb fisttpl push sbb addr32 adc (bad) mov jbe mov out retq movabs cmp outsb (bad) jge (bad) sarl nop sub push icebp pop xor (bad) testl jle in mov pop mov test loopne retq wrmsr insl (bad) jle sbb sahf movabs jle sbb xor je push jg adc or sbb pop mov add repz sbb pop or addb lea addb sbb pop add cwtl rex.XB sbb mov jmp or int3 xchg sbb (bad) pop (bad) xor lea add mov rex.W mov or (bad) (bad) (bad) adc jnp (bad) (bad) ljmp cmp movabs and sbb rex.WXB pop rex.WRX jae rex.WB movsl test roll (bad) xor xchg test imul (bad) pop add mov imulb pop sub push adc shlb xor fldenv jnp mov or (bad) test rex.WRX sub rex.W retw std movsb sahf mov mov movabs adc xor mov xor pop adc pop jle pop cmc (bad) xor mov adc in std mov cmp jmpq add movabs adc mov push mov cmpxchg (bad) xchg imul sti rolb jle (bad) sbb leaveq (bad) adc stc std xchg repz push callq (bad) out fldcw mov nop mov or out ficoml loopne mov lcall clc pop add scas push (bad) (bad) xchg jnp xchg cmp cmp pop jmpq pushfq rex.X mov ss (bad) (bad) std or pushq (bad) std clc jp jle data16 and xor add add imul jmp hlt adc fdivrp add xor mov add pop test sub insb sub xorb loop loop cmpsl scas xchg sbb push outsl adc (bad) pushq cmpsl pop repnz mov pushq jns jmpq jmpq pushq jne pushq jmpq icebp cwtl rex.X cs (bad) pop sub lret sahf (bad) es sbb xorl iret sub andb rex.R cmp xchg push mov rex.RX retq mov mov (bad) sub nop cmp js (bad) js cmp xchg movsb sbb (bad) (bad) (bad) stc and in mov and sarb stos adc shrl cmpb push adc js insl (bad) (bad) add mov or cmp cmp notb jge out rex.WRX or (bad) sbb push mov loope jg rex.XB xchg mov mov xchg clc xchg rex.RXB mov outsb (bad) mulb icebp lahf cmpsb jnp imull adc stos out in gs fcos in and pushq xchg movabs fmull adc mov hlt rex.WXB xor mov sti (bad) or insl push mov movabs mov xor jno clc fistpl pop rol add push or jb sub jnp or mov shl jg (bad) (bad) (bad) (bad) int3 or imul xor mov out cwtl js (bad) pop xchg andb in pop lahf inc mov in retq jmpq push jg (bad) (bad) (bad) outsb or decb (bad) (bad) (bad) callq std loop data16 scas fistpll rex.WXB imul (bad) mov repnz in jle pushq pop mov mov test mov jp jo push sub rex.WB mov (bad) add jp jne clc test cmc movb clc cmc cmc bt test jmpq je data16 icebp (bad) bsf push neg cmp sbb mov test test sub jmpq pushq stc stc cmp cmp jmpq jp pushq jmpq ja jbe bt clc imul test add jmpq cmc test or jmpq jne jmpq setbe lea jmpq callq clc test test sub jmpq cmp movsl (bad) xchg shrl rex.RX (bad) mov fstpt xchg add shlb (bad) incb std stc enterq xor sbb (bad) cmp movsb (bad) (bad) pop jno rex.R or mov icebp sub cmp rcrl jb (bad) pop sub test (bad) (bad) (bad) std xchg cmp jne add add sub mov sbb stc retq test andl (bad) stos mov mov cmp scas xchg mov test int sarb mov mov fnsave insb (bad) cs (bad) sub callq retq in sbb add push addb push cmp rex.RXB rex.WX xorl ss adc fcomip xchg cmpl pop (bad) nop rex.WR ds pop mov iret lret (bad) int3 cmpsl mov shr movabs cmp cs (bad) (bad) sti addr32 add (bad) (bad) (bad) (bad) push and jle (bad) and rolb and movabs sub rex.X xchg jg add (bad) movabs pop fwait mov (bad) xor jl xor push (bad) rsqrtps retq xchg sbb (bad) (bad) (bad) lcall cltd sbb (bad) int3 stos pushfq rex.X rclb or or sub jns imul gs jmp or imul clc pop (bad) (bad) jns sub popfq mov rex imul jmpq jmpq jae cmp stc stc sub jmpq sub cli int jg scas push xor imul rex.R mov fcomi in rex.WRX sbbl pushq (bad) (bad) std jns and xor rcrb (bad) retq xchg (bad) or leaveq and jbe (bad) pop adc in xchg mov or jge lods sbb pushfq sub and icebp cmp insb rex.RXB xchg (bad) (bad) (bad) incl rol (bad) in rex.WB (bad) jae (bad) fidiv xor xchg clc (bad) adc sbb mov xor (bad) xorl out mov (bad) out jnp shrl pop mov rex.X jge fstps (bad) fwait lahf and add push je and (bad) mov xor xor stos rex.RX out sbb rex.W pop jbe sahf and jle movslq and (bad) adc xchg mov and (bad) cmp fstpt jp pushq (bad) (bad) stc add std subb (bad) sbb add shll (bad) movsl mov mov movabs ja scas (bad) (bad) (bad) (bad) popfq adc in retq jg int (bad) pop pop adc test add add mov adc mov jns test callq sub (bad) sti push jrcxz mull push rex.RX mov mov scas (bad) sbb adc (bad) cltd sbb mov rex.XB punpckhdq xchg push lods push pushq mull jno pop jge (bad) pop (bad) cld push push xchg retq mov (bad) enterq pop je (bad) retq xchg sbb out rex.X addr32 js cmp lods ss add (bad) xor icebp rex.XB push hlt sbb (bad) xor rex pushfq or std xchg lods rex.RX mov jne and stos fildl fidivl sbb lods test push rol addr32 gs (bad) (bad) std sbb add add or (bad) rex.B xchg jl insl (bad) mov imul rorl std lea fimul or retq (bad) mov adc mov rex.XB (bad) mov sub cltd mov add sbb (bad) cmp rex.WRX popfq cltd fidivrl rex.WX and add cmp sbb pushq stos fadds sub xor jrcxz leaveq out negb xchg enterq stos sbb pop cmp xchg xchg loopne loope adc sub xor push (bad) loope outsl mov rex.WRXB (bad) lret (bad) jae (bad) (bad) (bad) sti std out push out (bad) (bad) (bad) (bad) jmpq fcompp (bad) jae mov (bad) cli in rex.RXB add add imul xor or (bad) (bad) xor std add pop out jnp (bad) push (bad) (bad) rex.WRB mov or xchg or xchg adc cmp mov mov (bad) jrcxz and mov (bad) pop add ja out cmpsl imul movsl sbb fisubrl popq rex.WRB cmp (bad) icebp movabs pop sbb xchg int cmp mov idivl push add push sarb xor insl adc insl repz xor outsl pop mov shr lods (bad) (bad) or (bad) retq in rex.WRX rex retq push roll add mov imul rex.RX (bad) sub (bad) xor rex.R mov (bad) or vfmadd132ps lods sbb in xlat int3 cwtl jno clc hlt sub stos adc lahf adc (bad) std sbb add add or (bad) adc (bad) mov xor (bad) rex.B ds (bad) (bad) pop std cmp hlt xor rex.RB sub lea mov xor cmp in adc pop (bad) xor xor jmpq lret jmpq clc jrcxz sub cs rex.RB jmp sbb lods (bad) jo pause cmp mov mov insl lock mov (bad) mov js sub nop movabs test mov ja (bad) (bad) sti xchg jp mov (bad) (bad) (bad) (bad) jg std cld cli scas out rex.B (bad) jo xchg (bad) (bad) incl (bad) cmp callq pop test (bad) cmc xchg jl xor and sbb enterq ds jg rex.RX sub insl outsb mov rex.RX mov (bad) (bad) jmp xchg (bad) pop clc rex.RXB push jbe pop lahf fcoms fistl or es insb je (bad) xor add rorb cmp ffreep adc mov xor pop loopne (bad) repnz mov ss jnp rex.XB (bad) movabs fisubr movslq jmpq rex.WRX ds push cmp iret pushfq xlat fwait or sub cmpl stc in rex.RB xchg add (bad) pop fnstsw (bad) (bad) sti loop stos or (bad) (bad) (bad) dec movabs push (bad) (bad) mov imul int or add add sti xchg (bad) (bad) adc cmpsl fimull (bad) insl adc (bad) (bad) sub sub cmpsl cmc xor jns (bad) xor popfq pop ss lods add mov cmp in mov rex.W lock jae jmpq jae data16 icebp add (bad) and btr mov dec (bad) icebp inc mov sar mov stc xor jmpq jmpq ror test xlat test ja shrl fiadd sbb out cmp xor cld fstl adc jno (bad) xchg rex.WB (bad) xchg push mov movslq add and setno mov sub mov (bad) rcl imul (bad) rex.XB push xor sub or ja mov movabs and (bad) sti callq (bad) (bad) (bad) (bad) mov fadd (bad) adc jle rex.WRB push test or add add fsubrl sbb cmpsb jns repnz cmpsb ds cmp jno leaveq cld pop ja int add sub jmp stos test mov flds test js movabs xor mov mov rex.W jmpq push lret icebp cltd rex.RB (bad) movabs (bad) (bad) test (bad) (bad) jmpq mov adc adc (bad) (bad) rex.WR sub jnp rclb insb rolq out xor jp (bad) pop xchg scas mov fmuls fwait (bad) rex.WXB cmpsb fistpll sbb xchg pop xchg rex.WRX (bad) mov rex.WX mov cmp sbbl jmp (bad) (bad) (bad) outsb and xchg sub (bad) clc insl movslq cmp (bad) out xor or movsl scas rex.W (bad) or (bad) scas sub (bad) lods and enterq (bad) cmp loop lods or mov or callq and (bad) xor cwtl push mov rex.WB (bad) jb (bad) jmpq test jmpq cmp jmpq cmp jmpq push push mov add fcmovb mov js xchg leaveq mov rex.R shlb xchg (bad) repz adc lea jrcxz pushfq rex.WR jle sub out pop rcr icebp cmp push outsl or mov add rex xchg out rex.B insl sbb pop pop jrcxz (bad) (bad) (bad) sti repnz or rex.X (bad) (bad) (bad) fiadd jmp cld lock lea mov test push cld xchg mov (bad) push cs js (bad) cmp loop out pop xor imul rex.X fs or (bad) ds rex.WB ffree xchg imull retq jg (bad) xlat mov imul lret imul cmpsb cwtl mov rex.WX rex.WRXB data16 sub rex.WB (bad) pop sub add (bad) mov outsb or mov mov int mov mov clc mov sub xchg cld pop rex.RXB and add (bad) mov movsl (bad) jo fisttp mov xchg outsb push cmp cmp jae adc sbb hlt rex.WB cs (bad) xor repz sbb (bad) mov decb (bad) (bad) (bad) ljmp mov stc lahf icebp pop imul and leaveq data16 (bad) je (bad) in mov xchg loopne xchg mov (bad) xorl outsl pop adc xchg or or addr32 lock add mov cmp sbb mulb rex.X lret cs jg and (bad) jmpq adc jmpq lea mov btc mov sub sets movzbw movzbw jmpq jne cmp test bt movb cmp test jmpq clc clc imul cmc add jmpq mul mov adc cmp jb xchg callq mov (bad) xchg ds cli xchg push add (bad) icebp imul (bad) add adcl adc stos mov pop mov sbb add test and outsb sub push cmc (bad) jle jns and lock (bad) (bad) (bad) sti scas rex.WRXB sub (bad) (bad) (bad) (bad) pop sbb lret sub (bad) pop cmp mov pop pop mov stos rex.WR out lret leaveq pushq pop (bad) add add cmp xlat adc jg xchg lret (bad) ror stc cld insl mov pop mov movabs add push rex cltd add or mov scas rol (bad) enterq mov int3 movabs xchg sbb insb mov (bad) ds cmp lahf in xchg movabs ds mov lahf adc cs icebp icebp cmc fwait pushfq rorb mov (bad) movabs add (bad) js (bad) adc and in pop mov xor sbb (bad) je callq jrcxz retw push or movslq rex.WRXB xchg (bad) imul mov (bad) (bad) cld ss loope cmpsl (bad) (bad) (bad) jmpq movsb or sub std popfq icebp pushq (bad) push or sti jnp cmp movabs pushq rorb popfq (bad) pop add je add movabs add jns jbe add add je rex.W push (bad) sub cmc add sbb sub (bad) gs (bad) cmp jrcxz xchg mov add movabs jno cmp mov rex.WRX mov xor add test jmpq mov bt cmc jmpq xor lea add retq movsl mov or mov (bad) (bad) enterq pop jge xchg cmp stos sarb test sub xchg adc callq add cltd adc mov jne mov rex mov mov or bnd pushq imul (bad) sti add movabs imul mov add mov xchg pushfq rex rex.WR dec outsb mov (bad) mov hlt rcrb rex sbb xor lods sub (bad) xchg (bad) sub imul lret ds push sti xchg cld pop rex.X adc and mov xchg sub in jmpq ds imul add (bad) loopne mov sub cmp (bad) in jp rex.R rex.RX rex.WRX mov xchg xchg rex.RX stos and (bad) cli xchg rcl (bad) rex.WR (bad) or rex.RB xor pop int and mov mov mov xor pop pop adc sti ja (bad) cmp (bad) (bad) sti movsl popfq std pop (bad) (bad) (bad) (bad) nop lret out and pop lods jno mov (bad) mov rex.W push rex or lret lock add pop (bad) test iret mov cmp push (bad) rex.RX cltd push jae pop icebp (bad) fs fdivrp (bad) rex.WRB add and xchg psubq fbld cltd cwtl pop mov (bad) jnp movabs clc xchg mov pop cld adc or push hlt add adc rex.RXB jns cli (bad) mov push rex.B mov negl jb lea or sub (bad) neg mov xchg jg pushfq int insb test adc add js stos rex fs rex.XB push pop test rex.XB notb mov cmp fcmovnb (bad) lea xor or pop add jle pop sahf scas lret mov (bad) rex.X lock out (bad) xor (bad) (bad) clc out std orb or (bad) adc sarl ja (bad) (bad) sti pop (bad) (bad) mov (bad) (bad) (bad) incb jne (bad) or rex.WXB jno rex.WRB adc (bad) (bad) (bad) inc (bad) and (bad) (bad) or mov lods pop mov (bad) adc data16 jp (bad) (bad) rex.WR gs movabs mov jge mov rex.RXB fistpll cwtl (bad) xchg rex.R push in add push je jmpq bt bt imul clc jmpq shlb movabs (bad) cld (bad) pushq cwtl cmp mov mov lods cmpsl sbb gs (bad) adc cltd mov jae clc jns push test (bad) xor xchg jrcxz ss (bad) mov test xorl xchg (bad) cmp (bad) cmp jb cli fisttpll adc outsb (bad) xlat xchg mov mov (bad) outsl jg or pushq mov (bad) (bad) sti cld out getsec (bad) (bad) (bad) (bad) out xchg cmp mov loop (bad) lahf mov cmp pushfq cli movabs mov (bad) or jrcxz out movabs fsts jrcxz rcll mov lods es insb (bad) fnstsw mov int lahf mov push push insl insb shrb xor sub mov mov stc lods (bad) pop rex.WB ss imul cli movabs jb (bad) sbb out rex.RB rex.RXB es (bad) (bad) and rex.WRX es mov xor imull or jg outsb mov fisttpl out sub (bad) mov (bad) push (bad) xor mov stos add or sub mov mov cltd pop xchg sbb jmp xchg xlat (bad) push (bad) ficoml in (bad) cli push xchg loope (bad) (bad) sti jo (bad) rex.WXB (bad) (bad) (bad) (bad) pop (bad) jmp adc xor cmp rex.XB (bad) (bad) (bad) fcomi cmc cld rex.WR cmpsb rex.XB push mov add subb push xor cltd sbb retq and jg xchg xchg enterq jae mov (bad) lock jmpq push sub imul jp out (bad) dec test shr jmpq callq sbb add setne mov jmpq jmpq (bad) sbb or cmp pextrw fs sub (bad) outsl pop fwait xchg sbb xor out clc ds xchg cmpsl push retq (bad) rex.WR movabs cmp movabs movslq rex.RB clc xor sbb sub add xchg fcmovu xor rex.WRX sbb (bad) addr32 adc lret jmp cld clc (bad) jle pushq mov (bad) jge (bad) (bad) sti jmpq (bad) (bad) (bad) (bad) (bad) jmp jmp nop (bad) adc push jb sub (bad) add add push callq (bad) (bad) mov nop sbb test test scas subl movslq sbb lret rex.WR sbb loop adc mov push callq stos in (bad) jmpq ja bt test adc shr sub neg add rcl lea dec jmpq xchg mov mov (bad) jae sahf pcmpeqb insb (bad) jg add retq loope (bad) sub stos rex.WR cmp rex.RXB rex.R rex.WRXB jrcxz rex.WB out pop pop jnp insb rex.R fs push add int3 push fdivrl mov movabs rorb pop pushfq popfq rex.B addr32 (bad) xchg sti mov cwtl rex.WRX xorl (bad) (bad) (bad) std or jae (bad) (bad) (bad) std jne (bad) rex.WB sarl add add ja out mov movabs sbb rex.RB (bad) adc adc cmp (bad) movabs cmp pop ds add pop mov mov add (bad) sahf lods test rex.RXB push pop lock add cmp bt clc stc xor jmpq jne bsf add cmc bsf mov jbe test bt bt cmp jmpq mov jmpq int3 sahf adc or mov ss jb imul cwtl sbb jmp xchg test (bad) stc (bad) or sbb mov (bad) mov mov cmp sbb xor xchg imul jne shll add cmc add sbb cmp sub sub ds ficomp (bad) cli jmpq (bad) (bad) (bad) std (bad) lret jne fwait mov cmpsb jge and scas or jne sar pushq and xor lock lea pop mov test (bad) (bad) pop out out fsubrl sub lea cs out xchg retq cmc pop xor push sbb (bad) (bad) jmpq add rex.WB rex.RXB int mov loopne push out fidivl loope sub pop push repz test (bad) mov and (bad) cmpsl scas adc (bad) (bad) sbbl push pop (bad) bt cmp or jmpq jmpq rex.XB (bad) sub (bad) lock scas rex.WR iret jrcxz outsb (bad) pop jge in mov jb ds xchg mov jg jns sub (bad) insb add adc div (bad) lret (bad) stos lret (bad) idivl mov mov (bad) jo lock jrcxz movb push jle (bad) add sub lods out and (bad) add pushfq out rex.WB xchg repz lods test nop callq jg (bad) imul (bad) (bad) (bad) sti (bad) cmp (bad) (bad) (bad) (bad) rex.RX (bad) repz xchg add cwtl rex.WR (bad) callq add add push rex.XB rex.WRX callq xchg movsb sbb mov lahf fwait lods test (bad) pop or scas rcrb jb rex dec movsb sarl fidivrl sbb insb enterq xchg mov and adc test iret (bad) callq int3 xor jmpq jne clc test clc movb clc test jmpq (bad) (bad) adc mov imul sub rex.WRXB punpckhwd cwtl jb sub in sahf (bad) jmpq and in cmp xor cmp clc jmp (bad) sahf mov add rex.WR mov test xor ffreep rorb mov out cmp or xchg (bad) mov xor pop rex.RX jnp mov (bad) (bad) (bad) cld fs or rex.WRXB sub mov push repnz push test pop rex.WR ja ja push mov fst roll add js or int3 xchg and movb out xchg stos cmpl loop (bad) pushfq leaveq outsl or stos cltd mov jrcxz rcr (bad) movabs pop jo pop xor cld (bad) clc movb stc bt stc test jmpq add sub clc and adc lret lods or xchg (bad) or stc sahf stos xchg rex.WRX (bad) leaveq imull (bad) sbb rorb and (bad) lret fdivr adc (bad) (bad) pop pop subl stos lahf sti movabs xlat mov jbe shr fsts retq (bad) (bad) cld pushq (bad) (bad) (bad) jmpq rex.R insb divl lea rex.WRB sbb addr32 jno js fild (bad) sar add add or push shl (bad) rex.R pop mov adcl mov xchg scas and fnstcw and sub rcl mov mov rex.WRXB pop clc mov fdivr (bad) stc mov stc stc or add mov seto jmpq jae jmpq jmpq mov neg rol mov inc or sub not xor mov lods jmpq shld and sbb and mov test test cmp and cmp add cmp add cmc jmpq jmpq bt test jmpq ds (bad) jne cmp mov in mov decb stos (bad) stos jl int mov jp pushfq rex.RXB (bad) mov add jno fmul rex.R movabs rex.R sbb (bad) sub (bad) jne (bad) xchg sbb (bad) (bad) rorb push (bad) (bad) mov lods pop leaveq out (bad) sbb out fmull addr32 xchg rex.B (bad) (bad) (bad) sti popfq push (bad) (bad) insb (bad) (bad) (bad) decb lahf cmp or fwait (bad) rex.B xor imul iret pop pop cli (bad) movsl pop lock (bad) lahf add xchg rex.WRXB fcmovb sarb (bad) rorb popfq std rolb mov pop xor bnd ja jne jb cmc clc cmpb jmpq clc movb test jmpq rcr adc add cwtl and add add pop stc (bad) add add add rex.RB add (bad) adc add add add add add add add add add add or add add and jmpq sub mov adc add or add add add (bad) add add add adc add mov add add add and add add add mov add add add adc add icebp (bad) add add add sub clc test cmp jmpq movabs xchg int3 (bad) and pop jg add adc mov ds (bad) repnz adc sbb loopne je adc (bad) stos jl xlat jo callq out (bad) or xchg (bad) jge out (bad) test jb rex.WRXB rex.R loope rex.RB adc (bad) (bad) cld (bad) (bad) and insl (bad) (bad) (bad) callq mov rex.R cltd mov jne out or (bad) rex.WRB popfw adc add callq xchg mov int and add mov jge mov xor movabs cmpsb add sbb lods xchg adcb cwtl mov sub rex.RX mov mov mov stc mov pop rex.X rex.XB mov xorl jbe out incl add rex.WR sub (bad) mov outsl gs addl loop sbb mov jnp rex.RB mov jno jp mov and loope mov xchg (bad) outsl pop (bad) cmc in cmpsb (bad) in je,pt and out jns (bad) stos (bad) mov jno pop cli push and mov sub cli (bad) es (bad) (bad) (bad) out rolb mov cs mov (bad) fistl jo jnp mov movsl adc cmc in or subl adc (bad) pop clc je sbb (bad) mov xchg add cmp mov adc (bad) xor (bad) cmc push adc adc (bad) (bad) mov add add and xor cli xor fwait decl movsb rex.WRXB gs rex.RXB xchg in rex.WB rex.R rex.XB jl vminps sub cmpsl int roll mov pop stos cmp sub rex.RXB (bad) xor out out cmp and (bad) sub cmp push jl rex ds lock push sahf rex.WXB or xchg (bad) jle push mov adc and xor (bad) lods fwait or out mov lea imul imul negl (bad) sti (bad) push cli xor (bad) (bad) (bad) std icebp jg rcl rcrb adc cltd (bad) pop mov sahf jo rex.WB fsubs and push xor (bad) mov scas (bad) (bad) insl lods (bad) imul pop fs ss fcmovnbe (bad) jne (bad) (bad) callq mov retq stos and in sub callq adc rex.WX add mov rex.WB repz movsb iret and (bad) mov adc xlat (bad) lock and subb jg lods add (bad) enterq fdivl adc out (bad) cmc (bad) cmpsl pop jns jae mov mov rex.R rex.RXB rex.WRB sub in scas in (bad) jle rcrl mov mov fs (bad) pop add ds sarb sahf (bad) sbb es movabs callq (bad) (bad) (bad) (bad) decb (bad) (bad) (bad) incl adcl scas lods mov callq (bad) stc add ds repz (bad) cmp xor cmpsl shrb mov repnz mov or xchg sbb addr32 jge movslq or std (bad) jae imul shrb popfq (bad) fdivrp mov (bad) pushfq clc jrcxz imull sub fiaddl xchg cmp test mov mov repnz clc fwait lods mov jl sbb and xchg jg rex.B push jne or movabs or enterq jnp outsl fiaddl push fnstsw loope lret push xchg insl mov sbb lret pushq addl movsb sbb (bad) (bad) (bad) decb push insb (bad) lahf mov retq not fiadd sti mov ss (bad) mov pushfq sbb and mov sbb pushw (bad) fs mov sbb (bad) ss test adc mov pop (bad) fldt pushq clc pushq jnp cmp outsb clc scas xchg cmc sub test movabs mov (bad) movabs sbb mov and (bad) es fstl sub mov (bad) mov (bad) or (bad) xor out add jb cs sbb jp (bad) test or mov imul mov rsm int3 add shrl adc sub pushq rex.WRXB cmpsb sbb ficompl ja rex.RX (bad) (bad) sti lahf jg lahf cmpsl (bad) (bad) (bad) decb cs cmp xor (bad) nop (bad) add or scas imul bndldx in fidivr xchg xchg cmp mov jmp gs movabs sbb xchg and (bad) test jmpq or jmpq push rex.RB push rex.WB rex.WRXB rex.WRX cs insb add (bad) cmc bt test cmp jl ja rcr sub data16 (bad) add or sub cmp movsbw mov ror cmp setge mov clc clc cmc repnz jp jne cmc movb test jmpq jmpq jmpq mov bswap movzbw pop retq jmpq hlt imul cltd ss psubsb mov sti pop pop add neg pop lock addr32 mov stc fstl xor mov jrcxz rex.WRXB pop lahf (bad) nop imul mov sub rex.WB pop (bad) cmovae cmp pop mov adc sub idivb jb loopne push clc in (bad) mov rex.RX (bad) sbb mov (bad) (bad) or fdivr (bad) (bad) sti sub mov xchg (bad) (bad) (bad) (bad) movd pop retq (bad) add mov rex.W je jmp (bad) (bad) (bad) (bad) callq insl gs and in movsl add push vrcpss push rex.B or rex.WRXB jrcxz xor in or push icebp (bad) mov movslq insl pop lret jmpq rcll shrb (bad) (bad) (bad) scas or (bad) or sub mov add cli scas jo orb ja (bad) je cli pushfq (bad) and rex.WRX cs test (bad) (bad) incb cmpsb (bad) pop rex.B fs insb outsb mov mov adc or pushfq (bad) adc (bad) (bad) (bad) std movabs adc or (bad) rolb sbb cltd ds jo rex.WX rex.WX or leaveq out xchg (bad) mov push jo (bad) leaveq (bad) repnz sbb scas or mov fs pushq (bad) repnz add callq movabs cmp push (bad) mov shl (bad) cmp (bad) repz add clc out nop negl xor rex.WRXB or mov push test add pop cli out cs cmp flds enterq pop add pop notl hlt xor rex.R (bad) (bad) cli pushq (bad) (bad) std cmpsl (bad) sbb sub and xchg mov xor js test callq (bad) (bad) xchg icebp test xor (bad) push stos notb stos xor out jbe or pushq adc stc cltd add (bad) (bad) jrcxz sbb (bad) or fdiv (bad) and (bad) (bad) (bad) repnz data16 gs hlt push (bad) xlat adc jge (bad) rex.B data16 (bad) es push shll movabs mov sub cmpsl (bad) outsl add push jmpq pop pop adc pop push or sub callq add or std mov mov push movabs pop sbb (bad) stc retq (bad) pop xchg std jmpq (bad) int (bad) jns movabs insb stos std movslq jle push or adc lahf cmp (bad) (bad) (bad) cld jnp (bad) nop mov (bad) (bad) jmpq or xor sbb (bad) sub imul test insl lret jbe add add (bad) fcoms lods lea cmp pop jl test rex.WXB and sbbb (bad) mov callq jg fs xchg std jns rex.WRXB sbb (bad) (bad) mov mov pushw jrcxz jae bts mov sbb mov cmc test sub mov cmc bt sub clc cmp cmp repnz jmpq mov lods cmp test neg jmpq je jmpq push add out jp add sbb loopne movb scas int3 rex.WR sub mov mov rex.X pop imul lret xchg jne jle mov and movsl sbb mov rex.WXB fwait adc cmp sub sub jp (bad) jae mov (bad) jle pushfq out rex.WR ds (bad) xchg (bad) (bad) (bad) cli cmc xchg (bad) (bad) (bad) std loopne jge sub out sbb test sub (bad) cmp int3 movabs rorl (bad) (bad) dec xchg (bad) xor (bad) cli loopne insb jne fs cwtl out jns sub movabs callq imul push repnz test jne jbe pop fisubrl add cmpsl fs cmpsb mov and lods ja jmpq cmc add jmpq clc add jmpq jmpq callq jmpq je not not mov sets mov movzbl jmpq pop sub (bad) (bad) mov out movabs test data16 scas add popfq rex.X (bad) cmp std mov (bad) rcrb mov mov test cmpsb rex.B xlat outsb jl enterq je sub lods jbe xchg lret push mov sbb (bad) adc (bad) gs adc cld rex.B xor (bad) or test xor mov (bad) (bad) sti xchg (bad) je cmp jmpq (bad) rex.XB xchg cli fistpll mov add add add cmp mov ds (bad) int3 in rex.X rex.R mov push cli out mov retq outsb shrb in in xchg clc (bad) push nop int3 ds in jbe enterq and jmp (bad) sub cmp cmp jmpq jne bt jmpq jp jne bsf mov sub cmc sub bsf rcl btc inc mov test test sub clc pushq cmp test jmpq pushq jmpq callq sbb sbb btc add mov shr rol mov stc cmc jmpq add jmpq jmpq je cmc cmp cmp jmpq dec std popfw jmpq add sbb push fld iret imul out or fwait movabs jno mov adc fcmovu add pop jge lods test sti (bad) jbe adc in cmp xor scas push rex.B rex.X (bad) rex xlat je stos add popq pop or jge or test mov mov imul mov mov sbb (bad) (bad) cli cld mov (bad) (bad) std out (bad) shr lock push enterq addr32 (bad) movl fcoml gs (bad) mov (bad) (bad) sub (bad) (bad) callq lret mov rex.WR mov stos xlat (bad) cmp mov xor push (bad) fdivp rex.RX xchg stos mov xchg mov test jne sarb (bad) jl mov pushq jle push (bad) add incb mov cmp fsubs pop xchg movl add test pop jg jmpq mov jp cmpsl push rex.WX ss mov jae movabs pushq jge pop pushfq (bad) rex.WR rex.B sbb sbb jbe (bad) xor push push mov add retq cwtl fnsave jb insb (bad) rex.WRXB (bad) xchg stos or or lods mov adc mov (bad) adc (bad) (bad) or adc (bad) fidivl cmpsb xchg cld rex.WRX jb jp loop mov pushfq xchg int3 data16 (bad) (bad) std sbb add add or movslq lahf rorb (bad) fistpll add jne ds jge sub add (bad) fimull rex.WRB mov imul jmpq jno jne xor xor lea mov or and not shr add shr and mov jno stc clc cmp test jmpq jmpq jne bsr (bad) lock bsf rcr or mov shr inc sar rcl add cmc jmpq mov (bad) cwtl rex.B rex.WXB ds or (bad) repz xor outsb push stos add rex.WRX or xchg rex.W addr32 int sub mov fcmove cmp shrl ja mov popfq jnp xchg loop int3 out rex.RX or test push rex.R and sbb notb test (bad) xor hlt rex.WRXB rex.R (bad) (bad) (bad) cld cmpb xchg scas (bad) (bad) (bad) ljmp xchg imull add mov xchg add xchg jp or add add xlat (bad) jb rclb mov cmp shlb imul (bad) hlt xchg test scas in rex.WB add mov insb pop (bad) and out decl (bad) fdivs out (bad) stc cmp jno jae shrd mov adc shr lea bsr mov bt bsr mov cmp jmpq jmpq mov jmpq jne bts btr rcr shr sub clc mov clc add jmpq jmpq in scas sbb (bad) push pop mov je or lods mov nop add (bad) (bad) retq loopne add jno fsubrl imul ds movabs rex.X ds (bad) imul push shrl mov (bad) (bad) std or cmp fldcw cli mov pop rex.B notb and ds outsb adc (bad) (bad) decb movslq clc add add or xchg rex.RX xchg test push cmpsb mov (bad) cltd mov ficoml xchg pop cmp mov icebp pop int3 pop (bad) int3 mov xchg (bad) mov outsb fisubr mov jmpq jne clc movb bt cmc jmpq sub and jae sub rex.WRB repnz test mov out shrl xor xchg rex.WX (bad) mov (bad) mov lock decb or rex.X jne pop sub jge incb cmp push mov lret nop or xor (bad) add scas (bad) sarl (bad) std test mov (bad) sbb rex.XB jb stc int3 test pop lahf rex.XB mov (bad) (bad) (bad) sti (bad) (bad) jno rex.B (bad) (bad) (bad) jmpq out rex.R pop rex.X movabs add repz pop cmpl out rex.XB movsb mov jo and insb lret (bad) test stos mov test rex.X mov lretw sbb sbb (bad) (bad) rep mov bswap not pop jmpq movb bt clc test jmpq add rex.RB je jb movslq jae add and cmp jrcxz es mov add lahf and imul mov mov fwait pop fisub (bad) pop test (bad) sub cmp and xor rex.WRB mov rcl in sbb jo jp (bad) rex.WRX cmp cmp retq push (bad) cmp mov pushfq cltd xchg rex.R rex mov push out (bad) (bad) (bad) sti sbb jl (bad) (bad) (bad) incb mov pop or rex.RX (bad) (bad) incl pop adc (bad) cmpsl mov outsl cmp add (bad) (bad) mov rex.WR cmp (bad) jns shrl sahf scas mov (bad) test (bad) sub push movabs mov jo or in decl test in decl mov mov jmpq and sti (bad) rex.XB add movabs in bts movabs xorl scas adc pushfq rex.W mov xchg stc pop stc xchg jmp jne adc (bad) sbb cs (bad) push (bad) pop cltd outsb (bad) mov repz xchg (bad) lods insb sub rex.XB mov adc mov pop pushq jbe leaveq rex.R rcrl (bad) std or (bad) rex.WB (bad) (bad) std scas pushfq fldcw (bad) retq or (bad) pop repnz add or std movsl loope mov retq xchg imull mov lock and (bad) out xchg pushfq add outsl adc or (bad) or loope movabs adc mov fcmove mov mov jl push mov rex.WXB or (bad) lret jno jae xchg js scas sbb pushfq ljmp sub cmp (bad) mov repz pop mov xchg loope sub push xchg cmc in fsubr (bad) and xchg mov jb sub xchg (bad) pushq mov retq outsb repz push push rex.XB xor push adc mov or jl movslq rcrb pushq cmp xchg mov (bad) mov pop cmpsl xchg cli sub sti xchg cld mov push (bad) (bad) (bad) incb xchg (bad) jne adc or mov ds add add jb push out sbb sub or cs (bad) fisttp pop icebp xchg (bad) adc push (bad) pop (bad) cli pop and pop cld fbstp jb sub jns add jmpq ja cmp ror add rcl not add rcl rol sbb stc xchg shrd bsr rcr jmpq (bad) jmpq test rex.XB push test xor xor hlt add pop add mov xor int3 orl imul popfq add in sub mov rex.WB (bad) out movabs addb js scas rex.WX adc rex.WRX rex.WB in ss movsb jmpq out mov in rex.W push imul mov lcall (bad) jge xor test rex.WR add mulb retq push push test mov and rex.X fldt (bad) add add or in cmp (bad) js ds (bad) movsb mov cwtl xor (bad) pop xor rex.WRXB faddl movslq xchg (bad) jno sub cmp (bad) jb cmc stc cmp jmpq in or push mov cmp mov jmp rex.B adc rex.RB fdivr div stos sbb (bad) insb lgs fildl push mov xchg jbe (bad) movabs pop gs xor rex.WX mov and (bad) scas (bad) or (bad) (bad) (bad) (bad) decb (bad) (bad) rex.XB lods adc outsb ds rex.WRX (bad) data16 leaveq pop (bad) adc (bad) (bad) lret (bad) sbb ficom (bad) xchg test push xchg xchg cmc jmpq fsubl movsl js movsb lret scas push mov insb jne mov (bad) cs fild or rex.B jnp jge cmp movabs jns enterq (bad) adc loope retq mov xchg retq mov xchg in pop pop lcall sbb (bad) (bad) (bad) cld sbb (bad) (bad) (bad) decl adc lahf repz xor (bad) fiadd (bad) movabs add fcomps callq cmp (bad) in sbb add test pop (bad) icebp (bad) and cltd idivb cld imul lods mov repnz stc sub out mov rex.RXB rex.WB gs (bad) (bad) js cmpsb mov fisttp cli pushq cmc enterq loopne sub (bad) clc mov sar sbb neg shr add adc sar cmc mov bt jmpq je clc add clc clc jmpq mov (bad) (bad) fwait mov (bad) add roll (bad) rex.WR gs mov and (bad) (bad) icebp cmpsb lgs or popfq fnstcw movsl rex.XB sbb ja or repz sti cmc cltd outsl jp mov (bad) adc loope pop rex.WRX sahf cmp adc mov (bad) (bad) (bad) (bad) movabs (bad) in imul xor mov add add (bad) (bad) and insb insl adc jno cmp xchg je in sub fadd lret (bad) fadds in jmp and ror test (bad) insl subl jns xchg mov or rex.B xorb (bad) jmpq jmpq jne jmpq cmpsb xor rex.WRXB movabs and fimul mov test sbb xchg and xchg retq pushq cmp sarl ja adc cmc shr rex.WX in pushfq cmpsl fld mov mov or es out jns (bad) (bad) dec and xor and rorb insl shll xchg in icebp jo decl (bad) (bad) scas lea (bad) pop out iret sti movabs add add outsb xor xchg add xlat mov pushq (bad) addb fsubr xchg in rex.WB sub pop addr32 out mov mov sbb test mov ja xchg lcall xchg ja (bad) callq adc add add shld sbb mov bt bt stc clc cmpb jmpq cmp jge jae cmp setle neg clc mov adc xor bt mov lea neg bt mov test test bt xor cmc bt stc cmc repnz jmpq jmpq jmpq xchg xor cld movabs (bad) pop test push mov cmp (bad) pop ds push pop movsl cmp jnp insb pop pushq lods out rolb rex shrl push repz scas cmp mov jbe (bad) mov (bad) sub cmp rex.X add sbb (bad) sti mov xchg scas (bad) (bad) (bad) (bad) jbe jmpq in jne movsl fdivrs in mov xchg xchg lea xchg sub rex.W pop mov (bad) (bad) callq cmp roll pop divb es xchg mov (bad) sub imul fstpt and out or add fdivrl cmp xchg ljmp mov jns fdivrs jmpq (bad) fucom cld fildll test mov mov (bad) fidivrl in rcll insb cmp cmp xor rex.WRXB sub add sub rcrb fisub add loopne loope lahf mov (bad) (bad) cli (bad) icebp mov in icebp pop out cmp adc out loopne xor (bad) (bad) std rex.R jnp (bad) imul (bad) jae pushq (bad) rex.WX pop xchg cmc xchg rex.WR cwtl imull and xor rcll adc test rcll xchg test out mov adc fnstcw jle and add imul cs xchg loop,pn add fildl xchg sbb outsb (bad) cwtl (bad) jge (bad) (bad) (bad) inc or rex.RX fstpt push cld iret jmpq add mov sub xor (bad) movabs push sbb (bad) adc jne fwait enterq fs sub (bad) jb jb cmp and mov je sub mov in decl test or mov retq movb cmc cmp stc bt test jmpq (bad) stc xchg (bad) push rex.R pop lret fisub (bad) icebp out int (bad) movsl cli iret cmp add cmp rex.X repnz xlat cmp mov jge callq mov xor cmp popfq sahf sbb out pop lret sub fwait rclb js sbb out add xor in rex.X lock fst rex.RB add (bad) jae pushq xor sbb repnz (bad) (bad) sti jle (bad) cmp (bad) (bad) (bad) (bad) imul cs xor jb cmpsb out sar (bad) (bad) (bad) jmpq mov mov in mov push pop (bad) clc icebp movabs fwait iret and or leaveq lahf cmp jmpq fimul jmp notl and push ja clc jl imul cmc clc cmc cmp add jmpq jne btr mov neg sub movsbw mov bt cmc jmpq rep movsbw movzbw not pop jmpq mov rex mov lret popfq push jno or enterq pop adc adc (bad) fs pop adc or sub jg pop lock retq mov (bad) xchg rex.WRB rex.WB mov callq xor cli pop rex.X fimull (bad) (bad) sti popfq jo gs (bad) (bad) decb out in or insb sub xlat loope out xor shl in rex.RX popfq rex.WR rex.WXB cmpsl testl leaveq je mov int3 (bad) lods repnz mov adc add cmpsl mov (bad) pop rex.WR add adc (bad) mov rex.WX retq adc or std xchg add add rex sbb cmp push (bad) pushfq dec popfq or or sub mov xchg mov jl (bad) movabs bt cmc cmc stc sub jb cmp jmpq jmpq jmpq je clc jmpq ja setb sub shld sbb add shrd shr bsr data16 testl and mov bt cmc repnz jb jne cmc cmc jmpq jne movzbl or bt mov rcl xor sub sar mov bt cmp test sub stc pushq cmc cmp jmpq ss xchg scas (bad) push ds xor (bad) pop sub or roll cmpsl rorl jo mov jp imul mov (bad) repnz cmpsb (bad) lea mov (bad) mov nop rex.WRX cmpsl and jo sahf (bad) in cmc (bad) (bad) mov adc xchg cmp xorl (bad) insl (bad) mov fsts fisubl (bad) cmp xor mov adc or pushfq xchg outsl sahf mov int sbb addr32 test adc (bad) (bad) sti rex.RX mov (bad) (bad) (bad) (bad) xor lods pushq mov sbb insl retq cwtl (bad) mov fdivr (bad) (bad) pushq and insb loope in lret rex.RXB mov rex.WXB adc mov jg or retq sbbl adc adc outsl pop rex and add (bad) ds (bad) hlt lock (bad) rex.WRX mov roll (bad) (bad) rex.R rex (bad) rex.WR test shll imul sub jle fbstp mov adc and jae jmpq or rex.WRXB rex.RXB cmp jrcxz rex.W ja gs pushq pushq xor sbb jge xor cmp imul retq adc (bad) (bad) stc (bad) xor rex.WR (bad) (bad) (bad) cli movabs fnstenv and (bad) (bad) cld (bad) pop (bad) xchg (bad) jle (bad) test (bad) rex.WX xchg shrl and xchg pop jmp rex.WX mov js or sbb xor rex.WRX add and xlat (bad) mov adc jns mov jg sahf jrcxz cmp rex.WR and pop scas adc sub (bad) insl lret (bad) insl jno cmp xor mov lcall je jg (bad) (bad) push hlt lock (bad) (bad) (bad) mov add lea stos (bad) sub xor jb jp mov fld adc retq je repz test (bad) sar xchg insl rex.R rex.RX rex.XB int add pop out loopne adc pop mov outsl add (bad) data16 ja fsub mov xorl pop (bad) sub (bad) add add rex.WR cwtl or rex.RB std hlt (bad) jno mov sbb (bad) scas fisub push (bad) rex.WRX xor adc movabs (bad) (bad) xchg adc stos bnd lahf adc shrb (bad) mov lret test btr or ja push movsb sbb sub and mov cmc (bad) in jnp and sub add sti pushfq in and mov push sub int cmpsl xchg (bad) xor mulb mov cmpl rex.WRX in (bad) jmpq jne bt clc cmc test add test cmc clc add jmpq fist data16 andb data16 rex jge push rex out mov (bad) sarb cli or pushfq cld imul rclb pop icebp mov gs insb out pushq and jl stc mov pushfq imul jnp fs orl rex.WXB adc popfq pop (bad) (bad) or fildl mov (bad) retq push cmp in outsb sahf mov lea sbb and je add repnz movslq rex.R mov xor xor je (bad) nop out scas outsb cs (bad) adc sti (bad) (bad) (bad) std cmpsl pop jbe callq (bad) (bad) (bad) jmpq mov pop iret push (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) clc fcomp lods adc sbb retq test imul nopl or jmpq xor jl pop cwtl mov ror imul sarb sbb xor jnp sbb ja rcrl movabs movabs and (bad) ja cmc jmpq jmpq cmp (bad) sbb or sarb mov cmpsl pop pop ja in cmp out mov rex.RXB ficom pushfq int rex.RXB jle sahf std (bad) xchg rex.R push xchg (bad) and sub lods loop (bad) xchg mov mov sub xor adc pop xor lods and movabs adc je insb (bad) mov cmp test mov jle lahf retq mov (bad) (bad) decb (bad) (bad) (bad) ljmp clc add adc (bad) imul fadd (bad) push push clc in out leaveq fild (bad) (bad) pushq rex.X rex.B rex.WB rex.WRB test (bad) std push lods sub sub rex.RX scas test in rex.R mov test mov mov (bad) stc lods (bad) pop in (bad) jmpq jl jne stc mov clc add bt cmc stc clc movzwl sar mov stc cmp add jmpq setge sub bts movzbw stc not add rcl mov clc mov bt clc bt bt repnz jmpq mov jmpq mov pushq xchg rex.R cmpsl xlat test and cmpsl (bad) (bad) (bad) sar jmpq jnp sbb adc (bad) xor pop or notl mov mov nop (bad) rex.R repnz (bad) (bad) movl hlt cmp rex.WRX rex.R test (bad) (bad) sti out lret mov sub fptan lahf and jmp repnz nop in (bad) xor (bad) nop cmc fstpl xchg rex.WRXB add add push ljmpw jb mov mov nop add pop std mov movabs sub xchg mov int rcrl js (bad) fwait imul icebp pop sbb (bad) mov test (bad) jbe movzbl seta mov movzbl movsbw setbe lea jmpq clc clc jmpq jbe rcl clc mov data16 repz bsf add test sub mov rcr test add lea add xor not movl sbb rcl mov clc clc cmp jmpq test jmpq test bt cmp jmpq cmp jmpq clc fisttp jl cmp loope fildl (bad) movsl xchg fs mov cmpsb (bad) (bad) (bad) xor sub mov jo ficom rol imul xchg pop pop sahf add repz ljmp movabs xchg enterq and mov mov jbe rex.WXB mov imull adc jp retw in cltd cmp (bad) loop test (bad) (bad) add sbb (bad) sti add or (bad) (bad) std out test out in jp out shrb (bad) and cs cli (bad) (bad) (bad) jmpq mov mov movabs lahf mov pop xchg mov mov popq push pop cmp shl nop mov xor imul cmc (bad) rex.RB (bad) icebp and sub je shrd jmpq je not btc stc movzbl push adc btc not mov shl stc sub lea lea lea lea jmpq jmpq je movsbw jmpq add add lea mov cmp cmc cmp cmpb jmpq stc bt stc sub jmpq pushq jmpq jmpq callq jmpq jne mov bsf shr movsbl mov sar shr sub ror cmp mov cmc sub jmpq je mov sbb negl or lret add adc and adc push xchg mov jbe test in mov sbb xchg sbb mov rex.R adcb movabs lret mov xchg int xchg or or rex.W (bad) rex.RXB std sub xchg stos idivl (bad) (bad) std xchg loop mov fldt or mov (bad) mov xchg (bad) sbb addr32 rex.B rex.WXB sbb pop mov rex.WRX fbstp stos lea sub sub push (bad) rorl cmp cs js (bad) mov mov (bad) movslq jge mov icebp callq movsb fildl mov sahf rex.WX rex.RX adc fs insl pop adc lahf cld insl mov sub faddp scas push xchg push mov jnp xchg es int (bad) rex.WR push movabs cs fnstenv sbb cmp xorl mov callq enterq (bad) (bad) rex.WXB adc xchg rex.WRXB repnz cmpb mov pushq jo xrelease shlb icebp jp mov pop lods mov clc jp (bad) (bad) (bad) sti (bad) rex.WB loope (bad) (bad) inc jno sbb lods hlt pop icebp (bad) mov add add cli jrcxz (bad) push loopne enterq xorl out mov rex.WR adc xchg push retq (bad) jns imul rex.RB ss sahf push (bad) (bad) psrad (bad) imul lea jmpq not not movsbl pop retq jae xchg mov bt adc rol mov neg mov bt sub test clc repnz jmpq incl out adc fistl (bad) stos pop push mov (bad) xchg not mov jle mov mov xor pushfq or cltd rex.WRXB cmp sbb hlt push or jb (bad) shll and pop lret rex.WRX (bad) fnsave test (bad) stc ja jnp mov fadds (bad) (bad) pop sub ja (bad) mov pop rex.WRX adc jp cwtl repnz mov mov cmp out mov mov and lods sbb movabs or or mov xchg (bad) adc pop sub jbe jae jnp push loop push (bad) fcomps out sbb push and test (bad) decb ror fs mov icebp stos cmp movabs adc lods mov out (bad) mov mov jns sarb sub cmpl movabs scas mov movabs mov mov test cmp jmpq xor je in xchg enterq cmpsl cmp (bad) repz loop scas and xor push jle in out xchg mov xchg rex.RXB mov callq rex.RB (bad) rex.WB fwait mov mov sub sbb xchg es sbb sbb fcmovb push sbb jae rex.WX stos loopne (bad) (bad) std or (bad) push (bad) (bad) (bad) std clc mov (bad) mov xor pop jbe rex.WRXB and (bad) int3 scas jg (bad) lods push stc xchg pop ss add add or (bad) rex.RB cmp imul mov jnp jns push rex.X addr32 sbb popfq sub insb sub cs stos add out movabs mov xchg or xor mov in fisub push mov sbb (bad) mov (bad) mov ja out mov out or xchg push mov and rex.WRX rex.WXB push sbb or icebp xor stos xchg add outsb rex.WRXB sahf icebp fistpll lret (bad) cmpsl out pop rex.RB data16 rex.RX xchg out push icebp adc and sahf pushfq cmp callq test (bad) (bad) sti (bad) js adc shlb rep jne and scas jle or xor (bad) jae sub (bad) sub clc mov out rex.WRB (bad) in add add fstpt vmovntpd and test retq pop stc pop jae (bad) sar push cli mov rex.WRXB adc outsl int jo sub imul insl retq (bad) jbe add mov mov add rex.WRX jne bswap movsbw bswap jmpq xchg rex.WRB jbe retq iret rex.X mov adc cmp data16 xchg in rex.WXB mov xchg jnp jb jp adc movsb addr32 loope (bad) add (bad) (bad) out (bad) and xor (bad) sahf and pop push subl mov loopne js lret push (bad) jge clc movabs sahf add xor push (bad) xchg movsb mov mov pop out rep not not mov pop jmpq pushq jmpq outsb rex.WR leaveq xchg mov movslq pushq rex.WX xor pop (bad) xor jmp fs (bad) out test fimul mov pop mov mov out (bad) lea addr32 sbb cmp sbb (bad) cltd outsb imul ds imul sbb fdivrl sbb mov sub pushq mov sti sub (bad) cld mov (bad) (bad) (bad) sti test mov (bad) (bad) (bad) (bad) (bad) xchg add lock es in out mov retq add add or (bad) (bad) sub sahf and fcmovbe cs xor xor test sbb rex.WXB (bad) fsts movabs cwtl imul fwait lret addb jnp and pushfq cmp outsw jns or lahf sti jmpq sub (bad) (bad) (bad) xor pop test pushq rex.WB and lods mov loopne int3 in rex.WXB loop loopne cmp and sbb cmp sti adc (bad) (bad) std std iret scas pop outsb pop popfq add xorb sahf test adc lea outsb in in rex.WXB adc add xchg data16 rex.R jb je xchg rex.XB mov fnstenv out rcr cmp addr32 hlt pop push or jo clc shrl jmp decl sub rolb rex.WB mov (bad) int3 imul fisttpl cmp push in mov mov test or xchg movabs shlb sti add jg in (bad) clc cmp stc sub jmpq jne clc cmp bt stc movb cmc cmc test jmpq mov and idiv stos and scas (bad) add fldt enterq rex.WB addr32 rex.B loop movabs js and fs add (bad) add xchg rol fdivrs or mov clc and add xchg mov psubb (bad) (bad) sti rex.WX movabs jmp sbbl leaveq mov stc mov insb or xchg (bad) and xchg (bad) rex.WRB (bad) rex.R push fdivrl jmpq imul cmp mov sbb cmp iret rolb movabs xchg rex.WRB adc (bad) repz scas mov fisttp repz shlb and insb rex.WX push sti cmp rex.RXB (bad) pop jbe (bad) jmpq jp jne movzbw mov lea ror shrd cmp sub not and ror test mov clc bt sub stc pushq bt clc clc cmp jmpq je rcr push clc movzbw shrd mov mov xor dec add btr sub not movzbw movsbl lea lea jmpq jne stc cmp movb test test test jmpq test js add jmpq jmpq jae cmp cmp cmc bt cmp jmpq add test cmp jmpq jne lea not mov jmpq movsl rex.RX and pop mov fistpll pushq repz (bad) enterq retq (bad) mull jns adc movabs cld (bad) push (bad) and fxch pop pop rex movsl mov repz loope xchg mov lret xchg xchg data16 xor xchg (bad) sub or (bad) jbe rex.XB div iret out fnstsw adc mov sub cmc (bad) (bad) (bad) std js jg imul add in (bad) clc push sub pop fnop or adc xchg xor mov js (bad) jb movslq movsl fdivl nop adc add add mov add jmpq push out pop or mov mov pop (bad) and mov sub adc mov movsl xchg cmpb xor ja cmp push (bad) mov rex.WX xchg adc fimul mov cltd rex.X jb jbe stos out (bad) push mov outsl (bad) or (bad) mov (bad) (bad) mov test xor pushfq movslq div (bad) out adc rex.WX or (bad) rcl test (bad) insl (bad) jae sarb jg stos int lods lea addr32 cmp jl cltd (bad) (bad) (bad) (bad) decb rex.WXB jns (bad) push adc mov out lock (bad) sbb jns sub xchg rex.WB (bad) jo lock xor test (bad) (bad) (bad) (bad) cmp sbb leaveq jno out jmpq sarb (bad) add iret scas (bad) (bad) and ss cmc rex.RXB jne adc in push mov xchg sub repz or cmp rex.R rex.WR in mov mov xchg (bad) loope mov iret cmpsl xlat int3 stos add test movabs mov adc mov out cmpsl enterq test push mov loopne rex.WXB add cmp pop cwtl retq outsb and xchg stc (bad) cltd mov (bad) sub je (bad) clc pushq fs jle int3 pop gs jae adcq (bad) xchg ss jg rex out loop movabs sub cmp je fdivrs scas shlb push test rex.WRX (bad) (bad) (bad) sti fisttp (bad) (bad) dec ss and jb and rex.WX cmp mov test movsb rex.WRB fmull (bad) lcall stos mov pop cmp movabs rex.R add xor sub stos fidivl (bad) (bad) ja cmc and sub neg add sub mov rcl shr shr mov clc cmc cmc repnz jmpq jae cmc sub jmpq xor adc (bad) pop test jrcxz fwait fs movabs cmp add fidiv fbld sub cltd mov xchg test (bad) push adc (bad) lea fmull jae insb jmp (bad) xchg mov out sti (bad) mov (bad) and (bad) or (bad) (bad) sti (bad) shlb (bad) (bad) mov cmpsl sub fstpt lods movabs mov insl btc rep add sub add imul (bad) pushq add add rex.WX xchg xor es lea sbb add jb jg cmp in jne mov jmpq xor in cmpsl (bad) cmp lret insb fiadd adc add (bad) (bad) jae mov xchg mov (bad) imul xor (bad) xor pushq int in (bad) or mov jmpq and ss (bad) xor sub cmp pop sub movsl andb stos (bad) lahf and rex.RB repz pop or jge jrcxz data16 scas and leaveq cmpsb scas (bad) (bad) mov cli sub cmc out sbbl nop test addb (bad) (bad) sti int mov (bad) (bad) mov xchg test cmp sub test in rex.WRXB jmp test mov rex.B adcb jnp jp (bad) pushq pop adc adc rex.RXB xchg std adc sbb or movslq cmpsl mov and es shl shrd mov bsf add shld bsf rol mov cmc jmpq jne bt clc movb bt stc test cmp test jmpq test jmpq pushq jmpq adc jmpq bt stc sub jmpq pop (bad) lret xchg cmp insb sub test test stos adc mov sub (bad) repz cmpsb (bad) (bad) pop lret out rex fs sbb scas sbb fwait mov xchg rex.XB push clc add (bad) jno xchg adc jns test scas adc rex.WRX cmp cmpsl (bad) xchg (bad) (bad) (bad) cli nop movsb mov xchg (bad) (bad) (bad) std mov xor adcl mov mov enterq movabs sbb test sub sbb mov adc (bad) (bad) (bad) ljmp movabs test (bad) sub adc sub mov and cmovae (bad) mov fild test adc xchg sbb fidivl push bnd jmpq jmpq jne cmp lea dec stc mov cmc cmc bt add test clc movzwl inc ror mov bsf mov clc cmc test cmp add cmp mov cmc stc cmp test test jmpq add push push push rex.RX gs gs outsl jb add in scas (bad) decl test out (bad) stc mov mov inc sub or movsbw shld mov clc cmp sub test cmp pushq test jmpq stos and fwait outsb nop stc (bad) movsl rex.WRB shll xor (bad) loopne cwtl rex.WRX xchg (bad) mov clc add nop retq repnz fdivr pop clc in fisubrl imul in mov pop es (bad) mov pop push cmp cmp sbb out enterq push stos (bad) xchg movabs adc int3 mov retq fbld test mov mov jbe ss rex.B sbb xchg pushq notl scas jne push cmp (bad) (bad) (bad) decb (bad) (bad) (bad) (bad) scas andb repz mov mov notl sbb ss pop (bad) test xchg mov outsb int3 gs or shrl sbb scas pop loopne xchg ss (bad) jl loope jns adc rex.WXB in and pop bt test cmpb jmpq sbb sahf nop sub add lods nop cld andl xor std xor and rorb sub xchg js addr32 jp cmpsb adc and sbb jnp out test test pop movsb movsb rex add pop loope or adc retq retq movsl pushq je pushq lretq insl lock lods decb sub rex.XB pushq scas push (bad) (bad) (bad) sti imul (bad) (bad) push mov push js clc (bad) test (bad) cmp test (bad) (bad) (bad) callq xchg jns imul (bad) add and sarl (bad) mov mov callq (bad) adc popfq (bad) jmp cltd sub lret sbb add xchg jns sahf mov movabs nop mov popfq (bad) mov jmpq jae add inc mov stc sar mov bswap bt shr mov cmc cmc stc xor cmc cmp stc clc repnz jmpq add sub add rex.RXB gs outsl fs gs outsb fs add test pop in jmpq rorb enterq ss mov jmpq mov jmpq ja jmpq jmpq push lock std std popq (bad) retq jae addr32 rcrl mov (bad) rex.RB ss mov jge in mov rcl push push movl enterq test mov xchg xchg push jrcxz,pn callq movsb and xchg (bad) cmpsl movsb add mov sub loop or insb sbb rex.X jno ja test add adc test add dec sar neg stc xchg rcl inc setle dec mov shr mov bt push bsr mov cmc bt sub jmpq rex.WXB rex.RB rex.WRX rex.RB xor cs insb add mov enterq mov not rcl add test dec (bad) lock mov jmpq push rex.W rex.RB rex.WR xor cs insb add mov sar (bad) jmpq ja or sub and stc sub bts add movsbl not neg mov sbb neg sbb mov clc bt stc repnz jmpq dec clc clc bt xor bt bt bt bt rol clc cmp cmp not lea lea lea lea not mov pop jmpq cmp jmpq rex.RB (bad) repnz jl (bad) adc push je loopne movabs test pop mov rclb imul (bad) repz fadds shl stos iret cld jp outsl (bad) fildll or cmp gs add cmpl (bad) retq sbb mov callq xor mov or (bad) (bad) (bad) sti sti enterq (bad) (bad) (bad) (bad) out retq dec mov mov rex.RXB or (bad) adc mov xchg (bad) cld jno movslq jge add add cmp cmp test fwait lea push test cmpsb movsb push and push (bad) add mov (bad) and mov push movslq cmp insl jo rex.WX (bad) fidivr sub popfq mov decl xchg lock callq sub movsbw sub not add btr add bts setno mov (bad) lock cmp (bad) lock bt cmp cmp jmpq lods clc stc clc xor cmc jmpq setb jmpq add rex.WR movslq rex.B insb outsl movslq jmpq or stc (bad) lock sub lea shrd add shrd mov neg test xor mov test repnz jmpq jmpq cmc cmc rol test jmpq mov add push sbb (bad) sbb rcr iret (bad) (bad) bnd jns jo or (bad) ja callq sbb (bad) (bad) push movslq jae sbb rex.R stos fcomps (bad) adc mov stc clc mov lock mov movabs cs mov mov popfq and rex.XB sti loopne rex.W (bad) (bad) (bad) (bad) fcmovu stos rcr loop jo gs jp fildl test and adc or or cs loop jge lods mov mov jne adc xchg xchg scas (bad) loopne cmpsb and (bad) sub adc (bad) stos loopne lock mov and (bad) jmpq stc stc imul jmpq jmpq push shld sar not movzbw mov bt sub jmpq jne stc sub jmpq pushq ucomiss ds add loopne popq mov sub vpandn leaveq rclb xor callq xor xor mov pop or (bad) and rex.WRB retq pop addr32 rex.RB out (bad) fdivl (bad) mov mov adc adc insb (bad) jle fnstenv (bad) (bad) (bad) cli movabs mov push (bad) add jae or jae xchg es out cmp out notb and adc leaveq xlat pop or (bad) (bad) (bad) jmpq push pop lods mov sub (bad) movabs ss insl (bad) (bad) iret je (bad) enterq (bad) mov ja loopne rcrb add and rex.B cmc cmp cmp jmpq ja bt and sub shld cmp sbb add or clc mov or mov cmc cmc repnz jmpq test add clc mov clc bt jmpq jmpq sahf cmpsl int3 (bad) (bad) fidiv sbb mov shr jmp adc scas rex.RX leavew in test pushq imul jp (bad) retq stc loopne movabs pop (bad) push movabs repz pop mov mov rex.X jrcxz or (bad) cli iret cli gs xchg movsb mov (bad) (bad) rex.WRX leaveq (bad) test rex.WRB push jrcxz jb rex.B xlat (bad) (bad) (bad) sti xchg adc (bad) (bad) (bad) incb adc push outsl bswap mov jrcxz mov add add add lods mov (bad) mov rex sahf (bad) mov cmp in (bad) push imul icebp (bad) outsl (bad) xchg add mov xlat retq sbb (bad) mov repz ds adc movabs (bad) jmpq mov stc cmp jmpq lods rex.RX mov lret out (bad) outsl cli mov ss (bad) or mov pop repnz jne mov push xor xchg data16 in jbe mov out or sahf rex.WXB mov sub pop mov jbe xchg xchg std cwtl xchg cld sbb fstps sti xor push (bad) (bad) (bad) (bad) (bad) (bad) test sub rex.RB rex.B (bad) or xchg adc cmp cmp outsl adc cs mov rex.RXB rex.WR fwait xchg rex.B adc pop or xchg or movsb adc (bad) (bad) (bad) decl adc or sub or sub push (bad) jmpq jne ror cmc data16 sbb (bad) (bad) rex.W rex.WXB es gs xchg mov rclb outsl cld xchg mov movabs mov xor popfq not pop jmpq sub fadds lahf add adc adc mov or xor lret fs mov outsb (bad) (bad) xchg rex.WRX add mov cwtl lea testl (bad) fdivrp mov (bad) sbb sub (bad) pop rex.XB rex.WB and fwait addr32 jo lret or loope rcrb (bad) lret jl adc xchg sbb xlat ja sbb repz push lods xchg push push xchg (bad) int push out fs stos rex rex.WRX (bad) (bad) decb (bad) (bad) (bad) pushq jg ds or pop (bad) out rex.WR out rex.WRXB cmp sbb xchg mov andl cmp rex.RXB cmp mov (bad) je movabs adc jo ss movabs (bad) (bad) mov xor pop or and movabs ss sti mov (bad) rex.WR stos retq adc out iret rex.XB shll xchg or mov fst rex.RXB (bad) cli test rex.WB leaveq data16 ja cmc jge (bad) (bad) (bad) std jg ss add add (bad) hlt mov mulb (bad) (bad) jb jg rex.WRB mov pop jnp cs jbe rex.RXB rorl pop cli int rex.WB sbb movslq data16 (bad) sbb movabs jmp mov cltd divb stos test xlat (bad) rex.WRB repz insl clc stos out jge rex.WRX rex.WB jns lods rcr sbb int3 jbe lods (bad) repz js lods callq cmp outsl movabs jns scas cmpsl pushfq xlat or movabs mov rex.WRX rex.WB (bad) jns mov jle cwtl rex.WB jl cmpsb mov out (bad) mov mov (bad) jmpq adc cltd notb fsubrl (bad) lcall mov jl scas jae jrcxz add rorb pop xchg mov and std imul sarb mov sub pushfq insl xchg enterq fwait xchg outsb xchg (bad) mov fisubrl repnz fwait pop jg jbe xor adc (bad) cwtl mov sub (bad) movabs cmp rex.X data16 cmpsl fisubr mov fdivrs or jg test fwait scas adc mov lock mov cs jg mov shrl mov push mov mov mov rex.RB rex.R fnsave mov xchg ja mov rex.WRX cli scas addl (bad) or rex (bad) xor mov cmp rex.RX rex.WX jrcxz jns popfq es xor jne cltd scas shll mov and pop mov xor (bad) fnstsw ss (bad) hlt iret xchg (bad) lock andl xor xor sub sbb (bad) test mov (bad) js mov (bad) pop adc adc mov cmpsl in add ss (bad) movabs mov or xchg add data16 rex.RXB cltd int jmp movslq fstpt outsl retq (bad) xor (bad) sub xor fcompl lods xor jnp lea rex.X test push cmp imul (bad) (bad) (bad) cmp add jmpq jmpq jmpq (bad) jns mov ss pop mov mov int rex.WXB loopne lret int repnz (bad) shr adc cmp mov std xchg mov (bad) (bad) and retq mov (bad) fldenv jge (bad) (bad) repnz repz pop out xor (bad) add (bad) (bad) (bad) (bad) (bad) cli xchg fldt std orl mov jae (bad) sahf cmp jge push rex rex.WRX xchg mov mov movabs sub fisttpl fcmovu (bad) (bad) sub (bad) outsb xlat je (bad) ja (bad) rex.WX (bad) (bad) decl jbe pop adc int cwtl push mov (bad) push rex.WX xor cmp div movabs (bad) loop rex.WB (bad) mov in push mov or mov sbb pop repz mov test cmp retq repz cli loopne nop js sbb insl rex.WRB cltd addb or cmc (bad) cmpsl push (bad) mov jle (bad) fdiv xchg imul or xchg out pop leaveq mov mov repz hlt fstps rex.WXB cwtl lret or outsb add adc (bad) (bad) cli fsubrl (bad) (bad) std (bad) (bad) (bad) lea cmp push loop add sbb xlat rex.XB rex.W pushq (bad) jb lods push test or sbb xor pop retq adc (bad) (bad) lcall addr32 or pop cwtl mov or mov movabs xor rex.XB rex.WR xchg jbe (bad) test and movsb int3 (bad) pushq leaveq add push retq int3 movl jmp (bad) movabs (bad) div loop ja nop sbb mov iret cmc (bad) stos pop jmpq (bad) sbb cmp xor movl (bad) sti push (bad) pop out mov rex.WRX lods rex.WR (bad) or add leaveq or (bad) (bad) cli fidivl and (bad) mov mov adc mov sub imul shrb mov or and (bad) icebp sti pop fisttpl adc xor pop cld adc sbb jno (bad) xlat mov sbb in (bad) in loop jmp and sub (bad) (bad) (bad) ffree cmc mov std imul sub (bad) enterq add clc cwtl mov adc nop adc push mov or hlt movabs scas test stc rex.R std loopne push sti mov orl fwait repz pop xchg add popfq pcmpgtw repz and int3 (bad) (bad) (bad) cld ja push movsl fwait (bad) (bad) (bad) jmpq (bad) and lahf rex.WX mov or (bad) imul lods and add add or sub mov pop callq (bad) push rex.WRX (bad) fimul es rex.B push (bad) or cs pop cli push shrl movabs scas stc rex.WRXB add add rex.XB (bad) je rex.WB jae (bad) outsb movslq jne bsr xor bsr bswap mov mov rcl add add test inc jmpq clc cmp pop and fisttp pushfq loope insb enterq (bad) add test (bad) and shlb cmpsl (bad) mov xor push jle notl jmpq jrcxz ss out pushq (bad) fstl pop xchg lea and (bad) rex.RX (bad) (bad) rorb outsl rex.RX (bad) jne rex and test in nop sub adc rex.XB xchg pop cmp std (bad) (bad) (bad) sti mov fwait movsl (bad) (bad) (bad) (bad) jne lea and mov jns jo and mov in xchg add (bad) (bad) push mov rex.RB fisttp scas xlat std sbb (bad) pop sub imul mov movabs sbb or xor movabs scas rex.B rex.X js xchg mov (bad) cwtl in cs mov movabs cmc lods (bad) (bad) popfq mov out or lods neg (bad) leaveq cmp rex.W push jl cs (bad) (bad) mov push jb xchg xorl cmp jmp hlt cmpsb movabs mov lods (bad) (bad) (bad) cli addl fistp (bad) jg add rex mov adc test mov mov insb clc test jnp jae (bad) rex.XB cld (bad) (bad) retq xchg fwait mov std fs pushfq in (bad) mov mov lret (bad) callq std (bad) (bad) mov sbb ds outsl (bad) cmp outsl insb loope insl (bad) jle fistpl xor pop repz or test int3 jb cmp cmp cmpsb test cld (bad) (bad) test (bad) (bad) mov jg data16 rex.RB (bad) cmp and jnp scas addr32 (bad) (bad) (bad) stc ja pop push fcmovnb sub mov add add insl and push (bad) jae jp insb out xchg rex xor fnsave outsb in rex.R jno pop cmc sbb cmp (bad) fmull lret imul enterq out xchg rex.X lods jmp shlb sbb test shrb gs add rex.WXB rex.XB jl xchg and add (bad) mov jae (bad) js rex.XB rex.X push and cmp scas (bad) ss and cmp mov loope (bad) push divl jo mov cmp jne pop mov (bad) cmpsl mov in in pop idiv icebp push out rex.X add or jg xchg add std sbb int sbb cmpsl test es (bad) sbb or push xor movsb gs sub stos addl cli mov adc (bad) adc mov lods insl decb and mov xchg movl test (bad) hlt loope or test fidivl or lret callq movabs leaveq lret mov out in jo (bad) iret or xor ds insl pushq mov xor (bad) (bad) (bad) (bad) decb xchg mov mov loop (bad) imul rex.B (bad) pop rex.WRXB adc insl push rex.XB repz push movabs adc andl shll pop xor orl push (bad) adc fistpl add cli push (bad) rex.WRXB outsb (bad) pop xor rolb (bad) callq jmpq jne shrd jne mov btc sub cmp mov clc test test bt sub cmp clc pushq clc cmc cmp jmpq jmpq sub shrb int3 adc rex.RXB sub jp mov rex.WXB (bad) (bad) lods mov mov jl popfq rex.WR rex.RXB add out (bad) outsl pop cmp fcmovnu std jo pop repz mov (bad) (bad) jne,pn lret jg sub mov (bad) push fcoml mov rex.RX loopne (bad) (bad) (bad) stos (bad) scas outsl callq fnstsw jno sbb mov (bad) fs xor mov stc ffreep pop and rex.X jo fsub clc shrb outsb cwtl mov push pop add add or test cmpsb and mulb sbb (bad) xchg clc ss jae sahf (bad) mull lods mov movabs mov mov scas callq out mov and ja mov movslq push out retq rex.WRX (bad) icebp push jmpq jl fwait sbb cmp or rex.WRXB xor sbb jle xor (bad) insl test notb sar callq or test lods (bad) jrcxz cmp loopne sbb pushfq rex.WR xchg callq in sti (bad) std icebp in (bad) iret lods movabs ds sbb rex.WB movabs (bad) (bad) sti mov pop sbb (bad) (bad) (bad) decb enterq add add or (bad) fsubrs cmpsl mov cld iret test sbb movabs rex.RXB add rex.WXB xchg cld xor pop xor mov js mov mov mov rex.X scas data16 cmp push add mov jg push push mov xchg lret mov jb xchg or not pop adc sti movsb (bad) (bad) pushfq cli in push (bad) jmpq rex.WRX mov (bad) mov xor outsl movabs leaveq repz rex.X pushq lret scas rex.RXB pushq adc movabs repnz movabs stos lea rex.WXB (bad) (bad) (bad) sti mov (bad) (bad) (bad) je cmp and data16 xchg mov in jp loopne (bad) (bad) (bad) ljmp xor (bad) jb (bad) scas rorb sub xchg cmp sbb sbb rex.RXB cmp and xor xchg sahf mov (bad) scas int mov mov cmpsb adc or or loopne xor (bad) (bad) out mov repz out shl pushq xchg jns out rol pop ss (bad) pushq mov icebp mov incl jns rcll cmp mov (bad) jge xchg pop (bad) (bad) (bad) sti and retq shrb add rex nop (bad) (bad) movsl jle test and movabs movabs imul fimull out and out ss jmpq (bad) int sahf out xlat mul add add outsl (bad) mov out xchg stos (bad) adc fsts (bad) xchg out or sbb rex.RX insb enterq andl jg and cmpsl mov mov sbbl and bnd jne cmp dec mov bswap test dec adc sub lea mov bt jmpq (bad) (bad) sub stos popfq cltd mov cmp popfq (bad) out sti fadds icebp in ficoml rex.R out xchg rex.XB loop rex movabs (bad) xor jmp jl rorb fcoml notb jne lret lods pop (bad) incl movabs sti push movb (bad) (bad) (bad) incb jo cmc jno adc pop mov rex.WXB or imul sub imul test or sti jg adc rex.R flds (bad) callq jbe fsubs (bad) lahf add test and add pextrw mov out rex.R sub test in movabs mov mov (bad) jb stos add cmpsl mov mov out (bad) rex.WRX rex.RB push xor cs insb add movhlps decl jmp (bad) rex.WB scas mov cmc movabs jg add (bad) scas mov sbb lahf (bad) imul mov out (bad) (bad) jns sub xor or xor lret cltd jmp sub push xchg (bad) lea int add sub insl imul (bad) sti fbstp (bad) (bad) dec movslq xlat pushq (bad) clc popfq movabs rex.XB xor xchg shrl and pop sub jb xor jo rex.W int mov movslq (bad) or sbb (bad) icebp addr32 imul rex.WXB mull add push loop jno lahf cli cli pushq or movslq sbb cmp (bad) mov mov add cmp callq push xor movsl fldt out nop clc push pop xchg sbb (bad) lret add jne adc stos (bad) repz imul roll es add jnp addr32 pop or clc in icebp add in jo rclb (bad) rol cwtl (bad) adc sub rex.WRXB (bad) (bad) sti rex.X (bad) movabs enterq hlt push pop mov pop cmpsl outsl sbb jno (bad) (bad) (bad) (bad) sbb cmp jb (bad) test xchg push subb (bad) (bad) lcall xchg pop rex.WB test pop sub ja adc (bad) (bad) cmp (bad) in (bad) pop enterq pop adc lahf rex.XB jmpq sbb loop lret jge mov ds xchg mov loope mov add stc stc stc mov bt test jmpq jmpq jne stc test movb clc test test bt test jmpq test cmpb jmpq jne stc bt dec stc xor bts bts rcr mov or add clc sar inc rol mov cmp cmc bt test jmpq callq seto add test shl stc mov cmc cmpb jmpq (bad) (bad) mov rex.XB rex.RXB mov jnp mov (bad) jle stos (bad) rex.XB rex.WXB fwait adc or (bad) in add retq cld jae jae sbb rex.WRXB jno sub xchg callq cltd sti rex.XB xchg jg js je movsq fadds cwtl mov (bad) rex.WXB sub xchg rex.WRB rex.RXB add add or xchg js imul or pushfq (bad) push mov or sub rex.WRXB xchg (bad) pop (bad) cmp (bad) or pushq (bad) int3 mov movabs gs jae jae pop adc mov mov loopne jnp nop shr std (bad) (bad) jmpq jmpq adc retq pop movslq movslq insl jnp xchg outsb rex.XB fisttp pop mov cmp sti add adc (bad) sbb xor pop (bad) mov fs (bad) rex.W fstpt rex.WRXB rex.R rex.X fidiv mov test (bad) cli out lret lea mov and std (bad) push ds add and xchg iret (bad) (bad) (bad) std mov adc adc rex.RXB (bad) (bad) pushq lret jne adc xchg enterq sub rex.WXB (bad) push xor (bad) gs es repz sti mov pushq movabs xchg mov mov incl cmp mov jmpq clc xor jmpq movsb sbb sahf xor int3 or push push jge and push rex.WRX pushfq std sub and pop (bad) mov scas add mov push insl jno pop rex.WR xchg ficoml rex.WB repz retq (bad) (bad) pop in and jne mov (bad) push mov addr32 insb adc add (bad) jno xor jrcxz out mov mov outsl xchg test xlat cmp (bad) xor std test mov xor ficompl (bad) (bad) cld or (bad) (bad) (bad) (bad) clc adc xchg lahf rex.XB add js sub (bad) xor (bad) mov lods fdivrs sub retq ds stos test jl xchg add cmp mov popfq add in (bad) mull std es xor mov mov mov jmpq loopl cs in (bad) xor (bad) (bad) xchg pushq retq cmp mov (bad) lahf sti mov rex.RB sub movsb nop rex.W or popfq mov mov movslq (bad) jge pushfq mov rex.B test mov pop mov pop movslq push (bad) cmp mov enterq mov or xor xor (bad) sti jp jns cwtl (bad) (bad) (bad) (bad) cmp clc lods sbb fisttp pop (bad) ja (bad) (bad) (bad) jmpq cmp and cltd lods adc rex.RB add imulb push cld cmp xor rorb jmp xor (bad) test push icebp stos (bad) rex.WB psraw push xorb adc or shr push jne (bad) jmpq ja clc jmpq jle pushfq jmpq jmpq mov jmpq push jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq mov jmpq push jmpq jmpq dec cmc clc test cbtw bt bt stc cwtl cmp jmpq rcl stc btr mov cmp test add jmpq jmpq xadd not cmp cmc mov shld stc btc setg mov bt clc not test stc not jmpq jmpq popq jmpq jmpq jmpq popq jmpq jmpq jmpq shld mov cmc cmp bt cmc sub jmpq cmp bt add jmpq ja push jmpq jmpq mov jmpq mov mov setge movabs xchg mov bswap bswap movzbq jmpq mov stc cmp bt sub cmp movl clc or jmpq mov jmpq push jmpq push jmpq push jmpq dec jmpq jmpq jmpq push jge push jmpq jns mov jmpq jmpq jmpq jmpq jmpq jmpq push jmpq push je push jmpq mov jmpq xor cmp test xchg cmp jmpq jmpq jmpq mov jmpq jmpq jmpq jns popq jmpq push jmpq push jmpq pushfq jmpq movzbw bswap mov movsbw push mov bswap not movsbw mov jmpq jmpq inc cmp stc not cmp bt bt sub bt add bt xor stc cwtl cmp cmp stc stc sub jmpq push jmpq jmpq mov clc mov stc bt sub jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq push jmpq divq jmpq ja shrd btr clc mov cmc xchg clc bt xor jmpq jmpq jmpq jmpq jp popq jmpq pushfq jmpq popq jmpq mov jmpq jmpq push jmpq mov jmpq jmpq bswap cmc shld sar mov test sub jmpq add test cmc jmpq jmpq mov jmpq push jmpq push jmpq jmpq jne mov inc sbb mov cmc and test cmp clc cmp jmpq mov jmpq jmpq mov jmpq jmpq jmpq mov jmpq je movsbl movzbq lea mov jmpq push jmpq push jmpq push jmpq jmpq push jmpq cwtd mov sbb dec test movzbw mov jmpq jmpq jmpq clc sub jmpq pushfq jmpq pushfq jmpq mov jmpq dec stc stc xor clc stc clc bt cbtw jnp cwtl stc cmc cmc stc cltq jmpq jmpq mov jmpq setae mov ror bsf sbb xor stc rcl mov not ror stc rol bsr adc xor movsbw ror rcr jmpq jmpq movsbq btr and sbb jmpq cmc cmp sub jle mov jle lea jmpq push jmpq popq jmpq jmpq push jmpq mov jmpq popq jmpq (bad) lock rol sbb mov clc xor cmc clc cmc cmc ror stc stc xor clc jns ror test cmp test xor jmpq jmpq push jmpq push jmpq jmpq jmpq jmpq mov jmpq jmpq movsbq not setae seta mov jmpq jmpq push jmpq jmpq jmpq sub jmpq je setae not movsbw mov jmpq mov jmpq push jmpq push jmpq dec test jmpq pushfq jmpq push jmpq push jmpq jmpq push jmpq jmpq jmpq pushfq jmpq jmpq popq jmpq mov jmpq push jmpq push jmpq bswap mov cmp mov jmpq je mov jmpq push jmpq cmc cmp jmpq jmpq pushfq jmpq push jmpq jmpq jne adc shrd btr xorb movsbw movzbl pop jmpq jmpq popq jmpq jle mov jmpq mov jmpq shrd bts or rcr mov mov add jmpq jmpq jbe shl lea stc lea cmc clc clc jmpq jmpq jmpq cmc mov jmpq shr sub movsbq jmpq mov jmpq rol not sbb mov mov cmp cmp sub jmpq push jmpq bt jmpq cmp jmpq jmpq push jmpq push jmpq push jmpq add btr mov shr setns mov clc sub jle divl jmpq push js push jmpq push jmpq jmpq bsf rcl notl not btr rcr mov stc sub bt clc bt clc and jmpq jmpq or pop shrd shl popfq lea pop bswap pop jmpq jmpq jmpq push jmpq jmpq jmpq push jmpq jmpq push jmpq div jmpq popq jmpq jmpq push jmpq popq jmpq push jmpq popq jmpq jmpq jmpq jmpq popq jmpq jmpq pushq setnp movsbw jmpq rep test pop btc rcr pop stc cmp cmp cld popfq jmpq push jmpq shrd bts jmpq push jmpq not cmc mov mov bswap mov jo sub clc bt mul jmpq push jmpq jle mov jmpq push jmpq jmpq jmpq push jmpq popq jmpq pushfq jmpq jmpq mov jmpq push jmpq pushfq jmpq mov jmpq inc mov xor bsr rcr bt mov stc cmp add jmpq mov xor test btr shr lea jmpq je test bt cmc bt cmp jmpq sets pop lea setle pop jo xchg xchg pop mov setb jmpq jmpq push jmpq test sub stc stc cmp cmp shl jmpq push jmpq jmpq jmpq mov lea mov jmpq push jmpq push jmpq lea jmpq jmpq sub jmpq jmpq jmpq inc stc bt ror jmpq mov jmpq jne jne mov jmpq jmpq rol btr bt mov stc clc xchg stc xor jmpq push jmpq addl bt push bt test stc clc sub jmpq mov jmpq test add jmpq jmpq bsr and xchg mov bsf shl btr mov cmp sub jmpq sub jmpq jmpq push jmpq jmpq push jmpq clc mul jmpq cmc mov test mov shld mov stc cmp jmpq jmpq jmpq push jmpq jmpq jmpq je stc cmp jmpq jmpq jmpq popq jmpq shld adc (bad) icebp mov neg bt cmp mov cmp cmc jmpq jmpq push jg push jmpq cmp jmpq jmpq jmpq jmpq jmpq jmpq pushfq jmpq cmp sub test test xchg test stc stc cmp jmpq push jmpq je cmp cmp jmpq push jmpq push jmpq push jbe push jmpq push jmpq mov jmpq add jmpq ror cmc add jmpq jmpq push jmpq pushfq jno popq jmpq seto pop movsbw movsbw pop not jmpq jmpq jmpq je jmpq jmpq jns popq jmpq mov jmpq lea movzbw movsbw mov jmpq push jmpq popq jmpq jmpq rcl movsbw clc mov add jmpq jmpq pushfq jmpq push jmpq jmpq jmpq jmpq bt ror cmp clc bt stc xor cmc test cmp mov jmpq push jmpq push jmpq jmpq mov jmpq jmpq pushfq jmpq jmpq cpuid cmp test stc sub cmc jmpq jmpq push jmpq jmpq sub clc test jmpq jmpq push jmpq popq jmpq jmpq jmpq jmpq push jge push jmpq mov jmpq jmpq jmpq jmpq sete lea not pop movzbw pop mov movzbl pop bswap mov pop mov mov mov mov pop movsbw jmpq sbb shl xadd stc mov add sbb bt mov stc add jb mov jmpq push jmpq jmpq pushfq jmpq jmpq rol rcl clc mov cmc clc jmpq mov jmpq push jmpq push jmpq mov jmpq push jmpq jmpq jmpq clc jae add jmpq push jmpq popq jmpq jmpq push jmpq jmpq push jmpq jmpq push jmpq jmpq popq jmpq mov jmpq jmpq jmpq jmpq jmpq jmpq push jmpq cmc test jmpq test clc add jno not jmpq jmpq mov jmpq jmpq jmpq mov jmpq mov jmpq xchg seto movsbq xchg push inc setl inc movsbw push dec dec dec pushq setl movabs dec lea mov dec push bswap mov movsbl jmpq jmpq push jmpq push jmpq mov jmpq movsbw bswap notq neg mov cmp cmp cmp stc sub jmpq jmpq jmpq push jmpq cld cld jmpq mov jmpq pushfq jmpq jmpq pushfq jmpq pushfq jmpq push jmpq push jae push jmpq push jmpq movzbq movsbw push movzbw movabs jmpq push jmpq jmpq jmpq jne cmp sub stc cmp xchg cmp jno test test sub jmpq jmpq popq jmpq shrd mov cmp dec xor movsbw lea sub mov bswap jmpq jle not jmpq push jmpq push jmpq jmpq push jmpq mov jmpq jmpq shr movzbl dec clc add bswap jmpq push jmpq push jmpq popq jmpq jmpq jmpq test movl clc or jmpq pushfq jmpq mov jmpq jp sub bt imul jmpq jmpq jmpq jmpq mov jo mov jmpq bt test add jmpq jmpq push jmpq push jmpq jmpq push jmpq dec or movzbl bt not xor cmc rcr sub jmpq push jmpq lea jmpq movsbw push jmpq test add jmpq push jmpq push jne push jg push jmpq jmpq push jmpq cmp jmpq ja jmpq jmpq jmpq jmpq jmpq pushfq jmpq pushfq jmpq push jmpq jle pushfq jmpq push jmpq jmpq pop bswap mov mov pop bswap mov jmpq mov jmpq push movabs push mov bswap lea movsbw push lea setbe push movzbw lea push movzbw mov mov setge push jmpq push jmpq jmpq jnp push jmpq ror bts test setae add bsf or shr shld xor btc not bsr movzbw mov jg add jmpq jmpq jmpq jmpq push jmpq jmpq data16 lock bsr movzww bt test test stc xchg bt xor jmpq jmpq push jmpq bt clc stc stc xor jmpq push jmpq sub cmc jne bt imul jmpq popq jmpq bt mov stc cmc cmp sub test add jmpq rcr btr ror movsbw xchg not cmc btc bsf mov stc xchg sub jmpq mov jmpq push jmpq lea shl shr mov clc add mov cmp cmp bt jmpq sar shr mov shl rol add mov js bt sub clc cmc stc shr jmpq bts bsf bsr mov clc pop clc dec lea pop bsr std ror pop std cmc test pop lea adc pop jmpq push jmpq rol sbb not add inc shrd ror (bad) (bad) sub mov lea movzbl inc movsbw or mov xor mov jmpq mov jmpq movzbw not sar mov movzbw dec mov clc stc cmc jmpq jmpq popq jmpq push jmpq sub jmpq bt test stc sub bt imul jmpq jmpq jmpq push jmpq jmpq not jmpq push jmpq jmpq cmc cmc cmc clc add jle mov jmpq jmpq jmpq jmpq push jmpq sub jmpq cmp jmpq mov jmpq push jmpq bswap movzbw mov jmpq push jmpq mov jmpq pushfq jge popq jmpq jmpq lea dec mov bswap lea movsbw inc bswap lea jmpq push jmpq mov jmpq jne je clc cmc cmc jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq mov jmpq mov jmpq push jmpq inc movabs bswap mov setle lea mov seto movzbw dec push jmpq push jmpq jmpq jmpq mov jmpq push jmpq push jmpq sub bt clc shr jmpq cwtl bt test bt cltq test cmc stc test sub jmpq jmpq jmpq push jmpq push jmpq jmpq mov jmpq inc stc clc clc cmc ror cmc clc bt jmpq jmpq push jmpq jmpq callq bswap seta not mov jmpq inc bt cmc clc stc neg cmp cmc clc clc sub test cmp jmpq add jmpq clc test sub clc bt cmc stc shr jmpq push jmpq jae push jmpq push jmpq add jg mov jmpq not jmpq mov bt test bt add ja callq jmpq jmpq push jmpq push jmpq mov jmpq push jmpq pushfq jmpq jmpq jmpq jmpq jmpq push jmpq not mov setle mov jmpq popq jmpq jmpq sar shld (bad) testb rex.RX xchg retq movzbw inc inc setnp inc (bad) repnz neg setle rol bsr btc dec add mov bsr not mov jo cmc add jmpq push jmpq push jmpq push jmpq jmpq push jmpq jmpq seto pop lea lea lea pop retq jge push jmpq lea bt cmc rdtsc test bt jmpq mov jmpq push jmpq jmpq dec jmpq push jmpq jmpq mov jmpq push jmpq lea lea dec mov not jmpq push jmpq jmpq jmpq push jmpq push jmpq mov jmpq jmpq mov jmpq je stc cmp cmp jmpq jmpq xadd shld data16 lock push add movsb loopne movzbw (bad) lock stc bt jmpq popq jmpq jmpq jbe push jmpq jmpq jmpq jmpq mov jmpq jmpq jmpq inc test neg clc sub stc cmc add bt stc cmc test sub jmpq mov jmpq push jmpq mov bt jmpq push jmpq dec jmpq push jmpq push jmpq je bswap movzbw mov jmpq push jmpq jmpq jmpq mov jmpq mov jmpq jmpq cmc ror cmp bt cmc stc add jmpq add jmpq push jmpq push jmpq not lea push setns not mov push not lea push dec jmpq jmpq movzbw xor btr mov bt shl stc stc shr cmp or stc cmc cmp xor stc jmpq mov xor bsr bswap movzbl inc xor sar btr not add mov not dec setb movzbw dec not jb clc shr xor mov ror movzbl bt cmc stc jmpq mov jmpq mov jmpq jmpq push jmpq jmpq jmpq not shr rol mov shl not test mov cmc not test not test cmc cmp clc sub clc and jmpq lea sub setne bswap movabs bswap add bt inc rcr mov neg and add movsbw movzbw test cmc mov add add dec neg sub clc dec shl add add adc rcr inc not add add rcl neg rcl sub adc movsbl ror sub rol cmc rcl rcl movzbq rcl movzbq rcr mov clc ror stc test add jmpq shld jmpq jmpq jnp mov jno mov jmpq jmpq push jmpq mov jmpq jmpq shl movzbw neg mov bt cmp shrd add jmpq jmpq neg movzbl test xor test cmc stc test add jmpq jmpq pushfq jmpq jmpq cmp jmpq push jmpq jmpq jmpq push jmpq jmpq pushfq jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq jmpq jmpq jne sar mov bt and stc cmp jle jne rcl movsbl shld xorb movsbw pop jmpq add ror mov cmc sub jmpq cmc add clc jmpq mov jne pushfq jmpq stc jmpq jmpq push jmpq jmpq inc sbb bts sar add bswap btr rcl xor rcl btc neg shld add lea stc or bsf add shr setle shld xor mov test bt test jmpq jmpq mov jmpq jmpq jmpq jmpq jmpq popq jmpq push jmpq push jmpq xadd ror mov jno bts neg mov jmpq mov jmpq jmpq push jb push jmpq push jmpq mov jmpq push jmpq mov jmpq push jmpq push jmpq jmpq mov jmpq jmpq jmpq push je push jmpq push jmpq jmpq bt add jmpq clc jmpq add add (bad) sbb movabs adc add movabs (bad) sbb movabs sbb add add (bad) add loopne adc add add add add add mov add add add cmc sbb add add (bad) sbb loopne (bad) add and add sbb add adcb add (bad) jae add and sbb loopne (bad) add and (bad) add movabs mov add movabs pop (bad) add loopne sbb xor add loopne sbb add (bad) add rex sbb xor add loopne sbb movabs mov add (bad) rcll add and add movabs add add loopne sbb add outsb sbb xor add (bad) adc add and (bad) add loopne sbb movabs lods sbb xor add rex rex.WRB add rex sbb loopne sbb add test add movabs test add add (bad) add rcrb (bad) mov add and add and add shlb add cmp add (bad) sbb and add (bad) rcll add and (bad) add and add movabs adc add addb add cmp add movabs mov add and (bad) add movabs lea add hlt sbb xor add orb add (bad) add rolb loopne sbb add ja add rex rex.RXB movabs xor add add add and (bad) add movabs movsb sbb add add add add jo add movabs ja add movabs hlt sbb xor add loopne (bad) add movabs hlt sbb shlb xor add (bad) jns add sbb add movabs push (bad) add and add movabs add add loopne sbb movabs mov add movabs mov add and adc add cmpsl (bad) add add (bad) add rex add (bad) rcll add and add and add loopne add sbb add rex sbb movabs pop (bad) add and add and add xor add and (bad) add and sbb (bad) jae add loopne (bad) add and add rex rex.RXB loopne sbb rex rex.RXB and add and add sarb loopne sbb xor add rcrb rolb movabs rex.WRB add xor add add add (bad) sbb addb add sbb movabs (bad) sbb rex sbb xor add movabs cmc sbb sarb movabs rex.X xor add loopne (bad) add (bad) adc add add (bad) add loopne (bad) add loopne sbb add sbb and sbb rolb add sbb xor add loopne (bad) add add (bad) add and add mov add and sbb rcrb movabs jns add movabs lea rex sbb add add and add movabs movsb sbb movabs rex.RXB add add add add add (bad) sbb movabs (bad) sbb movabs mov add (bad) add add loopne sbb sarb (bad) jg add and add and add add add popfq (bad) add and add add add jae add (bad) jg add add (bad) add (bad) sbb (bad) jg add movabs xchg adc add add add movsl sbb and (bad) add sbb add shlb xor add adcb add and add (bad) mov add rex sbb xor add and add add sbb xor add movabs in add movabs cld sbb xor add add add movabs pop (bad) add (bad) mov add movabs xor add movabs fcoml add test add and add lahf adc add (bad) sbb and add add add add add add add cmc sbb sbb add (bad) jns add movabs sbb add (bad) mov add (bad) jns add rex add and add sbb cmpb add hlt sbb loopne (bad) add movabs adc add movabs fcompl add movabs sub add orb add sbb cmpb jmpq push jmpq push jmpq jmpq jmpq rcl add and sub mov jmpq push jne push jmpq jmpq mov jmpq jmpq stc sbb (bad) lock mov mov cmc bswap cmc stc jns add jmpq push jmpq jmpq xor cmp stc bt sub jmpq divl jmpq mov jmpq mov jmpq add shl add btr sbb add inc mov cmp clc bt add jne mov jmpq movzbw xchg mov neg mov test bsf mov cmc cmc add jmpq decl jmpq jmpq jmpq bsf xor bt mov jmpq jmpq lea dec movsbw bt jmpq push jb push jmpq jmpq stc sub jb mov jmpq jns sub jmpq cmc cmc stc and jmpq push jmpq popq jmpq jmpq jmpq pushfq jmpq rep data16 (bad) or stos (bad) add dec pop cmp or mov pop std std cmc test popfq jmpq jmpq jmpq jmpq push jmpq mov jmpq je stc cmp jmpq jmpq jmpq sub jmpq push jmpq (bad) hlt add mov cmc mov mov cmc bt jmpq mov jmpq jmpq push jmpq push jmpq jmpq bsr and rol lea cmp bt jmpq jmpq pop jmpq jmpq not jmpq pushfq jb popq jmpq mov jmpq mov jmpq push jmpq push jmpq jmpq popq jmpq jmpq stc sub jmpq push jmpq jmpq add jmpq jmpq mov jmpq pop cmp cltq cmp jmpq not seta mov jmpq jmpq clc cmp add jmpq clc sub jns bt sub jmpq push jmpq jmpq cmc shl jmpq jmpq jmpq push js push jmpq push jmpq jmpq push jmpq push jmpq push je push jmpq mov jmpq mov jmpq jmpq jmpq jmpq push jmpq push jmpq jmpq push jmpq push jmpq sub jmpq jmpq jmpq push jmpq mov jmpq ja shld add mov btc neg clc lea stc sub shr neg lea movzbw btr and shl shl movsbl btc sub movzbw movsbq mov jmpq push jmpq jmpq je test jmpq rol jmpq popq jmpq push jmpq neg setle lea mov inc add cmp inc mov adc test clc mov bt bt clc add clc shrd jmpq clc bt add cmc cmc cmp mov jmpq add jmpq jmpq jmpq push jmpq push jae push jmpq push jmpq pushfq jmpq sub clc test cmc jmpq mov jmpq jmpq jmpq push jmpq stc bswap stc bt test test sub bt ror jmpq push jmpq movzbq movzbw rcl cmc rcr mov jmpq jmpq jmpq jl popq jmpq jmpq push jmpq pushfq jmpq or neg bts mov shr jmpq test jbe bt add jmpq push jmpq mov jmpq push jmpq movzbw mov not mov jmpq jmpq jmpq push jmpq pushfq jo popq jmpq push jmpq xchg mov movzbw lea shrd mov jmpq mov jmpq clc stc clc stc cwtl clc clc cltq cmp cmc sub jmpq jmpq movzbw pop jmpq jmpq jmpq jmpq jmpq jmpq jge popq jmpq (bad) lock repz bts cmp xor sub add stc mov shrd cmp ror add and mov and adc shr sub sar neg add bt dec btc stc not data16 data16 (bad) neg lea sub sbb cmc sub cmc bt cmc movzbq mov mov bt clc bt ror bt stc add jmpq setno mov jmpq bsr bsf and movsbw shld mov and ror lea not movabs mov shr lea add adc shld mov or add sbb clc dec mov not neg sub dec ror add movsbw sar bswap not sets rcl neg sbb sar sub adc bts bt rcl sub bt bt movzbq movsbl mov rol seta mov clc jmpq dec cmc clc bt xor jmpq jmpq push jmpq jmpq lea push jmpq push jmpq push jmpq push jmpq mov jmpq jmpq push jmpq je setne jmpq mov jmpq mov jmpq mov jmpq mov jmpq jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq push jmpq jmpq jmpq jmpq popq jmpq push jp push jmpq push jmpq jmpq je cmc bt jmpq inc xor shl btc xor cmp movzbl jmpq mov jmpq inc test clc neg jmpq jmpq push jmpq jmpq lea jmpq jmpq jmpq jmpq jmpq jmpq cmp jmpq push jmpq jmpq push clc ror bswap cmc sub data16 repz cmc clc cmp clc sub clc jmpq push jmpq jmpq jmpq push jmpq mov xor or dec sub and add rcl lea bt and not add neg and sar shld sub shl sub movzbw mov cmc jmpq popq jmpq push jmpq cmc clc cmp jmpq jmpq push jmpq callq movzbw movsbw jmpq popq jmpq rcl mov add (bad) lock jmpq test jmpq mov jmpq jmpq jmpq inc cmc lea bt clc bt not jmpq push jmpq jmpq push jmpq jmpq not cmc add test bt cmc add clc cmc bt cmp xor test bt jmpq jmpq jmpq jmpq xadd cmc mov sbb mov shr and mov clc jmpq rol mov jo xor jmpq jmpq bt cmc btc mov cmc jmpq mov mov jb mov jg mov jmpq mov jmpq cmp not mov test jp test bt sub jmpq push jmpq jmpq not rcr mov and stc bts mov (bad) icebp rcl mov stc bt clc sub stc jmpq jmpq jmpq bswap bt test test sub cmc bt clc ror jmpq jmpq jmpq push jmpq jmpq mov jmpq xor bt mov cmc neg clc mov stc sub clc mul jmpq jmpq push jmpq pushfq jmpq jmpq jmpq lea jmpq cmp movzbw mov sbb rcl mov test clc sub test clc stc cmp shl jmpq jmpq je setp lea not lea mov jmpq jmpq push jmpq lea jmpq jmpq jmpq jmpq jb mov jmpq push jmpq mov jmpq jmpq push jmpq cmc add jmpq jmpq mov std jmpq not jmpq jmpq jmpq jmpq jmpq test bt and jmpq ja jmpq push jmpq jmpq push jmpq jmpq xadd mov lea mov clc add jmpq jmpq mov cmp cmc xchg cmp stc xor jmpq mov jmpq pushfq jmpq sub jmpq jmpq push jmpq clc bt cmp pushq bt clc cmc add cld popfq jmpq not jmpq jmpq push jmpq push jmpq push jmpq popq jmpq push jmpq push jmpq push movsbw not push lea bswap movsbw push not repz not inc push jb mov movzbw push dec jns mov bswap push dec push movsbw movsbw xchg pushq js movabs movsbw movsbq not setle mov xchg bswap jmpq push jmpq jmpq jmpq push jmpq push jmpq cmc test cmp jmpq jmpq jmpq jmpq bt sub clc cmp shr jmpq jmpq jmpq mov lea std std push movsbw jmpq pushfq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq clc sub jmpq jmpq push jmpq jbe sbb lea cmc stc lea stc test jmpq lea xchg inc btr btc movzbq ror ror add sub not cmc sbb mov cmc rcr sub bsr shr cmp bsr and neg cmc inc mov setae shrd lea btr btc or movabs clc data16 repz stc sub bsf mov sets cmc add movzbl mov neg neg sub sbb cmc neg rcr add data16 repnz (bad) cmc ror movzbw neg shl sub bswap rol sub lea clc movzbq mov bt movzbl mov stc ror test stc test test add jmpq push jmpq movzbl jmpq clc and jmpq js push jmpq jmpq mov test rol movzbl cmc jmpq je cmc clc cmp jmpq jns mov jmpq push jmpq push jmpq jmpq push jmpq jne shl mov xor movzbl mov cmp cmp jmpq add jmpq push jmpq push jmpq jmpq popq jmpq jmpq mov not not mov jmpq sbb dec mov rcr mov cmp stc sub jmpq jmpq jmpq clc sub jmpq jmpq cmp jmpq pushfq jmpq je test cmc cmp jmpq jmpq mov jmpq jmpq jmpq push jmpq sub bt clc stc bt imul jmpq jmpq mov jmpq sub inc mov cmp test add jmpq push jmpq jmpq jmpq not jmpq jmpq popq jmpq jmpq lea inc rcl jmpq clc addl cmp clc cmc jmpq jmpq mov jmpq push jmpq push jmpq stc imul jmpq mov jmpq push jmpq jmpq push jmpq jmpq setne pop lea mov not movabs pop retq jne pushfq jmpq shrd cmp ror clc mov cmp add jmpq mov jmpq jmpq je cmp bt clc clc cmp jmpq jmpq push jmpq setb ror adc xadd not inc bsf bt inc mov stc jle sub sub btc and bsf cmp mov sub stc shr lea clc movabs clc adc btc add test lea btr mov shld inc ror add neg jmpq jmpq mov jmpq jmpq jmpq jmpq bsf mov bt stc jmpq jmpq push jmpq ja jne je jmpq jmpq jmpq rol jmpq push jmpq jmpq jmpq je stc addl test sub cmc clc xor bt cmc cmc bt xchg stc stc cmp test cmp jmpq jmpq jmpq jmpq mov jmpq jmpq mov jmpq push jmpq mov jmpq jmpq mov jmpq jmpq mov jmpq jmpq push jmpq je jmpq push jmpq push jmpq mov jmpq mov jmpq jmpq popq jmpq mov jmpq pushfq jmpq jmpq jmpq shld mov or inc mov shr mov bt (bad) icebp mov test add stc shld jmpq push jmpq shl neg inc and movzbl cmc clc xor clc cmp bt add jmpq jmpq cmpl jmpq jmpq push jmpq popq jmpq pushfq jmpq jmpq jmpq jmpq jmpq push jmpq push jmpq push jmpq jmpq jmpq push jmpq jmpq jmpq jmpq test clc stc test ja je test test test cmc addl stc bt bt clc sub cmp cmc sub clc xchg test bt bt cmp cmp jmpq jmpq push jmpq push jmpq lea jmpq clc add jmpq push jmpq popq jmpq jmpq jmpq push jmpq jmpq push jmpq jmpq jmpq jmpq jmpq cmp sub jmpq jmpq jmpq pushfq jmpq jne bsf cmp or neg xorb mov bswap setle pop jmpq jmpq jmpq jmpq popq jmpq lea stc stc stc jmpq jmpq jae popq jmpq xadd adc jmpq jmpq mov jmpq jmpq rep shld pop shld clc btc cld pop std std popfq jmpq pushfq jmpq jmpq jmpq mov movsbq mov jmpq push jmpq jmpq jno pushfq jmpq jmpq jmpq mov jmpq mov jmpq push jmpq push jmpq jmpq push jmpq jmpq cmc xor cmp cmp jmpq push movzbw cmp or sub and jmpq jmpq push jmpq jmpq push jmpq jo ja sub or setge not mov sbb lea xchg test bsf sub bt clc lea sub shl and rol sub lea movsbw mov movzbl pushfq jmpq cld cld jmpq jmpq mov jmpq mov pushfq mov push cld mov jmpq push jmpq push jmpq je cmp xor stc clc cmp jns jbe or lea clc lea jmpq jmpq mov jmpq jmpq jmpq mov jmpq push jmpq push jmpq jmpq push jmpq pushfq jmpq jmpq jmpq jmpq popq jmpq push jmpq jmpq mov jmpq push jmpq push jmpq push jmpq push jmpq inc cmc jne clc cmp not stc add cmp stc test clc add bt xor stc cwtl bt stc cltq cmc cmc jmpq jmpq jmpq jmpq lea jmpq popq jmpq clc mov sub neg bt setl mov test cmc sub cmc shrd jmpq add cmp movzbl mov jmpq jmpq jmpq mov jmpq mov jmpq movsbw data16 repnz btc mov cmp cmp cmc stc add jmpq jmpq ja jmpq push jmpq mov jmpq jmpq dec stc test cmp lea clc stc cmc xor cmc stc sub jmpq pushfq jmpq jmpq clc shr jmpq mov jmpq push jmpq push jmpq push jmpq add jmpq push jmpq mov jmpq lea jmpq push jmpq jmpq jmpq jmpq jmpq jmpq jmpq sub jmpq push jmpq jne lea xorb jmpq popq jmpq push jmpq clc mul jmpq jmpq push jmpq jmpq jmpq jmpq lea jmpq movsbw lea shr stc mov jmpq popq jmpq jmpq push jmpq stc cmp xor cmc cmc cmc stc sub jmpq jmpq popq jmpq popq jmpq push jmpq jmpq push jmpq push jmpq push inc not xchg mov bswap inc bts xchg jmpq jmpq mov jmpq dec bt lea cmc clc clc xor test sub jmpq jmpq bsf inc mov shl mov cmc test sub bt jmpq push jmpq jmpq je stc stc clc bt addl cmc cmc sub clc jmpq or mov cmc inc rcr mov test jmpq inc stc clc not cmc cmc cmp clc add cmc cmc cmp cmp add cmc test bt bt xor test cwtl test cltq bt jmpq push jmpq jns push jmpq jmpq push jmpq jmpq jmpq jmpq cld mov movsbq lea std push mov lea movzbw mov ja std std cld jmpq jmpq push jmpq rol setge ror shld add stc or not shr xor not movzbw bswap dec dec bsr lea neg or mov stc bt jp sub jmpq ror rcr bswap movzbw not and rcr movzbl mov lea xadd test sub movzbl lea bsf sbb and inc bts mov neg jmpq jmpq jmpq jmpq jmpq jne push jmpq jmpq jmpq mov jmpq jmpq mov jmpq mov jmpq jmpq jmpq push jmpq popq jmpq clc add jmpq jo pushfq jmpq mov jmpq push jmpq push jmpq jmpq jmpq popq jmpq callq jmpq jmpq push jmpq jmpq test sub test shl jmpq jmpq sar mov cmp cmp stc add jmpq cmc bt clc mov jmpq dec cmc bt lea cmc stc clc test xor test cmp cmc cmp sub jmpq lea jmpq push jmpq es mov jmpq jmpq cmp cmc cmp sub cmc jmpq 