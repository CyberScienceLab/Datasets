xchg pop and mov push mov add cs into sbb add jecxz mov lcall push xchg push push add cmp add ljmp sub ss xchg mov cmpsl leave jp jnp (bad) icebp fldcw cmp ja lret dec int3 mov mov bound push clc mov ret les pop dec inc adc rorl mov dec sub ret sbb sbb push outsl addr16 int adc ja test adc sbb ret pop pushf pop jecxz or jle ss lret (bad) aaa jl fiaddl xchg pop fwait rolb in cmpsl out xchg xor adc mov gs flds dec loope imull cmp scas cmc (bad) loop inc (bad) out jecxz or mov xor cmp stc sub ja mov bt clc je test add stc pushf jmp mov pushf pushl pusha lea call push push push mov push pusha push lea jmp jmp movb jmp lea call call sbb lods adc and and sub (bad) push lahf mov sti in push adc scas dec test and lds jg rcll sub push jnp in push inc negl and (bad) ss mov add cli lret sub fildl enter loope popf pop shll jnp dec jbe out test test pop stos push shrb (bad) pop sahf scas outsl int js dec jle aas (bad) ds enter fisubl jo mov aaa sub xorl cltd pop iret adc jns jge test xchg sub mov add (bad) shlb cmp movsb jmp cwtl popf xlat sahf je mov fnstsw movsb mov cmp in cmpl jle dec int test xor or rorl (bad) dec inc jg daa imul cmp xchg imul cltd adc (bad) xchg (bad) xchg or xor mov jge aad jne mov (bad) sbb cmp clc cmp call inc inc push inc push dec xor cs insb add shrb inc add fadds mov (bad) bound add shrb sbb jno xor add jmp add add adc xor add call push pop xor add iret jg push cmp inc add add loopne nop xor xor add call int3 in inc add pop lahf ja mov mov add add jg jle int3 push xor add call les inc add loop dec jg jno pop xor add enter fidivrl xor add inc jmp cli xor add rorl ss call add pop push lahf data16 pop xor add es pop xor add call push pop xor add call pop push xor add cmp pop xor add call xor inc add (bad) cmp ljmp add cli push push cmpsl mov inc lret sub add fdivp popf jmp inc add testb lret sub add mov cmp xor add call ret hlt xor add or inc movsb inc cmc xor add call (bad) jo inc add cld lret loopne sub addl add stc xor dec or mov cli push cmp xor mov add pop ficomp jne pusha das es add add mov sub add push in xchg stos push cmc xor add shll and xchg pop xor add call pushf jae inc add decb insl pop cli es jl inc add test enter jne inc add lock popa push xor add cmpsl mov shrb inc add add mov inc add add daa dec out adc add inc andl xor add xchg lcall inc add add rcr incl add inc add negb push jp xchg outsl xor add aaa faddl sbb add xorps loop add clc movzwl rol push inc mov push cmc bt add test mov pusha jmp lea call jmp mov test bt test mov cmpb pushl pusha lea jbe jne daa mov test xor or dec mov jmp push jmp xchg pushf jmp call push inc add pop pop enter fs and xchg push dec ljmp scas cmp aad add iret popa jp sbb mov mov (bad) add xor pop jmp test mov fldl push jno std dec sahf int (bad) push mov sahf cmp pop aaa mov fs les push sbb pop adc imul lock fstpl aam sbb (bad) cmp mov ffree mov movsb daa hlt lahf jnp and cmp pusha pushf lea jb rol cmp sbb mov clc mov call rcr movzbw sar stc add adc sete sar inc pop pushf daa add mov call mov push pusha push lea jmp bt bt clc and stc test stc call push movl push jmp setbe mov pushf movb cmc bt cmpb call add movb movb push lea jmp bsr mov test neg add pushf clc btr movl test rcl bswap mov jmp jmp push adc mov movl push pushf lea jmp not mov pusha movb push pushf pushl ret call add add insb add add xor insl xor xor xor xor xor xor xor xor xor leave xor inc ss xorl (bad) aaa or inc cmp add or adc pop cmp insb cmp mov ljmp cmp cmp mov aas push aas lret aas add add add pushf add add xor xor xor xor xor xor or movsl xor mov aaa jge mov aaa divb add cmp cmp pushf cmp pop cmp cmp cmp cmp cmp cmp mov movsl cmp cmp cmp cmp cmp cmp cmp cmp cmp dec ds lea mov xlat fdivrl stc ds aas inc aas bound xchg aas cmpsl aas ret aas add add add js add or xor mov into xor xor xor xor xor xor popa xor mov xor xor xor xor ja jl xchg xor xor xor xor xor pop xor jbe xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jmp hlt xor imul movsl or dec aaa push aaa mov enter aaa cmp outsb cmp cmp cmp stos cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp sub ds push cmp cmp jo jp jg test cwtl cmp lods cmp sarb cmp call cmp or adc sbb pop ds cs cmp inc ds ds ds ds js stc sbb inc aas pop aas aad out add add xor xor xor xor xor inc xor insb xor xor xor xor xor dec xor imul xor xor test xor fdivl lock xor dec cmp cmp cmp cmp cmp cmp mov leave ds fstpt in ds add dec aas push aas cmpsl aas add add add xor xor xor xor xor dec xor pop xor push xor xor xor xor xor xor xor xor mov movsb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jmp aaa ss ss ss xchg mov nop ss movsl ss loop sub cs push aaa jns xorb aaa hlt aaa std aaa add mov lcall cmp push cmp jb js cmpl mov cmp cmp cmp cmp cmp cmp cmpsl cmp cmp cmp cmp cmp cmp cmp jae jp cmpb cmp mov mov mov cmp fstpt push adc sbb and sub sub ds ds ja,pt jge mov aas push aas jl cmpl icebp aas add add add add adc pop xor dec xor xor xor xor xor xor xor sbb aaa xor xor xor xor xor xor xor xor mov mov ss push cmp cltd cmp cmp cmp cmp cmp cmp push aas add add add mov xchg xor xor xor xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov sarl cmp cmp cmp cmp cmp cmp mov sbb pop ds ds aas mov add addb cmp add add sub jae xchg xor xor xor xor xor xor xor (bad) or pop cmp mov mov loopne dec cmp add add cmp xor xor xor mov pushf xor out xor sbb sbb and and sub sub xor jp xorb mov mov repnz sbb pop aaa and sub sub dec aaa ja test aaa mov aaa les enter push cmp and and sub mov leave cmp cmp cmp cmp cmp jae mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp test push ds xchg mov xchg ds cmpsb lods ds mov loop,pt in sub inc aas pop aas add add pop xor imul xor xor xor xor xor xor xor xor xor xor xor dec aaa xorl aaa test mov out aaa cli aaa sbb cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp jbe jnp mov mov fidivrl jmp sbb cmp pop imul mov add mov add add xor xor imul push xor test xor xor cmp mov cmp cmp pop ds ds aas inc aas mov aas add add add push add add xor test xor xor xor xor xorl xor jle je xorl inc cmp push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp ds add xor add add cs xor xor xor pop cmp (bad) cmp cmp cmp cmp cmp pop aas add add add test add sti xor test xor fs cmp cmp sbb and sub sub xor pop cmp popf cmp mov mov mov cmp cmp cmp sbb sbb (bad) cmp cmp fnstsw pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test add add add pop add add xor xor xor cmp inc xor xorb xor xor cmp inc cmp cmp cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp add add add add add cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp add add push cmp cmp cmp cmp cmp jl cmpb cmp sarb clc cmp sbb sub xor inc ds ds ds ds ds enter fdivrs loopne in in add or sbb cmp pop aas js cwtl aas mov aas clc aas add and add xor xor cmp pop xor test mov xor xor xor xor xor push xor xor xor xor jo nop xor xor xor xor xor sub dec xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb cmp add sbb add add sbb inc xor xor adc adc sbb sbb and and sub sub xor xor inc xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov (bad) aaa les enter (bad) aaa aam fdivs fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp cmp cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call ds add add add add add xor add addb or add aaa aas add add add cmp aas and loope add add add mov (bad) xor aaa aad mov and (bad) cmp cmc cmp push cmp mov and enter add add pop xor xor and cmpsl xor xor add xor daa ss mov cmp cmp jb mov and add add add dec add add outsb xor fnsave add loopne cmc xor xor scas aaa loop sbb cmp cmp cmp cmp imul cmp cmp cmp cmp cmp cmp cmp push aas cmpl add and add add xor xor mov repnz xor xor xor in xor leave aaa push cmp cmp cmp cmp cmp cmp mov addr16 es push lcall add add test fdivl clc xor clc xor outsl xor xor xor xor mov aaa ja into cmp mov sub mov dec cmp cmp mov outsl xchg scas ds fstpt add add add or xor xor xor xor or xor xor xor pop ss ss mov aaa or pop cmp xchg cmp cmp mov lds test add add add arpl scas xor xor xor fnstenv or xor xchg aaa pop cmp cmp cmp je scas cmp ds aas add add add add xor dec xor xor xor xor xor (bad) mov cmp xchg cmp cmp cmp fnstcw (bad) aas add add add sub inc xor xor lock jmp mov cmp cmp cmp fistpll cmp cmp lret cmp fistpll lods aas add add jl loope out xor sbb cwtl xor xor xor xor xor adc (bad) ss xor lcall cmp cmp out int jb xlat cmp cmp mov out cmp sarl nop add cmp add pop xor xor xor xor xor xor dec aaa iret aaa lods cmp mov cmp cmp fs ds scas aas add add add and jo mov xor lcall ss mov aaa cmp cmp xchg cmp cmp cmp cmp cmp mov sub aas add add loop pop xor xchg xor xor xor call xor xor xor les inc cmp sbb sbb lock xor cmp cmp cltd aas movsl aas cmc aas add add add dec add add xor xor xor mov xor mov xor xor dec aaa icebp aaa lds sub pop cmp cmp (bad) cmp cmp mov in xchg cmp ds push rolb add add scas xor xor xor xor xor jg test aaa pop aaa out sbb sub sbb jb sahf cmp cmp cmp (bad) cmp cmp lds dec aas popa aas mov add add inc add add xor xor fdivs enter inc xor jl clc xor and lods xor mov les push cmp cmp cmc cmp cmp xchg cmp cmp cmp sarl add add add dec add add xor xor xor xor xor jl pop aaa lret cmp cmp cmp cmp cmp outsl cmp fs cmp cmp cmp aas inc btc bsf push shrd aaa or not mov aad movsbw sub push not mov not jmp call sbb dec sbb jp iret hlt jnp cmp and jae cs scas inc mov (bad) in clc rcrl inc xchg mov lds dec loope xchg pop les xchg lock mov sbb cmp dec jecxz pusha mov pop or mov fisttpl nop sbb or pusha fidivr pop cmp mov sub xor xorl sub ret cltd or and mov int push nop (bad) sbb mov jmp orl jmp xchg xchg decl jae out cmp sti int mulb sub add iret rorl orl mov es adcl mov sbb add imul inc and push pop push sbb add sbb hlt and ljmp fnstsw cmp (bad) movsb aam inc fucomi sub stos repnz dec rcll insb ds or pushf scas test xchg jbe lahf sbb pop aaa test mov mov aaa shl adc pop scas cld cmpsl push mov or inc cmp cmpsl dec ja adc daa sti inc mov cmp mov test (bad) jbe stos sbb scas mov stos rorl mov mull xor ret rolb mov mov cmp cmp mov (bad) jno mov (bad) ja dec mov rcll out dec js ret aaa fmul ss xchg cmp cmp sbb ljmp sub repz mov jns shrl cmp adc or sbb push movsb xchg push pop cwtl add ss lods (bad) in repz call cmp or in push mov aad std pop (bad) cmp pop (bad) jo mov mov push mov iret movsl inc ss test lods push out hlt pusha inc mov mov mov or sti sub jmp add fwait lods mov insl add push lahf sub add aas or es test dec adc pop movsl aas loopne jmp inc or int3 fstpl stc jmp fmul mov mov (bad) std shrl adc pop out or aas xchg sbb adc push dec inc dec dec xor cs insb add add push cmp pushf jmp test add push lea jmp cmc test jmp imul cs inc add mov int addr16 (bad) imul imul or (bad) mov push add idivl mov sahf outsl scas push jp mov rcrb inc orb sahf or adc push pop cmp cmc scas lret jbe pop scas mov adc sub in roll inc pop in sub jge popa cli xchg jns push paddd cmpsb ret imul fidiv arpl dec mov or mov pop fadds mov inc fimul xchg sub and sbb cmp sub test mov lea jl cmc xor pusha cmc stc call movsbl push mov push call push cmc stc imul movb mov call cmpb pushf pushf call mov clc sub mov mov (bad) dec mov les aam (bad) in sub mov out stos inc adc mov jno imul xor dec testl push inc cmp icebp in and lock rorb inc sti ljmp lret pop push and iret das cmpsl pop leave ss (bad) mov repnz add inc ret subb or jne push das dec leave aad in add mov xor cmpsb ret hlt push test addr16 push pop rclb vcomiss inc int idivl jbe inc inc xchg and pushf mov lea je bt test push sub cmp pusha cmp pusha lea ja jg imul pushf push cmp add pushf movb lea jmp jmp mov lea jne setle bswap lahf movb movsbw push cwtl lea push jmp mov add add cmp add add add add add add (bad) or add add add add lods xor add add add loopne add add add add add add popa mov add jae add sub lcall add add lock cmpsb adc dec jns adc push test (bad) fdivrp xor dec scas inc fsubrl int3 (bad) aas mov daa stc repnz adc out cmp pop xchg cs xor fnsave std sub cmp arpl mov push push enter mov jg jle push adc cmp xchg ds sbb jmp lret popa lahf sahf inc lahf adc test add pusha add lock or jmp fsubs pop inc std inc outsb mov adc test imul mov or and lods mov sbb outsl pushf repz (bad) push jnp (bad) jecxz dec stc pushf sub xchg imulb inc jb dec fcmovb cmp dec loopne sbb test vorps pop aaa data16 add mov mov das xchg mov pop scas jne sbb xchg es sub cld rcl nop inc leave cmp and cmp lcall jmp sub ljmp push movsl or mull mov cmp notb shll arpl jnp sti push sbb addl or int3 pop cmp popf mov subl mov mov add dec imul sub loopne sbb shll int3 xchg cmp shl or lods add lcall sub lret lret pop in pop cmp inc aam stc jb and or jno pop sbb out cmp lods aad cltd adc inc out push jae cmpsl sbb stc hlt pushf jp (bad) (bad) push adc dec lcall cmp xchg into jmp lods repz lods sbb loope add test xorl test adc xor mov cmp jb out dec (bad) pushf aam dec imul (bad) push mov ret jnp (bad) mov cmp stos mov jmp add jno dec stos cmp icebp insb mov xchg rclb test mov in push jp (bad) idivb call cmp cmp stc mov (bad) mov test aas mov push out arpl add sub cwtl mov lds daa ror mov (bad) leave mov mov test or lret (bad) into mov or in mov mov lods sub cltd mov mov cmpsb sub outsl out adc les and nop shll sahf daa lahf pusha push insb mov test out dec popl sub into mov sahf and (bad) mov sti (bad) jecxz (bad) ss and fbstp enter push push fdivp add xor jnp inc add pop je jp int3 iret fs repnz lds sahf stos outsl adc or cld scas jns cmp imull in rcll out out add enter xchg add xlat mov ljmp (bad) jns and xchg imul repz sarb ja sarb mov jbe aas xchg aaa loope dec add (bad) hlt aad movsl push fwait scas ret xchg lahf adc cmp sbb loop rcpps je aad pop or adc push lods sti push dec lahf cmp (bad) (bad) (bad) das cmp inc jmp fisttpll and mov adc jns add mov das bnd sti pop mov inc enter test (bad) fistl jb add imul fdivrs dec scas in push aam sbb jne inc xlat inc add jecxz sub mov xlat cmp in ror das sub std xor cwtl xchg ja xchg or sbb mov cmp or sub pop out xchg push ds in mov (bad) in sub push adc and xchg gs inc nop mov xlat aad in in inc mov mov jl add (bad) fs or jecxz fwait mov addr16 dec (bad) imul dec fdiv dec or out adc add xor mov das out rorb mov jbe lcall cld cmp insb dec dec push in push loope inc out (bad) fisttp call mov loope cmpsb sbb jl das je mov shrb sbb jge movsb sbb cmp orl inc sub sub sbb mull iret adc dec aam jmp movsb (bad) sub je lods jb outsb adc add mov cwtl cmp mov test xchg (bad) aad or inc je data16 lret jbe jg mov fiadd xlat mov jp ret inc xor ret cli sub loop out or daa mov fcoml push push or pop and push push sar daa rcrb mov and fwait push shll adc mov call fldl outsl inc arpl dec jmp icebp clc or mov push cmpsb xor aad push sub and mov bnd mov stos mov pop jp aaa addr16 jecxz and lods bound fwait push out outsb scas mov inc insb xchg cmp jnp jbe dec movsl sbb mov fwait ljmp xchg (bad) mov cmp jmp jnp shrl xlat outsl outsb out sbb pop (bad) or push mov insb movsb inc mov ret adc or cmp lret lods cmp pmuludq push add fldl cmp jbe iret cmp inc pop cld jmp jae push das push fcomi ret nop (bad) dec xchg in sbb gs pop rolb jmp inc leave idiv xchg cmp rol mov test addr16 dec lahf pusha dec xlat mov test jae lret dec add mov xchg pop mov jecxz das mov adc xor mov lds xor xor jns sbb pop test dec lret jg inc testb test push sbb (bad) add push scas inc jo adc sbb jnp negb jp xor ljmp pop push xchg pop cmpsl and cltd mov add mov (bad) sub repnz lahf call enter inc outsb push and jno lds and int aas adc arpl (bad) das (bad) lock pop out vxorps xor mov mov (bad) ja sbb call cmpsb (bad) (bad) adc les push inc ret bound jle and push add mov in mov push push mov (bad) or xchg mov push add arpl (bad) cmp xchg mov arpl mov jno shll shl aam mov sbb int3 sub push dec ss pop aaa and cs mov sbb in rcll push fisubr inc outsb dec mov dec xor bound or outsl add mov out inc imul pop int cli sti movsb fs pop mov mov loop test add pop push mov xchg bswap and ss (bad) ds int3 pop lods xor xlat (bad) xchg jle icebp and sarl xchg push or mov xchg add sub pop jbe xchg mov xor adc pop mov mov or push dec gs scas orl xor inc movsl inc mov pop cltd test adc ljmp push leave in in and cmpsl inc sbb lds add mov decb xor aad popa push sbb or inc or dec loopne js or les sbb imul push lcall mov pop in xchg (bad) cmp je xchg fucomp cmp into jmp sbb xchg insb jg mov dec jl dec fcompl ss mov cmp pushl lahf push adc mov adc clc ret mov xlat les loope mov mov dec scas test inc cmpsl aam std inc test (bad) xchg arpl pop and dec or sbb (bad) sub fs mov inc mov test sbb xchg test xlat and push xchg push add mov sub xchg out lods pusha incb popa mov xor insl das lretw mov xchg ret in testl jp cld mov outsl call cltd sub rol popf divl xchg xor xlat loop lcall decl xor mov sbb cltd mov ljmp push pop jg cmpsl mov xchg ret ljmp add dec or mulb lock ss push das fnstcw popf cmpsl xor mov pop mov bound scas pushf xor fwait xlat jmp sbb loop adc clc xor or cmp push shrl and out cs adc hlt gs adc ja inc lahf fidivrl mov out dec xchg push or pop push xchg pusha mov outsl das mov lret mov mov jns sti sub inc pop loop ficompl fdivp push cmp shr daa xor mov (bad) aaa and lret adc popf adc repz (bad) xchg pop clc sbb je jo xchg mov fdivl xor mov xchg roll push sub inc vpabsw inc pop aaa lret sub cld push and and pusha cmc int sahf xchg repz fisttp fldcw add sub xor sub lea (bad) mov (bad) fcmovnu add mov movsb cs iret pop imul mov cltd das aam pushf sbbl pop mov movsl push or adc fsubl xor ja fsubl inc cmp fldt jnp push xchg (bad) mov aam inc add push xchg lahf mov add sub pop mov jg add push or xor add jo leave (bad) mov (bad) (bad) mov pop cmp out sti lds (bad) aam xor jle mov fldcw xchg pop mov or adc adc cmp jbe xor bound aad xchg jb stc lock test in pop push mov mov ret sub pop (bad) repnz inc loope and cld mov nop dec std ror xorb (bad) jb lds (bad) enter hlt adc mov cmp adc mov pop icebp and test pop mov dec xlat xor sub addr16 mov fcomps jle and and mov clc test outsb test js fsubp dec bound or test arpl xchg and pop xchg jb jne xor popa stc pop (bad) or xor mov sub mov cli ljmp int3 lret icebp mov lods jne mov mov add xor lods adc leave sub inc push aam mov mov loopne (bad) (bad) out (bad) cld cs jl loope pop out mov sub dec push inc lods dec leave and lahf mov push jbe jp xorl cmp xor cmp imul test ljmp inc aaa repz pop sti stc mov adc out and sub pop fcompl pop and mov loopne (bad) and pusha cmpb mov (bad) iret pop outsl mov scas xor jnp sarb dec shlb (bad) mov in das adc int (bad) jno add loope mov push and (bad) movsb and les push mov std (bad) cld sti inc setnp es shlb add in jl,pn loop jle fadds cmp int3 jg jg rcrl loope jne xchg inc cld call push cmp cwtl adc pop outsb cmp or je imul and lahf sbb mov scas and xor in test dec add push es test fwait ds mov adc mov ljmp mov inc std sbb stos out cmp pop js aaa push fcmove movsl ds adc pop jb rol mov jbe jg adc addr16 std orb fdivs inc popa test add ljmp popf in mov leave mov jnp (bad) (bad) clc mov ljmp add fs es orl rorb add cmc icebp out (bad) js in inc repz pop xchg jecxz (bad) fwait (bad) leave rol mov popf out test xor push jno ljmp rcr cmp push jbe cmp sub add pushl jmp int mov dec pop inc fsts xchg data16 (bad) push pop inc dec lds jb mov xor cmpl rorl dec mov jno fnstcw jg pop sbb rorb push nop mov cmp sub shl (bad) out mov (bad) mov jle aam sahf sub jge pop or mov popa into lods or push out inc jne (bad) into mov pop mov mov test mov stc sub cmc clc repnz lea jp jne sub bts mov pushf rol pushl lea sub add test rcl adc lea clc cmc cmp pushf sub pushl cmc pusha pushl popl cmc test cmc clc cmp call pop lods pop mov inc sarl dec jbe jecxz ja adc cmp mov jb push js rcrb push sub inc mov std mov adc dec cmpsw cwtl jecxz push mov lea repz add stc or xlat sbb cltd rcrl jnp in jns mov cmp adc xchg sub pop mov or xchg xlat mov hlt mov (bad) push stos add jno test das inc mov xor sub xor popf in pop adc cs repnz int int adc cmp enter jmp pop popa mov jnp (bad) mulb pop scas imul inc xlat pop add adc mov xor xor aas inc and add xor push sub fcompl jo add aam cmp add (bad) mov mov mov pusha inc cmp add movsl enter jns pop xchg xor or into push popf pop scas movsl dec inc out xchg lods inc loope push cmpsl icebp cld popa push mov lret cs or dec mov clc push jg repz out push fisttp xchg mov mov or add clc pushf bt cmp add pusha push push lea jmp lea jne lea ror inc lea mov cmp pushf cmc cmp pushl call lea jb pusha cmpb pusha pushl lea jne pushf or shld mov jmp (bad) loopne stc push pop inc in movsb dec add lahf leave stc adc sahf test sub xor inc or xchg pop scas mov loopne pop inc sahf loop jbe push push ret enter jecxz xor adc leave xchg imul out fdivs popf in adc test loopne mov enter push movsb jno sbb lahf out dec lods jae cmp mov xor pop shrb cmp leave pop fadds popf in jb jg push ds sbbb or (bad) cli xor lock inc scas adc dec mov push pop inc rcr mov push hlt les loop push add mov jmp in loope cmpsb push cmp add iret or fistpl ret adc push test add add es xchg leave pop sub or loop fs adc in movsb pop cld jnp inc addl fidivrl mov stos aas in jmp cmc jmp mov jecxz xor jle or xor cmp or inc or mov lods das mov mov pop mov jo pushf jecxz or je repz mov aas dec pushf jae xor and (bad) or add aaa aad mov jmp pop xor das push pop inc mov cli xchg sub aam hlt ds scas cmpsb cmp lahf push push xchg cli cmp mov mul pop pusha jno lret cltd dec test dec and ss mov mov decb adc mov cmc mov push pop push lock add jecxz fbld addr16 xchg mov (bad) xor lods adc mov lods add mov cmp mov pop push pop inc pop mov mov sub adc jmp sbbl push push movzwl or xchg sbb push lcall adc ljmp jns mov std test cld or clc mov scas adc outsb mov sbb dec shrl sarl pop sub dec ret sahf hlt sbb addr16 xor (bad) mov (bad) outsb std pop mov xchg (bad) cmp add in test dec add stos mov cmp (bad) test pop inc movsl imul pop inc mov mov loop xchg cld push data16 xlat jb mov imul sub add movsb (bad) sub cmp sub jno xor lea sub and lock mov insb ja mov inc mov mov mov inc cmp cwtl add jnp add inc xchg push jmp ss cltd jle pop dec xchg popl in cld push popa or inc into cld sbb cmp xchg mov sbb sbb nop cvtps2pi popa inc cmp xchg lcall fistpll adc fistpll pop fildll push movsl and into jo addl out (bad) fwait sahf leave pop mov xlat ljmp pop iret jns mov les fwait xor mov inc fs xlat std std in mov mov mov aaa out pop movsb imul aaa mov cwtl or mov adc (bad) rclb xor push mov stos dec add xor push sub push outsb or cmp rcll (bad) clc stos inc cmpsl outsl int3 jb aam insb imul test or in cmc cmp pop sub hlt ret popf fsqrt adc push xor push lcall push repnz ja (bad) xor testb mov popa or lret enter mov dec pop not (bad) lds rolb pop je fistpll and cmpsl pop sub cmp cli xchg addr16 sbb mov test push cli enter dec or mov jp aas and mov mov ds mov (bad) mov int mov (bad) mov mov arpl aaa adc cmp call mov (bad) xchg lcall jp hlt sbb (bad) mov lea rorl push mov fnop sbb sub and add in or imul inc cs cmpsl or sub jecxz push inc lret xchg stos adc (bad) cwtl outsb insb test cltd xchg push stos jmp das jg inc fwait add mov xor out jnp jg or jns jbe ret mov ja es ja or cmc scas mov jmp dec jo cmpsb pop cmpsl dec movsl mov cld inc cmp mov lcall mov gs jp xchg jb loop sbb loope ja popf add sub daa cmp fs cmpb sbb xchg jp mov (bad) ss loopnew frstor pop mov jecxz scas sbb jle jae (bad) push inc mov sti add stos and pop cmpsl jb push dec inc inc inc add adcb and fsts imul pop sahf mov pop les sbb cmp and insb aaa cmp shrl ja daa dec push inc out mov push dec cld (bad) push fsubp mov inc xchg loope ret (bad) sahf fs sbb test movl fsubrl dec inc xchg xor inc inc adc xchg data16 push sbb stos cltd mov cmp loopne gs xchg dec add (bad) mov popf sub cmp ds push jecxz movsb jg xor xchg insb popa adc cmp mov pop push push pusha and out xchg xchg dec popf movsl call nop jle xor adc adc pop testl push inc out lock jnp mov push push frstor (bad) std fcomps xchg je std movsb lahf fmull inc push insb xchg push int3 xchg (bad) shll pop xchg add iret fnsave sub xchg call negl push dec and popf push add push sbb cwtl addr16 fwait mov adc xlat jmp lods mov lret (bad) mov pop pop jecxz and or in pop std adc repz dec sbb pop mov pushf xchg push push lods mov paddusw jge pop pop push pop ljmp push mov ret (bad) into aad jmp jne cmp xor mov shr lcall or popf or jae (bad) (bad) xor mov xor inc and (bad) xor ljmp fst mov mov add std ljmp jbe and mov sbb das cmp (bad) xor pop or fsubl inc mov das movsl mov xchg jg rorl add push cmp cmp sub mov cmpsl les std xchg adc push fiadd arpl push jl sbb cwtl loopne adc push and push (bad) stc mov mov pop int3 xchg ds sahf add in lahf push sbb stos call insb cmpb cmc test ljmp in xlat je rcrb shrl pop push movsb xchg call jp cmp jle inc adc fwait cmpsb adc cmpsb (bad) lret sub fistpll sbb push xchg rcrl lds or jmp dec cmp test adc mov mov js push orl inc push mov jle pop aaa cld sub fcoms xor bound mov sub aaa dec cmp out mov push sub pop mov cmp pop movsb pop pop xchg test fstl and inc dec loopne mov bound xor sbb adc ss dec faddl xor popa sarb test inc movsl push pop or std loopne sub daa enter pop push jnp jp jl loopne jecxz xlat mov loopne popf jge jp flds mov pop cltd incb push push sub add jo loopne cmp jge pop mov sbbl mov pop aad xlat push arpl outsl (bad) mov scas dec push sbb xor bound pop and pop xor lea into xlat fnstenv xchg push pusha and xchg or sbb mov test lcall mov in lea pop lcall dec cli aaa shr sahf and lods jl (bad) stc mov fnsave push mov jge stos jg pop push push aas push jnp mov adc aad cmpsl adc xchg fs xor icebp inc dec insb clc mov cmp mov xchg fcmovnu test and or xchg or lods ds xchg mov inc pusha clc js mov nop sub push add mov sub mov movsb mov add sub ljmp xchg xchg js or (bad) (bad) cmp insb (bad) lret imul mov dec pop inc jp call or imull sti lcall clc testl lea shrl repz arpl mov into call mov add sub ret sbb push cmpsb sarl mov pushf repz pop sub loope ljmp movsl jno cli lea pop pop imul xchg leave repz in int mov dec jl jmp lods ret or das jmp and addr16 int3 bound xor or pop stc gs mov xchg je aad andl pop xchg cmp ljmp mov sub mov xchg xor inc cmp es ret push orl and cmp loopne,pt stc pusha add xchg cmp (bad) mov test jns repnz out push pusha add add add xchg mov jnp ret lahf iret push or cmp lahf pop shr ret dec cmp (bad) xlat and and sbb int jno (bad) xor ret jne push mov lock inc mov or push sbb jl,pn adc add push push mov jp lret mov stos mov jns jbe test ja stc push scas xor add xchg aaa inc pop movsl aam adc out out data16 pop or inc cs in dec aam idiv divb push mov out xor mov fnstcw mov cmpl push loopne adc jnp out add adc xlat lods jno cltd ss cmp pop outsl outsb cltd out dec movsb mov or push rclb pop push xchg lret push adc cli imul mov sti add imul push fidivr sub mov dec cmp cli scas jnp inc popa mov xchg push sar lahf lds orl pop cmp outsl pop in loope stc rorb insb jne cltd fsubp fdivl ds mov mov xchg jb inc in xchg push mov jp into push jg insb mov mov push idivb xor test cmp xor pop sub in or cmpsl scas cmp sub sahf testb pop adc sbb popf nop xor sbb loop ret mov roll js lahf pop cmpsb in hlt das sbb mov shrl xor sti jns fist mov jbe inc jecxz push les cltd sbb and (bad) pop push (bad) mov loopne imul mov mov cmc jbe test stos sub lods xlat int mov jp in (bad) inc and loope xchg add fs movsb aam sarb cmp (bad) cmp add cmp aaa cld repnz dec nop movsb jo pop (bad) aad xchg popa xorl out mov scas mov sbb mov push bound std arpl xor cli lds mov in pop pop mov xor add ljmp cwtl mov or push adc mov cmp (bad) mov test int daa lahf jle lock enter (bad) and pop sbb mov sub cmp mov test enter (bad) mov lock jbe jmp lea jne push pop movsl mov add or inc int dec rolb rol mov pop imul sub push push xor jg pop jnp (bad) inc nop sub dec push out cmpsb in xor cs outsb push lret pop mov popa (bad) sbb xor adc call in and ret pop sti push lock insl jae pushl sub in in (bad) (bad) clc dec xor es sub sbb push mov xchg orb push mov test mov pop jb loop je addl js pop aaa push jge xor inc push nop gs popa inc cmp push xlat xchg xchg adc addl mov add push and or icebp xchg fnstenv push (bad) jg test arpl and xor (bad) xlat jo insl inc push jae jae push lds or push outsl xor loope mov enter std mov mov ss cwtl pop mov sub mov sbb push cwtl jge insl fcmovne jb jg fs lcall mov pop pop xor jecxz jae test inc iret fcomp mov data16 sub shr xor sub inc add add (bad) xchg fistp pop mov js push cmpsb cs jo mulb lret xchg add les xchg outsl fwait push ret cmpsb push push nop xchg rolb aad mov dec or call mov imul in movsb popa roll (bad) sub rorl mov add aas dec shr (bad) xor mov das jnp dec push adc outsl mov es insl xchg pop mov mov and in sub sub inc icebp pop pop sbb scas pushf push or adc ret mov mov stos (bad) (bad) mov and adc loop int dec xchg xor add mov pop insb jnp je push (bad) dec (bad) sbbl jge lcall xor sarl call scas sub adc loope cwtl pop xchg adc mov lret rcrl mov push scas notl ficom mov es or (bad) imul jl rorl js lea jns int3 outsl insb xor jae and cmpl je mov mov push mov pop jnp or int sub aam insb stc push rcr lret inc jle,pn add mov sbb aas test adc popf popa test xchg mov jecxz pop test mov pop mov (bad) (bad) fmull enter repz add das into pop (bad) jno rorb sbb mov cmp scas (bad) rcrl cmp aad jae into push das and inc in shlb je mov lds (bad) icebp mov jbe stos push mov test rclb pusha sbb loopne rep dec mov cli or out lds lret stc int lods scas js jno pop test mov fnstsw add iret popa push mov sti add mov loop bound and in and lahf (bad) adc sbb ficompl dec nop sub pop cmpsl jg out mov int pusha imul arpl daa gs dec mov mov jne outsl stc fwait xchg (bad) into sbb repnz sub idivl jne imulb imul push cmpsb or push fdivrs bound ret push ss mov jae (bad) jae and pop xchg pop and hlt int jge in sbb xor xchg dec out pushf mov mov sub out insb adc ret ljmp cmp mov xor gs cwtl stos or jmp int xchg jle cmp loope loopne dec out leave popf pop cli xor lret leave je inc (bad) cmc scas ljmp (bad) stos push add jnp xchg jb data16 xor (bad) and inc mov mov ja cs adc mov sahf (bad) and sbb arpl dec jp popf push ja push mov xchg sbb jge lods xchg sub add pop lcall hlt imul fdivrs test (bad) push inc mov mov mov (bad) add add adc xor dec mov mov (bad) imul cmp adc sbbl and adc or jns jp scas jno and mov lret push xchg inc (bad) dec ja leave icebp imulb ret mov (bad) xchg out popf jne cwtl mov mov dec popa inc inc insl sbb arpl mov cmp mov mov adc sbb sbb xlat in dec cld inc jbe lea sub call imul xchg pop aaa mov jnp cld stc insb fnstcw test sbb adc nop push mov jno popa pop xacquire (bad) ret push cmp dec popf jp es cmp or aam xor jecxz pop add inc repnz sub pop mov fstps mov jae in je mov xor pop rorl inc push je mov fiadd xor int jbe pop sub mov outsb or mov test mov or fcomip jecxz dec xchg movsb fsubl inc repz lea andb jg sbb push inc stc add test ja xchg aad fs mov out mov int3 fdiv ret pusha jg push push data16 xchg add push sbb or inc mov xchg and push cltd mov mov (bad) test push test adc cmc test or mov push xor fldt in in add jp jo iret int push dec xchg imul pop int3 and scas mov sub out call xchg dec pop xchg pop xchg aaa sub test popf std inc mov xor ficomp imul or sub aam cmp xchg repz lods daa pusha cltd add popa test repz in in mov ljmp ljmp rclb jnp (bad) (bad) sbb jle cli or pusha sti mov sub jecxz xor dec sub stos fcomp add neg repz mov lea fs sub loopne and xor loopne adc fcmovnbe lahf das (bad) jb fiadd enter sub aas call data16 cmp lret aam es in push mov mov push dec mov push mov rcll and lahf mov mov jb in dec push popf movsl mov xchg add inc jle hlt ja sub mov ss data16 stos jnp or adc mov sub nop inc sbb les js jo pop pop push mov es xchg pop (bad) lahf mov and je sbb loopne pop ja pop (bad) sbb pop push add (bad) and idivb daa xchg hlt les pop jne sahf xchg add notb pop pop jmp mov in stos test sub cwtl inc cmpsl xchg inc lds jbe sahf fisub arpl in ja push and hlt inc push pop jmp aad inc mov xor popf pop mov jno xor loopne sub in adc rep jo sbb push dec mov xchg movsb loopne jnp sbb xchg push pop mov sahf cltd cs inc les jmp out dec lds jno xor xchg les mov push inc jecxz cltd std iret movsl outsb popa mov sbb lock lcall (bad) negb cmp jle inc jne outsl pushf mov jg pushf fbstp rcrl sub stc sahf add pop mov popa sub and sub pop sti and repnz adc addr16 pop mov mov and ja dec mov movl add adc test xchg movsl (bad) repnz mov sbb inc imull daa sbb imul sbb mov dec mov or shlb xchg sbb or and sub pop leave cmpsl add orl movsl dec js fwait nop cli xchg push push fiadd mov dec fldlg2 leave mov pop (bad) popf add mov and pop sahf jb out loope pop hlt mov dec decl push pop (bad) aas scas pushf fdivr pop popf loope les insl push push add or or sahf mov sbb xor pop insl int3 shlb jae int3 fistp out repz lds stos das jg or add push dec lds add clc xchg inc aas popf popl scas nop aam arpl jb aas dec int3 xor nop jns add and or ss cmp xor into xor jge pusha aas add int pop jle xchg inc cmp xlat cmpsb fisubr jecxz stos pop pop push adc movsl (bad) adc inc js in mov xor test sbb xchg int fisttpll mov mov mov inc mov jb in dec bnd das incl dec mov mov jne jmp mov jbe push jae cltd aad ja inc outsb xchg int3 ljmp push lock push mov cs je ret rcl stos sbb jns pusha push cld jmp sub xorl push mov stos daa push call jns cmp xor in xor adc cs jne xor pusha stos mov mov shr js cmc loop popf inc sbb int3 cs daa data16 jnp cmp mov or push and fisubl mov sahf mov iret push cmpsl ds jno,pt cwtl xor pusha ficoml cmp pusha rcll dec scas or pushf xor jo inc or jle negb cli imul jne stos sahf ss push adc xchg mov mov xor test jae add ja mov movb inc dec inc not stos jle jp inc ret and pop sbb or scas xchg sbb mov push dec adc mov adc incb sub das adc mov dec fwait jp,pn sub cmpsb ja pop and mov xchg mov xor mov les loopne jnp outsl and jp stos push xor js mov repz aam (bad) dec data16 and shr mov and (bad) sbb sbbl mov jns rorl roll cwtl jp pop jle into ds mov cmpb cmp cwtl (bad) ficompl sbb and and imul aam add ljmp fldcw es cmp dec sbb movsb clc call ret push pop and and pop fldl2t lock outsl jae les and mov (bad) xchg sahf test or cmpsb sub in sbbl popa add and pop xor push addr16 xchg xchg shll pushf in pop inc das cmpsb cmp ja cmp jle in pop outsb (bad) lcall push sbb popa add out (bad) mov call xor int xor pop repz mov pop in inc xchg jbe sub dec and dec add bound or push mov sub les enter mov mov push cs enter and pop jle (bad) sub mov (bad) gs aaa ret fstl nop je xor gs pop (bad) sub pop inc mov ror ds push je in lds cmp jne pop into into dec add jbe sub (bad) ss jne pop dec inc int3 jmp push test cmp mov repnz jg test mov inc and in in leave fisubrl add push cltd cmp arpl push mov mov cltd mov mov aad pop aaa sub jmp inc arpl sub rclb test das ret inc in push and jl stos fildl loope cmp dec mov xor subl mov push xchg outsl mov xchg arpl clc sbb adcb fildll xchg jl (bad) cmp sahf shrb inc sub mov cmp inc call insl call mov xchg sbb xchg iret push test fucomip lds cmp es sub or fisttp xchg jno std dec leave pop pop leave jge in cmp fcmove movb into mov xor clc dec mov mov jne data16 jae fadds cltd push jecxz mov (bad) addr16 adc cltd neg fs dec outsl or xchg nop lcall fsubrp das push test stos jae aam cmpsl or jp sti es push hlt mov inc sbb icebp subl or test push dec gs xor add jns push imul sahf adc jnp jmp shll lea mov mov cmp hlt clc pop fildll lret or mov mov fldt (bad) jns (bad) lahf inc mov dec jne add lea adc and lea dec aam push out popa dec push iret push js xchg fcomps push dec out dec sub roll imul dec (bad) xchg jp jbe testl enter cmp bnd sbb or add lret pusha sub std clc and push (bad) movsb sbb inc mov push cld cmp jmp lock dec loop (bad) imul lcall mov stos (bad) lods cmp insl fistl sti mov jg inc jmp mov mov mov mov sbb dec imul in sub add addr16 mov mov jecxz add and int3 and add push or pop pop xor xchg and xchg call into dec ret jo inc jmp mov aam inc (bad) mov orb mov (bad) mov leave push iret lods hlt or jge fiaddl push sub call (bad) hlt (bad) mov pop cwtl add test sti into pop sbb and scas test adc sbb std push mov enter xlat aaa icebp into fistpl fistl fcoml (bad) push movsb fisubrl adc jecxz aas out jbe aas mov je shll inc ret sub or aad rcl loopne ret adc and je xchg lock icebp enter ret add jne or hlt ds int3 sbbl xor ror in adc sub push lods imul mov push mov cmp xchg or push pushl mov sbb xchg cmp mov out cmpsb repz sbb inc out mov xchg push push repz ja ret sbb dec outsb mov stos aaa push insl into loopne stc lods out jne leave popa adc fisttp adc icebp test aas clc (bad) xchg fsubrl sbb add scas (bad) jbe cmpsb or negl xchg pop adc push dec sub sub sub stc lret xchg sbb sub gs mov fwait push xchg int3 inc sub adc mov mov pop sbb sub sbb pop addr16 dec in adc mov pop xchg mov int out or pop pop push mov lods xchg in js mov leave int3 push mov sarl (bad) lods xor push loope push mov adc xlat enter pop gs pop das jo mov pop or jno push aaa in adc mov cmp hlt mov push je pop inc in sub icebp mov pop cmp std scas fcmovbe dec mov stc fldt mov pop loope and xchg mov mov mov xchg lcall and loope imul or and xor sbb xchg sub mov xchg xor (bad) scas fnstsw outsl and dec xor (bad) pop inc mov (bad) xchg shr enter pop out dec lock daa add cmp (bad) cmp pop xchg adc sbb jmp or int xchg cmc xchg xchg add in int cs test dec adc shrl adc sbb cmc cmp aas xor stc addr16 sahf inc sub outsl xchg or or xor mov jae mov (bad) stc (bad) leave sub in ret outsb (bad) push mov cvtpi2ps dec jo mov daa test loope mov push bound inc pop pop mov mov adc cld inc addb (bad) in faddl mov adc int3 loope cmp lock ficompl or push xor cwtl xchg bound icebp cmc dec ds in pop psrld call bound push cmp hlt repz mov xchg outsl repz sub push fidivr mov inc aam jnp add push je mov mov xor xlat adc ljmp lea out outsl and push dec jb add fildll dec lret test jno mov (bad) jae push mov cld sub andl sub push out jnp outsb outsl leave fstpt int3 xchg mov push dec jns add les mov dec xor and adc icebp jno xor cmpsl add cmp cmc aam ja roll loopne xor xor ret pop pop xchg hlt or and mov repz cmc cmpsb cmp pop mov (bad) and sahf dec clc incl xchg fistpl (bad) fist hlt dec movsl loopne cmp daa push xchg movsl pop lret data16 arpl insb scas push aas adcl adc jns xchg push pop or add in pop sbb pop mov in mov inc inc in fstps sbb cmpsl (bad) sub cmp outsb shlb sbb (bad) outsl push mov lret cmc pop and mov imulb cmpsl fistpll adc adc int jns sub (bad) shll addl push adc test nop add fild sti jmp push mov add (bad) aas fsub adc clc and pushf push loop jg lcall cmp sbb dec xor test imul aam aad loop xchg lcall call loopne sub decb addl daa mov mov adc sbb sbb (bad) ret or pop jbe and fsts nop push sbb dec mov or cld add mov pop mov es enter scas cmp dec pop cltd and enter mov push pop dec in and repz xchg inc ss rcrb push mov xchg adc rorl mov je test and lea stos sahf roll outsb out xor mov popf adcl add sub sub in mov aad cmc mov ljmp sbb sub icebp pop leave movsb imul sbb dec xor stos test jmp push pushf addb jp add push xchg sbb push push add jae,pt addl add jge adc js js sahf stos cld sti jmp js rcl jns jge xchg adc sub jecxz adc or mov cmp mov in jl pop inc iret lds scas popa jno mov xchg adc aam or pop or dec jl dec or adc dec inc sub shr daa mov in jne test sbb sti ret hlt fwait arpl in sub mov push das int3 pop cmc in and fistp dec mov pop cmp sbb clc out ficompl ret pop mov rorb sbb cmp xchg mov mov nop fstpl push pop cli ret aas fiaddl stc ret ficomp rcrl insl xchg mov or inc jp fidivrl inc rcr xor jecxz rcr scas mov sub adc out leave imul ret mov loope sbb sbb imul sub insl add mov pop xor iret (bad) jne sbb test ja imul mov scas scas pop mull and mov sub out add inc cld out lock mov test nop out mov xor rcl jo jl les mov sahf pop mov loop testb mov rcll pop mov cmp stos xor xchg mov call xor js into mov ret adc jb mov mov push mov adcb mov pop pop decl mov sbb lahf leave xchg loop rcl push outsl or movsl mov pop roll aaa (bad) push xor stc mov out (bad) nop and fisub sbb push and cli (bad) into cltd add cmpsl and mov cld inc negb inc mov sbb repnz pop rclb cmp add dec jnp fnstcw mov adc out xor ret mov inc dec adc push rcrb mov int3 repz sub xchg inc les mov mov fwait mov mov xorl popf mov sahf aam les mov pop mov scas cmc push popf call fidivl arpl test lods jb xor call jns pop xchg xchg mov (bad) jae or push push or or fimull int pop (bad) loop push mov jns movsl push xor sbb pop call cmp xchg insb xchg push push repz mov push clc clc add ss dec and fdivrl andl loop or add xchg push pushf mov push daa (bad) es or movsl lret cmp aam movsl into (bad) cmp mov jnp adc inc ss sub inc out ljmp pop ficoml jns sub movsb (bad) cmp sub mov ffreep loope xlat (bad) stos push mov outsl leave scas repz test out out lea out sub (bad) jnp ljmp mov nop (bad) and add add sub mov hlt (bad) pop dec jo aam push sbb lcall mov adc (bad) xor punpckldq lock and ret xchg dec xchg or out mov scas movsb out out jo shl sub andl leave jecxz fst lds testl pop leave or pop jnp repz (bad) out fsubl lahf lret inc imul gs mov mov push jae xor (bad) xor iret and jae imul sbb add sbb xchg mov sbb mov pop push stos lahf cli pop mov std xchg lods jne rcrb fbld (bad) lea push clc outsl loop and adc sbb sub add in in mov aaa std jg jecxz sbb rcll pop pop scas inc and jo adc jge pop mov dec mov arpl push push push lods (bad) (bad) test jne popa test out imul cmp outsl push cltd stc cltd jno sbb rcrl xor push aas jno sarl inc add mov xlat pop jbe inc fimull loopne ret dec and les sub jl mov scas setne dec sbb jl out push inc das repnz xor test (bad) xor inc arpl jge cmp pop int ja pop (bad) loopne dec (bad) in in inc stos push mov loopne mov insb mov adc jl pause hlt inc std mov push mov movsl sub (bad) sbb or cli xchg pop mov pop xor sahf sub psrld adc pop hlt test cltd (bad) dec loop (bad) pop roll jmp adc (bad) repnz out mov pop xchg cmp inc mov pop inc movsw sahf lea mov fcomip push nop xchg mov insl fucomip pop sbbl jp sarb icebp dec or mov add or leave enter loope lods (bad) adc pop scas out enter adc fs mov inc ja pushf pop cmpsb inc paddsb push push adc fsubp pop into enter mov dec movsl mov (bad) dec repz ret fwait addr16 iret xor ljmp sub or inc cmp jg sub inc hlt jmp cmp dec or mov inc xor sub mov push pcmpgtw arpl cli mov rorb xchg add or imul cltd xchg (bad) cli test xchg pop xchg aad push jecxz inc cmpsl mov inc mov cmpl inc fidivr and scas lret sbb mov cmp andl test cmp push push test in mov pop xor out stos mov sub mov add mov cmp mov subb dec cmc jo fstl rolb jae mov push pop into icebp sti inc je lds dec enter lret inc cmp int3 popf mov adc sbb mov scas mov rcll loop dec repnz ss push data16 adc jae fwait int pop out mov jns int or adc inc xor sbb fisubr pop xor cli aam icebp out xor aaa jge ret in das in pop orl movsb bound (bad) dec movsl daa jmp lock pop mov repnz and daa pusha scas mov inc add adc xacquire test (bad) out les add lock imul cmp orl push enter lahf (bad) mov pop dec pop mov in adc or jbe icebp fs decl call sub mov xchg or clc and scas jg addr16 cmpb pusha inc sbb sbb js mov and and jle sub dec pop call fwait jb cmpsb jmp push and ljmp add and sbb and sbbl rcrl addr16 ror dec xchg outsl push imul (bad) mov and ficompl or pusha mov and add and ret xchg rcrb pop dec subl mov xor loopne mov or pushf pop xchg xchg sti xor fwait shlb mov lods lock jne test popw mov sbb jecxz cmpsb or xchg pop idiv stc or leave lahf (bad) movsl jae sbb (bad) mov xchg dec add and xlat notl add loope push ds and pop lea fstps dec pop push cmp stos addr16 cs sbb or (bad) roll inc push jo fsubp and inc jb cmpsb fisttpll lcall sbb fs mov loop and sub mov (bad) mov int or hlt inc xor adc dec imul xchg sti fildl dec fdiv call fisubr scas xor loopne push or and out and cltd insl xchg imul (bad) mov mov fsubr xchg sti mov dec add loopne arpl fwait aad adc push loop inc and cmp movsb cwtl and mov push sbb pop mov rolb addr16 mov out dec into in push std data16 fidivrl xchg mov not dec insb movsl ja insb push shrl movsb xor add xor movsb scas js call cmp stc lods cwtl dec ljmp mov outsb fwait sbb popa scas stc mov push pop aam xchg mov adc fucom xchg dec leave jmp (bad) aam and jmp pop rcll add sub fidivl (bad) push popf sahf out pop adc ret add sub mov sbb ficomp mov jne (bad) push xor push mov push shll inc lret push mov idiv pop movsb dec xlat and mov jecxz jnp sti imul lds mov out aam push mov jecxz jg jp outsl or (bad) push inc jg xor adc xor outsb rolb or aam pop cmp inc fdivr add in (bad) enter shrb bound lret or push add movsl mov mov int3 cmpsb cltd out ss dec or and shl test scas addl ret outsb ja mov jp sub int pop cmp mov out xlat test dec pop rclb fmull sub loopne adc dec pop shrb cmp adc pop pop pop sti cs cmp jns lea xor cmp das imul mov push sub aam fcmovbe decl (bad) jne loop ljmp add roll popf pop mov pusha mov das cmovae or cmc aaa hlt add pop into pushf lcall imul jg jle adc scas (bad) xor and add cwtl (bad) fs mov bound push xor inc aas mov negb ds je repnz add mov push mov cmp mov stos fildll or jmp mov mov lock pop aaa dec mov fidivl in jno bound outsl cmp push cmp cmp outsl mov das cmp inc insb add mov mov pushf out sti es and dec mov inc (bad) sub jne stos dec in push scas mov xor dec jo dec cltd push pop imul sub in stos jl out mov push adc fwait cmpsl cmp jb mov sbb lock pop cmp xor outsb sub sbb popf inc es rcl xchg aas jbe incl xor cli xchg insl in or in cmp mov cltd fcomps rol pop or push dec mov neg outsb fcompl icebp pop scas movsb mov pop in fisub test and cmpl xchg mov pop stos pop out cltd pop mov mov xor lods cmpsl mov adc aaa int3 (bad) into lea bound ja stos aaa (bad) (bad) int3 imul sti xlat addr16 mov pusha stos call imul cmp lea jl repnz jbe popa dec sub inc fisub mov div xchg push pushf loop mov adc pusha stos cmp lods enter sub popa inc sbb or ret pop fist mov xor fwait shlb jno sarl out stos add jne add repnz out cmp sti repz (bad) mov orl fsubr loope jecxz cmpsb adc prefetch mov pop int mov test xor pushf loop icebp xchg daa out xchg rcl popf lret insb add out cmp xchg sti fldl push pop mov jae xchg push sub sbb cmp aas mov ret pop inc test ds bound sbb jmp xor pushf ljmp cmpsb adc in inc aam in xorl call mov lahf iret mov xchg pop fdivr xchg mov push fwait pop rdtsc pop imul dec in push dec xchg inc mov sub int3 mov pminub xchg stos insl sbb push jb add bound fistl push cmp xchg jae (bad) popa lds jge les add inc dec cld xchg scas mov je std inc hlt (bad) (bad) aaa xchg nop rcrb add popa scas fnstsw rcrl dec xchg jae mov sub jp (bad) pushf pop pop or inc push rcrb pop cwtl in sbb fisttp ja sti frstor fs movsb mov int3 dec push icebp decb cmpsl ljmp je loope leave cli inc jge fs cld cmp jmp and addr16 mov sub push popa sar and mov push mov mov xchg scas loopne add cmp lods fidivl inc mov std lret je jnp pop sub fisttpl stc push cwtl xor fnstcw adc mov pop and inc add inc daa sub fwait and ffree inc ficom xchg xchg stos (bad) xor cmc mov dec jge inc cmp pop ret out imul jp or ret mov ljmp dec fidivl xor popf sub lret add jp popa mov ret fnstsw xchg pop stos out int inc cmp pusha sub mov cli stos int cmpsl out xchg scas mov sbb data16 in ret sub ds fdivrp js add pop decl imul mov ja jb (bad) xchg xchg adc ljmp xor lock or sub arpl push add mov xchg ss dec or jmp mov (bad) mov decb stos cmp or mov push in imull cltd push inc pop mov out or rcrl mov stc fs movsb mov lea das fucomi inc inc mov (bad) mov cmp push dec jl movsb sti stc sbbl cmp enter lock jae push xchg inc out pop pop mov mov daa and test stos cmp pop xor js es sub xor mov lds or hlt sub pop cmp fwait sub stc fbld arpl pop adc (bad) mov cmpsb ja xor dec and or fnstsw and les add fadd (bad) pushl js loope cmp sar aam sub sub push iret cmp inc xor xchg push pop sub sti sbb add fildll and sbb popf int (bad) jnp or mov repz cmp xchg push loopne popl call jb scas arpl inc lods aaa or (bad) or rcr mov mov cmpsb (bad) mov (bad) stos adc pushf mov insb hlt je jbe pop cmp mov mov xchg pop inc pop test in enter pop pop push xchg pop fsubl xchg aaa hlt (bad) jp in jecxz dec std cli jnp inc (bad) sbb xor inc notl imul sarl int fistpl push cmpsb add lcall jae das mov jge or jl gs jp jle xor in mov pop add jecxz cmp push cmp push out jno repz xchg push in into scas insl (bad) mov sub (bad) cmp jns out and aam cmpl sbb xchg les (bad) pop js out lods and adc out aad mov (bad) jmp mov ret pop pop pop insl adc stos xchg (bad) lret dec mov xor dec (bad) xchg addr16 data16 (bad) xor es jg push (bad) cmc mov imul les add adc adc mov mov or push xchg xchg lods lds xor mov xor cld jp add inc jns (bad) mov ds add add lcallw and mov pushf loop inc mov out dec lds jecxz fbld lahf scas add sub js lret sub fistpll out jl jp mov flds xor ficoml (bad) sahf ret cmpl adc and jmp pop movsb xor repnz frstor or je mov adc and insb cmp inc (bad) mov dec (bad) in sub daa inc sbb test leave gs rolb mov and xchg inc std insb rcr jno cmpsb insl out aaa mov dec jo pop inc mov in and fcomi call test (bad) jg cs cmpsl cld pop test das data16 (bad) sarl test loope pop inc or dec dec imul push mov sub xchg scas add and pop xchg ds insl push cmp movsl mov fwait loope into adc xor ja cmp inc movl fistp dec jle addr16 xor inc mov mov out sbb insb add lahf mov imul push mov jecxz or das pop dec push sbb fisttpl lock mov int3 repz into int3 jg add xlat add adc jecxz or add xchg (bad) lods icebp lea xlat push daa jno arpl adc jb mov cmp loopne adc adc mov adc (bad) ja pop (bad) adc cmpsb cmpsb gs xor sbb cmp cmp jnp stos adc or dec mov clc mov insb jg mov mov dec loopne je cmpsb in stc push mov mov shll into mov and inc inc add and out sub and push cld fldl push es pop sbb in lock pushf adc fistp push jl xor mov repnz int lods out push add in and jb cmp lret sti inc jb sub pop push lret rcll dec xchg sub (bad) jae xchg mov pop push aam mov pop sub cli nop pusha push dec out mov jl cmpl lods lock mov cmpsb or pop insl into and xchg mov adc imul (bad) loop mov pop push push pop (bad) xchg add insl and cmp add fildl ret lock outsl ljmp enter inc int xchg pop jne push outsl adc jae sub mov test (bad) and leave mov cmp into or jns es cmp mov mov mov jb cli fdivp out out xchg (bad) test scas ficomp je lret fstpl push xchg out mov xor xor cmp dec sti jne sub leave cltd jp cld mov mov or stc clc in aaa pop dec mov sub gs xchg punpckhbw ljmp subl fwait xchg mov add add sbb adc dec leave dec fsubs push (bad) std add sub sahf cmp (bad) mov xchg fxch test scas jae shr test in int pop arpl lea cmp pushl push hlt out repz iret adc movsl popl cld decb pop inc icebp sahf subb adc sub mov jecxz add push ja sbb and add cmpl adc scas stos mov inc pop (bad) je mov add aaa pop mov (bad) pop nop insl and sub push (bad) or adc inc (bad) mov dec push jecxz sti lret (bad) sbb xchg std (bad) idivb push or jmp push sbb (bad) dec jle out add push mov rolb hlt pusha por imul stos and insb jle sbb mov shrl test sub xor cmpsl jmp xor ficom rcl lea mov cmp insb cmpb jge push inc dec sub (bad) aad stos rorl jno push dec fistp nop inc loopne push jne push decb fisttp aaa sub xor and xchg sbb cmpsl dec xor pop mov dec xor (bad) xlat push mov int push mov sbb cld cmp rcrl xchg sbb in sbb xchg in in out dec mov fisttp mov xchg scas popa int3 xchg fstp jl (bad) test xor lret jg sub stos lods mov sbb inc push scas dec bound leave jmp push mov outsl push xchg inc adc lock or imul mov icebp nop pop call fs hlt pop loope jecxz aas mov pop sti imul cmp push sub and sahf mov pop (bad) idiv arpl sub cwtl imull add daa dec popf mov shl nop dec dec sbb bound je ds lcall inc or dec sahf flds cltd and push daa mov mov sub ret jmp lcall aas mov dec dec or mov sub cltd and push adc pop or push sti bound jae inc adc xchg jae jl sbb push (bad) ror or mov inc cmp pusha ret inc outsb divl cmc lods imul out pusha dec orb les fstpl mov into jns or pushf jecxz xor je jle mov (bad) and cmpl sbb pusha scas paddw shll mov (bad) cmp mov dec pusha inc cmp sub (bad) ret or and push inc and testb movhps dec (bad) ds imul sbb enter outsl jmp mov xor inc pop enter enter call cwtl pop ret mov inc dec (bad) sub mov sbb cltd leave cmp bound call jne dec xchg hlt (bad) xchg popa (bad) mov loope ficoml lods lret pop outsb cwtl push fmulp adc test (bad) (bad) lret inc iret cltd imul push addr16 push lret rcrl or pop outsb stos insb es mov loop mov push jno rcr mov lds enter pop out cmp das adc push sbb pop or jbe nop jge cli push jae mov fs pop pop mov sub aad jo cwtl stc jo lea popf inc adc jns out dec sbb ds cmp jp ret (bad) in (bad) es mov push adc iret pop insb outsb sbb dec sbb adc movsl bound int3 hlt icebp popa mov ret sar jmp es xchg popf and (bad) cs lahf inc add push psraw in aas sbb sbb adc ss push test mov mov rcrb insl add imul push or insb xor mov out cmc leave jl test ss lea xor (bad) int xor les xchg and lahf ja dec push add mov push and ficom rolb sub mov iret fwait mov cmpsb and rorl sbb fsubr (bad) mov and push leave mov sbb sub adc dec inc scas inc xchg push inc xor pop cmp ja int mov (bad) cmp add lret daa cmp xor shlb and aam jae mov imul scas push inc out in ret push adc inc (bad) ja hlt xchg adcl xchg add or push sub pop lcall (bad) cs push dec nop pop pop add out xchg mov std ss xchg loope addr16 test shll jmp dec jmp stc add loope mov mov sub imul test imul (bad) and imul ret stos std les loope mov push (bad) adc js jp and insb xchg push out jle pop jne inc cmpsl (bad) jbe inc jae xor sub aaa sub xor lahf pop or pop mov pop lods xchg pusha add and pop cmp (bad) and dec push rcr out cltd (bad) mov or fwait int lret xorl dec xchg cmc mov cbtw jle iret pop cltd (bad) xor lahf xchg sbb xchg sbb arpl shrl jp sub aam cld (bad) jnp xchg cwtl jl insb xor sub es xchg and xchg popf repnz mov cmc xchg das jno incb mov cmp sbbl mov mov xor add xchg cmpsb lahf jecxz ret xchg mov mov and sub pop movsb scas (bad) xchg data16 push addr16 pop test test adc cmp dec enter push call inc test jl mov (bad) fldenv mov fxam push add push ret push (bad) xor gs xchg dec inc inc ficom or fidivl pop or ror fwait xor mov mov cpuid sub repnz hlt aam call stos pop adc loope xorl lods imul or cld lret and rcrb mov dec test pop jbe mov lods mov mov jl ret int3 sub stos aam loop mov jnp mov gs xlat testl ss clc fnsave mov aad add fidivl xchg mov int3 fdiv cli jl dec into loop add pop inc (bad) sbb imul inc mov repnz inc (bad) ss jne stos mov cs leave scas aad clc pop stos jbe popf bound orl test arpl or outsb xor outsb jno jp inc test cmp fdivrs inc hlt idivb and sub enter pop jg sub jnp cmpsl sbb enter test sub xor mov (bad) fisubrl aas mov push ja imul sbb cmp out hlt in (bad) out push addr16 push xchg ret pop dec add cmp pusha and insb mov add mov jo and pop (bad) dec mov inc bound mov std insb lods bound jne cmp dec cmp hlt push add rorl cs repz adc push call inc push outsl jbe bound pop mov test les xor mov je cwtl (bad) xor sbb and out test lahf cmp pusha dec or cltd insl aam pusha (bad) hlt test popa pop push test inc push add sbb xchg jae adc xchg (bad) cld mov fmul stc outsb sbb sub xchg xor mov mov cmp sub stos aad mov sbb addl (bad) dec pop push mov scas pop stc daa mov or sbb jae jne lock je mov shlb ret mov xchg mov sbb arpl mov xor mov std lods cmp insb cmp popl aaa sub push pop sub pop in (bad) ror in stos fadd adcb adc pop into sbbl and lahf outsl or aam fstpt lock call iret and mov mov sbb outsl add push or (bad) cmp push test cwtl lcall int pusha int xchg mov inc test ds movsb aaa dec xor pop (bad) or sub xchg rcr add mov add repz jp sbb sahf ja fisttp call adc stc xor sbb push mov rorb inc out push adc loope lcall repnz inc dec ja or pop or pop mov bound test sbb pop mov dec int3 add inc xchg addr16 pop scas pop lods mov cmp sahf mov jge hlt notb or adc or scas pusha mov sti out test (bad) and mov cmp outsl sbb fdivrl xchg ficoml sub or rorb and test push ret mov sarl (bad) lret cld rcl sbb ficompl cmp jnp push mov jne xchg mov int3 xchg or sub outsb stc pushf adc push imul fwait sub xchg loopne dec cmc fdivl cmp outsl jle inc xor (bad) (bad) jle xchg mov jp lret out movsl pop ds rclb pop mov shlb mov pop xchg xchg call pop call xchg (bad) jmp (bad) mov into inc and int das cwtl leave dec (bad) out test in lahf push sti into in mov pop mov imul xor add mov inc xchg hlt lahf ljmp imul dec addr16 rcrl (bad) dec fwait stc imul mov outsl push fidiv add js inc je test popa js mov jne mov leave push inc xchg xchg test fistl mov dec xchg inc cmpsl (bad) ja out sbb repnz push test dec in dec jp pop or mov jle fsubs pop push dec ror pop jae pop rcrb std adc pushl and and xor (bad) xor cli xor xchg inc into push hlt push lcall xchg pop outsl jle lret dec cwtl scas add aaa mov push pusha cmp or push or and in or in aam xchg mov mov mov sub add int cmp mov (bad) js icebp int3 xchg shlb xchg add cmp sbb jge mov nop (bad) nop xchg mov ds inc push jle jmp and daa inc loopne aaa fidiv inc mov (bad) lcall (bad) ljmp mov mov cld ret jle xchg jne jp fidivr mov pop lods mov xchg lcall lods and jae arpl and lret call jne and mov xchg and push sub push hlt test cmp out into out les sub inc (bad) sbb xlat insb push test fcomps mov (bad) add dec mov iret pop sbb (bad) nop (bad) jbe (bad) adc (bad) int in iret mov sbb sbb sbb xor (bad) jecxz inc int3 mov jno jbe cmp mov movsl xchg testb sbb dec cmp arpl aas rolb add call test pop mov daa sub adc push outsl lret in mov fisttp cld test or dec popa iret xchg jne xrelease mov pop jecxz fldenv cltd mov dec sub add mov in out shrl push xchg xchg push cli mov pushf pop lret lods sub (bad) xchg lret insl sbb sub pop sub cmp in jge lret inc sbb mov and es xor xor xor inc std psrlw jg push sbb lcall push cltd push push inc ljmp add adcb les and pushf ret test add arpl in loope push mov icebp lds pop sahf add pop mov je mov xlat sub les pop and ja test inc mov aas jnp cs mov and out inc and aad test inc sar into movsb mov mov and adc pop ds xor sub ffree insl dec cmpsl pop push test pop jmp sub xchg test add push adc mov mov mov jno cmp sub cmp xchg fsts pop mov sbb mov hlt fadds je adc cmpsl jnp outsl sub mov or popf movsb fistl stc mov rol pop pop fwait loope and push xchg imul sbbl or mov pushw pushf jg leave mov ljmp movmskps push adc pop inc inc or pop add mov xchg imul push sub add bound insl cmp inc aas push add jo and cmpsb sub xor cwtl push sahf pop mov cltd xor mov shlb in pushf pshufw xor add add fisubl idiv and js cmp icebp and shld sbb xchg and mov sbb ljmp in pop in adc imul push shrl and fcomps mov shl (bad) bound in add inc mov mov (bad) std add insl push shl int3 lock fisttp pop jmp pop movb cmp in and nop mov xlat test lahf fidiv pop mov mov stc push jp and sbb test icebp pop sub cld stos inc mov add out adc sbb mov test or pushf sti dec adc xchg cwtl lods (bad) mov lahf loop out insl mov xchg add popa lock in sbb jae inc push rol in mov push mov add adc jecxz fsubl mov cmpsl adc push adc xor hlt mov mov jp les std adc cmp push fcmovbe xor aad arpl pop inc sub mov push or inc jbe out cmpsl stos jp pop fbstp fsubrl sub xorl sbb mov nop xchg xchg and (bad) cmc into in adc xchg loope inc orl and sub mov lcall dec and imul test leave mov dec fisubr sbb cmp jl repnz (bad) out pop roll xchg add fcoml add icebp pop mov test mov mov add sub aaa mov pushf jmp dec test mov lea sub inc or hlt es ljmp xchg add and mov jae pop inc rorb cmp aad fisttp dec test out and add pop cmp push imul dec or stos adc and sbb (bad) idiv or pop (bad) cmpsb repz into xchg lods mov push sub int enter xchg mov call movsl dec imul in es adc jb enter sbb ds fidivl xorb idivl loope icebp pop lds ja popa dec cmp mov pop cmpb inc xor lds adc mov push push in gs loopne sub pop fdivr in data16 mov push pop pop jg call jmp inc hlt pop loope lahf pop je pop push pop arpl scas fwait fwait inc sbb push sbb in je jge in jle aaa jne pop push dec jl pop mov and lods and (bad) mov ss inc dec ret pop aam sti fistl cmp pop xchg stos test sbb mov or pop stc pop jg pop cmp test xor fstps sub out cs push stc sbb cmp dec cmpsl enter cmp adc in rcrl xlat fyl2x js (bad) icebp or jb repz ds cmpps add adc cld and inc push sbb jns dec and mov ds lret xor sbb repnz mov mov in pop mov outsb divl ds cmpsl scas stos inc shrl add mov adcl mov inc mov mov arpl push xor outsl insb fwait mov sbb push push in jne and mulb and push imul mov jno ret out leave dec push sub mov and fsubrl inc push jle daa or ss push pop sub rol dec aas test lret xchg jp mov into pop jo and adc mov mov sbb aas fildl out jle rcl enter inc imul clc mov in xor mov and fisubr xchg inc loopne mov and fdivrl sub mov jg int stc (bad) inc jno fmul inc and lret jae bound loop imul push sbb and int3 loope aas mov jmp mov sub cmpsl mov scas jo push fstpl pop movsl mov add adc (bad) mov lds roll xchg inc loope int3 cmp mov gs into sbb mov or lret (bad) xchg mov sbb sbb shrb or addr16 (bad) or sti shrl dec test sub cld test outsb subl arpl cmp jae mov add jmp jae and dec dec (bad) lret adc (bad) push out jae cmp push enter adc or mov cwtl sub xchg mov es xor xor cwtl mov sub aaa push addr16 push push rcrb rorl jo xor test cmp fiadd jno add outsl ret test js xor shrl lock mov cmp arpl mov mov jb inc cmp aam xchg mov and aam or std lret lea addb mov mov scas in mov cmp cwtl repz mov jmp and jne rorb cli movsb scas ret cmp and jl (bad) mov (bad) xor int3 aaa inc xlat (bad) xor jecxz adc lods inc decl mov std cmpl add (bad) mov test (bad) pusha test (bad) xlat (bad) cmpsl pop rcrl dec scas addr16 push stc mov in mov int3 movsb dec mov repnz pusha das insb (bad) pushf in aam or call xor mov sarb std adc inc int3 pop into add inc mov test orl ds pop mov test (bad) push jnp cmp and frstor mov mov popa (bad) jo fnstenv pop stc jg xchg imul fsubr (bad) fildll les movq iret seta ret fldt mov daa divl loopne in (bad) sub cmp int3 xchg and inc sub xchg (bad) out jmp pop sub sar cmp popa and push call cli xchg lcall inc push or cwtl pop out jno push ljmp adc pusha popf inc out lret mov sti inc xchg pop stos push pop test rcrl aad shlb jns adc (bad) mov xchg jno in dec repnz cmpsl or loopne jae lock insb je push stos mov and jp sub xchg lcall or jp popf and mov jo xor xor repnz pushf or leave jae push loope (bad) in pusha test les pop arpl out push pop dec loopne (bad) sub mov loop popf dec pushf cmp sbb sub pop outsb out dec sbb sub iret sbb les nop js push popf cs mov xor jl aas jb mov (bad) into insl leave pop in cmp aad sbb shll and loop adc cmpsb mov mov xchg rol in lea mov mov jl add sbb test pop imul mov lods mov mov xchg js push in push jg dec dec sbb loopne xchg sbb mov or jns js (bad) mov hlt int loopne dec jnp or jl imul sbb cltd rorl cmp test add xchg (bad) push lods jg aas cmp ja inc mov cwtl leave xchg adc mov nop jecxz rolb lods lahf ja sub ret sarl aaa and sub adc lea sub addl jmp xchg mov test inc outsb mov add lds pop shrl mov pop mov cltd jp pop adc push popf inc repz outsl enter sub add xor ljmp std scas stos pushf push jne aam push add aas popf inc aas push cmpsb pop or cmp sti jmp ret xchg pop adc fdivs xchg xchg pusha hlt xchg sbb ret (bad) mov lea mov std imul test cmp aaa mov add loopne lmsw inc xor gs test pop fiaddl mov ljmp lret xchg scas inc mov push ljmp pusha aad inc fsubs ljmp cs popa push sub add scas adc mov shlb push adc clc push fdivp cmp icebp mov xchg jno and js cmp stos aaa mov mov repnz xchg mov (bad) dec (bad) outsl lret inc addr16 jmp pop adc rclb (bad) xor and push decl adc push lea outsl fisttp scas mov add aaa add nop test call jo sbb int adc jo sub xchg sbb bound aam mov fsubrs imul ss fwait and mov dec dec dec adc jbe ds iret (bad) icebp pop fnstcw idiv adc cld inc and ds in or or inc mov or push aam in inc pop dec sub movsb adc ja aad aam data16 cmpsl cltd int mov std call roll sub push and call and rcrb xchg (bad) imul (bad) enter sub stos movsl mov mov mov das loop sub mov in imul mov daa addl inc daa sub or je mov push scas pop mov out gs imul sahf push pop lea aaa adc dec adcl inc lods jl fnop cmp adc inc cmp pop push iret jb in inc test xor popf mov jecxz loope mov inc in push jmp push cld test mov jb push and scas psubusb cli mov arpl ljmp add inc mov adc jg mov movsl outsl add mov push cmpsl cwtl and ret insl jle dec sub int3 ds push cwtl inc pop test pop iret push jg sbb test outsb lock sub adc mov jmp test sarl js das or cld out out sbb dec adc add dec fist mov inc push sub pop dec mov or dec aam inc cmp sub and mov mov mov shrb jg sahf jl mov into jl in mov test aad cmp scas lea jns ret sti cmp test sub sahf xor adc xchg dec stos outsb xchg adcl push mov push sub cmpsb out adc pop add cmp sbb inc pop lods mov mov enter lods adc (bad) je sti iret clc inc dec dec adc daa mov and (bad) xchg or aas ss xor inc push imul pusha push (bad) (bad) push bound test dec jbe cwtl (bad) pushf (bad) jae cmp push and mov popf sahf push outsb outsl out mov stos jge std aas sub int cld adc jl lock and adc mov xchg push pop pop push push and aam mov pop inc xor mov mov cmp xor adc andb pop rorb imul and lret lahf pop in adc cli sti push mov inc mov (bad) cs sub std mov icebp add rcr mov addr16 push mov cmp lahf shrb (bad) cltd push lds mov aas push mov aad cmp rorb lods imul or adc cmpsl (bad) xchg push sub jge shll push std inc movsl ror rcrb movsl xlat sub sub std pop pop sahf fsubrp ror sub aaa insl inc out sub repz mov mov aam out in dec into imul cmp inc rorb push lahf lret (bad) lock fwait int sub fmuls shr fildll dec gs pop cmc icebp call idivl mov ss xor mov sub cmpl add cmp ja xor paddusw jmp jae dec xchg push or push mov jne or push scas out xor pop out inc ja or (bad) pop leave ds mov (bad) mov in mov jnp and push lret inc adc sbb pushf repnz dec xor mov lret mov and pop pop hlt dec adc out pop jge movsl mov gs jo ds sub les and mov addr16 cmp mov adc inc mov aam mov mov and fs (bad) cmp and lea cmp mov push out inc fdiv movsl movsb aas jle fisubr bound jbe mov lret dec push out test orb xchg cli lock jb addb loope mov mov lret cmp pop and inc pusha push jmp sahf add mov lods ror pop xchg ret mov mov outsb pop pop inc hlt mov mov int3 out out push clc daa mov sub push dec ds js xchg push repnz nop lods cltd mov xchg loopne sahf xchg (bad) pushf jae (bad) fildll pop in aam push pusha addr16 cmpsl mov jecxz push adc add stc les pop std dec cmpsb in inc or mov jmp pushf or sahf dec inc aas ja in fdivrl decb inc hlt inc loopne lods dec push (bad) (bad) pop movsb lds outsl fs push pop adc dec lret fs dec pop push dec push je rolb mov mov dec and mov mov leave shrb or arpl fistl push inc dec sbb popf or fcoml int3 jo push mov es lea fnstenv pop ds cltd xor pop ficom out pop cmp stc pop mov imul jnp adc aad lods mov mov mov fsubs inc dec xchg scas push int pop xchg ds ja mov loope mov cmp dec (bad) insl mov jl xchg aaa std rorb mov mov sbb ficomp add sub jns data16 cmp dec push fidivr mov ljmp lock sub insb jo leave fsubrl movsb mov xor lock jge push movsb out sub loopne dec pop ds in pusha arpl stc sub jl out sarl in pusha mov mov sbb icebp mov in add mov xchg std push inc cmp leave je in hlt or ds imul pushf popa pop adc in mov cmpsb sbb mov loopne ja add inc and pop xlat lret and cmc sub test push iret mov (bad) in leave jae jecxz mov bound push hlt inc mov push cmc enter clc cwtl lcall xchg and xor inc rcr loopne mov test movsb lock shrb fsubl sahf out push imul xor pusha push jecxz je (bad) test mov mov dec lcall and arpl mov pop fist mov lahf or shr jb xor shll xchg mov pop mov mov (bad) addr16 mov lret add xchg lea mov (bad) push out lret sbb in mov mov adc sti mov sub push fnsave dec imul sub xor mulps xchg daa dec jno fisub and test xchg leave sbb ds inc cmc sub mov or sbb mov mov je faddl int3 push stos adc mov push or xchg out pushf mov shrl add jmp cltd scas dec enter gs dec push inc add cmpsl lods dec movsb ds repnz xor nop in lahf sbbl enter incb xchg testb cmp jmp sahf cmpb scas test pop xor pushf jge fist insl aas inc fdivrl mov xchg adc and imul rorl xchg test jmp mov loopne lods loopne jmp mov add jmp xchg or repz aad rcrl add ud2 lret or ss fs sub nop test into les push clc enter mov lcall outsl xchg push ds push jno stos pop in mov adc pop sarb clc mov loopne push push fdiv insl pop jno push add ljmp sahf int3 imul outsb rolb movsl mov xchg mov (bad) loopne loope sub dec dec pop mov ljmp cmp popf mov enter dec jns jo das mov ficom test shlb lret inc movsl pusha xchg je or inc push sbb int3 fisubr out aaa inc jb add inc (bad) cmpsb jge hlt sbb sbb inc iret lods fsts cmp mov (bad) mov dec lea xchg imul xor jns and cld jecxz jecxz es adc popf mov mov gs (bad) adcl in cmpb jmp repnz and mov xchg push clc add or xor add sub in xorb or push and ucomiss lahf fcompl (bad) loopne sub push pop insb xchg sub jle dec outsb xchg popf dec popa hlt rolb adc jno enter inc add mov sbb add rcrl shrl cmpsb cmc xchg lahf or test sbb lods pop and xchg mov int outsb mov cmpsl andb mov or insl pop leave mov (bad) mov ja mov dec or or pop and icebp mov jp movsl push mov fstpt jmp dec or jno fnstcw bound mov cltd xchg and sbb leave pop inc cmpsb inc in lock mov inc push jmp xchg negb outsl ja imul in aas jae stos push loop xchg cmp ljmp cli mov pop adc (bad) cmp fs mov aad adc inc data16 push outsl mov ljmp cmc fsubrl pop repz repnz and ret test or leave push (bad) jbe je or movsb mov cmpsl mov (bad) (bad) cs pop scas (bad) or jge jb add ljmp mov sbb xchg inc ds push mov (bad) (bad) sbb or arpl pop pop sub mov (bad) in xabort jecxz clc dec add mov mov mov ret pusha ret scas jbe test (bad) mov (bad) scas dec or icebp dec lcall cmp inc push stos (bad) (bad) cmp leave and rclb add clc sbb fmull inc mov dec enter into (bad) cmp ljmp jmp jmp outsb pop mov aas (bad) das push xchg mov imul cmpsl cwtl test pop (bad) stos cltd push in aad pop cmp or ret dec mov shlb or pop (bad) lods lock jl xchg fcmovbe js insl shrb (bad) repz mov push addr16 xchg xchg dec mov dec mov mov fdivrl test xchg sbb test pop data16 repnz or cmc (bad) or dec pop fs cs test pop inc cwtl adc test fcmovb fild pop ljmp test dec mov mov movsb fidivrl jbe dec adc add cmp (bad) fimull mov xchg out popa inc dec cmp neg rclb jbe xlat sub xlat mov cmp xchg inc inc in icebp clc xchg movsb xor jb xchg insl mov mov dec fs pop ret ljmp inc lcall push das mov mov in add jl lret pop cmp hlt (bad) fisubl fisubl loop pop xor mov cmp imulb sub adc ss mov jge cmp inc jge pop dec cmpsb fldenv mov and mov aas dec sub add stos mov cmc lods mov lods jle mov faddl sahf inc ss lret aaa test call mov push xchg dec lods fstpt andb push movsb sbb mov sbb sbb mov push dec cmp stos imul aam inc and cmpsb fisttp ss xor cmp andl mov daa push inc jge out pop cmpl and mov fidivr mov std outsl adc pop (bad) pop xor lods ja jl neg pop cmp aad es mov add mov int cmpsb ja mov cltd adc xchg enter and push xlat repnz xor fwait mov cmp hlt push bound add sub jno jle enter (bad) push cmp or or mov jo and jb mov imul lea in inc (bad) in cld and pop pusha loop sub rcrl pop clc xchg cmp repnz (bad) out dec test cmpsl pop rcrl cs push jb into ret xchg stos adc push xlat inc jb mov out xlat loope (bad) lock cmp pop into cli mov mov and xchg cltd sbb mov xchg fdivp pop pop dec aam adc sbb frstor (bad) cmp jecxz mov fwait push test subl iret cmp push (bad) mov ljmp out push in sub test in pop inc test mov add mov outsb add adc rolb xchg sbb es push jbe cmp (bad) fcoms ss or mov fldt into adcl in arpl pop int push adc inc mov outsl pop inc pop fist fldpi mov and js jle in aam test std ja jne and lret xchg orb lock pop mov movsb dec dec seto add nop xchg mov andb inc mov xchg dec xchg nop cmp jns outsb jnp je (bad) mov sub outsb lods mov push pop sbb std and mov mov rorl cld jbe shll or add clc push in cltd mov das (bad) fdivp xor cmpsb mov test lcall mov pop add xor jg in or mov std and xor jbe sub sbb leave ss pop xchg flds and xor adc mov cmp sub hlt int3 push adc popf outsl and dec sub sub and and sub push lahf cmp aaa mov xchg in sbb or mov mov cmpsb repnz cmc and imul jg fnstsw aam out movsb (bad) mov mov mov push xor cmp (bad) jb jns fldt xchg int3 (bad) insl repnz and loope mov test shl jle popf sbb jl popf cmp sub lret mov mov (bad) hlt xor mov add lahf push fs test dec rorb rorb rcll in loopne sub and pusha stos test mov (bad) iret jbe dec pop fstp jle out xchg arpl test inc mov or push (bad) mov popa cli mov jno sub sub adc movsl jmp imul cwtl imul jb mov cld push dec test pop pop es scas ljmp in mov ret or and mov stos jb add imul aad ficompl cmp sti lret fcmovu mov enter movsb call sbb push daa cmp cmp pop jp jo push adc and mov xor out les mov xchg dec add movsl mov je cmp loope push nop sbb popa dec es mov push aam cmpl cmp lods bnd arpl ljmp mov push cmc push leave sbb and arpl xchg rcll aam rcrb inc out inc loop std cs xchg mov lcall fisubl stos test and adc or xor (bad) sub mov mov in lea pop mov mov pop test push jno es stc aam sub or test mov incl xchg pop mov mov mov mov mov push lods adc (bad) mov hlt mov inc mov (bad) ficoml push cltd out pop sti xor mov std lcall sub add in movsl lea fimul pusha loop mov pop adc push xchg pop and bound ljmp inc xor push mov dec inc cltd jbe jae fwait ror mov inc xor outsb push fstpl xchg mov jne push int pop mov xor stos or (bad) mov or jo jl or movsb ret sahf push jns lods shlb dec cmpsl jge js scas enter mov mov js aam sub insl mov adc lds leave (bad) xrelease mov (bad) mov fstpl pop mov sub int3 lcall outsb xorl das lret scas mov movsl movsl add and insl cs inc (bad) imul jb lods mov or push mov je popf ret jbe pop (bad) and movsl adc rorl call popa mov add icebp mov (bad) pushf call int fistpl imul aaa ret sub nop jns pop mov jnp jns (bad) lret xchg mov mov fsts pusha pop lcall ljmp repnz mov sbb lds xabort lret jns xor daa xorb (bad) test aas or xchg pop sti adc adc loop aaa idivb push cmpsl adc sti (bad) and pop paddb lret jl (bad) xlat popf pop mov push pop xchg mov sub cmp insb adc xor fldenv mov mov jns dec insl cmp sbb mov ljmp pop push je addr16 cmp pop clc mov sub (bad) insb daa cltd (bad) pop pop addl pop adc movsb (bad) mov push mov lret push add inc mov test movsb mov lret jecxz aam jno stc sbb cltd push mov mov fdivl stos jbe bound ljmp push and daa addb or pop or xor mov add xor dec jnp xchg xor adc das sub sbb inc inc xchg fcompl jp ucomiss push imul lcall jo xchg mov in sub repz hlt jecxz push outsb lds jmp imul mov cltd sarl xor push loopne,pn push pop pusha dec sub icebp adc jbe push xor mov adc (bad) mov cmpsl cmpl push inc push outsl and mov ja mov iret jmp add cld cmp sbb adc bound cltd test jo stos (bad) and repz mov iret jno cmc out sarl fisttp insb cmp ss popf out in xchg hlt push movsl adc roll mov mov or dec jp sub jle lcall sub (bad) ljmp pop stos ret mov jge clc cltd das pop in (bad) mov mov leave dec jl rcrb push add hlt ja mov or repz mov dec adc and xchg push mov fwait in into push scas push ljmp add jmp cmpl cmp (bad) ja and scas mov dec into xlat pusha xchg das xor sub or mov (bad) mov in comiss pop push in cmp and aaa jmp dec ret or int (bad) mov mov rclb sub sarb testl cwtl pusha push jecxz call cltd cs xor fistpll rorb imul inc dec flds push leave adc mov pushf pop sarb lods push mov pusha cmp das cltd lret loop pop pusha jb adc jb mov popa out stc movsl inc pop shr adc pop inc scas mov dec aam add inc xchg inc test (bad) push push pop mov jnp out (bad) mov ret int3 outsb mov scas or dec icebp inc test xchg das xchg fldt xor push and lret mov es adc or jns xchg fs sbb shrl or icebp and fcomps (bad) lret xor adc mov pop xchg push pop push add jne sub sub or test int add lret add aas (bad) dec inc add sti add sbb push out lahf scas and cltd cs addr16 or arpl loopne std (bad) aad rolb lret sbb fwait jb mov cmc jnp lock mulb xchg cli jno xchg aaa xchg das imul cmp rcrb ss mov sbb roll mov roll clc mov loope jg sbb (bad) hlt lods adc jmp and fmull popf out xor dec cmp mov jp dec lds mov or cmpsl ret sub mov into mov push cld outsb gs fcomps or ds xacquire push call pushf mov xchg and mov cmp adc and or lea and mov xor cmp cwtl ret call xor mov sahf test arpl out test xor aas test jle xorl mov xor lret lock add fs lahf aam sub ds in push stos add sub jo ret push add fcmovb or imul xchg or add js mov loop ret pop nop cmp data16 xchg inc mov inc stos aas xchg shlb push mov mov jbe adc call sahf sub adc popa xor xor add or outsb and mov or inc jmp and fsqrt mov mov stc sbb cmp jb nop inc jmp pop cld mov loop in and ss and sbb gs lahf test push sub or adc icebp inc repz test inc sbb sbb push (bad) hlt and loopne test dec loope inc jb push or pop es xchg sub cld int3 inc repz cmp sbb mov cmpl sub inc pop push arpl test push mov or adc adc shll sarl lcall push xchg jnp fwait aam insl iret arpl push inc sub dec in (bad) scas leave loopne push test jbe das mov mov or test inc stc dec sub mov repz inc cmp xor jecxz js shrb ret sahf xchg add pop popf les jne iret out ljmp test out lods lods cmpsl (bad) mov addl loopne jno stos aad mov rorb dec add iret outsl dec sti inc lock jnp popa test loop (bad) mov mov jp cltd mov inc xchg pop mov xchg adc ret push xchg in cmpl mov lret cs jbe pop (bad) dec cwtl mov mov ret cmpsl or adc xchg (bad) (bad) pop mov fwait cltd outsl (bad) mov (bad) pop call jne xchg mov inc in xchg jle out fistpl cmp dec mov sbb and mov mov adc xor cltd sbb xor lods pushf inc cli xchg sbb sub pop lods jl mov (bad) xchg fnop sbb bound lock out jge in adc (bad) ret mov mov int cmp xchg aaa or push and testl sbb scas mov fcoms lea loope les push push jb or clc inc inc inc adc stos or ss daa in imul (bad) fisubr mov push lds fbstp jge push rcll pop fs dec and mov int mov les out mov test sub adc add loop mov movaps pop arpl xchg inc iret arpl jge xor (bad) iret xchg pop aad push imul jle dec repnz jbe inc pushf repz shrl xchg mov add incl daa cld sbb cltd (bad) mov mov jl push inc std hlt and mov outsb jne jmp ss mov in and iret in mov imul push fwait push cmpsb cmc pop ja sub push out fisttpl add adc subb sub div ret outsb pop dec in shrb (bad) es fs fisttpl push in fadd (bad) xchg movl mov lds popa test sahf push jno and arpl adc outsl nop dec pcmpgtd add sbb pusha sti mov adc cmp lods pop xchg mov or jp aam inc push pop mov repz (bad) jae mov out cmp flds mov xchg xor inc fstpt pop cmp and sub mull fadd in and in push mov addr16 mov cmp (bad) mov or sbb in add adc movsb pushf inc dec in jno push or mov inc add fldcw popf in inc imul lods jmp pop cmp pop arpl push pushfw add imul mov add lret clc sahf cmp sub push aam dec inc (bad) and mov jno,pt push push popa mov mov and mov sahf cli rcll cli cmp fisttpl mov cmp lret cmpsb ret dec (bad) loope loope xchg inc or loope test xchg ret lahf ret cltd mov emms add icebp movsl xchg movsl rcl and fs ds rcrl (bad) (bad) ljmp push pop es into stos add rclb lahf ficoml sbb out fwait icebp dec or ds repz js jmp hlt sbb sarl mov test lret pushf pop push fstps jl hlt push sub adc scas call xor negb sub popa in push stos pop adc nop push scas xlat lea mov sub push frstor dec inc sbb incl and lret mov push sbb ja push rorb dec (bad) stc lret cmp sub loope sub aad leave and or mov sbb sbb or and push popa js mov cli shrb movl inc movsb call and loop xlat mov xchg mov jo or repnz (bad) push mov push adc mov mov jle add (bad) sbb aas adc fdivrl repnz clc xchg cmp mov push adc sbb sbb ret movsb pop outsb lds cmp xor jle cmp add mov and and xor bound and jp gs push or mov sub (bad) bound jb push sbb lcall pop dec enter dec mov mov lret mov dec rcr pop lds mov lea push sti loope fisubr stos rcrb jb int3 rolb lahf mov mov sbb shll dec jg fnstcw fs adc movsb jg daa cli iret xor jns push lret js ret insb mov jo outsl cmc (bad) mov push sti pop lea lahf (bad) fsubrs loope jge xchg adc scas out pop push fwait mull cltd bound and xchg nop ret ficom test sub loop cmp add cltd pop pop mov stos and ret loop mov mov push rorl out and dec xor cmpsb or in in fdivs mov outsl ss (bad) pop add lret movsl pop inc lock mov inc test xchg outsl xchg fcoms xchg and or or cmpsl mov lods mov aas adc lret xchg addr16 jp cli pushf fsts shlb pop fcomps fldt inc pop cld nop sti mov insl aam sbbb jle int sahf movaps pop dec inc pop and mov mov stc mov cmp or es push push jnp (bad) ljmp mov mov jg xor nop insb cld pop pop mov ret mov or jle push jecxz fdivl adc fimul inc es xor cwtl cmpsb loopne mov aas add repnz fcmove pop lret jnp rcr xor xchg jae lods fsubp jge lds sbb and jbe jecxz in add iret fiaddl inc sub (bad) lret xchg addb push addr16 cmpsb xor ja adc arpl mov jge fld add sahf adc cmpsl hlt jo,pn jecxz mov add pop fldcw lock int3 dec mov jae push pop cmp adc (bad) ljmp nop cmp rolb mov psrlw mov insl in xchg mov mov add in repnz cli dec dec push lret mov shrl cmp mov mov mov mov es and test push xor rclb push gs repz jae or loope add cs xchg hlt nop pop ss aam dec pusha int dec cwtl dec into jne or scas sbb or sbb push xor inc cmpsb mov (bad) in inc imul daa jecxz cmp xchg loope inc repnz or xchg mov sar and lahf add (bad) cmc bnd out inc push xchg fcoms test inc dec lock inc cmpsb out lea lock and push xor rorb pop addr16 xchg int sbb (bad) or icebp xor arpl idivl push rol inc (bad) mov insb cmpl jno mov mov jp push xchg mov dec ss jecxz mov sbb aas sbb rcll outsb cmc push mov xchg ret out daa out jns int xchg push dec decb out in lds inc repnz ss movsb shlb and (bad) mov stc ss pop mov inc or xor jns push sub in pushf cmpsb jg ds in sbb mov cmp mov cltd enter sti aas add pop xlat mov jne mov (bad) pop jae push mov jp cltd adc push sbb inc or adc sub mov jnp insl les out sbb push push push sbb jo mov jbe xor cmpb out sub jmp cmp sbb jne mov mov push push jp cmp clc dec (bad) mov push xchg popa (bad) mov aad in push mov jp mov movsb (bad) cmc push iret jge mov xchg pslld add shlb xchg addr16 in pop test lcall movsb aas imul mulb gs mov xor lret call push aad push inc pop mov sub xlat clc pop das mov dec aas sbb sahf leave repnz push jno pop or les mov dec mov sbb push xor popf ds rcrl cmp mov push sub sbb xor js jns adc mov sarb rep dec ds testb rol sub pop test inc data16 movsl fs ret mov stos cmc jecxz dec cmpsl push cmpsl xlat fcoms push push cmp rolb inc pop icebp cld add add andl addr16 xchg or mov jg les xor imul sub fwait mov in push (bad) pusha xchg test xor push mov cmc shlb inc ret mov std xor (bad) xor in (bad) clc and cmpsb inc fdivr sub mov dec jle (bad) jno dec loopne jns push imulb loop sbb add adc stos or xchg leave mov mov repnz add loopne adc (bad) cmpsl aam inc inc roll stc pop push lods and cmp dec push gs adc stos add ret sti test pop mov movsb mov mov enter cmpsb xchg adc test sub cmp insl add (bad) or adc aaa ret into cmp gs popf fcompl gs sub out cmp (bad) mov jg ret pusha fwait incb stos jb loop add arpl out adcl jnp mov movsb mov add roll aam mov jnp imul pop cmp jp out (bad) dec mov mov adc inc cs sub cmpsb repz xchg or jo mov sbb push lds push inc hlt fisubl adc cmc sbb pop enter test cli (bad) pop aam cmp (bad) dec insl jno mov push pop cmp mov jb ljmp jo push inc nop jne out cs sbb pop dec mov cmp push (bad) movsb and aad sub sbb ret mov fdivs dec sbb ret ss int or cs add clc pusha mov push mov imul pop aas push xor sbb or in inc and das jae cltd jle sbb jno iret and ss mov sbb lods xor sub ds insl popa mov jmp pop call inc dec push lret inc add lret adc (bad) scas (bad) mov dec or push cmp mov inc xchg cld dec xor ljmp fsubrl mov out setbe jne cmp push pop fidivrl pop pop lods cmpl jp imul mov out pop sbb aam sbb outsl xor push lods mov adc and xor mov mov fmull or lods outsb jb imul cmp movsb pop decb pop call fldcw ret cmpsl mov jecxz xor xchg test adc (bad) mov sub mov repz mov xchg sbb jns dec xor inc push push or mov jb mov push sbb adc gs jle push mov mov mov adc dec mov inc mov push stos xor sbb push and cmp push xor dec jne ja cmp pushf adc lds mov adc xor jge adc shrb xchg lods popa (bad) dec mov xor adc inc bound fdiv dec dec jge loop lds lods adc push fild xchg (bad) cld push arpl xchg fiaddl call push inc popa aaa pop test clc sbb imul out nop into xor or jg insl (bad) in mov ljmp push out fisub (bad) push hlt sbb mov dec lods aaa jae fwait xchg mov xlat shrb inc jg sub cld test lea jbe int add adc mov fcmovnbe push insl loope inc aaa lea pop sahf leave cmp add jae sub sbb mov fcoml outsb sbb mov popf loop cli mov ljmp push push cmovs jne fwait cmp inc mov push fisttpl stos mov dec cmp (bad) mov mov std imul notb cltd or fimull push adc inc pop insb sub inc pop cmpsb mov or into in imul cmc adc cmp mov cmp jmp mov (bad) out fidivr and push idivb and or cltd xchg dec jae xchg mov xchg xchg popf fucomp out sbb fsubl mov insb or popf enter mov mov push push repz dec mov mov imul (bad) stc cltd push sub insl imul push loopne fildl dec aaa hlt out sub stc adc outsl add mov mov movsb loopne mov jnp adc inc push add inc fistpl mov lods arpl (bad) pusha test bound cmp jnp jp pushf cmp mov and test xchg pop xor ljmp sub test popf movsl or cld sub or popf xor or (bad) out je and sub cmp movsl sub arpl mov lahf scas jno add adc xchg movsl stos lea mov mov movsb cltd mov cmp fmuls int dec pop leave lret ljmp add xor imul imul inc dec (bad) sbb xchg stc and jl aaa shl pop push aaa xchg sub and or pop adc mov ds adc lcall icebp ljmp ss or testl push iret adc push out movsl fwait mov cwtl push sahf push mov xchg fist iret aam jl push mov xchg lods shl cld clc pop jnp ja sbb or push or das mov lds pop push insb cmpsb imul mov push mov and fbstp cmp cmp notb loope adc lret dec cmpsb ret dec jp test aam call push jns fistpl xor add xor and and sbb pop shrb or out in lds in xchg inc mov lret ficompl test loopne jnp adc leave lahf or es movsb adc push clc fldenv dec cs adc cwtl popf loope (bad) ss sbb sub call daa adc lahf push push cld lods mov (bad) imul mov jne pop loopne out repnz (bad) mov and adcb cmp out xchg lods push test adc add fistpl adc xor ret sub ss xor pop mov inc int pusha pop and or jmp inc cmp in pop mov push insb jno lcall xor or popf mov push int inc cltd cmp sarb add stos mov insb lea sub or shll sarl (bad) je sub pop out test adc call nop and fs dec cmc fidivr add inc jl jmp enter daa xor lret rorl mov js (bad) xor add adc xor mov push push mov push stos add adc mov add xchg jbe insb push in mov mov jno and out mov std add sub ret push inc jbe fadds fcompl outsb cmp mov sbb div aaa pop cmp fild imulb adc lods and mov dec cmp outsb jns sub add les test dec inc dec leave insb sub or xor push imul (bad) test insl adc addr16 ds int lds mov xchg mov add push int3 push call lods addl mov mov out aas xchg loop push sbb xchg (bad) repnz mov stos and jmp popf inc in repz into cmp mov and pop and lods sbb adc scas movsl sbb in mov push cwtl out lahf jge fwait pusha je les or scas push cmp push or aaa rclb int3 add sbb (bad) and sbb mov ret sbb aad dec mov std cmp pop cwtl nop mov (bad) lock fadds xlat pop das add cmp pop add cmpsl sarl mov rcrb ds mov test push das ret mov mov test push pop (bad) icebp int3 scas sbb ss pop push sarl stc jmp loopne es cmp or jecxz and (bad) outsb pop push sbb outsl xchg mov or xorb int std addr16 jl xchg loope jp (bad) out cs (bad) loopne add jmp ret popf hlt sbb mov imul jmp xor pop xchg not test clc cmp aaa popf jge and xor shrl (bad) jae sub or mov lock xchg jecxz sahf mov lcall gs pop add or popf das adc lret dec lret ret sbb arpl mov or push cmpsl dec and lret sub sbb push mov aam pop jp leave pop pop sub cmpsb mov mov lret xchg lds dec sub xlat mov (bad) (bad) scas mov inc jmp int inc dec mov rorl icebp fbstp movsb es add popf aas rcl repnz xor leave jne fsub in dec jns repz lret sar daa jbe test fsts ljmp add cld and out mov fdivr iret loop add inc xlat nop cmp cwtl popa ret in call sahf sbb inc mov sub test or ror xchg push out xchg fdivr aam bound (bad) loope pop mov imul jge jecxz sbb (bad) jno mull (bad) cmc js pop fwait xchg mov int3 push cmp mov fldt pop xchg movsl negl mov aaa test mov jge test xchg mov add mov mov inc outsl loop mov push adc or es cmpsl imulb adc dec (bad) popf adc lahf ja lret inc (bad) in pop jbe popa test loop enter adc sbb cmp mov mov xchg jle sbb in add jae jne bound repz movsl mov mov clc mov dec stos mov fsubrl lock xchg lock sub inc pop mov out xchg add push lock push insb dec xor mov aaa and push jne jle hlt cli xor in push popf cmpsl add stos (bad) mov roll sbb and aam inc out adc out inc aam or daa lock xor jecxz mov xor jl ljmp insl pop cmpsl sbb or (bad) and lock mov cld or push das pop fidivrl mov rorb cmc sub sub ds xlat popa mov jg push sbb add add or adc into sbb add pop add xor jbe sbb xchg cmc inc inc add mov or mov fwait sub sbb pop adc xchg inc mov fcompl mov push mov pusha mov incl mov jb iret pushw sbb xor shrb dec pop and (bad) cmp dec shl mov jbe pop inc aad fdivrp loop and mov cmp xchg aam pop cmp add add roll and or fisubrl and (bad) icebp and add mov push xchg shlb dec pop xchg pop adc cli mov test mov in data16 test gs mov rclb gs mov dec push add into and mov mov jge xchg test clc dec adc mov add mov repnz testl aas push out pop cmp xchg or aas xchg scas cmpsb cmp mov add and mov mov jge sbb or cmp mov dec (bad) mov mov js inc aaa dec rol or jo fistp dec outsb imul dec mov test fisubrl pop pusha ss dec loope subb dec cltd adc hlt pushf das insb aam adc lods cmpsb sbb sub aad mov leave fsubrs sbb mov faddl xchg mov aas inc xlat loopne pop and xor mov in or (bad) xor mov add addb cld jl cmpsb jae push mov loopne dec dec inc xchg or cmpsb fidivrl add inc rclb or lahf jb jo xchg aad sbb mov mov andl mov or out int3 dec andl mov mov mov push rclb sub lahf aad sbb (bad) fidivr adc mov jns daa jmp movsl xchg mov dec aaa xchg mov insb test dec js repz lds clc mov mov xchg fmull dec mov adc add push lods xchg mulb push adc into out jae es adc mov negb dec dec test jmp and mov and pop jne mov mov mov loope (bad) xlat sub mov scas mov loope sub clc or jb push (bad) stos xor push lea add add sub (bad) icebp mov push test es mov insb ret sub cmc test sbb or in repnz aam lcall pushf cmp dec xrelease lret xlat add jbe sub and cwtl lcall addr16 imul (bad) arpl fidivrl nopl popa cli imul movsb mov inc jo movsl movb and popf fucom mov pop in gs xchg das jle inc xlat cmp shrb cli cmpl cs imul add xchg mov push or addb lods lods xor loopne mov cli jb out mov adc aam dec push enter jl push int3 xlat and jb out jmp ficoml jge add iret mov scas mov mov pop sbb jnp out lretw mov push int3 jne jae xchg mov xchg push and out dec rolb add popf (bad) push orl shlb mov test cld dec out into xchg dec and cmp test fimul xchg cmp stos mov rol insl cmpsl std jno negl stos stos lcall negl dec and loop jno movsb retw iret jge leave js push mov popa and add mov inc sbb stos dec mov out inc push sbb xchg int3 test push lret mov mov add out lds pop xchg andl leave shlb hlt mov icebp sahf adc push ljmp xor pusha (bad) lock dec (bad) lret sahf int or cs sub hlt pop dec sbb pop sarl mov xchg cwtl insb pop addr16 cld cmp hlt mov sbb mov test scas adc bound inc sbb mov dec pop std mov sbb mov xchg cmp roll and stos cli gs pusha sbb cwtl loop outsl sbb imul das out faddp jns pop xor add and cmp mov mov dec subb jnp jl js stc mov mov pop jecxz pushl sbb adc sub bnd repz int jnp cmp (bad) out in ds fdivrl outsl inc mov ficompl jne mov out adc mov add in std push test or mov mov adc mov je test int3 out or sbb (bad) fdivl cmp sarl cmp js inc frstor stc popa cmpb adc adc into sbb std and (bad) gs jbe mov fs cmpsl adc push mov in pop mov adc out fimull je aam lods imul sub sub mov int push inc jnp jbe add adc cmp in cmc push pop jbe dec dec mov inc push adc test dec adc inc dec cs pusha stos je mov add stos loop lret and push jg lret mov out add out scas sbb sub jl lods fwait (bad) adc jns cmp pop cmc frstor dec loopne jecxz imul cmp hlt mov test sbb bound andb pop movsl orl insl adc das aam aam ljmp and cmpsl pusha pushf and mov lret push cmp sub je dec xchg or (bad) fmul addb or scas dec sub or fisub jmp add inc jne xchg fwait mov aam aad sahf sbb jmp (bad) in rcrb out pop add sub mov mov int3 imul pop lea cld push fild mov fstpl (bad) insb dec cs mov xchg clc mov ja popf push push mov (bad) (bad) imul rolb mov push (bad) cld mov movsl mov mov jo pop cmpsl andb jl push sbb pop iret aad mov es js dec mov mov or sarl add icebp (bad) mov push sti daa fdiv xchg xor (bad) loopne imul imul movq jge dec loopne xlat stos inc jbe mov dec (bad) mov sahf int pop push xchg sub fwait inc jg int3 (bad) (bad) cmp addr16 or xor inc ficom data16 inc adc test jg xor lret sub orl lret sti or mov or inc push pop or adc je nop jmp dec jg pushf das xchg sbb lods stos inc dec sbb mov stc rclb dec vmovd (bad) jle gs sbbl inc pop test aad inc (bad) mov stos cmp adc xor xlat imul jb xor call dec flds aam mov xchg leave orl or fcomip cmp xchg int and and and loope jno mov mov jge jno push fcmovne dec mov pushf mov outsb jg js add insb jg jecxz and adc push mov or adc (bad) repnz lret cmp and adc std mov fldcw add inc cmp inc test hlt jge cmp mov sub and xorb (bad) sub daa mov pop mov push test adc push movsl jns lea sub cli mov xor call stc sub test inc mulb in ret fistpll lods cmpl pop fwait adc stos jl cmp rol push pusha adc adc in loope lods (bad) xor leave jnp mov mov popa push mov sub add dec btr lret cld outsl insb push jo or (bad) sbb movsb sahf rorl daa lea push xlat cli or loopne test xchg mov icebp adc clc xor pop push scas mov and mov orl movsb jbe sbb mov orb pop ret jnp push dec lods jp jmp mov loop push sub mov jmp pop pop ror dec in test inc sub stc ds aam bound mov test or ljmp inc mov into iret inc jns outsl jl pop (bad) push xchg adc jle push aaa xchg insb lock mov dec sub push sub out pop inc adc mov sbb add test xchg aas (bad) or sbb jbe xchg mov inc movsl mov jmp and inc test lock rcrb ret nop inc xchg adc mov mov push aaa movd test push or sbb and aas jae push mov test xchg outsb insb mov adcl rorb dec mov mov push or aas mov pop out mov js frndint xchg mov adc mov dec or icebp add aam inc jl lcall shrl adc aam sub addl bound addr16 adc ret lea imul jae fwait pop test js push idivb les jl dec push push out cmp (bad) (bad) jo cs outsb fldl lea jecxz in hlt cs jg and jl out adc cmpsb dec aaa test lret pop mov and adc adc mov cltd les cmp sbb mov sar or aaa in pop pop test fbstp leave mov sarl mov pop (bad) xor cmc push test cs loopne ret hlt aas mov js rcl ja mov mov out cmpsb add mov mov xchg pop sub mov (bad) and (bad) push mov mov scas fwait adc adc pop les dec mov adc popa push stos notl add inc loop movsl aas imul sbb cltd cmp stc hlt dec repz pop insb mov les clc movsl cmpsb xchg in (bad) adc repz jbe cmpsb mov iret add loope jne inc aam pop lahf dec gs xor rcr sti cmc inc mov adc mov jno les popa add bound faddl aas popf mov pop aam dec or jae cmp xchg sub das ja sbb les adc (bad) imul fdivrs dec push push lods inc and outsb decb inc mov (bad) movb dec lea mov sub sbb dec jno icebp ret xchg clc mov jo jb jno add leave and js add inc sub inc or aam cwtl xlat daa out xlat loopnew std sub test out push aam mov or fwait test cs imulb sub es jl (bad) bound xor ds daa xchg push and xchg movsl sbb jbe xchg repnz imul mov and jle jg jae push and shll icebp inc or jge pop push and imull test sbb dec iret push cmp aas or fisubl mov cmp fwait icebp aas in dec clc (bad) mov mov push mov jnp jno mov mov enter cmp mov ja xor nop inc push adc adc insb dec mov and pop sub rolb jmp inc cmp jno (bad) notl lea mov cmp arpl adc cltd std sbb adc aam cltd and mov xor xchg cltd mov clc fidivl add sbb hlt jno out sti xor dec jbe dec mov xchg jle mov popa pop mov jl add (bad) push mov scas clc (bad) rorb imul jne int3 cmpsb pop inc lcall jl fwait xchg cmp mov lret and pop shrl and pop les fwait adc test and out inc and lods aaa psrlq push pop xchg cmp xor stos (bad) jg jmp pop enter mov or lock adc sbb iret dec addr16 outsb arpl (bad) std mov inc xor mov sbb enter inc mov xchg jne into subl rcr in popf xor test pusha fisubl cmp xchg scas mov mov dec pop out repnz dec subl pop lds xchg out hlt jle sbb fdivp ljmp mov sti push lret rcrl fwait and jmp ljmp into icebp bound bound inc xor aad jp test bound aaa ret mov add jmp xchg mov nop hlt mov inc cmp xchg ret pop push lock or mov adc repnz (bad) (bad) faddl sub or addr16 ret push push mov pop pop repz and mov dec and pop add sbb aad clc inc mov into ret std or pop lds push lret (bad) xlat mov xchg fldt jae rorb popf jno (bad) repnz mov adc push adc (bad) and adc (bad) ss bound lods leave push test (bad) lret in xor and pusha pop cmp ficoml pop jnp daa adc jne insl xchg (bad) les icebp mov (bad) push rorl and dec (bad) xor jo add push pop lret adc pop pop xchg xor cmp lret dec push outsl and dec inc mov and sbbl mov pop ja imul lods movsb or mov add fidivr jae shll push fbld mov xchg ss adc hlt insl movsb xchg add pop ror xchg mov xor jbe pusha or pop test test and cmc std fbld xchg inc mov or adc xchg sbb mov incl shrb jge lods mov test test into sub jne dec mov add (bad) cmp lret mov stos mov sub sahf mov mov test scas xchg rcrb pop mov push push cmp test mov sbb add sub roll (bad) mov aam (bad) inc xchg dec dec aad jb adc cltd repz lahf sbb add cwtl call lds mov loope aaa pop mov lcall (bad) jnp adc add mov or ljmp ffree sbbb push cmp xchg inc loope (bad) sub out sub jl je adc pop xor fcoms xchg out sbb data16 fidivrl adc lret sbb adc cltd sahf xchg pushf mov mov (bad) xor xlat or fsubrl fdivl insl adc hlt aas xchg jae add lret mov jno outsl and je and push push fistl decl mov rcrb (bad) bound xor (bad) jle imul insb stc sub (bad) mov xor sarl sbb inc int3 rcrl mov and outsb insb xor scas mov sub mov mov add (bad) dec and mov lea mov jp hlt mov mov cmp cs imul out mov jae or je and adc jle (bad) inc xchg (bad) sbb fucomip or adc dec sbb and ljmp data16 xchg mov mov push jmp cmpsb aad cli pop adc inc mov xchg or dec or ljmp mov movsl loopne stos pop mov test leave ljmp test test and mov (bad) ret faddl test add push dec add jo (bad) es hlt pop in jl xchg mov jp sbb inc mov or xchg mov mov dec pcmpeqw faddl sbb sbb cvtdq2ps fs js mov ss or (bad) ficom pop cltd shl mov loopne jno test fsubrs xor xchg jge stos loopne clc cmp and push test out cmp sarb stos sbb sbb call inc xchg jmp jo cmpsl add inc les fprem1 pop daa into nop popf (bad) jmp je loopne pop and xor mov out arpl test pop pop fiadd fstp (bad) ss mov inc or pushf fidiv mov push jae sbb into lahf pop scas push (bad) xor popf jbe cmpsb push inc push add sbb (bad) xlat or mov (bad) cmc inc inc sbb push mov adc adc mov cmp pop hlt imul cltd xor jp mov cmp mov mov popa out sub mov jmp into fisttp repnz inc adcb insl cmp inc nop xchg jl imul add and adc rolb cmp lods and ja mov les xchg (bad) mov mov inc sbb insb ja rclb push jmp (bad) adc jp loop mov es jp mov jp mov adc xor adc sbb xor add enter jns mov call push in jo xor push cmp fisubl jne xorb fmul mov fdivrl (bad) (bad) mov jb mov cmp movsl push sub adc sub (bad) out lods sbb fnstenv repnz cmpsb fmull (bad) jo xchg subb mov inc addr16 clc ror xchg push cld out mov scas (bad) adc jo pop jle adc dec test mov out mov ja int dec scas xlat adc adc shlb xor mov sbb insb and arpl sub push adc imull into popa fstl push gs dec mov daa dec push rorl pop hlt pop data16 call fcmovu mov mov insl lods or lretw mov pusha xlat in sub movsb test sarl (bad) repz mov pop sub popa lds es xchg shll push fwait or mov push add push rcrl add pop std cmp aas pop fisub cmp cmp (bad) xlat mov push dec pop jge xchg xchg mov jb push rcr add or cld jns add or pop std adc dec roll pop pop mov xchg sub mov jle mov cltd es mov movsb push sub dec mov (bad) subb pop cld ljmp (bad) xlat or add movsb sbb iret push test push cmp and jb (bad) lcall cmp shll dec lret fild cwtl xor outsb or shlb pop xor xchg pushf js int fs xchg jg jge push push in les das pusha inc push lds fiadd adcl jge,pt or mov orl out and pop pop or addr16 ljmp lret xchg adc lahf ss lods mov and inc int xor pop adc push dec jg test fisttpll sub push test fabs (bad) lods mov sbb std pop xchg inc outsl leave clc (bad) adcl adc push insl inc je fmull aaa lods jo lret mov lret xchg rorb hlt xor jno inc mov test cmp fidivl aam sub mov lret mov or (bad) pop (bad) (bad) lret xchg enter push and in xchg mov jp jb cmp (bad) adc (bad) outsl inc cmpsb bound lret insl cmpsl dec sbb lret hlt btr adc dec mov jmp lret xchg mov ss adc mov imul and sub xor (bad) mov pushf mov cs dec movsl jle (bad) cmp dec aad xor test dec ret inc gs xchg iret stos sub sub test xchg or pop iret dec push adc and mov daa and jge sub call lahf rclb mov jae insl popa pop fwait scas lock mov fisub push pop into rcr sub daa pop stc push pusha repz ds mov mov js (bad) into lock movsb mov jp (bad) or sbb sbb inc pop xor fsubl mov xchg mov dec cwtl add mov cmp and push lret sub or add or add cwtl cmpsb push or xchg mov (bad) out fsubrl jo and lahf inc and jecxz clc mov arpl es or mov adc test mov push mov inc xor fidivr lret lret fist adc push inc sarb xchg lret sub cmpl insl fistpl fbld inc (bad) push out test or rclb cmp adc push or insb mov shrl imul sbb (bad) enter jg or icebp cli test stos push test jp cmpsb pop mov mov test daa mov in xchg into cmpb idivl js and out dec add and imul (bad) jne push xchg add xchg or xchg (bad) fistp push sub and roll rcrb push mov mov jae or loopne loop mov pop cmovnp fdiv pop sbb jbe (bad) cmp orl mov xchg shrl (bad) or jb inc xor in andl test push pop sub loopne pop adc jae scas xchg stos adc jp addl mov mov adc mov repz mov adc loopne (bad) sub test int3 jo xchg cmp add and lock jo pop pop lret push xchg adcl push mov cmp jns jp adc mov push into cli jecxz lock adc bound lds mov or hlt inc inc stos jge,pn insb iret (bad) das xchg jg rclb stos das pop push pop rclb (bad) xor in (bad) pop mov mov pop fsubs add jno scas dec aas adc fidivr arpl mov sbb sarb push dec inc jg xchg dec cmpsb nop repnz push inc xor push xchg dec (bad) mov popf sub pushf loope ficoml (bad) mov or jb aaa repz and das icebp adc mov aad cli mov jg xchg cmp cli rol in xchg mov xor add mov pop inc rcl sahf scas fsubrp jb lahf fwait popa in mov cmp faddp stc and daa add lahf das mov sub jp test inc (bad) mov mov push xor inc xchg mov dec pop cmp addr16 dec dec xor arpl lret mov xchg mov cmpsl push cld push ljmp (bad) fiaddl add js std dec jnp test sbb int3 cmpsl sbb xchg rclb lds movsl and sub inc ret movsb jne int3 push jb push cmc lahf pop adc stc sub inc (bad) mov push sub push mov jg pop or mov fstl fnstsw loop ja jns daa jb js ss sub stc mov and testb fisubr stc sbb add mov in lock sbb inc stos pop movsb mov (bad) lret xor xor xor mov es jl sbb xor arpl push xor pushf imul cmp add sti aas sub jg je jl pop and mov mov shll xor movsb mov cmp popa sbb test movsb jecxz jae sbb push (bad) in xchg mov stos dec fmull mov sub in jo scas lock lds xchg pop or repz inc out cltd mov xlat push shrl mov jl call ficoml lret push scas sbb or inc mov xchg test popf addr16 dec jo push fnstsw icebp daa out std push out fistl xor mov out jae insl vmaxsd les das int3 movsb movb push sbb add les adc repnz jnp pop mov sbb lcall test pop sub arpl ljmp in and or add arpl (bad) pop daa xor mov mov shrb call nop dec push sahf insl sbb or push sbb push cmp add movsl in xchg fbstp repnz stos push mov jle push mov sar jno mov cmp push aam mov mov pushf mov mov mov setg mov pop js lds ljmp cmpsl lcall mov pushf pop fsts stos (bad) into pop and out sub push push insl sub jge jo loope jp out cmpsb lret hlt lret (bad) jecxz add push and icebp dec dec fcompl and inc in mov int3 fs dec test or push in cmpsb call cmp inc arpl insl out push iret jl and es mov fimull cmp (bad) (bad) shl rcll shrl popf inc lret cmp jle xor test divb es inc lods mov fcoml push adc sub xchg int3 dec pop jmp pop and pop mov adc iret movsl lods sub and in jb leave les push stos lret pushf in push mov mov (bad) xchg icebp or sub nop mov adc lea aam aam fnstsw sahf mov pop ss and add push insl xor rclb sahf lcall (bad) adcb icebp mov ds outsb pop repz les mov in pop outsl sahf ret lret nop jp push popa repz pushf sbb shl fwait mov cmp inc enter fwait inc lcall cltd add sbb aas xor not xor outsl dec sbbb mov push inc jp insl cmc int3 xchg pusha add test mov ljmp and push add fiaddl xchg mov and stos loopne out cli sub bound cld xor fstpt sarb mov fdivrp repz clc aad (bad) in mov ds mov punpckldq mov mov aaa aaa pop add out or movsb mov jecxz out icebp cmp andl mov cmpsb sarl mov dec clc mov jbe push mov incl ja pop adc insl fldenv cmc cld fs jle cltd loopne test lock sbb mov mov rcll movsb scas jp sti xchg inc xlat jge lods or les push out pop sub jbe pop out jle hlt pop add sbb les push in and jecxz loope in popl jecxz push and mov pusha cwtl jb pcmpgtb xor adc push mov push pop or push iret xchg mov test mov decb sub shll mov movsb add xorl in cs movsb (bad) cwtl rclb mov jne leave jp in pop jbe and outsl mov inc imul aaa dec cmp cmp push and cli mov nop mov in jge dec mov mov sub xabort xchg jo jnp adc add sahf fldcw imul daa fnop icebp jno insb inc inc (bad) mov ss std std mov std sbb clc fwait adc (bad) popa aad dec add movsb lock cmp add movsl and gs inc (bad) cld xor int into in lcall cmp lods repnz cmc stos lret mov dec cwtl dec sub (bad) cmc sub and dec adc sbb lcall and mov and or in push push mov jb mov fs test push aad enter xor push scas pop std test (bad) xchg cmpsl loope insb mov mov cmc sti mov arpl ret add insb jbe or cmc mov ds cmpsb enter aam xchg fldcw sbb and dec xor in aad pop dec data16 mov iret lods jp fs sbb and dec jge into adc lock lods cmp (bad) cs insb shr xlat xchg fldz rclb or push or and in sbb stc push ret sub adc rcrl (bad) push in mov fdivl mov test pusha push sbb lahf cmp clc mov mov repz test or in outsb mov adc push adc decb sub fstl std pop sbb and addr16 (bad) test fdivrl dec aaa sti ja jns xchg or mull or in or cltd sti unpcklps push and lret sbb pushf mov dec stos sbb imul (bad) mov imul call dec push mov or popa mov mov mov in pushf push shrb or shrb and and inc sbb fcmovnb popa push sbb push and in sar test (bad) stos stos lock fcoms dec mov fs dec popf mov clc mov or (bad) movsl lahf scas in xor imul pop std mov add (bad) divl loopne lds stos sahf mov sub jecxz call mov lods and nop push test out push pop jmp push mov sar xchg lret in lea or dec idivl mov xor lea leave dec sub (bad) jne xchg cwtl pop pushl sub jns xchg addr16 and adc pop sub cmp daa xor icebp out jp ret mov or lods out xchg add pop add popf lret xor push loope pusha and jge add mov cmp cltd dec out mov push jmp mov (bad) popa test push xor cli lock lcall dec aas lret (bad) or insb jne stc and (bad) cmpsl divl pop adc ss stos pop inc arpl pop aas scas lods jle xchg inc push std out notb icebp cs call xor ret out aam or xor inc cmp push (bad) pushl sbb jl push stc sub xchg sbb mov inc in fsubrs (bad) ja hlt inc cmp cmp popf sub and (bad) push popa pop insb imul fnop daa lods jnp mov cli sarb lock insl das jns mov sub mov mov ja daa adc insl dec mov lea jecxz dec imul ficomp sub sti xchg push add xchg dec outsb loopne test push cli std cmp sbb lea jg scas aas add sub stc xchg sbb jns mov mov popa movsl stos subb movsl jp push push inc jnp (bad) jge iretw dec leave lods xchg cmp push es clc cmpsl adc pop jl icebp sub mov into sub xchg lahf mov jle pop dec push sbb and jnp (bad) or mov mov sbb stos outsb inc (bad) jg cld push dec fstps out pop jg or or (bad) jl test shrb mov rol push jnp repnz inc mov mov push jae faddl cmpsb push mov mov cmp sub gs ss xor ror scas outsl test mov push stc or ljmp pop mov adc stos fisubrl pop and aam pop xlat pop jo sub push pusha int outsl fnstenv xchg and cmp jo test xor icebp sbb das dec scas popa fldl ljmp lods repz mov leave adc fmull into lret loopne das jns movsl movsb imul and insl das imul dec cltd and push mov imul and mov xorb ret jbe fucomi (bad) sub add xlat xor sahf or scas xchg rcrb jbe js mov push pop jbe jb inc xchg aaa mov adcb mov enter addr16 cmp faddl (bad) jp fwait int3 lret cmp aad movsl mov outsb lea les imul andl mov push mov loope int adc leave (bad) dec repnz and fisubl sub sbb xchg or in jmp jecxz push int add (bad) cltd jnp (bad) rorb imul add xchg scas mov jb ljmp dec (bad) js (bad) shrb test adc out mov jecxz and adc sub xchg inc jl mov (bad) xlat (bad) cli mov das pop pop das push dec sub jnp (bad) cmp out mov ret cs jnp (bad) mov das adc xchg test sarl call std test in in inc lcall mov inc pop outsl adc andl xchg push sub nop orl push sbb dec xor and outsb sbb push in sbb push mov fadds inc cmp adc and pop mov repnz decb fisubr or adc mov loope push push (bad) ja add cmpb jmp sub fist mov mov lcall mov pop push cld jp in jne aas in mov prefetcht2 sub xchg pop inc pushf or mov (bad) and cmc mov jp sbb pop pusha inc movsl sbb push imul fisubr in xchg or cmp or out cld leave dec ds xchg outsl push mov movsbl pop cltd cwtl inc jecxz sarl jnp mov pop popf or outsb test psubusw cmp xchg sub popf mov scas psubq cmp test and popa (bad) ja addl arpl mov ja inc pop mov out (bad) xor ret push pop or mov js (bad) mov sbb pop into sbb or xchg dec (bad) lock aas loope adc insb xor mov dec push mov adc daa mov jge outsl enter lods out inc xchg ret mov pop xor dec push das sbb mov mov mov xchg cmp (bad) mov ret add and rorl push mov mov sbb cltd loope outsb xchg sub xchg lret lods out icebp test loope sub push lret lods or mov pop mov or (bad) pop sbb lea add out les pop push (bad) fcom cmp push jge lods add sub add and test cmp xchg xor cmp ret mov push mov add sbb add out enter out xor ja scas (bad) push (bad) xchg push push test push (bad) jbe into pop aam (bad) cli adc pop inc fs mov lods sub pop das (bad) push xchg push test and fmull in pandn incl je pop icebp inc inc pop fwait adc fbld out sbb dec out shr pop shrb pop les push arpl dec add mov sub adc or enter fs and dec js inc hlt or jbe out nop jb inc in add sbb sub cmp jg mov push push ret lret or push cli jg sbb (bad) xor in jnp adc xor jo add lods fcomps pop icebp dec cli xor jbe fbld test xchg push je jp add stc mov and inc (bad) inc xor and push inc inc xchg xchg ret sub push pop xor out jo rcrb cld out arpl aam xchg inc mov mov cmp jns in xchg mov and add cmp jb mov dec mov pop mov mov or inc xchg cwtl mov sub ss xchg movsl in mov (bad) push popa fidivr outsl (bad) push mov lret lahf (bad) int3 scas jne fwait mov xlat rorb cltd ret movsl xchg jns dec movl daa movsl es xchg mov jl or lock aaa adc adcb mov mov int3 aas push fnstsw jmp orb dec mov inc movsl add or icebp push fs (bad) push push in jae fdivs fldenv arpl daa and jmp xlat call mov aam out fisttpll or outsl (bad) jnp inc shl adc add test iret pushf dec popf jle jns push mov jbe push into sti lods imul cmp adc sbb ror loopne sub dec mov aam jno out rcrb push add jno push out add adc mov sbb scas mov jg ret inc ret jb xor ret adc lods movsb gs and ljmp gs fmul popa xor dec cmp or cmp scas jl push add fisubrl jnp add subl ja mov bound hlt push inc pop adc (bad) jo push daa or mov inc pop rclb add sub cmp mov jecxz push xor sub mov jne sbb adc push xor mov add xchg mov cmp popf bound mov lods les outsl sahf pop scas sbb xor add push xor std lea xchg pushf pop out ret mov pop push test pop xlat push (bad) test pusha adc arpl push lahf addr16 mov out push imul mov xor mov hlt mov in nop and or ja pusha mov mov mov xchg cmpsl mov lea xchg rcrb lds and lock mov cmp lret ret cmp data16 stos sub enter jl xchg pop dec jmp inc mov lods adc sbb cwtl mov enter dec inc repnz fisubl scas cmp mov and mov adc cmp xchg xlat xor sbb aas pop mul addr16 aas cmp and data16 pop push imul clc lea out dec stos jne dec shrl es push push and pop mov dec push inc jg fstpl sub (bad) (bad) sahf mov sbb bound (bad) mov rcl mov jle dec cmc imul push pop lods and adc rcrl cmp fucomi xor mov shll loop mov int3 outsl aas mov mov lea adc xchg loop sbb daa mov fsub xchg add pop jmp lock imul adc insb lods div insb bound cltd xor push data16 stos in mov sub lock add sub pop rcrb push pop or xchg xor nop lcall push test pop xor mov data16 rcl xchg mov dec int3 cmc xchg cwtl mov outsl mov pop pusha testl (bad) std jo sar subl inc xchg jl push sub dec data16 fbld rep inc pand iret repnz push in stos dec or jo xlat pushf mov scas in cld les mov or or xor mov js fnstcw cld push jae outsb inc insl mov cmpsb inc xchg pusha iret pusha mov (bad) mov je push or nop cli scas push pop dec mov ret add and (bad) sbb lods subl jae pop scas mov es dec sbb cmp inc dec adc push std pusha cmpsb mov inc or aad jnp in lock stos pop adc outsb mov test les add fsubrs enter lock cmp jecxz scas cmp aas idivb sbb mov sarl test push mov lods repnz xor stc aaa roll xchg mov pop push fadd stc pop add dec jnp das ljmp out rolb dec pushf shrb cmp jle addl xor scas or stos sub push jle sub or add repz test dec mov ficoml mov xchg pop pop xor repnz imul out mov roll pushf and scas gs inc xchg out scas cmpsb mov pop push repnz sub into decb pusha ss imull ja aad push (bad) jmp sti rcll jo sbb flds sub (bad) lock lds xlat xor lcall push inc add or mov and je adc adc xchg xchg fwait ss cwtl mov add es and push fisubr xor adc cmp cmp (bad) cmc ds dec adc fwait in and insb lea loopne cmp xchg mov mov fisubl adc shrb icebp (bad) ljmp js mov (bad) int mov adc xchg loop aam pop mov ss xor aas mov sbb dec mov dec add push adc jl std pop fmul adc hlt xor mov xchg arpl xchg cmc cmp or push and inc insl dec add sarl sbb dec iret (bad) sahf and cltd mov cmp mov cwtl out jb scas xchg jle pop jecxz xchg mov sbb sbb movsb push jnp mov (bad) sbb or icebp mov lock test mov lods stos jle (bad) (bad) test lahf int arpl or pop fld sti mov mov iret mov (bad) jbe gs lds mov mov js int3 bound nop gs scas push popa cli jp imul adc adc inc sbb and xchg mov push cmp lahf jne xchg in rcrb negb in jae or fucom negl imul xchg xor mov ret cmc xor fdivl adc cmp xor leave scas push es sahf insb inc jmp jns jns (bad) mov cwtl lods movsb jno xor icebp mov insb fcmovu pop mov fs jle mov addr16 psrld aam orl xorl fs sbb cmp ffree xorl or dec adc adc je push repz sub push lods enter cmp jmp mov aas lods (bad) adc setbe popf fstp mov dec out imul fwait inc std imul hlt cmp scas cwtl in repz clc mov dec lcall push adc pop xchg mov fcompl xchg pop mov movsl push xlat aaa add orb test lock jle lret jp mov les push mov adc sbb div mov in imul lods movsb (bad) mov shll jg add jp dec cmp out dec adc or aaa scas fsub outsb xchg daa xchg pop lret rcl inc mov xor out das xchg sbb divb lods lret jbe and aas xor icebp fbld and stc push add ret or adc in lahf or test sub xor ljmp or inc mov into fdivrs pop out pop lds lcall fldcw jecxz and mov pushf mov mov mov mov popa fidivl mov enter movsb dec and out leave cmp mov xchg mov adc xchg push js cmc xchg sbb adc imul mov xacquire xchg cmp (bad) mov jae test lds mov mov pushf jg pop hlt or sahf pop jl outsl and aas cmp lcall test (bad) leave test insb cs out mov bound sub push dec pop lods xor or pop outsb dec cli nop sbb add loop outsb push push loopne adc push cmc adc in sub dec adc test sbb sub add inc mov aad push lods cmp sub dec add pop (bad) mov sub insb and ror and (bad) mov jmp or popf push (bad) push pop xchg test out or mov jg xchg push xchg push pinsrw mov add arpl xor rorb lret sub pop xor push aam sbb lret lea inc add jle clc jmp inc in lea push shll mov arpl sub add int cmp hlt loope mov add mov sbb mov sbb lret lahf test pop xlat movsl xor cmpsl push stc push push std fadds shrl sub bound popf out outsb leave adc pusha adc in arpl dec je mov xchg sti sbb int3 movsl xorl int fsubrs int3 push fildl adc loop gs mov ret fstps movsl push repz sbb cs xor inc cmp es mov (bad) in add sbb and stos outsl popa inc bnd cs xchg lods pop test adc adc mov je movsl stc sar mov jne xchg cmc mov rcll adc data16 jp push xor and sahf popa push xchg call mov mov lea sub xchg cmc inc jge cmp sub push pop mov sbb sahf mov dec sub mov outsb fcoms scas xlat push adc aaa mov (bad) mov repnz mov scas push mov sbb or es jns jecxz movsl jle mov test push push cmpb clc insl add and out jp (bad) mov scas scas addr16 lea and test mov daa inc jns aad pop fsubl jbe fistp sbb js lahf adc mov jp mov jmp ret xlat or dec (bad) loopne mov les add addb ja in in push divb mov sbb lahf jge test and repz xor mov aaa xchg aas fsubs pop loopne jne sarb adc add clc int3 lret push push in add sub in sarl in scas adc stos insb pop lsl lahf and jecxz mov xor jle repz test dec inc lock int3 pop scas ret into push mov jl dec hlt cmp fwait push pop fstps dec scas jecxz inc inc pop xor std pop in xor fistp ja jecxz adcl push lahf (bad) jnp decb lock aaa out je fistpll pop sahf andl adc inc test (bad) mov jg xor lret cwtl cmp rol insb int lds arpl loopne xchg push test pop pop add inc inc adc jns dec fs jns stos adc imul dec bound pop xor and mov es mov popf sbb push xor sub div sbb cs ljmp outsb (bad) in insb ret lcall aas jo cwtl iret mov adc sub adc fdivrs in lahf in lods cs mov pop aaa mov fistl mov (bad) push push sbb xchg stc pop jg int3 outsl outsb push and sub mov xchg js jb loop fnstsw mov cmp cmp cmp movsl jp pop ror pop xchg dec popf in test xchg adc out cld dec lds pop push mov mov out pusha dec inc out sub sub aad loop and dec xchg lock or add or dec mov sar xor add daa xor sub xchg (bad) mov clc out andl sahf ficomp roll ljmp sbb sub in ret and mov mov dec scas dec cmp xchg sbb mov dec jmp dec cmp subb push jns shlb jmp xchg mov dec lahf sarl pop mov cmp or lcall xor fucomp icebp mov fistl test inc sar ljmp add add mov insl sub pop data16 imul je jmp inc jo mov loope mov rcrl aad scas mov movsl xorb enter mov mov jb adc repnz cltd cwtl outsb xor ljmp jl xchg pop ret inc pop push mov aam cs pop push imul les sub dec neg dec js sbb push test sbb push cs sbb jo int3 sarl dec mov jle shrb sbb cmp add jmp xchg add js shll push sbb popa and test fbld gs xorl xor sub std cmp push xchg shrb ss jmp mov and mov aaa mov enter stc or or repnz sub or or cmp cmc insl icebp lret call fidivl ret jecxz xchg inc jge mov lea sbb pushf movsl or pop or ret adc loopne cmpsb mov sbb into (bad) sbb mov jno and push jmp and insl lret cmpsb outsb mov std mov les add or cld xor add push addr16 fstpl popa pop add inc pop sub add stos (bad) lahf sub insb cmp call ja cmp lret sbb mov test xorl jl movsb mov adc jecxz fbstp or in insl pushf mov (bad) xor decl mov in scas mov xlat movsl pop outsb out jge (bad) cmpsl stc jmp mov add fwait mov cmp adc push cmpsb stos scas adc les test ds mov sub mov xlat xor inc push (bad) xor loope dec cmp xchg inc lds out dec test mov and jge test daa jg lds jmp pop imul pop and popf ja adc jmp xchg rol jl mov cmp sbb xor pop out sti fmull push pusha stos or es add pop push bound cltd mov sub fs pop or inc xor jecxz (bad) or sbb (bad) js lods dec xor inc sarb mov mov fwait aaa ret jecxz gs ss xchg loopew mov xchg loopne or add push loope push pop cmp in sbbl out fisubl fsubrs push mov cltd cs inc mov sub sbb mov cmp lret cmc mov iret pop stc fiadd adc fsub adc ljmp cmp clc fiadd sbb out cmp dec call gs ds cmpb js lcall add mov out std jg sbbl cmpsb xchg mov mov xchg cltd das pop es xchg out mov outsl (bad) mov ds stc xchg push and nop aaa mov push stos pop mov shl xlat add lcall push jl lods jb jge adc xchg mov insb jmp lock mov call clc dec jmp dec pop cli je mov dec test cmpl inc aas rcll stos dec imul jb arpl lahf or repnz xorb xlat inc test xchg push popf icebp fwait (bad) aam out adc fnstcw xor cwtl loop and sahf and mov fs push jg mov sbb or xchg cli adc popf ficomp jecxz xchg cmp rcrl xorl fs mov xor das out rcr dec dec dec lret push dec imul (bad) imul push out jo fisubl in dec dec jb pop cli xor inc mov rorb mov int pop movsl ss and and int xchg call jbe jmp add idivl imull sub pop into fnstenv push inc fcmove jmp push test push hlt xchg ljmp jle pop out (bad) aas add sub push outsb nop movsb mov out into stos int das call push mov dec in sti cmpl sbb std xor or and (bad) in mov adc std test lcall cwtl gs inc cmp cwtl pop push xchg mov mov loope jmp outsl stos adc jge rcrl sub mov dec fcomp loope lret xchg xor sbb rcrl sbbb sbb adc lcall cld adc mov in (bad) sub jge adc or sbb daa shrb dec loop sbb and int3 out hlt mov cmp pextrw sub cmp fisubl test scas or pop inc in dec ss das (bad) leave test (bad) push lret inc (bad) loopne pop pop fisub les rcrl xchg scas insl insb mulb xchg adc repnz (bad) dec (bad) fidivrl jb out mov xchg mov xchg rorl cmp cmpb cmp and push sbb xorl push mov or push sub pop out xor lods pusha adc mov scas test adc enter push cmpl xchg adc inc stos aaa imul jmp xor fs adc mov push add xrelease enter stos imul xor daa cmp jnp repz xor mov into and xor mov jae jb and mov xchg mov adc (bad) shld push mov rcrl rorl aaa in leave inc imul aad ret sub je sti sub aam rclb pop lods dec dec test gs repz pop xchg (bad) decl in jno push cmp mov lahf in das mov mov fsubr mov inc fildll repz cmpsl sub and mov ret scas (bad) (bad) lock repnz mov mov pusha sbb sti add or insl pushf cmp dec fistpll push jp stos negl fwait push jbe cmpsl sarl out loope (bad) fstps inc or (bad) jae pop dec test fcoms int3 outsl add inc insb subb cmc adc sub nop inc cmpsl (bad) mov cli xor loopne loope out adc sub out cmc flds test pop imul jo cwtl pop mov ret mov sub push (bad) xor add mov (bad) sub sub out lock inc pop sub pop push out xchg lock jge mov mov jb test aaa clc ret out dec outsb or int3 shrl xchg nop cmp inc test movups outsb mov mov ficomp daa ret or ret shrl inc adc stc fsubr imul jl push stos dec add adc jo adc outsb add lds mov push cmp (bad) jle and (bad) lock ret mov loopne inc mov shlb add xchg mov rclb pushf leave repnz lods aas dec adc push xchg push cld push jae pushf dec ljmp add (bad) and xor jmp xchg gs pushf dec mov fs adc mov (bad) xor call nop cmpsl push xor imulb jmp xor mov jne test loopne (bad) iret inc cmp fxch loope orl test push ret lahf mov mov pusha pop push out and ljmp adc dec mov lret jae xor addl mov adc jbe mov adc sbb stos (bad) scas dec test sub or int3 lds scas pop lret in push mov or sbb mov mov cwtl dec and adc mov adc into mov adc stos fs outsl data16 repnz jp adc int es push (bad) mov arpl jnp add push outsb pop imulb jno cwtl lret rclb add mov and sub and jo dec aaa mov jecxz mov add cmp mov pop xor fdivrp pop xor cltd fcompl cmp nop sub stos icebp xor xor or jl sub nop xchg inc rcr mov mov sti arpl inc loope inc pusha mov out movsl sub lret (bad) cmp sbb popf or into xchg int3 or icebp add mov (bad) xor iret or cmp roll lock repz insb adc pop mov into loope and xchg pop sbb xchg jg test inc inc (bad) leave sbb in movsb push sub test lods clc mov pop xchg sbb movsl push inc or scas mov stos inc aam loope jmp mov pusha mov sbb dec xor pop loop mov mov mov stc sti jg lahf rcll dec push inc ret outsl mov in jbe mov push in jns push sub movsl or dec (bad) jle mov aas mov add stc xlat (bad) std inc mov push imul ss dec push imul movaps jp inc inc ret and jecxz inc arpl push out inc cwtl ret push add lods pop inc pop sbb nop/reserved or mov inc shrb or jno adc loopne pop mov aad jbe mov mov sbb lcall (bad) pushf aaa fs icebp adc push sbb lahf or into jae mov cmp nop pop (bad) das jb (bad) dec arpl adc adc mov and pop jl jbe inc mov push jge jns (bad) mov leave pusha fiadd jge push dec lock mov xchg inc pushf inc sub dec out out and cmp dec xor icebp or mov aad cmpsl push fwait sbb (bad) into mov sti shrl in mov das mov fsts inc inc out pop (bad) dec adc cmp nop insb xor push jns mov jne xchg xchg aad xchg pusha pop imul jge imul mov mov jb fwait sub push stc outsb adc stc jnp add inc cwtl mov mov and jl mov or mov clc and lret movsb jb jb stc leave mov out das divb xchg stc fcompl adcb arpl pop out xor out and jnp dec (bad) scas daa aaa (bad) pop jle jbe xlat xlat (bad) int3 (bad) mov pop popa loop and xor repz mov mov cli aad sbb push pop push adc mov sbb movsl cltd fsubl mov push fisubrl jae enter or mov imul lret fcompl mov pusha outsl lret lds sub and push mov mov lods movsl lcall mov lcall jae out push jle outsb jecxz or hlt push and xchg outsb cld std jp push mov test jbe popf int3 mov jbe pop pop push mov fistpl leave out jno push loope test mov cld arpl movsl sub ret mov cmp dec push dec repz outsb pop daa mov (bad) xchg pop jbe,pn push xchg inc xor jle sbb push mov movsb jle loopne hlt mov (bad) repz add mov mov negl fmuls sbb sbb ficoml int3 (bad) adc jge dec test dec repnz xor pop aaa stos mov mov mov rcrb inc movb push cmp les std and mov rcrb pop stc sbb dec pop xor dec push popl cmp and lds lock inc xchg jbe sti mov shrb fisubr ja ss add iret xchg and (bad) in cs in movsl imul out int cmp xchg sbb (bad) mov test iret mov inc in dec add inc mov repnz cmp fisub (bad) or nop xchg rolb dec insl jbe out test sub mov movl sbb test pop cld mov stc jno xor (bad) inc cltd int pusha test lods jbe adc mov cmpsb jne pop es es push and and mov and lahf jns pusha xor xchg fst in mov adc adc mov push xor pop push int3 cmp mov aas call mov mov lods lds dec cmp test pop repz xchg int push push inc (bad) inc sbb push std lods loope in jp inc sub fwait sbb int inc andl shrl cmp lcall xor sbb out mov adc add roll stos ja rclb add adc jo adc pop shrl stos adc fdivrs pop cmpsl mov xchg out shrl aas cmp outsl mov shrb cs or cmc sub jnp add (bad) loope jnp leave pop jo arpl mov jecxz and adc add xchg cmpsl out or les (bad) lock ret and push jae repnz mov stos mov pop mov push mov dec push scas lret mov iret pop test enter or pop (bad) aaa push add repnz lods or pop sbb ret push enter cli sti in icebp mov push clc sub in rorb and dec popf jnp xchg lods adc mov repnz pusha pop fmull pop cmp cmp dec and js adcb push mov and mov adc das out dec add repz (bad) outsl adc das rclb inc inc rorb pusha ljmp inc idiv pop movsl mov outsb (bad) mov (bad) xchg inc out addr16 mov sub push inc shrb pop cmp sub sub or aad and cmp icebp cmp arpl jg incl xchg subl into or insl lcall cs xor icebp xchg arpl test xchg dec (bad) dec pop ja loop xlat fnstenv movb aas cmp mov jle je cmp sub (bad) (bad) not xchg lock arpl jbe sbb cmp movsb ljmp arpl jmp out push push loope daa inc das jno (bad) out stos (bad) pop aas loope lahf jo into insb outsl adc push dec mov lods push and fisubl sub sbb add test or lea cmpsb fidivrl inc clc cwtl or in push addr16 aam xor sub cmpsb sbb in repz push cmp fwait (bad) xor or or pop mov lret cwtl and inc addr16 mov es decl loop sbb fnstsw pop dec in rcrb pop leave (bad) cld add xchg sub stos push stos (bad) (bad) mov sub pop lods lock push stos aaa add lahf sub ds dec out mov mov dec mov pop loope aad sub loop outsb leave (bad) lods scas mov add cmp inc out std or repnz mov mov popa inc push or xor decb fwait mov sbb pop lock mov xor and and pop xchg ja mov enter jp jp pop scas add (bad) adc jmp inc xor movsb pushf test bound mull fcomip imul cmpsb scas push pop and dec jecxz push cmp cmpl push cmp jns,pt (bad) mov insb fcoms cmp jb rclb nop add fstps popa xchg rorb scas xchg nop ss push fsubr popf iret lret pop roll lods fldcw aas insl lock xor cli cmp xor addr16 (bad) movl add hlt push outsw xchg pop imul mov clc lret inc fwait xchg lock enter push pop loopne das sbb mov xor inc pop mov jnp xchg pop lods test inc xor lcall (bad) loopne insb mov mov xchg jmp jg fstl popa mov xor fmull adc xchg fimull xchg fistl push test (bad) sbb sbb test arpl mov leave push xchg sbb loop mov jg cmc push scas stc insb mul sub mov lcall lret sbb mov lods addr16 icebp ret call xchg mov and movsl nop ret add stos popf lcall pop outsb xchg aad fstpt leave int imulb mov sub and popa and rcrl out hlt xor popa jg sub and push adc subb ds jg aad add sub ljmp sub test push and andl test in sbb mov adc xor test clc sbb ror lea je std mov dec xchg imul push mov int cmp orb leave movsl iret repz mov cmp jp mov pop xchg sbb pop push lea aam fmuls sbb enter lods bound cmp add cmc push jmp scas add arpl add movsb sbb repnz pop jnp jmp daa fs mov sub sub mov into mov xchg sbb push sarb xchg jl int loopne add add stos xchg dec xlat daa nop aad jbe mov sbb ret push (bad) loope mov cwtl ljmp fwait mov js adc mov inc add (bad) pop sub and test cmpl (bad) pop out and inc mov outsl dec arpl fidiv popf fstl ret mov fnstcw sarb sahf pop sbb jg add and imul ror cmp sub shr cmp dec jb mov mov pop nop push sbb push dec pop popl mov inc repz xchg inc repnz lea jb ja lods leave mov out add jle lcall and cmp adc (bad) jmp loop fstl aad sbb or icebp jmp adc ret std inc xor cmp xor sbb cwtl ret or out ret inc pop xchg pop je repnz adc mov dec sub push shl inc dec or test add pop mov push mov aad mov aam sub fistl inc pop outsb jg push dec push jle jns mov xchg mov outsb enter xchg xor pop lods js inc psubusb push or push adc test jo xor cmpl jno and scas push ss cmp xor leave mov mov pop hlt cmc dec and cld xchg pushf push or jb inc pop mov pop mov imul and in jbe inc pusha insb movb push pop jns mov jmp mov and aas inc pop je jecxz dec push mov aad xchg sbbb inc cmc inc pop mov sub and gs stos push pop repz mov xchg pop jp sbb js aaa mov dec add sti dec dec sbb adc mov (bad) jo daa mov sub dec dec test in xchg pop dec in test in push (bad) lcall push ret sarl pop cmc imul (bad) jo sbb cmp js pop dec jo repz sub popl jle xor jle cmp mov lods mov mov (bad) and loopne inc sbb repz dec jle dec pop daa lock dec andl mov out dec (bad) mov loope cmp fldenv dec xor out xchg les rcr faddl out loope mov fistl pushf js clc and (bad) in packuswb lcall cmp call cmp (bad) lock in inc mov push xchg pop cmp dec shlb mov pop mov stos lods pop pop cli inc jmp cmpsl lret add cmc jbe popa out pop (bad) cs lcall sbb and or shlb clc cmp mov adc dec or mov roll daa dec stc xchg jno test or fidiv jne ret mov (bad) jo mov inc aas mov je xor dec sarb dec ss loop addr16 cmp rcrl add dec je sahf mov lret scas out sub ret rclb sbb fcomps (bad) (bad) cmp mov push dec fidivrl in xchg ret subl cmpsb mov stos push or mov cmp (bad) push xor dec xchg push rcl in (bad) xor mov push jns xor xchg adc sar (bad) nop adc adc dec sub jp inc dec jo mov imul aaa sbb pop cmpsl push loopne mov xchg stos mov push cltd push mov add sub mov ret push gs hlt push adc loope (bad) xchg nop sub push push mov xor inc add sub and lahf adc cmp push or lahf xchg cwtl mov jae push sub lret xchg or shrl divb loopne pusha leave inc jbe xor (bad) adc xchg sub pop mov cmp (bad) jg imul adc sbbl (bad) test dec push or (bad) test xchg into jne movsl mov adc inc fdivrl cmp icebp push notb mull sub sbb add mov outsl and ror mov sbb push jno jnp mov nop jmp add call insl (bad) mov out inc sbb pop lea insl icebp clc mov jbe inc push adc jae or addr16 inc fs cmp enter mov push movsl clc mov push inc sbb jae dec dec adc mov pop pop dec js add jmp loop inc pop xor push mov mov arpl dec pop ljmp pop or out inc imul daa lods test out aam cld sbb popf insl and (bad) or jmp lea in inc mov mov mov fstl std das imul imul pop xchg jmp dec notl (bad) test sbb xchg push mov cmp pop push dec popf das xor or les fsubrl mov rcrl in pop (bad) mov out pop xchg out push mov cld and push add mov notb out dec mov shll mov mov (bad) mov mov lods dec add int3 (bad) and sahf mov pop adc enter push adc jne hlt std ja stos aaa or nop inc pop pop mov icebp inc pop scas xlat jb mov cmp push data16 clc jns inc fcoms sahf mov scas push mov fsubrp cld xchg ljmp arpl mov movsl mov pop ret and inc cmp enter repz sub enter arpl and jmp mov ja lods jo xor xor push insl jmp and out or outsl mov xchg stos jae push lods cmpsb xchg aad adc stos cmp jne xchg outsl cld bound inc xchg and or cmp ucomiss data16 rcr in (bad) mov mov mov sub pop sub enter push push pop pop into mulb rcll imul or xor sbb xchg push mov cld and fidivl mov ja jecxz out repnz stos es or mov enter fdiv into sbb inc and into xor add xor sti daa push ljmp dec mov pop (bad) jl dec cwtl dec daa nop leave fcmovnbe and xor out (bad) fcomps sbbl (bad) sub cmp bound add xchg sub inc aas cmpsl and xor ret mov sbb jbe xchg dec enter or cwtl cmc cmp mov lret or cli mov adc jb add sbb and xchg jnp cltd sub lock pop cmp jecxz cltd pop je dec mov int3 adc xor push xor mov adc or mov fiadd test push cld incl aam sarl pop cmpsb loope leave test mov xchg sahf xchg jp daa imulb jno sbb inc decl xchg adc adc push adcl pushf jmp xchg arpl into push mov icebp shlb jmp (bad) imul xchg adc inc rcl push js mov xlat (bad) and push lcall xor lock not mov pop or stc push ficom cmp push inc popf fsubrl sbb mov adc mov mov pop mov sbb inc aas roll ljmp inc ljmp loope (bad) dec repz lods (bad) int3 fldt in insl lret test pushf (bad) jl and aas mov into (bad) lahf cs call xchg push aas mov add dec cmp test test jl jne inc (bad) lret adc cs arpl xchg scas std int cmp bound and xchg inc imul movsl pop rolb dec cmp cmc aad adc incb push mov push push add mov mov pop inc push sbb sub lods and or mov and pop out sbb sarb arpl inc int3 xchg or push lcall pushf mov lea std subl dec leave mov push loope,pt add and andl dec push mov sub mov pop sub and shrl andl jo adc dec pop and pop pop push mov dec loope add mov cli sbb je sub mov imul (bad) ss pushf pop arpl jle and mov mov push add push fidiv loop data16 in das out add xchg adc addl and xchg xchg and jmp cmp cld adc mov sub pop in jp in test jbe jno xchg stos loop xchg aaa (bad) push mov outsl xchg xor (bad) aam enter cmp cltd adc inc sbb pop jg aas les and lds cmp or shll hlt enter lret fimul or jne add and ret xchg lea iret jbe lret and xchg lretw add ss push cli in loopne push repz pop cmpsl icebp cmpsb scas stc mov call pop mov enter adc inc insl mov (bad) out xchg jmp fidivrl int3 in addr16 xchg mov test subb mov out jns dec out lds mov fwait inc pusha cwtl jle andl mov push jb aam inc icebp jae pop sub mov repnz cmp int3 repnz repnz push mov andl dec add lret pop mov ret pop testb or xchg mov rcrb add xchg nop test cwtl aaa mov inc sub adc or (bad) pop in scas (bad) dec dec call push jmp and mov push inc or divl cmp xchg jbe pop pushf inc cmc lahf in cmp cli mov loope ds push dec stc stos int3 pusha loopne (bad) test or mov cltd add (bad) sub negl sub adc stos dec or jns mov in arpl jae push cmp shrl (bad) jno mov and dec inc sub frstor fdivrl mov leave ret negl dec push mov dec push (bad) sub arpl in movl pop (bad) mov dec out fildl cli mulb out pop test stos fmulp fisubrl stos lret fcomps adc testl mov stos arpl mov mov mov roll or xchg push xchg popa repnz pop cs bound xchg add push (bad) jmp lds mov add xor dec jmp xchg jno and or lods pop mov hlt das cmp shrl dec (bad) call in imul add mov imul fimull mov in loope adc xor pushl jne jecxz or imul inc and xor stc xor sub xchg ds sbb adc lds sub inc mov cld lods movsb insb data16 xor ret jbe push ja jnp mov jns mov andb (bad) stos mov les dec mov andl jno adc (bad) mov imul in xor (bad) jo mov lea jecxz gs (bad) push sub scas (bad) scas pop xchg popa push leave and aaa dec mov push mov std int3 shlb xor jno sub adc stc or aam idivb sub cmp mov mov sbb fcoml dec test movsl popf mov cwtl loopne leave ss arpl mov inc inc mov xchg out loop arpl testl mov jne adc push cmpl push test loope rolb push or dec mov (bad) dec lds jl cmp or sub add (bad) idivb call popa stos dec js adc jp movsb xor push jns scas arpl mov (bad) scas mov stos push pop ss and daa pusha (bad) mov xchg adc rolb mov pop sbb mov mov fsub pusha cmpsl dec imull mov bound sub fwait dec neg mov fistp inc popa mov xor cli (bad) (bad) fldenv mov adc and jbe pop movsl lcall iret (bad) pop adc mov (bad) mov ljmp (bad) cmp or jl in dec out ljmp imul sbb into retw pop sbb ds inc sbb jae loope push imul push popf sar cmp dec push mov cmpsl jns or sub mov mov dec (bad) iret lds sti cmp cld pusha mov mov or xchg gs and (bad) popf imul push repz xchg shll or test movsb sarb xchg in sub pop (bad) out adc add mov mov add cld shrl mov push mov fs push xchg stc xlat clc dec leave jbe pop and int3 cwtl cmp and sbb daa jb pop nop push scas mov sbb pusha cmpl jle repnz call jmp mov in pop dec scas mov sub mov (bad) gs pop les cmp cli sbb sbb leave out fs test xlat in jge inc cwtl xchg push xchg sbb addr16 xchg and rclb pop outsb mov insb insb xor push subl mov stos mov daa sub xor mov inc daa cmpsl scas mov or hlt repz movsl not mov sub add out jg mov and jne test jl mov mov adc divl jbe into or jne jno and arpl pushf xchg test adc stos out sbbl test stos and cltd cmp xchg pop xchg jl cltd cmp movl daa xor fisub cmp hlt inc add arpl iret dec out cmp mov lock (bad) cmpsl xchg addr16 inc aam nop iret popa or cli mov fdivrp cltd scas cmp xor fcomi dec fisubrl dec adc mov and mov mov fs mov mov xor xorl dec mov cmp sub js inc aad cmp dec insl dec bnd push (bad) lock in or test das push jecxz xor sbb pop popl and in cld mov inc lcall sub pop cmp mov lahf or adc sub pop jo je ljmp adc rcrl xchg pushl xlat std xchg fildll xor mov movsl inc xchg cld cli imul sbb push inc std (bad) decb inc fimul (bad) nop cmp dec js or psubq leave mov lret xchg or (bad) shrl cwtl outsl shlb push test lret mov repnz push nop and dec fiaddl js loope ss mov test jmp sbb dec pop in adc or xchg add pop add decb fnsave push and fistpll ds sub aaa cmp dec jp adc in and mov xchg cmp adcb mov cmp std dec (bad) ss decb ja mov pop push cmpsb aad mov in (bad) fwait lods add enter xorl pop lcall aam cmp push mov leave jnp inc (bad) cmpsb mov mov ud2 ss xor aaa leave dec clc and shrl pop jb loop or test jnp inc jecxz and xchg in dec clc inc daa mov mov xlat ja xor fsubr sti das rcll inc sahf imul inc lahf insl cmp jne repz inc mov xor mov mov stos cmp sub pop jecxz dec adc mov inc stos mov adc subb add fistl daa aas sbb cmp rol mov jg dec loopne sub adc lods pushf cmp sbb test outsl xchg or fist out in (bad) push push out out mov jnp add dec (bad) (bad) cltd retw jbe fcoml mov ret fisttpll jp fcomi stos ds hlt or push ss or inc loope cwtl addr16 xor or add (bad) aad (bad) cmc int3 xor jns mov mov sbb andl fisttpll inc inc lcall aas fadds aas cld lods sub ret push jns or cmpsb inc iret cmpsl lcall jg aaa scas xchg leave pop and lock in xchg jo pop movsl notl dec pop push inc xchg adc mov sub xchg push jae iret out insl and (bad) lock push cli insl sahf movsb xor (bad) pop inc rorb ds dec lret data16 les pushf mov sbb in cmp pop mov int mov in pop lcall push cmp out jbe pop push jle push ret xchg (bad) out repz movsb sbb outsl inc jg pop arpl mov push adc cltd xlat fstps in cltd adc stos dec mov sub jbe fisubl out mov (bad) (bad) mov enter int mov mov dec mov scas adc cmp adc (bad) jb je pushf popl es and sbb stos xchg hlt les outsl add into ficompl push xchg outsl ja mov push leave mov jbe icebp pop mov sti shl stc push (bad) repz sti xlat adc lcall (bad) mov xchg shlb mov xchg out bnd in decl ds mov mov pop fcompl mov mov (bad) pop inc ja add mov mov cmp jb dec test adc mov (bad) insb cmp out jnp push push sbb sub aad dec inc jl sub test push das xor adc dec movsl aad (bad) jne sarb shll aaa xor sbb rorb mov add cmp imul xchg outsb cs push (bad) jg out into or pushf js daa std js stos dec test add ja dec inc cmc out jae call fsubl clc xchg push loope sbb push icebp lcall pop repnz xchg push push add dec insl cmp cwtl pop pushl ss (bad) jnp xchg dec cmp ja cltd cltd or cmpsb das leave or cmp jb (bad) dec sar xor mov dec jecxz or pop inc (bad) mov cmp sub or cld dec aam mov decb cmp jmp enter mov out pop xchg loopne insl popl inc adc pushf mov fsubl stos push xor int3 xlat xor sbb mov (bad) je fisttp push sti mov push dec xor dec xchg mov (bad) push xor dec icebp jb xor iret outsb add push rcl mov pop add push xchg fidiv jbe lahf repz mov adc adc mov cwtl dec lret leave enter movb mov sbb (bad) lea sbb lahf dec xchg sbb es add outsb in leave xchg enter ss pop mov in or or cmpsl int3 push pop and xchg hlt pushf add lods adc sub test ret insl call xlat into lcall int retw mov mov pop adcl adc xchg aaa pop jb fdiv push mov leave cmpl cmpsb and jmp adc mov ficoml lock cs aas pop fcoms push add (bad) repz sbb mov add sbb fwait mov jge outsl fstps or insb mov pop inc cmpsl push (bad) jae mov push and and in or pop sbb inc std imul cmp sub or add jmp popl aam mov addl pusha pop push ja nop mov push stos inc out or jecxz jns inc in mov pop mov cmpsl (bad) std or adc sbbl sub (bad) adc notb jno or repnz sbb in scas cmp xor repz cmp add outsb sahf xchg (bad) sub cmp insb (bad) sti test nop outsl jae enter mov xchg imul (bad) jae cmc xchg mov pop clc mov (bad) leave pop cltd mull sti mov xchg cmpb mov push hlt icebp into mov sbb pop cmp push cmpsl (bad) jb repz inc fistpll shr into out test movsb stos outsl imul je xchg test cmp or add add sbb fwait mov clc pop adc out xor gs push and cmpsl sub push rolb ss rcl mov lds je mov adc jnp test mov and sbb dec cmp je jno imul add fcmovnu or mov sbb fbstp jmp pop add out fwait (bad) mov out insb mov pop mov adc jg pop push push sub add mov (bad) in pop sbb pop (bad) sub xchg (bad) ss jge jmp cmp iret data16 sbb push imul xchg sub pushf or cmp mov popa mov and mov mov xchg (bad) js pop cmp xchg or sub sbb clc sub push test rorl sbb dec mov in rcrb mov test pushf mov sbb sbb seta inc movsl lret push cwtl clc mov pop ja jge sub xor mov push fmull aad mov and test ret cwtl push movsb lahf (bad) movsl xor ret mov scas std pop push xor aad add sahf dec xor cld scas and or mov pop mov ljmp stc adc cmc lea enter (bad) call xor aad mov cli xor jne mov pop mov add lock dec adc xor out or out repz fldenv pop xchg xchg outsl jmp std inc xor pushf pusha mov push les xor jp and popf lea adc add (bad) repz aad mov xor pop cwtl ret aam movsb repz in pop out in loope mov pop add pushf cltd sahf lods test dec nop gs in imul push pop lahf aad shll inc dec ljmp xchg mov sbb sarb mov test ja aam fldcw add nop lods out nop lcall mov or fiadd push jae lds adc fistpll jg xchg mov mov xchg sub pop sbb shlb in shl ljmp jne and mov lea mov sbb je mov je adcb mov dec dec gs xor dec ret xor clc add mov jp dec test arpl xchg stc or mov xchg xor xor and push xchg fdivl js jo jnp mov mov cltd jns (bad) repnz aas das int3 or scas cmp addr16 fistp adc jns fadds xchg insl leave cmp (bad) sahf mov lods and test and jp push or mov bound jnp mov enter lea inc lds iret and in mov mov xchg cmp cmpsb scas (bad) jmp rep jl push xor dec dec repnz loope es dec test pop mov loopne xor sbb loop jg (bad) jle lret outsl sbb push aam nop pop add push lods jo ljmp (bad) push push mov orl imul ss sbb and sub lods inc paddsb int and cmp push sbb jne mov out call inc xchg push add ret mov mov mov mov (bad) outsb bound adc push or loope lock inc scas mov push inc iret test mov fisubr rclb je insl push mov cli adc rcrb lahf mull leave cmp jecxz fisttpll inc shr repnz or lea sub das (bad) inc dec es xchg testb cs jae jmp lret stos jl int int jge dec sbb scas orl adc mov fsub mov lock lods add inc stos mov or test add xor dec sbb mov xor xchg or lcall xor xor dec jne in adc jmp or lcall pop lahf pop xchg cmp imul mov push sub push add pop mov push ss add enter cs out sub mov (bad) aam pop sbb orb adc add sub push xor dec or hlt jl lahf scas fstl xor stos mov fnstsw into jp cmp adc cmp out add imul push outsb lahf sub inc cwtl inc inc (bad) xchg rol repz gs mov std in insl bound iret movsb mov pop jge xchg jno jo out add sbb fwait lock xchg inc popa xchg gs add inc jmp aam inc adc (bad) sub xor lds out dec mov jbe lahf add shlb ja xchg pop test std nop (bad) stos xchg push add (bad) sub in or xchg and jle bound dec sti jae sbb mov sbb adc roll pop push out shrb or sar xor mov cmp dec jl mov jne and les jno pusha ret arpl dec xchg jmp add mov mov into pop pop cmp wrpkru cmc outsb int3 xchg mov mov xchg xor add mov jecxz and iret test mov adc aas cmp mov lods mov mov xchg (bad) lcall and js hlt fwait lret jns sub cmp (bad) and dec cwtl pop inc (bad) cmp stc xchg stos stos (bad) pop lcall movsb xor jbe sub adc and mov adc aaa decb lahf mov (bad) ret adc xchg (bad) (bad) leave repnz mov stos jno add push mov sbb jne cwtl aas ja inc lret sub (bad) je call push push repnz sbb arpl (bad) jecxz cmpl dec lcall mov sub andl pop pop (bad) je mov fadd daa and in xor insl mov ja mov int3 hlt jno nop jle push and and or popf scas lds xor stos fmul sub repz jne arpl andl push test scas rorl ljmp into icebp pop jbe shll sti cmpsb push cmp lock jns cwtl add iret daa scas pushf push push mov negb jle test jmp cmp sbb pusha call (bad) ljmp xchg xor add (bad) fimull mov addl xor test nop push sub addr16 dec mov pop out dec sbbb das adc sub xchg adc in jl mov cmp inc mov mov mov sbb test dec aas in (bad) jle pop scas xchg push xchg clc rolb loope pop lcall (bad) pop mov inc leave daa pcmpgtd in out hlt or mov and ret std inc sahf popa clc (bad) vmovaps add inc fsubs push (bad) fbstp mov mov jnp flds add outsl mov jecxz xchg mov insb fisub orl in dec or dec out lods xchg arpl adc (bad) loopne clc sbb jg mov out cmp or lcall sti cltd adc jmp sub fcom push pop dec adc mov fcom lods xchg test pop push rcrl xchg cld mov arpl (bad) cld jae sub mov xor mov xchg ret fsubrs out xchg pushf and mov xor mov in fs imul (bad) adc jl bound jge add out xchg dec incb push addr16 repnz inc out add and mov ja mov ret xor repnz out mov les push jb cmpb es jo xchg fcomps mov jg enter xchg rorb sbb adc lods hlt push (bad) scas out jecxz stos push xchg xlat sbb mov pop and push add imul sub pop pop add jbe add push jmp mov push movb jmp push push lea call push mov call rol das mov ror pusha sub jmp push call lea call pushf jmp push pushf lea ja or add sub test lea add bts add mov rcr mov shl shl mov jmp test push pushf movb lea je call fisttpl in pop add or das test gs int or fstps ja or and fsubrs adc movsb aaa push fnstenv mov aas testb dec mov cltd pop xchg mov dec iret test add outsl hlt mov jbe (bad) loopne iret dec or dec cli dec cmc lret and stos lret pop into jle or mov jae xorl sahf (bad) xor das mov xchg lret fisttpl push sahf sbb and sbb mov nop lahf int3 cmpsl jae and jle movl pushf pushf mov push movl pushl push lea jmp stc test sub push call (bad) xor int3 pop add push add lcall xchg sub xchg imul cmc flds fsubs xchg adc or push adc lods jbe fs or inc fnop push outsb roll cmpsl push sbb xchg repz shr xchg jno jno inc (bad) imul cltd mov jnp push les dec (bad) mov xor das shrb push leave js xor lret int3 lret cmp pushf lea je xadd cmc sete pushf mov not add bswap sbb adc dec mov pushl jmp movb push lea je cmp jmp pusha call push sbb jmp lea jb bt das lea cmp mov mov push push lea jb bsr shr shrd bt mov bt test call setns not lods bt xor bt bt call sub bt cmp pushf lea ja stc bt call push lea call call sub call xchg mov inc leave mov fstl mov in push aam out inc mov push std repz jbe dec and loop inc and mov lret lcall jp mov call in jle test add fidivrl push inc in lds sbb loop jne mov popl jle jbe xchg movsb outsl ss sbb dec (bad) mov dec es out sbb (bad) pusha out sub xor outsb loope sub or leave fistp jg incb movsl shrl add fnstenv rorb add add mov add lea call jmp ja cmp inc shl sub sub lea add dec mov adc rol mov stc pusha pusha cmc repnz jmp pop xlat or std adc repz mov xchg insb sub sub and pop in add call test add jae inc mov mov stos xchg or push inc iret divb cmp jmp cli ror pop scas mov mov or add rorb int3 int dec cmp push add test fistp pop cs sbb out push insl movsb inc jecxz sahf mov packssdw inc sahf dec sbb (bad) xchg addr16 out ret dec cmc inc notb cmp cmc push add add pop jo test out xchg xor cmp test ljmp jecxz jg cmp inc movsb (bad) (bad) jge mov (bad) and lret arpl popf xchg lret cld xchg push sub cmpsl (bad) stos dec lret (bad) daa cmpsl arpl mov (bad) pop cs inc movl das xchg sub and xor fsubl das lock mov mov fwait mov push rcrb sti sbb xor or push rcrl cmpsb les cmp adc mov xor mov data16 inc mov pop lcall mov pop jl lock rclb inc xor imul push (bad) out popa js (bad) cmp std ds movsl add pop shl jae mov or or adc mov ss mov sarl or mov or imul addr16 jle insl test or jbe lret add mov xchg jp in lahf pop repz lret push scas pushf sub jmp ret adc out inc mov lock jno (bad) subl pop mov dec arpl and sbb dec sub mov cs incb addl cmp and clc sahf leave inc enter push enter push hlt mov test mov inc xchg (bad) jg xor (bad) icebp lea sub mov add pop sub push out cmp insb ror mov hlt ret not pop jecxz push lcall stc mov sbb jl sub (bad) mov push icebp cmp popa add xchg mov xchg adc adc sbb (bad) jle (bad) jmp jo sbb inc mov jp jp shrb adc mov inc dec in push cwtl negb fcoms stc adc ret lods out dec lea ss idivb xchg cs scas mov imul enter push fucomp jmp push jmp add and data16 ret clc out (bad) hlt adc adc mulb cmpl call jecxz push insb sahf and mov lods cmp push (bad) xor (bad) sbb dec jmp cmp gs pop mov (bad) inc movsl add jb ret add inc rorl and adc jmp ja sbb push push fdivl pop dec ret inc sbb jmp cmpb (bad) mov dec cmpsb inc lods pop and shrl cmc std addb ljmp loope mov mov cmp inc mov fistpl or inc push sti push jg cmp push sahf fwait sbb inc inc das sti cmp movsl fwait sbb inc lret sbb jae ret pop shlb icebp inc add movsl (bad) sahf mov into loopne mov in add mov (bad) lea shll (bad) jb mov push and lret popa fistl imul dec sti fwait inc xchg fimull arpl outsl in xchg or lock test data16 jne test inc iret jl std ffree fs into pusha or cli or ljmp ja push inc data16 inc cmp mov cltd hlt cs pop jno push mov or bound ljmp jbe popa sbb sti push inc mov mov cmp fsub add mov bound out addr16 cli xchg fs jno push jnp test mov adcl or mov cld lods sbb lcall pop (bad) into scas jg (bad) int3 popa (bad) jge push fdivs dec mov lea popf jbe jg pop sub xchg mov (bad) in cmp test add fsubrl mov into jns add mov cmp dec aam lcall or fs faddl rorl inc pop xor (bad) call push xchg push gs lds inc push sbb jle es jle addr16 scas mov xchg insl or cmpsl lcall mull inc sbb aaa xor aaa imul aam dec scas push xor adc stos dec int (bad) std mov sub negl lds fs cmp ja and mov hlt cltd push aad jbe dec mov cltd sarl mov ret dec xchg outsl fnsave mov push imul js ss pop mov pop mov add pop (bad) jle,pt or out lret jbe movsl repz test cmp dec or cmp fistl mov add pushf mov not pusha bswap movsbw mov pushl bswap pushf call mov jb popa add or (bad) xor ss adc jbe out lcall mov in leave pop push mov std jbe loop lea bnd dec and xor into pop mov mov pop sub xchg mov or lods test (bad) pop out xor and in pop movsl negl nop sub sbb lea jp push stc mov and jns xor mov lock test nop pop lahf adc inc push clc add adc mov lret popf jb inc xor and fwait sbb icebp in shrb pop vorps add lock pop sar pop rcl sar inc pop dec add jmp lea movb jmp push pusha movb mov movb pusha movl lea jmp cwtl push cmp bound inc ja mov loope push lret icebp jo stos cld push mov ror sbb lret jno imul jno push mov je rcrb sahf movsb ret outsb mov data16 in or mov imul xchg xlat (bad) or and imul mov add stos (bad) mov fsubp test or cltd add int3 aaa xchg cmp ljmp imul cmp add ret jno out sbb and (bad) inc shrb pushw jbe outsb sbb and mov inc jecxz (bad) cmp dec add pcmpgtd sub into fwait in dec test roll xchg pop inc call addr16 lret movw mov pushl popl pushf mov mov pushl ret xchg mov xor inc es lods std sbb jmp mov xchg xchg out pop fldt pop movsl mov adcl cmp (bad) (bad) adc loop daa mov dec (bad) mov lret (bad) xlat mov in push jnp xor jb pop lahf dec jb or pop cltd in lahf loopne cwtl jb add xor dec into sub movzbl test loopne movsb jmp sbb lods pop jmp repz rorl sbb mov rcll adc lea pusha call bt stc pushf cmp pusha sbb cmc call push add xchg js xor je data16 imulb xchg mov bound lock rep out int movsb add jae mov enter sbb cmp cmp ret add and or lahf outsl inc push fisubrl movsb jle sbb fsubrs pop shrb adc xchg inc mov iret jae out jle xlat push inc insl xchg xchg gs inc stos jae push fs and popa xor and cmpsl (bad) lock outsb rorl fnsave sahf divb push (bad) xor mov and dec jb push shll jp pop mov add cmc cmp xor call clc cmc clc stc sub setbe bswap cwtl call cmc sub cmp stc stc pushf cmp jmp push cmp ss add jmp cmc notl fwait xchg in lds int cmc xchg jl out pop pop jno xchg pop or fldenv push loope test lods or es repnz addr16 daa jns pop inc ljmp dec add fsts xor cs jl rolb fcomps fisttp and cmp add es push mov aad push sbb cmc data16 add mov push test sbb inc gs inc mov mov (bad) (bad) jno xchg or fbstp pusha and fistl (bad) and sub dec cmp popa (bad) xor arpl int inc push scas push ss jle sub sub test ljmp jbe (bad) jo sbb stc jmp sub push in jae inc andl mov mov outsb int add loope les cltd sub lock (bad) leave pushl jae fstps mov aad mov jmp imul pop fwait mov lret fnstenv pop cmpsb movsb les aad cwtl cmp jo jecxz inc bound jo arpl scas inc pop dec pushf mov lea inc enter icebp loope ret aas push jne inc adc xor pop pop jns or cmpsl pusha pop mov call jae mov lret push shrl les js hlt shll xorb fisub mov (bad) test mov sahf sbb fnsave dec ret enter add xchg nop lahf fwait pop outsl scas sub xlat xchg pop jnp dec cmpl icebp mov jle or int lret sbb jnp or push lret dec lods rorl (bad) or test sti pop leave add xor pop or std or imul fsub addr16 fidiv xchg (bad) xor sub pushl push subl adc nop (bad) mov out out xchg mov dec (bad) movq xchg push insb loop (bad) adc (bad) pop xor bound pop and movsl add popa jmp cmc pop mov xchg leave sub or aad lahf push mov out mov ds xchg fisubrl xor aam sbb imul lret (bad) sbb (bad) sbb mov mov repz xor cmp pop and mov in aam call mov lret inc in push mov je and sub pusha adc lea je pusha lea jae xadd stc movzbw pop pushf rcl call dec jne jnp add fildll psubd nop lock sub jmp loop sarb lods in pushf popa or jae popa popf addl adc dec xlat (bad) and insl xchg pop sti imul mov das pop (bad) fcoml sub test or ja (bad) shl jne inc jns or pop mov inc sbb mull test add mov out mov inc cmp push add movb mov pusha lea jb btr (bad) hlt inc btc cmp push mov pushf pushl lea jg pusha lea jb shld ror rcl rol mov call jne pushf movb not mov lea mov push call (bad) jp xchg push inc leave jb cwtl jle sub insb cmp mov sbb mov leave mov add int3 fidivl sub push test lods insl jmp pop xchg push mov clc or and cwtl hlt lock and sub xor enter adc sbb pop aam sub jno cs popf test mov xchg test sbb adc ss repnz sub push ja push (bad) in jno pushf xchg movsb push mov xor adc pushf sub xor ja scas (bad) dec or sub or dec aam push inc pop movsl jmp mov cmpsl cmpsl lds imul and cmp xbegin xchg test or lods inc rcr push or jo sar inc sub int repnz aas stos and cmc in and cmp ds xor sti or movsb add add push inc das mov cld push mov inc or or mov xchg test jns das sarl insb mov mov pushf inc add mov mov and fs loop fisubrl xor pusha sti adc cld cwtl mov cmp mov adc mov add jno fs je call mov setno xor sbb mov shrd btc mov data16 repnz shld rol mov bts shl call js and imul cmpsl int3 ds fs and cmpsb js (bad) fisttpll cmp sub or xchg leave cmp and jg loop ficom ljmp cwtl test fisubrl sub fldcw aaa popa adc (bad) sub aam add jae cli je xchg cmovge aas iret je es push jmp mull push pop test xchg ds dec mov cwtl insl push adc movsl sbb les mov ljmp mov xchg pop inc jl rclb cmp mov mov out xchg inc pusha lds outsb stos ret or jo add adc (bad) jmp or clc sub bt xor cmp test cmp bt add clc stc jmp fstps ljmp sti jae dec xor cmpsl pop and sbb divb ds pop movsb repz mul add movb gs les and fcoms push fstps adc sarb jae nop in scas mov imul mov imul cmp push sbb hlt jns add mov ret jge mov mov push mov push fnstsw es or or jnp dec popa jae lea inc stc fisttpl movsb xor dec mov add les add pop or jne inc cli add (bad) out outsl mov and lods mov pusha or mov es jmp loop cli pop mov fildl imul lock push stos or lods cmp mov rcll dec pop icebp stos inc ja pop stc add pop mov sbb jnp lcall mov flds xchg fldenv ljmp pop adc pusha repz push sub testb out (bad) rolb sub xor out inc push sti jle dec xlat (bad) fidivl inc das inc out sub xor cmpsb cmp mul jns aaa (bad) mov inc and jmp in divl add sub dec dec fiadd ficomp jo (bad) int inc cmp xchg clc push mov xorl test add mov or clc es movsb lea in (bad) in fldt pop mov sub mov call out fadd je pop std loope test out pop pop xchg xor popa jge mov call mov jecxz mov ss or rcl pop pop push aaa mov and mov mov clc mov cmc bt pushf cmp call push pusha lea jne rcl bsf (bad) icebp neg mov bswap mov pushf sub shld lea bt sub cmp cmp stc pushl popl clc clc clc jmp mov lea jb cmc cmp not pusha movzbw pusha mov call mov call mov shl mov btc cmp mov shrd movzbw btc sub shr and rcl mov sub and btc lahf clc mov bt btc cmc movzbw sub not and aaa shl mov cmp shl push mov add lea jno lea push jmp mov lea jb mov xchg setnp pop setne jmp lea call pusha lea jb pusha movzbl stc clc xor neg shr pop not imul bsf not btr lea jmp call neg shr dec stc mov test inc btr add not bsr shl add sub inc or (bad) repz cmc push pusha shr clc cmp pushf pushf lea jo je push cmp cmp pusha pushf mov lea je jmp pushf lea jb pusha stc cmp push lea jae pusha mov or add lea or mov sar call mov add add cmp add add add add add add (bad) or add add add add lods xor add add add loopne add add add add add add popa mov add jae add sub lcall add add setp mov pusha not call lea jmp lea call loope ret add mov add push lcall ficompl jle,pn inc or test jg ja fsts (bad) jbe popa mov xor cltd push jmp inc sub es adc jmp hlt hlt xor jge mov jl dec dec adc mov (bad) test lcall rol mov imul frstor loope jns fiadd xchg jge (bad) (bad) push fnstenv es mov push loope xor cwtl pop add pop stos scas mov and xor ficom jno fadds lods aaa jle aad clc pop bt and pop setg jmp nop aam les inc rcrb jge inc xlat xor add ror fwait loopne aad mov cltd pop pop xor out pop xchg inc aas (bad) xchg ret daa das pop dec aas mov rorl mov xchg inc rcl inc dec xchg rcrb sub lret sub add dec push jnp sbb fisub jnp add mov out imul mov pop je rorb into xchg mov add or push (bad) cs enter mov movsb adc inc (bad) jns movsb or jo adcl sub ret jb sahf cmc pop (bad) sbb mov add mov test adc ret enter inc mov and lea jae pusha pushf push lea jmp (bad) inc xchg pop jae inc xchg or jle lret insb sarb mov lock aam cs fstl lock push aaa fmulp mov lods sub int lea pop je push mov mov push xchg mov jo push push out fdivrs sub xor mov stc enter xchg xchg sti jo popa xchg cmp mov xor sbb push aas and jae pop lcall xchg int push pusha push fisubrl test ja dec jae sarb mov mov in lcall (bad) cmp out and pop dec leave jmp xchg push sub mov mov test dec negb ret sub fildl xor sub inc stos xor sbb pop mov int3 fcompl fdivrs (bad) sbb loopne adc adc pop dec inc mov (bad) mov lds aas push mov push push out push repz xor mov les xor bound lock pop shll ja jp daa pop pop arpl pop push dec lock outsl mov roll mov cmpl insb jmp lods jo pop stos and pop xorb popa stos adcb fidiv xor pusha jmp sahf insb xchg inc jl inc sbb pushf mov out movsb int3 pop cwtl ds (bad) in popf mov repz out daa inc fldcw mov xchg ret jp mov out add das (bad) mov ss jne int cwtl popa movb xor inc add sbb cld addr16 inc fwait les mov jge (bad) xor mov pop mov and aas mov (bad) mov jae mov pop jo out inc aad sbb sub dec stc sbb test ret adc daa inc mov (bad) fldl adc adcb mov subb int3 push xchg adc inc push xchg lea jb bt pusha pusha bt cmpb movb pushf lea jne shrd cmp xor mov call jmp lea call jg rol add mov bsf sar push mov call cmc cmp pushf pushf jmp add dec outsl arpl inc jb add and jmp pusha jmp lea jb clc btc mov call imul jo fs insb add shr cmp add lea je push cmp pusha lea je push pushf mov cmp pusha pushl mov movw lea je pusha pushf lea jmp lea jbe shr sub sub shr mov movsbw adc stc seta add sub sbb sub mov ror add sub rcl lea bsr movl ror mov push cmp movw lea jbe bswap add or sub and cmp pushf sbb mov sub dec stc lea mov mov btr push clc add btr ror rcl bsr shr and sbb mov clc pusha add lea movzbw pushf not mov lea pusha call sub jmp sub pusha jmp jmp dec pushl pushf call xor pop jg inc dec and xor mov scas (bad) mov or cmpsb xchg jp sbb inc aad int3 stos aad fistpl std xor xor cmp fisubr add dec add and mov cld pop cmpl sbb mov fisubl dec loop dec add aam in js inc jnp xor rclb pop mov loopne sahf mov into mov mov push ret test adc sub or fs ret xchg imul jae test adc jge and cmp inc test xor pop and mov scas leave sahf adc mov pop ljmp insb ret dec adc mov les mov sahf sbb inc xchg jns sub and std push jo add jns sub (bad) out jmp inc cli dec mov out (bad) dec stos and sti ss add movb push lea jmp push lock std std xchg xchg arpl mov ret jnp xchg jbe leave iret (bad) popa rcrl fdivs xor pop out dec lea stc in cwtl dec inc andb mov mov sub fisub add inc inc (bad) jecxz xchg push jbe push push or or into sbb jmp push rorl call lea jl pop pusha xchg mov not not lea not mov lea jo movsbw bswap pusha mov push push movb mov push lea mov pushf push pushf pushl ret cmpsl imul jns inc push (bad) aas and xchg xlat cmpsl mov iret push mov (bad) add add jns cltd xlat icebp ror repz pop stos or inc mov add shll inc sub test fadd and add adc out and ss iret mov jmp test adcb (bad) (bad) sarl xchg (bad) cmp clc ja out imul jp inc pop mov mov in mov push es lcall (bad) sarl out sub test lock loopne lock add mov stos mov divb out movd (bad) jbe movsb stc add adc out fisttpll js out xchg cli dec inc mov stos rorb stc loop mov outsb ss push jb popf cmpsl adc fldl or inc xchg pop int outsb or ret sahf das push les test xchg test popa lea xor into jge lcall cmp and test add xlat leave repz mov and or fildll iret push popf pop mov inc aam aas fbstp cmpl jmp push pop sbb mov sbb pop (bad) mov cmp fs inc xchg sahf movsb in inc lahf not sti adc add faddl fsubr xlat sbb cmp and mov add stc lods aaa mov xlat add ret cmp loop pop inc inc sti nop push mov mov fcoms insb ljmp repz (bad) adc sub push mov std sbb mov sub adc stos mov push and rol cmp push aaa inc mov shrl adc inc dec stos shll lcall sub cmp adc rorb int3 jns cmp out aam mov fcoml sbb out fnstenv push popl mov sti daa dec shll into inc mov pop pop push movsb jge mov cmpsb and daa push sbb (bad) in inc in es outsb (bad) jne lcall push test cmpsl jo out (bad) pushf addr16 aam adc test inc dec push inc arpl xchg loop lret pop xchg in fsubrl call xor movsl and test dec fs dec data16 dec outsl mov add jae adc in mov pop outsl movsl aad lret xor mov fucomip or and repz roll or adc or fcoms mov jno or xlat out pop dec and push sub pushf or nop inc addl fucomip pop xor jmp (bad) jae jnp mov fnsave mov cmpsl sar dec sbbb sti outsb aad fidivrl sbb cmp inc mov jae out mov fs jne pushf lea je pushf mov call push jmp push pop mov pusha push push xchg pushl lea jl push push xchg mov pushf mov pusha lea movb jmp call clc imul clc add jl cmc cmp add push lea jmp push push inc push xor cs insb add aam push add inc cmp call out fsubrl in aam into jl add and dec loope test push hlt inc into cmpsl mov and notb mov sbb (bad) in lret or xchg pop lds jno in mov iret aas mov fist or ret xchg mov in lods pop adc and aad xbegin inc rorl scas jb sahf xchg ljmp sarl sub mov mov mov lods aaa adc lahf cmc inc mov cmp xchg inc add add cltd add sub inc int or mov loopne enter mov xor test ss sub in insb insl mov dec loope stc xchg xchg bound std notb mov imul xor xchg fbld mov (bad) pop imul ljmp cltd ret out (bad) notb push mov xchg cmpsl pop mov lock out and sbb jecxz adc in push or jns,pn outsl mov popf mov pop push test jle (bad) lcall inc and add mov pushf lea jmp and jb xchg inc clc xchg dec daa adc adc add (bad) cmp stos cmpsl cmp push pop test stos (bad) and or fcompl sbb xor loopne sbb mov or xchg imul push inc les dec outsl add xchg push and call add movswl inc pop pop push or in jb fs jecxz pop mov jle xor scas das fildl mov xchg push int inc lock (bad) jb push inc enter insb xor push or sbb loop mov xor scas dec call stos mov and sub test mov es lcall dec ss inc test test jg and xor and call call push xchg imul movsb stos insb xor mov inc dec push sbb out sar ret dec and outsb movsb sbb and test flds xchg jp push pushf lods xorl inc lret mov mov and jge sbb in repz push pushf mov xlat outsb outsb mov or pop jne cmc inc (bad) adc adc push mov push lock cmpsl ficom mov push cmp (bad) mov das mov jns and push negb pop clc mov sbb clc ljmp pop pop insb ret dec hlt dec cltd pop scas jnp add lahf lds mov xchg jns std push mov xlat das lahf jae and push dec pop jnp mov adc adc cli push es mov dec in sbb sub mov loop sbb dec in dec pop mov (bad) es (bad) xor ja push jb das xlat sub aam lods xor leave jecxz mov mov hlt ret cwtl jns jl mov test adc mov lahf in fildl cli loop nop aas ljmp dec stos xor cmp or test insl lret outsb and fnsave pushf pusha lea ja pusha jmp lods popa mov add (bad) (bad) shrb lahf xchg xor leave popa mov addr16 dec inc scas cmp sti xor adc (bad) pop push dec mov lods push fwait out imul ds adc sarl mov jmp cs mov jne or push cmp roll mov lea jnp or sahf push int jge mov (bad) negb and mov enter cwtl add or lods fcoml iret leave (bad) imul xor pop cld sub rclb js negb es xor ds nop add aas les jne push add xor mov outsl test lods add sbb adc adc push pop les fdivr je stc adc sub add ljmp adc lods mov pop or sub lret and cmpl inc push xor aad mov popf pop addr16 (bad) cmc and adc or inc adc les insl rclb cltd jbe jg push test fdivrp pop cmc push movsl into dec andb inc jno imul stos add push pusha movb lea jmp jmp pusha jmp jmp call push dec clc sub (bad) and xor pop and and inc adc loope jno sub push cmp or sbb das andb movb divb aam outsw adc mov popf dec ja popa mov movsl in fcoms fldenv cmp sahf sub adc daa jg (bad) push or cld cmpsl add inc push adc pop mov adc cmp or in pop into push fstl (bad) ret outsb mov dec in cmp pop lahf test movb jmp lea jne pusha push pusha lea jmp mov push call (bad) movsl mov mov inc insl push adc out cmp xchg cli add push lea pop xchg movsl dec dec aas imul and xor mov (bad) or ljmp aad push lock adcb stc fnstcw aaa adc mov sub test test clc outsb mov popf xor rorl les mov pushf sbb pusha jecxz sbb fnstenv in (bad) dec into mov or mov sti cmp out mov lcall loop daa inc pusha mov mov test xchg test jl call bt call pusha mov movb pushl movb movb pushl ret fmul rorl lea inc push aas xlat daa iret (bad) test mov mov adc mov jle out add out fisubl popf sub dec mov adc cmp push int xchg aad pop mov sbb adc cmp in sbb hlt sub mov (bad) dec test mov sbb icebp push mov mov jne sbbl mov sbb sbb (bad) inc jo in cli in outsl mov aam jno pusha jo nop aam inc cli xchg ds into ret push and jbe xor rclb pop lods call inc jno cli pushf cltd mov jp test mov (bad) mov or nop aam clc mov jmp mov pusha pushf push stos pushl push push lea jmp not lea pushf pushf call push pushf lea call pusha call mov push pushl call add inc gs outsl fs gs imul add movl lea jp pusha pushl pushl popl pushf pusha pushl ret bt clc cmp pusha pushl movb pushf sbb jmp dec pop iret sbb mov iret sub jge push add pop lds jae aas ss mov pop sysexit mov (bad) les push fwait testb or les hlt jbe aas loop mov shrl xor lret jl hlt fwait jno xor pop xlat xlat dec pop aas (bad) aaa cmp sub dec and inc inc sti mov mov mov test xchg jl aam fimull jnp ss (bad) jmp or (bad) push adc push jp push push and or insb stos inc xlat or mov popl inc test adc xlat xchg in pop shl or es pop sti mov dec stos ror cmp pop insl adc enter rclb aad outsl lahf ds mov push lret sbb xor ljmp or sbbl divb rcrl sahf call adc jg sub lea pushf pushf movl pushf lea jmp inc or pusha xadd xor pop mov movzbw setb call gs sbb stc sub cmc ret push scas pop imul cltd mov or (bad) mov leave xor fstpl xchg mov jp lods jo inc addl dec ficoml ja mov and loop dec ss xchg cmpsl or jne (bad) xor sbb or fist xorb mov push das pushf adc pop pusha out push xchg cmpl and jle idivb push and sbb pop aaa iret pop pop fcompl adc cmp fldenv andl and mov call out popa stos es pop mov enter or movsl imul nop dec dec push jns xor sar das inc stos jmp leave mov aas mov inc and xchg pusha mov jo cmp sbb jno inc test nop dec fs add sub addr16 fsubl push adcl xlat scas jp mov pushf repz out andl sub dec cld mov movl in xlat xor jns pop or inc jecxz dec mov data16 ljmp mov dec out dec mov cmpsl push or inc and xchg adc or in push scas out sbb cmp jl mov inc (bad) or lods or fistp out lea or and xchg leave dec inc mov outsl mov jo and jle xor xor mov imul mov mov sbb or mov aam inc les mov stos and sbb jno add insb incl cwtl fistp sbb mov loope (bad) jne sbb jo fadds inc test xlat mov fucomip pop inc mov aas ficoml iret sub mov movsb fsts pop sahf int aad jb (bad) xchg mov pop jl fwait enter insl inc dec fisubr call pushf pusha clc clc mov test jmp bswap mov not push jmp adc add fs adc test sbb dec push mov daa cld and imul (bad) inc bound lods int3 fcmove xor out mov inc addr16 pop add out aad push ret mov and or outsb xchg xor xlat pop lahf push test (bad) arpl lcall jmp mov dec pushl jmp popf jns push mov inc or sbb ja testl ja mov stos mov push mov je mov mov pop lcall movb enter mov rorb movsl mull aad (bad) mov inc push stos es sub and xor out ss pop into imul pushf or and clc pop xchg push fs jle in pop (bad) pop lcall cwtl xor int3 in push add xor mov test or js into dec mov out int lods mull loop dec std dec push aas cmp mov inc jg es cmpb nop movb xor dec ds lods mov sub inc xchg sti pop aas mov (bad) cmpsl out fwait mov cmc or push hlt jnp sbbl sbb jne (bad) dec gs stos dec aaa adc adc ss inc add cmp inc addr16 test xchg (bad) rolb mov pop repz pusha add or ud2 mov inc daa fisubrl mov or cmc push adc jb in pusha imul xor popa jno clc ja mov xor mov stc or in imul add dec jns pushf outsb xchg and cmp or fadd imull andl or outsl cli add pop mov sbb and (bad) cmp imul and fs jge adc mov cmp mov pusha call lea call rol add and cmc bt pop aas rol pop pusha test cmp push sbb pusha call push mov mov push pushl mov pushl ret pushf pushf lea jae movzbw dec test pop rcl sar bswap adc pop btc sar mov push cmp call cmp jl xchg add or mov mov xor mov shll mov pop fisttp daa pop mov inc jno aas mov sub push cwtl sahf testb sti push test loope mov enter xor cmpsb xor or je or lahf push aad adc jo pop adc out cmp mov imul sub (bad) pop mov dec pop hlt aad in test iret dec and xor pop movsb push aam scas lret imul xor xchg jecxz push pusha aaa out jle mov data16 mov or and shlb dec lods cmp add add and ficoml sbb (bad) fisubrl pusha adc push pushf lea jae inc pop inc rcl bts dec pop bsr mov or lahf shr cmp not mov jle pusha movb lea jb xor cmp call test cmp movb push push pusha sbb jmp pushf lea je jmp or lods ja add inc stos jecxz pop mov adc xor out cltd jmp mov pop jo loop jge mul movsb call cmp or add mov xchg test jp out cwtl pop cmp jno outsb mov in cmp xlat fs jle int insb push scas int or fiaddl fs sbb and hlt dec mov sahf aas cmp xchg cli fst add mov sbb das or pop mov pop push fcompl mov cmp lret loope lock mov cmp jmp incl shr or push add enter pop jmp imul call sub xchg dec imul or setg mov sbbl ds xchg sbb mov stc inc lods xor sbb pop xor aaa mov adc insl nop in pop test and rorl popa imul (bad) cwtl clc push out arpl dec mov leave mov mov dec (bad) jl xor stos jg out (bad) movups sbb adcl mov and js or inc outsl fstps (bad) xor mov daa nop add sub pop or inc mov jae sbb jge loope cltd push movzwl cwtl cmpsl add push inc inc pop xor jno iret dec enter cmpsl in push xorl adc lret into add lahf call pop inc sbb sbb cmpsb (bad) imul or jmp in fsubl data16 daa and and movw lea jmp scas arpl add cmpsb pusha scas push into sub push mov sbb ds jle xchg push lock push lods dec test mov fsubs popa sbb sbb stos push in inc xchg or insb add ds (bad) rorl jbe pop xor dec rcll sbb cwtl push mov adcl mov mov dec fistpl pop mov and bound fnstenv das jns mov sbb pop sbb inc mov fs fistpl dec inc aad push sbbl jp bsr bts mov pushf cmp pushf jmp jne test add push add je cmc sub mov mov imul jo mov lods cmp mov test cli or fmull nop mov out dec adc pushf rcrl pusha pop loop push mov addb out in push xor cmpsl push sub out test jb xor mov orl inc push mov out dec in pop inc mov pop jbe cmp cwtl pop lock pop fs jae (bad) and mov scas xchg xor pop cmpsb pop mov outsl movsb aaa fidiv push into sub inc mov inc xor cmpsb sub jbe and negl mov mov je cmp and rcl insb test and aas xchg inc jecxz dec ljmp gs inc das fstpt mov and fs jae aaa jmp lea lahf call jmp mov add lea jae stc pusha pushf ror call mov add data16 jg das dec insl std std loope jl xor and xchg outsl sbb movsb data16 xchg mov inc aad shrb outsl ret repz mov lea (bad) mov mov or daa push adc xchg shrb and pop mov sub add shrl jp lret dec (bad) jo sub xchg inc or in xor sarb mov fucomip loopne jne inc lods pop or jns into call or pop loopne nop and inc lods xor dec cmp mov mov aad popa scas push mov sub adc xor lods loope popa scas push cmpsl xor push mov inc dec pop repz mov sbb and das cmp lea loop mov xor stos sub jl push adc jne test xor xchg pop (bad) (bad) in sub lret sub cmpsl xor leave jo scas inc jmp movb pop and and xlat xor xor or mov cmp lret daa push leave enter jge sub push cmp fs sbb movsl dec add clc shlb aas pop shlb mov mov ret jo ja sarb push ljmp jg dec dec cltd jge jl push sub sub adc cmpsb inc fwait jge xchg out sti cmp les jge xchg insl add pop popf inc xor int inc or inc pushw pop jae mov sbbb xchg data16 inc scas jecxz ret add insl and imul xchg jecxz xchg or push test popf mov test mov aad call sbb enter or ret xor lcall aas jg scas pop dec into cwtl push insl test pop cmpsb (bad) pop mov pop fcmovnbe xor sahf sub sub mov inc imul dec leave xchg dec test pusha stc add pushf push cmp push jmp test cmc call shlb popf add mov leave popa imul leave inc pusha insb mov cld xchg mov pop sarl xorl sahf nop jb,pt das jecxz int bound cld test sub std push lods lret and int3 insl sub mov mov push stos pushf mov add push inc in sub xchg xchg push add fs cmp push (bad) cmp dec sbb mov test inc jne sub sahf add out sub sahf mov dec or jae cmp bound pushf inc insl rclb mov fisub lcall std xlat (bad) or loopne movsb iret cmp add inc gs outsl fs gs imul add ficom inc neg ror lea rol jmp add dec outsl popa fs imul add mov mov movw mov lea mov bswap mov push mov call pop inc adcb inc add out mov sbb loopne or push jnp mov add and push je sub jp js cmp repnz pop and xor data16 lea icebp outsl xchg xchg and mov and scas or int3 and mov xor jns push lret add lret push loope dec aad pop push jp dec and insl push or xchg sub jg adc and bound ss test repnz sub xchg inc fimul and cmc cmp mov fmuls aad (bad) decb push or sub fdivs push (bad) dec lock test xor sarl call repnz lea js jne mov cwtl movb push setl push mov push pusha movw lea pushf jmp lea jne movzbl mov setge movb sete mov push pusha movsbw movzbw cwtl lea pushf lea jne pusha push movl call pushl popl movb pusha pushl pushl ret jg inc xchg cwtl add movsl movsl dec (bad) and icebp sub and xchg clc inc mov lods in inc std jge push xor int in loopne test sahf fisubl mov mov mov loop fadds xlat xchg xchg mov push jo sub add push push xor fisttp nop ret lods push das dec ret outsb in int3 sbb inc sub mov adc cmpsb ds inc stos insl xchg jp add sti push in mov jmp inc ret sbb fadd and mov into or adc pusha jle mov ficom mov fwait ja pop cmp sub scas pop push or jl je daa xchg stos (bad) jge mov push xor pop (bad) gs pop in jbe or (bad) sarl xchg jmp leave dec and and movsl sub outsb adc dec in lods adc sbb popa lahf repnz aad dec fcomps enter (bad) out inc xlat arpl mov loope repnz stc pusha mov into cltd mov or adc fdiv or xchg xor cwtl into cmp ss js je xchg lret js adc pop cmc fs ret jo cmpsb or jnp or ret add jl jl cli jo out jno sti ss push movsb ret dec and shrb jle mov adc xor (bad) jae loopne xor (bad) (bad) add xor jbe adc mov std lods imul in and xchg pop push out mov sarb in mov cld cmc mov int3 or pop in mul test test cmp add mov es push or mov sbb mov (bad) xlat outsb (bad) popf xlat mov test lret in sbb stc imul stc add push pusha movb movw lea jmp shll lret mov stos (bad) xor xchg clc (bad) mov ds outsb std lods in mov and xchg loop popa rorb lock cli inc cltd shrl mov xchg fsubl ja out pop stos mul push cmp hlt add jg insb scas movsb iret addr16 jne sti movsb pop das faddl jno pop sub fidivr mov inc fisttpl push ljmp inc sbb sarl pop test sti and sti fs xorl fnsave icebp or fucomip add (bad) (bad) jmp add call cmp movzwl add not mov stc add jmp pushf bt xor jmp lea jne push jmp inc jne sub ret lock test sbb jb arpl sbbb (bad) ret push lea cmp aaa (bad) xor push sbb add dec mov pop enter insb mov mov mov push xchg mov mov push sub hlt pop ljmp sub sarb and mov inc lods pop mov jo int3 push mov jle adc insb jns cmpsb aam and nop mov inc dec pushf popa pop outsl xchg pusha pop call ds ret inc divb push (bad) push loope add repz push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret add dec jo outsb push gs imul scas (bad) incl add je outsl fs gs popa outsb fs gs add add fistpll push sahf fmull cs mov cs scas rorb sub adc sub jp xor jnp or popf inc and aam loope jnp in and push out fyl2xp1 mov fstpl xchg movsb sbb sub sub pop push mov add hlt push cmp je imulb jp sub xorl out sahf in add dec mov nop jbe mov inc xchg mov pop gs jno ds aad pop jne jne mov mov add mov popf mov js push mov xchg xchg in loopne (bad) loopne pop push scas or pop mov add mov imul and inc and pushf push movw push pushl ret movb movl call not mov cwtl push setp push pusha lea jmp cmp pop cwtl movsbw lea cwtl movsbw movl mov pushf call pushl lea jb daa (bad) not push das mov bt rol not rol stc mov bsr shld add xchg jmp stc cmp jmp mov jmp neg pushf add bt call stc lea add jl cmp bt push shr push rcr xchg cmc neg bswap shr lea shrd mov setbe cmp rol or not rcl ror add pusha rep call cmpb jne shll shll push lods neg add rol inc mov pop ret rep movsbw push lea mov bswap pushf call clc call lea call pusha jmp and cltd sbb dec sbb pop (bad) jns or in fistpl xchg cmc (bad) sbb scas mov push aas (bad) push ret jmp mov dec pop sbb popa pop xchg cltd jecxz out adc jle (bad) ss (bad) push xsha1 cmpsb dec mov nop mov inc lds mov ret mov (bad) xor and xor mov mov jp sbb and aam ljmp push lods pop rcl dec mov xor pop adc sbb ja and push stos mov mov movb movw lea jmp mov lea jne call pushf lea jb cwtl bswap cmp push pop mov call pusha lea jb jmp mov add sbb pop cmpsb pushf in mov cli cwtl jp and inc xchg push (bad) or (bad) and sub popa pop addr16 dec lret in xchg das in out lcall fisttpll cmc cmp jbe pop push addl outsl (bad) xor pop fist dec jmp mov imul adc (bad) xchg mov xlat add imul sbb lahf js mov pop mov hlt add cmp dec into (bad) in sbb clc jnp inc mov stc xor test lret or fcmovu pusha pop ret xlat lret push mov cmp push mov or movsb std and jmp jno and mov push je int3 pop cwtl (bad) enter into sub test js push pop xchg sahf jnp ret mov in loop ret movl jmp xchg jg popf adc fidiv int3 enter sti cmp jo pop push mov loope inc je add inc cld jnp (bad) sbb outsl push icebp mull jl test mov inc mov (bad) repnz clc lret pop les arpl call lret mov mov cmp adc cmp lret insl enter adc add push lea sets mov mov movw lea ja pusha call lea jb neg mov shld pushf cmp lahf lahf setnp bswap sbb not movzbw mov mov lea call pop push cmp mov and pop sub xor lea pop mov iret lret cld (bad) push mov mov push insb rcr jae jmp test (bad) xchg dec jge sub dec in mov mov adc je (bad) dec (bad) mov cmp push sub sti adc lret ja out daa cmpsb pop mov xor test test or mov bound pop je arpl sti pop (bad) xchg push mov iret (bad) dec jns jbe divl mov (bad) xchg pop (bad) cli inc lahf mov and pop jecxz in mov inc sbb jecxz or jecxz sub inc mov mov shl and gs adc and adc mov adc shlb add inc aad test nop pop adc inc pop jl mov and faddl jle xor out add call in mov scas mov inc cmp nop mov push pop xor popl (bad) xchg add mov xchg dec imul dec dec dec inc int fidivrl pop rclb adc cli or popf xor rcll push mov mov pushf lods jle fstpl lret call jo cwtl add dec inc lea mov lahf mov inc adcl movl jmp movb pushf mov lea call call pusha mov pushl mov lods cmp pushf xor test jmp push mov lea je pusha mov jmp pushf pushl pushf lea pushf mov pushf push lea jmp mov add call pop aam sbb sub xor xchg sub (bad) xchg pop mov test push lea jmp pop popa icebp and push shl sar adc es dec pop xor stc fs mov sbb push lcall inc push movsl fsubrl xchg les mov bound lods test sbb fistl cld or mov cmc outsb movsb adc (bad) sbb mov dec mov xchg out xor nop xchg jbe or xor cmpsb hlt push je and (bad) sbb mov clc out pop dec mov (bad) movsb mov int sbb mov lods lods dec scas dec scas addb dec iret jl int3 push js lcall mov test inc adc adc arpl jp adc push int nop insl das jl mov test movsb out fbld iret lds mov cltd insl sahf xchg push cli or push mov mov cmp (bad) and ret aam mov push stos or sbb or sbb adc pop loop cmc dec movl pusha pushf lea jmp mov bt test test cmp pusha lea jb aam xor neg adc mov call lea call call pushf lea je push setbe lea push lea call push push adc call jmp scas xchg cmp (bad) nop lock sarl arpl loope cltd push std adc out addl es cmp stos sub push push repz je push pushf (bad) scas outsl xchg push aam (bad) sub adc pushf cwtl out adc rcrl inc inc xchg dec das std stos push lods push pop xchg xchg (bad) out push add push idivl (bad) test jbe rolb fnsave jl movsb mov loope in and insb mov rclb dec lods mul pop dec sbb (bad) mov mov js (bad) cmp and add mov pusha call add add gs adc pushf mov (bad) cmp cmpsb fdivrl cwtl mov inc mov (bad) gs pop or stos rcrl sub jecxz sbb jae xadd xchg je lea imul mov jp add jns pop shll or cmp je mov sbb jno jno sbb xor push cmp jg jge pop inc dec pop jg (bad) jo push push mov (bad) adc aas jg repnz jp and daa mov dec popa xor scas inc cmpsl sbb les js inc test icebp mov rclb mov push in pop (bad) es xchg in jne scas jp pop gs fbld fs ja cmp not pusha cmc sub movsbw cmc sub add not sub adc movzbw mov xor sbb mov clc stc cmc repnz jmp or sbb maxps (bad) icebp popa cltd jno push scas pop jecxz mov pop movswl xchg iret fwait sbb sbb pop cmc adc pop out xchg sbb mov andl insb stos andl sbb xchg aaa jle xor js ss and pop inc and lahf clc (bad) (bad) jne or repnz pop mov add flds lret bound (bad) call sahf sub jne pop cmpsb dec test push fs es lahf add inc adc fs call pusha call aam jns test inc mov and cltd imul jae jae push or int lahf fwait nop mov insb ret sub ret rcll mov sbb out lock mov aaa ret push dec inc mov add inc mov inc mov push lret mov stos es cmp mov arpl dec mov (bad) je inc cmpsl int3 inc and push mov ljmp insl outsl cmpl push stos rcrl inc inc mov jl int3 mov mov test sahf ficomp test ret rorb mov lret aad xchg adc push stos adc popa out and xchg ljmp cmc sti popf cmc add dec js outsb pop adc scas mov mov outsb mov sbb pop (bad) mov cmp pushf pop fist shrl adc inc adc push mov mov movsb push and push add mov mov loope adc test or sbb jbe rcl inc and cmp rorb fmull cli push cmp ljmp test inc scas repz mov fidivl mov sbb rep dec pop ret push jns inc inc push out dec dec rclb into push jle fsts scas outsl out xchg popf jecxz lods pushl or nop inc pop inc repz or je int in test rorb hlt or cwtl xchg lods lods xor fcmovnbe add addr16 or int iret outsb or test stc jbe or add add and lock out adc lret lcall and pop xchg or mov in mov ret outsb incb sbb mov in icebp cli dec cltd inc and mov lahf inc mov seta xor neg cmp bswap pushf lahf cwtl mov jmp pusha movsl and stos add or adc lret sbb mov mov loopne xchg pusha cmpsl rclb xchg xchg sti push jp jp sbb ljmp dec mov std xor jmp mov push out dec icebp cmp out lds jle or outsl in adc mov je or inc sub repz jl mov lcall jp loope js add and lea jb cmc pushf mov xor jmp push jmp push call jae add call jb mov shl lea call add pop ret test jmp cmp stc sub add jl inc and pop mov cmp es mov insb repnz mov sub (bad) and lock mov pop cmpsb outsl scas sub inc sbb cld pop xor sarb (bad) or xchg inc in mov lods cwtl inc lcall xchg fs add pusha inc not sbb add jno addr16 outsb (bad) jne ret pop aaa iret aas divl int out add test jge lret xor jb cmpsb jg or cwtl les btc mov jmp cmp add in xor jo jbe fisub inc mov mov xchg loope rcr inc je dec andl jno sbb inc xchg push xchg or ja jl test mov sbb dec cli ror pushf pop es (bad) std pop and sahf jnp (bad) clc inc cmp mov jo mov sub imul test and and push add inc scas fnsave and in xor fs int3 out test lock je add adc mov decl sbb movl pushf lea jmp jmp pushf lea jne lea das rcr ror sub stc shr mov pushf pushl pusha cmp add stc rol rcl mov cmc mov bt test test jmp pop sub inc pop cmpsl (bad) (bad) fwait jnp jge sbb dec fcoml add mov jne mov and lock pushf or sbb fsubrs std or or shl add arpl inc xor mov add ss push daa test faddl loop adc pop dec sbb mov js gs outsl xchg sahf push mov fwait ja jmp mov cmp test cmp icebp cltd inc push mov add cwtl mov pop mov pushl rcl call in push call add mov add call sub jne ret not mov add mov add movsbw pushf btc mov bsr sub movl and rcr mov das bsf mov add bsr rol sub or movsbl daa rol and shr sar mov cmp shl push movb add call pusha sub movsbl inc mov cmc cmp cmpb pusha pushf lea jne lea xor setnp mov bt jmp adc cmc bt cmp cmc sub cmp shl pushf cmc stc mov mov cmp cmp movb mov lea jae jmp jg xor xchg push lret aas mov dec test sub popf xchg xor sti mov xchg add hlt dec clc and in sub jp cmpsb dec pusha leave (bad) es mov add mov xchg push fwait push stos dec lret js or add pop aaa fucom pop adc dec cmp or sbb cs sbb dec mov cmp push mov mov add adc out xor sarl or mov inc mov dec mov mov cwtl pop ret jne sub imulb mov mov mov adc push stc dec out ja mov pushf lea jl pushf pushf mov pushf lea jmp lea jb neg pusha not shld mov cmc pusha jmp push movl movb push lea jmp mov lea call pushl shl bt mov call fstps inc pop shrb je push dec mov or ret mov add dec lock pop pop (bad) xchg mov mul ja (bad) mov add fsts cmp xchg lret xchg lods sbb push add add fs sbb jns sbb pop xor or (bad) mov dec je add daa inc and mov jae es sbb add in jb ss push mov xchg xchg xor mov push adc ss es jns dec dec dec into addl pusha call add dec outsl arpl inc insb insb outsl arpl jp sbb mov inc xchg cli clc push jp testb jmp add testl arpl scas push cmp gs cmpsl or popa cltd loope (bad) xor xchg mov add movsb push cwtl jp je dec mov cmpsb sar or add dec pop xlat fyl2xp1 adc or fnstenv movsb xor or push add and inc push adc or mov dec or xor sbb jbe and mov lock or das fidivrl insl and sub sarb movsb int sbb sbb push mov mov mov shl lea call adc sub jne mov sub pop pop ret movl push jmp sub mov test stc mov cmp pusha call push inc push push dec dec dec cs insb add or add ror pushf dec call pop aas jnp mov inc jns (bad) hlt test and jb hlt dec les in mov lock sbb inc push push jecxz and loope sub loope lret xor fidivl add gs hlt or enter out das cld (bad) (bad) push dec aas stos loopne sti xchg or sti les repz inc mov mull and and scas cmc jle and test popf adcb xchg ffreep mov fistpll in mov push inc or jle or inc leave repz iret (bad) push mov sub pop pop les mov shld cmc rcr mov stc movzbl inc btr mov bts bswap bsf mov rcl bt mov cmp cmp movb pusha jmp test jmp outsl xor inc mov gs cltd jno addr16 jno gs out lods mov dec jnp gs and pop loope out xchg mov ja in dec loopne mov scas pop adc or xchg and gs movsb cmp lea mov mov fldl bound arpl cmpsb mov mov icebp push cmp mov xchg into jge add xor test jg lret je adc stos jno cmp icebp push inc fnstcw das pop popa stos add push jns shrl mov push xchg dec les sti push cmp adc mov mov decb xor or stos lea jg pusha mov push movb pusha lea jmp pushf lea jne cwtl cwtl sub push mov pusha pusha push add push lea jmp lea jb pusha xor stc movb pushl test pusha setno jmp mov pushl pushl lea call push call (bad) call cmp loopne add push xchg dec jecxz fisttpl or fsubs cmp or push pop dec aad jl subb int3 lahf (bad) outsb and dec fildll mov int (bad) pop xlat add nop imul gs fdiv int3 cli mov xchg pop out mov popf jb jb mov inc test clc xchg inc stos mov sub mov push int mov scas lods leave mov cmpsl mov mov (bad) int pusha inc or outsl jecxz push add mov (bad) into data16 cmp lret push test push iret jne jmp cli inc leave xchg inc ljmp pop jge cs mov data16 and sti in inc push in movsl addr16 jbe aam sub sub push add in test loop insb mov (bad) and into ja or jne out mov lahf aas rcl cmp in inc jae mov fmuls add xor lahf push notl mov dec (bad) int jl push cs jno mov incb (bad) ja (bad) fbstp sub and inc cmp bnd push mov lds loop xchg xor mov fnsetpm(287 xchg cwtl add cli negl das aas lret enter pop fcom dec insl sub pop adc inc repnz push xor cmp stos in aad sub shll jae mov in mov pusha dec pop ret adc sbb adc adc cmpsb pop mov into cmp mov inc mov movsl pop mov insb nop adc out mov int in xchg add xchg into (bad) in movsl leave xchg cltd mov and stos pop jmp scas or hlt jl dec jmp aad adc ret arpl or push jmp pop pop fidivl lahf cmpsb mov enter pop mov insl xchg pop ja mov andl pop pop push and and sub clc mov cld mov xchg fsubr or stos ja je adc mov fidivr (bad) cmp loop inc insb dec ficom mov outsl xor push lret dec jmp jg negl mov xchg lcall pop xor test mov fisttpll scas (bad) cltd (bad) pop test and mov aaa xchg mov int3 inc (bad) pop sbb sub pop les cld xchg out push sbb inc lret enter lock inc xor aas push inc pushf in mov fild jne adc ja mov das inc fcomip out movsl adc xchg es mov test push mov testl rcrb jmp fcoms hlt dec xor sub pushf mov jnp jnp movsl ret lds imul xchg mov aam in xor sub sahf fildll rcl sub mov cmp push lock push dec dec fldenv gs mov mov or pusha popa push fwait std sbb imul test push and mov dec rcr es xchg jmp loopne mov aam js push ss push push mov or jnp out jg pop ret fs push mov inc (bad) dec add lahf inc and sbb js or push lret loop xor xchg mov xchg fmuls xchg push ss lea enter cmpsb orl loope mov lea (bad) in cmc sbb pop in and mov into mov sub (bad) sahf or sub int and push xor pop cmc cmc data16 sarb int3 bound mov mov or dec aaa pop mov sbb outsl loopne arpl outsl sar or and mov in scas push lret lcall cmp sbb js cwtl dec xchg aad leave push push xchg icebp scas fs icebp insl mov ror mov je and pop add icebp lock mov test xor mov nop ss das dec ret dec push loope mov sti xlat (bad) xor ret sub xchg fwait xor or shll jo push sbb mov jecxz add cli sbb xor mov stos nopl and dec sub andl sbb mov inc sbb pop jp loop sub add imul inc mov leave daa pop inc sbb lock lret inc popa mov sub or nop mov fwait mov call cli jmp jno rolb lock jne add xchg pop xor pop leave push scas mov push inc cmp test add pop daa or sub aad mov pop mov fs add dec mov pop sbb or jbe insl int or loope inc xor pop and mov and xor leave and push dec or loop (bad) cli pop cmpsb add sbb and outsl dec sti mov sub sub adc jns push or popf outsb push (bad) test in sahf xchg fbld xchg xchg xchg sbbb movsl jg fistp scas (bad) ds lods xchg addr16 ret mov mov ds in int jg push xchg loop add loope add cld scas movsb lods dec xchg loopne (bad) xor inc adc push mov mov rolb dec imul xor cmpsb repz lcall xor lods negb test lea (bad) mov xor insl fwait inc jb fistl out adc push daa mov outsb stc jno in pop repz fsubp aas lret into test lret stc cmp mov mov pop loope nop xchg js pop cli iret outsb loopne xchg cmpsl pusha sub adc lret (bad) aam dec mov fistpl gs cmp xchg into repz (bad) clc das cmp add outsl leave push je iret add testl mov cmpsb lahf repnz sbb insl aam icebp lcall mov daa mov cli xlat stc pop jl pop push aad fs lcall jns es and mov pushf (bad) xchg dec in lret and inc aas (bad) cwtl iret aam jbe fld inc in cmp pusha or dec xchg (bad) jnp or cmpsb sti clc ret scas mov std pushl inc inc inc pushf fcomps xor xlat je jmp ret test rcr inc ds data16 sub dec lods scas or jbe cs sbb lahf jp sub imulb cmp popa sbbl repnz xor sbb sbb inc inc jnp loopne mov repnz ss push or add dec leave xor movsl push popa jecxz iret out daa lahf xchg ficoml lea xchg inc xor pop sbb cs punpcklbw les inc mov xlat xor or cmp cmp stc jns xchg xor mov pcmpeqb loop push aaa pop adc aad pusha sub sahf (bad) adc pop xchg (bad) fs push outsl cmp nop adc cmpsb push cmc jg cmovns and push addr16 sub push mov popf xchg (bad) cmp cmc sti sarl sarl pop inc hlt cmp xor call push and mov stc mov outsl pusha push inc dec fucomp mov or adcb push pop scas repz int ret jp push cld xor sub sbb push stos and jecxz stc add adc pop es pop lds pop int3 dec push jo inc enter jne movsb push les xchg dec xchg daa test movsb lcall sbb mov mov fidivl jp add pop pop roll lahf ja adc and dec cmc adc add xchg mov icebp test popf adc lret jb hlt dec int3 stos je sahf (bad) mov pop and je sub stos test push jae cmp adc jecxz add and fwait das les mov je loope sahf mov pop adc cmpsb xchg rol push dec fmuls xchg xchg out scas adc or jge cs ljmp sub sbb jp sub jle leave cmpsl cmp jecxz adc cmpsl dec xchg xchg divl fwait pushf jmp (bad) mov out ja pop dec bound xchg mov jnp sahf mov sbb mov inc ss add divl push or ja (bad) aad inc xchg imulb xor and mov mov or and scas icebp mov int3 fsts push cmovg (bad) out sub inc push aaa inc (bad) movsl mov xor out out jmp pop pop andl sub test jnp xchg aaa jecxz iret adcl aaa add push pop loopne andb adc out cwtl (bad) into nop arpl gs pop jl arpl dec cmp test mov push inc sbb xchg jne mov divb cld je or push xchg lods cmc ja cli loopne shrb add (bad) nop xorl sbb ds xchg mov mov movsb mov rcrb out push fistpll xchg xchg stos mov fcompl sub (bad) div and cmp out sbb adc flds call fisttp push (bad) mov fdivs mov outsl in shrb sub dec out iret imul and fwait xchg mov inc rcl pop dec push jno sbb xor pop push jbe aam mov les out mov imul inc aaa sub cmpsb pop sub out sub pop lods out aad arpl xor inc js arpl push mov outsl push add sub ss and leave fwait sbb mov stos jnp sub (bad) push sti (bad) lret lds lahf rcrl jb mov xchg mov std enter mov es aas mov cmc insl jp cmpsb data16 sub out inc sbb jp and xlat (bad) movl (bad) mov mov iret scas dec rcll and adc ret shlb sbb push hlt lahf jmp scas inc push in inc mov das outsb sbb mov outsb dec jne loop (bad) adc (bad) mov addl cld jbe push adc scas loop and das in xchg sahf cmp and dec arpl xor ret dec mov lcall popf es ret sub mov repnz mov hlt pop out dec imul dec or and ret push mov cs xor mov jae (bad) insl (bad) out sub pusha xchg cmp test cmp (bad) jns loopne mov and push addr16 mov aaa lods cld lods mov lock dec loop xorb popl pop nop jb sbb je outsb stc pusha test push inc int3 sbb rcrl or mov mov jge fidiv test push fcoms in lret clc imul subl mov add outsl mov sahf mov jbe mov jo xchg push and jl stc pop mov out (bad) or into pop lcall push int3 mov fildll jle shlb stos rcll and movhps cmc jnp inc leave dec orb xchg mov vcmpps sub aaa mov out jo lods rcrl je fdivr ds push sbb cmpsb mov ss push pop sub inc jo orb punpckhwd cmp inc xor mov in and add rcrl lret aad lcall jg cmp push sbb int3 fdivrl into push cmp dec fild mov cmpsb mov lds lahf sti jp loop repz dec cltd js push inc outsb sub std adcb incl es ja jbe out pusha jecxz jne in sub popa in fcomip mov sarb pop adc je,pn in movsl aam mov lds push mov mov mov (bad) je les mov rorl mov inc je into dec in out cltd inc ret in push mov xor ds stc jns mov sbb cmpsl lcall stc divl xor or (bad) sub out mov jge in push push leave jecxz xor rcr or aas inc out dec lds xchg sbb sbb fdiv mov jle inc out dec inc mov movsb push (bad) (bad) mov inc dec ljmp int xchg into fdiv popf jno loop into clc mov pop cwtl jbe mov (bad) push adc aam xchg add test sbb (bad) mov inc xchg enter ja popf sub lcall jb fadd mov mov mov (bad) lods push lds cmp pop inc mov jae sbb mov out xchg subl mov xchg push mov push cwtl lcall loope popa push xchg sbb and xchg sbb mov lods mov cmp popa mov xor or pushl mov sbb push stos inc and test mov ret cltd sti icebp loope mov mov fdivl pop adc scas imul ja (bad) scas adc pusha enter jg cli and (bad) jb (bad) (bad) scas in out cwtl xor aad sub mov adc shrb rcr push push notl sbb sub push and fldenv rcrb add add imull add push cmc and xlat sti cli dec xchg or fidivr mov cmpsl xor int rolb divl mov pop mov jae les mov or cwtl xlat add add adc push ret xchg or les sbbl sbb xor sub adc int add mov mov push mov (bad) jmp lahf push in sahf lahf rcll mov (bad) pop jecxz lods out add fs cmc jmp dec ss orb test sub fs lret je mov flds mov jno pop pop js in in les adc lods cmp in lcall adc mov leave xor mov shlb cli push mov dec and cmp mov popa mov inc out adc sbb add (bad) mov inc repz push sub add push jbe pop je cmpsb sbb insb push popa in rcll dec xchg lret aad (bad) fiaddl cmp ret push inc add das sbb jne clc scas sahf mov jl icebp sub pushf xchg stos mov xor aas mov pop sbb fsubs or iretw mov or pop push mov imul mov (bad) xor or nop sti adc add loopne std sub mov test pushf dec pusha das test mov fistp enter mov dec int ss mov jl mov (bad) inc push mov dec sbb lcall fmuls ficoml push xor xchg sbb add leave outsb mov shlb pop je imul sub in mov sti or push and lret insb cmpsl jg xor aas fidiv lahf (bad) adc test mov and push call lret mov in shr (bad) adc rclb ret packsswb pop (bad) push scas jo outsb jno ret nop pushf jmp (bad) jg insl cmp mov cmp aad push (bad) stos dec dec lcall repz cmc mov pusha icebp push repnz add lret xchg mov pop imul mov repz or test into sub cmp mov les pop addr16 out fadds loopne aam out dec dec test or mov xor mov ljmp dec lahf dec jne aam cmp popl shr dec jbe lock fisub aad out add ljmp scas sbb xchg (bad) fidivl faddl dec dec loope jg lods fs iret xchg or rorb ljmp lods jp loopne or mov xchg xchg dec repnz adc decb jp add and rol cmpsl xor jmp std or jmp adc add pop mov icebp add mov jl mov out push mov sub popa (bad) rcl xchg fwait out and stos xor aaa call mov and dec pop and loop insb std aaa das xchg fdivl cmc or clc add cltd sub jg and cmp cli dec mov hlt test jb stc fistpl inc lods stos (bad) xor cmc and (bad) in in or mov xor and lret in pop sbb subb inc pop shll movsb insl jecxz out jnp or lcall sbb das movsb mov jl mov xchg sub sahf (bad) jb repz dec stc add mov loopne enter push sbb sub (bad) (bad) std not or push inc rcll icebp test cs mov xor adc sub loope arpl push mov jp je scas and outsb (bad) gs outsb xchg in dec push cmp stc lods addr16 stos mov adc cmp inc inc mov pushf pop xchg (bad) xchg fiaddl mov xchg mov das sbb nop std push enter aas fisttp nop imul loopne pop pop mov out sbb pop sub popa and mov ret popf repnz pop xchg aad cmc push dec add xor rolb mov adcb outsb fild add scas sub xchg bound mov push push ret sub loopne out xchg xchg andl jo aas pop dec xchg fsubrl adc fiaddl xchg dec test lea je cmc and std inc push xchg js xchg stos inc cmp test add in iret jg xchg sbb pop xchg and cmc mov mov daa push fnsave notl and jge add into out mov (bad) mov pushf inc in cmpsb jg ficompl fisubl sbb pop fisttp (bad) fistp (bad) int3 mov (bad) fstl lcall ret js mov add lahf and mov fsubrs pushf pop rcl add jle aas testl inc add out popa xor jae jl jnp ja sbbl fnstsw (bad) cmp mov jp out xchg push sub xchg outsl pop stos loopne gs cmpsl xchg sub lcall rcll insl stos and fist movsb dec mov inc imul dec inc xor cmp sub sbb xchg mov movsb mov or test or adc arpl icebp fsub xor pop mov lea orl push pop lahf (bad) call test std add lret adc jg or mov or mov sbb test sub aad sbb adc sub sub push cmp push mov and movsl and lcall enterw icebp fldl stc xchg stos cmc dec dec addr16 cmp push sbb mov and sub cmp cli bound push sbb inc insl xlat mov int3 push add sub xchg shr or jbe sbb and test inc test faddl and mov shr mov lcall inc xchg xchg iret subl mov dec icebp test ret cmp push xchg and scas mov repz ret pop into sbb notl mov or pusha jns in ret aas shrl jae sarl or clc jne fsts fdivrp popf push ret xchg xchg xchg movsl xlat cmp daa ljmp pop es pop sbb cmp mov (bad) std jbe push gs sbb sahf jle mov xchg int3 push cmc sar scas xchg dec or push test daa pop mov data16 scas mov in add mov dec push cmpsl xor je (bad) popa mov clc aaa fisubrl cs nop push addr16 (bad) sub add add push sbb lahf repz into push arpl int3 jp fdivl xchg adc insb inc jnp xor xchg jns inc popa ljmp ud1 mov stc in jmp adc or call stos and jb sbb push push mov xor loop test jl and and cmp jl and mov sbb fsts and fmull cmp ss scas adc scas mov call daa jg fwait stc jp cmpsb ret outsl fbld pop fbstp (bad) mov inc repz jb in insb fnstenv adc dec xchg cli fstpt fsubl xchg cmpsl lods jae xchg sti dec addl jecxz shl push aaa in dec inc xlat pop cmp xor push cmc fsts sub test jg ds (bad) rcrl dec push scas sbb push sahf out mov xor push mov mov and lods je sbb stos inc repnz dec fwait out cld jo cmp mov loope cwtl xchg push mov icebp (bad) mov and stc enter or loopne test (bad) in cmp pushf dec in outsl push ret xlat dec insb or push sahf out push pop mov lods cld jno int3 (bad) ss int3 xor in sub adc (bad) cmpsb xchg ret dec ljmp in rorb lret aas cmp popf icebp ds cmp jge hlt dec and rcrl scas or add out cli roll pop (bad) popa lock xchg dec cmp push mov mov es lock mov mov shll inc push in ret mov dec std (bad) pop xchg adc dec sbb push test xchg push push repz fwait outsl std iret pop js lea push lahf test pushf sbb mov adc xchg cmp push (bad) pop mov stc notl push mov sub lods sub dec or fdivrl fwait jg icebp adc sbb or sub decb scas xor xchg dec inc rclb dec dec jge lods push ret stos fisttpl scas popf rclb (bad) bound cmpsb or ss outsb jle cltd add push jae out mov daa clc or bound sti sub adc movsb dec and clc stos aaa cmp cltd pop and outsl aas stos das push notb add repnz push (bad) insl mov test sbb mov inc cld pop daa inc xchg mov or or push sub jle xchg out ss and (bad) mov scas jae stos sbb push push lret dec insb sbb sub cmpsb dec push dec push loop sub imul cli cli lods mov or fs inc stos icebp repnz mov fcmovne gs out mov adc mov sub xchg out xchg dec cmp fcomps (bad) and loope notb mov loopne outsb push sub xchg arpl les or adc out lret fistpll mov ficoml outsb test cmpsb idivl push cmp repnz add stos pop cmp test mov xor xchg add (bad) mov out iret into andl ja cld sub push lods subl add daa mov in mov ret out in and push mov lock in fs jmp mov mov (bad) out test and sub stos loop sub sti mov cmpsl jl adc movsb div outsl sub in add pop bound enter insb aaa (bad) aam dec mov into jp mov add cmp lcall push cmp inc fwait clc adc sahf ss (bad) ja mov lods fcmovne lods call fisubr cmp ffree pop lret divl jo and or (bad) (bad) sbb bound pop and push (bad) aaa jge pop sbb xor shrl sahf xor stos stos test push faddl mov xchg fcoms sbbl lds aam pop in lock dec loop sub xchg sbb push adc clc (bad) jb mov add loopne adc push push mov arpl incl mov ret inc lea ja pushf sub or loop mov cmp sub sub std lret add push les andl xchg stos sub sub loope les xchg lcall xor mov push pop cmpsb lock stc mov loop and sbb jmp jl rorl cmp mov mov call mov lods mov int mov inc push movsl scas pop jno flds lods mulb jae push aam mov aam fwait mov sbb insb ret outsb inc mov sahf mov mov push xchg stos xchg inc lret fmul dec popf push lock ljmp mov ja loope pop dec push fdivp cwtl movsb jecxz sub insb test xor adc cwtl mov ficoml xor adc dec ljmp push fidivl push outsl lcall call push xchg shlb aaa andb xchg dec dec insl push int3 ret clc jmp sub push jb sti inc pop lock test mov dec xchg sub xor hlt ljmp and mov xor push sbb sbb sbb leave cli insb jp dec test pop mov lret push and pop mov shlb xlat out sbb idivl fwait repnz sbb mov adc pop test and loop mulb mov int not inc loopne jne xchg jp (bad) arpl and xchg mov jl mov adc jb push ret fnstsw or rorl popa fsincos gs punpckldq lcall sar sub stos pop mov push daa nop pop sbb pop cmc sbb sahf ja mov xchg leave adc ror mull cmpsl cmp call adc and ja xchg bound test inc jle adc in add jmp out mov mov aas cmp decb inc push scas sarb mov ret aam push in push lahf sub xor aad (bad) incl movsl (bad) xor repnz mov adc out fstp ret adc sub jge ret scas mov aad xor sub data16 pop adc cmpsb xchg adc xchg mov jne (bad) out adc xor clc sbb loop xchg jl mov mov (bad) mov movsb dec pop sub push push out outsl dec das jns mov adc push test dec cmpsl aas fdivr and sbb adcl lea mov in sbb (bad) jb enter mov sbb mov sbb pop xlat scas hlt pop ljmp fwait jb jb lcall arpl or push lods je cmp (bad) mov lret fmuls pop insb jle mov cmc imul xlat pop ret cmc inc push or loop pushf xchg loope push scas dec dec rcrl bnd add imul bound add jp nop mov lahf insl push stos mov jl jge lcall jg push call ficoml or fs test test stos push or in sub cmp push or fisttpl stos jecxz cltd aad arpl arpl dec mov mov dec lret shll add test test shlb mov lahf jno cmp inc ret add push ret and (bad) mov lds repnz sbb (bad) icebp or js jne mov dec lea ja clc xor ds and lods mov (bad) pop inc mov fnsave pop testb mov jbe (bad) mov and and jo jb xor cli xor fdivl ja in adc (bad) xchg pusha dec inc mov loop out mov (bad) inc push push (bad) xor pop test dec cmpsb mov push push in pop xor fldenv xchg jae icebp xchg sub rcll jle jo iret loope jae into scas rcll lret mov cli cmpsl adc lret sbb outsb insb cltd outsl outsb xchg fwait lret xor clc dec lods rcrb xor or repnz add hlt dec cmp xchg test sbb dec pop cmpb es das sbb mov sub popa popa mov (bad) jg daa cmp pop push out xor rclb (bad) or sub stos dec inc jle fs scas enter pop arpl dec xchg mov scas ja int3 pop xchg jnp jle mov mov les xchg and inc adc mov jo mov cmp xchg ficom ds push dec dec inc cli mov mov jae sub or andb add add and push jb fdivl shll test js adc insb sub xor xchg cwtl inc daa cmp lret loopne jb push fcmovb jne stc sahf push jo xchg xlat (bad) aas in jbe jle or shr inc cmc xchg sub movb sahf dec sbb scas test cmp mov (bad) xchg out jne mov (bad) xchg mulb dec fcomps mov faddl adc repz vunpcklps test sub mov inc jmp pop icebp mov fcomps (bad) cmp inc pop jl out xchg fidiv aaa inc fbstp sub and es out ret aam (bad) mov mov dec xchg (bad) dec pop popa out lret sub jle xchg leave pop lods ds adc mov sbb fcomps (bad) ja xchg push fwait (bad) xchg add push popa test inc xor pop popa and mov movsl mov incl push lds stos movsl and dec js push sbb outsl push out ljmp push pop push or and jge jne dec mov mov mov repnz mov sahf in repz mov pop pop insb not ret mov sbb in fild lods xchg ret idivl clc mov pushf rorl mov stc pop out les pop jb mov scas clc or xchg (bad) (bad) pop stc shl adc fsubs mulb lods fisttp leave add imul mov test outsb daa mov xchg mov cmp xlat xor xchg mov fldt xor movsl ret dec fsts ret rol in push pop repz pop push (bad) arpl shr and and cmp xchg xchg (bad) mov xor xchg sbb dec (bad) cmp mov scas cs sub (bad) negl pop jns sub notb sahf mov out mov jno cmpsl sub jo enter call cmp icebp add add mov push (bad) xor lret dec in lea mov add inc mov das ja ficoml and pop ss or mov or clc (bad) int3 rcrl inc test cmc push jg cmp ds movsl outsb fdivrs inc lods pop xor popl lods and aaa leave sbb ljmp jae jge inc movsl inc xlat cmpsb pusha aam (bad) js jb arpl stos pushf cmc sahf outsb fcoml mov lea scas and adc or fcoml movsb cmp sbb fdivl in ficomp or imul jmp push les jle cmc mov push inc push pop inc adc mov aam mov out xor pusha adc and fidiv dec mov icebp or cmp andl jecxz sub aad mov scas lahf mov js lods inc mov out jae pop adc insl rorl xchg das (bad) das pop aam xchg or icebp lcall shrl and cld mov popa inc sub push jns xchg mov inc or mov mov xchg lret stos pop jnp cs cmp stos nop dec js fdivs (bad) fs fildl xor or mov jo (bad) iret or scas push cmc mov push daa into dec adc add ret and cmp aad adc sub subl into inc cmp outsl adc test out rolb cmp or mov sub jo add mov mov outsb daa daa movsb mov movsb std adc adcl jge ror jmp push push cmp popa dec iret add pop xchg sbb and fdivrl xchg data16 sub xchg cmpsl outsb jg (bad) loope xchg loope sbb sti jmp popa push push cmp adc lock ret pop xchg jecxz int3 pop lods mov out or out or adc adc les jle and imul lahf es roll add scas scas sar loopne lods jne in loop cmp jl mov decl or (bad) sarl notb lret or rorb mov in pop shrb inc lcall imul and or mov iret repnz sarb movsb setle xchg in out xor in lods rol jne dec insl fsub imul iret movsl inc jb inc (bad) push add adc (bad) mulb les inc clc xor sti out push mov push add mov mov push popf xor bound or mov loope mov xor jne push aam fwait rol push stos pushf fcomps sub and aas jp ja adc jp outsl in sub out int3 inc das cmp lret arpl sarb mov mov mov dec xchg aad test add xorb es cmp push imulb xor sbb repnz stos xor js jo push aaa adc ljmp adc js gs arpl aam cmp mov sbb push aad lock (bad) cmp ss sub push cwtl decl stos or das call jg sub (bad) sub push cwtl jl mov add inc sub add fstpt jmp insl cmp xor loope dec and sbb ret adc notb jge sub jae xchg adc mov cld out or idivb jo shll cmp mov adc test outsl pop adc fstp ja fldcw rcl cltd loope and xchg ds mov dec and dec shrb pcmpgtb inc in aam mov in ror or xor push call sbb dec clc out jbe cmpsl sub fs aam push xor mov dec out sbb arpl cmpsb jno mov mov lahf das daa ljmp or adc jg sarb xchg sbb stos aad mov lds and xchg dec nop jmp jae add imul pop pop push cmp insl (bad) cmc in or dec push fist (bad) ss jle jmp mov aaa (bad) push or mov jp les in sbb clc mov test stc adc fmull or and mov xchg in cmp sub push cmpsb shrl sbb sbb ja lahf adc cli pop je inc lods das movsl pop ss lcall and lret fsubs out inc mov sbb fsubs inc lcall push mov fisubrl insb loope inc fisubl ja adc sbb add int mov nop inc xlat pop mov push repz dec mov push and shl lahf ds push insl (bad) repz ljmp sub jge ja and push fidiv mov subl jmp cmp scas mov decb ror sbb push out arpl rcll in sbb (bad) out push pop cltd pop push imul ljmp iret xchg hlt xor push ja fmull (bad) adc mov mov (bad) mov adc pop mov fadds fwait stos pop xchg jl dec sbb mulb in or outsb das (bad) adc out loop (bad) lret jnp loope push test fldt pusha inc pop out add mov fs movsb jecxz sub xor cmpsl xchg movsl gs scas jg push sbb lcall pushf fwait dec shrb mov add aad or pusha and jbe (bad) divb xchg in clc or ja cmp insb mov (bad) mov push mov add imul scas insb pop incb sbb cs pusha popf cmp aas bound add movsl push push inc mov xor cmp mov aas push adc inc xor out pop or (bad) sub aaa xor cmp pop imul jne lahf mov aad add cmpsb add out xchg sbb xchg pop mov aaa jno push xchg mov mov je hlt ja imul jbe inc shl in adc mov cmp jne and pushf sbb popf dec adc es mov add loope mov cld pop insb xchg call and pusha xchg push add mov lods mov sbb mov mov mov movsl in cmp pop xchg shlb mov enter dec xchg pop dec sub hlt ret jns enter int3 cmp mov inc js add inc push mov adc mov dec cmp pop loopne fild pop cs pusha pop in adc fildll push or aad stos bound cmpsl mov decl xchg mov and cmp mov notl (bad) jp clc mov mov push xor fstps fstl (bad) lret (bad) clc test jecxz xchg mov loope push cmpb mov push and cltd pusha jno imul dec or pop stos fbld push movsb jns rcl add (bad) sub lcall jl mov out fnstsw nop and std daa rcl pop jge sbb sub push inc jecxz jle aas and mov jl pop loop dec mov push mov (bad) push push inc cmp int3 call inc push add mov inc push xor add sbb jp mov push mov mov lods test and sub push cmp lock testb cs je cmp mov ret in scas fistl (bad) cmc push in xchg sarl and mov out mov dec push test jne fnstcw inc xchg pop mov cwtl and mov xchg (bad) push sarb push icebp or cwtl les fsts cld sbb arpl push int mov movsl les xchg push sbb or mov dec lret pop pop stc ds adcb sti jns jl push mov les push je sbb dec cmp lcall sbb adc fsubl dec mov data16 int3 push sub or add int3 fnsave out subb scas (bad) fwait add and push add jle scas lcall dec mov pop outsl cmpl out mov push movsl pushf (bad) divl repz cmp xchg outsb call cmp mov inc xchg insl movsl or push push std or mov cltd xor dec and scas jg inc push (bad) and sbb popl mulb cmp sub movsl mov cli cmp mov jne aaa xchg mov sbbb (bad) rclb lret mov lds fsubr dec cli cmp test mov and je sahf cld fidiv sti inc push pop out xchg ss and aam sbb pop xchg add imul mov aad movsl rcrb fisubrl sbb mov lret xor shll inc sbbb outsl adc movsb jg loope scas jae enter push popf out jl scas loop insb clc dec fsubp shlb fwait iret negb (bad) hlt mov test test mov adc lea lcall jne xchg sub out xchg fcoms dec sbb (bad) cltd aad nop jle jle cld xor xchg enter (bad) mov sbb add xor mov mov xchg rcll cli ret add sub push (bad) pop loopne ss call imul pushf inc lock imul or test jo push shlb jb xchg cs leave xchg pusha jp push xor lea imul stos inc outsb test jle inc idiv xchg mov testl ss int popf mov push cwtl or sub xor dec fsubs (bad) out fistpl push test ret sbb cmpsb and push mov loopne inc xchg xchg push mov mov mov inc mov jl,pt lods and xor stos outsb sarl and aaa adcl lret and fsts cwtl mov outsl rolb cmp and xchg sub sub dec xchg add in jle (bad) xor mov or and xor fcomps imul or aas adc cld dec hlt jle scas leave inc addl xor sub cmp sarb clc inc add push (bad) bound dec dec mov loop push push test xorb gs xor sbb pop lahf xchg clc push repnz sti jmp mov mov xor lahf pop mov dec out das sub add sub rolb pop xchg xor nop lea jne mov add ljmp push jne jbe lods push jnp pushf and xchg movsl or jno mov data16 push cwtl jge (bad) jns xchg adc decb jp pushf push movsb neg adc sti adc and insl cmpsl xchg loope jp push cmp mov lahf lds or mov mov add push cmpb imul cli outsl js pop mov dec mov sbb jnp rclb or das mov xor fwait push mov pop or mov sub mov cwtl pop psrld sub (bad) jp in jb cmp popa ja mov cmp call clc insb jns gs jne push call shlb cld rcrb pop icebp lock lock les fsts movsl pop mov inc sbb pop push out cwtl ret xor sbb out in lea push inc jl xchg xlat inc xchg and mov push mov scas repz aas aaa call test stc dec adc add add fsubs cli fist inc mov ja stos mov push aaa dec call xchg mov rol and push adc or pop sub repnz and mov lret insb xorl loop jge imul xor sub mov imul xor arpl lea pop lock (bad) daa lret clc clc inc xor jnp mov and or daa fsub imul inc xchg movsl and repnz movsl movsb add adc mov test (bad) mov stc jg push ljmp out push dec fisttpll sbb sub inc cltd dec dec mov (bad) mov xchg jle (bad) jne mov mov out jmp and mov and rcrb gs mov insb fiaddl mov cmp into xor lock scas jbe test mov arpl mov loop sub pop xchg xor add lods jb xchg jle es mov cmp rorl gs decl stc inc (bad) dec in outsb push add add jg lds movsb scas pop test adc inc clc cwtl cmp push int3 sbb enter or xchg ss movsb dec jmp add xchg xor test bound pop pop xchg insb xchg fwait inc js test push mov scas sbb pop xlat or (bad) push mov imul dec mov icebp sbb inc into and push icebp lcall dec fdivl sbbl jge fimull cli xchg jo pop jno mov movsb or out pop shrb testl movsl cltd in cltd in push loop dec fisub sti push cwtl jnp add (bad) mov aas push test and call push and out push sarl scas inc sbb cli xchg xchg sub insb lret pop inc jp add pop and inc pop icebp sub mov xorl dec mov jae outsb call or push mov scas ret in xchg out clc out xchg mov mov inc sub int or and jmp mov in jp inc stos sub pop xlat popa ret cli in popf inc mov (bad) xchg int mov mov push push ficom sbb loopne pop sahf xchg and dec inc ds (bad) mov ret ljmp mov icebp add cmp fldcw push or xor ficompl mov cwtl gs fimull dec mov add roll jne es sub or (bad) adc sbb popa lret lods clc sarl cmp xor xor dec sti inc xchg mov ret (bad) mov mov je xchg dec adc imul mov or imul xrelease clc push push adc shr or jne popa outsl lea movsl xor adc sbb pop sahf mov and sub movsb shr xor imul insl stos and jp jmp ja add jmp call adc lret push push insb push data16 mov jp pop add cmp or mov fdivrp rorl lods movsb xchg adc pushf adc (bad) into insb out jne jbe gs jne imul lods push sub je fmuls out fs repz pop xchg movsb jo lahf mov cmpsb scas fisttp pop and cmp adc xchg add jns cmp mov adc inc inc pop cmp (bad) test lcall jbe mov pop dec fldcw inc out sbb inc cld mov adc loopne fldt inc popa repnz icebp sbb xlat pop xor gs sub adc dec imul cmp sub (bad) mov hlt aad pop cs cmp and aam jne lahf inc addr16 xchg jns push in sbb sarb cs enter shrl imul cld lock outsl cmpsl mov adc jg scas pop in pop push xor nop mov in cmpsb enter mov icebp ljmp jle lret stc xchg xor in cmp in lods sbb out mov dec add mov inc call dec cmp enter repnz test loope adc mov sub mov andb je clc xor sub mov jmp aas jns nop push faddl xchg stos (bad) mov call lahf mov cmpsl sbb xchg sbb jl xchg prefetch xchg pop xchg fsubr testb (bad) aas mov dec adcb mov mov mov test popf sub das lret clc add push das mov jbe sbb mov mov (bad) dec mov shr cmp push dec add mov (bad) add cmpsl add cmp mov in pusha dec mov xor js mov ror setp shlb dec fistpll lcall xchg out push lahf stos pusha std notb mov mov inc xchg je es jb xchg imul cmp push sti ret and les mov nop hlt insl jae shlb xchg out pop repnz push aas add and pop xor ss pop sub mov sbb in push mov or data16 mov fs negb cwtl dec leave idivl in push (bad) xor xchg lds mov add imulb clc (bad) lret out adc and cmp mov inc outsb add inc xor popf mov shrb dec mov inc jle inc sbb add push cmpsl dec pop sub or iret add call mov push xchg clc fbstp pushf pop cwtl je cltd xor movsb ficoml and or (bad) or mov sbb dec fistpl adc nop push sub ret cs jg rcll sub jp push (bad) jnp lret ficompl fsubr lret pop loope and sahf rolb cld aas sarb ret aad and data16 sbb sbb sbb scas out lock daa xor lds jecxz fsts stos std inc mov mov mov out pop aaa add pushf cli mov aas or cmp lahf push dec loope bnd out faddl mov sti sub ret cmp jl mov cmp pop out cmc pop pop lret popf xor jne or cmp mov dec inc adc pop je dec or jne ss push push aas xchg arpl jo cmp or mov faddl iret scas (bad) dec xchg jl push jmp lea push inc sbb mov or push jp pop in lods inc mov adc mov dec pop ret mov xlat adc jb jbe cmpsl call ljmp inc vmovntps cmc mov mov push mov push notl aas dec pop iret xor loop ss pop or jns arpl stc loope mov leave add lods cmp imul pop push mov test cmp inc mov mov push sarl ja jne and mov cwtl push aas fldt pop pop mov test adc imul fs jbe in or sti icebp test test jmp and lods jno push mov out and arpl es clc and cmp pop adc test ja cmpsb ds pop jp mov inc dec adc js sub pop dec jmp or imul sub push fdecstp pusha xchg mov pop or xor popa push es jne int3 pop cltd sub sub sub mov dec mov pusha mov lods daa mov ret pop ret xlat sub outsb xor out pusha and or cmp cli out div jb jnp pushaw push scas push fadds ror mov jae cmc shrl fdiv mov jns pushf mov int3 gs aad push dec aas fdivrl add or cmp popf sbb sbb mov fiaddl in (bad) dec ss sahf push in push mov dec les std scas test lcall cmpsl neg inc jge push sbb push iret cltd sub outsl push inc adc pop mov outsb test adc inc jo or decb or xchg rcl xor pop dec orl xchg sub sbb cmc cs sahf mov sub jg sub stc push xchg rol iret adc sbb jp jge mov jo dec stos pop aad lds fild sub fsub scas and lcall inc (bad) fsubl adc daa mov sbb outsb cmp fnstcw jp pop sub inc sarb rorl mov es sub pop cmp mov and pushf cli or (bad) cmc xchg scas sbb out mov cmpsl and xor loope dec jno push mov in and mov sarb gs mov loop bound mov pop ss mov cmpsl insl mov shrb sub das and scas mov ss dec xor andl and in daa sbb ss and subl inc adc xchg enter xlat les mov maskmovq imull idiv cwtl mov movsb imul push push mov arpl daa sub (bad) push insl sub lds pop (bad) xchg cmp adc pop mov push mov mov mov imul sbb jno push gs lds sbb mov stc inc push pop in daa je aam subb xchg jmp mov cmp divb xor jp add pop test ds fldcw js pop xor mov mov mov pop pop ret repnz cs sarl stos jbe aas pop ja aam xlat adc mov test test or repz andb dec jp lea jb mov sti sbb mov cmp mov pop push cltd scas test dec mov insl xor data16 movsb adc and mov dec pop xor divb adc pop test push lods sahf in decl mov (bad) xchg cmpsb mov js or leave add repz xor mov aad movsb cmp (bad) sub fwait cltd hlt jo mulb xchg pop mov lea sbb or sub mov sub fsubs enter or out mov and test xchg mov jl out ja pop out xor icebp xchg enter js cmc clc (bad) icebp add xchg cmc pop mov pop roll rcrb lret pop jge cwtl dec scas pusha and push mov sbb nop ljmp push stos pop sti stc push cmp lcall xchg (bad) lock or cs pop cmp mov cmp mov jne add jns pop into ucomiss ret shrb add mov xchg fistpl cmp add or inc call sub sub push aam imul xchg jecxz or dec sbb pop xchg inc cmp dec mov nop mul push dec xchg nop in out rol mov or aad push sub cltd loop xchg js sub sub add mov pop jl lahf mov shrl out dec in mov xor or out push cltd push mov fxam push imul mulb dec add mov cmpsl or out popf and xor lods mov sbb cmpsb xchg ljmp into adc adcl idivl or les push mov fwait mov xlat adc lods sbb clc push add mov mov idiv jae mov shrb sbb adc pop insb mov jbe xchg sbb add stos push aam dec setnp hlt (bad) mov jns mov les inc mov sbb aam lods pop rcrl xchg fmull ljmp in sbb je out add xor xchg aam in loopne lds daa scas out ficompl out lcall pop pop dec inc test ja xor cmp or ret xchg mov xchg lcall mov sbb mov insl sub push clc shll (bad) jmp mov stos inc or ds add cld mov js daa adc popa nop andl lods push inc jns mov and mov in fistpll xor addr16 xor lods sahf (bad) xor inc das sarb or sti insl mov icebp ficom int out aam sbb add push incb mov mov stos and push test daa int punpcklwd and sub rcrl (bad) movsb sbb xchg lods jecxz getsec iret sbb loope (bad) xchg test fcmovnbe mov stc dec xor sub jnp je scas jne jmp xor aas std mov mov add fsubp push cmc xchg cmp fistpll and push cltd out push mov loope xlat movsl jp (bad) in call mov cmp or ds pop stc xchg fwait add lret lods and mov adc inc data16 in rclb out inc dec hlt (bad) (bad) sbb push push xchg (bad) mov inc mov sbb pop addr16 sarl push ss dec arpl lds xor (bad) stos add lahf push loopne stc bound adc dec addl movsl cld cmp mov out rorb cmp loope bound test xor cli fmul sbbb rol add movsb mov mov pop sahf pop ret repnz mov outsl add sub or cmp xor lods mov call (bad) and sub bound lods or enter mov jbe sbb pop stos dec leave cmp sbb sbb xor ret push mov xbegin mov pop aaa mov jmp out mov clc sbb insl sbb push in fadds xor out arpl sub mov out mov cltd add pop shll adc in push lret mov out cmp or inc inc push stos (bad) sub inc sub cwtl outsl mov mov rolb or and in inc sub mov push add inc xor mov push sbb xor repnz subl sahf rcrl call mov cmp mov cmp push mov inc add mov cmpsl add cmpsl inc (bad) mov jnp in nop (bad) cmpsb lahf add and ret mov xor jo push mov or stos sbb and push sbb xorl out jl push imul es cmp mov or adc (bad) in add int3 sahf sbbl and or push inc rorl in cmpsb cli fwait outsb dec dec ljmp je ljmp push pop xchg call pop mov pop cmpb (bad) xor fstpt je dec lahf pusha add cltd pop push scas orb jl push into ds mov and push or mov dec gs jns dec jns mov shrl adc sbb mov sub repz mov mov cmp dec ss (bad) push jle adc cmp aam fnstenv sbb out out add loop and (bad) pop sbb fdivl push and or popa or sub mov pop mov jbe outsl sahf pop dec inc int3 js outsl negl pop xor cltd in xchg lcall mov or les les mov insb subl shlb push inc jmp mov xchg mov cmp mov out jae cmp dec push add pushl mull out push push adc les stc and (bad) add leave inc and sbb lock and push (bad) xor lcall push jp stc mov pop rcll jno daa stos test jl jl fcoms mov sti iret fmull ret repz imul insl add ja ret test mov rcrb les xchg adc cmc fnstcw xchg fistpl call je or push xchg in dec ljmp repnz icebp xchg rolb or push fisubl out mov xchg fcmovnb sbb inc and mov lods mov add das and in mov push cmp stos cltd sbb mov mov lock and aas and ja subl out dec test or data16 dec jns adc adc ss out or fwait ljmp sub dec inc popl (bad) push mov int3 pop scas push sub adc fs leave imul orl pop xchg inc aas mov mov adcl mov ret int cwtl push xor pop adc imul mov ljmp dec sub push lret mov loop cs test roll push negb test into mov outsl sar popa pop scas stc pop fwait inc or orb and (bad) dec in sbb lea push mov sbb or ret cltd sbb mov lret pop cmp hlt and arpl pop dec jle enter out pushf push fldcw mov lds cmpsl pop movsb mov aam in lea mov add push movsb mov fsubrs cmpsb xchg fdivrl jmp loope lcall jge jmp push xor xchg clc cmpsb scas sub push pop in cmp ds pop sub bound mov or mov and shr (bad) and jno cmp or sbb dec mov ja inc mov stos (bad) dec dec jl sbb inc insl sti adc push int inc mov call mov rcll flds icebp xchg mov xchg (bad) fstpt mov xchg inc mul mov xchg jp push push pop xor (bad) cwtl ja fdivrs ljmp jge pop push int3 jle inc loopne mov mov xor inc fsubrl fild loopne inc and fdivrp mov or dec jo push iret test movsb sbb icebp (bad) pop hlt xchg roll lcall sub shlb std mov dec mov mov int3 (bad) pop fisttpll mov out pop jge lcall add cmp je or mov bound mov out xor add xor clc lret mov inc mov call adc mov cmp (bad) in adc push adc pushf mov mov push pop ja jmp mov sub push jmp xor pop jne sbb lahf inc or (bad) mov inc mov cmp int push cld call dec push out cmpl jb jns jmp cs push push jnp xchg or mov mov or test adc pop cmp pop mov mov or sbb push cmp xchg inc cmpsb les jo add std and cmp mov push mov fs lret cli xor dec stos cmpsl push aaa (bad) (bad) sahf movsl cli (bad) push sbb xchg fild ljmp xchg int3 cwtl mov jg pusha stos aas jbe jp inc outsb rol pop adc mov adc rcr sub pop iret iret dec adc xchg push jb test cli xchg lret inc aaa mov testl cmpsb or push mov les mov pop push sti out jns mov insb mov mov mov pushf inc xchg dec xlat mov mov sub (bad) dec pop insl inc push iret inc mov enter cli jns mov xor jle or xor cli xchg mov shll push in xorb push loop dec dec cli jmp lret sub pop inc inc cmc sub mov call mov loop iret sahf cltd or mov andl xchg inc in mov mov loope add (bad) fs jl popa mov mov push je adc push and rcll cwtl dec (bad) cld jo or outsb ss cmpsb scas movsl or dec mov (bad) sub push cmp xchg jge aaa mov mov (bad) bound push out mov sub mov or dec adc es mov push push lock jne out imul mov jo pop cmc inc addr16 sbb je pop negl xor imul sbb xchg push divb dec dec imul sub adc ror cmp pop adc mov dec clc mov inc fstps jge or push loop dec sub lahf sti jb dec adc mov andl (bad) mov out das insl ja in cli test push bound xchg add cmp sub loope pop lea mov inc xor lahf fs in add xchg test jne fsub inc xchg push aam cltd cmpsb js sar (bad) inc fcmovb cmp mov test in fdecstp jbe push (bad) pop xor sbb vminpd outsb sbb cld mov lods out dec (bad) mov mov sbb sbb cmp jb fldcw mov outsw insb out push jbe dec mov aaa rorb push scas mov inc (bad) repz cwtl call mov imulb mov sbb (bad) or pushf sbb ja js icebp (bad) push sahf jbe pop (bad) js outsl stc mov adc out ja xchg adc fldenv xchg es ds add and xor pusha and or or nop gs lods cli mov mov out sub xchg jmp stos pop cmc xchg xor (bad) (bad) cwtl sbb fbld loopne xchg mov mov xchg pop cmpsb int mov push inc sahf jl ja icebp negb push (bad) inc in ds sbb cld outsl inc push xor and (bad) adc or lret enter leave add jmp divl call cmp scas pop push leave lahf (bad) xor mov jl xchg rcr lcall movsl xchg iret (bad) or daa sub sbb xchg insb lock in sti inc mov lea inc fisubl (bad) xchg mov daa test add out fnstenv cmp xlat or add xor inc je fwait (bad) jno je xchg mov push inc in stos cwtl jle pop mov xchg jo rcrl mov cmp imul push inc loop retw js sub int3 dec cmc mov int pushf mov mov cwtl mov pop in fwait add push mov aad or mov push jo dec mov mov mov xchg jecxz push sbb loopne jle negl movsb idivb int leave imul mov sbb ss mov js cmp rep add cmp xor ljmp out (bad) sub xchg loop cwtl lret pop adc and out es xor vpunpcklqdq cwtl jl ljmp mov enter stc mov fidiv push insb cmp jmp sar adc pop sub push cmpsl add xchg mov inc sub ror push imul mov mov inc popa int dec daa scas lcall int3 pop hlt sub dec mov movsl jne (bad) shl adc call popa inc push add jb jmp and (bad) movsb cmpsb test pop aas adc enter fidivr sbb xchg test ret cmp es cmovle lret mov cltd mov jmp sti mov loop aad sbb idiv dec sarl cli mov xchg call pop xchg dec inc lods xchg sbb jns,pt lahf lods movsl icebp (bad) fistpll push add inc mov mov push xor rorl mov out pop mov imul sub aas int psadbw popf lds pop mov mov mov test inc jge repz scas fist push pop pushf dec adc lcall mov xchg andl data16 mov or out sbb pop cmp mov fcmovb stc loope outsl jg enter xor repnz push mov push mov cwtl or xchg jb dec and les adc mov test pop cs outsl test or lds daa jno bnd test jnp jl add insb inc xchg shrb pop test pushf adc dec fisttpll mov inc mov (bad) sub movsl adc dec push adc sbb outsb ds imul (bad) sub add pop mov out sub loop dec mov ret sti lret mov or and stos jecxz mov addl push ds aam shr dec inc and std (bad) hlt fnop sub xor sti sarb pop and xor int3 in cld jno hlt cmp sub loope or add call cwtl ret push shrb jp fildl add xor loop (bad) out lock push pop lods dec fimull xor lcall into insb data16 adc push aaa adc mov pusha dec add xchg mov xchg ljmp mov stc leave inc jmp jg data16 stc dec bound xor cmp push sub adc (bad) lret out dec push mov jne cltd lret (bad) (bad) movsb cmp leave and push pop mov mov adc mov movsb lret lock dec mov icebp push xor mov in push and mov mov mov xor stc lock daa fimull inc jl xchg mov imul xchg test mov jmp movsl mov dec inc push mov cmp lret cld fs mov push adc sbb loop ret imul mov jae cmp jl,pn sbb scas cmpsl lea push cwtl cmp int mov stos rolb cwtl dec in inc test mov jno mov push dec mov push mov nopl mov or imul jg mov jne mov mov push (bad) cwtl jge add bound mov inc cmp pop mov stos jmp lcall push es nop xor ret sbb or (bad) lods (bad) in xchg int3 insl pop repnz adc push divl cltd cmp cwtd int3 faddl jle mov in adcl (bad) and iret loop xor (bad) cmp pop insl mov adc add xchg pop sbb clc jnp addl inc xchg adc mov sahf adc pop dec popl cwtl int notb sbb sahf cmc les cmp test inc outsb mov ja js cmp xchg xor test add iret lahf add and xchg sub xor jno test sbb in jae mov stos adc aaa mov lea cltd insl jmp call jge mov ja adc test dec sbb xchg add into jb sub insb int cwtl pop sbb sbb dec repnz cs jne xchg mov out or mov cli sub adc ret mov psraw push sub xchg pand ss bound jle jle ja mov mov lahf mov xlat loopne xchg ljmp jno or sub out icebp ja or or mov adc cmp cmp movsb loope xchg (bad) divl adc out rcrb dec imul fwait std cmp dec sub cltd add xor jmp add jecxz (bad) popf sub cmc mov cltd shll cmp mov in fidivr or (bad) jo cmpsb in mov cmpsb test mov fbld xorb aas jns mov push das (bad) lock mov popa xchg sbb adc jl and cmp test mov push aas and mov popf in movsl dec test mov test xchg xor sub mov leave aam arpl jno fsubl dec addr16 lret repnz push dec pop je or popl lock cmp sub fdivrl jl lea jnp fsub es jb mov movsb xchg jecxz mov dec cmpsl push mov jae leave sub push out mov pop imul incl addr16 (bad) cwtl xor scas cmp jmp push lahf push xor lds idivb cmp lods or sub jp cmpsl jns xchg adc ja popf mov nop pop and lret xor test dec popa sti mov loopne cwtl cwtl inc push adc call movsl pop les rorl test jle and (bad) (bad) ret and sbb and push (bad) mov xchg (bad) or loop or rclb lea arpl jo sbb mov xchg pop fnsave (bad) nop lret test popf or push lcall scas inc sbb (bad) or ds fnstcw sti imulb clc mov cs lods cli mov mov add das sti push js mov ficom sbb enter out add inc mov adcb sbb into (bad) cmp push shr sub or data16 cmpsb sbb or and (bad) dec cmp dec bound ja int3 das aas jnp les pop mov in jle cltd push xchg add cmp push jae test add sub adc fxch popa jo dec ds out ja out int3 mov pop enter or dec push cli pop mov rclb dec jmp out lahf mov das pop fadd into xor pusha inc lods outsl lea push mov lcall nop or das sahf adc (bad) repz adc sbb sti cli das sub pop push movb adc push fimull jns xor inc or xchg mov (bad) sbb rcl fnstsw or mov les shll mov mov adc and pop insl decl js,pt adc mov lods jg cmp jno aam mov sbb addr16 xchg inc lods and pop arpl push xor push iret aam fwait scas (bad) mov push inc dec mov fdivrp mov mov lret sbb xor ds jg pop sarl cmp mov push scas adc (bad) or daa or lcall out xor push popa push incb and negb cmp pop cmpsl in dec repnz pop sbb adc sbb mov sub cld cltd push (bad) push stos in mov sub xor pop movsb sbb xor icebp (bad) sub xchg pushw mov mov pop pop xchg cs jecxz inc pop cmp out cltd add gs push pop sub aad xor (bad) movsl cld xor out clc sbb cmc mov neg adc mov or inc or pushf push jl dec pop imull fiaddl inc enter mov movsl (bad) add add scas loope jnp loopne mov sub (bad) pop mov pop fmulp xchg cmpb push push into add jae pop or jle mov sub dec push ret cmp ficompl stc nop mov (bad) cld xor or cmp pop mov ret mov mov xchg int3 and fistpl aas icebp mov mov ss sub mov cmp pop push and mov push fwait ret inc sbb sub pop repnz iret dec push jbe mov sub cmp les mov (bad) cmp or cmc mov clc (bad) stos fildll lock jne mov ret sub ret punpcklwd mov cs xchg jmp das int das or jge in xchg jb inc sbb cmp data16 jae cmp push mov cmp dec jno push sbb sub mov mov push sub scas leave adc pop dec jmp mov push inc sub mov lods mov enter lret iret int or lea das sbb pop push add inc mov fstl sub adc mov (bad) fs mov xchg xchg sub (bad) int3 scas stos xor mov out lahf in insl (bad) pop or push sub test inc inc add ret push stos mov cli lea jecxz arpl cmp (bad) dec jae xor xchg aam repnz dec insb lret pop fdivs ja mull sub add add into call loope fdivs cmc mull pop subl lcall mov and dec xor dec stc int cmpsb insb pusha inc scas mov dec out shrb das and dec dec cmc in popf sub stc xchg lds gs xor test ret mov push push or imul and and push mov jbe mov push scas pusha lret sbb sbb dec bnd aad loope (bad) rorb mov or xor lds cmp and outsl or cmpl fisubl divl push aas push dec push rolb iret loope inc adc daa inc add mov (bad) outsb pop adc pop mov cmp cmpl push ss adc fdivl sahf in add loope (bad) testl and lds repnz sub xchg in dec sub sub lods adc loope mov test dec call sbb cmp cld stos cld push mov (bad) cli es fistpll test jle pop popf shll jmp cmc mov or mov lret cmp dec dec jbe xor mov add dec sub pop xchg out addr16 not das sti clc cli pop ds pushf es adc ret xchg pop add clc sbb or and push mov xchg mov pop out loop xchg loope add or shll jg or es inc iret add (bad) and xor iret pop mov xor jnp gs cmpb push out sbb dec sbb ljmp xor dec push sbbl sub es stos popa test ret mov mov out lds sahf mov scas (bad) aaa xchg pop out cmp out sub in push push mov xchg ret xor sti (bad) sub ror (bad) imul test cmp dec subb scas movsl lock test xor cltd pusha jnp jae push pop xchg sub jb iret imul test pop rcll xchg or xor inc fnstsw scas out (bad) sahf lock lods pushf lds mov loope cmp andl xor in js add (bad) xchg jo ds adc pop shll ljmp jnp adc jl cmp out cli jp out (bad) lock jno dec sbb lret mov add push lahf (bad) cs cltd mov xor pop ljmp clc sbb mov sbb fimull pop fildll stos insl int add add ja aam inc push pusha sti sbb adc ss je pop push sbb aam mov (bad) lcall pop and xchg aam mov ja cmpb fsubrl clc pop cltd push (bad) (bad) mov cmp rcrl mov mov and aas inc mov pop in pop inc arpl es adc mov push xchg jl stos and loop (bad) fsts fnsave ds fcoms es and subl fisub push mov mov mov jno cli ss cld lods ds dec mov mov mov mov pop jmp repnz clc stos add pop jbe cpuid mov mov adc enter mov mov sub inc ret inc pop xlat outsl es mov cli pop cld and mov movb jp addl pop (bad) test xlat xor rcrl fwait out (bad) incl xchg push int ror or mov jnp pop mov adc inc or into ret imul cs xchg xchg adc cmp js les push icebp adc mov jg arpl (bad) or and sbb movsl cmp movsl jmp pop mov dec aam sub cwtl push and push shrb mov lods (bad) jecxz (bad) les adc pushf test (bad) and repz jmp lea ficomp test lret sub inc cmp or rcrb push inc (bad) mov pop xchg lods loop dec or fisubrl clc (bad) mov push in pushf lea adc arpl pop lods iret xor mov push xchg sbb fsts dec dec ret mov cmp mov and push mov pop and and pushf aam sub test test sar sbb adc cld xlat push mov mov test insl dec xchg ljmp or insl jl ss addr16 mov in xor mov imul int3 push mov jmp mov sub iret daa clc fbld pop mov addr16 jl rcll pop mov dec push mov mov mov pop adc clc jbe aas push cmp jbe out sub sbb jle xchg out xchg neg scas into mov sti daa outsb jge and decl jo cmp jno pop sub rcrb xor stos push data16 pop mov js mov dec leave push add lahf pop test dec fbld repz sahf push push xor inc enter imul rcrl push xchg inc cmpb imul fcoms int mov add testb pop cmp xor arpl jle lret mov aam pop jns daa ss adc cmp jnp (bad) outsl (bad) mov pop lock jnp adc hlt xor clc fild iret xchg loop push aas dec xor add orb jae jl pop pop mov mov (bad) and sub cmp dec addl enter dec cmpb sbb icebp pop (bad) xor cmpsl (bad) in or dec pop repz pop sub sahf add std scas dec cmp xchg movsl jo xor mov inc ret adcl dec movsb lahf and (bad) neg sub cltd js push push lcall movups sub mov push loopne and aam sub imul fldcw aad movsl xor out mulb int scas dec push into jns outsl inc test test cmp jo pusha jecxz,pt or dec sub (bad) and out leave jmp std mov jnp adc and divb jmp adc enter (bad) xor enter js jne jl sbb add aaa cmp inc shr aam outsl jecxz mov (bad) shl adc pop pop mov mov notb add clc jle out push daa adc and mov mov mov xor ss scas cmp sub js fmulp adc inc jae je lock sub xchg push fwait sub scas int sub cmpb test mov aas jbe rcrl pop sub movb mov out mov and outsb ljmp scas add je mov xor add sub sub inc add mov jbe scas jae gs jo data16 (bad) sbb cmp adc cs or jae sahf rcl aam pop sbb hlt xchg jne les pop test sbb aas lcall sub (bad) mov das adc adc test dec shrb (bad) xor pop jle or in pop jb loopne cmpsb xchg imul mov pop cmp cmpb inc jnp jecxz sbb (bad) mov inc adc xchg inc sub outsb mov movsb stc sti insb cwtl call jns cld pop or or pop and jbe xchg and inc or cmpsb mov adc int or or jge (bad) xor out push ds push jne add inc push fidivl roll movsb add pop cmp enter xchg ljmp mov and jp and mov or xor popa pop and add mov mov fcompl sahf fistpl xchg xlat cmpsb jo lds sbb jecxz roll lock xchg lds test xor and test push mov or xor in fsubl mov mov lods test shrb fadds dec and das loopne adc (bad) test cmp and inc sti inc pcmpeqw push inc pop stos punpckhdq addb jno rcrb out mov add in adc shrb leave dec inc adcl fisubr pusha xor cmp imul xor jecxz pop fisttp sbb adc lds jae out les mov jbe jecxz sub ds out xchg hlt aas cmp adc cwtl daa pop jno add (bad) cli insb mov lahf push dec test data16 insb mov pop adc adc xor mov xchg or lret insb mov push into add je lcall pop sbb inc jno mov adc mov and xor jecxz ljmp mov adc mov sbb mov (bad) test or jb xchg stos scas fwait xchg stos bound mov xchg mov stos xchg dec clc jle pop jo insb hlt fildll inc adc movsb dec gs mov test xchg inc insl inc mov aad addl mov jle outsb dec cmp pusha cs fs push mov sahf test test jmp sub adc sahf mov ja dec cmp or xchg or movsl mov xchg leave (bad) popa scas xchg stc inc push sub ljmp movsl popl fwait ret push in mov xchg xor mov mov inc jb packssdw ret or mov pop cmc imulb pushf fdivrl xchg mulb jle add sahf insb add jo pop and in mov push and ja push mov fadds loope xor or fldcw fisubl loop mov jnp jno test repnz push xor adc popf mov aas xchg jno jb jle jle pusha jb jne mov sbb pop jae call mov inc les repnz rorl pop mov pop repnz push adc sbb lea pop test insb sub fmuls mov movsl mov sub cmp mov push out push mov (bad) out cmp loopne sbb scas je dec je inc xor mov jo jge pop push fs imulb push mov jno mov or (bad) or adc fsubs cmpsl and dec pop xchg cli add push xor cmp call pop xor xchg push roll hlt insl ret mov mov mov imulb mov int push cmpb lea add sbb ret mov jle repnz cwtl xchg cmc jle mov into sbb insb aam in and jbe sbb and scas xor push cli pop dec ficom inc imul fcmove lahf xor pop fisttp inc jb dec or or imul xchg insl lahf jle or (bad) (bad) mov mov dec jae xor pop inc mov or test adc xchg (bad) xor cmp push jecxz xor in push jne (bad) repnz not daa (bad) mov pop dec and lods fcmovbe push dec imul push movsb and cmp inc sub outsb imul xor loope imul std mov push or adc xchg jb push dec fstpl fisttpll cmp repnz divl call arpl repz inc sbb fwait xchg or inc lahf adc (bad) fsubs (bad) icebp jle lods loop cs popf push jnp jns test inc cmp dec inc out les data16 mov push or outsl push dec je xor mov fiaddl inc adc jbe xor lods lods xlat push pop cltd in addr16 aad pop mov mov in in cwtl or mul int3 cmp outsl pop (bad) (bad) shlb inc sbb xor xchg sarb and aas mov ficomp push push and xchg push or add and adc xlat jnp dec mov or es push sub arpl sub jmp push es mov sub in out mov lahf fs (bad) inc push mov cmp mov (bad) icebp adc push adc int test inc jbe outsl add clc push dec dec int inc ret dec sub movsl and sahf hlt cvttps2pi cld leave pop daa lea inc fisttpll inc pop cmp enter adc pop push cmc ss sub stc insb fdivrs xor inc sbb ret icebp dec (bad) and push aaa cld dec xchg inc add ret mov and (bad) out mov inc xchg (bad) repnz push xchg or mov lret dec mov jmp add (bad) mov xor or icebp imul push pop xchg inc aam popf sti sbbl inc sub inc (bad) xchg fadd dec jnp pop inc pop fcmovne mov mov mov sbb movsb pop sub pusha out cmpsl sub cmp add or idivl hlt cmp ja and inc add jnp jmp arpl je test adc xor sub pop pop (bad) or inc aad ret push xchg sbb pmuludq ja inc (bad) mov das js out sbb push push jns scas pop jo mov imul ljmp cmp jecxz xchg mov push adc adc (bad) test adc add lods pop inc pop jae cmp ja mov xor in lret xor lods adc cli push mov mov sbb bound lret jg jb xor pusha repnz mov sbb mov mov push daa add lahf lretw popf outsb push fisttpl fwait popa mov jecxz (bad) call or pop pop stos andl test nop add je shrb lcall or adc pop mov clc xchg inc push imul push dec lret xchg inc outsl hlt arpl cld add loop int add jle or push enter fidivl fucom sub or pusha xlat test cmpsb scas (bad) and mov mov cs stos lret mov in dec xor ljmp rcr jle sbb push mov daa ljmp mov jo fnstenv jo cmp jp std mov dec outsl adc push cs push jne std cmp dec jnp jg arpl sbbl dec add dec inc les add and jns sub (bad) inc xor cltd clc imul jmp insl xchg arpl push inc lahf pushf mov sbbb test sarb insb shrb fwait add int3 lods scas lret jae add mov cmpsl lds xchg fild popa mov or ds cltd and sarl mov (bad) mov mov jo pop xor daa jge push add lods xchg ljmp or cmp mov js or je sbb divl and pop add aad repnz popa out sbb and cmp cmp scas inc mov cmp lcall aas icebp mov jp icebp and fldcw cmpsl ds sahf push loope frstor pop cltd (bad) sbb cmpsb lcall stos imul push and cmp scas sub ds popf (bad) xor xchg sahf movsl xor aaa scas js pushf das pop push lret jmp dec cmp in and add mov pop xlat (bad) or sub std xchg repnz and rorl pushl out repnz movsl scas sub lret sbb (bad) rcr or jns addr16 aam pop jge fimull into jae add mov sahf mov inc arpl mov cmp mov int (bad) mov ja mov pop push adc push cmp stos sbb ret mov jae aaa lock aas andl cmp test jmp add mov iret xor cmp xor adc lea out mov push mov and scas in xchg ret pop repnz and test dec int fcoms cmp test inc enter nop push into mov cmp dec mov (bad) addr16 lock jb fldt jl arpl jae push adc cmp test jp jns add inc lret shr ljmp jle or aas in pop rcr inc xchg (bad) (bad) mov cmp xchg adc or popa mov int3 ja mov loopne and cmpsb (bad) sbb jae mov fidivrl in mov push lret or xchg jne roll imul inc cmc call pusha into mov neg loope stos (bad) notb ja xchg mov je add inc stos test aam dec or jle inc push add and andb shl repnz inc rclb data16 adc inc xorl sbb dec adc nop add popa xchg mov mov jne pusha xlat sbb adc add imul sbb xchg xorl mov cmp adc aas (bad) or push (bad) and mov dec and mov cld shlb cmp sub mov push hlt xchg pop in jg test jecxz stos outsb repnz add adc inc dec inc cmp push shlb cmpsb pop add leave cmc (bad) repz lods add imul or pop mov mov arpl jge xlat daa (bad) jns imul inc dec inc jle mov push imul pop pop fidivl push dec enter sub stc gs xor mov fsubs mov push lock mov mov xor ficompl scas sbb aam and cli adc cmpb mov (bad) in adc test push out dec push dec ffree stos fild clc cmp xchg inc (bad) mov sub sbb push xor ss cltd rcr xor aam sti mov pop subb data16 dec push scas adc cmp sbb pop int3 sub inc jnp lahf sahf jno mov das push push daa fs add mov in jbe sbb push push mov push sub data16 pop test dec aas scas fnsave adc iret sbb cltd cmp xchg lods test test dec nop call lea jne mov insl xchg xchg sub mov mov faddl mov xor sbb dec js inc test stos movl int3 pusha lds add loopne and sahf push xor movsl loope aad fmuls scas repnz jle je push mov in imul sub push dec ljmp fistp lods out or pop shlb add jnp mov or int iret pop out pop jns fs mov cwtl out mov cwtl push out sti aaa inc hlt (bad) and arpl cs (bad) xchg push mov out inc repz inc test xchg mov scas (bad) lahf test pop push sbb cltd sub fucom ror test popf cmp (bad) ret lods xchg mov and pop stc enter mov sub xchg push fcompl iret dec mov insl mov adc mov insl mov xchg jecxz stos adc or sbb adc aas and and push push push xor mov fiadd bound cwtl cs sub outsb jmp fstpl in insl fbld mov xor fsubrs ss push mov (bad) ja mov rcrl sub aad push movq int3 dec scas xor xchg xchg (bad) sbb repnz das or movsl pushf imul pop sbb xchg jp jmp jbe addr16 aam pop insl mov dec clc popa jge adc mov cmp dec xchg sub jl lods and xchg popf dec popa sub (bad) push sub outsb fistpl push push jecxz or add jne or fstps xor fsubr push imul mov xor cs pop addr16 jg mov nop dec cmp repz mov jg pop jge inc jnp sub sarb (bad) lahf lea out repnz adc mov hlt test push mov fsubl das jecxz subl out ss data16 ja aam cmpsl dec ja sub jecxz and test xchg loopne (bad) mov pop adc das enter int (bad) mov fs call pop mov sbb movsb cld cwtl cmpsb adc add outsl mov mov push cmpsl jl cmp std ret pop mov clc and out jmp (bad) test cs int3 gs addl jo lock cltd sbb xchg sub and mov dec sbb adc push push mov aam dec popf push or movsl es fbld xchg sub ljmp dec out aad mov ja sbb sub stos mov pusha test loope xchg jno cmp add mov push int jnp cmpsl pop pop mov xchg cmp out in xchg add jb lret sub lea mov push inc push xor push mov scas sbb js loopne add cld add in jp sub dec jne cltd ljmp insl pop push cmp enter xor push push movsb jae dec mov outsl (bad) test out sbb fcomp dec icebp (bad) scas outsl inc gs popf mov (bad) cmp cmpl into jle jl jmp adc repnz push cmpsb rorl inc in push fisub lea pop pusha std push loope pop inc mov dec mov loop in addb mov pushw cmp test mov push pusha sahf add jg out push lods loopne mov inc out loope int orl xchg sbb fnsave and xchg or arpl aaa jnp xchg cs mov sar (bad) lock scas sub outsl mov (bad) ljmp je fadd adc rorl add adc test fadd notb test fscale test arpl std mov sbbl push test ret clc ret imul cs fstps xor int pop loopne,pt mov xchg aaa je sbb or rorl sub rcr mov cmp sub jbe cmovae xchg push repnz or stc xchg or mov xor popa imulb ja lcall (bad) jb inc xor fisubl out dec add mov scas stos aas xchg jge cmpsl test (bad) int jecxz jmp sbb lea jns (bad) ljmp inc daa ss sbb aaa int3 adc inc push xchg hlt mov movsl adc mov fsubs pop in loope test dec daa out addl mov dec cmp jno cmp and mov xchg xchg and dec rcll push and mov sbb pop cwtl ljmp std sub mov mov lret xchg add pop sahf (bad) fcmove sbb repnz jnp mov xor fiadd dec popf push or inc ror jns mov popl pop adc push mov and mov aas bnd das adc pop iret rcll inc or out jge push lcall xchg (bad) push xchg fdivrp sub cltd mov rcll sub jo pushf xchg ljmp aad out push xchg pop cs and add push fwait sub and xchg push dec mov pop pop inc bnd and scas mov jno xchg dec dec outsb jns addr16 popf pop or (bad) rorl and (bad) stos lods (bad) cwtl cs insb dec (bad) nop dec inc cmp int3 (bad) repz out mov mov ja into lahf mov loope lcall in psrlq enter or fnstcw pop stc xor and cld mov push cltd scas leave mov sub or xchg xor out sub pop movsb dec popa inc xlat arpl cmpsl xlat (bad) or jbe inc xor cld jp test les cmp into adc mov xchg test cmp mov xor fistp jecxz jmp sbb jno addr16 iret cld sub sbb mov es xor fnstsw jae mov addr16 scas mov in jo lea mov xor in fsub imul pop fnstsw bound insl pop mov dec das mov dec mov into loopne lods insb push pop cmpsb cmp cli and stos in aaa pop pop mov cmpsl inc adc fimull jge mov scas fisttp movl cmp dec add xchg inc mov sub xchg jmp add and mov arpl jecxz pushf gs sarb sub imul cli xchg fldl (bad) dec xorb loope std test mov jnp or out in addr16 fnsave outsl fnstenv stos xchg dec out cld push and mov mov cld movsl push sub sbb adc push arpl push mov push pop cmp add sub stos fadds rorl or loopne shrl loopne cltd les andl insb inc out pop jno loop outsb jo test jns iret cmc pop sbbb imul subl or xchg pop sahf add (bad) nop arpl push sbb cmp in daa add (bad) jnp sbb (bad) imul aas insl bound lods into test aam subb inc fldcw push xor in push sti dec test push rolb ja cmpsl es jae or in bound ror dec cmp xor jg jge pop repnz mov fbstp repz (bad) and sbb sub push mov loope (bad) mov bound data16 sbb sbb jo,pn rcr mov dec mulb inc icebp or and cwtl cmp mov stc sub xor xor shrb cmp xchg mov cmp ret aam jp adc pop xor push xlat movsbl xchg or and test sbb leave pushf pop leave xchg in push xlat pop cmp dec or in jnp xchg cmc jb sbb xchg lods add inc push push out adc aad sahf adc sbb int3 addb push (bad) in enter or fnsave push pusha or add dec fstpt lds lock rclb lods add jae or mov mov and rorl push add xor cmp outsb mov push or sub iret les pop rorl mov push dec (bad) sub jne paddb dec mov sub mulb push sub outsl sbb out xchg mov jge in xchg test stos data16 mov popa mov pop xor add (bad) mov jns fs adc scas and adc pushf mov repz aaa push mov mov mov mov mov xor lods ret sub lret rolb xor jg jbe not repnz ret push (bad) iret sub stc push pop xchg pop xchg rcr mov dec ret jnp pop out lods adc ja shl add push mov jae jge push inc or outsb xor das mov push jp or insb or push ja adc rcr sbb icebp decb ljmp (bad) (bad) cld pop mov adc cmc jp arpl and jb call jo lods pop (bad) mov push mov mov inc sub mov cli mov pop test ret call xor (bad) pop adc rorb addr16 cmp insb repz pop gs fsubrs inc movsb jge aad bound in (bad) sub dec push mov fild mov cld movsb push imulb inc sbb and aad movsl lea icebp inc cmp stos push fsubs rclb fs mov repz xchg out and mov insl cmpl pop sbb into pushf jp or nop es outsb or daa push (bad) xlat mov xchg repz negl push push push sbb push mov movsb cmpsl out xor shrl lods insb pop cmp sbb loopne jmp outsl test mov (bad) push adc cld lea rcrl lds mov mov leave jl and dec mov test (bad) cmc outsl sbb imull cmc pop andb mov test mov popf xor jns pusha sahf nop out repz out adc push xchg mov insb iret loopne cmpsl adc adc insl ret push fsqrt mov push mov lods es cmp jo movb or adc cmp or or in lret pop int3 adc and sub mov (bad) fistpll adc (bad) cld xchg xor imul xchg adc sub adc sub ss (bad) xchg fucomi loopne rorb pop and testl (bad) in jae pusha push cmp dec scas jnp xchg xchg xchg mov cmpsb adc lock mov fldcw xchg adc cmp dec sbb xlat inc cmp negl roll or mov aas sbb rorl adc sbb lock addr16 xor cli cmp mov inc ja cmp or insl mov mov adc std cwtl pop push sbb lods mov inc inc fdivl push mov or sbbl pop sarb fwait iret in ja lds mov clc mov pop push int3 ret pop fnop arpl aaa xchg xor enter dec subl xchg cmp fdivrs push xchg cmp leave arpl mov mov inc loop in imul icebp insb sub jbe fmull scas xor jno aas xor jmp sub xchg adc adc dec adc fs inc test (bad) xchg mov sbb dec or and imul push mov sub (bad) sub pop data16 das fldl dec mov (bad) fidivr mov (bad) rcll xchg loop in lret scas mov sub or xchg shll push das cltd out jmp mov lahf or and cmpsb add fucomi mov sahf push xchg jg popf loopne cmp sbb test movsb and pop xchg mov lahf sbb mov sub fcoms test dec pop jge insl dec mov addr16 movsb cmp dec xlat lds mov push (bad) mov cmc adc nop xchg into or inc pop rcrl push test sbb imul fnstsw aam xor and mov pop fdivrl sar mov insl cmpsb enter mov movsb push insb sub mov mov adc sbb sub push adc mov cmp out pop sub cmp pop pop stos xor pop dec pop lahf mov inc call push icebp enter mov cwtl nop fisttpll push cmp pcmpgtd scas pushf jmp testb mov loopne xor push mov and or mov cmp aaa mov shrl stos inc mov mov push loope jecxz cmp int jmp imull push lds sub insb jnp jnp cmpsl xchg bnd loope jb push repz in adc jns jecxz mov and sbbb pop shlb or gs xchg cld sbb mov mov outsb lcall or lods div stos mov pop stos or enter or cmpsl dec or inc jl movsb iret repz testb dec add pop sti dec mov dec sbb jge mov mov jno xchg mov shrl fsubrl mov ds leave sti cmp cmp or adc dec fsts pop jl call hlt (bad) loop int inc adc (bad) sbb pop int3 mov notb cmp adc shll sub xchg addb or sbb ss nop movsl mov sub or imul sbb fiadd jb mov xor dec mov enter scas xor in ret inc xchg xchg and mov and or (bad) in test fwait lret pextrw mov sbb push out sub mov add push flds (bad) fidivrl mov adc aas xor out xchg sarb xor cld mov ret pop insb mov nop cltd clc sahf lahf icebp lods mov sub mov mov add or adc push in cld sbb push je int mov push push mov or shlb inc mov and lods dec aas mov add jmp iret insl fimul xchg xor dec icebp and mov movsl jge dec js lods hlt sub pop hlt cld aam lds and (bad) insl jmp and das push push mov push addb std mov imul sbb sbb dec jp xorl pop pusha inc aam test add add mov jns xchg mov dec int3 inc jmp rcrl fsubr or pop mov pop dec pop lock dec mov addr16 sbb aas add sahf pop xchg add mov pop int sub stos push push cltd stos mov clc mov adc imul aaa or movsb loope xor cli popa rcrl jmp lahf fcompl popa lahf hlt mov fcompl lock paddb sahf add and (bad) and inc popa pushf out lods loope push add outsb sbb dec xor mov neg dec in mov pop mov push mov sti inc lcall (bad) lret or pop out divl outsb call (bad) scas pop jl icebp mov out (bad) and mov je dec jae stos jno push adc (bad) dec repz and lock outsb xchg or iret mov fdivl pop jmp sbb jle icebp cld jbe and sub ss mov leave push adc mov mov xor xchg dec aad jecxz repnz inc dec movsb (bad) mov fidivl push sti jb rclb or sub imul clc test movsb xor push push jns divb jg lock dec xor push loopne adc pop sbb (bad) mov pusha adc insl outsl rol jmp dec in sub sbb outsl int push cwtl xchg xchg and push xchg vpsubd and pop inc nop jg or dec cmp xchg jae sahf jno mov roll rorl rcrb pop cmp jg (bad) lods out or sub rol (bad) loop jge xor xor sub xchg inc je xchg (bad) cld cmc testb pop dec xchg ds loopne (bad) cmpsb aam cltd or outsb adc push xor mov cmp pop inc mov stos and dec (bad) inc push jo mov push clc sbb (bad) shrb hlt lcall and pop sub adc or outsb sbb das jae mov jo jb scas rorl icebp out or test and shr loopne cmp and dec push add mov cmp pop mov push cmp les jge popf sub jno les lea or pop mov jne jbe std daa in mov cli fs aam (bad) lret or push mov insl shlb mov inc sahf cltd fcomip mov scas mov addr16 xchg addr16 shr mov jnp sub ret out dec push inc (bad) push nop roll pop les mov call repz nop fistl std sub enter je xor pop mov je mov jg mov pop enter mov dec (bad) mov lods fsub sbb jno std and (bad) addr16 je xor jno jne jbe data16 and push or call mov pop orl shr (bad) bnd enter arpl xor fcmovu scas push add xlat cld int inc dec dec movsb ret les (bad) or jne dec xchg adc pop push dec xchg dec (bad) push mov lock aas dec icebp ficom test lock jb dec pop mov adc xor cmpsb je jp xchg fnop mov xorb test test add cli xchg xchg (bad) rorl xcrypt-cbc cmpsl push lock mov inc icebp mov icebp (bad) mov int loopne fsts sub movsl imul iret pop xor inc jle fidiv ja dec daa sbb or inc imul mov xchg mov sub icebp test dec or mov pop cmpsb mov mov dec ret mov adc pop mov sub dec insb rcr adc mov fisttpll inc sbb xlat or fisubl fnstcw inc sbb mov or jno jo xchg and imul sub fdivp mov popa inc push adc je push fisubr dec add mov xor lods sarl leave jns mov ljmp stos jmp dec jae ja inc mov int3 aam in pushf bound jmp pop insb aas adc cmp adc popf pushf sbb mov idivl rorb lods xchg xlat sub (bad) addb clc aaa (bad) push loope das lods rcll cmp mov sub imul sbb (bad) xor clc arpl and sbb jle adc (bad) jo lret lock adc xchg ror and xchg or sbb jg mov outsb int3 inc dec jmp lds lahf sbb pop icebp and popf pusha pop mov cmp mov das subl pop scas dec sub and pop enter and mov dec fisttpl cltd int3 push movsb pop (bad) jne pop aaa nop outsl lds pop jle adc mulb pop pop xchg ficomp int mov adc jle lods push mov ljmp insb fimul fs out mov cli aas (bad) daa jmp push je outsb bound xchg (bad) lock cmp push hlt (bad) arpl adc gs (bad) pop inc fldenv ja push inc bound in mov push mov cmp bound sti fcompl mov xlat pop out fcomp les lcall push add dec into imulb push test cltd push fwait push cltd sbb cli enter or dec (bad) aad clc mov pop out jecxz inc add movsl addr16 test sbb mov into xchg (bad) std ret addr16 xor xchg cmpsl push mov adc xchg in sub test js inc cmp mov mov jg sahf push inc pop fbstp jg pop lds stc pusha sarl jecxz outsb popa fimul mov xorb mov sbbl inc xor jne roll jecxz enter ljmp lds (bad) xchg sarb cmp ror inc cmpsl int pop xchg adc daa push sub popa inc cs mov mov bound push mov addr16 dec pop fs ds gs sbb jp les jg aad sbb mov cmpsb sub sub arpl jp jnp cmpsl mov (bad) das or cs jp movaps and inc ficoml daa imul jmp shrl out rcll cmpsl xchg int in fnstsw xchg and jb ja jne loopne or inc or cmpb cmpsb lcall sub out push std xchg mov push adc xor or xchg xchg push sbb in iret loopne inc int add jne mov mov rcrb fcoml jg mov dec pop add out mov fadd std add cmp jg or push adc (bad) iret sub sbb xchg xchg push repz and or lods xchg inc in and adc inc cwtl jae sbb and rolb push fisubrl cmp mov (bad) adc pop jmp push or cmc inc pop xor mov pop push inc push or ret xlat rcrl inc mov inc xchg fisttpl push jbe dec ret ljmp (bad) and inc cld mov inc stos xor add loop loop pop lret mov jp mov pop cmpsl push dec pop pusha add mov sub xchg cmp (bad) xor xchg fdiv xor out int3 inc ret dec pop mov outsl add outsl or lret scas mov dec xor cmp push fdivs jmp or pusha jbe pop cwtl cmp lahf or inc bound rcl fbld in push or mov add inc (bad) and cmp (bad) lock jge aas call daa (bad) xchg scas cmp jae into aad lods sbb addr16 cmp sbb (bad) insb (bad) xchg mov sahf ret push je cmp jae sahf pop cmp mov sti sbb clc cltd inc pop dec jle jns es mov out je sbb scas test bound ret and sbb xchg lret xor call push movsl out dec pop pop sbb jmp in sub insb push mov lret and mov clc pop sub in stos cmp inc cmp xchg jmp int3 mov sbb xchg fnstcw push fwait jae pop add das ja or inc int3 or adc sub add pop or in mov (bad) loope pop jmp sbb (bad) push sub xchg (bad) roll mov testl arpl add scas mov in imul out lock cmp out shll ja fcoml sbb mov cwtl andl cmp or out jecxz (bad) in test (bad) add ret idivb dec add lcall xor loop arpl and push insl push lcall (bad) mov jg push movsb add (bad) jb dec add aam cmp pop popa (bad) cmp stos sti mov daa repnz out sbb xchg pop (bad) cmp adc addr16 pop mov sbb mov xor inc mov xchg xor fisubrl daa ds pop xchg mov mov xor cld add xchg inc stos repnz xchg cmc add or divl outsl fidiv push push jo dec mov xchg fcoms les inc in dec out jbe mov push sub jo sahf gs gs adc sbb xchg xchg pop in mov mov cltd outsb push mov mov loope sub pop or test and cmp add pushf dec (bad) jg shrb mov push stos dec sbb popa movsb or out shrb aad xlat dec mov je movsb dec and or adc hlt jecxz in xchg jmp into xchg dec ss insl inc jmp sub mov scas mov fs cmp pop adc notb cmc fisubrl push fistp jne mov inc and adc (bad) out popa jmp mov mov or jae xchg movsb xlat out jo aam (bad) push (bad) into addl popa or repz imul inc xor out jne and mov mov mov into xchg fucomip add and sub sub xchg xor mov addr16 push int inc push xchg or sti mov int3 lods mov mov xor xor loopne cmpsl pop jo and xor int inc push scas pop jp xchg sub movl jecxz pop cltd mov lcall xor jb and (bad) in mov pop in add or or pop pop ljmp inc (bad) cmp pusha and mov pushf pop jb daa sub pop incl push jl punpcklbw hlt loope mov aam sti pop pusha lret rcrb pop jp dec add xchg pusha sti mov push out cmp leave xor mov or into mov sub (bad) addr16 sbb or (bad) pop jae stos int3 xor js iret xchg push loop inc push iret xor aad push mov daa dec cmpsb pop mov jmp mov add xchg jp (bad) call in push inc rorl fsubl fsubs push (bad) pop push xchg adc sub fld arpl adc push or mov fildl and pop or adc decb out push fcoms insb jno and add sub ja mov imul push nop sti out movl arpl cwtl push and loopne cmpl lcall adc dec mov je mov jae adc outsb scas mov xchg repnz xchg in mov lods push sahf and rcrl xor or pop mov add dec lret adc xorb ret and ret adc cmp mov and sti repnz test inc ret (bad) dec dec push lds ficoml push cmp dec or or sub gs and (bad) or scas dec jecxz dec out (bad) inc jbe leave aad into jg fldl and xchg dec bound cmp jns adc adc mov ret lahf jbe jno or xor dec pop mov fwait pop xchg jmp (bad) xchg lods and jecxz cli sbbl jg push push xor and (bad) neg cltd jle jne jg scas mov idivl mov mov das xchg js stos cmp xchg sbb lret es loope nop addb (bad) fstps adc fbstp inc sbb nop popa or int cmpsl (bad) sti out xor mov lret sbb ds mov sub clc jecxz sbb int aas pop rcrb add cmp or cltd pop cmp inc lods add insb push inc les scas sub hlt cmp setb sub mov (bad) mov in push sub (bad) dec mov xor lret es adc sbb mov in or xchg mov dec lret incl mov je sbb stos add inc push sbb stos push push (bad) lret cmp pop cmc cmp cmpsl jle movb and or xor ficompl dec pushf bound test sbb hlt daa or call xchg push leave dec mov stc adc addr16 movsl push mov cwtl dec and jno mov inc repnz punpckhwd cwtl xchg jg loopne jne test fisttpll les mov mov and xor loopne emms ja lds in mov inc pop je call add pushl mov jnp mov push sbb daa and lods (bad) aas mov jmp lock cmp test mov sbb add mov mov jns inc inc insb fistpll xchg push data16 (bad) je mov xor jbe ss add lock addr16 ss jnp adc or fldenv fcoml into das outsl inc or mov inc dec mov cmp mov cmp js imul mov pop xchg stc sbb xchg push dec je push pop fisubr call aas pop dec add add mov jnp inc xadd xchg test push bound mov test addb push inc pop xchg and sub push mov fildll outsb jle lods push add jl pop adc outsb xchg lock xor int3 aaa add loopne loope cmpsl cld ds xor mov ret adc or pop mov popa jae xchg or pop fwait clc iret mov mov je cmp mov rorb lods nop test pop push repnz jne xor bound mov mov lock mov adc jp push add aas les push inc or ret in cmpsl cmp aam sbb mov inc icebp mov xchg xchg xchg mov je mov push in push jbe and inc xchg inc stos stos xor or out jmp loope arpl bound mov cmp and loopne push mov xor in sti loopne bound int3 mov mov jmp mov test cmc sbb icebp lret mov dec xorb mov add enter mov cmc fbld ljmp lock xor (bad) xlat pop loop add adc (bad) loope and jb stc push inc mov fdivs mov (bad) jno mov jle inc dec mov clc push and addr16 (bad) jb cli cmpsl push data16 in push inc mov outsl xor sbb sub loopne out pop lods cli mov popa push fmull int3 inc pusha paddusw cwtl repz jmp rcr or iret or add sti idivb and pusha mov mov push inc mov dec je dec pushf test jl fdivs lods inc jae adc aam inc mov dec and xchg lahf (bad) mov pop jbe lods sbb je iret test mov pop push dec add push push insl (bad) and outsb jno jo mov push pop sahf fld shrb xor or fwait inc iret xchg pop dec add sahf mov sbb mov lock fcoms add mov pusha inc cltd cmp or (bad) pop mov int3 add dec push xchg bound in popa dec xor pop xchg in pop xor int sarl or mov add es lods mov fdivl push mov dec dec stc daa pop movsb aas xchg stos sub pop lea cmp mov lret xchg or xlat jbe pop pop mov mov test loop das repz inc call (bad) cli gs out cmpb fstpl add js outsl push dec mov xor cmp mov inc xchg and jecxz sti (bad) sub mov in mov loope scas cmp add sub imul jmp add mov iret addl xor cmp movq out (bad) jo decb dec ss xchg push mov xchg incb xchg sub mov lcall push adc rcr enter call fs push fstpl shlb test sahf sbb scas bound and add ret or stc sub jne mov mov push (bad) ja pop (bad) inc mov xchg cwtl add aas mov mov mov jle xor int xlat aam repz in mov push int3 push stos mov push xor inc mov cmc xchg les mov sar mov sub mov out dec cmp adc mov mov fiaddl or mov test sub jne or mov mov mov mov mov jl fisubrl int3 mov mov xor mov sub and mov movsb mov push push pop xchg out lods xor mov aad mov sti addr16 sub pop push xchg cwtl fbld push ja mov pop push xchg sub pop lret insb rcll je pop popf adc enter pop insb jnp leave cld addr16 cmpsl pushf lcall pop scas cmp cs cmp loopne stos ret loope lds (bad) mov xchg xor push mov push and mov (bad) jae lahf fsubl inc decb jmp mov into pop mov push push mov mov push push mov mov (bad) cmc (bad) mov xchg repnz add fiaddl or sar repnz pop ret scas jae (bad) fidiv jle imul (bad) mov es fs add sahf fstp mov xor lea dec into pop xor inc cmc pop arpl push ja sub imul adcb lahf jl in adc out lcall jecxz jns sub pop adc push jns xor pop xchg sbb mulb xchg push sbb xchg cld mov mov mov inc mov lcall xchg sub out push data16 cld ds dec mov and cmp jp mov pusha lret (bad) push sub sbb fildll dec mov jmp rol push inc ret popf ljmp sbb jl (bad) mov jge cmp inc inc (bad) add scas jae inc in cmp push int rorl push je sub push push mov negl fsubrs (bad) xor loope out inc stos data16 jmp mov add jl ss lds fstpl cld mov sub jo push xchg push push sub jb bound pop push shrl outsb mov add adc icebp sbb scas test push mov mov sbb mov lcall jecxz lret sbb mov sbbl mov jo ss and pop jg mov lret sahf push (bad) dec cmpsl data16 mov (bad) out gs out insl es in dec jno xlat adcl test cld movsl pop je cmpsl aad pop in pop (bad) call push fiadd cmpsb out in add xor not es out cli mov cmp cmp call mov cmc xchg stos in out jp push or push inc pop pop js push cmc sti das (bad) das jo jns test inc mov jns sbb jge add or or mov mov dec data16 sbb lods and push and and lahf (bad) mulb lret into fadds add nop mov jne repz (bad) shl lods (bad) add mov flds loope dec cmpsl jae mov arpl xor and js or jecxz jecxz fwait mov aam and jmp imul pop mov repz idivl add xorl pushf std call ja adc dec jne orb sbb mov mov add mov in loope mov mov (bad) out out and or loop dec push imul or mov (bad) stc lock mov ljmp mov push pop sub push jno xchg sub push sbb mov cmpsl fdivrs ja sbb arpl push notb fdiv cmp cmc sahf mov call or cmovno leave mov dec and adc fucom pop movsl and push jbe jp repnz fstps sub mov jmp js in adc frstor mov xchg pop movsb (bad) div pop in add cli out sbb aad notb mov inc add xlat cs test dec out lods neg into or or fcomi (bad) inc sahf cmc (bad) data16 sub cld or (bad) push mov dec iret xchg xor push daa pop xchg mov out sbb add jb int3 lahf (bad) ja adcl add and jecxz in sub jmp dec jno add cmp fldenv cltd mov in pop cld hlt jle scas ds data16 test dec push xor xchg aam jo push mov xchg in dec movsb mov mov cmp jecxz rorb aam mov and cmpsl test stc js cmpsl cmc arpl adc clc or jle xor pushf aad fs add pop mov jl inc mov leave xchg sti lret fs daa xlat cmpsb cmova out jns fs mov jo fidivr lahf sti (bad) cmp aas (bad) in lock shl popf jbe xlat pop sub movsb push dec xor cli popa mov daa jl loope mov fwait pop add adc in notb pop test jae sbb std and mov mov mov mov stos addb dec lahf ds add insl cmp (bad) mov jmp push and xchg xor movsl cmpsl int mov loope mov inc dec insb xchg sarb out js and (bad) xor xchg mov lea sbb sti fstl cmpsl icebp fdivrp or sbb scas xor fiadd jecxz mov addr16 mov mov push in rcll je push push fdivrl repz daa fucom dec inc lahf push lcall and lock lahf push cmp daa sub push fs pop inc pop in test cmp pushf clc fcomps sahf jl jo imul inc and jnp fstl je sarb jnp enter xchg enter xchg cs xchg jns mov nop les test in jg ss jns loope data16 inc adc cmpsl ljmp dec mov cli ja inc jns mov outsl mov sarb mov inc push cmpsl rcrb jno mov push (bad) sbb mov pop jmp push dec dec push adc bound xchg pop dec sbb push (bad) out jnp xor pop mov mov jge pop out xchg push jnp lods insb subl push pop pop mov das mov int3 mov mov jnp jle dec cwtl xchg aas lahf fwait icebp cmpsl scas pop sbb (bad) hlt lock jbe andl sbb lds ficompl lea fsubrs scas loop fist mov daa cmp lret mov mov sbb loop jge mov ds pop mov in push jp ror xchg imul push iret loopne je (bad) sbb pop cmp fdiv adc aad jmp iret fs (bad) mov inc fs aam ja mov add pop js jmp lds xchg xchg push dec hlt mov inc jbe and jne xchg ljmp pop adc mov mov jecxz lock stos mov aas stc mov push and adc cld adc imul sbb das repnz addr16 push pop sbb push lret push pop push in jns pop dec rolb (bad) ss xchg push xor push push popf dec xchg pop xchg mov push int3 out dec mov xor std fcomip jo cmc xchg data16 test jno add scas push into shll xorb dec jle and push dec jl bound push js stos or and adc add push mov push pop xchg dec (bad) xor loopne jnp mov or jnp loopne std incl jnp xor cmc ljmp shl sti push repz add lds dec jb repnz or mov mov divl cwtl sub mov add out xlat xchg push push xlat mov imull mov pop leave sub mov xor mov lahf (bad) jns outsl rolb pop push add or scas and mov sub push push dec js xor or rorb jecxz pop popf repz shrl fnop aam xor bound add cmpsb add out push inc test movsl in push mov sbb adc std sub adc jl aad loopne call and mov or jb pushl icebp outsb xor push jb mov xor push in mov adc pop fstl addr16 icebp or or inc sti fwait test ljmp pop inc fmuls pop shl jno fwait adc sbb frstor pop outsl out (bad) jg lea (bad) loopne fmul (bad) mov cltd and daa mull sbb cmp les idivl (bad) aam in scas popa jns mov or cmpsl lcall nop pop rcll (bad) punpckhwd pop push mov mov cli cwtl into scas (bad) cmpsl outsl rcr inc ret fsubrl sbb adc mov push (bad) insl rol push ljmp inc sarb mov movsb pop mov cmp cmp or in insb cli cmp loope movl outsl out fmuls stc sti cld inc sar push out fildl js pop pop fdivl loop stc in sub mov pop pop fidivr mov ja mov dec pop pusha into inc mov adc stos add aam lods rorb stos jns jo jne mov mov (bad) insb fiadd out jo or int das js dec jbe sti mov push out popa mov sbb push scas ret xchg ret mov push sbb jae mov mov jb popa insl xor add cmpsb cmpsl rorb cs daa jmp into mov leave shll inc jbe std xor shll fidivrl inc xor jmp mov adc dec fs fist aaa adc bound fstl push (bad) or pop pop std push notb test sub rclb clc adc data16 iret mov inc add mov xlat add jbe xor pop sbb jmp fs (bad) cmp add inc jp mov (bad) fimull adc in push pop lock jmp stos or out jb xor scas in cmp pop test xor mov movsl cmp es cmp mov out dec sbb mov pop cmp and sbb and flds mov push fdivrl jae (bad) lret xor pop mov add mov or imul dec fwait loopne std xchg call loopne arpl cmpsb mov xlat outsb lret add dec cmp pop mov test ljmp jp jbe pop mov mov dec or mov mov jns mov outsl clc jb lods fstl jne fidivl inc push fcoml push lods or mov lods jns pusha cmp jmp loop pusha mov les ljmp sub adc les cmp lcall out jne leave std gs mulb insl and sbb cmpsb pop loope shl sub sbb inc roll fistl and in add adc loop (bad) mov test cmp lock push mov ret dec jl jo and add push in jns fdivrl jg dec outsl fldl sub mov out fsubl pushaw xor mov or (bad) jbe test or jle hlt pop jp imul add out jl cmp mov dec (bad) test push add iret jmp ficoml scas test mov fcmovu je push test es mov sbb add pusha lods lock xor aaa lods mov pop cmp ss or imul xchg push jne jae shrl lea rorb xor or js (bad) enter mov xor mov or sub cmp mov jl sub cmp xchg scas outsl bswap mov mov jg test push data16 pop outsl test pop jmp leave pusha mov jp inc lods xchg (bad) or sahf and pop mov rorb repz push mov fbstp push jb leave test sbb aam out pop push daa pop xchg repnz or dec ljmp jne cmp lock inc adc das in mov inc icebp sub mov int clc add stc mov jge ljmp gs test in mov mov push sbb jno jbe (bad) push repz add int3 add xor mov stos push aam mov jecxz cmp ret cmp inc fmuls push popf xchg pop mov pop mov nop jg bound lcall clc xchg in lock push mov mov outsb insl (bad) in mov add mov xor push xchg push leave dec enter in mov jnp or add mov imul sbb add (bad) inc cmc sbb addl adc push lret dec ret in movsb mov push insl je mov rcll out (bad) jle out jp mov jno shl sbbl test loop adc shl fnstenv nop dec cs pop lret insb mov stos cmc add mov mov in xchg lods jns adc cmp imul bound mov cmp cli jne push mov cld or and in fstpl movsl mov stos mov cmp mov cmp (bad) sub addr16 scas sub push xchg es fimul jno (bad) push jo mov push fsubrs push je push (bad) sub movsl push ja mov cmp push scas or andb xchg out sub test lods push add sti ret popf test pop out cmp push popf lds test cmpsb cwtl rcrl mov xchg fidivr lds iret (bad) cmp jecxz jle xchg lds repz mov call cli cmp inc inc cli sub mov mov pop pop fimull nop push mov push sub adc hlt dec loopne in push adcl cmp jae mov lea cmp dec inc cmp aas je fnstcw iret out mov icebp xor (bad) data16 adc adc and mov scas and mov shl xor push adc inc les (bad) pop fadds mov repnz cmc lret imul ljmp cwtl or jg cmpsl xor cmpsl (bad) xor mov (bad) sub pushf jbe icebp pop aad and adc push (bad) sbb mov fidivrl xchg pop scas dec inc cltd mov cli dec push and fisub das xchg and xor adc in mov ljmp fwait aas (bad) (bad) inc dec aam jno xor jl cli loop sbb mov stos xor pushf fwait lar in inc mov dec sub push mov pushf mov call insl add mov insl mov rcrl mov (bad) add dec jmp pop jbe insl mov sbbb pop pushf add or mov cmpsb inc loopne sbb std fnop movsb or jecxz jb mov lea loopne mov jmp push rcl mov xor mov mov mulb stos clc sub sbb push or out pop iret push mov fistpll test xchg pop or and inc cmp loop or jp push cwtl sub rolb and inc sbbb dec lea jecxz cmpl and or push repnz cmp js sti push push or addr16 cltd inc lahf mov jae in and mov mov mov pushl jnp xchg pop lods dec leave jo pop bound sbb adc mov jle pushf inc sahf lds sbb jmp fs sti sbbl push rcrl test add sub cmc int addr16 mov inc rcl (bad) je stos test mov dec in es xchg out loopne (bad) cld das pop das (bad) test cltd push adc leave out xchg adc xor rol ljmp lock jne push addb in mov push xor jp or xorl cmp xor fmul mov push (bad) pop mov hlt jae inc in jns xor add or jbe push push and or mov outsl dec cmp fcoms jno stc sarb (bad) adc shrb dec arpl (bad) or jg adc pop push (bad) std mov addl dec pop mov sbb aaa and mov mov inc in std stos cmp or daa or xlat std (bad) ljmp adc push sbb aas mov xchg pop jg (bad) jbe and out loope clc pop pop (bad) push push mov dec inc mov (bad) cs dec fcomps lret ja pop mov sub pop xor jge dec dec je adc popa adc jmp outsb or xor cltd bnd sub inc into push js fs imul outsl insb fldenv fildl mov (bad) pusha in fildll test ljmp mov mov add ljmp or push mov mov ljmp daa jecxz fmull cld mov rcr dec in fstpt test jle (bad) jge ret jns std aam lret mov popf insl out dec xchg pop cmp test jl jns mov xlat test lahf mov adc mov scas arpl das int3 out pop cmpsb or outsb sbb nop adc fsubrl sbb push pop or adc jns jl sub push add movsb xchg rorl sbbb xor clc adc jnp lret and cld mov sbb add sbb push dec or cwtl insl pop cli or xchg out xlat lds (bad) stc push loope es shlb inc push xchg pop cmp stos ja lret mov mov fisttp xchg mov hlt stc and jb sub divb cmp cmpsb add (bad) repnz mov mov pop and mov cmp (bad) aaa mov sbb pop les mov xchg adc jle cmp (bad) ret dec dec xor xor xor pop sbb inc push mov subb loope sub pop mov inc xchg xor jns cmpb mov lret adc push adc inc pop push push (bad) cmpsl cmpsb je cmpsl jecxz adc movq stos mov icebp into mov xor and cmp push andl xchg mov push dec push jne jno in out adc aaa test inc repnz sbb cmp push aaa dec out add push inc xor call inc insb repnz jae (bad) scas roll xchg cmp divb mov subb lret push jg inc xor push mov add xchg fisub stos mov mov xchg out xlat push mov jno vcvtdq2ps xorl and lcall lahf xchg hlt jno jl pop push out js sub adc or repz insl mov repz enter add popa (bad) in adc jns xor stos push sti mov mov and push mov add push add fcoms sub pop pop addr16 hlt flds in nop push pop sbb mov cld mov cmp xchg fisub xchg mov fsubp rclb xchg and pop test out js mov adc pop aas or movsb pop shll aad xchg jns addl add mov test ret sbb mov (bad) insb push push mov cli cli (bad) fbld pop cmc mov movsl in sbb mov nop fcoms jecxz lret stc and or ret std mov sbb push sbb outsb (bad) shrb mov rclb jne ds hlt clc aas aas aas int add dec cld xchg mov xchg shrb mov mov lea sarb lock adc mov adc adc movsl imul sar mov lret add dec test or lods lea fildll xor sbbl out mov loop xor iret xor int int xchg test lds push inc xchg ss scas loop lcall inc (bad) ss sub fs xchg mov jp test (bad) aad jae mov enter (bad) jbe nop jmp mov outsb cli es loope xor mov dec call dec mov add mov push fs incb pop dec sbb sub or xchg inc mov mov adc sbb mov jmp cld fdiv sarb push mov cmp jbe outsb mov out mov cli mulb inc dec int shll movb xchg pop pop mov pop push pop xchg insl mov dec pop or fwait in movsl (bad) mov movzwl scas (bad) and add mov sub je scas subb movsb mov and loop push fwait adc sub dec adc jp mov test icebp scas pop fsub test pcmpgtd ficom or outsb mov xor scas iret ret mov js or lock fdivr clc inc mov push cmp enter and dec sub fnstsw icebp dec or popf dec sbb call pop xchg popa loope jne and int cmp xchg loopne loop out sbb int3 push aaa mov xchg and in push jnp sahf divb cmp mov in rolb mov (bad) pop or aas mov loopne inc insb push inc cmp enter sti adc xchg sbb int divb lea cmpsb pop add or xchg sahf fildl movsl pop cs sbb xchg sbb xchg test aas popf mov mov pop mov push xchg test in (bad) (bad) sub cmp add jmp mov xor sub arpl push ficompl (bad) pop outsb in cmp jbe pop loope adcl push repnz inc mov das and lock and xchg lret sub cmpsb cli in or stos sarb cmc xor loop aad inc cli insb push nop idivl push call sub lret in push data16 in fsubs inc jp loop test sbb add icebp xchg dec mov jns clc loope mov lret mov pop jne outsb shll (bad) in mov dec (bad) out insl push xchg ss xchg stos jg add or popa xor cmc aaa dec popa sahf dec add addl dec into mov adc xchg dec aam gs mov aad pop insb push jp test dec cmp or fs bound inc dec and mov sub sbb clc sub add mov stc ds ss cmp ret in fimull and insl lods loopne clc xor cmpsb aam outsl and fdivr adc jecxz sub mov jns adc in idivb repz or jbe or mov sub imul lcall out xchg std shr lcall arpl push mov mov (bad) daa cwtl cwtl out inc scas push popa sub fisubl pop (bad) xchg xor ljmp sbb (bad) pop push orl mov ret (bad) fstps rcrb pop mov sbb sbb mov mov jmp push jle mov ss mov clc ret mov (bad) rcrb data16 loopne sbb mov cmp addr16 icebp popf sub test mov ret cmpsl mov sub xchg lods popf mov pop jnp push (bad) aaa iret lods out and fisubrl adc lahf in mov adc jnp mov loopne and push scas sub mov fldcw in subl pop leave mov jp cmp dec ljmp (bad) jecxz popf mov cwtl iret mov mov subps ret mov inc das mov (bad) adc xor fcoml push and movsb test cmp dec stos xchg and insl jo add mov sbb or js push push outsl sub xor cld mov lds sub test pop fs sahf fsts and inc xchg dec imul cld inc jno js bound (bad) mov push add fdivrl cmp mov mov adc sbb out add int cmpsl dec stos mov repz adc rclb int mov xor fist mov lock mov pop rcr push daa hlt roll daa test lahf push movsb cli ljmp testl gs stos scas sbb (bad) mov test loop and dec nop je mov popa pop icebp aas and lahf mov (bad) xor movsl sub xchg xchg inc jge scas sbb jnp ds mov negl mov and sbb or pop fucom sub aam test push dec div movsl out jecxz xchg sbb aas mov mov pop xchg stos sbb stos mov xor xor test push sarb insl inc or mov add rolb pusha cmpsl or inc sbb lods hlt lds fwait js push pop and shl andl mov cld xchg fs cld faddl inc or add mov mov (bad) insb mov xchg das loopne cld rcr das push cli add vmovsd adc inc (bad) jno mov mov pop aad aad leave (bad) scas push mov cld or sub push hlt movsb aad xchg sti jecxz pop nop sbb push fdivs insl in dec fstpl jae mov lods cli and sbb cmp dec mov cmp jns cs sahf jno (bad) in push loop xor subl stos icebp dec lods sbb dec (bad) jb in insl mov sub dec fnstenv test stc scas dec mov push lods stos mov pushf imul xor mov mov push dec mov out sbb sarl xchg bound lret jno loopnew cltd inc out int mov jb enter mov cwtl pop (bad) xchg out fdivrs ljmp hlt adc (bad) jno fdivr rcrb jmp fidivr mov mov jae test add sub test dec gs or dec (bad) fisubl lahf mov push test imul dec mov andb push into mov and mov inc fnstcw add fiadd adc jle cwtl in mov cltd push in sub cwtl rcrl negb xchg adc inc mov mov pop add int3 jo sahf rcl jle and lea aas lock mov push mov jno arpl and (bad) (bad) mov (bad) jmp pop push fwait outsl pushl pop iret icebp repz gs out scas cmpl cmp xlat push mov mov mov pusha outsb leave pushf lods mov in in popa es sub (bad) pusha xor cwtl gs in adc pop pop scas jmp pusha xchg adc call sbb ljmp std mov cmp dec out and movsb mov int mov test sahf jge cs inc xor addr16 sti adc ret or aas dec sbb cmp daa adc (bad) or lods into test dec mov enter (bad) mov dec mov mov xchg xchg jecxz sub and pop and es outsb lea adc or leave test mov mov mov (bad) jbe adc jne sbb repz sbb xchg aas shrb addr16 ror jbe lret shrb je pop movsb xchg cs inc fbld (bad) cwtl add dec jo add inc and jg iret rcrl gs test mov subb push sub les jae rcr cmp sarb insl cmpsb adc xchg rclb pop and test sbb nop in mov xor lret call cmc ds gs test lds jne cmp and xchg sbb stos cwtl pop pop sahf pop xchg cmpsb xor add xchg in xor sbb add jmp shlb lods xchg fcmovnbe inc mov (bad) outsb xchg or nop ficomp or inc jl insl cmp push ljmp pop and jbe and cli add call (bad) and add (bad) or mov push loope (bad) pop fdivrs (bad) adc jge scas inc and jo daa rclb ffreep jno arpl push cmp push imul ficom fsubrp ja sub or add pop push mov add pop bnd js sahf loope sbb insb ret mov icebp or mov lahf and sub dec cmpsl packuswb ret stc sbb mov and mov ss (bad) xor dec pop jo xchg and xchg pushw divl imull pop cmp fldt lods mov sub arpl adc int3 mov and out lcall ljmp mov pop push das jg (bad) dec mov psllw bound xor dec mov ljmp xchg sub fimul mov scas arpl fwait cmp sar push jmp ret fidiv lcall mov cmpsb ret cs push xchg jecxz inc xchg mov cmc out cmp sbb pusha les mov push cmp sub int push pop adc outsl pop xchg or dec xchg dec sub dec out mov xor sbb push mov in stos cld loope mov jns lea and enter fwait test cld cmp aam adc movsb adc (bad) aad ljmp es push popf ds roll insl loope iret push rcll xchg pop ret pop or dec sbb outsl iret push adc (bad) fidivl sub inc or mov mov push movsb xchg sbb mov xchg mov je push (bad) mov test jg and inc adc in inc leave repz imul pushf addr16 push inc fidivr pop xlat in into xchg push mov mov scas pop lds cmp test or inc cmp enter inc ficompl cmpsb sti fcomp sbb ret pushl adc push push inc cli shr and xlat fsubrp mov inc dec pop mov ret mov adcb pop stc jg ret cs xchg repnz push ss leave xchg cmp cmpsb jge data16 enter xchg test push add adc and cs jge dec or popf jno xchg mov cmp je loop imul movsl mov inc or test push push xor mov xchg mov (bad) ret lahf mov xor loop sbb xchg pop mov sub loopne push dec push mov adc pop pop jb es mov mov pushf xor xor push int mov nop mov sarl adc (bad) (bad) rorl es je popf or mov push adc jb (bad) out jb jl xchg je and imul sbb pop repnz (bad) cld pop and loop std xchg fucomp push mov arpl sbb arpl ja xor jl adc pusha icebp dec les sub cmpsl or call sbbl pop mulb and jecxz sub mov inc lret aam push mov mov sahf pop sub and mov repnz lods subb or (bad) rep jnp xchg cli rorl sbb (bad) jmp movsb inc dec xchg test pop imul adc sbb adc insl sub (bad) jne sbbl data16 mov cli dec inc out in outsb popa and sbb and repz pop dec lret bsf or push ret (bad) mov test sbb jge mov in dec int3 gs ficompl and hlt inc push mov mov lods and (bad) fsubp (bad) dec loopne pop insl push sbb push pop fimul mov loopne movsb enter loopne lcall dec add mov xchg mov pusha sbb pushw pop xchg les and scas in cmp push push push sbbl fimull adc dec lcall inc jmp (bad) xor enter xor lret lret loopne arpl mov int pop cmp (bad) ficompl scas fistl mov (bad) jo adc sbb in push inc lcall mov adc xchg movsl cmpb shrb hlt outsl adc enter dec jge test mov insl sti in dec fs pop ja lea fwait repz cmp push movsl inc mov popf insb div sub inc push cwtl push xchg push test pop adc mov push cmp xor loopne xchg clc pop mov enter mov pop sbb out mov dec jo push jle unpcklps pushf stc jns lds inc dec jbe jg repnz sbb int lock cli nop test xchg loope jae aam je mov or test cmp dec cmc ljmp out push cs idivl pop negb gs cs call or xor inc addl lods cmc mov pop dec out jbe push xlat mov push je outsl mov mov cmp loop (bad) mov dec loopne mov adc nop mov test cmp xchg lock repnz jbe arpl dec hlt jne pushf sbb ss xchg pop (bad) pop sbb fwait ss cmpsb ja call jns xor pop and mov pusha add or mov inc inc sbb xchg ret adc lahf popf out (bad) jecxz push out sbb sbb cmp push mov inc out outsb sub imulb (bad) push pop sub loop cltd inc pop stos cmpsl fwait sub (bad) mov repz adc enter loopne mov mov fcomps jns jl or loopne stos jne inc lret test xor test dec fbstp or aam dec int3 imul in lods movsl xor fbstp sbb xchg xchg add cmp je aaa lds jno mov push cmp inc adc je aas mov daa mov jno xor mov push test sbb imul sbb xchg cmp decb xor pop push insb xchg inc leave mov hlt lahf push loope pop push mov jne sub and (bad) sub jmp (bad) lea xor out xlat jmp test mov mov jne fdiv frstor cmp jne jp mov pop aad mov cmpsl inc loop mov dec loopne jg xchg movsb test mov push je xchg and lahf ret push mov jmp repz lret int3 dec dec nop sbb imul mov (bad) lock shl sbb ret cmp inc dec jl mov and sub je jmp in lods fist pushf cwtl cld lcall sbb mov mov rcr sbb add in cmp pop adc fadd sbb test icebp out dec mov inc scas ret xchg adc mov mov cmc fisttpl out roll adc xchg mov pushf sub rclb pop jle bound cs xchg ror addl lods or push adc inc inc cmpsb mov fldt les out ss loope aas sub xor mov pop ret out cmp out stos add icebp inc xchg xchg sbb xchg out pop enter in ja sbb adc push lret mov push push movsl hlt aaa sbb xchg mov cld les pop jnp xchg mov mov pop rcll sti out pushf pushf movl jle mov cmp and int adc in ljmp mov sub cmp sub (bad) aas int3 xchg arpl or mov mov ss pop mov cmpsb ret insb dec (bad) aaa mov cwtl lahf mov es dec in add push cltd mov daa mov test lahf push mov adc cmp adc add into pop mov repnz xor mov or aad jnp xor movsl outsb push xor fimull and mov pusha addr16 xchg cmp clc aam lcall icebp fwait jb add shrl mov mov and jecxz jno sub lods push mov push cmp sub mov lock mov xlat sub sahf movsl ret decl mov cltd icebp cmpl sub pop cld push xor xchg dec sub xor lods add xchg jno lods push sub inc inc (bad) sbb xchg or dec push jne sti mov lods rorb std xor mov jp lds sbb push mov push movsl pop insb into clc mov lahf dec cmc in jnp (bad) adc sbb psraw nop adc ret lods inc js mov xchg pusha jne (bad) mov cmp imulb or inc inc lcall push insl add inc sbbl jle inc insl aam sahf ss sti cwtl sarl shr and push sbb jno or sbb in jns pop pop loopne cs loope pop sub adcl lahf cld pop insb dec mov pop dec je push clc mov in arpl mov cli xchg stc (bad) cmp adc add test xchg sbb rcll or adcl adc dec sub add hlt movsb add xchg js imul xchg add scas cmp xchg loopne cltd or pop fs mov scas push xor dec mov dec test rorb xor mov pop push (bad) sbb fs mov or in adc mov test cmpsl mov shrb fwait xchg pop mov les cmpsb sub mov jbe xchg pop daa xchg xlat and xchg nop jb inc ja push inc mov test aaa fmul adc in cmc mov insb mov mov in dec (bad) sti push cmp lret (bad) push fstl jb sbb adc into cmpsb daa push pop adc ljmp xchg in cld into ror mov and out (bad) ret fbstp pop cmp add stos sbb aad inc (bad) xor pop cmp int3 imul stc leave sbb cmp lods lret jl sub jg adc mov out mov test js xchg pop popf xor (bad) fdivrs mov inc push mov sbb pusha nop push pop jbe mov sbb fwait and xor jns rcrb dec jae xchg adc xor jecxz sub xchg fcoms repz aaa jne insb lcall xlat xor sbb pop fcomps mov addr16 sbb (bad) mov jmp lods daa mov popf sbb cs clc and stos ljmp adc enter push add cld lods add push add sbb shrl int ret jmp adc aam mov jns xlat xchg imulb jecxz xchg inc js or stos sbb test idivl jmp mov mov jg inc cmpsl cmc add pop (bad) into inc mov adc mov sbb (bad) xor (bad) sarb lock pushf jg pop (bad) sti sbb fucomi mov xchg xchg cmp xor jno add sbb sbb stos sub push inc iret (bad) mov sarl mov cmc movsl dec addr16 daa aaa cmpsb mov mov pop mov cmpsb lds shll lcall jmp jnp fcmove sub pop fisubl xchg mov inc scas cmp addr16 pop xchg lea aam jecxz push mov mov mov jge mov mov nop adc add add jo lcall add or scas fisttp aam xor mov sbb cmp sbb in (bad) push call sub fstpl dec mov and aaa pop loop or scas pop je les das lds adc jno xchg inc frstor (bad) jae push or das mov cmpsl in pop mov andnps cld push push sbb ffree push and lret cmp cmp xchg push mov jne cld leave or and xor sub les fldenv jo test or divb fiadd dec mov cmpsb sbb or sbb mov mov scas sbb nop outsl pop sbb sbb test fistpll (bad) fidivr xchg jnp mov and sbb inc push mov mov push sub push js jnp xchg scas fiadd pop sbb dec push scas inc insb xor push aaa mov or inc pop push fcmove addl mov ret mov push cmp jmp (bad) push jbe cmp shll jns iret pop cwtl pop jp jbe sub incb pop into inc mov sbb fs (bad) xchg adc dec sbb xor jnp clc cmp sarb lods aaa (bad) jmp inc jb aad in rcll sub mov fnstenv and dec xchg pop dec ja call sarb out hlt mov ljmp js cwtl dec daa pop (bad) loopne movsb mov add xchg jnp xchg imull fsubl aad xor out cs mov cmpsb dec fwait xorl and mov sbb xlat pop cmc lds and adcl fidivr hlt cwtl das addr16 adc mov cs stos mov pop mov loope divb push lds ds (bad) push outsb xor daa (bad) sbb push and pop mov xlat pop add mov jg fldl mov pop pop xchg pop and jmp out mov push and push test aaa jp mov ljmp mov mov and adc addr16 pop hlt aam mov sub gs sub addl or inc inc nop xchg cmpsb cmp jmp xchg pusha xchg push fs pusha nop sbb xchg outsb mov mov lods data16 (bad) dec pop push scas pop enter lret aad pop xchg push or and inc ljmp maxps pop adc inc dec clc and es mov adc push mov outsb gs fxch ror pop mov outsb in stc fs imul or into mov int3 enter pop xchg add dec dec aam xchg loopne or xchg loop inc xchg or imul das sbb push mov xchg mov and js xor jno (bad) xchg mov xchg mov scas roll inc add daa pop xor pop and push lods push cmpsl cltd shld imul mov mov and cmpb imul aas adc mov pop xor rclb (bad) push inc add shll mov aam sub mov stc pop in movsb push lods lods mov std xchg fxch fnstcw jns int clc jle ljmp iret je fsubl clc mov fist or popa dec jecxz add push lock xor cmp cld sub mov mov xor dec sbb fwait ja adc int sub repnz mov xchg xchg dec fwait popa mov inc in lcall loop mov mov pop lret or jl cli mov decl inc sub fstl lock or (bad) (bad) inc mov cli data16 hlt pop popf mov push xchg push in std pop pop imul pop ss aam pushf xor cmp adc outsl iret (bad) call sub sub or outsl inc mov mov add out xchg outsb fidivl movsl aas in repz mov inc add sub xchg jg dec push in lea arpl cltd aam rorb imul jp and cmpsb jae lret add sub loope add out out jge ret jmp mov stc push sti mov lock fdivrs pop xchg pop sti sub out and lcall loope into mov dec mov jle push sti mov add xchg testb data16 or iret rorb and leave sbb jne cmp or ds dec inc mov jg jp pop (bad) mov jo test jnp cmpsb and jo and (bad) lcall cltd xchg sbb jle fdivl pushf inc fisttpll push sbb mov inc dec test mov in imull stos movsl inc mov (bad) dec jb imul test (bad) scas pop cltd cli in stos aaa loop in push je shrb sub ret sbb jno or aam adc nop xchg mov repnz adc adc stos mov scas xchg lahf dec subl in jne rcl adc sbb jbe xor or in fwait out add or jecxz dec cmp popf mov jno sub loop sahf sub adc test iret push add cmp sbb dec jns iret mov iret pushf add daa gs aad clc pop sub and mov shll sbb lods or jne subb cmp push and imul data16 idiv cmp add popa das and pop lea cld movsb in mov mov data16 mov cmp cli pop jecxz repz adc pop pop sub frstor or xlat ret nop insb add movsb vucomiss push dec push data16 xchg aas icebp mov jge std scas (bad) jns test mov lds mov test test in push cwtl mov mov daa and mov and adc mov jg xchg dec ret mov pusha inc fidiv in addl sbb aam xchg add adc pop out sbb out lahf cmp popf add sahf xchg sub xchg in pop cmp sub jl enter fsubrs sbb imul adc std dec sti sbb push imul into sahf xchg adc adc aas adc push insl (bad) scas inc or dec in mov add aam movsl sbb xor jno add scas fwait aas pop or dec sahf mov sbb in (bad) lcall push outsl pop ds fadd pop sub les stos lea mov popl push insl or dec jp ljmp push mov push pop push dec repz test sbb gs in xchg mov push push scas stos lahf outsl lahf mov lea dec xlat popa inc mov xor and call lcall jo mov pop jae aas mov aas fsubp mov int3 call xchg sub xchg mov pop and (bad) hlt lods pop in jae sub insl outsb or mov aam (bad) cmc ds fsubs xor mov (bad) js pusha pop rclb rclb push mov push sub add push jnp jne xchg xor (bad) cmp mov xchg aam shrd mov scas fidivr push data16 mov movsb aas lea inc mov mov mov jmp lret rclb push dec test aaa dec push and mov data16 cld aaa (bad) cmp jns stos int3 pop xchg repz sbb sbb and cmp push xchg cmp iret ja xor (bad) mov cltd inc jnp in lds sbb cld icebp mov sbb inc mov push roll pop jae out push gs mov and out and mov lea cs mov jl sbb xchg test es clc dec cwtl push jl xor xchg lods adc mov jge push jo pusha gs xchg aas (bad) jg ds int arpl jecxz pop cmp movsb cmp out fsubrs sarb pop inc bound jp in and das enter mov idivl jae inc scas div arpl or ss adc (bad) fsubrl stc cmp sbb inc mov mov xchg mov pop stc fistl or (bad) or jnp into or sbb or pop mov cli pop lea dec add into adc scas inc inc scas mov sbb and rorl push dec (bad) xor adc (bad) int je loope (bad) loope les fwait enter aad xchg addr16 insl adc jb mov mov gs gs into addl (bad) hlt mov out or or cld popa ficompl add hlt int3 or pop aaa xor xchg in lds mov or xor fstpt (bad) adc cmp (bad) aas int3 inc mov ja rcrl addr16 dec jg mov in repz sarl pop mov push icebp scas scas or iret cmp push cld les or push outsb cmp dec std jge add mov scas mov popf or pop dec fsub mov aas jg mov comiss and jnp mov xor popa push sbb and loop push dec (bad) icebp cs fstpt inc test (bad) jmp push jns fucomp nop lret xchg arpl xor or dec xchg inc sub and dec xchg in mov xchg ljmp add mov std add das ljmp mov testb cmp push cld (bad) inc xchg cs sub jnp inc inc and inc in cld mov idivl mov mov xor and inc pusha cmp jbe dec call dec inc lods (bad) stos outsl pop outsb cmp cmp push mov mov sub mov jne dec popf movl test mov inc lods dec adc jp ljmp add and or stc and stos fmull roll movl mov add xchg data16 mov pop sub popl repnz aam popf out inc or push push cmp xor js,pt sub dec pop divl push test (bad) mov ret mov jge hlt (bad) stc int3 (bad) leave jo js add inc mov stc push loop popf mov ret test outsb jge pop push pop and xlat out test repnz inc jae pop fcmovnbe push or call fsubl ptest (bad) xchg les sbb and jb aam inc mov bound adc push psubsb repnz dec push ja lods test xchg or popa push jns mov and addr16 mov cwtl push fcoml lock insl lea cmp fmuls lret jge xlat mov cmpsb xlat mov movsb pop mov pop divl rclb imul and mov or xor jecxz scas lret dec and into push inc jg jle ss xchg pop dec push enter push stos add roll cli xchg test lea ret jno lods sub cmp jno daa icebp mov inc das test and outsl lcall inc jno daa outsl into repnz nop out and and rolb push out dec pushf cmp (bad) cld aaa sbb lret ficoml inc (bad) rorb mov xchg nop out inc divl dec jae imull mov pop inc imul fiaddl in insb loope dec and and cmp xor mov jnp cmc std xorl repz das mov mov push dec mov inc cs sbb pop xor sub mov push mov rcll jne add dec pop or inc xchg lret addr16 xchg dec and clc data16 gs cltd pop xchg push push fwait or dec jbe add sbb push out iret jo dec ficom mov xchg stos aaa or pop call orl punpckhdq ss fidivrl jg or ljmp dec mov mov ret dec daa leave test dec mov das xchg xor cmpsl in mov mov popf es cmp in and jbe roll sub cld jmp adc int3 loop (bad) jecxz xchg sub mov mov test xor fsts xchg mov pop into fcmovnb mov cmp push stos hlt mov shll push into loope fdiv xor and push jne popf cmp dec pop in cmc lret fistpl adc aad scas jnp insb jge adc or xor pop dec jno movsl outsb ljmp stos lret cmc cli mov sbb mov shll xchg data16 push xchg test ret out repnz jno sbb sbb push adc mov push or adc cmpsb or inc or imul out jp pop dec sarl aas mov mov add int3 cli ljmp inc cmpsl sub aaa fldl fistl xchg loop,pt xor roll mov leave daa in dec cmpl jmp lods fwait dec movsl adcl xchg and xor cmpl cmp xchg and mov cmp ja orb jg add fdiv adc mov popf imul ret mov inc jmp add out xor daa mov adc cmpsb adc leave xor decb dec sbb loopne push in stos push xlat daa movsb test mov adc xor inc mov jmp pop je arpl pop or sub int3 in sub daa jo add or notb icebp cmp je (bad) mov int3 add mov test sub xor repnz push scas mov rcrl test xchg dec and cmp cltd mov aaa push jo dec adcl push dec jecxz shrl mov notb pop xchg cmp fwait sbb jl jg into (bad) mov hlt ret pop xchg jecxz inc and loop into std mov addr16 xchg dec cwtl xchg cmpsl adc ljmp or addl dec inc fstpt pop pop mov jns adc in mov insl and jg sub cltd aad pop ss stos or into pop icebp outsb test adc mov mov rcr push es add jmp in lret cmc icebp fwait bound lea mov or bound inc sbb adc inc sub cmp popa jge aad addl call mov dec jmp test pop loop inc sahf (bad) inc push xor fnstsw loop les lods les daa cmp imul sub jle push es fistpll les arpl sbb call rol jbe or inc (bad) clc clc fidivl cli imul pop leave inc and sub sbb adc or mov aas (bad) jmp leave outsl call movsb jne mov pop and lahf mov mov pop cmp mov jle add mov and mov fwait xchg adc out xchg sub ljmp xchg out inc mov sbb fcomip roll jns rclb ljmp jnp out sub push jecxz lret out ret aas dec out cwtl call push push insb or jge mov mov cmpl movsb rolb push shll lods fdivrl (bad) popf xor sub adc inc sarl aaa xor or sbb popa inc sub pusha pop daa mov and fbld sbb xchg jnp pop aam xchg sbb loop sarl adc mov mov pop add mov js insb outsb jbe jecxz sbb xchg push fisub imul push pop sub mov mov pop sbb xchg decl mov adc rcll cwtl fs push and xchg xor inc sti add jo (bad) xchg xchg out mov movsb pop push int fwait popf cmpsb loop dec movsl (bad) mov mov inc jae xor cmp mov fbstp mov cld jmp inc frstor xor pop lds sbb mov outsb or sub sub je faddl bound push loopne mov inc sbb sub push fisttpl sti and hlt jne imul mov ja mov test xchg jns xorb fildl xchg mov fldcw jp and fcomps dec icebp mov fildl dec mov sarb aam movsl nop ficomp add sub jae out sbb sub data16 add aas add out cmp dec cmp addr16 mov (bad) call es jns test pop push xchg pop fisttpl mov add or pop jae orb lret inc mov sbb mov mov dec mov nop adc lahf (bad) inc lahf adc adc call push mov fwait push (bad) lahf and xchg xlat aas test xor pop test loope xchg xchg sbb leave insl sub and bound xlat out xor insl xchg and adc (bad) in sbb sub push decb mov loop push adc and outsb (bad) ret aas inc xor movsl adc cld stos adc je adc push xlat ret push mov jecxz mov xchg (bad) xchg cmpsb add or das out fisttp in scas mov dec stos mov mov xor push sbb push inc push mov jecxz jo or push dec fwait arpl push pusha mov jecxz clc xor out push ss rolb int3 aad in push jg fsubl inc adc fist sar in inc adc je xchg data16 icebp lret pop push inc int dec xor or stc rorb clc test in (bad) js inc jp sub out mov lock mov loopne cmpsl sbb and pushf mov gs and pop push xlat or ds push out inc or jecxz xor in mov jns jbe out jae push xor js xor std pushf pusha jbe jbe push push push fisttp jae sub cmpsl adc jge,pt fwait dec sbb (bad) dec push mov loop in aaa into je shll mov das ja and jmp cmp (bad) inc cmpl stc fisub fsubrp inc sbb push mov mov sbbb fs in jnp dec (bad) xchg hlt test jg sti push xor mov mov (bad) ljmp (bad) in dec pusha mov aas push ds out (bad) add outsb mov cwtl movsl jne cmpsb insl xor shl inc jne repz mov sbb sbb repnz jno popa xor inc fldl xor cmp cmp mov ret jecxz or scas insl cmc push mov dec xchg xor sub in inc (bad) (bad) jmp sahf loope mov cmp stos jmp movsb pop ljmp aad adc in lods adc push lock fist pop dec aam sbb clc jbe mov iret clc fwait sti out jae pusha xchg clc imul bound cmp ja mov test cmp out pop (bad) neg cwtl in mov in cmc pop test jle xchg pushf mov mov icebp cli das idivb jecxz movsl mov xchg inc lods sub clc jmp mov loop scas addr16 fs sbbl push shrl adc ljmp in leave call jno xor xchg in mov mov insl aad divss jne add adc gs cmp out or push loop mov jg xor iret pop add push fs mov inc lahf dec pop popa cld dec sti test sub and mov ja xchg mov sbb test mov jle mov (bad) div out ljmp shll xchg fistp sbbb stc hlt sarb addr16 cmp pop cli fistpl int inc loop or les outsb sti scas lods les push jp adc sahf sti jb cmp jecxz nop sbb xchg aaa enter in pop sahf insl cmp mov dec je out ja sbb sub (bad) jge je mov lods fldz adc mov inc pop xchg sub push lahf pusha pop cmp dec (bad) and adc xchg push jp aam inc inc iret jl cmpsb jmp in in sarb leave adc jns leave jl pop xor adc out mov repz or pop dec imul pop sbb xor cmpl jae xchg stos shll stc popf cmp int xchg push and mov in dec aaa jo adc aas push add out lahf out repz fidivl add inc xchg ret xor rcrb fs cmp outsl and mov adc dec mov xor or xlat cmc and xchg bound repnz (bad) pop add and in fcomip mov inc outsb mov ret mov pop jg insl inc fisttpl mov ret inc hlt mov in pusha mov jp xchg setne fs add push ja mov movsb call cwtl lret inc fadds add xchg out cmp push insb xchg shl push and rep ds and cmp rcll hlt push adc push cmp out ret stos xor xor sbb adc mov (bad) jl mov mov sbbl add push loope enter jnp decb pop push mov (bad) mov enter mov mov push nop push dec dec mov sub xrelease add mov push outsl xchg movsb xor push pop clc inc shrl pop scas in jno add (bad) addl pop imul out mov sti xchg (bad) insl icebp out jle fidiv sbb push inc pop xchg add jno imul mov mov jbe insb push cltd popa mov xchg (bad) lods test cmpsb outsl aad xor fstl cmp (bad) (bad) push les scas aad mov test adc out stos mov mov add ret aam mov jbe loopne xchg pop lods ficoml xor in inc and aad in daa push (bad) xor (bad) inc lds sarb sbb call js test pushf leave ret not sub sub aam test inc test push mov scas rorl lock ljmp outsl sbb jmp xlat ficompl pop mov andl aam stc add inc jecxz nop in lock mov scas inc xor (bad) pop call and mov fsubrs test cmp rorb hlt sbb sub clc cmp mov pop pop dec (bad) in fs ljmp and sub cwtl arpl pop (bad) xchg repnz inc ret inc mov (bad) cmpsl stos jae mov dec mov subl das test or cmpsb stos mov dec fadds rcr or add adc stos xchg cmp test dec fisttpl gs mov sbb icebp shrb js jg outsl push jg bound xorl insl movsl push or addl lea jl xchg ja mov sbb xlat dec stc inc fisttpl inc fidiv inc and cmp sbb movl and aad sub lock (bad) movsl inc inc (bad) cli jae fistpll (bad) or in aas adc cmp add mov loope imul pusha add mov leave add dec aam fnstsw popa mov in and imul test fcomps loope sbb bound insb jb daa jl clc pop add fwait addr16 push jg mov adc and inc jge lods xchg movsl mov call cmpsl jns push (bad) ss jo sahf or clc cltd pop sbb jp push popa xchg add adc mov jno movsl fist mov push lds pop cltd aad xor mov xor nop ret or lds jle xor adc sbb mov mov push out sub push int3 jo bound mov imul adc cmc and (bad) mov js mov je call mov xchg shrl xchg jge sub mov mov mov sbb (bad) xor adc (bad) dec mov push pop push add jl fidivrl fisubr ret pcmpeqw dec push add mov xor sbb adc ret sti add push pop les adc jge fmul lds and icebp fcomps cmpsb scas dec out mov pop jb rcrb dec xlat (bad) in and cmp popl xor pop push rcl add scas lea hlt cs push decl mov mov fnstsw hlt add leave loope xchg hlt jmp inc push pop clc inc js and push arpl std (bad) pusha stc push pop push pop mov pop add xchg inc lret push popf (bad) jecxz cmp call sbb cmpsl loope or cmp lret jge dec inc leave jae out call (bad) jns mov cmp inc cmp loope pop jle add jg xchg pop outsl pop leave pop fsubrs pop nop scas mov aas or sbbl sbb and sarl ljmp or into xor insb lahf test jo pop mov ficoml mov out and stc push add jo fsubr inc fisttpll cmovno sbb outsl mov aaa jb mov sub xor mov je pop cltd jb inc xor dec jb or push mov in inc push fs es mov jge std insl cmc test sub daa dec lcall adc push adc sbb xchg xchg in fcmovbe repz fs mov jbe scas pop xor out jle stos inc sti jmp add out cmc xchg mov sub or test push xchg ja ja in push bound cmpsb add jb cltd push dec adc inc xor jecxz daa or fmul xor daa pushf cmp xor addr16 jbe popf add pop aas int xchg jb mov arpl into mov fldcw (bad) mov int mov cltd push inc or inc add ljmp fcomip dec mov jecxz popf xor xchg xchg jno pop repz popa inc cwtl pop adc call mov (bad) fs outsb mov cmp out ret xchg flds fimull imul call pop fmull xchg (bad) sbb pop xchg push cmpl mov sub push in loope out aam add leave test mov aas fsubp and mov cmp mov jno jge xchg test sub cmp mov imul (bad) mov int loope mov mov out es xchg fcmovnu mov aad leave pop mov loopne sub or lcall mov loopne addr16 jns ret call mov add out cltd push and mov or or cli mov add xchg fistp adc mov das stc pop mov inc in pop add fldt (bad) dec enter fwait push xchg xchg pop fstpl jl push jbe iret arpl cmpsb mov lods ret jge sub or jae lcall scas (bad) xor xor fwait mov shll xchg mov sarb pop dec xor or add push mov lret adc sbb adc test lcall notb (bad) or (bad) ds out cmc sbb repz fist inc imul add (bad) dec cmpsb adc testl add ret scas lods mov adcl movsl (bad) repnz pop mov mov ret insb pop js rorb sti rcrb push fnstenv insb pop cmp mov and das mov or (bad) cmp mov push ja xchg pop pusha in mov xor mov xor int3 sub or jmp (bad) dec xlat in ret push and add jg inc (bad) stc adc push lahf add out (bad) movsl mov (bad) leave jl pop inc xor je js inc pop push push outsb leave pop (bad) push pop lret in cltd push xchg xor ss adc jb add sub fcomps and push jo das dec movsb or fistp mov addr16 mov cwtl pop lods xor mov xor lods cmpsl dec xor inc gs jp inc shll das xchg fsubrs or ret cmp outsl add gs pop push push in mov jmp mov mov jle xchg je shrb aas add or jns sbb xchg repnz sbb rclb je jge out fwait or dec lods sub mov push xchg cmp aas lret push cmp inc mov repnz loope push enter scas rol jns dec fcomi jle xor pop xchg aad (bad) cmp xlat imul shlb mov and in push insl aad or es mov cmpsb mov iret jo gs push mov push scas sub jb add jmp pop mov in (bad) dec mov fsubr cmpsl cwtl mov pop push sbb out lock data16 and mov inc and add mov fs mov cmp int3 jnp dec mov xor jnp lcall insb xor stos iret lret icebp icebp or xor les add jl popf and (bad) sub fwait lcall pop ret bound outsl test mov mov aas dec dec inc out in jno dec cli dec lock mov push jl stos adc stos sbb and sbb pop inc inc pop xor mov xchg jno add mov fisubr push cltd xor push cmp xor je jno in fdivrl add mov pop xchg idivb or sbb sub mov or in push cmp scas pop out out pop inc fnstcw mov sub mov insl xchg repz pop jmp sahf pop (bad) repnz lcall inc xchg aaa pop dec add sub fildl mov and and int pushf ljmp adc repnz cmc fisubrl mov pushf mov leave jae into (bad) rol loop mov sub dec mov xor fsubrs mov pushf push adc mov xchg sbb mov call jl add fbstp sti int aas out sti sbb add out jl mov push sti sub adc add pop jle stos lods popa lret inc push hlt aas adc push mov mov xlat leave outsl push or inc dec mov mov fidiv (bad) xchg pop or push mov popf call inc xchg add pop fdiv xchg cmp out cltd push dec push ret jl or imul rclb nop cs inc je out insl adc pop mov jno xchg lret add adc lods imul sbb dec or xor icebp cmp pop sbb pop pop inc push dec jae sti das enter in notl dec lret cmp (bad) dec or mov jp stos stc mov insl xor scas lcall cmc (bad) mov mov add jg sbb xor push fimul inc inc (bad) dec hlt push inc js rcr or inc sbb jp xlat rorb push and cltd fcompl and xor scas lret mov cmc xchg fnstenv mov mov (bad) mull clc fisub es jnp or dec mov pop and adc outsb sbb pop mov ret dec nop mov dec dec add pusha jmp sti mov and cltd pop mov fmuls dec cs js fldcw pop orl add push lret sbb jnp rcrl jl ds in es push mov add jl push ret leave xchg popf mov ja pminsw rcll push adc mov mov jmp loop aaa xlat fisttpll cmp popa pop fiadd aas or dec inc lock pushf stc fabs cs lock test ss mov jns mov stc orl push fldenv cmp and int3 mov arpl daa icebp xchg push ss lods stos inc inc (bad) xchg lock ljmp pop jne mov in insl push cmp inc aad pop int pop mov sbb cltd inc in inc xchg ljmp sub jb (bad) pop push fnstenv jge int3 fnsave in rolb cmpsl add xchg fcomps outsb lds lds stc dec dec jmp xchg adc xor ret jno pop mov mov mov inc fldcw sub push (bad) std mov dec pop or ja es pop in mov mul jb (bad) dec push xlat xor ret jecxz xor add cld cmp sub push mov sub gs xchg icebp xor push pop mov xchg int xor repnz repnz stos rcrb scas push sub loope insl xchg mov ja mov mov xor int lods or push pushf cmp pop pop jge testb push dec cmp fistpl mov push (bad) xchg movsl and push xor adc xor pop pop xchg hlt mov dec push call outsb sbb or ret bound repz jbe sub out mov nop push inc sub (bad) sahf repnz or stos xchg push jg add lods cld pop sbb xor arpl (bad) int popa clc pop jp out pop movsl xor sbb pop mov invd adc inc shll imul andb inc inc xlat andl (bad) out pop pop lods lcall shlb sub cmp dec adc push mov jo stc inc sbb addl ds into lea xlat ja push inc jecxz pop xchg jne rolb in ljmp daa mov xchg out (bad) je and fnstsw inc jb push out iret shr vpsubsb rcrl movzbl aas test pop ficom sbb mov and sbb fmuls les repnz fwait xor test das (bad) es pop repz cld mov jl add jmp push (bad) jo xor cmp outsl int xor sbb aaa movsl adc (bad) add (bad) (bad) mov or mov ret jno cmp mov xor and jl ja mov nop pop cmp outsl and cmpsb dec cmp loopne lahf (bad) add test and or jae xchg xchg and insb inc fistpl scas aad rcr cltd fildll arpl mov xchg adc (bad) hlt or jnp fwait rorb into mov fidiv lods add mov nop adc popf lret (bad) negl int3 lds mov rcl xchg push fmull dec and ret xchg or cld in aam mov in lahf xlat xor sub lret loopne jne addr16 jle loop arpl add xchg nop out xchg mov cli (bad) fcomps nop cmp pushl sub int3 adc mov gs loopne adc icebp call adc mov sub sbb or dec jmp and and mov out or xchg pop test push inc fisub and scas push add sbb lahf lret test or push inc adc sbb jae mov lea je jae and xor push repnz push mov loop (bad) mov (bad) push sub stos jbe es cmp iret inc push sbb cltd add xchg add xor clc pop jno sub push xor add (bad) add test pop dec inc jecxz (bad) ds js push aam dec cmp fsubl mov outsl repnz cmp mov push lahf dec xchg popf add loop xchg mov xor sub sbb and pop mov pop mov out scas fsubs cmp inc aas (bad) cli lahf xor or gs in js (bad) (bad) xor jne mov add test add mov push lods rorl insb mov jp loop movsl mov movsl sub jo movsl mov jns push orl addr16 push ss inc clc sti jge clc sbb repnz imul push mov and int sub jnp (bad) xchg mov push adcb mov xchg xor rcll cmpsl dec jbe pop enter stos pop rcll dec pop (bad) mull sub push xlat sbb popf lahf fwait pop push loope fimull lods dec aaa adc (bad) pushf dec test adcl pop sbb mov push je adc jmp pop stc pop shl mov add js jae fcoml fsubr outsl jecxz fs dec in push mov lock inc mov inc das pop subl movsb jb cli push incl cmp push mov adc mov push mov push lea fiaddl mov or cmp int3 inc (bad) mov and cwtl cmp sub ja dec xor xor cmp rolb push xchg ljmp stos ficom in sbbl mov cwtl cmpsl mov out inc loop out and out dec mov repnz movsb mov pop lret fldenv sub arpl push rol xchg and pop sbb add rcl cmpsl cltd inc mov and mov jbe sbb in sti stc orl fimul mov mov mov cli xchg pushf mov cmp je push lock cmp mov and add xor sbb xor mov dec gs mov xchg call xor sti xchg mov jmp sti int3 stos dec sbb and pop mov clc (bad) mov lahf fldenv xor inc lea movhps mov sub ljmp das sub fdiv cwtl dec mov add outsb mov test ljmp movsl fldcw pushf int out push stos dec mov clc adc js or mov incb xlat jb jp and mov rclb xchg mov (bad) lahf mov ds add (bad) in fcmovu cltd in jecxz xor leave inc xlat xor setae (bad) in movsb (bad) sbb sub ss adc sbb dec insb (bad) ficoml nop out adc and pop arpl cmpsb int3 xlat stos mov sub in test mov pop mov aad inc mov jne pop jg xchg or xor lea adc jmp dec sub in cltd test lea nop fs insb dec (bad) out in jns lods rcrl (bad) xlat sbb inc push mov sti adc (bad) or adc cltd and pop ljmp rcl mov incl daa cwtl or mov lcall sbb inc (bad) out xor in jle int3 decb jl jg es out or scas mov nop mov dec test loope sahf (bad) mov push pop sarl into dec sbb push inc sahf pop stos jle loop ss shlb mov imulb dec mov pop enter push adc inc add mov stos js pop iret adc jae dec adc ja cwtl ds xchg mov das icebp pop push inc scas aad test mov shr ja clc and ret adc ret arpl inc adcl aad mov push mov mov outsb dec pop in (bad) pop pusha cli rol adc inc dec xlat test loop,pt cmc mov inc insl test test xor cmp js arpl push (bad) loope fsubl scas or mov adc lods int3 mov mov test xchg (bad) (bad) push mov mov push daa lds idivb push shr jae mov push pushf cwtl dec jnp fidivrl pop stos inc test mov ljmp sub fcoms (bad) (bad) jb lret fnstsw add das xor int3 xor in and aas call sbb in in push cwtl xor jg shrw outsl hlt mov adc jnp lds test sbb mov cltd das and adc negb hlt je xchg cmp dec dec imul sub jle outsb sbb pop imul iret pushf out mov dec dec lea and addr16 cwtl out mov fmull fs xor mov push idiv inc imul aaa stos adc jmp and cmp xchg addl xor dec sbb xor pusha sub sbb xchg in mov enter pop cmp xchg (bad) popf in cmpsl rcl in jg rcrl jp pop and je sbb pop push (bad) icebp int3 xlat mov pop test xor out ficomp popf cmp popa push xchg popf add shrl fbld jmp jl sbb sbb xor or movsl mov insb jne add adc aad pop pop stos (bad) sub jl sub xor inc cltd mov test push dec inc fisubrl enter pop imul xchg cltd jns (bad) jae inc cli mov into cmp mov or jge mulb sbbl push nop decb dec fisub test loope movsl fs mov jecxz aam and inc jge pop enter scas pop loop push lds add aam clc aam xor mov fsubr fiaddl jae push mov mov pop js jae insb mov cmpsl addr16 std or into loop fimull and arpl and mov popa add loope and test stos (bad) pusha sub push loop js mov mov scas shl inc aas or pop jnp sbbb fnsave sbbl jle and outsl jmp or push outsb daa into jmp lea push jmp push ficomp adc repnz sub dec mov mov ds lahf aaa mov ror add jnp cmpsb int lahf cld inc stos sbb fdivl into inc push pushf or cld xchg dec daa iret ja inc leave xor sbb mov sbb in rclb sarl xor xor mov sub jne push lret call in xchg pop int loopne shr int3 je pop jle scas push fbld mov std pop mov xor sbb hlt or jl hlt push mov jle or add mov inc mov aas adc lea das push pop mov out mov cmpsb clc xor or aas mov or stos aaa jbe bound push fistl insl adc js aam jp inc arpl cmc push mov sbb (bad) (bad) dec sbb gs subb jne jmp es sbb mov (bad) mov int3 push pop xchg pop cld movb mov adc cmova inc dec push mov pop push std daa sbb daa jmp lds bound xor inc xor sbb imul xadd pop inc (bad) gs test ss mov icebp gs jecxz pop fildll aad sahf gs dec push mov adc imul xchg (bad) sahf push add xchg adc in xchg push push mov loope pop cmp dec mov shll and inc push xchg pop sbb jp in or mov push inc loop movsl repz lahf bound xchg pop scas push out and aaa hlt rorb xchg outsl addr16 mov js popf jnp lahf inc sbb mov rclb frstor cli jle mov pop inc sahf ds mov sub (bad) (bad) fidiv sub push pushf cld (bad) jge sahf stos and jl fisubrl in sbb (bad) out jb sahf inc dec xor fcmove sbb inc inc rcr pop mov xor xchg dec movsl cmpsb (bad) dec js mov mov lods test cmp sub mov iret jmp repnz xor adc repnz jl aaa xchg lock (bad) insl fs and dec mov dec jecxz jmp repnz cs les add test dec sti or mov stc sbb test rcr int and dec popa or (bad) ss (bad) data16 jne or and push mov inc jns fsubr pop cs xchg cli push (bad) mov scas ret xchg in es mov mov adc cli mov (bad) cmp scas in movswl faddl adc ficom je mov dec lcall test cwtl xchg inc (bad) xor arpl lret xor pop sbb jae mov xor movsb (bad) movsl push popl popa jg sub pop adc lock sbb mov mov out pop or add and push jle sbb (bad) loope xorl jp pop jno hlt rorb lret mov jle outsb icebp ljmp jns hlt jne scas enter xlat out adc add push mov in leave jecxz and stc xchg cld dec xchg and mov scas outsl mov cmc popa add fstps xor pop sub aam jmp sti ljmp int mov in out xchg shr pushf mov or jl push sub lods jae movsb jp sub subl dec addr16 or (bad) icebp inc cmp (bad) dec cmpsb mov xor mov (bad) bound inc (bad) (bad) mov test cmp (bad) push pop (bad) std jge out dec sti lods insl xor xchg fdivs (bad) out in movsb mov push mov mov xchg jb xchg adc sub xor bound stos or sbb gs (bad) mov ljmp std pop stc out (bad) leave jl fidiv pop dec loop xchg (bad) mov mov mov (bad) test test fcmovnbe repnz mov cld fsubl cld fistpll or and or pop rdtsc lods stc fisub jne jecxz cmpsl or inc es orl fwait sub sbb flds jle sarb sbb vmovntps sbb add push and hlt adc std data16 out into fmull push push jle adc sbb fbld dec hlt cs das aas sbb stc dec aas outsl cld repnz adc rcr pop mov cmp sbb sbb insb push cli jo rcpps mov (bad) aad adc pop les out push sbb jns push (bad) out and shrb loopne mov addb mov imul roll pop stc rcll inc pop lret popf adc les (bad) je ret adc les je (bad) xor dec cmp xorl (bad) fcomip mov loopne aam arpl hlt insl adc popf mov dec mov test push or jmp sub outsb mov mov cmp push push inc sti and dec rclb movsl sub test mov ret adc in lea fsubr mov xor adc outsl or xchg icebp xchg pop insb test test stos mov sarl lods sbb stc push (bad) mov stos in mov testb test jae fisubl loop xchg cwtl adc (bad) loopne mov sub mov (bad) xchg cltd ja lret adc das mov inc lret stos push push sub leave pop inc clc aam shr cltd inc pop (bad) fstpl enter (bad) cmp pop sub jle daa test (bad) clc adc inc ss inc cwtl push push xlat adc (bad) fidiv mov or cmpsl mov jp notb pop fwait iret invd pop je push lods jae xor cwtl out push adc ds jmp ret or or lea mov sub mov jl aad inc orl push movsl sub shrl lea mov faddp sbb xchg out sbb xor cld jmp push dec mov cld dec mov inc aam or jno push push ljmp add cmp int3 movhps (bad) repz arpl mov lods inc inc in fwait pop test push and and jno adc pushf or mov mov add jg bound dec sub inc test cwtl sbb cwtl lods push leave xchg xchg enter inc push scas sub inc adc andl dec lea (bad) test cmpsb push xchg lds cwtl rorb pop xchg cmc in repz mov lock lahf cmp dec jno mov mov mov and xlat mov shlb cmp ret stc inc int sub sub out ss and sbb inc pop mov jmp test push cmp sbb aas or (bad) mov in cs pop sub mov jb aad repz cmpl popf mov nop stc orl ret dec into push mov fnstcw lcall and fs das cmp adc or cmpsl adc mov imul mov cmp sbb icebp loopne stos scas xchg inc out push sub mov inc stos or fwait cmpsb pop out repz jl or loopne div hlt push inc subl mov stos nop xlat bound mov or icebp das leave and mov pusha add xor jne nop add cli aaa popa inc or dec loop and test stos lret cmc out fildll (bad) cmc cmp es jns push and in nop add lret stos cltd jbe mov dec rorb or rclb push int pop insl pop dec xchg pop pop iret sbbb jo or sbb fwait in fdivrl (bad) lea sub je jb insl in fisubr js cmpsl dec xchg adc outsl scas iret rol popf insl outsl cmp bound fcompl imull (bad) sub enter (bad) jae dec in sub (bad) fidivl mov sbb sbb mov mov xchg inc aaa dec adc sbb mov inc loope int shrl sti lret add out dec mov ror int3 lods stos or jno andb out into cmpsl sbb ljmp imul dec aad hlt and jae int insl les sbb mov loop (bad) cmpsl jge aaa lcall rolb stc cwtl fsubr test fldcw cli in (bad) adc mov fist jb (bad) mov xchg into icebp mov test (bad) mov cmpsb test add leave jcxz fwait es testl mov hlt (bad) xor popf xchg dec or jl lock push ljmp cmp scas outsb int3 jb fsubrl add (bad) dec cmp std add mov orl push or pop repnz mov repnz in sub sbb int sarl dec xor ficoml cmp cli xchg stos mov sbb jecxz cmp adc push or movsl jb sub lods dec xchg movsb adcl push push push pmaxub mov sub xchg stc stos dec xchg adc pop inc in loopne lret fmull in sub inc pop popa das dec dec cld inc dec xchg clc test pop out ds jne cmp frstor clc ds pop sub lods roll sub xor rcr lods addb sub call jno sbb stos addr16 loope sbb stos hlt movsl adc out gs icebp push pop jmp add popa dec ret arpl push cmpsb pop lock add loope xchg cli ljmp das xchg je adc ret push dec rcrl mov sbb jle lcall push cmp fnstenv pop call add insl mov or andl add jns jl popf sub popf mov sbb pushf mov cmp cli jl icebp mov dec packssdw les sbb cmp cmp push and in push notl (bad) in pop mov jmp rcrb and xor inc (bad) mov mov popa (bad) jo mov mov dec sti repz stos or mov xchg iret pop cltd pop and test mov mov dec pop (bad) (bad) test mov jle mov cli repz xchg xchg (bad) lods les addl fidiv mov loopne adc sbb (bad) cli adc pop lods or xchg sbb xchg cmpsl and movsb pushw or inc xor xor sti xor ss mov mov out js pop or ljmp cmp (bad) lds xchg push aad out imul add mov mov repz jecxz lahf cmp lahf addl pop in outsl mov lahf lea lret sub adc cmpsl mov inc cmp push sbb xor push aam popf pop dec lcall insb sub aaa lods pop push or imul popf (bad) in sbb ljmp xchg mov leave mov and in inc jge add lods pop pop (bad) adcb inc and stos cmpsl or jge sbb inc xor dec xchg incb cmc fcompl insb les xchg sub out es pop xchg test mov xor idivb sti and push (bad) lock sti ja pushf jmp adc mov ret add jl xchg ret or pop aas sub pop pop sbb test or and call and rcll pop mov lcall popa lds or or xchg insl fisubr out outsl mov stc int cmp push daa adc add lea lods lcall ljmp fistl adc add les call fucompp and push in inc cmp add flds xor lcall pop hlt add push mov inc insb or data16 in adc or pusha fsubs adc iret sub loope adc mov cmp mov lcall fiaddl cmpsb cmp sub push (bad) pushf popf jle into xchg daa orb scas pop in inc sti adc jb stos adc lcall xor inc out das test out test mov adc es add xchg mov lahf push gs enter mov sbb cwtl dec and sub push cmp (bad) mov (bad) and aas xchg test inc sahf lods ret push jmp fimul mov push push push push test fs jne lret hlt add dec cwtl cmp sub xchg jae mov cmp push (bad) outsb pop and fistp inc xchg xor scas push xor dec mov adc aaa xchg jne cmpsb dec into sbb pop cmp cmp push jo insl jne jge fcmovnu ds std inc data16 inc int3 or stos (bad) adc movsb xor test fcomps mov lea and adc shlb push mov inc inc in (bad) leave popf inc pop cs pop adc and cld cmpl add jmp dec mov fidiv dec hlt or into sbb aam cltd xor int3 dec push pop mov lret jge dec gs in adc jecxz sub fdiv test aam push push cld sbb sarl pop insl dec xchg in push test (bad) leave push sarb xchg push stc fisttpl idivl lock or mov shlb jmp enter movsl js jnp push repnz push xor push data16 jp jae push fimull push rcrl aas ret add lret adc or test lcall outsb es cmp push inc lods arpl adc xchg jae dec pop (bad) iret cs test lret ret js fildl out jecxz repnz adc dec xlat cmp mov push js jge lock inc sbb stos jno push (bad) mov fwait cmp dec shr sti test ljmp clc movsb mov inc out icebp push jg aaa or push imul push es mov jp jg lea fldt xchg rol jnp mov sbb cmp sbbl cmp bound mov addr16 movsb inc lcall mov sub dec jmp outsb xchg int3 dec fstl jnp pop adc pop lods xchg (bad) mov push pop jp arpl subl cmpsl popl sub mov pop sbb test ljmp sbb nop pop inc dec shr cltd fiadd and fildl jno jmp ljmp pop and xor js std lret mov arpl test test sub dec sub add jp jmp sub sbb inc pop cltd mov call mov aaa mov icebp and sub push cli repnz frstor lret (bad) add sbb in jp xchg sub in cwtl (bad) pop adc loop popf inc xchg push push test (bad) xor ja stc stos push jg xchg cmpsl scas les pop out hlt (bad) mov mov add pop notl inc xchg pop pop or adc pop or rorb mov out cmp xchg dec aas mov out mov (bad) fwait jb push aas lahf std jne xchg dec dec sbb sub popf xchg push cmp jnp divb mov les scas dec ljmp push leave dec push xor frstor pop cwtl cmpl sub fdivl popl loope movsl dec test xchg andb sub sahf cmp popf cltd out push scas inc in je mov inc fwait jmp cmp push jle xchg mov icebp mov gs push popf ja mov hlt jae and cmp or xchg fldpi popf insb xchg or fs (bad) jns push push aam jg mov inc arpl sbb test jl ret xor pop cmp and and bound inc ljmp cs cmp mov stc js mov pushf movsb ljmp negl shll xlat dec insl and pusha ds cwtl mov incl mov sbb and (bad) xor js arpl and pop pusha lods movsl jns fadds xor cli push adc aad add mov ficom push into xchg dec scas push xor in and test xchg pop aad stos into (bad) and lock (bad) fistl sub in popf lahf pusha xchg in pop jne cmpsb adc add xchg inc push dec and leave (bad) push push ja jg test mov mov push mov xor sub js lods push call int3 and lock test and rcrb xchg scas push (bad) xor inc shll out sub loopne xor gs xor repz push negb test pop jbe pop add fwait xchg movsb out dec jbe pop or push (bad) mov jo mov mov jge stc ds mov iret scas outsb xor or js mov mov (bad) into mov leave popf pop mov cmp insl sti bound lcall mov push jne pop inc push jo add out lcall scas xchg xchg mov add decl or dec fidivrl mov insl jp jmp mov mov rolb (bad) push add push dec fs cmp std aas add sar cmp mov add push call xor rorb inc rcl sub nop xchg pop leave dec int lods push and mov and dec aam xor and lea das and dec xchg xchg dec push (bad) cmp xor and fcom xor xchg or shrb adc and sti stc outsl pop cmpsl pop jb mov fxch add mov nop push jo jle out in repnz sahf or mov push aaa idivb mov loop aas (bad) les out icebp xchg js dec inc lret xchg and cmp add repnz add icebp pushf xchg fisttpl call mov js pop pop add mov cld sahf test sub dec pusha scas mov pop jbe fucom sahf sbb cltd pop push lds call sarl inc pushf test mov fldenv sub or std arpl sbb mov add mov mov cmp dec dec cs lret sbb insb or xchg dec (bad) jmp (bad) sub xchg mov sub (bad) pushf sbb xchg lds sub out and push push stos jmp out xchg iret js jo into ljmp popf pop jle pusha adc (bad) int3 and (bad) jne cmp cli lods (bad) fs sti insl inc add enter cmp dec mov gs stos adc sub sarl enter enter insb std push pop lock mov sub in lock cmp push inc jp pop push xor hlt xchg xor lods lods js adcl int3 lds and loope test (bad) jae dec mov (bad) push xor mov movsb lahf not mov cmp mov test (bad) dec mov mov xchg pusha fisubrl dec jle adc adc test mov movsl fisttpll lahf in push gs or ret stos xchg unpcklps negl dec inc dec loopne mov sbb outsb or test inc (bad) cld xlat dec hlt orl sub (bad) push call popa clc fisubl (bad) or gs repz xlat icebp jmp rorb pop cli cs or push pop cli stc iret imul jo ja xchg pusha push lods pop je ljmp in add mov ljmp lods or rcll clc xor sub mov mov push cmp lret push call and jg cmp cmp sub ror pop xor ret or add mov ds nop push inc insb movsl xchg adc push and sbb adc jg cmc mov dec frstor cmp jle inc cld in mov sub scas bound ja int3 sbb in shrl icebp mov aam and xor lret mov movsb dec cli negl and in stos int3 xchg mov lahf popf ja jle es xor push (bad) in out (bad) in xor (bad) fisubl xor jmp imul xchg inc and insl xchg mov xchg stos pop adc xchg mov jbe (bad) jno jle pop sbb sbb sti movsl stos mov xor mov jne xchg repnz jl (bad) aaa mov sub popf scas xchg mov arpl bound dec sub xchg xlat jno (bad) pushf not loop adc test addr16 pop imul jns fistl pop cwtl dec mov out stc xchg stos mov pop adc shr jnp std mov jg jge sub xlat sub pop add arpl dec out xchg push cmp and loopne nop dec movsb dec pop push cmp ret mov jp cwtl es insl ret mov cmpsb push in lea outsb test cmp mov jno enter xor jns aas adc cmp ljmp (bad) xchg fnstenv (bad) lret in jmp lcall xchg stos fldcw scas fwait rep pop inc fwait sahf add cmp out mov jmp pushf xchg iret mov mov cmc xor mov repnz push aad aad and test inc or add xchg xchg mov inc jle push dec or lahf jl int ds rcll mov jnp adc lcall mov pop lret mov jno push pop rol loope push mov ret pusha rcrl scas mov enter call dec xor pop lahf out aam xchg mov inc jg pop mov pop cmc sti inc cs cmp sbb cmpsl cmp sub bound add out jo sub inc or pop mov mov cltd jno aam mov push ljmp adc mov insl sub push adc fnsave out mov cmp xor cli xor test or fidivrl mov sti std daa or add mov xor lods pop xchg mov mov repnz sbb dec into mov (bad) cmp in mov or fiadd ljmp stos pop test test fld mov push xor testb dec cli add fs or pushf or repnz push xchg fcoml xchg arpl mov lret push out divl scas cld (bad) add stos mov and stos cwtl sar ja fstpl or mov outsl mov in mov sti and lahf sub out mov pop lods ficompl pop outsl (bad) lcall outsb cmp sbb pop pusha dec mov push test sahf and sarb xor mov test leave push pop jno ficom addr16 aas xchg inc or mov sahf repnz or out xchg adc movsl push scas cmp mov insb (bad) insb das stos stc test das push xor (bad) xchg (bad) xor push pop fisttpl pop fs sbb pop bound dec fwait sbb mov std pop daa daa xor mov sbb fdivs jmp cs push test jle aad iret inc popa pop xchg xor inc ljmp scas sub jbe dec loope shrl lahf (bad) cmp insb mov outsl ss mov leave scas lret mov adc dec lret mov rorl push jae pop adc and movsl pusha mov xor es add rcrl ja mov pop (bad) lods das xchg loopne cmpsl cmpsb hlt mov mov push arpl jo (bad) pop orb and pop pusha add lods add xchg lods jmp imul mov rcr add sbb push leave pop sbb push sbb ret out dec sub fidivrl lcall test dec cmpsb out push lock jmp test and mov cmp xor pop add xchg and rcrb and pushl lock cwtl xor aas jnp inc lods or lea sbb cli xor out jge adc mov and int add (bad) inc inc pushl imul test sub cmpsb mov out add and sub (bad) pop inc dec gs hlt loop (bad) mov inc sbb xchg daa leave shlb and xchg adc or mov ja test inc adc pop and fdivs jnp mov push lds fs sub fcomps cmp sbb hlt push sub and cmp stos pop aam add sub mov imul test pop sub or mov ljmp shlb mov cmpsb add pop fistp jecxz jg out pop dec dec inc inc daa cmp mov cs dec pop je cmp ja lods sbb ds aaa cmp and loope and sub dec xchg cmp (bad) fldcw dec sbb js inc lock inc (bad) mov xor mov xchg scas adc cmpsl mov test adc sub mov outsl mov mov (bad) rclb jnp push or movsl cmpsl add add dec and cli int3 movl flds lret or sbb std (bad) sub pop jp ja das fdiv mov jns jmp mov jno stos fwait pop lea mov dec jmp lret fstps mov out inc jecxz sub or mov push and mov sub pop mov (bad) xchg lods stc cmp cmp loop or fldcw cmp cwtl sbbl jbe and movb jmp sub dec test sbb xchg int dec imul ror adc dec repnz xor ss cmp rorl and stos (bad) pop cmp mov dec push test lock loop sbb mov test push lods dec sbb std pop (bad) sub mov xchg lods and popa jmp lret xor ret movsb inc mov scas or jmp jle cltd and outsl mov rep xor xchg into in inc int sbb dec mov iret pushf stc mov mov iret pop pushf fs mov gs popw push dec test mov adc loopne cmp (bad) mov pop jne fdivrl adc dec push lods or pop scas cmpsl jp ror rol lods clc es not sub ljmp cmp test push mov push mov popa mov sbb mov inc aas rolb mov mov xchg adc call sub and dec outsb push and sti mov mov test mov sbb xchg mov mov test pop lahf xor repz in pop popf daa mov cmp jns popa jne stc (bad) push pop mov fsubr mov add enter push cwtl mov jbe mov add mov mov lahf inc loope roll xor mov lods sub mov (bad) cmp sti in clc or (bad) pop pop mul stos jb mov (bad) mov dec lods mov enter rclb sti mov xchg into sub in lcall cmp sarl leave adc je xchg mov cmp inc add push repz inc dec mov arpl mov and (bad) xchg insl sub mov nop in jnp mov cmpsb outsb cwtl sarb sub mov popa and and pop arpl ja mov jne push xchg adc or ss data16 push outsl es jb ret repz mov rcr mov decb dec sub lret mov mov inc icebp jge sbb and jae (bad) mov std push xchg lahf pop push int3 repz sbb shlb (bad) jo dec inc aas jne pop mov jnp lret cmp push icebp bnd test mov (bad) xor cmp mov mov mov sub mov pop test in ret cmp jns dec dec xlat sbb insl pop cmp mov pop (bad) jne popf dec inc scas call mov sahf mov notb xchg aad pushf ror lock mov sub ret cmp movntq loope xchg push xchg mov out sub std jno nop cld xlat lods pop (bad) (bad) test cmc imul jge loope loope mov faddl ljmp call cmp or sub mov pop (bad) cmp es lods icebp roll cmp xchg sbb nop push cmpsl push xchg inc or fucom fcmove add and and mov fs pop mov dec xchg jae out xor hlt jg push push aad lcall jl pinsrw add bound push sub vandps push mov data16 (bad) push hlt sbb or xor pop fadds cmp mov out les pop pop pop inc xchg addl xchg add inc cli daa fildl push mov mov jo pop mov sub mov jg or push add mov inc or arpl inc pop test int xchg sbb jae icebp dec add mul test (bad) pop xor jnp stos data16 ret push aad push sbb cmp sub (bad) loope scas (bad) jae cld add xlat lock ljmp jb adc (bad) ffree pop in (bad) bound pusha mov sbb fnstenv loopne adc shl cmc loop mov cli mov pop fidivr icebp test adc (bad) sahf (bad) mov in or ja lock sti jecxz adc push mov push cs les sub cmp into jbe xor inc adc in pop ds push cld aas ficoml mov pop icebp ja mov xchg cmp pop add lods push aas mov int3 (bad) in inc push bound ds sbb outsl pop push push repnz imul out add mov incl dec pop cmp pusha push mov cmp jne sbb in jo cmp das ds pop mov mov ficompl pop mov push jecxz dec inc mov fiaddl mov sub int3 mov xchg and mov pop and fwait in inc jne jo mov iret sarb mov sub jmp repnz leave push jl and xor in lock sub testb sahf inc adc mov dec sbb inc mov (bad) clc std cmp push inc pop adc mov dec out push jnp push and jp mov andl into jbe jae ss paddw ror call inc xor dec push mov cwtl (bad) cmp (bad) xchg fidivr test mov sub mov mov and ret pop adc and adc pop insb pop cld lods adc subl and push dec les in pop xchg sub xchg pop mov pop loop push xchg or and sbb or sub clc les jne jmp xor (bad) daa jg adc pop push in mov inc negb fidivr add lcall lret mov call push mov iret push jae pusha cmp test fimul sbb mov push addb mov pusha inc inc jp sub push lods mov fbld jp vunpcklpd cmpsl mov cmp out loopne lods lods inc pop jmp std push rolb ja in adc in daa mov jns popf jmp or sarl inc fist xor mov and repnz addr16 mov ss inc (bad) pop xor sbb xchg outsl aas xor xor or testb insb test adc mov out std and and icebp add xor push add sbb in add je push dec push mov or cld insl jecxz insl popa mov test cmp mov jle push and adc jg bound push repnz mov push push inc fiadd ss fcom push or (bad) test inc pop into lcall les sub jmp and enter jno rolb cmp mov jg mov bound mov fmul add test (bad) pop pop push lret mov int jne dec dec sub ja xchg xlat cs repnz out nop cmp ljmp les push sbb push xchg pop arpl sub xor adc sti aas jl jbe jmp xchg push adc xchg lods rcl mov scas shr in ja push fmuls sbb jo shl imul pop adc jmp in dec push insl pop xor jns pop inc mov mov jmp mov aam insl cs scas ljmp and int scas (bad) lea cltd aad adc aam mov add addr16 lret mov loope inc sub iret adc ficoml sbbl out mov xchg fimull or scas push xchg int3 popf mov and (bad) jle cmp and fildll push pop daa lds je mov out shrb rclb sbb add or cmp adc cmpsl jmp xor push inc cmp inc (bad) dec test pop cli jno in cmp mov and adc insb into and push hlt outsl sahf addl jns and push int3 insl inc lret (bad) dec sub ja pop and pop and sub icebp add popf imul mov rol ret jg xor adc sub fnstenv mov or mov in imull xchg (bad) cli in leave enter rorb cs inc mull dec adc mov lea aad or hlt pop lods lods je shrb or jb pop outsl inc in mov fwait sbb pushf sbb mov aad (bad) int3 aam stc adc aas aas std ret mov push adc lds cwtl mov inc arpl mov (bad) stc cmp lret imul or sbb in push xor dec nop imul rcr cmp scas or faddl cli inc mov push aas xor jns sub insb xchg cltd test nop and jo imul mov pop sub scas orl cltd outsb dec mov out add ds mov (bad) sbb daa daa sub iret cli dec out repnz cmpsb adc out inc xchg fisubrl and xor cmpsl dec pop sbb rcll mov mov loope sub mov div cmp or imul or or mov ficompl ss dec icebp mov in insl push arpl or stos jp jae fs cmpsb stc ret mov int3 mov jbe mov xor ror sbb mov out (bad) mov push fbld mov jnp xchg or ret pop push mov jno dec pop cvtps2pd cmp cmpsb int cmp push stc mov inc ret mov pop addr16 ja xor mov push (bad) das add push push ss fstl push rcrl add add push sub into mov fwait out and subl fstpt pop data16 repz (bad) jb mov pop jge jbe xchg adc and lret (bad) cltd testl push mov jb out and pop cwtl xlat xlat push es ljmp jecxz inc into dec enter dec sbb imul jns sbb add jbe jmp add jg cmp (bad) mov sub xor dec cmp aam icebp aaa or xor add ja sub inc add sbb inc scas push stc mov sub mov mov dec sahf fs test (bad) rcrl mov cltd lcall adc dec out outsl jp call adc fcomp maskmovq notl mov into out adc lcall (bad) cs xor push insb mov pop sbb add rolb add insl dec insb ret dec mov sti push mov test hlt push sbb aad movsl fnstcw das icebp mov mov cmp jmp loopne divb pop jl push lahf jns sbb xchg jmp insb int3 cmc jl scas push mov lret sbb mov pop sub fisub leave and cmp xchg mov xlat je dec add sbb xchg xchg mov push call fwait pusha fcmovnu cmp pushf sbb lock cli mov pop int out mov lea movsl fsubl mov ds pop or std rcrl inc inc ret sub cmp and pop sbb sarb cmpl add imul mov pop out jo mov mov cwtl sbb vpcmpeqb pop test nop rcr rorl and sbb jo dec hlt loop sbb lret mov and xchg push test mov int3 aam push sbb ret dec movsl mov bound push movsl jge push pop je adc xchg dec ljmp aaa test jne cli pop jno aaa dec jbe cmp jne mov inc add xchg push or dec push and (bad) cmc mov fisttp das sub inc add arpl gs movb es push mov or adc pop mov dec addr16 ljmp pusha stc sub bound push pop dec push push inc out cwtl xchg fstpt cmpsb fisubrl nop adc hlt std fs (bad) fcmovb sahf dec rcrl das in push dec test jmp push dec cmc je inc push (bad) daa xchg aad add je js push bound inc xlat fcomi lret xchg js push inc repz ljmp jne pop or jp aam gs aaa cli mov mov sub stos xchg sar sahf jb push jbe or out outsb sub cmp aas into repnz test mov mov fstpl ja pusha repz pop dec lcall in or cmp jp xchg addl sub repz lods out pop pop mov sarb jp xor pushf movsl aaa (bad) jmp jae cmpsb jg add xchg xor leave push add add (bad) dec lods cld sub xorl gs shlb sub dec sahf in dec clc inc in xlat sahf pop push mov mov (bad) jl out lods mov push fs cmp lds das cmp rorl shrl mov std ret xor sub hlt into adc aam fstl mov in aam lret push outsb stos sbb mov and mov and test sub or in cmp and mov dec lcall ljmp rcrl in cmp push pop pop mov push pop xor in push outsl stc mov sbb dec orl mov fs pushf popf jne cmp add sub lcallw pushf push xchg mov push inc dec je pop jbe pusha jnp sahf int3 stc ljmp ds adc ja sbb fwait push and cmp and rorb test arpl xor sbb pop lahf mov add mov dec dec cld rcrl std cmp jmp repnz and movsb icebp in lret fs add test push dec inc cmpb fldt adc jb or call mov inc rol clc fimul dec lea loop notb xchg bound nop inc pop fiadd push jecxz repz in fcompl xchg mov push stos fisubl pop jno mov daa add sti mov cltd sub gs mov enter inc mov cmp aam push fidivrl sbb mov movsl enter push pop pop dec mov lods inc mov (bad) mov sbb sub or fnstsw adc cltd (bad) sbb jnp adc pop xchg xchg push cmp cs pop jmp dec xchg loope push cmp repnz push or sub ja xchg lods adc xor jne jns jns test in cs mov inc out sbb add pushf dec cmc or push in (bad) xchg mov orl loop mov xor cmp (bad) inc repz inc pop sahf push shrb ja sub das and mov fdivl (bad) pop mov mov cmpsl addb (bad) adc or movsb pop out movsl xor test adc push call pop cmp mov dec pushf xor test pusha mov outsb mov test aam and push int3 xchg out clc inc adc orb dec fistp xor sahf inc sbb test repnz push dec mov (bad) pop push rol es jo or lea insb cld pushf sub jle stc inc in fildll sbb aam adc cmp pop dec inc rolb fnstcw (bad) or mov pushf repz xor roll mov out dec ds pop add push (bad) pop jae mov test push adc popl cmp fisttp rcr scas nop mov nop or in mov inc or and sub jno inc clc mov lahf sbb arpl out leave mov jae stc jne jmp dec scas add dec mov mov sub loope and lock lock adc add jns dec fimul push inc add xchg or and jmp sbbl dec sub cld ljmp add das mov dec push test test fs and (bad) cmp push cltd dec xchg pop (bad) sbb push mov sub and outsb inc fisub dec ret aam xchg mov mov loop roll add jecxz (bad) leave mov fadds aaa adc bnd fcompl inc and fistl std inc popa ja,pn push ret mov shlb lods xor xor inc jle rcrb std xor ds mov sub lods push movsb fnop add fwait cwtl sub inc lds mov scas sti push arpl mov (bad) adc imul in sbb push cmpsl dec xchg pop aam cltd or push and mov fstpl (bad) cmp scas lcall xlat stc ds jp inc mov sbb fidivl lcall andl daa mov mov loope rcrb dec add mov xor ja nop jle lcall jbe clc sub nop pusha sbb shl ss mov cmpsb inc test or aad push push movsb repnz call lock xor (bad) in sbb outsb xor mov cld sbb add add jecxz pop inc mov clc call jmp xor mov sub arpl test xchg and orl insl fwait inc dec xor pop mov daa out nop inc cmc int (bad) aad push (bad) shlb test mov sbb cmc jns xchg mov or mov pop std pop (bad) mov xchg xchg sub inc dec int in mov out enter mov bound inc lods or pop xchg and ljmp ret push mov popf les mov jns lods jns pop push (bad) xor dec and pop cmpl sub push mov div lret mov rcll or push push call xor movsb ss xor or sbb push add gs popf decl push cmc xor add adc addr16 sbb in into rorb stos test (bad) mov push stos fnstenv scas push fwait aad mov test lcall xchg jp cltd xlat in fstpl adc movsb pushf jle fisttpll fldcw lcall jne (bad) jg jp (bad) fisubrl int3 jb repz mov or sub cmc enter and mov mov inc out popf lea cld icebp test fisub fnstenv hlt outsb dec adc dec sub shrl ret aas repnz fwait cld into adc iret push and es inc int3 mov push add ljmp cmp daa test and frstor xchg pop hlt sti mov aad adc lods aad jl pop negb cmp rcr iret cld mov jge cmp mov out and sub dec pushf test push cmpsl cwtl mov fsubrs push adc fs dec cltd jecxz inc fcoms mov es js es inc cli xchg test bound xor scas ds mov jecxz inc inc test mov (bad) std gs and pushf and (bad) xor push push lock xchg xchg mov adc imul or cmpsl mov notb cli scas (bad) jg add xchg mov mov and adc adc (bad) aad push outsb addr16 out js stos pop add dec mov add mov inc cmp test dec add dec inc push jns mov xor pop loop cmp stos (bad) xchg pushw ret sbb xchg outsb xchg xchg clc push xchg ret (bad) push hlt loope or shl jg iret or jecxz or loope aas jnp mov xor xchg fisttpll mov das xchg add inc mov jle stos and mov in push scas and std add out shrb and xor pop xor or (bad) lods popa inc dec cltd fsts repnz push sbbl mov xor pop and cltd xchg (bad) icebp das scas inc pop loop xchg push ret and cwtl mov iret push in mov dec (bad) sahf (bad) imul push adc xrelease xor pusha call (bad) lods add mov mov sbb ret cmp fadds divb js xorl inc fcomip sbb dec lods xchg ret or lret xchg pop (bad) es daa or arpl stc lahf pop jae push jae xchg popa iret and push xchg inc data16 pop cmp dec (bad) cmpsb inc in out sub fsubp sub pop ljmp sbb negb push mov js movsb out mov (bad) and xlat push sub loop jno fisttp cld or fld1 inc cmp mov cmp pop test push sub cmp scas nop jecxz in push pushl ja movsl mov push cmp ds dec pusha jp mov xchg or out pop xchg punpckldq mov es fadd jnp jne cmpsb push jne mov aad test outsl mov push aaa fidivr andb pop xor xchg in ja jne in dec xchg call xchg ja inc mov push out (bad) out subb adc movsl sarb and jmp adcb flds out paddusw cmpl int push xchg xchg cmp fwait inc mov inc cmp cs cmp cmp jge in out scas xor adc js or inc pop cs lahf mov pop fisttpl or rcrb pop mov fildl ja rcll xchg sti ror xchg lcall or rorl mov (bad) jbe repz test je scas and fdiv fwait imul aas xchg (bad) adc sbb sub mov popa dec fs lahf inc push rorb mov sbbl xor inc jns and mov fdivrl es xchg jno push and xchg mov fadds xchg (bad) adc xchg enter sbb dec mov push cmp xor push jg adc cs cmp cmp xor mov fcmovne sub mov xor das fwait aaa add lock test inc jbe jno fwait adc dec sub cld inc leave sub insl cmpl cmpsl ljmp sbb mov cwtl cmc xchg jle dec stos dec mov out dec adc (bad) sub test rorl aas adc fldenv sub out in mov movsl mov or insb addr16 (bad) pop xchg ljmp cmpsl or decl xchg xor (bad) fldl repz js mov mov pop enter scas push lcall outsb hlt stos repz add push sbb mov pop icebp adc (bad) mov push rcl rorl fsubl mov in sub outsb in xor push and in pop aad sub mov push mov sub std out (bad) jno cltd xchg fsubs sbb sub les or or std mov jecxz aaa cmpsb mov enter jbe enter (bad) (bad) mov adc cmp repnz cmp das ds in cmp sti and imul and repz and out jae into jge inc fwait aad jnp xchg adc push cli aad aas sti lods jb or hlt lcall (bad) xor inc aaa jg jmp dec sbb movsl xchg or addb add lea stc lods das ljmp dec outsb push lock add bound inc ret dec sahf loopne push int in repz push repz push add loopne pop pop and daa mov or cmp out push loopne dec out cmpsl movsl sbb or fcoml enter mov push and gs lods addr16 sbb notl test in jb adc push dec das xchg jns loop je pushf ret jl add push add mov lahf psllw dec cmp idiv jmp xchg and adc test popa sbb scas jnp (bad) cmp dec jno repz (bad) mov mov push xchg mov add sbb jnp pop fsubl iret inc mov inc lahf ret (bad) mov push push repnz fucomp (bad) fistpl push mov testb js push rol jg xor lods adc adc xor xchg iret mov dec dec push lea add cmc mov pop imul mov cld cmp (bad) shll ss xchg int lcall jge,pn xlat imul cmp loope push inc and cltd fimul or and mov xor sahf clc out pop test andl cltd cld adc ljmp fmuls mov xor ja mov xchg in fwait enter sub dec sbb scas sub cs scas cwtl xor imul insl add arpl mov sbb xchg xlat cwtl cmp (bad) pop push push in int3 pop in inc or and or xor add jmp fistpll js out jmp mov imul inc inc arpl mov mov push push xor xlat and js cmc add dec sbb daa sbb movsl jmp push js push loopne pop nop scas mov and pop pop cltd pushf icebp mov inc push xor mov dec clc decl cs add es mov incl popf jne pusha dec das and int in imul loope mov roll addr16 push sub inc call rcr ds cmp sbb ss lret je xorl inc loope shrl sahf arpl repz out mov in mov cmpsl xchg pop fs jp jae push xor int repz push aaa adc mov sub in xchg mov and push das mov ja jae xor pop je xchg xlat adc adc push lods sbb sub test rcrl xchg ja into (bad) or aam out inc gs or pop (bad) lret mov dec das mov mov outsb cmp orl (bad) ss movsb jl sub scas mov (bad) mov jp xchg ficom popa fiadd add fnstcw ljmp cld sub cmpsb pop ljmp rcrl lret add mov add xchg mov sbb nop xor xor xorps xor incl mov inc pop rclb inc ret ds push add xlat lods xchg movsb push in push std pop lds ja lahf sbb sub mov xor push pop test enter xchg iret fs (bad) je jns,pn adc mov mov (bad) mov test mov fcompl pop divl push cmpb test sub imul stc imul or imul push adc push pop mov push test fiaddl lods and out mov stos jmp mov movsb inc loope pushf push sti inc cmp pusha dec pushf adc mov imul mov daa push aas jbe pop add aas shrl iret fucomi insl dec imul mov xchg scas dec jmp jecxz jae sub das jns (bad) cmp inc jge sbb add mov iret sti mov xchg lds sub das (bad) adc negb mov movsb sahf mov movsb dec jmp arpl (bad) repz sarl pop (bad) lahf sub cld xor movnti imul add insl icebp das lret icebp inc in lds or nop mov call cmpsb add in inc mov shll insb out divl mov cmp int outsb xor cmpsb repnz mov insb je test dec sti xchg sub mov sbb ret hlt (bad) inc xchg hlt lret dec xchg lahf dec fdivrs jecxz ljmp rorb scas lahf pusha dec cmpsb js iret test xlat xchg sub stos out leave setl daa dec or std dec xor mov je mov lods pop mov mov sub mov fwait mov dec hlt fistpll xor xchg xor andb test mov or add fst push inc xchg scas movsl out je inc aas mov lret in movl and push pop lock mov dec xchg (bad) (bad) dec rcll stc shlb addr16 dec mov bound jg cmp inc insb mov lock push inc mov xor jp repz dec mov mov sub xor push or movsb lret sub push add jo outsl pusha mov inc lret or movsb mov mov sarb dec pop mov jmp outsl std mov add movsb sub add or fist ss lods cmp aas jbe mov push sahf mov je,pt push dec inc ja fucomi cld mov lret xor loop insl repz dec jmp into stos cs jnp push lret les out pushf test sbb sbb sub pop xchg push aam out cmp ret (bad) mov test push or sbb mov int cmp jno lahf jae dec add loopne cmc into sub or cmp ret sbb popa mov jae ja add pop push mov mov arpl in mov mov lods xchg dec xchg dec insb pop push sub mov mov jg cli jecxz sbb push nop mov (bad) cltd in mov scas cmp dec mov push dec lds xchg loop sub movsl call pushl and ss jne loope xor pushf jge xlat cmp cld iret dec xor cmp or (bad) or (bad) shll xchg or push mov jecxz or cmp jnp push sbb or mov or (bad) inc cmpsl and pushf jno enter fisttp fnstcw mov mov icebp xchg push sbb xor xchg push or das or scas adc cld jb aaa shll cmp cs mov clc jns enter jge pop adc loop stc or repz cmpsl mov inc pop idivl lods pslld mov adc insb mov jbe dec insl adc stc add cmc adc out insl call dec lret jecxz xor mov xor jae and dec outsl push std push push and lret pop addr16 ds loopne or nop data16 arpl out fisttp call out out xchg inc cmp jns jbe sbb fidivrl std xchg iret insl cmpsl jl movsl je push shrb adc and je mov shll and cs dec loopne (bad) daa int3 jl dec repz loop and fstl icebp push fdiv and mov test cmp and cmp add mov mov adc sub add push push leave mov sti rol aam outsl xchg rcl test imul fistl inc pop in mov hlt mov loopne in cli xor mulb ret add pop movsb and rcrb mov add inc stos mov scas xor xor mov xor lret rorb lea mov dec xchg sbb inc (bad) cmc mov sub outsb mov xorb insb jo and ds cwtl mov stos loope mov in popa daa sbb hlt pushf out enter inc pop xchg lret mov pop aas and mov mov mov mov loop dec into mov aad adc xor or sub and dec inc sbb push push cld xor pop loope xor pop mov (bad) aas mov xchg pop cld and popa test test out popa das jne sub pop mov sbb adc mov daa mov pop aas or fldl idivb add push (bad) nop sub cs (bad) sub rcrb lea xor ret xchg lock xchg or dec dec cmpsb mov fs inc mov xchg inc xchg pusha mov add es jb insl push jo or in das pop jmp pop xor lea mov out data16 ret sbb arpl xchg pushf cmp (bad) fidivr leave int push xor pop push popf ja cs js or hlt cmp outsb lret mov inc aaa leave push les lods adc loopne and mov je (bad) sbb pop sar mov clc push pop cmp xchg dec loop or sub in loopne push das push jge sub jmp in loopne or jp insb lods nop mull mov dec push lods adc mov std mov or das add fldcw inc mov pop inc stos adc sub xor adc sti jmp in jns insb iret jle ficoml add cli cmp dec lret ds fidivrl mov and adc lret icebp test pushf stos xor pop (bad) cli dec cmc sti lods repz xchg cmp aaa xchg jle xchg stos xchg frstor fcmovne cmovbe add in mov pop or adc inc adc add aaa cli adc lods dec and push jne dec loope mov push jge xchg inc mov push outsl rorb pop mov xlat pop pop jne push paddsb nop lods (bad) lods dec fwait jle fdivr out repnz loopne outsb stc ret mov outsb adc loopne mov cli mov xacquire jb inc xchg pop cwtl (bad) mov inc adc dec mov ds mov cltd mov aas push mov cmp sub rorb in (bad) (bad) adc cmp leave xor lahf shrl cmp neg lods adc add or sub dec xor (bad) cmp cmp jmp xchg iret js mov xchg insl mov iret dec inc xchg pop jle shrl push push xor mov xchg (bad) icebp std mov sbb push inc xor xor and inc push cltd inc sub rorl andl je (bad) jmp pop mov cltd fadd dec adc dec inc insl aaa mov pop mov mov pop (bad) testb ret dec ror mov cmp es cmp add das pop test leave cwtl mov lahf mov aaa (bad) pop jmp rol xor in cmpsb lods loope dec jb gs ljmp jge xchg lock xor adc sbb mov xor xor pushf mov cmc ret mov push daa mov pop cmp insl mov xor daa int3 insb jmp repnz (bad) movsl jp out sbb xchg popa aad jne pop arpl pusha aad sub cmpsb jnp ljmp jb (bad) xchg mov mov stos jle push jno,pt jle stos fsubrl and dec cmp nop jns jnp add inc (bad) xchg pop push ljmp es lcall loop add inc jb dec fbld repnz jb ret cwtl cltd popa cwtl loop pusha or add std cmp push enter pop mov icebp pop jnp bound cmp pop adc dec sbb mov rcl mov mov cmp icebp jge out fisttpl sbb fwait mov into in jae pop sti pop adc mov js mov adc adc in in push cmp (bad) xchg stos rclb dec mov iret je cmc mov mov (bad) scas cli rcrb stc pushf push (bad) jno mov xchg scas xor and (bad) sub pop jb icebp lock std arpl cwtl fsubrl lret scas pop sub dec sub lods mov stos fwait bound lret out mov repnz sub push aas fcmovb int ljmp les popf in cwtl adc fs fnstenv gs push adc pop outsb or jg mov loope out stos xor inc stos and mov inc jno add push adc mov add call mov je xor dec iret loopne cmp pusha cmc (bad) push ret pop int3 and ffree mov or sub stc jecxz aaa out inc mov jo lret and push sbb pop xchg lret inc iret add or sub xchg test sbb add scas inc aam push pop mov push cmp add xchg insl inc pop pusha cmp loope push jns push test cmp add inc aam inc cmp out push mov mov mov (bad) cmp pop das nop lods dec fsts clc arpl cmpsl outsl inc mov test adcl mov mov jb pushf ljmp xor inc imul sahf mov cli xchg pop sub int3 les push push rol jmp pop inc sub int3 (bad) es cmp outsl test cli enter popf inc adc cmpsb pop mov or cltd and jge xor je xchg int3 dec ja cs hlt jnp ror adc cmp bts xchg outsb xchg pop outsb xor lock add mov add and int int test in cmp sbb xchg or cmc (bad) gs mov cmp andl cmp mov mov adc dec ds aaa push roll or mov mov inc stos sbb dec fld xchg imul (bad) je aaa pop mov ds mov jne or mov mov fs fs sti rcrl sub sti xchg (bad) mov in cmpsb shrb inc cli sbb fs xchg popf xchg jbe inc sub cmp push test cmp test dec sti pop enter or test sahf sub cli mov lret xor sti sub lcall cs mov daa leave aam pop cmp aas or int int3 lock push sbb adc or (bad) in lods pop inc jp test mov mov movaps cmp rcrb enter (bad) and lahf fs mov pop insl or in fild cwtl frstpm(287 inc adc test pop mov mov out jns nop jecxz xchg (bad) (bad) jne in rorb es fcoms mov in insl sbb xchg fistp adc outsl add pop stc movsb fldenv out leave jbe outsl mov fistl (bad) dec jbe popa repnz pop jle jg jo adc inc or fstl mov pop pop inc arpl xchg ret (bad) jecxz pop test dec stos clc push ja cld pop rolb jne pop out and inc movl cmpsb or addb insl scas sbb lock add pop jae jno adcb pop clc insb push pop cli push jg pop popf jp (bad) lahf (bad) cmc fldt add cmpsb aas add pop cli leave movsb pop sbb dec mov insl hlt push xor push jg rclb nop xor and add xor into repz inc inc push sub push mov sbb scas adc inc (bad) sub pop sub cmc int ss movsb mov push jne and dec stos xchg aaa jmp mov (bad) or mov movsb loop jp aaa jo rcrb cmpsl adc into mov push xchg in (bad) out sbbl andl les mov lds mov popf jmp and or lret in mov jbe pop sub (bad) adc adc dec mov je cmc imul or mov push andb bound mov outsl cmp push xor mov sub cmpsb jp lret sarl jno enter xchg loop out out pushf mov pop data16 xor adc stos add ljmp xchg sbb ja jmp pop insl mov sub mov ss push push movsb jns sub sbb pusha nop xchg idivb push aas cli ror jbe cmpsb mov outsb push lret and fsubl cmp dec cmp jne cld divb popf into inc shlb adc push mov cltd rorb push (bad) fldl jge cmpsb (bad) jae pop movsb mov inc clc and fadds hlt mov cmpsb mov inc xor xchg xchg fiadd adc aas test sbb mov std xor mov int movsb pop and xchg ret outsl push nop pop ficom mov aad stos insl lcall mov enter jp (bad) cmp (bad) cmp mov or lret xor and inc cmpsl or (bad) in cwtl clc daa loop lock mov cmc stc popa push ja cmpsb test inc push int3 push int pop push pop push jb inc xorl dec sbbb negl rorl pop fcompl sbb lds add xchg sbb dec sub sbb sub push mov or xchg lods jmp sbb loope out outsl mov out repz jb dec push pop (bad) jae insl pop lods lea sub mov fdivs insb rol inc stc pop xchg stos fbstp scas xchg cmp jmp xchg push sub and inc sub test (bad) hlt mov fs test imul mov test cmp mov cmp mov jne cltd sbb and or scas adc test xor call cmpsl cmp and pop dec (bad) xchg stc repnz add fwait fwait xor les mov icebp cmp mov inc or gs ficompl movsb pop or push pop mov dec cs sub mov ret dec xchg pop and fildl cmc cmpsb pop adc jecxz (bad) mov jl cmc cmp sbb int (bad) aam aas subb fsubrl push dec (bad) pop int je jns or push (bad) in jne inc inc jnp and and movsl test cli ja div xchg xchg pusha lahf jp (bad) jb (bad) es push lea dec add mov cmp mov push mov daa xchg xchg out dec jle mov rcr add repz pop fwait pushf dec and pop adc aaa rolb lahf push mov mov nop inc push add inc insb cld lods mov in pop add jge add mov ret mov push mov shr jge dec dec (bad) pop fs xchg inc repz in lock pop pop xor fwait xchg jo push (bad) jns iret mov mov lds pop mov push mov out stos inc cltd and shrl xchg stos add jmp enter jno mov jge cltd rolb cld mov insb jae mov loope mov adc bound dec out mov sub mov fmull int mov out push mov jno push call cmp cli mov mov cli xor (bad) jp pop mov aam (bad) sbb rcll mov bswap sarl lods stos mov jo bound js stos xor clc and imul mov adc fist cld hlt cmpsl sahf sbb and xchg pushf and adc sbb mov inc dec mov sahf int3 rcrb lods lods cld lock mov adc in out push scas sbb inc mov ret shrl dec jle xlat xchg mov popa mov fs mov jmp or and in mov lret push addr16 xor ja xchg and leave rcll lcall lds imul add or fwait ja pop pop or pop lods jg insb inc mov out push inc gs xor jge mov das addr16 cli (bad) push push cmp mov fnstenv out mov add movsb cltd jnp js dec fstps inc jnp xchg sub or push mov push push push xchg popf xlat sti stc (bad) xor xor xchg mov dec mov push ret push imul push das mov add aas fldcw daa aad aad or aam cld jne push in je movsb push inc cmp and xor or pushl pop mov mov lret popa jp dec pusha sbbl stc pop and call pop ret pop aaa or bound jmp xchg stos mov pop fcoml cltd jb jecxz sti add pop push cli aad sbb and cmp ret pop sbb sbbl lock frstor scas inc sahf sub adc push fcompl ret pop test or adc sbb sub int3 mov movsl inc sub fwait xor mov mov adc push (bad) mov es fdivrp push cmp pop (bad) cli in push push in xor aad scas inc shr (bad) xchg ljmp mov loopne aaa ret adc popa adc popf xor sti and push mov mov outsl mov repnz clc mov jo rcll mov es das into je jp test sbb into xchg stc cmp sbb sahf and cmpsb outsb hlt daa xor xor les lea jnp cmp jnp sub into jae or lods sub mov xchg and bound in popa sbb sbb pusha mov xchg xchg inc out jae fistl dec scas sub js,pt (bad) sbb fcomip (bad) aas jg (bad) (bad) mov push scas push imul mov push sub xor xchg rorb xorl xor jae xor push mov test cmp mov (bad) sbb insb jno js out repnz and call xchg push in js push sbb dec imul ljmp add fnstenv add mov (bad) xor in mov dec mov mov repnz jno mov jae imul ss outsl and xor or jl lret cli pop cld add and push jp pop (bad) mov insb jae mov cmpsb sub fs aaa inc aad stos mov jo adc push popf fisttpl enter add insb push cltd mov jo mov xor dec arpl mov xchg lret call rol mov adc imul inc out sub sbb pop add js mov aam rcrl pop out mov mov (bad) fildll mov sti pop xor cwtl jg cmpsb (bad) sub xchg out stc mov and mov aam je js push mov push (bad) sar fmul xor cmp outsb mov ret mov xor jmp push pop mov add xor xor iret sti xor (bad) or out sub daa jmp fisttpll cmp (bad) or mov aam sbb (bad) repnz (bad) scas fistl add inc (bad) in push add push int3 push sbb loop mov mov mov mov movsb rclb adc lret jmp pop popf dec or hlt mov push repz cmp testl sub mov (bad) cmp inc repnz mov inc pusha pop cmpsl repz sub pop mov (bad) jne out sbb pusha push mov pop in dec mov bound into pop add test imulb jns fcmovnb mov incl jl xchg das sbb pushf bound jno or adc sub push stos adc cld fsub xor popa xor daa imul xchg lods lods stos adc fcmove cmc or xchg dec fisttpll out insb push cmpsb add ret mov pop arpl lret sti jnp aam gs out mov and jnp ds pop adc adc test test std incb jmp pop fs cmp (bad) xchg adc or into sub repz sbb sbb pusha add dec outsl lret xor sahf cmp adc lret cld (bad) xchg icebp fs out mov sbb add xchg inc jp mov ljmp mov sarb fildll js xor xor mov notl adc ds adc adc cltd in adc (bad) mulb faddp jae ss push dec loope cmpsl mov lock addps mov jbe lds fprem1 pusha (bad) scas rcrl test sbb xor pop jle das test push mov push repz arpl pop xor test rcl out ja push aad sub jmp leave mov cmp push loopne xor das cltd orb arpl cwtl test sbb xchg mov test jecxz sbbb mov cmc and cwtl (bad) bound hlt sahf xchg into pop push pop mov mov adc add inc insl and push lret sbb mov in sub push xor mov fbld insb lea or pushl stc pop pop pushf push fsub add into dec ds fwait es nop lods add mov xchg dec jecxz lock adc jae xor mov mov jg out jle (bad) mov aaa ljmp pop (bad) in bound ljmp pop pop push cmpsl cmp cmp mov mov or fdivrl ss add sub imul imul orl addl xchg xor jl je mov cmp nop inc and aam call pop repz mov xchg inc fwait mov xor fcomps repnz xchg inc nop mov cmp (bad) clc lcall je xchg or or xor inc or xchg push ja xor pop xor not mov mov (bad) sub jne (bad) lcall cmp adc ror dec stc add test adc push push mov dec pop pop mull and frstor mov pop jle pop or jb dec fnstcw or sbb stos mov pop pop sbb ja ret mov fwait mov sti xchg mov pop dec clc out scas add inc xchg pop jnp add test mov add and (bad) in dec mov xor loop mov push or xlat cmpsb loop mov scas dec in xlat test aas (bad) pop (bad) out mov cmpb ret and xchg aas test inc jns jecxz call call out push cwtl lods inc or dec add js test in incb push dec or push mov rcl jns bound loope es mov sarl and lahf sbb xchg add inc leave jnp inc aas inc lahf arpl movsl leave xchg in ficomp cltd addr16 hlt (bad) ror dec mov int or scas stos push fisttpl test add lcall pop jne cwtl fcoms out xchg frndint aaa fisttpl inc inc (bad) mov adc inc cli pop jl int mov jmp stos mov mov dec mov inc push dec jns popa push inc and fwait imul mov ljmp call inc add fidiv or mov movsl jo (bad) rolb inc mov inc setne in pop orb fsubl inc hlt aas outsb pop push bound sbb cmp xchg pusha pop fbld ss inc push jp addr16 std push scas ja ja ljmp mov push adc iret pop mov ds xor stos push pop sub sub push int cmp mov inc in mov je or sbb in sub mov xor insb sub adc (bad) sub shrb fild test mov js fiadd fldt mov sbb cmp cmp cld sbb test loop mov xor and jo xchg and stc lds mov out ss mov sub (bad) ficom inc pop pop (bad) ja in movsl xor mov and ja mov xor jmp aad (bad) pop out mov arpl inc xchg mov fwait and xchg movsb push loopne lds pusha jl out pop sbb popa jnp test pop (bad) push cmp sub push mov dec pop cltd jle or adc pop and aad sbb push inc xor cmp (bad) dec push ss mov pop xlat frstor add pop or es leave (bad) jo cmp adc jecxz test fistl imul imul (bad) paddsb out out sbb std cwtl push mov (bad) xlat pop lods mov xchg (bad) pop fs iret and jmp das cmp faddl pop cmpsl iret popa scas imul test lock sarl xchg scas jnp mov outsb mov jg pop lret rcr mov and cmp mov inc movsb outsl mov adc add cmp movl shlb movb xchg popa push rorb fstl and push jo or push cli mov lret or mov mov mov push lahf mov push imul sti int3 or int3 add xor mov mov cmc sbb adc notb data16 decl and lcall fs xchg (bad) fisttp sbb cwtl ja fcmovb xor sub sbb andb and loope ss scas sbb sub dec sbb popa mov psubsw push cmp pop inc out adc xchg push ja mov sub adc data16 sub lahf loopne jne xor sub inc daa mov and sub cmc dec mov mul pop xor fstps hlt stc in push dec enterw mov or adc mov testb jmp mov lret xchg pop add pop movsb jmp in lock das dec xor adc insb ret mov mov daa mov mov out inc es pop fiadd out cmpsl ret xor cmp pushf int and adcl or call lock outsl out aad push sbb or pushf loope push jns pop scas call loopne adc cld sub lcall push lret cli imul lret out pop pop movsl mov call jecxz cmpsl jb jge mov pop lea xchg fistpl fbstp mov jnp lods adc scas cmpsl sbb jbe pop into lret inc add pop hlt scas adc sarb jae dec push bound mov and mov sahf es je out or das inc sbb out mov jb mov jge in pop movsb gs in fbstp add pop xchg stos push aad popa mov xor (bad) pop push ds mov add sub xchg je or int cltd mov inc cs test cmp test mov push inc push lret cmp bound mov inc out mov loop jbe es jbe int popa jg arpl jl adc fdivrl xchg push adc icebp pop mov add movswl inc test push mov mov arpl inc test mov dec adc sbbl rolb sbb cmpsb jp scas sti mov jge jnp mov rorl (bad) lock enter inc rcrl jns negl ffreep jne push rcrb in repz lret mov insl scas pop mov push popa lods dec pop daa sbb xchg ljmp shl fdivs loope mov inc cmc push stos pop sbb mov jae pop lahf (bad) dec xor sti pop xchg inc push xchg scas xor and (bad) push rcl subl cmp xchg repz in adc cmp sbb push fs pop mov push inc decl or int test or loopne adc stc inc pop and push jg mov loop push clc mov lods test push push push sub inc mov push fnsave sbb mov pop push call cmp mov notl and (bad) (bad) out add sub scas and jno dec push repnz rorb push cmpsl or xor stos mov dec adc and push cmpsl aaa or adc test (bad) aaa add mov and inc pop out in push xchg sti (bad) push push je dec pop dec or scas sub cwtl popa (bad) or dec xor push mov jns (bad) repz iret mull cmpsb sahf add sbb (bad) enter cmp mov hlt jae (bad) mov push jbe fmul inc std in add inc ja xlat mov lods loope mov es dec jo add mov in out or jg dec ret (bad) xchg xchg imul fnstsw shrb pop repz inc and push repnz xor xchg add roll (bad) cmp ss sub in sbb sub in negl xlat cmp cmp adc shrl push add push jmp aaa outsl in dec negl or rol outsl dec test add jns xchg mov xor cli aaa jne dec push xor int jo out ffree std fs xor add divb out rcrl inc adc test cmp ret mov push fxch imul ret arpl add pop adc enter ret jmp dec sbb leave shll and outsl push loop (bad) pop mov sbb sub lods cmp addr16 (bad) lcall pop leave xor inc shrb sbb push mov stos dec jns mov movsl mov movl gs dec xor adc (bad) inc push in jbe xchg mov push pushf jmp xor fimul ja sub mov cmp cmpsb bound lahf pusha jae mov push rolb mov dec or (bad) iret mov add adc clc jne fmull scas cs loopne out es mov adc (bad) jp add sbb mov rclb test dec ret pop (bad) dec inc aas xlat sub push sub lret mov xchg xchg (bad) adc scas adc xchg test dec negl xor addr16 loope and adc sub inc inc and sbb ret cmp mov scas shr cmpsb jle and mov push xchg and insb add xchg mov xchg mulb push or mov mov ds mov add pushf and std aas or or jp pop adc push addl pushf add lods (bad) cmp sbbl push in lahf stc jg popf xchg movsl inc pop je inc add int out call mov mov sub call mov mov mov (bad) mov (bad) fmull cld loope mov mov push call inc (bad) ljmp lea pop fs mov xchg xchg fiadd cmp popf adc mov mov add pop sbb or aad mov adc xchg aad fcmovne or jge xor imulb sbb shrd mov fdivs out nop add test lret movsl icebp pop mov add cmp out add lods sbb push shrl jnp (bad) cmpsl jb jl dec aas mov sbb xor push cmp sub inc inc mov (bad) cwtl insl ss add roll dec ret xchg mov ror inc movsb jge mov movsb pusha pop scas icebp mov mov test fcomp jne sbb cmp mov cmp mov lret cmp xor xlat stc jp popf fildll fbstp lods or ret pop inc movsl jne push push inc lea leave sti jo cmp dec (bad) enter pop add push imul add and push jl cmp jbe ret lahf leave and mov and insl pusha push jmp mov mov xchg mov pushf pop rcll mov or xor lods addr16 fs sbb das adc imull imul stos add lahf scas xor mov call jle jge dec mov jl push jae dec pusha (bad) aas jp or add into pop (bad) js xor cmp out out xorl xchg dec sub push aaa rolb pop push sahf add ljmp bound adc jno ja jbe xchg and (bad) sbb jg rep sub cld movsb xchg pop mov aam or inc xchg mov repz pop icebp stos or xchg sbb mov div mov fistpll add adcb (bad) xchg xchg mov mov mov xchg dec sahf loop imul jecxz xchg mov pop inc rcl cmp xor out add dec ljmp sub sub jle jge xor cmp push jge outsb jecxz (bad) xchg roll out std stos pop cmpsb mov cltd jbe cwtl sub mov scas mov test (bad) popf div in lret inc xchg fwait sbb xchg adc ss lds (bad) dec pop sbb outsb std inc mov push dec xchg test movsb xorl xor add lret aad xlat aas shl cmpsb dec sarb xchg int push pop adc mov xor xor mov push jl xlat and shrl mov pop or shlb and or push hlt movsl sbb stos add js inc ret fisub and daa icebp cmpb pop outsl xchg push out xchg push roll dec inc add or mov mov pop mov mov jp insl dec push cltd je push mov rcrl out loope jge jns cmc inc mov lock xor (bad) sub (bad) fild sbb inc sub jg dec les inc xor mov cli lcall sbbl add mov andb pop (bad) imul jo sbb lds or mov pop test add jl jne push sub in and mov mov add shrb pop mov pop (bad) shlb jle pop test sbb dec enter sbb test popa mov cld mov push sahf rcl repz pop jp das out sub mov fnstsw mov lods lret dec inc xchg aaa popf out xchg out jnp mov out cltd fadds iret in push pop aas sub and gs sahf andl pop or xchg les in call cli jns fcoml enter mov push or add add subl jg (bad) cmp enter ljmp loopne cmp sbbl or int3 add and mov sub inc aam test dec rcrl xchg fcmovu jg rcll mov (bad) out (bad) mov icebp add popa push jmp idiv mov sub add popa icebp insl push adc iret int3 lahf test (bad) (bad) sub jb mov jl sbb add rcr dec outsl xchg xchg (bad) aam test and clc adc push popf clc sbb jmp sub lcall imul dec jnp fcoml add jg xor roll or popa (bad) shrl leave adc es cli js das cld pushl mov movb pop sbb push fidivrl fbstp sbb outsl xor ret sbb lods push mov pop popa adcl daa jl aad leave push dec adc (bad) imul or xchg jne icebp mov cmp lods jnp sub shl mov push stc stos and pop out xlat add pop inc adc xchg inc push jo sbb sahf push fcoml pop into cmp add (bad) mov call data16 pop jecxz fnstsw mov adc sub jae mov mov dec insl or mov add xchg sub js mov mov pop fwait lret dec test add mov daa imul data16 stos aad sub dec push xor pop aad rcll cmp ljmp mov incl inc mov repnz xor insl or mov dec dec psubw jge sbb xchg cmpsb mov loop push mov and mov fistp (bad) and out add je lods cmpsl lods lcall xor stos std mov test xchg lods cmp cmp fmull or jae imulb hlt call lock pop (bad) xchg je inc insl pop dec xor push arpl add jb jnp icebp in test call sti movsb out mov loope mov cmpsb sub les or test (bad) xor dec (bad) cmc push cmp gs mov push test ficom mov mov ss cmp adc or scas std hlt in xchg push ss pop test sti and xchg cmpl or dec fstp and dec hlt and ja es (bad) or mov lahf inc adc xor mov (bad) mov dec xchg dec in inc mov popf pop pop ds test mov (bad) mov ja mov aad or mov xchg pushf out sbb mov push xor pop lds pop idiv cmp iret out loope repnz mov and sub fcoms mov dec inc xchg loopne out dec sub push jne mov dec sub clc test test enter mov andw clc jl mov scas mov and sub jbe fsubrp jns lea xor in sub pop or jo push data16 and ret call add cmpsl ljmp int3 inc cwtl in fisubrl adc ds pop push mov lcall (bad) and jns xor int3 les aaa sub xchg or lcall cmp mov xchg scas adc inc xor push enter or lcall mov xor jbe addl and sub stos dec add mov xchg or push cmp adc or dec inc jb push sub nop xchg mov and rcl aad sub aam sti push repnz xlat mov sbb pop sub mov mov push mov test jo cmp pop pop cvttps2pi popf mov jp inc dec pop or roll push cmp iret jb or sbb mov dec sbb pop cmp adc jae cmp pop fdivrs fs fistp lds cmp (bad) jmp mov add (bad) adc xchg pop adc and adc aaa (bad) ss (bad) jne inc push pop lret push ficomp mov add cmp das xchg inc cmp int3 sbb sub mov add or cmp in mov call sbb rcrb std rorb stc add xor adc jge inc jecxz stos gs dec movsl shr (bad) out out push push test insb mov pop out and adc ficom sbb int3 rorl and jecxz dec scas (bad) mov mov or jg,pt stos sbb cmp (bad) je jecxz mov das ficom jns pop es mov imul imul dec ss pop sbb in stc cwtl stc mov mov dec mov popa das and cmpsb out inc mov cmp jnp aad pop push dec sbb or xchg mov lock addr16 mov (bad) and fiaddl stos nop mov push cmp repz jae jg inc (bad) clc std push sbb ffreep xor mov fisttp js xlat imul pop push lret push pop push add cmp jo cmpsb bnd and sub adc icebp ret out mov adc mov les dec int3 mov push addr16 das leave mov pop fnsave mov mov xor mov out gs push sbb dec ljmp sbb scas enter loopne mov pop outsl pop popa inc rclb divl or cmp mov inc sub push mov fimul idivb mov push outsb inc jg mov popf sub or add xchg sbb pusha (bad) xchg push sbbl jmp inc rcrb sbb cmp sub in lahf pop lret push sbb imul and pusha xor cmpsb adc dec push in cmp (bad) rorb cli shrb loop xchg incl adc iret fisttp mov fxch push fsubrl fnsave mov jbe arpl sarl dec fdivrl dec or dec cwtl adc adc dec fsts sbb (bad) mov test lods dec es inc xchg or jmp out jmp sbb mov jo and mov sarl push lret pop cs (bad) adcb inc cmpsl pop popf add imul jl sub mov inc pop add pop call out (bad) in jbe mov in mov pusha jb ret sub daa jmp sub mov stos sub inc mov ljmp pop icebp call bound jmp mov xor aad ret (bad) repnz mov leave sbb pop stos mov gs pop pop daa pop shl push mov repz dec and leave push xchg mov add jnp xchg mov inc and mov jecxz lods icebp stos jge dec or scas (bad) imul or mov jp std rcrb and (bad) aaa adc sbb (bad) xchg shlb jo leave jecxz (bad) cwtl pop gs je je enter int xchg aam popa lahf (bad) push iret arpl loopne loopne stc mov xchg lds icebp roll rcrb or inc push cmp and fwait out cmc cmp (bad) push pop jae xlat fwait stos fimul xchg sbb sub lcall mov xchg or add rclb adc adc test inc mov inc xchg (bad) dec pop out out loopne mov mov dec sbb hlt pop push into rorl (bad) xor insb adc lahf dec cwtl mov mov les inc stos loop je stos sub in cli inc stos pop lods cmp std xchg cmpsl mov xor lea daa bound cmp hlt mov push daa lret cmpsb icebp lahf hlt mov cld fucom popa mov mov decb jmp mov mov jb pop or rcrb ficom inc orl ror aam cmp mov out fwait mov std pushf jb negl mov xchg add jo mov jne adc gs lods out jmp inc out lds jecxz xchg push rcll xchg and push cmp fildl lahf std sub out std cmp pushf jecxz and or jge inc sbb fwait (bad) mov clc (bad) mov imul ss mov jns test in xor push push (bad) rdtsc cmpsl push hlt lret xor les fwait xchg xor fisub and loope leave or rolb jb mov (bad) mov (bad) jecxz xor mov sbb in push xor std push inc adc aas stos xor pop inc jno xor jne test rclb fdivrl jo cltd cmpsl (bad) mov dec dec xor cltd push and (bad) stos ds mov lret in (bad) ljmp cwtl xor ret push addr16 scas jb call gs dec lret inc cmp push (bad) xchg test outsb adc mov test mov bound popl fwait insb rcrb pushf and mov aad sbb inc mov test jecxz and mov xor push push sub arpl ficoml xchg (bad) ljmp insb (bad) cmc test pop fnstenv shl and jne roll lahf jle fisubr xchg repz std push subl add push cli daa in (bad) inc cwtl inc add ror jmp jp cmp mov jns int3 rcrl (bad) push mov andb cs stos (bad) or rolb cli xor sbb pushf pop push in adc pop and loop ljmp mov imul in sti stos cmp sub sub out repnz add int3 mov or cwtl inc (bad) mov and ss fwait xor push xor xchg sti jne and or and inc icebp insl mov jp lahf out mov pop sti shlb sub cmpsl js dec hlt or out sub nop mov jl outsl dec cld sbb mov and flds leave ret scas xchg int (bad) push cmc xchg pop in in xlat out stos je xchg jne fsubl push xchg jbe push and jne addr16 repz out (bad) adc into clc mov sub (bad) les sub call loopne ja jecxz xchg inc sub ret sbb aaa aaa iret mov xchg repnz sbb pop push inc scas pop sbb cli in repnz ss jle iret out lods call mov stos sbb outsl out arpl jb call roll call test sbb fiadd and mov pusha cld push cmp scas push test inc adc pushaw mov push or mov inc out jg insb dec mov cs mov adc addr16 int3 fbld stos outsl pop std sbb or push fimul imul mov ret ss cmp cli fsub stos xchg pop int sbbb mov xor or imul xchg icebp sarb push mov fist cmpsb mov mov inc inc mov (bad) imul les pop xor pop stos rcr into cmp jl adc mov fisubrl push into and hlt out mov lds jl jg popa fwait jl outsl or push call mov test mov push xlat iret cwtl outsb mov and cmpsl lea jne mov xchg sub cwtl hlt outsb outsl aam push clc out fwait push aam dec rol lret sub sub and (bad) jp jg sbb inc push dec pop sub add fadd call dec ds xlat mov enter lahf in or imul lret dec in fs pop sahf jno push sub ret and lods jg nop cli or mov sub jmp jno cmpsb or push fwait cld push adc sub xor xchg pusha lds (bad) xor lret adc mov decb ljmp cli xor fsubl jae outsb lods or addl add xchg cmpsb cltd fwait jb pushl pop addr16 sub (bad) (bad) sub adc int3 ret inc mov xor and mov iret loop jo inc stos push sub pop jb iret rorb rolb cmp ljmp aaa xor jae mov fnsave dec imul mov push sbb adc xchg imul adc pop jle push jle xchg xor imul pop fistl jne pusha jae out dec fimull pop jb in push sub dec insl or mov test mov iret aam mov repnz in fmul rolb stc inc mov ljmp shufps inc movsb mov and cltd leave movsl (bad) xor aas clc xor outsb push or cmp aad je ljmp sub xor lods cmp das mov stos sarl or call lods adc pop jnp pop loopne mov ret sbb das xor jle cmpsl divb sub (bad) sti imul in pop in in (bad) mulps (bad) sarl sbb mov add push jl sbb fcompl rcrb pop addb sti dec xchg cmpsb cld stc push nop sbb out jae rsm lds pop sarl mov lahf xor sbb movsb adc cltd loope pop push das cmp dec jl jmp sub mov loop test out stc rcrb push cli jmp pop cmp call out jae pop in or js xor jge push pop lods adc outsl push mov jp cmpsl push or lea and add dec jle sbb sub sbb xchg jb ror jecxz lods repz xor pop ja pushf push add out inc mov inc fsubrl sub cmpsl sbb cmc push and adc pop cltd xlat (bad) xchg push adc cmp or in add dec fwait (bad) push sti lcall cld sub adc (bad) jp clc mov or out cmp (bad) test dec scas subb insl lahf int xchg cmp (bad) neg adc (bad) push ljmp sar outsb (bad) psrlq mov xor aas icebp popa jnp and pop jnp push (bad) jp push xchg lcall mov (bad) xchg xchg movsb jb repnz scas inc pop out aaa sar mov (bad) jp in and in mov dec jg and in cs addr16 (bad) xor arpl add inc sub adc shl xlat gs aas test pop or dec daa test pop cli lods divb push enter cmp push scas mov shrl pop sti insl test cmp popf push pop ds out add lods rcll sbb je xchg out xor push test mov rcr jmp loope scas loop sub inc sbb (bad) inc pop and push sub or fmuls add in int cwtl xchg mov mov lods sub stos stos mov adc xor jecxz mov sbb dec inc mov jno add jl fisubrl sub (bad) pop push mov test sub stos popa inc lahf jle cmpsl xchg adc xor inc mov jo or test push add add movsl cmpsl xchg inc outsl inc mov xor cltd jmp cmp dec or push cld lods stc push out enter xchg das dec mov int3 push stc jge xchg jl lea test mov fwait sub push js addr16 adc mov cmp lods shlb in cmp sbb insl and and mov (bad) sub scas pop sbb movsl push shlb lcall sbb mov mov js jns shlb xchg xchg (bad) movups xor inc xchg mov cmp mov pop mov jb repnz or mov hlt sub and push add fistp xchg stos xchg ficom ds flds sub sarb nop mov dec mov dec lods sbb mov jb (bad) into dec mov xlat pop (bad) sub push cmp mov arpl dec mov enter sbb dec insl add pusha daa mov ljmp std add (bad) je ret sti aam sub sbb inc mov sbb mov fdivp ljmp or repz dec jbe out into ja cwtl call fdivrp inc jno enter mull jp sbb test daa and (bad) (bad) xor or rcrl cmp cmp or insl cltd out int stos sub cmp mov inc addr16 xor adc aas mulb in ja out enter adc scas pushf nop ret or pop cmp (bad) sbbl pop sbb push or insb test push aas pop xchg pop ret or adc xor das mov lock ret cmpsb cld pop push popf sbb cs and lods not sbb inc (bad) sub ja into xor popf nop xchg xchg adc push rcll cmpsl cltd mov leave cmp insl ficomp xchg fsts idiv arpl enter (bad) cmp cmp les lcall lods add dec fsubrl xchg cmovnp stos negb loop mov inc inc mov ficomp ds cmc and adc es cs pop lods adc jae add shll enter xor push sbb iret push inc fisttpll pusha inc mov dec and or divb cmp enter mov stos push imul push ret pop xchg cmc push cwtl add and (bad) out outsl pushf loopne and (bad) xor rcrl testl xor push divb jle inc clc dec jnp xchg xlat aaa jge sub ja out dec (bad) lahf jne mov lods jbe or popf adc add xorl das in or sbb (bad) gs ffreep js fs data16 repz fsincos pop jle cltd cmpsl push clc sub insb dec lock mov enter frstor xlat mov js hlt je in inc mov sbb or jmp dec push je xchg mov mov xor sub and imul pop ret cli or nop mov (bad) xor outsl mov stc add in mov hlt or into or nop mov aaa (bad) xor rorl mov lcall xor sbb push mov outsb das mov movsl int xchg loop fwait lds inc movsb outsb loope dec mov test push mov dec adc out dec mov aam jg clc push jg shlb pop gs in push jne (bad) sbb outsb sub cld dec xchg movsl arpl or je pushf fisttp ret push aam push or out sbb stc xchg inc mov and daa add (bad) or xchg inc mov push xlat std ljmp cmp cltd bound mov jae int cmc (bad) lock cmp pusha push mov out fisub mov sub leave sub mov jl inc mov lds sub mov add movsl sbb cmp xchg cltd xorl xor adc mov adc ja lahf cs cmp jb fistpll cmp loopne clc aam and (bad) leave mov xor mov aaa movsb pop rcrb pop iret cwtl stos xchg data16 adc (bad) aaa movaps in call xchg sub lahf jae push adc cmp or lcall inc scas in lds jle andb mov pushf lahf rclb shrl (bad) and imul inc add scas xchg scas test imul xchg fildl xor ss test popa (bad) pop add scas xchg popf jge repz pop pop push jno cmpsb shrb in or sahf mov out in dec arpl mov mov inc loop pop pop jmp fsubs fidivr mov mov repnz orl stos (bad) xlat rorb shl ja (bad) ficompl neg and out movsl dec pop sbb jg or popa mov cli insl inc stos out add inc out scas mov imul (bad) in sar lea hlt jl ja sub xchg sbb mov add mov int icebp push jecxz,pt sarb or mov scas mov pop add push and mov pop mov mov jle sub movl jb pop fdivrs add mov out call and sub (bad) jmp cmpsl clc and jnp cmp and dec popf ljmp pop rorl (bad) mov or push pop or (bad) movsl mov and inc xchg xchg stos add divl jb clc add sub outsl inc xchg fldcw jg add mov add daa push inc or rcrl cld das lret lods ja fcompl xchg and cli push mov rep cmpsb (bad) ss xor or dec mov cld push inc pop xor rcll loope pop ja mov jb rol dec and or mov leave pop outsb mov loopne sti inc pop subb mov data16 dec lcall lcall mov cmp pop jb mov inc or shr xchg movsl scas or and cmp test rclb lea test in lcall fisub jl lcall sbb adc push (bad) mov cmpsb les jb mov cmp adc add ret sbb (bad) stos lods inc jbe mov les push mul dec sub xchg jnp test lds in les push rcl lcall sti pushf icebp mulb mov xor or pop jns icebp fbstp dec cwtl mov icebp subl cmp cld dec popa stos data16 inc mov test mov inc jae,pn xchg sub imul mov fildll push push pop or stc stc (bad) fisttpl lcall mov cmpsb ds dec clc xchg movsb (bad) jge sbb cmp push sub movsb dec and or inc lea (bad) or inc jbe mov addl and or and (bad) jge divl xchg addr16 push bound addr16 dec stc sbb pop cli or insb call dec ret out les loop aad mov pop inc in pusha gs nop adc mov adc pushf push cmp stos push loopnew sub js pop jl mov jmp dec pop (bad) pushf test repnz nop (bad) out ret adc push stos aam mov stos rolb sub jae xor inc jle jg lret mov lcall aas or jmp popa xchg (bad) xor dec sub fwait push cmp out and xchg jle mov inc pop imul addr16 cmpsl inc dec jecxz add mov imul dec jge mov pop or pop inc adc aaa xchg inc mov lret dec stos xchg and add repz pop ds mov cmp adc sbb add je out in xchg mov faddl jnp xlat dec xchg les fiaddl inc orb ret mov mov push jp fwait or mov mov mov mov ret xor rcrb or jle inc mov pop lods dec add push adc mov arpl mov xor mov ja bound jle xor mov popa pop mov movsb call cmpsb or dec ljmp xor out fmull loopne shrb xchg adc cmp shr xchg ljmp lahf sub push push or aaa push inc adc sub test mov cmp dec jg outsb and mov inc dec xchg test hlt mov jp jnp jne and jp (bad) pop dec into in (bad) lret xor fcomps test push dec adc jno push movsb outsl (bad) aaa icebp cmp xchg cmp mov jnp push orl sbb cld repz xchg mov (bad) mov pop push int mov (bad) mov push mov jle xor sub fs jl jmp movsl mov lods push test idivb (bad) (bad) adc mov cwtl sub ss push aam push cltd mov fimul inc inc mov shll in xchg scas rcl push add lock dec mov daa xchg jmp scas mov popa aaa pusha add xor mov push arpl arpl icebp repnz cli mov idivl fimul mov jae imul stos xor movsl out imul cli push ljmp test mov mov sub into mov repz cld imul push or mov arpl add aas cmp pushf jbe add mov mov addr16 daa iret add add imul ret jo mov loope arpl cmp sub addb cltd dec push jmp inc out stos adc cmp fisttpl cltd loope dec cmpsb mov inc int dec dec push sub xchg test cmp mov xor test inc dec xlat mov dec fwait ret mov popf int sbb vpavgw scas insl or add fst add test dec mov sbb rclb cs test jns leave mov andl push sbb pop cs xchg push push pop lret xor and dec (bad) xor nop cltd cmp or cmpl icebp rcrl xchg dec out (bad) pop pmaxub mov stos xchg pop stos cltd sbb aam and ja pop test imull sbb divb jno sub xchg dec jbe or int3 in push push push insb rcll fmull mov adcl jae mov leave ret mov test fwait pop scas fwait int pop fisttpl add clc out inc (bad) jb jmp cltd inc add mov jne mov call (bad) test pop scas pushf stos add pop data16 cmp push lcall xchg mov lcall and xor pop push and cmp mov fsubp mov cmpsl xchg movsb and push jno insl icebp jae or mov adc or clc leave pop lea aam ret test cmp (bad) (bad) xchg negl adcl pop lea (bad) sbb mov aam jne pop stos test inc push lahf ds jp not add xor add mov cli stos fnstsw popf jp sbb imull xchg faddp call fimul sbb mov dec (bad) out jb push add test movsb out pop fildl add in and sarl stc inc push cmp sbb add sub decb mov loopne lods or jns call (bad) push inc aad mov lea (bad) stc iret (bad) push add cmp mov adc jp in popa push les and inc shr xchg or mov aad daa lcall aas stos cmp cltd loopne push or inc test jecxz lcall rcll pop cmpsl pop daa loope mov outsl stos mov dec cwtl sub mov dec mov pop sub mov jnp dec icebp adc cs mov xchg dec mov and xor and je xor mov jl je fiaddl (bad) or push aam pop out adc cltd xor fcoml repz fldl jg aam adc mov push std out add je ficoml stos cld push dec int3 or testl in mov aas sahf pop sbb mov (bad) mov adc outsb sahf je xchg dec (bad) fmuls insl jae mov call fisub and mov lret jg sbb sbb stos xchg out loop rcr ficom sti add cmp das loopne xchg mul jle mov xor sub push test vdivsd rcl gs ljmp mov pusha (bad) fst add aam push adc cmp andl fs repz sub imul inc mov mov xchg inc cmpb movsb rclb jne xchg mov repnz rorb push pusha add push or out push bound push add nop test iret loope pop fcmovbe aas test adcl mov lret sbb mov dec idivl mov aad sbb add ja stc aaa mov orl add or mov adc and xor test xor add enter sbb lcall mulb les push rorl mov aad add pop add inc (bad) lret rcrl sbb inc stos call lcall inc add cs inc xor xor add push adc js clc in ss inc adc dec mov mov fnstenv ret inc pop pop mov add xchg fldl clc imul stos popf lcall push xchg push push popa pop adc ja adc cwtl scas and push (bad) jne ret mov test and cmp jle xchg out sub cmp js jl paddusb movsl mov shl add and adc sub xorl (bad) stc in fisubr popw aad (bad) cmpsl push sbb test mov adc cmpsl shl cmp push mov ror test mov sahf pop dec fistpll xor jmp mov sahf dec jne mov cmp jl jmp mov xchg out call in (bad) xor loop imul inc inc push sub lcall stos or aas cmpsl je les popa leave xor cmp push loope push adc jae cli pop movsb cltd in push inc sbb cwtl mov xchg in adc jmp jle add jge (bad) into ret cmp gs fwait ds addr16 (bad) call cld add cmp lea icebp pop adc sar mov mov hlt cmp arpl iret (bad) push int3 inc mov or add jnp,pt ficoml xor inc data16 es inc mov mov hlt and inc jne pop stc leave xchg clts pop (bad) out mov jno add sub inc (bad) inc sbb mov stc add mov sbb cmp mov aaa jp and sub xchg popa and arpl inc nop push push outsl fldl cld int mov pop inc jge,pn inc sbb dec stc jae xchg cmp mov mov fst jg xor push pop call mov in and sti sbb out icebp xor test imul in mov sbb lret xchg clc push dec rcl cmp push test icebp sub mov lcall icebp stc add push lock cmpsl sbb xor push ja sti xor test adc and cmp add sbb fstl pop fwait inc pop mov ja sarb jnp fldcw mov and arpl adcb xchg xor mov and mov push sbb cmpsb in mov mov movhps mov (bad) (bad) xlat or mov mov xchg lds mov js ja pop add ja mov jns mov test fisttp dec xlat les lcall xchg mov mov imul popf push push imul jbe fstpl xchg lods xchg aas and stos push xor test sbb xor in std push (bad) pop enter push bound bound or out or sbb adc imul loope xchg int3 xchg mov aaa sbb test bound inc mov push mov in movsb (bad) test std inc (bad) cli loop mov and sbb shlb jmp repnz insl pop mov pop sub aaa sti cmc lcall call push push xor in leave aaa cltd aad pop adc jge and or lret sbb cmpsl pop or icebp or insl aam sbb or dec mov dec mov xor fdivl jge add push (bad) jo sbb xchg inc and push arpl mov and sub lock xchg aaa add mov mov cltd mov pop (bad) jle inc (bad) jmp leave movsl ds sbb testl add (bad) push outsb ret jmp sbb inc fsubs into sbb out inc add mov fsubrl pop movsl (bad) aas xor cmc inc push ja sub popf aas inc sbb xchg mov mov test cld shrb push sub imul mov in cmp sbb and cmp push mov cmp dec push sti cli movsl dec mov in pop pop pop add mov add cmpsl sar daa ret imul xchg or inc bswap pop rcll sarl jg jo into cmc inc (bad) mov mov lods fiaddl jl int3 and sbb pop leave and inc xor (bad) jae leave xor stos cmpsl jmp dec push loop add scas dec add cmpsl dec and cmp popa hlt add mov ss mov add xor sbb push jp cld ja jle je bound (bad) call fldl cmp add mov adc nop test lods mov pop jnp sub fsubr sbb inc jne dec div stos cmp outsb decl (bad) aam jo loop std mov push hlt popf or int3 mov adc inc cmp jmp inc inc rcl pop xorb jecxz xchg dec ret sbb or cld push lret xchg xchg fisubr pop rcrb sbb push sahf lret pop jmp arpl pop jb lods mov xchg enter push int mov pop mov cs xor pusha jb sbb and cmc (bad) mov fcmovb mov and lea cld sti insb xchg test stos inc fcom jo inc test fidivl mov incb jecxz ss aam inc mov add and sbb out lret jge adc push js clc push mov out push shrl or lret adc cmpsb in jne jnp data16 call or jnp jg int3 test and inc add or subl fistp dec adc rcll or dec push lods std push nop or and lret loope xor (bad) jbe imul mov stos and pop adc cwtl ss movsb xor mov cli sub add dec idivb rcrb push movsl cmpsl push add shlw or sub sbb jp dec push jne pop aad xchg (bad) pop xchg iret jae test push and cli mov xor mov dec add pusha push pop sbb (bad) ja mov pop mov jecxz sahf lods and ja push rcll (bad) rolb das bound inc outsb enter mov lcall rcrl imul insl insb imul aas out add jmp popa pop xor push adc fnstcw sar dec jle sub pop ficoml dec aas lds dec dec inc mov clc (bad) mov das push je jmp test imul stos and mov jmp jo std movsb ljmp adc call nop lock push enter dec imul pop lret test sbb mov push cmp stos fst (bad) xchg or pop imul cli cmp subl int3 mov aad in insb sub mov sub adc inc and mov and mov das adc lods and lods outsb cmp nop and test nop outsb inc mov pusha es add ret dec mov mov pop lahf loopne xchg loopne cwtl aaa xchg imul inc pop insl out fisttpll pop xor shrl pop pop dec addr16 sub fistpll mov fs sbb push aas push nop rorb mov aam test and push sbb add fisttp dec xor mov notl xor cmpb mov pop insl gs lods push fldenv (bad) (bad) stos sbb and stc add arpl ss mov push xchg aas roll (bad) cmp xor stos xchg push in adc fcmovbe in mov imul xchg and jecxz lret push (bad) out in cmp sub dec mov (bad) inc cli adc pop divb xchg movsl mov pop sahf out cs mov xor insb push stos lcall fmulp mov ss fs and mov lahf mov scas sbb adc imul mov pop cmp jmp or pop js aas iret jg xchg rorl fcomps movsb pusha push fsubrs aaa sub jmp lea sub lahf std inc xchg faddp iret dec sbb xor cmpsb adc xchg cmpl (bad) repnz jmp imul aam cmp ljmp imul dec js pop push pushf xchg clc bound inc xchg mov js pop pop adc pushf push scas cmp push xchg test inc sub jg in inc in adcw dec xlat mov add sbb or lret and jbe or mov mul or pop rorb (bad) nop popl jns jp in push fidivr add cld jns mov mov inc jle nop mov fs dec std pop inc sub (bad) aaa mov out in ficom (bad) mov incl (bad) xor fwait inc or push mov pusha mov movsb addr16 daa lret pushl xor inc pop or or aad pop jecxz mov loop or mov xchg dec xor mov cmc pop add rcrl jnp inc test or fistpll cmp cmp das out sbb xchg in jno in outsb inc cltd and (bad) into out xchg adc adc int or inc aam imul mov lcall sub lcall enter mov stc repnz push push in les add fwait aas arpl xor mov cmp (bad) push adc lea add dec mov pushf rorb jmp aaa add addl test inc cld sbb push cmc orb cmpxchg into adc cmp iret jns stos test cmp loopne cld cmp xor stos xor es push xchg adc fwait shrb jno mov xchg enter push and pusha imul mov bound inc call jge xchg rorl test pop (bad) adc push xchg dec std sbb aas mov mov lahf loope inc xchg (bad) xor in and push xchg xchg xor lock ret cmp jno pusha adc sub cmc jb or xlat negb lahf test lcall dec and lods sub (bad) jg das bound ds and test and push into fildll pop mov fcmovb or xchg in and lahf fcmovnbe mov mov ss inc in mov outsb sub dec cmp push cltd adc or ds push adc pop call cmpsl and mov sub adc insl clc out loope rclb xor fsubrs cmp mov jns dec mov js pusha add pop add pop in pmulhw std inc lahf aaa jl fisubr push ljmp mov ret iret and add push mov ret adc sbb jecxz stos dec mov add (bad) inc (bad) mov bound push inc ffreep add add lods nop xor sub mov mov cwtl or xchg imul mov jnp sti adc scas fwait push push xchg inc sub aam loop nop fadds push (bad) hlt lea jne arpl aad lret mov rcr fbstp push mov jl fnsave mov lret or jae dec pushf mov sti and cltd ljmp push sbb xlat pop cli xchg sbb cwtl rcr cwtl xchg inc int out ja addr16 outsb movsl xor pop imul push lea xchg sbb pop pop (bad) xchg out add dec pop data16 xchg push out out mov in imul jecxz stos fstl push loopne jp adc add out cmc and adc psllw jb mov xchg cmpsb mov shlb sub or movsl orl and pop (bad) push (bad) into hlt push dec fisubrl (bad) adc mov sub mov xchg add gs dec jecxz sahf and decw or inc and jb mov pop fcomps inc cmp imul pushf lods in mov pop (bad) jmp jle jae pop dec outsl dec mov lds cli mov cmp sub or in sbbb xchg lods ja in xchg push jae cmp cs sbbl je jle test stos (bad) out lds push xchg mov in shrb hlt xchg dec rolb insb add scas jne xchg xchg xor xchg mov je jno pop jns in lcall repnz mov mov inc inc inc inc dec pop fistp or xchg jne pusha outsb cmp cltd sbb mov dec dec scas aas fldt mov pop xor ret mov push fld xor adc rclb adc sub (bad) xchg sub in cli mov jns xor in fisttpl adc pop out fisttpl test loop xor repnz test ljmp loop popf rcll push mov stos fiaddl jl xchg sbb add xor fs jle (bad) imul (bad) dec stos adc add and ror sbb out add sub xor rorb dec and (bad) into sti shrb hlt push xchg sub xchg aas mov mov push jmp mov jle sahf ret sbb or cmp sub inc aad daa pop mov or push imulb lret sbb sti jns dec mov repz push xchg (bad) sti mov adc jg subb data16 mov adc xor mov idivl xchg pop add cli dec xorl ret call rolb inc scas push xchg outsb repz or test outsb outsl mov inc push and mov fidiv sbb ss sub jb pop dec or push cmp dec push and in push icebp jg or mov xor iret jge or cs inc in daa mov dec jecxz mov (bad) fiaddl scas and mov jns pop imull jp rcr push and scas dec mov mov pop pop (bad) dec push dec xor pop mov xor movsb jns dec or xlat or leave shlb add fadds cmpsl bnd jb lcall adc stos mov decl xchg xchg mov rorl mov or pop lods push mov sahf xor dec mov iret dec or mov inc rcl insb sub scas fisttpl insl ror inc ds xchg stos lahf or inc add cmp pop call enter sbb cmp lret dec scas dec lea mov xor cmpsb (bad) cmp jne push sbb nop cmp cld push push lret dec fsubrs movl sahf cmpsl faddl cltd mov mov sub mov nop sarl lds sub fcoml fisubl adc push aam pop dec inc (bad) fcoms jb out loope ds cld mov and mov icebp jnp xor insb int3 push es push sub ja ja jae push ret jne dec xor arpl loopne outsb ret mov into hlt add cltd push and in outsb jo adc out pop out dec test mov cltd cltd pusha sbb pop xchg push repnz les int fs or das das dec or fnstenv mov sub jle sbb cmp out push jl js mov sub or fsubs jno pop repz rorb pop (bad) mov cmp mov or (bad) ret hlt test je add les cli imul (bad) es outsb mov mov cli add mov dec xchg lea es xchg inc mov lret mov or adc dec inc insl pop sbb (bad) mov cmp fisttpll mov mov (bad) pop or ja (bad) cwtl fbld or mov adcl sbb push add add mov (bad) mov mov push mov (bad) or push mov in add inc cmp inc xor mov mov insb lock cmc lret xchg leave ret push loop (bad) xchg mov push mov jo test movsl adc gs into sbb shrb pop pop inc sbb mov pop and (bad) fbstp xor jo (bad) xor or push inc or add fisubl xor sbb adc sbb mov faddl lods xor or popf mov in and adc inc in push andb mul inc or or loop es ss push bound pop ret lret mov in (bad) test pushf in mov xlat cli pop pop cmpsb mov cwtl add sbb (bad) mov aas lahf and out push test (bad) sub clc jecxz addr16 fistl xchg popl stc inc cmpsl int3 adc xchg cmpsl push into int adc (bad) mov (bad) decb test inc out clc inc dec movsb fisub pop push repnz outsb hlt xor mov shlb fidivr scas mov test sbb cltd flds adc sti mov in loope popa aas push mov pop or cmpsl mov push inc adc sub mov dec push adc or mov jp fcompl push xchg xchg mov movsb loopne add fcmovb rcr and repnz mov mov in pushfw lods sub xlat xchg mov adc imul mov divl jae (bad) daa adc pop aaa nop aam dec fsubrp lock int push sbb jbe or push dec xor arpl pop popf mov mov jge mov dec mov fucom push xor movsb insb ja dec mov jae lods stos loope mov repz fcomps ljmp pop cmp jbe fs xchg mov add (bad) cld xchg mov push imul push lahf (bad) fwait lock loope fdivrs jbe pop mov stc test or test inc cld pop mov (bad) fwait lret fbstp sub xchg xor pop lds lret push loope stc sub jge popf push dec add pop cmp (bad) dec sub dec sbb cltd mov push repnz rcll xchg and pushf (bad) cmp mov cmp inc movsb mov xchg push and jno mov insb xchg push mov xchg call jae xchg sub push insb popl cmc out push addl arpl xorl ss outsl mov jbe xchg nop mov add push mov push pop int3 cmp arpl outsb xchg js mov cmc pusha pop lock mov rcll mov inc stc mov stos (bad) aad dec add xchg mov ds (bad) sbb lret xchg lret popa out inc in and dec push pop andl xchg ret push adc mov test jbe jnp (bad) iret addr16 and pop xor icebp stos xchg jne jg add in push mov cmc mov push mov stos pusha cltd rclb xchg sahf add jb aaa popf fcomps in int xchg jnp arpl push aad call jecxz sbb inc ljmp mov mov add stos mov outsl xlat add cmp adc sub mov dec add xchg push mov movsb mov pop jne pop das mov pop pop cwtl or (bad) (bad) inc dec sti ljmp jb daa xor xlat mov sub rcrl fldcw and cmp xchg lods xchg enter rcrb (bad) je mov (bad) sbb jg add pop xchg int3 lea sahf andl inc pop fdivs push es xchg mulb cmp dec inc mov xchg fstpt movsl pop cmpsb push and or jns movsl sar fisttpll xchg add adc jne inc xchg push rcrb cmp mov pop add add push hlt pusha push and mov pop jecxz in (bad) inc and inc xchg pushf shlb mov arpl pop (bad) fisubr aam mov xchg jno aas insl mov leave mov icebp sbb mov rcrb or lret jl cs xchg fstps pop cmp add fcomip movl xchg fdivrs push mov rolb in push subl call imul mov test ljmp fwait dec push push add loop (bad) jmp add jns mov dec lea cli lock xchg test xchg inc lods std cmp cltd jp stos jns mov mov dec les lret fwait aad mov (bad) in push clc rorl sti dec (bad) mov sub iret push loopne xor test mov divl fst pop xchg mov push inc sarl lcall xchg xchg decb xor stc shl push popf cmpl add test in stos ja or xchg and xchg and push sub mov arpl clc sbb ds mov mov or pop jmp lods loopne es test repnz insl inc or in or dec dec lret (bad) out lds ss negl sahf movb sarb sub (bad) sti sub and push mov lret sub xor mov sbb pop and and stos pusha or pop lret or xor sbb inc les jbe fistp inc adc mov push (bad) jbe movsl pop mov mov push test mov and xchg jbe xchg push gs sbb or fiadd inc sub mov mov mov (bad) adc push loope imul stos xor sub cmovns pop jnp sub push and mov je (bad) mov mov inc cmp and int loop pop int shrl or dec adc icebp or push and xor loope lcall and xor daa mov jae jb jg push out cli (bad) (bad) std xchg cmovnp push pop mov xor and xor jmp xchg mov gs imul aad subl lods sti ljmp out mov cmp and mull jecxz enter sub mov fldcw (bad) pop nop push sub jbe cmpsb cmp pop mov ds idivb add dec std inc insl out test aaa xor nop cmp nop dec jecxz mov aas push int sti nop cmp xchg xchg adc add stos sub mov mov xchg inc xchg jnp dec mov nop icebp cmp out mov mov ljmp adcl or popf push jmp jge pop mov cmp out xchg and (bad) cmp test sub pop adc rolb push push adc sub cmp in xchg movsb lods jns adc (bad) rorb adc nop cli mov mov cmp mov js or ret aam and add cli push lcall out adc lods int3 mov (bad) add push and std roll push ja stos sbb jne out inc out in jae sub sbbl movl nop push inc jp out lds test ja mov dec lahf jp aas xchg add xor dec aaa jmp ret push push cwtl in and mov popf pop into ret mov rcrl andb rcl faddl test lret cmpsl adc hlt daa xchg add mov cs mov lds sub movsb add lret je mov fnop lcall mov ret (bad) lods mov push adc adc lock mov les or adc dec daa sahf je inc (bad) lcall idivl es mov ljmp pop mov jp lods addr16 daa adc (bad) rcrl rcrl push movl push frstor mov adc add hlt adc push clc popa aaa adc add xchg popf inc fdiv into sbb mov jnp sbb pop hlt sbb add xchg inc pop ds out pushf or jecxz mov pusha jbe repz pop sub xchg cmp xchg repnz xchg add xlat push enter negl loope scas cwtl repnz rol inc sbb mov jb and mov jle jnp shr push ljmp call xchg in xor push mov add das mov add jne pop mov lret (bad) loope bound sub xor push iret es test frstor leave jnp dec mov stos push les bound movsl js rolb or or in (bad) notb sbb mov (bad) std pop pop mov (bad) jmp cltd cli sbb push mov add jb pushf das lcall xchg dec xchg sbb push (bad) dec repz mov aad (bad) arpl lock and push xchg fs or sbb mov in jns into adc (bad) jg mov sub ret stos ret xlat adc outsl aad jno or clc leave jne dec sbb push xchg push sbb jle rcl movsl repnz pop pop cmc imul ret and frstor xor add js pop lret out xor mov push xchg shrl lock stos xchg pop fnsave insl pop xchg push lret add (bad) adc enter push or or ret dec and std daa cmp scas xchg inc cmc or xchg xchg ficoml (bad) dec cltd lea ret aad loopne and sbb shlb scas shl pop jno shrl inc dec mov out mov cmp xchg adc rcrl in jl push xchg aaa sbb add cmc hlt int cmp bound add xchg loope xchg and jp icebp enter in aad sarl gs inc sahf xor aam aaa fisttp in rcr jmp sbb js fistpll mov and fisttp into xchg mov js jmp cmpsb cmc xchg iret imul xor pop repz sbb jmp (bad) fsubrs pop mov cmp js test (bad) imul popa mov in sahf sti add push ret push jmp sub jg leave or xchg mov xchg rolb xor (bad) mov sbb out pop mov into rol xchg pop push pusha push xchg mov adc bound cmpsb add xchg jno jl iret push das mov lret fs jnp test xchg inc sti pop adc cmp cs pop rorl xchg iret push sub insb cs leave (bad) jge movsb out mov lret (bad) jns jp or adc add pop push or mov and inc dec xchg daa aaa in lcall cmc in cmp inc push inc pusha add out outsl into sbb notl push out xchg adc inc mov adc xchg pop (bad) adc mov pop fimull adc sub clc aad outsb push or negl sbb mov or mov push je scas sbb stc mov (bad) adc out out pop jo data16 enter je je adc and xor (bad) fistpl mov push (bad) cs adc push repnz clc bts js xchg mov enter fcoms jne push mov jo or xchg aad or mov mov push dec dec sbb mov jmp (bad) insb push icebp inc shl enter pushf call adc enter or sbb adcl mov mov stos or daa mov add fiadd rcr cmp mov xor pop stos bound (bad) call push sar pop pop sub xor sub lret aaa or xchg mov cld and cmp ret adc std push (bad) xchg sub loop xchg jmp nop or fs add pop cwtl (bad) inc cmp and inc push insl mov mov test (bad) arpl ljmp out push (bad) and pop push movsb (bad) jnp mov mov xchg sbbl pop or mov clc lods lds out cs xchg insb jno fwait mov (bad) jmp adc stc push jmp push lods (bad) inc insl cmp lods push mov int leave hlt rclb mov and jae sbbl int out push add ficoml scas push dec mov adc xchg mov pop ds dec cmp jl scas push mov aaa into sub in push mov jecxz push test mov jecxz inc pop int xor cwtl into cmp mov xor and inc data16 dec (bad) popf sbbl es xor mov jno outsb sub bound sub add jle pop fbld mov faddl insl or xchg jg inc inc xchg push mov sub cli jno es add ret lock mov (bad) aad xchg fstpl jmp xor test ds add aas jmp popf mov lret or add dec movsb push adc outsb and adc pop (bad) mov adc sarb xlat ret outsb notl sbb sbb jle xor add and mov jmp pop insl (bad) fidiv jns stos xchg xor add cmp rorb lods (bad) in mov js sub dec and data16 add lcall test mov inc stos clc push (bad) xor inc jecxz daa scas aaa cmp add addr16 out faddp xor or xor adc cmpsb fcompl add add jo fisubl mul jmp mov icebp pop mov popf and inc adc and xchg jne movsb fidivr xchg add leave mov test xchg push (bad) adc icebp ret lock pop add je in fstpl (bad) fisub fbstp pushf mov inc adc cmc cmp fs aas mov into jo clc cmpl imul sbb sbb stos out ljmp clc pop (bad) clc mov xor push lret stc popa lods imul scas sbb dec into sbb stos sbb outsb outsb cmpsb inc push add cmpsl push test in mov int or call sbb in fstpl mov xchg xor int dec movsl cmpl and pop jbe call in fcmovnbe fucomp repz ljmp jge mov and and outsb lea push inc xchg pop arpl imul jns xchg test mov paddb aas js pop xor ret xchg fisttpl test out (bad) rep leave jge xor (bad) rclb test pop push testl mov scas cmp faddp gs xorl and xor (bad) or inc in sti lods int mov addl inc mov sbb lds dec xchg je nop in xchg lcall jne fnstenv mov fwait lods adc js jl sbb fiaddl cmpl repz and out xchg or sub rcr sti and aam mov daa dec lret cmc adc lret cmc sbb push push lods and cmpsb lret xchg cmp add xor lock (bad) js fstpt push aaa adc enter lret jo add inc jb cwtl dec sbb jo inc fnstcw or mov scas test adc cli stc dec insl adc inc test scas sbb and es jb (bad) sti loop mov insl in dec cmc ljmp loopne mov push mov push scas pop cs mov dec ss scas int3 xor add cmp inc jecxz in add lods xchg push mov mov movhps adc shrl dec loop mov add jecxz mov ret xor ret adc lahf icebp int3 dec adc sti popf (bad) ljmp (bad) push (bad) sub lods and add xor (bad) mov pop sub outsl pop adcb (bad) mov (bad) mov dec lods addr16 jbe mov aaa dec and mov lcall or in mov (bad) icebp in repz in adc inc out pop les call (bad) ljmp cmp hlt loopne mov xor push (bad) aad dec push clc inc push jmp dec dec repnz jne out inc jp push and out les sub ficoml or dec xor imul mov out mov cmp into arpl js or rcrl add jb or (bad) push imulb insb mov insb fwait sub xor and fcoml push dec inc mov int xchg push push pop lods bound lods pushf gs xchg inc lods or jmp xor dec js mov aaa xor mov stos shrl cltd clc cmc mov pusha push jno movb leave repz test cmp aam mov inc mov sub out jmp xlat pop cwtl or pusha cwtl mov mov frstor addl out add fcoml adc mov jecxz jp fdivrp pop sti ret rolb cmp adc push pop inc ss lahf out inc ds pop sbb and push sub outsl and xor lret imul sub cmp adcl daa ljmp xchg movsl xor dec add add insl push jnp pop (bad) push inc test xchg popa push je data16 adc cwtl (bad) mov in rcrb inc fstl jnp sub add pop out cmp mov jae push xchg lret mov in out je adc gs and pop pop sub pop mov jmp (bad) pop cmp test dec dec aad sbb cltd ja mov pop push into gs (bad) jno js lea aas inc fadd cmp mov and cmp sarb sarb daa lods xchg xor call ljmp arpl mov mov adc icebp cld xchg adc mov into clc sti sbb in mov mov pop or jge pop test add and insb mov rcll push jl push in ss lock mov add mov (bad) inc cmp sbb (bad) jmp shrb test loopne sti jmp lods fucomp into test jbe rcrl pop scas iret mov loopne inc sub aad sub pop (bad) (bad) sbb or mov stos or stos inc shll mov ds xor dec lret pop mov outsb jmp test jmp push push pusha cwtl mov xor popa sub or stos adc test push jmp divl jne data16 test gs fisttpll mov xlat cmp cmp add jno sub and adc push out sbb out clc std pop ret add movsl cmp mov jnp cld fisttp sahf mov pop call jg daa sarl aas adc dec xchg cmp sub cli fsubrs fsubrp adc cmpl jl,pn fucom adc cmp inc movb mov push jo cmpsb jmp clc and imul gs and out inc popa or adc outsl aam xchg std mov data16 nop jmp inc dec mov lahf and decl mov cmp test cwtl outsl or fdivr push cmp pushf (bad) cmp xchg stos jb loop cmp sbb sub fcoms sti push inc sti test fidivr pop popa dec inc lcall dec inc adc mov popa ficompl into pop pushf xchg popf les jge daa call imul mov pusha mov add scas mov add test xchg jp cli stos loopne aad cmp lods dec pusha sub out xchg and insl out pop repnz scas dec jnp es add int3 out in mov sbb (bad) adc enter mov testb pop nop loope cltd mov pop leave loopne dec test divb fisubl js lods mov adc repnz cmp mov addl je push mov lock mov mov cmp pop fstpt repz aam mov xlat cmpsb cli pop xchg lock inc repnz xor pop sub xchg pop push bound pop dec push out adc (bad) fdivrs push cmpsb lods (bad) arpl cmc fmuls cmpsl aad daa add sub xchg mov mov lret and leave mov (bad) call sub jne aaa xchg xor (bad) and cmp dec (bad) jb pop bound sbb add lcall scas mov add sub fcmovne ljmp fwait int pushf pop dec or in fildll imulb stos xor in mov mov mov outsb cld or inc out cmp xchg (bad) negb jbe push dec test inc scas xchg mov test pop hlt leave lock xchg mov inc rcl imul or mov test movsl or ret sbb test jno iret cmp out xchg incl or xlat fldz addl xlat scas inc mov dec xchg mov lsl orl lret insl ljmp fs cmpsb adc fs inc xor inc sub fadd arpl fdecstp mov push mov lods (bad) lock loop gs data16 xchg lcallw add insl push xor leave out cmp aas and adc pop dec inc movsb jle (bad) pop out jo dec lds test stos imul sub jmp stc (bad) stos in bound addr16 mov xor loop mov dec repnz fdivr std sub mov sti push xor sti add imul aad mov fildl and xchg imul decb sub in xchg (bad) out out icebp jmp fs test hlt clc test arpl cmpl in adc es sbb lods int3 pop sbb pop jnp repz out jb pushf cld mov jg std test dec (bad) inc push pop pop adc les xor or es dec cmpsl imul pop lret je cmpsb mov ds jbe and mov cmpsb push adc nop mov insl push popa stos test outsl insb xchg popa (bad) cltd jg lcall adc xorb sbb and mull pusha bound add xchg in fstl inc (bad) jmp in inc xor lret lret out push cmp mov bound xchg std cmc or seto loopne xor int adc flds xor mov inc pop aas xchg decb mov mov imul sub loope (bad) adc rolb je xchg sar lea imul ss sub ja xor out loop lods pop or aas icebp xchg push js add into inc je lods mov adc or add inc out xchg push cmp cwtl xchg sbb inc icebp sti cmp fs push movsl out aas bound call test push pushf (bad) xlat rcrl add and adc int3 push out cwtl insb out cmp xchg xchg xchg es add dec ljmp xchg lret (bad) pusha (bad) xchg sub test pop icebp sub jnp inc and scas add leave pop jb shrl cmp adc and sahf adc pop jle iret cmp mov dec jae mov push stos lcall xchg xchg test cmc test sbb out pop aas mov fisttpl add (bad) pusha jo or (bad) lahf xor sahf cmc (bad) sbb jl leave shrb aad inc scas cwtl push mov fisttpll push aam mov int3 lds mov cs or das mov xor stc in xor mov mov mov ficoml es into jp cmpsb imul fidiv cltd add (bad) enter mov (bad) pop mov out ficom movl push dec and jno call and les ja movb decl xchg mov mov xchg dec mov push mov xchg inc xchg ds mov lret rolb orb stos outsl icebp cmp insb lahf loopne imul stc enter inc repnz cmpsl push sub call xor mov mov and pop pop (bad) stos or (bad) lret sub sbb adc jae int push mov and sbb dec mov inc adc cltd pop movsl arpl mov insb and add nop cwtl mov imul lahf popf xchg in dec or add mov cmp cmpsl cmpsb cmp mov adc addr16 add push scas add and popf cmc or (bad) or out (bad) (bad) ds push add int inc (bad) cmc adc pushl int3 test inc xor lahf adc push leave jae sbb pop in fs inc ss fdivs sarb and and movb push adc mov (bad) into xor mov inc data16 (bad) popf push add xchg movsb xlat dec aas (bad) ds call jp mov orl cmpsl test rcll int3 sbb jne hlt cmp mov mov fisubl adc mov mov dec lods xor rol sbb fmuls push pop push jae fstpl das pop inc pushf lret push negb cmp jne cmp pusha mov shlb loope (bad) and fidivl andl (bad) xchg fdivs scas xchg xor inc out test (bad) lret push push ret mov (bad) and bound mov xor sub cs imul pop and and lea es (bad) mov cs sub mov cmp mov (bad) sub inc cmpsl jo testl popa stos mov mov psrlq aaa loop pop sbb repnz add or movsl pop push outsb rclb cmp mov mov jo outsb test rolb mov push push pop das push cltd push mov mov subb xor pop cmp lcall cwtl int nop mov adc leave ja test mov (bad) dec jecxz and and xlat adc dec jne sub repz adc mov dec inc inc ds pusha push arpl xchg sub fildl test lock jnp xor cmpsb or jno in aam loop in decl ds mov test aam fwait (bad) sub pop sbb sbb push adc clc jmp js cmp push add ret sbb pop imul je push mov test je hlt or je xchg mov andb dec jmp loop mov lcall xor scas clc jecxz jae or mov mov clc out lahf pop inc xor add aad aad ss int inc fs clc sub mov sub je,pn gs dec shrl fsub call xor jo jo mov mov xor mov daa jae mov repz scas adc sbb (bad) mov inc mov add push dec and es (bad) push rsm add das inc pop mov out dec add jo cmpsb ret rclb fnstsw sbb jge fwait cmpsb test adc fs cmp mov push sbb dec cmp outsl dec lds sub adc pop mov or stos fs inc cmc lock lret jp pop mov jg in negb push icebp xor js push pop or push out jno push mov jae dec popl addr16 dec adc cs lahf jmp dec add mov test ljmp inc push lods daa mov gs jbe mov cmpsl inc pop pop js mov ret call xchg sahf jbe js and jb dec xchg push and mov pushf cld rcl es cmpsl jg gs (bad) daa inc push neg adc sub (bad) lret jl jmp push lods mov sahf inc sub cmp scas (bad) jmp mov shll jmp push dec sbb sub xchg push jp in fucomi pop sub xlat aaa or dec jno pop add inc adc (bad) cltd faddl popf stos (bad) cmp nop fnsave dec lea (bad) mov ficomp jle mov incl xchg insl mov movsl cmc cmp mov int3 and xchg stos aad ret std sarl cmpsb xchg mov in cmpsl leave mov test outsl jae or mov xchg mov adc fisttpl icebp dec mov sub add cmp leave cmpsl (bad) and ljmp (bad) fcmovu test int cmp xchg out scas outsb jne push xchg stos das inc cld and sbb dec dec cmp mov pop xchg inc sbb sahf mov lahf push jmp xchg adc shrl fcomps sbb dec loop sub sub adc push je mov lret in gs xchg mov lods js orl subl mov test mov (bad) mov rorb cmp arpl std jb scas pop les mov and push test and xchg (bad) es in mov and nop pop rcrb jge and stos ret adc dec daa xor jp mov push adc fsts imul jecxz cmp test mov push mov nop fcmovb jg cmp mov ja inc or mov mov add sbb data16 (bad) and sbb sbb dec ds cmpl inc cwtl jl inc pmaxsw mov test inc push leave pop aad pushf mov in add in mov bound arpl inc addr16 ljmp mov inc fidivl mov or stos movsl and lcall xchg test fidivr mov or stos adc cltd hlt cmp (bad) xor (bad) je inc test dec or out or (bad) leave or cmp jge (bad) sub pusha into aam loop lods lock dec xor mov jmp sbb or in test mov (bad) jb dec ljmp fcomps add xor xor jecxz mov stc and in fcomip and fisub in or xchg cmp cli imul sbbb nop xor mov pushf lock sub pop sahf jne or das pop pop pop icebp testb cld pusha shrl hlt sarl jle movsb mov cld cltd push outsb push in sahf xor (bad) push add negb pop addr16 subb sub or pushf push lock jmp sti xlat in jle sub cmp xchg popa lea out inc inc iret fdivrs sbb pop fcmovnb push icebp inc js or lea sti icebp loope dec jge call ret test pop push lea push jo jge popa addl test and movsb sbb hlt push js (bad) imul mov jp push sub pop lret ret pop (bad) xor scas sarb sbb les in cmpsl push cmp and testb iret xchg jb lods cmpsb sub adc enter sbb push mov or fisubr jns es ljmp into ja in movsb cmp in popa sub mov mov mov cmp push rol fstps ficomp out mov subl cs popf nop or fbld dec mov imul dec ja xchg dec sti mov (bad) adc sbb (bad) hlt mov jg into outsl add imul insl cmp das pop cmpsb lods es scas push addr16 xchg insb aas jmp jge or xor sbb ret dec lods leave call nop adc shr jae sub adc lret inc daa es xchg ficompl pop daa xor or xor inc sub imul fdivp mov mov js imul pop iret stos pushf push arpl ds ret mov inc (bad) iret cmp je fmuls sbb imul ret jmp xor scas pop fdivl push xchg inc mov pusha mov push pop test jmp mov mov mov jg (bad) push mov mov push loopne xchg adc pop push js out call xor mov test cli sbb scas add xor stos inc enter sbb jle jl cmp movl mov pop or sbb scas and std sub mov sub mov leave dec fiadd pop inc pushf xchg daa out dec inc cmp outsb fwait jge inc push jo inc ljmp xchg aaa jns pop jne aad pop pusha mov cltd (bad) and xchg jns (bad) mov movsb fs sbb mov divb int pop sbb popf sub stc mov jge push sarb xor xchg cwtl cmp mov mov lock push lret add mov push outsb pop xchg les call push xchg mov (bad) aaa cmpsb es sub cmp fcmovbe cmpsb cmc cmp sub hlt fbstp leave mov das popf lods rorl jecxz dec scas cmpb in xor mov adc jge leave out xor fisttpll fs push je xchg repnz push arpl xchg in sbb mov lock or inc cli mulb jp dec fidivr (bad) or test notl in std jne insl loopne cmpsb je mov iret mov sub push cmpsl add int mov mov dec (bad) jno push xchg (bad) call sbb cmc adc (bad) lods into jl inc fcomi xor ja pop mov loopne hlt mov sbb mov hlt out out mov shl mov lea test sbb dec sti mov mov or (bad) sbb sub mov lods cmp insb mov mov lcall or mov out fisub and ret insl scas xchg test dec fldt loop cs aas dec ret xor das mov xor sbb cli and adc (bad) adc mov insb jnp repnz sti gs xchg mov nop out jmp pop and testb add xchg and (bad) sbb mov ret push sbb pop sbb movsb cld in in fsubs pop pop cmp sbb or cmp aam fsubs pop xchg mov dec dec mov xchg mov jmp pop pop fidivr (bad) jnp sbb xchg stc pop and jmp lods or lds push js push addr16 stos js divl mov dec push out repz sbb loopne push mov dec lret pop jnp fisttp sub push stc mov out into or leave fisub (bad) repnz mov ss push mov push jne xchg in push cltd jns scas dec roll fcomp (bad) nop xor pop cmp jle dec loop in ljmp or cmp stos cmp movq icebp imul xor adc xchg addr16 pop repz sbb sahf mov xchg mov xchg or xor mov iret xchg idivb xchg (bad) cmp mov inc xchg divl repz inc jae fldcw push (bad) mov push pop push pop adc jge in pusha bound daa xor xor aam ficom addr16 sti insb (bad) outsb push mov das pop xor adc out mov xchg push or sub adc outsb lea push push inc jns pop lret int mov or cmp sub and push (bad) daa fnstcw in ds addl push out cli mov pop mov mov push (bad) push cmp add fucomp sbb xchg jnp pushf jnp add add das testb insb mov jae sbb xchg push mov (bad) jno test jb adcl cltd iret data16 pop test dec cli pop mov rcrb arpl fcoms sub xor daa xchg lcall data16 je test push decl pop xchg inc (bad) mov rolb pop pop dec push mov outsb out jae add inc add clc pop cmp mov insl movsb push inc mov in sahf test pop push push dec (bad) into es add ja or inc push lea jp and movsb fistl popf jnp xchg push mov jp (bad) fldenv lea jne add sbbl sub pop cmp inc jns out and iret mov arpl push (bad) cmpsl mov js xor add test adc jp loope or dec xchg enter ret add (bad) je repz jecxz push add push fsubrs mov std mov or jnp test xchg lcall mov push in movl adc ss ljmp dec imulb addr16 and mov test jp mov sub cwtl int cmp adc sub je stos inc ljmp or cmp mov lds dec and jge adc popa pop nop mov pop mov sbbl insb dec cmp inc test push xchg cmp out and outsl mov icebp or stos inc aaa or mov cmp lret xchg sbb dec pushf dec shl test mov and je gs std aaa ret xchg ds jg xchg popa push add push leave adc sbbl push jne and pusha (bad) fnstcw ret add loop push xchg jmp fsubrl adc xor adc xchg aas pop das lods jle jmp mov sub xlat outsb orb std lods pop xchg (bad) fidivl cld into imul pop jns fiadd cwtl fmulp push push fsts loop ds (bad) loope cli (bad) scas (bad) sbbl mov jg imul xchg jns dec enter daa jbe js push push cmp js shlb loop lcall outsl push jmp cmpsb push pop push sub mov testb movsl and mov das add cmp repz mov adc aad test mov movsb notb iret and jg (bad) in pop out fsub pop daa mov test and sbb imul pop xor sub rcr cvtps2pd gs cltd xor repz lods xchg arpl inc push in push and pop outsl jp push add xchg mov insb push popf (bad) call push xchg test outsl dec enter pop in push mov loop xchg in out testb imul les cmp (bad) gs fbld or (bad) lock cmp ljmp test mov int3 push xchg popa and aam es mov int3 mov and pop test xor pop pop out fnstcw (bad) shufps loopne pop pop outsl or and (bad) mov je xor ret mov inc ss popf xchg je push pop mov mov les (bad) dec jmp mov mov and pop pop into lods popf and jnp mov les mov jecxz mov sbb jmp or out je cmp inc mov or ja,pt shll call mov and testl scas cmp je call ret mov inc jge out bnd push leave jnp and outsb mov pop ljmp jmp movups fs push lock out dec (bad) pop adc ret enter mov mov aad imul inc and xor and out (bad) or out or mov loopne xchg mov movsl arpl incl sub fcoml cmp enter insb sub jmp jg enter int3 (bad) ja pop or fisub xchg pop pop pop daa inc insl aad ss fcompl xlat mov sbb mov mov jne into arpl or jp sub pop fildll inc jp mul xor xchg sub imul jnp jo data16 (bad) call xorb call cs cmp xor rcll inc sti and inc pop sbb sti xchg incb xchg repz fwait out adc adc sub dec ljmp lcall aas rcrl aas dec js out std pushf jb repnz dec jne mov mov add sub or mov push dec ds (bad) cld cmp repnz xor mov fimul fadds mov mov lret xchg inc cmp mov stos sub and bound xchg bound add imul or jno adc inc scas add jg,pt xchg push pop cltd outsb push and or cs inc popa sarb (bad) out leave mov imul pop or push or in jmp jmp push and cmc add jecxz xchg movsb pop pop mov jbe rclb addr16 jle ljmp cmp adc aam dec fildll mov or push lret divl loope outsl call sahf add pusha pop (bad) cli or outsl inc in bound call sbb pop add push xchg mov rcr fdivrs in sbb mov mov fcmovnb test push pop test and daa dec jne mov mov lock fistpl mov pop dec and mov push or and lock sub dec iret loop jl js or rcrb imul sub or cmc mov ds test enter mov mov fiaddl cwtl shl mov inc fwait cwtl cli dec push ret movsb mov jnp xorb add sub cmp sahf and jnp pop insl inc lcall mov jae (bad) paddd test mov jb repz or inc push shll push outsb mov rcr sbb jne les negl test mov pop jg jp loope mov jb and addb xor iret pusha jns dec ja push lock (bad) out mov mov xor cwtl mov aas mov ss bnd jmp subl jnp pop jns add sub leave enter outsb mov sub in jle dec and push sub inc and jns dec out sti repnz xchg xchg movsb nop lods push cs aaa lock int xor xlat and (bad) mov xchg out inc fstl jg mov stos cltd scas jo dec pusha push or xor insl push (bad) or aam sub rorl bound mov adc jle repnz jno lock xchg cmpsb addr16 scas das adc sub jo cmp mov (bad) icebp outsb mov sbb and stos in cltd jnp mov xchg out je jecxz out pop pop (bad) sub fldt ds adc addr16 insb sbb mov (bad) ja shl and inc (bad) mov sub imul mov mov xchg fmulp into lds gs aam jmp jg fimul aaa stos sub mov fnstsw ja adc sti fnstsw mov adc enter or lea pop movsl clc fisttp addl mov ret fimul (bad) aad cld pop lcall aas inc jle test ds sub sbb jb shlb in xor jns jb nop xor or insl jns mov mov (bad) mov arpl stos shr fisubl xor dec dec aam repnz mov gs sbb pop test push mov popf push jle inc pop jns mov stos cmpsl cwtl xchg out enter addl out sbb cmp pushf mov (bad) sbb insb mov cmpsl cmp aas mov insl outsl stc ja imul inc mov aad loopne inc lock mov out pop xchg and loopne push cmpsb repz fmul xchg mov cmp test aam pop mov mov mov pop ret or mov mov sbb jnp mov shlb xor adc test dec je push xchg out pop sbb jecxz,pt fsts fisttpl mov ss popa iret stc stc jle inc pop unpcklps bound jmp cmp xchg add test subl daa cmp scas sahf or and cld and cmp into (bad) fnstcw repnz sahf pop insl or addr16 iret push fdisi(8087 pop and ds pop cwtl mov sti or loopne pusha and and dec sbbl sbb jl pop lea push fstp jo dec xlat aas das xchg jb addr16 push push mov aad (bad) xor arpl mov pusha daa cmp fcomi xchg (bad) mov push jo fidivl stos out movsb les dec inc stos mov cmp xlat mov test pop ss or ret (bad) in sbb pop jg push sbb xchg iret mov ret bound dec sti decb mov xchg xor push outsb mov adc mov push add scas iret cli inc gs mov stc rclb sbb (bad) movsl mov aas dec mov xor mov add fdivrs xchg rclb pop jbe add sbb sub cmp int3 mov mov (bad) sahf mov icebp pop or inc movsb adc ss pop sbb (bad) loope jg ret mov and or or roll into dec flds jecxz mov cmp pop inc xor lock mov jl (bad) sub cmp jmp and repz inc in push adc pop push pop popf ds popa roll pop andl sub mov and les (bad) cwtl lcall mov nop ret pop int adc cmp pop push fdivl push or leave push ficom scas xchg adc mov (bad) adc mov and sub inc sbb add fs lahf icebp scas dec movsb mov (bad) sbb (bad) stc inc mov xchg mov inc add jmp add shrl negl (bad) mov mov or dec je push (bad) repz mov aam inc add cmp xchg pusha xchg mov add pop lods jne xchg cmc call insl call xchg ret lret hlt (bad) or inc add push cmp xor repnz jae out lods sbb dec loopne xchg adc xor sub (bad) lcall cltd xor inc sbb push pop das xor mov or cmp jo js xchg out or xor sbbl xlat push fwait mov divb mov jbe inc lods mov xchg jge pop push lods int3 push and fsts hlt (bad) mov mov add mov pop xchg xor mov jle ror xchg jg loop int and into inc xor (bad) cmp repz out lock int3 in inc mov fisttpll lods out aad js movsb cltd mov xchg imull mov scas cld (bad) in sbb sbb das sbb inc lods fwait scas mov push inc sub aad pop xor xchg and xchg ret fs add or dec ljmp jae jne push inc out stos imul fdiv bound mov xor aaa outsl mov jb lods rolb fadd test sub adcl mov in in jb or out test adc pop insb xchg arpl fxch daa mov adc es out (bad) jle pop je les or cmp (bad) stos rcrl icebp sbb push push test or iret inc adc pop sbb (bad) int3 lds cmpsb clc addr16 add xor mov mov aam es jno das push sbb dec xor pushf loop jbe ss fsts xchg icebp pusha push inc sub loopne pop sahf lcall pop std lods pop add pop data16 adc stc cld pop sub test and adc xor test jno pop in pop nop sub faddl sub fsubr out cmc or out mov jle sub xchg stos aad adc mov mov stos aas rolb and scas inc add test xchg pop mov outsb mov inc es arpl call push lahf sbb (bad) aam pop and push ds pusha inc (bad) dec jne add cmp inc mov popa daa adc inc jne xor cmp sub shrb imul jnp sub pop in pusha gs xchg daa add stc push push jl aaa sbb jnp mov neg jbe outsb fs cs sahf xor mov ja sub out or xchg out lret outsl shll ss cmp xlat add xchg iret gs scas into sub movsl adc and sahf scas fsubrs xchg push ss push xor sbb lods pop pop push jne add das dec or dec or idiv pop addl inc push (bad) push call stc aaa out aad push xchg adc enter mov cmpsl and test mov daa xchg xchg jo inc test call insb xchg jge pusha popf cmpsl sbb fnop xorl adc leave out not into cltd cltd jg test cwtl popa dec outsl insb add cmp leave pop add stos mov cld popf push xchg cli addr16 mov push or or pop (bad) lods xchg imul mov repz mov add mov test lcall dec ret stos hlt insl jb push clc aam leave push inc mov movsb inc jns mov loop cld das js aaa clc jmp (bad) jb stos (bad) pop std and test fs (bad) jne pop sbb fwait xor fisttp outsb repz leave shr jmp mov rorb and or push aam mov (bad) jmp mov cmpsb cmpsl push add push push (bad) push loopne (bad) aaa scas cltd inc and pop insb out xchg data16 cmp int fwait or imul mov movsl adc push rolb sub dec sub ret jle add add xorl ja ja ret stc sahf and jne in lods jne sarb (bad) mov pop or stos dec push lahf jbe sbb sbb xchg dec ljmp clc xlat ds in in and push mov out rolb inc pushf fcmove mov pop cmpsl push sbb push add pushf vmovapd or in inc cmp adc or mov cmpsl mov pop and push xor mov and push jne cmp jle mov cmp ret push lods adc or repz ret cwtl lods arpl sbb gs out pop dec loop push imul mov mov add pop fsts push add pop inc pop addr16 pop cltd sbb and xor jmp inc mov fistl popa repnz nop cmpsl dec or xchg mov mov jecxz in adc dec inc adc pop xor pusha fbld jmp add out rorb pop loope mov hlt lcall pop fs mov push lret sub shrb gs or fdivs adc in lock inc arpl std xchg sub sub cs fucomip sub or xchg repz hlt sub nop xor xchg in fwait movsb lods dec dec xchg add roll movsb adc rclb xchg and nop dec dec push jge rorl popf push xor xchg pop lret fwait pop out outsl adcl cmp notl cmc test add inc ds push adc adc call les and inc loopne jmp jno inc inc cmp xor mov adc xorl mov mov pusha sbb test cs mov jo xor push movsb aam xlat loope and push xchg leave movsl lcall outsb jle loopne jno or aaa xchg and jmp test cmp outsb movsb xchg (bad) sub into loope dec les es mov cs and fdivrl mov out mov data16 sbb mov dec data16 stos xlat imul jbe (bad) xlat mov sbb xchg (bad) add (bad) sbb add fwait push xchg pop pop push cmc (bad) imull dec mov mov ret or ds add (bad) leave lock jnp (bad) adc movsl or data16 (bad) jnp imul mov shl xor fdivs jl in (bad) out jbe cmpsb adc (bad) and test fidiv push or and (bad) xor scas or mov outsb rorl testb pop enter adc out mov jl addb insl test dec repz jg adc imull inc jmp mov insl inc lock mov imul cmpsb push xor out push in imul aam shrl inc lods and rcrl or push (bad) pop ficoml and push sub and xchg cmc and push push lcall mov jg sub int3 mov xlat into push and xchg pop sub push mov inc or out sub popa and dec push jp sbb pop add jl or stos (bad) stos cli aas (bad) dec pop out mov lods mov into jle xchg dec out pop mov (bad) in popf mov sub rcrl movsb lret cmp and je loop mov adc xorl roll inc es stos in fisubrl test sti fstl out add loop pusha push push mov push push adc ljmp xchg test gs out in or xchg in and fs ret inc mov adc push dec shll jb mov test jmp pop loope outsl aaa out pop and imul cmpsl (bad) fisub cmc push jo fisttpll out push fdivrl repnz lds jmp push inc mov (bad) mov inc dec ljmp in fs sub out inc loopne mov jns jecxz xchg jae cmp jne cmp mov push out jp sub imull mov fiaddl in jecxz daa inc dec jno std jmp mov (bad) mov out xor sar add or (bad) int3 jge rcll movsl mov mov pop rep addr16 dec jmp push xor dec inc jae cmp mov movsl negl ss lock icebp add sbb mov and add xchg cmp mov daa inc and ret pop jns out scas out fyl2x add xor mov mov and mov jbe xchg fisttp dec pop movsb (bad) mov (bad) dec imul sbb pop outsl loop xlat adc jnp pop adc mov test scas add mov mov fwait leave sub xchg xor xchg mov sub js inc xor (bad) (bad) inc mov inc mov jnp test mov and popf mov cwtl xchg or es push out stos loopne mov fdiv pop fnsave lret and dec mov or mov lds jg arpl out out add and adc loopne pop int3 cld dec clc (bad) rcrl mov pop or xor and adc sahf popa dec and out insl out cmp pop add out pop fldcw je cmp mov jge inc sbb pusha and cmp outsl js in imul leave sbb sarl lods inc push xor insb pop add or jmp cs or cltd setae in sbb jb mov inc pop ffreep jmp mov dec jbe sub pop mov mov adc or add dec add inc xor pop sbb mov jnp (bad) rolb sbb sahf ret mov push mull sbb mov fs pop push dec push ret ss fdivr je (bad) std daa (bad) mov imul or mov or mov stos inc imul std enter cmc sub in aas (bad) btc and pop (bad) hlt ljmp and cmpsl in push mov icebp inc mov ret lock fldl lea aas sub cli mov pushf lods jl mov enter in pusha test cmp cmp lock es mov and push push inc test mov mov imul jp sub pop and enter subl (bad) fwait movsb into inc fild xchg idivl and pop sbb aad xchg xchg into test cmp jg push push pop mov jo js into addb (bad) xor stc sub (bad) cmpsb (bad) xor push xchg sub and jno fwait jnp mov nop xlat dec addr16 jne sub cli jl lcall nop cmp repz sbb or loop jno or ror cmp jmp or pusha (bad) arpl (bad) ss out movsw cmp jae push int3 sbb push jge dec dec aam stc outsl jns loope jecxz jae lret push lret imul imul lods sbb aad movsb push scas fimull adc and and sub inc and cwtl mov clc fmuls lcall jae sub or arpl or mov pop push cltd or les std inc es lock adc pop enter repnz or inc stos js imulb mov sbb in js aas bound jo mov pop out pushf and (bad) out nop icebp movl js push aas push cmp fwait xchg mov das push mov lea leave lcall inc and pushf sub sahf (bad) mov sahf pop inc xchg mov mov inc mov sbb test leave sti fstpt add je inc push cld add mov mov outsb sbb iret inc insl js fdivr in inc sahf lcall (bad) je xor xor pop int test (bad) ss xchg cmp xor pushf pop xlat iret push cmp call push cmpsl mov lods clc xchg popf lret aas dec stos into stos popf inc fisubl push mov scas or call add push outsl mov mov lods mov mov jo push (bad) jno into xchg mov add test xchg stos data16 xor mov mov adc add xor sbb pop in push xlat out ret mov mov cmp sbb das ljmp lahf push fidiv iret test clc clc pop sbb pop loope test mov or sbb outsb ja clc fsubrl xchg cmpsl dec xor ret out (bad) cmp sub push cmc xchg mov fisubl mov mov mov add jbe pop xor fdivl (bad) xchg jecxz (bad) lahf jecxz sub les sti stc divl mov rorb sub repnz xor jnp loopne push call jnp mov das jnp sbbl add fwait mov mov (bad) mov loop adc mov test clc scas jp cltd mov mov mov and lods push mov es fistl sub fwait xor mov dec inc cwtl mov dec leave sub and jp popf loope xchg pop cmp nop cli ret aam add repz pop ljmp fbld mov xchg dec flds sbb movsb fnstenv cmc lret enter mov sub mov jge lods shll xchg mov or mov pushf sbb ret mov jne fadd push adc dec ror jp gs mov jnp,pt jns inc mov cmc xor sbb fsts inc adc aas mov lods inc push fdiv and inc lock les pushf cmpsb jb clc mov dec sub data16 sub or pop add push lods stc fwait sub sub movb cmc xor sti cmp inc jmp pop jns adc mov push push popf pop fs sbb scas sbb out pop in aas pop pop dec inc stos jecxz repnz push jecxz in mov cmpsb lock sub (bad) repz or es fidivl std sbb inc jl mov (bad) mov and pop loope movsb outsl pop lret lcall mov sub pushf inc push pop adc sbb add cmpsb imul xor xor cmpsb jecxz mov in inc rcl mov (bad) add mov sub js lock sub cwtl shrb orb ds sub push inc push repnz xchg outsl pop jp jno pop mov sbb jecxz les sbb int3 test cmpsl cmpsl mov leave sahf imull vmovups sub in leave fstpt push movsl sbb insb inc push fistl jle int3 dec sub lds mov or adc add jle pop sbbl xchg push xchg test gs sbb or xor pop push roll pop jnp xchg jmp jbe out movsb or add jb push scas or cwtl aad sti dec xor mov lods jbe push push jp in iret sbb mov sub jmp dec inc xchg lret adc je jecxz xor push jno mov cmp xor mov sbb mov in lcall mov xlat push in je imul lret mov sub add in jns cmc loop sub sbb push mov mov add (bad) (bad) lods jns cltd rcl mov mov inc push or push push fild pusha jne stc in mov rcrb roll jp dec out pushf xchg mov pop push loope jecxz int3 adc cmp adc mov dec sbb pop lods xchg fldl hlt ret mov dec ds arpl shlb imul (bad) rcll sahf arpl jmp insb test and fisubr cs jo,pn out iret mov popf clc mov dec xchg add mov stos in into dec sub stos xlat out es sbb or popf cmpsb stos xchg dec sbb cltd pop sbb or cmp dec xor inc inc adc mull outsl xor jb sbb mov scas ja icebp insl je or or sti rcr xor mov mov addr16 frstor mov add and stos in sbb arpl jo decl rcll add add mov lret jo add lret cld or xchg test repnz push mov std push into jae lahf mov pushf adc inc lahf mov popa out xor lods lds cld roll xrelease mov pop mov dec imul mov jbe ficoml inc push mov jl lahf inc ss mov xchg mov sub leave cmpsl mov mov add cmp lret inc out mov cmp pop fiaddl scas notl scas cmpsl (bad) cmp push (bad) repnz lcall das xor push push jecxz xchg gs repnz mov mov into mov or aad sbb js adc in ret fucom adc lods ja stc ljmp adc sbb lea cmp iret inc fildll insl sub (bad) imul xlat je pop and xchg push lahf loop int3 jg mov jne xchg cmp outsb mov mov roll sub (bad) stc mov scas jbe mov sub sub jo add (bad) cmp cmp fnstenv sarl inc xor pop es enter (bad) jecxz movsl sbb popa sahf test adc pushf and (bad) mov mov loopne pop stos dec pop jecxz pop or or mov out cmp testb cmp mov daa in mov cltd outsl dec inc notb or adc mov cmp lret icebp cmp daa push adc cmp icebp pcmpeqb dec mov aad jmp sub sbb pop test pop pop xchg test cs js xor aad ret outsb jmp sub cmpsl arpl xorb jne popa mov dec inc push cmp lds sti cmpsl hlt mov ficompl push or loopne xchg sbb inc mov lea xor pop mul imul or fldt jp cmp popf mov pop jmp push rorl daa gs sub in popa test fildll xor enter std or fsubrs fidiv outsb mov dec or mov jp dec mov int or mov push xor fisubl das test flds in scas xor pop sbb mov pusha jbe scas dec mov dec mov jmp aam out pushf lock (bad) xor test dec cli xor fcomps dec dec cld adc push loopne rolb sarl repnz xchg push push or test xchg les insl and push mov aas jns push lret pop and (bad) cmpsl aam sub xor xor movsl xchg cmp sub mov sti pushf sti dec push das mov stc loope fcompl adc insl (bad) inc das lods pusha sbb jg dec fnstcw out iret pusha push ja,pt ret mov sub pop pop xchg lret push sbb pop clc push test popf pop lods jmp add ret xor notl out jne repnz add repz pop pop addr16 out adc sbb pushf stos and lods sbb mov in out xchg and and aam jo jbe popf adc add (bad) clc mov xor arpl jg out fcoms jo test (bad) jl lock xor aaa aas roll sub in xchg mov in mov cwtl xchg lods mov test pop dec jnp jmp notb mov sbb adc aam pusha push sbb jl fdivrl outsl mov dec push fisttpl out dec lods je lock jl arpl fcom insb mov add sub pop lret fwait mov mov jecxz fstpl aad xor xchg imul imul xor cs push orb mov mov aam sbb jecxz dec mov insb pop xchg adc idivl stos pop out pop mov outsb mov cmc cmp mov push cwtl and adc cltd pop fsub adc repnz loope arpl mov jecxz jmp xor fwait rcr mov jle lock add mov cmp lods push mov mov push gs jo push mov rclb sub pop in stos mov pop jl js adc lea pop pushf mov xor dec rorb lret loope daa push inc mov and push xor xor repz cmp or and outsl cltd xor aad xor clc pop sub push pop add push pop inc sub jns daa xchg (bad) aad mov sbb xlat dec bound jge fdivrl (bad) (bad) jbe and iret cmp std pop sbb idivb jl sub inc xlat inc sti jnp push and xchg pop testb dec imull push in pushf out ret dec and les add pop fidivrl push push stc leave aaa inc adc push mov mov pop ljmp into lods dec dec push (bad) scas jns cli (bad) aaa pop fistpl xchg test jp pop pop test cmpl (bad) ja gs push cltd mov adc icebp fdivs cmp out nop and incl mov and push inc stc cmp or fidivrl in mov in inc sahf sub xchg and mov loop pop mov jmp in push jbe mov cltd jne repz cs jo pop pop inc sbb mov out cs out icebp cmp mov popa pop sbb pop inc sub lahf es push mov daa and add pop lea push movsl mov popa pop repnz enter pop push lods movl add movntps cmp ret (bad) negb fcoms fstl inc adc cmp dec cmp cmp out xlat mov jle pushf out fmull in inc addr16 test nop pusha mov mov xor push ljmp or jl xchg or fistl jmp mov out ss rolb (bad) jno int3 sub subb xchg push adc (bad) mov test hlt dec mov adc dec inc add cmpsl mov cmp xor xchg loope mov mov sti and cltd idivb pop cld pop sbb scas jne sar mov xor jmp xchg js fcoms mov dec stc lahf mov add iret mov ds lret test in movsb aas (bad) mov fdivl ljmp xchg frstor mov or inc (bad) jo mov fldt mov jae inc jge sbb popa popf jge outsl aaa (bad) in movsb std int3 in ss mov lods sbb push arpl fxch js in sbb lods (bad) scas lret hlt add lods movsl jns jns xchg dec fs in test bound pop sbb adc test mov aaa lods jg xor gs mov mov mov in out mov test out dec pop xchg lret cmp (bad) adc nop (bad) movsl daa and mov add loope hlt mov flds cmpsb addr16 (bad) aas pop add add fidivrl and ss sub lcall or add int3 cwtl inc jns add retw scas mov or inc sbb add pop sbb stos ja es jge cmpsb insl mov lods mov movsl imul push mov ds jmp pop icebp iret mov call sbb xchg enter mov jne fsubl jp cmp ficompl sub push mov xor xchg idivl jl jmp mov test or and clc cltd mov mov cmp pop js popa iret pop ret lds imul aas xchg repz lods lret adcb inc jo addr16 and add and movsl es test inc sahf test mov jmp push or adc pop ljmp sahf or adc test lret or sbb mov (bad) mov repz mov mov bound lea add jl jg and dec jl repnz adc psrlw enter add jnp out add sbb sbb test add dec inc or pop xlat outsl lahf into jnp xor inc in lahf sbb lahf scas cld fisttpl push fs in mov inc xlat das push fisubr mov jb outsb loope rclb loop xor cld and icebp or adc pop nop (bad) mov inc cwtl sbb pop popa mov in ljmp cld push sbb andb out and mov xchg inc les incb out pop les xchg jbe lea mov sbb or mov cmp xchg rcl (bad) (bad) hlt mov mov dec mov jmp dec adc sub lret dec mov fwait cmpsl repz stos or inc pop sbb push popf cs lds lods hlt xchg sbb dec jp jecxz call cltd (bad) test cmp add xchg jnp push in outsb pop repnz pop (bad) sbb ror cmpsl enter lcall addr16 imul mov lahf mov scas xchg popf lret adcb add mov add scas fstps enter inc cmp xchg icebp adc mov pop pop pop jne mov pop jbe in out idivl dec jl into divb xchg push roll pop fcmovb ds xchg mov std in jo sbb les fwait sub fs sub in push scas xor enter pop mov add addl adc (bad) aam sub icebp adc mov inc cmpsb in add push mov in jb cmp das push rorb mov xchg cltd (bad) mov adc daa sbb inc or mov mov (bad) ficompl mov sti and mov xchg dec pop mov cmp in testl aas push daa lods out in xor xor cmp mov or mov add sub loop addr16 arpl pusha xor js jecxz pop rorl dec jmp pop pop dec push pushf stos mov cltd mov jbe stc call sub nop xchg aaa or mov lahf push in popf dec cmp cmpsb pop and inc adc jp inc cmp pushf or xchg push mov xlat xchg xlat cmpsb fcoml in pop jno (bad) adc imul xchg ret mov insl aas xchg js out faddl sbbl dec mov mov lret push adc mov pop pop pop aam xor ret sub in dec hlt jb stc adc pop sub js cltd (bad) (bad) mov (bad) mov xor pop nop sti ret sbb inc into aas or mov out jmp clc out jge xchg sbb dec sbb xor mov pop sub aaa insl sbb (bad) mov sub and mov cs inc jl idiv cmp fimul mov push jne sbb (bad) or inc jns mov sbb pop lods dec lods cmp fdivl test ds arpl mov std ficompl push xchg arpl outsl movsb push imul call inc and stos adc repz sbb sbb pop and sbb dec and pop and in cs sbb daa or in jbe movsb inc mov jae aaa cmp pop dec cmp fadd and xor (bad) arpl lahf (bad) fcoml cmp and or loop addl dec push (bad) xchg ds icebp aad dec push shlb sbb pop xchg outsb je icebp fdivs jmp loope lods mov mov pop loop in fnsave dec hlt (bad) or mov mov or clc jg dec (bad) andb push adc fldt or cmpsb cmp bound ds in xchg push push clc or les (bad) (bad) mov pop xor push sbb mov xor mov (bad) mov mov or pushf rorl mov inc sahf std mov ds mov loop fdivs xor fs lea pop adc gs cmp addr16 xor movsb pop push xor inc push loopne push aam push stos add xor push jns mov mov xchg shrb pop sbb leave push int leave aad sub ficoml push lods inc and (bad) cmp sub ljmp ret ret dec pusha sub stos ds mov jmp test mov test lret pop shrb mov cli push mov pop push push fnstenv fcompl mov popa inc scas fcoms push leave xor inc ja mov xchg or hlt adc les (bad) (bad) mov cmpsl stos popa lock (bad) jge mov bound jg in lea inc adc mov mov mov addr16 push daa (bad) fldenv loope jp,pt add nop insb add and pop mov mov out mov add scas div sete sbb sti pusha push sbb xor cld cld mov stc or mov cmp add push mov xchg dec sub and popa pop loopne js mov push lahf mov in and aaa mov popf imul adc in addr16 pop pop (bad) pop pop xor inc ja inc adc xor stc cmc (bad) lahf dec inc aas imul xor je fild mov jecxz ja jmp fs or mov mov and mov loope dec imul jg lods hlt push and pop test pop sbb outsb sbb mov lahf xor pop call jg (bad) push pop mov lock in pop cltd jmp jl push add movsb mov cmc ficom clc outsl ret mov or or lods xchg mov mov mull and lods lds xor inc lret clc mov lock dec clc xchg xchg xor call aaa arpl xor shrl jns cld xlat jb clc call jb popf xlat das inc jno jmp roll inc jle in (bad) push adc mov popl daa cmp xor test mov pop std cmpl mov jne push fs sub adc mov jno js pushf test popf adc lock mov xor push movsb les jg mov add insb or loopne pop fs (bad) je cmp mov popa shrl lahf push pop idivl add sbb mov inc test xchg shr rcll xor scas lock mov andb mov mulb call into lods jl imul cmpsl notb (bad) hlt es outsl sub fcompl mov aam fs sub sbb mov jb mov inc rorl in clc sbb pushf sbbb mov jmp xchg push xor fwait mov lock fstps nop data16 ljmp lock loope xchg jmp (bad) xor out iret mov fcompl mov icebp or jmp lret push les test push imul sub (bad) idivl mov xchg pusha and test repnz popf add dec adc inc add jmp jge (bad) (bad) jbe ljmp sar test lret adc negl mov push aas push cmpsl dec push ja fbstp icebp in or jecxz lret rcll hlt movsl fistpll loope xor pop mov or pusha negb cmp cmp jns bound pop and clc add lds fnsave out inc fcos mov and popa rorb mov sub sbb movsl sub fstpt xchg jo or add scas dec jnp xchg sub push mov jl push cmpsb les outsb daa sub add mov popa in xor imul addb pop cmpsb aam mov push repnz and aam lds rcr aaa xor xchg push int outsl lods cs jno xlat cmpsb stc pushf fsubl scas inc or cmp jne mov adc mov or cmp int ja mov fdivr mov pushf out sbbl stc dec push xchg xchg mov (bad) clc cwtl ret or pop cmpsl dec lock stos mov imul (bad) (bad) cmpsl mov out cmp movsb pop adc inc or jae xor push sarb (bad) sbb xchg xchg mov lret push push idivl adc jo loope push outsl push jbe das push jae inc jbe push cli fwait lret cmp push push push inc nop loope out xchg fsubs ret (bad) fimull int mov and add sub test lea fild jmp mov (bad) and sbb mov add daa jno call cmp pop jno cmpsb aad out daa outsl sub cmovb xlat cmpsl or imul mov lods dec subl test (bad) mov mov jno pop add xor push pop outsl in aam stc sbb jno ja push outsb pop mov inc jno push push xchg not mov jp or aam mov mov and cltd int push push mov loope dec movsl mov inc xor cmp add scas mov ds mov jle xor add insb js mov into repz xchg cs jae daa adc cmc fadd cmp inc test repz dec and mov repz nop arpl scas das daa into dec jge leave stc loop in add aas movsb lcall push lods test inc out dec ja in es jmp push ja fsubs into push push push std lods mov std inc aaa cmpsl add mov xlat imul aad scas jge (bad) cmpsl jp jne mov push imull in sub jae outsb mov jmp mov add out test lret cmp jl mov call in aas or notb cmp loopne insb inc not in mov es (bad) cmp push inc add push fs inc mov dec jae aas cs test pop mov jns pop movsb pop sbb mov test orb daa mov mov and in or and dec push push popf mov scas mov inc pop test add lahf rcll lret mov adc call push cmp in (bad) popf mov imul cmpsb sub (bad) mov push adc cltd cli pop das xor in sbb scas sub mov je lret inc sub sti pop and mov lea ret daa sub fistl int3 movsb aas ret or sarb push jmp xor cmp mov cmpsl jmp fucomp xchg mov adc xchg cmpsl mov pop out lea nop or adc inc addr16 lea mov fs (bad) dec ss je and pop pop pop mov mov sbb loopne mov mov into inc mov push inc and stos cmp xchg xchg fstl xchg jne adc fidivl dec sti test add loope push and xchg cmp and push pop xor shll sub retw push sub mov xor mov pop and ss mov mov add cmpsl adc and (bad) pop fistl in sub ret dec loope sbb scas mov mov lock mov sbb iret or out je mov xor cmp shrb pop adc into aas cmc aad and lods insb aaa loop out pop in cld cmp push pop mov ljmp sahf clc sbb loop push subl mov cmp and cmp clc jno (bad) movswl xor bound decl lcall mov push sbb pop fsubrp int3 or jmp ds pop cs and xchg pop adc popf cld xchg cmp mov jg fs lods and adc loop ret adc pop or iret es cmp fdivl pop pop jle jl repnz cmpsb and cmpsb dec fs js sub mov ds pop add cmpsb ja aad dec popa (bad) (bad) in jne xchg out rorl lcall push int3 les lret loopne mov jnp lahf cmp inc nop repz (bad) cmp jb lret (bad) adc xchg movsl in test rolb xchg add mov push pop mov add add mov aad push popa inc push push mov aam lods pop cld in or bound jbe data16 pop inc lret or push aaa insl xchg jns xchg cmp sbb jl xor fimull into rorb push sub popl fsubrs daa in cmp imul (bad) mov es out pop clc inc (bad) into pop mov sahf jl push lock jns arpl repnz (bad) sub insb inc cs sub (bad) xor cmpsl imul push add inc jp dec ficom (bad) addr16 xlat pop mov out xlat mov cld jp outsl or rcll sbb cli mov (bad) xor (bad) add repz gs iret fmuls nop inc rorl mov mov sub insl fldt xchg and jmp cmp mov iret jne lcall dec inc pusha outsl addr16 fidivr rcll int add imul aad out jmp icebp addl ljmp adc xor xchg int dec aam xor mov mov add in fs dec jns cld xchg and add test outsb mov inc iret dec loopne lods lret mov sub mov xor (bad) (bad) sbb aas xchg xlat sbb outsl loope inc inc rolb mov dec pushf xchg dec dec xbegin icebp jmp movl mov dec enter repz (bad) ljmp pushf pop sub cmp out ret xor push fwait push dec pusha and rcrl stc sub lds (bad) dec test jge sbb sub scas cmpsb sbb js (bad) pop mov sub sub out in and push jbe cmpsb sub test sbb (bad) cmpsl js mov xchg and je push (bad) enter sbb repnz add pop (bad) outsl fstps clc fcmovnbe jmp push call and sti stos xor mov mov xor mov inc xchg add lret xchg mov bound in pop fiaddl push addr16 stos ret mov sbb adc std push sti outsb ds or test jle lods aad mov je xor (bad) gs add push arpl bound psubb xlat mov daa mov out aam cltd hlt mov xlat sbb cmp mov stc add mov (bad) cmp repz inc and nop stos test sarl rcr test clc imulb cmp sbb mov mov insb cmpsb lahf jns insb gs sbb movsb sub jle fucomip scas sub je,pt sti mov xor ficoml movsl mov (bad) (bad) mov add xchg push ficoml mov mov xchg (bad) fcomp das xchg or xchg cmp mov and iret pop iret xor lret push sub mov fsts mov push pop sbb mov sub rcl mov sbbl mov pop lahf mov aas or data16 pusha jne (bad) lock subl add pop aaa pusha outsb dec jge inc nop pop icebp lcall and cmp iret leave call adc add ret xor lds lea and iret outsb jb repnz test cwtl mov cs xor jbe cli xlat xor stos out inc in cltd adc or add inc sbbl sahf imul inc jae fistpll jbe lock jle inc lret mov push push aam pop and add dec mov and xor insl sbb mov jo xchg mov xlat out out das aad inc mov xor inc mov sbb sub push aaa (bad) push mov das dec add in or (bad) test mov sub shrl ret xorl cmp subb fwait sbb (bad) in pop andl fcomi sub clc into push gs ss mov pop aam pop pop xor sub dec xchg fwait repnz out stos insb dec loop into push jns iret aam dec out adc cmp inc pop loop jmp test adc jae xchg xchg add push and gs stos add jnp out mov mov fistpll sub push sbb mov imul gs pop imul push add xchg test into jle inc mov xor pop mov sub aaa hlt into fnstsw scas mov adc imul pop lcall mov mov jne inc adc pop push dec sarl js sub stos mov mov pop push nop jge addr16 mov mov call clc lret dec call int3 (bad) in (bad) cwtl mov adc mov mov inc mulb nop (bad) mov cwtl out insl mov pop mull mov or repz fwait inc inc ret xor daa mov lretw mov pop mov inc push loope xchg into and xor in cmpsl daa push xor scas jae cmpsb mov and mulb daa mov pop inc cltd sub into add fistp cld cltd lahf mov xchg incl sbb push fwait xchg iret mov push jp inc jae out jle inc mov inc adc xchg decb mov mov es push jmp mov movsl (bad) imul out mov mov rorl mov outsl push push mov clc ret dec aaa sub not adc sti popf or lret xchg aaa and cmpsb push mov popf popl cmp pop add inc xchg sbb inc push dec rol jbe mov mov jne jecxz inc insb push push jmp icebp jnp lods xchg fsubrs fcoms addb xchg dec gs test dec das jb push mov imul ret test xlat mov mov lock xchg dec je mov out pop js ljmp pop test cld cmp jo inc cmp es dec sub js ljmp movsl mov test rol mov arpl notl fisubl clc sti lods dec pop andl cwtl cmc and mov into cmp daa fcoml scas or fldcw dec lock sbb xchg push or pop outsl rclb lahf xchg (bad) fdivrs mov in jg mov inc lock cmp dec sahf inc push mov pop movsl es test clc push rcll jbe jl xor (bad) dec popf add jecxz (bad) pop int mov lret sub aam scas ds sbb add inc sti jne sbb js push cmp add loope push addl and jno mov or aad sbb adc push xchg iret es push pop pop in lcall in jae bound cmc mov test xor das add inc sub js push test orl fs push ds lret or cmpsl pop imul and xchg rorb lds xor and dec dec lahf fsubp jns js ljmp xchg aam cltd mov shl js leave aaa inc sbb sbb and outsl mov push sti aam das sbb jae xor jns repz stos rol orl mov stos das je stos push sub add test dec mov in pop (bad) insb pop out xor sub mov repz push sbb inc pop and mov cmp jmp sbb movsb repnz jle push lods dec lahf lcall mov dec mov cmpsb dec dec imul push nop mov std hlt and sbb mov pop cmp cmpsb movsb add sub dec in stos test rcrl mulb fldcw sub jp sbb sub cmpsb ja scas sti std pop clc inc jne mov fildll jno mov add bound mov xchg rorl mov js fdiv cmpsb push inc ss icebp inc sub cmp push dec cltd cmp pushl ret bound aaa loopne aas dec push sub test push repz adc dec dec mov xchg out cmpsb dec dec mov mov (bad) arpl stc pop fucomip mov add iret loop push scas add in push stos jne lret mov insb gs int3 aaa sub lods cmpsb loope stc mov repnz adc bound xlat lock jnp loope aam cwtl push or mov es push cmp daa out pop rolb rcl ror (bad) jle jge cmp or mov push lcall scas cmp xor xchg out dec (bad) mov cmp push je imul jmp int lock jp (bad) scas sub adc mov rclb pop jbe ds rcl pop aaa xchg cmpsb cmc dec shrd rorb jle xor xor and stc std repz popa mov add lcall push cld stos roll stos pop or test jns test les in aaa arpl jg jle mov lret xchg mov jmp sbb mov pop (bad) cld pusha cmp and lret jmp dec cmp insl inc and addr16 jae jmp jnp (bad) mov test xor jle mov arpl push sub mov shl pop and push leave cli mov nop push inc sub test and fdivp leave inc jecxz sti pop addr16 cmc add test jae jbe in sbb lcall xchg mov pushf and mov sbb scas andl push (bad) int fcomi xchg out cmp scas test clc jnp cmpsb stc arpl test lret andl add in cmp les add pop (bad) out jae push and xor pop sbb sub jl aad xchg icebp shlb jns lock push dec push pop loop dec ror add pop xor pop cmp cmpsl mov dec jmp and mov (bad) pop call popa imul jmp adc push orl dec popa inc cmp add push or sub stc movsl je xor ljmp dec stos push add rclb or pop in dec daa shlb ss adc aam push stos ret dec or cld jns or sbb push aam ja mov and jns jl lods sbb je sub dec jno (bad) lcall jg add fnstcw fnstenv push push push mov dec popf (bad) mov repnz sbb lods roll cld pop sub or mov inc movsb add mov fs popa mov mov sbb xchg mov and sub mov ds xchg iret xor in add out cmpsl jns,pn sti ret fdivr jmp cltd jecxz aad pop sbb (bad) lret fisubrl insl imul push jp stos push fmull adc cwtl fcoml or dec jno add add insb push add xchg lcall mov mov pushf aaa dec mov stos xchg int3 sbb cmp mov add jmp (bad) jge shll ja mov pop xor (bad) (bad) xor in xchg lods mov cltd fildll aam cmp (bad) or das ds push mov insb lret xlat jb cmp idivl and cmc lcall xor mov imul add inc add mov jae dec and add jnp pop outsl inc pop addr16 stos cmpsl mov negb movsl jp or sub ljmp in popf lahf mov xor xchg cli test (bad) idivl fistpll xor pushf push into pop ds std (bad) jno inc repz (bad) pop stos cwtl aam or dec ror popa repz adc int jno mov adc sub xor mov mov inc add dec roll xor push es pop jnp popf push mov add push sti outsl dec add xor mov mov xchg xchg aam sub pop or and push aas js aas dec or into push sbb dec std and loopne jae repnz inc pushf dec ljmp pushf adc xor mov (bad) cmc sub mov mov pop fadd popf test or pop jo add mulb sub or ret sbb outsl lds call pusha mov (bad) hlt out cmc jp dec adc nop lds mov cmp sub testb lcall data16 xlat dec add rorb and sbb repz std aas push insb push push repnz sarl xchg in or push xor xchg cmp adc pusha push inc insb movsl dec lods add pop jns popa (bad) ret out jecxz into add sbb mov and test pop xchg pop lcall pushf pusha sub mov or add insb mov xchg imul sti dec (bad) aam lds dec jg xor xor push add repnz xor jae test rcrl test sub xor ficompl xchg ficoml xorb (bad) fistpll inc inc sub push add jecxz pop fsubs sub sbb out jne,pt adc and dec sub mov (bad) std imul xchg adc shll push arpl sti and adc sahf cmc xchg push insb sbb lret repz repnz jne loop mov inc scas jecxz (bad) int3 scas pop fnop addr16 jb (bad) (bad) jnp dec stc sbb push adc inc adc fs arpl xor dec test jg jbe mov mov push icebp gs sub sub lahf leave lea loopne jge out lock xchg or lods enter nop stos pop sub lcall jnp std ret mov mov fisub (bad) lods lods mov ret xlat enter (bad) push jp ds push xchg xchg pop lahf les xchg pop pusha xor jmp or push add and cltd (bad) mov stos (bad) push dec sar dec mov cld push (bad) (bad) mov lods or ret pop add jnp lods outsb push push mov bnd shlb (bad) lahf inc dec mov mov sar push bound push xchg aaa jae mov jle xchg or jmp mov lcall stos inc jecxz adc pop iret arpl push sti int pop cmp nop jl in mov loope jo cmp xor pop push mov aas fdivl mov cmp cmp mov pop dec add sub (bad) push test or loopne mov dec jno jne jae js xor cs pop add and sbb jmp out rcl repnz call pop mov cmc cmpsb in scas jecxz sbb sub lahf inc movsb fidivl pop (bad) and (bad) (bad) mov rolb adc xor fimull mov popa xchg std outsb inc jae xor xchg repz pop dec icebp xchg aaa aaa mov cmpsl bound stos push xor pop scas outsb sub insl dec arpl inc (bad) pop push enter negl (bad) push cmp xor loopne dec popa clc fildl push push imul jo sub cmp jge lea xchg adc xlat lock jnp leave loope sbb sahf mov into pop frstor enter mov cltd cmp push enter hlt mov sub es (bad) mov pop xchg jnp lods xchg (bad) test sbb xor in (bad) cli (bad) xlat pop pop sub mov fcoml int xchg sub cmp aas xchg add das push cli lahf dec mov adc call add fisubrl inc gs loope jl sbb clc and stc out fs inc jle je (bad) fwait in push subl mov ret add loop mov cmovp mov fistl out inc push insb bound jb xor cmpb addr16 (bad) dec insl lret lock nop punpckhwd sbb jle inc or pop inc pop rcrl leave fdivs jne rorb nop leave mov insl mov test mov rorl push ss jmp xchg aad jecxz pop loope ficomp sbb enter in inc cmp rdpmc out in pushf sbbb mov loop pop loop and xchg pushl loope addr16 pushf lcall pop inc (bad) aam mov (bad) push insb sarl addr16 jns cli (bad) fcompl jmp pop (bad) std (bad) insb adc fs xchg push mov xor imul mov sub push dec mov dec dec idivl movsb mov adc ret call xchg xchg xchg mov push inc xor push aas cmp cli lds jg inc (bad) ret inc icebp adc fnstenv xlat movsb mov pop inc xchg sub jb add sub das inc push push std arpl mov pusha adc jge mov mov sbb ret je adc xchg jbe adc scas or and popa mov pop push movsb (bad) loop and add mov ret sub xchg test xchg mov sbb push enter stos in mov mov rcrl lcall mov mov ja mov or mov enter jno inc sub mov roll iret push sub and push aaa mov cmp dec cmp fwait sbb lcall ret sub cmp cmpl mov movsl sbb (bad) push shrb cltd dec fstpl cmp (bad) out and movsb arpl lods inc std add mov in and lahf fild in add fisttp mov hlt (bad) hlt pop adc cmp mov add mov (bad) fstpt lret xchg int3 insb and js (bad) (bad) or mov and add fisubr cmp dec adc imul adc lret or (bad) mov stos (bad) push aaa sarb outsb arpl in add inc mov jno enter cmc adc enter (bad) hlt push addl in fwait inc mov and jbe lret lea cmc leave aad or or push fwait out dec ficoml inc (bad) xchg push (bad) cmp rcr imul mov push js test xor in mov or les pop ret push jecxz pop mov sbb add fwait jmp shr (bad) loopne xor cmp into aad les add jb or inc dec add adc add mov ja out fwait jno mov mov add and insl in je js inc mov xor outsl (bad) shr or sub sbb and pushf les fmuls mov out je fldt jnp add jae andl mov dec test fistp repnz xor cltd in or jo repnz insl invd xchg lcall insl mov stc (bad) dec jle inc mov xor pop arpl add stc ret jle enter xor sbb cltd pop (bad) mov jmp repz mov xor les popf adc pop addr16 mov cwtl in lds pop mov sbb or xor or sar jle rcrb (bad) mov push movsl xchg cld mov popf lret inc jg and mov int dec xchg cli movsb aaa pusha iret pop sub mov cmp inc sbb aad or outsl push adc pop je subb sub ficom (bad) push (bad) mov pop mov gs inc (bad) cmp xor out in imul xor push in mov in dec jnp fs cltd enter pop ret out pop inc mov ret mov sti in xor and pop arpl push mov or bound dec sub ljmp push loopne adc pushf adc cmp adc xchg cmpsl cld ja in or jb out or pusha lahf call adc fildl and jae (bad) fcom pop cmp das bound and enter or lcall ja or jb out xchg out orl push cmpsb repnz sbb adc fist mov rcrb out cld xor adc sub ds aad push adc jo sarl sbb xchg in jb cmp inc push and mulb iret mov jne (bad) movsl mov ja xor arpl mov cmovns es mov mov pushf xchg pop mov cmpsl ss sahf lods cmp mov add std arpl in xor push mov mov ss xchg xor sub mov popa xchg mov or sbb mov or loop dec sbb dec ss imul sub clc mov pop pop pop stos lret jnp ret mov jns bound (bad) dec dec bound lods pop push inc cwtl push cmpsb (bad) push jl stos cmpsl dec dec mov sbb test pop adc xor adc pop (bad) mov fcomps lock shll or or fisub cmpsb negb ficomp jecxz mov (bad) xchg jae push dec sbb gs cmpsb xchg adc scas popf stos sbb and into mov and (bad) sub test sarb enter push lcall icebp cwtl jns push xor xchg push addr16 enter fs jecxz rolb cmpsl aaa mov adc in mov sub adc test cli je lods je lret imul inc cltd scas (bad) push leave mov sub push cmp sub push sub ljmp lods xchg push gs pusha dec clc insl sub sub fisttpl stos sbb inc dec mov pop fldenv icebp bound fwait data16 mov push std cmc and mov jg jnp inc cmc pop mov jns dec pop aam mov sub test int and sbb cmp push cwtl inc pusha testb push sbb mov leave pop push xchg xor cli pop (bad) adc fwait jae es jge pop dec ja pop dec jmp ret ds and mov (bad) stos inc iret fcoml aaa in xchg add pop inc sbb dec adc push stos add xchg (bad) or in mov ja xchg push mov rolb pop (bad) negb arpl and push pop in and adc js mov (bad) cs xchg cmpsb mov cmp sbb lods gs std mov cmpsl test push lahf pop mull lret lahf fmull inc out stos dec jnp dec repz mov fsts jg adc cltd jecxz rcll hlt test xchg lods test mov jmp xorb jo mov jnp mov xor mov hlt sti dec repnz add cmpsl mov sub inc pusha mov pop xbegin test test mov imul (bad) aam int3 shll loopne gs mov inc fsts or fs push lcall xchg inc in cmp jae shlb push or inc inc std nop jo push adc jmp in mov repz mul (bad) int3 out cmpsl or mov rcrl ss in in jg pushf ret loope cld cmpsl sbb ret xchg insl sub dec out jbe popa dec scas mov sub mov sub xlat pusha mov push cmp xchg push out fwait mov cmc xor iret pop xchg and into lret pop inc pop mov and gs mov leave and mov pop pusha out call push inc mov inc jnp (bad) cmc into add (bad) icebp or pop sub test pop out rcrl iret or into mov es mov dec sbb and in pushf rorb jne jno jl push (bad) push jnp push cwtl jp mov (bad) pop jmp cmp adc popl pmaxsw jnp icebp cmp xor out mov subl push dec cmp pop fwait in mov push mov es xlat lret adc cmc stos dec rorb jecxz dec and sbb dec movsb (bad) addr16 scas je xchg bound fimull and popf hlt lcall in cmp mov lret and fnstsw pop in scas hlt mov push cmp popa loop mov dec loope cmp jecxz (bad) cmpsb push xor mov neg mov jp mov movsb and push popa call sarl push scas es sbb dec lea cmp and in dec xor inc xchg stos xor std push or in dec lahf or ds mov lcall xor sbb pop daa nop fstpl out aad mov pop xor mov xor sahf test sbb cld jnp fwait adc mov or insb or call stos cltd and sbb xlat test mov cs xchg lahf jge mov lds cs push push fs cmp (bad) push daa nop or sti sub mov cmpsb lahf pop adc or ss xchg or or arpl push mov xchg mov scas or movd out add mov mov (bad) cmp andl pop clc cmpsl das out sbb mov (bad) sbb or lret lods push adc int pushf xor jle xlat inc adc (bad) xor lret jle stc mov inc ret dec ljmp or negl mov cmp cmp mov pop repz cmp cmovnp std mov fwait dec pop push push fldcw cmpsl xor mov imul dec jecxz add inc sub faddl rcr ja test lret adc inc dec dec adc gs inc fidivr push cmc fisubrl push cmpsl mov stos ds and mov jne xchg cmp jecxz cmp push js jge xchg lods gs fbld jl mov mov inc lods test (bad) stos push iret ja jle aas ss into ss sbb or movsb call mov xchg inc or loope xor or jae jge insl leave data16 jns sub (bad) loopne push in fcmovbe imul fmull xor mov (bad) mov inc xchg das adc std xchg loopne or mov push push out rcll pop stos je cmp cwtl xorb mov lahf movsb and and mov lea push (bad) movsb sub test movsl hlt out (bad) sub and (bad) popa (bad) int3 or call orb push xchg das leave jbe mov cmp inc cwtl lds jb xchg and cmpsl add mov aad loopne shrl outsb daa ret fldt and iret lock mov fidivl fldcw mov mov jbe sbb ljmp js,pt and cmp imulb mov icebp pop xchg mov push dec mov std lock cmp xchg pop addr16 add xlat out or andl notb aas mov test repnz enter add mov lods jae pop jg call rolb jb inc cltd jge mov add repz je dec mov (bad) sub inc sub cmp ficoml (bad) loopne aam (bad) scas push xorb xor mov dec arpl cmc leave xchg ds dec addr16 ja xchg mov out cmp aad dec push sarl mov lret fsubrp andl xchg fwait xchg push xor je je cwtl push mov inc imul sbb jl or ja (bad) xor mov (bad) jb mov mov cmp fmull ret aaa inc adc sbb pushf lahf mov stc push stos push mov subl movsl sub push vucomisd mull (bad) push int3 fs aaa push mov xchg add cli xchg repz cmp int xchg ret fild mov outsb ljmp dec js lds sub pop add imul (bad) dec je scas int3 decl imul xchg mov in pusha aas (bad) pop sub and daa pop ret in test (bad) out jns xor test bound xor mov clc into lods inc mov sbb adc cs and inc (bad) dec lea mov sub fstl (bad) ficomp enter divb mov push sti add pusha mov cmpsl adc scas sub shll sbb lock mov out test cmpsl testl popf xchg fisubr mov cmpsb pushf jbe mov aad std sbb sub pop fnsave lcall ss push sahf push (bad) pop inc fucomp lds addr16 pop sub into xor aam mov insb insb xchg addr16 fbld jne jg adc gs sbb in jl push aad dec add stos js (bad) rol xchg xor in popf push mov xor shll adc mov movsl mov and idivl xchg and inc lret sbb mov std inc jg sub dec pop gs and nop shufps xlat aas push fs (bad) call mov ret mov pop dec xchg xchg adc inc jge daa fdiv push stc (bad) jnp and mov cmp jae aaa mov add xchg inc fs sahf push dec cmpsl pushf and inc stos int3 outsl mov js cmpsb and scas push dec (bad) and mov ficoml mov cmp sub jle fimul sbb mov sbb loope lahf cmp xchg xchg push xlat clc push call fiadd call das cltd or xor mov pushf js subl xchg xchg dec xor std data16 cmpsb aam sbb loope mov sub push inc inc jge dec rorb sub stos mov push push (bad) pop shlb outsl xchg or xchg out mov testb call cli push (bad) in inc rcll add mov movsl and sbb jns fdivl in mov xor mov aas pushf ja dec mov pop lock mov mov xchg out push into mov mov cmp imul scas add mov pop push daa jb loop jl loope int3 inc test mov aas jmp pop aaa nop fnstenv jb pop pop lods pop scas xor dec (bad) in and lahf (bad) movsb daa ret test sbb shrl leave mul and dec lcall xor mov jg sbbb push stc icebp popa sub mov sub jo or fadd xor mov xor cmpsl loop (bad) push or iret cmp test mov sub adcl jb mov aad adc and push or iret xlat mov sub sub fnstsw rcl inc push or (bad) mov jp sub and ret pusha adc push add ret enter pop inc int3 and ret mov cmpsl mov adc jae cld push jmp push jo aad mov add testb (bad) jbe mov xchg add mov jp shr lret push inc cmp inc mov xchg pop mov inc imul mov push pop jns xor sarl test aad lods nop xor xchg xchg stos cmp dec arpl push mov sbb fidivl cmp dec fstp jo enter in xor loopne clc jmp add (bad) loopne stos test stos lds add push lret ret popa cmp adc sub sahf test lock shll adc cli xor out mov in clc bound out mov ljmp cli jne fldl jp or (bad) sbb sbb sub mov arpl xchg lods mov add notl xchg mov in and bound (bad) fwait inc pop jns test cwtl sub dec pop jecxz jae call mov jb cwtl les sbb shrl push ds jae mov (bad) popf push pop adc std xorl mov jmp lods rclb rclb lret test mov sarl dec jmp add dec lods lods hlt dec adc leave mov scas fcoml cmp dec daa dec xchg rcrl cmpsl in jmp sub sub add or (bad) test bound xor jg add (bad) adc lods mov call mov dec sub and push call lcall aas dec jle mov push xor jle leave xchg cmp ret in or fdivs sbb pcmpgtd je add push cmp daa lahf sub lea xor subl fld pop neg std xor scas js fidivrl int3 hlt cwtl lock stos sub shrb and loop sahf ds in fstps xchg sbb jnp sbb xor mov mov adc mov inc mov cmp orl mov adc (bad) hlt subb and arpl nop cmp xor sub ret or mov pushf sub adc iret pushf cmc pop jo,pt addr16 fildll sahf dec popf xchg pop gs aad or fidivrl pushf arpl sub mov in mov cwtl cmp dec mov das mov into jmp mov (bad) test or sahf xlat int les mov jno jb lock lock std les jg js test cmc sub mov sbb test pushf pop add and sub (bad) movb mov dec hlt xorb dec pop clc adc push stc sahf xchg test test cld (bad) test dec dec orb fstps lcall test pop (bad) fisubrl out es mov xchg fimul dec insb and push dec enter aas loopne inc adc (bad) mov dec mov xchg mov xor inc cltd (bad) pop mov jmp das rorl xchg cs jge inc (bad) in mov pop test fsubr pop dec mov test sbb fnstcw sbb mov mov lods xor push (bad) cmp push jp pop ret cmp xor jecxz (bad) aaa fidivl dec inc sub pushl cmp sahf (bad) pushf mov sub je aam and or ljmp icebp dec (bad) cwtl jg mov mov divl jns mov (bad) leave dec data16 imul adc aad mov rclb (bad) fstl inc or inc and and sub cmc sub push int daa movsb mov and pop push rcrb es test ret add outsb pop cmp sub in outsl repz mov adc movsl jae lcall int rcll outsl pop ds (bad) inc aas sbb in dec les inc nop xchg cli push rorl fcompl gs cli shlb fwait (bad) jp push mov sbb cmp and sahf mov cmp mov xor adc cld pop pop xor xchg shll (bad) leave mov pop mov inc pop xorb jno das xchg mov jnp mov pop leave jp sbb dec jle mov (bad) shlb sub cmc cmpsb dec pusha inc std das sbb int sbb mov jbe ret mov lods je inc test out add scas iret daa mov mov insl sbb jae jp inc inc ret aam jbe inc or sbb push outsl push jno fildll pop dec xchg testb lcall push sbb mov pop adc jg jg in (bad) push jp cmpsl xchg mov mov test in sbb xor inc add jmp xchg inc mov adc and xchg in mov clc subb cs pop cld pop xchg or loope sub cltd cmpsb enter ficompl repz addr16 pushf cmp pop imull fwait imul add dec outsl ret lahf add xchg xor mov push cmp sub pop push das (bad) push mov les and es or or jnp int xchg aaa jge mov inc and mov fcmovbe and scas je xor and or (bad) and and enter mov or lcall push rorl movsb popf stos fsts cmpsb mov test iret sub inc adc ror ljmp pusha and in js das cmp aas dec xor cmp push call jnp fistpll inc js into xor sahf dec push mov jle mov out cmp jl xchg mov mov enter (bad) in scas add aas inc ss jne adc scas and pop loopne aaa push xchg xchg add (bad) sbb sub cmpb mov xchg push fwait and mov jb cmp inc mov jge sbb or imul jp testb inc mov mov pop push xchg add shl sub loopne xor and fildll dec in cli sarb std imul push pop add mov inc stc xchg (bad) rcrl jle xchg cmpsb xchg das add clc mov jl pop jnp jle and jne fimul sub push xchg xchg dec adc pushf fstl scas and dec mov paddsb popa add mov xchg cmc cmp cmp jmp mov ja enter xor cmpsb mov xor pop push mov pop push fdivl jmp push push jmp jno xor and mov jns push mov insb jne mov insb or push iret stos push xor mov icebp push clc push inc iret pop cmc jp lock mov sub testb mov stos push jp lock enter pop outsb or push dec test inc (bad) int3 xor and bnd lcall or sahf ret push mov aas test inc mov mov jg and xchg stos insl mov jns stos xchg call mov out dec jmp add jno lret mov jle insb (bad) mov push xchg aam mov lds push xchg jmp mov lock dec jecxz sbb into xchg stos lock mov add push scas xchg fwait or enter scas fstpt xchg xchg or stos sbb call hlt hlt (bad) shll jecxz dec add popf lar mov arpl mov cmc jne dec pop push (bad) aad cmc jmp shl dec sbb data16 inc int3 and dec in mov jl xor inc mov insb cmpsb mov mov rep mov cmp dec stos sarl mov (bad) (bad) repnz iret iret mov push mov jne inc (bad) (bad) outsb scas mov sub pop mov xlat or sbb push les push adc cltd jge pushf or shrl push enter fidivl xor (bad) push ds cmpsb or and dec out sarl cmp lahf aad or or mov icebp xor jne outsl call dec into add insb std inc mov les sub data16 lcall pop add mov mov mov xchg es lcall stos sbb push lock pop ja lcall std xchg pop xchg sub push clc or xlat daa mov mov push ds stos jno fwait (bad) loopne ds adc leave arpl imul xchg insl inc lods cmp adc stc dec (bad) push cli out xchg daa or sbb mov and (bad) pushl inc aam or push xor and or jge sub (bad) xor dec push xchg fdivrs inc out test lods adc pop loopne inc mov lret cltd fild rcll cltd push out ss insb mov aas (bad) aam test xchg (bad) mov sbb push aaa push adc pushf inc sub jno lcall fild or mov cmc in aad cmp out cs mov addr16 adc icebp cmc xor dec popf cmpsl les push ss push leave daa sbb xchg repz push fsubs fsubl jp xchg test mov add js (bad) lahf jo push call dec push bound add push xchg adc jno mov dec sti xor xchg les leave inc ljmp insl cmp inc pop imul sub lods cmc cli inc cmpsb rcr xor pop jge nop out jae jo push inc and js (bad) mov roll mov pop inc sbb rclb in sub pop adc dec repz jp mov lea inc xchg sub sub inc inc shl jp jg in bound push xlat pop cs stos fsts cltd jecxz loope cmova insb xlat (bad) lock bound fcoml pop data16 xchg cmc in loope xchg dec mov mov xor inc test mov loopne sbb ss push xchg jle mov test inc xor outsb mov mov jno jg (bad) fildl sbb mov (bad) mov fisttpl aam je push jle push shl mov pushf mov push or add inc adc aad jge mov sbb ret rolb pop (bad) scas insl cmp ljmp cmpsl rorl cmp push xor in jbe aam out or lds cmp mov imul fisubl mov dec testl xor mov lods xchg and fidivrl rcl lahf scas fisttpl inc jl dec into call lcall sbb add out in cld or mov jl mov repz ss fs xchg push cmp rclb mov insb addl scas push adc or push loope loope xchg orb adc xchg pop fsubl sbb jnp in or mov (bad) call add mov jp (bad) (bad) jg inc scas cmp repnz test mov dec or jno dec in mov aam aam xor xchg jmp imul loope mov pop add aaa dec inc and outsb pop fistpl mov lret int fstps inc push dec inc and and mov out into lock js lea mov mov dec xchg iret jmp cmp js adc add ss aaa mov dec cli xchg sahf lods add sbb in pop out imul xchg push repz iret test bound scas cmp roll clc cmp push lret sub mov (bad) mov cmp jmp div add rorl jb xchg mov arpl int push hlt push arpl xor ja sub icebp cld aas ret test popa inc push fxtract fidiv dec hlt popl aas iret dec push xor outsl xchg add in push icebp stos pop fbld dec cmp and cmp adc mov mov leave pusha imul inc js push (bad) fcmovbe sub mov xlat in test inc xchg mov cmpsl mov arpl mov sub pop inc mov jo sub pop bound in add aas scas dec imul aas adc scas lods push pop loope jl sub repz and push jecxz jae nop pop fwait outsl or mov cmpb xor mov nop adc or adc or dec movsb std push ljmp add hlt out jbe scas outsl lods push inc add loopne orl mov arpl jns out push mov sub and xor aam loop push sub sub sub lds arpl xchg inc add stos pop leave or xchg jp jae mov inc sub (bad) or test pop adc popf sub pop mov arpl sbb dec inc or iret mov test cwtl push lods mov movl cmp and scas ltr outsb mov xchg jnp rcrl dec call sbb sub xchg scas arpl jo mov sbb mov mov and and into imul mov cmp adc std lock frstor arpl cld jle mov daa cmp sysret xchg pop inc jle adc faddl jns mov mov mov sbb lret ret cmpsl les push hlt outsb push jecxz nop add dec fwait inc mov xchg fistl lahf arpl iret aas sysexit mov push mov xlat or test ljmp dec incl pusha ret add test into xchg xchg data16 mov or inc mov pop outsb bound adc xchg push and mov outsl inc dec adc xlat ret pop dec push cli push jns lock pushf jmp adc push inc push outsb mov adc rcl cmpsb jno out sbb sbb sbb xchg dec jg fcmovnbe inc jmp test mov jmp cltd mov or pop or dec pushl cmp pop push inc out and in dec cmp push loope fstpt cmp imul ds jp shlb sub fsubrs dec sbb pop clc push (bad) imul test and jne lods ja dec aad pop ljmp push mov out sbb insl pop rcrl mov scas mov cmpsl scas decb mov (bad) sbb cmp (bad) push pop mov xor shrb xor jno pop jo and and cmp inc in inc cmc adc mov jmp lods pop pop dec in cmpsl jo pop lahf lahf dec or jmp push test insb sub dec jp,pt (bad) xor fldcw ljmp fwait (bad) sbb xor jmp or pusha jecxz int3 jbe mov push cmp stos (bad) xchg fwait cmpsb dec xor dec mov (bad) cs mov adc ss ljmp or xor jbe sub xor sbb push dec je mov das test dec cmp sub out jno lahf loopne clc push lcall test test dec add xchg outsb xchg sbb ret or mov fidiv sahf and popf cmp gs pop fisubr lret adc push sbb dec call lea sbb pop test movsb jne mov movsl fildll movsb in in stos iret dec ds divl dec clc jmp ds add out mov test cmp cmc pop xchg and loopne lods in cli stc or pop scas mov jecxz pushf into or cmp lret cwtl jne push cmp pop test outsb ficomp jecxz mov lea xorl movsb movb xor mov push pop dec adc scas iret mov sarb bound pop push loope fsubr xor std aas popa les pop pop jge insb adc dec fmull shlb jg sbb shr aad add outsb imul sub stos add js (bad) into icebp rcrl inc sbb sarl imul mov and xor add (bad) scas or mov add ret fsubr adc cmpsb jge rclb adc in xor mov pop sbb outsb fidivl out xor in xchg sub jns ret jo sarl push mov xchg (bad) push jmp jp ds popf (bad) xor adc pop inc push push xchg cwtl jecxz mov scas out dec std mov xchg bnd and cmp push in dec cmp (bad) jns add and iret (bad) je das xor lret lods pop jnp jmp mov jmp flds popa sub cwtl add pop push roll pushf lock lcall xor pop lret enter mov mov std lcall mov roll mov sbb stos inc cmc mov push fistp leave fidivl sub cs and dec pop jg jbe stos dec or sub mov jle daa and mov (bad) mov mov cmpsb fisub stc or push call shr stos and loop inc std sub dec repnz bound std and inc adc lods (bad) shll cmpl imul (bad) aam in rclb scas adc sbb adc pop dec lcall lods adc pop mov (bad) mov inc (bad) xchg cwtl add iret pusha (bad) daa pusha lret (bad) or add out lret stc shlb clc sub negl mov rcrl inc fs imul adc push inc shlb pop mov hlt mov loop lret lahf cmp out adc int3 repnz ds xchg pop and outsl out fldl fidiv stc jnp andl insb cwtl aaa xchg jae jge mov out int sarb sbbl dec (bad) xchg cmp mov (bad) movsl lahf ret inc xchg and jge pop add aam loopne aaa ret cmp int3 in mulb imul fs punpcklbw addr16 dec pop sub xchg mov add dec dec rol xor jno xor xchg cmpsl xor xchg mov inc sub xchg inc cmpsb push loop roll push stc pop aas scas pushf sahf jp xchg lret lret rcrl stc (bad) repz test (bad) hlt ror xchg pcmpgtd or cmpsb pop sbb inc lahf je lret scas stos in out enter imul and push mov inc xchg (bad) loop jmp sub cmp movl mov popl dec repnz fiaddl mov sahf lods push imul fisubrl lret jg cmp cmpsl mov into sbb sub push arpl loopne imul sbb fild sbb repz sub adc mov xchg pop cmpsl xor enter cmpsb mov daa imul test lcall inc ja sahf xor addr16 dec pop jno xor (bad) loopne push scas push nop ljmp stos mov xor mov cs and and fildl xchg lahf sbb (bad) xlat push gs jns mov dec (bad) adc push inc lcall out clc (bad) xor popa push dec inc xor xor dec cld mov arpl call in lods sahf das fadds pop inc sarl fnstenv (bad) cmp ss mov sub mov add inc xchg cmpsb call mov xchg push repz push mov imul imul add into mov cmpsb cmc dec jl subl pop and movsl sahf popf scas mov add insb mov repnz lock inc sub movsl adc add adc loope push adc (bad) dec mov or (bad) out movsb in jnp mov inc fmull (bad) push (bad) lock jmp sbb pop leave cmp test fistpll (bad) sbb inc lods mov xchg inc aam test adc das scas jno pop mov ds jp (bad) add pop push lret ret xor push push (bad) sarl inc pop pushf xchg lods push adc enter iret out bound fild mov cmp roll fs push arpl dec jl mov shrb push stos or arpl mov sbb sub adc sbb out sarl mov cmp jp cwtl nop fs cld mov mov sbb loope icebp leave cs mov sbb xchg rcrb push cmp jae add mov les add and xchg sbb outsb sti inc call inc loope pop movl cmp aas imul out mov sti jecxz sbb scas cmc jno sub shll xchg cltd dec les clc sti lods arpl out sbbl movsb cmp fildl xlat ret xchg scas mov and cmp push jl ds sub fst int push push negl out ret push fdivs add fistpl ja arpl ret outsb (bad) xchg cs into jb mov gs and mov or adc lods pop cs add and fstpl movsb repz push scas add xchg mov cmpl lods mov add dec and das pushf xchg jge cmp jb ret andl push sarb xor daa test shlb scas aam lds mov movsl inc (bad) mov push stc hlt push add mov into stos mov pusha or xchg call fcmovbe inc push movsl sbb fsubs jg jecxz mov mov addr16 rcll mov xor sbb (bad) loopne cmp cltd pop push add js into cmpsb sub js mov lods and pop pop fiaddl arpl mov imul test lret sub xchg sub aaa add aam jecxz (bad) fidiv mov cmp dec psubusw sbb push adc ret push jo sub jno loop lock cmp or and cmp das fisub sub dec xchg loopne ds jl cmovno or (bad) xor nop in gs and int3 xchg daa popf int mov repnz cwtl dec and mov jns sbb mov popa mov outsb sub sub push xchg popa mov sti ja,pt fsub test jb xchg in mov push out mov xchg mov imul pop sub push pop push and mov lds pop clc mov sbb pop xchg (bad) xchg jge aaa (bad) test cwtl push lret je jl dec jge rcll imul xchg pop xchg addr16 pop or sbb jg sbb aaa adc ds icebp into adc mov std xor adc notl mov loopne inc std fsubs fnstenv adc ds loope jmp fcmovu cmp (bad) mov xchg jns sub int int adc sub xor test in adc dec jg imul lock xchg cwtl pusha scas loopne imul jmp cmp push or (bad) fnstcw fdivl ret dec stc fs inc push dec adc cmpsb movsl (bad) insl xchg add (bad) call out and cmp and (bad) add je imul pop xor jo popf pop jg cmc stos pop jl and mov pop lock ljmp lcall add xor lahf mov pop sub sbb adc imul xchg aad les adc mov fimul into divb adc adc jo mov sub mov fcomps xchg sub into mov push shll mov es std (bad) sbb fwait shrb xchg mov sbb in add adcl mov cmpsl cmpsl dec imul ljmp in cmp mov imul inc adc xchg xor arpl addb sub in inc aas in lret clc imul repnz xchg in mov xchg es adc mov mov pop nop xor movsb jno pushf gs lods out adc and gs cmpsl jecxz imul loopne dec test pop dec xor mov xchg xlat or jo mov lock cmpsl fwait mov stos add sahf lret cmp fstps dec pop mov imul fisubl aaa or ljmp and xchg fs call jb or fcomps add leave lds pushf sbb lcall cmp adc mov add or xchg repz decl xor es cli xchg clc std or mov fs push repz xchg in xchg pop mov mov dec fisubl dec ja cltd push dec add mov loop dec dec push repnz aam out (bad) xchg or add push cmp cmp aaa inc repnz icebp out je sub adc insl imul (bad) lods jnp faddl icebp dec rorb inc loop or xchg in dec dec mov cmc loop mov cmp rorb inc scas rcrb push xchg scas (bad) xor cli sbb dec or or aaa outsl loope in jb xor push lahf cmp push cwtl xorb push pusha ja cmp xchg fwait adc ja inc dec arpl repz inc sub movsl testl mov (bad) aaa adcb or (bad) or loope sbb imul dec adc push sbb xor xor scas or popa je xchg push loope mov lahf incl sub test dec cmp ficoml mov jno rorl sub loope jle fidivrl cmp adc jl (bad) iret int pushf sbb cmp xor dec mov push sbb mov push (bad) cld int enter enter adc or cmp dec dec sbb clc inc inc in jp pop mov sbbl (bad) sbb (bad) loopne xchg jp sub sbb jp pushl dec inc mov cmp in xor adc push pop jp movsb adc movsb cmp pop adc (bad) fisubr sub movsl movsl repz jbe lods (bad) mov pop in fbld jo sbb cmp nop sbb loop mov loope and inc ja popa push jae dec dec cmp sub xchg inc or test dec mov push push (bad) (bad) cmp nop mov jb dec pop add hlt mov dec jnp cmpl test sbb insb cmpsl inc push arpl inc js sub cmp mov sahf cmp adc cmp sub sbbb sbb cmp mov jecxz jle cmp (bad) in (bad) jb sub jno out cld mov fistl xorb leave push lods stos add dec loope xor xor inc pop loopne and cmp enter test adc jo das cld addr16 cltd cmp jb das and inc in push mov mov (bad) int3 pop push xchg in fnsave scas jecxz or jae push pop or dec stos jl pop lret ds aad push popa adc daa pushf adc mov hlt lret xchg enter adc adc and loope pop stc mov xchg and mov xor xchg mov sub in in in std (bad) lock sub cli flds adc ljmp jno push and pop cwtl (bad) pusha push xchg mov stos mov pop outsl aam push nop iret loop push pop adc test pop mov pop mov add (bad) outsb adc and jnp jne adc add xchg mov dec inc imul xchg mov shrl cmpsl xchg mov adc adc in test push cmp jle add cld imul fldenv push in xor dec cli dec mulb mov inc cmc aaa (bad) dec lea sub add ret fdivrs xchg mov push cmp mov cmc or icebp (bad) mov jae inc les mov cmp movsb test das jnp mov arpl and loope shr push int3 mov inc xor inc ss push shrb mov and dec mov jle nop dec mov pop lcall xchg call cmpsb sbb imul xor lcall xchg jp repz (bad) (bad) (bad) adc and dec mov aas nop fstl xchg push add orl loope aad push (bad) enter add (bad) aas pop push popa aam add fwait dec or dec cmp jle insb in push mov ss jae xor adc dec mov sbb or insl clc cld cmp into push fsts lds enter mov addb lcall cmp jae mov cmp push movsl or push sub inc sub loopne in jnp and fs mov ljmp and test mov cmpsb movsl jne cs push adcl mov movsb popf or insl mov mov lcall cli and dec ret mov les dec jo xor xor pop lahf cwtl (bad) in aas outsl mov addb pushf shll sub roll es push dec data16 fdivrl pop fldt mov loopne into sbb xchg out cmpsb sbb stos out (bad) lock in jb fnstsw das sti xor jp lahf dec test mov mov aam cld int3 stos cmovbe adc ds je fwait mov dec xor jb or andb call (bad) cwtl lods jnp cs dec mov add popa icebp fbld stos int3 ss loope insb mov pusha mov mov mov cmpsl cmp pop dec jmp or jmp mov adc mov sub mov outsb lea fisubr lds jb je je bound add mov aad adc push mov (bad) cmpsl daa test nop sub aas movsb and jecxz jnp (bad) aam dec pop rolb dec and fdivrl movsl xor lret mov xchg push dec mov loop sub ss testb icebp lods frstor outsl inc inc jecxz xor (bad) jmp lds mov sub lods sub js (bad) in push mov shr push mov push mov xchg hlt outsl jbe push or and cs dec adc lods pop js sub jb bound test push outsb icebp loopne mov push ss and jge leave ficom push xor push inc and sub mov cs push or adc int adc mov adc fisubrl into cmc clc and and jecxz loop and aad mov jae pop mov test push icebp sub jmp and dec into out mov iret dec pop rol mov mov mov add lahf repnz cmp inc fsubs lahf icebp xchg mov and gs repz (bad) aaa mov pop int loopne stos xor cmp sbb (bad) fsubrs xchg jae scas and xchg mov ret jns repz int ret inc mov pop adc push enter dec loope jb imul jns stos outsb daa insb pushf dec push mov movsb cmpsb cs popa fildl mov (bad) and mov lea clc sub mov stos sub lds test sub mov adc inc dec adc xchg and cs adc aas repz xor xor pop sahf and ret or mov pushf ret pop stos inc test aas fisttpll xchg fistp push lcall cmp jp pop fsubl popa dec insl fcmovb push dec push push push add pop inc xor hlt ja fdivrl push pop pop jns pop enter arpl inc out jae dec mov sub push adc mov jnp and mov cmpsl xchg sbb mov mov mov fnop add push dec cmp pushf push daa inc into mov add jmp sbb jecxz jae (bad) xor lretw jl cmpsb cmp mov shrl daa mov inc xchg shrl test xor jle cwtl sub and mov arpl in stos insb mov hlt adc sbb outsl xor (bad) sti insl push dec shrl mov cmp in pushf fisttpl push ds mov lret mov movsb cmp push and xor and fs push nop nop sbb fadd sbb sahf xchg in es jae outsb inc stc movsl loope add pop mov pop push push adcl repnz in dec dec cmc sahf rcll sub pop push jbe icebp aad gs sub out sub int3 mov (bad) (bad) mov (bad) adc (bad) negl adc aad push xor nop std mov aaa out adc cmpsb mov lds or in mov dec xor cwtl adc push xchg test ljmp mov xor pusha mov mov lods jp adc mov xchg mov mov (bad) daa ret leave (bad) es add mov outsl fdivrl fwait repz sub call sub nop xor mov divl (bad) icebp ftst mov sbb xchg xor add push call push xor xchg adc icebp push pop inc cli adc jbe mov add mov je xor addr16 add (bad) dec cmc fisttpl sub shll sub mov call gs insl mov shrl lea xchg mov (bad) push mov loope aam jp stos cmp fstps (bad) xchg movsl icebp into push out sbb push inc dec (bad) push sbb cmc jge in addr16 push test xor notl fs (bad) fnstcw int3 divb pop mov int3 jnp (bad) cmp xlat mov dec (bad) int3 mov cs jl cmp int std mov aaa pop add (bad) adc and out pop jl flds (bad) inc subl or or shl jecxz xchg cmp cmp (bad) repnz push mov test addr16 rclb iret test sti enter cs xchg ljmp cmp xchg pop push add rclb sbb mov fldenv (bad) jecxz or mov add pop pushf loop in inc and sub xor and shlb mov scas rcll stc pop ret aam les call insl subl mov movsb and pop mov jg jmp std ret cli cmpsb push mov xchg lret dec outsl mov lret fsubs inc movsb and scas inc add mov in mov lret (bad) scas xchg pop pusha mov repz popf lahf int3 int xchg sub xlat in mov scas inc xchg cltd leave add repz xchg inc (bad) push jnp jbe xchg cmpsl jmp scas cltd aaa xor jno add ficomp adcl stc lahf or xchg push sub mov arpl imul ja imulb je push sub mov imul (bad) xchg ja adc inc mov mov xchg les mov jp cld pushf xchg stc mov lock icebp pop (bad) lret adc lret lret jmp inc mov icebp out out out lret insl fisubl dec lcall xlat xlat in mov scas stc mov and push add aad (bad) sbb add je loop or iret push xor fstl movnti xor push push mov push dec jmp jecxz andl lcall bswap dec int3 scas sub jns pop jbe cmp int dec mov enter mov inc pop add push lahf sti push xor ljmp mov pop mov clc psrld phaddd pop mov mov adc cmp push scas in inc pop xchg (bad) in cli xchg pop mov jp fs (bad) push and cmp ss insb xor xchg xchg popa jbe pop inc fisubl cli or jle xor (bad) add adc sbb imul stos loop lcall mov nop clc xor inc push push mov pushf mov push movsl xchg (bad) cmp or aam popa notl aas ja lock fs xor cmp sti idivb jp fisub adc jge data16 int3 pop popf les iret fld rcll cmp pop push add adc xchg imul call sarb mov dec adc push ds jg call dec sub roll sub in jbe bound imul pop iret cmp ja lahf sti mov jge test add mov inc sar shll dec (bad) ds movsb into cmp adc daa pop divb repz mov xchg or aaa mov scas mov sub push jmp push jg sub jb nop leave dec rcl jp repz out sbb stc mov loop std xor lock movsb loope sbb dec movsb loopne clc push cs jb out dec std call dec adc ret lds pop mov in dec sbb cmpsl lds rol and xchg adc jle int xchg lcall outsb jo mov mov popa cli adc clc cwtl ds addl je icebp jo adc out ret bound sbb mov dec int3 xchg imul push or and dec outsl dec mov or addl lock sub and pop (bad) xor sub pop fidivl (bad) fisubr push jmp imul inc loope out inc test jmp mov shll icebp sub or add pop (bad) dec (bad) adc and pop adc and in lods xor movsl xlat inc shlb xchg lods stos push xchg divb std lahf stos add mov (bad) mov aas stos scas repz xor or popf out adc mov jo pop mov cli mov mov pop or addr16 int3 cmp mov mov xchg fsts cmpsl pop jecxz cs out popf adc in xor pmulhw inc (bad) out popa mov push lahf rcrb call mov lods inc ret pushf xchg xchg sub jns js jno fnstsw xchg push adc sahf addr16 movsb bound jecxz sahf dec stos (bad) pushf jo mov fidivr aas or jb test les cmp je and and repnz jns mov mov push sbb dec or lret outsl ss cmp aas dec push pop (bad) notb xor hlt dec add pop or cmpb inc dec mov sahf out cltd cltd ss mull jb ds mov pusha shl mov xchg jg adc sbb mov xchg popf sbb jge xchg add movsl mov dec mov xchg push mov nop loopne popf xchg mov add gs stos pushf outsl dec outsb testb sub inc xor mov or add (bad) xor jp scas stos nop mov loop xchg incl push add adc mov jmp fidivr dec stos fdivl push pushf pop cmp dec test add adc pusha inc mov push fadds lea (bad) aam push test (bad) sub ds and adc jmp loop add cmp xchg mov xlat icebp icebp cmp mov inc push sub imul sbbb cltd stc push scas or dec and mov jecxz mov inc data16 push push and in enter negb gs cmpsb int3 aaa and mov pop lahf (bad) shlb fadds test pop mov jg push out dec imul into popf push dec jmp jle insl divl adc push das insb and push pop (bad) dec sub sbb mov lcall mov outsb inc or push ja sahf mov mov lods fimull popa nop movsb xchg jge jb stos lret inc cmp mov lahf sahf push je mov not repz mov jge out or dec lcall sti inc push push pushf sbb movlps pop (bad) mov push movsb mov lock in pop mov popf jge adc push rol mov icebp stos fcoml mov sub and sbb mov cmpsb jns,pn and xchg into jmp lods jg lcall pop (bad) loopne mull test cmp add out leave lock iret ds ret mov ljmp arpl cmpl mov call inc arpl sub adc xchg outsb inc outsb (bad) pop pop das mov nop mov xchg inc pop in jecxz lret or cmp movl hlt xchg icebp cmp pop (bad) xchg and in mov jg cs xorl mov inc shr dec fwait xchg mov nop mov push mov cld jmp stos dec stos xchg (bad) fdivrs mov push stos flds xor jae mov and in push addr16 aad jg add cltd jbe cmpsb mov outsb xchg cmp inc mov (bad) jns sbb daa (bad) stos sub cmpsb sbb adc aas into cmp loopne (bad) jne adc jecxz lret loopne jmp es and mov lods xchg in test mov jle push xchg mov ja inc xor jne test push push test sbb sbb std jg jecxz xchg sarl mov or ds mov cmp and fidivrl cltd xor push fwait pop inc enter leave or xchg xchg mov cltd inc dec cmp cmp or fsqrt out cwtl pop daa (bad) sarb nop stos or pop cmp fcompl outsl dec pusha pop es jecxz inc mov cmp fisubl arpl mov icebp dec or and push mov add push push jns inc mov fstl gs cs mov lret andl fildl push add stos imul xor jns dec dec pusha push mov (bad) pop lock xchg in and outsl jns je test into popa ficompl ds in pop gs push jne vmovntpd adc cmp lret pushf in in xchg aad lahf add int (bad) and jb imul lahf and inc in std jecxz mov int3 jbe or js mov xor (bad) pop push fmuls cmp stos dec push xor or jecxz cmp lcall aad pop daa and test pop pop jns dec popa inc pop xchg jl mov in xchg mov fisubl js or mov push mov mov sub insb or (bad) xor scas sub sub mov in dec jnp (bad) xor sbb mov sub scas arpl notb and pop adc (bad) mov stos and jnp dec xchg mov jno add sub add clc push jg clc loopne (bad) cli sbb clc sbb push cmpsl lret cld adc outsl xchg jmp fstp dec scas inc push or jbe mov add jo sub cmpsb dec insb xchg in push in (bad) pop jmp call clc cmp fmul jo test or push sbb sbb sub mov inc sub and lret push xchg ljmp mov and dec sbb addr16 iret out nop movsl pop hlt sbb pop hlt loopne dec into int adc adc jle ljmp call sub or jo fldcw mov fbld pop mov in sahf mov push imul mov test mov xor icebp in stc sbb fwait mov add jl pop daa pop jno sub mov mov (bad) xchg sahf (bad) cmc xchg jecxz call and stc dec and dec add cmp hlt ss xchg fwait xchg in cmp or inc pop in push xchg cmp into lods aam lret cmpl ds mov rolb aas or mov dec cmp dec loop xchg cs lret or push jno and inc popa loope mov mov xchg pop mov rorl fcmovnb sub jb clc or (bad) popa dec jge sahf jno aad lods mov sbb dec sahf mov sub negb pop fstl mov js sub loopne xor push adc mov ja sbb insl nop dec xchg jmp pop sahf insb iret jne sub cmp outsl std cmp mov fcoml jae dec xchg fldenv and ret inc (bad) outsb push cltd and or adc push jmp aad loope iret xor addr16 fcoms fs xor jp lret sub rclb loop aas dec (bad) enter cmp sahf sub sub lcall or push cmp loope les mov sub mov je mov mov fcmovu sbb clc jnp imul mov icebp push cmp adc and repz adcl (bad) xor cmp fsubr pusha jne out test out fldcw je mov mov lea dec push test xchg (bad) mov jae ret sti js mov cmp sbb sub dec fidivl sbb and insb pop mov xchg in mov (bad) cmp dec pop lcall xchg mov jmp cmp in cmp int jle lret mov stc mov mov sbb addr16 lcall andl push jle inc pop mov mov jno pop xchg mov xchg cmpsb test arpl xlat jne fstps jle pop cwtl adc mov aas (bad) cmc fidivl ret or lcall sub (bad) ficompl xor repz cwtl call inc std mov pop push jne or xchg aad (bad) cmp jbe int3 push jns add push dec faddl in inc jbe jo inc icebp nop sbb repz adc dec xor mov cmp jo ret stc stos shrb sti cltd lret fistp inc stos xchg mov test push jl dec rcrb outsl js arpl or std call push sub idivb mov ss sbb gs dec cmpsb adc push (bad) std add jne xchg dec xor ss sbb icebp ret sbb aas ret mov xor lahf cld push inc int inc sbb jle stos pop cmpsl pop int push dec add jmp jmp in adc or movsl push jne add jae hlt loopne pop popa mov cmp lock sbb inc in pusha push cmc inc add inc outsb pop jmp jle fwait jle sbb repz mov cmp into es mulb mov xchg push sahf and arpl aam mov inc mov test ror (bad) mov aaa out pop popa or mov sbb mov mov push and dec fdivrl xchg xchg imul scas fwait xor inc out pop xlat cmpsl sbb dec (bad) fxch and popa and pop insl mov out or xchg cmpsl insb dec xchg loopne push nop inc or push sbb in ja sbb sub pop test mov dec xor dec pop aam or mov add or xchg mov into pop mov (bad) adc cmpsb test mov sbb ja xchg aam (bad) mov push adc push xchg mov sbb fsubs dec scas jl or pop ret into and ja jnp mov mov cwtl movsb xor stos jne rcrb fwait pop dec fist ds mov or imul movsb fld notb adc arpl mov rcrb stos cli mov (bad) imul mov dec (bad) xor pop push (bad) inc cmpsl jecxz inc (bad) enter add lcall outsb jl (bad) sbb push in int adc jae (bad) lock adc adc (bad) jae loopne or mov sbb test lock jnp or mov add movsb daa mov add add loope arpl push xor leavew lods mov lcall mov out sbb cld roll sub adc les add mov fnsave xor int push lock xor repz sbb jns adc jg or pop cwtl sbbb (bad) repnz fistpll push dec fist cli inc push xchg int jns jl lods pop xchg jmp out repz fnstcw cmp jno rcll sbb push and ret push pop inc xchg arpl cmp cmp push mov ljmp stos ss sbb dec or inc adc mov inc test ja jecxz (bad) pop rcll jge outsl sbb sub jmp push jnp lock push pop push sub loope stos jo outsl or outsl inc leave cmp xor fcmovne push stc cmp enter push stos stos test push sbb les jmp sti jae jp test leave and jp repz out inc jno xchg out sarb or fs mov jae js ljmp dec sub pop fisttpll xchg xchg insl jmp imul fnstenv push add pusha (bad) pop mov out cld add or nop outsl pop lods add sar gs ss cwtl dec push cmp xchg add bnd inc popf push cwtl and (bad) test cmpsl xchg sub shl outsl fstp aaa jmp clc dec sbb fcomps xor lret xchg or push dec or mov cmp (bad) and cmp (bad) xor jecxz xchg xor push sbb jecxz aas jae sarb pop add ds les int3 ret repnz sub or inc fst nop popa mov sub aad cmpsb or or insb mov vcvttpd2dq dec and daa jmp in cmpsb hlt test mov cli (bad) mov mov push int sarl mov sbb jns imul and pop xchg add (bad) push inc les cmp pop shl js (bad) enter push push add loop sbb fistpl and test pop rcll addr16 (bad) and mov sbb xorb insl mov lea (bad) inc (bad) iret outsb jl loopne push aas daa xchg incl pop repz mov lock mov cld jnp ja dec or nop xchg addl xor in pop xchg mov mov and (bad) in pushf mov dec pop sub pop movsl es bound in fldenv add jge inc mov sub and adc sbb cmpsl stos or cmpsb mov xlat cmp pop mov xchg imul xchg pop je push test mov xchg jmp jns sbb dec rcrb in dec lret rorb adc repnz subb sub mov adc pop xlat xchg pop rcrl mov cmpb push mov loop test ja cmp popa call mov (bad) push inc jmp push mov fisubrl fisubrl cmp dec push jne pop loopne mov push pop test sarb mov xchg or clc fsave push dec js out test and (bad) add pop vorpd bswap lock sti cmp sub insb xchg mov lret in mov sub decb lret fsubrs iret (bad) loope outsl mov push js and xchg pop xchg sbb outsb inc outsl dec pusha cmpsl or lods xor jnp jmp lods shrl popa adc xchg sarl sub jns mov mov mov add bnd (bad) lock sbb mov add xlat mov dec fisttpll jbe in ss dec push jmp xor daa out repnz jns pusha cltd ss (bad) xor and push ljmp pop push into fidiv lea mov addr16 mov push mov (bad) inc mov mov xchg mov sti xor or and jbe and js rolb xor add ss je cmp inc dec pusha xchg (bad) and mov cld sbb xchg stos or (bad) mov add xchg lods xor in (bad) out dec (bad) fstps push pushf mov cmp add decb into cli or std xchg mov mov xor mov adc xor xchg mov outsb ret imul adc xchg sarb or (bad) xor stos jo stos jno push mov ja lods cmp ret lods push mov dec jb xchg inc es jmp (bad) jb xchg push pop mov adc out push add scas pop cs push mov fs inc push (bad) cmp mov mov inc cld push jne push gs add mov js mov jbe sub add pop add repnz jg iret mov aas dec stc inc pop lret and inc (bad) enter mov into push out int pop in sbb jp mov push pop lahf pushf rorl sub lds mov lret dec in add in lret (bad) into out gs scas test lea ret add addl xchg add jae ss loop cli testl cmp jmp push fwait xor inc add pushl lea xlat jg nop into dec lahf inc insl sbb insb push std and in and (bad) repz in fcompl jl call add imul xor lret pop push lods sub popa cli sahf cmp ret (bad) dec lahf sbb (bad) xor mov addl mov pop insl dec cmp out sbb pop outsb sub adc enter notl inc fild xchg imul sub in adc cmp inc adc jbe in data16 mov roll mov xchg cs les dec cmp adc negb mov sar scas and stos (bad) mov fdivp out cmp adc mov pusha xor dec or call fild mov je imul inc test cmp shrb mov jmp jp or pop es ret je sub cmpb stos bound mov fwait jg std mov mov clc dec push inc or or lods mov sbb pop mov pop repz or decb jle xchg out out das or pop push cs xchg sub lock push outsb pop jmp out rcrb sbb mov lods push sub inc jno (bad) jno lods mov xchg addl xlat jmp push xor sub adc mov inc mov ss cs fisubr push mov test inc cmp mov in aas shlb ja daa inc cli or mov out (bad) jae aaa mov stos push outsb sahf sbb mov inc call and decl and movsl add cmp jno inc lods leave pop dec iret pop xlat (bad) xor or or (bad) stc int and cmp test xchg xlat xlat addb xor add insb adc cmp dec in push pusha test mov gs sbb xorl es (bad) insb rcll das pop sbb std in or dec jg push imulb pop pop ret mov enter push xchg mov mov adc xor and ljmp cmp aam pop pop lods mov nop adc lods mov adc mov stos cltd cltd xchg shrl cmp call loope fwait xchg test push fdivrp inc or out neg jp sub adc dec iret xchg mov mov push xor out and push mov lret sub or aam mulb xchg mov loop xchg lahf pop jns daa and loop fisttpl lret pusha arpl cs inc out dec xor (bad) sahf adc inc ds scas mov es fs xor pop mov dec scas add icebp inc jb mov into insb adc add out add outsl sub into inc in stos fcmovu fcoml pop fild in es adc mov push add fstenv push add dec mov inc (bad) in dec cmpsb mov mov adc sub sbb fisubr xlat scas pop push loopne jne mov lret leave movsb mov out mov cmp iret out sbb push sbb int add aad lods or sbb mov aas sub stos (bad) in iret inc punpckldq pop ds mov xchg adc sub pop test out lahf xor inc test loop (bad) cpuid mov icebp xchg enter mov aam push push mov scas sub sbb dec lret inc push sbb push push in out pop add int jne hlt sub cmpsl ljmp xor call rcll (bad) xor xlat xchg pop call mov bound sbb stos fildll ljmp and movsl mov fidiv mov leave push loopne bnd pop aas loopne xchg fisttpll cmp xchg data16 sub xchg enter mov bnd xchg movsb (bad) add push mov iret outsb dec lods lcall aaa add inc jns mov pop mov push loopne jb cmp mov mov xchg adcb jnp mov (bad) sarb add push lods sarb mov cmpsl inc adc sbb call dec pop sbb mov sub xchg cld fs rol xchg sbb std es mov push arpl fwait pop aam jl pop into inc (bad) adc out jg xor jnp mov and push (bad) imul inc jns sbb adc or std int3 pop cmp ss mov btr push pop out sbb scas dec rclb addr16 cmp fwait mov sbb in pop or int3 pop add (bad) fsubs cld mov aam jp imul rolb (bad) nop insb pop xchg (bad) cmc pop xbegin pop (bad) sub popf fbld jecxz aaa jp outsl add sahf imul sbb cmp imul pop imul add xor test or outsl xor aaa inc pop aad hlt xchg pop jle push cmpsl into ljmp sub call fwait (bad) aas push mov pop inc (bad) test arpl pop iret insb (bad) lret cld xchg aas jecxz push (bad) loopne xchg cmp sbb push call ljmp inc jnp inc pushf scas pop into lods pop ds loop sahf mov lods in gs pop or popa bound test (bad) divb and mov xchg add mov push (bad) dec adc lret ja mov sub inc xchg cmp clc jmp push xor lods fwait pop bound mov mov jp aaa sub push inc sahf mov mov jge std mov xor (bad) in repz pusha cs aam jecxz adc daa xchg xchg add mov scas fdivs and jno cmpsb and ja divb push movsb ret cmp mov (bad) push shr lret xchg mov gs pop xchg test inc pop adc and xor jle in in mov mov push adc add push xchg push and jnp and fisubr aad xchg sbb add xlat sub jae cmp in lcall ja inc (bad) push xchg scas lds pop aam jp,pt xor testl into xchg mov clc lret (bad) sub lds add imul pop outsl and add mov mov sub push inc mov push in aam out sbb cld jp das dec sahf mov les and dec adc (bad) sub out xchg ljmp adc jns loop,pt push leave (bad) mov cmp push pop in bound ja out xor (bad) ss xchg cmp aam pop xchg mov in add or loop jo jmp lahf rol mov dec cmp std xchg mov and call mov test cld mov push sub and int or fwait sbb cwtl add in pusha sarb lret add jmp iret and mov leave mov inc pusha pop push mov sub jge dec xchg lods xlat or fadd or xor jno loop jb sbbl jb insl outsb mov pop (bad) pop sahf movsl arpl adc subl sub ret loope inc ret popa and popf iret adc inc sbb popa bound mov mov adc imul push rclb mov leave scas xchg jne push cmpsb sbb ret jne sub xchg inc push sub dec scas pop fwait ret sub test (bad) push push std enter hlt in test out jl adc adc pop addr16 rolb mov mov sti scas arpl adc inc sti mov or mov add minps leave mov idivl xlat cs jp lahf jle pop sub mov es xchg aaa frstor pop sbb pop sub test jne mov inc jo fbld lret popf dec stc inc sbb inc or ljmp cwtl xor xlat sub inc imul subl cmp jo divb and or push imul pop in push cli sbb popf inc aam add test mov pop add clc dec xchg xchg inc nop xchg sub push das inc xlat xor cmpsb adc addr16 ss mov jecxz sbb mov mov cmp sub out je mov scas push in mov dec insb pop cs jg test adc lds cltd hlt lret insb push sub repz ds in aam pop scas inc cmp lret stos push pop cli pusha loopne addr16 xor mov bound inc push in outsb loopne mov xor jo lock ja add pushf outsb add (bad) out pop fstpt int3 test pop nopl test fistpll ficom ljmp jno mov insb (bad) fldenv jecxz mull jns cltd fdivl aaa jns xor (bad) mov js ljmp jmp sub dec cmp es repnz adc mov jecxz cs push sbb cli sub das mov aam xorb incb sahf clc ficoml fdivl fstps lods ljmp bound ret jmp lods add neg lods pop inc je sub lahf adc (bad) (bad) cli jb ds leave hlt lret loop xor lcall cmpsl jp,pt dec push and push dec sub lret (bad) sbb add cmp lods xor stos sti jns sti mov out jmp inc test out loopne inc test test ljmp inc and fisttpl jle sbb mov mov repz jae cmp jnp and jl pop mov pop iret bnd mov mov pop movsb scas dec push push jo xchg mov aam jge je cld add push mov (bad) add mov pop mov enter repz inc inc sub pop scas jp xchg sbb stos jge adc (bad) push sbb mov mov lret loopne add cwtl jp adc outsl mov popf add add imul mov dec cs and jbe or ljmp xor imul jg shll inc xor fwait stos fadd loop js mov out clc arpl mov (bad) or pop or ja das ret jg ret (bad) push inc cmp aam mov fxch test out stos fldcw mov jge roll sahf ja mov das mov dec mov push or mov cmc inc adc xor pop sahf imul lods and mov lahf insl sbb xor stos stos je pop sbb and out jmp mov cmp (bad) in mov sbb fmuls lret push add xor lcall rcr adc test lcall mov adc sbb and inc push and in cs rol xchg subl jmp ja je pop out pop ja jo pop rcll movups (bad) test add rcll sub in xchg mov mov das xor push pop rcl (bad) jo cmp mov std xchg cmp mov dec popf sub mov and mov add xor shl mov lret mov cmpsb dec adc jo lahf scas movsb jno dec dec loopne jp imul scas cmp pop pop (bad) jg sbb pop add and sub shlb pop nop cmp scas je mov mov cmp or or add push xlat sub sbb and pop outsl mov push inc in xchg mov ja inc outsl push imul add xlat int3 mov and das call lret frstor push (bad) cmc and pop in xor into inc xchg mov dec add or cmp lock ds jp xchg fstl shr aas xor xor mov sub loop insb xchg out adc mul inc mov jp adcb mov jae cwtl shrl jb push lret push pop ficompl pushl pop jle xchg push mov mov mov (bad) ds fucomp leave pop mov and std cmp out mov rorb (bad) pop push jge aaa or loop cmp bound mov int add mov or outsl int adc in jnp mov stc cmp or lret pop cmpl mov push out test xchg hlt pop add cmp cmp out pop ss out xor pop dec and cli loop pop lock outsb lahf fisttpl cmp cmp test data16 jp fdivrs sub lods ds arpl sbbl mov idivb push mov inc mov push fcmovne addb or dec idivl inc mov test adc lahf daa stos or xchg push pop in jne mov push pusha pop mov lock jbe jns mov je js dec in lock pop mov das inc repz mov xchg aad sub (bad) inc or inc loopne cwtl dec cld into stc sub xchg stos out dec sahf iret mov loope aas incb repnz adc mov mov sub mov and fbld xor push dec insb cld std negl mov mov sub out and push mov outsl dec mov mov inc jo dec data16 mov nop inc xor mov push pop cmp pop sub je pop mov inc jge inc ds mov sub mov mov ret inc outsl lock sub fcmovnbe mov mov pop jmp xchg mov or or int pop xor jmp data16 xchg mov dec mov loope scas lds cmp cmp add fucom loopne rorl jecxz test cs loope sub jne mov stc dec cmp or pop aaa stos add movsl push mov in pop fisub outsl mov call jo xlat sub sub push fnsave aad sti pop cmp mov jno (bad) cltd mov or js ja (bad) mov mov outsb gs sahf or xor push push push adc (bad) insb imul push (bad) rorb and jp inc xor or jecxz mov test cs xchg je in out and dec (bad) lds popw or add dec das sbb sub jbe sub pop mov add sbb aad iret arpl addr16 fwait jg ror popa mov xor add mov sarb add add cld add mov mov decb shrb mov sbb and aaa (bad) aas insl mov cmc push or ja aas cmpsb cs jl cmovo out mov cmp inc mov xor mov mov inc inc mov push sub jae adc clc leave sbb fs xchg insb cwtl lret lcall aas xchg mov in addr16 push mov xchg xchg inc popf aaa pop cld jg ss (bad) mov imul add int3 sub inc adc inc js mov icebp cmp xor xchg in push iret in cli ds sbb loop pop es jae sti or sbb stos sub push xchg aam add test outsl jo es (bad) mov std jecxz xchg sub fcmovu jns and pop das (bad) enter cmp cmc mov in popf push pop (bad) sahf pop ret shrl fiaddl pop popa inc push jbe cmpsl out xchg cmp mov mov and and rolb (bad) ret jnp mov mov popf test fsubrp or cwtl push cs mov iret fistp (bad) (bad) mov out mov stos xchg js inc or scas or jle jl adc xor scas mull jle push and push jbe nop pop sbb inc inc dec sarb xchg ret cmp mov pop (bad) push sbb push push loopne es les int3 shrl ret je jae rcl jle (bad) mov ss pop mov dec inc xlat into int3 int3 mov cmp xor jo or mov xchg lods push mov loop mov ds push jbe inc add mov loop ss push jbe xchg loop shl mov loopne es hlt jge push lret aas xor fwait adc inc outsl imul pop dec lock mov and loope sub test scas mov insb das or mov jecxz (bad) adc dec sbb adc sbb push mov dec sbb pop addr16 mov add adc xor jmp bound mov aad test fcompl into jnp lret lret in xchg mov mov lds mov loope pop fsts xor mov and jae (bad) aad lods cli jmp xchg cmp push pop jne (bad) out jp clc inc cmpsl pop pop mov mov mov dec ljmp sub inc adc aad pusha jle ficomp adc dec aas and outsb stc sub inc les sbb lcall mov and dec add jmp xchg enter dec shrb jle sub pop inc push sbb loope (bad) cltd pop cmp out jmp xchg (bad) jmp xchg pop lock es and add sbb in inc adc sbb ja adc inc xor mov fs pop clc repz dec mov nopl rcll ss xchg bound pop mov mov addr16 xor pop xchg cli mov jns sub sub jbe popf mov and fwait jns xchg push into dec xor jno in icebp cmp pop xchg pop push pop cmp sbb or repnz jae adc pop dec mov pop xor (bad) ja pop pop std sbb mov dec cmp outsb sbb (bad) xor ror loopne movsl dec pop ror mov cmp pop out mov ss ja outsb in cmp aad mov mov sbb cs push (bad) shr daa cld iret and adc inc adc add insl cmc xchg cld test lods adc pop mov xlat sub sub out scas dec mov xlat push loope fdivr add adc out add inc fiadd jne cwtl inc pop cli iret fmul pop je ljmp incb sbb and adc adc sub int dec mov inc inc xlat pop xor aad test in mov or in and fld jno cs cmp cltd cmp jle into pop lods inc lods mov dec jl adc adc adc push fcoms divb mov adc lea in sub pusha xchg ljmp cwtl fs daa cwtl xchg je jb cmpsl xor cmpsb lret (bad) in mov or mov push push push push stos pushf mov dec adc test gs insb mov sbb jno mov pop call je insb mov (bad) lock ret stc insl stos pop loopne fldl test (bad) or inc jnp lahf xchg dec repnz xchg xchg int scas or sbb mov cs or into pop pusha dec mov pop cli inc jbe push jecxz push push adc cmp cmp and xchg or and divl movsb repz mov cmpsl adc (bad) sub jge fisubr jle (bad) jae or xchg dec test or lods (bad) jae mov addr16 mov pusha lock std jmp add or loop fldl adc push add cs out dec cmp je cld cltd sti jge (bad) xor insb dec iret pusha imul sbb push sub xchg pop lods insb es cwtl and sar pop jne adc jmp dec call jbe into lods fwait mov stos (bad) fucomip shld (bad) mov xchg inc mov int lea int3 hlt push inc mov sbb mov jecxz add sub sub dec movsb in cli xchg cwtl (bad) jl jne iret mov add aam test cmp adc sub add enter nop les add or push xor es sub jmp mov mov sahf cmpsl mov test cmpsl sbbl jnp cmp push ret mov mov je shrl inc es mov pusha sub ret cltd xchg add and aad and popf insb xchg ret loope or test jns aad and repnz test jnp (bad) lock (bad) xchg dec cmp xor jmp fcmovnu mov mov xor ss jae mov and push fcoms imul negb pop sub mov mov push xor lds je call dec push or mov adc nop dec test loope jecxz jg jo loope repnz mov mov mulb sbb jge jge out aad repz sub cltd mov pop jg cld notl lret xor jo in movsl mov xchg bound dec adc cmp cmp dec mov (bad) je popa stos clc jmp loopne sub stos cmp int3 pop xchg aas push out pop lcall leave dec mov push sub das mov rcrl mov jmp (bad) out outsb mov fwait mull cli jns inc push or sar outsb mov push lock test xor data16 or out xchg mov pop mov sbb cmpsb pop mov shrl push mov add aam sahf iret insb (bad) or mov and fcomp ds add mov popf push lock cmp nop xchg imul mov xor rcr cmp cld push lcall sbb rcrb dec cmc (bad) mov xor leave and xchg mov mov push push incb dec (bad) jae enter popa fsubr xchg sar movsb int clc or sub icebp adc loopne push jb fcomi jae roll add sub jns cs mov ret xchg inc sahf fmulp inc jg or jae and xchg sbb aas cmp xor add (bad) dec pop outsl jmp int3 outsl dec sbb push xlat add ucomiss lcall pop loop pop jmp sub and imul enter pop loopne push daa push ss (bad) iret xor out cltd xlat (bad) jecxz add pushf sahf sub adcl (bad) vcmpps int mov or pop lods xor sub sub sbb jbe or xchg push lods mov sti inc fwait inc sbb aam mov mov into xchg cmp jmp hlt push jecxz ret add popf ror jp push push mov xor out cmp jbe fs lods enter stos daa paddb les sarb rcl iret push dec pop imul and add pop test int cmpsl clc cmp jnp xor push mov or movsb jb popf and leave rorb test adc aad mov cmp sbb sbb or pop mov test or imul push pop push in xchg sbb inc rcr pop inc jno enter fnstcw out sub and mov out and push int test popf push cli ror outsl cmpsl sbb jge rcll xor jmp in daa std fsubl jae sub xchg xchg jb mov xchg and sub imul xchg ljmp scas cmc movsb mov sahf pop mov and std hlt (bad) pushf in rcll cld mov dec push std pushf pop or push lcall popf jecxz cmp push clc cmp mov ja data16 sbb adc mov mov jns mov cmp out adc add cli (bad) dec rorl pop and int ja adc out pushf pop jp inc dec rcr (bad) sti or or dec inc mov push popa lea jo sub cmp push in xor mov jno rol or xchg js arpl and pushf fcoml rorb xor jecxz cmp shlb inc sti adc hlt mov pop dec or cmp push mov push push scas adc test push fwait adc aam lds imul (bad) mov adc into ror inc (bad) mov (bad) jl xchg xchg daa cmp add and push out dec inc or xchg cmp inc bnd push je xchg scas mov dec (bad) icebp sbb imul push outsb push cmp imull fsts dec call and insl int push mov xchg lret call cmpsl mov pusha adc pop out xor and adc mov pop lds cmp mov mov mov test aas es ret mov cmp call sbb mulb or mov test cltd loopne lret jl cmp scas loop data16 out jno sbb cmp in dec push jle sub jecxz addr16 sub cmp mov fwait lret lcall pop imul mov int fcoml fwait xchg cs rorl pop (bad) mov test fldenv aad mov in and jg xor jns jae popf and pop cwtl cld into (bad) dec insb cltd popa daa and cli add fcoms xor lods mov (bad) cwtl ja sub cmc out jmp les jae jmp test sbb and mov test pop inc and sbb clc xlat loop mov sbb mov sbb sub in mov adc adc incl inc test in add and (bad) mov mov xchg repz bound sub pop daa mov pop nop lret xchg xlat sbb jecxz add js test jmp dec jmp push scas or sub hlt adc pop push bound (bad) (bad) or test jno insb mov in out mov mov xchg insl xor fnstcw pop mov movsl orl rcr xlat dec (bad) mov mov jmp adc adc insb (bad) pop mov pop sub jmp mov sbb add jg sti pop or mov out add icebp ffree popa adc jmp push addr16 jecxz mov outsl jb push loopne repnz orl aas nop sahf pop push sti test js sarb es adc lods sub aaa or mov jge out movsl mov negb fistl (bad) sarb mov xor jb ret sub push push mov mov in dec in mov call or push jnp xor (bad) fist mov cmpsl test pop fs sub push pop and mov rcrb adc movsb gs fcoms xchg push bswap out loop pusha fidivr mov push mov jae lahf pop pop mul and aas shr add jmp test xlat xchg lods sahf rdpmc add dec ds sarl aam xlat sahf or je ljmp nop (bad) repz xchg sbb add sbb xchg jno (bad) call (bad) inc test clc cmpsb out int3 insl int (bad) push add cmc or (bad) lock in popf and int sbb mov sbb jl pop push mov push cmp or inc push mov lret lods (bad) icebp mov jb pop loope cli pop xlat mov (bad) out cmp jg insl ljmp mov out jae (bad) int jmp int sahf test stos out test jle adc insb iret xchg adc (bad) adc in mov out xlat jle mov ret xor pushf mov push mov aas xchg mov ret mov into mov insb dec push and es mov pop fmull icebp cli es arpl xchg mov fwait inc popf cwtl or fild test aas push (bad) out jo and push int pop in repnz test rcrb or jl xchg loope mov and inc cmpsl xchg ds in in push ss dec jbe insb (bad) lret jmp sbb mov stos mov test (bad) andl jae fucomip push enter fdivs push bound (bad) sbb jne pop mov arpl hlt xor aas fcmovb cmp mov out (bad) in lock jmp in rolb mov cmp cmp sub push adc inc mov arpl iret xor jp add (bad) or ja mov jp xchg fistpll adc push imul xor dec test xor fwait (bad) or add xor mov jne pop stc arpl int and stos cmpsl fcoms out or xor std cs fisubl iret and xchg xchg cwtl leave sub dec sub mov movsl pop adc push xor push sahf inc insl in xchg mov pop les lcall aaa int3 hlt xchg enter sti jbe test insb mov es cmp inc lret popf and out mov sbb pop out jae cs imul xchg aad jns sub pop jb in and aad lahf dec fist aam dec in aaa push sti xchg int or imul push sbb mov (bad) int3 aam fmuls outsl mov cld cli (bad) cmc pop ret shrb popf (bad) arpl mov sbbl stc cltd stos push gs sti fldl shr push xchg inc (bad) outsl cmc mov imul jp lock loopne lcall fwait or int or or add (bad) ss aad (bad) ss and (bad) repz test pop (bad) in mulb xor in dec sub inc jae fcompl jl jb test push sarl cmc and lock fldenv push js fsts lret nop test mov xor sarl addr16 dec and sarb mov into pop and sbb mov incb imul jp jns lea mov das int or xchg scas clc cmpsb test xchg sub mov inc jl add mov inc xchg or fdivrs xor adc pusha mov cltd les mov cmpsl adc push jp fsubrs add sub ds jge dec dec icebp add ret cmp stos in add mov int dec int aaa jl mov mov mov jl jp sub or dec xchg jno xchg daa scas cld decl xchg dec gs adc fwait add sti adc lcall push cli dec dec (bad) or test je data16 mov add pop sti mov (bad) sti push cmp fsubs les fiadd pushl mov push lods out fildl cmp pop cmp xor xor add dec lea imul loop mov cmc stos mov dec jnp adc pop mov inc xor push sbb xor mov jo in jle push int3 aaa and (bad) xor cmpsl pop (bad) push and inc sti and pop mov pushf sub pop push mov add push xchg add mov (bad) mov sub js dec ret fstp sbb jmp (bad) mov sub add lahf daa xchg mov fcoml jle push pusha sbbl push gs repnz rcrb imul pop sbb clc adc xchg inc loopne xlat mov sbb ds addr16 inc jle scas sbb imul sub hlt add gs adc mov test lret or inc pop (bad) lret test daa and sub jmp xchg ja bound cli std adc sub xchg and mov jl push cltd loop push jno sbb adc sbb and or (bad) (bad) sahf (bad) mov mov je shl inc cmpsl iret (bad) call lods es xor pop jle outsb ss dec scas dec mov fcmovu sub fstpt jecxz add ljmp sbb out cli sbb mov (bad) ss mov (bad) and pop loope mov pop pop mov imul mov and js mov pop test inc mov push jo cmc pusha mov call inc imul loopne mov cmpsb or push call aas dec mov out and sub mov stos add xchg jge sbb and in (bad) push std mov push test flds clc or pop and sbb loopne fstpl add jne das inc xor mov push fistpll (bad) push rcrb xor int3 mov pop mov or fistl (bad) sti xchg cmp les movsl jg mov xchg lret incl inc jg mov fwait aad ret or cmp lret jb jns cmpsl arpl push add (bad) dec inc hlt mov arpl sub fcmovnu es jnp stos mov lret jne sahf (bad) lret data16 aas mov cmp jmp mov push hlt xor call movsb enter (bad) mov dec cmpsb cmc xchg jge jg jle fistp jbe cmp inc sbb jbe push sbb and jle aam xchg aad ss push sbb sbb mov mov sub and cs xchg push test adc cmp lods sahf in ret les push xor xchg int inc and xchg lret (bad) insb lret and lock std mov sahf xchg xchg pop bound inc shr (bad) call cmp inc sub mov push fwait hlt inc cmpsb mov lods pop sbbl ja mov mov sub pusha pop call jbe or dec add cmova test jae sbb cmp push test pop xor cmp push clc sub idivl jg ja xchg outsl fstl sbb mov fxtract or leave mov jno into sbb (bad) (bad) popa leave iret enter in aaa sahf addr16 pop aaa outsb add fisttp test shr or inc (bad) popf inc mov insl fisttp mov jae pop fcomp lret sbbl sbbl sub cmpsb cs stos fnstcw popf out and les pop fdivrs rorl das cli int3 imull cltd imul lret inc enter test fidivr pusha fneni(8087 repz push jp xchg sbb test adc pop iret or sbb xchg mov imul inc sub addb dec popf push push cltd pop or out push xor xchg push lods int3 movsb jb xchg scas pushl (bad) call stc and aas (bad) jbe cmp sbb into loopne inc pop inc or in sub inc inc mov mov hlt fcomps inc (bad) sbb bound xor movsl nop in push sub mov and pop adc loope (bad) out js sbb cmp fimull xor inc stos nop (bad) cs pop mov jns xchg lahf int3 add dec call push xchg vmovddup stos or imul scas js ficomp xor jmp aaa out mov push aam pop mov orl aam outsb add pop (bad) mov and add jnp push data16 loopne mov xchg (bad) rcll dec (bad) (bad) iret out mov mov mov ljmp cmp movsb push fistpll pop dec test pop xchg aad lahf pop adc insb jno std mov std aad loop push inc pop pop lahf outsb add stos xchg test and jb push sbb xor je (bad) xchg jp dec inc test mov js ret aas int3 mov xor repz sbb call scas imul jge inc nop les lock cld out scas shrl lcall insb std outsb mov in out aas add and dec stc cmp in pop sbbb adc fwait or popf adc (bad) xchg fstl aaa xor add cmp jne mov xchg adcl seto xor adc stos cmpsb mov adc add test mov rorb pop ret sti les pop je jmp or adc adc les divb pusha jecxz dec dec xor popf (bad) sub std fisttpl add dec out repz call pop lods fbstp xor jg pop repz jo sbbl add and push jg ss rcl sub mov adc xor inc lea js cmp sbb inc sbb dec dec and adc jp dec in jmp add sbb cmp (bad) pushl dec mov lahf sub mov hlt fwait jp push rcrb mov clc inc movsb repnz fnstcw daa push in pop mov repnz movsl outsl fxch jmp stos and push mov mov clc imul nop jecxz push sub cmpsb mov mov mov cmpl lcall loope,pt cmp addr16 mov jnp repnz dec inc pop (bad) sub mov cmp mov insb push push push icebp addr16 imul icebp in idiv inc xchg add mov fstps xchg add mov or divb jb jge iret push test mov inc cmp inc xor xchg adc push lock mov (bad) std notl push daa movsl sub push out xorps xchg arpl or mov mov je push rep mov xor (bad) pop in sbb movsl std popa mulb dec sbb lret or xchg adc push sahf add cmp pop dec paddb xchg outsl xor push sbb jb lahf in mov aad ja jo bound sub icebp (bad) fninit xchg xchg mov add lahf xchg outsl movb (bad) aaa (bad) stc mov add xchg jge adc inc rorl repnz xlat push mov jg push cmp inc (bad) jecxz and mov mov jns idivb mov inc nop insl incb or dec xchg in cmp dec cli test popa fadds jmp fidiv xchg mov mov push jb test jbe sub pop jg ja (bad) adc jb sbb push lret mov pop sahf mov push dec lahf push outsb push xor adc je in and jbe mov sarl xor or stos stos popf xchg sbbl mov fildl xor xor mov jmp rolb shlb aas cmc imul (bad) sub sbb xchg dec gs or mov mov imul mulb (bad) popf mov test pusha jbe adc mov scas pop nop leave sbb fist mull mov out sbb (bad) inc push mov cld mov jmp dec stc test sbb faddl cmp loopne inc das sbb in xchg mov fdivrl sbb inc dec lods xchg shr ja xchg stos mov movsl mov leave scas jno cli sbb jmp test es xchg scas mov cmp out or mov cmp test imul std xor stos (bad) ror (bad) mov mov sbb lret pop bnd adc jno lods sahf ds mov pusha cmp sub xchg jnp leave fdivrl andl (bad) (bad) jl fcmovnbe cmp std (bad) test or sbb pop cmp jge jmp jbe jge ds addr16 push ret incb divps xchg aaa pop cmp jmp (bad) (bad) inc xor adc adc sub dec push mov cwtl aam or sbb in pop mov push js jno fwait xor repnz xor mov mov and xchg jmp ret and movnti adcl dec push sbb pop icebp js and sub icebp xor mov sbb push and (bad) outsb sub cltd or roll ficompl add push lods and stos mov cmpsl dec lock imul adc mov gs sub dec mov jbe test inc sbb xchg jbe rolb mov jge into add and mov mov sub mov pop insl (bad) mov bound jecxz js std mov mov mov (bad) and repnz scas pop cltd lret and mov push add iret dec das sub popf loopne mov pop xor push pushf jno stc fdivp xchg fbstp aam jmp xorl xlat mov shll aas insb mov repnz (bad) dec fs inc cmp pop cmp cwtl mov aas sub inc mov (bad) dec stos sbb push jmp in int inc sub xor out cmc addr16 mov sub add (bad) mov out cwtl flds adc jmp mov mov or insb mov int3 push es mov (bad) mov mov in shll lds and add (bad) std test push cmc lds and lret dec roll sbb push mov mov xor ret pop sbb jns mov add fs (bad) adc sbb mov stos repz mov adc popa jl push loope mov xor fcmovbe cmc repnz or loop xchg xor pop pop xor lods add cmp aas jmp mov fild mov inc add fs mov xchg jne jg call push xchg sub cld and mov xchg cmpsb (bad) sub les jge mov (bad) jg cmovs fcmovnbe add add addr16 jb adc sarl sbb mov addr16 push jo jae cmp scas jg add push pop test adc push add arpl imul data16 dec or dec pop mov push inc mov cli cmpsl mov nop (bad) lods adc push loope sti cmove xchg dec pop pushl push xchg rcll cmc jne pop cmp mov push faddl cmpsl out jno jle ficoml int3 push enter (bad) es aam insl sbb push xor loop leave xor fst inc dec and and mov inc ret and mov xor aaa lods push pop (bad) push inc int movsb cmp popf cli addl (bad) scas (bad) scas (bad) xchg int3 out (bad) push lods ss sub jle jmp stc inc (bad) mov mov adc add test inc fisubrl xchg push add mov fsubrl inc mov sub sub inc test xchg xchg push aas lods jnp ret iret lds add jle inc jne push push stos loopne ret nop int scas adcb outsl cltd pop in sbb int3 add pop bound (bad) lock iret add mov mov sbb mov aas ljmp sbb mov into test fistp add mov adc pop into aam pop mull mov das je mov in insl sbb jp int jnp xor add xchg inc and xor (bad) mov loop (bad) in (bad) push jno loopne or fcoms lock mov mov jmp jg mov cmp mov inc push pop or push adc sub mov stc rclb xchg push cltd pop and repnz push jne ret jae ja add imul lock aam cmpsb inc mov adc adc adc adc and pop jbe cli das xchg ret shlb adc sub lods testb hlt sub push pop ret mov lret negl mov jo in sub subb cmp and mov fstpt sub lock add sarb sub adc and je imul and fwait add (bad) mov xor jge push lahf push repnz xchg repz test in xchg or or sub add push lea or sbb sub jmp test mov ret movsb sub jnp out (bad) frstor sbb frstor cltd out jge scas and and lock xchg ret xchg and sbb mov jae loop push (bad) pop sbb adc xchg and leave fnstenv mov push adc andl hlt mov fistp fidivrl enter and fcomi dec inc sub cld stos in scas mov (bad) lret fwait xchg ds xchg inc outsb xchg bswap add push sub aaa add lahf xchg mov mov mov pop call sub addr16 aam btc loopne mov xchg cmpsl push pop and dec arpl cwtl dec mov or sbb add (bad) popa movsl popl jb push push mov enter imul scas cwtl adc (bad) das ret jns mov cmp adc test push test rorl xor inc js mov inc cld addl xor rclb mov sarl lret lret jae sbbl lahf pop jne std jne insl jmp fs ss cmp in xchg movsl (bad) push and ret inc sub lds xchg add ret std mov rcrb fsubrs jo pop sub mov ja dec movsl sbb mov xchg dec je mov mov fdivrp jp mov std rclb mov dec sarb decb mov adc xchg cmp (bad) xor jp mov call insl xlat psrlw arpl mov ret add gs dec clc ds mov pop xchg adc fs out mov pop (bad) aam pop loope mov pop xor adc dec ret incl lods inc xor mov es test hlt cmp fidivr inc (bad) push (bad) std or add (bad) mov sub lahf push mov and xchg lahf cmp pop (bad) cli iretw repz jno mov repz test in mov adc jg (bad) int3 or outsl cmp and in fstps cld out push xchg add cmp aaa je dec mov add mov ror cmp mov mov push inc adc dec dec mov sub xor clc repnz enter sbb jmp inc enter outsl imul es jae lahf stos mov push stos test and out int3 lret and add cld push pop or inc lods xchg test mov push fcmovbe add dec cs pop fcoml jb push pop faddl jns fist mov and loopne push pop popf lock test lods or int3 into scas dec push cmp jnp fnstenv jmp (bad) repz pop mov xor rcpps xor adc adc xor inc lahf or adc xor and (bad) dec mov inc aad mov mov pop imul lock dec xchg cli pop xchg cbtw dec arpl (bad) ja fadd push adc xor fstp jne inc and loopne and pop sbb lahf xor std daa sbb push pop fisttpl ret fcoms (bad) cmc decb mov add inc sbb mov stos push cmp mov les jne xor shlb fisubr jp cmc lds pop mov or orl rcrl shrb pop or push pop aam adc loop xchg dec mov mov and sub sbb jg popa repz test aas xor fldcw sbb pop push iret mov sbb sub rorb sbb jae cs push sub js or mov arpl fistl mov lahf dec sbb and sub pop sub loop pop sbb (bad) or movsb inc fdivl mov out repnz fnsave push call mov mov cmpsb xchg adc xor mov dec push xchg sub pusha push sbb or dec in sbb lods cld aas das jl xchg ret adc mov mov jo arpl gs insl ret pop adc push mov in push int cmpsb sbb pop (bad) hlt lret pop sarl xchg and fldt jae mov dec ja repnz inc mov popa adc adc lret push mov jno test rcr pop jo and add mov scas std dec dec mov (bad) push jmp ds mull movsb xchg test xchg and test mov cmp push ss fidivl bound nop popf push adc jp hlt aad adc pop or sub nop mov pop sbb fdivs pop sbbl hlt sbb mov mov jne mov test (bad) jno (bad) mov imul cmc inc sub fwait cltd cmp (bad) mov cmpsl jns das into cmc xor fstps cmp ret lret pop push xchg add adc push jg mov mov push aad or cmp cmp in sarl dec lret sub out cld push xor outsl (bad) pop and pop sub adcl push gs mov mov enter pop jbe mov push je scas insb mov ret sub cmc jl arpl jnp mov cwtl xchg fimull imul jbe dec adc adc xchg das dec subl into add (bad) test mov pop and cmp pop dec xchg xor push (bad) mov adc aas xor iret test imul scas adc loope pop jb mov add stos (bad) sbb mov push sub das mov test (bad) sub mov push jno or repnz pop push mov lea jge sbb pop sbb das inc pop out mov mov dec jnp xlat leave xchg out (bad) mov ficomp (bad) int3 sbb popf test pusha (bad) ja arpl sub mov sub inc leave push push test jge sahf out or fdivs movsb test adc cmp (bad) push mov inc xchg enter jmp scas out xor push lahf pop jmp imul dec sub insl xchg mov push jae in sahf push sub fwait push xchg xor pushf xor icebp sbb xchg ficomp push fidivr (bad) mov aas push mov mov fwait mov movl les inc inc jnp add outsb fs dec ret adc mov out nop (bad) in xor jecxz outsl jno ljmp div ret jae cwtl mov add (bad) (bad) cmp insb jno jae adcl jmp inc push stos dec xchg sbb cmp fcomps rclb pop ret mov adc mov and je lcall stos xor ja nop xlat add popl adc cmp js lahf in js xlat jo xor subl adc outsb shr test jle push jp fsubs out (bad) push loopne adc add lcall pop iret xabort sub int call and daa inc add pop outsb imul test inc lods ret mov inc sub (bad) das dec (bad) lds inc std in (bad) add and imul cltd out pop pop inc push aaa incl xor cmp sbb add xchg lods js dec cmp int mov pusha jns sub jge call inc inc movsb or nop cmp jno jge (bad) xchg sbb out adc stos cmp and dec sub cmp pop cmp cmp xor mov cli adc int jns or xor std cmp in jo mov pop pop sbb (bad) ljmp inc pop insl adc mov mov or push sbb mov ja enter ficompl lcall xchg mov push scas test mov jnp fwait jmp inc repnz pushf jnp lret push popa inc adc mov repz and rcrl and dec ljmp in inc pop xchg mov xchg mov aad mov xor sbb arpl cmp sbb js sub or orl std or repnz dec aaa bound mov xchg pop jno (bad) stc mov mov or pop dec repz pop lods lock sbb inc mov sub mov add sub fnstsw test out push into jnp repz mov repz leave stos pop push cs mov jge dec sahf mov (bad) mov jns lds xor arpl push popa push cwtl jb mov fdivrs test imul mov inc idivl cs lods lcall lahf sub es or jecxz mov sub inc sbb adc test adc cmpsl bound xchg insb bound ja sub loope je nopl inc arpl pop fildll and out enter mov cmp mov push loope and sub (bad) nop dec jno ret cmp pop cs mov mov outsl ds mov push xor sub or adc stos aaa ljmp rcl jno sbb ss sti xchg jl push js push xchg inc mov clc fimul push cmc (bad) in scas loopne inc and pushf cmp ljmp pop mov rcrb dec pop (bad) jae arpl lret rorb mov in dec insb push fbld cmp dec (bad) rcl out push scas jge adc pop test bound mov jno xor insb fs xchg lgs movsb inc mov adc sub adc or jns clc pop faddl xchg cmc dec push cld push (bad) arpl jp aam cmp mov pop dec outsb fidiv pop cwtl adc jno adc push int mov xor repz dec and push outsl dec pop sub cmp xchg ror incl pusha xchg dec insl (bad) clc dec (bad) xchg movsb inc jg pop mov andl jae or jno loope dec in frstor push orb nop mov pushf fsubl movsb nop pusha or (bad) hlt mov fldenv repnz mov mov mov out push ror xchg inc mov repnz sbb aaa mov pop jg sti push loopne icebp sub gs jl inc ja mov gs xor popl or (bad) shrb or dec and and push lret iret clc (bad) into pop test dec pop fidiv mov bound clc ret out mov pop test lock icebp xor add insl test hlt pop dec adc (bad) sti or lahf into out push shrl push out push nop cmp std mov in gs enter movswl lcall mov lds repz and xchg imul orl gs imul pop dec clc jecxz xchg cmpsl pop mov jnp icebp xlat push sbb inc xchg jae inc and iret imul pop loop daa dec or lahf jbe push mov dec add add ret xchg insb sbb or add adc in bound mov je mov out or les in out in adc push mov xor or push data16 stos (bad) jns aad aaa or stos pop es and repz into enter adc lret imull pop adc or lret in sub cltd je (bad) dec cmp movsb js mov (bad) jne rorl or mov das fisttpl pop push in ret outsb insb dec cltd push out mov jae rorb (bad) mov fdivp (bad) (bad) and push sbb pop sub lods sarb jp pop mov in mov (bad) in cmp xorb les loopne inc (bad) (bad) into (bad) insb cmp lcall clc ret aam neg ret test xchg subl dec cmp ss pop pop inc pop xchg and aam cmpsl sar jne and pusha xchg mov jl jae push pop loopne cmp fwait repnz xchg cs pusha mov jge cmpl lret scas mov dec sysret fcoml lods subl sbb sbb cmp cld es (bad) divl xchg jb out pushf push rcll pop movsl sub ret xchg test out mov xlat lahf add lea and js (bad) fmull gs pop xor and jne xchg mull fwait mov leave add or and jnp insl idiv mov pop les pop lock (bad) push pop in mov sbb (bad) push push jnp inc insl test sub adc aas push cmpsb aad cmp or add nop (bad) lret int3 mov sub mov cmp or fist sub ret cmp mov popa mov and push add adc out jne dec push push sub rcr adc lea jb mov pop imul (bad) sbb ja int3 sbb jmp fisttp sbb (bad) mov sarb mov fs ja pop bound pop movsb lahf xor mov push into sbb mov pop ds cmpsl mov sub add adc (bad) mov (bad) fwait lea cmp xor mov xorl pop shll mov pop lret (bad) adc in pop outsb in xor sub cltd dec mov pusha lea cmp (bad) adc xchg sub cltd mov stos pop icebp mov xor test cmpsb gs (bad) push (bad) repz mov clc aam pusha cmp lods loopne push iret cmpsl rcrb lds cmp or into sub xchg cmp or push mov clc arpl mov rolb test leave out mov or xchg ss dec dec jne pusha popa inc sarb sub rorl std pop int3 mov addr16 push cmp cmp inc push mov jp aad daa outsl repnz in gs mov outsl insb int and mov addr16 mov aas shrl arpl jns sub int sti lcall inc mov stc inc jl imulb loopne mov aad push jns mov inc jo xor (bad) in push lock dec mov je add test popf sub sbb push push xchg lcall test cli and cmp sbb dec dec jg testl dec imul (bad) repz pop mov mov mov add stos icebp idivb out adc mov roll into sub dec pop mov pop fimull xchg movsb fs nop pop jns adc js and adc cld ja pop and imul push xchg and dec push mov add cs ror test pusha push and gs push push out push dec or inc mov (bad) pop push mov push test test insb not dec scas lea jnp xchg mov bound pusha rcll sarl insl lea or add gs or pop pop (bad) mov pop add or lahf inc pushf push jp fbstp xchg les dec lcall sahf mov sbb cmp popa lret xchg xor mov (bad) dec repnz fnstenv fadds jl push xor add mov dec decb add pop scas mov pop in (bad) repz xor jae aaa dec inc pop adc int3 insb repz xchg fwait pop dec dec jb sub inc movsl scas mov and cs mov in in and add test xor dec jo inc orb pop add and lea jecxz xor dec cmp ja mov mov bound xchg in mov cmpsl cmp sti ja (bad) popa add adc sub lea dec sub sbb sbb push mov sbb mov dec add xor std xchg inc mov mov mov ret pop sub adc mov jno mov sahf movsl jae mov popl subl mov cmp cmpsl jne rcll pop test fdivrs data16 mov push xchg cltd fnop cld aas pop (bad) rol mov xor lret pop shrb ret pusha ror mov in sti dec inc or lds sti mov test or pusha and in insl mov cld mov push xchg cmpsb aad sub mov data16 les mov aas testb test clc adc lret mov ret push loope aas pop push cmc mov lds call jp imul and lret aas mov shlb jns jge pop mov loopne pop sti or and addb dec add mov daa int3 mov (bad) sub xor enter dec pushf das or jl lcall or es ret imul popf cmpsl ss out es iret divb push jns into loopne lods xor and and aad pop sub mov in sbb ja ljmp dec aad lock lret test popf aas sti cmc popf pop mov inc sub pushf cmp (bad) aam mov les and movsb dec inc inc sbb ftst int3 inc ja jl loopne cmpsl in (bad) xor loopne dec sbb dec mov pop mov pop je movsl sub xrelease mov cwtl mov add fnsave mov push outsl jo loope cs inc sub daa clc mov (bad) clc inc or inc adc xchg or nop jmp (bad) test movsb mov cld sti sub or cmc mov jge fcoml push dec push cvttps2pi stos cmpsb nop jg scas and mov movsl dec add adc movsl ljmp movsl incb out ret ljmp enter (bad) pop cli (bad) rcll fwait jp jne ss mov inc jg (bad) mov in mov pop lret inc jmp (bad) push xchg fs xor xchg sub (bad) testb add xchg push repnz lods in pop mov dec out xor out movsb clc lret daa ja pop sub mov ss in mov fidivrl adc das mov (bad) push fldl jbe or jb lods repnz xchg pop gs inc dec xchg sbb icebp icebp test je movsl scas push loope jae and jno mov dec cmc test subl iret mov add mov (bad) jmp jns cmp dec add outsb cpuid jo imul xchg jecxz adc cmpsb mov sub ret out cmc push cld pusha mov jnp dec lcall adc in or and xor xchg mov call outsl mov les adc cmp test leave sti repnz js add cmp lea mov lret inc mov je cmp dec aad mov leave movsb and dec (bad) call fisttpll repz jb repnz fisttpl jb pop cld inc mov or add adc sbb pop add mov (bad) sbb cmpsb dec push or inc in in mov enter loop lret lret and bound cmpsl and das push in push mov and (bad) out cltd add jmp jecxz inc xchg lret xor movsb sarl mov (bad) je pop in pop push and push cmpsl push mov in rcrb sub jecxz dec pop jo shrl push dec inc mov test faddl lds xor das mov cmp mov add idivl (bad) aaa xlat outsb sub outsb mov sarl psubq dec (bad) xor loopne imul jb cmpl jge cmp xlat cmp adcb xchg outsl arpl das mov jp sub push out idivl jo cs cmp and testb insl fldt outsl push mov cmpsl loope addr16 mov cmp xor sbb xchg sub pop fnsave xchg out push xor add es cmp and mov or cmpsl std in aas jl shlb fnsave jle xor cmp int3 dec push inc mov xor or mov dec subl gs sub stc jl mov inc xchg outsb xchg xchg sahf inc mov sahf cmp (bad) pop push cld cmp adc push jnp mov les lods sub mov insb jmp xchg mov sub icebp xor add sbb repnz and (bad) (bad) add scas sbb sahf pusha jb inc push cmp xchg or cmp jns mov or adc cs cmp add xor insl mov adc pop mov andl adc cmpsl leave mov xor aam movb int xchg jl imul ss pop js repz mov outsl cmp mov and jecxz or push out ss add xor mov mov fist fist (bad) cmp adc mov roll cli pop ss inc fcomps mov inc pushf fildl scas popa adc cmpsb push push or pusha mov repz pop ret (bad) jno mov out jns inc dec xchg dec inc cli cli dec jb xchg xchg and stos push pop test dec push inc xlat stc jp decl je sbb rorb sub dec mov pushf fnsave and fs inc xchg scas (bad) add jae js and or bound adc inc js xchg repz in test cmc jg push mov lods pop lahf negl jecxz mov mov jmp or dec dec int3 mov and xor bound sub push sbb aam rcrb mov stos ficom ds (bad) sbb push aam movsl sbb cmp dec imul movsl jno inc adc aas pop das addr16 add pop push inc mov into andps nop and int add mov mov mov sbb jne mov fbld fldt lods xchg fbld add fistl pop aam ret divb cli mov in dec cmc pushw xchg sub sti out sub movsb xchg xchg adc iret xor add sahf sub jecxz ficom push or and sub sbb xchg test mov repnz sbbl sbb int lea icebp movsl (bad) push xlat fwait pushf add dec repz hlt fsts cli or hlt int jno out movsl push pusha add movsb aam call mov pushf call ret fs ret xchg in xchg sahf aaa (bad) dec test test xchg xor and (bad) inc loop lea mov ss mov lahf fs cltd loopne jge aas mov jle xor sbb mov and push pop inc daa jle sahf sub inc or xchg xlat jnp mov adc popf sarl pop addr16 in (bad) jne jo xor mov mov adc js cmp pop fnstenv mov shlb ret xchg sbb in xchg (bad) dec mov mov sbb xchg mov into mov or adc jmp pop sub test adc insl stc daa xchg fimull aaa mov jno jl jnp and jmp cmc shlb faddl adc push aad aam xor inc push into es mov int3 cmpl stos inc (bad) repz xchg (bad) mov xchg add sbb (bad) jp aam repz scas cmp lea in es stc mov mov xor daa cmp icebp (bad) rcll lcall adc add mov or in push es int3 pop sbb inc mov dec or xlat mov into xor xchg jl jle adc ds xchg out inc dec mov pop in insl pop jmp (bad) (bad) mov or (bad) sti jnp cmc adc pop pop in xchg call (bad) mov mov xchg lods cli cwtl xchg lds out jbe in dec pop push out inc in mov cmpsl jo dec outsl divl scas outsb cld insl pop scas hlt mov in inc xchg push iret dec gs pop xchg test mov fs xor sbb add nop lcall roll insb clc fildl ret or adc jae mov lahf aad xor stos inc sahf mov jae add lret cmp insb mov into outsb xor pop mov enter xchg add lret gs pavgw xabort insl mov inc adc rcl adc inc movsb pusha push movl push cmc add ja hlt cmp cmpsl je hlt inc mov xor insl and fidivl sahf pop inc pop dec xor pop xor imul cli mov sbb push xor es xchg jl out inc and popf sbb xor test in xchg dec outsb in popa sbb cld push mov and std or mov dec xor into cmp in pop stos add xchg scas std jb cltd xchg pushf jne out push out push adc dec jg mov neg mov sub pushf mov sbb cwtl ljmp ret xor leave jbe lds cmpsl xor je fwait cmp dec (bad) icebp dec test mov fmuls push cmp dec in xor roll mov pop xchg popa test lea lock out movsb adcl (bad) (bad) fcmovnbe inc and sbb mov inc pop xor mov cmp dec (bad) movsl enter (bad) pop mov popf daa loopne xchg push cmp add adc outsl inc jbe sub stos mov xchg (bad) push jno adc sbb (bad) in mov je jmp out jns push jno push mov xchg jo mov data16 mov xchg pop pop lahf (bad) push scas push adc sbb push loope repz sub out mov je pop ret repnz stos insl out sub aas lahf pop repz mov mov rcll lods aam or jno push aam in mov mov sbb and sbb sub pop xor lods outsb lock push pop les je gs push addr16 inc cld loop insb sbb repnz (bad) pop jno xchg jne mov mov cld jbe out shll xchg or and fadds iret loope pop dec or sub mov dec jmp clc call pop addr16 lea mov (bad) jp out xor sub pop hlt stc push xor cmp jecxz and mov in iret bound adc insl xchg daa mov movsb std lret lret enter inc jmp mov jo lret jl cltd cli ret lods sti daa cmpsb cli xlat popf dec jmp cmc pop mov pop jg pop gs outsl cltd cli mov pop jne sub in xor iret les lcall das gs and jo lcall scas insl into sub stos (bad) add sub mov xchg lret jnp sarl mov jb outsl popf and sbb clc or dec daa lret in cmp pop jbe sbb lahf test dec mov cs (bad) cmp jp aaa es and add mov fisubr adc mov xchg (bad) mulb add mov les outsl jnp popf decb mov ds inc push mov icebp ljmp outsl scas xchg xor mov cli dec jbe pushf pop jge imul dec mov stos (bad) ljmp and inc ss jns (bad) jne aaa sub mov mov adc in cmp jnp out sbb pop or insl leave and cli (bad) (bad) mov cmp mov bound adc sub mov pusha das scas insl xchg int notb enter adc cs mov stos fistpl movsb mov (bad) xchg loop emms mov push out ja xorl xor fstps adc push popa test in jbe push fs add sbb fnstsw push push sbb ja sbb sub sti out and loop,pn xchg adc mov test sub adc cli dec sbb jl leave and call sahf dec fsubp (bad) ja xchg mov int (bad) mov fmuls inc xlat or and or movsb les ret lret cmp pop ljmp push pop rolb adc jmp jmp shlb cmp ds jo cmc out (bad) sahf mov hlt lahf insb mov test xor aam pop cmp outsb in adc adc jle outsl imul bound jmp xchg push cmpsb sbb gs mov cmc adc testb dec cwtl bound fsubrs push push push jge in dec push imul aas es fcom xchg cmp pop sub andl lret fdivs lds in mov pushf xchg call imul out mov mov lods lods jp cltd dec fidivr decl rcll or and mov mov repnz or adc iret push adc fldcw adc mov les (bad) mov inc sub cmp mov pop dec xchg sbb cwtl push popa loopne pushf ljmp sbb subb dec arpl sbb (bad) ljmp ss sti push cltd sbb dec out and and pop pop aaa pop sub cwtl dec jle subps cmp enter lcall mov add sbb cmp insl xchg jno iret or scas or xchg arpl xor jg adc xor cld out xor je data16 lcall addr16 mov and jno ja flds arpl sub ja bound loope repz cs dec (bad) mov mov xorb adc cmp jne ret sahf sbb loop incb jbe stc repz xchg cmp push sbb and scas jb leave add pusha insl rclb sub dec push pop mov (bad) fsts push adc rcrl decl into lahf sbb push pop cmp sbb cwtl mov xor out add scas mov roll std mov call mov (bad) insb jle arpl mov mov mov and add pop ficoml aam pushf mov jl (bad) push out mov xor adc inc sbb outsb sti xor (bad) mov jno roll repz push jle mov mov mov cmp xchg mov insl cwtl data16 sti int add incl imul (bad) cmp inc jl sub mov jle lcall scas mov add (bad) jl jmp lret and imulb js fnstsw lahf dec pop fldt jb sub icebp dec fstps leave fist sbb sub pop pop mov mov or xchg xchg ret and test push cmp jbe ljmp mov nop xchg cli and repz fstps add mov mov mov xor jnp insb data16 es into stc jno lea cmp addr16 sbb mov inc add pop pop in push xchg inc push mov icebp adc loopne js cmovo mov push loopne xlat int3 loop push std punpcklwd daa cmpsl mov xchg jo sub js inc sub sbb stos out addl push ret int3 xchg xchg push call pop mov clc add sbb fucom adc push imul mov push outsb sbb inc (bad) je push xorb lock inc lret hlt adc sti push xor std and jg or xor lahf sub pop and adc cltd jo sti dec add gs adcl cmp xor iret jbe dec sub push aaa leave pop mov in data16 mov test add or mov add in stos mov jbe pop jmp les rorl adc xor push test rorb cltd ds mov xorb jbe xchg fstl jb movsb mov mov rorb jle jge adc clc cmp stos cli pop js,pn sbb hlt scas sahf stos push js sub pop in sub lea movsl outsb es arpl mov push insb rcll fcomps push das mov ficom add pop xchg (bad) lods inc out in ss sbb fist mov jo (bad) jl lock push imulb popa gs xchg mov leave pop push push xchg sbb xor imul in daa lds scas mov push xlat sbb mov mov push sti xchg mov sbb adc pop mov shrl jl xor push mov cmp xor (bad) pusha or hlt hlt inc mov sahf jo mov jne pop (bad) lret xchg daa bound out das and mov push mov jno dec add mov mov push incb (bad) push xchg xchg daa imul jge mov ret cmp stos in cwtl xchg mov outsl insl sbb dec cs lcall mov sbb push test or and (bad) cli clc pop xchg push and scas fwait push dec mov mov pop les cwtl inc gs push les pop popf sub pop movsl (bad) sub stos cmp xchg jb lret rcl ljmp les jb loope mov and dec push in repnz ss add enter mov mov out cmp lds xorb adc inc mov (bad) (bad) lret sbb mov out jecxz icebp add fbld hlt push das (bad) loop pop daa sub adc jge mov mov popf push xor daa loope inc lods into sub mov ret jmp jmp mov pop push lea scas cmpsl ss stc loop (bad) cmp jnp je icebp lods negl daa cmp dec enter scas into jl jno pop or gs fcmovnu (bad) sbb sti jbe sbb cs rorl pusha jg insb xchg push je xor push jmp cmp out pushf cs pop and lcall mov rcrb enter add cmp enter shlb fs dec std sahf inc sbb mov push jae jecxz pop dec pusha dec icebp fisttpll pop cmc mov loop mov xor (bad) lods leave (bad) imull insl jg repnz int3 in mov mov imulb jae push push mov dec mov sbb clc shrb aad nop fs mov sahf mov add xchg mov sbb add rclb jp enter push sub cmc repz fmull mov pop nop aam rcll ja ror (bad) pop rolb dec sarl stc pushf mov mov dec xcrypt-ofb cmpsl out add and add inc in sahf sar cmpsb test lea push mov jae sub mov xchg addb das sbb cmp (bad) jno mov dec mov fmuls ss add or xchg movsb lret dec adc cwtl out pop test dec je in or pop ror jno cmpsb mov pop pushf jmp das dec cwtl xchg into ret sbb cmpsb jmp hlt dec pop cld sbb push sbb xchg xor (bad) mov (bad) xor aam (bad) sub movsb inc pushf inc mov ret xchg lahf xchg hlt stc frstor decb dec call test xchg fldt dec cmovl rcl nop or xchg xchg les pushf nop pop (bad) and into shrl add inc mov bnd dec repnz and dec (bad) movl mov aas mov nop ret fistl add inc and lds add fsubrl aam adc mov lods or push (bad) push dec sbb lret xchg cwtl sbb cmp cmpsl out xchg jmp (bad) cs stos mov xor cmp jno jo mov sbb or sbb pop sbb (bad) push or add xchg (bad) std pop dec mov (bad) dec test xchg movsl xchg pop mov fidiv mov or xor jmp jp sbb dec mov cmp inc sahf and cwtl call popa (bad) cmpsl mov sbb cltd xlat xchg and movb xchg sti fnstenv (bad) sub add adcb mov gs (bad) mov inc repnz fsubs mov in dec xchg dec fucomip cmp jmp (bad) loopne scas sub insl mov test cmp fdivs xchg dec in dec or jnp jl pop into lds fwait dec imul stos jp and imul js outsb and add xchg es mov out out and mov sbb cmp xor (bad) cmp sub cmp cmp fdivrs mov scas xchg inc out shl test cli mov mov pop rcrl ficomp imul jne out stos arpl arpl adc (bad) out scas out xchg adc add loop shrl rcrb (bad) into stc mov pop xor ja stos inc das enter (bad) fiaddl add outsb add sub add or dec add add lahf push or insb sub dec popa (bad) subb push and stos loope in aaa and (bad) fcom and iret xchg xor (bad) mov int xchg and jmp js and call xchg mov lea push les mov sub mov rcrl xorl inc fisttpll hlt roll fwait or mov mov mov jle cmp mov outsl sub hlt aaa sarb in adc lret das mov lock lods insb sbb ja nop enter ja mov add mov aaa in lock out icebp or mov test and andb jge sbbb test mov ret jnp mov and dec fstpt push mov scas je (bad) fidiv pop stc pop cmp mov mov popf subb mov cmp adc inc jmp xor pop push adc (bad) jbe aaa and xchg shr pop stc call add js or sti adc jle int lret pusha xor jg cli and sti icebp inc fcomp xlat dec xor dec arpl lods mov and cmp (bad) adc ret cmp adc adc sub mov lcall pop inc gs add push push out out aam xchg sbb mov std in adc rcr adc dec xchg pop xchg inc mov andb dec hlt jbe dec pop loop das test sub cmpsl mov pop inc das inc incb scas inc push jmp js movsb fildll lods mov out stc push cmp xchg xor rcll lods mov in test or jnp xor aaa (bad) cld mov hlt int add sub (bad) fcoms stos adc test ja inc jne lret pop clc fst movsb movsb lea xor mov dec dec mov xchg fisttpll jnp or jb int3 cld add insl sbb (bad) add cwtl sub (bad) outsl and cmp nop pushf sub jp sub lock outsb mov jb xchg xor cmp call lods clc xchg mov gs inc jl pslld leave insb and decl dec scas sti jnp fpatan jl inc adc pop int lahf insb andl push mov inc and jo test dec dec jne outsb pop loopne ret cmp push xchg rcll mov aaa fs pushf dec ds mov cmp cwtl pop push mov loop pop mov pop test or pop sar xchg (bad) push cli or sub test mov cmpsb adc mov push (bad) jmp mov pop out pop sti mov rolb (bad) enter mov xchg ret cld xchg gs jno or mov push jge xor clc insl addb addl movsb adc scas mov loope sbb insb popf cs cmp bound loope ljmp jnp sub push rol cmp addr16 out iret stc or daa lahf fcmovne mov daa stc jge jle mov stc or cmp or cld jg adc pop fnstcw xadd mov push stos push add call repnz push jne fucomp cmp xor dec sub push (bad) or dec adc (bad) mov push data16 mov xor xchg sbb pop sbbl mov push ret jle adc cmpsl push aad insb add cltd dec push gs push mov pop dec pop and xchg push pop stos dec jbe add add inc xchg inc dec nop adc sar aad add inc pop jmp pop jle inc or mov or out fisubl cmp ds mov push movsl loope mov or and ja sbb mov loope sub roll out mov jne and sub push push aam push out stos lcall aad sbb push ljmp stos inc mov dec (bad) cmp ficom add xor loop loop lods or jno iret hlt sahf (bad) mov xlat jnp sbb and jp cli and (bad) pop adc je cmp das stc in sti and test int pop xchg scas out test mov js fsubrl pop cmpsb pop ret (bad) out mov (bad) add into fwait inc ljmp adc mov xlat movsb (bad) ja pop test (bad) lahf daa cwtl mov jno add push mov mov and addr16 or data16 cld mov mov dec add xchg stos mov xor add inc inc stos push aas cmp dec lods dec mov fs and int3 add ja xchg cmc jle push pop ret ss (bad) add jp lds add ss cmp mov push movsb clc push shll daa mov adc xchg stos mov jnp pop xchg test pusha dec or je cmc js sahf sub rolb sbb das es xchg (bad) jno sub leave pop jbe cmpsb cs inc gs push ja sub lods pop mov add shll (bad) enter orb mov lods or call pop mov lods jnp pop sahf push in pop ret nop inc fidiv fsubrl mov cmp or pusha call stos inc and imul movsb popa js pop xor push jne out fldt fs mov mov loopne loope pushf lea (bad) and jmp sbbl les sahf (bad) iret out mov (bad) mov enter xor pop jmp xor dec mov imul mov xor pop mov scas jbe imul cmp dec mov or inc shlb shll mov loop mov xchg jecxz arpl xchg stos cltd dec rcll out and insb mov add inc pushf push repz inc sbb inc add pop push adc (bad) xchg mov xor sub mov push xor sbb and sbb scas lahf shrb inc (bad) ds pop pop mull ds enter sbb ss les movsb add loope scas fistl pop sub subl jae xchg dec push xor adc jnp mov jl pop cwtl into cmpsb mov mov sbb xchg pop sub or inc cmpsl sbbl enter sbb lret int cmp inc mov ljmp rcr dec int or jae mov mov or ret rorb jb pop fwait lret and outsb loope sbb inc fwait adc jns shl mov fistl cs add inc add into cmpsl inc adc fisub (bad) xchg xlat inc mov and hlt xor sub jnp mov out mov imul cmp ficomp rcrb shll mov lock push pusha sub (bad) es ja inc rclb pop xchg xchg lret nop movsb sti sbb mov sbb addb lea dec mov sbb das leave xchg mov (bad) shll xchg sub add push leave and mov inc (bad) jo roll sbb jnp dec and lcall add mov push and cs test test pushf sbb pop fcmovnb lret cmc pop xor fcoml (bad) fildl dec mov jbe inc adc sbb daa into dec (bad) mov adc stos xchg and sub jbe jae xor mov push xchg jmp in nop push push dec mov aam ja imul xor cmpsb ljmp mov push gs (bad) push (bad) es jae mov jns or mov rolb mov cltd (bad) mov cmp mov insl stos lret call cmp movb test lret pop arpl fdivrp sarl std mov ljmp (bad) xor fwait pop ss jp mov xchg arpl enter xor mov jmp fdivrl mov orl fwait mov std test fmuls fwait push xor sbb inc fs adc insb out ficoml xor idivl mov (bad) scas hlt push imul jl cmc nop scas cld pop fs subl stc xchg jg adc jle jle xor pusha and fsubrl ss sarl and ficomp xchg (bad) sub (bad) clc rcr insl std test int3 roll out pop imul jl enter cmc (bad) aam mov mov xchg movsl sbb aaa push ret sbb push arpl gs pop dec stos jecxz int3 loope jecxz clc xor dec nop add nop neg addr16 lds and or test jne adc out mov inc cmpsb aad mov pop dec add pop repnz mov push insl and push repz lret xchg inc ret (bad) out lock mov cmp xor test and xchg dec inc loope into test lea int jo js aaa stc scas or call movsb je inc xor push mov enter emms jb (bad) xor jns imul jnp cli cmpsl lods inc daa cli mov cmp push lods add scas jle push arpl mov push roll loopne insl inc adc loop (bad) push xchg cs aas push jmp int sub mov lret imul xchg sahf or fwait mov nop cmp call lods hlt in mov mov test aaa jo pop lods jge mov bound (bad) imul jmp in pop mov mov rorl pop lock test or jo mov sti mov pop adc or sub push mov push mov mov pop and fsts enter or add xchg clc dec pop fs fdivr add bound jge cmp imul jmp xchg inc pop (bad) cmpsb jbe das and xor in ror sbb hlt mov int int call pop popf and sbb xchg dec dec mov add sbb add test (bad) movsb and test repnz jg sub popa rolb adc mov inc or jae inc decl lret shll mov sub sbb fisubl mov test sub iret and sbb add (bad) out mov sbb ror sbb xorl dec ss pop mov xor jne pop push push rcrb or or movsb xchg mov adc in cwtl add das nop sbb or repz xor jo jae jge int lods aas push clc js movsb sub daa out pop scas dec mov aaa mov jo and inc jecxz repz adc pop in pop mov cmpsb mov idivl jle out xchg cmp sub movb or stc jmp ret repnz sbb rcrl ljmp outsl jecxz iret outsl mov in shll xor aad jnp dec inc pop mov push sub outsb inc bound push mov jle enter add pop es mov mov xchg dec sbb scas pushf adc rcll cwtl mov jne adc out repnz loopne rorb or outsl (bad) mov ret jns inc or mov cmp pop sub icebp jno ds fadd jnp jbe repz mov out cwtl dec insb das stc insb mov ds call mov mov push gs dec int lods xchg fisubl aad mov lods add cmpsb dec mov pusha or pop test stc lods clc dec (bad) out push xor pop push pop inc scas movsb push ljmp fdiv popa cmp xchg pop dec fsubrl mov sub fs pusha xorb jbe push inc test out rorb xor adc cmc shll mov mov xorl imul (bad) out out sbb outsb mov push mov xchg lret test loopne add xor sbb faddl nop or cmp sub sub stos roll movsb cmp push popa lahf loopne dec std lds mov imul sbb int3 cmp stos xchg fnstcw data16 inc testb inc fcomps inc and daa fcoml push pushf frstor and add (bad) cs cmp xchg xor aaa ja icebp xchg int3 and dec (bad) jb call mov popa jge sbbl sarl sbb (bad) dec call sbb cwtl mov xor scas and incb push imul movsb stc push pop or sbb cmp repz adc (bad) iret jo pop xor cmp sub call imul imul mov pushf add xchg sar mov repz insb lods cmp jge fsts adc (bad) lret jmp stos jb and repnz lret add sbb xor test pusha in fucom sbb mov loop dec int3 leave xor xlat inc cmp fnstsw jne dec loopne out mov mov adc push mov adc gs cwtl inc pushl mov shlb test sbb jp mov push idivb ljmp xlat out pop add subl hlt push push fidivr xor or and xchg cltd cmc pushf inc mov mov mov pop push sub scas push mov cmpsl repz movsb mov popf loope out repz jecxz loopne cmp movsb or in in fildl cmp icebp cmc stc dec dec (bad) lea add popa adc dec aaa (bad) rcrb sub pushf rcrb addr16 aam mov leave xor and cltd icebp dec cmp push ret lret daa inc cmp push mov das and pushf outsl mov fnstenv leave and and dec incb xlat movsl inc and sbb mov cmp push popf mov ds aas mov mov sahf pop repz push leave jno sbb and popa cli sub pushf push movsl movsl mov adc push shll push dec add icebp insl inc repnz pop ja cmp addr16 dec mov icebp les lret nop in xor aas popa fs addr16 insb dec out leave mov and adc pcmpgtd xchg (bad) xor test sbb popa movsl jbe outsl test adc jnp es loope sbb cmpsl das pop jp (bad) cwtl pop (bad) mov or (bad) mov jb sahf rorl mov sbb std mov mov pushf fild in sbb inc jge jnp pop mov movsl shl cwtl movsl xor xchg adc pop loope insb ret (bad) repnz lret lcall xor adc inc dec stc loope cmc jne int3 mov sub popf inc mov pop mov popa lea insl ss sbb xor xchg hlt mov flds pop loop loop repz mov sub mov mov sub (bad) dec daa ljmp outsl mov out xor mov scas lret push int cmp or ret push push pop mov stos movsb addl inc popf inc gs adc and test inc gs mov es aam mov mov or loopne out repnz jno cmp mov sahf ja cmp xlat fnop repnz add int loopne leave pop scas js cmp mov or cmp insl sbb lret scas cs ficomp mov push xchg add push xchg xchg and xor jnp sbb movsb adc mov out pop push inc mov ja shr xorl out xchg xlat pop mov lcall dec stc jns sub pusha movsb jo fldt cltd pop lods mov push and rcrl inc dec mov stc (bad) adc push add xchg xlat lcall mov sarl sahf dec aas ds rcl lods mov pop (bad) in das loop adc clc jecxz test lcall subl iret cld sbb jge shrb ficomp mov out adc sahf inc loop stos inc xor loope mov mov call xor das incl jae mov adc icebp ror outsl imul sbb les mov (bad) lss sahf cmpsl add jns mov pop cs sbb std loopne jmp pop (bad) insb fwait std fbld setge xor mov rcl jg and sti jge (bad) cmp or inc outsb push ljmp pop or adc int3 mov and dec fnstsw sbb adc (bad) dec pop stos iret inc (bad) and mov test and push std push (bad) xchg cmp sub or and push addr16 sub jb inc mov pop outsl jle aam dec push rcll out mov enter out and inc out in sbb and (bad) mov push pushf repnz pusha stos lds (bad) stc aad scas into ret out and and or mov orl and cmp dec dec divl or mov push jns inc int sbb js dec in mov lret mov jns rol (bad) sti fs fisttpll test inc sub (bad) jle xor sub rol lahf out jmp sub jge (bad) xlat or shrb lcall roll or and out dec out adc xor push mov dec add pop cli stos jg pushf add mov and xor sbbb out (bad) mov cmp mov shll js (bad) mov scas or gs rol xchg scas je je add xchg sub mov mov lret cmpsb cmpsb push push push and mov es jmp ret add push dec insb jb xchg xorb sub jge fs sbb xor mov sbb hlt xchg loopne and mov sub add add xor cmpsl test pop ret lret add hlt jmp (bad) test rclb sbb dec sub les (bad) aad inc adc insb lret add mov push push lea aas lea jne repnz mov sbb or in xor movsl subl cwtl ljmp or mov jb jmp (bad) sti push jge mov cltd mov inc into cld xchg nop push negb pop data16 divl popf inc or mov mov dec add icebp add dec add mov les inc loopne leave and or mov inc stos push popa rcrb dec inc inc call aas jp mov int iret xchg xor or and add std mov sbb cmp mov pop mov mov call cli (bad) dec mov ss mov ja jle mov cmp xor mov pop icebp inc push test pop insl mov sbb movsl xorb icebp sbb sub push iret je push xor push push pop les test mov jb lods adc fildll fiadd xchg lock lods cmp sub out (bad) enter addr16 xchg imul je xor (bad) mov cld mov test push outsb js lods mov lea mov sbb lods call inc mov jbe (bad) (bad) rcll cwtl sarb movsl fidivl fcom iret lret imul xor aaa outsl fdivrl ds jo test hlt jle,pt mov inc test notb cwtl idivb clc iret xchg rcr jae xchg je (bad) out in js dec jae movsb repnz in fmul sbb mov fdivs cmp lahf pop imul inc inc sbb stc ficom pop sahf inc cmp mov adc adc stc (bad) mov hlt std sub cmp (bad) cs and cli sub into inc into lcall popa adc push ss loop jae lcall add push insl cs ja sub es mov rclb psubq mov push sbb pushf fildl mov mov jg sahf push sbb lret jns xchg mov inc rorl pop xor mov xor inc out mov rorb in sub mov dec sbb mov clc jnp test fsubrs (bad) jmp pop add jns std repz daa aad jle cmp mov sbb sub xor cmp (bad) fidivl repz ja xchg jp adc lahf hlt dec mov xchg pop dec cmp sub pusha mov fs inc sbb or sub in xor test icebp stos adc ret test pusha push mov push ss or imul addr16 loop and push cld lret js into aad rcll fidivrl jae pop out orb dec fisubl pop mov inc cmp pop mov pop and fisttp jno mov dec jle mov rorb cmp cmp lods outsb and mov cmp mov sub insl repz mov cmc jge inc lcall add add xor and mov test lods lock insl jo (bad) jbe fild rcrb lret imul ds idivb (bad) (bad) jae pop arpl movsb push cwtl mov push add or jae pop and stc push lock mov add in xchg dec repnz mov (bad) mov dec dec jne mov movsl inc jns jl rcll cmp ljmp or mov imul in mov mov xor sub xchg xor jmp jp and and push fistpll xchg pop fsubs jp arpl xor mov mov lcall cmc scas lcall mov sbb in add js jl adc dec cmpsl jp jg xchg ja adc (bad) jne mov push mov fwait enter fcmove sub and (bad) cs mov cmpl mov enter inc arpl je (bad) ret adc mov sti es sub test enter mov adc repnz int scas ljmp mov xlat xchg lods test cli add (bad) (bad) fadds hlt add mov pop pusha inc mov jae mov mov or pop je pop sbb loope and adc addr16 push pop movsl xor pop stos mov out inc push (bad) (bad) rorl push pop ret mov mov lahf cmp jb outsb dec lods pop lods lret adc test push and ss push ret sbb push jecxz sbb pop push push or mov decb adc or push mov (bad) inc inc sub (bad) push adc adc xor xor mov bound (bad) inc or out push jg sbb mov rcll ss mov aaa pop cli mov mov lds cmp bound jle (bad) sti jl inc das sub scas cmp mov lcall inc mov fidiv lods int das ss mov aam iret push (bad) fdivl xor out repnz fmull dec pushl lret mov leave hlt fsubrp lock mull (bad) jecxz mov dec out fs ror lret push rol mov fmuls in ret pop shr jo cmp xor sbb mov fwait mov stc fistpll in lret inc push or frstor rorb inc dec out imul lret mov xor cmp push and insl xor lods add pusha les xor test jp push int aas out aad jp out insl pushl loope addr16 and (bad) (bad) in imul pop fs (bad) sbb outsb icebp pop and jne pop pushf pop mov push lahf adc jmp ret shlb adc push sub subl loope push inc jmp in mov cmp mov nop or (bad) and fnstsw imul inc lds lcall cmp push fs add jg mov and fnsave rorl mov fcompl imulb push and inc testl jl outsl jg push sub mov cmpl jl dec xor jl xchg movb cmpsb and adc mov pop enter ja adc (bad) cld pop out and dec (bad) ja cli sbb std lret stos test mov and (bad) lret dec inc add mov xor mov xor popf leave mov sbb out std incb xchg xchg popf dec push ja fisttpl sbb sti sbb and xchg xchg push mov pop push mov sub xor out lods test mov jecxz out mov or sub cwtl jg mov popf mov loope int3 test fmuls (bad) arpl dec cmp and pop cmp push pusha cld mulb add jge dec (bad) jae sub xchg fs push fwait lahf sbb pop push adc sbbb stos adc outsl in push push loopne je data16 mov cmp les fdivr pop insl mov xchg mov ret cmpsl rcr lock push cmp jno cmp js cs jg and ret iret movsl lret and cmpsb mov int jl cli add or dec ret sbb pop pop pop icebp and (bad) fsubl pushf (bad) sbb dec jl dec push push out cmp sub mov sahf jno arpl popf in (bad) xchg or cltd in sub jbe sarl add stos mov rclb and push jp in test insl ljmp inc movsl cltd or or push sub xor ret in stos push mov mov jnp stc (bad) call fs btr fcoml sub shr or test ret test adc or xorl jae cvttps2pi loop (bad) aas add mov push lret jp adc add push hlt movsl adc jmp sbb mov mov and xorb fstps shlb mov cmpsl test add mov and xchg inc xchg scas fs jp jne loope cltd dec xchg hlt sbb adc pop and pause les sahf sub xchg call xor pop stos or fsubp jecxz sub mov cltd mov xor pop and add rdmsr jmp lahf pop insl sbb sub pop in pop rolb sub mov out jle sub decb mov (bad) pop pushf cmpsb pop iret fsubrl pop out jno mov mov dec out mov add cmp mov or shll sbb xor movsl mov xchg dec mov adc mov bound lret call xchg cmpsb mov sub push std test cmp sub enter inc (bad) jb jns cmp subl fwait xchg mov lods mov pop sub imul or xchg mov xor dec sbb jg lock daa aas enter sub das xchg jbe or in out inc nop pop xchg std jo sub loopne adc cld aaa cmpsl dec xchg cmp addr16 sbb icebp mov xchg sbb adc mov (bad) outsl fisubrl jno inc andl adc aas rorl mov cs (bad) mov mov gs mov lock sbb cmp icebp loop es mov mov mov addr16 loopne mov iret jb push sbb lahf sbb fldl cwtl add mov sbb scas inc out out (bad) cmpsb push and xchg push sub imul pushf out outsb cmp push fcomps xchg pop inc hlt rol push xor sub bound xor xchg push (bad) sbb roll (bad) mov xor push aam cmpsl hlt dec jge out adc mov stos pop push push ret inc xor pop out and add cmc push add dec das mov inc mov lods dec stc adc sub mov push pop mov xchg out rol das pusha add iret (bad) rolb in inc xor pushf mov sahf pushf push (bad) and pop mov scas (bad) mov mov push push out dec pop dec lock jp lods out mov test xchg into nop addr16 aad adc dec fidivrl mov pushf outsb out xor cmc jle mov jge out push sub mov mov adc mov sub aad mov neg sbb dec rolb loopne mov aad inc movsb jns cmp mov (bad) inc and cmp stc jbe add inc int3 add imul rcrl xor je adc lret jae sbb inc js xchg mov jmp pop pop imul (bad) insl js mov inc imul add out cmp push mov and das cmp fcoml pop pop cmp pushf (bad) ss push icebp mov and push mov add lea add dec pop mov or nop mov inc pop mov xor ljmp sub add inc mov lret fistpl addl int das pop or or mov jbe cmp outsl fcmovb inc imul xor mov cmc pop lock push cmp or push addr16 jbe in or mov xor negl inc dec insb loopne (bad) in cld jbe out loope vpackssdw insl jno cmp in inc inc dec jb lock mov pop sbb sbb add and xor mov in aas popf mov inc mov inc test xor cmpsb mov fwait and popa les (bad) sbb cmpsb and iret sbb xor loope lods dec addr16 cmpsl mov aas jnp xchg jns cmp lahf mov cmp sub jnp fimull or dec data16 pop stos xor lods (bad) push mov push cmpsb fmuls fdivs fcmovu inc add loop aam jecxz (bad) out jo outsb js mov mov lods mov mov decb (bad) flds loope mov fisubrl adc jmp hlt jp add jo xchg and nop rcl fwait imul push cmp es xorb adc clc cmp pop or jl and insb daa sbb je cmp dec push (bad) jb sub movsb xor inc xchg mov sbb fdivr jl mov call mov sub jg arpl test (bad) mov (bad) sub dec (bad) repnz iret jge cmp (bad) xchg lahf xor in popf subl sub sbb sbb test xchg in xchg mov push (bad) push shrl mov jo sub lds mov dec jle jns xchg movsl idivb popf push (bad) loop add mov fstl test mov nop popa cli pop in test outsl adc out xor jl repz test lods xor lds push xor and cmp push movl cwtl pop es and aas (bad) arpl add mov sti sbb into jne push pop sti add adc inc mov adc mov add mov xchg cmp or cli push lods mov jo in mov rol jo dec icebp pop pop mov lret add jg rorb xchg hlt jns adc movsl (bad) les pusha xchg in in push hlt les dec mov cmp xchg pop adc dec or push in pop lret sub test arpl cmp fisttpl lret arpl mov dec inc das sti mov mov pop fiaddl or daa rclb mov xlat xor pop add xlat sti sbb add cmpb pop mov lock cwtl popf mov push lret sub jl mov cld (bad) iret iret dec mov test cltd mov jle fs cmp adc mov pop push xchg add fs (bad) dec addr16 out mov mov jge lea mov sub push sub and mov insl xchg les ret add xchg shlb cltd mov scas lahf fidivl arpl fsubs mov in xor dec ja inc ret cmp mov pop out xchg les adc (bad) call outsl dec popf cli and stc pushf outsl push xchg jecxz sub sub sarb popf insl pop iret dec out and out stos iret push jge fs addr16 movsb hlt dec (bad) movsl sti mov cmp mov pop fldenv and mov mov repz xor sahf dec or sub loopne cmpsl into inc sub sar call fldcw clc fwait and int in push shlb fiaddl ljmp je arpl stc inc popf scas xchg imul test les repnz xchg test dec jnp mov mov push push sbb sub adc lret jg dec rorl leave mov mov aad push int (bad) mov fnop inc dec (bad) gs inc subl mov inc in xlat outsb add das xchg mov inc jle inc loop xchg arpl sub (bad) ret imul outsl (bad) mov xchg movsb fcmovnbe cmp or push xchg insb push shr (bad) ljmp aaa testb push cmp dec scas outsl cmp dec in bound mov sub daa js mov imul (bad) or scas mull fmuls mov (bad) aaa or xchg xchg adc and or inc in sub inc and adc mov pop ret stc divl lret cli stos sub out iret fstpt out out mov lret mov call or xor mov or test push mov inc inc xchg cld call cmc sbb or lahf out mov std jmp fwait inc lgdtl sarl fimul loope inc fsts push xchg mov gs mov lret or pop jnp jp test jp sahf jns push xchg rclb stc push dec jbe jne inc es stos add into fwait test xor cmpsl sbb rcrl loop incb mov aaa ds fimull cs sbbl out fcomi push (bad) stc xchg or scas out mov mov setno jge,pt insl xor push leave bound cmc in pop xchg stos faddp jae lds into push mov in out mov inc repz xor push and mov mov fldcw adc shrb movsl repz repz push or scas sbb xchg or pushf inc arpl aaa es sub xorl bound (bad) jb out add inc int3 cli sub stos sbbb dec sti pop add andl add fcoml xlat mov or sahf popf or push cmp sub popa addl jb inc test cwtl fsqrt cmpsl cmp adc push mov mull or xor mov dec push cmc cltd sub outsb ss and mov inc xor outsl jno adc adc clc and adc inc div aad data16 fild xorl (bad) adc outsl add mov imul push out and and nop mov push in mov xor movsl out test cmc mov mov xchg mov mov cmp xchg insb push lret ljmp lret push xor pop mov imul cld pop dec pop or inc movsb cltd fwait dec cld movsb or sub movsb jg xor push fidivl clc outsb sbb arpl jb pop xchg jle xchg push push xchg sbb and lds nop shl xor jp lcall ja mov lahf jnp rol sub mov cmp mov clc jg cmp push sbb outsl sahf les outsl repnz es loope push and das dec push jbe jge push jle xchg lea jge jne sub jmp xor mov add xchg fs es mov mov pop test mov cmp mov das cmp sbb cmpsb jmp mov jne xchg push jb pusha insl movsb addr16 idivb jno xchg ret fbstp sbb aaa cld add adc adc in add mov fwait jno pop dec pop push xchg sbb les pusha pop gs data16 jecxz adc mov cld ds in out loop add xchg loope fcoml mov popf and seto cld ss push push and sbb add lds jp pop dec icebp inc fdivr mov jecxz daa mov in fistp notl sub out mov cmpsl sub jno sbb mov in pop pop (bad) rcrl xchg push aad mov adc (bad) mov mov les rorb push mov shl mov out adc xchg mov cld imul jge and mov sub fidivrl pop ja rcll pop imul pop dec cmp xchg dec fcoms lret cld (bad) les lds xchg fisubl lea push push out test inc mov lods (bad) rcrb in fwait das addb mov and icebp and xchg (bad) mov scas cltd jp sub pop mov mov clc jnp loop xchg repnz gs jl (bad) out adc pop dec aaa sbb xchg pop frstor das sbb add or dec js and pop cmp add xchg sbb sbb subl jle out and pop repz pop jne push mov mov in sub test push lret cld jbe sub ja call es jg pop jnp mov mov push scas out mov pop dec test aam not test push orb lods lahf mov cmp cmpsb xchg mov repz mov inc jecxz pop mov adc loopne cmp movsl jno xchg lret jmp ror and fmull stos push pusha cs xchg movb cmp cmpsb es push sub lods lods inc stc fs outsl mov rcrb fwait imul int iret cmp mov inc xchg push ret jnp enter sbb js,pn cmp mov (bad) aas sub sub jmp push fs sub popa mov and test or push cmp xor sub scas enter in push cmp loop and int lds aas mov add cltd lock shr push jne mov (bad) xor daa xor lea pop (bad) and into mov pop aam xchg xor ret sahf mov leave xchg push fadds dec fidivr fnstcw stc inc daa mov xchg scas cmp mov gs mov (bad) pop xor mov leave xchg pop mov push das sub and dec add in dec jo cmp pop adc or ja (bad) push mov mov clc shr subl pop cmp lods jnp jo hlt push test cwtl fstpt or lods (bad) js mov mov jp arpl in outsl lea roll movsb jmp pop cmp mov (bad) scas sub push shr cmp fist mov mov cld or repz shll call outsb (bad) idiv sahf js inc insl imul xor inc les (bad) dec xor push fcomps loope test and xchg sbb lods fimull or clc idiv pusha rolb push xor addr16 or stc data16 das loopne,pt leave data16 call cmp jmp and add das mov xor add loopne cmp (bad) popf sahf gs fsubl mov pushl enter arpl (bad) (bad) sub push sub pop jmp dec test movsl dec jmp jo cmp sub push mov mov fs adc push mov ds jns xchg mov mov ret adc dec and sahf je jg push lcall aaa cmpsb lret scas loope inc xor jle je fadd enter test call fldenv in mov je xchg stos mov mov and cmp add mov enter cmp fdivrl xchg (bad) mov test (bad) add bound aad jne fstl lret (bad) dec (bad) xor cmp (bad) loopne ret mov popf add mov cmp xchg push data16 dec (bad) xor nop push sub mov fnstenv mov sbb icebp add movsl add xor mov icebp icebp sub outsb push pop div mov mov js sahf rcll xor cmp lods icebp popf pop xchg and pop push push arpl xor and xor dec (bad) mov cmp stc mov enter fcmovnb ss xchg enter cld add mov (bad) test cmp sub jo mov popa pop add add push mov test dec or sbb mov hlt pop push lods test or movsl fcmovnu or jecxz xchg and shrb push fwait adc repz or icebp aam rcrl mov addl pop dec cmp lods add fwait jno addr16 into sbb lods sub jp sub out in or jnp lea inc out test jp bound dec call lret pusha cmp js jp decb pop aas dec roll out js cmpsl stos pop inc or adc in sti ds frstor (bad) push rcl dec and ja and mov push cmp in aad push (bad) xor and pop in adc popf dec dec divb mov popf or mov add cmpsb mov jp push (bad) push addr16 out inc push ficomp adc mov jmp mov mov stos xchg lds inc xor jl sbb (bad) outsb jle jmp loopne fs data16 fmuls jne fwait sub dec ja mov ljmp pushf mov int lock bound (bad) xor push jl jmp (bad) fdivrl inc lods cmpsl out push cmpl fistpl inc sahf (bad) mov add dec jae (bad) or pmulhuw (bad) fst mov fnstcw xchg mov pop sub sarb loopne pop jp cmp lock out xchg sbb dec ret inc push aad js rcrb mov sub jp jle xor dec in loope mov and test adc int pmaxsw xor sub jl push adc std dec imul fcoms sub (bad) fwait aaa stos sbb aad test mov or adc loop aam ret xor sahf jno jnp push out call and test sbb (bad) pop xchg dec or dec ret fstps loop mov mov dec pop mov mov pop cmp sbb jbe mov (bad) int inc sbb int sub dec and fistpll js pop and pop or push test in stos lods lds enter (bad) mov push sbb stos dec or or jb pop pop sub pop (bad) jg mov dec add inc loope test repz lahf mov mov xchg mov (bad) popa fcoml lds dec sbb xlat testl fsubl sbbl insl jecxz mov pop je pop cmp lds pop mov rcrb out pushf push out subb lds add jno mov into es addr16 xchg lret aad pop jecxz mov add pop inc sub inc scas mov imul imul imul movsb scas and sahf jl xchg hlt xlat jne ljmp xchg and iret dec sbb xchg pop cmpsl clc pop inc mov pop jecxz sti fwait imul push mov pop pop ficoml popa pop (bad) mov (bad) dec push paddusb jae mov mov jecxz repz adc (bad) adc pop jns ljmp sbb es out cwtl (bad) jle (bad) lret add lret push push stos into movsl pop (bad) jno inc ja xchg daa (bad) or pop pop and jno pop xor push lock fsubrl sarb arpl push inc cli push jl rcrl sbb cmp push mov call mov pushf clc or jl mov mull xor mov or sbb popa cmp ljmp aaa add loop pop adc jo jo mov xchg and dec or inc push sbb xchg mov adc scas lds out jl sarl xchg and pop cmp sbb xchg shrb sub sbb mov ja push into in out loope sar or (bad) mov test sbb shr mov jl icebp (bad) mov xchg lcallw (bad) call out std clc (bad) lock inc idiv popf add scas (bad) push dec lcall xchg loope data16 dec (bad) cli (bad) sub sub cmp (bad) rorb rcrl xchg or lock rorb aaa fsubrs cmpsl lea push xchg pop cs imul fisttp mov stos rclb add xor in push sbb aaa xchg inc into xchg andl test pmulhw mov ljmp cltd (bad) and xchg in and push inc xlat leave xor xor mov mov push mov addr16 cmp mov cmc pop sbb mov cmp arpl jae rorl je rcrb ja test pop aaa dec sbb jns push and fsts and ss stos (bad) shrb xchg (bad) rol mov cmp out enter add jecxz dec mov pop mov sbb jecxz sub cltd test cmp rcrl aas (bad) mov push dec fnsave test mov scas (bad) hlt and ss inc adc bound outsb iret jno sbb movsl push mov dec ljmp (bad) fdivl push and dec or sub push shrl jo add roll nop sbb scas inc jge or test mov or rcll sub jle cmp sbb out hlt leave fmuls fisub je push dec pop xor into les jo mov xchg xor sub (bad) and push gs movsb pop repz xchg xor mov repz int3 xor gs sbb jecxz jmp icebp bound mov imul push lahf push push in or push leave lahf jmp dec movsb add dec popf dec mov mov jg add xor fild or jae jl aas ret sarb pusha repnz clc mov outsl pop daa dec mov pushf inc loopne ljmp mov jae sbb mov fwait add dec xchg mov mov lds add fwait or stos cwtl cwtl sbb scas inc xchg mov push pop and out nop fdivrl mov fistp adc jle les mov dec test sub cwtl sbb sub push adc mov ljmp mov add (bad) jg and xor push pop leave cmpsl mov jae test lods js xor sbb cwtl xor mov cmp jo xchg dec xor push cmp inc sub and push and xor fimull sub fcomps out or jp mov pop fdivrl push and sbb and sbb test and dec out xchg aaa (bad) je push xor mov push lret imull inc test mov cmp xchg dec mov mov les cltd nop ficoml mov add adc sub mov dec jo cld mov adc pop pop jp ds es dec and sbb in push mov push mov (bad) or call test jno jnp es fcomps pop or dec push pop andl js ds stos and pop popf rorb or aam dec push cmpb (bad) mov adc loop ja mov inc inc cmpb fcmovnb aaa mov stos decl mov pop mov xchg xchg xchg fdivs mov (bad) xor sub push cs adc mov jg sbb jns repnz aas adc inc jbe orl sahf mov xchg and ja inc jge jp inc pop cmp pushf mov jnp pop (bad) cld gs data16 aad call js sub lea xchg inc jmp sub inc xor xor lods mov rclb ss mov shr mov xchg repnz call test jge push out jge sbb mov xchg or (bad) (bad) and lret in push fisubrl in mov or icebp outsl cmp cli sbb subb (bad) lds mov stc push cmpsb jp jmp out mov xchg push add aaa add out or (bad) or (bad) mov repz cmp imul cltd cld mov test outsl dec jb dec adc jae xchg ret mov or into sub js push test push imul cld repz mov mov push lcall sub outsl or and popa outsb mov jne mov xchg pop dec jge ja inc mov push adc ss imul adc cmp xor xor jmp dec gs out test push fmull icebp call fwait sub mov ljmp je pop enter fdivrs sbb dec mov dec push test (bad) mov ds or lcall test insb xchg shl mov mov jg push xchg lret nop outsl ret (bad) fdivl das add popf test xchg cmpsb inc outsb pop xor in icebp insb and lods negl lahf pop in aad jmp jnp lcall scas pop jge (bad) mov mov sub adc lds imul in jno faddl lahf and mov xor or movsl mov faddp std cmp (bad) jbe xchg mov jno add lret sbb pop sbb orb mov scas call xor cli out jb cmp sub pop push adc mov or imul and push mov mov cmp cmp cmp mov xchg fisubrl sahf (bad) js cmp test xchg mov ss push fisubrl mov das xor and addr16 pop or cli lods out fcmove dec aad jb aas sahf inc in or gs outsb xchg push and dec or es mov lret int jb stos dec nop mov inc loop cmp add sti push sbb out imul pop fildl pop pop lahf xchg iret (bad) out daa xchg jbe bound xlat xchg dec pop lcall repz and movd or negb mov sti jnp cvttps2pi ds and flds mov sar movb push jo dec rolb test jae repz adc sub mov mov fisubl int repnz lods (bad) mov scas mov ret mov pusha lock lock daa pop ljmp xchg add xchg pop mov sbb push or jb or adc stos or flds data16 test stos adc fsubrl sbb add ja lret dec mov and mov aad cld ficom push loope aaa push ret sbb call cmpsl fsubr mov lods add mov add adc mov aad lods or dec mov int3 push popa lods out mov testb push in lret adc mov push aam cmp lret je xchg dec push and ror inc inc repnz insl add les jno push cmp ja xchg insl jl negl pop cmp mov (bad) jno fcmovu jb sub cmp leave mov sub mov loop push and imull adc push sub js push lret mov jnp cli cmc loop mov fwait mov inc mov cld sub mov xor inc and jl sti push pop pop xor loopne mov add sti das xchg or dec outsb mov pop repnz sub (bad) lret imul mov popa dec cli insb inc mov nop pushl sub jo xor jno popa inc adc nop and in iret dec inc pushl mull jl out std repnz arpl insb mov in mov mov fcmovb jno or and sahf std (bad) rorb test data16 pop cmc cmpl or pop in mov jle loopne pop (bad) ss mov push rcl push jle sub adc (bad) imul cwtl fldcw mov mov in out pop jg push pushf mov or push mov int pop sub lret mov xchg push sub sarb mov cmp inc mov rcrl lret mov in inc lcall test sub rorl mov and fisubl or xchg cli gs mov push mov inc push adc cs leave jecxz xor out movsl and mov stos and pusha cs lahf add addr16 lods lods mov in xor pop (bad) les test push test sub push in and stos or push and ss ja sub dec jecxz jnp les loop or push and xchg dec sarl dec pushf xchg mov adc xchg add (bad) cmp lods dec sbb call and mov aad jmp (bad) stos jmp dec mov and enter xchg cmp (bad) mov (bad) xor in mov cld sahf bound mov in cltd adc xchg xor stos jbe (bad) aas in (bad) jno xchg xchg jmp sub incl adc sti gs lock pop dec sub lret or (bad) mov xor (bad) cmc or daa (bad) cmp inc or xchg mov ljmp rcl mov mov lret int inc push adc icebp inc outsb lock fimul cltd aad iret rolb mov test and movsb lock cmp cmp inc pop mov fisubr ret movsb (bad) jl and mov xchg pushf subl pushf mov stos jl fwait in movsl addr16 inc (bad) cmp cmpsb insb jnp mov cmp int3 dec jle xor mov bound push enter in fdiv xchg shll notb and mov sub dec cmp rcrb push movsb add stc inc mov mov std push movb or mov out push xor sub out cmp stos sub inc js adc inc push ja add aad ja std cmp enter pop dec jno inc enter test cmpsb stos fdivrs mov mov lret xor inc xlat jge pop xor popf and loopne mov xor outsl jo add jge gs push add fcomps pop fist xchg mov ret dec jo imul inc inc mov scas jbe sahf xor push and aas mov adc xchg adc ds cld or jnp dec stos xchg push fwait dec mov fnstcw mov fstps pop sti das and rcr (bad) xor jbe lret rclb mov gs dec sbbl push mov sahf pop pop sbb pop test lds dec iret insb (bad) mov arpl mov dec popa xchg lret and cltd ja jne in call popa lods popa hlt rcll cmp inc dec pop ret or js or xchg cmp sbb pop or cmc mov push mov jp and divl arpl scas and mov cld xor sbb rcrl daa fs je lea mov sbb sahf sbb cli inc nop push fwait xchg test enter jnp icebp and inc mov sbb lods imul xchg fs setns es pop pop roll rcrb push stc (bad) loop push add mov pop pop dec pushf sbb ret push sbb cmp cmp adc push frstor (bad) mov ja mov push sbb xchg (bad) daa pop xchg leave xchg call cmp xchg shrl pop dec jb dec enter ljmp pusha cwtl sbb in cmp mov aas xchg pop mov xorl and in rorb lcall jbe pop xor xlat mov pop popa addl jl and out xchg (bad) pop stos add adc in mov shl mov adc push jl int3 sbb push data16 pop xor clc ficom cmpsb xchg rcll iret cmpsb pushf aas lcall arpl push gs sub jns xor inc adc sub lea push mov and in sub xchg inc pop adc jns vpsubd sub call jle scas or fmul push fisttpll pop sub stc (bad) enter mov stos lcall jae jb ficom fdivrs test ret mov nopl jo mov push stos cmpsl mov mov lret mov add and xchg out sbb enter mov fsts push mov scas cmp xor scas fisubrl mov push adc xchg xchg repnz pop xchg fildl jbe fcoml inc sbb or loop arpl pop mov dec cmp gs pushf pop push mov test fadd pop cmpsl pop out pop or dec cmc in aad lcall pop mov adc daa repz lods (bad) or sub dec mov mov or adc and cltd mov daa inc test cmp lea bound xor loopne and cli xor mov bound aad sbb and sbb lods pop movsl cmpsb shrl cmp push cli jnp or std dec cmc cwtl rorl xor das jnp iret and into repnz mov mov or lcall test pushf hlt loope imul push xchg cmpsl mov aad imul fs cltd negl lock and (bad) and sbb jmp and arpl cmc inc mov jne dec push hlt or cmp sub pop lahf cmp call fcoms add inc adc pop dec rcl mov and cwtl or mov out jno mov pop pop imul sbb out jbe js ljmp adc sub (bad) or sti xlat and cs jecxz jecxz aaa ljmp insb daa xor jge test sahf bound lcall mov rol aam mov xor fwait xchg mov jecxz jb mov xchg aam jmp fstpt mov fwait inc dec add xor mov jb jae mov (bad) imul js popa imul fadds add int jecxz stos punpckhwd rol in add lea iret sub pop call div movsb push dec lret (bad) mov fidivr add cwtl xchg lahf pop cmp xlat xchg stos lods in lock mov adc sub insb xchg jno jle movsb pop lahf pcmpgtb cmc ret nop or pusha add insl xor mov rclb andl push pushf jl sbb push cmp mov scas inc xor lods add inc repz and bound in lds hlt repnz push arpl test add inc icebp shr hlt mov cmp pop iret sbb jnp jbe inc pusha test push mov (bad) in or bound stc pop and pop mov les outsb xor pop pop (bad) xor push adc bnd xor mov aam movsl stos mov sub test add fstl and add mov push test lods cld out inc sbb push imul jmp call out sbb adc sbb popa ja push shll in jne fildl dec or xchg leave push (bad) push or insb pop dec iret push int3 out ljmp mov scas fsubrl insl mov mov jle adc mov shrl lods test xchg or outsl out xchg mov xchg cmp ja cli test and ret lds push shl sti cmp enter pop outsb fldenv cmpsb (bad) divl testb push loop sub xchg pop aam ror ret xor pop xchg mov pop mov push and leave lea in inc sub mov loopne js jns xor hlt inc adc xchg ret popf loope cmpsb cmpsb (bad) xor pop sub imul dec cmpsb lock jle and ljmp mov mov xchg (bad) xor ja inc test jl push fisubr inc imul cmp push inc and stc xchg mov add stos aad jo ss or and adc jnp mov mov fsubrs test jl nop loopne leave and lods shlb fwait dec jno loop or pop or pop cmp pop dec cmp pop insb xor push into adc xor sub dec mov add mov lods lahf mov cmp pop cmp test lret xor (bad) (bad) dec sbb daa out repnz add in sbb fsubrs cld dec lret out rcll je and les or pop xchg inc int dec adc mov pop cmp xor call xchg leave fdivrp jle inc rcrl mov add and addr16 xor idivl jae push mov mov sub les sbb or sbb es xor mov jecxz jge pop push dec ficompl nop jmp fsts mov stc push imul in scas cld test pop inc jp push loope cltd lahf cmp cmp push sahf push sarl add mov mov jae sub jae fpatan mov nop jno fbstp cs sbb push nop sub bound xchg dec mov lahf (bad) fistp scas bound aad push mov loope pop or ljmp fwait stos push ljmp add arpl inc push imul xchg je jmp and rcrl mov aas lea inc add iret jne sbb scas sbb shll (bad) jmp sahf test cmp (bad) mov sub dec out push mov mov shlb mov sub fistp aaa std sub fsubrl push addl iret ficomp adc or popf ds (bad) stc pop popa (bad) (bad) adc push sahf leave sbb cmp mov mov into insl je pop (bad) inc xor std add aas push sbb or mov xorl leave adc jnp jne mov in inc or jp adc (bad) (bad) jae test lcall push in loopne cmc cltd add add mov dec bound inc (bad) jbe mov icebp daa mov lods shlb (bad) xor mov mov dec je add pop lods xchg leave ficom or push pop adc or adc mov fldl (bad) mov mov (bad) and xor adc and adc mov aaa push inc out mov push pop rorl sbb push (bad) jle pop rcl lds inc mov push inc adc sub pop loop addr16 add shrb add sbb xor inc movsb test pop mov push in js (bad) cmpsl push pop sub add xor xchg mov mov ret lock cwtl sarb mov (bad) mov lea mov movsb mov stc pop pop add dec test cwtl leave inc push sub or rcrb jnp push inc xchg pop sub pushf inc sub cmpsl mov ffree xchg rclb out pushf pop adc cltd cld pop jnp (bad) shl push dec xor lahf fsts movsb mov push and bound pop mov outsl hlt out mov in jle andl mov dec mov and xor add inc in jle inc js clc push jl xor pop sahf in sbbb mov xchg js pusha or ror enter popa cmpsl popl out ret fnstsw (bad) out push pop out inc mov subb ja fnstenv lea mov lret in sbb xor push outsb iret xchg outsl cs sub add dec aaa pushf cmp xor in jae fidivl mov dec (bad) je jecxz rcrl xchg out ret sbb inc aaa adc push and jo mov loop adc (bad) in int3 lcall in mov mov movsl or xchg out mov out mov arpl adc lret lahf inc xchg leave mov mov mov fdivr notb add jge imul mov push lods xchg (bad) in xor cmp ljmp jno (bad) fistpll (bad) dec mov ds lds adc xchg jge xor sub mov in cmp gs pop mov sbb rolb addb push pop sar xlat cmp xor mov and xchg dec gs cmp adcb sarl cltd pop or add and push sahf or test in cmp jl icebp dec adc or cli and dec je add ficomp inc xchg pusha add jb xor cmc imul inc (bad) sub adc test and adc cltd loope inc enter jecxz pop sub dec mul rcll cmpsl test call dec ret rorb ret out sub xor xchg push push mov inc out dec or xor sti lret aas (bad) jle bnd (bad) jns bswap dec movsb es imul xor (bad) rorb aad xor sub (bad) mov inc mov punpckldq in and cwtl test idivl push scas stc fsubrl adc fadd inc mov or into (bad) or sti xor icebp xor dec popa push stos aaa out cmp and out and mov decb and int3 xchg (bad) add pop imul xor xlat aad jecxz push pop inc test in popl scas sub lock hlt sub sub cmp js cmpsb lret ja in cmp adc (bad) hlt outsb out icebp pop inc mov bound cmp mov mov adc cmp (bad) leave ret xor add mov xchg mov pop popa ret sbb mov fs sbb std jg sbb ja cmp push int popa imull addr16 mov sbb adc cld imul xchg push (bad) ret pop push fldl out aad inc ret add add pop mov push push push cli cmpsl popa int3 and clc xor mov scas test in or xchg push clc jmp sub inc add sub les sub pop std and jbe fwait jecxz movsb lret orl enter clc sbb loopne or iret cmp dec sub leave adc and sub push movl fwait pop sub pop lahf jne rclb jge sti push test add fldl inc repnz sbb in in cmp bound into add cli push pop ljmp ljmp pop (bad) xor pop nop mov outsl sahf test sub mov imul jg mov popa ja add xchg cmp testl fs inc out rcll gs pop mov or dec xbegin dec je je sub lock mov (bad) movsb int and iret out ljmp or push push not popl jle imul jecxz loopne xchg jp repnz ds in mov loopne rcl adc les xor pop mov out sbb jg xchg stos in mov pop sahf push pop out sub jp mov sbb mov insb add (bad) in data16 inc jae xor push gs mov shrl xchg mov (bad) xor inc adc jae fild jbe or ja pushf cmc mov dec sub jecxz adc ss push enter notl dec sbbl in pop daa adc nop lahf mov jmp jne (bad) push push dec push les mov dec pop and rcr push xor fcompl or les dec test out jnp es pop shrl out xor leavew fstpt jo jae call bound mov cld sub arpl and push in call xchg dec adc rcrw popl (bad) stos mov and jge out mov cmpsb clc and push test pop jae inc jg sub xor (bad) (bad) fisttpl sub in sbb cmp push in (bad) push xchg std or pop adc and loopne mov scas mov mov dec fildll loop dec jne jb pop dec mov jb inc jmp xor in stos push das lods add xor out inc popa inc insl out clc out aaa popa test cs or pop jnp ljmp jge pop jnp frstor jmp scas push xchg neg jno addl inc sbb int3 orl sarl inc mov mov mov cmc or sbb sbb les imulb inc push in rcr sbb inc adc xor sub xchg xchg fisubrl mov insb scas fdivrs jns test loope jnp call cmc shl xorl push and add adc daa stos mov dec cli in push lock in ja push fsubrs mov stos mov lds jae mov sub and iret movsb pusha adc fdivrl sub xor cmp test xor add sub xor mov fistpll mov push stc hlt sbb pop in xor xchg xchg (bad) xchg addr16 mov pop mov jns xor insl mov in mov pop movsb mov adc or jno cmpsb jns push xchg mov inc inc jbe out aam push ss mov icebp jb jno push fsubs imul lods out pop jae es mov dec popa pop or pushf cli je dec mov lea call adc lds les hlt sbb jecxz mov jbe xchg inc arpl in mov out std adc adc sbb shll cli loope rolb xchg add inc ss dec in es hlt nop mov inc std mov xchg lahf (bad) hlt dec fcomi ss dec dec fnstcw sbb push out push jge push and ja jl mov or and mov pop dec sbbb or mov insl sbb jns push push insb mov lock jae cmp rcll ret add ret and add pushf sahf hlt (bad) hlt repz mov jge (bad) out push jno lea push inc int shlb jmp dec mov mov push js xor xchg inc imul jbe fisubl inc insb xlat rorb insb in cmp cld fdivl mov dec adc pusha push sbb ljmp (bad) imul pop xor insb mov xor dec pop out inc add cwtl xor inc mov lahf daa gs je sub lea stos mov push xor or xchg mov inc add (bad) pusha into fidivl data16 movl jmp xor push xchg sub and shll bound int3 hlt sub pop jnp adc imul aaa mov cmp and lret or mov scas aam rcrb mov dec mov outsb push add adc les sbb data16 test cmc imul adc fildll cwtl iret sbb and dec mov mov mov jbe jmp jg lret out cld sub lds lods lods mov lret call lret sub movsl loop (bad) sub stc mov xor in push or mov fimull pushl fs jne test out push out outsl clc aas push or repnz lods test std inc sub test sub xchg dec (bad) adc push and nop lahf inc mov xor sahf mov inc mov push pop aam dec pushf test incb mov xor and add gs sbb cs inc pop adc cltd push fdiv addr16 test inc jae pop and sbbl push es loop sbb dec push popl sbb fdivl movsb add enter sub or dec adc mov jge es stc lcall fdivs clc enter enter test shrb dec mov jle jp or dec clc jae mov adc lods mov push mov minps xchg jg pop dec aaa and aaa sbb imul xor pusha and mov ds in ret mov and test setns in xchg pusha sub sbb neg test cmp mov sub add push les (bad) jo jno sub test fnstenv or cld mov fsts bound add test jno or in pop rolb adc rcl clc int leave (bad) jne iret pop (bad) loopne sub sbb mov xor sub mov mov pop mov xorl stos outsb les stc inc outsb inc mov pop ss ds mov sarb fcoml cmp (bad) mov mov in lock fiaddl loope pop mov jbe outsb movsb out ljmp inc sbb (bad) loopne jecxz add outsl out mov inc or mov lods push and xor insl daa mov mov push xchg inc xor ljmp pop mov jae add bound sahf inc fnstcw movl cli sbb neg sbb nop fs stos inc sbb cld fwait movsl fmull (bad) or jmp jb roll add pop cwtl cmp pusha inc sbb mov inc fcoml inc fs cmpsl fdiv dec insl jp aas (bad) jge jle xchg xchg adc add ss incb enter pop mov lahf or jno test popl cmp loopne cmp sub mov xor cld add fs jmp jb xchg or jne xchg pop test lahf icebp ss outsb or dec test mov or jmp in les xchg movsl add pop loop fistpl mov push addr16 aas in jle ret sti subl sub xchg fist lods jp mov push out test xchg and pusha inc jl cmp add ds xchg lock (bad) mov lds fwait in or sbb add in ret sbbl jle and pop pop cld (bad) xlat mov insb scas adc jp das dec mov pushf leave cmp stos pusha mov adc (bad) push jo fcomps mov mov sbb xchg rcr stc dec ficomp (bad) dec inc pop jle xchg in movsb and je pop enter (bad) adc pop comiss xor adc lret shll mov and in jecxz adc and sbbl pusha fcomip fisubl (bad) or pop notb mov call adc mov into sub and and or mov outsl test sbb cmp aaa xchg xlat test xor jo fs adc sub leave orl or sub adc pop pop fcomps test xor push jge (bad) mov ljmp and dec xchg xchg jae pop cwtl paddq fwait and aaa sbb mov int xor fdivr lea add push into add jecxz in xor push (bad) inc stos dec in std mov dec scas or std (bad) mov js lcall notb aaa dec jecxz lcall stos mov imul insl stc xchg ss jo jo adc mov add xor movsb pop mov fstp mov stos insl or and xor imul (bad) repz pop xor fnstsw mov pop jae push mov insl jae sbb into ret mov or ror add movsb xor pop ss lods jmp xchg pop push add lcall (bad) std (bad) jmp pop std dec sub inc add cmpsl stos hlt gs dec in dec jo imull xchg xchg inc shrl pop ret push outsb cmp lock pop (bad) lds add rorl adc adc sbb rol cmpsl xchg dec mov adc xor cs js popf xchg sbb in or jmp xchg imul insl insl adc mov jae push mov xor into pop mov inc add mov add mov mov xchg shr dec and clc ja mov sub jp add repz cmp cwtl (bad) xchg aam add in jg inc add popa std nop mov xchg loopne mov repz aam cmp aad jae sbb mov les xchg push daa push push jnp xchg mov cmp sub movl pop sbb push notb xchg and enter inc ficomp stc mov scas or sahf gs adc lret xchg gs outsl add das sbb xchg sahf ret pop jno loope push xor lock into test inc sbb push test shrb test lds pop and push sbb fs sbb outsl fldt fwait dec test mov mov push dec in push loopne push cltd pushf sub jnp arpl call ja movsl jg jecxz pushf int dec dec xchg sbb sbb add gs inc sbb stc add lahf and xchg pushf test add jb inc or rcrl mov lock xchg mov xchg pusha push cld rcll dec movsl cltd sub dec iret pop xchg sub xchg or add je into fild push jne int3 ja jo faddl xor (bad) ret (bad) psadbw pushf pop loopne movsl (bad) dec js int3 test mov sub fldcw lcall jg jp aas and lods scas andl xorl jo xchg loop xor in scas mov dec scas andl (bad) movb push loope loopew and pop dec and inc int xchg ficompl shll mov in sbb mov mov outsb pop mov inc sub push dec pop (bad) pop xor sarl into in jno push mov idivl cmp test push ja adc hlt daa or or mov ss cmp enter cmovs and cs or dec pusha sbb dec inc mov dec shlb mov rorb psubb adc (bad) mov insb insl (bad) sti test pop lahf sbb cmc xchg push aas (bad) push enter cmp mul stos mov push addr16 rclb pop or mov int xchg jecxz adc jbe scas dec stos (bad) mov inc insl js push pop (bad) push or icebp xor jns sbb adc test in es pop sbb std inc mov test dec xor test jge ror andl push pop rcrl loope jge or cmp push ljmp cmp leave cld ret int or jmp bound jmp pop movsl cli js jle push in cmpsb sub fmul ficompl jle inc fist adc pushf lret test mov scas pop orl jg (bad) jo stc aas mov jp dec loopne pop push or bt add loope test cwtl sbb push into imulb test mov call fimull rorb cld jmp mov scas sbb pop mov jbe into lock lods into repnz cmp movsl sub test adc xor in in bound lods sub jmp pmuludq and (bad) push mov push aas sahf jmp add (bad) push xor cmp in push pushf and mov cmpsb (bad) xchg adc incl sbb and push adc int3 rorl add mov lds pusha faddp dec (bad) mov xchg or shl dec cmp orl pop jbe mov push xlat das sbb jle scas and aaa cmp (bad) imull (bad) in fcmovne sahf dec jns sub lret movsb add and insb pushf cwtl adc jb mov insl das dec jno nop adc inc call les cwtl dec and pop mov ret mov xor out push dec mov jbe,pn fidivl test dec (bad) pop xor frstor (bad) fiadd pop push inc mov pop xor mov jmp orl add (bad) (bad) pop lcall xchg xchg xchg mov jle fcomip insb fs fcom and and pop repz jp mov mov sub mov and push fwait movsl icebp ds subb dec mov add mov cs loopne insb inc lods scas fldl das les test js cmp jb negb jnp icebp mov enter push push mov mov sbb mov in mov cmp fsubrl test clc pop stos jle dec imul stc (bad) cmc out push paddb adc stos enter jbe jge mov push lahf dec daa inc popf cwtl jge lock test xor dec insl xor lods xchg loopne push insl dec outsl inc std mov inc stos xchg fsts cmp mov fsubrp in outsb pop push and lcall push push dec popl iret addr16 pop adc pop pop into int3 sub imul or enter mov xor dec dec xor cmp clc jns xlat jo adc pop or dec add mov andl imul ds dec dec pop mov dec popf pusha mov ss adc jbe fstps dec movsb jmp dec cmp jnp jne adc push mov test inc insl mov int3 push mov jns cwtl push sbb xchg aad jbe mov stos neg repnz test mov iret sub jl inc mov mov adc fsubrl sahf gs stos pop pop xchg mov jl in or push lods inc daa fwait sbb sbb mov jg fcmovbe mov or xchg fbld nop outsl mov mov les int3 mov jg jne adc or inc mov push out dec ret push push sbb (bad) cltd adc sar test lods xor lds mov (bad) lret xchg sub dec pushf jnp push pop push mov xchg cld mov sub setl data16 jns pop xorl sarb in mul lods mov (bad) test xchg cmp out or ret cmpsb shrl out or jnp test jmp enter pop cld inc add aad inc pop mov stos lret les mov inc in jne xchg or and adc popf jg ja test jmp inc ljmp decb dec fwait xor lods adc es or cmp aaa sahf mov inc in arpl mov push sbb xor jmp dec cmpsb push xor (bad) cmp xchg xor mov outsb outsl and jle and repnz push dec push mov inc jmp in mov jl loope pop loopne dec insl lret ret adc mov lret xchg adc xor clc adc sbb js lret stos loopne arpl js aas xor mov popa out pop jne inc dec dec pop pop mov add and out mov inc mov lods and add xor ljmp add xor std push mov scas dec jle movlps xchg (bad) sbb test push (bad) mov fsub adcl fmul xchg jns inc push mov lock aas inc inc arpl jle popa inc adc pop fwait push cmp es (bad) mov inc sub lahf out loop loop or into movsl and ret xor or inc lock es mov cmc leave pop out icebp test xchg sbbl pop daa repz sub das mov pop xor enter cs pop push movsb sub jmp inc xor or stc imul mov push leave cmp jno sub mov rorb add add fwait xor adc inc jnp (bad) sub cmc (bad) inc xor sub (bad) in mov dec repnz mov popf in push mov lods aad ja outsb cltd pop ret lea mov cmp sub mov stc inc inc pop les out jmp jmp push dec iret lea aad xchg in cmpsb mov lret dec outsl lret mov xchg stos cmpsl mov add jle movsl mov lret fldt dec mov cmp pop stos and scas mov int3 lods xor pusha sub jp adc adc mov inc (bad) cli xchg jecxz pop pop xchg add xchg incb xor sarl inc adc and mov adc add push arpl mov push jae fwait stc mov and jecxz add mov enter ret das mov inc and out sub dec repnz dec add mov and or xchg jnp lock mov pusha adc mov daa into xchg pop mov sub jecxz xor addr16 dec scas dec push incb in or movsb cli fwait and repnz repnz jb inc dec sarb mov adc mov addr16 ficom imul fsubl rolb in or add jno add adc push out mov es or pop xchg and push jp (bad) mov jle cli orl nop cli add mov mov jns cmpl jge sub pop jb pop (bad) in lcall dec (bad) lds mov shrl cmpsb lds push inc repnz mov mov dec add sub inc mov and fldcw clc roll xor imulb pusha mov icebp iret test lds sub in (bad) lret mov jb in imul shl inc cmp addr16 add push mov (bad) jle lock sbb add xchg out or cmp in and mov adc mov popa scas add insl jns inc test in insb test adc popa aas xor and aam dec fdivr sqrtps xchg in inc xchg mov push andl gs dec hlt call gs lods dec addb cs (bad) cli lea push pop int cmp jnp lods insb adc lahf or sahf insb repz jnp mov test push xor dec lods xchg add mov flds pop fiadd sbb push int3 movsb cmp push in jb test inc push xchg push fcoms adc in sarb pusha lds push xchg nop adc inc pusha dec jbe pop cmp inc add loopne cmp stos inc rep and pop pusha popf cmc pop mov mov mov mov xchg jo jg adc inc leave movsb push push mov mov add xchg add mov fstpt add xor gs mov push xchg pop cmpsb scas repz jns cmp adc cli mov aaa insl nop pop cltd inc adc add pop outsb jno (bad) jae pusha lds mov js mov imul push rcll xchg and xchg add jmp lret (bad) and movsl push inc sub lcall rep jns,pn pop nop (bad) push (bad) stos aad cltd subps sbb sub lods sbb bound dec push aad adc xchg insb movsl push out out dec push cmp jge xor xchg gs and dec jp bound adc fiaddl xor xor (bad) fdivrp xchg imul dec je adc push jb cmp leave sub inc int3 pop push out cs negl shll ljmp lret lret jp lods in idivb stc repnz cmp ficompl test push ljmp sarb ds scas cltd mov or mov (bad) mov in divps or jl adcl fmuls pop outsl vmovaps mov push leave outsb insl xchg sbb fisubrl jl insl add (bad) pop or das mov imul dec stc repnz movsb jmp loopne (bad) push test cmp into sarb popa and mov pop test pop das inc sbb hlt test int3 dec add push insb add add inc ror hlt mov nop sbb jge rorb jae (bad) jne xor add adc dec ljmp (bad) cltd sbbl adc insb push xchg stos inc loop push aam mov mov mov lret xor stos cld jnp in rol iret sbb test or divb pusha jle shrl (bad) je xchg in inc (bad) sub ret mulb jb mov jmp cwtl mov call lret and xchg jp (bad) lock (bad) into jno push push or adc mov icebp ds jne mov or mov xor sbb inc in inc jo xchg xchg add xor mov rcr stc jecxz pop xchg mov lods dec dec je push inc popf jl push xor inc popa pop imul dec test cmc xchg push mov lahf mov orl cmp add pushf push les or lret jmp sbb xchg mov data16 dec or popl and mov lret psraw fbstp dec jl test xor lock adcl imul inc dec rcrl lods lock leave int3 pop jnp loope mov stc sub (bad) and and (bad) cli mov xchg mov mov add pop call inc mov push pushf fwait adc in aaa mov clc push movsb lods pop jb shl inc xchg aaa shl shr arpl outsb push aas xchg xor aad mov mov push pushl pop add sar scas mov movsl pop out inc not add pop mov and jae inc xchg cmp add gs cmp dec mov add jnp in int3 and outsb sub mov and sahf repnz loopne popf outsb cmp insl je fbld (bad) mov adc (bad) adc data16 (bad) vmread (bad) mov dec lcall (bad) int3 (bad) xor flds mov xchg add mov xor push (bad) sbb pop aam sti (bad) mov and inc push sbb lahf dec push cmp sbb push jg or dec enter daa test and loop lock sbb (bad) iret add inc push dec inc push pop dec jg cmc dec insl sub pop lock push xchg and xchg fimul xchg add fisttpll psrlw pop pushf test jno cmc les dec jns xor xor push (bad) dec xchg mov icebp rcr les cltd nop sbb je mov pop or popa jmp inc jo pusha aad dec in fucom cli fldenv mov popf mov push scas mov xor xchg ds cmp sti pop push sbb mov outsb push sub and mov stos lds out aad faddl iret jne scas repz and sub call dec pop mov repnz hlt insl jbe and pushf xor call add xor push je jge xor pop ljmp push xlat fdivrl push lret mov in jge xchg cmp dec pop cmc inc jno mov div ljmp mov ja push aaa (bad) imulb popf lahf pop jbe pusha aam sub aad sahf add mov fs or mov popf cwtl jg mov jno cmp (bad) xlat cmp aaa and (bad) pushl xchg dec push xchg cli cli insl test push cs adcl jp push iret pop or push sbb adc and in pop push outsb dec add add testb adc fcomp fwait (bad) cmp or mov imul mov rcrb fs fnop pop rcl in push lds mov mov ja sub les js fs stc imul aam xchg sbb cmp adc adc xchg mov inc xchg pop in xor fs sbb sub add lods pop ja fsubrp dec loope das in xchg xchg xchg sbb cs fistl and lock pushf stos (bad) dec into es add cltd adc mov jo dec fcmovbe and or xchg (bad) sbb test ss loopne xor jns fidivrl push ret ficom test push jnp mov out sub pop loopne test outsl lods xorl dec js adc cmc add jmp cmp lods pop pop xchg repz or dec fmull mov sahf inc in mov das dec or fild xor fist pop test lds cmpsl (bad) repnz or xor out (bad) pop add adc aaa dec imull mov popf mov sub xchg sub sahf adc push fstpt jp jecxz ljmp pop sbb insb xor inc jmp add or and daa (bad) andl jp sbb mov fldcw inc movb (bad) jle pop fist outsl movsb inc inc mov mov out repz inc out and mov dec pop shr inc bnd fdivr lods push sti cli fdivs scas bound loop mov shll sbb or pop jecxz imul pop sub cwtl cmp inc cli cmp out pop cmpsl roll fs pop sbb adc repz and mov call out or aaa xor jo fcmovb fsubrp lods pop mov pop addr16 push jo inc pop jl lret stos movsb scas test gs cmpsl mov scas lds aad cmc xor movsl mov scas jno je,pn not add and pop cmp jl dec repnz pop out icebp stos jae push (bad) mov cmp xor fbld pop sub jp lret push insb (bad) iret ja fadds pop es mov test push loop cld addr16 cmp xchg dec and jecxz pop loopne bound adc push stos loop out out iret (bad) lret jne loopne xchg fdivrl iret clc repz push pop cmc and add inc xorl mov rorb mov dec shr dec pop jae fnsave pop fistl dec adc mov (bad) (bad) pusha xor mov add notl test pop fdivs pop dec dec xor repz xchg cli mov xchg outsl push xchg adc movsb and mov sub pop lods push add xchg arpl jmp jno std xchg fwait (bad) inc cli (bad) jg out mov inc push idiv roll jne cld mov inc jb adc leave inc cwtl inc inc sti pusha mov mov mov cmpsl popf stos jnp lret adc into sarl mov sub lahf sti je jle pop into ja adc mov icebp shlb cmp push sub push outsb pusha push inc test into (bad) out dec jle and mov jp gs pop ds loopne mov jae fs xor cmp dec jmp mov stos xor (bad) pop lldt insb negl out pop cmp jns fnstcw in movb xor mov push insl mov add mov inc cmp fbld or js pop push lock lds fildl inc sub cmp sub mov sbb daa mov mov call xor pop out fwait jnp je inc push sub push jmp scas adc movsl pop int3 dec lods xor in sets mov mov sub push xchg mov or lea aad (bad) mov loop xchg pop nop mov xor aam ds cmp mov lret xor rcrb data16 jo (bad) adc xor nop mov test mov push movsb push mov roll movsb and fcmove repz test lcall push hlt pop mov movsb xorb mov push into lods repnz incb sbb cmp xchg (bad) mov sarl stos xor push or lret inc cmp jmp mov arpl xor sbb push data16 xchg and mov push psrld fcmovnbe mov xchg sbb test adc push jl dec mov icebp xchg repnz imul mov test push inc mov jns out push (bad) mov pop inc jo test scas pusha push inc and test dec push add xor leave (bad) mov sbb cltd (bad) das adc add sub cld in xchg cmpsb in and ljmp push mov pop test in in cmp test or fnstsw pop ret inc push sub aaa adc sub mov scas js,pn lret jne push fcompl cs pop add inc cmp xlat inc fisttpll les fwait add aaa mov dec or or scas fsubr lcall mov adc sub ljmp and cmp aad xor dec pop jp lret rcll mov mov shr adc repnz in imul cmp ret cli pop insl sub into shlb lock inc roll int3 leave and iret push arpl and jb out jge or ret out pop sarb and and pop xchg cs xor (bad) lea xchg pop lret cmp outsb (bad) movsb repnz outsb mov int or mov push mov dec sbb (bad) push mov lods cmp lods cli std sub das dec mov fisubrl mov push mov pop sbb xchg (bad) ss pop std add sbb xchg fisubrl stos leave pusha mov ss xchg shrl out ss or lea push pushf jno mov call or jl and jnp mov rcr adc es cltd inc xor sub (bad) pop push (bad) arpl fildl stos and push adc cmp mov shrl pop cmp xchg jmp adc add lods dec sbb jmp hlt dec ret in rorb and stc xor mov (bad) push fst imul cmp mov (bad) xchg and dec sub dec andb dec add outsl cmp imul leave xchg int3 (bad) adc xchg popf scas pop cmp push mov scas pop mov mov loope xchg movsb outsl push push lret cmpsl jns hlt dec xchg subb mov mov add ret and lods add test out cmp xchg sub sbb scas push lds fcomp popa fisttpl push out mov shll cli imul pop fwait dec fnstcw push jecxz mov pop dec cmp push or xchg fs push push ljmp jp ja (bad) push bound cmpsl pop addr16 or popa mov inc lahf pop in pop rcrl pop (bad) into sbb add dec xchg es sub sbb jno lret fdivs xor lods inc movsb push adc outsl cmp push popf je mov es push jmp xchg in sbb pop sbb fwait push sub movsb lea popa call add in enter leave pusha popa js add cmp cli mov dec sub into jb inc dec (bad) in inc xchg xchg mov lahf das inc loop xchg jb cmp add (bad) ljmp pop sub arpl insb aam loope xchg add (bad) jl xor aad pop rcll imul das inc ss inc pop add xchg pop mov adc addr16 push jge adc mov imul (bad) or aad insb push int3 fdivs jmp arpl mov push repnz xchg fsubrp int3 aas mov ds inc shlb je jo stos mov and ljmp sti cmp cmp sbb mov or jecxz adc sbb push adc int lock pop popa ror leave adc jecxz fdivrs int3 or lcall in out arpl cmpsl fsubl stos xor mov pop outsl ret jne fcompl inc in leave xor cmp test pop xor jnp outsl pop pop sub fildl fisub jb int3 movsl xchg in jp sbb cwtl inc sub mov pop sbb dec sarb call pop imul ret inc bound dec std inc loope cli ret pop gs adc out es inc sub xor (bad) mov cmp js sub pop xor push cli dec push dec jo icebp jno lret push mov scas fist out hlt sub stc xchg mov (bad) and in scas push pusha mov andl mov inc iret in rclb fs mov dec mov and leave pop fistp jl xor and cwtl iret out and xor aad adc mov xor jnp xchg xchg adc popf fsubs or ror leave inc lcall ret inc lret jge imul fnsave add inc test pushf mov dec stc daa aad dec lahf adc jbe or cli xlat cmp inc inc gs pop pop scas mov cmp (bad) mov dec adc sbb pusha test xchg xchg pop jecxz sub (bad) fdivl pop ret jbe das sbb inc fwait subl mov movsl scas insb mov mov cmp (bad) cmp (bad) mov cmp mov popa lcall and xchg or push xor psubsw neg and pop add pop daa mov jg aaa rcrb jbe into dec mov jbe cmpsb and pop sbb (bad) pusha iret mov inc fwait lret pop stc cmp mov and pop adc xlat adc adc ret bound clc jbe ja mov pushf inc cmp out loope cmpsb sub jl jle xor sbbl in in add lret mov push es bound mov (bad) cmp xchg push push pop fnstenv je es and gs sub push jmp mov mov mov dec int3 fwait in jp xor and dec (bad) ss lret pop (bad) popf sahf mov pop daa inc cmp sub jg into add push or and sbb fcmovnb mov push fdivp insb or adc movsb jle ss mov fnsave and inc mov cmp fist loope mov or fs or and stos mov pushf mov mov xchg jge loop sub or xchg xor je add xor xor jg jl,pt movsb rol xchg ret mov mov sub lcall test in adc and fnstsw out loop adc popa push sbb (bad) shll pop aam div add mov not cli pop out (bad) repnz insl jp push cltd jg popa outsb xchg mov mov jmp fidiv popa sbb rolb (bad) mov repz out ljmp imul pusha push add sbb inc pop and pop aam pop loop pop fmuls out mov mov out and scas cmc jae xchg shl out test scas push inc add cmpb and push xor sub xor mov mov mov add jl mov push jb lcall push mov or sbb sub push jae or das pop cmp (bad) mov stos dec mov add mov cwtl cmp ja push ja or jecxz (bad) pop or xorb sub stc outsl ja fstps mov mov fs push fldenv sub std mov push sbb xor aam dec stos push std push push movsb fwait fwait subl loop or sbb ret popa or loope mov push rorl jl push sub int (bad) mov aas iret arpl or mov cli jge add je jmp and lret xchg lret int3 dec xchg pop xchg arpl and dec ss out jne pop mov push sub pop sub pop cld gs add mov fcomps lret out dec inc addl push inc int3 sub jae dec (bad) sub data16 pop (bad) jae daa dec repnz pop pop and fild dec scas sbb cltd or aad and in mov es imul pop adc ss orl inc adc sbb ret mov jno loopne int3 mov in ret aam push mov cld pop xchg iret (bad) in fs xchg mov rorb xchg es lret es mov push movsl pop sbb (bad) push push xchg enter shrl cmp call jae push add adc or fidiv push add jb ret jne,pt add inc mov sub push rcl mov push in jmp adc or ds loop push jae sti inc mov and jge insl in add (bad) xor cmpsb call cmp ficom repnz sub mov subl (bad) or aaa test jp out movl enter xchg mov mov enter sahf arpl int3 scas call rcrl imul dec loop pop sub pushf out mul and sbb (bad) repz icebp adc (bad) jno mov lret out jl ror mov jnp xor push sbb jp movsb or movsl test xorl test jmp sub sbb outsl mov clc lods cmp add xchg mov cmc jb mov call jno sbb xchg cmp push enter scas pop imul out test std jo mov jo (bad) arpl cld push push push pop stc call lret and mov out pop xchg push sarl mov repz mov sarl imul adc add cmp cwtl cmp xor inc (bad) mov sub jge pop sbb imull sarb xlat inc jecxz popl xchg loop stos mulb adc inc xchg stos mov mov add xchg es and and inc dec add pmulhw frndint pop pushf addr16 or sub mov lahf sbb cmp sbb aam jecxz mov or push sub incb cmp leave cs pusha mov sbb in and and enter repz sub out psubsw (bad) and int3 xor repnz frstor jmp cmc mov fstpt mov mov and out lret jmp mov ljmp jg jle das sbb lods push add and out enter in adc jl popa pushf or push mov cmp fstl es jmp data16 rolb mov cwtl push pop in add cmpl test or fsubr jmp ss lret ret or xchg scas leave xor mov pusha call pop cmc jecxz loop dec xor out arpl mov jp push pop xchg cmp mulb xor cmpsb cmp inc arpl pop data16 cmc add int3 daa out js inc loopne push arpl cmp add jnp movsl mov mov enter (bad) das push pop dec cmp pusha lret mov sub push movsl insb ss call xchg push xchg stc lcall xor loop jno inc fidivr int mov pop out mov or push hlt incl xor fstps aas adc hlt inc test jmp lods xchg xchg cmovno mov ret cli movsl xor add jp ret loop xor mov pop outsl sub popf push popa mov jmp xchg ret (bad) stos adc insb add jge insl xchg dec iret jecxz cld scas insb lahf sbbl or push mov jns shlb movsl decb mov aas fsubrl push lods scas in jl test mov test adc pop cmp mov cmp subl jecxz jb pop lret mov jmp das aad mov out lock jo cmpsb ror mov clc rorb jo cmp popa mov dec ljmp mov out in xchg nop call push jp popa (bad) jne and loop std xchg mov or xchg and push add add imul ds xchg mov jl jb je cmp xchg sub xchg jl lea add jge or mov daa in iret clc in dec jo and fs fsubs fcompl mov movsb aad ja popf pop mov bound je lret pop jb jg rorl mov and in dec mov jle icebp xor daa movb mov sbb popa mov jb adc mov mov jbe xor ret je pop sub aad mov mov dec adc aad cltd add aaa roll adc push lods pop movsb int (bad) and jns push dec mov mov push loopne das int3 jne mov stos idivb cltd dec pop mov mov (bad) xor sub bound pushf cmp cmp sub push xor or xor (bad) mov mov hlt cld lcall (bad) clc push jo test pop adc dec (bad) in imul inc cmpsl add or das add outsb mov fcomps ds inc mov xchg mov push add ja cmp mov leave (bad) push and punpcklwd dec (bad) cmp test das hlt adc ret insl inc add hlt stos xchg stc pop scas jmp js nop (bad) mov dec xchg push xor pop addr16 cwtl mov pop sbb arpl inc inc js cmp test mov and inc jnp sbb sub jl cli fistp sbb fwait cld ficoml sti add push jbe imul mov jge push fidiv push outsl mov (bad) fldl2e sub test pushf movsb or fdivs sbb icebp jb lret jp push inc jbe or jmp mov ret push mov or sti adc sub fistl leave push xchg dec and adc xor inc imul stc movsl (bad) sbb push sub in adc jge and xlat ds inc arpl pop pop cwtl int3 pop fild movsb das mov roll sub jnp sbb dec mov and cmpsl loopne pusha push dec mov dec je xor pop pop mov cmpsl pop mov cmp nop or aam (bad) iret pop mov xorl adc out ds push test int (bad) lcall adc jnp leave jl pop xor fwait jl mov shrl leave (bad) ret in stos movsl pop ja add sbb je,pt cmp sub dec fbstp xchg xor lds daa ret stc insl outsl data16 adc push jmp daa adc ja imul rolb sbb mov in jnp sbb sub mov gs mov dec inc es out and iret js jmp sar jb test popl jmp or jle lahf push lcall lcall adc mov aaa adc test inc and ja mov jmp pop test lahf adc jle inc xchg pop out lret idivl cli adc lcall fsubs add inc into mov inc jg cmp iret adc lahf jecxz in push aas push and sti mov (bad) xor sbb xchg xor into in jno mov fs push lds mov sub (bad) int3 sub dec loopne (bad) and add dec inc jb sti push movsb std mov jae into sub insl ret pushf xchg enter or mov or or icebp test out into repz les in aaa sahf loop xor lods in cmp or jmp cmp mov cmpsb mov fsubs fs fstpl mov sub jmp or fisubrl pop mov sti in sub xor sbb loop jg sbb test (bad) mov jl lahf cmp js lret call sbb and xchg mov mov (bad) mov lds sub in sar sti lea loop ja dec iret sbbl leave xchg and or pop in fidiv jl push loopne test or cmp and mov rcll pop push or jb mov inc lret mov dec inc jo loopne pop inc adc loope xchg (bad) push (bad) repnz cwtl jb adc fisttp mov adc fimull fmull ret jge fisttpl js push add (bad) cmc loop add lock adcl outsl lahf stos or lcall decl aam imul stos rorl push inc stos pop pop nop scas scas dec ja pop popa adc test ja icebp jle sbb pop stos scas jno enter test int3 fsubrp sub jmp jecxz scas mov iret enter add push adc jae jbe jecxz pop dec (bad) xchg fwait pop inc cwtl mov mov in rcr rep xchg push jne push add cli int3 cmp call xchg movsl sbb out decb ds push inc cltd or mov clc pop jp adc mov and ja imul sbb mov (bad) sub sub lahf mov push mov mov sub pop xor (bad) out out rclb jg xchg adc mov pop bound or inc mov insb lcall and ret shlb mov leave inc fcompl jmp mov sub sbb js js dec xchg call pop xor movsb mov das das sbb movsb dec pop test mov push inc outsl dec mov cmovno mov cmpsl jns mov cmpsb scas pop mov notl cmp mov and (bad) hlt mov les popf fisub fbld (bad) clc xchg rcrb mov lcall insb ja mov jb push outsb push mov lods fwait cmp pop mov into das ljmp enter jo (bad) loop dec adc and mov (bad) mov inc push adc cmpsb and cmp cmp mov (bad) add lret mov dec imul idivl sbb inc mov sbb out push and cs mov loopne negb repz cmc xchg or mov out loope sub add ja lods add dec mov push fist sbbl dec aad xchg std mov sub jmp cltd or je js scas ljmp call fstl adcl mov adc in stc ret mov loop push dec imul call xorl jnp loopne sbb jle sub add dec add test fisttpl aam fnstsw int3 inc inc cmpsl lea pop adc rorb pop out stos xor rclb xlat call and inc outsb add and test jne lcall inc loop adc adc xlat orl or cld mov xchg aaa loope inc es and es fstps mov stos pusha sbbb jecxz inc test in jb or outsb ss enter inc sti fistpll sbb das xchg (bad) jns sbb add cld repnz add popa in mov mov pop outsl ljmp mov lds or push mov push popa mov or aaa lret mov add rolb mov sub rcll fistpll fist in mov sbb add insl cmp test mov pusha inc pop aad push popf jg imul bound jecxz jns jb mov clc jg lds gs leave cmp sbb lea test cmpsl ds pop scas xor cmp add out cmc pop jae push pop sub cmp dec jg pop imul cmp mov pop sub in call xchg aad daa pusha push inc xlat notl arpl xor xor aas sbb mov xchg and mov mov jmp loopne orb pop in jns jle cmp mov and (bad) pop loop adc add push loope xor mov fwait push xor call xor adc mov mov frstor and and mov adc negb iret dec stos test sbb (bad) pop sbb fnsave xchg sub loope insl mov into pusha jo sub jnp insb sbb sbb add xchg pusha jp jle out mov (bad) rep mov js push aas cwtl xor ret popa cld or call mov fucompp fwait arpl hlt dec jmp in jns sbb cmpsl jno cmp mov rcr (bad) dec or cwtl sbb push loopne adc call das cli mov testl test loop push dec gs repz data16 pop mov xchg inc inc mov arpl sbb ljmp stos and ret xor fiadd lods mov mov cmp push mov jo and push mov test mov aam das into pop (bad) inc add lea bound cmpl and inc adcl je test sbb cmp adc add and dec insb (bad) xchg rorl inc jle stos adc jg mov fldcw xor (bad) into sub fstpl imul into movsl test clc inc jnp xor xchg dec push cmpsl xchg dec inc push test xchg push ss and loop lret aam push add into ja lea cmp add and jns dec fwait pushf movb inc push mov push xchg adc rol loope mov shlb mul in jo mov mov xor lret lock and cs fist mulb push loope les jmp pusha pop jae iret or sbb aad shrb pushl call cmp push cmp or jge pop pop les mov cmp cmpsl push fldl adc sub cld pop push lds shrb (bad) push (bad) dec test insb jecxz adc push ss lret sub pusha mov cmp test lcall or pop mov and push xor inc outsl mov loope dec jns pop insb jbe (bad) or sub mov js xchg mov (bad) rcl mov add mov jmp sarl aad jae fldl push add inc fidiv inc mov jecxz push mov lret push enter mov lea test adc sub std mov nop clc mov push cmp and mov mov mov xchg lods cmp or mov dec dec add push mov or jge sbb loope pop ja xchg push test out das das xchg lea inc vpaddusb in sbb push fist cwtl push pslld fsubl sbbb sbb pop add add push (bad) mov mov mov sbb shlb mov inc ja aam pop lcall imul dec sub sar jg inc inc imul and (bad) lret pop ljmp jnp pop and xchg imul clc pop lret and and movzwl or fistpl (bad) inc adcb out xchg sbb loopne mov imul jle add dec mov out mov lcall je sub mov xor (bad) (bad) notl cld pop loope pop dec xor insl dec int jno (bad) mov stc dec pop pop jo into jo mov lcall xlat add mov call add mov pusha cmp push movsl std outsl subl mov or cmpsb cmpsl mov jns jae dec cmc idivl fucompp adc jecxz adc insb pop bound dec mov movsl xor jecxz sub fisttp nop je jmp pop loopne ljmp xchg pop test dec (bad) jnp fwait or sbb call push testl in xchg leave xchg push xchg push fstpl and push test popl and adc loope pop fwait aam mov repz jp jb or mov push insb add das ja or test xor ret or mul lock std sbb (bad) mov cmp ret xor mov mov push pop or cmp jne xlat push (bad) js insl mov inc lret insl xor out jne or dec ja inc mull mov lods or mov int pusha les add call pushf dec stc call gs jge sbb cmpsl leave ss js xor les mov add jae imul in mov xlat or rorb inc xchg lods test push lahf mov inc leave fldt je xchg aaa mov (bad) mov dec push cmc pop mov int cmp cmp or loopne cmp inc push aam push movsl push cld mov dec std loop repz adc mov cmpsl stos jle test mov jne xchg sti pop jmp or and cltd movsb lcall push pop loop imul addr16 les test cmp repz (bad) inc ss fisttpll mov jmp (bad) jle sbb out iret hlt push ret sub pusha xchg sbb test pop das lret xchg lcall pop sbb mov js icebp mov bound pop mov push outsl das push outsl bound sub sbb mov sbb mov mov aas cmp rcr fcom int3 enter gs fild fcomi test mov or dec outsb dec inc jmp mov fistp lret cli scas dec sti mov or insl bound mov sbb xchg sub pushf aam je sub cmp inc (bad) lret cmc xchg push in mov xor js leave iret cs push xchg xor aas jo mov iret or jo (bad) fstps sub arpl cld subl pop leave push inc ret or and push pop jb xchg sub movsl dec lret inc testb inc inc test cmc stos std pop push pop mov cmp scas pushf cmp xchg mov push mov jecxz sbb bound inc jmp je insb push mov add test mov lds push lods cmp adc cmp dec icebp and push mov test jne xchg push lret fstl lret sbb out out stc outsl fabs or insl jb xchg stos je push lock jmp jmp test cmc push and mov dec ss jecxz cmp push shr repz ret ljmp sarb lret aas jb pop les scas jbe dec stos rclb lcall fisubl jl movsb inc jmp ds rol leave test mov jmp test jle leave (bad) (bad) out push and cs lea mov into adc aam cwtl icebp pop cmpsb rcrb mov jo out add mov mov ret sub push jle cmc mov or and test mov dec mov mov leave pop je int sahf test mov jecxz rclb inc xor pop mov adc xchg fdivl pop test dec pop (bad) xlat (bad) xor out dec cmp div leave out adc orb (bad) mov jns mov and mov sti pop clc mov xlat pop inc fstl (bad) pop jmp mov adcl idiv push mov and (bad) add test mull outsb shrl dec mov push loopne iret jl rcrb jp inc and mov and jo adc pop sbb pop xchg (bad) repz mov mov jge mov fiadd dec jle push je xchg inc xchg aas out adc xchg push pushf xchg xchg mov sub pop adc vmptrld push div int3 subl pop or imul mov jge out (bad) cmc pop jmp shr adc iret dec aad fsubl insl stos rorl pop sbb ret ficom or fsubr stc jo inc or xor push mov mov mov andl sti sbb int pusha lcall enter rcrb sbb sahf (bad) xchg ja xchg imul or arpl data16 fdivp inc mov sub xlat xchg scas xchg mov sub jl js add aad xchg xchg mov lods lea xchg pop loope jp int3 (bad) shrb xor scas xchg mov xor mov mov into cwtl mov mov movb cld mov add rcll push pop outsl xor and add in jbe sbb jg jl mov push (bad) arpl adc pop mov pusha xor jbe jmp pop push adc (bad) pop popl jmp jecxz aad mov dec shll loop out mov add imul sbb xchg shll jge loopne jno mov jp (bad) es xchg lds dec inc pusha mov rcrl daa add sub add fnstenv repz leave fisub cmpsb dec (bad) and int3 adc and xchg in mov mov test mov and lret sbb fmuls adc aam in or xchg cmpsl clc or sub add dec stos fsubr jne dec add or call leave lea sub mov (bad) idivb xor mov add iret adc test jp out adc lods movsb xchg dec ljmp dec dec push pop icebp mov lds pop test push outsl sub jl add mov sub in xchg mov cmp stc rolb jae scas mov test pop pop cmc add test and push stos sub (bad) or mov adc loopne out loopne lods mov insb xchg push jns in dec sub sub and adc and mov pop xorb pop inc or stc movsl lahf enter add adc add in ret mov stc dec mov lods fsubr je movsb mov imul popa or dec or xchg jbe dec fst pop daa push cmp test cmc xchg lcall xor cltd outsb popf pop mov cs test mov mov insl les jecxz enter out xchg mov repz aam inc lret jmp sub ss test xor fdivs xchg jbe and fild sar jmp inc add jno clc and cmp inc dec pop xchg mov sbb xor sarl sub inc sbb mov xchg dec xor mov pop movsb mov add cmp xchg insl sahf mov mov push lret fdiv push xor stos and aas xchg sahf aaa mov jmp rol pushf push add in je rcrb push and daa sub pop add (bad) jae pop inc pop sbb mov (bad) xchg inc jl jnp jge cmp leave mov add fsubs pop ljmp mov loop or test scas jno mov jns xchg xchg (bad) sbb mov xor fs icebp sbb ret cld dec aas lcall dec int jmp push jecxz stos inc call cmp fdivr or jmp jmp mov fs push stos or (bad) pop cmp je adc xchg add (bad) repnz js stc mov dec jo jbe (bad) out (bad) loope lahf lea jge sbb sbb test pop shrl adc (bad) inc jno cmpsb mov idivl std add sti adc rorb xchg icebp sarl test shrb cwtl (bad) rorl out adc inc push inc (bad) lds outsb imul imul mov cwtl push xlat inc sbb loopne gs clc sub jns mov lcall cmp cld aaa pop insb ficom xchg lcall mov roll ljmp daa xlat pop pushf adc dec ja enter jmp mov sub dec (bad) xlat icebp inc aaa dec ret and jnp das hlt popf data16 (bad) inc pop out cmp cli fstpt ds xor int3 pusha pop (bad) push push pop gs mov bound mov cmp inc insl pop inc inc outsb jge jno sub jne sahf les subl dec push iret mov add fdivs add mov add (bad) ja mov push and pop mov pushf pop mov cltd xchg add out cwtl (bad) adc (bad) mov mov testb cltd cs xor int insb pop les xchg subb int3 aas and sub adc fstl push fnstenv xchg jge inc push stos cs adc xor dec imul sti xorl sub and inc and daa imul pop (bad) jne es je jmp sahf stos scas lods jl loopne adc sbb adc mov xchg sarl xchg add (bad) movsl ficom das xchg lods lret adc pop jecxz lds arpl adc aaa dec int push adc stos lcall rolb and cwtl push cmp mov repz movsl push lahf inc inc pop lcall bound xor inc dec add and (bad) testb fmuls mov pop sub int3 insl sbb outsb push out mov inc xor and push pop mov pop jge push and xchg pusha addl ror sub and xor mov aas imulb jae int3 daa dec mov inc fadds (bad) lods mov test mov push sbb test fnstcw jne mov jecxz call dec jg fwait call add sub and lcall cli mov lods lcall jne aam xchg setns lret insl inc test sbb cmp xor jmp rclb dec jno xchg sbb testl mov (bad) (bad) sbb xor out or insb ficom cmp mov mov jecxz jecxz das daa push mov icebp dec data16 dec push stc cmp lahf mov push mov jle daa dec cmp incl xor addr16 popf cmpsl jno lret sti mov and es cltd stc xchg adc mov push jb rcll xchg popf push or std mov psrad and xchg rorl jb jns dec aad or int add imul rcrb subl aaa dec outsb (bad) mov (bad) mov xchg dec inc rcrl and cmp lret sbb pop lea fsts xchg fidiv daa bound and lahf and out mov sbb subl lods out scas stos ret mov lds shrl pop push push mov mov imul notl sub pop jl xchg popf push or mov pop loop (bad) out cmp xchg mov mov add sbb (bad) ss xor imul jecxz mov mov and stc arpl cmc mov push loop iret in and loopne cmpsl pushf loop cli (bad) lock pusha dec and mov out or xor xor cli cmp dec xchg inc movsl add dec mov scas inc loopne adc dec cmp (bad) cmpsb test outsb scas or (bad) jg inc mov dec cmp aad lret push lahf jge hlt leave out je xor mov push jne push or movsb dec pop fwait fwait aam in pop xor cli mov mov pop mov rorl add pushf fiadd fadds xor insb sbb inc mov push sti pop les lret leave leave push ja xor fcomps test out fiaddl mov stc je sti into leave xorb dec stos xchg lahf movsb fistpl sbb out pop aas (bad) jg cmp add in out lock or rcrb jp hlt sub dec sub and ret cmp nop mov push mov addr16 stos inc mov push jl cmc repz dec pop enter cmc inc or dec cltd cmpsb lret (bad) loope push inc enter (bad) icebp lock test adc push repnz or sbb inc mov movsl int js ljmp sbb push stc push inc jb int nop clc mov cmp xlat iret mov pop fistp notl test sbb push mov in frstor or mov inc cwtl stos add sti mov cmp pop cs es fistpl test cmp mov adc or aas fcompl fsub fsubl test push jle add mov outsb cmp adc inc and sti ljmp (bad) jae pop cli scas adcl jns fsubrs cwtl mov inc cmp ljmp xlat mov imul add insb sub fildl stos fisubl push xor sarl sarb mov xchg lods lods inc inc aaa inc push mov or addr16 sbb fcmovu cmp and lret sbb dec xchg dec mov and int3 mul push push inc popa pop std mov or lret loopne das enter mov xchg inc push enter inc mov arpl jnp or mov std in imul das cs movsl mov lods lods mov stc mov movsl lret fs dec imul imul sub push incl mov test (bad) mov xchg fs jae push add cs not push jecxz mov sti fwait mov xlat sbbl enter ljmp cs dec (bad) divb cli js fs push fsub lock out in lods push adc (bad) mov popa in ss aaa add dec jge inc fwait xor stos xchg push jo stos or jge pushl and sub pushf test daa mov (bad) scas fcompl pop (bad) fnop cltd sub mov pop mov jnp sbbl dec in push ljmp repz sbb test call inc cmp dec ds or movsb adc andl push fwait xchg insl movsl sub sbb int3 xor loopne (bad) repnz add xchg (bad) jne push adc in ja (bad) pusha sbb pop test test cmpsl xchg insl data16 cmp or insl sbb les faddl cwtl jle shll lock lcall pop decb loop ljmp lods popa scas out jno (bad) jns testb les (bad) xchg adc mov mov pop or jmp daa rolb xchg test jbe sub sarb adc pop clc add xchg je repz (bad) (bad) in push adc sub icebp daa or test adc aam pop dec xor cmp mov lds (bad) test cmp jne sub inc xchg jno in pop jg leave sbb (bad) leave pop gs pop fcom jmp mov adc mov test lods and in movsl push inc lahf mov xor xchg aam adc jns das mov pop icebp cli in jns test cmp adc cmc shl mov sub pop cwtl inc cltd gs test pushf test in adcb (bad) in or cmp mov (bad) jge or jmp push or aas fwait pop jno loope adc jmp mov push and aam fisttpll aad xor cltd in fldcw test xlat mov and shl xor jns xor dec ds (bad) jmp incb push ret mov and pop add cmpsl or daa rcrb xchg inc adc jl (bad) inc cmp dec in or lret cwtl arpl (bad) lea out ret push enter idivb mov xchg adc (bad) dec je adc popf pusha jge sub rcrl (bad) or push or push call jmp arpl pop adc mov scas ds adc ja movsl int3 inc pusha and mov aas insb add adc out std mov test stos adc insb popf add xor cmp dec cli outsl movsl ja out push in test dec (bad) out sub mov inc sub fiaddl std mov sarl jae hlt adc cld xchg fwait loope mov lret ja inc ss mov push inc pop fcmove jle into jns or outsl add call stos pop mov mov into out xlat jmp bound gs test insl out and repz lahf stos aaa push jmp push jno jo xchg test push sub mov xchg sbb pop cwtl cltd adc push pop dec cmp lods mov addr16 pop adc push add scas das mov or dec pop (bad) sub mov aas adc push pop je jle pop cld xor (bad) jmp cs ret pop lcall jbe test jb int3 loope xchg jno mov dec sub pop push sub or (bad) dec push mov popf in push lods daa (bad) gs jbe xorl test jp sbb inc not cmc test in (bad) push jo mov jmp shrb inc push fcoml pusha (bad) xor mov mov addl scas push lcall inc movd lcall test lods (bad) jae jae xor lahf xor adc je (bad) (bad) lret jle outsb repz dec movsb mov stos popa xchg fildl ja xchg in ljmp je in lods adc mov out and adc daa icebp adc rcll push out or pop in or cmp push pop rcrb sub xchg push sub rcll cmp xchg ss ljmp sbb add enter xor (bad) fmull js xchg imul xor jmp bound cmc mov lcall xchg mov outsb xchg inc push or leave loopne fldl out sub jbe outsl sahf js mov mov mov loop jl,pn mov and cmp jbe mov adcl loope sub (bad) sub addr16 js cmc sub jns mov inc cltd fdiv mov xchg sub adc cwtl (bad) and lods mov add repnz adc hlt mov mov fmuls push loopne ljmp int3 aam xor dec cmpsl push hlt scas xor pop gs pop addr16 inc push hlt idiv lods push les sahf iret fdivs (bad) pop xchg test dec inc inc push adcl dec mov (bad) mov fwait mov push dec stos lcall test xor mov (bad) sbb jbe dec das (bad) pop enter mov fiaddl push or outsl fsubrs fmuls jnp lods dec fmull mov push hlt (bad) mov in test pop xor xchg call nop xor cmpsl pusha lds inc jp mov and cmp fmull fwait ret mov mov cmp push daa je jp fisubl sahf inc mov hlt adc in and ficoml dec mov pop in xor sub aaa xchg aad fsubr pop arpl jg and or inc imul fnsave pop push xlat lret aaa sub adc xchg mov mov lock sub lret xorl outsb jp js das hlt push call inc les cltd popf dec fcompl int inc (bad) mov push inc lret jg and sub ret aad xchg arpl sub sub stc cli je insb dec mov stc inc in sbb lock ja dec pop pop js mov push cmp je lea mov xchg lods xchg add add xor cli data16 push and push das dec out and and mov test dec jle (bad) xor or sbb inc xchg popf shlb dec lahf rorb cmp fdivrl mov inc out jl loopne dec movsl jge mov inc inc jmp inc lea mov aaa and jb cmp int fsubrl push cs fcompl aam or dec add cmpsl jno add incb imul mov mov xchg js fldenv push adc inc jecxz (bad) (bad) fimull cmp bound mov jb shlb das xchg xchg loop jae dec inc loopne stos fdivrp cltd inc int dec into pop jp std (bad) lcall cld jnp aad (bad) stc gs outsb repnz lret leave cwtl inc add loopne and cmp pop pop cmp int3 enter loopne outsl jne pop mov nop mov fsubl mov xor pop mov (bad) clc xorl and jns ss cmp push leave add insl inc ret stc lods cmp add or cwtl loope adc sahf fmuls xchg (bad) mov dec inc pop xchg or jmp (bad) cmp daa ret loopne icebp xor xchg xor cmp mov cmp or inc pop outsb das jge xchg in test adc lock sbb aas into imul mov mov imul sub sti hlt shr xchg mov push pop push sub icebp cmp inc and cwtl adc mov mov dec std sub js cmp aas pushf and pop (bad) negl adc and jnp popf imull rcll std cld ja or sbb jno xor adc insb lock push ret xor inc mov psrlw jnp inc mov idiv inc ljmp lods dec xor hlt (bad) test cmp push xor xchg mov push mov cmp or push mov mov bnd sbb xor sub movsb in adc pop dec xchg int gs add sti out js dec inc push dec jmp add lds ror mov inc fs mov mov bound sub movsb negb int in adc ficoml in jb xor into daa data16 inc inc pop fimull mov pop xor mov lret fildl jns mov push adc xchg pop xlat stos mov js mov and jp adc xorl add call loope rorb and lds out mov push pop aam cld xor or data16 lea jle push push jno adc inc adc jp jle xor cli cmp dec jns in adc xchg jns repnz les push and enter mov aas push xchg pop in shrb or pop (bad) repnz fs fmulp mov jge mov inc scas idivl inc add push push lods dec jl xor push leave in clc xchg cld jae call mov outsb mov test and ljmp mov ret out push sbb push jae jmp sbb xchg push mov adc xlat mov lahf lahf push popa lret inc rolb mov jp or jo jae dec push lcall (bad) mov adc movsb jne adc fnstcw cmpsl sub shr pop inc or fist popf ja dec mov test lahf fisttpl adc andb or fildll scas and jbe and mov in pop or or hlt and pop mov lock push mov xchg das xlat and cmpsl inc or and orl mov loop mov or fistpl out dec xchg lods inc (bad) sub lea pop xor xchg sbb or pusha dec xchg mov js mov cmp adc fwait mov or into xor mov adc xchg fimull and inc pop bound aad (bad) cli xor cmc (bad) xchg aaa cmp in adc push fldl (bad) insb cmp lock sahf rcrb mov cmpsl std jmp test test jae and scas add js ficom mov scas dec jge cmp outsl arpl mov sti mov add jle das mov sarb pop sbb mov dec xor outsl das push push cmp jp test push fisttp pusha ffree es and pushf adc out inc inc lret or or cmpsb outsl mov add lock sbb jno repnz pop lret stos xchg movsb jecxz arpl cmp lcall hlt mov clc pop mov pusha out push imull sub stc fiaddl sbb mov sub outsl loop sub aaa xchg sbb jp,pn sub jne (bad) (bad) testb out test push sbb jbe movsb mov jo adc mov (bad) movsl test jb loop cmp adc and jp sti xchg out mov outsb sahf jl add cs clc nop int bnd inc clc movsb lahf fist xchg sbb pop adc pop push dec add out sbb pop andl fmuls test out std fnstenv inc mov cmp add cmp push and mov xchg lret add xor push jmp sbb fidivl sbb (bad) lcall (bad) push and movsb nop daa or jl sbb int3 cmp out mov xchg rcl js mov sti pop mov stos adc aas xchg adc adc pushf enter jmp test push cmpsl (bad) mov hlt popl add pop mov push iret fdivp test sbb cmp js fst jp sahf scas ss cmp test cmp mov test jnp cmp inc mov jnp mov mov bound sbb outsb add (bad) aaa push cmp js jae in push pop cli rol subl mov push jge sarb mov das loopne cmp push iret mov dec sub imul sarb idivl jne gs push xlat andb sbb and push lods mov fs ljmp int3 mov ret test xrelease arpl (bad) mov inc (bad) lret jmp dec (bad) or lcall jl arpl xlat inc dec imul add adc push aaa lds xchg (bad) std aam ss decb loope ficom lods or cltd hlt inc bound (bad) out or jg jbe lahf mov xorb sbb sbb or adc (bad) out mov jge in mov xchg xchg xchg ljmp pop sbb push jo test xchg mull out lods jo sarb cmc xor lcall dec les push jge hlt repnz cmp add arpl (bad) imul lahf inc and clc jo call das xchg xchg add cmpsb cmp cmp rorl rorl jbe shrb stos sbb dec mov jns jg xchg push lods mov idiv pop cltd fnstcw les pop push sbb pop arpl outsl int fmul xor mov jle cltd (bad) repz std adc lret out rorb (bad) call loopne and rorl aaa jmp mov out movsl insl push fs cmpsb mov xor popw loop (bad) or jno dec push jg mov and inc mov xor stos pop aas or repz mov (bad) out out das or pop sub ret sub popf or adc xchg out insb xchg push in lahf ja (bad) cmp mov or dec aad and int std cmpsl or mov mov adc ss ret xor lahf dec (bad) clc ret xchg dec aas adc fild inc rorl sbb repz popf dec enter fwait lock inc adc push (bad) cmpsl or dec adc mov dec repz aas add adc jb lea push and push (bad) xbegin add and mov lret repnz mov dec cwtl jl push cmp add add fsub push or inc pop mov das daa loopne mov add jl or rcll int3 inc jnp add pushf fstpl addb xchg adc cli adc out and cmp int sub (bad) test iret mov pop (bad) js sub jb nop (bad) imul (bad) sbb lcall pop outsl rorl cmp jmp cs pop lret (bad) imull pop sbb pop or cmp pop fsubl push rcll cmp lods push or lcall (bad) mov mov in (bad) repnz in jg cwtl loop add mov dec lret xor cmc pushf ljmp or mov shrb mov push rolb add pushf push shrl test jge mov cmp inc adc pusha fild in call pushl adc cmp dec pop inc inc ret icebp or andl arpl stos mov repz mov dec js sbb add cmp jge or dec cli pop insl sub pop je aaa scas lock jmp mov sub mov aaa clc mov pop cmp xchg ret imul jno ja add push sarl push sti imul bound add lods sbbb or les inc clc and lods ret imul shlb xchg (bad) popf mov mov insl push mov pop mov jbe push fildl jmp popa test fidivrl icebp gs dec lcall cmp mov dec mov xchg es mov ret dec ss lock ljmp mov cmp xchg mov pop jmp dec add sbb adc out mov lahf cmp jbe dec mov push adc sub movsb cmc xchg sub mov jle jo cmpsl mov xchg add cwtl aas push idivb (bad) les cmpl jnp jp in adc adc repnz mov sahf lret in xor mov or inc les bound in push or js fisubrl test pop cmc popa jmp stos daa js mov addr16 pop and je rcll or pusha inc in inc jecxz pusha xchg add repz movsl xor pop clc push insb mov popf pop mov xor sahf sbb out push repz dec int3 cmp lret inc cs mov cmpsl jg mov pop data16 call and mov jle (bad) mov adc mov dec shl adc repnz dec inc pop lcall out lods dec sbb cmp pop xchg pop push stos aaa push notl sbb sbb pop pop stos xchg stos hlt fwait jle out mov out enter movsl pop aam jecxz leave dec sbb inc movsl stos push mov pop in pop aas (bad) icebp dec cmp fwait push fistp push out aas mov stos pusha (bad) outsb cmp es pop (bad) ss imul cmp cmpsl mov mov aas outsb divb (bad) jnp in popf sub daa xor mov popf adc lcall mov enter jnp jnp adc scas xor sub sub or sbb cmp cmpsb adc adc jne repz loopne fcoms gs mov outsl sbb js mov add cmpsb mov mov je test sub and pop mov ret cmp cli xor mov ficoml imul mov jne cmp push pop rol jo in (bad) fbld add mov or pop lods enter das daa xor mov sub mov mov mov int aam mov sub rorb jnp or aas cmp mov push sbbb das cmc adc lret pop or setno pusha jne and and xor xchg jae sti pusha adc mov adc jle mov pop inc inc lds push fisubl mov lods movsl gs sbb sub out sbb adc addr16 test lahf ret push bnd push aaa fldl lods lahf sarb and and in clc cmp out ret loop lret and pop jle inc (bad) stc push sbb mov xchg movsl pop push out imul imul stos adc mov lods mov sub jb jp test lahf fistpl test lahf dec lret fwait xchg mov xor repnz xchg jne adc mov int sub push jo push and dec out lods shrb testb lsl xor call (bad) pop lods push fistp inc in push je das shrb js lret sub or mov push syscall sub jnp popw leave fcomps push mov les icebp cmp les outsl xchg sbb add pushl jno and ss xchg mov outsb pop inc sub subl inc movsb dec sub dec insb jmp jo imul mov insl mov popa mov rcrl mov dec andl mov cmpsb je lock push pop jmp out inc in movsl jecxz je lret aad pop or neg fisubr or jns mov movsl int3 out movsb jp dec jmp add cmpsl in jae (bad) lret (bad) mov stc das fs js mov jno jae sub mov dec addb test fwait (bad) and daa jge add mov scas xor ljmp sbb imul imul leave jle das addr16 movups or mov nop push sub js ret dec xchg scas dec leave mov mov in jo fwait in pusha stos adc pop lds test js mov fmuls clc rcl or fcmovne dec call popf cmpsb xchg cmp cs xchg outsl daa push mov scas adc repnz aad imul daa aad jl jbe rcrb cmp push cmp xlat das lds jge and cmp adc cmpsl sbb int push fcoml push incb sub add fisubr enter jo ret adc fisubr pop mov mov and jmp leave fs mov dec cmp pop pop (bad) jl cmp xor (bad) or jbe add pop xchg sbb or aad (bad) add scas push repnz lds iret mov dec cs insb and arpl sub scas sub fcomps mov enter (bad) jp xchg xor (bad) dec (bad) mov jge mov (bad) std add sub xlat addr16 out test cli repz mov ret add out test push cltd mov inc addr16 cltd jmp push sahf aaa or pop xor cwtl jecxz scas pop enter and xor jbe gs imul stos or inc rclb inc xchg mov stc imul test pop inc clc or mov sub aas lret sbb out imul mov clc push sbb jo xor cltd (bad) pop adc addr16 cltd inc es stos jbe out shll mov sarl ret in push js sub (bad) mov mov add lahf and jl cmp insb mov outsb sub mov mov pop add fmulp sbb andb push push pop and dec fstpl sub xchg mov aas add js (bad) pop (bad) mov arpl cmpsb cltd jne (bad) mov lcall fadds jl push sub stos or or insb (bad) call add inc testl jnp mov lahf push roll inc je mov lea jge test and rclb jne pushf std push mov addr16 xchg (bad) push xchg mov xor inc add cmp flds pop hlt lretw push into jno outsl leave int3 cmpsb xor (bad) into jp cmp add pop xchg insl xchg (bad) cmp scas aad mov subl cs inc iret adc xchg pop cmpsb mov mov mov inc xchg jmp xchg shlb mov cmc pusha add dec popf inc lahf div xchg jle mov fidivr fwait and sub std popa adc lea (bad) jns inc (bad) sarb add xor std sub test mov xor divl push and and dec mov xor cmp dec xchg scas popf push adc inc in sbb fwait push hlt lock out out popa into xchg mov push jecxz insl dec scas lea gs cmp mov movsb adc xlat lds push fistpll jecxz mov dec mov lcall outsb inc sbb enter ret jl xor mov pop push test mov or xor and nop insl jae aam mov aad (bad) or imul mov or xor jb xchg mov pop mov pusha push jb adc enter jae jmp jg or sub test mov lcall jb sbb aas inc ret mov pusha lret push out jae lret xor je jecxz pop lock and push or outsb in sbb jnp add jecxz scas jg loope cld les xchg mov dec inc fdivrs mov mov pop stos xor int out jne fnstcw incb js sbb sub pop or adc adc pop scas jge xchg lds test mov mov inc mov sub fdivs test (bad) dec push lret aas inc jno xchg or stc nop shr jecxz push push ret out xor ret lahf ljmp sbb loope test stos popa jnp fs sbb dec fwait sub push lahf (bad) jp (bad) icebp (bad) cmp inc lcall mov aam les cmpsl enter leave xchg jge add xor adc (bad) xor mov sbb pop jno jecxz test push mov out (bad) cmc or adc inc sbb fmul enter idivl inc mov sahf mov mov jle sti cmc or pop mov popa into or divl repz cmc add mov in mov repz push jge or or shr lret mov fild hlt jo push mov fsubs adc (bad) jle or add std mov inc pusha add dec call imul ds mov push and jge pushf push sbb loope cmp mov xor cmp sbb cltd sub push pop je pop daa std (bad) fisubr loopne add xor jp sbb sbb andl push dec xchg and jo lock int3 jecxz sbb popa add shlb mov (bad) aad nop repz or lret rcl loop sahf add shlb inc sub outsl mov int lea iret push jae ss mov add jle jb mov mov lds stc adc xor nop cmp rcll daa sbb mov mov addr16 xlat mov sbb pop mov jno pop movsb sub fsubl push (bad) mov sub sbb iret pop lcall insb pop cmp xor into dec pusha les xor icebp pop mov xchg inc add lock cmpsl push arpl pop mov xor rcl insl push cld stc not mov fild jg sbb jnp dec fldt (bad) pop mov pop xchg add sub push jno pop xchg jp cmp ret inc adc or sub sub pmullw push les in xchg cwtl (bad) jbe data16 scas jle jbe pop xor popf aaa dec inc rol loopne clc pop rcll or mov add and pop (bad) push movsl jg jb and and cmc imul or mov xlat js dec sti xchg subl fild fidivl lret add push (bad) lret cmp xchg iret jecxz pop cmp inc out mov sub das push dec xor inc jmp sub xchg cld mul pop push jbe mov shrb xchg add pop jae (bad) sub and jge cmpsl inc lds lret dec mov pop (bad) stc lea and inc mov sar (bad) jae sub daa lret cmp and xchg lret mov inc mov push in push test sti addr16 xchg cmpsl pop sbb imul push jae into and lret adc xchg mov jl mov lds mov popa stos push adc mov data16 call dec jns mov movsl popa mov dec inc nop sbb pop adc rorb lea inc adc dec mov push xor xor xlat and in jmp xchg call mov mov cmc shrl ret test icebp jb adc js add nop js lahf stos xor aas xchg cmp lods jae arpl and and and mov dec cld xor mov sbb mov mov inc inc push push xor shr aad fdivrl adc push es push scas cwtl test mov cld mov and es sbb int3 sahf xchg and fs sub inc imul je mov dec pop fnstsw lret pop xchg ret mov adc adc pop (bad) mov mov xchg and and shrb outsl mov es mov mov inc lock jbe dec push xor and fidiv into xchg ret pop jbe stos sbb loopne jecxz inc sbb movsb mov imul loop cli (bad) mov dec sbb addb and or aaa cmp insl aas hlt fsubrs inc jp outsb leave pop notb pop mov fldt xchg adc pop mov push aas sub push addr16 cmp movsl mov cmp stc mov ret cmp mov xor sbb xchg lahf ficompl pop push jo fistp mov lahf dec pop (bad) pminsw pusha mov lods push loop cmp and int3 mov daa stc cmp jbe (bad) ja mov das cmp lcall mov sub scas pop fnsave and xor inc inc out test inc mov gs add inc sbb mov push pop xchg add dec (bad) mov cmc cmp (bad) cld jo pop inc adcl call xor movsb mov outsb adc scas cmp fnstsw mov xlat std loop sub adc mov mov add movsl lods sub pushf cmp ficoml inc mov testb jg hlt outsl xchg mov mov sub scas push sbb out mov fldt inc mov test mov push lock iret (bad) xor add jbe sbb aaa aam (bad) jmp or inc or jp and adc imul ret sbb clc shrl sbb and outsb push mov ret inc inc int3 sub mov xor push dec pop xor lret pop mov fstps in sbb fistl and or push clc pop mov in inc sahf push cmc pop int sbb xchg stos lret pop rcr push int3 mov ret call rcll lahf xlat test clc insb mov mov xor ficom es xchg (bad) xor sarb sbb fsts fwait jne cmp sbb inc hlt inc push adc xchg rolb jmp pop and mov push cmp add xor outsl lock push out add jns cwtl lret xchg pop call aaa xchg cmp leave xor movsb ja or dec and jne or sub xchg sub (bad) inc inc and cs mov sub jnp cmp fxch (bad) mov je fsubl sbb dec mov mul mov les cmpsb aas shl orl dec mov dec adc and and mov inc pop pop js das adc dec add pop jno sub fs imul popa andb add call faddl cmpsl rclb (bad) ljmp test dec dec cld pop fld inc xchg push fdivr outsb cmp or sbb fsubrl scas lahf and or jl cld call data16 int3 mov sbb in stos insb fsts add lahf mov scas xchg pop adcl icebp int3 fimull mov ret push add (bad) sub cs bound stc pop mov add pushf insl xor mov pop cmpsb repz stc lods inc xor int jbe pop (bad) mov add push (bad) adc bound inc lods je ret xorb mov aad (bad) jp dec adc xor mov fisubr adc into and and dec pop fistl mov inc pop not adc pop gs ret outsl (bad) adc sub cli dec in cs mov mov and js dec popa (bad) jecxz jbe mov xor dec shlb or repz pusha jmp mov add jb pop mov aam (bad) cmp lds xor add mov ret cmp adc mov cli nop out fistpll mov xlat das pop daa das cli mov mov push cmc xchg aaa jecxz xchg mov inc pushf mov (bad) push orb xchg roll loop pop ffreep loope jg,pn jmp repz xchg xor repz je dec mov nop aas enter lods or sti decl jnp nop js ds test ss out (bad) (bad) or or mov push jle push sahf in push cld loopne mov xor test imul xchg add xchg pop mov push mov sahf outsb (bad) imul pop cmc mov xchg insb jne insl ret adc xchg test rcll mov (bad) daa sub sub push dec inc adc pop enter and adc in imulb adc fisubrl push loopw jp or fs and dec cld ja,pn or sub fcmovbe sub mov mov or cmp dec mov std cmc jmp outsl pop lods xor lcall js mov sbbb xorl inc shrb insl (bad) out test fist sub lahf mov lahf popa jmp divl cwtl push jg add scas inc sub fidivl cmc fstp leave sub inc xor mov and jns cmpsl mov xor dec aam fwait mov inc xchg or jge sahf test dec add scas add pushf repz test push outsb adc mov push or and orb sbb in jp loopne aam mov mov lods in mulb inc jbe js imul fild cld fcmovu out or xchg dec sub outsl jl cwtl cs push sub data16 cmp mov inc push mov fwait sub push iret mov insb mov jle aam dec jae mov loop ret and in dec xchg test loop sub adc mov imul add mov and push adc and jle daa mov jb sbb push adc std sub icebp sub fidivl inc lea xorl or sub jo mov push xor sbb popf subb popf jg jae cmp leave mulb mov jnp xlat into jmp insb je jp test pop cli call sarl call xchg mov (bad) push xchg lahf sti cwtl in movsb jns pop jp or adc data16 pop xchg imull pusha add lock fdivrl xchg mov jb mov xchg xchg pushf jl jmp adc int mov rorl dec add xor mov ljmp jnp push movsl (bad) cld mov pop adc pop inc es fistpll xchg pop (bad) sub and scas enterw pop out mov fbstp jnp in sub pop btc pushf dec outsb aad test outsb flds aaa je cmp and jp (bad) pop xlat ds pusha je test fildl or cmc and sub jg mov or pop push mov jecxz dec negl mov mov and dec fldenv repnz mov push in daa pop push insb pop or adc mov mov mov xchg push jnp xor in pop mov mov inc rol ljmp in jle,pt cmp imul push sub arpl mov push js lock test ljmp sub lahf cmp inc pushf adc cltd pop js out sub int3 mov ror push jns mov xchg mov fsts mov ror mov add and jnp push inc test cmp xchg push push jp in lods loope out addr16 xchg nop cmp push pushf leave (bad) (bad) jne or ja and jae ret sub push out lods call rcl or je repnz mov cmp and pusha sub or loopne sbb and push and dec (bad) nop pop xlat ret arpl mov imul push jle xchg adc mov xchg pushf push lods in sub lock sub movsl loop jl sarl into ja fild push push cltd in add pop (bad) ret arpl inc push sub mov outsl fldenv fsub xchg adc xchg cltd or cmp jae pushf cmp inc xchg enter aam push sbb int xchg cltd adc mov or jl sub dec add into or xor movsl add cmp stos jno data16 fs ret pop push fildl rclb aad cwtl adc call mov mov cwtl jb jo arpl xchg notl hlt jl cld xor (bad) sbb nop lahf shll xor loop cmc xchg les and lods pop cmp cmc mov out imul mov mov jle jecxz mov aas cmp xor insb (bad) xchg fistp lcall jbe imull daa aam (bad) xor xor test dec bnd iret sub ficomp xchg sub mov add icebp adc push lods inc sub sbb adc sbb inc negl in inc hlt ss insl adc inc pop call (bad) std (bad) cltd push mov ds mov mov fisubl (bad) or clc insl dec ret jbe iret and jne rcl cmpsl and jge out lods adc push add sub mov cmp arpl sbb shl cmpl xchg (bad) jno hlt sub add orb jbe mov jg jg jnp sbb lcall mov ljmp js jmp xor fistpl int3 pop push mov sbb mov sub pop jae fidivl and iret rorl jae cs mov mov iret cmc jnp adc icebp rorb js sbb fxam pushf jecxz sub sbbl dec sbb inc mov andb fidivl sahf xchg lret pop repnz pop js (bad) mov fidiv scas push addb sub (bad) xchg push ds lods push inc mov cs jbe push xor and add jmp in inc and sarb push add cs out stc ljmp lds push mov outsb jne cmp mov xchg (bad) data16 mov cmp ficomp mov outsl mov or (bad) icebp pusha pop rcrb and popf mov sbb arpl cli xchg xor sahf mov test aam push daa xor sbb push repz jmp add fcomi sarb sub inc arpl sti repz fsubrl stc out jns out sti sub ja jp push adc (bad) adc sub (bad) mov pop mov and mov (bad) jbe xchg adc cmc outsl dec (bad) jb push stos jg dec dec call mov paddusw jno lds ljmp fs sbb mov jle jl aaa push xor addr16 in dec cs stc enter scas insb cmp xor pop movsl shlb pop cltd ljmp and inc mov data16 pop jg mov movd xor add movsb sbb imul jbe jle aad sub sbb loopne mov pop dec inc mov mov repz mov xor daa pusha cmpsb int3 dec and mov push add arpl xor fldl add sbb fst xchg ret push or or dec sbb lcall (bad) out pushf sahf lea cwtl and pushf sahf jns ljmp cmc dec sti push cmpsl push jb and inc jae jns xlat push push xor out mov jge bound mov push idivb div mov cmpsb dec mov and jg xchg cmp cld fwait movsl call push push mov jno std adc push scas pop mov scas push movsb call mov jl cld cmpsb xor gs jbe mov lret loop es xchg mov and mov xchg out and es mov mov xor add and stos fimull outsl and cmp sbbb xchg and push cmp lods mov pop repz mov mov sub xchg sbb pop nop js mov push mov lcall ss pop or inc jno (bad) mov or fldl sub stc je add mov jne aad das add mov dec andb sub jbe (bad) sbb dec aaa and mov add dec pop insl loope cmp fsubrs test das loope lea add pop test (bad) mov sbb rclb mov aaa pop cmp jmp outsb out push or push sahf xchg mov lcall repnz jmp push cli xor or push adc or and dec or jmp dec test adc pop loopne jmp stc inc cmp jge sub aas ds aam xor in fisttp es daa ficoml or cs mov es push lea xor mov mov mov in dec lea mov push adc repnz shl cwtl aam sbbl (bad) cmp jae jmp cmp addr16 sbb adc int3 add xor in cmp mov sub sbb movaps add xor aam mov (bad) cmp xor loopne push pushf loope test mov and imul push xchg sbb inc push xchg mov mov dec cmp jp mov sbb aad push lds dec adc ret stc loope xchg jecxz ret scas sbbl xor ds pop or xor pop mov push or cmpsl or mov inc fs dec leave das and dec xchg scas sub mov adc out into lods mov push xchg insl or jnp sub mov pop mov in adc and xor (bad) jle xchg es cmpsb dec mov fwait ss lret insb dec leave jmp mov push aam xor push fnstenv mov jbe lret pop es sbb xlat push inc stc push rcl xchg mov je cmp (bad) aaa push lahf aas pusha jb and ret packuswb fwait cmp (bad) jmp mov adc in adc jnp add lods cwtl rcrb push es adc adc (bad) aas add movzwl sub mov mov fs lahf push mov arpl xlat cs push xchg neg data16 in repnz mov dec aad sbb mov bound dec stos loopne mov mov adc xor jl jnp mov pmovmskb push push std out ja aad gs sub mov lea outsl loope loope ret hlt insb sub jae mov pop mov inc xchg mov movsb push xlat jbe pusha ljmp std je dec or inc adc (bad) mov fisubr ljmp pop push push xchg xchg aad and dec inc (bad) repnz push sti xor dec fs pusha sub jne jmp xchg mov jno addr16 (bad) dec dec xor push sub and push dec sub fs scas (bad) std and cld push push cld loope sub add in mov sbb lret mov in or add mov pop cli or cld jns imul mov xchg xorl imul ret je (bad) fadds push fsubl jb or jge jp addr16 vmovsd mov inc les sub repz ja xchg sbb mov sarl loopne popa sub cmpsl cmp pop inc sti fs xchg sub xor dec push mov movsl push mov inc cli call mov les inc (bad) fldt push and pushf jne add (bad) nop jne mov lock movsl jg adc xchg lret adc pop ret adc jp push sub fisubl mov ljmp les jl or fs les sbb mov test add xchg xor mov sub aam sbb and push ret jae mov and sbb mov ja push into aaa inc or ficompl dec add enter or (bad) jb out adc repz inc mov or xor int mov jp cs cwtl hlt cld jle popf out xor pop adc jg les loopne add dec (bad) scas lret mov rcll fcoms pop ret dec jge nop fimul and outsb push in stos inc in loop (bad) ficom xchg ja mov addr16 push popa dec rolb ret and push jl outsb mov gs pusha push sub mov cwtl pop or sbb ds add roll pop aad push add mov fnop xchg xor jb or out pop mov enter test push std fcoml stos xlat jne mov std xor pop popf repz mov xchg jge cmp add add jecxz ds push mov mov loope push or sbb cltd int and pop pop push or push test push mov adc jmp jno ficoml pop xchg sub add sub inc cmpsb pusha jnp test xor rorb xlat subb and out imul mov jnp add ss dec adc jle mov arpl dec sbb dec jge in mov push sbb xor mov iret stos inc push mov jl outsb sti push cwtl jb jns or cwtl mov les cs es arpl mov push mov test dec and in hlt movsl inc pop jge push std ja inc mov jmp loopne jnp inc or fisttpl imul adc jae push dec add pop imul (bad) pop adc inc xlat nop mov movsl repz sti shrl push push flds ss js hlt pusha sti and jp mov mov jno lds sub aad pop adcl mov repnz xchg add pop xchg add inc gs bndldx in sub adc xlat lds pop ds out sarb push dec fcomi sbb xor ret cmp sub jo mov insb test arpl pop es repnz mov sub out lahf mov stos jo out popa popf ss mov sub fwait xchg inc rol and sub xor jne sub add add into cmp iret ret sbb imul (bad) ret xchg xor cltd daa movsb jmp test (bad) mov loopne inc roll sbb sub dec and mov es addr16 xchg xchg mov stos pop ljmp popa add pop mov xchg popa (bad) mov or cmp scas mov stos outsl sbb fcmovbe mov inc push fucomip push jp repz sub adc daa mov clc pop dec jmp xlat cmp pop jge (bad) fs adc loopne push test xchg repnz movb stos mov pop push xlat push fisubrl inc cmp mov int cmp stos (bad) and jmp adc je mov lret int inc (bad) fstpt push push inc mov addr16 jl add jb cli xor pop cmc add xchg fdivrs cli ljmp rcr cltd xchg xchg js lret cmc sarl jge stos mov dec dec mov jle xor add xchg jge xchg or ds mov in adc mov dec cs pop jb pop adc sbbl sub fwait out xchg in (bad) insb faddl movsb mov adc xor push cmpsb cmp push ljmp sti adc fisttpl js mov call jnp popl rcrb inc fs inc sub add add push adc xchg mov pop cld (bad) adc (bad) clc xchg mov les sub mov push mov icebp cmp fbstp xor out jno pop (bad) aas xor push jg xor adc notl mov addb aam pop mov add or jae sub pop clc dec js sub sub add jne jmp or mov jg or mov ds (bad) in cmp mov pop call push test lock sbb xor pop jb mov inc stc ss ret xchg mov roll add jge sbb mov xlat mov xchg mov (bad) (bad) sub sub (bad) jae sbb mov mov int push add sbb sbb mov sub inc clc and pop adc adc rolb pusha sti add xchg fildl (bad) pop rcll popa movsl (bad) or pushf or mov jmp push mov dec js pop push adc jbe pop lock mov sahf dec pop xchg sbb add jecxz bound out sub daa (bad) cmpsb movl jae enter xor test jl stos mov shrb notb cmp aas cmc sub push es movsb ljmp push sahf clc pop jo sahf (bad) xchg imul jg pop lock dec loopne dec mov movsl scas mov inc pop mov lods add adc mov fdivl rcll dec jo rcr loop adc mov cs nop arpl fistl xor sub pusha push add or cmpsl xchg jg call mov jne rolb ds jno lds imul loop out in int sub lds cmp inc imul xchg inc or ret insl lret xor rcrl js xlat fldl xor pop push xchg jl movsb ja mov lret fistpll pop mov xchg adc rorl ja sbb and fcomi jno cmc bnd lods out xchg nop out or int subl shl stos xrelease les ja jno fwait inc jb (bad) aaa pushf cli repz ja cmp repz fisubl inc leave es xchg fdiv mov add lea into jns jp sbb sub xlat and jo mov adc loop jmp inc out add lea cwtl inc stos add xlat sub or pop arpl jecxz cmpsb cmpsl outsb and xor loopne xor mov cld pop dec stos fwait call mov dec cld movsl mov fnstcw add push xchg gs pushf pop sbb cmc outsl int3 lcall pop fs or lret nop jne xlat jmp lods mov mov sbb loop xchg shll inc int3 paddsw loope movsb mov jge sbb sbb mov cld mov aas std sbb ds (bad) mov pop aaa inc xchg cmpb imul aad ret jp ljmp jg push push dec mov add (bad) push ret loop (bad) dec iret imul ja stc push mov pop arpl push imull inc (bad) dec cld jo inc loope ds ljmp pop pop dec xor stos leave lahf movsb cmpsb pusha mov or repz add cmp lea repz jmp adc xchg shlb sub dec fstp mov cmpsb mov gs sub aad test cwtl jle sahf pop xor cmp jg xchg add sbb sub aad insb sub lahf and sub and mov mov ja loop push mov inc or xchg mov out jno data16 (bad) jns pop mov lds (bad) fsubrs cld int xchg inc pop xchg cmp scas mov push inc scas repnz je outsb and xchg xchg xchg xchg call movsl ja dec mov push dec mov dec and movl add jb aam lret andl xchg cmp dec fdiv lods lock xchg mov lea popf fmul fistpll fstps sub xchg push cmp mov daa in inc xchg leave xchg outsl and shrl mov jno xchg sbb mov imulb (bad) push test (bad) iret jl xchg arpl mov (bad) pop cmp dec test test sbb mov scas test js and adcl add (bad) sti arpl mov dec and ljmp xor popf mov fs sahf lahf mov stos js jno xchg mov push jle (bad) icebp pop clc xchg inc pushf repz loop add leave data16 insb das dec adc sbb adc pop daa jnp aam inc in and rcl mov fldt sti inc push movsb cmpsb flds pop inc fwait mov pop test cmpsl sub ss loop add cmpsb xchg test std pop mov cmpsl mov (bad) xor ljmp imul lock (bad) mov mov push ja inc xor pop mov popf fnop or mov mov jecxz dec sub xor xor mov jg ljmp sub cs cmp push mov lods daa xor mov pushf inc cmp push in pusha rclb dec test out push jb cs mov cmp adc stc int dec hlt ret jne jbe and idivl sbb push jg or loop scas ss jl ss nop jle imul js jp (bad) hlt sti pop mov xor ljmp mov insl push imul add cmp sub fiadd in mov push add inc test out div lret fcoms mov faddl xchg cmpsl add out out push adc or ljmp jns cli stc sar out add dec movsb mov arpl jge test lret dec addr16 (bad) bound and (bad) or mov lock pop push fcompl call int3 jne test adc ds xor test stos sti xchg xchg jp mov jnp mov in lods jae insl stc xchg or add mov (bad) test push stos mov inc mov sub mov idivl lea int cltd lds into xchg xor add mov nop jae rcrl dec inc mov xor out or lea mov push inc imul pop dec in inc dec jle (bad) add inc pop ret rcrl mov mov cmpsl or dec scas ret clc loop fstl sbb ja daa (bad) push push lds icebp add sti cmc (bad) aad scas adc pop sbb in and inc stos push or sti and or mov pop mov shrl pop leave loopne in jmp sti cmp or dec jo jns mov jge mov (bad) jnp mov call sbb aad decl js mov push sub fadd cmp into sub cmp in movsb add mov rorl dec ret icebp dec arpl adc daa push and stc xor lea aad sub mov cmp test push insb pushf cwtl sarl and xchg out pop cmp jb inc xor outsl pushf push outsl push sub inc pop push sub cwtl sbb sbb cmp rorl sub daa loope or inc rorl sub cmp inc pop sub push push movsb outsl push pusha sub (bad) mov xor aaa cli xlat mov pusha and in loop sub pop mov mov mov pop adc outsb out idivl std lret push sarl stc cwtl notb jg fisub mov sub mov (bad) dec cmp pop push gs jne pop mov and leave bound popf das rorl lods adc pop pop daa pusha fsub or int3 ja jle jnp popf pop jl dec hlt iret mov push fistpll stos and xchg sbb cmp mov cmp push dec mov cmpsl lods push cmp lahf fucomi clc inc inc bound and nop sub (bad) cmpsb popa icebp push xor push (bad) int cli jmp cli mov xor cmpl enter ret inc push lret sub ret (bad) xor push (bad) subl add sub pop lret lods std lods jg push iret xchg dec hlt pop sub popf dec mov jmp push mov dec adc push dec cli mov sub pop and jl ret repnz fldt xlat add xor ljmp xchg cmpsl mov xchg sahf fndisi(8087 ficomp daa stos insb and fidiv mov adc loopne dec inc stos push scas movl negb cmc js fistp popf xchg adc and jmp jp push data16 push jg cmp in scas in mov mov addl inc inc cmpsb sar pop inc (bad) ljmp mov mov or ds in (bad) xchg mov push push cmp pushf and push or xchg das mov xchg (bad) pop sti inc lds sub and push lcall add mov loop (bad) sti sub in lret dec aad icebp add push std jecxz leave cmpsl loope bound xor mov fs out inc push imul mov ror pop addr16 mov test fstpt outsl iret rcll or loope push rol jge pop jno mov stos in jp lret cmpsl enter cltd stc mov stos xchg mov jge cmp push mov test ret and rorb into cmc inc or mov adc hlt aas (bad) xor mov in scas popa xor pop jnp test fldt cmpsl loope mov or test xchg xor into adc lods sub stc int3 xorl int jnp sub data16 mov mov daa or es and xor loop lcall loopne fildll cltd mov (bad) sub fistp and mov mov (bad) inc leave iret cli sub sub mov inc and imul cwtl in das out popf movsb lahf (bad) sub and adc and arpl cmp add or mov fnstenv mov imul jns pop lahf jmp jmp insb mov mov push mov incb jne andl adc sub pop in mov mov mov in out sub adc xchg mov cli sub ret je mov dec and push and xchg adc ljmp dec mov jle jns mov and mov lcall mov stos and fdivl xchg inc sbb out or aaa dec lods dec sub aad (bad) int3 lods jb scas and mov adc stos mov in rol stos lods or scas mov aad jecxz lcall iret sahf scas ds int3 mov leave dec add xor fs jno push dec outsb int3 sub pop mov xor xor idivl mov cmp push adcl test int mov and out in call mov jecxz loop loopne pusha enter cmp adc dec mov mov nop jg mov fldlg2 sbb mov mov jg mov mov mov inc mov lods pop inc mov xchg cli mov imull add inc repz clc jbe mov dec rcl stc cld sti test inc fs jg mov addl call aas mov roll inc jns cmp sub fwait jge pop pop int3 dec sub pop push lea lods ret in scas sub push rcrl pushl mov je fildl out add or out popf fistpl push or popa xchg inc mov sub xchg iret dec mov push out popf push mov push into shrb mov loop dec lea push arpl cmp cmp scas shr dec stos mov adc jmp xchg pop comiss es nop les xor and sub in sti aaa xor ja and dec add adc xorb jo inc dec jge cmpsb push cmp sbb mov sub cwtl mov push push dec jne push or lahf adc mov fldt pop fild imul rcrl out loop mov loopne ja (bad) in in mov adc push lods pop push clc jle mov sarb in test jns mov mov pop (bad) fidivl jg add xor pop sahf push pop int out pop js iret dec and stos in adc mov lret fdivrl sub fistpll (bad) lock add jns xchg xor dec lds push inc jmp test (bad) sub inc xor pop aad call insb imul (bad) movsl or push pop cltd lcall leave and pop es push (bad) mov jns ja jno loop std jmp icebp push (bad) jno mov pop fcmovnu call push add pop sbb lock insl nop dec popa imul mov sub movsb (bad) mov sbb pop das (bad) push pop call fdivrs sbb jecxz add xchg lea push clc fstl mov xlat dec outsl je insb jns incl xor fistpll cmp stos xor insl xchg out roll jbe cmc mov sbb es and add test pop jle inc pop dec xchg stos push xchg xchg arpl mov xchg jb cmp call dec xor out jbe (bad) out out scas (bad) mov lock stos cmp cli in andl daa loopne xor das mov cmpsb test mov repnz cmpsl stos mov adc jae frstor js jno rcr cmp mov stc lea sbb adc mov push mov cmp (bad) mov add push dec dec outsl ss adc ss popa fcmovbe adc rorl pop lcall dec leave fs sub aaa dec jl jo pop mov xchg cmpsb out mov adc dec (bad) scas std les mov lods jo lret sbb int xor lock push jne mov imul lret adc cs push push adc push dec sbb sub rcrb push sti std iret lods leave jne aad sub lds adc and lock jg xlat cwtl mov idivb loopne imul jmp notb mov ljmp add cmc sbb (bad) lcall lock in and cmp push sbbb and hlt scas sub test test dec movsl andl cli rcll js push out push cmp and lock test xor bound jne sahf push dec dec and orl push int3 lock jnp adc ds fcoml pop mov cmp adc sbb out push sbbl pop arpl iret sub out or je out mov xchg push cwtl test add (bad) addr16 les cmpsl sub lret sub inc adc inc jle jp cld dec scas sub mov inc (bad) lret xor xchg and dec lret jecxz inc jo icebp and (bad) gs jmp repnz mov cltd adc jecxz loopne pop or in fidivrl mov pop mov aas dec fwait movsl push ja xchg mov mov mov cwtl ja sahf ja xchg jne jmp mov rorb gs stos dec pop mov fdivrs push fist aad mov movsb jno inc sub push out fdivs adc (bad) push jno ljmp cmc mov aaa pushf pop dec mov mov divb push fwait bound leave add dec lret pop cmpb int jle cmp jecxz xor in add stos out sub cltd jbe xor lods pop mov int3 push mov iret into fnop mov pusha cmc insl cmp xchg add inc mov in popa dec in in fcoml fidivr enter dec push xchg xchg dec fs xorl cmp jle mov ficomp and out mov mov (bad) jae inc or sarl push jmp int3 call out les mov lahf loope xchg scas not sbb pop jns or mov push (bad) rcrb mov outsb lret jnp xor sahf (bad) aad pop xchg movsl jo int3 cmpsb inc movsl in xchg jmp dec pop (bad) dec in (bad) mov icebp mov cs testl jnp jo jg je stos and ja jb xor inc add cmpb adc mov cli int iret pop mov xor mov ljmp in es loop or and dec jne xchg mov jge add ljmp mov fsubs mov pop and into jmp xor inc and call and inc jnp ds add cmpsb inc out xchg push pop cmp pop notb xlat pop inc (bad) scas adc idiv sbb mov inc das push xchg repnz add decl xor ja ret in xchg xchg push insb mov (bad) out jg iret ljmp jno jne fnstsw jecxz cwtl push cmp jnp shl add outsl mov in imul cltd rolb xor pushw inc cmp jbe sub jge mov inc (bad) and and push leave je pop cmc (bad) jae xchg pop cmp scas dec jmp sub sarl loop xchg jg inc orb adc in pop jmp mov xor dec add xchg mov inc or mov mov xchg pop cld pushf shlb lods pushf popa mov lods fcompp fsub lret smsw inc decb das adc mov inc jnp pop (bad) sub jae xchg daa and test or sbb fiadd add sbb mov dec out imul mov sbb lcall popf lret or lods lock negl and lock lss enter arpl into les mov jp mov mov xor test fwait loopne push negl sbb xchg popa nop push dec sti sbb das xor adc cwtl sbb mov xchg cltd lods aam xchg mov shrl scas mov insb outsb ret pop daa test ja sti xchg push xchg lret ds mov xchg push popl adc mov and add cmpsl push and mov aas jae xor nop fldcw push or xor fstl mov adc shrl fs jle stos mov test mov out idiv jecxz aas adc lret in pop sub shll add xor in and nop adc adc or xchg cli xchg inc xchg inc lock and push mov xchg sub imul (bad) leave cmc mov ret call mov (bad) mov sbb pop and cmp inc and movsl call mov gs sbb cmp cld dec cli cmpsb pop popf stc inc in inc fwait and push sar jg sub inc inc dec xchg add (bad) or int3 test leave (bad) pop cmpsb fcomp xchg fcmovnb xor lret lds pop or decl call inc xor xor xor sahf push fidiv inc pop je arpl xchg sahf fildll insb lock or add ljmp icebp leave nop cmc inc push aam xchg cmpsl pusha push gs pop insl xchg ret sbb mov push mov pop pop jmp js (bad) pop push daa movsb push loop lea cltd sub dec cs xor es popf mov sbb push addr16 inc mov sub jmp or mov insl jnp dec push xchg push stos and aam fdivs mov cli outsl gs mov psrlw scas sbb not or addr16 mov jns inc jp cltd icebp test test cld and adc cld xchg xor add fwait mov popa sbb imul sub insb dec xor out push mov and mov (bad) pop pop add ss mov inc ja (bad) sub jge adc cli sbb aad cld sub cld cs or add hlt ds lea addr16 (bad) jmp jle shrl push cs (bad) out addl je sbb out mov cwtl inc xchg out sbb icebp cmp out jle gs in clc stc cld jge outsb and fstpl out add mov clc fimul repnz scas insb popf jne mov mov push push pop jp addr16 (bad) es es lret mov shr les dec stc ficomp pusha popa cltd or lds dec outsl dec sti (bad) lock pushl mov pop fistpll dec (bad) aad (bad) cmpsb int3 inc xchg push lcallw sub out ljmp push cmp or (bad) enter jno icebp and gs sbb add mov sbb push int3 out ljmp add cmp cmp jo push movsb in shl in sub test lcall xor mov jmp (bad) jbe adc inc add mov jp js jo rclb jnp ficomp xchg mov dec cltd inc cmp inc (bad) adc outsb adc leave in cmp push data16 mov sbb or and xor fdivrl cld push xor xchg aam xchg mov fistl inc xor nop out jle fs mov push inc (bad) xchg aam stos dec sub adc faddl sbb jo mov adcl roll pop mov cmc xchg loopne pop sbb xor test mov dec inc and es dec scas test cmp or mov and test pop mov test adc movsb cmpl in xchg mov mov or outsb insl pop lcall and fbstp jns xchg xchg jg movsb call scas xor sbb cmpsb jle ja inc mov cmpl shll clc push sar test mov pop ja stos rcll repnz pop arpl imul adc mov leave xchg aaa enter cmp dec cmc ds decl xchg mov test add in shll or sarb or push out repnz aaa js mov jns push adc ret callw sti loope mov fistp cli clc dec pop cmp lret mov and ja clc sub (bad) sbb repnz and pop ret jl data16 inc push es xlat lock or adc xor cmp jnp data16 dec inc ret and sub out mov test sub popf sub std or out pushf jge or sbb jb inc pushf jg mov or gs xchg aam sbb int cmp daa mov cli test rorl sbb lret mov rorl mov pop sbb or dec or push ss pushf ret mov fcmovnu notb jns (bad) sub aaa xchg and inc cmp jg adc inc int3 xchg xor jg push and insl and push and xchg xchg cmp scas fldt lcall xchg leave shrl pusha push push mov cmp movsl loope out mov lret stos jnp call (bad) (bad) mulb andl mov push ds popf mov pop dec jge rcrl xchg shrl notb ret orb loopne icebp pop stos adc add aaa jb xchg mov (bad) inc or mov stc push or inc xchg add push lods mov xchg mov (bad) dec movsb ja pop stc pop cmp (bad) and jge and loopne dec call dec dec push enter loope das outsb adc les decl pop enter notl popf adc cmp mov add xor xchg test pop inc xor cmp sub and or inc xchg mov hlt rcrl loopne xchg push mov dec (bad) (bad) cld decl enter push mov push insb in xchg add int3 pop inc aaa push jnp imul ds mov and lods sub mov adc sbb test mov mov xchg push movd in hlt sbb xchg mov jle into bound sub inc dec push jl mov mov cmp mov and jp out jmp mov bsr lahf lods push add dec (bad) push sbb jl cmpsl add sti dec sub outsb xchg or xchg pop sarl jbe pxor mov jb popa jecxz dec repnz mov int3 add jno lock clc int lods (bad) cmpsb mov outsb (bad) jl lods jle std repnz test mov adc aaa iret or stc jnp xchg fcmovnu loope sub inc xor mov mov push bound in sbb xor std lea jge (bad) in mov adcl sub add xchg and lods xor dec xchg (bad) jp divl mov enter scas push in push sub inc mov mov and leave lret cmp xchg fisttpl vunpckhpd (bad) fidivrl mov xor adc ret aad xor ljmp xlat or or cltd jg ljmp pop dec insl dec das stos inc pop fldl negb rclb (bad) hlt and ret pop ds fsubl mov xor aaa dec ja test mov lds insl pop dec xor mov inc or jle xchg fstpl sub stos pop adcl or aaa sub fwait out mov test and gs jnp inc rcl aaa mov push and push mov movsl loop and xchg test fbstp mov push sub and ss addl jbe or mov jbe jae xor xor add sbb cmp xchg pmaxsw dec and (bad) and xor add cmpsb sub xchg in and dec jne dec fidivl xor movsb stos je lods push pop mov aas xor xchg push dec pop stos pop inc stos js (bad) sar (bad) jo pop call lods mov mov push add (bad) adc movsl mov push setno pop aaa test mov lret push movsb pop aas mov push movsb outsl jno nop xor aam or mov jge (bad) xor sbb inc scas cltd jbe lret loope xor leave jo (bad) nop mov jnp rcr mov adc and mov shld (bad) sub mov stc popa mov or subl loop sub rclb or movsl das scas xchg movsb xchg xlat sar sub mov insl jbe cs or push outsb mov nop test loop mov fist or xchg (bad) lret adc or (bad) mov in adc mov mov pop cmpb outsb aas sbb es mov or mov loopne mov ja inc and pop lods fisubrl cmc ret xchg xor int in bound ss ret adc cmp mov (bad) ja push adc mov add cmp pop popf dec sbb mov push lods mov pusha mov mov mov inc jg shll pop pushf divl movsb nop push mov in push adc jecxz insl pop and (bad) out sbb popf add lahf xchg or lods mov jecxz and pusha fadd xor push jns jnp pop cmp addr16 jbe data16 pop enter add (bad) cs test mov push sub cmp cmp dec jb pop xchg icebp add mov fwait cld cs stc mov dec pop mov fs stc outsb push push sub stc sub orl jae cmp int mov xor gs add ss mov out or (bad) mov push xchg adc movl pop cmpsb fisttpl add fcmove adc and loop add lahf lahf xchg jmp and hlt (bad) (bad) pop and je inc mov cmpsb and push sti pop pushf fistp out xchg cli pop push pop (bad) mov adc imul or cli leave mov pop jae imul sti sarb in xlat cmp push lret xlat fdivrl xchg out rorb and jo leave and fwait cmp pop ds js xor adc mov adc dec mov pop hlt stos outsl imul ljmp push inc dec or adc (bad) pop stos push add sahf sbb xchg in out push fisub ret (bad) in jge inc test iret and fwait ret cli dec (bad) negl pop (bad) dec pop mov add and inc mov dec pop jle popl mov movsl mov sub (bad) xor lea int mov sahf (bad) fisttp movsl (bad) push insl test test inc xlat jge addl fisttpll out sbb popa sub adc stc xor mov inc or data16 sub out push mov data16 stos sub scas pushf jl push movsb jno enter sbb in pop xchg mov push pop fcoms inc fist mov lds dec sti aaa ficompl fcomi pop mov inc mov leave icebp xor pop cwtl dec sub (bad) sti fistpll mov cmp js fmuls (bad) dec ja push hlt adc fisubl mov mov pop cltd aam aaa clc sub dec divl mov imul test jb popa and jmp (bad) jg fistpl (bad) mov out neg cltd aad jnp push out rol xchg mov push sbb dec and in push and mov dec (bad) push mov dec or (bad) ja xor push inc int3 (bad) lods mov sbb imul out or idivb pushl (bad) push inc mov arpl pop push or outsb inc mov ljmp jno jne jnp add inc sub inc test int3 ret cmc jecxz repnz dec and mov xchg pop push mov aad xchg sub xor stos mov imul sahf push shl pop ret push rcrb scas cmp lock push arpl pop icebp (bad) xor and fcomps hlt jns (bad) sti inc mov and and add jae mov icebp mov pop ja adc add cmp int3 lahf aaa dec xchg repz dec mov scas inc mov lret xchg ret xor lods dec or adc sbb flds (bad) or (bad) fildll popf xlat push mov stos sbbl jg jne bound aas push pusha int3 sbb das jg push jge mov and mov stos jecxz imul dec ffree jmp dec je mov mov jl xchg outsb mov sbb aam test sbb sbb xchg rorb mov and mov push hlt xchg testl sub lret push sbb pop jno dec xor mov sbb xchg stc xor orl lods insb inc fs push lcall xchg pop sbb in xor scas je jle je cmovnp std fimull pop or mov daa fnstenv add push push jno rolb mov or movsl inc xchg xor clc repz jns push rcl sub jmp scas icebp (bad) jo mov lcall pop hlt in lcall xor hlt fs lods lock pop aad nop scas movsl ficompl test mov jl xor dec int fcomip mov jbe rorl xchg les xchg addr16 mov mov aas dec add xor push in and daa imul (bad) xor lret in jle repz out sbb in sub mov jns pop aas push hlt xlat add (bad) lock mov (bad) out jge (bad) xor mov sti pop lret lret test push cld andb inc loope mov in or adc push adc cmp int iret push divl push fmuls sub insb int add sub (bad) movsl pop into and leave and xor sub std or mov sub aas pop ret inc mov mov cli in aas or lret outsl dec (bad) pop add cmp std lods ds dec fdivrl fimul sahf dec inc mov mov jmp loopne sub out sub sub ja,pt inc mov leave int3 sbb sbb loop inc xchg icebp leave (bad) and andb test sub pop add cwtl pop add xor sbb inc in fdiv dec xchg es cmp jne mov out jo mulb and or or mov fbld mov or pop js lods xchg jl popa fcompl je pop adc mov mov ret add jae mov sti stc aad jecxz and fwait sbb push inc xchg cltd addl xor arpl and fwait loopne jne pop push jle (bad) or pushf cli add gs jnp negb xor push pop lcall mov sub sahf mov aaa sbb add sbb xchg add pop mov imul xchg jno and jl stc imulb stos add xchg bound dec in jbe xor test or push cwtl push cmpsl ljmp ds xor lds mov push and push std xorl lret or jg sti (bad) outsl popa les es or ja jae xchg jle scas xchg push dec jo mov cmp jno test push pop add adc inc fisub fisttpl rorl sahf and inc loopne out xor cld jb sbb out xchg dec mov gs lds mov adc pop shll cs pop in inc cmpsl push push sbb mov sub ret adc and dec cwtl mov xchg cwtl fnstcw insb ljmp sbb mov sbb fild xlat sub mov lods jge loopne xchg outsl (bad) incb or int3 in iret fcomi fiaddl arpl (bad) ss sti and mov sbb fiadd push mov mov popa mov mov add cmp sbb jmp shrl addb and lea (bad) mov xlat int3 xchg pop std insl xor xor jl adc repnz pop jp push xchg int xchg cmp dec and outsb aas sbb cmp repnz inc inc mov inc mov imul fisttp iret mov stos mov aam cmp leave mulb sbb lret je and xchg cmp mov popa lea dec in das mov (bad) aad xchg mov pop dec movsb fist push movsl and mov popf jecxz loope mov loope cmp (bad) cs lods cli xchg push shll imul mov in xchg les shll test add add sub sbb xchg ds imul sahf pop sub pop xor push mov lret xor inc sub sti inc leave add movsb mov out pop es lods lret sub sbb and loope icebp pop jle pushf faddl mov mov mov and lea cltd xchg inc jb or shrd rcrb addb sarb stos lods out or and mov fild fstl cli xor sub mov arpl adc mov inc jbe xchg xor adc out leave push mov sbb and xlat cmp mov sub sti nop movsl shll in in scas mov std dec (bad) adc frstor gs sub sti xchg mov arpl xlat adc scas and mov lds jnp push xor mov rep or inc xor ret leave xchg sbb out mov pushf outsb adc in sub jecxz out mov sub adc test packuswb mov dec cmp pop jmp mov jp sbb ret mov cmp jne gs into push mov gs sub push mov sbb movsb push ja imul pusha cltd popa jmp jns mov sub mov push push das mov xor ljmp or das xchg mov aad jmp notb fwait mov icebp cmp mov pop adc adc popl pop mov imul scas test pop lock inc mov cli mov addl test shl sbb add and pop lret lret fwait (bad) xor sub out jno jns pop aad add pop pop jno arpl int3 push adc mov ja push orb lcall lods into cmp inc xchg (bad) mov shl lret sub and fnstenv or cmp dec push lcall xchg mov cmp movsb frstor lock orl lea and in mov in imul cltd stos push aaa pop les xchg lock jae jno in (bad) pop xor lret push xchg sub and mov repnz mov push incb pop and test loope push jmp pop pop hlt mov mov out mov mov fmuls mov insb dec inc je loop mov in dec enter xor xchg xor mov cltd pop jbe xchg dec aam out das xor sub dec mov dec popf (bad) cmc loopne pop std lahf xor push dec sbb imul mov push and ja xchg testb inc and mov pop sti movsl lea int imul (bad) decb mov fisubl pusha jp sbb jle gs pop jnp iret mov int push dec fsubrl push xchg test pop lret mov mov cmp jmp xchg xchg add cmp sbb add stos jecxz xchg xor and cmp mov outsl icebp (bad) lods mov lods fstp sub cmp push enter inc jecxz or mov cmp push sbb add lret pusha xlat mov adc xor in sub and fcomps repnz adc dec cmp cmp fucom sub jl inc mov int3 mov mov cmpsb sub int loopne bound cmp sub mov (bad) or mov mov daa lahf inc jg xchg mov xchg mov and inc mov cmp mov aam insb sarl movsl jo jg mov mov sbb push mov adc data16 push push pop mov push and lret les mov scas int cmpsb xchg jae xchg sbb jp out mov pushl lret sbb dec fwait adc popa push call push cmp or div and mov xor loop sub pop scas test dec ret test sub mov (bad) pop add mov push aaa jmp sarl sbb push imul aaa dec lods fcoml fdivrs mov ljmp fcomip sbb and arpl in mov cs insb jmp jp iret fsts xadd sbb mov ds and push push idivb shrb lret inc sbb sarb push pop orl cmp fmull loop lock aad sbb adc dec xor imul shrb xchg in inc scas test xchg inc jge sbb mov leave test aad sahf or xchg into hlt jo in sbb add dec nop icebp insl movsl adcl or das into cmp xchg js lea sbb (bad) lret push in mov aas arpl ficoml test jo mov bound pop aaa and sti fidivr (bad) aad push mov insl je popa (bad) jno,pn in pop mov inc arpl sub aam mov (bad) pop cli mov push mov cmp cmp xchg jmp mov jo inc out xlat sub (bad) fs repz xor push mov sahf sti (bad) or or push lahf rcrb mov push push sbb repz mov inc lods dec xchg mov int3 lret mov and pop pop dec cmpb aam int3 add jl xor lret negb sub adc xchg lods inc movsl xor cld stos xchg nop cmp iret hlt pop push cld in mov fstl xchg adc push cmp sti in out aad loope lcall cltd sbb pop or fucomp xchg pop lahf out add pop into mov outsl sbb sbb std push insb inc cli fidiv aaa rcl je pushf addr16 sahf (bad) push arpl inc xlat (bad) push xor data16 pop push nop or stos inc cmp push imul adc rolb sahf cltd sarb outsb rolb (bad) fmuls pushl sbb cmpsl cmp sub decl or leave push fadds in mov mov cmp jg,pn mov in mov push xor pop push fwait imul pop movsb push loopne jp lahf loopne out cld cmp xor in dec pop xchg add decl cmpl mov fwait xor test mov xchg and repnz aaa rclb sbb popf out fmull pop (bad) bound and pop sub (bad) cmp imul ret pop lods push aad test mov mov xlat dec sub in adc cmp cmpsl (bad) sbb adc test cmc push out mov gs xchg jns dec aaa test ss out pusha xor cmp test or es adc jecxz,pt inc xchg jl fs inc xchg adc out jg daa and add adc jns xchg (bad) xor or cmp fst pop mov or jbe mov dec inc xchg rorl shll dec sub out sbb mov fwait (bad) lods or mov xchg mov pop sbb in pop cmpsb faddl xchg sbb sbb sub js jge or jb fisubrl mov cmc xchg rorl lahf and mov and push (bad) shrl int3 (bad) sub out cmp inc (bad) hlt cmpsl lahf cltd test pushf cmp mov imulb cmc adc push cmp mov jg jge jg test sbb sub call mov pop loop addr16 push push nop test in push fstpl cmc leave mov mov andl and iret ror pop mov xchg (bad) dec or inc adc hlt out repz push mov dec jmp or aam sahf xorl or mov sti repnz data16 inc fsubs popa cwtl xchg fmuls fstl sub andb xor dec mov js inc jne jl (bad) daa xchg pop sub rclb mov std mov mov iret ret sbb stc iret adc sub lea loope pop jl imul aaa lea out repnz icebp sub das (bad) stos push or sbbb das mov push enter mov cmp hlt jns outsb push push push dec and faddl add mov int3 test cli adc pop dec or xchg movhps aas into mov jne ss push movsb add or cmp xchg es vpslld loop mov xchg xlat mov scas add in dec cmp mov pusha insl push push pop add nop jo xor cmp rclb rolb add leave jns jo jns xchg add jl xchg hlt arpl push fcmovu lods clc imul add test jae (bad) insb imul out xor sbb (bad) mov in (bad) fwait jecxz popa fistp or loopne aaa subb fisub leave int (bad) stos mov push dec cmc xchg push lods push add mov (bad) ja scas pushf jne jbe (bad) out fwait xorl mov seta fwait test sub std xchg cli mov push inc or or jo dec sbb das lds in sub xlat test ret mov lods sti hlt (bad) icebp fmuls idivl inc sub lahf push bswap lods mov flds push neg loopne xchg jne divl cwtd mov push je and aaa int imul adc das xchg in cmc sbb fdivr mov (bad) in inc sbb sbb adc mov (bad) push sbb or clc aad sub lock inc cli mov popa (bad) out ds mov rcrb cmp dec mov jecxz xchg add dec pop push test nop jae or mov adc movsb adcl dec (bad) dec jge cltd jb mov xchg xchg mov icebp ret and xchg or jbe popf cmp out or mov add les cmp jb outsl cmp sbb push push adc into cwtl sub lds xchg dec xchg xchg push repnz int or lods fidiv in (bad) push xlat adc rorb ja mov add stos xchg jge mov adc sub mov pop mov push or xor xor inc inc mov movsb sub int3 mov sub sar xchg (bad) mov mov stc cs mov (bad) push (bad) shrb xchg jae pusha xchg addr16 mov push lret shlb jmp call ja sub mov lods adc push jnp or imul cmp or in gs sub cmpsl add mov in cmc pop xchg sub lods mov test idivl dec mov cmp cmp push mov in mov lods sbb cmp push push sbb (bad) pushf push push enter repz inc mov mov lods dec and add dec outsl icebp mov sub int lods cmp loopne mov and xchg cmp cltd fnstcw jo movsb adc test jbe mov cmpsb push push pop rcll mov mov sbb sub mov mov mov jmp neg add out mov jnp sub xchg dec js ret mov stos or lret aam addl inc inc push push mov outsb ljmp mov or nop repnz je inc push (bad) gs enter dec pop jge aad cmp bound scas jo sub call popa push lret sbb mov xchg clc fsubs aas mov or lcall push int je sub adc xchg and add jbe test (bad) pop fnstsw into cmpb or sbb jbe jo cli xor mov flds pop mov xor push cmp push popf lret inc dec daa sbb mov mov cld fcmovnbe and jne out fisub push mov jg sbb xchg (bad) (bad) xor test add mov pop push mov pushf ja movsb (bad) pop cmp arpl pushf mov aam push divb imul dec icebp push push subb andl test hlt adc fldcw lcall ret push cmpsl cmpsb ficomp inc test cwtl or outsl cmpsl add sbb daa mov cltd popf mov jg sub or sub or add jns dec fsubs sbb xlat scas stc (bad) out sbb mov daa jmp cmc cltd sbb sbb movsb cmc int stos daa outsb sbb and loopne js dec lret andl in xor jnp dec pop repnz xchg and cmp push movsb inc pop adc nop sahf xchg cmp jno push mov mov (bad) fwait (bad) mov push inc pusha mov dec popf jge push bound leave stc jle sti adc insl loopne dec jne jne pop popa cltd mov sub xor mov or loop stos lret pop (bad) testb ja (bad) mov test push in dec daa mov (bad) pusha xchg int3 push es mov pop cmp in fistp (bad) (bad) aam fcompl sub jno mov rcll xor std cmp add idivl xlat pop loop mov xchg sub jp mov push lods xorb addr16 lea mov nop inc lahf or or pop cmp scas mov sbb xchg mov jle or pop adc push lcall jge ficom mov pop xor sub jecxz adc (bad) repz pop pop push jmp test jmp in in fchs daa fiadd or sbbb data16 dec mov scas sbb out push inc mov dec (bad) sbb mov push pop pop push mov lods and cmp xchg jmp inc dec (bad) or lahf arpl sub dec pop sbb in mov pop clc das xchg sti sahf cmpsl adc loope repnz inc sarl mov sub outsl rcll fstl cmp mov ret dec sub fwait stc pusha mov inc mov std push dec js add hlt stos mov inc ss je add int fidivrl sbb aas scas pop and fs mov and lods out mov lods sbb neg sahf xchg mov cli rorb jne jecxz adc add push sbb popf xchg fidivl push pushf pop and nop pop (bad) sti add add sti xor rcrb mov loop arpl pop pop in or mov out out mov test lock add add xchg jge inc es in pop mov loopne xchg cld repnz fwait scas lods inc popa lods fs sub sub xchg jnp pusha pop mov bound js (bad) daa jbe insl xchg and jns jmp pop xchg repnz pop xchg mov mov subb pushf es sub mov jl js jns inc mov subl jecxz out xor adc (bad) jl outsb jns js and or insl ret sub out jecxz or js inc mov mov and bound lods pop mov adc and sbb adc repnz mov adc mov jmp push jg (bad) mov cli ret insl cwtl ret jg ret mov movsb (bad) adc dec lret xor and (bad) push flds adc add cmp push fstps cli mov mov mov pop pop xchg ljmp mov inc out fs xor mov out mov pop rorb int3 aas cmp add cmp xchg sbb xor sti fcoml ror xor xchg test cwtl cs outsb cwtl mov pop cmp (bad) popf cmp jae push push dec sub or int sbb ret add rcll (bad) les pop dec sti lret push decb xchg andl jg fdivrl stos dec shrl mov test add add (bad) dec xlat push push cmpsb sub bound push fistl aad stos nop test outsl push push dec (bad) xchg sub dec out rcrl mov sbb daa push adc mov popa mov sbb (bad) adc jae lcall loop jle jns outsb lods jbe cmpb sarb aaa cli mov faddp inc pop xchg dec (bad) jge dec movsb add dec cmp xor xchg fmuls mov pop xchg dec jbe scas add dec cli xchg into rorb (bad) mov imul sbb nop fisubr xor xlat adc les pop int3 inc pusha in in mov cld fildl adc insl std test add ds fs mov mov aad cmp fs into push lahf add (bad) rep and mov into scas in mov daa in stc arpl mov and test pop xor rcr movl je shrb mov pop sbb orl inc mov and jb push mov nop xchg rcll mov clc (bad) sbb lret mov cli xchg xchg loop repz cmp inc psrad fcompl out xchg and add xor (bad) popa call fdivp cmp insb mov adc sbb pusha lds int3 jp add add hlt repz push push xor cmp dec pop inc aad pop pop push in cltd ljmp adc pop pop cwtl rorl addr16 xchg xor or cwtl call mov in or (bad) lcall mov mov cwtl popa fs sahf (bad) mov aaa ja imul daa or ss and fisttpll cmp cwtl push jp incl lods mov loope inc lock inc add movsb cmp push add scas dec push arpl cli adcl cld in mov rcrb fistl pop js fdivrl mov loope sbb xchg or sub inc pusha repnz jne sbb negb lcall test inc push insb pop push test test clc subl mov stos sbb inc psubusw and add repz sbb cld mov cmpb (bad) mov cmpsb or iret repz test (bad) push (bad) hlt sbb pop out rcl push and xchg andl push out and lea addr16 xor (bad) jae stc (bad) xchg shll pushf cltd adc inc xchg lea pop call pop xchg mov xchg icebp mov cmp pop (bad) xchg mov bound insl fidivrl ja inc lods mov pop xchg ss (bad) and xchg mov pop ss mov (bad) add lret cmpb adc sahf loop ss jno and and adc ret aad rclb dec pop sbb negl mov cli movsb pop ljmp xor lret leave ljmp nopl iret fisttpll lds xor (bad) xchg lods imul shrl add addr16 scas or jae ret push inc fs cmp xor pusha fadds add xchg xchg ljmp arpl das jo out or inc mov enter lret mov sbb jb es sahf mov (bad) or jbe cli pop (bad) daa movsb xchg xchg (bad) in xchg es cmp jge inc jbe add test aam push addr16 push rorb mov or add cwtl push pop mov loope (bad) std xchg dec data16 fdivrs nop repz pop lock rcl repz mov add sub adc ds and xlat (bad) faddl lret sbb je mov es mov out jnp cmp lahf sbb cmc jbe dec push add jmp pusha (bad) inc mov clc sub aad add and jge pop jnp mov leave test dec sub pushf jle xor cmp push push popw (bad) xor pextrw xor mov mov test sbb pushl and pop xchg negb lods xchg mov js and aad xor mov inc dec cmpsb lods inc ss loopne mov (bad) and into nop dec pop sti inc mov xchg jmp pop (bad) mov mov pop lret xchg ljmp stos (bad) out xor xchg xchg fs push and jne push loope fs fwait (bad) jmp (bad) mov fsubrs pop cmp inc in hlt dec pop pop inc jbe lret jbe (bad) mov sbb jge mov out imul pmulhuw pop pop imul packssdw and (bad) loope mov push mov jnp xor xor mov dec cmp mov add adc cld lods inc jno pop push aaa outsb mov pop (bad) les cmp xor sub cli sbb leave cltd (bad) mov mov cmc dec mov cwtl cmpsb cmp push jb in fiadd mov or dec popf mov sub (bad) ss ljmp and pop sub jo jns ficompl xchg adc out rsm jle iret sub xchg cwtl xchg and push mov jb jge pop aaa pop outsl mov sub jg mov out clc xchg ss negb sbb lcall mov pop dec test scas inc cli fwait push stc push push pushf cmp dec xor xchg inc ret aas cmp jbe adc sub xor and in dec add xor pcmpeqw je pop xorl incb mov push mov inc ftst in or les lods or and inc mov add push nop xchg xchg (bad) cmp fs lods je cld aaa sahf inc fs ja cmp xchg push mov xor push adc push inc lods cmp cld cld sbb push inc mov mov push sarl push lea popf (bad) fsts fldcw lret sahf clc cs xchg add test inc dec xlat arpl sub sub jns pop stos jle stc pop add sahf and mov push or dec mov xchg xor arpl es jno pop pop xor fdivrp repz mov hlt cmp (bad) mov in pop frstor inc insb out push dec push push push stos ret repnz xorl test hlt (bad) lea push mov xchg mov xor lcall pop pop push or mov int fld out rcr xor lods push fndisi(8087 mov andl sti jmp je jmp xor popf jbe cmp pop pop cltd call in sbbb sub fidiv shr jbe cmp jnp mov mov mov in cmp jbe outsl adc in sti push in aaa call ljmp lock and into lcall sub arpl sbb mov push je pop icebp jecxz mov push out js lret ret inc pop lds inc xchg aad lods push xor jp repnz movsb dec mov xor daa ficoml mov mov movsb (bad) pusha inc or mov pop and leave dec ja inc mov adc add sub push jo mov popf push mov xchg mov test frstor xchg push out mov xor mov in lret add push sub mov xor jl xchg lock cmpsb adc mov or jle add mov xor sbb fbld (bad) loopne (bad) int3 sbb fstpt ljmp fcompl sub dec inc enter (bad) jg (bad) pop jno test push ret lds mov clc lods cmpxchg icebp out ret xchg mov push and lret push adc popa fcmovb fsubrl imul scas sub add mov xchg or cmp inc sahf ds mov cmp pop or repz faddp imul jmp out rclb movsl dec sbb faddl dec xchg jne test cmpl cs imul xchg sbb mov out sub or test dec and jl push dec inc pop push xchg (bad) xor clc dec xchg stos inc dec gs sbb adc add push and adc xchg xchg cmp jns or xchg cmp enter xchg inc cmc (bad) dec sbb adc jb push leave cmp (bad) jmp ss add dec xor and jge aad jb dec in xchg cld nop out in mov insl add pop jmp daa add dec in jle inc jbe sti andb mov popa jno or bound mov daa inc dec insl arpl popa adc fcomps scas lretw push mov pop sbb sbb lods inc cmpsb pusha dec fsubl aam movsb pop loope shll inc rcr out or int3 sub inc stos sbb in je fnstcw xor or stc jnp in adc xchg and add dec push movsl je xchg popa push pop lcall and xor scas push xlat lahf jnp (bad) cmp nop ret sti mov nop data16 hlt jae out and or mulb sbb fmuls out pop outsl or daa mov movsl insb dec xlat pop push (bad) fldl mov xlat rorl cmp jo mov ja jmp mov ljmp aad gs and inc xlat xchg or fadds adc pop mov cmp push in mov loopne fnstenv js inc leave push test rclb fs out adc cmp mov adc sahf add mov pop mov test xchg inc sti and push (bad) xor bound push add pushf (bad) data16 mov add es jo outsl repnz push arpl inc out scas jge lods xchg or stos or mov mov loopne and sbb pop mov out je mov repz ljmp ds outsl push cli pop fs xlat adc repz int3 xor (bad) push popa mov push sub push add and xchg icebp mov jmp mov insb je ficoml loope ja cltd pop pushf mov stc iret aam movsl decl pop adc ficompl les insb (bad) (bad) lea fadds and sahf repz decl out dec xchg cmc (bad) sbb loopne inc sub fnstcw int3 pop pop imul sbb sub ret dec inc fidivr add jle lea fs jno adc out push sub loope jns fnstenv mov mov scas hlt std repz (bad) out xchg sub add mov inc das lret addr16 (bad) sti lahf push cmpsl sarb push ss pop aas cld pop cmc add fild repz repz xor add dec jp mov jge xchg adc in jb add (bad) sub pop xchg lea mov fwait xor inc jmp sbb les jo inc xchg notl mov mov dec and adc rorl clc imul setnp xchg aad leave enter mov or js mov add out jmp movsl repz dec iret in int3 insl or or xor pop (bad) ss pmullw push arpl lods (bad) xchg xchg push xor pop sub dec cmp test lret cmpsl std xlat sbb inc dec sub imul in test pop (bad) dec or adc fdivrs lahf pop and or fiaddl xchg movsl xor idivl (bad) shll xchg xchg (bad) movsb fs or dec jg das lret loope fimull sub jmp addr16 fdivrl mov adc dec fwait aam out pop mov fisubrl int3 ret jno cmpl mov jae repnz mov jnp mov test add lea lods push mov push or int3 mov cmp das or dec xor sbb dec or sahf pop or lahf adc cmpsb add imul push ljmp cmc lcall sbb adc cltd lods push (bad) out fisttpll (bad) arpl sub mov mov outsl aaa clc inc and mov xor or lods insl out adc jo jno aaa cmp add pop ret sub in and jae mov and pop mov dec push mov addr16 sar sbb stc shl lea xchg mov fcmovb mov xor xor sbb out adc or mov hlt xchg and fadds (bad) mov scas jae lcall xlat rol or jle xor sub sbb or ljmp push fcmovnu stos push enter lods dec out ljmp pop imul leave ret rcl xchg stos inc movsl fnstsw out pop push push insl fcompl jo push outsb push mov (bad) mov hlt push aaa cmp (bad) popa xor jle push jne out fbld xor pop mov jp sti dec inc mov cmp sbb adc fdiv repnz movsb lds arpl or pop cmp outsb cmpsb dec hlt sbb pop movsl int3 push xor notl js incb fcompl and out jne xor and sti imul arpl pop jl pop xor into xchg inc and pop mov sti add aad dec adc sbb mov pop xchg mov pusha adc lea push push inc aaa inc mov pop gs pop or cwtl aas stc mov pop jmp push sub lret or pop jae pop add jbe insl pop jb mov shl lea lret in fucom hlt mov iret jp push sub mov cmp xchg lahf add movsl mov (bad) inc leave inc mov cli cld popf idivb push pop push fldcw test (bad) jae xchg push pop cs in out xchg data16 mov cmpsl repnz xor shrl cmp xchg pop or and ljmp fmulp aaa insb push xchg daa loopne cmp (bad) xchg jno in dec loop je je mov gs adc sbb shr fistp mov movb hlt decl (bad) jo add mov dec sub cmp dec adc (bad) int mov dec jmp (bad) or mov xchg add scas mov mov leave ja cmpsl mov mov or test pop dec arpl inc jge imul push push test sti mov cmp push cli dec mov mov cmc daa outsl mov and lcall xchg in ds ljmp adc ljmp cmp pusha lret adc cmpsb std push les or std inc sahf shll sahf fcmove adc mov aad or xchg (bad) sbb testb cmc xchg cmp lahf movsb add mov dec out cmpl jp pop and in adc loop std cmpsb xchg ja faddp xor mov out pop adc cmc int and mov cwtl adc mov ja push mov pushf sbb hlt les push ljmp cmpsb fdivrl lret jl shll inc or lret mov cwtl sbb inc inc outsl lahf repnz sti add test (bad) sbbl or insb lea adc cmp adc pop test stc pop push (bad) mov int xchg mov sbbl jnp icebp adc and (bad) ret dec sub pop sub fnstsw sbb in nop jg xchg ret push in mov sti xor jnp out xor mov jno push insl dec imulb jge push imul cli jp sub call push roll push dec sub jns mov and add adc insl aam mov aam ja aas cmp cmp adc sbb xchg jo mov jg (bad) push xchg shrb xchg pop mov movq pop nop pop sbb jl push lods data16 sub sarb lcall mov push fsubs out imul popa push outsl jnp jne (bad) int dec test aas jns std add add mov cmp das mov stc test push lret in sub loope cmpsb aam arpl pop imul push xor cmp inc (bad) dec sbb cmpsl popf and cmp jmp mov ds jnp lods jno data16 inc test mov mov push aad inc and and popl jp mov (bad) inc ds divl cwtl (bad) negb fbstp sbb jl test inc ret or jns sahf incl adc bound sbb dec aam adc or sub rcll pop lea mov scas pop mov cs xchg jge cmp lret int hlt enter lods fdivrs sahf imull lret andl vpunpckhbw hlt movl inc loopne xchg inc lret cs (bad) popa cmc pop out hlt cld sbb lea jl aaa inc mov mov cld (bad) jp outsl xchg paddusb cmpsl ja xor cmpsb and cwtl push xchg imul dec fs push or fimull push xchg pop mov mov lods pusha stos outsl add xchg das lret cmpsb test and movsb bnd movb sub lret pop mov (bad) adc in jb xor push jnp push int3 fs orb jecxz add in jp popf jge repz lret rcrb rcrl in cmpsl xchg sarl cmp mov js ret ret mov cmc aaa (bad) repnz inc (bad) mov inc sub loopne aas sbb (bad) mov cs jno mov lret sub dec ja insb cmp (bad) (bad) mulb inc push adc call inc adc adc hlt (bad) xchg loop jno pop mov fcompl pop imul clc mov dec cmp dec imul test adc lods lret cld (bad) mov jo push and out xchg push (bad) jmp pop shll xchg fs cmp inc fimull repz lea xorb lds push nop fisub pop outsb push mov icebp xchg int3 jle scas push rcr sbb add xchg lret stc roll push cmp mov pop push aaa pop outsb sub popf inc sub (bad) cmc pop (bad) stos push fadds ret sbb mov fisubl rcrl xor movsb inc pop xchg or enter aaa pop xchg lcall mov push sub mov inc or hlt icebp mov inc fadds cmp je jge rcrl (bad) xor push stc adc daa push lret adc out sub test xchg mov or (bad) negb outsl xor pop inc and popa add addr16 pop dec popfw xchg jmp mov or push sub loope fucom in fcompl pop xchg mov outsb inc sub inc and fwait cmp pop out mov and mov inc ds adc adc ss jmp or push add push lods mov in push mov or add pop pop mov and rcl pop jb jl imulb imul bound mov ja pop pop xor les and push xchg gs cmp jle nop mov adc push ret and lock mov inc neg cmpsb mov cmpsl into xorb jno sbb jl cmc lock adc add mov cmp loop push fwait cltd imul sub sub mov pavgb shl divl sbb pop test das dec xchg cmp add dec mov inc add gs jne cmp jns cmp mov inc insb fdiv jmp dec repnz test inc es xor pmaxub or scas out rcrb outsb push adc loopne add insb leave mov jle sub mov xchg mov test xchg lds add jae inc in cmp cmp xchg mov inc adcl cmpsl xchg sbb daa dec in pop xchg lds fidivl aam xor fildll jp shlb add sbb adc sbb addr16 pop popf or dec sbbl and add jecxz sbb push mov (bad) sub pop xchg mov int and mov pop jo dec mov cs sub cltd scas mov loope fucompp mov js mov mov cwtl xor or jbe jle (bad) in xor push and lcall bound mov inc lret push add push not outsl test push mov adc outsb xchg sbb add (bad) cmc push (bad) lock inc jae call push add insb xchg stc inc push or and pop push frstor fs adc ret int3 mov stc dec hlt jl or xchg and mov cmp or stc cmovl dec mov mov cmp xchg and jle int ret loopne jb or or xchg fldt cmp adc sti sbb sub test fsubrp fadd inc movsb xor xchg movl add jecxz jne pop ljmp cwtl push pop mov and out jmp push mov aad shrl repnz add mov lock adc cmp popf out and (bad) jne jbe xor out test add or adc and pop cli or ds arpl arpl add cmp inc xorb ret (bad) adc jp aad xchg popf jae lret in test cmp xchg std fcoml pop mov pop addr16 mov mov mov dec xor test sbb cmp aam dec jmp movsb jecxz cld popa aam lock and and jae fsubs inc ds scas movsl out push inc inc inc xchg mov imul enter lods lods fisttpl inc movsb roll sahf call mov loopne test repz mov out push aam iret jbe js jecxz outsb dec sahf add sub outsl xchg das cmpsl stc scas mov sbb jns stos mov or imul lret popf jl rorl adc cltd mov fcomip jno mov aaa cli test loope lcall sbb sub test arpl js adc (bad) push or js lods aam fildll rcr cmp ret jle (bad) lock cmp dec ss rorl lds jle mov imul jbe and inc add (bad) lock dec dec push inc enter sub std out (bad) dec sbb loop dec dec pushf leave in sub andb pop dec mov pop cld arpl fisubr pushf dec pop fadd add xchg das or lock jmp lahf imul dec adc (bad) test test in adc adc fdivs ds out loope pop lock mov (bad) ds scas (bad) jno test push xchg push fisttpll or cltd repnz std pop adc dec mov mov cmpsb jmp test nop icebp pushf push ss test cmp xor mov pop and pop mov aad aam sbb xchg je rorl rorl out mov lret add gs nop cwtl xor (bad) addr16 xchg mov fsubrl inc int cmp xor pop mov inc push out mov out jno cmp ret adc (bad) inc pop jecxz,pt pop and sti int push insl (bad) and (bad) push fdiv inc dec xor dec cltd push adc jns ds int3 es fisttpl mov loop cmc pop ret sbb and push out and in mov pop insl (bad) rcl pop (bad) mov adc repz pop mov sahf out push pop push jne ja stc adc xchg pop into stos (bad) (bad) nop mov xor mov repz insl push cmc int movsl adc sbb movsl rorb pushf shll dec jge add movsl dec ljmp (bad) out pop iret mov das push inc loopne jne ret adc mov sbb mov push loopne xchg xor dec (bad) pop andb pushf xchg setnp push loope jle fidivrl insl lea scas jmp ja mov cli je hlt js jns ss cmc lods inc lret xchg and repz jae adc mov dec cmp leave sti arpl insb iret add ret or fcomip dec dec or fimul (bad) imul and bound pushf pop leave cmp icebp cmpsb xchg xchg jge pop repnz sub stos pop push sahf addr16 jno sarl mov addr16 leave imul sbb inc ds bound mov fwait add pop lods cld (bad) xchg or mov jo jno nop cmc test insb add sbb out (bad) and push aad lahf adc lods repz sub sahf push pop cmc mov mov mov fsubr push pop mov mov cmpsl test daa add adc mov scas aas cmc mov and lods xlat inc lahf aam push repz jecxz pushf jle jo ss lret cmp add dec ret adc push sub lcall mov addr16 sbb pop xorl ret mov (bad) push stc mov pop or cld insb and ljmp push fmull pop pop pop test aam bound and xchg insb (bad) mov pop add bound test adc js,pt push loope push in jl xchg sahf pop cmp xchg decb sti add aas fildl or aam cmp adc aas and jbe sbb js ja pop xlat int dec movsl pop mov mov addr16 mov mov sti mov cmpb mov push mov cmp or sub jmp enter clc pop sub dec repz dec std mov repz or jae jnp arpl sbb push aad insb orb pop xlat or cmpsl int3 dec pop xorl inc stc scas movsl lret xor (bad) push mov (bad) dec or jg std push ret loop pop cmpsl out xor mov cmp pop imul and pop mov lcall ret lahf clc push bound nop jbe roll push xor call add insl in pop (bad) inc mov jne jge fldt insl (bad) lock enter pop (bad) idiv mov push out push imul xchg xlat je movsl loop adc jns ja cmp mov sub add iret sbb sarb bound dec mov jp in push pop mov mov mov jle add (bad) sbb or and jo push sub loopne xor xor or fiadd inc fild mov sub inc and ret or arpl xor leave in sub xchg fnstcw cli sbb dec mov (bad) fdivs outsb (bad) pop orl cmc out loope add lcall cld xlat xor insb inc xchg sbb cmp mov pop inc (bad) dec push sbbl dec fwait (bad) stos pop movl lea stc mov adc mov jnp ret jnp (bad) cmp push pop stos fdivrp cmp js push int sub jne jbe sub inc sub dec lds in or out add data16 jne mov in out fcoml inc aaa fsubrl arpl sub test pop mov pop mov je pop sbb popa pop xchg sbb repnz negb fildll adc (bad) mov xor stos dec cmpsl mov ret out sbb cmpsl call dec and movsl jo arpl jbe aas cwtl jns cmp loope fcoml cmp lock jg xchg js shlb mov subl push sahf ljmp data16 imul mov ds movb insl push dec mov inc cmpsl out ret (bad) xchg pop mov sbbb cli rol roll xchg or jnp gs subl cmpsb lods jle jg push inc and xor imul fisubr xchg cltd sbb hlt lods call repz push mov pop fidivr pop int3 cmpsl and jne (bad) cmc pop ljmp and loopne dec inc pop adc subl test inc pop xor in loop in cmp (bad) icebp jnp lods outsb fucomp mov movsl xor xor (bad) push fdivr mov and jae xchg faddp call push push lcall hlt aaa loop jl cs pop into mov dec push pop add xchg xor jo xchg subl or lock (bad) addr16 add (bad) sub out and cwtl std bound sub fs aaa push mov popf xchg dec rclb test sub fnstcw mov dec lods imul xor fst inc cld ljmp (bad) sub xchg dec scas dec xlat or push xor add cwtl dec les push inc xchg int push aam or cld add fbstp mov stc jl mov push sti aam pop push loope pop fs push stc in push insb push fnsave das mov mov jg stos mov fimul push iret push add inc cs inc and xor rcl xchg fwait cmp lahf xchg mov ja adc cmp sub (bad) (bad) pop jo xchg adc xor sbb outsl sub lret push jle rorl call addl icebp mov rolb scas add adc pusha and cs xchg movsl subl dec (bad) push inc mov cmpsl mov dec jb dec push lea stos jb lods mov dec addr16 xor test iret ret or xchg ficoml out loopnew inc les xor popa cli mov mov dec dec (bad) dec leave xchg enter pop mov cmpsb mov push mov push push rorl add mov mov insb cltd scas aaa scas out fnstsw jge daa mov scas push sbb lods xor jmp (bad) addr16 jae nop out mov icebp and sub fnstenv es inc lret das ds cvtps2pd push mov es mov cmp or insb mov mov ss lea adc xchg pop in fwait movsl (bad) mov cmp jo or jmp out mov lods lods fs or push jno ds add or sub aas rcl push mov xchg or lods lret fimul xorb pop enterw push imul fs (bad) pop test mov xor add jmp mov mov jle lock fstpl or xor clc (bad) mov cli push mov fidivrl lea xor in outsl inc xchg mov jb out push mov iret ret mov int ja pop movsb cmp test (bad) jnp stos data16 cmc jp setb (bad) jbe les or addl pop pop std push ret js insl mov pusha xor inc pop mov faddl jp popf inc test mov add adc jns das insb add repnz push push cmp loopne fistpl xchg sub inc ja xor int3 je mov js push loopne jecxz lods mov xor sub jns (bad) loopne iret pusha divl lods jp fsubl mov rolb push mov aas in fdivrl mov mov mov repz test sbb test xlat rorb icebp mov fucomip sbb lahf in adc or outsl nop mov lds push ljmp add sbb ljmp test push xor popf jl push insl lea (bad) out imul dec sbb sbb (bad) cwtl dec and ja es jno daa mov icebp or loope mov call cmc in adc rclb mov addr16 and clc mov loopne leave jmp mov data16 adc daa test adc jnp clc pslld idiv jge push push (bad) mov (bad) lock fs enter push inc mov fucomip icebp add (bad) mov add mov sub loop ret sub (bad) stos lods lcall js test pop mov fistl (bad) cmp arpl stos pop and xchg mov mov sbb rcll pop cmpsl jns dec lea or fistl jg lret sub mov (bad) (bad) aam inc fist xchg cmp mov push push adc sbb add dec out cld xor pop test popf jo cmp push (bad) popf sbb adc mov inc jo rorb insl dec cld push arpl xor and lds ss out sarl sbb ja xor jge test add shlb lret jl jg sub enter sbb mov aam adc js pop lcall iret cmp (bad) push nop xor sbb (bad) sahf (bad) repz cmpsb sbb rclb lret data16 cmp test mov in and shl push pusha mov ficomp lods loope stc xchg add nop xchg sbb sbb pop inc (bad) or fidivl test dec push insb mov lods sbb pusha stos test or mov dec fidivl or push pop out jecxz sub arpl jle rolb imul fisubrl xchg jmp inc daa xchg fwait lods push hlt inc or jbe push (bad) outsl roll aas icebp and push mov (bad) mov lock or mov inc push cmp pop or incb mul arpl and jae fstps into je xor and push es xchg testb sub (bad) dec inc js xlat fisub and push dec dec (bad) pusha sub inc dec (bad) incl cmpsl cmp jcxz bound or mov jmp and mov dec or out mov popa cmp fsts mov jp xor xchg sbb je in fdivp mov ficompl bound sarb inc mov loopne aas jge sbb negl or mov ret pop inc inc popa (bad) into mov xchg rol sti into nop icebp clc sub subl sar xlat bound or fiaddl lahf mov out adc cld jbe xchg outsl mov testl test flds fidiv pushf add pushf into rcll fildl push inc dec add sti dec ljmp bound add std movsl inc inc pop test rolb add aaa mov mov insl stc aam inc mov scas add sbb aad pop lret mov push je in inc mov mov inc adc mov out sub cltd mov sbb cld incb mov int3 fsubrs or sbb dec mov or dec sbb (bad) lea or push mov imul std sub and dec divb inc in sbb imul mov inc or iret mov mov inc popa mov in les jge and mov add ret outsl popa rclb mov pusha loopne xchg mov pop add jl les addr16 adc imul or fldcw pop mov mov popf and adc or or (bad) stos mov cmpsl jnp add mov xor test (bad) and je push icebp arpl pop rcrb lds aaa mov push inc xor in mov iret cmp add icebp enter jb pusha rorb pusha adc pop int3 test dec in mov scas jl push mov mov fyl2xp1 xchg scas xchg jb les insb cmp fildll (bad) into xchg fcmovne loope (bad) cmp push pop push aad mov and loop inc xchg pushf or mov dec scas lahf in test xchg lret dec mov (bad) xor push xchg push and mov or in jmp and lahf add into (bad) out add pop sbb push adc adc lods lods mov mov pop xchg dec add shlb sahf test std xchg xchg loop mov popa push loope insb aam rcrb orl xor and mov loop lods roll cs mov cmp fdivrs js aad fimul lret inc imul loopne popf lahf inc gs daa xor lret jb rcr outsl xor in jb stos push test sub (bad) mov inc mov cmp xchg pop adc or cmp jae xchg jg dec mov xor inc inc mov adc xchg in scas loope mov ret repz sub loopne mov jns,pt jnp dec mov (bad) jle test add sub das jmp jg rcr jle mov fist push cmp neg (bad) jnp into mov fnstcw loope cli (bad) mov push or jne out push pusha fildl daa sub aad call iret rcrl xor loope jae fwait jecxz dec out in inc in push orb xchg sub ja out stos mov sbb mov cld jb jmp add xchg inc dec inc (bad) std adc pop fidivrl jmp testb idivb repnz adc jecxz sahf (bad) loopne adc (bad) lock add mov std ja ss data16 pop sub aam xchg mov repnz jno outsb push sbb repz add mov (bad) adc inc data16 mov mov in xchg jg push fsubrs sub add mov mov and pop sbb imul mov xchg int3 pop test or arpl fnstsw push dec call mov sbb test lods dec cmpsl mov cmpl out push adc stos sbb xchg mov orl add sbb pusha mov jno cmc push pop stc daa mov (bad) cmc sbb xlat jb mov fadds leave dec lock pop mov mov pushf leave adc pop sub ss push rol dec mov addr16 pop adc sbb adc dec mov pop mov push je sbb jo push rcll lods lods lret adc call mov mov (bad) cli mov push test cmp jbe out cltd cmp push out out repnz fs inc cli fmull lea dec push cmp jns jns addr16 mov lea ja loop cwtl iret out arpl add mov xor xchg sbb insl fdiv pop outsb and ret scas cs push movsl daa xchg scas push sahf adc cmc lea insl add push and dec repnz sbb bound pop aaa xchg mov int3 mov andl push xchg in mov into fistpl leave pushf (bad) loope ja repnz inc sub je clc dec or int enter out ret stos mov outsl lea insl (bad) (bad) test cmp scas push aam les or insl cmp cli mov stc mov shrb push ss mov jnp inc mov ss addr16 ja xor jp sbb test test popa aaa or add mov push jp sarl aaa ja std rcrb cmpsb cltd xchg pop xchg pop adc or in pop imul cmp xchg movsl cli push adc push sbb sub xor pop and call mov sarb inc cmpsl (bad) popf inc dec sub cli sbb inc mov adc push jne pop (bad) sub push std fs pop popf ljmp dec in (bad) mov xchg faddl and jo,pt xchg xchg lea inc dec loopne loopne dec ficomp push pop add mov add dec mov fwait icebp pop mov jno insl pop inc push mov xor jg sub bound add and pop loop repz sub scas lcall cld inc xchg push out and pop push gs mov push repnz jmp movsl inc jmp fimull xchg sub or (bad) and pop push bound xchg jmp cwtl pushf adc int3 sbb in push push adc add cld mov lret dec addr16 sub xchg mov sbb icebp and push adc enter sbb mov push xor inc testl pushf add mov fsubrl aaa dec xor xor movsb lods das or out addr16 lret pop out pusha pop ret cmp fstl iret xchg push jns dec fmul xchg dec inc push xor inc xchg sbb xchg iret enter mov lea lcall adc lock int3 mov mov pusha and adc push out cmp dec push pop daa outsl addr16 imulw sub push xchg std loope pop pushf adcl fimul jbe inc mov popa out pop xchg fsub cmpsl fsub inc dec fnstsw mov mov repz xchg mov aaa cmp int3 dec loope xlat movsb fwait sub mov inc sbb xorb mov dec lods out lcall or push clc rorl inc sub mov xor or mulb add mov or adc ljmp xchg int3 jno push imul inc push repz std mov mov pop lea aad push cmpl xorl (bad) cmpl pop subb mov sub cwtl jb iret or xor push sub xchg hlt les or sbb scas sti mov jp dec inc out xor adc mov push stos xchg mov ficom cltd jmp imul xchg (bad) in psadbw sbb lods fstl outsl sti push add inc sub imul mov sub in mov lahf xchg mov dec popf dec or popa xor les loop xchg xchg rol sti notl xchg mov mov sbb pop aad (bad) popa mov xchg jge bound dec mov jmp in add cld das aaa sti fadds push outsl fmull push cmp subb jle sbb and sub sbb xchg add data16 mov movsb call mov daa pop sub je mov pop cld cli sbb sbb dec int3 cmp mov clc pop into inc mov pusha jno aad lds in and iret xor and mov loope sbb dec xchg (bad) adc mov sbb outsl or das outsl jle nop xchg int lcall sub mov movsb push cwtl scas out repnz aas out rolb rep and fistp fwait idivb inc test pushf loopne or dec push enter dec sub je,pt pop xor mov test loop stos cld mov push pop loope xchg cmc scas xor lcall je mov mov push mov (bad) pop outsb mov inc shll or insl xchg (bad) (bad) out loop popa mov mov cltd cmpsb cli xchg adc jecxz insl pop xchg int3 inc xchg push vpmaxsw out ds xor loope in pop lcall sbb pop add jmp lahf popf push mov imul push inc push jge jo dec xlat dec divl mov xchg cld dec in dec (bad) stc out xor mov cmpsb jg stos dec cmp xchg cmp in xor cmp mov stos push pop push mov cli mov ss mov add sbb out dec ja daa fldt push pop daa movsb dec cmp adc (bad) pushf push mov (bad) add cs add insl inc rol mov (bad) ja fmull inc out clc xchg push inc push lahf or (bad) pop ficoml into cmp ret xlat callw cmp xor xchg ficomp lock cmp lods xchg icebp pop dec xor push jno adc adc or push cld movsb push jp lcall push (bad) or mov fstps rep int xor jl insb insb or data16 dec hlt inc orps sbb push dec sbb arpl xchg (bad) dec out add xchg mov mov or stos push or inc and adc pushf loopne jl dec data16 mov sahf jo ret sbb daa and addl ret loope dec insl mov fcoml (bad) shll push push (bad) jb xchg sbb xor add dec repnz adc dec out nop or or in cld lret jmp es arpl lock (bad) (bad) dec fucomp inc add nop gs cli and ds xlat rcrl lcall dec mov add xorl jo enter cltd mov xadd rclb int3 pop aam stc jge pushf pop int xchg aas xchg jle std xchg adc aas cmp scas pushf xchg pushf pushf mov jae movsl push add push push (bad) xor fcompl pop cmp movntq rol mov insl xorl cwtl inc xchg push push or xor xchg imul mov lea sti mov xor mov jnp mov scas out cmpsb and ret gs sti xor out or or aam js imul adc cmp lock sti out ljmp cmpsb jp lret xchg xor nop or daa shll pop and pushf jp sub adc out out into or call xchg fbstp test lahf loopne call xor leave gs jge lahf loope cmp out push mov xchg enter push push sbb out (bad) dec sbb dec or scas lock mov pop pop pop loope sti test rcll adc xor ja (bad) scas push fwait negl dec loop lock push xor iret fmulp scas jp dec cmpsb adc adc ja repnz inc push fidivl outsl das (bad) arpl add hlt adc and jl test arpl mov cwtl outsb cld es mov es mov jae imul test add inc jo mov idivb push insl pop int inc sbb pop lret mov fildll cmpsb add pusha add out mov daa inc out pushf inc popa cmp test lret cmpl jne sar mov push pusha add insl xchg imul push out inc cli xor imul test mov add add push cltd (bad) sub mov jns addr16 nop (bad) mov enter sbb test hlt mov sub sbb mov dec xchg ljmp push adc stc dec push adc pop add loop test ret std xchg xchg xor popa out clc dec sub mov mov xchg or insl jmp push mov icebp (bad) mov inc inc xchg dec inc mov rolb div mov jo dec rcll sub mov shll fistl lcall push das mov dec hlt or mov scas mov and mov rcl jne push xchg popf outsb jae and cmp lret mov ljmp xchg mov inc xchg fdivs xor shlb fistpll sub pop sbb cs jl xchg in fwait lret cmp addr16 jb mov push mov xor mov fnstsw jnp aad repnz xor lock lret aaa push rorb cmp repz mov mov pop arpl and mov dec xor test push arpl and rcrb pop outsb cs std cmpsl gs and loop jge mov jbe fbld cmp jb enter inc ljmp or jmp jmp ret xchg cmp inc idivb pop jecxz push inc push jmp sbb js nop pop popf push in adc adcl pop movsb pop in std xchg cwtl repnz imul das lahf out repz (bad) outsb and jbe std nop aad inc pop xor arpl cltd adc cmp sub aam mov pop icebp adc lods lock xchg int xchg stc or je mov jne cmp or xor dec jae jb mov js (bad) sub (bad) xor (bad) fs mov imul outsl jge mov es xor cld dec (bad) mov cmp (bad) cmc nop mov mov push notl or push cli push pop aam test test incb lock mov frstor popa movsl aas test sbb test add insl sbb std jp sbb lods lock dec jne test in dec fbld push push xor xor scas in dec (bad) lret dec mov mov into aad (bad) loop push jae pop add stos test out push push mov mov repnz into ds xchg sub sbb adc std or lods insl mov aad add clc je incl mov aas adc mov add insl pop jl push and stos mov fidivr inc mov lahf out mov mov or pop insl and aad xchg dec ljmp pop orl enter (bad) loopne test div loope nop jne leave pop icebp loopne sub clc repz xchg inc sbb cmp xchg data16 push cmp xor cmp cmc cli inc mov out sub mov mov pushf hlt cs jno sbb fmul mov (bad) cwtl pop push ret lret add add dec sub stos movsl aas mov sbb mov lret rorl call xchg jecxz mov clc cs mov add sub jg icebp popa sbb test sbb fnstsw mov inc fisubr inc jns rcl push or scas test int mov cmc mov or mov fwait inc bound (bad) mov xchg jbe jns xchg loop jnp xchg stos sub pop pop rolb stos lods pop push (bad) int3 push sbb dec pop xor mov sbb repnz stos cld fcoms inc adc push mov add lret mov add push mov aam in je out inc shrd rclb dec jmp jns inc add or lds cmp dec mov aas mov stc sub test (bad) bound pusha xchg xchg fldt pop shr dec inc nop adc aas cli rol popf cwtl xchg push sbb fild pushw std adc loopne inc mov out lods push adc xlat dec pop xor inc jl xchg sbb pop cltd and out rorb fidiv fsubl (bad) ljmp dec rorl xchg data16 leave jecxz ret push out cld jb shr cmp push inc repnz xor arpl (bad) jb add stc push idivb fmull mov mov sahf inc ja int lods nop and scas stc ret push mov int3 mov int3 pmuludq push adc (bad) pop fadds cmpsl adc lock mov add mov sub or mov xor add icebp and cmp cmp push into and movsb mov xchg sbb push sbb push mov sub sbbb adc add test and push xchg push loope push mov mov jle xor inc sbb mov adc mov frstor push pop fs xor inc subl xchg lods loop (bad) loope xor jge test int movsl shrl adcl mov loop adc jno roll int3 sbb xor jns pop (bad) mov lods mov pop push mov inc outsl or sub inc or lods sbb pushf outsb xchg shll dec pop pop out mov mov in inc push and popf add mul das cli and fstpl (bad) mov mov jecxz imul pop and sti scas into sub cmovae push (bad) leave sbbb dec fdivrs out inc push mov push int3 xor xchg aas cmpsl shlb in mov sub scas loopne std bswap icebp daa jo xchg fisubr inc jnp ljmp dec je aam lock ja cmp lods fdivr (bad) cmpsb bound dec adc hlt dec adc sbb xchg mov scas ss idivl std cmp and inc es test push pop (bad) pop jns dec lret mov xchg pop jmp xchg (bad) sbb jbe xchg xchg icebp jmp fmuls pushf sbb cs out lret aas and jnp xlat sbb jmp and add sbb mov mov jb fmull jno out in sbb (bad) in cmp cmpsb mov iret jae dec aas lret xchg stos xchg add arpl pop push jbe xor mov cli ja test scas mov mov adc cmp mov xor xchg jl push or mov mov (bad) loopne mov jmp push lds fisttp cmp xor add fldl bound lret iret or out dec xlat adc cli adc stos aad repnz mov add pop mov lea test sub push icebp push and testb js jg xor jno cmpsb mov sbb in xchg in arpl movsb sbb jle cli inc xchg lods mov add xor inc cmc push rcl xchg dec jle add jg es dec adcl cmp sub mov and hlt jno adc push int3 nop inc jb sub mov dec xchg inc bound sub fistl loope dec xor xchg stos cltd cwtl push xchg inc and mov sbb in pusha std and in push out shrb mov cmp leave lahf push add dec push push (bad) jno repnz jb mov and push repnz in push cwtl pop add sub iret xchg (bad) rcll data16 pop bound add inc (bad) loop sub xchg and insb icebp stos cmpsb daa cmpl std stos add sbb pusha xor xchg or mov out nop dec add dec adc inc and xchg pop cld cld or add cmp fucomi aaa cwtl lods inc test out pop xchg fcoms xchg push enter int3 mov cli cmc repz add mov mov imul jge rcll push lods mov push xchg sbb mov sub insl bound mov aad mov xor orb push lods xor mov xchg or and test int3 ds iret out cli jmp faddl and mov push push in or or adc jg ret cmp push pop sti push xchg in outsb es ret pop fidivl push addr16 test imul sbbl imul cmpsl mov pop add les mov sahf sarb cmc fwait rcl movsb mov pop or ret fistl jmp xchg iret sarb adc sti or jle icebp mov fcmovne movsl aaa mov arpl into les js add (bad) dec mov sub mov cmp sarl inc cld mov out mov pandn dec (bad) stc loop inc int3 mov push sarl (bad) mov mov mov mov add es xchg push outsb dec call out push lcall mov mov insb mov outsb icebp in push mov into (bad) gs in adcl test lret cmp lahf mov mov mov pop pop subb jae scas lret scas mov cwtl ja into inc push push aas rcrb mov into dec xchg pop outsl mov std mov lods inc jno inc add aas dec lds in in jg out sub out and mov out pop cmpsl and mov notb jmp leave scas sbb push fldl mov pop repnz out ret sbb hlt loope fwait (bad) or into xchg add and and mov mov cmp add adc push pusha imul mov ret mov incb (bad) aas lods mov inc jmp xor in inc lea and out and stc pop shlb stc in stos push jbe scas mov dec xchg inc pop cli into xorl jmp mov pop adc xorb (bad) mov cmp fdivp inc sub mov sub jae add jbe adc imul lea mov addr16 js xchg testb rol mov cmp inc ret ret dec mov (bad) in arpl or push scas out inc rol aas mov mov mulb xlat fcompl scas mov popf mov dec cmpsb insb adc aaa imul sbb popf js pop (bad) jp jno bnd fs mov push cmpsl test movsl inc pop mov mov std jo (bad) ss inc sbb mov loope fs rolb cmp mov dec out out push mov inc ficoml xlat addr16 fxam loop jl inc movsb scas enter lea dec jecxz test std in sti push loope ficoml sbb xor hlt mov cltd jns push mov bound scas adc mov negb cmpl or mov pop int and inc xchg cmp je adc cwtl pop pop cmc mov push jg pusha push data16 jp mov mov daa js mov or ret adc adcl hlt js test xor inc pushf daa icebp iret jno xchg je adc cld lea shr mov sub xchg push pop ds insl adc push les inc pushf add mov lret je xor and adc fisttp or mov push cmc movsb pop add sahf subl adc and sub sbb aad mov adc das adc popf aam (bad) or push outsl sbb loop sarb add out addr16 mov lea lret ss xor into pusha mov loop bound pop xor or cmp gs or pop cmp loop fcompl mov sbb jbe mov dec sub push mov pop cmp push xchg dec adc fildl addr16 dec xchg dec xor mov push adc (bad) pop lods inc lods pop sub lcall cmp inc in clc mov insl xchg push out fbstp xor gs inc push fcomps pop push pop mull clc pop xchg mov call mov jmp stos test xchg and movsb mov movsb dec cmc xor scas xchg loopne or in iret mov push and sub cmp or push je adc jno cwtl or pop in jmp adc mov pop mov fcoml and repnz test pop sub pop add mov jo lret dec mov mov arpl pop sti aad mov lods push cmp leave negl mov add test push pop sbb jg pop lcall add dec sarb mov add mov pop jne ljmp ffreep adcb nop pushf int3 sub jno imul cld or aad add (bad) dec es movl dec xchg jnp push xchg cmpsl mov inc lods push cmp inc (bad) lahf addr16 fwait test lret (bad) je popa xchg rcrb pushf sub mov adc inc mov jnp pop outsb js inc jp fistp insl fisubl jo and mov test aam syscall push scas test stos lods das adc cwtl adc mov cltd pop mov clc fstpt dec pop (bad) rolb jge jno (bad) dec outsb sarl inc iret shr call je jne and lds setg jecxz arpl int3 adc adc movsl xor inc add jae sbb xor stos cli sahf dec sub xchg sti sbb jae push push xchg mov mov repnz fiaddl mov sahf lret xchg pop jo popa sub test (bad) aam (bad) mov cmp (bad) hlt les mov jle mov jno insl push jge inc ss outsb xor and or shrb jp inc cmp ss jnp sbb cs inc (bad) xchg lret jne mov mov push fwait cmp sub mov movsb lret jmp adc mov push and daa xchg insb cmc add ds pop movsl scas inc stos mov test fdivs insb in push and xor push mov cli aaa or in inc std push and add inc out xchg in or or jecxz jmp and xor and xchg adc rorl xlat (bad) sbb stc pushf mov push mov mov fild push sarl es xchg and bound adc xchg popa into mov jbe addl loop test ss test (bad) lods adc hlt inc bound pop dec sub repnz xchg cmp es dec cmp dec stos out mov xor push (bad) out cmc inc push xor imull mov and hlt (bad) (bad) hlt call or pop lods add mov (bad) fbld mov push std push sub test push mov iret mov cmp adc cmp fwait or test xchg (bad) jg fwait stc cld sbb xchg pushf mov adc clc inc lret xchg cwtl imul push sub and pop test push lahf adc sub cmp inc add lea repnz sbb xchg daa repnz je pop arpl lret stc adc push sbb sbb pop or mov push call lods push sub and repz jns and and mov adc cmpsb jb fcompl xor jb mov insb fsubrl cmc or fnstcw (bad) in mov dec nop mov les sti repnz sti push inc test cli mov mov jg push mov das es (bad) decb and subb arpl push add imul cs adc mov iret dec mov lret push adc mov dec push jae lock sub outsl xor mov inc add int3 jg inc cmpsb int3 jno out push gs (bad) popa lods jae xchg stc push ja aam jecxz dec push xor xchg inc in mov shl or push pusha lret inc faddl xchg outsb cmc movsb rcr out (bad) mov mov mov in xchg jnp mov xchg cmp lea push stos call movl jl iret push hlt dec push stos fwait mov xor mov cmpsb dec dec in push cmp (bad) xor mov aam (bad) out pop idivb push lcall scas xchg jp dec push or ret jae adc stc inc fs push (bad) mov pop cmp idivl outsb pop ficom rolb data16 fimull push in pop insb push pop fbstp (bad) xchg into popf fcoms aaa xor xchg out test push add stos fidivl push imul push jecxz lcall xchg ljmp (bad) xor (bad) jns or icebp and or inc ds cmp lods xor pop cmpsb mov pop shll cmpsb popf je sbb in (bad) js andl cmpsb shrl mov data16 mov jnp jp lods cmp sbb into lods (bad) mov pop icebp (bad) mov inc push std test es dec sub mov inc xor add lfs push inc and jns inc arpl scas ret mov jns pop (bad) push out mov cmp pushf cmp lods mov jg js jb pop jno xchg cli popf in addr16 add imul call push push fst (bad) adc int3 dec cmp out (bad) pusha loop nop nop xor aad pop push xchg xor sbb push aam push mov mov fdivs insl out xchg and jno bound cli leave push xchg add fs adc data16 mov movb sbb mov and loop sub dec int outsl jmp xor inc repz push js mov xor add (bad) adc pop ret repnz jmp repnz popa cs xlat jmp in loop cltd jp xor dec enter pop push incb gs sub insl pop cs and ret xor jb addl push jg es push test rcl ret rclb jne ja arpl inc neg lds (bad) jb cmp xor xor ret dec ss movsl lea lret hlt mov sbb lods mov lea ja cmpsb sti iret jbe mov enter lahf cmp xchg jnp push xchg xchg imul divb rcl mov or popf in pop or popf enter das jl les cmp ficomp or dec adc xchg mov popa fadd lods mov negb or fwait loopne aaa aaa xchg jecxz inc or nop sbb (bad) (bad) not fwait cmpsb iret bound or pop mov push rorl ret mov leave pop mov fcmovu jno into xchg js aaa aam sub div jno flds shl lock (bad) and fiadd bound inc in pusha adc loope sti push jbe or xchg xor jge je fmull mov ret inc lcall jbe bound xorl inc cmpsl mov dec adc pop cmp pop mov stos test pusha daa cmp lea jnp testb pop lahf push pop hlt sub sahf stos push xchg sbb mov jp adc movsl jnp push xor cmp fild push pop dec daa dec jmp loopne mov pop inc arpl push dec pop sbb jae les xor (bad) sti push mov lahf test clc (bad) cmpsl clc push xor dec or mov xchg (bad) jnp pop mov mov loop int3 call mov jnp das xlat pop mov out lahf lods clc ret std add shrb sub mov std jo or pop fnstsw gs pop mov rcll mov xchg int3 inc les xchg push xor test dec cld das inc mov push js jmp out mov cld and outsb inc fistpll mov mov jnp and dec clc mov les popf pop mov lds mov cmp loope mov aaa jb or pop add push inc adc cmp xor mull xchg dec imul xchg lcall les add cmovne dec pop cmp pusha add lret in jl bound stos add push nop mov xor int3 cwtl js inc mov cli dec leave mov jno cld pop into lahf aad and outsb sub mov sbb aas inc ja lock adc clc (bad) rcrb mov inc outsb sbb cwtl test movsl pop sbb repnz push clc insb fmuls and push aas pop mov mov sbb cmpsb mov cwtl aam mov dec loopne jns hlt cmp mov fwait arpl rcrl and add xchg add or sbb ja sub xchg jmp lret mov inc popf pop lret cmp mov out pop jnp aaa xchg sti movl push lret mov lock fildll into cmp xchg sarb mov mov dec xchg add xchg subl movsl jp jle pop sbb popa fwait dec ds aaa cwtl mov loopne roll xor mov jnp dec xchg fistp sub das lds test mov fildl jle pop movsb or push sbb xchg jae loop out (bad) je scas dec jl jmp xchg xchg push mov xor mov mov cs into cwtl sbb movsb lcall setae (bad) repz push push movsl xchg movb dec lret test (bad) mov lret pop cmp (bad) and lret ja cmp dec fucomip insb aas jp movsb cmpsl loopne add icebp mov cmc mov cmpl pop cmp repnz loop lahf es test lahf movsl inc iret outsb add push cmpsb or loope sbb dec or sub out mov cmp ds xchg test xchg pushf xchg dec fwait mov xchg loopne dec lock sbb test outsb in cmp sub jg sbb (bad) lret (bad) and (bad) xchg mov jb inc loope std inc push push adc adc scas push sbb pop pop loope stos mov xor cmpsl push mov ss mov inc js push in (bad) addr16 scas dec pop or push cmc push sub mov pushf mov in mov orl pop shr xchg test lock test js fstl cmp lahf jne sbb jl jno fninit mov mov jns cmp pop sub push fidivrl or pop imul inc mov mov push cs int3 and jbe push push and out inc lods (bad) aas repz jnp into xor lret sub leave lds adc clc mov fldl pusha cltd clc cltd xchg lea add and in mov sbb out sub imul inc xor not add arpl adc sahf push andl inc fsubs call add mov cmp outsb add sbb imul dec cld adc mov or lahf ret and jnp out mov mov and inc push icebp mov pushl jnp (bad) aad pop mov dec cmpsl pop les pushf movsb jbe (bad) adc les out xlat test ja mov mov in sarl and mov dec or mov stc dec call sbb sub mov pop mov push lock pop ret bnd push mov lret add pop into mov (bad) adc pop icebp jge xchg mov xchg xor in jbe add xor (bad) (bad) movsb fsubrs (bad) icebp mov popa or fstl fs xchg xchg ret imul addr16 cmpsl lea dec in lcall pop clc xchg mov test (bad) lock fxch xor mov and sbb xor imul sarl jecxz vmwrite rcl sarb cli sbb movsl cmpb push jle xchg aaa ret call (bad) xchg xchg lds popa mov pop in push pop inc dec dec shl stc adc mov fmull enter sub or es stc sbb inc mov adc inc int3 fwait xchg mov adc dec sbb ret out lret rcrl and pop into xor pusha ret outsb sbb in mov jle mov insb scas mov cmp in adc ljmp sbb and jl pop sahf fs and mov call adc and sbbl popf test mov cmp repnz inc mov push mov into das into or jbe or or jnp pop movsb sub fstl inc iret bound int3 mov (bad) pop outsl iret lahf rcrb (bad) nop xchg push cmp and inc dec mov sub mov cmp push dec push pop out mov mov mov mov pop xlat jp mov jb dec jge sub or mov sbb mov xor push mov mov and mov vmread push lcall inc addr16 je icebp pop pushf and jmp pop clc repz popa and arpl push push stos inc mov sahf xchg sbb repnz inc push adc addr16 out aam (bad) pop inc push daa dec into aam adc xchg test es jge or jmp jb popl ret cmp pop xor sbb sbb xchg xor loopne cmp mov stos cmp cwtl imul pop cmovp or pop movsb cwtl les dec mov mov pushw push std test dec cmp ljmp pop stos sub lea push inc dec push sub pop inc cmp inc inc cmp mov sub movsl pop and ds imul dec sti mov xlat cmp or rclb push loopne and jno mov aad in push jg adc add jge cmpsb and and outsl int3 adc iret adc fs mov cmp loop test data16 jp leave mov mov mov mov aam or (bad) cmp (bad) xor div or rcrl std stos push xorl mov mov scas cwtl adc mov fs bswap cmp ss leave mov clc push cmp fcompl dec ret popa insb mov out adc fild movsb or jp mov std xchg xor sbb (bad) sarb int3 push test xchg xor stos std or aam in lock gs cwtl or inc jle fsubrs mov inc sbb and push xor adc xchg sbb in lds push ret jo mov adc push and pop bnd xchg inc (bad) or pop je ret mov sbb sub push cmp ret adc sbb add or mov or cltd inc push jnp xchg repz and mov (bad) xor stos inc les aaa add inc pop jns mov inc jl in mov pushf mov or xor inc mov call pop (bad) xor pop xor push (bad) push in xor push mov sbb (bad) (bad) cmp sub aas pop cmpsb xor pushf inc in pop mov sbb rorl add or notb loopne test lods xor mov jecxz pop cld sub test (bad) dec fisttpl daa sbb aaa xchg sub (bad) cmc lock loope inc movsb and push jle int3 sub push and pop sub insl std scas pop loopne insl sub dec mov push pop adc ret call pop test gs cltd push mov jne in fld inc or shl stos xor dec aad sub fistl jno pop out sbb and xchg jp lods sub jo push aaa pop jmp jmp jge mov das sbb push imul loopne xor push mov xchg or shr out ret stos push cld (bad) into pop int3 pop pop sub lods xchg daa push pop enter cmp mov popf xchg or xchg xchg mov fstpt loope mov fs cmp mov jns pop jne inc push pusha lock daa lcall enter call push push xchg iret loopne xchg cbtw mov jnp dec jge jecxz fwait add sub shl add pop add mov mov dec push lods mov mov sarb jae adc stc jl sarl repz out jecxz cmp sub out leave lcall insl aas jmp sub xor out cld gs cmp add and add scas je push inc jne mov out fstps and gs popa cmp sub lret andl (bad) std js dec repnz cmp inc (bad) out jmp fcoms mov sbb and pop sub inc cs xor xchg (bad) mov fisubr mov jg jge arpl push dec aas sub call inc push lret ds jl cmp lret (bad) xor iret lret pushf and or js inc repnz popf mov push sub jle daa insl out jge (bad) jge jo sbb mov mov push mov mov orl add sbb dec lock push inc test push dec xchg dec idivb gs ds icebp mov sub iret jecxz sub sti pop lds or sub sbb out dec fdivr cmpsl mov or imul cwtl (bad) hlt in in add cmp dec and push xor pop (bad) cli jnp jno adc cs pop ds sub incb std (bad) pop mov jne jno mov daa push xor out inc ffree xor adc add adc jb (bad) out cmpsl or cltd sub cmp pushf inc adc test or fldenv push (bad) int or (bad) lret mov mov push sar inc xor addr16 jp cmp ret mov dec jo fldt (bad) in stos repz inc add in sti jle shrb fwait scas idivb and in mov inc jnp divl push adc cmp xchg icebp pusha dec dec popf scas aam scas xor and dec rcrb lock cmp test les fsubrl ss mov xlat sbb xchg subb popl inc sub inc fcomi sbb fcompl je cmpsb mov lea dec out push xor add arpl clc adc cli stc pop mov (bad) mov push loopne out fsub dec fldl movl out shrb arpl adc push or scas mov pop sub mov or sub cs add push adc add pop push out aaa clc and mov cmp xor subl dec es mov out or ja and sub xor loopne xchg or push mov sub sub inc ret xchg outsb lock jge std ja fidiv add jl imulb push leave jmp and (bad) jmp inc es push clc jae shrb lahf addr16 hlt push enter or icebp mov sub nop mov and ja (bad) rclb jmp das adc insb test iret xor and movsl xor dec frstor es adc sub push movsl cmpsl (bad) in pushf orl xor iret push jo adc sub cltd jbe and xchg aas leave daa mov in sbb test pop shlb repz cmp xchg push or ds pop int3 jecxz test mov stc pop xchg (bad) hlt push cmp sub xor stos sbb mov push mov movsb clc rcr or inc stos lock xor mov imul pop add ja add or sarl mov xchg (bad) andl xchg mov mov repnz sub stc xchg sbb add andl jl into scas (bad) cmp or xor and add leave mov dec je cld mov xchg outsb mov enter fsts cwtl lods out cli inc dec js frstor jg (bad) mov and push lock dec cmc inc aam dec xchg and stos cmpsb xchg dec jmp lahf and popa mov mov mov lret mov sbb loope stc inc cmpsb sub fcompl cmp or jp and pop mov dec adc addr16 int dec inc lea pop imul and jne (bad) repnz cmp mov pushf lods jle inc xor outsl push xchg push (bad) adc cld lcall adc outsl insl or aaa add les fwait inc aas or mov repnz lahf test popa outsl cmp lods test jmp les fs loop in push lret fistpll jnp test or cld cmp sub movsl enter rorw jnp sahf adc adc mov insb xor and (bad) jmp push jae stos dec and inc or adc or xchg mov inc cli inc sub or xchg out push sbb ljmp dec xlat repz dec (bad) int push testb jle cli mov mov std jno pmulhw mov repz fstps push sub mov out sbb jno in popf push lahf pop fsubrl jns ljmp pop adc mov mov cmpsl sbb sbb sbb or (bad) aam add jle mov ds aam das sahf push adc repz push mov pmullw stos fstpt xchg push pop clc jb jle dec pop (bad) outsb sub (bad) and add xor jo inc int (bad) out mov or divl idivl jb mov jmp stos cmpsb add xchg jb sbb (bad) jno inc fs loope mov fmul mov and lock lahf adc lods sbb movsl cmp lods movsb push loop mov mov or repz mov xor push aaa sbb jecxz call mov scas cmp cmp mov cwtl mov pop int sub xchg mov pusha (bad) sbb or std cs and mov ss push xor test int3 fs movsl int3 or aaa mov cld adc adc clc pop ja psubq inc (bad) test pop addr16 pop not push cmpsl cmp jb shlb pop fisubrl (bad) xchg inc mov sub lahf xor mov sbb outsl leave push push out out xchg je int cld jmp jp jecxz (bad) in cli pop or outsl mov mov push mov sbb aas sub push popa xor xchg repnz mov jne cwtl xchg mov cli pusha mov daa jge mov and adc fs and mov sbb pop sbb pop fcoml mov loop or sbb insb insb in aas (bad) std cs jg add lahf sbb or and into repz pop jns scas enter add lods outsl (bad) jnp mov mov mov das cmp outsl cwtl mov mov mov pop rcll clc (bad) jae divl add insb pop pop inc subl sti cmc pusha cwtl repnz push or imul or out mov js fstpl movsb rclb jbe ja mov fsubrs imul cli jbe fcoml (bad) sarl mov pop loop mov sbb dec ret out insb ret mov push out pop sbb rcrl rcl mov or lods add cmpsl lret sti pushf jecxz es notb mov xchg (bad) mov insl push lods or cmp frstor icebp cli mov pop loopne mov fidiv cmp test cltd jecxz pop out addl add inc push imulb (bad) and xchg insb ret cli andb lods inc stos sbb push sbb ljmp mov sub pushf or out mov mov stos dec test movsb push inc shrb and (bad) cmp adc (bad) inc push inc fadd jecxz outsb insb les js div pop xor mov enter iret in or mov loop cltd scas test fldt mov pop rorb jo sbb dec sti push sbb mov imulb sbb or jle ja jns sub int3 nop in das jno inc add dec mov (bad) xchg mov lock cmp add xchg ret and and mov and movsb adc xchg cmp jne ljmp and xchg push out mov jae push or cmpsb iret push stos or inc mov sahf add je pusha mov outsl bound imul sub ret xchg push icebp cld mov mov test daa cmp xorl cld cmp mov icebp add mov sbb pop sbb adc aam cwtl aaa push inc cli xchg pop lods sbb and (bad) pop out inc cmpsl cmp inc in popl movsl pop cmpsl adcb adc mov mov ret xor ds inc add lcall mov xlat out cwtl fildl test movsl pop inc mov daa popa iret xor popf fsubs mov in add xchg test scas lret (bad) icebp mov aaa push add dec mov fildl or mov movsl (bad) dec repnz xchg or outsl aam mov mov push dec stos pop fwait (bad) push lahf xchg dec mov sbb ftst movsl cmp mov jp and cs jns movsl (bad) xor mov jg mov mov cwtl xor enter pop add xchg faddp aam loop dec xchg adc lods movsb and ljmp je (bad) ja aaa (bad) and mov test repnz jl xor in xor roll push cltd or jne popf jbe sbb xchg test adc xchg mov pop fiadd cwtl fadds cmp loop (bad) add inc rcrb mov movsb mov es out bound test dec mov call scas pop lods add jmp das cmp or adc adc sub mov mov pop pop imul popa (bad) add mov mov add rcrb jns xchg dec jbe icebp (bad) cltd aaa andl repz mov adc int3 hlt jg mov mov lcall icebp (bad) int cmp adc arpl mov sub mov ret adc std mov into mov xor mov pusha or in adc jno and movsl cld dec mov pushf or xchg cmp xchg pop mov insb (bad) dec into je cmp mov or ja (bad) lds out (bad) xor pop out out adc mov lret xor pop jbe ljmp sbb or add loope mov adc mov inc and scas jecxz (bad) fist sbb adc pop xchg psubd daa pop xchg add or pop loope (bad) lock cmp mov dec adc mov or fistpl fucom fisttpll and lds mov mov mov das out ss cmp and mov lds fsqrt inc loop lea push mov dec mov (bad) leave or loope sbb cmp jl push lahf jnp imul xchg pop iret mov test pop ss nop cmp fwait push add call out jmp das rcll push sub cmp lret outsl push fisub sti cmc cmp sub popf lahf mov push jno mov cmpsl int xor add inc jb ds ja jecxz stos insl out (bad) jo jb inc loopne push stos enter pop push idivl fucomip (bad) adc mov inc adc cs lret xchg fdivs mov mov cmp loop idivb fimull push jbe movsl imul fwait mov xor jge repz ss ss mov add mov rorl ror jmp orl add xchg pop aas ret jmp lcall out dec jl cmp mov xchg lcall cmpsb add mov push pop loopne (bad) pop inc dec jns jae call ret push mov or xchg sbbb (bad) push mov mov jecxz mov mov and mov jbe popf aas scas inc out scas (bad) sahf sbb sbb pop lcall or xchg inc inc dec push or add sbb cmp sub or nop adc daa and fmul addr16 fistpl mov inc (bad) jmp orl pop fwait cmc loop cmp push daa imul inc cli outsl jle adc clc fcomps movsb xchg or push push mov adc add pop dec popa push movsl (bad) jmp out adcb mov scas fadd mov add dec xchg sub mov mov lret jge pop or lea lcall scas (bad) inc or les (bad) lahf (bad) xchg xchg pop sbb add mov icebp jnp mov adc pop sub movsb inc notl dec jmp jns xor mov fldt sbb jne (bad) push gs rorl repz jg fcmovu and ret in (bad) in in push mov push pop lret jb std push aas (bad) push dec sahf fwait add push sub pusha mov sub lahf sbb or adc imul mov loop pop pop mov inc pop mov mov jge or ja xor les pop or jmp (bad) leave xchg jmp rorb movsb cmp xchg sti fucomi fisttpl dec jns inc adc orl in ficomp jle shll jns sbb test sub mov xor dec nop out mov adc inc mov mov adcl fwait movsb rcl fimull adc outsl hlt nop push sbb clc or hlt pop xchg mov jmp push and insb cmp sbb push mov lods dec add push dec lock fcoml arpl test inc test sub sub inc cmp dec insb ja jle mov fs in mov std adcl push mov lea (bad) jg lods prefetch inc (bad) lcall push insb (bad) sub (bad) out pop clc xor xchg aad push lods outsl xchg push pop lcall nop sub adc xchg (bad) jne xlat test jmp or or xchg sbb popf or mov sub cs push js pop ja and stc ret mov add out mov xchg iret jo sub xchg inc xchg xchg dec (bad) test xor inc inc xor frstor push mov popf stc mov mov jno cli stos mov ja push movsb cvtps2pi ret mull inc jns repz xchg xor jne mov (bad) and adc mov insl mov psrlq push fildll pusha inc inc jo sub clc xchg mov mov arpl (bad) mov push mov ja mov movsl xchg jno fdivs pushf dec mov les jmp es or or inc sbb push mov popf sbb (bad) int int3 dec xchg lret mov (bad) xor sets pop data16 shrl mov push sbb aam ret das adc cs cmp xchg je (bad) (bad) mov rcrl (bad) sbb cmp push in in pop rcrl fwait shrb roll in (bad) jg stc push mov pushf shlb fidivr fs push iret aad cmpsl in nop pop sbb jae xor push sbb pusha pop aad or inc mov popf sti push stos into cmp iret pop cmp mov popf or lahf sub mov rorb jl mov and mov pop mov and adc push (bad) fistl das inc pusha xor out or es sbb inc jnp xchg leave push push mov ficoml pop repz jae mov add xor (bad) aaa je out popa hlt out lock mov push adc out test xchg inc (bad) mov cwtl dec insb push xchg pminsw (bad) sbb js cmpl push bound pop mov mov psubsb mov (bad) (bad) loop out ljmp xchg add or mov cwtl and mov in or mov es push sub lods xlat xor adc and mov dec aaa movsl mov mov stos jbe test mov mov adc call xchg add sti sub and imul or in and xchg enter pop mov or jo xchg (bad) in push adc sete movsb dec out stos js push int3 gs fdivrp divl nop cmc in xor scas in repz or mov in push cmpsb repnz loope cmp mov xorb in xchg ljmp (bad) cmp and arpl (bad) jb mov mov xor adc clc out jne stc add or les fwait adc jle out in jl nop int repz pop adc fs mov xchg xor jl gs and mov enter loope add sarb (bad) out pop push push jns popa mov je or jmp xor push push add mov jne pushf jne pop dec inc cmp pop adc xchg es xor add jmp enter push lcall or jbe fsubrl pop mov mull pop sti gs lds (bad) outsb (bad) (bad) iret xor pushf or cmp ds movsb push sbb sub adc rcl in inc outsb sbb xor sbb ljmp dec inc jne add out mov mov hlt mov or adc clc dec fstps jns xchg out loope pop sub pop rorb mov xor xor gs xchg sub inc rclb cmp lahf scas jge push mov xor xchg mov cs mov mov push adc cli or sbb inc rorb inc insb enter clc das (bad) mov xchg adc (bad) mov pusha sub repnz inc int3 cmpsb test addr16 enter cmp ret call lods adc (bad) arpl and andl (bad) xor xor dec scas mov mov testb cmpsl shlb or pop mov iret fstps frstor out arpl xchg sub push mov jb aaa mov cwtl sbb outsw rclb pop jae push push adcl sub mov sub mov dec popa fistp aam lretw test mov pop outsb cltd in add lods push ret or push std adc std int scas mov sar adc enter lods mov inc mov inc lods cwtl adcl mov mov sub setae imul cltd cmp sub (bad) shll js jle data16 cli lahf les (bad) pop arpl ljmp and movsl push or pop les jmp es (bad) sbb pop dec ret fiaddl add sub add loopne adc enterw dec insl adc sbb sbb sbb pushf push sub fsubp popf pop mov repz outsb daa cmpsb adc int3 mov or cmp aaa cmp scas fisttpl inc inc jbe cmpsb sbb es ret add repz cmp sbb pushf pop sub shrb pusha mov or in dec jae jmp inc loop xor dec gs out adc out leave rolb xchg jl xchg int push xchg leave lods mov daa xor js pop dec or sub inc cmpsb mov nop aam mov dec aaa cltd out mov xchg icebp mov ret mov cmp mov lods push inc test jo lods add mov adc (bad) into nop test cmp pop negl inc aad adc pop pop rcr in mov sub repnz ret pop gs xorl cs inc (bad) ljmp stos (bad) mov mov inc jne cwtl cmp mov (bad) sub mov dec sti cmpsl pop outsl dec adc mov pop push push add mov mov inc xchg push or cld sub mov ss lcall imul addr16 lcall adc (bad) mov add mov fildl push xor pushf push xor ljmp inc or cmc ret fwait xor xor mov jg inc pop sarl testb push (bad) cmp xor cmp xorb insb in sub sub out js sbb pop test pusha pushf fisubrl lret add pop jnp inc mov ss cmp adc or jl in stos pop je push cltd adc add cmpsb (bad) jns and adc shlb mov fcmovnbe xchg imul iret jns sbb dec bound push jns push data16 mov (bad) xor test cli jb xorps dec mov ja out int3 pop (bad) outsb add xchg cmp out or push xchg fidivrl cmpsl aad mov ljmp xchg jp ljmp out sbb jae xor mov cwtl cmp mov rorl pop sub pop mov lahf div adc xchg movsl call jmp mov adc arpl jno cmp dec jnp and or clc or ret mov out je inc mov mov aas xchg (bad) pop mov adc jno into divl push lds jno inc push es pop xlat (bad) xor dec mov stos lods xor jg (bad) scas xchg out sub mov popa mov call js jne jp jns and in ja and enter cmp ja add ror push sub repnz js cs (bad) mov repz xchg (bad) ds sarl and push sbb pop xor xchg jae cmp lods sbb dec (bad) and sbb lods mov mov leave jle mov ja pusha push dec pop pop outsl xlat sarl sub mov out add push lods (bad) pushf fistl xchg xor sbb hlt test lods call sub test lcall data16 out scas push mov adc mov jae jge mov ds scas sub inc xchg jbe stc jne xor cmp std jns jecxz cmp lret dec push sbb xchg pop sti push outsl fxch mov jo cs idivb adc jl popl test out inc jne,pn xchg cmp out hlt or pusha repnz lods cmp xchg cltd jne (bad) sub xor repnz sbb and movsb and mov popa xor add or lret stos mov movb roll sbb dec inc xchg adc inc and inc mov insb repnz mov or add aas movsl jo ljmp inc daa sbb sub and jl loop and fbstp pop mov push lods hlt mov insl and fsubs stos mov lahf mov cmp mov lds pusha imul sub ja test or adc enter or or inc sahf or cmc jecxz inc mov inc inc push jb inc test cmp jo cmp mov arpl or ds add das jge adc mov xchg lea adcl pop (bad) test enter in and negl inc subb dec jno outsb fsts inc add jns add xor lcall enter (bad) pop mov add (bad) push (bad) xchg push lods mov sub dec or mov xor push xchg dec call mov jp ss shl (bad) mov icebp dec cmpsb sbb ljmp js out jns xor pop add mov push fild or jle jae jg mov or mov inc (bad) jo push out loopne,pt or aam and rorb negb jae pop popl jl into dec adc and pop rorl iret fucomp xlat adc imul pop inc je and mov pop jg loope rorl ljmp adc inc iret test lret pop test cmc pop cli mov lahf cmp push clc mov (bad) (bad) enter je add adc inc cmpsb mov orb (bad) cmp popa inc (bad) fwait movsl js in pop stos dec neg cli mov icebp (bad) fnstenv daa inc push js leave cmpsl (bad) js mov xor in xor mov or pop test jbe (bad) adc and leave aad sub adc sub jp inc ds lods pop (bad) inc movsb mov into arpl lret cmp lock test push mov jl ljmp dec in dec xchg lahf sub mov lea (bad) pushf les jecxz push jmp inc in pand je cmpsl daa sbb bound dec dec fdiv fsubr or jp repz push jns cmp mov and fdivrl mov lahf (bad) pusha dec loope leave xchg sbb mov enter jp sahf dec push or and lret jnp xor sbb xchg and aam in cmpl pop push pop mov imul mov ss mov daa push xor sahf push jp les push popf lds (bad) out sahf sbb cltd mov inc outsl xorb cmp inc inc clc pop test popf cmp fwait outsb push mov inc lock aam pop insl fisttp test or pop rorl ja (bad) or js test lds xchg cmpsl xchg mov cmp push dec inc cmp hlt or ljmp xchg cmpsb jl inc xchg jae sti loope pop cmp mov cmp jb add nop hlt jp icebp xlat xchg push mov or dec or cmp scas push fsubrp insb adc dec lods mov fsub je pushf fildll mov loopne mov cwtl fstps imul scas loop inc jg cmp pushf sub daa idivl xchg shl movsb hlt sub push mov cmp stos mov ja add icebp ss popa jbe add (bad) fsubrp pop or add rclb imul ja sti sbb stos mov push inc jp sub cwtl into sub idivl mov and add add nop cmpsb ficoml out mov xchg das test movsb pop mov sub stc sub (bad) je ja into inc pop xor pop mov xor lock or movsb ja call xchg push inc lock movsl add mov push mov ficom mov mov loope dec sbb orw sbb (bad) repz int3 daa add inc jns mov pushf stc or out mov xlat pop insl ret and vpmaxsw add adc sub pop pop fiaddl ret cmp test adc xor leave add push lcall cmp scas cli sub (bad) pushl shrb mov ljmp inc pop sbb cs mov push (bad) sbb push cmp push daa (bad) cmp adc sub mov xor (bad) jae dec jmp test mov push imul std les lock and or les xor xchg rcll mov inc sub out aad inc test xchg jmp ja mov inc enter xchg imul and outsb pop insl clc nop inc cmp flds mov pop movsl (bad) and hlt adc es push scas sbb iret aam xchg mov (bad) (bad) mov repz xor iret (bad) movsb mov pop mov int3 imul gs jbe pop xchg cmpsb out lret cmp je punpckldq adc out std (bad) test ljmp mov xchg inc pop ret adc pop faddl sub in jl js lret push repz pop xchg mul mul jo adc in hlt int3 (bad) lods xlat repz or xchg push and icebp jl push mov (bad) aas cmpsl cmpsl add inc mov imul pop out jne mov popf sahf xor in jecxz mov sub out lods fist ret loop inc and dec inc xor int mov jns rclb daa out into xchg mov sbb jnp loopne in mov in inc (bad) into aam cli enter rcr cltd popf or mov sbb loope cld inc ror and adc decb out and inc push adc push adc push push fbld lock adc movb sub stc cmp inc lea jl and lea mov xchg cld cwtl jbe adc or xor in jne aam mov or int3 jbe fildll repnz push ret xchg stc inc insb sbb and popa sub popf loope sub fst jmp sahf lcall and push push popf mov sbb xchg pop mull sub add mov fs xchg and out sbb dec push adc xchg jg sbb neg (bad) sbb cmp negl cwtl push cld xlat xchg lret lcall nopl add sub ljmp cmpl lahf push call sub out adc mov or imul int lock mov sbb scas mov dec sarb nop aas and pop imul mov std pop mov sub fs aas les mov popf inc mov loope sub cmp fincstp hlt mulb inc aas or movsb mov inc (bad) mov sub addl add lock fcomi or inc mov push jmp and (bad) jb mov jae (bad) fldenv xchg cmpsb test adc xchg fst inc pop mov pop fadds push mov movsl ljmp xchg out int3 sub aaa jl jbe dec jo dec (bad) push test lock nop stos adc pop rcr test mov dec add bound sbb add shl jbe inc dec xchg jnp enter nop adc xchg mov dec movsl push push lret in loopne mov cmp or iret inc iret push out xor loopne enter inc pop push fisubl cmc inc jbe mov movsb stc std divb jge jp shll ror imul push dec and push popa jnp int add lods sti dec hlt fcoms outsb mov mov inc lods sub and movsl xor pop push sub push push push push iret and mov mov aad xor hlt and in jg rol int3 popa dec sub or stc jae insl ja mov and push jmp stc cmc dec enter sahf cwtl imul adc add dec daa insl loop add les shrl add inc lcall test fistpl sbb divl in jno sbb dec dec lret (bad) (bad) push imul xchg mov or add add scas inc xor mov add pop dec test mov outsl dec add add push xchg pop mov xor adc jecxz in mov xchg adc sub push mov aam sbb ficom dec mov ret (bad) jg pop mov xchg fcom inc lahf dec fmuls sahf sub andl pop dec sbbl out into sbb aas fnstenv xchg jle xor adc pop insl pushf sbb fimul pop andl xchg (bad) daa inc je mov sbb jge mov pop popl push inc sub imul test cs (bad) loopne jmp ror pop xchg xchg mov dec leave addl icebp mov (bad) mov xchg subl rcrb mov lea inc pop out mov xchg scas lret jns pop fisub lods sub daa popf fdiv xor roll hlt clc xor (bad) ror and dec push sbb mov jp arpl leave fisub xchg ja mov das pop lods popf bound das stos int repnz sub xchg imul mov pop out sarb leave pop add jae or and xlat outsb mov sub in xor lret fnstenv xchg aaa pop pop or out push mov loopne mov fmull add jp mov xor push fiadd dec outsb inc mov and cs iret xor mov push jg xor loope lret cwtl movsl fwait repnz stos frstor inc push push jno stos sub push adc enter lods fisubl sti xchg mov rcrb xchg sbb lock mov test icebp cmp cmp jne lret adc push xchg fsubrp jae dec test xchg aam mov int3 jp iret xor mov shll cpuid cmp jecxz pop jl xor push sbb xor xor push jb push mov in div imul cmp in jge pop push aad (bad) into mov inc mov add and pop inc jge pushf mov mov push test mov mov sub ret pop mov std das and cmp cmp lret aas aaa clc jne clc les push add add mov add aas lods ret bnd and loope dec insb push dec xchg cmpsl scas repnz dec adc jp orl ret jne into pop frstor add repnz mov pop ret fs (bad) ss dec addr16 push dec xchg cmp into mov inc test xchg fmulp aaa pop imul gs lret add dec scas mov sbb sbb test mov mov clc test cmp and aaa jmp xor int jb adc lcall cli rol test rol ret mov adc cmc cmp adc mov (bad) data16 ljmp adc test lods (bad) hlt fs xchg leave or push lret stos daa pop and test xor ficom sbb jg adc mov sub jns jb push (bad) rcll sub fs inc arpl test sbb cwtl xchg or mov inc movsl dec xchg (bad) aaa popf pushf mov jb les cmp pop jbe mov fimull dec dec xlat sti pop or (bad) mov inc and mov jmp ror sub inc in movsb imul mov xor mov mov xor sarl out dec mov cmp dec lcall test addr16 xor cli push mov sbb jbe sbb scas push popl jmp cld dec ret (bad) or mov (bad) iret jg pop imul and pop cmp into cwtl jp std test rorl lcall adc repnz sbb cmpsl pop and push jmp and outsl pop popa push ret mov mov xchg cmp cmp mov int3 add maxps jg gs adc xor shrl lds dec inc sbb sar xchg cmp pop fcmovu jl inc out fnsave push inc mov (bad) mov fisubr adc pop xchg jae mov mov pop out xor push idiv inc fmul cld mov mov ljmp add add sub pop push cmp lods nop xchg repz nop iret jae outsb in sbb mov aaa mov xchg divb in mov loope in cmp cmp aas ret or scas xchg cmp dec mov dec xlat movsl sbb mov popf aad xchg push jp adc loop lret push insb test xchg fs add xor ficompl stos cmp adc cli shrl jns push jae (bad) pop stos dec or xchg fstpl xchg cmp jge sahf lahf mov bound fdivrp mov ss add iret (bad) icebp pushl xchg out clc loope jb mov ja sbb ss dec mov mov xor in or or out mov add push sub (bad) arpl cmp cmpsl dec pop xor jns mov or int ljmp in (bad) inc daa popa and add inc ret sti movsl je sbb fbld xchg loop (bad) lret jns push adc and jle (bad) add pusha push mov push dec imul or add pop mov pop xchg ficomp pop mov out arpl (bad) jecxz mov mov bound pop and lret data16 fwait xchg push xchg mov push out mov mov (bad) in push fldcw roll dec mov push pop test cli pop (bad) loopne mov push xchg xchg sarb pop insb es orb (bad) (bad) pop jne sbb sbb or pop cli shlb dec jo xchg mov rol pop and and lret inc inc mov out ds jg incl cld inc mov (bad) jae mov mov outsl stos jmp int3 xchg fucomp lcall ret rcrl scas addl adc fadds cmc jg ja outsb int3 stc ss pushf inc pop es fwait lock dec mov mov mov dec stc mov mov fcomp or mov mov fisubrl mov in push ret dec jmp sub loopne jno data16 pushw ja enter dec mov mov fstp (bad) push push jmp push lea or and xor daa leave cmp push (bad) xor fidivrl and fsubp xor adc dec (bad) cmp or xchg pop adcl out adc add shlb lods mov je xor lods cmp aad push inc push cmp out push mov rcr inc ljmp rcll push push cmc test (bad) jae sub fidiv pop movsb mov fmuls in mov push pop mov cld lds push into add and adc push aam or fdiv push (bad) hlt cmp lcall jne push (bad) (bad) aam (bad) rcr dec mov cmp cmp insl push and aad jp mov pop dec sti dec ljmp lods dec or push jp adcb and ret repz pop jmp xchg mov aam jp add lret shll or fcomi cmp negb and dec daa add pop imul dec xchg pop inc mov xor push imul pushl (bad) arpl mov jnp insl test aam lret cwtl dec pop and jo adc xchg inc in mov in jmp fidivl mov inc push sbb bound loope int (bad) insb pop cmpsb ret mov or jns push push push mov cmp shrl xchg inc fbstp sahf or sbb pop xchg adcb xor xchg in jmp and sbb push test int mov scas icebp and das loopne adc or xor sbb (bad) or mov es in jg add mov scas dec xor bound arpl test and icebp pop rcrb (bad) pusha lret fdivr pop push mov int inc int and adc lcall mov rcrl add jmp lods mov dec push mov (bad) fldcw cmp (bad) in mov enter push pop mov mov cs in push inc and aam xor jl,pn cmpl ror out mov div lcall addl sbb test mov add jb cltd pushf arpl test out enter fidivrl rcrl negl insl (bad) and fsubr jns fsubrl pop adc sbb cmp add jb cmp movsb stos xlat push fidivrl scas push gs xor out jbe popa out cmp xor add mov mov cltd arpl (bad) lret ror (bad) sbb mov sahf (bad) fidivrl pop add jl out mov fdivl adc xor pop jge add nop outsb cli aam repnz hlt mov dec test sub xchg dec gs outsl test arpl mov mov and repnz push sbb clc popf lods jge into ret cmp jno gs xor jne sbb stc adc ret cmp test push mov fcmove sti insb mov andl add fisub bnd mov inc (bad) xor (bad) inc ficoml push lds sti lcall movsb sbb test cmp movsb cmp dec mov mov (bad) int3 jae push mov xor cli cs mov sub iret scas fidivl xor insb loop mov jge aad repz repnz (bad) ljmp sahf add shrb dec push cmpsb jecxz push pop and pusha xor jecxz sar in mov rol movsb scas dec (bad) jbe jno loop sbb mov jmp push inc (bad) out inc or in imul fstpl jg addr16 jge repz aaa inc jae mov jns fwait lahf sbb push or adc imulb jo dec mov (bad) fs jmp mov ja call sbb xchg push cmpsb dec sub mov out xchg pop rorl ss and bswap out data16 push or movsb ja push add push out cltd jg ficomp sub cli out push into negb push mov hlt lods mov push call pop xchg inc cld mov mov cli test mov jo or and (bad) pusha fdivrp add jo cli (bad) testl xchg loope sti test xchg add popf mov es pushf push imul sbbb xor pop adc mov rcl push cmp lods mov dec out aaa jge and aas cwtl mov test (bad) sarl faddp cld cmp cmpsb or sub pop adc or addb push mov or jmp sahf fldl test push xchg push and xchg lret addb es adc sbb cmp xor outsb cmp lock pop mov js mov imul mov movsl ret sbb xor inc outsl mov out fs pop or or test adc lret ret add subb mov mov into cmp std mov js xor jno dec lahf fwait mov bnd in mov mov jl xor dec out add lcall arpl jno cmp push jl mov cmp std sbb test add aas mov emms cs cmp adcl and push fmul mov cwtl xchg mov jmp jg cmc adc (bad) ret push repz fsubs pop adc or popf and pusha adc test add mov test pop xchg sarl xor (bad) pop sub add dec dec (bad) movsl ljmp jg js mov sub adc pop imull incb cmp pop loope dec cmp jne xor inc xchg out cmpsb xchg jb lret sbb sahf add ds mov stos dec (bad) or ss out lret dec mov bndstx out xchg hlt (bad) in pop jne pop (bad) mov cmc into push stos xor mov insb add je add loope jbe xor popa aaa out in scas adc lret mov enter dec pop outsb aas icebp ja call sbb pop mov add mov push xchg add lret xor scas out test mov jecxz aad repnz mov or cmp mul adc ja outsb sarl (bad) xchg js icebp cld arpl push ds xor lahf inc sub into cmp out stos mov xor lret clc add jbe daa lcall testl inc rolb (bad) push inc jp dec data16 xchg mov (bad) xchg test cs push jno add nop xchg mov outsl stos iret lahf in (bad) jno test adc sub xchg popa mov aaa cmp sub aad mov jp js xchg push lret push mov fwait push adc stos dec lahf push ss xor dec cmp test cmp jle inc sbb dec scas push fisttpl dec enter pusha jmp push push xor jle fidivr fbld mov out mov lahf push push addr16 mov andl sub cmpsl or pop or sub test sub loopne add das fnop test jno cmc inc adc es inc inc lahf cmpsl dec sbb dec jno inc sbb ja mov inc in (bad) mov mov pop jmp hlt pushf sub dec sub js push imul fs cld mov lret pcmpgtw pop mov mov lods enter aas je incl mov inc xor test dec lock mov xchg movsl dec lds add aaa jmp stos xor lods repnz sub stos repz sbb bound push pop iret cld (bad) shrl insl call xor push pop (bad) or ret testl or (bad) jle pop push mov mov push rcr (bad) (bad) dec pusha add sbb clc and push mov sbb addr16 or aas cmp cmp jbe fbstp notl iret fwait call hlt lods cmp xor clc loopne pop sbb push pop jbe pop jge test pop dec jbe mov adc fmull dec xchg inc mov test and iret adc push xchg dec int3 inc jo ljmp insb mov adc imul (bad) fnstsw mov cmp fcmovne and pop dec loop lds popa lret ljmp jg push dec xchg ja aaa add das mov or cmpsb xor mov sahf cmpsl push push jge or je jecxz mov ss or xor push mov and cmc mov jecxz or adc mov aaa or es mov ja cmp aam cmp mov xor mov stc cmp frstor pop lea out xchg fcmovne ficoml lods jo jle cmc xchg mov shr adc and cmp or push test cmp xchg or rcrl ljmp sbbl ds sub jmp int3 int3 push aas mov mov sahf out leave (bad) push mov add loope hlt fs cmc push out arpl cmp sbb js jo fldenv xor inc sbb lret lcall stos ret adc test xchg mov or push ss cmpsb repz loop sub mov mov cmp leave jns ficom je cld ret pop in out imul arpl cltd ret fwait je push pop scas or jbe pop sub out pop jecxz mov (bad) pop fmull jg add stos cltd movsl lock insb and and mov push sti addr16 mov jge pop in and mov (bad) jecxz sti call push es and adc mov and hlt xchg mov es lea push test and int call mov test out xor pop sbb cmp and ret lods inc pop jg rcll fstpl mov or mov jmpw ret bound cmp stos jns inc adc cmp fadds and mov test fs pop loope outsl shlb xor inc mov mov jbe popa mov pusha lds mov stos push dec dec xor and popa xor xorl in lods xchg mov xchg das pop xor repnz in in fimull stc xchg xor int mov ljmp leave pop aas xchg cmpsb fsub dec add jmp inc aam mov enter pop aam mov xchg cmp ja pop (bad) scas cltd push lea arpl je iret and or stos xchg mov sarl dec sbb bound imul sar fisttpl adc push mov push or fistp fimull out pusha pop aas xchg add inc into aaa fsts or shrl pusha stos and dec mov mov or out pop xor int add inc sti dec add ret scas lods lret xchg fsubrs sbb imul (bad) into cmc test sub iret sbb pop add xlat push mov int out fnstenv clc xor sub bound jmp push jp out std mov mov inc bound or mov inc test cmp xchg lods mov jae test lods mov test inc (bad) xchg inc or xchg ficom movsl (bad) xor push inc fcomps cli lods pop adc lahf loop mov mov mov mov jbe outsl jl leave dec and pop sub pop cs call lahf xchg push jp jmp ljmp shl (bad) ja mov mov cmp test jbe push call pop in movb dec and dec dec mov shrl inc bound pop inc scas sbb mov int lahf enter ret fmul fiaddl daa mov cmpl push and nop jmp sbb data16 cli fsts push imul push jl js sub (bad) xor cltd sub and push arpl loope xchg lret pop cli xor jae pushf pop mov pop aaa inc adc pop pop ja pop xacquire xchg mov cwtl fildl mov popa loopne push jp cmp (bad) push xchg adc (bad) or inc xchg lds frstpm(287 xor mov xor cli jle mov es pushf push ljmp loopne in ljmp add movl leave int popa pop shrb sub cmp leave mov sbb int3 xchg cwtl test push enter dec or lea inc sahf dec (bad) lock jb imul outsb cmp fwait test (bad) jno movsl pop je std adc xchg out sbb xor aad and jb scas adc (bad) mov movsb cmpsb loope lret or rclb fbstp hlt pop sub push adcl mov inc adc sbb jle mov arpl sahf imul je mov xor mov fldl je pop mov in rorl xchg pusha dec jg repnz (bad) push dec pop aaa ret stos aam inc mov test shrl mov inc push ret daa jb bound fmul es cmp clc xchg imul les dec idivl xchg popf mov inc mov (bad) jae sub mov in out mov mov (bad) gs sbb aas mov push inc fwait (bad) and lock xor addr16 inc adc xor mov dec lods ret std inc (bad) (bad) pop push pop xchg imul adc ljmp mov jne movsb into xor xor loopne std jo ffreep jo stos loope int std icebp mov and fwait pop xchg sub or inc and sub sahf adc cmp adc outsl sbb cli icebp not dec mov fdivl popa lret push test mov cld in and pop fs aaa es insl outsb lahf mov out jnp das stos cmp vunpckhpd fmul or jns das lock cltd or loop pusha out inc jnp mov sub add add stc dec mov push add mov push jmp imul jg in push repz sbb outsl jmp jge roll (bad) jnp lods sub xchg aad (bad) jne or lret loopne inc aam xchg mov fsubrs imul pop jae fistpll jns cmp lea cltd push and add lret push repnz mov inc scas cmp and or push repnz lret pop cmp ret into loope outsl fstl sbb jns and dec or adc adc popf pop pop fidiv add dec repnz repnz loop xchg pop idivb cltd or rcrl fwait mul xchg rcr fs mov ret push xchg sbb dec xchg pop ljmp (bad) movsb paddd icebp lods stos pop jb dec ret mov popa inc nop in cmp int3 roll push jnp push (bad) inc leave push fdiv (bad) aad mov adc adc mov mov push outsl xlat inc cmpsb mov adc dec and into adc mov cmp rcrb test daa ljmp outsb jle pop sahf ss sbb adc inc stos xchg xor sub and sbb jno test jle xor loop and stos xchg or test xchg repnz cmpsb shrl ja dec jb out xchg rorl add hlt shrl clc fyl2xp1 jge sbb pop es adc jg iret pushf lret mov test das pop xchg push add (bad) movsl pop sbbl in fnop or xor dec mov mov adc (bad) mov xor fdivs adc aad adcl jno cmp xor xlat adc pop daa out xor (bad) xor ljmp xchg push push stos imul sbb sub mov fcoml popf mov sub jae sub (bad) pop ret das dec (bad) daa inc inc push inc insl adc icebp in in sub hlt iret add (bad) addl push mov (bad) jo mov mov insl mov mov aad jle (bad) cmp mov sbb jne cmc push or mov mov xchg push daa bound jns cmp lods xor xchg lcall jecxz xchg aad rorb adc pushf jns add add jge or cmpsl sub jnp inc lsl into sub add aad mov sbb inc insb enter sbb stos push mov lcall (bad) jns sub pop sti cld sti rcrl icebp inc mov lds fbstp clc mov push inc (bad) adc lret faddp xor stc aas sbb sub test push lret pop inc jns ljmp adc or lret jae xchg (bad) mov aaa xor jns dec roll popf mov cmpsb ljmp pop sub or and sbb ret xchg push and call mov dec lret and dec dec mov push add loopne insb and (bad) jae fsubr in ret pop popa (bad) xor dec and jmp orb and push push xlat test mov repnz mov (bad) lea dec jge notb fs pop shufps outsb out fidivl insb jle fdiv mov (bad) pushf jne mov lock or or fs xchg add cmp jl stos xlat and sbb jae cmp imul add xor adc or xchg int into in les iret push test push leave mov sbb xlat repz mov (bad) mov ret sub test gs mov fdivrs movsb (bad) push test or cli lds sbb sahf pop int3 cmpsb xchg mov dec or mov push sbb lea mov mov push cmp repz xor je outsl xchg inc repnz cmp in adc into add out sub inc cmpl sub sbb mov xor mov jae xchg lahf jle mov mov icebp push add dec mov lds mov clc adc fild test cmp (bad) (bad) jmp mov pop fisttpl fldenv dec mov mov sti add mov data16 push and fs icebp mov stc pop and jp or outsb dec fs repnz cld js cmp aam rclb jbe mov jns and sbb add enter in xchg xor lods loopne int jg add ror cmc (bad) rcll out jae mov leave xchg arpl push push mov dec dec sub jge cli dec adc popa mov jbe (bad) ljmp shrb mov out test sahf repnz pop ret test imul pop push inc mov fisttpll or adc pop add sub rcrl pop dec outsb xlat sbb xor push and (bad) lahf mov jl jcxz rcrb inc mov xchg ret lea inc push xor fs jmp cs pushf popa cmp or popa jecxz inc pop push add aad jg cli jg sub out test or xlat jl in and push sti mov add ret jno cmp inc and (bad) and mov xchg and cmp add xchg push ljmp fnstcw jl scas sti add jl add das push mov loop (bad) add adc mov push nop mov sub pop bnd mull xor ja fisttp aam test adc fwait adc fsubl loopne or and lds in int adc sarl pop inc jno pop in pop (bad) add mov push (bad) cwtl dec daa stos ss testb sub fmull (bad) lock cmp movl (bad) std or (bad) rcrl pop add ljmp xchg fwait sub cmp clc aam lcall sbb leave test pop add inc jmp je insb mov adc adc mov (bad) fs lds in dec dec xchg int jns loopne pop fildl loop pop lea cmp jecxz rorl movsl rcrl enter lret ficomp and insl idiv xor push adc ret ja add lds sbb mov add sbb mov pushl gs div cmp pop fisttp dec lds push lret addr16 sbb mov cs xchg jno mov icebp inc shrl notb lods cmp adc and cmpl dec push insb in out stos xchg cmp xor mov mov push sub pop call es dec ds aaa push mov mov jo or out inc insb shr pushf das jecxz call push cmp and mov inc (bad) cmc cmp mov dec xor adc mov or jne mov rorl aad loope,pn xor repz push pop test or push loope inc roll sub cmc inc ja (bad) sti das sbb arpl scas cmpsb mov lahf jo xor cmp pop fisub repz repnz xor and cltd jmp mov cmpl mov sub jl in mov jg cmpsl loop mov jne push in sub add sub lods lea fxch mov xor cs cs mov aam pop mov dec mov push push push out std pop sub rcll cli mov fdivs in ror es lret cli xor sub loopne nop imul xor in inc or dec rcl ja jbe in cmp insb jg mov push mov and inc stos pop popa mov stos (bad) fadd or ret in xchg test in or cld jo adc inc scas inc scas (bad) rcrb cli jp (bad) daa push nop lods and or mov push dec pop std in xchg mov ja mov push ja push lods icebp popf or call negb pushf lock mov cmpl rcr setle lods inc popa dec lods jns xor push out xchg dec jnp mov daa in dec jno push jp out jecxz pop in fnsave cmc lret stos jnp sub into scas cwtl ficom ds mov movsb push xchg mov stc btc scas and sbb mov jne aas adc jo adc mov dec dec sahf insl iret (bad) sbb repz aas cli lds inc je pushf shlb movsb sub inc cld out mov mov stc cld pushf dec fwait sarb fdivl add inc sbb aam lods mov fdiv dec clc xor ja push clc repz aad push and sub sub les int3 xor add test mov mov mov mov mov lahf inc dec popf ss pop data16 inc sbbl jge fsubl insb inc (bad) cli inc in data16 data16 dec xor mov xor lods in mov lcall xchg lahf out int mov inc int insl ret cs dec loopne dec xchg jg (bad) or adc mov inc out ljmp xor rcrb lcall das xor aam mov dec xor cmpsb mov ficomp add in push cmp insb pop cmp lods and (bad) mov daa xchg mov jae test call hlt divl pop xor cmpsb fmuls inc pop cmc fs jne cmp jle push and adc xor (bad) (bad) fisttp mov (bad) imul mov mov or lret xchg jmp faddl gs out (bad) lahf into pop mov mov inc mov adc inc and mov xrelease lahf push jno lods and lret sbb xor inc inc testl cmpsl inc call arpl fist or daa cmpsb lods xchg ss mov adc mov mov mov sub xchg inc leave out and fcoml xor (bad) sub or (bad) int push and loop push cwtl and out scas mov xchg rclb sbb pop (bad) lcall dec lahf fcomps pop dec sub aas cltd pop and enter in lcall xor adc cmpsb test jp inc inc sub pusha inc mov jg cwtl mov sahf (bad) jecxz xchg aam pusha jnp fs fst pop inc xchg int3 add cli fsubl addr16 shr mov mov dec or xlat inc xor sub pop mov jne jb or (bad) cmp cltd out ret mov push dec std or movsb inc xchg push adc cmp lds cltd lods cltd les xor lea mov std repnz pop pop adc mov fwait mov lret das out sbb adc jecxz mov mov push lods fildll das (bad) mov repnz and shll gs (bad) shl stos decb popf daa cmp xlat stc mov fimull lods add aas cmp lcall sti imul jle mov dec mov stos out mov xchg or push (bad) fdiv leave lret aas (bad) insl push push push jecxz scas sbb lds sti sub enter lret add fisubl das pushf mov xor (bad) xchg push adc les jmp sbb cmpsb and adc inc jb in arpl ret sub jb add scas cmpsb lret fildl lods popa pop pop jle js mov stc mov in mov push negb test and cmp je pop push sar or mov cmp xor iret cmpsb inc fisubrl stos inc jno cwtl jo mov pop mov dec out movsl xchg mov (bad) sub cmp pusha cwtl or push in out sub cmp pushf pop cmpsb ja fildl stc rcl mov jnp (bad) sub sbb xor lods loopne dec and lcall sahf mov loop lret repnz push push mov pop ss cmp outsb jae das ja jns les mov sahf mov adc mov iret mov shrl cmc fsubl or shrl push or cmp mov jnp (bad) jo push mov ja pop stc pop inc scas mov cmp stc mov std jle les lea inc xor or add or jl pop imul cmpsl inc jno sub lahf ja es mov pop cmc int out cwtl xor adc fildll or cltd sarb aaa sub xchg jmp mov and mov push insb mov adc mov inc pop pop jmp push test lcall push insb out xor push xchg ret pop push mov mov xor scas jecxz pusha nop cmp test or repz inc push movsb int3 jnp sbb inc jmp imul mov bound les (bad) hlt cmp lds adc mov pop scas cld test shrb cmc hlt push movsb aam mov cmp mov in cltd xor test jecxz stos ja scas sbb push cmpsb jbe clc sarl mov xchg in inc lock jle dec (bad) xor faddl xchg cmp sub sbb scas add fistp popa fsts into or movsl xchg push inc push dec sbb and mov ret aas mov mov cmp adc push jge and leave mov mov insb mov push shll or popl out int3 pop les mov push lret imul or fild dec sub lcall and jns addr16 movsb imul mov imul mov mov emms push sbb inc fldenv lods adc je gs in clc mov inc iret jb aad shl inc outsb (bad) rolb add (bad) lcall sub loope daa jbe pop es repnz movsl ja popa push aam dec cmp cmp je xor roll jge adc in push sub mov nop add sub popf ljmp mov adc stos fnstsw ret fisub ljmp (bad) dec add mov sub push or xchg in jp aad fdivrs call call shll pop insl mov jae push enter push jnp mov out push dec jle xlat orl dec jnp int3 into lods mov cmp jp ret add dec idiv bswap mov sub dec test and test xchg cmp jmp dec cmp (bad) andb lahf pop out inc jge xchg cmp ljmp inc pop and or iret ljmp lcall mov cmp lahf fsts push lret add adc and cmpsb push xlat lret movsb fstpl icebp xchg sbbl inc push aad adc rorl lods inc jo mov xor sarb fimul push adc imul mov (bad) mov push inc push xor mov xlat jns mov mov sub dec test pop lock mov mov leave call (bad) leave mov cmpsl aam hlt pushf xchg scas push jo push cwtl inc rolb cwtl outsb insb push (bad) sahf mov sub dec in ja popa sub in push (bad) jns mov and add mov xchg sub int3 in dec and mov add (bad) mov push (bad) fsubrs ja gs bound icebp mov scas movsl xor jp mov fimul test adc cmp cmpsl call xor mov bound inc push inc or bswap hlt mov lods adc std ds aad jmp and xchg push mov (bad) xor adc in popa mov mov mov cmp insl and dec pop sbb lahf out fcmove (bad) popa or xor in les sarl out mov mov mov cwtl sub inc xor pop and xchg and bound imul hlt out in jge imul push push in sbb (bad) mov fistp in pop or xchg pop clc push xor push (bad) jae and xor lea stos mov inc fsubs out jbe sub imul icebp jnp dec pop lcall jae into push fistp push loope inc mov test dec ret mov repnz jge mov or push fildl mov adc scas jl dec imul xor movsl fwait and fsubs sub outsb insl fsubrp mov push sbbl sub dec gs (bad) cli fstps xor xor mov scas loopne ds inc mov mov je test push iret sarl adc push jno lret lods jae cmp out push pop dec mov insb (bad) scas push xor dec jne test adc xchg xchg fnop sbb jle inc jno jge cmp jns jo jle int3 test stc gs xor int3 and inc mov adc int3 gs push (bad) (bad) mov jae xchg in cmp cmp and stos mov repnz sub xor test push inc scas bound lods repnz mov xchg xlat pusha pop pop data16 mov cli fiaddl or push sub outsb rcrl aam loope lret lds pop dec stc jae fbld sub js insb mov push cli movsb out fnstcw push nop int3 or and sbbl pop ficompl repz push sub push mov insl repz push pop push fistpl mov push cmp cmp fldt xchg lods pop inc sub aam mov popl iret jle or inc mov (bad) or cmp xchg xlat mov jb pop mov adc mov les adc outsl test xorl or mov rcl jns daa add jne pop fcmove insl repz movsb (bad) dec xchg push sbb xchg cld loopne clc sbb popl (bad) out inc or cmovg das and (bad) hlt stos js loop pop pop loop push xchg pop cltd mov jecxz (bad) arpl movsb xchg sbbl jae xchg subl inc lods gs sbb jae cld push adc aad jae sub mov mov xchg out mov xchg mov add and inc (bad) les and mov leave nop cmpsb dec loope jnp loopne sbb mov (bad) ljmp loopne xchg xchg pop shr inc loopne xor test out out mov out add dec clc add sbb hlt lods ret jb adc mov ss in mov aad test adc ffree int3 mov dec push (bad) push inc mov imul (bad) sti addr16 mov test pushf repz inc xchg cs dec rcrl subl lea fadd push mov iret xor fcomps sbb sub sti and sahf stc sti pop fistl xchg (bad) daa ret inc in and aam sub adc cs mov mov pop and adc mov and add mov repz sub sysret pushf jecxz js fildl sbb lds inc (bad) repnz and mov pusha xchg lods push ret mov or repz mov loop push or outsb sahf jg sbb cmp arpl dec cli addr16 jp (bad) ja jae sbb fstl test mov cmpsl movsb mov jae pushf ja or fucomip mov dec lcall cli push std cmpsb ds pop (bad) dec (bad) (bad) out xchg fistl pushf cmpsl aam nop sub fwait and sbb (bad) repnz sahf mov pop bound psrlq aaa inc sbbl pop push icebp adc movsl inc push and sub push testb clc fidivr push call int3 es mov or jp push mov test xchg loope les add pop or fdivrl arpl jno rcrl lcall mov adc cmp sub stc outsb inc mov push movsl iret mov (bad) out mov adc or xchg mov jb enter (bad) and mov dec adc out mov push ja dec lret xor cmp out mov outsl incl push jnp jae popa add pop mov cmc adc fwait sti outsb out mov add cmpsb (bad) xchg jge inc fimul mov push repz stc jns test adc or repz push cli adc cmpsl loop lcall and scas movsb xchg push add lret mov sbb aaa mov mov push cmpsl add sbb cmp mov arpl push or xor fcomi testl or fisttpl push mov jmp (bad) js add outsl push sub push jno mov das add clc sub push aaa mov inc pop cmpb (bad) in loope dec inc dec int test mov push scas repnz mov lcall jb stos fldt sar sub push xor mov popa sub addb addr16 pop push pop dec push xor (bad) cli jle adc mov movsl cmp mov mov sub mov pushf popa mov jnp enter popa outsb popl neg fwait sbb in sahf aam jo and insb xchg xor xchg fstl (bad) sti xchg mov mov aam ja (bad) pop mov sahf lock addr16 rcll stos xor aam add and in pop pop mov gs rcrl sbb xchg inc gs fsubr movsb sub test scas (bad) xor adc pop and stos add lret add imul fnstenv subl push inc mov insl sbb inc fidivr ds (bad) in jle mov bound mov jne outsl clc leave dec jbe pop test push mov add (bad) cli add cmpb inc lods popa stos pusha add pushl jecxz movsl (bad) and xchg call (bad) aad jb pop push sbb outsb fwait scas inc cli pop adc cltd outsl icebp dec push scas mov aaa scas scas inc pop pushf and hlt cmp xor and add jne push ficompl jbe xor repnz dec push push adc inc in xor in pop xchg ljmp pushf mov stos (bad) imul movl add dec (bad) add pop dec incl hlt cwtl lods es negl mov mov dec jle repnz or loope and stc add (bad) xor xchg add jne std and adc pop dec pop push pushf pop rcr adc fcoms mov pop lods pop and scas mov mov cwtl nop push and push mov and gs daa mov sti or cld xchg clc xor add (bad) push sbb repz inc sbb rclb cmpsl shl mov idivl in psrlw dec sbb pop or push mov xchg cmpsb mov pushw popa rclb or mov test cmpsb imul mov cmp insl jg rcrl sarb push xlat fstps les and test cld adc rorl inc push pusha mov repz mov or stos jecxz lock jle sub gs lcall nop sbb arpl add add mov add sar imulb repnz test popa mov ljmp insb hlt in orl div pop je cmp rolb pop repnz aam out dec movsb rorl popa in xchg cmp lock xchg mov mov lds mov in sub movsl aas sbb mov lret fsts in call js jecxz push into lods add pop repnz sahf pop test sub xchg in pop inc iret or adc sub adc out dec jle sahf pop fwait adc daa mov push cwtl cmp stos mov jmp mov loope je mov cmpsb jno outsb xchg mov flds and and xchg mov add inc icebp nop pushf adcb test sub xlat cmp mov rcl test mov test clc mov mov daa mov xchg mulb lcall movsb pusha mov test lahf push jae outsb fwait neg pusha xchg push cmc daa adc mov push loope cs cmp sub dec cmp add and into sub sbb or out adc fwait cs lock xchg and push out xchg gs test jno mov rorl sub add xchg lea lcall add dec divl loopne jnp dec xlat cs jmp leave xlat test xchg popf and movsb dec sub and pop xchg add fsubrs cmp jo adc lret frndint xchg cmpsl pop jg sbb mov fidivrl (bad) jle outsl pusha cld jns int adc les adc fisubr sti dec jg xor mov jmp xor add clc aam in mov scas fdivl sub hlt cmp xchg lods xchg mov xchg mov jmp test lods movsb rcrl adc shr lcall mov mov xor cmp push rcll xor jge jecxz mov stc xchg mov add cld and mov daa fmull fsubrl or scas aaa or outsl xor mov pushf cmp mov and popl xchg in (bad) repnz push jo jmp out jp je js sub mov xchg mov out nop cld (bad) xor jno add sub outsl xchg imul pop fsub pop fcmovbe pushf loopne js cmp aad jbe out mov xchg sub lahf sub xor int push mov pop inc idivb adc inc ror rorl sub cwtl inc jbe adc mov xlat and sbb ljmp or jno shrb pop push add bound or xchg adc lea js lahf mov or jge inc ds mov cmovae xchg mov add out daa mov lods adc sub fucomip jb in js divb cmp sbb dec xor out sbb pop shlb fisttpl rol mov jp in jae aad add ret and adc jo in pushf in test cmp popf imul xchg sahf pushf cmp das das fistpl add psubsb xor mov test mov inc ret dec mov lods push and imul roll sbb adc mov mov jno mov jle push mov and sti push in shlb imul icebp xchg pop sbb decb inc cmp arpl out in loope and xchg addr16 and jg rolb mov adc nop daa pop pop int3 lods inc mov pop mov orb inc push jo,pn cmp pop cmp cs mov stc lods push mov enter xor or shl sti lahf push push ja push lods mov jmp dec lock lret dec xchg cmpsl adc in fistp and jp mov hlt adc add mov sbb dec push (bad) hlt int3 xchg repz jbe dec and leave adc into inc lods pop mov pop and xor fildll aaa int3 pushl in xchg rolb add shrb adc bnd cmpsb stos scas f2xm1 mov sarl jno jl and and in adc add loopne sub popa add inc pop jbe fdivrl xchg cltd xchg cmp inc scas dec jne mov sahf cwtl sub xor lahf push add jge sub sub es loop gs sub aaa add clc add jnp or popf mov adc lods sbb dec mov and or and ret imul lea and cmpl dec arpl into pusha ss hlt push jo pop movsl mov outsb push lds ret stos fdivrl int3 mov mov push mov fdivrl ret js out adc or adc inc mov push imulb xor es ret or loopne rcrl pushf sub out add sub jp add (bad) sbb stos add or jecxz push out sarl sbb mov inc jp sbb jge dec jne (bad) jnp fwait lcall inc pushaw mov repnz sahf add mov lcall test out and shll xor std xorl movb and push xor pop out pop mov mov lret and movsl sbb and cmp add cmpsb jno sbbb mov cmpsb les or push in repnz xor mov cmp in xchg or in mov stc std aas mov (bad) pop mov inc ljmp lret and push push sbb mov and mov mov popa xor jb pop pop loopne movsl ss pop pop adc aas or ss or jnp mov sub cli jne call and mov imul out adc adc mov lahf jo inc test fdivrl nop sbb mov mov enter and add in sbb pop sub daa fiadd mov sbb push sti and sbbl ror pop enter movups jmp not lcall push inc gs cmpsb stc lret jne add xchg aam (bad) dec cwtl divl sub push xchg sbb dec push ret mov sti sbb loopne mov movsl sbb jg movsb int movsl pop add pop pushf push pusha fsubl ss popa ss cmpsl pop mov xchg setle lea jge int es mov popa cmp dec loopne je icebp jecxz idiv xor repnz out imul ret in adc lock mov ja inc das dec lds jmp test gs fmuls movsl rcll sbbb mov lret cltd jecxz mov dec jae inc jnp shrl jg sbb imul push pop xchg push int3 mov ljmp xchg adc jnp sbb xchg cmp jmp mov loop push pop fwait cmp ljmp xor shlb aad loop dec push jbe jecxz rcrb scas xorl dec adc fdivrs mov cwtl (bad) or mov sar std cmp and add ret jle sub jbe mov mov mov or or cs pop cmpsl pop or popw test and xchg mov mov pop icebp dec aas inc cmpsb dec mov and mov out adc add lret sbb mov push xchg test fs test in lods out add call jge or fnsave or outsl fs dec xchg xor sub cmpl jg in mov andl mov les (bad) xorb mov stos fldt scas andl imul (bad) or xor and mov sbb cld add sub mov mov adc jg cmpsb and push dec add movsb xor aas inc push cld adc pop mov cmc sahf pop ret add or and idivb sub fstl inc adc insb popf sub stos sub dec pop (bad) insl mulb lds aad add jne mov mov int ss stos xor sahf scas inc ret arpl mov inc cmp mov leave mov mov add jmp mov xchg loope pop sub or jle jno push daa fisubl and dec jp dec clc xchg mull lods sbb (bad) push clc cli mov iret orb sbb sub scas pop sarb or push jle xorl (bad) push (bad) xor outsb add aad outsl imul pop sti int3 or dec push and pop jne mov imul lods dec mov cmp mov clc add fisttp scas roll inc loopne aad in test mov lret fistp fisubrl push inc daa adc mov out cmp mov sub fisubl sbb gs sarb mov jae cld dec loopne (bad) and adc jnp out pop fild or cmp idiv cmp sub int pop ret mov clc jns imul xchg addr16 outsl clc cmpsb out fstl dec std xchg (bad) (bad) test inc inc sub pop ret sahf mov rol fcomps in sbb mov scas cmp dec adc out push jns mov inc daa out out shrb mov enter mov inc test push mov leave sub in icebp lock sub xchg es mov lahf movsl daa sub cld loopne in pop or std dec cmp jno add push mov dec dec fcoms mov test jae scas pop out and jae jno jns arpl stos dec in lock shlb push fs or cmp mov imul push stc cmp lods mov xchg (bad) dec loopw (bad) sbb dec nop test push lret orl mov xor mov decl sarl inc mov xchg aam xchg aaa shrb adc dec lock ret out je ss fidivr or and (bad) mov mov out xchg aam adc stc popa push xchg in iret lcall nop pushl lret scas mull int3 js gs mov mov mov xchg in pop adc cmp fcom jno fdivl je sub mov fnstenv dec mov sub ja movsb sbb test dec js xor sahf lods (bad) jb push (bad) mov xor jg mov or mov pop fimull es (bad) bnd aaa aaa out inc in fsubs mov cmpsb inc js xchg movsl and xor sti add jnp pop pushf nop push pop add mov mov sahf pop sub mov push mov mov xor sbb mov mov mov cmp (bad) les cmc jg loopne insl and lods pop add pop cmp lods sub and sahf stos sbb outsl mul xor loope jns cmp lds jb mov pop lahf je mov inc cmpsb push ds out sub addr16 movsl push pop outsl repnz ret mov pop out sbb loope or pop add rcrl cmc std lret xchg jge testb into inc stos in dec mov cmpsb outsb hlt mov and pop jnp clc cmp (bad) ret es push fnstenv adc inc pusha lods in test std xor cmp cmp loop push aaa jp js popa loope push (bad) cli shr add fwait push mov mov mov mov (bad) fwait jns push or cmp inc out (bad) out repz outsl cmpsb jo,pn cld mov dec out sub xchg push addr16 outsl jp out xor pushf mov bt int orl xlat (bad) aaa adc call push mov inc stos scas popf fstps (bad) mov jge out outsl xchg inc arpl stc insb mov (bad) ror lret cmpsl inc mov and outsb fs add adc test out aad gs fs add jns cmp aas (bad) ds cmp add xorb push pop loopne pushf hlt fxtract enter out cmpl jb sti (bad) jb pop inc rcrl lock mov add fsubs leave data16 xchg stos add in insb cmc dec mov outsl fstpl xor push jecxz fcmove cmp sub and (bad) nop dec jp stos sub iret inc and cmpsb cli push fwait (bad) outsl mov enter enter imul inc pop jecxz out mov xchg mov out jp or pop nop add test or pop call adc out and enter imul jp int jae cmpsl test or or mov pop sub cmp (bad) cmp dec stos and jmp add test fptan xchg cmp xor inc inc mov outsb outsb jp pushf xchg les and cmc mov (bad) pause clc fmull in loop cmp xchg mov test in test cs loope lea xor cs ja adc jmp lds popl in xchg (bad) aam stos sbb aad addl push adc jl adc pop cmp pop dec idiv xchg cmp sub sub nop cmp push (bad) mov jg jmp sbb fildl sbb ret xorl sbb push int pushf jp or lahf cmp stos je pop cmp idivb js cld sbb orl (bad) ds ljmp add leave adcl push xor aaa in add jae cli popa daa movsb mov outsb addr16 nop leave and xchg lods (bad) in xlat sbb xor pop or divl lods (bad) out mov fstps scas dec outsl insb adc inc jl mov shll xor cmp sti adc inc push sahf adc imulb test cltd cli rorl outsl aad xchg cmp sub push jne pushf adc lock pop dec sub (bad) (bad) fnstsw cmc stos inc or lahf pop xchg push in stos addr16 test les popf xor insl and lcall jge xchg mov push jbe (bad) mov or mov sub add adc orb push push and in loop sbb push dec add or in pop jle rcrb ljmp add loopne stc repnz xor mov jbe push aad push frstor data16 test push mov sbb jae ljmp fsubl push (bad) mov (bad) jmp or adc je sarb and lock leave stos xchg xor fisttpl loop pop in push cmpl incb cmp mov mov xor xchg sub (bad) rorb mov mov mov fnsave cmp (bad) jo sbb mov orl subb mov mov adc or aaa icebp jns cmpsb sub out cmp test cmovg cmp decb jg inc push test fidivrl cmp pop push fscale sti lods nop aad movsb xor scas push icebp mov xchg mov add push sbb icebp in test mov inc push mov dec ret sub das loop fcmove xadd sub pop fwait jb cli insb into in jnp sahf add adc fldcw outsl xchg or mov stos mov std scas jae shrl (bad) xchg pop mov xor mov es xchg sub lods sbb dec movsl mov das cmp mov pop cmc xor dec es mov rcll and test push push (bad) fwait popa loope xchg add movsb or ds or lods in xchg test push (bad) std aam dec dec outsl push idivl (bad) (bad) fwait enter inc data16 cmp adc and jmp outsb leave cmpsl outsl gs shrb imul imul js sti movsb flds arpl push mov sbb (bad) insl in ret ljmp in cmp xchg push (bad) das adc sbb xchg mov dec jno cltd sub inc cli mov push lock add adc dec inc lds jmp add lret xchg sbb xor gs and fs aaa add negl pop lea or add cmpsl push xor lock movsl dec int xchg ljmp int3 movlps pop mov (bad) and xchg add add int3 or ljmp jno repz movsb lds ret out adc dec sbb loopne movsl push in xor xor push add cmp and jae jge cmp cmpsb in scas repz std arpl push add or inc and pop xor insb add mov lret jae push mov push test stos leave jle pop movsl xor inc lods or sbb dec mov repnz mov ret mov fcoml dec sbbb mov mov dec push cmp or mov xor arpl cwtl adc push cmp out xchg jnp adc in push clc (bad) out push xor fsubp mov (bad) xor dec call jae sbb sar loopne sbb pop or inc mov repnz test jbe pop xor out popa pop fadds aas mov mov lods les aaa xchg shlb pushf (bad) cmpsb aas push fstpt lret out adc mov daa fcomps mov lahf add aad js insb pop aaa scas mov adc lret add or lds js icebp int3 push and fprem1 pop push dec mov pop xor jmp rolb je mov pop cld ja movsb sti (bad) (bad) imul mov icebp out inc outsl mov xor mov gs movsl xor stos sub mov push insb push test and (bad) jbe push push ficompl mov pushf mov imul push mov push mov push adc call jae addl lahf fadds jb xchg popf lds into shr sub xor xchg push inc and mov jmp hlt sahf cmc incb jne add cld sub (bad) stc ret xchg aaa jns mov pusha mov jne inc cs popf mov dec pop pop inc out mov mov fidiv dec addl out bound loope add fmul les or test iret (bad) dec sub push mov enter jge dec les sub scas cli or in sbb mov stc mov sbb fdivrl loope mov sub jle cmp fwait std aad mov push hlt cmp rolb mov xchg and pop shlb sbb fs pop lods rolb (bad) notl sub shlb or loop test xor mov ss pop dec mov lods xchg and sub lods mov aaa pop push scas outsl xchg aad iret movsl mov pop hlt loopne xchg mov jp sahf dec jge call stc fstps cmp pop sar push pop mov mov cltd cwtl in or sub mov int xor test (bad) sahf repz clc inc (bad) pop out aad aas or outsb mov popa mov mov jns scas cmp add pop in (bad) adc rorl (bad) repnz (bad) cmp (bad) aad and add cld out add push xorl out iret xchg mov adc pusha test xchg imul daa push mov pop jnp adc popl mov or sub test je pop sbb mov jae cltd ret add xor push stc or push imul or mov add inc xchg pop jle pop jns add cmp (bad) fs cmp sarl adc mov in ja scas movsl xchg test ffree movsl (bad) jmp or mov sbb repnz cs cltd jg cs fimul xor lahf movsl sbb daa xchg hlt lods fistl push pop arpl sub shrl fistl pop jae (bad) fstpl cmpsl sub mov sub xor aad fdivrp mov insl repz dec pop sbb jle stc and sar mov lods int xchg cwtl jp in fnstcw in js jmp scas inc fsubs fisubrl imul ret pop stc test stc hlt and nop pop ljmp outsb or add dec xlat push rclb gs cmp push enter sbb clc test das std cld popf movsb push or jmp jb popf and aas aaa lods jns inc pushf xor shlb push ret in adc pop xor and rorb push cmc push jne push sar sbb insb pop movsl push add mov dec aad push mov adc jl mov cmp or sbb dec sub shll hlt fistp sub das in dec pop shrb cmpsb loopne addr16 into (bad) bound sbb and push dec cmp pop cmp sub aam add push pop stos call inc xchg adc ficoml (bad) pop imul sub in mov ss jns sub loopne xchg inc push cli pop imul (bad) xor and mov xacquire scas push std int3 stos pop inc psubq mov mov cld sarb scas fwait jbe (bad) sub movsl bound jg mov mov cmc sarl sarb dec sub or pop push rolb imul mov pop cmp xorl add stos cmp outsl clc push pop dec mov adc aad icebp mov mov in cmp dec lahf (bad) in pop gs sbb ret inc insb out push cs sbb cli mov push push push push mov cmp mov repnz add jmp aam in in mov adc fcompl or lock xchg adc scas inc push das mov xor leave jns jge insb (bad) incb dec (bad) les fwait roll popf mov xor js mov (bad) pusha addl es incb cmp js dec and outsl lock std adc iret enter fistpl fildl and mov adc rcrb xor cld dec int3 imul pop (bad) test jno push add dec mov mov mov gs int fstpl ljmp and xchg aas jne pop jns adc dec adc push pop movl xchg mov dec xchg mov push push dec fmull aas dec add lds cmp int lods cmpsb rolb push add clc pop xlat rolb fidivr fildll into loopne out dec adc fwait fwait insb lcall dec xchg idivb loop inc hlt mov jg idiv cmp cwtl (bad) mov or inc mov lcall cli push pop sub push mov adc sbb ja xchg pop outsl lcall into out inc in repz divl jns out jmp jo insl repz insl cmp icebp xor jecxz fnstsw nop xor cmpsl push sub (bad) (bad) push lea fnstenv rcll or dec add cwtl nop cmp mov rcr inc loop or mov test mov stc dec and dec fnop sub add bound cmpsb out or movsb addr16 xor fwait xchg aaa cmp jl clc hlt xor mov iret into mov lods fldt jecxz in mov jno repnz fwait adc mov push ret or inc sub fxtract cmpl loopne xchg jp push int3 pop movsb mov or jmp dec ficom mov pop jne push cld pop addl pop rcl fsubs shr movsl jl pop data16 push fldt mov inc pop aaa or rolb sarl push aad pop imul in js lahf cli and jecxz (bad) lcall pop jae dec inc jae test dec dec push lcall sub sti (bad) mov cwtl jl inc adc inc inc fwait adc aam mov fmuls xor sub inc lea cmpsl in sub jmpw mov xchg (bad) sub cmpsl scas dec out xlat xchg popf jge test into push add aam aas mov cltd in movsb adc mov or minps repnz lcall sti and cmp push push fisub pop or mov shl push pop push fmuls rol mov cmp int ret lods negl fnstsw mov adc aas test mov jno xor mov dec mov sub cmpsb mov es repnz mov outsl fcom jl insb stc inc pop jmp or loopne ret cwtl js fist inc sbb cmp or in xor cmp mov mov adc sub push add cltd push dec or xchg frstor mov adc mov sub xchg sub pushf out and jns mov cwtl cmp dec and jmp les xor sub pop (bad) shlb mov mov fnop dec xor dec (bad) shll push mov xchg outsl popa stc clc cmp fistpll add sahf fldenv in push and mov mov std xchg push (bad) xor rclb ja (bad) cmp jo cltd adc push sbb pop aaa movsl adc clc jb sbb sbb lahf movsl out les or enter shlb push add dec addr16 mov mov mov and mov mov sbb aam adc and push or push loope mov lcall inc iret rcrl cwtl xor sbb aam outsl jp mov push rcrl cmp lret cltd jge clc jne xlat mull inc fwait xchg test ret sbb xchg mov sahf mov add xchg lahf (bad) push iret xchg adc mov mov fiaddl cmp cmp adc scas loopne (bad) mov sub mov and adc dec or xor shrb ds sub cmp enter test add ret jnp mov imul cmpsl or hlt pop shl popf and inc inc rolb mov lret in les movsb and pop scas xchg (bad) push loope xor movsb sub scas or sub jae pop or pop sub (bad) or mov cmp movl xchg (bad) cli sahf push arpl push in and sub fwait sti or (bad) imull push mov arpl mov mov lcall jmp mov jns pop (bad) stc push lcall icebp cmc ja ficompl pushf sub imul jae mov ret loopne mov sbb jne cmp sub or xor xchg jmp adc and gs (bad) loope in inc xor cmp or js rorb sbb xor aaa (bad) jbe loopne xor add in aad fwait sub call (bad) jmp dec jecxz sbb cld cmp outsl fist enter dec stc mov cmpsb and movsl pop inc sbb data16 (bad) (bad) jno addl add sub push push sbb movsb sub push lea loop push js aaa fldl sbb pop jnp pop lods repnz and add insb rolb mov dec repz and outsb daa int3 (bad) xor push dec fcomps rcrb add jae adc sbb in xor inc pop sub or in (bad) cmc push jmp inc push xor div fmulp ret mov call aas fdivrp shrl popa int3 arpl fisttp int3 xor sti add xchg enter fdivs jmp fdivrl cmp shlb std test dec sti out cmpsb lods jno inc sub pop dec cmp mov cmc inc std daa aam cmc enter cmp dec mov mov mov jno sbb dec mov lcall sbb xor in fistp pushf and rcrl dec xchg nop ret ret adc sub mov ljmp out faddl test sbb ret dec data16 push out iret pop addr16 dec mov mov mov fstps and inc push xorl repnz xchg loop xor imulb xor ja ljmp pop fwait xor push int3 jmp mov imull adc sbb gs cmp or jmp xchg mov outsb je pushf cmp imull sub call lcall add fidivl pop into xor add inc and icebp xchg xchg mov sbb loope mov std mov icebp sub repnz sub mov fisttpll add cli fdiv xor jb fwait sub (bad) mov sub or cltd jne aam push push lcall orps or adc inc mov and cmp fidivl test xlat lret sub add movsl icebp mov test lret cmp push mov cld in (bad) push and dec push jg out pop mov push pop jnp or push cmp push sahf rorb push pop hlt popa es cmpsb dec pop mov movsl sub andb je jae mov and mov jno xchg aas cmp xchg xchg pop adc jle fadds mov loop sti std iret imul and sbb fsts inc cwtl sbb mov and fwait xchg xchg test sbb leave jo arpl lock ja adc pop sbb ffreep mov or andl cmp sub jle cmp xor sbb test xlat (bad) mov xchg lret stos pop in fiadd lea loop inc cwtl push sbb ds sub fst sbb jns and sbb mov pop xor pop mov jnp aad pushf decb adc inc xchg inc roll jns jl jb xchg push imul jg imul mov xchg sbb idivl leave jp fnstsw int push xor out jbe stc test xor and out add sub push lods pop test xchg mov out inc push adc daa jno stos roll fdivrp aad test add jo stos mov sbb xlat push outsb popa dec ret inc pop std insl int3 xchg cmp (bad) les sub popf and call push movd bound cmp dec std je mov adc push rclb sub cmp pop sbb push add dec sub cmp xchg push icebp ljmp jle xor xchg imul movsb and mov scas roll push push mov adc dec push push and rolb sbb pop and ss xor mov adc xchg add xchg and addr16 mov adc loop pop popf or mov pop jne ljmp in mov jno mov mov xchg test xchg ss xchg xchg ss push movntq mov jmp daa fist pushf jl sbb out int3 leave mov push dec jns mov mov in imul lock (bad) or xor or dec mov add ss sub inc test jo loope lea mov fdivs mov ja push mov xchg lock add add test cltd shrb pop cmp adc ss call out fimul sarl xchg pop or (bad) idivb dec imul mov ja xchg lock push dec sti inc add jl inc cmc push ja insb (bad) or xlat mov fist fsubr aas mov add insb mov cmp or orl sub ljmp cmp orl push rclb lahf addr16 jo (bad) notb push xchg sub pop mov pop inc adc xchg inc adc hlt cmpsl enter mov loopne in xor ret adc mov cwtl xchg cmpsl dec mov sti data16 inc xchg scas dec div mov popf sub (bad) ficom (bad) pop sbb mov mov inc cld (bad) outsb fdivrl mov xor add lret jmp js cmp aad adc sbb fdivp lods hlt popa jp les aad mov jmp (bad) out pop mov sub inc sub sub popa call fildl daa mov mov pop shrl xor cli adc scas int3 mov mov fist ret mov addr16 add ds mov xchg imul shlb pop imul add mov push (bad) or jge sub rcl sub (bad) or mov push push fbstp jb mov stc ds jle lsl cmpsl or movsb es mov and out ds mov lahf out mov mov push jne mov xlat lret movsb das loop es pop movsb out push pop in das mov sbb mov push cmp mov cmpsl daa cwtl mov or sti xor push xor jbe jecxz jmp aas xor pusha mov vpaddusw dec xchg aad repz mov sbb mov in pop fimull sub mov (bad) movsb test repnz iret mov nop out sarl imul xchg cld mov jnp inc gs xor negl sbb gs imul aad stos mov test rcll push movb push mov int lahf mov push inc jnp push cs popf lret mov mov add stos jae insl aam (bad) popf lahf fsts jns out daa xchg lods bound out push push fwait (bad) jmp adc jecxz xor loope in ficompl sub hlt cltd fldt int mov mov mov int push jae imul adc pop and jge push pop jl add aad imul je psubb mov mov int outsb fildll stc jo,pt sub add dec sahf (bad) jb push nop movsb bt push dec push dec lret cmpsl pushf in leave jae lret pop (bad) inc outsb xor pushf decb ljmp outsb push jmp loopne mov mov hlt es insb sti in cli xor ss aas cmc sub push xor sbb push inc xor xchg mov arpl lods add cmp jae (bad) xor dec out (bad) loope push call sbb mov add cmp push cmc int mov pop stos (bad) or fsubrl fstl aad or xchg xor insb test dec push je add lock loope imul sbb sub ficomp lret mov pusha push mov lock mov out call jne stc mov lcall adc sar or daa fisubl ja outsl push jae stos lcall push loop xor and idivl sub pushl mov call lahf add fucom neg ficomp push into data16 xchg out and and push (bad) js (bad) and lea lret pop aam inc dec cmpsb adc mov stc and inc sbb or loop xchg or aad imul iret xor cmp mov movsl xchg and xchg jp je movsl (bad) scas cmp int3 cmp jo sbb mov jns xchg movsb and dec or push jg mov jno ss cmp and mov push cmp mov push jg mov jecxz je and jae clc pop lret aad or cmp adc stos sbb push or jb cmp lock push lock fbstp push lea cmpsb push fidivl pop imul test int dec es je repz fild sbb mov or xchg and stc loope mov data16 mov test xor les rorb imul lahf ss jnp push jo mov neg sub scas pop js cld mov jae dec leave jbe add sti sub jne aaa xor jnp jo jae mov shlb ss std adc mov ljmp pusha bswap pop mov add mov ret mov in cmp mov pop dec push repz js sbb bound adc xlat lret push cld pusha gs mov mov pop popa sbb push sarl xchg sub clc (bad) imul (bad) xor pop xchg into sbb jno xchg pop lret cs data16 xchg stc jecxz sub sub sbb iret out mov fldl imul adc call add xchg sub push pop lret aaa sbb xchg daa inc xor das mov xchg fild sbb iret ret hlt inc outsb insl notb adc mov mov cmp add lret push pop lret fbstp cmc fsub out in and pop (bad) cld cltd lds insb push aas or adc sbb lret add push pop jnp je popf in stc icebp (bad) jg ss out xor imul add sub push push cmpsb jle outsl sti mov adc push pop or push jmp rol insl lret in add add mov inc and sub add stos bound dec aas (bad) cmp or push pop (bad) mov cmp push sbb in pop bound icebp push pusha ret jae inc rdtsc jmp inc push lods arpl push xchg cmpsb sub stos jbe cmp mov fldenv xchg ss adc sarb (bad) push std xchg and xchg sbb add pop inc aaa jmp and cs aaa xor hlt sbb ret inc stos push dec cmpsl orb push cli mov mov scas mul loop cs scas mov iret scas mov shll sarl adc cmp dec jns cmp or rep xchg fdiv into xchg insl inc incl adc xchg idivb dec les mov add (bad) xchg insb mov inc scas pop out dec adc arpl sbbl pop stos ror and sahf out pop in popf pop in or movsb add pop fs out aaa mov mov mov cmp or adc lcall push cwtl out dec sub dec adc adc mov call repz fdivr or repnz outsb push xor jno cs stos call dec dec mov mov jae mov cmp adc nop scas rcrl and push arpl jbe adc xchg ret jle lret cmp lret xchg push into jecxz (bad) xor addr16 xor (bad) and aaa push (bad) jb xchg movsl lock add test gs sbb add icebp xlat fisubr pop push mov cmp xchg fcompl jl inc inc inc push mov sub push inc xor push or dec xor or test and cld shrb and lds jns cmc incl cltd leave dec push cld lcall rcrl xchg mov add mov hlt lods (bad) mov sbb stc push or and xchg je xorl in add xchg mov ret and mov mov repnz outsl sbb or push inc dec iret mov mov cld sub mov pop gs orl fcomps add ja sbb dec inc rcll jecxz jo add fidiv or test scas ficom aaa shrl enter sahf (bad) repz jle test scas call push mov negb pop jne adc mov sbb dec inc dec or mov mov (bad) push pop and and xlat or jnp stos xlat xor sub out loope outsl mov addb arpl pop sbb inc xor lds inc sbb push fisttpl js jp lcall je negb adc roll and cmpsb push pop fnstcw (bad) rorl xor iret addr16 inc jnp arpl imul xor adc mov mov push mov jp stos push pop cmp inc xchg dec test dec jbe adc popf lahf insl mov fbstp jns test adc (bad) paddusw int (bad) cmp sbb and aam jne insl test inc and jg ss or xchg and xor or fs jge aaa jns add and insl pop sub test jg adc inc pop or pusha jecxz jno mov imul jne add into into lds lds push daa cmp cs movsl pushf lret pop ret inc lret sbb mov lea adc cwtl std movsl sbb mov dec or scas pop test push or cmp mov push xchg push mov push mov stos push out mov inc cmp push sti imul stos in mov or sub (bad) sbb mov icebp jb js mov jb fidivr mov xchg imul push (bad) jg push cld mov sbb leave hlt fmull or cmp jae and ds push add pop lahf push (bad) xchg xchg (bad) (bad) jmp or sbb and push inc sub call pusha aas jecxz jp sub jnp mov pop jbe adc maxps sbb xchg ljmp sbb lea lret leave outsb popa inc cmc popa fwait into cmpsl bnd dec loope jge rol lods repnz in sub (bad) inc push pop xchg xchg mov jecxz in ficom das dec cwtl adc mov test les ret dec in fnstenv inc dec repz and lahf xchg (bad) imul add or loopne hlt push cltd and pop or mov or pushf int addr16 xorl rorb out ja sub leave jle and pop vhaddpd or pushf mov mov aas lret or sbb (bad) in sub imull jne or xor test mov mov sub mov adc pop (bad) mov das dec push push out add mov clc lods mov es push ret cmpsb js cmp fcmovu adc add inc pop inc mov adc add ret mov mov xcrypt-ofb cmpsl insb pop lock pushf sbb xchg dec mov notb mov jg sahf adc or jbe lret sbb mov jge loop sub sbb lahf out jecxz and xchg imul fwait xchg pusha adc fwait cmp xlat inc xchg mov std ror add sbb push inc lods push mov pop sbb rcll sahf mov lods pop adcl seta jo loope outsb xchg ret pop mov adc (bad) mov or out mov scas mov jbe and mov sub ret mov (bad) out mov dec mov into mov icebp inc stc ret lret pusha xor jne mov mov xchg push mov icebp bswap call ds daa or scas negl or cmp xlat pusha mov dec fsubl inc ret mov fldt or adc (bad) ss mov loop cld and stos outsb (bad) dec sbb ret mov dec lods dec mov sub mov sbb xor jle aam outsl ljmp cltd mov pop out mov ret sub inc inc push adc inc cmp subl sub nop mov xchg push push rcrl xchg or cwtl movsb (bad) mov and lock adc mov cmpsl das dec mov xchg cmp push or pop cmp mov xchg or push xlat jmp fnsave sub push mov xchg sahf jl jae sbb flds sti ljmp add out mov into jo insb add test jge or push stc test add xor aad shrl pushf mov scas icebp xchg and loopne jnp jmp rorb aam ja loop pop popa in insb inc std (bad) cmp mov (bad) (bad) xlat js sbb add ljmp jae xor in xchg mov nop jae test lcall loope jne adc mov pop iret in sbb pushf adc sbb inc test into test jl mov xlat xchg in lret pop test test pop sbb mov cmpsl lret dec daa push pusha or clc imul fs movsb mov loope xchg test add fwait jg pop aaa insb or dec ret inc xlat scas push inc cmp inc push sub and rcl hlt rclb sub xlat or lock and mov add xor and pusha sar inc adc orb xor sub imul lcall lock inc xchg out cmpsb pushf xor decl cmp cmp mov mov sub pop callw xchg sub ret popa mov (bad) dec dec leave orl fcmovne in xchg sub fnsave mov out mov insl mov dec cmpsb and push push mov cwtl fisttpll pop dec adc mov (bad) (bad) jge sahf add mov adc daa (bad) push pop inc xchg out or dec dec fldenv lret (bad) dec xchg cld push cld pop clc sbb mov add mov sub inc ret movsb jmp in (bad) mov into bound or xor lock jbe push rcrb sub out ljmp jo call add lahf xor test mov jne xchg add loopne mov add sarb push aad mov inc out or movsl fstpt sbbb cld in and push jb sbb inc mov cmpsb jo jb cmpsb dec pop flds lahf push arpl jbe scas fisttpll cmp or fwait mov (bad) cmp fcomp and and leave push (bad) in cmp jmp arpl add mov dec imul (bad) (bad) pusha cmp das ss mov sarb ja jp dec mov inc xlat daa or in xor lret mov outsb cs xchg push test in sub loop sub out xchg ja movl test lods popf daa ds scas add out addr16 cmpsb stos xor xlat mov lret cmp push das mov lods sub (bad) cmp add les insb pop jmp std movsb jge cltd cmp out mov push pop mov mov popa ret nop mov sbb es add (bad) mov leave mov in loope mov out repnz inc out push cmp jecxz push xor push and jge repnz push out test lret fisubl push (bad) dec jb aad (bad) jg sbb fsubrs lods mov pushf xor (bad) jecxz sbb jae test jbe (bad) xchg jae pop jnp pop xor adc repnz mov movsl cli sbb je xchg push gs mov mov mov cltd (bad) mov dec (bad) fmull dec cmp (bad) mov out fcomip mov ds test or cmpl cmp mov and ljmp xor dec jb sbb mov push aam mov cmp outsb js push xchg sahf sub subl dec pusha in jle lret clc pop in cwtl loop lods sbb repnz jl mov mov xchg mov pop push cwtl mov xchg push sub fs push (bad) (bad) mov fisubr lret pushf xchg jo data16 push mov cmp test jge scas dec popa mov sbb bound stos ja mul cli ljmp inc and fsub or sbb test pop outsl and mov jae addr16 push movsb mov xchg push ss and jae jne sub jo mov mov or push push popf pop pop inc les adc clc inc nop aam in stos jg add mov fnclex fwait (bad) jno inc das sub inc xchg sub fcoms out sbb hlt sbb pop je mov icebp dec xor fsubr inc xchg test flds and andb sub fiaddl aaa es and push xchg push lock lea adcl sbb mov and push inc sub ds imul jbe sbb call jno imul shlb jge jnp es jl xchg (bad) gs aaa dec loop inc fcompl rcrb mov mov mov xchg dec cmpsl add push stc imul imul mov sbb clc stos imul mov and cmp sbb dec cs xchg push (bad) push int3 inc dec mov cmpsb stc push cmpsb shlb pushf mov icebp bound aam bnd test inc adc fildl andl mov cmpsl inc xchg jo loope ret leave ss fldenv pop pop es or std popa (bad) daa add xchg sub dec xor xor scas add or out ds inc aam (bad) xor dec movsl dec jle or outsl mov (bad) out movsl xor cmp dec int cmp scas pop psadbw ret pusha inc (bad) lret aam jo jbe mov cmp or cmp mov and sbb out sbb sbb xchg xchg push gs dec ficomp into pusha cltd cld cmp sbb cmpsb pop mov bnd dec mov outsl cs and stc mov sub ja lcall inc or ffreep add or out nopl pushf aam stos test or popf cmc or fidivr mov in xchg inc cmp scas stos sarl dec jne sub and push nop std mov lea xor mov xchg add and pop test xchg mov push xor adcl sbb and cld inc push out mov or push or (bad) mov shll in jmp mov xor jae adc cmpsb fwait leave fdivrs pop sub std mov push lret dec fnstenv lret aas lcall sbb in (bad) or insb and add xchg les jg inc push daa pop cmpsl xor std frstor mov push andb movsb add fldcw cmp fimull cltd test imul insb popf cmc lahf in ja imul add inc int cmp mov mov frstor loop cmp push es int3 jg xchg fwait cmp cmp popf jmp (bad) in mov fldl cli mov lock jae jb loopne xor pop dec xor fwait mov inc fldt dec adc nop xchg sahf aas push jno push mov jno jmp push jmp pop push xor push rolb sbb jnp loop dec xor in rcll fisttpl pop jbe jnp adc loopne sbb xor pop sbb (bad) ficomp js roll fcompl jo pop mov sub mov test (bad) idivl lcall fnstcw jge in cmpsl xor sbb aam xchg or outsb cli mov dec ljmp pop push and jnp mov jns xchg fs repnz xchg dec aam push pusha test pop lret add int int3 fldenv lret and xchg lahf sarl (bad) lret scas jecxz ss (bad) sar push inc test dec test cmp jle adc ret rcr gs in data16 lahf addr16 inc outsl inc xchg cmpsb adc cwtl add lret add pop and jge mov dec push cmp pop ja (bad) pop lods inc test ret hlt sarl inc fwait sahf aad cmc lret or (bad) mulb or mov outsl ss repnz adc mov inc inc or aas idiv push stos adc mov inc fcmovbe test fstpt (bad) (bad) or xchg faddl mulb cmpsl push dec xlat aas sbb imull cmp inc adc push inc fwait enter mov sbb fisubl push aaa mov add data16 cwtl ja in nop xchg leave jo xchg (bad) in popf fimul mov (bad) cmc or jae stos ja sub les jae mov aaa out xrelease iret mov ljmp jp lds push repz or clc (bad) pop adc cli inc xchg out scas jae xchg cmp push sub cs cmpsl or imul sahf ret fwait sbb pop jb add mov inc cli out dec orb mov out outsl lock (bad) test jb mov inc std hlt fmull or xchg enter shrl or mov movsl gs repnz dec lcall (bad) sbb sti xchg nop inc outsl jge icebp out add xor xor iret push xor clc ret push insb adc int3 int3 add shlb mov sub sub sub scas leave lret insl outsl and dec fwait (bad) jae (bad) mov inc mov in in (bad) call pop and push call fwait adc rep sbb fnop and cmp push hlt int3 pop imul lcall push mov cmp and push inc fneni(8087 xchg cld mov xor jb lods nop sbb sbb rolb lods ret inc std sbb insb mov adc xor cmpb mov pop js sahf xchg call js jo jp prefetchwt1 push bound lea aad in xchg xchg and adc imul jmp (bad) jnp fcmovb inc mov sub test cwtl inc rcr rcrl iret jle mov dec sub mov xor repz pushf mov int jo negl cmpsb mov or push inc lods mov addl dec test jle xchg adc lea pop fucomp shrb icebp lret jnp out scas pop mov jo nop xlat (bad) (bad) mov lret movsl mov or jnp aaa add (bad) xchg sarl mov data16 sub jge mov push repnz jmp repz cmp cmp sbb fs cmp add imul add pop movsl daa cmpsl ret and push push sub popf imul sbb cmp sarb call pop mov jg out fldenv sahf popf int3 or scas mov jecxz adc inc addr16 dec ja mov icebp jg jle jp jl mov add insb add pop insl push stc lret cwtl (bad) mov imul repz mov or push mov out jecxz (bad) mov xor mov sbb sahf ss pop clc sub jbe in sub dec xchg ss adc sub xchg movsb movsb or aas adcl pop lods adc sbb out movsl stc ja pusha pusha mov (bad) insl push gs xor into rclb pop das adc fstl scas xchg sbb test jg dec out (bad) xor out and fsub inc (bad) int jg rcrl push push jmp cs scas xchg pop adc push (bad) lds rorb (bad) (bad) sub pop aad ljmp lea std outsb add jge aad stos in jno jae lock dec push add cwtl xor adc les sbb rol adc faddl pop pop mov pop mov dec pop mov repz out lret jecxz cltd aad daa or hlt idivl addb aam sub push xchg and jno adc push pop in out xor sbb add push add and mov fmuls pop cmp gs test incl mov mov push jp cmpsb mov xor cmp sub in jb inc cmp imul push jge sbb xor sub repnz (bad) cli scas jl jae adc aam (bad) mov lea inc push iret dec (bad) lret jnp inc or xchg sub xor int mov pop mov adcl push xor dec dec or inc lcall sbb inc mov add add cli mov lock test popf cld xor dec xor icebp leave jns sbb das sbb sti push pop js cmp xchg jg xchg leave bound pop in icebp int3 xlat inc cmc lret out pop shll sbb loop shr inc sub leave lds sub adc int test mov sbb jge es addl aas ffreep or cltd iret stc out cmpsb lret imul or xor dec sub outsl les in adc mov cmp loopne jmp push xchg js push lret popf or jne loope insb popf ss dec sub movsb add ret sbb pop xchg (bad) and js (bad) jo movsl mov jns sbb pop pusha dec jne repz (bad) sbb inc xchg or mov lret ret call xchg stc inc jb lret sub pavgb bswap inc mov imul ljmp sub sbb sbb mov lods in jb mov movl into sub vpminub push dec mov inc push push arpl mov in test mov int3 and push sbb inc push inc pop mov sub imul cmp xchg mov push add add mov stc add data16 mov xchg sahf dec inc mov stc mov push pop inc push subb pop pop dec int sub sub mov jg mov mov cmp int3 sbb or mov and xchg mov popf xchg dec or je inc imul xchg addl iret mov mov cld add or add imul mov dec out mov pop jecxz jmp inc push bound jl jo jne stos mov cmp add cmp shlb popf add ret gs dec leave sbb sub mov mov sub iret xchg inc xor xchg sahf dec sub or xor sub push mov pop lahf pop or pop lahf jecxz mov pop test and xor mov xor sbb add fwait movsb cmp test mul add lds sbb sbb push and lods ret mov xor push mov mov loop pop cld xchg mov and cs add enter mov imul jge daa adc les lea and in dec add (bad) xor sbb add sti sbb cmp push shlb jbe imul inc mov (bad) test xor mov inc faddl xor es sub div push ds scas sub es push xor jns popa jecxz jae pusha inc or (bad) push and dec fcoms dec mov dec sbb mov dec push jne rcrb xchg mov pop out xor sub leave rcrb mov in loop push or stos scas dec stc adc mov add mov pop (bad) popf imul xchg call fsubrs inc sub sub (bad) jg jae and aas fdivl (bad) pop scas xchg aad pop nop cmp or push cmp jp lret scas rorl ds jns mov xchg cmc nop adc pop mov iret pop icebp cmp daa mov xchg lret push add mov or cmp add sbb inc pop jae cmc pop ljmp cmpsl inc enter out test mov sbb lcall cltd lock xchg and jno sahf xor cmp popf push fistl rorb out cltd dec hlt in xchg in jne in hlt dec adc push fwait lds cmpsb aad add adc dec and test ds roll into and sbb lea add or push mov sbb (bad) test repnz dec adc fsubrl cmp insl lods cwtl outsb (bad) sub sbb cmp xor pop inc inc pop mov hlt ret cmc jno xchg dec xor sbb imul pop nop (bad) xor cmpsb or rorl fcomi sub cmp lahf inc cmp xchg sub in dec xchg hlt cs std cs and or test jae mov aam pop inc inc (bad) movsb (bad) jb and pop add arpl xchg (bad) int roll sbb lret test rolb (bad) ljmp or vpmuludq out dec mov outsl mov faddl loopne sub enter mov push mov mov mov cmp loope fimull jne enter (bad) das js dec cmpsb ret mov jb add and sub or lret loop movsb mov jns (bad) push add inc add mov fdivp pop jl rolb dec lahf lea push nop sbb loopew inc xchg jo lcall jmp and push and sbb and cmp and mov icebp sti lret mov ljmp mov push mov lock into (bad) fcmovnu sub lahf repz cwtl push cmpl inc sbb xchg pushf int ftst and mov sub pop loop dec pop imul cmpl dec hlt sbb sbb scas fs in pop jge (bad) xchg xchg clc pop cwtl xchg add mov xor sub ss push add push or mov pushf inc sbb pop subl jge aaa adc cs pop into enter aaa sbb loopne jecxz inc lcall data16 mov push dec sub (bad) ficomp cmp jns out enter pop (bad) xor fs movsl pop mov movb dec loopne lock mov lret pop mov ja dec mov sbb shll pop sbb mov icebp inc mov shlb fisubl das jmp fild (bad) add and in cmpl sbb movsl xchg mov cmpsl popf loopne jle mov push movsl and data16 cmc and xor pop les cld jns jb jb stc scas mov sub hlt sbb add xor or mov xor push rcrl lahf push shrl cwtl sbb sub inc jbe pop lret jae ret pop and sub ret add adc icebp pop out jno das jp cmc ficompl cmp xor mov dec arpl movsl sub ret stos sbb fdivrl inc inc mov movl bnd cmc hlt fdivl dec sbb scas inc imul adc sub mov and imul pop jae or mov mov push and cmpsl push pop out icebp fidivrl inc fwait cmp aas push push push ja mov jge andb (bad) cmp ret mov xchg popa sub cmp addr16 cmpsl in sub sbbl jbe and testl sub dec insb mov xor and aam sub push inc loop shl movsb xor jbe loop pusha push lret insl bound std mov out or scas (bad) add mov and (bad) xor xchg sub rcrl mov xchg popa out mov or xor dec test mov xlat lret push test aam enter lods lahf ret clc aad aad sbb push scas (bad) fsubrp inc adc mov mov int3 pop aam sub imul out clc arpl cli bound mov in mov addr16 push das leave jb jl jmp mov jno cli jae cltd push sub (bad) or jg xor add imul scas pop in sti movsl inc lcall sub (bad) xchg cmpsl shll or (bad) jbe mov repnz or inc (bad) repnz js aam mov idivl pop stc shlb in hlt test ss test aam cmpsl push movsb ret jecxz bswap (bad) enter inc andb xchg jle pop hlt mov pop data16 sahf mov pcmpeqd inc pusha (bad) mov adc sub std iret out outsl pop cmpsb jae xorl ljmp mov xor jbe shll mov push adc and shlb xor xchg enter imul (bad) repnz inc inc dec jno jo mov pop out aaa cmp jmp aam and jl cmp push fcmovne lret out xor and std clc adc add inc stos das ret leave (bad) jns and lea into sti data16 call add lods test je insl pop mov arpl paddd aad mov jae enter sbb dec mov popa outsb mov and icebp (bad) and cmp dec jo sub dec sti (bad) push lea movsl insb mov imul cmp adc fstps inc movsl cmp mov push xor mov test imul mov inc dec mov and int3 push fsubs xorb lds sub mov and fdivr push stos arpl jge into lods lods xor mov jge push in (bad) and lds rol sbb or push lcall mov cli fstl ds dec stos or bound xchg (bad) xor cmc push or rcll xlat lea clc imul enter mov daa mov inc insb stos inc and test xchg ss cwtl jmp cmp daa aam ret mov and mov cmpsl rcr out and inc data16 sbb or jle jge cmp out fnop pop testl in cmc fcmove jle fwait in out xchg aas gs push push adc fs sbb (bad) mov push hlt sahf mov lret dec push push outsb cwtl xchg jecxz push ja gs pop pusha add fwait (bad) stc icebp in xchg cmpsb idiv mov push jmp add in es lahf gs xor push add aaa lret fadd ss mov pop (bad) idivb inc sar mov xchg dec bound mov jg jns lcall idivb push dec lret inc and cmp loope xchg test jecxz fildll cmp or xchg shrb call ret outsb or sub cld movsb cltd adc sub xchg inc cmp std add add fwait shrl sbb or push ljmp sbb (bad) jno ljmp mov adc rcll loope ror cmp mov cmp pop jp inc jno lret sarl add inc mov lret add test loopne test jmp (bad) xchg push callw inc push mov (bad) repnz dec cmp fwait out dec subl mov js fdivl adc jnp mov outsb push int ror call xchg lahf push xor push push sbb stos jp cmp stos adc push push adc pop fnop or push cmpsl fs inc imul test or popl out jp jb pxor cli mov mov scas out scas andb xor inc adc sbb cmpsb cld dec mov and insl das daa xor inc repnz push and sbb outsb lret ret cmp mov push adc jo mov xor dec nop and insb nop add sahf jae fldt fstpl push loope pop add xorl fidivrl (bad) mov sub sbb xchg dec xor fnsave lret sub mov fisttpl nop xchg mov push (bad) flds cli mov (bad) ret mov (bad) push jnp mov adc and jge xchg inc imul sub jmp imul jnp push (bad) mov adc pop add push mov aaa pop rcrl pop pop aad test adc inc repnz xchg ljmp push or lret (bad) jmp pop std test test push jb pop xor sbb lret (bad) jbe xchg nop scas push or mov scas inc pop add lea cli push daa mov sti repnz test outsl ds adc inc out sbb aaa cmpsl fucomp shl push mov sbb loop adc loope fldcw andl (bad) out fdivrl in mov mov pop orl xchg inc mov add and inc icebp or test push test pop jle add in pusha leave dec inc xchg pushf int add mov jne pop mov xor cmp mov sahf incl stos fidivl mov sbb loope and mov fwait or outsl enter out fs mov arpl test ss sub dec or mov jns outsl icebp adc pop cltd insb pop add test xchg into push cmp sbb push and jp and jg xor lock push icebp loope jo add pop pop lret adc xor xchg adc enter ret mov fadd jbe fstpt mov (bad) ja inc fidivl in push fisttpll stos negb mov xchg add (bad) xor popf daa loop mov lea (bad) je dec xchg (bad) xor push mov mov (bad) cld xchg jmp sahf sbb add pop xchg and adc cmpsl jl sbb into add cmc xlat leave in (bad) sub pop fstpl aam push dec mov mov out lock test xchg outsb dec scas nop ljmp les stos sarl pop popf fmull stc shlb xchg cmp addr16 cmc test outsb test insl sub adc jae pop jo sbb int3 xor push mov adc pop pop (bad) cld cmp mov and cmc stos popa push mov inc pop mov (bad) mov aas cmpsl sub sbb or or and jp mov loop mov mov jp xorl fistp (bad) es sbb and inc jae adc outsl or and pushf jb test jp jns aas (bad) sub (bad) (bad) add test mov aam insl add jns movsl movl add cli mov cwtl outsb jbe icebp ljmp and and sub push and in dec xchg (bad) faddp aaa jno pop sub out mov lret mov mov out fisttpll imul mov sbb (bad) nop scas adc push out xchg jo lahf pop and out pop (bad) int push mov popa jle lret mov negl mov test push lret loopne mov out sbb adc dec adc dec repz (bad) imul push pop leave loope jns mov dec mov sti repz test idivb cmp xor jecxz sub mov (bad) mov out xor int loopne jo mov cmpsb sti mov fsubl adc adc cmc mov outsb xchg sbb idivb add lock mov jg enter fcomps sbb cmpb fistpll pop icebp hlt test mov sub incb xchg mov xchg mov and aam test rcrb mov pop mov loope dec xlat sbb orl inc lods pop shrl or pop add push mov sahf pusha xor push mov pop inc int3 adc jl fildll and movsl add adcb (bad) pop and push pop ja fwait sbb jp lock pop in push sbbl sub jecxz out mov (bad) or pop push cli cmpsb xchg fadds jb mov out out lret cmpsl lcall ret inc push loopne mov repnz cmp or xor les push divb cmp pop scas mov inc jmp and nop movsb data16 pop xchg xchg scas fidivr adc mov cltd adc dec mov and sbb cmp push cmp movb lcall cmp in xor jl xchg das jge aas ror adc mov cmp mov (bad) push cmp jg aaa mov pusha call sbb mov pop fstps int leave lret data16 into aad push out stos or fbld leave test insl gs xchg or outsb pop mov notl inc (bad) push (bad) aaa xchg ljmp addr16 test dec lds fwait cmpl popa cmp add (bad) and ret cwtl (bad) cmp (bad) ret stc add push add push int3 sbb sub addr16 iret aad fcomps (bad) xrelease daa sbb jmp and cmc jb leave xlat inc xchg dec insl push xchg insl dec aas scas cmp push imul xrelease imul xchg mov cmp std mov ljmp push fs outsl inc or scas es test leave sbb jbe leave mov jbe pusha pop or out out (bad) push jge nop pop pusha push inc (bad) push mov nop les sarb jbe mov inc or bound sub add xor xchg dec jne ret jmp std sarl daa ja pop and in sahf loopne,pt lahf clc lock out leave mov dec cmp mov mov and leave add mov push jecxz and inc jg mov dec stc xor inc inc push popf add int3 pop xor inc mov mov or sbb pop and jecxz mov insb out sbb and mov adc mov (bad) ljmp add xchg mov pop push dec jbe add pop stc and iret lea adc pusha ja rcl inc hlt add popf dec and in pop stos lea (bad) negl scas sub dec lods and loopne push outsl dec movsb xor int3 cmp (bad) cmp pusha sub rclb push add jge shl and repz add ss cmc pop clc push cli cmp dec adc lds pushf mov dec adc mov subl sahf push cmpsl xchg sbb inc inc dec stos push movsb adc ret mov sbb mov test lods popf arpl (bad) popa xchg and xchg cmp pop lahf xor xchg ja test aas xor mov icebp inc mov (bad) mov rclb shr cmp push aad push or mov aad daa loope jle imul test (bad) xor fcompl xchg xchg cmp vpandn cmp jo shrl movsl add dec fldt xor push cmp adc and sbb ret xchg clc inc ss inc xor fstpl fild mov enter add ja xor (bad) (bad) sub fs sub sbb cli fdivl adc or pop sbb sbb sti jo jbe inc std popa inc rep lods out dec test push (bad) test sahf inc xor mov add (bad) xor xor jmp pop subl fbld scas sbb mov cli mov hlt jmp jo pop rcr int (bad) lret and enter daa es sub fidivr adc pop xor push iret insl xchg mov dec lods fwait cli adc (bad) inc xchg jae jp push push loop cmp cmp sub xchg push mov and xchg mov stos jge inc addr16 shl rcrl ss (bad) and add pop add adc xlat mov fsubl xor subb xchg push or mov pop mov adc jg cmc loopne jge popa push pop in arpl jo sti sbb aaa jle out xor push sub and xchg mov pop sub shlb sbb stos lret cmp sbb inc and mov rcrb mov fcoms cs adc mov mov inc sbb mov das data16 jns insl add mov jb scas sbb cmp jb mov sub or xchg or or and lock loopne or (bad) ss jmp mov xor fcoml aas inc jmp xor movsl add mov mov jecxz fsubrs cmp fidivrl cmp add inc popl sbb mov pop and add icebp std int push mov lahf lods lahf add movsl negb lahf xchg pop adc popa enter repnz int3 xor (bad) jno ss jno lcall cld outsb and mov mov pop cmp add aas push cmp outsb pop int test push add fldt lahf mov pop dec movl adc sbb lahf jo test rclb sahf mov repz insl jl pop fidivr mov imul push pop pushf push in mov pop je sbb inc dec mov mov sbb cmp lds shl cmp jmp sub shrb cmp bound mov sbb mov and sub xor mov mov mov lds movsb fprem1 loopne mov inc jge push out decb insl and jp inc mov aas les in mov popa iret xor push xor clc and ret out outsb (bad) out and cmp out add add lods sarb add (bad) mov inc mov lock xor mov jb (bad) mov or push jnp scas xchg sbb or mov or out subl sbb mov mov pop jo mov sbb xchg add pop mov aad mull leave fcom jnp popf xchg jns shrb mov adc fistl jge mov mov iret cmp fwait jb lret push outsb sbb mov pusha jge mov xchg inc mov and dec sub xchg ja flds add xchg cmp sahf mov arpl sub pop mov outsl ret inc fs inc adc dec cmpsb cmp cmp dec in ljmp xchg sbb inc les push pop sub out (bad) mov sbb mov test jo mov jg fs dec pop enter xor xchg push push pop mov out xchg popl cmc ds xor and mov test and in call popf out inc (bad) fs pop das and add pop mov pop ret xor mov pusha mov les and mov mov dec (bad) loopne out js or js and inc loope ss aaa ret xor pusha clc cmp into pop movsl pusha leave fidiv xor popa mov adc adc sub repnz pop pushf mov cmp cmp push push dec sbb add aas test inc and jecxz inc aad std mov lret popf inc push mov ret xchg iret nop and test cmpsb add mov les stc idivl sub adc scas mov sub (bad) sub add cmp cmp xor push aam inc addr16 addr16 pop push daa aas sub imul aam sub sti cmp adc inc scas mov mov mov inc mov push pop cmp add mov in xlat pop in cmc jb fstpl shrb mov jge jg (bad) add cmp stos fiaddl sub xchg cs add push fwait add out in mov push cmp scas sbb xor inc xchg jno cmp mov inc addr16 lret popf inc out push (bad) das cmp inc jmp jl cmp xor dec lock call out loope jbe (bad) lock insl inc gs jne movsl mov fwait test dec cltd ret mov and outsb xchg sub cmc jns xor clc sbb xchg xchg jnp jg,pn mov in data16 cmp repz jmp pushf jge (bad) rclb int call push pop mov pop xchg push dec cmp push sahf loope mov xor jecxz ret out loop lods (bad) dec xchg out xor pop dec stc cld push adc cmp scas pop frstor push mov xchg jge or mov popa jne inc mov fstpl mov shr xchg xchg mov je divb rolb iret iret mov cmp jno mov pop (bad) sbb sarl lods in adc das sahf fsts sub ljmp (bad) jl cwtl add push or pop jbe test pop imul sub into lea mov fsubl (bad) xor xchg inc (bad) dec sarl lods test or mov pop or xor jns or and popf (bad) (bad) loope addr16 inc arpl mov (bad) notl fyl2xp1 enter (bad) fcomps rcrl fidivrl mov std push std sub icebp xchg or pop adc cmp mov mov jno xor ret inc pop mov ss stc xchg xor push adc imul mov mov pop js insb dec push mov mov ror loop fsubrl test add pop aam xor repnz jb (bad) xlat mov add and push mov fidivl frstor mov (bad) inc mov sub imul mov mov stc (bad) mov mov mov jle mov pop inc ljmp aas and cmp call inc pushf lret xor mov fidivr or dec mov shll scas push les jmp xchg cmc in push lock xchg push and inc arpl push jae lods es pop int3 lcall (bad) test int3 xor cmp mov push ljmp sbb test mov loop mov or lahf in mov xchg sub adc in push popf xor lea fsubr nop rclb repnz je dec ja fistpll dec mov inc pop xchg mov adc pop in jg jae sar lock fsts cmp push cli flds adc push in xchg add insb dec outsb sbb out gs jnp ret xor out mov imul (bad) mov stos fnsave cmp ret aad cmp fs dec cmovge pop pop mov xchg cmpsb pop (bad) sub pop leave out fiadd mov cmpsb cs (bad) fmull leave pop das shr icebp negl xor lods scas ljmp lret insl in adc mov mov ljmp call out mov xor pop xchg nop inc push lds adc mov repnz scas pop adc loope out popa int3 xchg inc mov inc xchg ljmp and (bad) pop aas imul movl pusha mov push pushl ret lea jae jl bt cmc sub lea movzbl pushf lea lea push mov mov lea call bts btr add sar pop cwtl pop stc call movzbw movzbw push mov mov pushf mov pusha mov lea lea bswap pop pusha movw pushf pushl ret add push push js arpl gs add scas push call imul clc arpl div inc andl inc test or in xchg push dec push es xchg rolb jge inc jmp mov testb inc sub xlat scas psubq int3 mov fs mov enter movsl and mov push push sub mov arpl dec in push lods pop xor jl addr16 mov leave out sbb mov sub cmp sbb xchg push mov mov sbb enter fwait in daa lahf repnz fwait xor fs adc xlat sub jmp dec mov jmp pop push mov ret dec popf pushf fcoms sbb sub imul (bad) xor out push inc mov and mov lea je outsb test cli xchg fs out hlt add scas or int3 ror int3 out mov cmpsb dec sarb xchg sbb pop pop jns addl add test push js xor cmpsb adc cmp fsubrl add and outsl cmpsl pop or cltd sti xor sbb adc cmc idivb movsb inc fildl add mull jb (bad) push cltd xchg xchg push (bad) hlt dec xchg cs ljmp cmp test data16 outsl xchg xchg in cmpsl push and mov jno or dec or push subl movb cmp push jmp push sbb inc push aas fistp and jge jno sub jg mov adc xor mov jl pop mov adc out imull adc push cmp add fs movsl outsb aad adc in inc std pop ret adc mov cmpsb into jp mov mov (bad) sbb mov xchg xor push push test insl in dec addl dec mov loop pop fnstcw mov in fwait hlt pop jno rcrb inc loope pop mov mov test push adc cmpsl mov stc dec lods dec es jbe stos cmp mov cmp push jmp shr mov cli inc inc and jnp inc add xor pusha mov mov movb movw pushl pushl ret lock cmp or inc mov inc push iret jmp scas adc negl cmpsl pop push pop ja mov int3 push mov cmp (bad) dec xlat pop push sub fiadd and mov mov jo hlt cli push imul dec dec cmp (bad) les roll pop xchg xchg xchg stc jle cmp ja jo pop popf add jo mov mov cmpsb ret (bad) scas (bad) xor push xchg push rorb or fwait movsl inc xchg or inc int3 aaa cmp (bad) pusha out ficomp popa or add addr16 dec mov jle les dec popf pusha sub xchg sbb nop jp inc cmpsb je mov aaa jp popf adc mov stc or jnp and or dec incl out xchg lret cmp lcall jbe jmp js outsb (bad) cmp cltd rorl mov push scas inc lret mov and inc in push push inc push les jo lcall pop fs sub cmc jecxz es je add call jp les push xchg ljmp hlt imul pushf add sub sarb (bad) aas pop jg mov icebp dec test pop push push aaa mov pop rcr cld std dec cltd xor xchg test mov out das stos mov pop jge mov jbe addr16 nop lock xor mov fyl2xp1 dec sbb push or ret loope adc scas pop pop test into sbb xchg sub clc sub mov and fstpt loop adc fdivrl push inc scas push sub repz pop xor and addr16 aaa sahf xchg shrl mov or mulb fimul or inc pop push lods sbb fcomps xchg into je test jbe scas rorb dec call fldl pop iret (bad) push cld ds push and insl inc out pcmpgtb out popa mov ficompl test pusha std (bad) dec fwait outsb pop pop inc pop fwait testb dec mov pop ficom jne test sbb or aam jo (bad) test nop bound dec lds or xchg cwtl call mov (bad) and (bad) dec jnp push aad mov ds pop and and push lret push lock jle sbb das cli or inc movsl into pop xchg scas jl les rolb adc scas mov and jmp pop cmp or in pop int rclb and test data16 or xchg mov iret dec pop enter dec lods dec cld sahf out addr16 push mov sti xor mov ds dec in and ret fstps xor cltd xor repnz jecxz movsb mov sub sahf fidivr jo ja fmull hlt mov mov or mov xchg xor mov pop dec add mov imul jnp sbb lcall add inc movsb cli lcall mov jns rcl lcall xor insb cmpsb loopne pop ret pop cld es dec shrl ficomp or xchg mov iret fdivs push and mov movsb add fiaddl push ret sbb pop mov cmp push mov (bad) mov push xchg outsb in add movsl enter mov jne dec xchg inc pop mov mov (bad) lock inc outsb add mov mov mov test mov pop rcll xor fistl cmp xchg lods fs jno mov negb push inc and cmp call lahf ss mov dec (bad) or dec cmpsb ja mov adc data16 mov or pushf mov xchg shrb xchg add xchg cmp push mov mov popf xchg and mov nop fidivr aas dec repnz je lahf mov cli adc push cmp notl imul fcoms sbb decl xor add push scas ss notb mov (bad) outsl xor (bad) scas test jmp dec out adc jae int3 stos push ret push push dec ret lds ret cmp sbb (bad) cmpsb adcb (bad) dec std sub sbb jl or or pop cld arpl stc popf pusha cmp xor es cmp pop jb pop xchg imul orb dec repnz adc pop xchg sbb lods setae movsbw bswap lea call push lea jne push movzbw movb setbe mov setne not lea lea jmp movw call clc jmp stc add call jmp lret inc in push push inc outsl add inc scas movsb in stos cli xor adc push scas sbb movsb (bad) repnz mov push test push movsb pop mov sub stos xlat cld stos loop lcall int stc push dec stos pop cmp push pop push and std cmp or dec popa mov sahf (bad) iret mov sbb std pop loope in (bad) jb daa (bad) in into fsubrl add cld cmp or data16 sub jmp xchg mov loop mov adc shrl cmp pop fmuls test loope dec call xchg xchg mov jbe add (bad) add or add or fs call call xchg pusha pushl jmp xchg push sub push inc ja push push lret lock (bad) jl jp out xchg push mov and sbb pop mov mov sarl push mov add mov inc sub ss js mov test ror in xor mov inc push pushf cmp fsubrs (bad) stos adc out lret push dec xchg test dec imul dec mov stos clc jae cmp jns int xor add add shrb aam lods rorl cwtl lahf mov rcl xor push movsl (bad) hlt pop jae ds in cltd adc fsubrp dec pushf repnz pushf call lea jnp pusha pushf movl pushf pusha pushf lea jmp xor inc or aad and xchg movsl add std cmp icebp fstpl pushf scas mov in mov rcrb mov xchg dec mov lods out repz and (bad) popf jae mov mov xor push sub dec mov cmpsl and ficomp das fidivrl push sarl sub div mov mov inc sbb lods and sub movsb jb xchg dec xor jg or lahf mov (bad) gs dec pop mov (bad) jbe inc sub dec sbb pop push imul push mov incl adc push inc dec mov aad ja cmp daa xchg jae inc jg repz sbb int (bad) mov out sahf inc cmp in insb ret jo cli or xor pop lahf in out sti push jmp jb xor sub subb cmp stos pop cs icebp icebp rcr aad and js repz cmp jne outsl xor outsl xchg mov pushf in sbbb jnp mov and dec (bad) pop and je insb mov xor (bad) or pop movsb jne aas dec and push lods aam jo mov movsbw push btc xor movzbw jns mov stc sub cwtl shld push sub sub sub shrd push bswap aaa push neg sub neg shld push bsr mov cmp cmp test call sub cmp cmp push call call lea push lea call pusha pusha lea jb lahf or movzbl inc shld bt shr btr lea rol cmc imul not btc lea and shl clc push rcr push shld shld bt mov inc mov pusha cmp test pushf cmp push push lea jb shrd aam cwtl adc mov cmc not pushf add sub mov pusha movsbw add xchg pop pushf setb jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret cmp inc xchg adc inc lret pop mov in stc fldcw xlat xor jb sub mov iret iret test lret rorl inc mov mov dec and jns cmp mov cld mov out xchg iret dec lahf jmp inc (bad) adc lea mov sbb pop mov pusha sub cmp ss mov aas push mov lods popf xor fisttp lods or xchg dec pushf (bad) and lea and js int3 cmp repz mov lods push cmp lods subl mov cwtl sbb inc mov add mov jne or sbb lcall xor adc jae jno testb mov daa dec mov fistpll fwait mov (bad) pop adc ds sarb aam mov (bad) (bad) aaa int3 jmp inc mov xchg cwtl fdivl repz xor (bad) xor cltd imul fdiv dec or clc adc dec and sbb ret aad jle pusha out or mov div aas repnz (bad) fwait loop or adc es je mov jbe pop xchg cmp aaa xchg mov das outsb xchg mov test mov jg call movsbw bsr pop shrd rcl push pusha mov cmp pushf mov add cmp movzbw mov call dec mov inc stos loop or mov dec pop inc mov adc ja aam xchg mov xorl aam xchg mov mov icebp jmp daa mov adc cmp cmp lods out fcom lock imull movsb pop cmp (bad) mov repz jae mov movsl jmp mov add das dec push mov (bad) cmp adc or xchg mov xor fs jmp or dec cmp lock ficoml jge pop (bad) dec cmpsb cmc push repnz inc mov lretw inc and enter push push and pop dec dec popf test push inc push xchg mov gs sbb popa xchg in adc push push mov jbe sub mov jae cmpsl (bad) cmp sub jne xchg sbb in rcll out inc pop repz mov pop jne sub jecxz std sub ret push sti inc mov push ja sbb inc pop sub cmpsl sub mov mov stos xor xor add mov int mov adc dec xor sbb insb pop call loopne mov cmp enter jmp sti pop pushf (bad) mov fisub cld and fs (bad) enter mov decb push aas adc sti push mov daa dec scas insb mov xchg js frstor loop mov (bad) fidivl imul xchg cmpsl xchg inc movl dec lods xor aad mov pushf out push or movsb inc sbb dec mov xor sub ds push lea jb add cmp cwtl dec inc jmp pusha lea je pusha pusha lea jmp jmp add aas ljmp dec mov jmp loope cmpsl pop pop mov xor jmp sbb pop or mov dec sbb pop lret xchg aad mov loop ficompl sbb xchg sarl inc dec xor lret sbb add scas decb scas je test cwtl jns pop movsb dec test inc cs xchg icebp cmp or bound mov mov cltd loopne inc xorl in cmpsl sti pop fstpt add (bad) jbe incl lret out insl aam pop lcall jno (bad) xchg sbb lret sti mov mov fdivl mov addr16 jae out pushf test push call sub sbbl inc push std fwait sti pop adc repz aaa xchg jg jb in mov test push xchg cmp popf pop adc jecxz movsb dec (bad) xor test mov notb mov sub sti or mov dec cmp xor xor rclb in aam lods cltd sbb sub iret leave outsb xor push xor cmp int3 jg adc je clc xor enter sbb sahf cmp mov mov xchg jmp jl stos sbb inc mov pop sub mov pop pop int and jns pop mov and sbb divl aam test pushf mov adc shll mov imul jae (bad) or jp popa fsub and mov mov call adc adc (bad) insb jns sbb mov repz and cmp inc and xor inc xchg or xchg adc jmp mov jmp (bad) or movsl movl push daa mov and adc sbb sub xor add and push add inc fcoms call adc inc leave sub into call xor pop dec push pop leave data16 jecxz add inc mov adc mov cmp mov fidivl cli outsb sub jecxz aad and in (bad) mov xchg mov fiaddl adc out stos (bad) xchg scas movsl inc out xor push mov jge jnp ret sub pushf sub nop sbb and fsubp aam (bad) out or hlt jbe sub adc sbb xlat dec adc mov cmp movsb cld or mov test mov movsb das mov mov out pop les push inc xor loopne pop mov nop sti repz jle cmpsl xchg loopne xchg pushf lods fiadd pop mov negl pushf cmp cmpsb (bad) push scas sbb dec mov or jns xor rcrl (bad) loop jl out repz mov jmp push sbb inc fildl dec and xchg add inc and pop jmp and lea mov adc cwtl scas (bad) popa sti ds stos inc sub test inc mov push xlat int jae push inc in pushf cli sbb nop testb sub mov sub in sub and mov add adc cwtl ret jno inc das dec sbb pop popa push aaa call or xor incl aaa test sub lcall jl imul div rcr mov mov stc cmc les or sbb fcmove into fidivr pop dec scas push cmp sub lea (bad) repnz mov mov xchg jns cmp imul xchg mov inc insb (bad) repz sti in adc (bad) push mov in dec cmp sub stos cmp test or mov xor add and call or add mov call add inc js je jb arpl jae xchg inc mov sbb dec mov mov inc subb add jno inc in test icebp (bad) pop aaa lret adc inc sbb mov sub inc push xor adc aas ret or sub sbb rcll and add mov lahf sub xchg lcall xchg icebp loop shll jle (bad) sub scas sub or adc in ljmp jns lret mov shlb jecxz jg outsl pop mulb and inc mov clc mov add inc mov push adc loop fisubl gs add push dec fs xchg daa pop (bad) pop addr16 pop cmc sub ja mov cmp push gs adc test insb xlat pop call push xchg sub mov loopne pop cmc out sbb push sub loop scas and sbb and inc sbb dec mov mov int lret sbb adc and lock nop mov cs mov sub sti xchg push bound sbb daa or mov pusha mov adc addb data16 pop cmp pop pop push mov adc add xchg sub or jp pop mov jge fstl push xchg in mov fwait push lods pusha mov (bad) aad mov inc mov sbb dec lahf hlt mov and fs outsl scas mov es inc xor test inc mov bound ret xchg inc cmp push aad push repz pusha jbe push adc pop pop mov les out mov or (bad) cmp insb or mov (bad) ss (bad) xor push inc jns lcall addr16 xchg js push cmpl scas xchg dec push adc outsl fdivr arpl pusha pushf arpl add and jno aaa sbb das in repz and (bad) std dec or jne pop jecxz jp popf idiv in sahf xor mov nop jnp mov sbb or gs push jnp cmp sub bt shr mov cmc stc cmpb pushf pushf lea jne or bswap inc sub bts rcl test mov clc shr push (bad) lock stc mov cmp not mov sub jge bt clc test jmp push jmp into lret daa push inc fldenv inc fsubrs adc scas je je dec hlt notb mov mov aaa xor and addr16 xlat jecxz mov icebp add mov sub sbb es movl sub jle sbb dec and stc sub jne in xchg mov (bad) (bad) mov sbb lds or fist push test sub mov dec bound inc rorl cld dec (bad) lods cltd repnz pop loopne andnps push (bad) je aam test push sbb nop dec arpl lea inc movsl scas push push movb lea ja call hlt test dec and inc pop jl hlt (bad) insb lcall es cmp scas add loopne (bad) cmp mov pop mov lcall clc add jp lahf mov cmp pop out xchg push xchg mov dec out cld push int3 xor inc dec jl outsb jnp or punpckhwd mov add lret into cmp (bad) xor hlt pop cli or cli cmp or clc mov xor cld xor js pop jbe xchg jl ljmp mov clc cmp call push push lea pushl lea call pusha cmc call pushl jmp push movl jmp stc mov call jno dec into and inc xchg push cmpsb dec pop sub aad sbb gs iret jb ficomp in fidivr adc sub pop aad mov rorl adc sahf jo fisttpll adc and pop mov add jle int addr16 push jecxz xchg dec push (bad) cmc xchg sub and mov out mov sub ja (bad) gs add movsl inc lds mov xchg into out xchg es lods dec das mov les and mov pop lahf add adc add stos mov dec xchg push (bad) sbb pop insb fs cmp add cs je xor jb imul cltd cmp int mov inc mov (bad) sub xchg mov test (bad) pop or pop jge lret out xchg and add adc movsb dec fsubl mov xor fwait in nop addr16 jbe xchg push (bad) mov movsl stos rolb jo test aad lahf mov pop jns sub imul xor push stc fs push cmp pop or aaa test mov imul mov or or (bad) stos outsl lods adc ret ds mov dec jb pop inc push cmpsb pop jne lods mov cmp and dec out xchg sti loop jle jle outsb jmp pop (bad) cmp sub pop or sbb imul nop in aas mov push iret outsb int stc mov inc loop jg enter rclb inc clc sarb test ja push push dec and add add push add push push inc adc dec stos dec data16 adc jo sbb pusha pop mov push jecxz jb inc xor out (bad) push imul (bad) (bad) fsubrs shll xor adc movsl imull jge sub push add (bad) fsubrs push xchg xchg add push dec inc push cld pop popa loope inc mov mov sbb out ds mov jno mov loop popa sbb sbb lea or in out int3 or ds jae adc inc sar inc or pushf call sbb mov mov in add clc nop (bad) in test mov sbb repnz pop mov jnp push mov (bad) cmpsb xor ljmp sbb hlt enter nop dec mov jnp fdiv fnstenv push mov (bad) mov pusha pop popa fimul stc jge dec dec jmp loope call pusha dec mov clc insl enter loop pusha dec ficomp insl notb jno cmp out jle lret loop sbb gs (bad) xor (bad) mov mov cmp rcl sub push push aas (bad) cmp mov daa mov stc xorl js stos jl nop aaa mov jp mov aad test pusha mov jmp dec (bad) nop ja loope test mov push js inc xchg push mov jno jmp sbb push push sbb lds mov adc mov (bad) lds inc mov (bad) idiv fldcw inc in mov daa xchg pop repz imul jne (bad) add pushf sbb mov dec jg aam fidiv mov fcompl jb ds cmc outsb movsb into mov adc jp lea (bad) mov push push out cld aam mov lret test sarb out test mov les pop loop xor and lret insl mov loopne jne jmp cltd jbe sub std dec and inc repnz loope mov jg lret dec cld jae and mov mov xor pop cmpsl test out pop push sub scas xor adc loope lock imul je mov add sarb cmp sub pusha outsb mov cmpb (bad) outsb fisttpll add xor xchg sub dec popf dec insb incl jbe sti fsts jns xor dec cld push mov jmp clc clc pushf pusha test pusha push jmp cmp push call cli jbe xchg cs inc int dec sub fidivl jle dec dec xchg stos push (bad) pusha or mov (bad) in adc mov push out jg roll shr xchg pop icebp cmp jne cmc sbb pop mov or dec mov xor std movsl sbb ss mov lahf frstor outsl daa aaa fildll call icebp cmp dec call xor rol out lea fmull stos cmp ss movsl inc push fisttpll jg or add add adc add addl sbb add adc add xor add jne add xor add jne add add xor add jne add xor add jne add add inc jne add or cmp add dec jne add or inc xor leave repz inc add mov inc jno roll inc and cmp (bad) into dec jecxz,pt lcall in push pop nop cld xchg test ljmp bound (bad) mov cwtl (bad) add push inc js subl fwait sub xchg out jl pop push cmpsb ss jmp dec daa xchg push or push or mov inc pop scas fwait sbb push inc inc dec imul add (bad) dec jecxz adc xlat popf push addr16 lret jns (bad) jbe and pop dec sbb std shrb jns addr16 jns stc add es mov (bad) int xchg cmp mov cld sbb add push ret and inc stos fdivp push add mov xchg fidivr (bad) ljmp dec mov mov mov call mov fisub enter sbb jns jmp ds mov cmc mov lret sbb stc int shr pop lcall test incl push rcll sti mov test iret xor pop mov dec inc jg stc xchg mov sarl loop sub popf lock pop pop clc or lret aam in push out mov pushl call lea je bt push pusha sub call push jmp push mov pusha pushl ret mov push inc cmc dec (bad) push dec jle ret push adc mov xchg ret mov call in xchg jecxz cli sbb popa test mov (bad) idivb jno xchg dec adc insl (bad) not sarb push jecxz sbb cld sbb xchg daa lock imul call fwait sub dec mov enter (bad) cmc mov stc dec lods movb cmp sub xor jl std mov mov add inc cli push testb (bad) inc das out das xlat and clc xchg and lods pop out mov loopne repnz cmc sahf test addr16 jecxz mov pushf mov pusha pushf lea jmp mov push inc ficom add xor jns dec or stos outsl jg mov adc dec std cmp popa ja gs lret cmp mov or pop fisub fcompl sub pop int rolb int js daa out dec dec ja outsb xchg jb popf xlat mov adc xchg aad jae add or pushl push dec sbb es mov add addr16 rcrb in div dec clc js iret mov sbb ret mov inc sahf stos out out data16 jo rcrl push ds ret mov push sbb int aam (bad) lea mov pushf movb pushl ret mov mov stos push call sbb pusha pushf movzbw lea pop movsbw mov pushf jmp add jmp clc rol pusha inc push cmc shl cmc test clc bt add test stc stc cmc sub jmp pusha pushf jmp xor mov sub inc insb pop out xchg jecxz test xor inc sub (bad) xchg movl dec arpl ss mov cmpsb xor lcall pop rcrb pushw fnop in test iret outsb pushl push mov jp push daa jle or pop fs cmpsl loope push lods adc popf pop (bad) adc sahf dec jae or pop mov cltd cmp dec cld adc (bad) push inc (bad) inc jecxz dec and jle mov test dec bound nop cld (bad) in sbb (bad) mov mov dec add inc jmp push cmp add xchg shr pop cli lcall and mov and push stos movb mov pushl pushl lea jmp pushf call lea jne pushf mov movzbw pop bsf mov pushf btr bsr or sub bswap bt mov pop mov neg movzbw mov add call call test shl cmp add push lea call mov pushf push lea jmp sub sete call mov fmull xor inc sbb insb mov or dec inc and stos dec adc push mov stc std movsb les ja xchg hlt push movsb adc mov mov lock cld push or in jne xor out push push sub frstor nop add fwait ds fdivrs xor dec and dec add mov daa rolb imul cmp scas jle jge or or out adc pop dec iret xchg fdivs lret adc std pop (bad) sbb lods fstpt fisttpl add fs sbb enter add pushf lea jmp add inc gs imul outsl outsb dec outsb outsw push imul sbb xor dec adc outsb mov das pop aaa iret scas add mov (bad) mov sub or push popf xchg lcall ret inc add push fimul mov dec jno xor cmp pop mov pop arpl pop pop mov adc gs les in sbb insb mov mov cmpsl xchg outsl inc loop out dec into xchg fldenv into mov fmuls dec es mov in flds pusha mov test or out bound cmovo dec adc cmpl dec mov (bad) iret inc imul add ljmp fistpll pop addr16 or inc call add fimull ret dec mov push jbe aas mov dec xchg cmp cmp dec add pushf dec inc jae cld sub fwait add push mov jbe into (bad) cmc cmp shrl and add jmp adc xor data16 pop xorps xor dec std insb into sbb inc mov mov jne call or cmp xlat (bad) push or inc fbstp call jbe adc mov mov aaa xchg inc scas data16 mov sub ficompl ja clc adc ja inc aaa push inc push sbb fadd push or int3 inc int3 adc (bad) xor mov push outsb fsubl pop (bad) jp mov dec aam xor popa mov lret xor push add jno imul outsl lock addl inc test push jne mov add push mov movsl lahf pop pop pop or adc jecxz test push stos ficompl xchg cmp push shlb inc hlt and or mov cmc push in add mov repz sbb mov adc ret stos loop insb (bad) mov pusha push lea jmp shld or shr mov clc shl jmp push lea pushf movb movw movb lea jmp bswap stc adc pusha mov pusha and mov jmp shll movsl xor inc cli xchg jns popa mov push ret sub test mov pop (bad) dec mov mov (bad) pop fild cmp aas xchg lea test lret fwait sbb and in mov lock cmp aas push jecxz in les push mov sahf imul dec mov cs stos mulb fnstcw xor push or sub mov lods in mov out mov pop lods jns jbe lock dec stc sub (bad) push or movsb out (bad) ljmp lret pop push mov movl pushf inc push pusha bt pushf rol stc call je pushf lea call shl pushf movb mov cmp jmp sbb (bad) push xor inc or bound inc mov in mov in fisttpl jp in sbb jle xor loopne ds add inc scas ss and mov (bad) xor pop add popf xchg pushl pop sbb mov loope adc push int cwtl jb (bad) cld stc xchg insb enter outsl daa and inc dec hlt cmpsl call repz mov jg adc sub mov xchg jle or andl mov add insl test add mov mov jmp mov push lea ja pusha pusha lea je push lea pusha pushf pushf jmp mov mov movb stos pusha pushf lea jmp mov mov arpl push dec into or cwtl les clc nop jbe insb mov xchg mov dec pop xor inc in fwait adc push mov jge cmp fistpll lret lahf pop cmp repz xchg clc das sbb inc aam loope ret or movsb cwtl push aam xor inc lds (bad) and mov dec icebp mov add pop mov out mov push xchg sarl cwtl incl setge sub stos add aas jae test scas int movsb jl xor inc cmp jo dec mov sbb inc cmpsb and mov cmp fcmove je in adc dec in xchg ficoml ret out cmp sbb movsl sahf pop xor fnstsw xchg push js or mov mov sub jbe out push mov mov push repz or sahf lods or sbb (bad) pop popf frstor addr16 and push sbb or sbb mov inc test jp or fmuls test mov mov and (bad) call push pushl popl clc cmp call add inc gs outsb jo je je je add inc xchg cmp inc int3 aaa xor clc sub movsb int3 mov imul fcomps add daa mov (bad) test fnsave fstpl jno stos push call fisub imul sbb mov loope rcrl and push xchg test fwait cmp sub cmpsl ja pusha dec xacquire xor aas xor sub lret or jne mov loop je mov std icebp and jb push lret sar lods dec xchg push repnz movsb repz or sbb and arpl push lds jmp movsl pushf push lea jne bswap dec push shld mov push add sub btc shld push lea sub jge cmp sub cmp pusha pushl popl pusha cmp push push push movb lea ja pusha sub bsr shrd bsr bswap sub add movzbw ror stc mov ror cmc cmp mov pusha bt pushf repnz pushl movb pushf lea jne jmp (bad) fxch jecxz cmp sub sbb and mov fiadd popa dec and add cmpl in sbb lret mov cmp imul stc loop daa movsl and imul test out sti cmp adc push pop jecxz pusha adc xchg add movsb pop cmpb and mov out cmp stos dec xor dec jo popa scas addr16 mov xor lock out adc sub xor mov jecxz adc int3 or pop cmp rorb xchg cltd int3 dec mov mov (bad) mov rcll in into pop adc scas sub les in pop aad dec rolb movsl in mov mov enter aad and aad add or xor (bad) sbb push es cwtl int cs xchg insl jae jb xor out jns loope pop outsl repnz repz fiadd mov adc add in xor arpl loopne fildll jns (bad) mov loope outsl push pusha das cmp pop xor dec and (bad) outsb xor mov ja jb into sbb fs pushf (bad) les lock xlat repz into dec pusha mov in (bad) iret add (bad) dec jecxz lret push pop adc imul mov cmpl lret iret out xchg fucomip inc in sub push sub mov xor xor cmpsl clc sbb into ficompl rsm fldt dec xchg mov aaa int cmpl adc mov or push jo outsl int cmp aam push adc xor mov rorl movsl xor insl jp aad (bad) pusha cwtl in pop mov xor adc adc jmp cli mov sbb aad dec pop lods pop sub sub push push fs rcl mov mov daa sbb shl jbe mov mov jle mov cwtl xor push dec inc ret pop rcrb mov scas cld ja add and push add test push ja jne jns movsb and fildll adc dec inc pop jmp sbb cmp outsl mov fimull fisttp mov nop mov xchg test cmp push fs mov jne add jns adc shr aam xchg push or mov (bad) sub sbb sub flds dec bound (bad) dec (bad) jp cmpsl mov pop iret jle add cmp xlat and jcxz jmp js mov adc (bad) lcall loop (bad) xchg mov cmp mov add (bad) jbe push mov mov sbb pop insb jle (bad) adc jne mov ret mov xchg adc sbb insl aas xchg jae jno sbb test sbb inc pusha dec xchg push mov add jl sbb sbb mov fs lcall insb xchg mov je pop xchg js fidivr dec (bad) cmp inc and fdivrl insb ds cmp mov xchg cmpsb in fbld pop aad imul fiaddl movsl fstp (bad) mov ret dec and or nop or cmp add stos push cmp repz mov dec das add insb fld nop xor cmp jne jge (bad) mov loopne fwait pop les xlat or pop cmp jp xchg sub lock mov cmp push ljmp int xchg imul push jle sub or cmc rcll loopne js push jne fstp push and ss and (bad) iret sub out push and push imul out test jb pop movsl (bad) xor outsb (bad) inc negb stos lret xor fbstp xor div push mov mov fcmovb test jp mov dec gs pop or loopne mov adc jle pop pop jae movsb push lahf fimull aaa xchg jbe test jnp dec (bad) hlt insb push pop xor pop jmp or sbbl rcrl stos mov rolb xchg int3 mov jnp mov jmp push cli adc movsb inc jne (bad) push and mov xchg and mov roll movsl fild inc (bad) lds (bad) cmp jp or mov xchg jg int fild inc jg daa ljmp test mov loop ret sub dec pop sub movsl les inc pop fisub inc or loopne push pushl push pop xchg jbe rolb ds lahf mov test xchg mov ret jbe cmp les mov ficoml xor push adc xor mov jne lea sub addr16 jp cmp xchg mov push and hlt outsb std sarl sbb xchg pop fbstp dec cmpsb in or push test rorl jp push in adc and add stc pusha lret sahf insl (bad) arpl add or fnstsw popf adc test sbb xor fildl mov mulb test sahf and xlat ret in mov popl xchg divb test js dec std inc mov push adc xor xchg rcll inc cvttps2pi mov sti test push movsb mov inc call addb daa (bad) stos negb mov dec sbb shr push push sbb pop push push out ds pop jp xchg jbe scas ss loopne imul jl daa mov inc hlt inc in and cld jns,pt mov mov cld mov sub fwait and test cmp sub lods jl rcrl add inc xchg xor pop jecxz lret cli aam (bad) sbb jge imul incl jne push cmp inc add inc pop mov js clc adc (bad) hlt (bad) jle mov pop sbb int inc dec xor pop cmp imul sti fimul push pop cwtl jne incb mov sbb cwtl (bad) mov sbb xchg stos sar ljmp lock out add mov fildll ret int3 sbb cmpsb imul rol cmp in adc xchg addr16 nop inc insl or loopne pop leave ja jno das loopne push leave out mov push push xchg (bad) outsl fldl mov cld cli sahf sbb xor dec inc in insb in xchg sbb add inc aaa mov mov sbb jle inc adc rcrl lock pop fwait inc inc push add aaa cmp leave cmp inc mov pop jge pushf (bad) mov (bad) mov sbb in insl bound inc inc cmp ret nop cltd jo push out sbb aam rcl ljmp adc out or add adc or shrb rcrb pop jbe mov mov pop std aam out mov sar xchg movl dec cs and jne xchg mov add xchg mov movsl xor xchg mov repnz cmp pop sub push pushf xchg lds nop repz test mov loopne mov daa xchg (bad) lea aam cmp cmp movsl mov test inc stos ret mov lock lods push jbe loope push mov and rolb paddusb mov xor jge jns or in out mov cs push adcb aaa roll add and daa xor mov dec jg sbb shlb cmp mov je sbbl mov pop orb rcrb xor ret push (bad) jo xor jae subb mov dec scas pop xchg (bad) mov mov setno pusha leave stos into adc mov enter push fildl sbb inc add jmp std nop fmuls aaa rcl mov push xor data16 iret ret ds mov aas dec sub or inc rcrb loop jle mov add (bad) icebp int3 fidivrl dec repnz jnp scas mov ss and adcb sti movsb rcl add mov imul mov lods loopne xor push xchg insl aas sbbl mov jae pop clc ja (bad) xchg push pop push ja jb xchg and sub mov push mov cld outsl jnp in adc jbe rcrb ret mov xchg mov movsl add push mov push jb divb fdivrs fimull dec (bad) sub std push push sub dec cwtl cmp test repz into or cs dec push sub mov mov gs xor in sub inc clc jge (bad) mov in dec fwait lcall push pop pop hlt sub (bad) push and les cmp inc dec jmp mov sahf (bad) mov jg outsl adc gs mov mov push add and loope sbb aam je int dec into push roll xor scas sbb mov call adc push stc aas add ficompl push sti (bad) push sbb push jmp add ja fildll mov imul sub pop mov mov push cmp scas insl xor es subl dec outsl gs pop ret and repnz insb lock mov sbb inc or or jns stc lods dec push in (bad) movsl pushf negl xorl lock dec ss out jbe sub xchg xchg sub pop sub in and jg mov repz pusha jae cltd shrl and and sub pop lds je push cmp (bad) cmpsb icebp cmp cmp scas fs mov jle mov mov adc pop cli lret xchg pop jo lock out push cmp mov cmp cmc jnp pop vmovaps mov push jns add xchg dec leave push dec insb lods int mov pop or xchg sbb out mov mov or mov adc sbb xor ds in stc cmpsb sbb ss mov loope xchg xchg adc lock cli jecxz aam jmp mov cmp int3 pop mov cli je es int3 pop fsub and mov jae ja push scas push pop lods xor sub outsb lahf sub adc into push pop inc pop mov lea lahf (bad) mov add adc lcall dec push xchg das lret out cmp stc pop xchg lock lods mov mov repz test jle ss lods and (bad) aaa inc or je cs jg pcmpgtb out sbb mov xlat inc daa sahf lret inc jae js xchg mov pop jns mov mov mov cs shlb imul cmp inc sub (bad) cmpsb iret arpl sub cmp and enter mov push sbb scas test es push mov out mov lods stc pop les cli scas jnp dec xchg frstor ja mov clc xchg rclb mov sub imul mov sbb pop xchg pop fistp pop inc mov mov outsb (bad) mov sbb add or lea adc insb pop mov inc (bad) mov cmp lahf pop sbb lea ss outsl mov mov cs dec mov pop pop inc add xchg add push sti mov in (bad) je and inc dec out mov in movsl cmp repnz faddl repz rorb inc fwait (bad) mov cmpsb data16 cwtl loopne sub add xlat and add cmpsb stc clc push mov xor mov sahf pop cmpsl xchg cmp sub aas mov inc jle test lock sbb jbe xor (bad) fs or cmp lret jb cltd jg daa fist mov ret and dec pop rolb xlat enter cmp aad ja adc cmpsl jmp jbe mov inc aas bound sub inc jns pop adc mov and int3 push dec inc mov cmpsb sahf push les adc gs push sti in xchg aam repz clc loopne orb push ljmp popf clc pop mov mov xchg jne mov jge aas lret sti or xlat out stc pushf ss sti js fdivrl iret imul out pop mov jl and sbb inc xchg mov inc jg pop test adc pop ss dec push rcrb lods sti cmpb bound daa in mov in mov mov pop adc mov es dec dec iret cwtl mov (bad) into cmp adc adc scas or test mov pop jno insb leave adc out hlt fmull sarl lock shr mov adc dec and inc pop cwtl dec popf xor addr16 fs shrb sbb cs aam leave sti add mov inc int cmpl clc xchg and adc imul ja shll inc lea sub lret fwait pop lds cmpsb insb outsl push ror inc or push les lret cmc xchg movsl xor inc movq daa or mov ret daa pop int adc popa jecxz rcll push (bad) pop push insb enter es clc and xor movsl stc (bad) into in jg cli pop and add sbb movsb mov mov addr16 shlb int and push cli insb scas jp jge jae mov pop outsl inc popf out mulb jb popa cltd cmpsb call push cmp inc pop dec in loop rcrb repnz mov in xchg clc hlt dec cmp mov fistpll orb jg mov pushf lods xchg loope scas (bad) (bad) mov bound orl inc and cmp (bad) shlb add add xor (bad) dec cmpsb xor pop mov inc mov pop cmpl sub jl (bad) (bad) test movsb add pop inc xor cmc mov fcoms loope xor jg hlt mov cmp int3 ja icebp and and ret popf pop pushf test pop dec out xchg inc add inc and mov popa push inc xor leave cmp cltd mov sysenter test push fdivp pusha adc mov in cltd pop sti push or (bad) sbb mov mov (bad) xchg cmp (bad) dec (bad) mov dec cmp push mov movsb int3 cmc add testl push adc push loop pop or mov sub dec sbb shrb stos insl (bad) inc mov jg push mov (bad) jo inc mov inc pushf sub (bad) mov xor in mov adc insl lret lods loop mov cwtl addr16 adc sub sub jle repnz sub sub dec fimul push sub daa xchg mov mov imul xor fdivrs pop cmpsb inc mov int (bad) mov sahf aam or jo mov push cli mov mov push ljmp popf adc mov loopne lods push jmp into jle cs dec adcl (bad) and jg (bad) push pushf dec shl xor sbb adc push out push mov xor jge or es or pop add sub test pop ja repz mov daa shlb cmpsl cli sub repz push mov jo cmc xchg movsl fstps inc or movsb andb xor inc ss loop or outsl int3 sbb xor ljmp lret sar ja es lahf inc rcl adc push mov cwtl and shlb loop (bad) imul pop stos cld mov repnz in (bad) fisttpll lods push xchg pop xchg push lock sbb cmc (bad) xchg ljmp in xchg scas sti push jmp sbb xchg bound jecxz jbe pop jbe lret inc mov test push push insl outsb xorl test lock push inc add xor adc js in add (bad) lret addr16 lcall in jg jle xchg aad mov xlat jo js xchg repz out push pop mov cmp add push lds mov aaa imul inc dec nop cmpsl cli xor cmp cmp xor mov cld or add loope ret call push imul inc xor lahf xor loope xchg lret test pop pop dec ljmp sbb xchg adc cmp popf adc sahf in lock xlat sbb das xchg adc pop iret dec rol mov sub stos orb vmovupd xchg ja ljmp imull mov outsl xor mov adc pop hlt push (bad) dec pop push fmul sbb cli aad into or adc sub lret ljmp and pop cmpsl jbe fldt and out stos push (bad) xor cmp dec nop (bad) jge adc clc incl push xchg push mov adc lods inc xchg or jae (bad) pop arpl adc in jmp xor push insl pop ret or jns cs incl push pushf inc repz sbb xlat mov scas lock idiv jae stos push mov ljmp aad sarb (bad) mov adc adc push dec out cli mov out and into mov add cli je loope shrb movsb lods les loopne fcomip and (bad) cmp ja push pop hlt adc testl test pop xor mov pop sbb sti pop xlat insl ljmp test add add sbb cmpsl cmp mov test test dec loopne adc mov ljmp pop and std mov pop into inc mov mov cmc add xchg outsl pop fmul cmc and xlat in mov xchg ret ljmp addr16 jnp fimull fcmovb clc scas pop daa mov xchg gs xchg bound xlat cmp movb bound fcmovnu leave cli int fimull jb push repnz jbe ret add int shll imulb outsl inc or xchg test jb aas dec inc mov push nop push aaa rclb (bad) insl fldcw mov xchg sbb repnz popf nop nop xchg stos pop cmpsb pop mov test test arpl in scas notb rolb cli orb testb ret int mov sbb jo mov push (bad) mov mov fyl2xp1 lea aas push icebp les fs cmp pusha nop jle adc pusha (bad) je mov les mov inc ds dec shrl mov fimul out pop jne loope sub dec mov sbb rclb dec (bad) xlat lcall mov vpmacssdd test mov jae mov push sbb xchg sbb dec sti push in push lds (bad) je dec jb inc test mov push test pop cld addr16 lret movsl stos xchg inc dec mov mov test arpl sahf call (bad) (bad) pushf xor negl scas out mov test divl mov jge xchg es pop test adc int into cwtl push popf enter pushf mov ja cld and push into repnz cld call (bad) leave in xchg sbb cmpsb push mov mov jge mov out test sub mov dec rorl imul add and pop sbb ja imul repnz int imul or jp and clc repz arpl std mov stos adc outsb popf push adc shr mov iret lods outsb lods and rcll and and test aas out mov pop cmpsl insl mov pop dec mov lret inc add push xor fwait popa mov mov mov push sbb and insb adc pop push cmp xor test lcall pop movsl scas lret sahf das shrb add jge push dec sub sbb pop xchg scas lds or jecxz icebp and sbb ds push insl mov mov fiaddl jmp gs cmpsl jno or inc mov (bad) mov nop test mov clc or jp rol sbb iret into ja sub mov dec jns (bad) pushf sbb lea ficom out lods jno xchg xchg fiadd ljmp call dec fcmovb push mov hlt sarl add cmp add push dec outsb xlat sub mov sbbb rcrb sub mov fcomps popf repz leave xchg mov push rorl sub pop daa inc (bad) (bad) mov fisub add ja cltd dec fdivl xchg int sub addl and pop pusha mov mov clc push xor mov popa gs adc bound stos dec adc cmpl repz jbe outsl pop mov adc pop loop and int popa sub mov adc xor jbe out stos insb test int3 mov or dec outsl inc repnz rorb fildl add push jp sbb loopne inc sbb xor (bad) std rcrb sbb jmp jecxz mov sbb test dec fnop hlt in adcb and xchg or sub (bad) (bad) leave in push mov dec mov loop iret sarb push imull sbb andb add mov popf inc adc mov lahf ja mov (bad) pop icebp mov jecxz mov je pushf jp lea repnz clc sub mov inc insb rcl xor (bad) dec jmp aad add jne inc add pusha aad push mov stos shl fstps stos pop out jb std and inc or inc push es mov movsl jmp xchg xorl subl inc (bad) sbb mov fmulp popf adc xlat popf pop sub mov test loop add xor jns sbb sarl std xlat xor movsb sub imul in mov sbb push jl sub mov sbb insb mov jns pop out adc ret out add jb repnz xchg outsl and cmpsl lcall push loop push movsl lds jge hlt pop out addl inc or mov inc dec sar repz push pushf les daa (bad) test test inc call aad cmpsb loopne ror lcall mov push pop jnp dec ss push cs pop cmpsb pop cld sbb sub lea cltd (bad) push lcall repnz sbb sbb repz sbb imull jne jo mov xchg add xor sbb xchg push xchg push mov ret dec jns add rorl jns sub xchg mov insl fld sub jne cmp mov adc int xchg xlat inc push sbb fnstcw jecxz inc test into lret (bad) insl outsb scas dec lds (bad) icebp dec pop xchg adc fimul jne xchg xor rorl or pushf dec adc and outsl adc cli ficompl cmpsl adc lea mov xor iret cmp mov push jecxz cmp cmp imul repnz pop (bad) xor push es pop mov add icebp xchg stos out inc out cmp ret cmp movsl add stos dec (bad) cmp xchg push sbb sahf dec lret lods cmp inc in hlt clc popf outsb pop sbb in in out adc and add push out out out dec sub mov mov sbb push sbb in push mov nop inc add fcoms sbb cltd sbb jae cmp out arpl jge xchg jno (bad) mov xlat and fstpt in pop jno mov pop push mov mov xchg lcall aaa inc or mov add in in xchg xor fldl cmp xchg repz scas les scas mov sbb push sbb push sbb mov or (bad) loopne ret mov xchg sbb jnp in push cvtdq2ps add fbstp xor mov sbb ds jl push mov sbb mov shld lea xor in pop fsubl jp lcall rcrb (bad) lock (bad) movsl push push (bad) lock stos xor xchg loope mov dec ret or push jo pop pop jae,pn lret mov sub fmull mov cmp mov xchg xor cmp subl jne sti cmp cmpsl sub push outsb jbe dec iret push pusha add out loop lret or xchg or cmp and inc scas popf pop das mov (bad) sbb (bad) mov jo cmpsb xor sub mov push fstpt push push int3 sbb (bad) sub xchg fsts repnz cmc sbb sahf dec cmp dec or or add mov adc rorl in test mov scas ja cmp scas jle or lock jmp (bad) lods fcomip jg inc fstl jmp dec jmp mov adc or popf jo xchg push aad lea dec (bad) sbb or mov inc cmp andl addr16 adc mov sbb or xlat add loope out xor data16 inc clc imul dec mov lret dec shlb clc sbb fs cmpsb jno aam or inc icebp data16 out sahf loopne loopne fld jmp and mov repnz sub sub es pop mov mov leave or adc lahf pop jo lds sub or stos fildll repnz stc aaa pop sub or push (bad) push jge fmuls xor call stos pushf add sarb mov pop dec jno (bad) mov jb pushf shrb mov lock lret ja xchg test dec loope pop sbb shl sub cmpsl mov scas mov dec lods clc push add mov mov pop mov inc loop shrl mov test inc jno push mov xchg icebp add (bad) add adc shrl mov push add push dec add cmp inc or dec cmp dec test push aad pop mov (bad) xchg psrad fcompl gs push aad adc add jno jge arpl pusha pop hlt out ds out push dec cmpl out rclb push or out out mov mov cmp cwtl add ljmp push test push std mov repz mov hlt lret sbb add arpl cwtl lcall stc loope dec pop push pop jl mov mov clc imul jae mov xor inc adc add cmp xchg add cmp cmc dec fnstsw inc pop mov cmp cmp divl outsb pop mov jo jno cltd push (bad) jo lds aaa pop pushf pop es (bad) lret repz fldt repz cwtl jp lret fmulp cmc pop pusha (bad) int iret mov out adc fcmovnbe int3 jne shrb push xor mov inc sbb xlat cmpsl in xchg stos xchg jne mov mov push in jo gs pop fbstp and call lods int3 stc (bad) jne jbe,pt out inc jecxz mull (bad) je das mov stos dec into les ret and push cmp inc mov ja sbb ret sub sbb add cmp xor cltd dec stos insb push dec lret jno add jg or xchg pop mov loop sbb cmp inc jns aad or push div jno mov (bad) jl xchg push jg sahf ret ret pop arpl ficompl subb bnd add cmp pushl fistl and xchg adc or mov fidivr mov or push dec xor inc cmp inc pop mov aas xchg hlt out das mov mov loopne xchg popf xchg sub mov or arpl push test mov icebp test sahf int (bad) rcr ja loope fwait out or xchg add lock mov add (bad) pop pop jmp mov aam loope mov rcrb push cmpl pusha mov popl mov in inc sub push pop and mull bnd dec pop push push daa or test add mov outsb out jne jb sti dec imul gs inc cli pop jnp mov push jb idiv cs cli ret insb orl pop popf push inc dec cmp mov sub and out bound sub in and cli (bad) je cmpsb std dec mov movsb or jnp push xor pop (bad) xor xchg in adc xchg popa or inc lods pop daa (bad) push or jp pop inc ret jg mov mov cwtl inc clc inc push mov mov xor add pop addr16 or sub sub pushf mov stc push jne jae jmp data16 loope rcrl sub das enter std jns add lcall (bad) in rclb mov and add pop pop call insl xchg fstps test movsl cmp repnz out outsb insb jmp inc (bad) iret pop sti lret cmp imul jae or int rcrb rcrb jno and mov bound lahf pushl and ret mov aad push pop js add xor sbb adc sbb push push sbb lds sahf shll das add ret jmp aaa in cld sbb mov mov mov inc or aam push cmpsb pop vcvtdq2pd dec lds movsb cmc cmp cli sbb js jmp push adc andl inc xchg pop jecxz push popa stos add out or fadds scas stos add jnp add sar (bad) aaa mov aam into fsts cmp add imulb sarb mov or (bad) repz cmp adc push push jmp inc daa sub cmp dec gs test add sahf clc js sbb cs add lods xchg xchg fidivrl sub pop fisubrl addr16 out jmp (bad) xchg gs outsb inc lods jle mov push sub test inc es or test pushf adc inc ret mov xor arpl inc mov sbb (bad) mov mov dec aam scas shrl daa inc push gs cmpsb add aad and movzbl lret and aam cltd lcall dec sbb pop adc je enter push push push pop sub xchg addl mov and test xchg or dec push stc roll in scas xchg pop jbe scas xor pop inc loope mov pop sub mov sub lahf pop fnstcw insl mov cs xchg push data16 push lahf (bad) loop,pt ljmp jae std add mov pop xchg sub xchg sbb mov std jbe es sar mov rcr add xchg lahf xor jb clc jmp pop int ss jbe test repz jl int3 sbb lods cmpsl pop mov and mov sbb fnstenv cmp cwtl out mov xor je sbb mov nop mov lds (bad) out mov adcl pop cwtl add call jmp or out cmp inc (bad) pop push dec mov dec daa inc addr16 pop cmp jge imul in xchg stc aad fs dec call lret xor xchg scas lret (bad) addl jecxz pop faddl or clc mov and and pop xchg pop jne in push pop clc add iret dec jmp rcrb mov inc xor lds cmc pop fidivl iret or notb (bad) je (bad) cmp test mov push test lock das xor adc into out mov outsb jg (bad) cwtl pop or test mov fisubr cmp fwait movb jb adc movsl add lret jg sbb out fs out sbb jno xchg and mov fisttpll xor mov xchg sahf push mov pop sbb sub sbb in cmp fnsave es lds push pop mov scas and sbb loope es aad clc cs and xlat inc clc and cmp gs xor (bad) icebp sbb int3 and add adc jae enter jne aad inc add test add and jp,pt push mov sub jns xor arpl leave in adc cmp xor jg adc shll fdivp popl sub (bad) xchg dec mov push stos xchg daa imul inc cmp push ja pop outsl (bad) out sbb ds fs (bad) or mov mov mov icebp mov adc xchg mov movsl bound mov nop pop adc test ss popf add cld or aad movsb ds cmp sub lods ficoml in mov and cmp or mov add lahf sti push mov ret lret push in (bad) jle sbb (bad) jmp sub dec mov pop sbb popf push adc ja ficomp frstor cltd push sahf (bad) jp repz mov data16 cwtl loop push in sbb jp out or lcall in sub xor arpl das stc test dec jp enter insl xor arpl bound in sub mov sub in and daa pop les pop fwait enter inc xor incb int outsl ret xor int3 mov les ljmp inc pop inc lahf int xor (bad) or into fcoml repz dec imull sbb outsb cmp movsl pop aaa push daa fsts add or xchg adc arpl ss lret out pop lret mov xchg jno sti jge cmp fdivs ja loopne cmp push mov adc aad mov sahf repz popa jmp rcrb int3 push inc pop inc pop mov outsl push f2xm1 xchg inc rep mov pop insl sbb (bad) outsb mov add sti stos xor dec stos and add cmp inc inc adc sub loopnew pop into push pop fucompp shl xor je fistp pop outsb scas mov push dec pop xchg add out aas pop or dec push pop daa cmpsl pusha test inc xor jae fnsave push sub jb hlt cmp in fadds jmp fisttp (bad) push xor mov mov mov mov or lds or je inc mov xor dec adc adc pop mov into cmp dec mov mov cmp mov inc lahf cmpsb sub in xchg fwait orb cs cmpsl adc or rcrb orl sub inc es inc loop push jmp ret adc mull jne ss in and cmc add mov mov stos test repz (bad) push scas lret inc inc testl lock ja loopne fwait enter jbe (bad) nop xchg jns lods push sbb xor out out fstpl or test and cli loopne mov loop (bad) push xchg (bad) icebp push loope adc js sbb popa xor jmp leave aas adc jle xor push mov dec jmp aad (bad) std lcall jmp adc push pop int inc insb sahf jmp lret sub sub cltd jp ja xchg xor rcll xor adc das jecxz outsl dec cmc popl cmc and xchg in pop aad and mov daa (bad) jne ret hlt lea lods pop mov cli pushf and xor movsb nop jne sub push (bad) pop (bad) std sub das pop out outsb in shr cld jb mov out mov mov xchg adc sbb mov clc and outsb aaa test (bad) (bad) adc nop mov jl imul push mov dec cltd pop imul mov loop mov push push stos cmpsl movsb jne mov mov shll push push loope push loope cmp insl sarl lahf rcll dec mov inc cmpsl push shr pushf dec push sbbl cmp out ret cmp icebp pop vaddss loopne sub mov pop mov addr16 push pop jno or sub arpl xor mov dec shr (bad) inc mov pusha aas dec push popf jnp mov popa xlat inc mov loopne and in es xchg movsb or jb insb lock sub dec daa icebp mov or mov jle add adc int inc lret movsb (bad) arpl xchg lods jg (bad) dec jp or imul lcall int3 jnp mov adc mov add push xchg lahf out arpl ret mov test stos push lock and sbb mov inc inc xchg in mov xchg fdivp jp enter shrl push movsb out stos notb ja push (bad) lahf out fs call jno xchg dec bound inc jmp dec jle in subl sarl add cmp rcrb nop pop ror pop dec inc cmp sub lock jno or sub xor jbe stc stc inc fcompl mov jne (bad) bswap das ficomp mov sub xor adc dec scas lcall adc dec sbb scas pusha adc daa sub mov dec cmp and pop xchg imul push inc jae add adc mov pop imul inc cld or scas sbb xchg mov xchg sbb scas rcrl js movsb std or test (bad) arpl test jl cmpsb mov pusha popa daa inc cli cmp stc jne scas ljmp insb mov sbb int cmp fidivr and (bad) testb sub cs decb add pop lods leave iret pop ret pop outsb dec imul and call push fdivs xor hlt jns hlt pop pop in sti fdivr or mov mov mov jp imul jno into cwtl loop push nop aam and mov xor xor inc pop mov push pushf divb popa xchg bound xchg (bad) pmaxub push pop fisttpl mov push adc in dec jecxz test int cmp and or pop je cmpb sahf mov xchg test pop xor adc movsb lds or sub fs cs je loopne popf (bad) mov shll lcall ljmp test call push stc xchg test lret lock stos push fnsave jmp stos lret out jp mov fwait out addr16 fbld inc mov sub xchg fwait dec aam mov jle sub imul inc enter adc fbstp add jge into push jne sub push jmp cwtl sub or mov cmpsl xlat mov fwait cwtl stos (bad) psrlq (bad) fldt and addr16 popf popa mov and xor push out or sub jmp push std adc push lods inc (bad) loope repz pop shlb aam xor aas sbb xlat dec inc adc xchg pop shlb scas call (bad) mov mov cwtl cmp mov xchg popa enter inc cmp iret arpl inc pop gs ss mov ficom xchg outsl cmpsl or mov add xor lret push dec mov jl mov inc pushf mov addl pop lret lret (bad) fs (bad) xchg popa cmp add ljmp jo in in ja mov in test cmp pop jae cld pop bound jmp jne out dec xlat or jg (bad) in mov mov cmpsb ret add loop les iret sub mov adc cmpsl pushf movsb popf jle pop scas (bad) jne (bad) lret pop stc fisubr xchg fidivr int jp add nop inc mov jns jle push lds pushf movsl mov shl inc xchg repz xor fstpl cld stos insb aam lods sbb cmp scas xchg xchg es pop mov adc imul mov das or and mov leave out jg out or jbe xchg das and xlat push add adc jo sub cs insb mov sub push les (bad) das or lods gs pop xor out or xchg fisubr mov add nop mov and push mov jno mov xchg loop mov cmp mov lret jnp cmp jnp cli sti out xchg add gs inc pop jmp ficom movsb mov aam inc lods repnz lret push cmpsb inc mov cmp jae inc ljmp adc stos sbb cli das vcmpss push hlt fwait shrl xchg jb insb dec int3 add test lret cmp sub int3 mov push das xchg outsl imull stos stos imul js sbb sbb push and ljmp test mov cmp insb (bad) in mov cld cmpsl rcrb sbb int3 jmp dec and lcall push sub lds jcxz (bad) dec mov cmpsl cmpsl xor inc jg mov stos ja in sbb or jb aas jnp jecxz loope enter xchg fimul sub jno scas or repz aad cmc sub dec xorb out fcom stc ds es sbb repnz dec dec or jmp jne,pt xchg icebp setl lcall fmull inc pushf cmpsl aad into cmp ret repz imul (bad) in sbb jl adc (bad) int xor in sbb jne bound cmp pushf sbb js mov add cli dec in mov (bad) mov bound dec lods scas das xchg adc (bad) dec decb or push lret inc xor in inc ljmp sub jmp in pop dec stos xor mov je nop leave cwtl (bad) sbb paddq or dec fucomip (bad) stc pop xchg add out pop jae in sbb jne out adc ljmp jmp stos sbb sbb in dec insb xchg pop add adc or lds mov inc nop xor pop ds loope in mov je jp out lock ficompl call sub out (bad) (bad) mov and mov adc repnz xchg mov pusha jg inc stos jmp dec add loope (bad) nop xor pop pop push cmpsl nop push cmp xorl sbb hlt cmpb hlt mov mov pop xor dec cli xlat ficom addr16 loope push xor mov daa lds and fisttpll push repnz (bad) fstpt fwait cmp pop in lods test dec dec (bad) lret sub or data16 jbe popf cmp jno add into aad (bad) mov sarb lret dec lods or les pop mov or push fdivrs and in call jae (bad) dec nop mov cmp lret add test push inc add montmul cmpsb (bad) in fwait (bad) pop adc hlt ret adc xor ss outsb mov add cmc xchg addr16 lea (bad) shll outsb mov rcll (bad) es rcrb aam jg xchg lea and lods xor sub inc push adc ss je faddl loopne pop add inc jle sub jbe lods lret sbb and cmpsb adc rcl leavew shll add mov mov orb lods lods test pop fldl fcomps push negb lret (bad) in lods pushf push mov mov jecxz xchg cli mov and and test cli xor loope jae add push out jl test mov sbb clc push mov mov mov mov add mov cmp mov xor sbb mov aas loope adc add aaa fstps out arpl (bad) loope pop pop loopne (bad) mov stc jl movsb push (bad) (bad) xchg push (bad) push cmc mov idivb jl mov lea aad out ja and sub xor es loope das or pop and repnz (bad) repz cvttps2pi xor popl jo and cmpl aam adc loope es nop pop je mov cmpsl fnsave sar insl repz sub clc fiadd pop fildl (bad) cmp adcb in mov inc push sub adc test jecxz pop cltd sub sub mov pop push and inc scas in jp jg cs sub iret mov (bad) sbb dec in outsb (bad) or les or jg xorl cmp je fisubr iret divb sbb int3 cmp jnp,pt mov test ds inc iret test adc pushf sbb call pushl mov out xchg jbe loop inc fwait mov cwtl scas sbb insl inc mov iret leave adc pop mov dec sbb mov sbb fidiv sub xor jle pop dec dec or lea sbb stos mov jl shr and insb (bad) mov mov movsl push sbb pop inc es xor cmp mov ljmp shl add pop add popa cmp adc dec sti mov in lods xor out fucomp inc cmpsb mov pop xor xchg mov xor ja das cmpsl rorl aas (bad) and mov push jl pop jg mov mov add out xchg lret data16 and sbb test cwtl and jle shl jmp jmp scas sarl add jmp cmc cmp stos push cld pop roll adc push scas pop push les mov adc cmpsl int3 pop inc push ja arpl (bad) dec push rcll stos (bad) or mov mov mov les sbb push into push sti add scas out inc ds idivl aaa outsb fldenv ljmp hlt mov sti mov xlat daa pushf fdiv jns mov enter pop (bad) cli pop add push int3 in addr16 std jo push out mov (bad) fisttpl lcall ja (bad) je pop dec aas sub (bad) mov test xchg shrb push jge insb push jp and fnstcw dec dec inc pcmpgtw and or ret adc pop push pop fmul xchg jne daa rcl mov in add fsts cmc cmp pop add dec cmp xchg xchg andl xchg ss scas mov in out inc sub mov jb fistp stos or xchg add outsb mov testl loopne or xor or or or push sbb push sub stos push inc mov aas stc lods pop mov push xor xchg repnz lea mov lea xchg mov xrelease mov sub add or out jmp mov pop push adc pop lahf lock mov ljmp stc sti ljmp rcll into adc adc pop jmp inc push pop int dec scas and push pop mov out xchg sub fisubl add inc xor ror mov cmc dec cmp mov ljmp mov dec pop mov ret or pop (bad) (bad) lcall mov pusha fsubrs or jge sub jnp jl mov add add cmpsb cs xchg pop cmp cs push xor lea add sub orb outsb inc and mov mov stos xchg xchg pop jmp mov fild stos negl enter mov lahf out sub inc pop scas shr int and inc adc fildl mov int3 xchg cmp test ljmp out jmp push jno pop imul nop nop push dec mov jns jne and movsb adc jmp out push stc cmp insb or jb flds pop fimul xchg pop and dec push pusha imul xchg imul enter or scas shrb ss fcomi insb dec and test std push out and adc fidivr mov add pop das add (bad) data16 fidivrl inc repnz pusha rcrl scas inc mov inc cmp stos imul add mov cmc stc out adc idivl sub jae movsl sub sbb (bad) in es adc jns inc test sub das jnp push mov clc ja in loopne stc add setg (bad) jecxz aad iret hlt pop cmpsl rorb cvttps2pi ret jbe,pt jno jmp cli sbb mov push fisubl sar and leave jns fwait dec shrb dec cmp je pop daa mov test nop push mov (bad) jl sub mov xchg mov xor pop jo das adc mov aam notl test pop cld repnz cmpsb mov sub call shrl js xor imul cmp or repnz sti cli jae fcoml jae shrl pop ret jb test js inc loopne adcl xchg jb mov dec jl push adc mov adc sysexit repnz jmp test in dec sub mov push xor rolb jmp pop add mov fadds jns das push stos dec xlat xchg cmp xor dec mov int3 out pop jl mov dec test ret cmpsb sub insl leave rclb jbe push inc jl arpl adc pop movsb ja mov andl in jne iret inc mov mov enter outsb xor pop test fcomps cmp pop sub adc xchg hlt outsl sbb push cmp (bad) popf lods jae mov mov bound inc clc int3 pop lods js (bad) pop sbb inc adc mov inc rolb inc jbe test xchg std cmpl sub xor and imul xlat andl and fnsave test call xchg imul sbb pop into in out call dec jle stos xor push das sbb gs test cmp addr16 repnz cwtl xchg inc nop jne lret jo (bad) lods scas pop sub cmp sbb and enter movsb xchg xchg pop pop movsl xor lods dec into xchg add jns ss gs mov cmpb push out cmp test sahf sub out ja sub dec addr16 ljmp stos ja pop jl add jecxz pslld repnz in repnz inc pop adc insb push mov sub sarl ds sub sub jb lret add sub mov sbb inc or dec jno sbb mov cltd outsb (bad) cmc mov lea push mov leave xor mov (bad) mov inc loope sbb out scas pop xchg imul aad lods (bad) lods (bad) sbb (bad) xlat or dec push dec dec icebp je xchg lret jg xor fsubr fistpll jb int jns xchg inc hlt and nop mov jno sbb dec lods pop std push pop push pushf leave pop inc ss (bad) daa push test jb jmp jne pop pop and mov out cmp push ja mov mov push nop adc push adc pop push add push call xchg push das (bad) push mov icebp lahf (bad) fcoml aad add int xor fbld pop je adc pop aad cs lea push pushf aas or adc rolb fnsave es pop mov cmp or push std or outsb adcb jb (bad) (bad) push and mov je sbb scas hlt add fs xchg xchg jne adc add or es lahf mov sub fldl or mov repz add aas das and ss enter adc adc jbe ds or les imul pop dec in (bad) data16 and cmc outsb into sbb cwtl add fbstp fcmovbe adc int je mov xchg jo or es fldcw mov and jmp test popa sub add std popa adc mov scas stos pop push test (bad) (bad) mov out add push mov pop mov inc fsubl sbb xor pop pop lcall in test stos cmc (bad) xor movsb mov dec jae sub mov mov push add js jmp mov cmp pop adc push mov out leave mov aam xchg push push imul cs (bad) mov xor cmpsb pop popf outsl xor rcrl dec js ss aas push mov push mov dec jae inc cmp or xchg push xchg test and adcl lods adc sti jae dec rcrb mov pop xchg fwait lods ja movsl mov sub mov jge aas dec rcrl jg push fadd xor ret scas xor inc mov pushf xor loop mov xor lret jp ret nop mov push or add mov jle dec jns or gs mov push push (bad) sub inc inc sub ljmp arpl or or mov add mov xor pushf sub xchg mov sbb movsb aad insl mov mov fwait inc fs xchg dec sub dec pop mov iret cmp fldenv rorl (bad) xor mov fs sbb mov shrb out sub fcomps push xchg (bad) in mov out fsubrs loop fcmove xchg xor sub out (bad) mov hlt repz popa xor stos cmp xchg jo mov stc into cmp pop fdivr arpl sbb or and cmp dec pop lods inc stos mov cmp icebp cmp push lods cmp xchg test sbb (bad) ja pop (bad) je sti scas pop push je dec push aad sbb cmp testl test pop (bad) sbb sahf sbb daa das out test push ljmp rclb push loope cmp fcomps push ret ja pushf insb mov mov adc lret push or cmp sbb (bad) fcoms jle jp adc dec into inc fisttp mov push mov icebp sub lea mov rorb mov ds inc aaa xor into xchg push rolb je xchg lds add lods sahf imul mov movsl lds xor dec sub int3 fwait sub ficompl cmp cmpsb and imul (bad) mov (bad) jl mov pop out (bad) jmp in dec mov sbb insb or xor jno in xor jno das out lods mov and neg add jns test pop xor (bad) cmp and mov add outsl out out repz inc sbb mov stos (bad) idiv sub mov lods popf mov loopew jecxz dec adc jb pop jle jnp jnp in cmp cld out aas mov xchg cmp mov push cli push leave jbe insb dec scas xchg xchg push adc pop idivb push and jp jbe push gs addl (bad) iret xchg stos (bad) in cmp out int jno dec mov jnp stc std cli fcoml ljmp jbe cmp out decl pusha mov jno mov cmp lahf cmpsl imul jo aaa loopne add sti (bad) mov mov repz lea imulb test xchg sub mov xchg addr16 loop sbb adc mov (bad) pop std xor (bad) and or (bad) dec lods xor sbb cmpsb int cli mov jmp scas jmp jae mov mov sar pop mov sbb test xor mov jmp es mov (bad) adc push out cwtl sbb divb sub pushf lret icebp enter ret add in xchg mov test (bad) ja nop push xchg sub aad jp fldt mov mov fs xchg sub sbb add mov xchg daa les inc test adc mov xchg test and sbb aam test out out inc mov aaa popa inc pushf jmp sahf loopne add into inc cmp mov orl rcr ret mov sysenter dec (bad) pusha incb leave add xchg pop aad pushf fwait imul pop xor or inc push mov bound and sbb mov mov mov ja repnz sbb (bad) notl push adc popa push cltd scas fcomi push lock dec jbe mov addr16 push pop dec or xor out bound pop fucomi ja mov mov (bad) call dec xlat aas jo divb aas cmp push pushf mov ja aam mov in pop pop (bad) cwtl pushf xchg dec mulb push into outsl cmp adc stc pop popf daa and mov out (bad) mov and jl cwtl aam and and xchg pop sahf shr mov stc into mov lret mov sub aad sub lahf mov mov roll xchg lret iret jnp or pop sub lahf ss (bad) dec xchg xorb icebp das shrl xchg (bad) enter addr16 push fistpl int movsl pop out mov and dec add xor lahf sbbl cmp push (bad) push mov imul test xchg shr mov mov lcall dec ret dec inc inc sub adcl popa icebp les js adc add sub lahf xchg loopne dec and leave imul notb neg js pop pop mov mov (bad) xor aas cmp xchg xchg arpl push xchg pop xchg ljmp or xchg clc fwait cmp fs jge int3 add or iret push add add mov add imul cwtl xchg scas mov sarl out cli xchg js mov mov out (bad) popa add mov and pop cmpsl or xchg push xor mov and mov inc cli das pop fmuls js mov add insb sub adc out pop mov and stos je push nop dec test mov iret js aam insl test int3 or cmp mov xlat pushf or ret xor in push jne pop and push inc ja push push hlt shr xchg inc push mov add adc enter loop jmp xchg sarl lret insl and out xchg gs dec xchg mov inc ficompl or dec gs or (bad) lds test insl popa push ds xchg push xchg fwait pop loopne (bad) push aam nop cwtl mov mov in jnp cli iret (bad) rcr or fidivrl cli ds mov or jg cmpsb test mov jbe icebp add dec into sti jl mov test pop adc push call jns int3 insl mov arpl lods fdivrs icebp cmp inc mov nop push out daa sub push dec add (bad) clc dec cmp add push push stos je mov cmp sbbl imul fwait loopne mov fs jmp leave fwait push leave (bad) and sub icebp lret fimul (bad) in pop dec sub mov pusha xor mov sbb sbb mov xor and ja xlat and rcl cmp jl adc ja cli lret jo jno jne cli es addr16 mov lahf jg stos sub sub ljmp adc aaa xchg mov dec cmc inc mov cmp rcrl std mov dec mov or sub loope insl hlt and imulb xchg insb and or jns sti int ds pop cmp pop mov xor add xchg adc popf bnd repnz pusha adcl push aad out popa (bad) in divb dec jae or sahf push sbb fcoml out insb cmp sahf cmp push sbb fcomi or ja test or xchg cltd adcl xchg int inc or fcomps cmc jecxz and sahf pusha int xchg test adc sbb fs data16 pop pop mov (bad) cmp hlt push imul lds push repnz push negl push icebp outsl out jns icebp enter pop push sbb lds pop fidivr cmp in repnz lret aaa mov iret or imul pop jno inc xor outsl mov or test pop push add in aam repnz mov movsl mov je push mov jg lds and test sbb enter pop (bad) jno and jns adc adc pop xor and outsb xchg pop xchg stos add divps movsb aaa mov xor paddusw mov dec rcrl iret add adc out sbb xchg xor or leave add lods test roll mov pop les mov fisubrl arpl gs dec jp add dec add lods mov jp push xor sub push xchg in pop and or les inc pop push faddl mov insl pop leave bound ljmp pusha mov xor pop fisubl in hlt sbb adc das test bound sti pop stos mov pop inc mov insl xor jecxz sahf sbb sbb scas mov fist cmpsb jl sti (bad) iret in push lods inc xor mov clc in in pop cmpsb fidiv (bad) cmp pop cmp rclb xchg scas hlt sbb jmp aad push rol ds jnp loope push sbb je popa (bad) lds (bad) out adc push into aam mov pop sbb mov ljmp mov or push push mov sbb sbb or lods or (bad) or mov ds sub cmc imul and jnp sbb (bad) xor mov xchg add pushl movsl cwtl insl mov mov push in sahf push cmp inc xchg add js out iret mov or inc pop les lcall mov and mov ja dec jae sub mov daa (bad) cld adc insl or int3 xchg mov (bad) enter insl aad xchg ret inc mov lods movsl lcall cld sahf xchg mov sub fisttpll adc cmp push xchg lret test mov mov subb cmp mov add lret clc jecxz cmpsl insb jmp flds jb xor int mov sti mov ja adc xchg cmp scas pop adc or cwtl add push mov push pop cmp imul ret push shl in (bad) aad addr16 mov clc mov out cwtl ljmp lods mov pop (bad) sbb mov (bad) jg in andb sub leave (bad) or ret stos mov mov fimul test mov mov add jb out sbb jno adc xchg pop sbb inc fiadd and inc nop adc jb or out jmp in mov mov pop fwait or gs dec cmp es xchg lret (bad) ret je mov out imul sub cmc xchg push jg (bad) xchg mov xor lret loopne dec ror adc mov out loop shrb mov xor call lret fild dec sbb imulb sub cmp cltd movsl cli add fildll or ja sub fidivrl sti xor mov call inc lock and mov stos add dec fcompl xlat int js push xor mov sub adc sbb mov lret cmp cmpsb mov xlat mov jae js add mov pusha iret jle (bad) iret sub icebp xchg jbe and sub push fcoml hlt cmp aad jmp cmpsl push jle (bad) jbe dec jne push xor xchg in ficoml in lret or xchg in adc pop sbb bound loopne loop cwtl mov imul rcrl pushf movsl jns mulb fchs cmp stc jge movsl movsl aas push lods mov xchg imul out repnz inc loop daa fistp aam divb (bad) cmp movsb jno mov xchg xlat (bad) mov lock sbb mov mov mov add jmp adc or add stos cmp jle scas ljmp out mov sub or jnp in cld test out sbb push adcb xor dec call sbb mov lret adc icebp rcrl xchg push push add cmpsl daa lock call (bad) std or lret add pop pop (bad) mov stos (bad) cmp scas mov cld lea mov and xchg jg subl (bad) jbe fcompl adc xor add clc xchg in xchg mov dec sbb push or fcompl test stos jo lcall xchg mov adc dec sub (bad) daa daa es (bad) lock jne out (bad) stos pop in or pop push outsb mov fdivs mov pop imul adc out inc jne mov std mov mov fwait cs idivb idivl notb push jg clc dec xor xor (bad) repz imul mov adc ds ds sub arpl shrb in popa scas (bad) call sbb cmpsb fs inc push test cli push cli je sbb out lahf scas fcomps or push sub xor add xchg and movsbl ret xchg in xor pop mov adc mov add sbb mov lahf jg arpl ljmp add jns inc idivl pusha xchg (bad) hlt jb pushf into in and inc outsl xor pop movsl inc stos mov jno dec push out fdivr sub fistpl ret movsb jg push pop pop out xchg fstpl in xor sub cmc or aas xor std (bad) cmp rorl or add pop inc add daa dec pop pop ret add popa sub incl sub repz int3 lret pusha inc dec xchg mov inc xor repz sti and mov (bad) mov or in mov cmp jmp push sahf xchg cmc loope fdivs or add mov jl cmp mov push pop mov inc xor push inc xor add pop fiaddl push cmp jnp cwtl popl ret popl (bad) cmp icebp push loopne mov lcall jle push jge mov dec jmp je stc mov dec mov (bad) or push and sbb sbb sub inc add dec jae fimull out bnd std roll lods aas dec push mov rcrl jnp call or idiv or je stos ficompl shlb sar fstl stos int cld mov fisttpll add movsl mov fs mov sbb lock pushf cmp and rep ret repnz inc ret out lea jbe cli imul jb mov mov push imul jo ror je inc pop sti xor es repz and les or mov int fsubl aad xor add xor dec jae leave clc sarb test dec xorl and mov pop test and mov mov cmp or test shr rcl lods stos pop push andl mov mov jnp jg int xlat out nop in pushf push adcb (bad) and out xchg pop push jmp repnz mov sub clc pop shrl push pop jno jg out stc dec clc test xchg or pop repnz out add or or dec push sbb xor nop push ret adc add pusha jo mov sbb lods daa nop inc sbb decb jne inc mov adc clc (bad) mov int push xchg inc mov popa outsl or push out mov (bad) loopne lods push inc cmpsl or or jp cld pop pop inc add xor stos in jnp or or push sarb test inc fwait xor out out rol sub ds fwait or and jae test js adcl mov sahf xor pop test pop (bad) xor jno fndisi(8087 mov push jb push mov sbb fbld pop test mov push outsb mov dec lds xchg inc add mov xchg xchg int3 inc sub cmpsb loop into int3 push loope push addr16 mov dec (bad) daa dec outsb ss xorl (bad) jno pusha cmc inc xchg xor enter scas insb (bad) pop aas jl mov xchg pop repnz (bad) and lret adc jo dec pop loope sahf movsb xchg adc insb repz cltd iret int3 ja jnp xor sbb fs adc jp cld and mov inc popa clc push push aas enter int inc jl adc xor insb add cmp test scas jg mov int3 lret insl dec insl push stc (bad) mov mov les push add sbb sub out scas mov aam add push fwait xor (bad) scas mov xchg ja je inc movsbl inc push daa pop (bad) sti or adc fstpt scas sbb ret xlat jle in imull cs jb cmp push lahf pop adc add xchg stos xchg pusha test and mov push sysexit cmpsl (bad) (bad) rclb aam pop call es sub jo lds clc push mov in (bad) bound jge push mov jne mov call add inc les mov push aaa or stos adc jmp je rclb inc dec mov lcall aad xor stc dec lret pop outsb inc test cmpb dec ret push mov cs cmp xor scas cld mov test ljmp jno jno (bad) or pop xor sbb adc out roll pushf xor dec repnz je test sub dec mov enter sub aam (bad) (bad) adc mov mov shrb lret push mov or push fildll sbb mov sub push push sub mov (bad) xor xor scas sbb mov adc (bad) fisubrl decb lcall into inc add xchg adc out out lods imul mov test push enter mov jns xor cs dec aaa mov push mov pop sahf lods jnp mov bound lods mov xchg jns xchg or rclb fsubp jne xchg push ds jmp outsl jae mov fistpl hlt xchg (bad) sub xor mov fistpl out inc ja mov enter sub leave mov xorl jbe mov cmp rorl mov insb es les xor pop int stc cld push das pop stos imul (bad) jne loop jge in jo inc push iret movsl xchg jne pusha xor inc nop jl adc add adcb stos rorb sbb leave aad push aas sub mov ljmp das inc js dec fimull in adc imul or xor stos xchg paddb test out xor int3 and int aam nop icebp out mov push adc or cmp and xchg mov and arpl pop fsubp mul mov push stc push out int3 (bad) out inc (bad) stc bound xchg sbb fcomps (bad) mov or pushf nop hlt mov popa stos xchg sbb test push mov rclb rorl lds aad rol mov push test cmp mov or rcl cltd mov into sbb xchg cltd nop imul repz das stos ljmp mov mov push push pop dec mov pop add xor cld mov negb mov mov cld pop cmp fmuls cmp xor push mov lcall xchg ljmp ret ss xchg je cltd cwtl add in test pop xchg lods adc or scas push push (bad) fmull andb (bad) pop lret repnz outsl sbb je,pn lahf cmp jns lods lcall mov sub ljmp and and cmp jmp or (bad) hlt jp aas xor sub cwtl daa mov cmpsb sti jae fucomip jle addr16 pop xchg xchg mov lds xchg nop enter pop data16 push or jae inc mov lahf adc sbb inc mov adcb scas test and scas sub jb jbe mov adc adc dec push sub lock cmpl fisttpll int3 je inc stc cmpsb mov test and sub movsl js jge pop push and movsb mov push and add in ljmp movsl mov push add int3 cld in mov rolb orb jp sbb daa jmp push fadds mov xchg scas cs cmp and mov dec orb call jge xor jb fisub pop xchg push or pop imulb add xor sub mov es lret xor cmp out repnz pop sbb movsl aas jnp arpl test sahf andl mov or cmp iret movd push mov jns xchg testb in in xchg adc das rol cli imul les jg jge cwtl sti insl push lahf gs push xor lret (bad) lods imul repz inc fwait add mov xor dec cmpsl (bad) jp in sahf jp mov or nop xor cmpsl push test les movsb sahf xlat mov mov pop test call xchg cmp push popf mov insl addb dec cmp leave xor and lahf mov cmpl dec insl dec pop sub mov das mov jnp dec inc popa aas mov ret mov sahf sbb gs cmp imul (bad) dec push es in cmp inc fimull mov xor push cmpsb jmp scas pop test cmpsl insl out pop push add loop mov imul and jno cmpsb add inc enter cld in adc iret mov push or enter push punpckldq sbb into pop mov orb fist xor cli cmp sbb inc js jns pushf mov test andl mov sahf adc lods scas mov mov leave adc ja xchg or adc jmp jecxz sub xchg fld push (bad) adc or xchg xor and pushf nop or repnz cmp and mov pop es push mov pop jb lods mov push sbb jb cltd cmp jne cmp jmp (bad) adc pop imul rcrl jg enter pop cmp jne push arpl push mov cmc into xor jne into mov xor sbb arpl jbe dec push jb add sub xchg es rol popw add mov test cs pop ljmp pushf sahf jecxz cltd add sbb iret push out xor cmp sbb sahf aas and mov sbb adc sub fnstenv mov insl or out push or out scas and scas jns outsl jge pop xor outsb daa lahf sub inc aam pop inc fnstsw push lcall mov int3 test fstps mov jo adcb cmpl add or outsl pop lcall pop sahf scas add jle adc scas push rol adc mov adc arpl and shrb pop fcoml jle fwait stc outsb repnz fwait or imulb or int (bad) xor cmp push mov out pop jbe outsb jle call lea pusha repnz std mov stc stos lret ret cmp push stos inc push inc jne mov loope test push cmp xor mov scas sti movsl jecxz std wbinvd sbb mov and outsl mov adc xor cmc mov xchg cli ret (bad) fcmovu int pushf add cwtl loopne mov dec add outsb mov adc cmp jecxz sbb and (bad) cmp es outsl sub in pop cmp loopne dec add aam out mov or fldt cli (bad) lret divb add popl in xchg mov lea fsts sub scas add fstpl xor and es dec xor sbb pop fcmovb xchg dec sbb sub stos mov call cltd xor cmp pop mov inc sbb clc mov sbbl lods sbb aad pop inc scas mov out or sti cld fwait inc ljmp inc dec inc insl (bad) stos lahf sub add ret (bad) jb out das stos fs or cli lods nop dec fstl gs rorb lret push fs jmp and negb push sub fidivl xor fcoms sub push cmp cmp pop pusha cmp jno add icebp inc xchg stc jne dec xchg inc lahf stc mov rcrl xchg mov rclb and fld mov and xchg fcmovnbe sahf xchg push loope in fdivs xchg sub xlat iret mov adc lret outsl or xor mov push call jae adc xchg rolb adc addr16 inc ret jo fwait js daa lock cmp in ficompl push sbb dec mov cs pop int3 int add mov push ss push lcall sub push xchg or sub sbb jg pop out push push sbb inc mov mov jo test dec jnp stos scas dec pop xrelease xchg lock (bad) jne repnz push jo movsb ds les mov jno sub and cmp cmp lret mov leave pop les mov inc mov clc push ja test pop rol addb je (bad) jns lret or (bad) mov sahf and mov hlt popf adc add xchg jl dec lods push scas dec sub (bad) sbb sbbl (bad) shlb xor jmp aas aas in out cld pop rclb cmp outsl mov or or cmp xor int3 push mov sti mov xchg push jnp inc cli fldlg2 scas or test dec cwtl sbbl jo aaa push lock dec ljmp scas push shr lret jp fisubl inc jnp xor lods push xchg or dec pop lock stos pusha pushf ret lret jo shrl loope cmp insl sub push adc sbb (bad) mov sti stc sahf lret cli and fisttpl mov pop sarb fimul shrb adc and out pop cmp cmp sbb dec pop stc shrl jne mov cli push cs push cs daa out (bad) enter push sbb or inc jecxz ljmp insb icebp sbb cmc mov sub inc mov xchg mov std stc dec mov and into jl mov or mov push mov in (bad) outsl adc ss xchg mov and add iret push popf jmp aas out cli adcl sahf dec xchg (bad) je jo push inc test xor ss into nop push (bad) or addr16 insb jne cli inc loope push out sti mov gs out cltd mov int3 jp dec sbb lret test cmp lods pop call push fs es stc ss ds xchg jae fdivrs mov mov push lret mov lds scas cltd push sub fdiv movsl test dec inc (bad) jmp lea xchg stc notl add cmp fcomp (bad) mov push mov enter and mov add addr16 mov dec cli or xor push inc xor clc pop movsb xor pop cmp jae insl add xor push ret xchg mov sbb or or iret push or in cs xor or cmp shlb es fdivr or pop cld add adc movsb push or and pusha mov push shrl leave test jmp jg and and ror lock ret cmp out fwait jle mov (bad) sub lcall mov push add imull fdivl inc xchg out aam and aas push pop lret push sbb xchg cmp pop outsb pop push pusha int3 xchg fimull andps lods pop rcrb lods dec jne imul jge jmp mov dec mov mov and enter and pop mov xchg sbb pop xor add xchg loop and mov je mov xchg mov xchg sub fld mov loope add xor stos out shll cmp jl fisttp imul ficom dec mov xor in pshufw push jno icebp aas push (bad) jnp jnp test lock add adc push jns scas cmp adc and pop hlt and and lahf and sub or cmpsl and dec ret pop xor dec sub nop insl inc pusha sub scas jo xor roll into adc inc pop mov pop push sbb inc xor jl sub jno and jae adc or cli xchg es mov mov push jne dec xchg popa fwait clc add dec push xchg jnp adc addr16 xchg mov scas cld mov mov bound sub repnz cmp lds xchg ss test cs jl pop xor lods test cld mov insl ds xor cmc xchg pop retw mov xchg aas mov inc jmp mov mov shll push cmc mov pop pop push xor cmp inc xor fldenv mov (bad) (bad) mov sbb push jo pop iret scas test cwtl mov fadds mov lahf clc xchg mov jns mov push out cli ss (bad) mov in popf out sbb out sahf push sbb bound mov xchg out test jmp outsb adcl (bad) jp jno leave pop cwtl jp gs arpl lret fldl push sub pop outsl dec das xor in (bad) jmp inc xor (bad) pop xchg iret push dec adc (bad) movsb orl stc jp lret cmpsl dec add mov loop (bad) mov sub inc inc lock jg ficom pop sbb cs ds mov push shlb ss mov fs add daa sbbl mov or test mov mov mov jg enter and jno pop dec nop sub cltd sub push xor pop cli mov pop dec dec fsub mov stc jecxz stos mov lods out and mov (bad) out cld and jne cmp insl mov inc pop nop or mov mov jmp sbb mov sbb and stc (bad) mov clc jno repz pop mov pop loope mov mov int3 xor xchg scas xchg std jmp std xlat or scas int3 mov jmp mov xlat adc push cmp lea dec jmp roll mov jle or aad push int3 push xor and fwait and mov movl rorl cmc xchg sbb int enter sbb jbe fbld daa std lea outsb scas aad cmp mov adcl sbb lea mov std sbb pop in push call in mov cld or les inc dec jmp dec cmpsb inc mov and inc sub scas jmp jae aam jns pop mov mov inc movsb cli cmp stos or out loop jne cmp in mov sub mov dec subl mov scas add cld stos movsl repnz stc bound ss jmp cli push and loope movb mov cmpb mov dec xor and in arpl stos mov movsb adc shrl or dec adc add faddl fiadd inc inc in mov sahf loop or clc add stc scas push addl loope or daa sbb jb push movsl std pop imul cmp (bad) jl (bad) push sub daa mov adc dec push decl sbb mov fcmovnb and and and jmp sbb mov dec addr16 and mov lret dec je push mov push and mov dec pop nop pop out push jle jb test xor ret jae imul out or leave mov xor lods pop cmp in cmpsb mov sub cmp repz add stc pusha nop mov cwtl jmp jmp pusha aam pushf xor pop sub (bad) clc ljmp fcmovbe ja add xchg pop push scas jl xchg gs popl dec push insb outsb out inc sub push (bad) fnsave push clc dec mov adc rep xorb sub inc pop xchg popf mov sub jle test (bad) fstl notl adc pushf subl scas dec cmp subb sub fsubl mov jp popf addr16 pcmpeqd in mov push stc (bad) lcall dec jecxz fcomps dec adc jo es mov push test ret gs imul pop adc sbb fildll sbb jg fcompl (bad) addr16 mov into inc inc mov mov pop mov ret repnz (bad) jns or (bad) pop push adc xor out (bad) adc test jg pop xchg xor push leave sbb and inc clc std notl mov out push jae pushf sbb cld jmp les xchg sbb xchg cmp adc dec movsb or cli mov (bad) inc in (bad) pop mov sub push daa das icebp pmuludq inc jns in aaa imul jge jmp inc push out and mov sbb and jmp test pop sub or jb lds js das or mov lcall dec popa adc arpl mov cld je push fs js mov les aas push dec sarb out lock repz or mov or test mov mov add pop int xor xorb aad fwait cmc lahf aad and pop mov lods xor jp adc pop push push dec popa sbb jge (bad) adc mov ds xor insl in ss add dec loopne dec xlat in repnz xchg mov ljmp aas popa iret lock and gs xor inc lcall (bad) xchg sbb and mov out mov sub repnz aam mov test dec pop dec (bad) fstl adc mov movsl data16 hlt mov stc jb nop inc push push jae xchg fldt lock mov sbb es movsb pop jnp mov jl jo xorl jge mov xchg jl pop std mov jge pop sahf push ss mul ret mov incl jle pop rcll and push sub fdivl pop test xor dec enter push mov sahf sbbb xchg imul repnz std out push fcoml mov ficomp fcoms rol ja in mov jno nop lret and inc orps (bad) or insb adc (bad) mov mov ficompl add lret push cmc dec fdivrl push add and sub cltd addr16 sbb pop icebp xchg xor mov and lret jne lea xor xchg incl xor adc mov push enter xor xchg or enter push ds mov loope out mov add movsb sbb lcall stos repnz mull sbb adc ret fildl insb jnp mov rol mov xor mov ja sub or adc jo (bad) into in pop xchg lret roll xchg imul test and stos adc push ljmp pusha outsb cmp cmp jb xor ficoml bound xor mov das cli sarb dec aam ja xchg (bad) ret loopne insl imulb dec out mov mov sti pop mov subl and mov dec (bad) mov leave les nop mov jne cmpsb inc (bad) and bound lret aaa mov inc inc xlat fwait lea jge sbb dec mov dec pop lds and ds lcall das fldt (bad) cmc pop sbb pushf sarl std lock sbb dec sti or iret in lret dec rorl imul pop push add xchg jge sub adc mov mov mov inc dec sub add sbb mov cs mov jl sahf in xchg push push outsb ljmp or pop sarb jo and (bad) popf rcll mov inc xchg je outsb push fs cmpsb xor push repz push pop xor repz pop incb or adc jg xor insb flds jmp jl and aam bound sahf cmp hlt xlat push add ret xor xor pop pushf push pop (bad) lcall push mov repnz mov dec jno mov sub and mov mov call dec inc fs jmp aad sbb pushf jmp faddl cmpsb imul xchg (bad) mov cmp xchg push adc adc fbld mov pusha roll xchg test push mov and mov mov adc scas cmc or inc fldt les inc push jl out iret xchg dec cmp xchg call sti int3 xchg jo adc mov sbb pop lods repz mov rcrl mov rorl dec out sahf outsb or mov push or mov pop jg frstor push ja mov mov cmp or cmp adc or sub cmp loope mov jge or gs cs lret mov and lret fidivl scas movsl or hlt ds aaa dec adc pop inc dec pop pop push daa sub inc jbe mov jle loop mov dec shll dec insb lret and mov sub mov mov pop mov adc notb xchg in fnstenv jp jg arpl pop test sbb push pop das lcall mov dec rorb and ja or (bad) push cmp rcl or pop cltd and dec sbb mov adc pop fdivrs adc loope test (bad) aam ss pop out sbb in ss jbe or adc jae xchg addr16 push mov jle iret in inc or jae aad dec (bad) inc jb (bad) push ljmp pop ret repnz (bad) into ja xchg call and xor sbb arpl loopne dec ficoml bound push aam loop stos cwtl sbb add sahf jmp mov or stc xchg jae (bad) pop lods xor data16 imul frstor mov inc imul lds loop push cmpsb jae enter pop pop icebp push leave cwtl sbb ret (bad) in ret sub add push xchg sbb cwtl leave out shr push sbb and daa lock orl lret cld and call pop lock dec xchg lret add cmp pusha loopne mov adc inc mov jbe pop (bad) aad out loopne mov jne scas mov inc mov ret loope out mov lock xchg xchg xchg daa fs jmp mov xor rcl cmpsl repz (bad) or or sub sti pop lahf or push mov xlat outsb hlt int3 mov leave outsl or in movd jb add mov sub mov cli mov adc iret sub and icebp popf mov add aas mov (bad) ja adc test pop mov divl test stos das sbb jp xchg jbe sub cmp inc jae dec outsb pop or aaa (bad) hlt fsubrl pop in enter xlat inc fidiv sub out xchg rolb jnp out fwait mov lock add pop jmp ss lret lret frstor lods pop (bad) out stos mov mov push mov bound in lret out inc mov stc mov dec push (bad) xor push daa cmpsb fsubrs scas or (bad) lea rolb sub stos mov jg or fidivl xor mov cli rcrl xor jbe adc mov in imul lds scas mov add add enter cmc or and in or cmpsb sub cmc rolb (bad) jns lods add movsb leave sub (bad) dec (bad) cmc cmp inc cmp cmc pop int3 jo adc repnz in fs or out in outsl xchg pop push pmaxsw xchg pop mov dec sbb cmp inc (bad) inc scas into dec mov scas out mov jne mov daa stos or fdivp jl and stos mov repnz sbb push jne push sti cmc loope int data16 aam adc xor inc nop (bad) cli test cmc test add insl pop lods mov sbb test mov mov test leave iret out adc aad fisubl xor pop inc add mov mov leave rcr add adc mov pusha stos lods lret in cli (bad) cmpsb push push ror inc push push push imul sbb adc outsl in daa das test jnp xor mov push out popf mov xor xchg mov or jg adc repnz (bad) mov xor mov loope dec das ret pop lahf dec lods int3 xor inc mov xchg clc cmp jnp fcom jo test adc mov enter cltd xor in in (bad) and add sub test xor dec inc pop pop jbe scas lods adc (bad) insl jp arpl jnp and stos cwtl cmp sub and xor and dec clc sub dec leave imul add pop stc sahf or mulb out pop sbb adc mov ret jmp popa aad movsl mov inc loopne stos xor in push push icebp adc mov aas popf insl imul pusha jecxz bound lahf ljmp xchg (bad) jbe inc push xchg xchg dec (bad) lahf cmp fistpl aas fisttp inc lea jb sar xor mov cmc stc clc sub call lea ja jmp insb xor in mov inc mov pop xchg pusha (bad) pop push xchg push nop jp inc stos pop rcrb popa fs xchg cmpsb cs mov inc ds mov into cmp fsts sbb and xchg push pop push fwait jle aas sbb mov iret stos xor iret fbstp (bad) pop std push mov insb jae add inc pop mov push int adc sub mov (bad) (bad) xchg movsl pop int add (bad) iret jae sbb (bad) daa jge (bad) jge jmp stos fstpl (bad) mov cltd jl bound dec add mov inc xchg fdivs pushf jp pop iret aad sbb out stos pop es dec mov xchg pop insb dec dec arpl push (bad) aam (bad) hlt scas and loopne scas push xchg xor or loopne sbb sub cmp cld lock sub jge xor cltd or and lahf sbb dec daa nop rcr xlat in push push xor sbb fwait cwtl (bad) stc inc mov dec and push cmc shlb xchg inc xchg loopew ss loop push pop sbb hlt or call xchg lret xor dec pop mov fs mov or push (bad) mov dec cmp cmp daa mov das dec ret xchg add xor ss jb insb lret mov mov xor stc jnp in jne rcrl xchg sbb fidivl lahf pop cmp adc movsb mov mov hlt lods shlb or daa dec mov sub in cmp test dec inc cmpsl ss ffreep cmc push roll push mov sbbb jmp sbb adc enter add add repnz add (bad) in sbb dec fwait dec scas pop or in lods loopne rcll cmp push push mov pop movsb add and add add or cmp dec add sbb push addl mov jmp mov imul mov jp push cmp lds imul lds test adc pop aaa js jmp mov aaa scas fsubrs push ret lahf cmpsl loope jge ret jnp xchg sbb test shr push cmp inc jo cmc scas aad repz jmp ret packsswb cmp add mov jmp adc roll inc push movsl mov dec jo cld cli cwtl pop and push mov jb inc mov mov cmp push outsl scas xor int3 out mov inc inc jno dec pushf stos andb enter xchg subb lods push hlt setge repnz scas out sub mov aas rorb xor pop lods cmp repz inc fldenv xchg dec addr16 mov and es sub ljmp std dec insb cmpsb addl push inc pop cmpsl in lods repz lahf in jno std and (bad) mov jno inc jge aad mov outsl scas lea cmc sbb cmp loopne mov inc andl cmpsb mov xor lea sbb insl mov fistp xor nop mov or push cld cli dec dec movb adc mov mov aam daa in xor add mov mov out or call push test call fwait jb mov popa inc adc mov inc inc in xor dec out and mov mov shll mov in cmc add pusha xor call push xchg jecxz mov int sti fwait (bad) cmpsl outsl mov or (bad) in bound xchg push sub sub inc (bad) out int3 and and inc sti mov dec jmp jnp mov fdivs cmp scas out jbe or cwtl and into (bad) lahf bound xor inc outsb int cmp clc (bad) push sbb jle in decl sahf or rcrl xchg jle mov stos jo or dec cmpb xor aad jno sarl out clc inc (bad) fwait out adc scas (bad) pop mov pop imul mov xchg xor mov inc cmpsb push and mov adc jbe cld xchg jb cld mov int dec xchg scas ja inc movl add and (bad) shll pushf aad cmc jp and js std je xchg gs test lock inc popa hlt jecxz or adc les (bad) adc bound lds adc or push cltd outsb or inc cmpsb (bad) psubw xchg or mov mov cmp dec not (bad) outsl ret subl lcall push lcall daa insl cmp jb je pop sti mov jnp xor jo xor xchg pop outsb test (bad) frstor sbb inc adc inc cld in inc pop jbe push and add aas sub mov add jl jbe cs addb imul cmc imul inc and mov (bad) pusha data16 loope fwait add inc fistpll cltd test inc mov gs jg cld (bad) sbb adc ret std sbb push bound repz mov and add std mov mov push inc fst sub jno rol enter jo icebp jns inc sbb inc jne in icebp mov sub add lcall (bad) or xchg pop das fisubrl in jl ret push dec popa subl pop jmp pop insb xor cld fwait subb mov (bad) cmp in xchg or (bad) push int3 jg and leave jecxz jecxz enter call pop mov rol add bound cmp int jne pop xchg popa xchg ret in cmp xchg outsb push pushf outsb (bad) lea cli in jae mov int3 sub (bad) jge pushl xlat dec jo and mov cmpsb test lahf bound lcall xchg adc adcl jecxz push pop in shrb dec (bad) jecxz xchg lret stos xor lret sbb idivb ljmp add dec sti fildll loopne call mov sub cmp aas aas mov cltd lds jnp pusha push inc arpl xchg in xor adc sahf sbb shlb aaa cld pop push cmpsl (bad) mov mov add ja in nop push int3 cmpsb sbb subl dec push lret mov std mov mov mov cmpb sub out pop or stc push lods lods and pop jno pop add clc je or mov lea jmp call pop push mov sets mov mov mov movb pusha push pushf mov push mov pusha movb mov pushl ret out scas jp push inc outsb daa fildll jmp mov popf lods sti cmp mov mov dec push xchg jp aas sbb in sub pop aaa iret aas iret push stc jnp push loop dec enter fldl fbstp pushf adc add paddd in inc leave and pop push adc inc xchg cmp or and pop xor jmp stos pushf fild jl sub xlat aam mov addl jmp fcmove jns add stc insb add in xchg pop or xchg ret jne and repz dec or in (bad) xchg adc leave inc fildl insb fistpl icebp imul mov mov jns stc cwtl addl jmp call inc test and jbe inc pusha mov (bad) aaa mov aam or js cld add xor or lods (bad) push dec loope add inc dec ds cltd mov push ficompl aad push pop lret sub jnp daa xchg arpl push aaa push into and inc inc mov dec push out sub inc adcb inc jge (bad) pusha scas (bad) popa stc cltd out mov loopne addl lea inc pop xchg outsl or stc sub pop (bad) pop sahf pop cwtl movsl mov lahf pop lret xchg stos loopne add (bad) or xchg mov lods lcall mov sub xor sub clc inc jge aas rolb sub (bad) jae add ljmp adc mov outsl sysexit (bad) icebp mov (bad) int xor inc cld (bad) in adc pop mov leave cld in add sti jecxz pop ljmp jp adcl cmc icebp inc roll cld pop fdivs xchg mov xor das fistpll pushf (bad) inc sbb and mov dec add mov mov repnz or xchg xor rcrl mov scas push lahf mov leave es jecxz dec adc add mov jmp lea stos stos loope adc imul in and mov sbb jg das scas jnp imul cmc std std mov and ja sbb sub shlb (bad) dec sub icebp sub test aas mov (bad) xor lcall mov pushf add inc sbb jmp js jne (bad) push push lahf xor sub lods ret sub cmp add fcompl pop pop xor js rcrb push mov in push mov out dec icebp push pop xchg cmp lahf mov mov dec or xor in push mov jmp call lods btc xchg sar neg neg bsf bsf bswap add cmc rol xchg movl lea ja inc rcl sub call sti or je push inc sub adcb or xor push lods jb push in nop adc aas push nop insl mov add jns cmpsb scas fs fs imul mov out sbb test sbb sub mov sub addl cmp inc add popf jne out aas push mov sbb sbb fdivrs pushf shlb mov dec pop xor imul jnp jmp pushf pushf clc mov test add cmc test call or mov push and add js pushf stc mov add lea pushf bt jmp call sbb xchg add loope xor aas fucomi sarl mov jae xchg xchg fild test xor std cmpsl lea es fildl mov push call add lret add sbb icebp mov jnp push fucom pop rorb or xchg dec scas mov out jnp push movl pushf movw movl push push pusha lea jmp push jmp cmp cmp call setb not mov lea pushf jmp pushf jmp xlat lods inc xchg (bad) push inc int3 cmpsl addr16 cmp mov aaa push mov pop cmpl jno int mov pop add mov mov xchg pop mov mov mul or ljmp mov pushf dec inc pop ret cmp fldenv sbb jb xor push or and mov adc inc mov (bad) mov inc jg push mov test shrb loop sti fstps bound xchg xor int3 cli in adc rcll arpl push mov data16 pop inc outsl lret adc add scas xor pop lods je pushf mov pushf pushf lea jmp clc cmc pushf add pushl mov push lea jmp lea jae not lea call dec lods mov (bad) push inc insl push hlt loop add lods lods cli xor pushf xor or mov sbb je stos xchg mov lea popl sbb aaa xchg cmp add jmp mov mov and popf adc sbb pop mov xor ljmp mov or dec xor dec icebp repz and cmp or out mov push bound sbb sbb pop hlt pop sti sub ja jecxz xchg lahf jo push popa les out sub fisubr mov pop loop loope sub cmpsl jle mov ret scas test push mov mov xor cmc movzbl push mov jmp ror neg mov test cmpb push lea jb pusha lea jne or btc rcr daa xor daa mov bt sar add or push cmp mov test call mov setae lods call mov add mov pop (bad) in fadds clc ret pop jl cmp xor loop into (bad) jo cmp inc cmp sti pop dec xchg inc (bad) jle cltd mov sbb push popa xor mov fiaddl daa cmp fiaddl add push or loope push dec inc addr16 push mov bound pop fmull mov push or clc or push push dec jp mov std mov jp test into fidiv pop test cmp or cmp std mov movl cld mov aas cmp pop nop (bad) mov cmp lods mov sub cmpsb mov sbb mov cmc mov ror mov pop jne addr16 lea setle movb cwtl setnp push movzbw lea lea jmp movw movl pusha xchg pushl lea jae not not xchg setae mov mov pop pusha movsbl jmp jmp mov lea jne pushf mov data16 (bad) or lcall and repnz jmp mov jmp movl jmp jmp jmp cltd push cmpsb jae push inc in cmpsb adc nop aam frstor shll cmc or std mov daa jmp inc (bad) (bad) imul nop add sub mov test loop mov out stc je insl (bad) (bad) jp jle inc cmp rcll sbb pop jmp sub add mov sti adc nop (bad) popl sahf sbb push fidiv test orl inc adc (bad) je jecxz pop or xor dec add (bad) testb lock sbb pop mov loopne into orl lods dec inc mov cmc stc ror call add inc jb popa je push jb arpl jae add push inc xchg std and pop xor popf lds imul das jg lea xor ficom xchg inc out insb sbb (bad) add scas lahf add push jne fstp out hlt lods sbb mov jge shlb frstor push xor cmp int3 rcrl les add test scas in ret cmp scas mov xchg iret orb or mov loopne movsl aad dec (bad) pop ret mov or push dec pop fnstsw lahf cs sbb (bad) xchg iret jb cmp rcll fidiv loopne mov call call lock rol push inc inc dec sub dec dec (bad) ja or std or cmp test or mov push and sub xlat cmc dec (bad) fisttpl jb adc cmpl jae pop addr16 fisubl addr16 jb mov orl fcompl fwait pop ljmp bound (bad) dec sahf loop scas push movsl sbb outsb out pop div cli popa test frstor push jge push cmp rcll imul xor popf in (bad) lock xchg movsl jge xor jg xchg push sub push scas push mov outsb aad xchg rcll jmp jo and test and add shlb enter movsbl xor aad data16 lock mov xor shl add add shl mov cmp cmc test call pushf lea ja pushf push jmp or push inc mov ljmp add cmpsb cli or cmp cld test xorl pop mov repnz add mov cli inc testb dec mov hlt add adc inc inc dec outsb mov mov pop xor pop daa lret xchg xchg mov inc (bad) sbb pop notl jnp test inc jno,pt jp sbb jb and pop repz movsb pcmpeqw adc cmp aad push xchg call pop push std push jbe inc stc mov jp pop adc cmpsb mov shrl xchg jnp mov sbb fs push test or loopne push ja outsl aam js or gs xor fs insb add mov (bad) lcall in cmp bt add movb movb call jmp mov pop jmp test mov push inc add push in cli mov push mov mov (bad) stos sti sbb out dec jecxz in cmc ss mov sub cmp out xor into inc (bad) aaa in orb mov ja xchg je jbe (bad) or inc ja and mov mov cli cmp mov (bad) push or push in fwait mov jnp adc push mov lahf jecxz lods daa push and jae inc sub imul popf pop and pop xor jg or imul mov cli sub add sbbl ljmp aam in add xchg int mov (bad) lahf xchg lods jns push inc es aad or das out dec add push xor jmp mov movsl sub sbb cld lcall lret nop xchg mov adc jo mov fistpll cmp out js (bad) mov out dec out cmpsb sbb or (bad) fdivp push fucom sbb data16 rcrb test insl dec imul xchg xchg test je add xchg cmp mov loope cmp jnp imulb dec cld and (bad) xor sarb shlb (bad) dec push es fadds les out popa stos add xchg pop cmpsl push or test mov (bad) and call call setg lea call push push inc gs inc scas loop or or dec fistpl xlat scas mov nopl mov cwtl pop ljmp imull mov push and or sbb adc xchg push dec into xor pusha xor jns add je pop in lea inc movsb push mov repnz mov pop or mov xor popf js rcrl lret lret or jle jp inc mov push int3 xchg fnstsw hlt adc adcb or cli sub inc int3 imul dec add imul push mov inc rorl adc enter mov or out int3 pop inc lahf daa divl mov push push mov ret in gs das loope mov mov iret cmpsl leave xor lret int3 fild stc cmp sub jmp xor imul mov mov xchg inc scas or mov nop push test insl iret movsb pop (bad) xchg addr16 daa sub pushf (bad) out cmpl push dec inc xchg jb inc (bad) jp inc xchg dec gs negb js std pop in mov adc ret sahf xor test xchg lea repz decl xchg stc (bad) call xchg jmp pusha sub not mov pusha push pushf stos push mov lea jmp jb adc lahf xchg movzbl test pusha adc cmp shr pushf imul sbb rcr test lea pushf mov rcl mov test mov lea or shr mov cmp lea call pushf call adc iret sbb push inc mov ja fstps xlat pop pop xchg vsqrtpd dec push or out movsl mov adc xchg push andl out pop sub popf movsb aad sbbb push (bad) xchg mov icebp js xchg pop fidiv aad pop jge fisub jbe xchg jno stos push pop and rorb js aad data16 mov fcmovnbe stos dec scas mov cs xchg inc fistl xor and pop pushf pusha add pop jo add mov icebp dec fnsave pushl mov icebp xorb leave in mov sub sti or repz addb stos pop inc inc mov sbb out outsb aad inc das (bad) mov popf lahf add or dec cmp loope es fisub adc (bad) jno adc jb xor nopw inc xchg js cmp lods repz sahf inc outsl loop xchg lret shrl rol xchg (bad) std sub cmp pop xchg fidivrl imul fxch push inc xchg jnp adc (bad) jmp inc jne icebp in add mov scas dec cli mov mov outsl xor jge ljmp je outsb pop and movsb pop adc mov pop add cmovne sbb (bad) push imul dec pop test mov and insb and mov test daa out inc int3 into push in daa ja (bad) aas std sub icebp sub cmc dec xchg mov stc imull pop lret test dec push mov ds push (bad) jbe idiv popl rcrb pusha fimul fucomip int stc decl test push add btc inc add and sbb mov clc call xor cmp lea xor pop popa adc and sti dec iret xlat add jmp ret mov push dec dec sbb int fildll xchg add and ds (bad) push dec and or and sbb or lret push sub ja loop pop notl jae sarl (bad) in jle and push inc xchg or in into mov test sbb dec iret insb aas lret ss pushf jae jecxz cld jae loop out les sbb jecxz leave push cli push movzbw jmp stc pushl popl pusha call (bad) sti or aam inc sarl test push and mov outsb faddl data16 mov xor out sbb outsb int mov xchg repnz imul jmp dec rclb cmp lds xchg rolb pop mov add cs and jnp pop sub sbb and mov mov add pusha and lret mov pop fimul lods jle mov jno mov test mov jmp xchg push jne lock cltd jg leave cmp cltd imul daa outsb jmp mov jmp pusha lea jne xor btc not mov rol sub bts bsr test mov cmc bt clc sub cmp bt call pushf movl pushf mov mov pusha push pushf pushl ret add add push inc push iret mov pop mov sbb dec rcrb test and data16 enter jmp mov mov clc out adc pop dec enter nop fwait or sete add mov or jae add fmuls outsb push lds sbb insb sahf sarb cltd mov fs mov sub loop cmpsb and or insl mov mov add and jp cmp outsl daa xor mov iret cmc fs jle cmp dec lods pop je and sub jge sub cmp cmc xchg dec (bad) push inc pop jl fs dec fcompl adc enter sarl fild cli jp pop sub aam cmp int3 cld xchg dec fs dec cwtl pop repnz pop dec mov movsl insb std fsubr lcall inc mov dec mov push sarl push jl sbb inc jae or (bad) ss jo or mov sahf adc pop add inc mov rolb js jmp mov and bound std test int3 jo movsb int3 lret jae add push data16 cli mov sub cs jg add sarb mov push outsb aad xor xchg xchg outsl (bad) hlt and imul movsl dec rcrl mov xchg fisubrl maxps pop fs pop adc data16 mov jmp xor data16 mov mov lods mov sbb pop loopne mov insb jmp sti jecxz stos (bad) in jno leave xor mov lock in and jle ret jl in cmp daa dec mov dec mov in push adcl dec stos scas hlt push push fdivrs push add mov mov push sbb sub jae push adc (bad) fmull pusha sti add cs lock negb imul push outsb lds mov rorl je clc xor dec iret pop mov push inc (bad) mov push sbb insl pushf ret ss mov jb mov test adc loope gs adc pop mov and inc ret jb push xchg cmpsl loope cmp es mov pop shrb ds arpl push inc pop add js cwtl out mov sbb arpl xor out lock pop movsb mov mov arpl jecxz mov insb and jno std or and aam sbb hlt adc cltd add mov leave xor and dec or push cmp dec into out repnz in test hlt loop in iret or out push nop dec mov (bad) sti lods and and push sbb insb xchg loope mov lds or push aam jne adc fs lea js scas lds or dec stc inc and push cmp mov and outsb sub mov inc lcall out mov xlat int cld mov push xchg xor adc daa cmpsb sbb mov pop xorl pop out push add inc fst mov popa push jmp sahf out popa mov das inc mov popf insb mov jbe add cmp xorl clc in add jmp jg push fsubrl iret aaa pop inc addl imul inc fstps sub aam (bad) dec lods sub mov jns xchg fwait in push std call mov aam mov sbb shlb jno hlt mov sub dec mov inc andb movsb repnz cmpsb sbb int mov xchg adc (bad) loop decb or pop inc (bad) or fcmovbe (bad) dec daa jecxz sar jo sti pusha pop xor hlt mov aas pop out fnstenv pop mov push adc mov inc sbb sub mov dec int3 push or cltd adc addr16 sbb inc mov sti jno adc aaa inc fisub loope loop in cmpsb arpl jp xor lods rcll test dec gs dec dec mov or mov lahf pusha mov lahf lahf cwtl pusha mov movb mov push pushf cwtl movl pushl movsbw lea mov pushf push jmp lea je bt pushf jmp bts bswap rcl push data16 cmc xor bts clc mov xor sub data16 repnz rcl push shrd push xchg xchg sub push sbb xor sub neg push bsr inc btc bsr push shld inc test setns mov btc dec bts mov shr shr clc mov cmc test or push call iret pop les rorl inc dec and mov popf imul xor insb cmp stos lock mov mov loopne or push lods fnstcw imul pop push data16 jne xchg jge dec adc enter inc ret clc cmp into dec loopne push call testl adc sbb sbb jno or nop add popa inc jbe mov pop (bad) adc inc daa pop lret pop mov rcrl loop (bad) or lea mov push and dec or repz dec addr16 imul insl jnp iret je fldcw jge inc add outsb adc fdivl mov xchg jg inc sbb jmp cmp fmull inc mov xor pop cwtl fcompl push jp inc stos je cmp push insb sahf mov jmp stc inc adc push call ja jo int dec add mov sub sbb leave push or mov jae fwait inc xchg pusha add (bad) fistp add dec mov and pop push push icebp jo sbb sub shrb or xor dec icebp adc call sbb push scas scas and adc cmp rcrb xor mov jle sbb je and pop inc dec add cmp or fidiv cs fimull pop push pop popa out cmp adc and add and pushf jmp mov cmp jmp movsbw mov push pushl pusha call movl cmp pusha lea ja movsbw jno lea movsbw pop xchg sets pop sete xchg push mov call pusha push inc jg fimul adc into int3 les out and mov mov or call lcall mov ret imul arpl and mov in fisub fcompl (bad) lock inc and sub pushf push sub pop data16 outsb xor and pop je loop les fwait in jno in lock mov (bad) jb clc xchg mov dec xchg pop gs sub lds add xchg and xor scas out lea mov push nop add push inc pop xor add sub int3 mov dec push les (bad) cmp cmc push pop pusha (bad) push mov xlat or xchg fdivl adc ficomp inc je push sbb xorl out stc pop cmp sub std pop pop adc add es adc jmp pop (bad) lods and lods jne aad negb and add push aaa dec jp xchg jbe add and into fistl movsl enter push pop push shrl mov pop cmpsb (bad) lea mov mov repz inc mov and scas icebp fsts imul lods sub or push push ds add lock movsl dec fnstsw leave rcll mov fwait xchg sub mov int3 aas pop mov leave sbbb mov inc js or lods pop (bad) pop jge and in pusha push dec push inc and lret push mov test ss push and mov pop ret and ss pop scas sbb movsb and aaa mov push popf sub daa mov inc and out neg cmp test test add movw rol pushf push inc bt clc pushf shl test add test sub jmp push pushf pushf mov pushf lea jmp mov shl lea call pop ret pusha pushf cmp call add add pushf lea call jmp lea je jmp dec inc push dec inc dec xor cs insb add add imul jb inc imul jns popa je inc js jae jae pushf lea jb movsbw inc sbb mov xor xor lea mov cmc test stc shr jmp movl pushf call lea je shr lea xor bt shrd aaa rcl mov bswap mov and inc shr adc rcr add btr mov pushf stc movb pushf or jmp push mov inc xchg mov pop ret xor mov in stos (bad) xor push inc test test mov sub cmp cld aaa push push fsubrl mov mov adc mov daa mov pop popf fistpl ss adc addr16 idiv xor inc and iret pop ret pushf xchg and xchg push xlat xor call mov (bad) xchg pop mov inc arpl stos dec pop addr16 sarl sbb fs ss mov scas push in dec xchg cltd ret sahf in jl or adc in fsubrl arpl in cmp cmp movl pushf lea jbe test pushf bsf rcl sub push test mov setno add btc mov sub add cmc shl shr sbb adc cmp mov add inc add pusha jmp lea jb rcr mov pushf bt stc bt shl bt clc pusha add pushl push lea jmp test movb push lea je call push lea je btc cmp add lea neg mov clc sub pusha jmp cmc test add clc bt jmp push xchg ss push inc jmp (bad) pop push mov cmp and jbe mov jle repz pop xchg cmp lods jns imul mov int cmp scas cmp arpl adc cmp pop aad xorl (bad) mov adc arpl arpl inc push cmp lret xchg lcall fild inc scas push fwait and (bad) ja xlat and xor imul add subl insl lds mov mov (bad) mov dec stos mov xor and mov xchg pop cld mov xchg mov cld aaa mov or add popa mov ss loopne test jae lahf out mov enter fsubrs sarb negl das sub rclb enter inc stos out sub xor cmc inc mov jmp pop insl aam sti sub int ljmp mov in pusha movzbl mov not mov movl pushl pushl ret push lock std std mov add insb mov (bad) and mov pop (bad) xor leave jg cmp icebp pop dec dec in and aam pop les out and addr16 bound add scas xchg add fs xchg cmpsb stos je pop (bad) jae (bad) iret clc das repnz jo jmp adc dec pushf push call lea ja call add push popa je inc imul jae add pop mov inc dec xchg out fnstsw leave and mov pusha fs pusha (bad) cmp xchg adc mov and (bad) daa mov push dec cmp in push dec pushf sbb and dec pop xchg cltd pop sub jo pop push ret out mov push int xchg dec xchg mov and addl lock fld stos leave jo add into and push sbb cmc mov fdivs repz outsl mov bound xchg xchg ret flds es ret (bad) xor jmp test insl jecxz mov mov outsb inc pushf or push inc sbb iret sysret out sbb dec data16 cli pop xchg in lock loop adc nop jle xchg mov inc sub or push or xor adc sbb imul fcomps push mov mov mov inc xor cwtl jmp xchg popa (bad) add addr16 mov xchg rclb mov push stc pusha cmpsl (bad) or movsl les push xor xchg out xor rol cmp push sti das xchg ret cmpsb std and xor fidiv int3 lods inc sub fdivrl and in popa ja jp cmp es sbb aad (bad) call jae stc pushl mov inc repz add xchg jp pop lods fidivrl cmpsb mov cmp or pop into fstl cmp jmp test xor (bad) jne insl rcrl jb cmc pop mov movsb pop mov xchg es mov je loopne xorl mov cltd xor arpl dec push nop cmp mov jns repz lods push or jb or (bad) hlt push repz hlt jne or jbe xchg (bad) mov cltd mov mov or ret dec in imul mov or or das ficoml es in nop mov inc icebp sub lds lea movsb and push inc leave inc aam cld inc pop ficompl or es je jo inc ret sub fsubs cmpsb push sbb test sbb bound adc push xlat or mov xchg mov es xorb xchg sbb jmp cmp mov cmp add notl adc push into push adc push or lods jnp or inc test inc icebp jecxz add jmp lcall push int3 jl xchg js iret sbb lret dec inc mov scas push data16 ljmp aam lods (bad) adc clc lods movsl in imull lahf test push inc (bad) mov (bad) sbb ret cmp push insb loopne iret jb test subl std add inc inc xchg fisubl pop les outsb inc cmp jo cmp test and push push mov inc adc fwait add pop ficom repz push leave sti mov mov test pushf dec lret (bad) xor xor jle (bad) mov pop push in push addr16 pop pop xor mov or cwtl fildll movsb data16 mov xor sbb jns adc jbe xchg mov sbb incb xor aad test imul lods psubb movsl fbstp stos outsl xchg xchg cwtl jae push xor xor mov std jne fldcw orl test pop (bad) loopne iret push scas add pop pop aam cs ljmp aaa add (bad) (bad) jp mov test fidivr xor lcall xlat push xorb lret jae cmp dec shl iret popa pop (bad) sbb hlt xor mov or add decb cli repz xchg lcall sub outsl div cmpsb xor aam movsl xor add aas gs fistl out repz dec iret pushf add mov pushf lea jmp sub cmc jmp leave pop push mov push inc sbb test push cmc jnp aas ja out lods push mov into dec (bad) adc lods flds xchg cld adc or add sbb dec leave (bad) scas dec ljmp popa pusha ljmp sub fist int3 js mov (bad) rol cld or mov xor ret fcmovnbe inc notb adc push aas int3 ret xlat test mov icebp es sbb pop lods mov enter pop dec pop add das les adc lock jecxz dec sbb cltd sbb cmp loop jbe and jmp call push lea jae clc stc add push movw pusha mov pusha lea jmp mov cmc call neg sub movsbl movzbw call fistpll les loop inc dec and pop push cmpsl xchg fstps mov aas mov jmp insl fdivl orb xor rcrb adc push rcrb (bad) push sub (bad) and inc loop es jp (bad) xor lcall fs cmp mov jb push push imul jle pop and push fild fsubl hlt pop arpl fdivl jl jb add aam mov das pop mov scas into insl mull sahf or leave jecxz inc cmp scas movsbl in shrl pusha push call jae lea lahf lahf lea pushf push push pusha lea call pushf lea jl push lea jb sbb rcr cwtl inc mov pusha cmc jmp mov push inc pop out sub add xchg mov in inc movsl cmpsl xchg dec mov xchg mov sub add push pop aaa cltd dec aam cmpl call cmp aas lcall inc cmp adc aas imul mov les cmp scas push xor or add sarb pop mov sti push fdivrs xchg jle add push inc jb or mov enter mov mov add jnp jg inc adc xor jne test sub or xlat lea push mov movb mov lea call pushl pushf pushf lea jb pushf cmpb call push dec dec push inc push dec cs insb add dec ljmp in push inc ja,pt jg jns orl ja jnp inc aad ljmp jae orl jl fimul cmp and out out pop out xchg outsb fdivrl xchg xor mov push mov xlat xchg mov clc or jmp loopne fwait into jb xlat pop sbb in sub dec sarb psubd cmpsb jns xchg mov ds lea outsl add aad ret std lods stc xchg mov adc test push sub xor xchg std and (bad) mov mov (bad) jo in push fadds inc call sub pop sub pop mov sbb scas mov lods cld pop (bad) fldpi push popf nop lds jnp in push inc mov push stos mov cmc push popa pop sub dec (bad) lods das inc enter fnsave pop or icebp or cmc popf movswl mov push pushf (bad) rcrb test dec cmpb fwait subl cmp lods int adc mov dec (bad) xor cmp mov sbb pop and lea jbe shl rcr pusha not mov bts add inc call dec cmpsl je out push inc aaa jl push pop jo dec stos xchg cmp out sahf sbb and les (bad) stos xor lods cmpsb lret sti or (bad) enter inc mov mov sub pop out sbb inc sti (bad) push inc dec outsb push inc jle dec int3 movb mov mov sti or xchg rorl push inc mov sub into cmp bound cmp jb cmc push jle xchg imul loopne out push inc mov fmul ljmp mov (bad) pushf test push outsl (bad) cmp xlat mov jmp cmp jmp rolb xchg out and ret repz add in cmp call imul cmpsl mov mov fsubrl std data16 sub fucomip sbb in in into lock rorb cmc and sub adc mov rorl xchg xor pop mov adc sarl aam fwait loope inc stos xor adc cmp push ret cmc es fstl mov lret jae and inc jmp js movsb xor les pop mov jecxz mov std add std xor sub push inc cmpsb cmp int (bad) test (bad) dec cmp inc imul xchg bound pushl mov cmp xchg add (bad) repnz push ljmp jp sub or dec and add xlat in xorb jae stos (bad) je push int imul xchg call ret xor mov cmp dec adc mov cmovo fcoml out mov inc imulb add inc adc repz or xor push add push cmp inc mov xor push and xchg cmp and jno pushf adc adc hlt repnz idivb jae sbb in or das inc faddl mov jb,pn push dec mov pushf stos mov pop dec dec xchg cld lret ja imul fldt push mov xchg popa (bad) call rol push lret jns out movsb test jnp and adc cmp mulb xchg mov in sub cmp mov sbb test daa push std ret sarl sarb dec fisubl mov mov adc fwait leave sti dec mov lahf mov sub loope sarb out fiadd cmp pop xor inc rol xchg jmp jo push hlt test sub js lret fidivl iret jb lods nop inc ja adc ja add and mov lret ret pop ret cmp jmp call decl lret ja push out inc inc mov ljmp popf xorl enter pop test sub mov pushf (bad) movsl loope inc leave sti fildl (bad) lds mov (bad) icebp out bound or mov mov mov fidivr pop insb mov rol std jg and xor lds push lods sti or or mov (bad) adc mov rclb loop sarb mov dec or jbe mov lcall mov (bad) fldl push mov stc decl test into mov lea xchg call pushf mov mov call call cmp push inc mov fistpll mov sbb xchg add (bad) cmc es out xor lcall adc fstl adc aas inc sub mov ds jp dec mov sub and xchg ja jle pop xor and nop inc jp movsb gs pop loope popf jge sti or ss hlt sbb xorb les hlt lahf xchg sbb inc cmp stos into insb scas mov aam inc or daa dec sarb mov sub mov mov out leave add push mov (bad) xchg sti test xchg lcall aad mov icebp mov scas mov fisubl iret mov scas in fadds hlt xchg ret cmp xor jg dec xor push dec popf mov jp and out aad lret aad jae push mov pop mov push fistp xor ret sbb dec fs pop fisttp and push and inc daa jns mov cmpsb std dec xor or mov cmp adc insb cmp add xor cmp inc out int xor loope sbb sti xchg mov jmp fnsave scas mov and cmpsb mov xchg loop xor mov fadd lea movsl inc pop pushf lea ja sbb adc or clc sub data16 testl push addl shl mov pusha bt bt cmc repnz pusha movb jmp lds inc jg cli negb rorl clc mov cs mov orb shr inc je push cmp inc outsl jns andl rcll push test andl pop dec ret ja jbe cli and inc stos aad xchg xor std inc lock push dec pop fldenv pop icebp dec jbe push cmp cmp scas andb aad (bad) jmp push les insb sub mov (bad) inc mov xor fwait test add mov and xor jle push hlt sbb cmp mov divl or and adc mov jg or scas cmp jl cmc push inc mov sbb dec pop xor insb lret mov cld inc enter jge jnp mov cmp mov lods jge dec sbb daa sub arpl and xor xchg pop lret push hlt add pop (bad) mov pop scas mov jnp inc jno mov aam push jne mov xchg outsb add add ret ss test push int3 xor cmp sub inc fidivr add shlb mov pop rclb fbld stc sub mul cld xor leave js call mov jmp outsl in add out push mov mov mov leave mov mov or pop popl or gs add jmp mov out adc ljmp jo sub js and jmp das jbe lds jns fcoms push dec leave xchg lahf push cmp inc or pop daa test pushf lods jge pop mov aas (bad) test inc push adc (bad) ds sub daa sahf push cltd xor cwtl push icebp (bad) jne fcoms or sub mov (bad) int3 cld xor adc jnp out stos in adc lret push lods xor push es mov push lea jmp push pushl lea call pusha pusha add test pushf cmpl pushf push lea jne lahf push mov movsbl movb mov movzbl mov lea bswap push lea pushf call jge mov (bad) push inc mov not mov cmc std jmp ja sub jae inc jnp fld cmp adc mov cli loope (bad) aas pop insl mov xchg testl je int3 call addr16 jb sub xlat and sahf test dec jmp or adc mov ss call xchg cmp hlt bound push cli popa test fcompl xor andb arpl mov ljmp inc enter addr16 cmp sub test (bad) xor mov not push call xchg mov movsbw shr add mov mov jmp call nop jp cs push inc ret sub mov (bad) sub pop push negl and xor out push (bad) jno popf xor xchg jae and cmpsb push pop cwtl mov test fwait sub push lods aam fsubrl imul (bad) dec rol popf adc pop out mov xchg mov aam mov mov test xor mov insl cmpsl push mov xor pop dec sbb je jb test sub adc xor shlb movsb sub pop cltd cs out push outsb (bad) mov or div pushf das dec rorl xor mov cmp sub rolb mov call add pop ret and push inc stos xor hlt lods or dec hlt es xchg outsl inc jne leave push popf popa sbb loope mov cltd jno jb pop ss popf xor sahf cmc add inc push adc xchg gs sbb xor xor ret outsl jne push cmp (bad) sar pop pop rcrb jmp jge cmpsl cmp aaa popa mov in ret mov jg sbb or cmpsb jbe int xchg jg movsb aas sarb pop sub mov out jb xchg in mov mov xchg cmp ret mov bt mov dec mov test cmp call mov lea call lea jb xadd cwtl mov test sub not bt (bad) (bad) mov btc stc add pusha movzbl pushf cwtl setb not setns lea setns lea jmp insb mov inc pop xor xchg push pusha xor xchg lcall stc (bad) push mov pop rorl repnz mov ret sbb sbb outsl or rol jecxz xchg push mov xchg sbb (bad) je or (bad) dec add add push add lcall pop mov into mov int3 loopne js mov mov fisttpll popa add stos call (bad) push push loope xchg push icebp dec pop push jno bound sbb out mov cmp call in repnz inc stc mov pushf mov sbbb fcoml cmpsb cld push fs adc push sahf pushf loopne (bad) mov jmp rorb adc dec ljmp cmpsl xchg ljmp (bad) dec xchg (bad) imulb add mov rcr ds fs aaa movsl adc add adc nop adc inc les dec shrb jns mov and lods adc repnz aaa lret fs jno mov fdivs js je in mov xchg dec mov lds test sbb outsb add and test or sti test sub and xchg lea call movl pushf pushf pushf lea jmp ret pop (bad) sbb push inc lea hlt (bad) mov loop out stos call add js pusha inc vpandn test mov mov cmc or sahf mov outsb mov and mov pop push mov sub jbe nop lahf popf idiv lahf and cld sub in shlb or jle add fisttpll enter dec xchg lahf sub test lahf (bad) sbb push xor test stc sub sub pop scas xor aaa cwtl sub mov (bad) jge out adc push inc pop dec in push inc mov rcr mov dec (bad) mov push cmp (bad) xlat or in stos xor mov push push (bad) les dec (bad) ss fwait xor (bad) in insl lds sbb dec pop mov dec inc pop dec dec lret xchg mov (bad) jno pop xchg (bad) dec pushf push inc xchg daa in movb js insb notl js imul jmp push test mov aas iret out or push lods adc adc jnp dec adc adc jns pop inc push mov bnd mov js push dec push fbstp je cmp insl lcall or add ficom jmp (bad) popa (bad) je icebp stc xchg dec or sbb push jge mov jmp xor movsb cmp sub sub mov jp or xchg gs in je out (bad) outsl aam push fwait mov push iret test loope jbe data16 lret rcll ret mov inc xchg jo sub hlt pusha (bad) jle sub add aad add into (bad) out std push inc jns push mov xchg pop fwait outsl pop and dec or push scas mov negb push popf in (bad) cmp imul add je or sub and push cmp outsl lcall pop fs jp rorl dec int3 fisubr add sub mov xlat mov xchg inc lods imul sti push and and mov sub add pushf sbb push inc lock shrl mov mov push hlt js bnd mov push and cmpsb or mov repnz mov mov and jne les lock jne bswap sub sar aam rcr shr mov clc add push pusha push lea jmp sub pushf call bswap mov pop jmp clc test pushf pusha pushf lea je mov bsr bts clc add clc mov stc jmp adc push inc xchg insb or mov inc loop (bad) lret mov sub dec call out int3 mov fdivr inc fidiv js insb jbe fs clc push scas loop sahf scas xor xchg xchg je mov aam rcll adc mov and fsubl mov xorl popa divb loope out not inc cmp das mov scas das jecxz rcl pop test movb fdiv mov sti mov stc clc xchg mov stc pop mov xor imul das jbe outsb adc mov and ss aam or setns push bsf push xor push movb shr mov setl movzbw cwtl bt mov call mov call adc push inc es mov jecxz adc jno cmc dec incb mov je mov outsl test jno addr16 push or pop dec fs cmpsb cmp push jge in lods insb cltd ja xchg popa jmp int3 inc sbb xor imul stc cmp jp dec sahf pop xor or jbe xor jmp inc xchg fstps movsl push loope jl jbe add and push pop lret xor mov push std mov sub dec inc loope mov push or ret push (bad) sub lahf xchg xor xchg mov sbb add jns lcall xor shr jmp repnz rclb test rclb pop jno mov cmp fistp mov aas aaa mov sub lods aaa cmpsb rcl imul movl xchg fiaddl mov push inc icebp lcall xor add mov xor fldl add xchg addr16 jnp mov fdivrl fidiv mov insb lcall jb or mov call inc dec das stos sahf dec lahf jmp cld loopne mov mov repnz or stc mov into or adc loope cmp pushf lahf loopne (bad) call mov lcall jae in sbb jbe and fidiv bndstx cmpsb jg dec (bad) lock mov jg dec dec mov add xor xchg stos xor cmp movsl mov leave push jno jp stos pusha mov movsb outsb mov (bad) (bad) cmpl pop sbb test pop loop dec jbe adc fidiv jle pop rorl in adc jecxz ja insb cld clc sbb imul addr16 not rep sete seta push mov call bswap lea pop jmp fadds int pushf or aam (bad) xchg jb dec sahf pusha (bad) cld lcall (bad) out jns popa mov dec jp outsb incb cmp stos pushf in sbb xor cmpsb cli or test mov (bad) ret (bad) aad jbe push xchg test jg mov sub je sub add push dec js lcall sub lret inc arpl push sarl scas jge mov aad xor push (bad) movsl jge sarl cmp loop data16 fidiv sbb aam loop pop adc loope stos add mov or add pushf cmc cmc call lea bswap lea mov not pushf mov lea pushf lods pushf call cmp cmp jmp icebp sbb or test jmp lds push stos adc pop fwait xor arpl insb cwtl mov movb pop mov jns mov nopl faddp popa mov or mov imulb fimull jbe movsw mov xor in in push jae das loope sysret push dec pop cwtl and push shrl push mov add sub cltd or sbb imull frstor inc cld aaa jne xor add and push es dec push adc push (bad) sti push inc cltd repnz adc cmp in clc jl xchg add insl cmpsl push adc cltd adc sub pop xchg pop mov mov mov lcall pushf cmp xchg pop jno pop mov popa test clc sub pop mov mov and test loop mov lods push scas xor sub and outsl aam jl (bad) adc push add inc rorb sarl and add sti test xchg xor or adc ret ret scas push pop sbb and jle sbb in in add xor lods scas sbbl sbb inc sbb mov pushf fisubl popa inc loopne or or imul loopne,pn xchg lock cmc jp push loopne cwtl je data16 mov bound xchg scas mov xchg jne in fst jmp mov mov pop (bad) or fcoms mov rolb sbb aas ds insb roll xor mov pop mov (bad) repz lret (bad) les xor jmp xchg add or imul mov inc popf test inc popa test (bad) and out les sti xchg push shrl xlat imul jae mov loopne sub dec ja cmp aam (bad) or dec lcall lock imul add adc das jb mov fwait in xchg cmp repnz jg xchg mov sub mov pop fcompl pusha (bad) loop lret repz (bad) stc leave sahf js insb push mov dec dec pop jle es jle cld lods pop or cwtl gs ljmp leave sub in adc add xchg stos leave pusha ja shl cli and lds inc rcrb icebp dec xchg clc cmc call pushf pushf pusha mov pusha push mov pushf lea call pusha push pushl pushf mov pushf push pusha movb lea jmp lcall aad push in mov in cld pop call mov xchg insb decb int3 sbbl pop lods and push nop inc mov dec pop out repz das std adc stos cmp add xchg aam dec mov push jge mov flds inc inc cmp mov in mov ficompl adc add fs pop mov insb in push dec mov test insl mov idiv mov dec and mov push push pop stc sub (bad) push subb shlb inc sbb inc cmp jge aad imul and push ss loop jo inc ret push stos mov lcall mov iret lea leave sti scas insl fstps push mov in mov mov cmc cmpsb mov xor clc cmpsb push pop or xchg test jg or sbb sub or pop repnz xchg xlat mov lret push in movsl outsb push ja sub (bad) cmp jo es dec inc js mov andb lods mov sar test repz mov jmp loope cwtl rcl (bad) push sub aas cmp ffreep cli and jg push mov lods lea dec (bad) dec mov dec int3 jp (bad) push xchg sbb lret mov jns sub adc call rclb add push xchg icebp jnp sub cwtl inc cmpsl pop mov jb in (bad) mov and inc inc and std xor mov jae scas lcall in outsl mov popf jns icebp arpl idiv insl and mov dec push push inc hlt (bad) leave cltd jae test adcl inc pop in sahf jnp mov cmp rorb jle mov clc add mov cli in or xchg stos scas inc repz inc mov xor xlat pop sahf xchg and cmpl fcoml insl imul mov mov lcall in xor adc dec push mov sub (bad) mov or hlt mov vmread sbb shl pop jg enter push sub add dec or pop mov pop xor dec xchg sub mov jne jnp inc cld sbb mov inc mov inc dec shrb dec xchg sub sbb mov insb repz ror lcall cli es fsubs je,pt pop inc js dec sti nop adc (bad) loope or cld scas and mov dec fsubrl cmp sub push jne or jmp test add pop dec movsb bound insb dec or hlt adc or mov in lock pop push or mov (bad) addr16 mov inc lret int xor xor push movsl daa mov push cwtl mov in push fimul stos fmul dec (bad) or push fldl cmpsb addr16 ja int sbb in or mov and pop mov fdivrp mov ds mov jns decl or pushf in mov jg into pushf adc mov aam fcoms sbb xchg roll mov sbb pop dec lds add mov ds movsl or push dec sbb daa dec lea out mov (bad) dec outsb loop fwait jb std ret jg xchg fcoml cmp sub pop shrb (bad) in push dec out pop mov xor fwait push (bad) sbb fs cmpsl mov cwtl cmp ljmp fstpt pop cmpsb ss lods arpl sahf fiadd cmp outsb fstl or dec movsb repnz xor jmp sar loope lret or pop repz cmp movsl xchg jne mov mov or dec jge mov outsb mov (bad) sbb xor sbb adcb popa fldl add outsb pop xor mov jl adc out fnsave mov pop jb out mov test js cli sar mov or jge out mov mov xchg xchg packuswb (bad) cltd jecxz int3 xchg inc out xchg xchg cltd pop lret mov popf movsb js lods pop pushf push and inc mov mov sbb (bad) mov pop cmp xchg cmpsb fstps add add test add fs ds xor and sbb nop pop pop dec (bad) xlat cld out das mov push mov ret out (bad) icebp push cltd xchg (bad) inc xor jecxz cwtl cwtl aad push jae (bad) in addr16 fsubrl inc popf (bad) xchg push test fdivs push and add adc jecxz dec (bad) out cmp mov int arpl mov jp mov rcr push movsb rcrb cmpl jp movl mov aaa xor lods add imul pushf fwait xor int3 das sbb scas pusha test cmpsb div gs mov int3 pop and aaa xor mov jbe insl call outsb mov xchg ja mov or push inc pop lods lcall adc roll daa adc push shll in jmp jne mov call scas test mov mov stos scas mov das fdivrs push cmp cmp push loopne jmp loopne fisubr (bad) out mov divb lods in xor add and (bad) push stos xor xor inc testl sbb push cs lock int (bad) jbe ret pop insb das aaa add rorl mov or jg js popf add dec (bad) lret dec or loopne in adc ret mov and xor pusha jmp popf xchg inc push mov mov inc xor arpl lret mov xchg loopne or arpl out aaa je jp dec sbb dec lods cmc sysexit iret dec fistp pop xor cmpl jae pop push test fimull imul adc bound mov fistp mov je sbb daa ljmp mov in pusha fs scas nop pop out cltd and aad imul nop mov es adc lods push arpl pop loopne adc mov jecxz cli inc jp push test sub pushf fwait xor stc ficomp pop ret les jg lock sub push pop loop push mov (bad) cld and mov loopne out xchg lds xor cld iret lret adc sub stos xor mov ret (bad) repz loop jl (bad) ficoml call mov imul jnp inc xor jge mov lea fs push scas add mov jb lahf push out and loopne mov stc jmp pop leave ds imul lods or fimul mov scas and jecxz shll push or mov pop dec sbb inc push call mov xchg test xor insb mov sarb xlat fs dec mov mov dec jae ss xchg jmp dec popa inc adc jbe xchg scas in push scas dec out (bad) cmc cwtl test xchg mov cmc test or (bad) xor jp or cwtl dec test jnp gs sub addl or adc cwtl fs adc hlt mov movsl int paddusb adc cmpsl test jle (bad) pop and psubw (bad) imull or iret jge inc std incb (bad) push mov adc xor fnsave out loopne mov std inc (bad) mov cmp jmp cmp mov mov cld add add pushf push rorb mov jmp out rcrb dec loope pop pushf mov push cmp imul push das lea or jns and insl lods and mov mov jne ss mov jnp jnp xor adc ljmp ljmp data16 jge rolb mov loop imul fcomps inc jge pop outsb in data16 mov test sub faddl fdivl imull cltd mov std gs arpl mov cmp sub icebp sbb adc jge jnp mov adcb in mov enter jg inc fsts mov xor and (bad) sti (bad) in in rcrl insb mov in loopne push sub dec lods sbb cmp sbb jnp insb pop into cmp fwait cmovg mov sar dec daa rorb pop and pushl mov sbb stos push in cmp push inc push dec dec xchg aam xchg loop jl loope add push mov add lods sub repz aaa jne xchg pop pop cmp stos sub sahf nop imul pop movl sbb jg bound outsb rorb sbb and fisub pop test movsb mov sbb xor faddp lahf ja fsubl ret cmp or xchg xor fisttpll push pop xlat scas and loope mov repz cmp ja je add jp adc add stos lock mov mov xor iret lcall (bad) xor inc and cmp in dec pushf adc push and xlat clc mov inc inc add aad jo mov mov cwtl mov jo stos mov fadds push hlt lret out inc (bad) jne cmp sbb (bad) and add mov push fcmovnb repz insb pop rcr test aaa cs jecxz mov add push mov ret xchg enter fidiv pop and jnp flds fcompl add jnp in scas sbb dec clc or negb push adc adc mov in mov mov mov jbe push xor cs aad jmp mov pop inc or adc outsl mov imul pushf into daa sarl and lahf loopne das insl mov imul inc repz outsb out imul xchg fchs stc push out jp add xlat cwtl or mov (bad) sub movswl push or push imul xor mov pushf push push mov lcall (bad) mov lock mov add std into ret mov and movsl mov push enter int push inc rcll jns xchg ret sub jnp push ljmp ja test imul sbb lcall popf fsubr les repz popa or jae outsl dec mov push into data16 lods dec out sbb or dec push and lock xchg or (bad) (bad) loopne mov sub jo dec fs mov outsb inc hlt (bad) in add cmp mov mov jecxz sar scas aaa add sub std dec iret adc sub into inc lea push dec fistp or leave mov jge mov sub ja inc or or jne pushf cmpsb mov int3 xchg mov inc lret pushf mov adc movsl push pushl mov (bad) loop xor cmp mov and mov div mov ja mov push data16 jno enter adc sub rcll xchg pusha sbb push jge fldl cli ds dec stos mov dec out aas jae lock push lock jle pop xchg hlt fimul pop push pushf ja sub lea cmp in cmp adc outsl jmp test jbe adc in mov add imul aad mov (bad) hlt std sbbl push shr mov icebp pop sub out adc push mov sbb jno mov dec sub shlb dec or cmp arpl mov jns js cs or shlb jns shlb mov stc stc aaa cmpsl xor xor xchg mov (bad) jp shll aas ret jp mov jecxz fcmovnb (bad) negl cmc mov mov pop js pop sub sub mov les jbe add adc mov stos dec stos cmp pop sti mov arpl shrb test lret or pop jns sub jb push dec js sbb push xor xor outsl stc popf (bad) and mov ds lcall xchg xchg dec or or dec push mov add mov cmpsl jns out add cmpsl xchg sbb fdivs test and insb lahf fwait mov imul push aad scas fidivr adc mov adc sbb leave cmp jmp ja adc cmp push cmpl shlb push adc inc mov sbb cmp repz or mov daa rcrb dec sbb mov lds aam sbb enter dec loope fwait pop repz ret in es mov xchg or jae mov mov add dec mov in cltd (bad) cmp inc stos or dec push loope adc in out adc data16 dec dec jg int3 mull vmread (bad) adc mov sbb inc push aam cltd mov pop and sbb out lret cwtl ret sub jo hlt mov mov sbb cmp pop add outsb dec mov sub mov lock iret adc popa cmp mov or xor stos mov dec add int3 mov loop and out adc mov out stos xor fstpt jne insb mov sahf adc lret gs (bad) leave xorb xor fnstenv mov bound mov push loopne addl lods (bad) arpl and add int sbb out lods sbb xchg add sub mov notb hlt loope dec insl movsb mov jae and add inc cwtl sbb sbb (bad) scas pop ds push movzbl mov sub in add imul je lock jb,pt add adc in (bad) arpl add inc sbb out outsb loope mov sbb ss popf jecxz pop mov inc dec lds inc dec repz into mov pop or sub jmp and cmp jl in cmpsl sub jg adc bound testl out clc (bad) in mov (bad) xchg lock add push fbld pusha scas cmpsb in add ljmp adc jmp pop lahf xchg jge int3 jns xor cli mov mov adc push (bad) dec iret popa push push imul sub cmpsb repnz fucomp push out add push or outsl xchg pop je add scas sub jno inc andl ret outsb mov shll jbe inc or popa aaa orl arpl sbb add or jns testl clc jae push jno mov dec ror jl cmpsb xchg cwtl and les dec add adc inc and fsubs jmp (bad) fistpll push pop stos sbb in push das idiv jge dec adc or cmp xchg sub (bad) push popa mov cltd pusha xchg jb mov in cmp jae add outsl lret outsb mov sbb es (bad) out ljmp dec jno or mov pop jg pop into insl pop mov jl imull mov repz lea pop jae fcoml cwtl xchg je push push insl sti test ret xor add outsl (bad) jne adc add popf ret (bad) scas mov mov repnz fimul mov or (bad) pop inc into xchg add daa fidivrl push int3 xchg cmpsb outsb add pusha lea testl adc dec push cld pop roll clc pop and adc call sub dec sub notl out mov fwait (bad) push (bad) mov rcrl cwtl or fistp (bad) jbe xchg mov movsb lahf jns int sbb out push add cmp lahf pop mov sahf xor sbb pushf cmp cwtl or repnz hlt stc fist in sbb ljmp outsb repz mov push sbbl popl movb jmp lods xchg leave mov loopne notl mov aas or mov mov pop fisttpl arpl daa std test inc sbb (bad) mov jb dec push (bad) adc cmp jg jbe stos stos cld lock sarb (bad) mov js (bad) out xchg or lahf push cld sub or dec (bad) xor inc mov cmc add scas pusha rclb jae jecxz decb xchg stos fwait inc and test pop inc ljmp test inc std jecxz call jmp stos ss mov sub add es push fwait push or bound mov push es inc xchg cmp mov (bad) sbb int (bad) sbb push pop xchg movsl test or std or neg jle and (bad) fbld lds ja je xor pop fistpll mov mov outsb loop pusha pop movl pushf xlat (bad) repz ja fild ja (bad) repnz (bad) gs test popa jns test mov ret ljmp xlat das push cmpsb jecxz test pop movsl cmp pushf add dec adc insb push or fldt cs aad fwait pop add lret fidiv sti push mov lcall repz (bad) shll jg leave fstpl (bad) je push enter negb out lret xor dec xor mov rclb push lock add jmp cwtl mov psubsw pop inc add inc mov pop imul sbb and orl les mov cmp adcb jae scas dec adc xchg in and jp iret cwtl xor cmc and arpl test mov lret je test mov pop es lods dec bound imul test jb fmuls fmuls mov and (bad) mov xchg js lret (bad) lods mov mov sahf mov cwtl mov lret pop adc out lods outsb cmpsb (bad) mov sbb in push arpl (bad) mov shll xor inc inc fimull jecxz pop icebp stos dec and push js and dec outsb ret jnp out es jge xor pop iret adc pop fcmovnbe outsb push adc lret gs sbb ds xor (bad) mov mov xchg inc cmpsl stos inc cmpsb fbld out mov cld add pop push leave int3 jbe sbb mov add (bad) mov or into pop mov add je ja sti xchg adc sub (bad) lret fucom dec das jne ror into and mov fldenv int cs and mov mov mov (bad) mov pop sbb xchg pusha repz outsl addr16 outsl (bad) add ja mov (bad) jns std mov fstps mov mov adc sti js clc mov test mov sbb adc insb orl add mov mov or mov lods mov lcall dec jmp inc cmp (bad) test addb lds push rclb push out jb aam xchg lcall dec and sub push sub mov inc shlb pop stc push push mov in sbb sbb shrb inc fs mov and adc popa cmp pop adc call ret cmpsl shrw sub fwait xor jnp push in cli mov mov fdivr cli imul lea pusha notb loope lods cmp pop in test push icebp outsl ret repnz insb cld mov dec push mov (bad) push jb bound and scas cmp sbb xchg pop mov or cltd add mov iret imul sbb sbb sub sbb sub sub (bad) cli (bad) mov mov loop add (bad) mov in lock xchg push dec cmp scas push pop dec xchg or (bad) dec jb loope push loop or jbe clc dec dec nop sarb cs pop pop subb out js adc rcl pop data16 push in out mov lds jl and pop stos sbb in pop in push dec push outsl mov push fldl adc add xor stos jle (bad) daa std cmp ja push lea pop rorb fwait jle (bad) lock aad cmp das or dec cltd int lcall ret mov das outsl xchg popa cmp add xor loopne (bad) lret jae outsl dec sbb fistpll mov sub mov mov or pop popa movb xlat pop (bad) and and sbb push pop ret fcmovb das ljmp xor lea cmp inc andb orl mov into push rorl and fwait sub ss cmc pop call lahf scas pop jmp jmp sub mov xor fcompl adc bnd or dec pop int3 add lods dec inc pushf and jnp out jne xorl pmulhuw ds jmp cwtl pop les enter mov pop cltd adc insl cmp dec cmpsb lcall mov shlb je out cmp cmp cmpsb or repnz daa sbb mov pushf imul lea dec repz and mov or mov scas adc in pop mov fstpt fwait mov std mov aam mov add jb xchg and scas push push mov bnd adc movsl in push scas sahf push mov push xor push clc xchg pusha mov or mov sub pop stos xchg in rcll jns icebp inc and iret test std std jl mov dec sub mov mov loopne mov (bad) and adc mov jne or adc pop insl jne push jmp inc sbbl test imulb (bad) adc pop (bad) stc adc sub inc pop lret pop stos jns xchg cs cli popf mov popa mov rclw repz addr16 xchg fildl adc lret add mov popa mov outsb mov push mov jle push add jnp and and push cwtl mov jae pop (bad) mov cld lea loope or push and insb lds inc cmp dec out daa andl out pop popa mov call adc ljmp stc (bad) stc pop ret push pushf xchg movb mov jmp test lods sub and lods fcomps shl test or mov (bad) aam mov add cli jle or pop inc sbb inc notb inc fmuls mov fsubs les cvtps2pi add sbb push cs dec fldenv mov aad cmp subl inc or pop dec xchg pop aaa iret push xchg inc mov sub fwait fs add sbb inc push jno (bad) int3 loopne push inc pushf or adc cmp jg inc push sub notl fdivs les std and mov push mov movb pushl ret and not sar inc add jmp jmp jmp push sub push test xor call pop movzbw movsbl lea pop jmp nop cld jns and inc inc push ss (bad) xor nop ds movsb push shlb pushf data16 jbe push mov add mov and xchg jnp xor ss cltd mov sub (bad) dec add in dec jo ret daa xchg imul and lret xchg jmp lea das push and pop push jmp xor sbb enter sbb push push add jmp mov scas ds or mov lods add add mov insl leave (bad) in adc lds sbb fucomip push js dec xchg out je jae jns in nop aam out cmovb cmp add jb push lods fmull (bad) movsb lock lock rolb pop dec and mov inc rol (bad) sbb mov enter sub adc js int3 xchg mov xchg repnz jb push or push jp xchg mov fmuls pop pop out (bad) pop lds push aaa mov and loop faddl loopne cwtl aam lds inc pop jge adc and in push cmp mov sub add and call pushf call xchg lock xor (bad) hlt les bound fs add push lahf lahf jmp adc test ljmp jp enter lock pushl lock lds gs sub pop add inc lods cmp mov jl mov fstpt in daa mov fstpl sahf imul adc fisubr xchg jmp xchg stc jb cmovb stos js jo pop sbb add mov mov imul in sub jbe add sbb int3 dec (bad) (bad) int3 rorb cld jp fisubl adc loopne loope dec xlat aas dec dec leave jo imul xlat (bad) cli dec mov imul cmp and jmp mov (bad) sub cmovb pop ret cmp popf mov sti fsts sub js push (bad) mov push data16 inc cmp (bad) faddp (bad) push gs je push pusha in xchg leave inc faddl jne stos push jnp pop mov cmp or cmp (bad) jns (bad) jl sbbl jne cmp lds test shrb sub pop popf jns jp sub arpl xchg gs push iret (bad) or jmp stc xor pop int3 add adc sbb (bad) fsubs aas inc pop lret test ret inc mov fnstcw cli dec pushf test or shlb cmovb repz mov mov xchg icebp push (bad) in mov iret sbb mov pop push xchg pusha into pusha scas push sbb movsl pop xchg pop ljmp pop in xchg mov (bad) fucomp in pop mov cmpsl mov test jp loop and fbstp aam (bad) xor mov test arpl and cwtl inc inc outsl mov loop (bad) repz or adc aas push cwtl sahf (bad) dec stc inc adc js lret cmp fs mov dec sub inc and push xorl push out leave test mov fbld push mov aam or in or sbb cmovb enter dec mov or fcom out inc daa mov negl mov jno mov hlt and xchg (bad) xor xchg ss clc adc mov scas movsl add dec xchg fnop sarl inc sti lods inc les xor mov sub shrb mov into mov push pop jbe pop xor push mov xchg cmc jae jno cmp lock pop aad lods fs add lock dec dec xchg inc mov data16 pop ret (bad) dec int3 (bad) aad pop jmp jecxz ljmp stos pop xchg inc xor inc addr16 pop scas lret repz test pushfw popa sub add ja jmp (bad) cs cmp and add pop pop in add orb daa mov mov push and mov stc (bad) jmp call loop int and inc mov out psllq repz pop lahf aas mov inc lods lods pop aaa jecxz lods movsl addr16 stos int xchg inc cmp ficom mov cs les out sub mov xchg enter and test or gs xchg xor mov pop mov jne es jl sbb push aad dec shrl cld cmp leave nop aas adc pusha mov mov mov out aaa xchg xchg cs lds push aas xor xor xchg popf movsl enter ss pop (bad) pop movd insl ljmp adc das (bad) or push test cld jo or sbb aam cmovb mov (bad) sub pop outsb adc repnz enter lcall xchg outsl sahf movsb imul test push repnz push push pushf ss lret jb loopne cltd repnz push insb jb sbb test imul fisttp test add jmp jns stc and sahf push outsb scas pop cld popa jecxz or rolb push ss dec mov mov neg jl xor addr16 js lds fldl sbb pop mov jg ret pop sbbl mov xchg test jnp or stos jmp push rorl movb push not mov movb call jmp lods (bad) icebp lods push cwtl (bad) pop xchg mov or sbb lods adc rcr icebp lods adc jge dec and jmp bswap mov pusha cmp call dec pusha lea jne add sub not mov cmp push bt add jp cmp pushf lea ja mov bswap pusha pushf mov movsbw xchg movsbl mov movzbw bswap mov movsbl not mov mov mov call push pushf lea jb test cmp pusha lea jae stc xor pusha ror mov test xchg shrd mov call mov call aas pop aam sub inc xchg or lcall or test aad fldcw stc xor pop lahf mov adc nop stos out lea mov push (bad) sub jo mov mov jbe jne not ret mov in jnp pop ret mov repz call cmp inc jle js xchg mov (bad) jnp cmp aas das ljmp dec ret add add mov ljmp adc clc ffree lds ljmp das sahf out cmp or pusha pusha jmp pushf mov call cltd imul dec inc sub gs jno popa test inc push adc (bad) cmpsl jg fwait ljmp outsb jno outsl mov cmp sbb pop lea popa mov push ljmp daa mov push or mov jmp lods mov and (bad) sub stos divl adc xor outsb jno or dec fs dec icebp repz ret mov ja (bad) js mov daa lods sub hlt faddl inc pop movsl inc je or sbb and lcall imul lret bt mov movsbw test pushf mov pushl cmp pushl mov push call push cmovb cmpb mov lcall shl mov lcall sbb call leave (bad) idivl adc push lcall fwait jae mov arpl inc mov inc mov jecxz sahf push iret sub xchg hlt add pushf bnd lahf jnp mov negb fldt into mov scas sub or sub outsl jbe adc jle int lock cmovb jge pop add mov fbld jle in pop cmpb mov push push xchg sub lods push and popa push xor cwtl scas aad pop ljmp insb dec mov sbb fwait (bad) jge loope dec in push je adc xor outsb add jo aad inc mov mov xor je (bad) jnp adc ljmpw (bad) repnz xchg imul cmp sub pcmpgtd add mov mov mov pushf mov pushf mov call pushf pushf inc pusha decl movw pushf pushl jmp mov pusha jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp dec btc or mov push add mov clc add jmp call shrd inc mov jmp jne push mov pushf lea jnp pusha movb mov mov jmp mov stc call mov pushf lea jmp lea jne or jmp bt xor push jmp shl bt shr pushf pushf bt call neg shrd movzbl shrd sub jmp mov jmp push movsbw pop lea push jmp lea jne call clc lea jno add pusha jmp xchg cld pop mov pushf cld lea call xor cmp xor call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp mov push push movb lea jmp bt add mov push pushl movl mov push pushf mov lea jmp pushf mov pusha jmp push xchg lea mov mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp pushf pushl pusha mov jmp mov call or movl stc xor lea jae pushf inc call pushf pusha movw mov push mov jmp movb jmp jmp push pushf mov pushf pushl ret pop pushf rdtsc shl pushl popf pusha mov setl pop call movl mov call pusha pusha pushl popl push movw movw lea jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp movl mov jp pushf mov pusha jmp jmp clc pushf clc add jmp jmp pushf mov push lea jmp mov pushf pushf push lea jmp pusha pushf pusha pushf popl call shld mov jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call lea jne push push mov pushl push pushf lea jmp mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp mov call mov call inc dec movsbw lea xor movzbl stc bt pusha call pushf push pushl popl pushf mov movb lea jmp mov jmp cmp sub call mov inc clc pushf neg call stc bt sub jmp pushf call stc call pushf jmp sub call pusha mov jmp call shld mov movzbl mov bt stc pushf call stc clc ror stc sub jae sub test pusha stc xor mov sub jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp call or mov push pusha lea je call cmp sub pushl cmp push cmc sub call pushl popl mov pushf pushf lea jmp mov call cmc cmp add call mov pushl mov push pushf mov push pusha lea jmp mov not mov pusha mov jmp daa mov dec mov pusha jmp jmp push push movb pushf mov lea ja pushf mov pushf push jmp call add movw pushf pushf pushf popl pushf movw call mov push movb push lea jmp pusha clc mov bt clc clc push add movb call movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp push mov pushf mov call jmp jmp movsbw bswap mov lea mov js pusha lea jmp pushf neg cmc call push pushf push pushf pushl popl pusha pushf pushf lea jmp pushf mov jmp mov mov pusha pushf pushl ret mov call pushf popl jmp call pushf mov pusha pusha mov lea jmp add cmp cmc std pushl popf push lea jmp mov push push mov movb lea jmp call mov pushf jmp call push pushf mov pusha pushf mov jmp add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushl lea jge push mov call test stc bt sub call cwtl mov pushf mov mov pusha pusha mov push push lea jmp pushf stc sub call ror clc clc call mov jmp push lea jp pushf pushf pushf pusha jmp mov push mov pushf lea jmp mov mov pushf mov pushl push pushl lea jmp mov push pushl ret pusha mov push mov lea jmp push push inc jmp pushl mov pushf mov mov jmp mov pusha push push pushf mov call mov jmp call jmp mov pushf mov mov jmp movb pusha jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp bsr inc mov test add pusha pushf pusha lea jmp bt bswap lea jae stc xor bt pushf sub jmp pushf pusha mov mov pushf pushf lea jmp add call clc test btr rdtsc call jmp shrd not mov stc bt stc add pushf mov jmp mov pushl mov mov pushf mov pushf lea jmp mov movb push pushl pusha lea jmp inc push push mov pushf lea jmp inc setno neg pushf pusha ror call jmp call mov mov push pushl movb lea jmp pusha mov pushl jmp cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp sub stc sub jo push mov shr pusha call jmp mov movb push push pushf lea jmp call pushf popl call push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp push mov call bt xor movl jmp movzbl lahf lahf mov call pushf popl jmp pusha pusha lea movl jmp call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp bsf bts rol mov jmp call jmp daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf movb mov movb pushl lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp btr daa mov sub shr rcl mov call mov pushl call call pusha mov movb mov mov pushf lea jmp push mov pushf call mov push mov lea jmp call call add clc clc pusha shrd pushl mov call jmp call rol movzbl push add pusha pushl inc call bt shl sub mov add shr add mov cmc call pusha sub jmp cmc jl daa not notl aas mov push stc test sub jmp mov pusha mov jmp pushf jmp mov pushf jmp pushf jmp pusha mov call call jmp movl pushl popl pusha pushf push lea jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp call cmp sub call call push mov pushf pushl mov pushf pushf movb lea jmp adc push jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp mov movb push lea jmp call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call pusha push pushf mov mov push call mov jmp pushf pushl call call and lea jno push movb pushf mov call mov pushf lea jmp call mov push push lea jmp pusha mov call push push movb movb mov pushl mov push jmp dec stc rcr ror btr lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call movw movb movl pusha jmp push pushf pusha jmp mov pushf pushf mov pushf pushf mov lea jmp mov mov push pushf lea jmp push mov pushf pushl mov mov pusha pushf mov mov push jmp mov pusha jmp bswap mov neg adc sbb mov pusha shr dec call call call movzbw mov cmc (bad) icebp add loope dec add mov adc add les pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp jmp add pusha movb pushf lea jmp add pusha pushf mov movl call pushl popl pushf pushf lea jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp pushl add pushf lea jo push pushf mov mov lea jmp cmc cmp shr jmp call push call ror aad xadd ror mov adc bts jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov push call mov pushf lea jmp cmp stc add pusha jmp jmp call mov call test movzbl call jmp pushf lea jnp push pusha pushl push pushl ret mov call call jmp mov call jmp push push push pusha mov movb pusha lea jmp pusha mov call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp mov pushf mov lea jmp push push pusha pusha call movsbw mov pusha pushf mov jmp cmp sub call push jmp cmp mov cmp add stc clc stc movl mov movb sub call cmp shr pushf movb mov push pushf popl call pushf jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret jmp mov movw pushf lea jmp mov push pushl mov pusha mov push jmp mov pushf pushl pusha pushl lea jmp inc pushf clc bt add jmp lea jns pushf mov call btc mov call mov pusha push lea jmp jmp movw mov pushl mov pushl lea jmp pusha mov mov call pushf pushf mov pushf lea jmp movb mov pusha pushl mov pushf call lea jne stc push stc sub pushf call add push push pushf call jmp divl push mov push mov push jmp push pushl mov pushl pushl pusha pushl ret pusha push movl call pushf pushf mov pushf push push lea jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call bsr neg adc notl dec mov cmc call jmp push pushf popl pusha mov mov pushl popl push lea jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call pushl popl push pusha push movw lea jmp stc mov pusha call movb call mov pushf lea jmp jmp mov push call pushf pushf popl pushf jmp cmc pushl popl test call call jmp bt xor mov push bt cmp bt sub jmp call movw pusha pushl popl push movw lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp pushf lea jmp pusha xchg call mov pusha movb mov pushf pushf mov call jmp pushf mov mov mov pusha mov call pushf jmp push pushl popl movb pushf movl push lea jmp call mov cld call push mov pusha mov push jmp ror add pusha mov mov call call mov jmp jmp pushf mov movb pushl pushf lea jmp mov pushf jmp pusha pushl mov jmp cmc xor stc stc mov bt test stc add pusha jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushl popl push pushf lea jmp push call add pushf mov mov pushl lea jmp jmp stc cmp mov sub jmp lea jo push pushf mov jmp mov push push jmp movb mov pusha push lea jmp push jmp movw mov pushf pushf pushf popl jmp movl jmp clc add push pushf clc neg call mov mov movb pushf jmp stc add lea jno mov pushf lea jmp push movb call push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp sar add xor bswap rol movzbw mov call push push mov push pushf lea jmp bt clc test xchg cmp mov call btr dec shl bt mov stc test add call shld aam call call rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp bt ror bt clc cmp sub cmp test cmc mov bt sub jmp pushl popl push pushl lea jmp add add lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp call push mov pushf push push mov call push mov jmp mov mov pusha mov push mov mov pushf mov call call pushf mov jmp xchg jmp jmp mov pushf pusha pushf pushf popl movb jmp movw movw mov call cmp bt sub push push jmp mov pushf lea jmp lea jge push mov mov jmp or mov mov (bad) mov lds mov inc les jo mov shrl pushl (bad) mov outsb (bad) mov xchg (bad) mov stos (bad) mov xchg enter (bad) mov push mov lcall pushl ret mov sbb mov cmp (bad) mov mov (bad) mov push lret inc les sub mov push lret jo mov hlt mov mov mov mov stos (bad) mov fnop mov push lret mov mov inc les xorl mov repnz mov mov (bad) mov shrl pushl iret mov fidivrl mov push lret push mov call (bad) mov adc mov cmpsb (bad) mov outsb (bad) mov push lret cs ljmp mov (bad) fnop mov push aam ljmp mov decl (bad) mov fwait (bad) mov jo mov bound mov mov mov sub mov inc les lods mov ljmp mov pushl mov bound mov xchg (bad) mov bound mov adc mov fwait (bad) mov xorl mov mov mov shrl pushl scas mov rol mov sbb mov lret mov jmp (bad) mov cs call mov (bad) (bad) mov push lret xchg (bad) mov (bad) mov call mov cmpsb (bad) mov outsb (bad) mov jo mov and mov loop mov inc les pop lret mov loop mov lret mov (bad) cmp mov (bad) mov call iret mov (bad) mov jmp ret outsb (bad) mov bnd lret mov jmp mov push mov mov xchg (bad) mov bound mov and mov push lret in mov fnop mov or mov push mov (bad) cmp (bad) mov (bad) lret mov lods mov inc mov mov (bad) lret mov (bad) lret mov inc les push lret xchg enter iret mov and mov (bad) mov jmp ret mov mov xchg enter ret cmp iret mov fnop mov pop lret mov cmp mov outsb (bad) mov and mov ja mov sbb mov (bad) lret mov cmp mov bound mov mov mov ja mov cmpsb (bad) mov adc mov cmp mov bnd stos (bad) mov xchg (bad) mov mov mov fidivrl mov and mov in mov mov mov cmp (bad) mov repnz mov cmp mov cmpsb (bad) mov lret mov ljmp mov mov mov and mov jo mov cmpsb (bad) mov adc mov (bad) (bad) mov rol mov or mov cs dec (bad) mov bound mov ja mov mov (bad) mov hlt mov mov push mov decl (bad) mov mov mov stos (bad) mov bound mov xchg (bad) mov sbb mov in mov and mov xorl mov lds mov pop lret mov adc mov outsb (bad) mov xchg mov inc (bad) mov xchg (bad) mov lret mov pushl mov and mov (bad) mov call mov xchg (bad) mov sub mov xorl mov push lret push aam jmp iret mov inc les xchg enter ret mov loop mov inc les jo mov (bad) (bad) mov test xor test sub movb mov pushl movb lea jmp pushf popl pushf pushl popl pushl lea jmp inc clc shr mov sbb call movl jmp call cmp neg neg add sets xor rcr add rol dec add jmp call call xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp call jmp pushf lea jo popl pushf pusha movw lea jmp lea pushf movb pushl push mov pushl mov lea jmp mov pushf lea jns push jmp jmp mov pusha pushf movw pushf lea jmp lea jbe mov pushf lea jmp movb mov jmp mov pusha call call pushf mov pusha lea jmp bt sub mov mov mov mov mov push pushf lea jmp mov mov pushf mov pusha mov pushf pushf jmp mov call pushf xchg jmp push mov push mov lea jmp pushl popl movw lea jmp pusha mov call push pushf pushf push mov pushl ret cmc movb rol push call sub cmc add jmp jmp mov push movb lea jmp mov call xor neg movzbl cmc call pusha mov pusha mov pushl mov pushf mov movw push lea jmp movw jmp mov pushf jmp movb call call or call pushf popl call jmp mov call mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call test pushf cmc jmp btc btr cltd mov btc pop inc jmp push rol mov cmp cmc mov pushl call cmc cmc add call shl pusha mov push mov mov call jmp mov bt or movb lea je stc push pusha pusha xor pushf jmp jmp not pusha cmp not push cmc sub jmp bts shr pusha mov cmc bt sub mov test clc call pushf pushl popl movl pushf movw pushl lea jmp pushf jmp not clc bt not test pusha cmp and pushf movl jmp clc pushf ror push mov lea mov call jmp pushf mov jmp bswap call pushf pushl popl pusha pushf push lea jmp ror movb jmp pushf mov pushl pushf popl pusha jmp pushf mov call pusha aam add mov pusha call mov mov ror (bad) repnz call sub jmp bswap add lea push pusha cmp jmp movb jmp ror mov movsbw pushf mov movb pushf mov movb pushf call sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp push pusha mov pushl mov pusha mov jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call call pushf push pushl jmp stc sub cmp jmp pushl popl pushf push lea jmp inc neg mov cmp clc add push pushf pusha jmp pushf pusha mov movl push movw lea jmp mov pushl pushl jmp pushl push movw pushl popl mov movb lea jmp movw pusha mov pushl movw movb lea jmp pushl popl pushf pusha push pushf lea jmp pushf popl push jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov call call mov pushl lea jmp pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call dec add add add dec add add add bound add jnp add add std fadds add fiaddl add in add inc in add .byte in 