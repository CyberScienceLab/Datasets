shrb add add add dec add add add add add or add cmp add test add push sub add sub add sub add sub add add add popa add jo push lea add add pop add push sub sub add xor add add add adc sub add push or sub add push or adc adc adc addl add push je add add sub add push sub or push or add add adc xor adc or add add add xor or add add add push sub add xor add add add add adc add add add pop lea add add pop push adc sub add or or (bad) add add add adc lea add add jb add jo mov pop lea add add or or pop adc or add mov add push es add jo lea add add or or add adc add jno add push lea add add pop add push mov add push or add jo fwait add jo pop lea add add push adc push jb add jo adc sub add push je add sbb movl add jo pop lea add add movups push jb add jo adc sub add push je add sbb jo fwait add jo pop lea add add adc adc jb add jo adc sub add push je add sbb add adc add jo fwait add jo pop lea add add adc adc jb add jo mov add pop lea add add adc adc adc add add push mov add push je add sbb push push adc sub add push or add adc mov jo lea add add adc add adc adc jb add jo sub add push adc jb add jo add adc add adc sub or or sub add push or add jo add pop lea add add adc adc push mov add push je add add or or add jo or adc adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jb add jo adc jo adc jb add jo adc or add jo adc sbb add sub add add adc jb add jo sbb add add adc xor add adc add adc add adc add adc add adc add adc add adc add adc add adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc add jo adc push jb add jo or lea add add push adc pop add or add mov add push ficom adc adc sub add push sub add fiadd sub add add jo add jo add adc add or add push sub add sub add xor add add add add add sbb push add push add push or add pop add push sub xor cmp add add mov mov lea add add push or or pop add xchg pushf pop pop pop or add or push push add or or add sub push sub add xor sbb add add add add sbb push add push add push or add sub add push sub add adc or and add push add adc add jo lsl jo adc or push jb add jo push pop jb add jo push sbb add jo push sbb add jo push sbb add jo push sbb add jo push sbb sub add push sbb jo push push jb add jo push pop or add jo push pop or add jo push pop or add jo push pop or roll add push pop or jo push pop push jb add jo push pop (bad) dec add jo push pop adc add jo push pop adc add jo push pop adc add jo push sub add push add lea add add pop push add or add mov lsl jo lea add or push jb add jo or jb add jo or jb add jo or jb add jo or sbb add sub or add mov add add add je add sbb push sub add xor add add add add adc add jo adc or push jb add jo push pop jb add jo push sbb add jo push sbb add jo push sbb add jo push sbb add jo push sbb inc add jo push sbb jo push push jb add jo push pop or add jo push pop or add jo push pop or add jo push pop or roll add push pop or jo push pop push jb add jo push pop (bad) sbb push sub add push jb add jo push lea add or push jb add jo pop pop jb add jo pop sbb add jo pop sbb add jo pop sbb add jo pop sbb add jo pop sbb popa add jo pop sbb jo pop push jb add jo pop pop or add jo pop pop or add jo pop pop or add jo pop pop or push add jo pop pop or jo pop sub add push adc lea add add push add push add push mov or pop add push sub add sub add add add add sub add add push add add or and add pop add or add add add add or add sub add add sub add or add add add add or push add or add sub add add or and add add or add add add add push add or add sub add or add sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub sub add sub add sub add sub add sub add sub add sub add sub add sub add sub add add add add sub lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp in or dec push mov sti cmp fisub cmc pusha pop insb sti fisubrl sti fwait cmpsb jge mov dec and push in cmp lds push jns (bad) jbe sub add add add add add add add add add add add add add add add add add add add xchg add push push dec cmp dec imul dec and dec xor sbb dec insl dec pop dec jne jo pop dec sbb xor dec sbb dec sbb add add dec or dec pop dec pop dec sbb dec pop dec cmp dec pop dec sbb dec sub dec dec dec push dec jo imul dec pop dec outsb dec or dec cmp dec sub dec jns ss aaa dec sbb dec pop daa add xor dec jno js xor dec js add dec sbb dec push dec dec dec fs je sbb dec cs inc dec dec adc xor dec cmp dec bound add sbb dec dec dec push dec jae imul and dec xor dec pop dec outsb dec jl cmp dec sbb dec push dec and dec cmp dec sbb dec jp push dec pusha dec sbb dec cmovle pop dec ds inc dec dec dec arpl dec jno pop dec es sbb dec imul insb dec jae cmp dec sub push dec cmp dec jge add xor dec xor dec sub dec pusha dec and gs push dec sbb dec and dec cmp dec insl dec imul push cmovle sub and dec mov dec dec arpl dec adc dec sub dec jb aas dec push dec pop dec or dec outsl dec inc dec jl add dec addr16 dec dec lret add dec jo outsl dec jo add dec sbb dec cmovle jae dec dec adc dec das dec popa dec adc dec dec dec outsl dec and dec sub dec outsb dec pop dec push dec jp imul dec adc dec and dec es call add pop dec add dec daa dec das dec inc dec inc dec adc sub dec or dec pop dec push dec xor dec inc dec add dec addr16 and dec out xchg add pop dec inc dec sub dec cmp pop dec adc dec inc dec inc dec pop dec pop dec jo push dec sbb dec push dec popa dec adc dec and dec daa dec insb dec arpl dec and dec sub mov dec and dec jo jl pop dec imul aaa dec outsl dec je daa dec jl dec dec sub dec addr16 and adc dec push dec and dec dec dec sbb dec ds dec push dec cmp dec jg sub dec adc dec dec dec popa dec sub dec inc dec pop dec sbb dec sub dec add add dec outsb dec pop dec cmp dec dec js and dec dec dec dec dec dec dec xor dec push dec add dec pop dec arpl dec cmp dec dec dec ds push dec and push dec or dec sub dec aas dec cmp dec cmp dec add sub dec xor dec add dec inc dec imul dec sub dec push dec pop dec push dec pop dec jne adc dec add dec pop dec sub dec pop dec push dec outsb dec xor push dec jle je dec dec or add je push dec pop dec push dec xor push dec jns sbb dec sbb dec pop dec inc dec push dec outsb dec dec dec jns gs or dec add in push add cmp dec and gs jl arpl dec or dec or dec pop dec push dec adc dec dec dec xor dec cmp das dec xor dec push dec xor arpl dec dec dec push dec jp xor dec icebp popf add and daa add int int3 sub xchg js mov push mov inc lcall xor addl xchg es sbb test rcrl xor pop push pop cmp mov mov sbb jb jge fisubl mov xchg in ds test mov sbb pop xchg shr push enter xchg or sbb (bad) adc pop and push mov (bad) xchg sub xchg and push sahf iret mov lret adc push mov and jne stos xor popa popf iret push push push xor dec add mov or adc rcrl test push xchg xchg fwait pusha ljmp jmp cmp mov scas aas das cmp (bad) sub stos scas das mov in outsb lcall std jae mov mov mov stos sti sub dec dec mov mov pop adc push lods push rol scas clc mov sbb jl pop or lods xchg test loope xor mov sbb dec inc aam dec loop fnstcw idivb lea cmp sbbl scas in and adc jecxz popa push xor and mov sbb (bad) sub out adc (bad) jle arpl push insl and clc inc es (bad) je jb loope insb mul out js add sub pop pop decb push aaa in mov mov data16 mov ret xor adc push stos adc aam adc mov sub in stos mov mov gs popa mov cmp fwait shlb mov cmp fs lret adc sub insl std adc lahf jecxz or call add pop jmp xor mov lret sbbb lsl cmpsl fdivr (bad) jp jmp movsl out adc scas lds icebp jl enter mov adc jmp fisttpll inc or xchg lret mov inc shr fstps cmp in call xchg das push lock mov hlt lds sub cmp adc pusha push or call or add mov jg xlat (bad) dec jnp dec xor shrb xlat ret js cmp enter pop (bad) sbb dec cmp xor inc je inc test (bad) rcl pop xchg mov (bad) arpl inc fsubrp popf fs out cwtl not adc shld mov lock dec fmuls addr16 or push xchg cmpsb mov fnsave jno pushf and in (bad) push mov push cmp sub lahf mov (bad) rcl fnstsw js adc cmp or xchg lods arpl gs lods push shrb mov sahf pop mov push inc leave cmpsl mov movsb setge sub mov mov pop cmpsb sub sbb daa clc (bad) icebp jp incb pop popa xchg hlt sub leave repnz jle in inc int3 js,pn push orl mov addr16 sbb push and es adc outsl lods addr16 mov hlt imull fldt mov cmp jb add testb fsubrs xor (bad) (bad) or cwtl dec mull cmp sbb xchg div loop mov js mov sti jne,pn cmpb outsl int3 sub inc aaa scas hlt jecxz push cmpsl dec sub adc cmp lcall pop dec jb jae jae (bad) xchg out mov inc push jo inc cmp stos cmp lods hlt cmp jle out gs stos movhps inc add mov xor mov lret inc jl lods out add dec idivb cli leave (bad) mov mov aad ret and mov or scas decl movsb push push add fsts sahf xor jnp js je inc xor cmp adc adc (bad) push sub jl (bad) jle lcall cli mov jl repnz sub cmp dec or cs lcall out je int inc loopne mov leave cmpsb mov fisttpll push mov aam pop test xor nop cltd or mov arpl dec pusha or std cmp (bad) repnz push pusha dec jne push xchg jl jmp sbb jg repnz lods hlt cwtl (bad) jns pushf lret xlat (bad) loope mov mov xor leave lahf cld jns adc sarb pusha out into xchg mov lods shrb sub insl add mov xchg stc fsubs loopne fistpll das shr lods popf pop inc dec xor sub inc faddl adc pushl ljmp sub mov mov sarb fmuls and or flds push xchg dec jo push or (bad) and pop adc cmp rol xchg fmull cmp add cltd cmpl sub pushf mov aaa incb test cmp jns mov in and (bad) out add pop cmpsb cmc and ret mov inc test ret dec cmp ficompl repnz xchg cmp pop sub lds andl dec into lea outsl add mov push cltd pop shll fs ds fnstsw inc mov pop test addl outsb jbe sbb sbb call rcrl and sbb aaa jae lods aam sbb dec push cmovl jae adc mov leave fs aad dec lret out xor adc stos pop add repnz or mov stc or loop jae mov dec call dec jecxz mov (bad) les loop sbb jge in xor mov jns pusha addb pop mov or or pop push mov fsubp pop add aaa cmp jp or (bad) addb cli jl adc push sbb inc or or clc mov pop scas sti stc xchg mov jns aam mov adc mov lock cmp mov fcoml test push out xor inc dec or rorb dec je pushf (bad) ds test fmul push adc or ja inc stc in pop ds lods (bad) fs fwait aad ds and mov enter lods pop (bad) sub xor outsl add dec jns mov jle pushf decl mov xor cmp xor jmp nop mov outsl push mov adc mov ret sub aaa push ljmp cmp inc push insl dec push hlt out adc jae stc jae jns in sbb lahf in mov adcb cmp ja push lds mov inc lods xchg push sahf sub in add outsl cli (bad) out enter push (bad) dec andb mov std mov lock mov es popf nop push in lcall sub dec sub ss lods fstpt adcl das xchg mov (bad) es cvtps2pd shlb cmpsl sub call dec pop mov dec dec sub sub out cltd pop mov sub (bad) jnp les dec les push scas fcomps ffreep adcl push sub mov jge (bad) dec ss test pop xchg mov adc add cmp ret adc movb sbb stos fsubs sbbl out lcall xor add std ror subl outsb mov sub fcomi ljmp push sbb repz jbe js cmp dec notl inc enter sub pop pop inc fldl xor enter push stos dec xchg or ret mov sti out (bad) jnp hlt push push push fwait bound push add sbb add jmp mov (bad) bound test mov inc jmp cmpsb inc inc adc ljmp mov adc test xor out mov xor repz mov (bad) cmp xor sbb movsb lcall lods imul fldl cltd adc insb addl idivl mov mov push pusha mov add mov or cmp ret pop pushf cli (bad) out fsqrt sbb (bad) sbb inc std xchg in (bad) sar test ret cs (bad) dec xchg mov leave push adc mov xlat cmp popa stos inc pop daa paddd fisttpll pop (bad) mov bound das add insb push data16 adcl fcmove xchg int3 pusha out clc (bad) test (bad) jns push jl,pt stc cmpsl cmp sbb adc dec pusha xorb sti mov mov int3 in adc mov mov mov mov ret and enter jl loop pop push mov add je push lret adc mov sbb pop inc pop jmp adc add (bad) std dec int3 xchg push adc fs dec xchg arpl pop popf std sbb cltd in push jne jns fisttpl sub cs (bad) push (bad) sbb popf repnz adc and xchg cmp jle cmp add ror in xor addr16 stc call aam sub invd and or mov mov pop loop orl into mov mov or aas cltd into cmpsb insb (bad) imul (bad) hlt lahf mov aam fisubr or arpl out inc push ljmp dec mov lret adc aam fxch sbb dec jmp xchg (bad) mov mov inc in inc ret leave sbb into or loop cmp ficom std aad mov popf mov cltd mov push mov imul lahf inc mov fsubr sbb inc pop push inc pop xchg (bad) into in loop mov adc sub adc or movl in inc mov dec in cli (bad) test and dec xchg ljmp xor nop stos (bad) ja jo jae push mov mull (bad) mov adc inc int3 sub fld outsl inc dec dec jbe out (bad) mov fcmovb lods lret fisubrl mov pop cmc fnstenv cwtl xchg jne (bad) fldt jae xor pop das loopne pop aad jp jo fist dec dec fs adc push dec push and xor insb scas aad ja popa les test lret int test cli insb xchg adc scas (bad) mov and inc icebp mov divl movsl cmpsb rorb and inc js mov jo mov sbb leave daa (bad) jp xor dec push das mov jnp,pn add bound insl or pop in fisubr sbb aad add gs xor in xchg (bad) repz dec repz xor enter mov (bad) adc mov cmpsl or mov ret mov push mov fs mov out lods push (bad) loop adc inc out out (bad) mov mov push mulb or push adc jge push sbb mov in sub adc ror ss pop push loopne popf sbb stc sub scas test lods jle orb lock fs jl scas lea xor pop pop ss dec jmp mov push or mov add sub repnz data16 ret loop inc xchg pop inc gs scas xchg mov daa pop int push int lds call imul and call (bad) jo pop movsb je xchg mov mov jae add lahf ficoml pop adc call push leave je in idivb out or xchg je shrb xor mov sbb cmpsl cmovle sub ja pushf (bad) insl and mov cmp aam mov mov push jns xchg ds adc xor hlt cwtl pop ss scas pop xor sbb pop pop in mov imul imul mov aam pop push xor mov cwtl dec jmp mov push (bad) fcoml mov test out sbb dec xlat in (bad) rol (bad) mov fsubs cmovle sbb mov inc inc jecxz scas lcall mov mov bound mov add divb pusha shlb loop push out addr16 lret jns or int3 sub push or pop sbb (bad) dec fisub sahf jno xchg sbb mov bound cltd jnp cmc negl xchg mov in popa adc jle inc jmp dec sbb fadds add mov jmp mov mov ja stos push push push dec push xchg leave fsubl mov mov mov push ret stos scas je push mov rclb pushf sbb jbe ficomp push sbb popa mov pop dec mull push mov inc pushf pop mov fwait cmp xchg cmc test and pop jle dec (bad) sbb push pand sahf inc mov lds and mov aam mov cmp fcmovnu lea mov cli test sbbl daa insl fcoml cmovle sahf mov test cmpsb int3 cli cmp sub sti or dec adc das inc cwtl sbb and mov pop push and jo xchg ds mov cmp cli mov repz mov sbb lahf xchg insb icebp inc movl mov sub mov mov adc mov nopl out mov push jne push sub out icebp jbe repnz add add sub dec imul jle cmp add push push mov test scas xchg aas rolb rorl push xchg fmuls (bad) fwait lret in dec test pop insb movsl loop aam addr16 mov sbb jns into daa popa enter xor scas ds ficompl jge and dec mov rcll rolb cmp mov pop sub cmpl push pop xchg push sub fldt pop popf push xlat jbe movsl add xchg mov xchg or addb ret and xchg pusha cli cmp inc sub mov mov outsb inc movsb rorl addb jecxz lock xchg sub mov pop sahf jne les fstps movsl mov xor cltd insl mov dec xor (bad) imul lea inc cmp sbbb test mov lahf adc sbb jbe sbb (bad) mov stc es fstl and rcl stc in adc mov and aad sub ret pop movsl xor movb mov iret cmp loope outsl ja insb jg sbb imul je outsl jecxz orb call scas out jo ret dec fs mov pop mov xorb xor or mov cmp sub push je ret and mov sbb pop mov mov (bad) imul mov jno xor pop pusha cs repnz loopne sbb xchg add jl xlat xchg addr16 pop pop mov hlt lahf or test pop pop or (bad) cmc addr16 scas push cltd inc adc mov push cltd xchg jns stos mov mov in cmp push push test jo or (bad) mov mov cmp xchg ret aam push sbb cmp fadds jns rcr inc sbb pop ret imul adc xor mov pushf and inc xchg sub jp cmpsb pop dec roll inc (bad) add loope push fild lock add lahf push cmp jnp mov pop lea xor (bad) call push mov lds lret (bad) loop daa roll out mov (bad) adc es inc push lret jmp test fbld test sbb fimull imul lahf int add nop cwtl pop andl mov mov or ja ja xor jae push xchg in mov mov xchg and mov mov popf dec out loop or pop shr cwtl icebp and (bad) cwtl lods jnp lcall jne popf ds dec addr16 aaa mov adc sub addr16 fsubrs mov or shrl mov jbe cmp pop mov adc mov push ds sarl daa cwtl in int leave push stc cmp int lods (bad) xchg jl test out in mov mov jb push sbb cmpsl (bad) icebp (bad) shrl out fs lds sbb fs ljmp mov xor xorl pop loop arpl pop test and rcl mov inc outsb jl out scas xor and mov and mov xchg (bad) push stos std dec mov mov sbb je sahf jne jo inc ret dec pop mov mov (bad) jo nop pop adc gs incb push jecxz pop hlt popf mov and loopne adc add ffreep fsubrs and enter inc jne push mov push push pop mov sbb cmp shr xchg jns out xor in andb mov mov in add mov jo push mov mov mov add inc (bad) mov int3 les dec jp mov cli sbb fwait or push pop pop jecxz inc sar add add aam ficomp test xchg pop fisttp in pusha mov add mov in push icebp (bad) lock (bad) mov test ret mov cmc mov or jns mov lods jmp adc jp inc add jge xchg divl rcll mov or insb test push sbbl push cmp pop dec lock push int adc push mov mov sbbl call shrb pop xchg cwtl in add push dec cmp inc jp repz cld pusha and hlt imul pop fiaddl clc sbb inc dec test aaa push sbbb out mov out add imul jbe (bad) pop add and sbb jmp sbb in mov popf xchg in lds loop out (bad) mov jp cmpsb (bad) and sbb pushf jecxz mov out bound dec insb jp or rclb leave push adc scas push cli inc in out pop jecxz stc pop outsl je dec test scas push mov imul int3 push pop push xchg xor roll jmp xrelease add repz pop adc pop add jp inc movsb sub xchg push inc repz jnp add lea xor lret out mov cwtl cmp and xchg lahf and xor jb and push sbb jg mov mov mov mov lods sub cmpsb insb push sti out stos rclb lcall sbb add std push clc xchg (bad) ficom in inc mov jecxz jns xor or inc push or jb (bad) std into xchg mov cli cmp jno mov les sub lea sahf sub push scas mov leave sub imul push hlt mov or sar repnz or add mov mov dec xchg nop mov fidivl lods loope fnop aas cmp insb cwtl pop mov push mov mov pop (bad) mov jmp mov es dec leave mov loop jae ret mov stos ret inc fs test loopne psadbw test sahf or xchg bound and jb cmpsb inc rclb xor out pop jl rol orl pop inc sbb mov dec mov dec jecxz push sub cs scas or push cltd arpl test aad push mov sti push enter mov ret add lods push push enter add dec sahf mov loop shll push bound mov add jne int call lock mov jo adc sub bound (bad) (bad) push mov push add sbb divl jbe ljmp dec xor lcall and data16 fwait stc cltd movsb sahf mov cmpsb into inc sub xor cs mov shll pusha mov nop push repnz inc cmp mov lret in or out xor pop pop or fadds mov mov mov lret add imul loop icebp mov jne outsb popf test sub or dec ds mov lods (bad) mov pop iret xor dec lret xchg pop adc mov mov inc (bad) movsl dec (bad) cmp and mov pop nop movsl lods xorb enter gs pop sbb push test xchg into sbb mov pop ret (bad) sub jns nop lcall xlat cmp gs (bad) push test pop sub push adc mov pop pop addr16 sub push (bad) (bad) fldcw inc addb je jp repz cmp push cmp clc (bad) lock jp sbb add dec push ljmp add imull leave xchg imul in and lret xor xlat lods es fistl popa dec sub jmp icebp mov rorl dec ret into push pop bound jo jne leave lcall sub add adc sbb add xchg aad gs mov pop pop xchg sti dec push mov int fistpl xor cmpsb rorl (bad) lods pop in call daa cs cmp jns loop fist iret sti cmc (bad) xlat xor imul xchg cmp inc or mov dec adc ja mov dec push mov testb in push lods adc imul insb cli popa jns and dec shr es dec in in inc adc sar xor cmove add sbb iret xor xchg and xchg (bad) fbld push inc add fstpt movsb pusha xchg sbb lock sub dec and into pop in dec daa push mov lods pop mov inc xchg lcall shr mov sub cmp out push mov jno jp aas inc sbb loope js,pt andl les add cmp jge mov ficom js or je mov add js push jmp movsb mov sarl incb aaa in inc enter mov loopne mov aas (bad) in xchg mov push push mov jecxz jle test sbbl and fwait lahf das xor sbb xchg out push aam cs nop adc aas hlt inc ret push movsb dec jns mov fild and out mov stc imul cmp or mov (bad) mov mov (bad) push (bad) pop and mov mull cli or lea movsb lret bound scas inc ljmp test inc push pop lock pushf mov push addr16 nop push iret add lods cmpsl scas fmul xor popf pusha inc mov stos rol add fldl jo and aaa test cmp push mov xchg jg std mov stos push in scas and (bad) movsl cltd fs sub sbb pop jg xchg mov mov and idivb ja hlt mov xchg xchg arpl pusha inc imul scas cmpsl (bad) jg add mov push lahf and jbe push xchg jge and test inc shrb adc and fdivrs pushf pop mov std mov cmp mov mov mov (bad) out insb dec or lret lock les xchg movsl pusha inc xlat dec sub mov push or notl add push sarl inc jns adc fistl dec jg jb inc mov sub fs enter jg push ret lahf cmp enter jp imul dec clc jg jnp ljmp int mov in data16 sub push inc popf dec jne push cmpsb cmp lods repz loope mov out movsb fbld aas and gs add inc fdivl dec pop jns xor sub mov jne and mov in daa (bad) (bad) aas mov push rorl mov jp stos mov push iret xor sub jl (bad) test inc or adc ljmp xchg stos imul insb call popf in dec ret loope ret pop cmp stos inc cmp dec dec nop mov jecxz loope ret gs iret data16 je cwtl pop mov in out mov in test insl cs in pop pushf add mov ret (bad) fdivl cmc adc es loop std out incl (bad) cld mov iret mov mov pop std out aaa mov into adc and mov push into nop aam xor mov popa mov cld push mov (bad) sbb rorb cli into jbe or idivl ja int cmpsl movsb xor mov (bad) xchg sti mov cwtl push imul enter ficom sarb mov leave xchg inc xchg cmp in bound repz cmp jg xor xor push shlb lds (bad) push ds sbb aam lea mov sub mov mov orl xor clc xor cmp xlat pushf add (bad) fisttp xchg xor xlat jne cmp shl aas and pop adc shll inc cmp jle in inc pushf or es adc jmp jne orl std (bad) jb dec es dec pop inc mov mov adc add mov push mov push mov push lock push addl jnp adc xchg inc fs addr16 loopne add add pop (bad) je sub outsb fdivrl call addr16 adc out xor stc mov add test xorl loop push subl jnp dec add sub sub icebp mov mov (bad) or adc dec lods jo and cli idivl cmp mov cmp push adc cld xchg push iret fcmovne test cs mov lcall sti fsub aas data16 (bad) dec push mov aas adc scas sarb ds cmp lds inc outsl sarl cmp push (bad) lcall dec and push scas leave pop fs dec mov rcr mov mov mov orl popf bound xchg adc loope icebp insl mov cmp stc mov pop lahf pop adcl popf xchg sub mov inc movsb mov jge adc lods jo aas and in jmp daa dec push lods push adc shll enter push ljmp adc iret or das add sub ret xlat or addr16 mov jnp out outsb xorl push cmp call dec lret test fs pop mov nop add arpl sahf cmp jle pop jne dec mov cmc push push mov lret or movsb push sbb cmp mov test aam or xor test mov mov sub pusha rcrl outsb testl mov xchg mov decb mov push or dec lcall add inc ret jl sub (bad) negl jle stos lret lahf ljmp loopne insb int pop sub das jecxz dec sbb sbb xchg dec test (bad) push test mov jle hlt fisttpl mov addl dec xor and sbb ret or mov adc loopne add lods mov push leave push out fwait gs pop jl (bad) jb pop dec lcall cmpsb js inc xchg orl lods mov mov lcall jno mov push loope imul xorl cmp dec ss ret lods cs rorb pop (bad) movsl inc pop pop xchg and sub mov lods (bad) ds dec push mov sbb mov jnp mov jb repnz mov mov lea sub int3 dec xchg pop or and jne (bad) cli shll es sbb pop shrb ss int3 pop cmp mov insb xchg insl lret arpl lret dec cmp es mov in add jmp les adc mov nop push xor dec lret xchg ret mov dec xchg rclb test xor dec pop aad dec jl repz mov cmp pop sub (bad) enter and sahf dec out add and xchg or xchg or div xchg lds mov add jmp out out iret inc in lahf cs pop xchg pop adc jmp sahf add out and jns pop push jmp xor movl pushf push bound xor mov and out popf daa lea cmp lock pushf mov inc sar or in lahf (bad) cli out xor (bad) shrb or (bad) jno or stos push pop loopne arpl mov out dec andl mov pop (bad) popa daa out push cmc push sbb out sbb adc out adc mov adc push dec mov xor sub xor cmp inc sub movsb and jge icebp out or sub out ja sub add je adc cmpsl shrl cld (bad) imul cmp push adc mov xor dec (bad) xor adc pop repz xchg (bad) into lcall loope or sbbl ds mov je mov or jmp stos icebp mov xor test dec jl repnz rolb dec sti xchg mov sub pop adc (bad) xchg addr16 (bad) mov je shll jo subb (bad) fdivl loopne in mov lahf push or add ret into rorl sahf imul popf push and xchg pop xor sarl or lock lds cmp (bad) sti stos and adc add sub push mov cltd lcall addr16 insb push popa xor aas cmp push and pop or rolb divb shrb (bad) dec and jmp movsl scas adc stos xchg inc sub aam mov mov dec jbe xor adc xor leave and icebp push (bad) hlt push mov into leave adc sbb sub add cmpsb (bad) outsl adc scas sub jmp adc mov and and add adc sarb sbb (bad) jnp lock sbb ret bound mov fxch into push sbb mov push loopne pop add inc adc mov mov (bad) hlt nop mov popf cmp sbb jno sbb dec add mov mov lea (bad) sub adc (bad) cwtl mov ss (bad) mov repz sub fsubl pop incb hlt jle pop in or scas jle push xchg xor loopne push int3 inc ss ror cmp and push sub xor data16 (bad) fmulp mov ret movsb jl mov rclb repz or lods (bad) je mov fsubs dec sbb dec gs frstor lret insl cmp xchg add std sbb popf popf shl xchg add adc push outsb aad jmp out pushf jnp jmp lret pusha push popf std out mov (bad) cmp cmp sub add inc maskmovq mov scas idivl adc scas xor and fwait push or scas scas push rcr adc lahf out mov jle push add cmp (bad) jns (bad) loop fist stos pop das adc outsl mov adc lcall imul sti mov sbb in mov cmp gs outsb inc cmp inc test in adc xchg sahf dec repz stc loope or arpl ret mov or fildll jmp jno iret push push or mov push (bad) jns dec jle cs adc fbstp icebp pop iret (bad) dec jb jg mov dec test das fwait addr16 mov dec dec pop sub jns and enter std and insl and push daa negb mov cmp ret sarl je adc stc addr16 xchg jp in jmp ret mov (bad) in out inc mov inc adc and lock pop inc jo pop push mov leave lds add daa int3 lods jg inc rcl movsb cs xorps dec aas (bad) pusha xlat sbb aad test xchg (bad) xchg xchg aas pop pop jl cmpsb mov test jae cmp jmp jnp fs popf fadd mov (bad) arpl aaa aad mov arpl cmp mov scas mov mov adc sti jo dec es test mov adc push xchg int3 outsb push out dec out jmp stos pop pop pusha in std push repnz les mov lock addr16 lds stc aam les clc jnp adc xor mov inc mov lahf ret cltd cltd cmp sbb hlt gs cmpsl inc pusha les xor fstl xchg cwtl test push jecxz daa jne repnz ja sbb dec adc adc or push and loop (bad) jno imull in es das test inc jp cmc sbb icebp jl sbb (bad) notb sahf mov or or adc jbe adc jbe (bad) stos jl int3 stos mov sbb sbb je dec and aas leave push sbb jge or jmp mov loopne jmp and call cmpsb es xor cmp push mov xchg shlb jge lahf xchg push fbld (bad) aas jmp rol push fcomps push ds into loop jo cs es arpl jnp sbb lret cmp faddl lcall push sbb push enter cmp addr16 lcall xor lea lods lret sub out fwait inc sbb stc cmp xchg stc loope sub pop push jb push and mov push mov or xchg pusha cmp mov enter js icebp ja mov push mov mov jl push and faddl xlat xor sbb jp adc push jbe cmp out jae in rolb xchg out ja mov dec out movsl adc xor mov pop jae test lods movsb pop mov cmpsb sub insb mov outsl add in push dec movsb cmp in into push out fisttpl mov mov jp lds enter mov arpl mov (bad) lret daa xchg mov bound fs and ljmp std popf jnp aam add dec iret mov iret ret repnz jge add movsl (bad) adc jbe out fistpll mov sarl sbb add or jg dec dec dec sub mov and dec inc mov mov mov cmpsb (bad) adc pop into or cmp popa mov jne add das jo (bad) movsl jl sub xor int3 mov lret add lret stc and mov push mov and jne jl (bad) insb or push xchg in mov xlat sub stc cmpsl mov mov xor adc or out push jp rorb pushf fsubp je in outsb stos nop (bad) sbb jbe jnp jp pop imul sub pop jbe or stc pop lret adc out jle xor test mov stos popa cmp mov loop push sahf ljmp xchg lds divps mov rorl jo add ds gs xor push sub pop push xchg pop sub cld icebp test mov enter adc or int andl adc add dec mov cmc push repnz into fisttpll orb cmpsl test aad xchg mov cld mov push (bad) repz add loop lea push jo outsb dec inc xchg dec pop lods mov push pop cmp xor xor scas push popa clc popa mov pop push xor in mov clc inc push mov cmc pop lahf std divl clc mov lods sbb mov jmp xor fiaddl and pop cmp push inc (bad) iret push push fldl add (bad) int3 rorb es loope mov pop pop xor xchg mov lret gs dec sub (bad) cmp add jecxz mov and pop xorb add lahf mov mov (bad) cld ljmp or sbb cmp xchg push add xor enter pop xor cmpsb or ss jl sbb xor adc add frstor fbstp add pop mov xchg jbe femms test jl flds (bad) or fsubrs dec sub dec xor sti fincstp dec test jne xchg jno add outsb jnp and bound sbb cmc mov loope loope insl xchg call (bad) pusha in das sbb pop out pusha outsb aaa sub cltd arpl (bad) test lods mov inc add pop lods jb into pop xor add sbb inc repnz icebp mov cmp sbb or stos or lret pop cwtl mov pop push pop pop jne ljmp nop aam sti dec push mulb mov ret push pop pop std (bad) dec mov (bad) out (bad) out sub xchg jp stc daa imul mov ja inc out imul fnstenv cli in and cs xrelease icebp in mulb add mov xlat pushf nop les cmp insb lods ljmp mov push inc (bad) jge fistpll mov stc nop test test sarb pop out mov insb adc push inc pop repz sbb call divl jg bound inc int xor pop movsb sbb popl cmpb sub js sbb sub test and mov notl es bound in xor add ror mov daa in mov (bad) out jns adc pop sbb jge mov inc mov jbe or je pop xor push inc js inc mov in incl jge or dec mov push test xchg test rorl and lahf xor int fisttpll rcll inc scas outsl sbb or inc clc mov mov adcl aas insb hlt popa mov cmp xchg or outsl pop dec leave add push fs adc pop test cld mov pop lds jg daa subl fwait add sbb inc add pand jbe mov (bad) mov mov mov sbb rolb imul adc lret sub (bad) (bad) xor lcall test incl or sbb xchg sti test ret mov test lock add jecxz data16 push inc (bad) mulb gs cmp mov push imul pop pop cltd fmull std int3 insl mov inc stos fwait push fidivl mov lret scas and pop test (bad) addr16 icebp aad out data16 movsl xor sbb hlt xchg push or cmp test out mov addr16 mov test gs ds xor out adc push inc out add outsb push loopne mov test addr16 and mov xchg gs (bad) (bad) int fistpl or lret mov adc sti push cmp lds xchg scas inc arpl or xchg xor pop mov insl dec loope (bad) mov mov mov or enter arpl ljmp add sub pop xor xchg into push shrl shr out cmp add and ss nop ret mov jo pop jnp (bad) lock or das adc sbb scas push (bad) mov jg lea jb test mov cld sbb shrb add fmull push jo sbb jmp popf xor push jle sub imul dec sti xchg xorl jo in mov dec outsb das pop sub sbb add mov dec or push mov test jmp repnz std xor test fdivrl insb lcall cs in mov jge or mov jne mov xchg xchg (bad) dec ret xor sub cs xchg sbb cmp lea jle jg or xor iret xor sub shrl fcmovne pusha mov pop hlt dec bndldx cmc arpl es popf in dec jg loop fcmovu fistpll sahf lods adc dec addb jecxz jp popa (bad) xchg mov repnz xchg out out gs sbb jns aaa sbb shlb nop bnd out xlat inc inc adc test inc popf mov sub lods add bound cmpsl clc inc sub mov mov dec and repnz (bad) cmc mov ret sub bound out aad inc imul ss mov dec lods jmp cs push insl (bad) out adcb xchg movsl shr clc mov mov aam shll pop test iret int xchg jp shr sbb sub shrl mov jns or mov movsl pushf push ss xor pop mov push rolb popa (bad) jmp sbbl mov add adc jbe dec mov xchg shr dec add and hlt xor and pop scas pop fidiv fld pop pop sub stos (bad) outsl hlt test data16 fbld xor sub cmp cmp lea mov sbb arpl pushf xlat jnp call pop scas mov pop or fs stos cld push je jmp xor rorl add in jno xor ds outsb stos andb mov add adc adc sub mov test aaa add and daa cmp xchg shlb int3 loop loop xor xor cmp push jge call (bad) pushf out jno ss mov mov jne jg pushf mov dec pop mov xchg stos (bad) cmp loope movsb pushf sti loopne cli lods ret stos jbe (bad) cmp xchg mov cmc insl inc push out fs mov jp mov aad cltd cmp test push or into cmp add (bad) mov ss lret repnz testb push ret fwait (bad) fwait fs xchg push push pop add (bad) rorb mov mov leave adc inc jg lods ljmp pmulhw jo,pt fwait xchg (bad) fdiv jge and or (bad) jb mov jl cmp fs fcmovnu out sub outsb sub je ds xchg or nop or in loop sub inc clc mov push push in mov stos (bad) iret cmc cmp dec jne sbb mov test cmpsl or (bad) xchg loop outsl test mov cmp inc bnd sbb mov mov je ror or out inc ss int3 pop adc mov xor push xor (bad) mov jecxz mov mov xor fisubrl imul fnstcw jb push adc push and push push ret rcr adc sti ja jno xchg xchg xchg and lods xchg xchg mov ret int3 into test xlat cmp popf roll sbb xor (bad) arpl data16 sti sub inc or int3 stc repnz inc addr16 sub imul mov inc ret sbb and pop stos fmuls into jns movsl dec stos in (bad) cmpsb mov nop adc popf mov gs (bad) hlt cli inc das std movsl fmull sahf mov xchg mov incl push in cmp cli sahf mov and sub pop idivl dec js sub sarl push adc jno jmp xor push pop mov into (bad) fsubrp add dec pop adc (bad) shlb nop and in push adc fbld pavgb dec and inc (bad) pushl mov ficom push or jns and lock or js jle inc ljmp dec cmp enter dec (bad) push aas pop cmc fadd adc mov add add sbb mov insl stos xchg xchg add jne cmpsl cmp cmp clc movsb mov insb ret or rolb gs subl jge lahf jl xchg dec adc xor lods sub dec fmull or sbb xchg (bad) sbb xlat mov pusha andl jecxz jmp mov mov add iret lcall xor sahf mov out mov mov insl adc mov xor push push mov fildl je sbb mov arpl xor call add xor mov cmp pop xchg inc mov sbb std xor inc mov jl mov hlt push scas xchg sbb mov jnp stos nop frstor movsl and pop adc imul mulb bound dec jae xchg ret xor scas lods stos inc mov iret sahf out ljmp dec xchg add pop adc or lea jno jne (bad) sbb jg or jg je sbbl aaa clc sub dec pop jno mov mov xor mov sbb fisubl cli xchg rcrb loopne jo fadds popa lahf ss fnstcw imul jle cmp arpl mov push sbb ja (bad) cvtdq2ps mov or jmp int or push divb adc repz jo lock fildl push pusha adc mov cli push pushf bound or out (bad) stc dec fidiv subl jle jl pop push dec cwtl dec imul in shll dec outsb repz js adc mov pop (bad) nop das add mov (bad) and outsb jle lea sbb mov fcomp sbb jmp out mov mov xchg cmp cmp mov xchg lods lods sahf push xor adc clc pop (bad) xor outsb xchg mov stos push cmp js and sarl inc ret pmuludq add adc rolb cmpsl mov push pushf sub jno xchg outsb adc insl pop add sub addb or pop fprem cmp std push fisttpl xchg pop fs push nop inc xchg fmuls jbe push imul mov push or cmc mov mov cli insb js repz mov fnop sub and gs ss fsubr repz lds outsl (bad) mov je jne lret rcll out mov or out call js cmp cli out (bad) or fdivrs out insb mov cmp call popf loope cmp lret dec mov lret inc mov pcmpeqb inc sub lret (bad) pop imul ret cmp xor push mov xor cmp pop mov fisubl fidivl jmp cmp sbb cmpsb mov or pop push mov mov fwait mov and mov cmpsl inc and push jo adc xchg (bad) loope cld jle fstps xchg fidiv sbb sub mov dec mov dec adc sti fldenv sbb fiaddl (bad) (bad) xchg sbb (bad) jl pop lret cs push mov fildll pop mov pop xchg xchg sbb pop imul lcall push jmp mov sbb (bad) fs sbb popa in mov (bad) xor stos call fidivrl out pusha repnz and rclb pop loop repnz xchg jmp dec pop cmc add (bad) arpl stc dec dec cmc xor push push add fild lods les sub sub aaa inc scas adc push or dec loopne jo test leave add rolb ljmp xor stos push pop mov call loop pop inc xchg mov out push push add push stos loope ret enter repz int3 pop jecxz push mov push daa xor push mov push popa jbe test aad outsb scas xlat test xchg inc jmp inc outsb aas repnz hlt fnstcw mov xchg and add je out adc jp bound nop pop or setp sbb push or outsb cmc insb leavew movsl cmp (bad) movsb adc inc hlt shrl icebp clc int3 aas inc dec int xchg mov mov jne add dec xor or lods (bad) loope push iret and fstpt jb jne imul xor pop mov add mov pop xor cmc cwtl loope or sub gs mov ja mov xor sbb (bad) ds daa push jg jmp fdivrp adc jg aam mul cld jmp ljmp or out gs pop call bound out jmp mov repnz pop mov lcall xor popa fwait arpl pop ret repz mov mov jle sarb cmpsb xchg out mov add jl jae cmpsl add (bad) pop loopne cmp adc and mov mov fistpl fsub push or xchg jl and xor (bad) fcoms cmp pop repz pop cltd icebp cmpsl sbb dec or mov rorb ffreep mov sub popf jno lcall xchg or xor mov push jo push lds inc push mov cmp sbb inc adc daa adc jo xor sub push mov xor sub es scas (bad) fldt iret addr16 push mov sti sti jnp add stos rol shrl mov mov stos out jns test cs shrb (bad) data16 or and adc lods and jns pop outsl push adc ss mov (bad) sarl rol pushf pusha xlat dec add push lds rcrl inc call pop out inc ret nop and les mov and imul loopne aam shlb popl push movsb xchg lds sub xlat loop popa lock push xchg in (bad) push out inc lret adc xchg sub xchg mov adc push dec pop mov mov pop mov cmp es ja xlat test stc movsl mov add rcr ss outsb xor dec jl or mov pop negl gs addb jle dec or mov add jae or jmp pop outsb xchg mov mov xchg xchg mov push mov push xor (bad) popa mov pop pop pop jne sub sbb mov xchg mov ja or insb andl mov ja in lea hlt sbb fldenv test aas pop mov fstpt mov lea (bad) out cmpsb sub data16 adc add pop mov inc imul mov (bad) jmp cmp add sbb xchg cmpsl stos pop fxch movsl inc leave (bad) mov imul xchg movsb push in dec dec dec in (bad) (bad) test xchg out xor stc xor rclb jno cmp jmp sbb shrl stos and fisttp scas (bad) sbb andb add push fdivl mov fsubs or movntq jmp out inc (bad) dec or ljmp pop mov push clc or lret rorb subb push dec xor pop mov mov dec aas mov xlat inc in pop or (bad) push xchg aas inc ja insb ficompl (bad) std xor push pop mov mov mov rorb sub cmpsb adc push mov fxch add sarb push cwtl std lods and jns outsb into in add ds adc push insl bound adc lahf xor and mov mov dec mov fneni(8087 xchg xchg jo cmp mov pop xchg fisub outsl scas retw mov mov jb xchg jg mov aam lcall dec cmp lods enter add adc mov adc pop sub leave outsl xor (bad) aad (bad) mov pop lods call (bad) inc (bad) imul jp lret aam jle (bad) scas test out out sub push mov xor jae mov test fldt xchg mov pop mov (bad) fdivl inc mov push pop inc addb lock cmpsb jno xchg cwtl and add jge lods fs in loop jb out mov repnz mov jmp xchg ret sbb outsl mov and je mov cmpsb add sbb sub pcmpeqb pushf mov in xchg and xor inc daa mov nop pop push popa adc sbb mov jp add sub sbb jmp xrelease test (bad) pop je xchg test test lods adc xchg pop stc dec aaa mov push adc mov subb loopne jge sbb jns mov sub leave cmp sarl enter js aaa out ja mov cli fstpl add xor mov mov rolb mov pusha pop xchg mov push dec in and ja mov cli dec mov cmc arpl rorl ja dec notl fs sbb jo mov jecxz fbstp sbb dec inc (bad) jg movsl or stos sub cmp lret stc (bad) cli rclb call cmc fs addr16 insl (bad) cld bound fstl push es cltd inc ja push mov ret mov adc sub xor jge imul and dec xchg or inc or (bad) aam fcoms sub push rolb mov in xchg cltd xorl mov adc jmp outsl in jl mov adc (bad) mov mov push inc test clc lea out pushf in adcb sbb mov testl orl and mov add pusha lods cmp push faddl add push in (bad) repnz jg sarl es jle add pop jb xor or jb lret push xor fisubr cli call cltd pop mov andl cmp jp or ret mov je cmp insb or fistpll loop xchg lods ss mov pushf rclb or mov stos mov push nop scas movsb test roll (bad) insb fcoml std add and sub jne je (bad) push cmp (bad) fcoms fbstp xor adc (bad) sti js nop (bad) xchg test mov bound icebp xchg mov push xor insl fcompl mov pop out fadd jmp mov shrl and mov aas notb ret ret push jecxz negb scas sub jmp add adc outsl sar add sti jno inc mov repnz int3 leave mov jge (bad) xor in and adcl pop gs xchg sub ja cltd in mov and int3 or cli ljmp fdivs (bad) (bad) gs xchg ret xor mov mov push cwtd add lahf xlat jmp gs mov movsl sbb out add or push lea jle and arpl mov loop (bad) pusha repnz dec sbb xchg mov pushf test pop jle data16 mov out (bad) aaa fist xchg mov shrb jb inc jmp add push mov push pop lods int mul iret pop add out add (bad) or adc mov xlat das cmpsb cs shll push mov cmp xchg adc dec jg xchg int fisub cmp stos mov mov mov mov mov mov jmp jge cli mov mov adc mov cmp xchg (bad) add jb xor or mov dec mov lds fisttpll cmpb cmp jb adc movsl cs mov es mov mov dec loopne fdivr mov mov out push aaa and scas add movsb inc lods sbb call cmc push out pop js add sub subl mov adc adc sub (bad) sbb or inc rcll and pushf inc aam out fisub jnp adc (bad) stc loopne (bad) (bad) mov loop stos jb sub outsl pop es inc hlt rsqrtps (bad) mov iret dec psubd and ficompl pop aaa (bad) mov jo cmp xchg out roll or test push test push lock jge in add ss sub mov in dec push lods push outsl mov das jne mov mov sbb cmp test test pushf sahf popf cmp and xorl mov das pop lea mov add sbb sbb sbbl std lea in dec mov jae xchg dec mov std mov or inc or mov pusha repz or cmp inc call repnz aaa pop push dec cld out or div sbb cmp inc or es in loopne int fnstsw fisubr push scas cmp push mov outsb push push mov in in mov sub cwtl mov pop popf pop xchg sub sbb fistpl call dec call and dec fcmovnu data16 addr16 out cmpsl cli jge dec sbb lea adc push cwtl (bad) inc rolb pop repnz jnp dec dec fs ss in cld add mov push mov sahf adc in loopne in add xchg mov ret adc into test shrl nop test es arpl and mov iret sub push test ja and push int add rorl loope cmc stc icebp lret xchg jnp jp aad xor jle and loopne fistp dec sub pop pop jo pop mov or popa add adc sbb push push mov cli sbb movsb test sti sar aas xchg std cmp stc das das pop cmc jnp xchg push std movsl dec hlt iret into pop adc inc jbe fsts adc add mov das int3 adc mov faddp mov sub shrb rorl ja lret cmc jmp dec ljmp and pop sub adc or pop lret mov movsb mov cmp fisubl lea repz rcll aad int3 (bad) fcompl jg mov jnp pop pop lret cmpsl movsb pop pop bound pop outsl or inc lods outsl fdivl fiaddl decb mov rcrb std fisub mov inc mov sbb push jbe push jmp sbb xor add push mov fidiv lcall lret jecxz sti sbb fyl2x imul stc stc cmp loopne push loopne dec mov mov int3 jb sbb leave xchg (bad) dec cmp loop jne mov add adc cltd add and push adc fcmovu mov cwtl mov stos inc add jo fmulp push mov ss fs mov ret clc movsb or mov sar xor dec popa fsubrl repnz or inc cld in iret adc push pop xchg mov aas bound add cwtl or and mov or cmp stos inc cmp xor xlat push mov icebp lock sti imul sub add jp test pop mov sbb add pushw push daa push push rorb and lret cmp sub (bad) int jbe adc jne dec scas xor push ficompl adc notb out mov movsb fucom icebp rcr jns jnp adc int3 xchg pusha mov ds pop jno dec repz sti jb in jno or (bad) xchg fisubr jo stc adc sub cmp jecxz lahf jmp adc adc leave xchg inc or ss test sti loope (bad) pushf ds push pop fs (bad) shrb sub test pop gs fwait jecxz popf mov loope sub loop pop pop cltd out mov or les pop push and fwait cld jne in icebp cli xchg aam lcall pop xchg outsl in add lods lds loop fyl2x lock fisttpl pusha push adc pop xlat jne xchg inc mov fldl adc in into or xchg (bad) in stos adc inc push jbe inc pop in mov xorb pop dec adc push call cmp in icebp mov push pop arpl in inc pop jmp and scas jo iret push ljmp arpl movsl mov sub sbb and cwtl inc fwait inc mov dec adc daa mov sub mov orb test sbbb xchg rorb xchg lods inc push stos push lea jle pop mov imul dec inc iret cmp hlt push arpl (bad) dec pop das push fbld jp jge cmp mov push mov fwait sub pop sbb cmpb cmp cli adc push push in loope lcall cltd cmp loop lret xor daa push insl sbb xchg xor dec and mov outsl adc lahf (bad) mov or into inc inc mov in jnp cwtl scas mov lods hlt inc les mov rcll fnstcw mov cmp iret cwtl xor sub cwtl lret rcr pushf in dec xor mov sbb lret add or cmp mov iret inc outsl (bad) cmpsl mov jge push daa (bad) in add sahf and lods xor popl int xchg jp cmp hlt shr sub mov pop scas cmp mov cs imul int3 out scas mov sub add or ds push push dec cld pop mov test dec mov clc std pop mov fcompl insl inc test inc (bad) mov sub dec jne mov lahf out sbb out (bad) (bad) mov pop dec fcmovne lret push cmp pop movsl dec jp sbb clc insl adc jo sbb and mov push sarl aad les scas lret aaa pop test cmp push xor repnz out sub cmpsl push adc shr sbb fist das out jle sub mov adc sbbl push iret in (bad) sbb mov xchg sub aaa dec fwait jecxz xor mov lea mov (bad) cmp sbb mov call push lods mov movd inc dec jnp sbb mov fcmovnb into clc inc lods jg arpl or mov mov ds in mov nop xchg mov or dec sbb jnp sub (bad) mov sqrtps pop aam push jne xor lahf sarl test jne jl mov rorb mov mov dec push adc dec inc dec and mov (bad) aam sbb cmp dec cmpl mov cmpsl sub jg cltd pop adc jb scas in iret andl push inc sub shlb xchg adc lock or jno xchg out pcmpgtd and imul push stos (bad) out sub jle push mov cmpsb xchg xor cmp pop cltd jne enter inc or cmp (bad) enter add aad dec insb fcomps jge mov push pop xchg mov (bad) adc mov add push leave in cltd cltd mov js lret stc jbe je gs adc xchg sub ret addl or add loopne stc pop test jo add adcb ds jle sub mov jnp pop dec push in ljmp int mov jp mov lds leave sti jb cmp ret in pop movsl shr fwait or or repnz nop fwait insl (bad) sub push ds lods mov jmp mov sbbl sbb xor test cs jle mov adc push int icebp or das jo jae (bad) aas pop mov (bad) jo xchg and fsts out mov gs xchg fisubr iret xor jp ljmp dec push mov sub aad add sbb jge add cs sub pop sub mov lret mov push jne jno ljmp jg xchg xchg (bad) mov les mov out (bad) or aaa scas push and rcrb inc cmp dec mov fnstsw in inc push in pop (bad) hlt xor jecxz mov fiaddl fisubr and mov in cmc sarb js mov jg sbb scas push std arpl fwait sbb push jmp mov pop add mov or sbb (bad) cwtl pop movsl inc xchg lea in xchg cmp mov mov pop xchg insb (bad) add icebp scas mov aaa dec cmp xor inc xor pop enter xor cs mov repnz xlat sti (bad) movsb fwait jns push xorb sub test pop sub pop sbb jg cmpsl jp push lods dec mov shrb or xor out push and ljmp arpl or jmp jp jmp sub jecxz aad mov ficoml xchg aad sub je adc cltd xchg push push call (bad) std add mov jge fnstsw ret leave pop push jge pop cmpsl push rolb arpl push add xor in andb notl add movsb aam push call or mov and in push into cmp jns out or call popa ds cmp inc sbb lret cmp jnp xchg push dec fistpl pop test adc aad push gs push ret test add iret mov xchg cmp fs dec sub je pop aad (bad) (bad) push and faddl js mov sbb mov mov sbb mov dec mov push xor sti je loope xchg mov dec in pop andl push adc add jmp dec cld lock mov mov add push pusha fimull xor jecxz lahf and push fs sahf shrl jge nop push jmp outsb test scas loope popw mov mov inc int in jecxz fstpt aas dec out sbb jno or sti bound jno movhps arpl imul fistpll dec cmpsl sub aad jnp cld fimull aam pop xor sbb ret shr loop std cmc ss dec add sahf adc je jmp pop cmp mov orl dec jg iret adc mov xor pop inc jmp mov adc sti or lcall in daa push daa dec out jmp (bad) pop xor les loopne add pop push stc leave pop pop aam stos cmp mov mov pop cmp xchg push and (bad) fisttp mov push cmp xchg mov xor sbb xor fmuls mov rcr jne scas stos mov leave mov outsl lods dec repnz jb xchg mov jmp push insb into adc mov inc mov mov inc inc mov or xchg pop lock xlat cwtl fnstsw call xchg jg aaa sub xor push push dec jo ja xchg sbb jle jge jmp js adc frstor in bound push push clc mov sbb and into (bad) jbe daa xor add into pop jne cmp (bad) or push repz or dec jp xor mov scas dec adc xchg mov cs xor cmpsb (bad) cmc jmp out jl jae jp or and inc inc mov mov inc (bad) or mov pop lcall push mov push or push mov sub test lahf movsl xor mov mov sbb adc ffreep inc sub ja xchg jne mov bound xor pop subl pop inc popa bound pop das lds fcomip jbe and lret or mov mov xchg popf lock cmc mov in aad ficoml repz mov jbe push leave dec dec xchg adc movsb adc pushl jecxz and popf lods add mov fsubrs in mov frstor cmp fsts sbb (bad) lea loope (bad) mov jg xlat test out or pop push or stos lods push sti lds adc pop das lock cmp cli ret sub jno ret jmp imull push out jbe adc std jmp lret std jecxz fild movsb inc add lock hlt add cltd cld sub sub sti xchg push cmp jb xchg adc psubusb mov rcrl (bad) mov shll pop xor lds sti divl aam cmp in add lahf dec rorl adc mov in sub and push out aam dec lods dec mov sbb sarl push cmpl loop sbb in push test and cmp scas add daa add xlat pop enter pop test add (bad) fiadd mov mov out add inc stc xor pop push mov fdivrp test lds out cmp imul idiv cmp fwait mov test negb push jb push mov cmp or pop das (bad) lods out mov outsb jns enter xchg cli sub sub lods in test je inc pop movsl and jbe sbb pop sub movsb into aam xor sbbl sbb jnp dec xor dec pop into lods dec push mov xchg cmp vpsrlw das mov lods jle pusha (bad) mov cli call inc cmp mov ficompl sub mov test adc aaa pop insl pop or popa testb inc push mov mov dec std sub mov push shlb push bound pop mov jmp loope or xchg add push mov dec inc idivb stos push cmp pop in or adc mov cmpsl aam or inc jne loopne or lock enter fbld test jns pop adc jnp fcmovnbe int fistl xchg adc stos (bad) mov repz cmp aas pop stc mov rcll jp adc mov dec stc fistpll sti jae xchg aam shrb mov pushf and sbbl out int push ret pop rcl daa and xor xchg nop mov outsb mov out fistpl mov in sbb dec push pusha xchg mov orl loopne and mov in imul xchg mov or mov or cli ret fsubs aam arpl int dec adc div rorl xchg cmp sbb test clc gs sub xchg sub test dec nop insl loope les cli jo mov imul adc add jge xchg inc sbb ss sub pop es movsl mov jl (bad) or dec int lret fsub std inc sbb repnz pop add cmp sub jle (bad) cld pusha jb jno les or cld xchg andl (bad) xchg mov or mov xchg in lds xor popa imul pushf sub fcomi or xchg mov ror cmc ljmp jae loope fnstenv add test and xor and adc add movsb test cmc sti imul into add inc mov dec outsb loope mov inc lea inc cltd mov mov daa inc call loopne clc dec (bad) mull scas pop cld dec dec int3 xchg (bad) into or cltd imul push iret inc lahf sbb aad push lds push xchg inc xchg scas inc lods cmp mov cmp aad jp (bad) jne push out popf mov sub sub int3 ja and inc nop out rol and pop mov mov adc push xchg xorb adc (bad) clc mov hlt push inc (bad) push add mov lds pop fs mov fxch les mov ss dec scas dec and adcl cmp and inc (bad) popf leave and popa mov jecxz es push jg mov xor mov sub mov or icebp jno push fistpl clc lea and leave (bad) lea test popf (bad) jne sub adc sub dec push repnz pop xor pop nop jg jmp scas lock sbb push cld dec aam sub add call mov (bad) jb sarl in ja (bad) dec icebp adcl sbb inc cmpsb (bad) mov arpl jne notl icebp ja push sub push push pop or lods sbb data16 jge cmp and sbbl mov ret (bad) lock mov mov or mov cmp cli or inc push and sub mov (bad) leave lods cmp mov int3 fistl pop (bad) xlat mov insb ljmp or test pop mov arpl mov enter add gs rorb (bad) std aam test (bad) int3 rcrb arpl lea in pop dec scas sbb lret or mov adc pop jb add ret xchg cltd inc int3 scas psubsb mov mov push inc push sbb daa leave push nop lcall xor ret ss cmpsl xlat or fiaddl out mov arpl daa (bad) jmp cli dec pop pop arpl imul mov cmp push xor or test jg lods mov aas aam repz popf enter (bad) xor imul (bad) js xchg movsb cmp add aad (bad) cwtl sub dec cmp push incl push test pushf imul adc jecxz xor ret les xchg lret mov outsb shr sbb dec push mov sbb lods jmp js xor mov or mov jno inc mov dec loopne sbb adc imul dec fist xor (bad) rclb lcall shrb cmpsb clc jo or inc clc test fs pop lcall xchg dec and sete ljmp cmpsl adc jmp lret lret lret lret or sub cmpsb dec cmpsl aas xchg nop fwait push pop (bad) dec fistl imull push or pop arpl in mov aam jns (bad) jne repnz xchg dec (bad) jnp mov mov loop ror iret xchg das ret pop dec fsubrs mov xor mov leave mov mov jmp cld out fwait in test push mov add pop (bad) cld sar push stc inc and sbb arpl nop adc popa out mov mov push pop jae or iret mov jno mov test or jo jae sbb addl dec cmp add jno dec sub fdivp or inc je cld cli pop pop pop stc push inc adc int3 jge dec lret inc xchg jb lret bnd in and sub imul or push in ret (bad) cmp fs jecxz test rorb inc push (bad) lcall das mov (bad) rorb xchg pop outsl mov insl lret mov push mov pop mov jecxz sti addr16 lods lgs movsl lea or test jmp repz jl push pop pop data16 mov mov test mov jb je inc push pop insl or cmp xchg sub adc test sahf repnz mov fsubrl mov mov dec (bad) in test cmc stos mov sbb xor rclb cmpsl jmp rcr les mov repnz mov repz or inc jmp and aam pop mov cld mov test dec std jnp or dec int3 mov ss cmp test sub pusha enter and cmc repz stos adcb pushf sub mov or (bad) fcompp addr16 repz lods (bad) jmp mov pop loopne call push loop jno xor mov cmpsb aas cmp mov adc or sub leave xlat mov push adc (bad) int loop (bad) mov push mov and fimull inc pop movsb icebp push sub into addr16 push loopne mov ljmp mov mov pop xor xchg loop dec fdivrp mov (bad) mov test sbb dec push inc stos clc pop pusha mov xorl jnp (bad) mov sbb adc inc jp mov out in jb jl inc (bad) outsb mov inc pop cmpsb sbb xchg rcrl fcompl add xchg push push add xchg xorb lcall push xchg lret dec add mov inc stos push inc and ljmp (bad) ss xlat sub jmp jg mulb pop or mov pop or aad mov test sub xchg out dec das xlat enter dec jo adc cmp inc push mov pushf cmp jle cld fs and mov or loopne add mov in (bad) xlat ja inc mov adc sub push sahf push mov sub and jg pop cmpsl add push add ficoml mov fisubl sub clc jbe push out mov push and adc cmp xchg insb and xchg adc les mov adc in push (bad) cltd shll loope insb (bad) or lcall in mov inc movsl pop cmp push call jecxz mov adc pop (bad) mov jne cld pop pmulhw bound sub cmc dec push pop cs rolb mov das ret in gs mov pop aas shll loope cmpb jno lods outsl jno add idivb and pop roll add jo and loope cmpsl ficoml cmp push popa or mov pushl fsts sbb je cmp outsb shrb or mov xchg xchg outsl pop or mov mov arpl xchg idiv fistpll jg and addr16 mov inc add sbb imul jle (bad) cmp ss jle mov push xchg adc mov aam mov mov js out arpl lcall lcall sahf test sbb jg test out inc sub xor mov cmp and int lds sbb xor xlat cmpxchg jae movsl (bad) and lret inc iret add sti bound add xchg inc adc sub dec jl sti sub sbb inc push pop mov (bad) (bad) int mov xor sub jbe dec mov leave cltd aas jle xor adc and ds cltd dec enter scas xor adc jl dec pop or cs mov insl ret mov and mov or iret mov (bad) mov in lea jne push cld in add loopne cmp dec push mov (bad) ljmp xchg mov xchg cmp xor mov inc fs push sahf shrb cmp mov (bad) mov xor rolb es dec (bad) addr16 fdivrs data16 pop out popa test mov rclb xchg pop push clc popf inc push into out arpl adc (bad) sub movsl xchg addr16 (bad) pushl mov xchg pop dec jnp call (bad) mov repz xor mov adc in sbb fstps push pop jns cmp sub pusha (bad) bound imul xor xor repz lahf popf add inc stc cld int xor push xchg (bad) xchg into nop push fs into es cmpsb cmp inc push subl ljmp and cld add adc mov outsl jmp outsb and (bad) and mov mov sbb xchg jae iret add fistl clc sbbl (bad) cmpsb fadds int3 or pop jmp cmpsl and cli mov add adc cmp dec adc push push push test rorb jle mov pusha sbb and push mov or xchg xchg xor or outsb cwtl push push jmp dec bound roll xchg popa lret or pop jg adc lock setns or xor xchg jnp sbb xchg addr16 cmp movl clc fwait es sub push push xor fsubl add cs fmul ja push cmc pop mov cmp dec pop inc inc jo shrb sub jns adc sub pop add inc adc xorl stos into lods pop or and rclb cmpsl out bound sbb loope (bad) js jne stc adc mov jb mov xor xor pcmpeqb cmp (bad) leave fs (bad) arpl ficomp (bad) lods sarb pop test adc cld inc dec pop mov (bad) mov push or or pop mov mov inc mov fnop adc or clc and std pop mov in add aad push xlat xor add add jmp into mov data16 (bad) iret add add out xchg mov or roll cmp sub sbbl mov sub adc inc test imull cmpsb ds repz int3 inc cmp mov loopne adc or dec lock fwait dec sbb pop fmuls jmp xor in or xlat adc jmp insl stc or outsl or clc (bad) loopne cltd fnop cltd mov addr16 je js daa jne call pop movsl hlt push adc xchg insl pop test jge (bad) outsb mov sbb pmulhuw xchg cmp sbb das call cs ret addr16 lea pop mov mov mov mov push inc lcall dec stos call adc or data16 ljmp push pop stmxcsr popa lds insl adc xchg repnz mov (bad) or or sbb mov loopne xor mov lahf mov lret out stos hlt out push mov test ljmp jns cmp (bad) mov xlat into movsb outsb cmp rol fnsave test jle sub mov cmp rorl push mov push int3 mov cs nop xchg sbb or inc mov mulb stc push push stos lcall das xor lods in out pop adc jnp lret push leave mov pusha scas inc cmp clc jo inc pop sub movsl xlat adc fcoms dec fcomi inc sub push inc mov mov inc and mov lahf arpl lock mov cmp pop insl push into pop movsb loope hlt jmp pushf dec or sbb (bad) mov hlt rcl cmpsb leave pop orl fnsave fstl sbb mov mov push divb sbb stos fwait int3 mov incb js insb scas fsubl inc stos pusha ds jnp adc sub scas adc mov cmp or pop xchg (bad) movsl out test (bad) mov mov gs shrl xchg fs lret sub mov (bad) (bad) sbb dec dec or and fdivrl out leave inc and add jno add cltd aas aam or movsb ja xchg icebp lret idivb add test pushf aaa jp in loop out push lret popf test inc inc jmp (bad) loop xor sar dec push jp shrb and jmp aad sub push jno inc add bound ficom lods outsl pop cmpsb jmp loop subb cmp jne jae and aaa popa mov fistl int repnz xlat inc fwait push scas xlat jge cs mov mov sbb push rclb in repnz cmp and stc mov mov fisubr inc adc mov fistp ret shlb mov sbb dec dec jb mov (bad) mov push arpl and outsl dec popa adc das jb sahf sbb fisttpl and pop subb jl push jg inc xchg enter inc xchg mov pop or inc int3 xchg xor xchg movzwl mov jmp adc mov sub mov popa movsl jbe adc pop add mov inc push loope std push adc add inc dec push lret pop cs xor inc cmp outsl jp xchg adc mov push add mov xchg std and xchg adc orl sbb or iret pop and test divb arpl mov ljmp jo mov and int dec inc xchg cmp outsl fistpll push and pop jne xlat jae pushf sbb xchg cwtl (bad) aad push push je mov and imull stos mov mov movsb sub (bad) mov (bad) mov push stos mov int (bad) ja movsl imul push inc xchg inc mov xchg push insb ja xor or icebp xchg lcall mov pop es jnp pop fisubrl pushf inc (bad) mov push push xchg and iret insl ljmp pop dec mov push (bad) call bound push push or add fucomi fwait repz mov jmp inc dec mulb adcl fistpl sbb (bad) or or mov push out int3 fs out mov add add arpl adc lock fiaddl int daa lock ljmp rol std pushf or cmp scas (bad) ja sbb imul dec lahf stos in cwtl lret dec les xchg dec cmp imul imul sbb jp adc mov lods and leave push ja enter xor or addr16 mov in out jl or fnsave sahf pusha jbe jae adc mov or scas ficompl pop mov push fsubrs pop in popf mov fcompl sub aaa rcrb pop and push push fistpl jecxz rcrl sbb pop pushf mov aad cld insl addr16 loopne pusha cmp mov andl and iret dec loop push and mov and pop add popa push ret xor faddl out dec xchg in push jnp sub dec mov imull xor sub gs push jp mov mov lret (bad) xor mov sub mov push mov test pop mov (bad) fucomi incl (bad) mov rcrb cmp cmp inc scas (bad) xor fistpll adcl cmp add sbb mov xchg scas leave and daa loop iret add fdivrs or movsb in push or xchg cltd xor aas add movsl sub cld dec mov in (bad) sbb xor lahf or pop lods push incl xchg shr inc xor or lret jecxz (bad) stos dec or sbbb sbb popa cmpsl int xor enter inc mov js icebp (bad) jne xchg xlat js insl daa prefetcht1 jae push push call or pop mov cmc sub rcll adc fildll cli daa mov push pop jge adc xchg jns add aas sub or aas daa jbe sbb xor mov add jnp xchg leave je or xor out fdivrl inc jb sbb aas (bad) out sti mov pop mov push sub idivb mov pushf xor sbb (bad) addr16 aas fdiv xchg fs sub inc jmp add mov mov je push fadds pop mov mov jmp in (bad) in (bad) push rcrl pop in cmp xchg push loope stos enter fldcw push fs add lret repz push and xchg std sub out daa dec fistl sub adc mov xchg test add xor pop fwait sbb lret cmp adc adc fisubr cwtl mov aam add mov fwait out sbb lods dec sbb jne rorb mov sub jp xchg or je int3 je sub xchg fwait xor insb mov sbb fimul subl adc inc cmp aas pop mov arpl cs cwtl push pop shr test int3 enter test push (bad) enter adc jbe dec or out (bad) inc sahf stc xchg pop push dec outsb push or fldenv xor xchg xchg cmpsl lock cmp add push (bad) fstpl mov inc inc xlat js add xchg lea mov add adc pop lods mov lret adc dec dec sbb and push fisttp hlt iret sbb js add (bad) xor adc lds rcll jne mov ret dec adc es jo pop jle mov mov fwait or mov mov and jae addr16 xchg (bad) lods fstps push pop cmp popf cltd int3 xor call xchg or insb xor lret (bad) jo add push clc mov sbb mov ds pop mov or fstps clc pop cmpsb je sub fistpll lret cmc mov call sti jo bound dec mov jbe addb cmc push pop mov sbb push int3 push ljmp and ja mov sarb stc jne mov xor sub jl loope iret hlt pushf pop int3 sbb push mov and outsb cmp push shl push jae or xchg pop test insl je or jns (bad) or mov or inc mov mov pop pop xlat pop scas imul mov (bad) test (bad) xchg push in jge sbb dec rclb dec cld and dec jno in aam inc stos cvtdq2ps inc imul sub sbb daa lds out fimul cmc pop repnz je mov cwtl loope xor das xchg pop mov pop jmp xchg cmp xchg das stos fdivs jmp adc xchg inc (bad) pop jno out jbe xor js or stos sbb mov add enter ret adc sar jnp pop mov jmp mov cmp push cwtl mov xor cmpsl inc not mov test mov (bad) in ret mov jne push leave mov and nop push and (bad) or pop cmp sahf out test jnp and xchg jbe shll fidivl sub sbb outsb xlat out lods push fadds lret push std popf cli bnd dec pushf xor inc dec (bad) in leave imul imul pop sbb mov adc rcrb sbb sbbl sarl stos jge emms xor dec sti (bad) sub (bad) lahf fdiv das cmp sbb mov add push sub or movsl jae mov addr16 (bad) jp out (bad) insb je push fwait jge jno popf dec jbe loopne push sbb mov repnz mov lds rorb inc clc sbb inc xor pushf gs mov mov mov stc hlt cli cld jae push dec out jb repz add sub jae aad (bad) push stc in jb pop inc add push dec and dec jmp out insb cmp mov test mov inc and fs add out ja dec mov jl hlt xor addr16 pop jae js clc out icebp or sbb cmp sub ja cmc sti fucomip nop mov sbb and lahf movsl xchg inc call lea call xor rclb sbb cmpsl imul inc int3 mov jg jl push push les mov mov jae out cmp mov mov in mov mov lds lea dec lret dec mov push mov fwait aad imul pop xor xor adc test and data16 jo sti lea mov (bad) jl dec cwtl xchg xor ret (bad) mov int cmp fistl adc (bad) sub or jnp popf lea jno xchg and stos popf sub mov mov mov xlat shrl (bad) lret mov pop sbb idiv in nop imul sub ss xor mov sub fcoms cmp int jl add dec lods scas sbb dec adc xor xchg jno sbb ss fucomi inc repnz cmpsl imul xchg fldcw pusha rolb push cmc lods fidivr loopne sbb hlt rorl fcmovnu inc xor imul adc push mov push add inc xor push jo xchg fisub les pop sub pop fcompl test jnp push movsb stos mov mov cmp movsb jno pop push lods jno cmp or lea movsl cld dec (bad) ds lret jg adc leave stos mov sbb pop mov mov out mov xor push jae stc pop sbbl aas inc xor ja mov (bad) mov imul imul dec inc xchg cltd out js pop out pop out jp jns add cmpsb push imul rcll dec sbb (bad) stc add lods xchg adc mov push dec push dec push inc push mov test into xchg lods ljmp mov lock sbb pusha add dec out dec xchg rolb iret mov lods mov call push adc bound mov pop xor loope lods pusha aaa cmp leave in xchg mov dec jb roll pushf orl xchg fisub test xor mov xchg imulb faddl push adc sbb stc cltd ret gs add lock sbb inc idivl cmpsb pop test pop fcoml and pop popa push adc into add jge cltd cmp fdivr imul stc mov jmp pop push std in nop or cs xacquire and mov inc out lock xor cmp jns lods insl xchg mov xor jmp jp or popa je (bad) daa negb ds push (bad) mov xor mov test fcoms dec push mov xor call scas addr16 leave mov push jnp adc lret cwtl div pop mov adc cld ja call test mov mov mov add mov jne add adcb inc lea push ret out sub scas repz xor rorb push add test imul pop adc xchg into or clc cmpsl dec push jmp sbb and (bad) fcmovnbe pushf mov dec lea mov add add subl inc cmp dec scas add xchg fdivrs and sub xchg or sub and psrad xchg cmc dec (bad) push gs pop xchg push add aam clc int jp adc sti mov cmp ret dec push (bad) pop pop dec add out push sub add pushf jmp pop xor outsb mov mov sub xchg jne cli cli sbb (bad) sub adc cmp add and icebp inc mov and js mov pop xor sbb inc sbb cwtl cmp fdivl in out ss out or mov (bad) mov cmpsl jl adc leave mov or in ficoml loope lea adcl test mov data16 cmp mov in fs loop mov rclb fucompp pop jnp aam mov out xor outsl sti out pop insb mov lcall adc int inc xor int pop (bad) stc insb stos cmp mov cli cld inc in jle sub pop pop ss int lret xlat rcrl sub inc negb loope,pn and rolb stc lea mov call lret and jl mov ds adc xchg pop dec outsb pop call test imul dec xchg lock sbb and leave mov inc xor cmp jle lods cmc lea xchg popa xchg sbb lods push or aaa es data16 sub pop jg lods outsl (bad) es sub aad out xchg shrb xor or jecxz jne cmp in stos mov ficomp imul pop pop in sub push fcmovnbe and stos fmuls inc push dec dec cld fisttpll push (bad) mov outsl loope hlt in loop sarl test inc sbb cmp mov sbb shll pop mov xlat lods mov jo sub fisubrl inc ja (bad) (bad) and pop loopne mov mov rcrl inc mov daa xchg sbb jmp adc inc push movsl sahf pop xchg repnz xor push mov mov notb cmpsb add mov or aam in jno mov fistl lea aam lret dec jp mov and fucomi add mov and popa mov lea and shl sub pop inc pop imul xlat in mov push push bound mov push into dec ret ljmp add in arpl or mov nop fidivl pop adc push lods inc stos rolb jl js or adc sbbl inc cmpsb xadd push repz xchg lods push pushf in and cli cmp movsl aam arpl lea rcrb roll int3 lret xchg lahf lret cli push bound into in add lods cmp cmp mov lahf out pop mov cs xchg xor mov xchg mov adc dec js dec insb lcall cmp cmp push hlt les lret clc or xor flds int3 xor sysenter jp in mov jns mov jp adc jae js pop test xchg dec insb nop cltd mov sub mov hlt mov adc inc push aaa push cmp and add mov (bad) (bad) test movsb popl xor daa sbb inc ss fwait cmpsb fdivs sbbb std sub (bad) std add xchg sarl jecxz add outsl pushf mov cmp jno mov daa stos jnp dec rcll or lahf jg in cmpsl jge lea imul lret movsb popa fisttp call test push movsb out sub push in lret jmp (bad) lea ret in inc fs adc out xchg std addr16 lods insl insb fcomp pop (bad) fsts inc (bad) in xchg jmp mov test pop inc insb mov inc adc aad icebp hlt push dec mov into ret ret int3 inc sbb and inc pushf dec push xchg cmc push outsl popa loop in ret popl jecxz stos cmpsl daa aaa adcl push sbb faddl jno xchg xor jge mov gs and and adc popa dec jnp enter outsl mov cmp rcrb sub lret ror das or (bad) xlat inc or leave aam (bad) xlat das out and mov fwait test fcmovnb mov gs push jp xchg inc xchg rcll aad cltd mov loopne notb pop adc aas mov adc mov int mov iret add mov jle shl repz and mov sub pushl cmc pop lret xor jg imul lock and pop and sbb dec leave ds inc add cmp mov push rcrl cltd ret push jbe (bad) shrl in aad mov push push imul inc pop adc inc mov jnp (bad) pusha cmp mov sti xchg mov jb jp jns movsl popa mov loope out clc xor push mov jne std xchg loopne add outsb pop jae insb and (bad) mov loopne pop lea lret pusha ret inc cs shrl jae adc jb data16 xor cltd faddl ja imul mov lret dec cwtl adc sbb dec sub scas jo test pop dec jmp push dec dec jns push sbb mov inc mov dec (bad) jns test lea int pop sarl (bad) or xor xchg notb ret sbb xor xor pop (bad) adc push add mov iret xor in or insl mov icebp cwtl insl sbb lea and mov xchg imul fsubs test aas fidivrl cmp push or jae and cmp stc fildll inc dec and ss push and and loop pop das dec loop push xchg pop pop mov pop fnstsw dec xchg scas icebp cmc pop pop mov icebp sub mov cltd and and jnp popf mov (bad) cmp mov aaa imul daa (bad) aaa sub xchg mov cmp notl js stos or icebp adc scas cmovp cmpsl mull mov pop mov inc xlat (bad) push add xchg scas adc xchg mov lods popf int3 into push je fcoms cmpsl fstpt jge mov sbb insb inc (bad) jno loope adc xchg xor pop testl xor mov adc ss loopne repz pop cld and mov mov les adc mov pusha test loopne rorb and mov pop cld mov ss xor adc cmp test xlat std aad stos pop or jnp pop pop lret in mov test sub sbb sbb mov into sub lods mov cmc push frstor mov cmp xlat pop mov fnop ja inc pop movsb in pop xlat sub xchg popa test sbb (bad) jle pop cmpsl cmp or push jae xor xchg xor leave jecxz shrb sub push or dec shrl sbb mov dec xor jno jge pop sbbl scas (bad) sub add add in stos js inc xchg mov dec push adc dec cmp test add inc scas sbb aad rcr ficom pushf or int add arpl scas and mov enter nop fisubrl mov inc decl push ja add hlt jb pop ja scas xchg sbb fdivrs clc (bad) sbbb push ret test mov dec (bad) mov jge imul sahf mov ret and sbb pop jle mov fs jae jl mov std ret lock outsb ror mov cmp je call and js xorl int movsl pop jns in js mov ror icebp movsl jne sahf fldz mov test dec inc pop inc aad pop adc enter cs xor mov xchg mov pusha inc jns ja or jge outsb div pop fxch push fstps ret fdivs movsb daa mov (bad) jb xor pop xchg cmpsb ret cmp (bad) jo mov mov dec mov aam (bad) adc stos sub pop push fwait adc aad loop xchg sub fcmove das fiaddl data16 pusha lret add loop lcall (bad) cltd aas cwtl loope push orl mov stos lea adc and gs adc pusha hlt push (bad) add xchg or icebp orl xchg pop aad cli xor inc cmp mov xchg sar fisttp out jbe push dec and inc pop jnp cmc repnz xor mov cmp xor mov jae mov scas xchg pop inc (bad) pop (bad) daa inc (bad) imul pop sbb stos and (bad) adc les mov xchg sub adc ljmp xchg cmp les push (bad) xor jb jl pop ret aam inc fld jp mov lock add push lea mov jo xor sbb in mov add ljmp mov xor (bad) add mov or mov xchg fnstenv and jbe addl aaa fcompl mov popa xchg pmulhw outsl fldt loope xchg pop test mov push dec mov mov cmp and mov xor sub int mov sti aaa movntq dec mov inc stos dec adc sub loop or cmp in cmpsb and mov incb clc rorb jle fldt aaa xchg loope (bad) lock orl int scas in loop xchg loope pop lret or test outsl dec bound sbb and bound fwait pop xchg cmp mov cmp test andl out jp icebp cmp daa cmpsb lret sbb lcall jbe mov ljmp jno push sbb mov int3 mov (bad) jns cmpsb insb mov rcrl lret lds mov scas dec icebp lret sub aaa and loopne push ds movl cmc ja fwait xorb rcll pop (bad) mov jp imul fisttp sbb or or mov inc lock jecxz pop inc add dec cmp insl xor loopne aas nop mov dec mov jo xchg arpl sub dec mov mov push popf dec out xchg push sbb out leave pop or push and fbstp lahf cmp or jnp or sbb push jnp mov or add add enter xchg xor in movsb mov scas or jb cmp inc pop addr16 jne in push inc lods xchg jmp inc insl stc xchg push movsb ss ds pusha scas sti (bad) shll push nop out ret lods (bad) xor or pop je (bad) add sub in stc xchg repnz orl fidivr xlat jb mov out (bad) hlt xor shll mov sub adc shl outsl jae test pop mov pop scas push xchg xor in add xor inc and insl out sub ficomp rolb mov xchg inc dec addr16 mov mov leave sub int mov sub sub xlat push inc mov cmp jns imul ret dec inc subb xchg xchg jae xor jg add iret fisttpl aas call les pop popa jb (bad) lcall xchg andl fild mov mov pop xchg aad std xor std jae push jb mov cli fsubrl rorl or rcrl hlt fdivrl cltd push cmp es ret clc mov andps enter scas mov enter cld xlat movsb xchg xor icebp sub pop lock test mov sub push imul push pop stos xorl mov mov jge aas (bad) xchg push mov jno xchg pop das adc cmp outsb push mov mov subb adc inc in nop clc jae and aam pop xchg (bad) into sub jle stos jmp dec mov dec clc mov xor xor adc out sbb lea xchg cmp call dec push jns push je pop std jecxz lods push cmp in divps or xchg lret add dec pop inc cs cli movsl call push ret mov sahf fist stc xor dec xlat inc mov inc cs test fistl mov out scas sub out inc out lretw or sub xor xor inc dec std push gs adc pop pop and packssdw mov sub in lret mov inc push jno xchg inc add jb mov mov jae jnp aas movl pushf xor fldl js subl dec hlt lahf and and pop mov pop outsl mov push shrb xchg loope xchg popl stc loope cs mov das or jae jge stos push dec sbb movsb es cmp vmovupd mov int3 or addl adc cli sbb xchg (bad) (bad) aaa aaa and push hlt cmpb mov xchg add pop sti sbb stos xchg pop cltd cmp mov add outsl iret adc sbb ss mov mov addr16 xor mov mov mov cmp popl imul dec cmc scas adc mov outsl add cmp and test and ljmp or and sti mov lds sub sub sti addr16 outsb mov add into aam lret (bad) loopne aas add and sbb jb lret popf mov stos jp mov dec mov xor mov jl xchg jle jb orl add mov into mov lods test dec je outsb jne test sub sub orl outsb sbb push jo cmp cwtl jle in dec jle daa test xchg mov mov jl sub sti xlat cmp or sub dec pusha adc adc pop sbb ljmp lods inc repz lahf and in jp jp jg icebp mov or insl fsub test fmull movsb lahf dec call fcompl call jne sub mov and mov mov ja sti push aaa push mov xor loop clc test imul mov jle das xchg out nop loop add mov mov pop mov inc scas push sbb push dec movsb add test xor lret cmp xchg xor in mov sbb (bad) cmpsl mov sbb mov ss cvtps2pd inc mov xchg loopne mov push add pushf aaa iret or (bad) mov xor add pop adc dec or add sub fimull mov mov xchg cmp cmp jno mov push scas inc sub fst xor sahf sbb jo sub adc dec std sub push dec and test std mov cmp xchg psadbw das mov outsl dec pushf addr16 push pop jo sbb mov xchg mov jmp fs stos test add mov lds inc ljmp adc sbb push sub mov xor xor xor stc inc jbe sbb pop inc sbb int inc nop mov incl dec xchg sti mov lods push inc and bnd pop pop fsubr loop mov in lds jl das imul xor and lods loopne mov mov push mov ljmp push cwtl mov idivl loope cmp rolb lods cmc mov inc js popf inc push jmp daa clc dec pop sti jp and dec adcb test sti and mov mov (bad) (bad) mov xor pusha mov xor jecxz push dec push push cmpsb adc lock mov jle repz push in and xchg fs inc daa sti js mov out xlat and insl dec cmp cmp mov movsb pushf xor mov dec insb pop mulb shrb jmp ja jle loop cmp pop adc mov add xor pop je aad mov mov push jnp mov lds cmc xchg inc add sub jecxz xchg loopne dec push jb inc pop cmp ljmp mov mov mov dec ret in nop sbb es xor mov aam cmp adc popf shrb inc xor leave rorl fcompl mov add xchg gs imul mov cmp roll ljmp and xchg mov xchg in mov dec xor sub cmpl aad add sub and bound popa xchg je sub rcr xchg pop scas inc mov fsub data16 mov fwait mov push in ret inc aaa hlt jbe outsl fidivr aam and mov and (bad) fildll fimul fstl jl add loopne jmp imul push ret leave pop test pushf enter negb lret (bad) rclb push adc sbb pop jno fcompl jge inc das xchg mov sbb sbb (bad) jb xchg inc and pop jg fwait lea repz inc outsl cmp fld xlat dec in cmovbe dec mov xchg xor scas mov mov push mov decl ljmp cli push shlb cmpsb dec mov inc sbb or cld in gs fcomi ret insl hlt mov arpl int movsb rclb inc jno roll (bad) xchg ja les jg arpl or mov mov hlt (bad) lea loope mov adc xlat and cwtl mov enter pop pop xor xchg stc stc fbstp scas lret push sbb imul sti xchg ljmp (bad) jg jge or mov lds or mov cmp (bad) lock mov leave aas data16 pop inc push push push test jns in add pop lahf pop sub mov cmp lret mov test jmp sahf sbb call add adc insb mov scas hlt popa sub cs and push insl int (bad) cltd inc fs and inc jl aaa push inc adc test push cmp or daa sbb fs add or aam mov push push dec in fisub ds leave jl and ljmp and xlat jo mov aad test mov xlat fidivl addr16 xchg dec sbb test mov inc sub lret sub out cmp es and inc pop xlat (bad) cwtl jge insb push push pop addl xchg jg pop movsl jno xor enter leave inc cmp jp jp imul and ficom dec mov test cmp xor pop xchg out das mov mov pop pop es jp test (bad) xchg test ficompl out xchg cld imul repz (bad) mov sahf negl (bad) subb popf jae mov arpl xchg or pop jecxz aaa ret jg outsb push jle xor add sub mov push lret lcall dec mov into add dec or in pop mulb adc lock jb (bad) arpl xchg in popf cld mov pop out ja sbb fwait xchg scas and pop cltd lcall test lcall (bad) mov incb push dec icebp push cmc xchg sub push cmpsb out subl jns pop scas jnp arpl pop inc mov scas cli ret orl fnstcw shll push push gs mov or jmp inc cmpsb mov (bad) mov cmp push in sub in pop es outsl jmp (bad) xor test dec push add inc and ljmp sub mov mov in sbb dec dec inc or xor and mov or push pop and jge xorb sti sub mov outsl fnsetpm(287 mov jp sub aaa jecxz xchg outsl dec inc (bad) sub push xchg dec inc push (bad) cmc call rorb leave jbe push in (bad) and lods sarb nop sbb in clc mov repz orl push mov pop (bad) cmp fmuls (bad) clc or lods or inc or mov push rolb les (bad) and jb leave mov faddl test pop inc lods mov push dec jge xorb dec inc in xor sbb inc cmpl dec call pop adc insl out idiv sahf xchg stc stos cld stos add das sub lock fs cmp or pop out in adc mov rcl scas rcrl int stc inc or fs test xchg (bad) lock xchg ret push lods ret xchg lods mov fwait xchg stos inc jge cmpsb arpl leave loopne sub cmp xchg and xor pop hlt lds mov gs push xor cmp push push daa xchg xor mov jl je sub dec stos loopne add iret outsl test (bad) jmp ljmp stos mov xchg dec dec (bad) in std (bad) mov xlat data16 push insb std jge jp jp (bad) jge cld mov lods ss insl rclb and jg sbb and leave lahf fisub aas cmp add mov mov or cli scas mov sti mov xor (bad) jp jl dec dec pop dec cmp sub icebp inc push outsb in mov lcall out add pusha fisubl imul mov loop,pn cmp gs jne and (bad) in pusha shlb insl dec push jle cmpsb adc pop or (bad) rcrl popa add inc inc lcall dec std lea push dec insb and in test pushf pop js inc push push ret mov call cmc (bad) sbb aaa lahf mov loopne aas mov mov lods cmpl dec popa jns data16 outsb cmp cld (bad) in mov inc mov ret ja xlat xor ds mov sub mov mov push cwtl (bad) inc add cld push lods les cmp stos mov adc pop add imul dec test pusha sub mov jns andb pop jg jl (bad) imulb stos mov mov adc or add dec sti ljmp aad lret das mov divb sbb jbe cmp fadds imul mov roll dec popa push not sub mov movl leave ror mov lea (bad) and adcl lcall mov push out dec stos das cmpsb adc add sub insb xchg inc cmp dec leave out jmp inc mov cli xor lret repz (bad) loope adc fwait cwtl adc (bad) je loopne cld jae clc jnp loopne dec adc mov aaa dec dec int aaa jns pop jmp out ljmp insl jecxz push (bad) and std mov aas xlat dec out test pop js pop dec ljmp jmp xlat push jle dec jle ss mov dec mov stos in sbb fstpt xchg cltd cmp adc test inc js mov xchg adc nop push add fdivp cmp dec and inc add lods rcll jmp lahf std iret inc lods leave rcrb test rcrl inc js or pop jmp sub adc mov scas cmp mov cmp iret push (bad) dec add movsl or push lcall mov lret xlat imul int jae jbe jne in aad fs imul push lret movsb arpl int xchg sbb jmp cmp lds xor repnz jge push cmp add or shll push daa add pop mov or nop fyl2xp1 pop push popf mov push sub cli jns cmp push bound std int3 cmp mov mov repnz nop adc lcall mov arpl rcrl xchg es stc rolb pop rclb push loope cmc cmp xlat sbb or adc stc iret in sbb push (bad) push jb rclb movsl fiadd out xchg push mov loope fsubrl cwtl mov ljmp outsb xchg addr16 cwtl mov push xor cld in push sbb xchg ret jecxz pushf andb fbstp (bad) mov jge cmp mov mov xchg out add xor (bad) fldcw lock insb mov popf fwait hlt stos mov imul insb fwait or push mov inc adc jge outsb cmp sbb aad ss into stc and or outsb or cld xlat cli xor and aam xchg xchg gs push sbb fwait sub inc (bad) jno sbb lcall fdivrl je add cli push pop leave push fcmovbe and pop add std ljmp mov push sub aaa sarb inc add rorb and je jg (bad) xor add sbb mov cmp std cmp lret jmp sarb ja lea inc test dec pop push sub loope outsl jbe movhps arpl sub ds daa (bad) dec xor mov stc cltd call fs (bad) repnz push loope aam stos cmpsb outsb add xchg sub pop lods mov lret mov inc into sbb and or imul cmp jo ret push (bad) cmp jmp xchg mov adc pop dec imul jl xchg jbe or in nop lahf mov fnstenv popf in pop dec cmp pusha cli cld push sbb ret sahf fisubr adc sbb (bad) mov xchg cmp mov mov js frstor lret pusha xor (bad) adc xlat (bad) mov mov sarl pop mov mov nop jbe push ss mov and aam stc jne inc inc rcll adc sbb fnstcw jnp aam (bad) out sub iret (bad) in sub lret cmc lret cmpsb dec push sub in cmp arpl daa clc lahf (bad) out imul dec out add gs or adc insb adc stos and loop jecxz mov cmp or adc in addr16 jnp das lahf sar push (bad) out adc pop mov cmp cmp pop popa (bad) dec clc loop cltd xor mov test xchg enter in aas ss jnp jbe pop push and mov sub or je cmpsb jo push scas cmp iret or lcall add adc inc ljmp jp mov cmp dec jmp lock fcompl cmp mov xchg xor movsl pop cmp gs in mulb orl and lds sbb or iret scas mov jmp inc outsb nop mov stc xlat mov and mov rcrb adc cmp jl cmpsl push (bad) xor jmp sti (bad) movsl inc push mov dec in push inc (bad) pop fcmovbe sahf add loope pop jnp ficompl lcall adc jecxz xchg add sbb out (bad) dec xor and cmpl popa or pop adc int push std cmp loope xchg xor arpl xchg cmp mov inc (bad) cmp roll mov inc bound dec push xor inc (bad) pop jbe add (bad) popa cmp mov inc sahf ss fiaddl repnz pop add add jp add xchg (bad) rcrb jmp and and popa ss scas (bad) lcall ret cwtl adc aaa push (bad) (bad) loop jmp xchg or push pop lahf mov inc pop sbb cmp inc js adc xchg mov pop mov sarl jnp mov loop add (bad) xchg push or rcrb mov sbb push cmp jno lret mov inc fdiv sahf add cmp xchg rcrl mov movsl ret repnz push orl fdiv jge (bad) sub outsb nop push movsb rclb mov xchg adc mov arpl lea (bad) je dec fs dec dec imul lret lret es xchg push stos mov xor arpl loop stos mov adc push or inc (bad) imul xlat pop outsb js arpl push pushf popf or or scas or cmp out (bad) mov mov xchg leave push shlb rcr dec mov js jp fadds jb pop pop rorb pop std out pop cmpsb push sarl les push jo inc aam into enter outsb sbb cli dec push xor cmp in xchg ds mov lahf (bad) push int3 sarb nop jp cmp stc stos (bad) add or jbe adc shr out sub inc loope pop jle push inc cld fstl mov int3 hlt pop repz lahf pusha push pop pop (bad) xchg dec leave inc jg cmp mov pop sub out dec push (bad) lods test repnz movlhps mov ret ljmp pop sub xchg push sub cltd je mov arpl inc loope js fcomps or stos rolb and xorl mov fcompl lcall das jecxz shr out xchg lods mov dec sub sbb cmp (bad) repnz cmp xor cli sbb jae xchg sub imul jns lahf inc daa and mov inc fistpl mov push sub aaa jbe lret fldl lcall pop add xchg jmp cmp lret xor jecxz cmp (bad) xchg and add cmp mov in sub dec cmc out sbb fisubr mov mov aas ss sahf jno cmp cmc fs es ret ja cmp sbb dec ss mov or push mov add das pop (bad) popf push mov mov mov or aas xor push fist int3 jns or pop pop scas and and imul stc xchg loopne mov je jp das inc test test stos pop jle in pop out inc pop inc fisubrl sbb sub push mov in fwait lcall sbb aaa test ss pop (bad) out cmpsb lcall bound scas lock mov shrl loope cmpsb scas popa (bad) jg insb adc fwait incl cs inc mov call jmp rcl jle fsubrs fimull dec mov and out sbb jmp aad shlb iret mov push pop xchg dec hlt clc lods popf jge hlt jns xchg mov jg adc in push scas int mov mov (bad) inc loope mov mov pop iret adc pop and and in out outsb sti mov xchg (bad) mov lods rcrl fldcw or scas sbb pop (bad) dec aas xor pop aas push xor mov cmpsb fisttp sbb repz adc lods sbb lods inc push sbb mov mov mov shrl xor mov arpl mov inc xor js out sub arpl bound xchg hlt call fcomip sub xchg insb icebp jne mov es into insb jnp rorb (bad) mov mov loope test fcmovne sub xor cmpl pushf add mov xor inc mov xchg jnp ficompl xchg pop (bad) and sahf stos mov mov das mov xor test roll rcrb jae mov xor dec push mov sbb (bad) shrb sbb lret (bad) mov insl je fdivrl xchg icebp cmp add pop in es jae pop test dec lock jmp adcl lods sbb pop add lods sbb inc xor or jg icebp insb int3 (bad) aas inc lahf add imul add jne call movsl push jmp push in sbb xchg sbb movsb mov loop rcll inc (bad) or stos out or hlt add xchg mov jns lcall imul sti adc sbb add lds xchg mov cltd stos stos fsubr push jbe andl les shrl movsb leave cmp das (bad) sbb inc fstpt popl sbbl mov enter les inc mov dec aad test push mov or lcall aam dec and pop jecxz mov dec hlt fildll mov movsl mov mov adc notb movsb push mov test ret jb add les je lds adc dec add push inc pop addb mov inc mov cmp jle sbb gs sahf dec cmp imul mov rclb cmp push in lahf xchg xchg fwait aas mov roll add push arpl fstps jns pushf roll mov popf inc dec jb jne aaa sbbb sti cmpsl sarb xor push loope leave and fiadd fnstenv push rol call mov xor sub data16 ss rorb insl or xchg cmpsl xchg imul cwtl adc mov fcoms test (bad) enter mov cld jne pop inc lds dec lds (bad) cld stos adcl lods imul cld push stos mov adc icebp fmuls dec sbb (bad) pop lahf mov scas (bad) mov orl sub sbb push mov mov inc imul mov pop mov out aaa xor push mov cmp and or mov push mov inc ja mov mov xchg sbb int3 xchg cmp jge mov je out lcall jl cmp adc in mov fnstcw dec jb jecxz push adc push insb inc aaa rorl adc cwtl jo cmp jae mov pop and ds mov loope xor jmp jne aaa pop packuswb push push pop aad das jbe (bad) mov test hlt mov inc aad jg mov stos pop mov mov add pop mov sti mov or out es mov xchg pop push arpl subl pop (bad) cmpsb sub sub (bad) hlt mov mov mov fimull inc je inc jle (bad) es cmpsb push xchg mov stos pop lods and icebp rclb aad dec dec insl mov jb mov push lea xor xor in cmp je or movsb repz lds das xchg mov (bad) fstp mov and rorl xchg cmp cltd lea test hlt std rcll int addr16 inc sahf pop ss sbb jbe mov pop dec sbb mov mov sub addl mov hlt repz arpl gs out repnz rolb fs push push icebp mov (bad) mov mov jne adc pop mov cmp js,pt push es sti mov stos mov xor sbbl add scas mov jb in push mov push xor imul mov jb mov sbb cmp into sarb cmp fcmovnu stos repz sub push cmpsb in adc and ror and push sbb out (bad) mov outsb int loopne pop js test cmp enter enter push out push icebp or in rorl ss outsb dec outsb leave into stos lret xor stos sub sub (bad) inc loop dec int3 sbb and in js movsb xor scas ret sbb das gs jns mov push (bad) xor fiaddl jae (bad) mov pop in cmc push cmp jbe inc jge movsl jbe mov xor loop push push icebp aaa lock mov push jb (bad) loopne pop enter and clc lgs sti cmpsb pop imul mov mov test and add or sub mov cld dec inc push arpl gs jns mov rcrl or cli sub xorb rolb dec adc xchg or push push int3 inc xchg enter mov jno mov push imul js sahf daa scas xchg jne mov outsl cmp inc mov sub psllq cmp mov mov add les shrb lahf dec sub dec mov push (bad) js sub ss lods fsubl cmp mov sub jne cmp xor mov incl cmp repz inc fldl mov jne add jo mov mov jnp out xchg shr test cmp imul cld es push punpcklwd cltd add into and xor push (bad) ret inc mov aam mov mov (bad) jnp xchg (bad) pop subl mov mov xchg pop and cmp mov std mov aas jbe ja,pn dec or cmc push jne xchg leave loop jp jno and and ljmp mov cmpsb jmp xor pop (bad) jne jo cmp xchg pop cmp jecxz or push push add insb adc lea sub xchg cmpsl les sbb outsb cmp cmpsl sub jg inc add xchg push pop push fstpt shrb or or pusha xchg les inc pop lock xchg mov mov sbb sbb test dec xchg push xchg xor mov sub push jno mov push aaa mov mov enter mov mov push fisttp lods push (bad) fucomi cmc push xlat movsl push push inc and sub (bad) std sbb outsb les jnp daa in insb mov jns arpl outsb imulb pusha add pop mov fwait mov out xlat inc push es in jecxz mov or into jg daa add repz mov mov mov mov bound inc addr16 repz xchg inc sub pop cmp jns pushf stos incb test inc and push lods cmp push mov aam (bad) scas or push xchg test insb sbb inc add push fwait sub adc push fs xor (bad) lods mulb cmp push xlat loope pushf out rcll push sarl (bad) sti negl jno leave and gs adc sahf dec sub jnp xlat ja int cld mov jno out lret jmp jbe fisubr add sub xor cmovbe lds (bad) mov dec out aam sysexit and ret jecxz xchg xchg aaa in sbb xchg sbb xchg mov sbb push add pushf jg dec cmp stos outsb push mov pushl inc sub mov in pushf xchg cmp jne mov fiadd pop mov out clc (bad) loope (bad) mov xchg jmp dec pop outsb adc pop (bad) pushf or bound clc gs jnp in jp js les (bad) lret xor mov sub addr16 push cmpsl xchg sub mov or cli and mov arpl insb stos xchg cwtl mov shll outsl mov leave int3 mov repnz bound push outsl push xchg ret das pop popf dec cmp notb and leave aad pop sub jge push (bad) ret jno cwtl cltd repz jno mov stos inc add add cltd add nop adc lods push mov sti fsubrs cmp test inc cmp mov cmc push std cmpsb sub (bad) nop sbb nopl inc mov into out cmp sbb sti mov and or xor push in or ret sbb test mov add or in pop jb dec (bad) mov mov pop xchg enter push loope dec scas pop sar cmp push das fst add sub xchg std scas jne insl push nop sbb dec mov add sti aam scas out lea and mov rorl int and lret inc add adc xor xchg adcb xor push rcll stc stos test jb pop mov (bad) daa repnz (bad) decl add jne push test mov add (bad) jl out out inc jle ss or sub imul js sub push sbb sbb fildll dec arpl jg sbb mov xor push mov cs lret or pop xor xorl cwtl add andnps jg pop daa out cmp ret dec cmp push incl xchg cmc pop int3 mov jle outsb inc leave les mov sbb arpl adc push dec mov stos imul mov fnsave inc push add xorl mov stos jmp add loopne jecxz test rcrl pop cmp xchg insb jnp add add inc xor jno mov rorb dec sub fcmovnu jns and test pop dec push cmpb ficom pop pop lahf or (bad) xchg push lods into adc flds inc xchg (bad) pop ja mov pusha pusha stc imul in hlt ss mov sbb (bad) lock sbb jae pop add adc xchg mov cmp movsb xchg inc cmp adc inc push rcrl les sub sbb push cmp ret lahf ret xchg sti inc scas lea and push lret cmpsb fsubr mov mov pusha stos xchg cwtl mov pop shl stos or mov cmpsl (bad) repnz scas xchg jge and mov (bad) jge loopne std hlt mov jg cltd pop xor aam xor (bad) (bad) xor ret mov pop (bad) xchg mov pop mov and add stos sub sub in arpl sbb mov mov push (bad) subb mov cmp mov sbb pop mov shll fnsave adcb xor out (bad) insl xor adc ret iret xchg movb jbe xchg mov push rolb in in loope rcrl xor mov call mov mov repz pinsrw dec push and push outsl mov fisub shr sti jno movsl lret cmp xlat fldcw jmp outsb inc aas js popf mov push addb and pop repnz pop push shrl out cmpsb xchg sub mov sbb jae mov test lds scas jmp fwait pop pop mov cmp test lahf or xor push (bad) adc jp push jp add int3 sub cmpb (bad) lock nopl dec sbb or testb mov movsl adc inc or outsb mov adc gs shrb or mov loope mov and jecxz jne or inc lock out jecxz out out dec push add inc xchg mov jo adc push jp mov inc out out icebp xor add out push mov push pop stos into les cmc sbb (bad) nop sub mov test adc dec iret xor mov or or (bad) sub and dec jle jmp cs lods adc sub aas sub xor or pusha push sbb pop sub cmp fldenv add push es inc dec mov xchg into mov push adc ret stc sbb decb rcll add xor je sbb xchg sbb jp shlb cmp inc xchg xor jbe mov inc data16 insl pop ljmp arpl in mov adc pop jle jns out mov mov mov jmp scas inc xchg pop push leave cmc sbb loop xchg push or jno lods bndldx dec inc test ja lods nop stos mov sarb ficoml adc hlt jmp mov iret popf jle lea cmp aad cli xlat or xchg mov jmp pop insb fistp cltd rcr inc mov or fdivrs sbb imul loopne scas orb xor in push inc js add dec mov inc sti and sub enter mov mov push rcll or daa inc dec loop lods outsl push icebp movsb mov mov (bad) hlt sti pop add out pusha sbb cld inc rolb sarb dec fld ret test les pop lods xchg dec push or jl pause bound movsb cmp fmulp stc push into daa daa mov ret cmpb mov fcompl sbb jnp shll rclb pop mov xor test xchg inc loop into rcl test ret pop pop xlat movsb icebp xor inc cmpsb pop int jecxz jae add ds test in add sub (bad) ficomp movsl lods imul in xlat pop mov das dec and stos fadd pop mov daa dec clc mov sub jecxz into dec cltd pop lahf push aad shll jo cmp rorb ffree inc ss ljmp push int3 xlat add adc add pop mov lret xor out push movsl in push jns pop and in mov insl pop ds dec aam cmp mov ret pop add repnz sbb adc jge cmp je lock (bad) and fist (bad) stos jo mov lret and mov outsl xchg jns jle jp cmp inc fcoms nop inc mov cmp xlat loope xchg inc mov in lock loope in xor sbb push cmp push pop mov xchg neg lea enter mov stc and jb mov dec mov or stos fidivl mov xor add mov mov add or sbb sub xchg fwait xchg or add sahf dec or loop mov push aaa bound sub pop jle dec dec int3 stos adc inc int mov (bad) cmp fwait in pop rclb jb mov in jg out mov lock aas sbb mov in pop mov dec xor ja lock jle ss sbb sub jge and lret mov jmp scas ret shl out mov (bad) mov enter and adc push mov loope cmp cmp divb sarb and sub popf mov je xchg das or xchg mov mov sub mov mov add jg cmpsb sub mov add cmp or dec sub or xor addl (bad) xlat cmp mov shlb pop pop lcall jmp (bad) and aam mov lret js ja dec es sbb or (bad) inc xchg (bad) faddl inc pop sbb sbb xchg sub xchg pushf jo nop insb int mov sahf mov sbb mov cli dec xchg push or sarl insb movsb jnp push idivl lcall lret mov jns inc pop push (bad) pop movsb stos xor out mov sbb cmp mov and cld push lret shl mov pop mov loope divb imul es push fwait out push rcr pop negl mov or and orps inc jo fstpt lcall or popf into xor sub imul clc inc aad adc shrb scas or in xlat lahf xchg lret hlt (bad) xor into or mov push repz clc push (bad) lret in mov mov imul dec xlat lds xchg and or mov cs cmp adc push fidivl pop xchg inc push mov mov push aaa push enter lahf fwait es cmp lret into mov inc addr16 jo call dec fstpl push jp stos xchg pop out pop aad aam add ret imul xchg das or dec das dec movsl fsubr insb sbb addr16 stos test scas loop cwtl cwtl (bad) pop scas mov dec fs jmp insl xchg outsl cld fadds sarb insb stc cld mov cmp jl xor fs (bad) adc je loop icebp mov imul (bad) lods mov jmp repnz mulb sub push adc cwtl (bad) insb out jmp (bad) pop mov int shr sbbl in dec dec add and push (bad) pop jle shrb mov mov push (bad) sbb sbb or scas and mov loope subl enter out dec enter push pop in mov cmp or shr push das mov in jns push pop shrl icebp in cwtl ret std push rep jbe fsubl (bad) fs or arpl (bad) mov sarb xchg enter das sbb (bad) (bad) mov jl mov mov xor stos dec imul lock out xchg push xor jb or aam jle fwait mov insb in push sahf (bad) lcall fs jae fidivl add dec mul pop inc outsl cs cli inc cltd bound rcll xor push clc lcall andl shlb lods inc ret in mov jg push notl xchg sub add inc cmp jb push xchg mov push mov jl dec and push jmp mov scas bound test into out dec addl xorb inc out cmc jbe xchg xchg add push mov sti mov repnz add fwait insb dec mov sbb push inc out adc mov lcall out inc and pusha push xor jo xchg jo daa or lret and sbb dec xchg jle dec cmp mov mov cmp aad adc in cwtl push test or xchg add ja movsb or imul push (bad) lcall out adc pop cmc cmp pop enter inc cmp mov lret dec fstl cmp inc imul sti loop or icebp cmp in das pusha inc cld fadd imul notb jge xor dec sbb jg lret jmp mov add xor stc jae inc xor lcall mov or jno push and and das imul sub push sub jno cmpsl mov inc mov or and lods jns cltd fisub xor lcall mov out stos enter mov mov popf std outsb push mov sbb (bad) jecxz and es mov adc xchg (bad) test mov pop mov add and lahf les push push adc dec pop std fdivl jae pushf push dec out cld mov test mov mov add out imul push dec aas jbe sti hlt nop loope mov (bad) jb aam mov push stc notl aaa inc xor mov fmul inc and cmp pop in dec lds (bad) (bad) mov rcrl aad xor bound cwtl xchg and jbe fsubs xor ljmp sbb data16 xor inc push test stos xchg mov mov (bad) iret pop xchg add mov icebp add pop push movsl imul fs cmp mov jp mov adc sti out push sbb scas mov pop daa dec hlt movsb mov xchg jae xor mov cmpsl adc mov lods ret cltd int3 aad sbb jp mov xchg mov movsl aad insl add mov adc xchg aam xchg movsb outsl lds movsl mov stos (bad) in push aam adc mov adc jns jp imul nop fwait subl xchg inc rorb fcmovnb mov xor mov cmpsb sbb cs movsl rcll pop scas mov push adc or es inc xchg sysenter ficompl xchg ss xchg mov out frstor add lcall pop dec and cs sahf test inc sbb xchg push lahf lret push dec or add sub sub xchg call pop xchg cmpsl sbb push and sbb pop xor stos sti jne movl pop adc mov mov push repnz xor arpl jmp in (bad) je imul enter xor pop pop sbb cmp push mov mov repnz loop iret rorl stc in insl jne xor pop add sar pop push loopne dec arpl jo aaa call xor xchg aad push jle push outsb setnp sub mov mov xor ret jbe mov inc pop enter (bad) repnz cmpsl sarl fnstenv cltd jbe,pn pop (bad) xlat jmp jne les inc aam stc sbb sub and mov sahf push and repnz jns xlat stos cmp mov jno adc jnp test lods lahf lretw mov popa int or rorl adc push fstps mov pop add dec pop adc sti or popa outsl push and ljmp scas in scas pop sub pop in andb add lret add push (bad) test pop add mov dec add adc and mov fnstcw js add jecxz pop pop mov xchg push mov or and mov cmp cmp pmulhw out sbb mov xchg cltd inc adc jno mov movsl test mov dec fidivrl pop inc lahf clc dec pop test xor adc in sbb cmp and pop jno xchg mov cmpsb gs mov xchg adc sub mov loopne sub and cld lcall imul push jae xor add or rolb stos xchg pushf sbb mov movsb jns jge dec and xor xchg push hlt xchg pop lods and ret aad dec cmp add imul cmc iret out inc xchg cmpsl jecxz dec movsb test lock jge xchg leave push inc add int (bad) mov push jp mov hlt jmp nop cmp clc loop xor out cmc stc jp dec pop xchg gs enter mov and sbb adc cmc mov fldln2 push add xchg dec push loop push cltd or cld add or je xchg dec or in pop sbb insb rclb daa mov int sti push test insb push pop mov lods mov pop and dec lock test daa jno in rcl jge mov movsb push inc fstpl std mov ja das jb or inc jne stos sahf cmp inc aas jecxz stc mov push fimul push in push or mov sbb js or ror mov rcr mov rcll mov or scas adc or mov test jo adc and or bound xchg dec adc popa inc lea inc call negb pop dec insb or pop jo cmp ja lods xlat jne sbb pop mov iret (bad) fidivr jp outsb out cmpsb and pushf cmp call in adc push mov and adc lods inc fnsave imul gs inc aam add (bad) ja cltd pop sub popa pop or aad pop aaa inc xchg push cmp cmp outsb pop dec sub inc enter and xchg mov popw pop inc data16 je mov xchg out fsubr mov movsb jle out cmp pop pop or mov add inc inc cmp (bad) push pop in outsb inc in sbb dec mov call test fisubl cmp push mov ds push jl shr jbe loop test in clc xor pop adc pushf add ja insl jmp xor je pusha pusha orb push xchg mov rcl frstor xor orl or cmc dec adc lcall bound fisubl es cmp lock test mov add cltd sbbl sbb loop (bad) xlat ss mov enter mov pushf inc mov lock or cmp inc add arpl cmpsl jl test fildl pop xor scas adcb aad ds into leave lret insl push adc test pop ffreep out pop scas push push imul orl pusha pushf loop mov popf movsl mov push int3 cmp or pushf pop inc rcr or xchg dec and xchg pop ret in insb lahf pop into mov xchg mov loope push cmc xchg dec add loop (bad) movsl add loope xchg pushf push bound cmpsb mov add data16 mov jmp mov mov cmp ftst clc jns (bad) mov add popf adc aaa adc xchg lahf int cwtl jae cmc fistp dec es pushf int3 xor (bad) prefetchwt1 insl jno add test imull sbb jnp lods cmp es lods sahf (bad) je fcompl hlt cmpsb sbb xchg dec cld mov js repz mov xor lods das sahf xchg dec cmp shrl pop push jg imul f2xm1 pop push sbb push push movsl cli test xor lret mov out cmp daa pushf jp icebp adc jb push into hlt mov das xchg and push mov and jo sbb jne cwtl or ja mov bts jg fidivl sub data16 in cmp jge lret je scas fs lahf cs cmp sub aaa push lea mov jo call lock pushl mov add sub fstl push aas in mov lds xchg inc jmp cmc fwait jp push jo push pop mov (bad) fildl push in mov icebp dec repz jno test (bad) and xchg mov pop ret xor sahf xor rcll sahf fcompl fnsave int push jae jl int jmp mov cmpsb mov adc and out xor insb gs cltd ljmp cmp mov stc lock dec and rcll push mov iret sub mov fist sbb or push popa loopne push xchg cmpb out bound std fsubrl fdivl xchg dec mov leave or cli aas mov adc repz mov fs int add adc cwtl jae repz cmp mulb icebp sahf mov test ds imul fsubs push fiaddl outsb ret sar xchg frstor shll dec xchg adcl jbe mov nop cld adc les aaa add lods and add test mov cmp lahf sbbl popa mov jns xor cmpsb jb xchg inc fsubrl es mov cmp cmp das pop or fistl inc aaa sub mov insb push insl cltd mov test inc sahf cmp in popa or push pop mov arpl lock lret arpl aas push push mov sti xchg fcmovb clc call cmpsb and ljmp push pop loopne inc insb jae cmpb xchg arpl sub in xchg bound rorb dec xchg (bad) out adc movsl pop mov sbb jne jmp jne out xlat shlb mov bound hlt and in mov adc cmpsb pop hlt movsb and push lods jg cmp repnz xchg repnz xor scas popa jecxz push pop cmp cmpsb dec mov (bad) je loopne add ret cmp fiadd jbe or in add out sub aam mov out add mov jmp pop addr16 test mov scas xor imul xchg orl dec lcall or les push clc daa cld sub xchg (bad) repnz hlt adc adc cvtpi2ps cmp add and inc rolb imul or mov pushf loope mov dec imul jp add scas jl insb and and pop mov jns aas rcrl mov push cmpb lahf fdivrs sti movq mov cmc stos repz push push or xchg or aaa pop xchg es xor fidivrl in ss xchg inc movb out and xchg mov stos insl and ja fs lret andb out jp adc inc (bad) cmp out push add push sbb push stc cmc mov iret push jo into outsl mov mov cltd cmpsb dec pop push lret sbb (bad) adc scas add sbb xlat and (bad) or outsb testl dec test out idivb sub shlb outsl jno test fldl push aam add pop xor add fdivl mov lods xchg les cmp stc jo arpl nop sub inc mov dec lods push pop repz andl movsb mov gs xor out cmc bound aas das or fucomi aad cs inc push push (bad) xchg (bad) jg cmp fcoml jecxz or movsl adc test icebp fbld jle (bad) jno cmp divps fsubl fstpt xchg test cltd dec fwait cmp cmc aad fisttpl sbb (bad) scas jo adc stos cmpsl mov cltd xor push mov cmp test and pop mov data16 lret in rcl loopne or ss std sub loopne ret mov rclb adc insl add jns (bad) jbe inc mov sbb leave mov aam ss int3 cmp and mov sbb xchg das or bound fist idiv adc mov xor jp (bad) jp mov or add or mov mov mov dec repz popl sbb mov sub mov arpl adc inc mov xchg les scas adc sbb and movsl mov jns mov sbb adc pusha fsubrl fildll movb idivb lcall mov repz sti mov push (bad) xchg mov fs les orl scas out data16 add aam pop ljmp push (bad) jp das mov (bad) imul call cmc insb icebp inc fisttpll xchg int3 out fmull cmpsb inc fsubp mov lock fisubl pop cmp test sarl pusha std pop movsl je sbb (bad) mov cmp sbb fwait mov std scas lea ret xchg lret sbb push jge push sub mov mov inc mov ja sbb dec out pop test repz inc lret insl ds mov je adc rolb rclb mov ja popa mov loope (bad) (bad) mov out stc cld popa mov mov (bad) mov mov mov lock and pop pop (bad) out test addr16 or add sbb xchg in cmc hlt adc push pop cmp cmp inc mov mov pop (bad) xor je xor dec add xchg not ret jne cmpl nop imul out lcall cmp xor pop out repnz insl (bad) sti and mov and int mov cmp pop adc pop or int3 sarl fiaddl into sbb xor xchg pusha ss xchg out int3 inc pop mov out jae daa jp enter push ficompl push pop or (bad) cmp ret repz push sarl xchg jno mov fcom cmpl in (bad) repnz adc cmp add xchg push xor lahf or sub out or mov sub jmp cltd mov outsl enter (bad) ret ljmp rcrl mov or cmp nop jae mov scas cmp xor jne dec int int mov dec pop pushf dec adc cli movsl enter cmp adc cs lahf cmc fwait xor jb pop movsl gs pop nop aad ds mov in adc push xor cld ficomp push mov mov paddusw icebp popf jl sub fcoms inc std jmp or xor add mov add outsl je in cmp mov cltd lods xor add xor out stos fstl repnz pop bound rcr jno inc dec ja or clc and mov rorl rcrb add jp inc lcall mov mov stc push aam aad push iret out mov and xchg push bound fldenv cmpsl test out imull mov stos inc inc pushf or std das (bad) pop jo leave cmp fwait (bad) fwait sti data16 xchg inc jl inc pop aam mov sbb jge inc and addr16 pop data16 xchg flds pushf out test out daa daa and sub mov sub adc leave es lods loop and gs cltd mov push test mov mov icebp xchg (bad) ja aaa shll and lcall pand jmp adc cltd cmp inc pushf ret es sbb dec mov int jbe fldcw jo xor jmp mov ja jb mov (bad) (bad) clc or adc adc dec in sti mov sbb cs or jp jmp mov push cltd int3 xor sbb xchg push xchg shll add (bad) rcrl add lahf mov inc int3 es xchg out adc shlb hlt das in adc mov in lock lahf lds mulb xlat (bad) inc sub and in pop inc sub mov ja jle clc push repz shlb sbb push xchg and faddp xchg sub mov mov mov std ret call xor pop repnz xchg and inc sbb sar cmp dec pop int ljmp scas sub negb das xchg ds or jp (bad) clc in adc nopl cwtl test cmc push pop push dec sub mov xchg les scas xor test mov and sub add push jmp and pop cwtl dec addr16 gs ja inc sbb xor jg xchg es or shll add jnp adc mov jb mov mov mov mov out cmp xchg jp lret iret pop pop (bad) hlt loop in imul cmp xchg cmp mov push sub es addl jmp xor mov xchg mov mov mov lret test push add push push xchg cmp stos lods (bad) imulb fiadd loope (bad) loopne fsubs add scas call adc in aam out adc in dec fimul aaa ret xchg jg (bad) inc jno outsl sbb pop xor push push mov gs (bad) lahf push push pop sbb mov sbb fnsave cld or sub add stos lods stos loop int cmpsb stos dec out xor leave cmc icebp add xchg jb or pop sbb mov (bad) scas enter out psrld lea inc loope in clc fyl2x aaa dec jge sarb xor std es jbe shrl inc push adc hlt fidivrl sub test xor in stos mov rclb fisttpll lahf mov mov xor out pop fcoms pop mov lods add (bad) jo mov jo jns sub lea xor xchg sub decl mov xchg xchg insb in or add inc add sbb rolb push jl adc sbb mov cmp aas xchg adc mov push (bad) popf in in add out insb stc jp mov insl add mov call add jo mov sub push mov and leave aaa into mov (bad) movsl into or in mov es mov ret scas andb cmp adc mov xor nop enterw in dec sub adc xor jl in mov test addr16 sub pop out cmpsl sbb jge push cmp sub hlt mov mov into imul mov dec or fwait push loope hlt clc dec push jl xor or pop enter repnz mov stc lods xlat std mov loopne mov insl scas sahf push or push sub xchg mov imul push push loop mov (bad) adc mov insl push cmp ret iret mov push mov (bad) pop add aam push inc mov and and jbe add in aad sbb push sarl mov pop int inc sub and adc lea mov xchg mov gs dec dec je mov add rcrb push xor dec lret sarl test jbe jecxz fwait fwait icebp enter adc imul pusha sbb clc movzbl pop cmpl or pop push inc in imul (bad) in movsb jl hlt lea insl rcl ret pop repz mov data16 fisubrl aad or gs imul imul sub aad push rsqrtps ret mov test pop sbb jne jge xor mov pushf rcr fadd outsb mov inc hlt xchg mov inc cmpsb push fdivs xor add xor mov xlat test push sub arpl mov cmpl std dec sahf fldenv push pop add pop movsb lds xchg and (bad) imul stc stc es les xor movsb clc mov pop fwait xor xor daa jg pop ds in das cli daa aaa jl lret sbb sub sarl xchg mov pushf mov push repz cld pop data16 je (bad) jl pop dec xchg mov int3 (bad) and pop repz andb daa (bad) jb cltd jno cwtl cli push push mov push and pop rolb das inc sbb insl fwait movsb xchg sub insb jno iret roll scas cmp jle cmp and add test dec inc pop dec (bad) mov xchg mov cmp je int mov mov mov pop cwtl out imul cmp test push call mov ret imul in rcll repz xchg lret mov cmpsb mov mov jbe sbb add dec sub dec inc or mov stc int3 xchg aam insb mov faddp bound push sub nop push sti jbe cmp add mov xchg xchg negl cmpsb xchg in sub xor cmp outsl inc jo mov fisttp leave mov push add and stos adc cs or test lahf test mov pop xor cmc dec ficompl xor (bad) pop jle xor (bad) push push pop sbb xchg ret dec ljmp das xchg add push shrb cmpsl outsb or test neg jo repnz inc adc out push sbb dec in push mov ss insl add lods cwtl sub add jne jge sub daa mov pmullw jae rol (bad) jmp sahf mov xchg cmp inc dec jbe lods xchg bound (bad) mov aaa nop push into fist jmp nop dec (bad) fidiv add push (bad) lock (bad) out sub mov xor (bad) jnp insb pop xor (bad) xchg (bad) out ficoml (bad) aam sti (bad) push (bad) fwait das leave (bad) or repnz push pop inc sub push jo leave xlat mov mov std ss fisttpll or adc (bad) fisttp lea scas (bad) dec lds (bad) (bad) xchg jo fsts xchg mov xor stos lahf pop pop cmp jg dec mov cmp pushf stos mov (bad) pop jne and jb repnz fsubrs push daa imul out dec lret lods in cmovo inc push xchg lcall loop pop adc and ja icebp mov xor flds and mov add pop lock inc push clc lods mov test pop movsl sub adc lods jnp mov das mov (bad) sub into rcll pop fwait inc cmp xchg mov add xor lods fistpll sar inc push sub and xor (bad) das adc dec push insl fidivr push out sub enter lods cmp cmp int3 stc aaa ret inc jne mov and ja and in sub dec out lret adc mov roll nop fs lea mov or jecxz xchg mov or xchg sbb loopne xchg fs (bad) pushf into mov icebp loope cmp cmp popf pop popf ljmp mov adc xor push popa frstor sbb mov dec lods sbb xor mov mov sbb iret out mov mov adc sub fstpt mov mov mov aad pop xchg (bad) jo or adc out push and pop or in sar push sub push push xchg xchg mov and insl cld dec loope mov inc test inc cmpsl or mov sti in scas lods mov push cmp jne aaa roll jmp (bad) insb scas push xor push jne out pop adcl xchg popa movsb test and mov dec inc adc dec fcomp sbb lea fcomp fwait dec in push cld and ret pop pop notb fcoml sbb mov loop jecxz and mov mov clc mov mov adc inc rclb daa daa lock call pop mov cli or enter iret cmp jnp mov call mov mov jo lcallw mov jno push imul out mov lcall jae (bad) add addr16 jnp or mov or in jp jp xor aaa sub fxch jmp pop add (bad) hlt cld inc das in cmp loop aas fiaddl pop mov ja mov in mov test test mull hlt rcl jmp pop jge lods fimul lds outsb test sub mov (bad) (bad) (bad) out and sbb call or mov add or in rorb iret lret mov cmp mov xor aad push lret sbb add ja fwait imul shlb pop xor fnsave add lock (bad) mov das mov mov dec out jecxz fnsave jnp xchg pusha cmp test push fdivs cwtl and and ljmp cmp loopne (bad) sub xor lea xchg test xchg xchg leave pop cli rorl outsb pop sbb mov fiadd jge cmp xor pop jmp loop push sti test lcall (bad) add adc jmp std dec pop inc mov push iret insl pop ja inc loope sti js push sbb fnsave sbb addl dec into mulb ljmp jmp pop xchg (bad) mov add mov idiv xchg das xchg adc add imul (bad) movsl xchg fs sbb out imul cs push jle mov arpl movl adc rol or xchg mov int3 std in bound pop pop fstpl dec dec sub push sub sbb test sub bound dec cltd pop push sub pop xorb and lea push ficoml adc push xor mov dec push test and add add and push lea push loopne pushf in aad enter popa mov mov and add xchg push mov test jg inc out ds jmp inc mov gs xchg mov inc add add sub stos xlat sbb fwait icebp rolb dec pop ljmp and gs aam icebp shll test sub aad stos push jp pushf xor rcrb (bad) xor dec mov fs xchg push jmp add mov cmpsl sbb add mov mov xor xchg sbb loope pop imul or mov cmp push cmp and xor mov jbe push jmp repnz (bad) loope xor into insb stos popa sti mov jge stos aad xor or shrb and cmp pop sub in mov push dec xchg lock lcall leave push bound test mov mov jl mov insl push fmulp xor mov sarb sbb mov fs (bad) inc push fidiv push xor rclb mov add mov adc in clc mov stc in xchg cmpsl push aad test test iret xor rclb jo xchg cmp and xchg xor add mov ss mov cld lahf sbb pop mov call xor adc insl mov sbb add add ds fisubrl movsl push mov mov add arpl das aas fdivrl ficomp repz es or cmp int pusha sbb dec jge mov push fidivl call cltd ret and stos adc fsubrl dec xor fcoml loope sub xchg out xor decl mov addr16 call repz out mov xor xchg push adc sbb imul insb sbb push adc adc jge lods jbe in loope ja in repz lcall inc ds jae lds je adc jae jne push mov xchg dec sub rclb xor repz es arpl sub pop push sbb sbb mov push push mov add enter aaa jmp lcall push and and mov fiaddl cmp xchg jle mov in ret mov sahf push push test add jl xorl clc and int adc cmp mov or cmp push mov xlat sbb push insl imul movsl lret add dec test mov jno or icebp repz xchg mov and iret cmp aas push adc xchg inc loopne and in aad out and leave jp mov inc mov push push sub adc sti movsl int mov fnstsw and jno rclb leave push adc push fistp cltd xchg mov mov stos test imul mov push loop xor lret xchg jecxz ljmp lahf lods mov out and xor cld pusha adc fnstenv outsb xchg cmp or (bad) and jg xchg pop cli hlt das sahf pushf aad mov mov and and test dec adc punpckhbw lds jae les xchg xchg pop jo cwtl (bad) adc mov pop pop out fs and mov test fwait mov jb mov adc inc cmp fidiv fucomi insl out aaa stos mov xchg mov inc outsl stc mov fmull push mov mov xchg dec sub push lea fisttpl sbb test mov es and and outsb cltd or lcall scas lahf mov out or (bad) aad push aas pop daa pusha jle and call push mul xor dec lock orb std jno dec enter adcl or xchg and cmc push mov shlb jecxz pop dec hlt mov repnz or xchg jne mov movsl rclb sub sbb pop pmulhw lock aas clc adcl into enter jge aad ds pop out (bad) ficoml lret insb fisttpl xchg lret in jmp or insb mov lret cmp add mov ja xor es cwtl add hlt (bad) sbb out xchg jbe nop int cmpsl mov lods inc fucom les pop and jecxz fildll rcrb int jo andb xchg mov sub clc aas pop int3 add dec loope mov inc sbb adc adc leave ror mov xor ret ret movsb jbe fidivr test pop movsb jae cmp inc sub sahf data16 scas jl test or movsb mov iret pop push mov popa add xor call into cmp dec rclb call xchg xchg movsb cmp push inc (bad) jp,pn fsts addr16 (bad) xchg hlt cmp dec xchg out sbb std stos stc jns cmp dec pushf xchg mov aam (bad) and movsb mov jns and mov inc nop mov pop adc ret out stc xchg xchg es icebp jge jbe out and mov mov pop dec out and cmc outsb divb ret shll ja mov es pop subl je scas push fs inc nop mov pop dec mov dec push mov scas xor imul mov pushf adc adc cmp mov stos call cmp cmpsl mov inc or sub insb pop loopne inc pop in push add push push hlt rcll dec push cmp mov pusha mov lock fisttpl dec lock cmc sbbl scas jnp aad test mov cltd repz lock mov test mov js outsl cmp adc insl pushf mov xchg repnz repnz pop pop into mov adc sub sub mulb or mov dec movsb cmpsl adc and ret jmp arpl mov xlat jmp rorb cmp hlt or outsl add cmp push mov and shrb jae ljmp adc mov (bad) sti mov dec outsl pop xor cmpsl mov je mov addr16 aam shlb sub push int3 movsl xchg divl mov cli (bad) mov iret outsb roll or adc daa and lods outsl jecxz sub and movsb std popa cmc add (bad) outsl negl mov xchg test fimull enter rcl (bad) dec or sbb nop xorb dec jno and jecxz test xor data16 mov imul mov jnp sub fadds push (bad) test push ret push add push mov sti lea mov (bad) adc ljmp cli mov sub sub (bad) xchg insb jg and lahf addr16 xlat stos add lcall mov mov ret jns pop mov call jno bound lea clc fmuls or scas test aam fiaddl repz mov daa icebp dec mov (bad) popa out pop aad xchg lcall das negl cmpsb vmovaps es scas pushl mov inc bound or xchg frstor cmp jae call pop (bad) mov aaa mov pop cld mov xor mov push sahf sbb sbb cmp loope popa dec outsl mov iret adc out inc push std xchg repnz faddl lahf xchg les dec test lcall xchg out cmp push fcomip nop push mov test adc dec lds sub aad mov push cmp mov and mov repnz rcr dec cmc xor pop mov push add adc test orb cltd dec add jg and jbe test jmp mov xor sbb dec push enter sbb or lret cmp mov add pcmpgtw bound les enter call icebp insl pop xchg mov add sbb adc enter loopne stos out rorb mov or mov jle cmp adc lret aad jp das and inc (bad) jne imul pusha pop ljmp mov pop mov mov dec xchg pop cmp mov mov dec inc in push adcl lock inc inc outsb mov cmp jne (bad) (bad) xlat cmp mov or (bad) cmovo sbb push add adc mov fild xchg ret jae adc std (bad) lcall lret sbb imulb std inc xor movsb xor mov gs jp cmp cs sbb test adc pop repz movsl out rol pop mov pop std movsb push lods sahf inc or fstpl sbb mov pop mov lds ret popf push pop dec daa push movsl adc stc or sbb sub jle lods int stos hlt mov xlat std pushf adc out addl fsubl cli in fsubrl dec jne fldcw lcall gs dec scas ret (bad) jo mov jne xchg push subb dec push and push mov inc cmp (bad) xor (bad) and das insl and popa lret xchg orl mov imul out int push sub mov ret lret stos arpl pop das movsl iret mov stos fwait add jmp insl ret push xor ret scas sbb sub mov mov ja xchg out shlb adc aam (bad) xor pop add movsb push xor xchg insl lds adc insb inc fdivs ret lret clc mov sbb push pop repz out mov mov in mov lcall mov xchg push cmp mov adc test jae jae cld jmp es cmp imul outsl sbb ficomp push pop or mov ja add pop or add arpl scas or lds mov sahf dec ljmp mov mov or or xchg popf xlat push mov jge pop xchg gs adc jl jb and push ret jp adc fisttpll scas or outsl dec fwait push ret insl cmpsb sub aad test jp lret movsb outsb ja or jp pop and lahf es scas xor andb pop insl sub jno rcrb jmp xor test mov lods jnp push repz imul fistp cmp add icebp jae fmull jle ret lret push sti mov xor aad out int3 or adc ja sti outsb arpl pop fisttpl ret dec out inc add jle nop mov jecxz cmp aad xor xor jbe cld jnp mov mov stc mov pop sub subl cmpsb mov xchg addr16 jb pop xor jb popa mov mov adc mov add sub inc cmc sub mov jp mov ret mov jns movsb mov int3 add incl out out andl mov mov dec imul or sub or jnp clc push xchg popa or lcall sub pop cmp das jno cmpsl jle int3 push in mov mov dec push and ja add xor int3 movsl das sub stos mov inc aas popa scas xchg or mov lea push push cmc repnz out push sub sbb and jg lds outsb movsb scas xor rcl cltd mov in lds xlat imul xchg leave xchg lods cmp jns out in adc add pop popf inc test iret inc sbb outsb sub and mov sub mov call sbb jb hlt inc movsl push sbb mov imul cmp popf add cmp xor stc mov pop push and push xchg out push scas dec and test pushf push mov and stos mov aaa sub dec and sub cltd jae or out push (bad) (bad) push nop dec push std mov jge xchg mov movb popf subl sbb pop jnp dec lock pop lret mov dec push sub stos or ja inc cmp stc out add movsb adc leave in and in mull das jns xchg pop enter adc mov or sahf jbe and pop ja mov insb daa in and pop mov test lret or adc fstpl sbb pop ret push cmp iret aad or inc dec hlt adc fistpl inc adc enter pop mov xchg jp into (bad) xchg mov fisubr clc inc add jecxz imul int xchg pop xlat ja xchg in (bad) mov push adc notb sbb in pop dec (bad) xor push stos adc mov loope sahf adc fwait daa sti mov mov sahf or pop adc xchg inc sahf push movsb add dec arpl or and sbb adc mov fldt sbb inc pushf or fucomi out dec cmp (bad) scas jo fist xor mov scas jecxz cmpsb int3 in clc xchg mov jmp mov pusha push aas sub sbb dec mov sub pop sbb imul (bad) (bad) pop rcll bound inc imul add add mov scas and movsw xchg fisubr sbb mov pop and xor mov pop fcmovnb jb test fcoms mov popf (bad) out or nop dec ret mov cld insl sbb ret gs cmp divb cld fidivrl call bound out push (bad) enter (bad) testl lds popa leave ljmp sbb jecxz out and and mov hlt lahf mov jmp add sar mov std mov mov cli or loop xchg push mov data16 push mov test into sub es mov movsl push xor fisubrl (bad) jbe pop add add dec mov push cmp andb leave xor mov mov mov mov fisubr fucom xchg push or and (bad) xlat imul test sahf and adc and pushw pop gs jecxz imul lock push mov ss push pop add xchg es icebp push adc jle lret add pop mov xchg dec inc dec jbe and imul movsb inc dec mov insl xchg xor sarb sbb lahf dec adc into adc sub test xor or cmp frstor nop in int cwtl mov out cmc xorb in or test roll stos pop mov fwait insl xchg pop jne mov sub mov outsb rolb gs inc mov sub push insl loop xchg ds mov test (bad) push cmc sub add lret push xchg mov cmp dec ds iret mov mov xchg xchg xor jecxz cmpsl add mov loop fs push adc dec xor sbb inc fiadd sub inc hlt xor lea lea jecxz jmp add adc mov pop mov aam xchg xlat int3 and sbb std push dec push testb nop (bad) xor pop cli testl dec pusha xchg lock sbb push int push (bad) or scas sub jno adc adc xorb enter mov or sub ja je jo cmp mov lahf and jmp mov cltd and mov mov adc in mov pushf fldt lock adc arpl (bad) xor mov stos xchg aad add fcoms xchg jno addr16 mov mov cld mov xor sub pop insl popf mov adc insb push and dec mov pop nop mov stos cmpsl cmp mov push lock jne in pop icebp sbb test in clc call or cmpsl scas pop push pop sbb and dec push and pop push push sbb int3 mov jecxz (bad) xor divl push cmp mov enter xchg mov sahf fistp add sbb jle sbb mov push xor cmp mov (bad) ficoml and (bad) icebp push jbe lods xchg popf mov out fnop (bad) cmp dec push push cli (bad) cmc fadds adc inc (bad) lock pop loop cs loope shll insl test in sub (bad) ss push cmp sbb add leave push or cld int3 mov cmp push push imul dec fdiv and xchg adc push into aas mov ja ficom out push int3 pushf sbb mov pslld movzbl popf (bad) and mov sub and bound cmp mov and jb jo mov clc mov xchg and push xor inc jp into pop jp scas aas dec cmove cmc lock xchg sub lea lret push inc push mov ljmp adc repz pop cmc stos adc loope push push add add shrl in int movsl or stos xlat pop push cli andl enter fdivr je iret mov and adc push jno mull movsl (bad) outsl hlt cmp push and std dec push or mov fcompl mov mov (bad) nop sbb lods inc jnp lods (bad) ficompl sub jp pop mov stc cmp fdivr lret lds and in (bad) push and insl lds pop cmp push lods pop es leave pop stc rorl lods or pusha and ja jbe sub mov jmp arpl push fldl mov aam mov rcll dec roll loope jg negl cmc rorl stc xchg sbb inc pop jmp lock add mov dec sub mov fisttpl sbb cli xor jle jle mov add ja lea xor mov adc ja aad dec push mov testl add jmp mov ficom aam dec and pop add mov or jb repz push (bad) lock jle add icebp inc mov imul jmp pop loopne popa fstpt add daa (bad) aas inc add adcl popa mull ja fsubr xor repnz add pop rorl mov cmpb mov or inc test fildl push inc pop mov push dec nop cmp sub cld sbb push xchg or push jl mov xor dec add mov out nop mov xor fadds xlat cltd dec popa out pop xlat test mov fcompl inc ja xchg das imull xor ss int pop (bad) mov and mov out xchg out movsl push incb dec int3 mov into jg (bad) test cmp rcrb mov cmpsl cmp enter daa adc jne lods fsubrl lret das push popl xlat rolb loop adcl pushf es mov and push jae mov push mov mov popa and int3 scas test lds iret xchg mov movsl cmp lret stc iret lock dec std mov mov (bad) jl inc push stc (bad) jmp xchg test in lods cld or mov mov pop sbb push loope cmp dec shlb aad push jne les loope clc divb arpl cmpsb loopne fcmove ret xchg icebp cmpsl (bad) (bad) enter jns sub rorb dec loop push jg push cmc arpl xchg pop je xlat insl jb in popf je adc adc es out mov (bad) jmp adc daa xor idivl subl mov sbb add xor leave (bad) adc xchg popa sub or mov ds jns or xchg lods dec (bad) pop cmp jb mov pop stos mov xchg cwtl sub push mov mov and nop fiaddl iret sub shrl or and hlt ss mov mov adc pop in cmp adc mov pop mov xchg sub inc leave sub mov or cmp fwait sub push inc mov (bad) movsb icebp rcrb push cs jbe and pop cwtl pusha sahf mov mov pushw pop stos mov sbb and or xchg pop das and xchg test mov fldt lods and add dec aad xchg mov jne jne cmp cltd jecxz incb adc sub lea mov push outsb jne xchg arpl lods fisubrl fisubl jb adc lcall daa mov in sub jno in push out push mov testl cmp sub and sub mov inc outsl mov stc sarl sub adc cmp je outsb fidivrl pop mov mov fwait sub jge in popa xchg iret cli jl xor ds addr16 andb sahf popa add dec and imul jbe cmp cmp xchg mov push call xor xchg fwait mov out or jb in les cmc mov clc mov loope mov rclb shrb jno add sbb repz cmpsl sbb cld cmp fistpll (bad) out pop pusha sub enter sub mov add cld mov insl fimul icebp pop arpl cmp push lret sbb (bad) fstpl sti inc data16 rorl insl push out sbb divl mov arpl fidiv cld inc shll and dec dec andl rorb xor mov cmp (bad) and push pushf push pusha fisub sahf and mov mov mov add push enter test xchg add iret dec ficom and ret xchg (bad) mov sahf (bad) mov jbe gs lds (bad) das ficom sbb lret sahf push push int pusha out jmp cs nop mov dec sbb add xor xlat cwtl mov jo cld sahf xchg in das push lahf or ljmp adc or stos cmp ret sub and sbb out imul (bad) cmpsl dec cltd pushf mov jnp push imul outsb (bad) mov (bad) dec push pop mov push js (bad) jns mov xchg mov insb pop or push adc (bad) jbe or cmpsb pusha mov sub xchg dec or je addr16 sub pop push cmp jmp jmp sbb aas jo pushf cmpsl movsl je add jecxz nop xor xlat iret mov sbb mov ret and shlb lods add loopne das sbb sbb lock or fbstp mov fs push out mov adc fidiv xor test mov sti pop ja fs js push inc lret and rorl loopne dec dec fucomip fadds scas jne sti leave in out push negl mov dec mov sbb push cmp (bad) and xchg cmpsb stos push dec jnp jl dec mov or xor scas cmp inc or xchg pop bound hlt jle jmp xchg dec mov dec pop arpl push sub mov (bad) jb jns and mov pop adc push call xor jg mov imulb pusha sub int3 pop add outsb pushf rcll jg push insl mov mov cld xor jnp shll ss jb nop jae loopne lods nop inc and jns sub stc bound leave test mov jns out pop shrl push xor loope in movsb cmp sbb nop xchg sub lods mov dec mov scas add cwtl std lahf imul push daa fdivr cmp push add cmp cmovg pop inc pop jno iret fs pop pop mov mov cwtl dec mov cmpsl ljmp test mov fnstcw aas or and xor and jno mov mov xor inc pop mov cmpsb jne shlb sbb into movsb js cltd scas pop and pop subl xchg xor fildll gs imul fisttpl daa ret imul dec xor xchg add or frstor mov pop mov (bad) mov loope popa ret ds mov push lret push adc jp es lods fsubs mov push jbe jmp nop cmpsl adc sarb sub stos in push xlat cmp mov inc jbe jg stos movsb lcall in (bad) cmc fnstsw lcall ss jmp and cmc xchg mov icebp jecxz mov pop int lret aas mov inc cmp sbbl int3 imul cwtl mov (bad) dec lock insb jg fwait mov jb jno loop aam mov imul mov ja lahf inc nop call push and enter insl movsb mov orl pushf into or push bound cmp lret xor (bad) out jge cmp (bad) std pop xlat jecxz mov inc bound sti add sub fstl in dec pcmpgtd sub movsb (bad) lock repz (bad) sbb dec incl mov inc cmp gs lods mov popf inc out test sahf mov in jp pop hlt in test dec mov (bad) or adc xchg add jp cmp xor stc add xlat (bad) scas xor mov pusha adc and inc pop jne mov in aam enter out push xor jno push cmp pop jl cmp inc lock and fidivl sub or pop push pcmpgtb pop daa mov cs repz sbb sbb add or (bad) into xlat cmpsb adc fsubrl dec imul inc and dec decb sub das inc clc dec push cmp dec sarl jnp outsl outsl scas xchg adc movsl clc (bad) aaa mov test int3 ret xchg cwtl dec jb sub push sbb add mov cmp adc imul jle inc imul jle lea jnp jnp es scas ds cmp add pop add jns adc ss push or and mov add push ljmp jecxz xchg sub gs mov or jnp loop les pop sub cld nop and sub int rcrl mov jns dec stos movsl mov lret inc aas ret nop inc dec or cmp push js pop cld inc in sbb fwait mov add adc std popf mov adc jmp into push mov mov mov sar or dec inc and cmp rep ret dec sti loope pop push dec icebp jo (bad) xor bound js push insb cwtl xchg add ret imul xchg pop (bad) enter sar std fcoml jns inc mov leave cmp sbb shll sbb xchg pop add mov (bad) rorb or sub mov mov mov or or and mov jbe aam aas adc or dec sub sti inc pusha outsb sahf mov push fldl (bad) mov jmp stc cmpsb sub movsb pop jns lcall in (bad) sbb fwait rclb push repnz out jb or pop lds mov cmp mov add shrl out ret pop int3 or or iret add cmp iret out sub jge pop call ja aam jmp lret jae cltd and mov loop or xchg xchg push movsb cmp push aaa xchg or lret pop mov sbb (bad) daa int xlat push insl repz pop dec sbb sub mov xchg stos push rcll xchg adc mov xchg jle add cwtl sbb and jb mov int3 and jg mov cs xor negb xchg jp and aaa inc iret xchg jle (bad) gs insl push addr16 lds pop mov shlb inc (bad) jb pop sub lret aaa xchg fldl fsubs xchg pop push insl xchg xchg es xor push movq pop (bad) idivb push mov stc leave dec icebp dec les mov mov lret push mov pop xchg out pop dec (bad) push or jmp and int jle stos data16 cmc lock dec lock fbld scas or (bad) xor cs xor and hlt sbb cmp adc push push push in or movsb leave inc repnz mov (bad) fwait jno repz cwtl cmc pushf push dec sbb dec xor inc test das sbb dec jns (bad) stos arpl or out outsl sarb sub pop inc scas cmpsl sub jl push or arpl fldl mov jnp mov test int3 cmpb pop cwtl cmpsb mov lea nop or jnp jno push insl pop enter dec mov mov and (bad) push insl inc fwait add xchg push fist mov xor jle or xor sbb and and je push (bad) daa (bad) int3 pop jnp dec aad jbe clc sbb sub gs adc (bad) xor movb loop int int and jo inc dec xor dec les sbb sbb ljmp push mov add jle xchg xchg xchg in mov aam sbb insl (bad) jo pop into push mov mov inc sub repnz pop and fnstenv pushf in or inc icebp scas mov adc dec mov push aad popf inc and push sbb jl push lods jno aaa sarb scas ds pop pop (bad) test inc push add aaa loopne sahf jnp pop push dec sbb xor ja (bad) push sbb xor cmp xchg jae (bad) push lcall pop mov jge mov js and jne mov mov (bad) sahf lods mov aam (bad) sbb pop lea dec fcmovnb jns sbb jae mov and dec add scas xchg adc cmp push mov aam jb sbb mov sub add sahf dec sbb fs imul sbb jmp cltd push pop push pusha aam and pop aas add xchg cmpsl mov jmp shr or or mov movsl insl dec pop fimull inc mov push enter sub mov mov mov popa xor lds jge cwtl add lret out pop lds rcrl push cmpsb mov movsb ds test jl ret jns inc or neg mov mov sbb (bad) mov dec movsb push roll into imul xor std jbe cs mov ffreep les bound sahf roll cmp xchg or test popa outsl xor pop in rorl add je fwait sti in sub jl mov cmp bound pusha int3 scas mov popa add fs push je fwait icebp das das push into (bad) lahf sub jnp test jecxz out dec inc (bad) push mov scas leave (bad) dec outsb jl inc add sarl pop test mov imul into mov data16 popa sahf lcall fdivr cmp pusha sbb vpand movsb imul inc pop cmpsb aaa shll std lret ja inc fsubr out jns mov jb loop dec xor push pop out outsb repnz adc push mov pop faddl dec ja inc jno dec (bad) repz xchg sbb xlat std xor sbb and fwait lret (bad) leave mov int3 jae xor push (bad) mov in jg inc fistl pop dec mov (bad) out or lcall test sub xor and cmp xchg sub mov sarb sbb movsl rcr mov ret repnz fst daa jmp lret jns inc movsl adc xor fldenv push and call ret lret xchg hlt mov (bad) or negl hlt or pop mull in inc jle xchg outsb scas and jo mov outsb mov inc xlat aas (bad) xchg in iret sahf iret (bad) and mov dec and loope add adc cwtl xor adc jae insb jno (bad) lcall idivb push pop inc pop cli sbb push clc gs inc sahf dec push and mov push mov outsb inc push mov cmpsb push and dec xchg and xor mov in mov rorl inc jmp test cwtl mov jecxz frndint pop sub lret mov pop jg xchg rorl inc jp outsl mov pop mov dec adc (bad) and popl das pop dec push sahf repnz add inc sti xor jbe enter and popa or repnz daa xor xchg fisub jb jl mov (bad) xor adc data16 or and jge inc stos inc sti adc mov inc lds fildl sub push pop xor xor nop adc into mov cwtl mov lods lahf push test dec negl pop sbb outsb insb push iret cmpsb sbb sbb jae xor out fidivl mov or mov add enter lret pop in stc mov pop enter xchg loop push call (bad) (bad) xchg xchg ss jmp xchg xchg rcrb adcl xchg push sub cmp or inc jecxz sub int imul add xor mov dec into mov into xchg pop movsb lret fcompp outsl fcoms jns loop mov xor pop pop jbe mov mov cwtl cmpsb inc mov and jmp jg dec in xor loop mov xor leave jne pop jnp mov or shl mov rcrl and add sti cmp xchg and popf fs xor arpl jo (bad) sbb in scas (bad) mov js ret (bad) popf roll fistpll add mov rol jno fcomps pop xchg outsb lods imul pop sub mov mov or test push iret mov bound cld xchg ja (bad) stos sub sbb pop shlb xchg jp data16 movsb es repz sbb push dec xor push fisubr push pop neg or scas jecxz xchg and xchg cmp mov aaa sub call inc in call cmp inc mov daa lea in sbb xor inc or (bad) pop dec ss dec jl cmp out fwait out lcall mov push out xchg aas mov ret cld push lds fsubrl stos lahf jge leave sub cmp dec adc out cmp aad stc (bad) push popa fidivrl ret ffreep test call dec or lcall arpl lock mov inc cld dec mov (bad) xor std std push dec or sub jmp das outsb gs push xor jl aad add sbb dec xchg lahf or and das push push bnd cmc sub mov adc xor and sub jg sub push jecxz (bad) jecxz sbb or repnz xor push pop aas sbb jae lret movsl scas dec dec pop in mov idivl lock mov stc xchg repnz daa inc xchg jo mov out pop pop xorl inc mov dec mov mov adc mov jno xchg mov jnp push (bad) lahf sub mov stc lds fidivr mov out iret in arpl lods fdivrp jno mov jecxz jmp pop cli jecxz xor push or sub enter jbe nop out ja inc aas sahf aam pop outsb je and in jge mov loope mov cltd and dec shr call cli add iret mov dec sub loop ret add call mov das dec push pop jecxz (bad) xor and je mov (bad) and (bad) dec loope or (bad) cmp aas outsb loop lret orl mov (bad) pop pop (bad) fdivs mov push int or loop pop popa lret incb aad cmp ljmp movsl fs insb pop lretw jge mull add lret jne cmp popf cltd sbb out es cld cmp and sub ret (bad) dec and push push lods adc sarl aaa mov in cmp xorb sub mov (bad) (bad) ss std call cltd fcoms int3 loope mov or aad insl aad xor lea cmp or pmullw and sbb movsb mov es mov mov in inc pop inc jp mov mov repnz jno jle (bad) mov mov imul andb lahf add xchg mov enter add arpl pusha addr16 outsb xchg push cmpsl mov xor mov xor dec lods (bad) (bad) fcmovnu xchg div bound add orl idivl aaa mov fstpl in fldt mov jnp jmp mov lods inc test aaa mov adc dec sti jp pusha adcl (bad) add es pusha inc test pushf dec roll pop lret xlat push outsb xchg aaa dec mov lret sarb jge rcrl mov loope imul imul push or in adc test cmp hlt or (bad) xor dec lock and (bad) pop sub push xor sbb lock and (bad) in xchg sub cs int neg int3 popf aad inc mov cltd jle in push cwtl xor mov cltd mov or jge pop or inc data16 bnd add jne div outsb les ljmp js cmp add mov sub jmp addr16 repz xor cmc pop outsl or xor dec inc lds out push inc pop arpl and cmp jno fdivs push addl and fldln2 roll xor in dec pop push xlat pop and les (bad) dec fs imul lea jge rorb xlat fild es inc pop pop or sub sarb stc mov stos nop cltd inc add xchg enter push inc jno xor dec int3 xchg xchg xor sub jmp (bad) cltd push (bad) repnz arpl (bad) std xchg jbe mov shrb push xor pop or push xchg out imul out jp (bad) fisubl push out sub arpl outsl fs (bad) adc int3 xor adc or add push rcrl sbb push div dec or vcvttss2si push pop daa fdivrl and std pushl mov sti punpckhwd mov lahf jbe xor sub jecxz es mov or add call out sbb mov sbb stos loopne mov jmp stos push jmp das out push out fistp loope or pop (bad) loopne ds fbld sti mov dec pop jecxz mov sbb je cmp xor jbe push pusha test stc pop sub in or in movsl repz inc push fidivr pop leave scas bnd push and adc (bad) (bad) lock call outsb and adc sub leave cmp pop xchg fsubp aaa fldpi out mov stos mov push dec push cmp cmp in jmp stos mov das testl imul mov jb cmc pusha call mov push and jnp test imul sbb cld add (bad) mov ljmp jg das xor popf mov icebp insb mov (bad) add mov sub aam test movsl dec insl (bad) loope xchg sarb stc sub aaa stos pop into mov gs mov xor into xor pop nop jno inc pushl cmc (bad) in scas repnz arpl pop out test adc xlat push (bad) out scas clc pop add leave rcrl shll push shr ljmp call dec pop aas lar mov lea inc sahf cmp loopne or clc push in mov adc (bad) cmc (bad) lea jmp xor cmp or cmp pop jmp mov mov mov or inc mov jle pop fldenv stc inc push push das loopne addr16 push (bad) pop out sahf jle dec push sahf icebp pop ljmp push mov rorb lods lcall jp or jmp mov add sarl jmp mov out push mov xchg iret lods rclb dec mov imul pop lahf inc adc fsubrs sub dec (bad) cmp (bad) cld loop push (bad) push cmpsl xor add imul repnz idivl aad adc sbb pop fdivs imul jp stos adc outsl add mov cmp mov push cmp sbb (bad) int3 and rorl scas lea sbb f2xm1 jg xchg jns nop cmc jl roll (bad) lock adc or jmp stc rcrb or adc cs nop mov cli iret sub cmp fidivr or adc mov jmp xchg pop mov push sub mov (bad) testb adc xchg call fildll xor fimull jmp repz shrl fnop jb test mov les ja rcrb jne xchg cmp add inc inc call xlat cmpsl inc push insl jecxz repz lret mov dec push popf mov push les aam sbb cwtl dec push mov jno (bad) dec pop std mov insl (bad) xchg jne cmp in mov test jae (bad) xor sahf mov push (bad) faddl lret jo or adc repz loope push push mov shrb mov ss xchg aam xchg cli sub mov cmp xchg push sbb mov movsb cwtl xor lods movsb inc cmp mov aas pushf subb fwait (bad) pop nop std or mov pop (bad) mov insb or pop icebp lcall imul ja cwtl cmp shlb (bad) pop jp xchg mov xchg clc mov push jnp pop mov mov adc mov xor movsl add xor (bad) pop (bad) sbb jne dec add pop xchg mov loop pop fucom ret jecxz (bad) rolb stos mov push insl mov mov rcr test cmc stc scas inc clc xor notb xchg in es push (bad) mov cmp cmp test xchg movl inc std sbbb adc mov cli leave and in xor xor les lret leave jb add aam fbld inc push das aam xchg cli sub push jp xchg sbb lods inc sti jne xor sub stos cmp bound (bad) movsl imul pop dec sbb test scas aaa cmp comiss les (bad) xchg xchg and mov movsb dec push mov rclb mov or dec lret mov inc shr push push or add movsl loop inc and inc cltd xchg sbb imul xor xorb neg sbb push or enter aaa jp sub push jmp sbb imul test cmc xor inc push repz add xchg (bad) popa rorb xchg push cmc lcall stos jbe lcall or inc pop sub add test in nop inc (bad) decl cmp js mov xorl das push std add pop fwait shlb pop aas les orl pop les push aam daa call mov enter push das cli push cmp cwtl xchg or out add jecxz pop pop stos outsb aam xchg mov in orl std sbb stos and xchg pop mov lcall mov decb adc (bad) or inc pop push cld cltd fistl mov push lret iret add out mov push aam adc mov jno sbb sti mov sub add push imul repz movsb pop loop aaa loope test mov loope mov and movsb ljmp jmp call mov addr16 ret mov into into or lds jmp mov pushl std push lea addb pop bound pop popw xchg or mov (bad) push (bad) jne (bad) dec in mov std ja mov pop dec and cmpsl push pop (bad) sbb fistpll rolb popa sbb cmp lahf add aam lock sbb xchg pop subb jp clc jb loopne cmp mov mov fistpll add cmp cld push pusha outsb xchg xor pop in icebp sub and lret jo fstps mov cmp fcoml (bad) inc mov fcmovu sarb push adc dec push scas std mov scas sti mov add mov rcr ss in lcall add push xorb mov sbb mov movsb out fs insb shll aaa fisubr ficompl ja rorl dec int mov jns iret xlat out fimul cmc and and int imul mov and mov std ficom nop les (bad) xchg dec shll daa sbb aad cmp call push imul cwtl or fldenv stos les in addl or dec in xor mov scas imul inc mov loop pop sub push add or cmp mov rorl sbb push imul push xor aas mov pop jnp clc ror jnp pop push sub inc dec pop inc in scas lret loop dec (bad) and in mov popf or gs enter or loop int3 lret mov xor xchg negl jae add call cltd mov mov sbb mov pop jbe pop inc sub sbb (bad) adc push arpl lods mov mov ds addl and cmpsl mov pop mov cmp repnz les mov xor out and mov lea push bound lods fsubs xlat cs sbb sub fistpll out pop pop shrl and adc adc mov (bad) sbb push out xorb push jae dec mov or mov or cwtl dec loop mov lret or jmp lea lcall jge xchg repz mov loope push inc aad ss cmp jnp jns push adc in mov fsubl lods ja subps inc popa lret daa aaa sbbl shrl and push xor or fisubl fldt sbb inc arpl popa dec fidiv ret mov (bad) mov out pop cmp popf inc pusha cmp (bad) or imul cmp mov dec jl lds sbb mov jb or xchg inc dec lret or cmp aaa dec lods pop or and stos dec bnd movsl jo dec notl aaa lods and in mov adc outsb push repnz (bad) xchg add cld daa dec and xor cmpsl repz mov and (bad) pop or fwait scas arpl test jae fisubl and ret data16 inc mov push xchg and pusha pop out fild pop stc test cmpsb xor dec or push lock mov ret in lods pop inc ret xchg daa fcomp xor lock jl stc leave sbb inc add sbb test push add push out lahf pop lea pop (bad) scas outsl pop or hlt xlat imul jns (bad) and dec and mov adc movsb xchg adc mov dec push sbb (bad) mov sbb arpl das pop mov out dec jae and ljmp jmp jo dec fwait imul into ffreep jle inc inc cmpsl mov inc jo,pt je cmp cmpb mov xor xchg xor sub out icebp push push lahf inc mov mov xchg sti stos ret jg inc fdivs pushf mov mov mov add add jns es ss int cmp mov push aam dec or push xchg xchg or dec lock jge add nop push adc mov sbb cmp mov cltd pop repnz push jmp ja mov ds (bad) push lods sub mov inc sub xchg nop xor lods pusha das cwtl mov sbb jl and cld push ss push mov icebp inc adc sbb mov (bad) dec lahf mov xchg movsl cmp add mov fstpt loope inc push mov ljmp xor xor aaa inc xchg aam cli subl mov enter (bad) mov scas add mov and jmp add mov nop out add stos mov sub cmp dec cltd adc test jmp mov fild jp mov mov xor cmp pop jae (bad) sahf sub das scas xchg dec pop push ss icebp fnstenv sbb fsts sub adc vmwrite mov adc inc adc mov fucom mov test inc xchg mov dec or add cli rcrb mov sbb imul addr16 jmp jecxz xchg mov (bad) lock repnz xchg cld jmp dec cmp imul jnp mov das and or pop jle sti sbb in enter cmp int3 out addl roll xchg test ss pop fldl cwtl movhps mov das mov mov xchg xchg mov inc push xchg jbe stos add mov les dec mov fs enter in fdivrl mov fwait jno fnstsw out dec jo push daa gs stos mov mov (bad) cld cmc mov (bad) xchg es test rorb mov int3 cmp test dec pop mov pop cli (bad) cmp into arpl add insb xchg pop xchg outsl into cmp (bad) mov cli faddl shlb aas jle addl and roll add int push std cmpsb movsl popl cli add rolb xor xor insb push bnd popa sbb int dec sbb (bad) mov inc mov push loop lock mov repz ret pusha mulb push mov dec cmp cmpsb xchg inc fisttpll aad cwtl mov push cmpsb mov push adc sahf loop jno jbe xchg pop or sbb mov sub jmp (bad) imul mov out in clc push pop pop xchg lcall enter cli xchg mov sbbb mov outsb leave push loopne cwtl jg dec mov cmovb and (bad) lock jmp fcompl mov sbb sub jl jl jl out fistpll sar hlt cmp jns cmp out dec push dec jg mov frstor fwait dec icebp pop fstpt inc adc in call cld insb into rorl mov adc sbb add push mov outsl or ja arpl sub (bad) mov push jecxz xchg and mov in mov inc pusha insl xor inc mov ret ds lea mov dec add ds push xchg js fadds pop addr16 jbe add push pop out cmp sbb lret xchg xchg dec rcll jge mov movsl pop cmp push incb stc dec mov insl push inc and mov (bad) hlt pop cltd dec int ss jo and popa movsb inc lock jns mov jle add mov outsl and inc dec or dec into lret xor sbb xor push mov mov and or fbld repnz dec mov mov cmp or and dec pop xchg bound jae dec pop jnp test pop decl lods push add adc mov push (bad) xchg inc sub mov xchg xchg pop clc push repnz es dec rcl sti mov cmp js jge sarl adc jge loop inc mov (bad) divl les dec xchg cmpsl xchg pop mov push add sbb das ret xor in add mov xchg sub aaa cwtl add into loop sbb adc mov stos stos push lcall cli dec loopne div (bad) sub aaa mov mov jmp pushf jge into pop xchg subb nop bound dec (bad) call mov jnp inc dec inc repnz fadds rep xchg add dec add cmpsb jmp test mov fidivrl add sarl sbb fisubrl movsb xor out fs call out sbb mov sbb xor sub mul imul cmp pop data16 and adc in or loopne fildll mov cmpsb into pop fild xor fcmove lods pop cmp jbe cmp insb add in pop out das lret dec push jmp lock fildll (bad) mov pop push cmp sbb rcll jbe movsl enter or mov inc scas (bad) fucomp pop (bad) dec jns jmp jl mov push sahf mov sti scas test push xor aas je mov mov mov lock mov cmc inc mov mov sub lret lret adc popa les xchg imul sbb stc add (bad) or clc in popa (bad) xor jg aaa frstor cmp xchg lsl xchg jmp outsl test loopne test dec jmp fnsave xchg inc or dec fsts jmp dec pop adc mov xchg es cmp mov inc mov mov pusha push dec dec mov inc and pop jbe xchg sbb (bad) pop stos (bad) aad int div pop dec je push subl and pop mov push daa nop jno cmpsb data16 stos cld repz test mov add popa adc cmp outsl int outsl js stos (bad) xor imul or iret test mov scas fisub fnsave or push enter jmp loop inc sahf (bad) mov pop push jbe hlt adc andl cmp cmp dec xor push test pop int repnz inc movsb outsl fcmovu cwtl pop insl ror loope popa lret test mov push shrb add adc dec dec (bad) loope and ret pop sbb mov and xor push cmpsl (bad) mov mov cmp (bad) mov adc cwtl mov mov adc and popf out adc push push sub cld and cmpsb mov popf mov mov inc cmp cmpsb (bad) jb pop pop inc pop loopne pop mov mov add adc jbe jge ja push or pusha movsl das pop mov dec bound les and int3 add push xchg mul xlat pop jg js pushf pmulhuw adc out mov in ret mov rol or mov dec xchg inc add in jo xor (bad) pop mov push out sbb jp mov push orl pusha add jg nop pop sahf inc push mov clc mov arpl into mov je in or push xlat dec xor push out out sarl push inc ljmp leave mov and dec xchg mov enter outsl mov movsb xchg imul push movl add imul adc mov cwtl jae test icebp pop mov je mov clc pusha add into push inc adc and enter cmp cmp sub js ret pushf cmc icebp aam mov ficoml mov adcl ret scas jecxz aas mov mov sub hlt stos mov pop mov test xchg add arpl cmp and or sub mov dec dec (bad) mov daa out mov repz jnp sbb clc jle push add sarl jmp mov test addr16 add fucom sti scas jnp jnp cmp das jae rcr sbb clc scas jnp sbb mov xchg pop mov jbe or adc xchg and pop cs mov xchg (bad) flds sub mov stc call push mov out pushf std sbb push arpl inc stc cltd fsubl movsl xor xchg pop jle cmc sub pop fbstp mov leave add adc popf movl lret pop xchg les mov cli imul jge fmuls mov mov int mov add mov lds aam jbe jo jl repnz and dec outsb int3 out in addr16 bswap mov (bad) hlt into or mov aad fs xor jb xchg mov pop mov ss bound dec sahf inc xor lods xchg sti mov mov sahf aas and sbb cwtl inc loope call andl xor out fwait mov jp ror pushf sbb aad xchg jge xor pop mov pop mov decb in and sbb xor mov pop (bad) push rclb lret in js or and sub ret xchg mov pop xor loope mov push pop into jno out mov xchg xchg mov int3 mov push sbb jns mov push hlt mov imul jl mull loop ja into mov sub or inc cmp mov jle mov mov add movd lds push outsb push out (bad) push lret xchg jnp data16 jbe lods popf cmp sbb (bad) into cltd xchg pop mov jno (bad) jb and int sbb mov inc push cmp out popa xlat pop add dec and sbb mov jge insb outsb pop inc fwait sub pop jge sbb cwtl imul dec int mov outsb popf hlt sahf inc test lret sbb cld out test pop out mov jecxz jb mov dec or xchg jns inc jb push ret sub or add sbb rorb sub stos lods mov add mov imul mov ret and enter into mov sbb jnp je stos loope out jnp sti out out movnti in popf (bad) call or dec pusha sub add and inc inc scas sbb lcall loop dec imull addr16 mulb ss mov pop inc push in adc int3 and sahf add hlt dec int xor movb stos mov imul insb pop popf add dec mov icebp pop push xchg push mov cmp movsl jg add or add and outsb ret push push cmp mov push and dec loop scas outsl sbb repnz push ds mov gs push fstpt mov add or (bad) and xor dec ds out mov push ljmp popa push cmp xor imul lock dec sti or mov (bad) push push and or jns popf insb inc xchg ja,pt test mov cmpsl mov cwtl or or fisubrl inc jp fcmovnb sbb xchg mov call xchg sub mov ret icebp cltd stos loopne in int xor int je jbe lahf sbb pushf adc mov add mov xor inc cltd nop adc call sub nopl (bad) xchg jp test inc cmp shr and fwait and loopne mov clc test jge (bad) or repz xor outsb jno mov and aad add inc mov mov (bad) js sbbb pop rorb out mov mov loope lahf jns cmpsb scas aam cmp aad (bad) es in sbb cmp pop insl out push pop out mov in dec cmp jl lret das sub xchg add xor mov add cwtl and negl jnp lret dec xlat sbbb rolb popl push inc test inc mov lahf aad add ds adc pop jne inc xchg jle ret inc rorl rcr push xchg mov lret daa push pushf dec inc es inc push fmull or pop xchg sarb mov mov out push dec cld jecxz lahf xchg icebp cmp outsb (bad) mov or or push inc cltd or mov test int3 mov mov insl nop pop inc lcall cmp inc jg xchg pushf dec dec ja jg xchg sti xchg cmp loop xchg imull fdivl imul data16 das cmp or sbb push mov pushf out jp pop or mov dec outsl push mov lcall cmp sub cltd cs call push pushf insl pop test je (bad) popa push in pop pusha jge imul iret enter lahf out xor dec cwtl mov gs mov cmp mov loope xor pop leave outsl mov jno es in inc dec lods ds pop cld mov adc (bad) test add push and jp mov xchg ss lret std pop dec (bad) les es dec push and push xchg mov (bad) outsb ret and decb lcall mov jmp push pop and xlat out in js mov adc int xor push test sbb push das pop jmp push insl xor ret mov popa sbb test clc pop mov adcl pop les push test inc into movsl mov add jno add mov enter in cmpsb rcl sub sbb lods lret pop psubsw jl inc pusha mov push adc sub adc mov scas jle addr16 sahf fsub pop add gs fcompl pop or dec lods push jp lret jge aam (bad) xor js ds in dec cmp sub xor sub fwait aam shll push mov mov mov xchg jmp mov sarl xchg pop inc cmp adc ljmp jae xchg arpl nop add aas test insl call popf stc out or ret jo ss lds pop scas leave idivl stos cmp cmpsb sbb ret sarb mov sub sub push outsl aas and add jg sub adc and out movsb daa or ss dec icebp (bad) pop sti cmp pop mov scas mov or mov dec clc imul repnz es inc pop negb mov mov push jp jle mov mov faddl adc int3 (bad) lock mov inc pop loopne out push sub cmc popf lea lock (bad) popa fcmove jb sub push stc add out ljmp mov jbe dec adc outsb sub call and in loope fdivrl data16 dec mov adc fstps movsl out fisttp dec nop nop inc mov jno jg js cmp adc pushf cmpsl push mov mov insl shl xchg pop rcrb mull std add (bad) mov aad bound mov movsb mov add decb add stc popl mov xchg xchg push fmull loopne lret pop negl mov push repnz test mov or dec inc in dec imull xor je sub das pop mov popa stos pop add add ja push sbb cld and sub mov sbb (bad) adc ficompl movsl in pop lcall (bad) hlt add pop rcrb xchg sub call mov jge lods arpl arpl bound es xchg stos mov inc test and (bad) dec mov les jb sub ss dec adc adc je sbb sbb (bad) xchg sub (bad) cltd or push loopne es adc mov repz mov pop jb xchg punpckhdq and outsw and bound es mov push add paddsb jbe out mov (bad) fnop push jle xor mov into mov jb and lods negl data16 popa dec cltd icebp outsb mov rep out jne in mov xor cmp push adc pop sbb xchg out sbb mov idivb lea mov cmp cmp lret sahf fiaddl fwait inc xor mov mov xchg outsb sub cmp gs ljmp and add jno mov add mov push mov mov jno clc loope push lods dec cmp lods jne xchg (bad) call aaa loope sbb adc ljmp call frstor xchg cmp test xor (bad) jae and leave out ljmp xchg les movq imul jne cmp pop nop sbb int3 jnp sbb mov leave in sbb xor or push (bad) (bad) jp cmp fiadd pop (bad) mov and push inc mov fwait insb cmp inc es stc sbb push shll add icebp gs dec sahf push push movsl mov aam roll adc int3 pop in mov cli mov cli xchg std cmp push mov add jge in dec (bad) pop adc cmc sbb pop dec xchg ljmp jno movsb ljmp jl or add les and repz cmpsl push dec insb inc cmp aad mov jnp leave xlat and repnz add push in sbb outsb loope inc xor pop xchg sarb inc (bad) mov idivb lds jl ja popf pop push mov cmc xchg inc arpl call mov pop mov pop movsb jle nop stos jo (bad) cld fdiv dec insl daa jbe jp arpl sar call sti jecxz icebp pop jns adc aad loop mov dec mov in mov add test mov dec (bad) aaa sbb mov dec loop jnp enter andl es push xor (bad) aam aam sbb xchg or jmp jg mov push jge sub stos rcrl mov mov inc test jmp and jg dec pop xchg push mov inc sub stos dec jb xor dec fadds pop inc cltd test cmp stos scas or into dec dec cmc or dec (bad) jne ret pop mov pop add ficompl loope push adc xchg fwait loop outsb jae pushf push mov int3 jbe add mov nop pop out gs pop xlat adc adcl or (bad) negb sub stos mov or bound jg (bad) mov cmp mov xorl popf sbb in inc mov lahf aad xchg out movsl ret add push sbb mov push cmp add inc les xchg push jmp ror inc or cmp into int mov icebp das or enter daa push xor cmp dec cmpsl and or negb or cmpsb ljmp mov push mov dec rorl and mov and addl mov cmpsb aad (bad) int3 jle dec jne pusha xchg int3 xor mov (bad) xor in rorb mov and cmp pop jbe mov fld cmp aas nop cmp aad cmp adc xchg mov cmpsb ret jns push leave dec mov pop push nop hlt ja addr16 mov sub stc jns cmp popa xchg inc nop call inc popf mov and sti (bad) shrl aam add xchg js mov and mov rclb cli inc repz out call push jge mov in dec dec adc mov imul aad test sahf pusha fdivr sub cwtl int3 and mov xchg arpl js dec add adc push cmp lcall sti cli clc mov popf mov mov in or pop mov je cmpsl sbb pop mov sbb dec jl es les sub jns roll xchg dec and (bad) aam shlb pop cmp inc sub xor dec shll xor inc cld data16 and loope mov xchg mov stos rclb testl cmpsb inc loopne lods add add lods xlat add clc pop xchg push dec jbe mov sti add or clc jo fs xchg fnstsw adc jae and dec add repz add push pop aas insb and sbb arpl sub fisubr dec ljmp roll pop mov in push sub push data16 xchg es hlt jl cmpl into imul loopne push xor push lock fldl (bad) out jge aad jmp bound push cltd fdivl lock xchg pusha mov dec sbb stos cli insl fmull inc fnstsw add and sub call pop dec xor push ss xchg lods in push push xor cpuid xor jge dec push or mov outsl inc mov rolb mov pop (bad) xchg shrl dec sbb jb jmp popf pushf mov call dec js insl test sub xor loop xchg mov pushl outsl lods and mov sbb into loop (bad) scas dec mov jl adc mov pop (bad) or scas and and ror stos xor (bad) ja mov or arpl jle mov add mov dec lods shrb mov fdivl xchg jecxz lret inc jmp pop sbb jno cltd (bad) popa pop and inc repnz leave f2xm1 dec es inc mov inc mov iret push arpl mov mov adc push add pop sbb cmc mov cwtl (bad) xor (bad) aas das push loope xor pop xchg arpl ds sti je das pop inc jmp pop jbe scas fdivp ficom pop js cli cmpsl inc mov int3 cli mov fmull in add (bad) dec adc xchg stos pop enter push incl inc xchg aad jmp outsb fwait scas lcall mov icebp xchg in mov daa xlat pop pushf xor movsl lcall jg push enter daa mov mov push shlb mov xchg cltd push fwait ds ret inc sbb inc jle (bad) bound xchg add sbb xchg lods and jo fisttpl shl sub lahf imul mov aas inc pop sub outsb dec mov fstl movsb fs mov std push lock cli push outsl pop add jle or sbb addb fwait sub je inc subb cmp xchg into popa or push push iret fwait cmpsl (bad) adc in mov inc lods pop or pop or sbb sbb mov ljmp adc or cmpsb pop (bad) mov mov sbb push fs inc sbb inc or loop lods sub mov and jne outsb outsb ret cmpsl dec xor mov ss mov xchg lds inc sub faddl cli and mov fisttpl mov loopne adc out cs dec xor pop adc sbb jg fisubl adc mov lods pop adc (bad) xor inc fistpl jp popa test xchg lahf aad sub mov pop add or call mov leave dec pop inc das xor or xchg daa (bad) lock cmp push lahf sub push pop clc adc inc mov lock gs dec jne push stos xchg xchg add popa insb sub pop mov das cld hlt add pop mov push adc enter push push push inc jne sbb jg mov mov push jge mov addr16 adc mov jo sti icebp ja loop jmp jo adc inc sbb call pop mov mov dec mov mov add mov call fbstp not (bad) shrl or jle xchg add shlb sbb xchg xor cld cmp (bad) mov push out test cs imul jo cmp push jo pushf dec adc sbb jecxz push popa mov pusha arpl insb aas loopne pusha lret jl insl adc jo pushl imul xchg dec add sub jns test xor out (bad) dec cmpsb test mov mov loopne sub jo and xor out sub jp inc sub lcall push fistl inc and stos iret mov mov (bad) les cmp sbb add xchg daa mov imul outsb andl test push and popa mov mov sub push ds mov arpl inc mov shrb loop mov xor movb and pop pop dec int3 push test pushf inc es mov test jmp int3 scas dec in pop and in insl fwait adc push daa add insb push repnz add scas ds leave mov dec jg mov mov and xor pusha in daa add mov loopne push cmpsb mov mov fisttpll cmpb lds pop movsl (bad) jmp xchg into scas push mov pop cli cld (bad) mov leave repnz arpl call call pop dec outsb in repnz mul mov icebp or adc or mov addr16 xor sbb push fadd xchg cmpsl inc ss shl mov fildl adc xor fsts outsb int3 cmp push pop fldcw xchg fwait add lock outsb cmp mov mov sbb add inc neg sbb sahf fidivr scas xchg pusha mov lods pop insb fcoms xchg mov and jbe outsl mov (bad) xchg xchg xchg mov into push sbb cmp stc sbb aad xchg lea daa xchg ss or sbb jb out nop mov in push mov inc push loope out sub pop popa dec push outsb jno jns mov pop mov and dec jne ret addr16 stos call push push mov sbb cmc xor pop xchg dec mov addl insl or clc icebp mov cmp cltd inc sub dec (bad) out and pop xchg or pusha out stc mov push sub cltd jle cmc inc sub mov in mov lods scas scas xor cmpsb mov adc outsl (bad) stos fs mov movsb cmc lahf pop leave mov jbe (bad) pop clc imul inc adc sarl enter cmp xchg cld add cwtl mov or pop push or ret aad lods jmp ds add mov addr16 cli pushl sbb mov cmp sar sub movsl in mov stc pop gs insb repnz das sbb dec jg sub pop mov push inc xchg (bad) cmc in push push out lods js lcall icebp adc add inc rcrl pop out repz push cmp fs (bad) xor shr addr16 dec pop and dec (bad) out and stc inc or clc mov dec inc fnstenv addr16 enter movsb in dec outsb jne xchg dec lds cltd sbb pop insb jg ja insl fsincos imul sub mov mov cltd push mov sub aaa (bad) jg add push mov in xchg lret push test fldenv cmp cld loope xchg clc fwait mov in jmp out aas sub mov dec mov das mov cmp xlat cmp pusha sub jmp jg popf and push push cmp push sbb shlb nop push (bad) pop dec leave pop mov inc mov adc or jne or inc imul add repnz shrb (bad) cmpsb (bad) sub (bad) jae xor inc ret xchg xchg lret and dec xchg shr (bad) lock test das jp jo add jecxz arpl jl ficom enter aad xchg lock pop xchg (bad) jle cltd pop std mov stos pop mov adc pop lods lock mov push stos push jp movsl popf sub (bad) stc inc mov std movsl fsubrl pop jle cmp inc jne push leave dec cmpsl test mov lcall jge outsl fistl clc rolb cmp xor sub mov fstpt mov rcrl loope lock xor insl mov out pop dec push push test jmp int xor jge out pop int jae (bad) dec mov mov ficoml (bad) mov cltd lahf push test fcoms jecxz repnz jno arpl adc (bad) cmpsl mov adc cld lret lahf cwtl cltd (bad) sub dec cs shrl rcrl popf mov cltd insb xor xchg ret jno adc pop add lock add push das adc mov lods jge xor inc test scas andl xor mov mov or rcl (bad) bound inc (bad) data16 xor or lret mov (bad) insl (bad) dec cmp into and std dec mov cli in sub or test retw test mov sub fbld loope sahf mov lret cmp cmpsl mov or xchg xlat add inc imul repz (bad) push out lret sbb mov cld pop sbb mov pusha cmpsl push ljmp mov lock loop mov xchg and xchg dec les dec push inc push stos xchg repz mov lcall fs gs aam fadds sub inc (bad) cmc mov fwait and lcall or stos adc js xlat icebp and add js movsl popf push lret movsl xchg hlt mov sbb mov pop fbstp gs push nop dec and xchg push (bad) aas test test sub pop cmp (bad) aam jg lcall inc push xor mov jl and (bad) fisttp cli aam fsubs push jecxz in sub (bad) jno jbe jle js jp scas test repz daa movsb stos cmpsl xchg jle inc lds dec fdivr push sbb subl pop popf or jge xchg push nop or leave push cmc mov popa int xchg pop jne loopne bound jns and iret in xchg push std mov mov sarl fistpl std mov inc sub add test lock inc in sti into pop je stc fcoml sub js mov or add xor icebp mov pop popf rcl jae pop xor dec cmovne pop stos mov inc cltd cli stc frstor add cmc in daa mov sbb mov (bad) xchg xchg in jne or lcall outsb xchg sub cmp push cmp push push clc xor sahf xchg loop test subl (bad) push popa insb jecxz and setp stos lret adc jne (bad) lods mov pop xchg (bad) xor pop dec incl mov dec lods les fcoms sub rcrl sbb or rcll push mov mov push mov dec mov cmpsb inc push mov mov daa sbb call cmp dec adc fdiv addr16 negb mov icebp mov and xchg jle jns xchg icebp add xchg sub fistpll pushf mov fs fldenv dec aas cwtl jle xchg xchg fimull cmp ss in pop mov jl data16 push gs daa xor pop push clc xchg dec sti fisttpl bound mov lret addr16 das lods push fwait (bad) lcall dec and nop sub jo rorb mov pusha jo in scas mov cmp mov outsl mov add mov mov adc idiv mov pushf stos mov jmp lds mov dec push outsl dec ret dec jl jp adc in xlat dec cmc pop jno les out negl xor fldl or xchg fstps or xchg fsubr es cmpl mov std sbb (bad) jae aad adc inc jmp dec or mov cli add jnp fsubr fwait add ljmp jo hlt mov dec jle sbb stc shr cwtl ljmp add xor jmp xchg pop arpl call adc dec movsl (bad) pop fstpl enter mov adc mov mov insl (bad) ja jne lret and jns mov std sbb jmp mov arpl ret inc mov mov jge loopne cmc push add sbb adc data16 out nop movsb fldl (bad) in out fildll push and out das in daa xchg std sub add ret lahf add pop push cmpl or mov adc orb hlt je jbe cmp fnstcw mov jbe adc add mov push (bad) lret gs cmc lds mov and sbb js adc mov iret mov sub and pop and stos js lds jno outsb pusha inc cmpl sbb pushf les add loope jp pop mov stos ljmp xchg push mov push scas pushf aam (bad) adc sbb inc cmp ljmp pop and xor inc daa add hlt cmp pop push sbb or mov aaa outsb add cmp jb daa ret ja or ss sbb adc ja cltd (bad) pop pop cwtl out cmp jp hlt add pop nop pop sub popa sbb stc insb sbb sub lods cmp xchg scas arpl inc xor push and sbb or mov and outsb into iret xchg mov cmp test pusha cwtl scas xor jae fldcw push scas mov sub mov (bad) movsb cmp mov ret inc lcall add pop (bad) and and repz dec jl xor (bad) dec cltd sti pop fcompl and jb dec popl fninit and ret dec pop dec scas ljmp inc push rorb stc je or pop mov fistp cmp in daa xlat lret mov cltd cmc test dec jnp sti sar lahf fimull hlt cli (bad) cmc lret cltd push fidivl inc rcll icebp cmp xor call pop xchg out mov push (bad) mov imul (bad) hlt xchg sub loop sahf test (bad) aam mov (bad) mov outsb fwait loopne pop adc ljmp sarl stos hlt call xor test jae testl imul cmpsl jge mov inc je or lret loopne xchg mov daa mov imul pop les push mov fs sbbl xor xchg push sbb adc loope and sarb test xchg mov test (bad) popa lea jp push gs cmp lahf pushf push pushw aaa or jl stos psrad das insl add scas test pusha je int pop add rolb outsb les add inc push in inc inc push mov mov lcall jl inc and inc pop pop xor into sahf push xor mov or pop pop sbb daa xor mov test je sbb xchg ja mov punpcklwd rorl mov xchg and fmull pushf les sti jae into enter pusha adc stc xchg cmp stos loopne adc mov in pop aad ja shlb pop dec pop stos xor lods add cld outsb jge (bad) out mov jbe in pop push inc es mov add lods jle lret clc es or ja pop mov jns add inc lods icebp mov repz cmp lcall aam lods das leave js xchg repz sahf in mov mov test dec aad scas or mov mov pushf xorl inc test pop stos je fidiv mov mov dec jne and pop sbb loope mov sub cmp out test mov mov aad pop fsubl pop out (bad) (bad) lds push xchg sti inc insb leave push (bad) popf push mov dec cmp mov ljmp dec mov aaa (bad) aas fidivrl xchg icebp insl mov or lcall cmp pop push (bad) jge mov mull pop fldcw mov mov add lock xor push cmp mov pop xchg push shrb out and (bad) push shrl mov (bad) mov push mov addr16 and sub or pop mov lods loope loopne int3 xor add sub in pop ss lret jae mov inc xchg mov (bad) lods sarb add gs fisub cli enter mov xor std mov mov adc popf push movsb mov and gs pop push dec dec mov and push das cmp and inc add (bad) aaa xor sahf mov or loop fdiv jp cld lea imul pop test add jnp in push and or mov popa test pop mov lahf das mov inc sbb and jecxz and jne cmpb dec addr16 mov jae add cmc in ret outsb decl push add loop sbb push lds nop popf xchg jns arpl pop int mov fild mov jnp mov xor dec xor movnti cmp sbb fwait or add mov xchg repnz cmc mov ds (bad) daa stc imul mov or rcrb loope pop stos js rorl ret lret mov sahf je inc dec std mov inc jnp cwtl in fldt cmp test add daa sbb es pop xchg cmp outsb jp jp pop popa and mov mov xchg mov lock (bad) xchg (bad) (bad) test sbb mov (bad) cmc or les jbe or jl enter mov daa movsb repz mov popf jbe jbe jmp imul jns stos add fcoms loope imul lods or push mov mov ljmp cmp xor mov xlat push gs scas subb inc push xchg mov xchg bound and call cld mov or sub bound sbb inc sub stos xor test cmp jmp and sub and xchg add cltd scas sbb jo add xor sbb push mov add sub icebp cli lahf jae fcmovnb jae adc jo dec push push inc jecxz add mov daa sar sub adc adc lcall out xlat add push loope out sbb jp (bad) mov scas pop lret inc (bad) in dec pop inc pushf sub fmull xorl add lea xor (bad) xchg inc inc sub add jae sbb adc scas sti sahf dec xor ds pop sahf rorl sbb mov pop xchg cmp jae mov iret cmp popf insb loope jg mov ret inc mov scas lds xchg incb inc xor popf pop enter push loope and cli xchg ret (bad) gs mov mov les lods aaa cwtl int xchg fnstenv or loop jae xchg imulb adc mov popf ficoml mov popa mov xchg fisttp mov mov out sahf sub jmp push pop jnp push in imul add scas idiv ja push pop jb ret orb insb cmp lock add dec jb cltd (bad) das cmpsl or add or jle ret xchg or xchg dec push push mov (bad) hlt adc outsb sbb adc fildl xor scas dec stos sub add inc adc pop or cmpsl (bad) xor jb jns movsb push xchg add test push mov sub rcr adc or xchg int3 lret (bad) sub sahf (bad) rep dec jg pop shlb push imul fsts mul jecxz pop dec push adc or add push or sbb sbb xchg cmpsl leave (bad) push xor cmc cmpsb jmp lret lods jno ds cmp (bad) pushf in pop iret dec inc in pushf push push add stos sbb or mov (bad) in mov inc push ror loopne clc icebp inc aas sahf mov mov mov xor mov and add jp pop aas push xchg dec inc int3 ficom lret cmp cmp xchg sahf jb shl scas ljmp ljmp or pop jno mov ret jg cwtl aas sbb pushf dec (bad) dec cli cmpsl mov imul push into jl pusha subb loopne sti pusha mov adc addr16 mov lahf pop and movsb inc ror aam pop fs mov or pushf aam aad cmpsb lods or icebp movsl in shrb add xorl lods jge jmp sub add aas clc data16 adc add cmp jl mov sub xlat or jg fwait hlt push mov lahf push mov mov insl lods or addr16 mov adc inc mov ficoml loope hlt mov cmp sub mov dec test pop cmp fnstcw xor add (bad) out dec out mov movsl cmp in and xorl into cmp (bad) leave pop mov or fnstenv or push addr16 fnstenv call jo js mov add cmp jl sbb insl out mov mov bound sub pop and js mov mov cmp pop out lcall xchg push fstps adc jbe or mov outsb sbb sbb sub aaa mov mov sbb loop loope jmp ljmp mov push lret (bad) add mov mov cmp or and cmp add and sahf in notl rorl push dec int test out in dec push push jp pusha mov inc mov cmpl or pop sarl insb jns sbb sub ljmp jo and enter inc add adc daa lret inc repz mov sub rcrl add lods cmpsl adc out pop add add mov and in data16 adc xchg push ret setns jae push xor int3 pop mov into xor into shlb adc dec scas pushl cmp mov mov jne pop push in stc inc shl ret ja sub fucomip jne lock mov imul dec das mov xor mov aas cmp mov inc test insl outsl aad sti xchg push jle push iret push add gs xchg dec adc loop mov lods int aam jno jbe mov loop loopne add in outsl mov daa int sbb xchg arpl mov xchg mov bound sub xor ds aaa push xchg fsts dec push pop xchg pop mov mov test push fsub pop imul pushf mov addr16 stos sub movsb int3 sbb mov pop xor out leave or test push jb popf aas mov mov mov jns mull ja idivb aad mov imul sub cmp inc fs pop add test es lahf int3 pop (bad) (bad) and shrl leave mov lret pop inc or rcl ds lret pop cmp lret or sub add jl jl movsb mov cmp jl rorb lock cmp cmp jmp dec sub sbb fxch mov fiadd mov pusha pusha lods jge adc mov lret push mov stos or cli cltd (bad) lahf test (bad) shll jae push sbb dec out repnz icebp rol outsb faddl ljmp gs mov adc stos jbe jmp (bad) adc push or adc popa lock jns stc dec add xor xor subl test negl fstl dec pop in adc repz jmp lret inc icebp or fsubl scas orb mov sub push pop push test pushf rcrl imul push addr16 ss cmp jo shrb or gs pop xor inc hlt dec (bad) pop mov adc inc xor push add xchg inc idivb or push or jl popf test adc inc add mov pop loopne call fmuls cmp xchg out dec std jmp xchg xchg imul adc in or sbb sbb lret xor testb imul hlt jmp iret into dec stos sub les add jbe adc (bad) loopne pop fs xchg push js cmp subb subb fimul add mov pop xor dec stc stc xor pusha sarb test leave add xor scas xchg stos push mov shlb push inc loope or fildll lds adc mov xchg fcompl mov and lods fnop mov pop into (bad) cld bound and xor inc push scas push pushf test fnstenv shl cmp jns mov idivl clc loop fldl xchg cwtl dec cmpl mov stos cwtl inc cld jbe dec pop xchg call ja leave stc lret fs mov lods inc std pmulhuw adc dec (bad) mov sub js dec imul pop insb cmp test movsl cmpsl daa lret scas xor push aas in scas xor or scas loope (bad) cmc sbb aam popa arpl dec popf push push call nop or add jo jg cmpsb mov pop inc mov int3 daa pop data16 in inc daa sub pop and and js xchg cmpsl push add fldenv fsubs push adc pushf fcoms push int3 sbb (bad) add mov pop adc xor cmp in in (bad) ficom dec testl push adc jb inc mov jecxz xchg nop jl xchg adcl mov inc dec sub xchg mov or addl cld jmp dec lcall fstl pop loope xor ret push adc rorl ficom pop movsl or xor aas pop aad mov fldt cs cld add dec lods mov mov sub mov mov sbb jne stos dec xchg insb jo lahf and mov and ja and mulb xor add jne nop fmulp xchg jno push fisubr sub shrb add cmp mov inc mov push pop add aad leave jge (bad) fmuls out daa outsb rclb add loop adc push pusha mov std mov (bad) bound add test loopne add adc cltd mov fiadd push add repz mov int3 stos sbb lods mov sub stc ds adc iret dec (bad) push sti inc cmc xchg rcll (bad) rcrl mov out int xchg movsb push outsb dec sahf push sub inc lahf (bad) sub and cmp sarb mov test jns adc jle xor outsl lret aas adc push and pop fwait sbb inc cmpsb icebp jle call push push xlat cmp add add gs gs pop ret enter sbb push jl add jg jmp arpl out xor lret enter lea mov sbb xor sbb xchg mov mov add mov stc and data16 and add mov out in aam pop sub and jg cltd scas sarl pop cvtps2pi call sbb or add jno pop ds inc xor push dec out xchg fimul (bad) adc cmp shlb xchg pop popf ret scas pop daa out push and mov out mov int3 push xchg imul clc lcall nop xor dec sarb fsubp scas loope dec std jns dec (bad) stc dec pop rcr loopne les inc pop leave or jg pop scas loope push push call dec inc or dec ficom sahf lods (bad) mov dec lahf repnz dec mov lret test sbb push xchg pushf inc fisttpll ss mov cmp or enter fmull bound cmp jnp cmpsl xchg pop fdivr ja xchg out and lods outsl pop insb sbb jg inc jmp es xchg ret icebp and je cs stos (bad) mov andnps add cld xor pusha inc das push add and jnp pop sti push int3 xlat addl (bad) xor nop mov mov xchg idivb xor push (bad) xchg dec push jnp sbb xchg inc aaa push clc repz mov cmp dec int3 push jnp mov xlat cwtl aad aad mov xor or adc or jns fmulp sahf cmp sbb jp inc je stc addl fsubl ret mov jns and pop es push popa popw or popf mov repz mov hlt lods es lds stos test fcmovne pushf sub ds aaa add out add stc xchg pop popa xchg add jae aas and mov ret loopne (bad) fnstcw mov scas cmp xchg outsb shl cld xchg inc stc pop push lret xchg xor inc in testl cmp mov fs shrb (bad) stos sub and jmp mov mov cmp fs (bad) ret lds test inc push (bad) shrb (bad) sbb push lret and xor loop jmp push cs mov jno jo and lods pop inc or fisttpll push movsb out test repz xchg mov cwtl xor dec pop test cmpsb pop xor add clc mov mov adc and adc mov data16 std dec mov in pusha add lcall push push movsl pop stos ds mov popa bound push lods and xchg adc arpl (bad) xchg sbb mov inc lock inc or push jmp scas push out cmp add scas and or cltd lahf ljmp push loop push insb jmp pop (bad) adc aas cwtl mov test fcmovnbe jnp add pop out add (bad) mov mov fwait and shll cmp inc dec sahf int rorl popf sub jo addr16 out jp sti jne test outsl dec into lods ja mov push add inc stc mov mov fwait inc mov (bad) cwtl xorl mov inc sub lcall aaa sbb cld cmpb and fldpi aad or (bad) cli loop lock mov int mov push out adc fucomip adc cmp dec outsb daa out mov fsubr rcr nop push lcall je stc orl shl adc mov xor shrb sahf ja cmp mov aaa jae shr xchg xor movsb add adc movsb mov sbb sub mov or adc rcr sti clc push cmpl clc (bad) push je (bad) rcrb push jge sub stos jge jle dec aam xchg fisub xor jl,pn cmp (bad) arpl iret adc cmp leave pop or sub dec mov jmp out imulb lds (bad) aad rolb in inc xchg sbb je and clc adc sub jmp xor xchg lahf cli jecxz or mov push mov lcall jnp dec mov inc or aad hlt rcrl int jmp dec jl xchg mov add lret lds addr16 sub mov inc push jnp std in (bad) push or repnz cmpb mov ljmp int3 addr16 add sahf mov xchg repz add pop or hlt (bad) sahf daa mov cmp pop jle decb test nop ds mov mov leave adc dec mov out mov cmp push mov mov sub mov jbe xor adc jns jmp in push xor inc inc loopne imul mov mov xor jns xor push push pop inc stc cwtl add cmpsl jge ret cmp (bad) sti fsubs pop enter cli nop adc outsb ljmp aad inc scas je ret lods jmp cs mov and out std cs aaa aas lret or stc push mov inc push stos data16 and leave loop or ss leave das fidivr inc and notb push hlt cld mov movsb imul xchg push add dec rcrl aas hlt sub daa in xchg lcall aam lods sub add sti ja and fcoml push sahf iret es mov dec dec lock lcall jl cmp test loope les mov cmpsb les imul dec jecxz xor mov (bad) mov repz jo pop cltd pop loop icebp lret addb pop pushf scas je sahf mov add int3 push inc ss ret fdivrl cmp sub inc (bad) mov adc test test sahf push dec mov cmp mov xor js xchg sbb fyl2x mov bound jbe aaa xchg rcrw dec mov addr16 and dec prefetcht2 mov js cmp sarb push sbb nop and jbe test pop jae movsb mov addl fidivl sbb pshufw lds pop push adc orl das mov mov push dec mov pop seto fldt aam pusha mov or or stos jno or jae pop jne insb cmp inc stc adc pop lcall push cmpsb mov rcrl daa mov push mov rorb bound lea lret pop mov and jns in testl xor mov mov push cmpb mov hlt enter jae into imul cltd or into add int cmp sub pop push push sub adc or mov int imul cmp (bad) push inc sub loop (bad) aad cwtl cmp mov mov mov mov outsb push popf lock in aad aaa int3 es sbb mov mov jae mov xchg xor dec outsb pop gs pop aad mov cltd jmp dec popf jb xchg lock leave sub sbbl sub inc inc inc add cmpxchg fsubrl (bad) repz jge jno ljmp and and mov ret mov lock and rcrl mov flds sub mov push clc lcall (bad) lret in mov int test fsubrs jae mov add xor popa mov jp call mov scas (bad) xchg jge loope leave jno or jmp fmuls add mov out mov jne inc jae push test pop dec sub (bad) (bad) lcall subb cmp jo xor out jne out mov sarl mov mov sub sub mov imul sbb push jg int3 push adc sahf fs xchg aad data16 pusha pop sti push iret mov mov cmp sub lea and xchg cltd movsb mov pop sbb pop dec lret add xchg jbe inc cmp xchg movsb adc xchg sub test stc cmc rcrb das dec aam mov lea sbb mov (bad) mov aam imul scas xor popa idiv xor add pushf push add (bad) jbe pop incb into adc je cli popf mov xchg push das cmpsl (bad) jno add pop out fld mov push inc xor mov shrl lcall int push out in insb mov or fisubr in xchg jne add dec pop mov jnp push pop cmp sbb out dec repnz ja rclb xchg mov js (bad) hlt test cmp fcoms inc mov movl push inc push fwait inc push jne xchg scas lds iret sahf adc enter insl enter add push jmp bound add rcrb sbb cld jnp fdivr cmp fwait pop mov popa mov mov rcrl cmp pop pop push imul in cmp notb mov mov int3 enter in jb shrb enter das xchg push pop adc jne mov stos adc push js push lock xor add lahf jl and es (bad) mov mov hlt loopne pushw (bad) pop jb lcall pusha lods dec test fmuls and aad pusha xor add cmpl sbb arpl lea push hlt leave fsts xor shrb or adc mov aaa cmp fistpll push push aam xor mov shrl (bad) fdivs inc in and dec mov std pop dec hlt inc jmp xchg test xchg push mov mov out nop push lods (bad) dec jne push cwtl add xor push fild and sbb mov fistl nop xor cmp es popl mov cltd push mov jnp,pt xchg xchg sbb fdivrl adc and dec mov cmp rol fisttpll pop sub cmpsl fadds or into cld pop outsb and push mov lret jl dec or loop pushf dec shll test add lds or test inc cmp out popf hlt les ss jg xchg inc imul cmp fs inc adc mov xchg stos insb insb jb hlt lahf arpl jle pop call out sbbb (bad) fwait sbb or cli loopne mov mov sub pop test (bad) xchg mov push adc sbb pop mov lcall xchg nop outsb aas or iret push test or in lea testl clc and lods clc dec rcrb fldt fcomp inc xor or jle out ss leave adc add lcall lret xorb outsl pop mov jle add stos loopne sbb imul xor jge jle mov fs mov loopne stc xchg dec stos push into dec adc or mov inc add pop jge push xor imul out sti ret cmp nop cmp test pop pop inc mov mov popa cmp (bad) icebp adc mov xchg inc mov (bad) sbb xlat lods jb sub push ja ss out sub ja add mov push jbe adc out icebp (bad) mov add aam outsl jecxz in fcomi or pop jmp (bad) push rol add repnz ficom dec imul mov push rcrl inc add aaa mov aas lret and adc lret test cmc mov sbb mov add inc iret arpl add mov lods jp mov aaa mov in leave inc jns mov add in fisttp mov daa push push jae sbb das pop inc fstpt mov lret sti mov sbb xor mov mov sbb inc xchg jbe jbe fldl mov aam stc xor popa daa jne out les testl fstpl (bad) jne rcll mov ret adc (bad) jnp cmp adc ret mov ljmp xchg xor fistpl imul (bad) shlb les sbb mov ficoml cmp xor sbb jb test outsb (bad) iret lahf scas fs jecxz mov mov xchg (bad) fmull movsb divl (bad) shlb xor and push inc pop pop xchg dec mov xor sarb roll add movsl rolb test ds imul (bad) xchg sub push xchg iret arpl mov add jle sbb pop add xor dec or jbe cmp pop aam and adc inc mov mov rolb outsb test or pop push roll imul inc movsl inc test das cld rorb sbb ds mov dec inc loop add mov (bad) jmp cmp jae dec cmc push cmc or pop jnp xchg cwtl imul mov mov (bad) dec pop adc xchg add and push loopne push push test xor cld adc dec pop dec sbb sub add push das or repnz movsb add xor rorl sbb add push jecxz push pop mov std lea test aam pop sbb lret ret push pop xor stos out and sbb mov (bad) cmp ljmp push stos sbb and rcll add inc call add icebp push jnp das int fwait sti test sbb pop lret insl shl adc (bad) add adc xchg movsb das into sub cwtl std rcrb mov cli jae dec lcall insl in jne mov mov or test es outsl push mov in aad outsl ficomp sbbl xor mov sbb sub add xlat inc out stos push aaa or imul mov xadd cmp mov iret movsb jnp cmc cmp out ds iret imul stos std test dec mov (bad) jge adc (bad) call insb pop cli lahf outsl inc and add std (bad) push inc sbb ret sub stos mov in lret push (bad) ljmp mov adc mull std shrl mov add push ret cs leave jl loopne shll out push into push or pop int3 cmp in xor test (bad) pop mov pop fstpl and insl stos jp inc nop cmp adc xchg xlat mov pop xchg dec mov ret jae fdivr mov sub icebp aaa (bad) mov cld ret mov mov xchg outsb shll cli jns or xchg xchg jle scas hlt in mov out insb rorb push rorb rol in loop jl cmp sub lods inc pop xor xchg and (bad) lret cmpb pop xchg mov cmp jl inc push or push mov cld fnop cmpsl stc lret imul daa (bad) shrb mov outsl mov cmpsb sbb cmp out sub cmp dec mov fsubr jge mov iret cmp sbb jns add add leave popa lcall push mov outsb cwtl rorl mov mov jl dec mov jmp out xchg movsb pop cmpsl dec (bad) pop xor enter into or psubd loop fdivrs (bad) lahf mov (bad) jb movsb outsb sub outsb xlat adc sbb mov dec outsl aad inc xchg adc mov and ss fidiv pop js in mov mov scas imul test in lret aam push push movsl jcxz lret adc push add aad call pusha dec mov ret mov cli mov icebp daa adc add add mov add jg rol mov aam pop cmpsb test push js xor sahf test and popf out inc leave mov stos xor in cld arpl dec push mov xchg fmull (bad) int cs or adc repz add xchg bound (bad) rol insl jb and push in decb addl sub mov movsb pop xor mov inc mov das test sbb pusha (bad) xor popf es pushf imul add xor and sbb int add jnp inc ret repz xchg and or out inc mov shl and shll push sbb in sub xchg loop dec mov lods repnz inc addl cmp cmpsl inc xor mov push out iret mov loopne mov jno jg push arpl rolb pop mov movb hlt hlt jecxz cli clc mov sbb jnp in xchg sbb sbb jae mov inc inc inc orl cmp daa sub fs mov ror push scas jne inc movsl shrl and xchg cmpsb add faddp sbb dec mov adc xor rcpps lods mov cmp inc jnp (bad) mov adc enter dec sti add mov (bad) push mov call adc mov pop aad (bad) jb lds outsl (bad) add sub sbb popf mov in mov nop and or int cmp cld jbe lods xchg lcall mov aas ss pop and cmp jb (bad) negb int sub arpl or ja pop xchg inc addl pop loop inc jno enter mov scas mov aas out les (bad) popa and out xcrypt-ecb cmpsl dec adcl jge and mov jp sub mov out jp aad call lock push add or xor add lahf nop add push dec mov push sub fisubr mov adc jl scas pop adc adc push lods jge cmc xor adc popa jnp es es fiadd inc loopne,pn test fldt jl out sbb mov clc sar or inc ja mov mov aaa add aas xchg mov jecxz cmp cmp js sub pop or (bad) jmp imul je bound xlat into imul mov fild mov icebp pop mov enter jmp aaa push jecxz inc jmp test (bad) iret adc jle ret stos data16 pusha sub sbb repz push sbb pop leave push sbb xchg stc mov int in mov bound pop in (bad) icebp aas sbb cwtl (bad) loope addl mov or outsl add aad or pop fldenv sbb stos out testb (bad) xor aam dec mov scas std ss das adc mov and add push loope gs fwait imul ss test push into mov stos imul sbb ret sub cwtl sbb subl rclb inc mov pop xchg (bad) lock cmpl outsl fldt mov je xchg insb xchg dec push dec fdivs mov popa lea mov mov mov fidivl jge sti cmpsb sbb sub ffree jg cmp and jns popf push xchg push andb loope push cmp push adc inc icebp pop jo mov adc arpl pop outsl sub lods xchg movb gs or fwait out imull mov inc cmp pop jmp pop lcall les cmp addr16 jecxz (bad) out js daa adc in cmpsl mov ret push sti xchg sub icebp mov xchg jg scas mov add mov jbe sub push scas push ds enter jmp cld add dec sub (bad) adc xor push mov adc (bad) aam inc mov ret xor xor and sbb js xchg andl clc imul xchg enter pop lahf xor or pop outsl movups mov aaa pop enter rcrb outsb dec fsubrs scas mov mov cld pop (bad) repz ss ret rolb adc sbbl das iret fisub popa and jnp xor push adc icebp aam cmp into or cld out call mov imul jp cmp mov sbb mov jnp fcomps lods in mov test mov adc fsubr xor fstp repz add mov lods je push and shrb mov pop int jnp lcall (bad) pop out push clc push cmp lea sbb xchg popf sub dec test ds cs repz fnstenv xlat fcomi movsb sub cmp outsb push mov test js sub mov nop adc cli pop xor xchg sahf int xor loop dec (bad) aas inc std jg xchg inc and in pop or xchg inc push pop (bad) jb icebp sub mov test and mov or out pop outsl (bad) repnz sti add sbb pushf rolb mov das pop or ss xlat insb jmp mov cltd test add mov mov xchg lahf xorb bndldx ss stos in daa add ja adc (bad) xor aaa movsb push push mov mov outsb cmp jp ljmp xchg jmp fsub (bad) jo and sbb scas xchg cmp js push sub xor decb mov shrb ljmp push mov push adc in (bad) (bad) fild clc pop xor xlat cli adc insb adc in addr16 int ss rorb and and mov adc ds movl daa loope mov outsb add cmp xchg or fs out daa arpl mov and fdivs or adc mov add adcl nop jge sbb imul pop adc push jl or loopne xchg js imul out jecxz push daa xor xor insb cmc push push sub sub je or xor jne cmc mov and sbb fsts mov aam xchg mov pop rcrl sahf inc hlt jle push in pop xor les icebp decl xchg push dec xor mov jl adc sbb aaa lret add flds scas xchg out inc icebp sti mov sub repnz sub adc loop fmul xchg lahf push out or imul insl pop pusha push sahf out dec scas arpl jle test popf cld add cmpsb mov lods dec sbbl enter mov push clc loopne lahf and loopne inc dec mov dec add xor addr16 or inc in jg lds aas fdivrp jle inc push cli ja adc mov ljmp in jbe sbb jmp cmpb ja fwait clc adc push loope adc pop sbb push addr16 push (bad) xor insl cmpsb pop mov inc into and fs rcrl xchg gs ds cmp hlt stos inc lcall xchg addl jl mov roll or aaa cltd pushf (bad) clc mov test repnz sarl dec in mov outsb sub jo inc cld mov cmp fs movsl pushf xchg sbb lahf mov mov cltd push dec xchg sub cmp leave and loop (bad) bound sbb scas in enter mov push dec or fs push add fsubs pop mov mov pop popa and (bad) (bad) loop sbb insb dec enter pop pop mov jmp mov mov lahf inc jno unpckhps mov icebp cmp mov mov cmp out ds je test and lret fisttp stos sar sahf call xchg cmp mov stos jp pusha incb sub jo sub sub jae dec or lret push inc or xchg jmp add mov repnz int3 sbb xor ljmp cwtl pop rcr mov das enter popf hlt pop sbb mov xchg scas xchg pop (bad) outsl add jmp cs sbb paddusw pop lcallw pop mov mov push aam pop inc pop fs or xchg inc into mov pop jle jne add xchg shll xchg cwtl sarl andb ss adc test sbb xor dec sbbl cmp pop xor mov imul xchg cmpsl das das cmpsb rolb lret lds insl ror cli jg hlt mov xor fimull fildll inc gs (bad) xor cmp mov xchg in inc fnstcw aam jns movsl rcl iret mov or outsl sub push das pop gs mov (bad) fcmovnb mov clc fistl scas int3 insb enter dec ljmp xor pop (bad) jg aad sbb cmpsb or imul push or xor lods inc pop das jl inc lahf data16 sub pop pop jl data16 and and ds jecxz mov inc scas pop cltd lods pop call jmp adcl mov aas cltd fstpt dec pop lods imul enter mov enter popa (bad) pop cmp (bad) mov cmpsb and mov mov popa xor or ret cmp xor hlt mov sub inc (bad) mov pop sub mov inc sti xor out notb push mov pop dec pop mov repz xchg movsl daa xor dec (bad) in jbe stos imul add shrb and push dec imul icebp mov sar push ret out dec loopne push imul arpl fmull subb imul leave xchg ja (bad) stos fmull xchg or sbb sub (bad) hlt jno pop sbb mov sti inc sbb mov adc add inc mov cld push push mov ret (bad) (bad) push inc pop in iret push les (bad) and fidivl sub push or or lods jge cmc push (bad) cmpsl lret je mov bswap mov in ss sbb adc in imul pop mov and jl sbb jle mov fisttp gs and ja push inc inc lahf dec in insl out xchg xor fldcw aas fnop xchg mov insl mov fldt push jbe mov adc xor movzbl push or loop cmpsb pusha jecxz inc pop mov push mov xchg dec fldl cmpl add aas jle bound push out sbb pop mov push sub loope mov dec mov inc cmp jns movsl (bad) faddl popa jno lahf inc mov lret mov or or cmpsb (bad) in ss sub jl fdivr ljmp jle cmp lods mov scas pop jne (bad) and jge popf jecxz imull std mov sub jle fs bound mov mov mov mov adc xchg js dec dec mov or jno aaa aas cmp js ja out outsb mov jne cli cld add xor in jb inc jns rcl push nop sub push stos fildll divl std or adc or mov and lea mov pusha imulb xchg and push test jo sbb dec jmp inc xor adc aam add mov push (bad) es lds gs ret loopne dec aaa inc pslld sbb aas mov js xor loopne push in mov mov sti jge lcall movsl cld sub pop push aad jl or lds mov out sbb lods test imul dec fs (bad) hlt repnz jne clc test jbe mov adc mov pop outsl out loop (bad) in fldz xor das mov xchg lcall pop xor jo,pn add out dec mov cmpsb dec or and fs lods (bad) ja jae mov das lcall inc rclb adc addr16 ret xchg imul lea sarl pushf bound sub iret (bad) push shrb and push fiaddl imul pop push ret dec cmpsl lret popf jb inc daa stc frstor inc sub scas jne sub cs rolb mov ss scas xchg and push popa mov sub xchg jle daa mov adc cmovl out mov in and jecxz loop aas cwtl sbb inc notl mov inc add add pop stos push repnz and cltd mov push fnstcw (bad) lret cmp (bad) stc outsl xchg jcxz pop jmp inc repnz pushf mov sub and push pop sahf sub inc (bad) jnp imul inc int stos dec outsl lods test and xor dec or xor lods ds mov out pop pusha jne lret push pop es cmpps fisttpll decb fistpll dec and out iret out mov sub xorb (bad) aaa jbe and lret sbb cmpsb push into jbe ja sbbl mov pop fcomip adc cmp push aaa mov test push dec test jnp jbe dec arpl fildl sbb mov aad ret push xchg iret mov or add (bad) xchg sahf aas jae push xchg sti pop fldt dec scas fucomp add xor mov inc push in gs mov outsb jl xor jmp jg inc xor pop jmp (bad) shl mov sub jge fs clc js push mov mov pop test pop add je xor stos test mov push jl cld fcoms repz setns dec (bad) jmp lods jo pop mov in sub int3 push adc mov jno push xor mov std dec pushf icebp cmp pop stos xchg mov sti push pusha fimull mov movsl insl clc push mov in xlat jo mov xchg push add (bad) mov pop sbb adc mov xchg or jno jae xchg push cmp sub lahf rorl mov stos xchg ret mov pushf out jg xchg je push cwtl xchg int aam xor sbbl out repz sahf and (bad) push es test movsb push pop imul scas cli js subl xlat rcrl loop dec int3 sbb adc jmp bound add mov repz sub or xor xchg ss shlb aad pop mov fs rcll mov xor or mov repz loope sbb out mov inc xchg and das fcomps int3 in xchg pop popf movsl ds jmp (bad) lods outsb dec cs imul gs cmp mov mov es adc mov pop mov dec dec mov out pop lods rorb xor mulb xchg inc js pop pop pmaxsw xchg jg popa lock js ja dec mov leave pop nop pop xlat outsl repz inc mov lahf or push xchg xchg pop clc (bad) in into pop push or push icebp mov and rcll cwtl and mov pop ja xor orl xchg shl jnp,pt jmp mov inc (bad) out mov mov mov mov dec aad or das test lea pop sbb xor jae (bad) cmc ss lea xor adc jne jae mov lea mov mov jb xor daa ds cmpsl mov mov popl sub aam sbb dec jge test jmp repnz xchg std sbb fcompl pop arpl mov mov cli fisub cmpsb xchg frstor adc jp mov ss adc scas pop test dec cmp mov movsl lds cmpsl aad fisubr mov pop cmp popa jb pop mov lds or pop dec mov cltd sbb fstpl xor jb sahf pop xchg gs mov or add das hlt outsb sbb xorl movsl xor lods aad jle jno sbb dec mov pop ret insl mov mov sbb movsl fwait dec sub xchg cltd add jbe add jnp jne stos mov adc aam sub je das insb sub xlat outsb ds aaa or (bad) int std negb mov inc outsb jo call mov hlt mov (bad) mov xchg sub inc in sahf adc dec or push test mov cmpsl or add into mov repnz push mov pop (bad) pop jle (bad) push sbb push enter imul loope jmp add outsb imul xchg mov xchg dec into ja or dec lea adc js fstl gs pusha sub fdivl jae push rolb push into inc lcall or cwtl divl push test jg std push je cmp ss push jnp mov mov cmpsb adc push in inc loope scas aas cld lret jo cmp mov ds xchg (bad) dec out xor test test sub inc sbb jae mov add push ret es loop mov sbb add xor adc or ficoml roll inc dec jb outsb mov ret stos dec imul mov add push ficompl dec inc (bad) adc into sbb push adc out cmp sub std scas sub dec ljmp scas lods fisubrl lahf out cmpsl inc mov mov int3 sarb sub inc fdivrp pop cmp xor dec add outsl (bad) bound xchg cmp xchg and cmc insl mov cwtl dec mov xchg cmp xchg xor das and adc and (bad) xor cli in sbb inc adc dec mov sbb push jge pop orl ret dec or aaa cwtl stc mov xchg leave lret flds push xor shlb jbe andl lret push lcall mov enter jmp push add cmpsl add inc (bad) and adc (bad) outsb popa adc and sub enter push jl or jg divb or aad or mov sbb stos lcall or nop mov push push sbb xchg pop ficompl out cli rol bound testl mov sub push lds sub int3 xchg sti cmp mov pop cli mov fidivr sub xchg daa popa shll xor test and movsb jno in ljmp out mov insl adc mov movsb pusha pop cltd xchg or mov mulb insl cmp mov mov sub mov cmp inc and (bad) popf push in arpl stos cmpsl arpl das or loopne sub fsubrs negl xor test cmp ret or out xchg pminsw leave fs out mov aam add xor pop inc jmp pop mov or and sub int3 mov mov dec and mov jl notl mov lods out (bad) dec scas ret inc loopne push repnz (bad) arpl sub pop dec adc xchg or sbb push insb icebp cmpsl loope imul ljmp xchg mov test mov ds add and leave (bad) mov push xchg inc xchg sub push roll mov adc mov jb outsl cld or cmp ficoml fcoms mov ss sbb xchg (bad) mov mov jg dec lret jb outsl jl adc mov mov or in sbb outsl sbb push lret dec fisubl mov add sub push cld push sbb push mov andl xor push jo lea enter scas cmp pop test ret out in insl fistp cmp (bad) push test ds in out es gs loope and sub leave jge (bad) pop imul push dec aam push or call push pop daa adc push aas sbb dec and mov xor mov pop aaa cmp nop (bad) aas mov leave addr16 popf pusha mov fs clc adc pop andl lea inc outsb sbb ss rorb pop and sbb call push call jge out mov lahf xor add bound sbb bound xchg jne enter ret data16 push outsl inc aaa fsts ret jp xor (bad) iret adcl or sub mov push cld mov and clc pop popa or imull xor and cs bound mov and add jnp aaa lock fstps (bad) movsl mov das leave rclb mov (bad) cmpsb mov push pop mov jbe repnz push das test fwait sbb adc subl fdivr decb cmp negb cmpsl stos (bad) push cmp rcrb mov rorb xchg divl and add mov gs outsb lret adc cmp mov jg jne push in repnz std pop cmp cmp mov lret inc xor daa sarl js jmp adc in mov or pop jbe mov add and out mov cs push in pop sub mov mov (bad) jo mov out dec mov sub es shl cmp aaa outsb popa pop jge inc mov jno ds jno je fs push out and mov aas push cmp push mov mov mov jo jg cmpsb ljmp mov xchg cmp roll mov xor pop pusha inc sbb stc cli data16 jecxz inc pop imul in lods shrb inc or cs sub mov and push adc cmc loop xchg enter adc cmp mov mov sbb clc mov pop stos mov cmp lahf mov jo,pt jle sbb sbb outsl push scas adcb jmp addr16 adc cmp in cwtl imul aas in loopne imul sbb push lret movsl dec xor sub call mov xchg and orl cmp test push outsb sti (bad) int cmp lret sub idivb xchg or enter andl pushf out mov fnstcw test stos mov mov inc jmp adc rcrb jns mov mov dec xor or add aaa out outsb add mov mov (bad) mov jecxz outsl cmp lds repnz mov pop xchg jge sbb xlat arpl out xor pop jb jbe mov sbb dec adc icebp cld sub jl pop pop aaa mov cmp mov xor pop out mov (bad) pop dec fwait cwtl sbb into sub pop leave mov xlat jp sarl hlt js jae subb sbb cmp popa sub push mov mov nop notl adc add sarl add rclb inc and and mov or sbb outsb mov cmc push inc loop xchg enter data16 shll pushf jge dec sbb xlat push jp mov outsl mov push pop (bad) and and cmp popa mov fs cwtl lods scas in sbb push in aad mov (bad) mov out and xorl pop cltd jb ja dec js sub xor mov subl sub adc and mov cmp ret push add and orb jp mov dec and stos (bad) mov mov jns dec gs int sti jb pop sub push jbe push je or fcmovne popf push mov push sub jns adc sbb dec call mov mov mov hlt pop (bad) jg fildl sarl je push daa jle leave inc and test jmp dec mov mov sbb sbb dec lock lds int push mov out adc or (bad) xchg repz push inc jmp icebp inc sbb std mov fcompl out in or cmp out and sub xlat mov xchg pop and in (bad) dec mov mov pop addb test lahf push sbb fucomi pop ret lcall outsl das repnz sbb xor arpl rclb sub cmp js movsl or int push xor aaa test xchg add push mov jmp xor mov dec imul pushf push roll mov popf push std punpckhwd jmp dec out ljmp rcll ret push add and mov aam addr16 adc jg mov icebp ss push mov mov jmp or mov in lds cmp lea sbb mov popa loopne pop jno ficompl fbld sti jns jae sub test mov mov bound js sti push dec mov fistl scas repnz and xchg mov loope loope sub mov icebp nop aas xchg popa pop and fistl ljmp inc and int push scas icebp dec aam iret push repz sub aad lahf dec pushf repz mov fsubrl fs test inc stc iret mov (bad) ljmp sbb push cmp fs mov cmpsl pop sub pop jnp das lcall add js (bad) vaddps and xchg pushf aam outsl pop jo lcall jae or push cltd aad mov jg push scas mov mov or xorb jecxz std push inc fcomip lods lahf test dec jg adc xor xchg xorl fidiv arpl push ljmp jae pusha aaa nop sbb jne mov (bad) sub inc adc stos adc ljmp add or lret sub movsl and loopne outsb sbb jnp insb push icebp out (bad) lcall cli (bad) push adc add sub lret sbb (bad) pop inc lock sbb push xchg mov test insb (bad) int adc inc jg mov sub daa cmp cmp jg pop mov ds test jo jnp ljmp mov mov inc pop aas pop mov mov imul pusha mov scas test lea jo cld (bad) fs sub ds or int3 jae inc sti add mov pop jno jge and out mov es std enter push pop xchg cmp cwtl or adc in or leave je add ds add mov shrb jnp cmp mov das std and xor jnp in icebp nopl jp push and and mov lahf in inc jecxz jb int3 loopne adc mov mov adc push arpl mov loop jle loop mov jo cli ds xchg xlat bound lahf movsb pop mov mov xor (bad) xchg xor cltd mov cwtl mov outsl xorl rclb daa sbb fnop test inc cmpsl add cmp push divb jns out je movsl jl pop jg (bad) int3 dec dec je inc pop mov sub loopne push pushl (bad) movsb jae insl out in pop fcomi (bad) mov icebp test int3 inc in out jge cmp stc ja test popf adc shrl (bad) pop out sbb adc and clc subps sahf cmp xor aam sbb out inc adc js and xor scas mov dec pop jae push ds cld or add jnp and fmul pop sub (bad) decb (bad) pusha arpl popa jns mov cmp lcall pop fsubrl ret jmp jecxz add lahf push mov es push mov sub add and xchg aam std icebp fild stos cltd jge cmpl jmp test es scas daa pop jnp dec adc dec mov lcall and les cld pop (bad) dec jle pusha sub js cmpsb orl insl push into sub pop fst std push (bad) lock bound roll hlt daa cmp out xlat dec mov mov jecxz out sbb mov mov rorl cmp stos jnp push mov cmp cmp sbb cmc test fdiv and loop ss jp mov ret pop xchg pop push xchg inc sbb cmp pushf scas xor cwtl pop jns sub pusha lods (bad) ja into pop cmpsb sahf or jbe mov or xchg mov std sub (bad) fmul pop call lret xchg dec pop lock sarl lahf sbb out mov mov pop jg repnz sbb lods int cmp fcompl fisttp xchg insb call push add shlb xchg inc arpl pop mov jbe mov ret dec add cmp mov add loopne dec push mov cwtl out jnp sub pop iret nop sub fadds jp gs pop aam pusha push mov push mov mov mov ds (bad) pop (bad) out mov cli je mov pop mov xor dec cmpsl jmp add xchg inc js lods rcrb in call adc inc in push cwtl pop cmc lods js ja add mov rorb jnp sub adc (bad) adc outsb sub pop pop mov push push fnstcw arpl adcl stc inc repz gs cmp cs xorb aaa lret add lea xchg xchg fldenv fcmovbe jne sub jmp icebp mov arpl and and loop push jnp gs (bad) fnstsw repz dec inc and pop pushf stos aas cli into (bad) add imul movsl sbb sbb mov pop and mov sbb xlat es imul loop mov por sarl je add push fsts jl pusha and cld xor lea aaa xchg das lcall inc fst icebp xchg xor sbbb ljmp or sub add push mov test gs imulb es add xchg inc mov out shrb push jnp xchg cmpsl je jae pushf cwtl ljmp popa repnz aam dec je xor pop stos mov or mov in or lret mov arpl pusha enter cmp pop adc cmp sub cmp mov scas sbb dec lcall das lcall mov movsl cltd xchg inc xchg call add add in add add movsb adc movsb xchg pushf jb xchg and addw mov adc movsl inc and xchg fldt iret stc xor fcoms rorb out jl inc fldcw jb push or add insb lret jae std fwait pop lahf popf sbb nop (bad) fildl and jbe xor repz or popa adc int3 (bad) xor mov mov sbb dec jl int (bad) sbb cli pop into jge incl sub jmp arpl notl es (bad) and je sar add push out mov mov loope xor add out sub cmp int3 xor das movsl arpl iret popf xchg sub cmp mov (bad) int3 adcl mov cmpsb outsb loop out cltd or mov insl hlt adc jae fsubr cltd rclb xlat movsl shrb xor js dec cmp test mov mov mov aas push arpl in in jns andl call mov inc rol push add neg mov gs aad fdivs sbbl lret pop xor inc pop imul loope es add shll add jo mov das into mov lods rorl ret or adc sub mov sarb pop mov test cli das push pop scas and xor mov loope pushf xchg inc das jb mov dec stos lret mov push xlat aam mov arpl add sbb mov adc loopne add sbbl test push fdiv out mov fsub out push sbb adc in cmp jmp and fisub cmp idiv xor mov xor leave dec mov int cmp push jno push out jp cwtl (bad) lcall cmc das sub (bad) xor sub imul scas xor add mov aad xlat mov mov dec ds jmp (bad) cmp bound jl cmp mov insb insl sahf inc add cmp fcom push xchg (bad) xor mov stc lret imul js cmpsb mov mov test xchg andb insb ds adc xor popl sbb xorl aaa stos push jb sbb clc fsubs cs fisubl mov cmp les lcall pop lods lock or lock cmpsb cmp les sbb inc pusha push ret ret sub mov inc inc rorb das pop insl cmpsb cmp mov popa jl add (bad) xchg mov push and incb aad mov add adc into std adc pop lcall lock mov adc push aaa push pop mov cld cmp cli sub push cmp pop sub xor lret insb rep fsubp lcall xlat cmp mov adc mov xor push sub in or iret dec sub ret in mov lea mov in add sbb push cmpl jp lret add (bad) or shll outsb inc aaa jl adc out mov sbb or pusha mov dec cmp iret test (bad) insb pop pusha cmpl mov cmp xor js outsb xchg in add add and mov xor rclb inc jl jecxz cmp leave insl fsubl xor inc popf mov lods jmp or dec xchg (bad) mov sahf cs adc cmc mov inc test inc xor adc dec (bad) sahf popf xchg scas pop inc cmc outsl pop adc int pop cltd push (bad) mov cmpsl andl (bad) xchg push jns hlt jo outsb push lcall dec jmp aad (bad) ficompl mov enter jle xchg jmp pop stc in or jnp xor adc addr16 addr16 jnp les fisttp rorl cmp mov mov aaa into or aaa and out push push inc add xor pop jbe call enter push inc das out fistpll jge adc cmc lods push mov jnp call cmc cmpsl inc cmp rclb test add addl test lods push and mov stos rclb fcmovu into jl pop (bad) mov pop pop imul repnz cmp or fiadd jmp test lock stos cmpsl js repnz adc dec xor xorb test arpl xchg scas inc xchg pusha xchg xor into or out mov add daa rcr jo and into inc insl in scas (bad) and lea repz test out jo inc push mov dec cs cmp int jmp pusha mov pop xchg push pop or xchg addl mov ljmp and mov fcmovbe add mov mov ficom add adc insl mov push pop cltd cmpsb push lahf (bad) adc pop mov add int3 mov js scas pop enter add push nop dec nop aad cmp std pusha inc pop add push push mov add add push sub subb aam pop cmp (bad) jge in and inc cmp mov in pushf cmpsb repz mov jle jns add mov pop insl dec mov push jle out mov jno add xor movsb daa (bad) into ljmp es aaa subl jmp mov cmp mov mov xor and repz sub int3 mov shrb imul ljmp jns xchg push fildl mov test xor adc loopne inc jmp push fmul pushf lds xchg mov bound xchg sub in dec aaa out dec push cmp ret push sti add lahf xor lret sub mov cld rcrl (bad) hlt out and mov pop dec popf pop pushf pop iret fildll aad lea xor dec or xchg or xabort jge popa imull xor loopne xchg lret nop adc scas adc or les das cmpsb inc xlat clc cmpsl jo xlat mov es iret push loope lea scas xor adc push pop or xor mov cmp repnz mov mov pop jmp adc rcl pop and clc scas cmpsl and and pushf mov xchg xchg pop stos mov sti or sub int ljmp xor outsl test sub xchg adc jp daa les loopne lods clc or and xchg pop in mov cmp lcall arpl mov lret (bad) nop int sub jnp mov in and inc push loop xor out mov fsubl repz lahf jl test sub jae daa mov arpl xor ja cs fcoms pop ficompl lahf insb ss pop in jge (bad) out mov xor ficomp pop (bad) xchg inc cld inc idivb sbb ret enter mov aam outsb pop cmp inc nop test xor clc loope pop adc lock xor fdivrs cmp leave dec push (bad) or pop rcr orb nop add cli cmp and cltd jmp xor mov cmpsl repnz xchg xor mov imul or shlb adc pop mov icebp and add and sub lcall push lcall sti xchg mov (bad) jle pop inc bound and mov mov fstpl xchg jno mov aaa mov jl (bad) xlat xchg inc popf fs ret icebp mov call inc xor or sbb fisttp lods mov push imul ljmp inc push xchg push mov imul in mov cwtl sbb leave push outsb push jnp xlat adc dec pop cmp pushw insl cmp movsb dec in inc scas jae and push pop loop dec jnp lahf pop sbb outsb rol mov lds jle mov push push sub jge add sbb add inc cmp jp fcmovb repz cwtl or outsl mov jne cwtl mov xchg push sub (bad) ret pushf xchg stos mov dec or mov in push arpl out push (bad) repnz arpl mov stc inc inc xor jle sbb mov sub (bad) push pop jns sub inc scas mov (bad) repz mov mov lods inc dec fsubl sahf aas mov cmp into and push cmp outsl aaa cs jl aas cmpsl test cltd mov or push mov sub jne (bad) xor loope xor insb jno mov jae aas mov pusha lds insl push inc sbb add stos fs xchg (bad) adc cmpsb dec (bad) xor shr imull outsl mov xchg sbb cld das mov mov insl mov lds ret pop cmpl seto push sub or adc faddl inc arpl xchg jns sbb ds mov push cmp fwait mov mov add adc lcall fisttpl ljmp inc (bad) fiaddl or popl int mov movsl jge pop cmc push ljmp dec cltd sarl (bad) dec jge add loopne sbb adc pushf and push testl cwtl (bad) aam outsl arpl aam add xorb xor sbb (bad) sbb jecxz sahf in mov pop ffreep cltd mov scas stos (bad) mov jnp mov pop cwtl rolb (bad) or fistp xchg and push bound into inc pop andps repnz push sbb test push ljmp inc bound jne jbe xor cmp pop mov xchg xchg or jg inc add inc fiadd aaa sti aas dec pop adc mov pop sbb (bad) negl and xchg jg push test pusha loope dec popf pop lea or sti jge int lock scas add in div div mov xor lret insb imul frstor lret cmp sbb sub leave add (bad) dec enter loopne adc clc (bad) jne int jnp pop mov mov inc push pushf xor lret push test (bad) test mov fbld pop jge cmp outsb loopne pusha lret or stos jbe inc scas rorl pop cld stc (bad) sahf mov adc (bad) popa loopne test scas (bad) mov out ljmp arpl fnstsw in xor lcall jg or in ss mov ja xor es jg xor or dec adc movsb shl (bad) push sti dec ja dec (bad) sbb mov pop dec pop scas mov xor ss and mov ljmp jmp movsb push dec adc mov dec or sahf loop ret cmpsb insl divl xchg int3 jne push push mov jmp clc mov aaa sub pusha add cld jl mov movq je adc enter into pusha inc sbb xor (bad) xchg mov xorl fdivs mov adc add sub inc jne mov push test push inc lods add imul test push push (bad) lods sbb test sub inc add (bad) aam sbb mov mov xchg lret aad (bad) jb ds pop loopne dec (bad) repnz mov pusha jae sbb mov test fcmovnbe cwtl inc or pop add push cwtl in and sbb xor iret adc insl aad jge pusha (bad) (bad) xor mov stc cmpsb (bad) fisubr adc xor daa fdivp in rcr sub int mov jb mov imulb cmp adc (bad) movsl icebp mov mov loopne addr16 (bad) in jb sahf movsb add mov mov adc js adc mov stc loop push dec and mov xor jmp popa es inc idivb psrad inc sub mov lcall cmc (bad) test and pusha (bad) cmp out daa clc scas push mov push jnp xor arpl inc mov cmc push dec mov out or pop sbb movsl jne sahf sbb mov xchg sub xor pop aas mov xchg or inc ds inc hlt clc popf in incb inc mov lahf fldt lods mov aaa xchg movsb shrb add bound outsl addb jbe dec je stos xor add int pop mov sbb and lods mov xor insb dec mov mov sub push jb sbb sub mov and cltd jp imul sub (bad) pushf jl add or dec (bad) std data16 xchg pop loop add fidivrl lds jbe fidivl mul clc (bad) adc mov and sbb push shlb xchg repz arpl int3 ds cmp pusha enter orl icebp fs jb xor lods into sarl js outsb pop cmpb pusha ret mov lea push inc push xor insl xor or sub addr16 jg ljmp sub movsb sahf js shrb cmp arpl out sub loop adc fucomi fwait mul mov popf or mov sub lahf fistl (bad) loope scas push fwait insl subl or xchg pop lret add mov iret sahf xor movsb xchg push push outsl aaa iret inc sahf lods jp mov adc stos pop xchg xchg adc adcb and mov push int3 sub fiadd pop add and fsubr ja stc push dec ret insl cmp fsubp sub pop daa (bad) sti out cli and push jecxz imul fstl aad stos icebp in inc out shr add roll dec divb inc dec or xlat enter loopne and les xchg popa adc sub leave loop sti aam mov sbb jbe mov rclb loopne jp sub pop call or inc fcom ja mov addr16 rclb outsb stos dec (bad) incb (bad) hlt les inc jne sbb jp xchg mov loope dec insl push push lds inc sbb push xchg jbe pop stos stos push sub sub es fistpll push and loopne xor imul dec imul inc je xlat sbbb mov xlat xchg clc shr ss xorl (bad) je repnz add fsubrl (bad) add push xor jle mov jp jecxz xorl enter cld pop faddl or push push (bad) cli lret nop arpl fmull and test into (bad) pop aad ffreep xchg adc cmp sbb sub test jb lcall test lcall push inc pusha shrl fs pop aaa gs insl fldenv ss loopne mov (bad) xor insb addr16 and jo stos pusha fsubl sbb and pop mov cmp nop (bad) push movb or xchg cmp in mov icebp sub dec jl das fadds shrl lods sbb (bad) pop imul mov lcall adc fs ss mov cld loop das fistp cmpsb imul (bad) rep stos popf je subb xor add push inc in or test xchg mov std lods dec add outsb in cmc sahf pop mov lods mov test sar xchg push xor pop bound cli inc sub call pop or std adc mov mov lret cmpsb or cmpsb outsb cmp call rol fmull popf mov sbb call ror cld test stos rcll push mov (bad) fisttpl cwtl (bad) enter test jo mov mov popa dec mov lods pop sti imul pusha push (bad) cmp mov sarl cld jecxz jl pop mulb cmp cmp jmp lcall faddl adc sub mov cli xchg adc pusha outsb or inc xchg jg mov and inc cmpb shrl and sahf jg xor incb dec dec test or sub or sub mov inc adc ja jecxz dec inc clc inc mov in (bad) cmp push fs push lods jmp push mov or and insb addr16 or push stc fimul imul xlat adc clc cmpsb (bad) dec lock push inc adc sbb pop sub xor shl pop ds test (bad) shll xchg jecxz ficom ljmp push and fnstcw movsl mov sub outsl mov negl dec cmp ljmp cmc pop xlat pop fstps jge outsb add lock mov mov das adc pop fildll cmp pushl popf push pusha xchg jo,pt mov repnz fmuls mov fwait iret sahf arpl jle push jnp mov fidiv in gs push mov dec (bad) stc jne into negb movsl add and jne dec mov mov cmc rclb call mov sahf dec cli dec pop dec test popf jecxz sub adc dec cmp divb fcompl or cmc cwtl fisttpll sub adc push icebp pop sbb add std gs adc cld sub add inc sub aas mov jp iret jbe mov pop loope shr js adc sbb or jecxz xor dec nop (bad) jmp negl push jge sub cmp xor iret xlat lock dec mov cmp mov pop js inc jle xchg push sub test and sub dec sbb gs cwtl aam pop jo adc and and jle jle iret or sub clc inc mov inc lods add xor xchg pop movsb push jp push (bad) mov pop mov pusha adc enter mov out pop sbb xchg push jmp daa jno sti adc (bad) or imul mov cmp dec jl gs ret or mov es sarl add stc mov insb jecxz sub cmp dec mov dec cs in insl leave in sub out test mov loopne insb xchg xlat add gs lds rorl and (bad) out adc inc fcoms int3 xchg aad fldl jns ficompl fcoms mov add mov aas jo (bad) call pop data16 pop add mov std jecxz mov (bad) mov rorl or mov (bad) outsl into xchg inc (bad) fldenv pop xlat mov (bad) adc push dec push fsubrs das dec and cmc sar mov insl in pop mov scas inc (bad) xor (bad) cld (bad) dec sub sbb push movsl fisub out pop mov add cli mov aaa mov pop into xor pusha (bad) xchg or cs dec repz pusha or sbb stos add pop (bad) fnop mov mov mov arpl stos dec xor dec out jge test pop mov aad out clc or or jbe or cmp dec ret clc adc adcl cmp (bad) jmp sub enter scas cltd jg mov pop add fisub fisubr test xchg fdivrl leave pop and push push mov pop pop (bad) dec push out cmp mov fdiv push jo das push or decl (bad) pop push bound sub repnz add and push test inc dec push loopne cmpsb jmp jo sbb cmc outsl jo ja dec sub dec xchg hlt mov cld cmp rcll push adc xchg or push cmp dec push xor xor nop int repz pop movsb inc mov xlat decb adc mov out fiaddl inc ds mov insl addr16 icebp lock aad adc lods sub fstps mov mov push add jmp (bad) icebp jnp mov dec add sub mov jl out push loop mov lds cs xor in add xchg out hlt push scas fwait shl lcall jno mov popf xor jns or (bad) inc sub push xor lahf aad fucomp pop je cmpl sub mov jg jnp loope nop push cmp outsb jp mov int3 imull jnp frstor sbb and push adc arpl xchg sbb fidiv enter arpl or testl xlat es mov sbb popf sub outsl inc lods ret data16 out mov push stos movsl cld mov xchg mov repnz push (bad) std outsl add shrb leave sub xchg mov aad mov sub cmc sub mov push mov cld adc fldcw push test pop pop in lcall mov sub sbb orl mov inc cmp fdivrl notb jb xor in jmp push ret movsl nop jne xchg jne test pop loop mov adc mov cmp mov dec adc cmp bound xchg dec fisttpl sub add decb xchg push movsb or add sub adc outsb xchg push je subb rorl rorl sub test aaa gs pop add xchg mov iret inc dec sub repnz push cmp (bad) pop int enter aas push loop mov mov push nop mov aad lret enter loope cld mov pop xor add hlt cld leave push jmp adc popf ja add or push data16 jp pop pop dec sbb sbb sub lods les test rorb mov scas cmpsb stos cmpsl icebp mov push jge aaa add pop mov push call jmp aam das pop nop test mov imul dec nop cltd jmp shll (bad) lret sbb test adc dec and mov flds ja mov adc and pop clc xchg sub fstpt xlat scas xor xchg loop cmp inc jb sahf mov adc jge mov sbb jge xchg push push lock sahf jge xchg repz es fsubl shll (bad) mov and pushf (bad) es adc adc adc (bad) jle clc repnz fs testl mov ja push xlat imul sbb and push daa mov sahf push and push vmulpd fsub cmpsb sahf and out insl loope push sub (bad) fcomps mov les dec inc push push add push mulb inc dec fistpl sbb push shr icebp jl test dec pop push sub add out mov jb xor fdivrl or mov mov pushf daa push jp daa cs mov push sarb das aas imul addr16 stos push mov lea outsl out outsb int imul pop inc sbb sub adc lods (bad) out imul xchg test dec es icebp xchg xchg lods cmp dec sbb divl rcl pushf push pop xchg jge,pn dec xchg mov aam sarl inc mov xchg ss cwtl xchg mov stos fwait cli rcl adc aas add pop rol inc jae fs and mov ljmp call in mov insb inc cmc pop xor or add test cli fbstp mov in mov mov int and push dec fsubl fs stc in nop xor push xchg add (bad) iret mov sub dec popa cmpsl jns int3 pop pop sahf loop cmp (bad) outsb adc mov pushf sbb fstpt sbb mov mov rcl rcr xchg adc pop cwtl hlt cmp decl mov fstpt scas adc inc stc add icebp push insl mov ja and adc add adc cli xor jl push push add fs sbb or popa sub ljmp pop dec sti ror pop out dec pop jne outsb cli push adc std xchg inc mov outsb int xchg cld mov jmp jp cwtl rolb aad repz mov jbe cli test std mov xchg cld mov push xchg idivb push mov cmpsb imul les xchg cwtl sbb inc inc pop (bad) in cwtl mov cld xchg ss sbb stos std loop xchg fcmovb stc je jmp or pop addr16 jno in ret jecxz dec jmp lods xor cmp push mov imul ds push or jno jns lea fwait lret rorb pop sub dec adc inc lcall dec daa test outsb mov das cltd jle or inc jmp frstor fmul inc loop or cmc push pop sbb adc inc mov pop (bad) (bad) int3 jle adc hlt cmp mov sarl stc pop or mov test aaa add test or cld rcrl mov mov push loope inc sarb xor push cmp inc stos add xchg es aas dec pop xchg (bad) mov push nop sub mov in inc lcall sbb dec push push repnz in dec addb ja test xchg orl roll jnp lds cmp leave test mov lock pop mov (bad) push cmc push or jp into insl js add aam mov fnstenv adc loopne jg xchg jb gs mov and cld sub mov jmp xor pop add les inc cmp xor adc (bad) movsl jge inc test popa les dec push out aam cmp lret lret sahf jp jecxz addr16 lock daa and add pop cltd cmc jge mov in jmp push jmp shrb ds scas mov std jns xchg nop and (bad) lods ret push sub cmc clc (bad) ljmp iret fcmovu push adc pop push add das sub movsl and sbb sbb (bad) inc ret jo ljmp inc inc je sub cmp xor enter mov mov mov pop aad sbb mov cmpsl es xor mov sbb test (bad) mov mov xchg xor (bad) adc out add movsb mov sbb jbe fs popf loop mov aam sahf mov cs clc loope mov sarb adc inc cli or cmp sbb xchg cmp jno and xchg ja sbb xchg lret xor hlt repnz mov mov leave aaa mov xchg aaa inc arpl subb dec pop fdivrl xlat test mov push sub or sar xchg and push push xlat hlt mov xor mov mov out into lods leave fild rcrl dec push push enter cld js push (bad) lock cli push (bad) repz pop jge mov adc stc sahf jbe ss lretw jge sub negl push sub popa pop jl jns adc mov and mov mov jle std gs movl jmp mov jle test or mov adc insb icebp rclb cmc loop dec je iret and stc sti test push or loopne sti imul ds mov push jge adc mov popa sbb cmp clc test cltd push xchg mov and popa fildll cmp and mov push cmp js xchg fwait test sbb loopne mov push dec lret fnstenv mov lods lods dec jb pop mov mov and rol add movsl xchg pushf mov pop or ja (bad) lret stos dec rolb sub iret icebp inc std inc xchg test push sub int3 jbe les addl push aas inc scas jle addl mov pop or jp inc xor ja jae pop xlat mull ss cmp in dec lahf xchg sbb mov ja xor mov push adc aaa movsb sub xchg xchg (bad) or jle arpl xor lahf inc loope cmpl pop mov imul add les push ret adc or add inc das mov mov les inc cmp pop push add adc addr16 inc add add add (bad) (bad) incl add add add add add add or add add jb mov in fwait in cwtl in popf in xchg in scas in lahf in mov mov in lcall in xchg in (bad) in xchg in mov mov in pushf in test mov in (bad) in mov mov in lods in xchg in mov mov in cltd in mov add add dec in mov mov in test mov in movsb in movsl in xchg in lcall in movsl in mov mov in stos in mov mov in lods in movsl in mov mov add push in mov mov in mov mov in mov mov in cmpsl in mov mov in cmpsl in movsb in xchg in xchg mov in xchg in mov mov in lea add in cltd in test mov in cmpsl in scas in (bad) in test mov in cwtl in mov mov in sahf in mov mov in and cmpsl in movsl in test mov add jb mov in mov mov in mov mov in mov mov in and mov mov in mov mov in mov mov in xchg mov in mov mov in mov mov in mov mov in test mov add dec in xchg mov in test mov in mov mov in and lods in xchg mov in lahf in pushf in mov mov in lcall push or add dec in cwtl in mov mov in xchg mov in test mov in xchg in mov mov in lcall in xchg mov in mov mov in test or add push in cltd in mov mov in mov mov in mov mov in xchg mov in mov mov in nop in mov mov in fwait in and mov mov add aas in stos in xchg in mov mov in and xchg in test mov in test mov in lahf in popf in and mov mov push or add inc in mov mov in mov mov in mov mov in cwtl in xchg in cltd in mov mov in scas in (bad) in mov mov in test or add pop in mov mov in mov mov in mov mov in xchg in xchg in mov mov in mov mov in nop in mov mov in sahf in mov mov in mov mov add aas in mov mov in nop in mov mov in mov mov in mov mov in (bad) in mov mov in lea push add add mov in scas in mov mov in cltd in cmpsl in (bad) in test mov in xchg in lods in scas in mov mov in mov mov in mov mov in mov mov in mov mov in (bad) in xchg in mov mov in cmpsb or sarl add xchg aad popa jl xor lcall mov mulb js add jb test int3 mov xchg test mov leave xor nop jmp sbb and dec sbb outsb gs inc sbb fisubl ja (bad) sbb jo push loop pop icebp fs pusha aas mulb jle sbb jb pop cmpsl decb popf mov xor out adc dec loopne ret mov mov outsl popf sarb xchg je gs test adc orl jmp sub gs stos sar pop js int3 pop js dec mov lahf sbb lcall push cmp test cs cmc mov gs (bad) sub mov inc cmp out cwtl cmc inc mov xorl xor dec cmp cmp test dec test pop mov dec inc paddw add lock dec and jnp rolb arpl cmp clc ja xchg std aas lcall movl in shll or iret xchg daa fbstp rcl lcall mov cs push adc in subl jg lods mov cltd mov je test bound jp dec lods sbb (bad) mov std cld jle sub sbb pop xchg mov inc xor rcrb fnstsw ja test not pop mov xchg in js stos (bad) xor ss sahf lods push test push out (bad) xchg mov fbstp mov pop outsl sti sti aas mov pop gs sbb mov dec add pop jns test jns je scas call or mov loopne neg aam ret pushf add pop adc sbb jae cwtl in inc adc fidiv mov push xchg test sbb jne cmp rcrl pop mov pop jns rorb sahf sbb movl sub ds and mov scas aad jb scas add orb dec shr xor fs and scas jge and mov mov sti ds dec inc stos lea jns cmpsl ja sbb mov mov lods adc and or scas and cld dec (bad) jbe mov pushf inc push cltd std xor or jp mov mov or xchg jl inc jge inc inc jne insb dec mov and xchg dec sub pop pop and out mov fdivl or add int test sbb xchg jb add das cmp push cld sti pop jl loop adc pop jo dec loope dec sbb and das and push addr16 in jge and mov mov (bad) gs out aam in mov cmp sub jns add rcrb fsubs dec leave jl enter in adc cmp mov jb xor or dec mov jno pop cmpsb mov daa insb xor push hlt push mov mov int3 movsl dec cmp loope jns mov mov pop jo out push adc or xor jb in cmpsb pop xchg pop sbb movsb daa mov rolb lods std aam dec xlat (bad) rcrl jns pop (bad) movsl sahf cmp xchg out lret mov add or int3 inc cld sub sub mov ja pop pop outsb (bad) inc clc ret (bad) in push pop iret add in repz or out or xchg insl scas (bad) pop mov add out xchg (bad) push fcmovnb sub pop lea push ljmp jo push and jecxz xor push jecxz sbb pop mov aas mulps adc test ss add mov insb lods xor (bad) out (bad) repz xchg pop into sbb (bad) lods das repz xor or push nop sbb aas idiv mov bound pop mov (bad) jp jns xchg cs cs arpl xchg sar test pop aaa insl push ds dec mov int3 out pushf je push lods add and js mov mov sbb loopne and mov pushf lds adc adc das xor xchg in or aad out clc pusha mov fs adc sub lahf bound hlt out jge lret notb mov push mov lret test cmp lods xchg push sub mov sbb push idivl stos cmp xchg sarb jmp adc lock dec sub add int lret mov dec ljmp fcoml jg ss lahf cmp rorl pop sahf in mov sub test data16 cmpsb adc enter sub cs cs fstpt addr16 pop out dec arpl scas sar sub (bad) fstps cli mov push pushf mov imul push insl push daa adc cmpsb int3 jl pop cmc xor popf mov or shrb cs in xlat push push iret add pop sbb mov adc pusha mov xor cmpsb sub gs addr16 clc add testl cli in leave mov es clc and and cmp mov sbb sbb sub mov adc lahf (bad) cmp hlt scas pop lret lret inc inc push fildll dec cmp clc adc test inc sub (bad) jecxz in xchg or sahf and in cltd sahf inc add pop cmpl in cld mov aad xor dec loopne add arpl xchg js mov je jb push int3 aad mov xor mov mulb pushf push mov outsl fs pop and pop dec cmp adc lcall aam push lahf cmc (bad) xor mov call sahf inc sub push in dec mov popf pop mov out nop fwait lods xchg sbb stos mov jo ja cmp jb dec mov sbb push jmp xchg jl lahf push pusha xor sub sub jnp mov push push fwait pop int3 jmp rcrl int aam add loopne leave xchg cmp rcrb popf mov and mov stos cmpsl adc clc cli test pop or dec test add pop sbb sub cld hlt pushl push dec daa in sub rcll push out lret sbb paddsb jle jmp imul pop in addr16 pop push add sbb fcom nop aam or stos test or addr16 mov stc das mov (bad) or xchg pop daa mov mov mov rclb dec sti mov mov (bad) pop jl or into pop and jp push sbb mov or in mov test jns and cmp test xchg aam jle bound jl inc fcompl lds sbb or shrb aas (bad) adc cs int3 inc and outsl test roll ds push mov repnz pushf push jo cmc test cmpsl test mov shrl jo sub fcomip out movsl mov mov ljmp mov and push fiadd aad fs cmp dec (bad) inc ret (bad) xchg (bad) lock xchg adc fcompl out or imul push movsl pushf fsubr jle sbbl (bad) nop cmp mov push popf xor cmpsl pop push fiaddl test std and int3 add jmp dec push (bad) inc mov movsb ss and sbb sub pushl (bad) cmpsl xchg scas rol pushl push dec in in push cmp jle sub mov fidivl add pop xor das sarl enter lds cmp xorb in xchg incb in data16 sub call mov cmpsl sub and aaa les cld gs outsb lock daa aas adc xchg fisubrl xor fidivl popf sbbl popf rcrb push movsb jg sbb icebp cmp cwtl (bad) pop mov push (bad) and cs and fdivrl data16 hlt xchg or dec dec mov cmp int3 mov mov pop mov sub dec in push movsl aam (bad) and fldenv push jo sub ret push sub xor pop nop ljmp jp mov mov jg lock or js repz pop sub leave loop mov pop or es or addl lahf jmp cmpsb mulps push aam inc xlat sub sbb mov pop push inc mov test xchg rcrl clc fs xchg add add cmpsl and mov mov fdivl mov add lahf dec mov dec jg sbb mov push inc sbb mov icebp cli mov fstps lret inc out popa (bad) loop sub adc jae xor in jb cmp jo add mov shlb loop inc or sbb inc (bad) fs pusha subb popf pop push cmp clc movsl lea xchg pop jbe xchg xchg mov (bad) xor mov cmc jae xchg inc adc (bad) jp pop mov add jmp arpl dec js nop test mov sbb lea ror lret cmp lea (bad) repz mov dec loopne fidiv mov inc mov bound cmp and mov lods mov jge jl mov iret addl repz push mov div popf cmp mul push out shlb cwtl mov fldenv push pop add push sub ss icebp push rolb out test mov and lods jo xchg cmp xchg fs lret mov std lea add add cwtl xor jo fisub push and dec rorl movsb fcmovu out lock icebp mov jae sti dec (bad) lea (bad) fistpl add jg insb pop pop add sub cs mov fldcw push or push jne cmp mov icebp imul push test cltd or lods insb pop pop mov jg inc jle fist add dec (bad) push jp fdivrl jmp and icebp cmp lock stc push xchg jg mov arpl xlat push add mov sub das pop fcmovu inc cmc movsl std mov sub repnz aaa addl cmc sbb dec out dec xlat ja aam xchg test and test frstor xchg fistp in and cmp xchg (bad) aam sbb push mov adc pop mov sub pop or and or (bad) adc insb pop push cmpsl in mov push push fldenv ss mov fbstp sbb sbb xor adc xlat gs push pop popf jno jns jmp lret add or push orl mov jne xchg adc mov stos sarl out jno sbb lods iret sub sti jne jae sub inc cmp inc lahf sub gs inc dec pop jp arpl mov mov push jne (bad) dec out cmp xor add insb cli lret mov or ja stc xchg pop jb mov daa pusha test jecxz mov jmp lock js idivb stos dec enter lds pop sub lret sbb and cli push cs (bad) xor shll adc movl xchg adc mov ds rclb xor lcall imul pop test jns inc jecxz je pop (bad) adc insb (bad) (bad) push mov mov adc out (bad) push mov stos ja or cltd cmp fisubl inc decl pop fs int3 insb sarb fwait xor push enter cmp push inc mov mov addr16 add add jno push add dec cltd popf ficomp shlb xchg int3 xor aad repz nop loop pop std movsb lcall scas int cwtl sub inc test fistpll push insl popf ljmp xchg mov pop add inc lcall push insb je xor xchg lds jge insl jno push xor imul cmp addr16 cwtl sahf lcall sbb loope nop sbb mov add cmp fldcw aad jl xor mov (bad) imul aam sub pop xor int mov insb cmp or push adc sub fsub enter faddl dec mov int lea mov mov jnp push (bad) addr16 add fldt mov mov jno mov push dec jge gs adc bound inc mov sub adc daa xchg imul loope pop lock push int3 xor push sbb add push popa cltd leave scas adc ss ja (bad) cmp xchg inc cld xor fmull data16 jl loopne in loope adc add int stc (bad) sub adc inc cli push lods jl sub push add jle cmpsb lcall imul jmp push mov pushf cs (bad) add daa or enter lods js push addr16 push mov sbb pop sbb jno adc inc nop js or add jg ja mov ret ret mov test jge jp pop and xor imul imul outsl mov lea push inc cld scas outsl lret dec mov dec mov fstps arpl test xchg xchg jae cs faddp cmc rorb lods (bad) jb int3 push dec ret cmp jne lods test stc mov aas xchg cmpsl xlat mov dec jmp cli (bad) xchg bound out js inc push push jg mov dec insb and push outsl inc (bad) repz loopne jp out in sbb aam fwait mov imul in fidivr cmc mov lret xor cmp mov aad dec jl xor aaa jb ret arpl pop (bad) xor ret cwtl sbb jle push add dec push xchg jle mov mov xchg cs adc jne push scas out cmpsl inc xchg add inc js dec or lods push cmp out mov cmpsb cmp jne sbb fs int sar scas mov jmp adc (bad) leave adc cmp fsubs mov adc fs scas imul and dec add mov movsb leave ret out or inc (bad) cmc in mov push lods rorl inc mov in and nop call into lahf or cli mov and imulb enter or inc clc imul hlt mov sub mov stos xor stc cltd orl call shr sub xchg (bad) fcompl jno push mov or in inc popa pop shrl in ret adc lock in leave push pusha seto push dec mov pop ljmp repz or test js mov sbb lret in mov out push pop aaa mov dec ss out (bad) sub jmp and xor loope or insb and dec (bad) pop cmp jecxz mov adc xor mov push (bad) add jge enter mov push hlt dec loopne (bad) dec mov xchg sbb adc mov imul repz jge je jbe xor or test mov shrb fimull stc js mov mov push fisttp popf lret mov ljmp jp cltd cmpsb ficom dec stos stc pushf jno lods fnsave fs adc xchg pop add adc xchg ds dec cmp or push sbb cmpsl cmpsl mov sub push enter push inc lret push fldt lea jbe stos into xlat sub mov (bad) shlb outsl mov pop mov pop sub in scas xchg add popa mov mov sub enter push inc imul (bad) clc add fldenv inc icebp mov mov sub cmp outsb and fild loopne imul xor out (bad) sub cld mov push insl adc adc out movsb jge xchg push and push aam lea pop or adc cmp gs jno fisttpll cmp rcll mov lret sub loope sub and or mov in pop lock rcll pushw mov push xchg repz cmc lret scas sub and fs dec and mov dec shll sub (bad) (bad) fbstp jno xchg jecxz (bad) adc push or iret adc pop and sbb fnstcw popf insl call popa dec dec sarb je test scas (bad) aad int int3 loope cmp jb jg jbe push arpl outsl inc out icebp jmp cmc xchg cmpsb andl dec or out mov in fnstcw sbb test pop in add cli pop outsl sbb inc (bad) xchg nop adc loop inc push jbe mov lret sub xor js jns xor jle sub cmp in cmpsb shll adc mov mov sbb sub dec lahf lret lock fisubrl test add nop fimul cmp movsb sahf adc jo icebp pop jp inc pop mov and lods cmovo ljmp pusha mov call mov mov test push out ja cmp push jne cltd call or pushf sub push jne xor cmp iret mov dec sbbl push cmp jge popl (bad) idivl inc xchg xchg xor sub cmp cmp mov dec cld andl or mov xchg or mov aaa adc gs jae (bad) jne (bad) xor and scas mov into xchg pop push cmp push xlat cmc out pop movsb repz xlat xor sbb rorl dec cmpsl out sbb jg mov xchg (bad) jns das mov fwait cwtl fsts lret mov mov adc jne jne push add (bad) add mov cld ljmp mov cmp nop jecxz outsl xchg faddp pusha aaa loopne mov mov ret mov aaa xor mov in es test out jp mov movsb dec adc mov jmp push aam pop push pop lock out mov pop xchg cmp out jne pop sti loope add sbb xchg xchg aam xlat enter sarl out cmpsl test pop push push sbb jnp and lret inc inc call out fimul je jno (bad) mov push or mov ja aam es shrl int adcl incb aam mov scas jg xchg (bad) mov inc loope jbe dec dec sahf dec mov add out ret jae mov mov call cmpsb dec rcrb mov ja lds sbb in and mov push (bad) xchg mull or cmp mov push popa adc inc imul and sarl pop int push sub cs repz shll cwtl pop adc outsb xchg mov mov data16 jne push pop popa rcr adc push test mov sbb out dec pop lcall and movsl push push push add ret mov or push cmp out fwait mov pop insb fwait and or or inc push jno pop std pop ss sahf loope push cli dec dec es jle pop cwtl lods push fldl aaa scas hlt mov sbb pop repnz sub in xchg mov leave hlt push fnstsw sti mov add push dec pop lock sbb mov cmpsl or inc (bad) dec ss mov inc inc fucomi std rorl shrl jno mov pushf call lock fdivrs out mov push fs xchg not fild pop mov adc jmp jnp scas imul xor dec sub pusha pop cmp mov daa xor sub outsl icebp cmp cmp jg and mov add xchg popf fwait (bad) std js cmc sub jno push loope (bad) sahf push insb das movsb lret or dec lahf pushf std mov sbb xchg mov jp (bad) xchg outsl popf dec mov loop mov bound mov loopne xlat inc sbb popa push jmp rcl or jl test mov jb (bad) xchg mov or cmp sub je add mov inc scas mov sbb (bad) ss rclb mov pop mov dec sub push or inc jecxz addr16 cld sbb push and inc or or rolb lcall test fs xor sbb push add jbe (bad) call lea adc addr16 and in mov rcr jno sahf jno popf cmpsb or imul sub mov (bad) jne xor and pop repz iret mov dec cltd push xor mov outsl std bound jl mov (bad) cs jg insb inc sub repnz lret add rcrl sub cmpsl inc jle sti mov leave scas fadd inc jae aad push xchg push lahf push icebp clc insb ss pop add dec pop pop jmp jo in cwtl push xlat cmp sti (bad) pop add (bad) mov jbe push outsl sbb aad mov cwtl or pop imul jecxz and push nop sbb xor pop add lods dec pop jge rcl cmp jbe pop cmp leave pop jo das cmpsl inc add mov stos arpl push (bad) es sub mov mov sub cmpsw popf jbe sbb les mov ds out mov push testb insb rcr mov (bad) dec cli (bad) adc pop push inc lds pop add xchg in push sub popa or std cs dec test shll mov arpl cmp repz mov and cwtl ret inc cli fadd cmpsl inc shrb aaa cmp push push sbb cmp adc aam or jmp xchg clc and into imul xchg xor incb adc sbb orl or lret aaa or stc jmp adc adc sub outsb jl xchg add sub mov mov cwtl mov adc stos (bad) nop or stos int3 jg aam sbb es addl pop (bad) mov rcrb or scas je and repnz dec stos popa std setno dec std xchg cs jmp loopne lea int3 sbb mov dec pushf rolb roll cwtl out int sub jb cmp push shll scas ror sub cmp mov jo (bad) dec inc jne xchg bound xor test pop gs pop pop fdivrs (bad) jbe lret arpl mov lahf mov add sbb (bad) scas sub and sub iret std leave pop insl lret adc test xor (bad) cmp andb out cmp cs lcall lcall loop xchg rcrl cmp popa mov pop decl je push out movsb inc mov sub mov jne xchg jb sti jae into mov andb ja mov lret nop push stos cld xchg ss imul insb xchg jnp cmp push mov mov push fucomp mov sbb jg and mov ljmp sbb imul pop xor mov pushw xor sub ljmp imul out mov pop sbb jge adc (bad) outsl inc sub mov ss pusha cli xchg pushf lods xor in adc sub xchg jle pushf push gs dec repz into cltd aad ret jg fs mov (bad) mov ja pop xor sub push in cld push dec ret sbb mov clc inc in hlt pusha std gs out cs sub inc imul push pop (bad) int3 sub mov shrb (bad) jp or dec xor sub sbb mov pop or iret sbb popa test mov pop or pop xchg adc jns rorb daa aam and ret outsb sub pusha mov stos cmp lock mov int or xchg das inc mov (bad) adc leave mov pop push jmp js ret pop mov mov pushf mov in (bad) mov cmp cmp out jbe aad scas fucomi (bad) jo incl lods mov fcompl popa std sbb mov sub mov sbb xchg (bad) push xor mov lock jg mov clc jecxz and pop and aam rorb pop mov incl test mov iret mov lcall scas adc sti cs xchg dec sub adc cmp cmp sahf mov jns aam lret fstpl dec mov (bad) dec ret xor out sbb idivl jg iret adc or outsl xor ljmp int jecxz sbb push sub addr16 inc ja cmp pop std xchg mov fnop ficomp sub cmp push sub sbb cmp in (bad) clc push cmpsl fiaddl repz (bad) sbb or pushf loope orl push mov xchg andl jecxz push pop pop (bad) jo mov and shlb adc or pop clc pop ret dec (bad) je out (bad) sub aam adc into sub cmp xorl paddusw paddq loop jecxz call xor cmc xchg rcll mov adc xor cmpsb ret inc or push into jbe test (bad) sub jb je ja and (bad) into ss test mov std (bad) stos insb in icebp jmp fucomp cwtl sub xchg pop xor test call sbb jns lret sarl cmpsl pop and ret ljmp jb pop pop jne push jmp imul jmp mov sub or jmp bound ret push dec lea push push cltd jmp pop mov mov in or sbb dec mov push fisubl int jp pinsrw and ljmp outsl cwtl dec and loopne enter mov sti js mov rcl scas jb daa cltd mov xor clc xchg cli movsbl pop mov push sbb stos in dec cli test jmp jge or sbb daa das imul xor push repnz adcl mov push mov inc clc sahf mov ja fwait (bad) or icebp xchg cld scas and dec xchg (bad) mov pop orl pop scas test (bad) mov test out lcall sbb leave out fistl xor loope sub imul inc jmp or add lock sub jg sub in jp in (bad) xor pop lcall pushf or mov dec mov and repnz pusha imul and call lods fwait movsb add xchg out leave mov stos leave gs add sahf lods xchg jno nop fdivs inc sbb xor push adc clc rcl rcrb jno mov and les in inc dec cmpsl mov shl cmp scas sub cmp bound rcrl aaa or outsb mov pop imulb in orl mov cltd popa test jo loope mov dec idiv xchg insb shll dec jmp notb rclb (bad) xchg fsubrl and push xor mov inc dec xchg in (bad) xchg xchg sbb inc (bad) xor (bad) iret aad mov cmp (bad) mov idivl rcl mov lods and lods (bad) push mov lock mov nop insb or std jg out arpl inc or in pushf mov and jae mov xchg insb adc push cmc inc inc daa aaa mov push xor sbbl movsb and popf mov jns mov in cmp loope aas cli arpl jle stos cld (bad) or inc cmc mov mov cmc jo xchg add add pop scas imul jge fnstsw rcrl push jecxz nop jb shr out cmp popf push dec (bad) or mov push movsl in inc or cmp lods shll (bad) dec dec xchg pusha scas sub mov add insb iret adc add je xchg mov stc cmp push pushf and lret push sahf cwtl xchg ret lahf ljmp fwait pop lea mov lret dec and sub push cmp mov push push aas add and cld jno inc sahf add or int3 scas inc lods sbb cmp lds and rorl test stos je rcrl xchg ja fcompl js loopne push fildll out icebp push jg notl jle in jb sbb std mov mov jp pop inc inc or pop (bad) inc cmp stos lods cmovo js dec pusha fidiv enter cmp mov push cmc invd into lods shr es adc sahf out mov push data16 sbb int mov cmp mov aas and std pop dec test in pop mov test cwtl adcl dec and lret mov movl add dec scas or ficompl add xor mov cmp pop lret pushf aaa test mov or fisub fadds lods add ret push adc xchg sub adc lock add xchg dec orl rcll sub gs cwtl dec inc push push gs mov fnstsw loop or icebp adc arpl and dec xchg lock adc mov jmp fcoms rolb fbstp imul dec adc inc inc idiv fild fwait repnz xor cmp loop loopne jmp int3 idivl xchg mov jo dec (bad) cmp cli sub rorl fadds mov push (bad) into pop fcomps push out popa orl mov mov and mov sub push add insb (bad) out push add mov jmp loopne jno xchg inc lret out (bad) jnp sti lods imul sub sub roll cmp jp dec pop mov cmp push inc les xchg fisub and inc and mov ss mov inc movsb rcr mov aam pusha sub (bad) insb dec fsubl adc add lods dec xor pop adc adc mov dec repnz test adc cmp shll ret or mov loope add movsb jnp (bad) fdivrs push adc lea jae (bad) or (bad) push mov int3 jno inc int notb push pop add jg ret dec mov dec xchg push cmp cmp ja cli dec test lods mov mov int3 sbb mov out and adc jae pushf movsb pop imul dec shrl mov enter mov sbb into dec and dec leave dec shrd mov push or dec ljmp adc insb mov mov pop cmpsb icebp lods inc sti test lcall xchg sar pop cmp dec in sbb jmp in out shrb iret mov jne sti or rcll bound (bad) std bound faddl call std mov (bad) fdiv mov xchg push mov call pop push rolb pop inc mov divl push in xchg cli jl fidivl or (bad) mov popl (bad) lock xchg ficom or pop mov pusha xor pop sub inc inc inc jmp push sbb mov out sahf les xlat jns sub mov sub lock pop xchg pop ljmp icebp mov cld js sub xchg movsl movsb arpl cmp popl or xchg push addl inc xchg or jnp loope scas push jne bound lcall and test mov inc jnp (bad) (bad) mov dec xchg fidivr push loopne mov (bad) xor push adc push daa cs and pop add in shl jno push int3 push xchg sbb and pop add outsl inc dec sahf addr16 out mov ds and adc lods pop add mov cmpsb sti jmp pop mov in sbb adc outsb pop xchg mov sub mov loopne lret es cmpsl in cmp mov loope jmp pop push int mov pop bound mov push test dec in mov movsl scas lea pop xchg (bad) sbb mov sub dec inc jecxz sbb or cmp loope cs push das dec arpl push shlb dec dec lods dec jle jle jb pop xor xor adc daa in insb cltd push xor inc sub cmp pop insb sub cmp pop push movsl mov inc mov mov adc xchg mov loope push mov hlt sub cli lock jne lods push imul sub shlb xchg lods jge jb,pn jl (bad) hlt notb pop and arpl pop stos lods ja je stos sbb ljmp gs mov sbb mov pop dec flds lods adc cmpsb xor fimull adc fnsave outsl cmpsb mov mov in mov push add ljmp jge push sub sbb sti push je or sbb lds insl dec cwtl js test sub out jb inc cli fcoms cmp cmp and hlt gs into xor dec mov test adc scas inc cmp int lret fnstsw mov cmc or fdivrl je cld lods or cmp divl push push jmp fistl xor mov dec stc test xchg scas je jmp cmc aam cs ljmp pop cmpsl cs or daa mov stos leave push xor gs gs (bad) test fs dec xor (bad) inc test mov test ss push lods rcr fcmovnb stc adc mov mov add in push push in push inc bound pop scas (bad) in lret push sub push xor cmp popf rclb or imul jo pop out dec inc mov xor fcoms notl and lods pop dec xchg dec test mov aam mov inc push fcomps inc pop jb out mov ret adc fcomp xchg repnz mov pop and or dec add insl jge fcmovbe stos repz std add mov push ljmp dec cwtl mov outsl loopne out out push cwtl mov or fcomi test in push lret or dec aam xchg sbb jmp mov loope cld and sub (bad) jmp out adc lock lock jb mov (bad) xor pop mov and fmul push divl cmp nop test mov into sub addl addl pop incb xor jnp xlat jnp mov aam fbstp jb cmp mov or mov cmp sub iret (bad) cmp repz test clc pop cvttps2pi popa pop ret adc mov enter cmp jb (bad) icebp or sbb shrl inc popl aas sbbb mov cli (bad) (bad) hlt jns xchg jmp stos xchg mov or jne into mov sbb test push sti xor jg sub and inc nop ret and roll loopne mov sarl add out (bad) lea in inc imul mov push sbbb pop lahf or fidivrl movsb outsl ret add jne mov add adc aam lock test xchg mov inc and aaa ja dec pop mov incb arpl dec cmp mov (bad) xor mov jno fwait lahf insb or das xlat push cmc mov fisttp (bad) iret in or push popf (bad) jne fstpt inc adcb jl ja pop pop lret lcall lea hlt or pop xchg mov adc xor lahf scas insl popf shrb mov mov mov mov lahf push or (bad) jge,pt icebp and xchg mov sbb pop flds xchg jae dec push and lods cld xchg sbb (bad) jno sti das sbb mov push faddl ss xchg mov xchg jp test out pop lods cld mov stos mull rol push xchg or fwait outsl imul mov mov push push fdivs or cmp pop int push jo jp push mov mov mov popf cmp popa jge cs mov mov pop dec mov inc stos lcall dec or popf repnz call mov enter call xor inc sbb or int3 and cmpsb pop inc or dec fimull dec fisttp dec (bad) jae insl push add xor aam pop bound xchg xchg inc cmp addr16 sbb das fist xor inc in push xchg jmp cmpsl mov xchg sbb icebp incl decl rclb hlt out adc mov cmp sti xor xchg ljmp int lcall arpl adc pop adc pop pushf mov les inc (bad) lret outsb loope xchg in jne jo out pop imulb repnz iret add icebp rcll sub lods mov jnp cli lea xlat lods jle out (bad) push xchg sti or jo sbb jb (bad) icebp sub pop (bad) cmp ret fdivrl loopne pop cmp movsl jp and lds mov inc jb xchg mov mov jb lahf and movsl and mov and and sarb or pop xchg test nop push rcll cld je lret outsb adc push stc push jge inc sbb cmp jnp repnz push test jge dec jp call movsb iret push xor jp dec into mov cld mov sub int3 (bad) repz jne push or lahf add cmp inc jnp jae mov shr in fildl std sbb lret mov pop lds andl jmp (bad) hlt inc arpl xor test xor loopne mov ja inc and out cmp lea pop hlt xor loop lea jle sar add lret lods call out ds cwtl ret movsl arpl or cld push data16 mov mov ljmp out ror sub ja cmpsb out sbb cltd sbb jbe dec and adc jbe rcr mov mov and cmpsl das mov pop push push std sub (bad) int3 jae pop xchg and ficomp imul mov inc (bad) les arpl popl icebp mov pop fldenv cmp ret jne dec fs inc inc lret iret cmp fcmovnbe push and data16 fwait xor inc xor sbb jno gs subl ds stos cmp cld cwtl imul add xchg pop sti sahf arpl in lea push and xor scas mov (bad) aas sbb push popf xor rcrb pushf rol xchg stc push pop cmp cmp fstpt in icebp sub nop test adc lods add lcall inc dec mov out (bad) gs xchg ljmp xlat insb stos and jbe jns scas dec dec data16 fwait adc mov mov dec mov push xchg dec lock inc (bad) sbb pusha lods (bad) fild and mov sub jns cmp or mov or jp std cli loop push push add aad (bad) sbb jp (bad) cltd test frstor jmp popf in icebp scas shlb insb int3 push xor shl jp das xor jb aas inc sub imull loopne outsb jb pop fwait outsb mov call clc jecxz add xor (bad) cmpsb jmp sbb sub aaa dec cmp pop (bad) mov inc hlt xor movsl jmp fsubl bound jge xlat adc jne sub sbb cwtl sarl lods repz and enter push and mov mov mov (bad) icebp jmp inc outsb insb sti inc push dec (bad) mov (bad) xor and cmp rorb push mov or pusha fistp int repz push insb (bad) pop std cmp lods ds xchg inc inc lcall jae add js mov imul mov cmpl pop and inc inc adc movsb popf jecxz dec pop fisubl fisttpll inc stos inc xchg rcr jl jecxz aad (bad) movsl leave mov inc and jg mov inc lods (bad) jbe bnd (bad) sub cmp outsl push mov mov xchg test (bad) mov imul bound dec std push lcall jno pushf mov testb mov aas ret jo fs inc ja push dec xor nop (bad) cli mov lds and ljmp lea push outsl in add mov dec sub icebp mov ret sbb dec (bad) hlt and xchg dec lret decl rorl jecxz int dec add mov les add pushf cmp cmpsb jnp movsl out xchg (bad) push out fs jnp lcall (bad) cltd jns stos xor lret imul and cmc xchg push push jecxz out cmp and divl ljmp cld nop cmp lcall xor test pop jno sbb fdivrl mov sbb shld xchg push ret sti (bad) in mov jl adcb in fs xchg sbb (bad) add xchg mov mov popf scas ret add imul xor lds mov push test imul rcll xchg repz and add pop xchg out push aas leave pop xchg sub shlb int3 out add pop aas aad test pop pop sbb call mov out adc push imul addr16 jl cld stos (bad) push jae jae mov nop (bad) push push mov cmp add pop cmp sub xor pop sbb les inc cmpsb push divb mov mov testl aad sbb mov push push mov xor xchg out sub js mov pop jle arpl xchg adc push rol loop mov adc and jle out fimull or jmp sub cmp lock div push (bad) fnstsw test xchg clc push imul popf xor test stc adc daa loop pop ficompl push cld repz pop dec and push std aaa mov dec xchg (bad) jmp pop pushf ret sub cmpl gs and fcmovbe xchg mov stos push lds mov mov fadds mov data16 lahf (bad) loop cld inc sbb hlt nop in shr testl mov loope rclb xor call mov cmp dec mov inc repz (bad) iret adcl jno daa adc daa jno mov test inc jno outsb shrl jge mov jns adc jb clc and push bound jo inc pushf cs insb fadd js inc ds adc pop (bad) jbe and inc int3 (bad) (bad) das out inc data16 mov mov cmp or in imul and add dec fwait loopne (bad) pop sbbb fistpll pushf mov sbb mov lods xchg jno jo je mov insl cmp cmp jp out cmp push dec lret insb cmp imul (bad) sbb fcompl icebp (bad) pop adc jmp or ja cmpsl add add shrb int fnstsw inc test jecxz pop data16 test pushf pop ds xchg imulb or fidivr mov mov les fnsave fbld out lret sbb pop adc int mov sar mov ja xlat sub or (bad) xor xor cld addr16 xchg jp in xchg ja or loop pop jp dec sub mov imul cmp and mov jne xor xchg sbbl js data16 inc clc inc mov add out lcall and jbe pop cmp and mov ja mov fldenv xchg xor mov inc bnd dec je pushf std subb pop mov fmuls frstor xchg fcom xchg ret xchg (bad) jmp push and movsb jns xchg jle jg or pop xor js jae stc mov sti push fdiv rcrb jb jnp dec pusha sub loope leave cld add and out mov cmp pop lock pop cltd sub or lods rcrl sbb leave rclb (bad) cmp push scas jg mov inc cltd mov cli (bad) add iret fcmovb pop pop jne imul stos jnp or cmp xor sub xor adc fwait int3 or mov jbe and cmpsl bound hlt movsl push fchs jmp mov aad (bad) or dec je mov sbb (bad) insl (bad) aad (bad) pop cs pop and inc (bad) jecxz add add das mov mov add out (bad) mov sub (bad) in cmp test jl xor arpl mov xchg push sub inc mov and and stc mov lcall mov call ret clc cld jmp out subb lcall dec adc (bad) jge jmp mov or std dec mov dec dec pop lds mov mov sub mov lcall push out cwtl std mov mov mov out sbbl dec jecxz daa adc push dec out addr16 outsl out in jp xchg push sbb fimull fwait mov xchg add add jle add ja outsl (bad) mov fidivrl mov xchg xor or scas test cli lret stc mov out mov xor imul nop inc sbb mov add in sbb roll lds insb push leave push mov and imul xchg lcall and or jns mov or xlat or popa cmp mov jnp inc fcmovnu movsb sbb aaa xchg push clc pop push mov fdivr ljmp dec inc push popf dec in sub mov sti dec out push mov adcl xchg (bad) (bad) pop fidivrl outsb loopne push mov mov dec pop negl cmpsl pop add xorl (bad) xchg cmpsb pop xor inc or mov ret xor mov inc daa dec rcr add add jnp jbe stc aam sub mov add inc in cmp (bad) xor (bad) and cmc dec cmp sbb mov cs imul mov stos adc push xchg sub jp repnz fcomp addl push in sbb inc mov push sub pop inc mov (bad) aas cli fildll mov fs cmp or rorb insl mov xor inc xor mov test ror lcall sbb int3 or in dec and and jmp (bad) xor es aas popf lcall mov mov pop pop decb out push mov pop call test gs push jle scas xchg jle add (bad) sub pop cmp push loope das jbe adc mov mov cmpl mov data16 fiaddl pop adc pop test dec cld out roll ds mov sbb or aaa pop sbbb cmpl mov es and mov ret inc adc cmp cmp fwait and pop sahf (bad) (bad) sbb int3 jge push nop jp out mov andl es aaa faddl addr16 pop cmp dec call hlt scas and jecxz lret pop jg cmp icebp xor cmpsl dec test xor mov (bad) mov and cmp cmp dec stc pop jbe pop lods lds dec imul jge incl and mov (bad) (bad) bnd aam push popf inc daa pop pop or adc inc push cltd dec test push fs jo clc dec mov or push sub fidivr add dec pusha ja mov out fsubs cmp shrb or fsubrl and mov cli cmpsb test push enter mov out push ret mov adc imul (bad) adc xlat cmc xor pop (bad) jb in pop push xchg arpl mov lods (bad) ss mov or mov pop xor int3 and repz loopne add dec sbb jne push ss cwtl inc jecxz,pt ret mov adc aad out sti push movsl js addr16 or (bad) divb push cmp dec xchg pop sub pop xor jle pop mov scas cmp cmp inc push add addr16 es les push jbe jg jne pop test scas fwait dec adc jle xor adc and gs (bad) (bad) mov pop xchg scas imul push shrb pop push cmpsb mov je sbb daa xchg (bad) in pop adc and pop cmpsl sti xor inc or jp sarl or iret lcall rolb roll xrelease mov push fsts in scas add push or sbb push and outsl mov xchg or inc cmp fnstcw jecxz andb pop inc mov data16 aas mull mov loop int3 and test pop xor sbb in lret xor insb dec mov jl mov sbb cltd insb mov popf mov sahf rcrl xchg fwait clc or in (bad) (bad) in xchg pusha hlt sarb xchg into mov repnz std cmpsb jle (bad) mov rorl xchg sub rclb sarl pop sub push pop push int3 jns lock mov cwtl daa mov adc (bad) or ljmp out inc mov dec adc daa scas inc movsb loopne into data16 xor lods xchg fnstcw popa inc pop (bad) out mov dec (bad) xchg cmp (bad) (bad) lock aaa stos xchg rcrb es inc sarl add cmp loope lds cmp aam int and shll sbb popa stos fidivr scas inc inc jle dec inc mov orl aam outsl into inc scas fisttpl mov out test ja testb fistl fadd mov repz lds cmpsb pusha test xor pop add dec call (bad) stos xor hlt fcoml xor lret or daa dec push adc mov faddl xchg out in jne add movsl add loope sub lds scas popa sub movsl xor mov mov sti imul push jne push movsl mov inc es imull dec add and dec and mov js push jo jns fbstp fcompl les xor fimull xchg stc hlt std mov popa ds test mov mov loope sarl fistp jmp sub jge loop adc mov gs fidivrl xor iret sahf or orl mov push jb js mov popa cmp aas jp repz into aaa fcompl test adc imul mov inc inc rcr sbb bound test or mov add iret mov iret mov sbb fnstenv lods sub sbb lock cmpsl (bad) fild xchg jg and aaa movsl or js pop and sub xor clc dec out (bad) push int sbb insl xlat inc movsl jae xchg pop out inc (bad) mov mov ds cmp mov push cli sbb fadds mov fs pop sub or mov in cmp xor mov cmp or add leave imul cmp popf add sbb push xchg jge mov sbb in push jle aaa xchg pop frstor or mov pop pop mov add sub outsb test push fcoms (bad) sub or inc je adc mov lahf and lahf cmp xchg jg lahf mov (bad) repz das push and xlat adc jle xor and push add sub test je jg add aas lcall inc jmp lahf das loop push jmp xchg idiv mov mov js daa loope addr16 movsb adc test popa ret sub hlt pop and mov sti (bad) aad sahf loope imul fwait inc add lret add roll xchg bound mov xlat lock int3 jmp std mov add add int3 icebp jmp add mov nop or mov mov in pop cli divl cs push fild mov sbb mov clc sub inc pop sar push or xchg xorb jmp add pop rdtsc mov aaa test loop xlat enter push adc sub or cmp loop imul jg mov mov and ret xchg add lea stc adc stos pop add fldl hlt ja fldcw popa jbe inc push and jle aaa adc aad in add mov imul dec in leave jecxz adc lret icebp (bad) fwait or cmp inc adc mov xchg mov (bad) (bad) nop inc daa idivl jbe ds xor pushf insl xchg aad stos aaa push lret daa fistpll pop sbb dec jle aas (bad) push lods mov inc cltd add mov jp cmpsb or shrb out loop pushf aas popf inc int3 add sahf outsb aam (bad) stos insl test into push pop push xchg inc lret adc cmpsl dec mov std push insl (bad) jb sub jno and xchg jmp mov adc jo jns outsl cmc push inc cmc dec push es adc imul xchg (bad) fs out addr16 mov movb pop adc ffree roll psubsb sti mov (bad) hlt addr16 arpl sub (bad) dec fimul das (bad) fcompl add inc add mov sbb sub sahf or sbb pop sbb (bad) or mov test mov arpl in cltd cltd pop aam mov sbb or sub and mov sti mov dec cltd movb adc sub pushf add or add mov mov aam inc mov icebp xchg fisttp sbbb pop inc xchg xchg nop addl add sbb in int mov add dec out add (bad) out mov cmpsl out fsubl inc shrd xor (bad) rcr mov jns bound xchg test imulb jecxz mov xchg pop push mov jnp pushl shrb orl mov or ja add xchg mov (bad) (bad) sub mov push jne mov icebp into push call cltd pushf mov lock imul aad movsl gs jo fwait imul ss xchg sarl stc jecxz in ficom xchg push pop mov (bad) insb or outsb aas push adc lea ficoml xchg rcl pop xchg sbb push pusha jb das push mov xor das push adc xchg adc movsl lahf out xchg and jae lret sbb xlat mov out dec push ret mov push mov mov call xlat sub daa push into pop cmp dec (bad) jae stc stc xor (bad) xchg movsl dec mov lods mov or push push mov mov enter aad pushl jbe fild inc xchg roll daa adc mov int3 mov mov cmp inc adc cmpsl movsl out mov xchg into inc or cmp aas mov inc test dec xor loopne xchg and dec imul bound iret mov out imul push (bad) in jo gs mov test jp incl sub mov es je push push ret mov js fincstp test and sbb or loope lcall xchg lcall mov into cltd push lock outsl cmp inc push sti rorb pop (bad) xchg dec inc pop mov lods aam xor test stc or jno sarb rcrl and rclb push pushf bound in daa mov push test test adcl movsb cli add sahf pop sarb mov xlat jmp ljmp (bad) sti lcall add call subl ret pop mov xchg cs xor int dec adc es std jg inc adc add xor jb jp jle pop pop cmp or push jno fabs lret fsubl adc fnop iret aaa mov repz loope mov inc pusha pop jg xchg les inc dec push sub into inc fadds aas pop jbe cmp mov pop adc cmc mov push pop adcb stos loope dec mov xchg mov inc adc (bad) xor pop cmc pop mov and (bad) xor (bad) fnsave div mov jecxz add dec mov leave xor dec push mov in out data16 mov xor xchg jg mov adc push and xor or icebp dec jle and bound dec pusha (bad) sub imul test test and imul mov cmp fldl or out mov cmpsl arpl cmp rcl iret pop mov cli lret jae (bad) dec and pop push cmpsb add and into fwait mov dec ret cmp test xchg mov sti mov adc cmc out push ss mov dec or neg js das scas sbb outsl fistpll daa cmp jae int3 cmp (bad) jle jne test xchg jae fsubrl (bad) mov je dec leave ds dec adc repz cmp test sub pop inc xor aaa or jge xor (bad) js mov xchg (bad) adc push cmp test mov sbb adc cmp popa or mov adc cmp sar jnp fst mov dec outsb mov jecxz pop stos (bad) lea fidivrl ljmp adc xor enter lcall xor int and and sbb or clc adc fs inc fnstsw or into ret xchg fld xor pusha lds sahf pop popf pop sbb test add sbb sahf cltd (bad) (bad) int3 test ja mov in test leave xchg lahf push inc cltd cmp jmp sar xchg push outsl pop push add add insl mov les pop and daa adc xchg cmp inc or mov sbb jbe cmpsb add push pop jns jns cmp lods imul jmp inc stos into inc scas sub mov adc pop rcrb adc fnsave loope inc xor cltd push dec cmp jg lcall out xchg mov fsts in mov es jmp (bad) aam adc xchg jnp fstpt sub pop (bad) ficomp (bad) xor movsl in adc push jmp mov jle mov loop insb xchg cmpsb jbe push jo add mov popa les iret bound sbb pop in dec pop jns and sahf add repnz (bad) rep lods std (bad) jbe sti fnstsw sbb pop sahf adc xor and jl push sahf data16 or fmuls in and loopne dec cmp arpl aas cli cmp push lcall int3 mov fstp jge pop rcll cmp in lods cmp sub inc dec pop or popf add xor fimul fcomps cld arpl bound stos push icebp mov sub and loop push jge mov loop aad test sub adc dec xchg mov pushf (bad) xchg push (bad) mov shll clc data16 jecxz test popf lock test inc loop lea enter mov dec and jl pop iret push loope jne xchg psllw mov fbld dec jb cmp outsl lods mov ja mov or cmp fidivrl ljmp clc push add movsb adc test add scas sbb in mov fsubl dec xchg sub sbb test dec sarl pushf inc imul out or stos int3 mov dec int rorl test jno lea pop mov inc rorl call cmp inc or push out ds add pushf mov loop mov or jle sti jg aas mov or pop jns divb sarl cwtl in jae or xchg sub jle adc aaa inc cs test or dec sbb xchg das ds into mov (bad) pop dec imul test std adc jns push push add and xchg jns xor or jne sub cmc stos xchg stc repz sub scas sub outsb push cmp loopne push lea mov add mov pop mov xchg aam add fdivl fwait and cmpsb movsl jno xor scas in ljmp inc xor outsl mov lcall pusha mov out lods adc ja (bad) push inc mov push clc mov (bad) adc xor in sub int3 add icebp ja jno push sbb popa test negl inc or test iret push dec sbb icebp movsb add insb sbb sub add aam test xchg or cmpsl insl xchg imul pop pop insl jl push ja jo lcall loope mov mul lds mov jno pop inc je mov iret pop ret ja loopne xchg imul aam je ljmp lods dec sarb jle clc mov inc cmp mov inc in sub inc or inc or jb xchg or lret out cltd ss mov xchg mov rcrb jecxz mov nop jb mov push fnstenv sbb test xchg push jecxz mov (bad) in pop test inc in mov insl push aam sbb movl xor xchg cmp stos adc cltd lret add lret or inc jno pop out addr16 inc hlt loope dec (bad) out and xchg push aas rclb andb push xchg bound cmp test jne lods and dec imul pop and jmp (bad) cmpl sbb push jecxz push (bad) icebp scas adc jecxz mov xchg imul add into push lock cs add sub mov adc fcompl int dec insl cmp aad mov inc test in (bad) inc pop and bound pop dec pop gs dec inc sub push xchg add js push xchg jb fwait sbb out xor sbb dec es pop imull lahf sub ret leave mov dec call mov sbb fisubr pop mov sti xor cwtl fmull sbb loop dec dec pop mov popf and sbb jne push or scas imul mov jge insl jg adc pop or sub bound cmp hlt jns mov sbb inc (bad) and (bad) cld push cmp repz fwait push hlt loopne mov rolb lret sarl test pop xchg fist repz lods test fdivs fwait mov push mov mov lret jae scas inc lret ljmp inc popf pop jle in scas sahf (bad) into sbb dec lea dec out cmp sbb daa or popa rorl pop add sbb loop ss push xor dec xchg cmp jns inc xchg push nop xchg mov push push cwtl lods loopne cmp sbb arpl push dec ror cs ret and out jb das aad mov push and je popf rcll shll mov dec push or sahf mov into xor aaa repz jne push and lods or sti mov cwtl jnp fs rclb out mov fldcw xor mov add scas jno xor movsb sbb in push das push adc (bad) int3 outsl or cli adc sahf (bad) pop mov psubq mov push and out (bad) pop cmp scas (bad) xor adc mov dec push data16 cmp adc jb pop pop sub mov (bad) cltd jmp out dec sbb popf jns mov or xchg push xchg sti inc stc mov subl dec mov fcom bound loope xchg lahf xchg idivb cs jp lcall dec cmp mov cmp add fildl fiadd lods int int3 adc jecxz lock pop shll std (bad) insl cmp jecxz xchg sbb push jp sbbb mov mov (bad) std mov mov inc adc lock (bad) xor mov test outsl cwtl mov dec sub popa sub push push jge and outsb or sarb and lods insb pop leave dec jmp jnp adc into sub test adc or imul aam or ja sbb mov dec jb pop push (bad) mov add jmp mov mov adc outsl mov addr16 and sbb xchg inc cmp mov popf into mov sahf lea push test mov jp sub jae sbb mov ljmp push xchg gs (bad) fwait xor sbb lods scas mov mov cmp int push push xor jne jae mov mov cmp aad adc jmp loopne rcrl pusha mull xor outsb and out pushw pop stc test cli sub ds hlt mov push or push in cmc inc aas arpl mov lods mov push cmp lds push mov (bad) aaa mov sbb popa out cmp xchg mov xor pop pop (bad) fmuls push aas and cmp pop enter leave sbb inc sbb pop lahf leave jnp movsl dec xchg (bad) mov jge in scas lahf pusha hlt dec push sahf (bad) lret in add and and in nop fist pop xchg fdivrl fimull sbb mov (bad) imul lret inc adc and or push pushf mov xchg negb jle jp cld add inc dec or pop fwait xchg into scas insl adc insl shr xchg add in cmp or inc pop js cmpsl in iret jae xchg xor jo jge mov push add (bad) sub in bound lock test inc sbb pop sarl (bad) and dec mov or imul xchg adc stos (bad) jo pusha add jbe xchg out (bad) mov arpl loope call sbb sub xchg arpl and lods jb sbb xchg in pop dec cs hlt cmp iret mov aam sub xchg xlat aas sbb pop mov pop mov jp stos mov mov imul xor mov fdiv (bad) aad loop dec lds (bad) mov add jno sti and sub jnp or add xchg xor leave jb sarl sub sbb inc mov pop cmpsb lock dec rcrl (bad) sbb xchg outsb xchg fisubl or iret insb mov and inc enter inc (bad) mov xchg fstps frstor nop sbb mov mov sbb ret push add push aad inc imul adc or mov nop jg (bad) insl in pushf sub sub add or (bad) cld int3 in jns xor cmpsb sub cmpsl ja loop test sub loop aaa push push dec lret sbb jns leave xchg adc push xchg mov xlat les pop pushf xor mov adc stos icebp pushf cmp loop mov inc jmp (bad) mov xchg cmp and adc into pusha mov pop pop subb (bad) insb in dec out test sbbl imul jp inc pop pop jg push cmp cmp out adc mov test mov mov add mov aaa daa fsubl movsb stc mov shlb jl nop jno or movsb pushf jp fs data16 jge dec dec sar ljmp dec imul fstl inc test dec mov cmp loopne es subb fs or and outsb adc lcall dec adc sbb cmp xor dec inc sbb into jmp adc mov push inc iret inc jge jno lea xchg xor test sub adc cmp jb imul sbb push sub xchg inc sbb (bad) lock es pusha sbb pushf and xor mov insb orl icebp mov mov nop jg sbbb hlt movsl (bad) and adc inc cmp mov and lahf mov xor xor push in xor push imul std sub inc aad mov and ja sti jle notb push push fcompl xchg std in mov ss xchg cltd xchg xor (bad) mov rorb sbb in cltd xor mov mov int cmp lds popa pop ret xor data16 pop lods aaa mov lcall in or adc mov push in dec mov xchg orb ja lods adc push mov sub mov mov xlat dec mov std outsb push (bad) fwait ret or mov ss out xchg int3 or or out adc push pop lret cli mov int3 cmp stos sub push cmpsb jmp dec adc int3 ret cmpsb movsb fnsave bound mov cmpsl xchg in xor mov fnstenv xchg cmp addr16 into outsb lea flds call mov mov and fstpl mov pop dec movb xor les sbb fbld adc add iret sub subb push pop mov jle mov and xlat lea shrb mov cmp cmp xchg and addr16 mov ss test cltd inc sahf dec mov dec cmp cmpsl int mov ja pushf addr16 sbb cli mov mov or arpl pop in dec pop movsl mov mov std pop pcmpeqb pop xorb aaa and dec xchg adc ja lods or xor sbb lods jl test jnp pop push sarl (bad) hlt paddusb fwait arpl cltd les lds sbb repnz sub mov mov jnp sbb pop push pop and push insl arpl mov cmp adc fisub pop add add ret popl int mov jl sub je popa addr16 push or daa xor or inc lods rclb in loope xchg mov (bad) lret sbb lock and jne fnstcw mov and test test and lds fistp in mov xor icebp sarb adc lcall int3 (bad) (bad) add les in xor nop fist sbb push out imul jmp push push movsl icebp dec push jno jle mov jae pop pop dec mov or addl fst out outsl push dec inc xlat push subl sbb mov cmp (bad) insl push push sbb dec or scas (bad) les addb pop mov mov pop sbb xchg sti add ret rcrb mov aaa mov popa das cmp mov mov add pop xchg pop sub mov mov sbb ja fcmovbe repnz jnp adc adc push outsl lahf lret adc pop call add jl movsl push into enter aas aad (bad) leave pusha nop sbb xor leave hlt mov mov out add fcom iret stc cmp xchg insb js mov and push xor test pop out aad lcall ja data16 jbe int3 sbb sub xchg out push dec jo sub (bad) jb dec xchg mov ja leave sbb insb test test outsb fwait xchg rorl addr16 sub clc or scas icebp test out loop dec mov arpl repz je xor dec xor fildl xchg push push insb stos clc push pop call hlt shl rorb mov sti into sahf (bad) test movsl cmc mov mull inc xchg (bad) in in and movsb sub out test in xchg xchg test mov pop outsb sub je xchg mov nop sarb out (bad) clc popa daa jp and inc movb (bad) adc jb sbb (bad) in ds pop pop jecxz test pop or repz lds mov inc mov inc dec jno pop xor popa adc and hlt gs (bad) jmp inc and dec add scas movsl lods sbb int movsl mov lds xor mov cmp outsl fidiv jmp mov imull xlat or xchg and add sbbb in ret inc adc mov psubw ret fsts jp pop push add jecxz stos mov das insl cld imul popa pop cmp mov cltd jecxz cli mov push call test (bad) jb pop mov inc xor loope data16 dec pop jo (bad) pop lret adc push mov stos pop loope iret jo scas sbb rorl pop jne inc in or insb add push push fisubr mov add in mov insl aad clc mov stos test ret outsb and outsl push push dec mov inc jbe inc xchg dec pop cmp dec lds mov (bad) lahf mov sub jmp pop jp jnp jp dec push adcl ret sbb xchg xor dec xlat jg cmp xchg lds cmp aam std sbb das cli ss add insb jno test pusha mov mov mov xor mov mov dec push scas ljmp cs int adc inc or mov lds mov cs xchg mov imul add mov insb loopne cmp sub jae jl into dec inc dec mov imul pop push cltd and adc loopew scas fimul cli aam push sbb or jl mov cs xchg cmp or or shrb and arpl pop jp lock mov add xchg (bad) lret in iret xchg mov int mov jg sbb cld or in outsl xchg test cli pop sbb andb fcmovnu scas xor (bad) pop cwtl xlat cld dec sbb mov push fwait je mov sub loope roll int3 adc lret imul jmp sub scas inc mov stc sbb mov pop stc xchg cmc xor push add (bad) daa iret lds hlt mov insb cld or xchg (bad) jbe cltd xchg dec pushf ljmp sub (bad) (bad) mov out fsubr lds xchg inc and stos fnstsw nop fdivs dec push outsl aas daa push test mov cmpsb (bad) jle dec dec dec xor mov mov push inc lahf scas dec xchg sti cmp cli xor add sbb shlb inc sti inc sub add mov das adc push mov out es sbbb arpl sar inc pop outsb into inc or sub scas (bad) push push add repnz mov mov mov push mov add scas cmp repz adc fdivrs andl out or mov js nop imul push adcw mov xor lds mov cwtl add xor and adc loop sub in sub lahf push loope mov push (bad) jle imull push push and xor fimul inc push inc into adc loope fist cli fwait movsb in sarb mov mov fsub (bad) add xor jnp add adc xor aas dec pop popa dec or stos lret (bad) xlat mov andb mov imul xor sub in push and inc cwtl push dec adc pop dec cld mov lods or jge push adcb in das leave out out add daa pop add daa xor addr16 into and cmpsb push xor pop movsl mov std xchg out std sub mov loopne push jecxz lods roll cltd inc cmp pusha sbb mov (bad) aas cmp int jns mov (bad) js pop jo sub enter jno push mov test mov pop into lods das jle sub je mov repz lds mov xor cli sbb in mov loop and pop mov xor cmovb xor stos xor (bad) dec dec push repz (bad) add push xchg push cs cmpsb xchg pop loopne cmp pushw and jns shlb pop cmp push adc test mov mov mov rcrl lahf mov jne imul add fstpl dec or (bad) jb xchg movsb orb jg sahf add jbe add and dec call (bad) cli mov repnz push push or and lcall sbb mov fdivrs in cltd xor ret ja xchg es adc sti ljmpw rcll loopne xor stos fneni(8087 cmp paddsw je cli int3 movsb jns imul das xchg xor sarl fdivl ss lret xchg jmp dec xchg std std es daa pop fisubr mov fucomi addr16 dec fsubrs mov arpl es dec pop enter movsl mov or es lcall dec jae psubw ljmp addr16 outsl iret (bad) mov sbb mov mov xchg aam out mov leave jmp mov adc (bad) icebp call jmp pmaxsw push fcomps inc aad jmp adc pop adc jg xchg mov mov loope adc cvtdq2ps scas or out mov sub inc mov mov push mov xchg lcall sar mov ja push lods push sahf push push push dec or or (bad) js xor mov ret clc pop xor fs repnz mov cmp sbb pushf jp mov cmc xor dec test call cld enter push pop push cs mov push inc xchg test daa lods shl sbb enter arpl int movsb mov cld test out in movsl xchg (bad) cmp xchg (bad) ja xchg hlt pop repz mov sbb (bad) iret dec insl mov fisttpl lret mov lods jg dec jecxz xchg jae lcall xchg icebp int sahf (bad) jnp inc out xchg out cwtl or mov and sbb jg lods insl cs popa fistpll les or mov cmp fcoms and js stos inc int lods jle dec gs (bad) (bad) dec imul dec fwait sbb (bad) push pop pop add sbb pop fsubr or inc popf adc mov je,pn pop push test xor dec mov hlt adc lret js outsl sbb inc scas jns nop cmp sbb rcll sbb mov dec or (bad) loop mov push lock jmp xor imul mov lods (bad) mov js add popf jge lcall call (bad) (bad) mov lods adc push outsl jns lds stos xchg dec adc repz stos inc xchg lcall ss ret icebp outsb xchg insl pop lds loop insl xchg and xchg (bad) sbb js lcall inc pop xor rolb mov jmp fisttpl arpl je push cmp xor inc lods gs (bad) cmc push lods xchg xor pop inc push pop sbb movsl push lds push mov repz lea cmp iret xor jb push int insl arpl pop sbb ficompl test sub pop xchg add sub in xchg cli xchg (bad) out lret je loope pop nop pusha jno push adc xrelease test mov js sahf call jno cmp (bad) (bad) pop ficompl mov fiaddl stc jp arpl test lahf imul out add inc pushf idivb lahf pop push nop int3 ss ffreep int cld inc cli rorb cmp jo adc cwtl arpl in or fldcw lret cmc add sbb sub ret mov push mov dec test lcall jle and or mov mov push (bad) out (bad) int leave inc and test lods rolb sub (bad) (bad) or mov inc incl mov enter add jmp fsubl or mov test stc rcll jecxz push cmp stc out (bad) cmc dec (bad) xchg scas mov jecxz,pn (bad) test pop into xor aam repz sbb add mov or fimul fwait js mov test jno rol lret cld stc mov fimull push stc push leave sbb or lahf repnz or bnd and inc jb lret ret test xor stos aam cwtl stos and cmp in fwait dec outsb (bad) ss pop cli mov iret insb mov mov jb mov and rcll (bad) push add gs pusha and daa repnz mov lcall or loopne push mov fsub pop xor sub fcmovb mov inc ret jmp cltd sub stos mov push lcall jle lret sbb test pop pushf cli fwait ret sbb xchg add scas popf pop cmp add inc inc or jmp sub jmp test frstor (bad) ror aad jb int inc (bad) rcrb pop rol rcrl das (bad) lock cltd xor call push dec jnp mov inc xchg mov leave sub sbbl mov in mov push push in movsl cld adc push arpl ret and cmp jae adc sti sbb or loopne in jg (bad) mov ja std xor mov sbb iret inc pop popf inc gs sbb pop mul mov cmpsb insb push icebp xchg lret mov das pop into push pop scas jecxz ljmp xchg addr16 xchg xor aas dec orl adc inc mov xchg sbb jnp or push or and in sbb and jecxz lea clc pop xchg sbb scas mov (bad) mov mull test data16 test xor enter in mov or adc aaa mov test shr sbb iret dec jb dec jo xlat mov cltd leave jg pop ljmp (bad) jns lock lahf add js fimull and inc jp xor cmpsb xchg jo into int3 jb xchg cmpsl shll dec sbb jb (bad) cld lock fwait jle (bad) ljmp push lods jmp scas pop adc into (bad) repnz iret jge xor aaa adc gs pushl pop add add xchg (bad) jmp fcomps jg jns lea lret and push inc inc leave push movzwl xorl xchg push mov aas (bad) and xchg ds adc adc arpl pop scas add jmp popf pop (bad) jae cld (bad) out scas sub dec aam xchg push cmpsb fst push push xor hlt push pop xor pop xor push scas cmp mov pushf xor mov pop inc adc ret push sti lahf add faddp dec push mov (bad) sbbb cs add dec das loop or stos cltd and bound or mov push shll pop pop int inc imul fcos cmp aaa shrl (bad) icebp push push ds mov out mov cmp lret sbb (bad) mov push inc pop test jmp repz mov repz inc lods (bad) cmpsl add cmp mov cltd call aaa scas cmp xchg sbb int mov lcall cmpsb sbb mov jnp mov inc mov cmp mov dec dec fs pop inc jo lods mov push add ret lods cmpsl jo dec pop (bad) lret add decl sbb data16 fwait dec out or push xor add das dec add cmp xchg sub test xor pop mov cmpsb daa inc lods dec jnp lods sub mov cltd insb shrl das adc jg (bad) (bad) mov add pop enter rolb jge push mov inc js adc pop mov dec mov pop in mov fnstenv inc cmp clc pop scas mov add mov negb pmuludq add push stos mov or inc mov sbb mul (bad) fbstp pop or cltd pop push xor adc imul adc push out sub adc push fs add ror sub out push jno (bad) adc and adc jmp scas sbbl ja pop xor sbb test es mov xor sbb outsl jp sub adc mov push push pop pop lds lods pop ret daa push mov xor int3 lea xchg xchg mov rclb mov movb dec fidivrl fmull fxch dec mov imul rclb aam dec (bad) scas inc push dec sbb cmc (bad) hlt and push push data16 mov sbb scas push fnsave xchg movsl mov (bad) aaa cld jne adc jns es xor mov xchg stc lea xchg pcmpgtd enter mov ljmp xchg and jl pop stc and push cmc in push mov fsts lcall xchg bound into xor xor jns stos adcb jnp (bad) sbb movaps orl dec cs jnp mov xchg div xor or movsl xchg mov cmpsb push scas lret into dec je pusha push jmp mov sarb xlat push push push popa inc cmp mov fisubrl inc sbb out iret dec mov mov jl adc aam sub loope mov inc imulb daa repnz pop jmp cmp pop jae mov andb mov or push into sbb xchg stos mov jns xchg sarb cmc pushl adcl mov ja sbb test mov mov das mov stos aam (bad) jle (bad) and add mov pop sbb inc jne jmp addl sti jge push (bad) xchg negl jle lret cld arpl or in push sti lods mov movsb dec adc test je pushf sub test and and xor pop lods loopne fnop ltr insb (bad) pusha pop orl inc or lds jl outsl outsl xchg in add add mov cmpsl dec dec aam inc sbbl int3 insl lret xchg push jno adc imul mov lahf mov ds iret out out ret pop imul adc jnp (bad) (bad) adc and sub in scas out stos movsb daa dec dec pop nop in add inc xchg add dec mov (bad) pop je idiv fdivs push aas mov push icebp decl or ds push popa ret xorb or pop (bad) aad (bad) sarl dec insl sti sbb add jl repz pusha lahf xchg leave outsb adcl insb xor or hlt (bad) push loopne popf xchg push sti xchg dec insb data16 xor adc inc fcmovnbe ss xchg cmp inc push and pop xchg jp ror xor (bad) adc pushf test stos (bad) stos jbe xchg sub (bad) repz push mov jmp retw cmp stos pop ret or mov jle arpl inc (bad) mov lcall or jno jo aas sub adc mov lock (bad) push adc inc cs sahf rcrb xor bound into sbb adc shrb aaa icebp cmc inc pop xlat nop sbb jno arpl test rclb xchg dec mov ret inc mov push jle mov xchg cmpsl mov xchg in fisubl add rol adc pop loope jge leave daa cmpsl mov mov mov lods mov mov in adc je mov aad nop xor push add cli outsl jmp insb push stc and pop add inc cmp rcrb cld (bad) or sub add mov in movsb lea aas mov sbb test movb clc aam js pop popf movsl xchg pop addb clc mov test dec xlat inc aas cvtpi2ps xchg jmp or add xchg cmp jp cmp jae dec xchg mov cmpsl call sti loope adc sub rcl mov insb sbb sub int dec pop in mov xchg hlt in mov and insb lahf ss xchg mov cmpsl sub lea test ficomp cli inc pop pushf imul (bad) (bad) lcall repnz adc jmp pop mov sub adc out mov jo pop fdivp mov in adc repz push lods lods dec nop sub xor ljmp add pop daa inc and dec jbe jp mov (bad) jno fiadd aam cmpsb dec xor lods out and lret mov lods stc pop dec fwait (bad) popf js clc mov mov movl test js jne and pushf pusha iret jb inc fsubs scas scas scas mov pop aad stos ret add cmp push mov jge pop and inc loope lods fldenv xor fld add jge loop sbb mov repnz scas jg,pn lahf movsl int jnp enter pusha dec fsubrl jp cmp sub je sub cmpsl out inc push pop push sbb out es popa inc lock (bad) lods jae xchg fwait xor pop cmp icebp call pushf add mov xor pushf in jno ja jge add (bad) enter cld push ss lahf sub inc shll mov mov adc mov scas adc jae daa popa inc jl inc or ret mov dec scas push ret mov in add insb jae xlat xchg js sti inc stos or mov add xchg xchg add rcrb test cltd fadd sub or pop xchg mov fistl push sbb mov popa fcoms mov xchg cmp leave dec test sbb (bad) push add add dec adc cs xchg stos mov mov ss inc and outsl test rcll divb scas pop xor lret cmpsl jge adc hlt std popl jne fsubrs pop out jbe fidivl cmp pop inc loopne or hlt xchg repnz jne mov xchg or arpl (bad) lock pusha movsl out add jp mov movsl leave in sti cld inc mov mov jge jnp pop mov jno push divb jl inc adc mov dec add adc fstl repz loop cmp mov js sub jg lcall dec leave test xor mulb stos push aas mov or mov jne inc jbe mov jae and fild pop lret mov sub cs cli sub and call pushf je rcrl (bad) jmp pusha pop mov ljmp repnz stos test loope imul sbb ret mov dec iret ss ret rcrb cs int mov cmpsb rorl xchg imul shl mov push mov xor mov xchg mov fisttpl rolb (bad) cmp enter jbe or scas inc arpl pusha gs shlb (bad) stos adc jne mov cltd leave mov dec adc add scas iret fimull dec ret xor popa call in jg icebp daa xor cli xchg mov imul sub idiv in frstor out inc test mov mov xchg das (bad) mov jl iret scas popa jno xor push int3 push push push fistpl sub bound test mov nop adc xchg jbe divw and adc jmp xor bound dec pop xor cmp loop jb lods icebp or jmp outsl mov and and lock es test jo pop lret in mov dec push lods sbb cmp inc pop add sbb cmp ds xor lret sbb cltd cmc (bad) cltd (bad) push dec je clc and jge ljmp mov pop push icebp dec pop jecxz push xlat stos xor movl lods and notb dec sbbb jo frstor jns inc jne dec mov or inc fisttpll daa daa inc sbb fisubr repz sub mov adc push xor loopne iret insb cmp sbb jo stos (bad) cld sbb test icebp and and lahf mov jg jno sbb xor (bad) mov repz daa pop test xchg rcl (bad) or xchg fimul pop or xchg (bad) cmp inc push shll (bad) cmp xor pop sbb rclb icebp aam push or cwtl cmp mov das popa or push dec enter nop mov inc mov dec or test int cli push sub xchg xor andl shll push dec addr16 push cltd and or dec fldenv mov jb mov out inc hlt mov or aad push inc xchg out into cmc clc sbb xor test mov mov icebp add push (bad) xor (bad) lds xchg push adc or lods push sbb lods bound fild test adc dec pop jne sbb gs fwait sarb mov cwtl or test out jmp scas popa lcall insl sub leave inc jg jp xor daa daa xchg in adc add shl loope bound pop loop repz shl mov inc mov cmp fs ds call push dec sbb mov jg (bad) sahf (bad) sub and clc adc xlat ret movsb hlt nop sarl sbb iret pushf out mov push jg xor leave jne nop pop hlt dec xorb fldl jnp ljmp inc jns jg sub adc cmp cwtl popa dec pop dec pop cmp lahf pop push nop ss lods orb gs insl push or (bad) dec stos xchg lods lret out adc mov cmc xor inc test xchg xlat lock pop cld in out addb jns adc pop inc mov or inc (bad) add (bad) mov dec jne xor sti xchg aad mov cld out stos cmp push adc add sarb fs pop push cwtl out xor (bad) sbbl inc shrb bound jne (bad) pop scas xor data16 mov test pop inc jl (bad) push decb mov cmpsl lea pop sub icebp sti (bad) xor xlat (bad) mov out pop cwtl rcll sarb sub xor pop mov dec dec jge mov ret sub fisttpl fild fnsave jg es popf inc out xchg cmp lcall int jg movsl cmpsl xchg hlt push cmp lods and into xchg add xor cmp mov insl cmc add sbb popf sub pop jg or mov sbb repnz cmp cmpsb and or leave dec arpl jmp push mov mov push jae loop lret cmp sti imul mov and fs cltd xchg cwtl pop gs iret jbe pop fidiv mov or in stos mov call add ficompl add es sub faddl sbb ss out push sbb cli js mov mov loop icebp fucomi int3 inc inc ja jecxz pop dec mov sbb call or or loope add test nop hlt mov (bad) sbb xor insl mov int mov mov in lcall idivl add scas dec pop insl add jo xchg pop stc das icebp in push out enter jne mov cwtl jge pusha sahf mov bound cwtl inc push xor push mov shrb jae das orl cwtl cmc fist add pusha xchg icebp push mov push adc and fidivr ja and dec lods in sub cli sbb sti sahf test sti jnp mov mov fwait out mov mov push jb mov dec loop jp fildll fldl and pop outsl cs iret popf test movsb lret xor push push xchg (bad) loope push cmc in aas sti scas int jecxz aad bound sarl out and fnsave push (bad) fimull or imul jno pop mov xor jmp sub mov mov or cmp cmpsb pop ret dec movsl pop sti fidivr lods inc outsb stos xor jl or adc (bad) pop test movsb sarb out add jno imul push std fs outsb in pusha aam sahf ja outsl hlt test fimull adc dec fsubl pop lret in cli sub imull repnz data16 pop adc sub decb inc leave inc ja dec fcomp mov cmp cmp mov je dec push mov add loop sbb lods repnz xchg cmp pop fdivl out jmp sub and divb mov scas xor add mov in imulb xchg gs mov cmp mov xchg mov xchg adc jle and push arpl je enter jo ss mov mov cmpsl cmp mov test rep jl clc pop (bad) out loop lret mov and cmpsl add mov std gs loope or or mov (bad) sbb inc (bad) or sbb loop popl fldenv add aas xor std shrb pop xor lea sub adc dec dec mov xor xor pop dec cs in adc cmp pop jns cmp ret sub jae and sbb adc into dec mov lock mov push dec iret not movsb ret xchg cmp jno push mov push fildll xor movsb fiadd in and cmp push mov idivb inc stc shlb leave outsl icebp hlt xchg in in push je cmp xor or jecxz gs clc (bad) data16 int3 sub mov push fadd aam daa dec (bad) out aaa pop or dec cmpl arpl leave cmp insl or xchg (bad) fsubl nop mov rcrl add popf imul mov outsb mov cmp js dec inc sub movsl bound cmpsl push mov add lret mov add add stos mov fistl xchg cmp push repz stos add sbb int inc push adc xchg jecxz sub int test xor call addr16 and in lods and movsl mov pushf jne cmp mov adc pop xchg jmp shrl iret mov jmp sub (bad) mov aad arpl daa and repnz sahf in xchg sahf (bad) std xorl and in add inc cmpsl (bad) adc jns loopne dec sbb outsb dec or add mov jle les sbb and sbb inc shll pop sub loop js jns mov (bad) adc sub jmp xchg mov je lds movsl xor insl jl jo adc jbe and sbb into dec insl call mov ret mov scas (bad) scas mov std popf cmpl push cmp push adc cli sahf mov add mov bound or gs test lahf or cs lcall test cmp adc mov (bad) cmpsl ss add push cmp clc jg mov sub mov xlat add xchg icebp cmpsl jb sahf cmp mov xchg sahf dec xchg push (bad) cmp out adc dec fcompl jl test and fnstsw lock fdivs xchg jns cltd clc (bad) repnz sarb pop xor hlt cmp test (bad) dec pushf adc dec in inc push add test mov inc sbb adc xor jno jge mov jecxz lea mov scas scas or jne mov loope int fwait popf (bad) jo inc in aaa jns call (bad) clc pushf shrb dec mov cmp fsubl jno xorb addb push add lods mov test mov fxch jmp or sub mov lods dec dec dec xor aam out xor mov jns decl or flds adc mov test pop jle fwait lods loop push jmp add jns mov sub add cwtl test sar std hlt js push fwait int3 mov sub dec jno mov mov dec lds dec cwtl ljmp cmpsb aas inc mov mov or fs mov cmp addr16 aas int sub xchg bound add add lods insl xchg pop pop imul lea sahf movsb xchg sbb ret scas dec incb das add or lods enter xor into add push mov ja out loopne xchg divl mov in fist (bad) xchg or mov cld sub fisubrl seta pop rcrl popf xchg mov movsl aas sbb sbb cmpsl sbb push scas mov mov leave jecxz shrb mov std mov pop and and daa daa movsb xchg lret add inc push pop sbb aaa (bad) in int push add jecxz sbb inc mov jg loop data16 cmp xchg insl lret push mov mov dec sbb mov mov mov sbb add mov ljmp lods leave loope jge pop jnp xchg dec jbe adc dec movsb (bad) mov push enter pop and int3 sar je jge loop scas sub jp inc (bad) cwtl mov cmp or inc cmp lds lock fistl subl or lahf js mov out rclb (bad) cli push movsl ja cmp adc repnz mov clc mov outsl std pop jbe pop push pop pop and in push iret mov fnop popf imul rorb jnp xlat lea mov into and sub dec call dec jg (bad) jb cmp aas sti push test addr16 push out lret cwtl dec popf ja (bad) outsl mov push xlat jecxz sahf lock div xchg dec add and les jnp sbb fild cmp hlt adc cmpsl xchg cmp mov int3 lods mov jnp mov pop xlat xchg cmp dec paddsw adc (bad) pop fildl data16 ljmp pop jmp mov and iret adc inc sbb push mov std fiaddl popf jp and cs fucom mov dec fnstenv pop jns xchg fwait adc imul in inc cmp mov stos add adcl sub movsb mov xchg adc adc enter mov cltd rolb push push jo cmp outsb loopne repz push test sbb fsubrl jno and sub cmp in mov xchg stos mov sub repz push xlat ss mov (bad) clc rorl and inc jns or arpl sbb test jmp xchg and insl jns push fst ret jmp sub xchg lahf push mov jecxz pushf inc ror pop (bad) and clc mov jmp je push sarb addl cmp (bad) and mov jmp sbb in cmp dec or lods loop ljmp ss adc sub add sahf push adc inc jl mov subl outsb sti add mov test out into add or xor nop dec jecxz adc adc mov out mov xchg push pushf pop push out adc sbbl (bad) hlt inc fnsave jo xor jne push sbb jo dec adc icebp sub jg jle in push and ljmp or and sbb jb test movsl and or andb jae jmp mov fdivrs xor call mov sbb pop es mov xchg xchg sti stos lods rcrb outsl lahf ret inc les repz dec and mov and xchg xor movsl mov pop push jo in test outsl add iret aam and leave xor repz mov push pop inc dec push in adc mov hlt enter rcr mov adc subb cmp push imul mov mov push jno push std in xchg pushf sbbl fidivl push leave sbb lods notl insl dec pop lahf (bad) push call (bad) in out hlt cmp ljmp push dec sbb xchg scas fcom (bad) and mov mov movsb out mov jne dec add mov xchg sbb mov jns sbbb sub jle subb aad lret test icebp sbb int3 or xchg xchg ret es adc dec sti dec mov cmp aad mov pop cmc cmp mull jo xor add fstps push xchg cwtl lret daa leave shrl lret lcall cwtl lret push lods sti pop add mov int3 movsb xchg dec xor out nop aas (bad) sti (bad) mov (bad) nop out xchg ja ja cmp push adc push aaa and push jb push xlat je loop fmull lretw (bad) adc loope or push xchg xchg pop mov mov mov mov cld pop pushf and inc gs jle xor lret (bad) adc hlt push test ss sub cmpsb jb pop mov cmp and popa fwait ret rorl jns leave xchg out cmc sbb cltd lods mov loopne inc mov sbb jg insb sbb fwait jecxz jl and and mov js mov ljmp mov aam mov loope add shll adc fldcw xor movsl dec xchg push xchg daa decb scas pop xor out dec and ja imul cld in sbb lea shlb xor ret fnsetpm(287 and and cld adc out (bad) aas mov sbbl std das addr16 jle add fiaddl test outsl andl cmpsl lock mov fidivl into jp xor movsb in hlt cmc mov lods push dec (bad) mov (bad) mov ss mov mov insb lods or cmp sub (bad) dec mov xchg lret imul sbb lret aas lods iret fmuls popl mov mov lcall and mov mov cmp xor dec inc or dec loope jae mov pop mov xchg (bad) clc or pop pop cmpsb mov mov inc orb or mov xchg pop es xor dec in les and call xchg movsb cltd adc cmp call cld sti mov dec into push arpl and jno push testb adc sub push fbld les xchg jae aad leave push push mov or add push mov jb std stos mov xchg and pop jg repz push imull pop sti adc adc xor xor in imul testb cmp (bad) stc rcrb push pop sahf lods push (bad) sti mov leave fdivrp sbb pop loope lret lock push and sub clc (bad) ja xchg pop or movsl dec and (bad) pop enter xchg push not dec cli outsb out mov sbb repz or mov push aaa dec add cmp add imul in sbb add aam xchg xor jae insl or add mov fimull scas xor xor and xor in lcall push push sub nop inc sub push pop (bad) cwtl push pop ss mov inc jl sahf test or movsl mov mov out mov dec ja sahf out inc sarl push xchg (bad) dec pushf adc push mov push in shlb sbb xchg and stos js jg pop sub and pop jmp fisubl mov or pop shl lods mov rorb and lret push lock fstpl dec jae dec fdivrs pusha int enter mov cmp fcmovbe pop ret gs in xor (bad) and cwtl adc xchg or (bad) loope xchg and or dec gs mov jns addr16 aaa sbb out cs cmp jne xchg cltd and lcall jns leave into cltd andl fwait push or mov sti cld movsl xor dec loope loop (bad) jae mov imul mov jmp lock sbb out pop push dec add cmp in jmp in jmp cltd add imul or test iret (bad) pusha xor aad and gs (bad) jae pushf stos xor add dec lcall outsb pop outsb in mov fild ds aas fmulp xlat daa ret dec pop cmpsl mov imul cmp int push mov lea xchg comiss or enter (bad) aas add lods or lret gs (bad) mov xor or aam int3 mulb in jmp cmc push mov pop nop hlt insl aad pop aad mov jbe dec and cld sar or lcall add fadds add rorl out lods xor loope gs popa pop push dec inc push pop adc rcll mov xchg add (bad) jnp enter cs dec inc in adc out or jo insl mov mov xchg cmp fildll pop push sub in xchg adc in repz and cmp pop sbb dec sbb mov mov xchg test imul pushf int push inc fisubl adc and icebp cmp xchg jns xchg rcll lret jg inc jp es push and stos cmpsb jmp add lret out aad mov jmp jg dec clc cmp adc (bad) cmp imul data16 jns lds enter cmp add or or sarl das hlt or (bad) jne andb and aad in push jp jge pushf iret pushl jle nop lods das sbb lock gs movsb sbb cmp cld jne mov mov shrl lods jne or add je pop out std shrb pushf pop ret cltd clc fnstcw sub mov inc cmp in cmpl fwait pop pop cld jne inc imul xchg call xorb mov cmc mov mov js dec sbb or arpl pop push or jecxz push pop sbb mov mov inc pusha xor js jae pop ss sarl mov bound adcl cmpsl aas adc aas cmp je clc daa pop and aad mov adc outsl into pop mov mov cs test push leave mov inc int xor add aam in in cmpsl cld mov xor sub dec jecxz push ss in gs inc push mov add cld lds fs lds fs add rdpmc mov cmova stos mov daa fs inc out test orb mov das les scas pop jmp sahf jno inc mov mov mov sub xchg jmp test dec ja cld inc pop repz xchg cmc gs insl mov jg cltd sahf adc xchg mov int3 movsl push add pushf add inc cmp fwait mov scas pop dec aas lahf (bad) jge xor cltd addl roll mov xor ret std sbb rcr pop or xchg xor push dec clc ljmp mov scas fsts mov mov gs inc cmc scas or push arpl js lcall xchg jae pop mov xchg xor loopne and or into dec jnp add sarl jg clc push inc data16 sub mov dec sbb jb pop sub push push outsb dec fnop and shll rorl mov cmp sahf lods pop (bad) xor imul out or cmp pop mov cmp in cld arpl mov in enter adc pop push stos aad (bad) push mov inc popa bound in push in ja mov movsl cs dec cld jecxz aas arpl loope (bad) adc rol test push mov test jne cli push outsl in mov and add sbb sub push add sub cmp imul pop aaa or xchg jno mov std mov dec rcrl loope push cwtl and insb add fcoms or lea call mov loope insl dec push mov stos push mov xor push int jbe add add rclb mov out dec inc lea mov (bad) add jno xor inc xchg ja sub in xor scas xchg inc ljmp imul cmp sub xchg fdivs jno mov or mov mov pop out xor in rolb adc stos mov (bad) adc and addr16 sbb xlat and clc add cmp xor nop mov (bad) jae pop mov lahf push xlat mov cltd lret push (bad) psrlq jne cmp js sub cmc jecxz popa cpuid ror push pop out push cmc sub rcrl pop inc mov push nop sub push call mov cmp das es popf (bad) cs cmp and loope cmp rcrb icebp mov dec adc loopne aam cld (bad) fstl xchg in leave inc std in xchg inc lea add aad ss mov aaa dec mov mov (bad) jae (bad) fcomps aam sti jp dec xchg inc fldenv mov push lahf mov xchg lods xor and jae xor pushf adc dec pop dec pop int3 xchg je xchg xor mov faddp inc cmp repz sti jno xchg clc pop (bad) stos outsl add (bad) adc mov iret aad xchg imul fldln2 or popa fldt aaa in cs rcl icebp sub and xor mov sbb inc inc lahf add sbb in dec fidivl pop push mov push shrb out fnop notb push ljmp mov dec cwtl cmc push (bad) rcl push lahf jg cld xlat aad lock push cmp addr16 repnz adc jp jl ret xchg pop cmp cmp inc inc xchg in ret xor sti add scas es pop daa in dec xchg dec xchg inc fcoml and add xchg push cmpsb add push cli pushf or mov cmpsb jbe daa jp mov xchg adc mov ds cli call aam xchg (bad) (bad) jle mov out scas xlat inc add mov movsl lea jb (bad) push and les dec cmp jb push (bad) test cli rolb mov fldenv inc or adc bound add lret int3 mov fild inc or es mov push adc jnp cmp ss and and mov sbb jg jns xchg out movb popf push mov mov push imul ja xchg mov js mull lods hlt mov jae and mov jo mov rorl push dec je xor out (bad) hlt xor loopne movsb incl xlat pop dec loopne pop sbb test cltd push enter mov lods sti push mov ret pop stos lea add and out pop mov pushf add pop rcrb fisub testb ljmp xor push xchg outsb test mov inc clc das push (bad) push push sub shll les sub movsl sbb mov sub and data16 mov mov pop sub or add sub xchg ja sarb pop shlb adc add js fs pop outsb (bad) lea decl add add lods mov bound dec js imul mov push pop dec aaa adc push sti insb mov mov push lds inc movsb sbb cs pop fisubrl fadd call std pop mov add inc push insl cltd test or dec jp pop jno bound movsb pop aam lods mov add or daa xchg xor (bad) cltd aas xchg outsb into mov shrb fcoms aad and js mov testb std lret gs fist dec bound cwtl mov out pop inc push xchg mov mulps lods add dec mov rcr cmpsb jb xor and cld loopne fisttpl mov push adc out popa fbstp mov int inc mov add movsb js lret (bad) sub xchg pop sub mov xchg xchg pop jg adc sub xchg mov scas rol test mov push jo push cmp mov or loope in scas xchg mov test daa and aaa and add xchg pop push sbb inc and lods jle jno dec sub lods (bad) (bad) or add xorb or cwtl ss cmp pop sub arpl dec mov pop xor inc sub mov push in out dec movsl inc nop and push jg push push lods ror lcall jp repnz (bad) and in fwait stos icebp mov lret push std and add sti je sbb jl in jmp pop or into mov mov adc repnz lret or mov call or test xchg push popf test andb pop xchg imul mov add mov clc nop xor xchg (bad) sbb cmp lea icebp inc cmp jp cmp mov enter icebp lods lds push aaa popa xchg sarl and cld cs loopne daa (bad) jle gs push imul and mov push call xlat popa jmp cmp mov jnp sbb and (bad) aaa mov pop sub dec imul je push daa into mov sbb inc andl jnp aad inc stc push (bad) lock push frstor and lret mov xor cmp mov ss int3 pop pushf pop sub and inc sub sub and sti xor imul shl jns sbb push sbb cmp and repz xor cld sbb imul xor cmpsb or (bad) pop mov (bad) aad ficompl jecxz xchg pop insb pop and test aam adc xchg fild mov jae ret test sbb lret jg inc sbbb mov pop ds out out jo pop jne xchg iret pop xlat push mov pop rcll int3 stos daa push jecxz sti sbb or shrl icebp insl mov (bad) cli scas (bad) out xchg lods cmp mov loop popf pop jnp outsl push adc and xchg sub (bad) cli sbb mov or ss adc adc or sub xchg inc loopne adc pop fsubrs or fsubl scas mov pop mov jo mov jg jmp cwtl xchg push fist mov push push lods lods cmpsb cmpsb inc decl and inc sti mov pop jp bound add push push mov mov and lods sub roll mov in std out and mov jae push xor testb (bad) aaa fwait pop push in jg ss jecxz pop dec mov sub mov jbe (bad) cmp cld in and in xchg sub pop (bad) mov mov xchg dec push mov (bad) ja scas pop out pop dec add int3 dec mov sahf ljmp push xor dec jmp test mov mov shrl jge aas add mov add enter imull adc xchg mov outsb mov in add imul scas js in loope negl shlb dec sbb imul xor dec or mov sahf pop aam mov mov ret stos mov hlt aaa scas cmpsb dec lret imul mov (bad) mov push pop jbe xchg test pop push aad lea sbb lcall push stc add inc cmp mov push dec sub ret test dec add stos lods dec lahf or repz or lock jg pop mov add bound push inc mov inc rcll xor cli xchg and jge jmp es outsl xor mov push sbb sub cmp and xchg ror test decb jo fstpl and and into pop jo push (bad) (bad) ret in (bad) sbb lahf js into ja and xchg push push sub das mov ret fimull loope xchg dec popf mov frstor mov mov in rorb in sbb aaa xor jle mov stos xchg and sbb das decb push cmp mov inc mov movsb jl push cli sub cmp testl lahf nop int outsl int3 arpl or cwtl mov mul in insl jns icebp (bad) xor and cmp cmp cmp xchg out xorb sub and dec and pop in das or ss stc rol mov pop enter jle mov jecxz bound and push mov mov sub cs inc or xchg pop insb jns les (bad) pop out or inc pop or loope test sbb (bad) adc outsb xchg sahf jbe mov push test or jno pop out xchg sub sti movb push push insl std addr16 fiadd inc and and aas negl into hlt push subl movl negl jb lea das leave add inc mov dec jbe mov aas push sbb daa loopne cmpsb hlt popf in or cmp or mov inc stos jle call and mov jmp cmp lahf mov sti out push outsb fiadd cmc sub jns xlat (bad) loopne clc idivl dec cmpsl mov imul repz movsb mov ret stos mov das jbe icebp dec out xchg or arpl jno pushf pusha pop mov test (bad) lret dec xor dec pop mov lret mov rorb dec sbb in jno add xchg xchg outsb jno inc test mov jle push push mov adc fistpll and popf xor mov mov push aad push jmp ret outsl inc mov (bad) pop xorl pushf cli xchg into mov cltd mov inc and sbb je xchg jnp cmp mov cmpsl xchg aam add jae test adc notb dec push inc or jle in outsb notl push scas outsb pushf shrb (bad) popf cmc pop lods xor ds mov in aas add jmp in scas or pop xor lahf fsubl jns cltd adc push sub inc repnz or hlt subb (bad) jmp adc shrb cli aam flds aas jne dec sub push lret add fst in xor in jbe lods xchg je mov mov imulb xlat cmp xchg in (bad) push xchg pop daa scas mov push adc or cmp and test sub and sbb or ljmp cld gs xchg mov mov test mov int3 cmp push outsb cmc out into pop into dec (bad) (bad) inc in inc cld and jnp inc out mov jae push sub jmp jp insl and dec es and enter pop inc sub pop cmc mov aam fs rcrl push mov inc fidiv inc stos (bad) lods scas sbb mov subl xchg rcl mov mov dec hlt jae and scas inc jl outsl cmpsl (bad) inc adc das mov jp inc hlt or sbb shrb lahf lcall std or outsb fs xchg test pop dec mov mov pop dec sub mov ds inc sub in mov cmc mov xchg cltd cmp jno adc dec push cmp clc mov popa push cld or decl add movsb lret jno pop js push push add mov or sub xchg mov xor push ljmp mov dec or test mov mov js in out or jp sbb mov inc fcoms bound or in sub mov aad stos stc pusha (bad) sbb data16 rcll cmp (bad) stos ret inc jmp sbb ss jb popf jns arpl adc jecxz cmpsb sbb push or push dec fst arpl pop gs sub pop ds ds mov add pop fidivrl push dec xchg test jne mov push inc dec mov sbb cmp mov cmp dec mov (bad) out data16 jl push mov xor out js dec pop push out xchg pop stos and add add leave lea sahf or iret sub pop cs in jae js out into movsb pop mov mov push in stc aad sub ret sub jae push mov jbe mov shll and pusha test ja jg jns lret das jne push (bad) leave daa push in (bad) adcb jecxz scas clc jge ret repnz dec inc pop jo pushl xor cltd mov in mov insb ja sbb inc pop int mov popa loopne stos sbbl and dec int adc arpl mov and or push xor test fnop xor movsl sbb mov cs adc test mov jecxz clc lahf in and mov (bad) jmp mov (bad) pop js push les push pop xor push (bad) aaa push repnz and jp inc inc es stc cmp cmc loopne inc hlt (bad) ret insb xchg loope jno dec dec pop inc sbb ret xchg sub in dec adc loopne fwait movsl rcrl sub mov jno inc cmc xorl pop pop (bad) rcrb push mov push mov out std movsl cmpsb mov mov aas js jmp jae (bad) xor aad test xor lock (bad) (bad) jb mov mov outsb rcrb mov and outsb lret in or mov dec js push jnp xchg lock mov retw (bad) adc xchg and nop les cmp test mov lcall mov in mov jno xchg dec fwait dec jne mov jge stos adc inc adc cmp push cmp sahf mov inc cmp or (bad) in dec add fmuls lock push xor pushf std sarl pop xchg mov lahf xchg arpl mov sub cmc (bad) mov int sub lcall test xor cwtl fs out add add loopne xor call push push pop xchg scas idivl xor jae rorl adc jne xor insb mov mov sub out in cmp jo incl dec aam mov cmp cwtl mov in push sbb rolb mov addr16 sub testl (bad) jno xchg sub push sub fcomps push dec adc xchg push add mov push cmp pusha out lcall cmp (bad) test adc pop cmpsl sahf lahf xchg mov or addr16 andl pushf into jo adc xchg imul lea xlat xchg iret ficompl xchg ficoml cmpsb test push and fbld hlt sbb push and mov dec (bad) jb xchg mov adc push add xchg rclb inc addr16 lds mov insb clc xchg or int mov arpl (bad) lret insl addr16 mov notl adc inc push cwtl sti add mov dec jl xchg (bad) int3 movsb test push dec stos cli fldenv sahf aas mov aas call iret mov sub out in and movsb cmp sbb frstor sub mov in jnp adc jecxz inc test adc outsl sbb sbbb cmp lret repz push pop int lds lods in cmp ds jb (bad) jae and sbb es pusha pushf inc sub cmp pop fldenv sahf pop mov loopne cmpsb bound inc movsb inc (bad) inc loopne lods (bad) sub inc xlat fidivrl ss ror scas push cmp push adc aas popa incb cli out sub jg ret jns add mov sar push in mov push inc lahf push loop and or and jns or cmpsl inc stc sub subl pusha sbb mov insb xlat push jnp (bad) jbe dec mov test push push push mov push sbb mov bound test jl ret dec add out out sbb push (bad) xor cld adc mov pop dec (bad) outsl loop mov aam (bad) xlat sub jmp vpermq add sbb and adc sub inc outsl jbe into push das fldcw jl pop es pop std mov sbb push add aam cs mov jnp pop mov fild push sti mov lcall ss adc das or pop mov lret jns sarl lret popa (bad) hlt hlt lds cli pusha fwait xor jbe cmpsb push cmpsl pusha cmp xchg xchg (bad) push pop mov in add mov mov push call sahf shl mov test sub xchg ret sub insb inc and push leave sbb sub lret push mov aad sbb lcall sub insb or push push nop or sbb je test push pop lods popf lock int mov xor jo dec jae push pushf hlt push lods inc aam push pop sbb jb jecxz mov mov pop ret les rorl mov subl in inc fptan test mov outsb or lods sbbb mov push aam scas adc lds hlt call mov xchg stos pop xor mov dec stos (bad) loope popf mov adc out inc inc xorl out xchg and lods fild repnz jge test lock in out les sbb mov roll rcrb repz stc (bad) out dec shlb (bad) fisttpll pop sbb into stc push push and subl (bad) dec popf scas pop (bad) clc push fxtract movsb cmp lcall xor mov pop jae mulb ficom mov fisub cmp dec pushf dec sub out jno pop das pop ficoml loope lock cmp sbb mov shr mov or sub sub jle push or mov mov icebp stc imul push push cli loop add sub cmp pop fwait in sub clc inc jne sub sub sub (bad) xor inc pop xchg mov pop shl xor in push xchg outsb arpl sbb jmp fs or pop mov aas and push xor sbb notl adc pop fwait fwait cmp bound inc xchg pop je sarb push dec inc mov adc (bad) or inc inc pop pop cwtl packsswb adc (bad) in push test loope mov dec (bad) mov pusha cs sarl and or leave (bad) (bad) or cmpsl mov cmp fimull and sub mov or sbb movsl les lock insl cli fdiv loop push add adc dec popl xor dec outsb imul cmpb sahf push pushf mov mov repnz into ljmp mov mov dec (bad) jbe aaa and sbb lea push cmp push xor push cmp enter idivl dec imul sub es lret loopne ds jmp pusha xor mov pop shl sbb mov std pop test test jb dec lret push push push cltd cmp dec (bad) scas dec sub ds call leave je pop mov mov std in cmp mov add cmp call ficompl pop ss (bad) push test dec daa xor adc xor testb faddl loope fimull jle add sbb sub cmc cmp rorl pushf and pop jmp push mov ret test cmpsl (bad) adc mov xlat scas in xchg out or lcall sbb iret mov gs sbb in in dec lcall add cmp xchg outsb cld out clc adc or (bad) outsb push fisttpll push xchg inc add cwtl pop push fcmovb push es and fsubl sarb mov test push ljmp test mov adc sbb out das cmc movsl icebp imul (bad) dec es sahf (bad) xor mov and mov xor xchg sbb push mov jbe es adc xlat xchg inc movsl test and jb pop xchg and dec in js adc pop and fadds ret ret mov xor or (bad) inc pop sbb sub popa add dec sub fdivs sar out fcmovne and sti nop sti arpl jecxz inc or xchg mov mov mov (bad) in add (bad) push dec xor pusha push jbe arpl sbb pop js push rclb pop xchg lock mov call cmp popa xchg push adc bound into frstor rcrl mov out pop mov sub fnstenv mov mov jl bound xchg out aas in mov dec test sub push insl mov shlb dec bound nop inc addl push out sbb arpl jbe cmp (bad) cmp jle insl test into dec push imul into popf inc js or sbb dec (bad) adc stos dec mov push mov les jle and sbb scas inc xchg jp fsts testl (bad) adc push cmc push repnz stc xor push (bad) out cmpl lret scas mov out pop and xor je stos fidivrl je out mov mov adc ret leave adc sub lea or daa aam (bad) jne add (bad) mov and sbb xchg jmp shlb ror add pushf push loop cmc push lods out xchg fldcw test test jmp test lcall push loope adcl mov inc ds aad mov je scas dec insb fdivl adc inc jb or iret xor and in in (bad) push sub iret ljmp mov test dec xor sti jo je nop imul mov sbb mov sbb add pop inc pop pop out repnz jmp push or stos push (bad) lahf jl mov testb dec cmp mov cmp ss js xor inc mov or enter (bad) add pop ljmp fildll or xchg (bad) rclb fs test cld and insl (bad) sbb outsl adc das fnstsw std mov test aaa push fwait stc sbb outsl mov and cmp std jno inc xchg mov jl cld and or lock test cmp movsl dec mov dec mov popf pop into insl push test mov jle or jns cmpsl pop out mov jp inc or faddp cs inc mov xor pop je adc nop leave or scas mov add cmp mov mov (bad) (bad) xchg shr out xchg mov in lret idiv or sbb pop stc xchg sbb sub fildl pop js xchg inc das loopne clc push xor cltd xchg ficom mov or adc (bad) cmp pop xor xor xchg mov cmp bound aas adc pushw and sub test ret out push sub js mov push inc scas xor jge int3 imul pop and push push adc add push imul es sub mov or sbb into jnp pop addr16 xchg insb mov xchg mov cmp loopne rep inc andl xchg xchg call mov ret in jbe cs jecxz jnp int3 push mov mov out lds xor mov xor (bad) testl cmp cmp ficomp cmp jg or jg sub mov inc adc jle seto aad xchg xchg in leave push sub mov fisttpl fstps ds pop adc push dec dec stc stc lods jle in jae aad das push mov pop dec jg xor leave in pop into ljmp or jo sti mov test ljmp push jo xor addb ficoml add ds mov xor (bad) std outsb leave pop stos or dec sbb arpl inc push lcall (bad) cli mov and cmp lret pop ret pop mov xchg scas lret sbb rorl mov ret in dec arpl enter movsl mov sti jmp std inc aad mov enter or dec push data16 outsl sbb jne mov shlb repz pop int cli dec call fcoml add ret ljmp fistpl lea mov jge xchg inc push push adc outsb repz and scas test lcall push (bad) pop inc sub cmpsl xchg dec xchg jne pop mov mov xor minps lahf mov push in mov clc repz movsl aad test loope jge push shr iret das pop add dec lods int popf xchg shrl xor cmpl or mov add mov (bad) aam jmp pop push out dec out xchg (bad) (bad) inc sbb aam ds in and test push or xor nop sub or mov inc cmc sbb shlb jns jg mov into scas mov lods int add sub mov pop aas out add inc mov (bad) lret push je out dec in xchg in lods nop icebp and xor mov cmpsl xor xchg lcall pop adc jno les cwtl pop icebp fldl sub cmp hlt mov fstps sub (bad) es jp and cmp mov imul std push bound push fisubrl lods in push push sarb leave shrb movb popa popf xchg mov cltd sub or hlt push and or repnz aaa outsb daa and sbb cmp mov xchg std pop pop decb lahf ret fs bound xor dec mov shrb mov nop mov out cmp fbld shr pop nop (bad) mov cmpsl xor xor xor gs and pop ds popa jmp loope dec xor loopne pop adc inc jg lods (bad) mov icebp push loope in (bad) dec iret xchg out loopne xchg sarl nopl nop xchg dec pop or or imul int3 lahf test and (bad) lret push pusha lret loopne jmp imul movsl mov xchg cwtl xchg out ret addl pop leave idivb test movsb in aaa daa lret inc sub test push push frstor mov enter (bad) ss cld mov add aam scas jns mov lret sti lock push rcll outsb push mov mov dec xor cmp fscale (bad) aad arpl stos add push pop sub pushf lods adc sub add xchg cmpsb rol (bad) mov push gs popf xchg sub sub jg adc push mov mov xor mov pop cli mov jmp xchg push repnz xor syscall push add call inc cmp add dec xchg xor ret syscall sub test xchg jmp scas mov add sub push xchg test in jae inc sub or push nop (bad) jbe jmp mov push cmpsl fdivrl dec cmp dec sub das sahf inc mov fistl xchg and out sub xor push xchg mov (bad) imul sbb ret push out cmp nop shrl test xchg loope lock sbb mov (bad) std repnz or call (bad) popf jns xchg repnz jb xorb outsb loop mov cmp int cmp sarb pop jg loope mov (bad) repz aas and dec push gs and sahf cmp arpl data16 adc push dec jecxz movsb push movsb pop mov mov stc cli test out test sbb or xor sbb mov xor lret pop cmpsb lds add daa sbb add xchg nop lds cmp cmp and out xor pusha pop hlt mov pop fcoms (bad) or ja xor and push cld pop imul xchg mov loopne mov aad faddp push xor imul xchg imul jg xchg lcall fmulp movsb sbb (bad) pop mov mov inc dec stc or add insb aaa lahf movsb push sarb clc and mov push add add mov inc stos xor mov sub sbb xor mov call inc dec aas push sti mov hlt ja gs cmp add sti mov xlat stos sti aam data16 jecxz dec pop ffree push pop or or jb mov push mov jp push jo xchg aaa (bad) icebp mov xchg jl jecxz mov cmp ja insb push adc push fdivl mov pop mov in or xchg or fiaddl bound fldt xchg xor jmp push ds in arpl testl mov out xchg out push mov push js xchg in je orl test mov cwtl fs call push push pop fldt inc sahf outsl and add fidiv decb pop inc dec cs daa loop out ror push xor push or sbb loope push pop sub jbe int xor mov cmp add ret mov in push inc adcb or mov add xor mov pop pop cltd mov xchg push push les mov stos xor sbb adc mov movsb and push cmp movsl push mov push loop loop (bad) aaa sbb mulb in in push or or push stc call jmp or movsb add outsb mov inc sub pop hlt mov pop mov mov lret add mov es (bad) sbb cmp or jns clc cmpsl add xchg inc mov ret loope (bad) pop sub ss mov cs ja fstpt mov js jp ljmp sti fs js (bad) test mov das jno stos sbb fidivl scas sub ret je cltd (bad) and xchg in arpl dec lret hlt pushf mov (bad) loopne fcmovne sti add jl icebp add dec cmpsb inc push add xchg push push jo inc mov pop fimul lret and sbb and stc and pop sahf adc xchg dec call or out cmp cmp pushf divl add and xorl mov push sub adc out je lcall movsb ss inc orb mov mov sbb cwtl mov inc push or fbstp lods mov movsl mov mov sbb and js mov das jae outsb mov mov push push imul adc iret inc dec roll leave push sbb add stc fsubrp loope dec movsl pop inc out outsb test xchg rolb cmp dec gs jg ret push paddusw (bad) xor shll in xor cmp mov enter int (bad) jnp fwait pop lret loopne outsb push mov and jp jmp xor mov jl sub and pop pushf cmpsl mov (bad) adc popf pop rcrb pusha mov mov icebp dec push dec or (bad) sub xor xor push ss sub cltd inc aam ja xchg xchg ds (bad) mov ljmp lret ja dec es lock lret leave in jns int out ret mov rorb cmp push xchg aad jno aam mov pushf mov mov and movsb sub lds movsl xor add test adc pushf test cwtl mov pop jo sub jge in fistl adc mov cwtl movsl and jo scas mov hlt jl fiaddl stc adc dec xchg dec int (bad) repnz jmp aad (bad) test aad rcrl lock push inc inc xor into cmpsb dec test rclb dec dec sti enter mov mov push pop jbe in dec (bad) and or adc xchg add and outsl daa cmp hlt or mov push jno in inc mov sbb or in mov jmp loopne and in xchg js lea sub jne mov xor int call andl popf ficom repnz jmp (bad) je jbe iret jne imulb lds dec xchg mov sbb xchg insl push sbb jbe lret hlt cmp or and jo enter cs cmp jae dec and addr16 sbb ret dec xor xlat cltd jo enter and lock jb popf popl add inc jg add jbe and stos mov inc xchg lret push leave mov bnd pop inc dec hlt adc jns push jnp test xor fucom mov and (bad) int3 add (bad) out cmpsb scas (bad) jge loop mov sub gs mov xor or adc daa in pop dec adc pop popa incl xchg pop std jg std dec dec cmc xchg xchg xchg jne sub negl popa add push arpl fstpl push mov jmp fnstsw sbb adc inc aad mov insb add mov in jmp imul (bad) cmp lods mov cmc xor xor xchg cmp mulb mov pop lahf inc mov dec fdivs inc cmpsb or ljmp in sbb in inc rcr dec jmp pusha jae cmp out scas sub test mov rorl aas (bad) mov push (bad) lods pop movsb push mov cltd xchg rcrb push mov jle arpl and imul inc je or pop mov sub inc ds mov pop (bad) arpl push in out fbstp mov jnp test mov push mov movsl call sbb pop ja,pn ror mov adcb lcall adc rol scas leave cmp mov insb ds add call xchg (bad) mov push in stc sub inc test dec dec jae xchg sub aam sbb sbb dec mov je aam xchg rcrb popa jbe rcl das mov in mov mov (bad) je and not cmp outsb pusha shl pop mov data16 pop aas int mov imul push sub jo cmc repnz insb dec data16 jl mov jmp mov xchg sbb fcmovnb mov cli mov data16 dec mov scas arpl adc mov mov clc sub aam arpl aad and fs push test cmp push cwtl inc mov push test pusha shlb add jae cmpsb nop and mov nop sub movsl and mov xor inc je add imull and mov stos fmuls leave push cmpsb jb loop aad ret push and scas (bad) push inc (bad) jg push jbe mov fimull outsb scas scas pusha sbb ss push jmp mov fldl and inc inc pop mov sub push push icebp pop fbld inc jle and sub pop mov fnop sti pop mov push or movsb jg popa lea jae sub push jle mov das and jnp lret fsub dec mov mov loop push stos mov fs clc add in push sub jecxz popl scas mov test in cmpsb inc roll jno notb inc push xchg aam test jne fsubs jnp (bad) push dec xor add (bad) jbe (bad) cltd mov cmp jnp lds cmp add imul sahf mov iret dec xor dec xor pop xchg xor cltd sub das xchg daa and mov hlt ljmp inc cmp decb ds mov mov es cmpsl outsl jbe dec lret orps xchg or imul in or mov out xchg dec ret lods fcmovb out xchg pop or or ficompl lds jae outsb cmpsb lea pop add or mov pop sbb push push sub push xchg (bad) jae inc pop and push movsl rorl adc push lret xor pop xor dec imul std and lods mov jl push dec and mov and addr16 xchg ss nop add rcrl popf aam mov sub push pop (bad) ljmp xchg jp leave adc cltd jbe mov cmp mov push mov xchg add inc add xchg sahf adc pusha addr16 in das sub scas sbb (bad) popf dec xor xchg test ret adc bound push (bad) add clc stos leave jne mov daa sbb sbb pop es cmp pop xchg loopne xor orl add dec js or daa lea (bad) xor ret or xchg neg adc jo or loopne and mov data16 pop je ret fisubl mov xlat dec dec mov and imul lahf int3 frstor mov jge dec inc mov out rclb fimull push mov imul test fcompl mov (bad) cli xorl movsb adc sub push inc rcll movsb int3 imul add fisubl inc into inc dec mov push sbb cmp cmp xchg je adc movsl test pop xor gs fistpll aam mov pop push cmp loope push int3 stos and push xchg movsb sti and negl and sub data16 cmp sbb loop pop call jp push or jbe inc and repnz push fwait addr16 jecxz inc jmp jno mov add jae xor ret (bad) call mov test pop stos rcrl decb inc hlt mov or leave or insl xchg cltd test por sub xchg adc adc push sub cmp cmp jmp and and fldpi jmp faddl push lret fstps add push xchg xchg jl mov movsb xor cmp push pop pop ret and and cmp inc fs inc push cmp adc push stc jl clc push aas jg rorb (bad) sbb jae jecxz jns dec daa mov fcmove aaa pop push call scas cmp jns dec push push xor mov pushf pop dec jl call mov dec fildll add mov inc popl gs in cmp adc mov lea shr or inc fucompp test xor lods or lret mov in psrld pop ds out ds mov loopne aad lea push cmp icebp push mov jle inc pop push cmp scas sbb jl aad into mov in pop dec rorb cmpsl (bad) cld mov cmc cs pop mov xchg or xor ljmp pusha cs inc push pusha push mov and pop daa and add dec mov imul repz push xor lcall outsb and daa mov inc cmp cltd imul cmp pop out gs iret and or mov cmp loopne test in aas xchg xchg add cltd adcl out outsb test mov leave movhps js std mov mov insb in (bad) iret dec xchg test adc (bad) int ss outsl pushf shll loop mov sbb in inc mov int int push lods dec psubd aam int3 push into mov jae jo cwtl mov jno cmp int test les xor pop mov nop ds (bad) stos cmp inc xchg jnp call test cmp cmp jns cltd xor push mov xchg push out scas cld shl jecxz pop cltd aad adc pop cmp inc push lret daa pop inc out and sbb mov pop popf lods mov (bad) aaa add lret cmpsl faddl cmp xor pop dec cmp jge (bad) jmp movsb dec mov sub push mov pop aad call push test dec adc mov das inc clc pop or cmp stos mov add sub mov mov inc xor sbb inc sti testb push pop jp mov add and int3 ljmp mov pop insb daa cmp mov and movswl sbb mov fcompl enter outsl mov lods imulb sub add aam dec xor jle and and (bad) stos fwait xchg std sbb lcall xor pop pop mov (bad) (bad) (bad) int3 inc test pop das in test js mov int mov push pusha sbb iret xchg aad add and xor cmc sahf aaa in fwait dec shrl test xor aas push (bad) (bad) pinsrw jno imul cmp inc mov les xchg jne sbb int inc popf mov xchg adc push lea incl and mov (bad) cmp lock adcl ret sub and out aad adc fcmovbe movsl and test es jg loope test cmp adc gs inc or cwtl pusha mov sub arpl les outsw fwait int3 and sbb fistp movsl xchg cmp lds fbstp into popa mov or inc outsb popa pop test push ljmp pop jg cmpsb mov sub cli and shrl cmp aad mov dec fwait and fdivrs cwtl fsubrl (bad) std fdiv dec dec out cmpsl and mov je fildl out push aad push sub push mov inc lods (bad) fsincos sub xor ss nop mov in das dec lds push movsb cltd push ds adcb push (bad) pop add call and jge or push push push (bad) sbb cmp adc test xchg mov (bad) inc inc cmp popa push cltd loop and mov std mov push xlat clc cli (bad) divb adc roll pop shr mov rcl in es in dec mov nop inc xor inc pop test scas out add sarl mov mov inc pminsw dec shlb fincstp mov stos test dec pop or mov adc or lds cmp repnz cwtl cmp lea test shr mov fs sbb popa xchg cmp outsb jb cmp push loop pop adc lahf gs mov rolb xchg add insb sti pop nop sub loope add addr16 cmp sub push outsb mov ret mov add into cmp popfw fistpll adc lea aaa xor dec push dec mov sub addr16 pop inc adc xor insb pop cmp ror test xchg jno or and hlt (bad) pop das stc divl out in pop sub or mov in ret mov and sbb inc or or or in ja cmp or mov lahf (bad) scas xlat dec iret nop fcomip sbb in jns jle sub fiadd adc fnstsw repz xchg rorl and and out shl pop daa mov iret pop (bad) call test lret and pop add inc mov push pop or sti pop add mov jnp repnz ss inc sarb mov test iret rolb popa or sti adc js sbb fs pop lods test mov sub cs adc loop dec ljmp cs jne movsb test mov cld orl sub mov xchg inc adc xchg sbb and jl mov xchg mov rorl push into or cs mov dec add add aaa test (bad) iret sbb jnp mov mov stc jnp and lret out mov (bad) call aad stos jbe testl pop movsl pop popa dec sbb add mov rcl sbb mov popa testb push push mov (bad) (bad) repz inc std (bad) pop cltd int sbb pop push inc (bad) jg adc mov push xchg xor sar shrb int cltd mov pop sti ret mov cmc jecxz in xchg cmp rclb adc add mov cmp andb mov popl fs js cmpsb sub dec mov pushl or js je cmp mov cmp in push in mov fiadd imul jns leave inc or test cmc outsb (bad) lret mov cmpsl ss jne cmp inc test cmp sbb inc add mov adc sbb sub push frstor repz (bad) mov test jno cld and loop pop js xchg fsubs and mov pop mov rorb jae xor mov and pop adc adc out push pushf xor dec jl dec (bad) ljmp add xchg sbb sbb and frstpm(287 and int xor das cmc popa std mov pop push jbe push imul in scas xchg pop add inc cmp mov lock stos jns jg test cli xchg lret int3 sub cmp sbb shrb inc and jmp lods out sahf mov mov mov xor sub nop xchg push ss push enter incl loope cmp xor cmp xchg idiv out cmp mov sarb mov fildl add mov or cmp jge in xchg xchg sbb mov mov pop push ret stos pop fwait addl outsb jno js fdivrl mov fidivr in movsb shrb dec add in dec call (bad) mov nopl push add dec inc push cmc sbb fs sbb ss mov imul jae push sub out cmp aad or add int hlt lock lods mov jns ret loopne xchg or inc adc ja mov jae sbb cs sbb add sub mov imulb inc add xor jnp jp adc data16 (bad) negl add add pop adc loope cmp adc andb sbb xchg xor or nop mov and mov mov cwtl inc mov sbb jne xor push fiaddl and mov add cmp int sarl xchg in inc jbe test ljmp fcom ljmp inc ret andl pop lret lock pop ljmp (bad) cmc mov decl repz imul sub sbb cmp aam jo push or or push pop jl push movl daa mov cmp push repnz inc mov dec pop ss in xchg dec ljmp out and sbb (bad) cwtl call push sti pop fisub ret bound movsl jle shrb sub fildl sbb jbe stc in into dec dec add mov sub fdivl lret mov std mov addr16 int3 lcall loopne mov cld push mov xor cltd (bad) push dec jae ss data16 loop ljmp cmc sahf nop jo fbld outsl mov rcrl inc data16 cltd lods adc imul and scas jl mov mov gs out rcrb and scas cmp push lret ret xchg mov inc xchg add pop call dec stos inc mov icebp cmpsl lock push sub dec push out leave push fsts adc popa andb or loopne imul jnp and dec ja aaa mov push adc adc in sahf sahf rorb mov xchg push xor cmpsl clc cmp outsb lods ret xchg lcall xor or gs in test out out ja je cs ficoml mov cmp lods inc (bad) mov inc push int pop xchg dec out mov mov xchg pop jp movq pop into jb mov ret xor cld push pop arpl rcrb cmpsb into or into push adc sub push add ret cmp pushw pop push mov data16 shlb scas push pop cmp push mov lret rep push out or repz xor shrb aaa adc inc mov stos data16 dec into aaa (bad) test btr mov stos cld in stos cld cmp in lret std or mov xor xchg fist jo inc cmp (bad) cmpl xchg pop jbe sub cmp popa pop cmpsl test inc sti (bad) or fstps xchg into mov aad fmul movl stc mov out mov hlt (bad) test xor movsl in xor or xchg arpl mov xchg pop cld xor jmp mov dec loop cltd pop test xchg sbb (bad) ficompl fldpi jle aam cmp dec in aam xchg add xlat clc gs jle ljmp scas xchg mov aaa pop add repnz ja cmpl mov popa imul mov out sub sbb adc test inc outsb xchg std mov mov jle xor jge lret sub xchg adc dec icebp push (bad) cmp jbe ret fcompl stc lods sbb lock add add sub lds push push xchg inc test repz les in sbb mov in mov mov mov rorl scas (bad) dec push push mov clc sbb mov jnp mov mov pop add mov sarb fnstsw roll mov lods daa pop jnp add or fwait or mov in je sbb (bad) lret cwtl xchg sahf push and xchg aas callw int and cmc outsb (bad) adc (bad) or sti loope inc jl adc lret xor outsb lahf mov lds lcall addr16 js mov mov inc mov pop clc out ret mov or pop sub enter mov shll gs xchg aam fidiv scas sbb xchg push pop mov addr16 adc out and adc (bad) cmp outsl jle dec inc inc psadbw rorl sub mov sbb stc les inc inc gs aas mov aad adc (bad) insl add push outsl xchg xor cmp xlat movsb mov rcrb jne pop sub fstpl (bad) fwait mov push sbb in mov test add dec fistl sub (bad) push or inc add mov mov sbb loopne xchg inc aam (bad) andl bound stc dec fistpll pop test xchg lret test (bad) mov push fisubr or add jp shr push mov jo sub (bad) inc lds jl lods int fs mov adc lea mov incl jbe in dec pop nop call mov xchg mov xor addl push stos pop stos stc aam sbb inc out jle into pop inc mov enter nop xchg movsl fcmovnu (bad) dec test lock inc lahf pop arpl iret test or lret sub das push repz inc iret or sbb xchg add xchg (bad) jno sti mov cli cli movsl adc push push (bad) push add dec adc inc inc or insl idivb aad xchg sbb add xchg ljmp xchg sti add xor and mov fdiv push pushf add pop imul fidivl pop sub sahf aam add stos or rclb add sub or (bad) insb cmp ret dec cmp cmpsb (bad) test in imul bound mov lods and addr16 xor pop pop sbb push inc sbb fcmovne cmp mov leave pop cltd push sub push sub mov cmp into dec mov push loop (bad) hlt clc sub adc cli enter ds adc sbb mov in sbb push pop mov xor mov into repz jge pop add mov or and jl movsb jo mov mov mov mov mov inc or mov sbb sbb push sahf push jae sbb sbb popf add cld arpl cmp popl mov arpl adc insb pop jb sbb insb aas repnz and mov sub rclw pop push repz sub sbb inc adc pushf (bad) (bad) push clc sti or xchg nop popa int xor repz mov pushf mov clc lea test in lea mov or fsubrs es cwtl sbb sbb push call xchg sbb loope pop dec and sbb cmpsb fwait repz cmp jb pop lock mov popf mov pop arpl cmp pop pop jp fstl cmp mov dec jecxz enter js leave out stos xor fsts or bound or daa pop jmp pop cmp dec adc xor out xchg push out sar insl jne movntq sarb cltd add sti mov sbb add dec pop inc lock fnstcw call xor fidivl inc (bad) scas lret mov mov sti insl mov xlat add adc adcl and out mov arpl mov xchg iret xor aad cli push cltd ret pop push pop fistp add add lahf call (bad) adc out and out clc xor outsb add in dec push je cmpsl (bad) movsl lcall fcompl leave pop sub cltd std and mov jb in inc bound ret push out cwtd insl dec lcall sub sub (bad) icebp movsb das stos (bad) jnp popl aam pop shl jae jmp loop pop and das and push dec fwait mov and mov dec cli aas out scas mov (bad) jle cmpb xchg aas ret insl jle xlat pop enter inc sbb inc negb or andl xor out aam pop adcb or mov add dec xor cmp popf or adc fisttpll inc pop out call or add sub xchg arpl mov ljmp (bad) mov sti data16 cmpsb scas jbe xor pop (bad) pop (bad) (bad) xlat jg jnp rorl jb mov fcomps dec mov les out and and aad sbb les out out lock out sub mov pop push push mov int jns or mov shlb fisttpl (bad) addr16 sbbl sub lret pop xor stc (bad) jecxz xchg jb xor (bad) hlt mov jg xlat jmp or out mov pop xor push jo cmp push push xchg and mov or in cld call inc adc aam int3 jns aam cmp ficompl pop (bad) hlt daa je loop lcall cltd adc mov sub jo cmp sahf in jae mov (bad) push scas fwait insb ss dec jbe stos stos fs inc pop mov iret repz sbbb in popf push dec repnz mov js push test outsb xor dec sbb ljmp pop imul mov mov adc cmpsb ds mov mov adc jae pop in sbb cmp jb xor sub push pop lret in std xor jl inc push shrl jp dec adc popf loopne push test dec hlt mov mov pop (bad) repnz and inc movsl sub je jg xor inc out (bad) push aam xchg scas jnp daa push in add mov test orb jle imul pop mov dec in mov sarb jl in loop dec cmpsl mov cmp jae sub dec push ds push add roll mov push adc adcl inc mov test xor mov xor cmpsl sub out mov enter sub nop or in (bad) mov cltd add xchg out mov fwait add lret jne pop add mov add cld jb imul data16 xor mov in popa test add loopne or fisubl xchg inc and adc xchg ss cs push lret add aaa fnstenv push jge std sub jmp dec nop dec insb lahf cmp pusha lods and xchg and sti arpl mov stos and test and (bad) cmp dec cmp into mov (bad) ss xchg scas (bad) mov cmpsb jmp adc fisubrl movsb jp cmp mov into cmpsl dec sbb dec dec mov cmpsl fadd stc pop cmpsl xor popl push cmp mov cld push mov in jle pop stc sti loop pusha cwtl fimul dec mov push popf xor mov out cmpsl mov test ret call popf mov pop jle (bad) cmp movsb cvtps2pi inc pop jne stos pop xchg and add (bad) rcrl jne inc mov push jecxz jae adc xchg mov gs mov cmpsl sub (bad) or gs into cmpsl or (bad) pop addr16 or je test mov mov data16 jae adc pop enter cmpsl test repz (bad) arpl out icebp movsb rolb enter adc and jns sbb incl repnz xor mov mov lods enter dec push rorl out jmp (bad) pusha lahf ret xchg dec shll in (bad) enter les in xchg pushf and fistl mov ds cmpsl arpl repz imul dec aad aam mov (bad) jnp cmp insl jns add inc addr16 icebp adc mov mov in cltd mov movsb fmull inc test pusha leave sbb sub inc jns movsl xchg daa (bad) aad xchg enter ret insb (bad) cmp popa add mov sbb (bad) lods div mov shrl xor arpl ss fsubr sub mov ret adc (bad) xor iret jnp xlat in dec jg mov and pop inc jmp cmpsb iret adc js adc es pop mov cmp xor push pop mov push int3 jmp lret dec adc or enter cli movsb (bad) ficompl pop jle mov fcom cmp jle clc mov fisubr in js inc push push ljmp mov push nop arpl pop pop jnp mov or mov es arpl outsb mov mov mov cmp jmp lret clc push lea push fnstsw sarb data16 out fwait aam jle sbb int3 outsl pop add cmp dec or sbb cmp fsubrp imul inc pop dec push leave inc gs aad (bad) jge out or mov mov enter sbb divl dec push sub scas or pop pop and add sub push enter mov enter fcomps test xor gs rolb imull rolb jmp iret cmpsb add nop leave pop jmp mov push out nop push lret ret lret leave and mov or (bad) and imul out xor movsl stc inc xchg push cmp and dec bound push fwait inc xchg cmp fs js lret cwtl jns add xchg and add rol pop enter sub sbb enter xchg cmp (bad) pop loope scas cs jecxz xor ret fnstsw pop aad add xor adc test add test test cld and adc add mov call fmull jg xchg and rcl out sbb (bad) clc test pop mov into das nop jle pop sti jo mov sbb ret loope inc int cs push gs and jle aas push ret lods rcll or adc enter lahf mov xchg leave ret (bad) jns,pn imul ja and xor push clc iret xchg jnp or scas or lahf pop into sbb jmp aad mov std aas push cmp mov mov ret sbb lods inc fbld in (bad) mov pop mov xchg sub iret cwtl adc xor out mov mov in inc inc xchg jns cmp mov mov lret ljmp push dec rcrb icebp sarl pop lcall aam cmp sbb out xor lods pop sub xor fstl adc mov call out fcomi pop (bad) xchg mov add and sub out push add mov fistpll gs repnz pusha mov push inc mov pop cmpsl imul das pop fadd in sbb push test cmp movsb ret inc flds pop sub fmull loopne adc int3 mov pop mov out fwait int lcall iret iret lret push jb add orb repz inc es cmp push test jno adc bound std add cwtl arpl popf jo add je xchg pop jbe push push std aad lock dec jp xor dec sbb xor fnop mov adc lcall sti add adc cwtl icebp dec mov xor repnz ficom cmpsl inc jne jge loop (bad) cld inc xor jbe loop cmpsl imulb sbb mov pusha xchg xchg stc std pop pop jmp cmpsl pop out sbb xor cs dec push push cli enter sar cmp pop cld cmp sbb and cli iret mov pusha or gs push add mov nop cmp sbb jns je sahf xchg out addr16 lahf add xchg ja popf mov rolb add mov mov mov dec cmp (bad) nop popf xchg sbb xor (bad) loop in ds cmp pop lahf (bad) fidivrl push aaa mov push push jg dec inc pop sbbl and pop and jne loopne fdivr or jp hlt mov fbstp mov cmp push pop pop es add (bad) fcmovb es mov (bad) jbe fdivs jb mov rcr into cmp push cltd inc outsb xchg sbb cmp add xor lret es push test test xchg push (bad) jo aaa mov sahf fisubr lods mov jne push insl gs mov stc and (bad) xchg test and or push and sbb or cmpsb lea cld push aas jbe js mov loope bswap mov mov jno daa pop out loopne mov add outsl xchg lods add push (bad) mov fidivr pop and out mov sbb loope pop cmp rcrl mov pop mov pop outsl js addr16 xor test add addb jae fcoml jae adc push mov mov or cli xor lcall jb,pn fbstp int sbb push pop sbb adc sbb int3 dec lods or stos pop lret adc leave mov sbb out out mov mov sbb mov (bad) in in and outsb push icebp enter imul sbb dec mov jns addr16 hlt cs xor into test inc call into sub mov test jnp dec pop inc lock test push xorb rep mov notb cld mov stc jne sbb jecxz shrl cmp cmpsl push or mov int3 push cmp shlb loopne sbb push outsb icebp arpl sbb ret in insb int3 pop push mov (bad) push aaa fcmovu out fdivrs sbb inc popf sbb inc jp mov insb test push mov adc lds fistpll test sbb sub push cltd xchg or inc int cmp punpckhbw xor ret or xchg loope push loope movl sub sub adc nop inc out push (bad) lods insl sbb lods mov lea xchg and inc pushf add popa or mov pop pop and xor mov xchg adc cmp pop dec fidivl push push stos adc test xchg sbb in popf popf decb lret inc dec cltd or stc adc mov xor mov sbb cltd fisubl in aam pop mov jnp cmp mov js xor pop ljmp and jb fiaddl cmp inc and mov and clc mov arpl lret sub cli mov push pop gs jnp loop ds (bad) xchg data16 inc idivb xchg xchg lea xchg and dec dec out hlt dec movb cltd add aaa stc bound mov pop and in leave enter inc cli xchg xchg xchg push call rclb mov mov test lcall or cmp repz jp sbb movb neg push xor insl xor add xchg mov adc pushf mov mov and mov mov add sub dec (bad) insl cld jmp pushf gs movsl pop and icebp (bad) sbb jbe cltd mov cli sti ja test push fisubl mov pinsrw mov insb inc (bad) sbb and es mov inc xchg movsl and subl out push out aas les push or in (bad) loopne insl rorl imul push or or fldt sub aas jmp and inc push das sbb fwait pop lahf or sbb push pop adc cmpsl jecxz and jae (bad) fs xchg cltd adc xchg xor adc scas rolb jns adc in mov fsubl dec fsts adcl cmp mov mov test popf ja (bad) gs mov push notb daa enter mov add and inc jp ror int and (bad) call ss sub and orl adc mov cmp and imull daa mov aad dec sub xlat in mov xchg mov jno fwait fwait clc out rcll pop dec divb jle (bad) insb mov lret cmpsb xor test fwait loopne adc cwtl xor jl (bad) push test (bad) ljmp ja cmpsb xchg (bad) xchg adcl rcrb in or add icebp and (bad) pusha add mov adc and mov lds shll push cli imul lods xchg xor pushf xchg cld loopne xchg mov xchg (bad) cmp lock icebp test xlat out mov scas daa flds pop pop inc repnz gs add pop in xor ja les pop das in mov stos das mov cmp mov psubusb jb dec ret imul and add and jp (bad) mov dec inc xchg xchg fldenv nop aaa jmp jmp das jge sahf fcoml mov push xchg push in pop jle mov popf daa mov push movl sti inc sub (bad) jp xor cmp stos nop jg stos push clc pop rorb or push or outsl inc cmp mov ljmp mov fsubr (bad) mov add pop xchg mov out sbbl sub sub lss fistpll out lods pop mov call lcall loopne ds mov pusha rcrl pushf cs ror ficoml insl (bad) or es cli or lods sub inc mov in mov adc (bad) xchg adcl call fcomps outsb cmp int3 mov inc xor hlt leave sbb push frstor test loopne pop adc incl push xchg mov adc iret into ds mov cmpsl sahf jb cmp inc lcall fsubl lahf mov inc pop jle sbb rorl mov les or mov aad or ds fnstsw mov jbe adc es pop push push loope and mov out xor les icebp push xchg rclb arpl (bad) je rorl popa arpl lcall jns mov jo or dec inc jb or push fidivrl aas add mov inc mov inc xchg shll sbb mov sub pop (bad) sub lea cmpsl cmp mov cvtdq2ps in aaa insl mov pop push lods adc scas inc fcomps jae cmc mov idivl fbstp mov push sbb pop pop sahf xchg lcall inc stc out (bad) in jo add cli xchg dec loope leave call jno push (bad) lret (bad) cmpsl (bad) cmp or push mov inc (bad) mov fs sub pushf and dec sub cltd cmp dec inc addr16 movsb scas cmp divl cs adc xor cltd cmpsl xchg (bad) ss ja cltd shrl cs and bswap adc dec adc push jp sub mov fstl sub insb push ret mov dec insl or aad es xchg (bad) pop lea mov mov daa mov fs cli mov pop sub mov leave mov ja pop fadds and dec daa in popf dec inc adc push mov mov and add bound and aaa xor cmp das cmp inc scas mov nop sbb adc pop std decl pushw sbb fistl adc sbb arpl cld iret adc in arpl (bad) dec mov int mov lods mov (bad) mov dec (bad) and sbb mov iret push jb loope fldenv imul jp fistp sub jb scas dec sbb and mov (bad) xchg adc fwait out dec jmp push add imul sub into push (bad) imul dec movsb inc xchg mov adc xchg test das cmpsb loopne xor sbb push jns xor xchg les pusha fisttpl aaa cmp mov dec pop mov enter or mov inc or push inc inc out cmp sarl push and sbb test add cltd jns addr16 dec in and insl dec test xor add push add mov pop ss mov stos dec rorl xchg mov repnz (bad) in or ds stc inc cltd popl add dec pop sbb fnstcw jns xor bound ja das xchg outsl mov add sub loop jbe jne jmp sub aaa loopne mov out cld outsb fnop push in int3 jp (bad) mov int mov scas fsubl dec push insl enter xor add sbb push push outsb push mov nop ja xchg cmp xor sarl dec inc test push xchg inc or clc imul test cmp sub sahf mov pop data16 icebp cmp push (bad) jle (bad) mul mov adc in hlt jne fldl in mov dec pop aam pop push jecxz addl xor sub jecxz fdivrl mov mov push aad icebp fidivr mov push pushf movsb out dec sbbl mov mov jp sbb push and mov pop sbb ja call ljmp movsl gs int3 ret dec aad inc gs (bad) or test aaa push cwtl xor mov movsl ret mov adc lods mov mov dec cld ljmp cmp mov ss xchg hlt lock adc and jmp (bad) insb cmp mov jp mov sahf inc fcoml push dec (bad) cs mov js test jns xchg and mov cmp scas mov adc add xchg xorl mov ja loopne sarb cmp jl or in (bad) xor add ljmp adc js xor call lods xchg call inc dec jle mov push jmp in int3 xor into mov pop rol push std mov adc cmpsb cltd dec adcl gs ret ds je hlt jno push int3 xor psubw push bound and fs xchg addr16 mov add das inc add cmp mov mov jno fisttpll xchg pop call in add xor or aaa adc psllw or pop xor inc ret xchg inc stos push jbe push jecxz sub in ret pop test mov xchg rcl cltd inc jmp xchg add movsb sbb aad shll jg xchg or addb push stc xchg loopne inc mov add push pop pop (bad) into inc mov xchg and inc std or cmpsb xor push (bad) aaa insl pusha seto adc mov dec inc (bad) mov pop aam mov or xor in mov push flds leave jmp es sub sti and and addr16 xchg enter xor imul mov in in cmp aad mov and popa inc in fwait lds push sti test movsl sti out out mov fs cmp popa cli adc push xchg arpl xlat test imul ds jne mov scas dec and int outsb (bad) fiaddl pop out test call mov cmc gs sub out fs jge in adc sbb je jmp nop test ds cmpl inc repz fwait cmp and and dec mov xchg add xchg ret call xor or es out xchg ficompl adc mov mov arpl push xchg adc sub mov jo pop mov into sbb test adc incl inc jns xchg sbb in inc lds mov stc fbstp into inc cmp sub jp add data16 adc aaa aas test mov inc scas outsb fnstcw push paddsw or aad mov outsl inc pop jb hlt add adc xchg rcrl pop int3 mov mov or adc insb ss and dec cmc cmpsb ror mov cli mov call mov mov cmpsl fisubrl inc arpl out rorb sahf ds call push jno mov dec insl pop sahf push adc xchg mov sbb push dec xor shr out invd in push or out ds and in mov lods cmp cmp jne jg mov cltd pop lcall add cli mov sarb pop push lahf addr16 mov push cmp negb aas js jno jmp or mov xchg jge xchg push xchg xlat repnz cld add ret or inc mov push mov or inc data16 (bad) dec and mov outsb and push cltd jle in mov adc dec mov test add mov lcall dec hlt pop or mov jecxz cs inc sub loopne lods inc xchg push add or in lret test dec adc insb xchg sub mov mov test addl pop loopne jge mov bound inc repz sbb loope add sub nop and arpl repz mov roll sub (bad) (bad) popf fadds fbld xchg cmp jae pop cmp cmp cmp sbb (bad) nop rorb fisubl ret sbb ret ljmp loopne or jg ss xchg jecxz out mov inc sbb cld popa cmpl ja test xchg gs pop stos arpl add pop pop cmc dec mov inc cltd lods mov scas and stos outsl cmc pop xor pandn cltd lret outsl mov (bad) aaa popf push cmc std cmp inc mov adc (bad) sbb push and mov test push outsl rcrl push repnz (bad) jmp pushf ljmp mov jb icebp sub int sarl jae js stc fimul fbld icebp daa push rorb xor mov js mov or jae iret mov sarl sahf push fstpt clc loope xchg adc cwtl cmc outsb and add mov aaa hlt and inc and sbb outsb sbb lock fistpl add dec pushf in mov dec jae jge xchg imul push sub or int3 inc imul xor inc insb inc in jae mov inc pop pop loope bound jle pop mov dec mov xchg xchg cmp outsb in movsl push in popf dec pop test aaa adc lahf rclb (bad) or jb cmpsl shrb jne xor out xor xchg cltd adc bound es push loope ljmp stc push (bad) cmp repnz add or sahf mov mov iret pushf cmpl inc dec push (bad) cmp push lret sub jbe cmpsl cld icebp les mov jo mov fcom lock lock in ret je xchg daa (bad) sbb aas push bound inc or cmp call or aad xor in dec and add or inc test fidivrl jo fwait jmp (bad) aas aam mov loopne jmp pusha (bad) adc test and les mov or sahf jl cmp jnp test mov mov jbe movsl mov rcrb add jae or add and inc mov xchg cmp pop fcoms push jb cmpsb adc add adc cmp test mov ljmp stos jbe or scas dec jo add mov stos cmc sub inc and xlat cli out cmpsb sbb jecxz movsl icebp adc mov dec imul jle jge xchg mov add jnp in pushf mov jnp jno lret mov sub stc add popa sbb xchg scas add sti js icebp arpl and mov enter (bad) dec icebp pop aad lahf outsb xchg jecxz add and into inc jecxz into je dec mov dec clc cmp js jecxz scas add inc cmpsb or mov cmp dec cmp jle sbb xchg aad leave mov and lret xchg xor lock lea int inc test jle add aas adc rcrl jge mov add ficompl fadds mov xchg js cmp push sub pop inc int jnp adc orl pushf xchg cmp pop test iret (bad) and cmp mov adc sbb adc test lods fmuls hlt cmpsb or aad aam inc shl cmp lock adc adc out sbbl sub adc jne mov pop mov mov push adc movsb stos sub dec jl pop cmovl fist xchg xor loop mov clc fistpll les popf pusha xchg dec mov sbb sti xchg test mov imul sub sub sbb add push loope int3 in inc mov xchg ds pop jl nopl jmp push adc out cs dec leave pop (bad) in sbb sub add (bad) cli (bad) pop into xchg imul xchg mov insb cmpsl sub sub leave int3 push cltd push push ret test xor xchg xchg mov or (bad) sti stc push xlat lahf pop or dec cltd cmc fistl loope xchg scas test div aam clc or inc pop pusha sti loopne sbb pop (bad) xchg les push adc in bound sbb mov push lea daa add test xchg mov mov adc outsl loop insb or adc adc jecxz inc xchg (bad) sti enter mov test nop (bad) pop lahf movups pop (bad) pop in push xchg fisttpll movsb popa (bad) mov inc mov cwtl sbb sub pop mov sub out data16 ljmp dec adc icebp mov mov insb fisubr dec (bad) mov addr16 push mov je sub jo sub push repnz (bad) inc insb add scas jbe mov lea inc lret test (bad) js leave enter cwtl mov push sbb jo adc ja pop jmp sub fidivl popa or sub dec push scas push and sub mov mov mov sub xchg pusha daa ficom jge xchg cs sbb dec jp roll imul and aas and loope iret std cmp adc ja xchg xchg mov cmp movsl push enter inc dec nop rcrl fidivr enter roll adc or aas mov call es (bad) pusha (bad) int3 loop leave cs fisubl xor scas push xchg (bad) mov add pop loope,pn xor gs adcl push inc mov pusha andb enter mov jo mov sub and xchg (bad) xor and outsb pushf (bad) or enter jge and inc pop ja xorl jg scas add pop jb sti in push sub test daa loope push movsb pop mov sub sub clc xor add jp jbe inc mov mov xchg xor jmp cmp jae add lods dec cli rcrb hlt or mov shlb jle adc aam loopne cs rorb (bad) cmp outsl fisubl shl push and jmp aam loope sub inc inc cs mov add cmp adc xchg call lret jae adc (bad) ljmp popa adc sbb icebp xchg cs nop pop sub lahf sbb lcall mov push stos imul sub cmp (bad) jp test stc sub cltd popa outsl rcr mov aam int3 jne add mov stos cmp js push fcompl cmp les cmp and pop lss repnz pop inc mov pop loope into (bad) hlt cmpsl shrl sub mov inc scas xchg in and xchg mov (bad) cmp (bad) jg fucomp (bad) jbe in sub clc sbb mov into sbb and (bad) pushl jne xchg pop std adc or or and popf push lods inc dec (bad) mov xchg out xchg aam cmp es aaa pusha je pop fbld mov je into inc push repnz rclb xor mov mov popf test fwait shlb sbb mov cmpb cmp mov mov cmp faddl push cmp cmp mov insl stos icebp cmc push fdivrs insb jg mov repnz adc mov push mov arpl imul out clc popa add movsl out adc mov lret scas pop mov ror mov dec in jnp jo or movsb enter or sub jno adc lds test sub test jmp (bad) xor rol xor jne fldcw fild stc stc mov clc cmp aas lea jl pop dec andl mov inc push ja cmp loop dec jns cmp sbb test inc bound pop add adc adc mov push push sti inc imul add jnp bound pop lahf scas adc (bad) cld adc mov outsb mov jmp aad aas mov icebp jp (bad) push or inc loop sbb mov inc add call fdivrl sub clc inc in jae dec adc imul movsl lock ss aad clc aaa sti and in clc in jns sub (bad) lret cmp lret cmp xchg cmp aad sahf clc sub jg fldl lods ss xchg jl fsubrs imul xor adc xor in mov adc sbb das adc push push mov stos adc fcompp xchg dec gs std movl out cmp mov and xor (bad) enter lcall adc sbb lds lcall xchg leave adc adc mov rorb lcall add lods xlat addr16 js movsb lea (bad) daa and and sbb imul fdivrs push xor cmpsl sub mov inc je and pop dec and je (bad) (bad) jbe ja dec cmp stc mov int mov sub fwait call add adc rcl pop imul sub sub loope ljmp jb xor or loopne jae les fldt push jge in mov out subb pop xchg jno enter (bad) or repz bound cmp push fdivp or push das movzbl jg sub sub cmp adc cmp stc dec xor rol jmp (bad) in ja mov push adc addl scas (bad) std popa jl (bad) ljmp popl popf jb push cld ljmp fs aam (bad) push sti mov inc jle out rclb xchg outsl push cmpsb dec push scas lods movsb fs test fwait test lcall in jnp loopne mov stos lcall dec push xlat jno leave sub hlt loop sti iret mov (bad) sbbl inc in stc sub int push inc mov sbb or mov test cld nop sbb cmp xchg mov ficom and aas leave mov pop data16 inc sub adc push ret clc jg xchg add pop int out jb (bad) fcomps mov add inc xor inc test loopne mov (bad) mov sub bound add adc inc fimul mov inc adc sub or push inc add (bad) lahf addr16 test mov dec jae mov push insl mov inc stos dec xchg adc and xor ja adc arpl jo jne mov sbb in jnp jl mov cs cmp inc dec and jmp je out or js dec mov pop mov shll test sbb test (bad) sub adc fistpll mov imul jp andl pop cmpsl fldcw mov loope (bad) into dec pop push test (bad) cmp mov cwtl bound (bad) mov add out mov lret lea test cmpsl fdiv xchg call ss inc (bad) lret fistpll push mov jne dec mov xlat xchg jmp fwait test push enter dec dec aas nop or adc dec roll or xor and out cmp push and fmull mov je rclb dec cmp hlt hlt sub push mov enter or imul or add orl inc push inc std push ljmp inc lock fwait inc insb push and xchg add adc pop and pop push jbe inc lods int3 lods cmpsl adc cmp push xorb test mov and inc dec and dec mov sarb jno fsubrs dec push ret cmpsb pop dec push dec out and insl pop inc fstl aas jmp ja add rcrb imul xor jl data16 jecxz bound lret adc lret pop mov fidivr dec out adc fistl imul pop sbb (bad) sar scas sbb jnp out lods cli mov (bad) aas mov scas cld or sarl cwtl and push mov decb (bad) cmc lret or and jecxz cmpsl outsl jns std and pop ljmp es fimull subl sbb push loope pop aam (bad) in repnz (bad) inc jecxz push or movsb fisubrl push mov stos jp andb fwait mov cltd mov test std lock push jmp xor iret aad sbb daa test or popf sub hlt aam (bad) lret loope push les divl cwtl push adc imul push aaa mov push push pop stc movsb cmp (bad) pop int jno dec int popa mov movsl cwtl shr js sub test je (bad) sub data16 xor (bad) (bad) mov xchg dec dec jo push int cli inc out sub cmp sbbl adc aaa cli aaa in mov adc rcrb ret adc xor sub mov ficom xchg mov ret leave inc fidivl fwait inc dec mov push or test (bad) mov push sbb jb cltd in bound push data16 gs mov lock or mov jbe xor or sub aas or xchg jo ffreep daa push or push fdivl aam mov dec cmc xor mov xor (bad) mov lock repz stos jbe inc dec mov cmp aad cmp xor shr sub fstps adc mov pop sub add test push sub inc fwait sbb je jmp push sbb mov (bad) lret cmpsb arpl adc icebp mov nop lods dec pop and add stos leave jle and cmp push mov push add push and (bad) jno mov shlb es dec push cmpsb xchg (bad) in or add pop push push les pusha hlt jge cmp adc jmp mov lock insb popa stc in pop jecxz sahf leave pop das paddd leave fstpl enter pop pop push cltd int3 adc dec xchg sub loop pop jo jmp js add cmc mov ficomp movsb jne into jle inc mov sub lods mov clc mov cmp push cmpsb aad sbb aam mov lcall test shll call out sub add insb cwtl jno inc push fwait sbb mov mov dec lock and lock mov push out push outsb xor lcall jl cmp xchg mov fldl sbb loop mov jmp das sub hlt xor push push mov pop jb ss movl inc push cmp lds jnp testl ret push and das cli mov aad adc mov adc push inc das pusha pop sbb inc and inc idivl pop cli pop pop cvtps2pd mov lock push rclb pop mov mov inc mov test movsl ss mov xlat popa sahf inc adc adc repnz je sahf and xchg xchg mov arpl (bad) or jl cmp (bad) or shlb jae xor adc ficoml dec add bound outsl sbb inc push xchg outsl jns test (bad) jg mov inc aaa or dec pop add rolb lcall (bad) cmp je mov call xchg daa mov push jbe add lds (bad) mov dec push xor add inc mov in int3 not xchg pop pusha ret mov leave shrl test (bad) (bad) and into lret fldenv mov invd or push lods ljmp dec adc push sbb jg rcll fstpl sarb sub add lret rolb mov (bad) inc rcr in xchg mov aad adc push xchg sub dec lds and (bad) ffreep xor decl xchg jns out out pushf jnp cmp xor ror inc and icebp iret lcall mov ret aas scas cmp push loopne insb lods pop cmp fdivrs add push bound out fwait jno push mov aaa movb mov push mov jns leave lds test mov je and insb dec (bad) jnp lret (bad) mov sub cmp movsl inc les or add addr16 xor jmp jb (bad) imul mov jo jo scas mov ficomp test mov mov aad mov fidiv and mov mov xchg lahf nop xchg jb lock mov sub leave dec ret mov stos mov mov lods in cmc add mov (bad) fistp jo insl push cmp mov jae stc jl lds jecxz push and daa push popa sub ja test or jns push xor and push sbb outsb xchg lea lock xchg mov nop (bad) jbe mov sub test movl shrl lret test bound push decb cmp pop fistpll pop es std and or loop pop xor test xchg push mov inc mov adc mov push mov stos pop adc add mov mov xchg out cmp mov mov das popa push sbb sbb hlt sbb xor inc stc pop cs jnp pop popf mov mov inc fidivr out stos inc and or fwait iret stos (bad) nop fisttpll xor jl in (bad) sub fiaddl pop push add ljmp clc mov movsl xchg adc xchg ljmp pop dec cmpsb cwtl lock unpcklps popf in sub icebp aad sub mov (bad) dec neg mov or mov xchg mov xchg shlb dec call push mov mov loopne add jae (bad) negl mov enter jp jns push mov add outsb push rcr ret sub dec pop aam or lods aam repnz fmull aam in aas fwait xor jo (bad) hlt (bad) icebp cmc out sar sbb insb sbb mov and xchg jb imul or push test push push rol popf in dec xor mov xchg xchg mov pop clc aad push test stos xor pop or sbb fcmovbe loope inc ja mov jg mov fstps lea fcoms std inc fdivrs add dec dec add pcmpeqw imul inc dec xor aad popa fnstenv cmp aam out cltd jmp clc popf jne pop sub out (bad) jg push or cmp es jge loop lds xchg cmp sbb and jnp addr16 mov cmp jp pop nop lods cld xor outsl mov into aam sub xchg sub fs out push xchg mov ror inc push lahf mov dec fdivs cmp adc fcmove mov add jnp lea jl mov push pop pop enter hlt jp fs lods mov stc push addb into xchg bound xor test xchg dec mov mov push sbb inc jge scas fwait pop push dec or fcoms mov pop adc jl dec popf xchg test dec ja add std rol stc xchg jne inc in mov imul sub xchg (bad) xor push jo xchg and mov and jmp ficoml in mov sbb and (bad) shlb sti lds test imul rcrb inc push test mov dec mov push shlb ds xor fisttp jl scas pop ret icebp (bad) aad ds inc movsb sbb arpl lret in push push cmp scas insb fidivl inc and push sbb push imul fwait cmpsb jae imul test fidivl mov lret mov loopne sti push movsl scas jns cmp hlt test dec testb xor sbb test add pop out cmc ret fwait stos outsb bound add sbb xchg (bad) mov dec lahf out cmp jg mov mov inc gs lds (bad) rolb dec push mov ret mov fs movsb ret mov inc aas xchg dec aaa pop or (bad) or (bad) ja lea out sub sar rcrb mov sub inc ljmp popa cmova insb xor gs cltd dec mov addl repz sub xchg fsubs add (bad) mov xlat loop leave fimul clc mov and ljmp stos (bad) or fcomps pusha insl (bad) push add ss cld in imulb cli cwtl loop inc inc xchg and sbb xchg (bad) ljmp insl popa loopne scas jo or mov mov mov test fisubrl repnz clc pop addr16 or leave insl mov subb data16 subb cli shrl (bad) jmp cmpsb lret mov rcll xor (bad) dec scas fcoml mov mov cltd add outsl jl dec push xchg sub mov rcrb xchg jns shlb dec push push cmp sbb (bad) imull into dec int3 mov xchg dec aas std das inc shlb roll sub nop mov adc rclb push mov push cli push std call mov xor (bad) pop xchg add xchg aam stos xchg pop jno push ss (bad) mov xchg dec mov jge adc (bad) bound and dec sbb (bad) sub mov xor cmp xor dec mov mov je lods push test push xor cmpsb fwait andl adc jno sub test das ds aad movsb ficoml (bad) dec push push fadds stc mul fwait jnp cmp inc xlat gs cltd (bad) mov jp fidivr mov out (bad) subl cmp lret adc push add push mov jp rol lret push into xor inc push mov inc mov sub mov and (bad) test mov iret sub mov popa xchg fcoms jmp movsb out xchg adc out and aaa push test push mov sub push add mov add ja pop ret (bad) out jp (bad) aad in lock lds repz pop roll cli mov adc cmpb pusha dec nop fistpl ret shl adc xor js push sub pop sbb xchg mov xor lahf sbb repz pop (bad) pop mov popf sbb test fcoms mov pop jbe pop push push jmp mov and sub inc mov loopne call leave aaa mov test out aas xchg pusha outsb and or rcll inc sti and popf je das push mov jmp xchg scas mov push xchg push into aad mov push push (bad) (bad) mov ss idivl mov mov jae sbb xor jo push in cmp es push pop ja or dec das sub mov ret push aam xor fbld jl orl mov test test or xchg mov push es aam fs inc and daa in pusha cmp movsb add cmp mov out insl ja or (bad) ljmp lds stos (bad) inc in mov arpl cmpsl jp mov add loop decl cmpsl and cli (bad) inc adc addr16 (bad) js adc test jmp push adc sti pop mov dec push mov sbb negb push ljmp fs je test sbb aaa and mov jecxz or arpl pop inc insl out pop (bad) jecxz ret ret rcl (bad) inc sti sarl aas mov cmc push ja mov loop lret stos cmp stos lods jl jmp pop cli cwtl pop jmp and or int mov aas int3 add sahf out fadd jmp fldenv rclb cmp and int3 rclb mov push fs mov xchg (bad) pop dec ret xor cmp movsl adc push sahf mov out adc mov add call cwtl out jb cmp (bad) lods or xor jp,pn in jge je sti aam jl and roll jmp popf out pushl mov inc adc (bad) dec mov mov fild repnz sub pop mov loope lahf stc pushf xor icebp xchg jns xchg jg and xchg adc adc (bad) icebp or aas fisttpll xor fcmovne add loope int3 daa mov mov xor in pushf xor mov insb xor pop (bad) jne idivb aaa loopne sbb adc ficompl out dec push cs (bad) and add cmp test (bad) mov incl stc push sub pop inc inc sub insl cmpl cmc push imul fs cmc xor mov xor aad push adc sub shrb call inc out xor inc dec cwtl in and cmp stos xor mov les andnps push and mov or xchg mov mov imul insl push lds jns xor xchg iret repnz pop daa adc in cwtl dec jp add mov aas jp cmp adc (bad) inc xchg cld push xchg push scas mov inc mov into in push jmp mov cltd in icebp adc cli and (bad) xor xor popa adc mov push in bound enter mov dec pop hlt in imul lcall out icebp (bad) jno dec sub cld test cmp movsb cmp test pop mov std sbb mov mul lahf push mov xchg xchg pop rcrb aad pop cmp xchg pop imul repz sub pushf xchg jg xlat jle inc movlps mov fcmovbe fcomps jnp cli xor or scas daa xchg imul push scas dec scas pushf in aaa inc pop into repnz mov outsb and xor faddp lahf jp imul inc dec (bad) jne cmpsl push mov stc cmp ds or bound sbb (bad) xor mov lea add hlt or jno push lods and popf mov test dec mov adc ljmp ret (bad) or push sub jp sub xchg push pusha (bad) xor out push push jbe xor sbb mov mov fwait bound adc or test sub mov imul add ret xchg xorb dec mov cmpl cmpsb lret loope lods xchg clc add adc pop mulb aaa or jecxz mov and std sub jb lret mov lret or dec dec loop xor pop xor dec cmp cmp adc popa sti cmpsb dec loopne (bad) xor (bad) mov xchg and mov push fdivs sbb dec loope dec mov lds addr16 lahf daa or push sub mov (bad) jbe sahf xor jo pop pop (bad) js or xor pop mov inc or test add out subb sbb inc mov clc popf cltd stos fs repz lret mov lock push pop daa fwait and icebp imul aas or sbb into data16 bnd xlat mov dec xchg sti ja dec ret inc lock mov sahf xchg negl jo pop inc jne push lcall and lea lods add push dec xor jo or mov lea mov sahf pop rcr cwtl or sub in pop xchg lods mov push lods push aaa out add pushf or xchg stc add in bound mov (bad) dec xor push pusha mov fsubrs xorb popf push ud2 inc push adc cs xor jb popa push xchg lcall cs fcoml sub repz jl cmp pop inc scas repz xlat int3 loope imul push fs addr16 pop dec cmpxchg or pop icebp ret xor add inc push dec inc add add add add or add jbe xor xor add add add add add clc or add je imul add add and add add add inc push dec inc add add add add inc insb outsl bound add add add inc push add or add add add add add add add adc add or add mov add adc add adc add add add add add add add add add add add add add add add add add add add add add add add add add push add rolb push add add add add add add push add rolb push add add add add add add add inc add add add enter or fadds pop add add xor push add xor push add mov add add xchg xchg add add add add add add add add add add add add add add add or add add adc stos or add add add add mov add add add add mov add add add add add add add adc pop or add arpl add adc decb add outsb add add add add add add adc movzwl add add add add xchg sbb add add add add add add add xchg add add add add add add add add add add xchg add add add add add add xchg add add add add add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and add add add add and xchg add add add cmp add add xchg add add and xchg add add add add xchg add or adc xchg add add xchg add add add daa add add xchg add add daa add add xchg movb add add daa add add adc cmpsb add add add daa add add adc sub add daa add add adc mov in adc or add add adc inc add adc add add adc les and add add adc dec push push add add sub add add add push or adc xor add add adc pop pop pop add add sub add add add pop and adc inc sub add add add sub adc push sub add add add or adc pop sub add add add add add add xchg add add add add add add add add xchg add add add add add add add add xchg add add add add add add add add xchg add or add add add add add add add add add xchg movb add add xchg add add add add add xchg add or adc cwtl sub add add add add xchg add or adc mov add add add xchg add or adc test add add xchg add or adc lods sub add add add add add add add xchg movb add add xchg add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add add add xchg add or add add sub add add add add add add xchg add or add add sub add add add add add add xchg movb add add add add xchg add or add add sub add add add add add add xchg add or add add sub add add add add add add xchg add or adc xor add add xchg add or adc xor add add xchg add or adc cmp add add xchg add add add add xchg add add add add xchg add add add add add add add add add add add add xchg add or add add add add add add add add xchg add or add add add add add add add add xchg add or sub add add add add add add xchg add or insb sub add add add add add add xchg add or adc je add add xchg movb add add add add add add add add add xchg add add add add add xchg add add add add add xchg add add add add add xchg add or mov add add add xchg movb add add xchg add push or adc mov add add xchg add push or adc mov add add xchg add or adc mov add add add xchg add or adc shrb add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add sub add add add add add add xchg movb add add add add xchg add or adc adc add add xchg add add add add xchg add add sub add add add add add add xchg add and add add xchg add (bad) add add add add xchg add (bad) add add sub add add add add add add xchg add (bad) add add sub add add add add add add xchg movb add add add add add add add add add xchg add add xchg add add cmpsb add add add add add add lahf add add add add add add add add add add add add add add add add add add add add add push add add add add add xchg sub movb add movb add add dec add add add add add add add add add add mov add add imul or sahf add add add pop sbb or add out xor jns movb add add add add add add add add add add add add add adc xor push add roll add addb add adc add add add add push add add add add add add add add add add add add pop arpl push push jb jp push dec dec add imul jae outsl jb imul gs cs imul inc outsl jb jae in cwtl in xchg in mov mov in scas in and fwait in stos in mov mov in stos in mov mov in scas in xchg in xchg in xchg jb,pn jae jne arpl add dec jns dec insb inc ja jns add dec je push inc push ss popa jne arpl outsl jb cmp cmp inc xor js jbe bound push ja arpl inc xor aaa cmp inc pop push bound arpl jns je insl add pop dec imul push add imul data16 cmp insl jns push push xor xor jbe inc imul pop add cmp ss xor push jp push xor inc push xor outsl push push dec imul push dec add add je outsl fs outsb outsw add jae gs cs gs arpl outsb add jb outsb add push js imul dec inc dec push xor imul dec imul outsb dec jno inc jno outsl arpl jno add push cmp aaa push dec dec xor jno push jbe push xor js inc imul dec add gs js insb dec cmp push popa insl inc jb popa jns je jb bound add arpl add dec jno inc arpl add jns popa insb jne push popa imul jae gs cs outsl insb insb arpl outsb jae inc outsb gs arpl addr16 dec gs jne bound inc inc js dec push add addr16 outsl push xor pop dec add jae insl bound inc js gs imul add je xor xor inc pop push imul inc inc jb add gs dec inc xor cmp js push push jae add jne dec outsb dec dec push imul dec pop outsl inc inc dec xor push jb jo jb jns outsb outsw add dec data16 arpl xor xor aaa push add push bound pop dec outsb jbe inc inc add push cmp pop gs push inc ss pop dec push addr16 cmp push dec xor jb addr16 inc pop jo add push xor dec push inc push inc dec pop xor jne dec push inc xor xor ss xor xor add inc push xor xor add dec push inc jo data16 jp inc outsl xor dec add jne insl jae xor pop cmp inc xor inc add xor arpl jo dec je inc bound jno dec jo xor push inc dec add xor xor push addr16 jb cmp jns jbe jp push push jae xor xor push push arpl ja imul bound dec dec popa inc dec pop dec bound gs add inc jp cmp dec insb add je jns gs orb stos loop mov subl scas loop (bad) loop mov orb stos loop (bad) loop stos loop stos loop (bad) loop lods loop mov subl scas loop stos loop lods loop stos loop scas loop lods loop mov orb scas loop stos loop scas loop mov orb lods loop lods loop stos loop scas add je gs outsl fs loop stos loop stos loop mov subb mov subl lods loop lods loop stos loop lods loop lods loop stos loop stos loop lods loop scas loop scas loop stos loop stos loop scas loop stos loop mov subl mov orb loop scas loop scas loop mov subl lods loop stos loop (bad) loop scas add pop inc jno popa insb imul subb stos loop lods loop mov subl mov subl lods loop (bad) loop stos loop mov orb loop scas loop stos loop stos loop mov subb scas loop mov subb stos loop (bad) loop lods loop lods loop stos loop lods loop scas loop stos loop stos loop scas loop scas add je outsl fs popa jae add jbe imul orb mov subl mov subl stos loop stos loop stos loop stos loop lods loop stos loop stos loop mov orb mov orb loop (bad) loop stos loop mov subb stos loop scas loop lods loop lods loop lods loop scas loop lods loop scas loop (bad) loop lods loop lods loop scas add imul subl (bad) loop stos loop (bad) loop lods loop stos loop stos loop scas loop lods loop stos loop (bad) loop stos loop lods loop stos loop lods loop lods loop scas loop stos loop lods loop lods loop stos loop mov subl scas loop (bad) loop lods loop lods loop scas loop mov subb lods loop lods loop lods loop lods loop scas add je dec gs popa addr16 subl stos loop scas loop stos loop lods loop lods loop (bad) loop mov orb loop stos loop mov subl scas loop scas loop scas loop lods loop stos loop scas loop scas loop scas loop mov subl (bad) loop mov subl stos loop stos loop stos loop (bad) loop scas loop scas add jae popa addr16 outsl js push push imul jae insb je loop lods loop lods loop scas loop scas loop mov subb mov subb loop mov subb scas loop mov orb lods loop mov subb mov subl stos loop mov orb stos loop mov subb mov subl lods loop scas add subb lods loop lods loop stos loop lods loop lods loop (bad) loop lods loop lods loop lods loop (bad) loop scas loop lods loop stos loop (bad) loop lods loop mov subb stos loop mov orb mov subb (bad) loop stos loop scas loop stos loop stos loop mov orb lods loop (bad) loop mov subl gs jb jo jb jns loop lods loop scas loop scas loop mov subl stos loop scas loop scas loop stos loop mov subl stos loop lods loop stos loop scas loop lods loop (bad) loop scas loop mov subl lods loop stos loop lods loop lods loop (bad) loop mov orb stos loop lods loop lods loop scas loop (bad) loop lods loop scas add je popa insb jne add subl mov subl loop mov orb (bad) loop mov orb loop scas loop mov subl lods loop stos loop stos loop stos loop mov orb scas loop stos loop lods loop scas loop stos loop scas loop (bad) loop mov subb lods loop stos loop scas add je popa insb jne add orb mov subl mov orb stos loop stos loop scas loop scas loop stos loop mov subl stos loop lods loop mov orb (bad) loop scas loop scas loop scas loop scas loop stos loop mov subl scas loop lods loop lods loop lods loop lods loop lods loop lods loop scas add inc insl imul push inc xor add imul outsl jns add pop push gs bound data16 insl inc add push outsb push inc arpl push add push dec inc popa push xor pop xor add aaa jo push xor inc add popa dec inc inc cmp dec pop jns xor js push xor dec insl insl insb jbe add outsl dec outsl inc fs insb fs js dec add cmp jbe outsl arpl outsl push cmp cmp js jb pop inc add jbe xor push pop jo xor outsb push push dec push inc dec jns js dec xor push xor add jns ss xor jne fs add push jp cmp cmp cmp jo cmp jno push arpl push dec xor pop push jne push js add xor push cmp add inc gs push je xor inc push push dec push xor bound xor inc cmp push jns arpl push jo inc insl outsb fs popa add inc xor jns imul push inc imul jo arpl dec add xor dec xor inc outsb imul insb push xor pop xor xor add jo addr16 dec pop xor push outsl add xor xor push push pop cmp imul push inc inc jbe dec jns push popa jbe jp data16 add dec dec dec xor xor pop inc dec jp imul fs cmp insl dec inc add push jbe fs jo dec push cmp push cmp bound outsl fs inc pop cmp inc pop outsl outsb xor popa inc pop cmp bound ja push add push ss gs je push push inc push add inc xor dec jae bound add pop push inc add push dec je dec imul imul dec insb ja xor push add cmp push jb popa inc inc xor add jns aaa xor push inc xor insl dec add imul imul ss bound jne xor insb inc cmp ja push js jp imul add cmp jp dec aaa inc imul push jb cmp inc inc bound pop push arpl inc jo dec cmp insb dec inc je push push pop js jns xor jae ss xor inc xor xor cmp pop gs inc add gs push xor add jb xor jp xor add outsb insb popa jno dec push push dec gs xor push jbe xor imul jne imul jns jno xor add imul push aaa jns js popa data16 add bound gs js xor jne insl add inc pop js jo inc dec jb push add push xor js push xor dec cmp push add push inc cmp xor ja aaa pop inc jbe outsb pop push add inc push inc push jno xor jno jno imul bound jp jne xor jns push xor fs jne inc outsl jbe add inc jae cmp push inc pop insl cmp add pop pop push imul inc xor imul add jo inc imul ss inc dec addr16 je aaa push push inc dec jb dec add pop dec inc dec dec jno add dec pop inc bound je dec jb imul push push outsb cmp arpl jb inc inc imul push push add push push ja inc inc xor js jne ja add dec dec dec push ja push jp add arpl inc jbe xor push xor push aaa add push push dec dec dec insl pop push jns bound push push cmp xor data16 xor xor arpl inc push push pop inc jno jbe insb inc cmp add cmp push dec jbe inc xor pop pop jbe cmp push inc dec arpl push dec xor imul jne aaa gs inc jo pushw add push push ja inc push jb push inc push popa dec arpl push gs push dec dec dec dec dec add cmp push push jb cmp popa inc inc outsb xor dec cmp dec jb js add bound inc dec xor dec add outsl dec outsl jp jp outsl bound dec inc xor jns inc add dec jne jb xor cmp inc dec imul inc bound inc inc cmp jb xor gs jns inc push dec imul dec popa dec add arpl push js jne xor xor dec insl add ss insb push js jp bound jb add inc js cmp pop pop dec push insb push dec bound push pop add push aaa jp pop push dec bound aaa pop xor ja jp jne push dec popa push jns outsl dec bound jbe jo gs insb push push add dec inc push inc jbe popa outsb inc push pop jbe push bound popa push ja cmp xor push dec push data16 arpl aaa dec xor jno inc jp add outsl xor insl jns jno outsl fs add jbe insb inc aaa inc pop dec dec js push dec push dec inc jns je xor inc inc add outsl jne dec jae bound pop cmp inc xor xor dec inc dec jae ss inc inc popa add inc push dec pop jns jp inc add gs push dec dec jae dec dec push cmp js dec ja arpl popa push popa je pop inc add xor je push jne xor je add outsb je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul jns jae je add add add jne jb imul add jb jns jo je outsl add jb popa add push add jns insl add add add arpl inc add add jb imul insl add pop inc add add je add add jb jns jo je outsl add add dec add insl add add push add jae je add add add add add outsb add add add add add or insb add add add add jae je add add add outsl add jb arpl add add add outsl add jb arpl add popa add popa add add add pop dec push dec jle push dec sbb dec outsb dec add dec sbb dec cmp dec or dec jl outsb dec inc dec and dec adc dec adc add jae je add add add insb add arpl je imul add jae jae add bound insb add add inc add je inc add add jne je imul inc add jae add bound insb add add inc add je dec add push add je add pop dec inc dec sub dec cmp pop dec adc dec inc dec inc dec pop dec pop dec jo push dec sbb dec push dec popa dec adc dec and dec daa dec insb dec arpl dec and dec sub xor cmovle pop dec ds inc dec dec dec arpl dec jno pop dec es sbb dec imul insb dec jae cmp dec sub push dec cmp dec add dec xor dec add dec inc dec imul dec sub dec push dec pop dec push dec pop dec jne adc dec add dec pop dec sub dec pop dec push dec outsb dec xor push dec jle je dec dec or add jae je add add je jb imul pop add add inc add je push add insb add add pop push add jae je add add add jne jb imul add jb jns jo je outsl add jb popa add push add imul add add add outsb add add add pop dec add jns add add dec add popa add add add add outsb add add add add jns add push add add add imul add jae add add add add add add add data16 add add add dec add add add add add add jbe outsl add add pop push add jae je add add add jne jb imul add jb jns jo je outsl add jb popa add push add inc add jns jo je outsl add add outsb add data16 jb insl add add add add inc add add add imul add add add add add add inc add add add inc add add mov push inc stos loope nop inc pop outsl add mov pop push sbb mov add add add push pop push adc sbb sbb adc sbb push sbb sbb and add add add pop add sbb sbb adc sbb and add add add add add pop sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb sbb push sbb sbb add push push pop add or sub sbb push pop add add sbb add sbb sbb pop add push pop add sbb or add sbb add sbb sbb adc push add or adc add push push push and sbb sbb sbb xor push push sbb push add and push add add or sbb and adc adc add sbb sub and add sbb add sub push add add push add push jb jo outsl outsb inc js gs imul ja add add or add or add add sbbb jns je insl cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add enter fisubr add add add shrb add add add add pop inc outsl jb js dec popa imul jb gs insb add add add and 