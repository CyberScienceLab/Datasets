xchg mov jb push mov jb push jb inc mov jb mov mov jb cmp add int jb add jb xchg mov jb outsb movsb jb bound jb (bad) mov jb mov mov jb fwait mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb ret outsb add jb xor movsb jb imul insb mov jb jne jb out mov jb frstor jb loopne inc add add mov inc add inc add pushf sub add add add push add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add push push inc mov or mov loope add add add add add and and daa and arpl outsl outsb imul and dec xor add pusha incb mov xchg jmp sbb mov jbe jmp mov test inc cmp xor or stos add xchg js add jae add add add popa outsb addr16 add imul add and and sbb add add sbb add add add add add add add add add adc adc add add sub add inc add add sbb add add add push add outsb add add adc add add add add or add sbb add add add push add sub add sbb add xor add add add add add rolb add jae jae mov jae jae jns adc repnz rcrl jae faddl jae lods add mov jae or xchg jae cmpsb fwait jae mov jae sbb jae mov jae mov jae (bad) pop test jae int jae jae jae jae jae jae jae mov (bad) mov jae or jo xchg jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae mov mov add add add add add add add add rolb add jae jae jae jae repz jae repz jae jae jae jae repz repz mov jae jae jae mov jae mov jae jae jae jae mov mov jae jae jae jae jae jae jae hlt add jnp add jae add add hlt repz or sti hlt jae sti sti sti sti sti hlt jae jnp sti sti or jae jnp add or jae sti sti sti or hlt jae sti hlt hlt or hlt jae sti or sti hlt sti repz sti sti sti sti sti add sti mov sti hlt jae jae sti sti sti jae jae jae jae jae jae jae jae jae mov jae lock mov jae mov jae mov jae xchg jo jae jo jae jo jae jo jae jb jae jb jae jo jae jl jae mov mov add add add add add add add add add add add add add inc jae jae jae into xchg jae (bad) pushl adc mov push xor jae sbb jae cltd xchg jae enter in in jae add jae mov lret jae adc mov mov jae in (bad) jae orb mov sbb divl stc ljmp lret or and int jae (bad) jae fidiv jae fidivr (bad) loopne jae xchg xchg jae call adc mov jae mov test (bad) jae pop pop jae sbb jae in jae fnsave jae or jae (bad) (bad) jae fmulp jae lods lods jae xchg jae (bad) jae or jae mov jae pushl jae stos lods jae mov pushf jae mov fdivl int3 mov jae popf popf jae fadds enter xchg stos stos jae imul jae cmc jno mov xlat jae lods xchg jae lods pop jae mov jae lods xorb movsb jae (bad) mov (bad) stc loop lret jae iret enter (bad) jae shll stos fcomp jae in in jae mov jae jmp movsb jae jae jae adc jae pop pop jae or jae (bad) or jae idiv jae lods lods jae clc in jae (bad) (bad) jae out jae xlat (bad) jae lods lods jae mov mulb and out fidiv ret xorl jae leave scas jae mov int3 jae mov jae stos (bad) jae (bad) fidiv mov jae movsl movsl jae lds jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb push das das das jb jb jb jb jb bound bound jb je je je,pn das ja das das das das das das gs jge jb je je jle push je push push das das das je adc jge jge jb je and push and push fs add xor bound jb je push adc pop jae dec push push push pop adc cmp das jb jb je jo pop adc dec inc pop inc push cmp sbb xor jb jb je arpl outsb cmp push push xor xor jge jb jb jb pop jp pop bound dec dec adc jns js cmp das jb jb jb pop pop dec arpl xor fs sbb pop dec inc das das jb jb jb pop pop jp and pop pop pop jo push sbb jb jb jb gs inc pop and and and daa sub jb jb jb cs pop push pop push dec dec dec push pop ja pop pop and das jb jb cs push and ja and adc xor popa sbb jb jb outsb push es dec push adc adc dec sub jge jb cs push es dec dec push jl push pop sub push dec sbb push das jb pop pop push push inc ja push jne outsl insb outsl jbe jno cmp push push jb adc push aaa cs inc cmp cmp pusha jnp inc je das jb jb adc pop push sbb push push push push push sbb pop jge push jb jb jb adc pop pop adc inc jns xor push push push push push jb jb jb jb jb pop cs ja push push push je xchg jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb jb mov jae mov jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae mov sub add adc add and add add or add add inc add add add add add add jae jae pop push jae sbb jae pop pop jae add jae add jae add jae or xlat (bad) jae push push jae or jae or jae lock repnz repz jae repnz jae div jae hlt cli jae (bad) std jae cmc cmc jae div jae cmc std jae stc stc jae sti (bad) jae (bad) (bad) jae std std jae (bad) std jae stc jecxz (bad) jae clc in into cld in lret jae loope jae loopne jae out jae out jae jecxz jae out jae in jae jecxz jae in jae jmp out jae jmp jae ljmp int in jae jmp loopne mov ljmp ljmp mov (bad) jae out jae in (bad) jae ljmp mov (bad) jae aam jae aam jae aad jae aam jae aam jae rcr jae (bad) jae (bad) jae (bad) jae fstp jae fstp jae (bad) jae rol jae ror jae fmul jae fcmovne jae ret ret jae ret ret jae mov movsl ret mov (bad) les mov scas ror cmpsb iret iret jae iret iret jae leave leave jae iret iret jae jmp jae call mov jae fidivl jae fnstsw jae (bad) mov jae int3 mov test mov lods sarb mov int jae mov jae mov jae mov lods jae mov jae mov cmpsl jae mov mov jae cmpsl movsb jae mov test test jae xchg xchg jae xorl mov stos mov lods mov jae mov jae mov jae mov jae mov jae jae jae push jae and jae add jae jecxz jae ret std jae mov mov jae mov inc jae scas and xchg add cltd loop mov mov jae jae jae addr16 and jae inc jae jecxz jae ret jae,pt mov sbb mov bound stc inc jae out and faddl jae mov jae mov mov jae jae jae jo jae ja jae jne jae jp jae jns jae jg jae jge jae push popa jae dec inc jae das and or jae in jae (bad) mov mov jae dec pop jae jae jae jae jae jae jae jae jae jae jae jae jae jae bound jae inc add and jae add jae loop jae ret mov mov jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae bound mov jae and mov scas jae ret mov mov jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae bound xchg mov add mov mov mov mov jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae bound (bad) and mov ret cwtl mov mov jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae bound add mov add int3 ret test mov jae jae jae jae jae jae jae jae jae jae jae jae pop jae jae jae jl push dec jae xor je jae jae outsl and jno jg push outsb adc jae jae sbb jbe sbb daa inc push bound jae cmp pop add cmp jae jae dec cmp pop jne dec pop jae jae jae in inc addr16 jns adc jae jae xor inc imul jae dec es pusha inc push push arpl push sbb sbb sub jae pop push and and sub sub push jae jae gs push adc push jae jae jae aas xor adc aas dec cmp jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae dec jae jae mov mov jae jb jae jo jae jo jae jo jae jo jae jo jae jo jae jb jae jb jae jo jae jl jae mov mov add add add add add add add add add add add jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae push push gs adc clc std adc test loope adc loopne adc loopne adc std adc jb jae jae jae jae jae jae sbb jb sub ja das and div sub mov cs cmp sub jae jae jae jae jae jae jae loope push data16 push (bad) out sbb sbb mov adc xchg std adc jmp loope adc xlat adc xor adc xor sub and sub (bad) (bad) adc xchg ljmp mov sub mov sub sub jbe jae jae jae jae jae jae push push cmp sbb mov stc loop movsb fxch mov stc ljmp sbb mov push pop mov adc push mov adc (bad) ljmp mov adc mov sbb mov adc mov std in mov idiv mov sub cs sub jae jae jae jae jae loop pop sub add mov mov xlat mov repz add mov and repnz mov loop mov mov push mov imul mov mov mov push pop mov das das stos cli sub jae jae jae jae jae push adc push jmp sbb mov in mov cli stc mov sbb mov sbb mov mov mov jl mov mov (bad) adc mov sub add jae jae jae jae jae jae jae imulb es adc clc mov rorl lods scas mov (bad) decb or lods mov scas mov add mov orl sti sub nop stc cs jae jae jae jae jae jae jae jae out push jb adc roll mov mov adc xchg xchg mov mov cltd mov popf mov cs mov mov sbb adc ja jae jae jae jae jae jae jae jae jae jae adc inc in sbb mov stos movsb mov push add mov sahf sahf mov lods lods mov in in mov and or (bad) mov cld adc mov cs stc cld push adc jae jae jae jae jae jae jae jae jae adc pop in add test mov call mov sub mov pop pop mov div mov repz push push mov and mov or mov lahf mov adc mov cs or jae jae jae jae jae jae jae jae jae jae loopne adc add mov ljmp mov push push mov add mov pop pop mov (bad) jl mov xlat mov mov mov adc mov sub cld cld push push jbe jae jae jae jae jae jae jae jae sub jb sbb sbb repnz fstp mov fisttp (bad) mov (bad) mov out out mov rol mov iret movsb mov add mov sub leave stc adc jnp jae jae jae jae jae jae jae jae sub ja push push les mov aam mov out (bad) add mov repnz (bad) decb sti sti mov icebp icebp mov add mov push adc mov mov mov sti jecxz (bad) adc cmp adc jae jae jae jae jae jae jae jae sbb dec (bad) or into into mov sbb rcl mov repnz (bad) jl fcomip repnz cmc lock adc mov scas mov push pop mov adc jae jae jae jae jae jae push xor ja sbb lret (bad) rol leave stc stc mov push push mov (bad) (bad) mov lods fmull scas scas mov addl mov iret xchg mov stc in cli cs das sub jae jae jae jae add add (bad) jge mov lret mov pop pop mov stos lods mov fidivr mov nop mov mov mov adc mov mov test loope pop mov sub cmp jae jae rolb pop mov or mov mov push push mov fimul jmp movsb mov adc mov in mov rorl or mov rorb sub jae jae jae add pop aam or (bad) lock loopne mov add mov addb lret mov mov mov rorl xchg mov ret mov mov (bad) mov or mov push pop mov adc (bad) adc addr16 jae jae jae jae jae aam or push push push in push push mov push push mov mov lahf push mov mov mov mov mov rol mov sbb das mov adc cld adc jl jae jae jae jae jae jae jae jae jae jae add push popa fimull or in adc xchg jno clc mov jmp mov in in mov loopne fcomip icebp mov add cltd std sub (bad) sti sub or adc xor (bad) adc jno jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae cmp jo and jnp and push xor aas and aas aas adc aas aas adc cmp and cmp inc or cmp jns push push jo jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae mov xchg outsl jo mov jb mov jb mov jb mov jo mov jo mov jo xchg jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae jae mov and add insb bound xor inc or add add (bad) or add add add pop add add addl add add (bad) inc add add add add pop (bad) inc add add add (bad) inc add add add addl pop addl adc inc add add add addb add add add add addb add add jg add add add add cmp inc add add add jle add add add xor add or add add mov inc add lock add (bad) decl add add add add add jmp xor pushf sub test inc add add test add mov add mov add dec outsl jne imul add outsb bound add inc imul popa outsb imul add add jp add add add bound (bad) (bad) (bad) incl add add add jo add add add sub add xor add mov inc add add add inc add add add inc add add add add add add inc add add sub inc add add add add add add add adc xor add add add sbb add loopne jp nop or add inc add add add add add add add add jge add jge add pop add add jge add (bad) (bad) incl add add add add jp hlt jge add (bad) (bad) call inc add inc add inc add inc add add js inc add adc adc push inc add inc add inc add incl add (bad) add add incl add jle add add add add jp add add add add fidiv add add incl add jo add hlt add add jp add add add inc add inc add add or add adc add add add push add add pusha incb mov xchg jmp adc add rcrl add add add enter dec add add add xor or inc xchg fdivs mov add add add add add add add add add insb pop inc add add sub mov scas add insl sub add add add add add add add add add and inc add add add add in test mov xchg add add sbbb add or add add add inc add add push add add sub xchg inc cmpl repnz xchg fisttpll add add sbbb add or add add add aam add add inc dec sub inc mov sbb roll add add sbb add add add add and inc add add add add dec faddl cmpsl mov dec mov mov mov push add add add add add add inc add add push add add ficomp dec xorb mov pop add add add add or add add add add add add inc in (bad) jb cli popl push dec adc mov add or add sbbb add add add add loopne inc add add add add cli cmp mov lcall or add sbbb add or add add add add add push add add (bad) call inc mov xchg adcl add add add add add add or add add add mov add add add (bad) jg sbb xorb (bad) or add sbbb add or add add add add add add adc add add add popa inc add (bad) (bad) incl add add inc add inc add add add xor add insb popl add add add add or add add inc add add add xor mov push cmp inc add add add addl mov adc xor add push xchg adc add enter loopne jp pushf popl adc add inc add add add add add add add inc add jg add add inc add add add push xchg add add add add add jg add add add adc inc add add add add add ds add jg add popl sbb add inc add add add add add add add add aas inc add jg add popl sbb add add add push xchg aaa add add jp fmull add inc add add add add add lock inc add jg add popl sbb add inc add add add push xchg or add add add add add jg add popl or add add add add add add jg add nop inc add add add adc pop add add add add add inc add jg add nop inc add add add adc pop add add add add add inc add jg add nop inc add add add adc pusha add add add add add jp xor inc add add add adc add add add add sbb add jg add inc add add inc add add add push xchg add add je inc add jg add add add inc add add add add add add inc inc add jg add add add add adc jo add push xchg adc add sub inc add jg add add add add adc je add push xchg adc add mov add jg add inc add add add adc js add push xchg pop add add inc inc add jg add add add add adc jl add push xchg add add inc add jg add add inc add add xchg push add add jp rolb add adc test add push xchg or add clc inc inc add jg add add add adc mov add push xchg or add push inc inc add jg add add inc add add inc add add add jg add add add adc nop add add add add add inc add jg add nop inc add add add adc xchg add add add add push jg add nop inc add add inc add add xchg and add les add jg add nop inc add add add adc pushf add add add add add inc inc add jg add nop inc add add add adc mov xchg sldt add add jg add nop inc add add add adc movsb add add add add add add add inc inc add jg add inc add add add xchg sub add xor inc add jg add xchg inc add add inc add add inc add add add jg add xchg inc add add add adc mov add push xchg pop add add dec inc add jg add xchg inc add add add adc mov add push xchg or add dec dec inc add jg add inc add add add adc mov xchg sub add movsb dec inc add jg add xchg inc add add add adc mov xchg or add add add jg add inc add add add adc rolb add add add add add add add jg add inc add add add add add add add add jg add inc add add add adc enter push xchg adc add adc inc add jg add add add add adc int3 add add add add add inc add jg add inc add add add adc rolb add push xchg and add int3 dec inc add jg add add add add adc aam add push xchg push add add dec inc add jg add add inc add add add add add add add jp pushf xchg inc add add add adc faddl add push xchg add add dec inc add jg add add add adc loopne add push xchg push add add jp mov add add adc in add push xchg add add jg add xchg inc add add add adc call xchg daa add add dec inc add jg add xchg inc add add add adc in add add add add add inc add jg add xchg inc add add add adc lock add add add lods dec inc add jg add xchg inc add add inc add add add add add add add dec inc add jg add xchg inc add add add adc clc add add add add add add jg add inc add add add pop add add add jge add (bad) (bad) incl add add add add dec inc add jg add jge add (bad) (bad) incl adc add add push xchg xor add push push inc add jg add inc add add add adc add add push xchg xor add add add add jg add inc add add add add add add add add add add inc add jg add inc add add add add push xchg sub add push jg add add add add adc adc add push xchg xor add les add jg add inc add add add add or inc add inc add add inc add xor inc add inc add add inc add inc add adc adc push inc add xor add inc add add inc add xor add inc add add inc add xor inc add inc add add inc add xor inc add inc add add inc add ss add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add ss add adc adc push inc add ss add adc adc push inc add aaa inc add adc adc push inc add aaa inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add xor add inc add add inc add aaa inc add adc adc push inc add cmp mov add inc add add inc add cmp mov add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add xor add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add inc add adc adc push inc add xor add inc add add inc add xor add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add cmp mov add inc add add inc add cmp mov add inc add add inc add cmp add adc adc push inc add cmp add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add xor add inc add add inc add cmp add adc adc push inc add cmp inc add inc add add inc add cmp inc add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add xor add inc add add inc add add add jp add add add inc add (bad) (bad) incl add add jp add add add add pusha jnp cwtl push inc add add add inc add add add add add add add add mov add add inc add inc add add add add inc add inc add adc xor add push xchg adc add pusha pop inc add jg add add add adc cmp add push xchg and add add add add jp nop mov and add add add push xchg add add sbb loopne jp mov add add adc inc add add add add add add add add jg add add add adc inc add add add add add pop inc add jg add mov sbb add inc add add add push xchg pop add add jp rorb add adc dec add add add add add add add jg add mov adc add add add push xchg daa add add pop inc add jg add mov daa add add adc push add add add add add inc add jg add mov add add inc add add add push xchg or add add add add jp add add inc add add add add add add pop inc add jg add lea push add add adc pusha add add add add add add jg add lea sbb add inc add add add add add add jg add lea sub add inc add add add push xchg xor add add add add inc add jg add lea xor add add add add add add inc add jg add inc add add add adc jo add push xchg add add les add jg add inc add add add adc je add push xchg sbb add add add add popa inc add jg add inc add add add add push xchg and add jl inc add jg add inc add add add adc jl add push xchg add add popa inc add jg add add add adc addb add add add add inc add jg add add inc add add inc add add add jg add add inc add add xchg push add add bound loopne jp movsb lea push add add adc mov add push xchg or add dec arpl loopne jp mov inc add add add adc nop add add add add add add add jp mov add add adc xchg add add add add add fs add jg add lea aaa add add adc cwtl add add add add add add jg add lea xor add inc add add inc add add add jg add lea add add inc add add xchg push add add jp cld lea push add add adc movsb add add add add add inc add jg add mov and add inc add add xchg sldt add gs add jg add inc add add add adc lods add add add add add inc add jg add inc add add add adc mov add push xchg push add add jp cmp add inc add add inc add add add inc add jg add inc add add add adc mov xchg sub add cmp inc add jg add inc add add add adc mov xchg and add cwtl addr16 add jg add add add add adc rolb add add add add addr16 add jg add add add add adc les add push xchg adc add push push jp js inc add add add adc enter push xchg sub add lods push jp orb add adc int3 add add add add add imul mov add inc add add add add add add imul pushf mov adc add inc add add add add add add add imul test inc add add add adc fadds add push xchg or add sbb inc add jg add add add adc faddl add push xchg pop add add inc add jg add add add adc loopne add push xchg sbb add aam inc add jg add mov sbb add inc add add add add add add add imul jg add mov add add adc call xchg sbb add mov add jg add mov sbb add inc add add add add add add call jg add mov xor add inc add add add add add add add add jg add mov das add add adc hlt add add add add add jg add popl adc add inc add add add add add add cld insb inc add jg add inc add add inc add add add add add add add inc add jg add inc add add add adc add add push xchg or add mov inc add jg add popl or add inc add add add push xchg adc add adc add jg add popl adc add inc add add add add add add add add jg add add add add adc or add push xchg xor add enter loopne jp push popl xor add inc add add add add jge add (bad) (bad) incl add add add add inc add jg add jge add (bad) (bad) incl add add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add push inc add inc add add inc add push inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add inc add push inc add inc add add inc add inc add push inc add inc add add inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add pop inc add push inc add inc add add inc add add add jp add add add pop inc add (bad) (bad) incl add add inc add add add bound xor add add add cwtl inc add add add jo add add add jo add add add inc add add add jo add add add js add inc add add add addl in inc add adc xor add push xchg add add clc js add jg add cwtl inc add add add adc cmp add push xchg xor add add add add add jg add cwtl inc add add add add push xchg aaa add add jg add inc add add add adc inc add add add add add inc add jg add inc add add add adc inc add add add add add inc add jg add cltd inc add add add adc dec add add add add add jp add jg add inc add add add adc dec add add add add add jnp add jg add cltd inc add add add adc push add add add add add add jg add inc add add add adc push add add add add add add add jnp add jg add inc add add add add push xchg xor add xor inc add jg add inc add add add adc pop add add add add nop jl add jg add inc add add inc add add add push xchg adc add add add add jl add jg add add add adc add add add add dec jge add jg add add add adc push xchg sub add movsb jge add jg add add inc add add add add add add jle add jg add add inc add add add push xchg adc add pop jle add jg add add inc add add add add add add jg add add inc add add add push xchg or add adc inc add jg add cltd inc add add add adc jl add push xchg sub add add add add inc add jg add cltd inc add add add xchg and add int3 jg add jg add cltd inc add add add adc test add push xchg add add sub jp lock inc add add add adc mov add push xchg sbb add test jp cld cltd inc add add add adc mov add push xchg pop add add addb jg add inc add add add adc nop add add add add cmp inc add jg add lcall inc add add inc add add add jg add inc add add add adc cwtl add add add add add addl xor add inc add add inc add add add inc add jg add inc add add add adc mov xchg and add lods (bad) inc add jg add inc add add add adc movsb add add add add add addl jg add add add add adc test add push xchg and add add add add add jg add inc add add add inc add add add addl jg add add add add adc mov add push xchg and add sbb inc add jg add add inc add add inc add add add inc add jg add add add adc mov xchg push add add test loopne jp movsb lcall inc add add inc add add add test loopne jp mov add add adc rolb add add add add jp les add inc add add add add add add add test loopne jp rcrb add inc add add add add add add add add jg add lcall inc add add add add add add add jg add lcall inc add add add add add add add xchg loopne jp lock inc add add add add add add add inc add jg add lcall inc add add add add add add add jp or add inc add add add add add add add add add mov loopne jp adc add inc add add add add add add add add add add jg add fwait inc add add add add add add add add mov loopne jp and inc add add add adc call xchg sbb add and inc add jg add inc add add add adc in add add add add add jg add inc add add add adc lock add add add add mov loopne jp inc fwait inc add add add adc hlt add add add add cmp jp push fwait inc add add inc add add add add add add add jp pusha fwait inc add add add pop add add add jge add (bad) (bad) incl add add add add mov sarb add jge add (bad) (bad) incl adc add add push xchg pop add add jp insb fwait inc add add add adc add add push xchg sub add loopne inc add jg add add add inc add add add add add add cmp inc add jg add add inc add add add push xchg sbb add cwtl mov loopne jp cwtl fwait inc add add add adc adc add push xchg adc add hlt mov loopne jp test inc add add add add add jo add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add jo add adc adc push inc add jno add adc adc push inc add jno add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add jno add adc adc push inc add jno add adc adc push inc add jb add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add jb add adc adc push inc add jae add adc adc push inc add jae add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add jae add adc adc push inc add jae add adc adc push inc add je add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add je add adc adc push inc add je add adc adc push inc add jne add adc adc push inc add jne add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add jne add adc adc push inc add jbe add adc adc push inc add jbe add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add jbe add adc adc push inc add jbe add adc adc push inc add ja add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add ja add adc adc push inc add js add adc adc push inc add js add adc adc push inc add inc add adc adc push inc add outsl inc add inc add add inc add outsl inc add inc add add inc add js add adc adc push inc add add add add add pusha inc add (bad) (bad) incl add add add add add add add add lea add add adcb add lea add add rorb add int3 lea cmp add rorb mov push xchg inc add inc add add add xchg inc add add add add push xchg add add jg add add add adc cmp add push xchg aaa add add xchg inc add jg add add inc add add add push xchg or add dec xchg inc add jg add xchg inc add add add adc inc add add add add add add add jp loopne inc add add add add add cwtl inc add jg add xchg inc add add add add push xchg add add add jg add xchg inc add add add adc dec add add add add add jg add add inc add add add push xchg push add add inc add jg add inc add add add adc push add add add add add inc add jg add inc add add add adc pop add add add add int3 cltd inc add jg add xchg inc add add inc add add add add add add add add lcall sub add inc add add add push xchg adc add test jp xor inc add add add adc add add add add add lcall inc xchg inc add add add adc push xchg sub add add add add inc add jg add inc add add add add add add add jg add add add add adc jo add push xchg das add add fwait inc add jg add inc add add add adc je add push xchg xor add push pushf inc add jg add add inc add add add push xchg add add lods pushf inc add jg add add add adc jl add push xchg add add or jp mov add add adc addb add add add fs inc add jg add add inc add add inc add add add popf inc add jg add add add adc mov add push xchg xor add sbb inc add jg add xchg inc add add add adc mov add push xchg add add js inc add jg add xchg inc add add inc add add xchg adc add aam inc add jg add xchg inc add add add adc xchg add add add add add lahf inc add jg add xchg inc add add add adc cwtl add add add add add jp or add adc pushf add add add add add lahf inc add jg add xchg inc add add add adc mov xchg push add add add jg add xchg inc add add add adc movsb add add add add add jg add xchg inc add add add adc test add push xchg sub add cld mov jp inc xchg inc add add inc add add inc add add add inc add jg add inc add add add adc mov add push xchg or add add add add jp pusha xchg inc add add add inc add add add mov jp insb xchg inc add add add adc mov xchg or add insb mov jp js inc add add add adc mov xchg xor add enter loopne jp adcb inc add add add add add add add inc add jg add add inc add add add add add add add jg add add add adc enter push xchg add add fsubl jp test inc add add add adc int3 add add add add add movsb inc add jg add add inc add add add add add add add jp enter sub add inc add add add add add add add movsb inc add jg add xchg inc add add add adc fadds add push xchg adc add add add add add jg add xchg inc add add add add add add add add jg add xchg inc add add add adc loopne add push xchg or add add inc add jg add xchg inc add add add adc in add push xchg or add pusha cmpsb inc add jg add add inc add add add add add add add jp sbb add inc add add add add add add add cmpsl inc add jg add add inc add add add add add add add add jg add xchg inc add add add adc hlt add add add add add cmpsl inc add jg add add add add adc clc add add add add add inc add jg add inc add add add pop add add add jge add (bad) (bad) incl add add add add jg add jge add (bad) (bad) incl adc add add push xchg or add sbb inc add jg add add add inc add add add push xchg and add js inc add jg add inc add add inc add add add add add add add test jp js inc add add add adc or add push xchg and add xor jp test add inc add add add add add add add add add jp pushf xchg inc add add add lea push lea pop adc adc push inc add lea push lea pop adc adc push inc add mov push lea pop adc adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add mov push lea pop adc adc push inc add mov push lea pop adc adc push inc add popl push lea pop adc adc push inc add popl push lea pop adc adc push inc add inc add inc add inc add add inc add lea pop adc adc push inc add lea pop adc adc push inc add popl push lea pop adc adc push inc add nop inc add inc add inc add add inc add nop inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add nop inc add inc add inc add add inc add nop inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add lea pop adc adc push inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add lea pop adc adc push inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add lea pop adc adc push inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add lea pop adc adc push inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add xchg inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add add add jp add add add (bad) (bad) incl add add inc add add add pusha jnp pusha stos inc add add add inc add add add inc add add add inc add add add add add add inc add add add mov add inc add add add inc add add adc xor add push xchg sbb add sub add add add add adc cmp add push xchg pop add add jp je inc add add add adc cmp add push xchg sbb add loopne inc add jg add add add adc inc add add add add add jp nop xchg sldt add adc inc add add add add add jg add add inc add add add push xchg push add add mov add jg add add inc add add add add add add inc add jg add add inc add add add push xchg add add jp mov inc add add add adc push add add add add add mov add jg add add add adc pop add add add add add add jg add xchg push add add adc pop add add add add add mov add jg add xchg xor add inc add add add push xchg adc add sbb inc add jg add xchg adc add inc add add add add add add add add inc add jg add xchg sbb add add add push xchg xor add add add add mov jp in xchg xor add add add add add add mov jp hlt xchg add add adc jo add push xchg add add add add add jp or add inc add add add add add add mov jp sbb add inc add add add push xchg xor add inc mov jp sub inc add add inc add add add add add add jg add inc add add add adc addb add add add add mov jp inc xchg aaa add add adc test add push xchg and add pop mov jp push xchg and add inc add add xchg or add mov inc add jg add add add add adc mov add push xchg or add adc add add add add adc nop add add add add add add jg add add add adc xchg add add add add enter loopne jp xchg xchg sub add inc add add xchg daa add add jp movsb xchg daa add add adc pushf add add add add cmpb add add add adc mov xchg xor add fdivrl jp les add inc add add inc add add add mov jp aam inc add add add adc test add push xchg sub add xchg mov jp faddl add inc add add inc add add add mov jp call add add adc mov add push xchg sbb add dec mov jp clc xchg sbb add inc add add inc add add add add add jg add mov adc add add xchg add add add inc add jg add inc add add inc add add inc add add add inc add jg add mov and add inc add add add add add add mov jg add inc add add inc add add add add add add add roll jg add mov add add adc enter push xchg and add add add add add jg add add add adc int3 add add add add add roll jg add inc add add add adc rolb add push xchg push add add inc add jg add inc add add add adc aam add push xchg adc add mov inc add jg add add add add adc fadds add push xchg xor add in inc add jg add add add add adc faddl add push xchg add add inc ret inc add jg add inc add add add adc loopne add push xchg xor add pushf ret inc add jg add add inc add add add add add add add ret inc add jg add add add adc call xchg or add push les loopne jp cwtl mov or add inc add add add add add add add jg add add add adc lock add add add add jp mov inc add add add adc hlt add add add add add add add inc add jg add add add adc clc add add add add add add add lds loopne jp enter or add add add add add add add movb jg add mov sub add inc add add add add add add add add jg add mov sub add inc add add add in inc add (bad) (bad) incl add add add add movb jg add jge add (bad) (bad) incl adc or add push xchg sbb add insb movl hlt mov sbb add inc add add add push xchg das add add movl add add inc add add add add add add add inc add jg add mov or add add add push stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add lods inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add scas inc add stos inc add inc add add inc add mov add stos inc add inc add add inc add inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add inc add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add inc add stos inc add inc add add inc add stos inc add inc add add inc add stos inc add inc add add inc add mov add stos inc add inc add add inc add mov add stos inc add inc add add inc add add add jp add add add (bad) (bad) incl add add inc add add add popa jnp clc enter add add add add enter add add leave inc add add add enter add add leave inc add add add roll sub add js addl fcoms adc xor add push xchg adc add rcl add jg add xchg inc add add inc add add add add add add add add add inc add jg add xchg inc add add add add push xchg or add js inc add jg add inc add add add adc inc add add add add add rolb loopne jp sbb add inc add add add add add add roll loopne jp and inc add add add adc dec add add add add add add add jp xor add inc add add add add add add roll loopne jp cmp inc add add add adc push add add add add add add add add jg add add add add add add add add jg add add add add adc pop add add add add add aam add jg add inc add add add adc pop add add add add add inc add jg add inc add add add adc pusha add add add add mov inc add jg add add add inc add add add add add add (bad) inc add jg add add add adc push xchg sldt add add jg add add inc add add add add add add (bad) inc add jg add add add adc jo add push xchg xor add and inc add jg add add inc add add add add add add jg add add add adc js add push xchg add add (bad) inc add jg add xchg inc add add inc add add add add add cmp inc add jg add xchg inc add add inc add add xchg pop add add jp loopne inc add add add adc test add push xchg aaa add add fadds loopne jp lock inc add add add adc mov add push xchg or add add add add add jg add xchg inc add add add inc add add test inc add jg add xchg inc add add inc add add xchg sbb add add inc add jg add xchg inc add add add adc xchg add add add add add inc add jg add xchg inc add add add adc cwtl add add add add mov jg add inc add add inc add add inc add add add fildl loopne jp inc xchg inc add add add adc mov xchg add add je inc add jg add add add add adc movsb add add add add add fildl loopne jp push xchg inc add add add adc test add push xchg add add sub inc add jg add inc add add add adc lods add add add add add jg add inc add add add adc mov add push xchg or add in inc add jg add inc add add add adc mov add push xchg adc add inc fldl loopne jp test add inc add add xchg add add jp nop xchg inc add add add adc mov xchg or add clc fldl loopne jp test inc add add add adc rolb add add add add add jg add add inc add add add add add add add jg add xchg inc add add add adc enter push xchg sbb add or inc add jg add xchg inc add add add adc int3 add add add add add inc add jg add xchg inc add add add adc rolb add push xchg and add (bad) fild loopne jp call add add adc aam add push xchg xor add add add add loopne add jg add xchg inc add add add add add add add add add jg add inc add add add adc faddl add push xchg push add add loopne add jg add inc add add add adc loopne add push xchg sbb add add add add inc add jg add cwtl inc add add add add add add add add jg add cwtl inc add add add adc call xchg sub add in loope add jg add inc add add add adc in add add add add add inc add jg add add add add adc lock add add add add jp pop cwtl inc add add add adc hlt add add add jecxz add jg add add add add add add add add add add jg add inc add add add adc cld add add add add add jg add inc add add add adc add add push xchg das add add inc add jg add add inc add add add push xchg pop add add inc add jg add add add adc or add push xchg and add int3 in add jg add add add adc or add push xchg pop add add in add jg add add add pop add add add jge add (bad) (bad) incl add add add add jp hlt jge add (bad) (bad) incl add add leave inc add adc adc push inc add leave inc add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add leave inc add adc adc push inc add leave inc add adc adc push inc add lret or add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add enter adc adc push inc add lret or add inc add add inc add lret inc add adc adc push inc add lret inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add enter adc adc push inc add lret inc add adc adc push inc add lret inc add adc adc push inc add int3 inc add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add int3 inc add adc adc push inc add int3 inc add adc adc push inc add int add adc adc push inc add int add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add enter adc adc push inc add int add adc adc push inc add into inc add adc adc push inc add into inc add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add into inc add adc adc push inc add into inc add adc adc push inc add iret inc add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add enter adc adc push inc add iret inc add adc adc push inc add rolb or add inc add add inc add rolb or add inc add add inc add inc add adc adc push inc add enter adc adc push inc add enter adc adc push inc add rolb or add inc add add inc add rolb or add inc add add inc add roll or add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add enter adc adc push inc add add add jp add add add pusha inc add (bad) (bad) incl add add inc add add mov add add add add sahf inc add add add add add add add add cwtl out add add add inc add inc add add add popa (bad) add inc add inc add adc xor add push xchg and add pop out inc add jg add inc add add add adc cmp add push xchg xor add mov inc add jg add inc add add add adc cmp add push xchg adc add adc inc add jg add add add add adc inc add add add add add add jg add add add add adc inc add add add add enter loopne jp jo inc add add inc add add add push xchg or add and inc add jg add add add add adc dec add add add add add jg add add inc add add add push xchg xor add fdiv inc add jg add add inc add add add add add add repnz add jg add add add adc pop add add add add add add add jp mov add add adc pop add add add add add repnz add jg add lahf inc add add add adc pusha add add add add add add jg add lahf inc add add add adc add add add add add add add jg add lahf inc add add add add push xchg aaa add add inc add jg add lahf inc add add add adc insb add add add add add inc add jg add inc add add add adc jo add push xchg and add mov jg add mov add inc add add add add add add cmc inc add jg add mov add inc add add add push xchg add add je inc add jg add mov add inc add add add add add add cmc inc add jg add mov add inc add add xchg add add sub inc add jg add add add add adc test add push xchg adc add mov inc add jg add inc add add add adc mov add push xchg add add add add add testb jg add inc add add add inc add add add inc add jg add add add add adc nop add add add add add jp jo inc add add add adc xchg add add add add add testl movsb xchg inc add add add adc cwtl add add add add add add add add jg add inc add add add inc add add add jg add add inc add add xchg sldt add inc add jg add add add adc movsb add add add add add inc add jg add add add adc test add push xchg add add stc inc add jg add add add adc lods add add add add add cli inc add jg add mov add inc add add xchg sbb add jl inc add jg add mov add inc add add inc add add fdivr inc add jg add mov add inc add add xchg push add add inc add jg add inc add add add adc mov xchg sbb add nop sti inc add jg add mov add inc add add add add add add add add add sti inc add jg add mov add inc add add add add add add dec cld inc add jg add mov add inc add add add add add add add jp or add inc add add add add add add add std inc add jg add mov add inc add add add add add add add add jg add mov add inc add add add add add add add jg add inc add add add adc fadds add push xchg xor add adc inc add jg add add add add adc faddl add push xchg and add jo inc add jg add add add add adc loopne add push xchg adc add add add add incb loopne jp pusha mov add inc add add add add add add add add add incl loopne jp jo inc add add add add add add add add jp jl inc add add add adc in add add add add add incl loopne jp mov add inc add add add add add add add inc add jg add add inc add add add add add add add jg add add add adc clc add add add add add add loopne jp mov inc add add add adc cld add add add add add inc add jg add add inc add add add add add add lods add loopne jp enter adc add inc add add add push xchg add add or inc add jg add mov add inc add add add add add add add add jg add mov add inc add add add push xchg and add rolb add jg add mov add inc add add add add jge add (bad) (bad) incl add add add add inc add jg add jge add (bad) (bad) incl add add out add inc add add inc add out add out add inc add add inc add out add out add inc add add inc add out add out add inc add add inc add out add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add out add inc add add inc add out add out add inc add add inc add call inc add inc add add inc add call inc add inc add add inc add inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add call inc add inc add add inc add call inc add inc add add inc add jmp inc add inc add add inc add inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add out add inc add add inc add jmp inc add inc add add inc add ljmp pop adc adc push inc add ljmp pop adc adc push inc add inc add out add inc add add inc add out add inc add add inc add out add inc add add inc add ljmp pop adc adc push inc add ljmp pop adc adc push inc add jmp add out add inc add add inc add inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add jmp add out add inc add add inc add jmp add out add inc add add inc add in inc add out add inc add add inc add in inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add out add inc add add inc add in inc add out add inc add add inc add in inc add out add inc add add inc add in inc add out add inc add add inc add inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add in inc add out add inc add add inc add in inc add out add inc add add inc add out inc add out add inc add add inc add inc add out add inc add add inc add inc add out add inc add add inc add out add inc add add inc add out add inc add add inc add out inc add out add inc add add inc add out inc add out add inc add add inc add out inc add out add inc add add inc add add add jp add add add inc add (bad) (bad) incl add add jp add jo add add add add add add add add add inc add add add add add add add add add add add inc add add add add add add add or add mov add add add adc inc add add adc xor add push xchg or add add add add or add jg add add add add add add add add add add jg add add add add adc cmp add push xchg pop add add jg add add inc add add add push xchg and add add add add inc add jg add add add adc inc add add add add add inc add jg add add add adc dec add add add add add add add jp mov add add adc dec add add add add add cmovno loopne jp int3 mov sub add inc add add add push xchg or add je inc add jg add mov or add inc add add add add add add cmovno loopne jp in inc add add add adc pop add add add add sub inc add jg add mov add add inc add add add add add add jg add mov xor add inc add add add push xchg adc add in inc add jg add inc add add add adc add add add add add inc add jg add mov adc add inc add add add push xchg adc add pushf adc loopne jp and inc add add inc add add add add add add add add adc loopne jp xor add inc add add add push xchg and add push adc loopne jp cmp add inc add add add add add add jg add inc add add add adc js add push xchg sbb add or inc add jg add inc add add inc add add add add add add add add inc add jg add add add add xchg push add add adc loopne jp jo inc add add add adc test add push xchg or add and add jg add add add add adc mov add push xchg or add jl inc add jg add add inc add add inc add add add adc add jg add add inc add add xchg adc add xor inc add jg add add inc add add inc add add add jg add add inc add add xchg sbb add in adc jp movsb mov sbb add inc add add inc add add add inc add jg add add add adc mov xchg or add movsb push inc add jg add mov or add inc add add inc add add add pop inc add jg add mov add add inc add add xchg sub add pop pop inc add jg add mov sub add inc add add inc add add add jg add mov sub add inc add add xchg das add add inc add jg add mov das add add adc mov add push xchg daa add add inc add jg add mov daa add add adc mov xchg add add int3 sbb loopne jp or add inc add add inc add add add sbb loopne jp adc inc add add add adc rolb add add add add jp and add inc add add add add add add add sbb loopne jp xor add inc add add add add add add add inc add jg add inc add add add adc int3 add add add add add add add jg add add add add add add add add add sbb loopne jp pop mov xor add inc add add add add add add add inc add jg add add add add adc fadds add push xchg push add add jp test add inc add add add add add add add sbb add jg add add add adc loopne add push xchg adc add fs add jg add add add adc in add push xchg sbb add rcrb loopne jp lods mov sbb add inc add add add add add add add jp mov add add adc in add add add add add inc add jg add mov sbb add inc add add add add add add add sbb jp int3 mov add add adc hlt add add add add add push inc add jg add mov and add inc add add add add add add add add add jp call add add pop add add add jge add (bad) (bad) incl add add add add push inc add jg add jge add (bad) (bad) incl adc add add push xchg sbb add jl inc add jg add mov sbb add inc add add add push xchg xor add fcomps inc add jg add inc add add inc add add add add add add add inc add jg add inc add add add adc or add push xchg and add nop and loopne jp and add adc adc add push xchg pop add add and loopne jp xor add add add add add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add add pop adc adc push inc add add add adc adc push inc add add add adc adc push inc add add inc add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add add inc add inc add add inc add add inc add inc add add inc add push inc add adc adc push inc add push inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add add pop adc adc push inc add push inc add adc adc push inc add pop inc add adc adc push inc add pop inc add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add pop inc add adc adc push inc add pop inc add adc adc push inc add or mov inc add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add add pop adc adc push inc add or mov inc add inc add add inc add or mov inc add inc add add inc add or mov inc add inc add add inc add inc add adc adc push inc add add pop adc adc push inc add add pop adc adc push inc add or mov inc add inc add add inc add or mov inc add inc add add inc add or mov inc add inc add add inc add inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add or mov inc add inc add add inc add or mov inc add inc add add inc add or mov inc add inc add add inc add or mov inc add inc add add inc add inc add adc adc push inc add add pop adc adc push inc add add pop adc adc push inc add or mov inc add inc add add inc add or add adc adc push inc add or add adc adc push inc add inc add adc adc push inc add inc add adc adc push inc add add pop adc adc push inc add or add adc adc push inc add add add jp add add add popa inc add (bad) (bad) incl add add jnp add add add jnp shlb add add add fwait inc add add add and add add enter add add les inc add add add and add mov push sub and add xor (bad) add fwait inc add fwait inc add adc xor add push xchg aaa add add jg add fwait inc add add add adc cmp add push xchg or add in inc add jg add inc add add add adc cmp add push xchg sbb add inc sub loopne jp sbb add adc inc add add add add add jp and add adc inc add add add add add add add sub loopne jp sub inc add add add add push xchg xor add push sub add jg add inc add add add adc dec add add add add add jg add inc add add add adc push add add add add add add add jp pusha pushf inc add add add add add add add inc add jg add add add add adc pop add add add add add sub jp js inc add add add adc pop add add add add add cs add jg add add inc add add add push xchg sbb add jl inc add jg add add inc add add add add add add cs add jg add add add adc push xchg adc add xor inc add jg add pushf inc add add add adc insb add add add add add jg add pushf inc add add add adc jo add push xchg adc add in das inc add jg add pushf inc add add inc add add add add add add inc add jg add pushf inc add add add adc js add push xchg and add movsb xor loopne jp hlt pushf inc add add add adc jl add push xchg sbb add add inc add jg add popf inc add add add adc addb add add add add add jg add add inc add add inc add add add add add jg add popf inc add add add xchg and add adc inc add jg add popf inc add add add adc mov add push xchg push add add inc add jg add add inc add add xchg sbb add add add add xor loopne jp cmp inc add add add inc add add add xor loopne jp dec popf inc add add add adc cwtl add add add add add jp pop popf inc add add add adc pushf add add add add loopne inc add jg add add add inc add add xchg pop add add inc add jg add add add add adc movsb add add add add cwtl xor add jg add add inc add add xchg sbb add hlt xor add jg add add add adc lods add add add add add inc add jg add add add adc mov add push xchg push add add jp test inc add add add adc mov add push xchg sbb add or inc add jg add add inc add add xchg push add add add jg add popf inc add add add adc mov xchg add add ss add jg add popf inc add add add adc rolb add add add add add add inc add jg add popf inc add add add add add add add add inc add jg add popf inc add add add adc enter push xchg or add aam inc add jg add popf inc add add add adc int3 add add add add add cmp loopne jp lock inc add add add adc rolb add push xchg sub add mov inc add jg add popf inc add add add adc aam add push xchg xor add call jg add sahf inc add add add adc fadds add push xchg add add add jg add sahf inc add add add adc faddl add push xchg xor add add add add jg add sahf inc add add add add add add add add cmp loopne jp sub add inc add add add add add add add inc add jg add inc add add add adc call xchg and add mov inc add jg add add add add adc in add add add add adc inc add jg add inc add add inc add add add add add add add add jg add add add add adc hlt add add add add add cmp loopne jp mov add inc add add add add add add and inc add jg add add inc add add add add jge add (bad) (bad) incl add add add add jg add jge add (bad) (bad) incl adc add add push xchg and add adc inc add jg add add inc add add add push xchg add add jo inc add jg add add add adc or add push xchg das add add cmp jp enter das add add adc or add push xchg push add add ds add jg add sahf inc add add add adc adc add push xchg or add add add add jp fcompl add add add enter dec and pop adc adc push inc add and dec and pop adc adc push inc add and dec and pop adc adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add and pop adc adc push inc add and dec and pop adc adc push inc add and dec and pop adc adc push inc add and dec and pop adc adc push inc add inc add inc add inc add add inc add and pop adc adc push inc add and pop adc adc push inc add and dec and pop adc adc push inc add and dec and pop adc adc push inc add and add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add and add inc add inc add add inc add and add inc add inc add add inc add and inc add inc add add inc add and inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add and pop adc adc push inc add and inc add inc add add inc add es add inc add inc add add inc add es add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add es add inc add inc add add inc add es add inc add inc add add inc add daa inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add and pop adc adc push inc add daa inc add inc add inc add add inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add inc add inc add inc add add inc add and pop adc adc push inc add and pop adc adc push inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add inc add inc add inc add add inc add inc add inc add inc add add inc add and pop adc adc push inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add sub dec and pop adc adc push inc add inc add inc add inc add add inc add add add jp add add add (bad) (bad) incl add add add jo add add add pop addl pop aas inc add add add mov add pop aas inc add add add inc add add add add add add inc add add add dec inc add jg add add add mov inc add adc xor add push xchg sbb add add add add dec inc add jg add inc add add add add add add add jl inc add jg add add add inc add add add push xchg xor add fmuls add jg add inc add add add adc inc add add add add add inc add jg add inc add add add adc inc add add add add nop dec inc add jg add inc add add inc add add add push xchg pop add add dec inc add jg add add add adc dec add add add add add inc add jg add add add adc push add add add add add add add jp movsb mov add inc add add add add add add dec inc add jg add add add adc pop add add add add add add jg add mov add inc add add add add add add jg add mov add inc add add add push xchg adc add adc inc add jg add mov add inc add add add add add add inc add jg add mov add inc add add add push xchg add add int3 dec inc add jg add mov add inc add add add add add add dec inc add jg add mov add inc add add add push xchg xor add test add jg add inc add add inc add add add add add add dec inc add jg add inc add add add adc js add push xchg sub add cmp inc add jg add mov add inc add add add add add add jg add inc add add add adc addb add add add add dec inc add jg add add add add adc test add push xchg pop add add inc add jg add inc add add add adc mov add push xchg sbb add lods dec inc add jg add add add add adc mov add push xchg xor add or add jg add inc add add add adc nop add add add add add add jg add add add add adc xchg add add add add add push inc add jg add add inc add add xchg adc add sbb inc add jg add add inc add add inc add add add add add inc add jg add add add adc mov xchg or add add add add push inc add jg add add add adc movsb add add add add add push inc add jg add add inc add add xchg add add mov add jg add mov add inc add add inc add add add add add push inc add jg add mov add inc add add xchg and add inc push inc add jg add mov add inc add add inc add add add jg add mov add inc add add xchg and add cld push inc add jg add movsb inc add add inc add add inc add add add inc add jg add movsb inc add add add adc rolb add add add mov inc add jg add movsb inc add add inc add add add add add add add push inc add jg add movsb inc add add add adc enter push xchg sbb add insb push inc add jg add movsb inc add add add adc int3 add add add add add push inc add jg add inc add add add adc rolb add push xchg adc add and inc add jg add add add inc add add add add add add add jg add inc add add add adc fadds add push xchg sbb add fcoml add jg add inc add add add adc faddl add push xchg add add push inc add jg add add add add adc loopne add push xchg or add xchg push inc add jg add add inc add add add add add add add push inc add jg add add add adc call xchg and add dec pop inc add jg add add inc add add add add add add add jg add add add adc lock add add add add inc add jg add add inc add add add add add add add inc add jg add movsb inc add add add adc clc add add add add add add add jp fsubl add adc cld add add add add add pop inc add jg add movsb inc add add add adc add add push xchg push add add add jg add movsb inc add add add adc add add push xchg sbb add rcrb add jg add movsl inc add add inc add add add add add add add add add inc add jg add add inc add add add push xchg das add add jg add movsl inc add add add pop add add add jge add (bad) (bad) incl add add add add pop inc add jg add jge add (bad) (bad) incl add add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add aas inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc add ds add inc add add inc add ds add inc add add inc add ds add inc add add inc add inc inc add ds add inc add add inc add inc inc add ds add inc add add inc add add add jp add add add inc add (bad) (bad) incl add add add jo add add add pop addl lock inc add add add add lock inc add add add pop inc add add add pop inc add add add pop inc add add add js add add add (bad) add add add adc xor add push xchg or add add add add jg add add add add add add add add add inc add jg add inc add add add adc cmp add push xchg or add jo inc add jg add add add add adc inc add add add add add inc add jg add add inc add add add add add add addr16 add jg add add add adc dec add add add add test add jg add add add adc dec add add add add add addr16 add jg add add add adc push add add add add add inc add jg add movsl inc add add add adc push add add add add add add add jg add movsl inc add add add add push xchg sub add hlt push jp lock inc add add add adc pop add add add add add add add inc add jg add movsl inc add add add add push xchg add add lods imul or add inc add add add add add add push add jg add cmpsb inc add add add adc push xchg adc add fs add jg add inc add add add adc insb add add add add add push add jg add cmpsb inc add add add adc jo add push xchg xor add sbb inc add jg add cmpsb inc add add add adc je add push xchg pop add add inc add jg add inc add add add adc js add push xchg add add aam inc add jg add add add inc add add add add add add insb inc add jg add add add add adc addb add add add add jp insb cmpsb inc add add add adc test add push xchg sbb add call jg add add add inc add add xchg adc add inc insl inc add jg add add inc add add inc add add mov jg add add inc add add xchg push add add insl inc add jg add add add adc xchg add add add add add inc add jg add add add adc cwtl add add add add add jp shlb add adc pushf add add add add add outsl inc add jg add cmpsb inc add add add adc mov xchg or add insb outsl inc add jg add cmpsb inc add add add adc movsb add add add add add outsl inc add jg add cmpsb inc add add add adc test add push xchg and add add add add inc add jg add cmpsb inc add add add inc add add add jg add cmpsl inc add add add adc mov add push xchg or add fdivl add jg add cmpsl inc add add add adc mov add push xchg xor add add add add jno add jg add cmpsl inc add add add xchg and add xchg jno add jg add cmpsl inc add add add adc mov xchg adc add add add add jno add jg add inc add add add add add add add add add jg add inc add add add adc les add push xchg add add test inc add jg add add add add adc enter push xchg sbb add add inc add jg add inc add add add adc int3 add add add add add inc add jg add inc add add add adc rolb add push xchg sub add add add add jp je inc add add add add add add add add je add jg add add add add adc fadds add push xchg daa add add add jg add add inc add add add add add add add je add jg add add inc add add add add add add add jp mov add add adc in add push xchg and add mov add jg add add inc add add add add add add add jne add jg add add inc add add add add add add inc jbe add jg add add inc add add add add add add add jp les add inc add add add add add add add jbe add jg add cmpsl inc add add add adc clc add add add add add add jg add cmpsl inc add add add pop add add add jge add (bad) (bad) incl add add add add jg add jge add (bad) (bad) incl adc add add push xchg sbb add inc js add jg add cmpsl inc add add add adc add add push xchg xor add mov jg add cmpsl inc add add add adc or add push xchg sbb add cld js add jg add test add add add adc or add push xchg adc add pop jns add jg add test add add inc add add add add add add add jp sub inc add add add add add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add inc add add inc add pop inc add inc add inc add add inc add pusha inc add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add add inc add pusha inc add inc add inc add add inc add popa inc add inc add inc add add inc add popa inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add add inc add popa inc add inc add inc add add inc add popa inc add inc add inc add add inc add bound js inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add bound js inc add inc add add inc add bound js inc add inc add add inc add arpl js inc add inc add add inc add arpl js inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add pop inc add inc add add inc add arpl js inc add inc add add inc add fs add inc add inc add add inc add fs add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add fs add inc add inc add add inc add fs add inc add inc add add inc add gs add inc add inc add add inc add inc add inc add inc add add inc add inc add inc add inc add add inc add pop inc add inc add add inc add jno add bound (bad) (bad) (bad) incl add add jo add or sub imul (bad) fisub jmp int3 and add or or fs add jl add add add add add add add add add (bad) (bad) call add add add movsb jl add incl add add add stos inc add (bad) (bad) jmp mov sbb add add add pusha jnp (bad) incl add add add (bad) (bad) jmp mov and add add add incl add add add push inc add (bad) (bad) jmp mov sub inc add add add incl add add add (bad) (bad) jmp mov cmp add add add jnp (bad) incl add add add inc add (bad) (bad) jmp mov dec jge add add add incl add add add (bad) (bad) jmp mov push jge add add add popa jnp (bad) incl add add add (bad) (bad) jmp mov pusha jge add add add bound (bad) incl add add add inc add (bad) (bad) jmp mov insb jge add add add bound (bad) incl add add add out add (bad) (bad) jmp mov je inc add add add incl add add add ds add (bad) (bad) jmp mov test add add add pop addl addl add inc add (bad) (bad) jmp mov cwtl jge add add add pop addl addl add arpl outsl outsb imul add inc gs outsb addr16 add add push popa outsb je je add gs jb popa jns add add gs je jb add arpl insb gs gs add add je insl popa je jae add addr16 jbe insb gs add add bound imul insb fs add jne imul xor add add imul gs jb imul add outsw jb push jb add lret mov jbe jmp mov test inc ss add jecxz lret mov inc push iret add xor pop (bad) dec mov aas sub and cmpsb cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add cld jge add add add add add add add inc add inc add inc add jp or xor add add xor add or add imul gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add inc add add dec ja add or je jmp push mov call jmp add add add add gs xor add add add gs dec outsb jne add jle add jle add add pop ja add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add fdivrl add inc add add fs add or je jmp push mov call jmp add add add add imul inc inc inc add add inc add add jo inc add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add inc add add jl inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add addb addb add mov add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add inc add inc add add xchg ja add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add fdivrl add add mov add add add add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je fdivrl add addl lods ja add or je jmp push mov call jmp add add add inc insb outsl jae inc imul addb addl mov add add add add or je jmp push mov call jmp add add add add data16 je imul addr16 js add inc popa popa fs outsb add add dec outsl imul jb imul add addb addl les add or je jmp push mov call jmp add add add add dec outsb push arpl add fdivrl add addl (bad) ja add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add test add inc add add fdivl add or je jmp push mov call jmp add add add add jne inc push imul add add jle add add call add add add add or je jmp push mov call jmp add add add dec outsb jae jb dec outsb jne add jle add (bad) inc add add hlt ja add or je jmp push mov call jmp add add imul outsl push jns je insl push imul test add addl add add add or je jmp push mov call jmp add add jbe popa dec jb jae insb je push bound add add jae insb imul add add or add add xor add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov adc add inc add data16 add add cmp and add add sbb add push add outsl add add arpl jae add cmp and add add sbb add inc add add jae add jae add cmp and add add adc add inc add add jae add push add add add add add add add add add add add add add add xor xor add add xor xor add add sbb add add xchg add add adc add add add push inc inc ss dec dec add add pop pop jbe popa inc jb inc gs jb arpl add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa inc jb push popa jb pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa push je inc popa je pop pop jbe popa push je inc outsl jo add add pop pop jbe popa dec gs add add jbe popa push jb outsb je bound add arpl insl outsb add pop pop jbe popa inc jb jae add pop pop jbe popa inc gs inc jb xor add jbe popa push popa jb gs add add pop pop jbe popa push gs bound jb inc outsl outsb jae jb arpl add jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs je add add pop pop jbe popa push je dec xor add jbe popa push je dec outsl jbe add add pop pop jbe popa dec xor je add pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa inc jb gs popa jb add add add add jbe popa inc jo xor add pop pop jbe popa dec xor jns add mov rolb dec dec add inc pop inc push cwtl cmpl xor or inc xchg fdivs mov add xor (bad) mov repz push repnz lods xor or stos add xchg gs gs outsb je jne outsb gs add je gs outsb addr16 add fs je imul add inc jb je fs add add insl bound gs add add outsl jbe imul jne insl imul add inc fs imul add outsb insb gs add add popa outsb gs gs add inc outsl jbe jae add jae imul add inc popa addr16 arpl insb imul add add outsl arpl popa jae popa je arpl add fs gs je outsl outsb jae outsb add add jae outsl jb add fs imul inc gs outsb outsb imul add dec popa insb popa fs imul imul dec outsl jae addr16 jae outsb gs add add insb imul imul add add outsb fs jbe jb add imul imul add je fs jae jae insl insl outsb fs add js outsb insb jns add add push je jb outsb jae add inc gs arpl add insb insb outsb gs add add dec jns fs outsb gs add add insb outsl jae add popa outsb outsb gs gs jo gs add add outsl bound add add jae imul inc outsl jb addr16 jae add add jne gs jp add add jne je jb popa je add insb popa je outsl outsb popa jb add add arpl outsb imul add add bound imul je gs outsb add add jo je imul bound add add outsl insl insl gs popa addr16 outsb jae add inc popa insb fs xor outsb outsl popa arpl add dec jae popa fs outsb outsb gs add push arpl outsl insb imul jns add add dec popa bound outsb jae add add data16 imul dec bound imul push jb push imul add add outsl outsb addr16 fs jns add or sbb push fidivr enter movsb and loopne and fist outsl dec mov inc sub mov scas add insl sub cmpl mov dec inc leave insl rcrb outsl outsb addr16 aaa add add jbe insb jo arpl add jbe jb je gs imul add dec jns gs push je jb insb gs imul gs je jb xor add add jbe gs add add add add popa insb imul jae add push insb gs outsl imul jne jae je insb gs dec imul arpl add add pop popa insl bound imul add dec outsb fs je jb add add imul add add outsl addr16 insl imul bound je add jne gs gs insb jne jb outsb addr16 jne imul gs add push push outsb outsl insl jns add insb imul add inc outsb outsb gs je add jae jb popa outsb jae dec outsb popa jae je add imul jo add add dec popa je jb xor outsl insl outsb imul add inc js gs outsb arpl gs xor inc outsl jb insb fs add add jae jb insl add add push je popa insb jbe imul add inc popa jae jbe xor push fs outsb fs add insb jae imul outsb jae outsl jo insb insb popa jae add add imul add add jb jae je jp outsb add add push arpl outsl addr16 insl insl gs add add imul add add add push outsw jb jo outsl arpl xor imul addr16 jb arpl jne gs aaa add je insb insb popa je fs add add outsw jb popa insb je imul add jae add add popa jbe jb outsb jae add inc jb imul add fs insl imul jne je add pushw insb fs outsb fs jae add add jne gs jae add add je jb push add outsl imul jae add add jb jae insl gs outsb addr16 gs inc gs popa je popa arpl add jae imul push jae inc gs jb outsb addr16 add add int or into mov dec mov negb lock call sbb pop adc in test mov xchg mov xchg sub fadd and sub outsb outsl imul add add imul jb add add dec outsl insl insl jne gs popa outsb insb outsb imul add add je jo add imul outsb popa insb add add dec bound imul add add jbe insb insb imul insl imul add inc outsl arpl add add insl imul arpl add add push popa jne jne xor je popa jo insb gs add add dec jbe jb imul addr16 add jb imul gs xor js arpl popa bound add add inc jb popa fs add jb outsl je imul je outsb add insb gs je gs gs add arpl popa imul add add imul popa popa outsb fs jb data16 outsb xor add popa insb insl outsb fs add add jbe insb imul insl imul add add jae imul gs gs gs add add bound popa popa fs add je gs imul add push outsl jb gs outsb addr16 jb outsb gs add add popa fs jb imul arpl push imul arpl outsb je add dec outsl jne push popa push outsb insb addr16 gs add add outsl imul push imul gs add outsl insl gs outsb add add outsl bound add imul add add jae gs imul popa je add dec gs jb imul jo jae add push insb jbe xor popa popa bound fs add inc insb popa imul jae add add xor add add fs imul jne arpl gs imul jbe outsb imul add inc outsl jb imul outsb fs je xor dec outsb outsl jae outsb xor gs jb jae add push jo je push add inc outsl jb imul inc jb insl jb outsb fs jne insb gs add add sub imul xchg jge std data16 (bad) xchg xor fstp sub xchg inc cmpl repnz xchg fisttpll notb mov xchg inc dec movsl aam mov insb imul insb imul add jb data16 insl popa popa insb imul add dec popa insl jo jns je xor arpl imul add jo data16 add je add add inc outsb jae popa jb bound imul outsb jae add add outsb jne gs jne outsb gs xor imul insb jae add add jb jae outsb imul jb je jbe insb jns dec jne insb popa jb outsb xor push insb popa je outsb jae popa data16 jae imul je jb inc gs jb fs jns add add outsb fs insb fs add imul imul aaa add insb imul add je popa fs add push gs jbe outsl outsb jae jb gs fs add push insl popa popa jo outsb addr16 add outsb je popa insb imul add push je gs outsl imul jae xor gs xor add arpl insb imul popa jae jb gs add add popa jae outsl jo jb add dec arpl imul bound add insl imul gs xor add jo jb gs add add imul imul jb jbe outsb aaa add jb outsb add inc outsl outsl imul add add imul add add push jne jb data16 jne add insb addr16 outsb jae outsl outsb gs dec jns jo outsl jae jb outsl insl popa add add insb insb imul add arpl bound jne popa je outsl outsb xor add je je insb popa pushw fs popa outsb fs add push outsb gs xor add gs imul add imul insb imul xor bound gs popa insb jae add je jae jne jae jb data16 jb add add push outsb arpl je insl imul add insb gs add push popa arpl outsb xor add add push jae add outsl insl jo imul outsb fs add add gs imul gs repz aaa dec lods push or jmp leave mov pushf popa inc cwtl adc out into es mov addl int adcb inc mov in insb rolb gs add add imul imul gs gs jb jo outsb xor bound jbe outsb gs add gs jb imul jb bound outsb je add push imul add add je jb gs outsb add gs je imul add insl popa jb gs jbe outsb add pop imul xor add inc outsl jb fs jb popa fs add push fs jb jb popa insb imul imul add popa je gs fs outsl jae gs gs dec gs outsb imul push gs imul jae jae push outsl insb imul add jae je gs add dec outsl outsb imul insb jns add add popa outsb outsw addr16 add add jae gs fs add add push popa outsb addr16 je je outsl outsb gs add add add add push je gs insl insb imul add imul je insb insb imul add gs outsb outsb gs add add dec gs bound jb jae add outsb imul insb imul jae add imul insb popa outsb imul dec gs insb insb jb add add push outsl outsb fs dec jbe je gs outsb addr16 xor add add jae insl imul outsb add insb imul jae insl insb imul imul gs popa data16 imul add add popa arpl jae imul jbe imul je addr16 jae add add push push gs jae add jp insl jne imul popa insb jne bound add dec insb popa jb push jb gs push arpl imul add gs insb gs add add insb outsl jb arpl outsb arpl jb gs add popa popa insb gs outsb insb addr16 add jae imul jae add jb popa outsb fs popa bound inc imul outsb jae add add push add add inc outsl jb popa addr16 imul data16 jb gs add fs jae insb gs add test xor shrl jno lea add sbb inc lea xchg inc mov mov dec mov mov mov sub mov leave les loope jb insl bound insb gs gs add add outsb je imul bound add imul je add outsb imul add insb popa jae add add push imul xor add jo jb imul gs add pop jne push push popa jo outsb popa arpl jns add fs je add outsb outsb gs imul insl imul add jb insb imul inc data16 jb popa je cmp add outsl insb outsl imul insb outsl arpl imul outsb jae jb imul jae gs add add je gs imul xor push push outsl insb jae add push outsl insb imul xor bound imul jbe jo jb jne xor add add outsl jbe gs inc data16 imul fs add add push imul jae outsl jb imul outsb add inc jns push xor add jae imul add add outsb gs add push gs gs xor push outsl jb je aaa add popa imul fs gs gs xor add add outsl ja insb insb imul jae je insb jae jae popa addr16 xor add add popa add popa jb outsl jae insb jo outsb arpl insl jns dec outsl outsb arpl insb popa outsb je add insb insb imul add insb insb imul addr16 addr16 outsb je add outsl outsb imul add insb insb imul jae add dec gs imul outsb add add gs popa insb imul arpl outsl insb outsl imul imul jae jb insb jae jb gs jae jne outsb imul gs gs add popa data16 add push jo gs jae outsl outsb gs xor add jne jae add je gs add add dec jae imul add jo outsl jae gs bound add inc jb jne gs insb je outsb popa je jb add xor fwait cmpb leave (bad) jns fcmovb or xor (bad) cmpsl cs ficomp dec xorb mov rcrl mov shrl jae add push jb gs add inc gs outsb popa jae push outsb gs insb outsb gs add fs je jbe jae add jb ja add insb jae gs add add push popa insb jne popa je jb jne xor add data16 je jb gs gs add add jb data16 jns outsb xor add add outsb xor add add insb insl gs jb add add jo outsb add push jb push add add imul outsb fs imul add arpl jbe outsb imul add fs je add bound imul dec popa fs addr16 jae imul add arpl add add fs push popa outsb add push jb je jne jae add add imul jo jae gs add add insb outsl je outsb imul add push insb popa outsb addr16 popa outsb add imul popa bound dec jbe jb jb popa outsb imul push je jbe outsl jb outsb addr16 add push popa outsb imul add jb jo gs bound add add push insl imul xor add inc insb insb gs popa insb imul inc outsl jb jae popa je add inc outsl insl jo outsb add add dec imul outsb jae inc jb imul gs add jb outsb outsl insb jns imul popa outsl aaa add add addr16 insb jns add push push jne aaa add add outsb fs popa fs add bound push add jb imul insl add add gs outsb fs outsb add add imul popa outsb add add jb outsl insb imul jne imul popa imul outsb add addr16 je jb add jae outsb addr16 outsb gs push gs gs imul add inc jb arpl outsl fs insl outsl jne add je jb imul jae arpl imul add add gs jae popa bound imul add add or mov mov fldl cmp in cmp sbb and (bad) jb cli popl push dec adc mov xor mov mov cmp outsl jo outsl outsb gs jae add dec jne push add add imul outsb gs imul imul je outsb outsl insl jae add add add je data16 insb outsb gs gs add jne je outsb imul add push popa insb jne gs aaa add add jb popa insl outsb je xor bound fs add push jb bound insl outsl popa arpl popa insb fs add add insb imul jae outsb je jb add gs outsb popa insb gs add add insb data16 gs add jb addr16 add add push jne jae jb insb jne gs add add outsb popa jbe gs add add jae arpl imul jae imul add outsb popa insb imul gs gs add outsb outsb imul imul add inc imul add push popa je gs jns add add outsb je outsb outsl jae outsl jo arpl add add inc imul jo outsl jbe jae outsl outsb gs add add insb insb gs outsb addr16 add add jo popa fs add add push bound addr16 add fs popa insb add gs bound add add data16 jne outsb arpl add jbe jb popa insb imul imul add add arpl jo outsb add push outsb je fs insb add fs add imul imul jb popa jb jae add insb imul je xor popa jb outsb add arpl jne jns add imul popa gs jb arpl jae jb add jae popa outsb fs imul popa jb popa je je xor outsb gs outsl jae jb add add imul popa insl jo outsb xor add inc outsl jb insb jns je insb jae jae insb imul imul gs insb gs add add fs bound popa outsb gs gs push outsb fs jae jns add add je jb jp outsl je jae add inc gs gs add jne popa outsl jne jae insl outsl insb gs gs outsb addr16 add mov pushf shlb add xorb fwait xchg inc xor stos inc outsl inc lods dec mov mov cmp mov lcall xchg arpl aam nop push inc lcall jno jb addr16 outsl insl insl gs gs add jne bound je jb add add popa insb insb popa outsb je imul popa insb popa arpl push imul arpl insb jne outsb jae add popa arpl outsl jae insb jne insb add add je jb outsb jb je jb gs add jo jb insl outsb je data16 fs add inc popa fs jp jae add add popa insb bound add data16 jae gs add jae fs outsb fs add outsb je outsl jb push add add jae addr16 insb data16 imul jae add add dec gs outsb gs add add outsb jb jae add outsb je imul add add dec outsb imul gs add add fs fs gs fs gs outsb gs add insb jns outsb add imul add add push jne imul add dec insb popa jae add add imul jae outsl jb insl jo jb add jae jae popa insl jo outsb add fs jae popa popa jb jae add add je jne add bound addr16 outsb outsb jns add add imul add dec jb jae jne outsb add add push addr16 je add bound bound add fs popa insl imul add inc outsl jb je outsb imul add inc fs outsb jae insb jbe jb imul outsb jbe arpl xor add add jb popa insb imul gs gs add imul outsl jb insb popa outsb je outsb fs gs jo imul outsw jb jb outsb gs dec imul arpl add jne imul dec jo jb gs add add inc popa imul imul popa jbe popa insl jb outsb xor add add jae imul add add fs arpl outsb popa insb add insb addr16 je jae add add gs addr16 outsb outsb add jae outsl insb gs outsb gs gs add arpl jae fs je outsl outsb add xchg dec mov pop ds add inc mov xchg into ja andl mov xchg adcl aaa mov xchg mov popa insl imul inc insb insb outsl jb jae xor insl outsw jb gs imul add add add inc outsl jae add add inc outsl gs push popa bound add gs insb imul add add insl gs gs add push outsb popaw arpl gs add add jb outsl push je arpl add push arpl jns jb add jae outsl jb arpl je jne insl gs gs add gs insl gs outsb outsb add jo gs add outsl je add outsw jb imul arpl fs insb imul bound jns fs jae jae imul push outsl jb imul outsb outsl outsb arpl arpl imul popa arpl gs gs add fs gs add insb fs gs add outsb imul jae add add outsl imul add add push je insl imul data16 jns je imul push je jb xor add add popa bound outsb gs add push gs outsl outsb popa insb outsl insl imul outsb imul add jo popa jae arpl add inc jb je jb imul jb gs outsb fs outsb add arpl insb arpl add addr16 outsb add add jb outsb jae popa outsb xor add add jb jo outsl outsb popa fs add add dec fs outsb jae add cmp add outsb jne jb je popa insb add add data16 imul je outsb outsb imul add jae gs gs add inc imul popa outsb add add outsl jo jb outsb imul jns gs add inc fs insb jae gs jae dec popa popa outsb fs jne imul dec imul imul add add push fs imul jae jne imul cmp add push jo imul insb gs outsl insb outsb aaa add add push outsb fs imul gs popa outsb jne xor add inc outsl insb imul jae inc js gs insb outsb arpl add movsl inc mov xchg sbb or mov cld sahf cwtl (bad) jg sbb xorb (bad) cmp das and cli adc rorl jmp popa outsb outsb arpl add add insb push add add insl imul gs jae add add outsb gs imul add dec popa jbe gs jb outsb outsb gs push jne gs outsl jbe jb imul jb bound jb gs add add insb jae addr16 add add inc outsb outsb gs jae jb jbe imul insl jne popa jb outsb add jo jns je jb popa jo jb je jb outsb outsb jae add je insl imul outsl popa arpl imul insb imul push jne je jae add gs outsl outsb arpl fs add insl gs fs xor add jo arpl je arpl gs add jne imul popa imul add push outsb je jae imul outsb aaa add jb push jo imul je jb outsl jae imul arpl outsb je jb je gs popa je outsl outsb add imul add popa addr16 add inc outsl ja imul add gs jne outsb je je xor add jae imul add bound imul outsl outsb arpl jae je outsb jae add add addr16 outsb je je jbe insb jns jae insl jo imul outsl outsb add push jo insb jae xor push jb outsb bound add add jne jae jns add je popa jb outsb popa add bound popa jae add add dec outsl jae imul imul push jae add outsl jb imul inc jbe jae add add bound insb insb popa je jb insb xor jb imul jne outsb gs xor add imul outsl add add outsl jo jne gs inc jns insb gs add jb outsl je add addr16 je add outsb insb imul add insl gs je outsb xor push outsb imul outsb popa je jb aaa add add insb imul outsb addr16 gs jne outsb imul push popa jb je jo jb add jbe arpl insb insb gs add gs outsb outsb outsl jne arpl add add int3 xor aaa in test mov xchg int or into mov dec mov negb xor or stos add xchg (bad) or add add add add gs je jb or outsl imul outsb je je outsl outsb jae outsl jb gs add add inc add add (bad) (bad) (bad) jmp jne outsb je je outsl outsb jae outsl jb gs add dec adc add add inc add add or je insl imul add push add ja outsb jae add adc push adc add add add jae add push add jb jae add or add add incl add add push add outsl popa fs add push add fs add add or add incl cmp add add add insl insl jne gs popa outsb insb outsb imul add push add fs gs jae imul cmc add add add add add imul add or dec popa je imul aaa add or pop push adc incl sub add push pop add jne jne xor add imul add adc (bad) (bad) or add add add or je jbe imul popa je add or jae popa insb imul add add incl add add or inc imul gs add or push jb insl outsl jbe jb add adc adc pop add add add add or inc outsl jb arpl outsb je add add pop jbe add adc pmulhuw or incl das add add or push jo je push add add jne popa outsb je add or movsl adc or incl sub add or popa insl add or imul gs add add add add add add add add gs add imul jb add adc adc or incl xor add or insl imul arpl add or inc imul je add adc add or incl das add add adc push outsl jb gs outsb addr16 jb outsb gs add add outsb jns jae add push pop or adc adc or add add str outsb arpl push imul add outsb outsb gs gs xor add push lret pop jg adc add add add add or outsb outsl imul add or outsb popa imul add adc adc (bad) incl cmp add adc add jb imul outsb fs je xor add or jae outsb fs jae jb add or or adc incl xor add adc add jb imul add or dec gs arpl outsl jae je add adc movl add add pop add outsl bound add or push je gs outsb insb jns add jbe pop adc add add add add add jo jb imul add addr16 cmp add or add push pop add adc incl xor add adc gs insb insb imul add jb jne bound imul adc repz repz adc incl sub add push pop add jne push add add jae jns fs imul adc add add or dec bound imul or outsb gs imul push cmpsl or add add add add or imul popa jo insb gs add or push gs jb gs outsb fs add pop adc add add add add or push imul push jne outsb popa insb add or data16 bound imul jle fildl add add add add or push jne fs imul add gs add add jle int3 add sbb incl sub add sbb add outsl insl gs outsb add add add gs jae add pand push add or sbb incl xor add sbb add popa imul jae add or gs push xor add or add adc incl xor add sbb jb outsl je imul je outsb add or dec imul je outsb add adc or adc incl sub add push or dec popa popa insb insl outsb fs add or dec outsb imul inc add or or pop adc add add or jne popa bound fs add or popa fs outsl outsb imul fmull push pop adc add add add add or imul outsb insb addr16 gs add add imul add or adc add add add add or push imul gs add jb outsb jae add pop push or adc movups add add add add or push gs fs jb imul add outsb outsb add adc or sbb adc add add add add or gs je gs gs add str outsb jae imul insb add adc add add add add add add outsl jae outsb xor add je popa arpl je arpl add add leave adc adc add add add add je imul jb add or push popa jb add pop push adc and incl sub add es dec jne xor add or jo outsl insl outsl outsb popa jb push mov lret adc adc or and add add or imul outsb je add or inc outsb outsl jo jb jae xor add psubsb add add add add add push add popa outsb fs jb data16 outsb xor add pop add popa insb imul scas add adc add add add add or inc jb insl jb outsb fs adc inc outsl jb push insb jae jae popa outsb popa insb gs add push adcl adc add add add add or data16 outsl imul add or dec outsb fs fs add adc add pop mov incl sub push add gs imul addr16 add add insb jae add or push cmp incl sub add sub add imul add pop add bound popa xor add or adc pop invd adc add add add sub imul or inc imul je jb add add or js adc incl sub add or arpl popa imul add or push outsb fs popa outsb je add lgs inc adc incl sub add das or push imul outsb imul add pop add popa jp outsb jae add adc or cs add add add or jae bound popa popa fs push add fs bound add or or add add das add add add add or inc js arpl popa bound add or push outsl jae imul adc or adc xor incl das add add or dec jb insb insb gs add or fs insl insl gs gs add add push adc add add add add or insl outsl outsb gs jb jae add or inc insb jns jne gs jae add push js test push add xor incl add add add arpl gs imul add jb addr16 jae add adc int and adc add add add add jb imul gs xor add jb outsb imul adc adc or xor incl sub add ss add jo xor add or dec outsl outsl imul imul add adc add adc add xor add add adc jae imul gs gs gs add pop add popa bound add orps adc incl add dec xor aaa (bad) (bad) call inc mov xchg adcl cmpsl xchg dec mov pop ds dec lods xor or stos add xchg mov add add adc push imul gs jb imul or gs gs jp jb aaa add add inc add add (bad) (bad) (bad) jmp add jae gs jp jb aaa add cs add mov add add add add push add outsl je add push add arpl add or adc add incl sub add add add jo popa jae arpl add add je add add adc add add add add push add jo gs add adc jne popa popa outsb fs bound imul add add mov or adc add add add add add gs push popa bound add or jb imul add add add add or add incl add add outsl imul push jb gs jae gs jne aaa add adc add adc add add incl cmp add push lldt jb outsb outsb imul add adc jo jb insb insb gs outsl addr16 insl insl gs add add add add add add or arpl arpl imul add push jb jae imul jae add pop xchg add or add add add adc outsl jo jb outsb imul jns gs add or inc outsb je arpl outsb je add add add adc add add add add or inc fs insb jae gs jae add or push gs outsl insb outsl gs xor add push js jg (bad) adc add add add add pop add jb imul add outsb imul add or in pop xchg or or incl xor adc jae outsb popa insb outsl insl imul outsb imul add add bound insb add or add or or incl das add add add jb jo outsl outsb popa fs add or push ja insb insb imul or or adc add add add or popa bound outsb gs add or inc jb outsb je outsb jae add or adc or incl add add add inc insb jns add or jb push outsb add push stc or adc add add adc imul insl jne imul cmp add or bound insb imul jae add add or push add add add add or jae gs insl gs outsb outsb add or imul imul adc add add add add or data16 jns je imul or imul push sub adc lahf add adc incl sub add adc add outsb outsl insb outsl imul add jne jne add add or adc incl add add or arpl jns outsb outsl je arpl add pop add insb data16 je add push sahf or jl adc add add add add add data16 imul or inc jb jbe insb addr16 add push imul adc add add add adc popa insb outsl je gs xor add push add outsb imul in adc cmc movups incl sub add push or push outsb fs imul add jb je jb add adc sbb xchg adc adc add add or je outsb fs gs add pop add jb outsb addr16 add add stos movups add add add sbb cmp add or je insb je gs jo add or adc pop add add add add or jb jae gs gs add pop add jb arpl add add push mov loop adc add add add add or push arpl jns jb add or push outsl jb imul add pop jbe jge xlat adc sbb incl sub or dec jne fs gs or dec outsl jae imul outsb jae add adc or or or sbb incl sub add sbb add insl popa outsb jne xor add add gs add add dec push jb adc add add or inc popa insb popa insl imul add fs gs add add mov adc incl add add or push popa arpl gs gs add or jae js insb outsl imul jb push or incl add add or jb insb imul add str je popa arpl imul add add or pop push adc push add add add and add jb gs outsb fs outsb add or jae insb addr16 jne insl gs add push add movups add add add add or dec popa popa outsb fs jne imul add or inc insb popa fs insl gs add add push xchg or or and incl cmp add and add addr16 fs jae jae imul add or outsb addr16 imul test inc add adc add add add add or dec insl insl gs gs add or push jbe insb jns jae add push into push adc add add add add popa outsb add or inc jb fs gs add add pushf or and incl add add imul add adc push gs imul jae add add add and incl add add or outsb jne jb je popa insb add or inc jb imul add add or add and add add add inc outsl jae add add push popa insb popa add adc push adc incl xor add sub dec imul outsb aaa add or jae jb outsb fs gs add adc push adc add add or push outsl jb imul add add jb outsl insb imul testl adc add add add add or jb arpl insb arpl add or push imul jns add or cli adc sub incl add add push add jne outsb jae add push add arpl add or push adc add add or inc insb insb outsl jb jae xor add popa outsb jae outsl outsb add adc or sub incl add add insb imul jae add or inc popa jb imul prefetcht0 mov sub incl xor add cs inc imul popa outsb add or inc gs insl insb imul add push sub or add sub add add or inc js gs insb outsb arpl add or data16 outsb arpl imul jo pop add add cs add add xor push je insl imul add jb arpl push add or adc or add add add xor dec popa jb outsb jae popa outsb xor add push add jb outsb add adc adc or add add add add or imul jb je add push add outsb fs add or adc xor incl xor add xor add jb outsw jb gs imul add push add outsb jns add add adc or or xor incl xor add xor add jae popa outsb fs insb imul or push imul outsb add pop or add pop lret xor incl sub add xor popaw arpl gs add push add outsl ja xor add or movups incl xor add adc jae outsl jb arpl je jne insl gs gs add pop add outsw jb add adc adc dec or xor add add or bound imul add or imul gs gs add pop xor fs add add int3 xor aaa dec faddl cmpsl mov dec mov mov mov cmp scas dec mov lea xor or stos add xchg mov add push add add or addr16 jbe insb gs add gs jbe outsb jae outsl outsb outsb add add inc add add (bad) (bad) (bad) jmp jbe outsb jae outsl outsb outsb add jne add pop adc add add add add add add push add outsb gs add or dec outsl imul insb popa add or add sbb incl sub add add add jno gs xor add outsb jp outsb popa add or out jmp incl sub add add add outsl je aaa add or push insl bound imul je pop push out mov incl cmp add add add je gs imul xor add sldt bound jbe insb fs jae jb add or or adc add add add add outsb je imul bound add or jae ja jb popa je add add movups incl sub add push push add fs add add add jo outsl imul add or add add add or jae insb je outsb popa je jb add or popa fs je jb jb add or mov incl xor adc dec popa jb push gs gs xor add or inc insb outsl jne arpl jae xor add adc or add adc pop add add add add or dec outsl jb insb imul adc inc gs imul jae jb outsb add jne or sbb or or incl cmp add or add popa jb outsl jae insb jo outsb arpl insl jns add or gs insb imul add (bad) or add add add add add or ja imul je add add outsl xor add pxor jns into push adc add add add add add push xor add sldt je push push xor add adc int3 add adc add add add add jbe jo jb jne xor add or arpl outsl outsb imul adc or incl xor add push or jbe outsb imul add or push insb imul gs add push testb adc adc or add add or inc data16 jb popa je cmp add str popa outsb imul jae popa addr16 add or add push add add add add or jae imul add or dec popa outsb je popa jb imul pop cmp adc (bad) incl xor add adc add imul jae jb gs add or push outsb outsl imul or lsl pop adc adc incl xor or bound ja insb insb imul dec jbe jb jbe insb imul fs add adc dec or or adc incl xor add adc add popa fs outsl jb imul outsb add or inc jb gs popa outsb add add add add add adc incl xor add adc add insl bound insb gs gs add or inc push outsl addr16 add push mov or adc incl sub or push imul jae add or insl imul add push add or bound add add add or jo outsb outsb gs imul add arpl jo outsl bound aaa add push into add add incl sub add pop or push outsl insb imul xor add outsl ja add adc cli push movsb or push add add add add or inc outsl outsb addr16 addr16 outsb je add or jae bound imul gs add or mov pop add add add sbb add insb insb imul add outsl je jo je imul adc sbb incl xor add sbb inc data16 imul fs add push add fs insl popa addr16 gs add add roll sbb incl sub add sbb add insb popa jae add pop add imul outsb add adc or adc add add add add add outsl jbe gs add push add jb xor add add add incl add add arpl outsl insb outsl imul pop add insb fs gs add push mov add sbb incl das add add or popa arpl push je add or push arpl outsl jo arpl add or add add add add push add jo outsl jae gs bound add add push xor outsb push mov push add add add add pop add jne jae add push add imul sub pop add add add and add outsb arpl insb popa outsb je add pop add insb insb gs add add adcl movups add add add add push add jb imul gs add pop add insb je arpl add divps imul add and incl xor add and add outsl outsb imul add add jbe fs imul gs add add pop mov pop pop adc add add add add add insl jne gs or jo jb jae outsb add pop add add and incl sub push add arpl xor add or imul gs add adc add adc add and incl sub add es add fs je add or push jo jae imul push xor insb adc adc add add or jb outsl insb outsl imul adc dec outsb je outsb jae jbe jb outsb outsb aaa add or fisttp popa adc es add add add adc jae jne outsb imul gs gs add or dec imul outsl jne add add mov incl xor add sub outsb imul outsb add or push jbe insb imul add or adc sub incl add add or arpl insb imul add or push insb imul add adc or sub incl sub push add popa gs add popa je outsl jb insb gs aaa add adc adc add add add add add outsl insl imul add or jbe arpl jne outsb gs add push gs add add sub incl das add add gs jb jae add or push popa arpl insl gs jb aaa add push adc sbb add add add add or push popa jo outsb popa arpl jns add or outsl insb bound arpl outsb add cltd add adc sub add add or dec jae imul add or jae outsl je jne insl gs add pop cmc adc or movups add add add add adc imul je jne je outsl outsb jae gs add or dec outsb je jb jb bound xor add or inc add das add add add xor add insb outsl arpl imul pop add fs add add push adc mov incl sub add xor add je gs add or outsb imul add or or adc add add add add push add popa imul fs jae popa jb insb jns add adc push jb dec adc xor incl add add add outsb gs insb jae add adc push outsw jb imul fs xor add or or out add add add add imul outsb gs add or dec data16 outsb add add add mov adc incl xor add adc inc gs je insb jae jae popa addr16 xor add or push je gs add adc adc xor add add add imul push imul outsb addr16 insl jo fs outsb jae add pop cmc adc ss add add dec xor aaa sub mov scas add insl sub cmp jnp enter movsb and loopne and cltd iretw adc pusha rcll mov add add or inc insb gs jb popa jns or jb xor sbb add and and (bad) (bad) jmp add popa xor xor rorl add invd add xor add inc add add add add or outsl jo insb insb popa jae add adc inc outsl jb jb addr16 outsl insb imul adc add incl daa add add or dec jo imul add add gs add adc or add incl sub add add add je jb xor add or imul outsl insl add pop incl mov mov add incl add add add jae addr16 imul add add outsl js jae jae add pop int stos add adc add incl daa add add jbe gs add add addr16 ja popa add adc adc incl cmp add push adc dec fs outsw jb popa insb je imul add add imul gs popa popa addr16 add push and xchg sub adc add add adc jne jbe jb je gs imul add or jb jp data16 jne add push pop add add add add add jae add or gs jns insb imul adc or adc add add add add or inc outsl jb insb fs add or jae outsl jb popa outsb jae add add adc push leave add or incl sub add or add jb popa outsb jae add or push popa popa insl popa insb imul push adc xchg add incl sub or push insb gs outsl imul or push outsb jo imul adc movzwl add add add add add popa jae je add or inc jb je jb imul les dec or incl add add jb push jne aaa add or inc insb jae bound add add add add or or incl add add or inc outsb outsb gs je add or jae insl imul add or adc add add or gs imul jae add add imul or add add push add add add add add addr16 jo add or inc insl imul jae add add or (bad) incl add add or jae popa jbe jb outsb jae add or inc jb insl outsl insl popa outsb imul arpl outsb or add adc incl xor add adc add fs je jb add or outsl addr16 jo imul add (bad) adc add add add add or dec insb imul add or jae insl gs insl insl gs add adc or adc incl sub add adc add outsl addr16 insl imul add je insb outsb jne add or push pop push pop adc adc incl sub add adc je jb push add pop add gs xor push add or adc adc incl das add add or jo jb jae je jp outsb add add add popaw outsb imul sub add adc add add or inc gs jb outsb addr16 add or inc bound fs jae add push xchg add and add or outsl insl outsb imul add or je imul add or mov adc add add or inc jb imul add or data16 jns outsb add add adc sbb incl xor add sbb inc insb outsl imul jae add or imul outsl outsb aaa add add mov sbb incl sub add sbb add jne je add or inc imul cmp add adc cmp (bad) adc sbb incl cmp add sbb add jns outsl outsb outsl insl jns add push add jae jb jbe imul insl popa outsb outsl outsb add push cli adc sbb incl xor add sbb outsw jb jo outsl arpl xor add outsb imul adc (bad) add adc incl add add push add insb jo arpl add push add imul je outsb add or add add add add push add imul add jb bound fs add add add push add add add and add jne gs add or inc popa insl imul add add or add adc add add add add or bound outsb gs jae add adc inc outsl jb addr16 gs imul add or add or and incl cmp add and inc outsb je insb insb popa je fs add adc push jns je jb jae gs fs jae jb xor add or add sub adc add add add and insb jne jb outsb addr16 jne imul gs add or outsl jae je outsb gs add or enter adc add add add and add jae imul push jae add adc inc outsb jae je insb jae jae data16 insb outsb jae add or or and incl aaa add add jo jb push je jb insb gs imul inc push popa outsb xor add pmullw xor xchg adc incl aaa add add or inc gs popa je popa arpl add adc dec outsl imul outsb imul gs add or setg sbb adc add add lldt insb jae imul outsb jae add or inc outsl jb fs addr16 add push adc adc add add pop add jae jbe xor add or jo outsl jbe jae jb gs add adc or daa add add add sub add jo jb outsb arpl gs xor add or push imul imul out add or adc add add add sub push add push add jb insl bound add or or add sub incl xor add sub add popa insb imul jae add or je imul outsl outsb add add add add movups add add add add add popa popa insb jbe imul add push add insb jbe jo imul add adc adc add add add add bound je add or inc outsl insb imul jae add bswap push adcb push adc incl add add or inc gs je jb xor add adc popa outsb jbe outsb fs jae jae imul jb add or or adc incl aaa add add or push fs outsb fs add adc dec outsl insl insl insl gs jb outsb imul adc add add cs add add add pop add insl gs imul arpl jne gs aaa add or inc outsl jb je outsb imul push add das add add add add or inc insb imul add push add insb imul addr16 jae add or pop rcll testb xor incl add add or push arpl outsl addr16 insl insl gs add or dec jns imul sbb add add add add xor add insl bound imul add or push insb outsl jo outsl jb jae add add adc push adc xor incl xor add xor add jae insl gs outsb addr16 gs add or jae arpl insl outsl insl add add add or adc add add add add insb imul add add jae outsl fs add add add add xor incl xor add ss pushw insb fs outsb fs jae add or push outsb fs outsb je jb gs add push test mov xor add add or push outsb fs insl imul add outsb jb popa jae outsb gs add pop jp flds incl add int3 xor aaa fsubrs xchg inc cmpl repnz xchg fisttpll sub imul xchg jge cmp xor or stos add xchg rorb add add or arpl insb gs gs add outsl jo jb jae insl insl gs jae add add inc add add (bad) (bad) (bad) jmp add jo jb jae insl insl gs jae add rorl add add add add inc add add add add add outsl insb imul add add je jb outsb gs add seto inc or push adc add add or push jne jb data16 jne add or jne bound outsl outsl insb add add mov adc add add add add add arpl je insl imul add or push push gs outsb gs add or push into add add add add add add popa je outsb jae add add jo add add push adc add add incl xor add add jb data16 insl popa popa insb imul add add gs outsb gs add adc adc incl cmp adc je je insb popa pushw fs popa outsb fs add adc inc popa imul imul gs xor add adc add add add add or push jne imul gs xor add or push jne imul jb gs add add push or incl sub add or add jo jb gs add or jne jae addr16 add adc adc or incl cmp add or add insb jbe outsl outsb jae jb gs fs push add js outsb outsl insl jb popa fs add push hlt or add add add add add pop add popa jbe outsb aaa add or inc imul add add cmc push jno adc add add add add or push outsb je popa fs or jo insb jns outsl jae jae add add add xchg adc add add or dec jne insb popa jb outsb xor add or push imul popa outsb xor add or or adc add add add add jae popa jb bound imul outsb jae add or push popa insl insl outsb insb imul or mov or incl sub add push or inc outsl outsl imul add or jb jno imul out add or or add or add add or dec popa jae jb gs add or arpl jne jb outsb add add or incl sub add adc add fs imul add insb outsl addr16 xor add add adc add add add add or imul add push add gs jae add adc pcmpgtd adc add add add adc add popa jb fs jns add or push je imul jae add add jecxz adc add add add add or jbe outsb fs insb fs add or inc outsb push insb jae jae add add adc adc incl xor or bound gs popa insb jae add adc inc outsl insb imul insb outsb je outsb jae add adc add adc incl sub add adc je gs gs add push add jae insb jns add push mov (bad) cmp adc incl xor add push or jo outsl jae jb outsl insl popa add or insl imul fs add or adc or adc adc add add str imul imul aaa add pop add je outsb add seto adc add push add add add add adc push popa imul insb imul xor add or push imul jae add add or lock pop add add add add or outsw jb jae outsb imul add jbe jo addr16 add add pop fist lods add sbb incl xor add sbb add insl jo jns je xor add or imul gs jb outsb outsb add pslld adc add add add add lldt outsb jne gs jne outsb gs xor add jb outsl insb popa outsb imul pop les xchg or sbb incl daa add add add je add or inc jb outsl jae popa je add push sub adc sbb incl sub add sbb jb imul add add bound add add lahf add sbb incl add add add inc add or fs outsl jb jp jae add pop test xor mov incl xor add pop or inc jne insb imul add or push outsl bound addr16 outsb gs add or or push add add add add or imul insb jae add or push insl addr16 outsb fs add add or add add add add add adc je jae jne jae jb data16 jb add or insl insl popa je arpl insb jns add ucomiss pusha add or and incl xor add and add insb addr16 outsb jae outsl outsb gs add or imul jb add or stc or and incl sub add and add gs xor add or push gs insb imul and loope xchg push insl pop adc add add add add add jb jo outsl imul jae xor add bound imul insl or mov add add add add jb outsb add add add outsl jo outsl jne add add or add add add or push outsb gs xor add adc jbe jb popa je outsl outsb jae imul outsl outsb add adc jle sub adc add add or jne gs imul add or push je popa outsb outsw addr16 add adc add add add add or push jo jb je outsl jae je add or push outsl jo gs outsb jae add add loopne pop pop adc add add add add verr insb jae imul je jb add push add outsb add roll xchg add bswap adc sub incl xor add sub add popa popa jo outsb addr16 add push add outsb gs insb popa outsb je jb add bt mov das add sub incl xor add sub add jo imul outsb fs add pop add popa jb jb add or adc or adc add add add add add popa jb popa xor add or push gs addr16 outsb je add adc leave adc incl sub add sub popa jae outsl jo jb add or inc jb popa jb popa outsb add or adc sub incl cmp add adc inc imul bound popa je outsl outsb xor add push add insb outsl outsb imul jae add or add adc sub add add or outsl jo jb je jbe insb jns add or push jne gs popa je gs or or cs add add add push add insb gs add or push outsl insb jne outsl imul stc add add das add add add add or outsb imul gs pop add je jb add or cmp adc add add add add pop add jns insb outsl ja add pop add jo imul hlt or xor incl xor add xor je popa insb imul add or bound imul outsl add or xor incl xor add xor add gs imul gs or jae imul add adc push adc add add add add arpl outsb xor add or inc outsl insl insl jne popa je outsb add nop push test xor ficom adc incl add add or push outsl insb imul add or push jb imul jb add adc push and testb xor add add or jne jo data16 add add outsb jae outsl jb popa je outsl outsb jae insb outsl jb je gs add or add add add dec xor aaa cli cmp mov lcall mov pushf shlb add xorb fwait cmp xor or stos add xchg int add push add add or push popa jne imul xor or imul outsb jae sbb add and and (bad) (bad) jmp add imul add pop or add push add add add add or inc jb insl addr16 outsb outsb add push add je outsb outsl addr16 data16 add or sub add add incl xor add add add gs outsb gs add push add jne fs push outsb jae add adc adc add incl sub add add popa jne add or jo jb data16 xor add incl xor or jbe jo fs jb add push add imul popa popa fs add adc adc add add add add popa je jb imul dec gs fs add or mov adc incl sub add push pop add jb ja add or dec imul jae add push mov add add push add fs jb je jb gs add adc fs popa popa jb data16 insb fs outsb jae add (bad) push pushf adc incl sub add or popa arpl outsl jae insb jne insb add push add imul add add xchg fcoml adc add add add add sldt outsb jae insb jbe jb imul add insb jns add adc or add add add or imul je jb add or addr16 popa jb fs outsb add or or or incl sub add or add fs jp jae add or push insb popa jbe fs add femms or adc add add add add add imul outsb jae add push add popa jbe add add adc add or incl aaa add add imul jae outsl jb insl jo jb add or inc imul jb add add or or add add add add or inc jb jbe popa insl jb outsb xor add or je imul outsb add add adc or or or add add or popa outsb fs jae popa popa jb jae add or popa outsb outsl outsl jo imul add mov push adc push add add adc inc popa insb popa arpl push imul add data16 outsl jb jp add or orb incl and push add insb jns outsb add add imul out pop movups add add add adc add imul add add outsb imul insl outsb add add push jle roll adc add add add add sldt popa insb insb popa outsb je imul add add insb insl popa outsb gs push add add or adc incl sub or push jne addr16 je jae add or dec outsl outsb arpl bound cmp add adc add adc incl xor (bad) jbe jb outsw jb jb outsb gs add or push insb jne gs imul add push cld add adc adc adc incl sub add push or jb fs arpl outsb popa insb add pop add gs jb aaa add or add adc add add push add outsl insb gs outsb gs gs add or dec gs je imul ds adc push add add add add or dec jb jae jne outsb add push add jo je outsl jne outsb gs xor add or adc pop bound adc add add pop add insb bound add or dec jbe jb outsl insl jb outsb xor add push mov ret push ljmp sub add sbb inc imul je jb add push add outsl jne push sub fild add add add add or outsw fs fs gs add adc inc data16 jb popa jb data16 outsb jae add or push adc add add add add add jb je add adc inc gs imul fs add or push ucomiss adc add add add add outsb je outsl jb push add or outsl jne jb imul rorl add add add push adc push je popa popa insb imul gs gs add sbb jns gs jae jae outsl jb insb imul jae jb add add adc imul sbb add add or push jne je jbe insl jo outsb add or inc outsb bound imul add cmp adc add add add add push add outsb jb jae add lldt insl outsl addr16 data16 fs add push or repz pop add add add add or push jne imul add add jae jb add push mov in adc add and incl sub add and add jb jo imul insb popa imul add adc adc add add add push add jns je outsl insl insl gs gs add or arpl insl popa outsb fs add adc in or adc add add add add add arpl jae fs je outsl outsb add or imul popa outsb add or add add or and incl xor or dec imul arpl add adc imul je popa jb gs imul add pop call or add add add or push imul cmp add pop add gs gs add push mov rcll or and add add or dec gs outsb gs add or inc popa jae jns gs add adc push movsl pop jnp adc add add add jae add push add popa outsb fs insb imul add add or daa add add add add or inc popa imul imul add jo jo outsl arpl je add sqrtps xchg pop push adc add add or dec outsb jae imul add or dec jb jae gs insb popa jae add or (bad) add or sub incl sub add sub add je outsb gs add push add insl bound add add cli add add add add jae jbe imul add or inc arpl insl popa je jne add pop mov or sub incl xor add sub fs popa insl imul add imul jae popa addr16 add add or gs adc incl das add add or push gs jae gs add or push popa jb fs jb outsl data16 add psrld adc add add or push imul outsb jae add pop add jns popa jb add adc decb cmpsl or cs add add add or jae fs outsb fs add push add jns imul popa insb insb outsb add pop xlat push mov loop adc add add add add or jb bound je jb add sldt outsl fs gs insb cmp add adc add scas or xor incl daa add add add jb popa add or dec popa push jae jne popa jb add push mov xchg add add add add add or jo popa outsb je outsb fs add arpl imul xor gs adc xor incl aaa add add add jo jb insl outsb je data16 fs add or dec outsb addr16 je je fs add push clc add add adc xor incl sub add xor popa insb bound add or inc imul jae add pop mov add xor incl add add or bound addr16 outsb outsb jns add or push push gs add adc incl cmp add aaa adc inc outsb jae addr16 insb data16 imul jae add or insb popa insl bound je outsb add adc movsb add add add add int3 xor aaa into ficomp dec xorb mov pop xor fwait cmpb leave (bad) dec lods xor or stos add xchg rorb add push add add or push jne je outsb imul add push bound popa outsb je jns sbb add and and (bad) (bad) jmp add push bound popa outsb je jns xor cmc add add add add inc add add add add or push jb je jne jae add push add jb bound outsb imul mov or incl das add add or popa jb outsl jbe jb jae add or push outsl jae outsb je gs gs add add addr16 add add add add ja add or inc jne jb popa outsb gs gs add add add incl add add add je jb imul or inc jb gs jo jae add seta cmc or movups add add add add gs outsb fs outsb add or outsl js jb jns arpl add or mov adc incl xor add push or dec imul outsb jae add or inc outsl jb imul addr16 add adc rolb cmpsb add add add add or push outsl insb outsl je outsb imul add push add imul add or (bad) or push add add add add or imul popa bound add push add gs outsl insl insl gs gs add add or adc incl sub or dec popa fs addr16 jae imul pop add jb imul fmuls fildl mov adc add add add add push add arpl jbe outsb imul add or push popa je jbe xor add add or adc add add add add push add gs jb popa outsb imul add add je jb jne add add fwait add add or incl das add add add popa outsb addr16 popa outsb add add add imul addr16 add or add or incl add add jb data16 jns outsb xor add or push outsl jne push add or or or incl xor add push or push push jne aaa add or popa je je gs popa insb add adc push adc add add or inc outsl insl jo outsb add add add gs jae jae imul cmp decb push or adc add add add add adc jne gs jae popa bound imul add add dec outsb gs add adc inc add add add add add or push popa outsb fs popa fs add push add popa insb imul outsl outsb jae imul add push (bad) adc or or adc incl xor add adc add jb jo gs bound add or push gs fs or pop jge push or adc incl add add or push outsb gs insb outsb gs add or push jbe popaw addr16 add or jb lret adc adc incl sub add adc add fs je add pop add outsl imul add add push adc add add add add jo outsb add or dec jns outsb gs add or adc adc push adc incl sub add insb jns add push add outsb bound insb imul add adc incl xor push add jo gs imul add or data16 jae imul je add adc movsb add incl sub or jb fs je jbe jae add or jo jae imul push or imul add add or outsb imul jo jae gs add or inc gs je cmp add or adc sbb incl add add or push jae arpl imul add adc inc jb insl je fs outsl jb imul add lgdtl fimul fiadd adc add add add add pop add jb outsl insb imul add add jae jb data16 jae gs popa gs add or or sbb incl add add add gs add or push imul gs cmp add add enter adc add add add add popaw insl add add jo js add or or adc sbb incl xor add push add jo insb imul imul gs outsb imul outsb gs add (bad) or add adc add add or inc outsl outsb jb outsl aaa add or dec outsb fs outsb addr16 jb add add pslld jno adc add add add add or jbe outsl jb outsb addr16 add pop add bound jns add or or add add pop add add add add push add fs push popa outsb add push add gs bound addr16 gs add or mov adc add add or inc outsl jb jae popa je add or inc jb bound jae xor add add sub (bad) adc and incl das add add or push popa outsb imul add or inc insl imul add add add shld adc add add add add insl gs jb add or popa data16 gs outsb fs add push or nop or adc add add add add imul xor add add dec outsb outsl xor add or or and incl xor add es gs popa insb imul or jne ja popa outsb insb imul stc or das add add or push jne insb imul add or inc jne jb popa bound add add or pop adc add add or popa fs outsb outsl insb jns imul bound bound popa jae add push mov loope in adc add add add add push add insl popa outsb fs imul add or insb imul popa add add add add add add or imul popa outsb add adc inc outsb outsb gs jae imul add add adc sub incl cmp add sub add outsb je data16 outsb add add add gs outsb je insl outsb je insb imul or adc sub incl xor add sub add popa arpl outsl fs insl outsl jne add or inc data16 jns insb imul xor push inc push adc add add add add arpl add or popa je popa jo insb gs add or pop adc incl das add add or push gs add or popa jae outsl outsb popa insb imul or lds jmp incl inc add add or jne popa je jb jne xor add sbb imul jb insl outsb je insb jo jns outsl insb outsl imul add adc add or cs add add add or jb jae outsb addr16 outsb gs add adc push jb jae popa je jbe jae arpl imul aas add das add add add add or data16 je jb gs gs add or inc outsb je jo insb outsl addr16 add or push push xor incl das add add add inc popa outsb xor add adc inc gs imul addr16 xor add adc add xor incl xor add xor add imul jb add or inc outsl jb outsb imul cmpxchg in mov add add xor add addr16 je jb add or inc jns arpl popa outsb imul mov or xor incl xor add xor popa gs add adc dec outsl imul jae jb gs add paddsb and dec pop adc incl daa add add pop add jb imul imul gs add add xor or adc add add pop add je outsb popa jae add push add gs jae jb insl outsl outsb addr16 add or add adc add add dec xor aaa (bad) jg sbb xorb (bad) test mov mov xchg sbb xor or stos add xchg fimul add push add add or outsw jb push jb or popa jb push gs jae sbb add and and (bad) (bad) jmp je outsl insb outsl insl gs jae xor fild add hlt add add or add add add add pop add je insl imul jne push add add add add incl sub add add add bound popa jae add push add insb imul mov add add add add add or jb jne outsb je je xor add or inc popa insb push insb jae jae add add or add incl sub add add add arpl je arpl gs add add insl gs add (bad) or add incl xor push add jo gs jb outsb outsb jae add or je jb outsb addr16 xor add pop pop sub jg adc incl sub add push or inc outsl ja imul pop add bound add adc add add add add or inc outsb insl gs fs xor add push add gs jae add adc adc push add add add add or popa insl imul imul push jne gs popa popa insb outsb add adc adc pop add add push add insl jo imul outsl outsb add adc insl jne imul jae imul pusha or add ficoml adc add add add or add imul add pop add imul lahf add sbb adc add add add add or insl imul gs jae add adc popa outsb addr16 imul gs xor add or adc or incl inc add add add jne je jb je gs popa je outsl outsb add push add jae popa jne popa je outsl outsb jae jae gs gs add adc or or add add add add outsb outsb arpl add or arpl jae outsb gs xor dec or or incl sub add push or inc jne imul outsl add or dec popa addr16 outsb jae add push data16 add add or add add add addr16 add or jne bound outsb fs bound add or add push add add add add verw je jb outsl jae imul add verw outsb insl gs jns add or add (bad) incl sub add adc add insb jne outsb gs xor add add push popa jne add adc adc adc incl xor add adc add gs imul add je jo popa imul outsb jae add or sti add adc add add add add or push imul add or dec outsb jae push add add adc add add add add add arpl insb insb gs add push add popa outsb popa jae add or or adc incl sub add adc jae jns add or inc gs outsb imul add add adc adc incl das add add push add imul popa imul add pop add imul js mov push adc add add or insb jae addr16 add add add outsb je imul jb data16 outsb add pop inc push sub daa add add add add or fs jb je jo jb add or fs popa arpl add add push loope adc adc add add add add pop add arpl jae add or imul jae add adc testl add add pop add jae imul imul push jae add or popaw fs insb gs add add adc sbb incl inc add add adc push outsb imul outsb popa je jb aaa add push add outsb jae insb outsb je imul gs add add je adc add add add add jo outsl addr16 jo imul push je outsb imul popf adc or adc add add add add outsb outsb gs jae jb jbe imul insl jne popa jb outsb add or arpl arpl je imul fwait or sbb incl and pop add jns outsl outsl add add pop outsl jb add or imul add add add or dec jne gs je outsb xor add adc dec popa jae jbe outsb jae jb jae gs add or push adc add add add add pop add addr16 je add push add popaw insl imul add adc or pop add add or popa outsb outsb outsl jne arpl add add add jo popa jns jne imul adc or movups add add add add or push jb outsb bound add or dec popa addr16 popa insb popa outsb arpl add or push adc add add add add (bad) jb bound imul outsl outsb arpl jae add push add imul imul movsb push addl add add add add add jae addr16 add or inc data16 jb bound add add add adc adc add add add add outsb jae add or inc popa jae outsb fs add add or and incl xor add es dec outsl jb bound jb gs add or inc outsb insb imul add add or and add add pop add jb imul add insb jne imul gs add or testb es add add sub add jb outsb popa add or push imul add add or or adc add add add add or push outsb insb imul or inc push jb insb jns add add or adc incl sub add sub add jns je jb add or dec outsl outsb imul add movups sbb in add sub incl sub or bound gs imul add or dec insb outsl popa imul fs add add pop fs mov incl sub add sub add jb outsl je add pop add push jae arpl add add xlat add incl sub add sub popa jae add or push insb popa outsb gs jb popa cmp add adc mov scas add sub incl cmp add verr addr16 outsb je je jbe insb jns add adc push jae gs gs jae popa bound outsb add pop loop push adc adc add add or push jo jb imul add popa bound outsb jae add or add cs add add xor outsw insb imul outsb addr16 gs jne outsb imul add jbe jb add pop and xchg fadds add add add str jbe gs jb outsb outsb gs add or push gs arpl outsl jb add or adc pop dec adc xor incl sub add xor add je gs add or push popa popa imul and or or xor incl cmp add xor add gs outsl outsb arpl fs add adc inc insb imul popa bound imul outsb gs add adc xor incl das add add add jo jb outsl jbe jb imul add insb imul or add or incl sub add xor jb jae xor add or jne imul gs add or add add push add bound insb insb popa je jb insb xor add je jb outsl insb popa je outsl outsb add add or adc xor add add lldt outsb je jae imul outsb aaa add or jae insl bound jae add adc or ss add dec xor aaa inc in (bad) jb cli popl push dec adc mov pop scas mov mov fldl cmp cltd iretw adc pusha rcll call add add pop add insb fs add outsl imul inc add add (bad) (bad) (bad) jmp jae add add add xchg or add add add add add or gs jp outsl je jae add adc inc imul fs jb gs gs xor add push stos or adc incl sub pop add arpl add or push outsb insl gs imul or jae push or add add add add adc bound insl outsl popa arpl popa insb fs add or push gs jne addr16 popf or psubq adc add add add add jbe jae outsl outsb gs add or insl outsl jb outsl insl push jae add pop pop adc or incl sub add add outsb outsb imul imul jae addr16 add or fiaddl adc incl sub add push push add imul add or bound imul adc movups add add or insb insb gs outsb addr16 add or dec outsl jne outsb popa insb insb imul add add adc add add add add or dec jne push add adc inc imul jns arpl outsl outsb add bswap push jl rorl adc add add add add adc push imul gs outsb addr16 gs add or bound jb outsb fs add push ds or add add add gs push add gs add or push or incl xor or ja imul imul dec gs je jo gs outsl outsb imul repnz or adc or incl xor add or add fs bound popa outsb gs gs add or jb arpl gs add adc adc or incl aas add add insb gs gs outsb addr16 add pop add data16 outsb je popa insb imul imul add pop cwtl push jl jns adc incl xor add push or push jb jne popa outsl jne jae add push add bound popa outsb fs imul or bound xchg adc or add add or push outsl jb popa insl outsb je xor add fs outsb fs or xor xlat add push add add adc push imul popa gs jb arpl jae jb add or push je imul add or or (bad) incl aaa add add adc inc outsl jb insb jns je insb jae jae insb imul or inc popa jb popa jb je xor add or add push outsb add adc incl cmp add adc add jae popa outsb fs imul popa jb popa je je xor add or dec imul xor add adc or xchg add adc incl sub add adc add insb data16 gs add jae add or adc add add add add jae jb insb jne gs add or push jb jne insb outsb gs add add add adc incl xor add adc jbe insb push outsb outsl insl jae add or inc outsl insb bound popa arpl add or add jae adc incl sub add push or push jns gs bound add or insb bound jne insl gs add add pusha or adc add add adc inc jb insb insb gs je jb insb gs add or push jb jae outsl insl imul adc mov push add add add sbb add insb imul jae outsb je jb add pop add bound xor or pop add add add add or dec outsb data16 jne outsb arpl add adc jne popa outsb arpl gs jae popa bound outsb gs add add or add or sbb incl sub add sbb add imul add jns jae outsb fs add pop hlt add adc sbb incl xor add sbb add arpl insb add adc je jo bound je insl insl gs jae jae add adc or sbb incl xor push add gs insl bound addr16 add or addr16 jne imul add or incl adc add add add add je gs jns add or push imul add adc cwtl movhps add add add or jbe jb popa insb imul add data16 push inc add sbb add add or imul imul add insl data16 jae insb jae imul add adc ds add add add add or inc jae arpl imul or jae popa addr16 outsb outsb add push cmp adc add add add add or push imul add adc push gs jb gs outsb addr16 gs add (bad) add or and incl xor add and je outsb gs outsb popa insb gs add or push jb arpl outsl outsb imul fimul xchg push inc adc and incl xor add and add jne outsl jae jb add adc jo imul arpl gs insb add add add push sti add and incl sub add and add fs jae jns add or popa bound jb outsb add adc cmp mov incl sub push add jne outsb add or popa insb fs outsl jae outsb jae add or jl adc incl xor add es add jb outsb add adc push jb outsb jae imul je outsl outsb gs add add mov incl sub or inc insb bound fs add or dec imul jae add push leave push roll add add add sub data16 addr16 outsb imul add add bound add or or daa add add or push popa fs popa jb jae add or bound je outsl outsl outsb add add or sub incl add add or push gs jb addr16 add or push outsl jb jne imul add or push mov xchg adc add add add add push add js outsb xor add push add push imul add or or adc incl sub add sub add jo popa fs add pop add jb insl popa outsb add or add sub incl das add add insb jne gs aaa add or arpl insb gs gs insb jae add adc or pop xor adc incl sub add or dec imul add or inc gs imul add add andps add adc add add push add push gs add or push imul data16 popa fs jae add add mov incl sub add xor imul je xor add addr16 add or mov adc add add add add push add je data16 insb outsb gs gs add or outsw jb jne popa je insb jns add adc jne dec adc xor incl xor add xor add outsb je outsb outsl jae outsl jo arpl add or inc outsb outsb outsl fs je xor add or or or add add add add or inc outsb popa jbe gs add lldt imul gs gs fs add add add add adc xor incl aaa add add add imul popa insl jo outsb xor add or dec gs jns outsb imul and push add adc add add add add outsl jne jns add push add outsb fs popa insb insb outsb gs add or add add xor incl sub pop add je fs insb add or push popa jo jb jo insb fs add or loopne arpl adc add add or jo outsl outsb gs jae add or push jb jo jae je outsl xor add or movaps adc add add add dec xor aaa inc dec sub inc mov sbb (bad) repz aaa dec lods push or jmp leave cmp xor or stos add xchg out or add add add add je insl popa je jae add outsb imul jae sbb add and and (bad) (bad) jmp add imul jae xor inc adc add sldt lret or add add add add lldt jb je jb popa insb imul push add outsb push outsb imul gs outsb jae gs gs add cmp adc add add add add or push outsl insb imul lldt jb outsb je imul gs add or push jge test incl xor adc dec jo popa insl insb imul imul gs add or inc jb jo gs add add push les jmp incl sub add add add gs fs add push add outsb imul dec add adc add add add add bound jbe outsb gs add sldt imul popa popa fs add push xchg push lcall incl cmp add push adc inc popa insb outsl jb arpl outsb arpl jb gs add push add outsl imul outsb addr16 jb je add adc or add add add add or jae insl imul outsb add or push jne jb addr16 je outsb add pop push and es adcb push add add add add or dec insb popa jb push jb gs add push add arpl jae arpl je outsl outsb add or or adc adc add add add or add push gs jb jo outsb xor add jne outsb outsb imul test adc or incl sub add or add outsb fs or addr16 outsb gs jb add adc adc or incl sub add or add popa insb jne bound add pop add arpl xor add pop mov xchg add add or incl aaa add add add jb popa outsb fs popa bound add adc push jb arpl gs imul add or shld incl add add outsb imul add add je jb imul or adc or incl sub add push or dec insb gs outsb outsb gs add add insb jae add adc pop adc add add add insb imul add push add insl insl outsb jae jns je imul gs add add adc push add add add add or inc data16 jb gs outsb add add imul punpcklwd faddl adc add add add add adc insb popaw outsb addr16 je je outsl outsb gs add or push imul add push xchg or and adc add add add add or jae imul jae add or push imul je outsb fs add or or adc add add add add or pop imul xor add or inc jb addr16 gs cmp add or or lfs adc add add add add add jae je gs add or jo popa outsb gs insb outsl addr16 add add dec add adc incl xor add adc jb insb insb gs jae add push add je outsl insb outsl imul add add or adc incl add add add gs pop add jb jne xor add push xchg adc add add add add or dec popa jp insl jne imul or push popa data16 jae gs imul les rcll jns adc add add add add or push arpl imul add push add jo jb outsl outsb data16 imul adc jae outsb add add add sbb dec outsl outsb imul insb jns add push add jae fs outsb je jb jne add adc or adc adc sbb incl das add add or dec gs bound jb jae add or fs jb insb popa arpl add or or sbb incl sub add sbb add push add pop add jo gs add or test or sbb incl xor add sbb add gs je imul add or insl popa imul fs add or or adc add add add add jb gs jbe outsb add pop add insb insl outsb add adc mov arpl sbb incl xor add push push add jb outsb add adc imul outsb jae gs insb je je jb add push cwtl add sbb add add push add jns je insb insb imul add or dec outsl outsb outsl je imul lcall add push add add pop add jb popa addr16 imul data16 jb gs add add dec jb xor add adc push or lea adc add add add add or dec gs insb insb jb add push add outsb outsl outsb xor add or rsm add add add add add insl popa add verr je insl gs je add push loopne rolb or and incl inc add add adc jb popa insb imul imul add sbb dec outsb jbe insb imul imul addr16 gs add add or add add add add add insb gs add or dec imul add push (bad) or loop adc add add add add fs jae insb gs add or inc imul jae add or incl adc incl xor add or push outsl jb bound outsb je add or jb jno imul add adc add add add add add or inc outsb gs insb gs add or dec fs jae imul outsb add or or pop cwtl pop adc add add add add adc dec imul je addr16 jae add push add jb jo add add (bad) or add add add or popa data16 imul add push add outsl je jb add or or sub incl xor add sub add arpl jae je je add or dec jns outsl arpl je insb xor add add adc fstl adc add add add add or popa popa insb gs outsb insb addr16 add or jb jne outsw insb add add adc push xchg add sub incl add add add jbe popa jne gs imul jae add or inc jbe imul gs add pop int3 push mov lods add add or push fs jb add or outsb gs jne jae add or adc sub incl add add or gs insl insb imul add pop add je jbe jb add or add sub add add adc push imul gs fs outsl jae gs gs add push add gs add or add push or cs add add add push add jb fs jb popa fs add adc inc insb gs popa jb arpl imul or add pop mov incl xor add xor inc jb outsb outsw addr16 add or dec jns jb insl gs jb add adc or add add add add or dec gs outsb imul add or push imul popa outsb gs add push sbb jbe push adc xor incl sub add xor add insb imul add popa outsb je imul incb adc add add add add add imul gs xor add pop add jb popa outsb add or jg cmpsl add xor incl xor add xor gs jb imul or jne imul gs add push fldl mov xor incl sub add or inc jb gs add pop add jb gs add or push xlat or add add add add or dec jb imul imul push jb fs jae add or into adc or ss add int3 xor aaa xor or inc xchg fdivs mov add xor rolb dec dec add cmp xor or stos add xchg testb mov add add add outsb je je add imul jb popa je sbb add and add insb je add add scas sbb add add add add add add add add sub add add sbb add add and and js jmp call push push dec outsl je data16 arpl inc add testb lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov add cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call jmp add int push mov pop cmp push pop jmp add int push mov pop cmp mov push pop push rep cmp mov dec inc xor pop cmp mov sub add xor dec inc jmp push jmp pop jmp pop call push push push push call pop jmp call dec push inc dec dec add (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call in mov adc dec mov sub push imul pop dec mov stc fcmovnbe xlat pop dec mov stc fstpt ss and (bad) dec sbb push mov push jmp cmpsl cmc mov mov xor lahf das pop mov xor std jb into test imul mov in fbstp pusha imul jbe mov ljmp fwait loopne and pop or mov sbbl sbb dec aam je mov imul mov and sub jbe mov ljmp (bad) ficoml fwait jmp mov ja popa sbb jbe dec out cmp dec cmp loopne sbb xor add dec mov jbe lock imul jbe ret loop pop lds cs sbb push cmp mov imul jbe into jae imul sbb sbb es lret push mov in mov imul mov data16 das ja dec cmp insl mov ljmp dec dec cmpsb or dec xor push dec pop and xorl xor push imul jbe dec fidivl ficom jbe dec lea dec mov jmp mov imul pop movd sub or inc xchg sbb jns fisub imul push imul xor mov add inc fdivs jbe mov cld fbstp push sbb jbe adc dec mov add jbe dec fidivl movsb mov jb mov jbe adc addr16 mov sub cmp insl mov ljmp push xchg std and pop insb jg mov orl mov sbbl xor cmp inc sar subb addr16 mov sub cmp insl mov ljmp push test and pop idivl sub lret imul mov mov mov cmp and push cmpsb jbe adc addr16 mov sub pop sahf jge mov cmpb cmp scas sar subb adc addr16 mov sub fidivl dec mov imulb fidivl mov and jbe imul dec mov imul jle dec mov xor jmp jbe mov cmp cmp jmp jbe mov subl xor pop imull sbb mov dec mov xchg inc int add jae imul ljmp dec mov pop xchg jle dec lock mov imul jbe inc fidivl add jbe sbb jbe mov and pop jb mov add xchg cmpsb jbe (bad) cmc dec cmp jbe (bad) cmc dec addb imul mov xor adc xor je imul dec push dec mov sub xor aas clc lahf sti pop mov xor std jp pop cmp insl push mov cmpb add orl dec jb imul jbe inc mov push jae add jecxz imul or mov jne mov xor jmp rcrb mov dec xchg jnp inc cmp cmc jp mov jbe sbb popa dec mov sub mov sub mov push jbe push dec mov loop cmp xor call repnz jbe sarb mov jbe mov loopne in mov imul mov (bad) pop ljmp push mov imul pusha popf jl pop mov dec dec and or dec mov popa dec sar adc cmp imul jp mov mov dec mov loopne fidivl xchg ds jbe (bad) (bad) dec loop mov add out popf inc mov loop test (bad) mov pop loopne mov std ss (bad) push (bad) mov imul mov (bad) (bad) mov imul js imul mov xchg cmp test int3 movsb jle dec cmp imul jle dec cmp push lret imul jbe ret scas dec mov and and scas cmp mov xor jbe ljmp jb dec mov mov pop jbe dec mov cmp xor sub mov imul jbe cld mov imul cmc xchg dec les imul mov pop cmp gs out cmp aaa jbe dec mov das inc loopne jge mov xor jbe sub jb dec mov mov pop jp dec mov sbb dec shrl jbe mov cmc imul push movsb jbe dec mov (bad) pop mov repnz rolb popa dec mov out dec mov ja and imul jl dec cmp gs mov ljmp jbe dec aaa jbe dec mov sub cmp imul jo int3 mov icebp imul std out dec mov jbe dec mov cltd enter adc imul push loop mov imul pushl pop xchg arpl std negb jbe dec das jbe dec mov push mov push mov pop pop enter std negb jbe dec das jbe dec mov push adc and xor jno cmpb mov pop jno dec mov adc mov in pop mov inc imul ss popa dec mov insb repnz imul jbe dec mov sbb sarl mov loopne lods cmc adc mov cmp dec mov daa loopne mov gs mov orl dec add aaa jbe dec mov das inc loopne xchg mov push xor jbe sub jb dec mov mov inc mov cmp mov fiadd jbe (bad) aaa jbe dec mov add es dec mov decb jbe das cmp dec mov loop mov cmp jae (bad) ja outsl ljmp stos ljmp inc loop cmpl gs stos or std and cmp push dec jle pop sar loopne mov daa sbb stc add ss loopne,pt mov cmp jno loopne mov jbe ret loop mov adc mov dec cmpsb loopne fcomps loopne fdivr xchg dec dec jns dec cmp xor mov js push in xor scas jl cmp insl mov ljmp cmp mov inc fidivl dec fidivl dec fidivl dec cmp add cmp add mov jns push dec mov pop mov in dec mov orl std push addb or mov cs loopne inc inc mov loop rcrb mov dec add (bad) jle jp cmpsb add fdivs dec mov fisub mov imul jle push in imul jbe inc dec pop cmp cmp std ds dec inc xchg sbb cmc xchg dec mov jbe push in imul dec add sbb mov out ljmp jbe shlb and cmpsl imull sub mov lods xchg cmp sub dec out jb shl xchg jns and dec jbe into in imul cmc nop dec int loop mov ja sar orb imul mov push pop cmp popa mov jb fwait xor push mov cs fidivl dec cmp loop mov jbe enter shl xchg jns cmpsb ljmp jbe shr call dec cmp insl shlb loop rcrb mov dec add out xchg cmp data16 jo imul jbe aas (bad) std and pop jae dec mov sbbl jle mov call dec mov add jbe dec mov push dec cmp popa mov mov ja imul jbe push rcrb mov fidivl sbb mov dec dec cmpsb ljmp jbe sar adcb jbe adc outsl dec mov out (bad) mov imul mov imul (bad) mov dec mov push jb mov dec mov iretw mov cmp cmc js dec ljmp int3 enter cmp insl mov ljmp int3 int3 ja dec cmp insl dec mov imul jbe int3 fdivl dec popf jbe dec mov out iret mov imul cmp imul mov ljmp jns fbstp ljmp mov iretw add test cmpsb mov jbe jbe jbe mov jbe icebp mov imul lods dec mov iretw cmp dec lea dec jo in xor repz mov add jbe aas rorb mov sbb dec xor or jbe mov sub mov in or fstl imul jbe mov jbe dec mov jmp enter dec mov iretw mov imul jbe dec fdivs mov (bad) mov imul jbe mov jae push cld sub dec dec sar mov xchg fmul ja dec pop xchg add ja mov out push fbstp or mov mov dec dec (bad) icebp dec mov xchg cld and imul jbe in icebp fisttpll jbe mov add enter out cmp imul imul shr xchg js and (bad) aaa fisubr mov sub cmp imul repnz lret mov imul dec and and (bad) icebp dec mov xchg cld and imul jbe int3 sbb dec cmp jne dec imull sbb jb cld xor imul jbe adc mov in adcb xchg and push mov sbb mov in orb xchg mov jmp jb in dec or dec cmp popa jp aaa loop mov add dec cmp dec dec cmp dec inc cmpl adc mov dec sbb inc mov ja xchg adc mov mov cmpsb ljmp add pop je pop xchg jp sbbl jecxz cmp rorl jmp dec mov in movsb mov imul (bad) daa cmp push mov dec mov push nop cmp lcall jns mov mov inc into mov sub lcall (bad) loopne mov mov jmp dec mov in fdivl jp aas xchg bound lret push dec mov mov dec cmp stos dec inc mov jns mov push cmpsb jbe rcll push icebp notl aas mov ja dec int3 stos pop cltd pop scas or jbe ss jbe ret test jp mov fwait cmp ret mov jbe sarl outsl mov jp mov imul ja dec jbe dec push mov inc mov xor mov pop cmp gs jns mov xchg ds and jbe jns sub jae je mov xchg ds sahf pop dec mov loop mov jbe sbb mov inc mov cmp cmp imul jbe adc sub shll jmp mov cmp gs jns mov mov jae add jo das lret mov movsb pop jge dec mov jmp and push dec mov sbbb jo dec call add jbe jnp mov loopne mov ljmp jo dec call jo dec call sahf aas dec mov loop mov jbe dec jle mov dec mov push or mov xchg dec lds dec nop xor dec loop scas dec in scas dec nop xor dec jmp xor dec cmc xor dec cmp gs jnp mov imul movsb sbb and popa push inc xor jecxz cmp enter enter mov jno jb mov imul mov push lret loope cmp cmp scas dec lods jbe sbb cmp insl enter dec out pop mov mov outsb mov aas sbb and dec and cmc jp mov jbe shr push (bad) cmc jp ret mov imul std pop inc mov sub lods jle mov jbe jns mov imul mov imul jbe or mov cmp scas dec lods jbe and imull sbb out cmp fsubs cld fbstp jo dec call es movsb sbb and xor mov into roll dec mov xchg dec mov mov adc jbe mov jns imul std test dec mov loop mov inc mov sub xor dec lds loopne aam jno mov loop cmp pop cmp and cmc adc mov jo xadd sbb stc xchg lcall mov jecxz cmp or mov sub inc mov inc mov cltd mov jp pop xchg jle pop xchg jb (bad) les dec cmp or repz dec aam pop dec mov loop mov jbe adc and adc jbe dec lds adc mov loop enter mov loopne xor sbb lret loop xor cltd lret test sti sbb jmp mov jecxz cmp dec loop cmp dec mov mov jp cmp in imul mov in cld mov push enter dec mov sbb mov jno mov ljmp cmc test mov mov data16 mov imul adc pop pushf add mov rol hlt jge (bad) hlt jge (bad) bound aas ljmp aam dec mov sub aam pop dec mov loop mov jbe adc jbe mov add movsb jge ds pop inc stc dec mov (bad) lock cmc push loopne xor cmp lock imul mov call cmp mov scas dec mov jbe dec mov xor scas jl cmp imul mov shrl jbe mov and mov xor dec imul pop outsl nop jbe sub push call dec rolb push lret sub mov adc or mov test outsl mov imul lock dec mov sbb or notl outsl nop jbe sub inc call sub dec lret jmp pop xor dec or int dec mov (bad) pop or mov addr16 imul jbe mov mov jbe sbb sub mov sub jae je mov call dec jecxz sbb mov loopne cmp gs mov imul lahf jl mov xor mov aaa jmp rol call dec fidivl dec fidivl dec fidivl mov sub ja sbb xor add mov dec xor aas sbb and dec and lds lea ja dec fidivl and es (bad) hlt push popa shr insl and imul mov dec cmp dec dec cmp mov icebp cld insl inc mov sbb icebp std jge cli std sub mov mov dec mov cmp lock imul mov ljmp repz jp mov or dec cmp gs lock dec cmp jns lock mov test jno push mov imul xor cmp dec inc cmp dec dec cmp add xor insl sbb mov inc xor std xor outsl mov sub mov jbe jo add ds notb dec or pop jecxz ljmp jbe dec icebp xor loopne dec mov mov ss enter ds ljmp mov xor pop (bad) repz lds ds aaa ljmp dec sarl lods adc xor ljmp dec ja insb icebp mov imul jno ljmp jbe ds mov dec cmp dec dec cmp dec dec mov dec inc repz stos aas (bad) notb lds sbb xor rol in insl enter (bad) or dec mov sub add xor outsl lret lret (bad) sarb mov ljmp mov popf popa (bad) repz repz dec mov mov dec cmp dec dec cmp dec inc cmp pop lock sbb jb imul mov sub into int mov insb ds push jp mov push dec mov sub sbb or pop and cmp pop sbb or and lahf and imul sbb fcoms pop das aad or ret inc dec imul adcl add sub adc jecxz dec add and pop jmp push pop jns pop cmp and add cmp push or fiadd cmp xlat push or aam dec add cmp jecxz (bad) (bad) pop sbb in cmp sub sbb and add and add sbb fiadd aas cs and sub ficom (bad) push dec pop xchg push cs add cmp push or fiadd dec imul cmp imull cmp nop pop or imul sbb les dec imul add and sbb cmp xchg mov jbe dec out sub jbe dec xchg dec sahf jbe dec cld jbe dec pop cwtl test imul mov imul lcall std jbe dec lea dec pop xorl imul ja dec mov imul ja dec mov imul ja dec mov imul jbe dec mov imul mov das fcompl imul roll pop psllq sub adc pop and sbb ret dec pop dec test and cmp pop or and add xchg mov adc aas ret sbb sbb bound xchg or add and and and pop xchg xorl aas and add sub mov jp dec mov sbb sbb or pop imul aam sbb aad sbb ficom push dec pop ret xorl jbe rcrb xchg sbb add cmp sbb dec pop fiadd aas cmc add and cmp das aad sbbl rcrl sub fcompl or enter pop mov rcrl cmp fild or les adc mov roll or fstps or mov xchg mov flds or fstps or pop xorl sub xor daa aad sbbl add and adc and adc push lahf xchg mov sbb cmp or pop push xorl pop sub pop sbb cs jbe xor mov and sbb and aad imul les cmp fist imul enter fist or ret cs add xchg mov adc fstps or aad sbb adc cmp mov sub add and xor lds sub aad sbb mov xor pop ds or lds sub aad sbb mov and imul faddl dec pop lahf xorb sub aad sbb aad imul fdivl leave pop mov fcoml sub aad sbb fstps pop dec pop pop xchg pop sbb aas lds add cmp jbe mov mov aas repz aas aad sbb sub jbe mov les or fstps or pop adc sbb sbb and add fdivrl or fild dec pop addr16 mov cmp and add les add aad or mov cmp es add aad or mov cmp cmp pop or call cmp roll add jbe mov aad sbb icebp adc cmp fist orl adc js jbe mov mov sbb sbb mov clc adc cmp sbb xchg pop mov dec pop lods xorb and mov adcl mov imul pop pop xorb adcl xchg lods imul (bad) repnz sbb popa into and inc and rcl jbe fs dec lahf cwtl inc cli movsl andl (bad) sub push cli mov mov or ficomp popf sahf xchg aaa dec inc jg shlb inc jecxz push in jg call add out outsl clc stos je fmuls imul ffree leave add jge fimull (bad) in scas into andl repz mov test outsb adc mov mov mov jecxz xor pushf pop and (bad) cld daa push add add in lret xlat sub xor jle xor xchg das in test mov imul sbb push push jb shl mov cbtw int3 leave push dec (bad) cmp scas (bad) (bad) mov inc mov jns cmpsb pop fildl movsb in in mov insb loope mov mov imul ja dec mov cmpb adc and adc cs in mov mov and mov imul pop xchg dec mov cmp mov subl loop xchg mov jbe dec pop jo mov jbe dec mov add add lods cmp insl xchg cmp int3 fiaddl loop ljmp cmp scas cmp fwait adc sahf inc dec pandn mov dec mov (bad) outsl add add push jbe fcmovnb pop test (bad) pop lds push in push xchg push es std add mov mov mov add jae add cltd and into cmp in inc jbe sbb outsb sbb sti sahf push sarb push ja inc (bad) cmp push push fwait mov xchg fs sbb jae (bad) loope adc mov sbb inc fwait into test (bad) jle jg rcr push lds leave ret adc push mov mov mov (bad) mov lret insl jne jo adc rcll xor mov mov outsl andl adc push lret mov iret (bad) adc mov cmc in push inc loopne setle iret test xor mov pop add mov rcll sbb cmp das loope int3 sub lock ret xchg pop (bad) push push xchg xchg andl add xor js mov push popf hlt sbb mov mov jae pushl push setp adc aad mov inc push add loope dec (bad) and inc (bad) roll jmp mov inc nop xchg fwait enter or push add ret out scas sbb loop ljmp cmovnp lock out (bad) mov mov dec jl repnz inc sahf mov pop push push push add pop cmp or mov xor ret fidivr pop popa mov fmuls push (bad) fmul dec outsl (bad) call aas jne repnz fdivl and jb add and push lret mov bnd push lret sbb cwtl pop dec xor pop clc jl ljmp test dec scas ret xchg outsb mov jg pushf bound adc xchg or (bad) cmp rcll cmp addr16 cmc sahf mov out mov xchg mov mov out and cmp mov xor bound xchg push stc loop fsub mov adc xor push std lret cmp jmp mov push or stos push clc mov cs out gs dec pop pop or mov ret js out aas mov inc movsb cmp push movsb imul xor inc mov je lcall cmpsb mov daa leave or jl or cmp leave and enter mov sbb incl cwtl addr16 dec jns dec outsl push sub enter mov xchg imul lods repz dec adc inc push pop lret int3 push dec xchg sbb adc add add or lods stos jmp jnp cmc mov fcompl jmp and sbb shl jbe dec push and outsl cmp std xchg pop int ret call pop imul leave inc xor fsubs repz add lea sub aas jbe mov rolb jg imul add sbb ds (bad) lock mov sbb cmp mov in and xchg ss ja test ret cltd push outsl and sbb pop mull out insl pop jmp inc mov out mov jle xor pop mov adc hlt dec push sbb or inc mov add jns mul call shlb adc mov arpl mov mov adc roll int push adc (bad) imul in notb test pop imul dec mov sub xchg inc sbb loopne cmp fisttpl cmp out lcall lods int imul aam in mov mov mov (bad) je sbb jbe arpl sbb arpl xor inc (bad) lock sub outsb stos lea cltd inc pop stos repnz icebp rol (bad) icebp inc push push push xchg adc stos test pop lods shrl lcall (bad) mov leave je fisubr push cmp mov movsl adc or cmp or daa ja (bad) jmp in imul xor mov or mov out jge cmp std and int aam lcall stos xchg mov in ret (bad) dec inc leave adc mov movsl into iret imull push mov in xor sub lahf imul or sub cmp into rol mov pop mov daa pop xor fcompl rorb (bad) xor pop jns out xor enter or (bad) xchg insb xor xchg add aad scas fcomi int push or push sbb movsb cmp ds and mov mov test mov mov ret push rcr sbb fmul stos adc sub cld xchg repz pop jns pop (bad) enter into sub mov push pop insb mov mov mov mov fwait das aad mov jbe jbe ds jl add sarb insl mov (bad) lock dec xor fiadd fnop xor dec jae sbb sbb sub test add pop icebp adc mov sarb sbb sbb jl pop lods push (bad) mov cltd xchg cli xor dec add lret dec pop call imul pop test jne hlt push fwait push out xchg or and cmp cmp (bad) cmpsl xorb and pop mov xchg sub sbb aad sub pop jp inc pop cmpsl fidivl mov push mov in add push jle (bad) mov popf xchg mov xchg push jge insb or sub frstor rcrb (bad) fdivs ss (bad) dec fwait xor shr xchg (bad) call and call adc pushf out sti rorb cmpsl (bad) jo sub sbb jmp repz lods jg,pn mov std (bad) out push daa pop out stc imul sbb call daa inc (bad) loopne ljmp in fimull xchg idivl cmpsb dec pop or arpl loop (bad) (bad) or in adc sar xchg mov lcall dec mov lea and jae fiaddl dec (bad) test jne push rcrb or sub xchg mov adc mov or jl dec xchg loopne js cmp cli lock xchg out sub into test lock movsb sub push daa fildl mov js xor pop adc into mov out fistpl call jne shrl cmc pop inc roll into lcall push add popa imul lcall shr fs jecxz lea loop mov (bad) inc ret jo push jbe sub adc cli dec or xchg cli int jmp xchg call lods (bad) std aad rcrb test jne sub inc (bad) or ret xchg jp and mov inc fcoms js sbb hlt les xchg inc inc sbb mov fucomp aaa loopne dec lcall popf jbe jnp jp mov es fwait mov pop sbb lret test jg or stos lock inc test rcrb stos mov movsb mov daa dec (bad) (bad) stos pop push cmp data16 nop notb lea and or loop mov inc das lods fmul pop lock testl jle (bad) mov push adc fimull push minps gs lock test bound sub mov push jae dec lds xchg decl mov jno inc and lods lods xchg inc pop arpl pop negl loop sbb (bad) pop mov dec cld loopne mov fiadd push fxch xchg cmpsb xchg ficom (bad) fstp clc adcl pop imul ret xor pop inc dec add (bad) jmp shr add rclb jle addl ret mov les cmp xor sub and (bad) mov pop daa data16 sarb mov cmpsb or arpl push out mov js es arpl inc (bad) in xchg inc xchg movsl adc (bad) lcall lds xchg lock mov sub movsb push dec dec push shrd xor out push nop jle mov pop test xor in mov insl add (bad) sbb inc xor lahf in dec out movsb jl xor cltd sub int and push fwait xor add mull fnstenv repnz jbe scas and lret lds cmpsl and mov into fwait pop jle insb fstps xchg dec insl loop add test jmp into inc mov pop les cmp dec pop ja mov lret enter inc lds arpl inc cmc lds pop (bad) jnp xchg jne outsl or sub xchg mov adc xchg jecxz and aad and sub xchg adc mov outsb xchg std subl lret ja push dec jle (bad) jmp imul daa in push insb fldl mov mov pop (bad) fucomi or cld inc js and (bad) cli and adc add and push mov loope imul (bad) and mov sub rcr add inc int js notl lea mov cltd jnp and dec shll (bad) jbe mov fdiv pushf insb cltd nop test add testb std mov ss pop aaa (bad) jae jno shrb push sub cli aaa jae jp push pop test fisttpl cwtl jnp jns sub jp repz and inc dec push jns xor dec shrl xor cmc mov jb popa jge xor (bad) push mov (bad) sub jge xor and call and cmp xchg loop fwait imul sarb je ret std push stos mov movsb cmc dec pop jl mov cltd arpl pop or dec dec mov loope dec and xor mov and mov sar jno mov call das dec push sbb subb popa dec add loopne,pt cmp dec je aas and dec sbb pop frstor push jns and stos push or lret xchg sbb or mov aad pop dec test insl adc js inc push jmp xor fsubs jae sbb cpuid mov lret enter sub enter imul lods imull inc jecxz jecxz mov pop (bad) enter pop gs ljmp rcrl test lods stos dec sub cmpsl imul adc mov ja pop inc ret adc icebp pushf sub mov std and inc (bad) sbb push inc into pop cmp xchg fdivrs jmp cmp inc mov mov movb dec xor inc decb cmp fistpl xchg rolb push insb push fisttpl es sti aam pop or daa je jo pop mov (bad) ret jae push bound das popf push inc inc pop cmpsl adc int3 repz or popf push push fiaddl int mov je mov insb pop negb in add mov add fs and aad pop lods push pop sub mov sarl pop pop jno mov mov cmpsl das adc jb or sarb or add or frstor lea push fdivrl cmp clc mov push imul (bad) (bad) or dec fldcw jno aad jge roll lods mov mov xchg arpl xor inc sbb sub push test int sub enter jmp inc and fimul xchg jle push jo aaa sti je add lock and dec imull fnstsw push rorl inc mov fistpll jp shl insb repnz out push lock cmp inc fwait cmp loop test idivl mov (bad) and clc dec cvtpi2ps mov cmp push lea pop test jle in outsb jnp shlb xchg das or lcall jecxz or mov insl cwtl bound fisttpl adc xchg mov and mov lds inc cmp mov pop xchg xor loope test lods mov lea pop mov cld stos push xchg arpl (bad) int3 push lods divl clc and fisttp mov sbb mov add outsl sbb jns dec and ja adc pop pop sbb xchg jo data16 addr16 jne push (bad) les mov lcall pop mov lods jmp std sbb mov js out out xchg pushl jg pop in stos cld push adc sbb add inc iret cld lret mov or roll mov mov add lret lahf sub test push sbb (bad) nop repz cmc cmp out lret sahf int stos pop cmp push mov cmp mov cmc pop (bad) ljmp dec out ficom hlt adc les stc jnp out in push and cmpsl subl lods sbb stc mov xchg imull cli dec mov mov and ret and daa pop (bad) ss ja adc mov (bad) pop out es xlat inc cs mov add sti fcmovu in sbb adc iret sar add add lock lea jbe mov sub mov dec inc fwait pop and lret sbb enter ret mov lds aas jae adc divl mov (bad) mov mov adc add in jecxz inc sbb lds scas sub cmp lods or pop inc jbe pusha add ljmp jmp and fs lea cltd pop insb or pop push mov (bad) push cld mov stc cs mov push sub and movsl test ret in xor inc and (bad) dec mov and sub (bad) sbb cmp adc mov in jo fnstcw popf cmp mov mov scas and xchg arpl (bad) jo in adc inc dec push std lret adc cli xchg fist push mov add movsb daa es test cmpsb cmpb push fidivl daa pop call test xchg pop xchg xchg rcr xchg sbb sbb test sbb repz insl sub sti or (bad) repz jmp cmp pop outsb sub mov aas add push and leave nop sub (bad) scas and leave fild pushf push pushf into fiadd sarb pusha lods mov adc push xchg xchg push int3 mov lds sub cmp add inc mov xchg cld jmp push jno and adc into xchg xchg jne gs leave mov mov push inc jbe (bad) sbb leave enter lret sbb (bad) test adc sbb push push cmp pop and sar sbb push sbb mov mov in add cmp ljmp nop cmpsl sbb push mov sub arpl jl enter lret mov sub (bad) fidivl sbb orl in sub or stc rorb add jl aaa cwtl mov bnd inc sbb add sub nop mov insb dec inc in push fisttpl movb (bad) mov mov lcall push es cmp test pop jbe inc jecxz loope pop lock out jecxz fldl sarl add (bad) xchg decb aaa lret fdivr push xor jle xor pop out int3 push pop clc pop loopnew inc cmp pop cld js in mov adc inc sbb mov xor aas sub and jns or (bad) out adcb xchg mov mov leave btr (bad) (bad) sti mov nop jecxz gs fsubs pop sbb std test add jge test testl inc mov adc jae mov cmp lcall sub iret fucomip cmpsb jmp sahf add test or push dec mov and test xchg mov ret push lcall test inc (bad) sbb pusha scas (bad) in push add stc mov adc sub call cld xor int sahf imul rolb in mov sbb lock push scas cmp and lret leave movb jp subl jg sub inc inc aam aas stc add sbbb cld inc sbb sub add out push lock stc cmp popa pop pop xor out and into and fidivrl mov mov call jmp inc insl sahf test js adc je sbb adc (bad) stos ja arpl xchg jge jp (bad) xor or mov scas jne push or nop mov ret test xchg adc (bad) or cmpsb out lods movsb jns and in icebp rol fiadd leave imul jbe cs in and in (bad) dec xchg mov (bad) nop mov or inc pusha sub scas ljmp xchg test pop push les pop adc fwait add popf mov cmp cmp clc xchg mov jns (bad) adc sub add dec and xchg mov add add sarb xor or mov inc xchg cli mov scas ja insl lods dec repz pop mov sub xchg movsl mov cltd dec or inc mov inc fdivr fildll mov jecxz roll sbb ret cmp movsb xor fdivrp int3 push mov idivb jbe pop call (bad) mov adc adc jge inc sbb decb mov mov mov sub fcompl jp movsb stc jl lock and mov shll pop loopne adc iret das and dec xchg xchg cld jns jbe dec cmpsl fistp xlat mov test mov xor rcll sbb lret enter xorb insb test pop ds push sub jmp mov (bad) mov jmp (bad) repz ljmp xor in in mov dec sub test (bad) les xchg int cld mov inc int3 sahf inc mov push push movsl rorl test sbb (bad) out and bswap sub fldcw xor jle mov and stos push test rolb cld inc cli cmp dec outsb xor das movsb inc divl pop xchg sub mov inc adc (bad) aad mov cld test jg jbe (bad) adc xor dec nop insb and insl adc in movsb push mov int3 dec xor arpl mov pop (bad) pop add sub cli (bad) lret imul dec repnz inc ret rolb in fimul outsl jb pusha xchg cwtl push xchg insl into xchg idiv xchg mov cwtl lds arpl mov and stc pushf call gs dec pop xor ret inc fstpt and pop enter jmp xchg inc sbb wrmsr out or (bad) icebp xor xor sub gs xor loop out fmull leave jg in aam adc imul (bad) imul sti mov ret imul mov test (bad) push mov mov cmpsl cpuid mov (bad) sub mov fcoms push inc insb sbb jge lods pop xor inc insb mov test dec push dec adc fs ss and ja mov movsb jb aaa sarl sarb movb div and sbb (bad) dec iret pusha add pop call hlt or cltd sub (bad) dec int3 sbb sti pop in fs cmp mov and xlat enter xor push inc inc lret sti cmp pop lcall dec and dec int loope test lret inc dec je sbb shll (bad) test clc pop xchg and ss lahf (bad) (bad) rorl pop and adc xor ret fldt outsb inc jae dec cltd stos dec xorl ljmp jb xchg ja inc add inc rorl or enter mov or inc jp sarb dec fnstcw std ficoml add pop inc or dec xchg shl fisubr sub mov adcl addr16 adc pop fdivl sub cmp rcrl jge jl xchg inc mov xchg leave outsb lahf mov outsl sbb lahf int3 mov loop int inc cmp mov aaa sub ret pop jmp (bad) dec stos mov fisubl jmp imul and inc test inc (bad) into xorl xchg jo mov sub mov dec shrb fmull pop mov push inc dec mov pop out repnz test fstpt loopne jl ror jmp add test stos ds sbb and aaa cmp cmp mov mov sarb out sub ficom ficoml fstps test push xor sub pop mov mov stos inc or mov in out sti popf mov js data16 aas dec nop xlat mov jg ljmp pop leave xor xchg mov push fbld ljmp adc add lahf aas or or push testl (bad) mov sub out jno mov add cld adc mov add rcrb mov adc cmp xor and mov mov stc out imul push pop mov fist add push pinsrw push ret es xchg add pusha mull push jecxz rcrb ss mov mov fwait lret out adc add xchg inc pop sub lods lods loope jns je jg aas out or or nop add xor and dec bound popa loop jbe lods jecxz adc jecxz sti (bad) and mov nop fs lea (bad) mov inc iret adc jp lahf mov xchg divb pop cmp push pop ja outsl xor hlt and dec pop insl cmp and mov mov push add cmpsb mov int3 inc xor outsb inc mov add cmp push rorb das lds sub loope (bad) repnz fwait out out das mov stos ljmp and cmpsl inc dec loopne arpl pop lods mov lret aas rcll dec cmc and and xor aaa in stos and cs xchg popf movsl or sub imul rol fdivl repnz and int and das sbb add int sbb and xchg insl jle jae test jbe fidivl fdiv rorl or call scas fstl sbb insl push xor xor xchg dec add ja jle pusha cwtl and mov inc mov adc test xchg mov test mov jecxz xor cmc xlat loopne mov mov add cmp mov test push aad push jle push idivb mov iret dec xchg mov xor bound jl sarl xchg adc dec lret jnp pusha sbb add jle adc pop lods (bad) leave and aam cmp repnz xchg in sahf data16 mov sub pop add les mov push (bad) pop pop std pop ror or mov rcl lock hlt loop inc mov adc leave mov push jmp nop cmpl xchg inc ss loope bound into fwait in push mov popf add inc xor sbb (bad) jo (bad) xchg xor mov rcl lret push add push repnz nop cmp xor lods enter test adc (bad) andb sbb mov push cmp push cltd lret mov mov stc mov in mov into xor outsb xchg dec frstor sub lahf jle movsl pop mov mov test sub lods loopne inc enter cld adc xor int sbb fadd or test dec insb icebp sub clc loope mov and mov fnstcw movsl stos dec mov out call js out lcall push mov xor and ficom or sbb (bad) mov movsb adc fisttpl cld leave dec test push popf mov (bad) pop ret mov fistpll push push push mov test in ja mov fwait adc mov leave mov fisubr out and xor jl sbb cmp jecxz push fistpl mov xchg push and push push not (bad) jmp js xor mov inc push adc (bad) rolb push cmp push jge imulb dec mov int3 push or test cmpsl xor push in add ret cltd insl inc mov aam ret dec repnz jne push ljmp out dec (bad) and ds (bad) sub mov and stos mov fstl into mov fldcw pop and shrl mov cmp fwait lret mov pop fidivr or mov xor daa pop aam ret repnz pop mov xchg loop dec sbb outsb int3 sarb mov icebp ds dec ds lea mov jp les int3 lods iret insb ja stos pop lea lock inc sar sbb aam adc add add jmp jge jns cmp mov sbb or and enter mov jae les mov push cli cmp mov mov adc pop les stos bound stos jmp enter scas jnp jbe repz movhps adc xchg mov inc pop outsb xlat hlt rolb add insb fcoml mov push movsb mov lods loopne push (bad) and add dec dec sbb mov jecxz push cwtl fsubrs scas fstps push or out or pop lea outsb push lea inc adc imul push xor sub adc flds adc test mov scas orl pop movsb std ror stos pop lock fisubrl mov ss or repnz add pop imul mov dec jne je in add or popa xchg icebp dec leave in push and mov lods loopne (bad) mov and pop call aas imul xchg rcrl adc mov test sahf mov xchg jns je xchg ja sub imul popf jno (bad) icebp push sub aam sub inc sub push fisubr cmp fdivrl ds adc sbb push push push jecxz icebp cs jmp mov xor bound les push pusha iret fstps mov aam dec jge outsb das push arpl inc jns test or mov inc xor push lods push fnstsw dec leave or (bad) mov outsl je cmc sub jmp add into es add inc sub int3 adc je cmp pop mov sub ss xor cmp ljmp mov cs mov fwait aas stc sbb xchg cmp sarl lea cmp cmpsb and cli cltd jbe ret or mov je popf int stos mov dec adc adc and mov fbld mov sub xlat lcall in mov in jecxz jo (bad) adc out push fxch es fcom sub sti mov outsl mov cmpsl rcrl or inc cld xchg stos fnclex xlat shll out mov mov stos xor pop sbbl or cmp imul jecxz icebp (bad) lds add aaa cltd mulb jae sub pusha inc iret das insl fwait out sub dec dec add xor mulb dec xchg test mov aas cmp fimull mov dec sbb pop inc inc or ja fadd mov stos addr16 xchg mov pop mov add sub add fndisi(8087 dec pcmpeqw dec adc lock sar inc cmp (bad) cmp push lret addb ss leave outsl (bad) push clc pop cmp popf fwait inc push mov in inc into shlb imul xchg jbe jecxz aam cmp sbb jae mov (bad) push out lret push faddl inc mov cltd iret (bad) pop jmp mov pop add ror imulb test lea jp loopne scas shrl jmp or nop push dec add xchg xor mull stos movsl mov sub push in lds sbb xor add cltd pop jmp in mov sti in cmc ljmp icebp jecxz dec loope call push mov sub ret dec add out sbb cltd cld mov mov mov je or lcall loope cmp or xchg pop or mov (bad) fcmovu sbb imul inc in xchg jne decl dec xchg jo inc into adc addr16 clc dec scas hlt jg int jae mov and xchg test mov pushf jae jb lret inc scas xchg ret adc sbb push lcall inc imul adc push push mov (bad) out sahf xchg (bad) inc repz sbb insb rcrb jle les and cmp out dec fstps push mov or (bad) leave add mov popa push jmp mov clc sbb xor fldenv aad xor cmc clc push mov outsb cmpsl stc ja cmp ljmp aam scas lods out xchg icebp mov add mov jae imull pushf inc fstl push movsl cmpsb lods mov jns sti (bad) jo and mov or jne cmp mov aas sub rol outsl (bad) mov nop jns cmp and push lods sarl in push in ret out mov (bad) in mov std mov jl jg lods fwait push pop jae and nop les push pop ja das outsl sti out dec (bad) leave and idiv mov xor test mov lock sbb fbld in push add (bad) out call xchg pushf js cmc push mov outsb stos out daa imul push jmp push js mov jg xchg inc sbb sbb inc test mov push (bad) je mov add cmp cmp fisub mov out pop jmp push aaa mov out lods stc fs adc sbb divl arpl (bad) fadd mov sbb testl cmpl test ja add sbb (bad) xor outsl outsb xchg jp and xchg dec xchg xchg movsl jns (bad) mov hlt add cltd push jnp popf in or xchg mov inc inc mov fcomp xchg push adc xchg fwait jge dec clc lock std test bound or sub aam sub insl into addr16 mov cmp lock pop or test xchg xor add push add jnp cli cltd mov inc pop test fiaddl sbb setnp sub and pop repz cmpsl and jb div out or mov xchg jg neg test std lock stos sarb xchg and into cmp xlat xchg rcrb cwtl das arpl andb push in popa sub and push pop pop inc bound call movsb sbb pop dec nop push popa (bad) scas xor mov in loope sbb out mov dec push (bad) aaa jle lret cmp sbb add aam sub mov dec shrl movsl jmp bound sub mov rol lret mov dec imul imul jne fldcw sbb fcoms jg fisubrl jmp jnp dec mov subl adc test lcall push fmul lods repz out lret inc mov cmp stos aam movsl sbb sub adc xor or stos popa clc mov pop fldenv loop outsl roll adc je xlat lods and addr16 mov lock xor add jae mov mov in jnp jb outsl mov jb jnp stc add sub sbb mov push xor push dec dec in dec adc aas fnop fnstsw orb lods jno lret shr (bad) dec (bad) rorb lahf or (bad) cld lahf movsb popa lcall or ret adc int3 pop add dec pop adc jp testb out lret outsb mov bound out test dec pusha mov xor mov out mov ss rol xchg cmpsl add lods ljmp xor lea jle sbb add sbb push xor iret jl jae jns ret sub push pushf (bad) imul (bad) int3 insb je mov (bad) imul popa js sbb push pop les in sbb inc add jmp aam sti stos xchg xor push push adc dec lahf clc loope dec jge out pop loop dec das and enter pop or and lahf add sahf rcrl shrb pop addr16 xchg (bad) xor outsl ljmp mov stc and and cld xchg cltd inc fldlg2 push clc cmc pop in jg fs cs gs mov js cmp lea scas jecxz lcall stc iret add cwtl push or repz loopne mov (bad) in jne sahf outsb xchg and int out pushf dec scas fstpt lods pusha loope pop and xor pop pushw ret pushf inc sub outsl xchg (bad) fs movsl xchg scas xchg in xchg cwtl lds fs pusha sub icebp xor jl aam sbb ljmp fldl pop add stos sub mov dec xchg inc mov jp lds ret clc rcrb mov fstpt pop insl cmpsb les sub js es test leave sub xor (bad) daa lods push sub mov lds lret out sti mov lds mov (bad) pop xor pop nop pop mov xchg jg test add (bad) pop push and xor xor pop jg mov stos imul int3 addl mov mov mov pop mov jae or dec sbb sbb scas cs adc enter cmp rcrb xchg sbb mov (bad) mov mov xlat or loop dec xor mov cmp and out stc xchg dec in ret mov cmpsl push (bad) jl movsl xor testl mov iret sbb mov add fsubrs xchg cmpsb es mov das ss out popf or lret mov fldt inc das xor cmp in sbb push cmp jle cmp sub cmpsl push mov pop or add or mov or jmp jno jecxz in sbb mov ret rorb push daa sahf cld mov sbb cwtl push push ficom aas mov aaa outsl sbb push jmp dec jno adc inc dec scas add out pusha cmp (bad) cmp je and rorb int in mov dec xchg adc ds in ljmp clc cmp lret imul xchg sbb shlb lock out gs in add sub adc rclb aam (bad) adc cmp leave sub or jle mov movsl sbb jno jns out xor out and and cmpsb jl mov mov int mov cmp pop rorb jmp sbb (bad) fisttp or push scas iret outsl or push xor cmp inc lods test xchg pop and mov (bad) or imul pop sub lods xor and test adc ret sbb mov lods movsb push mov mov data16 cmp clc dec fild incb test clc mov test nop sbb xor xchg sbbl xchg and out adc test and and jo pop xchg cmp add in adc lods push lea xor push jge loope cmc and cmp xchg je repnz outsl cmovge (bad) addr16 dec stc mov rcr add test cld cmp sub subb (bad) aam sub push lret add lahf cmp xlat sbb adc add xchg call xchg jo leave stos adc out adc pop xlat xchg adc jmp outsb push xchg stos fisttpl cmp aam sbb mov dec btc imul cmc dec fidivl and nop stos inc addr16 fld pop inc sbb test dec push ss sbb mov cs mov daa das loop sti add xchg or add pop nop es push push stc jle cs mov or xchg insb push sub adc mov rorl popa sub jge out sbb mov mov pop stc cld test ret adc sub aad lea xchg adc push add jnp loopne daa rcrb faddl mul loop rolb insb repz or xchg sub mov lahf inc mov push and hlt ja sbb mov addr16 addb lea cmc adc jecxz mov adc in jle mov daa jne pop pop ret imul or shlb fldenv xchg je inc and adc cmp or incl add rcrl daa mov stos add scas sub mov ljmp sub cmp mov lea inc ret (bad) cmp push pop xchg lock add incl cmp fs aad mov jl les ljmp imul in ljmp (bad) xor fadds or pop shrl es add push dec jmp cmp lea fistpl jno mov inc addr16 mov fldt imul lods xchg cli or (bad) xor sbbl js insl cmc bnd fcoml cwtl loopne xchg stc daa movsb mov xchg dec repz dec xor icebp jecxz ret das mov movsb or mov test orl loop test xchg mov pop and lahf shlb cmp jp (bad) mov pmaddwd xor xchg arpl arpl push jb fimull imul ljmp mov mov lahf int xchg xchg cmpsb in int3 call call inc xchg dec js mov lret int in cmp les xchg ja sub sbb add lock lret sahf cmpsl repz jae push cmp or ja repnz outsl rolb fs hlt fistpll pop repnz jne push add fwait arpl popf stos fdiv mov into jnp mov pop (bad) xor push jns enter jne fcoms loope cmp cmp cld mov mov aad add inc shrb lret sbb lea add mov cmp jg jnp dec clc cmp loopne adc test (bad) data16 sahf outsl iret (bad) pusha jbe ja add cld sbb fmul mov stos jg jecxz inc mov adc ds mov sbb hlt lods cmp sub pop cli pop push loop and mov (bad) push and add jle xchg test (bad) sub xchg out xchg inc ret ja add xchg sub insb xor ljmp mov and mov in push push fsts rcr lods and stos xor std push and xor xchg cmp lcall out fstps aam movsb dec and jecxz xchg (bad) or xor fidivrl jnp test xchg (bad) add int pushf lret xchg loopne jmp jb aas cli xchg mov adc jno and (bad) xor fs pusha push test add cmpsl pop mov stos push inc popf cmovae inc mov sbb (bad) lock mov orl add jecxz arpl lahf xor and inc mov lds movsl hlt mov stos sbbl fcmovnu leave btl mov dec ja pushf popa push push cmc int ds repz xchg pusha sahf test mov fstpl mov push shrl (bad) jno cltd popa push lods push imul je jle pop mov test scas pop dec or dec test push adc fldenv lea cmc in dec mov dec push ss vmread out xor mov in scas test xchg scas in imul ljmp jbe jnp pusha fstl or (bad) (bad) mov fldcw std icebp or sbb fs xchg mov jg inc sbb mov mov xchg mov pop mov and pop sub fsubrp dec adc test push sbb adc fdivrs dec movsl mov outsb fs in mov (bad) inc imulb adc addr16 sub cmp adc cmc adc lods pop mov push stc cmp loop or sbb in (bad) jmp gs push out or inc fistl js and mov hlt cli xor inc fs rcll adc xchg bound push jmp nop mov jnp (bad) push sub mov cmp fs push (bad) popa movsb and pop aas pushf sub sti sub mov orb mov hlt mov sbb and mov scas (bad) mov js push ss mov inc fs mov imul dec aam sub jmp cwtl cld cmpb gs (bad) (bad) stos adc xchg int3 out aas push sbb xorl je sbb cmpsb and lea and or out dec cmpsb adcb push js xchg adc pop push mov push jecxz movsb int loope ja xchg in icebp xchg sub (bad) dec cmpb in orb pop xor sub out sub (bad) mov or adc loopne lret (bad) mov cmc add mov nop pop rorb add cmovns or out mov fcomps insb mov xlat dec adc sub inc adc push int push pop xchg es dec clc mov sub and (bad) lahf movl das scas lahf add shlb movsb stc jecxz xchg into rol jmp pushf or cli xor flds adc iret icebp jnp push xchg ss jno add pop mov fstpl (bad) xchg mov scas push movsb jbe jmp add sub enter cmp les popa fadd icebp jne out push push cwtl fwait pop mov fisttp mov mov lock test cmp xchg (bad) mov enter fdivrl fisubr lods cltd dec dec jbe loopne pop xor sbb xchg xor add orl leave cmp inc iret sub aad push or push insl or sbb cmpsb sti mov push in out popl xchg xchg mov test mov xchg xchg jl xor mov arpl es inc xchg sbb sbb aaa (bad) icebp sbb or push fsubs lock mov sbb jae pop mov test cs cmp ds xchg movsl fs lahf imul jle sub sub ds xor rorb loopew pop sbb pop into andl mov test jmp aam loop lock fisubl bnd data16 mov pop dec cmpsb cld sbb adc jo popa pop add sarb cmp sarl jne pushf outsl (bad) mov out push enter movsb inc and push mov lcall pop cld jae inc lods adc sbb cmp stos mov xchg dec push test into xor out iret nop jge mov cmpsb mov xor inc mov mov out lcall orl cmp lahf inc cmpsl insb ds and xorl js iret sbb data16 jo fnstsw pop push dec xor and and adc or jl stos jp mov inc xor sub mov sahf mov pop lods js sti int3 (bad) cmpsb ret sub lock push inc dec rorl mov jbe or gs adc (bad) pop adc or mov mov cmp out mov jle lcall fcoms repz push mov ret adc cwtl test or mov ret (bad) stos data16 jecxz lds jno xchg shrb add into (bad) pop inc lahf into inc cmp push pop fs inc andb or mov js push fdiv mov sbb cmp sub out (bad) jle mov cmp fsubrs pop mov and test push dec dec gs hlt scas call jne inc enter dec or cmp fwait mov lods (bad) lods in xchg push mov and cs adc jo adc repnz mov lds rcrb lcall sub pop adc scas call inc fisttpl lcall or and cmp lahf cli mov mov rcrl adc das out dec rcl sbb mov mov sub test cli loopne fdivs mov cmpsb jg dec in insl fs pop add pop test std mov fcomp loopne inc nopl rcrb or lock mov outsb adc xor fs push sub mov and mov (bad) imulb enter fsubs pusha das dec ljmp sbb out (bad) dec xor xchg jnp fdivrs loop cltd pop xchg or jecxz sbb jle xchg pop lret stos les clc scas js rcr jno aad sub mov inc inc ljmp test xor pop rcll enter aam sbb push adc push pop lcall push or xchg mov test out mov ljmp lock lods addr16 adc and hlt xchg inc das out sbb (bad) outsl imul mov or fdivl add pop and (bad) mov test mov xchg pop inc (bad) inc test pop pop sub sbb pop gs mov sub lcall xchg mov add inc push popf lcall lods lods test mov xorl and adc in roll out icebp into fimul (bad) movsl and movsb mulb jns mov or ss inc repz sbb popf int3 xor mov pop cli neg mov cwtl sahf jge lcall ret les sub and jg adc ret pop lcall mov pushf cld add adc mov loop lea and fistp (bad) insl cmp xor lods (bad) jmp sti or sbb push inc xor inc and fwait ljmp inc fnsave jmp into sbb mov add inc adc xor push add inc sti xchg test xor or dec xor ds setle jecxz mov popa add mov or das mov cltd jge (bad) mov mov in sub jl cli cmpsb pop cmpsl inc pop mov outsb jp out xchg out out xchg repnz mov or sahf or idivl mov fs push lea inc fiadd jle mov ja cmove mov les rclb ds sti pushf pop into mov pop xchg fimull pop mov cs lock sti add dec (bad) mov stos leave cmpsl add (bad) jp pop cmpsl arpl mov ja (bad) call pop xchg outsl and popf and and out xorl mov sbb pushf icebp adc cltd test adc xchg pop imul iret sub js push mov xchg (bad) cmc xchg inc mov mov push pop scas sbb mov and inc fcoms icebp mov cmpsl pop sbb xchg mov lock fidivr or (bad) out dec mov out or imul xchg fwait icebp or sahf loopne xchg xchg insb stos lds push or scas mov xchg push ja lods inc in inc and and mov adc leave mov lods and push mov xchg out cmp lods adc pop adcl or jns loop sbb fistpll aam je xchg xlat loop lods push or popa sti mov stc mov adc and xchg inc jg mov cs jae and loop lcall xchg and movsl lea sbb xchg push fucomi mov icebp xor cmpsl cmp jmp jnp pop mov mov scas and mov lds pop push arpl sub dec mov scas roll and dec push lds sbb cmp sbb push nop sub mov inc sarb or in lods dec sbb xor xor loope xor fabs adc cmp xlat inc and jle nop jmp movsl dec int3 add rorl (bad) clc jns mov jo pushf pop sbb jnp aas inc incb loopne nop mov adc jmp cmp cmp leave and bound or adcl repz mov fistl mov xor stos negb lds mov lret lods fistpll sub ds mov loope lods push icebp pop cmp insl xor mov pop jmp insl mov or mov xchg and gs push mov jmp inc xlat icebp fsub lcall mov or push or push mov xchg shlb lret dec stc arpl lock or (bad) add hlt stc aam ret inc cmp xchg mov sahf mov out or inc ljmp and (bad) sub bnd das (bad) in push xorb inc enter mov mov xchg mov jg add sub outsl frstor dec push call adc cmc (bad) daa mov fmull add mov lret push je inc sub mov ja sbb nop int sbb add and add scas jmp adc inc jge out jae jo stc sub testl ljmp or jmp or push lahf xchg sbb loop pop mov lret lcall dec std pop (bad) dec mov adc insb and sub jno xchg cwtl (bad) into xor pop inc jne sub jg insb xchg (bad) adc out jb mov xlat rorl fimull cs xor mov repnz push inc and push pop xor jne jnp pop ret inc imul dec sub sbb arpl mov jecxz stos imul push rolb sbb ds adc dec mov scas shlb popa push or sbb cltd push negb jnp aaa in fisubrl pop mov imul lret dec in or cmpsb sbb in dec test inc dec inc sbb jp (bad) dec sub adc pop scas cmp jmp sub push inc popl xchg (bad) mov test or xchg imul and xor mov lahf pop ss sbb outsl (bad) cmpsl out dec jns addr16 popf pop jmp and add les cmp out xchg cmp jecxz cmp xchg test ja adc into xchg jle sub andl popf lahf jne push sbb testb loopne sub imul in push into call insl mov cmp and and stos loopne mov inc and imul and rcl ret pop (bad) push rol sub or jno aad jno cmpb xchg pushf pushf (bad) fistp mov jbe popa adc aas leave cmc mov mov lahf xchg (bad) (bad) ljmp sub sbb pop dec or xchg add ret lahf mov cmc ja enter cwtl mov out jne push lcall out jecxz (bad) fnstcw adc movsb leave adcb mov sbb add jp pop or push (bad) or nop add xchg sti fwait gs pop adc and ja xor cmpl inc inc test loopne lods cs out xchg inc int3 xchg fs sbb sti (bad) mov jmp int3 mov and shrb dec out je xor xor mov sbb push (bad) fisttp out mov lods rorb sub outsl test insl mov xor mov push stc mov int insb adc and push add sbb movsb sub add pop (bad) stc stc xlat sbb mov dec mov std xchg pushf mov push push adc mov outsl adc sub popf push adc insb scas push pop inc mov sbb dec push jecxz insb rorl add xchg dec jnp or in dec fmul stc js cmp ret rcr fimul push ss cmp push fbstp sub dec mov push inc stos xlat cmp in outsb pop mov outsl jae idivl or lock push mov xchg mov aad int lods aaa and pop add mov lret add fwait dec int3 or icebp cli pusha adc sub movsb fwait stc mov jae lcall out lea push out cmp cmp cltd outsb xorb cmp aas push push xchg pop (bad) loope ss jo imul mov mov xchg ljmp mov mov mov dec testb mov out scas push cmp hlt mov fst mov cli xchg mov lahf adc sti xor movsl mov jno repz jecxz push cld scas inc dec mov xor pop test movsb mov jmp push dec and push push aas in cmpsl sbb xchg pop jge rcrl jmp loopne popa add xchg lcall sbb ljmp and lea jno popa (bad) cmp push inc mov aam ret (bad) push ja push add clc out jge inc les sub xchg (bad) or sbb subl cmp xchg or repz adc xchg or jecxz test add out or mov in lea stos fs inc enter or adc scas dec es fwait mull mov (bad) and cmp jg mov ds pop fidivr dec add lods fnop inc fsubrs (bad) mov xchg pop add xor sahf sub in and subl dec addr16 push adc cmc mov and insl int3 xor js mov lock dec ret mov push sub fistpl clc mov mov lods sbb sti sub add sbbl push xor mov out adc jecxz repnz insb imul in dec lcall pop jno icebp pop jb mov sbbl or xchg and push jmp inc push sahf adc in loopne cmc repnz out mov push cmp and dec sub pop push and dec outsb push dec imul aad in xchg pop test scas popf or sbb into mov mov lcall pop in andb inc mov (bad) (bad) lods outsl xchg cwtl ds stc rcrb call nop adc inc out cmp les jp (bad) mov fdivl and pop rol jo fstps cmp and xor js fildl inc and outsb gs test and cli jae and and ljmp rcll sbb outsb cmp push lods adc lea lcall cmpsl push and jo das mov int3 pop xchg fwait insb push arpl daa outsb sti mov popf lds push aaa or cld mov jge leave notl shrl xchg cmp aad pop js add cltd adc jecxz push aam shrb shlb add ja push lock cmp daa sti xor stc dec in stos enter sbb jmp movsb orl int repnz (bad) mov cmpsb call in or shl dec xor dec or push adc adc cli adc and out jb sbb and jns repz orl pop negb jns or aaa push push les jne test push mulb scas ja sub mov nop outsb dec ljmp jns push adc repnz repnz std and fcomps xchg clc push inc or roll pushf repnz in cmp push jno inc inc imul cmp mov mov xchg fwait jl out xchg add (bad) adc jno or sub xor dec repnz addr16 (bad) fimull xchg scas movsb test inc dec add adc sahf xchg ja sbb push shrb dec mov dec mov pop cs loope cmp es loop dec mov dec mov lds sub je or ljmp push sbb and lret in (bad) jecxz roll imul pop popf (bad) fstpl inc mov mov jecxz pop xor push aam loop das xchg push add push adc add rep mov negb fcmovnbe or stos jno ret pop ljmp (bad) cmpsb dec ds mov jl je push cmpsl fimul inc xchg mov mov xchg cwtl dec xchg stos and fnstcw jle jnp adc lret mov jecxz lahf inc cwtl das sarl rep hlt popf int repnz dec fdivrs mov cmc mov jo lods out sub rorl lcall cmpsl push aam mov and lds sbb sti push inc cmpsb lods xorl mov jne (bad) jge fnstenv sub xlat or inc dec in fnstenv test std lds xor fyl2xp1 pop (bad) cmp std repz lock cld lcall push adc pop stos inc inc popa lea outsl dec add test (bad) sbbl cmp and arpl aam sbb dec bound cmc rol out push push xor movsb xor sub std mov adc pop mov ss dec mov icebp xchg in jae xor jl adc push gs cs rcr xchg daa pop xor push push hlt test push fstpl lods movb inc sub test das gs (bad) mov push inc mov es xchg out sahf mov push int mov fcompl lds call cmp rcrb jne leave push xchg mov ficompl popf ret insb orb pop das xor jecxz sub mov sub repz jnp mov js inc (bad) int3 addr16 test xchg fwait inc push rcll cmp xchg mov inc dec fimull fbld insl push mov xor mov mov inc js cmpsl pop xchg mov mov repz jns xchg stos (bad) les dec cmc out jl sti idivb ss mov iret rorb out and aam jnp xchg mov das xor arpl xchg push pop cs test ror push dec rorl push ds xchg push push mov add xor mov lock add scas inc or mov or mov mov addr16 fs int fimull push mov loope jb lds testl fisttpl jge mov mov insl scas push mov adc fmul add shrl in jae sti call mov cld mov stos popf xor fcomps xchg js test subb cmpb cmp xchg cs sarb inc arpl sti inc mov lods (bad) repz in push mov and mov xchg imul mov aam jo mov rol ljmp dec shrl push aam ljmp inc inc incb dec mov xchg xchg mov pop sbb dec dec or add jecxz (bad) fsubr ja loope icebp pop mov pop fisubr dec xchg je xchg cmp inc mov out adc repz cltd movsl inc out adc imul push cmpsl aas xchg jecxz jns les test inc cmp aas fimul xor roll jb mov push arpl mov insb xor clc je jp shll push dec fcompl (bad) push push dec xchg mov inc sbb fmul (bad) or inc mov adc cmpsb cmp sbbb or add (bad) jg leave in pop jo jo mov je inc mov cld imul mov sub incl outsl jecxz imul or jnp mov jne push mov daa dec inc push mov adc xchg push dec sub pop imul (bad) repnz sar repz push ds mov mov adc in addl jle jbe rorl aaa jp movsb rcll in push leave mov pop pop int notl loope imul xor push cmp int3 jmp jbe or sub jbe inc jns jge fsubr outsb imul rclb cmp xor fldenv stos sub rcrl inc adc addr16 jmp loope xor fdiv push mov test enter cltd mov mov sahf mov fbld nop hlt std insl xor mov out inc jmp iret idivb inc lods cwtl or and pop std sub movsb xchg push jl mov scas int dec cmpsb mov lock xchg imul pop es test (bad) jae mov sti test jb pop mov cmp mov push mov xchg sub or push cmc test (bad) hlt out idivl mov cwtl addr16 pop mov dec xchg cmp movl mov shrl pop pop in dec inc mov aad and mov adc add mov pop cmp dec stos fdivrs pop stc stos or int nop pop and push (bad) ret repnz push add xor jmp sahf mov add lock outsb cmpsb cmc ret jb or lods add stos stos mov or ds lods jmp mov adc (bad) imul icebp je lret das mov xchg add cmp negl push (bad) mov push addr16 mov and xchg dec ret test movsl repz fisubrl push aaa lock loopne xchg sub or sbb or pushf cmc std aaa fcmovne aas clc pop jbe popf sbbl stos lahf cmp jo out rcr divb cmpsl or mov xchg jge pop sbb mov sub pop js mov fisttpll fcomi dec mov addr16 (bad) and shrl push jge insl out adc push mov cmp insb dec out or aaa loopne fstpl loop add sbb jb out inc mov ja push movsl sub cwtl (bad) mov clc daa out dec jge or sub arpl cmp lea xlat adc lock pusha pop jo fucomp movsl int jns loopne into iret lock mov cmc cld fidivr test sub push insl call lahf mov xor pop shrl movsb bound push stos mov mov and and push (bad) fidivrl push int inc lods int (bad) shrl xlat (bad) mov inc xor or and (bad) adc es mov mov or xchg daa enter out das pop popa or fiaddl in sbb mov insb scas jmp inc cmp aas adc inc xorl pop adc popf inc push sbb test movsl js lods iret mov inc jmp cmpsl xor jo fistl mov test andl inc test cli repz mov dec in cmpsb jecxz xor sub (bad) mov sbb call fadd int ds or (bad) int3 call mov fs dec xor sub cmpsb jno or fmuls sbb loope fadds sbbb inc sbb int xor in ficomp roll dec cmpsl pushf mov and inc cmp ret das mov pop iret add out jno xchg xchg dec or test int jmp iret push or mov jp mov mov mov xlat sbb push out (bad) inc mov (bad) jl adc jae hlt (bad) daa inc (bad) ss sbb (bad) pushf jnp mov out aaa or cmp push fcomi sarl adc clc aaa xchg push inc jp sahf xchg or cmp insb lahf outsl fcmove clc daa or add mov jb inc dec push popf cmp mov mov sbb lret loopne mov xchg or mov aad (bad) xor mov test cmc aad xor (bad) mov ficompl xchg popf andb int3 dec pop dec pop test clc aam jbe xor inc (bad) scas out jle int3 sbb sbb xor paddd mov loope cld pop jmp jecxz xor iret sub in xor sahf sarb xchg mov jp aas mov sarl aam jne es xchg jmp xchg clc fmull add imul ret jecxz,pt dec or js push add or daa dec dec mov (bad) dec jge mov test leave jecxz xor mov lret inc or jle icebp push adc subl and shll lods cmp dec mov shrb test lds cltd push mov (bad) jb cmp int3 cmpsl sub jo bound fldt insl dec negl push cmp fs add aam cmp insl mov push subl or dec jl mov out dec push sub adc lea test sub std pushf push lahf and lock rcrl mov jecxz scas cmp and (bad) aad (bad) dec insl cmc fnsave (bad) and pop ja aaa pushf mov inc xor pop xchg mov xor out and inc jg aaa dec adc ror addr16 xor add push loopne jo ss insb pop aad mov dec mov inc mov and push push jmp or (bad) test lahf insl add mov aas or dec mov push loope scas mov ljmp push mov jb fadds cwtl inc jb add inc ss aas int mov jp test jmp iret mov xchg add or outsl push xchg sbb nop xchg inc int3 cmp sub iret sbb add jp nop add shlb push xor dec push mov pop (bad) repnz and test fs add pop inc arpl jg push (bad) lahf or cmp xchg mov arpl mov aas mov inc popa pushf insb dec jg loope call jbe loop repnz addr16 pop (bad) (bad) ss add mov sbb dec (bad) lock inc inc mov adcb mov cmpsb imul xor les insl xor sbb hlt hlt cmpsb loope aaa outsl add andb dec mov mov dec jg into inc and scas test inc fst mov mov mov in and xlat cmpsb test test repnz and fwait xor shrb lret js (bad) push lea in adc mov sub adc shr pop nop mov pushf mov fnstsw shr mov or movsl (bad) jp lods in imul lahf mov les pop mov fisubl jbe lea lret pop arpl mov add add jle dec mov gs fwait jnp mov sub addr16 adc push bound or imulb mov xchg dec ret stos (bad) or cwtl xchg ret pushf jp es mov sbb test (bad) sub mov mov add retw and sub aaa or mov mov dec pop xchg stos mov jg pop mov xor (bad) sti in jp xchg cs repz push pop fildl push jo sub daa scas sub outsl dec bnd pop dec dec push mov mov mov xchg ret pop sub dec adc rclb dec xor loop lods clc out paddd stc dec mov jo pushf xchg jbe jg mov and mov jo scas sbb gs and and (bad) sbb in xchg or dec push popf jne add cmc mov and or xchg mov jle add cmp cmp addr16 pop scas popa cmp xor jmp rorb pop out enter or inc jbe jno and and mov pop pop jle pop jmp xor cmpsl xchg mov adc pop add jl cmp dec and scas dec adc jns addr16 in and in inc push xor pop or sub push xchg dec push jae sub fidivr aas pop cltd std jbe sbb add mov ss pushf xchg ret xchg sub addl mov outsb mov test jle imul xchg or pop sbb loop xchg insb add into stos and fisttpll pop jno push mov cmp and imul push push stos lret ss adc and jne adc or inc lods test xor fisubr int3 adc adc sbb dec mov pop mov mov jge pop pop xorl adc stc andl cmc sbb (bad) sbb jno movnti test mov or cmp sbb mov cmp repnz mov xor insl inc loope inc ljmp pop mov mov (bad) mov cltd jp push imul inc in andb mov aaa or jb inc push sahf cmpsl pop lret push xor xor sbb mov hlt inc data16 add inc inc fcomip inc movsb or pop inc lret test xchg jo jb sbb pop mov ljmp mov pop or scas cltd dec stos out adc popf outsl inc add xor repnz pop sub icebp xchg jbe xchg jecxz jbe jmp mov scas sbb ja mov js push mov jbe fildll arpl loop sub leave fildl sbb outsb enter js lret xchg mov adc xchg jnp xor xorb subl push mov push adc (bad) arpl pop inc outsb mov (bad) mov (bad) add sub loopne xchg mov xchg cmp fstps into fistpl sub iret aaa aam cltd sub or lcall call es adc psrld fnstsw int xor sbb xor dec leave mov or mov jne sub inc adc dec pusha jno dec add fdivl mov cmc popf test cld and jbe outsb rcll pop lret mov adc pop sahf neg sbb xchg fldt jns xor or dec push xchg lcall inc add dec dec fcoms xchg lods push js fistpll add mov or cmp jmp cli nop or subl dec pop cmp fs mov jb fdivp hlt mov rcr lahf jo inc add mov mov mov cmp or rep xor fdivrs mov stc lods inc lock (bad) lods push dec fcom cmp repz adc push cmp (bad) bound fsub add mov push jbe imul adc push add xor stos or rclb mov or iret iret (bad) jmp xor xchg ret in lods inc pop leave dec mov test or jae adcb test imul dec or pop sub hlt out cmp in (bad) je push mov push lea roll rclb cwtl xchg into adc popa movsl rcl jecxz std out stos ret dec lea aaa (bad) ficompl adc pop push mov mov lds ret mov (bad) bnd mov mov and jo mov jmp push lret adc mov jge fs loop mov lahf xor jb loope sti push pop enter inc dec xchg xorb add mov add popa sub in dec out adc fwait loopne inc stos jmp loopne push ss mov pop repnz fadds test das sub jle outsl xchg call aaa mov leave mov int3 mov loope xchg test (bad) js pop sbb fdivrp dec sbb add int3 pop adc rolb fmuls adc jno mov scas cmp xchg repz jl sub lea (bad) in or gs in pusha or cmp push mov push mov or fldl rcll pop mov pop (bad) cmp sub push cltd xor stos dec nop mov inc or xor xor in pop lock imul lret icebp xchg out xchg cmp sbb clc iret push inc lcall repnz jb and (bad) cmp xchg movsl or push mov mov out mov lcall dec sbb popf mov lock stc int adc mov rorl cmp stc fdivs xchg inc mov sbb inc and mov fs xchg cli mov (bad) sahf in (bad) jae xchg stc fiaddl in push xchg mov icebp in (bad) cli std aam and xor jmp sti adc xchg scas inc xor inc mov mov mov cmp pop cmpsl rcr mov dec arpl aad sti mov roll sbb push mov adcb pop arpl mov mov jns inc dec div fildl (bad) jb stc das pop arpl mov fwait pop bound adc imul pushf fs sub pop mov (bad) fsts cmpxchg xor inc std fsubl xor fs iret or jg and adc sub xorl pushl and ret xor push iret imul out in push ret mov mov pop (bad) out dec xchg mov loopne (bad) das je inc pushf mov jne mov mov aas nop imul fist (bad) rcr leave int aas sub cmp inc mov loop mov xchg adc addr16 and mov or pop shll outsb aaa fsubr pop sbb mov lcall xchg jnp xlat lret in jl lds imul sbb jp xchg sub sub jge sub mov aam pop add mov xor push movsl mov xchg sub testb mov dec and xor aam or loopne push out call jb (bad) cld mov lcall jg je sub pusha movsl hlt fs scas (bad) or fcomip or push lcall adc in fildll aam test (bad) fidivrl mov imul pusha sbb cmpsl hlt add mov ret mov jg add sub inc pop in push stos (bad) and aad xchg jmp clc imul xchg add ficompl lods adc or (bad) arpl nop out mov mov ja dec xor jp add stos shl add je or xchg (bad) or or (bad) cmp mov xchg adc dec icebp push js jae popf adc (bad) popa xchg mov std inc xchg jge dec xchg jno aaa sub sbb add fild int3 add push icebp jl pop jmp and (bad) fst icebp dec mov xchg inc fnsave (bad) and movsl arpl push cli lea sbb stos xor sbb call cwtl xchg sar jo cmpsl cmp jae outsl mov test js inc addl push jge push mov ja inc ds mov movsb dec das shll call leave out dec test add loope push aam clc js mov pop push pop pop inc ss (bad) int enter out je jg inc leave jmp inc cmp daa leave pop imul inc xor adc adc rcrl jnp arpl cmp sti pusha add test std mov test fcomps in in aas add or push lods test sub dec jns ds out add out sarl pushf cmpsl stos lock enter popf and sub pop mov andl sub cmc add inc shlb stos jecxz faddl popa fdivl mov add adc imul add inc stc mov or dec popa pop inc mov clc sbbl frstor in rclb imul cltd (bad) call cwtl stos xchg rcl pop test out dec mov test xchg (bad) xor jecxz dec jne add out (bad) iret loope pusha into cs cmp (bad) jno inc mov mov sub cli iret imul sub xor and xchg aam mov xor push or aad or stos cmp addr16 mov jmp std xlat jle adc lds out in or mov sub jo ret (bad) inc xor mov cmp int3 imul mov repnz add dec aas mov mov inc test ljmp sbb loopne jle dec sbb jnp loopne xchg or into sbb dec or or fs int3 adc fdivl outsl inc enter lret push adc repz stos mov aad scas mov je xor pop jnp cli mov xchg mov outsl mov repnz aaa ficompl pop xor xchg mov jmp mov cmpsl gs dec mov repnz mov xchg mov adc sar rcrb lods sub and ret sbb ss xor flds pop insl enter (bad) xchg xchg sbb inc pop ficompl mov inc push scas fs mov or fidivl lcall push add mov or (bad) fsubl xchg loop test arpl int3 daa xor and xor scas adc daa pop xlat fs dec clc (bad) and and fdivrl scas inc lods xor adc adc dec out push stos shl jo fldt xchg jbe stos jmp dec adcb xor xchg arpl add xchg pop cwtl aam stc dec and pop sbb push push push fstpt lahf mov (bad) lods hlt int push cmpsl cmpsb cli sbb mov add xchg cld mov pop pop (bad) rolb pop or xchg pushf mov insl mov or and test sub jo push loope push out and fwait std or dec mov repnz (bad) outsl mov xor rolb push scas popa ficompl stos jae push decb lods call ret lea mov xchg pop fist jbe add pop bound fistp or and mov fstpl push in std adcl rorl xlat cmpsl fmul xchg nop add push lcall dec enter fdivs jecxz insb and (bad) lret int or sub xchg sbb sbb xlat xor xor push or insb (bad) fs sbbl popa sbb cmc mov popa fstpl orb gs dec in pop (bad) int3 inc xchg stos mov mov mov jecxz insl ds in add cmpl pop (bad) push pop mov or jge or jns mov mov ficompl xorl stc xchg lods sub testl mov pop xchg pusha xchg lods sbb or cltd cmp popa test jmp test and jns mov xchg mov inc rcll push fild (bad) xor pop imul fsub repz rolb rcr bound aad add sbb lods jecxz adc mov dec pop add das mov outsb rcll or ret ds jecxz,pt insb test gs test fldl (bad) pop sahf andl in out xor in fwait push inc popa sbb aaa mov aaa (bad) mov movq mov xchg out push inc mov pop insb jb adc sbb or cmpsb pop mov cmp dec add lods fsubrl inc aad cmp mov icebp les pop mov push lahf leave xchg or mov into sub stos andb nop mov in bound xor ja or popa cmp cmp mov xchg jmp xchg in xor pop in cltd ljmp repnz xor xor mov ficompl cli pop mov out cs xor (bad) cwtl lods addr16 shll jp push dec inc mov lods cmp or add xor fsubrp cmp scas (bad) (bad) xor or ret negl mov inc xchg sub loopne sub cld pop jmp outsb push jbe or mov adc dec jno cmpsb xor jne mov nop arpl int xchg std and scas push scas imul clc inc cld mov pop mov add cmp or fst mov add fs lods pop add aam lods sbb cmpsb cs push xchg daa jp outsb pop ss adc (bad) xor sbb push jmp push xor cs cmp pop gs push rorb mov xchg cltd fcomip in pop cwtl loop pop pushf sbb clc das sub lods pop sarl cmp cwtl cmp ds loop lods mov call imul mov lahf dec out icebp xor dec orb jecxz loopne mov cmp aas fucomp rcl ss dec adc and pushf insl cmp inc inc cmpsb push js (bad) mov aam mov gs or push cwtl inc (bad) lahf jp cmp push xchg outsb orl or jp lock jnp aaa call mov and es inc rcrl lods fstpt and gs cmp xchg cld xor mov jle nop pmullw mov ret in or scas jl sbb push imul or cmpsl mov aad xchg hlt mov dec movsl fildl outsb lods les sti xor cmp adc inc jbe cltd sub dec notl adc dec test test adc (bad) pop aaa test in xchg xchg or or or cmp (bad) fadds dec xor popa jmp movsl inc xchg enter bound push mov psadbw mov mov mov jbe sbb cmpsl jmp mov lock xor mov mov jle in cmpsb inc (bad) jmp push xchg rep jg aaa add or lcall js pop icebp xor xchg and cmpsl ljmp cmpsb daa data16 (bad) addr16 dec outsl inc hlt sub daa mov into cmp sbb fnsave mov cmp addr16 mov push sub sbb push fcomi cli out mov inc inc add pop or jecxz sbb mov imul iret loopne jl or (bad) enter inc mov inc and pop jae push dec mov mov add jecxz mov pop push cmp cmp aad jbe pop pop imul outsl and push mov scas shrb lock sahf sub insb test in fs cld push jnp fisttpll aam faddp lcall mov dec lods test and pop fnop (bad) icebp dec leave test adc enter je insb je addr16 xor push cmpsl and jbe sbb loopne mov idivl repz push sub mov jecxz adc (bad) mov cmp mov sti cmp call popf adc stos fsts cmpsb mov push push mov xchg clc dec addr16 arpl jno mov dec add xchg enter jp pop out sub mov aam sub loop icebp ljmp jp cmpsl shlb ret and mov push (bad) mov push mov cmc (bad) adc jo sbb (bad) xor imul scas cmp sbb dec icebp sahf ficoml hlt fisttpl push sub dec std out bound xor xbegin aas enter mov scas inc test loope jle push xorb orb dec mov fsubp inc enter cltd cmp andb adc dec (bad) mov sbb and dec ret pop pop loope mov mov fmul mov lahf jo fmull dec inc rcrb mov fmuls jmp arpl mov aaa repnz cmpsl scas jnp cmp mov rclb cmpsl enter enter insl mov repnz mov sub mull mov andb ja or dec mov push push decb jp mov and jmp mov xchg ss xor ret sbb lcall xor sahf push xor loopne fmulp ss adc rcrb shr mov adc mov xor nop xor (bad) mov push ret mov insl pop int add je std sbb xor mov fwait and cmc and stc shl jecxz dec pop adc xchg ljmp add adc pop std push lods lret xchg out sbb and movsl stc jle incl jo fimul inc and mov (bad) (bad) mov je cmpsb imul lods cmp push rorl clc test gs jae jo bound cs cmc push pop jne push push shlb test out call loope repnz mov mov pop sarb fucom pusha int loop xchg (bad) pop mov in loope xchg sub ds or mov jmp add lahf adc inc xor rclb cmpsb xor insl mov xor fidivl ret jns pop adc (bad) aaa enter pop ss imul inc adc mov inc insb xchg pop mov cwtl fsubs lods ds js (bad) mov mov (bad) (bad) in mov sbb sbb pop lret shlb fstpl xlat outsb push ja jns inc rorb xchg mov fcmovnb xlat stc and rorl fs xchg adcb data16 inc sub aaa stos jle sub data16 pop mulb dec in (bad) les je out in rcr pop andb out gs mov push test mov fistpll cmpsl push mov movd dec dec movsl jae cmp out cmp jecxz adc dec fidivrl orl lock inc pop cmpsl dec negb xlat jne,pn pop hlt xchg stc enter popa (bad) (bad) xlat xchg or add dec clc push test jno and fisub ret cmp outsb movsb and jno dec ljmp loop mov ss fnop or cmp je ja jnp xchg inc js xchg sub fxch lcall and insl mov std shr mov and xchg fwait push pusha sub int lcall shrb and out mov sub mov jmp add sub leave imul (bad) loop (bad) in jns ret daa push pop (bad) mov pop das dec jns fiadd ds mov inc sbb sub dec je aas and or fsubrs out clc rorb imul xchg pop xor bound out pop pop fnsave int roll sbb cltd add sbbb xor outsl gs je push xchg inc mov js adc xchg push cmc hlt rcll xchg jne sub clc jnp xchg aad rol xor mov imul jbe arpl popa clc and xchg xchg stos mov (bad) or and sub subb push add jno mov dec fsts xor into push ror imul xor outsb mov pop loope jnp sar xor mov repz sarb bound movsb out jecxz stos pop sbb stc iret and xchg fs adc js scas mov out rcr iret sub insb aas popf adc insb call cmpsb popa dec daa bound (bad) fildl mov dec fimull cld jecxz fs dec mov pushf fcompl bound jno decb mov int mov in cmpsl sub push fdivrl std inc mov jle (bad) cmp cmp int3 mov mov xor (bad) push adc mov cmc push movsb faddl mov pop push jge mov sbb xchg shl enter xchg xchg mov insb cmc bound shrl scas std xchg imul pop sbb fisubr les sub mov xor cli dec mov sti imul fimul dec inc test stc fdivl jp fisub jo imul cs jae outsb mov add xor je roll js les cmp mov jg push mov sti mov add outsb arpl jno insl pushf lock or xor movsb push ja mov in inc dec jp push loopne push sahf and (bad) jle jecxz shr sbb iret mov jp ljmp jbe sarb push insb test imul ja jmp xor icebp mov push add stos testb call adc sub xchg sub (bad) lret pop push jmp push lret lods pushf bound and je loopew lahf test xor sbb sbb scas fdivrl add sub xor dec sbb out adc fwait jno add mov test xor pushf jb push rclb loope push xchg lea lods outsb push dec xchg out cmp rcr mov pusha xchg (bad) into adc jns ret add (bad) test iret hlt xor jb pop shrl ljmp sub mov gs jmp mov orb cmpsb xchg xor fs pop lahf dec dec es jb dec insl fidiv inc add addr16 jp and and and dec pop xchg btcl imulb popa dec mov jb push mov clc sub cwtl sahf pop mov mov in (bad) dec push xchg xor jle rcl lret inc sbb mov sbb dec adc cmp repz pop fimul mov movsl sar dec jnp jmp adc enter ljmp and push inc or jmp pop test mov imull arpl test js adc ret (bad) (bad) or out dec push sti fisub adc jne xchg mov cld movaps inc je lds lea (bad) repnz (bad) add inc jge xchg iret jae dec in jmp loop cmp and jg pushf loope fwait lds adc sbb inc mov add popf ljmp (bad) les pop sub push (bad) std shll dec xor out sbb and dec js std xchg jbe sbb negl out push mov aaa mov out mov sbb aam ds into dec jg sub (bad) sahf jo or cmp ror lret aam sbb popa fcomi divb cmc add push xchg (bad) push mov clc fnstsw nop jo lret popl inc jne ficompl stos pop call or repz stc jle cmpsb jnp imul cmp pop pop mov and lret and push xchg inc das mov cwtl jae and lahf ds test test subb jmp xor int sbb bswap add ret (bad) mov mov test pop call mov mov divl push hlt gs mov ret cmpl fsubs dec push jae pop adc sub das push repnz adc (bad) mov and fsubs push into idivl inc lcall mov push or sbb sbb cmpsl cmpsl add adc mov mov cmpsb mov jae (bad) rcrb push or pop jo push jmp fnsave stos mov mov add jo jp inc fxch (bad) cmpsb pushl inc mov clc outsl jp xchg push push push jb repnz imul mov dec rorb inc lret pop inc adc push push jbe or add negb mov pop das (bad) (bad) lret div es fwait out (bad) cmc repz sub cld pop xor (bad) (bad) out fidivl pushf mov xlat push xlat lods sbb push call andb mov daa sbb push cs stc dec sub jmp adc test loope addb xchg jmp or push repz fldt movsl push fdivr lea mov rorl pop sub jp fistpl mov mov dec data16 mov lock adc jne sub scas sub (bad) fstpl xchg les adc out shrl outsb xchg cmpsb cmp jns mov test adc cld rol pop in (bad) les (bad) mov popf gs pop sub data16 mov push cmp jae fidivrl mov xchg adc (bad) popf mov cld loop xchg xchg (bad) sbb or pop or repz imul daa mov notb test ljmp (bad) dec les sbb lret sub pop out adc cmp cli enter push ret sti fs sbb jbe adc jmp mov inc outsl inc jno fadds fild sbb stos pop insl push (bad) xor mov jmp push dec test or popl cmp fistp rcr mov adcl mov xor popf push sti cltd (bad) test jb or mov lret test push sbb jmp xor sub (bad) (bad) xor inc test adc leave das jne dec incb push mov int3 clc jns data16 add shrl xor jbe or push bound stos or imul add or enter insb xor test push arpl pop push and push jecxz pop mov arpl and lock dec sti dec lock sahf std (bad) jp inc inc jmp cwtl xor xor out stc (bad) out idiv shlb jl sub inc ds std mov dec rclb sub dec aaa dec or mov data16 prefetchw test cmc insl clc iret fldl adc mov inc jp mov mov add dec jbe cld mov cs cs insl subl cmpsb mov lcall inc popa fwait jne std lcall daa lds movsb inc inc cltd (bad) mov inc dec jns push push mov cmc (bad) js and xchg and sahf jp mov adc cwtl cld dec (bad) pop mov lock fisubrl xchg dec dec push mov bound adc aaa xchg lea notl sbbb push lret fwait icebp push pop xchg dec jg cmp inc hlt jb (bad) lahf pop scas pusha xlat lods add push repz in lret or hlt mov adc pop lcall fs in dec push fildl (bad) xlat xchg pop xor mov js cmp adc mov cs pop daa fadds ret xor pop jae subl stos shrd fist leave or mov fldcw lds adc adc das decb push (bad) dec addr16 sub xor mov (bad) jae jns mov jp mov rcll xchg scas mov fidivrl lret stc in out jb lods xchg push jmp sbb pop test mov cld in push push fadd ljmp jecxz mov stos mov sub and out lock movsl xor jns icebp mov daa mov hlt mov jp data16 in cmp mov pushf test rclb (bad) iret or test sub repz stos pop fisttp loop test xor jg push pop xor cmpsl imul ljmp adc push jg xor lea das and dec cmp push add push sub push je cmp out insb sbb mov es add movl dec test test jecxz xchg loope mov jg mov mov push or shll push and lcall (bad) pop in mov mov dec xchg xchg and jmp lods xor lods (bad) es call mov fbld into push add xchg nop leavew or mov fstl xor xlat js insl jp jbe fdivl mov repnz sbb or mov loope lods push mov mov lods fdivs jp or outsb fs xchg push push fisubr repnz bound imul cmpsb mov inc mov pusha outsl clc pop in mov cmp fldcw sti repnz jle lret cmp cmp insl cmpsb lret enter aam sbb pushf fsubrl js fsubr (bad) mov sahf leave mov xor cli pop pop inc pop inc add or jp add lock lea adc cmp inc les dec or mov and or and push imul add stc js (bad) push les inc mov mov rclb out lret cmpsb pop dec loope adc test push mov jo addr16 push or cmp sub incb enter aas adc dec popf push je jnp push and lock mov jmp pushf js inc inc bound sub das push mov shrl out test xchg inc dec popf mov lahf push iret dec and out add out outsb mov psadbw xchg inc aad xor jmp and (bad) push jge dec xchg xchg inc pushf icebp notl mov cli mov push jl sub fs or jo mov imul paddb xchg cmp jae or add sbb jbe lods lods (bad) xchg jge aad cmpsb cmc pop jg sbb scas aas loop stc sti fildll stc (bad) hlt cmp daa sarb icebp lahf push ficoml addr16 outsb scas aam and test decl mov pop hlt mov and lods js sahf inc ljmp sub mov daa jl arpl jo xchg je fstl stos push popa into or sub sub (bad) xor cli js push dec pop or push or jle les dec cwtl sbb inc ret xor jno inc aas xchg inc mov inc nop sbb pop xchg xorl nop loopne js push negb cld int mov lret ja clc mov inc jge movsb stos push aaa enter pop mov mov mov nop out and dec dec cli adc jmp imull (bad) in pop stc or ret pop dec push cwtl dec pop daa pop cmc sub aas xlat mov sbb popf inc out push jnp ficompl lret hlt pop stc out dec inc call popa js test scas pop push rorb or lods lods push inc inc sbb cltd mov test xchg mov dec dec shrb add fsubrs fs stos imull inc in jle push push dec xor imul hlt xor inc inc mov xchg mov rcrl popf mov jg icebp out pop test and push pop push test and int3 push clc jp mov jae cmp loopne xor mov xchg mov sahf icebp sbb xchg cmp lock aam xchg in lea mov out or cli sub jge loope leave in dec (bad) int3 stc xor mov xchg (bad) idivl or pop dec pop nop sub xchg cmp push cmp lock fmulp cld cltd dec mov or incl adc rolb add cmpsl jbe lea push rclb cld ljmp xchg adc push push lock pop mov cmp fiaddl pop inc gs or add je sbb jmp lea insl pop jns xchg mov xor (bad) xor pusha and sub out arpl jno aas jecxz sarb fnop mov and js test fistpll push dec in adc bound notb in mov (bad) loope ja cmpsl push dec mov repnz adc pop cltd adc inc mov aam aam sub mov loopne,pt sub jmp push shrb cwtl xchg mov adc imul cmp push jg aaa hlt in pop inc push into pop mov fs dec dec dec dec jge ret rcrb repz dec into in pop lock fiadd ficomp insl mov pop js or push or test in push stc scas loope jns pop cltd pop das add jle std or push test cwtl pop daa notb push xor fistp outsb cltd call dec xor mov dec int jg cmpsl nop fs int pop cld xchg push sub dec cmpsb jp mov adc mov xor push ja es mov mov test xor mov in fist mov mov int lret adc std and push inc pop jl loope das sbb fnstenv inc sub inc jno cmp pop repz pop unpcklps inc (bad) fisub aas push xor and pop inc push jne jo push lods push push xchg xchg adc inc les fidiv popf mov imull or cmpsl enter pop daa xchg sub test fiadd mov pop test sti xor sbb popa stos sub sub in cmp adc pop (bad) aaa faddp aas sarb (bad) repz out xor jnp,pt std mov jno rclb adc rclb inc mov mov rcll or imul or inc pop or (bad) hlt xchg xor mov dec (bad) cltd mov jns popa (bad) popa adc pop inc repnz mov movsl mov push push pushf and popf pcmpgtd lcall popf loopne lods dec rorb mov or add jp fdivs push iret xor aas cmc insl inc cmp mov mov jns dec or bnd ds std lds stos movsl and in push mov sub push (bad) push (bad) dec pop mull test stc (bad) outsl pop int3 stos scas and cltd sub lret call add fcmove ds mov xchg xchg mov fcmovbe push pop outsb xchg je aad adc push xor cmp aad xchg xor mov out push test insb jle and roll lret adc push and cmp adc mov cmp mov movsb movsb arpl pop fdivr xor lea sub mov add (bad) data16 pop sti dec cwtl pop push jge stc mov cmp imul sub push aad int loope push or push xor jl ljmp inc inc pusha mov pop (bad) vpsrlw pop mov mov mov push mov cmp test inc (bad) sbb jge xchg repz (bad) push pop std pop dec inc mov (bad) dec nop or cmpsb add push scas andb repnz push imul fdivrl mov es cmp push repz cmp mov not cli cmp idivl (bad) cmpsl mov cmp cli int3 add dec test in xor lds leave dec add daa push mov mov mov xor dec mov adcb mov hlt inc int3 int fs int3 std lds jo mov sub xor js std cmp sub jns loopne in and push xchg stc jecxz mov dec fucompp lock ficoml shr dec xchg pop mov cmp (bad) jge pslld push add mov sub test out xchg push sbb imul cs sbbb mov cld imul and mov pop pop test cmpsb stos sahf mov outsb mov lcall or mov or jbe fcos lock and xchg popf add lock sahf les in in jecxz (bad) sti rolb leave pop push cmc pusha sahf jge or (bad) aad sub ret dec mov jmp mov into imul leave test add xchg clc adc scas adc mov jne and mov insl xor call lods test lods hlt inc push outsl and (bad) xor add lcall loopne push jl pop mov lahf iret xor cmp stos fs and outsb xchg das out add popl in sti aam mov in cmp outsl fwait out lcall add mov mov test adc aad jge add leave in insl aaa pop mov popf test dec (bad) mov sbb dec in mov pusha test aaa add mov mov mov (bad) xlat arpl sti pop sub movb dec push std add push jmp pop push pop and imul aam push push push dec ljmp jmp xchg xchg mov scas push pop jl add addr16 pop (bad) jecxz jae push pop xchg sub push sbb and adc add bswap mov je mov and popa mov pop pop mov rclb addl cmp adc push scas das roll movsb lret adc xor dec push cmp roll xor inc scas movsl xchg xchg jg push pop dec (bad) ds mov repz pop inc jne add dec int3 (bad) xor inc fldt pushf outsl pop xchg mov or leave insb stos jmp or dec sub cmp repnz xor sbb outsb repnz sbb cmpsb cmp dec pop sbb stos lret dec arpl jp (bad) xchg imul xor movsb ret ret pop cmp fs xchg jg (bad) in sub pop add test xchg (bad) push and sarb xchg add or mov jecxz push repz adc aas int sub (bad) popf adc or push push cwtl pusha fucom adc sarl mov jae mov movsb adc rorl jnp test sub movsl jns inc mov pop popf outsl leave cmpsb (bad) fmul xor lods int xchg mov icebp int subl xchg stc mov and outsl sbb push cld cli ss add sub cwtl das mov lock daa pop fisttpl mov mov jp xor outsb xchg dec jb test rcl lea imul out inc pop test sub icebp mov jnp sahf pop stos xor mov sub adc lock add ljmp lock loop scas cwtl and and cmp ret cmpsl fmuls movsb mov sbb sbb sbb mov or enter out mov cmpsl fisttpl ds adc aaa xor loopne into sub mov push pop enter mov andb das lret cltd lods mov jge sahf sub fdivrl push cmp jae js and dec xor sbb mov xor push push jmp mov cmc aad xlat sub push push jo add cld cwtl aaa inc jmp int lahf imul cwtl mov insb inc add jae jle adc and mov sahf rcrb xchg sub or les inc and movl xchg dec pop and xchg int3 pop mov xor inc mov pop xchg sti in and sahf mov lods xchg fwait jle or or cmpsl mov push ds add int3 cltd and mov pop cmp inc sub xchg add pop fcompl mov push imulb sbb add scas jp hlt ficomp mov sbbl lds sub test in and cli out out fnstsw cmp imul rolb inc leave fsub test adc andl (bad) sti es pop sbb ret gs ss xchg cmp push push lods push mov cld (bad) cmpsb (bad) es pop loope cmp sqrtps cmp stos repz xchg cmp sub pop ret sbb mov push xchg ss dec int3 mov test (bad) es dec and jbe sbb sarb xchg js fldenv rolb (bad) lcall pop les sub jecxz dec jmp xchg mov jo xchg test cmpsb add dec or test ret les push iret mov iret aad sub popa and pop insb cld mov ficomp test pop imull scas or cs in gs (bad) xor mov imul adc lods sarb aam aam mov imul imul sub jmp fcmovb cmc mov mov jmp (bad) fisub and inc mov shrb xchg xor cmp sahf lock pop cmp lea add and mov cmp add repz into (bad) int3 arpl adcl repnz jbe ljmp add mov mov jg push mov imul ficoml mov xchg pop sub stos test (bad) or push inc stos subl adc push in ds add stos jl arpl xor pop xor fisubrl out in push out fldcw les jmp cmc dec mov sub jne mov orb xchg clc loop andl push dec or test sbb or or xor into stos mov sbb stc mov adc aad xor dec adc push std bound fprem int3 pop fstps rcrb or insl test (bad) inc mov mov lea out mov dec xchg push pushf lret int add (bad) in xor movsl cmp push data16 jb jnp cli or mov test sub daa fcmove imul in fxch aas inc push cmc ficoml pusha in pop movsb (bad) ds je (bad) clc arpl adc mov adc subl pusha in sbb mov push lods out inc (bad) (bad) jp dec cmp sub inc inc sub pushf pop sub repz jno sbb in scas xchg aad in adc pusha add cli stc gs sbb jp sbb cmp lods outsl nop xor aas popa adc scas add add mov dec adc dec test pop mov lret jbe jns (bad) in dec ljmp sahf sbb cld loop hlt cmc out sbb ror sbb popf xor pop push mov jb fwait push inc mov sahf getsec frstor icebp add das pusha lods in (bad) aam mov xor add sbb scas cs add call pop loopne and cmp sbb push cmp push subl movsb (bad) xor pop les fwait insl add stos pop scas fwait call and jle ja sbb adc dec imul fwait inc push and fwait or icebp dec repz and jge cld pushf sub int cs pop dec negl dec sub lea data16 pop sub add mov in sub lret mov scas mov adc (bad) dec sbb ljmp sub cmpsb jl xor sahf jmp push mov xor rcl rcl mov sbb xchg sarb mov fildll mov lds js rcrl lods adc mov inc stos sbb or pop out fwait push xor test pusha mov pop lea xchg add pop sbb (bad) mov mov sarb movsb sub test sbb fldcw clc fdecstp xor sbb dec sti mov and push imul icebp lods mov adc inc je mov dec arpl loopne sbb mov ret movsl inc mov xchg inc add decb fs jb push (bad) lock pop test repz xchg mov int3 inc enter sbb mov (bad) cwtl pop mov dec xchg pop mov sti sub cmc jge mov call sbb fs insb arpl mov (bad) sbb jo negl int3 cmp jmp fimul mov adc bound das repnz dec nop or xor mov js jno xor jo stos push sub mov adc call je pop lahf jl movsb mov xchg pop popl jne insl shlb fstps cmp out mov pop pcmpgtb jmp popf inc jmp ja inc ds (bad) adc int into jp sub repz add mov cmp inc jge nop or mov push push (bad) mov adc adcb pusha xor loop in mov xchg or cmp jp cmc add mov bts (bad) lcall push mov sbb jmp mov inc pop call fisub rcll ljmp enter xlat mov xlat inc add sbb sub mov std lahf cmp dec sub adc ror daa je pop nop int jo aad cmpsl mov mov lcall adc pop mov sub add ficompl das loope push inc sbb mov lret jb test pushf mov push test cmp sar scas in push jb sbb addr16 shll cmove lods enter popf sub nop push pop sub pop jl pop dec in lea (bad) cmp adc (bad) mov in repnz jecxz jo push mov mov or mov test xor mov push int sub dec (bad) stos pop xor bound sbb xchg repz mov lock or xor js sub cmc dec jmp out das icebp mov push or mov out or dec push sbb mov inc rcr and and outsb xchg (bad) pop push push push and ss add jge loopne jp addr16 enter jae outsb cmp popa test mov and and lcall sub adc test repz aas xchg fnstcw out addr16 nop push push add inc mov mov jl mov in inc mov cmp clc (bad) adc sbb and and mov ss loope push xor inc mov movsb fistl in and sbb cmp (bad) mov leave rcrl lcall mov and lret mov ret fsubs fldcw (bad) fmul in cld ret into in aam mov mov adc cmpsb (bad) add adc clc ljmp push mov outsb mov or push (bad) icebp sbb jg fucom out insl int nop scas pop cmpsb mov sbb jmp jne,pt push rdtsc inc pop mov add push sbb dec cmp push jo add xlat repz mov sbb out mov push fildl xlat loopne pusha or dec stos cmc rcl dec pop es pusha loop inc pop mov push push lret xchg mov sub xor push cmp mov push pop xchg xchg sub mov push stos push push insl xor push sub lds adc cmp xlat jge cltd pushf and out stos in popa push push xor inc iret lods insl fs and pop (bad) aas pop push inc imul cld scas das test lret in and xchg cmc fstps inc test or dec mov dec push pushf cwtl sti movsb sbb mov ljmp sbb sbb lds fild lea dec push pop fldenv dec outsl icebp xchg sbb fstl mov insb scas pop scas stc cs ret lret in dec int3 es add callw mov hlt insl movsb dec mov imul (bad) (bad) push mov test jmp in cmp flds inc movsb clc (bad) pusha sti push imul aaa adc xlat ret pop dec push pop pop sub (bad) mov lea cltd (bad) ficompl daa mov in lods inc movsl (bad) xor mov cmp xchg cmp lock es sub loop enter imul pop call mov push mulb dec stc sbb adc mov test (bad) out popa aad fmulp inc popa (bad) jmp stos mov rolb lds and add das repz jle icebp gs and outsl shll push mov dec fmuls xchg mov mov mov test (bad) inc push add imul leave xor xchg fwait lea and xchg adc enter clc add fmull dec loope imul dec loope outsl ucomiss divl jge in lret (bad) cmc push add cmp mov xlat mov mov mov inc rcll stc gs pop xor xchg mov loopne ds mov fbstp sub jl mov inc rcrb and add loope aas sbb add sub and pop stos sbb push sahf clc push push in or js push or stos call fmulp sahf repz sub fbstp jg test pop jnp,pn int imul and repnz das sbb stos push loopne push js daa xchg mov adc dec mov mov fisub repnz pop orl jo pop add inc cs pop jg ficomp jle cld adc jg mov pop mov (bad) jns bnd call int3 xor (bad) push pand movsl imul sub out iret icebp mov adc jle cmp jp out mov or leave mov das iret insl data16 push sub lods sub cli pop ret pop sub and loopne loopne sub ja outsl cld lds cltd and pushf pop mov mov leave mov xchg clc lds daa pusha jno mov cmpsb (bad) ljmp outsl loope push mov adc cmp nop leave lods dec jmp xchg and ldmxcsr sbb ret sarb test roll or icebp lret xor xor loop cmp sar push jnp dec rcll das jmp add (bad) jmp pop repz inc jp push sub pusha iret and int and adc mov cmp sub jge mov push icebp imul sahf daa lret pushf pop mov dec movsb (bad) jmp sbb mov mov call push mov jge leave aaa js sahf xchg fsts dec ret xlat add subb jb jle add lods test outsl xchg or inc add rcrl fldt popf ret push pop lds cmp or cmp je jmp adcl jne xchg insb xor les jle divb mov inc xchg lds xlat sti mov imul ret int mov loop sbb aas sti lcall fiaddl add sub mov pop ret or (bad) xorl mov leave jecxz ret push inc mov sbb inc dec mov ljmp mov jae cwtl into mov fcoml imul fyl2xp1 loop mov mov add int dec mov jo (bad) dec mov jp mov jmp push mov lods sbb stos adc pop and dec inc jae clc call (bad) fadd mov out stc adc out or sbb sub and mov jb mov out ret mov icebp popf mov cmpsb imul lcall sti outsl sahf mov std orl lods mov jp fistpll cwtl fdiv jle mov pop cmp hlt das sub inc push hlt pop dec jl add js in xor cli mov mov cwtl xlat jns aad test in cmp cs pop dec push (bad) stos addl pop add ret mov aam xchg lds popf jg pop mov sbb xchg sbb mov ds xchg sbb out aad xor out andb push pop mov repz frstor into rclb dec (bad) out arpl inc fistpl lcall mov mov gs mov xchg sarb jo es enter jmp (bad) aas je mov mov sti sub fwait mov pop out mov std orb sbbl lock adc push and test loop mov in lds sub mov inc subl jnp xor stos out jge sti or jbe stos test pushf sahf fdivs dec (bad) mov mov jns test movsb fdivs push inc mov pushf fstpt pop out push mov pop adc xor jecxz sbb (bad) jae outsl shll sbb popf ss push pop outsb mov mov dec cmp xchg mov push cmp push lock bound xchg clc sub cld cli (bad) cmp jge (bad) pop pop mov movsl adc stos pop adc xor push ficompl repz sub add out es xchg sub mov xchg in push adc sbb xchg cs sub clc xor test (bad) pop cmp fsubrp pop jge pop movsb mov push (bad) sbb fisttpl cmp xchg (bad) int3 aad int3 add mov jb pushf (bad) insl xchg lret daa in je ret mov cmc and jne push movsl adc fidiv sub cltd mov dec (bad) jp push loope es dec inc jp dec fbstp inc cld std sub cltd push cld jns sbb add sbb aad mov xlat mov xor mov and add cmpl push popf loope lcall (bad) mov pop ret repnz add imul ja xor or fidiv (bad) cwtl cld mov bound adc test gs push sub cltd cmp sub xor jg lret out jb xchg cmpsb addr16 aad cmp mov sbb into sbb int out sbb in hlt xchg imul inc mov (bad) lret push stc adc pop sub add sbbb mov mov aad pop cmp sbb mov xchg sub mov (bad) imulb int3 ljmp cmp idiv dec mov push add jmp jbe iret (bad) sub test or sar in mov pop xchg jl jl int3 pcmpeqb scas cmp insl leave mov and dec adc mov dec outsl jae (bad) inc or sti ja ds jb sub repz adc outsl mov icebp in add out xchg lret pop jle mov lcall push cmp sar dec cmp adc cs push inc in ret cmp mov mov jmp je cmp mov ss pop add pop push shl push mov mov lods mov cltd subl mov jb cld inc add or mov dec or add aam stc push mov scas push mov call cli leave jle rcl mov dec jle xor mov mov or in push mov lret repz add outsb loopne mov outsl pop adc insl pushf das dec aaa js jo imul mul sub mov add dec outsb mov mov cmp shll aas pop daa xor lock pop mov adc scas add lods cltd dec and stos in jb int3 add xchg int and fs or mov ror sub mov inc pop mov icebp inc fs inc dec stos test mov bound cld push jnp iret cmp push cld lahf mov jecxz xchg and and in aam pop dec jge ret mov mov rclb fcoml les push repz dec cmp imul push xchg loop popa subl jo sbb jnp jnp fs (bad) lods pusha sarl es repz jbe repz mov and ret dec mov out jb adc xchg xchg adc stos sarb pop movsl mov mov outsl dec cs xchg ljmp fucomip in sub das lcall jbe iret addr16 ss xchg andl mov scas dec int imul push out ds call xchg xchg pop push sub aam adc xor mov add xchg aas or in pop mov add cmpsl aam sub test push stos int in adc inc sarl add jo fisubrl rol fucomi pushf mov ret mov mov jns inc out (bad) ret mov cltd test pop test add sar or iret jbe inc les push fnstsw (bad) mov sub xor dec push lock cltd adc pushf repz fnstsw pop sub fstps mov sub int (bad) jl pop (bad) cli sub inc sbb push lods jl imul add cltd adc push sub cmp mov popf pop inc clc mov sbb inc cli js addr16 cmp pop test (bad) sub jg cmp lret fisubr ljmp sbb into cmp mov leave popf out sub fnstsw mov std adc xchg test hlt rorl or mov jno mov mov sti adc jmp popf arpl enter scas test add sub jmp sub lock sub enter jmp lock or cmp in fisttpll (bad) loop enter sub fs xlat negb rep js lcall out push out or loope cmp cmp add push jno mov adc outsb outsl mov xchg mov mov outsb jo inc adc sbb ljmp rcr fnstcw mov into dec lock xchg pop ret fs push imul push adc dec inc jo loope or dec dec lret jnp sub lods jae sbb lods mov sub mulb les lahf xchg fcompl pop xor imul sub push rcr aad rol add iret mov jmp sub inc std mov rcl mov ror jle pop jmp cmp pushf arpl and pop dec adc data16 sub inc std inc popa jl out push loopne cs sub lods push out push add pop xor (bad) repz xchg mov sbb aaa shl mov fldcw nop/reserved stc (bad) xor and pop int mov lods pop call sarb inc cmp add xchg stos fimull fisttpl sub insb mov fldcw ja jl cld sub cmp std aaa out bound fucomi push je mov daa and rorl fcmovnb jnp (bad) aaa jmp pop jns fnsetpm(287 fnstcw xchg in (bad) or aaa xchg sub sub in mov xlat ds adc addr16 dec in jno cltd adc insb mov or (bad) rcl je ret push xchg mov nop rcll in mov pop and lret lea mov or pop inc aaa mov jecxz sbb arpl scas sub repnz cmpsl fbld (bad) jnp cltd inc test cmp jp pop daa popf inc lret (bad) mov and adc repz outsl dec xor push sahf dec pop or mov mov mov push inc pop cmpsb ljmp clc mov pop push leave out xchg jecxz dec adc sub and adc jmp dec imul jecxz pop push pop movsl movsl movsb xor nopl pcmpgtd ficom adc push lcall push out mov dec push mov add rolb imul push sbb fwait inc push mov je lret push adc pop mov xchg stc sbb pop lcall xchg jnp push mov inc inc xchg dec icebp inc mov dec mov emms adc push (bad) shlb nop cs outsb add xchg add and jne xchg jmp dec push mov push out mov popf imul or into (bad) insb movsb xorl data16 test test or cmp fidivr cmp pop or and stos pop xorl jae leave sub pop adc hlt clc jne sbb cmc ss cltd and js xchg add add lods jbe mov aaa sti adc push and pop inc popf inc jbe or aad lods dec push pop jb lahf fistp ret xor mov xchg push stos sbb lock jb sbb and xor arpl inc shlb je iret mov jmp add cmp xor xchg pusha inc and xor dec jle faddp out mov or push nop sub cmp fimul aaa fidivl inc imul pop les sub bound (bad) jp jge scas jecxz and mov mov pusha add call test cmpl mov push inc xchg or cmp popa cmp cmp push inc jge or or xchg xchg es outsb cmp adc (bad) jno pop mov pusha jbe,pt xchg fdivrp pop out jmp insb mov mov push aad fcmovb stc xchg mov or mov pop add push arpl mov jns gs dec sub mov arpl add xor clc dec icebp dec ss xchg int3 mov push cmp popf adc push fidiv clc inc push push cmp cmpps push jge fildll mov fsubp fadds pop inc out cmp (bad) popa js js add xor sqrtps data16 cld xchg les js xor outsl xor adc repnz adc inc lret jns add int movl mov pop arpl cmpsb insl test stos sub adc mov lods mov push ljmp (bad) dec or add or cmpsb js jle pop xchg jecxz mov iret jecxz out hlt cmp pop cs pop jns inc or cmc lret out cmpsb push pop pushf iret mov mov cs and mov lock sahf dec xchg (bad) fnstcw fcompl movsb lret pusha pop push int3 or movsb std mov sbb sbb push sub push xchg hlt xlat cmp xor movsb sub sti mov in outsb test lret stos dec adc xchg cli es roll mov insb mov out add or and (bad) rorb lret add scas sub fdiv loop mov mov xor clc xor scas xor add add cltd add push dec inc inc data16 mov mov dec aam movsl xor in adc mov sti ret dec fwait out dec lods scas and les or mov loop push movsl push stos inc lret fisubrl or mov pop dec fstp scas inc and sti ja roll sub test cmp repz nop cld xor in mov imul sti outsb icebp pop test xchg inc in add mov popf adc xchg dec xchg mov scas jle or xchg xchg add les sub repz push jnp fdivl pop (bad) and fimull xor and jp ljmp and push imul mov xor pop shll add jno jmp push mov shrb mov inc jl or outsb outsl mov sub pusha shl and popf pop or and cmpsl aam ret xchg xlat jp lret mov inc cmp xchg push test or mov ss (bad) dec cld scas jg jns sbb mov and in mov setge aam int3 sub inc pop xor cmpsb adc pop aad mov into lahf pop mov stos push dec inc sbb or dec sub jl shlb adc enter pop add mov sbb dec adc xchg push jle test dec mov test test divl adc sarl pop cmpsb or push test test nop daa pushf jbe mov jg out sbb cmp rcrb jne jae push mov addr16 jno mov jl dec ficom cli cmp sub mov cli cmp ret mov lret sbb sbb pop push outsb push or sub es mov jns data16 in test sbb inc jne cmp imul fidivl xor pop scas xchg mov fucom stc aad push push and int mov test sbb mov xchg pop (bad) pop mov addl fisub aas cmp sbb jle lods jnp fdivrs cmp push adc dec ffree cmp sub test xor add enter nop inc mov sub inc xor daa jge cmpl adc dec out mov pop test in in push inc and into mov dec mov inc xchg pop enter jnp pop mov xchg mov mov inc ljmp jle out or sub xchg repz mov jle (bad) je int test sbb mov lret fwait orb out pop bound pop dec adc jne icebp fucomi iret ljmp inc sub xor adc (bad) jbe fwait cmp push stc xlat gs sub mov and hlt sub lret xchg pop adc pop mov jb dec fcmovnb or gs fwait jge aaa leave mov xor insb mov and mov add imul fisttp sarl xchg push aas push jecxz js push pusha xchg push lods mov push inc fistpl push add int roll imul jg,pt pop ja jl lds sbbl and insb push call xchg dec fbstp mov and and push into insl sbbl cmp xor aam lock (bad) cmp jg,pt mov mov jo imul sub add add addr16 in and sarl mov sbb loope (bad) adc xchg pop stc xlat jmp (bad) mov mov hlt xor xchg out aaa add add out add imul mov out sahf jns lods out in xor dec mov dec adc or xor or and adc inc pop pop pop rcr outsb xor (bad) je cs push test js mov aaa loop xchg or cmp push pushf (bad) sub or aam fcompl leave jno sub or or pop push ret mov movsb scas push pop aaa (bad) xor (bad) mov mov enter push (bad) sbb pop (bad) enter cmp je sbb mov test mov mov into lods push sub in int (bad) sub and adc push imull inc mov pop sti lahf adc push (bad) sbb or jne cmp stos sub cwtl fist cmp cmp mov and in test inc push mov inc sbb mov lcall mov shl add add sub stos out jbe popf cmp push mov adc lahf sbb in cs fiadd or inc pop rolb lcall clc inc jge pop dec repnz dec dec cmp add mov insl icebp setp push jno sbb cmp repnz cmc ret lods xchg jnp inc lcall cmpsl cmp pusha mov sahf lahf out outsb adc adc ficom fs enter and insb xchg cwtl cld movsb sbb xor scas cltd jnp js sbb inc xchg mov mov pop add stos adcl mov pop es xchg mov or dec jl jb jg fcomip or test mov sbb mov mov lret xchg pop (bad) ja mov cmp jb cwtl add and xchg mov sahf cli data16 xchg fucom sub add pop mov shll dec mov pop ret and push lcall test dec pop jmp addr16 sub int xor dec push jne or xchg inc cmp outsl sbb xchg lds sbb sub shrl paddusw in cli loop sahf and and push (bad) xor mov fwait sub (bad) (bad) (bad) leave mov mov iret scas adc aas pusha ret lcall (bad) repnz adcl negl mov mov daa lea loop fsubs lea lds jns sbb (bad) xor stos adc arpl enter jg ja stc out jne mov outsb adc mov mov inc xchg js loop xchg cli cmp je mov ret loopne pop or push or std ficoml inc mov ja icebp loope mov cs or hlt jg mov sbbl push xchg rcll stos movsl mov sub jl (bad) ss xor pop jne mov out jno std sub std lahf rolb mov mov mull fsubl jbe push pop dec imul popf decb dec push call outsl push pop cmp mov jg mull cmp push jo (bad) shrl or popl mov adc js out and jno mov push cltd pop push cwtl push mov dec jno fucomp mov or out mov cld dec mov sub repnz lcall dec loopne push rorb mov cmpsb jae pop (bad) xchg int cwtl rorb mov pop bound jmp lods fwait out push pushf call pop xchg jmp dec xorb sbb std push add cltd mov shr insl push xor xchg cmpsl inc mov imul cmp inc pop mov repnz mov push popf subb or int3 icebp push fwait push lret test mov rcr (bad) mov into push xchg insl pop mov jmp lods in mov arpl lret fwait push test push test repz jb mov pop mov call xchg push sbb xor push add sahf aad fldt lods mov cmp daa push daa jecxz jo xlat mov in in popf pop rolb xchg mov je xchg aas pop les mov and imul sub sbb scas sbb iret movsb push mov fisubrl add push sahf mov xchg and aas mov and clc pop xlat outsb mov daa lods jmp ficompl xchg add mov rorb pop xor cmp movsb cmp mov cli and inc jbe neg push in mov lret in lock mov mov push rolb xchg pop mov test mov aam mov mov pop pop push pop dec xchg lcall cltd inc jmp mov jne test int sbb xchg or jp dec and js scas les scas push sbb subb sub ja stc sahf std inc dec fsubrs and lcall or mov sbb push shrl jae pop dec push fidiv push and int3 mov cmp dec xor jecxz mov (bad) mov xchg mov pop outsl jp sbb sub mov fimull fistl mov rorb pop xchg dec aad popf xchg mov mov cmpsl scas add insl adc fdivl (bad) ficoml (bad) xchg xchg push ret add push or jmp lods mov jo add mov (bad) cmp mov and cmp cli cltd (bad) cmpsl movsl outsl inc mov add dec jno push or jnp dec cld inc in fadds xchg dec mov fbstp xchg cwtl jne hlt or mov and (bad) mov bound push and leave adc cmovg adc aas cmp pop ja xchg add sub ljmp popf mov test pop popa push push es sub xor inc hlt jnp jno push jp call xor int3 ret jge (bad) data16 xor aad nop (bad) xchg mov cmp fcompl or lods adc je cli shlb enter xchg hlt mov push mov add mov rcr andl mov xor lea movsl clc and add lret (bad) popa sti jl lods push and or enter pop mov xor lea js repz std mov jp ja sbb sti in xor (bad) (bad) adc (bad) fsubl stc (bad) ljmp jge cmpsl daa adc int3 pop xchg rolb gs sbb pushl (bad) aam fadd cmp test mov and (bad) fildll and cld inc lods arpl push cmpsl repz inc lods mov mov mov mov in addr16 pop stos imul scas pop clc inc test in test push pushf jl pop in and push (bad) jns mov stos push mov fcomip pusha icebp ret test sub push scas call push mov mov imul idivl sbb mov cmp inc push pusha testl jne xchg mov xor mov icebp xchg jo repnz mov mov je cmpsl cmpsb jb push int push imul int3 scas jl mov dec in xor sub outsl push cmp mov push pop mov fldl rorb sbb jno jno cmp xor jmp stos loopne movsb pop mov mov fnop iret or sub mov pop push fwait adc in adc imul scas popa mov mov jae mov mov or cltd or xor mov sub xchg jo add dec pusha sub (bad) sub dec mov (bad) ficomp dec add cmp add leave xchg mov dec mov fcoms in es add std dec in sub std cltd dec jns out in sbb jmp lret je loope imul dec fwait cmp stos mov aaa xor imul mov push dec sub cmp pop add sbb mov or pop sbb lcall mov or push shrl (bad) jbe loope jmp pop arpl out aaa mov inc sub jmp jns add inc pop xchg mov dec outsl (bad) mov cld fidiv es dec iret or jne or xchg mov (bad) xor (bad) bound jmp shr adc mov jge inc clc cld and jge lahf ret push vcvtpd2psx cli xchg jl push xchg fild pushl xlat mov pop and cmp cwtl (bad) ja rclb pop (bad) pop jl lahf pop pop addr16 data16 mov jno test (bad) daa into ss rcrl pop inc cmc out xor adc push or jg dec test mov mov rcll sub add dec or out push pop cli xchg imul scas outsl lds (bad) adc mov pop push pop add imull in hlt ljmp (bad) adc sub push inc fldl sti and jnp sbb sbb mov call into scas pop mov sub aas inc adc pop sub ja mov scas mov sbb stc mov js mov lcall xor inc pop mov addr16 inc xchg notb int3 jns fisubl das dec (bad) neg fs lcall xchg (bad) xchg sbb and cli xchg pop mov jno mov cwtl repz and xor xorl pop cld (bad) cli adc orl adc lods cmpsl cs lret (bad) fucomi add adc xchg les outsl rorb sbb xlat push in mulb xchg lret dec xlat into (bad) xchg adc mov jns je inc add lret out data16 cmp mov dec inc rcll push or xchg ds and dec lahf xor push (bad) cld fimull outsl inc mov cmpsb sahf das adc rol sarl into jmpw inc mov or push xchg mov jle popf jne and pop in insb in sti xchg inc neg mov dec sbb (bad) test mov mov (bad) fcoml stos int clc mov xor aaa out sbb outsb scas scas fcomps inc insl xchg loope push push test rorb lret out mov sub pop hlt nop jl daa ds inc add xchg dec iret xorl jnp adc divb pushf and ds clc jno and sub aam pop jbe fs gs xor xor add pop dec sbb sub cmp fldl push jne leave ret pop mov xchg or inc mov or pushf lcall pop ja stc outsb lret fstpt cwtl xor ret popf sbb out mov cld int push out push mov je je fiaddl cmp cld pop ljmp pop dec pushf cmp sahf xchg or xlat sbb inc add lret inc mov mov cli (bad) (bad) int enter popf push andl push ficom roll push mov sub (bad) lss sub inc push and mov loop jo scas imul mov jl icebp loope (bad) jbe rcr adc out arpl xchg out jmp lea add xchg mov cmc call inc test pop mov push loope jg outsb int in cmp mov ss or dec jl dec (bad) ror push dec outsl jne leave sub and (bad) out dec cmpsl adc cmp mov insl or jb xor insl iret jl aam adc pop sub ja push dec jb jnp hlt push pop mov xchg or fsts sub mov addb test mov cmpsl xchg dec (bad) xor jmp push jge iret cmc aam fnsave hlt cmp adc std ret loopne nop lock repnz loopne xchg cltd (bad) out push out in adc (bad) mov mov inc add cwtl fist (bad) ret inc enter and and addb xchg push inc xor inc out and lea push xchg popa mov jnp fstpt out pop insb mov xor pop lahf stc shll mov jns hlt mov into das cmp cmp (bad) jae sbb (bad) lret ds xchg jmp or cmp (bad) or sub (bad) dec pop inc xchg (bad) sub mov cmp xchg push inc add xlat pop stos lods jge mov inc imul int3 xor push popl jns xchg xor xchg inc mov pop dec push ss mov lea inc inc rclb add in fidivrl pop in xchg sbb and inc pop mov (bad) (bad) out dec lret inc icebp mov insb add cmp (bad) bound (bad) pop fcomi mov or sbb inc xchg pop mov mov into jg (bad) dec aaa and xor mov mov cli and mov arpl jle push negb mov jle (bad) cld out pcmpgtd out mov jmp mov inc jno stos pop dec mov cltd jnp sbb test inc sti stos cltd sbb shlb xor dec fldenv testl dec mov mov in aaa or or adc push mov mov loop call xchg jnp jns add cmp stc (bad) cmp fwait aad xor xchg dec insl test dec mov push mov inc fimul sti psrad pop sub push mov decb daa sub push sbb mov adc xchg cltd iret leave pop mov push jle iret sbb mov cmp jb test cmp xchg rorb inc xor mov mov jns je mov test fimul sbb add lret add xor sub incb add out mov sub pop les fdivs sub je in cmp js addr16 test mov xchg arpl (bad) mov aam (bad) mov push sub xchg sbb mov jmp lds lods adc mov pop movsb inc mov rcr hlt and flds gs inc test push out fcmovnbe xchg in addr16 iret divb stc rolb dec inc dec pusha pop hlt loope or add jle (bad) loop daa xlat aam pop rcr mov (bad) insl dec mov cld push jb jo jecxz sbb in push push ja stc test sbb test inc sub dec out xchg fidivl adc mov push in dec push outsb xor clc pop jl lcall dec subl pop sti idivb sahf loope mov or mov jmp fcoms das sub addr16 inc fdivrl dec mov andl adc (bad) lret ror dec mov mov add pop aam add jecxz push loopne das insb (bad) mov xchg shll je test pop or pop iret xor mov imul jae iret xor sub xchg jbe push push (bad) xchg stc inc in lods je mov mov mov adc push in lods (bad) aas mov push or lret xlat repz outsl xchg inc ret sub in loope ficompl shrl incb lret sub mov xorl sti inc and add xchg xchg mov xrelease adc aam jmp inc ja sbb addl call fadd xchg (bad) adc std pop xchg inc fmuls sub mov sub sbb in push xchg inc or mov (bad) sbb xchg popa push sub rcrb jle (bad) in pusha int dec outsb mov and inc stc insl jmp cmpsb bound mov xchg or lea add xchg pop insl fldt mov lods xchg and push outsb sub ja xchg sub in lret repz gs xor sahf je test (bad) push pop dec mov sub inc mov cli (bad) mov icebp in xor and in sub std sbb cld jb or adc insl jne rolb mov cmp jae rcr adcl daa and mov (bad) xor mov xchg aas mov and (bad) jb pop mov inc loop sbb sub ja mov fistp mov xlat pop push pop test imul cmp dec xor pop mov adc cltd sub outsl ret pop lcall test push xor mov jge mov hlt ret add sbb movsb jp imul xchg pop movsb inc push (bad) jae mov mov fsubl push cmpsb jns shlb fs shrb sbb push add popa xor fstl sbb (bad) out or insb repnz hlt push jp lcall jae divb or imul je repnz adc add mov mov gs pop nop xchg outsb stos dec mov mov inc popf or jg jl mov out mov adcb add scas adc inc mov stos outsb mov in jo and push pop pop sbbl mov iret in in fstpt in lds int rcr cmpsl repz sbb add (bad) dec movsl lods stc out jle movsb sub scas cmp mov cmp jb rclb stos mov insl cwtl adc sahf int3 mov insl dec cmpsl es xor mov pop sahf stc xchg sub and decb jmp dec int mov push out cwtl shlb and cld das xor and rcll lock in pop insl pusha jbe sub packsswb push adc setp dec cmp sub push mov cmp mov ljmp mov rorb fbld adc enter cmpsl dec adc fwait ds sbbl jmp pushf push ljmp or and mov mov clc push std imul popf dec cmc pop leave pusha cmp xchg inc subl adc push outsl ds test mov enter jle add lods ret stos pop fs jno roll ficompl mov jp lret insl push out (bad) mov or dec jnp or (bad) pop sti pushf das inc ss subb mov stos (bad) loope xor cmp adc popa imul orb lods push (bad) push inc mov test test dec rolb fwait sarb (bad) mov cld push loopne mov push mov imul fstl das jo call mov dec add or mov fistp fisttpll adc push jl and push js inc mov adc pop cmp into mov fsubr int popf jge sbb shrb enter jl jo (bad) adc dec lods imul bnd aam jb dec pop mov dec pop leave or inc sbb out and or adc popa (bad) shr adc es jecxz ficompl sub pop jo mov sar mov fstps jmp mov rdpmc pop jo dec sti stos lds dec out jecxz sbb sub shr je loop lock adc mov push popa dec popf test cli mov in pop (bad) jbe dec nop mov cmpsb xchg inc lds jne or divb adc add inc push cmc dec std pop cmc movsb cmp pop mov sbb add push aaa jg xor lret das add fsubs xor push (bad) sub pushf rcrl lahf jp lret loopne in inc pusha lock xchg fiaddl out outsb je cwtl outsw es fmull cmpl push pop or dec arpl popa jb mov test outsb inc sub das lret adc push dec and insl xor mov push mov dec cli imul mov lea rolb xchg test fwait (bad) out push jb ret push push sarl out test arpl and mov je ljmp lea xor aaa cmp sub inc xchg mov (bad) mov mov add sti adc dec sti dec push xchg aaa cltd jae pop jae (bad) push and call jge mov fs mov int clc lahf sbb jbe or enter cmp inc adc or out aad adc push add sahf mov push inc and ja adc out inc aas xchg pop dec movsb or cmp stos xchg js xor sub enter xor ja (bad) js add out sub in pop dec ret push pop inc nop adc inc out hlt jno sub outsl (bad) lcall jne and and add loopne adcb test leave rcrb xor push icebp mov scas outsb shrb dec inc (bad) pop mov pop push cwtl fcoms out mov pop and push sub mov imul je faddl into ljmp push std cvtdq2ps sub daa fwait add mov movsl jg sbb sub stos adc sub je insl mov jb adc test add insb xchg jne push inc xor cmp fiaddl bound xchg (bad) or and push dec clc push pushf insb sbb push xor add and and test stos (bad) cwtl or push sti push inc or add (bad) scas pop or popf mov in es sub cs and fdivp push xchg js (bad) lret mov sub xchg xor sub (bad) in and xchg mov aad ja mov repz std mov sbb insb cli addr16 jne lret aam mov fwait ljmp rcrb ljmp adc lods mov in and jge push pop pop pop xchg mov sub pusha sub sbb fcoms xlat and push shrb fstps es or jle mov mov cmp scas or dec jle ja dec add sbb mov cmp pop and push test dec xor pop sbb jnp cmp aad mov pop test outsb xor jecxz jecxz sahf jmp repz fiadd lods cmp rep jecxz xor popf xchg xchg mov and addr16 mov cmp xor pop ss fild cmp jbe inc inc mov call inc bound insl push lock sbb push test shrl ja xor int jg sub push sub adc inc mov cmp dec aaa push mov adc mov scas push push mov lds adc sub pushf stos pop pop inc and pop adc cmp pop mov mov stos pop addr16 aas es (bad) movsb inc mov inc js mov leave rcrl push mov je cmc dec or je cmp xchg adc ret xorl and xlat sub push xor or sti add mov inc cmp mov sbb inc mov pop xchg push push arpl xchg mov adc mov roll push push test test imul lcall call (bad) imul adc jb xor push jl lcall lock pop sub jl add das xor xor pop mov xchg int3 aad (bad) sti push dec jg (bad) or and sbb lea dec dec dec jae inc cmp pop mull scas pop in nop rep rcrb xchg pop loopne adc xchg mov and aam pshufw aad cld cld mov inc sbb (bad) aam push pop lcall xor mov jecxz insb dec mov or push loop xchg push sbb out mov push sub dec inc and and imul sbb inc adc xor cmc mov sub aas jge popf pop mov adc mov sbb jae andb repnz jge movsb mov outsb movsl ficom dec push movb lock (bad) dec out mov es pop add test dec ds push mov ss iret add sahf push ljmp push rorl jns dec out jg adc jae adc hlt sub xor into cmpsb imulb in mov dec xchg nop push (bad) loop mov mov mov jne mov jmp int xchg add dec xchg push sahf gs fldt inc mov leave xlat gs in fcoms (bad) jb mov faddl lods lods mov js xchg aaa rclb inc lds push ror pop push jle inc lods dec jne adc xchg stos mov xchg add sti pusha xchg cli insw push jg shrb nop clc and pusha cmpsl dec and mov sub mov test (bad) adc fcompl mov xor mov dec sub xchg adc mov adc sub adc jbe in cwtl (bad) dec pop inc dec test lods lret and push (bad) and shr push mov or stos pop xchg mov dec mov pusha test mov dec pop mov push repnz ret sub cmp inc in rorl push or fildll mov dec rorl xor xor cmp test icebp cld aam or mov sub test push ja rcrl xchg mov stc fnsave fs into adc cltd rorb push inc in inc xchg enter ljmp repz or hlt lods aaa iret push aam xor lret and enter sub jmp cli push pop sub pop in jl push popa fcomps jo sub and testl fdivs push mov mov sti adc push dec cmc scas fdivs addr16 (bad) add js pop fmuls sub mov stc scas in or jno ret ja in (bad) stos je sub hlt sub mov xchg loopne jg arpl pop icebp pop push fdivl sti in or mov pop imul in repz lcall lcall mov frstor mov cmp loope repnz inc aas pop popa stos add call pop xchg adc and add mov jbe xchg (bad) in fisub cli repz pop (bad) imul inc dec (bad) sarb ljmp add and push iret loopne out fsubs xchg mov push stos add inc jp add sbb int3 mov scas push enter cmpsl mov jl cmp adc ljmp push sub pop mov stos xchg cmp mov in shlb ret aas stos rcll add adc mov xchg ss pop pop arpl roll jno cltd outsb scas cmp pusha fcomip loopne test mov les movsl jbe fldl cmpsl add insl jg xchg (bad) jmp stos sub mov (bad) fstpt jmp inc mov mov out call pop popa push mov rcll inc popa (bad) (bad) and jnp dec lret in fsubrl mov cmc in pusha pusha xchg cmp mov (bad) aam xor jne ds push push mov cmp cltd xor je,pt jb nop outsl xor cltd and lock mov in sbb pop test stos or repz rcl pop adc jae iret ret xchg push sbb rorb data16 (bad) movsl int3 push jnp mov arpl pop dec xchg mov mov jle push cmp xor (bad) int repz sbb mov adc pop lea push pop icebp push fwait push outsb sbb pop push jno mov cmpsl jp sarb pop repz aas mov ljmp ret jb (bad) js xor daa insb or sahf push or les or xchg sub pop sti popf xchg cmp mov fistp and aaa cs inc or call add lock out cmp xchg mov adc mov sbb lea push cltd or out std in cli shl imul mov pushf xchg sub arpl and cmc (bad) cmpsl inc inc rorb rorb stos inc add push shl rcl mov js call outsb imul xor dec call (bad) (bad) push arpl mov sbb cli add dec fnstcw or and and cmpsb add sbb pop imull mov sub inc xchg (bad) xor pop push adc std imul sub lods xor sub add mov in push outsb addl jecxz push repz push pop popf and ret push out add mov aad or dec aad in mov int3 cmp hlt inc fistpl mov and imul sub mov mov loope enter mov (bad) dec jg cmp xor loope in mov mulb aaa sbb adc daa pusha push loop scas fldenv dec and stos out pushf mov cld push daa pinsrw pop push dec aad loop adc inc adc dec sub popf xor dec inc push stos mov je adc inc and pop jns daa add push jne cld cmc in cmp pop or pop lahf inc (bad) test xorl push aam cmpsb mov jns shrl pop fnstcw mov inc sub xchg and sbbl push mov pushf lds nop push xchg vcvttpd2dqx dec stos mov daa in into push movsl jae sahf add pop scas roll adc les sub dec aas idivl call ret mov mov push std (bad) jne mov loope sbb pusha mov outsl out jae mov xor dec je cmp es rolb dec shlb arpl and sbb pusha adc sbb jecxz scas mov or xchg stos adc push mul test and sub jo imul inc push cmp add scas (bad) cmp mov push repnz lods aad leave fwait mov mov (bad) cmp xchg add in mov mov in xchg push sub xchg sbb std stos lret mov push sbb fyl2x or sbb sbb xor jecxz dec inc fidivr mov cmp cld aam (bad) adc (bad) rorb les cld cmp pushf call loopne sub repz insl enter bound add mov jmp pusha clc (bad) jo fstps sub push cmp mov ja roll and xchg fistl push xchg lret add cld and je in (bad) jp,pn lcall mov pop (bad) repz (bad) dec or fcompl pop popa sub and and pushf mov jle les repnz inc xlat or and and cwtd xchg mov test rcrl (bad) mov cmp cmp jp and push (bad) loope jp lahf call aas dec fs and adc adc add pop cltd pop sbb movsl hlt sbb hlt stos mov xchg add jns imul push mov xor sbb test push xchg jg int push pop jge ret cmpsl push movsl xlat fsubr sbb inc and mov mov and es jl fist xchg outsl xor sub sub adc or scas insb jge mov cwtl add fstps mov cmp fisubrl aaa out add push mov dec xchg mov scas jl mov jmp sbb pushf or roll xchg jne mov or aad les cmp fnop cmp daa xor or leave outsl jmp das aam jecxz push inc mov push cwtl arpl xor (bad) jg mov mov lahf (bad) hlt push pop xchg and loopne sub lret mov (bad) lret add mov daa sti dec jb push mov mov data16 rorb loope jp insl xchg outsb adc push cs cmp out and mov (bad) fildll push adc rorb inc leave pop mov mov or fdivrl rcrl fidivr in repz mov xlat xor pusha xchg jl add in adc push xor lds pusha lock std or sbb cltd cmp insl mov int pop and push push js xlat aas sub jbe push fidivrl add andb and movsl jl lock fnsave mov pop cmp test mov pop mov stos add ljmp mov rclb dec inc aad insb loope cwtl ret ss push and js (bad) xchg call adc cmp lods (bad) sbb lods push dec fimull jno inc mov jmp sahf pop arpl scas cmp xchg and add and pop or pop xchg pop ds fisttpll ret xchg dec push icebp xchg jae pop test call stc push mov or push adc mov ljmp stos insb mov mov xchg (bad) mov mov mov enter mov push sbb (bad) jo jmp mov push push incl sti cli int3 add dec inc pop fisubl (bad) mov or jns popf aaa push popf sbb cmp (bad) xor and (bad) mov jno inc out outsl xor mov lcall mov xlat mov sbbb jno test add add or pop push fldl cmp push xchg adc xchg jne enter std xchg inc pop lret adc sbb sbb loope and incl movsl jmp xor aaa mov fsubrl scas das int jns sbb cmpsb addb loopne clc repz daa fstl loope fwait sbb fmuls clc loop push fsubr jg hlt or lcall dec xchg lds push int jns jge adc in enter xorb xchg mov xor clc lock pop sub fwait push or cmc or push push (bad) adc dec rcll inc xchg or pop out sbb test xor scas push nop adc mov mov pop in xchg lock xchg in scas cmp lret sub xor or adc pop test (bad) (bad) lock arpl push jl dec sub repnz mov out sub test imul or xor hlt sbb sbb add push inc (bad) sub pop ss mov jp je cs sti push daa not fisubrl insb and inc or fdivp (bad) je (bad) out jns,pt shrl xor push cmp or sbb imul pop outsb out xchg dec ja adc mov sti xchg mov lahf nop xchg mov aad cltd jne fildl cwtl mov jb cmp jl (bad) (bad) es add pop outsl iret cmp cmp jo cld push xorb cwtl mov ficompl and inc repz mov adc incl pop mov xor adc push movsl idivb mov (bad) xchg adc and xchg and sti and inc aad shll js push and inc cmp dec cmpsl sahf dec movsb stc (bad) cmpsl jne xchg sub lods push pop pop dec out nop loopne lret mov daa push out out dec cwtl push push push stc sbb xchg push or imul clc iret jbe push outsl js jge out adc lds dec mov pusha add fiadd xor adc andl and std jnp shrl push decb loopne mov xor cwtl xchg out in (bad) pusha popf adc push sti sub shll int3 js xor sbb jecxz and std popa iret mov psubusw adc sbb outsb adc imul into idivb push dec mov fdivp cmp repz inc mov ffree idivb mov jg scas rorb les or std pop repz rolb mov push mov cmp aas ret es fistl inc jmp xlat adc jp lea insb lret test lock cmp mov cli aaa fildll xchg mov cld push push xor mov xor insb cltd push loopne out xchg stos lods or les das je inc lcall lods lods jno insb ret xor sbb dec adc mov pop adc sarb xor stos add data16 sbb pushf jge xchg mov add pop (bad) mov mov mov enter adc add add jb add mov jmp push push push mov and xor and jmp jnp mov mov push jno pop push test xchg push xlat cmpsb (bad) mov mov sub sti shrl sbb out (bad) push ret (bad) push mov mov imul dec push and mov aad fisubr mov pop leave xchg jmp imul add and mov xorl dec rcll adc cltd push (bad) xlat test (bad) mov lret cwtl xor mov mov xor sub xchg fsubrl xchg rorl xchg add jns or je xchg jnp cmpsb inc in inc or add cltd xor mov adc add mov movsl adc mov sbb scas ljmp pop sbb andl lret clc add adc lret iret or ds test je mov push pop pop (bad) negl dec mov lea sarb das mov loope fsts add ret sbb push push sbb xor lcall and fsubl mov push add sub cmp outsb outsb lret mov cli sub sarb cmc lahf xor add pop hlt ss push (bad) nop repnz daa ss pusha in fildl jo int or mov rorb (bad) mov je data16 push pusha mov or mov add mov xchg sub add and adcl pop ficomp dec js adcb sub fmuls sbb ret cltd sub je mov psllw pusha in dec mov icebp mov aam into jns mov (bad) int3 loopne orl sahf pop mov leave and out js mov sbb int inc insb xor and pusha or sbb popf (bad) aam inc jl push xchg mov push movsl scas mov jo xchg (bad) call les push (bad) xor (bad) or (bad) push repz gs std and jle pop mov sbbb jae pop rcr jno loop ljmp pop mov cmpsl push inc inc (bad) pop push sahf and jne movsb fs or dec rcll loopne inc jns mov int3 sarl arpl adc inc sub stos daa inc pop cmp insl lahf sub or je and movb or in lret sub je dec inc and not pop sbb and mov inc inc push mov and jge jmp (bad) lock adc mov test sar inc lret (bad) in add sub jo adc fstpl mov roll push or (bad) jno cmp fnstcw cwtl mov flds mov out push shrl in popf mov xchg arpl jno jecxz add popf or lods mov arpl popf mov aas sub int jnp cmpsl in inc aas dec mov mov cmp gs and push rolb icebp and (bad) push jo jmp fwait aad xchg cmpsb mov je pop repnz push inc dec and pop dec mov loop popa push mov jecxz or xchg xor pop and dec xor test outsb mov and xor (bad) repnz push adc adc xchg jecxz ljmp inc xchg fiaddl cmpsl add je sbb xorb cmp addr16 add xchg lret and pop fwait cmp movzwl mov jmp fdivrs dec sbb pop (bad) aas sbb jl pop push int sbb (bad) pop sub mov test add sub and cmpsl stc test xchg stos or or (bad) mull cmpsl ret (bad) mov xor mov xor loope inc mov xchg adc xchg mov (bad) je adc inc mov imulb bound xor pusha or adc jns cmpsl mov fisubrl gs fnstsw mov xchg push aaa mov xchg fist fcmove mov adc js sahf loope pop jno clc push lcall lret pop add lahf call mov int dec mov lret into into (bad) (bad) ficompl aaa (bad) cmp icebp fimull add cmpsb push or outsl lret pusha outsb sti mov clc popf pop push adc mov (bad) mov xorb inc les add xchg xchg push arpl mov dec stos cmp push in push pop push mov push stos jmp mov scas in icebp dec ds dec and cmpsl pushf fs out jne jno call (bad) push add fisubr adc int3 call xchg mov into mov xlat sub aaa push fimul in push sbb lahf push stc pop inc mov movsb adc xor ljmp loop sbb ds adc xor stos movsl pushf loope sbb iret scas add fcomp rcrl rol ret adc sbb xor push inc fistp mov jl push push or das sub xchg ds add ret fcoml xor or in call bound push push dec scas dec pop pcmpeqd imull out test ret movsb rcl xor in mov lods (bad) fcoms data16 ljmp test or sub inc dec inc or pop add dec pshufw sub hlt pop jecxz addr16 sbbb inc imul and es cwtl or (bad) fidivl test jae into pusha sbb daa xchg inc xchg mov out push pop pop jg rclb into lahf inc mov sub push mov je (bad) add divb push incb push imul stos addl jbe dec push pushf mov es mov cltd or (bad) or xchg scas stos lahf repz adc mov inc rclb inc mov fwait into inc xchg divl std inc jmp je fs cli ds sub out fisub aas add shr popa jbe es mov mov mov jns,pn mov or pusha adc sti out clc ffreep aas fidivrl enter sub xchg mov or shrl jno mov nop and inc pop loope inc dec sahf or imul mov addr16 repz cmp ja scas icebp in call and lea dec dec int3 ret jb mov push (bad) movsb cmp test das lret movsb mov push and jns lds test dec pusha test loopne repz movsb fs test sbb jle and mov sub popf icebp out xchg jp push sub cltd pop xchg in dec push or adc pop pop or cs jmp enter xchg repz jae jb insb or cmpsb decl push aas aaa nop insb xchg test push insb test adc mov sub fst jae inc xchg shr xchg nop iret fwait mov sbb push or push call rcrb inc push cmovb das or fimull sbb movsb out or push or sub jns testl jl pushl sub dec jle (bad) arpl test add cmp lods pop lret pop mov cwtl fwait call pop bound call dec sbb or ljmp and pop int out dec int3 call jp into push ret sbb arpl fiaddl (bad) pop iret push inc cmpb aam xchg repz fsts ficomp stos and xchg cmp pop push daa mov cmp xor push pop push divl pop mov dec sub std stos jmp or ficom push cmpsl ret xor mov stos push pop ficom mov cmp cmp movsb mov stos movsb lea dec jb jg ja push mov (bad) movsb inc inc dec push mov add (bad) sarl out add or mov mov aaa (bad) insl mov fcomps adc call sub sbb add lods jmp mov (bad) jp inc cmp fstpt dec stos sbb or mov jmp xor inc outsl mov ret inc loopne mov and adc es cmp cmc push lock repnz jne push negb and out test shll js out or and push xor dec popa popa out add push les mov add push fs rol inc aad add xor pop mov cmp lds push push xchg js jle rcll ljmp shll loope int3 dec mov and (bad) cli in or sbb sahf dec mov sbb or jecxz insl pop inc xchg loop xlat xor and jl aad stos in adc mov repz push (bad) mov and fmull shrl test clc in adc stos sti daa sbb insb sub pop movsl or movsb (bad) lcall mov push pop in mov fisubr jge xchg testl push mov or mov dec out cmp clc mov push sbb push xchg mov pop push cli mov stos lds inc push enter mov inc dec mov and inc es sbb and cwtl insb int sbb bound loopne inc std sub vpmovmskb jmp add jns into pop shll loop clc pushf ds push mov mov cmp (bad) or shrl sbb jnp dec jmp ret fs sub stos push in add lods push or push jno in xchg inc and mov divb sbb fnstsw hlt lods mov das (bad) pop jb push pop gs push pop ret cmp out loop mov mov pop push pop std outsl in and loop lods jl sti mov sub fisttpl cmp pop lret nop fwait mov into and lcall and popf in push inc cmpsb repz rclb arpl adc repz movsb dec test out (bad) xchg xor jge arpl outsb inc in out dec cmp (bad) pop add mov dec mov push lods sub pushf dec mov and push and cli hlt cwtl (bad) sub cmp outsb (bad) dec pushf pop mov push lret outsl jge test mov push jmp mov push nop jmp ret ret mov xchg dec mov popa xor xchg jne cld xchg push and sbb pop cmpsl mov in dec loop xchg adc stc push pop outsl cmp mov mov jno lret and add mov adc xchg xchg fdiv (bad) dec scas pop test mov rcrb pop jae or pusha (bad) lock insb scas lods aas lock cmpsl aad hlt clc call lret aad jb (bad) leave repz xchg xchg fistl push sub sub add scas aad sbb (bad) adc enter sti dec cld jg mov mov inc dec loopne pop add lods xchg sub mov sbb adc lods ja jle sti addr16 or inc lds or cli loopne sbb and cltd jge mov xor in sbb int3 push pop jge test icebp inc fldl js mov inc call rcrb rcrl cmpsl push in test stos jp clc xor mov addr16 pop fdivrl pop xchg jns es ljmp dec lds adc int dec loopne or clc sbb or pop test fwait inc lods xchg cwtl pushf aas nop cmpsl leave rcl adc and pop inc mov sub mov xchg cwtl mov push add sbb jle daa sbb loopne sti movsl mov pushf ret ret pop test mov jbe movsl popl out cmp or sbb inc aaa ret or xchg ds and dec jmp mov das lret pop loope fisubl inc stc icebp dec mov imul xlat sti andb (bad) mov add outsb mov xor dec stos sub push std in std test lods pop (bad) ss pop js cmp in insb and push dec fpatan imul mov out ljmp addl xchg ds push lcall fisttpl and scas mov sahf adc dec pop sbb sbb inc or in xchg sahf fcmovu pop mov pop lods mov mov sbb push mul jl add das jmp movsl ss inc lahf cmp and mov movsl jmp movsb roll jmp out mov scas fldenv stc mov outsl push dec dec (bad) mov inc movsl xor fsubp push sbb adc clc sbb xchg jne pop test in jmp push sbb fstps add sysexit (bad) xchg xchg (bad) sti movsb ret fstps inc jge mov mov xchg cmpsb jo jb and loop test jnp and testl jmp mov out xorl cmp stos fimul (bad) mul ficomp outsl lock aam (bad) mov fdivr inc dec clc xor sbb jno xchg sbb out hlt idiv pop jno nop (bad) and mov mov jg pushf loope xor adc shl push imul cmp cmc loop dec faddl sbb ror mov movsb jae test push test out sbb lods sbb in xchg mov aas sub and pop xchg js fsubr cli aad jb add lds push (bad) int3 mov sub jno out xorl int3 lcall ret jg pop enter clc inc push ret lods iret imul jge inc mov ja addb (bad) or out std iret sarb jl js push xor cmovo test inc pop mov pop add push inc sub xchg (bad) xchg scas push mov clc cltd lods add add jnp mov mov jb (bad) add cs shrl sti xor test pop jge mov imul andl pop sub jmp cld xchg cwtl sbb jo pop dec adc loope push imul sub xchg scas js dec pop sti imul jno xor scas mov sub sbb cwtl in push add daa nop push fwait pop mov cmp sti in adc push movsb mov or shrb or in jmp daa sub aas push orb dec popf loopne lcall (bad) cmc pop push pop and lret pop or stc lds sbb mov inc pop pop mov pushf and pop jae cld or outsl cmp movsl cmp pushf lret iret sar dec xchg fisttpll lock fmuls idivl mov xor (bad) jb or in xor xchg mov dec xchg pop xchg out ret jae in add dec sbb sahf pop outsl push mov push xchg dec cmc push sbb scas pop int3 mov push mov mov inc jg ret xchg xlat pop (bad) mov shrl clc das xor add stos inc jo lock ja cmp test push inc sub mov loopne fstps sbb pop and (bad) fwait inc nop mov xor ljmp and movsb jne mov add fidivrl inc and xchg or cmpsl xchg mov iret out xor scas xchg jl (bad) pusha jp jmp call jo and mov xchg sbb scas shrl add test imul fisttpl in mov push sbbb leave jae mov into pop mov dec xchg sarb fmull decl rclb clc sahf mov nop stos fisubrl out add xchg xchg daa sub in cmp pop out push mov test lahf dec jle pop xchg mov cmp mov and xor mov adc xchg ficompl or rorb test rclb je ret fwait lods enter cwtl bound adc movb pop jle imul cltd loopne clc cmp pop incb push out psrlw int3 push sub aam jo repnz dec mov lock mov or stc jp in xor or iret pop xchg mov pop and sbb cld pop xchg jmp lret inc xor jle fsubr int push les xor jmp repz jle test pop in xor mov clc cmpsl cmp ret jp sbb inc imul xchg leave test lock mov pop int lods and and leave int mov and fsubr (bad) out adc cmpsl imul (bad) int cs pop xor lea pop cmp repz push cmpsl mov (bad) rep std mov sbb push aas test idivb (bad) bound mov sbb sub cmp scas outsb shll adc jae or mov shr sbb cmp mov mov data16 mov and pop (bad) xor inc addr16 hlt cmp loope cwtl fidivl ret cwtl imul mov in cmp (bad) sub scas ja test mov dec data16 mov add mov (bad) ficomp sub adc aas imul fcom stc popa ss mov (bad) pop mov imul repz add inc arpl mov sbb scas lret push mov jge enter lcall in jns in (bad) movsb push and daa sahf das (bad) and in add mov fstps ficom and popa pusha repnz lret jecxz or out rcl push push mov (bad) lcall cli pusha jle jge mov push hlt push adc jge jg mov mov (bad) ss pop les jne mov ljmp repz cltd out jle mov mov loope xor push (bad) add xor or inc lods fistpl sarl data16 push pop fistpl cmovae inc xchg mov shlb loop mov adc fidivrl push jno pop out (bad) movsb pop repz xchg cmpsl sub dec fbld or fsubl push jl xlat cs mov adc popf add les push enter idivb hlt addr16 push xor (bad) mov andl and ret pop jns imul xorl cld xchg enter ss std pop and (bad) stos test sub out stc push faddl aas js and out or ljmp mov xchg inc rorb fwait lret pop pop or dec xchg or jp adc aaa test mov xor sub ret int jae dec cmc std add stos cmp push mov sbb popa and xlat mov adc push cltd jmp xlat (bad) ja into pop push or push bound cmp push mov jecxz loop mov inc xor xorl xchg mov sbb rolb xor mov dec js lods mov or and add mov pop xor xor leave cltd movsb lods repz cmpsl cld adc pushf mov cmovbe adc lock jno or cmpl push lret push sub out xor aad aas subl insl in sub jno imul mov fcmovnu push mov adc inc lods push lds pushf and xchg or or pop repnz (bad) stos sbb push jbe enter and mov mov sbb sahf pop jp jmp rcr pushl pop mov sbb pop dec push sub and test inc enter data16 mov rorl mov movl and mov rorb movhps test popa rclb jmp ss mov ds mov es ret daa lea cmp pop divb jns or cmpsl push out mov aaa and ret jnp jg (bad) incl lcall cltd jnp jns hlt mov out aas jmp ds sti or push stos (bad) xor js or add (bad) pushf lods inc push lret lret (bad) in aam pop repz pop mov xchg push dec xor jb std fcompl (bad) push mov sbb xchg add hlt sbb sbb inc fbstp add iret pop cmp leave jbe loopne,pt dec stc lea (bad) xor in add cmp mov inc and pop mov fiaddl xlat mov and pop lahf ret insb in cli xchg (bad) dec pop add fdivp mov push gs (bad) in xor (bad) sub repnz mov xorb ja mov and fwait in jno mov incl or push add fisttp aas push in fstl test movsl mov cmc test mov iret out mov and cmp not out stos andl rcl sub popa add (bad) xor or jbe inc ss lods push pop lret rcrb xchg xlat movsb dec repnz inc imul cmp (bad) xchg mov in xchg leave fcom jp pushf jl out inc mov (bad) idiv mov leave pop xchg mov aas mov lret sbb lret insl hlt and lods push cmp add inc ror stos imul enter fs xadd stos scas push xchg mov jns flds mov mov push mov sarb push sub pop cmovne jb xor bound nop mov mulb dec lock imul jb aaa mov (bad) inc jge xchg dec sahf es mov sar add bound cmp cmp pushf inc cmp dec sbb rclb fmul sub sub pop sarl enter notb ljmp roll push mov loopne push in out lods negl and das (bad) enter das push (bad) (bad) gs and out bound push outsl clc jg dec mov adc std movsl jle jge cld mov pop out jne movsl pop lcall pop cmc jae loopne adc xchg jne add pop outsl movsb pop jmp mov jno and push aaa mull je add aad and in jo out ss iret das stos aaa ret fadd mov or inc adc lock aam adc mov (bad) lods test xor pop imul mov xlat push fcmovnb outsl insl add ret das sbb sub mov roll push fisttpl jp xor xor mov ss cmc cmp stos xor fmuls test push lret push cltd mov push and xchg popa insl push std mov mov xor mov dec decl dec popa fs lea aam sub pusha jmp fidivr inc loopne test adc and mov cs repnz cltd xlat xlat icebp cmp push push leave sbb stc movl jge mov and out xlat fnstcw dec icebp cwtl insl aaa fs icebp cmp loope xchg inc out add and sarb mov popa mov psrad repnz dec fdivrs sub pop add fldt sti mov outsb jge rcll lcall and sbb movsb sub sub cld and pop lods test shr cmp add mov xchg pop (bad) repz mov sahf pop repnz loopne jo clc cmpsl cmp adc lahf test aas lcall sbb mov repz and mov xor leave pop push mov push push adc repnz jge pushf or dec jl insb mov jmp cmpsb sbb jb mov fiadd sbb (bad) lahf lret cmc cld enter mov sub inc dec in sbb xchg lcall fisubr mov int cmp push sar adc mov mov sub psllq jmp ljmp mov jno lock mov cmpsb outsb mov sbb dec into (bad) jmp jne scas mov ja test push notb push pop jp jo or hlt sub cmp xchg pop add aas sbb pop lahf in mov data16 jns hlt sub jb in xlat mov inc pop or cld (bad) jns add ja es adc andb les cmpsb jbe inc pop adc jp or fs lcall test dec inc loopne icebp sbb xchg pop inc sbb dec lods jbe pop sarl inc inc fwait sahf mov int adc mov (bad) (bad) mov dec aaa into wbinvd loopne push das addr16 aam mov add sub shll cld je bound cld pop adc mov pop jle repz movl pop movsb aas pop and shr insb sbb or scas mov sbb xor sub adc inc adc mov dec js xchg testb xchg int testb mov sbb push cmc lret xor inc cmp (bad) pop gs sub cmp mov pusha stos xchg pop imul push das jecxz dec test shrl ljmp add cmp or adc addr16 pop fcmovnu stos imul (bad) xlat lds stos push jmp test jne jg mov add out loopne pop mov push mov shll out mov add adcl mov xor sbb daa outsb dec sti mov xlat push out das jo orl scas jne cwtl cmpsl popf outsb enter sbb popf xor lods mov sub sbb fcoms xorb mov lahf mov lods andl cmpsl rcrb in mov das (bad) (bad) das stos push dec inc add and test adc and js rcll xchg push jb adc jle jne pop jns (bad) xchg fistpl imul js (bad) jne addb sbb pop dec add stc (bad) cmp xor add fnstsw cmc push xlat sbb es jecxz mov sub cmp loope sub mov mov xor outsl xlat adc adc dec xchg add lods xchg dec add fstpt movsb and and or jecxz or xor sbb mov std sub sbb lods js pop and (bad) rclb xor gs enter in or xor adc xchg mov (bad) mov rclb mov xor mov cwtl adc movsb cltd js cwtl mov mov add (bad) push les repnz or loope pop clc dec mov push cli fcmovnb add push ficompl mov xchg xor aaa cmpb push jmp test add vpsubb je push pop into push jb xchg rcrb cltd in aaa cli inc mov loope push ficomp mov out dec mov xchg cmp mov stos or dec out mov lock adc int or in icebp inc scas push push fsubrl pop dec (bad) add outsb fdivl push add dec jne cmp mov insb movsl movsl insw add scas add sbb lret fstl mov and sub dec or dec mov mov inc div adc je test cmpsb roll out mov xchg sub xchg mov xor pushf sub shrb dec fistpll insb adc push imul pop leave mov push mov test es push sahf (bad) je,pn fidiv lock insl xchg (bad) pop jns movq (bad) xchg dec xchg cmp out adc cmc clc mov cmc cli test sbbb (bad) jecxz and fstpl das call inc sub lcall xchg sbb shrb rcl push inc ds int3 lcall fwait dec push sahf call xor xor lds in dec mov addr16 xchg repz mov sbb cs add test cmpsb add fsubs mov dec fwait clc cltd dec fsubrs (bad) mov xor (bad) std test fildll push cmpsl mov popf mov movsb and xchg outsl test in mov push xor popa icebp into scas inc dec out mov pop cwtl out push sub sbb push mov shll arpl ror aaa dec lock jb xor jae out mov repnz (bad) mov movsl fidivr in cmp lods rorb inc and lret outsl jle push outsl sub sub rcll jge insb (bad) mov sbb arpl or roll (bad) shll (bad) and cs push repz sbb popf in repnz aad xchg lret (bad) not dec pop fdivrl jecxz or fwait jbe lods pop shrl mov pop lods popf (bad) out adc sbb test gs loopne mov push sahf pushf pusha pop ja push (bad) fs daa (bad) sarb pop pusha and dec xchg push sarl mov cmp jecxz sbb pop pop jno push test inc ds subl mov lret or adc add ret cmp mov (bad) rolb fadd std push test xchg pop rclb icebp fstl stos sbb jp mov dec ror stos int3 inc inc push (bad) leave das jl addl nop notl push fwait (bad) (bad) rol xor out or rorl pop aad xchg (bad) enter rep mov add inc add iret push pop add and pop dec mov fistl ja xacquire and jne (bad) xchg cmp sahf cmp and lods je mull adc fwait sbb aam or pop mov imul int3 bswap mov cmp xor lret test adc (bad) pop in es cli dec sbb aaa ss ficom test mov jnp sub test fidivrl sbbl dec or cs sbb (bad) fwait lods jecxz leave sbb test fxch es add enter inc xor aad push mov mov out xor lea xor (bad) mov mov shr mov fdivs adc mov mov sub dec push mov fmull push mov or testb add mov aam jg jns adc les sahf xchg add push dec mov mov inc cmp cs stc daa xor xor adc push mov pop out pop pushl out loopne mov aas fdiv pop or adc cmp mov add push mov jle,pn sbb mov outsb push lcall pushf jecxz scas aam repnz lds cmp rcr pop jle negb push xor aas mov arpl inc jmp and mov pop push scas and bnd xor out in aad ljmp mov push stos fnstcw mov or xchg sub lock shrl xchg sbb mov stc adc imul in inc jecxz fmulp sub mov pop jp in adc jb jns pop test insb fnop mov (bad) xchg out cmp xor push aad ret lret xchg pop pop push hlt scas test stos jbe jmp dec (bad) stos aad lret lcall sbb and fmuls aad xor jecxz mov and aad es pop add gs and das push pushf out mov in dec js out or data16 bound mov adc and mov out push xchg ret int3 lods popfw (bad) adc lcall dec stos cmp lret or insb mov dec add pop in cmpsb jle cmp int cmc fstpt or in mov lret cmc mov adcl cwtd imul outsb sub jbe in add mov inc jge mov fdivrs out mov jge popa cmp xchg cld (bad) pop decl sbb fisttpl lret jne push gs add test push test enter dec int3 decb fbstp ss sub fbstp in (bad) mov scas sbb jl rorl jle push and dec out pop jge je dec jno outsb rorb mov gs mov lret mov ja out xchg les ror mov or enter in scas add fcos lahf stos mov sahf loope outsb addr16 cmp xchg mov jae (bad) pop fisttp outsl lcall inc fxch std stos xor popf mov out push mov jg mov imul cwtl call test and jl ret add xchg xor jge cmp jle arpl sbb mov pop outsl push pop in hlt aad or fcmove stos in hlt hlt jle add insl mov (bad) xchg pop and dec leave ljmp out mov out fcmovne out ljmp repnz xchg push push aaa faddl fs mov test sti push sbb bound push sarl inc push cmp fs in mov int3 or outsl icebp add mov (bad) hlt (bad) daa jge sbb gs jno cmp xor and mov nop int3 push mov xor lcall js mov xchg lahf jns in lret int sub or (bad) and jl aam mov inc xor dec inc cmp sarb je out sub jb mov add jnp and and sbb jnp xchg mov mov jp cmp push mov lods sahf stc inc sbb addr16 aam sbb in adc fild mov out fstps fiaddl std iret xchg in hlt push pop dec add pop sbb aad arpl or and xchg mov pop aaa and ficoml mov repnz subl mov jo ljmp and test jnp mov rorb push cmpsb add xchg sub and mov fsub stos shlb pop push push clc mov sub xchg cmp sub scas testb lret xlat test or add ds inc push aaa push mov das loop xor je cmpsl jg (bad) shrb dec push scas sbb or xor mov rcrb add mov xchg repnz jmp jo out inc add push cmp dec push es xchg (bad) add or cmc xor in push adc repnz push push pop imul push jl ss adc js cmp cmp outsl add mov xor movsl xor int mov mov mov xchg sub pop gs (bad) adc fcomps sti xchg pusha subl or ds push (bad) ficoml sarl cmp mov pusha mov fisubr push arpl push add sub imulb jbe push mov push fwait sub add jmp adc push nop test roll pusha xchg sub jns xchg xor inc jbe (bad) pop push inc fist or (bad) and xchg test push add int3 and add mov push rcr aas pop aaa push dec notl int3 dec mov stc jo mov sahf aad js cli jns (bad) aaa imulb cmp add mov ds mov test add inc sub in pop cs imul push xchg (bad) jle mov aad or addr16 jo pop (bad) (bad) sub imul jge int mov (bad) pop push xor sub push sbb out in sbb adc sbb stos push shl push or ret aad fisttp xchg inc jle xor andb mov dec ljmp aaa leave (bad) (bad) pop dec jp dec fdivr xchg and daa or sbb (bad) or lahf cmp shlb test out push in movsl mov inc cmpsl les mov lcall adc jne push out or add pusha aaa and mov mov dec or out lret push or pop cmc or into jp daa fwait add int pop pop mov sahf lret push icebp xor (bad) mov adc mov xor mov cmp pop sahf xor xchg int mov mov dec or xor dec mov add rcll lcall cmp imul (bad) jmp insb ljmp lods insb push mov lea shlb jle nop js and out jbe sub pusha and divl mov mov daa sbb arpl repnz les lods fmul sbb pop jle in clc in (bad) (bad) mov stos push jecxz jp mov and std (bad) lahf dec imul lods adc inc inc cmpsb arpl sbb mov dec jb out fsub add testb sbb xchg add test mov lods enter push cmp mov push out or jl inc gs push fldenv jg push into jnp rcl cmp ss repz insb jl lds push add push outsb xchg jg cmp push mov mov int mov mov sub and lods cmp sbb stos xor mov lea pop mov (bad) scas std mov mov dec push scas cmp inc dec ja jl in cmp or sub jo hlt cmpsb pop jg mov lods mov inc adc xchg jg stc bound addr16 cmpsb cmp (bad) (bad) mov xchg jge lcall fidiv pop aam add (bad) xchg adc lea lret in jb mov jae orl test (bad) mov mov inc mov mov sub out cmc xor pop xchg dec inc imull rcrl shll mov es (bad) mov mov mov fs pusha sbb rol xor or push div or pop fistp sti push rcll adc test xor movsl sub mov xor movswl (bad) and inc mov insl aas pop in rcrb dec and push (bad) in jnp gs mov add std fldcw je cmp push sbb jge adc out push or fnstsw loopne lea jbe mov in ljmp scas dec mov xchg not or ret iret push sbb xor (bad) (bad) stc (bad) or lret mov mov sub call mov shrb jae jns cmp push mov cmp mov lea movsb cli add or mov jge lret faddl push jle mov and loope push jo sbb lret mov lods push cltd testb in fstpt stos fistp stos aaa pusha sub or out sarb enter mov cmpsl (bad) sub ljmp fdivl xchg push std or test xchg out xlat cmp push lods lret xchg (bad) repz sub dec ds ss arpl pop add es ja cmpsb clc loopne mov hlt sbb cmc ror adc add mov mov rcrl insb cli jae stos (bad) add xchg aaa xorl pop add cmp xchg cmc ja imul adc hlt xchg outsl loope icebp fdivs in mov sub in scas rcll fwait pop cmp addr16 adc mov pushf (bad) pop lret jo jb pop loop inc jno jb xor mov pop dec inc add pushf inc repz das mov xchg inc add push dec sbb ja fcoms sbb xor cmp in stos andl js cmp xchg push xor insl and cmpsb call scas test aad mov in dec and test pop xor push fistpll or lods inc or xchg sub int3 push xchg jle stos pusha jbe push xchg nop adc add pop or mov mov jp (bad) ss imul iret mov fnstsw (bad) (bad) js cltd notl int dec repz jo,pt hlt cli hlt mov out (bad) repz out xchg cmp imul inc adc jo mov lods xor bound mov sub pop repnz sbb jecxz in add xchg loopne push daa pop pushl and sub int mov sbb mov dec inc dec adc jae dec loop fs pop sarl in cmpsb inc aad repnz sbb loopne outsl pop mov or sarl and leave pop insb bound js or shl repnz mov adc push add xor mov in adcl enter dec loopne int3 lret mov pop popf sub jbe jns cmp dec pop adc or insl and lds xor imull cmpl ret aaa cmc imul push jae inc loopne mov jmp push push int3 mov std fcoms jmp loopne push lea loopne jle cs xchg jmp ret rclb imul (bad) aam push lds aad aas (bad) enter fs adc inc gs stc xor insl bound mov jecxz (bad) loope mov mov adc pushf push daa sbb mov dec add jno mov fadds lods (bad) cmp fwait mov icebp xor inc scas and jb je inc dec jno enter insl mov add xchg hlt cwtl add lret les adc pop stos les test fdivrs mov adc loopne test xchg int3 push xchg lock lret das addb push xchg lcall cld mov jmp jbe push inc popf mov lret push sub and sub dec xchg and mov outsb imul inc (bad) in pop xchg mov xchg cltd add xchg dec idivl xchg inc jne mov pop dec mov jg cld ret (bad) idivl jmp mov je push js xchg jecxz nop cld rcll mov fs dec cmp push pop movsl out push hlt cs and push xorl shlb mov mov mov (bad) lahf imul popf cld (bad) xchg in arpl loopne ljmp movsb pop dec jns mov xchg xor pop sti (bad) hlt movsb lret mov test stc adc mov pop loope xor pop push ja push sub fcoms lcall (bad) mov (bad) ficompl decl add leave sub mov (bad) div out sti ficom or outsl xchg fwait (bad) jae mov lret movsb pop (bad) sbb int push movsl or pop aas xchg cld ljmp out xchg mov xchg xor xchg lret or outsb (bad) and jecxz mov mov add mov fyl2xp1 sbb push loopne in cvtps2pd nop sub mov dec out mov mov mov mov and xchg jg (bad) or test adc mov inc aam sub clc adc bound pop cltd add call gs notb mov in (bad) push (bad) lahf arpl pop dec or cmc sub loop pusha lock shlb pop mov sub pop mov or and push pusha lods cmp outsl loopne js lahf movsl dec (bad) sbb pop jecxz dec fnsave adc or jg push outsl dec movsl mov add bound pop nop imul push outsb daa inc icebp push dec icebp das (bad) hlt mov sbb out push add aas mov mov test jnp adc sarb insl and fldl jnp mov in pop mov and adc sbb sub xor movb pusha xchg mov and sub movsb and aad dec sbb movsl clc cmpsl cmpb aad loope in push (bad) jne cs mov jmp and dec pop fwait jne insl movsl or pop nop push fistpll mov adc sbb push lds out adc and mov rorl (bad) insb stos adc outsb out mov dec test lds fidivr aad fwait notl cwtl push sbb mov js cmp std jb adc push stc clc sahf (bad) repz data16 add xchg mov fcoms cli test jp jle dec mov les outsl pop push into (bad) out jg fs rclb xor sub pusha adc addl jle out lods mull sbb cmp adc cmp add pop inc jp,pt cmp sub push lock (bad) cmp leave in inc loope add xor push inc popf pop sub test popf imul inc nop push lods xchg stc dec stos js mov nop mov stos adc mov and iret fidivr cmp cmp (bad) in int3 test cwtl mov loope push lret mov dec pop add lret and push (bad) pop lret fs or sti pop std and stos cmp aad pop add test mov pop scas add mov mov and mov daa repnz loope xchg xchg adc or jb xlat mov lret test loopne pushf mov and aas sbb movsb pusha mov mov repz outsb mov xchg shll add movsb xchg xchg movsl scas cmp paddusb jae jnp inc adc lds adc lcall jecxz and push cmc inc sbb leave stc jg ljmp lcall xchg push cmpsb daa and stc (bad) mov (bad) cltd add jbe popl lea jmp lock cmp sub adc lret out jno loope mov in jae or or push pushf mov outsl (bad) xchg adc aaa cmp lds add ret jg mov imul push cmpsb repz jmp mov sub inc out mov xor clc mov mov ret add mov mov jnp int3 jns js dec popa push jmp popf jbe (bad) jmp fnstcw pushf or orl push test adc and (bad) pusha test mov adc sbb add jo (bad) (bad) popa pop jae mov or lods dec xor jge int jnp fcompl icebp dec sbb fdivl sub dec xor insw mov or pop jg,pn xchg add mov addr16 lds pop sub roll icebp or and xchg cmp or movsl sbb out test mov inc or xchg xchg int sbb cwtl jns jb and sbbb mov outsb sti pop mov addr16 fdivrs jmp push (bad) or (bad) aam lods push dec pop or cld lods dec rclb or inc ljmp push xor popa pop (bad) aas fs pusha inc cld ret pop (bad) cmpsb or adc mov mov adc mov sbb loop inc or pop loopne pop pop pop cmp push jge ja and ret movsb idivb dec inc inc sub push add icebp lods push addb xor repz and push add mov xor xor mov sub les dec jb mov mov or pop in int insb mov repnz (bad) dec repz pop mov xor punpckhwd pop push insl mov lret push leave jmp dec loope adc sub fs push int std (bad) (bad) push add sub adc or jbe clc xor or push lahf push adc jmp fidivl repz dec insb xchg jns scas add call add inc out aam xchg orl and mov or inc cmc push pop adcb out push imul or jge dec jnp test call push fcomps add leave push mov adc dec dec jmp aas inc jmp or push adc push xchg jno jne adc enter pop daa movnti arpl movsl cmp sub ss imul jb push ljmp add test gs push lods sub push out movsb or outsb popa mov aad cmp mov mov neg stos or sbb lods adc xor sarl push pop push jg daa pop adc fldt lcall mov das movsl jne imul stos cltd arpl lahf rorl out loopnew fstps push ss or add idivl test xchg int arpl call repz jno xchg and cs cli cmp popa pop or push dec push cmpsl icebp cmp push idiv in or repz fst aas cmpsl lcall and clc xor (bad) mov cld outsb push cmp fwait inc inc (bad) push js dec cmp sahf insb fnstcw das jg mov cmp xchg add in sbb sub adc xchg mov mov fwait mov mov clc iret leave data16 fsubrl jge xchg popf (bad) xchg and push into mov or popa inc jg pushf jle fildll rcrb jecxz mov test jne fdivr repnz sbb mov mov mov mov imul test lock push pop adc repnz push or fimull out mov cld fimul mov pop jne adc adc ja fadds xchg shl cmp out out mov mov or lods fs and jecxz gs int sub sbb mov add xor cs and fldenv ja (bad) jnp dec or mov (bad) stos movsb popf inc sbb xor xchg xor jo adc lock jae sbb inc ljmp ja std decb sbb or add and push cs pop and out jns xchg xor push into pop or or push pop fnstenv mov pushf adc shrl dec jae fsubs rorb (bad) ds pushf rcl sbb pop mov fnsave dec ret pop lds inc loope sub lahf (bad) fsubs arpl cmp stc xor in mov mov mov push and and mov xor mov dec int loopne cmp mov mov divb pop std mov enter inc xchg pop dec out sbb es (bad) clc cmp aaa inc mov out lret outsl cmp call mov test fs cmpl xchg mov lods es call xchg and pop (bad) pop inc (bad) xchg mov mov and add js,pt jp mov or mov loopne sahf insl aad fisubrl adc pop mov cmc repnz test or pushf (bad) jne outsl repnz jb and mov jne xchg adc push iret pop push cmp jp and mov popa loopne ret jmp lock pop std inc lret xor mov repnz test add aaa insb pusha lea jle pop pop test jmp imul dec push add scas test dec or jp out mov mov inc fs pop sar cwtl cs stos mov clc add mov mov leave stos fisub push int3 xor lods jle jns mov int3 mov ficoml sbb inc stos in out notl jg (bad) cmp adcl jne in pop fldl adc jge in sbb int pop js jbe or stc cmp stos cmpsb repz xor fldcw jl mov ret xor imul jecxz mov adc gs enter cs sbb sarb icebp push jno scas fst aam (bad) adc push sbb inc sbb lret mov mov or pop sub push mov inc lods lds mul pop add cmp mov dec movsl lret aas inc (bad) vunpckhps adc fwait pop mov sbb pusha lea out xchg gs orl into inc pop pop mov icebp clc lcall mov int int3 mov sahf mov push mov pushf aam ljmp inc decb mov ret fdivs ss xor dec in xlat addb jnp mov repz clc push cmc repz lret jae push and js inc sub cmp cli dec loopne jnp scas dec add pop les (bad) or and pushf or je cmpsl mov dec inc adc xchg ds add cmp jmp mov bndstx stos sbb push adc jnp dec dec jmp inc ljmp sub pushf sbb sbb popf dec out out inc cmc push cmp mov mov fwait and sub mov (bad) pushf mov pop jo popf loop jns lahf jl loop cmpsb push jb out data16 mov fstl lret xor or mov les fistpll in mov lahf jnp iret stos jecxz inc js jnp aam pushf mov push pavgw popa sub fdivl (bad) lea mov leave pushf lahf dec ret lock mov xor mov inc mov or mov jl push jp insb pusha pop (bad) mov imul std jb add pop out xor ja nop and sbb addr16 fisttp dec ljmp sti xor lret pop sub mov (bad) neg sahf (bad) push int3 mov test sub (bad) outsl mov cmp add cmc mov jg mov (bad) (bad) lcall rcll xor lea iret mov fisttp push cmp imul fcomps bound adc shrb jmp sti (bad) sub leave ja fbld out loop xchg jb lahf inc sub or push dec out inc dec fchs and xchg rcl fcoml cmc dec mov pop into out ffreep inc loop inc dec adc rol xlat or or mov in mov dec or mov insl cmc idivl (bad) push cmc xor or sub in (bad) cmc mov fistp (bad) icebp pusha xor inc xchg inc daa cmp inc mov lods sbb lcall dec lock pop and pop addl xchg cmpsl add and (bad) mov push xchg pop fsubrp or sub lds mov jbe (bad) and fstpt lods scas pop cmpsl inc dec imul push pop clc mov js mov push mov jp rcrb stos jp mov lock add add movsl jl sar adc jmp sbb imul rorl inc movsl dec es xor jg or (bad) icebp push and jmp sub stos dec push repz scas ds mov sub pop in cs bound movsb sbb mov stos test and fsubl insb push pop adc mov inc xor mov pop aas sub xchg fisubrl jae mov ljmp pop push fsubrs adc xor sbb xor add jp cmp jge dec or loopne xlat ds inc cmpsb and cli mov out jb inc (bad) lock xchg clc adc and cmc sahf dec sub push stc lret ja ss xor xchg inc fdivrp jmp test sbb insb iret in cmp (bad) mov jae fiaddl std cmp lea int mov xor fwait xchg js int3 cmpsl lock mov mov (bad) decl popa inc ss dec in ja mov (bad) push inc mov xor mull or add cmpsl fild outsl int repz mov icebp xchg cwtl int3 jp in mov out jno mov inc cmp cmc inc mov push jne loopne cmp cmpl js popa xchg sub out push outsb lods cmc les gs or dec jo cmp orb jne js fbld cmp xor (bad) lods xchg mov mov rcll xchg xchg sarl out test dec mov push push imul fnop push cmp add cld cld mov inc hlt repz and jp mov cli xor imul sbb lcall mov jecxz (bad) push jns pop aam mov mov lahf call jle clc mov (bad) cmp jg push outsb outsb add ds in jbe sbb xchg dec mov mov add mov lahf mov dec call loopne dec add push pop or add loopne sar sahf (bad) mov in pop jae pandn sub xchg sub and pusha and inc (bad) lahf xchg aad xor mov rolb mov cltd pop icebp jne cmovo cmp push scas xchg scas and or (bad) (bad) outsb pop cmpsl push std or jl xchg outsb mov xchg xlat lret lahf stos cltd mov pop scas mov add insl mov jns pop or lds xchg outsl mov xchg mov adc pop jns das jne mov mov lret rorb adc sarb dec ds xchg ret ds mov sahf fild dec mov or fcoml sti scas popa xchg xchg sti lahf cmp xchg and or cmpl and dec jmp mov xchg pop ds inc hlt mov inc je in imul sbb rolb sub aaa fnstcw add push nop push sub xor xchg mov mov lock add cmc inc lods pop (bad) sub mov test and jbe,pt jmp lods loop ret or mov ret ja add push and or sarl and (bad) icebp add push xchg (bad) hlt pop add mov sahf lea mov lea sbbl (bad) dec lret sub lds pushf push jmp push mov das or sbb inc aas fild pop sub enter ffree cmp das pcmpgtd dec xchg xor dec out sub mov sub add int3 shlb adc pop scas or shr inc or lret cltd push xchg movsb popl ljmp jne mov addsubps cmp push fbstp jp and std add cmp es mov movsb mov add and push movsb sub add or sub pop inc fimul shrl xchg xchg cmp addr16 sbb dec sbb inc add mov lcall mov fwait push push daa mov sbb sbb xchg sub xchg scas movsb pushf xor pop dec fstpl lahf dec (bad) lods xchg insl (bad) inc or dec pushf dec xchg pop pop cmp (bad) mov mov dec gs movsl adc sub dec pop cmpsb mov imul stc cli add gs mov sub xorl xor dec aam arpl inc push insb push (bad) cmp add stos adc lret cmp int3 xbegin sahf loop add mov idivb test add (bad) fidiv andl lahf jae je test adc inc and fwait and inc push xchg data16 loopne push cli aas rcll sbb out stos mov jge xor fldenv xchg xor mov lea icebp aad xor sbb mov sub jb sbb cli jae sbb pop iret jns (bad) fcoml inc adc jge ror adc xchg icebp into mov xchg mov movsl je and popa int3 fild mov je xor or into sbb cmp fimull fldenv (bad) loope xor sarb fwait pop pop rcrb fst fnsave inc and jg push sub and sbb pop push jg fwait imul fwait cmpsb shl leave jns sub lods push repnz fistp movsl data16 mov adc lcall mull xorb jae cmp ds or stc fs jl ss andb or out scas andl lret adc jno push loop ret sbb lcall add mov jno and mov int xchg push jbe mov stos dec push insb cmp ret push aam inc in xor add mov cmp fisttpl pushf (bad) stos jae in imul mov and notb xchg mov xchg imul in jmp mov add adc js sbb mov mov mov push push xchg mov fmul into xchg sahf sbb test or and imul jae fdivl pop jle test push adc inc xor fwait cmp xchg mov mov mov xor fdivr sub repnz cmc adc lea xor sbb inc xchg clc dec adc push sub out push call push (bad) (bad) pop xchg aam and fldl das and call ja add mov subb loope jb or les rorb (bad) (bad) fistpl ljmp xor pop cmpsl not dec adc decl test loop dec add or push mulb jp add out or jmp xor inc and sbb aaa mov (bad) call add inc adc dec sbb idivb cmp leave jne cmpsl imul fild jge fwait sbb cmpsl adc test push pop mov stos or cmc fwait pop fistl (bad) scas add leave imul add or out xlat push sub test cmc ja gs test int icebp popa (bad) push (bad) mov mov call aam pop or fldl stos jge xor lret pop in fldl incb sbb sar ret insb (bad) or add je ljmp and (bad) xchg push cmp repnz loope cmp (bad) sahf jge mulb incb cmp cltd pop mov jne adc mov add (bad) hlt push pop mov in push cmpsb sti lret lods sahf sub lahf rclb sarl pop aad orl clc fbld mov lret push xor inc lock (bad) xor pop dec sbb loop and inc in xchg enter inc bound pop lcall cmc push fiaddl in xor jmp xchg stos pop ds test mov lea jl inc mov fisttp dec push mov daa mov sub stos dec push les imul cs mov (bad) stc aam push or incb mov aam mov xchg adc and xor dec daa xchg adc sub pop push aad jmp jmp mov mov push jae test fldcw mov sbb sub adc mov pop test mov test fildl ljmp pop insl and call rcl lahf movsl xchg fidivl imul pop jmp ja (bad) xor push out xor add mov or cli (bad) dec sub (bad) (bad) mov jle mov sub (bad) mov cmpsl pop dec xchg xchg lods adc iret lock add ret outsb std pop jmp imul push mov sti mov mov mov dec add scas jecxz fldl or movsb cmp jae mov push ja mov push in xor sub ret mov aaa dec clc adc mov jo mov push inc adc ljmp jne lcall (bad) jle (bad) pushf orb xchg in mov bound sub leave out sub xchg push dec mov idiv nop jae sarl loopne nop xor aad les sub in mov es inc out xorl stos lods outsb movsl mov inc push mov pop adc in jns int mov sub enter bound xor fistl notb clc rcll cmp fwait outsb xor xor das mov push repz in dec xor inc imul or jae inc hlt dec mov cmp sub es mov sbb pop cmp enter push or cmp mov rcl xchg inc or inc lret loope pause add xchg call jmp xchg xchg not sbb jecxz inc test xor inc test (bad) movsb sahf and mov dec lahf adc (bad) (bad) bound rclb imul sbb scas pusha mov push fmull jg and imul pop mov js cwtl xchg popf sarl in xor (bad) popf cmp sbb in pusha jae (bad) negb pusha rorl call test out rcll rep mov test into daa sub push push in cmpsl (bad) dec inc (bad) jecxz jno js xchg fnstsw cmp xchg cmp test and jb pop sbb out (bad) adc fwait xchg lods cmp adc inc repz push pusha pop push sbb rorl sarb (bad) jno lds fwait rcll mov mov cli cmpsb jb sub jbe cmpsl mov mov mov dec faddp xlat inc outsl (bad) xor lret cld mov push fdivrl push cmc jne lret ret jno les push jmp call les mov pop pushf enter hlt xchg pop adc movsb pusha mov setl push xchg add popf sub xorb outsl inc or mov cld movsl into mov mov out sarl or data16 into fwait xchg mov ss inc sub dec cld dec xchg loop (bad) (bad) push cltd inc aad cmp mov jae pop gs clc fnstsw mov jge push inc jns repnz ss push int3 fldenv xor jnp sbb inc mov jnp xor fdivp imul sbb sub cld xchg hlt jb flds or jae pop test jne std cmp popa mov sbb dec inc outsb sbb fistpll mov aas jl sub push sbb stos (bad) loope sbb sub andw aas mov sbb dec adc fsts pushf pop in out std (bad) and cmp fldl dec xchg addr16 jns jb jle add push movsl cmp fdiv mov in scas pop repnz adc aas mov or cmpsl sbb mov jecxz jge sbb cli pop cmpsb and rolb daa mov mov repnz les lahf jmp lods pushf adc jl push mov loope mov (bad) push (bad) cld sbb mov inc test xor push mov sub jmp loop push mov sbbb ffreep push ret xchg jl add loopew mov mov inc mov in loopne adc or sbb jbe xlat jle cmp push adc rolb es stc xor inc (bad) out sub pop sub pop mov dec pop push cmp arpl popa mov pop lcall sarl (bad) mov fildl cli frstor cwtl add cmp sarl xlat inc jle mov fstpl or push jge shrl dec jno mov out inc dec or fucomp outsl ss adc popf inc in jle and mov or xchg add aaa mov cmp push mov das loope jg cwtl push xor or shl push push fadds mov push pop nop xor into push loopne dec xchg int3 or shrb std adc mov mov xchg dec adc adc fs jle arpl aam mov jae sub sbb imul or jno mov hlt cmp xor mov xor xchg add daa stc shrb push cmpsl inc sbb cmp out push pop jmp testb jnp fistp or push out arpl mov insb jmp in push mov pcmpgtw or lahf ljmp scas repnz add xor jecxz mov push lock mov nop xchg fistpll pop push xor in popf lret ret dec js cmp add push bnd and lcall stos pop in (bad) lret add and les xor mov (bad) adc stos xchg scas sbb jmp mov cmp das sub nop push push fnstsw cmp into dec pop pop ja mov in loopne cmpsb loope rorl jae adc and push clc insl lret adc jge or lret outsl in pusha xchg mov mov popa packuswb jecxz sbb les or xchg movzwl pushf loopne sub pop lock sbb sbb aad fwait movsb dec xlat insl mov fs dec xchg push sub or xor (bad) sub cmpsl mov inc repnz pop call xchg push pop pop orb int dec cmp movsb push add and add or lea int3 outsl je xchg adc sub scas cmp out add push jmp push mov ja xchg mov icebp ret sub adc out jae test xor jno and xchg jne push push cmc mov inc sti lahf sub or inc aaa mulb push popf repz loop inc dec out lahf sbb jb out and push (bad) imul in cmp xlat test js push out popa insb (bad) inc arpl enter mov insl xor mov mov inc sub cmpsb (bad) sbb iret push jno outsb ss (bad) scas mov cli mov cmp jbe xchg adc adc add push xor mov stos mov rcll cltd mov fs movsl scas jecxz bound dec xchg repz or imul push push dec cmp dec xchg sarb je insb push mov test mov mov mov ficom xlat cmp ljmp jge add pushf aad mov sbbb push fidivl mov and xchg fisttpll iret aam std hlt nop out outsb jle mov test and sti jl cld xchg and lret sub in ss inc xor fnstenv xchg jnp loopne cltd and mov pop inc add aas or out mov xor insb jbe cmp xchg cltd push popf out or out arpl (bad) pop (bad) cmpl in adc les sub stos les sbb ds adc mov test jl (bad) dec jbe fistl mov inc mov rcll in dec lea setae inc (bad) or or push mov test pusha add mov lea enter mov nop das rorb roll pop pop dec scas fnstsw test cmp dec push mov mov jge sbb and cmpsl dec pushf lods sbb sbb rolb add mov or bound mov icebp pop clc sbb cmp push add mov mov cmpsb adc adc dec sti out in repz fisubrl xchg cltd and sahf scas roll xor cli push sbb lcall subb adc out loop sbb pop fmulp leave dec push pop adc xchg jnp and lahf push call dec push adc or xchg xchg mov xor insb push (bad) imul jns loopne repnz add scas mov jbe dec (bad) cmp sub xchg mov pop xchg sbb call push sti insl dec (bad) in push rorb imul aad mov jle dec ret ja in es arpl xorb enter xchg leave pop push jp lods jbe (bad) dec ds testl jl cmc mov jb andl mov data16 inc sarb mov mov sub sbb shrl test das icebp fs fisubl push fnstsw (bad) pop cmp test ljmp dec mov add fadd inc sub inc pop jg dec mov popf icebp fmuls subl dec pop out pop dec test dec scas aaa daa dec push pusha sbb pop adc push adc fnsave and stos lcall in pop in xchg cmp pop pop daa pop adc fild mov xchg and mov (bad) xor lret sbb test or pop adc fprem pop mov out lret add das mov sahf dec push and or popa xlat ja imul lahf lds inc push iret cmpb fxam (bad) pop data16 mov call pop cmpl into xlat jg dec cli leave jne sub in mov add into mov fcompl fldt pushf fwait mov dec inc dec test aaa jne dec std (bad) mov aaa ja fs and push out popf mov pop js lds (bad) in ljmp add out push gs mov push fstps daa inc jle xchg addr16 imul nop cli sub xor out xlat clc out pop xchg aaa mov (bad) mov test mov or sub add sbb insl pop pop mov xor cmp fistp inc fist mov insl es pushf push mov inc inc loopne fmuls pop or mov in fs mov mov (bad) fdivrl js mov jmp pop sti inc sub xor inc rcll out movsb jb int3 jmp dec insb mov xor pop insl xchg push and pop outsb push loopne in cmp mov and popa push pop jne sbb js dec es psllw ror sub adc mov call push pop dec ret push lods in mov aas mov outsb mov jmp pop arpl int3 lret mov out adc xor or or jo inc ret mov xchg mov movl ret lea push nop jb je pop cli cwtl (bad) fwait inc push sbb pop movsl jle ja mov mov icebp int sbb xor adc push and jns pusha call jnp dec xchg jbe push addr16 xlat jnp dec xor xlat clc addr16 add insl outsb (bad) (bad) and icebp sarl ljmp and jecxz sbb adc adcl pop sarl das ret push pop cmp imul inc icebp aad lret std adc movsl push ss movsl jmp mov mov dec adc push push lock popf nop loop insb in into sub stos push ret aam es add mov mov dec or mov outsb cs push fdivrl push das mov push sbb outsl (bad) hlt fcomps popf jb add jnp inc mov push add mov pusha sbb arpl cld fistl sbb adc push or data16 movsb arpl pop cmp and mov subb dec adc arpl fwait jmp add (bad) cmp mov and or inc jle (bad) add out ret imulb cvtps2pi mov gs jecxz cwtl or ror rcrl or cltd test and mov pushl dec mov into or fsubrs jae inc mov xor mov (bad) adc mov jae arpl fsubs xchg push mov stc out push or inc fsubrl and jmpw sahf or or and xchg adc (bad) cmp lret lock mov shrl imul cs gs mov inc aad aaa pop mov pusha sarl lfs xlat inc jge mov cwtl jmp sbb jecxz adc (bad) mov es add mov or cmp xchg pop mov lret xor push adc andl adc andl pusha jle mov subl subl mov push lea pop gs cmp clc scas mov and and adc xlat mov mov rol loop mov call inc add pushf xchg loopne repz rolb pusha mov mov mov mov mov cmp out mov das popa pop dec dec outsb ret inc xchg fwait sbbl pusha imul jbe into sahf leave add adc lea int cmp pop js repz test xlat cs outsl js mov xor mov xor in ret aaa mov jmp lea add sub and int3 and dec pushf add add shl mov call jl adc or call rolb sbb mov pop daa mov push adc orl enter add out sbb sub pop mov add adc ret mov div push aas call xor mov ljmp (bad) cmpsl data16 or sbb test push push imul pop xor nop mov fs stos stc pusha jne mov rcl or cltd repnz out cli push iret imul fdiv add loop and cs lock stos cmp dec lods xchg cmp in movsl test enter lret cmp pop push push loope dec lcall pop adc sbb mov movl rcr lahf stos testb arpl scas fimull aaa inc lds repz or push xchg sahf arpl rorl jnp icebp ret cmp add daa mov cmp push pop xor push sub mov pop mov (bad) shlb cmp (bad) sarb ja jge movb nop pop gs push jae sti sub mov push pop outsb pop test xor xor hlt xchg jg or mov inc dec add lcall mov repnz fldl addr16 fidivl push jne xchg add fimul stos and mov sti or jae (bad) mov adc jns ljmp cmp lahf dec out hlt lret shll inc xchg sbb outsl fistpll insb rorb and popl add icebp pop testl pop cmp fcmovnb movsl dec jae scas out mov add mov mov fs sbb icebp movsl cwtl (bad) inc cs cmp mov mov cltd stos mov fwait out lods in mov sub cmc test sbb inc inc aad popa js call lahf paddw inc mov pop jnp mov shrl cs jp dec ljmp adc pop pop pushf jnp push dec adc (bad) ljmp inc xor sub pop repz xchg dec (bad) mov cwtl or cmc add jns adc icebp jmp sti sub in adc mov xlat cmp jl movl xor addr16 mov shll mov stos sahf cmc lret aad xor or stc js add inc mov pop sbb xlat mov cwtl cmp notl imul jg int3 imul dec popf scas pushf push (bad) pop xchg imul in imul fidiv jg ljmp jl adc cltd cld push in int3 in mov push dec mov (bad) mov fist sbb cmp mov mov mov push jno les xchg pop or gs lret mov mov scas stc inc and pop adc pop sahf (bad) fisub imul outsb mov push dec notl xchg mov test xchg xchg push int fwait sub ljmp (bad) jbe aad cwtl push adc loope and inc cli ficom or cmpsb aaa adc (bad) negb or mov lcall and insl loopne cli aad inc ja scas mov or xchg push mov and xor flds jg or mov adc mov (bad) or mov or mov xor inc into xor imul ss jg xchg pop aaa out in mov ja sub push mov mov aaa stos adc xor ret gs inc test int3 mov xchg push jae jne fisubrl add fdivs nop imul adc mov cmp push lea je xchg pop mov ja mov xchg (bad) xor ljmp fbld scas lock cmp fsubp jbe dec fldt into xchg lea add pop cmp cmc leave outsb mov xchg rcll pop cmp dec xor dec rclb jg jnp cs (bad) ja push enter pusha mov jp js cmc in inc aaa mov movsb push mov fsubs or das push test jmp mov sbb outsl aam sub push sahf mov sub push enter pop mov xchg sub arpl cld mov aad mov (bad) jo ret in pop loope mov nop out or xor push xlat ret test cmpl hlt mov xchg insl popf xchg sub mov jns ret mov leave push test sbb or xchg mov pop popf inc in jne push (bad) lock mov push js loop (bad) aaa push mov cmp xchg ds jecxz sbbl rol loop aad test mov inc dec pop clc idivl adc aas adc jbe push push jp mov mov sub iret jb,pt es lea mov lret (bad) ficom or lret pop xor imul (bad) fild pop adc sub (bad) hlt sahf pop xchg lock push in roll leave arpl mov sub das cmpl stos daa rcr jp,pn mov stc xchg push cmp mov aaa (bad) xor push xchg lods mov pusha incb lods push mov xlat es xchg test push movsl xchg (bad) sub ficoml xor jecxz adc adc lock cli sbb ds ret cmp mov adc jp sub repnz mov sub ss xor roll ljmp data16 movb in dec repz in jne and (bad) cmp or call fisttp sti das pushf xor jne aad scas movb pop or mov and xchg mov lock mov inc cmp xor or test test cs fadd sbb fwait cmc lods jle (bad) call jl dec jb cmp adc push (bad) dec aad and js add aam mov jmp ficomp stos pushf outsb (bad) or cmc inc movsb sbb mov adc mov mov pop adc inc mov pop inc in ja fstpl pop cmp scas daa cmp out inc aas jno lods mov sub mov inc int (bad) fnop (bad) lds dec push int3 or movsb clc cltd js pop sbb sbb int3 fcmovu and xchg (bad) int3 push ja sbb sarl jmp ds push pop jmp test aas fcompl scas in xor jo cli mov jne imul lods js and aam (bad) hlt xor xchg rclb gs (bad) adc mov adc aaa rcrl mov dec jnp lods add xor fistp fcomip xor fildll jmp loop sub stos stos daa inc mov sub jbe cli popa jge stos rorb inc mov gs pop fadds mov cld imul sbb enter int mov lods dec add (bad) iret cmp add ret repz and jle jnp outsl add mov fmuls add lds pop cmp and je sbb push mov movsl ret cmp pushl in or int3 cmp hlt or stc cmpl andl sub sub mov xor mov mov clc xor mov pop or adc mov fimull mov sbb xor adc mov je xchg inc ret and push add mov and test mov and movsl pop pop jno loopne mov ds mov inc cli lods ss (bad) sbb inc gs popa lahf rcrl fucom int3 xor out ljmp xchg sbb orb outsl incb adcl mov dec inc pop mov clc xchg xchg sbb std inc add mov js outsb in pop fxch xlat cltd jnp roll repnz ljmp jo mov loopne adc cli jp xchg pop out push and mov adc rorb movsb jle mov jae jb mov dec pop mov test push sub addr16 and xchg xchg aas lret sub xor scas shlb sbb popa and and jl cmc js cmpsl ds cld call aas repnz mov or add adc push testb fsubl mov bound xlat adc jle clc jp loope pavgb jnp fs scas inc jne dec iret ss xchg sub lret mov repz adc and and in mov pop inc lret xchg into insb std lahf pop sti adc test shlb pusha pusha jne inc leave enter ret in mov cmc fistl jmp sti push (bad) jo sbb pop jg loopne mov out lods jb sub add mov mov in popl fistpll xor jne and jno stc pusha or add sub std xchg sbb subb or sbb xchg xor xchg sbb outsb mov jge insl imul mov mov cmp imul bswap mov mov lds std sub fcmovu adc adc fmuls pop mov sti lret notl add daa and imul cmpsb loope cmp jge push insb repz or aaa sub push es inc int3 lods movsb sub orl sbb rorl outsb and aas andb dec lret dec inc lcall cmp xchg frstor dec out jae mov pop cltd aas and cld (bad) test incb jbe test mov (bad) jne jle adc jg sbb bound mov iret arpl shrb lcall lcall pop (bad) jnp mov push fist sahf xchg daa push cmp xor lds push into stos mov add or cmpsl fxch sub mov std repnz out cmp movsb icebp push sbb cmp dec cwtl xchg sub jmp rcrw mov lods xchg insl idivb lea (bad) and xchg push jge mov int3 sub jo cmp xchg (bad) jno xor je insl out pop add xor sbb and mov jne bndstx ja jle cld ret lods flds pop fdivrl sahf data16 or mov ret inc arpl loope mov cmp movsl cmpb in dec pop push inc faddl add cmp sar sub enter (bad) xchg mov cmpsl popf scas lret xchg or lret mov mov shrb jne ss pop and or mov scas pop cmp lods int3 xor sub push dec cmp xchg subl sub iret popf rcrl test mov push dec insl sahf push pop fstl jb and xchg inc in gs test push cmp ret cwtl xor cmp fiaddl dec xor jl add lock mov out movsl aam mov add dec lods mov add add inc or add (bad) jle sub mov mov int cmp push insl sahf (bad) xor les fwait mov add idivb mov push dec fild aaa sub mov rorb notb icebp int3 icebp mov jp or mov fldt xlat ss (bad) mov inc xchg push daa iret sub adc jne rcrb imul mov sbb push (bad) mov loopne (bad) imull call fs push loopne jg daa xlat push les push negb mov mov in pop push cltd add mov mov flds rcr cmp jns aaa in fdivrs and push fldcw test cmp xchg and loopne adc (bad) js sarb dec outsb std cmpsb dec mov inc outsl pusha sbb push mov add inc xor push jecxz (bad) jo es adc mov and mov mov inc out bswap leave adc inc and das mov pusha and jne fmuls leave ds adc test jle mov das imul arpl in call jp cmp out out xchg mov sub jg push jbe cmp out icebp andl into ss add sub repnz aaa push aad lcall int enter and daa inc pop xchg push test hlt jae mov jg push es mov jle fwait adc mov ret pop je movsl mov into lahf call iret mov and jns aas sarb cmpsl (bad) movsb mov xor mov jmp mov sbb sbb inc pop xchg stos popf pop mov imull aam lret (bad) cmp mov and mov mov fldenv or dec loopne push add and pop cmc bound out mov sti dec leave push add popa mov adc mov lcall mov loop cmp ret scas add and dec dec clc add dec sub xor mov mov in mov pop cmp in int3 jns call fcomip lea or sub stos imul mov jns fnstenv inc push mov rclb fs cmp push jae test pop cli sbb imul das scas das out mov ficompl test sub sarb jo pusha cmpsb adc pop pop subl pop xchg xor jbe xchg xor pusha arpl add ja dec add sub out cmp sahf inc mov (bad) sahf mov pop mov cltd lret jb cmp or aad push and inc (bad) loope push out (bad) jl cld fildll imul pop ljmp adc xor push adc outsb stc push outsl fist rorl rcl (bad) or clc mov and daa mov in xor decb or pop adc lahf push loop inc jnp mov int3 sub mov scas adc and shlb ss fcompl out hlt popa pop xor inc mov out outsl adc notl xchg loop mov (bad) and inc add mov test xchg dec fsts jecxz ja and sbb not rclb push fwait popa mov jge cmp push pop and inc push and fidivrl int mov xchg pop cmp stos jns push (bad) (bad) add iret pop xchg push idivl jl adc mov sbb jg cli sahf lahf mov xchg (bad) pop mov sbb outsb inc pop sahf ds pop scas jmp iret movsb push jle xor pop jno call cmp test xor sbb add iret jb stos dec aad mov pop adc arpl mov adc fistpll outsb fidivr into pop std (bad) icebp mov mov jecxz mov enter push fidivr xchg fsubl decb notb xchg lods jmp and mov pusha insb outsl cmp xchg lcall cmp in mov xchg popf sbb jno (bad) pop mov cli jnp fwait (bad) jle sar sbb jnp and jmp sub mov jns sbb pop in movsl jmp xchg int mov rcr cmp sbb aad mov mov mov cli push jb sbb xchg aaa fistpl and fiaddl fisubl neg jg mov jns or add aas data16 pop std mov sub xor lods jno xchg adc push pop mov lret icebp aam sub cwtl push or mov mul cltd push mov outsb and jp repz inc cmpsb fstl ds in push int3 adc push fisubl aam adc fistpll aad mov pop and mov push rcrl mov call pop aas insl push push dec mov xor lods and inc jg mov sub or push pusha jecxz (bad) jle sbb (bad) mov jnp inc das push or and mov in push jns push pop les dec test loop (bad) aam or dec dec pop cmpsl and and push aas fdivl jge dec xchg (bad) inc data16 movsl out and push xchg push shlb ss jbe sti (bad) mov add xchg mov sbb cmp fiaddl and addr16 inc push jae in cmpsb dec pop jno pop or mov inc pop arpl imul (bad) fnstsw repnz (bad) mov add nop enter test addl mov cmp loop cwtl ret jg aas xchg nop ret scas pop adc icebp mov out xchg inc insl push cmp cmp xchg add or adc mov xacquire adc jmp into cmp push mov cmp adc sarl test mov xchg loop movsl addl xchg insl int3 (bad) das out push and inc jl sub xchg in jno push inc (bad) push mov adc xchg adc xchg hlt cmpsb jne push ja leave mov sub pusha das fwait shr or jbe sti cld ret frstor fldt int out inc jb mov and (bad) out (bad) (bad) cli data16 jp mov outsb rolb int3 mov shl dec pop sub daa (bad) (bad) jle cli imul fwait adc xor jnp fiaddl jo xor ret in enter aad or jge mov (bad) fwait xor fistpl fbstp cmp mov rorl mov rcrl lock js stc test and add cld sbb pop dec iret inc xchg scas jl (bad) lcall mov scas loope clc adc inc inc inc mov movsl lahf aam dec xchg dec mov pop mov gs sub dec int mov (bad) cmp inc or push cmc push xor push sub mov push repz dec xlat pushf ja cltd sbb in mov dec mov jnp ja add dec mov lret inc scas scas pop sub icebp xchg mov push or push jmp fdivr cmpsb xor lret jmp jbe dec push clc int3 orl fstpl lds jmp (bad) pop dec and fldcw mov xor daa push call cmpsb (bad) addl arpl enter test data16 mov and ficom decb sbb gs add xchg das jnp (bad) pop dec sbb jns mov scas inc inc lods or (bad) xor lds call das negl pop mov inc cmp inc or push pop es lret leave idivb (bad) arpl test lods inc xchg mov xor flds dec inc es adc mov or (bad) shrl sub mov movsb pushw das mov (bad) je cwtl mov mov lock sbb adc xor ljmp out into addb out add mov vpackssdw call arpl fcmovnbe sarl add out aaa sbb xchg repnz mov aas push addps dec pop ret jae dec inc sub repz inc imul push ja lcall in pop nop push rcrb stc inc adc clc int3 cwtl imul dec lret aas xchg push sbb and je fs lea xor adc std jnp mov int mov inc pop cltd mov inc into mov dec cmp push jo mov jns js jne mov mov mov mov and inc add xchg aas cmp (bad) mov int inc call adc dec jb leave add pop dec jge int (bad) scas add enter mov movsl cli fdivrl push in in push lcall mov repz mov pop push jp movsb pop add aad mov jl test outsl mov js pop xchg mov xor outsb out test leave xchg into jmp sub ljmp lds hlt add mov dec push push orl push fist scas outsb in cmp lcall cmp scas xor or pop je and jmp imul adc mov in mov rolb lahf mov mov cmc and cmp ds pop pop dec mov shll push loop inc bnd pop or loopne insl (bad) (bad) adc xor jle nop (bad) mov push rolb rclb es andl mov pop inc or jmp mov mov outsl push pop lods adc dec fs xor xchg fwait inc mov add xchg and scas in std jns push xor xchg jae or dec or sub sar cltd mov inc sbb jp stc fmull jle xchg sbb (bad) (bad) dec mov mov jo pop mov sbb jb fwait and rcrb cmp outsl (bad) ja adc push and scas cmpsl decb sbbl inc adc add loop adc leave add lahf adc adc icebp mov and dec dec cmpsl and jp jbe ljmp jo ds icebp imul xchg loop jb bound (bad) cmpsb gs mov pusha loop cmp int and mov lea push lds pextrw mov lcall pop sbb sub sub cmc push adc fstpt test inc sub and xchg lds divb pop sahf push daa in cmpsl push cmp (bad) iret sub adc mov and xchg dec test or fidivr mov jp sahf lods stos xchg mov popa std xchg lret cli jno sbb clc insb imul dec lds (bad) pop imul stos cmp or frstor cltd mov aas test mov aas mov jp sti repz imul adcb loopne aad push jb pop push ds xchg js add add cli das adc inc pop or push inc addr16 lcall ss aad nop cs mov jmp mov jecxz arpl and sahf cli test sarl ret sahf imul hlt adc aas repnz xchg mov xor jge jno jp in jno hlt shr sbb mov cmp jecxz dec das into xor mov sbb daa add mov mov mov add enter (bad) or roll rorb in stc inc movsb or or aam mov pop ljmp (bad) push rol mov xchg sahf mov dec je push xor jno rcrb sub add cmpsb mov sub sub bnd push mov test fidivrl ret dec pop pop cmp inc insb pop jmp mov push push push icebp adc orl dec xor inc lret pop sar je loop mov xchg mov jge xchg lods ret xor sahf mov mov adc and test cs push movsb sti (bad) mov aam les or mov add je xchg (bad) leave gs popf imul adc mov inc mov xlat fs inc mov sbb popa movsb cli or jne push mov sbb cs xlat fdivrl push push mov shlb sti xchg in lcall pusha lods int aam adc lret pop in xor jbe sub push pop push xchg out jbe add or sub cmp adc test call lods (bad) inc mov maxps rcr into test int insl rcrl stc cmp test add (bad) in lds xchg mov mov jno adc in shll (bad) push push xchg jne sar mov out lret cmp pusha sub pop and and test pop add loope xor pop or dec xchg mov push iret mov aas test add adc mov cwtl and mov xchg mov pusha ret sahf in inc sbb pop popf enter icebp insb jae adc jnp jmp jo jge mov addl mov sub jge cmp add adc xorl add push aad jge push cmp sbb xlat sbb mov adc icebp add out ss and aam sti mov in sahf inc ss mov icebp pop (bad) fstp or cmpsb (bad) push out jl ds jbe sub negb lret scas pop xchg pop sub mov cmovg push adc pusha iret sbb adc xor rclb push scas cvtpi2ps jge mov fcoms lret imul andl leave push and push cli mov cmpsb daa imul cs dec xchg add xor fbld pusha sub subl jne (bad) cmc cmp mov jl sbb sbb je or dec add or xchg cs xor mov aas ltr out fisub pushf imul mov (bad) mov test cmp fst imul in push sbb test loope jns cmpsl idiv adc push mov test cmp (bad) xor fs cmp mov movl mov arpl jns mov push jecxz xchg (bad) fcomp inc shl imul push push xchg loope (bad) jo mov daa mov push cmc rcl (bad) imull cmpsl mov xchg cmp and add adc xor push and jae dec pop dec in mov sub loopne aad jae fwait test sbb xchg (bad) out mov xor push dec mov in xor iret lret xlat dec push pusha icebp sbb cmp (bad) es xchg mov (bad) dec inc ret popa dec aam xchg add lds mov stos (bad) or (bad) jg cmp popa jne jns test xchg or je leave cld insl sbb ljmp pop jge jge imul (bad) fisttpll (bad) mov lret or jnp xlat sbb insl jge xor int3 flds je xchg imul and lods mov inc dec arpl (bad) or jge pop dec lea aad clc out (bad) je outsb xor adc add jbe jae shr adc pop in ficom in sahf mov xorl mov xchg sbb les xor sbb cmc adc jp or sub icebp in (bad) xor xchg gs sbb xor jge js adc je stos cmp and insl sub repz push (bad) lret mov (bad) xor or jns,pn sub rorb pusha xchg mov sbb xor jb mov and pop xor adcl mov (bad) jmp sti and mov cs shll (bad) aaa scas arpl dec mov jg and mov adcl jmp stc sbb notb jb (bad) bnd lahf push loope mov xchg cmp dec aam (bad) repz jo daa xchg xchg xor repnz jo xchg stos sahf xchg inc lcall adc push cli scas bound mov dec inc mov and mov push fwait and insb daa add mov mov (bad) cmp sub sbb scas mov fidiv xlat daa mov test sarb sub cmpsb out push xchg scas scas lock mov imul xchg in aaa hlt xor das xchg xchg jmp sti lahf push sub inc scas out pop jnp or push nop pop cmp les and jl mov jge test jb xor sarl dec dec outsb xor ljmp push stos aas popf sbb jae mov pop (bad) dec in inc clc mov mov or mov sbb ret movsb pop aaa inc (bad) or xchg and pop sub movsl inc addr16 mov or movl sub int3 push pop dec xchg sub inc jae popl mov iret lcall and jbe pop arpl or loopne push (bad) frstor fdivl loop mov add insl jge icebp lods (bad) cmp das data16 icebp jns sub fstpt leave (bad) jno mov je dec das jb sub (bad) je in push sub or mov xor nop inc or dec rcrl cmp or xor push outsb imul scas sub mov ds xor in add loop test (bad) stc sahf sub push fist aam insl pop xchg dec cmp aas mov stos imul (bad) sarb jnp push lods push (bad) arpl push mov les mov in push xor pop xor std stc ficomp inc push jge aad mov sub jae fwait mov cmp inc loopne mov js repz xchg out insb cld jb gs leave fstp into mov fs sahf mov lea out mov popa mov sbb jp pop in test mov inc push mov sub xor add nop pop xchg hlt xor test xor outsb dec scas fistpl das mov andb and sub sarb popf sub mov adc jns mov call test shl add imul ficomp xor jbe sub mov dec fs add adc xchg mov ds xor mov aad in mov daa ds hlt fisttpl pop (bad) adc cltd inc mov dec xchg inc sbb jne or sub mov out mov push ret mov sub jno push loopne dec xchg mov dec jl jmp pusha inc loop inc (bad) (bad) xlat sub jo lret dec xlat cmp int add dec push andnps jle insl mov sub sub rol pop add push aad daa stos in sub sbbb shll xchg loop ds xchg gs add cmpsb inc fildll xlat lcall lret jmp in cwtl jmp pop (bad) ficomp pop movsl and (bad) lea pop inc sahf mov jg dec sti test dec jmp insb imul sti inc (bad) or push or ret imul addr16 (bad) mov mov repnz fldenv jno mov mov lea add in out push mov pop fadds xor jmp inc jmp jae popf pusha inc xor jecxz sub je mov and ds jl jg andb cltd xchg in (bad) iret and mov mov js (bad) mov cld or loop jno das adc cmp inc sbb fldt adc cld sub mov test pop icebp mov dec or sub insl adc mov inc adc mov out in aaa repz lcall aad and pop ret xchg leave (bad) scas lea sbb mov adc imul xchg push mov fldt cmc mov xchg mov dec loope xchg int jl test sbb jno adc fs pop push clc pop mov sub ficompl mov addr16 push push repnz or push aam bound mov sbbl loop ss mov mov jae inc gs repz and pop jns push or imul ds sahf aaa daa movsl test cli cmp sbb mov movsl inc (bad) xor ljmp sahf adc jmp mov inc nop and mov or mov mov lods inc out push add mov scas jg lock mov nop fisubrl adc pop lret cmp inc cmp fwait pusha mov jp sbbl jnp mov ds xchg xchg sbb or add daa ljmp and pushf sub inc scas int3 mov xchg push cmc rdmsr xchg popa mov pusha cmp outsb mov (bad) xchg addb mov push lret push add rcrb in or jl imul sub in imul cld push or hlt xchg jae out loop cmp xchg and daa jne adc inc add xchg outsb mov sbb sub inc sbb fnstcw rcr outsb ljmp jno (bad) iret jno or mov xor cltd mov lcall xchg jne xlat fwait rclb cmpsl mov mov popf data16 ja mov add gs cld stc and repz adc pop fidivl in pop xchg fsubp (bad) adc out inc ljmp in sbb xchg fldcw jg and aam popa int3 sarl mov ds imul shll xor scas (bad) scas push mov adc test xchg add in loop (bad) fmull adc insl xor fsub xor fldenv shlb andl in dec mov xchg repnz and outsl dec pop mov or jle daa nop push cmp fmull gs mov into and in cwtl xor cltd lahf mov in call sbb xchg insl mov jbe sub leave es sbb icebp sub test mov fdivs (bad) jp push add int3 paddusb mov sbb negl add xor mov cld add adc (bad) push push je test and pop and iret std negl (bad) and push jns mov cli mov fnstsw cmc lcall dec cmp xchg jns jo test pop shr movsb xchg aaa std mov repz pushf in inc adc xchg (bad) (bad) testl xchg (bad) mov stos (bad) lock add push jbe pop les imul negl fisubr push nop push sbb or out imul ljmp stos mov or push lods push ss mov (bad) cmp daa (bad) fstl ja call shrb cmpsl cmp aad lahf xor (bad) dec xor and lea fsubl inc mov mov sbbl repnz imul push cmp xchg xor (bad) pop scas mov dec scas jb jnp in decb cwtl inc and fsubr adc xchg test push jg xor add jmp lods and pop push and mov lcall push mov aaa dec xor mov sub xchg into out imull push cwtl or cs pushf push mov push mov les test push dec icebp lock sbb inc jmp jnp (bad) mov arpl or lcall stos sub aas sub cmp (bad) mov fs sbb call (bad) mov inc in pop sti mov test sti xchg iret mov push pop adc push add iret jbe (bad) mov je pop daa inc sahf jmp imul inc push cltd cmp mov and addr16 lahf or add dec push dec sbb imul pop pop movsb psrld int3 test and pop pop inc imul inc sub aad mov lds cmpsb jp lods lahf (bad) (bad) add add push mov nop ret mov lahf dec pop adc dec or shl dec in xor mov jg mov sbb push push sbb inc mov mov push out xor inc fsubrs in dec loope pop mov mov push pop mov dec pop in mov in ret scas (bad) mov daa mov jg dec pop push xchg andl and push push push push sub xor push pop mov inc jmp arpl xchg popf xor xchg roll xlat andl pop cmp mov popf mov jmp jge jp (bad) dec ret movlps cmp ja fstpt mov int3 scas xor push (bad) fwait stos xchg std mov sub adc (bad) daa movsb pop test aam xlat sbb mov es add not loope sbb push pushf push addl sbb dec jb roll jbe in roll pusha dec sub or xchg aas imul pop daa fs pop push cmp (bad) add mov outsb loope fldt int fwait jmp pusha (bad) sub push cmp ret out mov (bad) mov push push adc (bad) das pop mov sub fisttp addr16 xchg repnz scas mov or jmp and ljmp test xchg ret dec (bad) rcll imul popf mov js sub push sahf jne or in adc mov negl cltd add add push sub sbb lea lea repz addr16 jns adc sub cmp xchg inc (bad) je (bad) push jne push adc cmp fs sub cltd xchg mov push mov dec out or mov mov popf loop adcb (bad) adc push out mov rolb xlat dec les cmp sbb cmp cmp (bad) adc xchg ljmp xchg loopne jle mov and push lods inc ljmp decb fiadd push or cli xchg mul out xlat add jle lods fistp pop (bad) pop dec call jle orb std sbb cmp mov aad icebp call leave dec ds xor pop popf xchg jmp out pop mov mov loope mov scas mov out cmp push adc jle test cli iret sbb pop dec add sub push test cld popf pop imul mov ljmp xchg cwtl sbb rol dec sarb jne pop xor mov pusha pop xchg pop out cld out rcl pop rclb xor cwtl stos jp int mov cmp dec out xchg mov leave cmpsl outsl cmc in lret mov cld cmpsb int3 rolb sbb mov (bad) inc mov in add mov mov add sti lds xlat wbinvd and sbbl xchg mov mov push mov pop add jns lcall imul sub cmp cmpsl ljmp aas rcrl cmp sarb pop icebp pop mov xchg loope xlat dec fwait sbb popa fdivrs pop push push sub scas sbb jno and imul ljmp lods icebp insl mov sbb push pop cld arpl mov pop sarb idivl and add sub mov push jg aad push fisttpl fwait lods mov mov mov and xor mov mov cmp inc xor imul mov xor cmpsb fisttp je mov fisttp and add imul repnz into sub xor jge imul lahf mov push sub xchg and sub loopne dec mov sub sbb ljmp add (bad) loopne neg push or insb in adc xorl mov pop xor subl push mov cmp lret or jg ss jns mov ds scas add roll fistl push or aas xor cmc in mov dec int3 arpl mov lods pop pop xor frstor sbb cmp (bad) add sbb xchg cld pop sub xor data16 xchg test mov push lret dec and jno aas loop jl ret pop sarl insb dec cld jo pop out arpl add rcll imul adc ret push jne sbb decb xor lcall inc and jae push inc aam rcll mov (bad) loopne cmpsl inc inc xor int3 push cld pop fs iret jmp mov push mov insb mov (bad) call pop ja mov push mov cmp cmpl ss aaa jno insb cmpsl mov fisttpl ja vmwrite and into pop test mov loopne icebp leave mov aad dec cmp test pop psubusw lret test cmpl int xchg cmp push dec adc je cmpsl fs xor fs enter cmc xchg cmpsl data16 sahf cmp dec movsl adc aad adc mov inc repnz push pop mov xchg lret fcompl js jle pop cmpsl sbb pop outsb cltd add pop pop dec ret jl jge xchg mov (bad) mov scas data16 leave add mov scas scas loop insb push in or or shrl movsb lret pop nop imulb sub in jae xor shll mov add rcrb lret jg push mov mov pusha jge mov dec jp jecxz mov xchg cmp scas and call mov outsb loopne pusha fsubr sarb pop cmp fstl mov jne jne outsb aad dec push xchg push ret (bad) pop jb mov mov repz sub inc cmp pop pop pop into sbb sarl sbb negb outsl pop inc iret inc clc movd push sub call push out xor push cmc pop jle repz push fs (bad) pop and lea and pop (bad) cmpsb insl pop fcmovnbe sub mov int3 inc stos push fisttpll sub cs lods and leave xchg sub loope popf (bad) ds push mov jno dec mov fidivr cmc test mov push cld aam ficom mov or or hlt lcall inc scas cs push sbb sub sbb call jecxz jae sbb cmp mov push or inc jl outsb loop out xchg or xchg mov cld and or mov lods jo pushl mov test xchg push test das pop rep or lret jmp (bad) mov stc or out mov lret mov cwtl cmp cltd push or inc (bad) sub mov mov popf insb adc mov inc inc jnp out jbe repz loopne movsl mov add sbb stos loop rolb fucomp mov pop lret xor sbbb jns mov aaa or xor loopne shl cltd dec jl loopew mov and fistpll scas or (bad) std and mov ds mov inc mov mov shl mov in inc or aas cs pop mov sub icebp sub mov int inc jnp push lds or into div movl xlat mov add sub (bad) adcl mov mov scas xor jae outsb cmp xchg or idivl push cmc push fsubs or dec fmul pop dec insb loopne xor leave sbb xor in mov or mov test and jmp int arpl push loop (bad) xlat push stos fcoml jle adc fs cmpsb dec ret fwait xor or inc mov adc push loop nop cmp and jmp fsubs push xlat add and inc push or sbb (bad) lret inc mov out fdiv loope xor dec fildll test jne pop or adc add (bad) (bad) mov fistp jp or jg (bad) ja outsb pop mov xchg jbe mov leave lea dec cmp outsb cmpsl sbb loop jp sbb call push push xor xor cmp push jbe sti test sub push adc cmp outsb adc data16 or faddp cmp xor (bad) jbe lret push addr16 mov and (bad) sahf roll dec cmpsb adc rclb fs xchg movsl movsb push enter jmp jbe sbb push push test cmp mov ret aad loopne mov rcl rolb hlt aad fs xchg and stc mov mov loope lea les mov and gs iret rolb lahf add xor ret dec aas dec scas xchg outsl inc das inc push mov div or and adc mov sbb mov push inc xchg xor inc pusha mov lds mov fwait cmp push sbb cmp xor rcrb jmp xor lret pop or stos adc cld xor push stc mov sbb jno imulb push push lahf bts (bad) addr16 push les sub pop jne add notl xor pop mov dec mov fwait push out hlt stos je mov js jb (bad) xor xlat mov addl leave and pushf or test jne push mov addr16 lret sbb xor aaa pop pop push cmp mov jbe in cmp insb outsb jge shr (bad) (bad) mov pusha test sbb mov mov mov icebp push pop js pop out fldl add scas add je sbb xor repz mov cld mov addl push jle mov jns mov bound out jne mov mov ret imul jne mov addr16 rclb mov hlt jo inc jp shll mov mov mov sbb xlat negl loope loope in or out lea fisttpl adc xor mov int3 jb fmull fcomps sbb (bad) int3 dec add xlat test mov adc gs enter jne push and sbb mov ljmp andb lret js xor cwtl jbe jg pop je dec aad sub inc fisubrl dec add cmp (bad) dec inc psubd stos inc lock xor lcall call pop inc mov popa lds ret mov cmp fstp pusha rolb push (bad) fnstsw xor insl jo mov loop in pop fcompl pop out mov and stc (bad) incl and cwtl xor in adc mov test xor (bad) jns inc cld mov push rclw inc addr16 test cwtl jmp add mov ljmp imul dec mov mov and add imul outsl add cmp add (bad) rorb cmp mov cmc xchg lds popa inc (bad) push shrb add or or push mov pop dec inc or adc mov adc out lea xchg cmp jnp pop xor lret jns std rcrl push cmpsl cli push lods and mov std std fiaddl rclb icebp testl scas les xchg clc cmc imul ja ljmp mov jbe mov int3 push xchg fimull iret xor mov repnz xchg inc iret mov loopne fsubrs addr16 inc dec xor mov push cli mov push adc ds movsl push js inc sub dec outsl and cmp mov inc inc js push jb jo jecxz inc xor add mov pop mov mov setnp or ret mov add inc test pop rdmsr out in mov xchg (bad) in mov je push jno daa mov (bad) jp jnp xchg adc cmp dec inc (bad) mov (bad) insb and add lret inc xlat stos cmpsb jmp cmp xchg cmp test xchg shrl rorb (bad) pop call frstor xor sahf into cmpsl loop mov xor negb int nop gs les aam outsb cmp es icebp popl in xor fiadd sti inc sbb fdivrl dec push popf imul or int inc dec lret xor pusha jl mov mov xor cwtl fsubr aaa dec addl int3 xor (bad) and clc or push xor jle push mov pushf mov fidiv popl fnstcw add outsb jns lea and enter inc jl or xchg arpl jmp jge push in mov jmp jmp push lret fisub cs mov hlt dec cli outsl popa into movsl sahf ja add cld std and fwait lods inc cmp rolb mov push (bad) adc fcmovbe lahf jns xlat mov jno inc mov xchg je lret push pusha lret cmc dec lcall cmp ret cmp rorb aad cmc mov mov mov push jns add ficoml loop,pn dec sarb mov xor cmp lock cmp xchg adc jno xchg jp mov jnp inc in xor adc sbb lds das and add test icebp xor push cmp daa lret mov mov jecxz or fidivl dec xchg jne xchg lea inc and dec aas movsb loope into sub jecxz pop or pusha int3 mov xor jl mov pop cmpsw (bad) jp leave cmp xchg loop cmp sti cmp movsl outsb push cmpsl dec pop pop xor or (bad) (bad) stos sahf push cmpsb mov sub fist inc xor add push add mov adc and lea imul addr16 xor shr rclb lret adcl cmpsl cli shld aam in sub enter pop fs mov fcoms ds ficomp arpl pop jge out repz adc les mov or ret adc adc sbb call repz push lea xor addr16 jno mulb push dec jnp sub push adc movsb jle mov (bad) add inc push cmp dec popf ljmp cmp sbb pop fstpt (bad) xchg or and cwtl adc mov (bad) int3 jne call jae rclb cmp xor or pop fstpt fcompl fwait sahf xchg cmpsl jbe xchg lock stos std mov jp repz fistpll xor pop dec in pop nop incl icebp fildll jno push nop mov jae xchg xchg xor shll cmp lods xor and push inc in mov sahf dec xlat xor ret dec push adc push pop adc dec iret xchg xor (bad) fstps xchg in mov inc sbb bound jne movsb pavgw cwtl lods cltd test sbb xchg jmp sbb fdivl fs std jb aam jno,pt loop cld mov add jae push dec in fmul pop and insb jp daa rclb cmp mov adc pop clc lea xchg stos adc jo add into jns cs pop mov cmp pop cmc adc push dec (bad) sti jle sub adc sbb mov jp lret dec mov mov cmpl popa adc adc test leave repz out mov fwait (bad) loopne jno cmp jp loop or aad add dec das push popf (bad) cmp (bad) mov pop out pop pcmpeqw hlt pusha mov loopne hlt push lea push dec inc ljmp dec in push lcall push mov lcall in adc cmp jb in lret mov adc xchg jp (bad) insb jns dec or sbb rcll ret xorb fwait push mov clc jmp mov rcrb shrb or fwait cmp aad dec adc mov mov aas add dec adc jno lock or pop dec test js cmp add clc pop clc aas pop not rcll add orl scas pop xchg nop or bound sar xchg mov faddp jae adc js mov or dec lods or aad mov daa push mov pop and hlt dec sbb push mov sbb popa out add lcall and fs ja fwait sub nop dec loope cmpsb add pop xchg out int3 mov jb sbb mov push sahf push add (bad) in insl cli lahf lea aam pop mov jo shlb les aam mov xor imul sahf pushf cwtl (bad) fucomip sub fdiv jl lods jmp nop loop adc arpl scas loop xchg xor lds jnp add xchg xlat mov cmpsl xor xor mov push mov sub lds imul cmp rcrb or add xchg in mov xchg sub mov xchg mov xor rcrb xor roll xor outsb add inc mov andb mov pushf push (bad) mov lea jns (bad) (bad) lods stc jb cmpsb dec and ret dec ljmp dec inc call aaa mov mov mov mov popa mov rolb fimul arpl fidivr adc sbb cmpsb in pop jae or jns adc and add push lret jns sub mov jns call jnp sbb test out and mov adc dec jne cmp movsl add push sti mov (bad) adc push je push xchg jecxz sbb mov pop inc and in (bad) cs and cmpsl pop push dec mov int3 jae shlb pop and lcall (bad) lea pop or mov into arpl scas clc aas hlt push cmp and mov xlat mov push test pcmpgtw rolb dec adc popf out shrb push mov cld mov push int3 xchg rclb sbb xchg mov push lock or mov jl dec int shrb cmc jmp mov mov testl sahf sbb pop dec push adc sub subl std in repz mov in add inc je mov mov aad clc das stc into ja in popf mov inc push pushf outsl jl mov test pop imul insb or add and cmp and imul call movsb push cmp cmp insl xor or inc fidivrl pop icebp or xchg add leave push or imul adc jne mov cltd aaa in ret out outsb out dec push dec test mov xlat negb jnp xlat inc mov push sarb pushf test inc jo mov dec jle dec add mov mov cmp sahf sbb lret inc idivb add mov cmp dec mov popa cmp int inc inc mov jmp les nop outsl xlat faddl dec mov int3 iret lahf repz sub and mov lret out vunpckhps mov sbb test movl mov sbbl sarb xchg push xor test popa push or shr cmp call jns pusha xor cmpsl xor stc lcall insb dec dec pop mov les arpl xlat imul fisub push add and aaa inc sbbb mov test popa mov clc pop cmpsl (bad) fwait inc inc dec pushf xor dec xlat iret rclb data16 (bad) lock out dec test mov add add in std or arpl (bad) roll outsl sub add add sbbl jnp leave sbb sbb mov sbb mov push mov loope cmp int3 push lcall movsb cmp stc repz lcall dec movsb aad cmp xchg stos xchg fnstcw test mov mov push fsubrl addr16 inc sub inc loopne dec mov push scas outsb sbb je inc and cld adc shrl and add repnz iret test daa push notl out adc or lods and outsb arpl xor add xchg daa aas fsubr aaa push loopne (bad) js sbb daa pusha pop rorl cmp sbb dec stos mov pop mov es call fs push cltd lsl or push pop repz int repz adc out xchg adc out and hlt mov jnp dec cs sahf je mov (bad) push adc pop (bad) mov push sub inc or jbe cwtl jo mov subl mov xchg sti add repnz push and leave xor fwait inc push push mov adc dec sti or je testl jmp stos out rcrl call adc iret hlt dec adc add int3 cmp enter jmp ret or inc mov cmc popf push loopne aam sub sub ljmp loopne mov jl mov fmull jl lods iret outsb add imul inc inc in jo orl push sahf std jge bound dec sub xchg mov inc xor repz daa aam push cwtl jp sbb xor lret push nop xchg fwait jb push sahf and cmp mov adc xchg pop incb cmp push (bad) push push ret pop pushf mov or push leave dec xor rclb outsl out std pop shlb xchg fsubrl cmpsb (bad) jae movl leave test push dec adc stos mov unpcklps mov insb enter mov ljmp cwtl (bad) xor xor xlat (bad) lea (bad) insb (bad) je mov cli jmp (bad) cmp mov and mov fcoms mov pushf arpl or jg add jle js sbb cs sub loope dec inc sub sub lahf add aam out loope xchg cmpsb adc lahf arpl mov les mov mov xor mov popa and mov fidivl or lea mov xor shrb adcl sub imul push push adc test cmpsl adc test pushl jp mov jmp stos xchg cmp mov jecxz fisubr xchg pop mov repnz pusha aas adc cmc push pop repnz push xchg and jge stos push push or addr16 cmp mov cld cwtl push sbb es cmp lret mov (bad) in popf mov inc add xor outsl sbb stos loopne jle mov push fsubrl movsl and lret push or iret jp inc and xchg mov pop ror icebp ret outsb icebp out dec leave mov xchg rcr dec nop adc pop or stos jge mov outsl mov cltd xlat mov sahf fsubrs push lods xor inc push popf bound adc inc mov sub push dec pop pop mov xor (bad) jno cmp sbb out cmpsb mov jmp dec mov icebp pop leave andb adc daa sub dec jo pop (bad) mov inc out or mov scas test fwait adc rclb mov mov lea adc notl inc mov mov dec sarl orb aam jne fimull btc sub xchg adc jns cmp adc adc daa repnz or rcrl movsl insb int lret js int3 dec cli fs jl ret jne (bad) mov jecxz and pop fidiv dec push jbe push jecxz or adc xchg dec jo mov mov xchg jmp mov and popa cmp inc mov mov xchg add dec push scas sbb xor inc aam ja mov dec xchg xchg pop adc out add dec inc jnp push dec clc iret test movsl jo ret inc stc jno je pop cmpsl dec sub mov daa mov add pop or xchg icebp test or xchg push pusha inc push movsl inc outsl leave in mov mov stc das flds stc int3 sub flds aaa (bad) push in cmp jb lcall pushf xchg push in fistpl gs or sbb fcoms dec iret jp aas adc in lahf dec mov lods dec pop cmp hlt cli push sub js push dec jg lock aaa dec inc mov aas ret ret and mov inc sub xlat loope dec loop imul sarb xchg cmp mov mov jge dec test sbb or push stc pop stos cmpsb sub sbb loop ret add outsb imul jecxz pop jbe add data16 (bad) cwtl or fcoms xchg xor sub (bad) mov pusha cmp dec adc xchg adc xchg dec outsb mov daa mov mov cmpsl (bad) (bad) cmpsl xor loope insb int3 outsb mov test mov jl leave jg stos faddl sub or cmp xor mov and arpl jns fcomps test out lahf sbb hlt jecxz ret mulb call xchg mov outsl mov add lods jg cmp movsl mov cmp rolb fcomps mov outsb xor cmc mov pop scas movsb jbe pop fsubrl fdivrl inc stos inc xchg bound test mov js jns pop insb call addr16 addb push mov sbb in xchg ljmp mov inc das xor adc sbb pop ret or jg mov dec shrl rolb gs enter push pop (bad) cmp repnz jecxz push (bad) insl in (bad) jge repz mov rorb js stc pop inc lock pop mov out lret lea lret dec mov and sahf add mov xor lds pop in jle data16 repz neg cltd test arpl and mov pop fisubrl xor (bad) hlt push fwait dec mov inc clc clc nop mov xchg loopne fiaddl jecxz lret pop lods mov mov inc mov testl inc pop imul not data16 (bad) or fisubl push pop add xchg test out lds mov das jp and rcrb arpl enter mov sub jmp mov sbb pop ret daa sub into sub cmpsl adc cmpsl adc test sbb leave adc movsl fcomp orb aam lock or mov mov or outsl inc mov mov fcoml jo pop pop mov add pop mov push and fisubrl leave and add jmp or adc out aaa lock jnp call dec xchg cmp repnz push jp xchg mov xor cmp jnp stos pusha fdivl mov inc lahf push xor (bad) clc popa mov sbb jnp pop and pusha repz adc xchg pop in lods push lret push std sub xchg mov xor loope push jne inc enter bswap pop jmp iret (bad) mov dec sub les sub jns push cld pop adc add xchg dec lds adc stos jae sbb insb mov mov in jle and push dec loopne cmpsb scas out (bad) pop pop daa push iret inc mov aas xchg and mov mov xchg jle xor daa dec jo add pop dec mov sbb xor jbe push cld cmp mov cwtl cmpsb (bad) movsl pop jae movsb scas (bad) je fidivrl adcl adc sbb adc mov cmovg xlat push lea cld jecxz leave mov push xor pop mov cmp inc xchg adc enter jbe push or pop push xlat and aas setg adc ret or pop shlb pop xchg mov xchg inc lods sahf xor adc cli inc scas mov js push add call aas mov loopne lcall sub lret push cld xor daa in adc fnstcw sub add adc shll adc xchg stc leave sub lds and dec ficomp jecxz mov dec xchg add mov push dec mov push jnp xor test mov and cmp cmp sarb outsl mov push vmovmskps and lcall (bad) jne cmpsl adc push outsl mov push sub icebp pop std sti daa add xor das inc add jno cltd cmp sub pop in sahf jg mov out ret mov lods mov mov mov pop lock movb jns jne es mov (bad) mov cmp pop inc cwtd xchg push add in sbb add xor or and mov divb sub mov inc clc or or daa mov jne loop push sti sub sahf notl jns jns mov xchg or sbb mov out repz es dec mov jge outsb mov leave lea jbe dec mov inc bound push pop adc icebp pusha inc push out (bad) es mov icebp (bad) dec loop push cld mov (bad) mov popl mov inc lock nop cmpsb lods xchg movsb ja pop adc mov xor pop inc pop xchg in (bad) mov rorb scas notl mov loopne mov bound lock sar aam ret dec repnz (bad) push jns movsb mov mov andb ljmp cwtl dec add in (bad) inc in lods mov xor mov sub mov pop movsl pop outsb inc sub mov fsubs adc adc loopne mov fsubrs das stos sub loope sbb leave cmp sbb aam adc lret push jmp daa adc lock in loopne sbb add push add mov ret xchg push xlat lock adc in jle or dec mov jae dec outsb mov mov shl pushf dec cwtl lock inc lret std and icebp fidiv xchg xchg dec popf iret test mov push push int3 subl mov shll (bad) nop dec (bad) into pushf xor push outsb outsb mov pop push inc jg inc insb xchg and sbb lea lahf add out out adc pop push dec sub push out loope sub scas in pop adc pop mov and pusha jns loopne aad xor arpl loope jg mull mov rcrl xchg std mov std mov mov cs dec inc cmc jae xor inc pop je add mov push xchg pop inc (bad) sti inc je fstl adc and jns adc jmp aas clc or mov test dec push gs jle inc div idiv push andl cmp neg add cs lcall mov sub inc jns mov sahf adc lret movsl sbb inc or addl (bad) fnstenv mov sbbb int icebp int3 add popa inc jnp push adc mov bound ss movsb fisttpl cmp adc sbb add loop in pop ja jbe cld xchg (bad) insb arpl gs out push push mov pop add push gs aas fldcw jne aad lcall jge div pop pop movsl mov cld sar adc add popa xor and and ljmp ret aas out shll fidivrl es into fwait outsb stc test cld cld enter int aaa cmp lds out insl hlt mov and adc lods or rclb out sbbl dec dec mov stos mov xor cmpsl xchg outsl iret mov sub das jo push lods icebp stos lods leave ss loop outsl es les pop sub mov mov jmp test lods repnz adc mov fcoml bound mov dec adc lods cmp sbb mov call loopne sbb outsl and (bad) adc aam lods mov nop stc sub mov outsb push pop daa sbb in jns sub imul ja and movsb mov dec push fild std movsl cmpsl roll aad aaa popf mov test cmp lods inc cmpsb inc loope jp int jmp outsl jecxz les sbb cmp cmp mov test pop imul clc imul inc mov sub xchg add stos xor jne mov cld jno adc idiv sub and (bad) jge clc ret push mov outsb pop pusha lret cmp push int3 int decb and push xchg js stos or test imul sub leave daa out push das rol mov and pop addb adc call pop (bad) jno movsl mov mov addr16 les push out sub je leave sub mov mov jns rcl test pop xlat lds (bad) xor push mov dec pop std (bad) fildl cwtl or sbb (bad) rcl or cmp rorb push pop jnp cwtl enter mov cld push mov (bad) popf pop out add xchg outsb jne les inc dec push jne data16 data16 adc mov cmpsl jmpw mov out dec mov mov sub mov movsl mov into int3 repz mov and insb out mov lcall ss dec (bad) movsb andps lods mov mov aas xor or xchg out pop xchg ret testb stos mov sub push and push inc jg (bad) jbe outsb int pop xchg or push je rcl lds add sbb cs xlat iret mov pop (bad) test mov das and iret into inc shlb roll adc fidivrl push cmp sub fnstsw cmp mov mov xchg rcrb scas (bad) mov arpl xor mov mov rolb hlt lock hlt mov leave mov mov dec cmpsb fwait xor jecxz sbb mov lahf lds cmpl ds cmp dec cld mov (bad) outsl xchg faddl adc pop jnp orl jle mov ss push imul dec ret js ss sbb push (bad) jnp mov inc mov adc fistpll int push adc xor ljmp je stos and (bad) out andb cmpsb jbe aam jno mov pop scas mov push out or fldl2t dec rcrb xchg jmp sbb adc mov js je and stc inc in mov das sbb jb into clc pusha outsl push push cmp orl popf mov shrl out inc icebp mov cmp movsb incb jecxz sbb adc and jecxz dec sbb or (bad) popa (bad) stc xor push pop imull add ficoml fsubs pop pop or mov pop push mov inc mov cmp movl pop gs test and mov cwtl lea out in inc and mov lahf xor jbe rorb lods test cmp jbe inc jle xchg das xchg addr16 pushl (bad) sbb cwtl inc mov add mov int stos loopne mov data16 mov xchg sti or lret add outsb ljmp or mov xor push push push mov inc data16 pop jno ljmp sub jmp mov loopne sbb mov jnp adc cmc jp call mov or imul aad pop ret xchg sbb add nop pop fsubs inc dec fsubrs fnstenv cltd orl cmp jecxz mov jo lahf test lahf lret outsl das xchg (bad) pusha mov dec repz mov fwait call rcll dec xchg test pop xchg inc push push mov lods ret adc mov mov push add jb inc nop sub sti lods mov repnz divb loope jno mov aad add in lea and cmpsb cltd dec inc ret stos ljmp mov rcll add addr16 lods push add xor insb inc add int3 rcrb nopl and adc push mov (bad) and and jne adc aam lds ret sbb add inc push mov cltd jp lahf fwait add jne (bad) push dec add mov and and inc jnp or jne inc mov pushf inc idivb jp addr16 popf jle cmp pop mov mov (bad) and dec mov jecxz popf jnp sub cmpsl rol hlt mov pusha test ds fisttp das push addr16 sub cwtl dec add push cmp adc xor in call jmp fadds mov add jns or repnz cmp inc or inc push popf xor add arpl ret or mov clc std adc daa push mov int data16 daa xor bound pusha add movsb pop and jns push xchg mov xor sub add xlat popa std fnsave jns xchg push fwait out mov (bad) fs mov lds movsl int push or addr16 insb (bad) dec push or inc mov dec dec pusha push xchg (bad) leave and push jle scas call mul sub pusha lret out pop lds cmc imul fcmovne mov sahf mov push xchg inc sbb ds pop mov ficoml rcrl cld sub mov nop ljmp jecxz dec xchg scas out test push cwtl xchg lcall scas mov adc sbb mov sbb in ljmp arpl mov stc lds jmp fistpll xchg mov lret dec jbe inc (bad) ja not cwtl push jnp idivb jnp adc pusha fbstp iret or cmp iret or rcrb leave lea loop cs jo or es ret aas lea mov movsl sub mov fcoml (bad) fisttp or fimul jo mov mov cmp out (bad) lock imul mov adc faddp sbb cmpsb sub imul mov and xchg flds shrl pop dec or cmp jno js aam insb lcall rcrb (bad) cltd jae dec mov das jle add inc push cltd xor push push jae pop xchg jp (bad) cmp cltd repz push xchg dec dec rol add cmp insb std xor icebp mov jl loop,pt xlat mov xor mov xlat in sti pop loopne movsb jbe dec push js shrb imul add and icebp rorb or push cmp push sub subl call mulb sbb cmp ljmp cld inc pop repnz lods cld inc data16 push cmp (bad) das dec stos rcrb fsubs pop pop mov mov in pop out and (bad) outsl push in push mov fldt push xor testb sarl sbb ljmp xchg ljmp out loop lea (bad) pop mov lock out insb sub (bad) ja sahf jg dec fsts dec sub mov push stc push pop (bad) cltd mov cli out jns movsl jmp or push aas fstpl cmpsb lret dec pop xor dec add mov ds aaa jp push xlat adc or or inc adc push outsl push push jbe rclb insb xchg sahf out pusha inc loop cltd sbbl xchg fdivrl imul out pusha (bad) mov ret idiv aam (bad) sbb fs mov sti icebp aam in lock lea mov movsl iret imul push jne popa sbb mov mov xor mov and xchg mov stc loope js dec sub mov jbe xor xchg adc jl mov sbb mov or pop jle outsl es lock fistp aaa push stos aaa popa cmpsb and fisubrl insb inc pop lcall movsl xchg mov (bad) aaa (bad) add pop repz add mov xchg in enter inc arpl sub out pop inc mov add push hlt out jne jae and cltd mov test pop (bad) jnp and jae enter les in push in mov mov mov mov jae pop mov mov dec lods xor insl jno jb jb mov pop cmpsb push inc mov mov cmp pop int pop scas xor xchg and inc das fimull cmc xchg push into daa dec inc adc test inc std cmp mov sbb inc xor nop jns (bad) pop dec jmp jo lret xchg pop jle stos (bad) mov fild loope ret ja ja xorb and xchg sbb test inc outsl test icebp ret mov pusha cmpsl or add out (bad) (bad) mov adc (bad) data16 ret jb fs lods lods lret dec cli mov sbb js popf popf dec push (bad) cmp notb sub adc stos xor int3 xor cmp in mov bound mov or addr16 jae aam test mov jmp inc insb popf push pusha xchg adc (bad) insb ja inc xchg scas es push enter xor (bad) sub lret (bad) aaa aam add mov mov push mov and add popf cmp sbb (bad) adc xor lods sbb jbe,pt mov xchg insl (bad) cld mov mov pop lea cmp scas clc lods addr16 stos js lods dec rcrl push cs int3 sbb add jle test adc rclb push mov xor div adc stos ret inc pop lret lods jnp jns mov loope pop (bad) dec inc inc mov add insb adc mov stos jp pop push (bad) adc sbb xchg stos dec mov pop fmulp mov jbe arpl stos mov aam (bad) cmpsb xchg loopne pop adc mov loopne mov mov insl nop (bad) adc add in sbb shrb outsb data16 cmpsb inc jmp icebp xchg inc dec xchg sbb inc lea iret repnz aaa (bad) push arpl jmp mov add or (bad) push and icebp inc clc xor (bad) sbb inc lret jbe mov dec inc mov ljmp (bad) in adc jecxz lret cmp je cmp dec testl sub jl lods push adc xchg aas out xor mov mov popf enter in add lcall fcmovnu rcr movsb cmp adcb fildll arpl xchg les (bad) lock pop jle addl fisubl mov sub orb or or or or shrl int repnz push clc mov pop daa sub fnstsw xchg js adc les or outsl mov popa add rcrl imul sbb push or fnstenv pop nop jle xor push cmp (bad) cmpsl dec stos lods push test pop aam or fldl (bad) adc sub movsl int or add mov cli mov lds dec and fsubrs jl push add sbb divl cmp fldenv ret lahf bound ret fstl movsb cs sahf ret in xor mov and inc in sub in pop movsb mov bound enter mull cmp out push int3 and mov rcr and mov (bad) mov dec xchg dec fisttpl js mov jns inc or (bad) insl xlat fnsave cwtl cmc pop in adc xor push inc jmp in pop push mov fdiv scas push arpl or out push sub sub ljmp sub push and je cli popa or test mov add dec xor add pop lea (bad) mov rol mov pop roll xchg inc mov das inc add in jmp mov cltd cltd push add add and sbb and push adc lahf and repnz test mov mov clc push mov bound xchg sub adc and ja call push push xlat jecxz xchg rcll in mov push cli xor leave lret les pop sbb pop sbbl mov mov adc adc loopne ss (bad) mov xchg imul in outsl dec pop in out in je imul xor mull sub dec sub cmp stos outsl dec lds mov (bad) subl ffree mov jg and or and and loope fldt ljmp push pop xchg xchg repnz or nop pushf xchg sti (bad) mov pop pop scas lock test (bad) rolb push fiadd stos bound cmp pop xor test add scas ret test inc loope negb arpl push xor int dec jnp bound or push or sub pusha mov dec shrb aaa jl jns xor push pop pop into imul add pop mov icebp fwait mov mov pop fidivrl inc add outsl lods sbb lds (bad) jno lods orb add out xor sub push xor push lock and add jle pop adc pop pop ss test add sub sbb out aas mov xchg aas call int push jecxz rcr mov sbb out adc mov mov icebp xchg lcall jl movsl ljmp mov aaa lahf and sub test adc mov mov (bad) negb cmp jp repz pop leave cmp js out xchg in adc push bound ljmp lods aas push push sub sbb xor push push out gs ja je mov ret pop fisubl push or daa xor movsb cmp sub rclb xorl mov leave mov movsl inc ljmp lahf cmp lret negl mov ffree out inc dec cmc jb outsl movsb inc test push call jns cmp (bad) dec je jb and nop jmp cmp mov pop or fnop fistpll mov mov add (bad) insl sbb jle repnz call mov ret xor xchg loop rcrb dec push mov iret cmp mov fdivp mov ret dec mov sbb xchg jo sub mov not out mov inc (bad) hlt outsl lcall cmc push and push dec js sar imul rolb dec ret fwait (bad) mov push cmp in push or popf ljmp pop push cmp mov jl rolb pop lcall int3 sub (bad) arpl xor and loop fidiv nop subb js stc ffreep daa fdivs daa leave sbb push lock out pop imul loopne mov test loope mov mov hlt cmp fwait mov jge sbb aas ds cmpsb dec mov ss lods or les mov pop push js inc ret loope adc dec fistpl inc clc (bad) jae es jmp xchg inc mov test (bad) fldenv mov aad sub mov rcr aaa add jecxz icebp jle loopne push xchg mov test jns jns inc pause loope xchg sbb dec in dec pop shll cmpsl roll jb xchg xchg ds daa adc popf sub sub push mov and leave push push (bad) jo add test mov sub cmp push inc (bad) mov pop jo push sub stos or mov testb imul pop lea mov push cmp sarl std fs test call or test jle add mov inc sahf mov dec sbb jmp les into lods pop sub clc movsl hlt (bad) repnz nop fcmovnbe (bad) into fwait mov mov sarl or ds jbe or cltd in popa (bad) repz pusha ret push out negb mov (bad) addr16 cmp xchg imulb loop jo cs mov in mov daa test test je pop mov jp jbe jle mov sbb inc (bad) adcb ljmp arpl arpl call inc lock in add fild movsl out cmp (bad) lock add add cltd cmp outsb jbe dec pop inc inc addr16 push xlat cltd ficompl xchg mov out or (bad) sub clc jns pop push cmpsb clc lds dec (bad) xchg pop adc rdpmc fisttpl in jns mov inc or sbb int dec sub outsb push adc iret adc imul aas jbe push mov out (bad) dec xor addr16 jmp adcb adc sarb jne pop xchg inc loopne lock in xchg and mov daa lret add cmc sub cmp xor imul imul in mov mov jb add and sub movsb jnp shl jnp pop fdiv push ds pop addl mov lret sbb mov stos in popw int3 roll pushf sbb mov cmp dec je mov out int3 aas mov popa sbb (bad) fbstp mov rcrb dec jae fldt push jno or es test test bound aaa jecxz dec std inc xchg cmc fidivr xchg sbb cwtl mov inc push adc jno and cs rorb dec cmpsl sbb mov stc sbb xor xchg test xor sbb scas add jns cwtl fcompl ja adc lcall cmc pop je inc sbb mov mov and jmp outsl rclb cmpsb inc sub cmpsl imul mov mov bound loope test cli and fmul jl or push notb cltd push js mov push aam repnz cmp or mov cmp popf push pop pop subl insl nop sub mov stos fildll or gs ljmp sub js xor xchg or scas insl repz push add aam (bad) lock ss cmp pop mov adc mov push xchg lock xchg pop add lock jbe daa and movsb push into (bad) xor push loope sub jecxz stc xchg mov mov das push or loope inc fdivrl sahf inc ficompl nop inc xchg rcrl add into (bad) cmp dec adc sti pop (bad) push xor push ds pop das jno or pushf pop in scas pop scas jo (bad) dec adc adc jg jbe lods js cltd lods aaa push xor cmp ret dec xor sub mov arpl fstpl imul dec adc (bad) rorw pushf inc add dec mulb lea sti sub pusha xchg cmp aas push outsl test es scas movsb repnz pop bnd xchg test adcl fild add push push nop dec cld add loope xchg mov scas push aaa mov jnp iret outsb cmp add ljmp testb cmp xchg stos mov or push and push iret aam lret jnp rcr mov (bad) jae lret push and xlat mov jbe push sub test js pop jp das into mov sti sti pop cvtpi2ps movsb dec dec inc sti adc mov dec adc test push xchg mov add or pop xchg mov (bad) mov ret pop cmpl add out loopne,pn out (bad) mov inc cwtl jnp mov scas add mov mov gs mov mov inc jne lock and rorb pop fist sbb pop js sub or cmp aas or sub insl aam outsb shrb mov cs xchg jecxz xor (bad) ret mov js imul addr16 lds mov sbb scas gs push movsl xchg mov and sbb orps cwtl xor (bad) push in pop jecxz popf fs and test jg xlat cmp incb cld lods aas push lds insb fisubl std cmc mov rcrb dec test push push pop stc das ficoml push dec fimul push push sub or jp push movsl out insl xchg cmp jae,pn fwait or xchg (bad) mov mov push call pop pop stos sub or shll and push and adc iret jno pushf leave sub xchg jle xor push lock rcrl movb push insl sarb cmpsb or pop (bad) scas out sbb jns mov repnz push lret iret add sarl packssdw arpl rorl mov pusha cltd mov aas lret mov icebp test (bad) (bad) adc shrl clc fdivl push test out fnstsw or fwait mov sub fstps inc xor or mov int out pcmpgtw xor imul cmc cmpb int pop in je icebp je,pn and pushf (bad) sbb stos pop shl scas jo pop add roll cmpsl ret sub dec or out pushf jne adc push pop jmp nop out dec (bad) push pop es dec dec cmp sub cli enter stos add movsb xchg je out inc test pop (bad) fwait sarl scas xchg cmp shll iret inc mov mov add stos lahf enter add mov mov push inc sbb push cltd ror lret push cld stc mov mov xchg pop mov idiv xor pop dec aam mov pop (bad) scas mov add mov jns mov (bad) ljmp int3 push mov cvttps2pi fildl int3 push mov out out scas pop and xchg sbb xchg repz aaa sbb icebp (bad) mov outsb jle mov mov add repz mov xchg call lcall pop shr dec fidivl push arpl or sbb jo imul and mov push mov adc inc faddl scas push adc test outsl hlt scas xlat call pop or loopne pop push rcll dec daa add mov lahf fidiv (bad) sbb pop rorb pop and dec insl movsl inc lods push rorb mov adc popa (bad) inc ljmp int3 sub cld loopne add sahf mov repnz shll jl call aaa push xlat jb dec xchg bound aas orl cmp sbb test aas int adc int shll ljmp shll inc hlt xchg scas lds mov into sbb shl sarl test test (bad) push push cwtl mov and add push ret mov mov lea lea jo dec fdivr hlt insb push in movsl lock ror pop sbb in les hlt cld fwait mov mov sub adc in (bad) adc daa jo sub fwait xchg mov out pop dec cld gs jae mov ja lcall sub pop fucomi mov or jo mov adc push jp jmp ljmp push shll cwtl mov imul (bad) mov push cli jmp pop push inc fidivrl sbb scas shrb loopne movb mov pop test xchg pop cmc mov adc data16 sub (bad) push outsl and fucomip movsb sub aaa xchg out cmp cli jne (bad) or cld mov xchg add daa add xchg divb mov test inc enter pop pop xchg aas xor push inc addl add jmp or pop ljmp push xchg idivl (bad) sub test int jbe pop pop pop sbb sbb mov pushf or lret pop das jne mov push lds push and push jle in je (bad) test icebp add add loope push test mov push push jp iret jecxz dec pop xor jbe sub jo push in mov test push or add sbb stc cwtl (bad) fadd inc fcoms push (bad) iret pop (bad) pop add je lods popa mov jp sbb into or dec rorb cmp jbe lods js push or (bad) xchg outsl movsb daa mov jne gs scas mov jmp adc gs sbb mov and pop das cmp int addb dec mov mov dec jo cli popa or subl lahf or dec aam mov mov xor jbe or roll aad das orl cmp xchg loopne pop adc adc xchg lret mov push push scas in pop ds inc inc out mov pop stos dec mov into mov mov repnz mov pop mov xchg int mov in cmp jno jecxz lcall jns imul jge and xor push scas fs daa adc sub mov push out xchg cmp adc xchg into adc arpl inc xor ss fcmove sub mov mull cmp sub add rcr xchg push lret adc jne lods cmp jae ret and loopne sbb dec sbb or and movsb jo sbb loop cmp aam jo les jne iret lods pusha push jg or das push cmp jbe lea xlat dec or sub inc pop sbb mov repz fdivs pop jno jmp aam mov mov icebp push mov hlt or sub into clc shrl fistp bts or sarb (bad) mov andl jno adc ror adc jmp xchg pop imul sub jp mov jno jo xchg cmp stc ret and xor movsl and jns pop or shrl fstp jge repnz cmpsb not push mov outsb stc mov inc fisttp mov fimull clc lcall mov sbb sbb mov push lcall bound arpl icebp jae adc sub mov push dec outsl add lea sbb pushf cmp pop imul push mov inc shll stos jmp mov stc mov adc or dec in popf test add mov and addr16 jle sub jmp jne stos add inc push es mov fdivrs inc add movsb jb fiadd (bad) cmpsl mov push mov mov and xchg fiaddl sub dec fnstenv lea js xchg pop add adcl inc popa es adc negb cmp sub aaa cltd and cld inc pop sti cwtl mov xchg jge sub and and cmp out mov adc ret adc lods xchg outsb sub insb inc jae push and push mov add lds fdiv aaa pop add push add xor mov addl std mov push icebp lds jle movsl in push dec push ljmp or scas cs lahf iret daa dec pusha insl sbb and sbb int and pop sub jns mov xor push adc rolb test es ds (bad) inc vmread std mov mov adc add fldl jecxz (bad) incl lds ret adc sbb cmp dec dec js fwait arpl add add pushw add ljmp push adc pushf dec stos inc pop add pop fcmovb fxch rcrb loope stc mov popf xchg andl test mov and std aaa sahf popa jg push pop (bad) adc mov cmp add stos inc push mov pop xchg cmp push gs adc test sub lahf dec xor (bad) das dec or imul sbb xchg push cmp mov cli movb and xor inc (bad) (bad) leave pop movb sbb cmpsl int3 sahf xchg inc jns fcmovnbe fwait inc out mov jae (bad) ficom mov test ret sbbl pop lahf repnz iret mov leave cld sarb in mov pop rorb or pop (bad) sub in and test mov fnstsw pop mov dec or pushl ficom int push mov or scas mov pop mov jle xchg dec stos mov mov mov jnp ret int popf lods divb outsl jg stos pop ds mov (bad) push pusha repz (bad) and cmc decl inc cmpsb sar inc add daa icebp dec lahf in sub or sub xor jb pop js mov mov xchg xlat cld sub pop lods (bad) call sbb cli lock xlat les aad notb and arpl jno jae push lahf push fsubp add fsubrs pop fwait cmp or sahf shl (bad) fisttp fwait ret push pop mov clc in xchg push cmp mov stos ss jo cltd nop clc push cmpsb ds xchg nop lcall ja pop xor jno or loop insl (bad) (bad) sbb mov cmpsl cs popa push push mov orl jbe cmp cmp imul (bad) rcl inc mov dec js xor aad and stos mov and mov jge movsl push jno dec fist repz add (bad) ljmp hlt dec imul (bad) xchg push insl jmp imul test mov mov xchg daa bound push fistl aad loopne jle cmp lahf repz addr16 jp mov mov mov or cltd cs insb cmpb dec test scas les push push or lods and test mov mov mov push adc inc vmread fsubs hlt mov pop (bad) pusha sbbl lea insb mov jmp (bad) scas std notl cmp fadds leave add fwait xchg sub xchg movsb out mov adc or adc dec fcoml add push add sbb add scas push mov data16 cmp adc loopne aam imul aam mov sub inc pushf mov mov mov xor (bad) addr16 cmpsb or inc js js pop repnz data16 sub inc cmpsb cmp fldenv rolb sbb jb loopne rorl mov jnp inc or xchg mov test out bound or sub xchg xor push jp enter imul hlt add andl arpl test fdiv inc push pop sub adc iret repz sti aaa loope ja popw push fstps dec mov mov xor (bad) sub add cmpsl or xor sbb cmpsl into out push jnp mov push pop in leave xchg jle dec cmp or push clc paddq inc sub je cli push push jae les test scas mov mov mov loope xchg cwtl or scas mov jecxz add inc pop or fucomip and lcall int3 test or jns mov loopne js mov ja (bad) adc loope jnp out push adc dec outsl je fisttp push test nop adc sarl sub test das mov repnz mov adc mov daa jo insb notb sub stos mov mov sbb push xchg inc and fild dec fildll sbb les and mov int repnz jne and pop jmp pushf (bad) insl jne into fld enter mov jnp mov out adc jns adc dec jp jno cmp push mov outsl in pop mov test std ror push cmpsl xlat pop xchg test repz add cld pushf popa xchg imul fnstenv add fsubp bound push and inc pop mov lret fldenv test or inc adc test mov dec bound fwait mov jne (bad) or outsl imul xor fcomps scas xchg and stos jmp jl imul outsl jbe arpl xchg and lret jp out mov sub push inc mov popa sub and xor loope hlt xor test cmp xor jb sub cltd hlt sub sahf icebp test fs xchg les pop aas inc inc pop insl pop imul push iret xor sbb xchg in xchg (bad) into ja sbb mov ficompl mov out mov pushf sub xor imul stos add dec push cmp repz jle daa out sub add fs push mov jl pop cld xor repz jnp pop cmpsl or mov mov jge insb pop and out xchg xchg add add xor add fwait lock pop int arpl jecxz mov sbb lahf bnd in cmpsb adc inc jp mov clc ret mov jg cs divl sub outsl das cmpsl jns adc mov repnz ret pop inc fcoml ret lret (bad) xor lods divl lret cmp inc ds dec imul rcrl jp subb pop mov mov lret bound (bad) or imul xchg push push adc negl mov push test testl movsl fnsave lods mov incb (bad) iret ja mov in roll mov add (bad) (bad) cltd xor test (bad) int mov arpl mov mov dec mov sub xorb mov push out sti push xor mov outsb stos adc call and mov int3 inc roll (bad) mov mov inc add fsubl mov popf mov aas push stc mov incb loope pop mov xor jne mov dec cmp add and push out add mov aad ret sub pop jo jo pusha cmp arpl pop jge adc in xchg stc (bad) cmp addr16 (bad) aaa jg sub add sub xor adc lods scas loop or xor cli xchg inc cmpsb dec test repnz dec mov or mov scas imul icebp fst fwait das mov inc mov or daa (bad) sbb (bad) xor sbb (bad) sahf mov idivb jmp mov mov bound arpl or inc xchg xor scas ljmp mov pop fisub into leave hlt cli imul movq mov mov mov out adc cmpsb repz add ret sub test cmc daa popf aam cmpsl inc sub lret movsb mov mov popa aaa jnp,pt mov add and and sbb iret das lcall and es pop add cwtl sti sbb test mov mov les jns fsubl jg fwait dec fmull mov inc sbb cli cs mov sbb ss movsl xlat xchg pop (bad) stos (bad) repnz jns xor sti repnz inc push fs cmpsb mov push (bad) imul imul int3 movsb addr16 mov fcoms (bad) loope inc jno icebp add rcrb mov dec jae and in cmpsl jnp and pushf jmp ja ss mov jbe (bad) in insb into outsb or xor jo or shrb cmp in add fldt loop scas outsl xlat into cmp insb hlt (bad) cmc xor sub xchg sub mov add pop lds movsl das lds jmp push inc rorb (bad) test push jno das add adc cmp mov sub xor in mov (bad) outsb adc lock add cmc addr16 (bad) mov or loop inc imul cmpsb movsb push fs frstor jmp icebp adc sbb jns add jb (bad) mov xsha256 cmpsb push cmp mov flds mov loope icebp mov pusha lds xor nop ljmp and lret dec dec and das stc les sbb dec sti dec in fadds sbb sub cwtl stos xchg push pop sub fs jns mov movsb imul pop bound ss mov add xor scas icebp (bad) mov cld pop fs sbb loopne aam ds push mov clc jb insl jmp xor push sbb mov stc xchg pop mov and iret cmpsl jb leave jp mov cs push xchg hlt gs les std adcb cmp push pop jbe clc inc adc in and es xchg add push imul lret addl in in mov or sub pop enter cmp rorl ljmp dec loopne lock jno dec jg std mov pop or fmuls sbb xor loope jmp mov inc in mov or push pushf jbe rcrl jg cmpl jge xor outsl pop push or adc enter bound mov in repnz popf push add push leave sahf and lahf mov ret add popa mov add insb jbe sbb mov rolb popf fs push loopne cmp outsb fwait ljmp xor shr inc jno test sub int pusha pushf push dec mov add imul clc test xchg cld lret pop dec add rorl in cmpsl xor and pop rolb xchg lahf pop dec add xorl enter ja xor cmp sbb notb push test cli mov jle adc sbb inc mov lea and pop dec insw ret mov rol mov jge fist jp fadds dec mov dec cltd or dec insb pop test push mov inc fdivl mov dec and inc pop dec pop pop jp inc rol push cmpsl mov xchg or pop clc and mov imulb pop pop and mov inc js inc sbb in call inc dec in add jmp jl cli inc das ror test scas cmp mov stos (bad) jmp aaa fisubr jb jne test sub push pop sbb jg dec push and scas rclb ret movntq out lds mov dec mov divl inc lret (bad) outsb hlt lea dec (bad) push push cld cmp (bad) lods fimull xorb test shrl movsl leave push out push xchg cmp xor jg lret repz push loop pop xchg dec jg call mov cmp add loope les or or psrad mov fstl jae jecxz rorl aaa in cmp push push in rorb shlb mov mov mov ds jae mov mov mov jp adc lock outsb mov jge lret movsl leave popf inc rcrl xor lret loop ss inc mov mov ss mov cmp (bad) push call inc mov mov mov dec fwait mov adc cmp insb push adc sbbb push addr16 lods mov push sbb add xor sub ret outsb (bad) clc and and pop xor insl out in cld test lahf pop arpl or mov daa mov in ss add clc inc or xchg pop add js lods add nop dec push fisttpll cmp inc mov mov xchg out mov push dec ljmp push inc enter cmp nop std lahf call jecxz push fwait cmpsb jb or std xchg aas arpl pop sub adc in clc add push adc adc cmp dec inc pop test iret cmpsb push dec in mov jmp xchg and pop jbe dec movnti lock aam das pop cmp cmc adc mov int3 popa mov stos gs repnz push call mov mov insb jne cwtl or or fcoml fsts (bad) lahf mov cmp cwtl add jns adc (bad) push cld pop and mov jecxz jmp mov dec cmpsb stos xchg ja pop mov (bad) je in xor mov rcl dec push cltd insl pop mov sbbl and nop test push push push push mov push xchg jl push sbb ss mov aas (bad) sub out insb cmp lcall pop xchg inc push mov out sbb dec pop dec inc adc ret or push adc push mov rorb mov stos inc loope cmp sub (bad) mov mov jno xchg mov pop cmp fbld divb push adc aas inc stos pop fs ja fiaddl jbe sbb push sub test pop cmp mov sbb lahf jle ljmp movsb pop sub sbb add arpl jmp xlat mov out cltd daa mov mov sub or punpckhwd out push sahf neg mov push cmp (bad) movsl test cmp add jne push and jl popa or or test xchg (bad) jae std or ret push adcl inc xor out adc js jg popf xchg and sahf add mov push sahf retw add jg and push cmp xor pop ss (bad) or dec jecxz pop xor push inc arpl cmc aaa and mov dec dec out or out fcom sbb shl jns xor jmp jnp loope insb aam dec xchg mov into insb inc cwtl (bad) and adc cmp ds shll iret or mov popa decb out (bad) fbstp push cmp repnz pusha mov adcb in mov aam push jnp lock vmulps or rorb mov mov inc xchg jne (bad) jbe (bad) outsl mov daa cmp mov inc (bad) cmc lret into sub ret pop stos sub push mov push scas les or insb inc inc pop mov cmp cmc mov outsl jb push or pop (bad) push sbb fldcw mov mov psrlq pop dec mov pop (bad) or in jg sub push insl push mov movsb jl cmp popa das lahf imul pop adc movsb loope cmp call and add pminsw in lods movsl fsts pushf pop in mov and add (bad) data16 (bad) xchg mov jle cld (bad) mov dec cmp jle aad push push loop push cmp pop leave inc mov mov and (bad) dec outsl loopne std and push sub (bad) (bad) arpl jo sub orl loop dec loope lds ret clc cmp aaa push add mov (bad) adc (bad) mov ret (bad) sbb add mov jl out xor push pop and or aad int cmp lea xor mov sbb xchg je cmp xor push add rcl inc push push xchg dec pusha repz inc loop pushf scas enter cmp or jle fwait orl leave mov in sub push das xchg sbb xor test mov clc xchg fildll cld in iret jg addr16 push dec shrb cld dec loopne jecxz imul iret in ss pop add adc dec jp cmp or addr16 fwait push leave std mov iret shll and dec mov icebp cmp test xlat cwtl cmp sbb les int push cmc jne adc repz ds aas xor pop jecxz ds shrb (bad) ss stos or xchg int push test aaa lods inc cmpsb sbb fist fldt nopl fisub cmp dec jmp push or jecxz sub movsb mov inc xchg pop inc out fs pop stos (bad) notb mov xor call cmp fstps jb call inc fwait (bad) sub or movsl data16 lea push dec divl push stos in iret ret and (bad) mov and (bad) aas and mov add xor test ds mov (bad) test jmp ret and enter aad add ret xor dec repz adc sahf jmp inc lcall stc mov sub jp arpl lahf and sub fsubrl mov xchg push cmp sbb dec popa pushf pop stc fist fcompl jecxz or mov sahf mov jno cmp je test (bad) dec push pop leave mov xor sbb sarl sub sar jnp mov jb fisubl (bad) fs out fwait sub inc cmpsb iret xchg and xor jo pop outsb popf mov outsb loopne andl sub (bad) mov icebp push jg das mov ds mov out movsl nop les (bad) xlat mov and mov insl loopne test push dec xchg xor ds jge out andl addl jp mov imul (bad) cmc xchg mov push lcall jecxz push repz jmp jl fadds fmuls fldl xchg dec ja dec aaa inc mov lds scas pop mov jb je lods lret test mov pushf out pop test sub xor cmp dec push inc push jnp inc (bad) repz mov adc pop xchg sub arpl cmpsl pushf std push sub jmp jmp movsl cmp xchg nop mov push mov test or inc adc adc sbb or push xor mov mov addr16 lods inc int3 leave or cmp daa and dec daa fstp add std dec (bad) push dec shrl jl add int3 sahf push mov clc loop les cmp aas movsl jp frstor out les outsb in (bad) (bad) mov cltd add xlat or lods cs bound andl sbb cwtl mov jae mov (bad) fs fidivr pop test lret jg fs mov clc sub outsl adc stc add inc lods mov inc jnp,pt out loop sbb fs sarl inc or repz sub jp sbb lea roll fsts stc in int and enter es data16 inc sbb sub and inc lahf fucom shrb mov icebp xchg out aam mov shl mov push popa or daa add bound push loope cmpsb or out sub mov jne sub vmread add je inc mov popf jne cmpsb jae data16 mov (bad) lock inc into stos fisub out aas pusha std mov jmp popl (bad) and mov add xchg push addl imulb aam mov adc cmp push mov int3 (bad) ss or (bad) push xor test xor js xchg push rcll dec in adc js sub clc rcr mov xchg movsl xor mov mov mov or mov stos xor mov cmc sbb (bad) scas mov insb ret xchg cmp (bad) rclb cmp mov add jecxz das cld int sbb jg jg push mov (bad) into jmp (bad) jge test ret jmp pop ljmp push jb aam loopne sub adc xor sbb loope mov fdivrl ljmp push nop lods and cltd push es mov inc jns push shll mov sti cwtl test gs out xchg and (bad) cld pop xchg dec fucomip test mov and jnp lods lret in pushf push pushf push push leave ficomp loop in add sbb add dec loopne jle xchg out mov cmp mov dec insl jg mov pop push and out inc inc mov lock push pop sbb fnstsw add cmp fwait push xchg cs icebp ljmp bound jns cmc mov inc add xchg cmp cmp and xlat jbe loop sbb int movsl ret mov lret ror or xchg (bad) cmp addr16 mov sbb pop je,pt mov push jmp adc leave (bad) psubq mov adc repz sub cmp aaa push sub mov loope icebp fidivr xor fsts shlb mov cmp mov sbb pusha imul pop imul sub imul pop xchg lods inc adc das add dec stos cltd jg out pop mov xlat nop (bad) out mov mov push mov es (bad) jae stc adc xchg sbb out dec sub push xor mov inc mov sti cmp (bad) ss and xchg sub inc (bad) mov cmp movsb icebp and xchg (bad) xor pop jb jnp rclb movsb xchg js and pop stc fisubrl pop fdivrs mov xchg push mov xchg repz fwait icebp dec sbb data16 lret inc inc addb ss and insl out cmp aam fnsave aam fdivrs std dec int3 dec icebp jp mov push add popa push xchg popf outsb cwtl dec pusha mov mov lcall xchg pop sbb rolb push sbb js adc test mov adc sub sub in sub (bad) jecxz sbbl xor or inc or scas push push jg pop push ljmp adc pop into push mov repz movsb cmp sub mov insl (bad) sti pop gs mov jno and add cltd fsubrs sbb jp,pn out mov adc add aad jo lret xchg mov int3 sub or iret lahf mov pop aas lods push jbe push dec pop lds add inc jno mov xchg daa loop,pt sti std movsl adc xor xchg les ret xchg sub jno xor inc scas push pop inc (bad) xor int add mov (bad) lds ljmp cld ret mov repnz popa (bad) cmp cmp movsl sub (bad) mov pop (bad) jb mov rcr popf stos lds nop mov add in aaa fild (bad) pop fs push (bad) enter arpl mov sub pop adc es mov push or aaa jl jno inc in dec pop cmp cmp dec (bad) push bound inc test scas pop inc subb daa sarl loope adc or sbb mov int ficoml rorl popf scas mov push jae and jecxz lea jecxz mov enter es push mov sbb dec add lahf mov fs mov lds xchg into cmp in rolb mov jno pop (bad) fildl (bad) push jp insl or in imul jle mov repz fcomps or fistpll lock xchg push popa mov repnz shrb iret add push pop add orb cltd cmp jns inc push push jecxz ljmp cmc xor fucomp ss and and clc or and aad fist add cs scas jle (bad) xor xor loope arpl (bad) push jge sbb movsb jle dec xlat add in jb mov sbb mov mov cltd push fcoms cmpsl xchg sar mov jb gs xlat inc sahf pop ror int or iret fiaddl test pop movsl mov ret sar stos cmp icebp jge imul (bad) cmpsb repnz icebp pop inc sbb xchg sub jns add jl and mov mov sbb and xchg (bad) push mov pop pop out aad xchg sbb (bad) xchg es cmp mov add mov pushf insb dec insl cmp push push nop test pop idivl cwtl xchg int les imul sbb and cmp arpl in lods pop dec adc push xor pop push xor sub pop or repnz lret imul int3 xchg jecxz xor popf dec sbb mov sub in data16 add or bound mov lea daa pop (bad) pop add inc data16 rcrl dec fbld imul adc lods test dec ret add ficomp hlt lret mov nop popf and fwait and outsl mov cs mov and jno dec jle and imul int dec mov mov fild jne push or mov jno xor into or mov scas repnz insl sti lock imul lea jg repz das sub repz dec test in imul sbb test xadd jle ds adc cwtl ret sub (bad) and or mov dec add add mov jae movsb or enter and ds lret sbb jne push mov loope mov pop mov adc add or or aaa dec dec clc jle lahf sbb mov and inc inc in test mov mov popf cli xor ret mov cmpsl test sbb loop pop dec xchg xchg lcall cmpsl mov and xchg jp cmc pop push lahf out mov out clc push fwait (bad) scas faddl lea pop sub sahf jnp imul ss sub sub cmpsb cli mov jb bound dec adc mov or pop lcall cmpsl pop mov jp outsl (bad) fistpll scas dec fimul daa sbb nop adc les dec mov pusha cmp mov cmp and mov cmp inc int mov mov lds adc and xor shll pop mov repnz push or jns push xchg pop or lcall (bad) movsl in scas mov in mov mov pop (bad) decb mov xorl jp cmp int sub jg movb aaa mov out daa pop mov rclb jp cmpsb sar fwait mov ss adc repz push imulb cmp ret xor mov mov scas jae xchg jmp or push adc lahf scas cltd es sti push lcall xor (bad) (bad) fsubrs or lea jecxz pop aad int3 test fimull ret xchg stos scas idivl cltd in push mov push (bad) fsubs mov push or mov imul mov jmp xor sbb in cmpsb insb push in lret lret loopne jbe mov xchg pop insl pop mov ljmp enter stos cmp fmul cmp repz nop jo popa enter jl mov add sbb jmp jge mov cld jno icebp inc pop cs aad push (bad) dec test sub adc xchg pop xor cmp rorb daa lcall push inc and push in aad movb aad inc dec popf add arpl pop lods loop mov outsl sub xchg pop xchg add pop mov ss mov loopne sbb mov mov ljmp lds lea inc dec sub pop jo mov in jns pop add xchg rolb cmp mov rorb cltd mov cmp mov fcmovnu fs orl ret rorb repnz add jp xor cmp mov or cmp pop jmp push xchg xchg aam dec pop aam jb adc out jge xor aad aaa das mov pop imul xchg adc and cmp mov push cltd jns cmp aam dec xchg xchg xor jle shrb mov lahf int or push daa jmp aas sbb imul xor push fsubs jne pop mov aam pop (bad) jbe,pn push mov mov dec inc push xor adc sub in outsl mov icebp (bad) lret add movsl stc xchg addl aaa ret (bad) mov jno popa push test fmuls addr16 inc sbbl stos push addr16 push hlt ret adc add callw xor lods js stc repnz inc sbb xor mov jmp inc adc mov mov dec push ss sub mov sar cmpsb ss mov movsl adc mov sbb into jns or sbb mov (bad) mov dec mov push mov adc xor or inc xor scas int cmp add mov pop mov stc repnz mov push push roll call ja jb les mov mov stos cmpsb dec int insb unpckhps lret xlat pop pop ret movsl xchg popa les or xchg push clc (bad) mul lret or mov movsl mov dec repnz addl jg std shrb xchg or test cwtl xchg (bad) cmp jl or imull rolb pusha (bad) mov xorl add pop (bad) dec (bad) sbb jne mov or pop adcl clc add mov aas dec loop sbb push sbb push xor mov push enter cwtl and xor lds inc in cltd fdivrs pop push dec fwait ret dec mov pop push es mov pop popf dec aad fistpll mov mov (bad) pop xor das lahf and dec lods pop sbb mov mov push pop xchg test push xchg (bad) repnz push test in push push out pop incl decl mov jo mov add fnstcw in and sub cmp fimull sbb mov cmp cmpsl imul out push mov or enter xchg jle push cmp ljmp test mov jmp or cmp dec sti fwait mov cmp nop andl je jnp and icebp notb or pushf into pop push mov pushf daa jge scas cwtl sub inc adc push adc lds lret mov pusha dec jg mov sar mov dec (bad) mov mov bound xchg dec jae (bad) aad pop xor inc fnstsw or repnz ds daa cmp ss sbb xchg in xchg insl pop inc stos repz sub cmp fstps int3 aad mov out cmp gs or into mov or xor lods push cmp lcall pop scas test xchg or xor or test xchg insl (bad) xchg insb in lret pop stos flds cmp stos pushf dec movsb mov into adc iret popf pop xor jmp push loopne mov jmp cwtl pop dec sbb repnz mov adc push adc sbb imul cli add jae (bad) loope (bad) aam xlat push fmul outsb sbb loopne mov jb push sahf fs adc inc xchg (bad) mov (bad) mov (bad) mov fldl pop mov jno stos inc cli fnstenv xchg in sub jae push ja pop jne dec pop cmp adc clc and xchg lods aas sbb jmp (bad) sub inc mov divl ljmp jmp xchg mov aam mov push mov mov or dec xlat inc jne jecxz icebp pop mov mov cmp ljmp leave rcrl cwtl scas push push inc in mov idivl mov jp aas scas add enter dec mov jbe cmpsb jp cwtl dec into dec xlat arpl jne insl out jnp adcl enter sub sub push les cmp dec mov outsl mov fcoms mov les mov cmp mov sbb sub sbbl inc jg lcall or fs lods (bad) mov sbb mov dec int decb aas adc test cmp sub cmp dec mov xchg jp adc es pop sub mov push xor inc mov stc into xcrypt-ecb cmpsl bsr leave mov and fbstp push and jo (bad) ret or inc enter jnp daa test push mov adc adc sahf add sub inc mov jb add xor jmp sbb std ja jl dec fildll fcomip xchg mov test jnp dec les inc aam loope add pop (bad) mul mov mov mov or loope fstpl nop in add gs pop push loop notl jg outsb xchg aaa inc fdivrp outsl scas das repnz cwtl jecxz fimull jl inc jp and negl mov xchg add pop inc imul add or cli call ret cli outsb pop adc js push cmp enter or jmp xor out pop push xor fbld int3 ss mov jne mov jae mov xchg and test adc mov popf cld pop les push pop test jecxz or (bad) lock sbb xor or add add mov lea nop pop mov test jne (bad) mov pop sub dec lahf xchg or and xchg lods (bad) or (bad) outsl fs fwait mov sbb fdivr cld (bad) scas push or adc adc out ret and aam pop arpl leave sti or add push stos mov sub add sahf and inc outsb aaa addr16 cmp dec pop ja dec jae pusha or dec lods outsb dec or js sub ja or dec cmpb ss mov lret jae jg and fildll ss into ficom jecxz insb mov iret negb inc pop into dec push nop mov (bad) aaa adc arpl fnop dec pop scas cmpsb xchg adc push xor sbb fcmovu rcl pop popf pop sti les pop fcmovnu fisttp das sbb sbb xchg loopne js lret jae pushf scas adc xor mov dec sbb sbb dec push imul add push aad mov arpl rcrb push popa pushw push add scas mov pop mov lods jle dec dec mov lret pop addb cmp and sbb add stc sbb fimull outsb adc push ficom sub inc xor gs sahf dec frstor repnz addl ljmp sbb addb rcl mov xchg call orl repnz leave cmpsb inc fist test mov (bad) adcl cmp cld pop lldt ja push cld shrl je sub push add sub jle sbb in int or (bad) pop shll test xchg cmp les in fisttpl fisub adcb fildll movsl inc adc cmc jmp push dec lock rclb push sti outsb and mov sarb out lock add mov push imul in (bad) ret test xor push push jl test push in imul push es scas push xlat dec in mov mov xor scas dec push sbb push ljmp fcmovu cwtl inc mov pop cmp mov mov rolb stc sti mov (bad) add lahf cld xor jae arpl jecxz mov sarl xor mov cld push pop mov out inc fwait repnz daa daa sub xor mov pop lret adc sub lock cmpsl out xor sbb mov loope cmpsb popf popf (bad) ss cmpsb (bad) xor pop (bad) mov sub cmp or xchg cli imul nop sbb jbe lods push insl fstpt jmp aad lcall jmp jns inc mov jns mov inc sbb into (bad) nop aam xchg dec nop mov cmpsl gs clc cmp mov leave int3 mov or jecxz or and push data16 test cli fnstenv and or in (bad) sbb cmp movsl lds push lods cmpsl mov out jne stos insl dec rcrl clc mov mov orl sub lods inc mov cmp push and push cli inc lds lods pop jp sbb out notb scas or ret xchg stc dec out sti mov nop leave repnz add and mov loop fistpll es cltd popa aam mov jmp mov sarl dec dec das sub add adc jle dec sarl lock mov push cmp push cmpl jg pop dec mov xchg adc xchg dec jbe cld into sbb jp loopne addr16 and aad inc cmpsl lea xchg fwait sahf mov pop pop mov and jmp mov xor and popf lods rol je stos sahf mov sarl out rcll mov cmpsb out data16 les sbb cs push mov push cli mov xchg pop mov sahf js xor mov inc js push jmp sar enter or mov and jmp push das jle pop mov pusha pushl cmp xchg inc mov dec jae xchg push add in nop add stos sub pop cwtl jmp jmp movsb mov and stos out lcall mov dec bound out (bad) cltd inc imul adc push (bad) jmp mov call and cld mov jns fistl ss lret in jbe xor add call mov adc cmp mov lahf icebp idivb jmp or mov mov cli (bad) sbb jno and dec pop mov dec test or (bad) aaa insl (bad) pop sbb mov cmp mov lret stos sub mov and and push fstl xchg test jo in loop mov cmp jne sbb ja pop dec xchg sub adc cs out sahf cmpsl xchg dec out cmp and add rclb lcall insb ds inc cld ss mov pop or iret inc (bad) cmp or inc or fistp jb lea mov (bad) adc insb rclb je cmpsl sbb adc inc int sbb sbb xor aaa jne lahf out pop add or mov mov xchg mov lahf fcomps aam pop pop pushf cld mov or enter pop ds adc sub xchg out icebp dec stos bound scas xor in xchg adc push push jne ret mov pop daa and addr16 iret dec pop aad push andl in out xor sbb test je mov or lods cmp push popa mov push mov cmp pop cmp ret les cld fs outsl push jmp sub into add sti cs ljmp or push adc jns cltd inc cmpl mov cmp popf aas iret xchg xor test ds mov jmp rclb mov lahf in fadds insl or repz jmp (bad) fsubrs xor adc cwtl icebp outsl cs cltd lahf movsl xlat lret and (bad) loope mov and in mov imul add push mov lret xchg or pop mov and inc jp push pop scas mov fistp into loopne xchg mov cwtl jmp sub test int3 daa xchg movsl push jae xor enter scas das fs mov das dec insb sbb fildl mov mov and add in in add lret ret jnp (bad) das mov movsl mov mov in jne test adc mov fs loop scas lret mov mov and dec divb sti cld clc icebp rclb push jns jecxz xchg test ffree inc (bad) jnp int mov inc dec xchg (bad) dec mov ljmp push cmp mov popf push int jge jge mov stc dec popa insl xor mov mov popa inc jl cmpsb pusha xchg fwait or adc mov push outsl dec and movl mov aas in push xchg ljmp add ds sbb jge cli out push mov push sti xchg (bad) in scas cmp les pop inc sub and push adc rcrb mov test ficomp push pop jbe inc cmp bound jp std arpl xor push in repz iret mov add jb mov adc mov cmp dec mov inc xor sub (bad) aam inc xchg add lods jno dec (bad) xchg stos (bad) cltd cld cmp fcmovb mov push sti out cmp sub and pop mov add adc push mov sti push mov xor mov stc ja pop xchg jl sbb gs mov jge mov lods xchg xlat push (bad) loop out jnp sub cmp jnp (bad) sub mov dec push and cli push in mov stos int3 dec fsub sar xor and imul dec pop inc lods jp jcxz (bad) jns xchg insl xchg arpl test pop dec (bad) jne xor rolb test pop repz int fdivrs iret push fs jbe xor xchg add loope pop and sub in xor sarb fcmovnu pop push lret pop jmp hlt out fisttpl mov mov call fsubrl sbb aad push cmp mov je dec jmp xor mov jge cmpl aam adc lock pop je jecxz xchg sub ljmp cli in and pop jg pop popa sub lds (bad) pop push dec push lods inc cmp pop pop ss xor insb loope or fldenv xchg sbb test pop cltd fldt pop jp sti mov (bad) mov push mov imul outsb inc add cmp adc xor imul hlt dec xchg lea cwtl int xchg add push (bad) push cld loope inc push or nop push mov rorl push nop fbstp cmp lds nop lret cs bt adc or sti xchg pop add sbb xchg ja lods nop mov pusha jmp or mov dec bound dec or cmc ja sbb (bad) inc jbe jge cmpsb push xor int3 cld and xchg rcrl movsb in sbb insb xor sbb insl xchg pop imul int3 and adc iret push sbb stos fist pop gs lods ret sub sbb loope iret jp iret mov mov pop js cs dec sub movsb shrl mov pop and sbb and add inc sbb (bad) fwait aam adc xlat daa test cmp xor push push das sub mov movsb test cmpsl outsl sbb ret hlt push scas inc xchg das cmpsl xchg (bad) mov pusha cmpsl cld mov push sbb popa cld fisttpl push sub dec in jne mov mov sti mov scas inc jno (bad) mov ffree enter jns mov in jl les mov sbb test bound and (bad) pushf fnstenv (bad) fild add sbbl push jno shrl imulb xchg aaa sbb cmp push int das in mov mov add xor rcr test cld repnz xchg je dec dec int3 mov jle stos push (bad) mov pop xor add stc bound or movsb shr arpl pop mov sub (bad) in sub ljmp mov mov lods dec add pop rcr (bad) out xlat andl jecxz arpl sbb jae subl xchg dec jge xchg xchg push add outsb dec inc inc fucomp aad push dec imul xor sbb (bad) jbe cmp enter push push adc fcmovnbe out jg inc repz out sahf xor add movsb mov mov jp movsl out push cli xchg xchg sbb pop mov rcrl xchg dec sub xchg xor mov sub (bad) jno dec lret xor push lahf fsub add push lret push pop dec sbb stc pop adc jmp sbb push sti loope xchg sbbl dec dec adc aas adc ja cmpsb ret sbb jno jbe lds push shrl push pushf inc jmp jmp dec sarl pushf or (bad) jae movsl mov rep mov testl and js add xchg pop mov mov ror stc cmp inc lods xor loope jg jae fwait scas mov ss jecxz and adc push inc add push aad pop clc push sbb stc clc pop add jp lahf ret sub scas mov xchg mov xor jge mov adc and arpl cltd push aas jmp xor movsl and jo jmp arpl push mov add adc into cwtl xchg push mov outsb pop and mov push mov pop xor ds mov mov pop adc in mov ror dec scas push pop repz repz popf cmp cmp xorl inc rcl repz (bad) (bad) lock fmuls add cld jns mov scas movsl loop das arpl jno fisubl pop arpl cld pop push ret xor xor mov popa or mov xchg sub sbb cwtl xchg add inc lods sub xchg rcrl xchg (bad) loopne in ret (bad) xor add xor jge lods push xchg loope fdiv cmp sbb les dec dec mov insb pop into aas stc je divb jmp mov test js (bad) stos popl lods jp mov xor (bad) (bad) push loopne sbb outsl cmp adcl add xor pop imul movsl pop mov rcl les sbb les icebp test pop dec xor and dec cs or outsl pushf das push data16 xor fwait js add and stc xchg arpl enter and ss outsb je xor testb stos lcall jg or out dec sub ljmp std mov sbb lock clc bound repnz xor int loope cmpsl xor pop dec std (bad) and in cld sbb adc cmp jmp mov cmpsl and or pushw cwtl xchg movsl pop cmp mov sti arpl pop es test mov pop jns adc stos pusha js int and push pop sbb ja stc (bad) ret lret das mov cmpsl cmp faddl xor pop addl out sbb adc push pop shr xchg dec mov inc pop dec (bad) mov lds cs hlt dec inc xor sub mov (bad) jae in cmp xchg mov ljmp lock mov rolb je fwait test rolb test mov out test fidivr jno mov ret (bad) repz cmpsl repz jg into and sub out inc dec inc xchg ret xchg dec mov scas es inc cmpsl push mov neg inc mov sub lret in subb mov or out imul adc out sub jb jns xor out mov je mov fidivrl mov inc movsb mul jmp fcoms in daa dec xchg sarb repnz push adc out data16 inc popa stc xchg sbb xor outsl push out dec pusha pop push mov cmc mov add sbb loope pop stos and popa lds inc xchg repnz jbe push sarb test mov outsb pushf mov pop mov bound pop mov cmp or mov sub loop pop xchg push mov aam fs pusha mov divl adc sub test lret repz addr16 subl das scas sub push and arpl cmpsb sub lcall orl xchg or and xchg and pop inc dec or add lahf push inc xchg into dec fisubl sahf adc cmc inc std xchg inc (bad) std inc and fcoml arpl les push aaa repnz data16 push sbbl jo mov sub xchg push sbb fldenv int push xor hlt mov or cmpsl hlt add (bad) mov inc jge xchg mov in jbe xchg cmpsl push popa add xchg push jmp inc (bad) xor and mov mov cmp lret push clc sbb pushf cmp jne cmpsl pop or cmpsb add scas test jb and xor ds pop jo sbb pop lret jno jnp push jle (bad) je cmc adc inc gs stc (bad) dec push addr16 inc cld cmpl xchg into iret and push popf xlat test xchg fstpl mov aas sub lods shrb loopne je lods inc push decl xor add call jecxz and sahf cmp cmp bound int3 sbb leave mov lret in decb jg ss jle iret aaa call (bad) aad mov aam jp je sbb icebp stc jecxz and push jnp mov (bad) push sub ja ret (bad) push (bad) ret (bad) xchg or push lea xlat inc les test (bad) enter sahf xlat pop aaa stos mov mov lret cmp sbb fst scas enter enterw mov data16 add cmp pop call or (bad) xorb loope js mov test pop push lahf cmp scas adc addl aas outsb mov imul movsl mov popf das mov stos cld hlt push mov adc jne mov pop and and shlb jnp jb xchg pop lds sbb insl es inc cmp adc popa jge xchg sub pushl rclb xchg mov inc pop xorb fmull jno sub pushl mov dec iret jle inc and push and scas xchg fildl or push fiadd jg es imulb cs (bad) fcomi test lret sbb cmpsl into movsl (bad) vmovss and cmp mov es arpl ss (bad) fucomi jl adc popf outsl and inc ljmp in std js inc fs and data16 les add (bad) cmp sti fisubrl cmp jp pop cmp mov sub lahf and aad incl jae add push jle lahf xchg push push rep cmp sub dec jp xchg adc aad xor dec mov fs sbb sbb push cmpsl jne lret xchg pop mov or pop xchg test imul mov sar sbb add mov pop cmc lret clc or mov pop in adc icebp and sbb in vunpcklps mov mov data16 jge (bad) int3 stos cmc sub mov jb arpl or (bad) adc adc arpl inc push rcll in fmul pushf jmp pop dec mov (bad) push xchg mov or xlat cmpsb loopnew mov imul and jle into outsl xchg pop test out jae adc cmp push sub mov nop out out (bad) xor scas fs sbb clc (bad) negb pop (bad) in rolb xchg xchg in jecxz jg cmp loop,pn flds arpl cmp lods (bad) ss dec dec (bad) sub mov int3 mov sub mov loop mov add push push mov pop xor test xor jl (bad) mov hlt pop daa and cltd jge out sahf (bad) mov push mov loop addr16 orb loopne mov cmp cmp daa pushf dec jge or sub call jno insb leave clc imul pop loopne push and add ret jo push std in mov adc dec pop mov les cmp mov xchg jle pop jae mov cltd adc stos movsb (bad) adc sub jns push icebp insl pop mov push mov pop (bad) xchg pop sub (bad) jns imul cltd xor lcall fwait pop (bad) mov mov adc jnp shr inc xchg cmp fisttpl mov movsl test xor loop dec pusha or cwtl int inc inc mov cmp call and push fnop stc mov mov int pushf dec xor repz adc movsb mov mov aam outsl (bad) pop aas scas popf pop mov pop js xchg es shr (bad) cmp xchg cld mov and lds ds aad pop push loope std mov pop pop and mov rcr jl pop add mov mov lcall nop cmpb jno or push lea sub cltd or in inc stc test popa test pop dec in mov jae cwtl add jecxz or mov pop daa insl sub dec dec lret mov xadd (bad) sbb or mov sub mov gs cli and fistpl scas loopne std or fnstenv decl pop jns dec sub sahf add pop mov loope ds or jnp cmc lahf or out jmp cmpsl cmp fcmovne inc jnp sbb xchg ds ja scas and cld int3 and in pop (bad) test sbb into test das loopne fmuls rol test mov inc mov and jne (bad) sub in jle vsubss adc shrl or pavgw imul and fwait aas dec call popf mov sbb dec sub aas cmp pop sub push pop rol push mov bound stc lock in lahf mov dec and in sbb lcall add loopne lods movsb pop or or dec mov in enter fdivl fdivr xlat jnp sbb pop and enter jne sar or jl int sbb in jmp xchg divb inc mov jge xor f2xm1 icebp adc in loopne pop lret jno mov out inc movsb ror lods int sbb push add movsb jl bound movl cmp fistpl lods stos lahf mov test or (bad) jmp scas imul test mov jmp adc es aam push adc hlt inc sbb ds test dec mov add pushf push popf xchg xor test fistpll sub mov rcrl cmp cltd insl scas (bad) push jno sub xchg ficoml std push xor dec mov jmp and adc nop inc cltd xchg lds ret or cld loop stc cli xor mov jg xchg jl jno pop stos xchg xor pop cmp adc push outsb jno jmp push repz xchg pop mov dec das in loop jl push lret and push push mov call or dec dec stos out clc dec add cmp xchg sub ds fiadd shll aas (bad) daa pushf cwtl and mov cmp adc into cmp in dec movsb mov inc into cmp movsb cld add cmovne push push add test test mov jge movsl nop (bad) rcrb mov int adc or sbb pop (bad) lret out int3 aaa pop sub cmp hlt inc aas lret jecxz loopne sbb insb inc (bad) ret cmp sbb adc aaa repz mov xor repz lods (bad) popf sbb and negb sub xor clc or pusha push and push loopne mov or test xchg add add insb icebp add mov (bad) call jl adc shrb loopne ret enter add mov xchg dec lcall cmp xor test mov clc cltd or out (bad) mov shlb xchg or inc xchg fs ljmp jl push mov scas adc lahf movsb mov or das xlat adc arpl stos xor out push mov ret insb pusha jne jmp fdivl das je xchg push mov aad fcmovnu dec in sub mov dec in mov call aad adc gs jb in cmp mov fnstenv xchg jo push (bad) mov sub xor adc pop or pop jbe ret fdivs xlat inc arpl leave ja or cmpsb daa cltd sbb push frstor test rorb mov mov cltd insl es repnz (bad) jp mov xlat sub call cwtl xorl mov jl movsl dec jp test insb pop jb pop pop mov or in xchg jns stos add xchg in js das cmpsl pop pop cmp pop in jae jo out add jo mov cmp cli stc lock negb or and sbb (bad) callw adc add ja ret dec adc inc add aam mov lret lcall stos xchg call data16 xor cmovge in cltd test dec ror popa jl bound xchg mov adc inc push push outsl mov popa add pop repnz adc jne fdivrp pop sbb sahf add jb (bad) lret mov mov aad xor clc jmp inc pop das cli hlt dec cmp in outsb jbe dec cwtl jns xlat fimul pop out add mov pop outsl push addr16 rorb mov stos pusha inc dec jns mov cltd push gs mov xor sbb inc ds in inc sbb lods scas subl mov inc mov insb ret test inc xor and jb add pop mov xor pop out sub test mov aaa sub cmp or mov add dec out cmpsl mov pop test sub rcl ss outsl pop mov mov pop add adc (bad) push aas adc fwait push scas pop pop add repz lea clc mov data16 popa sub add arpl lods adc in xchg stc rclb repnz lods add (bad) dec repz lock pop mov jg fcmovnb movsb ss and icebp adc pop pop xor mov pop gs (bad) cltd jno test and dec fidivr mov xchg mov lcall jnp mulb movsl int xor in add (bad) rclb mov pop inc outsl mov clc lret push in fildl mov mov and les rolb int3 push sub mov push loope pop inc sbb and xchg add add clc pop mov aaa dec nop sub and mov push jnp ja mov push out inc pop les push or xchg jmp push (bad) cld add mov xlat pop sub sbb cmp dec pop popf adc mov pusha scas xchg loopne mov insl pushf lods xchg mov int3 mov mov mov (bad) dec and inc imul and out ret jnp popf dec call dec xchg bound xchg or int xchg sbb pop icebp xchg movsb notl mov jno std or pop ja jle push movsl cmpsb movsb and dec mov cmp mov in jp es pop cmp rolb sub aaa test dec mov mov xor and jp push aad fisubrl mov pop jecxz int shll leave addr16 and or cmp enter and pop push insl inc mov jle mov push fsubp sbb cmp cs leave mov mov mov les inc or mov ret sub xor mov and pop sti mov xor jge stc out (bad) into pop enter test jb sub loop ficomp jmp or sbb jo fwait mov push and xor mov inc inc mov out out out sbbl fisubr cwtl (bad) mov mov sub sti ret jp (bad) dec mov movsl adc call out lea ficoml mov lcall inc and scas cmpl test loop inc enter and dec insb lock jb xchg mov mov dec push sbb addr16 push stc cmc jne stos popa sub lods xor in lock lcall pop outsb fwait push insl bnd adc (bad) push cld test mov das cmp loope cmp xchg fwait mov test fxch outsl dec pop nop aaa jge aad repnz je jae movsl test mov and push jne mov gs pop popl inc push fsubrs loop sub bound repz pop pop call cld push sbb es xor jmp xlat imul mov push add ret xchg xlat push sbb mul addr16 xor out aaa ss std test xchg jns pop insb addl mov rcll ret mov das insb in (bad) jecxz xor add in fwait js daa dec movsb fxam cmp mov les mov sbb lock xorl shrb pop dec outsb in dec inc std fs sahf sbb xor int push push insl lock jb mov test sub sub fsubrl stos cli and and dec lods ss mulb mov sbb fnsave outsb add loopne aaa or nop lock sbb stos xor in sahf pop test mov mov mov rolb dec inc mov cmp cwtl mov push xchg ss jmp cwtl dec (bad) jnp mov mov mov stos les data16 cli ss jbe in add and ror movl sbb pop jnp dec sti cmp mov dec stos push adc cmpsb or lods ficompl adc add repnz mov pushf mov mov cmp lock jo pop sbb divl fwait testb xor xchg mov bound ret add xchg cmpsl sti mov xchg inc sbb mov push pop movsb sbb sub int3 (bad) and hlt gs (bad) mov repz in or pop jbe (bad) stos inc mov ljmp jae push lds mov and (bad) test stos mov adc mov aad add movsb sbb outsl rorb add push push test jmp test lret sarb or xchg call icebp addr16 inc pushl xor fs ret xchg loope fild cs decb rcl outsl adc cmp add jg pop das popa icebp sti icebp sub mov cwtl or sub jo faddl and aas out adc lahf gs test push jecxz fnstsw pop jnp adc repnz mov and jle mul std add push push sbb jp daa push mov test push test mov mov sbb jl sub (bad) ljmp xchg imul mov xor sub arpl push push lea jle fwait test shl gs and jle (bad) lret fisttpl dec movsl sbb xor jecxz xchg adc outsl stos mov sbb mov decl jg sbb cmp add dec (bad) jo fdivr sub test out push test je int hlt leave sbb mov stos cld aad bound mov push xchg mov mov popf out jp jbe mov ret clc add jl,pt rcll mov push stc pop pop cmpb push cmpsl outsb sub fidivl dec fistpl dec int3 jl xchg xchg xchg lods enter sub test leave mov mov mov aad fidivr shrl aam adc in sub out divl (bad) or scas or jl xor cmp jns (bad) cmpsl adc jl std popa pop ljmp jno pop rcrl push sbb and (bad) into in push test rolb aas xor bound (bad) lock int pop push pop adc movsb mov fs out ret xor dec or cs pop cli adc (bad) pushf data16 xchg mov inc lahf lcall (bad) scas pop inc stos popa push pop inc lcall addl ret xor data16 inc pop icebp jbe pop or add push jp,pt push aam xor pop (bad) mov ret sbb push cmp mov jg fcmovnu add cmp rolb scas bound sbb int3 inc push ret cmp (bad) int loope iret std in pop lds int3 xor test arpl push jmp inc xchg sub pop ret mov push std push mov xchg in inc sbb dec negl rcrb mov cmp jecxz insb xbegin mov rcll dec mov push std es inc std or sti incl movsb mov rcll jecxz popf leave fld mov pop fdivrs inc lds imull lret jl or aam test inc addr16 push data16 xchg cmpb pop xor iret scas or repnz dec gs push fsubrl je gs shll leave xor push flds sub es sub ret mov popf sbb xchg pop and adc dec xchg into imul and push fimull daa mov jmp les lods sub fisubl mov lcall and faddl adcl mov and mov enter (bad) int3 les lcall outsb cmp or push add in lock je (bad) push xor push sub lret imul imul cmp fdivs cltd lahf jbe mov lret dec aaa sbb addr16 repnz adc aam pusha push mov inc in les pop adc ja adc lahf inc and inc pop adc ss nop aas stos xor dec mov dec div jns ss jl mov sbb mov push dec mov mov adc test pop (bad) xchg jecxz jne push (bad) aas stos repnz fisttpll bound popf pop ss mov (bad) cmc jmp add into pop push div pop cmpsl rorb test mov fs nop xor mov or adc clc push aad cmc dec fwait adc aas or jbe xchg mov sub sub scas rcr scas or pushf inc add cmp xchg sub pusha pop sbb fdivrs fwait call jno jmp inc aad jle testb lret imul mov xor fsubl movsl iret mov lods xchg loopne sti pushf js xorl stc fs ret loopne js loope jle push jbe inc cmp mov inc rolb push fwait std mov cmp jnp imul (bad) popa sahf fbstp leave lret std insl cmpsl xchg mov push (bad) stos jbe pusha loopne decl fistpll pop xor nop adc and loope mov pop loop xorl cld aas inc and push lea orb xchg pop lahf pop cmc fnstcw pushf in lods popa outsb inc shlb add cmp xor or cmp sub cmp (bad) in xor adc and fldl popf xbegin push pushf in inc mov push and clc int3 push xor mov orb test jnp and jnp pop adc mull dec popf imul push fs fimull push or xchg dec sbbb insl mov test in sahf imul in scas push fwait mov sbb add ljmp sub fildl lods cmp xchg cmpsb inc jle,pt aad push xor xlat ds lods sbb (bad) push test lea fnsave push arpl push shrb lods jnp out push (bad) aas lret fisttpl cmp repnz inc xchg inc mov fstl mov adc into sbb mov mov sbb pushf enter ret sti or mov aad jnp dec xchg (bad) aad (bad) xchg call sub xor fwait mov jno jmp xor adc adc aam push outsl stos inc mov xchg pop (bad) mov mov std push inc fmull mov hlt fsts jbe aad pushf mov fucomp mov push jb fwait sbb aaa repz icebp add bound outsl and popa sbb mov push int3 fbstp mov sub pop pushf aad (bad) cmpsl loopne das int (bad) ss test addl das inc ss cld add and mov and or icebp nop inc cmp push fcomps lods das mov xchg (bad) cmp ja dec movsb or ja in inc out loopne les insl test movsb in test and ds jle cmp sbb call orl lcall mov fs mov fsub mov jae ret shrb mov mov lcall adc fstpt orb cmp jmp fidivr mov cwtl (bad) cmpsw std repz lods imulb xor cwtl push mov inc xor pop xchg out xchg sub fiaddl dec fs movsb sbb lret mov scas mov outsl cwtl repnz jmp dec (bad) sarl loop jecxz add enter cmp or mov (bad) insb push pop enter inc loop jg aam mov jp mov pop add push mov ljmp sbb inc outsl movsb add cld mov xor in out xchg push mov cmpsb nop mov jbe xchg in daa fisttpl push (bad) loope mov sahf test xchg adc pop xchg stc movsl jne fs or cmpl xor rolb loopne sti sub sahf (bad) mov push (bad) pop aad leave sub jl (bad) loopne push or jbe cwtl jg mov mov fidivrl imul cmp lods mov ret jnp enter (bad) imul pop outsb jle imul mov sbb faddl test add sub stos pop xchg adc cmp mov and inc dec inc dec sub sahf cmp adcl movsb sub mov gs mov pushf in push out pop movsl sbb cmp xor sub pop adc pop stos dec out repnz sub in xchg mov sti fiaddl bound in sub or out imul xor dec (bad) fnop pop (bad) (bad) sbb xor loop inc daa movsb lds inc test adc push fs (bad) pop jbe push and xchg jae or psubsw cmpsl inc sbb adc stos mov in inc push mov mov adc pop inc decb stos sub pop pusha frstor lret ret aam xor xor mov ja inc lahf dec mov cltd ss inc xor push push out out lea (bad) xor out xchg int3 ret mov cmpsb rorl test lcall jne mov stos xchg das loop call imul iret push (bad) mov ret lahf ficompl mov mov lds jo in scas test mov add mov jmp aas jge jg adc pushl int mov and data16 jb (bad) aas test fwait lea mov cltd es add das mov lcall or dec mov push dec vpand stos xor inc pop jo arpl pop aad pop ret push adc in fdivr jo int3 or stc out mov xor xor jne inc xchg icebp jp dec adc movsb xchg adcb nop push cmp repz sub inc pop jle lds mov clc imul (bad) lcall push pop (bad) xor movsl imul push pop push lods mov mov lcall popf pop mov aas shl dec push cmp pop push je pmuludq sti scas lret and inc or mov or lcall pushl sti xor ret out mov sarb xchg pop mov inc xchg lds movsb repz es mov loopne lahf push add add arpl fdivl test sar test (bad) add cli aam xor or pop pop cmpl mov outsl mov dec rcrb mov subl (bad) mov mov cmp inc int bound outsl mov push pop cmp xor fcoms rolb mov mov xchg cmp inc pop mov mov xchg in sub stc pop test sub sub xor aam pop mov xchg mov add lods xchg inc (bad) pop push subb pushf mov in in stc and cmp aam sbb jmp sbb lods xchg mov jmp mov rcrb jp stos xchg ljmp mov insl xchg in push and sub subl fistl xchg ljmp (bad) push jge add sar test out pop (bad) or test cli rcl test and mov pushf ret pop inc inc jge mov adc xor les out cmp dec int scas jns into pop pop ficom xor push cmp repz cs mov xchg inc clc fs push sbb lea dec dec pop pop pop cmc aas adc adc pop adc lods push test jp adc mov adc cmpsb mov inc push xchg mov stc jl adc ffreep sub mov rclb (bad) mov insl decl outsl mov and or jmp loope ljmp mov or rorb pop or dec cmc jnp cli iret mov loopne stos ss scas aad fisubl mov add mov arpl fs sbb movsb lcall fisubr add dec lcall or mov cmp cmp out mov daa out pop dec mov cmp add lcall gs ret sub mov inc cltd mov imul push out test xchg out dec pop adc es loop sbb pop rolb and xchg dec ss push jbe mov sbbl daa inc cmpsl cmp sti call (bad) fstps dec lods adc int out daa mov (bad) add ret ja sbb sub mov iret and pushf ljmp outsl push jecxz mov sarb or inc pop out in mov (bad) mov scas das pop and int3 mov cmp mov and ljmp sbb mov cmp pop sar scas jbe dec push movsl dec imul arpl pop inc addr16 dec push jb mov rcll insb pusha imul or loopne xchg test jg,pt dec pop ret push lods bound sub jbe pop add popf push pop idivb mov jno int inc out push sub test popa xchg jnp inc ret or jge out adc dec dec or mov outsb jg nop jg mov inc jp shrb imull mov fninit pop outsl sub sub xchg fisubl sahf jb mov or cmp mov jle mov adc js xlat mov jg test in das ffreep jmp (bad) and (bad) ljmp push add repnz push mov or pop push jo cmp cmp shl adc roll add inc sti xchg sub nop push push sbb sbb mov movsb add fiadd into (bad) mov pop bound ja stc imul pop push dec xor add adc mov mov xor add pop sar in dec addl lods inc int in push mov sub out fisttp cmp sbb mov lahf xchg jp mov adc popf inc dec mov cltd mov out lret sub xchg jmp or das jno jae (bad) lock insl shlb cwtl pushf mov jno hlt jecxz pop inc sbb mov (bad) push xchg and dec xchg jbe sub push xchg std jb lock pop ror sbb pop aad pop jp inc mov mov add enter cmp xor jno clc xchg aad jmp inc ret and stos xor in xor mov jb gs or and loope jmp jns sbb inc mov test mov pop das pop arpl and push lcall fidivrl mov xchg ds xor mov cmc aaa cmpl cmp outsl mov or jbe adc inc ja je ds lock frstor cmp pop lahf imul cmp int mov or pop cmp lds mov nop ret cmpb adc and mov xchg es add adc (bad) and or rorb fs pop hlt mov fmuls mov dec stos test mov push xchg cwtl xor jl (bad) (bad) xor arpl out mov sub cmp fdivrs repnz xchg push movl dec jo not pop mov imul mov push (bad) add xchg inc mov fadds push stos or scas mov daa sbb imul mov pop jno inc out pop inc test arpl repnz dec cmpsb popf pop sahf sbb jg mov push fs lret and loope xchg jo imul outsb push decl xchg aam lahf fiaddl cli cltd fwait lret lods xchg sbb lret sub cwtl pop mull cmpsb rorb js mov jb fildl xor insl sub lods jge inc js outsb pop mov outsl das es dec sub movsb je aam fwait jmp lret in (bad) xchg sahf push in fnstsw dec or shll xor pop sub or ss and and test ss jp fwait jmp clc inc jmp dec and sbb cld push enter inc rcrb xchg mov mov jne adc out or std adc lret dec bound (bad) adc or dec (bad) lock xchg jle jae and mov or fwait sahf inc jne ljmp fldcw add in mov mov lahf roll jnp (bad) ficoml sub adc cmc sub jns arpl into mov and mov in into dec sub dec ret jb faddp mov je jg ds xchg and pop push xor pushf mov xchg sbb loop xor loope sbb (bad) out bound fs mov mov inc or dec mov push xlat aas mov sbb xchg cwtl mov fistl jnp (bad) xchg sbb sbb inc sbb and cmp je mov aam std hlt and jo mov push addb mov inc repz jle push jae mov outsb loopne sub daa icebp insl int dec mov lods (bad) mov pop mov push push mov push fidivl adc sbb fsub push mov mov inc leave cld push rclb sbb xor sahf xor jno and xchg pop fistp ss addb sahf inc ss ficoml (bad) insl dec cmp cltd imul xchg divb ss hlt outsl mov in add hlt lock fwait (bad) repnz xor mov insb dec sbb mov aam xor sbb in cmp sbb push addr16 mov movnti mov cmp mov xchg push inc adcl pop loope pop sub cmp cltd or adc lods xchg das adc and inc mov xchg addr16 jae lcall lret push sarb ror mov or mov fs inc or mov jno sub lcall scas mov sti popf out cmp jns dec sarl enter pop xchg es in sbb sbb push loope jno and push aam xor fldcw xchg pop push pop repz (bad) xlat jns push and iret mov pop out hlt pop js das jecxz,pt jge arpl xlat add mov push ss aam sar mov stos or aaa insl and stos or dec xor dec dec add inc bnd mov aam rolb enter mov hlt cmc repnz pop sub jno fwait inc aad xchg push aas cwtl cli push adc pop xchg xor add cmp roll fisubrl xor ss (bad) adc rorb aad cmp (bad) push xchg outsb loopne in sub lods adc ja or imul lcall sub mul dec repz jbe lea repnz dec jg stos ljmp aaa arpl out sbb mov std mov outsl es and or jge and xchg or sbb mov popa insl lcall in rcll jo out insb les mov xchg pop pop adc rcll mov sahf bound lods mov scas jl enter jmp inc js stos clc test orb and jo jl cwtl (bad) jae xor cmp pop sub cltd rcr jge dec add cmc dec xchg jae mov mov movsl enter mov stos fdivrs adc jle fwait ds xor notb movsl push out mov xor xchg pop gs sub pop xchg jg xchg and enter loope fbstp cmp jb out adc dec mov ret pusha hlt adc (bad) jp push dec (bad) cmp aaa fcmovu or loop jp hlt mov and aam sub add inc loop xchg pushf leave loopne insb xor xchg sarl pop pop push out repz xchg mov add push bound add movsl xor add mov add imul mov test mov popf xchg orl je jbe clc pusha jo mov pop in mov sbb lahf (bad) aad sbb je lods out out xor dec popa jno out loop jae jmp out dec xchg sub ljmp mov das imul lret jg adc pop or ds out pop jbe jo mov insl jbe cmp mov ljmp ss mov repnz xchg es daa hlt push mov inc inc scas push sarl and inc adc imul add int3 mov ja mov shll cmp fldlg2 dec fldenv cmp in loope or add or std or xor jle daa pop adc sub sbb lods int cmp shrb sbb dec cli daa js xor push xchg out fnstenv icebp xor sub (bad) mov lret hlt pop jne int3 mov int (bad) aam jbe fldt scas inc fildl movsb inc pusha and iret adc mov jae mov ret lock sti sbb xchg xchg loop repz mov es std gs ret test and int3 iret jmp icebp inc xorb xor fnop pusha sti add or sbb mov dec repz dec cmp push daa test mov lds mov push sbb pop dec addr16 mov lret cmp mov ss mov jecxz sti and repz mov xchg inc add xor lret cmp mov (bad) lret push jg (bad) xor lcall push adc xchg cmpsb (bad) push mov movl mov push shll lds add pop mov shrl std clc push mov mull stos mov xchg inc adc sbb and jae cmp xchg push or fcmove cli dec xor test jne xor ds enter xchg pop icebp pop and and cmp (bad) (bad) ror js jle call push pop (bad) pop outsl xchg lds xor ja lahf cmpsl jecxz pop mov popa fisubrl mov mov fxch mov mov mov (bad) shrl push (bad) push mov push dec lock adc and add lret lret mov push outsb lret scas dec add (bad) lret enter lahf cmp push sub or gs icebp lahf and pop jmp xor jnp inc gs jl add or jp jno lret aas push adc mov jbe iret dec or je popf es or xchg f2xm1 pop scas sub mul mov pusha sub stc scas mov pop (bad) mov inc push cld dec dec xchg jo lds sbb dec inc popa nop jb dec imulb pop mov cld je das cld or pop mov xor or lds or mov adc xor lods cmp xchg inc stos dec cmc mov xchg or cmp push mov daa dec pop jbe int sbb push pop xchg jp adc jo fwait repz stos ret hlt xor ret mov push outsl xor cmpsl xor movsl cmp mov dec dec adc sub pop sbb mov mov adc xorl lds lock sub xor fistpll test sub jmp sbb add aaa cwtl cld mov add arpl fdivp pop push xor sbb fmull lahf cwtl stc and (bad) sti aad nop push and pop mov cs mov push xchg pushf rep and ljmp mov test into sti mov in mov ret in mov sub xor out mov dec aad loop pop orb sbb sti inc sub dec pushl je xchg xchg dec nop adc jmp imulb push sub sub rclb mov nop jle mov cltd popf pop jno sub cmp (bad) sbb cmp stc outsl jecxz je dec mov iret nop aad adc push xor leave rolb xor cmp pushf pushf ud2 mov das mov hlt add inc inc cmp mov mov push xchg mov (bad) cmpsb inc insb xchg cmp mov dec jle cmpsb push xchg and loope add movsl cwtl sub shll jle sub mov gs repz out add scas negl std in out mov aas jp stos dec jae mov xor out cmpsb inc xchg cltd sub cltd in in pop and lahf popa ljmp insl daa sub and sub sub sbb mov push out sbb lahf xchg push pushf xor mov pop stos sbb rol lret jp pop out fildll (bad) inc fcomi jae xchg cli lea movsb fwait insb xchg rcr iret dec pop push (bad) jno push gs and nop pop push push dec xor iret and sbb ret and dec sbb aam repz imul icebp (bad) movl test push fstps jno mov jns jbe xchg mov mov imul cmpsl repz in icebp (bad) xchg mov scas aas sub cli mov inc dec fadds xor dec leave repnz xor mov lods push rcrl (bad) jbe pop sub xchg push sub inc mov outsl jecxz pop push mov lock fnop and test and cmp lock mov (bad) mov sbb (bad) arpl sub cmpsb repz adc push iret lret scas outsb sti jnp in sbb dec and push push rorb leave mov lods mov test leave mov inc gs ficompl (bad) incb in imul (bad) push stos ror jecxz les xor dec les lds pop stc repnz xor enter add mov rcll xchg pop mov mov cmpsl insl xchg ret add ss mov mov cld pop daa hlt stos xor lds fistpl xchg sbb push or (bad) lcall aam jns fstl mov adc push mov jl je call or es push xchg enter jnp jbe imul add dec cmpsb pop fstl cltd imul xor adc shrl add mov jp or into (bad) mov ds ret (bad) in push pop imul fistpll iret in loop and les (bad) mov push cltd into imull sahf add stos jp xchg sbb lret notb push jne jl push inc add mov push adc or or lods dec add or pusha adc outsl mov mov sbb mov test pushf mov push inc ds rol call test add jl cmp addr16 push test out imul mov pop push cmp rorl pop aam xchg outsb or icebp jo out cmp xchg les (bad) iret les dec xchg addr16 ljmp xor sbb mov push popa mov mov lret pop mov sbb sbb aas js (bad) mov xchg adc andl lahf icebp rorb int3 sub pop mov movsb mov lcall movsl fs lcall fsts cmp ljmp scas insb repnz sbb hlt lods sbb jg dec incb ficom xchg int3 test rcl sahf mov (bad) test and mov fisub pop out lock lds inc mov push stc or jne orl fistpll xchg int push sarb (bad) jp rcr outsb and in push iret frstor fldcw adc pushf ja mov push andl pop cmpsb mov xor xor adc jle push inc add dec xchg xor jnp lahf repnz push aaa add repz sbb mov push pop das mov jno adc xchg or rcrb bound test dec lea push mov mov pop dec (bad) adc sub or xor scas jo andb sub and xchg ret pop inc scas mov mov and adc movsl adc insb fs pop add call scas xor cmp test das test lds lahf adc pop cmp std aam add xchg inc push jmp and daa fs sub pushf push dec lcall inc cmp std (bad) int xlat pop out pop rolb stos test sub out outsb popf or fistl push rolb xor mov pop sub cwtl or jecxz xchg xor in dec jl jle add les lock inc (bad) test fnstenv pusha fcoml sbb imul sub sub gs aam rolb mov lds sete lret (bad) (bad) js test stos push (bad) (bad) mov stc (bad) ss and (bad) push dec mov fdivl jge (bad) mov (bad) repnz dec popa sbb mov je leave sbb rcll fs xchg dec das or rcr ss ret xchg into enter pop popf jle imul (bad) shl adc or inc fcoml aad dec sub mov ljmp cmovo int3 and inc mov push sti ret fucom or and in xlat push or (bad) or sahf out cli cmp inc adc jecxz ficoml int or pop cwtl add leave cmp jl mov add addr16 js std (bad) in les cmp pop jecxz sbb inc xchg ror rcrb mov aad add sbb outsb inc lcall cs inc popa (bad) pop scas dec and (bad) popa imul dec xchg loop push jns push notb int3 xor jae call mov cmp mov in outsl cmc loopne mov out and loopne test cmc pusha jle adc add add mov mov jnp icebp nop fdivl push ljmp cmc dec add stc xlat xchg cli loope lahf jbe sbb cld jne sbb inc mov roll (bad) inc ss insl push fnop (bad) sbb mov fildl pop fsubl jecxz test popf decb sti scas jae push stc test cltd push mov mov mov or je sub xchg push mov (bad) repnz mov dec mov lods repz fwait inc lods scas leave mov iret popf pop mov xor adc ret or clc enter mov xchg mov movsb cmpl or das dec imul push adc bound adcl mov (bad) or jns lcall loopne jo mov mov outsl lds and lret jb mov jo aad add dec das pop or push rcrl sbb fcomps vmulpd js sub lods mov scas loopne cwtl jmp pop xor push pop fs mov jecxz imul jne push mov popa add dec mull cmpsb lock mov xor mov jge (bad) xlat pop aam sbb inc jno sbb test sbb int3 pop test or aaa test loopne out xchg imul sbb (bad) js into sub sbb pusha (bad) or pop xchg mov push jecxz add fidivr cmp loop xor mov fmuls in jns xchg cld popf dec shrb add sbb and fsub pop sub (bad) jo lret ss xor notl mov (bad) pusha lds dec push mov dec bound xchg in and out inc ja out fistp push or or mov push fist imulb (bad) sub lahf mov push add idiv jl setbe dec and test inc arpl xchg lret jne dec cmp push push sahf mov xchg sub push jecxz adc sbb cwtl and adc push cmp mov aas imul or lods loope lds inc (bad) roll xor fxch cs cmc dec jle ror aam cwtl iret jno int3 xlat (bad) mov cmp mov jb sahf or (bad) repnz gs (bad) sbb add out popa clc mov scas in repnz lcall fcomps push inc jmp mov inc std je and push out xor push test dec lret imul push in (bad) mov scas xor mov fdivp xchg jecxz mov sub jmp icebp xchg leave sbb ficompl jno mov adc xchg into lahf (bad) psadbw cld dec aaa in lock sahf mov and sarb (bad) dec sub ret test inc je lahf xchg lods movsl xchg cli add gs and rcrl inc stos frstor movsb mov dec or dec mov in outsl jo rclb ficoml lret mov push mov push cltd jle fwait int3 popa or shrl jns jbe fstpl push inc (bad) mov int3 mov xlat or dec enter sub push jnp or add dec xchg dec dec xor jge iret xchg scas lahf insl mov fdivp xchg lods pop pushf mov sub js cmc push mov inc jmp and cmp (bad) repnz xor fstpt mov mov adcl jl adc sub sbbb daa insl test fbld movsb pushl dec mov cwtl sub mov test pop mov xchg pop cltd enter lahf adc cwtl sub fcmovnbe adc leave stc or mov gs fadds jge inc mov dec pop call jecxz in cmp stos stos sbb jb cmp pop sbb jnp cmp mov iret daa arpl pop cmc arpl ss (bad) jecxz ficompl (bad) rcrl inc outsb loope fisubl imul mov imul cmp pop enter cmp adc mov push cmp addr16 adc mov mov (bad) (bad) (bad) pop xor mov xchg aaa pop xchg cmpb adc jmp jo (bad) data16 das pushf or inc out pop mov in and insl (bad) jge add fsts ss fsubs pop into aam aad inc jbe lods (bad) pop sbb xor cmp xor add js or pop xor std gs dec addr16 push insl mov xor mov (bad) push sbb and xor js imul and lds sbb test pusha xchg lods mov pop add pop je andb sub cmp mov repnz sbb (bad) icebp pop dec sbb push cmpsb pusha sub dec inc and add or mov ret fild cwtl mov sub movsl leave mov js push in pop pushf aam in lret loop fwait push inc mov sub in mov add or dec ficom or and pop in push push test sub das and adc inc aam ret fildl jne dec inc mov stos pushf lea mov cmp mov mov sahf in mov adc jnp mov inc test int mov inc out mov xor xor push ror add mov sbb fistp aas sub int je adc ficomp ret or bound mov sub aas into pop add inc pop xchg pop xchg pushf pop pop iret mov jno js xor (bad) std push js mov pushf or pusha adc out in sub int push cmp fxch fs sbb adc dec scas xor icebp mov imul push xchg mov rcl xchg enter push pop sbb sbb andb dec pusha mov and rcll push dec fsqrt lcall imul imul jg mov mov scas movl hlt js loopne mov fdivs adc xchg and mov jb xchg lds lcall scas sub mov loop and test js sub jb test aaa ljmp cli sahf add push cld mov sti sub fsubrs adc stos fnstenv jne push stos sub call nop dec inc cmp jb mov sarl gs dec pushf add inc loop cmp mov cmp mov cmp jmp incb jne jge insl fstp add sbbb into insl scas rcrl xlat dec mov int inc jo fs out xchg movsb and push sbb lret mov inc (bad) out leave mov and cld hlt notl insb xchg pop fwait sbb jecxz std xor adc sbb (bad) inc dec or cmp add ret or mov fs push pop (bad) lock adc xchg lret std mov cmp add push clc adc cmp jnp pop lret imulb push push inc add loop push pop into pop push (bad) bound cmp jo std out cli (bad) movsb pop push inc insb sarl jg push jg dec cmp cmp lcall jnp xor inc out push mov ja dec sub mov cmp in mov ja sbb mov cwtl ja mov out enter dec push mov inc ja inc xor lret mov mov xor xchg (bad) aad cli loope add nop jo mov xchg call push lds xlat push leave data16 mov adc fldenv dec jo or mov inc lea daa push sub hlt add call lcall sub ret movsb orl out mov or ljmp dec sar sahf pop sbb or xchg xor mov xchg sub mov dec (bad) pop cmp sub adc punpcklbw in dec xor push ret pop or dec sbb pushl push adcl sarb sbb xor push in sbb test fs mov or decl (bad) dec xor or cmp fs or lock data16 jae loop sahf xor inc xor dec jg jl mov (bad) jno inc push xchg pop jno hlt mov mov bound dec mov dec cmp icebp xor dec cld mov inc xchg mov adc sub jne imul (bad) pop dec nop inc ds xchg subb in sbb push lock ret mov xor addr16 data16 or adc and add mov js (bad) lret add jecxz call fnstcw add inc dec mov in into xchg jb mov push das jnp push mov (bad) popf add mov mov cs adc stc and or fisttp sub or icebp dec pop or movsb cmpsl jle sbb sahf ss cld (bad) sub in js cmc insb stos add inc (bad) icebp jmp push ds pop (bad) dec ljmp or insb das aas mov fcomps cmp das aad movsl ret mov or inc xchg lcall adc cmc pop mov cwtl pop sbb push push jo or (bad) out call xor inc dec inc push fnstenv cwtl inc jb xchg pushf loop rcl adc mov (bad) adc aas cwtl sub lock mov pop out test push fimul pop mov inc mov pop xor out push lret outsb outsl mov out ds jecxz outsb arpl adc jno stos sub pop stos nop adc xchg aas sahf xchg (bad) outsl loope,pn cmpsl add and arpl outsb lahf pop mov adc shll or sti lds push (bad) je in insb movsb sub addr16 movsb ret lods loope or aam cwtl fbstp cs pop jle push mov add xchg mov decb xchg movsl adc rcrl pop pushf leave clc jbe push or sub aaa mov mov scas and push (bad) pop cmp push push scas stos xor push jecxz incl pop push mov inc jl outsb loope add loopne adc sar out jno int3 insl xor pop (bad) jp sarl pop mov hlt mov dec jge insb push sti dec sbb lods ret cmp add sbb scas mov outsb pop inc (bad) and and pop lods mov (bad) stc lea cmp mov repnz mov dec xor sub and cltd enter mov dec es jmp jne sub push or mov hlt (bad) sbb sbb aad jle inc dec out es jns mov cmp cli or leave inc popf dec aam push sub hlt fidivrl dec notl hlt addl jl or mov (bad) popf std fisub push mov xor mov mov add mov mov sub mov and adc xor push cmp sti add jl,pt cmp imul imul lret pop fiadd or into pop lods sub daa sbb mov lcall popf cmp arpl and rol dec cmp loop aad fimull cltd cmc hlt push mov jb push mov add leave sbb add cld adc lock and add in cmp inc jns repnz mov push enter and or dec pop (bad) push lods inc pushf in cmp imul inc xchg or jnp adc dec mov pop jnp push div xor xor rclb aaa repz rcrb push mov into iret push xor mov push aad dec add test (bad) pushf les into lock sbb sbb xchg xlat enter rcrb insb movsl movsb jb mov int out mov sub cmp push aam pushf cmp cmp movsl cmp mov int3 (bad) notl mov in xlat lds fnop js int3 and js dec jo jae js add (bad) push and xchg loop aam insl sbb dec pop jb or cs sbb jae cltd xor js mov add mov ja mov cmpb sbb test sub cltd mov scas sbb js pop mov adc adc call movsb std jne lea inc xchg pop and or xor or test arpl xchg xlat rcrb fstps popf pop mov cmpsl or and inc xor jbe ret sbb (bad) iret add inc rcrb cmp das les fildl sti enter clc mov inc cmp ja adc sti jecxz stos mov push imul in lahf es test fmull popa into jns addr16 enter and cmp fsub push xchg gs loopne enter lods push cs jnp sbb inc bound adc pop js push fs outsb pop xchg ja jnp jecxz ja fstpl int repnz in cmpsb push jecxz test add inc xchg jmp cltd push cs jmp mov sub out fistl mov xor in inc mov adc out movb ficomp ljmp (bad) popf mov repnz cmp xor out scas cmp arpl mov dec std jns push or in cmpsl dec outsl subl ljmp insl (bad) call or cmp cltd jmp insl xor (bad) leave cli mov cmc push out add and xchg (bad) inc sbb xchg aam loopne cmp push sbb xchg inc mov fnsave and cwtl cmpsb and movsl and xchg and or pop inc and or cmp pop or dec mov (bad) pop jne jo mov cmpsb mov je aaa xor bound jl jge leave jecxz jmp mov mov ljmp scas loope ljmp cwtl lret popf mov inc pop or sti lods xor adc bound lea scas stos sbb push mov icebp stc sub aam ss dec scas push fcoms enter (bad) jp test jae mov cli sahf frstor mov push jns pop pusha or mov stos mov sbb mov jge sub in jg and cmpsb push loope lcall into jns fistl push out outsb jae mov rol iret pop imulb nop xchg adc pusha dec push mov imul aad lret popa inc mov push cmpsb movsl sahf push mov dec pushf jp sub andl jnp sub adc inc cmp je pop (bad) cmpsl push (bad) cltd cmpsl xchg mov xchg in adc mov in fiaddl (bad) je xor aad sbb push (bad) out js insb das lcall push mov repnz loope jne gs (bad) jne add fsubs mov lock sbb dec mov test shr iret shlb xchg cmp jns inc xchg test jno ret pop cmp test nop and int arpl repz mov hlt fldcw jmp mov popa add jp or jnp out repnz mov jbe dec ljmp adc adc js aad loopne jmp jb push jb cmp rclb out test adc inc sbb mov dec movsb data16 push callw cli sbb sub out mov popa cs cs in mov jge das xor out dec pop ret push call cs shl test inc mov cwtl loope mov mov lods adc and sahf cmpsb addl sahf sub push xor (bad) and dec pop mov or lea aam inc sub xchg imul xchg or xor pop xchg ja pop sbb lahf and (bad) xor in xchg lahf inc xchg and pushf je cltd or das push iret xchg nop xor cmp outsb movsl jmp test fsubr mov push jbe jge ljmp jecxz popa cli rorb xor xor jp loop insb mov mov out cmp xchg jne mov js mov jb sub push sub das lock imul sub mov aam pop (bad) fwait mov xchg flds test (bad) testl pop cmp stos cmp push xor jno inc fisubl sub mov repz push out xchg mov mov fcmovne cs out stc loope pop inc or dec mov cmc test sbb stos jne and cwtl (bad) cmp leave js out insl lcall shlb or mov fwait add nop js (bad) xor jmp shrl aam sbb ret imul test cmp xchg pop and cmp xor mov enter pop pop lahf add packuswb lcall jg cmp mov outsb dec jmp xor test cs xchg or and (bad) cli mov xor sti addr16 pop inc test aam movsl test xchg jle (bad) mov cwtl fldl adc xor sub cmp and mov dec push scas cltd sub stc repnz mov inc repnz aad push test lret jno mov inc jns js cmp stos ficompl dec pop mov dec cli pop mov pop (bad) pop out cmpsl jle and int3 stc in lret mov mov push and push sub xchg call xor mov ret outsb jg push (bad) cld add adc jnp jne lds or leave add mov bswap jp jle xor outsb cs (bad) and mov fcoms xchg mov cmp or inc xchg jmp fimull incl jg loopne imul int push lods (bad) shll (bad) iret scas xor adc (bad) ds outsb adc dec mov and push test les mov mov inc insb std (bad) lret push outsl std sbb rcll cmc stos fnstenv add pop test dec out js xchg push pop popa lds jge movsb lods adc in es mov mov ljmp dec aaa loop or xchg mov mov testb add lds cmp dec mov jecxz lds jle ret fdivrp jb push mov cmp xchg pop ss mov cmp sbb ljmp dec pop xor rolb jl insb nop and std add mov cs sbb stc push ret pop mov xor sbb adc push aam jb loopne test in sbb pop mov inc mov enter mov inc adc add and daa addr16 push cmp incl cmp inc lock lods push mov dec jae xor and pop add scas mov dec dec out (bad) mov push push subl std add xor jae pop dec adc pop push outsl jae std jne sub mov xchg in (bad) push and mov or inc xchg jmp xchg (bad) pop leave iret test pop not mov mov lcall outsl adc mov lret pop (bad) lods sbb xchg or cwtl jns test mov in cmpsl ror clc add xchg push ret lret add pusha mov lcall rclb ret mov or sub sahf adc dec cmpsb imull gs mov (bad) jmp stos repnz flds stos scas dec mov hlt test xchg lods xchg add cmpsl in cmpsb jmp add lahf inc mov and jns (bad) aad pop cmp int3 ljmp mov jne pop jmp ds inc scas or mov jmp push xor gs cpuid cmp push push enter push sub out imul add ret mov lea mov lcall test dec xchg das push das (bad) mov loope rcrl push sub shr pop jmp sbb bnd (bad) pop sahf and rcrl mov scas rcl cmc data16 push pusha imul movsb sbb mov (bad) or sub add lea xor dec es int3 in jbe cmpsl ljmp std loope cmp xor scas sbb out xchg inc inc push ljmp arpl pop mov sub popf cli pop stc xchg pop aas int int and pop push sub push pop adc mov insl jns jecxz pop jg repnz pop fwait pushf xchg xchg xchg sub int3 sub mov enter inc out xchg mov add dec xor pop xor sbb test out dec cmpsb out iret sbb cld sub lock test daa xor roll lock sahf sbb and in popa stos (bad) lods jno lcall andb test xor inc das fist popl dec into icebp in dec xchg insb mov cmc scas hlt (bad) out int jmp inc (bad) xchg pop iret push jge xchg loop mov cli push jbe stos xor jmp push jno (bad) dec xor pushw (bad) in push push divl mov add cmp and (bad) rorb and andl insb xchg std and notb push dec cmp rorb mov mov adc add rol dec xchg cli inc adc xchg stc addr16 xchg adc ljmp push rorb stos mov outsl pop xchg dec or lds adc pop (bad) xor sahf pushf mov fisubrl jns popf out pop popa inc mov or loop mov sbb and outsl int jecxz and push add adc jne ljmpw dec cmpsl xor es jp mov lods jge xlat mov sub sub movsb adc cmc adc cld loop aaa jae or loope mov push xchg inc aas gs stos push sbb xor inc mov adc fisttpll inc in (bad) mov pop call jns insb inc jle lock out pop xchg fs sbb push cltd adc mov test pop jnp inc pusha repz das shrl loop and or push ja lea dec mov and push dec pop mov jo mov movsb addl in ficompl mov or sub adc jno mov xor xchg test sub loopne push mov mov sbb fcomps enter fcmovbe mov pop push ret insb fldl sbb aad fisubl jo (bad) nop sub push inc mov in jl (bad) and fcompl es call loopne es test lcall jmp inc pop in (bad) cld jl xor inc mov (bad) sub pop stos das or xor pop into stos fwait cld jl adc and adc aad icebp js movsl lds adc mov mov aad mov es insl pushf movsb push ret mov pushf icebp mov mov mov xbegin test xchg xchg and adc push mov rolb mov icebp inc std push mov inc cltd leave rcll shr cmpl xchg adc sbb pop dec mov adc imul out and push ja xchg inc jno jg mov cmpsl jbe pop mov (bad) (bad) sbb mov mov fs arpl pop or inc icebp movsb cmp pop cmp jnp daa add les aas lods (bad) xlat leave pop adc xchg out js inc loopne mov leave push mov mov cmp mov pop sbb pushf jecxz movsb aaa jae (bad) lea mov xor add lods jo sub fs insl sub sub mov repz xchg testb int3 push out cs add dec add xchg (bad) fsub movsb cs out cmp (bad) mov mov inc mov or xchg cmpb mov in outsl test sub ja into repnz push dec mov dec popf push adc dec in inc adc mov es jne cs cli lahf add adc loop sahf or stc xor stos push ret adc adc pop add mov cmp loope push cmp jle mov (bad) mov push jo xchg loop aas aad std inc and pop fwait iret jnp in enter es or inc cmp cld cmp or jmp fwait jbe shrb imul in jl stc in cmp decb in pop mov in iret (bad) lea dec pop push std pop add ret int pop sub mov add cmp (bad) das dec mov adc xchg inc outsb loop pusha inc pop mov xor jl loopne pop int lock sti sarl cmp sub and imul mov sbb (bad) mov ret adc movsb lret ret imul jmp aam add jecxz loop,pn insl fcomi sub fistl into and cmp leave stc sbb inc add jecxz or daa mov pop xchg (bad) rep dec ja dec lods xor and and loopne jb iret mov ret push sbb rol sub dec pop out add arpl xor std push imulb mov inc test bound and lock xorps cmp (bad) sub arpl inc (bad) jp in fistpl repz or inc adc mov int cmpsl mov les fwait jns jo test mov hlt mov sub loopne pop fsubrs sub or addr16 pop pusha lahf add (bad) dec adc dec and or or xchg decl loope scas xlat int sub inc pushf in or xor add cwtl in fsub inc mov mov icebp ja xchg and bound push ljmp insb xlat dec jnp lret sub jae xor jns movsl das and cmpsb scas cmp mov test stc mov push jne fs in (bad) fucomip cmp mov push scas fstps in cltd bound or negb sub xor rcr sbb out (bad) aad test (bad) aam xor xor jo lcall cli push int3 fdivrl popf and and dec (bad) dec pusha add sub cli out add cmc orl jl jns les sub outsl mov adc cmp mov iretw sbb fsubrs dec ret mov xor xchg mov and add int ljmp jb mov outsb inc or ret pop dec fstpl pusha push out out js call or mov dec add mov faddl int3 in les push scas das mov sbb adc cltd and and mov into dec imul dec stos (bad) pop push jns and sbb mul pop or (bad) or push enter daa pop iret cmpsb jo push lock push add adc jnp lret xchg out mov mov out icebp stc insl cmp add dec or mov xchg or or dec call jle jg int and or sbb popf popf or jp dec aas mov fs mov mov pop cmp pop cmp mov aam popf mov cmc cmp jl test flds cwtl jns push icebp xchg pop adc int3 add pusha push gs mov movsb xchg (bad) fcmovnu add pop les into out fimul fiadd (bad) mov push adcl pop fstl test loop daa nop aam call lahf loopne in mov fnsave rcrb icebp int3 pushf insl sub jns aad sub mov pop in cmp fs jae lds scas lods lret push std inc inc out or jmp sbb mov add pop mov pop cltd add outsb sub adc jbe rcrl or and sti mov push cli cmp xchg stc loopne repnz lea mov cmpsb pop jns out rclb sahf xchg jbe lods jecxz jecxz jle or je inc sbb cmp mov pop enter loope jge push lods lods add jecxz icebp mov xor call clc inc loop xor pop insb lret rorb loopne and jmp fimul and xchg les es out sahf js sbb adc push mov bound xor das (bad) mov adc xor cwtl imul pop xor out repnz pop mov les lock lahf and stos xor mov les aad mov jae and ret jle add fildl std xlat ror xchg adc adc mov mov mov push sub rol pushf addl mov outsl cmp rorb add and sbb ss xchg mov pop fistpll pushf sbb repnz lret xchg mov jbe rorl and in (bad) sub orb out push mov idivl jae and (bad) lcall push test in pop mov in dec loop pop sbb cmpsb sbb addr16 jne lock movsb fisttpl sub mov je cmp sti (bad) mov mov jle daa xchg aaa fcom int3 stos jmp push cld sbb aam xchg lcall xchg leave push mov std jae std xor xor adc inc mov outsb dec push cmc inc push scas add mov push inc adc in test push insl push fcoml sub mov scas enter pop fidivl hlt insb bound in insb nop jne (bad) and and movsl stos xor push xchg sbb pop xor aas les faddp flds and stc jg pop jno je xchg cmp fwait add xchg imul lods shrb aam adc mov adc dec (bad) lods mov mov cmp divb lea sbb xchg push mov fwait loopne cli andb add pushf incb test testb lret sbb xchg test repz ds sbb jp jno xchg scas and xchg outsl push repz push lahf jno cmp sbb imul xchg pop cmp xor cmp (bad) shlb dec jge push pop outsb data16 pop gs pop xchg les ss and cmp jecxz jmp mov jmp ror xor repz cmp popa sarb cld jae inc inc cli pop inc (bad) int3 push cmpsb sahf pushf fldenv scas in push cli jbe adc add mov cwtl xor cmp cmpl cmp pushf pop jb (bad) in loop xor xlat bswap and or stos adc inc movb scas and out arpl bound adc lret sbb mov out pop and test and faddl mov adc movsb or int inc sub cwtl test xlat das cmc cmp jns xor jmp mov sahf frstor adc inc incl xor jns or sarb ret iret add pusha xchg cmp jnp aam cld arpl scas mov fxtract ror int dec pop fwait jl aaa into pop orl dec dec push outsb adc orl jge add and outsl xchg xchg cmp inc out cmc jecxz mov out divb fmull xchg jb push sub out arpl gs mov popa pop in push mov out lods xchg sub xor add pop imul sub hlt adc push mov push xlat pop mov mov icebp es inc insb stc push cwtl push mov mov cld mov pop xchg in mov push sbb push dec push inc hlt sbb or arpl test inc fbstp inc insl push lret ret sub sub rcl push insl add jne xcrypt-cbc cmpsl xlat mov cs add std xchg jge inc ds xor push dec leave cmp sub sub and mov inc add cmpsb mov clc subl sub dec lret adc add sub mov lcall enter sub aas xchg pop cld imul sub adc in mov mov cmp cmp push add sbbb adc mov jle ljmp or es push jne dec dec lods jg add (bad) cmp js mov test shll jmp into ret cli fs xchg gs sub pop data16 mov xor dec (bad) data16 jb mov mov dec mov mov cltd mov dec sub cli xor lret aaa dec popf lock xor lret test mov sarb or pop sbb jecxz mov jge and out notl aas int3 push (bad) movsbl das inc pop jns lcall ljmp cli xrelease and fcoms jne and lds dec cmpsb dec fnstenv arpl fiaddl movsb add ret imul jp (bad) adc sbb push clc push data16 sbb in or lods sarb mov xchg adc cld mov push icebp jp jle push pop adcb xlat scas or lds icebp ret (bad) lcall lret sbb je xchg xor mov outsl out dec dec mov inc cli add xor jne add dec lea cli lcall int3 sarl pusha cltd aaa test lods mov stos add inc loope test jle add jbe dec or lods (bad) jmp (bad) sub sti add and push stos test jno dec jmp adc cmpsb (bad) out outsb adc lea xor adcl pushf cmp add in dec pop aam repz rcr mov imul push cmp mov xchg sub enter mov sub repnz addr16 fidiv or jmp pxor inc loopne inc (bad) cli mov lds push addl shll das fsubrl dec dec pusha loope cmp imul xchg push sbb movsb sub xlat daa loop pop push int inc mov and dec popf movsl setle xor inc adc mov (bad) or sbb and test sbb test cmpsb or orl sbb sub lcall sbb xchg arpl es pop adc out push inc dec std add xor ret sarl dec cmp cwtl xchg (bad) xchg add or rcrl sbb int mov cwtl (bad) mov mov mov pop mov mov loopne cmp rcl outsb mov xchg out push imul dec mov jecxz xchg add (bad) jmp push sbbl mov pop add call inc pop sub cltd mov fyl2xp1 adc jle iret stos push mov mov push adc xor mov sar xchg push lock lret push jb lock enter stos jo cmpsb mov push in ret and ss and mov loop adcl push cwtl movsb incb adc push in addr16 int xor enter data16 or ss enter xchg in mov es or mov mov sbb sbb into mov data16 xchg cld cwtl fs cmpsl jge arpl or cmp push inc xchg jmp (bad) push das lea ret cli hlt imul or lret inc imul idivl jb add (bad) lcall loope adc mov mov sub fsub dec scas or jno push mov sahf ss (bad) jo adc gs cmp movsb mov mov lahf mov je sti out sbb xchg cmp jns adc mov sbb mov and xor add sub mov dec pop aaa les insb jl add adc push push leave in clc sub inc adc cld shr fstcw xchg mov negl and movsl mov cs xor pop add pop pop add pusha aas push cmp loope test popf repnz mov in or pop cmp insl js push in lahf adc mov outsb jae outsl jo mov sbb pop aas pop fdivl popa test cmp inc repnz addl pop xchg (bad) mov nop lea pop iret int xlat xor out jp mov lods cmp lret out and or add ljmp inc test mov mov jge (bad) jl and dec sub push xor mov xor daa push xchg jo lea inc pushf loop stc mov stos mov xchg xor jle jo jbe add ja shrl hlt mov lds outsb mov push aaa mov push cmp jne xchg jmp in mov (bad) pushf js push xchg mov cwtl mov add fstps jbe cld (bad) lock pusha repz adc (bad) mov inc adc test lcall rorb lds (bad) test insb into imul in mov (bad) rorl jecxz nop adc mov inc inc pop dec pop cltd push mov mov push (bad) push je jbe adc sahf aam lea sar mov fisttpll mov cmc cli jbe mov fnstenv mov pushf xchg add aas and out sub jae dec xor push inc hlt enter in lahf cmp data16 mov lret mov movsl addl mov jecxz repz repz jns arpl push sbb mov insb cmp sbb cli mov inc cmp pop outsb fwait mov sbb and (bad) xchg lahf push pop cld fwait dec jns andl dec pusha movsl mov dec pop cld dec pop cmpsl push rclb popf xchg cmp or adc aad fs lds pop (bad) test in cmc ja mov or mov into or orb inc (bad) in adc jp pop mov adc and aad in dec pop (bad) cli push clc pop pop sbb decl mov mov jo call sub adc or mul (bad) adc pop mov enter push inc push sbb fxch outsb cmpsl pop xorl sbb fstps add pop inc ljmp push cmp ret xchg jmp in xor dec decl mov xorl add scas cmc int dec repz pop mov sub lock mov dec xchg stos out sbb mov xlat rorb mov out data16 push retw leave (bad) mov jno sbb sbb loop scas (bad) mov push stos mov mov dec out sarb push iret push stos add stos jo ss fs mov loopne xor mov in sahf push repz stos fldenv test mov xchg mov or push rolb inc xchg sbb arpl pop fiadd pushf imul pushf cmp xor insl fs shlb sub mov xchg sti outsl or shr jg ljmp insl js mov jns fs pushf xchg je out scas or fwait lcall mov sarb inc jbe scas enter inc xor roll rclb stos mov bound xorl pop cmpsl mov add shrl popa jp add negb adc sbb push jge xchg xchg sarb scas jmp in inc add mov mov fs es jl inc aas fisubrl mov cwtl lods pop cltd cmp mov lcall ja or or rolb mov les ret scas xor sub lea or pop add mov mov jb (bad) in int sbb je sbb xchg ss loope mov or sarl ljmp mov test push data16 lahf mov mov mov mov jecxz mov ja dec mov test add in add add or (bad) orl pop (bad) sbb lds xchg xchg les into mov fmulp push notl or pop cltd add fnstenv lds hlt mov lret lahf mov jbe (bad) mov lcall mov idivl or roll pop jmp js aas pop loope (bad) cmpsb mov dec jl jge jnp cmp lretw xor test (bad) std jmp insl sub repnz mov adc negl push push cmp adc out adc ret pop inc mov mov inc add fstpl push mov gs mov cmpsb jne jge xchg inc mov leave mov dec insb pop fisub jmp pop mov lret mov ja test pusha mov cmp in xchg popf lods sbb push lods ds lds push (bad) (bad) or int out inc into jbe ljmp push sbb inc push adc xor cld mov xchg out loop push jmp xchg leave push mov out ja mov sbb and pushl xchg xor xchg ret in sub fiadd loopne push and out arpl mov jg pop push xchg mov mov cmp inc lret (bad) lods pop test jo dec cltd pop rcll cmp in push push roll and adc lea inc mov leave les jp or adc push sub add mov push std cmpsl pop jmp and loopne aaa adc js divl or ficom cli sub pop add sbb incl sub and sub cli rcll out mov and sbb das cmpsl stos pop sub (bad) or cmpl out and sub add pop lock jmp roll (bad) pop ds cmp mov in cmp ljmp mov or jle mov movsl je nop icebp jb stc icebp aaa jo jne adc popa outsb and or movsl ss xor outsl (bad) imul stos dec test mov out and pushf test gs fwait push sti lods scas push push aaa (bad) lods scas lock xor pop dec inc sti cwtl sub subl fwait jl lea popa std test (bad) cwtl xchg sti adc or inc add sub pusha int3 mov pushf fbstp add sar jge mov mov or (bad) rol sahf cmp icebp fstps pusha test mov jmp out xor insb pop roll adc cmpsb lea lds jl test xchg ja jmp jnp rcrb imul sbb add cmp rdpmc in dec call push call mov loope add mov testb fnop loope adc jge pop lahf xchg add pop mov loopne loopne fcompl (bad) dec cmpsb pop cli out lahf mov fwait in mov pop dec les dec pmulhuw or sahf dec push jp mov bound (bad) or xchg insb (bad) sub das in push push add mov cmp and push cltd test arpl mov and inc imul mov sbb pop pop mov mov dec fdiv lcall aad lcall stc (bad) fsub push mov loopne int3 pop jbe in push cmp jg repnz scas xchg xchg imul push lods add or out dec xchg adc add int3 insl push std xorb dec mov xor fcomps and (bad) mov xor push pop popa add movl cmpsl outsl mov popf sub aad pop mov push cmp je loop daa aad push ds lahf dec push inc sbb or adc in jp mov jbe in jno test adc arpl gs dec rorb into out rclb mov xlat jne fidivrl mov push fildll inc ret flds (bad) add jae xor inc cmp sarl inc test clc cld mov inc inc pop aaa out xchg je lods and aas movsb inc in add xchg (bad) sbb int xor test jbe fistl ds in cmp or sub rcl roll int3 scas inc jns dec enter cmpsl dec fistp add xlat in cwtl mov pop jmp (bad) int3 mov outsl imul iret sub int mov repz repnz mov mov jns icebp js cmc pop jl mov mov call rolb jnp nop outsl movsb xor popf jne (bad) fwait xor stos into test mov inc sbb inc add jno inc sti add push pop test roll xor mov lock aas cmp cmp loop in jp hlt sbb ret test hlt test and adc movsw leave (bad) dec jno leave nop fsts (bad) pushf mov and mov push in pop mov jle (bad) (bad) imul stos and das xor shlb in pusha ds aas dec sbb adc adc xchg adc enter xor jae rcl xchg clc in sar mov and roll dec iret mov rcrb (bad) sub int3 mov mov les xchg mov loop movsl mull xchg cmp lahf jl bswap cmp mov nop rcll adc stos dec outsl xchg push ficom ds jmp add mov dec addr16 push adc lcall (bad) xor xor arpl es insl lods iret dec arpl (bad) jp shll pop daa jno and xchg arpl orl inc ja fstpl gs cmp stos int jmp negb mov sahf pop lret cmp notb dec (bad) mov cmp push neg pop movsb fdivl ds rcll push arpl (bad) iret gs sub (bad) mul xor rolb sub test inc cwtl cmp fsubl shrl mov pop loopne lea pushf push cmpsb cmpsl sub jo xor out push lahf pop inc mov sbb cld mov (bad) fwait mov sahf cmp (bad) pop cmp std cmpsl mov push cmp hlt mov mov aad in es inc fstcw xor adcb cmpsl sbb cmp ljmp (bad) jo sahf fdivrs imulb and (bad) test jl pop cmp in shll and aam cmp dec xchg loop adc push adc stc in divb mov hlt and cmp push mov lods sbb iret lret jb mov or lea push and fidivr loopne pop aam es lea push adc fmull aaa rclb sub int push add mov cmpl fnstcw dec sub push jbe pop mov and lds xor xor adc inc jbe (bad) mov ja aaa push out cmp fistl out cmp mov mov and aam mov leave repz imull sub popa dec mov sbb xchg lcall (bad) sub aam icebp ds arpl scas pop cmpsl jbe inc cli or daa push dec push xchg xchg jne adc (bad) shll ds dec mov xchg cltd cmp mov cld test jg call cmp (bad) push adc mov push sub mov shlb daa dec mov jbe sub int3 mov scas int3 jne pop fs pop inc cmpsb scas mov aad xchg sahf mov je repnz cmp xchg sbb push inc pop sbb aam cmp jle mov pop or mov and lods mov dec lea cmpsb shrb dec add (bad) ret dec loop je pop (bad) xor adc mov xchg push fwait idiv movsl cmp jmp rolb fstpt bound ss popf ja movsl aad iret fistpl icebp outsb hlt lods add mov and daa sub mov pop mov ret mov xchg mov loopne mov add cmc and in mov sub cltd and xchg push mov shrl andnps and in sbb ret test or shrl jmp mov jle insb loop je je jle movsl mov sub inc mov std fistp jp loope xor not mov fwait pop fsubrs aad mov test ret mov or aaa sti jecxz (bad) fsubrl and jne mov jnp dec das fimull pop repnz fcmovbe sbb idivl inc in mov cmpsl and mov (bad) and int3 cmp (bad) xor jge push xor dec mov or or jno ret out sub mov aad xchg and in pop jle cmpsl xchg outsl lds sub or adc inc (bad) dec iret jns roll (bad) lds lret je testb loope fstps pop lret jp lcall xchg and xor and adc aad scas popf adc rcr stc ljmp sahf cltd xor sub les in les daa subl jmp lea pop gs mov (bad) mov pop adcl inc inc adc fnstenv xchg fcoml and or stos test arpl lods jne mov inc xchg test xchg cld add or in mov sbb xchg (bad) mov scas fsubrl je pop mov pop fdivrs das dec sti push lods icebp pop xchg inc adc clc rorl pushw jmp aaa repz pop mov cmpl out (bad) dec xchg or mov add test insl mov push int push jne imull push hlt inc or lock add sub adc out movsl adc cmp xor test loope std pop cmpsb xchg (bad) jae push jmp xchg pop stc push mov cwtl stos clc ret xor imul mov lods bound in mov into dec xchg dec ds sbb in aas out and sub and cmp sti cs in call sbb sub (bad) and lahf mov sub mov mov xchg cwtl out cmp cmpsl push mov gs jnp andb outsl inc clc fs adc dec jbe sbb ja mov push scas sbb into aaa sub mov push and imul ja mov mov outsb jb sbb sub pop popa fbstp push mov ds dec lock sbb (bad) or lock mov and (bad) nop hlt data16 icebp in cmp sbb ds cltd mov lock jne (bad) or int3 sti je negl mov data16 xorb mov aaa push lret in pop jecxz add insb dec (bad) mov xor dec stos mov insb inc inc xchg dec xor lods mov jbe sbb dec cmp sub bound (bad) rorl fsubs and (bad) test out mov lods mov rorb xchg sub mov push jge push push gs mov popf xchg push inc iret push adc mov sar mov icebp cmpsb lcall push jns and sahf pushf ja mov push in mov jne dec add (bad) xchg or mov dec and decl inc sbb xchg mov and adc inc into xor (bad) push mov jae sub inc idivb inc outsb sbb adc push adc sbb add (bad) adc pop inc cmp pop mov add jmp fs (bad) in fsts arpl (bad) cmp lds xchg scas clc jno bound (bad) jo mov xor mov enter push or xor repnz mov cmp sub movsb add cmpsl mov lahf mov aas std ret and xchg push cwtl mov push cmpsl sub adc pop movsbl scas jne imul dec inc aad daa mov xchg inc mov (bad) jb add sahf (bad) stos sub pop sbb in lods aas push jno (bad) hlt les leave and sbb and icebp sbb lds and and (bad) call leave push int3 mov cld and add pop xchg sbb outsl mov cwtl inc and ds aaa xor incl adc or fnsave loop pop add bound sub fistl cmp sahf call loopne xor negl mov loop das lret sub push fwait (bad) repnz cld jge ret (bad) inc mov dec loopne ret dec idivl clc mov adc mov ss cmp lcall (bad) mov mov mov sbb (bad) cmp scas stos movsb inc lret mov in sbb repz adc dec scas repz stc fstpt insb pusha or inc or (bad) dec aaa stos push jmp sti jno hlt sbb (bad) nop js cmp aad je loopne adc leave dec fimul stc mov cmp sbb adc jl and movl es sub xor xor cmpsb push fisub ret sub and leave or mov mov inc or loope lea adc jnp (bad) and add imul mov popa sub nop mov or xchg or stos aas imul cmp push stos ja enter (bad) std sbb shll dec pop sub adc and cmp andb push and dec mov xchg fnstenv or sub fisubr sub add sbb es call repnz jge loopne jo pushl movsb cwtl pop cmp pop lahf loopne aaa inc ficompl test mov mov movsb lods push mov mov std insl aas dec jg cwtl incl inc mov js rcll pushf add mov xchg into lea (bad) pop aaa lock adc sub stos or in cmpsl out aaa fdivrl leave pop dec ds mov sahf mov adc mov sbb push in notb adc stos jmp stos fisttpll pop cli aad (bad) mov and pop fiaddl hlt std lods xchg xchg mov xchg (bad) sub xchg pop xchg inc in sbb ss xor sti hlt jecxz,pn scas fwait bound pop mov addr16 pop test addr16 sahf pop in cmp push jnp rcll and fimul lock inc or sub (bad) sub pop std xchg mov stos mov xchg loopne int3 aaa (bad) dec fmul add into add mov jae lahf out mov repnz imul or lret pushf xor popa pop jecxz xor sub push mov cmp dec and add add jp stc xchg pop inc lea inc xor pushf mov int3 icebp push inc jmp fidivrl mov jmp (bad) out adc call loop sbb add mov mov in xchg popf mov xchg ficoml cmp jo loop js sub shl mov scas inc inc das xor inc repz pop xchg dec and andl xlat mov lcall loope outsb repz jp adc sbb pop ficoml fcoms cmc sbb call sub fs push mov pop pop ret jecxz add add (bad) daa shrl (bad) dec cmp mov dec or push cmpsb jge scas cmp push iret sub jle push add inc iret cmp mov loopne hlt adc jecxz loopne mov (bad) sub outsb lret push ljmp (bad) mov aam pop lds push push dec repnz add insb aas out shrl add in xor mulb cltd add and push mov lea ficomp adc andb addl push add dec shl mov adcl fistp int dec data16 adc push popf inc (bad) imul data16 push sub (bad) mov jae lods iret push xchg or icebp rcrb and adc ds adc push in (bad) (bad) mov sub popf sbb (bad) daa addr16 or sub ret sub leave cmp jo aaa and scas lcall fmuls (bad) mov mov cld cmpsl mov mov mov pop aas dec jns sub clc xchg mov dec (bad) data16 mov and dec je ret adc aaa cmp pop cmp dec enter jne add aam repnz imul aad mov out cltd mul rolb bound xor push gs shrb mov push lahf int3 dec sarl push das (bad) icebp roll jae (bad) mov fchs mov cld mov sub in ret cmp (bad) lret into test add test int3 je call test lret out pop xor out iret repnz cmp sub sbb or imul jne cld out dec sub imul lock fs lret sahf xor mov cmp pushf icebp in mov fild jecxz pop lods sbb cltd jmp inc ljmp in mov xchg add stos (bad) (bad) fnstenv repz ret fcomps jl leave jle das movups stos outsl je iret push jae pusha ret xchg loope out ljmp xchg (bad) cmc inc pushf push pop in adc imul inc mov (bad) inc sub test movsb out insl xchg (bad) jne jnp (bad) push outsl pop jp pop mov js pop fstpt jmp out es dec fnsave mov orb icebp push stc inc or mov popf push jge sub sbb jo popa les loope dec out mov imul dec movsb lcall fxch iret mov das rolb addl mov (bad) outsl push repz ja int3 roll fdivrs pop dec imul insl std aad loope mov lret sub in sbb hlt add mulb cmp out std xor lods inc insl xchg ss rcrl mov and in or and inc cwtl test (bad) mov adc andl (bad) into jle sub mov xor xor cmp in daa adcl push jb mov (bad) xor aad int3 push adc lahf pop cs (bad) pop test cs ja,pn add pusha jge sbb fist cmp pusha inc mov mov cmpsl push mov pop sub dec dec dec es sbb xor xlat cli loop push and cmp and cwtl lret cltd push mov out outsl rcll es ret push sbbb sub ja pop mov cmp cmp mov punpckldq sub (bad) sbb addb insl inc scas add adc add subl inc xchg mov and fsubp int ljmp movhps repnz pop repnz scas mov xor addl addr16 mov testl pop fildll stc xor and add dec into push jbe jecxz dec xor push (bad) call call sbb mov int icebp push into loope pop cmp (bad) mov xor (bad) jnp xchg pop and pop jb cld sbb ret and jle ret push cmp inc in repnz push mov mov sbb iret xor hlt rcrl jp dec pop and data16 cwtl xlat mov fwait or imul arpl mov jae movsl cs (bad) in xchg lea jno lret add ljmp popa lcall mov push pop adc test enter cli cmp or pusha add dec repz popf stos xlat jo add xchg and jp mov lods pop hlt adc mov sti outsl dec dec call aad sub jle xchg or sbbb mov call cmp inc push mov (bad) pop lea (bad) mov out inc in cmpsb cltd (bad) mov jne loop cmpsb mov add (bad) jne repnz lds testl lret ficomp aaa (bad) sahf and popa imul mov xor cli inc inc pop xchg push (bad) decb das mov sub cmp (bad) sbb adc outsb push and rol (bad) jmp ja rorl (bad) cld fwait loope inc ret or cmpb mov xor scas pushf push mov sbb pop out daa mov lods or or mov sti mov xlat sbb add sbb adc enter mov mul fsub pop stc mov les xchg jecxz lret hlt inc xchg iret stc enter es sahf into sbb mov sarb inc les jmp dec push dec shrb xchg cmpsb (bad) cmp test mov outsl (bad) mov ds mov daa jecxz jne imul pop pop push insl cld and mov aad (bad) mov lock int3 sbb dec push xchg daa out pop ret call inc leave insb sbb jno movsl sbb cmc xor mov xlat fdiv aaa fsin push outsl out mov nop dec inc mov xlat pop push and lcall mov (bad) loop sarl mov cltd aad call outsl les popf sbb loop adc lcall outsl or lcall psrad stos xlat xor and inc pcmpeqw sub sbb mov sbb lock mov mov add or adc outsb pop call jae pop and sub mov pop mov mov adc add fs mov mov jb mov inc into inc and mov xchg popa add fsubr xchg dec movsl nop and sub jecxz sar inc (bad) insl sbb sahf dec add nop jnp stos int cmpsb and ficoml ljmp cmc out loopne xchg loope adc mov sbb sbb cli pop lds cmc xor mov daa insb mov repz ja aad adc hlt sahf pop fisubrl pop fst outsl dec stc in dec add cs sub xor cli loope clts loope ud1 insb xor mov or fldenv bound pop js pop daa pushf aas (bad) and mov push cmp lea pop add inc mov lret nop jl test cmp int (bad) mov pop jno and jnp arpl notb xor sbb addr16 jl pop mov fldenv pop orl fsubr outsb call cltd jmp sub mov jo les xchg jmp push out cmp lret sub cmp sahf mov pusha push (bad) xor test push add imul pop add mov and repz sub mov (bad) int3 mov cmpl das imul imul xchg ret adc in shrb cltd loop aam cmpsl cmp and gs pop arpl aad lds aam mov mov adc sahf mov jb dec pop mov push push mov movsb les sub outsl adc iret inc dec out loope gs mov jmp pop push jno cmp test call pop xchg je rolb adc aad jae fwait outsb popa add notl mov push test add add aam xchg jnp (bad) xchg cs movsl lea pop lods ljmp ficomp pop enter and test pop pop in dec imul imul mov jmp jns mov ja sbb push push ds and out xor inc xchg bound or lea dec pop xor call cmp cmp movsl fimul leave popf rolb fsubrs aas mov cmp sbb fbstp xor pushf add jno loope mov in sub cld xor pushf ss add mov (bad) in mov cmp mov (bad) push cmp pushf xchg cmp sbbl cmc lahf sub sbb dec enter pop sbb adc test in dec jb (bad) mov inc sbb imul cmp pop xchg inc lds dec test scas scas add dec dec fldenv jo lock sbb mov pusha arpl lret add aas add push or je ret jle idivb sahf daa or xchg mov lret sbb jge das lahf iret stc push fsubrs jb les call inc scas mov fmull jge mov mov fwait dec jecxz imul or sub push jp cmp mov xor fwait add push sub pop jne (bad) cld out loope push sbb (bad) fwait add dec jne ret bound repnz pop idivb xchg push push or mov pushf mov and in xchg sub testl jecxz or ja aam inc repz insb stos out jns sarl (bad) xchg orb pop mov push mov pop rorb pop or push add dec iret loop pop pop adc push xchg add xor sub fstl mov jp mov test push cs mov mov xor in xor es add and daa rcl mov inc and cmp or pop and push (bad) fmul sbb xlat aad scas dec cmp and add and xchg mov mov lods sub ljmp or push or or idivb hlt (bad) or mov shr mov add lcall aam lea ds pop stos les loopne je jecxz mov mov push stos jge lcall out ds stc pusha xchg in fcompl jmp pop mov aaa xchg shrl aam das hlt repz divb into fbstp pop add push fwait inc mov in mov mov imul xchg sub sub jno jae (bad) out aad inc ljmp loopne sahf and ja icebp mov jb pop (bad) mov fs mull mov (bad) adc je repnz fwait push daa loopne into push dec inc sbb pop add and cmp aad in or or mov mov sbb lahf push mov or ret sbb cld or mov sub in sarb movsl repz xchg dec in adc push add ljmp mov xor mov outsl cwtl bound cmpsb (bad) daa push popf xor xchg push sub lret cld or (bad) jno push push iret jb int3 fucom pop lret pop sahf loop nop mov jae and daa xchg pop jge cmp xchg scas aas sbb push mov mov insb mull cmp mov aaa inc jne fcmovnu dec rorb xor jp cmp ret rcl xor sub repz ror ds adc push mov xchg fsubl imul adc sbb cwtl inc cli mov testl mov push sti mov enter add add sbb pop loop aad mov cmp cs mov dec mov mov jb lock or jle rep icebp je push jmp add (bad) in sub rolb sbb sbb mov push vphaddbd test dec mov leave push movsl pop ficoml xlat repnz imul xchg das or push lea inc mov add pop (bad) sub movsl les pop xor pop jle movsb sbb cmp sar fldt or (bad) aaa jmp cmpsb add scas sub mov fs test xchg xchg jmp inc push (bad) daa imul mov jne jo inc and mov or push imul hlt jae adc int mov jg cmp cmp (bad) pushf cwtl and xor sub jne ror xchg out adc mov out mov sahf (bad) add pop pop adc mov push popf enter jb nop dec dec sbb arpl sbb (bad) shl mov bound and mov or (bad) sub inc aam cmpsb xchg mov addr16 sbb nop xchg sbb lcall cmpsb sub clc in mov (bad) xchg popf jl cmpsb xor cmp xchg pop ljmp outsb movsl ljmp fdivr in in sti push ret add in scas mov mov push out loope jo pop and mov cmc cli push arpl icebp mov mov cld insb and (bad) pusha jecxz aas sub scas mov out ret cwtl fisttpl imul xor cmpsb xor in jno pop xorl xchg push push arpl in push aam pushf inc push jae lods addr16 nop bound jle repz inc cmpsl sbb xchg pushf mov dec daa sbb or push sub mov idivb sbb faddp push adc jo xchg nop inc scas (bad) xor call mov and sarb mov packsswb inc and pop mov (bad) lret fsubl (bad) jns out out (bad) adc outsb dec or jno incb js das aaa scas clc cmpps call or nop mov addr16 in inc mov pop fisttpl insb xor jl mov xor into ret ret outsl jnp test mov into imul nop pop push sub popa add cmp fsubl lods xchg in mov iret and mov jle sbbl xor cmp test add addr16 cmp mov push pop aam jo inc pusha iret xor cmp xor stos test xlat movsl js (bad) out xor pop je je imul add and adc lahf pop inc inc fstpt outsb aas bound pop (bad) outsl push xchg cmp pusha jbe pop sub xlat mov jle push popf sbb dec std add xor mov dec ss ljmp push jp addr16 test xor cmp in inc xchg adc enter pushf jb in test mov push jecxz jg dec or cs into ret ficompl stc mov add jmp pushl in pop js fisttpl push movsb aas add lods xchg mov int popa mov mov aad rcrb sbb add xchg push fcos hlt outsl mov popa sbb int mov sbb mov inc imul andl mov add fmulp loopne testl por mov push and repnz mov cmp movsl mov pop push pop loop stos push cltd xor sahf adc pusha (bad) into sub or xorb pop jb loop add push ljmp in mov lods shrd mov cwtl mov loopne sub test sub pop fiaddl je push sub mov rcrb out out or jnp cmpsl mov test xchg jg mov rcll jbe cs cmp jecxz stos push mov out xchg (bad) pop out pop xchg stos pop inc data16 and dec inc sub mov pop test clc test les xor je sub sar cmp jae sahf cmpsb fwait sbbl or rcrb jge xchg dec jb repz arpl cmpsb bound scas jmp mov mov adc dec add ds test dec pop mov push sbb (bad) pop inc sbb lcall adc lret inc leave pop cli and subb sub arpl repnz ret push in jecxz inc dec pop inc cmpsb xor test mov cmp mov mov cmpsb ljmp push fcoms jbe dec ljmp xchg mov andl xor or xor jge pop (bad) sub mov and add dec in (bad) leave adc stc out dec xor dec jbe or sbb xchg dec sub mov pop mov clc push xor ret movsl (bad) daa xor cmp shrl imul negb (bad) xchg lret (bad) lcall in loope dec sub lret pop pop jae push clc mov into mov repnz aad ss (bad) push xor xor repnz std cwtl push fstpl mov mov mov clc mov (bad) adc mov in rclb addb sub lods cli mov leave jecxz icebp (bad) enter cmc xor mov add popf push inc out int3 mov sbb and nop ror int3 clc sarb adc incb stc nop jmp aam fisubr sbb stos cmp and push lods and sbb repz push adc xlat movsb ljmp popa xor test fsubl push xchg nop mov (bad) fildl cmp orl mov cmpsl dec popf (bad) cmp jne jp nop mov out outsb dec dec mov jmp mov in test push bts jo sti mov rcl dec cmp inc jo or add adc popa jbe or jecxz mov jmp emms push sahf inc mov adc mov cmc out add and sti mov jecxz pop gs pop stc scas pop and xchg int jmp bound mov fcompl pusha inc or mov mov pop mov jg jmp cmp dec sbbl inc shlb lock popa and mov cmp (bad) into call or mov jmp ret or pop inc (bad) daa pushf sub and fdivs arpl jne dec ds fstl (bad) xchg sub nop aaa dec and std jno or dec js or adc sahf mov cmp rorb jnp and pop fild cli aaa pop or ret xchg rol sub and mov test add ret rorl popf mov rcrb jl xchg mov (bad) hlt add jl into mov stc sbb xchg stc testl adc mov pop sub xor js pop cmp push cmpl and jle int sahf jmp xchg cld mov push enter insl mov adc (bad) sub dec dec mov (bad) iret pushf or scas adc jae xchg aas (bad) sbb cwtl cmpsb lea sbb xor mov out lret inc and out test test test int movsl in popf out inc mov fildl fdivl mov or pop push call das xor jmp aam in aaa xorb lret jle daa push mov mov stos cmc popa pop mov inc addl xor stc arpl cld sub aas shr fisttpl inc enter push movsb mov mov mov push outsb add add cmp xor stos mov scas xchg pop cmpl stc push inc std out call pop rcrb setno dec xor jns pop outsb xor test xor adc fabs inc mov js mov shlb nop nop jl and data16 lcall insb push and int xchg xchg xchg push repz pop mov mov movsl leave xor lods jp (bad) cmpsl das xor inc js dec push andb cmpsl jnp push adc mov jbe cmpsl mov or sbb popf dec push lret push into push jb (bad) std test push xor jns sub and popa pop test sub sti sbb xor mov (bad) inc push pop mov inc adc xor or aad scas repz and aad sarb jge or or xor pop xor xor nop loopne mov leave (bad) daa add cld mov pop jae inc sbb rorb lret or dec push inc push mov dec pop jno fidivl popf jo insl jle into and sbb adc pusha mov mov jne js fwait outsl xor ret or or out xor cli std dec pop (bad) lea xor mov bnd clc xchg cmp pop sbb xor in inc (bad) dec dec pop data16 push rolb sub jmp jl add sbb add ss and and ret enter and aaa mov mov stos cmp mov dec loop mov pop (bad) daa fwait xor clc sub xchg imul pop pop jl repnz mov add cld cmpb gs repz iret movsl ja sbb pop aaa test xor dec rorb or inc mov cld sbb das push fiadd movsb fisubrl xchg inc (bad) repnz andb sbb mov insb and xor cli inc jbe mov fucomi shlb mov inc adc cmp jno les scas imul and cmp push dec jle fisttpll addr16 xor xchg push pop int mov pop into sub sbb inc xchg pop dec jo sbb sub imul test xor outsb pop mov push xchg cmc out int insl out (bad) cmp jecxz and xchg dec out fisub les mov test pop xchg cmpsb xor and jp stos je aam push push mov mov out jbe pop adc jecxz pop mov pusha stos dec push jno lock xchg cmp nop (bad) mov shll push js andl push xchg mov dec pop in je mov es leave add ret mov push xor stos iret lock mov outsl into jno dec push dec and shrl push in xlat rorb loop inc xchg hlt mov cs jge iret je lods jae hlt pop inc lcall jnp xchg stos jp daa mov inc ljmp sub cmc or in aam (bad) push push and inc sbb mov fistl mov idiv aaa enter push sarb pop repz add adc jae test (bad) add or xchg enter cmpsl fist (bad) rorb pop inc cmp pop js pop push enter les cmpsb cltd inc mov inc ja les lret aas inc jno sbb scas add mov mov int pop xchg sub push flds xchg aaa cmp lock push adc testb cmovns adc inc and aad pushf (bad) lods mov mov sarb fucomip test ret mov lock loopne scas mov mov das add sti cmp push sbb pop push (bad) sub xchg xor imul push mov pop es pop incb or push call jl jge cmp repnz loopne fld1 pop psubb xlat imul jl sbb dec mov xor fadds cwtl adc mov dec jg push jb mov outsl push subb adc push js pop xchg dec dec sbb adc mov push mov mov loopne (bad) into int push pushf out test sti adc gs pop mov dec fwait loope pmuludq call in mov out or xlat les (bad) in popf dec mov mov stc movsb cmpsl mov push bound int3 repnz jp mov repz mov sbb (bad) mov push push jne fiaddl ret adc (bad) xchg std sub out test pop xchg movsl mov insb mov subl gs mov sub mov js inc pop call mov cmp mov std mov (bad) icebp mov mov jo fldcw push jp and pop xor icebp sti xchg xor lock inc dec stos pop sbb push out push add inc pop xchg cmp inc mov sub inc leave or inc sub pop mov fimull adc adc in cmp inc test orl pop les (bad) jne es inc and (bad) test cmp dec add int3 (bad) jb punpckldq jmp xchg mov jno aad sub cmp jmp mov add adc daa (bad) adc dec sub inc dec or mov testl jmp dec (bad) dec or rorb xor (bad) and xchg fstps lahf (bad) jge xor cmp stos push popa pop (bad) and push rol (bad) int out rcrb popa xor in dec mov mov xor sbb lcall ret lock popa mov andl jecxz jecxz pop and rol ja push sahf mov out mov iret xor fcoml movsb xor xor mov cmpsb jae sbb repnz jl repnz pop or (bad) out inc test cmpb xchg test (bad) fimul mov movsl std sbbl test call pop jae pop jbe push cmp push push fwait sub std or sbb and lods adc aas push repz pop cld aad lret mov sarl pop lods shl sbb dec scas inc adc push xchg and cmp nop fildll (bad) or gs xchg gs (bad) xor aad xchg adc je mov (bad) loope jb in xor inc out xchg jge or divl xorb inc and and add pop and mov lods jno xor out mov adc ffree xorl inc negb jo jmp aam inc (bad) mov loope add mov enter mov jb cli jp out lea xor pusha lret mov adc nop lcall rclb sbb mov ja sbb mov bound xchg and jp test mov pop pop fmul inc ja in fdivs jg inc pop call lea xor clc adc test ret test jnp inc add jle cmc popa pop out loop xor stos rclb push pop inc sti mov test lds dec test jne mov jmp jno popf mov repnz and jno aad cmp add inc and add ret outsl leave pop adc jns adc icebp jg test push push aad adc shl movsb cmc (bad) jl out adc push notb lock sbb adc loop aas adc int3 and cmp lock movsb mov and lret scas or pop inc pushf jns mov mov jmp push ss and fldt pop and jg mov mov mov out sub test and int aas dec dec (bad) subl (bad) jmp sub jle into xchg ret adc pop inc fsubrp movsb repz cmpsb fistpl xchg jne in pop pop push in xchg mov aaa outsl ror ss stos jbe in mov dec adc test pop mov jge mov les inc mov mov lea jp xor cmp inc ret or push jmp dec mov cs pop pop adc popf test adc xlat mov pop js mov ja mov lret addl ficomp push rolb cmc rcl xor dec out pop fstpt nop inc lock or jo insl repz inc push sub (bad) and mov aad out mov add aas fwait cmp js push mov and cmp push shrb xchg adc cmpsb imul ficom test xchg push fldenv lcall inc idivl lret gs and dec sbb cli xchg push sbb add mov ljmp mov loope jno cli xchg pop push ss enter cs enter lcall pop xchg mov ret mov into xchg sbb mov mov and enter cli insl jmp push jp pop jge,pt xchg in xor xor jns jne aaa dec adc cmp dec xor cld rcrl mov (bad) xor int3 movsl xchg add mov sub xchg bound iret sub ret push icebp push ss cltd into pop mov mov pop (bad) push stos adc out pop (bad) and roll inc push push jle pusha sub push (bad) (bad) jbe test rolb bound adc inc rcrl dec (bad) pushf repz test ss inc daa out cmc ror fadd push lea int3 test add pop aam clc daa jno fdivp inc stc xlat sahf push xchg add sub xchg cld sti mov pop mov jns xor pop fild out loope mov jmp pop (bad) fdivp (bad) xchg add lea inc sar sub out movsl xchg add and sbbl add int jnp gs push movsl adc std jge xchg repz pop jp mov sbb xchg (bad) mov inc dec xchg fwait imul enter in imul inc dec mov and les fwait aam mov sub cmp jo in loope push jle add sbb push imul imul mov dec mov lcall imul bound xchg int3 sub cld cmp pushf push fs cwtl push push shrb jno (bad) mov arpl sub jbe jae cmp out outsb popa and ret std ffree ds mov pusha sti (bad) frstor xchg push add (bad) (bad) ss and jno push rcrb dec jmp aam enter out sbb mov pop adc mov into mov add sti lds ret popa in pop js xchg ret inc mov scas jp repnz dec xchg decb pop adc fidivl pusha inc stos and mov pop and rcrl (bad) and push or popf sbb in push mov je or or mov mov scas mov mov mov lods (bad) (bad) leave sub insb (bad) jo sbb (bad) repz xchg outsl or lock stos (bad) xchg inc dec nop test jg rcr (bad) push (bad) jmp cltd or mov andl or shrb xlat xchg repz mov mov mov sti repnz dec adc scas jmp xor or mov push push enter mov add add pusha mov adc ret (bad) outsb xor push jecxz push dec roll adc outsb pop jbe push sbb xor dec xchg and aad adc dec jb loopne cmp or xor inc pop sub cli test pushf rolb movsl test (bad) xor push inc push mov lock dec mov mov cmp je push mov pop mov outsb ja jecxz and sub into mov lcall stos es adc xchg cmp (bad) lock jae sub sub mov mov or fldenv arpl nop cmp loop and repz adc addr16 pop xor mov mov dec mov stos mov mov dec test mov mov fucom sub or xchg imul xchg mov pop jno sbb jl subb (bad) pop aas mov fdivs inc stos outsb fcomip xchg jge icebp out jo ret sarl sbb into rcrl jl jmp dec mov adc cwtl ja and pop hlt scas int mov cld ret dec jnp sub adc xor lahf inc mov popa jbe fdivr mov adc mov xor or sub jnp lods adc lea sub dec fistpl or add lods out sbb mov insl fxch jno ficompl jb or ret inc sbb sbb sub dec cwtl dec cwtl out or (bad) out fisttpll dec sub sbb ret sarl lds cmp in outsb inc pop movsb imul xchg mov lea jno lcall xor push push pusha sub sbbl dec (bad) dec cmpsl jecxz popf xchg (bad) andl mov xor aas cmp div popf push jae sub push sahf jnp xchg (bad) (bad) shrl aas ffree or int3 fcmovu cmc mov (bad) pushf fs pop dec pushf inc insb clc sbb (bad) mov rcrb bound xchg add (bad) cmp pop roll and popf mov mov inc jle fnstenv jmp into mov xor imull cmp mov inc or jg sbb push mov xor push pop xor cmc adc outsl ret call inc inc jmp mov andb mov jae cltd jnp fucom (bad) jmp (bad) mov into fldl push jle out mov dec inc les mov dec sahf jmp and leave pop lods xchg in or (bad) jo jo mov or cmc cmc push jp jne sub push inc imul cmp (bad) inc xchg jg imul in cwtl repnz jge fidivrl xor dec xor cmp sub push push insl xor int cmp pop std fidivr jmp mov lds outsb lds xchg cli inc addr16 jmp int3 lret sahf mov pop mov pusha pushf and add mov sub lahf test adc das sar test (bad) mull push andl inc sbb insl jmp mov in mov (bad) repz mov jle adc push outsl bound dec in fnstcw add adc mov mov mov sub xor hlt stc add cmc lahf call movsb pop jmp test sbb mov call inc and xchg and movsl imul in notb inc mov pop addl pop jmp mov adc xchg sbb jl lods js loop or xchg pop sub lcall repz vdivpd movsb loope faddp mov loopne dec jae leave dec pop mov jmp bound repz or outsl inc push sub imul fstl jnp fs sub dec mul enter cmp or dec scas loop data16 cmp xchg sub pushf aas lods dec dec mov scas or test in and (bad) inc dec movsb mov dec sub cwtl divl mov sti add mov fdivp add test arpl inc ja les push cli repz cmpsb nop popa sbb or sbb pusha cmpb jmp addr16 add lock out and in adc cld xchg jne lds fwait (bad) xor mov leave xchg jne xor and out out stos int3 and lcall sub mov xchg lds mov jmp xor mov lds andl out mov pusha shr in sbb loope enter push pop cs mov movsb ror jg adc inc fsubrs int3 jns mov (bad) xorb mov and ret add dec jae imul or push dec mov fistl repnz fdivs jl daa and jge push jns push popf pop mov and cmc xchg jmp add sbb int3 stos (bad) mov es call sub jnp (bad) adcb dec fidivrl cli or mov jae stos stos add add push add jne insb ljmp arpl aam add sbb aam pop dec and lret dec (bad) ja in lods aaa repz xor test cmc fs lcall dec xor into cmp pop sbb mov shrb fidiv xor aad xchg dec int mov hlt std rcl push lods push stc xor arpl or rolb test int3 aas jp inc push ret (bad) hlt dec mov xchg xchg lods xor push jecxz int adc sub ret es xor xor xor test mov mov int sub mov je pushf loope outsb add cmp mov loope dec push pop es cmpsb sub lahf ljmp xor movsl inc sahf and cmpsb sub notl xchg cmpl stos fs (bad) push pop shll push aam add push (bad) fisttp fldcw mov scas xchg fs inc and out mov jae mov sahf (bad) or data16 pop popf scas enter cmp (bad) into inc test rcrb insl push cli push outsb test mov mov andl mov push sti adc add pop (bad) lock popa xor mov mov fs iret pop pop xchg test cmp pop push lcall arpl inc les push push cmp mov (bad) (bad) leave mov gs ret and jbe cmp (bad) jno (bad) negb test sub push mov pop mov cld out inc in add test dec sub sub jg dec sbb mov aam lret mov testl lods lods fsubp icebp mov cli inc dec and sbb test insl popa iret or (bad) call xchg (bad) jo inc add inc add add and pop or lcall scas in dec jno sub or xor das out mov cmp stc outsl mov lock stos xor rcl cmpsl int imul jo stos test loopne mov cwtl gs mov test fisttpll int jl imul or rcrb clc aaa imul sub test fisttpl inc aaa jecxz cs add movsl push into push push lock lods sub adc imul shrb fwait sbb cwtl fistpll daa adc mov adc out fmuls (bad) (bad) jb jge jge fisubrl fs ss adc push pusha and mov jne mov pop icebp lret mov mov insb les mov sahf mov fnstenv dec xor xchg test push mov in add add xor repz lods dec imul xlat push pop cwtl outsl lods out fstpt sbb movsl test ss fbld leave sti inc dec (bad) jne sahf test jo cs lea test and adc sub (bad) insl out add fs (bad) shl pop mov aad stos jb pop sbb cltd fsub (bad) jg ljmp mulb ljmp cwtl add fs testl mov mov aam pop inc fs mov jno test stos or imul ds adc pop cmpl push mov push enter push cmp dec ret lahf xor data16 stc gs xchg je (bad) (bad) icebp dec scas sarl add aas push fwait in scas adc bound xchg ret push cmp or sbb or imulb hlt out jne jg jbe xor cmp ret sbb ja add (bad) pop (bad) sub addr16 xchg push fisubr fcomi mov rcll pop pop popa les mov lret ret scas add pop and sbb dec mov cmp cmp jbe cwtl jb cmp mov insb (bad) mov fisubr popa cmp inc imul dec pop js imul sbb outsb add dec (bad) std sbb lock adcl out les iret cmp pop jmp mov mov insb data16 out inc in jo pop sbb cld xchg addr16 jp iret or es movsb sbb push out push pop leave ljmp dec mov jmp dec xchg dec sub aas pop repz and mov popa int3 jns out repz dec jp jno mov mov jbe sub call or lods popa add push xchg xlat and push push dec mov sub mov dec jo xor icebp leave fiadd or lret divb mov roll (bad) xor imul pop push bound cmp cld sahf rolb jmp mov push aaa or fstps dec jl mov pop mov push (bad) das adc ficoml sbb (bad) decb mov cmp dec push arpl lahf sti add pop es test imul fucomp fimull mov into arpl aam jle xchg mov push sahf dec mov or mov (bad) push mov xlat mov mov mov (bad) test or mov add sti (bad) mov and pop mov jns rorb bound push push mov mov shlb cmpsl ja jmp in inc add jnp jge or test mov imul lea push pushf and sub push cs or mov subl loopne out in inc cld pop xlat (bad) and xchg imul xor mov rcr mov repnz pop jno add mov add cs add mov jmp cmp add insl mov sub (bad) loopne std loop dec dec fadd inc sti lret add adc data16 jnp cmpsl lods lret sub or int3 jno push jb mov xchg sbb sub loope repz loop inc jecxz push dec push dec stc mov xchg in movsl xlat js pop pop test inc mov push es popa out push mov enter and bound lock movsb xchg sub push xor jbe jp fldcw xlat add sbb mov xchg and sbb data16 mov mov mov xchg adc js jne in int mov inc push xor xor xchg sti test stos mov imul sbb mov jne test sub lret cmp test sbb gs cmc mov mov push loopne in into rcrl mov cmp aaa iret popa mov push ficompl frstor pop dec xchg xorl xchg iret loope and sub cmpsl mov loopne and sub dec in scas stos mov test push jg cmp jnp sarb inc test mov jbe and je cmp loope xor pop clc pop pop jno and cmpsl addr16 xchg mov daa out push fwait rcrb and or popa xchg xchg mov out pushf jne dec int3 inc and (bad) outsl into xchg dec jmp inc out adc (bad) cwtl adc cmpsl stc inc ds mov out jb shrb sub mov xchg mov push clc movsb pop mov fsubrl mov cmp je shrl idiv fisub andb lahf call cmp jb push xchg popa hlt cmp cli outsl dec dec test mov and ds dec lcall dec enter (bad) insl xchg add ficompl jp sub jmp dec adc leave es lret mov mov mov stos sbb iret or xor push loop scas xor sahf inc push sub aam jno jge jg jne cmp adc jle push and js stos imul inc cwtl stc ret push mov aad jnp mov and xchg mov push dec lods idivb inc xchg movsl pushf mov repz sub aad ss xchg cltd xchg (bad) or mov shrl push xchg xor ljmp in negb cli incl sub sbb sbb inc cmp lcall jbe sub mov xor (bad) adc test insb mov or pop xchg sbb loope arpl enter (bad) (bad) stos and jb lret jge lods insb icebp add sbb push push cli clc (bad) cmp adc cmpps inc mov sahf pushf inc cs mov inc call cmc stos mov dec loope xor dec ror pop sub xchg adc mulb and fwait sub cmp mov adc clc add (bad) idivb aaa jns stc mov lods sub loop xchg arpl pop xchg push lea (bad) mov or popf (bad) jle add pop cmpsb inc push popf jl dec push mov adc jb,pn dec call int cmp sbb mov lods dec and push push xor pop mov (bad) dec out notl jmp hlt inc xorb add movsb call cs add or ficomp fistp and (bad) cltd cwtl xor pop lret pusha jp cmp cmp fimul pop sbb mov pop dec scas loopne mov add aad jl and pop sahf test add pop leave push push cs push arpl mov fstps adc clc xor rol lea cmp clc lods mov inc add pop xlat dec mov shrb xor jge je daa or sbb lcall pop (bad) pop ret pop test (bad) stc xchg jl sti mov jnp pop (bad) bound sbb fnop jge aas and fnop aas xchg adc inc into cmpsb (bad) and jno cmc dec cmp test mov loop push and incl fadd rorb imul jecxz lods scas repnz mov inc dec jnp out mov (bad) (bad) fstps or (bad) nop xchg jp stc inc sbbl sbb push (bad) add incb and mov sbb iret jp mov cltd aad fcmove loopne fnstenv mov jno insl push rorb xchg or out xchg fidivl lods scas xor cs int3 xor call dec mov fidiv daa or ss bound pop jne sub int or jne stos push lcall mov in pop arpl jg pop dec pop and sub (bad) fsub (bad) arpl enter or xchg xor and stc push loopne add dec sbbb add faddl ret sub mov add mov mov lods fbld or push sub mov cmp push mov xor es aad xchg mov sbb jb icebp xchg outsb lods sub dec orb cmp mov cmp fiaddl add rolb add and and mov imul sub sbb and ret popa jp jb cmp mov mov mov mov push add mov inc xor inc or mov push mov int3 rol inc daa xor jecxz xor lds xchg sub gs rorb pop jecxz sbb cmp xchg shr jle leave insb xchg mov cmp dec jle or aas and scas shrb sub or adc adc cmp xor mov sub xlat mov repnz mov arpl fcomp sbb fdivrp cmp cmp hlt das fisubr jl mov insl rcr jp or popa xor (bad) (bad) fnsave lcall ret inc xor enter insb (bad) xor mov lret in mov push clc aaa repz int3 lcall stos push sbbl add or push adc jnp dec jmp or sub orl mov pop adc mov dec mov stos sbb cwtl gs push jns cmp cwtl push hlt ja lea scas popa cs mov jmp out push (bad) pop mov (bad) es test or or push adc (bad) sub push dec add pop dec cmp in sub sbb push hlt adc and xchg ficomp jae in fdivl inc push push or add daa gs xor pop cld stc lods lods divl lods (bad) sub arpl pop movsb fldt hlt loopne mov cmp pop push leave je mov popf add mov adc sub lds cmpsl pop sub jb xor xchg jnp mov loopne jp xor shr int3 iret imul mov lock mov test aad sub jle jbe (bad) adc fcomip pop flds leave sub pop jmp xor or movsl ret cmc mov cmp dec mov sbb aaa push pop (bad) repz gs sbb pop cld leave pop mov and pushf push xchg mov sarb pop push xchg adc (bad) das sub mov fs or mov xchg mov push jl mov add aam lahf push and and in sbb mov gs mov jb adc sbbb pop fs orl xchg aad call subb xor imul sahf popa or jle fsubrs sub jno (bad) jno mov dec xorl xor fisttpll sub fcompl in jne daa arpl leave xchg jg call in jno sbb pop repz orl outsb xchg jnp mov repz rcll icebp cmp (bad) add add inc mov or enter sahf adc mov xchg or cli pop push loopne,pt imul push in mov mov aam jl sub mov mov cli les adcb cld sub push cmp xchg push jo mov pop lahf mov jae xor ljmp xor fsubl pop movsl jne fbld xor arpl mov addr16 pop jl and add enter jno sbb push fwait add (bad) lods cmp fs fwait lcall aam lods inc and aaa lods jb adc xor aas roll push pop pusha mov and xchg cli sub shrb insb iret ret loop sub repz sbb and nop inc dec push imul pop loop test cmp push stos dec push jns sahf mov pop mov icebp xlat ss leave cwtl jno push fstl (bad) ds or arpl inc hlt inc jle jno jmp xor fsubrl adc stc adc pop dec (bad) push pop loopne and sbb lea inc mov jmp fldl rep dec xor mov mov aam pusha sarb aaa xchg add pop and pop leave mov ret inc mov mov mov push xor lods (bad) dec jg jl push mov mov stos cmp mov (bad) popa mov outsl (bad) cmp sub mov inc push (bad) iret adc inc pop mov add loopne pop push (bad) into fsubs dec lods cmp lret out mov push in pop jbe les xor push andl fbld sbb xchg pop jnp adc add data16 (bad) inc incb rorb lock cmp popa arpl mov leave shll bound mov or sbb incl lods mov aaa jno ja std pushf insb pop sub aaa pusha faddl cmpsb sub or std cmp push sbb popa scas mov mov cltd lret cs stos or scas add xchg inc mov aaa int jo dec sti xchg fisub (bad) hlt out push cmpsb mov lods inc sbb cmp xchg push ja je xchg mov punpcklwd std sbb sub jo mov (bad) xor push xchg xchg dec enter sbb addr16 movsb cmpsl pop xchg dec fsubl fdivr xor lods (bad) (bad) adc test push push xchg and xchg xor out mov in sub mov jns test aad js aad mov stos xchg pusha xor and inc xor add imul dec (bad) mov movsl outsb sbb lret andl ljmp std sub mov es inc cmp push and and bnd mov mov mov mov lret lahf inc push fsubrp stc push imul rolb test inc jmp push insl lcall loope jae test sarb mov in adc fbld sub xlat (bad) out mov inc sbb in mov xor mov lcall sub push (bad) clc push (bad) sbb mov ljmp bound clc jb push dec faddl or cltd test add pop data16 xor and sub ss dec out sbb dec sahf push outsb fbstp pushf sbb mov popa mov and push push leave int3 or icebp sahf jns incl (bad) push nop pop mov popf push and jns sub cmp lcall adc cmp imul xor mov fwait (bad) sbb and mov mov inc cmp cmpsb push xor or out push cmpsb outsb test fnstcw jg jno hlt jo mov fucomip jecxz fdivl rorb cli repnz mov sbb cmp mov jp sbb rcl popfw mov dec push scas xor inc in cmp push sub cmpb inc mov loope mov xchg push nop js adc lret das mov stos mov or loopne (bad) out sbb gs dec cmp data16 mov rclb sbb jmp rorl mov push stos add les or add das jecxz lret add add cmpsb push aas icebp mov xor (bad) out sub arpl xchg sahf (bad) pop sub gs mov fsubl rcrl push stos clc pop lds mov sbb dec and adc out jge icebp test push sbb dec test in ljmp push inc (bad) push cmp push xchg mov addl aaa sub incl xor fldl add (bad) dec in sub test out sbb sub or mov inc sbb xchg xchg in (bad) add bnd jp or cmp loopne mov xor insl rcr ret popf xchg add lods add xchg iret cmp jae sub push mov dec clc cwtl xor fst outsl push sub lods push pop repz add stos push ret cmp mov sar adc test data16 sub adc inc fucomp push xchg mov iret pop out (bad) inc dec dec push popf lods cmp dec imul repnz fs imul cli dec mov or (bad) aaa mov jge stos fisubrl pop testb les xor cltd push or adc mov push stc push ret or int cmpsl push jg push push adc cmp pop pop into shlb or repz int3 lret ja lret shlb (bad) out dec mov mov cmpsb inc pop xchg fcomip and push push sbb mov (bad) add mov push daa imul xchg stos lret inc loop,pn pop jae dec jnp mov in ss xorb mov sub hlt xor mov xor cld sti movsl cmp sub decl add dec ss mov repnz mov mov push mov das (bad) inc std mov in sahf test cmp (bad) mov xor inc xchg inc lods push push mov pop cmp mov add ret sahf rol (bad) pop and popf jo (bad) pop push pop es push daa cwtl and lds xchg imul repz ficomp fisttpl es mov lea les mov test or pop pop xor sub jge subb test scas sub (bad) and push hlt dec imul movsl and sahf sbb mov xchg out lds mov sub ret lahf dec lret cwtl hlt xchg mov or mov jbe or and inc cmpsl cmp imul sub sti test inc (bad) pop push bound jns in mov jl or bound ret fidivrl or lcall and xor pushf loopne movsl cmp push adc inc lea addr16 scas mov aaa pop xor outsl jb (bad) ss movsl cli sub pusha lods dec adc xchg mov inc adcl mov ljmp into xor lea cmp aaa pushw xchg cmp push in or ljmp and (bad) out inc fs out leave push fsubrl jns mov pop and lret mov imul (bad) inc test and imul jp jge lds add mov pop ficoml mov xchg mov add aaa lods out mov cwtl adc cmp cmp mov mov loope aaa pushf dec out sbb cmpsb xchg mov add lcall into outsb mov dec frstor imul cmp jl lds mov inc cmp sbb cld sub js (bad) pop push nop rorl sub int3 cmp sub leave fs xor add ret mov mov xor sbb and push popf in loopne add jecxz dec paddw ljmp jg dec out mov fprem1 pop fldcw fimul jg fstps push clc xchg pusha ret jbe popf pop stos sub cli test lea fist nop stos (bad) repnz out sub xchg fcmovbe (bad) cmc xor pushf outsb sbb pusha pusha out xor push push nop sub mov or out xchg add pop jg add cmpsb cmp enter loop cmp movsl push xchg xor mov popa gs fnstsw movsb dec jnp test out push es sti les scas js les fs lret xor loope (bad) cmp push mov and rcl dec jmp mov sbb xor sub (bad) (bad) scas popf ja cmp loop (bad) mov mov out and push (bad) test add out sbb (bad) aam cmpsb faddl fcomp cmc daa into cmp bound push out mov push adcl je sub jnp pop mov repz push cli (bad) xor out mov xchg mov adc pop adc push call and pop mov jl sbb into pusha mov sbb (bad) ror mov dec fldt enter dec add pushf (bad) fdivp aaa sbb and test nop inc cli mov pop ljmp shll hlt dec sbb and or out lock (bad) int mov jge xor in lahf inc mov popa lahf arpl cmpsl (bad) mov mov dec mov out aam sbb sarl jnp cmp lahf jb cmc imul mov (bad) fistpl xchg sub xchg xchg and ljmp mov push sti neg pop xor dec jb mov rep ss inc push mov cmp pop pop daa imul into sub mov std ret fcompl push std jmp ret or jb mov out jae rclb cmp sbb (bad) jg int3 hlt aad mov lods mov sbb mov in inc inc cmp cmp cmpsl dec stc adc imul out pop add (bad) jae adc mov xor das add lock (bad) sbb cs and mov insl mov pop arpl dec hlt ret sub fisubrl sti stos fs std jmp nop push arpl mov jno dec (bad) mov mov add inc inc out jecxz daa hlt in ljmp xchg je mov mov test push or mov icebp jle stos inc sti mov mov sub ret sahf arpl (bad) movsb shlb lock test inc xchg add pop pop lds xor mov add hlt xchg aas (bad) sub adc shrb (bad) pop movsw and leave inc mov test adc push sub fnstenv divl cmp or hlt fcmovu sub xor sbb fistl (bad) (bad) xchg rcr (bad) mov xchg inc popa dec xor ret jne sub xor sbb or out push fmul pop pop lea cmp dec adc jae sbb sbb add xor and pop push pop inc sbb scas mov xchg jns in (bad) mov ljmp xchg jae xor rorl mov ret jp iret xchg rcrl jge push in mov cltd jb pop scas xor daa push adc repnz mov out push enter xchg adc sub mov mov xor xchg pop in or mov xchg rclb loopne iret sbb sub mov adc jae dec in or xchg ljmp inc or add popf fcmovne dec punpcklbw dec add pushf jg jo jne jecxz (bad) cmp outsb adc jbe mov fmull lret add (bad) movb mov loop mov leave insl bound repz sbb mov ja sub lock in lds (bad) test es ret data16 out loope cmp mov sub popa xchg notb aad roll pop cmp js add in push idiv aam sub (bad) jnp cmp mov push out cmpsb cmc inc mov mov lret leave xor sti jbe sub push fs aad test sbb push and push scas mov push lds cmpsb int3 lea and sahf ret rcr mov mov test ss xor movsb inc jbe mov popa inc clc adc leave aaa mov outsl pop sub xchg movsl cli test sarl add movsb or jae lahf pusha sub mov and xor cmp and icebp mov inc mov ja cli adc inc pusha mov jge mov sub pop out xor dec sbb add adc jnp adc xchg sub std xchg ja cld inc fwait pop test xor push test lret aad mov mov movsb mov jmp cwtl pop cmc aas and xchg (bad) and jle loop insl adc iret aas jo roll dec mov sub ror in jp xor inc add repnz mov xchg popa shrl mov rcrb cld pop cs and pusha xor pop mov mov fisttp mov jne movsl aad cmp lods sub pop test lea pop out int mov ds int3 inc mov fwait test loop dec lret cmp xchg adc sbb dec jne add popf pop mov or mov dec xchg jne rcr adc pop cmp imul jecxz xchg mov andl ficomp int3 sub int3 outsl jae imul iret (bad) push jbe sub mov out cld or in xorl add or loop repz idivb mov imul jne ret aas and mov js push mov lahf or popf xor push ja ljmp xlat or or aad stos pop bswap rorb sub or (bad) cltd cmp cmp inc adc mov mov lret add fnsave stos rolb arpl ja inc jp jo push out sbb xor or inc mov cmpsb out call shll sub mov fwait adc test lods cmp and xor ss or je push inc (bad) cmpb ret pop sbb push ja movsl mov (bad) xor push pop imul arpl shlb popa aam xor movsb test negl add cli pop adc gs mov mov js out jo xchg cmp push ja and xor (bad) stos cmpsl jae xor inc and (bad) lea in pop lods add aas add push xlat (bad) clc nop xchg inc lret (bad) sahf jmp or sar popf lea xor shrb xchg push mov sub xor xor imul fs fist sub dec cmp jg inc cltd mov movsb jbe setp loope out jg fcmovnu and iret or ret cs adc dec decl cli inc es xchg out mov arpl adc pop or dec or ljmp pop cmpsl icebp jae cld out jl adc xlat mov adcl cmp lods rcrl repnz and movsb aas push mov nop int3 cmp nop push jno,pn movb arpl hlt mov cmp loopne xlat push movl pop xor push cmp mov lea adc adc and xchg sub cmpsb pushf xchg jecxz push push sahf inc loop sti mov rep add xchg and inc or notl sbb jl outsl decb (bad) js mov sub sbb dec (bad) and mov loopne mov xor or add pop sti or adc (bad) xlat pop out jge jo sbb mov push rcl mov xor gs jns repz (bad) lds mov imul fs lods movsl roll ds jl js data16 push push test movsb sbb call dec sub roll addr16 push adc sbb test push lret pusha sbb mov sbbl jl ljmp mov xchg pop loop mov nopl xor call js adc hlt cmp ss int mov push stos lret imul push and push pop or mov dec aam imul inc into aad cmp aaa jno cmp bound sbb sub xchg (bad) lret jle pop jle dec mov xchg out repnz cmc insb add cmp jnp cld test (bad) xchg jb pop cmpsb jmp inc xor jbe sti call push xor push ljmp xlat adc test stos out in and or cmp jns (bad) jns iret mov out btcl pop xor and or fldcw rcrb inc jnp mov gs (bad) xor cld mov (bad) mov ret add (bad) cmpordps pushf dec sub test mov pop pushf dec std inc out rcr pop hlt loop pop hlt mull adc xor inc cltd into push addb xchg pop mov add icebp imul sbb dec fimul jo sahf pusha adc xchg ja aas cmp stos pop nop push clc pop push insb sub cwtl fs cwtl ret jns sub jl out aad int cmc aas mov jecxz dec dec mov call in dec shr xchg sbb xchg sbb lea mov pop insl int mulb popa jg mov clc cmp addr16 cwtl iret xor mov incb cmc insb pop mov inc push push bound push sbbl pop aam pop dec jmp pop repnz repz leave jno sahf jmp loope push lret mul mov (bad) or add xchg pushf cli mov adc (bad) movsb in pusha dec mov rcrb fs popf pop xchg fisttpll (bad) (bad) fist jecxz jp sub push sub ss orb mov cld cwtl rcl or repz cmc popa fisttpll in cltd aam repnz scas xor sbb xchg add into bound movsb into lret cmc movsb jae dec lods pop jne icebp shlb jb cbtw arpl ret jae test xor clc pop aad lahf sti mov nop les data16 and mov jnp (bad) xor into fcoms out inc jae xor xor mov dec rclb inc mov or push mov movsl or test add (bad) in ja fistl fcompl repz pop mov jecxz idivb push cmp pop test dec outsl cmp mov push xor sti mov fs pop mov mov push pop mov mov sahf addr16 fstpt cmc jmp jg imul sbb mov daa out and retw insb dec inc rorb orl sub push jecxz cli (bad) pop cmpsl inc aas push add xchg inc adc push (bad) or cld adc imul sbb jno xor lcall outsb incb out inc cmc cwtl fwait shlb mov scas in mov pop rclb (bad) dec dec fnstsw insb ja ja add or jne ss pop imul mulps dec (bad) mov adc sub mov xor data16 mov shrb inc lahf hlt and sbb leave repz pop addb add and and (bad) (bad) jmp fs gs jb popa je xor add add out add add add add add add add jne gs jp add or inc gs je jb jne add push (bad) or add adc add add add add fs outsb gs add or popa je outsb outsl je jo xor add add or adc add add add add adc bound imul je gs outsb add add add jbe insb insb gs add add add adc add add add add add jo gs add or push jb imul add push in out push rolb add incl xor or arpl popa jae popa je arpl add push add popa outsb fs outsb xor add add mov adc incl das add add or inc outsl jne je jb popa je add or push popa outsb fs jb gs add add add add add add or jae bound jae imul add bound fs or add push add add add add adc inc outsl insb imul imul add or jb popa jne imul adc pop adc add add add or outsb addr16 fs jns add or inc outsl jb jb gs jae outsb jae add add or or incl add add or dec outsl jae addr16 jae outsb gs add or dec popa insb data16 arpl add or add adc adc add add add add or dec imul add or jo imul add or in or add add add insl gs popa addr16 outsb jae add or data16 jne bound add mov add push adc or incl cmp add or push imul jns add sldt jb arpl jb outsb outsb jae add or movsb adc incl xor add push or inc fs imul add or fs jo popa fs jb add add add adc add add add or inc jb je fs add push add jne je add add add add add add add add or fs popa je outsl outsb popa jb add or inc insb gs add or add incl sub add adc arpl add or jo push imul add adc push mov adc incl sub add adc add fs imul add outsl outsb imul or push push adc adc incl sub add adc add popa outsb gs gs or inc jo je insl gs jae add add pop adc add add add add add jae imul add or push popa jo jb jb imul xchg adc adc incl sub or push imul gs gs add outsl jae outsb gs add or add adc incl sub add push or push outsb jae insb imul push imul add or jns adc add add or inc outsl je gs outsb addr16 add adc inc jb insl je outsb imul jae add or adc add add add sbb add gs outsb je jne outsb gs add or jae jae jb popa je outsl outsb jae add add add pcmpeqd adc add add add add pop add insb fs xor add pop add gs add push pusha adc sbb incl xor add sbb jne je imul add or dec popa gs outsl arpl outsl insl gs add or scas add sbb incl sub add sbb add insb outsl jae add or jae jb addr16 gs add add jle lods adc sbb incl xor add sbb add popa imul add arpl insl outsl insb arpl gs add or or push sbb adc add add add add jbe jae add or arpl insb imul shld sbb incl add add add dec bound add adc push push imul insb outsl jbe imul xor add pop jle mov pop add add or outsb fs jbe jb add or insl popa insb gs gs add movntq (bad) adc or push add add add add adc dec popa insb popa fs imul imul add jb je outsb add or add pop adc pop add add add and add outsl bound add or push outsb insb outsb imul or or and incl add add or inc popa popa fs outsb add or inc je popa jae gs add push and add add add add add adc fs gs je outsl outsb jae outsb add or dec outsl insb insb outsl imul outsl outsb add add adc add add add add add js outsb insb jns add or jne imul add add or add incl das add add outsl jbe imul bound insb outsl jae outsl insl imul pop add add incl sub add or inc outsl jb addr16 jae add or data16 insb gs outsb add adc pop adc add add adc bound outsb fs jae jae insl insl outsb fs pop add popa outsb jne insb add pop insl setge leave pop adc add add add add or inc imul add or outsl jae gs insb imul adc adc or daa add add add add pop add jb arpl add or inc gs insl gs fs add push mov adc sub incl sub add sub add popa outsb outsb jae add or push outsb outsl jbe je outsl outsb add add add add movups add add add add or inc insb data16 imul add gs add add int adc add add add sub add insl popa outsb je imul push add data16 outsb add sqrtps fild mov incl xor add sub gs fs outsb outsb gs add or insl outsl jb gs insb popa je outsl outsb add pop xlat or sub incl xor add or dec outsl imul jb imul add jb imul xor add or addb sub add das or push imul add add fs add or add or popa outsb outsb imul add push add addr16 jae imul add mov mov stos add das add add add add or dec outsb insb gs add pop add imul or clc or xor incl xor add xor add jo je imul add fs gs outsl je gs jae xor push push out sbb adc add add add add or arpl outsb imul add or inc insb popa insl outsb arpl jb cmp add or in mov xor incl sub add xor add jae outsl jb add or imul add adc or mov adc add add add add imul add add jb ja outsl fs add or adc xor incl aaa add add adc inc popa addr16 arpl insb imul add or imul jo imul push jp loope mov adc add add or imul outsb jae add or inc data16 jb outsb imul jae add adc jae dec adc ss add je inc add bound mov inc add inc add inc add popa inc add pusha inc add pop inc add popa inc add pusha inc add pusha inc add add add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add push lea (bad) (bad) (bad) incl add add add mov pop inc add add sbb add add add add add js inc add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add loopne inc add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add sbb inc add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add dec and (bad) (bad) (bad) incl add add add mov pop inc add add sbb add add add add add and add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add or add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add mov add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add mov (bad) (bad) incl add add add add add xor add add add inc add add push add add add add (bad) (bad) incl add add add mov pop inc add add sbb add add add add add call (bad) (bad) incl add add add mov pop inc add add sbb add add add add add adc add (bad) (bad) incl add add pop inc add (bad) (bad) incl add add add jge add inc add add add js add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call push mov xor pop ret push mov sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call movl mov mov pushl call mov mov mov pop pop pop leave ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call push push lea push call call push push push push lea push push push call add lea mov lea mov movl lea push pushl call mov mov call lea push fld1 push fstps lea push call lea push push call lea call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call push push push push lea push push push call add movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call lea push lea push call lea push push call lea push push call mov lea push lea push call lea call movl fwait push jmp lea call lea call lea push push call ret lea push push call lea mov lea push push call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf jl add (bad) (bad) (bad) (bad) jmp add adc add add add insb add add insb add adc add add insl add add insl add adcb xorb add add add add add insl add add insl add add insl add add add push outsb add add add add add add outsb add add outsb add add outsb add add outsl add sbbb add outsl add add add add add add add add add dec push push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop pop jbe popa inc jb push popa jb add pop pop jbe popa inc jb inc gs jb arpl add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc jb jae add add pop pop jbe popa push popa jb gs add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa inc jb inc outsl outsb jae jb arpl add add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add jbe popa push gs push inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop pop jbe popa inc gs inc jb xor add add fs imul xor add add pop popa fs imul add pop pop jbe popa inc jo xor add pop pop jbe popa push popa jb outsl jo add add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je 