cmpsb call imulb gs adc mov data16 xchg push dec popa mov repz lods mov fisub cmpsl push and outsb inc movsl mov push pop repnz repnz loop call jne push les popa lea pop shrb xchg add xchg mov sbb and pop and in lea loopne test test pop loope lods pop pop push push lods mov movsb cmp sub mov cmpsl jae es int3 jo movsl xchg mov scas mov int3 scas xchg push stos mov ds sub dec and imul mov push mov push shlb pop js push mov mov inc fwait pop mov push xor mulps mov aas icebp add inc inc movsl adc lods xor das inc dec pop inc test clc mov dec movsl cmp inc mov pop test jbe adc stos sarb jbe xchg pushf inc sti sub jmp push push je pushf cwtl sti sub sub mov jb cmpsb pop push into fstl cmp addr16 sbb dec pop rcrl cmp js mov pop inc arpl cmpsl cmp fcomp sbb movsb pop iret adc mov add push cmp movsb nop je lods lods mov outsb les mov jge push sbb ret mov mov popf push pop (bad) icebp es mov jl xor sub int mov cmp sahf dec add cmp cmp and sub jg mov dec je push aad popf cmpsb leave mov jno movsl (bad) idivb pop xchg mov cs pushf ret cmp cmp xor push icebp adc scas push repz push lods fidivrl cmp mov adc add out cmp sub add mov repnz mov inc or inc add pop jge or add repz and mov xor and out sahf mov xor ss add call cmp aas loop sub lods imul mov xor (bad) sub xchg and dec (bad) in cmp int3 sbb std enter jp adc repz xchg aam inc js je and jns jmp mov xchg adc inc mov in loopne cmpsl mov movsl mull adc mov sbb sbb sbb mov dec pop stos aad mov into pop outsb lds fisubl fs int3 or xchg push add cmpsb xorl mov ret push mov push xchg test ja stos popa sub fwait llwpcb fstl mov cmp repz subl xor das xor or movsb xor stos push or and popa aam jne dec les xor xchg aaa inc mov and popa pop xchg mov in jle sbb push and mov repz adc cmp inc add push mov mov sti jnp lods xor sub cmc cmp fidivrl in dec jo adc pop push vcvtsi2sdl jecxz push cmp pop cmp mov pop xchg insl pop mov xor jno (bad) insl adc cmp cmpsl add xor out cwtl xchg in and decb mov inc push or scas sub push push xor insl adc adc and cmp pop mov leave subl cmp inc (bad) fwait movsb pop test sbb addr16 mov in inc jno pop (bad) shrb aaa mov insb inc mov mov adc outsb xchg inc fsubrs adc insl dec xchg test test cmp dec push in adc icebp es mov jg mov bound lea xchg jge call cmp cmp daa inc sub test hlt pop scas bound stos xor inc mov jmp mov (bad) push cmp xchg sub lea mov iret push movsb sbb push fwait adc int dec mov push subb xor and ss rol sub xchg inc in dec xchg mov xchg jae mov cs stos sahf popf test cmp xchg movsl mov sbb mov inc dec es cmp popa pop imul mov sub or aam mov lret push mov mov cmp xchg stos mov stos sub inc imul shll mov mov rcll sub in ss (bad) xchg sbb add sbb jno popa inc lock mov push xchg jne andl adc clc fsubrl mov jno push les push ffree xor mov andl xor cs xor mov lods jno sub mov or xchg in movsb sub (bad) adc jp push fnsave aaa mov es dec or mov in inc jbe push fistp lcall dec sub xchg daa lahf fs (bad) sub fldenv das fdivr lea fs mov mov inc xchg or push movb aam test push ds fs jb xchg gs push test lock mov jg sub adc stos adc jl push push add lods mov test cld ret ret add and dec jecxz xchg fwait jg dec test popa (bad) and push sub insb sub mov pop cmc xor stc lds adc push ljmp je mov pushw xchg hlt jns lock mov les sub push mov test ds bound sub and adc rcl scas and push xlat dec sbb adc shufps loopne xchg sarl inc es mov dec dec cmp xchg xchg adc popf js icebp inc stos push lds sahf jne sbb jnp imull and sub inc xor pop pop stos push jg push inc jb movsl cmp push adc int mov int3 xchg lods lods mov and cmp lds je sbb sbb sbb xor sbb insb jge mov pushl xor call roll ret mov cmp mov and (bad) mov xchg cmp popa adc and insb xchg dec pop mov fadds leave je push mov xchg push cltd loope call adc and sbb pushf test adc lds jmp lods mov jb imul lock lea mov push sti into xchg cmp jae cmp dec xchg andb imul push xchg sub mulb rcll call mov push mov pop cmp mov imul jle xchg jp sub pop sbb inc mov cmpsl mov jp movhps mov inc xchg fwait cmp sbb scas pushf xor stos icebp sub cmp lea cmpsb sbb jne sub mov mov popf dec hlt mov cmp xchg mov icebp xorl arpl cmp jmp inc stos adc ds or push int mov clc inc add scas insl jne sahf jno cwtl jle aas lods idivb add jne mov pop add insl dec mov out lea xchg mov push test nop jp scas stos inc xchg push xor xor in popf es mov pop aas pop sub push xlat lods cmp mov sbb jnp test subl scas movsl stos ficom add in mov hlt xor adc mov xchg cmp nop fcompl loopne cmp pop mov inc sub pop mov (bad) loopne dec aad add sub cmp aad sub xchg and pop (bad) cs mov sbb cmp ffree outsb out dec data16 fadd jmp movsl mov std pushf ss push addl jmp iret cmp call mov pop mov fs data16 addr16 fcoms lret mov cmp mov (bad) push fstl cmc xor fisub sub xchg and inc or xchg js (bad) push inc push clc imul adc cwtl in andl jno into cld cmp jmp xor inc mov or sub xor and pop mov cmpsb adc aas jge inc ljmp dec inc sub sbb push jge and fdivrs rcrl dec shrl jp fs movsl xchg ljmp and pop dec mov fisubr sarl popl fsub js sub mov js dec mov xchg inc mov push repnz mov rcrl mov call rol cltd mov mov leave sbb lcall fimul inc push ljmp push jae jo sub fldl movsl popf xor mov cs push test push addb stos inc cmp mov push sub dec fucomi mov mov xchg adc stos pop lret inc mov addr16 insb dec iret aad cmp mov lock sbb test adc fucomi lds cmp sbb fwait inc inc pop in sbb xchg xor fdiv ss mov ss inc in mov or add adc mov aaa mov or or lret xchg sbb adc lahf jge jne add fmulp push mov jmp (bad) ljmp push bound (bad) dec pop sti mov in mov sub xor (bad) jmp push jl jmp inc jl sahf in (bad) repz xchg add loope rcrb mov (bad) sub out repz sti (bad) divl movzbl jge push mov inc cld mov and xchg xor iret inc in add mov add lahf adc jmp imulb xchg lock dec mov ret pusha lock pop sbb push mov pop pop movb rorl inc jecxz stc inc or add inc pop lods sub mov daa pushf cmpl outsb adcl mov out out int3 or test pop cmp test lret and cli sub pushf movsb sbb or mov adc in ret mov mov ss int3 xchg sti fwait loop mov (bad) push out lret add iret mov sysret movsl icebp loopne or pop psllw mov or fdivp push test or repnz xor push ss jg (bad) out icebp sahf (bad) push mov xchg mov stos shr xchg jmp push xor and and add dec push fwait sbb or out insl repnz lret das jecxz mov (bad) dec hlt adc dec js dec jecxz cmpsl int jae cmp add fcomip mov rorl push fistpl pop sbb lds push push loopne dec cmpsb cwtl add std mov sbb mov push xlat push and mov stos add lcall pop fsubr shl int3 and in out movb or jp cld xor daa adc movsb mov mov xlat sbb push pop pop test push dec mov sbb push (bad) ss sahf mov ss int3 lahf aad fwait call (bad) sub jecxz sub movsb repnz add mov push mov add mov fsubrs repz (bad) sti fsubs add adc cmp out cmp es pop lods pop jbe rclb test inc adc mov out dec (bad) sbb mov and mov and cltd loop sub or inc push jae clc mov ret outsl xor leave add jmp mov aad out movsb es xchg popa add inc mov cs cmp xchg fldenv (bad) sub mov xchg sti (bad) mov jle add lds scas ds cmp push rep movsl ret or in shr dec stos vmread xchg enter sub jl lods sbb add adc push out xchg jge mov sub adc and lret sub ljmp sbb popa cmp in sbb cmp in push cld das call fadds gs in xor (bad) sbb out fildl push mov (bad) and add jns sbb sti xor in out cmp decb loopne ffree pmuludq cmp icebp inc mov mov stc jecxz or mov orl in ss es or (bad) pushf add jg jge xor loopne lods (bad) rorl pop mov out pop outsl mov sub sahf out ficoml mov sbb lods pop or push sbb lret add and mov lods lret adc and fmulp or mov lret pop cltd cmp mov ds and pop sbb push mov sub cwtl outsl or out std cs hlt fild and fwait mov sub jns cmp push add xor test push cmp adc enter (bad) scas aad ljmp fisttpll add lods add roll mov incl sti les cmc (bad) fcomp lods mov es stos les out jg jge xchg out stc aam mov div call pop mov gs lods jmp lds sub insb movsl sbb or mov sbb xor pop lods xchg add fnsave cmpsl dec push and cmc push dec jno daa pop (bad) outsl push lret in lods jbe inc xchg in xlat fwait or xor mov movsb outsl fsubrl lock jecxz mov (bad) jnp call add clc lods ljmp xchg mov lods ljmp lock rcll rol mov int sbb push inc or jbe adcb popf pop scas add jno dec out jle lahf stos mov mov aam in ja mov je mov add or pop push lock out cmp xor xchg sbb push je in cltd adc sbb xchg sbb adc ljmp jle mov adc repz rol mov fwait xor mov add loopne in dec nop aad arpl sub and mov and xor pop mov push pop dec adc xchg movsl jg int fldcw sbb push ffree or in or rol pop xor xchg jge cmp add popa lret mov jnp pop fisttp and fdivs mov ja enter imul jmp mov ret lds or les cmpsb adc push popa ficom xchg inc cmp adc lds lods mov and push loopne mov push outsb mov pop cmp mov out mov pop push fs xlat dec xchg lds cmpsl (bad) xor iret popf js data16 mov aaa xor sbb pop pop es jne sub test adc and dec add out cmp lea or mov lock lea sbb mov loopne fnstcw es (bad) jno aad jp xchg add add adc popf xor out lds (bad) cld mov (bad) not mov ss (bad) das cmp popa mov imul test fnop mov or sub movsb jbe cmp pop and mov mov (bad) cmc mov xor mov and mov jecxz popa xchg xchg int3 add es sub arpl push sub mov clc (bad) adc and mov in dec std add leave dec nop and es xchg leave add and aam lahf jle pop jmp mov push mov xchg incb stos adc mov fstpl sub popa xor jo cwtl mov movsl jno and dec test shl or push sbb add je mov mov dec xchg xchg sub mov inc (bad) out sbb sub push push and mov ja inc gs daa mov in adc xor rcr sbb sbb or push mov icebp loopne or mov mov cmp das stos xor xor insl xor fbld loopne outsl pmuludq test es xor inc out stos add (bad) jo and dec test testl ljmp xor inc leave dec add push mov jb in or gs movsb and dec cld (bad) (bad) in fcoml mov (bad) add in mov pushf imul fnop enter sbb xlat jmp xchg scas outsb mov cmp jecxz aas lock incb inc mov mov cmpsb lock or mov add repz and cmc mov std xchg and mov cmc shrl es imul imulb inc ret cmp mov mov dec test outsl and add test int mov shlb mov int3 mov in hlt add mov test sahf dec mov fstl jecxz xchg mov dec jp pushf popf sub lea gs dec dec pop into imull sti inc outsb lds insb and insl shrl mov push pop lds jne and or scas adc popa cmp stos mov je mov jbe mov (bad) adc pop fldt lds pop xchg or and fs dec arpl adc lret adc sub push int push push mov (bad) pop sub mov xchg pop inc scas push xor add imul push push adc sbb ja lret xchg outsl cmpsb mov cmp movsb xchg xchg in hlt mov and cmc xchg fbld test pop adc mov pop mov out shr in (bad) (bad) mov mov mov mov inc loope mov mov xchg mov addr16 or and in in adc pop mov sub add outsb pop rcll outsb aam mov jp outsl int push js lret mov mov or or test cmp call xchg test jmp in not (bad) mov repnz (bad) or fadds lret movsb xchg lock sti push jnp (bad) cli js in jl and das adc cs pop aas or lea in roll gs bound cmp lods cmp sbb fimull sti ja xchg (bad) aad mov pop fisub xor cmp lret jl dec rep iret fimul stos loope push fdivrl jbe push adc pop ljmp cmpsl fptan into in hlt in out xchg jl mov out stos lds adc jbe lahf cmp xor mov lods adc jbe and pop sbb add outsb pop dec ljmp adc mov mov or out cmp aad gs mov mov adc in push pop lea push xor out fldl lahf jns repz cmp (bad) mov sub inc jnp mov outsb add jb adc sub sarb or cmp jl fsubrl push js es xlat push movsl jbe mov cmp je daa sub mov pop and sti inc ss in btsl pusha mov fs repz sbb mov push jmp incl fwait push pushl jnp testb pop pop imul mov mov xchg stos adc mov in pop fwait pop dec dec adc in roll jle jns loope lea dec ret cmpsb pushf cmp aam pop push xor std and adc pop aad pusha mov cmpsb das mov sbb fisub sub inc fstps aam pop lea stc ljmp imulb adc rorl dec push xchg or pop or inc or dec lods dec adc pop add (bad) pop dec jne push sbb aam sbbb dec cmpsl jp rclb repnz (bad) pop mov sbb out out enter fcoml xchg outsb mov jge in daa adc cli xor jne jmp jb (bad) adc inc jbe mov cmp cmp mov mov data16 shll rolb xor adc gs add jle in mov sub dec lret icebp push popa cmpsb call mov add mov mov (bad) aam push cmc fwait orl xor xor mov push fdivs mov insb xor addl dec pop test (bad) sti dec lods inc in cld out bound mov fdivrs gs enter inc fadd cmpsb gs aaa mov popf and xchg mov sbb push jle and (bad) sub push mov mov lea rcll mov or std es fldl push std ds cmp xchg inc lret jg jl adc sbb adc push push pop mov pop stos gs cmp sub insb ljmp test mov dec in mov sub sbb dec mov push push pop jnp ret incb cmc scas fwait and dec and mov jl mov movsb dec xchg mov cmp sbb dec and pusha cmp inc xchg outsb mov pop mov rclb sahf and and insl xor jl pop mov mov cmpsl sub je adc mov mov adc out lea and and dec lods push pop (bad) ds repz lret lock push pop scas jp jne popf adc stos in negb gs inc pop int3 sbb xchg aas sbb mov cmp mov add pop inc pop mov aad inc inc popa cs je test xor fs arpl xchg roll jg jb adc dec push mov pop mov pop pop adc je xchg in std fisubrl test imulb mov push xor jge mov inc and iret cmp push arpl push push xchg mov inc pop sub ss out test adc push stos cltd inc jge jle pop insb mov lods leave cbtw pop fldl dec cmp push dec loopne lods push mov gs mov sub xchg mov inc jb jnp adc dec jge (bad) adc mov push pop stos sbb jmp sbb lock test jb jmp push inc cmc cld mov mov sub imul inc adc sbb sbb test scas sbb and popa or jno mov in xor or xor bound imul xchg jo test pop les pop cmp dec jae ja sub jae mov int3 jo mov movsl shrb fwait gs cmp inc cmc subb or add (bad) and jp xor jne in rcrb fmulp shlb adc and mov scas sub jae imul pop ds xchg dec popa inc cmpb inc lea add (bad) int3 cld adc jae jle xchg test mov sub cmp fmull xchg xor movsl out lods jbe arpl inc test stc or dec adc mov aam push add or push pop mov push sahf jne and push insb test push jle xchg mov lret outsb lock push inc push mov jmp inc das mov push and xor push adc cmc sbb mov call adc push or je mov cs pop call bound mov push pop mov adc out sub add dec push mov int lds arpl jmp dec insl mov sbb pop in dec into movsl stc add sub sub pop repnz mov and sahf jmp ds sub mov cwtl cmp jg mov (bad) xor test imul pop jle test jbe adc cwtl xchg test dec stos xchg and jo pushf xchg mov jno dec les arpl imul stos pop test gs sub cmp push and add sahf cs add pop adc gs push cwtl mov ja sub mov add sbb insb mov lea mov mov jbe inc mov cmpsb mov aam sub dec out mov mov test sbb jp and sarb stos sbb popl mov gs dec mov popa cmpsl push es movsl shrl popf adc rcll dec cmp outsl in fimull xlat and shll int sahf ljmp fistpll xchg pop cs sbb inc mov or and mov dec icebp sbb divb (bad) jg test add or cmp cmp inc test pusha imul rclb aad bound or xchg cmp adc shlb imul and test sti in sub push xlat mov mov mov mov adc mov mov mov mov jge call cmc js (bad) sbb mov inc push sbb push stos mov cmp mov imul inc flds dec leave fs add push loope lahf mov inc cmc js adc xchg xor inc in cli inc add cmpsl pop insb sub add adc jle sbb xor inc sbb xchg (bad) xor sub pop loop push or inc jne mov pop cmc hlt inc in xor adcl dec push xor jle mov jl jp movsb les (bad) push jge add imul xor (bad) mov jno or test leave jo push jecxz jp dec nop mov and sbb pop gs push rcl test adc imul push arpl mov jge test jo jne aam test xchg popa (bad) movsb mov mov addl mov sbb pop lods xor shll pop inc jle push dec std dec push xor sub movsl outsl sbb mov pop sbb test xor in push nop push mov cmpsb mov js mov ja mov push jl mov xorl push in lcall cmp pusha inc fs divl xor push cmp out and xchg xchg xchg test lahf sub lods stos mov movsl clc idivb add mov adc dec push lea test cmp cmc cwtl cmp cmp in lret (bad) inc iret xchg jp sbb pusha aam test sbb cld dec and xor rcl jne pop push lods test mov out and clc mov xchg push mov push lods cmpsb adcl or and insl jmp test mov aaa push (bad) imul push les sbb (bad) in insl into movsl mov xchg jo dec push js out fsub es movsl mov daa sub add js xor ja push bound mov lahf popf ljmp mov adc sub adc rcll jbe cs dec test sbb les ss (bad) leave push aaa or test pop adc insb lea fwait xchg and pop inc pop test popa cwtl mov lods inc cmc dec popf push mov inc xor push dec stos lock push sub scas cmp ja xchg das scas xor mov aaa mov lret subl mov mov and mov shll mov adc sbb pop xor push inc test inc mov dec scas cltd sbb adc jns inc dec dec or jno adc dec sbb mov add jbe scas popf ds int and cs mov insb mov ljmp mov insb test jo push add fistpll fisubr dec andl jb test lea stos cltd mov mov inc cld lock pop aaa pop std and mov and test xchg mov cmp xchg mov sbb jge inc mov cmp in jmp fiadd mov mov lods cs stos mov jge xchg xor cltd fistp aas pop mov mov inc test test push xchg inc inc sbb jno push pushf mov gs cwtl jl adc popa push pop add cmp cmp and xchg jmp inc xlat cmp push dec push dec dec xchg xchg icebp scas dec test dec (bad) jo lods pop stc pop mov lods sub scas and test mov fistpll hlt jp lds out movsb rcrb sub mov sub jl and inc mov pop xor sbb xor inc xor and add das push or adc jmp mov inc cli (bad) pop push add push adc (bad) jo sub mov push mov jecxz inc sbb (bad) (bad) mov xlat lea subl ret lea cmp popf leave sub (bad) (bad) push cmp push pop cmp jb les push sti push in sub aaa push ds dec mov enter test cmp std xlat (bad) sbb sbb in inc cmp pop popf test imul mov sub xchg mov add pop sub mov into push pop cmc and ja or pushf fld dec inc cmp movsb stc dec lcall dec dec lods push jbe xchg fstpt xchg inc xchg cli mov cld lods adc adc mov push mov xchg dec xchg subl mov lds cmp es pusha ret lods cmp mov test dec daa shrb jmp and sub mov mov pushf decl jp sbb dec in fisttpll or addr16 pop (bad) pop mov std mov lds cld aas shll shrl mov sahf sub loop dec jns sbb (bad) fsqrt cmp push push fidiv test add xor je inc adcl icebp sbb jg mov mov imul gs sahf adc sbb test dec mov cs movsb loope or std mov subl lock lret push (bad) xchg dec push cmp fucomp inc out lods ficompl inc mov lods and test mov cmp sub xchg dec std xchg xchg or pop mov jle add (bad) pop outsb pop inc mov ds in mov pusha pusha cmp jns dec sbb xor loope insb ss insl sbb sti mov adc insl (bad) or sub les enter insb jmp push loope or add (bad) mov mov adc jge sahf scas add sub cltd fs jge or rcrl je xchg xor sti push xchg cmp or lea push sahf xchg mov es jmp bound inc mov dec (bad) repz and fwait in xor and test fstpl mov (bad) ss ja jbe mov movsl test pop sub adc lcall fwait sub in iret xor clc ficom jecxz loope idivl mov rolb (bad) mov cs xlat sub icebp mov xchg fimull popf into insb in and push jg mov scas xor xchg test fs add bound addl lds pop std jp mov push or jl mov pop fldcw pop scas inc pop loope insb divl and push dec xchg push sbb lcall inc sahf mov (bad) adc push es je jmp adc push lods push xchg pop imul fldl or test test cmp add mov imul insb jp jge test subl mov in jo pop (bad) cld sub jo push sarl push das push add inc jnp push lods push popf jne or xchg lods mov sarb cmpsb in das jno mov outsb and sbb stos inc mov mov test add movsb or add mov (bad) jmp push test sbb in aam and push test add lret lods addr16 xor push test add movsl (bad) cwtl scas mov test xor push test or dec in adc xchg push movsl dec dec dec into mov lea mov cmp cmp dec xchg enter jmp pop xlat pusha aaa (bad) mov xchg leave pop mov lds ret out out sub mov adc ljmp pop mov xor dec pop xchg jle cmpsl sbb movsl cmpsl roll or sbb push sarl in push and pusha sub in cmp adc jo push mov push movb add sub jo jno insl aaa scas mov xchg mov outsb aaa push iret pop lods jns dec inc push sbb adc enter fisubr and outsl imul imul xchg sbb inc std test add in sub xchg bound pop sub loopne fwait dec and fsub mov xchg dec lock pop ds cmp cmp mov jle and mov mov xchg dec cmp mov jl dec mov push stos and xor mov jno push push cmp dec jno lods incb add loope jp pop insb es inc jno sbb ja in xor fldenv jecxz push adcl sar push jno inc dec jg or rorl mov insl dec or jl jp gs xchg sbb cltd pop cltd jno mov add and insl mov (bad) ret jge mov lcall rcrb fsubrs imul xor int xchg jae sub mov lahf ja and cmp lods mov jns test mov cmp and cmpsb xor into mov push adc mov jmp mov inc mov sahf mov cmp dec ds sbb sub mov xor fcoms cwtl jge daa xchg in das jge mov hlt cmpsl dec xchg stos mov dec push arpl int xor (bad) fsts xchg cmp add (bad) push jae fldcw pop mov popf fsubr mov or (bad) sbb mov negl ss mov pop sub ret popf inc push mov mov cmp mov (bad) and stos cmp mov push popf mov jne jne sbb in fdivrs push lods cmpsl sbb scas mov cmp sbb int3 sub mov icebp mov pop rorl mov imul dec xor insb inc ret sbb adc inc mov add jno dec xlat or cmp dec sbb cmp pop lods lods pushf cmp push xchg gs imul clc insl jge push mov lcall dec mov ds pop dec push inc xchg arpl mov xlat lods and dec mov fmull xchg test inc cmp jae cmp popf scas cltd jnp mov push out enter pusha mov adc or insl mov mov repnz out ret jns jl sbb inc dec movsl ficomp leave cmc or sbb sbb outsb nop and inc in sub mov inc cli out adc xchg mov xchg dec pop fucomi jne cmp cmp add push ja fistp mov addr16 sbb cmp repnz pop xor and popa mov mov flds sub (bad) bound dec cltd scas stos sarl in test sahf sub lds dec dec test mov and xor adc std (bad) push mov push pop cmpsl sub and jge xchg push ret in xor repz and aad lods and mov in shlb out add lods fisubr (bad) fidivr hlt xchg jge pop sbb insl out inc dec popa push leave push sub fnsave xchg cmpsl xor cs addr16 mov shrb add in faddl mov dec lea xor push rcll push mov and xlat cmp adc adc ss adc jl loop xchg jge (bad) mov xchg lret dec mov mov dec adc xor mov xchg hlt xor rclb dec cmp xchg xchg adc add add xor mov jno inc sub insb aaa es xor aad int pop sahf cmp and (bad) push sbb and xchg in or pop xchg icebp sub mov sub inc mov or int push cs push int lods mov sbb vminps aaa and xchg mov ret fistl cmp dec add inc mov gs inc xlat vcvttps2dq push xchg mov jno xchg cmp cs jns jbe cmp sbb icebp jne cmp roll fistpll push (bad) hlt xor and out push test xor xchg loope leave pop int3 imul test imul pop mov xlat xchg jp and xchg xor or sub and imul dec cs fildl clc add jmp add out xchg xor stos push popf jecxz mov mov in in les popf dec sub insb cmc pop lea stos inc inc mov std pop cld imul (bad) ret cmp add xchg out push test or cmp in xchg in sub push in mov lock rep rcl cmpl cmp es or cmp mov rcl xchg in sub mov movsl lret xor rcll xor stos fstp mov push xchg push adc sbbl jae xchg add adc fdivl mov fucomp test sub popf sbb push fwait adc xlat mov ret cs sbbl xchg test adcl push or pop cmpsb mov jge hlt stc (bad) jno aas imul rcr and sub sub xchg pop jae cmp jge jge ljmp mov mov loope jno in fucom jge adc add pop jmp push leave sub dec mov mov lds adc rcll sub movsl in mov sub xchg mov repz fstl cmp mov lods aas pop pushf xchg rcll outsl xchg jns,pn loopne pushf movsl and dec push cs (bad) inc cmpl leave push loop cmpsl add adc pop aad xor inc aas mov (bad) leave adc movsb add lods aad out mov push imul stos cld test mov imul push adc nop push and cmp jp adc mov or sbb int3 in leave pop cmp outsb inc cmpsb adc xor xchg jg lods mov add test imul push xchg in cwtl lds pop dec inc sbb inc xchg xchg and pop dec jae mov icebp mov dec xchg adc mov sbb sarl sbbl xchg mov adc pop dec mov adc pop xor mov inc popa sbb imul cmpsl sarl jne xor cmpsl xchg insb adc sbb dec aas inc pop lea add cmp lods subl push dec cmp push mov icebp ret xor inc jno adc mov ljmp add adc inc outsb test mov std jl xor sub cmp push cmp aad ja add jp jbe loopne lods cmp stc mov jo fsts xor aam ret rcrl outsb add int3 movsl cmp cs ret sub cmp ds in adc dec fstps lods xchg loope sub push stos xchg bound imul loopne repnz xor (bad) jmp dec daa lea in cmp insl frstor (bad) lds xor inc shrl (bad) (bad) mov stos cmp das xor push outsb jbe stos add mov xor hlt dec add cmpsl pop roll cmp sub cmp dec outsl out xor test arpl xor lods fisubrl sbb mov push cmpsb shlb pop sub jnp lods sarl pop inc mov inc xchg loope push jp (bad) subl cmp push cmc push stos and pop inc and dec cmp jle jnp enter inc pop (bad) push mov sub stos xchg mov cmp xchg jge mov jle xor test shrb sub xchg push mulb mov shrb inc pop in add push ja inc jnp gs test sub mov jl mov jbe andl imulb push pop pop mov shr pop test pusha xor (bad) xor lret add mov inc sub sbb mov aaa pop adc jno movsb push pop adc sub adc lret or sahf jbe push jae cmp mov push cmp loope mov aas inc enter imul scas lcall pop mov pop clc icebp jge add mov mov xchg lods or cmp sbb inc int cld push (bad) leave adc xchg jp bound cmpsl push pusha dec cli enter and nop fnsave daa mov pop mov cmp mov inc dec lods mov lret mov out mov jp push mov xchg push hlt arpl lea inc push outsb xchg mov arpl and inc gs inc dec lods test sbb xor aad xor cmp mov stos loop out add or mov adc cmp or jnp scas xchg xchg dec jge push insl xor jbe mov mov inc out shrl mov inc mov dec out pop mov jp test scas xchg dec mov insl jmp mov dec not and adc jo shll outsb (bad) xchg call jns and cwtl xlat movsb xor push sbb in stc sub data16 add movsl test daa negb mov out mov mov movsl and xor push imul dec cmp push xor lods pop mov popf leave jg mov push mov push lahf push pop sbb jb pop scas cmp lds fsts inc cmp xchg cmp adc in insb mov fdivs popf jl sbb pushf sub and xchg jno mov sbb scas mov sub pop inc pop pusha rcll insb fldt in imul lahf imul push sbb out xchg jno dec inc fstpl int3 std dec push gs in cld sub inc mov cmp gs jno jne pop inc lds mov pop lods pop dec push push inc cmpsl push xchg stc nop sbb ret aam mov pushf xor push outsl gs pop std xor mov jmp shlb ja repz fwait jbe mov ret sbb bound add ret or stc bound adc aaa xor or stos xor lea push push push xchg jmp rclb mov push inc pop mov stc jle scas inc jg jnp and add jg adc ret cmp sahf pop fidivr and arpl mov stos xchg fisubr in and push test scas lods lea outsb scas and js jns js hlt xchg jno mov push jnp (bad) dec rorb jge lea mov flds cmp cmp mov out imul scas std fs imul ja mov jl rolb test cmpsl mov sbb sub scas pushf xor scas sbb mov cmp adc aaa mov pushf call push movsl pop aaa pop lods mov ss sub push pop push push xchg pop pop pop xor xchg xchg adc lea dec jne into or jmp push push push xor in pop imul add mov mov gs add xlat mov sub xlat rcl pusha xchg sbb insl cmpsb adcb cltd push xor in cmp cmp ds call aaa gs rcrl stos cli lret shll in and cmpsb lret mov lock pop xchg dec xor arpl test or add sub sbb test jo sahf insl je cs repnz scas sbb fadds jg data16 pop and popa repnz inc xchg xor fwait cs mov fs sbb cmc outsl jnp push fs rorl inc aad outsl xor shl cmp xchg dec inc or (bad) out lcall stc xchg add sahf sub mov pop fsubl pop cmp adcl cmp lea js push jns jg mov repnz fs mov inc sbb sbb scas lret stc dec or xchg loop jmp jl lahf push sub jg stc les mov cmp cmc insb inc in and mov out scas jb and push mov sbb inc cmp sub cmp testb jmp mov xor out inc lods test ja cmpsl jns push push jbe fwait push test scas sbb ficom jno sub cwtl jns mov sub jbe adc push inc push mov stos adc pop sub push jnp xor fisttpll (bad) push popa sahf push test stos pop test (bad) lods jbe outsb mov cmp push jno addr16 pop push pop mov ret push dec jge adc cwtl loope pop int adc jnp pop jb mov dec hlt pushf in cmpl je out inc mov inc or aad je pop and and jp pusha jg and xchg stc pop inc lods mov inc jl lea mov dec adc icebp cltd insb test icebp xchg xchg mov cmp cmp inc in insb adc inc popf sub cltd cs aas push imul cmp cwtl jnp jge xor mov mov dec test push je (bad) jmp pop xor aad and in inc push push push (bad) fdivl and xor bound adc mov arpl mov sub push test ds cmp xor mov (bad) in outsb insl xchg (bad) adc mov fbld push mov test dec loopne sbb shr movsl movsb sbb lods mov cmp stos test cmp mov sub fistp sub insl lret mov cmp adc xor push lahf push nop fdivs mov ret addr16 in test mov and popa mov pop add and mov std dec pusha xchg ljmp int3 in jge ret jno dec adc cmp cmp inc popa leave adc dec xor mov inc cmp dec sub aas adc inc xchg mov xchg aam jns popa bound inc jmp je mov or lods or sub (bad) or lcall xor cwtl mov aad out test mov xorl push shr dec xor push cld xchg pop imul cmc push or and mov stc xchg insb and pop out cltd xlat sbb pop mov pop inc ret das mov or and pop lret xor cmp or mov ja push lods mov mov and push insl (bad) xor adc fnstcw repnz scas cmp jne sahf push sub test cmp popf pop das (bad) sub xorl xchg mov aaa inc xchg ss jge test mov mov popa cwtl mov xlat add push mov xor add lcall push lcall xchg jns,pn pop outsb xchg jle push mov rorl xchg sbb xchg mov popf push icebp sub mov inc pop adcb mov add mov (bad) sbb inc pushf push pop pop cmp fldcw mov or mov test lahf stos out out call jl inc lds sub dec nop dec in inc rorl push add push sbb cmp std and mov lds sub loope mov test pop or (bad) insl dec push add les mov push mov dec insl cli pop les push test repnz js inc ljmp or add in movb hlt cmp inc icebp (bad) cmp out xchg push push push or add adc fcoml dec sbb incb sub gs xor sbb insl in jne cmp xor push rorl cmpsb sarl test ret imul popf insb adc mov mov sti int3 pop xchg fisubr cmp jns mov xchg movsb popa aam mov xor jo jno dec sbb mov cld add fstl push sti mov mov das jno sbb jbe,pt das sbb fidivl mov mov cmp test push aaa (bad) mov inc fnsave lods test test xchg scas xchg in push jle dec sbb dec scas insl mov add jo fisubr js mov shrl fdivrs xchg pop aas jl mov mov sub inc ficomp cmp dec out sarb cmp xorl cmp nop jo cli jmp sub in ds and in enter outsb xchg adcb jne in dec mov sub cmp or jle jp sahf (bad) cmc jl cmp les mov push cmc popa xchg addb movsb jge sub shrb mov cmp insb add push cwtl cs mov dec dec pop lods sbb inc dec mov cmc rolb lea xor adc cmp sbb push loop pop jle cli inc and gs jb mov clc mov push adc jnp push jb das cmp adc repz dec lods and dec fsubrs cld push pop xchg shll pop ljmp mov xor dec icebp push imull mov notl pop push cli xchg fcom rol xchg jb inc cwtl mov xlat test hlt jl ja imul int cmp adc mov dec arpl movd insl ret xor cmp cmp push out xor mov imul cltd cmc mov loope ds xchg pop pop (bad) cmpsb sub test gs mov mov (bad) aad mov jge in pop stc imul push repz adc clc jl inc stc cmp dec adcl push sbb fcoms and int3 inc lock mov hlt bnd icebp jmp addr16 mov jno inc inc jb mov cmp or out imul jecxz sarb stc cmc and cmp and pop popa mov cld add imul scas mov gs jp out add aaa out hlt scas cmp fmuls inc mov mov push push xor imul cs add inc jns ja jno sti shrb push outsb jmp mov and cmp ficompl and lcall xchg jecxz inc insl cmpsl push or xchg in and or inc inc (bad) mov cmp rorl mov imul xlat lea xchg jp xchg mov sub ret test aad mov mov mov std push sti ja add stos pop in faddp jo out je jge push add mov and imul cs subl push daa repz repnz cmc xchg cmp sub jo test mov jecxz jns aas (bad) xchg stos movsb bound pop cs mov pusha lods test std popa xor mov cmp jne fwait inc xchg jb sahf dec mov jg sub sbb outsb repnz hlt nop jle cmpsl cmpsb push xor test rol mov mov sbb movl mov sub push cmp sbbl mov inc addl iret mov in shrb stc shlb xlat and jle inc cwtl mov aam fldl mov imul les cmp adc push dec ds dec inc popa inc mov cltd jg xor punpckhbw rclb inc cmc andl jle push and mov loope pop add popa loop push arpl ret cmp ja jmp sub addr16 cltd fild mov xchg rcrb cmp ss cs adcl pop pusha insl pop mov pop cld fsubs fdivrp xor push dec push cmp popa inc lcall pop push dec stos pop cmp fnstcw mov jo inc loopne popa and xchg inc xor mov out scas sbb hlt xchg and mov xor dec mov xor mov ret mov push xchg xor dec add mov leave mov ret sti push sbb (bad) shlb and inc mov pop dec jg push cmc fsubrs sbb xchg xchg lea sti (bad) dec data16 lods (bad) mov push mov adc push mov outsl jns lods push pop xchg dec sbb ja fwait cmp add cmp push insl sbb outsb inc jge sbb add pop ds sbb stos or xchg in das aas (bad) aas push dec repz fidivl xchg cs adc outsl dec ds lahf adc jb sbb add mov or ja clc fst mov adc cmpsl jbe dec (bad) add repnz adcb (bad) and stc xchg sub popl in pop push jae xchg aam mov imul fs sub subl xchg pushf mov aam fidiv push (bad) push pop jb cmc cmp lds popa push (bad) jnp popa les mov sti jo je pop mov leave jl pop outsb popa js cs sub je inc dec cld cmpsl mov jp imul mov mov mov xor push inc js es enter pop inc daa dec enter jbe imul mov test pop lds dec into fisttpl mov mov mov (bad) fstps xchg xor xor and sub cmpsb inc cmp test test jp and jns inc stos shlb push fnstsw cmp push mov add scas xlat test adc dec and push push fisub imul cmp shl cld push and sarl pusha js cs sub mov xor sar add cmp (bad) nop aad lret rcrb xor lea jae xor inc jns lret add mov imul jns lahf and (bad) or sub jns xchg sub inc mov gs enter xor icebp int mov mov xor jnp into jnp pop jb mov inc addr16 movsb xor dec jge popf imul mov xchg cmp jne into or jbe xlat shrb mov mov shlb insl popa lcall push jge rcll shrb jne xor in mov jge xchg cmp xchg and cmpsb jle test cs inc pop xchg xchg outsb mov out mov adc and lds dec push (bad) scas test loope movsl mov test and enter call pushf loope inc jge lret mov xchg test sbb mov in out bound xchg lcall ljmp jne sub xorl and orb push adc jae push ljmp and cmp mov mov xor lea pop cs cltd lds inc xchg repz outsb outsb xchg adc ja xchg cmpsb in fsub loope push cmc lcall in sub repnz adcl sbbl addr16 push call pop scas sti bound mov cmp or lods (bad) jl pop gs out (bad) xor adc and mov fisub and sub fnop mov dec mov xor out mov fldcw ret cmp scas aam mov mov mov ret aad add jmp mov xor rdmsr push xchg or xor shrl popa xchg push jns push cmp orl jne orl (bad) hlt xchg xchg xchg jge cmpsl ja imul pusha out xor lods out sub mov mov add lea push lcall jns jle cmp outsb dec jle (bad) insb subb fdivrs jg les xchg mov test aas xchg jns sahf and insl popa xchg mov xchg xor rorb mov gs addb sbb insb adc mov cmp inc (bad) cmp push cmpsl mov add ss cld (bad) xor xchg jg sub mov pop lea push aas mov push xor push dec int3 mov and mov iret push mov inc nop push or mov jne lcall inc mov mov or add pop insl jno mov push movsb dec push sbb scas adc and jl xchg inc inc pop mov adc movsl or lods pop movsl or aam ja cltd cmpsb stc jl mov imul pushf and scas popa push jge xchg xchg out dec inc cmp bound inc loopne test cmpsb mov jb add sbb mov push pop adc xchg jns fstl mov aaa mov clc xchg jb xor xchg mov push out xor cbtw sbb cmpsb sarb (bad) dec mov imul dec push scas data16 test (bad) (bad) roll out dec nop mov test jg lea fs push stos push imul mov mov pop sbb out adc sahf (bad) and std adc clc jne js mov pop mov cmp arpl push jno test addr16 add and pop jnp push outsl jp cli mov outsb jb inc sub mov mov addr16 jne xorl xchg pop inc or push and mov aad je es imul sub mov push jmp in orb pushf jmp dec jb imul xchg out cmpl fdivl jg outsb pop aaa push adc mov adc (bad) xor das inc jno cmp pop test lcall sahf addr16 xor stos stc or addr16 cwtl adc out aam sahf (bad) jo mov sbb addr16 sbb cld outsl in (bad) dec cwtl inc xor mov pop cmp cmpsl sbb out dec pop addr16 or popa mov cmc pusha jne xchg mov jnp sub adc mov neg icebp xorb inc jmp nop inc jo sbbb mov cmp bound adc xlat mov lcall dec imul loop or popa cmpb into inc insl vcvttps2udq lcall push cmp inc push push cmpsb loop mov mov mov cltd mov in test rclb mov in inc insl or jp push aad lahf sarl cmp cltd cmp cs in pushf xchg out mov mov int push jge jg je outsb xchg les cld js xchg in push mov sub cld xor mov out nop mov aas lods and sbb imulb sub sbb adc scas pop int dec movsl inc sahf scas (bad) int dec jae inc jo mov cwtl xchg inc push addr16 mov mov (bad) push adc and sbb push nop lds cmp cmp nop jge push ss imul xchg pop xchg stc sbb jo mov fsubl cmp mov add cld fs xor ret dec pop insl push stos inc push scas ret ficomp mov loopne imul fwait bound dec lcall outsb adc leave sahf test sahf mov ret or ja movsb sbb mov ds addr16 mov clc mov popa push das cmp mulb push das xor scas sub xor dec xchg fildll call sub mov push cmp mov inc or mov pop cmp push (bad) sub loop push test xchg sbb imul inc into mov jns pop push adc lret fidivl push dec ret inc xchg sub pop xchg das test icebp and test push popf jg cmpsb test xchg jns sub or mov or movsl (bad) push mov icebp xchg arpl pop cmp push or das push xchg stos push and inc stos arpl jne cmpsl fs and in mov lahf inc (bad) xor dec das arpl mov jnp sbb loope pop rorl inc and jp push mov adc cmp scas xor mov sbbl xchg (bad) sbb adc imul inc jns test das scas push cmp ret dec pop loope inc mov cmp sub shll jne cld bound add cmpsl fidivrl daa pop lret loopne test push pop ror outsl je in sbb outsl mov pop out and fsubrl or and ja xor ds push cmc test dec add add adc sahf insl sarl fs es daa ds mov sbb push loope inc imulb push mov inc mov jne mov icebp leave in cmpsb jle push cmpsl inc js mov xor out scas mov cwtl mov push addr16 jle (bad) ds leave xchg cmp sbb (bad) jne int loope mov sbbl jg jb scas push (bad) xor add std je push sbb mov push sarb push inc push push test lods sub adc xchg jns loop jns sbb xor mov (bad) adc cs adc mov push roll dec pop mov insb sub dec dec (bad) push mov inc popf jno test cs add js mov xor jb nop cs sbb cmpsl push xorl roll add unpckhps shll mov fstl jle test mov jne into and and push xor jge lods out jl gs popf add mov imul test mov test js jno lea pop mov xchg (bad) ret sbb cmp stc scas je pop outsl lea xor inc xchg bound jno aas pop je popf inc adc and pop lds mov leave xchg mov cmp cmpsb jns fnstenv ret pop pusha jmp push lds mov push jge ds lods or lock fs and movsl jbe xchg popa adc xchg aaa inc unpckhps mov dec aad sub sbb adc mov mov sarl int3 jl dec test pusha stos pop loopne xchg mov xchg addr16 iret sub lods es data16 push test cmp sub add cmp popa push movsl jnp popf push outsb push imul jno jns push ljmp mov or pop sub jbe push sbb cmc cmp fisttpl sbb cmp xchg adc pop lahf in ficom or mov gs sub outsl pop mov (bad) fbld xor cld rcrl xchg push dec lret sub jp adc pop adc jg adc std and mov cmpsb outsl pop (bad) out jbe xorl js mov xor adc push test (bad) rolb in ds xchg cmp ja ret popa cli rclb test mov insb push pop cmp xor xchg sbb push mov inc adc ror ds push jmp pop mov ret pop jne sub int xchg ja int mov dec jl imul call int and xchg (bad) dec adc xchg push jg add mov inc mov pop idivb cmp aas shll insl cmpsb pusha pop popl adc push jle xchg pop xchg cmp aas sub ja jne jnp lock (bad) mov push mov dec mov add inc lea arpl hlt bound xchg xchg std es insl xlat pop mov mov lret xchg mov cmp mov and popf mov test push or call xorl dec or aaa xor add jnp bound push push add std inc das mov inc lea push sub push enter lea imul xchg imul jae imul js sbb shrb cmp cmp cmp mov daa jg out xor test outsl mov gs sub lods lods mov pop xor push imul sbb jo adc cmpsb jno inc lret push subb in fwait mov push adc pop jns nop add (bad) cld loope loopne loope daa pop std sarb jns adc insb add cmp (bad) or jns mov and cmp jne das pusha inc mov xchg mov and ficoml cmp mov push push mov cmp mov popa xchg mov xlat jbe pop (bad) rcrb mov stos pop sahf insb cmpsb je int loope push popa mov repnz jg cmpl jno mov test fidivr in push stos mov xor jle push mov mov lods jb add push xchg xchg and or mov mov push sub or mov adc dec mov dec xchg or div and gs mov mov xchg ja fwait jo jns mov mov push add dec out pop fimul cli jp lret bound iret pop adc xchg fmull push pop lea decl push mov push je stc cs pop sbb jnp stc (bad) fidivr pop mov jnp leave inc fldl pop mov and ljmp mov pop out and scas dec shrl rcrl dec jnp jnp push push mov (bad) movsb movsl add push jle,pt frstor outsb stc je push jg mov push nop lds push sti jp stc aas inc popf scas cmp add mov movsb cmp test addr16 inc adcl sti or sub pusha mov xchg out (bad) mov or mov xor jnp dec sub pop xchg mov or adc sbb stos out test pop test sahf inc lds push xlat and jl dec push into in pushf addb pop lods mov add xchg arpl cmc addb repnz data16 pushf fwait jg jg push mov inc (bad) aaa in jg out jge inc enter insl testl in mov sub mov or scas pop sbb dec mov jb push dec jp jl ja pushf out cmc pop push adc outsb inc arpl fsubs lret lds addr16 push jne push or lods test into rcl sub ss cmp bound lds cmp push cmp out outsb cmp and insb pop dec inc cltd cmp fsubrs std xor dec mov fs pop add call push pop je pusha ret aas jb pop shll aas xchg mov jne mov inc push outsl ffreep inc jp and adc ret pop testb shr push dec lcall jg cld jb xor xor jmp pop sbb sub ret jmp enter bound cli jnp rorl insb popa cmpl adc cmpsl aam dec xchg outsl icebp js jo xchg adcl push js cmp mov movsb jns dec fdiv jge aaa inc jmp and (bad) lcall jmp adc in test insb inc imul dec mov or sahf xchg and mov adc pop pop in lods pop leave pusha mov mov jno je popa or dec test stos fisub cmp jno fwait jae out mov jg inc sub xchg daa ja and xchg rol fisubr lods cmpb push add xchg ret jmp mov pop (bad) outsb dec push cmpb jne (bad) (bad) xchg jb xor add pusha add mov std sub mov aad imul cld and dec xchg mov jp dec notl sbb fdivl inc xor jno imul and mov roll in popf pop dec cmp adc test popf sub testb das jo xchg push cmc dec movsl outsl rorl and (bad) outsl jmp mov pop imul scas aas in and inc mov dec fcomip shlb xor or out mov popa cmpsb push push roll jmp call jmp push xor test loopne arpl inc test flds push mov xor (bad) push fwait fwait lods test and (bad) mov and pop mov xchg push dec aad cld test xchg fdiv pusha stc dec imul nop and sub pop hlt imul cmpsb fucomp in in mov flds mov popf cld cmp or dec xchg inc mov cmp sbb sbb adc jge xor lea mov xor fwait icebp push or jno rcr arpl push ljmp in stc add lret dec ret sub (bad) and enter mov iret dec (bad) call jae jnp sbb test jg mov add mov test push shrb inc xor push dec pop lea add pop out push cmp xor sub mov fs in cmp mov sub xor mov push xlat sub imul lock (bad) in mov sbb cwtl mov mov lods jns outsl js std jo push sbbl and add sbb dec push lds add mov out cmp test inc add (bad) in ljmp int or adc or call push (bad) inc add cmp fnstcw (bad) xor dec pop mov addr16 adc add and enter sbb js mov mov jmp sbb cmp dec (bad) xchg push push cmp sahf cmp xor push and and adc cmpsb and outsl inc popf adc movb or jmp adc jp cmp arpl sub imul mov insl mov and xor xchg aad enter mov mov lods scas xchg ret les jnp or inc jecxz fidivr push inc adcb clc sub push stc xor jae,pn (bad) fnsave pop les aaa lret cmpsb mov cmp dec mov sub ds sbb movsb nop cmp movsb (bad) jmp push sub test or fnstcw incb (bad) push sbb push scas push push pop dec lds ljmp cmp mov movsb insb jns dec xor sbb adc hlt in xchg push push mov inc sahf mov jle add cmovge add xor dec jecxz pop sub loopne imul adc inc mov and or sti xor mov push xchg jno inc mov pop xchg mov push add add test cmp dec adc sbb adc test enter movsb mov repz ss sub cmp add shrb movsb jle jg cmp mov popf ja sbbl scas pop pop push xor xor addr16 push xchg cmp xor mov xchg inc ja gs and pop lcall pop rcrl mov inc or dec mov dec push pusha insl mov jge mov pop arpl fnsave lods les add cs (bad) xor push xlat xchg pop cmc mov scas xor or or xorl adc popa pop aam or sbbb sbb data16 jg jno xor sbb jne jo ficomp inc lret scas add mov jl dec xor scas stos dec out inc mov aad cmpl mov add icebp test stc xchg push aas mov xchg jne pop aas dec cltd (bad) xchg das dec mov rol mov inc jg push insl pop mov mov rcr mov es cmp xor loope jne sub cltd push lea sub test xor xchg icebp movsl sahf sarl orb xchg lock out imul mov aam cmp testl jbe ss jmp mov cmc das incb mov push xorl xchg popf push xchg pop mov (bad) adc mov jno dec pop push xor decl imul imulb sub andb xchg (bad) cmp nop sub into adc pop jne sbbl das jnp je adc sub lret pop sbb jns sbbl jg movsl jle adc xchg cmpsb andl xor jae xchg jbe xor push sbb pop jnp adcl jg jp,pt mov sub adc pop add lret pushf fdivr lret mov mov dec and sbb dec inc inc movsl test cmp fdivrs std arpl arpl nop adc aad in mov inc inc pop nop mov imul insb mov lcall push mov cmp (bad) mov xchg add jne adc xchg and lahf ds dec mov jp mov mov int and mulb pop incb cmp int sub inc jno movsl bound adc and xlat aas fistpl orb unpcklps push or or imul mov push xchg dec pop mov xchg xor mov pop ja push jbe dec jno sub dec push jns xor cmpl sbb push ret cmp (bad) lret dec push mov dec sub mov lea in or jl or push dec popf popa dec adc mov test xchg int rcll jecxz lret adc sbb sbb sub (bad) xor pop or and push jnp movsl gs lcall (bad) lock (bad) out pop mov sbb repz push adc jle loope xlat adc jbe js rolb les mov aaa into dec daa pop and out fs jb add das mov lcall cld rcrb bnd mov clc pop push (bad) cli lods icebp mov inc pop ficom (bad) pop sti rorb dec or pop inc movsl or lea movsl jne pop or or mov add sbb lcall into insb xchg push stc cmp loopne inc ss cwtl fisttpl rorb sbb mov jecxz loopne add lret movsl mov xor fist jae cmp mov xor sub push fisttp dec add jae sbb push not xchg cli xor outsb dec sub or dec notl add clc cli scas sahf dec iret (bad) push mov jle xor shll adc lods cmp movsl enter movsl ret adc cmp je xor insl inc divb sub imul imul cmp js or out cmp mov sub out cmp lods dec cmp dec test cld cmpsl add mov mov mov xor scas sub cmpsb in adc dec inc out sub es cmp clc (bad) sarl lods imul lcall mov adc cs jae fistpll pop adc test xorl imul xor xchg jecxz in int3 mov mov push or dec fdivr leave push aam clc cmc int and pop leave sti push pop xchg mov lock insl jp sub hlt push mov inc les pop mov mov adc pop sbb scas stos and inc daa loope or mov sub xchg ss sbb jns insl xlat sub mov (bad) pop mov int sbb xchg push sub sub dec pop adc dec outsb insb jbe test sub fwait push lea into mov mov jne jbe mov sub in ds xchg imul popf add insl adc clc sub cmp es cmp mov xchg xor add test iret cmpsl xchg cld sub push (bad) mov int or jb xor mov push or scas dec and scas inc mov mov dec dec nop adc call popf xchg cwtl mov add jbe mov leave lods adc push mov cmp xchg inc cmp popf ss mov jns pop dec mov mov xor pop es clc dec scas pop rcrb insb in insb jbe add (bad) push lods repnz push jg sarb mov xchg pop add cmp outsb pop mov and std mov mov push sarl das cmp cmp aaa test sbb call xchg dec mov jb mov push mov fdivs loope xchg in xor xor xor pop inc out cmc mov pop pop sub sbb cld push xor inc (bad) movsl sbb (bad) dec sbb inc mov ljmp cld or lods inc sbb inc add pop icebp or push and pusha cmp daa lds cld cmpsl push and xchg pop mov xchg out int3 and dec xlat decb sbb sarb sbb out ss dec mov hlt jbe das (bad) xchg andps das inc and inc push cld rcrl lret push xchg pop sub cmp ja je cmpsl pop int3 cmp mov cs mov jno sub and xchg sub dec push das push cltd cld and sbb and jne pop adc jg jecxz insb fstpt inc xor idivb rcll inc mov ljmp and gs push push push pop add mov or dec (bad) jb dec xchg repz lock pop sub sbb js mov dec cmp scas or inc inc cmpsl cmp mov mov sub cmp int3 mov mov test inc shlb dec push pop addr16 push test inc xchg ja jo lods and xchg xor test adcl lods sbb lret ds mov dec mov mov sbb mov imul std movsb test xchg inc negb mov arpl lea popa insl push cmp pop sub test adc mov subl icebp subl cmp icebp (bad) mov in inc dec ss push ret mov jle outsb lcall outsl sub movsl cmp jp,pt push or jge scas add sub push insl sahf mov test jno cmp mov cmp mov mov pop mov cmp lods mov jno xchg (bad) and jno aad or pop test mov adc jge add into mov pop mov sbb test or sahf sarb loope inc inc test mov push fldcw and sbb jno bound jl jne out nop xchg sub outsb jmp outsb in cld push jne sahf or push push std adc into add pop fstpl in cli ret rclb ret pusha (bad) sbb push xchg psraw ja or xchg jle loope add js push xorl jne cmp xchg sbb inc cmpsb or in idivb push mov inc lds mov adc cmpsl jns xor test js je ja push push xchg inc enter ds jg in js orl mov sbb mov mov scas ret xor pop enter mov add std adc mov pop sub or addr16 mov imul jae and subb dec leave add movsl and fsubp jb cmp pop lods xchg xchg das cmp pop std cmp mov jbe adc sbb enter adc mov or mov mov adc mov sbb into push push mov jno add mov xor mov pop rorl icebp mov movsl nop and int push sub dec xchg inc mov pop pop dec add cmp sbb sbb xor cltd adc test fmull and arpl push push js cmpsl test cmp leave out ret fidivrl sbb push inc outsl xchg cmc cld fnstcw jge test imul pusha add loope jns push cmc inc negb jno push out jne inc add and enter mov insl push test repnz mov popf fiadd adc (bad) addr16 or add cmp sbb aad daa jno cmc subb test jne lock test movsl stc popf mov movsl xor jno jne sarb pop cmpl jle mov mov test outsb cmc or enter in xor mov inc adc sbb mov imul leave xchg ret imul xchg xor (bad) imul in test mov cmp or ret mov sbb sbb jno add scas sbb or out fsubrl (bad) ret mov imul sub test data16 dec lds xchg ficomp mov outsb add inc jl in push pushf leave adc lods imul pop repnz hlt ss xchg jg lcall jmp movsl fcomip jmp xchg insl imul test ss or out movsb repnz mov push out fidivrl adc xor (bad) cmp cli out jns fisttpll adc movsl adcl in push (bad) jmp cltd adc dec push rcll dec (bad) jno test inc fwait adc cmp jne daa lods mov dec je cmp sbb dec pop push lret pop cltd popl ficom jle cmpsb push in mov arpl or je sub push stc je test jne hlt inc push inc cmc cmpsb cmp jne jne mov pop test imul loope dec pop add mov inc sub ret int imul or mov stos inc pop adc aad dec push lds adc xor cmp mov add sub imul stos (bad) cld adc dec and mov mov sub push or shl (bad) push mov mov cmp xor or ljmp mov push push pop sub lcall push or in pop mov repnz xchg test addb rorb jle jge sub adc incb sbb jge aaa add nop sbb mov lret dec mov push jno test je push push mov hlt pop (bad) mov je and cmp pop mov mov bound aam dec inc je aad jle sbb std or jmp imulb sbb pop sbb (bad) pop xor mov cmc insb jg cs pop out cmp aas xchg jae pop (bad) lea scas inc sbb pop movsb (bad) sbb jp aad (bad) adc fs pop mov les bound imul je repnz imul push test js inc push xchg mov ja mov sbb mov jno jle sbb insl lds sbb test mov push test movsl lds movsl out push cmp mov outsl pop adc adc inc bound xor leave fsubrl lods or scas movsl sub repnz gs xor mov loopne pop mov sub jns fisttp pop ret and std pusha sahf push shrl jne shrb mov mov movsl jbe,pt lret mov pushf gs insl leave fnstcw popf sbb jo std adc lds push jno stos dec adc jne cmp cmp mov lcall inc xor sub arpl or cld sbb shr cmp xor xchg and dec out jno test jge cmp or jle cld in mov and pop jecxz pop dec inc xor rcrb push xchg int pop mov dec sti scas mov and add and or (bad) jne cmpsl xlat and jge or inc and inc ficom cmp pop (bad) outsl test xchg sbb cmc or xchg shrl jns ret mov inc and pop or lock mov push aad xor push or data16 dec mov mov lcall inc test cmp cmpsb divl pop imul jp les jns,pn dec xchg lcall jb mov push (bad) je mov xlat and dec lods sub shrb loop pop loope lret or or pop and es dec dec push mov pop add lods scas aaa inc into pop xor lret icebp lea aas sub roll loop adc jge in jo mov loope stc jo pop lea cmp test sub sbb andl add subb in pop cmp push xor cmp test pop ret cmp pop sbb pushf mov add cmp sbbb push push sub ljmp mov bound test xchg dec mov insl cmp loope mov xor mov popa mov inc xor cmp movsb dec inc xor cltd inc test pop adc jb xchg adc les sub out in shrl sbbb adc inc popa sbb jns gs in int3 adc imul adc mov or mov and mov push je mov dec jge mov jle sbb push in add push test pop test sub mov je mov repnz ret (bad) insb cmp movsl outsb sub inc lds lret and movsl lods (bad) cmp imul je and xor mov mov ficoml aad mov sub dec std xor mov jmp mov popf (bad) mov mov and lret fstl xchg loope,pt dec popf inc out lcall negb mov fstps jmp inc fs (bad) jno popf dec hlt add inc push pop push fmuls outsb add mov mov lods leave mov andl es adc inc push pop add jne push and into cld movsl and inc push lock js xchg xchg push xchg stos arpl push stc sub cmc leave xchg int jbe xor lret jne push mov jl sub insb mov les or stc sbb popf mov push in mov pop adc xchg cmp repz xchg add es sub xor lret jnp cltd (bad) mov mov fidiv arpl movsl iret test mov fsub mov das jecxz pop push inc and mov fisubr pop jbe add sarl (bad) movsb lods cmpsl jp jp push or dec inc (bad) cmc outsb fsubrl arpl add push aam cmp add loopne cmp add jne push jg cmp in mov mov test cmc push rcll sub mov xor jb mov add mov enter mov jge pop or sbb add mov (bad) dec out stos inc inc sbb dec int stc push stos add daa insl and imul test les mov ret jg sub hlt pusha (bad) je xchg mov and inc faddp lea jne sub sub (bad) or int in xor das cmpb xor daa stos int adc mov loope mov dec movsl mov jg dec xor je jns imul js aas mov jl insb fwait inc xchg fisttpll clc out lods imul adc xchg mov scas cmp jp mov pusha and sahf mov cwtl xchg andl cmp movsl add dec dec cmpl iret imul popa jae loopne mov cli sub ss repnz push fiaddl (bad) mov sub xchg and jle or push adc cmp cmp orl adc push enter fimul pushf decb and ret dec or push inc xor pop cmc data16 xchg jns or dec push insl dec mov sub sbb outsl xchg js ljmp adc popa inc pop std dec and (bad) cli mov mov mov push xor ret push push push lea sub mov inc mov and stc pop push out cltd adc xchg scas dec rcrl add mov insl sarl xor int sub jecxz and fstps jae lea inc xor rcl push test cmp jge leave pop stos sbb adc dec and gs mov test pop (bad) xchg ss daa orl mov movsl cmp pop ss mov mov inc (bad) mov pop cmp in and jnp leave mov push shll dec mov aaa pop movsl ja cmp sbb das xchg sub scas jg fwait std lret mov aaa jae push inc (bad) jne iret jo inc shlb xchg sub movsl and adc mov popf push sahf inc adc rcrl adc inc outsl cs sub mov ds sub fldl adc and ret inc (bad) aad sahf in dec jl push ret mov pop mov lret sarl out mov ss cmp jns cmc test mov jle mov xchg xor (bad) jno sbb adc mov loope xchg jl or cmp pop adc xchg adc pop clc adc jle mov add test inc mov test test adcl out lret lods icebp jo jp das push (bad) sbb fsts or pop fist jmp lods std (bad) mov (bad) mov push ret mov xchg shrb fnstcw es in in insb xor mov sub adc dec cltd sub outsb cmp mov xchg sub and jne pushf cmp adc lea pushf cmp aad pop out scas pop sbb in in push aaa mov das and cli or xchg mov xchg mov das ds lods scas hlt xor inc pop jo rol and int mov lret into sub pushf test aaa fnsave mov inc adc test cmp inc add xchg push xlat int addl xor lock in mov aas faddp dec sub int3 ljmp ds adc test scas xchg lds sahf sti xchg or xor sbb movl mov adc data16 jns cmp dec xor pop fs dec or out outsb or add in and push (bad) mov or adc and sub dec stc dec push lods and int pop cmp mov add in scas or frstor int3 mov sbb adc or ss rol sbb ljmp testl adc call pop mov cmp fnstenv jns aad xor ljmp and inc jge mov xor out scas clc jb mov into fnstsw cmp push pop cmpsb test nop pop mov xchg sbb or in jg adc xor popa adc mov leave outsb or jno test or mov cmp outsb addr16 in add dec pop mov sub fmull ss dec pop mov sbbl sub sbb sub lcall jmp jo and hlt sub jo push repnz xchg fwait cwtl push clc in dec xchg rolb sub add cmp cld mov es jno push dec mov xor pushf rolb add mov inc mov loope cmp or dec xchg or mov rcrb cltd sbb (bad) insb jns mov pop sub pop in cmp cmpsb mov inc imul icebp pushf daa cld sahf jle inc mov inc mov iret and jae inc xchg test and stos cmpb data16 mov mov mov int3 (bad) pop imul dec or fcomi lret fwait ds inc std cwtl stos loopne or test movsl lds repz arpl jne int push call sub cmp push (bad) xor or inc xchg pop mov lock out fcmovbe mov or cwtl adc add pusha mov (bad) cld push xor hlt xchg push bound sub dec xlat in js adc das pop movsl insb andl ja mov arpl imul aas aaa popf xor mov sub test mov and or cld mov adc add cltd and mov cmp adc sbb jmp in dec and jp adc cmp mov jmp aad popa inc inc mov dec ds mov adc popf enter fildl or cmp push xor dec sub dec push (bad) jl mov cmp jno and adc push dec push xchg sub cmpsl aaa xchg test mov jo sbbb fs sahf stc push aas xchg cmp cmp pop inc sub (bad) mov sub cmp adc mov dec in mov push sti jmp add mov gs pop mov outsl sar mov icebp out add push loop sbb ficomp jne or repz (bad) push sub jle vcvtdq2ps inc pop dec xorl es adc adc mov in lock adc lret cmp and sub aaa xor push cmpsl test adc sub out nop icebp test jmp sbb js enter jle mov and sbb into jl mov outsl jl andl mov push and push mov cmp or loope (bad) outsl (bad) adc js into add and (bad) lds adc cs ret aad (bad) mov push es in aad cs push xchg icebp pop (bad) fucom hlt ret xchg test push sti dec addr16 dec adc and mov adc mov mov mov dec and or mov gs add xchg cmpsl movsb pop cmp and jmp test or add pop int3 outsb imulb cmp push and hlt or mov inc inc mov stc in pop scas insb test xor push (bad) jae out and imul xor and lds ss jl xor inc dec aaa xor pop push in (bad) or mov stos cmp sub fnstcw mov jg sub jno incb ret stc sub pop in std fcompl pop xchg adc ss (bad) cmp popf jnp cmp cld clc pop and stos xchg cs fisub adc out scas and popa xor in aas sub cmp nop lods fcmovb test xorl sub mov push repz (bad) dec mov xchg adc mov sub sbb mov sbb cmp fcoml lds pop mov xor jge sahf cmp jg mov dec mov adc adc add push sub (bad) pop rcrl sahf or repnz jle jno sbb and mov ja fcoml xchg mov daa mov xor sbb jns cmp xchg es ja call mov and push mov jae aam cmp (bad) repz mov neg clc push enter js sub push xor ds adc in xor xchg mov scas lcall cmp jg sbb add cmp (bad) jmp std jp (bad) arpl sub ss icebp sub dec pop das mov daa adc jne loope mov cmp inc les mov enter fistl jns xchg mov cmp jmp sbb es inc ja pcmpeqw mov (bad) and lods dec xchg (bad) aad or cmp push sub xchg insl int mov (bad) jbe sbb mov cmp cld xor sbb ret imul imul rcl push daa ja movsb insl pop xchg mov mov jp pop sub pop in xor mov or orl (bad) jp fcompl (bad) repz lds loope pop es cltd fcoml pusha test gs pop stos popf sub (bad) fsubrl enter xchg mov jno sub mov sbb aas outsb (bad) xor fmul int jbe adc subl push push popf cmpsl mov in dec or (bad) repz xchg js scas pop and jecxz jmp es in inc mov adc imul in push test lods cmp adc nop imul loopne pop mov mov or mov aaa add push and mov movsb sti pop cmp mov in lahf push dec add mov in test push aad xor je adc pop cmp mov xchg arpl outsb push sbb fsubr jmp (bad) sbb mov mov pushl adc sub mov jmp and jmp stc adc out lea jnp inc xchg add mov ljmp scas dec cmp ds in sub incl (bad) fsubr aad loope and mov in rorl (bad) lock lock lcall fwait add mov dec outsb and mov pop mov out cmpsb pop in mov mov lods scas cmp scas inc xor pop pop leave fcmove push arpl ret je test ret scas and xor inc fldl inc in mov lret fs into sbb lahf ss xchg insb or das aas shll jg lcall fwait les jbe popa cmp push imul shrb inc pop lahf bound adc and mov cmp enter dec mov pop inc inc cmp push cmc cmc or push fstps jg sub imul or insl aam (bad) mov into jno fs xchg inc adc jne fimul inc xchg pop lock ja imul or mov dec xor std scas stc es inc icebp jle dec ljmp dec add xor fiadd pop hlt jecxz sbb dec mov mov out ret repnz call or aas jp cmc nop mov lods push lcall sbb stc ja hlt adc (bad) or cwtl (bad) push dec (bad) adc jle fisttpll rcrb mov pop mov push in inc call ds mov cmp adc jl sbb push ja or fstpl addr16 adc or stos and (bad) (bad) xchg (bad) sub xor mov ss aad loop pop and lods scas je xor dec push aad daa cltd cmc and gs pop repz movsb ds movsl leave iret insb jecxz fs into addr16 jns sbb mov mov xchg scas ret lcall out loope pop sbb xor adc pop int3 lods movsl std xchg push and sarb inc mulb pop inc jne pop (bad) divl ss pop repz pop lods cmp jle aam inc lds sub or jbe,pt add pop and xor add hlt outsb mov inc add cmp xor (bad) cld and inc test mov int mov mov push lahf mov ja (bad) adc test cmp movsl imul popa loope mov jno inc fnstsw mov xchg mov js mov cmp repnz inc call adc icebp mov bnd incb cli popf jnp scas out sbb outsb inc add bound loope mov lcall inc dec sub pop xchg cmpsb icebp inc inc movsb sbb test orl dec fwait push inc js jnp jns movsl daa mov (bad) rcl pop iret imul jae dec in out xchg add fiaddl or mov adc (bad) jne ret sub push aaa lahf add cmpl arpl pusha cmc pop mov cli roll inc push movsl lahf call mov pop mov aam scas les xor mov insb cmp in test ds mov in inc bound into ret add (bad) icebp nop mov add xor frstor daa rcr and add pop fdivl nop cmp xor (bad) ret sub mov pop mov cmc inc mov mov inc sbb movsb mov aad les jnp es dec jns ret mov (bad) xchg and cs shr sub out ljmp push sub mov push jns pop sub aaa dec out andb cmp in jbe push push mov test sbb hlt fcmovnu cmpxchg rorl repz and and into shrb gs adc inc out incb inc jg sub in insl ret arpl add pop jmp lods mov imul lahf adc out or ror inc and out arpl add (bad) ja sub xchg push mov test push sub fldl pop scas orb in pop sbb or pop mov jle add popa ret xchg out jp outsb or adc xor push cmp in mov scas scas setno dec xlat movsl fs movsb out in push es out mov mov cmp xor jp xchg movsb sub repz and cmp dec cmp xchg mov lods push cmpsl loop mov fcoml insl push sub jge aaa cmc pushf mov movsl cmp mov into arpl pusha outsb test push bound outsb pusha stos and jg mov xor push (bad) imulb xchg sahf jae push gs sbb rcll push cmc mov es mov mov sahf sub adc xor out cmpxchg mov mov xchg in jmp rol insl cltd ret test cmp xor jne push jo das fs cli add sub jne ljmp vpmacssdd push inc pop ss into roll div (bad) loopne sub mov std pop cmovle cmpsb push and mov lods push movsl addr16 dec jbe loope or sbb jge repz fstl test or or jl lods cmp int out mov mov nop lock js xchg outsb inc (bad) pop (bad) and adc sbb xor push pop aas push das addr16 enter xchg jno arpl in mov imul std (bad) cmc js fwait scas les sub mov pop (bad) push and lret dec jne mov jp shrl xchg adc jl mov mov jne stos mov aas jle dec sbb leave call mov leave (bad) sub mov adc shll movsl xchg movb fwait std jo sub dec roll xor push sub pop cmp nop fstps mov ror inc loope and mov stos sbb imul in movsb sub out int cmpsb push xchg jns or insb xor mov addr16 push jns popf int dec mov sbb dec insb (bad) loope xchg xchg ret sub sub mov sbb mulb pop mov test xchg push jo mov xor icebp mov std mov ds push orb (bad) inc jae loopne lret xor mov jmp pop lret fiadd std popa roll divl push rorb pushf out mov xor out std or ljmp push mov outsb divl dec lahf or dec test negb add mov hlt cmp cmpsl dec cmp xor jo,pn fbld dec dec adc mov cwtl inc mov pop adc mov and jne pop addr16 fcmovbe push mov imul repnz pop mov dec add bsf das lret into push leave mov cld shlb cs std cwtl dec adc ljmp add aaa and add inc mov mov std sahf jle cltd cwtl pop mov data16 int inc mov adc lret and shll lods jmp test mov frstpm(287 ljmp push fmulp pop mov push mov test xor es jp sub test ret rcrb push and cmp push mov andl jo xchg mov jbe gs push mov mov pop sbb bound and add lcall dec mov sub bound dec jno mov pop pusha push test mov sbb outsb dec orl into mov cmp mov mov dec (bad) outsl mov rcrb mov mov mov xor pusha cmpsl xor pop dec aas inc or aas ds outsb jmp lcall ds mov xchg je inc xchg cmp lds push xor mov popa sahf jl adc lret pop adc and test sbb data16 push movsb lret sbb fistl scas push or fildl pop bound add outsb fst bound je out sbb ss pop outsl (bad) lretw pop and mov adc sbb aam mov mov adc push dec xor call sbbl insb in sbb jle imul inc xlat cs mov insl icebp repnz or aad dec outsb xor ret xchg pop rclb cmc mov popa xchg adc mov xor cmp leave xchg sub jnp (bad) mov (bad) jnp or jb jmp dec in jecxz or xchg movsb arpl inc shrb add mov ljmp xor adc imul loopne nop fs inc or mov cmp xor push xchg pop lret cmp and pop call sbb enter and mov pop scas mov psraw add sbb icebp adc add add jge out dec sbb rolb js test xor shlb pop dec addr16 fmuls stc adc push lea lods add (bad) push sbb adc inc scas inc pop jne repnz sti cltd fs mov inc out (bad) fidivrl adc mov aad loopne adc push sahf sub add sub jnp mov mov pushf mov aad push sbb movsb dec jns lahf imul sti pop stc and xchg push push pop mov mov rorl imul push nop ss popf (bad) aad xchg push mov sub add pop dec add (bad) dec sahf pop (bad) push mov cmpsb rclb movsl mov push (bad) in mov xchg jne,pt fstl hlt add das je xor mov cmp insl fcoms and (bad) les test cmpb test push imul add scas xchg insl lea outsb cmpsb icebp jo fist icebp jl inc pop and fcoml adc cmc ret mov cmc push mov jg xor shrl jmp sbb nop jg push hlt sbb clc test adc inc nop and loope jae mov and jmp xor sbb fiaddl std sbb mov lcall test fisubl in pop fs or xchg jo int sbb addr16 cs insl xchg jl jne mov xor iret fisubrl scas and test fsubr stos sbb insb decb mov mov int3 (bad) icebp cltd and cli sub push dec jl sub negb sarb insb push cmp in jl loope push ror xchg sbb stc out xchg sub ss loop sbb add pushf push leave sub fs mov mov lds cmp push sbb imull inc test inc pop call mov lahf jg jle repz rorb ret xchg sbb push push xchg xor popa iret adc popf mov repnz mov cmc cmpsl rcr std test sub mov (bad) cmp add (bad) adc adc insl inc xlat jge inc adc arpl leave fs jnp mov pfrcpit2 (bad) sti and push lds mov aas push push test lret pop and lahf mov pop sahf dec ret add mov pop cmpsb ss nop lods iret inc dec imul fsubr (bad) push ret push subl je add jne bnd push dec rolb mov mov fldenv sub mov ds and fstps int push sub pop cs xchg jne lret mov or fdivrl lret addr16 outsl pop inc or test mov std lahf out sub ret mov pop mov (bad) int std or adc mov sbb push lret xchg mov pop jecxz,pt dec jge fwait int3 lahf sbb movsl test lcall pop and popf mov mov nop inc and mov mov data16 ret jno (bad) scas enter loop out and hlt test pop sbb push lds daa jne xlat jns mov lods pop cwtl (bad) aad cmc mov xor sub icebp adc push icebp rclb adc push cltd (bad) push stc mov stos mov jmp fmull push inc xlat mov data16 jbe mov push sahf gs mov jge sti shll pusha add xchg mov sub dec push jns mov or dec mov inc add cmp cli aas (bad) or mov enter sub ljmp loope or cmpsl stc int3 adc and rorb mov xchg outsl daa addl cmpsb cmp inc mov mov xor cwtl rolb sub cwtl outsl ljmp gs cmp xor repz xlat xor xchg mov mov mov ds enter mov add sub cmp ret xor cmp sbb (bad) lods (bad) inc sbb test cmp mov lds pop inc xchg adcl mov mov out jl js ja and mov jno sub mov mov pop js test cltd mov mull out cltd xlat xchg icebp pop das mov stc rcr and int3 movsb pop lea dec scas popf xchg mov or mov jb cs xchg mov or jge mov jne cmp (bad) int3 cmpsb xchg mov (bad) sarl inc int3 pop imul cld cmp and inc insl in push ret (bad) pop aaa scas pop lds cltd test jo cmp call aas sub leave out xchg jae push mov mov imul mov fnstcw ret movsb es mov jno adc and fcmovnbe cmpsl (bad) jo call les dec mov mov (bad) scas cmpsb push adc fcmovnb iret icebp call mov fs jge cmp es push rcll icebp xor dec or adcl jmp ljmp xor mov (bad) cld dec (bad) sbb std pop jns mov xchg push mov nop das sub mov cltd outsb lds cmp mov test lahf dec jp cmp int sbb rcrb pop adc xlat sbb add gs adc (bad) test sarb jb push pop in fild inc mov icebp (bad) movsl sub adc push ret inc ret (bad) pop adc addr16 fcmovbe aad ret mov lods outsb int mov insb and add sbb outsb pop stos xchg push pop subl xor cmc inc mov rolb daa jo fwait aad popa jle lcall imul je mov insl mov dec xchg int inc outsb push jmp ds and sti dec arpl scas xlat xor xor jno lret cli jecxz xor shrb call nop fnstsw mov mov pusha mov inc push jge mov leave scas xor jae push roll popa xor (bad) leave xchg mov addr16 and sbb xchg scas les lods cwtl (bad) repnz lahf xor cmp bound add sbb mov inc das lock loop ss test cmp hlt push xchg bound scas inc pop shr call and out jae push sub add ljmp inc enter add lea mov insb jbe stos int3 jg jns fsubrl addr16 and sub jp inc popa (bad) rorl popa aas dec pop pop sbb jne test pop out adc int inc sbb jbe stos jmp push fisubr in ficom rcr pop subl cs shll mov sbb stc pop ljmp test sub jbe fcom popl sub mov pop sti std jg imul push push jne (bad) (bad) push addr16 xor mov or insl les scas mov mov and fdivrs stos cmp push mov enter inc mov push insb rorb cmp lahf cli ljmp mov xlat or test push icebp jmp div push mov jo aad push fstp loopne lret push mov and inc mov dec mov das sub divl jg rorl mov mov shlb mov jge lods and xchg cmc pushf fcomi syscall adc fisubr fucomip push dec mov jne or es repnz lock cmc jno rolb fistpl aaa into mov sbb pop out xchg mov aam or aam stos clc test and aam dec adc add sbb pop sbbl pop cmp dec jg or movsl add jnp fdivl jnp lods pop ret mov (bad) iret jb jge jo scas xchg ds push andb ret (bad) sbb mov push mov push mov lods loopne ja sbb push mov das dec jmp jae adcl cs mov cmc (bad) ja frstor push adc mulb push mov push and in aam fsubl mov mov push les in or push rolb loope std xor mov inc sbb popf jo push insb movsl lods cmp cld sub sarl mov jg scas add mov mov movsl xor inc jmp push ja and and imul inc mov xor scas in and std dec int mov adc lods mov outsl jp movsb in imul ss mov dec jmp push (bad) push sbb xor or mov iret xchg push mov dec std add lods loope hlt pop mov addr16 jecxz mov movsl imul rcr fs dec (bad) add mov push ret fwait lret adc or xor push and lods push fsts push xchg fisubrl mov push adc mov lea mov dec outsl (bad) xchg inc cmovle jmp je and sbb aad inc sub scas je dec out push cmp mov xchg jl popa ss dec inc xchg shlb sbb stos clc sbb or fbstp mov adc xchg movsb ret outsl cmp jne,pn mov cmp stos xchg (bad) sbb cmpsl shr xchg xor mov mov shl stc into (bad) xchg pop inc sbb aad (bad) jp push cmpl or pop xor es pusha xchg cmp pusha lods fs dec or movl dec test mov sub in xchg es popa insb (bad) addr16 nop mov inc lret in xor mov push outsl push loope stos test xchg and jne in inc push iret cmp lds mov loope sub test (bad) jne imul pop lds mov sbb rcr pop or ja clc sbb mov mov aad mov jns pop pop pop lds rorb int3 cmp xchg jnp mov popf xlat subb (bad) movsl insl js in jno cmp lahf or cs xor ljmp adc jae push mov call out mov xchg insl xchg add lahf pop jnp xchg insl scas pop xchg inc sbb fldcw test mov lock inc cld xchg mov loope inc (bad) out inc (bad) mov xchg push add sub cmp adc aas lret sub inc lods arpl mov les jne cmp push and cmp stos or fsubl fstpl aaa sbb cmp icebp and in pop sub add int3 repnz call leave cld and data16 ds pop xchg push xchg jmp xchg xor mov jb int adc out mov xor shl sbb mov sbb lods jbe push cmp outsb (bad) cmp cmp xchg sarl movl insb icebp jb (bad) aaa arpl push mov mov mov loope sbb cmc mov mov int in cmpsb addr16 cmp add push (bad) stos leave cmp lds pop sti fwait addr16 inc in pop fadd mov (bad) or push enter and push cmpsl imul lret insl pop nop aas push rorb (bad) or inc dec stos xor and into cmpsl lcall lds or add mov pop mov push arpl es movsl lods out mov xchg mov fs xor xchg loopne enter int3 (bad) and lods ret xor xchg addr16 lods pop and adc jne jne cmp push add mov mov inc push jg push inc bound mov lahf outsb fs jecxz das movsb mov dec adc pop scas mov mov fucomp out stos (bad) jno dec jmp jnp lret popf dec sbb and cmp mov inc int popf or dec mov dec ss outsb fldcw test pusha add cli pop mov adc jns jo adc iret cmc cltd sub or lods (bad) cmc dec cmpsl popa push fwait icebp xor ret dec repnz xchg and mov data16 adc gs fild or cld cmp into pmullw (bad) mov mov xchg and lds sub mov ss pop jno lahf dec or arpl add ss fisttp jl xchg insb mov jnp inc xor in pop xor out fimul or jo (bad) jmp push inc push movsl and mov (bad) jbe cli and psrlq inc dec fistp or repz jo jns mov sar dec or aaa jmp push xchg in lods push sti jg scas dec xor xchg mov in scas jo fimull in jp hlt test xchg cmc lahf stc fimull add push sub mov rcll mov sub orl clc test mov ret sub je adc mov (bad) hlt clc pop fsubr and loop fnsave push fsubl (bad) jno mov frstor xor push pop imul sub dec sbbb cmp cmp push imul pop xor sbb and gs fcmovnbe jo and les je pop add and xor xor mov mov pop add inc jns (bad) (bad) movsl mov mov sub cmp add sub pop stos loope push fs mov ds movsb gs sarb mov rorb cwtl es dec fisub push das ret cs dec or xchg sbb mov (bad) das ja pop (bad) ss mov pop shrl push and cmp lret or sti push mov inc xlat mov jmp ret mov pop xor fldl cwtl sub out dec jae mov clc arpl bnd packuswb jp adc push jae add cwtl fsubrs jno ret hlt mov mov es lods inc mov jg icebp cld sub and lods xor std cmc jns adc pop ja cmc mov push aad sahf (bad) daa or mov lahf mov gs rorb mov adc lods push lods cmpl sbb in jno adc cmp orl (bad) clc adc stos sub add ja mov jo rcll loope insl xchg sub inc mov add xor and lahf inc dec pop sbb jp test cmp stos mov adc insl (bad) movsl loopne cmp call push fisubl pop sahf xchg (bad) and lcall das mov fs loopne inc adc mov mov das in andl or or jl jns mov cmp jg fcmovb xchg sbb cmp push jbe int3 or adc mov aam jns int3 adc inc pop mov iret inc test jo rcrl push dec inc les mov ret mov dec mov adcl jmp mov adc lods push cmp or and mov dec xchg sub sarb stos mov sahf popa xchg lods xchg mov bound inc mov not je lds cmc push ret xchg rcr and in (bad) mov sbb pushf mov push pop popa push pop jne lods (bad) push cwtl pop jb mov inc inc movsl bound or jo push nop stos (bad) pop mul pop sub hlt lea sbb gs xchg inc in inc loope rclb xchg dec cmp inc jp sti cmp and cli sbb jbe or or sbb cs push mov pop jle adc inc mov cmp lret sahf std adc sbb negb dec push cmp loopne adc add inc (bad) sub jne icebp dec es add and loopne cwtl es loopew mov in sbb xchg xor mov fstl aad sbb in xor aam insl mov dec jge fldt es jmp xchg (bad) pop adc push out imul mull das popf cmp mov xor outsb out dec dec nop jmp mov mov (bad) js xchg (bad) jg vmwrite rorl fsubr lahf xchg cmp sbb jnp pop movsb add into sub movsb aaa in mov lret push cwtl icebp pop inc push pop inc data16 push push mov sbb pop addr16 lock js rorb jge shrl dec jmp popf arpl stos jbe xchg sub push inc push stos push aas mov and pop in rcr mov mov cmp push ds lea pop lods movsb push in mov dec and pop pop cmc jne (bad) sbb xchg push std mov in pop imul outsb jge xor xorl jle test cmp sub lea jno jo jg sbb and test in adc fsubrs sub call (bad) cvttps2pi lcall lods inc mov dec xor stos dec mov aas xor lock adc pop dec jne cmp in mov sbb mov mov inc add ljmp inc jb lret pop xor aaa test and aaa dec clc ret negb mov (bad) inc push or into (bad) jb adc xchg inc es bound lret test push scas xchg mov push or cmp pop sbbb test js cmp cmp mov lods stos scas mov dec in ret ljmp sbb adc pop insb fs loopne push and pop cmp push pop jo hlt andl and mov or add jg lret mov fnstcw mov mov jae les pop pop mov mov pop sub dec sub out mov nopl lods mov mov xor popf and xchg xchg mov sub outsb into cmp mov xchg xor add adc and repnz add push add xor das jnp push adc stos xchg orps dec nopl jo rorb fldenv es or sub ret inc cmp lret es jge lods mov aad and push test push sub bound cmp nop push xchg test (bad) and inc clc and test xlat add out sub mov sbb ds gs xlat sub and test jne pop ljmp lret outsb xchg jge imul xlat inc fadds push lock dec and (bad) jae (bad) jne adc mov jbe cmp sub enter push mov cmp pop pop pop mov add push scas cltd adc xchg adc (bad) into cmp in stos cmp dec inc lods and lock sbbl jl or scas and and test stc and nop scas cmp push jle cmp mov clc imul dec sarb outsl movsb movsb cmp or in shrl fldl in jnp stos add adc enter and stos mov sbb mov insb pusha push mov push vpsrld rcll inc ds mov and es fildl sub mov js loopne fs popf imul jecxz xorl ljmp xor or (bad) rcl sub and sub mov ljmp mov scas insl lret es or sub push sbb jp jne ret test add xor adc xor mov jge mov jns js add andl xor adc jecxz int3 (bad) dec lret pop xor jge fistpll xor movsl aaa and into clc mov mov mov js roll push mov sub xor and mov movsl lret and shll push sbb fidivrl int3 test aad nop inc and adc or in (bad) ss push jecxz mov aam psrlq inc (bad) xchg nop and cmp jb cli jge push out jle js int3 daa (bad) stc cmp dec push dec je dec mov repz scas jg lret mov (bad) je decb (bad) pop jnp iret cmp jp lahf lahf lret adc pop xchg addr16 xlat (bad) fs movb sti call into xchg mov inc add jns fs push lret adc mov das je pop adc into sbb sbb adc pop movsb push xor nop aaa dec outsb bound mov push call pop hlt push test inc movsb ds jp data16 mov (bad) loop jbe int3 and push pop mov xchg into dec xor jbe ja ret xor shr xchg gs sub and nop cmp xchg outsl sub shr decl sub xor jne nop (bad) cltd xchg mov adc ja enter mov and and sbb mov push xor inc rcrl cmp dec xor push cmp and mov js iret pop lds movsl xchg cmp dec adc mov int fsubs int3 mov push cli xchg push xor jmp mov dec dec popf bswap (bad) clc inc xchg push mov pop cmp add insb das test push xchg sub lret lret mov add dec jl sub fcoml testb movsl je js ret fstps cmp (bad) dec int cmpsb aaa pop lods cmp ret pop aad pand push insb rcr call pop xchg imul sub xor adc cmc jl xor mov sbb jno mov push jl pop cmp mov xchg jl dec cmpsl out inc sbb jae add xor push jnp jge inc ss movb cmp outsl push jle lahf xchg iret dec push xor lcall jl cmp shlb xor sbb iret ja test mov movb shrl popf jp push shlb ret dec aaa mov enter test or push fsubrl jnp ljmp iret pop gs xchg mov stos jl pop inc cmp dec pop das sub xlat push shl inc mov xchg jge ds mov mov roll stc adc or jo xlat mov mov xchg mov sub inc (bad) push push pop jp,pt push jns lods js pop xchg and popf shrl jno inc mov or fisttp jle clc out and clc int cmp (bad) push cmp (bad) or xchg fidivr (bad) std and hlt dec in jge in icebp in sahf test mov ret leave or xor and jmp and into ret mov push mov xor cmp push loop mov mov std push jp sbb jg in ljmp imul dec cmpsb loop lods in iret mov ret les movsb mov rcl rcll push (bad) lea xor stos cmpsl dec clc xorb adc dec inc mov sbb popa push cwtl sub fwait loope lret popa adc cltd in mov adc mov lods jbe lea jne dec adc (bad) jno add mulb int3 pop inc lds sub stos push ljmp popf mov inc sub or aad cmp or add or in (bad) jno mov inc icebp scas mov cld add adc push pop dec mov addr16 js mov iret push and push xchg (bad) (bad) stc fidivl mov lret stos push js movsl sbb and lods pop incb sub dec in inc in xchg sahf jo (bad) or sub movsl adc jae dec mov aad cmp adc jns es push rorl pop popa cmp sub jge scas clc inc jae push punpckhwd loop push cmc repz sbbl lock daa xor repz push xlat and je ljmp lret (bad) hlt mov lahf fdivrs sbb and push stos adc add or (bad) stos ret outsl mov (bad) push xchg fnsave fs push inc cwtl popl jge xchg pop sbb pop cmp inc inc xchg (bad) hlt addb loopne push xor mov popf dec fadd gs cld popa mov insl and ret push aad rcl push in nop dec inc repnz push xchg jle pop pop xchg sti nop fld push int3 cmc pop sub repnz stos ja jmp dec xor mov imul imul sbbl push jecxz sub xorb mov mov jp cmp dec add stos in (bad) int dec push addr16 mov iret cmp mov inc (bad) ja bound mov mov clc mov add and outsb push jnp movsb sub push pop movsb sub in (bad) jo (bad) pop stos pop repz loope push aam push mov dec out and stc mov call aam hlt in and dec pop mov out (bad) mov push cli lock pop cmc and pushf mov jbe out lret outsb adc mov negb loope nop mov add outsb cmp dec pop repnz popa cwtl ljmp gs push xlat outsb gs cmp or inc and cmp insb mov or pop adc ret lcall add cmp add cmp stos loopne push add (bad) leave or add adc jl sub loop mov (bad) jb movsl dec repz mov push adc dec loop sub or mov js sub or push sub dec orb inc pushf fist lea dec inc sub movzbl pushf cmp cmpsb jne inc xchg call adc cmpl xor inc rcrb clc jbe rcll cmp mov pop xor ret jb out out clc jp imul ss shrb mov pushl rorl xor sbb and dec movsb in loope ret lods sub jb xchg leave shrb or adc add lea stos psubsw xor adcl ja scas rcrl sbb push jecxz stc mov jmp or mov mov loop inc ror jno icebp cmc add xor out pusha sbb push fsubs cmpsb sub stc add es mov cmp mov pop mov addl fisubrl and xor loopne mov out mov push rclb pop jmp sub pop pop outsl loopne (bad) idivl xor mov xchg cs jbe dec inc jne pusha scas (bad) xlat cmpsb mov inc push stc sub shrl jmp dec cmp stc inc xchg ret js das cmp stos rcl mov clc (bad) lods int3 dec jnp xchg or jne into icebp popa adc inc xor (bad) jmp icebp inc pushf cmc sub into leave adc (bad) jnp mov cmc les cmp repnz stc adc pop in adc mov adc xchg mov lcall sub mov sub add ret or cwtl mov test pop ret xchg push popf mov std dec jmp stos mov inc xchg mov lahf mov imul idivb push jecxz hlt (bad) mov xlat imul lods inc pop pop test iret loopne xor insl sub out jle push mov jno sub idivl sub popf adc jmp mov aaa jne test lcall movl lret ret fs xchg inc fisttpll nop sub mov cltd mov (bad) cli jecxz jp dec mov mov cli enter xlat sub lock cmp mov sarl icebp nop cmc mov orl and stc mov inc dec js pop lds (bad) hlt std sbb adc pop outsb mov and in push lock xor ficom mov dec gs je mov push (bad) push add xchg lret sub mov repnz cs and xchg push cli iret out cld pop iret mov ja repnz arpl mov std clc push addl shlb lahf cs mov xor iret cmp outsl jne xchg clc or xor call jl loope xchg clc inc sbb and (bad) cmp add xchg insb cmp pusha jo int and scas and mov xor jle cli inc pusha clc ret jno addl mov leave and pop sub inc push movsl dec jl fs adc popa mov arpl inc jp push inc pop call aaa fidivrl and sub cmp mov or bndstx insl inc lds int jne stos lret adc pushf sub xor mov sti (bad) in mov adc and dec test loopne jge fs add inc stc scas jbe and imul mov dec ja mov mov imul out out inc das inc adc cmp call push fucom or lods fcmovu int mov jbe add mov mov dec lcall sti inc sarb pop cs adc mov (bad) cmp push xchg dec mov lahf mov insl mov push jecxz aas adc test imul cmpsl xorl hlt add aas and scas scas push in into xchg clc aaa mov outsb in std cmp xchg daa dec sub cmc clc outsb push push sbb cmp lahf outsb dec sbb mov enter stmxcsr (bad) mov add popf mov and ficomp mov rclb loope outsl dec sbb aad fdiv sbb test clc cmc addr16 in jg (bad) ss xchg mov popf mov xor mov xchg nop xor sub push mov sbb jp sbb adc pushf xchg aad daa cmp cmp and push (bad) inc pop test mov (bad) into cmp sbb mov or lret mov mov or xor mov dec aaa cld xor jg xchg xchg sub dec stc out sub push repnz dec outsl push xchg fadds mov push aaa inc les jae adc pop jge cmp inc push test lret jb aam test cmp fbstp imul in push pop jl xchg lret mov insl mov jg cs lret push insl jmp addl arpl mov inc movsl sbb push out jg popf cltd aas outsb jae adc xor (bad) pusha insl imul inc pushl dec out mov insb in mov mov jg inc in cmpl aad aam mov sub adc movsl mov cmc mov rcll std jbe jnp pop jnp and (bad) (bad) sti bound scas cmp insb adc aaa jg adc pop stc in cmp das jp pop dec fs dec add (bad) into orl mov add sbb insb loope xor addr16 ret stc mov rolb lret adc add inc shrb mov (bad) outsl daa (bad) loopne add inc pop in lcall sbbl jg es pop fs mov mov fistl (bad) popa mov std (bad) jbe cmpl add mov xchg sbb push mov cwtl and mov jg inc jo cmp mov out je push ja sbb pop addr16 push sub push xor loop daa lock cmpsl outsl inc aas xchg int int3 cmp lods sbb cmp movsl and jb imul cltd and xor adc das sbb adc cmp pop lahf mov mov inc fdivs lahf cli push stos mov and das sahf int3 pusha outsb test loop push or cmp lahf ret nop mov leave jnp cmp iret cmp lea jmp jo stos mov pop pop (bad) shrb cltd jl pop pusha outsb aad mov das ja sbb fnstenv add ds ret (bad) and lds in loop xchg ss sarl aas insb mov push sbb mov inc jnp movsb or popf test cltd out push mov mov sahf cmp mov cmp fucom fwait add xor pop ljmp scas push adc fadds cmp lret pop dec jae out mov or fstps cmp lods jle dec test orl lcall adc push mov cmp xchg mov sub aad jl pop push mov ja jnp data16 cld pushf push arpl jp jmp sub imul mov xor orl dec inc aad pop bound cmp int3 jg jge add outsl fnsave lods push bound add (bad) sub xchg movsl sub aas orl jmp inc ljmp and loopne in mov xor das jne push cmp or lret pop (bad) and push in pop popf adc ds in or loope adc adc loopne or push pop push jno sbb pusha enter stc mov dec (bad) xor pop leave cmp lods and je or in ds daa and ret mov adc inc outsb fildll xlat fsub scas pushf push jno std pop data16 (bad) mov dec push adc ret dec int3 fsubrl xor loopne es xor or inc dec adc pop adc mov dec adc aad (bad) jno adc add sbbb clc dec add mov and inc pop mov adc stos inc lret cmpl xor adc and mov sbb xchg testl dec jmp popa adcl xchg in xchg mov subb mov mov push pop cmc mov mov or lret cwtl jae,pt mov jo and (bad) movsl mov imul insb ds aad ss xchg xor stc jo sbb lea test dec js mov add cmpsl shlb ja sub lcall call push jne std outsl sbb mov mov insl sub iret and cmc pop dec mov mov mov mov cmpsb fisttp sbb mov imul clc stos lret dec or clc cmp aas daa xor inc pop mov lret mov and or (bad) or xchg mov xchg pop (bad) cwtl mov out daa outsb mov cmp test and add roll sti dec fwait xlat ficompl mov add xchg push lods jae rolb cmp jno mov out mov mov pop mov mov stos loopne int3 push pop call enter out loope,pn pop cs mov pop fucom cli mov sarl mov cmp or xchg inc inc xor ljmp inc cli lds adcl and fsts in mov outsb cmp stc mov or jge mov sahf lea mov shl inc dec pop sub test xor shld xchg pop popa add xor push cld int andb and mov mov aaa mov and imul pop lods (bad) aad xor stos in xchg in movsb (bad) mov lret cltd std (bad) jmp incl adc dec or (bad) mov loopne lahf sub fiaddl mov mov sti mov xchg bound js lods test loopne mov xchg jbe pop mulb in imul mov push xchg sub stc pop icebp push lahf ja push popf pop cmp icebp cwtl lret inc mov mov pop lds inc or pusha test sti ret std sub push test aas sbb mov repnz fistp outsb bound inc sbb xchg xchg push sub jne dec shlb rcll xchg insl pop adc ja dec jg sbb into add lcall sahf and xlat dec adc cmp (bad) or lret jo fwait and jbe cmp sbb lods dec mov pushf ret jmp aas int mov pop loop (bad) pop imul arpl imul arpl or popa xchg iret or lret xor add pop add sbb cmc cmpsl jb inc or insb lds push cmpsb addr16 xchg les out adc cmp sub imul mov xor jne lahf insl negb adc pop or mov xchg ss sbb jo xchg int3 lea cltd dec (bad) stc mov loope adc xchg adc and jp dec fstpl sub xlat outsl cmp cld inc jne inc mov aad sub ds gs in (bad) out jns sub (bad) loope gs insb dec mov and inc pop movsl fstl lods adc out lret cmc mov xchg cwtl je dec lock call sub lret sbbl add test ljmp pop lret adc mov xor ret (bad) pusha push or and test popa ljmp cmpsb popf outsb add sub lea cli aaa lds js mov pop bound outsl ror inc fdivrs cmp add mov jo pop leave mov sub icebp rol sub movsl lds sub mov xor inc jns aad ja in push inc adc orb mov out in sbb push jno rcrb dec pop movsl inc mov pop cmpsl pop add ret sub adc mov out push or push lods xor add jae scas fidiv sub mov pop aas cmc pop rcll and xor fidiv adc sarb aam cltd cmpb xchg or pop adc and cmp sbb stos and adc inc push cmpsl mov je jge jp insl and insl sub add or in or pop push pop lea mov std ja sbb daa (bad) mov (bad) xchg jle jae sub pop cmp cmp xor aas repnz dec mov dec incl js inc insl jecxz pop jns cmp or adc or and movsl mov (bad) add jmp sarl mov xor adc stos rcl or pop (bad) jae arpl mov pop (bad) or (bad) int aaa pusha and push in cmp lret push mov xchg sub jl testl sbb and or jmp push daa (bad) lds stos out call jmp xchg jae mov add out mov push and int3 and mov or mov cld pop cmp xchg jae xor or es clc add or cmpl insl pop mov (bad) xor cltd cmc mov pop stos mov sub adc xor inc or lods adc aad aas cs or mov or push out pusha mov push sub mov dec stc add in mov cmp je mov insb push push pop ds jb adc leave xlat lret lret fdivl repz adc scas rol jg pop (bad) xlat aad push dec dec rorb je jecxz call in pop in fldcw push (bad) (bad) sbb mov push ljmp fstpl test and popa out es jbe cs cld subl mov cmc lahf and pop gs insl xchg or std fbstp adc outsl addr16 dec arpl lock syscall mov push jnp out (bad) or cli jg xor imul mov mov cmp push cltd loopne inc push push pushf lahf jmp dec xchg (bad) ds movsl test and or mov xor ret push sarb jnp or inc mov test lret cmp push adc xor cmp cmp rorb (bad) jle daa cmc (bad) sbb inc cmp jg fdivl imul mov repnz lods test add mov int cmp xchg jg rolb pop xor sub and das ds xchg mov inc cltd out ret jo mov shl (bad) jge rolb push inc push xchg mov dec stc xor lea pop sub frstor jne jge xchg mov pop shrl jo inc enter clc push mov xor push adc repnz repnz jmp pop push test adc jle rcr (bad) out repz jp arpl jne dec dec adc xor push out mov cltd adc sarb decl rcrl mov cltd or sub push mov je inc js rclb sbb cmc push into adc inc into loopne or aad enter mov ds dec (bad) xlat push jle adc sbb xor mov or mov xchg arpl aam dec mov mov scas mov add scas rorb push ret mov sub shrb (bad) test sub sub jae and outsb repnz push mov mov das adc pop shld mov push sbb les rclb frstor mov sub rcr fwait jnp mov add setnp es mov pusha arpl sbb xor sbb inc ljmp insb jo sbb mov sbb sbb mov and pop das jmp xchg movsl stc pop pop xchg fs push inc pop cltd add xor jg mov xchg movsb jb inc enter cli notb xor mov std in sarl and cmp rcr pop lds pushf xor and lcall sub ja enter ljmp dec push pop xor out and cmp and insb adc mov imul add lea nop adc jae cmp movsl mov xor test pop int push loope mov or fwait xchg fnop adc sub icebp adc add lds jo sbb mov mov push lahf ja jo cmpsb sbb movsl or xchg cmp lods add mov test insl std mov in add or icebp aam jnp jle jo mov outsl sub imul jo ds push in mov push xchg jb hlt jbe mov out div aad push xchg sub jecxz les in (bad) repnz xlat lds jae ss cltd cmp inc mov dec add jo ret test mov (bad) in or popf bound repnz sti ds mov sti rclb jnp jle xchg inc cmp lcall outsb dec dec fwait into add mov clc frstor inc and sbb sahf std xor and mov lods inc cmc insl xchg sbb call ret mov int3 sbb cmp enter xchg test repnz out pusha mov ficoml dec cli push stos add icebp rolb out repnz add sub inc push mov adc dec or or test je inc xchg int3 dec jge dec sub jge jno inc add in lock (bad) out imulb pop je aad mov push (bad) push mov add mov add and inc or or sbb adc sarb lods cli call cmp (bad) in jne xchg xchg jnp jbe rolb iret add mov arpl fild scas xor pop add lcall das int3 mov clc pop sbb sub movsl add scas outsl mov jo mov jmp mov push fsub aad sbb fidivl data16 (bad) xchg icebp jnp rorb js dec das iret cmp outsl insb push insl add mov fs data16 jl adc in out push std es leave sub (bad) rcll push mov add insl int ficompl test dec mov xor shrl movsb fdivl sbb subl xor xor jnp mov xchg call push sub push sbb lock inc cmp mov orb pop movsl sub xor mov inc mov sbb (bad) xchg pop mov leave mov imul lds mov sbb divb jl aad jno add orl xor pusha std ljmp jno dec outsb (bad) imul sbb test bound adc pop lcall sbbl sub mov incb inc fsubs pop lea scas cmp daa lahf cmpb (bad) loopne (bad) ss inc pop xchg enter dec les mov incb rorl xchg mov popf orl fs fsubrl cli pop add sbb ret orl arpl mov test dec (bad) xor ret adc lods jae dec loope ds mov sub jge sub cmp cmp pop fistpll sbb pop sub xor sub cs push adc shl add addl aad cmc scas mov shrl push cmp pop mov jo imull loopne jle xchg add ret mov xchg stc and fnstcw lock popa jns or jg (bad) inc sub test mov cmp fcoms popa push bound std pop (bad) mov push jno jne loopne sahf test fwait int mov insb jno sbb rcrl add mov clc iret movsl lcall out repnz mov mov mulb and repz jle xchg mov cltd aad sub ja icebp adcl xchg ret mov pop scas iret adc (bad) jge int xchg sub xchg aaa push push cld and jmp xor daa and sbb movzwl scas shufps sub xor jecxz pop jne mov cmp (bad) xchg pop mov insl cli inc nop jne jmp mov addb lods push xchg push jg xchg xchg test (bad) daa and and push push jne daa insb addb dec imul push mov mov imul adc mov or out push cmp cmp and adc jp mov btr pop inc pop push cmp popa cmpsl push cli sub cld pop inc dec ficom je sub jb or notl lret hlt jge aad and push test jno mov movhps push and mov sub xchg mov repnz mov or and popaw js clc mov mov (bad) insl lahf cmp xor mov sub iret cmpsb (bad) notb loope xlat push sbb dec shrb je sti pop notb addr16 loopne rolb dec ja pop dec adc xchg lods lods insl or add cmp cs loop adc mov jle insl xor xor dec aas cmp xchg cmp dec jne aam cmpsb fadds aad test push cwtl bound xlat xchg mov sbb les lods scas push sub push mov movsb adc popf rcrb test jne addr16 rcrl or fwait cmp dec cmpl mov xlat ret in test outsb aam js jbe sbb mov push testl sub xchg sti jno adc xor push or sub fistpll js inc (bad) sbb cmp mulb hlt pinsrw add mov arpl mov mov idivb mov outsb loopne test les mov mov add adc cmp cmp and or (bad) mov xor jmp into out bound push fildl mov ffree movsb and mov (bad) sub dec xchg aaa mov xchg xor mov je push in insb outsb mov (bad) dec daa je adc lahf cwtl subl fs lds loop xor dec in imul xor inc sub mov pushf aam mov andl push xor subl add xchg dec sbb push dec lock ret and in mov iret shrl test jle clc xchg imul mov mov aaa (bad) addr16 insl lea mov test imul call xchg jp xchg mov pop insb gs scas inc addr16 negl jmp imul cld or pop xchg sub bound out jp xchg mov loope gs pop (bad) jmp pop jmp mov ret repz jae ss outsb xchg fwait push sub mov xor jbe stos cmp fisttpll inc repnz fist inc je dec scas ret mov scas shlb push imul mov mov jne sub das std movsb popa or mov adc (bad) sar outsb mov jbe movb dec cmp xchg repz cmp or add in add jns lds jb push imul movsb sub push or mov (bad) push clc (bad) pop fstpl mov push inc das loopne jne ljmp (bad) pop dec rorb mov std test fmuls movsl imul xor popf lds nop sub and mov iret scas sti xor (bad) in mov rcrb mov sar dec mov inc ja js sbb mov imul ds add or jge cmp fwait aas js mov stc or sub fwait xor xor adc xchg xor ja outsl mov adc into fsubr add cmpsb (bad) mov xchg insb pop int3 mov lods fisubl inc push pop push dec jge repnz into jecxz rcrb ss daa sbb popl sub mov ja cmpsb sub inc or push adc inc sub hlt pop sahf aam in xor lret pop xchg ret int movsl cmp jae cmp add dec xor xor push popf pop (bad) push cmp sbb xor mov and jae dec movsb lock add das jae or xor pop fs xor pusha les nop js mov in or mov loopne add pop inc mulb pop cmpsl in xchg aad xchg cltd add lods cmp fsubrl inc dec cmp nop hlt push jmp loope sahf mov arpl mov loope add inc xchg push and sub notl mov pusha fsubrl jnp or test sbb push leave push push in pop cmp out jg pop enter and and and xchg push pop adc test cltd cmpsb scas sarb or lea push dec sbbl into daa mov sub push cmpb cmp push loopne sub sbbb gs sbb mov insb shll repnz ja int3 into aad out adc pusha and movsb popf out movsl in jns ficom test jl iret push xchg divl push cmp stc and sub (bad) xor push stos jbe popa scas roll stc fidiv mov pop cld inc (bad) (bad) cmpsl inc cmp add push sbb or ja adc mov insb pop push lret or in rclb fisttpll loop jl mov imul fsubs push dec hlt sub sahf dec mov fist clc mov mov adc mov pop jg dec aad in mov push adc outsb repnz mov bound in test loope jno lock out out and mov sbb push (bad) loope out stos xor pop pop jae pushf movl ljmp xchg mov (bad) cmc clc orb adc jge add dec fwait fs mov jb rclb outsl (bad) es bound in pop xor dec repnz inc or mov inc mov ja flds mov arpl xchg aas jg je sub push cmpsb icebp and mov addl insl xchg lcall mov push jle pop lds repnz ret push (bad) repz lret fstl adc ret xchg xchg push sti pusha xchg push push out cmp cmpsl ret adcl cmpsl dec (bad) fbld pop lock aaa test mov mov in divb cmp push mov ret rcrb jno es pop (bad) mov xor lods cmp movsb mov xor outsb inc pop enter jg push imul adc popf xchg jb aas adc aam cmc inc jno jne mov loopne jae cmpl add outsb out hlt popf push adc cmpsb pop sbb cmpsb adc lods xchg inc dec enter cmp mov inc jo je adc iret xchg cmp or repz cmpsb and rdtsc mov scas xchg xchg mov and push pop fsubrs dec dec mov mov mov scas xor enter inc icebp test lods cmc mov add in divb sbb push or adc rcrl mov outsl aam xchg xchg andl dec sub rcll sbb js shrb push sub int3 jmp push lret cmp jb cmpsl mov and sub ret insb (bad) fs pop div xor popf data16 inc mov sbb loop repz mov lock ja out int jge notb mov add mov shlb adc xorb xchg loopne shlb test sub fcmovnu jmp cwtl mov outsb popf cmp inc sti sarb xchg aad mov mov sbb insl xchg lds sar push cmp xor arpl pop or popa (bad) jno and scas cmpsl xchg stos inc dec mov pusha push stc clc jns sub ss xor lods imul xchg adc popa add int3 push imul ja push popa inc inc (bad) push pop aam inc push sbb loop pop adc adc xor dec loop push add cwtl xchg pop clc jmp or repz lcall cs ja (bad) jp xor xchg pop out xchg adc jp pop or fldl js pop data16 movsl les mov cs je leave adc cmp adc mov push inc add mov test cmp cmpsb sbb push gs daa xchg lock dec fldcw push popa mov int in daa mov aaa xchg push orl and popf and xor inc add (bad) jne fcmovb mov xchg dec pusha sbb gs xlat pusha out lea aam add jl dec xor test (bad) jle mov dec xor nop mov xchg jae inc add dec loop movsb adc jnp (bad) aam jo leave xor xchg test imul sbb xstore-rng jge fstl add lret mov outsb or push mov xchg or sub jae dec insb loope int3 je pop and mov sbb adc test push dec in push push (bad) test and test pop jle cmpsb mov mov pop mov in cli and cltd add std mov gs insb fimul mov push pop (bad) jb lea stc mov push mov mov cmp mov xor adc mov dec pop out xor test jge loop cmovb jp aam mov mov fiadd pop push sbb shlb mov aas (bad) push xchg push inc movsb push mov enter lock mulb das push xchg push inc mov pop jo mov push ja (bad) mov inc inc js jbe xchg (bad) and mov (bad) cmpsb pop cmpl adc (bad) outsb addr16 jo mov sub sti out mov les xchg insb cli sub lahf xor loop jle imul in add cmp pop insb popa addr16 lods lods outsb mov mov xchg xchg movsb sub popf fidivrl cmp adc arpl out mov std xorb xor cmp scas inc jae xchg lods pop sub std mov push mov loop nop lods pop imul insb dec mov lea jnp test sub scas stos aam std je addr16 outsb and popa sub and jle (bad) mov cmp (bad) add push mov cmp mov fbld and (bad) outsb and out xchg std pushl fs idivb push sub mov enter and subl ljmp leave mov (bad) mov jle pushf mov std lods inc and out mov or and lea icebp scas or pop jno test fs mov out or lods jg push les fiaddl sbb loop fstpt in fnsave push popf add pusha lea xchg aas aad into dec sbb pusha fistp add jne sub xor rorl scas scas dec sub les cs inc es das movsl data16 jmp in inc in lock push jge pop lea ret fldl nop flds (bad) pushf xchg dec inc and jne push jnp std push add sbb inc in outsb dec rorl roll mov mov cmp imul iret push push lods movsb lea sub jmp dec loopne enter shrb mov nop mov xchg xchg xchg adc push jmp push adc mov jns sub xchg sub xchg lock or ja push lahf sbb jl sbb scas movsl pusha nop push fistpl mov sbb xor mov fcompl adc clc push test (bad) mov repz (bad) es mov (bad) mov mov pusha stos je sar int (bad) xor stos mov loop cmp outsb icebp out cltd mov stc sbb inc jmp sub fbstp jb into imul scas add xchg fdivr jecxz mov ja shrl push pop (bad) xchg cmp push xchg inc xchg mov in fwait xor lods in leave pop in xor xchg mov enter repnz cmp jg push movl movq lods leave xchg sub xor mov and push in hlt xor test mov data16 lods cmp pusha negb push roll sahf or push mov lods xchg lea mov jne inc lahf xor ja outsl (bad) push push movsl mov mov ret in xchg mov inc sub sub enter jns es lock outsb leave add in push inc or sub fldl (bad) jmp dec pop or mov mov js cmpsl lret mov sub leave push push pop aas xor lods dec test ds aas and adc outsl repnz and jb inc out pusha gs mov dec jns mov xor inc push aad repz ljmp mov std jecxz fistp or fidivrl push fadd inc pop add jl loope and pop pop int and aas sub push movsb fldcw int es addr16 jecxz scas dec cmp mov sub xor in inc je loope fwait out jge lea add fsubr stos mov pusha (bad) push mov sub imul cwtl ss sahf xchg jecxz add xor mov fisubl nop in add jno cmp pusha xor sub sti add xor scas push (bad) inc mov popa sbb lods and mov adc sti mov ror scas inc fdivl mov pop sub gs xor lods add xor dec dec jno cmp in cmp sub pusha ret adcb jne add adc popf popa pop push ds pop jno (bad) or sbb lock arpl (bad) and jne les sub xlat dec jge js mov jge inc loope andb sbbl push mov xchg dec mov pop popf push pop dec in xchg scas mov push addl (bad) cmp test test dec daa cmp mov pop out ss dec mov cmp pop adc xor cmp imul pop mov and cwtl (bad) (bad) push mov mov in mov enter mov jno mov sub cwtl xor jne dec xor sti ss mov inc push mov invd shrl xor cmp (bad) jbe ret sub ret xchg pusha cmp fs int in push pop push add (bad) push ljmp xchg dec imul push xchg popf lcall inc push lret inc sbb sbb xchg shr je fbstp inc movsl mov loope adc sbb mov repz push inc pop cmp cltd ds cmp loopne pusha inc mov dec lret lods jl push and (bad) icebp pop push mov sub mov cwtl insb lods imul idiv mov push icebp jo nop lods ret adc jo pop (bad) shlb jmp lret mov lds pop sub cs les (bad) mov cmpsb int3 cmp or mov ja fdivp adc jno mov sub mov iret sub mov mov pusha enter mov adc (bad) inc adc (bad) (bad) mov mov mov and mov out xor jno and je,pt std mov dec hlt (bad) sbb sub iret push xchg imul dec dec das sbb mov insb sub bound pushf js lcall jb sub cmovne xchg add adc test adc mov sub adcl push test push mov and sbb stc jg mov lret jmp jl imul inc mov xor inc mov mov divb sbb mov sub push push repz dec or and cmc in add cmpsb xchg mov push or inc test ret pop jmp and jb and mov cmp testb das pop mov adc sbb pusha and adc mov aaa sbb xchg (bad) in adc cld cli lcall clc jno mov fdivl fadd pushf pop js cmp adc lods mov icebp mov sbb and inc push jmp push cmp cs test movsb pop xchg mov ljmp lret imul mov movsb inc mov sarl je jecxz pop outsl or xor jg adc inc sbb xor push pop or push jp movsl xchg mov mov jmp jmp lods sub dec sbb mov jl repnz and rolb inc mov inc popa xor mov inc jge adc in xor ljmp inc mov xchg jo xchg add inc fiadd inc inc inc aas aam push mov inc (bad) add lock fisttpll dec lods mov adc jae test push sbb lea insl push outsl or pushf lret and jae cmc fwait xchg ret mov cmp je in into addl je shrl out jge cmp fidivl int out jno xor adc icebp xchg (bad) sbb clc or cs xor mov and ss mov xor ds in adc adc jnp push rcr xchg and ret insl cmp pushf mov mov ficomp jecxz mov aas fsts xchg push mov stc push push test pop mov fildl xor fldz push xor adc inc je add popf mov shrb mov jmp out (bad) insb xor jl mov fwait mov jno fwait sbb or iret popa push lds jmp xor sub pop fwait inc enter aad fwait mov jb sub dec fs jne xchg xchg push mov imul dec dec mov popa jbe popa cltd es pop popa pop cmp mov jne rorl and lret and sahf and or into lods cmp in pop movsl mov inc sbb fnstenv mov cmp xchg pop jge in ds cmc scas (bad) pop jmp mull or loope mov add mov (bad) cmp cwtl in frstor add mov pushl lea aas pop xchg mov out pop jne cli adc sbb xor ret mov mov cmp and dec xchg and (bad) notb cmp sahf mov cmpsl inc ret pop dec adc call inc ljmp jbe rolb jne xchg xor mov out xor insb push and enter xchg out rcll push xor out test pop mov sub jmp inc sahf cmp mov cwtl jle fs mov lods iret ljmp mov xchg push test mov mov sbb hlt mov and ss mov pusha in cmp push subl xchg in (bad) and ficoml pusha sub in out adc xchg push xchg loope mov popa into or je sbb and mov repnz in inc out lahf add mov sub andl jg xor add je mov aaa xchg jl lods xchg sahf mov das aas mov inc add lods les popl sub aaa clc mov jg int popf imul inc add scas fisttp sub sti ds or and lds inc jnp add stos incl dec pop loope jbe adc mov leave test lods stos in orl and or imul push xchg pop out (bad) push mov lcall fs inc mov ret fistpll mov pop fwait add lds and aas xchg mov (bad) test cmp adc pop cmc or lds out xchg sbb push pop dec or (bad) push mov mov mov fadds test or xor jle sarl out pop out ja loope testl call jo cmp adc leave fcoms pusha pop stos cmpsl adc insl in push test cmp cmc ret test sub xor mov rcrb and inc hlt ret test or loope dec in fs mov (bad) das ret (bad) cli mov mov aam stc dec sbbb lret int3 mov pop cmpl sarb jo scas mov out popf add push je jl hlt lcall jo jnp mov and mov inc xchg imul add cld stos sar mov fs fstps das (bad) aam mov outsl imul add out mov lds add jne dec fldenv je xor jne add (bad) mov mov jb jne aad (bad) or cmp imul pusha add fs mov cmpsl push xchg mov mov test int3 xor jle add imul lock and les inc divl fnsave mov jmp mov pop or or push loopne jo ss mov sbb pusha je aas add loopne add repnz rol sbb mov stos inc mov cmpsb xor xorb outsb ja rcll mov sub jge sub aad cmp inc rolb and fnstsw in lods mov mov insb in and add jne dec mov jmp xchg xor pop and push dec mov xchg jl mov lcall or popf mov out scas mov stos lcall aas mov xor mov jecxz push and movsl lcall jge sub lock xorl adc scas cmp push dec into pusha push and out add lret lods jg push test mov lret adc int pop fldcw stc pop ss jno outsb inc popa cmc sbb aam rorb mov ret cli test das shrb push into dec jbe push mov xlat push clc adc lret out cmp mov imul jne mov pop scas ret mov shrb orb lds push cwtl jno and sbb jns (bad) jbe popf or out pop scas mov int3 or jmp loope fdivl bnd xchg dec jg repnz fdivr popl stos push inc cmp addr16 dec add stc adc fildll and push pmulhw cli cmp int3 jae popa xchg jns mulb repnz push test insb or sbb adc dec sbb sbb out push sarl adc inc push sub mov ds and out fisubr or jmp jne push sub pop or sti inc out sub imul adc mov loop bound push xchg gs mov or or jo and and ds dec dec cmp lcall sbb test sub jae aam je (bad) mov add in popa cld and repnz outsb iret or lods push mov sbb test pop aas (bad) repz (bad) mov iret xchg pop data16 or push xor mov in test adc fidivr insl mov sub cmp push das or and push (bad) jae lds and pop push jno outsb dec popa cmc cmp pop push mov or xor aad aas pop mov test (bad) enter addr16 and cltd test mov sarb sbb int jae test das ficoml and add jmp sbb inc or push jl mov es das sub clc sti clc mov sub out add repz dec or and cmp cmc (bad) shl xchg push pop mov adc sub lds (bad) fiadd decl lret arpl mov test stc rep sbb insl and ret dec insl fist pusha push imull xor testb pop or out ja out hlt ljmp or adc into xchg inc or fucomip notl sti stos mov frstor punpckhdq leave insb sti bound mov imul cmc (bad) pop les xlat (bad) decl xchg or sub cld or mov sahf adc in js dec xchg enter pop call (bad) fcom add cmp add jae xchg xlat mov adc xchg je lret cmp rcll ja sub (bad) or sub pop cmp xchg rclb xchg std mov push (bad) aas mov push and std pushf mov xorl jmp ret pop cmp pop pop xchg cmpsl subb xor adc pop mov cmp pushf mov cmp jl lds test dec xor add jbe imul es ret jo push xor jnp dec inc push pop hlt movsl cmpsb cmpsb aam incl call cmpsl mov in ret test pop inc push lcall or xor xor xchg test pop cmpsb into mov xchg xor sbb aad or insl xchg push aam or (bad) mov push sbb das jg xchg jno mov push push mov mul enter mov jbe subl popf pop push cli adc ret in jae jne aas movsl out ret push loopne push inc and mov pop pusha addr16 outsl cmc je cmc push fsubl arpl sub mov sub push push ja push aas xchg sbb add add adc stc sbb sub xchg (bad) jne insl pop jg lea push jecxz std xchg (bad) (bad) fcmovnu outsb into insl outsb push fwait inc jo in add push faddl and pop lret fs stos pusha jecxz,pt jle sub lea inc cmp mov jno sbb leave adc jne gs cwtl scas sbb jo sbb sub cmpl cmpl outsl loopne push mov cltd sub mov imull push (bad) mov inc inc imul ret xor jge in ss mov push inc mov mov outsb jge pop jp or mov jne jl bound (bad) negb xchg pop sti pop mov in iret jl xchg mov decb (bad) pushf fprem sub sbb pop outsl push dec test int3 scas imul out sbb int adc dec xor fistp cld pop ljmp lret pop jl pushf xor sub ljmp scas cwtl ret vsqrtsd lods les lods push jp lret xor push dec push cmc mov add in loopne mov aad ss enter (bad) cli stos rcrb sub mov mov test cli nop frstor lcall cmc adc jecxz repnz clc ss jg addr16 sarb fwait push gs imul stos inc sbb xchg cmc aaa mov (bad) mov cmp lret loope js or ljmp imul aad or mov mov inc shrb fst std notb pop pop out shrl pop scas cmpsb jae rolb push lcall mov push adc adc xor sbb mov (bad) mov out lock pop adc jno lcall cmp xchg xchg cmp inc ja movsb adc addr16 cmp ja push outsl loopne popa aaa nop pop in xchg ja xchg cmp clc aaa mov pop push and loopne jae clc repz sti jnp movsb xchg ret test push inc pushf mov (bad) aas mov xchg jl popf shr fisttpll adc cmpsb push push add xchg mov test out sbb jo xchg and in es lock fsubrs push xchg sub into adc xchg imul int xchg loop sbb insl mov imul and pop shr stos and data16 push fadds sub pop jns mov sbb outsl jo negl jmp (bad) fdivl inc xor sub sub xchg sub add in sti loope cmp sub es add in mov inc pop ret push cmpsb js lea cmp aam aam (bad) lods std test jg push adc mov add outsl clc inc movsl or sub aad jo xlat push outsl aad out push inc mov cmp mov ljmp mov stc push push jb pop adc les mov jg mov xor shrl ss jo stos xchg adc divb mov xchg (bad) mov cmpsl scas out callw push dec insb nop mov xchg repz js pusha adc mov inc pop leave pop movl sub adc loopne out cmp add test repnz in sub jae clc xor cmp mov or and xchg cmc loope jnp lea jmp ljmp mov test mov not stc mov and or lods into mov pop sub in cwtl sub rcrb xchg jmp push in sbbb jp jb enter iret insl push inc adc ds fwait adc mov stc into add lahf clc cmpsb jl fdiv addr16 (bad) xor inc je in xor mov dec push xchg add or push outsl sub add and pop loope adc lea fdivrl mov scas sbb into cwtl sub (bad) or and aad mov dec jl dec (bad) fstps fsqrt into std out pop outsb inc mov fwait push dec push int popa jno mov and aam movsb mov mov cmpsb xor icebp add popa dec mov dec pop dec dec cmp xor jb adc test cld (bad) mov les aaa js mov xor and outsl je insl adc arpl imul pop subl sub dec cmp xor and movsl mov aad push adc inc push and aad imul dec and xchg mov ror enter in jnp jno xchg cmp mov cmp dec imull mov (bad) mov rolb and jb or mov xorl es repnz pop mov arpl xchg idivl mov ds and push pop mov sbb jmp xchg cmp cmp cmp push addr16 adc cwtl mov ror (bad) and test push cwtl test adc ret insb cmp push cwtl ds jo pushf xchg (bad) jbe jl push or push push mov push idivb gs lahf sub clc cmpsb add ja jne cmp sub jnp and xchg cmp (bad) clc loope push js cmpsl cmp mov es sbb adc cli rclb aam (bad) or dec xchg mov adc mov fimul ljmp add in mov scas imul adc xor sbb fnstsw jmp mov mov jnp xchg ja push cmp jge mov mov js sub (bad) push pop and mov jle sbb loope iret cmp mov insb (bad) mov jo mov xor rclb mov popf in push cmp addr16 iret cmp aad push lds lahf push pushf flds mov dec sub divl rcrb shll push movsl and or in pop in stos out jne cs (bad) inc or mov imul add pop cmpl fnstenv cmp jl add inc ret inc (bad) and sub mov or xchg int lods out and xchg sub fldcw out test lock out add push aaa out rcll into inc sbb ret imul mov mov pop push loopne xchg or aaa xor inc sahf in jns sbb jae pop cmp jo out or sub push or sbb (bad) loop jno ja test (bad) repz cmp or sbb xor push shr or ret in lahf roll mov and mov cwtl scas push xor and mov and sbb insb cltd push fwait sbb xchg cld dec and inc adc cmp into jnp mov movsl lds sub hlt cmp mov sub enter mov push dec xchg fistl cmp rclb cmp cmc mov enter dec mov test mov stos add mov imul and das inc rcrl jnp cmp pop pop dec lds push mov mov in (bad) inc in sub aas dec sbb stos jmp or ficom ja mov in fnstenv (bad) lds cmp pop push aam xor sub xor mov xor bound pop leave nop jle and xchg (bad) or addl jbe divl xor ret mov hlt out jo sub ret mov icebp lea imul pushf nop sub sarl inc (bad) pop jne adc cmc pop jp add mov inc rorb inc push mov mov aad andb inc mov add cmp xchg inc loopne arpl aaa insb sub jne (bad) and cmp adc cmc mov cwtl or mov pop enter ja aam sbb mov mov sbb inc pop cmpsl movsb mov xor xor subl xchg or pop cmp cmp push int aad mov stc daa dec cli push xchg cmp in les push (bad) rclb jo sbb push enter mull xor cwtl arpl push int3 and inc std loop les mov jge sub rcl mov xchg xor or es data16 cmp mov push lahf mov fisubr mov stos dec sub lock je popa mov test mov mov insl lock or out jle (bad) cmp mov sub mov mov jne rcrb pop jns jmp lcall pop outsb push mov mov pop ret loope movsb push sub cmp (bad) dec jns aaa cmp jg xchg test test ljmp inc inc addr16 jl adc rclb jo jnp repnz int3 sub lock ficomp imul xchg cwtl inc mov insb add nop das outsb mov pop add xchg aad out sub popf mov jp xor push and mov xchg mov xor jo bndstx int xor push test jecxz mov into xor (bad) dec cmp add test cmp inc push lock xor cmp dec xchg adc fsubs inc sub mov fldcw sub gs adc dec xchg jae clc mov (bad) xor (bad) jle sub rcrb inc aas repnz xchg jp cltd push mov sub enter pop cmp jle pop ja inc stc pop sti scas fstps adc pop mov push xchg push les mov inc ljmp pushf xchg pop xor mov out xchg in scas (bad) xchg xchg (bad) icebp xchg pop lcall aas nop jl push lcall sub mov in pop sbb mov les cmc mov mov ret test movsl adcb lret mov add pop gs and ret cltd fsubp cmp loope mov mov imul lds or test (bad) xor sbbb out js ss jp (bad) lea fcmovnu cltd clc loopne sub (bad) orl dec (bad) cld push jbe pop push push or hlt cmp aaa notb pop pop cmp add mov xor faddl in dec mov add test or (bad) testl jg jo jo lods push xchg mov mov dec scas mov jmp ret inc cmpl and and gs daa push daa sbb xchg jl les arpl insl inc push stc (bad) stc (bad) movsb cmpsb fldcw test push dec mov mov and push mov inc and out jmp push jmp mov aam aam push js lods or in pop mov pop scas aas push mov mov lahf pop mov fwait stos pop lods or mov xchg sbb imul push lcall add aas pushf adc sub out jae push mov aaa mov inc rclb in popf or subl das data16 dec add ret cltd loope inc je cli fidiv add out or pushf sarb inc cmpsb and add aaa and sbb call sbb jne inc int3 mov jmp flds or stos shrb out pop push pop jb xchg or sub cs fnstenv mov cmp adc mov mov fisubr negl test addr16 mov hlt iret push jbe jne adc out pop mov dec sbb stc mov jae fistpll pop rol push das xor adc (bad) xor movl dec div jmp mov push dec icebp inc incl lcall lahf and test into add pusha push imul pop mov adc jnp jg lea dec mov xor hlt jo sti movsb loope mov xchg add or sub call fldcw xor cmp xchg lock mov sbb pop out mulb fnstsw imul mov mov fs lea and (bad) xor dec insl rcrb loop jb cmp (bad) ret iret (bad) aam loopne sbb jmp clc cmp xchg xchg sub lds repnz mov jb cli sub jecxz cmp ja jo (bad) ret dec adc test lods xchg cwtl mov sti add popa pop xchg ss insl jecxz into addr16 (bad) (bad) arpl and dec sbb xchg jno mov pop push sub or jae ljmp add mov (bad) sub cmp mov mov repz sub sub int lea jb jecxz ret sbb dec repz adc mov outsb xchg mov fdivrl data16 push pop jns icebp cmp aas outsb dec in xchg inc cmp jae pop inc cmp leave sub (bad) loop out aam mov scas imul addl sub inc adc std ja in shlb mov pop subl pop loopne lods iret cmpsb ss neg gs out rcl mov loope adc xchg xchg fmull cmc inc test jl adc dec xchg ss jmp push incb sub add (bad) (bad) hlt test popl in mov movsl dec mov mov sahf lea mov ror or or enter mov and loope iret andl pop insb jle lock xchg or mov or cmpsb divl movsl in mov jb mov xor adc dec mov (bad) and sbb out and loopne pop xchg into mov aad cltd inc cli in dec out push (bad) hlt sbb add int fistp sub addr16 or cld (bad) jo cmp and movb ret ret insb pop adcl xchg ja and int mov mov in mov sbb (bad) inc test mov stc jmp add and cmp dec cmp sti in je cld push cmp mov lods push faddp icebp mov imul int3 xchg mov fstpl push ljmp sbb bound cmc pushf notb ret scas shrb pop jnp test push ret div scas fdivrp inc adc push std push ret xor ss mov into cmpsl push andl jle pop nop inc popa out push aad je xchg pop cli lret dec aaa and cwtl movsl mov sub pop (bad) cli xchg pushf lret add add es mov mov das int jl dec add lock iret push xorl loope adc test out ret shl clc or sti pop ret cmp insb shll ds lods aaa push clc jg jmp xor push mov insl mov cmp sbb xchg cli cmp cmp push and popa ss incb mov mull enterw xor into aam jns jmp rolb call popa aaa jae xchg ds stc xlat adc (bad) aas jle xor test xor mov in xchg pop sarl into cwtl pushf cwtl cld ds mov jns insb pop add jb mov enter imul in inc jns leave int3 jo push in xlat sbb js and dec movsl int leave les in adc (bad) jns lret (bad) adc inc fnstcw xor xchg mov decb js test or aam jge scas cmc mov and mov scas push add sub popa rcr xchg jb push fildl push jno imul pushf je imul push lret sub mov nop ja lea mov push popa cmp pop test lock dec adc test inc mov cltd ds aas dec lahf or aad mov adc and inc adc stc rcr pop adc ficompl sbb ja (bad) jl dec adc jbe jno test or clc inc ljmp jl adc mov ss jnp pop mov push (bad) and inc xchg and je movsl ja sub repz cmc inc jmp mov insb sbb add xchg push insb mov and jne and imul popf pop aad cwtl push (bad) outsb jbe scas pusha sub adc jo sbb jge cmpsb (bad) sub cmc bound and sti push jne inc add (bad) pop add fisub cs mov adc xchg adc mov mov cmp in enter loopne cld adc jne sti mov xchg mov push cld les and sahf xchg les xchg clc lahf repnz mov inc lds or mov pop aas mov inc pop push lcall adc ja imul loop push les mov pop lods mov jnp arpl fcmovbe insb lds mov lea aam insl rcrb stc lods and cmp and test inc sarl push add cwtl sub fcmovbe dec mov aaa icebp xor xor into mov fwait inc jns test jmp jge push out inc xlat cmp dec leave scas test adc pop add insl inc mov mov rolb mov testl cmp fmull mov lea mov loopne rcrb es pop xchg xlat sub ret leave out adc pop loopne sarb pop mov mov punpcklbw mov lods movb xorl insl sub cmc negb int add inc stc mov jmp adc icebp jle jg pop (bad) mov stc aad xchg repnz mov push push loope mov xchg imul sub dec mov xchg rcll insb lods inc sbb dec xor mov jge cmc mov xor xchg cmp dec loope sub xchg adc icebp pusha dec mov sbb fwait and iret xlat add fstps sahf test jbe jb into cmp outsl cmpl adc outsl xchg jle inc add adc popl scas rcr shll aad cmp mov in fwait neg (bad) mov pop jnp test jns jae cmp (bad) dec out adc or cltd pop sub (bad) (bad) in mov adc je cmp push xlat cwtl ret push dec sbbl cltd iret enter bound push popf stos lcall int3 ds xor adc iret mov mov shrl mov shll xor shrl pop (bad) lock int3 negb sbb inc lods push mov inc data16 stos enter adc (bad) mov fadds jae mov fisubr in stos aad or enter dec dec stos or je adc lret cmpsl js add dec lretw mov loope or jg xchg inc inc call lahf and pop cltd xchg inc push sbb in inc mov push loope mov aad cmp jp mov sbb mov add mov (bad) adc in (bad) lret pushf mov mov mov push adc inc pusha jno sub sbb jne xor pop xor aaa popa fbstp or orl aas mov lret mov xor stos adc and or jne inc int3 mov mov scas pop cwtl pop outsl js aas stc sbb inc inc hlt insb inc stos movsl andl sub adc insb cld sub jne jnp mov xchg aam pop in pop arpl in call inc lahf hlt push jbe aaa mov cmp lods pop ror push mov adc add dec jne inc lods cmc rcrb jnp popa add arpl jne and js imul aaa pop and insb popf push sbb sub out sub xor xchg out mov ss pop mov pop repnz addr16 loop cmpsl bound sbb mov leave stc gs add add push pop loopne test or jmp popa lods adc jg or addr16 je (bad) es adc mov xchg (bad) pop (bad) xchg dec pop nop mov sub pop add add jmp lock cmp inc stc pop stc lock add inc pop jae jge jp fidivr fild mov test arpl pop outsl cmp mov or addr16 dec int inc es add loope mov dec fdivrl loop (bad) add test inc mov push sbbb add xrelease emms in outsb xor jg xchg dec mov movsl add and js popa mov pusha rcrb mov movsl enter pop inc inc xchg push inc pop fmull inc roll jmp push movsb lds add pop in xchg in insb movsl xchg daa push adc jbe xchg xor fcomi addr16 scas pop and in scas lock imull test lret jp popf mov sub aad ja,pt aad jle dec mov cld adc adc imul cli or pop fisttpll adc rcrb loope sbb and pop mov lea jae push lahf xchg push sbb inc cmp mov (bad) jmp cld cmp movsl movsb mov ds popa sbb xorb push repnz outsl push push stos daa test mov insl jge leave (bad) cmp mov jbe stos gs lds dec scas lea fisub sub push shlb mov fcmovbe fs (bad) enter arpl sub lock add notb lock out fs test pusha cmp mov mov lods mov or push imull test in addr16 cmp imul mov insl inc fbstp aas push pop cmp mov mov into dec mov jno jecxz cltd mov in aam sub pop pop mov add cmpsb jae cmp jg rcrb add mov add jae jns mov xorl je ds mov aas fs xchg lret mov nop shrb sahf int inc in push inc gs je push js lods mov lock ljmp js mov sar mov lret loopne es loope sub js fdivl test cmp (bad) jns dec xchg sahf push and arpl ret imul cmpsb scas xorb inc lahf push mov cmp inc mov bound inc ja loopne call pop lahf adc adc inc in mov sub adc dec int3 in and jp cli inc add sbb (bad) sub into leave into test pop and cmpsl cmp loope jns xchg push negw inc mov jne adc cmp cmp (bad) or lea sti and mov (bad) iret mov pop add iret fstpl dec mov cmp jnp stc arpl and mov les mov and mov xor push and fnop dec xor push outsl pop adc imul add ja imul add std jnp das jo pop test lods jecxz push (bad) xchg push loopne jns mov jmp int xor xor rcrl dec mov int adc into push push add cmpsl push notl fimull add out loop xlat insl loop push daa push pop pushf ljmp shrl sbb fwait dec jmp xorl bound rcrb out popa inc dec in aad inc imul icebp xor in shrb lods cmp or hlt lahf arpl je nop loope add stc xchg jnp mov sub sahf lock pop mov xchg push or cmp (bad) xchg mov enter test ja test mov add jmp testl or popf leave xchg jne es aas pop mov mov daa xchg jns scas push int3 and cmp scas clc jge fisttpl xlat cmp lret inc leave cli (bad) mov xchg push pusha les fs dec xchg adc sti xlat pop push mov fisubrl cmpsb xor sub in push jne sbb arpl push xor pop in jnp cmc pushf ret jmp add popa in jo lock loopne fwait and insl (bad) mov xchg std mov jle push add enter popa std rorl xchg sbb ret fwait outsl movsl mov insb or out mov adc mov loop pop push xor jp aas (bad) into (bad) aaa jno (bad) in test (bad) xor pushw fnstsw jbe stos (bad) mov and shrb movb les jno add inc mov aam in pop jno aas inc xorl adc (bad) (bad) lret and loope cmc sbb pop sub repnz pop sti jbe mov inc jle or adc shrl push incl aaa xchg jno mulb insb lods popa loope outsb mov jne sub out jp lds jnp inc movsl (bad) aad movl mov sbb mov adc and mov fsubrl pop add jecxz mov inc stos sub mov arpl jle fldl mov add rorl mov xlat (bad) push (bad) mov pop cmp call inc mov sbb ror adc pop cmpsl mov push mov fadd dec pop or (bad) cmpsb jb sbb into sar test test insl cmp (bad) xchg cmpsl out int (bad) push imulb daa cmp out push xchg in dec test adc ficom ret and out subb cmp cmp mov (bad) push (bad) xor cmp test mov xchg and loope xchg pop data16 in in pmaxsw (bad) sahf cld (bad) adc stc nop jne cmp stos pusha mov jo arpl inc sbb push jge add scas jge sti lods ret pop dec xor fwait pop popl sti xchg jmp xchg (bad) sti loopne mov sbb repz push sub idivl fcoms cmpsb pop push into (bad) fsubrp fimull pushf fcoms xchg addr16 jb cld in jno cmpl loop lret nop jmp jmp insl and dec pop and fs orb xor leave sbb pop inc std pop sub inc loop mov push cmp fldcw daa and je pushf inc testb sub (bad) aad repz aad shlb fmuls add dec sbb pop addr16 insb out aaa jae add out add sbb cmp jg push jmp adc ja fidivr or push lods add outsb xchg icebp rcr outsb stc les lahf cli sahf pop inc push jg push rclb push andl sub ss xchg jmp push insb add pop mov xorl push (bad) out outsb cmp test scas in (bad) and mov scas (bad) out mov (bad) (bad) sbb xchg xchg inc je mov sub test mov xchg jo sbb add int sub mov mov mov addr16 jb add push (bad) repnz mov (bad) dec loope jne inc loopne les insl jl popa aad fst mov jg rorb pushf out jne sbb lods loope and cmpsb stos or add lods or pop add lahf jae xchg mov jbe mov push xor pop ds cmp pop cmp adc mov xchg aad loop call xchg jno cmp dec out out adc test std fstl ret mov jg xor orl xor loop in or popf push ficomp push mov stc cmp add pop fmuls loope fwait arpl gs pop clc xor jmp stos mov push mov out pop sub cmpsl pop jnp mov mov xor fbstp cwtl nop jmp adc sub mov mov and jmp add mov frstor push xchg notl push or dec outsb and outsb pop loop and (bad) insl xor xchg jbe js das mov push dec jae (bad) dec es inc out sub incl dec adc push mov push pop inc imul sub leave pop sbb movsb and xorb enter sahf xchg xor sbb ss mov dec cwtl popf gs xchg js mov dec push lds pop loopne sub pusha in std cltd daa pop repz mov rcll rcl test add mov fsub push in (bad) mov xor push jno cltd xchg repz jne and adc jns mov lcall and imul imul dec daa int3 and call mov lahf adcb rol loop movsb call dec aam push mov mov xor xor jns imul adc movsb sbb adc dec movsl popa stc xor (bad) (bad) and sti jecxz ret inc (bad) pop fsts inc mov stos in (bad) sbb popa push sub mov call mov lea icebp fstps jbe mov popf mov sub and cltd popw ljmp pushf dec push shrl xchg mov mov nop dec mov or mov popa ficom outsb fstl inc outsl ja cmp and ja imul fdivrs xorl adc fnop ret mov arpl adc outsb mov jg sbb inc hlt push dec cmpsb mov es sub aaa loop pusha stos sbb sub shlb jmp fwait sub xchg dec mov aad cwtl xchg loope pop push ja int mov ljmp imul push cli call pop and mov hlt push push jb xor or mov jl mov and add les lar xchg out and test aaa fnstcw inc cmpsb fs add popa cmp cmp stos into insb es test fcmovne dec js nop scas out mov int (bad) cs add cmpsb sub add popf inc xor ds out mov outsl cmpsb jno (bad) mov pop add rol adc jnp stc fs mov adc mov hlt sub mov cmp fmuls dec inc push xor movsl aam vmread das cmp ficompl pushf jmp popa scas js or sub enter shlb out and lahf andb mov sub jecxz repz inc je adc xchg cmpsb les jne scas push stos cltd (bad) jb test das fisub jnp dec les inc and cmp fldl sub fs pop movsl sbb mov and jns cs jl cmp testb test aaa inc aad ja mov flds mov insb push jge inc mov jo mov mov mov insl jmp cs shr mov daa rol xchg sarl jle push lret fnstenv gs mov rorl jmp sbb (bad) sarl and push push fwait addr16 scas movsl cmp push fisubr and xor mov mov xor push dec call cmc jne and cmp or std addl push adc mov pop ret movsb sbb test push out int3 push xchg les pop je jge adc dec outsb push imull sub shrb test fldl shll or ss aam mov ds cmpl xor and movsb iret mov mov adc dec pop push outsl and adc jmp xchg repnz or ljmp (bad) fsubp adc pushf push fisub jo jecxz or stc sub gs aad adc ja in fist inc pop aad test mov out jbe sub push jne dec lea dec insb pop jbe pop mov pop pop xorb cmp adc cs ljmp sarb test cld dec mov leave es pop jbe je jl mov (bad) push mov kmovb mov (bad) jle clc or lcall mov es sbb and dec pop orb push fisubr pop xchg sbb out ret flds mov push mov mov pusha xor cmc imul test rorl and iret xchg or sar cmp inc (bad) insb mov (bad) lock js lock fldl push sbb and lea mov cli movsl push test xchg je mov movsb shr and cltd xchg in rcll cmc mov frstor (bad) xor mov mov mov scas push dec repz roll dec sbb adc mov sti stos mov lret imul loope mov cmp sub fisubrl mov pop in jnp xchg dec mov fsubrl and clc cmp jno je lods outsb sbb insl xchg push jno test add cwtl xchg js inc xor xor iret popf mov push jnp lret cmpsl jne sbb cld test jns mov sti push nop push mov cmc or sbb adc scas mov or enter pop and (bad) icebp cmp mov insl xchg jge and mov leave mov shlb inc loope jmp bound and stos aaa call mov sar mov mov xor aas movsl jge jno imul push cltd scas popa xchg outsb xor cs popa rorb pop and insl xchg test jne and adc jns push addb lcall xchg insb cmp jne sti imul (bad) clc mov mov (bad) scas and stc adc xchg or add pop and inc fildl add daa jne pop jle andb movsl mov mov pop push mov push nop mov movsl cmp jne daa and jmpw stos mov xchg test jno xchg xchg (bad) cmpsb cmp flds repz jmp jo scas cmpsb in mov or mov xlat stos sti setbe push test das sbb and (bad) aaa cmpsl add addr16 into and out xchg jmp pop add insb lea inc inc rcr jmp mov xchg xchg scas inc hlt pop jb xchg leave imul cmpsb inc dec arpl jl lods or aam mov sbb (bad) jl xchg insl lods jnp adc or lods and out test dec (bad) stc inc add enter (bad) sub insb cmpsb mov fiaddl inc sbb pop mov pop cmp mov xchg insb popa bound aad mov imul push jg mov cmp (bad) arpl je sbb call add scas mov jge repz mov push push outsb movsl ja ret aam cmp mov adc ret repz sbb cmp scas push out adc mov in (bad) mov mov orb sub (bad) lods js or push scas and rcrl cmp push push cmp ret gs adc fnop std pop dec pop fistpl xor cmp mov xorb mov call outsl xchg and dec jg stc pop ljmp adc mov mov mov xor mov mov pusha scas imul or rorl inc imul adc and call movsl in cmp insb js jbe sbb test inc mov aas jnp xchg lret sarl mov xchg dec leave imulb inc js dec xchg dec and sub (bad) repz mov popf adc fs inc aas sub jb mov sbb jge loop ret pop sub jae and fwait insl clc stos push fisub cmp daa pop lods sbb repz pop mov and mov test insl push ljmp negb ss dec or movsb xor in (bad) jo mov and test mov sub cld out pop (bad) cmpsb push cmp jmp stos xor fwait popa je mov add dec ss add loopne push icebp aas outsl and pop movsl fs loop stos ss pop mov cmp push popa adc and leave dec sti dec addr16 int xor add jb push add scas fisubr xchg lret loope xchg dec adcb mov mov fnstenv xor add lahf jge in add ret lods push in lea xor pop mov mov pop mov outsb push jb mov ljmp and into mov dec ljmp jl inc outsl (bad) jae xor adc mov lock jnp ret jae xor xchg jmp outsl push stc mov fs lcall loop jns and xor js rol gs and cmp add push inc aad lahf fild xchg (bad) out loop push rorb sarl add pop xchg les jnp adc inc adc inc rorl fidiv notl aam inc xchg jle and xchg pop vmovapd dec pop addr16 loop mov loope fidivl cmp xor test fcomps xlat mov mov data16 push xchg int sbb sbb test mov scas movl ja int test cmp aam and imul xor dec adc cmp imul lret outsl mov pop xchg inc push cmp xchg test lahf lahf mov std or push push cmp (bad) out jp das jp std sti jge xor sbb xchg push xchg cs jmp xchg sub add jge fwait jl inc cli aas or mov scas cmpsl out cltd nop data16 add pop or jmp clc imul divb into test shrl pop ret dec aas jnp daa arpl sub nop cmp rcll xlat xchg xor jg adc cmp movsb js mov test daa je push je decb leave add mov xlat rol aam cmp cmpsl jo dec (bad) lret jg pusha (bad) addr16 adc xor cmpb pop punpcklwd jb int jno std outsb outsb push cmp sbb cmc mov out ret bound sub popa fistp pop ja rol mov inc xor push mov call scas lods sbb aam data16 xor xor jo sub push ja cs arpl mov xchg mov mov mov sub adc roll inc inc (bad) ds xlat mov ror rorb mov mov icebp sub out in insl dec gs insb in xchg lock pop mov xchg fldl push xor xor xchg sub les cmp cmp dec push adc mov shlb call mov rcl iret sub jmp les fcompl xchg xlat or (bad) out and xor push jge clc test push sbb mov (bad) rorl jb push ret pushaw adc ret jp test xor push pop jnp cmpsb lock add pushf insb in insl mov push in faddl movl (bad) adc in jno imul and sbb loop add out and inc mov mov test pop jne pop mov mov test cwtl hlt jg lea in pop add repnz mov dec mov pop mov mov xor adc add out dec cltd sub jo fdivs mov aam mov and mov pushf idivb es lea jbe dec xchg cld and jecxz and mov leave repz cmp (bad) out (bad) cmpsl mov cld cltd jns jnp movsl test fisubr into sti and jo cld mov inc mov inc add adc ret dec mov xchg lret mov cmp fwait pop push mov mov mov pop out mov test fs int ljmp jge aad push shl push jmp mov fxtract popf mov jb vunpckhps mov xchg sbb fldenv jno mov pop sub cmp lock ss int mov iret test mov xchg pusha lds (bad) int3 cmp (bad) imulb movsb popa mov fsubrl pop test pop jb sub push ret (bad) mov outsl cli fcomps xor andl cmpsb icebp adc jecxz mov pfsub out sbb ror faddl aam out push push push xchg leave and (bad) push dec gs fbstp xor xchg push mov loope push pop ss into jae outsb push imul sub pop insb jno nop lea pop popa iret (bad) lcall dec mov (bad) cmc dec sub inc cmp xchg js mov xchg insb mov imul and xchg inc in arpl stc mov inc popf jne seta test jnp daa push xor xchg inc movsb push aaa ss aam lods or shrb imul femms push push fcoms sar pop xchg inc or mov jbe (bad) inc mov cmp xor add imul jecxz dec stos inc pop sub icebp bound cmp push mov xchg or out bnd in outsb subl mov sbb mov fisttpll les or in (bad) into xor xor xchg fsubrp cmp mov dec addr16 (bad) add ljmp mov mov das add clc and jb call or cli scas js or cmp mov mov inc dec test push jno xchg loope gs fnstsw mov jmp loope mov xor mov rcrl sbb (bad) gs (bad) out mov mov out xor mov data16 (bad) xor jns mov out sbb stos (bad) fsubs cwtl xchg std add sti mov loope mov or inc pusha lret mov popf lret loope outsb adc mov xor pop loop adc addr16 ret daa movl nop sbb (bad) jl ret imul (bad) dec inc mov push lds cmp add mov or add add je sub sub andb lret lods scas leave push inc mov inc pushf aad cwtl xchg je cld (bad) movsl jo and mov je (bad) jo decb mov sbb jg mov inc out je rcr xchg mov jmp push inc xchg std mov aam push scas mov and and mov mov scas (bad) sub and test mov adc loopne test xchg push jne dec insl subl sub inc pop fs test mov sti imul xchg movsb decb mov mov ja mov adc mov lret xchg mov insl mov push xor enter in jmp mov pop jnp shll arpl dec dec adc mov sti adc push mov and lcall arpl mov dec adc popa hlt mov jmp lea lret ljmp xchg inc xchg data16 outsl pop ds mov mov pop outsb insl xchg mov mov popa xor mov ret inc add push gs pop mov cwtl sub adc iret xchg pop cmp inc xchg push jecxz pop insb xchg push imul mov mov mov bound test bound push add fwait ror mov inc jb push cmp xor test cmpsb arpl inc fdivrl push int3 mov xchg pop sti xchg push sub iret pusha cwtl rorb inc lcall mov lret xorl push idivl and jbe jo jmp clc outsb or sub out add sub pop in syscall out sub xchg dec shl push movsb out lret jne test pop test decb jno mov (bad) (bad) jp in lds cmp aad ss out mov add loop add fs rcll push (bad) cmp sub jecxz jns mov jge jg and fimull mov cli imul test jmp dec pop jae fisubr mov add rol (bad) (bad) adc iret inc fsubr pop sub iret pop aaa dec sub sbb adc imul mov xchg cltd iret xor and cmp pop ds call or cmpl aam mov lods bound int add xor jnp and sub lahf push sub ljmp lret je or cmp (bad) jae sahf xchg lcall bswap daa add jno mov cmp (bad) imul add cltd pop mov stc pop sbb aaa mov test repnz imul fistpl into mov jno imul mov cmpsb (bad) (bad) xor cwtl imul jb repnz inc jmp pop stos mov ss enter aas inc xor add inc stos (bad) gs hlt mov jne mov xor adc mov inc rorw imul xchg xchg push insb cmp out push fildll ljmp sbb imul mov jns dec or adc lret push mov jg repnz test cmpsb xchg add stos adc mov shll cwtl jb clc jne hlt sub xchg push or push jns addr16 ss int push test fbld loope push call mov and (bad) lods mov push push push inc loopne imul fsts repnz nop fs xchg inc xor mov lahf icebp test mov jnp push pop pop xchg lods decb iret pop sarb pusha in adc mov mov iret mov mov xor xor add xchg adc daa sbb mov mov shrb hlt jns xchg cs pop pop add popa sbb insb cmp or das (bad) push fisub dec rcll fucomi es adc xchg loop or addr16 adc mov add popf jge stos jecxz aad scas xchg in add dec or rcl sbb je popa cld loope fxch ret cmpsl xor push aad int3 dec movsb popa call scas (bad) inc jnp push icebp fcoms xchg stos and ficom sub mov andl mov jle gs push out and or (bad) gs pop xor test cmp sub jg lock or sub rcrl lret movsb push push add mov xor sarl dec push rcll sahf push mov mov jmp and and sbb inc icebp pop (bad) ja imul inc loopne mov xchg or ds pop push xor arpl and xor push rolb jae lds es cmp jno sbb in push orl popf mov pop inc mov inc rol sub jns mov mov cwtl and insl push movsb jge add or js lods jns movsb add loope push cmp test or push sbb mov or ss sbb sub inc popf pop and inc pop sbb aam les sbb xchg mov popa jmp mov stc movsl out insb pop (bad) cmc inc mov call insb dec jge popa or dec mov icebp inc mov jle lods imul fiaddl jo pop jmp or (bad) not xchg add lds and popl negl mov pop daa mov pop rorl mov xlat fidivr je sbb icebp mov scas test (bad) std xlat inc in shll scas (bad) inc pop inc lods imulb and out push (bad) mov in sub pop xchg adcl xchg es fs ljmp mov int3 iret pop leave (bad) int leave fdivrl lahf xchg or cltd inc pop into scas and pop inc shrb or xchg mov orb aad out mov movsb inc mov mov fsts ret (bad) inc daa jge jnp sub je add pop pop enter cmp pop sbb dec ds xchg inc cmp cs xor mov movsl outsb xchg (bad) addr16 fisubr xchg pop or test xchg jb iret adc or inc and ffreep movsb jb dec cmpsl sarb inc xor jns mov mov popa clc fldl dec bound push repz rcll jecxz xorb ret bound dec outsl cmc gs add outsl xchg push xor and lahf aad push jg (bad) mov sub dec leave adc fnstsw repnz dec pop jge icebp lds cmp ret addr16 xor cmp jns and imul gs cld pushf fwait xor xor lods adc ret and cmp flds xor adc ss mov nop jle mov xchg xor les jno lret mov sub inc mov jecxz xchg insl sbb and out sub hlt push mov jbe cmp add mov push push inc xchg xchg inc dec mov mov cli jp inc imul sub and sbb arpl jp (bad) jae and into (bad) mov cmpsl adcl push imul in adc add je xchg cld pop mov das jecxz xchg bound insl test nop orb bound push popa fiaddl xchg xchg jo das sub enter push and (bad) mov incb sahf inc or dec lods fwait xchg push mov ljmp mov fs xchg push sbb test add inc fldl imul inc mov int3 gs mov (bad) cmp pushf inc mov das mov mov xchg jmp dec orl mov stos lret pop mov adc jb movsb imul or lods xchg rol call mov jne insb int je pop sbb int sbb (bad) movsl cmp adc jp pusha adc push xchg sarb cwtl ret cmp movsb cwtl push mov daa push xor bound aam imul pop test arpl xchg imul inc int3 pop or or aam adc cmp int push lcall add pop cmc xlat adc lods xchg (bad) inc pop xlat add in clc data16 stos rcrb (bad) xchg inc leave rol mov push mov movsl jae movsl push jl mov stos sub fnstsw xchg adc xor ja pop push in ljmp sub mov cmpsl repnz xor mov mov lods imul out inc jne ficomp fimul cli in ret dec mov je push mov (bad) leave aam call out mov cmp adc addl pop mov jne test notb inc xor std sub rcll add scas jl inc sub mov lahf (bad) enter leave cmp xchg lods push fldcw cwtl in mov jo push stc lods scas ja mov jnp fisttpl out mov outsl loop jns cmp sti mov in mov xor notl call sub fs stc scas jmp add sbb mov mov subl pop jbe xchg add (bad) rorb lret jmp mov fnstsw xchg jne dec fisttp ss xchg js loop outsl subb je cmp xchg xor xor xchg sahf jp mov or in sub es xor fdiv es jg dec lea push aas sbb test mov and icebp fstpl cmp xor ljmp out (bad) push es jo mov lds scas and pop xchg cltd cltd cmp mov xchg test xor or int or and imul into cmc loopne and jo mov mov jge sbb jmp xchg ds lds pop iret mov outsb pop outsl xor pop cmp in in fsubs bound xor mov or mov xor bound lahf jecxz mov mov (bad) sbb lret sub mov adc dec mov lahf inc inc outsl jge movl insb insl ljmp sub sbb push adc mov clc andl ja shlb lds cmc pusha sub out cmp sub add (bad) sahf push ljmp ss and jp loope mov cmp lea pop into lea daa (bad) lea aad lret shlb decb sbb inc mov repnz mov inc ss scas xor xor lret jg imul xchg mov mov add int3 sbb stos les cmp adc mov xor or (bad) mov lahf cmp xor push dec in inc lods inc pop mov mov pop loopne and mov xlat dec insl sbb outsl xchg pop mov scas mov repz popa push inc sbb push arpl mov adc jmp mov inc lods loope xor xchg sub mov jmp inc sbb mov and aad (bad) push jle inc jnp in jmp decb ljmp mov jae dec mov jbe push jae (bad) je xchg mov jb ss and fwait in cmp jb ljmp xlat dec push lea cmp cs mov xchg mov imul nop repz add bound aad dec add jno movsl test aaa dec into and jb push inc jp inc (bad) mov leave imul cmp (bad) xchg adc mov sbb push leave jnp dec xchg scas test leave popa (bad) in pop std jae cmp mov jb mov xor xchg cmp pop ss dec jecxz roll ljmp mov xchg pop sbb sahf pop fisubr jno xchg imul push xor jo lea adc mov mov sub push pop mov pop mov xchg mov insl or test sbb aaa aas pop movsb bound (bad) aad roll cmp dec cwtl testb jne mov cmp push jmp cmp outsb pop xchg jnp pusha popfw les adc push ret mull inc adc fidivrl add pop aam xchg xor out add cld jl imul dec jbe fs push xor int sbb js lods int cli adc cwtl jp or sub fmull testb dec fstp cmp xchg sbb dec or fisttpll cmp sbb push lret jl mov mov jne mov xlat aas push inc cld push icebp cmp ret xor jbe icebp inc push inc (bad) js mov (bad) xchg outsb sub ret test mov adc jecxz nop mulb push movsl out mov adc jb je out imul inc push jne inc mov mov mov es scas lds scas lods pop sbb out das push jbe frstor lret jle ret xor jnp lcall (bad) dec push xor mov mov (bad) mov arpl mov sbb cwtl pop add cmp rolb out das xchg fisttp flds mov dec dec push inc push fidivl mov rol mov insb test mov jnp and call pusha pop repz sbb sti addr16 sar les jge adc jl jmp push xlat aas sub cwtl pop dec test mov jle loopne xchg insb fs jne lea addl mov mov je add sbb jb push dec jecxz sarb out in cmc inc js adc or mov dec js cmpsl mov fdivl jge cwtl mov mov in outsl push daa mov lock jns movsl mov xor xor rorl sub xchg xchg xchg sbbl cmp addr16 shrb inc mov and hlt out inc movl pop cmp pop push mov arpl inc pushf out sub test jae stc out pop add dec mov mov cmc fldt in cmp inc xor pusha stos std shrl je inc imul add dec pop sbb inc sbb sub loop add stos fidiv sbb mov pop clc rcr out mov or inc pop icebp pop (bad) cmp cmp push xchg jg adc repz sub movsb jg mov jecxz enter jmp lods push push popf mov fmulp adc stos fdivs adc leave fucompp lds loopne push pop scas jbe insb fsts popa xor mov outsb mov fdivl pop ljmp hlt mov dec dec jae adc dec stos mov loope add movsl cmp aas jle into dec (bad) and push ret cmp and mov (bad) lcall inc jns movsb mov adc in (bad) dec mov mov or mov mov (bad) lret mov dec out xchg dec in scas dec into (bad) cli movsb ficom xor jo cvtps2pd fisttpll ret je push xchg lods dec inc fucomp cld lcall and idivl mov out jle mov mov cmc mov (bad) repz (bad) bnd fwait mov lret cmpsb in dec mov mov inc inc jl jmp mov int adc lods xchg (bad) push xchg daa sbb mov or pminsw inc push mov repnz inc icebp sub outsl (bad) dec cmc jo aad xchg mov mov ja,pn and push xchg fs dec push xor cltd andb pop push push mov mov inc out fmuls inc arpl je lret or ds inc std jle push jae (bad) lret xor repz insb outsb gs mov call sbb adc mov xchg call ret pop and pop or sub dec test pop std arpl xchg push pushf or inc inc out fs dec jbe xchg adc (bad) adc mov push outsl dec xchg push fs mov mov push sbb test mov or push adc pop es aaa leave sbb adc std jbe xchg loopne sub dec jecxz lods mov or loop pop add and sbb (bad) xchg jg mov push mov adc push xor xchg push dec pop pop js mov mov xlat mov push push int mov mov ret insb jnp popa in in mov (bad) jmp subb jnp fcomip mov aas adc mov call cmp out xchg fs jg dec xchg pop ljmp mov dec jno addl adc cmpsb notl jns or cmp cli sub (bad) std sarl pop mov lods into pop jg negb sbb adc mov sbb mov cmp mov lahf outsb movsb or sbb lods xchg add mov repz xchg cmp sub or inc fstp data16 xchg outsl xor adc loope jmp fwait sub or js jge clc push xchg sub lcall aaa dec xchg mov mov js inc xchg jo (bad) std sub push and sbb pop aas adc out xchg inc mov daa add cwtl scas inc enter in mov les lods jge je mov cs arpl in mov jle rclb mov fs insl lods (bad) rol imul lret add add cmp mov (bad) mov pop cmp or ja and subl add dec (bad) cmp mov mov test adc mov lahf cmp inc sbb mov jge mov inc cltd xchg scas jle bound std push mov xchg sbb in jmp rol mov (bad) and aad pop cwtl mov daa inc jl int cld sarb imul (bad) aaa out push push jle data16 popf jle push cltd repnz andl imul imul fisubr (bad) rclb inc xor and sti cs sub andl popf js mov adc fsubl daa adc jecxz notb fimul rolb aas in dec icebp xchg aad sub jns mov mov push repnz inc mov sbb in (bad) repnz sub and jg ret ds pop adc mov outsl test (bad) mov xchg mov or js (bad) cmpsb or test jge sub add cmc add call insl pop ret fisttpl or ds stos nop xchg inc jae push std out test test jae sbb std mov mov movsl outsb mov xchg sub imul es aaa test popa lock shlb mov mov adc dec add adc test outsb pop fidivrl push add mov stos aas mov mov jmp sub lods das sbb enter jecxz mov cmp mov js xor dec jns mov mov mov inc mov push int3 mov push addl inc scas rcl xchg mull outsl and test fist (bad) mov or fcompl fidiv out inc mov mov cmp xor insl ja jge loop rcrl faddl insb leave cld mov pusha lock mov sbb out inc inc ret movsl cmp in enter imul pop lea adc inc cltd and divb mov jmp icebp (bad) or (bad) fidivl scas test or add pushf inc sbb arpl mov adc nop jns mov or cmc xchg insb push loopne or push stos fmul (bad) imul iret push imul adc mov ret loopne or out dec clc inc ss push push jno xchg mov out hlt mov stos int mov dec sub movd xor inc cmp cmc lods dec mov das xor mov mov icebp sti sbb jno mov xchg lcall hlt dec fidiv lds xor pop add insl xor pop fistl mov iret xor sbbl jg push inc xor imul sub shrb test iret mov fistpll bound mov mov aaa sbb ret adc inc lods fnsave xor sbb fist rorb jge adc in sbb scas hlt pop cmp repnz mov xor jl adc lods cmp fstpt push stc movsl lods mov pusha into fs fisub adc push decb add pop dec iret xor inc fildl mov ret mov dec and and push popf cmc and sub sub xchg cmp inc mov or call daa int aam xchg vpor ss (bad) adcl mov adc dec sbb lret xor lods mov mov sbb test push jge push aam jp imull int arpl and push popa repnz dec jle (bad) cmp and xchg lods int push cmp jb or lret test add jae push sbb int3 inc in dec pop sbb or adc cwtl mov push push mov adc dec sub imul lods mov lock pushf push pop or adc dec (bad) jne cli push sbbb (bad) test lods inc push pusha (bad) mov push mov cltd xor sub push pop pop loop xchg cltd pop lahf adc fimull cmc push sbbl nop cmp cs cmp clc movsl leave stos je in cvtdq2ps cmp sub icebp inc (bad) divb mov mov repnz sti scas loopne roll adc movsb cmp sti lahf push cmp (bad) mov adc lret xchg test fucomi sbb into jo mov lds dec and jb insl sbb les lods loop or dec fild in movsl mov adc divl mov fistpll scas xor mov xor push mov xor iret jo or sub mov dec js mov push frstor mov mov mov movsl mov push dec sarb jae dec add scas mov push lods cwtl pop sbb stos shll cmp cmp stos push cmp cmp subb jns je popa or insb xor subl aad into cmc adc jle push (bad) xchg in repz and test cwtl movsl push repz xlat (bad) and ds xchg sbb imulb cmp stos cmpsb xchg stos test jecxz pop dec xlat lret mov add sbb insb insl jl mov sarb adc sub in cltd mov add lods scas mov pop sti mov mov (bad) xor (bad) out push insl pop hlt dec mov in popa std mov (bad) mov sub add adc dec loope add dec or push lds test lods and sub sub and icebp sub mov mov or lahf xchg dec imulb dec jle popa cli fldenv push insl std in inc loope sbb xor hlt push adc dec xor in repz add shl or scas ds jge rcrl aaa mov mov into xor (bad) hlt dec stos dec ss stos or iret pop (bad) scas push inc sub mov loop mov xchg xor add dec mov mov popa mov push std sub lret push xor sub (bad) push adc dec gs push test sbb xchg mov xchg inc and push sub or adc insb xor xor inc lds lret out scas into sub sbb aaa pop pop scas pop negl dec mov pop cmpl rorb push popf xor test aam dec cmpsl mov inc lahf and subl xor sub mov pop adc dec popf jbe add int pop ret and mov pop mov into addr16 xchg stc (bad) adc cmc sahf ljmp aaa cld xchg subl push cmp add push ret mov mov lods loopne inc mov jl push mov xor mov cmp out mov pop jg pushf pop cltd cmp sub test arpl js mov dec jo scas popf lods push push fcoml xchg fnsave cmp icebp fwait ror leave mov movsl js mov cmp xor or icebp cs je scas shlb insl mov xor sub ja mov cmp or bound stc cs pop cmp jns or call push in sub int inc hlt ja mov cmp jne pop das int mov mov mov pop stc ja cmp jae test sub js xor sub inc imul mov xor inc sbb lds outsb (bad) dec mov xchg jg rclb dec (bad) sbb (bad) mov mov sbb sti cmpsb dec lcall popa sahf fimul testb pop dec scas insb in loop mov pop cli cli out mov mov lahf push int pop clc pop aad lret pop lcall and addr16 push jno jb (bad) fdivl test jns std imul lahf push shrl dec lret inc jae push jne,pn add pop scas pop jns jns sbb mov pop jecxz push xchg mov mov add jecxz push dec sahf lret jno push aas cs mov xlat adc push mov sti mov pop jp xor cwtl leave pop fistl jecxz and cmp xchg cmp inc les inc std push movsl mov dec test ja mov out cwtl icebp adc cmp lahf push push sub adc les pop cs jp leave addr16 shrl mov pop arpl xchg fnstcw xor xlat add ljmp aad pop test addr16 fldcw mov pop test add lahf push sbb aad lret mov imul jg ficoml add mov pop test pop push (bad) insb pop xor inc orl or add add or test xor mov fs mov enter iret mov xchg ja (bad) cmc sub pop into cli mov lahf cwtl cwtl push xor sub in test push jmp mov sub (bad) pop fmull cwtl jmp mov inc lret std mov and in cmp into add cmp pusha add ljmp fnstenv mov cmpsb lock fs cmp pusha movsb jns inc pop pop ret (bad) ret xlat add cli jp loopne and mov (bad) fcoml inc adc dec in dec or inc dec or add in fcoms inc jae data16 add scas push clc call mov mov cwtl sahf cmpl xor or test jmp addr16 ja xchg jno lretw daa dec and sbbb jno sbb adc or sbb outsb or js adc push stc les add out outsl inc sti fstp movsb push push push dec xchg out dec jp test (bad) repz sahf js or sbb nop mov push lock in mov out ss mov mov loope lea lds aad ja pop (bad) cmp clc inc (bad) and push fsts sbb hlt fisubl (bad) (bad) repnz loopne cmpsl mov clc or mov std lea lea inc das out sub jle,pt std lods cmpl xchg push cmp or xchg rorb ret ljmp adc popa repnz hlt in std push and mov sub lret push push leave mov cmpsl lods (bad) loop lea test xlat lea lcall pusha test enter sarl xchg stos mov xchg daa lahf or jnp nop mov outsb xchg and or jnp popa pop jge xchg adc mov orl scas std mov jb lahf jns mov mov jge adc jae test (bad) jb mov js dec jl call jo add out insb scas loope jge xchg pop addr16 mov enter sbb and fnstenv js addl fstp pushf imul pop push movsb aas cs mov push movsl xorl add and lahf xor mov mov and fnstcw sbb loop add add jle lret movsb into mov xchg aas mov pop mov xchg in jno,pn ss mov rclb xor xchg (bad) in pushf pop shll mov negl push adc scas and aas shlb dec mov push insb int dec std cmpsb test lret sub roll cmp test jge xor pop dec insl cmp lea out cmp mov adc data16 out (bad) je insl into insl or fs jmp bound call cmp inc xor push xchg and gs adc ret (bad) mov adc (bad) hlt adc adcl pop mov mov aaa and sub dec flds int mov loop loopne inc les push ljmp inc nop mov pop outsb rcr adc mov adc inc mov add xchg pop mov push int adc cmpsb fisttpll sbb pop int3 pop test (bad) jle (bad) ret fsub mov jns ja fs inc mov fsubrs pop stc xchg cltd mov xchg daa and jo int3 loope cmp sahf xor or adc mov jb jne insl data16 shrb aad (bad) xlat pop loop ljmp or jb mov xor ficoml (bad) cmp cwtl imul fmuls hlt dec jl jno (bad) dec lock cmp sbb dec mov jns cltd fwait mov jnp,pt cmc int push mov sub in inc mov cmp push shlb sahf pop fwait push insl stos cld into lock and cltd mov test imul and jnp aam adc cmp shrl aaa xchg dec test inc add movb jne (bad) and fstps popa or and jno,pt shrl adc inc jnp add cld in mov pop push sub (bad) jle dec adc bound xchg cmp and popf add fbstp adc subl xchg adc dec sub dec mov imul dec sbb mov shrb (bad) sub jne int jle ja jne cmp icebp dec test or and lock fwait icebp (bad) sbb add add rcrb mov ficom mov sub add or sub xor nop es inc repz rcl pop add dec xchg xchg lcall sbb jmp xor push inc loop lret cmp lcall out cmp movsb pusha xor mov xchg ret popa add bound stos push mov and mov mov stc das mov scas and insb mov xchg fucomi cwtl imul fwait mov outsb js test xor movsb add pop mov outsb sub cmpsl xchg mov ret dec sub push push sbb cmp xchg arpl or pop push xor dec int sbb cmp sarl sub jmp inc mov imul inc mov mov outsl xchg adc into pop pcmpeqb mov xchg sbb adc decl sub mov or dec ljmp and mov add fistpl jnp xchg inc mov js and xchg out inc sbb leave and mov insb icebp rcrb lods test mov enter insl int3 iret sbb jb add daa scas cmp fldenv adcl sbb js in pop jmp insl xchg cmp pop or cmp mov push inc jb std sub leave xor insl mov adc mov cmp and cmc cmp sbb pop cli lret push enter insb inc mov (bad) cmc mov xchg mov sub push sbb jl inc and or repz jo dec jnp data16 xchg dec pop sub sahf mov test and and insb das adc in jbe adc cwtl es push mov inc shll pop mov jno and mov and mov dec clc (bad) in mov add push xchg lcall push jne push add adc data16 mov lahf xor into sub or sub test or pop push or sbb rcl dec mov shrb lods scas scas and push mov jne adc arpl in aas incl scas test inc mov daa ds out push (bad) mov lods mov rcl mov jo data16 cmp scas rolb rol sub xlat push pop (bad) or push inc gs dec (bad) mov pop xor jle lret push cli sbb negb add pop mov pop scas ret mov jns add es (bad) jmp ss inc xchg jnp cmpsl jo dec out lcall mov jp rorb or loopne sbb push ja sub jmp mov or jg pop jb xchg xor into out cli fmull fbstp stc or push add (bad) leave in xchg fildll lahf inc (bad) add stos js cmc xorl and push dec inc dec data16 jno and (bad) leave shll ja leave mov xchg jb and pop sub lds iret popf bswap dec addr16 bswap push cmp enter xorb mov (bad) inc cmp int3 dec mov je dec mov pop imul dec mov loopne inc push jnp rolb daa sub mov push mov subb adc cmp pop push (bad) mov aaa inc out xor jbe shrl outsb data16 mov push dec mov out cmp es mov bound in pop into shll ret or add (bad) out ffreep push push adc and cmp mov int call sbb xchg pop jo inc imul mov (bad) outsl jns sub inc shll shrb inc xor (bad) push inc and rolb ss inc add mov push test arpl adc mov out rol pop test outsl adc aad mov add mov cmc pop cli jnp and mov and cwtl cmp fisubr sub (bad) mov mov inc add push out mov or popa cmp mov pop or loopne enter test cs and jl jno cmp mov cmp fnstenv ja cmp and outsb inc insb sti lods ss popa fdivl dec sub mov jno fsubr push mov pop and inc xchg mov pop rcrl movsl in test insb sbb mov ret cmpl imul imul ljmp push in and cmp push jae mov in sub add lods dec xor cmp clc or nop bound int xor mov push orb imul outsl jecxz shrl and loopne lea jb inc cmp imul fstl in (bad) jno pop jns (bad) pop sbb sub push and aaa sbb outsb shll xchg jne sbb mov and mov cmp (bad) fidiv xchg lods xor add in jnp and out ds xor push xor lret aam sbb cmp imul mov jae xchg adc test push dec cmpsl stos pop (bad) jmp dec mov cs outsb loope insb imul out sub and mov pop loope fnsave orl jne push mov in sbb jns aad xor sub and cmp nop movsl mov inc xchg andb sub xchg xchg lock adc imul and inc and add or mov xorw and fmull arpl (bad) xor pop cmp mov pop push (bad) mov js ret imul adc or js fdivs lahf cmp xchg sbb push pop out adc push mov out andl adc decb mov xor dec nop jmp lds add mov pop stos ja insb enter cmp (bad) mov data16 mov mov xor mov xor xchg xchg xor mov test into xlat inc inc mov inc jnp in into daa adc in notl or dec push cs jo loop inc push xchg shll inc and push ja ret push cmp les popl sub fdivp inc je pop dec adc iret das adc mov xor mov lret js pusha dec in (bad) jno xchg jb mov in push adc or sub adc mov jo dec leave mov push gs ss pop das inc jge push adc cmp fstl cmpsb shrl sbb xor sub add sbb mov and jo icebp pop xchg or add dec in adc fs lcall pop cmpsl mov and cmp bound cmpl in pop mov sbb jmp arpl inc lahf mov sbb sbb xchg mov sbb jge (bad) push out fwait sti in mov push jo add dec xor push pop cmp dec mov pusha icebp cmp jmp out scas push loope sub dec stos pop pop pushf clc jae (bad) cmpsb (bad) or xchg out aas add pop idiv cli jle movsl mov les jno std das inc sub ds cmp push mov adc mov and js rcll mov aas aaa iret arpl fisttp mov addr16 and les add push and into loop arpl ss adc add es mov in adc cmp sbb insl (bad) loopne cli in add xor sbb fldl sub and shrl jge cmc loop mov decl movsl mov sub fnsave push xchg inc ss dec fwait xorb (bad) jbe adc jnp loop (bad) icebp add sbb out and pop scas (bad) aad clc push jnp and lret in scas movsl scas add sub outsb mov sti lods stc divb mov call in iret xlat cmp outsb pop ja stos popa pusha cwtl lahf decb dec dec lock fmul pop or gs dec pushf outsb ds (bad) ret ss outsl inc nop (bad) ss xor mov loop ljmp rorl leave imul adc sbb sub gs and dec mov mov inc vcvtss2sd test xchg adc jno xchg iret ja pop stos or jo cmp dec push or and sub mov ja in inc shll add mov inc sub cwtl mov fwait shr icebp or add cmp (bad) repz and aaa push lds xchg popa iret xchg neg and scas pop lods sub push unpcklps incl sti aad jmp pushf mov mov pop and dec and sub mov lock inc xchg add jp ret push sbb xchg mov adc add mov mov loope rcrl in mov in je xchg clc push or mov js sbb cmc std in jne jne lods int mov jle jbe je dec push dec shl cmp mov and push cltd shr xchg xchg in mov dec and aam mov dec mov xchg int3 or dec je out shr jle insl loop mov and cmp jmp push xchg adcb dec mov add lret loop dec es loopne and push inc call sbb cmp jnp insl push push adc cmpsl (bad) ficomp push iret cmpl sti das je dec cmp cltd fnstsw pop push push into xchg jbe mov mov sbb mov inc pop (bad) mov mov lods bound sti xchg mov mov adc inc push out mov (bad) stc and and fucom pop out (bad) pop adc xchg insb push cmpsb jge or adc dec fstps (bad) aad outsl and sbb lret jb insb cmp xchg popa adc hlt lcall in popf lods rcr xchg (bad) icebp and inc mov push (bad) mov icebp pop rol fiadd push in (bad) xorl je push sub daa cmp outsb adc mov cmp pop inc into in int int xchg popa nop and mov jmp adc xchg inc or scas adc push scas fistp pop cmp mov (bad) lods jle test xor cmp dec sti roll inc mov and lahf dec push sarb adc cmp test mov (bad) lea jp rclb js ljmp out adc xchg or add in xchg not outsb out cmp (bad) (bad) arpl hlt pusha gs xchg jnp mov imul inc les out or and mov mov mov ds lea add dec std and mov mov cmpl cmc (bad) and lods fildll out xor push out lods push imul sub sbb mov mov sub lcall loop jb ret jne dec pop rcrl jae dec mov lods and adc enter inc out mov or leave loopne shrl mov mov icebp into pop mov jg sub and jnp adc mov mov aas push test cmpsl inc popa daa jge cmpsb jno lods push sub pop int mov daa or adc push mov outsl and jg,pn jmp fild imul adc push xchg cwtl pop rclb bound mov ret int3 inc lcall fsubr aad inc sbb pop repnz movsb and je pop addr16 inc cmp mov jne mov mov stos jp push jge call push or cmp dec add sti lea push out jmp (bad) scas ror jae popa mov pop inc or lods sub pop cld xor clc pusha xor push inc mov sarb add sub add jbe fistp mov cltd mov inc cwtl jno jnp xor xchg jle add in fstp das cmc lock mov imul fstpt cmp lcall cmp test xchg rorl adc stc push stc pop and out mov out or xor fcomp and pop push pop (bad) mov sub push movsl jae jge test movsl cs dec in push mov cmp xchg sti mov or std in lods dec insl and mov ja xchg jl jle jnp fcomi mov mov aaa clc mov push daa jb int3 pop inc ficom and sbb jnp out xor pop push iret jo js es jo mov push (bad) and sub jbe sbb or hlt or insl clc fdivr rorl gs clc mov jle push and movsb jge std pop loop std lods mov inc aas adc outsl and cmp arpl icebp mov add in test loope mov and dec jbe movsl xchg dec out les stos and test (bad) enter gs fcompl lods dec (bad) std arpl xor in cmp fs (bad) mov mov adc les lea popf jbe aam neg fwait ljmp sub mov fsubrs pop cmp dec mov int mov sub scas pop inc adc xchg arpl inc das fadds aad jg xor fnstcw jbe (bad) adc outsb (bad) jne (bad) mov sbb or fstpl sub jge ljmp jmp mov xor dec push fucomi out mov cmp or imull test test or hlt inc pop push rcrb push std xchg es dec jl je pushf jae sahf push mov cmpsl pop jae pop mov mov push jmp or inc inc pop stos pop mov jecxz (bad) (bad) cmp push daa lahf sub pop dec outsl or inc and sub jl in cwtl fs mov xchg ja mov int (bad) movlps cld mov or lcall mov mov cmp test sub loop out adc xchg sub lods sbb fild mov sbb xchg out shr pop adc and xor (bad) out mov push mov dec sbb aas dec cmp sbb add mov pop jg inc orl inc add sbb mov sarl cs loopne xor js jmp (bad) and dec or cmp fistpll cltd xchg or jl dec and call cmp aas cmpsb test fnsave insl jns pop add and int cmp test mov in out mov ljmp cmp inc nop push add xor sub jns sbbl movsl lret cmp xchg pushf dec nopl add lcall fs ficomp jns decb sub mov leave pop adc out inc jae sbb idiv fnop jp push xchg dec mov pop ss inc add inc fiaddl adc ret add mov loopne sub repnz sbb jne icebp xlat iret ficomp add cmp mov iret not iret movsb pop outsb pop pop clc and repz mov data16 test idivl mov mov mov mov adc cmpsl xlat mov mov xlat daa nop ret adc dec das icebp das clc cmp sarl inc gs aad rorb mov push pop and das cmp aad sarb hlt lea outsb shrb mov in or pop int pop sbb dec cmp and aam das inc je popf xor popf es sti cmp test and scas xchg mov and dec inc push sub test adc fdivrs jno xchg loop add and stos aaa mov push xor (bad) mov stos mov or lcall cltd mov xchg ja sar in mov cmc dec mov sub mov fs shrb hlt movsl jne cmp mov sarl inc out iret in or cwtl push js je or aaa push movl hlt loope xchg mov lcall push leave push dec xor cmp mov gs insb xor xchg pop adc stc mov pop xor pop stos dec adc pop js daa add enter daa sbb add xlat mov enter cmp push mov (bad) lret jns mov xlat jge push pop sbb test in iret gs xchg inc lahf add cmp and cmc aaa or push add in cld movsl xlat mov outsl jge fidivr subl inc xchg into lds pop pop cmp add xchg sbb insl nop lahf or mov js or jb nop je inc mov jno xchg ljmp push jmp js xchg stc mov or mov (bad) mov sub cmpsb movsl or and test cmp cmp jb add inc dec cmc mov rorl in mov test jbe or push pop sbb je or sbb addr16 sbb dec pop movsl lret mov movl cld sub fild roll jo inc pop ds dec sub imul mov sti jg jmp adc dec sbb sub jle int xchg into cld mov (bad) out aas jle pop repz pusha je dec push jne lret lock pop fiadd pop cmc int3 out pop cli test push int out std in sti out dec add fsub popa sbb pop dec ds into jb mov sub ret lahf mov lods and loopne fiadd shrb repnz cmpsb rcll add les loope sbb lods and bound fiadd jnp dec imul xchg mov pop ret aas sub inc scas jb dec inc jp adc adc add push jae and mov leave icebp stos aad pop or pop or in xor (bad) int3 lret jg add test sub (bad) cmp inc call loope add shl pop adc movsb popa push push sbb sub leave fnstenv sti or or imul pushf cmp fildl inc mov outsb stos inc sub and inc inc jbe and inc mov fisttpl pop imul and outsl cs movsb jae es adc cmp push ds outsl sub out in xchg mov (bad) lret lods xchg xorl pop outsb sbb outsb mov in shlb popa lret lret push xchg inc mov or outsl cmc (bad) aad pop or xchg xor mov sbb and jno lret (bad) scas xchg cmpsb sub add in ret fucomp sub je test dec sub jge int std xchg stc add lcall mov jge jno jne gs cmc inc ss mov mov xor movl ja in lods sbb add jmp pop mov cli (bad) repnz ret les xchg fs (bad) mov mov arpl mov cmp inc addr16 adc call jbe loope lods mov dec subl mov or std cmpsl (bad) nop rcrb dec daa jne jbe stos mov mov pushf jne (bad) lds jp mov inc inc mov pop icebp mov and adc xchg mov pop cld aas andb sbb and cmp xor jno and arpl mov jno popf into push jo mov mov jo pusha imul psrlw mov pop xor mov dec lcall jge in cmp fistp jno xor xlat cmp icebp call inc cmp (bad) or cwtl (bad) mov and bound iret sbb out loop (bad) inc out bound xchg js xor notb xchg rorb jge push pop and and or or push cli out shlb jno (bad) cli and lret dec ds das inc ret push pop popa jns aad jl jne lahf (bad) clc daa imul mov loope xor and mov repnz fiadd mov inc jmp movsb shrb pop cld int dec push orb ret (bad) jbe shlb cld adc jp fadd sti xor aas mov jbe sbb pop test or or cmc cwtl xor push add outsl sbb dec imul (bad) and repnz jns inc (bad) fnstenv pop mov shll fisttp mov push cmp push mov jo or mov sahf push cli xor and inc xor mov lcall std jp adc stos stos lahf add cmp add sbb mov mov pop frstor cmpl fistl imul xchg rolb les push out inc and cmpsb imul sub or stc fistl and andl in adc mov fs test cmp sar fstpt jne mov sahf dec iret and or xchg fbld push les and jo aas xchg ror stos movsb movzwl xor sub pop fisubr jnp outsb pop ss pusha sbb rorb and xchg nop mov pop add (bad) jns das (bad) xchg ret push mov pop jbe fisub ss rolb repz mov and rcrl push cltd push jae (bad) mov xor lahf shr lods icebp pusha and outsb inc out aad push mov insl pop adc loope repnz push fistl fwait leave loope fnstcw adc ss outsl mov mov xor adc and xor fldt js outsl pop mov cmpsl pop pushf pop roll xchg cmp add xorl int3 movsb xor jb fadds ja mov sub mov rcll adc lock sar (bad) leave lret sti pop (bad) (bad) jo bound adc mov in cmp and clc and mov pop cmp arpl pop dec clc or loope sti jp ret cli ret std cli outsl mov sbb lret cmp cmp adc (bad) sub add fsub xor xchg xchg jge mov fdivp lea cwtl popf jp cmp clc jbe (bad) mov and mov dec sub out hlt cwtl stos add adc jmp jo icebp sbb cmp rcrl fnsave xchg pop hlt clc popa (bad) stos adc les push dec cmovl lods jae and mov clc xchg jns pop mov inc incl jp push add (bad) stos xchg cs mov pop and out jmp testl cmpsb adc mov mov adcb test jle repz ret lock cmc or cmp test dec jle pop pop cmpsb mov in mov ret mov rclb adc xchg mov fs dec sub mov stos xor inc mov and and mov mov adc mov orl inc jg mov xchg mov inc jae mov mov lods (bad) faddp adc jns mov mov or sub cmp scas (bad) insl cld fldt adc lahf sub rol jl hlt das mov dec movsb inc or out pop mov shrl push enter dec repnz adc sub xchg movsb aas test xchg inc ss iret xchg mov int3 mov int3 xor cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor sbb cmpsb dec xor .byte mov iret add jb add xchg sbb aad add lcall pop inc mov cmp add jae pop xchg push pop aad stos sub mov cmpsl or adc fs aaa (bad) fs pop xchg xor cmp jmp or lret dec ficomp lds call mov or push mov mov (bad) jb pop in jb pop aad fidivr aad add daa ljmp iret inc jp (bad) or out push push aad js test jb pop cwtl xor aam add aad cmpsl mov cmp pop aad clc ficomp or test pop jne xchg and jle sahf inc dec lds aad add pop stc push mov add pop dec jns mov test push mov sub aad add pop dec jns mov adc int3 cmc inc movl add pop inc inc add stc push mov xchg add scas or mov add aad sbb aad xor movl add pop in sub aas add aad xchg es jne pop aad xor movl add pop in je jnp adc test pop mov lds aad add pop dec jns mov push je xchg lret int3 cmc inc movl push aad jmp pop addr16 ret jnp out (bad) lods jmp dec jp xchg leave testl in data16 jl pop aad add out out addl js jl adc in data16 jne pop aad sub stos jp stos pop mov (bad) daa add add sahf scas hlt je and xchg (bad) xchg dec dec fiadd and xor xchg pop jmp scas bound test outsl ret jo inc mov sbb xlat lods mov gs in roll mov push mov leave mov inc addl mov xchg mov stos push sbb xchg and dec ficompl pop add idivb xchg add xchg jmp jne jne sbb jb pop dec push loopne push add popa iret aaa mov jno or dec sti sbb adc add push out mov mov sub fmuls shrb cld push adc xchg or or push pop push pop xor imul dec sbb into test jb xchg insl fsubl inc sub xchg ljmp dec xor mov cmp ret pop mov (bad) popf ds xchg lds loop ljmp inc cmpsb outsl and dec and or (bad) ljmp jle dec decb inc xchg mov test jp xchg int scas jp pop movsb mov jle jle push mov adc sahf push das lret jb pop mov ja sti dec pop jnp scas or into sbb pop dec ss cmp mov lds dec add xor popf add rolb xchg adcb mov jmp enter repz arpl inc ja testb jns inc add lods xor mov inc ljmp in mov sbb insb xchg or xor ss mov out orb hlt lret clc cld push sbb aaa jl add (bad) ljmp add push testb fdivs pop iret aaa add cmpsl rorb enter mov lock ret xchg and pop xlat push and (bad) or xchg iret push jl (bad) jge popf pop pop fwait ret out sbb das repz lret hlt and xchg xchg popa aam (bad) xchg cwtl lcall iret gs xchg (bad) dec lret xchg scas cli cli sub outsb clc movsb enter leave lock push push idiv sbb mov xchg shl jmp mov xor test decl pop popa or test inc mov dec cwtl ljmp arpl test inc jecxz xchg (bad) mov push add push push lods sti inc pushf inc loop ja jnp roll lcall enter jmp xchg mov loopne push andl or mov repnz ja push cmp aas add xor sbb cmc aas adc outsb or dec jl mov push fdivp cmc (bad) aas movsb lds push std xchg xchg popf mov mov add add out test sbb adc hlt ret lds fs insb adc cmp repz push inc aad call sub (bad) mov dec jbe xor and push cmp add push jns push and push test xchg push mov jmp outsb jne cld enter inc mov inc popa iret dec stos call out stos cmc push xchg dec rorb (bad) mov push sbb aaa or mov sahf leave ds dec (bad) inc movsb rcr push dec popa stc jo sahf icebp mov in add test push stos xor jno push pop popl movsl inc sarl inc mov jne inc or dec mov mov jb cli jb out and xchg jecxz ja incl adc mov mov aas mov xor sub js das (bad) sti imul xchg add cmp jg ret jo test lds fidivl mov cmp (bad) test dec decb jb jns adc pop sub aas sarb insb into lcall inc out push test fidivr movsb mov fidivl inc ljmp pop sbb ret (bad) mov or das fcomip cmp call imul faddl pop dec jg push decb adc inc mov lock push test push sti in jns add sets test nop int3 repnz into dec aas icebp mov in xchg sahf fistpll pusha adc pop f2xm1 jno notl adc xchg push dec test orb cli jo pop insb into jo jnp iret mov cmp jne jo test testb cs jge (bad) stos call vmwrite jae jne addb ficompl inc xor push mov (bad) int3 fidiv leave in fisttpl ljmp and cmpsb fisttp pop pop in xchg add jne sbb adc inc cltd lods (bad) mov lcall or add loopne jb mov fist xchg movsb fmul jnp pop mov xchg add pushf jg jb xchg cltd decl arpl scas xor mov xchg mov loop incl loope or xor into mov mov mov (bad) clc mov inc fwait icebp scas cmpsl popf inc jns pop enter std aas jnp inc xchg movsb mov and or into lock test dec pop mov fldl2t je xchg xchg addl aas and mov int3 bnd push mov sahf int and mov in adc jns adc not adc sub dec sahf mov or movb lret ss and icebp xchg cmpsb test loop mov push jmp cltd adc mov je imul or push jle jbe rorl fsts pushf ds je call scas add ret int3 call dec mov fdivrl outsl mov stos repnz in cld out lcall jbe mov mov sar inc mov daa mov sbb jp push popa xchg jb dec cmpsl sbb sub loope fwait (bad) insb cmpsl mov testb orb (bad) jbe sahf mov fs loope mov push xlat jmp cli andl push lods out loopne std push push (bad) jle lds sbb mov clc add adc sbb xor lahf mov imul fcmovnb icebp mov aam insb test loope adc pop pop jns jp pop iret sbb cmpsl push inc xchg mov aas test lds dec lcall xor adc les daa popf lock push out pop mov lret and mov jecxz imul jg xchg xor les adc addr16 pushf fsin mov dec or dec aad and lret in pop sbbb dec cmp mov jbe inc fistpll mov mov sbb (bad) aad iret and sarb dec pushf jae push ret dec movmskps pop mov lret and (bad) add roll mov out and mov (bad) or dec mov and jno orl mov adc push rcr push xchg fwait sbb iret sbb out cmpsb jge fbstp ds xchg mov fdivrs enter sub add cmp or pop and fwait push push in cmpsl add fcmovbe pushf xchg or sbb jbe imul mov push add inc xor scas js call xchg enter (bad) pop or hlt sbb dec ret scas adc in jb mov ret cwtl inc sbb je daa test test movsl iret in ret push fcom popf out int repnz fcom jo dec sbb inc (bad) jae inc sbb (bad) cmp xor int3 sub jno outsl add cmpl xor mov inc sbb enter jne sbb popf (bad) push stos mov pop pop outsb dec pop jp adc mov aas and negb cmpsl (bad) adc mov mov dec and or jne stos js xlat into mov xchg mov push cmpsl loope push test xchg aad cmp (bad) ss cmp das xchg lods jae popa push inc inc fistp jae repnz (bad) push sahf lahf das or aas push xchg repz sub int3 mov fcoml mov or sbb clc push adc mov xor pop and sarl mov inc and push inc nop mov and out and mov (bad) in xor and add xor mov mov mov inc jecxz mov ja add jg clc sahf or pushf into adc pop add cmp cmpsl sub mov adc xchg xor aam dec pop or cmp lds mov sbb inc lret lahf pop push add dec xor jnp xorb mov pop dec push dec dec sbb scas jge ret aam or cmp jle test ljmp dec xor pop bnd insb xchg add or ret aam addr16 sbb test sahf lret push repnz (bad) fild movsb clc aam add sub or xor mov cmc push (bad) shrl sub jo push or sub dec cmpsl icebp mov and inc and pop dec push repz incb pushf ret icebp xor leave nop or lods xchg xor mov inc sbb daa mov push push sbb jp das in xor popa add mov adc mov enter pop aad scas arpl inc ja int adc cmpsb adc jmp xor push push (bad) jns xor mov jbe test leave stc rclb push lods scas sbb xchg lret add loopne jae cmpb fidiv pushl jae mov dec push pushf ret pop push xchg lret stos mov push out xchg fild or pop pop outsl mov (bad) jnp and xorl sub xor xchg push cmp popf mov inc emms out push push movl dec fiaddl mov pop pop dec inc lahf mov popa inc fldl sub lahf adc int3 stos into outsl xchg ja jae mov add (bad) in outsl mov jnp lret or inc sbb xchg push lret pop bound mov arpl adc subb rcl pop dec stos fxch (bad) jo out in jns fs (bad) int sub adc mov nop adc add mov push imul jmp lea stos out repz sbb jmp lods lods inc (bad) xchg hlt inc push in jo dec mov inc mov push loop call xor cmpl or mov aaa or adc xor pop add sahf push jmp lret cmpsb dec and lea ret push lock pop add out ja inc xor and push or pop mov int3 mov movsl outsb in sub jae outsb gs and mov ficom fisubl sbb jle js dec stos ja in xor cmpsl movsl subl add ret cmpb cmpsb rclb push or dec and add (bad) push test jb std jle adc inc mov or mov xorb cmp dec jae jg test push pushf mov (bad) imul adc push cmp push pushf xchg mov cmp addl cs js cmpsb sbb loopne fcmovu add or jle fdivl fistl fcomps das or fisttp add inc push inc jns cwtl pop xor push pop sbb test jecxz push xchg roll je and ss pop test fidivr (bad) cmp add popa mov inc mov pusha push mov or inc pop add xchg mov js movsb fwait call test stos lsl jne popf add rorb push mov aad cmp movsb push or fwait dec call add pop or xor sbb sbb les adc js xor and pop scas inc adc loope pop lock fadds sbb sbb popa pusha jmp lods jecxz (bad) je push ss or mov outsb sahf (bad) test loope mov inc daa ja fwait cmp push psubusw mov inc fisttpl test and add (bad) repz sub xor push mov jge xor jns add pop lods add dec popa and jl adcb pop sti adc daa xchg ljmp push js jne je scas stos adc add inc cmp fcoms jne pusha jmp add (bad) add cmp sub loope mov add and adc dec mov and lods inc add push pop cwtd dec sbb test sub pop lret cmp std movsb xor mov rolb stos adc jo or ret jnp inc enter in sbbb daa sti test adc or jecxz inc add or jo jl push (bad) data16 push sbb gs xchg es lcall rcr fadds fdivp sti add in test push loopne inc adc sub shlb inc ss xor sbb (bad) dec andb je sub adc dec inc or aam adcl push and push pop pop inc jl ret xchg outsb mov stos sbb loop in fcomps mov push xchg clc sbb add insb mov adcb movsb or or cmp out dec ss inc pusha or sub imul fcmovu jge pop cld movsb add mov sahf adc insb sub add (bad) cmp (bad) sahf in cmp rcrl loopne mov sbbb movsb add adc popf test dec add push adc pop cltd dec mov mov adc adc rcrl inc sub push pop push sti mov jp adc lret shlb add (bad) popa jo add mov cmc xor test pop addr16 cld test xchg in dec lods jne add jmp subb aas sti sbb mov mov lds xchg adc repnz adc fsubrl lret pusha mov push sub insl jecxz sub fdivrs js pop push mov fimull sbb imul mov cmpsb sbb ret mov mov repnz mov mov cmp outsb loopne add test or add inc add add ljmp jl push loope dec dec cmp adc push cld add aaa cwtl orl leave call ret cmp and jnp and sbbb or mov mov pusha scas or nop arpl cld mov dec jmp cmp aam adc rolb adc cmp cmp add fsubl and fwait xor mov imul clc (bad) add adc sub adc mov inc cmp pop rclb mov lock shll pusha pushf xor rol lcall iret mov dec push push subb push enter insb sbb adc cltd pop mov sbb daa movsb push shr and push lcall test and cld adc inc sbb pop add push jle cmp (bad) popa fcomps sub jo inc and push cwtl enter sbb rcl add mov ds pusha or dec xor int3 sub call sbb data16 sub mov pop test push les inc and (bad) xor add jmp mov lds sbb pop test adc (bad) jb cs adc add sbb lock mov (bad) int3 mov xchg mov push test sbb sbb ljmp inc adc enter or add dec cmp sbb pop and or les hlt je add jo bound lcall adc cmp sbb or mov pusha dec add test call cmp jl push push push mov and xor jl (bad) xor test dec ret pusha aam sahf mov addr16 movsb xor (bad) push gs adc movsb xorl pusha add cmp add dec aam add das test rcrl popf adc push sub xchg or ljmp mov daa je sbb add ss add scas xchg mov repz loop rorb or loopne fcmove enter (bad) mov push and dec push fcoml push inc hlt mov mov lret inc cwtl lds jg push mov nop jo lret xchg jne test or jge scas pop sbb mov xlat mov int3 ja mov add or es pop lcall adc fnstsw xchg mov push mov or or movl sub testb add sbb inc loope,pn popa xor fdivrl pop les jbe rclb pop daa stos push add dec je jns mov jp add push pusha nop add sbb adc add js idivb pop rcll push pop fadds pop mov mov pop add lds das adcb add inc add and jecxz rorb leave dec out push pop mov gs mov scas insb jg popa lock into sahf add add and adc sbb in sbb pop lahf cli add push fucom popa clc xlat add sbb xor shlb (bad) arpl sub add xlat pop xor add push test dec adc adc jno daa or insb lcall unpcklps and test jp inc es mov or lcall cmp je mov push jecxz test hlt or dec and and loope ds sarb mov mov test rolb sub nop sarb sbb cld mov inc add sbb (bad) jmp enter add mov (bad) rcr sub xor psrld les mov pop jnp xor test sahf push or mov xor pop inc (bad) shlb js or repnz lret fsubl add sub mov jmp lock xor mov jmp jl pop sbb sbbb aas push inc adc lock inc and sub and add aaa rclb outsb sahf pushf bound push call sub sbbb dec pop push nop sbb xchg inc leave repz cmp rcrl outsb cltd jnp or push int3 mov cmpsb shl push sbb out and pushf push pushf sub mov (bad) test sbb xor push repnz outsb xor aam pop loop and push pusha sbbb sub mov mov add cmpb rcrl jbe addb test in out loopne nop jl mov inc cltd push bound push add data16 js dec outsl lret sbb sbb int3 stos add scas push inc andl push leave pop push xchg push fs dec lods rclb adc insl inc and subl mov loopne jne movsl jo or sahf cmp sbb ljmp sbb out in sarb shrb adc jl add jle divb mov add fstps cmp mov faddl pop adc mov pop jns ret and sub sub adc mov test sbb cs adc mov adc dec fcoml enter test mov adc fcompl dec int3 mov xchg decb adc cmpl inc add dec add sub stos adc push clc sahf outsb xor fdivl (bad) xchg xlat in add and push clc mov inc mov sub test mov imul lret mov outsl rcrl jmp inc fadds mov mov mov les pop int mov jnp add jnp or mov repnz (bad) clc mov popa or out cmp cltd inc or push popa pop (bad) flds cmp mov cmp add or sbb (bad) mov inc out dec pusha ficoml push lods mov packssdw cltd rolb (bad) and xchg roll clc icebp adc cmpsb mov and ljmp stc adcb cmp push pop movsb jo insl sub jae into (bad) pusha sbb lods mov jecxz sbb mov jg rol cmpsb testl test add rorl ret add test nop lock jmp imul mov repnz mov add dec push mov daa jae mov stc sahf insb dec xor stos and add outsl repnz sub shr pop out ficom imul aas rclb mov cld clc cmp push lods and subl inc sti loopne ret clc sbb cmp stc pusha out ret and mov fsubr add popa repz das and rclb and push fs (bad) andb pushf inc xchg and pop add ljmp xor cmp xchg sbb cwtl shrb cmp and lret test inc out ljmp hlt mov adc pop cmp mov add shll ljmp pushf cwtl xorb sub add pop sub lahf shrb or xchg adc addl loope sub add cmp jge mov call ret jae sbb jnp or les mov add aam out aaa repnz xchg jb jbe or and fistpl insl rcrb bound rclb cmp xchg pop or and nop mov cmp or xchg or xchg pop lock inc adc clc ret nop adc adc insb mov jo inc je xor mov add jmp enter push cmp push sahf lock leave je test add add mov (bad) lret push aad add push pushf or sbb int3 inc xorl movsl aam jne or arpl addr16 mov jecxz cmp scas lahf shlb mov popa std or add xor jns add mov insb jecxz add inc push inc mov add jo sbb test xor and out lock push mov inc cmpsl ds (bad) pop add or nop or mov sub adc pop mov dec adc or cs out cmp les mov inc and sahf (bad) jmp or or test xor das aam inc and mov stos pop mov sarl jge adc push insb in mov mov inc movsb lock jo pop daa push scas in inc adc sub sub jne mov test stos stc xor add lahf xchg ja mov mov sub dec jg add jae cmp mov cmpsb icebp cmpl lahf cmpsl mov movsb add inc and add lods dec addl mov cld push loopne or sbb push sbb xor cwtl and inc xchg mov lret cmp cwtl add pop push (bad) lock sbb xchg mov fist sub std js test mov pop mov xor adc mov pop pop adc and mov pop add mov pop sub lock dec inc inc inc push imul or (bad) in inc sub mov lcall (bad) xchg or pusha lret mov and dec mov sub add push mov sahf and popf ss call pop fcmovb xchg lock das add sbb inc mov xchg call or add or dec fsub clc mov xchg orb mov and xchg add xchg repz dec les and lahf lds int xchg xchg scas lret adc cwtl jo jmp (bad) pop push pusha jg and mov push pushf add sbb xor rcrb out pop fcmovnb jo jne sub or xor lds xchg js sub push test outsl add dec mov gs and sub add adc notb nop enter jmp and int3 mov stc sbb pusha push popf fdivs xchg sbb push pop or sub adc in mov cmp sub inc fadds xchg addr16 add xchg mov movb sub arpl inc adc cmp add into push dec loopne sbb test js and and iret cmp bound inc sub in fnstcw ja jecxz loopne mov call mov mov sbb fidivl sub xchg ljmp les in test or xor inc ss cwtl adc jmp shll xor addr16 pop cmp (bad) jne dec xlat cwtl xchg add jge in jmp fwait dec adc leave cmp xchg sub xor leave pusha mov xchg ret add or out sbb jmp dec pop ljmp push add call ret or jae sub add int3 push (bad) inc mov or xchg add lock (bad) cltd inc into (bad) aam pop or andl mov fidivrl mov scas pop adc outsb aad insb cmp shll ds dec enter add lcall mov mov add jbe (bad) hlt or movsb adc std sbb inc in xor adc sub clc mov or xchg mov popf or sbb dec leave add xchg mov add jbe sahf xor mov in mov pushf cwtl mov imul xor daa ss cmpsb aam dec cmp scas sub sub and subl cs sub cmp sub mov arpl add (bad) (bad) call inc aad arpl ss jb dec mov pop mov or cwtl cmp and ss popa aam mov sub js mov stos mov rcll popf add and cmp icebp add mov xor or out je pop pop add out mov push (bad) pushf inc xchg test jbe prefetchw add inc pop lock dec or lcall pop mov mov clc add or cmpsl mov outsl jp or inc call adc inc sbb push clc push fistpl mulb inc inc add jae nop push mov mov bound out add xchg scas repnz addl lret nop or hlt or pandn sbb inc in inc fs push mov fiaddl adc clc and andl mov and xchg mov add jge and enter adc jl sbbb pushf (bad) hlt push xor or lods cmp adc movsb pop divl and push add and inc xchg add dec and (bad) icebp mov imul lods mov aas ljmp xchg adc aaa add push pop test adc (bad) push push push sahf inc inc movsb mov jle and js mov add cmc inc cmp sahf inc loop lcall out adc xchg and les pop push fucomip inc movsb adc scas mov test leave xorl mov in sbb test fimul repz sbb sbb mov pop or call add and (bad) cmpsb xchg ljmp arpl dec push pop sahf pusha and icebp dec lods adcl adc cmpsb push add repnz int3 pusha add ficom rcll push movsb mov add icebp mov adc sahf cmp cwtl sub rolb aas mov adc pop or and sub and add arpl inc sbb sub mov adc lret je inc hlt mov cli sbb inc fcompl inc cld xchg and and add cltd pop stos and mov xor push add ss and and out lock roll sub sub adc and repz hlt shlb cmp addl call aas jbe call inc mov xchg out (bad) lret jmp sbbb mov jae xchg or add mov aam addr16 ret ffreep int3 nop jnp inc into inc dec sub or mov jno mov add or mov push sahf add out inc fdiv jnp dec jb xor push xor ds sub mov inc jb dec add js cli popa or sbb xorl aas movsb pop push (bad) popf and pop jns cmp imul orl or sub add les aas jb mov imul push push add push mov or lds jg rolb pop mov jno add push test sbb enter lahf cld mov xchg add cwtl or mov dec fsub or nop shlb mov mov mov xor pusha mov sub scas mov scas (bad) jo push adc clc or or xchg pop mov test stos mov es or cmp xchg sub adc dec test add fs ds and mov pop inc call inc jle mov add cwtl loopne add leave movsl add (bad) test mov rolb mov testl das in jl arpl xchg inc mov cmpb movsl fnsave lret adc repz push add fildll pop lods mov sub sti mov fnop dec mov rcll sahf cwtl stos rol add add push pop inc clc rorb icebp sbb sbb aam shrb mov push ss mov cmc xchg push sub add mov mov add pop xor xchg add cmp lret mov or sbbb mov xor cmp xor out xchg jo stc xor add test add lods (bad) push xchg xchg mov jno mov add mov add xor repnz push pop cmpsl lret mov nop or cmp popa mov or push mov jno or and mov pop in or test jg stos xchg push xor inc xor jo int3 fldcw or or ds mov cld adc pop insb sub and leave pop into aad push pop jnp cmp pop mov inc jae add adc add fisubl xchg popf xor add mov aas jne rorb push xchg push shrb adc xor lock xchg xor push and rol loope add pop sahf bound loop xchg jmp mov mov sub cmp jns ret nop js dec gs or mov jl sub sahf sub add adc stos pop sbb and cmp andb xor xor les into movsl xchg adc or es push jb dec dec add icebp aam call loop and pusha subl sub lahf push sbbb mov cld inc xchg lcall xchg andb push jp fdivs stos sbb sbb dec fild add (bad) add mov adc and pop imul shll aad xor and sub mov or ficom in js cmp mov mov xchg sahf in add mov popa pop lahf sub stos fcomps aam mov xor add mov arpl hlt leave add subl or jle pop (bad) test add dec mov add mov add fidivr pop jmp sbb imul cld mov divl inc ret js out pusha inc add sbb add in jno cmp inc mov mov pop pop dec add rorl sbb jbe push add ds loop adc mov nop popa sbb adc xor fs xchg or out mov inc cwtl mov cmp testb sub rolb jp clc int popfw rorb add sbb call sub dec sub cmp push js pusha sub xchg insb rcrb fcoms repz je mov ret add leave add pop mov mov and call daa (bad) fdivrs fnstcw jo int sub mov jle frstor or loopne iret mov ret sub popf and mov inc rol pop int3 xchg ss mov xor jo and pop rolb imul mov inc inc fdiv or bnd add mov fmuls and adcb dec mov or daa (bad) pop scas push xchg sarb sub xchg jns sti pop and adcb cmp sbb dec mov mov int3 push fbld adc add popa fs insb add aam mov jmp sahf repnz or js mov push inc ret sbb mov leave js insb inc add mov mov push je and pop aaa mov or int3 bound jno pop movsl imul arpl adc add sbb aaa inc and add sahf cli test je dec cltd mov add aaa push xchg mov fcmovu fs js (bad) pop adc mov xor xor add out test cltd xchg mov xchg nop in sbb pop test push sbb iret ss dec add mov js or mov jge pop ficom lods (bad) cmp dec or pop pop and hlt in int lret pop lahf mov mov dec or sub lods cltd add scas pop xchg mov sbb add (bad) (bad) fidivl pusha push xlat mov or (bad) mov add pop movsl out repnz add pop mov xor mov and mov das movsb xor call shrb cmpsb mov sbb ret push add pop pop enter push inc mov mov sub cmc cmpl int3 in mov sub pop aam (bad) insb adc mov es sarb sti cmpsl hlt icebp es xchg ds add jo mov fwait adc loop pusha call nop inc cmp cli lret xor sahf dec lcall scas loop sub rorl mov out mov push push mov mov sbb xchg pusha or sbb mov mov icebp and sub add push fwait mov stos xchg add and (bad) sbb sub jo or add and dec cmpsl es test mov (bad) mov mov xchg arpl clc cld popf pop and or and inc pop cmp ds sub dec cmpsl pop inc int3 mov loope mov push mov in aad mov popf and lahf loope add (bad) xchg aam shll or xchg adc or lds xor js add leave xorl push aaa lahf adc sbb mov mov and push test sbb mov aaa popa pop call cmpsl and mov fstpl and lods mov adc sbb inc pop dec aam adc aaa lea lahf mov mov loope inc or test mov push xchg pop fsub mov sbb cmp int sbb jnp or add sarb xor adc jmp dec stc lods pop jle sbb adc sub inc (bad) mov or inc movsl ret or lahf jbe or dec and ja inc pop inc fsubl push aaa mov mov push adc or hlt or sub sub popa mov cmp add push push repz mov rcr mov or fimull adc xlat fisub (bad) leave cs or (bad) adc popa (bad) or inc stos sbb (bad) pop jnp or and outsl xchg xchg pushf bound sub xchg inc nop cmp sbb pop clc xchg adc call das sbb fs adc mov mov inc xor adc inc mov int3 dec or adc fwait sub pusha and outsl clc sub jae into dec push sbb adc ja or pop pop lea in dec xchg dec call xchg jno mov mov icebp iret mov pop mov dec fnstenv mov arpl inc enter lods ss shl dec repz mov nop push jne dec insb dec push mov fs xchg dec and das sbb mov mov mov repnz mov ljmp (bad) pop inc adc sub in and mov cmpsl xor movsl pop inc cwtl xchg xor repz lcall lds and ret ret insb repnz clc das mov roll ss int repz pop movsb pop mov pop add sbb dec sbb xorb xchg cld and xchg lret dec dec rolb jo cmp fsub bound mov sub sub dec and or and push lock fwait mul mov lods test or and push dec or lods mov cmpsl rorb subl mov movsl pop cmp dec test ds lds jo push lahf cmp mov mov mov test cltd adc pop mov xor xchg test popa add lcall arpl cld nop rorb mov inc inc xchg add mov lea add xchg out cltd (bad) lret icebp inc rcl fchs dec iret repz mov xchg pop cmpsl rolb lds negb out or (bad) cld imul out and dec dec or or cwtl mov inc sbb (bad) mov mov push test sahf (bad) mov hlt push rolb repnz xchg mov clc aas push adc xor lock test xorl aaa add lahf sub js dec leave pusha xchg mov mov mov dec sub std aad and cwtl rolb push icebp inc jnp mov add jbe cmpsb fadd mov xor mov jg fldenv mov or cmp shrl cmp push lods sbb jmp cmp mov dec enter lods rcrb pop or testb or and mov sti xchg nop and inc addb scas pop adc rclb lahf fcmovb dec push jo mov scas fisttpll (bad) mov or repz add jmp fdivp fmuls loop jno pop push and loopne cs clc ja inc mov cmp jl call mov mov lds adc les in inc rolb mov mov add mov jmp inc or (bad) and xchg test js cltd add sub xchg push push in fbstp pop push pop je cmp add mov sbb leave mov mov call dec add or pop pop sub loop xchg sub cmp pop daa popf mov and mov sbb nop je scas or insl je inc (bad) mov call stc and add mov sbb and mov pop rol fisttp push cmp mov repz xor test test loopne add nop mov xchg add jbe stos and mov pop or loope jbe xchg aad fisubl (bad) loopne sahf pop fbld mov sahf clc test sbb mov mov movsl out ds loopne test dec ror fs mov andl mov fmuls out sarl bound jae or push or sub or cmp (bad) pop cmp mov sbb mov mov and cld popa in jl mov sbb adc stos rcll and aam iret (bad) xor std clc or ds popf add mov fmull inc movb cmpsl in mov add imul or test addb mov inc aaa add mov in sahf jecxz inc movsb jno add test mov pop or imul add aaa pop mov pop mov jno jge add negb xchg loopne add stos clc add sbb mov add fsubrs das or add divb sub cmp mov push sbb inc (bad) cld or add jb cli add rorl sbb stos stc add icebp sub into pop jb in pop xor sub stos pop add pop jecxz mov aam pop add xchg sbb out ret inc xchg xlat inc adc cli aas xchg scas inc or rcrl es lcall cmp push sbb cmpb cmp pop lock loop xor mov sub lods pusha stos inc pop movl lock clc scas xor sbb movsb add jge shrl movl pop mov repz nopl pusha lods jnp stos scas add or in push mov mov mov (bad) stc add movsl ja add sbb add mov ja test rol lods xchg inc nop mov mov pop sti test lcall add int3 mov mov cmp push mov sbb imul add outsl add orb or in scas adc sub movsl xor out add rol jmp mov or mov andl push sub dec (bad) loop fs mov or push loopne cmp and ds mov xchg daa cld sbbl pop sub inc pop mov clc popa stc xchg xchg push add orb pop ja orb xchg mov in xchg lods test push popf mov pop inc into test lock sub mov sub ret add scas std jo dec pop movsb sbb pop insl and mov and ret mov lock xchg inc xor push test pop (bad) sbb xchg sbb and orb mov loopne dec xchg mov xchg aam (bad) push xchg adc add dec int3 and inc add or test xorl insb sbbl repnz in push nop movsl add sbb dec or lods lods cmp hlt pop mov aas daa jge in or sub ja mov fisubl mov adc mov sub add movsl pop and jle xchg add jno and fisttp cmpsb call lock (bad) xor sbb out scas pop pop jg adc lahf fwait mov add fisub nop std in stc fdivr push add xor pop fisubr pop test sbb pop mov call arpl fildll mov (bad) inc cld mov xor inc add ret add int3 or roll xor (bad) mov fs mov dec in sub mov popa pushf lock (bad) pop or jnp adc dec (bad) (bad) std mov loopne fcompl jb ret push in mov lods and lcall frstor clc add (bad) mov std repz xchg mov mov lret les cmp fild scas sbb out test xchg lcall inc pop xchg adc push add fldl out loop std aas xchg adc push inc mov nop fsubrl sahf or mov pusha enter jecxz or loop cmc shr add jl jbe nop cmp sbb popf call inc leave sbb loopne test mov (bad) cmp flds sbb js add icebp jbe cmpsb loopne loop pop push fsubrs and ret mov mov dec icebp mov hlt push je add push aaa dec xchg pop sub sbb sahf xor repz mov lret loop js inc mov push out popl leave xor ret (bad) hlt cmp jo ss jmp fs rcrl dec in cwtl (bad) mov dec cs popa sahf bound jge push (bad) lock pusha dec or in outsb pushf test fimul or adc add adc (bad) cwtl test mov pop mov iret add dec mov out mov fadd call xor pop outsl icebp lods xor sbb shrl je push je add xchg fistp cmc leave insb xor sbb mov pop gs or dec add cltd lea and dec lods cmp sarb push xor mov subb cltd push sbb cmp dec pop xor cli push and stos fwait add test lods push (bad) lahf mov pop mov nop mov insl add out mov stos aas pop fstpl cltd and pop mov sbb or test xlat jl push lret lahf sub sub sub or sub pop and subl mov dec je daa adc rclb mov hlt imul std fmuls mov dec cmp push inc push sahf pusha fldl jo cmp pop lcall inc sbb push xlat xor ljmp mov aam loopne out sti push mov nop mov repz fs cmp mov cwtl in or jo sbb and sahf dec stc mov mov push pandn jmp and (bad) cmovl mov sbbb adc andl dec xchg popf sbb xchg pop add pusha int3 mov push les mov sub xchg fist inc pushf jno push xor push cli repz sbb rcrb push or test xchg lahf and lahf repnz mov inc or testl pusha sub and out sahf mov mov loop add xor je xchg (bad) sarb or fbld push shrb push mov xchg and mov push mov test add inc fs das lea aaa lock mov sbb (bad) mov in adc roll cmpsl inc or mov rolb lock movsb js mov loop mov dec dec xchg ljmp cmp jl insl pop dec or adc popf subb outsl push fneni(8087 add pop adc mov clc aam and js inc movsb popa cmp int3 or fcompl add xchg jp and or add fimul mov xor inc movsl fwait stc call pusha push test or ja pop insl push add jmp push add clc ficom sbbl jo push inc shrl shrb xchg out mov add sub mov (bad) fdiv mov mov and pop ljmp xchg sbbl or out lds je add fisttp pop and jecxz testl and pop lods mov lock cld cmpsl pop or ljmp cmp sub mov or pop cwtl gs lods cmp dec mov cmc jb push push mov add mov popf jbe stc icebp sahf outsl lret (bad) mov or fdivs fcoml in xchg fimul or outsl sub sub shll (bad) sbb dec lock and push inc loop mov cltd add pop pop sub aam jnp enter pop mov (bad) dec add cwtl lcall addl fmuls pop cmpsb fisttpl inc adc push add (bad) aam repz cmpb inc les nop mov push mull xchg mov adc pusha ret pop sub mov andl test cld xchg fs (bad) xchg add (bad) xchg pusha pop fs ljmp add insl jns int3 lods into add push xchg xchg ds or faddl adc es enter jle stos pusha xchg xor xchg inc nop popf adc lods add and inc pop mov sub adc push mov daa and mov pop aam rcrb jmp sbb stc jl add jns add not lret dec xchg adcb test bound dec add mov repz dec jns add pop jne mov jmp (bad) sbb loop mov dec inc inc aam and push and add push mov mov sbbl iret and (bad) fs loopne cmpsb add sub push add stos mov enter rcll adcb cld add cmp or in test or add cwtl and mov out and ror add sahf fadd add popf movsl add pop mov and popa adc mov or adc xchg jo inc movsl sbb hlt cmp and adc adc lods mov mov xchg mov cmp fstpt inc adc inc inc dec fidivl push lcall push inc pop mov or push adc push sti clc js in or mov inc jno pusha sub mov or xchg lahf rcrb addr16 ja ja dec lea maxpd sub in sub fimul jmp adc test stos add jo sub sbb mov sahf (bad) add push cltd and adc mov sahf and lahf mov cmp (bad) shrb push (bad) in or je sahf push mov mov cld or sbb sbb repz rclb in push pop pop lods das mov daa mov stc push in mov push sahf mov and push pop (bad) (bad) scas add insb or add sbb pop mov mov not inc or cmc ss fildl test clc push fmull aad xor and jne jns aaa sarl in rcrb insb mov or out (bad) or push sbb add fisubl pop test incb divl stos pop popf popa jmp sahf mov fs cmp stc enter push add enter adc cmpsb add les cmp mov adc mov cmp sahf int3 cltd pushf add pop or push or sbb xor and into out mov mov nop aam pop sub lock dec sarl lods jnp dec pop cmp xchg dec test scas pop add sbb lods cld mov scas pushf daa push rolb xor push lock (bad) repz repnz inc jmp cld push mov outsl jno clc lahf mov lret sbb push shlb shl cwtl ss xchg lcall lahf inc roll cmp sbb add (bad) sbb fild loopne loope js push arpl addl or jge aam adc or push enter jmp adc sub test imul push in xorl and sub add adcl jl pushf jo pop mov das addps test rorb add icebp adcl add and loop or jl out hlt xchg sub fs inc repz mov pop lods mov and loope mov test mov sti add jmp xchg dec or push insb es xchg inc mov mov addr16 ljmp mov push (bad) sbb add pop mov mov add sub aaa inc lahf cmp dec int jp sub hlt or daa inc insl add pop cmc bound and subl push push hlt lcall inc ret push cli and enter out xchg sub jo faddl jmp cmpsl jbe loop andl pusha pushf inc push fs pop (bad) mov mov dec or jns or test ss js add pop mov jmp mov fstps mov sub mov faddl inc fisub and sbb mov movsb add aad add hlt add dec and jbe adc or or outsl jl pop xor dec or jl jle daa aam lahf lret ret sbbb cmc xorl xchg in pop rclb fist jo xchg sub xor jp pop sub or inc and pop or and ret push xor adc pop sbb or sti dec jo fildl push das xor es inc adc inc sub out cli pusha add das dec xlat mov pushf test mov out sbb mov out test xlat test xrelease ljmp test mov (bad) mov jne dec or ret scas add movsb imul xchg xchg stos sbb cld add push mov mov pop sbb jle (bad) mov dec cmp or pusha inc xor jp push arpl add pop push sbb cltd test iret pop out lret cld add pop inc dec int dec add cwtl je int3 cmp rolb in icebp push mov cmp mov mov mov cmp test dec inc loopne xchg nop in movsb hlt dec push mov add outsl adc in jb or das inc shll xlat mov mov lods jmp loopne jnp test mov cs mov sbbb cmc mov xor dec push mov xchg add jge fisubl xlat scas pusha les mov inc test xchg jl loope jb add lahf test rol (bad) repz cmp (bad) cld mov jns or movl and test es or mov pushf push mov sbbb (bad) pop mulb sbb mov (bad) mov leave fs cld mov cmp and or cmp fadds cld xchg push cltd and je mov int3 cld xchg (bad) clc (bad) or int rcr cs dec test (bad) add pusha pop aaa push lret sbb xor sbb mov xchg out and ss push jb xchg repnz and xchg cmp andb pop push mov add push test adc pusha adc xchg subb xchg pusha jmp mov out adc adc cmpsl cmp or dec sbb push je nop test and mov sub mov mov pushf je lock das cli mov and test mov xor rolb test (bad) (bad) in xchg mov add cmpsl mov cmpsl jge and sarl inc adc or sbb mov pop ss loopne pop inc jo dec mov and test xchg adc je lret roll nop mov adc enter (bad) or (bad) rolb mov push setns rorl enter icebp testb or or and aaa dec add and adc inc add data16 push aas scas cmp add inc lock (bad) pop jecxz add jbe movsb cmp loop mov imul jo rcrb pop mov dec or insb cld push jbe call out add pop mov mov and sbb fcompl rorl mov xor adcl mov arpl scas in add inc or lock add sub and xchg mov xor (bad) aad pop repnz push leave ja negb sahf cs dec scas mov adc mov or dec fnop add ror insb pop and add pop vcomiss popa sub mov lods loope mov dec xchg sbb (bad) (bad) ja xor sbb mov hlt nop push lahf push fnsave xor sbb and adc sbb je ret cmp rolb sbb inc incb sub adc inc or or insb add (bad) rorl leave xchg inc pop push push xchg mov ss mov and aaa add arpl jge dec enter mov add lods jp inc in and and enter icebp clc push ds movsb mov cld out sahf and add stos stc push in add mov mov mov pop divb dec in cltd cwtl out inc mov ljmp and in adc push mov cmp sbb (bad) inc lock (bad) nop xchg loopne sahf mov push mov or mov ja pop or mov sarl shlb sbb lods mov jle call and aas shl add xchg xchg push daa lret rcr sbb nop daa add mov push push pop fisttp andl mov in test xor lahf in or pop lods js mov fmull movsl add push neg sahf mov add lahf pop aas pop sbb insb lock add cmp loopne roll mov sbb out (bad) mov test dec mov fcmovu cltd add pop inc sbb add mov ret pop push rclb xchg mov cmp push mov xchg dec lock adc mov loopne sarb adc cld mov scas cltd pop aaa and mov sbb pop sbb push repz pop add test pop aas mov loopne pop mov adc xchg xor pusha xor (bad) adc cld push pop or cwtl push in ljmp add or mov jge jno lods sbb decl pop pop add sbbl sbbb pop mov mov je dec rcrl xlat add mov hlt xor xchg in cmp and lahf sbb mov pop pop add outsl nop sub push push sarl or lock or pop mov les inc (bad) cld jecxz dec push pop adc outsb dec ret out jbe or out test cli push pop rorb or xchg xchg push xchg fild lret loopne pop scas add insl sbb outsl adc sahf test out not sub aam dec push add or dec xchg cwtl adcb dec lcall adc dec test sbbl or dec scas mov in sub adc xchg or leave jnp or loop push mov lea dec shlb int cmp out daa push jo nop faddl cmc adc lret jb ljmp ss sub les mov enter fldl jne xor cld sub (bad) or bound mov jno sbb or mov and mov jo mov cmpsb shrb dec cmp mov (bad) jo dec jnp add push xchg pop sub pop mov mov dec adc lret xchg add mov xor add daa push test dec lea inc fisub xor bound add add push jmp adc push clc push push ljmp loope ja push (bad) or add jmp xchg mov push add adc xchg xchg dec loope mov (bad) mov lret pushf pop mov mov cmp add jge fdivr popl push enter pop jns mov repnz cmpb in push das inc mov or push data16 ret rol lock mov insb adc loope push or stos cmp insb outsb enter inc push and cmpsb push pushf test call xchg and mov sbb inc jp cmp andl or mov mov mov or dec or test mov dec jo lods sub sahf adc es mov and nop sbb mov add and cmp xchg fadds in fsubs push push ds rol insb mov pop push mov add xor cs std hlt mov rclb aam cmp adc or mov out pop pop hlt scas pop fstl and or sub popa mov mov mov jl add int lock push dec sti sub dec jo push pop aaa adc mov mov lahf mov out sub xchg add mov inc mov mov pop inc dec mov jge and or call sbb repz pop nop sbb stos add and pushf mov or inc jge sbb mulb add movsb cwtl popa jo xchg push call (bad) mov sub xchg pop (bad) add scas inc jns fsubp cmc add pop or sbb cwtl and and push add xchg dec movlps cmp pop sahf add push sbb popa cmpsl and (bad) or mov scas and sub nop call lods cmp mov test inc dec inc js lods enter pusha add cli adc iret sbb pusha outsb loopne xchg cli in mov jne jo or push xchg sbb popa sbb xor vaddsd shrb jmp orb push inc or lods xor pop cwtl adc push sub lock jb mov iret (bad) xchg inc cmc data16 popf push lds call and jg add add adc pushf js pop xchg mov mov and cmpsl dec xor mov adc sbb jge int push and mov je pop (bad) enter mov add add mov inc loopne mov int jmp cwtl mov jbe and clc and or and push adc fldt mov inc push mov or push push movsb cmpsl cmp fwait les inc int add sbb dec jecxz sub std cmp mov fstp cmc jbe stos call cmp imul cmc add sqrtps sahf xchg mov inc cmc push aad add fistp mov out sub ret jmp loopne dec or xchg or enter sub push and lock roll add inc pop and xor sbb mov mov insb cltd jnp aam lahf pop pop scas jecxz push cmp push addr16 fdivr inc mov pop add pop xchg and add movsb inc ret bound clc sub psubq mov add les sahf out iret mov pop inc xchg lock cmp or inc clc or inc pushf mov add or mov dec int dec in movsb cmp ror add andl lock xchg and mov enter push mov scas mov pop loopne jb adc mov cltd mov mov fwait jnp mov (bad) addb bound mov js mov jnp jl aas orl adc data16 pop pop scas mov inc dec fsts jo push or sbb inc dec (bad) je add mov (bad) ljmp test leave push sbb repz xor movsl pop sbb adc clc xchg add adc repnz enter incb sbb fdivrs adc out inc pop mov and mov lods mov inc adc sbb fiadd mov (bad) cltd scas fist or or pop and or enter loop (bad) pop nop adc das cmc pop fadds sbb pop xlat aas add add (bad) xchg fiadd lcall pop adc add clc sbb pop mov mov add mov mov mov lret xchg lahf mov push mov jo pop sbb inc mov adc mov fs push in (bad) sahf stos lods sbb aad and mov das mov xor bound lahf or mov dec mov (bad) rorl enter push aam sbb jno subb xchg jb dec or mov inc push push call adc mov std sub es rcrb mov add mov dec mov mov leave fnstcw loopne push add xlat cmp inc dec xchg lret pop (bad) repnz pop inc and push movsl or hlt rclb daa and or adc mov sbb jo xchg sub mov inc mov in lods mov iret add pop mov mov or daa mov jmp xorl int pusha jnp lock fsubs fdivr stos adcl add push or test cmp loopne sbb lcall dec xor mov or pushf xor dec ffreep sbb pop (bad) fidiv inc mov inc lods mov mov rorl and or inc aam xor sbb add mov pop pushf lods call push lods sub and sbb sti cs adc shrl jp into ss in mov push test push (bad) sub les into nop jno and mov call sbb movsb inc incb adc (bad) mov nop mov jne dec mov jle mov daa jg mov pop push orl andb or add pusha lret sbbl and add data16 dec ljmp pop shr adc in icebp add sub and or mov add xchg (bad) lods push mov dec push testb inc jns in pushf mov inc pop sbb dec shr jecxz adc fs in rolb lret cmp adc sbb ds (bad) jge xlat xor cld and push adc dec xchg rorb dec hlt fsubrl adc stc int3 (bad) (bad) or inc ds push and xchg sub bound add sub sahf daa xor add test outsl cltd sub push fcoms (bad) or das mov add jbe mov and lods add imul lea mov add jl stos pop inc sub xchg inc add loopne shrl mov mov pop jg pop (bad) repnz rcl inc lret adc mov ret mov and dec movsb enter jl or inc add push sub xor cmp sbb mulb (bad) aam push adc dec pop add psubb scas add mov and push lea (bad) xor adc outsb inc jb pusha cmp push pop movsl pop mov xchg outsb rcrl (bad) aam mov test mov fbld rcll mov nop into orb xchg test cmpl pop mov sbb and jg adc xor imul addb mov repz mov cmp pushf scas (bad) int3 aas inc fiadd les mov push sbb lods xor cmp mov nop aas inc testb and adc lods pop cvttps2pi inc sbb mov push jbe cmp mov fs cmp mov mov and adcl sub daa mov push sahf cmc fcompl dec mov jno sbbb adc and xchg mov aam inc or movsl (bad) (bad) fistp and mov fnstcw out das sahf xor mov or hlt fwait xor and add test dec dec ret pop lahf popf sbb rol pusha push xor push mul mov repnz jns (bad) or cmpl dec push fldenv xchg (bad) fwait rclb lret test lahf xchg fs inc ss sbb aad cltd sahf pop mov dec das sbb clc into add movsb mov mov lods add add jne aam insb pop ja nop mov lock mov std shll push add outsl repnz push push add push ja stc sahf jb add popf cld cmpl pop cmpsb adc add mov ret test flds pusha xor fisttp xor xchg pop imul orb dec mov mov lret mov mov mov adc std les enter sbb test popf aaa arpl nop out push xor sub fadd pop inc scas jno aaa arpl and add adc mov xor mov (bad) mov mov pop roll add mov mov notb and xor lret bound test jns or sub cmpb dec movsb add mov into test add call and mov (bad) pop add pop mov sbb jns rolb iret and xorb mov jl and mov add call push dec mov and and add and add fwait bound xor and pop pop jns pop sbb jge in jbe xor xchg sahf ud1 adcb push inc sub cltd jb ss mov test and pop cltd lock push pop push pop fwait add je rol mov inc pop sbb test out mov fs xor xchg jge and pop in mov or and push loopne inc les jge stos enter jnp and pop mov jno cwtl ds nop fdivs inc sub xchg sbb cmp popf xchg jge or adcl fsubrs xchg adc mov pusha xlat dec and enter in lret mov xchg jmp out ret inc fisttpll add sbb sahf xor push or add fimull add jmp mov xor cmp pop popf mov cld pop cmc jne lds mov leave xor outsb cmc jl add mov int3 lcall neg mov add outsl mov dec jo mov leave mov cltd mov pusha cs call sub and inc popa xchg adc and and int loopne adc pusha sbb popa cmp sub sbb inc popf xchg adc out inc fdiv aaa push mov xchg mov (bad) repnz hlt adc clc sub lock pop or test mov sbb lret inc sub mov xchg lcall sbb add push adc jle pop cmpsb iret add and add jp add fisubl xchg or movsl into push inc out movsb add test mov add rorl loope xor lea movsb dec mov out pusha pop xorb fwait cld enter pop add and add sahf lock push mov in xchg sub jo gs in or pushf xchg or in ja pusha test xchg lret fsub nop sub popf fdiv mov sub out aas or loopne or aad inc lock mov inc movsl mov enter aam or cmp scas les push lock loopne xchg sbb pop or sarb pop loope inc movsb pushf shlb enter cli mov push pop mov mov mov dec mov xchg loope or sbb push add mov out movsb lock imul enter inc xchg test bound clc jnp push ds scas and adc fdivrs adc mov icebp pop and push iret xchg add test mov rcrb clc loope inc loope outsl fldcw popa sub pusha rorb add rolb xor (bad) or push in cld stos adc cld sbb fnstsw pop sub inc ret inc add mov fnstenv stos xlat and sbb out jo cmp mov sbb and xchg adc mov pop call add lods mov cwtl lods sahf mov orb adc mov loopne xor sub jne cmpsb and adc (bad) cltd lret add jo mov clc sbb jle negb rclb lret and dec enter rolb pushf pop adc add dec push shlb sub clc push fmul xor or xor popf bt out push call mov mov aam add sub or lds xor dec fimul and pop or imul pusha ja mov and cld mov clc lock mov cmpb jbe dec mov loope jmp and leave lret jbe cmpsb adc dec test sub add mov jl test add cmp in cmp cmp mov mov xchg add (bad) pusha ffreep andb cld xchg insb lds adc in (bad) cli or or push scas movsl lock pop pop add into repz ja cmpsl pushf mov push mov mov adc mov add rcll push popf adc out (bad) sbb imul lcall out jns mov mov rol or or xchg inc sahf inc and cmpxchg dec inc push loopne movsb pop pusha in add push out mov push (bad) push pop je jg and loopne and jg mov lret inc mov (bad) andps les or repz leave shlb in repnz xchg pop hlt and push mov es inc cmp cmp xchg ret loopne push mov testl dec inc xchg xor scas dec pop faddl sbb out jae mov jns mov movsb add (bad) inc sbb test sahf mov adcb test mov jle pop mov test aaa (bad) jl inc cmp sbb mov pop push out cld stc add pusha (bad) sub sbb lods pop ljmp inc ja sbb mov push add cmp movsb xchg adc mov jb xor add (bad) jo ds sahf pop dec outsb sub mov ret mov pop or adc add jae int3 roll sbb xor (bad) sahf add loopne (bad) es cmp repz push loopne cld add sbb ret mov and bound add decl xor fisub lock and sti in popf scas lea add inc into stos xchg cld addl andl clc mov and hlt add shlb insb mov sbb mov test call inc mov or popf xor popa loopne push popl inc push push popa push pop enter cmc or cwtl adcb sbb inc jo mov mov int3 dec jmp sub lods add orb and xchg out add pusha mov ljmp outsl loope inc adcb sbb inc push in orl push mov adc pop lret hlt jns xor xchg fisttpll inc gs dec or jmp push xor add stos jns pop rclb add in xchg hlt test add adc and adcb orl add pop sbb stc push and sbb dec pop lahf add jns sbb inc sahf ss mov add clc push push mov loop jmp loope cmp sti add int3 push clc cli and scas pop jp imul andl pop sub sbbb mov dec out popa xchg insb iret add sahf call jmp scas push dec movsl cmp scas pop addr16 or xorb stos sarb ja jne movsb sbb jnp ret mov adc bound add shlb sub and or or cltd push cmp xor dec xchg xor sbb test xchg sub popf mov out (bad) and mov rclb jns adc push mov add arpl mov push movsb push sbb lds movsl repz out (bad) std loopne mov movsb aam rcrb xor add fs xor mov xchg pop scas orb fs enter inc add push (bad) cwtl jnp sub enter lret shl subl adc add pop (bad) cmc cli sbb dec (bad) repz adc imul popf lea test inc xor cwtl and adc mov mov pushf jmp andb mov rcrl fsubr rolb xchg stos pusha out call and rclb pushf mov (bad) lods xor mov rol dec out pop add lods mov and and xchg mov cmpsb mov adc out sti movsb loopne jo,pt add adc jnp pushf sub sahf into lods cmpl pop xchg sbb or mov add push pop add jp mov jmp mov adc xchg jnp movsb orb addl sbb sti fild adc dec dec fs ds mov mov or mov mov insb movb and pop jmp mov cmp cltd xchg loope push sbb adc popf ja fs push sub push (bad) mov sbb add dec sbb or xchg insl fistl add fdivs mov aam nop les add lods add int3 movsb add or mov inc jl scas repz (bad) in sbb xorb mov and or and mov mov pop test mov data16 xor lret push mov or cmpsl mov ret nop test add daa orb xor xorb cmp mov cwtl jbe call push hlt add and dec cmpsl push js nop in pusha lods mov in adc xchg mov dec dec xchg in inc aam sbb add in test scas pusha les pop mov shl (bad) sub jbe sub mov call add icebp adc cmpsb cmp je fistp mov pop mov inc sub xor mov addb cwtl addr16 sbb rcr cmp sub movsl mov in dec mov xchg leave sbb or std stos test je jg mov fdivrs inc mov and mov inc incl call xor aaa pop inc jl lods sub mov inc mov stc or mov fiadd fs pop fldlg2 jno push imul add cwtl add mov jp xchg cmp and add rorb mov add add aam adc xchg bound subb cmp psraw (bad) mov sbbl loopne mov (bad) pop je jmp js add aas add xchg insb add jbe dec aad add add sbb lcall decl push inc cmc mov dec sahf push icebp jmp cmp cli adc cwtl xrelease mov xor bound clc mov cmpsl std add mov pop cltd push cli inc pop rcll cmp hlt add xchg outsb and sbb mov (bad) aas fsubl dec sbb mov xor pop fidivrl cli add xor sbb xor add mov jg sti and xchg or into xchg xchg add roll add sbb push inc jecxz add sbb sub sub cmpsl sbb and add or push stos push mov dec and inc fcmovnb pop sarb daa adc loopne stos (bad) pop add inc int xor push out add rolb repz pusha dec sbb mov adc or push push sub or nopl push and es or push mov add jmp pop stc ret or sahf mov pop jmp mov sub mov testb add pop sbb and mov mov dec cmpb and cs mov lock (bad) loopne jns pop push jmp inc loope xchg jg fnop icebp fcmovb sub in or ss sub xor cmp imul pop pop pop shr scas addl in mov and lret jle ret xchg addr16 (bad) or mov ds movsl xor jmp mov (bad) clc (bad) arpl movsb sub mov mov xorl dec pusha add add pop addr16 jle dec add sub sub jmp xor aaa pop mov mov add sub xchg aad mov sbb cmpl jmp popa (bad) in cmp andb sub mov es jmp xchg mov sbb jmp fist xchg adc (bad) sti ja sub out (bad) pop and add mov test mov mov test mov push or cmp sub mov xor outsl sahf or sub dec xlat lods xchg and sub adc movsb nop xchg pop mov xchg jmp pop cmp pop xchg add sub test and or faddp push mov (bad) ljmp sbb ljmp ja cmp dec divl cmp outsb dec sbb sub sbb sub mov push push test add pop hlt jecxz pop push mov cmp cli loop lret outsl fwait xchg ljmp inc psrlq jnp sub jecxz and jp or jp in pop mov dec in ret xchg xchg add mov jg xor mov mov or fsubl int push mov sbb sbb jns insl pop ss mull add dec or add add fadd push repz scas ds pop sub (bad) mov xor mov add mov out push fisttp ja rdmsr repz mov and push (bad) sbb fnstenv dec loopne mov pop xor imul xor nop insb xlat fisttpl push adc adc daa inc xchg push push sbb mov push push pop stc int pusha push mov xchg cmc mov add and or xor and xor gs cli pop xor repnz idivl adc jle jmp xor or mov mov aam (bad) test or jnp and add sbb sub lret adc test xchg jmp (bad) push add sub loope jbe mov es or loop,pn (bad) push ds pusha push cmpsb movsb xchg inc popa jmp in mov cli test add ret ret add sbbl pop (bad) or dec fstp aad push push add int3 mov mov push adc push add aaa jnp add mov xor pop jmp (bad) ja in sub jnp movsb pushf lret inc xor movsb push (bad) xor mov sbb cmp mov lds into jmp xchg pop dec sub jge add push outsl das adc jnp cmp or adc dec addl (bad) scas xchg fnop (bad) mull lods dec or push xor mov push ljmp pop subb out sbb shlb and pop orl inc push (bad) inc adc jmp add jp jnp stos mov inc sub pop sub xchg icebp push dec cmp and (bad) nop ret push add aas xor push or sbbb fistl cmp ja es push push mov icebp inc cld mull xchg jne leave roll add lea jmp mov push outsl add inc pop adc mov pop add test add jno es sbbl add jl ljmp fcmovne daa xor cmp orl jg aas xor sub fnstsw subb sti pushf jb push rcr mov xor pop xor add inc inc sbb mov sarb idivl jmp ret imul or xchg lods jg insl sub add rorl lods push in cmp fs cs out mov lcall mov sub or out ljmp lods bound sub xor pop ljmp jmp mov add mov fnstenv fistpll push xchg sub or data16 xchg fist pop in sbb or scas pop add into fisttp pop push push push add add out call add lock pop pop pop push jle lcall ficomp fcoml inc movsl mov adc pop pop data16 fadds push out xor mov dec pop test neg shr add aad sti pop sahf push sbb (bad) (bad) jbe fisttpl inc pusha outsb ret or aas push add test jmp lds sbb xor or test xchg hlt push mov mov sub enter pop in sti mov fldln2 or or call or lds lods inc dec and shrl or and popa push sub loope sub mov fs (bad) sbb push mov adc js es adc fiadd ja fmuls or mov shll sub pop mov push xor out test or xchg mov sbb pop ror jmp push adc push lret int cwtl testl (bad) xchg push cwtl push push out push xor xchg rcrl sub lcall mov mov jmp aaa out int outsb stos pop inc nop jae cmp cwtl arpl adc sub add pop xchg aaa not or mov cmpsl xlat sbb jmp movb xor jmp fs xor adc xchg sub dec push pop movl adc int addb pop push bound jmp push inc xchg pop jne loope jl pop fadds in pop lret push ljmp out xor inc fisub push inc mov fs call addr16 inc movl sub pop xchg sarl aaa (bad) cwtl or pop adc mov pop inc inc dec xor xchg add data16 inc xchg dec xchg test mov adc push rcll fisttpll pop mov sub scas ljmp sbb dec fsubs mov outsb xor mov mov xchg cmp cli out call (bad) divl add cmp xor push dec adc stc cmp push into add sub mov xor ret dec add inc add pop (bad) adc fcoms push in (bad) pop add sub jb or enter loope nop test dec pop nop or cmpsb push fwait rclb shrb loope dec cmp mov pop mov or or jle shlb or orl inc or push push push lcall xor inc lea arpl sub push cmp fs loope out adc test mov sub sub and jge jmp xchg test jge and ja xor shl lds out fsubl pushl out bound pop xor in jp iret push pop xor and icebp jmp push int push xchg sub xchg mov inc dec out mov data16 pop ljmp add js push mov dec or inc addb cli pop and or xchg add jge pop jnp xchg pop test sbb push cld leave mov cmp cli stos dec or add push push dec pop push imul adc jle sbb or lahf jge lcall andb mov dec cmp jmp call les adc shlb ficompl xor add cli xchg mov ljmp gs and and mov add sbb daa shl (bad) jnp faddl popa pushf jge mov into push mov inc inc (bad) or add das jmp cmp fidivrl mov call add jl orb nop arpl outsl mov push add std xor shl or mov mov dec scas setge jne or sarb mov scas pop int lahf roll adc xchg cltd adc fadds jp fidiv aas adc xchg sbb insb inc iret push movsb fstpt add cmp cmpsl lcall push mov push (bad) or fcom sub dec call and push lcall test xlat pop int jno or add fmuls cld cmpl lds push scas pop cmp jae les pop and push or mov iret xchg or xchg in neg add or aad xor pop pop push jb fldcw popf repnz cmp mov xor icebp sbb ficomp sub icebp jp inc xchg dec mov ret push inc pop pop mov fwait mov mov pop cmp out jae lret xchg sbb cwtl mov mov (bad) mov je xor je mov push stc add (bad) or jl inc adc sbb mov xchg jmp add rolb xor cmp imul sbb xor cwtl out push mov repz add pop pop jg test jmp daa leave lods mov and (bad) mov in add stos (bad) cmp loopne mov call shrb pop imul scas mov dec in sub or out and aas mov xor sub aas jno and inc sub and mov pop xchg sub sub test daa adc inc or fcoml orl lea push popa xor jbe repnz jne adc outsb nop or and xchg or cmp push loop jp jno mov ret sbb jge dec xor push jmp or int out mov jno dec push sub xchg shll xor and out mov or jmp (bad) push push pop jns movsl ret adc fadds mov sub icebp pop sub cli je add les fsts outsl bswap in and mov pop push pop bound push rcrb iret xchg sbb xor daa xor jg dec and imul fs (bad) adc xchg cmpsb test pop pop cmp outsb sbb push sete inc notl jmp jo jecxz idivl fistpll or sub pop push sbb ret bound adc fcoms sahf test ja sub stc js jl daa mov pop mov pop pop and dec mov jnp insb mov ja jle and mov adc pop pop cmp sub lock mov in or fsubrs push add push outsb inc jmp sub fwait xchg cmc cmp (bad) (bad) insb in rorb sub scas es fstpl ret fldpi cmc jns and fisttp inc jmp nop into mov push pop push (bad) lret jne in mov push shl not mov and push jo or adc jl pop mov jno shr fildll mov add jg or jge sbb pusha xor xor push or push add pop push xor jmp mov mov lret loope xchg xchg sub mov add pop imul jo test pop iret xor dec clc jo mov push sub jg repz jp mov les mov add or push push shrl and pop pop insl dec push jmp jecxz push jo shr repz and dec jge out cmp pushf cmpsl xchg in cmp dec negl jbe adc bound pop or adc jb mov int3 (bad) ja mov imul jle (bad) inc jge,pt in mov cmp leave adc mov cmp mov js es jmp cmpl scas stc pop add pop dec icebp movsbl add pop add mov adc or into inc scas xchg das add pop mov and insb inc cmp ret add cmp (bad) sub jge hlt ja lds inc shl (bad) pusha addr16 dec lock lock lret (bad) hlt push mov sbb mov (bad) adc pop jmp mov pop stos lret cmc add imul hlt sub aas mov sub (bad) enter es (bad) push cwtl xlat push cwtl pop or popa fldenv sub roll enter dec aam call sub push push test aaa xorl movsl push or shrb jmp sbb repnz adc push sbb sub sub lcall dec mov gs imul test xor push clc fcmovb and sub mov lcall sbb das push inc test xchg mov popa dec scas or cmp jmp shlb mov rcr push push push push (bad) not addl cmp data16 and loope sub lds jmp sub mov jnp jl or lret xchg inc (bad) jmp ret js add xor mov pop shr dec ljmp daa popa sub jae or shl pop push aaa adc push mov and xor inc (bad) xor jle in adc push pop push push or popa sti nop pop das push mov es jle outsb pop jae das add adc mov mov or inc imulb fcmovu mov pop sub mov cli inc or and iret push dec dec inc mov or ljmp jmp addr16 jle lret xchg pop rep jl sbb sarl add movsb pop xchg sbb (bad) cmp jge pop pop repnz out enter popl xor (bad) fs jo push jbe push or sub stos jns inc jmp addr16 sbb pop clc out out arpl jmp ret rorl pusha loopne pop shr cld mov pop stos or cmp jnp jmp sti daa lret mov icebp or inc ficom jbe add sub (bad) adc inc insl popf mov aaa sub xor or jge scas scas cmp in dec push mov cmpsb xchg mov and out popa xchg mov rol mov xchg xor inc bound push in jo mov nop mov js jg mov jecxz jne,pn add pop and out setbe or mov jb push addr16 mov push stc jne out jmp push push mov inc out pop jmp add mov sub repnz sub sbb or pop add repnz xchg mov mov (bad) in add stos mov cmp lret repz or cmp xor leave cmp push sbb insb ret insb add add aas add pusha add xchg push popf test stos or pop sbb mov mov fisubrl xor pusha and mov dec or jmp shl incl cld push popa subb dec pop dec cmp inc fidiv xor lcall sbb ret pusha push xchg pop lods jb push cmp setns notl lods cmp pop (bad) (bad) mov sub add jecxz adc mov sub pushf and rcrb pop nop pop push mov jg mov aad (bad) in or pop push sub push add sub add cmp jl orl adc ficompl pop fadd orl add loope push dec xchg push int inc gs sbb scas stos nop stos mov cmp inc push xchg loope inc and dec add jge fstpl or xchg loop sub ret cmp mov cwtl add xchg cld shrb mov or cmp mov outsl mov inc mov jns (bad) ljmp sub in xchg or sbb or ds mov (bad) mov movsb js push movsl and xor in cltd xchg cmp jecxz xor dec push ficomp jae xor add dec aas sahf adc and xlat les in mov icebp cmpb mov xchg loop cmova mov jl in sbb and dec sub int3 cmc inc jnp add inc adc pusha inc sbb add repnz xchg imul push xchg pop cwtl stc fbstp push or sub sbb rolb (bad) rolb pushf test mov add jmp (bad) das add push shll ljmp xorl pop (bad) and mov notb cld xlat dec lret into add xor cmpsb loopne cltd test lock sub adc adc cld iret dec jmp in (bad) ficoml jne fildl mov add push (bad) bound daa repz adc sbb or test enter xchg add push and push mov cmpl add ret popa data16 adc jp inc mov push or mov cmovs pop subl sbb in fimull jmp add push inc rcrb adc xchg push in nop cmp or push push aaa movsb sbb loop (bad) (bad) mov and adc xor xor je lock xor cmp and dec aad or cmp bound mov int3 ja inc sub fbld adc push lock or rcr test adc and or fs sub jecxz inc xchg adc adc xor pop jbe loope sub repnz imul adc push cmpsb push or sbb xor and inc gs inc lea or jle mov test add pop mov push insl sub inc andb adc adc jo sub sbb mov or pop je jp fs pop js mov adc (bad) push adc leave adc xor daa sub pop test adc xlat je inc sbb pop mov sbb push sub inc adc mov or mov add pop sub sbb gs adc and cli aam xchg mov mov and xor mov cli mov sub xlat add (bad) or jo mov call or adc xchg ss push and mov xchg (bad) cltd or add and cmp stos mov and (bad) hlt lret nop loop and sar xchg sbb dec mov jecxz adc les mov xor adc sub mov mov xchg out dec pop add add movsl iret push pop push ret xor (bad) push xchg roll jle out sub xchg (bad) jmp idivl aaa out fs adc and out (bad) mov or or iret add push mov lock mov inc pop addr16 cltd imull in and jmp sub addr16 sub or out ret sub pushf mov and add mov (bad) into out sub int3 mov lret je ljmp out fcmovb inc xchg dec ret outsl ror or sbb pop and xor test dec add lret dec or cltd adc into addb xor sbb xor mov icebp inc cs inc or adc mov adc enter mulb mov data16 setl xor fs std pop ret je mov mov jmp in inc cmp and xchg ljmp or xor jo xor push outsb aas mov push and imul (bad) loopne mov adc add xor out mov push and add out (bad) into movsb in and std push jl xchg leave mov and xlat dec js mov test jp jg and sbb subb mov mov jmp xor mov and stos cmp es ret or xor mov jmp movsl xchg lcall push mov and mov and sub repz xor lcall into mov inc xor fadds and mov cmpsl dec adc pop daa sbb mov dec push (bad) data16 outsb iret je jg or in xchg data16 (bad) xor sub pushf cs mov mov movsl adc call and fcompl dec adc push xchg add loope pop xor sub xor mov pushl mov leave mov mov out sub in call dec dec js jmp jmp add dec decl ret pop push iret leave and push or or add push test sbb adc xchg or stos pop xchg add orl enter pop repz sub rorl iret add push sub inc repz push xchg mov add popa mov cmp jmp ret sub xor fmuls cmp pop divb loopne daa adc sbb int3 sub and or pop add rorb jo adc add pop push ds lret bound ficompl add jmp xchg test jmp imul movb (bad) mov pop add inc stc add mov repnz adc adc xchg and jmp and or cmp mov mov jmp sbb or movsb je add or mov iret scas cs dec nop insl mov je callw loope or insl and and adcb xor ss in xor mov xchg jo mov wbinvd stc and leave out cltd popf iret aaa fwait sub push mov xchg cmp xlat xor nop or aad sub into out cmp sbb xor and imull mulb shlb jbe push (bad) sbb adc lahf mov les and mov inc lret sbb rorl and sub (bad) push xchg or cmp insb mov scas sub or push sub push inc mov inc and xchg out dec into mov mov and adc cli arpl add mov sahf xor loop add ficompl adc pop test in adc sub neg xchg cmp out iret adc jmp xchg xor int3 (bad) jo xchg iret int3 scas ljmp jle out dec mov and dec jb mov or lret add xor orb sub and bound mov cmp hlt push pop movsl xchg sbb sub std sub push call add or mov mov cmp sbb stos add cmp add or imul test lods cltd aam dec pushf aad jl xchg add and push aaa hlt push xchg loop dec and lret add inc xlat jp cltd dec arpl sub jecxz sarl inc xor add (bad) or or loope andb (bad) sub and cwtl cmp xorl mov dec bound push mov lds push or stc xor adc xchg xchg loope mov and lret sar (bad) and out les loopne mov ficom cmpsl aad inc adc and push sub mov sub popf sub fdivrs (bad) imul mov sub jmp xchg sbb mov or inc or add (bad) pop shrl or test or enter (bad) mov (bad) add inc rcrl xlat es in enter add (bad) dec fist or xor out cmpsl sti push fsubl add sub test enter out loope mov and push mov add pop cmp jge enter push push rorb cmp xchg (bad) sub lret stc lea popf inc nop and mov and (bad) stc cmp mov add mov inc add icebp mov je add xchg test es mov cmp push pushf imul and (bad) cmp (bad) insb pop cwtl fwait dec cmp loop std mov pop dec notl lods cwtl movsb lahf enter mov leave out cwtl dec pop and ret les (bad) push mov (bad) and enter pop mov xor jmp stc mov jno jg pop mov mov testl in and or push or dec push and lea fstl and ja ret pop das cmp lcall ja idiv xchg adc shll dec je popa xchg and and aaa cwtl inc nop (bad) out fs push mov jp pushl ljmp lcall pop jo loop cmp cltd in and pop (bad) mov adcl ss testb inc das call out or rcrl rorl inc pushf and mov sahf pop mov fs (bad) or add outsl and sub cltd adc mov xchg sbb or mov mov inc pop (bad) pushf out (bad) lcall movl mov (bad) mov push add loopne repz add dec mov inc enter pop fs cmp add ljmp add push push add pushl inc xor test inc je cmp cmp outsb dec adc mov imul rcl sub jne pop adc (bad) jmp lds xchg mov sub ret in or push lods inc add bound fidivl out push mov ljmp stc cmp pop and out in lea js mov fisttpll sbb adc mov xor lds ds jbe lret dec jmp push rcrb xor sub sub sub jno lods cwtl ljmp dec sub or mov sbb outsl pusha push cmp mov push or push clc nop adc enter fistpll sbb (bad) into jae dec imul jo gs repnz inc orb fild pop add push rcrb mov mov sbb (bad) cmpsb sbb icebp loope add mov and (bad) popa mov fild sbb jmp mov (bad) cmp pop adc insb dec jne push push or pop sub sub inc fdiv mov adc xor mov cmp (bad) (bad) pop lock sbb lret pop ret adc xchg adc or (bad) sub in mov mov stos xchg shl sub push mov xor pusha dec sub and push add nop or or inc or out pushl loope jns xchg push pop or ljmp cwtl or or inc xor mov sub ljmp (bad) adc out dec bound (bad) adc push adc jae sahf enter popa push push mov jne or jmp pop ds out mov xchg xlat shll cmp ss add mov dec and adc mov adc jmp (bad) and (bad) cs pop out add adc xchg or push add jl mov es and daa sbb cli rcl jo lahf sbb pushf cmp sub add je outsb shr mov adc gs inc lods push cmp stc inc das movsb xor push sub mov mov add mov ljmp xor ss inc stos aaa and or and mov cltd bound or outsb mov push shll ss inc call adc psrld sub (bad) movsb pop roll ret push ds test and sbb pushf into shl and xchg mov fwait outsl gs cltd subl mov xor adc clc pop and test ds (bad) mov xor adcl push mov popf popf sbb xlat call cltd in sbb push inc imul xchg or and and test sub adc (bad) insb (bad) ficom lret cmpsb jecxz pop and xchg rep pop dec sti push jl pop pop xchg mov dec into mov push bound mov push call leave dec add or repnz mov mov (bad) and xchg andb fild pop xor rcrb and sub dec fimull cmpsb lret mov loopne rorl popf imul mov ret mov xchg ret je insb adc and lret jl shrl jmp repnz nop (bad) dec aaa jmp lock mov xlat aad inc mov and les divl add mov iret adc mov pop inc xchg test movsb aam clc sahf mov xchg adc repnz jg je mulb and jns lcall inc or (bad) sub jns xchg repz dec push mov push mov mov addr16 repnz lret mov pop sub pop xor iret mov xchg cmp insl and add xchg lret int add mov pop mov add inc pop sub inc je (bad) adc mov adc movsb xchg js dec enter add or or pop push sub mov cmp fbld mov mov add sub add call loop sti inc test mov vmovsldup and xlat xchg mov jge in fisubrl ret and jecxz xor (bad) sbbl (bad) mov dec inc sbb cmp sarb xor iret int and ss mov rcll jg dec ljmp push ret jmp sub adc lds repz mov cmp sbb mov ffreep rcrl cmp adc (bad) idiv pop test pop or push out imul mov jle mov mov loop and repnz sub sub adc loop sub (bad) mov fwait sub mov add push divb test cld xchg lret inc cs dec out add lods imull jmp dec lret notb sbb mov out nop cmc test das out add add adc sbb repz pop dec mov and xchg mov cmp adc aam roll mov cmp mov mov mov fstl add cmp lret adc pop add adc add pop mov in add mov jmp fisubr mull mov (bad) or stos gs lods xchg pop cmp sub xchg lock mov scas push mov lds mov das or int3 pop pop mov sub cmpsl xchg leave repnz dec dec dec cwtl inc add dec les (bad) loop roll sbb add fidivrl popa bound cmp push lods or test cmp frstor inc shl add pop and fisub shll cmp cmp ljmp sub and movsb or out mov imul js xchg or lds push add pushl inc xor lods dec repnz push mov push bound sub mov sbb les out pop rep pop dec in or push mov fildll ret movsl jo mov jo add push xor rcpps loop punpckhdq bound xor sub lret xchg mov pop push cmp mov push and jmp cwtl mov xchg mov xchg (bad) scas popa mov pmulhuw inc mov xchg aas push push jo pop shr pop sbb xor (bad) push popa cmp xor stos je and lcall mov mov insb pop and sbb and mov pop push add fcmovnbe ret add inc xor test cli ljmp mov ret adc ljmp je pop jno cmpsl sbb sub cmp ret pop and icebp out repz (bad) pavgw mov mov mov mov and xlat insl arpl push jnp mov mov ret inc repnz xor ds sbb jb jge (bad) and pop xchg mov fmull and movsl mov repnz aas icebp in sbb or cmp add hlt sbb sub xchg int adc pop subl fs pop adc divl (bad) repnz xchg aam adc pop into test fnop rcrl jne mov mov add push push push push push xchg insb xchg mov dec test cld call scas sub sub aad xor or (bad) out in cli pop sbb test jns mov testl sub es es pop and sub mov cmp es cmp add xor in or jo int3 lahf xor sbb mov shr (bad) pop push add jo js mov (bad) add fbld xlat sub clc lret xchg cmp push les cmp mov xor jbe add pop pop pop pop ret lcall add sub and (bad) sbb sub test sub rorb and push xchg sbb ret jg les mov pop and push adc push repnz push (bad) xor push add inc repnz lret inc xor push mov std sti (bad) rcrl sarb out or add test mov mov cmp and hlt iret leave xchg jb inc orl cmp int3 and aas sub popf xchg or mov negb dec out lret cmpsb pop xchg jecxz pop scas ss xchg sbb pushf inc push mov aam in outsb xor mov out mov dec and push push aas das mov or cmp pop inc add cli pop pop aaa das lret shrb pop or mov das fistl inc mov push sub pushf mov mov mull lock jmp push sbb pop or cli add cmp sub outsb ficom repnz loopne and push sub xchg mov and stos xor or and fisub and lock (bad) mov adc xchg xchg add mov roll xchg fcmovnbe lock inc outsl dec fildll jmp out gs adc cld xchg and or add and inc movb pop packssdw mov into cmp ret sub pop shl add push mov dec mov xor rcrl les ljmp icebp imul xor add out mov sbb mov pop adc daa fisttpl cmp popf ret idivl mov in popa pop pop xchg addr16 fs xchg shrb mov (bad) in sub dec mov movsl push dec pop add addr16 (bad) lret inc jb mov ret mov cmp pop jmp jbe adc sub pop dec hlt repz or bound xchg mov shr or sbb mov dec dec (bad) fmuls and (bad) mov mov mov sbb and xchg push add int3 stos call jo dec or dec fldenv pop or push fsubs rorb sar test xchg cmp xor sahf jne icebp loop adc into mov sti repz add add into lock rclb dec fsub cmc adc push xchg mov jmp out (bad) mov xlat push rcll add out add (bad) dec jle xchg and xor xchg and pop movsb pop fwait mov push or or mov clc mov sbb shll cmp loope rorl imul jmp xor je mov sub adc lret outsb icebp sar call inc sub test cmpsl xor cmp xchg and and xor xor jle add and inc sub and jno cs insb dec push sub and nop add pop repz loope xchg adc mov push lock mov rcr adc fstl ret xchg data16 bound int xor dec div adc sbb add or repnz (bad) xor es ror inc xor pop jg dec call loope or jbe adc mov lcall sub call jge sar xchg adc mov imul int3 in pop xchg fs cld jne and pop mov shll xor out dec divl adc popf inc mov fcmovnu mov popa dec iret sbb sub ss pop mov and lea inc imulb cmp xchg sbb lcall cmpsb or stos leave pop sub cmp fs insl outsb aad or dec dec jecxz dec repz or addl push inc je ret lret add inc add add push (bad) jae jmp test jb mov jmp jmp insb pop repnz adc aad outsl and and movsl out xor cmpsl leave jmp fsubp comiss nop fwait out or mov lahf sbb int3 cmpsl jns xchg fisub and mov dec pop dec add sbb fsubs xor fmuls mov inc cmp js sti les pushf jmp mov jno inc mov aas mov dec js xchg or imul das add mov pushl jmp cmp jb dec icebp aaa rorb xchg add clc jmp dec cld cmp out mov andb (bad) cmpsl adc ret pop add pop add gs jmp or xor mov mov insl xchg icebp fnstcw movsl fld int3 push cmc dec jns mov adc rcrb jmp nop jns cmp ret lods pop imul pop xchg add lds xchg fsubrp test jmp insb or xchg pop adc ror and fisubr add nop fiaddl cmp ret sub lods into dec lock fisubrl mov or repnz fldl dec icebp push sti pop add dec xor xor add loop test or mov xor das or add and loopne arpl pop mov clc inc mov jle mov sub test pop int3 push pop or adc fucomip jbe bound (bad) out and adc lret mov adc mov jb into mov push sub xchg xor insb mov pop pop aad mov rorl adc fs mov add mov pop je mov sub lret adc loop aad jp sub mov aam iret call ret xor mov cmp push pusha daa pop mov push aam loopne sbb ljmp or idiv (bad) or push pop cmp sub mov sub inc push xchg fld scas ljmp jbe scas add repnz int shrl leave inc adc gs sub popf test add mov and pop enter add repz cmpsl cmp pop lret sbb pop sbb or (bad) xor inc mov pusha mov sbb mov aaa cld shl push mull mov out and xchg pop js mov dec jle sub iret dec add lds mov fadds out (bad) adc or pop je jno sub decl sub cld mov jle fist pop dec cmpsl (bad) xor add sub out push loop sub subl lahf add fmull clc mov mov or add shll repnz mov mov clc (bad) dec test idivl scas imul cmp adc (bad) jo or xor push test xor out mov sub mov cmp sbb loop sar mov and mov lock ja pop jmp sbb loop (bad) xor aaa div popf (bad) xor sub sub pop cli pop inc and xchg dec push std mov popa out jo sub mov dec push and ret mov sub mov es mov and out mov cmp dec push sbb and xor add repnz xor enter aas loop into push jae out aam mov inc movb cmp adc push test loope adc nop mov jecxz dec mov repz adc into leave mov jmp out and mov or dec mov int outsb mov mov push pop adc inc mov sarb js adc mov pop adc mov jg sub xor leave divl (bad) fxch xor inc cmpl jle push fcomip cli stos jb add rclb fstpt daa jecxz stos xor pushf mov or mov push scas in jmp push clc arpl cmp pop cld mov ljmp push pop add cmp mov add jo mov mov add movsl ret dec pop or add sub pop lcall iret or mov cmpb dec sub pushf push insl cs sub stos add add int3 inc and mov cmpsl ret and mov and sub add (bad) push outsl mov popf jae xor mov (bad) imul test mov cmp xchg out lock jb xchg sbb push mov jae sbb idivl xor jno push add sub insl js add and add xor mov add push dec mov xlat xor pop std adc fs repz fistl add adc push fs pop and int push mov pop xchg call xor leave repz test push inc add repz and xor sub cwtl inc ret pop inc faddl fcompp pusha outsb int movsl sbb mov xchg sahf inc and repz ds enter cmp divb repz fldenv dec and into dec or mov cmpsb add cs lea jl,pt shr jecxz js xchg ljmp xchg pop and dec (bad) int cmp test (bad) jns dec or adc push int cmp leave outsl and sub rorb in mov test lods lahf shlb jl pop mov xchg leave lea aas (bad) push ret testb sub mov cmp mov dec bound dec (bad) testl and lock sub dec adc xchg xor jle fdivrs mov int addr16 mov jo (bad) sub fwait and adc das repz add popa shrl push sub mov cs xchg test jecxz lret bnd pushf or jge lcall xor pop sub fwait jmp (bad) leave jnp push jecxz push mov mov mov loope (bad) imul mov cli jne clc aad sti test mov clc jae xor sbb or mov jmp (bad) pop mov (bad) leave and or cmp xchg mov dec aam gs and sub test sub ret mov pusha int3 cwtl mov inc add fbstp and inc ret push je (bad) lahf mov icebp stos xchg (bad) mov jno movsl cmp sbb add aas (bad) xor movsl pop mov adc and lea int jnp js test sbb jne and call cmp mov cmp loop lret sti mov jge sub xor and fisttpl and sub out mov (bad) jne popf adc xchg popa mov sub adc xor mov pop lret xor clc cmp jmp cltd mov dec and cwtl ret adc loop cmp add mov mov mov xor fisubr push aad xor sub jo xor cmp add inc rcl stos and les lret cmp and push sbb dec mov cmp shrl movsl push das jns ljmp lds pop popa sbb push cmp (bad) mov in mov jmp rorb dec sub add xor or push pushf mov js mov sarb addl jle mov adc aas cwtl dec out add mov (bad) test adc mov pusha xor or (bad) repnz test push mov into xchg movb imulb inc jge xchg outsl xor jae das inc (bad) jnp popf xor sarl inc mov movsl sbb call out jns (bad) push dec jl rcll in and pop xchg mov mov out cmp mov pushf sbbl loope xchg lcall lcall test mov push sub and iret test sub in ret mov out pop loop iret dec ret mov lahf cmp sub lret stc or add lds test (bad) repnz sub cwtl into or mov popa and sub push insb mov push pop or (bad) inc setg push fldcw cmp fistpll or out mov and pop mov mov leave paddd and das testb sub and call adc mov push jnp fs cmpsb sub sub or (bad) jb (bad) cmpsb iret icebp or push adc je (bad) jno (bad) sti mov sub lock xchg inc inc ds stos xor push enter repnz sub inc push mov xchg pop xchg lock icebp sub lock push adc mov out and frstor pop xor repnz dec add fstpl xchg adc sbb or xor sub das mov xchg pop dec in (bad) enter jp movsb dec cld ljmp cmp cmp pop mov ret inc add into sub call push mov sub lret xor xor mov (bad) mov dec and xor jg aaa ds lods std mov ret aas adcl mov inc push inc add jb pop bnd mov js dec push lret mov lods cmp add cltd push sub dec xor icebp xor mov sub jge rcpps dec jae dec cmp xlat jl fiaddl stc adc cmp aam sbb jae ror mov or pop lea pusha insl pusha and push imul add iret inc into rcll loope jbe push mov add or in sbb cmp mov lret lea adc in aas dec imul iret fwait xchg out mov cli pop xor adc dec lret das iret jns mov push xor sub jmp or pop jmp ret (bad) loope insl push roll mov xchg cmp movsl lods and enter cmp repz cmp aaa ss ds (bad) pop popf xchg mov int scas lock fwait mov stc adc cs js xor fldenv idiv inc movsb mov sub sub test cmp leave xchg loope mov push dec adc xor into movsl xchg rcrl std ret lcall mov sbb pop xchg xchg outsb cld pop (bad) xor cltd lcall jbe fs and push add scas pop bound rcrl test divl iret movsb sbb clc outsb sar fcmovne (bad) ss mov cmpsl (bad) dec aaa pop leave mov inc dec lret ds sub inc mov add lret xor mov xor jecxz addr16 clc mov mov int3 xchg dec out int popa inc adc lds sub mov out nop lods movsl sub push inc xchg mov mov fisubl stos push mov pop icebp or test and adc in inc sbb adc push pop mov xlat inc push hlt icebp lock inc xor movsl mov pushf lods iret push andl and cmp xlat dec loop cmp popf shlw or mov gs mov or xor popf daa add sbb push pop mov dec addr16 mov mov jp sbb aas mov mov sbb lret mov jle das xchg ds mov mov push push hlt fcmove push adc fistp xor mov in inc sub (bad) call jo imul outsb sbb sbb leave push mov add (bad) fs cwtl and xchg lcall xchg cmp cmp (bad) mov xchg add mov les das and jae xchg out inc mov xchg add jbe dec mov xor pushf syscall pop sahf fcoms inc aam inc (bad) ljmp (bad) add ret and fidivrl leave push aas xchg (bad) cli fiaddl mov test je mov cwtl imul (bad) xor inc ret stc and pop (bad) mov jb xor and add jne pusha jge loope jge pop stc dec push sub inc stc and int3 data16 popa repnz das xor jmp lahf subb cmovb outsl or repnz mov stos bound out jbe mov outsb ljmp insb fistp gs xor js lcall pop or push push leave jl outsl scas push adc or jp inc cld movsb addb adc repz sbb and xor inc push cmp push xchg mov je push mov pop pusha ja sub mov fisub sub mov mov outsl repz fcoms popa pusha or sahf xchg dec outsl pushf xchg daa xchg or push leave or xchg dec aad dec cs dec les pop pop and lret push ror sbb lock xchg clc test loope pop cmp bound xchg mov xchg add fstpt jns ret mov or cs sub xor xor fsubrp and popf adc mov movl mov les and lea lds rcrb mov movsb sub lock and clc adc loopne (bad) dec loope jb and mov or and scas rorl lods mov mov notl ljmp repnz add leave mov add test xor lret cmpsl pop mov adc jp ret or lods icebp cwtl int in pop sub fmull test mov dec mov mov fs or movsl xchg xor push js cmp mov neg adc jmp neg mov test je cmpsl aam mov inc nop adc cmc outsl pusha push push leave (bad) stc ja push mov neg das shr ret fsts xor (bad) adcl in incl or mov push cld pop pop ret orb push push mov int3 sbb dec push push or adc pushl stos xchg ds fucomip or ret and repnz nop cmp cmpxchg or mov cli repnz mov adc daa and push iret xchg push ljmp mov fdiv fisttpll push push mov aas push pop mov addr16 push mov inc in mul mov add push and push mov add fstps mov xchg pop mov fildl pop and ds int pop jmp add dec dec add pop dec sub popa dec sbb push shr out xor mov push add sti jg pushf add in cmc pop or push xorb add (bad) push mov cmp mov jp add jne mov out lret dec dec add popf inc repnz pop shll ficoml dec into mov xlat push cmp aad icebp pop sbb fcmovbe pop adc std je les mov jg sub or jnp lret lret push cwtl dec cli vsqrtss xchg dec ds pusha adc repz add test mov iret clc xor aad and add add test cwtl andb loop mov nop sbb pop push pop out sub cmc add sub xor rcll inc fs pop push sahf arpl lock (bad) or mov sub add jmp adc pop mov fcomps (bad) (bad) icebp jmp pop xor pop mov (bad) pop add pop jns pusha loop icebp sub les lds (bad) and mov je add or sub sbb stc xchg fistp mov xchg (bad) cltd out frstor fidivl inc or data16 jae (bad) iret movsb popf (bad) movsl ds or rcrb mov sub popf sub sarb and xchg dec ret fisubr (bad) enter add in pop and cld mov adc dec add cwtl pop add or scas push cmp int or jae and iret out mov repz cmpsl inc fstps push es mov in fist inc dec lcall movl sub notl xor and xor xchg cltd sub imul sub das mov inc mov loop js cmp pushf test ret mov dec (bad) lcall imul (bad) add jecxz fimull pop mov push sub cld ljmp xor lret mov es mov push popf push insb jnp pop into mov mov adc pushf dec fmull mov mov das int3 movl aaa ficom lds add leave ja adcb sub push xchg fmul xchg dec in xchg lcall fisttp (bad) sub loopne ljmp inc inc add cwtl cmpsb xor out or pop sbb std out adc mov cwtl fsubl pop pop mov jl call in jmp frstor imul push sub je xchg jb clc sar push mov mov sarl sbb nop fcmovnu adc bound and xchg inc pop pop cmpsl and or mov pusha jns and rcrl mov fucomi stc dec out xor and fwait xchg rcrl add insb lret or xlat sbb jmp fadds das dec into and inc add (bad) mov enter aad or aam or (bad) or daa cmp push bound fbld pop pop sub cmp dec sub popf xchg or pop jp adc lcall aaa lds adcb add repz inc add xor adc add push mov push push mov sub scas (bad) fucom fstl mov jp mov sub lods mov and cli sarl iret subb mov push ret and mov (bad) out fdivrl and je gs jne dec outsl jmp jmp xor imul mov adc push popa jp sbb sub mov mov outsl loop sub cltd into inc and jns and mov sbb and mov adc fcomps xlat cwtl lods cmpsb mov pop xlat xor loop pop cld pop sub add in (bad) push mov ds popf push sub or decb jne ds or inc jge mov aaa popa fstps mov inc sub jb out sbb (bad) mov mov push sub sbb dec cmp cmp mov xchg sbb mov stc pushf gs and scas movl inc sub xor push adc test add nop jnp inc call add into xchg mov lcall push in stos aas mov xor push or cmpsb or cld xchg test sarb sbb or push or pop cmpsl enter popl shrb clc arpl test and add xchg adc adc adc push push and test rclb inc jmp mov add je mov daa cli inc dec xchg arpl jns out mov dec movsb xlat test (bad) pop mov rdpmc dec or lret (bad) (bad) (bad) and (bad) xor clc in imul sub int sub (bad) xchg lock cmpsb daa (bad) popf adc jbe imul push lret pop ficom idiv mov and cmp shll cmp jb test outsb in mov jbe scas arpl lock sub mov mov inc dec and cmp mov int3 pop push mov fsubrp sub cwtl add mov sbb in iret nop test mov push cmp test xchg cmp repnz rcl push mov sub sub loopne popf cmp fcoms prefetch or xor and sahf jmp pop int outsb (bad) adc xchg pop mov repz gs sbbl adc pop leave and mov nop rorb es sub cmp jmp enter ret sbb rcll or mov fimul in andb (bad) push sub out or popf xchg mov jmp pop jmp pop repz pushf jl insl xchg adc xchg xchg je loope pop icebp ljmp mov dec enter ret inc adc and mov repz adc test inc mov xchg jno xchg into scas cmp xor xchg pushf out mov push sbb rcr jp mov lods pop jl pop mov dec xor data16 sbb jg sub mov gs mov xchg inc cmp pushf xchg adc pop negb lds or or into dec sbbb adc je (bad) leave (bad) cmp icebp mov bound (bad) decb fsubrs gs adc in cmp xchg daa call icebp int lcall sbb jg ljmp pop xchg push ret ja xor cmc sbb daa jp,pn jbe sbb not stc fwait dec mov or das add icebp test dec xchg mov sbb arpl and mov dec fcmovb adc repnz orl mov jg fs adc mov mov pop or and outsb xchg scas std mov add xor das out pop inc (bad) add jmp loop (bad) mov lods cmp sti jne (bad) sub outsb scas jl movsb scas cwtl gs jno xlat dec out jl jb loopne stc sub imul clc (bad) xor stos pop inc adc adc xor in movsl hlt and xor pop dec xchg or rolb adc into stos cltd sub sub mov or xor cmpsb dec enter inc sub jbe mov jb je adc xor dec jb nop ret icebp jp sub fcoml or mov sub iret cmp int3 test or test mov (bad) pop cltd in push jecxz sbb pop xor add mov pop mov mov cmpsb push sub out sahf jmp jb lds das jno mov adc lret adc fnstcw inc gs jmp jb adc sbb or dec add movsl mov repnz dec ret outsb jmp aaa ret (bad) (bad) (bad) pop in mov or push jl adcl push jnp dec mov mov inc xor std cmp add dec mov clc pop sub and stos cwtl addr16 fwait and jecxz and adc (bad) jbe int3 mov pop sub mov pop add mov aad cmp sbb or (bad) imull mov mov jge rcll xor jne sti pop cli cltd or cmpsb inc pop mov roll sahf subl push ficom repz cltd mov in xor cmp add or cmpsb hlt dec (bad) jns xor scas daa or push cltd and sbb ss mov inc into mov outsb xchg in xchg mov (bad) mov push xchg and add xor fistl lcall test add jno xor ds out sub daa (bad) jp jnp pushl adc mov fstl xlat jae cmpsl jns mov xor mov ds sar ficompl jne sti pushf xchg fs inc xor fcoml leave out (bad) xor imul fs ljmp iret mov cmp jns mov add dec popa and lock pop fsub enter jo xchg inc sub mov (bad) movsl ficomp adc lds ror ret inc out dec ret notl push lcall mov lret sub dec adc ljmp sbb xor adc fidivrl outsb out dec ret sub cmp iret pop clc repnz data16 xchg push lods fs das add inc int3 repnz cwtl add xchg shr jns lahf rclb test imulb jmp xor icebp push pop lds lcall out sub cmp cli divb out data16 inc lahf sub aas cld cld pop xor adc or cmp mov cmpsb xchg pop sti mov fs adc call xor adc xchg xor rcll add mov pop imul cwtl cwtl cltd push push in xor sub das int3 xchg mov adc mov dec (bad) adc movb in xor xchg mov inc jae push fsubp or stos jno shrb leave or ljmp cwtl not popf sbb aad pop loope dec mov xchg mov and mov mov cwtl jge mov mov push mov cmpsl loop or or in push xchg outsb push clc push mov push jo pop in push ret (bad) jl sti xor repz pusha inc sti sub nop js andb or xor rcr outsb cmpsl cmc adc sub shll or push jecxz sbb out pop pop pop sub pushf shlb add inc and and lret scas or dec in pop scas hlt fldt xchg xchg lret loopne cli mov jmp mov sub lret ljmp and add inc shlb xor jns movsb mov pop fucom add ja outsb les (bad) sbb dec add xor hlt imul mov mov pop into sahf jp call mov add add inc and call movsb stc xchg jle and or pushf dec mov into mov push ljmp mov jecxz movsb jno mov or dec dec add fimull (bad) pushf jmp fisub fisub mov and out mov push jne ja (bad) testb sbb ret sub leave xchg xor xor mov xchg sbb sbb pushf cli or cli pop sahf mov lahf adc push xchg mov or mov pushf hlt push pop mov bound or mov movsb push fucomip lods leave mov lret mov sbbl inc sub cltd cld bt sti lret stc mulb js aad mov aam lcall ja xor rol push jo xor vcvtsd2si and cmp xchg add (bad) cmc jmp daa adc rcrb xor pop and andl ds dec loopne sub fnstcw test and jmp fidivl xlat sub add mov push jmp jne sti sub or rclb xchg shrb hlt outsb mov add (bad) mov sub enter sub xchg rcr xchg lret sub pop mov insl inc sub xchg jns inc (bad) push push mov sbb jmp pop and or sub pop sbb mov or pop and xor xchg outsb ja lret push mov inc insl mov pop sbb out sbb and cltd cmp jnp xor mov leave (bad) es dec lret or jno lods hlt ret sbb lahf mov ret dec jnp cltd bound (bad) add jb xor or xor or mov (bad) dec inc mov shrl or je or inc icebp cmp je adc dec (bad) int3 lret sub ret out and iret xor add ror xlat push popf pushaw inc and push sub pop out dec (bad) fcoms mov fnsave int3 sbb jmp xchg mov aad mov xchg mov popf clc sub cmp mov xor mov adc stc int and push inc adc cli fs mov or mov lret dec and sbb ret pop or loopne lahf in rcll sub push loop or mov cwtl repz mov flds out or insb inc dec jl xadd icebp test jle icebp push ss (bad) rcrl jmp data16 dec (bad) jg mov lock dec jmp pop xor mov mov imul ret mov xor popf int3 push pop sbb aas sti jno sub inc out lds out lret popa ds push push pop add nop (bad) mov add repz fisubr fstpl lea inc sbb mov sbb sub cld inc pop test jg xor cmp cmp pop roll mov cmp pusha push sbb imul aam out aas sub sbb xchg mov incl pop (bad) push sub xchg imul mov les (bad) pop pop test push push pop test ljmp cmpsl test pop jnp mov mov jb ljmp dec lods xor outsl (bad) pop std lds sbb outsl in movsl add ret rolb jle test jae push mov es dec inc add shrb xor sub sub pop add loop push mov inc inc sub and pop and js ret jnp mov adc lea or add ret pop adc aaa push push divb mov dec lret push pushl push lods sub cmpsl pop mov stos repnz scas cmp xor aam dec loopne loopne cmpl dec push or mov jae addb push popf into pusha ret lret pop sbb shr test pushl push pop and adc into imul push addl daa xor lret mov mov or inc sub xor mov shr das xor jmp sub sub (bad) sub cwtl scas or dec sub and sbb enter das call repz les cmp sub pop pop cld es fiadd push push push (bad) outsl aaa inc cmp sub arpl mov xchg jnp lret lds or inc out xchg imul jge or jle mov dec movsb mov lods add mov add and ljmp add xchg clc pop dec jmp add out (bad) or xchg adc lcall loop or push add sub cmc adc nop in sub test mov push shl xor pop adc sbb out inc and (bad) mov mov das mov xchg jmp xchg out mov mov adc mov add push loop mov out xor mov rol ret je jno xchg out nop repz xchg loop and inc or jmp icebp mov and rcrl add mov int jp xor ficom or xlat and les xor in pop aas ljmp mov push or lret xor mov lret add adc fisub jmp push jae mov adc or cmp insb jnp fldenv testl add dec cwtl mov mov sbb lcall and push hlt inc and repnz les shrb mov xchg mov test or (bad) adc bound out aad mov xor and test xor sub jmp and push movsl lds pop sub cld lret test inc lret loopne pop mov jecxz sub mov stos add js lret daa push add pop jp pop mov les (bad) movsl out gs out cs sub push lea in enter inc lret pop xor pshufw sub dec call popf scas xchg inc pop adc add lea push dec and repz xor dec iret fsubrl (bad) lods mov cmp xor int imul cmp jecxz xor and sub inc sbb lock sarb mov and push adc sub adc daa push push leave xlat sub (bad) xor mov std xor and jp xor adc xlat mov sub dec fstps mov es push add insl sub imul cmp aas sub xor dec adc out mov (bad) lahf add sub cmpsb dec test movsb out cltd fwait cs or jp or mov stos sar ds loop test test repnz movsb repnz scas aaa addr16 pop fmuls push ss and jmp xlat mov rcll es sub dec mov aaa mov push inc mov jnp into mov xor outsl mov mov loop adc jnp or pop imul xor dec and stos fsts loope pop cmpsb xor in fmul lret mov js lahf loop incb push push into mov dec and cmp out (bad) push xchg mov (bad) lahf mov push inc scas mov mov or (bad) dec fistpl inc inc and dec cld push dec jmp (bad) flds dec or xor fbld dec sub sub push xchg cwtl mov and jmp mov sub ficompl mov xor popf (bad) inc mov mov dec sub jno push pop xor lds xlat into aas xchg pop sahf cmpsb mov outsb (bad) cmp (bad) fist xor sub dec cmp mov pop xchg fwait cmpsb pop in popa xchg or xor and mov outsl repnz xchg add jo and (bad) push inc das bound stos popa or and add outsb (bad) lock mov lcall lock stc nop and add fidiv add je sub fist ret test xorb add sub es cmpsb lret (bad) mov add lret xor inc insb mov cwtl dec mov jle mov out push mov xchg mov test pop cmp pop pop out enter cli mov mov and pop mov into (bad) sarb xor fdivrl xchg lds mov add (bad) mov sub fldenv out ret xchg stc cli repnz sahf push and and aaa int das loopne repnz dec jnp stc movsb das cmc je add or add xor push lea stc enter or pop cs adc inc stos sub ljmp icebp outsl and sub push (bad) xor sbb mov daa adc push mov scas popa mov jns mov iret and mov pop gs cmp outsl dec add jmp repnz in imul or sarb mov xor (bad) jo push sahf sub ror pop sub add ficoml xor rolb das push or and xchg or sbb mov dec lea rcrl add inc and add mov jbe sub mov xor mov lcall mov inc out es bound or leave and pop add add and stos addr16 mov inc ret adcb push adc add rol ret cli int3 or fwait in or sub pushf (bad) clc lret sub pop and or (bad) xor xchg nop and ljmp in popf cwtl je xor cmp adc pop aam popf in das jno imul xor pop cs or sar xchg or or ss adc negb call in push and call inc add mov cmpsl leave divb rcll fldt int3 arpl xchg in sti dec out pop pushf xchg lret (bad) je cld mov imul arpl add pop sub cmc imul xchg pop jg jg sub sub mulb mov dec mov dec lods sub int3 or rcll sub inc inc mov sti push imul aad ret or dec repz idiv dec repz mov mov mov push notb xor mov or xor bound pop orb and sub lahf inc hlt sub cld aaa mov lret add mov xor test sub test push mov es mov push out lods lret out xchg (bad) fmuls or ret (bad) sub pop pop mov xchg popf adc neg addl mov push outsl ljmp mov inc adc dec cmp cmp adc notb dec leave jbe fldcw (bad) dec inc and sbb mov jle lods stc jnp idivb mov inc and pop repz idivl pop out push xchg fistp mov in imul cmp idivb cwtl addr16 mov repnz ja xchg call jecxz mov int3 mov xlat jo scas mov cs orb scas rcl pop in daa fisttpl repnz sub int (bad) je clc mov call mov lret mov xchg mov add lahf push xchg daa fwait dec in or xchg jmp popf ss roll lret add xor hlt fs and into push ds add fcoms out out in mov gs notb mov shll mov inc sub popf mov sub je rorb fnstcw popa js xlat adc loop loop jno inc out sbb and pop outsb xor and mov in jmp jecxz (bad) mov and jp mov or mov lret jmp leave imul fs out fs mov adc daa jae adc aaa pop imul out (bad) ja testb pushf fsts add add data16 pop pop test stos mov jp jae loope mov dec adc add pop scas das cmc inc cmpsb out push cmp mov push adc daa add add mov cmp bound cmp mov add movsb jno call pop mov push adc loop sbb inc cmp mov (bad) (bad) stc sub mov and xor or cld jecxz push nop add dec jl sbb xchg in push sbb pushf fcmovbe push mov sub lahf xor pop das test adc mov mov add jne mov test scas nop dec pop sub int faddp xchg je adc stos mov xor or jmp aas rcrl or clc adc mov out jb mov push in cmp cltd leave mov das int push (bad) dec leave inc cmp mov pop xor std das popf stos outsl add add sub aaa mov xor idiv daa (bad) fcomps xchg push sub adc dec ret push jmp std add cmp inc (bad) (bad) sub imull fadds ret mov data16 xor add mov push add or dec push div mov mov pop xor ja and or and stos inc and je std xchg test mov lods add outsb lods sub out and add je scas bound push fildll (bad) jb enter (bad) ret xchg repnz stc inc cmp xchg mov (bad) sub pop mov fstpl and mov (bad) popf je jmp inc cwtl out mov push push cld mov push pop cltd sub adc push jg pop push inc pop std out sub or cmp inc adc out jno xor sub mov andb or mov sbb and pushf sub je das in mov inc pop cs mov fsubl stos repz gs and and pop xor cmpsl lds test movsl xor or sub mov clc sub (bad) enter add sub stos mov push ja pop xchg cmp xor inc lret movsb in xor stos sub adc add inc imul ja ja pop fs jmp pop dec clc dec dec adc mov repnz fstpl mov sbb out movl jmp mov dec ss sub cmp or out nop rorb repnz dec test xor adc imul mov dec cmp rorl and xchg cmp cmpsb mov mov (bad) repnz adc xor xchg mov out sbb dec out gs adc or sbb sub sti mov add jg bound jae and add shrl ljmp lea jo das icebp mov scas mov aam dec inc mov mov outsl inc push or xor loop (bad) mov or outsb imul daa repz push or cli or mov dec je xlat fsts dec sbb xor ljmp and movsl das (bad) repz incl mov inc (bad) dec lret repz popa nop sub pop sub push and std mov lds cwtl mov xchg cmp roll loop adcb stc add push movsl mov sub out pushf pop loop add xchg aas cwtl mov mov aaa test mov repz loope popa fsubl (bad) aaa repz js mov fcom out movsl rorl inc out mov and pop je lods cwtl jb (bad) ljmp lock cwtl pop mov or enter rolb sub pop mov mov icebp out pop loop mov xchg mov sbb out inc iret pushf and pop cmp sub or add pushf test jp repz pushf cwtl (bad) into or in fild pushf (bad) add pop sub jnp add stc add jb sarb lods cmp mov and jp movsl outsb je clc test mov mov cmp sub rolb cmpsb jb les and xchg (bad) call xchg daa paddsb ret pop popf fs andb adc test rcrb aas xor mov divl (bad) aad or sub add pop or les cmp dec ficompl pop xchg mov adc ja inc fstpl repz test sbbl dec enter adc lret ljmp sarb or mov cmpsb loop jne or inc iret stos xchg sub test sub lea in jbe leave loop mov test cmp push mov cmp icebp into mov movsb test mov xchg xchg ss lock (bad) lds xor push lret sahf pop repz jb jg and or mov jb insl mov (bad) or shll jno mov xlat stos xchg jnp lods hlt jnp stos sub dec out add rcrb je sbb (bad) jg mov out mov mov into mov in test shrb cmp pop xchg clc xchg xor add and or in push fiadd je (bad) and mov aad fstps push sub decb call cmpsb push cmp ret dec push xlat dec in cld rcrb mov sub dec roll pop aas fmull cmpsb or jb sub pop mov mov and pushf aam popa fs popa imul jle ds pusha lret sbb (bad) mov jb (bad) out sub inc pop add inc adc fidivr lods and push cwtl insb sub lahf inc jb adc sub sub into mov dec cs bound xor ljmp les inc pop dec mov insl inc and sub xchg enter ret notl cld imul (bad) enter cmp scas pop xchg addr16 mov daa and loopne or or (bad) (bad) or xchg sub mov xchg or xor outsl and xchg jl inc sub addb add mov test add push or xor or add out or mov pop in dec enter xor xor sub pop popf mov xor sub mulb jns mov ret daa js mov mov shlb cld pop xchg sub mov ljmp mov push sar and ret pop loopne pop out pop push cmpsb push cmp pop jmp mov loope push xchg ss inc cmpsb arpl fcmovnbe mov pop (bad) neg inc (bad) mov xor pop pop or lahf fisubrl xchg mov push add dec jmp pop sbb pushf dec std cmp jmp inc push mov xor icebp xchg mov pop cld sub aas pushw lret or cmpsb cs mov aad sbb fwait bound (bad) sti ljmp pop sbb outsl push lods push mov sub and imul jns adc adc or add mov (bad) xor pushf mov inc inc (bad) jns aaa inc push stos mov xchg push mov jg lcall pop mov sbb out mov mov cmp lods and push outsb ds testl fcompl lcall lret adc dec fcoms and xor movl bound daa jmp adc or cmp enter movl int3 (bad) imul pop movsl lret mov cmp daa lock mov mov pop xor repz jmp add test in cmp or mov scas sarl sti scas and mov xchg mov stc or ret xor (bad) sub repnz pop xor mov ror pop idivl xor lods jmp sub mov and pop xorb das and or dec inc inc xchg mov cmp cmc dec or mov pop lea imul add movsl scas or mov sub mov repnz enter js shl addr16 leave call xor pushf push les repnz sub pop sbb inc xor mov push cs loopne lret pop inc andl or mov push push xor xchg jne mov lret popf mov (bad) scas lret push iret sahf jmp sub mov iret std into inc dec or pop adc nop movsb mov test aas mov cltd pop das lds pop mov cmpsl and rorl add pushf fistpll mov push shrl and addr16 in es sub jae sahf stos sbb movsl fimull outsb cmpsb outsl daa sub mov aaa (bad) cmpsl jbe or pushf cld mov xlat sbb into outsl mov push into mov xchg mov fdiv ret and (bad) and xchg loopne aam jo sub lock mov push jne xlat push push mov out mov pop je imull add sahf (bad) xchg push dec xchg push add in push and pop mov lret sub lea icebp pop loope mov stos pushf pop xor mov inc pop add shl fwait sbb cwtl out fdivs cmp and test addr16 ftst push mov test daa (bad) pop popa pop out scas cmp pop mov icebp ret test aam pushf ret mov mov repnz sbb lods rcr adc int jnp shrl cmp in or outsb dec dec mov sahf mov sub sbb es push push sbb daa dec jne pop jno add pop mov sub push mov sti (bad) mov add cmp and jmp fiadd mov les or xchg and pop dec pop aam in push push dec sti cmp add shll and push je imul shll outsb repnz lret sbb addr16 hlt xor pop or pop pop and in lds es clc adc or mov fstpl test and int3 push dec fild xor cld xchg rcr roll sbb jb insl sub aad add sub lods rcrl cmp cwtl mov xchg fld lret xor xor mov arpl lret divb mov cli mov int mov cli sub xchg xor add orb mov cmp (bad) xchg push adc mov repz sahf (bad) mov lock push jns (bad) push ret stos sub add lds out in sbb inc mov xor jmp xor xchg nop mov or fwait sbb out xor (bad) call arpl out add out push out and sbb aaa test mov pop jle call popf icebp das dec ja lock jbe mov mov je cmpsl flds cmp jge scas xchg ret mov cld mov orl pop jb lahf sar ja outsl dec jmp xor sub pop movsl adc xor mov add inc pop and sub cmp (bad) jb nop pushf daa or add mov dec cli jb sub (bad) xchg jle dec (bad) cmp xlat xor movsl jecxz adc clc out and clc ja leave int push sub daa xor sbb ja adc hlt iret mov mov aas (bad) ljmp clc mov xlat sbb sub lahf inc and call xchg sbb mov pusha ror iret cmp mov test mov sahf sub and out adc (bad) popa push or cmp mov sub stos pushf inc xchg sahf lock xchg fcmovne adc or mov (bad) jge arpl sub mov and jl popf mov push dec xor clc test and orb sub mov lret mov and xrelease xchg in dec xchg xchg sub cs out or push or mov ret lds xchg mov mov dec aam adc lret push jb roll bound and and cmpsl loope arpl rorl jl cmp out bound leave (bad) mov cmp add lods dec sbb sarb sar fwait mov jbe ret into pop (bad) jne test ret cmp cmp clc movsl out pop aas push cwtl js out xchg add xor add lret test je out shlb jle cmp and mov imull aam daa xor mov lds int3 pushf adc adc mov push sub movsl loop sti outsb pop inc sub pop or mov das push sbb sbb mov xor ljmp cmpsb and (bad) call mov cmp jmp outsb shll or and xor jbe adc into dec lret inc adc ficoml xor mov dec cmp dec out cmp mov fistpll in jp jmp (bad) or inc push inc fisubr pop in leave push (bad) daa pushl jl cmp mov (bad) mov clc mov leave jne in sbb push mov or gs add sub popf aam in notb rol sbb lcall jmp xor xor inc jo pop xor scas je scas sub imul fldenv and xor push nop mov adc or pop movsb test movsl xchg push rol sub sub in (bad) movsb je cli and or outsb mov sub sub mov add push pop (bad) mov pushf pop loope aas xchg add xchg js jl pop movb orl push xchg movsb test xchg mov out push and pop int3 clc ret fcoms xorl out sbb insb nop cld dec mov cs pop int3 dec repz add es ja jae arpl pusha int jl notl mov outsb add shrb add sbb sub bound xchg jl and add sti sub inc ret dec lds flds add daa jnp or sbb and cmc or cmp sbb rcrl call loope jns cmp stc inc jmp xor or in xchg adc or pusha jmpw sarb jmp js dec idivb cmp movsl stos bound aam pop ljmp das rcll idivl mov aas fisttpll fadds mov gs daa das test mov sbb rorl in pop mov sbb mov mov stos gs lcall (bad) add and loop insb cmc popf popa test cmc jb mov inc jecxz loop cmc xor mov cmp or dec sub xor mov inc (bad) mov or dec das jbe mov push mov cmc mov dec jg or ret or sub push jb push cltd mov int cmp push mov dec into popa leave adc cwtl ds mov cld push fidivrl jne sbb popa and add xchg cmp (bad) repnz adc ja xlat add jl cld mov mov sub ret mov dec sub movsl in imul aad in cwtl aam out stos cmp inc lahf loop jnp mov (bad) cld daa out or mov lods jns mov sti stos push add lahf out sub adc and repnz ret fstl adc faddl mov dec mov add or pusha sub out mov push lret negl orl daa scas out mov clc sub mov or cmp clc movsb dec dec mov xlat mov je cmp pop popf dec cmp outsb pop scas dec shlb loop adc add test jno dec jmp ja inc push cld pop sub add ret pop ficom rep lret pusha icebp mov add or fs dec and sub inc (bad) xchg xchg dec jmp (bad) fwait imul cmp sub ret or cs xor mov cmc xchg pop or popa gs daa pop mov js cs jo outsb push sbb lds mov lret xor add arpl icebp sub push rcrl xor adc sub push sub xchg enterw fadds and ret das add and lods aas movsl cli xor adc jge dec ret mov test adc dec call and movsl call mov out add jmp push jnp pushf pop rorl add pushf push xor push mov xchg mov les fstps movsb in inc sub sbb and add fdivs faddl out cwtl sub imul pop adc shll inc cmp dec cltd in flds sub repnz aad pop pushl mov popf shlb pushf xor popf bound (bad) cld push and jle add decl add inc push jp insb ja cmpsb leave or push imul imul dec adc pop (bad) repnz jmp pop fmull lds mov pop in sub mov out and sub loop pop fwait imul inc enter push bnd mov add adc sub daa push cli pop cli lock je xor ficompl cmp or je das pop mov or xlat cmp or test out push push (bad) sub push pop icebp jg jbe push xor ret jb jmp add aad inc mov push and sub sub add or and repz minps lahf daa pop jno clc in outsb jae xor cmp in mov mov cwtl pop cmp pop jecxz sub cwtl fadd ret ret mov xchg push ljmp scas (bad) bound mov jecxz lods (bad) outsb push dec (bad) sbb sub insb adc mov daa out cmp lret ret sub xchg xchg sub (bad) (bad) outsl mov ret subb arpl mov lock fild mov push or lcall xchg push jbe mov or out push add and xchg xchg insb inc or add mov sub data16 lods push xor pop or fidiv xlat jbe lret jne sar mov or dec sbb add xchg jbe insb xchg lods jmp xlat or cmp jo in data16 pop insb arpl mov adc push xlat jne mov daa or loope ljmp pop pop mov mov mov xor repz out and mov sub leave and js dec jmp mov cmp xlat into ret and pop add fcomps mov int3 add cmc sub xchg (bad) jp inc xchg mov cmc jmp xor jae daa (bad) mov xor add movsl sub or mov loope lcall int test rcr push sub pop daa fmulp lahf (bad) cmp pop std and add shrl push adc imul adc push pop inc and and mov into daa xchg lcall pop rcrb push notl scas xchg stc adc add inc mov mov clc scas mov or out cmp adc sbb clc je scas movsl stos mov xor sub dec and int3 rcll pusha mov int3 dec push sub dec outsb xchg in or in int and jmp aas and ret std daa pushf pop mov xlat mov sbb xchg lds adc mov lock clc mov mov jp arpl sbb ss test or mov or jne inc popa mov push or cli lock out loop rolb das push js or cmp (bad) ret xlat inc mov inc imulb jnp inc (bad) cmp or jecxz adc jg in loop fmuls mov fcmovnbe mov push jg mov pop (bad) xor bound das jmp pop dec adc mov (bad) repnz sar adc fcmovnb icebp add imul sub xor xor imul push nop aas cmp sub cmp std xor dec es cmpsl (bad) adc xchg icebp mov das divb stos bound pop push aam and mov in pushf nop ret pop jnp adc repnz movsb push lds push push adc lcall pop dec (bad) push ret aad or mov jb mov call int3 sbb or sub or jnp or mov aaa fisubr out jp (bad) sbb add scas push gs add sbb jno mov or (bad) mov adc or push hlt mov and inc add inc dec add cmc in pop xlat adc fnstsw add (bad) sub movsb add xor mov fdivs mov sub scas push jmp fadd and mov dec adc mov rol xor sub jmp leave mov and (bad) sub xlat repnz rcll (bad) pop sub lret mov adc add xor mov ljmp test dec add rcrl aam and mov mov (bad) fcomi or cmp or pop or clc rorl test pop mov dec out imul xchg inc mov or mov pop shr xlat rcr and rcrl adc mov pop pop aam sub dec and add (bad) movb and clc es sub or shrl mov push pop mov fisubl jmp xchg jecxz in in push sti popa das (bad) dec cmp push (bad) rorl and cli jno movl mov xlat mov add (bad) ljmp (bad) lcall cld iret dec out xor enter or stos fldcw push testl lahf scas pop (bad) mov inc mov imul jae movswl sub pop int3 dec cmp add lahf sub mov inc add fidivr pop pavgb mov mov (bad) jg sarb imul jae out jl ds scas pop xchg aas add subb pop add add popa je aaa inc jecxz pop ret and mov sti outsl ret sbb add inc stc pop xchg leave pop outsl lods and jle inc orl sub push fst xor xor subb insl sbb jmp or jg (bad) sbb int3 sbb cmp cmpsb nop andl push or fcomps and js pop movsb mov sar gs jmp jmp (bad) (bad) jecxz daa loop xchg inc adc ss test mov xorb push (bad) pop dec mov in xor test rorb push push mov scas add push clc ret dec pop test std pop pop or aad pop sub mov call push pop inc neg push push cld inc pusha mov and pop movsl sbb or adc js inc movsb or pop mov inc or adc mov rclb sub and pop mov aas shr ja lods outsb imulb or cli or jl and loope aas jge inc pushf add push addr16 pop push cltd pop sti xchg jg add mov add jge mov ret mov clc pop outsb cld cwtl (bad) sub pop lea jp dec dec std pusha cwtl jmp jae mov sbb sahf or das decl ds jmp adc xchg push cmp push into push shrl mov xor jl ja lea rcr outsl ret mov jg popf popa dec and fnstsw push fadds pop cmp jno add inc fwait mov mov xor cmp outsl add pop add push mov andb mov add mov sbb pop mov cmp or pop pop pushf mov imul dec rcll lock out xchg rcrl adc dec jnp pop xor pop (bad) xor sub cmpsb add cs jno sbb pop mov cmpsl movsb add push pop sub into cmpsb test push sbb adc leave adc pop icebp adc and and mov dec cltd mov mov call mov xchg xor sub popf out pop mov (bad) xor add sub flds loope cmp (bad) lahf mov rol and (bad) mov add inc push std cmp (bad) je push pop dec push pushl sbb push jmp pop xor push out lods cwtl (bad) insb jp xor jle pop subl cli test stos sub sub inc adc sub adcl and test sbb iret das (bad) movb mov xchg ljmp add jl push xor enter push movsb scas les lods xchg movsb inc addr16 test inc cli or into aam shrl mov sahf mov mulb sub add in push test (bad) test lds lret and lcall and and lock add push in (bad) cmp shlb adc mov cmp cmpsb push dec sub sub or inc or dec fcomi mov inc adc jmp xchg dec xor xor aas sub loope outsl mov ljmp pushf dec xchg sub cmp clc leave xchg rorb (bad) push sti bound (bad) sub leavew xor sbb xor mov sti and ljmp imul std pop sub sub into popf ret in sbb (bad) loopne or add loop and mov and push add xlat mov jno mov add cmc shlb pop jge or push cmp ja inc iret out cmp dec mov inc push pop ret cmc adc sub sbb aas je in jecxz pop push jmp (bad) sbb mov scas jecxz cmp mov fcoml sub or jl (bad) ds (bad) or and push xor loop adc sarl cmp sbb roll cli mov jb out mov mov ja lods or mov pop mov sub popf fcompl jmp pop mov lock mov loope stos push fildl or jmp pop lods adc add sbb sub and xchg and mov test xchg negl or or pop call cmp jg mov adc pop sub adc call add jnp out cmp jne test adc std pop push or add mov nop pop xorps dec pop popf je inc push mov ja jno pusha adc xchg mov pop push inc dec pop std inc (bad) (bad) or cmpsb sub stos mov sbb inc insb pop push jmp jl std sbb outsl and lea std or cmc fcoml (bad) jmp movsb pop jbe addr16 adc mov xchg out fsubs stos xor add xchg fmul sbb fdivr subb xor pushf fistp pop xchg clc mov cmp add push jp cmp xor mov push adc loop iret ret subl stos cmp push push xchg stc int3 pop pop add sub inc add xchg pop push and pop cmpsl lret lret or ret and daa add xlat rep mov jmp movl stc mov icebp ljmp cmpsb nop mov jmp test scas xor rcrl aas xor and or dec lods jo daa pushl (bad) mov jo pop add push lret loopne repnz or cmp cli lret fisttpl inc pusha add fbld (bad) and negl sub xchg ja std ret mov nop in in daa xor lds adc (bad) movhlps (bad) fmull push scas daa cmc xor and jns inc ljmp aas cmpsl adc cmp (bad) lret inc repz and dec cmp jmp cltd out aad fimul sub (bad) lds and mov jbe mov lret sub jmp mov rorb stc dec orl loop jmp rclb push jno dec icebp daa and mov in mov fucom mov daa adc adc mov mov mov sub lds cmp jno add arpl xor decb fiaddl sbb dec push or popf dec test or repz add cmc loopne mov dec cmp in ret mov je shr add add or pop sub fldenv (bad) jle xlat dec jecxz pop (bad) pop popf fsubrp push inc add adc ret dec call (bad) jae repnz or sub push clc outsl dec adc cli (bad) mov shlb imulb insb hlt push ficom mov aad xchg pop (bad) adc mov push xlat popa dec jmp (bad) push xchg xchg jl mov mov or push sub (bad) mov xchg jg outsl mov or sub out lock mov and rcll push xor jbe jmp mov sbb dec push test mov lret mov clc leave push fildll cmc movsb test push lret decb mov mov sub add pop jmp xchg out mov movsb lcall repnz and std inc (bad) mov pop xchg mov jl mov pop les out sarb out popf in pop push insl inc aas enter ds inc add jmp aaa pop fwait es mov push push sub xchg or xchg rcll sub pop aaa icebp pop jne mov (bad) push ljmp imul xor sub and mov fs daa mov xchg mov add lret mov icebp xchg jbe inc sub and lods icebp jns jmp call bound sub xor mov cltd insb aas cmc in ss adc lret (bad) mov push xchg jg scas xor insl mov and mov aas sub adc hlt leave je xchg cmpsl pop add repnz stos fdivrs lar adc les or jno (bad) push jp subl aad lds fmuls loopne xor mov pop es jmp inc (bad) arpl in cmp mov mov loopne sub sub fistl and leave jno das (bad) icebp ljmp ret ja in stos fsubs xlat jo xchg gs lock mov pop out sub jmp adc sub dec into not pop sub push out adc or popf add cld mov xlat mov lahf pop shrl popa push pop add dec pusha xor sbb icebp jge bound bound xor xchg mov icebp lahf xor xchg inc add (bad) clc imul scas jmp xchg fcoml out out out sar fwait les xor xor push xor mov add mov adc das add mov push clc xchg sub stc pusha dec cmpsb inc test lock jmp mov pushl dec jmp sub lret dec sub xor sub mov ret adc push and int adc xor and cmp adc mov divl test mov scas xor dec or lock jl daa hlt adc push (bad) insl pop (bad) repz push sbb repz sarl ja das and mov rcl into data16 jbe xchg push cmc inc mov icebp sbb and add cld xchg adc xchg test xchg into stos sub cli dec test cmc adc cltd outsb bound pop sbb sub add adc add fildl popa dec fnsave cmp push sub mov outsl add adc jae jnp add mov fsubr lret pop repnz repz xor negl sub push out lahf jbe jmp mov jbe (bad) sti mov or adc fsubl adc data16 sub push ljmp mov mov push sahf or sbb stc or pop dec mov dec sbb out push pop pushf out mov lods xchg mov hlt jbe lret jo cld cmp mov jno push dec pop ficom iret cli sub push sub imul aas sub push add orl into nop in jnp pop adc cmpsb mov push sub mov fldenv jb add xchg icebp ror pop sahf xchg das inc imul xchg (bad) jae push lds mov dec xchg add and and out movsb clc stc (bad) mov xlat out sub testb loop rorl loope lods pop aad mov jmp movb imull inc aam sub jns imul xor xchg (bad) lcall jmp adc pop mov xor lret mov insl pop data16 pop sub mov add rdtsc ret pushl ss push daa push mov sub and test dec stc and inc sub xchg cmp adc test and add inc aam sub iret pop ds daa mov or and xor cmpsb mov out mov sub frstor xchg lcall and add xor fisttpll aad out sub mov jmp ror daa sti aad inc add jnp or insl andl popa test lcall push add and in out sub mov inc shll fildll pop add xor sbb sub sub pop xchg test hlt rcrl stos sub fwait and outsb ljmp aas ret (bad) fs fs nop mov (bad) fldt enter dec dec pop (bad) mov (bad) cld ja scas shr out notl sbb popf mov jo sub test rcr dec lret cld (bad) mov repz leave aas lods loop and imull adc push repz fdivs movsl inc sbb je add jg fcmovu lock dec lcall je jo add mov adc pop (bad) sti nop (bad) dec fildl dec adc (bad) (bad) addr16 sbb mov push and jmp loop fldcw clc jp xor mov dec bnd test pop mov das lret out sub push push and mov dec sub pop add loope int3 push leave mov test movsl mov add loope xchg xchg mov and sub inc sub lret incb repnz xlat cwtl into pop push out dec aas mov mov int sub out mov mov pop sub movsb (bad) xor cld imul aad lahf xchg sub or pop pop and stos (bad) lds repz add push sub sti dec and (bad) cmp mov in mov push daa or fsubr and out pop in and mov mov scas fcompl adc xor aam ret mov rcll movsl (bad) lret lret cld pop push pop divb bound das clc or pop sti clc fisttp out insb imul out incl adc xor test xor cmp add and mov xor push ret add cld push cli pushf stos sub cmp mov je div mov lret push mov cmp sub popa jp push adc loopne or mov xor bnd mov jo lahf jbe pop (bad) or fisubr aad mov es mov mov clc xor mov insl pop ds iret and aaa stos sub xor xor (bad) jmp negb neg adc xchg js fist subl xchg out stos and pop out mov icebp push jnp and cmp lret mov fwait movsb cmp jo xchg dec rclb lock fcoml mov xor mov leave stc sub call push ds add pop push mov lahf ficom inc dec adc pop add shr and jns mov add outsb int jnp ds or lret xchg out sub jmp ljmp aaa sbb xchg (bad) mov mov jecxz,pt fistp or cltd adc test mov xchg push mov add mov jnp push loope icebp mov into dec push and mov dec xchg js fiaddl cmp movsl mov daa (bad) mov mov inc test jb bound mov icebp jle or rcrb sahf es repz ror movd dec enter sbb (bad) out je adc pop xchg dec bound mov les les loop ror add imull negb les jl pop jecxz mov xchg pop popf xor jmp sub mov mov mov in or out in orb or repz inc lods and aam lret xor or xor jo jns data16 jg lcall insb sub test sbbl arpl mov push push adc mov add jb fwait dec es mov js inc lods test push or and xchg pop ds int3 negb out and mov push fs mov mov sub push lds cmp ljmp in sub push mov sbb jmp xor add cld adc mov dec inc push and xchg ret mov clc pop lods sbb imul test add (bad) std cmc loopne fimull jmp cmc mov pop or (bad) and and and dec clc test ret adc sbb cmp or repz notb adc dec xchg dec and mov sbb rcrl push add lods and and bound enter push pop sar xchg xor push dec out jb loop dec (bad) je cli push sub dec mov stc mov sub std dec push xchg mov (bad) sub pop xor jecxz pop (bad) mov cmpsl xchg rcrb pop inc push stc inc lret or jns add xchg jb jmp sahf jle cmp aad jl orb dec cli lea loop (bad) lods ficom sbb pop ds xchg out or cmp scas addl (bad) cmp aas lret push movsl rcll sub mov push push inc cmp loopne lahf in sub fsubr push and inc pop mov dec ljmp pop into lock idiv repnz in movsb fisubrl pushf add scas movsb and subb aaa loope inc repnz loope mov mov mov loop jbe leave jbe daa cld sahf jb outsb aad repz lret push icebp add mov int jecxz (bad) pop fwait loopne or dec push repnz xorb outsl fistl pop or push pop push sbb push sbb (bad) push in cmp pop and arpl test or and test in lods fistp add sbb (bad) call xchg or testl cs sub add xor mov mov dec sti sub jle jae or sahf call cmc xor mov aad rcrl and mov test fs jg setl into and pop push mov shrb jb xchg push xchg mov into jl lret cmc mov sub or sub shrl cmc pushf xor cltd pushf scas mov inc jmp sarl in mov lret pop int3 cli ja mov mov std xchg mov loopne rclb push mov dec test outsb je lods out daa jmp mov push sub sub (bad) es and icebp inc ret ljmp pushf outsb jo sub int3 cmpsl xchg or fstpt (bad) push mov je fs and xchg rorl push stos push das ljmp push (bad) push ror mov mov cs es ret test mov mov cmp jns mov sbb out (bad) popf lret inc pop mov test aam addr16 divl fimul dec cs sub out xor cmp mov das int3 out pop pop jb ljmp mov sbb push stc leave icebp ss dec repz add negb pop in jo sbb orl ds jnp cmp sub jbe popa in sub lea jnp arpl dec and loop mov icebp bnd mov movsb and adc adc mov or dec icebp out ds sub out xchg das lahf (bad) sub das loope,pt jg jo notb clc lret (bad) fdivrl add rcll or and popf sbb (bad) out add (bad) sbb (bad) int3 push out sahf lods imul dec jle fidivl (bad) jmp sbb mov and out inc fild cmp imulb or enter xor mov gs cmp test sub cs std add pushf sub pop mov cmp dec ror js lahf fwait sbb sub out cmp and mov std ret mov rorb mov shrb push cwtl jns lret adc out mov cmp add out sbb (bad) rol add or jmp xor js les repz mov sub int3 mov xor or or (bad) and or fistl mov pop fwait lret xor mov push iret mov leave ret aad xor pop (bad) jno push jg adc or dec aas imul (bad) int3 sub in and pop jle mov and pop (bad) lcall sbb jp cmc xchg out or (bad) inc mov inc or push cmpl mov hlt ja or shll test add cwtl push iret pop mov push pop pop push mov dec mov out lock cmp cmp and adc xor loope loop pop jo pop or xchg into mov imul push (bad) xlat insb fdivs mov add mov pop lds sahf icebp out lods mov xorl test pop add add jo adc sbb or fstl int3 cmpsb xchg inc inc mov push add (bad) scas movsb add popf pop mov jge nop icebp lods clc mov pop shlb mov pop cwtl inc and (bad) into lcall shll js and imul xchg cltd mov or test xor add push fcmovbe jns sbb and out adc cltd pop adc add roll fildll shrb fisub pop jl (bad) mov and dec lret fsubs or add cmp repnz mov std mov sub (bad) jns aas mov rcrl sub movb push out push pop jmp add out sub push mov lahf movb adc enter lret xchg imul and (bad) dec (bad) negb adc sub push jmp ffreep aad ret mov mov xchg repnz cmp xor mov jge inc sbb lock sub push lock cltd sahf imul jge pop and sti bound inc mov into and imul sbb je xor and or (bad) xor ret push push ror pop xor gs and hlt xchg push jmp sub pop mov cmp jne bts or xor jns mov xor xchg xchg idivl jmp or cmpsl loop push stc jae adcb mov ljmp sub icebp iret and test cwtl movsb xor aam jmp xchg imul mov sub adc mov xchg mov xchg (bad) mov mov jmp xor push xlat call mov cmpsl dec push popf movb (bad) mov mov les mov fwait movsb push mov and pop adc xchg pop cmp and scas inc (bad) push jl push mov add xor decb xor or aad lahf sub loop sub jl add mov scas inc xchg scas test pop dec loop or sbb jp mov (bad) fadds or scas sub mov push push jmp and pop add and test dec pop test inc push sbb lcall (bad) cmp dec mov cmp (bad) jae and fs call out fstpl ja or push xchg js dec repnz sbb jg xor pushw inc nop enter daa (bad) pop dec into mov popf cmp scas xor and shlb add das scas push push mov xchg dec and or repz popa clc mov dec aaa jnp add imulb fs cltd jno mov ja rolb xor imul lret jmp mov mov and les insl xchg shlb pop mov mov sti dec cmp adc cmpsl jecxz xchg ljmp pop pop int3 add cmp fisubr (bad) fwait cmpsb das jbe add mov pop aas das loop mov (bad) pop pop jmp and enter push repnz cmp inc sub shrl cmp scas ljmp jns outsb mov icebp and cli mov aas into dec lret shrl pop in jle ret and popf stos packssdw ja lea dec mov push (bad) dec js sub mov (bad) ret jbe add cld add call js xor pop call fcoms fwait inc or clc cld or add push rorl inc lret sar sbb push add popa ds movsb pushl or clc popf lods movnti out repnz xchg xor subl lahf dec sbb xlat cli ljmp fsubr add add xchg pusha imul pop std insb mov mov je loop or jne (bad) xor loope outsb call lret pop and pop or sub push (bad) repz sub pop dec add sub mov ljmp mov lds adc or dec mov add inc and lret mov inc mov mov (bad) sbb mov rorb fsubrs lret mov push data16 xchg negl mov xlat bound and ret sub das mov cli lods arpl pop xor lock ss xchg leave fs lahf divb add idivb add popa push or imul loope jg sahf add push dec outsl ss rcl lock cmc test test dec mov inc mov shr fwait dec cmp xor outsb adc dec (bad) test sub sub movsl ljmp and testl adc and rdmsr leave jmp inc popf jl out inc imul shll leave ja (bad) neg dec mov (bad) test dec xor repz mov call cmpsb leave mov scas decb push jmp cld lock sbb mov push and or add mov leave decl mov movsl les into push ds je or repz pop jmp sti lret sbb js cld call js push lds jmp inc mov jbe cld pop into rorb xlat mov test adc test ret ja (bad) lret jne push test sub rcrl (bad) sub add jp sbb mov or jmp lds dec stc jge cmp int3 cwtl fistl ret sub mov sub jno xchg aaa rcl sub push mov sub xchg cmp sub fstps inc arpl aaa xchg lock or fsubr icebp xchg inc sbb sub mov jl xor fstpt xor mov int3 popa adcb jle les sub bound btc sub incl pop and sarb adc sub mov and mov imul dec push add test daa xlat cli push cmp and xchg das push das jnp das fs and sub cmpsl push dec daa fcompl push jne or scas fcomps cli mov push xchg add inc sahf xchg (bad) mov dec or and add scas rolb lods rcrl sub sub dec and pop sub pop sub into mov aas (bad) imul sub test daa (bad) dec push je dec shl sub xor rcr lahf lods and popf pushf xchg ret mov int3 aam notb push aas scas lret es sub clc lods xchg adc repz test pushf in aaa or xor inc dec add pop mov sbb sub adc add repz adc repz xchg imul adc repz mov popf ret push leave (bad) or xor jle sub (bad) sti mov idivb sub clc push jecxz sbb das xor pop cmp mov daa adc fbstp jnp xchg mov or xor push insb stos test repnz jb nop leave inc mov push fldl mov nop pop int3 (bad) xor ret (bad) into sub js (bad) xchg ret jge stos jge inc idivl in mov sbb jle xor sub inc imul dec test pop and cmp and jo sub dec xlat rcrl fistpll insl and sbb jg es push pop imulb jo movsb out or and cld add inc icebp loopne lods dec mov push push sbb or std sti xchg scas (bad) sub out pop fidivr push jno imul dec or xchg lods das mov xchg out nop fsubrl xchg lret out or fildll and scas lahf cltd pop mov lock add inc mov shr lret shll jb stos and iret push or add and leave test imull in xor ljmp mov out adc lahf mov or pop pushf jecxz bound jo adc pop ss sub jne jb aaa jne aam out sub mov fsubs inc dec inc je sti repz adc and daa lret fisttp push xchg or (bad) call xlat adc mov xor or jbe popf clc sub lds xchg jmp xchg out lahf fadds add pop (bad) push sub ret mov (bad) pop sti xchg rol lret pop ds ret popf push loope xchg test retw ret (bad) stc adc fsubl sub jo jmp cmpsl cmp pop ret jg sub and sub xor lock dec out mul shr popf xchg fist lds adc out mov sub dec ja pushf push call mov cmp sbb inc rcll pop ljmp push push pop jp cwtl mov not das dec (bad) (bad) jns jp test divl fwait pop repz (bad) dec jne xchg fcoml adc sti cmp jg ja or loop (bad) cmp sub je bound jmp es adc aaa pop inc mov xchg out (bad) in imul test ret (bad) and lahf mov fisttpll mov lahf or pusha pop add jecxz add sub fucomip fstpl dec jmp lea and adc pop push scas (bad) xlat or add mov push movsl mov (bad) cld int3 or sub es add sbb ds popf jae pop jmp jmp jno adc or (bad) sti jle and cwtl ds lea mov in pop enter bound fs or roll pop mov lret and mov jg inc pop jno leave push lods mov nop inc sub or mov popa iret sub pop jle enter or lods cmp ljmp xchg pop and add into stc into and xchg fs cmp loop jno mov sysret dec cmp and sbbl adc and dec fs xor mov lret pop pop int3 mov (bad) call push cltd jnp inc and ljmp xchg jmp shll pusha sub or in cld (bad) mulb cmpsl or jns inc div push and mov and sub mov pop mov lahf and mov pop sarl pop adc xor data16 adc clc cmc icebp add xor iret and add mov pop and test lds popf out aas daa and push fistpll repnz add add jnp bound jbe daa loop xlat push cmp (bad) mov xor lahf pop sub (bad) ret stc add scas fmul ljmp sub xlat nop add dec add repnz push xchg inc sub pop inc jns cld out lds fldt rclb cltd mov pop xlat loope jnp dec (bad) cld scas pop sub pop inc mov xchg add in leave data16 push clc imul icebp (bad) fist out rcl or or cltd mov xchg adc add pop ds lret lock push scas clc (bad) mov sbb idiv cmp sub aam stos repz xchg mov pop sub push push mov and lahf jl lret sbb push jno pop and rorb std lret mov sarl mov xchg dec push (bad) push daa loop std into mov clc (bad) lret mov aas bound negb and and repz adc scas or out dec test adc xchg jmp fwait call clc jne scas cmp (bad) (bad) dec ret mov movsl fdivs pop das out sbb shll aam xchg (bad) mov mov cmp repnz mov lret mov add add aad add adc call sub clc push repnz add xor daa or xorl mov in scas fs stos jo or mov push add or sub fsts fisubrl or icebp jmp ja push mov jmp cmp dec scas dec mov or dec sbb outsb adc sar std (bad) mov add mul xor div or or cmp (bad) mov push mov jmp mov nop fstl mov mov lea or jmp inc mov out mov mov push mov and mov fcoml (bad) xchg jne,pt cmp (bad) mov mov add xor dec sarb push xchg push xchg sub data16 movzbl addr16 push pop into fstp or fisub aaa pop add lods sti test sbb scas sub push das or pop inc add add mov jb mov loop jne out or (bad) bound ljmp cmpsl or loope cmpl jno mov imul je imul shr fistpl mov dec ret pop pushl or push sub mov and cmp hlt out jle lret data16 lcall mov das cmpsl (bad) imul adc add fistp push divb adc adcb repnz gs dec jge push gs stos les push adc fnstenv jmp lret mov mov aas adc dec rorb int3 push xlat sti aaa xchg jle bound push pop adc jno loop jge jge out pop pop gs stc lcall fwait dec ret mov neg scas imul mov and mov xor ljmp add fsubr repnz ret lret int3 cmp and mov sub sub pop mov iret mov mov jl push sub mov cmpsl mov (bad) jg cli fidiv xchg xlat mov jmp jb xor int3 and shr movsl stos mov rcl inc mov jp xor lret stos adc scas test (bad) mov popa nop call aad pushf mov xchg xchg popa pop xlat inc mov or ret sub mov ds xchg jmp movsl add dec insl std sbb clc (bad) mov or mov (bad) fildll into sahf sti and adc or mulb xlat xchg inc inc or lds repnz nop repz (bad) mov iret mov and push mov adc xchg jl push sahf arpl loope sub clc xchg pushl xchg cli and mov gs fs test inc call mov and in xchg enter test (bad) (bad) mov popf int3 out ljmp pop in rorb pop push sbb mov sub push push je out pop lds mov cs and sub mov into sub stc mov cmpsl or cld pop ret jge xchg and divb jmp mov lret jp (bad) cmp add add sbb and daa enter adc sub fcmovnu imull mov mov pop das roll push or lods pop cs inc cmp dec lock add jbe loop add dec fs xchg sti cwtl and xchg jno (bad) add or pop stc dec sub and push sub cmc jmp mov cmpsl inc (bad) stc (bad) sub loopne inc add xchg xchg out vpminsw dec (bad) gs xor pop mov mov ret inc jmp xchg mov pminsw add cmp stc mov cli leave ret cmp mov pushl mov movsb imul popf hlt (bad) imul repz mov jle inc icebp xchg repz or lcall and daa and jge fs popf adc mov lahf sti movsb lret sti sub add and sbb mov hlt das and fnsave or inc into imul js dec mov pop pop jge xor outsl cltd mov (bad) stos fist out inc das jmp push lret inc jge jno enter in and inc je imul aas or scas lock repz sub stc inc nop lcall xor lret jno pop cmp inc sub sub pop mov cmp (bad) test inc cld imulb aad sub jp sub popa nop and daa add inc sub dec push popa ja sbb in dec lret aas pop clc enter or pop cmp ss aas push leave and push mov cwtl lods (bad) popf insb in mov sub jb repz jb arpl daa lret loop out das andb pop rcrl mov out sub mov push test flds add cwtl sub cmp mov repnz sar add cmp pop nop nop and ret add xor sub push jl lret push xchg push ljmp pop subb int3 adc mov mov pop int3 adc lds add mov data16 and add cmp imul or xchg sub mov xchg sti pop mov sbb add cmp push inc aad jmp sarb int mov pop adc or aam inc rcrl aas lahf stc ds push ret test repz or add sti and xchg jae das pop sbb data16 push repz (bad) sub mov pop and cmp cld daa dec dec (bad) fdivrl repnz mov or call adc xor mov (bad) jmp pop movsb aam mov pop or popa shrl xor iret aas cld cmp adc fs ret mov lods dec mov and dec mov fcoms or xchg or mov stos lods outsb fldcw ret and add sti jl cmp fadd ret add nop or cmp inc and mov sbb cwtl shll inc or add mov fistpll pop leave out sub mov leave or (bad) leave repnz test stc lods mov fstps or leave cli and insl mov and pop dec pushl xor cmc repz cmpsl inc adc adc push xchg rorb lret enter pusha (bad) mov bound sub add mov inc and jno adc ret push dec jecxz mov add xlat or stos fnsave add add mov test jns dec iret mov outsl mov lods mov adc push sbb rclb in or mov push inc and data16 xchg je ret pop push mov xor imul outsb mov or add sub into ss xchg repz bound scas mov or stc sub push push xor add ret mov xor mov sti fmul jecxz xor add sti rorl ret and or or jne cmp sbb or mov push stos sub mov jne dec jl and pop push testl xchg sbb iret js xor mov mov mov clc std dec mov mov sub pop pop jmp or or or aas test movsb stos les sub imul mov rolb out xchg std in out sub dec pop sub and movsb outsb pop or cmpsb mov mov xchg xor sub jbe mov popa inc scas sbb negb pushf popa imul sarb stos sub push mov aaa mov jo loope loop test repz cwtl imul sub dec inc into pop push (bad) sbb (bad) ds shl mov jg int3 sarb lret jnp test jle ret (bad) mov mov int3 push out jecxz dec mov lahf xor aad mov pop lds or mov cmp adcl iret mov jbe (bad) ljmp pop add out pop jl lret xchg sti pushl xchg jo sub push jmp js jae je cmpsl lods pop and in (bad) sti test inc and rorl in mov insb pop loop mov sub cwtl push and mov xchg inc dec pop (bad) and cld lock sbb dec and add mov das movsl nop mov sbb mov xchg pushl (bad) mov xor and std xor jge add test imul or lock add cs push out or sbb lahf aam pop xlat xchg lods fwait out lods (bad) mov mov sub lods and dec clc jns das push (bad) and and push je (bad) ret mov pop icebp fnop cmp add jmp test dec (bad) fnstenv xchg pop pop or (bad) sub push scas jle (bad) pop adc pop xchg popa (bad) sub movsl fsubrl pop leave adc out sub mov cwtl jecxz jmp adc push pop xor inc (bad) in xlat mov sbb fstp test mov out repz add and push mov xchg pop xor mov das xor fistpll mov aad outsl cld lcall xchg pop sbb xorb in lret adc mov dec leave fsts push xchg loop stc xor pop ret imull ja (bad) leave and sub sub push roll or jbe shr jne dec or or add dec aam dec fxch sub push mov xor mov gs jmp sub sarb sti fimul mov out and push add xchg sbb test cmc xchg divb xor mov fwait rorb or sub pop stos jge sub das xor test std mov lods ds xlat shrb sti sub and (bad) xor rclb cli mov push int3 mov inc sbbl into mov loop mov push add icebp jp fnstsw (bad) sbb in mov out sub or lods nop dec popa inc sbb test mov cmp push leave dec inc inc and lcall out daa sub imulb dec add mov mov xor or out sbb xchg lcall fucomip fcoml pop push je rol or cmp cmpsl shrl bound stc xor loopne loop sti int3 test cmp mov mov test js repnz out push xchg rcll inc add test cmp adc in cmpsb inc fs out mov sbb aaa xor sub or jg cmp cmp fwait leave sarl or mov sub xchg sub stos sub xchg fisttpl add rorl nop sub and cs call and mov mov pushf mov mov mov push (bad) ss call js pop enter and stos movsl icebp test or data16 inc into mov (bad) nop lret and fwait mov (bad) test jnp pushl inc fldenv setge jo out dec add (bad) (bad) aas mov ds shl xchg pop ja fldenv lret or sub xchg inc adcl push add arpl ja cmpps in xor repz repnz mov test add pop inc xchg not popf sbbb pop gs mov inc sub aas icebp in pop pop in adc (bad) cmovg lods ds jmp sub lock loopne fisubrl and adc mov les jmp addb popf and sarb mov cmp dec in xchg xchg stos cltd int3 mov idiv ret (bad) lods jnp mov add les jo (bad) xchg shrl push (bad) out int3 in stos mov test jecxz out cmp shl jge push incl std pop out add or xor je (bad) sti jg push aaa mov call add scas prefetchwt1 or pop rol sub mov and sub sbb jg roll push mov in ja or pop mov pop xlat bound push adc mov mov into xor push and pop and ffree ja stos add sbb rcll orl into pop push sub mov dec ljmp fcomps dec ret mov pop and or jae inc jbe and mov dec mov (bad) add pop mov pop jbe dec and sbb loopne sub mov sbb (bad) lahf inc push mov add imull fsubrs sbb lret pop nop int3 or xor push or mov jo pop push push sti outsb repz leave mov pop pusha fs pop gs loope sub test lods scas movsb mov mov pop loope mov or sbb jb in mov stos iret cld cmp or dec push lods sbb inc call mov jmp or pop les lret dec sub leave (bad) sub mov xchg sarl out sbb mov repz inc movzbl push (bad) push lret aad mov stos xor sub pop lods pop popf fisub adc mov in and scas adc into call (bad) mov xchg mov dec dec lret loop (bad) repnz push mov xchg sub or iret scas xor cltd jbe (bad) xor add and fisttpl (bad) sub mov pop scas fcoms mov je scas or mov ret xor add mov call insl inc icebp mov mov pop movsl movsl xor add shll inc and out and lcall into jbe push jmp bnd cmpsl sub xlat movsb in or aas adc or lret mov jmp add mov je pop inc or stos adc fimul push test and pop pop mov pop into mov lret xchg cmc adc mov add push or pop and cld push (bad) push lret fstl or mov data16 je jmp sub mov or mov dec xchg (bad) or or ljmp xchg lods or inc dec push pushf mov jbe lock inc adc test mov xchg xor (bad) sti mov add pusha and and xor dec sub repnz mov int mov mov cmpsb sub fcom in mov push popf jbe pop (bad) sbb popa out jmp mov inc mov lret sub into jl loop cli sahf clc dec push inc stos add enter jg das in sbb (bad) scas push pop je dec push cmp in or mov (bad) xor add sub stc (bad) sub mov lea sub lea mov shl (bad) sub cmp lea rcr cmp in ret pop cwtl sub leave and add and (bad) (bad) repnz sbb shll mov jl push dec jae repz fstpl and mov jle sub mov and xchg pop (bad) out jo (bad) sbb dec lods call data16 daa (bad) mov repnz ret decb xor fbld or sbb add push cli or out and inc push enter xchg and arpl fstpt mov cltd push ljmp js call out popf sbb shll pop jmp sbb pushl fxch sub insl push push push jecxz adc imul fmuls and lock outsb aas mov enter mov ret popf dec add daa cmpsb dec and or jnp stc sub or dec (bad) xor pushw adc add push xor aad sub cli xor xchg les ret pop pushf ja aas nop fsts add mov xor popa aad (bad) jno pop xorl adc bound pop or ret xchg jb into pushf xor and fcomip or (bad) and mov push xchg call (bad) xor jl leave jb in mov mov pop insb cmp mov into je leave xlat xor ja fistpl and sarl imul push push repnz jecxz sbb sub popf mov repnz xor or mov iret lret jno test pop xchg jle mov ffree rcll mov ret push inc jno mov xchg in pop inc mov shrb and xchg xor cmp nop push dec into scas xor jmp std xor add movsb mov mov or jmp adc dec sub or stos xchg pop xchg xchg fdivrp add je jb pop dec imul call and mov (bad) imul jg mov or sub iret and xchg cmpsb mov ja iret out xchg lds mull scas mov cmp jo daa ret mov insb jecxz out xchg dec dec (bad) xor stos jl leave xor (bad) push (bad) adc jne cs movb or xor movsb push mov sub (bad) mov pop xchg and pop sub inc out (bad) push push loop pop xchg push (bad) das neg add (bad) jp push cmc into bound mov repnz in push mov lods and subb js sahf int jbe bound (bad) push sbb and jge out and mov pop js dec pop lods lret lret cmp dec pop inc mov sub jp mov xor int cmp add jle (bad) xchg test (bad) jge jns or pop mov ret pop in xor jmp aaa aas (bad) into mov ss aas dec int3 cwtl xor cwtl aam into test (bad) and mov pop pop cmp call mov adc add push sbb mov das lret xchg jg lods adc or or loope mull (bad) jne popa push out or push inc stos mov and mov cs inc movsb rcrb adc or cmpsl daa sarl dec lea and mov ds mov fdivs std xor jge fdivrl call mov out dec test mov scas popf push lods or mov sarl ficompl inc cmp adc mov (bad) fcoml pop cmp iret repz pop cli xor divl xor fwait cmp (bad) out mov mov fsts pop or shll fiadd mov mull inc xor (bad) push xor (bad) fstpt repnz xchg push mov jne jge add and mov or add imul test sub cld cwtl enter daa xchg arpl sub or shrb jmp pop sub push jns test cmp pop sub and adc push inc jp leave mov mov iret scas cmp es int3 xor or in or sti fxch add xor sti and and insb dec add jg dec leave pop aam push and lahf int3 or repz gs add arpl adc stos mov push rorl xchg and mov sub data16 shl dec pop (bad) pushl pop icebp fstpl pop xor test repz mov clc mov clc stos mov pop and fdiv xchg cmp adcl push jle mov xor in (bad) aad pop ret mov and icebp jbe cld fmull es add mov adc jno inc mov xchg dec jmp (bad) xor push test add je scas in adc test mov inc push loopne ja jmp sbb mov sub mov xchg adc in inc test cmp (bad) fldcw and testl mov add scas divb mov jno scas js fldenv push outsl movsb test daa dec adc mov sub mov iret and into mov das repz pop repnz test ret jmp mov mov imul out pop incb repnz pop (bad) xor ret subb xchg test call ja fmul add in push mov hlt imul push inc pop scas dec jne arpl push ret jmp and addr16 movsl fadd daa ret in xchg mov sub shlb subl adc push sub test stos lret sub or mov cmc sti mov add rcl mov das mov jbe lret divl fstpt jg inc xchg mov push lahf imul rclb dec mov pushf add mov jp jns leave ja pusha cmp lsl out dec fcoml mov jb and push fcoms cwtl imul mov das xor cmp rcr push inc icebp push sbb mov jae cmp rolb lahf in or inc sti xchg (bad) xor sub push je inc je into mov jmp sub mov fist shlb xor xor xchg pop adc loope sbb sbb andb imul and inc cmp push arpl ljmp jmp adc nop pop mov pushf rorl push (bad) leave cmp cli or and sub jns leave icebp test lcall iret push adc insl rcl clc and mov pusha mov dec into fs mov loope jbe mov mov xor push push adc lods mov inc mov adc aad scas mov push incl ja les cmc pusha mov mov push xchg mov push mov ud1 push test inc xor daa jge ja and iret xor add shl fisubrl push test in popf cmc add xchg lcall mov or mov pop cwtl jmp push shrl out adc add icebp lock in popa jle imul outsb push outsb pop or push mov push adc (bad) pxor loopne push pop popf fstpl mov xlat xor push cmpsl enter xor sti jnp (bad) sub mov stos insl gs (bad) (bad) icebp fwait cmp lret ret insl pop fidivrl imul sub mov not ret sub or out pop pop push insb je jb leave push and push es popf pop xchg loop fnstcw and inc adc sti jle daa cli xor jge pusha cmp mov fs repnz or xor mov (bad) ljmp jne or and and subl int3 and in cmp testl stos inc loop out jb (bad) fs jbe xlat pop cltd movsb bound repnz push mov push ret test jmp jns inc and pop adc cltd bound test les shlb mov mov imul jmp pop mov cmp fstpt mov pusha dec sub lret cmp or add out movsbl inc aaa pop lods rolb sbb loop jnp mov push ja xchg pop or sarb lock mov std fbstp mov pop push daa and sub lods cmp add lret and mov add mov test mov (bad) mov data16 les jmp mov sub sub sub fdiv xchg or sub int jg (bad) dec ljmp ret fisubrl icebp push test les mov into jmp adc pop lods hlt movsb and pop les mov adc int3 jmp add js sub mov mov lds mov mov xchg cli ret xchg outsb push mov das roll xor inc movsl out mov outsb jmp adc dec ret lret dec lock test or cmpsb push je xor mov clc jae adc int3 (bad) add bound fistpll (bad) fdivrl dec mov jmp inc bound (bad) push lods pop xchg cmp and xor sub and mov ds and clc les (bad) mov sbb sub sub add orl (bad) in xchg std cmp dec jecxz sbb test dec push lret sarl iret adc iret mov clc jp jl add sub push rcrl sar fnstenv stos jb adc jl leave ja cltd mov das fldl imul into arpl pop or xchg push loop inc xor pop rorb fist xor fucomi (bad) (bad) mov and fdivrs jp and xor ret stc cwtl xchg lret aam cmc sbb add jbe pop sub subl sub sub dec div fisttpll mov mov data16 dec enter fnstcw push sahf dec lea pop add push and rcll xor push or mov push dec ret mov pop add (bad) xor cmpsl ja negb aad mov xor or dec or mov mov jmp (bad) imul jb sbb outsb fs mov fnop test push test gs mov xor mov and int3 dec sub mov call (bad) mov adc (bad) jbe pusha add out mov les scas test add jg and jns,pn mov mov pushf mov mov jmp or cmp fs enter pop addr16 or test cltd pop and mov sti das adc mov adc or out and jo dec sub push pop mov repz kortestw mov mov lock xchg gs scas sarb ret cli xor jno or scas je lods xchg pop xchg xchg mov xchg (bad) inc mov out add jnp movsl cmp test and or push (bad) mov mov in in hlt addr16 jmp push dec bnd mov xor and mov xor iret jmp (bad) xchg out mov das (bad) (bad) pop leave jne adc shr adc dec pop mov repnz leave and add call stos lahf gs sub jnp vmsave repz clc or sbb mov aas or int3 scas adc sub sbb add adc mov out xchg js mov lahf in xchg int3 adcb fistpll add sbb xlat adc and les les mov cwtl ret dec push xor cmp pop (bad) (bad) sbb cwtl idiv inc push xchg loop sub pop test movsl cld xor es sub mov pop and outsb pop add inc xchg (bad) cmc (bad) dec xor xchg rcr xchg jbe cmp test shrl clc add cmc dec adc inc movsl mov jne mov mov faddl outsb aam sub mov out cs loop jge mov iret addl add adc xor adc loop (bad) sub sub out cld sbb mov sub int inc pop fnstcw sub mov pop lds in and adc add mov enter push (bad) fs mov mov dec inc pop sti out dec stos popf jbe push dec subl inc and pushf mov add mov mov mov popf hlt loop add pushf sub ss mov mov icebp in imull ror jns inc mov (bad) (bad) leave je sub xchg shlb (bad) or or stos xor sarb sub imul movsb and jg add dec add fimull (bad) fistl add nop das xor mov sbb dec and xor and (bad) aas mov xchg dec push add and scas mov lods out xchg lds pop sub iret fadd aaa hlt repnz je cli arpl or push xor cmpsl push in fstps lods loopne ret pop popf mov sub xor icebp sbb mov dec xor repnz fucomp jg add sub add jbe shr pop push sbb sub and add sub mov dec iret sti xor lret sub sub inc enter sub les lock dec enter mov pop aam pusha pop (bad) dec sbb pop movsl cmc xor sub sub insb (bad) leave sub test loop jge cltd es sub xchg sti jno stos fiadd popf into and mov mov loopne cmp jmp xchg (bad) lahf fldcw lods mulb xor (bad) shrl pop adc push add xchg hlt inc xor rcll inc lock idivb xchg shlb mul imul shr ljmp imul sub jg push out aam mov js sti out dec jmp mov shl pop push (bad) mov fsubrl cmp fldcw stos testl or xlat push in roll cltd iret int sub or decl (bad) xor negb xor mov pop jae push add mov sub gs xchg ret mov bound push pushf scas lret jb jp,pt push add popf pop jnp cs scas adc cli int mov pop flds ret test ljmp imul or sub stos sub cmpsb xor push insb pop xchg cli cmp cmp mov fimul sub je push sub inc mov cmp xor push mov pushl lahf jle inc cli scas cld xor jmp jmp lret cmc cmp daa push loop lea shr popa mov or xor sub scas arpl mov (bad) mov pop xor cs xor out lods mov mov hlt jns pop data16 (bad) xor ret in lods repnz mov das sub imul lret iret in das push sbb pop pop jp sub sub xor stos xacquire mov mov ret jns std test fisubrl fcom fidivr mov dec icebp shrl fnstcw and mov xor lahf divb fmuls ret push xor sar adc sub jecxz dec mov mov enter negb xor mov push mov xor stos loop xchg clc or aad mov shll and loopne enter jns inc mov repz test sbb sbb mov add pusha ds outsb jbe leave mov pop push jne pop inc sub xchg call insl (bad) fnstenv xchg enter das and mov (bad) (bad) ds adc sti jp inc aas mov fdivr add xor aam push mov ffree or xor sub sub add push xchg pop xor pop (bad) dec jp inc or (bad) push int3 xchg sub pop sub dec (bad) scas fs add push lret sbb push stc xor stos aam push das xor adc rolb dec dec daa mov cmp es into sub (bad) dec push or adc cld popf (bad) fldt pop ljmp out lahf (bad) or in ss sub ret out rcrb imul into add pop push pop jl imul inc pusha push dec out les stos sub sbb or push std sub xor and in or rorb sub (bad) fistp lret pop and scas adc iret pop adc imul cwtl pop inc xor flds jmp cmp aad lahf aam stc or test pop stc (bad) xchg (bad) mov loop decl mov lock pop mov push jne push lods negl jg notl sub fsubp pop sub outsl call insb imul das (bad) movb dec push mov sbb adc outsb leave idiv xchg pop mov dec out mov daa xor add dec not movsb push sbb clc jne daa jo and sub aas add and das mov pop push pop leave xor roll mov jmp loope cmp mov dec jl les out cmp add mov cmc mov sahf pop push (bad) mov scas pop pop into add aas std or scas mov daa or pop add gs (bad) loop pop les fisttp and scas je mov cmp add jp sbb or pop xor gs mov dec and sub sub add enter sti push sub fbstp into and fldcw int adc lahf sar pop push in pop (bad) jmp mov dec xor int3 js pop fmuls jle adc mov jle or mov push sbb ds loope ficoml repz (bad) cmp enter jle je jbe popa sub mov dec out pop jmp (bad) jne jl icebp xorb mov and inc lret in xchg and lock or stos mov das sub jmp mov dec mov or and (bad) ja cmp imul inc lahf sti mov jle (bad) popf in xlat xchg cld (bad) pusha sub jmp sub jno movsb jl test cli (bad) mov mov add ret pusha es or loope dec aaa sub pop lds sub cmc mov into sub lods out insl ret xor push fstpl xchg stos xor repnz or mov out pop mov fidivl sbb push xchg roll adc jne call imul sub pop sti sub or inc xor jg testb divl leave out movsl xchg mov mov pushf (bad) outsl std push xor mov clc cltd mov stos in xchg mov dec (bad) lods or stos xchg mov cmp add inc loope inc mov pop and (bad) ljmp add add test out das or push and adc fmull xor leave jno pop and mov add adc xlat mov adc xor and sub fs xor and mov fistpll stc fnstenv cld movsb mov or xchg mov ljmp xchg addr16 xchg fistpll jne loope sub xchg ret mov mov mov popf cld movsb inc orl pop data16 xor push dec stos or ficom cmp inc mov fs negl stos jmp in pop mov leave rolb ljmp test and jbe and mov adc and adc dec pop xchg jnp (bad) rorl mov stc scas adc and incl cli les lret nop (bad) mov nop scas (bad) imul push inc push xchg out fistpll aaa adc or dec jo mov ret test (bad) pop inc jge leave std loope sub das pop icebp fdivrl add sub (bad) idivl sub mov pushf arpl sub and inc adc enter mov mov push jnp mov mov test mov jg je dec imull mov pop daa sub fs jne add cwtl lock sbb add sub stos pop cld jo or or (bad) hlt xchg loopne mov xlat and (bad) xchg jbe inc test (bad) xor out int pusha cmp (bad) jg iret xlat jmp adc pop je loope cli add sub xchg fs mov xchg fistl xchg adc cmp adc ds popl mov call mov das je sbb and cmpsb jmp (bad) and pop mov xor dec lds sub pop flds (bad) stos adc (bad) push jno cmpsl (bad) enter push sbb aam jmp sub cmp aaa outsl mov inc mov loope imul leave and mov gs adc mov xchg pop ror sub test push int xor ss js into sub jg shrb add pop cld push push dec test lret sub icebp sbb jp sti or sub in adc xor adc (bad) mov xor sti xor mulb rol dec cwtl outsl loope das mov (bad) push pop sub (bad) stos lret and pop push mov movsl jecxz adc inc sub add in imul idivl loopne out inc das add pop mov ret lods cwtl add sarl dec adc adc cli lock xchg dec lgs jb dec enter pushf sub pop add inc sub arpl daa (bad) jl iret ror mov jle jns sub sub cmpsl fwait push or xor pop pop mov add or jne jle subl fwait sahf daa out push gs lods nop pusha or mov jmp xor arpl clc dec dec mov sarl ds movsb push add imul and ret jmp adc iret stos xor stc push loopne movl mov jno (bad) sti sub xchg repnz mov imulb adc jne int3 push (bad) sbb mov sub lock pop ret stc lret arpl ds dec mov ljmp shrl ss lret mov xchg imulb xlat mov out cmc ja das inc sbb add repz fcomip mov xchg lret mov sub inc mov push outsb push sti jecxz pop enter xor int3 jle xor pop pop jmp cli mov insl mov push and ljmp xor mov movsb ror and add scas or icebp or mov insl push fcmovu jg mov enter arpl cs int3 mov inc cmp cmpsl call inc add fxch inc sub jbe leave insb sub and mov mov shr add add lahf jno jle mov test out mov pop aam mov pop test loopne dec pop and push mov and xor repnz mov pop push gs mov and jnp fwait pusha ret iret movsl enter aas shufps sarb rcl push push add loopne jmp pop push mov inc mov das loopne add adc inc sbb sub xchg push clc mov out sbb repnz sub (bad) cs adc xchg out adc push mov add rol lods loope mov cmpsb add in (bad) push push jecxz xchg jmp loope ret in mov push add mov imul insb xor std ds xor lret push push pop push fstp lahf adc test pop push push and ljmp jmp movsl mov push adc cmp mov mov xchg orl stos mov loop pop mov icebp dec cmp xor push (bad) test iret or sti lods les into push jo scas jb dec ljmp scas movsl test daa inc mov fsubrp pop lahf sbb and mov in fwait xchg jb jmp mov out roll and xor lret pop in jp fcoms inc push dec je imul incl ret xor mov (bad) mov movsb imul add push stc pop xchg mov dec jmp int3 pop sub mov mov or xor loopne or daa idivl out sub movsb (bad) (bad) fsubr mov mov adc sti fcom (bad) pop push jne enter fdivs lret fs and das jge (bad) aam and mov sub cmp sahf lret incl sub (bad) pavgb pop cmp pop cld inc (bad) or jg mov insb xchg dec idiv int3 lret popa mov xchg (bad) mov in lods sbb iret lock movsb int3 call stos outsl je mov and sub mov jns adc fnop repz mov lods mov cs sub movsb and dec cmp and sub mov out xor repnz inc xchg test (bad) adc pop pop sub repnz mov sub xor std ss add out and mov into icebp xlat push inc xchg cmp in xor (bad) push fs int3 (bad) call or ljmp cltd push shrl test fnstcw ja mov or add xchg lret pop daa xor push (bad) scas fs xchg popa movsb ret mov jbe mov cmp xchg mov fisubrl (bad) sub and popw mov mov mov les inc mov out sahf mov and pushf mov call and cmp (bad) pop lret xor sti push dec stos mov adc lret mov dec bound std mov xchg adc add or cmpsb mov cmp and jae das or setae push mov sahf inc (bad) pop and test fsubrl mov lock mov scas aaa sbb push cli pusha lcall sahf (bad) out imul pushf pop dec (bad) mulb or cmp test jmp pop and test fistpll and std xor push mov into lds or sbb loope mov (bad) mov out sub ret cmp inc leave xlat pop outsl dec xorb xor mov pushf or (bad) jmp lds std loopne ret leave out fs in add xor jle sahf stos mov movb mov cli mov dec int (bad) jno scas sbb sbb sbb jbe adc scas mov stos mov cs or pop xchg sub and leave cmp push arpl xchg (bad) jg lods aam (bad) mov add push pop xchg imul sbb pop daa repz repz sub cmpsb adc es mov sub jecxz mov shl mov jmp add mov push fldl xor loope imul into mov dec in adc inc test pushf jp xchg cltd or pop pop aad cmp aas xor (bad) jge push lahf sub leave adc idivb daa out push repz repnz xchg jmp jb scas push mov cld out sbb fstp inc stos sub and out or xchg xlat mov and lods ds notb push orps sub cld mov cmpsb dec daa pop adc repz test cwtl adc and das and jecxz das push pop dec or push roll cmp jnp or add stc pop xchg xor fwait scas pushf xlat xor repnz and or lock mov hlt jno roll and and xchg fmull or out and xchg in daa xor dec jecxz sub pusha cmp pop cmp daa iret sbb cmpsb lock jno movsb fdivrp cwtl cltd sub pop xchg (bad) xchg and stos clc cmpsl cmpsl in sbb rclb jne (bad) icebp jg mov sbb aam sub iret sub repz notl lods inc mov mov mov addr16 je in push aam push int xchg movsb dec ret inc and pop ret jb pop iret bound insb sub cmpsl movsb inc repnz xor ret loope mov loopne dec aas xchg (bad) lods fs xor (bad) ss xchg mov mov imul pop mov xacquire cwtl out inc out xchg pop xchg into jl adc sarb jns mov and pop iret dec divl push xchg lods cmp push das xor loop adc pushl stc int3 popf rcrb aas xor push jmp imul sbb lea (bad) das gs push mov sub and mov loop push mov and push xor repnz mov dec es pop mov out es and (bad) clc stos mov and cmp loop jne push xchg aad and dec sub out add dec incl sub xchg rolb bound push pop bound lret sub push sbb lret xchg jns mov add xor (bad) fstl adc mov repnz cli scas add and sti popf sub test add mov cmp sbb das icebp popl cmp ds lds iret xchg lret mov xlat imul or ja fsubs lock dec enter out dec add dec pop test in push mov add pop and sub call je pushl mov leave xchg rcr dec cmc movsb inc inc stos mov jecxz pop xor jmp dec sub ret (bad) or mov xchg dec (bad) xor sub pusha test or outsl or ds out jg jo cs rorb mov scas jmp in shll xor mov pop in cmp out and push or leave add mov add sbb mov mov ja cmpsl dec repz jge dec rorb int3 (bad) ljmp cli dec leave loop pop and dec mov int ror sub push (bad) mov pop sub pop jno pushf shll pop leave cmpsl push repz stc data16 pop test dec jo dec fs xor and es nop leave loop in scas sbb in scas ja (bad) cmc xor (bad) icebp pop and dec mull dec adc stos sub push rol dec jmp xchg sub in (bad) loope into jg xchg or lock lods negb or mov or scas push xchg imul dec das pop cmp cmpsb xchg hlt aaa and stc cmp ret mov inc sub pop lcall ret cltd jno cmc ret adc jl (bad) in imul mov xchg mov into cmpsl sbb xor scas push push (bad) cmp imul xchg mov push frstor (bad) rorb dec xor loopne mov icebp push xor sub or repnz fist ret out mov add enter inc push jg (bad) sub (bad) jne xchg test mov push jge jmp mov mov cmp ds rcll xor dec lods and in loop dec dec jmp das add test out pop sub in sbb lret jle cmp xchg loop shr mov xchg out mov pop sbb (bad) (bad) push xchg clc and or sti sub repz and ret popa stc lea add gs add sti or sti push xrelease pusha xor daa mov jns mov fcmovne leave or or mov inc in add lahf xor div xchg jmp test push add or adc pop inc pop dec mov ret adc or cmp mov sub mov adc mov dec and fwait push xchg hlt notl insl (bad) mov jge clc jmp ljmp idivb dec data16 dec out sub int jg push test fucomip out jp (bad) jmp xchg xlat mov movsb scas call icebp add mov test push sti xor ret xchg mov mov jmp inc scas mov shrb pop push and sarb mov fistpll xchg mov insb pop xchg test mov hlt fdivr out inc test mov or mov imul cwtl cmpsb mov in inc movsl mov xchg or ljmp adc dec sbb test push in add icebp push aaa pop cmp xor pop cld (bad) cmp xor sub pop sub es das or jecxz adc xor stos jecxz push push sub cs fistp fmuls je mov lds mov dec inc xchg adc push icebp sub and dec or orb or mov cmpsl imul pop push ret xchg push pop xor inc lret push mov and or sub out xchg xchg jnp daa push mov movsl cli xchg and and pop dec xor popa sub push lret mov aad sar cwtl xor push or aas adc mov cli pop (bad) out idivl ret and fdivrs jmp ret jmp sub clc mov xor xor in and xor das mov fisttpll lods push notb lcall sbb push cli call cmc mov sbb lcall bound fcomip ror jmp lahf sub loop mov pop jno leave std add xchg push pop out pushf rcrl leave fild jl in pushf push cmp int3 dec sub test xor adc (bad) mov mov (bad) outsl cmp sub mov out sahf movsb fs les fisubr mov add jmp invd adc sbb iret out fs lods xchg pop into xchg add popf data16 popf jg and cmp ret sbb in lods and test stos std push xlat mov das lock mov cmp fdivs mov or sub out daa repz sub (bad) call aam test shr add dec movsb adc lds fsub sub mov cwtl push negl in mov lods pop mov (bad) movsl sub pop lock fisubl dec ret jnp xor movsb mov pop fdivrp sub and stc lret shrl mov fistpll push add mov jmp mov into and fcoms pushf xor adc lods (bad) mov mov fnstenv xor xlat mov gs out repnz sub aam add cmp cmp sahf add (bad) xchg inc scas sub test fsubrs ret shlb mov fimul imull inc mov stc cmp jmp scas xor mov in xchg xchg icebp push jno,pt xor outsb jne mov mov dec cmp cmpsl int3 dec adc repnz xchg int jle fnsave or jl ss in pushl es stc adc out lahf lret cmp lods and add adc and divl and dec stos pop ss dec scas cwtl inc aas daa mov mov inc mov dec mov das xor sbb or divb out jnp fstpt out pop sbb or adc iret push cmp int3 stos lret xchg pop lods dec faddl das cmpsb scas daa (bad) jbe push dec movsb mov push add mov add popf rclw pushf pop pop cmc int sub pop mull test cmp in push std jnp stos pop mov pop pop xor sub cmp pop jno dec or aam mov xor mov inc add xchg loopne mov bound (bad) int3 (bad) leave movsb repz lods pop xor scas lret stc inc out mov sub mov mov push and sub aam dec sub add dec or outsl xchg movsl sub scas mov lret jo sahf xchg lret (bad) repnz xchg add es lea mov subb adc sar das mov dec cmpsl xor push aas push sub sbb adc push sub pushf clc push or pop das mov shl or or xor jne out aaa mov les leave es adc push cmpsl arpl xchg scas ret cmc out mov rorb jl insl bnd xor mov lret dec inc inc pop fcoms (bad) hlt into xchg lea call movsb lea mov cmp leave and mov arpl cmc inc mov subb ja fmull inc (bad) cmpsl push cmp or lods test icebp pop notb in (bad) jne scas mov mov or or out loope xor faddl ficompl cmp popf (bad) in imul push or ljmp jbe test hlt add push and div mov push fwait mov adc iret cli lcall mov sub stc in cmpsl push mov sbb inc cltd das or push xor push (bad) or adc fisttpl in push stos cltd stos push push ja sub and xor iret (bad) repz icebp lret inc out cli cmp mov ret nop cli add xchg in pop push lret inc orb dec andl adc (bad) xor or cld jae movsl pop mov and imull dec pusha (bad) pop cli cs out out fidivl mov ret fistl popa (bad) aaa leave ss (bad) dec push (bad) int3 push mov push cltd mov (bad) cld inc bnd mov stos mov mov xlat movzbl push in xor (bad) stc cmp lcall pop pop loopne imull fimul adc insl fsts pop cmpsl pop xchg out xor or push push mov mov outsl movsb add fnstcw sar add sub adc pop push cmp cli lods mov mov leave lret jno,pt and ss sub mov mov fildl or push mov data16 ljmp in sbb and pusha int cmc sbb xchg mov inc or ret fdivl aam inc xor push push mov push lahf cltd push out std bnd push add mov iret ja shrb es mov push xlat mov inc pop sub mov test fbld iret (bad) lahf ret xlat mov (bad) xor stos jae sub xor push ss sub jmp and pop fs mov cs imul sbb rorl sub xor call mov push (bad) aad scas sub add scas std sbb mov cmp fnstenv iret fld sub fs adc (bad) fsubrs mov iret fisttpl adc xchg mov jb or xor cmp and mov add popf stc (bad) dec icebp push (bad) popf repz aas dec jecxz sarb or sub xlat sti and cli popa rol and sub out inc sub sahf push pop stos fs scas mov test mov (bad) bound jg or outsb lods cmp in mov jbe and mov push jbe rcrb xchg mov mov add adc xor popa adc cmp out mov xor subb xor jecxz or aaa mov pop mov push pop testb lods lcall inc scas ljmp shrl dec popf sti mov and sub add xchg xor pop inc mov fisttp add iret shlb in into xor loope outsb lods dec movsl cld lods dec call sub (bad) ljmp fidivrl loop std or imul push and ret pop jge lret repz pop sti (bad) jmp push and cwtl or (bad) xor cld stos jmp xor lock outsl imul adc mov dec sub test xor lds cs and (bad) repnz xor stos mov das repnz shlb mov mov xlat inc add and pop xchg mov dec xor paddb fstl pop jle push or lcall push cmpsl shlb (bad) in mov dec fisttp imul sub pop mov sub mov idivb push sub sbb pop sub mov jnp mov pop jl lret pop fcompp cmp push ss push lea ds inc psllw xor jno or jb stos push (bad) je clc pushf (bad) mov (bad) or adc add nop ds or out xlat inc imul push repnz cld in inc adc mov mov adc and test les clc arpl add enter lcall cmp popa mov xlat out daa rolb or sarb (bad) pop stos xor ss test add jl mov and loopne add dec dec negb pop int3 adc test pop jmp mov push inc and daa xor lahf shr inc and push lcall pop lret xor mov (bad) mov lods out jle mov or scas lret (bad) je scas xor fiadd or adc repnz sub lods aam push loope mov push and mov add fmul push jp dec pop jmp or mov in xchg push dec repz lret or jo daa mov mov je loopne jbe jmp icebp jae rcrl dec fdivrp fst cs insl and or hlt divl lods ftst ljmp cmpsb hlt sub push dec loop je in or mov lret mov add push sti cmp jb add pop es sub pop sub loope imul pop popa cmp pop or or cld ljmp out or push xor mov fmulp push fbld cmp xchg jmp mov adc aas inc mov mov mov imul xchg add xchg pop sahf push add and les shrl jmp stc lret out mov outsb mov int movsl js pusha inc or hlt (bad) dec pop mov add sbb imull xchg xor aaa (bad) ja xchg ljmp repz or or movsb lahf cmpsl adc xchg in movsl je repnz lods jecxz inc loop mov cmc push dec mov cwtl and or xlat mov popf notb or (bad) adc call lock push call in sub outsb lods dec rol jmp std out push inc leave cmp jo and mov mov push jl jb xor mov xchg mov popf push icebp pop xlat ds adc movsl push cld xchg mov inc mov lret pmovmskb push and (bad) cmpsl jp xchg notl inc adc or jne lds movsb sub pushf or mov add pop jle jmp movl insl pop clc add sbb jp xchg sub in push leave sub repnz mov pop jmp (bad) dec cltd stc outsb subl mov mov xchg cmc xchg std clc into xchg push adc mov or xchg out dec and pusha call gs and xchg dec pop xchg idivb inc sub test dec ja stc mov xor icebp in or sub pop mov gs add iret and cmp sub enter loope ljmp cmp repz push popa mov jecxz adc or mov aam ljmp mov lcall adc mov mov inc into mov push (bad) mov aas mov (bad) (bad) (bad) clc mov lods push lcall sbb sbbl xchg (bad) dec dec mov cmp in pop and out stos sub (bad) dec mov popf lock pop push jmp sub dec test jne imul bound sbb sub cltd adc outsb call out push add mov adc data16 jge sub enter divl and lock mov mov adc push scas mov push out mov or sub sub pop dec rorb cmpsl push sbb lods mov ret inc jle mov inc sub popf fistl add mov push into add daa lret mov or mov lock push mov mov (bad) lock or push mov add (bad) fisttpll xchg or int3 pop dec jmp pushf push (bad) push mov int dec push loope and dec cli lret pushf sub imul jp mov sahf test mov sarl adc (bad) sbb call mov loop xchg add and (bad) pop adc fldl jbe popf pop push in stos loop xorl cmpsb pop sub mov inc sub push out orb (bad) mov out jb add jecxz (bad) bound cmp out sahf lods mov xchg mov aas in js mov dec loop mov in mov enter mov jmp shr and loop sub out movsl fldcw and push cmp aad sbb jp insl jno sub adc sbb push out aaa ficoml outsb mov cwtl dec testl loop pop push ret je xchg dec incb je cli lret push add adc lret jb lock fisttp inc push test mov and and xlat cbtw rcrl into sbb fisttpl out mov negl mov nop mov jb bound inc sbb push and js mov xor divb or dec je (bad) leave cld mov or push mov inc fcoms cmp mov mov (bad) idiv dec rep dec xor or jmp mov adc inc (bad) icebp and dec xchg lods and das out sbb or ret (bad) sti fsts or mov mov arpl cmp fisubr pop cltd xor sbb mov cltd xchg jo test fcoml (bad) enter mov add mov in and mov jl and xlat lds pop (bad) aaa xchg (bad) jmp repnz ret fidivr (bad) jmp mov mov daa mov pop fisubr insb inc or mov dec std or cs lods mov ja icebp into sub test mov jp xcrypt-ctr cmpsl sahf push das aas mov and jnp pop into out lret xor adc js xchg sub shr scas pusha pop popf push dec lret lods out cmpsb dec (bad) rclb push imul pop mov xchg adc sub and inc adc pop shlb testb push dec cmp sub inc xor sub mov fmuls dec (bad) push cs mov scas out jbe cmp xchg sub pop dec call cmp test dec rcrb jmp push imull lret adc or ret out or mov jno dec stc loopne dec and into leave and or fs pop xor aam sub pop and mov or shlb pop imul les lock sub iret data16 mov mov cmpsl (bad) std and sub out lds mov fisub sub movsb adc add and addr16 out xchg ret ljmp lret ljmp ds adc rcl ret je sub add dec push inc mov stc daa in iret inc sarb repnz push mov adc push and mov aam (bad) push rolb or jge leave scas repz or and std (bad) push daa inc rcrb int jp push mov and xchg push pop pushf bound out push pop outsb iret dec cli or test ss mov jnp xchg dec sub mov xchg xor ljmp mov rolb mov sbb mulb add xlat or fwait mov ret pop cmp fmul sbb cmpsb mov dec dec cmpsb mov jbe lret cli mov mov les and add mov pop lret inc dec mov inc sub loope cmpsl lock add xor pushf es adc xchg mov adc and fbstp xor stos icebp ss cmp pop ljmp mov lahf rorl lret sbb dec leave add and push adc stc pop dec add xor xor test add push or fidiv aad xchg and mov sbb pop out stos aad mov sub jnp call cmpsb bound (bad) dec cmpsb xchg ficom das insb push dec idiv xor or pop mov mov xchg repz repnz sti xchg mov divl add jae pop mov clc (bad) mov add (bad) add xchg (bad) and xor xor (bad) jo adc pop sbb inc cmpsb sub sub mov mov xchg add and xor (bad) repnz jmp dec scas cwtl (bad) or decl fistl je lock movsb and hlt xchg in dec mov pushf jmp clc jge out fs test sarb adc (bad) jge push addr16 sub pop xor push movsb and and xchg push aad lret pop ret cmp cmc xor jbe inc sub jno inc repnz je cli mov jno lret nop nop sub loope cmp push mov mov es fdivl xchg dec dec mov push or and aad xor xor (bad) iret aaa nop aas cs in cwtl movsb push push (bad) cmpsb int3 and cwtl insl pop cmp cmp jmp out call lret sub lds (bad) xor lods test mov adc mov scas adcb (bad) out cmp imul push sub xchg scas mov nop icebp xchg xor ds mov push inc or repz sub push rcrl inc xor xchg clc jle lret mov pop adc xchg aad inc sbb loopne push xchg out aam and jl leave add add xchg pop sub pushf mov pop and loop ja mov outsl cmp ljmp (bad) inc jmp dec popf das rcrl out mov jae jnp sub mov lret dec adcl popa fs jnp fdivrl mov pop cwtl or push pushf mov mov out inc push out and xchg lcall inc pop jbe push and fsts push sahf xlat leave jmp cld scas imul (bad) mov jmp out pop (bad) sbb sbb cmp or aaa repz (bad) lcall add xlat add fs mov negl cmpsl les lods ja dec daa pop in mov testb xor xor (bad) xor (bad) int jle jae jle pop jne mov inc dec ljmp mov icebp popf fcoml out loope cmp movsb clc mov fstpl and aas mov ljmp sub and outsl push and mov mov ret jne pop daa lcall pop or cmp imul mov cli lds stos mov daa into jne out cmp xchg loopne sahf mov bound sub pop jl daa jbe jb icebp mov jne fisubr jno xchg (bad) fdivrs mov (bad) pop es jg outsb sub cmpsl not aaa dec (bad) jmp imul rol lahf push pop mov mov jb sbb std sub nop inc (bad) or jmp xchg push xchg sub je call jo clc push or test aam fcmove jae push sbb daa xchg iret cltd or add xor dec imull jnp push (bad) scas push cmpsl out dec dec mov add mov pop into sub inc (bad) in nop dec out xor sub sub (bad) sub jno adc mov pop mov dec and cli out inc dec cmp xchg (bad) jmp and icebp mov push pop in shr (bad) loope add add mov cmpsb hlt fs add roll jge adc or pushf jmp jmp les mov mov fs lods adc rclb and out adc pushl int sub adc lret cmp int3 lock mov xchg add lods out in cmpsb rcr adc test in in mulb mov and or and sbb mov and pop aam scas icebp mov or into mov sbb daa fldl jmp lods ljmp xchg inc aad sub daa (bad) (bad) cmpsl push ljmp sub add lret mov jg stos loopne mov fsts out insl adc pushf je or pop or cmc mov jmp push iret sub sti fwait mov push xchg fstps or or jl mov inc sub mov out daa push out or out xchg push pop adc cmpsb mov rol mov and jp xor bnd inc ss jle cs xor mov shr (bad) xchg fstpt daa rep imulb push ret fcoml mov xchg sub and arpl repz in (bad) ljmp scas lea or sub dec or lods xor adc xor pop jle adc test add mov lret ds repz clc pop dec rorl mov mov ljmp cmp frstor lods cmp lods and out jge and push movsl lea or (bad) sub popf aam fcomps xor mov in leave mov add dec movsb jmp stos fisubrl sbb arpl aad lret in sub ret xlat sarl and aaa cwtl xchg mov fidivr stc and or div mov mov imul sti mov push jo mov xchg push repnz push mov mov fwait pop popf fstpt fcos add out sbbl ds xor mov sbb sbb into inc xchg lds jb push sbb les xchg or movsl lret cmp jmp mov jg (bad) jne sub lret imul mov jo xchg fistl sub and test scas jbe out push cli inc sub add lahf shl adc add enter sub sub pushf mov adc repnz fcmovne daa loopne mov sbb loop mov xor incb xchg les outsb (bad) cmpsb nop jb or test jae pop lret fsts (bad) mov push aas push mov out xor call out int3 fcomps leave movsb pushf xor sub xchg inc xor sbb push insl adc lea loop or sahf mov pop add mov mov sar divb je and cld daa mov ror push fcmovb xchg push add and jne and push lahf cmpsl add and inc subb mov (bad) je leave xlat test loope add push clc mov mov push aad mov mov (bad) fistpl ljmp movsb xchg or xor xchg pop loop sbb add jnp sub shlb fist xchg leave ljmp je cld pop shlb int3 movsl cmp or (bad) mov push ljmp sarl pop push cs daa fcomip adc pop inc lahf cmp push mov mov sti repz or sarb daa pop add mov or mov push enter jecxz jg stc mov (bad) icebp cmp push pushf fldt fst outsb mov xchg scas (bad) fwait repz out fisubrl xor cmp pop lods adc mov shrb push arpl cld mov push scas xchg ret xor movsb mov jge mov mov aas bound test pop xor xor pop sbb adc inc loop test xchg inc sub mov leave ljmp es or repz mov sub call sub and lahf jp or sub add std movsl pop ret inc dec or sarl jmp inc mov insb dec and pop mov ja mov fistpl stos sub out aad out divb xchg out mov pop pop pop cmpsl pop xor pop xor imull les fldt add or ret (bad) mov lds mov ljmp das xor (bad) mov push out loopne cmpsb or xor mov out xchg aam dec push inc xor aad vmread pop lret out inc inc push out mov ret and pop xchg cmpb fistpll in jge add pop add leave and out xor jge and inc and add add mov mov lret imul es and and mov pop fldt pop or dec das xlat lds cltd push jnp pushf dec lock cmpsb push dec leave and push cmpsl sub jle mov popa fmuls shrb sub fisubrl cmp jbe mov mov xor xchg jl add (bad) leave test jmp vcmpss xchg dec sbb repnz xchg mov or rclb (bad) xor faddp outsb ja inc das aad lods aam push dec movsl stos bound adc xchg fldl and mov and lcall or data16 cwtl and or mov nop rcll icebp pusha aas mov fdivrl mov cwtl push sub mov sub xchg pop and outsb cmp push data16 shr int push xchg and pushf mov push mov xchg jo xlat sbb push and loope js push xchg mov mov xor outsl fmull or icebp inc dec (bad) xlat sahf mov lcall loop or in mov data16 jne sti (bad) jmp inc in push bound push inc mov cwtl cmp icebp mov jbe scas divb sbb faddp adc mov mov mov outsb pop xor add test mov pop aas int jge and dec ja and ja mov mov mov or fiadd mov das pop jo test fs cmpsl xchg pop sbb mov or orb lret sub (bad) rcr lods push fcomps add xchg idivb push cmp pop int stc xor xlat into mov cmp lods sti dec sti lds clc outsb xor push (bad) scas mov pop and ljmp jb adc mov cwtl push mov pop sti xor or arpl xor xlat xchg loop pop adc lahf stc jae xor data16 jne xchg dec loop fldcw pop cmp lods mov icebp iret pop fisttp mov cmc push pop cs sahf adc repz jmp fwait dec dec fs cmp mov and scas (bad) insb in out mov (bad) or add push mov (bad) and lea cmp jle movsb sti pushf (bad) jecxz cmc fs mov mov xor mov stos addr16 fnstcw das (bad) push xchg (bad) cmc jno mov lret add mov or mov and mov inc test popf sbb inc add imul faddl cmp sbb dec divl add repnz inc and (bad) aaa sti test fcomps sub add pop (bad) popa xor sub jae and mov repnz pop mov popf dec pop add dec jmp pop (bad) enter iret sub jno mov pushf mov jmp cld pop neg jg xor xlat mov jmp call pop cmp movsl inc shl subl and das mov lcall mov xchg sarb aad aaa xor and mov aaa ret pop frstor jle push loop or fcoms in mov pushf adcb sub ret push adc leave fs lds daa sub (bad) adc ret xchg movsb lods sbb lods xchg ret push push rclb pop popf mov (bad) repnz and in or sub xor fist sub int js pop loope cmp mov push sub add sub incl and xor bound repz cmpsb xlat orb shl mov aam push sub xchg (bad) lock aas dec ret loope cmp leave ret fdivl or or and fs scas sbb ljmp pop mov jbe jno insb lahf test mov adc lret inc mov (bad) loopne jg adc jne adc inc loope jle add cmpsb scas loope or pushf push mov mov (bad) or cmp out int and leave orb pop dec xor cwtl rcr add mov push (bad) mov je les out imul je or stos dec jmp (bad) data16 clc (bad) and sahf dec imul dec dec jmp inc xchg add andl cmp cmp mov jmp aas (bad) dec add out sbb cmp jmp (bad) xor rep (bad) jge sbb fist sub pop and mov fs dec dec push int3 pop negl jecxz or aas add addb (bad) jg adc jmp pushl and xchg div xor rolb mov pop cltd push imul out scas sub sub sub fucomip addr16 mov dec dec nop or sbb jo mov push pop stc nop xchg (bad) in push (bad) jbe sub xchg mov pushf daa xchg mov mov cli dec insl mov and or inc push nop jno xor push iret cmp sub stos fs cmpsb xchg cmp push xchg inc jmp dec mov aam js pushf sub icebp fucom leave mov dec sbb ja mov sub sub cli or or push pop daa idivl lock and add call insb push push pop pushf out lea stc or je loopne stc or push cltd leave jnp mov inc pushf and (bad) sub xor cmp rcrb in xchg fidivrl push inc shrb adc jmp in jno sub out mov das mov iret push xlat (bad) adc shll or mov cwtl cmp push insb xchg inc xchg sub dec loop sub sub jecxz dec in sub fdivs out idivl hlt jno mov xlat test and or out mov out pop add scas push sbb dec mov clc aam mov movsb pop test mov mov cmpsl jg imul lahf lds jo xor pop push (bad) mov icebp dec scas xor mov sub adc das mov mulb ret push sahf lret xlat cmp mov push mov or lock outsl jb int or movb jmp pop cmp (bad) bound push orl hlt (bad) das in add (bad) or mov dec jmp das in xor xchg repz and icebp xor xlat in pop lahf aas sub inc or pop (bad) cmpsl ror cmp add add wbinvd clc jmp pop sub out or insl push or dec and sahf loopne or daa xor mov repz xor (bad) iret test add jg mov xor clc lahf pop or enter stos mov (bad) call arpl ss jecxz xchg mov dec rcll cmpsl pop imul jo mov cwtl lret icebp xchg mov imul bound add insb fbld sub mov pop call mov rorl mov pop xchg cli push shrb or ffree push and lahf jns xchg mov rolb add mov add loopne mov into xchg out test xlat loop cmc push pop outsl mov repz xlat sbb and inc sub mov int3 (bad) lock lret testl dec icebp mov inc or jnp movsl jle lret push adc cmp ret in cmpsb iret insl (bad) loop jae sub out pop sbb dec into lods (bad) mov fistp imul jne test inc inc adc add int3 clc fsts mov mov icebp outsb sub or pop and out idivl rcl xchg in add rol das sbb hlt sbb sbb lods jmp mov push lahf movsl dec les pop sub xor pop mov jo into sbb hlt enter add or sub repnz aad mov into mov pop ret in adc and out jmp cmp xchg pop fildl cmp mov inc pop dec test dec sti xor push sbb xchg mov sub xor cmp sub xor xchg je push out lods push shl jle add into pop inc lcall loope sahf ss or xchg pop xchg xlat cwtl mov ret mov jmp and in mov pop xor out mov mov (bad) sub jl xor shrb sbb add lret push jg add mov mov cmp cmovg cli or ja es and call dec and iret add (bad) (bad) xor add inc pop lock sub ret sar stos inc xlat adc (bad) int sti mov pop dec sarl inc lods shlb popf fbld inc mov ret into pop or jmp sbb addr16 push into mov sbb mov decl lds out jle pop fmull test sub adc mov addr16 xchg mov pop sti jae add iret and add mov lret add std dec push dec cmpsb mov push jg adc mulb movsb stc ljmp sub mov test into lds out iret xchg mov fxch xlat sub push fcoms iret jle outsl dec leave dec (bad) (bad) sbb sub pop insb mov and xorb xchg call int ds cmp ret xchg (bad) in (bad) stos xor (bad) pop aam jno outsb mov sub or sbb mov inc mov mov lret push pop add mov mov scas sbb cmp sub mov xor pop jno dec mov mov mov adc pop jne sahf idivl dec push popf add mov pop ret in push pop rcr inc pop and test fildl sub xor outsb in add stos sub xor add push xor in adc clc jns into out lret xchg dec stos mov decb cld rorb cmp lods adc add mov ret and ret (bad) or xor outsb (bad) nop xchg paddsw pushf mov mov jge cli rcl cmc out js (bad) jmp sub lcall add pop xchg dec gs sub and dec fdivs dec xor xchg test pop fs (bad) xchg jae scas cld mov mov and mov pop push xchg out (bad) je push shll (bad) dec add adc mov mov and fs pop int3 test and add pop push and pop push mov pop outsb xchg mov adc popf stc mov (bad) sub xchg cld xchg test push mov dec push add adc cmpb movsl out aam pop insb arpl push rolb cmpsb loope loope idivl addr16 mov out jo mov inc mov aad out fsts mov in adc rcll add lret ljmp add neg lods push adc in adc outsl (bad) xor aas jecxz xchg cwtl adc jnp jl jp sub sahf sahf or lock call or or sti or lods adc movsl push gs icebp imul xchg jmp xchg idiv mov mov shrl (bad) mov pop and stos je jmp je lods fiadd push xchg sbb test add fsubs xlat mov nop leave fs push sub mov pop pop or imul adc mov shl xchg hlt dec call subb and divb sbb jno xor ret shl (bad) mov jp loope stos or or clc jns jmp pop (bad) mov xor test outsb add outsl ret pop and (bad) or cwtl inc icebp bound stc imul pushf in mov sbb push sti test xchg insl enter push fmul ja sub inc mov dec pop mov jp (bad) dec stos adc (bad) (bad) pop pop dec pop inc ljmp sub inc aad xchg mov loop test pop mov out jecxz pop out imul adc cld addr16 xchg pop out cmp (bad) xchg lret xchg mov bnd pop aas dec xchg adc mov leave (bad) (bad) jle outsb lahf xlat shlb clc jle pop out movsl cmp (bad) sub mov movb mov mov adc mov mov lock idivb pop xor jmp pop xchg in push mov iret and push call scas sti mov push push adc (bad) and into add das or adc xor add inc testl lods sbb stos jecxz aas sub (bad) pop call cmpsb sbb jmp xchg xchg mov or enter add pop je sub ss loop icebp xor xor aas dec lret int3 push movsl fnstcw jno das jne xchg dec or lcall fnsetpm(287 and and sar and adc repz lret jecxz inc add mov xor xchg repnz jmp jnp iret ljmp mov pop mov scas xor lret in fxch and add fidiv stc jge sbb mov mov sbb inc testl mov ljmp sub sti xor mov (bad) mov adc mov es out xor or lods mov dec cli (bad) out mov xor mov inc inc jg xor sub xor enter or ret fnstenv std inc (bad) push push cli sub xchg leave inc cmc cmp mov ljmp add fdivr and ljmp loopne pop adc fbstp stc xchg (bad) mov aad mov pop cmp daa pause sub xor or lret popf (bad) or cwtl jbe fsubp (bad) lahf pop in xor or adc or mov and mov lods (bad) shrb ds xor cli sub lahf mov (bad) mov sbb ror out aad mov lret ja xchg adc test setns lods loop dec lods popf and xchg int3 lcall sub idivb or (bad) cmc pop dec lret fstpt dec (bad) faddp das pop ret andl xor bound stos lret test xchg pop push lret inc sbb les adc and je imul sub push or bound cmc mov mov mov mov dec fist or mov inc (bad) mov (bad) mov sbb or fs push in xchg dec sub sub or or push sub mov das mov mov (bad) add or push or inc lds mov mov xor repnz push xlat ljmp daa jge adc shr sbb xor pushf ljmp push sub mov or das dec imul pop jmp lea mov push mov cmpsb leave notb xchg xchg ljmp (bad) imull stos sub pop mov pop sub or popa add and imul icebp mov lods push mov cmc pop out inc pop clc shll mov scas mul adc mov mov xor pop inc andl lock mov icebp in fstpl pop pop mov xchg mov and jns inc out lret and fstl xor jge popa jecxz cmp loope jle mov push shrl xchg jle ret test push fincstp cmpsl mov xor test xor pushl mov repz das incb out sub lahf inc mov pop or and dec pop and add sti pop ret repz add scas xchg test and and pusha andl mov aad cmpsb lds mov pop cmp loop out add sub test out xor jmp cmpsl fsubrl icebp jg xlat push (bad) dec add mov imulb push add push imul fldl int3 stc dec mov xchg jle push xlat xor and into dec push xor pop jg loope and add adc mov xchg adc mov mov pushf cmpsl dec mov push mov xchg xchg xor pop js mov insb mov out std and arpl icebp xchg (bad) cmc mov xor iret dec imulb mov cld jnp xor jle cmpsl xchg sbb jge mov sub cld outsl daa icebp push pushf push pop (bad) jecxz adc adc adc les les jno jmp and and (bad) xchg adc movsl mov pop sbbb or fsts es xchg mov and jno imul stc jg insb lahf push (bad) (bad) sub sub repnz idivb sbb test scas je cld jmp pushl movsl adc (bad) sbb cli sub dec stos bound pop ja rol xor add pop fildll negl clc lods notl and cs push out scas (bad) fisubrl and jo or sti cmp jl stc xchg inc shr imul sti add push imul and pop push push sbb xchg sbb dec dec jmp arpl mov jge and rcr jo cmpsl push dec cli push pop add push leave ljmp inc fstps (bad) mov sahf out xor test popa rorb (bad) jge xchg xor xor outsb xor out bound jbe inc mov pop push subl je push outsb stos xchg ja push ret xchg in dec add ja jmp push fdivrs xchg in sbb ret ljmp adc sbb popf xor notl xorb sarb mov pop movsl out adc test loop mov (bad) test add lret mov rorb ja add inc jp mov (bad) insb pop pop ds lea add mov push sub xor mov cli test jnp hlt cmc in push xchg in and sub lret das sub bound loope cmp mov mov fiadd pop cpuid jmp cld ss imul imul sbb in sub push enter add or movsl int mov push lcall int xor out lock dec stc mov out stos xchg ret lret int3 loop xchg sub mov push jns lods pop xchg add repnz adc push das ret mov cli mov and out and imul fcomip cltd sub or clc sub imul sub or adcl pop mov and pop sub jnp insb jle mov outsb and out fst jb pop sub sub or mulb xor rorb fwait sub cs cs sub mov lods in xchg enter rcr roll (bad) xchg jb dec or test xchg clc sub aaa enter lahf inc push scas sub xchg mov (bad) cmp jbe jg mov add movsl clc push fimul dec mov or push out es and pop nop stc inc sub mov sub pop pusha das les xchg pop pop sbb cmp and dec sub add pop pop lret xor stos xor add sub sarb cmp mov lahf inc adc pop sbb pop mov test idivl dec int3 out and movsl xchg adc xor mov adc (bad) out mov test lds adc mov add cli test mov mov and push pop xchg outsl outsl bound xchg fwait xor xchg pop inc iret idiv mov push mov mov (bad) test movsb out xor lret cmp jns enter sti cs ss repz adc mov dec mov jecxz,pt mov sahf sub into dec lods and add out mov or pop pop pusha mov out imul pop mov mov xor (bad) insb mov push test pop lods outsb mov lret repnz out pop icebp mov mov int3 adc cli cmp shr sub mov jnp int3 mov add lods cli inc int3 es sub movsb jbe scas mov lret add into loope mov push pop and sub or mov jecxz xor pop and mov stos out adc rclb repz repz aad or inc lock (bad) sahf sub out insb inc mov pop leave pop in pop jmp mov popf clc testl push xchg pop mov or and xchg xor push icebp ret aam (bad) movl test mov repnz sbb add add daa ret (bad) fwait or push or dec fcmovbe or push sub pop in or adc ret pop mov and mov sbb or mov leave cmpsl (bad) pop (bad) mov add (bad) popf into push fnstcw mov repnz outsl mov mov and aam fisttp xor lds lock (bad) ljmp pop jb push icebp mov pusha mov adc scas imul sar jo adc (bad) ds pop popl sub jg lret (bad) call adc mov fs jo je and insl es and lahf mov jle pop (bad) mov das mov inc jae hlt push pop lret xchg (bad) jo loopne jmp fs pop xchg shr mov dec ret pop jmp int3 je popa out idivb lods fisttpl fdivrl jmp aas roll out push xor cmp sub adc icebp cwtl dec leave mov sub div loop mov pop stos jae and jecxz dec (bad) push in sub xor imul scas les xor sbb lock pushf fist sbb lret fcoml xor ficompl iret clc cmp adcl fist imul or mov scas imul xor xlat fs add cmp mov jmp idivb clc mov adc aaa icebp cmpl enter leave icebp jb add in inc shlb repz dec icebp lock cmpsl ror mov cmp ret push outsb cld ljmp push out mov mov jo aas dec sarb (bad) adc mov xchg push in cmp or mov sub mov jmp pop sbb sub imul adc mov (bad) mov push push and scas cltd push cmp les loop sahf in scas daa and enter loop fstl jo or dec push ret xor xor inc iret rorl mov icebp notb ss and mov mov aaa cmp dec sub sub xchg loope aas mov xchg (bad) mov aad xchg cmp idivl not add mov (bad) and add sahf ret outsb rclb xor jmp jl or daa leave (bad) int3 push xchg push jp and adc fs mov cmp mov mov out xchg adc dec shrl pop jg (bad) adc idivb (bad) mov inc jecxz jl testl loopne into add ret push push aaa dec push add call in popf xchg (bad) mov push sub or mulb in fldcw jbe xchg popf frstor push push iret inc dec mov or adc orl adc mov sub add adc cwtl push inc (bad) in (bad) push insb push mov dec jbe call jmp in cs fs test mov mov loop les dec imul addr16 adc jne (bad) sbb pop in in stos sub bound add repnz sbb add out ja add mov add or add mov adcl xchg jg (bad) push mov jle fisubl jne sub jbe add pop push jge rcrb sbb add pop push push mov rcl fild jl add mov out lods sbb jmp divl inc mov cmc pop add pop add idiv push sub stos popa ret xchg adc ficoml test push aas test add add mov add push sub sbb pop push push push pop push mov push sub pop add xor scas sub pop fstl and jl xor (bad) jae sub pop add inc mov or pop mov add out pop add sub sub cmp sbbb in sub pop lcall nop adc mov out cs je orl fsubl sub mov ds test pop jb cmp pop dec pop ljmp cmc and cmp and sti jp int push dec fnstcw mov mov addb add sub sbb aaa pusha jg xor xchg push mov pushf adc or xchg push int3 sbb dec adc mov (bad) xchg test ret push mov pop add out jle cmp add mov jnp int3 popf mov jmp sti sbb insb inc loope repnz sub inc or lret (bad) dec pop pop xchg fnstsw movsl mov das dec and dec movsl dec mov pop lret inc adc ror subb insb adc (bad) je movsl call dec jno testl mov sahf ds mov sti dec idivb jecxz test sub pushf (bad) gs add push pop xchg mov jg lcall daa xor pop inc daa adc xor (bad) cli repz cwtl dec stos sub mov or sub imul jmp divl dec mov inc jne jl jmp incl ja dec push push inc imul push iret scas lret std push ror sbb stc and or inc push and xchg aam imul ret and in xor mov and cmp pushl lea and loope jg shrb (bad) pop sbb fsubl loope ja scas rcll sub mov mov (bad) jmp dec scas pop stc std int clc cmc in sub mov stos lea das jmp jbe mov mov jge cmpsb lds mov push rcr test mov nop jns or cmp stos push inc lods cmp leave push icebp pop inc (bad) js roll aas xor dec (bad) ficoml insb ret mov jns lret push into pop lds sub jb and jmp sub adc fcomip into lret loope adc xchg and movsl bnd les mov inc (bad) cmp sub fldcw or loope rcrl mov xor push push dec lods xchg sub repz sub lods clc int3 divl mov sub jle or lcall dec sarb repz lds (bad) sbb mov loope sub outsb loop xchg mov add jne test stos xor add xor les adc or or and xchg adc lret lcall mov push dec mov imul inc mov cltd test and daa pop out stc mov jmp out pop xchg xor neg xor iret sbb mov shll inc stos jb (bad) sti sub imul mov sub or mov loopne into and jle sub ljmp idivl xchg pop sub jmp xchg mov je mov decl and loope inc jb ret and cwtl rclb and shrl xor sub or std inc push push iret ret enter push jmp into gs or and mov pop fdivrp pop ja inc pop aad or push bound or cli mov and out xor lahf stc shrb xor and jmp std inc sub loop repz and out (bad) mov add (bad) repz push mov sub repz jecxz sub add (bad) repnz sar sub dec idiv aas mov add mov ret int3 add shrl popf into mov xchg push mov xchg mov jmp or xlat cld add push ljmp out xor leave ja dec add test add imulb add loope fimull std sbb add je aaa xchg inc push xlat mov xchg ljmp ja xchg dec (bad) int3 test or daa pop mov dec popf fst mov xor cmp xor sbb sub not pop lods fiaddl nop sti dec repnz shrl imul out xor cmp push (bad) mov outsl xor adc jbe ss popf push xor xor mov or rol and pop jbe jp pop sti sti xor pushf and std sub out sub cmpb mov mov dec aam pop cli xor mov push cmc xor mov lds xchg inc dec movsb pop mov jnp movsl pop (bad) in inc loope push push sub and xor adc arpl scas sub pop adc xor xor mov cltd hlt jecxz fisubrl and mov loop andb inc dec mov fs mov call (bad) fsts ds jecxz add stc fist jbe adc jmp cld pop jge loope leave mov pop push in lahf es imul pop pop stos fs lds bound mov pop mov or ret mov bound push or sub lret mov addr16 test xlat lds repz je sti push in fstps dec adc mov dec xchg (bad) icebp push cld push dec andb loope inc mov fwait pop rcrb pop mov out std icebp movsb xchg xlat inc xchg out or divb ficomp bound and cmp in cli cmp mov adc mov mov jnp daa js add add dec and xchg stos push std xchg xchg daa xor pop sbb jmp loop xchg adc out and cmp and sti scas into hlt push cwtl adc loopne mov xor (bad) mov clc add jmp bound cli pusha ljmp jb and adc stos inc leave stos bound (bad) pop shr ret cld pop pop lret je jmp in jo stc les pop pop and popf repz negb jl push icebp (bad) sub sar mov out mov lcall add mov xor loop in ja shlb movsb push rcrl mov mov xor cmp and add cmc stc push daa adc leave jae out xor cwtl mov pop ljmp push push push inc ljmp xchg rcrl or fsts sub movsl scas cltd cli and into mov outsb pop mov mov mov (bad) inc scas lret mov fstpt xchg clc add add jecxz dec pusha cmp xor jecxz dec lods stc sub (bad) test into adc ja rcrl sub xchg clc ficompl cltd movsb adc sub adc sbb sti and inc mov sub xor imul add sub addr16 xchg push repz and mov call xor or dec cmp dec cmp push jp and xor mov (bad) lds cmpb (bad) mov add int3 mov mov or sbb mov sbb mov sub adc add push mov cltd (bad) dec or or push fbld mov sub inc and insb mov add adc fdivr addr16 cmpsl jns mov enter add and sub or push adc mov jmp fsubs test jp mov pop out fucomp mov stos jbe dec cltd jle fistp scas dec jg std out mov jbe push xlat mov outsb push mov pop and notl mov dec test negl and dec push mov or or add inc mov test mov dec pop push rorl in push and popf sar lods (bad) sub lods in pop mov cs cmpsl pop mov je fcoml (bad) std xchg in test mov inc mov mov push and popf cld arpl movsb cmc inc shlb sti sub xor fdivrp repnz xchg inc test cmp xchg hlt lret call sub jno ret adc out enter leave cmp imul lret test mov lret fisttp (bad) cltd (bad) mov iret jmp push out mov jmp xor inc dec addl out push jns push sub mov sub mov rorb sbb int aas lret stos aaa daa je cwtl iret add push xor xchg divl xchg out ret imulb push xor lahf lock dec ret mov popa jecxz jne in dec or add sbb pop (bad) xor cmp mov jae fist pop jmp arpl dec lods xor ret dec mov pop sub out bound lret pop scas dec testl adc add jae mov pop xor test jb iret push jl push sub cmp roll xchg repz popf (bad) cs xlat mov jge gs push adc lds cmp jbe mov aad jp push sar jle lock (bad) lret ret aad das add fbstp mull mov adc mov jmp movsb das jno push pop movsl decb add mov and std int3 dec dec out mov popf mov xchg rorb lret adc lret push dec add repnz std xchg rcrb movsb jecxz add add dec insb cmp rorb ficom leave in xchg (bad) push add add sub cmp icebp cmp sub mov cmpsl test dec ret jno mov lods xchg xchg daa pop lret (bad) into fldcw jl inc dec lds or mov xchg cli inc outsl xchg test fisub into adc fisubrl push pop test stos lods push mov and mov and pop dec push ds into xor xchg jbe mov int3 das pop mov stos insb sub dec xlat cmpsl (bad) dec cli popf xchg adc xor lret rolb cld push cmpsl sti jecxz dec les iret mov and and test mov add incb fstps popa shr addr16 cmp jo daa jg jge sbb mov and cmp int pop fsubp xor adc or mov ja shrl xor leave xchg dec and sub pop xchg std lcall mov lock add and or or dec sub sbb push jo add xor call adc cmpsl (bad) xor dec fs stos (bad) mov adc fcomps push loop sub dec sub sub gs in inc cmp outsb lods adc and or mov and movsl adc das ret das or out jl loop pop aam push jne mov and std xchg inc dec lret push dec clc sub mov mov or out jbe sub push test mov and shr (bad) mov cmpsl mul mov and in or push sbb xchg add mov sti out dec and (bad) jp fldlg2 popa add or mov mov push stc adc in jmp rcll je fs mov decl fs mov add insb fisubrl sub scas or stos pop xor loopne jecxz lods sub xor add aam enter fstpt sub and aam cwtl addl and adc std push movsl lods push xchg ja ret pop dec push xor jne mov push xor lods das mov adc pop daa xor inc (bad) pop or xadd inc inc add sub sub out xchg pop xchg leave pop add sub repz shlb test ds jle xchg in pop jmp (bad) outsb mov jns bound icebp cmc inc push pop lret scas or mov inc xor and insl xor or pop pop sub lods jae test ja stc jmp sarl mov xchg stos stos cmpsb faddl es aas adc sub popf dec sub lahf and xor cmc mov out or int3 aad lods (bad) dec push cmp xchg mov stos out pop cmp mov xor cli cmp xchg ss clc lahf mov jmp push not jg stos mov sub fcoml (bad) in ds pop add sbb out test call pop pop (bad) cli pop xchg fnstsw out repnz cmpsl incb dec idiv imul xchg (bad) fisubrl fxch daa push inc (bad) and fdivrl es rorl adc movsb xor fs fimul mov (bad) jg and adc mov mov or ficompl lds aas lods add xchg in or mov (bad) mov ret shlb repnz bnd mov jl lret mov scas sub xor or inc int stos sub or mov or fisubr (bad) ljmp lret and mov sub outsb ret hlt out mov pop jns movsl aad sbb popf push pushf mov dec testl dec mov pop jmp pop out adc (bad) sub jl rcrl addr16 fildl punpckhdq cs jb push sub mov xchg out bound fnsave (bad) (bad) mov jnp add cmp sub enter dec mov (bad) ljmp cmp xchg pop inc into daa add mov mov (bad) popa adc stc cmp int3 sub js sub iret ja (bad) mov or and add cmp xor stos dec mov sub sub rcll leave push mov jno icebp std xchg pop das mov cld and sub (bad) cmp xchg xchg scas je inc and pop cltd pop and outsb xor lret jmp in jge negl test lret jle je pop adc xor pushf jbe mov aaa mov push xchg iret lret pop jl add hlt and pop orl dec hlt mov dec rcll je scas test test and lods mov int3 mov fidivrl or add hlt mov adc sbb ljmp xor dec adc pop out pop xchg mov shrl cmpsb jb dec enter mov cmp je mov pushl mov pop add stos jg add add xor fidivr enter add mov dec push and push add pop inc out mov lret call jecxz outsl stos cmp mov pop addr16 jmp (bad) leave dec dec sub pop push ds pop mov lods inc movsb mov push or (bad) cltd mov adc inc xor sbbl rorl or sub gs pop push mov jbe pop add jns push push pop (bad) pop inc in and negl mov xchg push inc xchg movsl pop int cs imulb inc push add jle pop sbb mov leave aam pop (bad) sub (bad) ja roll lret push add out pop (bad) mov mov aas movsl push aaa ljmp adc cmp mov orl icebp ljmp sub ret test mov aad jae sub stc ds repnz pop inc mov xor jmp jnp xor cmpsl push jbe add jle xchg test std cmp mov shlb xor pop mov jnp not push fwait sbb bound popf and das sub orb add push add sub pop pop pop and (bad) lds or or cmp jns add loope cli xlat daa sub pop dec or scas mov push sbb push setne cmp gs sbb out (bad) mov add mov sub rcrl pusha mov in inc pop cli pop mov cltd xchg dec inc das test mov mov mov rcrl push xchg add jb out lret sub lea fidivr and mov ds or repnz addb stc cmpsl pop popf shll inc xor xchg sbb sub aad repnz cmp sbb mov jne and ret push outsb scas popf aam leave inc inc cwtl insl das and insb mulb (bad) movl mov xor and sarl (bad) aaa outsb outsl in out and dec lods rcr or cwtl xchg lock mov sub dec jl imul mov or or dec jmp mov shll fnstsw xor adc sbb cmp insl mov pushf outsl mov (bad) xor pop imul inc push mov mov sti iret lods cwtl mov add mulb cmp pushl xchg call insl mov pop aad cmp enter push mov out xor cld into mov test push rcrb mov dec adc pop inc sub sub jae into (bad) movsb adc fnstcw test daa ja fnop inc popf mov or movsl iret jbe pop cld and test leave in jg lock mov pop inc xor bound out pop or je mov insb push mov cwtl leave negl or xor scas mov adcl movsl mov add jg mov test enter fs add lret inc lds fs lahf push xor aas int3 pop push mov in push test xchg pop dec and adc clc and enter jmp xor arpl push sahf and inc cld ficom cmp mov push test push repz das fimull repnz mov or fdivr negl clc xchg data16 xchg mov and xor xlat cwtd xor or loopne pop push mov or pushl test pop cltd ret and push lret pop cmp xchg stos cltd aas push jecxz mov mov pop movsl jg es out daa out gs mov rcll mov pop dec mov xor ja pop repz pop pop and pop jge push sti jb ret ja pushf push sub push lret rcr repz cmp dec push ljmp sub mov mov das xor sti mov pop out xor xchg dec xor mov and xchg mov sbb lret pop xchg (bad) xchg dec lods loop rcll sbb fwait mov or cmp mov dec sub mov or add or bound jo mov dec in pop dec mov push and cmpsl sbb cmp pop push mov shlb inc jne fistpl sub lea test xchg adc adc sbb pop pop pushf and xchg bound xor and xchg mov int xor pushf jne,pn jge ds popl pop xchg or clc pop mov call xor cmpsb data16 rclb (bad) sub cwtl sarl mov sbb std popf jge sbb int3 xchg in js ret stc mov fcmove ja mov push sbb shrl jmp mov leave out pop push push (bad) out pop xchg cmpsb pop sbb loope lds lods mov sbb cmc or pop xchg mov repnz fimul mov mov dec mov (bad) das xchg adc mov pop aam (bad) jmp mov add mov repz xchg test clc pop dec cli int3 pop xor mov sti sub into pusha xchg add sub icebp jmp and xor dec sub mov bound ljmp sbb xor aam jl cltd push fsubrs push dec jecxz xchg cli mov in pop fs (bad) jl or sub mov roll mov and fist sahf mov mov sub mov movsl in sbb add lods dec xchg icebp sub ret stos loop mov mov iret dec jae pop testl das not sub and or hlt (bad) pop xchg pop dec fnstsw and push push fs cli xchg mov dec xchg shrb jnp cwtl stos clc xlat in push and push xor (bad) and sub jbe dec jne or push and push out xor add dec and adc lahf jns inc xor adc and sti lcall pop les push out scas (bad) call jp add daa sub inc xlat dec (bad) mov mov cmp mov mov int3 je (bad) (bad) mov fsubrs shrb int3 or mov sbb lds push pop mov mov scas xor loope cmp mov mov push popa sbb (bad) addr16 outsb cmpsb dec sub xor out pop (bad) iret jnp mov (bad) mov xor and inc cwtl ficoml add mull cmp rolb pop call inc jle outsl sub repz or xor jno mov and sub add add out pop push and fist and stc nop xchg pop (bad) clc aas mov or add jo pop enter imul ret fstl dec out dec enter jge cmp adc and xor icebp aas jb xchg loopne out notl mov (bad) imul fwait push lret out popf adc in push sub xor cwtl add sub adc icebp nop imul sarl mov sarl mov (bad) daa lock pop out clc pop cld mov enter pop loop dec ljmp xlat jbe dec cld int3 shr lret lds in sbb xchg jecxz dec jmp scas or and popf clc jne loope int inc pop mov out negl push and or out pop data16 sub mov mov fsubrs aas cli mov popf shrb mov mov xor ffree or std std xchg cld mov leave or comiss and dec loop fcoml xchg hlt test sbb xor xchg push into (bad) mov out in xchg pop and negb push pop pop ljmp loope sub jge xchg dec iret inc ret push or jno rol pushf inc xchg mov lgs cmp lock cmp or sahf or ret icebp dec cmpsl in dec mov fs pop loop xor ljmp pop rcrl cli jnp in mov mov inc sti sbb loope shrb xor xor loope aas sub xchg (bad) in adc inc adc adc pushf xor lahf fxch lret push xor fistl into fsts sub mov sbb scas mov inc nop xor insb lea fsubs daa fdivp lea aaa mov out mov xor ficompl pop xchg repz add adcb fistpll add clc inc rcll inc xor test inc and ret jae or or pop das and push pop mov cmp pop (bad) sub scas add js sar mov xchg clc andl std mov loope aas out dec scas (bad) imul jge and sbb fidivr repz dec out mov lret mov adc or cmp iret stos mov mov xor loope ret test jne push add sti loop sub inc jae cld out fadd pop sti mov mov (bad) push xor daa outsb xor in in das cwtl inc xor mov sub or lock std or jnp mov les iret mov movsl cli xchg shrb push jns mov cmp push shr jmp push (bad) cmp cmc into dec adc sub out add pop lods add xchg fistl scas negl ror pop fidivr lcall rcl aas lods push (bad) (bad) ljmp dec mov rclb mov push mov movsl lret sti sub inc jnp es repz dec mov ret test and pop cs cmpsl sti and push xor cmpsb lea out scas and mov sub xor push and or lret and push negl adc mov popa or xor pushf lcall push cld add pop mov lods push inc popf push push (bad) pop clc or mov int loop inc mov cmp scas xor out daa lock mov std int3 dec push sub adc push adc sub flds jae add fs push ljmp mov (bad) ficom push sbb add and dec xor cwtl pop and popf leave inc sub scas xor aas push mov rep (bad) lret push stc pop inc sub outsl sub stc mov loop push test pop nop push cmp xchg jg cmpsb cmp into adc pop leave adc sbb jg add jl repz push vmovaps xor mov ret or mov (bad) movsb add sbb sub sbb pushf negb shll jne sbb repnz mov push daa popf in cmpsb aaa push fmuls jb repnz push sub xor xchg mov add xchg fisttpll popf fistp xor fwait jecxz xor idivb push scas sub popf pop xlat ss sbb mov mov insb ds pushf cs or adc out inc out (bad) xchg jecxz sub sub or orl scas dec adc fistp (bad) sub xchg sbb ret aad out sbb lods out xor jge jge xchg roll sub pop repnz cmp addr16 inc and imul out jb (bad) xor stos fwait rcrl mov add fildl push sub std dec sub ror jge (bad) mov and jg and pop ret mov sub mov push mov or (bad) not mov roll sub xchg dec or ja mov (bad) sub pushf cld aaa add jb pop push or mov leave mov dec clc addr16 loopne mov jmp cmp (bad) stc and inc cmp sbb add fcmovu daa dec cs add jmp idivl lcall pop cmp negb mov xchg out xchg out cmp add data16 push dec xor sbb popa and sub mov bound mov sbb mov sbb inc pop ret dec sbb inc sub shlb in cmp leave shrl idivl add fprem1 movsb iret cmp jno adc add (bad) and xlat lds mov ljmp add idivl xlat mov outsb ret sub sbb pop push mov les lret jmp lods mov addr16 test popf push clc mov cmc icebp push (bad) pop sbb lods and aad addr16 xor mov mov jge ret lea repnz shrl loope je dec mov push push leave (bad) outsl lods dec push sub fimul push jge in dec negl xchg dec loopne push dec xchg mov add inc mov pushf adc frstor cmpsl hlt mov adc push add jmp hlt xor (bad) test cmp cli out rolb mov aas inc bound mov push imul icebp out xor jmp mov pop sub sub sub into js,pn iret das rcll in (bad) push push pop mov rorl sub jmp sti mov sub mov (bad) mov mov sub test mov cmp jbe xor loop jae daa pop jb add cmp out fist mov xor cmpsl push dec mov repnz add stos cmp mov jmp sbb or ja xchg push lret mov dec ljmp push jb push add dec cmp sub sub cmp jecxz mov mov jge cld loop and adc mov xchg (bad) sti lret (bad) fdiv imul jge aas sbb jo lds clc adc jo push je push xor and (bad) push hlt das inc and dec sbb xchg lock fimul out cmp and cmp add repz sbb inc in jp loopne aam push pop xchg and dec ret rorb pop mov and cwtl mov jo push rcrl lds jmp std frstor lds lock lcall repz mov xor fisttpll sub js fbld cmpsl adc sub pop or insb mov push mov sub int3 fistp fs stos mov mov dec icebp xor or pop xor adc adc iret ljmp mov add outsl shll imul test js cmp xor std xor les out mov lea lock pop add rorl push fsts mov inc push fs fdivrs lea dec xor add call fs jmp cmc add sar loop sbb mov mov sbb inc sahf xor jmp adc push fnstenv call add leave sub inc sub dec pop lcall out sub loope bound sub mov out push sub ljmp sbb cmc int3 dec xorb xchg jge jge or (bad) in adc (bad) xchg push sbb dec jmp jne xchg lcall scas sub add mov sub xlat lcall mov xchg mov dec orb out int (bad) xor cmp cmp adc xor inc xor stos pslld pop sub into test gs imul loope xor aad inc or mov sahf pop fcoms mov sbb fiadd sub push push mov mov fs lds or imulb (bad) mov lahf add rol ficompl push cmp adc repnz icebp dec das call (bad) push lret or mov into repnz inc popf out dec cmpsb leave dec lods xchg dec mov das mov into sarb cmp mov lret rcll gs movsl push cmp or xor sti rcl mov push cmp add inc negl ljmp inc cltd and xor sub movsb push jecxz arpl xchg adc insb inc xchg cmpsb dec cmc cltd jb inc outsb mov mov lock testb pop and icebp jecxz pop jmp cli adc mov iret mov add xlat sub push jbe push push pop mov sub (bad) jge jae lods nop sub pop repnz or jne jns cmpsl sti xor jle adc adc jle loop xor std xor loop ja scas xchg mov cltd or loope loope das jecxz mov dec mov or jne inc sub mov pop xor out scas sub or and int jle mov lea rcl adc cld stos mov fimul in mov sbb repz add sub push repnz divb jecxz sbb lret mov ficom (bad) in push pop (bad) (bad) (bad) (bad) std fdivs or xlat cmp mov mov pop ds cmp adc and pop fs mov inc sbb loop cmpsl push sbb add sbb mov add fcmovne out rorb stos push fdivrs ljmp mov dec loopne ret lret add leave pop mov ret xor and dec push xchg cli mov xchg pop sub inc mov (bad) cld pop shlb jecxz xor insw cvtps2pi push xlat mov pop sub gs sub and ffreep sub fdivrs bnd (bad) xor sub ret mov fild ljmp aad jne and inc and orl divl fsts ret xchg (bad) out mov pop mov je jmp jns aaa sub cmp nop das (bad) xlat xchg add xchg cltd pop (bad) dec fildll dec es add lea in les sub jg idiv (bad) out test lret sub sahf jnp or pop mov xor fisub (bad) clc sub or xor jno std xor jg mov pop push pop cmpsb lods pop xor push fnsave cld cmp or ret jnp scas cltd sub ret xor and sub jnp (bad) outsl outsb add xor pop je imul divl adc xchg mov int3 movsb sub ja lcall sub pop push push push repz add sub mov xor std sarl test fnstcw or mov mov or mov les xlat je push in cmp pop xchg xchg jb push mov and rorb out xor in jbe aam aad sub inc inc and in lcall push fistpl add push jl call push fistpl cmpsl jne dec inc or mov mov or cld mov or inc fildll rorl movl xchg cld mov (bad) ret imul jmp insb (bad) adc sub adc or xchg dec mov imull mov frstor hlt adc clc (bad) adc stos mov inc leave push sti fnstcw icebp aam imul xchg xor cmp jge out inc pop shr loope stc push dec ja (bad) xor cmp leave ljmp mov mov test (bad) int3 (bad) imul repz mov sub std dec orl pop dec (bad) lock adc sub scas (bad) cmc idiv xor pop das xchg xlat cmpsb pop sub test cli fildll data16 or and (bad) scas cmpsl mov xor int3 mov (bad) push pop out adc lock insb cltd and stos mov mov (bad) pushf test dec sbb fldcw cmp (bad) fcoml or xlat mov push lock xchg ljmp roll movsl imul xor sar xor not push and or movsb fwait out mov dec test ret push or sub repz xor mov push mov dec and (bad) (bad) fcomps and ficoml nop adc pop xor jae sbb add bound (bad) leave aam imul cmp xchg fs or sub ds or fisubr inc iret xchg roll (bad) fdivr out pop sub xor loop dec sbb sbb movsl jmp push jns inc jno (bad) push rcrl fistpl adc cmp xchg pushf mov push push mov dec (bad) mov popf fisubr add add sti mov rcrl pop dec movsl es pop pop add sub fbld daa ret int3 lods pop sub jg pushf pop push icebp out cmp mov adc mov divl or fldl mov sar sub mov xchg idivb clc xor mov add (bad) xor adc out pop mov xchg mov and xchg or (bad) mov fstpt adc roll sbb lret jbe imul and and gs inc inc add xor test lods or out push shr inc leave ret jmp das jno xchg lret popf int3 or cltd add xor (bad) xor mov inc push mov dec sub cmp sti xor fistpl dec and xor add sbb push lods imul mov ret inc mov fisub cwtl cmp fs (bad) loope adc out jnp dec mov ja push inc push mov jae push mov icebp and push push sbb push mov push push fadds sbb add xor dec pop scas mov and push push cld call xchg jg adc lcall pop dec cmp cmp repz push push push dec pop xchg test cld jg mov or aam fist mov dec xchg test mov shll or pushf fdivrs mov loop push test jmp push mov nop cmp or mov push mov loopne js adc ds daa cmp pop (bad) outsl test das sbbb xchg dec pop pop add mov pop outsl inc rcrl jecxz mull hlt icebp aaa imul jge jo sbb in add iret jg ret push bound pop cld fisubr push pop push loopne push pop cmp ljmp jge xchg std ds aad fcmovnb cwtl in mov pop testl push xor cmc fmuls out insl sub or xlat xchg iret jge mov add adc dec jb jp cmp addl stos dec jae push pop push mov mov add incl add inc shrl pop mov es xor mov xchg jne test dec xchg fdivrp sbb out jmp aaa je push push or pushf (bad) cmp xor cli rclb out pop push leave test xor xchg lret leave sbb xor xor and out fwait mov div or mov push inc mov xchg into or and fadds test cld lret push sub push mov xchg in add fldcw das jg dec xchg ja push daa mov pop pop push (bad) sub jp into bound inc adc inc xchg mov loop (bad) lret cmp stos xlat mov popa test mov mov and and aam push stos adc fnstenv clc cltd outsl jb sub jbe jl lret ljmp jne mov ljmp push or add pop xor int3 mov pop jle in mov es inc and inc add push lahf xlat fsubrp cmp lahf dec and mov xor stc pushl nop cmp rcrl bound into push jl sbb shrl jecxz pcmpgtd cmp iret pop adc pop and (bad) adc inc and rcll je push in xchg lret sub pop xor add (bad) in pop stos cmp shll xor sar aam add cld repnz xor sbb ja push out xchg rolb stos or xor jbe sub insb or (bad) cmp dec (bad) xor or and aas sarb (bad) and mov push fcomps sub ljmp and inc sbb ss add adc daa dec popa cmp mov pop jle push cmp in and push (bad) add aam fstpt xor ret (bad) idivl pop or mov mov arpl or mov movsb pop repz adc push jle mov mov push xlat or iret pop jp pop outsl or (bad) std pop xchg roll outsl sub call add pop cmp and push mov fisub pop pop push mov shrb push jns js sbb adc negl sub pop push test sarl jb loop adc iret std ja push push into lahf and push mov cmp (bad) mov inc sarb fcomps les xchg jns movl push push pop mov lods (bad) adc lock nop pop in or aaa xor pop ror int3 loopne add lcall adc (bad) jge push or or std and dec ret std xlat pusha outsl push push jo add push mov adc fbld adc add push push pop push cmp cmc jg lcall shr pop mov pop mov out jge rcrl fldcw or ret int3 jecxz add adc cltd sub test xor test out lods and icebp test loope add sub add sbb jmp scas incb sbb sub in inc test inc mov aam jmp push adc ss mov push cmp push hlt sti out leave jecxz movsb pop fdivrl jp and and or mov push fidivrl mov add inc repnz mov loope fsubs xor ljmp lcall xchg dec pop (bad) stos xlat clc ficomp push mov cmp or mov idivb add cmp mov mov jno or mov pop mov in or dec (bad) mov jbe push push xor or lock mov gs lods cmp sbb addr16 pop (bad) (bad) das out or sbb movzwl jmp into xchg xor ret sub (bad) xor (bad) leave pop stc jb (bad) mov cli idivl push in sub outsb cmp jmp xchg pop std jp push push sub repnz mov dec sub mov xchg adc jmp test dec idiv daa in adc fidiv shlb dec dec scas rclb (bad) jae and push sub cmc nop mov stos lret add dec inc add and pushf les and decl clc or cs cmp divb std iret add sarb mov call mov xchg mov out lret icebp (bad) sub push pushf clc (bad) lret (bad) jns scas mov ljmp daa (bad) dec fistp and jbe out (bad) sub popa sbb add repz test cli flds or lret sbb xor cs add dec inc or xor stos bound jno scas fadd leave fistp in into and stos mov mov jp dec out aaa in faddl scas xor push lret adc lret bound ljmp stos bound in icebp xchg sti jno (bad) repnz (bad) add sub and cmp push loope mov pop cltd dec adc lret loopne enter dec jb push xchg rcl sbb push in es (bad) mov movsl jne pop jmp mov bnd cmp mov popf push outsb leave push xchg scas xchg lds sub iret adc dec or pop fcompl jns js movsl mov cmp repnz ja ret fs cli sub push ja repz sub pop les push arpl aad mov dec test adc sub (bad) mov (bad) mov sbb push out add sub or cmp or adc sub pop cs ljmp subb (bad) pop scas inc pusha add xor mov idivl out jne sub into push xchg mov and push add in add push mulb adc sub test mov push xchg add dec jno addr16 sub mov add sub push lock in enter (bad) and out out popf es (bad) ljmp scas je stos les clc xchg sub into int sub inc inc aaa aas lret mov cmp (bad) mov je test adc movsb mov outsb and not and mov aam ret xchg out (bad) add nop jo and iret sub sub pop mov inc ss push outsl (bad) fdivl jb and aam enter sbb ret fsubrl sbb push mov ret mov ljmp out push adc ret adcb lods or pop mov nop (bad) jmp cwtl xor lret mov xor test dec mov or xchg mov repnz in pop shr nop mov lret rcr add dec xchg cmp mov pop mov inc xor out or pusha nop xor loop push in mov add pop cmp je adc mov iret lahf incb call jo xchg fist leave (bad) ja aaa inc ds or out fstpl lods pop xchg dec or or repnz sti cltd inc repnz pop jmp xor sti push mov inc xchg sub (bad) sub pop xchg ficompl lret loop icebp orb dec cmpsl adc jg daa (bad) lret inc dec and js mov mov cmp mov mov or ljmp hlt stc dec aam xchg lods push cmp sub fdivrl (bad) movsb and lods ja push (bad) aas pushf push add mov enter das pop add mov pop out pop adc imulb mov jg xor push je xor add stc addr16 and cli jmp inc cmp pop dec push mov pop cmp mov scas add mov decb lea sbb mov mov test mov and outsb call mov xor shrl rorl pop or push in fcoms xchg iret push (bad) js jle imul jmp or jb,pt adc sahf jno movsl out mov repnz jge xor or shlb cmp stos iret push pop fsubrl cmp jmp pusha sahf adc pushf pop and push cmp sub sbb inc (bad) int3 xor (bad) cs lods sbb push test and movl pop repz xchg jecxz pop mov cmp incb sub fwait rcll bound push pop push loope fstpt mov fs fsin out dec mov cmp repz iret je lds mov jecxz sbb mov xchg (bad) iret les (bad) jmp mov inc mov jp jle xor rclb loope mov scas lret xor (bad) leave icebp cmp pop and push pusha in (bad) je (bad) jmp xchg push gs push (bad) (bad) push (bad) repnz xchg jae mov lahf xor insb cmp cli mov or add adc or mov adc (bad) popa pop xor add cmp mov enter cmpsb ret inc lds ficomp mov pop xor xor stos xor stos mov aaa pusha rcll pop pop xor push mov jns lods jle fs test mov add cmpsb and sub mov enter mull xchg out daa rcrl xchg xchg repnz fimull cltd and fs add add cmc cmpsl je jg adc xor (bad) adc push lods daa idivl pop popf je,pt mov shrl nop and popf test popa cs imul push add scas in push lahf pop add cmp and (bad) out (bad) shr xor int js sub out jnp iret push sbb aam cltd xchg mov lods dec insb lret lahf bound out mov dec ss mov and in and je shlb add cmovge ret in mov mov inc movb shr loope jne inc sub cmp or push jmp dec dec and scas mov adc dec mov push dec out fdivs cmp pushf int3 call mov cmpsb jae lods or inc push sub or push ljmp mov daa das sub xor sarl pop lret or jl push xlat movsb inc idivl adc push mov push les daa xor aam xor (bad) jmp gs int fucomip scas cltd xchg sub xchg mov out push mov adc (bad) cmp test push push rcll dec jbe icebp add test sub rcll jae out (bad) pop in insb mov jmp push out dec xor mov frstor pop fistpl rorl xchg pop adc in test jmp gs or cmp lahf lret mov loope adc jmp mov and negb icebp add sub out stc mov xor pop imull ret push dec in and adc shrb fisubl fsubs icebp and rcl mov shrl mov add xchg cmpsl pop orb and sbb cmp out dec and (bad) jae call push xchg das lcall fidivl pop ljmp mov or cmp into std in add pop sub stc mov add push dec or or cmp imul pop mov in daa ret cmp fcmove (bad) sub dec out pushf (bad) fwait addl int3 pop xchg std sub int3 je mov mov insb cmpsb mov leave (bad) jecxz icebp mov dec and pop mov xchg ret sbb shll pop jno mov ret cwtl imul daa push cltd jb das mov or imul std push lret outsl dec (bad) cli sub mov idivb or scas sub sub (bad) popf pop in clc cmp adc mov jmp xchg lea mov push jae out ret lods mov inc sub pop (bad) negb idivl mov pop jg mov out cwtl push cmp fidiv or jge (bad) pop loop xchg decb call popf ret adc or shlb or lahf fs dec in sbb cmp cmp xor xor out pop mov xor add into xlat in push add and mov lcall or bound movl leave mov shr push std mov sysexit and int3 fwait clc das inc xchg idivb in dec movsl adc pusha xchg fwait inc lds shr or enter lock cli sub repz mov (bad) icebp sub pop jne push pop jmp mov je mov dec mov pop jmp jmp push imul jmp mov lahf push xorb sarb mov fldenv sbb mov add sbb pop into aaa dec mov dec mov addb xchg fbstp adc mov ret fiaddl fldenv dec out out pop cld ret pop cmc fstps test sub int sub pop cmp jns leave jp cld and pop out popf jns xchg ret lret pop jg daa dec shr push (bad) movsb das mov (bad) mov and cmc mov ljmp xor and cmp xor sbb fistpll fnop inc xchg (bad) repnz pop out into iret rorl lahf mov mov mov out cltd test sbb pop mov (bad) mov sub inc cmp xor loop dec inc xor fsubrp xor mov leave push mov lret sbb rclb stos sub sub mov or mov fxch dec out call push push or adc mov sub imul adc or xchg lahf fwait mov enter jb sub stos lahf jmp lahf xchg es testl addr16 add std shll (bad) and inc (bad) ljmp jg push xlat jae mov popf and jnp and sub add mov ljmp test rorb and jbe add cltd ljmp (bad) ja mov push and add sub out push sbb sub cmp dec inc lahf fistl add stos (bad) pop imul icebp jno or lock pop jp pop and jb mov cmp push inc inc xor cmp mov adc das cmc (bad) out inc xor popa outsl stc out mov or dec lret scas mov inc mov imul aas sub inc sub negl dec lock repnz cmpsl pop fnsave fcmovnbe adc jecxz outsb enter pushf push inc dec mov adc cwtl iret (bad) or call and gs dec inc cmpsb and and int pop dec cmp repnz or aad imul (bad) dec dec fldl dec adc dec lret in push xchg out ret lcall popf daa pop jno lods sbb pushw es inc fsubp xchg jmp mov clc mov pusha xchg out and push jno ret add pop (bad) push ds cmp push loop mov add cli mov adc mov xor sub or mov jnp out cmp js xlat xchg fwait or cmp (bad) jno movsl jl adc out cmpsl leave daa sub (bad) mov jecxz nop imul and out mov fisttp sub or sbb mov icebp stc leave push mov or pop gs into xchg pop pop mov lods and inc pop mov lods (bad) mov repz push xor scas mov shrb and icebp add ffree incl fnstcw xor repnz lahf dec inc sub push ds sub (bad) (bad) or add clc and aad mov in out mov pop cmp out or daa les mul hlt dec add pop mov sub inc repz loope or and jl out dec lods lock out pop ret repnz or mov mov fwait shr inc and add cmp cmpsl outsb cmpsl popf ficom sub sub pop ret inc mov pop fldt daa loop or test mov mov jp jg movsb mov add adc out sub mov xor sbb jbe dec mov lret int3 pop mov fs push or ljmp and test (bad) or push pusha (bad) dec xor pop dec fs fs test popa push mov mov inc fsincos aam scas sub pop push lcall lea mov aad add je and mov in fs pop (bad) push sbbl ret clc add add cli xor je imul cld sub cmp push cmc mov mul sbb jno pusha add jne add add jne xor (bad) movsl mov mov mov lds mov mov cmc popa repnz jbe and push enter out mov out inc test xchg pop mov adc lock xlat ss push adc sub rol std loope or cld jmp dec out mov sub in mov and sub xor xchg lret mov imul jecxz das out pushf or and mov xlat or sbb inc and bound rcrb cmpl push cli mov or mov push cmp rcl std sub jo dec out jge and pop (bad) and mov pop cmp pop xor jbe jmp lcall ja into xor mov xor lcall lret push dec enter sub outsb adc cmpsb push mov dec push out cmp mov dec mov rcll lahf adc hlt rolb je inc jns lds repnz nop mov adc mov sub dec int3 adc add je push mov sbb cmp je test pop dec mov scas in xchg mov push adc arpl sub inc and pop mov xchg das adc ret or call cmp movsl xchg gs cwtl (bad) xor and push sub pop or and sti pusha mov xlat out repz sub and push mov mov iret ds idiv push (bad) adc je pushf cmpsl out mov push imul movsb adcb lret jmp movsb shr lods (bad) repz dec mov pop adc xor mov xor mov or push repnz out das sub aam iret sbb dec icebp xchg leave inc pop cmp call mov pop mov jmp pop xchg push jmp add pmuludq (bad) dec (bad) (bad) push test mov mov out adcl mov int3 popf hlt repnz mov jae cmpsl inc or xor or dec mov and stc (bad) xchg push cmpsb mov mov pop movsl add cmp outsb dec mov sub xor leave ret leave mov ret std stc dec bound mov jmp sti pop sbb inc sub outsb bound push xor inc add push xchg pop idivl aam adc out sub mov xchg ret in cmpsb mov loop icebp call push jge xchg dec pop lret pop mull into add mov cs or mov push adc leave pop out repz shl insb add push sub or test (bad) mov arpl jae or lret (bad) iret xchg jle push jne add add cmp sub dec nop xchg pop fxch inc or pop (bad) out pop jecxz (bad) sub pop scas sub fiaddl nop lcall mov andb daa fnstenv sbb dec imul outsb cmp icebp test stos sub notb cmp jmp sti aad in add sbb ljmp adc mov pop pushl lods push add mov loop pop jno inc or dec cmpsb out popf xchg in mov repnz or loop les xchg fimull scas mov std daa xor jle inc pushl popf (bad) and pushf jle leave notl cmp (bad) loope pop (bad) into pop xor mov dec pop movsb jmp leave hlt (bad) shrb mov or iret fisub stos dec mov lahf sub dec (bad) repz test jecxz adc pop and cmc (bad) xor insl mov ret sub cli jecxz lret out xor sub sbb or cld rcl mov ljmp dec jmp sub sti popf push sub loop fdivl and in sub lock sub scas jne ret je leave jl jmp sahf cmp mov (bad) mov sti bound ret cmc push dec dec mov add or ljmp pusha or ret push mov fstpt cli loop popa jmp cmp ljmp cmp imul add mov push ljmp into adc mov ljmp je inc xchg repnz sub xchg lret ds jne sti mov push movsl adc or adc sti sub add lret mov adc push adc xchg arpl aad andb pop dec pop mov imul cmp xlat test dec mov sub sub mov loop,pt rorl test pop sub sub pusha add fdivs lds lods stos or (bad) ja stos xchg iret ljmp lahf je lret pop dec imul lcall aas add mov in ret xchg pop mov lds cld idivl sti (bad) out leave mov adc mov sub fldt bound test push loop ret in mov test lock ss xchg cmc sbb mov es xchg jmp xor aam xchg add fisub (bad) push (bad) pop fnop xchg das sbb push mov inc xor in add hlt scas call or push inc mov jno cmpsl je daa js mov data16 lods mov cmp mov mov fdivs clc jmp mov lock push pop ljmp xchg (bad) xor cmc jo jnp xchg xchg loopne (bad) sub sub xor lods loop jne rclb jecxz fadd notl fs lahf imul xchg notb (bad) xor xor or adc sub or jmp (bad) iret push and xchg push xor mov or test xchg push adc or lahf push imul pop mov out cmp dec lods mov jecxz and xor test (bad) int3 aaa sub mov pop je clc std (bad) repnz sub or push shr pushf cmpsb out dec mov pop jle jmp xchg aam and fcomps push inc stos sti mov sub add jle aad stos xor add ss dec (bad) call popf cmpsl jnp incl sub stos lret add out lds cmpsb mov pop js shr fisub pop xchg out inc add xor mov (bad) fimull data16 mov xchg icebp les and scas jnp scas push xor dec mov dec (bad) out mov movsb repz dec mov push jne sbb xchg jbe pop sti fs xchg sub nop mov shrb js mov xchg jo and xor ret ja sahf dec dec imul test popa xchg lea outsb test leave ljmp pop xchg jle push and mov or addb xchg je loopne adc outsb lods push out stc movsl leave adc int3 cmp dec pop loope aas sub ljmp sub xchg les in sub dec les ret lcall repz lret pop mov xor mov xor inc aam xlat xchg push pushf add mov enter shrl cmp sbb paddq dec test and inc out push xor push movsb inc xor test out pushf jns add stc add sub jo stos les sub sbb scas dec out add mov cs xchg enter push add pusha mov add lahf sti out adc ljmp pushf add das and cmp data16 mov fldpi mov lock dec or testb cmpsb xchg xchg pushf pop pop push jno jecxz sbb stos mov int3 or test popa scas ret add or adc pop mov inc xchg inc imul adc push cmp out mov or mov fs loopne mov sub adc (bad) mov mov out jp and sti cmp mov test rcl push out push cs fsqrt pop sub and icebp adc and outsb mov (bad) in mov pop repnz mov leave out pop test loopne inc sti push xor fsubr jp pop xor add movsl push aas pop out mov out nop (bad) mov cmp cld push out add mov insb mov (bad) mov movsl lock lahf loop fsubs lahf mov jns gs add add mov sub out cmpsl add add cld pop movsb popa (bad) out or jb or shrl in divl mov jp movsb test push xchg xchg out fbstp (bad) fldenv das mov mov jmp pop aad xor add dec cltd movl and rolb (bad) cli sub mov addr16 mov popf pop push mov jmp mov mov push jmp call xchg aam push push subl inc imul inc std in pop mov inc icebp dec cwtl dec shrb imul xor ret gs out mov pop mov xrelease inc out and and add and or mov fldenv cli push (bad) adc sub dec stos icebp jno or or xlat mov out movsb xor ret xlat inc sbb jecxz mov lods popa add sub clc jle icebp mov push cltd movsl push pop dec jmp int jp cwtl mov das in lret xchg push sub loope in inc inc sub rolb ds mov icebp cmp and mov jmp rcrl dec stos mov adc mov cltd push lods lret adc stos sub (bad) pop or jecxz sbb add adc jge or leave cmpsl (bad) loop lock (bad) leave das xor js sahf sbb jne repnz lretw and or lret and das mov fucomp jle add add dec into xchg das dec jecxz adc fisubr (bad) test stos repnz fwait xor sub fdivrs pop (bad) adc pop and lea (bad) roll mov mov fmuls xor sub stc sbb idivb sub inc xchg xchg dec push pop rorb xor daa in and fmuls popf xor xor or add nop xchg mov (bad) cmpsl fcmovbe dec adc icebp enter orb fisubr pop adc mov imul xlat sti fcoms rorl cmpsl fadds add push jmp bound arpl inc push (bad) mov dec and shl and xor iret jns pop or fisttp pushf lret imul mov xchg pop sbb sub pushf inc cmp movsb jmp dec cld pop scas dec pop adc push dec mov cmp or jg xor mov lret repnz jno movsl repz mov std adc lahf outsb negb divl lcall push int3 fiaddl mov das call xchg rcr cmp fild mov into popf fsts rcl (bad) mov xchg (bad) mov rcr lods add dec or xchg aam imul dec mov pop popa adc cli in fisubr into xor mov stc push inc ret inc push mov and and jbe or ret cmp mov sti jne cmpsb xor out mov xlat mov xor sub lahf add lret inc inc xor sub add pop ja loop mov jno inc add mov pop loopne test and mov pop add es fpatan outsb mov sbb dec push and loopne out mov fucom mov sti mov pop and movzbl int pop jle daa jnp test cvtpi2ps das jmp xchg fbstp pop mov push lret mov add xor (bad) inc das gs push mov int xor loope cli das aaa lret movsl repz (bad) mov rcrl test cmp lods int3 xchg stos push mov adc mov sub or (bad) push stc dec ret stc pop inc out les test cmp pop test cmp xlat and xor xor es and stos sub or pop pop pop dec mov out lahf jnp sub mov scas xlat mov cs mov nop das (bad) loopne sti (bad) popa push xor cmp inc das push jne cmpsl xchg pop imul loop push jnp sub or test jp add andb xchg hlt mov push ret test ja xchg ret dec mov imul mov jnp mov add das and pop mov sub sub mov adc sub cmp negb sub xlat sti mov bound out bound sub jp imul push hlt iret push mov xlat mov enter call (bad) inc mov arpl fcmovb push push idivl movsl dec pop sub sub sub cmp xchg jge xchg and aam int inc add xchg out xchg jp loop pop in js add mov pop mov in mov cld popa lret shll or xchg ret ror ja sub lret mov stos div xchg stos fwait jge or mov push adc (bad) mov sub push rorb dec xchg test (bad) scas popa insl mov fs (bad) dec sbb push rorb lea cmp push mov pop (bad) mov inc dec and ret js xchg jne test jp xor and mov rep mov adc jo aas xor (bad) mov je add lock add xor xchg mov loop aam push loope fdivs dec andb mov adc sub cmp mov cmp nop pop clc sub out sub mov sub inc jne stos jo push jbe in sub out pop jecxz in mov or pop (bad) fldenv lret add mov add aaa cmp pop cmp cmc add iret jae movsl sbb jo (bad) int3 add lods mov in sbb ja aad sahf sub fisttpl fcoms mov (bad) pop out cmp movsb pop xchg ret xchg pop mov das lods pop pop movsb push pop cmp adc mov aaa cltd scas or popf adc adc mov ljmp into leave mov in push leave inc fldenv jecxz lcall sub and mov outsb out sub mov imul ljmp (bad) scas loop test mov scas or xor dec ret jae idivl adc mov popa nop fwait push out rcrl dec push int3 insb clc mov jmp dec (bad) jbe lds push mov inc pop adc out sbb leave sub fldenv push and cwtl fimul aam or stc jbe bound cli stos nop pop ret xor jg imul inc mov dec mov dec and mov (bad) vmovaps or xchg mov push in push pop pop repz sub xor cmc shll sub bound enter rcrl movsb xor das fsubrs flds movsl arpl or ja (bad) push out and xor sub mov pop mov adc jmp aam cmp fsub or fsubrs push sub and shl xchg mov xlat dec push test adc out or dec sub sub loopne into popa xchg sarb cmp negb sub lds mov inc xor sub mov imul outsb sarb xor aam push into cmp pushf cmpsl jl mov iret repnz add jb add xor cmc stos jae clc idivb mov scas mov xor sub xor ja xchg cs fsubp (bad) into mov stos gs call mov sub pop pop push fwait push in pop cmp into leave (bad) jne sti cld aas pop lret jl sub js (bad) add sti aaa and (bad) xor rol pop ds cmp outsb popf lds sub add loopne add ficomp mov or cwtl add adc sbb gs pop mov push dec and push pop lea xlat add xchg iret stos repnz out call shrl es dec lea add dec mov dec mov jnp push mov outsl mov pushf jmp mov (bad) mov dec loopne imull mov (bad) cmp mov inc or icebp cld imul sub mov xlat xchg or fs in cmpsb push imul stos mov cld repnz ljmp or adc or mov and mov dec outsb dec jmp fdivrs pop iret stos sub adc (bad) fnstsw (bad) cmp test (bad) rclb xor mov adc test sbb mov movsl ret int3 sub ret in sub pop push sbb imull rcll loope (bad) jecxz,pt cmp outsb adc push out push imul outsl sub lock sarl cmpb sbb test iret cltd and out test test xlat xchg and fstl mov cs aam mov pop cmc xchg sbb mov sub add xor mov std je icebp cltd or jnp nop insb (bad) mov lods imul push and push xor mov jl fcompp mov mov dec pop fdivrs lahf je jb jno push xor xchg xchg mov jo mov push push lds xchg sbb cmp inc test mov pop xor call (bad) sahf and cli jne cwtl cmp add mov xor scas inc call sub dec mov daa negl inc aaa or outsb pop push ret push cmc sbb xor mov bound cmp adc push inc sub sub sub or and into mov mov (bad) sub movsl cld orb or in and fmul outsl xchg inc and scas call out repnz mov in das adc sub lret or and (bad) shrl and pop and mov or out (bad) jge cmp mov stos (bad) xchg pop ficoml imul push movsb mov fcoms movzbl stc in xchg (bad) adc push lock lcall inc and jns sub loop push loopne or dec pop fldl shlb pop call jg lods and jo push jge mov pop add arpl (bad) sub fst and inc dec out and sqrtps (bad) cmp les test fisttpll adc sbb jmp dec lcall mov add into push pop movb fcomip rorl jp push or lock test repnz iret clc add ja sti cmp sub popf fstl test mov mov in inc outsb clc jbe repz lods rcrb (bad) mov (bad) mov je fimull xchg fbstp test push repz test sub dec pop add testb dec lret test mov (bad) std data16 flds and mov popf add repz sbb std int3 lock dec sub lock (bad) mov jmp adc scas adc int sub out gs push and xor movl add xor int3 aaa add dec cld adc (bad) push xor ret push cs mov xor or mov mov push adc or imul les gs pop xchg adc call sub sbb xor sbb push test out mov sub jge sbb cld xchg cltd xchg cli xor sbb jbe adc lods mov adc sub mov adc sbb xor pop mov pop add scas int xor or daa sub jmp insb mov push and sub lret rcl mov fcomps xchg cmp jne nop xchg push jmp mov adc sub scas jo xchg xchg ret pop out or pop (bad) jle push pop mov daa jns leave stc inc cmpsl jbe imul in mov fs idivl mov dec loope cmp xchg mov js orb mov xor div cld and mov xchg push (bad) lds push mov loopne add add mov xor jne xchg in jne repnz inc jmp sub (bad) in lods dec mov cmpsl jns adc dec mov repz mov xor adc mov das data16 in cmp xchg das push icebp sub (bad) mov das gs out in sub jmp xchg jne xlat orl cs fs jmp leave jne inc pop xchg sub and leave pop ss sub das sub pop rcr mov and lar cmc cld mov add and fwait inc dec pushw sub out mov data16 lods aad imul cmp sbb push scas daa adc das inc sbb sbb out mov cli sub js cs pop pop cmp icebp dec lods incb jecxz mov mov lret imul dec adc lret cli repnz or mov jnp cmpsl fld1 leave fnsave mov jp int push cmp lock mov dec jp mov pop cltd xor ds shll repnz xchg jecxz loop xchg mov xor lock cli into mov mov insl lods adc jge xor jl pop popaw jl iret fisttpl icebp int cmp cmp fstpt mov ljmp scas xchg adc mov xchg pop lcall stos aas mov pop std pop insb lret xchg (bad) pop clc aas mov repz push push loop lcall dec or movsl es das je out or movsl data16 leave repz mov dec add jbe mov sti sub add adc mov dec xchg xchg stos (bad) imull pop inc aad inc imul push xor add inc cmpsl xor sub (bad) test (bad) bnd dec ret test dec fsubs jmp in cli xchg pop sbb pop push cli sub mov push sub lcall in (bad) mov xchg push daa mov push and sub pop jmp fsubrs test jmp mov (bad) jns xchg stc ds out pushf xchg in in (bad) movsb shlb dec add adc sub mov xor xor jmp insl jl stc clc mov jo shrw cmp push jo les (bad) out in leave iret ljmp mov out and aas js pop je scas jecxz sub into test (bad) int3 push mov xlat mov clc dec adc and push add adc xchg dec dec rcll ljmp pop inc dec sbbl xlat adc sub shr out push jecxz pop cli xlat pop xchg (bad) repnz dec sbb adc xchg (bad) mov pop mov sarl dec mov pop sarl mov mov repz imul push insl dec das mov rcl add push jg cmp mov sti jb aas jno or stc ffreep jbe aad sub push gs imul enter xor lods pop xchg loopne (bad) xchg data16 and lds mov ja mov fwait gs jmp icebp and imul jecxz out stc ja ret mov sub mov test mov dec mov aaa int3 pop std mov in cli mov es sub in sub xchg leave mov mov pop insl (bad) outsl imul jae add pushf sub xor fs xchg lds cmpsl mov add and or mov inc pushf cld sti sub lea fcomip sarl and push jae addr16 jp cmp push and sub cmp sbb cmp xchg movsb fwait lds fnsave rcll add mov sbb jle jmp dec jmp jb mov and inc int3 jge fstl dec (bad) dec test icebp mov jge movsb push pop stos push pop call push dec jmp jbe pusha mov cmp xchg (bad) xor (bad) push ljmp mov repnz aas popf xor dec mov jne or das push xor sti and cli or neg xor dec fldt enter and cmp ret lods sbb lods mov mov mov mov (bad) cltd dec test cmc pop lret repnz push xchg mov bound fdivr push add xor jne adc insb cli js cwtl rclb mov cwtl jp mov jo lret pop sub add jecxz jl fimull push stos enter shrb imul dec cmp cmp movsb popa int leave jle cmp in das xor mov cmpsl mov push incb and sub and sti bound dec mov icebp add mov (bad) push shl push cmpsb adc sbb out data16 mov out jae jl (bad) leave xor cli pop test mov push data16 gs mov mov (bad) xor popa dec ret (bad) jb and mov fldenv rcll jl (bad) jecxz cmp mov outsl mov (bad) xchg jg cmp adc out sbb ja mov sti and sub xor sub and fidivr mov jg imulb scas mov xchg gs mov pop xor jmp pop inc sbb and dec ret mov scas sub in les out popa adc subb repnz inc xchg or popa lods into and add or or xor stos fsts cmp sub xchg cmpsl jl rclb pop repz xchg ret mov dec imul mulb pop (bad) and fisubr int jg mov (bad) xchg sub xchg fwait movsl adc (bad) sahf push pop jnp mov out pop mov shlb xor loope inc push lret adc jmp inc mov pop sbb (bad) xlat xchg out dec dec push jns (bad) rcr xchg mov stos imul into jb out sub ds jne repnz sub or adc xchg sbb out cmp stc sub adc pop shrl aaa in sub add aaa jmp popa or and dec (bad) sub bound mov pop scas addr16 cmp dec roll xchg sub cmc ret push fs divl pop jns icebp pushl fld mov pop imul adc xor sub xor shrl dec lret leave stc adc sub in bound cwtl mov fiadd leave ljmp mov rolb pop rclb leave movsb ret xchg adc loope adc adc cli mov or leave dec or sub sub out dec and adcl add dec dec test test (bad) fisubr (bad) icebp (bad) pop push pop ljmp out popf mov ss mov gs dec dec repnz fiadd in stc in mov push shl adc addr16 stos (bad) lret pop mov mov aas lock das add idiv sarb or repz mov data16 jb push sahf pop mov dec cld daa lds les shrb dec les fistpll pop fcomp ficompl inc jp icebp xor movsl lret push mov dec jl imul lds sbb aad out or test sub pop inc xchg lock xor push mov lock movsl or int3 sub das out sti cli jne mov push inc pop mov and (bad) jmp dec pop fst push add cwtl fcoms and mov pop jns add mov pop call jns les mov mov test mov adc xchg mov push mov into add pusha sub fisttpll scas je loop add mov popa mov inc cltd jmp aad sub or decb pop (bad) sub xor pop call add or mov ljmp sbb fcmovne mov repnz jne fstpl test or out out dec fcomps xchg push xchg lahf jbe int push ljmp xor jle jbe leave adc push mov ss xchg es xor int3 xor jp dec xlat mov hlt mov mov lds mov aam arpl stos rclb cmpsl mov jg in cmp fisttp xor cmc (bad) dec mov jg movsl mov aas xchg shll cmpsl mov wbinvd jmp xchg (bad) scas lea cmp orl in jg pop dec ljmp cmpsb dec inc adc dec popf (bad) mov subl cmpsb shlb ror daa xor ja dec loope test pop clc add push in mov imul push sub inc xchg inc sub stos lret test imul leave or and repz ret mov mov ljmp cltd ja lods insb and add inc jmp or shll mov out push movsb cli xlat mov imull dec mov out and mov sub fcmovbe ret mov call sub add gs add push mov inc cmpsl push jns outsl push jno ret add sub call lods rol add cmpsb mov push jle pop gs adc xchg push outsb add xchg dec add scas fmull sbb jge push dec mov jbe pop ret sub je lock lret out sub scas out imul mov decl push mov or push mov movl push leave int3 mov stos add (bad) sub and and mov mov out pop mov cli call ljmp sbb cltd or add mov and sbb repnz ret mov clc dec push jp aas (bad) (bad) fildl sub flds push push call mov lds scas nop mov or xchg es (bad) pushf imul (bad) das cli pop mov in dec (bad) and ds add fdiv jno inc idivb icebp push mov test aas ljmp call lods ret jns dec fisttpl and lret fldcw dec (bad) lret movsl push aaa jmp insb lcall out (bad) dec pushf inc or jbe mov (bad) negb rorb add jmp pop mov xor adc push push inc cmp push inc mov push mov lret and fcomps mov xchg pop das xor add adc jg inc dec dec mov int3 sub lea inc mov repnz repz mov cli fldl and sub fs shrl and cmp xlat out push and je pop (bad) scas shrb ljmp dec fistpl dec lahf pop jg push mov or sahf adc pushf sar dec cltd fistl (bad) jnp (bad) sub sub and lods movsl jo dec jo mov jbe stc mov pop inc or sub aaa jge or repz adc in sub mov aam jg sub or test mov sbb add or mov pop cli xor leave dec jle add xor cli mov sbb movl mov add out mov out cld add adc adc insb pop sbbl sub dec sbb pop mov sub mov icebp loope xor addb sbb shlb sub mul ret std add cmp inc mov cmp into jnp imul inc lret in icebp xchg fwait and cmpsl ret fcoml ret roll and into cltd fs cmp push cmp xor adc sub insl sarb jne es clc jns mov seta cmp ret bnd inc pop cmc mov push xchg in mov lods inc shr and xchg ljmp cmp mov and xor scas rcrb mov add pop scas aaa sahf in out in sti fstpt rcl shll push mov jg cld push mov adc in mov (bad) jmp mull sub jg mov push bound gs and and jb mov sbb jae into loop and mov push mov xchg sub jl shl (bad) daa adc adc cmp ret cmp xor cs bound push xchg mov or sub ss leave cmp jns out in pushf loope ds lods mov repnz pop mov xchg (bad) int sbb in mov and or or cwtl repz jno xchg loop aas and add ljmp daa sub mov pop rolb push lods ljmp xchg jnp pop mov pop cmp (bad) cmpsl rcrb push shl call sub (bad) push or pop bound cmpsl pcmpeqw pushl sbb sub xor icebp and and daa sarb inc bound inc pop stc enter addr16 fs data16 dec add aam enter or testb push loop sbb hlt popf popa mov shl dec pop mov sub lahf push pop mov fs adc xor jne adc daa test rol sub jns lods fcoms fs add loopne repz cmp movsl fiadd lret test inc fmuls popf xchg imul repnz out stc mov int push call dec addr16 fs ret sub int dec rcrl or push pushf gs lea imul leave mov mov test and add add mov cvtpi2ps mov pop dec and adc or adc mov popf sub cmp in pusha shrb les xor pop xchg stc or test negl pop mov insl das mov decb sub in mov or ss popf lret xor dec in lret add xchg enter ja das or lods sbb jno popa pop jbe es popf stos xor or or rcrl mov fsubrs idivl mov adc jmp aaa (bad) ret and scas mov xchg sar pop mov and (bad) movsb or aam jne in ds (bad) cs sbb sub xchg rcrb push scas jle rcl mov pop pushf das push add mov add sub xchg loope jne stos xor and mov cwtl pop jecxz icebp lret lret jmp std cmp daa xchg sub dec stos mov div xchg rcll or into jge jge into loop add bound shlb xor das or fistl mov je lods stc lcall mov icebp sbb ds or and cli sub sub push or ljmp cld push dec sub mov mov out xor (bad) hlt xchg lcall mov into xchg push pop sti cmpsb rcll fsubl xor and mov push xor lret or pushf testl pop aaa mov unpcklps or aas xchg jl enter negb mov push pop mov adc (bad) sub repz and adc sbb test dec and loope sub mov cmp sub or sub sub lods mov push ret ret pop mov aad shl lret push imul insb or mov loop push jecxz xchg out and adc (bad) jno testl bound es xchg jnp cmp and push xchg push mov xor fisttpll (bad) dec pop out pusha xchg out xchg fld es sub test scas mov pop mov mov out das or int3 mov fdivl ljmp popf rorl lods scas mov jo andb frndint imul aas xor imul in add cmp mov lods cli mov push xor jle cmpsb and or repz je jmp and xchg decb or std dec push ja cld in push adc jnp aas fsubrp xor jns xchg mov rorl out sub scas mov jl sahf test cmp mov pop into inc adc xor mov mov inc pop xor add sub loope jp imul add or xlat inc mov divl pop (bad) popa frstor fisubrl ss jns xchg or push in arpl xor sub pop movl add add and enter mov pushf fbstp or mov cwtl inc (bad) inc loope jnp cmp or or bound lock je jo ret lds mov ret sub fldenv movsl sub mov xor adc mov ficoml out repnz call or imul push aaa das mov sub (bad) popf leave rcll lret push and ja stos aad enter lret mov repnz stc push inc out cltd test fsubs mov out or pop xchg xchg and (bad) sbb sbb mov xor ds push popf push pop or fidivrl nop stos sub add mov pop pop ja sub jb shrb inc scas pop and lea sub cmp lea call push and jo imul sbb xor jl mov rclb mov adc xor jmp shrb std sbb sub sbb ror sub out and mov jle pop xlat or dec push sbb out or je mov push dec sbb int jle jb fldt xchg ret xor mov add inc pop or repz pop mov pop ja arpl sarl sub adc xor cmpsl xor jg lea fldt push jl clc mov xchg jno imul xchg push pop imulb and mov and and xchg mov jmp fcompl push jle pusha imull push xor aad sub push mov repnz adc icebp sub mov dec mov ret pop aas les or jno scas or adc mov bswap or xor testb fistp mov (bad) xchg add loop sub icebp push add popf mov ret repnz add psrlq adc pop rcll push cli bound dec leave pop adc stc int3 pop cmp jbe lret or loop jge cwtl and or jge les adc lahf jle gs xor sbb fimull pop out das stc mov sub add mov mov pop rorb xchg pop (bad) mov (bad) pusha xchg aaa cmp daa or add dec sbb ljmp sub mov ret and ret mov sub out mov ja and mov adc or jno adc or iret and ret test in roll mov jl xor pop mov pop push sbb fcompl call xchg mov add je ret clc sub dec push pop xlat cmpsl insb lods xchg or lock mov loopne leave and push repnz push icebp add sbb cltd or fisubrl rol rolb leave mov sub fldenv idiv add jmp push push test lock ds lcall xchg loop push hlt mov shr mov das xor mov fs std jle inc test (bad) or cmc ds loop inc push jmp or add jae lock mov test mov in mov sub mov in mov sub jp ret test outsb addr16 push lods je popa jmp xchg inc add fimul sbb mov dec pop cmp cwtl adc or test daa adc pop fist and mov add jmp addb stc jne (bad) xor in xchg pop lods popf mov push shll int3 cmpsl negl sub pop lret mov fs ret adc mov xor xchg rorl push sub pop sbb popf push sub data16 negl add and dec mov cmp fiaddl sub mov fs mov nop imul out je pop sub (bad) jo sti cmp add fs or cmc ret push push push scas into mov mov sub or out leave push mov je mov pop lods xor xor xor mov mov mov add gs les mov inc icebp sub mov mov clc sti xor sbb das mov push xor mov push mov pop scas ja mov pop jno inc add movsb sub pop lret (bad) cli (bad) movsl test or sub or repz jne (bad) pushf sub adc (bad) xor je dec pop adc out jl adc fs dec sub mov sub enterw pop add or out js call push imulb sbb aam das sarb adc stos fstpl sub sub movsl or mov adc jns out jge push shrb jb insb mov fsincos aaa sbb mull mov cs lret shrb mov pop call dec pop stos adc mov mov aam fs mov or jl les into dec add push mov lods dec rorb jmp and aad jo lahf inc mov mov lds push push loop xchg mov pop gs jmp mov (bad) lahf out push pop add js cli push sbb sub sbb and add mov lcall inc cmp fimull loope daa mov test (bad) fild mov mov push jb xor xchg mov adc inc out stos xchg sbb mov push dec xchg and pop (bad) (bad) and and xor fcompl andb pop mov fiaddl pop mov add push pusha ss mov lahf sbb push pop (bad) xor jo jne enter push xchg cmp das adc jne mov xchg push dec mov push push mov xor das sub mov ja stos jbe xchg into mov jg cmp dec dec cli jbe and jne lods mov notl dec stos jne ds (bad) jb mov mov sub cmp adc add xor fnstsw sub and sub add jne mov sbb popf push push pop shrb cmpsl mov jnp cmp cmp cmp popf push add adc popf lret scas aam mov pop cld ss scas jo xor sub xor xchg (bad) fdivl in stc or sbb sbb mov and sub out mov mov push (bad) jbe testb fild je stos mov dec and loopne iret mov jg jle and fisubl js inc cmp xchg scas test (bad) fdivl lcall decb bound nop call imul imul ret pop ja aad out lret imul sub leave fnstcw bound push adc loop or leave sub jb jecxz frstor jg or mov cmp fnsave add inc sti adc repnz push ds xor aad leave lods imul cmp lret aam mov imul lahf (bad) outsl xchg loop sub cli xchg mulb pop je push hlt insb cmpsl jg int3 cwtl add xor mov int sub xchg outsl sahf or mov sbb (bad) js (bad) and das movsb push jnp es xor dec fisubr rcll mov add out push inc cmp (bad) int repnz dec or lods movsb pop movsb (bad) das sbb (bad) sbb jge inc adc mov addr16 xor xchg in daa ret adc jo mov and xor sub scas sub mov jmp cmp call pop mov mov xor xor dec icebp cmpsb icebp and in ret call mov xchg leave push rcrb mov ja xchg lret pop adc pushl lods adc mov xor mov test add loopne pop xchg sbb imul (bad) xchg ret idivb ds fisubr shrl test xchg (bad) adc jmp mov mov mov add out pop ja iret das adc rcrl cmp sub xor sub jb es ss (bad) sbb mov lret add std sbb pusha stos mov xchg lds daa fnop inc dec out jb adc cli cwtl jns pop rcr int3 or mul pop adc pop dec jge je aas sub dec mov xor sub xchg mov rorl div lds arpl mov loop sbb xchg ficompl push inc jecxz dec xchg loope mov (bad) cmp ss (bad) sbb sub sub ret xchg mov (bad) rorl sub (bad) or or stc out dec pop sbb sub xchg inc popf fisub stc aad jnp jmp xchg cwtl pop or xchg add pop stos mov sar xchg xlat mov aas mov xor ds mov add decb inc pop mov sti icebp ficom jmp push push std jle cltd cmp fisubr mov inc xor jge fisttp mov jo add jb sbb (bad) das cmp negb or loop fnstsw pusha jmp decb aas (bad) decl (bad) rol sub push xor add jns jbe mov call sub loope sub das mov dec imul or out cmp mov add push add ficomp push sub fcompl out and loop into or inc adc cs sub out in popa cmp pop dec xor sti or pushl and add sub mov psraw je mov or fcmovne push fcmovne fwait sub or dec or gs stos cltd sub sbb add (bad) push cld ljmp jmp cld dec jne dec call or push or mov jge adc jle xor repnz fbstp out adc idivb add pop rcrb mov or push or testb xchg sar dec pushf sub xor jmp add dec mov push adc shrl (bad) or mov mov mov rclb push dec mov leave push mov shr (bad) pop or icebp and bound loope push bound mov push xchg ljmp in jge jo mov (bad) test lret out fs mov stc xor std push pop add mov sub leave je imul imul sub xor ret fisttpll stos lret cmp subl and mov push add xchg int3 insb out sbb cmpsb rcll sub dec aas sub cs jns inc pop and repz scas xor pop int3 ret push pushf ss or push ljmp pusha xor xor pop adc jle les ret pop push test pushf ds dec xchg mov adc jne inc push sub mov add pop mov inc pop adc xchg sti cmp mov jl imul or pop dec mov mov (bad) mov mov ljmp mov inc das sbb in out add xor (bad) mov xor imull mov xor dec xor in add and lcall je mov stc push push nop xor mov adc adc inc in push pop and stos data16 mov mov xor std push icebp sbb cld inc imul pushf out mov out cld dec repz sahf pop lret in and and pop leave repz dec jmp pop cmp cwtl and mov mov cltd or test out bound ret lds cs aaa sbb nop mov add and and repz ret aad or ljmp lcall stc std divl mov mov (bad) cltd insl xchg imul and stos lret cmp shrb or std push test or and and mov pop jmp mov pop scas sub pushf lret mov cmp (bad) test jmp xor xlat loope jle jmp push loop push pop inc add pop test or (bad) adc loop fist out jne fmul xor roll push inc loop mov jb cmc cmp mov cmp shlb pusha push sub popl xchg lock dec pop mov ficom shlb dec negl push dec add add fimul iret cwtl sbb xchg jns adc xchg insb dec lahf dec adc cli (bad) dec add xor out sub in jl mov jo sub sar xchg mov ficom decb test adc inc popl mov enter stos dec or jno dec inc push cwtl mov cmc lods xchg fist (bad) pushf and clc lahf jp test add mov das push sbb pop ds shrb clc jl negl sbb add je rcl add (bad) jmp imul mov adc int outsl xor ret xchg call loopne ljmp ret repz or aam nop push outsb in pushf fisttpll rcl and in (bad) xchg stos mov loop jle add cli ja or jg clc (bad) pop in push cs and push jmp jmp xchg idiv xchg hlt stos pop dec ret dec push movsb int3 push sub cltd or enter popf out ficompl push movl les cmovo push and in lss (bad) mov dec pop mov or cltd mov add xor imul cmp or pmaddwd sbb imul dec cmp xchg movsb ljmp movsb dec bound jne (bad) adc in and nop inc mov adc leave iret add pushf pop popf push pop push mov jmp fsubs cmc sub mov rcll aas and shrl out sub push test std cmp out clc ja push dec xor mov or pop and shr shll aam dec decl (bad) pop inc add pop stc jne ja mov and sub std lret out xor ret push xor pushl movb xchg pop xor fcmovne ret sub jmp xchg or or in lea mov mov and cli mov gs xchg cli dec iret jecxz pop ljmp xor add pop mov jmp xlat out dec push int jle gs cli xor out push movsl push push add pop sub pop rcl jne das call (bad) sub add add mov inc mov ss test push cmp iret mov sbb push xchg loop mov in push daa negl inc or nop mov and adc inc nop inc xchg push mov jge adc and xor xlat mov enter and xor cmpsl imul push test sub pop add xor mov mov or rolb lahf sub xor bound cmp aam ficoml inc mov and add xorl repz and or pop inc xchg jge call stos adc movsb clc sbb shr pop ja xchg pop cmp jl roll movsl aaa sub (bad) jnp add inc and test insb push test add mov pop xchg sub jno xor rcrb lock or dec jp or and and or clc cmp (bad) inc jne stos js jo dec jl shld pop or adc dec and lock mov sbb sub dec xlat pop imul mov push cmpl pop test test outsb lahf xorl sub (bad) rorb daa test js stc xchg repnz scas aas xchg adc add lods jecxz xor fs dec (bad) outsl jns dec dec and cwtl call add mov push addr16 sbb (bad) cwtl and sub adc mov xchg mov stc movsb rcr inc sbb mov cmc cmpsb outsl test or cli mov mov inc or add mov xor in mov sti ret mov imul repnz inc jmp xchg xor test pop xchg out lret mov sbb out add pop in jecxz mov sbb sub push push xchg dec dec mov fcomps imul adc and outsb aaa sbb lock or test mov sbb inc and mov jb xchg dec (bad) mov fbld clc (bad) mov mov mov (bad) or das testb in mov popf push or jmp (bad) fstp cmp xchg test imul stc mov sub clc adc fisubr xchg cli mov jb shl movsl pusha sub js cmpsl imul out xor insb loope push jp repnz cli mov ret scas test aaa xchg lret rol cltd mov push adc pop add aas sarb pop aas and adc cli sub stc mov sub jmp ret fsts mov cmp xor sarb pop out fisubl ret (bad) bound pop mov sub ror out xchg add incb mov mov ret cmc ljmp in sub daa loope inc mov iret mov xor pushl repz sbb push inc cmpsl fmull jp pop mov clc lret idivl and inc jb (bad) jno and mov xor or mov sbb test pop xor sarb lret loopne sti inc adc enter stc das pop xor repnz leave out cmc xchg sbb add rorl or xlat mov inc pop aam push pop jecxz stos pop test push and leave sbb ljmp cmc pop pusha dec xor pop mov dec jmp xor test push sub jmp stc pop mov (bad) jno push mov (bad) lods or mov je out sub or movsb ds add push js add ljmp adc roll xor bnd movb loopne sub stc pop jno (bad) out clc (bad) movsl stos mov dec testl dec in jne pop and mov leave (bad) (bad) movsl (bad) sahf pop int repnz es sub js jge insb add daa mov cmc xchg fstps adc xchg bound lea (bad) mov rcll or std mov jg xor faddp add mov dec lods outsb icebp sub loop shll sub js lcall popa add outsl cld and push mov mov xlat dec jns dec addr16 test jmp jns jmp push add repz ja fistpll cmpsl add sub adc mov sub mov imul mov call test mov pushf (bad) jae and sbb push lret (bad) jne lret dec out xor xchg roll cmpsb outsl stc sub sarb xchg icebp mov push nop push add xchg in jp nop fisubrl (bad) (bad) lock test gs sub and add sub sbb neg inc lods loopne fsubrp lahf jae movsl enterw loop xlat or ficomp (bad) mov sub divb mov das dec inc (bad) divl dec sub ret pop clc push pop outsb popa (bad) sbb int3 mov mov icebp pop daa insb mov jae xchg daa and mov add push push pop dec push push pop add sbb (bad) mov dec ljmp inc and or jmp dec push push mov cmp add rcrl js repz loop pop push push pop lock lahf (bad) cmp jno mov (bad) cmc loopne push pop pop push mov sub xlat fwait (bad) fwait out mov xchg add push add and xor pusha xchg xchg dec sarl add mov mov mov or jno xorb pop mov sbb sub div xor push pop inc jmp add sub add add add mov push push mov or dec loop pop sbb xor (bad) std jp or jle mov dec jnp jae cmp xorl lds in jno pusha jl cmp or push notb je inc add xor inc xor fstpl jmp adc int jb fldl xor push aad jno add aas mov mov jb (bad) pop stos mov push jecxz jle leave cmovge aas dec inc call ret and jbe push push pop or sub in repz ja sarl cmp orl jo jae shl mov mov xchg rcrl sbb hlt cs and jl mov lock aas push xor add mov outsl xor pop insl jl mov xchg push pmulhw xor scas into cmp dec int jle mov in das mov sub push pop sub mov outsl loop lret gs push lcall push scas loop out xor (bad) repnz sar test pop cwtl mov cmpsb jmp mov add mov loope adc lds jge or inc lea das inc sbb inc ret (bad) repz sub cmp sub mov (bad) bnd in je cmp mov aas div inc sub rdpmc and add cli int3 adc pop (bad) bound and mov push push ret push stc int3 in mov xor ljmp or push sub sti lahf xchg (bad) out fxtract adc ret out cmpl movsl out or xor dec mov mov cltd and es fbstp repz std in lahf decl mov int jb adc test mov movb inc (bad) negb lods outsb adc and adc stc xor sub bound xchg fstpt sub lods adc xchg jmp add or add (bad) xchg push mov add out sub or xchg push mov mov daa cmc adc dec pop mov sub mov xchg bound pop mov cmpsb das and icebp sub (bad) inc notb dec adc jno mov (bad) dec push ljmp cmpsl pusha add mov sbb mov ja push and les stos xchg mov cmp lret and and out (bad) imul jge les roll cs mov sbb sub jae jmp lods rorl insb jge fimull inc pusha xor and mov xchg ljmp push xchg js pop xchg xor or adc leave and xor pop mov inc adc and popf aad fcmovbe mov dec xchg stos fsub sub scas sub adc jno cmp adc je sar mov sbb pop sub (bad) divb xchg stos int3 movsb jmp inc xchg test addr16 (bad) cmp jg imul and or daa aad pop imul cmp push dec stos jb iret rorl jp (bad) mov iret pop xor aam ljmp cmc enter out cld std das mov jnp cmpsl mov xor push or leave jb xlat mov pop xchg adc push pushf mov mov mov leave sbb (bad) adc and push sub xchg inc or outsb xor mov ss mov mov aas adc sub cli or sub inc in fs xor scas (bad) pop pop sbb add sub sub inc push fisttpl and int fiadd mov jno insb fsubl xchg into aad ret pop adc scas sub sub xchg or xor mov fs pop (bad) mov repz mov mov jbe mov adc imul pop push lahf (bad) fs js and imul xchg lcall sub jns inc (bad) decl lret jmp push sti nopl or add loope in (bad) (bad) cli adc loopne sti and jmp dec fisubr or sbb sub mov int and xchg mov cltd xchg cmp sbb mov repnz rclb jl arpl add (bad) or and and or xchg mov sbb add push test cli das push in add cmp jge jmp imul dec mull mov std lahf je add jbe sub mov (bad) mov mov outsb rolb push add inc repz adc fisubl jmp popf fwait mov mov push rcll sub jmp sub into mov test cmpsl jmp inc lahf cmpsl mov addr16 push (bad) cmp test (bad) mov jl icebp add clc sub into out jle push jbe xor fmul xchg jns (bad) mov dec jmp adc mov pop push popa pop or repz mov ljmp das mov ror dec mov inc (bad) xor mov xor dec or call adc dec fstpl fcoml pop daa dec std nop not sub clc sub push popa imul sub lret ljmp pop stos adc scas xchg cmp lret rorl iret cltd jb outsl sbb sub push hlt jl movsb cli mov sti lret xor adc mov mov sahf daa data16 mov clc xor cwtl or (bad) (bad) loopne and jbe bound (bad) hlt dec adc stos mov mov loope shrl mov mov ret lds push movsl mov fs push sub aaa arpl adc jae ja xor sub jecxz dec mov dec pusha xchg (bad) lret xor idiv push mov jno dec pop sbb xor push fmuls (bad) pushf sahf outsl or test and or dec and mov out dec icebp ja ret scas pop xlat repnz push pop and into and sub mov or xchg lret insb push pop sti add (bad) pop inc xor lret adc mov inc hlt das pop test jg mov push sbb sub pusha jge dec push mov adc mov ret jmp dec or push movsb push insb std mov adc xchg sub leave (bad) cmp sti std out adc (bad) xor int3 inc sub gs clc push lret jmp and xlat adc and or jno push (bad) or pop add push push mov pop out mov fdivr fisttpll shr jge fwait leave mov inc adc xlat mov add mov data16 decl fmull movsb fprem1 icebp out cmp sub dec push repnz xor ljmp push test push xor lds pop push sub mov jl push fisub cmc dec cltd imull and fmul jno jnp mov enter cmpsl jg sub ljmp sub sti cltd mov repz sub mov in or lret shrl ljmp cmp xor mov ret ret sub pop fidivl pop adc cmp lret faddl fdivl fsts jne dec imul das add push xorb push mov mov test hlt pop mov mov xchg xor mov iret sub pop test shrl xor dec pop stos sub jae int jnp jge cwtl or clc sub mov sub dec and or sti jecxz pop mov rcrl xor pop jmp das iret div jb mov pop rol and mov outsb cmp je out std and sub xor outsb sub stos xchg loopne divl or adc push clc mov stc xlat (bad) xor mov jns imul add sub jge add pusha xor sub add mov scas fistp mov scas pop leave in das adc cmpsb js dec cs das mov sub adc call pop xor xchg mov xor jl cmp movb pop jo sub mov lds clc (bad) int3 sub clc dec or pushl push lret lds mov dec lret popf out (bad) lret stos cs sub jmp dec idivl or shlb pop movsl jbe (bad) pushl pop or sti fwait rclb sub mov push (bad) xchg adc adc sub pushl movd pop movsb xchg jne add add mov pop cltd lcall sub sub mov sbb adc and imul xchg xor pop jb and pop in add mov pop into sub push not adc dec dec popa cs cmp sub xor dec cmpsb das mov fidiv shl cmp ret xchg icebp loop mov pop jl scas lahf or int3 sti xchg mov mov imul in and jb push inc movsb push xor sub mov mov test cmp cld mov stos jecxz xchg movsl test cli sub in pusha dec ljmp xchg (bad) aas lret cmp push pop push jmp mov or adc mov sbb pop add sub mov sub rclb int push mov or stc jp mov insb sub imul push cmp pushf daa adc lods cltd cltd sbb add xchg hlt xlat and data16 sub idivb fbstp xor ret hlt push inc (bad) loope or sub sub inc sti aam push jl repnz cmp (bad) mov pop pop push xor pop dec les lods call test dec xor dec mov xlat mov aaa repnz dec pop mov or or xchg sbb inc sbb fnstenv fstps cmp mov mov aaa sub cli hlt leave out sbb (bad) sub stos sub pop bound fsts test jnp mov cmp dec dec in addr16 dec lods rcrl (bad) push mov bound cld aaa in push inc adc sub cmpsb add ret push jmp (bad) fbld and pushf jle cmc aam xchg sub and and xchg and mov decl jnp push pop call stos mov pushf in mov jmpw popl (bad) mov pop je pop xor or and (bad) xor sbb test jmp sub pop xchg (bad) sbb lock divl cwtl test add incl call xchg or xacquire stc cli dec pop lods out (bad) mov insb data16 cltd arpl and xor ret sub ja and in push dec and jb pop (bad) ljmp call adc xor mov jno scas push mov clc leave daa and icebp mov xor iret (bad) ja adc and lret add add mov or out jmp mov or cmp sub divb aad stos loop xchg cld xchg aas dec fstl pop (bad) sub mulb jno out sub mov in shll mov in jle clc mov pop mov jae mov jmp jg dec inc pop test sbb pusha push fisub cmp dec movb xchg pop decl or mov in mov push movsb stos fadds mov sub xchg sub and dec mov mov xchg das or push jge sbb insl (bad) repnz movsb rorb mov xchg mov mov jg jbe (bad) xor shrl dec mov ja or mov iret imul jne fsts mov insl push and lahf dec lar andb lret push lcall movsl stos xchg sub mov adc arpl lahf pop adc push (bad) iret fs mov cmp jmp ret enter sahf push shrb and sub leave sbb test and insb xchg push xchg (bad) mov andl mov lret add add push jecxz mov push icebp je clc test sub and (bad) dec inc mov push lret sbb mov loope in jns mov xlat scas adc data16 loopne sahf push in and mov mov int aad fcomps sahf jns sub adc adc jl push loope xor in xor mov (bad) sub cli cmc lds leave fidivl test leave clc xor mov and fdivr mov or pop sub xchg dec pop gs insl decb repz dec add or xor xor iret dec lods je icebp jno outsl mov jae aas jp aaa in jp pop adc push jo lret xor scas (bad) cmp inc clc testb push add stos and stos fcompl mov xchg jne pusha pop lret in cmpsb push leave inc imul or cs jle inc pusha push xor mov jo popf xchg pop xchg jnp and xchg jmp mov mov sub ret iret mov xor sub jl sub xchg mov clc mov mov pop xor pop push pop leave sbb data16 jmp pop cmpsb sbb add mov iret daa fidivr sti lahf dec xchg maskmovq (bad) mov clc push mov lds shrl jge lret sub mov je clc in nop in daa or lods popa icebp fldt loopw xlat jns inc lret dec and pushw dec xchg sbb out inc push pusha pop sbb jmp aas sub clc sbb out cmp jnp fwait scas xor jl insl push cmp mov inc push and sahf pop mov scas jl jl add push dec pop sub dec sub sarl push push mov popf jg jne dec dec adc push das add sti ret into or iret add sub or adc and add add shr lea dec and daa and aam ljmp daa call add gs (bad) lret push cmc aas sub mov mov pop adc xor loop or mov std adc cli xor mov jbe inc lahf pop pop jg sub add ja loop pop out xchg push xchg or push or inc sub mov or cmpsl inc push xor pop lret into subb je adc cmp (bad) fs stos mov xchg sti lods or cmp sarb mov movsl cmpsb sub sti adc mov scas jo adc lock xchg (bad) ljmp aad mov cmp mov bound notl lahf fidivrl call es mov add icebp xchg (bad) cwtl fildl jmp loop fiaddl or aaa xor fs jbe mov cli cltd ret lret jne mov lcall daa hlt add pop cmp sub fmull or negb into daa cmp inc mov push cltd xchg pop dec pop sbb mov mov mov repnz sub pop xor cmc sti outsb xlat mov cmpl xor es in ret mov movsl insb mov mov fldt (bad) mov dec cmpsl xor ja mov stos push inc cwtl rcll sarb in pop mov jnp out int cmp in hlt ficoml cmp (bad) je pop cmc repnz lahf pop fidivrl sbb cs inc add out mov sbb adc sbb add insb dec xor add cmpsb fsubrl add mov pop push ljmp or lahf xbegin dec add (bad) xor mov push mov dec (bad) push and xor repnz xchg and mov xor mov mov mov popf jno bound sbb xor incb out (bad) (bad) (bad) ja add adc or or in jg popf jns inc data16 out or jb popf out cs into pop loop mov jmp fisub add notl nop aaa in jecxz sarl scas pop movsb mov pop aas cmp mov push aas (bad) dec adc and pop mov imul lods out or inc jno inc add pop jnp daa in cli repnz clc dec mov lret and push sub repz sub repz pop and add cmp mov cmp xchg sbb int out mov xchg push mov xor mov jmp lahf jbe pop mov push pop pop push stc push sbb or push testl dec mov dec adc ret jecxz or sub test shll xor or rcrb or popf push icebp dec add add lea ljmp mov xor call pop cli push inc jmp push scas cltd mov dec es mov pop mull mov jg adc fisub dec pop mov inc and mov sub pop fnsave lds cmp fistpll scas cmp xor cli in and and ljmp fnstcw or es mov (bad) pushf adc scas mov das scas and shlb push mov add pop pop or mov xlat das into push mov sub mov imul xor or jne mov rorl xor pop subl sub add stos adc scas cmp outsb mov pop adc loop enter mov adc adc scas popa stos add sub mov rolb test mov mov aam mov out sub flds ja or mov cmpsl pop test pop fldenv sbb xor xor popa mov stos cld je into and mov pop pop dec mov sub or scas cwtl notb mov mov mov popa out xor rcrb mov es imul sub fidiv and adc xor daa negl or js xchg cmp stos jge jg ret lods cwtl das clc cmc mov dec std xchg mov leave jg movsl cli and mov cs arpl mov sti test xor xlat cli test js movsb test pop lret or inc cmp jle jge pop inc in cmp sub rol (bad) mov loop cmc out cmp into cmp jo sub add mov daa call push leave push cwtl out and mov divb cmpsb push sarb push mov xchg xor rolb push mov mov lea enter inc in enter add dec lods dec daa sub sub and add fwait div addr16 cltd xchg out cmp lret jle leave jno das fsubl sub lret mov inc pop cs mov jne jnp add sti or sub and ljmp stc or (bad) cltd mov mov hlt or xchg adc cld divb cmpsl frstor movsl test std fisubr xlat adc es (bad) xor sahf popf push jle mov and addr16 dec and adc mov add testb clc mov push sub loop (bad) push and xlat pop in jns out xor sub mov jmp adc add jecxz (bad) jmp inc cmp jnp or adc lahf jno lret or out xchg sub sub xchg adc pop out mov jle ret push push stos loop sti rclb fs stc (bad) push adc sub cmpsb push add loope and call sub push loope dec pop dec mov (bad) decb movsl jle adc scas lret test (bad) xchg ja int stos xor add mov jb shll mov (bad) leave into inc cmp test clc imul (bad) movb dec xor mov xor dec mov cmp sbb cmc adc jg icebp pop or test (bad) mov pop in xchg clc mov mov add or jmp out xor les je cli test lods bound mov enter test (bad) inc daa or std data16 dec icebp stos dec inc loope stc aam icebp xchg lods bound or mov jle add and clc push test leave sub mov clc hlt dec int das scas sbb mov movsl xchg pop popf sbb cmp sbb xlat or sub sub (bad) jne aaa adc adc loop (bad) enter add sub dec lret lcall mov xchg push pusha mov mov sub lds mov or add cmp aad fistpll inc push test stos mov xchg sahf das out mov loop xchg adc inc out std roll inc (bad) dec ljmp (bad) sbb dec out ja mov pop es push and shlb stos out sub cli popf iret adc ficompl pop xor inc test outsl xor mov decl xor xchg push (bad) lods aaa daa add mov add or lahf rorl sub testb xor sti xor lcall mov xor sub enter xor fistp mov mov dec push jb jge ljmp or cmpsl pop jae cmp xor pop pop addr16 push daa jb fist das cli pop jg or inc push mov jne cmpl fisttpll dec inc push arpl add cs jb push pusha pop nop decl sbb call push add lods pop jae (bad) loope inc or das in or (bad) jns rorl mov scas mov lahf inc clc test or cmpsb ja add cmpsl inc neg inc sub dec cmp je fistl jl fisub xor inc mov pop add add stc dec pop outsl inc mov mov stc js int mov scas pop std jnp test mov xor stos (bad) aas xchg pop test outsl mov inc imull mov shr rcll dec pushl into sub iret ret push mov cmp push and jg jmp push mov cmc icebp pop hlt lret (bad) mov add push push pop pop call jmp push ret pop mov pop ljmp negl add mov bswap cmp pop ja les pop or cld repnz add dec push sub mov xor lret mov nop orl xchg sub bnd (bad) insb pusha lcall rcrl push sti daa push insl movsl scas push addl xchg ljmp mov bound into fbstp xchg jo es pop jmp icebp test mov stc stos je mov (bad) hlt aas fstpl lods dec (bad) xor jbe lds repz adc mov mov lahf xchg rcll sub mov or or add pop dec mov xor invd jl imul mov lcall cs ja test daa out aas xor mov inc test xchg faddl push mov daa (bad) js xchg dec loope or push inc inc mov push inc xlat das sub fistl mov cltd and xor into dec and cmp cmp dec or aas ror pop and cmp xor mov pop ljmp lret mov sbb movsl int3 je (bad) (bad) sub fstpt dec xor jo jbe adc dec movsb not xchg cmp xchg movsb out out mov sarl popf je pop repz jne shlb add sti pop ljmp incl cwtl popf rcrl mov std lret jnp add dec jns mov xchg movsl xchg push mov pop (bad) xchg xchg mov adc out sub (bad) cltd pop (bad) shrb sub popf push lcall mov pop divb sbb xchg call cmpsb lds xor push out xchg out cmp ja int3 inc leave and das into sub adc mov popf pop fisubl xor call ret sahf xlat loop adc mov mov movsl pop push fs fisubr pop sti push ret xchg lea adc and jecxz inc hlt cmp movsb lds xlat jns inc sub push lds sbb dec imul xor shrb stos out aad loopne mov sub mov add ja push and lret sbb into mov cmp sub loope pop mov stos fs mov aas sub xor pop pushf out daa xchg pop pop leave out xor call stc jne sbb out out loope decb stos sbb cmpsl jge push repnz (bad) sub or sti (bad) cmpsl or add testb pop ds repz xchg cwtl sbb lahf push mov movsb mov mov and or jns cmpsl adc (bad) dec out ja xor jecxz pop repz call add jbe sub mov or pop adc xor test mov mov (bad) xor mov cs jl adc adc in sub ljmp out das or xlat jns jmp adc aam xchg adc lahf pop mov jge popf sub das sub push adc (bad) pop pop or stc lahf dec push ret and xchg inc mov pop sbb sub mov (bad) ljmp or and dec rclb out mov mov xor (bad) jle pop ljmp lret jmp pop imulb ljmp and (bad) or jle and int3 adc ljmp dec test (bad) xor mov rcl bound movsl out pop ljmp lock dec icebp mov jmp pop xor dec mov (bad) jo inc stos sub xor ficoml fsubp cmp lea dec scas pop xor (bad) mov dec sbb mov sbb mov iret divb icebp in aas lret jge and and mov mov gs dec and test push out cltd notl aaa ljmp push add sub scas xchg out dec add add popa push movsl das mov push cltd lods shrb bound cmp inc mov pushf cmp xor or push out repnz xchg dec fiaddl test movsl stos hlt shr sub icebp sti sub xchg fs push sub cwtl std sbb mov jp push sti xchg icebp cmpsb xchg sar xor xor mov or push or sahf xchg ret cli sub lock pop pop sub cmp dec lret jnp cmpsl adc inc das mov add or aaa test or jl xchg call fstp jg jo or scas jecxz pop out dec and cmc cmp shll add out mov imul fwait cvtps2pi sub data16 repz inc and (bad) push add leave inc fcomp repnz inc or pop imulb mov into sub dec mov adc sub lods mov dec repz out orl xor insb jno int and not mov mov fcompl push lock jo pusha rolb lds sbb mov pushf leave or pop jecxz popf xchg and mov push adc subb rcrl repnz xlat std icebp (bad) bound ja bound add mov mov cmp frstor mov sub mov pop clc and mov in dec sub mov cli stc rol jmp mov fisubr pop pop shll icebp sub mov iret ffree sub inc cltd sub in loopne push jne xchg cmp fs stos rol or push push add push pop xor push push mov ljmp mov dec mov cld add dec dec pop xchg pusha dec inc jmp sub inc repnz lds sbb mov mull adc sub jp cs mov dec jmp push push roll cmpsb xchg pop and sub flds or mov ret subb xor les xchg cltd xchg pop (bad) push push lods popl add sbb fcoms pop adc mov mov out cld and jge mov jp enter jle or xchg pop data16 repz sub xchg and xchg mov push (bad) lods cmp mov out xchg jnp mov xchg into add (bad) jg (bad) mov jp sub loopne imul mov test ror inc cmp rclb lock mov pop das scas and mov popa dec cwtl inc shl add jns pop arpl outsl imul out add pusha repz mov insb or in cmc add jp movaps int mov insb aam mov sahf push scas (bad) push adc insl cmpsl add stos iret xchg in fistp jp jae sub push xor jae sti lahf aad add leave (bad) jecxz inc daa icebp pop out xchg icebp pop inc push (bad) add sarb popf pusha pop ljmp or and (bad) je jnp dec push xorb repnz outsl jle inc clc dec test fistpll add add in (bad) or negl test icebp add mov clc xor mov or fbstp fist inc pop subl or into pop sbb cs and xchg dec outsb pop mov lret mov xchg lods xchg testl test enter jg imul inc aaa mov dec test scas lock mov mov (bad) push xor pushf pop mov lods data16 or sbb test jmp adc aas add sti (bad) enter mov movsb out cli mov repz mov or sub cwtl jl dec call mov jae mov jmp movsb lcall pop cld adc test stos xor sti add pop add sub pushf imul push shlb int3 inc xchg nop incb ret movsb outsb das mov fisttp (bad) bound insl enter leave push shr xchg sub (bad) lods push divb fldt scas clc add ljmp jge xor push sbb and xchg mov movsb adc push cmp pop jbe add add dec test stos mov xor cmp loopne sub jge jne sub dec inc sub xchg jbe dec push loop mov adc mov shr fsubrs lret ret lds cmp jno sub push pop adc outsl sarb jbe gs repz fs mov inc jecxz xorb xchg dec js mov bound fcomps clc mov cmpsb dec mov int3 and (bad) mov inc xor sub data16 std cmp inc add imul xor xor sub dec sbb and push push repz add jle cli xchg call icebp ror (bad) xor shlb sahf movsb lret (bad) sub dec cmc insb sbb xor data16 imul xchg jge xor push inc test pushf or movsb outsb and dec shrb fsubrl mov add add inc dec lahf ljmp mov imul icebp mov insl add flds pop daa lret imul out dec incb sub adc mov mov fistpl or jp dec mov jmp repnz mov mov dec sub push out imul fsubs repnz sub xlat sub sbb out sub das fnstsw fwait jge mov (bad) daa dec xchg lahf faddl idivl mov lock push pop or pusha xchg fisttp cs sub sarl nop aaa mov xadd repz adc xchg jecxz sahf xlat dec scas mov out cld movsl fcomp dec mov bound add rolb inc push sub int3 push popf pop inc dec mov ds divb call pusha and xlat lds ret ja dec enter mov push xchg mov ljmp mov inc movsb xor out popa subl jnp or ficom test repz test mov mov add aam and or push ljmp in dec enter mov jb lcall stc xor xor mov or hlt sti rolb or out lret dec and sub xchg je ret mov out fistpll repz mov cltd ret cwtl iret aas mov (bad) sub (bad) push clc out popf fstpl fucomi idivb out mov sub out or arpl xchg rcr (bad) cltd pop imulb clc dec mov ror lret sub pop push pop xchg call out mov nop call jo push jae mov sbb and mov mov cwtl mov mov iret pop xchg sub test pushl enter jbe push xlat test (bad) loopne rolb dec ljmp cmp pop lds fistp and div (bad) out shr jge bound push mov clc leave and test fdivr loop test sub mov sub daa decb imul loop or adc or cs daa imul dec das shr aam mov dec mov adc fisubr pop sub jg mov pop mov xlat test fsubrs inc sbb jmp push cmp (bad) lds jb repz icebp pop inc mov mov mov pop das std adcl dec mov jecxz (bad) ljmp xor mov das scas sbb and mov jmp pop sub out pop mov adc add scas lcall (bad) repnz in jno (bad) scas xor jne sti sub sub inc xchg inc jb dec jo pop ret clc repnz xchg mov mov repnz popa enter cmp ljmp inc (bad) fiaddl dec jo cmpsl push loope xor je (bad) push push sub and sub jecxz (bad) (bad) pop enter stc push push loopne xor jge pop outsb (bad) int3 cmp push mov fisttpll (bad) lret jb cmpsb (bad) gs add jmp scas and and cs jbe cmp or and pop (bad) fistp ret dec mov dec cmpsb or or and or js cwtl inc xchg adc push add fstpl push jns dec inc into call xchg repnz xor mov xchg daa fisubr vstmxcsr push cs (bad) leave movsl pop icebp adc sbb into mov std xchg and test xor leave cld lret daa gs sub sti xor stos adc sub xor sub adc add in or rclb push xor cmp out imul ljmp out jno,pn add push mov hlt dec and dec stc mov dec stos fs test loop aam into add stos out dec xor jle ret lcall sub cmp pop xchg or adc push repz in das mov and sbb mov lret fisttpl adc lock and xor repnz sbb dec inc jnp push pop in movsl mov aam mul sub in jo (bad) mov xorl dec divb mov cmp dec and stos push sti cli mov cmp or hlt add cmpsl fmull pop call push (bad) leave pop and into out repnz add daa in je ret jle sub scas lea sarl data16 xchg pop cltd and mov pop bnd dec and push into pop pop mov int3 and xor ds rorl xor xor dec inc or hlt and roll (bad) ss je stos cmp mov loop lock pop cmp mov addr16 into push add xor test das cmp popf xchg addr16 into pop xchg mov jmp mov sub cwtl jmp (bad) mov insb and xchg push iret rcrl push dec popf ficom push or ret xchg mov pusha fsts mov adc pop sub mov mov ljmp loop pop pop xchg add sub test pop ret icebp hlt lret negl fwait jb f2xm1 xchg push in (bad) daa push jmp pop lahf cmp cmp aas scas add ljmp jecxz push cmp mov push mov sbb pop jno outsb add sub pop sbb into rcrl repnz loope clc sub mov sub or mov cmc sbb dec add mov xor (bad) mov xor testb pusha ret cmc pop push add pop sub mov mov sub push popf test lods add ljmp enter inc and stc (bad) jnp roll inc push push ds pop mov push mov imul into add mov dec xor push popa icebp jg fildll ret aaa push (bad) xchg js daa mov pop pop sti rcrb cltd sahf das pop push xchg subb sub mov and ja and add (bad) fidivr andb push fcomi adc mov shr iret les (bad) mov inc lea mov or inc inc pop sub or xchg inc or adc pop js lahf sbb sbb add sbb xor pop in adc cmp aaa popa insb fcoms push jmp cld inc movsb rolb push out mov stos sub idivb xor rorl pop jmp aas mov cli je in mov aam jmp in imul sahf xor maskmovq idivl jg jmp mov das cmp mov mov ret dec dec fsubl pcmpgtw jns jbe dec (bad) mov add adc (bad) shr and add mov jno mov mov push dec (bad) push (bad) iret jnp ficom popa xlat mov aas xor ljmp test jecxz pop mov xchg lret negl into dec negb jno add add add xchg inc jmp mov xlat mov sbb das xchg cmpsl or (bad) dec test cmp aas in push mov mov adc xor in sbb sbb push push cltd xor push or movsb in push push test jo imulb mov and (bad) xchg decl inc stc mov jmp cli lahf mov xor sbbl das aaa icebp out lods pop mov ja jp imull shrb push out sub xchg jl dec and cmp jecxz hlt clc dec pop mov and add add insb stc lcall clc pop xchg je cwtl pop and mov pop xor pop sbb jno cmpsl ret or jecxz jno data16 scas fstpl mov mov cmc push xor nop outsb jns or sub dec dec pop push mov mov int3 popa lahf mov rcll jnp mov ret jge lcall xchg dec jge sar ret lahf je sarb mov lods mov ret xor add (bad) mov daa and mov mov sub adc dec mov xchg mov mov shrl inc repnz xor sub inc das lahf (bad) out (bad) repz test pop sbb fsub cld cwtl clc mov xchg pop outsl leave inc add mov and daa mov jg enter push push int3 lahf (bad) outsl mov shrb xchg mov jecxz test add iret test push cld fsubs jg or fnstsw pushf and cs pusha mov cmc das test rcrl test mov or out imulb ret es pop adc (bad) movsl inc ds cmp scas out jae xchg (bad) xor sti mov mov rclb loop,pn rorb xor add add mov and add xchg adcl or mov in or dec mov pop cwtl aad test dec or jmp int3 xlat loop inc test xchg jle insl cmc cmp (bad) int3 jne stc lret add xor mov or mov scas leave jge sarl scas popa mov and (bad) aaa push mov out mov xor dec xchg pop leave ljmp out xchg decl sar mov cmc inc cmc push cltd cmp enter mov cwtl test cltd insl je loope push xor daa and out sbb ds mov push push push adcb ds inc add pop and pop inc add pop dec pop movsl mov mov das push rol test aas ja call xor jle pop fucomi rclb ss sub add pop and push shr add lds or addr16 jae xor pop sub incl lds sbb inc stc movsl sub add sti mov imul andl mov push pop add inc and push leave (bad) xor push sbb iret or fsts (bad) movsl push out add xor mov xor rorl fs cmp sub sbb or sub out cwtl hlt push lahf loopne mov fucomip ljmp push mov imul sub rcll or push (bad) jg jo push xchg imul dec fiadd mov pop shr and in cmc sbb ds aad int cs aam js sub pop dec leave cmp add dec lahf jecxz outsl sbb push push and popf add movsb pusha mov mov jge adc nop adc add sbb (bad) jge and xor sub movl xor shrl ja mov ficompl adc mov push push ja add push pop pop jo std mov mov fldl xchg mov or push in jg repnz add cli sbb jmp mov sub dec negl cmp inc xor flds or or jg ret daa lahf add pop cmp push pop sub push mov into and mov lods dec pop imul sub mov sub jle divl orl mov cltd push or jg adc pop pop pop push sbbb stos shl xlat pop push shr add xchg neg rol inc cmp sti push and jp aam ret pop int3 in add inc (bad) or sub pop stos inc cld daa popa idivl sub lock popa xor add and int3 mov mov inc into xchg cmp cltd vcmpngt_uqss xor cmpsl into and lods pop (bad) iret add cmp mov mov dec push out push or adc dec jmp lahf andb add mov jb push fnstsw inc mov jns or add scas bound ja pushf mov sbbb dec iret adcb stc sbb icebp or adc cld sbb xchg addr16 pop scas aad adc pop mov leave sti icebp orl push pop cmpsl jmp and mov cmp mov pop ret adc sbb push into das test movsl scas repnz pop add cmp sar xchg dec data16 mov xchg lods (bad) cmp ret mov dec out jmp call and das loope jg (bad) mov mov incb movaps sub call push mov movb mov nop leave lret jmp add and mov pop dec jge call inc fpatan imul iret cld into jo pop mov mov ret imul push call das mov xor inc and out rolb pop add and jg lcall xor bound clc mov lret roll out sub hlt leave mov lahf loope gs rorb mov or xor (bad) xchg in std xor jne jp or inc add fisubrl ja lcall rcrl jp ficom mov sub inc enter incl mov sbb fdivrs xor xor pop (bad) xchg iret mov aam ret fsubrl cwtl xchg dec xlat dec xchg mov pop lea mov int cs sub mov cmp sub mov pushf movsb add xor movsb push mov iret and mov jo push popf (bad) mov fbld and and mov mov test adc inc xchg sti fistpll stos sub imul cmp out dec mov and add (bad) sub int jnp inc sub sub std inc sbb clc aaa shrl mov ret je out or pop xchg jbe loope mov and or sub lret mov icebp inc addl inc scas and dec addl leave add popf xchg (bad) mov cmpsl imul add mov call lock cli je stos mov xorb mov fcompl xor mov sub jmp push inc lods adc add sub les loop (bad) stos fsub aas mov dec mov push sbb call in imul mov das add ror vpaddd shrl jb adc gs notl dec test pop (bad) (bad) (bad) add out out dec clc ret mov hlt loope jne iret mov cmpsl (bad) push insb out cmp ficom mov loope add loop icebp cmc inc out xor cmp ret ljmp (bad) and test into cld fisttpll cmp fidivl and sbb clc cmc popf pushl mov les mov xchg jne pop or push (bad) mov fstl sahf ja repz push cmpsb cmp sub jno daa mov cmp popf jb mov (bad) lods or jge add dec mov pop popf or (bad) fbstp jp pop jecxz nop (bad) xor xor sub fildll movb mov push sub xchg inc mov push or (bad) push dec jg push (bad) sub cmpsl addb add pop xchg xchg xchg out (bad) repnz add pop or enter push mov les and mov push xchg and movsb add lcall ffree fdivrl into mov sub sub cmp je adc inc xchg and in pop inc add (bad) mov and pop mov xor scas jb sub dec inc jo xor icebp data16 ljmp mov sbbb mov (bad) and sub cmp pop mov repz mov leave mov mov movsb std ret inc pop ret and pop enter xor or es mov cwtl arpl xchg jge or call add ds mov xchg mov adc xor mov sbb sub hlt mov cmp mov xor mov mov ds xlat and lds int push pop dec test adc jg call mov dec into aam xlat (bad) or add inc out or adc pop or popf jg cwtl push in icebp mov add lds mov jecxz mov dec nop out xchg push pop adc scas mov out scas mov push imul bound xlat insb leave pop loop loope and mov pop adc cmp bound adc add xchg negb xlat mov lret aas aaa dec mov xor sub mov je xchg or mov pop xor push sub add ljmp test adc add inc and leave mov insb mov ret je and repz add xchg or xor shrb fisubr bound sub int mov sub imul (bad) cmpsl out pop add mov cs ss scas imul sub add loop mov cmc gs lret mov jmp push jbe mov pop cmp pop xor andb jne cmp inc xchg or add sub pop push mov pop cmp adc push inc ret mov xor jbe es rcr dec lcall into xorb push lret pop or sub repnz call insb les jecxz rolb cmpsb or xchg mov xchg in and repnz rorl inc pop sub or xor ljmp inc popf daa nop dec mov mov hlt push vmaskmovdqu (bad) testl pop cmc mov pop add psrad dec in inc jle push pop dec out fs mov sbb xor outsl or notl push and movsb ds and xor ja cwtl lods (bad) scas and std inc fs dec push jle test iret dec test out cltd movsl fistpll lds add or sti loopne adcb or ret jmp mov push xlat insb add mov mov push push and lret jbe popa sti mov test jne jmp sub mov push or inc xchg or pop idivb mov out ja (bad) xor push mov and movsl (bad) shlb sub in mov xlat (bad) les les repz icebp adc dec lds enter lods jp iret mov xor pop hlt sbb ja in push popa dec jecxz mov cmp cmp jg icebp xor ja mov xor cs and out xchg jno fs cmp cwtl and stos jo loope imull jae inc (bad) sbb xchg icebp pop outsl xor xchg test je int3 fisub dec or int xor dec dec dec adc in and mov dec dec jo dec lret out je fcompl fcomip add sub mov sub sub and sarl scas or dec cmpsl ficoml repz call xchg adc mov mov or cmp lock and mov push or mov clc movsb and repz clc dec xchg adc mov dec sub or dec jns lock pop jmp and idivl mov mov mov leave leave push insb sbb dec (bad) inc (bad) cmc push clc icebp sbb (bad) mov cmc inc js xor leave cli daa xchg pop and xor orb (bad) push and sub jmp call mov and xor pop xor sub inc loop icebp stc dec std mov stc and ljmp fwait movsl out daa lcall sbb (bad) xchg cmp fwait jmp popf sub jo or movsb adc (bad) sub inc push mov lock popf sbb (bad) mov incl or pop mull add mov cmpsl inc add hlt lods insb cmpps mov fsts fdivr into lahf jle pop push loope xchg cmp or scas xor stos cmpsl and cld add mov pop sub icebp xlat cmp (bad) test imull xor ss push or jge pusha icebp es sbb mov clc int3 pop roll and lock test mov out xor cwtl nop push mov and aaa ja mov or pop lods xchg mov push sarb pop dec dec dec add ret aas cld jmp lret xchg popa loop xor mov (bad) and rorb cmpsb mov xor ljmp push and add push out mov and scas inc or clc cwtl rolb (bad) xchg cld cwtl ret aam pusha sub and dec mov pop cwtl sbb push adc popf incb jne add out push or (bad) pop lcall xor add out lret fsubrl xchg push icebp insb xchg call jbe mov inc xchg lods adc mov mov xlat sub mull adc xchg jo xchg pushl js (bad) jg dec adc xor jmp jbe in xchg cld mov add stos and stc or rorb std push mov or and sub aas pop enter test xchg popa fsubp and xchg cltd or jl sub mov xlat in mov jl out pop repz test mov hlt imul mov pop push pop sahf push bound iret movsb cmp dec sahf movsb cmpsb push les push mov push leave scas mov mov xor mov insl xlat outsb mov mov jb sub adc sub sub ljmp sub imul cmp and loope jns cmpsl adc adc stc xlat xor inc mov iret cs popa sub add (bad) xor mov add jle jmp add push or jmp dec icebp mov std rcr ret cmpsb gs fdivrs into out fwait outsl inc mov or mov jmp adc push cmc adc pop negl cmp fildll jnp mov mov rclb loop inc (bad) test (bad) aaa out dec jmp ja ljmp add mov add sti cmp fwait cmp sub call ret push daa scas push int cmp mov mov shrl ljmp xor stc xchg test loope sub mov xchg xchg mov insb pop dec jle loope jl mov cs or jp add mov bound sar adc mov cmp fs (bad) jae jg cmp daa into out lock daa notb insb push pop (bad) lock mov addr16 out cltd jns dec loope cmp adc fwait push movb xchg ljmp mov ja mov mov bnd notl popf pop bound loop bound sub sti jmp push adc cmp mov (bad) fnstenv (bad) je jmp push add jg repz into es dec mull and int pop push add xchg ja push and jb mov dec lock jns lret pushf sub inc popa cmp pop iret shlb je push mov hlt push jle sub ret and sub mov in add movzbl dec push mulb mov push pop pop dec loope addb adc sti mov pusha xchg ljmp negb inc and and mov test (bad) pop sbb je pop cmp bound ds loop fbstp xor out xchg into push (bad) jmp xor aad add (bad) mov dec loope mov push and loop mov pop mov popa xor stc adc xor loop std inc mov push (bad) dec das data16 xchg jae sub mov add pushf daa icebp (bad) cmpsb xchg xor out or xchg fistpl push jno jbe add std push or sti sbb popa outsl sbb ret xchg adc scas fldcw outsl sub les scas xor negl fs sub jb (bad) jg ds sarl adc testl pop sub dec xor (bad) loope mov add xor cmpsb popf sub xchg xchg jb lds xchg leave int inc mov les mov dec loope testb ficoml cld fcmovbe in in and shlb xor insl add jns pop add push daa shlb xlat xor sar lret xor imulb bound xlat out sub ret (bad) mov (bad) xor mov fmuls pop clc stc mov insb push and roll loopne pop cltd out outsl mov sub add push lods popa pop sub addr16 sub or sub ljmp or or push inc dec out xor incl fldl2e mov shlb adc (bad) cli cmpsl add iret inc insl lret pop adcb (bad) push ror adc sub lds movsl pop dec sbb add sub add and fstpt mov xlat xor cmp cmp adc xor repz pop ljmp jmp inc scas in push push add lret dec lods repnz repz js sub fstpt sbb xlat repz adc sub jne and cmp xchg mov and aam sti ret fcmovnb cwtl cmp mov in pop cltd pop mov jmp or adc pop mov dec dec call inc jmp int (bad) jmp inc mov and inc or test shlb push fidiv dec mov pop xor pop mov pushf out inc aad outsb enter cmp xor push push xlat daa fistp inc rorl mov orl popa adc sti aaa lock push daa iret jns xchg decb jmp out mov (bad) sub pop ss cmc xor in das clc xor popa xor enter add out mov cwtl or fdivs cmpsb jp lock dec mov jo add sub xchg inc add mov mov lahf pop cmp out add aad comiss jg dec add cmp sub lcall cmp sub lods popf xchg out (bad) jnp stos xchg mulb sub xchg idivb ret adc xchg pop adc dec mov push adc cmp sub bound or cmp ret (bad) dec mov jne shlb xor lret adc pop gs movb (bad) mov data16 cmp pop sub aam or lret ficom out rolw ret sub nop into or mov or mov lds out ret repnz mov test ret lock addr16 scas fisub (bad) sub sub insb std cmpsl push test jmp loopne mov sub jl daa xchg nop rol lock xchg push pop pop iret js rclb pop add and and stos bound jmp cld pusha enter movsb and xchg push push out cmp mov lahf pop mov and jbe xchg add (bad) and lds stos jmp or push sub rcl lds push adc mov push or xor ja add outsb out dec mov lret mov dec lahf pop sbb das leave addr16 xor (bad) jge inc and dec xor stos dec scas lret xor pop or mov sbb adc xor roll mov add add dec fcompp push or cs loopne mov out inc jns dec fisubrl pop (bad) bound mov inc sbb leave cld outsl (bad) or and jns and sbb shrb cld cmpsl movsb add dec xchg adc cli icebp push jnp out xor ret push cs jns xlat repz (bad) jnp jnp daa mov out sub cmpsb insl leave daa fsubr inc into mov lcall mov xchg loopne fisub xchg add and sahf and xchg jle inc mul (bad) scas test in es iret pop les sti xor dec (bad) mov sahf push call fisttpll cmp lret and inc cltd (bad) bound adc or daa xlat (bad) jl mov out jmp lds jmp shrb stc and ja icebp mov lret push in movsl xchg nop add xlat fnstenv das stos push fsubr (bad) imul xchg mov (bad) insl cs add dec call sub add and sbb adcb cmp out and leave insb sub push lock nop adc dec mov movsb push xor or adc mov (bad) mov xchg scas mov push mov fidiv mov or xor aad inc mov out push push mov adc mov repz mov jecxz dec inc ja push dec repnz daa or cmp cmp loop or pop and xor jbe outsb in imulb aaa push ret pop cmc (bad) adc sub cmp xor ret sub sub add cltd mov mov mov dec outsl (bad) popf (bad) into mov in cs push dec cmpsb (bad) (bad) decb or popf mov push adcl (bad) mulb fild mov sub decl sbb push ja repnz lahf jne push pop jno scas fiadd jnp pop (bad) cwtl in mov (bad) cmp out xchg jbe jmp jno out xchg sbb popf cmc mov jge into add iret and push daa cwtl xchg add popa or and ss ret repnz pop dec inc or ljmp pop push into cli lret outsb dec mov xchg pop stos mov xor test add jb pop pop popf sub cmp or pop lods add mov cli jmp call in sub (bad) out xor sub mov cmc jae xchg hlt jg cmp ffreep sub jge lret fldcw jae xchg mov pop stos adc mov xchg sub adc fisubl (bad) inc ret sub int push push cmp jmp fldl sub sub popa sub movsb mov cmpl fidivrl rorb shr je std sub in pop imul add xor in sbb sub mov pop cwtl ret add push jg das jmp xchg leave popf pop cmp add pushf (bad) outsl mov add je cltd add inc test xor icebp mov mov and xor imul daa (bad) xlat adc and bound adc jecxz stos gs pop cmp scas sti (bad) ret sub and mov lock pop js push jmp insb aam sbb fldt dec (bad) loop xchg in mov sub mov pop cmpsb das adc dec repz pop dec les cmp xor out inc popf sub stos into dec pop loope sbb mov dec pop repnz push xchg test out sub clc sub das cmp cmpsl loope mov (bad) pop push push xor icebp ret pop add rcrl jmp xor fbstp push jg aam xor sub cli movzbl loopne out pop mov sub rorb mov (bad) mov or sarl out cmpl cli lret imull iret sti inc adc icebp lret into xor dec test or mov rorb adc xchg cwtd dec and push xchg lret xchg add add sub xchg pop jg jecxz mov pop stos xor loopne mov push imul fimull out jno mov mov into movsl das mov lods dec mov rolb repnz pop xor (bad) xor xchg push cs mov or sbb jmp push xchg and (bad) scas cmp push rcpps push dec push divl xchg call adc fwait mov lcall jge out (bad) jno das in iret movsl xor ljmp rorb repz xor jbe sub and std push xchg test cmp mov or jmp mov jo sub subb mov movsl test mov out mov push je xchg jmp into mov adc call nop lods pushf int3 das push mull clc outsl and icebp push (bad) bound iret jns mov pop divb pop sbb ficom xchg outsl mov sub loope ret (bad) lods jne dec sbb in cmpsl fs add data16 mov mov ljmp ret sti andl loop,pt xchg (bad) dec jb pop xchg pop and xlat mov popf in mov iret mov into sahf jmp mov xchg push add negb insb inc out test cmpsl (bad) pop or lock ret sub push (bad) lods fxch xor imulb jecxz dec cmpsb inc dec xor call add mov xchg movsl outsl cmp jb out sbb lods dec mov lret jg push jmp pop lret pop scas (bad) ret dec pop jl sub sbb movsl inc push dec inc clc or sti and movsl mov dec xor repnz shl lock or add xchg sarl or inc jmp es (bad) mov xor cmpsl adc push adc mov andnps push jmp (bad) dec dec mov rorl jns add push sub push into cmc mov mov mov dec mov pop stos cmp sub xor lods jle das dec addb mov adc pushl mov pop add jmp cmp pop jp cmp or sbb hlt into pop add mov shrl in or ret push sbb mov sub jle mov xor jmp leave sub popf mov inc scas push mov stc movsl pop hlt jecxz repz xchg (bad) add or xor or imul xchg mov push mov ret gs loope aas cmpsb stos dec out and push outsl jmp loope inc insl ffree aas xchg jnp pop imul fisttpll lcall mov jmp pop test subb dec (bad) xor lret jns and hlt mov scas daa xor mov and scas popf loopne mov pop mov mov cmc push adc fcmove xchg fstl daa mov (bad) data16 ret adc push mov clc sub (bad) mov sbb mov xchg ss mov xor sub js or adc sbb jnp pop xchg es mov inc cmp push test push stos test mov imulb leave jne out mov cmpsl pop lcall lods sub or outsb sti pop add and sub xlat or and inc lret adc fistpl sub add and repz add stos cmc add pop xor adc cmpb aaa imul or push sub notl mov das (bad) jae sub cmp leave cltd ficoml ss push leave es jg jmp xchg push shr xor lods repz sbb pop ret xor jecxz inc jp ret inc pop adc sub fisubr scas sub mov sbb mov cmp outsb fidivl cmp add aaa mov xor pusha hlt lods jnp inc adc data16 lret jns push pop je ret xor (bad) bound and mov jnp repz test jp sbb xchg punpckhdq lea stos and push push add jle mov gs cli or sub pop and push add inc out xor push push pop xchg add xchg mov dec push subb movsl jns sbb add push cmpsb jl dec adc jmp (bad) dec add pop (bad) stos push mov push xor lret jg cmp outsb popf cwtl xor jns arpl push mov adc loop add out ja notl and sbb inc pop pop stos (bad) mov mov push and add pop push sti adcl mov jg push lods inc or fwait jle xchg arpl jmp cli pusha xor pop lahf jb orl or xchg lret pop not push mov cs ja xor jb sti aam sbb repz mov aas jl adc add roll flds ret cs pop mov enter cld or (bad) (bad) lret push (bad) jle inc or movsb (bad) jp mov sbb push dec or xor pop mul in out xchg lods iret jg push mov cmp (bad) xchg in dec add xchg pop (bad) xor lds sbb push mov sub add pop push and roll inc adc lock fldl cmp push and push sbb mov ljmp xchg loop jg rol pop es nop cmp cmp mov pop leave push jmp test cwtl mov xor xchg dec icebp lret jae scas jne jmp lret or (bad) mov mov mov call daa mov mov lods push dec in adc fs mov or xor repz xor adc pop scas outsl jo mov xor cmp (bad) sub (bad) lret and sahf das xchg mull push mov or daa xchg sub rorb push outsb pushf adc mov adc in insb hlt movsb ljmp add jmp adc leave lcall repz sub (bad) ljmp sub mov mov add mov mov inc loope test mov push mov dec mov jns test aaa xor inc in mul dec orb pop xor out xor stos xchg cld mov pop and mov cltd aam adc das xor dec (bad) cmp jmp adc dec xchg adc iret ret cmp inc sub pushf sub xchg inc call bndstx jg out cmp movsb push xor mov dec test jb sub aaa outsl mov xchg test in notl and popa imul or mov push xchg jne into mov mov scas mov push mov add aas mov fs (bad) mov popa ret mov aas repz mov or stc xchg mov mov (bad) mov and popf add (bad) sti mull xlat xor loopne sarl cld mov (bad) leave ds leave (bad) fild and (bad) mov notl aad adc and sub mov add inc dec mov jnp and int dec xchg add xor std xlat xchg lds push or roll dec mov jns insb cmp popa inc jle or cmp pop cli xor dec ret imul jmp adc (bad) cmpsl das leave notl idivb cmp aaa sub idivb lret push pop and pushl bound repnz notb ror test or pop mov scas cld outsb mov int3 inc ret mov movsl xlat mov lock sub add xor fsubp push push xchg jae out dec adc and pusha popa dec or repz sub pop (bad) flds inc push xor stos jge loope sub pop add je call (bad) fildll mov cmpsl or cmpsl arpl xchg cmpsb sub xlat sub sub scas xor iret das jmp mov add mov mov fdivs gs movsb imul ja mov jb scas dec xor movsl pop movsl stos pushf mov or sub and sub pushf xor adc faddl xchg adc mov adc mov iret and sub lock pop pop mov adc gs push inc xor add fcmovb dec popf mov mov add mov adc and add repz jmp repz mov lahf push icebp test movsb call test jbe pop cld xchg inc or shlb jmp cltd int jg rcll xlat cld hlt vorps scas je les sbb jmp ja imul inc mov or mov jb cmpsl dec jb (bad) cmp mov scas mov xchg inc icebp sub repnz or or pop pop in pop loope stos das (bad) aad pop lahf pop and push push lods mov fwait pop cs sub jp jb sub out ja cltd mov mull (bad) imul mov out dec leave scas sub (bad) call sarb cmpl icebp mov adc add ret add add pop pop adc ret adc add add movzbl jp pop out xor mov cmp int mov scas inc enter sbb adc mov cmp imul aas mov (bad) mov jge lret or or or and adc xor mov adcl pop mov ljmp mul push or fs shr cld loop repnz pushf sub in int3 out xchg push inc sub pop je pop mov les xor mov push pop lods lret out (bad) xor into or lds test pop negl outsl cli scas push adcl xor inc cmp sar xor stc pop and or cwtl add lahf pop mov out push add or pop pop movsb mov mov or add mov and xor jns das (bad) adc xor mov icebp push icebp mov fadds ds mov shl mov jns sbb mov clc and xor fwait lds add bound sahf xor pushaw in add dec popf adc ds je leave push jnp adc (bad) xor (bad) xor mov and repz stc or lret sub add repz inc and jmp sbb and loopne (bad) popf repz lret pop aad cli repz shll jmp xlat or inc bound sbb fsts mov stc mov and or mov jbe out lret push inc and popa push cmp cmpsl mov inc sub adc ljmp cld nop in (bad) xor jmp pop mov xor aam push jns cmpsl imul es add fwait jmp adc cmp js dec ret mov and mov pop (bad) xor or test imul rolb sbb je inc xchg into int xchg push rcrb push adc popf (bad) sub mov pop lcall sahf mov out jo jo addr16 loopne in mov xchg hlt scas pop vmovsd notl mov add cmp fistpll add fdivl dec ds lret sbb arpl dec mov xchg pop jle xchg lods daa pop inc (bad) hlt pusha pop xchg pop add les add adc cmp lock xchg iret loopne ljmp aad jae xor (bad) ja lods pop shrl pop mov sub std jmp xlat fwait rcll dec mov mov sbb aad pop push add movsl jb or int out xchg lahf dec mov mov mov stc call mov push call cmpsl adcb and ja push and pushf xor cli lods mov or sub ljmp mov add (bad) inc inc fdivs fs popf sarl mov jo xchg cmp mov push (bad) cmc jmp push fsubr shl sub mov and mov jns iret inc dec stos popf (bad) sti test les clc push test pop and or test xchg mov push mov xor (bad) mov xchg in test sarl dec dec jmp stc fwait insl inc outsl mov dec loop pop xor dec iret sub or cld jecxz fxch iret jmp or cmpsl fimul or mov (bad) movsb or sbb or and jmp out insb pusha pop xor jns add mov or xor dec dec xor lahf cld push push mov fildll sti jle shlb mov lahf xchg aaa divl xchg shlb xchg push aaa jb or jns out inc xchg mov add cmpsb imul fisttp dec mov pop ret inc adc sti test sbb mov aad xor xor data16 lahf push xor (bad) pop pusha sub xor lahf pop stos push mov jnp ja jmp add or push mov push je jmp rolb lahf (bad) sar mov jo dec dec jl leave or pop mov push dec rolb lock pop dec xchg and ja mov imulb mov sbb addr16 xchg out adc jmp adc jnp loop xchg mov mull fidivrl mov dec mov xchg dec das and inc mov cli mov icebp iret sbb rcll jmp pop push sbb lret addr16 in lods imul mov cmp jecxz popf sbb lret jae jmp mov push push mov mov cmp dec loope arpl jg clc (bad) hlt int3 imul lcall scas mov mov lahf pop mov mov je jne adc or xlat fwait mov pop lods push rdtsc fcmove sbb fwait leave les (bad) mov sub pop push ds in call push into sub negl dec add sub outsb jmp lea and repnz dec popf aad cmc nop loopne inc mov inc clc jmp mov pop xchg mov dec push xchg sub jns imul or rcll or pop push pop icebp mov cmpsb lret or or repz stos xor xor imul sti sub pop (bad) lret sbb and mov aad int3 pop (bad) gs mov inc xchg into scas mov or cmp adc es fistpl repz aam pop jns sub das in and lret (bad) out fnstsw ret pop shll (bad) adc sar cmp push jmp sub add and xor and mov daa aas je in mov pop mov xor std loopne,pn ret pop xorb sub (bad) cmpsl cmp fcom mov bound sti and ja lret lret leave dec lock dec add adc movsb mov sub mov in fucomp xchg lret loopne pushf cwtl mov or push dec dec icebp clc (bad) mov shlb cli fist out leave jne cmpsb je sub mov mov lcall xchg je rolb ja (bad) mov or dec mov sbb lret aam fimul ret jmp add add jo dec add stc addl cmpsb xor mov gs je imul xchg stc jl ret pop mov (bad) jp push div imul clc (bad) mov mov sub stos mov cmp lds (bad) scas adc scas loope sub cmp popa sbb adc adc (bad) pusha sbb and cmp popf outsl fldt sar xor jmp adc int jo les mov add mov mov imul mov or mov (bad) mov (bad) xor add pop xchg add adc push jae or add mov call mov stos pop es pop and push repz rolb jne xlat sub cmp jge into in mov push dec jb out std addb std jg or cld outsl add insb movsb or push lock mov sub pop cwtl jmp push cld in add xor xor push or pop cmp jo stos mov in out (bad) ds inc cmp adc push inc and and pop mov fsubrp aas movsl scas cltd xor add sahf xchg lock roll sbb push jg test pop mov sub out mov push mov (bad) out push cmp cwtl xor push add mov sti lock testl pop mov addb fs repz and ret (bad) xor push mov push ja jae mov test pop scas in imul adc push dec sub cmpb clc dec imull out sbb sbb cmp sbb sub daa mov push sti scas xchg pusha ljmp or sub cld into shrl insl add adc push mov jle pop mov sub pop pop sub rclb cmp vaddpd popa into cli pop pop sub cmpsb mov pop xchg pop lods mov add push aas mov das (bad) idivl sarl cmp sub xor add lahf push push dec pop int xor or add or jmp xor jmp sti in fsubl decl xchg test lret out jmp xchg add push out imul idivb pop mov add xchg cmp ljmp or jp mov or fs mov pop sub dec adc adc mov gs inc (bad) iret imul rcl mov jnp cmp xlat inc sub and scas ret push daa mov sarl ret jae scas jmp xor or in xor aaa xchg push (bad) outsl mov sbbl add pop cmp mov mov fdivrs repnz push sbb and jle cs fsubs testl hlt mov pop mov push xchg xchg sub inc push or and popf xchg dec add push shll fs cmp icebp (bad) sub out popf out and sub add pop xchg scas adc aaa mov sub or jmp (bad) inc mov push xchg call xor xor mov dec or out das push lock dec ljmp loop cmp rorl pop adc lahf test or mov and and ja lods adc push pusha lcall mov test iret mov jne test es test push insb xor adc xor mov mov test mov cmp (bad) and add into scas mov dec cltd loop cmpsb and xor jmp pop xchg jb adc add push and lahf jl push das je scas cmp mov pop fnstsw mov ljmp out pop js pushf pop lods movsb shlb add call sarb cmc stc cmp insb dec mov xchg repnz std add lods xchg push and test stos lods mov cmp sub mov in or mov xchg xor fisubrl pop mov mov and cld imul cmpsl push fwait mov push sub popf cmp xor fnstenv add add push cs cmpsl sbb pop fs stc and inc jno inc xor loope jnp (bad) (bad) push dec mov imul or jnp push adc repz push lcall negw fs ret pop subb stc idivl negb mov xlat int3 mov jg adc pop out repnz js lahf mov stc decl jmp repz sarl xchg into dec (bad) cmc in cmp testb mov sub push sarl add xor xor jl pop mov or mov and pushf out mov out sub mov sti sub mov push mov idiv (bad) icebp mov mov sub lret in xor mov lods dec adc mov insl add sbb or and sub jg mov mov cmp incl dec daa jmp jp ljmp sub stos fmulp gs or mov lret and gs and dec pushl add xchg mov das jo pop mov sub out je popf lcall pop fiaddl push push je xchg repz mov mov lock and clc pop pop sub imul repnz fsubr xor xchg scas sub das bound dec rorb dec mov xchg mov jmp dec repnz aad js imul in pop push shrb or (bad) mov cs in mov and movsl pop aam ljmp aas cwtl and inc std dec dec (bad) fisttp mov insb xchg (bad) jecxz add movb fbstp mov clc inc outsl and lea rcll rcl pop xchg scas push xor sub std nop fs mov bound fcomip sti add mov repnz xchg push sub int jmp imul sub pushf lret jl add dec inc call lret sbb inc jno xchg stc adc call or inc and mov jbe (bad) sub cmp out lahf xchg hlt push hlt test cmp jns push (bad) and push fdivrp adc push cmpsl mov adc ljmp fxrstor pop (bad) mov hlt int fild mov aad pop das rorl xchg int3 bound not outsb xor popa jcxz push outsb and repz xor xor in adc add add mov int3 pop pop icebp stos sub cmp leave add dec dec les xchg mov into sub out test mov clc cmp sub mov push stc insb loop mov fucompp je pop xor pusha aam dec rcll push sub sti cmpsb cmp mov (bad) fsubr adc mov xor pushf fisubl and mov subb (bad) mov or sbb add push sub add je pop (bad) jb shrl fucomi out dec xor and fsubrs mov (bad) notb fsubs mov cmp mov in pusha rolb test aaa inc popf gs push dec pop inc loop shrl mov add leave not (bad) mov out sub mov lret fbld sub add pop or (bad) sbb cmp jmp xchg cwtl mov or out sub inc lods out xlat in daa pop mov fbld leave mov and add aaa mov clc fist sub outsl mulb sub pop xor add adc pop mov movsb dec or inc dec add or enter sub ss fldenv adc sub sub iret push or jge push sti imul and or or dec mov xor mov or sub xor xor inc out sbb push cmp sub inc subb mov loop test or sbb mov fidivrl push mov test (bad) fsts pushf into ret mov sub inc dec mov cmp mov add idiv call or push lcall xor popa adc cmp mov icebp sub pop popa cmp cs xor ja sbb add sub cs mov jmp add es daa xor xor mov adc out mov das out jmp leave mov or fstps push mov daa or mov loope lret out mov dec jg mov mov xchg mov das out mov or fild (bad) negl clc dec cmp mov and lahf out daa cmc adc popf inc decl in cmp movsl iret or in cmp inc push or push mov xorl xchg gs xlat mov imul jne pusha adc dec cwtl aam dec adc vdivps nop lret popf int3 es mov and cmc dec jecxz loope mov dec or sub ret xor dec clc push popf mov add ss sub dec pop inc add (bad) push shr adc sahf inc sbb inc cmp push xor or fs out lods xor in outsb xlat enter or popf fdivl les dec and testb add xchg pop xor divb push in sub daa xlat xchg cmp cltd popf imul pop mov dec leave or int3 roll pop repz or out cmp adc mov (bad) loop xlat mov rcrl fist je sti mov mov adc lock cs stos mov push jg fnstenv in ljmp sub ret icebp xchg pop xorb (bad) cmp mov mov pop hlt push add add mov push lcall pop pop dec dec leave lahf (bad) xchg push bnd in mov cld fdivp cmp push mov mov sub div xchg int movb pop cmpsb lcall inc das mov (bad) mov jns xor adc (bad) sub sub frstor sub xchg gs test sahf idiv adc stc sti gs out jge fist mov mov pop rcr dec and (bad) idivl test mov cwtl popa repz fidivr or dec mov in lret adcb cmp xchg roll flds sub stc je stos adc mov ja lret (bad) add mov mov push xchg imulb cmpsl je pop repnz arpl imul lods mov bound pop clc jmp jecxz jno movsl inc push pop inc arpl cli or ss or sbb mov xor pop xor out lret add negl pushf mov mov stos lods jge xor insl gs mov jno lods nop jo iret aaa aad (bad) out das out lcall mov and outsb shrb add scas pop mov push in roll aaa xor dec cli jecxz sub sub cld lods jno lcall and jge in test xlat test scas push dec inc js out scas mov bound (bad) push and pop in out decl data16 scas (bad) xchg repz repnz and pop (bad) fs fxch loop,pt lds (bad) je out in mov mov ds lock ljmp sub push xchg sti push imul in sbb dec jmp cmc xor xor leave sub or stc xchg popa mov mov icebp sbb popf movsb stos loopne repz adc mov sbb add out and in cmpsb pminub mov enter lods (bad) mov clc mov imul sub mov aam fs mov cwtl mov xor in inc jp push mov pop imul xor daa jne sub add (bad) and push dec xlat dec (bad) scas mov clc add ljmp xchg push sbb mov xor mov pop rdtsc pushl popf orl jp add nop push cmpsl and loopne add jmp pop repz push add jmp add fcoml ret arpl jns dec popa (bad) je pop mov and mov mov hlt fbstp or jl jmp lds mulb adc insb in fwait xor and add movsb lods mov imul leave enter hlt pop in into jne sar adc jl pop insb jbe into popa jmp cmp sub lahf test push jl or sub mov cmpsl fldenv add push pop xor ljmp dec push inc rolb or add mov push clc sub adc mov pop inc xor bound stos test add mov pop xor push push and mov out push or mov scas cmp movsb lret jmp ret mov scas mov pop or jl mov add rcrl andl rclb jmp mov cltd mov xor sub push imul jmp iret mov push or vunpcklps enter test setae cmp inc jmp inc stc xor mov or (bad) xor loopne or (bad) lret cltd (bad) sti das mov fisubl ret sbb add mov push sbb fucom repz fbstp or cmpsl fstps dec jne aas dec leave lods outsl sub sbb stos mov (bad) in shr sahf push lods push cmp xor cmc mov sarb cwtl imul sub (bad) push xchg jmp mov orb pop sbb mov loop xchg int3 icebp and and pop xchg test or sti mov in and (bad) xchg sub add xchg lret stos cmp xlat mov mov (bad) pop inc pop das jns xchg leave enter push mov (bad) cmc dec mov add ljmp sub fstps ret mov aad int jge fbld mov mov mov imul jmp mov shll xor inc mov mov stos adc xor add add mov pop shl push dec enter lret xor push jg dec fwait sub repnz loopne popf xchg xchg into incb ficom loop pop cmp daa pop popf sub jmp dec or sar (bad) data16 pop ja xlat gs (bad) mov test fisubrl push adc stos and out pop aam inc clc imull iret mov (bad) fsubl cmpsb cmp push pushf sub or mov mov xchg int sub mov mov ret xchg xchg add inc push mov loop ja pop inc mov fucomip int3 xchg cld cmp cs pop movsl xor and pop (bad) idiv push inc xchg or adc or jo add int popa (bad) cmp pop popf aas popa loop mov lock cwtl mov dec inc ja mov mov cli jle add jno add mov shrl jmp pop mov leave ljmp inc pop xchg xlat add add pop fmull cmp ret das iret roll push loop iret pop stos cmp push inc or mov adc mov pop stos lods jp push ret mov sub jbe lahf lock mov jno or jno ljmp pop push add scas jne (bad) popa fdiv xor test adc or sub scas dec sub fsubs sub out insl lahf xchg (bad) fdivrl out call outsl (bad) lret (bad) jno xchg icebp sti gs mov das inc lcall and cmp ret or ret imul enter add les into mov lret inc insb jle sub and icebp push jo daa add pushl mov arpl fidivrl sbb jge psraw andl jmp stc pop insb mov test addr16 movsb out call (bad) js sub ss lret mov cs inc mov push dec aam scas cmpsl cs ds rolb das notl sub fmuls pop inc cwtl shll or outsl cltd cmpl stos mov dec xchg das insb das dec clc stos lret je test pop mov inc lds clc cmp add lods dec lret sub push clc out mov push mov push and pushf stos stc call push movsl push adc pop (bad) dec add mov roll pop outsl daa push outsb mov push jg cmpsb adc (bad) sub int3 (bad) cli dec mov mov mov pop call pop xchg cmp push jne push cmp xchg push movb mov lahf push pushf mov addb add pop popf cld jae mov or scas fwait push adc or and out decl arpl adc test ss inc sbb stos add popa rorl out jb mov inc jmp add sar in aad lahf push shl dec in test loope adcb mov add lcall jbe xchg add sbb (bad) cmc pop push fdivrs sbb pop and push dec jo cmp rolb sub mov pop cmc loopne,pt pusha add jge mov lret (bad) ret cli add mov (bad) push push mov rcrl add mov pop sub xor jecxz dec xchg pop jl push fdiv push out daa add pop xor mov test jecxz add int jg cmp add rorb sub into xor adc mov sbb dec pop and popf inc cmc inc jnp out (bad) adc popf or cmc sarb add dec or cmpsl jle add (bad) push outsl sub or jbe pop repz sahf jp jne jecxz xor loop sti mov (bad) fs mov js rcll dec lods jb xor cli lods mov and push repnz nop push test cmp xor popa mov pop pop xor mov sub int3 push lret pop movb or push mov call or pop stc mov shrl jno mov js mov jp outsb sti adcb and push pusha lret or insb inc lock popf cmc xchg setge out xlat dec fstpt (bad) pop jno mov push sbb pop aad ljmp mov ss ret mov jno jmp sub pushf dec push subl lods add and or outsb adc (bad) call data16 xor daa out cwtl mov stc ljmp xchg outsb mov dec mov bound jae int test test scas mov or add push xchg mov sbb cld out gs lods sbb in push push and and das mov outsb call das or cltd stos and cmp dec sub out in popf mov fs mov mov clc jle mov cmp cld add and or xor movsl mov push notl xchg push test test mov jecxz mov test sub test pop cmp lret xchg fprem (bad) repz adc inc xor dec mov and cmpsl pop daa mov or and push sub mov or aam pop sub dec push insb inc and fdivrs push testl and mov loope (bad) js mov rolb mov outsb std xchg loop pop hlt jns notl nop sbb xor sub cmp pushf add cmp or push inc xchg rcll adc jmp loopne xchg xchg into dec push rcl sub into ret push fsubrs mov pop adc nop and (bad) aas lods pusha mov or mov xchg add std xchg adc popf idivl (bad) std xchg loope xchg and lcall adc movsb lcall dec (bad) adc adc (bad) pop clc jne adc inc fwait scas mov pop and (bad) lret xor inc mov sbb xor xor pusha mov pushf mov mov das or lcall fadd lds jl pop mov xchg inc jmp in or jnp das roll pop mov xchg rcl adc adc sub push adc (bad) xchg mov das das in inc sub fs jmp out pop dec adc mov xchg xchg hlt xor mov pop ljmp mov stc (bad) or or bnd and icebp subl movsb cwtl push add mov cli adc adc lds adc ficomp mov cmp test je popa ret repnz jg sbb jae hlt xchg or add mov mov push (bad) lock (bad) out pop fsubr and cltd (bad) dec fld cmpsb ret insl or in daa lods cs sub lret ja fsubl dec leave cmp inc cmpsb lahf in fwait es mov repz movsl jg jl jo sbb jmp or pop mov push or pop pushf imul or popf xor jo cmp (bad) sub mov xchg cmpsb sarl pop and sbb mov adc stc mov mov jns arpl cmp add mov and mov roll sub pop xchg mov xor pop enter mov in (bad) icebp sub cmp ljmp jecxz and and lcall call push adc (bad) aam andl scas mov add je data16 dec mov mov mov sahf or jno (bad) mov xor pusha ret jmp lret jno daa cmp je daa in and dec imul mov daa scas jecxz push lret or sub cli shrl inc pop add mov cmp sbb leave jo mov lahf loopne mov jp cmp dec jno cmp (bad) sub jl iret dec iret lds adc cld sbb ss repz notl jbe push adc lds into mov push cmc sub sti sub rcr jp cwtl lahf hlt cmpsb mov (bad) sahf cld int jp outsl cmp (bad) sub stc cmp popa not adc push sub sti adc jmp jae push ja pop aas fstpl dec outsb outsl push ret mov xchg icebp add rorb (bad) pusha or mov mov imul and jmp icebp adcl dec sahf dec push imul xor test or mov sub sub adc jbe add mov xor pop (bad) cmp jbe or pop and outsl rorb scas xor (bad) fistpll jne and lahf mov add cmpsl inc (bad) imul (bad) push addl scas call data16 pop aam (bad) jl pop loope jmp shlb lret call dec lods clc mov mov es mov ret xor pop mov out jp repz mov outsb pop int3 xchg add lret dec bnd pop push popf fidivrl jge sbb movsb cli bound jmp icebp add sub cmc sti add loope lret (bad) push mov out daa and and push es add xchg mov sub daa mov xor rorl sub dec movsl (bad) stc pop cmp push das sub pop sahf adc mov and aas test mov into xor outsb stos negl rsqrtps outsb aaa mov adc mov aaa (bad) jae dec cmp adcl into pop dec sbb jl add aas mov inc mov out pop jg sub out jb lcall lret out test out sbbb mov sub sbb add lcall cltd or imul mov jno imul ja in and cwtl mov sahf add pop mov stos lret mov test sub notb mov popa lret cmp dec mov push xchg mov ds mov test cmp (bad) cmp pop fs aam sti dec pop fstps cmp out je (bad) mov orb lret (bad) sti dec daa iret pop aad stos loop fimull inc movsl ja scas or sub push xchg jno sbb xchg aad dec sbb sub mov xor jns push imul adc mov jle pop ret inc cli and lods sti mov jne test nop divl sub mov scas mov (bad) mov shl or scas cwtl and xchg (bad) (bad) push out cs or leave addr16 addl sub je pop divl dec jmp loop push sbb xchg mov cli lret jmp lds ja adc in ja jne shrb push mov or mov mov std jmp mov lret or adc cmp add cmpsl or stc mov incb or bound mov and or (bad) cmc (bad) cli je aad lret mov fsub stc xchg inc pop scas dec cmp jbe push or pop mov push or ret movsl imul fstps movsl inc arpl ss iret and popf out (bad) jo cmc xchg fsubs mov xor (bad) testb sub (bad) cmp gs cmp lods sub dec cwtl mov xor cs fs xor arpl ds dec and or leave cmp icebp and daa add pop xor incb pusha xor sub mov xchg xchg mov xchg mov cmp xchg leave (bad) out cmp fisubrl inc loope mov shll dec sahf fs pop adc test je or sub ljmp inc adc (bad) xor mov in xchg out mov add xor dec or clc and addr16 loope (bad) ljmp rcrb mov push in shr daa jnp es leavew jg mov push and adc lahf add psubsw test out xchg or push mov into loopne and xor mov out fbld dec cmp cmp xchg and cmp add (bad) sub add dec fildll xor xchg lods rol jg ret pop stos loopne mov push sbb inc mov lahf stc rorb addr16 pop mov fistp repz mov ljmp push inc loop cs repnz or push push lret add sbb cmp cli lods mov pushf xlat fs scas push rorb daa add leave mov pop add daa push popf gs sub push mov push js and into adc call cmp push lret and add xor mov pop popa ja or stos sub outsb mov scas pushf adc daa mov or mov mov or stc mov xchg or lock mov cmpsb (bad) lret jno outsl test movsl (bad) xor adc cli daa sub out mov fs and add mov or scas mov dec popa jae repz pop movsb inc and std jnp sbb ret fist stc or xor xchg mov jo (bad) jle xchg pusha mov aad mov xor sub out pop (bad) js sbb xor and push xor add mov add push pop dec cmpsl mov mov fadd push pop fsts out dec sarb pusha (bad) lods aad xchg xor push aas or pop pop test fidivr scas jmp xchg push mov daa (bad) cs cli jmp outsl cmpsl xor insl dec lods cltd xchg mov in xor mul cmpsb scas (bad) mov dec das pop push xchg or test pop jmp cmp xor mov pop jns sbb pop dec adc (bad) adc sbb (bad) and dec sbb hlt lods je mov adc sub outsl dec aam push out in sub sub mov jmp push add ljmp jl out js (bad) or out xlat mov mov jmp (bad) rorb loop dec leave arpl iret hlt mov add pop lret (bad) xor xlat stos fisubr imul test adc lds fs adc xlat ret jg in in sarb lds sbb icebp lods jg and dec add and sub inc inc add xor push push cmp xor ss xchg std adc mov insb in cmp mov mov lret data16 pop add sub push sub cmpsl mov mov scas stc int cmp xlat push mov aad add outsl test lret mov icebp adcl pop mov and adc jmp sbb repz xchg rorl sub and fucomp fistpl test mov sub into mov leave jge xlat and das inc sti cwtl xchg pushf add xchg ror idivb mov insl add add in scas mov iret sub xor xlat or icebp push ljmp in mov pushw add outsl mov sub (bad) jle pop push xchg lds push data16 push jnp aaa scas sub sub out add popf outsl or add (bad) daa bound jge inc scas es ljmp dec cwtl fnstsw adc or (bad) lcall sub (bad) dec lret pop data16 dec (bad) cmpsb and jp mov pop xor push add popf rcrb sub sub cmp jecxz xor sub or shrb and cmp and fstps mov xchg push inc mov jb push adc ds aad cli sub dec decb shlb xor cmp sub jmp icebp icebp jmp and dec cmp xor mov icebp or ljmp sub clc stos sub mov pop pop cmp add jae mov and cmp adc aad mov xchg mov sbb sub out cmpsb lds pop andl inc and aam jmp or cli lret lret mov loope xchg mov rolb xchg ret xlat cli or add incl dec inc sub lahf je dec pop sbb xchg sbb add gs sub shll mov (bad) dec inc add lret nop fildll icebp xchg (bad) enter out std dec xchg out push mov adc ret es fidivrl ljmp and fmull mov jg (bad) fldcw dec pop call out mov (bad) adc and add xor not cs jno cmp sub mov xchg jle mov adcb sub dec das repnz adc stc popa pushf call xchg je jb arpl je adc lret ficomp mov sarl insl push mov or in xor or imul data16 std insb pop mov dec or mov sub pop pop add sub or mov mov (bad) jns stc push xchg push das pop (bad) je pop scas ret loop icebp test and push pushf fcmovbe pop xor aad adc out dec and outsl jo loope pop mov cmpsl fldl incl mov (bad) inc lret mov or rcl loopne jge jecxz das fistpll xchg mov movsb cwtl xor in and cs jle push xor es mov push cmpsl pop roll mov fisub push jb sub cmp ljmp xor or inc frstor lock or mov test stos fadds call sbb mov lret jo mov or les repz arpl sti ror jbe pop and lahf sbb mov sub inc lret stos gs out lea cmpsb inc test add (bad) or je js into mov bound cmp inc mov inc inc jne sub or push frndint (bad) and test rcll gs out dec daa movsb addb test (bad) popf xor adc popf jne stos dec into mov sbb aas pop fldcw sub popl xchg jno leave xor cmc jg cltd lcall pop loopne (bad) dec or push insl sub lock mov add sub xchg add sub hlt bound (bad) not mov jmp add dec cmp xorb daa add iret xchg inc inc dec ret int inc fcompl sbb jmp pop and cli or cli push sbb imul mov cmp sub inc loop icebp in into test sub pop repnz call and adc jmp xchg daa shrb mov cmp cmpsb imul sub jmp xchg jb jp (bad) jmp lcall xchg jne subl dec push lcall inc or loope aaa push lock fbld scas loope ds cmp sbb sub ljmp add push out cmp push sbb in or mov mov sub dec mov cmp stos cmpsb cmpsb mov ljmp loop sbb shrl popf inc shll in scas sub ret mov movsl push push lahf xchg ljmp xchg int outsb mov cmp ret lret es std in push fs mov addl mov div cwtl add or out testb gs and jle imul sarl add (bad) cmpsl sub orl mov clc (bad) xchg lock pop dec mov jo xchg jbe (bad) inc xor (bad) pop pop movsl sub lods fsubp lret cmc xor or jnp dec xchg int xor jnp sub adc lahf sbb repnz and mov std inc orl adc (bad) jecxz pop or pop mov mov add mov xchg fcoml (bad) scas mov xchg lods aaa leave idiv dec sahf pushf lahf dec mov fnsave or and jge xor out lcall sub mov mov (bad) and je push repz adc test movsb in adc hlt enter inc movsb or inc sub mov jb lret out cwtl lock mov (bad) imul inc mov dec jg xor (bad) and xchg lds cli mov xor insb gs jp and sbb jb xchg ret int daa in das xor roll movb mov (bad) mov pop outsb lret inc mull or test sub ds jb mov inc xor outsb add add js movsb mov mov (bad) xchg movsb rorb mov sub addr16 mov push add lods pusha insl sbb push jb aad mov icebp outsb lods mov jp loopne push dec out mov idivl dec jo orl cmp add mov sti and inc pop xor fbld shrl int jmp pop mov push imul sub jnp sbb int sub sub dec push xchg inc sahf imul mov pop mov ss adc inc jg call icebp xor cmp mov rorl (bad) jmp pushf cltd pop or fistl mov mov (bad) pop stc lods clc dec popf sti mov into scas repnz popf daa negb negl aad or shl loope notl and pop xchg ja adc in scas cmpsb push and (bad) ljmp mov mov jnp and (bad) call int aam stos lret sub mov and jne and cli bound lret inc ret fildl scas xchg adc ret (bad) sub pop sub outsb cwtl inc and lahf in adc mov push lret pop leave or sub fild enter (bad) les push imul cmpsl js xchg outsb and push push imul xchg pushf out xor fnstenv push mov jl jb push movsl ds call xor ljmp ljmp adc and stos bound mov icebp cld mov ret and jmp jmp hlt jmp fild scas or fistpl stc inc inc js mov dec and sbb jno (bad) mov icebp cmpl pop add test movsb cld and imul xor idiv subl mov sub shl in jbe sub movsb stos out dec dec lret mov in jmp das and jle popf pop repnz int and lahf mov mov fistpll jecxz add or sbb dec and fist enter std cmp dec ret and pop jmp repz ljmp bound in xor into hlt dec xor ficom fbstp mov dec (bad) out mov fnstsw push sbb repnz andl or daa aas push mov mov add pop into inc pop mov jmp jle add inc sbb dec mov mov pop fwait add mov inc jg aam mov popa and rorb dec sbb xchg (bad) pop mov and cmp push sbb int3 mov popf int3 outsl cwtl rcrl add (bad) xor pop push cmp (bad) cmpsb loope jl mov pop mov sahf push popf adc (bad) mov pop and cld (bad) push in jmp and ret ds mov or dec leave and pop das adc nop adc mov gs in les repz (bad) cmp inc adc jno jmp sub (bad) jno push xor jmp xchg stos lcall sbb lds lret outsb test dec pop pop jo popf sub push xor jmp cmpsl (bad) out dec push add mov xor or ret fs je dec push and dec and jmp lret sbb es sbb sub inc mov cmp arpl and orb sub popf jae sub icebp (bad) imul lret xlat call push jmp push test cmp bound enter sar fsubp fisubrl shlb jns or dec fiadd xor dec roll cmpsb loop in cmpsl adc outsb mov and xchg pop lcall ret or movb dec mov xor into jmp xchg stos repz into (bad) or fwait movsl or icebp (bad) ss icebp lds repz sub jmp gs inc sbb loop,pn shll cmpsb mov jnp jl mov lds call xchg sbb cld and lods jno add sub cmpl cmp push inc divl insb dec mov xor dec imul add in pop outsb clc in push push shll loopne pop rorl cmp xorl push mov pop fildl adc cmp jle das sbb xor sbb cmc sarb stos add pop shl push push mov outsl adc mov push or pop xchg mov mov jne (bad) pop ljmp js xlat scas lret (bad) xchg push fistpl in stos add cmc push into add mov (bad) pushf fs lret jbe add rcrl xor addr16 pop add or xlat jecxz js lret push push fisubl pop pop scas es or imul and jmp (bad) and incl lahf (bad) fisubl adc mov add ljmp push hlt lods jp xchg sti push pop mov (bad) push addb repnz dec dec dec or sti fmuls or cld loopne pop pop fldcw pop jno insb outsl push cld mov cmp sub cmpsl jnp rol jl and adcl aam xchg sub or lret pop call mov jae mov xlat pop movl jg (bad) and cmp xor pop ljmp test aam or in bound std ljmp ljmp inc sub or sbb leave or sbb jo mov push jp,pt mov fstsw shr add xor cmp cli pop int ss out into pusha jae mov inc sub in push pop push push mov sbb jge daa mov daa adc mov das xchg pop stc or dec xlat jecxz dec mov stc xchg jg (bad) popf push mov fsub les mov mov xor bound mov xchg pop les fildll stos cmp mov in dec daa add jmp push mov push repz repnz sub lret cmc gs push scas xor pushf jp es notl sti cmpsl dec dec je ljmp (bad) push inc mov sbb cld iret cmp sub shll pop mov ja imul mov fdivl shll pushf inc (bad) push sub fisttp jl negb inc pop mov mull or and repnz shrb out sub pop mov cwtl test mov cmc cmp cmc jnp xchg (bad) testb idivl insb xchg xor pop inc stos ja shr xor or mov mov mov mov popf loop xchg mov into data16 imul xchg xor push rcll mov (bad) mov shlb clc add sti dec mov mov aad cs scas jecxz adc and push xor bound and cmp idivb or sbb adc jnp dec mov fadd sub jmp mov in push ret repz sub pushf and iret mov aad push push mov lds call stc sbb fiaddl pusha in pop mov mov imul into mov jecxz fildl scas test xor das bound orb iret xor jp xchg out mov ja inc xchg adc (bad) jb push cmp jno in mov dec lods loope fisubl stc pop push xor xor jno,pt out inc sub xchg test (bad) adc stos xor and sub cld lahf pop xor call xlat sbb sbb shll decb xchg neg adc scas mov aaa iret push sbb add sub cli mov ja in pushf jp mov mov (bad) pusha sub pusha mov testb jbe sub aam bnd or mov test pop xor fsubrl add push pop cmp mov mov ds ja push ja ret not int3 cli fs adc mov in pop jmp pop pop (bad) cmp popf das dec fildl add sub mov mov or dec mov sub jo mov and pop or pop lret pop lret xor add lds aas mov movsl sub xchg jb lods outsb mov fidivr inc fild adc push pushf mov pop mov adc sub addr16 sub xor insb jno icebp adc add mov xchg push hlt cs outsb cwtl mov xlat lods add sub loope sub scas or dec fst das cmpsb or mov inc aas je cli xor scas mov pop es jp dec jmp clc sarb ret dec or xchg pop lds test les (bad) ljmp rolb cmp fldenv push int sub mov lret and out inc and sub in in fcmovnb stos or cwtl mov xlat mov or push cli dec daa add xlat ret loop cmp (bad) ds dec in into mov (bad) movsl mov fcompl outsb ds inc and mov jmp sarb push cmp sub pop xlat xchg repnz adc jbe mov cmp rcrl cli (bad) (bad) pop and jecxz jp cmovle lods sub ljmp retw test add mov jge or stos jecxz dec (bad) sub scas cmp mov cmp (bad) mulb adc aas jo xor fistpll test in scas stc mov push or add xor pop jle push jecxz in cmc loopne hlt mov lds testb pop mov mov pmaxsw in pop test add push pop (bad) fimul sub lods dec fstl xorb cmp sub or cld aaa out or push sbb inc clc lahf call into in push daa fidiv rcr flds in aam scas jmp pop div jmp out lods aad add jno fstl mov xor sub xchg sbb pop and out add add inc sbb mov repnz mov popw push into mov add lds fdiv repnz push xchg and push movsb int3 xor adc add mov and enter popf cmc xchg fdivl adc mov xchg dec push rcll sub mov xorl push idiv gs pop repnz xchg mov lret daa or push out mov scas and scas rorb xchg jnp mov dec lea jmp xor lret insb xlat mov dec jmp aas data16 cmp stc movl mov std xor scas cmpsb in and enter out scas lret je mov pop xchg or ds xor rcl int3 rclb add and lret (bad) data16 dec lret jmp sub popf xlat cmp mov imul and dec hlt mov and out pop cmp jmp and dec bnd sti icebp call movb das mov mov scas mov ja sub aad test subl lds xor mov scas ja lds mov fbstp fidivr (bad) and (bad) push cmp push aam rcrl js in cmp rcrl iret push stc jbe mov loopne adc cli mov lods movsb in fisubr out ja mov dec cmpsl adc shrl rol jl mov jle pop out ja pop mov pop add out dec into (bad) fldl adc aad ljmp add repz ret repnz xchg ljmp add int3 (bad) or add fcomip sub or loop ret sub pop addr16 test imul inc into pop mov or xlat lahf jp ja cmp mov cmc das (bad) push push mov mov out pop xlat ret fdivr dec imulb ret (bad) dec out into or jg mov jecxz dec mov xchg adc push (bad) mov loop push mov lock icebp xor xor loope add cli aam cli jno out sub mov xlat xchg out mov mov mov mov cmp out in jbe in scas cld clc mov sub incl cmpsl push out leave fdiv popf lcall faddl pop xchg mulb ljmp stos jbe (bad) nop mov repz jbe loop daa iret aam pop out and fidiv add loopne pop inc (bad) pop adc add mov xchg out jb test loop pushl lea movl int inc adc lock imul (bad) jns movsl jbe xchg call pop and mov adc frstor sub (bad) aam cmp pop pop xchg push mov ficomp pop outsb movsl xchg push mov (bad) das xchg add mov lret sub mov pop mov mov mov mov fiaddl dec test or out mov dec js iret and sbb xchg sbb sub movsb dec cmp enter inc add sbb fnsave outsl jmp rcll rorb jp xchg jnp or pop sub inc and sub cld sub hlt push movsl push iret stos repnz mov add imull dec mov add mov pop pop cmp fidivr lds fucomip add lret sti mov or (bad) lret and or xchg pop fwait imul xchg push es leave fsubp pop mov sub jle adc pop dec inc mov imul lret push aad or cwtl push insb xchg arpl add xchg inc or jg lods es das outsb sar cmp xor xor sub daa mov imull repnz nop loope mov aas xor and sbb test mov (bad) std shrl cmp add loope mov and (bad) aaa mov ss mov push push (bad) loop (bad) jge lods lods push gs or sbb or sbb add mov sbb (bad) fdiv popf test push stos bound in inc shrb lods mov adc ffree cmp xor out dec rclb mov dec xor mov jmp mov push push sub sti or (bad) std (bad) push push idivb js sub loop fmul leave pop orb or repnz ss dec std sub xor and push enter test push out (bad) mov pop adc sbb inc jge pop aas std xor xchg jbe pop xor mov mov cmp push xor in add pop imul mov dec sti je jmp in mov jecxz das xor pop xor add pop repz call mov pop or xlat data16 dec dec mov (bad) movb adc xchg pop imul leave outsb out gs ret xor call insl dec pop add pop icebp stos adc sbb mov lock jns mov cmpsb jns push sub xchg scas cmc xchg and pop rcrb sbb sbb fistp lods jge cmpsl popf jp mov add mov mov pop mov or (bad) push mov push mov mov bound das push pop aam pusha push pop mov subb out add fsubrl mov push jge add ja std pop push adc test mov mov push ret jne mov fsubp pop rorl mov sub pop int3 call pop insl std inc popa mov cld xorl sub scas and pop pop or push cmc les sbb aas add adc ficomp jbe dec mov dec icebp mov inc das negl mov push cmp or iret or or lret movsl push out pop inc shrl iret sbb jns add (bad) negb xchg add push sub std lahf cmp in add idivl jp fcomps mov push sbb push out sbb test jl mov sbb dec std fs sbbb or dec (bad) test mov pop out sbb push and out stos lock lods loop push cmpsb (bad) not mov aam pop (bad) shr cmp jno lods add cmp mov push adc pop das xchg pop adc sub adc pop scas notl adc mov imul mov icebp fdivr js ret mov and stc jbe xlat inc add jns push fistpll (bad) xchg inc or pop cmp faddl iret push lret fistpll cmpsb push adc pop into mov ret enter mov jae push dec ljmp cmp mov and das decl ljmp sub clc es loope dec (bad) lea mov add xlat sbb mov pop lahf sbb cmp clc rcl stos or rolb mov out ja insb and sub sbb (bad) jo inc lea inc xor sti jae repnz mov and leave xlat push mov or xchg xchg mov jnp ds xor add pop les and xchg sti in jae popf inc add sti or fstpt outsl sub mov shr and out cmp xor mov cmc fistp and add (bad) sbb xchg (bad) xchg iret push addl outsb int3 popa sub cmpsb or lahf adc dec out aaa int3 pop (bad) mov or fisttpl adc bnd (bad) (bad) pusha xor dec scas gs xchg loop,pt lret and sub add or mov or pop cmp jnp mov mov daa pop pushf inc or jge subl jg psrlq jns push (bad) xchg (bad) (bad) leave (bad) xlat in pop xchg inc jge iret mov cmp jb sbb stos not daa rcrl cmpsl mov ja push mov jecxz aam sub into mov (bad) (bad) fwait and xor and and or rol dec call sbb repz out push sahf xchg icebp clc out in (bad) cmp xor push adc and daa push inc test inc scas sub sub cwtl add pushl and mov bound sub cwtl ja mov sar aam rorl sbb add cmp adc add lods push loope cmp adc and adc repz fcomps sub daa lret cli popf inc inc cmp ret scas lret hlt jnp dec ret leave xor imulb and xchg mov xlat add pop jmp movsl cmpsl xlat icebp jp push push pop test mov xchg adc or daa rorb mov mov (bad) and inc pop cmpsw push cli das xlat adc mov js (bad) shll push gs or negl cmpsl pop cli mov (bad) loope (bad) negb fnop out cmpb loop mov cltd xor add sbb push cmp sub or xor xor add cmp xor sub fadd out dec mov clc add (bad) (bad) push imulb jle enter mov daa jecxz inc inc daa aad aam jbe jmp cwtl cmp dec mov pop repnz and inc mov or and stos xchg cmp scas sub sub push inc mov repnz adc cmpsb cmp cmp and push sub rcrb sub mov mov cmc daa cmp fs (bad) mov rclb xor aam (bad) hlt dec sub jne test mul inc jge add imull pop gs lods push cmp std xor pop out xchg sti iret add add aad out test loop leave leave les icebp mov sub sarl adc pop (bad) bound push std ficom shrl add je stos or and popf push dec fs mov lret out xchg mov mov pop jns dec into add cmc xchg negb or shll push mov and mov add sbb stc or add sbb sub pop mov pop xor shlb add loope jmp or shrb adc (bad) stos fs (bad) fldl mov mov mov cs dec lock inc test and or or in scas cwtl lea dec mov push xchg and or iret sbb pusha into sub mov sbb jno inc sub pop insb mov xchg into rcrl sbb inc xorl loop xchg lods sub xor leave ds sub push (bad) mov jne bound cmpsb out lret sbb mov add or fdivs lods pop mov dec cli lea orl scas sub dec idiv fsts xchg adc in enter mov dec lock out (bad) rcll mov mov jmp cli and inc push xor cld imul add fistpll mov movsl adc rcll pushf mov cmc mov cmc in mov mov or mov cmp sub xor clc das pop mov in sub mov jmp or rcrl pop shr imul daa and ljmp iret orb mov and mov leave mov push jle and sahf add (bad) jmp ret mov fadd fimull sarb in add sub mov int3 pop nop movsb xchg push cmp lret cmpsl fisttp add mov out out pop or jne inc pop es sub inc lret lahf movsb stc test jmp xor sub negl add sub ljmp cmp lcall icebp mov jb adc rep data16 mov or cli lods (bad) mov jle ret mov push adc ror rcrl cs push mov das sub jmp adc add mov sub int inc outsl (bad) mov out push sub xchg (bad) scas xchg jmp pop testb loop push imul sub popf dec cmp movsl out push and and xchg in ret decb jge (bad) jle clc inc lcall push sub cmp lods xor loop nop (bad) sti cltd add add cmp dec jnp mov mov dec loopne pop mov subl mov mov push mov mov lods xchg ja sahf pop call enter dec add rcll cmp xor mov loope dec xlat imul daa out mov cmp mov rcrl test out pop adc loope or lret lret (bad) mov out pop xor mov in mov lcall or shll adc add add aas stc popf xlat and cmp cmp xchg push add cmp clc xchg and adc ds pushf mov scas int sub insl xor sub jge decb into icebp adc mov mov test (bad) cmovs xchg mov fadd jo pop pushf (bad) push or mov adc mov add (bad) dec stos in ljmp mov xchg xor adc jb into jge mov mov ja lods lods xchg push repnz (bad) fnstsw cwtl wbinvd (bad) mov inc popf cmp jb ljmp pop (bad) jns ret test push ljmp pop je scas cmp cmpsb jne (bad) push sbb dec int3 in roll pop outsl add xchg add loopne or dec xor bound ffree frstor sub xchg (bad) test pop movsl leave stc cmpsb daa (bad) jnp cmc sub pop addl nop push in lods jnp sub sub fsubr outsb jmp and lret sub rcll sbb mov adc jp cmp pop cmpsl mov in mov aas mov jmp lock ret add mov cltd rcrb mov ljmp dec (bad) out inc sbb rcll push adc decb mov sub push sbb pop xchg jmp in rorl and adc dec int pop mov sub adc (bad) pop xor leave jge xchg sub roll or sbb lcall cmp mov cli test (bad) scas sub loopne and std jne (bad) dec or (bad) lock sbb jbe cmp add and frstor lods nop lret push (bad) sub hlt jp fmull adc add xchg mov test jbe daa cld cs adc movsb and cmp and push mov mov xchg push scas leave mov pop js ret push cmp pop jnp inc movb out test sahf sbb (bad) ljmp call into sar push mov pop push sub or repnz lret clc out jmp and hlt out test xchg and ljmp or add pop into or mov sarl cld mov (bad) out xor fidivrl fdiv mov clc mov js or lock std stos sbb shrd mov cmp or cmp xor xchg cli sub sub popf jg cmp cmp dec lock and sub and out xchg jmp and aad sub cltd push jmp ror cmp (bad) xor xor aas les sbb sub movl mov push mov lret mov lock nop out cpuid or pop popa stc pop leave mov xor push or cwtl loope or xchg xor fmuls dec ret int3 dec add mov (bad) sub in inc repz mov xor lret pushf clc icebp out push aas gs lret adc aaa scas (bad) dec repnz xor cli leave pop add add adc adc lret mov xchg rcrl cmp sub xchg push popl mov or push push pusha mov or mov sub jg mov out xchg push je add or bound jle dec ja mov mov hlt aas call pop and int3 push sub fisttp mov adc scas repnz xchg adc (bad) sub orb test cmc loop repnz and mov or das jno xchg or cli mov clc push pop add jnp xchg xlat out push hlt into fsubl stc stc adc lret mov (bad) sub xchg xchg lret bnd negb mov dec mov (bad) cmc out push jecxz mov and mov popa add sub xor cs and mov push rcll xor sub cmp lret (bad) pop fstpt test rorb pop iret dec pop loop (bad) call add mov add cmpsl (bad) xchg jmp scas dec add enter mov and dec popfw sub test or inc push push xor ret and sbb add mov sub scas les shll pop scas xor repnz lods push (bad) sub add in test test push sub or loop fucomp dec inc jns mov sub xor addb cmc fwait push lret gs jmp and pop sub ljmp cltd mov push outsb adc push call (bad) xchg in test fisttp insb pop cmpsl xchg add xor sbb cs push add jo popf cmp pop pop mov or sti xor aas test or jbe leave std in lods add adc pop and push daa add out negl xchg mov or xchg mov mov lret lcall xor icebp in sbb jg add gs pop mov fild xlat push and fnstcw xlat arpl dec cld stos lret mov lods lcall mov orb shr mov sub fsub gs dec push out not push fstpt fdivs out sbb lret (bad) pushf xchg fisub gs lcall lds adc loope sub (bad) imul fimul add out lret scas popa pop or mov sbb jmp or dec fs int popa stc sub mov in dec jne mov out or iret adcb jl data16 mov push aad jl xor add leave fldcw ret repz mov pop roll mov or mov mov mov pop shrl cmp cmp js rorb xchg sarb outsb jno and es add and mov adc mov popf inc and pushf cs push and sbb mov dec and repnz out cltd fwait outsb fdivs xchg iret out mov daa repnz adc mov test jmp xorps jmp lret je add movsb adc lds jg sbb ficoml insb add xor jg (bad) lcall cmp es pop ds adc dec iret scas sub scas movsb int sub cld pop sub xchg pop cmpsb cmp scas adc into jmp test movsl pop repz mov xor fistpl out cmp pop lock inc into scas into or ljmp mov jmp mov shrl (bad) dec into cld gs inc ja or dec (bad) cmp aas les bnd scas lds xchg xchg idivl test add mov mov mov and inc popf sbb icebp add pop rcrb xchg ljmp xlat and cwtl out ficomp ss adc fcomip xchg pop cmp (bad) dec out or iret jmp or jno shl pop pop push je mov sti mov cmpsb add cmp test stos jmp add mov add hlt adc (bad) test sub (bad) mov add daa push xchg int fimul sub push scas sub insb mov mov jnp or jle xor scas jb sub add and std cmp ds rorl dec fnstenv and sub jp adc xor mov (bad) mov cmpsl icebp cmp test iret in iret iret and adc sti mov and or jo dec (bad) xor cmc pop enter outsb adc arpl test call (bad) sbb add mov sub sti xor lds cmp and sbb cmp cs xlat xor add push out jbe pop or into push xchg push and pop mov add cmp or mov sbb ror adc pop call add mov sbb adc sbb push mov popa ds data16 cmp pop mov push pop shlb add xchg lahf leave push repz add xor xchg sub dec pop pop iret mov repz or push adc or inc xchg dec (bad) ljmp cmpsb je rcrl push inc imul aad repz jmp and dec or xor jge mov iret mov (bad) repz jns movsl incl je imul push jmp dec sbb pop pop cwtl jge test lcall or gs or cwtl and add inc call mov ss ja out mov rcl mov daa into sbb adc fistpll std inc sahf cmpsl pop (bad) (bad) sub out pop jl xchg cmp sub sub mov fldt cmpsl push lahf sar add in cmc sub addr16 repnz gs lahf faddl xchg jmp andl inc fldcw inc pop movsb xlat movsb cmpsl nop call jb xor ja loope inc push mov in and fstpt data16 cld into mov fisubrl stos adc negb notb xor ret (bad) mov sub push add das (bad) jg sbb push jg idivb cmp cmp xor out cmp lods pop jb lahf push (bad) pop mov lods (bad) popf fiaddl rcrb scas aad mov dec mov mov ret push roll out lret cwtl pop cli sub sub xorb and and lahf sbb ds lret out pop cli sub and mov int add push mov sub inc xor mov jecxz gs xor out repz mov dec std es divb pop xor ret add out pop into or arpl or pop scas (bad) movsl (bad) mov ret stc sbb jne test pop ja pop push in bound and pusha rcl jecxz push mov sub std lds pop idivl pop pop jae out fwait mov test aam test xlat xlat data16 mov or xchg div and scas lea mov lret out imul outsb sub adc and fucomi dec xchg cld mov pop add dec and pop (bad) pop add andl dec stc jecxz js (bad) mov test jmp mov jmp mov sub lahf notl or sti jge inc loop pop (bad) aaa dec pop fs mov (bad) adc add add or stc dec mov push icebp dec mov mov xchg cltd push inc and or mov fcoms push loop loop adc fucomip into pop stc pop mov mov jl out pop xor mov mov pop xor ljmp ljmp lret jge les jmp mov lret lret aam scas dec out or stc xor into xlat sub (bad) or pop pop or push add mov push pop ret sub push push pop or push decb mov stos aad lds xchg cwtl ss sub sbb les rolb sbb and out push icebp cmpb insb pop pop sub push stc lods into icebp testl out test cmpsl mov push (bad) mov pop sub inc jae fild xor mov or xor js (bad) ja fcoml sub dec dec sub and jne pop adc nop movsl outsl jb cmp (bad) int3 pusha jg test add mov lcall xor ret sub pop sub into fistl (bad) add fnstsw movsl mov cmc frstpm(287 das jnp adc and rol push push mov mov rcrb xchg add nop hlt fsubs je sub popf in pop mulb aas pop cmp sub or ljmp pop mov insb pop adcl (bad) and mov cmp dec pop cld fcomps out rcll and sti push mov dec dec sarb hlt loop lds out shlb jnp sub cmp xor add sar icebp iret sub clc sub sub clc fbstp sub daa or push mov (bad) or inc sub inc cld rorl jmp or aaa cs jmp mov pop mov pop out (bad) adc xlat dec xchg and punpckhwd test add ret add cmp outsl gs push sti adc aam ret sub push clc pop add addr16 shrl fcomps scas test xchg divl (bad) pop repz dec (bad) xor xor mov pusha imul mov pop insb cmpl in fs lds and stos or data16 mov mov cmp sti mov outsl fs pop ja pop mov movsl push sarl lock mov push mov jmp fisubl jb (bad) add dec lret inc pop mov add lods xchg jmp sub mulb in and add sub or lret fsubrl pop jmp mov sub xor lock fstl or lahf xchg dec sub jne test xchg out mov mov jl inc and lret fcompl or mov ror pushf jmp daa mov repz mov push stos mov and in or lret and out mov cmp mov orl push adc daa xor (bad) aas (bad) ljmp es push sbb test push ss xor subb lret das and divl push cmp xor repz mov inc es je ret or arpl add pop ljmp clc dec add inc inc or pop jle add jmp cmp popf mov inc ret xor and sbb pop leave sub out mov pop dec mov imul lods push jno jp pop or dec dec cmc inc sbb adc out icebp (bad) scas fmul out mov test out pop and lret ret xchg idivb or sub cli repnz xchg les or mov and xchg shr mov movsl or in lret cmp jmp jnp and add add and mov cltd jmp sub xchg sub into mov loop xlat scas sub pop lahf rcrl inc sub das push or idivl fcomip inc sahf xor add mov adc das iret faddp test dec or xor mov popa pop adc and cli bnd and pop dec add and shll sub xor out gs mov inc das mov iret imul sub jo inc add and cli push rorb shrb cs jecxz sbb mov icebp js cld movsb xor pop lret and out fs inc lret imul into shrb pop sbb and repz in mov sarb and pop stos push sub daa and xor repnz or pop pop lea pop mov les out pop or in dec pop or repnz inc pushf xchg add pop adc popf xor mov shll call and repz je sti repnz loope cmp sub jns xlat je mov ljmp mov ja adc sub jne and data16 test and out push ljmp xchg or dec dec cli xor push push cmp cwtl lcall (bad) mov ja cli ljmp mov sub sub rclb shrb jmp inc jg pop pop mov mov xchg (bad) push cmp dec or ror idiv stc lret gs shrl cmp xor add inc ret mov in pop icebp repnz xchg pop jge and jle leave xor or lretw cmp movsl or daa popa or into mov (bad) xor add jno (bad) mov mov xchg inc pop scas sub xchg push xor and mov outsb sbb clc and xor or jp add and in lsl pop lods xor movl cld and xor ret jecxz pop or cli bound jmp xchg adc add jb fistp jecxz inc faddl adc sub sbb enter stc push inc mov sub jl adc cmpsl push cmp test negl inc mov and (bad) pop gs or (bad) jmp bound xor sub aam and rep pop lods das mov lret jmp xor sub jnp decb or fcmovu xchg mov aaa sbb data16 cmp (bad) xor or or or pop mull sbb xor adc pop data16 pop and outsb nop in (bad) mov je inc mov and push mov jg xchg add idivl movsl and in sub xchg sbb ss out sub dec sub ja fsubrs and sub or shrl divb adc sub rep sbb sarb insb movsl push or jno or sub sbb jmp push (bad) add mov add enter (bad) loopne jecxz and jge mov and add lods fidivrl xor ret sarl pop pop jp cmp test out mov xchg mov adc pop pop imul or lods scas fisubrl add mov scas sub adc add sub mov mov xor loope or and jnp add mov pop sti or lret xchg fmull leave dec add stos add sub mov pop out das (bad) idivb jo ret jb cmp cmp into jl lret or push (bad) divl push xor dec scas repz daa loope jo (bad) and sbb (bad) mov cmp push (bad) int3 addr16 adc and sarb movsl out jne loop push mov fidivl into (bad) mov into dec mov push cmp mov shr idivb ficom pop sub xor jnp sub in jno out or dec frstor or sar mov lods jp jbe lret (bad) mov pushl dec inc sbb je jmp leave cli ljmp stc or sub sahf bnd iret xchg jecxz cs mov mov push add jo jbe dec leave mov sbb xlat mov sahf mov xor les or xor jne inc rcrb mov push dec (bad) in pop dec mov mov iret and add adc pop xor mov adc mov leave jmp pushf repnz adc lret pop idivl and xor cld pop fs repz cmp and rolb push dec into cmp scas add repnz into repz negl test in ss fidivr into pop std lahf sub push dec loope into cmp nop (bad) adc or add (bad) xor mov cmpsb cs fldcw xchg xlat fs mov fstpl vpunpcklbw cld lods (bad) dec mov mov ret jbe push adc push and cmp bnd sub xor dec xor and ljmp ja out pop lret pop add mov sub in je out lods inc sarl mov test mov (bad) psubusw rcll sbb lret sbb mov mov and or adc pop mov sub lea in fs mov icebp ret push (bad) loope push outsl fcoms into inc jne pop ss mov idivl pop cmpsl mov sub and (bad) std cmpsl sub lds xlat mov mov std inc mov stos sub cli lock xchg adc mov sub and stos lahf mov mov cmp sbb mov addl pusha sahf icebp cmp pop dec mov out sub lods adc xchg repnz lret mov out push out add cmp push insb adc or mov jmp inc divb mov (bad) xchg adc adc xchg aam push and mov daa xor fisub jp push jge push pop pop arpl ljmp xorl leave test sub (bad) scas mov icebp ljmp sbb push or andb out push or aaa sbb jp xor push pop push lret lds ds mov inc add sub jns imul sti in outsl xchg mov dec lret sbb pop (bad) movzbl push add fstps (bad) xor xor jg or lret and and pushf mov mov bswap adc nop (bad) xchg jle je out test stos inc jo push orps or ret or pop lock sub cmp rcll sbb out sub (bad) mov imul clc incl dec bound lock pop out inc pop xlat mov fwait cltd add test cmp ds dec je lds stc push repz scas push add and cwtl mov or out adc dec stc or pop aaa lods fwait sub popf rclb pushf mov jb mov adcl popf cmpsl push sbb pop inc cli sub stc icebp sti aaa or adc cmp lea ds sub gs add or mov jmp push jmp cwtl push icebp sub dec shll mov jecxz pop mov mov jge enter dec (bad) lret iret pop add sub ja addr16 mov je scas xor rolb push xlat and sub add das and cmpsl pop lds idivb cmp psubb sub cltd pop sub gs mov negb pop das push (bad) lret lods shrl iret mov int3 adc and (bad) mov out inc out out call outsb iret sub add mov pop jle pop mov push daa mov rolb lret aaa dec mov cmpsb xor and inc sarb lret pop pushf mov stos out fwait cmpsl pop insb mov mov pop (bad) cmp pop xchg dec push inc aam mov adc push daa and (bad) mov sbb sub mov cltd cmp jb inc cmc (bad) cmc xchg sti lea add iret mov dec fnstcw or leave daa inc pop ret jne fist dec in cli (bad) xor or dec bound mov lods rcrb stc or mov pop jp xor fcoms lods stos fsts daa and stos xor or dec pop sub sub and lea inc adc dec mov dec fist aam mov mov sub es mov iret mov push push mov mov xor dec fcomps adc shll dec mov jne,pt mov xchg and pop add adc in int3 xchg pop into xchg repz mov adc inc test jo lods sub fs inc pushl xchg out push mov inc push or mov sub fcomps insb ret inc adc movsb mov or call jecxz and xor movl ret jne insb inc mov sub into nop inc les xor jp loopne xchg cmc xchg lods sub sub pop add lret jne inc mov and movsl inc sub jne mov popf sarl xor jne cli out pop mov rorb out or dec mov fs jne (bad) jae stos dec shl mov addr16 xchg sbb dec jbe test (bad) out mov mov jno xor lret jl mov insb (bad) in push pushf sub pop dec daa into pop sub cmpsb lret aam sbb popa icebp test cmp shll mov mov sub xchg and (bad) aad and mov pop adc lea xor sub jb inc out mov mull das movsb lds jmp push sub cmp (bad) or mov inc leave jmp jbe lods pop aas or inc lds cmp loop cmc (bad) mov xor and add cs mov add xor xchg xchg out xor or mov xchg mov (bad) ljmp push test outsb (bad) test outsb mov scas int add (bad) leave fsts faddl cmpsl push cmpsl fimull test lea xlat fisttpll or stc push rorl xchg mov out mov xchg or test lods push mov cmpsl xor sti shrb inc mov xor or (bad) cmp (bad) xor ds andl or jg call add nop pop adc add cmp repz mov sub in mov pop out dec xor sbb imul pop sbb mov dec mov clc fidivr xchg cmp arpl test fsubrs movb jecxz clc dec xor imul sub mov test movsb adc test int (bad) ds sub jmp xchg rolb enter sub add sub jmp test mov pop push xchg mov cld jmp aad add jmp add (bad) cmp test loop test repnz push xchg push in aas call pop and and in fs lret add xchg (bad) mov mov orl sub in mov jg pop ds jmp out mov lahf mov cmp scas test mov mov push stos bnd test sub test (bad) sub mov int jle cmp xor (bad) pop jnp fs fiaddl test pmulhw mov cmp (bad) and cmp sub push jmp push inc inc sbb jg sub sub jb adc test ret dec scas mov add cmp pushf (bad) imul (bad) jg popl or das or pop push pop add mov (bad) xlat les dec (bad) imul inc sarb xchg leave jge xchg xchg mov movsl movsb adc adc mov mov inc ret jne add sub frstor movsl pop jge repz bound cmc xor mov pop imul sbb hlt ljmp das aam in test cmpsl jg xchg repnz sub pop push push (bad) sub outsb (bad) into sub fsts mov ds or mull call sub (bad) cmp sbb test test aas adc ret add lahf mov mov scas jb out jne push fldenv add add inc add mov push cltd xchg cltd jbe outsl add ljmp adc (bad) mov data16 aad cmp jne repz mov repz jo inc mov out imul jge or ja repnz adc pop mov and sti push pop jmp iret jle sbb dec leave mov jno xor cmpsl cltd in or lock add mov add mov pop leave sbb sub xchg lock add sbb sub fwait push and sub in mov ss sbb jmp (bad) (bad) loop lahf adc jmp bound push xor jle rep (bad) push pop lods rcll pop movsb pop sub or repnz imul (bad) push neg xchg jnp pop loop lret xchg push and das xor push pop adc pop (bad) mov jg xchg mov cltd into fidivl mov jge inc icebp sub mov icebp xchg test dec xchg dec cmpb lea mov push insl cld repz xlat xchg sti pop jmp jb xor cmp push push xchg stos ret push xor push scas sub mov xchg pop push push cmc xor es or jp cmc js pop jmp push aam in adc jo out mov and cwtl push and mov inc sti ss sub ss in sbb test pop enter cs or push outsl test xor mov sub cltd arpl lahf push push pusha mov (bad) out mov outsl testl jge mov dec add jbe lret cmp sub push xorl (bad) scas cltd lods sub inc xlat clc iret xchg pop xchg in xor xor out dec jg mov xchg adc ret enter pop idiv pop and xor xor out gs sbb test cmp xchg and mov and dec imul xor sbbb repnz pop fwait xor into fcmovb rorb xor sti lret cli inc outsb cmp jnp jge sbb push or cmp cld into pop ffree loope cmp les mov push xor pop jmp jnp ljmp sub mov ljmp cli sbb mov leave or push daa ja dec es pop ret jp mov xor push cs xchg lods div cmp cmp inc and shrb adc test adc push stos cmpsb repnz clc mov jns sbb test rol aas fldcw add dec cwtl pop mov jbe aaa int3 dec cmp xor into jl push cmp fcmovnbe pop jae cmp push mov jbe movsl jne pushf das in out xor mov cs push and pop into inc dec push mov lret loopne test and cmp jle jmp (bad) pandn sti mov dec cld (bad) lock imul xchg enter out mov mov pop pop stos flds dec mov pushl lods popf rorl and or sbb and lods jno push xchg sbb decl cltd xchg (bad) arpl inc inc nop mov fwait jb jecxz or xchg pop jmp sub repz and (bad) sub leave pop (bad) imul outsl and add jns mov cmp (bad) mov (bad) ffreep iret dec (bad) notl inc add pop mov adc or add add stos fcoms cmp call or adc scas movsl pop inc and add mov sbb scas jmp loop xlat lods nop and cmp xor popf scas jp dec in sbb dec pop inc movb aad movsl mov mov mov leave inc xchg insl xchg cmpsl aam adc into daa mov push ja imul out sub out fwait xchg sub xchg fildl cmpsl ja (bad) xor and bound ret adc rcr push lds adc lods (bad) mov cmpsb mov imul mov push sarl sub mov in jne push pop (bad) (bad) sub jmp data16 fsubp rclb lret call mov mov pop in or shr or fistpll xor pop out ss (bad) mov xchg jecxz mov dec outsb pop sub and std or xor rcrl sub or xor das xchg and or add and mov push or xchg sbb fcoml les mov cmpb ret lahf push jg lea mov ret mov ret insl repz lret mov xor repz mov mov mov cli cmpsb insb add gs or pop gs push callw and outsb sub sti cmp (bad) jne jno (bad) aam xor sub and rorb mov jle loope lret xor mov sub ljmp loopne pop (bad) xor jecxz imul lret adc and loop lret loope sub repnz scas xor pop (bad) mov test mov lahf gs mov push pop mov mov ror aas mov imul stos sub fidiv jbe imul xchg ret inc push das push pop xlat xor push sbb lret ret outsl imul add ret pop (bad) xchg loop sarb fdivrp mov push cli xchg leave mov adc jno pop aam mov lret lcall ficom and mov jnp lret pop loope mov (bad) clc pop pop lods pop mov add mov fist jmp negb daa jne pop or mov sahf dec jno and popf repnz mov jmp sarl leave mov inc or (bad) int sub or inc jb sub pop mov scas fistpl (bad) repnz fimull adc adc (bad) dec je shrb popf aad adc mov jg leave xchg inc imul pop out sub mov aad enter rcll add lcall pop cltd sub mov mov ljmp (bad) out das divl mov push pop mov add or out xchg shll lds enter sub xchg sbb ja jo sbb mov or data16 sub sub je jns bound icebp mov dec in sbb mov in mov mov in push or pop and mov mulb push imulb sahf xor pop movsb xchg or xor jmp lret pop (bad) (bad) cld ret push push push jbe stos movsl or add mov sti dec adc inc and stc xor or push add icebp out lret lods inc mov mov fs and xchg fistpl iret cmp (bad) popf cmpsl xor loope mov xchg test add cmc movsb icebp je out and xor das sub (bad) xchg xchg fist frstor lds (bad) aas lods xchg xchg ljmp push inc sub std inc sub mov pushf shll fcoms sub sub mov sub mov fist rcll xchg lret bnd fnop call cwtl sbb push add rolb add pop adc xchg imull dec sbb stc jle add lret js sarb out mov sarb adc scas bound fstpt adc push push add mov out pusha popa mov aad or ret iret pop jl shlb (bad) mov lret gs mov lret sbbb jo in adc cmp daa lods adc ljmp popf in loop sarb or daa movsb mov add sub outsl int add sarl add je mov scas (bad) cli pop xor movsb leave mov pop dec fisttpll (bad) mov sbb mov push (bad) cmp jo data16 (bad) mov push outsb fadds or lods and jecxz mov push cs test out and inc imul insb mov stc and rorl add xlat out mov mov insb jge sti jmp lar mov inc mov or or out dec bound mov mov jno leave jbe adc mov dec lods jne scas or pop jl (bad) out aam mov mov pop sub xor xchg popf adc es mov jnp sahf and inc sbb push and add icebp or jg mov pop arpl or jmp addr16 adc lret arpl aaa ljmp in (bad) out popf ja jne or pop fst fistpll mov (bad) sbb lods std mov jns push xlat xor cmpsb pusha js ficomp pop xchg out inc sub test pop jnp xlat scas mov mov xor cmpsl xlat ret or jne iret dec or sub incl mov add popf inc sub pop mov (bad) repz out es stc dec out call jg sbb mov push lods or or (bad) xchg repnz sub inc xlat pop push mov mov iret int3 orb cwtl test fmul ljmp repnz and add mov adcl mov inc sbb in sub pop push xchg mov mov sbb repz sar test jae mov xchg out sarl xor cmpsb or cmpsb aad adc sti lret add cli pop ret xlat mov push push pop test add sub lahf mov dec and (bad) add loopne and sbb sahf add lds mov int3 adc pop lds cmc in push sub pushf dec popf addr16 mov cmpsb daa inc xchg outsb (bad) imul push pop or scas mov ds ljmp cmpsb test xor mov rorb cwtl pop lret sub dec loope ss dec cli or (bad) mov pusha pop or sub mov ret icebp enter adc cmp sub out into stos mov dec (bad) xchg enter insb lret scas lret imulb dec inc lret (bad) (bad) pop dec push dec add xchg pop int3 mov add jl xchg (bad) repnz mov jl je and sub mov mov xchg sub pop lret inc mov ja xchg dec add loop aad test out sbb aas or (bad) ret push (bad) out repnz pop mov dec jns dec mov mov mov (bad) mov inc xor xor sti repnz or mov pop jmp lea inc push mov fldcw sbb xor movsl hlt or call psubsb sub (bad) or ljmp adc repnz push mov xchg (bad) mov add ds jno loop pop pop xor jo mov bound xlat lcall cmc sub (bad) je lds or mov sahf push adc jl divl push pop out je stos lods and aas bnd mov jne jl pop xor sarl out mov loope inc sub xchg lods sbb lahf push jae (bad) and out cli subl cmp out push adc sub int3 dec or ja rcl fidivr rol pop ja and push and in (bad) xchg pop push jmp push adc push mov sub dec mov pop fidivl pop rorb mov cmc out pop (bad) stos xor push in sub dec divl mov lahf xchg jmp and imull push jno dec test out movsl xlat xchg out ja and test mov sub push jecxz push push out mov sub jb adc mov mov and mov divl cltd (bad) (bad) decb add lcall lret daa and shrb in cmp int3 das sub lods fisubr icebp pop js movsb sbb pop mov cmp sub sub divb or flds add negb into lret call mulb in mov mov mov pushf add dec mov lds or scas push push jl loop int3 out mov lcall repnz je push mov mov jb mov in xor or add popf push xor (bad) mov bound xchg ljmp adc push sub sub outsl mov hlt inc pop pop push lret out divb lahf cld stos gs insl sub xchg out sti sub or (bad) (bad) sbb dec push loop idiv inc pusha add and gs ja dec or addb cmp test pop jne add jno cmp sub push outsb pop mov fimull stos mov cmp stos jnp push push or pop pop or cld stc mov sub test int3 mov das sar fsubs rcr mov mov push xor mov fldt call dec gs and cmc enter mov mov roll lahf rorl dec out pop enter shll shrb mov inc (bad) mov data16 enter xor pop ret fmull jg mov lea and pop push dec ja mov and mov inc or push and pop jmp inc xchg repnz push imul cmp mov clc jnp arpl jns pop arpl push notb lock add jl bound lret aad jns mov pop scas daa inc mov jmp rclb add je fs mov out sub fs fidiv mov inc mov stc dec cmpsb cmpsb or (bad) rcll xor push push adc jne stos mov (bad) (bad) push fwait and das or inc mov aam shrb and xlat (bad) cwtl jecxz mov mov and das dec inc jmp jb pop mulb leave ja ret mov (bad) jns and (bad) dec mov cltd pop outsb mov xchg out pcmpeqd dec repz das xchg fs and sbb mov push movsl sub rorl cmp xchg loope sub (bad) out scas mov mov ret and mov daa lcall (bad) nop in xor popa jo mov sbb xchg mov addr16 adc fidivl jb sub cmp adc dec dec (bad) bound mov or pop mov (bad) and push popf pop sbb jne shll imul jns adc (bad) je mov repnz mov inc xor sub icebp pop popf dec push add addr16 mov jnp mov xor jbe dec sub cmp movsb mov int3 mov outsl mull lods scas add ret subb (bad) mulb pop add xor xor or scas repnz aad (bad) fisttpl (bad) mov mov out inc hlt outsl fldenv orl sbb test call jl lds ret mov or sti mov rcll push add xchg rep lret mov sub jecxz dec repnz cli jne or es outsb das jne and sub pop pop (bad) mov adc inc test insl pusha pop int cmp into into sub repnz and enter xlat add pop (bad) icebp shrl mov inc and jg cmp jne ja or adc xor xchg test jmp and sbb xor adc test or test movsl ljmp add cltd xor stc xchg rorb pop cmp pop loope cmp mov test movsb mov repnz imul push mov dec repnz mov das jmp pop ljmp and xor das mov out mov out bound push cmp lock mov and pop lods je ret int add cmp inc fsub cmpb inc jmp in xchg loope xchg rcl popa mov hlt stos push out lahf push das push out outsl movsb movsb add mov imulb mov ret fist (bad) xchg mov xlat and out mov inc into (bad) and sub fistpll add rcrl lea (bad) cmp daa lret jle push fistpll xor jbe shrl pop scas pop sbb mov push pop or jecxz mov les xchg cmp adc cmp jo scas xor notl xchg leave mov jb rcr cltd dec stc adc sub outsb mov adc roll or cmovo mov lahf lds (bad) adc out sub push add jbe inc sub mov loop repnz ret jge dec cmp dec sarb push sarl repz jae leave (bad) cld add inc dec call xor ss insb cld jmp pop xchg repz jmp pop dec stos jb xor xchg sbb mov sub pop xchg push fdivrl (bad) imulb dec sub call and lret mov xor rcr mov addb cltd iretw insb data16 xlat and movsb test mov (bad) add repnz std (bad) lds jg and mov cmpsb mov test stos mov dec mov or xlat out scas jns add mov clc dec mov mov xchg stos xor inc outsb adc add mov das add xor lcall jno test sub xor push xor (bad) mov cmpsl sbb aaa loop adc out ljmp out push (bad) int call in rorl out test sub jg call xor mul sub ret (bad) cmp mov xchg insb sub sub in cmp mov and cvtps2pd add in movsl jne xchg push jae xor jne pop lods xor lcall push inc and push add cmp cmp dec dec out dec adc loope stos dec cmc fdivrs mov lods lahf xchg push (bad) or add shrb mov and mov and dec sub ja or or sub leave (bad) xlat adc and xor push shrb cmc and mov add push sti divb (bad) movsl je out xor repz xchg inc movsl dec adc idivl jne xchg test stc insl inc repz cmovnp in scas (bad) mov pop arpl jle inc cmp jae repz cmp aam sbb call push adc push sub push dec mov pop test add ret pop xor roll cmp aas dec lock imul add and push xor lods sbb xor xchg dec xor shrl pop pop repz sbb cmc pop mov insl das add and pop cli pop shrl or pop mov fist sub mov ljmp or sahf out popf faddl test insl add in xor scas adc mov dec fldl sub mov negb push nop outsl into mov test lods fcoml jmp iret cmp repnz pop add je push push test addr16 stos jno inc out add xchg pop cld into add add icebp and xchg stos jno loope cs mov stos and mov or je (bad) sbb xchg je push inc add (bad) rcl fstl add mov pop pop add rolb leave jbe (bad) decb arpl ret out (bad) movsl mov and add push mov ljmp bnd jmp scas lret (bad) jno xchg mov xchg xchg and into sbb mov pop or insb pop mov xchg sub dec xchg sub imul xorw dec xor add and or je push ffreep sub cmp mov ja mov pop sti jae push adc and stc add cmpsb push pop std cmc mov adc cwtl adc xor cld lret jp in xchg mov or sub leave or (bad) and dec mov ljmp movsl pop lret lret pop dec cld cmp ret sub xchg xlat neg pop lahf xchg lret adc add cli lea loopne,pn adc jmp icebp pop jmp aad (bad) (bad) xor dec add enter scas jb and sub sbb push mov cltd jmp mov push (bad) imul sub mov and mov cmpsl addr16 xor mov fnstsw cmpsl inc in push xor sub mov push ret add push pusha cmp xor loope out sub mov push scas xchg lret ljmp jno push push bound lret mov sub sub push sbb ret adcb rcr addr16 les cmp jno mov call jmp ds mov aaa ljmp ret popf or sbb out xor cmc mov ljmp out add dec cli xor add push mov push pop inc and repnz push add decb xlat jmp pop roll and xor outsb daa ja out and das mov out cmp push push and adc and dec scas jo or out dec ljmp imul sub adc sub cmpsb adc popf sub cs mov push dec adc rcl ss dec ljmp xchg sub jmp loope sub sub dec pop repz cmp dec orb mov push jecxz jne push mov rorl lret push loope (bad) sub adc xchg ljmp sub mov out daa out pop out cmp movl das xchg jo nop cmc xchg mov jno leave mov rcrl insl call into inc stos mov xchg mov adcb and out lret mov movsl stos scas les (bad) dec bnd mov mov jne out jmp je (bad) in movsb rolb pop adc pop xor fcomps sub test mov js jae jmp lods (bad) stos mov mov pushf bound out pop ja cmp cmp or pop mov sbb decl and popf jmp mov cmc xchg outsl adc add xchg xchg or jg outsb stos and scas pop xor leave idivb sub sub repz cmp sbb ds or lcall mov or out cmp fwait adc jle sbb popf dec push gs test xor lcall sub call std scas jno (bad) xlat (bad) xlat sub adc mov fs lods push lds incb out mov and sub popa (bad) jmp jmp pop pop jmp add dec movsl aad jne shll mov mov pop (bad) inc mov in push cmp cmpsl fbld dec pop or adc adc iret xchg pushf add inc dec ljmp arpl in dec mov aad mov les push push push push aam dec hlt adc clc mov es add fstl xor sub and ljmp dec call inc add clc inc add sub data16 xor shrl xor jns add scas loop mov pop iret mov pop divb pop or and ja ret out lret mov dec add and movsl popa xor mov and ja test leave push inc cmp incb test adc aad cmp cltd (bad) mov test push mov sub pop or xor add xor sub adc dec (bad) jae xor fdivrl mov andb ret out dec pop xor inc mul pop pop loope sbb jns xor shrl test xor enter xchg jg xor andb sbb adc cmc gs es or sub or iret mov and xor aad outsb fistpl repz xchg icebp cld cmpsl jl jge ret mov mov insb dec jp push and decl jo test xchg jle in sti lret inc dec jmp jmp mov pop out popa fsubr sbb popf inc cmp cmp sub inc lret out jb into adc (bad) lahf jno push push out pop mov pop and sbb sbb loopne test stos lret push les dec int sub or mov (bad) daa out sti sbb pop mov leave pop sub lds cli out dec mov das sub ds mov dec ss pop lahf insb mov rcrb icebp mov or stc sub mov out mov and aad into mov in rorb dec stos pop mov mov leave dec lcall sub shl sub sti cmpsl pop iret cmp lds cltd add out adc insb mov fsts xor push add pop sub jp mov movsb and sub bnd cld iret shr mov jl cs dec jg xor xor add cmp pop loope mov push lcall adc out add fiaddl mov dec ret push repnz or das test lret lret scas jl push add mov pop push gs add dec mov mov enter bound pop aad (bad) mov cmp lret xor xchg loop jg stos call jl bound (bad) jno dec adc pop outsb (bad) enter sarb and xor xchg sub out sub mov and shll testb rorb sti lret rorb and or sub pushw push test mov or and or push dec ljmp add dec das mov xor xor mov or push test inc rorb je sarb iret xor outsb sub lcallw pop xor stc xor and ja pop adc and in jns mov cmp xor (bad) fidiv pop cwtl xor dec pop mov push push xor push pop mov dec fdivrl test (bad) test lret into (bad) jge jmp jns movsb ja icebp leave loope in clc adc iret xchg push lret stos popf lock cmp mov sti xor and icebp mov shll repz das out push lcall cltd pop cmp push inc icebp xorb lret xchg xor push mov ret jge int3 in daa add int3 popa pop out test in (bad) leave out push mov inc hlt pop stos jle shr mov lods and mov jp pop add mov (bad) notb std cmp dec into jo pop cmp fs lods push mov in mov dec mov inc je jb fldcw xor arpl xor roll and add xlat divl xchg dec push xchg sti adc cs int3 rclb lods clc negb sub cmp mov pop iret mov inc and outsb ret jno (bad) testb test in or mov out xchg shll or clc inc dec jle pop out mov or mov xor sbb into hlt fist inc int sub sub and mov adc iret adc movsb fwait or stos ja jbe fldt dec push mov movb shl (bad) xor inc rolb add aam stos je mov or icebp add mov sbb fild or cltd pop int3 xchg testl push out push shrl je (bad) je pop xor sub shr or pop cs mov aam lods out (bad) jae stos mov push sub js mov cmp add xor xchg rcrl or lods fist mov jno push fstl mov mov cmp push jmp stos mov add mov cmpsl (bad) and popf hlt iret xchg mov mov das sti sub ljmp es sub vpor dec dec jnp add jge or and mov ljmp inc iret nop out test lahf xchg out repnz test jno mov xchg js movsb sub xor and sahf subl loop out and sbb (bad) lret mov ret jne or aas repnz xor call and mov mov cs or mov xor ja sbb sub fbld (bad) push xchg adc cmp lret jae jge mov adc lock dec movsl and divl movsb ss and or push call sbb push xor repnz inc leave xor add xchg gs bound in (bad) add xor push sarb popf fist popa mov xor sub movsl shl and xlat jnp inc mov or clc adc lds loop rclb mov jb neg push leave popf mov add iret dec bound ljmp (bad) idivl or sbb add xchg insb sub mov ds mov outsb int3 mov xchg repz lock in mov pop sti cmpsb or nop dec mov std mov mov movsl (bad) xlat push jbe arpl mov mov arpl add stc cmc xchg cli repz iret jmp fisubl fiaddl outsb sub sub stc lods mov and and or lret push data16 icebp iret xchg ljmp (bad) or jns dec out mov push sub addr16 mov es mov cmp ret add cli xor stc jecxz roll aas mov add jne hlt or xchg sbb ja push mov push and mov mov add lret cmp into pop flds enter pop xor in cmpsb or sarb cwtl mov or push mov sub js repnz mov stos jne pushf pop jecxz inc sub xor sub add sbb sarl aas mov imul icebp sarl dec pop xchg mov push xor daa push icebp push inc sub in iret pop pop in hlt nop ss and stos cltd lock add mov icebp cmp das inc in repz loope pop sbb xlat pop icebp test add mov and int out or rorb rcl xlat and aas and cld (bad) mov insb je or and mov and xor loop enter nop cli xor cltd xchg dec jne iret and push mov enter mov shrl pop in push mov je xchg adc dec fucom or mov rclb push outsl dec out xchg inc out xor cmp inc and (bad) or repz lock jecxz xchg mov icebp or scas fs dec rol mul pop jne in jle dec out (bad) (bad) test fcomp and mov sti das adc ljmp and fnstcw push jp push push aad icebp mull in popf daa and (bad) jb (bad) jne push fsts xchg mov cmp cmp addr16 adc and pop std mov testl (bad) rol fildl out lret jle call (bad) pop add cmp jbe ret cmc cmp test adc mov outsb dec ljmp ljmp lock dec xor sub cli je scas repnz lods or xor jns imul or mov sub xchg in cmpsl vshuff32x4 dec inc mov adc (bad) dec xchg std xor lahf aam dec push in mov jle mov call vmlaunch xor movsl cli aam cli gs mov fwait push xor out cmp jns fnstenv xlat cmpsl pop out lret sbb mov jl push cmp in fnstenv and daa std dec sub jle js push imul repnz xchg movsb mov out iret lret iret icebp push push xchg out loop fistpll push pop adc dec cmpl inc add iret add mov jg sar in mov mov xchg add cltd leave idivl mov jmp sub test mov or rclb lods adc scas fstps push cs call outsb stc bound jp mov mov inc insl das jne adc cs iret enter insb js adc xlat mov ljmp sub mov sub out mov fmulp lds pop ds daa loop (bad) and mov mov mov loop sete and xchg or jle popf add idivl jae jbe daa in jecxz dec test jmp scas out inc (bad) adc and cmp mov lods popf and add iret sub jecxz push sub (bad) lea (bad) and sub cs fidivrl into ljmp add scas mov outsb push (bad) call and clc mov fbstp repnz pop inc pop out dec stos fucom ret adc mov adc pop mov vcmpss lds mov jnp cmp push out cmp pop push mov xchg sbb xchg sub mov xor xchg ret popf jge fdivr inc mov ss test popf pop adc lret andl cmpsl dec bnd mov out or fist faddp pop and sub or push mov dec mov xchg repz and lret ret jne and mov adc sti lret push add mov add jo dec fs add subb mov sub icebp mov movsb fdivs les push repnz fcmove pop fnstcw leave push add outsb je scas mov add xlat cmp and and push jo and dec jmp adc or pop or or bound mov arpl shll pop push xor adc pushf mov fidivr loope xor sbb repz mov insb jge test sbb cmp adc stos dec stos ret adc sbb cmp out movsl and imull scas sub push sub int3 jp lahf hlt dec push pop enter loope jg dec push jae dec mov push sub jle pop imul fldenv fstpl inc dec xor sub cs cmp out rcll push add iret sbb (bad) mov jbe push cmp outsl mov ja hlt (bad) jne jbe lea or ja xchg or adc popf and fs sub add adc sub imul mov lret test scas dec or ja std cmp mov scas mov add pop dec movsl jg arpl imul lcall jo add cwtl gs lcall lret sbb inc ret clc xchg jecxz mov sbb out adc inc rcll lds and mov sub lret cmc out das (bad) cltd repz jnp pop xlat lahf lcall add (bad) mov andb leave dec xor mov fcomps gs jae lret hlt mov and pop loope cmp adc dec fs into sub repz loop dec clc arpl imull dec add (bad) mov dec xor ja push mov mov xchg dec dec xchg pop mov ret call lret inc push mov or repz shrb or xor mov movsl push inc xchg sub sub gs insl movsl push cmp icebp popf (bad) xchg add gs cmp aad mov xor lahf pushf cmp or iret or ja nop xlat xchg adc mov ss mov dec stos jmp jmp icebp sahf inc lret sub jae add xlat jae and mov inc subl or loop lret mov mov outsl imul xchg mov jo shr pop sub dec fs xor push pop mov jge mov sbb pop xor clc dec es pop add jae xchg jmp pop pop adc repnz xchg test leave cli or cmovnp push loop sub xchg dec repz leave xor mov add mov jg mov mov stc pop into sub cmp fst and sub sbb add ret mov test test or xor pop jle sub cmp mov aad add pop loop push in mov inc (bad) pop mul add and cli mov rcll mov enter into mov and pop daa xlat push cmc dec stc std enter mov lahf pop push add lahf fxch push js xchg inc mov inc out or outsb fisubr pop (bad) lret xchg xchg adc lret xchg cltd cmp adc iret outsb dec js (bad) lret fs mov das movsl sbb aad mov hlt ret fcompl test sub push mov stos test dec ds pop jmp shll jge decb add mov push sub stc push outsb aam clc sub mov jp push sub imul cmpsl in sub push daa sub mov outsb (bad) jle mov in dec xor mov outsb dec repnz sub into xchg aad pop add sub jmp (bad) xor mov pop push mov inc and pop xor add shr push push cmc rol lock aaa push mov sub fcmove mov add jecxz mov pusha rcrl add test pop and dec (bad) rol xchg push jle add mov lahf pop negb jecxz outsl orw cld pop xor (bad) xor xor pop push mov pop push mov cmp vfmsubaddpd ret std pop xchg dec add add jge mov jmp ljmp ret cmp and mov loopne xor test incl pop xchg mov pop adc jbe in jl cmp mov lods jg dec not shr dec inc mov lahf sbb or lret shrl push pop push mov and repnz and push add adc pop mov add and push push ljmp mov push inc xchg scas addl push inc cmpsl xor xchg clc push jg inc rcll stc stos bound jg mov and push mov sbb cli fs add out icebp pop push add mov arpl test or sbb add jl mov in add vcvtsi2sdl or fldcw jl enter sub pop pop mov mov pop pushf mov (bad) sub iret push stc or sbb (bad) adc sub cmp dec adc sbb xor icebp lret cli iret inc add sub xor fwait mov mov movsl jle adc mov cmpsl lcall ds and (bad) mov jg inc mov sbb pop and idivl inc cmp pop or push les fsubrp iret sub jl leave push into movsl xchg je jmp add mov jno cmp test adc and fcmovnbe mov sub jp addr16 subb sub rcll jecxz pop outsl lret sub or and adc repz (bad) stc mov mov fsubl mov lds jmp gs adc dec ret hlt push jo adc sub jno pusha scas xor inc mov imul pusha in (bad) xchg das push dec insb stc dec cmp ljmp jl shll aas ret div (bad) (bad) xchg leave into ds cmp add mov daa jge adc xor fldenv add xor stos dec push or iret dec gs pop or push stc pop jecxz int es out cli lret xor lret or mov pop push (bad) into jmp int3 (bad) jnp xchg dec bound xlat jg adc movsl jle cltd push popa hlt xor pop pop mov or mov xchg scas fs test es negb (bad) dec jbe cmp sbb xor sub lods in mov mov mov inc add (bad) mov cli ret jg xchg movsl icebp mov and fldcw xor add mov sarl mov xchg sub fwait xchg push xchg rorb ljmp mov sub and (bad) stos cmp add jmp lret and pop hlt cmp xchg add addr16 popf lods daa rclb cmp push faddl sub idivb out mov (bad) xor bound lret push xchg jne or xchg xor bound divb and sti lock mov in cmp push enter sub pop fwait push jl xchg mov jb call (bad) mov notl (bad) daa sub push lds daa out xchg add pop mov cmp sub xchg mov das mov (bad) loop push xor dec mov xor xor ss jno sahf add lds xchg add push ss dec icebp aad (bad) out mov out add dec mov adc pop sub xchg outsl mov xor (bad) gs or xor out jmp pop and ljmp xlat sti lret cmp mov xchg sbb clc dec dec dec mov sbb ds sahf (bad) xor scas cmp call jb test pop imulb jg in or inc outsl repz push test cli lret add repz (bad) bound sub pop push mov mov fimul pop (bad) add jmp sahf daa pop add xor push sbb aad test cltd and mov mov fstpt cs add dec aad ret outsl push nop (bad) cmp sar das das clc sarb daa jg push xchg pop and paddusb leave or icebp jne inc inc sub out (bad) xor sub jg daa mov pushf xchg push mov ret or js pop test dec sbb mov dec (bad) cwtl push ret sti dec push mov call cmp movsl xlat mov lahf iret cmp ret mov in pop xor sbbl xor xchg push sub mov jmp jmp pop adc xchg add adc outsb and mov push mov pop xor (bad) shr (bad) dec into inc aas icebp int3 nop daa pop repz cmp or roll cmp ret cs inc mov mov cs push pop int3 inc pop lahf out mov gs sub dec aam je (bad) xchg add movsb test stc xor shll (bad) cmpsl es das inc fstl incb mov setge in dec cmp loop jl jmp dec sbbl and andb jge scas inc pop and or or repz loopne data16 sbb jmp aam add rol or add pop repz and jmp stc sub into outsl xchg mov aad cmpsl popf sbb ss jge cmp inc and and cmpsb imul pop cmp mov sbb adc sub insl cwtl bnd cmc ret mov enter cmp pushf xchg sbb mov dec cmp ja outsl mov pushl jge jns icebp cli xchg jge mov xchg jnp push movl std popa imul insb es adc cmp adc loopne fdivrs fwait leave out push fldcw dec insb cs sub cld xor xor or pop jl sub add daa popf push xchg gs repz es into outsl leave jge orl lcall ret add fsubl pop pushf les (bad) sub and decl or push adc pop std iret cmp (bad) cwtl and mov cltd fnstcw fdiv enter sub cmp insl sahf xchg repnz sbb adc fsubrl bound or pop mov into scas mov rorb lret std dec sti imul xchg imul es pop jbe push jle das dec cld dec add mov mov push pop icebp mov pop (bad) mov fdiv xor mov add out mov fnstcw xchg in add loop rorb sbb mov push push imul push sub mov jmp call adc dec out call dec jbe cs add rcr or rorl dec jge out loop xchg mov push sbb and (bad) xchg imul lret jle loope scas push sbb push lret inc ret push xorb or or pushf add sub mov aaa ljmp cmpsb (bad) dec or mov dec xor xchg and xor inc lret or cmp lods rcll inc mov sahf mov push shll cmpsl negb cmp mov in add pop ds testb repnz pop (bad) pop ret hlt rcrl pop in push and in mov outsb not dec mov sub push fsubrs enter add fdivrs aas mov or (bad) jecxz add daa (bad) scas mov mov std rcll test out sbb lret sub mov jo nop dec mov mov cmp adc mov mov cmpsb xor or cmp in shrb into out xor ds add xchg and mov js popf push push or sub jns (bad) or lahf sti adc or out push sarl mov mov xchg jmp cmp mov neg shlb jb and pop jne xlat outsb repz add les fdivrs cmpsb ret and mov mov sub cmp outsb fsubs mov dec mov pop out xor or repnz mov mov lret pusha mov or inc inc fiadd daa add fisttpll mov pop push sub scas mov les cmp pop and mov sub sbb movsl fptan mov jmp mov pop or mov add push lahf pop movsb jmp clc cs cmp or (bad) jo int hlt call mov mov fs imul vpunpcklwd sbb test and xor leave outsl notl and push cmc xor and (bad) or in hlt sarb xchg pop or jnp mov out jae daa hlt push jp mov inc (bad) pop test inc jne scas popf inc inc movsl js dec shr test inc lock into mov popa add popa pusha mov mov fisttpll xchg gs pop pop dec out jmp sbb das or (bad) and pop ret pop and mov rcll scas popa jns jge sahf sub daa or add and (bad) imull xor and xchg cltd pusha add jecxz cs mov pop mov ljmp hlt xlat popf pop xor ficompl xor jmp in push aam add dec loopne mov xor mov sbb gs lcall popf and push fwait sarl repnz mov xchg insb sahf mov fdivp pop mov cmp ja mov (bad) xor rolb mov bnd xchg cmp mov jl divb dec push cld adc into out aaa fildl xor mov bound push into pop loope das jmp push and pop into and and imul push or and jne insl pop and test xlat ret and mov sarb mov dec xchg movsl ja decb xor stos dec or adc and cmpsl add fnstcw in rcl cli cmp sub mov or mov xor out and lahf pop and dec cmp movsl add add mov push shll sub out xchg ja (bad) mov ljmp out inc mov rolb mov (bad) mov mov or test fisubrl mov call xchg clc les lret jnp out mov stc push movsl test data16 je pop negl sub das push jmp jle lret decl cmp jmp js xchg sbb add pop test mov mov pop pushf push mov jns xchg xor pop or lock mov hlt mov push repnz int3 push ljmp sbb in or and add pusha xchg sub pop lods push mov push adc repnz mov cmp push xor jb dec clc insl sub jne dec (bad) xor fldt xchg not popa jmp imull lds lret loope mov icebp jns xchg ret test (bad) mov lcall fild jbe ret std mov cli clc xchg push push or fistp mov negl push loopne iret orb mov pop lock mov xchg mov mov jge (bad) xor sub das out icebp cmp and xor or fsubl imul sbb dec and or xchg rorl cli (bad) aad push fwait test loop lcall cld xchg jl (bad) (bad) pop insl add out mov fildll xor out cwtl les mov pop bound adc lret adc sbb mov inc testl mov shr test mov jmp jl xchg divl jb rcll adc pushf loopne mov mov or push in sub xor xchg insb xchg int3 pop stos mov sbb (bad) sub test add test add add nop adc xor and scas sub into out (bad) jmp call loop gs dec jno cmpsb shr sti jg xor xchg xchg (bad) pop pop ljmp pop jnp adc sahf dec pop jge or xor push imul xchg lret dec pop fcmovnbe pop sub icebp mov pop stc xchg mov into test fcomp lahf cmp std rorb sub sub xor pop mov and shll or jg jne pop mov sub movsb dec and outsb adc cmp (bad) cmp dec pop xor in lea or popf fcoms dec out lea in adc jae clc repnz add sti int3 adc daa mov aad cltd (bad) dec xchg jo dec fisub call xor xor or cmpsb adc adc (bad) jne in je fs push cmp mov adc sbb notb clc or or pop mov jae daa je in ljmp or inc xor jno add or mov xor mov jno ret and notl das fiadd xchg sub je xchg mov xor or (bad) jmp pop jns mov (bad) cmp push pusha leave jns movsl std lcall or mov rcll mulb loop lret push repnz xlat out xchg les or rolb ficomp fwait das sub adc or dec sub ljmp push jmp enter lret mov popa imull ljmp (bad) mov sbb mov xor or and and push fmuls daa ret xchg push lret (bad) or in sub ficom push and out sub add or fisubrl push inc push push leave ss xchg ror aaa xchg xor push mov sbb addr16 es or rcrl imul cwtl iret lret sub or or lret push add shll push (bad) dec repz xchg ss (bad) mov movsl daa or jge fldenv sbb lds (bad) (bad) mov fmuls inc pop push dec jae adc mov lahf ret jl pop (bad) push push mov jnp push (bad) mov cs ret xor jp xor std jle ja in mov les cmp out mov adc xor cli jno sub jle call mov out fnstsw out xchg push xor push das fdivr maxps mov js decb in xchg sbb aad cmp lds cmp ror aas call pop (bad) lret cmc push mov and mov dec in sub or push ljmp pusha or mov push push pop imul or sub popf int3 mov lock adc mov mov sarl out jecxz pop jbe leave push into pop fdivrs pop clc and mov jbe and mov mov test in cmp xor sub scas adc test cltd aad push and pop in cmpsl xacquire cli mov imul pop push hlt addr16 sbb sbb sahf mov xor mov mov movsb or div mov fisttp add sahf push xchg pop or mov jmp and cmp inc jns or xor mov mov jp xchg mov sti mov inc or mov xchg icebp push or ss add adc ljmp hlt push xchg xor add mov clc mov shr aad xlat and cmp into jns jbe adc mov jmp in lods and adc mov out das (bad) jno dec ficom add or imull shrl push jg jecxz and pop pop jle push pop pop mov xchg imul shrl out popf aam scas call push shrb int stos bound dec dec push es insb test jbe xor fist lcall jo xchg sub test daa or and stos jg mov xchg sub and sub mov push repnz jl out pop xchg repnz mov arpl (bad) (bad) loope das lods data16 mov dec ret jbe adc scas lret cmp xchg mov cmp fwait pop jecxz sbb push insb imul ret arpl inc sub xchg lock mov fwait std or cmp add sbb push out scas test sub or movsb (bad) mov xor leave fdivrs mov out icebp loope sub aas je cmpsl insb fcompl clc (bad) in cmpl add sub adc idivb dec enter pop (bad) mov pop test das jo cli jecxz ljmp cmp movsl daa pusha mov (bad) dec dec push pop cs sub xorb sbb scas sub sub add xchg (bad) scas cmp xor leave leave jmp fstpt and jge adc fistpl mov lret in xchg push adc ljmp mov cld mov loop dec lret sub add dec mov xchg movl or daa jmp test dec and mov cmpsl in xor add (bad) fsubs and jo dec adc mov jmp insb sbb add imul roll cwtl enter mov pop andb int3 jmp dec dec mov (bad) push daa pop lcall movsl std in (bad) mov xchg aad mov ret mov push jns mov sub je push xor (bad) cmp imul ficom out (bad) cmp sbb dec sub (bad) dec (bad) lea lock mov jne,pn adc stc lock fimul icebp rcl cs rol out repz xchg pop or fwait out aas sub outsb jo xlat fwait pop adc adc lret loop stos push test out into push sbb xchg xor add push jg das and (bad) mov (bad) out sub or mov mov xor xchg out imul and xchg (bad) stos adc sti xchg and sub fsubl testb pusha out addr16 and add sub movsb mov shrl aad or (bad) inc jno and xor das add or mov add push ss sub leave dec mov pop (bad) into or dec out pop popa mov jbe and inc jb cwtl mov pop stos jp mov out xor sahf dec jmp inc xor leave xlat es dec shll es pop xor (bad) push adc fisubrl or leave in clc std loope shrb int loopne sub fs scas jecxz and sub (bad) cmpsl xchg sub stc pop and mov cmp testl add dec pop sbb cld jmp mov loop fwait sarb jbe imul jl leave inc aad xchg movsl (bad) xchg imul pop (bad) mov xchg pushf lahf daa ret cmp cmc and add inc mov mov adc movsbl and (bad) adc mov outsb cmpsb jo lock jae jmp push sub sbb lods xchg repnz add into sub xchg jmp cld mov or in cmpsl fimul pop loop push pop dec jl loop and outsb push xlat lret movl mov and adc outsl push add add push aam cmp adc clc jae out dec rorb cmp pop xor adc aad push mov fstps xor or xor mov add test inc mov mov or cmp mov push insb dec cmp lock cli popf add push jmp lret or mov push aam loopne insl xchg ja fistpll loopne sub (bad) mov xor popf cmc xchg push popf icebp mov push ret test xor stc fimul inc mov adc cli ret pop fbld adc fdivrp cwtl pop or flds and push mov push fisubr pop and subb and add call push add lods dec movsl mov ss sub subl aas mov pop dec pop mov dec mov mov xor jbe js rcrb mov dec and xchg and scas jge cmp and aaa xchg fcmovnb (bad) mov mul fidivl imul xor jno dec inc popf idiv fbld xchg mov lods xor add div inc add xor loope fdivrs lret mov jle (bad) (bad) sub or inc pusha xor or ja (bad) mov mov aam lret cs cli mov stos add cs sub aad sub out es pop test cld cmp stc popa mov or popf push dec dec (bad) (bad) imulb pop or out pop inc add sbb mov jle jb outsb jl mov stos sub repnz aas or daa insl push push jnp mov mov movsb jle std mov shll repnz mov and movsl or sbb out pop inc and xchg gs insb dec xchg add enter shrb nop (bad) mov push push fs mov add clc sub std scas sub or cwtl arpl sbb mov nop jp xor mov pop push pop fstpl sub mov add daa or sbb ret inc jne imulw jmp int3 cwtl lods inc mov push pop out imul jns xor movsl aam gs test loope js shl jmp pop pushf mov sub jp addr16 je sub pop aas ljmp (bad) sub or adc pop xlat push fldcw fimul pop xlat xor icebp shrl scas sub xor mov jecxz push (bad) jg dec xchg jecxz cli mov cmpsl pop and daa lds and inc lods dec lock push aam cmp jecxz in imul mov mov sub mov push cmpl fisub sub xchg ljmp ss xchg pop xchg call mov adc scas dec jns fstl lret sub cltd gs inc push lret mov xchg cmp push lods mov fldl adc dec xor inc inc arpl aam and iret xchg mov scas fs adc outsl mov sub ss sub sub xchg add sub or sti movb stos or xor in sub daa (bad) jp ljmp mov popa or into xor dec (bad) lret pop mov sbb addb sub gs ljmp xchg leave (bad) mov (bad) cmpsb pop test xor add mov call bound mov leavew (bad) push jbe out jmp fdivrl push or sub pop leave pop xor jb mov mov std pop cmp ror in jmp or gs pop mov dec dec daa dec stos leave cld adc push lret lods jl iret clc leave mov cli (bad) add (bad) mov jne stos gs push xlat and mov mov xlat lahf call icebp jp or aad rclb paddq cltd out push lods cmp mov repnz sub ds and aaa or cli xor popf and push hlt jae fiaddl inc inc mov insb hlt mov pop sub mov imul xor xorl popf pushf movsl fucom lea bound and repnz cmc pop pop inc xor xor mov fnsave adc pop iret xor sti cmp out sub add shrd (bad) or out daa mov mov lret xchg lock xchg push jmp aad aad outsl ja sub mov dec add xlat mov lret jmp fbstp lods jmp push (bad) xor hlt jp negl enter (bad) mov add push je mov (bad) sub out pop sub ss jecxz fucomp imul cmp test movsb ds out push add jg pop xor rclb ficoml sbb sub lea (bad) scas mov (bad) repz jmp add (bad) xor insb jbe sub mov clc repz push push pop xor and mov es pop mov icebp adc add shrl inc sahf fisttpll and inc out call mov adc mov mov jno je (bad) mov xor data16 pusha rol jnp fistp xor or stos aas push lahf imul mov sub in sbb mov jmp push cs adc mov and sub pop mov ja dec scas ret lds icebp xchg mov or push mov (bad) push or bound mov add push fldt subb push fsubrl push mov movaps std pop pop mov sbb ret sbb adc clc js sarb andl push sub xor pop pop das push out mulb and sbb cli xor mov aaa add push sub mov test ljmp movb xor shrb mov pop add push pop jmp fsubrs fidivrl out ret pop sbb push push lcall notl int3 xchg xchg adc push or aad adc (bad) pop loopne rcl mov or ljmp rcrl fbstp add sub push add jle mov or repnz fstpl xor jo popf or xor nop adc sti sub pop or push leave (bad) and jle and ljmp cs mov pop pop add push pop cmp jbe in add stos mov mov popf push adc ret cmp lahf jle scas cmp push std mov jl jmp dec (bad) adc fld mov aaa stos lds push (bad) mov mov sbb add divb and daa jl aas adc jmp sub or mov push xchg push jmp xor ljmp (bad) pop mov cs lret rorb dec out or sub popa push mov sbb and jl adc inc xchg (bad) stos sbb xor stc loope push cmpsb movsb std add ljmp push xor or sbb (bad) dec sub pop scas sub jo pop divl inc sub outsb call mov add xor rcrb ror dec fstps xor mov dec ret stos lods cmp repnz mov repnz imul ja cmp mov xor cmp push or fildll repnz mov mov push mov leave xchg cli (bad) sub jp mov jno mov mov mov push jns adc rcr mov ja shll pop leave sub jmp mov jge repnz (bad) sbb pushl insb lcall (bad) jp jae adc cltd insl push jg lds aam cs jne mov and xchg (bad) hlt daa cwtl jmp (bad) xchg into add cmp jp test jbe or jae add or xor mov out or and in repnz jg dec pushf jecxz sub fistp dec pop push inc int3 js xchg push push dec cmp dec mov mov pop mov fbstp add jae test into mov idivb dec or iret push daa sub lods jne and jb sbb jbe push inc pop nop ret std mov cmp (bad) dec loop nop pop jnp push (bad) out jmp repz mov cmp mov fisub lcall jmp mov mov rolb loope push leave into push sarl mov mov scas pop fdivrl and ret mov pop and sub mov pushl xchg jg outsl sbb jg sub mov leave push icebp jno (bad) mov lret loope pop or mov test popf ljmp mov sub or cmc rorl sarl mov test (bad) outsl xor mov sub mov jle sub mov out test xorps cs jo lahf push mov jne cmp or push push icebp add dec out flds cmpsl xchg pop int cmp mov popf aad push mov imul or pop inc ret mov inc xchg ret mov add fstps xchg gs mov mov fildl xchg add divb (bad) push inc sarl xlat and pop xchg mov scas pusha pop and insl sub lea (bad) dec inc ljmp ret xchg lret nop pop mov mov xchg mov (bad) fimul stc inc and cmp mov subl movsb xchg fcompl pop ret sub inc das push lahf imul push jp repnz sub and xor or ds out push mov or sub test pop or lret pop (bad) xor or jg arpl out xor sar icebp or add mov in pop lds xor add test ret and xor xchg jmp inc aaa mov mov (bad) fimull xchg les imul mov pop xor dec cmp lret pop xchg out pop mov inc or aam fdivrl clc fildll sub or cmp add add sub out adc mov cmp out stos xchg mov pop mov fisubr jnp adc rclb sbb pop into mov push xchg scas lds into add adc (bad) daa push jg rorb imul adc xchg rorb dec jmp fstpl movsl out (bad) sahf pop inc dec dec imul xchg rcrl (bad) out gs add jbe jno (bad) mov int3 cmpsl repz xchg mov loope jmp lret xor (bad) enter mov jecxz shrl or lcall add gs pop movsb push jmp mov pop or fistp pop jge (bad) jg out mov mov addr16 inc xchg stc negb sub icebp sub lods and mov xchg add adc ljmp sbb mov xlat pushf mov cmp shrb mov loop (bad) xor sub lods mov leave pop mov rcrl outsb leave xchg add sbb dec in mov popf push dec pop call in mov add cmp bound test push xchg (bad) push sub add jle lret or push mov inc push adc (bad) aas jo into pop and mov xorb test adc fmuls sub (bad) daa rcl cmp push or xor xchg push rorb xchg insl add push sub sub fldenv lar inc das adc mov mov mov add negb std mov sti (bad) jmpw sbb pop pop cmc stc das dec clc movsb xchg or or leave jg cld or mov aaa leave aad xchg and fild mov jo cld push pop add pop call cwtl dec mov add mov ret and adc mov ljmp jns inc mov popa and ret pop mov loop (bad) sarb adc sub adc adc rcrb adc das mov jne xchg push jns,pn inc mov mov incl pop stos xor test cli add mov push movsb scas (bad) inc dec scas jne xchg sbb (bad) stc add xor movsl xchg mov in xchg add mov push andl and mov xchg outsb fcoms fisubr dec shlb stos mov cmp xchg stc shlb and cs pop lods mov add and pushf pop push into cmp jmp jns dec ja fsubs dec pop or out add pop xchg fisub push das cmp out stc jecxz inc jbe pop ljmp mov gs scas lds add mov popl mov mov sub dec mov out push adc movsb call dec frstor into fwait div div int or xchg sbb (bad) mov sub ja (bad) ljmp aam jmp mov or aam xchg xchg divb sub mov mov xchg xor ja mov mov outsl call fmul (bad) sub daa and int3 nop xor and dec mov pop dec sub iret and mov rdtsc repz mov cmpsl dec les je ljmp negb repz mov jle cmp mov mov mov xchg cmpsl decl addl or jmp xlat lret xchg adc pop dec mov leave dec add push mov pop cmp mov mov mov shrl jmp dec cld test pop and fistpl adc jae lods outsb xchg ljmp mov dec push in mov adc ret mov and sbb into scas fsubs pushf stos push fsubl push add sbb xor std lret sub mov lods into pop jle mov cld repnz sub fpatan mov repz mov in aaa or push out sub inc in mov clc mov bound push xlat icebp das inc ljmp insb add pop mov pop mov xlat sti bound bound dec mov add ret mov inc out cmpsl hlt je xchg dec adcl dec and and lea mov pop adc jle fidivr test pushl cld (bad) push popf rcrl mov push sub fnsave or sub lock mov repnz push cmp aad sarl adc or pop out adc idivl and mov not clc jmp xor addr16 push iret subb imul out aas rcl js pop jne ljmp mov dec and (bad) jp subl jbe and mov outsb fnstenv dec scas adc (bad) mov (bad) es push push (bad) rorl test add jns adc ficoml popf push dec add mov cmpsb daa mov adc test fsts imul pushf icebp jmp push cmp fsubp add pop sbb jno repnz xchg (bad) pop outsl jmp or ret test icebp sub je ret in or lock sbb enter (bad) pop ja sbb jbe in or shll xor (bad) mul mov mov xor leave pop hlt lods leave out xchg dec xchg push ret dec cmp test repnz and leave mov ficom iret push int3 jne adc push add into not mov sub mov mov addb dec shlb icebp inc jo dec xchg (bad) sub xor mov push xchg push negb add pushf or pop adc jb dec sbb add cmpsl mov dec mov add mov dec pop fisubr mov or xchg xchg push dec mov cmp je xchg fisub pop xchg adc or je (bad) xchg fnstenv data16 adc cmpsb movsl and pop (bad) cmp repz add ds xor jle aad add fwait and scas popa aam (bad) aaa ljmp (bad) ja and or (bad) out dec scas lret fs and fldl dec es or repz js in (bad) stos lods lods movsb stos or sub scas aad cmp cmpsb stc or test mov scas aaa cmp mov shlb adc add cmc and dec add xchg call mov sub (bad) lret je lods (bad) fstps xchg pop lret sub mov loop ja cmp xlat in popf xchg std push cmp (bad) stos mov shrb push leave lret mov sub movsl mov jg and popf inc xor jl scas mov mov les and add add xor xchg pop push pop jp idiv sub fist stos negl pop xor bound leave sbb out and ret lods mov into or mov adc mov (bad) jnp das (bad) xchg pop test into mov xchg mov sbb gs xor lods movb ret in ret andl andb test xchg xchg pop in insb (bad) leave sub outsb jmp and sbb es pop jg mov cmp mov mov int3 scas mov in mov pandn mov lds nop outsl rclb imull outsb fcoms repnz setae (bad) popf fsubl inc add xchg push jg mov dec sub cwtl aam popf jg cmp shrb pop and or jmp push mov pop lods dec arpl xor push pop push mov mov push lods cmp movsl movb outsb sahf fldcw jg sub mov dec out dec out fsts mov adc loope ret mov lea sbb rorb jno test in inc lds out popa (bad) xor cmp pushf jg xchg mov (bad) dec push sahf arpl icebp sbb push pop mov xor or imul push (bad) push mov or je xchg insb mov imulb cs sub fisttpll loope (bad) sub stc sub hlt xchg bound (bad) jge hlt out mov mov lret or jl xchg sub xchg lods inc shr and rorl mov or int xor jle mov sub in into push sub rep lods in sub lods (bad) in and imul sub out lods loopne test mov jbe daa xchg repz inc (bad) cmp ljmp or add icebp xchg outsl mov pop add mov pop gs sub xor pop cmpsb dec inc cmc dec or popf movsl or (bad) jmp mov pop inc sub ja in iret jp mov mov mov shlb ja mov int3 xor mov in scas cltd test push xor movaps bound bound dec aad mov add outsb mov or and pop in sbb and mov repz in lods add mov jecxz je adc gs push jnp sub pusha and addr16 mov sub (bad) leave aaa int3 add out and ja xor mov add lods int fsubrs movsl xlat cwtl iret (bad) xor es test das add stos sub in jb pop rol and xor mov mov mulb repz pop out xor outsb mov sti lcall bound in aad ret sar and push fisubr fisubrl ljmp repz (bad) lret pop xchg inc add or push add xlat cmpsl ljmp and and into jl leave ficom (bad) and clc iret in lahf push mov mov scas mov pop cli popa add and mov pop xor sub pop fucomip sub neg sbb inc fbld pop mov in ss mov sub and xlat insb outsb inc lcall xchg loope and cmp (bad) sub loopne lret pop aad jmp push jle push and sbb outsb ret or sbb xor sub cmp xor mov cmp out pop gs daa test ret dec dec in rorb scas mov in mov dec xor test sub inc inc cmpsb push bound rclb icebp sub mov in xchg adc daa and js mov bound leave mov mov mov (bad) xchg and test fst mov imull dec mov lret sub mov in cmp in ret adc xchg add xor add add xor push adc jecxz push repz and dec lock xor or lock dec jbe inc shlb xor (bad) cmp ljmp pop mov lret and mov repz and xorb adc packssdw mov mov loop xchg cwtl xor dec pop out mov pop or add mulb mov pop repz aas and rclb mov roll sarb mov cmpsb sbb pop pop movsb jg xchg push xor sbb es cmp fnstcw call cwtl add cwtl or icebp xor in pusha mov jge lret call clc out jno (bad) push bound lret (bad) pop mov (bad) sub (bad) test les outsb xchg jo addb cltd das fistpll adc xor out mov dec dec les and cli mov cli das xor packssdw fcoml or adc push dec orb call mov xor jmp mov mov pop and jmp stos lret mov mov dec inc data16 or sbb mov std sub call sub sub out ja jp test pop or add out sub jmp cmp push mov push dec loopne add add jmp pop fwait in out repz popf and lock scas out addr16 xor add pop das mov xchg adc mov add int ds sub call mov fmul out pop or enter mov sub jne xor fs stos cs mov pop mov cwtl dec xor mov mov sub push xchg dec adc mov lret ret icebp xchg mov mov popa mov ds sbb int jle lret mov jge lret inc pop test es push in dec inc (bad) mov loop push loope scas sub bound pop fs fsubr lret adc jle adc jmp scas popf ret and adc mov push and loopne inc pop mov mov enter adc mov push fnstenv jb,pt sbb fildll in fistl (bad) iret ficomp cmp fwait push (bad) or lods je data16 mov xchg das stos sub xchg mov ljmp sub xor add jl and insb mov sub or sub sub movsl mov imul out mov jmp (bad) scas mov popf ficomp lods test dec out jno sahf sub cwtl inc (bad) rol clc inc shrb push (bad) xchg and movsl sbb jne sub aas push xchg push xor mov pop (bad) dec ss pop mov ds repnz sbb mov add xor sahf or adc push cmp rorl pop push lahf stc dec lahf add pop outsb in into scas sub dec icebp and or into and inc mov and xor stos stc mov (bad) mov or cmp imul add lret mov or (bad) dec lock and push mov inc les sub mul sbb inc sti fcoms pop or rorl sub cmpsl hlt into (bad) xor (bad) les mov or and and cmp test xor mov leave into pop dec imul jns sub gs lret adc adc and ret sub subb test mov sbb add lahf dec sbb sub pop out daa sub push in fstl add jns cmpsl pop adcl mov sub cmpsl mov enter adc pop jl movsl jne mov ljmp add xchg jnp mov cwtl nop outsl mov fimul scas mov push jle ja jge adc xor push je push cmp add clc (bad) or pusha push nop add mov mov pop mov dec popf (bad) cmp pop mov and mov mov inc ljmp mov (bad) cmp (bad) je fisubrl sti mov pop mov or out das iret rcrl pusha add xor popf push xchg jne cld mov push xchg cmp in push sub jb mov popa xchg xor scas jecxz xchg xor dec (bad) movsb lds mov lods pop les cli fnstcw out mov int3 ss mov mov stc (bad) inc mov mov fsubr lods mov (bad) inc mov mov mov and jge int3 pop jo loope out out cs cmp aam jae fmul scas mov inc movl jae lock xchg xor sub into in loop test imulb sbb dec fnstenv and test xlat lds pop mov adc mov sub cmpsb jecxz or xlat mov fstps stos pop ffree (bad) mov ja insb add mov or pop ret xchg xor jle jb arpl lret pop or push fucomp mov shll xor fldlg2 imul (bad) iret stos jle test fbstp dec aaa cltd mov (bad) repz xchg sbb inc or xchg (bad) in inc pop shrl cltd fst pop cmc push mov push mov xchg (bad) xchg call xchg mov loope movl (bad) sub (bad) je notb adc cld fmulp icebp out xchg adc cwtl (bad) push or sub inc (bad) xor pop cld out popa fisubr bound cmp and and jmp js jbe test pop jmp and stc idivl out inc mov fcoms and in xchg test ret into int3 stos xchg fildll call test sar add insb rcl outsb addr16 loop add pop adc dec jmp dec jg adc imul insl loop push repz movsl roll repz gs mov sub jae mov add pusha sub daa pop xor gs out sub fildll push dec aam xor sbb mov in cltd in mov jnp xchg shrl jns xor pusha and mov dec lods add xor xor dec mov pop dec dec call adc sahf inc fdiv dec orb in pop add ljmp and xchg dec stos cmp popf sub scas or scas jno xchg out in iret movsb in pop (bad) adc or stos adc push push sbb or lret call xchg notl aad sub xchg in sahf dec out sub dec icebp jge mov jle inc iret and and call sub mov insl ret add test mov je push rcl adc adc mov jmp cltd movsb ds sub enter sbb and mov lahf cltd push subl sub and into ss xor (bad) data16 and pop out adc mov mov xor mov ja call or mov lret es or in aaa xchg inc divb test outsb scas popf loop jbe into (bad) je mov jg mov das cmp sub jecxz sub mov mov mov xchg (bad) mov shrl pop push mov inc adc (bad) or pop stc cmp (bad) jo sub sub xlat mov or jne xchg cmp stc inc xchg fbld mov imul sub mov and mov and incb and xor repz negb sub movsl hlt pop pop daa lcall push add (bad) inc popf jbe pop pop pop jg pop in mov das sub daa or jae daa bound xchg inc add dec mov stos push test dec lods xchg (bad) cltd jg mov dec mov and sub adc xor cmp jp push fdivs mov repnz adcl je les andl add mov bound lock ficompl push fldcw add hlt mov loop mov (bad) cwtl sbb push dec xor inc cs ja mov lret lds fsubl ljmp sub sub sbb xchg dec fldenv rcr cmp sub fs push dec mov imul cs or mov fsubp push xchg loop pop popa dec xor and fidivr mov ficoml cs mov push xor and and lock pop in xor mov or or cmp pop popf movsb jns mov sbb lret push push test sub sub mov mov cmp mov lret sub js dec sbb dec add or add mov jle cmpsb pop ret out jne loope jb test jle in lods lret pop cld call (bad) dec xor mov test mov repz (bad) stc xchg js dec repz mov cwtl mov stc outsb int3 pop add ljmp mov fld mov test inc pop das inc rcrb lret push loopne add ror and ffree sub test pop mov xor jle xchg popa das lods dec and push push fsts movsb adc sub dec scas pop repz dec jp adc mov xor mov aas iret cmpb dec pop (bad) (bad) jae and lret fistp sar mov lret test ret fistpll xlat (bad) cld cmp aam adc loop les mov cmc scas arpl mov movsb sbb adc mov (bad) mov pushf das mov add mov popf jp jp (bad) fcompl xor sub movl dec adc mov xor push xlat cmp dec (bad) cli arpl or mov lahf mov repz pop mov jmp daa clc sub into ja daa add repnz push mov fnsave fisubrl repnz xchg mov insb test sub mov mov stc repz adc scas pop fidivr repnz notb das ret leave pop mov repz fistpl into mov (bad) lret adc clc xor jmp loopne fxtract scas lods push sbb mov rorb add mov lahf dec mov sub jne cmp test mov repnz out loop test rorb lret fsubl pushf or inc dec out push dec ret sub daa aas ret jb jns dec lock add pop testl (bad) pushf and es imulb jp jo in jge (bad) mov inc daa xchg dec je in or sbb xchg lods sub (bad) add mov pop add ljmp pop pop mov xchg and pop ljmp sub push dec fcompl jecxz leave mov sub cld sub lret lock and dec int3 cmpsl or dec fcoms mov sbb mov sbb add shlb add pop push and psrlq test sub and inc lds jmp fs hlt pop movsl mov push mov sub fnsave test sahf out fdivs mov sub sbb lods int out pop lea (bad) and out mov aam pop rcrl lret jnp lahf pop adc xchg insb dec dec repnz xor scas cltd in loope jl mov push imul imul or jnp movsb add ss xor jp add mov stos leave aad push jbe jb pop or out mov vandps mov out popf (bad) sbb inc pop cwtl xlat mov leave or pop jp ljmp daa cmp (bad) data16 push cmpsl out mov add fidiv scas repnz divb and or icebp xchg out (bad) cmp mov adc lret xor and push sub add dec into (bad) loopne decl push lds dec xorb repz inc adc xor repnz push jns dec nop mov sbb mov jmp roll dec dec jnp cmpsl cs imulb xchg js sub mov mov notl out jl add and inc shrl xor je les in pusha cmpsb cmp inc pushf loope cmpsl stos mov (bad) sub movsb cwtl pop sub add (bad) xor xchg popa iret add dec imul jne jnp and loopne roll clc mov loopne inc test and dec and scas or mov pop lods sarb jno jmp cmpsl or mov xchg or sbb or mov rcrb paddd jmp xor jecxz xor call mov cmp cld leave stc into dec jl dec or test and gs repz sbb adcb jne out or (bad) fadd imul sub dec mov outsb call mov imul lds aaa ficom (bad) add imul mov pop iret pop loop out inc add cmpsl sbb jl (bad) std ret cmp hlt adc inc jns hlt dec cmpsl jnp adc mov shll push jb and mov cmpsb rorb sub xor mov (bad) fnstenv movsl inc test jmp hlt test movsb ljmp nop push lahf adc sahf jmp add xor pop pushl cltd lods repz sub je push xchg mov xor jno push adc dec sahf es inc call ffree das xor or add mov shlb insb xchg icebp lahf out adc mov sub cmc out das lret out je pop ret xchg scas push xchg into and and out sub (bad) (bad) int3 es (bad) dec andb xor (bad) divl out test dec sub sub out data16 test aam xor lea and js imull movsb lods push cmp push pushf cli push pop clc je ljmp pop adc adc xchg adc mov fldt sti test out fucomp mov ficoml mov adc shrb push jno dec or cmp outsb and mov popf jmp inc xchg pop mov sahf cmc fdivl xor (bad) adc sub mov jmp dec rorb pop and das or icebp or ds mov scas push (bad) adc out sub shll negb (bad) fdiv lret sub out dec fcmovnu loopne add or mov mov xchg enter call xchg add cmpsl insl and mov inc mov xor sub pop mov cmp int3 push and shrl adc or (bad) int jp sbb outsb xchg ljmp xchg mov movsb scas xor (bad) mov jne cmpsl std rcll sub xchg lret add cmp mov lahf dec mov out cmp loope sub inc stos add mov and cmp aad pushf add xchg aam call testl sbb ss sub fsts andb cwtl sbb lret out fcomps ljmp sbb dec sbb dec jg clc fst cmpsb call mov mov and pop push imul xchg aad shrl push pushf ljmp dec imul jge cli test (bad) mov mov lret jge in into dec pushf mov xor mov push push loope into sub sub or std pop popa fmull out cltd jnp loop rclb jo out push inc mov gs ret dec jno xor sub adc pushf or and cmp push xor mov repnz xchg lcall repz xchg popf fstpt mov (bad) gs (bad) fisubr aad popf add sub pushf cs cmp jo dec pop int3 jge popf notl mov arpl lahf insb mov sti sub xor add mov mov inc shrl mov push ljmp (bad) and ret xchg push or roll movsl mov adc sti stc cmp xor pushf sbb cmp shrl test scas lret mov mov leave sbbb xchg cmp jae sub fimul mov add and push pop sahf mov leave mov mov xor popf cltd push imul and adc test icebp mov gs lret sahf xlat call jp ret inc sub repz inc dec pop lret xor mov cld cmpb pop les push stos lret jecxz lcall jb push data16 sbb adc lret pop repz and roll adc sub push js dec ret scas sub inc shr jb divl mov xchg xchg dec mov adc adc pushf (bad) call and clc loopne mov xchg xchg add call ffree jp mov add repnz xorb and mulb mov fs out test adc and dec nop push (bad) pop push push jmp pop out dec shll mov data16 pushf shlb mov rcl dec pop pop mov mov inc fst out (bad) sub jnp sub in enter ja mov stos test dec test loopne and mov add ret inc lds add mov test clc mov mov adc (bad) out mov (bad) icebp movsl dec cmp or icebp pop lret sbb scas sub adc adc shrl sub xchg in sidtl xchg scas lret dec iret out mov dec adc push xchg xor jb push fisubr or push or out div cmp cmp sub sub cmp cmp xor dec (bad) out popa (bad) xor aas flds out dec aas or mov test xor (bad) and aam shll xor and pop loope fisub pop repz es push lret outsb je int aas or iret cmp int3 rorb dec bound sub xor adc orb mov popa cmp and pusha out (bad) mov stos addb or jb (bad) std stc lea xchg dec dec adcb xlat add and or mov not xor sub xlat negb and mov les insb mov inc push add scas bound push shr pop outsl sub fstpl inc mov repnz sub mov sbb movsb out pop cld out or push movsl jne popf or xor lods xchg movsl pop mov daa icebp add pop jnp or addr16 in cli mov sahf xchg or xlat daa iret jg jb mov sbb rcrl ret pop inc rcl cmpsb aad aas sbb mov out gs stos mov mov pop push inc inc ljmp and cld push dec popf lea es dec popf jne lahf or rorl adc scas lret ljmp xchg imul fild outsl mov sbb das popa sbb adc push pop pushf lret pop leave lret mov leave loop dec inc out fistl dec in dec loope add scas sub xor mov jmp cwtl movsl ljmp aam iret imul pop test das scas je mov loop mov add pop or mov sbb icebp or mul jno xchg add out call xor sub lock xchg gs xor decl jb inc sub pop (bad) mov xor jmp push adc xchg ret push push cld int3 add sar pushf outsl jge negl and les xor movsl ds shr fdiv repnz dec imul add sub imul shr icebp jbe inc decb or sar daa push mov daa adc (bad) and mov je pop and aaa add sub es xchg add enter pop loope in push add jmp cmp cltd jl and add mov cltd pop sti pusha cmp repz xchg fild jmp test jle push cltd rcrb shlb stc xchg jge dec or addl int3 cwtl ficomp rol mov int3 and shrl fdivrs push (bad) fdivrs lret xor mov frstor xor or movzbw test enter fbstp std mov jmp pop stc mov and mov xor ror jmp fmull push lahf jp shrl scas mov sarb dec or sub dec ja add stos xchg (bad) pop xorl mov in cmpsl add aad inc neg xchg outsl pusha cmc mov xchg xor push mov add inc pop jo shrl add mov xchg pop mov adc pop pop or mov (bad) push movsl cmc adc sub sub jae cmpsl pop les xchg pop inc or repz daa inc sbb cltd outsb popa imul cmp sub inc add out sub jge jge mov sub aas sbb pop mov lods inc sub ss mov add sti pop sbb dec fcomi rcrl jae xchg adc xor and adc cmc jnp dec test imul push adc outsl loopne test add adc push aas and lcall adc xadd add jmp sbb push sbb out insb fcompl sub std and or rcr push mov jae adc insl ds jle xor pop and add sbbb roll subb pop mov imul arpl push sahf ficompl pop stc pop das add jmp add hlt fcmovne mov in add push pop mov aaa mov or test sub or lock xor (bad) sub outsl dec push mov insl not add in mov mov pop out imul xchg sbb xor cwtl ret or jmp insb xor add push or pop mov cmp push xchg lcall adc and jmp cmp sub fnstenv aam and pushf dec ret lds clc das popf aad test ret pop mov push pop mov mov cmpsb (bad) mov cmc (bad) icebp mov mov and fnstenv add jns imul fxch dec ffree xor js popf push sbb sub xchg clc mov jbe pop bound lahf inc cmp jbe ret adc or test adc sub leave sbb sub cltd outsb imulb out aaa cmp jl push dec jle test fldlg2 (bad) (bad) jmp div mov sub push adc je dec dec cltd pop sub test lret adc add (bad) jne mov vmmcall mov dec mov push xor sub ret lods jns dec sarl mov xlat xor stos fisttpll xorb jbe outsl xchg mov cwtl push push daa idiv jg pop add jmp test mov repnz lret pop mov andl dec pop jp fnstenv jnp out scas lret xor repz out push int cmp or pop or rcl xchg repnz lret scas lret add and (bad) mov sbb fwait jno std add lock cmpsb dec mov rcl mov data16 cmpsl aad sbb mov jge xlat push clc jno (bad) daa jne jbe push add xchg sbb lods sbbl mov hlt lret icebp and and inc sar mov fnstcw cmp ret and ljmp (bad) xchg xor cmp (bad) (bad) or fcmovu push push mov xchg jns adc cld add mov or int cmc push push xchg (bad) jecxz clc push dec (bad) cli popf ret xor and sarl xor (bad) sub in cmp push repnz (bad) out (bad) push orl push jns or sti fnop jb fisttpl cmp dec call cmp mov out xor sub ds and mov out arpl mov sub add outsl or mov les (bad) das cmpsb xor push fstps mov sub jmp jb cld aas lret lret mov xor lret pop inc inc cmpsl jge hlt (bad) nop pop (bad) mov lods cld sarl jnp daa sub sbb rorb je call das pop add mov jg inc dec add push and ss (bad) repz add outsb pop mov add (bad) out mov mov pop inc or cld into mov test mov pop clc and cmp xchg cld mov lods jns dec cld jge pushf test lods xor pushf cmpl or ljmp idivl xchg or sub mov cmp mov dec mov pop pop dec test mov and xor adc movsl pushl scas adc xor popf decb fcom and xchg rorb xchg adc stos (bad) ja mov fsubrl cs xor cmpsl daa mull gs fidivl sub std xor jo mov mov (bad) lods les inc or sub pushf jge sub sbb and mov ret jo in and dec add call jg sbb inc push push outsb mov mov and cmp bnd out out leave add gs and leave xchg adc rcrl lret fisubr push (bad) out in xchg jbe push test enter pop push iret sbb and push pop sbb repz out pop test out push (bad) lock out stc mov mov adc out cmp push mov mov rcrl in cmp lods test jecxz test pop test movsl icebp movsb or dec push mov push push mov sub fwait sbb in dec in xchg mov mov call lahf xor or xor repnz push out or push mov loop fist or divl xchg and push adcl out in inc cmpsb sub scas push sti add or fisttp movsb stos mov pushf and clc pushf cli leave pop iret or xchg stos les pop inc and inc ds (bad) and mov popa jnp dec icebp les sub call push test lret pop (bad) mov daa popa dec lret out xlat xchg jns mov jae adc cld pop inc ret xor lcallw lahf push out mov adc and mov mov fucom aas es scas push push sti das std jno adc in movsb mov push push test lcall jmp shrl (bad) push pop lods fcmovbe mov or sti mov push and cmpsl adc push mov jg or (bad) addr16 ja scas daa test dec out dec mov xchg jmp arpl add out out add inc mov mov lea pop loope aas mov out daa adc sub cld iret mov negb jmp fsubrs test lcall out cmp pop les or add mov ljmp fs imul dec cmp pop div cmc pop mov lret pop xor mov or add mov mov jnp lret sub push std stos cmc pop push ficomp sub ja sarb (bad) rolb add iret inc lret (bad) pop ljmp mov in push in mov movsl cltd cmp cmp cmpsl stos test iret cli popf sarl adc popa rorb xor lock loop cmpb addr16 xor and cmc cmp pop mov cltd fimull mov xor jge push adc icebp movsl push stos mov ret xor pop out pop mov fsubp push jle pop inc mov out jne fimul vpsubd or jbe loope daa cmp mov inc xchg ljmp mov jle (bad) push and or lcall das out sbb cltd add (bad) jb push cmp pop xchg in pop aas in adc add xor add das lea aam add push xor or xor and test (bad) icebp mov (bad) aad mov aas lahf adc and add adc pushl (bad) lock popaw or push mov jne out lods and mov cmp push stos xor lds cltd lahf sbb sbb pop daa inc mov mov loope cmpsl mov sbb stc call icebp sub mov outsl xchg push push sub add cs push ret mov out xor and xor ror stos lret mov inc sbb aas mov xor call push inc andl push pop or push lds lods les leave aad sub ss and xor add (bad) or int sub mov dec jno and pop lret popa xor imull test fcmove ja es sahf inc push jge inc dec or stos mov pop lock leave fildll out sub shlb and add vmovlpd push push out cli mov inc mov push in inc mov mov mov mov rcll sarl das xchg pop jecxz adc xchg pushf xchg lds scas jle lret push stos outsl jo popf rorl xorb (bad) fdivr lret push add fsubrs cmp jp add and sub mov sub sub repnz xor pop xor add dec or outsb sub shr mov in jo mov adc mov movl or mov xlat lods xor push and in outsl jne push sahf cmp clc in mov push sub mov inc and mov push popf sarb cmpsb (bad) sub sub outsb mov mov jns je dec lret jg dec add xchg inc lahf aaa xor lret cmpsl inc or data16 mov cmc inc push xor out and aas std pop outsl sub jno daa jns jge lods pop xchg jno cltd cmp js rol test cmc or mov cmc mov inc imul cli or scas xchg movsb mov cmpsb js sbb xchg sub shr movsl scas (bad) int bound loope sub repnz xlat rolb cli cmp mov cltd jae mov pop int3 ret fnstsw jae xchg ja aas jae and sub icebp jnp movsl add jmp push xchg stos repnz mov xchg mov (bad) lds iret and aad push mov rsqrtps xchg in (bad) lock pop sub push xchg mov push push loop pop push xor xchg repnz xlat in fst mov xchg cmp ljmp add mov mov mov xchg popf int3 jmp dec daa out mov repz adc add push or cli (bad) test mov je das lods hlt mov adc pop push mov fs icebp jo ja faddp or out push dec lds push rolb jns jns pusha add outsl or mov lret sar jno popf xchg emms xor outsl mov mov pop test and sbb sbb mov cmpsl sbb (bad) pop push (bad) pop and sub clc das stos je sti repz pop stos jo sub or sub mov movl fsincos or pop inc scas xchg xlat cltd pop sub xor pop jmp rcrb jnp int3 std out lahf lret push cmc mull loope sub lcall dec or loope cmp decl mov ret gs movsl pop adc add aas add dec push add mov sbb js and out sub arpl cmp push repnz jp iret out cld push (bad) sub mov xchg xchg shr dec lret stos mov shll fstpt xor push mov sub cwtl cmp push out loop xchg cmpsl rcrb jge sti sub test test clc mov daa cld mov ljmp add icebp in jnp inc and add sub and pop pop imul xchg lret sbb jecxz in sbb xchg xor push pop mov or test or xor mov pop out cli mov adc pop cmc pop cwtl adc dec adc add jmp insl insl cmp jp mov daa mov push (bad) int3 push lret cmp xor and repnz dec dec xchg inc mov pop jne xor mov push int3 lea insl add mov and movsl je jg add sub inc pop jns mov clc jg adc leave sbb daa adc inc adc mov das mov icebp andl sub je push ret adc pop les add pushl jg inc inc xor push fdivl pop bound and loop xlat jno inc xor pop fldlg2 imul (bad) or ljmp or xor inc xor call or into ja sahf mov xchg mov or dec cmp fbstp fistpl pop ret sbb and cmp add scas jecxz rcrl (bad) out and and jp movsb dec xchg addr16 scas gs cltd ret add fbstp mov (bad) hlt push imul std cmp ret jp imul mov mov mov sub les mov sub incl pop in pop mov xor or cmp les fisttp rorl lahf and loop mov popf mov mov pusha adc iret in add js push jmp sub adc dec out fdivrl jp jge and div xor fs mov jno js mov xchg sub pusha (bad) adc or ss fwait mov mov push push sbb jp popf aas cld add sub pop fidivrl fsubs push push dec mov jmp popa shrb imull fimull dec jae mov inc cwtl push lahf pop adc popl insb test add addr16 daa jmp xchg movsl jne testl mov or sub fistl ffreep pop xchg in or pop mov clc gs push xor lea (bad) lods insl and inc xlat inc or (bad) jo (bad) pushf pop push fist sahf mov movsb inc leave push xor out dec repnz pop test in repz and sbb out scas int3 (bad) test fwait clc icebp and mov add xchg fucomp jo fcom mov shrb add and xor push pop stc std (bad) leave mov ficom (bad) mov sub jo add (bad) jmp inc fsubrp ret adc inc mov pop pop icebp js icebp add loop xchg scas jae add mov push stc xor rorl sub add (bad) (bad) fnstsw sub adc xchg xor push or mov daa xlat hlt fistl or push and test aam sbb and gs leave ret cmp lret stos xor add mov bound repz sbb sbb inc mov (bad) aad push bound and cmp cld sub add (bad) mov pop sub loope xor pop mov popa mov das imul ds pop mov inc jl lea mov int3 and (bad) mov add add mov aaa movsb stos xor daa add popf sbb (bad) pop mov outsl repz shl pop popf xchg out lahf or out or ds ret test xor pop call add dec jb (bad) mov push lret fldcw dec xor test lret sti and jg subb fcmovnbe cwtl cmp mov push mov sub sub pop adc or stos ja ret mov sub add out xor mull cmp xchg lock (bad) mov cmp sub dec mov fsubrp jb enter cmpsl cmpsb (bad) fisub jbe les pusha adc jg mov mov xor add sub stos mov dec test int3 push xchg pop mov clc das rclb cwtl out and dec pop jbe repz mov lret sub insb push sarl and incl test adcb loop faddl xchg inc cmp rcrb imul into (bad) pop mov test pop mov pop xor loope cmp shlb lret jo mov into mov je stos mov sbb cmp inc lock add fstl pop push hlt das and adc mov push outsl pop loopne (bad) jne mov push and mov add imul mov outsl mov test adc scas mov test repz push xor out pop xor je stos xchg dec repnz mov xor mov cmc sbb stc shrb jecxz inc dec (bad) std sbb push les scas sub pop xchg fisttp xor add adc pop push loopne or pusha xchg xlat stos mov jg push xchg adc fcompl xor jbe and mov mov xor mov xor mov dec xor ljmp xchg lds test mov add sub and rclb xlat out or cli jg (bad) sub sub (bad) lret adc sbb shrb in and add mov add fnstsw jae cmp sub in (bad) imul add incb cmp dec (bad) dec out cltd add (bad) mov xor inc pop sbb out loop leave jmp xor jo into jmp test cmp out les call and inc jmp or cmp ret adc movsl adc add cli xor push sub cmp or push dec mov sbb or pop mov scas gs hlt adc fisubr out int3 mov lret dec sbb mov xchg adc mov ss sub push ret sub pop sti test mov out mov fdivrp inc cwtl scas cld lods mov sbb or pop pop int3 icebp and scas fs push or pop mov sbb adc fs repz lret and jmp gs mov dec scas fdivrs adc sbb (bad) xchg push dec xor mov mov icebp mov or xor out shrb xchg push inc repz jecxz mulb (bad) scas popf xchg movsl outsb sbb gs xor dec xchg mov rol push lcall jae (bad) xor xor and aam xlat mov add lret mov adc ss cli je mov adc sarl jl rolb lds mov jmp fnstenv push dec ljmp add cmp cmpsb mov js leave leave (bad) or pop into push dec sbb icebp pop mov (bad) xchg (bad) stos mov addr16 es cmp sbb ss and aam lret cmc mov push ja (bad) xchg push pop mov xchg clc cli daa mov loope in and (bad) movsb shr rcrb jecxz xchg mov pop push inc lods jno inc lret test add imul stc ffree fs gs mov mov cmc cli cmpsb inc jl rcll mov mov push dec sbb mov and (bad) mov push sahf push lds aas xor pop lods pusha sarb mov xor mov xchg sti sahf jecxz push or pop xor jl mov repnz das std mov stos xor mov push das js pop sbb adc or sahf or add rcrb lret gs mov pop test sbb inc or lcall push sub leave and or repnz xchg jp xchg pop add (bad) lods int3 daa out xchg icebp daa sub rcll jmp xlat mov pop xor add push adc jmp fucomi xchg jns loopne sub lcall mov xlat pop sbb fidivr mov add mov cmc inc jns add jp je lret in fwait sub popf (bad) push lret dec and out jno ljmp out jl rclb and add lods std dec pop sbb clc sub mov in sarb movl in or inc imul mov xchg jle imulb scas fs jmp or cli cli dec out ja bnd stos dec enter sbb pop insl imul sub test push dec jmp adc stos cmp or cli cmp rcr or in test pop jge lcall shl pop push push add dec and fucom (bad) (bad) bound rcll lret mov push call in jl mov or (bad) jge stos pop jmp leave notb int3 adc mov add inc mov orl fsubs push (bad) sub lds lret sbb iret es roll sub cltd enter (bad) and lret and xchg sbb into repnz insl imull test loope enter leave push xchg test jmp cs repz dec pushl jne add add sarl fwait sti xor popf (bad) cs pushf dec pop out lods shlb xor cmpsl jle mov jb pop (bad) (bad) out popa add dec clc jge adc xchg add rcl sti loop daa jl ja outsb lods jns mov xchg cmpsb jnp xchg inc inc out icebp pop add dec cmpsl insb rcr inc sub test push xor stos call call test and sub sub and rolb sub int3 dec mov inc int3 and pop (bad) enter mov gs add jbe xchg push (bad) in jmp jle loopne ljmp es mov punpcklwd mov aaa int in xor fistp fnstenv cmpsb pop jb adc int notb push sub mov and lahf push sub outsb pop mov test ja jne repz jno dec mov bound lods in aad mov pop xchg fidivrl and lods pop mov pop add loop mov mov std int and ss aad mov pushf dec movsb mov mov loope jmp arpl add test pop jmp mov out iret movzbl inc (bad) stos jecxz sub and shr movsl xchg adc or insl ret (bad) mov cwtl or sbbl sub mov sub dec mov imull ljmp dec call inc pop or inc popf or jmp in stos outsb daa stc or or add fisub outsl add xor jne cmp push test or inc mov sub lahf fistl mov pop push or gs out mov (bad) mov aam adc mov test cmp fnstenv fimull fildll cltd or lret ret add mov sbb push pop or adcb xchg push insl add add test adc and out push mov or cmp jnp jns sbbb pop push jecxz mov cmpsb or xor call jns fdivp in push mov add push fsubs cmp mov test out pop (bad) jo dec movsb out je (bad) or mov sub dec mov xor daa jmp icebp and dec cmc jmp mov cmp arpl and pop mov sub jne or pushf lock xlat loop into mov adc (bad) xor xor xchg push xchg adc faddl sti push and inc add xchg and lcall out mov into clc and fnstsw or outsb ret cwtl mov jmp insb lahf mov sub sub call es pop add and lods enter test orl xchg adc push (bad) mov sub icebp mov and stos mov sarl pop das leave xor out loop (bad) aas mov pop adc jno into add (bad) mov xchg sub fs in cs mov notl lods aam bound (bad) insb mov dec xor lods dec sub cmpsl push arpl stc push loop (bad) jbe imul inc or jge cli xchg (bad) repz add inc mov and popa jg,pn add fimul xchg lock mov fisubr sub and fs fistpl push ja outsl pop inc popa mov add hlt xchg and push loope jns xchg cmpsb imul fldpi cmp scas out adc push icebp inc loop lahf adc scas mov and jmp (bad) or cld repnz add mov pop jle pop dec xor lods mov mov dec shlb andb out cmpsb mov mov stos fcomps cmp add xor pop stos fs les cmp and nop jb mov mov mov inc sub xor cwtl arpl mov mov (bad) xor mov test stos in inc test adc add mov insb addr16 sub outsb adc cmpsl mov popa adc bound stos cltd cwtl sub pushf add outsb lods or lahf mov sub movsl cs jns imul ss loopne loope xchg mov dec or aas xor testl rcrb and sub mov and push sub dec mov in xor (bad) jne rcl xchg in xor out out inc insb sub mov mov cwtl cmp out xor (bad) jmp adc ljmp mov ficomp lret mov jno sti shlb mov dec dec inc pop mov mov daa jge sbb push std pop (bad) scas hlt or xchg es xor xchg fidiv call ljmp sub and xchg jge gs inc sarl push push clc jp mov mov (bad) fdivrl xor in daa mov jns (bad) jg cld xchg ret jmp mov pop lret inc cmp jne sbb ss jle cwtl ret test cmp fildl cmp scas repnz in mov mov in pop pop cld lea xor jecxz fucomp mov fwait leave loope dec inc std and andb push sbb and inc or mov int xor or xlat rcll popf addr16 into addr16 dec addr16 push test xchg push mul arpl cmp sub arpl push mov cltd out cmp cltd pop jbe push repnz push mov lret pop push ret aad pop iret sub add cmp xor add and std mov pop pop mov push roll inc lret rcrb test xlat mov comiss outsl lock (bad) fsubrl mov loop lea push (bad) loope ds daa call lcall icebp sub mov xlat fs pop into (bad) push dec std mov (bad) fistl std dec idiv dec test mov lods ret cmp scas sub inc mov imul push into daa in repnz or or jno xchg sub repnz and cmp movsb pop pop xchg enter mov mov mov int3 cmp das loop gs into and add fmuls jp jmp sbb je call xor cmp loop jne loope sub pop jle stos sub lret fcoms and lds sub cmp dec mov out add in adc test movsb mov fidiv sub mov pop and scas lret mov dec bound sub and sub dec incb push pop call hlt jmp or (bad) scas into xlat out and and out popf push sub mov mov inc add and push ret sub cwtl jg loop gs push cmpsl arpl mov and jp xchg (bad) and xor fildll in mov or and leave jmp cld movsl pop lcall sbb add dec jo and mov out stos insl stos sub xchg dec and fmull add jp dec pop stos mov dec test xchg rclb sub stc inc xor xchg cmpsb xchg mov or imul jl es mov loope inc lret lret xor mov sub std pop mov mov je into fbld lret sarl test mov mov add push push ja or or jnp push idiv (bad) inc dec (bad) xor cs cmp das les add popa leave aam add dec fldl insb mov lods out add out and roll mov leave xor add pop repz cmp lods dec cmc push inc adc jo repz mov (bad) aad cltd aas ljmp ret pop lret fsubs pop pop (bad) dec cmpsb ljmp dec sub (bad) jnp,pt (bad) jne sbb cs and jno sub mov xchg in jge out push popf ljmp out cltd imul (bad) sub dec xor aam push add dec outsb lahf outsl jg enter jmp les jns imul mov mov mov out mov cmp add push mov add add inc xchg sub scas mov adc push sub and jb shl (bad) jnp outsl lret and xor mov pop fmuls mov daa pop (bad) jns jb xchg inc test sub pop (bad) ficomp push pop dec mov ds popa xor leave lret xchg ljmp xchg adc arpl inc cli pop add or xor enter loop aaa aad lds imull lock add sub jmp or imul dec inc fidiv cmpsb fmuls mov sbb movsl sub xchg outsb sbb mov bound push imul ret mov pop dec dec jb call mov xchg push daa fadd and push mov mov xlat js pop ljmp es add push sub cli jmp push pop mov nop and repnz (bad) push cli jne pusha icebp and mov jp inc jmp add sub rclb xchg sti cltd xchg sub sub xor stos lret lods fdivs pop add ljmp addr16 sbb (bad) jmp push cmpsb add pusha dec int mov sub scas mov mov xchg mov in adc (bad) mov pop adc roll pop xchg and stc (bad) mov loopne out and mov jmp pop mov xor out mov in push and mov bound das ss ret sub stos cmp jno imul xchg movsl (bad) repz mov (bad) mov or popf pop imulb mov das loope es ljmp mov pop mov jns (bad) scas dec fsubrl lret and add push or ds push inc xchg lods or mov xor or mov js dec mov mov fcmove add or (bad) mov jnp orb cmp xor stos mov jp inc lds repz pop shlb push dec sbb pop inc push iret outsl (bad) sbb mov cli (bad) into inc jl dec notl mov insb push pop out or stc inc mov ja mov push cli mov pop lock gs in bound movsb (bad) inc xchg sti loopne sub add dec pop fldl2t mov cmp push or cwtl outsb sub (bad) ficompl xor shr (bad) (bad) push ret loop push outsl lds or imul into or lret lret pop loop or and shll add movsl popa cwtl and cs jge ljmp push xchg int3 cmpsb cld das add insb outsb outsb (bad) xor cs sub or fwait pop and rclb push jecxz inc outsb and scas fstpl cs mov jo xchg ror mov xchg sbb cmc sti outsb pop adc clc out mov dec in push ficoml ljmp cmc mov sub jns dec mov lock mov rcrb fs add shrl pushf jmp (bad) add (bad) xor (bad) jge xchg das or int3 adc ss xor jge jno cmp rorl sub inc rorl das stc inc shl sbb xchg scas sub outsl adc jmp popf cmp jge lea jp and pop lret movl cli pop and and mov out pop or clc mov or pop mov ret add cmp ja movsl sub lock enter clc (bad) lock fistpl (bad) xor and xchg int3 out stos xchg ja subl xor fcomps iret dec testl cmp fdivs fs icebp mov (bad) imull xor mov mov lods insb lcall (bad) mov clc push lods xor subb push adc popf xchg stc fucom rolb push adc mull dec xchg lds sbb add lret addl nop dec mov das out xchg addr16 fs lret jge insb imul jno clc dec xor in mov sbb roll je popa add test scas mov mov ljmp sti bound pop mov push lock loope push jbe sub nop aam inc mov xor jle gs fcoml lods (bad) imul mov pop outsl cmpsl data16 dec (bad) fldz add pop or (bad) mov mov in jne out jne dec shr mov push xor ja dec pop mov inc ds xchg std push or out sub test call dec lahf jmp mov imul mov aaa add cmp shlb (bad) jo sbb adc pop jo push push jmp cmp xchg shll inc sub ja rcrb pusha outsb ret push inc or xchg xchg mov dec (bad) lea jmp int3 pop add dec mov adc xor out sbb push and dec mov andl shr dec dec fdivrs iret scas sub sbb xlat mov fidivr add cmp xor (bad) lcall pushf imul int3 repnz daa iret and adc xchg pop push (bad) and cwtl sub pushf dec pop pop loope (bad) and dec xor pop xor dec mov pop pushf add ret in pop xlat cli std (bad) adc add ja stc lret and adc jb cltd dec out xor iret leave pop lea mov repnz in (bad) shr das aaa mov (bad) leave xlat or push popa mov lds seta or (bad) les jle lret out popf mov testb jmp push gs mov dec repz rol push xchg mov xchg iret decb lret cmc mov ficom ficom iret mov (bad) sbb addr16 and gs cli out dec loope or mov cld stc insb dec movsb jmp add or jle jno adc pushf sub sub bound inc jmp xor sub or int3 (bad) mov out pop pop and out mov aaa push or repnz and push mov sub jmp lret ljmp adc sub lahf fldcw push stc mov xor mov add ds mov and mov enter add push and scas test mov pusha (bad) xlat mov pusha push fwait jns or gs lret mov xor call dec add inc stos popf addr16 imul jl and pop int3 pop (bad) dec (bad) xchg push mov push push rcrb cmp fnstenv dec jle push (bad) pop gs repz pushf pop mov push xor xchg adc cmp or push out push adc cmpsl call cli cmpsl sti xor jl roll jl mov fbld loopne push fs jl mov lock loop int3 pop mov leave das cld divl in jg out add and jne pop repnz adc leave scas and pop xor lods pop cwtl cmp cltd std outsl and xor jg dec ljmp or jbe and mov mov ret fistp dec loopne icebp push sub leave idivl mov mov and xchg mov sub dec cmp fsubrl movsb jl pop ret insb loope (bad) dec or mov fbld sub and push add push inc lea mov ja cli jo popf mov adc mov mov jmp pop mov add or sub mov fxch cmp or leave mov pop daa push (bad) notl and sub ficom aad sbb xor xor sbb into lret cmp testl lret dec jg rclb int jle push sbb pop iret les mov jo cltd jnp lods sbb xor inc jl pusha xor and lods in popf and mov les pushf mov pop aaa in or push sub out (bad) adc mov fwait dec repz aad mov fstl xchg cli stos mov xor mov sub cld call cltd movsl jecxz ret das fidivl lods iret push push (bad) repnz aaa xchg inc pusha or aad cmp bound dec divl mov shr imul xor out sub sub and dec pop xor and (bad) or fild xchg lret (bad) popf pop adc mov pop or xor push sarb sbb popf arpl adc and push test jmp fsubrs (bad) mov dec jmp dec and xchg das (bad) pushl jmp inc pop xchg cmp sbb xor xor aas cld aam jmp ret adc add out xchg shr insb addr16 loope add in aam mov pop push mov add pushl (bad) sbb vmovdqa (bad) xlat lods nop (bad) fxch rcrl push xor cs sub add push add fisubl arpl (bad) lds push mov dec pop loope mov ret cld push or mov std xor and popf aad pop popf fmuls das xor (bad) cmp add lcall lds xor sub in into cs jecxz das pop jge hlt xchg lret int sub inc lahf xchg out mov mov cmpsb pop adc dec loop ficoml mov jl mov pop lahf xchg sbb out mov scas xchg cmp test xchg pop gs sub inc mov std icebp into rorb sarb rcll roll leave leave aad adc loop out xchg mov jno dec mov aas dec icebp icebp mov sub popw adc fsubrp shrb pop into dec mov dec iret cltd inc aas in (bad) fcmovb fcoml inc inc shrl xchg (bad) dec cs dec push add lods or jle or push aam push popf jmp icebp cld lock psubsb inc rcrl stc daa mov sub imul std mov sub push push or push mov dec cmp out pop inc mov pop aas mov notl jge sub xor pop pop ljmp aad add sub orb popf daa idivl rcrl add pop sbb lret xchg or pop mov test mov add and aaa mov push mov push dec sub mov ret push out call mov or mov xor icebp (bad) je negb aas neg lret sbb inc adc mov ret rorb inc mov popf leave (bad) addr16 (bad) jb add pusha insl aas mov (bad) add mov mov pop sti pop clc bound icebp pop hlt sub inc add push push push aad mov icebp add jg or add mov mulb pop mov dec into cmp push data16 xorb ret (bad) pusha jge pop push test and rcll pop fld push addb lods adc dec add mov cmp in cmp lea pop add pop aaa and pop mov sub add std jg out xchg or mov jnp add in pop add jns mov pusha dec shrl (bad) dec jnp cmp orl orl jb lret fistp push pop inc lret xor fsubr and mov mov fcompp sub (bad) jmp xor sub lahf add inc icebp ljmp (bad) sbb ja daa mov fstpl fcomps adc popf cmpsl negb pop and enter jle addb add cmc lcall lods pop sbb adc xor xchg mov mov add inc dec test pop mov leave ret fldenv and cli andb (bad) imul add scas je test test ret les sarb sub aas outsl and xor sub xchg loop sbb and xchg dec sbb daa jecxz mov nop lahf aam repz in mov xchg and pop and movsl js dec (bad) flds out push xor push pop (bad) in jns sub loop cmp pop push lahf fidivr lret jmp pop mov notb inc mov add or stc sub push dec (bad) xor popf bound (bad) fs xchg mov ret or jl mov enter mov sahf sub out pop (bad) ljmp add add js ror sub in daa stc push inc add lea repnz xchg stos int3 mov gs stos (bad) mov xchg pop adc and inc add xor sub lods pop movsb out addr16 or dec add and (bad) stos in inc push out or sar fdiv push out mov xor (bad) or mov test je xor and clc jmp fisttpll movsl jle push push mov test ret mov data16 xor cmp lret arpl cmp cltd mov jo (bad) mov arpl mov (bad) adc and push mov les or subb sub movsb dec daa push pop pop out sbb cli shlb pop pop pop jne adc mov rorl scas push xchg stc lahf mov sub decb adc out mov cmp les push and ret ficomp shr iret outsl cld sub cld das mov mov mov pop xor inc sub hlt jnp and std js (bad) xlat pushf ja fisub push lds lahf fsubl std push inc mov sub das loope imul movsl out loop fstl shrl out mov sub sub scas xor scas sub ja push sub add repz scas cmp out adc push jbe jecxz add sub pop push lret fs sbb push jo (bad) adc loope cmp or popf xchg pusha pop and sub dec adc push and add loop mov das (bad) push imul in pop and insl xchg mov nop outsb push sub mov jecxz sbb sarl mov mov das (bad) sub pusha dec and sub mov add pop lds mov push bound negl addl xorb sub out xlat xchg dec inc inc (bad) dec (bad) mov scas shlb xchg mov lock jo icebp popa divb mov sarl mov dec call xchg mov imul mov add xchg mov leave or (bad) mov data16 les sub pop lods lods call daa sub rcrl and xor (bad) mov sti mov xchg pushl loop or ljmp lock mov in sti jo sub lahf test mov hlt pop into dec imul jbe pop mov xor pop mov pop shrl call cli call daa or push push push mov xchg sub xchg adc dec and pop xchg in into arpl xchg jo ljmp clc and (bad) es lcall push push jne jns xor enter cmp cs out mov imul xlat jb xchg adc push jg mov inc mov scas lods ret push push inc stos idivl mov or ja hlt or sub ja loope stc ljmp jmp xchg ficom jge shlb mov stc sub hlt mov mov mov sub (bad) mov xchg imul sahf imul cld repz ja stos mov movsl ljmp cmp popa pop cld les fstpt sar cli jmp add outsb or xchg sub or enter test cltd cmp or and jne bound cmp in xchg je rorb cmp fbstp int3 inc repz (bad) aas xchg movsl add pop int and add scas sub xor adc or mov sub ja add and jne sbb pop icebp bound je mov lret aad lods dec xchg pop cli sub or scas xor sti daa pop icebp mov enter data16 sub in sub jmp dec shr lock xor adc mov out cmp (bad) dec or sub push pop inc movsb call aaa jne dec popf (bad) xchg pop fildll cmp pop pop aad flds loop (bad) or repz sub pushf nop rolb push int jns into dec dec or (bad) jmp notb and sub movsl cmp lock pusha out pop jae adc mov xor rcrb sbbb mov push lods push out sub mov daa iret adc mov pop ljmp out pop push cld inc mov fadds data16 xchg popf cli jle pop pop (bad) shrl icebp mov inc mov decl repnz loope shrl cli mov mov xor data16 and lea dec (bad) mov push dec push gs xchg and addr16 mov mov stos fs (bad) (bad) addr16 adc mov pop adc cmpb in mov sub xor sub adc fwait lods jl jp mov pop adc int jnp adc xchg (bad) push jmp lahf inc stos lret cmp shrl and jmp xor mov mov jnp (bad) dec push stos fnsave int loop,pt mov push dec xor add xor push in repz lods jb test lret out mov les incl sahf das pop adc pop xor ret xchg and scas sub lea sub (bad) sbb lret dec daa (bad) mov jmp add push cmpsl lock pop dec lret pop icebp ja jbe fs das addl jns mov mov mov and add ja cmpsb lock fucomi cwtl push insb lahf insl lock xor mov mov rclb lds je incl out mov mov or cmp stos jge cmp xor pop sbb jns dec jnp cmp push popf jl push push lds xlat gs sub cwtl test ds mov lret mov out or push pushf or push jae repz pop in mov jmp test out jp pop rorb mov scas dec mov (bad) fsubrl and out cmp lds mov adc lret test mov inc rolb imul (bad) cmp or leave add stos inc leave mov or imul out lods mov adc sti and push loop pusha scas out mov sub movsb mov pop and into xlat mov dec pop loope xor decl arpl mov pop inc es sub rorb xchg ret rolb fstl mov inc test add insb lods and xor mov push gs ret sub mov rcll leave aam scas sub out or xchg fbstp hlt insb inc iret jmp push mov notl ret adc idivl mov scas xchg jecxz push dec dec ja leave pop push sbb dec jb xor out ret mov xor and cmp add dec ljmp lds sub mov sbb mov jmp xchg jbe shrb jmpw loop,pt jns cmpsl (bad) adc sub jmp loope or sub insb mov fwait or (bad) sub scas fdivl or popf lock je dec sbb out test negl pop iret out daa negl adc scas lea dec insb in fsubs mov sbb and fdivs adc in popf cmc xchg or hlt cltd cmp add out je lea cmp mov sbb orw (bad) repnz xchg mov xchg sub jmp insb lods pop push jne stos adc loop mov pop das mov cli call test push imulb pop mov dec xchg dec into mov das sub and fiaddl lret fnstsw xor adc cli in and icebp into lret jo mov mov sub and test mov gs pop sub es daa jbe add mov hlt aas sub or mov (bad) sbb cltd stos xor jle in or imul jae rclb decl shrb push adc sbb lods inc push xor roll dec out jb sbb dec ss xor inc popf rcrw xchg cld inc push inc sub mov test xlat sarl inc and mov and and and sti stc rclb lret iret (bad) fwait jb dec lret sarl mov in (bad) pop push daa jne adc hlt leave repz insb jmp popa test fisubl cmpsb adc sub jge pop ds xlat (bad) ret inc nop (bad) ljmp xchg cmp xor clc push xor xor leave xor loope insb jbe loope cs in out insl leave sbb ret mov dec dec out dec cmp je aam roll xor out sbb shlb insl inc sub dec mov inc leave mov push cwtl xchg daa mov xchg or adc xor mov add push mov cmc roll push pushf xchg daa or (bad) out jg push js dec ret inc jbe pop shl sti adc push mov ret xchg pop dec enter sti rorb mov xchg add ret mov pop pop dec mov int3 mov sti jbe xchg gs mov hlt pop pusha mov add ja mov jmp repnz fstpt adc pushf cmp mov xchg mov (bad) adc repz and xchg jle lret cmc dec inc add bound add pop in movsl pushf popa push mov inc sbb (bad) mov cld (bad) call jae mov fcom ret sub testb icebp sub popa jb mov and clc add rcrb mov leave popa jp insb cld mov cwtl std sub loop out leave jl lods divb imull push movsl test pushf jg sub sub sbb popf (bad) dec (bad) ljmp inc imul xchg fsub out (bad) mov mov out testl mov ret test lret or sub insb cmc mov outsl sar xor add push call pop (bad) dec and fldt mov push push imul shrl push fdivrs sub daa xor dec sub cli pop sbb mov mov outsb sbbl cmp add inc cld pop pop mov sbb mov sub lret negb push xor inc or in inc add (bad) mov data16 add (bad) mov in adc push sub push out xchg jmp test and jg adc xor fdivl fnstcw or mov or rol fstl (bad) and ret mov sub mov sub or repnz sbb jno ret ja insl mov pop pop pusha push pop push xchg (bad) loopne out sbb pop jmp pusha test jmp in fdiv daa adc sub je scas mov shrb cmp jno out das sub in sub ljmp adc cmpsb push shll xor mov lcall leave ficomp (bad) push les sub gs loope sub jb inc call pop sub push dec push jl ret iret std mov gs lods add add insl jmp mov mov xchg movsb sub sub fwait sub enter mov in daa divl mull cmpsl movb cli mov pop ficom pop xor int3 push leave decl mov cmpsb mov jo dec jmp and xchg pop scas je push scas jecxz pop (bad) pop loop mov jns push in and jecxz (bad) fldcw or jmp push xor iret cmp int3 adc or and mov push sub jbe add sub arpl mov int3 jne dec mov repz sub popf loope mov ds xchg cmp fwait in push lret out push mov and idiv sub jecxz imul data16 popf (bad) jmp mov mov xchg (bad) (bad) leave jl and add imul movsl xchg sbb fldt cmpsl inc call add dec int3 es and mov fs push pop push ljmp cli (bad) stc clc movsl push test add jnp xor pop rcr fistpl push push jae sub in das and and test fcoml test aaa mov sub fsts jo pop push lret lret and fxch sub add mov mov xor test test out jmp test stos repz das mov (bad) add xchg xchg sub xor xor or adc push outsl mov xor mov or bound shll xchg mov pusha jmp dec loop dec lock stos mov inc adc cmp lock adc dec adc (bad) lret cwtl mov and inc mov mov pushf sub cld cmp and adc xchg std inc (bad) out mov (bad) idiv aam sub pop aas pop or gs xchg and dec jo push sub inc mov outsl (bad) jg pop mov sarb addr16 ja or push dec call sbb pop mov bound sbb test test pop mov mov je daa inc test sbb imull and leave (bad) pop sbb adc ss sub add mov dec mov mov ja inc sub xchg push imulb mov out adc or push pop scas jne lea add add gs cwtl sar das adc adc (bad) pop dec mov xor in and xchg push xchg mov movsb xchg repnz pop sahf stc xchg icebp clc push mov push xchg scas xor fnstsw mov leave mov sub aam jmp xchg lcall dec lret pop dec jmp in shlb or xlat push dec xchg mov fdivrp lret mov jl ret into xchg ret jne dec adc ret mov pop imul insw jmp rorl sub mov add cli mov fs xchg cmpsl gs push mov (bad) mov push (bad) into fnstsw or push (bad) in and addr16 xlat pop clc dec mov mull and rorl adc cwtl mov sbb (bad) sub (bad) xor mull out outsb cwtl push jmp loop repnz xor aam jmp push out mov int3 jge dec push ret jge and add jno mov xorb adc sbb fistp cmp push les xchg nop adc sub rolb jg dec sub hlt (bad) cmp add movsl nop push clc mov bound lahf and xchg test and lock and rclb jo cmp dec pop out cli movsb les (bad) mov (bad) mov sub dec ret pushf cld sub xlat inc sarb jo adc cwtl sar push pop lret push mov gs sti aaa test popl or push dec idivl fs jmp aam (bad) fimul add in testl push jmp popf (bad) out std gs jge enter xor out jl push mov xor xor (bad) call mov push loopne movsl pusha ret or call icebp cmp test or jbe inc into jle outsl mov (bad) pop mov and push lcall (bad) and adc mov xchg xchg jmp cmp or add dec adc dec (bad) mov sub mov mov das or cmp sbb ja loopne pop add leave repnz idivl dec test adc daa mov pop and int popa (bad) aas fs mov or je clc xchg sarl lods ja push (bad) sub orl dec jle rcl push cmpsl adc pusha jmp sub and je sbb imul outsl mov xor dec inc insl mov (bad) aas out testb xlat es sbb and jbe push pusha aaa mov lret testb mov adc fsts xor sti sub adc fisttpll or add mov ret daa fldcw jb test push sub testb jnp scas arpl repnz js cmp and xchg jmp lret pop xor sbb cmp inc add js lret jo and cmp test or inc mov aam in (bad) repnz mov out push mov and or sub mov jno cwtl pop clc adcb inc lods sbb loop or out and jno mov (bad) lret jmp rorb pop jmp pushf ficom push push test and das push push (bad) lock (bad) lret pop cmp lea testl add pop fbstp xchg ret sti push lret int3 add mov and sub out push ds shll mov xor inc mov cltd inc adc les mov xchg std sbb into mov dec lahf push pushf jo int3 pop cld add pop outsl gs xchg in cmc and inc push mov mov loopne inc mov dec push cld cwtl movsb out idiv push (bad) xchg fstpl int and stos add sarb push xchg adc scas sub out push push test or mov add int sub sar and repnz mov mov inc lods cmp mov mov lret pop sub fiadd add jle push and repz and das int3 jle inc cmpsl pop sub ds mov shrb ja scas insb sub fs lret fwait and int3 daa fcoml and repz je pop enter pop stc or or std (bad) cmc mov hlt pop xchg push sub cwtl (bad) mov into mov hlt add jle push data16 mov pop and and (bad) xchg (bad) stc test add push jbe adc mov ljmp xlat addr16 push div out dec lods adc lds inc fcmove push shll jl xchg xor stc insl xchg mov sub out (bad) jl pop hlt aad add and (bad) cld lahf movsb xor scas push mov cwtl ljmp aad sub sub jne clc and imul repnz mov and jmp das je push lret add pop daa and add aad inc xchg cld dec fsts adc aam add iret push rcrl popa jns mov (bad) push pop in out icebp push cs push inc leave aad loop (bad) xor mov add lods mov xchg cmp ret lds and daa xor or dec lret fsubs adc xor sub decb in in adc cmp add sub mov sub dec jmp mov test ljmp (bad) rorb imul mov cs ljmp jmp mov xchg scas int dec sbb sbb rcr and mov add fnstsw inc add test imul mov dec xchg das repz inc add test leave ficomp mov add cmp jbe and aam jg adc xor fisubr iret mov jmp ja rcll std dec je notl inc mov and negb cmp movsb (bad) fdivl inc and sti (bad) mov xchg psrlq mov sub adc test jo clc lds jmp mov inc sahf ret add push vunpcklps sbb sub mov sub jle sub fsub pop and movsl lcall dec scas mov aas cvtpi2ps aaa mov leave or xor popa lret loop sbb (bad) cmpsl sbb push mov (bad) jae mov xchg jl push ret sbb (bad) xor push inc rcl test (bad) or cltd xor cli jg nop or loope mov mov xor sbb cli add pop and mov lahf imul xchg sub sti or ljmp addr16 dec fmuls out sub imulb sbb stos in xchg das mov in inc in cmp cwtl mov jmp (bad) leave push sti test jo push stc jae jno pushf ret add and push out addr16 test out cwtl in push es jl test mov (bad) fldt stos rorl cmp (bad) scas cwtl pop (bad) pushf xchg (bad) leave imul cli rcl adc pusha cmp leave mov or sti mov out and stc das leave push fwait aaa xchg jg lcall addr16 add daa push cmp mov and cmp mov cmpsb jb pop popaw xchg stc pop xchg out mov push daa in or lret jg (bad) test mov mov sbb fnstenv dec aaa jecxz outsb fnsave sub sub inc jno jno test adc or (bad) fstp sub lret mov fadd shrb xchg dec lock mov lock (bad) jno push stc sbb test xchg (bad) ret daa leave sub test rorl xor mov cwtl xor mov (bad) mov dec cli lret sti cltd jecxz pop incb into loope js movsb (bad) cmpsb sub cltd stos add jecxz mov xchg push les fistp cmp repnz test pop sub sbb and dec sub or call xor je outsl call clc ss adc clc mov jg cmp and jle pop and xor dec xlat xchg push (bad) lea xor xchg lcall pop pop out ret call nop aam adc sti insb int cltd add cmpsl pop rcll add test js out ja cmovp insl xchg sti adc add in andl mov push pushl sti or loop pop or sub xor icebp lahf pop loopne insb jge lcall lret lods data16 (bad) fstps mov push dec xchg mov mov mov inc mov adc xor lret and mov sub inc dec xlat dec mov daa loop push stc add cs jae mov adc sti mov inc adc add xchg cwtl aad xor loop sub push fdiv push cmc popa out aas sub bound fidivrl cmp sbb mov jg or leave test das add lods les and cs imul fisttp fs lcall pop (bad) jecxz pop mov aas mov out fstps sub sub xor xor xchg aaa clc inc leave xor adc xor arpl pop dec add stc sbb das mov dec xor and or push and sti cmp lret inc popa out test in popf jecxz mov (bad) movsb mov lea xchg lret aas leave cld mov ss lds and cmp jg lea icebp sub ret mov push sbb dec mov dec xor dec mov cmp clc ljmp movsl je cmp out mov add lods push mov jg xchg lods mull xor into cwtl dec and in movsl pop call arpl sub test rorb sub fidivr or and fistp pushf (bad) test mov adcw mov int3 pop in test idivl lret push mov fist dec jecxz ror dec adc negl dec jbe imul leave pop (bad) test cmpsl imul dec shrl lock and push push sub insb (bad) xor and mov data16 pop inc push in inc les shl (bad) pop fldl jo mov xlat sets sub sti int3 pop fidivrl sub adc or pop cmp icebp dec mov movntps lretw add mov mov ffree pop xchg mov add movb mov test push sarl xchg mov pop sarl xchg mov push mov ret cmp cmp movsl mov pop out lods mov sbb add jb push and cmpsl adc repz mov add inc lret test jecxz in aad ljmp movsl jne setge push jg cmp sti bound pop jno mov stc jno movsl jbe call and add xor xchg mov add rolb push jp out jmp mov xchg adc push adc stc shll mov stos fldlg2 movsl cli (bad) ficomp pop popf jmp loop push xchg aas mov es pop mov push sub mov aad (bad) movsb les sbb push rcrl and mov (bad) mov insb inc pop iret aad dec jmp (bad) mov pop xchg jnp fdivs add out add arpl and pcmpgtw mov out mov daa sub jg pop xchg repnz fstpt mov daa inc mov sub add mov test aam push jg das xchg jo mov fcompp (bad) fnsave dec icebp test pop or pop (bad) notb ret mov (bad) sbb data16 in and movsb out aas mov xor (bad) cwtl (bad) sub fwait lods lods xlat test mov stos cmpsb jbe (bad) jmp push inc mov mov lret jmp mov in dec pop out dec in mov out dec inc xor sub data16 dec push mov call jp mov jb stos mov or add shll and push sbb iret ss or (bad) arpl add push lret int xor cmp adc out or sub and scas lcall cmpsb sahf sub mov push push pop lock dec (bad) int3 aam dec or (bad) (bad) xchg sub (bad) mov mov jne mov jecxz lds mov divl jnp mov enter mov or std or mov addr16 adc sub pop xlat scas mov or (bad) dec pinsrw out imul insb pop xchg fbstp push ret pushf dec popfw fstpl dec jmp pop es dec out ret (bad) xor xchg das cltd adc pop and fmul (bad) dec nop jno xchg mov jg mov add fadds or call into scas fisub fistpll lds and jae or and data16 sub aam jmp mov std xor adc pop negb mov repz std cltd (bad) out outsl repnz shl in mov and and pop sub xor pop call stos cmpsb stos pop das pop mov (bad) push push or jg (bad) lcall and mov (bad) jmp out je mov xchg adc add cmp sub mov ret pop fldenv icebp and mov aaa stos test cmp in mov daa cmp es fs loop (bad) loop xchg loop adc xor xchg popf mov loop fildll add (bad) (bad) push cmp push pushl push iret pushl movsl std mov xor popf mov xchg mov mov clc pushf lahf xchg mov add jbe jno ljmp adc sub push inc dec dec call inc mov xor aad jns out xor out or popf (bad) xor repz and pop xchg sub jge pop mov es add out sub pop push adc movsb add movsl test jb fiadd add mov jbe dec pop mov push scas xchg push pop and popa iret sub mov out pop mov mov test repz out mov sar repz xor adc xor jne mov lret jmp repnz out in sub movb or sub sbb add sub popf je jo sub (bad) lock mov out cmc test ljmp xchg inc sub imul fnstsw lret jg push psllq xor in or (bad) mov cmpsl insl xchg mov js repnz add add mov lret mov push in and xchg lret fdiv add stc movsl fnstenv or mov int or sub rorb xor dec (bad) push adc cmpsl pop dec add push sarl (bad) xchg mov int3 inc mov imul scas decl lret xlat in and fist ret jmp int xchg push xchg ret sbb jae adc cld pushf movsb out ret negl jle lret ficoml lcall data16 vmread or repnz xchg in add leave fiadd (bad) std es pop sti and ret jge push mov and sub test fadds mov test jb mov aas shrl sub jp sbb fsubs lret push inc in out pop lods jb icebp testl mov inc push add std xchg mov ljmp add pushf or xchg and mov sti xlat inc dec (bad) stos mov orl scas xor and or icebp rolb lret jge push pop jo rcrb test pop pop add mov or (bad) lods lods jl jmp out nop jp pop daa mov je pop cmp mov daa das bound jns mov mov imul sbb aam ljmp pop cmp mov ljmp mov stc or dec or jmp clc sub inc or ja mov mov jmp pop fsubs push aam imul sahf jmp xchg jge sub cmpsl fidivrl sub mov (bad) adc repnz out cmc mov les dec push sub mov call pop int out in cltd mov test leave out jg cmp gs mov or jmp and rcrl mov xlat sbb sub cld sarl out out (bad) jno out ljmp mov dec (bad) mov pop testl out jl xor negl push xchg (bad) pop call mov repnz adc stc int cmp repnz xchg popf pop sub sbb pop in jmp leave push loope gs in daa pop mov into jno popa mov push out mov mov fistl cmc rol inc test mov mov fmuls and xor outsl pusha fsubrp or cli lret jecxz sub cmp (bad) ds lods and fisub or push and xchg negl inc inc cmp sbb sub ja mov cmp xor test pop gs and sub xorl jno and ret js xor mov jne mov adc xchg push xchg cmp outsl mov daa jnp mov cs imul mov out std mov jae push mov mov xchg or add rcrb (bad) cwtl dec out xchg (bad) ja or and xor ret rorb xchg jge inc imull or fwait mov xor add mov or jo mov sub or push pop es inc sbb pop mov aad gs mov adc sub into push add (bad) sbb xlat mov imul add movsl add adc into pop inc mov sahf dec add push jle sar mov ret inc test dec into dec iret int and sub mov xchg (bad) mov adc into dec sub sbb negb loope (bad) fcom add sbb imulb and sub sub pop jge inc dec incb cltd jecxz in ja push xchg test clc lea xchg mov outsb je int3 or push fisubl xor in lahf inc inc or jp mov cltd or push push notl pop lock and mov sti fisttpll repz sub sub mov out fs sahf add add pop mov cmp dec sti inc cwtl adc stc popf test leave popa add leave fisubr dec mov push xor shll gs xchg push xor insb std adc stos mov lahf xchg cli mov pop mov sti neg (bad) rcrl add icebp xor adc mov stc push movsl neg insb arpl pop sbb movsl out fnstsw xor mov mov aad les mov loopne sub mov in bound cmp pop cli jno add push xor out mov sahf call ret pop popf xor aad in hlt mov sub jg inc add xor and fs scas or and outsb out pop xor subl cmp outsl aaa sub add jbe roll (bad) jbe dec stc ss rorl ds pop (bad) mov and xchg repnz les ja imul jnp outsb mul add repnz fimul fimull ret dec dec (bad) jmp adc (bad) scas pop sub lods test mov fsubrl test sti xchg pop push pop dec mov out daa repnz mov xor je pop (bad) or or mul push daa xor dec pop in cmp in or push dec imul incl pop hlt lock mov adc and sub pushf add push xlat mov push xchg sub fcomip sbb dec jns push xchg xchg shll icebp cmp dec inc xor pop inc gs push js into mov push aam into adc ror out push sub xlat mov adc or sub mov xor xchg push out (bad) xchg mov lock inc sub push in testl dec jg xorb cmpsl mov bound out lret popf and add mov cltd pop jp jecxz xor mov nop lcall jmp lods jge xchg rclb lods bnd adc ret (bad) mov jp sub and out sub mov and sub mov sub cmp pop lods mov rorb test out mov adc mov mov xor xor mov loop shrl into xchg outsl lahf push lcall ret push mov xor and sub xchg jl jmp inc or pop insb mov fisubr out dec and and pushw ss lret ret jo mull sub faddl pop xchg sbb add fnstenv mov and add out and mov or push rcrl xchg dec xchg sub idivl mov ror gs out jbe mov fisubr das (bad) icebp imul mov sbb call fmuls lahf js xchg cmp push mov imul (bad) push dec jmp inc adc and xlat jns dec push aad and cwtl loop pop rorl push jp push out mov or ffree mov and aam adc mov or add xchg inc scas pop adc push shrb ja mov xchg push and inc mov or mov repnz (bad) jne int ficoml inc adc out pop (bad) rol inc out aad and stos jno add sub (bad) lock out xchg jge out mov js divb jnp or lock insb (bad) dec add mov gs lret xlat pop (bad) or leave dec icebp push es das fild adc insb or loope sub ss jb add stc adc mov inc into xchg stc inc popa sbb imulb js pop jbe pop mov xor jge xchg jmp (bad) mov push icebp or lock sub and lock and lret xor das aam loop sub xchg or repnz dec (bad) scas sub push (bad) sbb or repz imul push das fistpll adc insb call cmpsl mov xor and sub push mov inc push xchg lcall (bad) dec and loopne sbb es das jle in cli mov inc xchg sub les xor cmc ret adc lcall data16 add xchg je lret ja or dec in popf jnp aaa fs and cmp xchg push popa sub and sub test xor add dec push jp sbb lods pop lret rorb or jo push pop (bad) popf (bad) lcall inc adc dec push jno dec mov adc cmpsb and imul mov pop cmp mov out jb adc je testl jne push xchg pop mov xchg outsl mov mov add sbb stos daa push push xchg pop pop pop movsl pop cmp xchg jo ret mov js (bad) leave push jg daa inc lret movsb adc lahf inc dec jns xchg mov mov xor push push test lock jle (bad) mulb mov inc outsb fstpl mov daa sbb xchg (bad) cmp pop rcrl mov iret rclb cs mov out mov or xor sub inc repnz dec das aam sub and sti gs lea lea xchg idivb add and stos imul mov jmp nop leave jecxz and shlb mov das xchg lods pop mov dec (bad) pop xor jb loopne mov mov xor ss pushf (bad) outsb out nop dec jne xchg clc movzbl jl ret xchg pop xlat and inc xchg cmp jb lds sub add push cmp imul mov dec inc xchg jae sub mov cmp cmp popa mov lods or add pop scas aam cmp pop les cmp mov mov cmp lahf cld sti push or cltd aad pop stos inc ds lret mov mov sbb inc js inc mov xor sbb ds adc adc sti add and sub pop ds sub and pop fst sub pop ss dec ljmp add rorl loop,pn lret ds dec rcll mov jns and or into aad addr16 out add out adc gs shrl sbb and jbe repnz mov fldenv cld cmp xor cwtl inc popf jp jp xchg cwtl movsl popf rorl bound out dec fadds pop call pop idivl cmp clc sub push xchg inc adc add mov call xchg mov or add (bad) xchg xchg xchg lods test sub lret ret mov xlat roll mov shl fimul sti mov sub fadd sub add aad ror sub inc or ja mov negl xchg shrl ror sub push pop bound jp push and jnp cltd xchg mov adc lret add dec es gs movb dec test cli jp cli mov mov stos int sub mov fnstcw mov test cmp xchg and ret lret sub popf and (bad) stc (bad) ljmp inc fstl or mov shl loope mov or sti xchg dec add jl stos jecxz dec icebp clc jle popa (bad) popf adc in andb mov push inc fstpl xor jl popf push out xchg lret mov and push or lods inc pop test dec or mov jle sub fistl sub or and mov lret shrl adc repz push inc testl push fs mov push in adcl or out mov daa (bad) push notl decb loop xchg (bad) out cmp (bad) push cwtl jns xlat sahf mov pop cmp rcl lods fwait xchg sti flds stos xor pop inc imul shlb or jae mov sub xchg hlt scas pop push sub pop push pop sbb or mov pop (bad) cld push pop loop rcl and or push sbb iret ror cmpsl jmp xor add xor mov jmp fisubrl cmp xor pushf je lds and test add mov imul xchg mov pop pop add xor cmp pop vxorps ja sub jg (bad) mov movsl cmc lds and jg mov clc shrl dec ret push (bad) popf int3 xor xchg aas and xchg adc lods dec int3 and (bad) jle in xlat mov (bad) aas imul rcl out jbe or ror dec mov lds cmp stos xor sar or xchg sahf mov add cli inc sub mov dec aaa cmp lods mov push cli out (bad) mov xor dec cli addl stos mov dec and stos mov sub sub or mov mov pop packssdw mov adc dec dec add repz mov mov (bad) lret subb (bad) int bound les ret inc xchg add iret inc pop and add add xlat sub scas sub sub and pop gs mov out les ret cs and cltd out jns xchg mov adc xchg mov and test test (bad) xor (bad) ret push push ret cld sti xchg jnp das adc or add nop gs mov dec jns (bad) fadds mov (bad) mov jmp sbb adc dec pop dec or (bad) repz mov call outsl pop ja pop xchg and jmp outsb xor xor and add mov pop icebp mov dec add sub jno cmp testl fcoml scas xor or pop jne daa in and js xchg enter jp stos inc or aad loopne mov mov lods fstpl pop and idivl insb ret mov (bad) cmp add pushf aad aaa (bad) jbe jle ret cli jne dec dec imul inc mov mov out cs call dec dec pushf lcall jl lock inc lret ss push push mov and adc jge jo sub add loope pop xchg mov mov ret sub leave std test pop cwtl aas (bad) dec sub mov pop adc arpl xor mov inc loopne xchg xor ljmp aam mov xlat or clc or xchg ret (bad) or xor clc xchg and jmp idiv cwtl pop iret pop and xor cld sub add mov cmc xor sub loope imul cmp lret out dec repz scas sar xchg mov rorl ret (bad) pop push and out (bad) jo add lcall sarl loope sub stc mov pop sbb cmp push ds mov push add daa faddl xchg inc add std sbb mov or scas xor out fdivrp pop call and dec cmp lock mov cs cmp xchg leave stos sub out stc rorb push adc adc outsl dec subl xor add and jl pop outsl inc daa lds sub xchg and imul sub (bad) ja outsb test mov fstps lret cmpsb out or mov jne sbb cs sub mov xor jl push (bad) loop xchg mov stos mov imul sbbb or cmp and or fistp add sub sti xor adc or mov das stos inc mov add imul leave popa and pop dec jecxz rcrl sub mov mov stos loop add mov jmp add mov movzwl in mulb out out test mov mov ret and jbe (bad) idiv insb leave sub mov rorl push insb mov icebp in leave imul and mov inc sub jmp aad (bad) scas (bad) xor xchg mov add mov shll fwait pop pop push (bad) mov repnz add dec leave push mov es or iret mov movsl and pop jge adc dec sar (bad) aaa and and outsb stc std cmp imul and xchg (bad) push divb or add (bad) mov popa mov push sub push or dec repz and (bad) call addl call inc jmp add (bad) out push lods sti (bad) lret shrb nop addr16 repz ret das lods or xchg inc mov repnz mov mov sti mov add mov (bad) xchg push call inc jmp fnsave imul dec sbb ret inc mov pop (bad) lret or push push xor inc mov push popa sub sub xchg fcomps mov push cli xlat xchg ja call cmpsb inc sub pop lret adc out icebp aad sub sub push sbb iret or mov sub mov xor sub fsubrl cmpsb inc cld jl movsb loope jnp (bad) push popf xor repnz push pop adc cwtl dec inc rcrl push or add add repnz pop daa mov xor sub icebp pop cs jmp mov dec ret xchg dec ljmp out out mov and add es pop fbld sub or jns ret and jp ds sti imul movsl push and mov cmp inc gs lahf popa ret (bad) bnd add mov out sbb cmp in popf in lods scas fld jmp xor std mov jg xor clc cld mov lret xor xchg jmp dec lret cmpsl repz icebp add sub cmp inc mov xorb xor mov je out divb cmp adc inc test mov (bad) cli std ds add lock call sbb mov sbb sub (bad) mov ret xchg sub into sub and lods fdivrl and popf sub repnz mov fcomps (bad) jbe hlt leave cmp inc aaa or pop add mov mov cmp xor jle fldcw sub mov iret pop add mov adc mov or fldcw in xor clc sbb std adc or enter out or mov inc xlat jb pop jmp fcmovnb sti out push test adc call add outsb mov lret call ds push inc xchg (bad) and and mov aad movsl sti sub lods xchg lea xor sub dec and pusha fstl fwait mov and cld or into cmpsl jnp sbb bound mov push sub daa daa xor aam or sbb repnz jbe adc out mov mov pop adc popa or inc push fidivl movsb xor sub fsubs pop pop and stos ret pop jnp (bad) repnz ret or xor ret bnd cwtl push roll aaa xor mov aaa push int adc inc pop xor repz or imul clc out popf js,pt shll lahf testb or lods sub loopne push into pop or dec test in test test leave sarb jl adc mov pushf add ss pop out pusha je sarb mov pushl popa lcall push int3 popf mov sti inc xor jg pop inc out (bad) repnz fcompl mov sub hlt xlat fs lret cmpsl dec pushf inc lret add cmp jmp mov lods xchg clc mov dec and fstpt loop jmp loop call ret pop jne adc aam adc mov int sub mov (bad) mov xor nop and or jnp adc cli lret xor movsl stc imul (bad) adc repnz pop mov sub dec es add jnp xor js dec jecxz jne adc inc lret add inc frstor jmp sub fsubl sub mov xor es mov and das push out push in xor mov xchg mov mov push (bad) mov add xchg push loope and mov xlat lds ss enter xchg nop mov jmp in and mov jbe sbb ret jmp nop into xlat sti ja imul inc push inc repz (bad) les jnp fstpt orb pop jae test mov pop mov push fstps lret pop insb pop dec pop call (bad) popa push add and rclb out insl mov jmp jae inc sbb dec mov adcl dec xchg or ds mov pop push lods movsl icebp (bad) add (bad) sti xchg add fstl inc xchg mov iret and cmpsb test or dec mov inc mov jb pop cli jbe sbb sub add sub ja loop push xchg fdivrl mov mov push sti in adc cli sub pop add (bad) dec xchg cmp stos xor into cltd xchg movsl pop stos xchg into popf mov inc add push mov ret ds bound jmp stc pop movsl pop sti les mov movsl xchg fisttpll sub xor xor jo call fidivrl movsl les or jae lret jb out jle jb stos rorb dec push decl xchg add add fisub mov fldenv and jg dec pop div and xlat icebp add sarl push stc inc sti ljmp push mov pop notl stos fs scas mov xchg vmovaps mov dec div jle arpl in xchg dec imul add add out repnz xchg cmp sub sub sti xchg cmp pop push mov or mov es xchg and clc xor jp imul xor adc pop cmp dec mov mov inc into lret push sub into jbe push ret and pop stos sub (bad) in and sbb shrl sbb ljmp jbe data16 cmp inc add das push cmp (bad) aam push loopne mov ds out jo repz fldenv jmp pop or clc ret mov push xor push aam loop pop into dec cmpsb dec mov sub stos pop sbb jmp pusha out mov jle sub jp insl cmpsl leave pop call jecxz pop dec dec add stos out lock scas mov xchg cmp daa add mov sub mov rorl dec dec cmpl push add mov or lods loop leave dec sub clc jbe cmpsb (bad) and push jl pop idivl xor jmp loop (bad) xor mov mov adc mov iret jmp mov imul push mov test mov repnz dec jmp add fstl ljmp icebp cmc int3 adcl adc lahf dec js pop out sub mov gs sub and dec jmp lcall cltd and bound xor jg jecxz lret shll cld push call mov aas les push cli fnstcw imul cmp sub pop (bad) sub in mov test insb ret daa cli jno jbe pop push xor fisttp aaa aas mov cmpsb ds cwtl scas movsb push mov dec pop sub cmc adc shrb push or leave fcmovu int3 fistp xor (bad) imulb inc fwait ret sub push sub or sub xchg sti stc xchg mov je xor pop ds push daa add movsl mov pushl stos sbb repnz cltd push xor lea pop stc stc mov int3 push negl or pop jns xor imul sti sub pop ret enter mov jmp mull and scas pusha daa (bad) mov xchg gs cltd aam jmp pop pop xchg adc popf fldenv imul stos cmp outsb shrb pop dec incb (bad) sub dec addl pop rcrb loopne inc popf mov jg ret mov data16 push icebp mov mov aaa jle fsubr or loop (bad) jecxz dec test dec mov jo mov inc mov ds enter mov es push xchg mov int push fsubrs rcrl jl adc test les leave cmpsb pusha sub leave mov imul movsl inc cmp inc lret xor stos icebp in push pop mov int3 leave or cltd fcmovb ljmp and mov leave sub rorl cltd call lret and subl out cmp mov xor inc xor fdiv ret in repz push lret dec repnz imul jb sub sub sub mov pop (bad) mov and mov sub arpl or dec and ds mov dec jg mov (bad) add mov pop xor repnz mov ret test out fidivr pop into cmp test insb mov pusha clc loope aam in inc sub ret out (bad) imul clc adc lods pop dec cmpsl sub out jbe mov test ljmp mov xorb repz and add mov fs ljmp push sbb adc mov enter icebp xor pop ds mov mov lret cmpsb jl mov cmc mov dec movsl shrb push dec out dec test cli or rsqrtps outsl dec stc sub cmp dec add sahf into sub xlat sti or push dec add movsb inc mov (bad) and jl mov jg pop push jp je int3 outsb mov mov mov pushf add pop or (bad) pop jmp cmpsl aas call icebp jne dec adc outsl inc mov in outsl mov fs repnz leave (bad) and xchg xchg mov sub (bad) stos lret xchg add jae adc stos repnz mov mov sub das inc (bad) dec add pop pop lods and (bad) dec and mov pushf int3 push or jne xchg fldenv jl and lods fbstp cs sub jmp or dec adc (bad) mov pop jmp inc and sar and sub test sbb or cmpb xchg fwait daa stos cmp inc sti (bad) xor add push sbb add (bad) xor div xor les lret sti ret pop inc xor cmc jnp scas shrb sub push cli or pop (bad) cmc push cmp push inc nop cmp adc pshufw sub ds leave fadds adc jno jmp push cmp ljmp mov xchg fisttpl aad test xor adc adc (bad) sbb out out (bad) mov sbb jge mov shrl in xchg or add or ret xchg jbe push push rol xchg cmp movsb inc bound rclb mov push out sub xchg nop xchg enter test scas mov cmp inc jb jecxz or xchg dec adc mov test pusha mov xchg and into inc adc ret add push nop bound mov xor jge in mov sahf inc (bad) and xor ja dec mov mov inc testl (bad) mov adc pop xchg dec sti push out hlt dec jecxz dec loope out add add or adc inc xor add adc mov or movsl inc in data16 jge cwtl inc or paddusw (bad) lret pusha xlat ret stc pop imul push jo mov mov leave inc add ja sub ficomp sti push mov (bad) lret std (bad) ror sti xlat or js pop lret out ljmp rol mov adc or loopne xchg (bad) cwtl aad push adc fildll sbb add mov sub xor sti mov xchg in dec out add insb fisubl and adc jle jns push fmuls mov fimull sub adc int xor or adc ljmp lea outsl sub xchg inc dec mov and mov imul dec fstpl sub sub test mov out add mov mov testl pop jae ficomp xor add xchg push add leave mul pop and cli popf push or add loop rol loope das cli cmp sbb mov dec xor adc pop and sub dec adc call mov or lods dec lods adc mov addb mov dec jo add xor xor mov sub xchg mov out jge jae xor and lahf push popf leave mov jecxz inc dec mov mov stos fucomp add js cs add and loop xchg push cld cmpsb popa adc mov add dec push add mov aam (bad) leave add xlat mov or xchg and js dec fstps add frstor mov xor repz pop and stos lret pop (bad) repz xchg daa sti or cmp nop and daa mov push insb mov sub and xor pop lods in shr jmp mov enter pop mov push jae sub icebp add data16 lods pop cwtl sarl xchg aam jmp iret daa xor (bad) jmp xor cmp ds or fnstsw or lahf daa aad jbe (bad) add daa in mov sub call ss cmp dec xor loope insl jb or xchg sub mov (bad) mov add ds sub loope test (bad) int3 and mov dec fldenv cmp leave push dec lds pushf loop dec or and mov pop out adc add or mov mov repz inc sbb xor sub push outsb (bad) (bad) jo ret subb mov iret or ds pop out loop add sub test xchg cmp xorb pop (bad) xchg ret pusha push ljmp pusha repz and sub sub mov decb ljmp out cli repnz mov ja js jl ljmp test out xor loope aas cwtl cmp daa mov jae sub (bad) pushl jg xchg sub mov in xor dec cs std mov pop cltd into leave jle cmp sub cmp pop scas into cltd xchg add or dec lock (bad) dec and or insb hlt js dec lret int3 and sub mov xchg mov sbb push dec dec dec ss mov push int sub (bad) mov inc xchg cli movsl jne jae add mov xchg and sbb inc testl xor enter sar cltd popf gs aam in cltd jne jmp imul cld popa pop je sbb xchg cli mov jne xor pop dec and push or in cmc ja sub jp and jp add inc dec mov xchg pop and aas mov mov jbe ret jno dec jle jo adc divl xchg jmp push das adc jb out pop pushf push cmpsb in outsb add mov or jg aam mov adc loopne and icebp adc pop mov aam test sub int3 mov pop imul pusha ret mov or rcll outsl fldenv jge push dec repz test je lret jl push mov mov mov cld ret ret push frstor lret mov mov mov icebp into mov sbb jnp sub xor std stc test xor test or repnz mov mov nop xor xchg out mov xchg mov aaa sub out sub out daa or in lds pop rclb stos bound push fisttp shlb (bad) cmp out lods into test mov test mov gs lret aaa dec xrelease xor out enter adc cmp push cmp dec push push pop repz fmuls stc mov push dec cwtl mov pop movsb jbe push xchg pop or and jns movsb lahf bound (bad) push mov (bad) dec dec lock adc (bad) stos mov das or scas (bad) jecxz daa fistl fdivs imull into (bad) or adc xor xchg xor jae das int3 je and mov leave pop in mov sti lcall jns dec push insb lds shrl sbb fisubl stc add xor les or fadds dec ret pop ffreep xor inc jmp jecxz lret xchg dec stos mov xchg gs cmp jg test into popa (bad) inc jg pop hlt (bad) jb jne stos mov xor inc dec scas dec jb sub mov lock je sahf and int3 cmc icebp out int3 dec sub lock call cmp mov pop in cmp rcll or inc xchg (bad) lods rcrb jle sbb add ljmp mov sbb (bad) daa mov inc dec and cmp sub or mov lret fiaddl mov pop shl test movsl mov cli pushf lmsw fist (bad) stc imul xchg scas or xchg xor mov sub mov into nop lahf nop ds (bad) mov test (bad) mov scas movsl jo pop ret inc push xor push jle into leave jmp je push pop std inc or fnstenv in fimul (bad) std ljmp lret flds outsb clc (bad) dec lret and cli adc popf ret add loop test xchg pushl push out xchg inc adc pusha xor outsb cmp and outsb mov jmp push ljmp std xchg out lds scas add lret negl (bad) int3 aad fidiv (bad) imul out jg add mov gs sub jne pop imul data16 inc pop mov xchg add mov jge add jbe adc in mov mov sub out jl dec xor leave jle bound (bad) mov and inc adc xor or sub jge push jmp popf or mov and popf jle imul neg push dec pop lds ja cmp xchg and xor (bad) dec mov xlat fistl jmp lret or or mov aad dec mov cmc in cmp pop jmp pop inc out les cld push pop and lahf (bad) or xchg mov xor repz add jnp or or fild popf jns inc mov add nop xchg cmp loope sub mov loope pop push out or xlat jp push ljmp mov add (bad) xor int jp sbb mov pop sbbb imul sahf jp sub add add popa sti push and clc lods in xchg icebp lock leave mov pop movsb pop repnz in mov or jle enter sar clc movsb int imul outsl test test mov fistpl mov repnz in sti xchg pop aam ret or inc sbbl scas stos jns (bad) mov push aas das loop adc pop in and ds xor clc sti pop out popa dec and cmp mov pop or cmp out bound rorl push mov notl lds ret dec out in popa and outsb (bad) and and pop out mov icebp addb ja stos sub xchg sti pushf push pop or repnz aad sti xor dec jl fsubrp mov inc test push mov mov ret sub les jnp add xchg or sbb xchg mov andl stc mov cli inc ja sahf mov mov into jae adc pop leave bound fcmovb dec fnsave leave les jl and jo popf jne sar sub daa loopne pop fwait jmp lods cwtl loopne pop lret cs out xlat jno imul jl or dec iret ljmp fisttpl movb add add lret mov xor bound push or mov xor fistpll and mov sub (bad) cmp add and ret negb int3 insb or jne xor jbe lret je leave aad negb and and scas xor mov xchg mov lret stos ret negl adc pusha fcmovb xor or popf push fs sub shr push repnz cmp mov out add cld jecxz inc mov imul ret jnp lahf andl loopne sub or xor or aad je mov out or repz inc or jge test ret and cwtl icebp sub cmp (bad) ljmp loop push xchg das jmp pusha daa push xchg sbb fldenv sbb and add sti das repz sbb loope (bad) add push shr add movsb cmpsb mov cmp shl xchg inc sbb sub add xor repnz pusha mov mov push data16 xor repz push ficom out scas mov mov fsubl idivb lret fcompl notl ljmp dec jnp cltd and dec bound xor and sub adc xchg rcrl dec shll mov and add or cmp mov sti sub inc lock dec lock ret movsb aaa lock pop mov bound lds ror and push mov mov xor cltd fisub cmp clc push fldt push adc mov movsl ja fwait dec not adc enter into pop inc xchg shr push jle push (bad) or mov out xchg cld xor (bad) cwtl mov add jbe jb dec fsubr push gs push mov jbe movsl dec cltd and xchg push xor mov inc test xchg cmp cmp fnstcw push ja and fucomip cmpsl scas inc leave std lds es cltd mov call mov icebp or cmp cmp jbe xchg (bad) icebp cltd outsb jg insb movsb mov or dec rcl pop daa sbb or and mov xor outsl mov rorb les sub lods adc sub pop (bad) pop push rolb fdivl mov inc daa in xor aam scas test mov (bad) rorl loope in add pop imul pop push or mov dec leave test addr16 pop repnz ljmp adc xor cld std xlat scas or sub movsb xchg stos je int imul cli mov daa jmp call xchg jae lods je lret pop into out rcll test sub pop mov adc sbb jns add pop repz mov adc cmp or fmulp push jno push jns std adc lahf jle pop ljmp lea pop cltd mov hlt inc jno clc out mov les shrl in (bad) xchg lock div add lock gs adc mov int cmp in jle stos xlat dec fcoml sub (bad) aam xor into pop loope fistl and or aad fs push das out leave pop dec out dec add jns push stos fpatan fcmovne jecxz hlt xor ja dec mov aam lods outsl xchg mov into and pop inc ret adc sti jmp adc and stos lret xor mov (bad) lahf inc mov imul cmp xor inc stos dec sbb push sub xor das ret inc subl mov jg dec mov hlt add and mov mov sarl or (bad) sub inc push aad imul adc mov fsts jne adc dec sub and sub cmp mov sub adc sti mov imul test (bad) repz jne jecxz icebp adc fcomps aam inc xchg in lret imul inc sarb xor test mov (bad) bound sbb insb in (bad) cmpsl push out out cld in push pop imul xchg mov xor out sub mov dec xor mov sti daa ja sbb cmc xchg mov cli ja gs lcall insb ljmp xchg (bad) fcom mov xlat es movsl lds das les add jle pusha xor mov (bad) pop and sbb cmpsb insb test mov or mov push pop mov sbb and lret outsl inc fstps push jle push jge lcall or mov hlt push das repz das pop enter sub stc mov push (bad) out and and lea mov in jns test repz sbb sarl push mov pop mul mov jp mov movb cli jl cwtl loop shlb push dec mov sub lods fs jmp and and xchg decl dec in aaa leave lock imul das sub divl repz mov fwait cmp xchg lahf int3 dec jp pop (bad) mov call add jmp or aad insl mov mov sub pop test bound jmp and sbb jmp movsl push cmp jmp popf add and fcoms shlb mov dec add (bad) bound pop in adc je mov imul dec jge adc out nop (bad) leave out inc fbstp jno or mov (bad) mov imul loop test (bad) pusha lret jmp (bad) mov xor pop (bad) popa movsb and pop mov lret inc cmp (bad) and sub loope movsb test lock stc aad out (bad) mov mov pop lock int3 shll jbe icebp jg std in pop xchg push xchg insl pop cmp cmp and leave cmpsb insb add ds leave inc xchg lods inc xchg cmc dec xchg aas sub push push add push add daa or test or cld (bad) mov addr16 cmp cld (bad) mov cmp out pop push inc test pushl mov add or and xor sub xor icebp idivl (bad) sub xor (bad) dec xchg mov aas inc add sti xor xor xor imul xchg cwtl cmpsl lahf roll sahf pop push xor push push pop bound lret cmc fisttpl idivl lods (bad) mov push mov push leave lret xor fcmovnu or divl cld adc add add or inc jmp and dec push jns test pop dec xor sar mov mov push pop pop xor push sub mov inc out mov rcll or dec inc ja movsl adc and mov sbb sti xchg icebp ljmp pop xchg ljmp push pop loopne ret mov xor call mov jl mov (bad) add push jmp divl outsb and fcmovb adc fbstp imulb popa rorb dec mov adc lahf jnp lods push mov sbb in xchg gs add or lds gs stos sub test jmp pop popa mov jmp push and lds (bad) cmpsb mov into (bad) mov add mov push xor mov fnstenv push xor xchg and sbb imul rdtsc and inc xor imul xlat popf mov popa add mov scas fs add outsb pop dec mov push lcall in ret push mov cwtl pop xor xchg jecxz (bad) pop repnz aad mov (bad) or stc pop mov repz ljmp mov (bad) hlt inc pop loope mov lds sbb fs mov cli aas mov jg and xchg ja jle in (bad) pop popf sub xchg or adc sub xchg add jmp pop mov sub daa cmp je push add pop enter sub xor unpcklps rep cmpsl int sub dec repz cltd pop aas xor jns xchg pop mov sub push add xor sub mov mov or dec ret popf insw pop push in outsl cmp mov lret (bad) icebp repnz addb fcmovnb dec mov mov iret or shr jbe test pop push (bad) jo arpl dec cmp cwtl push (bad) dec and call fst ret xor or idivb out imul aas mov xor insl sub stc addr16 data16 mov add push fwait jmp push scas sub push dec add or popf cmpsl and popa push or enter dec push pop out push pop out add push adc mov rorb adc mov fldl lret or mov mov jge add or push mov adc popf fist cltd adc mov adc cltd dec push dec sub push sub xchg sti ljmp pushf lret sub fbld ret mov ljmp push jecxz bnd xchg cld mov pop sbb push ljmp (bad) xchg (bad) mov xlat (bad) adc mov in loop inc and sub out and mov xchg cmp xchg int sub movsl adc icebp push pop cmpsl push jo mov mov pop rcrl (bad) cmp ret sub call fildll mov mov xor or cmpsb jle sar pop dec push test in mov aad cli loope sbb sub sub and xchg adc (bad) adc mov ja dec mov sahf rcll int or cmc push or dec mov sub or rolb call scas jae push jmp (bad) dec sbb sub inc ss outsl push dec or (bad) (bad) fdivs lea loop imul pop iret je or out imul imul std xchg fadds xor dec add xor test pop imul pop (bad) jg sub ljmp int3 dec jecxz in ret dec mov and sub pop xor (bad) lock sub mov insl mov (bad) cmp jne add rorb cli lret clc push shlb xchg mov lds mov sti loop mov jo,pn jmp fldcw fwait out or mov (bad) fstl daa add push mov lret gs and inc jne stos push or sar fsincos cmpsb dec add push pop out jb je aam xchg lret mov add mov stos jecxz xchg cli sub scas jb repz aas pop adc gs adc icebp adc lock sub mov adc adc add sbb inc add (bad) push cmp stos pusha popa ljmp in add mov pushf cmp and lret cld and out push inc pop dec loope sub or mov inc mov pop jns pop push xchg in sbb and jg rclb sub cli int3 cld sarl or ja dec daa ret repz pushf gs pop dec mov leave inc xor loopne pushl pop xor hlt jp movsl ds (bad) sub (bad) repnz and dec repnz cmp stc icebp sub jnp clc and leave pop pop adc repnz xchg jmp xlat mov aas or fwait mov or lret pop insb js jmp cmp iret pop sub jnp adc cmp sarb ljmp jno inc add jns add jg iret daa repnz out (bad) mov (bad) jp cmp sub loope push dec sarl mov testl add mov sbb xchg lcall imul lock xchg pop xchg in adc lock mov and inc pop dec ror xor int3 jbe fs mov or push mov jmp jns lahf clc (bad) lea das fistl test mov imul ds notl sahf jmp xor mov cmp pop dec dec fistp rcr movsb call das xor xchg dec push add xchg xchg xchg mov (bad) cmpsl and inc push scas mov mov sub jmp add gs scas jae push ret ljmp dec out mov test call sub out into bnd ret loop les add fdivrs xchg cld imul xor sub hlt std pop pop test out jge aas imul dec loop xlat cld in add out flds pop xchg jp xchg es pop stos icebp dec addr16 int3 xor test sbb sub movb add cli mov push scas xor or dec test sbb mov sub sub popl fisubr mov jae and xchg in cmpsl pop push mov sbb fdivs sub div imul mov sbb xchg aas (bad) lretw jmp shll hlt nop mov xchg test add sub sub (bad) jg push movsl sbb sub flds xlat call lods roll stc fnstenv dec aad fs inc cmp sbb xchg xor add test jmp lahf cmp out jb shr sbb sbb (bad) sti jmp mov ss in (bad) jg sbb idivl xlat mov add movsl out pop loope cmp dec std mov scas push xor adc jmp add (bad) in test lds add xchg nop or cmpsb fidivr mov ret add mov pop fs out adc jmp out sub nop clc mov push sub das neg adc pop lock jmp js stc jecxz add roll push aad aas repnz ffree inc sub or or (bad) idivb and aad je dec jge xor dec sub push (bad) gs repz xor push push lock mov ficomp rcrl lods push daa push adc and push and int3 push xchg push bound leave into fcoml sti pusha sbb ror and (bad) fdivrp mov mov adc jno lods loop inc jo cwtl push push ret (bad) and push leave jg int3 test (bad) stos sub sub jbe push (bad) mov mov vmovshdup xchg stc pop sarb (bad) cmp dec mull or out bound xchg add mov sub xchg push pop push xchg bound rclb xchg popa lods or and mov or stc adc mov mov loop push xchg popa cmp xchg push mov jmp cli xchg mov insb mov mov je or or daa fldcw test in pop add imulb jmp and and adc fstl shrb cwtl cltd aaa mov push xor call scas xchg clc push mov test or mov mov dec add cmpsl rcrb mov sarb int cmp xlat movsl cld ss ja gs dec sub cmp hlt cs adc sti sar negl and stos outsl sub mov mov mov lock repnz fldt movsl jne data16 lock pop mov jmp daa jecxz je stc xor pop inc es scas mov mov outsl notb divb push xchg mov jmp mov (bad) push mov in sub lcall mov jbe loop loope mov jp xchg into cmp jp popf push xor leave ljmp gs (bad) iret je mov xchg cld sub adc ljmp pop out push mov out xchg (bad) aaa sub add (bad) jb out pusha faddl stc xchg int3 or imulb cli aad push aad push aad fmuls movsl cmp cmc mov (bad) jmp lcall sub pop cmpsl push ret or push add sub pop xor mov (bad) out sub mov jge imul mov mov ljmp fwait repnz xchg scas mov and cmp jmp (bad) jo cltd je sub pop fcoml popfw daa mov jne pop (bad) das bnd mov int sub and repz clc mov mov push lods sti mov jl dec dec or sub (bad) out sub mov jo dec or xchg sbb call cs jmp dec pop scas and mov stos dec adc push jecxz inc je cwtl sub adc pop sub pop dec xor cmpsl xchg fs repz pop mov pop repnz or cmp push mov and ds sub mov xor push in and sbb in leave (bad) mov mov aas je push scas lea mov jmp sub adc ret cmp add in testl jp fyl2x sub mov inc daa pop clc xchg dec enter (bad) cmp xor xchg (bad) jno outsb mov or sub leave negl lret icebp imul and in cmpsl jne jns pop xchg xchg in inc sub cs out dec mov (bad) xor iret leave lock stos lods push daa mov movsl inc xor xor sub pop in and es enter push mov hlt lds stos jg inc fcoms pop mov xchg and bound movsl jbe jae mov sahf aam iret adc lret and daa and lret pop add and adc orl push sub mov push add mov xor repz adc aam pop jge jmp add cmp add or (bad) pop xchg push addl jne and pop inc inc mov jb add js mov in jecxz adc lret cld repz inc or xor cwtl (bad) mov je inc pop add pop out pop pop out xlat adc add out pop and mov aas add mov fist movsl loop in jg jecxz cmpb add lods (bad) jnp sub push mov or push push jb mov sbb test scas and add mov sub mov mov pop inc out add sub in insb movsl cmp add (bad) cmc and shl sub ret adc add ret pop push mov jno or mov sub push xchg fldl pop pusha push mov add jne aam add jbe bound pop into pop inc mov inc push add mov loope inc jg les arpl (bad) cmp xor sbb mov pop mov arpl loop mov jb jne mov or pop fs cltd dec xor mov fistp imul ror pusha repnz xlat adc cs cmc roll mov inc outsl xor fildll gs call daa or cmc inc stos and repnz test sbb inc add cmp cli loopne (bad) aam push pop lret dec les lock fdivs popa inc pop mov push xor bound in and lcall cmpsl adc rcrb jle jae movsl pop movsl enter mov sahf xlat mov or (bad) pop sub int in (bad) lret call sub add shll fidivl rclb sub pop mov mov (bad) fsubrl pop pop jmp or pop sub icebp or jo repz and notl daa pop sub fucomp xor popa sub cs cmp test stc in cli sub scas movsl aaa sbb shll jg lahf shrl aaa (bad) adc jo add xchg pop mov data16 add loopne xor pop xor loop xlat out jbe inc xchg shlb orb aaa jecxz add out sub xor pop pxor std movsb adc in sub dec jnp (bad) xor into inc hlt add push or dec aaa sbb ret dec mov daa pop or xlat fldenv sub xor jp add mov (bad) ljmp mov mov loop xor dec popf insb cs outsl fisttpll es ds add cmc sahf xchg and subb mov loop fstpl cli sub mov sub mov lods xchg (bad) xor mov rclb out and xor mov or in jle mov lods sahf add sub xor mov jl mov pminsw cltd sti std rorl dec clc rep lds sub xchg and and or das jae fdivl pushf jae popf fmul push mov mov mov leave and lds jmp shrl ljmp sbb leave push xchg jp jns ljmp jno movsl jne jl xchg pop mov sub lods imul gs sbb xchg andl cmp inc pop cmp nop inc xchg ljmp test push sbb andl out or xchg repnz dec mov and out loop ja lret int push pop pop mov mov imul jne ja ljmp pushl ret pushf cmc insb lods cs (bad) push xor aas ficoml pop dec push sbb icebp cmp adc loop shrb daa or out pop nop mov adc add xor mov pop mov aad rorb or push add xchg cmp mov ljmp fimul lock xor sub sub sub push stc cmc sahf sub sub divb faddl or xor and leave add lret sbb adc popf fnstcw cmp je mov mov mov int pop out cmpsb mov jne icebp sub stos aad fisttp scas sub notl push or (bad) mov stos in cmp je dec push (bad) mov xchg mov adc sarl dec lahf adc sahf jle movsl fnstenv imul jle (bad) test sub pushf jg mov push push loopne repnz fdivrp and dec (bad) xor cltd push out aaa pop pop repnz into pop and sub jl dec cmp data16 lock mov stos xor dec push inc add test mov icebp push dec jae dec xor xlat mov add sbb mov (bad) mov push add mov test push fmuls scas frstor gs jge xchg movsl pop jg iret lret sub test lret cmc dec scas sub imul gs xlat pop in ret mov imul stc leave xchg sub xor xor or xchg pop fsubs insl jno lods aam pop mov xor mov pop cltd xor (bad) ljmp out pop cmp bnd leave test push push xor mov sub mov jmp mov adc cmp dec (bad) xor sub jb rcll push jno outsb mov pop and mov xrelease popf xchg xor test cmpsl cmp push or push arpl mov aam aaa call adc hlt push mov inc jp jns gs pop iret fldl stos sbb nop sbb jmp test int mov and mov pop mov mov jne jp jp or xchg das sar dec (bad) mov rorl jnp movsb and pushf push pop mov (bad) icebp mov pop mov out and pop adc scas push lahf loope ljmp xchg mov arpl cli (bad) lock jp pop fdivs mov push (bad) jle adc sub lret out leave mov jbe aaa aam fs popa adc sub sub out xor or divl or and inc cmp and cmp and xchg popa dec jmp jg nop dec (bad) popf sub out adc jge pop mov popf fidiv out dec and test scas out push or pop mov aad adc jl adc stos xor pop push imul popa fstpt mov sub xlat (bad) fist (bad) stos fldcw sub pop sub push in and fist dec in ds mov imul cmpsl pop insl mov xchg fstpl sti fwait cs push mov test mov mov sub sub pop mov mov mov xchg test mov inc push jp jg subb stc fs sub test (bad) repnz dec decl out ja in dec xchg add mov and sub jge mov imul dec or add cs cld pop mov (bad) cmc add fdivl adc pcmpgtd push jmp dec pop inc jp (bad) mov daa fnstenv je push jl lret xor cmc dec mov mov sub mov dec mov (bad) pop jbe push and sub mov das mov pop shrb pop push sub call xchg cmpsl sub xor cli mov pop mov sub fidiv ljmp add mov (bad) mov cmp lret pushl out call and pop xchg clc push add clc push repnz sahf (bad) imull cmpsl notb leave or std dec out add pushl mov leave in cwtl fucom insl and xchg ja (bad) and mov xor xchg daa (bad) fcoml sub or out xor das (bad) jns dec js add outsl in and xor loop xlat icebp lcall dec decb or stc cmp in sbb es (bad) stos pushf push sub in stc movsb adc mov and xor stos clc add sub cld or loope pushf imul inc push ja shrb jns dec mov ret out sub mov insb test mov mov xor ret mov xor fildll push test test inc mov out lret cltd cmp sahf adc scas out dec pop pop add and rcll leavew (bad) imul pop mov fildll pop (bad) jb in in jb rorb fxtract push (bad) sbb add pop ljmp into loope add jmp ja and test sub mov xchg and jp cmpsb xchg mov pop test mov dec and and cltd adc xorb xor mov sub mov bound neg gs rcll jmp clc shld xor movb es or mov push mov jb cltd and ja xor push pop div lea out mov cs xor shll xor popa lds and xor fnstenv and pop dec xor cmp dec xlat cli cmovnp test cmpsl mov mov or and idivl sub (bad) fistpll adc mov mov xchg iret (bad) cwtl pop adc xor fldl sbb xchg iret jmp lahf dec stos sub or xor mov idiv pop loope iret sub lods clc xchg mov andb mov inc jb (bad) mov and lcall sti push daa pop mov scas pop or push cmp iret pop das shlb ss les cwtl sub daa leave jno and xchg sti jbe out scas fs mov ret jo ret cmp (bad) jae rclb imul push cli mov ljmp pop xchg pop mov mov jmp xlat pop rorl dec iret xchg xor call sbb add xor repnz add pushf dec push xlat jb daa mov jno mov or mov fdivp mov xchg loope mov sub or dec (bad) jbe mov sbb out dec movsl mov (bad) cmpsl adc add xchg jg mov pop cwtl xor dec pop fldl push aam xor (bad) fstp adc test adc sub stos in sub push pop pop sti xchg clc out fistpll sbb add int3 cltd fistp decb int3 jmp std sbb and int sbb mov out xor sbb or push sub repz fistpl std add xchg iret pop mul pop or maskmovq testl out or push cli jb (bad) xlat inc mov movq ja jae fnstenv cmp btc out je pushl xchg adc inc lret loope ss or leave mov mov adc jge xchg jbe loop (bad) fbstp sbb sbb and inc sahf pop pop fdivrl rdmsr jbe jns ret pop test mov icebp or bound cli int3 mov xadd movsl ret frstor or jo loopne pop cmp xchg adc lods in xchg aad or dec jle push sub insb lods (bad) cld fs scas mov pop and add sub (bad) sub pop data16 sbb inc daa pop push inc sbb scas mov and push dec xor std imul (bad) add dec push push ror dec lods inc es fs mov push mov das std add movsb aas sarl xor fstpl cmp loop enter inc sbb sbb les inc sub mov xchg jbe leave jne cmp fs and cmp lret adc xchg inc mov xor mov pop mov pop push iret dec lret push stc jne leave add inc ljmp dec jl imul insl inc add lret sub (bad) pop push lret sub mov movzbl dec (bad) repz push rcrl jge in dec mov jp mov movsb push xor fldt dec push out ss jge cs (bad) xchg jge out xor push movsb pusha popf jb dec imulb mov dec jmp push (bad) jl push subl dec or rorl mov sub push jbe das mov (bad) in ss add je shlb ret jns hlt (bad) push mov shll xchg mov sub and jmp add (bad) (bad) pushf xlat xchg (bad) mov jae xor sbb cli mov movsb (bad) cld fistp sub sub cmc ret inc cmpsb cltd jo idivb stc lcall rol push or stos xchg std mov jae push jg and xlat lcall gs repz roll rcrl iret loope add dec dec insl and out dec xor sar fsubr imul push fmull pop cltd fildll lock dec mov and jl pop icebp in mov inc push repz out stc inc xchg test mov (bad) cld jecxz rclb clc adc adc out push lret ret jns mov and xchg jmp mov sub dec lret scas lea fwait sbb push adc mov cli shrl mov daa sbb push push pop mov cmp jae jg mov test repnz xchg popf mov imul (bad) mov es inc or into and jb notl or jbe pop or cmp nop das and xchg adc fsubrl sub cmp ret in xchg (bad) mov scas stc enter push aam sti pop repz push push daa or cmc (bad) mov out cmpsb inc daa iret stc mov jle push and inc pop sub jmp and add sbb data16 push inc stos push or dec movsl test int push cmp xor push sub add pop or repnz cmp pop popa dec (bad) adc in ror sub (bad) mov push add mov jmp insl in adc jne out fs push pushf scas repnz lcall mov test lret push rol scas faddl inc ret cltd daa lret fstl mov (bad) shr dec rclb inc fisubr pcmpeqb xchg or add lock xor sub mov (bad) dec dec jo rsqrtps roll adc and fs mov jg add inc jg mov mov sub dec pop dec in cli sub jmp ret xchg xor ljmp add and dec jb inc or dec push mov hlt out mov gs lret scas pop xor mov xor stc dec leave jmp jns gs dec addl mov rol mov fidivl push or hlt pop jge mov out push cmp inc lret dec in test xor out push xor inc adc inc repz (bad) fidivrl das out lcall ror fdiv adcb imul add mov xor jbe pop mov cmp and data16 sub fdiv (bad) (bad) das mov adc ret pop jmp push (bad) push mov jg pop (bad) ljmp rcl mov push or inc xchg push inc dec iret out pop mov js xorb (bad) xor dec push ret cmp (bad) icebp mov inc cmpsl out idivb mov cmp out cmp add dec xchg fsubr xor dec sti scas xor push cld xchg movsl xchg js mov or std inc mov int3 mov or pop add sub mov rolb aad icebp xchg xlat push pop pop out mov dec ljmp lret aas cmp lods lret xchg divb sub cmpsl push clc mov inc sub aad lret cmp pop cli xor inc add pop jns enter stos adc cmpsl in dec xor cmp mov dec decl out mov dec (bad) int3 lods or (bad) mov pop fucom mov inc movsb and lahf xchg jo dec add faddl outsb push pushf sub push mov idivb into and add mov nop rcrb jmp mov jg nop and cwtl mov xor and cwtl (bad) push mov sbb (bad) ret mov add xchg pop stos idivl dec ljmp stos jmp push pop stos ja movsl xor fimul lds gs out xchg ljmp mov lods imul pop imul cmpsl std push loop fsubrs movsb scas clc pushf daa add or inc jno dec or xlat icebp and jns daa hlt out xlat mov dec test out mov cs xor cmpsb dec mov mov fstps mov mov scas xor (bad) (bad) mov xchg sbb dec adc (bad) xchg jg out mov fcmovnb sbb mov xor cmpsb push mov and mov xor pop pop mov mov es (bad) fist cld stc arpl pusha jg inc mov jmp sub xchg jecxz and pop jmp push and insl xor and cmp out dec iret stos popf dec and enter mov sub loope (bad) leave sti sub sub xor xor lret imull and ret jae movsl pop cmp sub sub push inc inc mov in inc add repnz dec out push ds int adc shrb rcl popf (bad) jmp clc (bad) add and cmp cmp lock mov add or add mov xor sub add ljmp pop ja dec out pop out push scas mov ret and sub and mov sub (bad) leave shlb adc cmp adc inc cs sub xchg jb mov pusha scas push push in add and adc dec dec mov decb sbb icebp sub cmpb lahf cmp test aaa (bad) call mov nop lret sub or pop lcall adcb jb mov dec std lret ret xor popfw fnsave xor and out in and or cmpsl insl and lods fs mov mov adc fstpl or inc pop adc sub mov sub cli bound (bad) push imul and push push sahf sub scas mov lret clc xor or mov mov inc ret pop and mov mov add ljmp lret cmp mov jg add add iret lock sub test loope mov jmp xchg cwtl sub leave icebp push mov sbb jge cmp xchg ljmp mov sarl or mov pop imull daa fldl and ja or lret add sub push jo pop mov std pop mov dec push push xor cmp xchg lret stos bound inc and xor add push push bound and add pop cs and fsubl addr16 popf (bad) and push push jnp and adc cli add xor mov mov call popf pop movsl shrb mov dec int3 cmp sbb mov mov add mov sbb jecxz scas dec mov mov pop cli xor cmp movb pop fcompl call sub ficom ljmp icebp in push cmp mov mov outsb mov xor repz mov inc add xor sub popf cmp int3 out jns xlat inc leave and mov ds xor jmp lock inc enter cli (bad) jecxz jne (bad) out cmp bnd mov pop (bad) and ret outsl in or mov push xlat sub push es fadd mov loop (bad) pop dec xchg iret decb ficomp and daa popf sbb push or ja xor push cmc icebp test in mov mov rorl adc sti push (bad) mov dec mov inc (bad) mov push jns dec cld pop call and push (bad) mov xchg xchg mov fisttp mov data16 out inc mov jmp (bad) push dec sbb popf push aad mov call xor mov out (bad) fmuls ret push jbe push add add aam adc xor enter mov push adc sub sbb or pop sub adc sub push jmp cs aad (bad) rclb push sbbl cld icebp in xor add mov in or scas sbb mov or lea pop in sti (bad) iret or jle jnp stos fsts imul lret push neg ret outsl sub push icebp das mov xor testb add sub cs mov sub in add test xor jmp scas adc sbb mov ljmp jno jbe jae out aas and pop loop sub add sub ucomiss xor outsb mov in mov sbb rorb dec sbb jne mov push iret dec out fs cld jmp and push movsb repnz add mov (bad) and lret lahf push xchg inc sub and pop scas imul sbb mov and add mov in mov mov lret dec pop inc (bad) inc mov and adc loop xlat mov ret cld divl psubb test xchg fdivs out jb add int das test movsb mov dec clc cmp hlt cmpsb inc xchg sbb push std notb hlt std (bad) jbe daa or cmp push int3 test mov ret push dec or ljmp mov jmp jnp push add add mov fwait or cli jl and sbb mov add push sub mov or (bad) and into sti and je test jge insl adc testb inc mov mov mov jle imul xchg sub cmp xor and mov and call lcall sub jmp mov (bad) mov push ret bound mov (bad) mov sbb xchg mov (bad) mov sub std mov sub lds adc cmc stc xchg xchg mov adc or in pop mov and mov xor add add lds add test pop int3 jne (bad) lock xor je sti and cmpsb push das xor mov push xor (bad) movsb popf xchg scas xchg push push jb or cmp jl dec push pop jo movsl ret mov fs rcll clc movsl dec mov mov jle (bad) daa (bad) rorl sti lret rcr lds rcrl (bad) xor xchg mov in dec cmpsl or adc fldt loopne inc iret es adc test (bad) jmp int3 in icebp lahf push push inc pop loope xchg ljmp sbb out xchg sbb and and pop add popf sbb cmpsl push xchg addr16 jmp sar sbb test sbb stos mov push sti mov cmp scas xor sub (bad) jnp xor push gs mov bound push or cmpsb or shrl fimul mov inc jno mov lods test mov stos add and xchg pop cmp lret stos insl les fcomi repz cmpsb lret mov leave sub inc mov xchg test (bad) daa jg xlat and add subb lret or aaa push or push test push (bad) lods push sahf scas mov adc xchg scas sub icebp xorb leave (bad) mov aad sub xchg or xor mov nop cmp outsb call and xor and push mov pop push dec push mov cmp test stc shll or mov movb dec icebp mov repz mov fldcw dec shrl leave or scas pop cmp andl xchg push xchg or clc dec subb aam xchg das jge sub in js std or cmp jecxz aas pop or arpl and fsts jg push and jo dec xor xchg or mov or repz mull lahf out adc jne test inc movsb test pop scas gs testl int3 scas sub std inc push in jb push test sub rcll mov loop mov mov rcl out dec int3 dec jmp xlat xchg inc mov inc cmpsb ficomp icebp test xor repz inc xchg shr dec xchg aam sbb jb je ret jg xchg sub call leave pop xor add sbb xchg sub xchg mov pushf pop aas (bad) dec adc xor add cmp jns pushf lret test aam pop rcr adc and sbb pop xchg popa dec leave in push sti push add fsubs cltd lahf cmp jmp test bnd scas or sahf lcall lea and test xchg or jecxz and sbb push cmpsb test pushf push call lret outsl int jmp lret fisttpll movsb xchg lds inc int3 and dec gs push push cmpsb (bad) ficom adc xor add test mov daa xchg smsw mov pop cmp push (bad) leave lahf pop sbb sub and out or add fidivrl push loop push push mov xor mov pop add jl mov rcrl ficomp jbe xor mov lret mov dec pop or jg sbbb ret mov cmc mov (bad) dec inc sub pop jb add push out into shrb xchg repnz (bad) decl jg (bad) mov jecxz sub jbe clc stos les dec aas xlat scas icebp pop mov (bad) mov lret out adc inc dec stos lahf (bad) cmp jo pop mov lret cs mov cmpsb jg ljmp test jg mov bnd fbstp push insb scas jo mov enter adc out adc idivb mov cwtl sbb sub mov pop add sub jne inc sarb and xchg out lret iret push xchg cltd add cli sub add mov or and xor daa inc mov int3 sub push jmp xor das or lcall dec aad stc sub adc pop mov shll gs pop jle (bad) ss in sub add jb cwtl jmp (bad) mov pop mov and movsb push mov scas mov cmc push mov ret push push leave sbb (bad) out jnp mov aas sub mov dec push test cld cli mov cmpb movsl fs and add pop mov jne mov jmp pop mov into icebp cmp enter xor into scas jno and cwtl sahf pop iret sub mov jp inc mov or dec push stos lcall xor mov jmp lds and jmp cmpsl mov mov sub (bad) shrb sbb lret jb push dec ja cmp fisubr insb mov adc movsb out mov mov (bad) js jl loop lahf sbb add popf pop leave pop (bad) mov je mov or ljmp xchg cmp xor sub push cs movsb and out or cmc out adc ss fimul jge gs mov fisub loop xor adc inc mov push jnp mov cli mov negb mov add fdivrp cmpsl roll and pop int3 fnstenv jg push sbb dec mov pop scas xor test (bad) and mov xchg sbb mov (bad) insb jae in gs fimull xchg clc sub fsts iret xchg or andb loopne je repz fsubrp leave or daa inc rcll jl scas pop ret jmp xor xchg scas int3 mov jecxz and and aas mov dec cli and push or popf pop push jb movsb xchg add cwtl and and cmp sub negb mov push pushf (bad) add scas jle cmp das push fnstcw sub idivl (bad) xorb xchg mov mov pop cmp (bad) bound push jns dec add pop jl xchg lds push pop les scas sub mov dec xor mov test and and and jp pop add fwait das cli scas leave dec divb daa repnz jmp repz push or loop rcrl mov pop dec insb mov cmpl mov dec sti lahf and mov cmpsl (bad) ds xchg jmp data16 xor xchg cli xor lret (bad) out out lret push test icebp loop ja stc mov cs add (bad) jmp repnz jge cld push mov push mov mov outsb adc icebp xchg (bad) cmp sub jge and xchg pop sti xor pop shrl push das xlat fwait jnp flds lahf lds cmpsl rcl sub jg push and aaa mov aad xor aad pop dec pop sbb dec pop pushl adc nop push sub adc (bad) sub or out cmp dec fs cld inc mov (bad) add cli mov clc or add (bad) jg and je test into mov and out push or lret lods mov sub and dec and gs test les ret cmc xchg lea mov push leave fidivl sbb sub notb lcall xor stos pusha jnp add in adc jl push les rol in jno leave xchg scas adc adc lock mov ret ja clc mov ret js jae out jecxz sub loop flds dec or sub fimul hlt popf fdivrs lcall pushf outsb dec ja adc stos lret fisubr dec lcall std add and xor add in daa add aam in push mov das (bad) sub loop,pn (bad) cmc dec stos les sub imul sbb pop dec out mov pop xor out dec les xor test test lds into jmp test and push mov add stos gs mulb jbe push lcall mov pop push mov jno dec les sub arpl pop sub je (bad) mov icebp aad xlat stos ja fwait xlat push push xor or mov jnp xor stos (bad) cmpsb ret push jo pop sub lahf and fcompl into lret ret pop add or xchg fucom or fist sub jp jae push xlat mov dec jne in sub outsl (bad) cmp xlat inc jmp and movsl jno jmp cltd cmp cs lds pushf jbe pop movsb jb adc outsb lret out and ficom mov mov cmp pop je ret pop sub out mov sub jne cmc push into ret pop int3 adc dec (bad) arpl shl dec lcall jno (bad) iret ljmp out and mov xchg or mov stos cld cwtl push cmp ljmp sub mov and adc fistpl sub jmp repnz jmp lods rcrw andb pop add stos je mov and popa stos xchg adc sub and stos mov movsb out mov test xor mov (bad) dec mov cltd mov insl mov xchg pushw idivb das repz or or xlat fldcw std xchg and dec jle push in push pop mov pop lods jno dec sub sbb adc cmp sbb out xchg fist call jbe imul push mov sub and rorl out jge mov cwtl sub push xchg pop adc mov mov sbb inc and add adc loop sbb pop inc pop ficoml dec push hlt test repnz mov aam pop pop out movl shrb imul xor jmp lret ret lret (bad) (bad) push xchg xchg fisttp fprem1 sbb fildll rol frstor xor scas or rcr pop xor mov and dec sar enter popf lret shr test add jb sbb push add scas cltd test test repnz xchg xor mov mov scas cld jo ljmp mov push les aaa fwait dec and sub jp or xor add cmpsb dec or sub pop test mov pop mov xor sbb or lahf adc cltd jge clc scas xchg mov iret dec xchg imull and sbb or jo adc and rcll jmp daa sub push cltd or sub call sub cmp (bad) mov jne out cmp mov or (bad) push data16 mov push pop ret mov mov incl ja test fst sub pop push pop nop call (bad) shll cmpsb mov lret xor and cmp mov cmp adc xchg push mov or pushl ret test sub maxps jo mov inc pusha dec js scas scas out das (bad) xchg jmp or gs and cmpsl and or xchg xor xchg les lds rol or aaa ret sub jnp sub cltd popa mov sahf lods pop movsl jmp and or into add mov sub imul dec mov inc lret and shl or sbb push inc push daa cmp xlat in mov cmc dec mov lret adc ret out jl (bad) cmp aaa push xor inc addr16 loop push pushw cli lea dec imul bound sub jb and incl std adc xchg fidiv adc or jno cmpsb cltd scas repz ss pop or or push daa leave sub les inc or cwtl (bad) out test push and pop mov xchg xchg leave out pop cmp mov mov je sar or inc ljmp (bad) int mov sub js ss mov sti jl cmpsb mov mov out xchg sti dec xlat test popa ljmp dec jbe mov (bad) or les lods push lahf mov add lahf aam pop out jmp ds dec ljmp mov (bad) ljmp dec movsb call scas popf pop pop push pop xchg in aam leave fiaddl nop inc ljmp inc and pushf cmpsb add repz test out decb adc sub xchg icebp or sbb or mov mov ljmp push movsl push (bad) adc lods fstl clc fsts cmp push sub scas sub movlps inc jns enter jp sahf and pusha clc cs into (bad) add sub mov push dec sub or dec mov adc mov pop xor mov ds push mov out inc shrl push push sbb push push outsb pop xor movl pop sbb in add add idivb push (bad) lret pop pop push imul push je mov pop rcr test sbb (bad) inc fstpl rorb (bad) mov pop ficoml rol shrl inc xor jmp ret lods (bad) cmp inc lahf fstpl out out sub ds orb sub and mov push sbb adc in vpaddsb push xor sub push or test fsts fsubs jmp inc mov fcmovne jle mov outsl add pop push mov xor out add sub ljmp pop adc or xchg sbb push adc js lret jle pop xchg dec pop and cld in in push push xchg xchg not cmp cwtl or faddp insb mov js inc adc lahf shll (bad) add call icebp xor push cmp aas or in pop mov or adc rcrl inc stc ds sub pop dec aaa and insb xor or pop in sub inc add and pop mov je nop sub dec push orl jnp add push xchg out idiv push fwait sti jb pusha js sbb imul sub or movsb jg pop outsb lds inc cld sti les clc jle xor pop mov sbbl jg stc push push and rcrb cmp test push push sbb incb add pop xchg jg xor push mov aaa call pop mov dec mov (bad) cmp cli ja rcll jo mov adc fidivl stos sub mov in or sub and push sbb add aas das ret jb add lcall jmp and sub sub cmp fcomi loop fldcw imul xor adc push loop lahf adc sti mov jno leave jno cmp negb add (bad) jb dec ror test stc jbe dec cld decl jns sub (bad) mov cmp les idivl dec inc lcall in cmp iret (bad) mov imul imul sub popa lret or xor (bad) cmp pop out sub mull lock xrelease out sbb cmc sbb or out fsubl call pop mov lret xor dec add inc lcall ficomp xor mov inc mov lods inc cmpsb sbb stos gs js,pn (bad) divb mov (bad) mov push mov cli cwtl push jmp sbb jb lods cld xchg lea std push mov jbe ret dec icebp repnz je push add inc pop sub idivl pop pop std mov xlat leave cmp ret pop rep dec jmp imul (bad) mov ljmp outsl xor add leave (bad) and or push stc and stc push hlt mov or and push jmp dec sub pop icebp (bad) cli (bad) ret mov js mov cwtl cmpsl sub gs cmp icebp mov dec idiv dec mov lods (bad) mov dec call sbb add mov push in sub test jno pop mov or incl daa ja imul xchg cmc mov add xchg xor nop iret dec loope sub mov inc loop sub dec push lcall cmp push jecxz out or mov ja aas inc jmp and pop adc sub in scas lds scas adc pop sti out sub and xor fnstsw clc fdivl pop add push out mov shr mov pop add loop orb mov dec shrb add (bad) imulb mov pop jecxz xchg cmpsb add and jg loopw int3 mov inc add xor sub jne push inc iret stos pushf and cmp gs sub divb jmp add (bad) int3 mov fnsave test gs mov cmp (bad) jne cmc gs in or movsl jg xchg xchg cwtl and and stc and adc sub cmpsb pop daa ret fs mov pop lods std xchg dec cwtl and and shr cmp aaa cwtl out test popf cbtw jb pushf mov js or lret sbb sar dec loope jno or in idivb xlat test in repz test dec cli mov std loopne iret and loope and cmp outsl lret jp fistpll dec incl addb mov lret xchg jl leave jg pop popf xchg nop dec out fldcw test fucomp adc push cmp ficompl xchg jecxz push inc xlat cli or into push inc push sub shll and clc pop xchg sbb pop testl xchg test int sub cmpsb add fcoms xor rcrl adc out inc cmpsl gs scas data16 and (bad) cs (bad) aaa mov (bad) mov pop repnz mov dec pop inc sub out popf sbb fcompl sbb dec subb cli in icebp mov and test or inc aad shlb pop jl or and sub pop xchg clc in push mov xor sub (bad) add push les xor sub mov sub stc cmpsb jl mov push add pushf sarl repnz xor jecxz jae and dec rolb sarb pusha movsb into add cld pop push add icebp mov in or push mov and ljmp fdivl aam mov or pop or movsb jg arpl ret icebp inc jg inc dec inc out cltd mov xchg adc push dec or (bad) repnz lahf decb jmp ja xchg mov xor stos cmp clc push mov xchg sti sub xchg jl cmp cmp dec xor xlat out mov daa out outsb lds lock fcmovnb stc push push aad push int ds imul in in or lcall bound clc mov (bad) fildll mov es lcall das out sub mov lahf cld les pop iret add jae ljmp xchg repnz jns dec inc sub mov outsb mov shrb mov nop dec mov xor adc mov jmp add mov jnp add xor popf test pop mov xchg sti pop inc (bad) mov test mov mov test (bad) scas jecxz mov jle in scas test xchg and je sbb push adc pop cmp adc pop ds aaa mov xchg sub aaa and stc inc shrb scas jp xor loope add adc push cmp dec adc fcomps mov jle rclb push dec pop pop icebp mov das add mov lcall leave xlat clc sarb out in pop add cmp cmp scas mov jp (bad) std gs fwait and sub jecxz aas clc push mov fstp cmpsl mov push sbb jl push jne sub xor mov ljmp ss or (bad) pushf or popf lcall sub into pop insb or push push je dec fidiv add xor clc lods or sub movl inc push or loope in mov sbb cs das repz testb and stos pop negl (bad) and clc popf pop push sub lret jle mov xchg adc add push and sub lods daa inc fisttp jecxz pop test jbe adc aad xchg aad loope cmp das repz shr xchg push jl pop inc mov jbe sbb gs shll ficom and cmpsb into in outsb mov test sarb or mov arpl out xchg xor jnp stc mov jb imul (bad) imul push mov adc lret cld in jmp insb test jmp lods pop stc add sub cmc jmp cmpsl data16 sub rcl inc cmp adc mov jecxz pop add sbb mov xchg int3 fcmove inc inc sub and gs push dec int bound sub mov xor mov (bad) sahf (bad) out sbb (bad) cli sarl push inc ljmp jg imul jmp adc sub xor cld (bad) pusha mul add dec jecxz push jae sub lods fidivr int inc mov sub cmpsb cmc and and cmc outsb sub mov jl push (bad) mov cmp add leave cli mov sub add stos les lret inc cmp ljmp sub dec push cld movsl sub mov int3 mov or xchg mov cmc push cmp sub add popf in ret call mov out pop (bad) pop dec (bad) mov jns imul dec movsl mov dec or leave loope sarb insb repnz xor scas dec movsb jmp pop cmp or or aad xchg out sub cs or fistl cmp outsb rorl mov xor jge test nop push add in xor (bad) or pop mov adc pop lods mov scas mov xchg mov shrl (bad) jb lods lret mov pop xor jecxz cmp inc jno sub das in rclb inc push mov xor stos out adc inc clc iret movsb clc cmp inc xor movzwl fild outsb jmp sub int jle add cmp aaa sub outsb mov pxor fldt add push and mov fimul and call cli mov jo pop cmp sub rcll or hlt adc adc mov (bad) pop in sub in das int3 mov das add call orl repnz add add sahf outsb add dec outsl clc je stos lcall (bad) jg and sti mov les arpl mov lods ror rol lahf lock sub popf fstpl js leave mov push notl stos sub das mov (bad) sbb or xor js les scas cmp int incl dec pop mov push push inc adc mov pusha or cld in pop nop sub mov notl or pop push loope outsb gs ljmp int3 jg or shl or pop add mov or mov xor iret pop ljmp cmp (bad) pop pusha paddsb cmp mulb and in fisub sub push xchg mov ret pop pop repnz mov out mov or mov mov aam call and mov (bad) push xor into mov ret push outsb push or lock addr16 inc movsl clc pop sbb mov fisub scas je push fisubr add jl sub adc rcrl inc insb pop pop hlt ja imul cwtl lret into push ds mov hlt push mov test jns add pop xor sbb mov mov cmc pop add loopne sub jg add imul pop inc add cltd out xchg xchg aaa cmp dec inc xchg (bad) out add dec sub add xor fdivrs mov cmpsb data16 scas jno test mov in mov mov lods xchg push js mov dec pop nop movsl mov mov outsb or cmp add mov and fidiv in push out push jp sbb jo mov movsb push pop add rolb in (bad) fdivs sbb pop and dec xchg inc inc popf pop aaa adc movsl xchg movsb pop sub out xchg mov add inc inc imul cmpsb out and xchg xlat lock adc hlt jbe add rcrl xchg fist xchg in je clc ja push jmp add sub push or sub and icebp roll iret out lret xor data16 lcall adc mov xor cltd sub pusha push xor xor or sub ret add cld pusha xlat and sbb dec sub lock in jmp popf xchg ret jge fdivr arpl mov cmp mov daa mov xor (bad) jg in (bad) or cmp shr fs xchg cmp cmp adc idivb cmp pop into scas sub and cmp popa mov mov jmp mov mov div mov hlt pop gs mov xor ja cvtps2pi push out jmp xor mov out cmc sbb add sbb xor std or popf inc imul cmp rorb out xor inc pop cmp cltd xor leave jle,pt jnp pop popf pop cli popf loop dec fst pop sub shrb jle jp jno scas pop xchg stos pop add sti jmp dec cs les (bad) leave das mov jle (bad) fist test loopne out mov and xor mov mov mov pop lods jbe pop js xchg xor jmp or pop out xchg out (bad) mov sub or adc push into in and imull jae mov pop pushf lahf dec sub mov push sarb mov and cltd push push cwtl dec xor jmp in aaa lret mov (bad) sbb xchg adc xchg mov sub loope cs fistp (bad) pop lock pop add mov mov mov mov jmp in sbb icebp sub movsb es add and loop mov dec sbb dec or out xchg lret and mov ds loop mov pop icebp pop sub ja cmpsl cmp mov sbb mov xor cwtl das add or mov pop int3 (bad) (bad) lret (bad) mov push xchg pop mov ret mov add ljmp aas fstps mov cmc stc stos imul jl or or mov iret add out and push iret jb (bad) dec je cmp ret pushf inc lret out in daa push aas xchg out cltd mov sub das push xchg popa scas push and push xchg inc or push mov popf test ljmp lret cmp inc scas gs xor and mov idiv xchg sbb mov loope mov jo pop sub pushf or imulb mov out pop jno push out mov xchg jmp sbb out (bad) xor ds dec cld fcomip call and (bad) mov popa repz test test mov mov xlat imul push in dec xchg add add negl les loope inc and popf icebp stos pop or add xorl icebp lods aaa mov add dec iret lds (bad) sahf mov iret xor jmp loop fidivl xor cmp jge dec pop imul repz adc in pop xchg mov dec inc ret push fsubl mov repz add cmp fstps mov mov push inc or jmp imul movb lods ret (bad) xlat pop sarl and jecxz gs ljmp ret mov daa push data16 test divl fs (bad) in std bound lret pop mov pop hlt movsl inc lahf cmp je lret mov leave sti pop mov jbe and xor ja pop mov adc sub sahf pop icebp stos push pop adc cltd sub sub dec or inc imul cmpsl fs leave lcall dec decl mov adc and jle rcr jle sbb pop in xchg clc mov add pop xchg imul or push jge test inc dec jnp lods inc xor test push sub bound loopne mov hlt add mov or push pop cmp cmp and stos popa test mov push repnz gs mov stc outsb lret pop (bad) and or sbb enter push lods push cmpsl (bad) xchg ret lret imul cmp adc pushf inc xor out cwtl out and pushf sbb repz mov mov or jge fisttpl imulb dec sarb jmp pop xor mov mov cld push mov lret xor xor xor cmc arpl test mov adc shrb adc xor mov xor mov adc or pop xor xorl fldt lods mov xor push out mov sarl mov cld and out addr16 sub push leave loop fist jmp jne dec popf aad cmc repz cwtl cmpl and pusha sub dec and mov mov repnz dec mov leave add jecxz sub cld or xchg mov add scas mov test out mov pop std fldcw out pop dec sub fidivr call xor inc sbb stc aas push push add pop test jmp dec andl or insb cltd mov aaa rcrb dec sbb int3 inc xchg xor xor rorb jg xchg push mov daa pop jnp mov inc mov mov (bad) call push bswap pop add imul shrl leave gs inc pop jnp sub and aad mov xor xor mov out cmp cs sub push dec push mov test push ds sbb lock mov jno dec xor out sahf push mov mov mov repnz mov and out add jle clc xlat pop adc (bad) pop or xchg lock or (bad) xchg fs int cmp inc dec aad or pop cmpsb daa stc cmpsl imul ds jg shl sar pop jnp addr16 pop add cmp lahf aaa shlb dec sbb jnp pop add add mov inc push pop iret xor or lret cmova mov jbe (bad) rorl push push shlb push pop push mov sub jle int adc ret push clc fstps enter icebp push mov fistpll (bad) xlat adc push jmp sar jne in push cmpsl pusha jmp xor je in xor or punpckhdq cwtl pop mov or push push mov clc add fbld loop sbb out outsl and adc out add jge imul sub pop and pop (bad) je ret xor push add rclb icebp pop mov scas sub add loop or fdiv iret add cltd flds rcrl jmp rclb and pop inc cld nop pop repnz pop cwtl jo roll sub roll pop pop out or or pop cs jns sahf push out fld outsl fcoml out hlt adc lret push clc and add adc push add lret repnz stos fldenv es adc add adc dec insb ds sub pop mov push outsb mov mov dec and mov imul mov or icebp jle cmp out fsts cmp mov mov add mov test xorl call xor adc test or cmp fxrstor idivb sub inc test mov call or daa notb pop lret push inc cmp mov stos xor (bad) or test test mov std addr16 and flds add inc jnp xor out cmc cmp fnstcw jno dec inc (bad) popa xor cs movsb aaa lret adc pop and mov mov push push iret lret das (bad) lret mov scas mov sub cld mov or lea ds das repnz xchg fstpt fbld (bad) mov negb pop jge negl inc cs les push sub jp adc mov call xor fistpl das add shrb clc push mov cmc push push test pop add int (bad) lds jo sbb jns push test sti jb adc inc mov sahf mov mov xor mov mov icebp dec dec mov cmp jae scas sub movsb mov cltd iret movhps lods sub fdivrl mov insb add dec data16 mov adc add dec mov rclb adc in cmp mov cs (bad) sahf push adc movsl idiv sub mov push popf xchg out mov sub lret in scas xor daa dec incl xchg sbb adc call jecxz,pn sub jl add pop push test push jl test fistp pop jns and sbb mov (bad) xchg daa out adc and daa and mov and sbb sub xchg sbb idivb fdivrs pop jno and mov pop es ljmp xchg cmpsl lret push cmc inc xor xor into add and (bad) mov (bad) mov outsl mov fsub (bad) cwtl movsb lahf mov in popf test jmp mov sbb aad jno out mov orb es sub movl aaa mov adc mov dec add add xor xor (bad) leave fbstp ficom add sub sti cmpsb push dec fcompl lret add xor inc sub cltd (bad) js shrb lahf das stos fs call ret aad flds (bad) aam inc jbe mov or add mov out xor mov test mov lcall xor add add mov andl xor mov pop int3 push icebp sbbb fcoms pop mov dec push sub xor (bad) cmp lods pusha and add cwtl sahf popf aad das or (bad) rol fidiv push lock out xor or sbb into mov xchg stos fsubs mov dec pop scas sub xor push dec adc jmp mov sbb mov dec and jmp mov mov adc out push jmp push es and xchg xlat test cltd push cmp (bad) push hlt mov mov test ficom pop pushf xchg sub and cmp jecxz dec dec dec jne xor les testb into pop cmpsb je inc idivb sahf jb add add aam xor in lea adc pop pushf adc jmp jmp pop inc aad sub cmp xor and hlt sbb jns scas xchg fsub je pop sub cmp and bound xlat js pop push scas gs add jl sub add idivb aam insl enter xchg mov loope sti imull in push (bad) mov cwtl sbb lods mov dec lods daa mov sbb jmp xchg mov pop mov scas adc sub push std stc imull repnz es adc cmpsl ja ret iret outsb lret mov cmp stc pop jno insl mov cmp out and xor mov ss scas int3 call and pop mov xor push sti push movsl out pop (bad) mov or sub or and push jg out jp adc repz pop loop mov pop repnz pop in (bad) adc scas imul mov notl push jno push cmp insl and pop pop mov mov decb and xorb insb dec inc add bound dec mov cmp popa mov xor jl mov or ljmp (bad) int3 pop push sbb mov das ret or loop insl and sub cmpsl mov xor and pop (bad) out ja mov push add adc mov jmp sub jg stc xor jns test popf jge adc jno and imul leave jmp lret sbb and cli or repnz in and pushf mov cmp ljmp xor sub lock repnz cmpsb daa mov jl inc outsb int sub movsb cmc fs das ret movsb mov fsubs xor repnz mov or cwtl jo cltd int repnz or fxch push jno enter sub (bad) dec in les and ret xchg jmp pop das jecxz adc (bad) mov and lods mov inc mov xchg data16 int3 or xchg cmc mov shrl sub jnp cld pop cwtl mov inc pop sub add icebp test scas scas cmpsl decb lret ret jbe add lods notb outsb ret inc daa adc pop mov mov or push pop push lcall ja incl sti mov dec bound shl outsl or aad pushf dec js mov mov pop cmp mov in xor inc or push xchg xchg mov mov adc mov sbb adc mov popf xor mov clc xor xchg inc cltd inc dec pop es bound ret jne in mov mov sub scas pusha push out add xchg mov ljmp push cmp mov xchg sub push inc outsb pop lret jmp jl loop mov mull lret mov loop lret (bad) cmc xchg lods mov jmp notb pop ret xchg fnsave add mov sub or addr16 jne xchg jbe pop ret or mov ds mov lret jns mov inc movb inc out clc xchg movsb (bad) call test pusha (bad) mov or add dec dec mulb and fmuls ficom into pop stc lret test push cmp mov adc xor mov out arpl push xlat or mov aas push into cld pop adc cs add or (bad) lret enter rorl pushf mov lahf push lds and aam jae push sub sub mov or sub sbb and jle (bad) xor daa cmc sub fisub testl aad movl mov dec lret repnz xchg add or mov adc int3 shl jp stos xor sub mov sbb xlat mov xchg int3 test mov sub jmp cmp jl sub ret dec in push lahf jae add or test mov lcall mov loop add fadd ret movsb sahf dec and in mov xor xchg rcll cs int3 mov pop fisttp into add and mov add ret adc sbb or lods insb addr16 sahf fcmovb js dec (bad) mov lods ret xchg adc xor mov sbb add mov gs gs clc je fcomps or sub jge xor scas fisub shl mov inc mov cmp sub repnz fisttpll fild xlat mov xlat push cmp mov imul stc loop mov mov sub pop mov out mov mov fnstcw cmc inc jle cmp mov pop inc or imulb sahf (bad) stc leave inc repnz or sbb fucomip outsl stc (bad) cld jge xor aam jmp dec sub (bad) lret cmc mov push jecxz mov pop andl repz pop mov fnstcw fisttpl out fistl sub das (bad) aam imul fsts imul dec (bad) stos bound mov lret sbb and inc enter push into or leave enter data16 lahf pop mov pop xchg int3 sar mov inc call (bad) mov (bad) jp pop sub addr16 mov popl mov daa (bad) fisubr sub dec or inc mov xor sub dec lret orb fcomip enter cmpsl adc int inc or popl cmc add jecxz mov jp xchg push add sub mov push lock mov xchg push dec imul lds adc iret loop (bad) xorb mull dec out nop mov mov sub or lock fldpi test xchg icebp aaa movsb mov gs (bad) out push mov adc in xchg movsl stos repnz aad (bad) cwtl out arpl inc jae xor scas xor iret jmp jns xchg cli mov mov jno or icebp cmp pop arpl rcrb add pop dec add and dec mov sbb push adc jbe xchg sub dec pop mov es push fsub ret adc mov loope lret and lds in repnz inc sub add xor xchg fdivp in out div xchg dec add in jns sub notl leave (bad) lock in enter cs aad inc dec mov or push arpl in ret push jmp mov cmp popf xor cmp int ss push adc dec int3 xchg xor cli bound in cmpsl popf decl push adc lods push cwtl xchg mov or mov mov xchg (bad) mov push add fist fsubs cmp xor xor or push cmp adc and or mov arpl xlat and f2xm1 imul imull lret jge cs add jp fmull test mov mov adc xchg scas movsb and out or cli and inc sub je insb or test scas cmpsb cmc dec sarb (bad) cmp sub (bad) loop or mov lret in das std or test mov sub jno lds test stos jbe or stc repz xor or stc sub icebp jp fimull repz daa (bad) faddp xor pushf imul and movsl mov xchg and pop aaa xchg xchg jb fisubrl movsl stos repnz sbb fild and mov movsl mov and mov test ljmp jecxz cmp pop gs and ja inc jnp pop leave pop icebp pop inc and cwtl popf xor test xchg lcall push push cmp popf add bound jne jo and mov cmp xchg gs pop xchg out repnz decb into inc stc in jo mov dec xchg (bad) call and mov leave call (bad) andb add xchg xor pop adc xchg divb add neg int cmp loop (bad) rcl sar shrb mov sbb push (bad) add pop dec ds scas test and adc out sbb test mov test xlat fdivrs pop std sarl and pop lret jmp (bad) daa movl inc push push jmp add add mov jno or lock xchg cwtl jmp ret push mov or jne adc loop xchg pushf sbb dec inc lret decl pushf and ret scas push sub data16 iret popf (bad) nop in call sub test shll cli and xor or sub dec imul nop leave test cli scas (bad) in loop push inc and out push call dec cmp xchg aad adc mov dec popa mov jmp cld xchg aad sbb jl lret scas adc or aam push sub sahf fwait cmpsl xlat in sbb sub pop xor out ret push jno imul xor pop cltd lds mov ds daa mov fisubr xor pop add and push or push rcrl add aad stos (bad) imul cmpsb les sbb lock mov xchg mov jecxz push add xchg (bad) (bad) lret data16 mov lods jmp popf outsb lea aad aam mov mov dec lods ljmp stos les divl and mov (bad) cltd lea jecxz pop and lods jl out lret mov repz gs lahf iret das adc dec ret mov das mov inc and dec ficomp lea bnd out add push ret es loopne jg or add and xor dec aam mov out js mov pusha xchg adc addr16 xchg cmpsl jae or out jbe jle outsb rorb sub ret inc add leave add test adc inc lret mov mov jl (bad) divb nop sti dec loop xchg int3 jl cmp sub pop in or call mov dec mov cmp enter sbb (bad) xor add add fwait idiv das pushf adc push rorl ds and (bad) dec inc dec in dec and fs ljmp icebp push or add xchg push (bad) ljmp mov scas add in es shll sahf sub and mov (bad) fcomp pop lret dec sbb leave aaa jp mov loopne pushf jo cltd xor bound adc bound jle loop and cmc xchg repz lret (bad) into mov sbb ja adc ljmp (bad) (bad) divb daa mov ds and inc add jg negb sbb into pop adc fstp cmp xlat sti (bad) sbb cli add dec pop sbb mov mov mov pushf test xchg cmp fcomps std pushf inc mov dec enter cmp (bad) clc xchg cmp mov test add mulb push pop out enter imul das xor push sbb mov jae sbb mov sub mov xor lret pop sti xor jbe pop fiadd jmp (bad) cmp jo jg sarl dec dec out lock push adc sarl ret movzbl mov pop mov xchg fldcw loope das cld fnsetpm(287 sti jb sar pop jg and into out xor arpl negb sbb mov icebp movsl (bad) jne je sub jmp mov push push pop insl jl xchg movsb inc ja push cli cmpsb daa dec ja sub add push jg cmp daa xlat push jbe add push les push push mov dec lods and pop sub cmpsb fiaddl ret inc rcll pop xchg stos lret fs adc cmp xor inc es mov push push div test dec jg add fisub ret lds jge push ret cs lods movsb mov sub les addr16 popf add loop ror out mov add (bad) xchg adc pop je (bad) dec and mov mov in in add adc stos cmp and mov sub rorb pop jge push sti push pop mov call test mov int ds jno imul rorb sbb sahf xor iret jno xchg lret fs pop mov sahf in loop sar orl mov cmc lods (bad) enter push jg inc push push sub (bad) add or out pop clc sbb iret lret xchg repnz and adc or mov icebp icebp sub stos test jb xor xor sbb repnz fist jmp mov shll cs add lret cld dec je (bad) mov fprem1 jecxz mov pop (bad) std sub add and add mov jns and adc xor cmpsl or (bad) negl add xchg or jge sarl cmp and and adc sbb xor dec loope sub xchg pop bound lret mov jae xchg add xchg xor lds sti out mov les ret lds aaa mov add push mov sub ret lods loop pop inc xchg lods (bad) push mov stc roll or add mov adc or imul mov lret lret into sub nop push pushf lcall movsl mov xchg pop pop data16 ljmp dec and push push and pushf mov fcomip jbe fimul scas ds inc shll xor sahf add pop cmp mov jo adc shlb mov ds sarb out int jle imul mov stos das aam pop pop dec arpl sub std cltd push enter mov (bad) or or stc add push inc mov push fcoml daa call mov test das stc jl and cltd dec jecxz mov leave je jae out cld xor stos sub inc mov mov pop divl pop jns icebp mov jbe xchg (bad) mov clc mov das xor inc sbb mov divl dec jno add cs stos mov and ja scas rcrb daa aam movsl jne add pop cmp mov dec outsl rorb xlat mov in push adc cs add ss je arpl rol iret xchg or ret jle push fldcw lds or lret adc mov in mov in add iret add in pop outsb fcomps xchg adc (bad) xor popa (bad) psubd mov cmc jns inc mov rdpmc adc jnp stos mov mov mov pop push xchg push aam das xchg push sub mov nop (bad) lahf inc or call xlat add stos negl dec cltd (bad) icebp and test scas cwtl push dec (bad) mov push xchg adc inc repz pop icebp and mov adc lret xor jmp sub arpl (bad) (bad) pop fwait push sar sub leave cmp add ljmp leave lret sub add xor and xor and dec sub aaa and sti cmpsb jno rorl or ds push or fwait (bad) jb,pn mov push or mov stc leave test outsl mov jmp push and das adc mov or xor paddusb daa in cmpsl dec inc in xchg ja stc add adc out inc mov lock adc aad inc (bad) dec (bad) xor mov (bad) pusha mov and push xchg bound cli jno movsl jne aaa imull pop sbb and or sbb imulb test jmp mov movsl cmp test stos call test xchg jl (bad) adc into mov fcmovb jecxz mov ljmp js add pop imulb js and movsb mov daa rcrl ds fadd adc cwtl lcall mov decl mov mov leave and out idivl fldenv mov lret (bad) repz test dec loope jle sub mov cld and stc adc push and xor mov jns adc xor jl repz (bad) or xor in stos inc das xrelease jno,pt sub xchg sbb (bad) imulb dec or add mov sub icebp sub mov sub movsl cltd mov daa in enter ret xchg fstpl mov sti shll faddl add xor stos adc jp mov outsb jecxz pop mov repz add jecxz add and pushf mov scas repnz dec xchg inc stc xchg imul mov (bad) xchg ret add shlb mov les loop lcall stos call mov mov scas gs aad or mov sub adc xchg (bad) cmpsl inc rol or cmp loope bnd fucompp pop or push pushw dec lret mulb cmp push push popf inc and mov xchg fwait lret and out or stc stos ret cmpsl std push xchg mov (bad) fcoml mov cmp lock loopw rcr dec jmp cmp jl pop mov inc mov aad mov rclb pop mov pop notb sub jge sub icebp push lds fiadd bound clc pop hlt and insl mov inc popf and icebp mov and stos pop ljmp out mov fdivrl jo popf push push stc add test xor xor das push enter leave sub dec sub (bad) int xor add xor mov (bad) or nop fs or daa mov (bad) data16 ja xchg fnstsw inc sub pop test inc popf adc mov popf cwtl lock xor mov push fmull ljmp insb adc xor or arpl or xorl add xor push call pop into sbb or out adc (bad) in clc push xor mov sbb imul jmp in aas mov jmp fnstcw mov mov push or inc (bad) sub pop and test fs loop xor scas gs out mov mov mov or sub (bad) inc mull (bad) mov xor sub lea iret cli mov mov or orb dec imul mov aaa lret gs lret inc ret or push out mov or lock ljmp inc (bad) cmp mov pop mov xchg in fist adc hlt add (bad) les push scas aad xchg mov lret dec cmc in and lret (bad) pop scas inc fcoms repz and (bad) add fcoml dec mov je gs push sub sti sub cli sub aam inc cld lds aas aas add outsb enter pop push aaa xorl jle jg fcoml mov cmp jmp hlt test dec iret or pop out xchg (bad) lods add outsl pop jecxz nop (bad) pop sub sbb bound (bad) (bad) repz hlt fsubr add loop xor push and ja les xor (bad) jne pop sub mov aaa or mov ret (bad) mov daa sub pushf jmp sub sub mov leave (bad) jge fucomi mov jge ficomp stos fs mov mov mulb dec mov daa (bad) jge aam sub xchg (bad) push in xchg cmpsb xchg or cmp (bad) sti rol xchg out jl mull or enter jno mov rorl mov jp jmp mov mull and lea and add stc adc test mov and ret incl mov mov addl mov into out sbb je scas idivb jo cmc (bad) in pop pop mov push push push mov xor sub jne adc movsb cli lods or or pop shll out mov addr16 adc clc push or inc test and nop inc roll pop lods mov add xor das notl push mov adc push pop mov sub (bad) mov (bad) xchg jmp ja (bad) mov loope js mov or out stos adc cwtl fldcw mov jno popf divl inc loope std in (bad) inc sti je loop adc xor stos mov fs std add mov pop add mov aaa jne cmp lcall or mov mov mov push xchg pop clc setne cmpsl push in mov fs cwtl divb and loopne mov dec and iret jne movsb xchg (bad) (bad) inc popf pop or movsl incl (bad) (bad) and leave mov mov mov insl dec out cli lret ljmp xor insb rcrl xor cmp cwtl xchg sub add ja push sub mov divps call jb mov ret mov lret inc outsb jl imul mov or lods inc insb adc dec imull pop (bad) and out pop (bad) cmp adc loop enter stos sub cwtl pop xor xchg pop movsl dec (bad) mov repz mov push jmp fildl xor scas xor mov xor sarl and add cmp xlat jmp mov inc sub out xor dec in test loope or (bad) or das loopne je (bad) call daa cltd ss inc iret cltd push adc lods pop lcall xchg xchg mov sub loop xchg loope stos and xor dec in dec ljmp add cld leave and lods jecxz pop fdivrl or mov sub mov sbb cmpsl dec (bad) aam enter pop add popf xlat xchg fsub xor xor mov push mov push adc clc fmulp inc out xor je imul inc je mov and pop or dec xchg xchg mov sub cmpsl (bad) icebp xchg repz (bad) dec xor sbb mov dec cmc out cli jle mov aaa pop pop sub sub adc jge pop test xchg out fld sub movsl adc mov adc dec dec adc mov sub lahf sub lret cld dec loopne roll notb pop xlat lret icebp out cmp rclb push test mov mov push adc xor pop ret mov je repnz push mov sbb mov fistl loope inc cmc mov cmp mov negl push sub iret jmp push shll or adc jge ss mov add cli mov cmp mov sahf ljmp ficom outsl in daa fsubl xchg or mov push adc mov push or push iret and fs pushf rcrb or ret xchg pop mul mov and inc cmp inc (bad) icebp or pop pop mov out cli sub or jle fisub ja mov sub xor mov xor fisttp pushf add inc dec lods jmp lret jge sti and fldt sub out push jg cmp pop inc leave mov in stos sbb gs mov stos call and jecxz add stos pop mov insb jge fidivrl xor xor stos lea les out mov mov idiv push in dec xor out dec loopne push pop nop (bad) js cmc inc loop stc mov clc push add add mov icebp jecxz or xchg or dec scas (bad) jmp popa jnp jp mov gs lds mov mov (bad) xor push xor xor mov out cmp add sub adc ret idivb clc jbe and pop xor ljmp std lods xchg mov push test xor pop mov fdivr dec push mov xchg mov mov shl fmuls lods cmp sub add sti xor ljmp xchg daa inc and je ret into movsb mov cmc cmpsb imul stos loope push outsl les push dec push push mov out xchg mov pop roll sbb stos test stc repnz fidivl (bad) mov (bad) cmp out push fsts mov xor in and and sub dec sarl push jg cmp repz imul icebp mov mov sub movsl jmp mov adc xor dec and xor ret es jo lahf adc rorl pop aam dec and dec call loope sub or mov adc lea pop int3 sub fidivrl cmc fldcw and jl vmovlpd sbb bound add and sub lds (bad) loop xchg jne (bad) mov mov out or in arpl fimul test lock pop sub insb add dec cltd jnp or out movsb and or scas cltd into das dec das rcr mov mov mov mov fdivrs (bad) into lcall mov in or cmp pusha mov ror inc dec mov lret or fistl pop sti insl sti xchg popf leave fisttpl fdivr data16 mov pop cwtl dec jmp lods pop or sub add mov ds dec mov pop add mov xor test mov repz cmp in ds sbb inc mov test or pushf roll adc dec mov push xchg pushf sbbb mov insb jge insb and scas sbb and mov cld lock dec jnp mov push xlat cmp xor popf es inc cld test rorl je clc mov add mov dec sbb jne fdivr int mov lock pop add jo jmp adc (bad) and push out andl lods stos movsl ljmp sarl mov enter fstl daa sub stc mov or and shrb sub test xor mov jge xor arpl aaa and pop push rorl daa jns (bad) rclb idivb adc jae and adc sarl frstor push add mov fistpll mov push cmc les jo fstps xchg push inc pop mov xchg xor add ret sti pusha pusha daa xor jp or sbb popa fwait add jb mov jge inc ja cmpsl pop leave lods out pop jecxz cmpsb icebp mov lds sti push inc (bad) scas mov push outsl mov roll push stos mov jo dec xor mov mov adc jno sub jg mov cmp and cmp sti mov subb push daa jl ret pop jb fist ror lock add jne addr16 lods inc lret xchg call fistp pop sub fidivr xchg fbstp test notb mov repz or jg lret xchg ret mov aam lret data16 mov movsb inc out jmp inc cmc mov imul shlb pop add push minps pop ljmp insb adc or mov roll push push fnstcw (bad) sub mov daa and loopne rcll push push push bound int3 sbb and jbe pop jno adc xchg sub hlt scas and mov mov sti jecxz out xchg lods call (bad) fistp stos fs ljmp (bad) pop icebp pop push push pop jmp shr mov lcall (bad) jge (bad) testb jmp outsb in (bad) sub mov pop xlat scas lret mov fcmovbe out jecxz xchg stc and xchg cli xor stos add es aaa jbe das mov jg sbb lods dec xlat rcrb dec xchg cmpl push icebp mov cwtl dec movsl imull xchg mov adc or mov pop jmp and dec in xchg xchg dec add xor jmp jnp dec adc das in mov lods xchg (bad) cltd outsl es adc sub pushf mov repnz sbb idivl rorl lods in jle pop stos cmp add sbb dec fst cmpsb dec jmp mov fistp adc stos dec mov ss insb and cltd mov movsb bound xor jge push pop out sub add aad (bad) push add xor xor mov int out fbld add (bad) mov xor pop stos cmp adc je push ret ror dec dec xchg pop and mov icebp mov out sub fcomps test repz iret mov inc call pop lret add fs mov fstpt repnz pop adc std sub ljmp (bad) cmp rorl mov add sub and cmpsb adc loope sbb out push ror xchg push or sbb xchg ljmp ja stc dec cld sarl pop ret lods outsb inc xchg adc or loop (bad) or push loop add mov cwtl xchg push mov ss xor sub xchg mov scas xor mov cs jb out push jns imul inc movsb and lods (bad) iret mov aad xor xchg lret scas mov add mov rcll push loopne jno lret mov mov mov adc adc int3 cltd repz andb mov mov inc stos mov enter stos xor rdtsc lret mov xlat ljmp iret or xor clc aam dec pop (bad) xchg inc xor jns push test push xchg jecxz add push sub dec mov mov decl pop adc mov pop add mov stos xor xor pop enter lcall ret jo adc sub lds das sbb (bad) bound push mov cltd negb pop faddl lock mov cld lret movl jle push mov clc fbld hlt xlat xchg shlb ds mov xchg imul and shr (bad) jg mov les mov ljmp dec iret cli sub (bad) push je dec sbb add and push int3 mov call jmp stos cld dec inc popa pop lcall sub jle loop jbe fs sub mov pop test pop loope jge iret sub pop mov les mov push jp or mov or and mov into sti and pop xchg enter push mov mov (bad) jae add xor inc and jb dec (bad) pushf xchg xor mov add rclb insl push daa adc leave (bad) outsl fs mov sub sub mov (bad) lods jl out add mov mov cmc mov negb lahf stos xchg dec (bad) xchg rcl sti and mov outsl inc xchg pop (bad) jnp inc lods lock sub ds sub or xor repz jnp cmp leave add add mov mov or sub in mov pop and dec pusha divb (bad) jbe adc fnclex out pop and loopne sub push ficompl push or (bad) mov je out leave scas sub fwait movsl push in in dec dec mov scas adc ljmp (bad) pushf or sub aam push or enter aas jno add jbe pop insb insb add sub icebp push scas mov cmc js push jns and cwtl test stos ljmp jmp mov cwtl ss fidivr (bad) and stos pop mov xlat mov mov pop add (bad) push fidivr pop in (bad) divb mov mov lock mov sbb inc cli push add cltd and mov clc ss popa enter push jg add xor scas mulb xchg fisttpll mov test jns stc subb and xchg clc mov pop shlb repnz fldz ret pop lret loopne repz mov sbb sti inc or dec mov rcrb stos dec xor test dec mov xchg sub into test sub jne pusha xchg jb mov inc or xchg mov add ljmp jno mov pushf mov je rcrl std or sbb or mov push mov pop shlb in and mov dec pushf inc mov push add mov push lock dec mov mov lahf pop adc mov or mov push jmp js lahf push jbe decb mov cld shrb daa adc sub cltd outsl outsl gs adc add and sahf push mov or pop dec decb xor inc int add and sub pop mov add clc sarb or jnp fbstp mov mov es mov mov das jmp xchg jns pop or lock xchg ljmp sar leave ja loopne jle (bad) jmp aad sub dec push stc cmp aas mov xor insb dec xor and add lret sub xlat inc popf pop sub add sub movsb adc pop clc xor cmp mov outsb xor xchg stc ljmp movsl mov outsb js iret mov (bad) jmp cmp adc and out sub mov cmp mov (bad) test aam clc in mov adc mov out jae cmp mov out or pop out and mov out add inc cwtl bound das xchg pop daa lret pop outsb cmp jb add inc cwtl das mov mov daa jmp sar jne mov xor adc int fsubr or cmpxchg popf xchg push sub xor xor (bad) mov pop fisubr call (bad) outsb negb mov ja aaa lods fsubrl sarl ljmp pushf inc (bad) ljmp mov dec je scas dec hlt adc sbb (bad) or lahf pop xor stc sub in (bad) aas mov (bad) loop push enter xchg mov outsl cltd inc outsl int cmp pop jnp inc or inc (bad) jecxz pop and mov fldcw ja dec ljmp jp rorl xchg mov rcrl sub sbb fs and jno sub dec rolb dec fwait inc sub mov in in cltd lret rolb jns cmp cli jle scas pop mov (bad) dec cltd push pop loopne das or xor jg mov mov xchg test dec mov into fwait cs add add sub lods mov pop in mov scas fst mov sarb mov mov fisub xchg mov and push subb mov sub adc or fs scas lods enter rcl shr into into dec mov xor jns push sub dec inc fwait sub sub xor fstpl xchg int3 sti and adc dec sub dec mov leave test mov repz mov mov sub fistpll ss dec out sbb sub cltd mov mov hlt into popf xor (bad) pop add jno lea add or in dec mov or lds imul in push popf adc jmp mov enter shlb xlat xchg cmp xchg add jle mov imul adc add (bad) mov push sbb mov xor dec mov mov push push data16 aad mov inc xchg cmp push mov push pop cmp outsb (bad) int3 xchg cmp cmp pop xor jmp mov (bad) enter data16 adc mov out cmpsl int3 into or add lret fwait mov add cmp adc cmpsb cltd daa jmp in and pusha and xor mov fisttpll ret mov jl push or aad mov mov leave mov ffree cmp fildll das addr16 or ret in sub xchg lock inc pusha mov xor sub hlt xchg (bad) jmp pop sub cmp xor rcl or and or xchg lahf roll ja lahf pop (bad) mov xor xchg ds cs (bad) mov hlt mov out (bad) repz adc loop xlat in popf lds cli stos roll das repnz notb push out jg daa loopne and pushf add fmuls cltd popa outsl adc adc outsb xor mov and mov inc pop push inc call int ja xchg pusha xor mov cmc cmp and xchg or (bad) pop cmp add stos jecxz pop pop mov addl xchg adc sub repnz lret stos mov or or sbb decl cmp testb push xor loop shl push outsl mov in test je gs shll add imulb iret xchg jne cs push push out lret and lods sbb icebp scas sub lret addr16 dec lods mov imul jne mov add dec aas lock sub mov or and push repnz sti popa xchg xor jae dec fisubr xchg cli and mov imul rorl mov xor mov xor lret push out aad add jne xchg and in outsl call rcll loope into je ljmp and jmp jg and or inc cmp add mov adc pop sti lea mov pop jp xchg push mov out push push andl and pop push aam shrb mov aaa pop mov popa outsb push repnz sub mov dec dec adc or xor aas in scas (bad) xlat sbb fimul xchg pusha iret or mov jns test or lods mov mov rcr dec je cli sbb mov add or sbb icebp cmpsl jo popf push add jno push gs ficom xchg jecxz test gs (bad) leave add add in and cmp pop jns (bad) pop je pop push inc rcrb or xchg jl jns dec into mov push xchg xor push out lods push out (bad) mov pop fisub adc movl fs cld mov insb arpl loop jnp push ljmp aas cmpsl xor mov cltd jmp jno xor and (bad) pop pushf scas or and pushf repz popa test xor (bad) push (bad) ret pop (bad) xor mov inc pushf jnp adc idivl mov push divb mov push and xor mov (bad) dec nop xchg jge inc jl xor and out aad dec dec (bad) out (bad) mov pop xor mov ds pop sub sub mov or ret adc push pop scas addr16 and mov (bad) dec je addr16 or out ja out and cltd fldl xor pop (bad) rcrl lret sar jo rorb sub or jg out dec mov pushf push mov mov cmp int3 scas mov or xchg mov mov xchg pop lahf lret je inc sar popa sbb mov mov and mov mov mov into pushl xor and sbb fcmovu sbb mov mov and dec xchg cmp cli and and push and push mov xor cmp cli pop rol lret and push pop hlt xchg jo or add mov (bad) out and sub push rcll mov out xchg stos or pop fcmovnb daa mov lret fs sbb fisubr or aaa sub sbb sti and dec (bad) repz dec xor lret jg repnz add inc aam cli loop rolb mov sub or lret push in dec mov dec jo addb imul adc xchg mov add fsubrs push jbe fsts add test stos mov fs push dec into xchg jo lahf adc mov and fdivrl xchg mov ret mov je and outsb iret popf fnstsw push adc xor scas mov mov test jle push (bad) adc sub repz adc and fimull movsb repz push and call mov sub call or clc dec and mov mov xorl loopne lret and fisubr fidivrl out pop sbb push dec aad fnsetpm(287 aas scas ljmp mov cli (bad) push pushf lret add nop adc sbb sub pop and (bad) aam add lock call dec jo,pn loope test sarl xorl out dec jns test (bad) jmp movsb popa (bad) xor movsl adc xchg lret mov std sarl mov push test mov mov adcl mov jge xlat mov cs jge in add xor xchg push dec rclb sub adc mov sbb iret jg mov or scas addr16 ja mov xchg mov (bad) xor add jae xchg add lahf sub mov aad icebp xchg dec daa (bad) mov mov call mov pop jae scas jge add push dec or mov faddl dec add ret insb pop and adc stos cwtl jae dec and cmp or mov (bad) repnz sub scas repz or call daa cmp mov test xor adc test sub jecxz pop aaa cmpsb pop mov ret sti jne mov dec mov cwtl pop repz fld pusha and pop mov and mov mov (bad) loopne push les mov mov pop ljmp push xor lahf xchg leave and jmp insl pop fistp icebp clc sub mov clc mov aam pusha cs fcmovnb add pop cmpsb clc adc sub loopne cli popf (bad) dec imul add (bad) xor and add fsubrl push fbstp shrl ja int3 and sub nop shlb mov les mov mov inc out ret xor in incb std lret movsl mov clc mov clc loop or js mov jo inc pop cmpsl jno cmpsl fstpl add ret enter test push sub jge mov icebp cmp call mov xchg sub (bad) (bad) out fucom push cmpsl hlt mov xor into outsb dec icebp je or adc inc call dec adc xchg repnz or fiadd (bad) jle pop mov cmp pop outsb xchg sub add jge inc scas icebp or insb fldcw xchg cli cli jno xor lret mov out add int xor fnstenv or sub test add mov sti mov add sub rcrl (bad) dec fldl cli leave repnz lods mov sub lods dec out cmp loope rorl and mov dec dec (bad) mov repz push mov lock test rcr pop lret fild fidivrl out mov enter push pop xor ret xor je imul dec ljmp fmuls xchg enter fiaddl lds cmp dec xor fdiv xchg pop (bad) bound insb pop or jnp pop adc dec cmpsl sub repnz adc xor cld mov sub xor add insl jge and addr16 push pop out cmp into mov outsl sub mov mov adc mov pop int add xchg into xchg mov dec xchg out scas mov mov leave icebp jno mov mov cmc fldenv imul cli out sbb mov xlat mov jmp js cmpsl fsubrs arpl rol sub andl lock call repz stc (bad) add add push jl mov sub leave enter je xor in dec jmp push scas or gs in xor rcrb scas sahf in pop sub jne push inc mov out arpl rcll loop mov (bad) hlt pop mov mull adc mov cmp and xchg sub xor neg out scas mov negb ret jmp mov out sub mov mov (bad) add in dec aas xchg stos int movsl push rcr and mov or pop fs adc xchg loop into ficomp sub push or fistpll adc sub mov jo mov sub test lret cmp fs ss push gs mov jns dec mov xchg xchg push add pop rol fildll insb in jle mov mov cmp cwtl add (bad) mov xor and fistl test clc (bad) mov pop pop leave xchg ret cmp scas xchg mov xchg out dec je sub ljmp push cli mov scas mov add orl or and adc mov and and sti pushw add (bad) mov sub gs cmpsl push in and dec pushf pop out out lcall dec daa push cwtl mov lds lock xchg pop daa push outsb pop lcall inc inc shll adc xchg rolb sub add aas and repnz pop movl xchg dec sbb mov in cmpsl jge (bad) or leave xor pop inc insb dec lock sub jns decl mov dec ds sbb lret std fbstp jp iret fcomps out mov out testl fidivr xchg test mov pop popf outsb jmp in pop jmp (bad) cltd repz inc dec pop into add mov pop cmpsl fiadd xor test loop (bad) inc ds mov dec sub cmpsb pop adc mov dec sbb cltd (bad) xor out cmp (bad) lock push loopne adc (bad) push mov xchg push test add xchg popf sbb mov sub in mov lock testl flds sub push into jo mov scas cmc adc xchg ljmp bound movsb push shrl jnp data16 dec pop dec mov pop mov cmp idivb mov inc fnstenv mov sub inc add in add fistpll out adc test movsb adc clc sti lret maxps scas pop jecxz and sbb pop xchg or sbb rolb add mov cli loopne xor mov daa xchg pop pop add cmpsl inc or jb fldcw ret mov dec add lock arpl or fs lods sub int3 aaa (bad) dec sub lcall (bad) jnp mov jb xor jnp fwait mov popa jae out in lods aad mov add mov and hlt jbe dec fcom and call lret loopne les cmpsl mov sbb mov mov sub jmp lret jns stos (bad) jge lret dec ljmp mov jnp into (bad) xor jle mov and and and xor add repz sbb mov add lret mov (bad) jmp push pop insl sub mov (bad) and lcall mov aaa pop mov push nop pop add mov outsl test lea lcall xor sbb sti and lret cmpl lock push out push js dec jecxz xchg xor mov inc adc add shrl push inc (bad) (bad) insb pop push lret add gs dec dec mov movhlps sti xor rolb jns xor or and inc mov pop popf jle (bad) rorl inc sub out mov jg jae inc xor mov std inc iret ss sub lahf faddl mov data16 pop jo push rorl jecxz (bad) ficoml sti gs lods sbb lods cmp and xor and mov stos sub and add cld inc or mov sahf in mov jecxz test mov icebp dec out ds into mov dec mov pop mov sub mov and mov pop mov vmulsd icebp neg pop xor insb jbe or cmpsb inc sub xor mov sub inc sbb jg cmp mov adc sbb mov dec subb jg mov loop shr jmp mov call xor cs mov dec icebp cmc sbb je cmp xchg pop lds popf push push leave jne adc push and mov jmp or push sti add bound inc mov dec xor cwtl mov sub (bad) mov jno cmpsl dec add popf std mov add mov loopne xor sub mov push inc inc ljmp mov in mov das adc fild ds je in pop out xor add fldt ret fwait cwtl xor inc fldt (bad) jnp lods xchg adc hlt fwait jl adc sti mov xor js ret (bad) sub imul test lods or xchg ds sub mov mov imul ja test pushf mov push mov imulb jge pop pop sub rcrb sub data16 xchg mov xchg mov fs xchg psubsb and inc add push and or cmp pop rolb and pop sub mov cmp arpl test add xchg into je data16 xchg xlat mov jl jno sub into jne mov and cld enter pop and das aam xchg and and or mov ficom test or mov cltd bound repz add xchg jno daa push mov std pushf jns cmp fucomp iret mov (bad) sub or cmp imul dec movsb xchg sub add int3 ficom enter mov adc mov test (bad) out (bad) adc sbb add jecxz nop dec jecxz and cmpb pop mov sahf orl sub cli mov es lea negb adc sub ret mov pop lds xor inc and xor mov repz lret rolb mov test sar test jl pop orb or pop add and or ljmp jb (bad) adc xchg mov mov (bad) sub lods mov sti mov daa btrl mov adc cmp ffreep lahf repz sub in cmp ljmp pop scas sbb (bad) fbstp (bad) repz cld xchg movsl scas or fnsave mov mov mov mov (bad) mov mov fld cs mov xchg mov test in xor fwait xor outsb std cmp test in mov mov mov mov xor (bad) lods pop sub mov sub std xchg repnz pop shll leave stos push movb lea mov mov leave in mov push jne xchg pop out fcoml movl loop xchg loope xor and adc add test les pushf pusha sbb or lret or push push fbld add data16 xor mov (bad) jle push aam imul rcl das xor stc cli neg xchg xor stos mov fisttpl ja inc das jae mov mov mov outsl fsubs (bad) mov dec stc mov xlat fcom into and sub fs (bad) mov dec sbb cltd dec leave call sbb lods jge push lds xchg ficomp push std and mov adc adc movb out cltd arpl jg out movsb lea pop jnp cmpsl xor push sub (bad) dec sub popf aad in imul int3 aad lcall xor and js shl (bad) shlb sti dec ljmp cmp popf inc jecxz pop cmc mov or int3 and jns inc add ja lret sub xchg inc call (bad) jo fisttp leave xchg jecxz mov stc inc and out mov (bad) decb pushf shll or inc mov xor xchg pop cmp adc jp dec dec and mov dec push pop movsb mov sub jmp mov mov icebp sub imul rclb pop (bad) mov sub loope add push mov ss pop mov lds shll xor xchg inc add inc mov icebp cmpb (bad) sub sbb adc sub shrb (bad) xor fmull enter outsl mov xor sbb idivl lret dec leave sahf mov icebp pop push cmp cli cltd rcll pop (bad) xor pop (bad) leave je pusha out xor and adc movsb jnp mov mov sub int3 cmpsb and sti dec loope jae fistpll pop dec sub lods sbb cmpsl inc mov (bad) and cmpsl mov or and ds sar push shll cli (bad) cmp dec into das push cmp bound in imul popa cmpsb mov mov pop and cli dec loope pusha push test mov out rorl xchg mov fsubs add push in mov mov fs mov push and orl popf rcr or pop (bad) jb xor test or sbb cmp inc sbb pop adc mov mov add xor or sub shr and mov sti sub and sub push cld xchg fs sahf out iret cmp mov and mov sub xchg xor shr pop jb lds lock xor push add add xchg test mov sbb dec mov insb je cltd mov nop out (bad) (bad) xchg fisttp adc shl adc mov fist or mov add movsl out aad fisttpl enter mov data16 mov (bad) pop test mov shlb bound fdivp and sub add fwait inc add and push test test test (bad) loop aad mov scas lcall mov add mov insb xchg sub loopne pop pop mov leave mov mov lods (bad) out xor dec cmp mov dec mov inc mov lret sub pushf and sbb jb sub out leave push sub adc inc mov inc adc lock push pushf jmp fldl jno dec call fnstcw sub ds fdivrl pop xor fiaddl or lahf mov push decl sbb xor push es xchg pop inc inc sbb shrl xor mov fimull dec movsb popa and test add loope cmpsb rclb or push xchg lahf js dec and jo int3 pop add xor xchg xlat push cltd jb dec jmp sub jmp and ljmp stos push push movsl pop and pop stc imul arpl out repz pop add mov arpl cmp adc call popf push repnz jg popf mov movsb xor xor int3 pop lahf pop shrl xor (bad) xor cmp mov push push sti push jle mov inc dec and or xor dec mov pop pop mov movsb movsl sarl sub adc pushf pop aaa cltd cli fmuls movsb mov fimul xor mov adcl xchg pop jb add add stos mov outsb mov aad dec jne mov cmp fidiv sub mov aam lret inc cmp and or pop in mov rcll xchg fnstsw pop jge das fsqrt inc xor mov inc inc adc xor fs repnz adc divb decl push out xchg adc xchg loop jne das ljmp (bad) lret insl ja mov andb sti mov adc and (bad) pushf (bad) or mov mov dec sub mov les loop sub pop imul sub imul mov lahf pop xor std hlt jnp repnz sub inc jle (bad) insb not mov lock ljmp adc xchg int3 stc mov in stos sub xchg fmuls or or or mov jns dec mov iret sub sub lods loopne mull mov pop pop sarl adc xor testb xorl cli and (bad) dec bound push mov push cmp je (bad) sbb fcomp sub iret xchg push add mov jae inc xor rolb stc jp mov pop jl pusha repnz ficoml mov mov fisubr stos adc loope js cmpsl vpminsw mov inc mov xor int fimul aad stos daa ljmp dec int3 lret sub xor mov inc mov push lds sub cmpsl fist xchg sbb cs xor add aaa enter sub or ljmp or inc dec cli daa insb mov sbb or or repz add cs (bad) popf cmpsl cs xchg pop lret add mov jmp fcomi in lods outsl pop push shl jns movb cmp ss lock ja pop or sub icebp shr jecxz lret add sbb (bad) repnz enter add ret popf (bad) stos pop aaa or rcrl das outsl repnz push jbe scas ret sub (bad) js and (bad) notl pop and into js or rcrl dec or or xchg xabort add iret mov mov inc mov push push mov xor xor cs mov mov or sbb jb add push mov dec xor pop je xor push mov push cmpsl mov (bad) popf (bad) jge xor and mov rolb icebp add cmpsl dec push mov out js mov cmp loope jg add in add pop decb scas add and pop or jb push jne lods inc pop not xchg mov jge fiadd pop push mov jae pop cli ret sar mov inc mov push stos lea popf pop mov push pushl pop pop in test push pusha idivb and xchg aaa or mov jbe inc lret nop jne push mov pop mov add cli pop add push inc pop lds or imul and sub loop std int3 xor dec push dec mov push fsts dec stc fs xor sahf jns loop cmp das jb movsb mov push dec mov fucomip xor out bound cmp pop gs add xlat les (bad) fcmovb and add xchg inc xchg or sub mov sbb jg cmpsb dec rcrb xor inc push xor cli popf call sub and lea adc xor add enter inc (bad) or push fcoml inc xchg xlat (bad) xor ljmp sahf jle dec es jb cli inc dec xor add sub jne cld pop and xchg push jmp mov jle lret dec lods push lods rcll (bad) cwtl pop add iret push std jns mov in popf cmp fs mov test cmp enter xor popf incb pushf mov sub hlt jmp and or subb hlt pop mov or data16 xchg aad mov cmp pop int das int3 mov xchg cltd mov lods xchg jae insb data16 add outsb je,pn dec outsl pop std inc mov pop jno movsb into das in or stc jo and sub fsubrp adc ljmp dec adc sub xchg cmp adc pop push add cld xchg fsubrs call in jp add scas repnz sub xor dec enter repz mov xchg in mov out mov sub sarl and sbb mov mov mov mov mov inc leave cs xchg (bad) dec sarl inc xchg das idivb pop aas fimull iret iret ljmp imul pop std or xlat in and bound adc mov mov jmp mov inc lea lock xor or pusha adc pop fidivrl xor ss loop xchg jmp push outsb int or and xchg cmpsl test mov adc adc sub xor fldt and sub push nop je fmull inc fadd push lock pop jle or push js arpl push movb xor jae xchg lcall lods add call sub out popf xchg bound add mov das call or pop arpl sub call mov jne popf push mov inc inc scas mov adc sti pop ret and push xchg (bad) mov mov das out gs (bad) cmp or mov fnsave fs int daa or imul sub sarb negb out in repz xchg jne out dec and mov lods mov jmp jb sbb aad scas ja enter out das imulb inc aam (bad) ljmp xlat push push cmpsb sbb dec and xor cmpsb sub adc ja lea xlat xor shl scas add add push ficom pop mov xchg in dec mov sub xchg dec sahf jmp maskmovq negl pushf out jge sub dec add into movsl mov in js or roll mov xchg imul into xchg clc adc dec mov clc xchg jmp xchg sub insb dec sbb add (bad) (bad) ljmp fidivl (bad) xchg cmp jg imul xchg push les sub mov out cmp (bad) lea cmp or ret xor data16 sub mov arpl pop es push and cs xor outsb mov xor stos mov repz ds and out test ds sbb push mov jns lahf roll dec push jg mov stos sub mov jb ret lahf pop repnz sbb push push sub in sub adc push call adc adc adc xor jo shl pop push push push iret cmp dec pop daa out xchg outsl nop or mov rcrb fdivrp push inc and hlt dec push push xchg daa adc add cmpsl test lret and cmp mov int3 mov jmp js sti jne fnstenv xlat movl push loop mov aad jmp stc jne mov shrl sub jne sahf xchg fldl2e bound cmc xor pop aaa repz cmp cwtl xor cwtl (bad) aam fistpll stos mov pop mov cmp inc xchg dec fwait idivl int3 (bad) iret pop aas leave fildll or repnz xor push out dec test mov test fidivl and mov adcb mov xchg stc xor loop iret pop out ja lret lock (bad) ja sub (bad) (bad) imul stos lret pop adc rorl addl mov mov mov pop das leave andb dec bound and mov ret push pop ret pop pop or and mov push adc push dec pusha das jl xchg shrl andb add mov push sub repz pop sub ss and sub or push jb push xchg push popf mov dec adc xchg adc scas mov mov sbb push fsubs js js xchg in pushf (bad) and arpl mov and std xchg mov pop inc jns xchg jmp and dec push cs sub xor leave add add es icebp mulb fldl jbe push xlat xor jne mov in lea fcoms (bad) mov pop (bad) call shr mov pop test hlt xchg ljmp mov or decb and out adc int3 mov or or or sub xor or call jmp leave pop inc rcll lds cmp mov repnz or mov cld and movsl shll mov icebp jmp daa pop mov loope nop dec add and pushf mov jb xchg mov stos xchg mov or sbb mov aaa xchg stos xor pop lea dec or gs push dec add fdivp push xor push sbb (bad) mov imul sub mov lds scas fwait std pop and das test jge inc mov jno jmp clc test out adc and pop xchg decl mov flds xlat mov push sub mov das neg mov mov jecxz jl inc xchg or and and mov movsb out xchg jb out push jmp ljmp cli and dec shr sbb lds sub fidiv icebp push scas movsl xlat xchg adcb sahf dec stos les cli or lahf push adc cltd sbb fistp mov cli popa mov cli outsl cwtl popf iret pop pop mov stc and mov jnp mov pop dec les lret imul lret and lret imul cmpsl (bad) or mov notl imul jle and add loop icebp jg hlt pop bound movq sub inc sub sub sti fstps and inc in dec adc outsb sub inc bound (bad) out out fcoms ja stos dec push jg dec mov cs or fsubp add push sub mov test mov adc push mov nop clc lds xchg sub inc dec fidivl js adc arpl loop ss xor into dec sub jb push dec or out pop cmp (bad) daa dec cmp sub jp pop mov clc and add scas mov or (bad) sub jmp push push adcl icebp jne (bad) pop repz test insl stc cmp das lret enter jmp sub pop int3 jb rcl lret push (bad) jbe and pop movsb jb subb jle pop jae stc mov jno and or (bad) (bad) xchg je pop loop (bad) mov xor and push sub jno sub les imul popf ret and popa sub (bad) outsb std mov negl iret add sub adc into inc das out mov jmp cmc mov sub push ja loop cmpsl fcomip mov divl dec je (bad) jmp fwait test inc push aaa or jmp push outsb test fbld cvttps2pi mov imul insb lahf dec jmp cwtl movb add pop mov or pop pushf mov add pop daa leave int3 jne popf sub jmp out popf (bad) cmp jo loope push jne aaa sqrtps cltd ss fsts shll scas jg into loopne adc jge and decb repz daa lds aas sub shlb pop fidivl lahf pop cli add or xor or (bad) xor stos mov xor (bad) lret add (bad) bound add xchg sub fdiv lret aad add out imul mov pop ret les xor fcmovnu cli and clc test mov iret lret add sub mov xchg pop push lock scas or rcll mov jne sbb insb sub xlat ret not inc imul inc pop call jno imul bound pop adc das or div shrb js ss or (bad) mov add fmull mov out and out adc sbb pop dec xor fxam in cmp (bad) jo pop call xchg adc add leave mov mov lret (bad) stc pop (bad) aam loope sti aam (bad) daa (bad) pusha jmp add icebp xor out ds sub loopne sub xor fwait scas pop mov inc dec mov xor cld ds shrl sub test sub add pusha out out pop incb mov (bad) popa ds lods ss nop rcrb mov and and ds cs inc sub jl and cs push xor and sub adc std out ss xchg jnp scas loop es add (bad) imul mov clc xchg mov xchg out divl inc ljmp out sub das adc arpl push test out stc adc rclb pushf repnz jnp movsl jmp sub fistp sub push jl leave and xor inc jae sub je out xlat mov leave mov jp pop add and add pop mov jmp hlt add popf out pop decb aad pop add bound adc out jge jae rcrl sub int (bad) push lahf push xlat lea cmp adc sub add daa in lods call (bad) mov imul rcll xchg outsl mov mov stos gs xor jl jmp jg (bad) push adc int sub sbb hlt add adcb sbb push or mov jno das jb push and sbb xor lea mov loope and mov (bad) jecxz mov lds dec xchg dec loope or lret cmp bound adc lret xor xor cld lods testb jle aad fisubl movsl rcl xchg das ret je out and sub mov (bad) cmpsb ret inc push and rcrl cli dec cmc push jp std xchg jmp lret out into dec mov cli and mov sub and rorl icebp pop out jnp xor rclb jecxz sbb sub and je (bad) add sub and pop (bad) ret dec ja iret and pop jne jo xchg inc or fcmovnu data16 mov lods jecxz xchg mov arpl mov addr16 shr xchg sub daa out (bad) push or mov xor jmp es jg fisttp add pop std sbb jecxz ficoml sub sub sahf cs cmp pushf and push into or sbb jl scas (bad) rcll cmp push repnz mov sub jbe dec jns fistpll shrb loopne mov sbb imul cmp cmp dec call sub out mov mov jp imul (bad) ret loope test lock adc add pop xor jno lret dec cmp gs lahf (bad) cmpsb mov les add mov ret cmpsl xchg cmpsb pop xor movsl mov or stos cld xchg xlat out push mov ja adc jne push fsubs pop aam lods js or aad lock inc xor and mov call pop jns and mov mov xchg test mov data16 cmpsl add (bad) jmp or cmpsl jmp sbb fadd dec push ja xor sbb fistpl fist mov notl xchg stos sub add mov adc jp add jmp aaa dec mov sbb pop mov ret out sub add xor int3 lock or fdivrl push jb xchg adc out int cmp pop jno xor adc (bad) sbb lock pop out lahf pop cmpsl clc xlat xchg cmp or ss rcll dec or pop or sub in sbb (bad) dec mov mov mov mov mov fs scas test dec sub roll xlat test mov adc xor jns xchg ret div insl or jl jo fsts lods fcomp dec mov xor dec xor mov dec or mov inc divb es sub (bad) das jmp mov or scas xchg repz xchg fstpt (bad) movsl div xchg dec aad (bad) dec xor sub cmp jp add pop dec (bad) lock test bnd sahf adc stos push cmp pop (bad) iret sub pop int3 sub sti fs sbb mov sub lds cli mov cld jne mov dec xor or call mov xchg jle push push insb xlat and (bad) pop insl dec cmp pop movsl jbe xchg xchg test movsl cli xor cld jle or js add int3 in pop divb fdivr ja jmp scas fs dec add inc out inc pop data16 mov mov jnp movsb test in (bad) in int in mov sub xlat imul cmpsb push xchg and ret stos dec fnsave dec jmp mov cltd lods das out sub imul jl dec iret sti lret mov push aam int3 adc lods xchg push enter icebp pop mov dec adc push nop mov test idiv repnz bound lret fistl fldenv jno inc or int3 int3 mov mov dec jecxz cmpsb ret into jmp jle or (bad) and iret iret (bad) (bad) repnz pop cmp (bad) sti int outsb sub (bad) mov cmpsl jne dec leave or test mov add dec dec pop mov mov shr pop lret (bad) imul mov stc and add cmpsb ss insb mov popa and into inc add mov (bad) call das add fcmovne adc mov lret pop sbb or repz mov loope push aad xor aad leave push insl das xchg pop mov jl or ret pop and loopne pushl xchg lock loope scas cmpsb or pop mov out mov lods push sbb xchg inc add mov aaa and xor dec mov lds sub cmp pushf repz pop sub sub xchg mov jl mov dec push mov (bad) cld loop add ja aam sti xchg (bad) das and or (bad) cs sub sbb (bad) cmpsb test ljmp jge scas mov in stos fdivl dec inc push leave insb out pop mov clc adc mov std fldenv pop xchg ret (bad) xor jnp subl cmp mov xor cmp cltd (bad) je sub cli cmpsl push sbb or fsts jl sbb ljmp pop jl notl mov jl pop call push out popf bound ret fdivl adc outsl sub fldenv orl sub (bad) icebp jecxz dec div adc cmp rolb adc add jmp lock jae sub and mov scas and scas lret out repz (bad) notl jnp pop stos xchg sub je imul into and push mov dec js dec ljmp imul push outsb (bad) mov das jb mov mov rclb stos xor add js and jae sub roll bound fcmovnbe icebp leave je cmp shrl stc sub mov scas cltd fadds ja push pop loopne jmp xchg adc aad dec xorb std push lret mov sbb rorb in fstpl dec push mov je call repz (bad) or cmp cmpsb loope stos pushf mov xchg jmp dec mov cwtl dec pop stos je stos mov aad jp push lret add mov imul inc sub mov in mov dec dec and adc add mull or pop repnz iret fwait ret pop mov test mov push sub addr16 add lods cltd mov call push push sbb imul dec rcl das out and (bad) sub pop das (bad) mov mov jnp or add addl xlat xchg lret clc iret mov and inc (bad) mov dec fadds jp sti jmp fwait (bad) cli leave lcall add gs popa cmp imull bound repz out xchg (bad) pop (bad) xor mov mov pop mov (bad) repz repz ds jne scas dec lret (bad) cmp mov jns pop test stos sub sub pushf int add std cmp icebp (bad) mov add mov mov scas sar das fstps cld or les inc mov test in and out or loop push adc and stc out add enter sub fstps xor mov rcrl jns (bad) xor cmpsb sub call lods clc mov test loopne lret jmp push or mov je push pop mov arpl mov lret mov sub in xchg out adc int3 or roll sti test (bad) mov xor cwtl cmp (bad) and or cmpsl cli call std repz sub xchg fcoms pop cmc push inc mov pop dec pop pop mov push stc fwait fs negl lea das sbb mov or les or xlat ret push pop or daa or jns aas loop fsubrp notl cwtl imul clc iret push pop or loope adc out push testb xchg lea adc mov mov pop (bad) mov xor ds jmp sub inc pop ficomp (bad) mov pop mov mov ljmp test test or mov add add lcall sbb pop sub loopne or into outsl rolb fstps aad add xlat mov in adc and dec jno aaa out mov les push imul inc push dec insl inc pop stos jl adc lret aaa aad in pop mov dec (bad) in pushf insl (bad) mov ret popf inc push xchg (bad) enter xor repnz pop imul rcll xchg pop jmp (bad) jno and sub and jmp repz (bad) lcall mov dec fnstcw sub out pop insb adc mov sbb stos xor cmp dec faddl jg ljmp and stc add std xor and or les fisttp cld fisttpll adc std mov stos gs (bad) (bad) mov fwait xchg xchg loope lret ljmp in mov mov imul insl jl (bad) jmp fcmovu or mov fsts xor daa repz jo sub jecxz add (bad) les add inc in push stos (bad) cltd lret push (bad) lods pusha sti add mov sub cmp jl inc xor jo push mov lret xor mov sub adc adc add or push push sub (bad) jbe sarl or aam adc (bad) mov push and enter sub and cmp je in insl test add mov mov daa push mov and sti mov jge pusha lret inc mov jo push popa or mov mov or repz jo dec jmp int imul ljmp jg xchg cmc fs xchg push mov cltd (bad) aas mov mov into fs push movsl mov (bad) (bad) push jno daa push push das jae add rorb test cmp inc add cmp adc push push out mov sbb mov push in in push lret mov cmp cmp push mov bound icebp push and cli sub mov nop and fimul dec fild mov lods sub sbb push or pop dec jmp jne not and and (bad) xchg cmp adc cmp adc mov cmp push dec sub sbb or pop (bad) adc mov add inc pop sub (bad) mov xor insl aam pusha repnz sub das idivl sub lods pop mov pop inc push aad sbb daa mov add add xor adc mov ss ljmp xor xchg xor aad push aad outsb movsl cmc add mov sbb ret add pop and add sti out js add jns xchg mov push xchg aas sarl pop and fst mull cli rolb cmp xor jb into mov xchg adc (bad) ljmp fs (bad) fldl repz (bad) xlat bound fucom xor add add mov movsb and xor xor adc cld lret test or xchg and cmp jge (bad) insb pop adc scas lret out fs mov iret sub mov pushf pushf out scas je in and imul out div push or js loop mov int3 sub add adc mov (bad) cmp xchg icebp std cmp pop mov adc add xor sub xchg lcall jmp (bad) (bad) mov sbb bound push xchg arpl daa add shl add icebp mov inc nop mov cltd or iret push jns dec pop mov pop test lods mov ss add and cmp pop xchg in (bad) sub or lahf push (bad) pop test jecxz dec bound mov inc jmp jmp movsl sub xor int3 xchg pop sahf sub sbb popf xor mov out sub mov and fs xor fwait (bad) adc mov loopne (bad) (bad) je ds aas pop push sbb test and stos int aas in lock cmp insl xchg mov jb rol int3 adc adc fldt mov pop jmp jp imul mov add and popa pop das lret inc xchg mov sbbb cmp mov dec int and xor sub jle into and cmpsb das mov dec loop out mov mov lods xor popf mov out push xor jbe xlat jmp push dec sarl jp mov push mov sub not ss push xor mov (bad) cmc int3 inc cs mov (bad) mov (bad) loop sahf cmpsl pop out and out cmp mov test dec jl in lret lods out cli dec sub push add pop pop hlt jns outsb xor add mov and cmc push or scas gs xor add cmpsl or xor test and inc inc sub dec mov pop push sub decb ficoml ret jmp mov add adc stos fild sub push or fstpl pop jo jae jbe pushf mov push push lods popf ds test aaa xor pop lret ljmp iret pop xchg sbb imul iret mov pop leave je inc xor mov popf mov push sub sbb pop pop dec fisttpl push jmp iret int3 mov pop sti pop fcoml dec out test loop ja ljmp and fisttpll and or imul jmp mov (bad) fldcw sub or mov push sbb or fildll inc pop mov jnp lahf dec lods cmp jmp das das lods mov fbstp adc or jo and or je fidiv dec cmp cltd xor push iret scas inc sti xor and pop daa mov pop jmp jne add jbe mov lret mov cltd arpl cmp fidivr int3 lea leave das add or dec enter (bad) pushf sub mov fist das mov push daa xor fcompl (bad) fisubrl (bad) cmp dec ds das out or mov pop fsubrs jb (bad) xor add jecxz dec ja inc call repnz sbb inc mov xor sub gs add or adc adc fisubl or jmp stc adc or in mov lods and sub vpxor sub mov add xchg mov dec test mov inc xchg inc sub jecxz dec or fs into mov js (bad) (bad) jne inc xlat scas int3 jmp dec test and sub popf jns dec cld in pop fst aas lods mov cltd fldcw (bad) or xchg mov sbb dec cmp jge insb pop out into icebp ret jae sub mov jmp das loop mov dec xchg add add push add movzbl lret sub push jmp fstpt sarl pop ret sub insl mov sub cwtl aaa (bad) xchg inc lahf xchg sbb mov adc mov ja adc or rorb sub stos sub pop stos (bad) cld lret in adc iret movsb test xor ss adc sub cli jne mov mov dec les sub call sub sub mov popf ja sbb mov cld (bad) mov stc shlw cmp and cmp pop rcll cmpsb mov adc les repnz scas nop push repnz cmp xlat and ljmp (bad) stos jo xor sub mov hlt fs sbb lods dec fdiv andb pop pop inc adc shll jmp scas xor iret push pop sti lea outsl push sar sub pop sub sub ret pop push lret ret push imul adc jmp mov out dec enter and cmp data16 mov and fcomip cmp add iret scas mov xor jmp shr pusha pusha sub mov mov pop mov pop out je mov jns lcall ret jo sbb xchg jno lahf test shlb or cs and add fldl and jl in and sti loop (bad) idivb ss jmp inc sub (bad) mov push mov pop push lret in (bad) ljmp in or mov push insb dec mov mov add xor sub xchg lret pop dec repnz (bad) popf cld cwtl pop in push xlat or add (bad) out xchg jge push pop xchg cmc mov (bad) ljmp fistl pop sarb cltd inc (bad) jle sub mov sub decl adc nop inc adc fiadd imul xor movsl aam mov sub sub mov or fnstsw das lret push cmp out xchg mov fistp fsubrs iret mov mov jge add push add bound jl push sub xchg push sbb xor fld or mov addl xchg jo and cmp jl ljmp mov lret xchg ljmp or cmp out xchg or xchg lds ret inc adc adc enter xchg mov jbe scas xor pop jg mov das repnz call push in out xchg push adc mov mov mov adc adc xchg cmp (bad) mov mov push pop gs adc testb pop into ror fcomps mov frstor xchg sub or or sub lods mull shl mov mov mov rep stos xchg adc testb mov (bad) mov sub and mov mov xor leave pop pop or adc add dec mov xor add pop in xchg es ja jg (bad) movl inc and in daa push sub pop adc int cmp xchg mov in pop add (bad) (bad) imulb fist mov inc in sub or fdivp (bad) jae std xchg adcl test push inc fidivr xorb adc dec shrl add cmp stos into xchg xchg push popf or jge insb lret sbb ficom (bad) sub pop jmp mov sub mov leave and mov cmc cmp xchg mov xor jno adc ljmp mov repz mov cli push jp sub imul jl push out sub gs das pusha mov aam outsl sahf andl data16 in jno add jnp push add jp jb lcall lahf test fmuls jmp repz sbb mov and lds aad jg fsubrl out sub in arpl sub idivb pop enter or mov push sbb jecxz cwtl jp pop popf mov icebp outsb imul out xchg dec mov lret push push sbb in in mov cmpsl xchg mov sbb and lahf (bad) fs dec out pop xchg loope ds (bad) pusha daa (bad) dec repnz add mov out sub or mov xor fcomp add and jns add ja or push pop (bad) dec aam cli test mov jle push ljmp sub mov sub dec imul xchg and lret addb mov lret insl orb in nop pop loope fsubrl push xchg cmp add test mov in cmp mov out mov nop in mov test sbb sub popf adc push icebp dec dec sbb std xor addl hlt or jg sbbb test or in lcall xor pop add out out mov inc movb lods dec fldl daa out push xchg cmp lret insb mov mov adc sub xchg dec or xchg mov lret (bad) and or jne mov into mov jmp ljmp mov insl stc ret clc aaa cmpsb adc push jmp pop inc imul loopne or lcall pusha or jle hlt adc or mov aad mov push loope pusha inc seta xor out shrl and shr cmpsb and test in adc add jmp sbb ds hlt ss xchg dec jl lods inc (bad) out ss incb mov or clc cmp negb pop (bad) sbb mov push sub jne jns push xor rorl and xchg cmp pop sbb js cltd mov mov (bad) mov ja push mov dec jle jmp adc jecxz xchg ja hlt ret out jo adc adc arpl mov pop mov iret push push mov xor or popf xor (bad) iret (bad) dec push cmpsl inc jge jg push pop push adc imul sti je (bad) sar jbe jecxz out or repz xor inc lahf (bad) test push mov dec push mov xor (bad) dec or sub push and add mov shr lock add cmp mov inc sub or or add movsb push mov and pushf shll xchg hlt stos stc or test divl addr16 ret and adc mov insl mull mov lret jae adc jnp (bad) stc mov fdivr jmp rorb leave mov flds push or ds and push sub mov and dec fistpll jno cmpsl push or dec in jb rcll dec aam loopne inc jae mov shlb (bad) xchg popf mov dec xor xchg pop jbe ret loopne add sub mov imulb push xor mov mov or jg add xor mov fxch add sar sbb and push sub je lcall ja jb sbb sub out add push mov mov rolb daa repz xchg imul push mov fstl out and out add and incb out out enter add push dec mov int and lret inc sub xor dec ret test mov jns daa notl dec xchg pop dec jle xchg mov lret push cmp mov or sub daa pop sub mov pushl icebp aad aad and notl or cmpsl ljmp fildll clc cmp daa or int3 loop (bad) cli fldl test adc sub mov jg or sub pop orb ja push pop fstps icebp push or cld pop sub je out dec stc push push addr16 out loop xchg push or or sub and mov push aam sub lods call dec ja jecxz or jo loope out mov xlat xchg cmp and mov jge loope jns rcl pop mov push daa jl bound ret push lods (bad) out jbe jp mov push not xchg call cld xchg xor movb dec mov decb mov jne test xor dec ret mov loopne sub pop adc test (bad) push mov decb pop xor sub lods (bad) out scas out dec les mull dec push daa push cld shrl jl (bad) jb jbe push jg js mov adc lahf (bad) jns mov sbb sbb mov andl sub sbb (bad) je mov sarl adc sub scas int3 data16 int das or (bad) daa dec orb add (bad) mov sub (bad) bound icebp xchg push lret pop outsl push movsl jge leave xchg fisubl mov lods pushf aas imul fnsave mov out cwtl dec mov jne fwait adc push xor mov out stos leave int3 cmp inc jl cmpsl vcvttsd2si (bad) popf jl push out and sub or dec cmp mov divb dec and jno bound xchg sti adc mov xor xor push repnz xor dec push ret cmc clc push inc mov xor dec shll and xchg pop sbb or mov inc sub js int3 or call rcrl ds xchg xchg nop lahf sbb mov pop jns inc lret sub mov sti cmpsl ss ja dec lods cmc or pop mov mov adc scas adc add test cmp and add cmc sbb iret cs into dec jnp add sti (bad) fiadd (bad) xchg mov rcll scas cmp loope push (bad) add (bad) xor stos jecxz adc fimull dec xor enter out xlat push mov sub jno es xor sub (bad) adc in and (bad) pop ret sti xor cli les mov xchg test (bad) or dec (bad) xor xor or (bad) add (bad) std add xor movsb popa and es mov arpl out or or dec adc clc int3 in shrb add fistl jb cmpsl dec aad jge (bad) fcompl out or xor jae adc out cltd xor mov xchg loope push pop arpl mov daa add nop sbb pop xchg es lcallw jno mov fbld hlt out sbb and icebp mov push pop jnp mov add scas mov push and cmp or pop daa scas mov lock cltd push repnz inc mov sub xor adc iret popf jno bound ror xchg push leave adc cmp enter cmc sub push (bad) out add out add shlb pop mov icebp and sub daa leave rorl cmpsl xchg les adc mov ds lret xchg out sarl leave and cmp push call fimul lock add stc mov popf jne xchg jl shrb push pop pop idivb and dec movsl mov or (bad) hlt mov or (bad) dec or xor mov lods xchg xchg dec dec or pop inc popf repz inc out notl xchg cmp xor cld aam imul rep xchg push sbb daa mov test shrl repnz jmp push sub jge imul dec call dec and je mov fldcw push pop sti test (bad) sub xchg inc xor push hlt mov xor cltd icebp sahf stc adc (bad) repnz nop xchg dec mov jbe add push and or into jo sub jmp add mov jmp inc movl push push dec cmp inc dec push out sbb xchg ljmp div push xchg enter setge scas jge sub int3 and push jmp std sub dec imul or sub adc out jecxz pop mov adc cli xor sbb pop mov mov rclb inc repz cmpl (bad) inc push das out fstl or mov outsl addb je jl or les repz sbb mov push andl pop mov mov dec and nop xor (bad) sub jmp jbe lret js cwtl (bad) mov scas jno sub das stc decl lcall jbe add pop jno dec ja mov imulb ljmp orb call lahf push sbb add cs (bad) movsl pop xor add mov xor and into xchg cmp push pop ljmp testb loope jecxz sti xor popf fnstcw (bad) lret inc push or ret add pop push inc (bad) mov les push jmp imul enter movsl int3 popf mov sbb push xchg mull mov mov xchg lahf mov stc push jmp xor (bad) fmulp testl jb and not pop ret and mov ret test mov push mov mov jnp pop or cli out mov and orl call jmp mov lods cmp add jae in xor loop push (bad) xchg push xor xchg add lret dec mov fisubl dec xchg call ret out dec sarb lret jno mov sti jle gs push push jg mov stc jge scas cmpsl adc add in mov stos xor mov xor repnz fist dec add push shll jl or repz inc (bad) xor jmp dec out movsb mov outsb mov adc pop bound jg or add sub push icebp inc jmp notb mov (bad) jb test mov fucomp adc (bad) push (bad) mov dec or dec adc push push cmpsl inc jns pop lods ljmp iret loop xchg mov xchg adc sub sti cmp pop mov push popa imul pop and add enter aad bound cmp (bad) mov dec or and push and mov (bad) sub pop adc lods test repz int3 daa push (bad) pop add arpl std ss cmp xlat ror scas cwtl iret iret add xchg insl xchg divl pop push dec and or jo dec sar lret lods (bad) mov lret popa int add rcll movzbl in das clc adc fbstp imul sub add loopne jecxz orb loop mov (bad) in fwait mov or adc jecxz das (bad) icebp rclb add sub enter or fldt jnp pop das xchg push xchg aad rorl das xor cld aaa out imul cmp loop add out call adc inc push xchg xor mov iret or jg cmp rclb ret and sbb insl or dec sub jne stc mov (bad) xor ret lock ficom in xor add mov insb (bad) xor sbb ret xor (bad) sub or xor cld cli in sahf roll stos inc ret pop push fisttpll fsubrl std lock data16 jns mov test mov xchg add out mov pop adc cmp inc xchg or into xor scas xor cltd test das mov nop pop xchg call pop test and insb mov inc negl sub push mov or add jnp sbb inc bound clc xchg test mov adc ljmp jp dec add or sub add cmp pop cli fcomp jmp mov clc cmpsb scas daa aam fnstcw xor popa sbb mov dec lcall sub inc cmp pop into inc daa jmp sub sub inc push push je xchg and lahf push push imul xor sub mov or cmp push mov fs test out mov sub imul add jg and es jne loopne (bad) popf fstl lds faddl inc sub pushl lahf les add lcall pop cmp push loop (bad) lret and pop je pusha icebp int shrl je (bad) mov push mov sbb idivl jle and aaa out icebp add out push test jmp call pop movsb adc popa lock fsubrs mov (bad) into iret add mov rcrl sti cmp push and sub fisubr xchg dec loope push insb push xor jg mov fidivrl push out imul repnz xor loope lea mov inc bound sbb shrl fstps cs lcall cmpsb aad sets cmp mov dec cli xchg inc cwtl and dec (bad) inc pop sbb mov ljmp je pop enter mov cmp mov mov mov mov js (bad) popf pop adc pushf dec cmp (bad) lods push xchg bound or adc jns in lods xor loope sub addr16 movsb sub sub push fnstenv nop xor daa fisttpll jg mov jne and stc aad xor out imul lahf into mov dec or leave jg,pt push das notl mov or aam stc add test in adcl sub jmp fstpl xor and dec cmpsb sub mov idiv bound pop sbb inc dec pop cwtl jno aaa popa sub cli outsl xchg (bad) ds mov sti out adc pop loope pop xor mov mov jge loop jbe adc dec dec clc bnd fisub adc bndstx mov pop or mov cmp jle je push add mov dec dec xchg movl lock pop add mov ss sub dec or int3 clc xor aaa dec fwait ret pop popf xor out sub (bad) mov add xchg mov and or pop mov stc in or xchg inc in push cmp lcall push aad xor ljmp dec ficompl jne add clc inc mov xor mov sub mov int cmp lret enter add xchg inc fimul arpl lret cmp sbb rorb xchg sub data16 sub mov daa rcr popa mov xchg and orw xchg add leave cltd mov ret cmp cmc sahf or jle pop fcoms add movsbl add es xlat adc mov pop aam xchg je lock (bad) pop dec xchg idiv stc addr16 mov mov xchg pop pmulhw stos addr16 pop push (bad) das pop mov and add sub mov ss push push ljmp mov sbbl jmp and push cmp mov (bad) repnz scas jno push mov add fstpl inc pop mov jle and call push fnsave or stos mov push jge out cmp jmp shll (bad) (bad) jmp and cltd ss (bad) loopne push mul scas xchg lods add andl shll push (bad) xor push sarl mov dec adc inc adc mov pop push jp mov jnp cmp loopne push mov add adc lahf jne mov cwtl pop mov xor xchg pop mov shrb cli out mov mov pop mov sbb mov jae xor inc or fmull idiv lahf or aad cmpb and add mov xchg int push add sbb (bad) mov repnz popa mov das in jmp sbb fcoms pushf (bad) jns ficompl sbb (bad) dec pop pop or pop lcall or adc ficom lcall pusha imul rolb and outsl jg arpl out cmp enter mov xor sub pop add jle fnop lods push add push mov adc jne or call mov sub push cmp cmp push xchg mov pop dec fcomps (bad) hlt in cmp xlat sub xor add and popa jge mov (bad) paddusw int in or pop push pop pop mov jmp mov fildl pop not push ret sarl inc or (bad) sbb insl jg,pt push in jae fdivr jno iret push pop xor pop dec jo dec adc inc push xor dec cmp ja aad mov pusha xor fcompl jns mov mov mov sti and pop pop jne jg push jecxz dec scas (bad) mull or out gs sti xor cld push jp pop test mov cs mov (bad) add or push sub cmp stc int add pop mov hlt fwait les scas fnstsw mov or rclb mov jmp xor fcompl xor xor xor loop xchg faddl push test pop pushl pop fisttp or xor jge pop daa xor gs mov inc mov in sub cmp sbb repz pop pop xchg in and adc or and dec test shrl rcrw add inc out bound push sbb jg (bad) xchg mov daa mov inc roll mov xchg in iret scas lret xor movl pushf dec imul jmp fs mov gs fs addr16 mov cs ficom or jbe test popa add mull std pop shrb imul xor cmp pop cmp loope mov scas gs out jne repz dec pop test add dec or adc xlat out or icebp cmc out lods movsl lcall adc andb sub fmuls test leave xchg adc dec scas int3 (bad) mov add imul adc jo inc xor std mov xor cltd das push cs sub fstpl add roll push mov and xor test fcmovb pop mov xor je dec jo mov pushf int sub (bad) mov lret enter dec clc subl cmp aam cmp pop psubd pop mov jle daa cld xor push sahf push mov adc mov ret or stos sub in fisubr cmp sub cmp xchg lret imul lods cmp xorb gs adc jecxz ret enter dec xchg jbe xor cmpsl out (bad) jo or sub push repnz push outsb gs (bad) jl leave lock or int and inc out mov push fs aad aam sub loop inc dec cs add sub decl xor jge jne pop rcll mov (bad) jmp push mov (bad) mov adc mov and pusha addr16 stos sub adc xchg cmc cmp push pop bound cmp jl dec iret lret adc mov or push out or rorb dec push dec loop mov mov and jb outsb std cs shlb in add jb jno cmpsl jge mov int3 and mov orl mov ds repz add mov aas les dec cltd test shll mov fsubs sub add out mov or mov or (bad) xlat cmp leave and inc xchg mull (bad) in loop movl pop (bad) mov popf divl dec pop in xchg lahf icebp cmp or jmp mov decb sub clc or push add movsb dec loopne fnstcw cmpsl and stc mov rclb xlat mov or lods fadd add mov jmp test stc clc and adc ret repz push (bad) jo je pop (bad) fs jo cmp add aas lret jmp fcomi sub test jmp movl jbe movsl pop cmp add shrb mov sub add cmp xor adc sub mov (bad) push jle push (bad) sub sub mov pop mov out jecxz xor dec dec loop sbb in dec xor adcl decb fadd xor lods lret call and or jnp and sti mov (bad) repnz outsl ja pop daa inc mov repz scas cltd and flds sub or mov daa rolb jmp dec xchg out fsts adcl lock xchg arpl fisubrl cmp lret or sub mov clc jmp push mov ljmp test push int leave mov scas rcrb push movsl mov in mov in sahf inc leave stc cvtps2pi sub or lret sahf imul imul imul xor adc sbb adc inc jmp nop outsl in mov rcl roll test xor xor es mov push out cmpsl jns push fdivrs popf cmc or and sti (bad) test and (bad) enter xchg stc daa into add push out push mov fnstcw push test jb inc lods sub (bad) cld add and fisub cmp xchg scas fnsave cmp inc ljmp xchg pop cwtl push aad outsl jg xchg pop jo xor sub testl (bad) aaa pop cmc icebp scas adc sti int3 (bad) pop xor jne flds cmp cmp fldcw dec sbb and mov pop push jmp mov mov inc push xlat cmp (bad) add lcall mov jecxz daa (bad) out in das jl cmpsb xchg daa out xor cs pusha scas cmp mov or loope jecxz mov xor into or daa jge cwtl mov into test xor lahf xor les jbe gs and sti sub rdtsc pop ss cmp pop mov ja sub stos addl outsl lods push leave bnd ds or mov sub lock adc pop add fdivrl or xchg inc iret and (bad) xor add leave leave sub or jg repnz repnz pop xchg pop stos (bad) loope fstl xchg shlb jecxz icebp mov clc pushf jb hlt dec push fild adc mov mov and and dec cmp sti dec mov or push sub outsb lahf xchg and sub xor inc mov xor rol sti pop cwtl lret sub sahf repz sub jle ret gs leave xchg xchg and jnp ss sti pop mov cmp pop (bad) gs (bad) les adc mov fdivrs fnstcw clc push gs (bad) lahf sbb mov cmp (bad) xor bound movsb pop mov mov and xchg and cli fdivrs lahf jno mov (bad) or not add mov inc add stc in scas int3 dec add imul sub mov sub (bad) and jnp cmpsl pop add lret ljmp mov daa notl cmpsb or rep xorl push divl mov (bad) daa lds adc dec inc roll sbb adc aas (bad) lock mov mov sbb sbb pop lods push pushf sub sbb fbstp add repz xor cmp stos daa hlt fwait push cwtl push ret and mov mov lahf outsb adc pop xchg ds mov and push cltd xor data16 sbb xchg push aad roll out mov jns fs and lahf fisttpl xchg lret pushf adc sub rsm inc dec out mov arpl ljmp inc jmp les xor push int mov iret cld inc cmp daa adc or and inc lahf clc dec pop push (bad) call das xor sarl lods dec mov add jmp mov xor and mov pop mov or mov popf xor or int3 inc add arpl inc sub mov shr and (bad) ljmp fs add fisubr js mov shr movsl and or xlat mov stc sub cs dec mov test push mov stos mov xchg adc mov in and xor stos xor and jmp into (bad) rorb xchg and jmp jo call pushf js movsl in das xchg cld scas dec stos fwait push imul das xor and bound jmp mov jb in inc das lret add mov enter ljmp dec scas pop lret fstl (bad) pushf call das add cld mov xchg (bad) stos fs scas (bad) fistpll (bad) xchg pop ja stos pop je loop and aaa jge push push add and sub mov loopne push inc add je adc gs jno dec and or xchg decl test stc cmp shr outsl mov sub pusha and sub shrb aas out movsl sarl xchg sub cs mov icebp fist xor stos je rcrb xor mov addr16 rorl mov cmp ss dec movsl jl pop inc shrl jle push xor xlat sahf pop xchg clc pop int3 pop fmuls add mov clc sbb dec test imul bound scas xlat sbb xchg in or es dec push dec das cwtl inc out adc sub sub ror or add dec (bad) dec out lret push dec xor icebp pop pop test jle jecxz in mov jecxz jbe or (bad) movsl stc mov or adc xlat sti mov jmp sbb sub repz scas or cmp data16 pop push add dec sahf nop aas or pop pushf daa popf sbb enter cmp imul add mov or jl pop dec pshufw (bad) push les (bad) xor dec add add enter inc xchg xor cwtl insb ret mov in add jno adc xor mov mov push adc push in imul xlat (bad) pop addr16 je leave fcomps xlat xor fisttpll (bad) xor add jne xchg cmp xchg or sub or sub pop ret daa std mov daa movsb mov and xor rcl add cmp lods add lahf or adc add sub mov jno (bad) into inc repz add lds ror sub mov hlt popa jno cmp rorl (bad) je jne inc leave test lcall sub orb dec push (bad) out call xor xchg jge dec stos xor mov scas popf arpl dec mov mov fdivp mov pop or lahf fdivrp push loop pop jle push xlat int3 out loop fsts jge pusha mov push (bad) push push mov pop sub fsubrs push mov pop push and sbb js or and add testl cld jmp stc imul arpl int dec rcll out mov daa divb ljmp out test sbb ljmp xor mov cmp pop fnsave icebp or mov or inc mov lahf rcrl gs and adc inc pop lods mov nop ret xchg or sub (bad) test scas lret aad lods addr16 (bad) clc jp push sub pop push sub lahf jne pop xchg shll adcl push iret out imul add xchg leave iret jae or or test rol jmp shll sbb adc hlt out xchg fucomp jg or mov rcrb and and lahf and pusha add sub movsb addr16 mov xchg mov into cmp and inc mul xorb jbe fbstp pop out in ret sub sub xchg and dec cmpsl negl lahf mov sti das bound cs mov adc jecxz lds add movsb jmp and xchg inc add bound mov xor inc jns cmp push mov jg push xchg cld popf leave push xchg push loope popf cwtl ds sbb pop out mov mov cwtl notl adc out mov adc or stc jbe repnz aad sbb mov add aam inc pop inc std out mov std inc pop xchg jmp ret cli popa inc mov scas sub (bad) cmc pushf xchg and inc dec pop data16 and daa out mov or icebp pop mov bound and or (bad) mov xor mov (bad) cmp hlt xchg imul popa or and mov and and inc mov loop (bad) stos xor scas repnz call imul xor mov (bad) out int addb (bad) mov cmc mov or cmp leave and or pop inc push out sub mov mov cld mov push mov fldl and ret pop pop push hlt ljmp ret daa sub rolb mov aas leave jbe and call xchg mov dec jno jmp sub xor cmc xchg in add xor push inc cli fbstp inc push xchg mov out cltd mov dec data16 xchg pop xchg lds pop out mov mov out mov mov sub push sub sub dec push rolb and inc mov add pop stc jmp pop jbe or adc push mov cmp push clc or xchg (bad) xor inc rorb adc push mov pop add adc outsb push int sti jns add icebp mov (bad) mov std jecxz mov add loop sbb add sbb neg dec inc push mov cmp pop add sub xchg sahf sti mov push shrb mov fcom push sbb push dec (bad) repz imul jg push fldt mov cmp out ret inc mull lsl mov inc andb in dec leave rorl rorb xchg ret push aad lds nop data16 std rcrb jae pop lock push push into cmp xor decl lsl xor or push push xchg aam push mov sbb push sub xchg call lcall outsb push pop xchg sbb add mov jle sbb pop jnp les or push mov add push jl fistl sti xadd dec add add push inc xchg stos repnz mov and pop sti das cltd (bad) cli dec iret rdpmc lret and mov push dec push scas fadd out in xchg popf dec push sub push insb pop jmp jg push aad and mov or xor add or jbe jle mov pop pop adc sub mov pop dec clc movsb adc add sub jne pop jns imul dec cmp pop jle pusha sbb scas lock rclb orb adc lock or outsl pop sbb fisttpl ja loope and (bad) mov (bad) or (bad) ret (bad) xor add ja pop pop cmc mov mov repnz xor adc dec test rorl (bad) push roll adc int3 imul rcl xchg mov and mov gs push mov mov pop test cmpsl imul loope mov mov sub push pop into pop sub out in and sub jns mov rcrl xchg test dec fstl push and jne in or pop negl sub add mov jecxz nop inc mov xor ljmp (bad) cs sub push sbb idivl subb push pop aam daa cmp sbb jne adc int sub or and push mov (bad) pop adc (bad) mov loop push jbe push lcall lods push jno sub cmpsb in lret sbb pop pop mov clc and shr push popl add push sub sub inc and cmpb cmp mov adc and inc xchg rorb add or sarb mov sbb sbb jae cmpsl rcll mov jg js or lcall popf jecxz inc ret sub sub (bad) fistp cmp js sti lfs mov dec ret loope ret dec and jne jecxz (bad) jp in dec (bad) icebp mov or test inc mov divl cmpsb std (bad) movsl mov or xchg and js pop lret mov mov cmp test stc lds mov sub cmpsl out mov and xor (bad) std repnz cmc movsl jg and rorb daa and jl (bad) outsb daa sti xor pop les sarl xor push sub or popf cmc lcall daa movb aaa add mov jbe pop aas scas cwtl jl cltd mov mulb adc mov mov lret cs ret mov push jl inc add repnz pop pop out sub imul das lret insb pushf and subb xlat stc jb imul push ljmp xor iret jle cmp ret cld imul add daa clc into aas lds jecxz (bad) sub (bad) (bad) jecxz push aas mov int lods push adc mov or (bad) inc mov and inc push lock and jo push mov push add push (bad) xor in cmp pop mov mov sbb mov test cmc shr xor xor dec jmp sarb out imul ret dec adc fmul and loop jge cld mov enter and jno outsl pop mov jl loop popf (bad) (bad) imull stos or data16 sbb pop pushf mov xchg xchg std pop add lret mov adc sbb divb mov push mov ficomp push popf xchg add stos int and in out imul int3 data16 push leave push sub ficom mov adc dec cltd popf mov es adc mov mov pusha xlat mov mov adc adc loope mov pop or loope xor lcall push pop dec inc fwait add movsl ljmp adcl imull shrb (bad) pop popf push adc sub dec pop sub shr mov push push pop add jns mov shl add dec cmc (bad) dec mov addr16 pop mov jb orl subb aaa pop ficomp aas popf pop sahf jmp sub pop add add push pop fsubrl jno xchg add push add iret sub adc clc add cld sti in add mov (bad) out cmp mov in cmpsl dec ss jle divps rorb push or dec mov stos xor icebp (bad) aas mov nop std push jge rorb popf pop add lock jno pop jp inc jb or inc shrb mov insl mov (bad) fcomp adc xor sbb push sub je mov clc or mov mov or inc mov mov or push push mov mov fs sbb js movsl sarb and or insl dec push scas mov rorb dec (bad) cmpsb data16 jmp stc adcl cmp jmp add (bad) push (bad) jmp idivb jbe push aam pusha cltd and cmp dec mov inc sti bound dec xlat dec (bad) pushf es push mov mov pop repz xor push aam out int3 fcompl in or sub jmp or pop decl mov lds mov pop mov pop mov jo pop mov mov mov lods dec js icebp sub push dec xchg sahf lock xor or mov inc int3 jae jno mov jb jae or sub popf push mov ds cmp jo mov jl shrb mov (bad) mov bound push mov fadds adc lret in adc and in cs sub sub rcll sahf mov dec or repnz lds sar bound test sub xchg aam inc xor xor and mov push sub mov mov rolb repz push xchg or sub and pushf pop add mov jecxz repnz imul or jns addr16 add or xchg jmp loopne sarl mov psubusw out pop test movsb mov and ret cmc add inc sbb popf das add push mov add pop mov icebp and mov (bad) xlat movsl mov inc inc ja (bad) repnz in mov lahf push mov add add sub ds xchg mov icebp mov add test aam jl jmp (bad) out and aas sub scas dec adc aaa jp xchg mov daa addl sub (bad) stos call xchg in xchg mov rcrl dec push outsb sub loop dec dec and sub mov (bad) iret inc mov jmp mov mov lret add and sarl lds in test lret sub fcomp ljmp andb push mov jnp dec popf sub sub out dec popf pop loop mov inc addr16 mov and xor jp (bad) (bad) hlt lret mov cmc dec dec and xchg or xchg mov into xchg test push mov dec add xor (bad) cmp jo sbb rorb sub or test in jecxz add cmpsb jg sub pushl push lahf outsl mov out and in (bad) or jnp push xchg mov or or xchg idivl sbb adc and pop or jae push cld cmpsb cmpsl jg cmc movsl push push shl and sbb cwtl xchg decb pop fisub into and sub sub sub loop push bnd add notl add add stc sub mov ret cs sub jp ficoml ret jmp or ljmp adc sub cmp mov push push data16 xor sarl out push sub xor ret stc pop outsl int mov cltd mov mov dec fnstcw cmp pop push mov adc jbe xchg je int jp leave and (bad) cmp loope pop xchg pushl arpl ljmp xor popa in cmpb out dec repz rcrb (bad) push jae movsl bound sub fwait sub js cld push divb (bad) dec loope cmp aad or or or xor shrl lods dec sub mov out jne xchg jl (bad) leave rcll daa ljmp and add add mov ds sar sub push lcall xchg add mov sub inc adc adc inc addl cs ljmp cli cmp push sub cmc inc gs sub bound or ja loop lret call push mov xor dec arpl ds movsl out jae insb fwait pop or xchg out sbb (bad) jmp xlat sub fldt sub cmp inc leave out push mov imul push stc push cmpsl (bad) outsl fs out loopne out dec orb sti mov das inc aaa mov aad (bad) xor sub outsb mov mov xchg and loope xchg inc push ret ret imul jbe push inc ret add cli mov pop lods cltd int3 lock daa mov xchg ret or sub out cmpsl cmp jg pop pop xor shlb or pop frstor fistp cld xor push jns movsl jge fistl mov push cmp cli fs cltd jmp mov negb inc pop out out imul bound ret pop push movsl mov clc xor scas sub imul cwtl hlt xlat xor rolb loope aas test inc arpl mov dec inc mov das stos cmp or and xor out mov adc and mov jns nop add clc mov stos sub add pop ret out sub sub mov push xchg decb jle xchg shrb dec and xor ret jne sbb adc cltd popa lods mov lahf pop mov ss xchg (bad) pop int3 xor int mov pop in sarb xor xchg (bad) ja or test lret pop sarb (bad) jbe (bad) pop xchg pop fidivr xchg outsb pop nop lret xchg mov or dec mov test sub adc (bad) or xchg push xor xor sub xor leave aad sub fwait mov push (bad) and sub cmp faddp ljmp jmp jl push sub and stc int add sarl add jecxz gs (bad) lea jno jbe gs adc std in scas cltd lahf cmpsl (bad) xchg js ret and mov adc or inc lea lret in adc clc repnz sub das mov mov dec (bad) dec mov leave fisttp lock or repz mov (bad) dec icebp inc cmp mov lds daa jp mov or or jo dec mov push adc and outsb pushf or arpl mov aad mov push mov (bad) sub push xchg jg leave shrl scas test loope mov int mov je push xor and add aas ljmp movsl add push pushf icebp das jb xchg mov scas jo (bad) mov xor cli into xchg dec and jge or inc imul lret ret xchg ret or mov or add movsb dec cmp push and cld clc movsl sti popa jae sbb repnz add xchg sbb xchg call sbb dec push leave pop add mov (bad) imul div loope fisubl sbbb or mov jmp adc ss jmp pop loop in sub sub leave cld and mov jecxz lock push (bad) pop idiv xlat sub in and cmp mov enter adc rcll insl pop paddw push adc xor sub (bad) lods fsubrl push sub push ret cs jbe mov push test scas outsb ret ja sub and loop jb lret fstl lods xchg jge sbb out in xor jae sub mov xchg arpl je pop repz mov and andb popa mov adc pop into lahf dec (bad) mov adc add inc mov in mov rorl or pop cmp test ror imul dec andb pop lret xchg out xchg out and ret jp xor mov or fild das repz scas push push arpl roll fdivrl jl inc roll notb aad push dec mov xor add sub fsubl add (bad) or mov inc aas jle imul mov mov stc mov or adc movsb xlat test sub sbb sarl adc fistp xor pop xchg sub xor dec dec xlat mov or mov in ljmp popf repz rol (bad) out dec loop mov xorb mov nop inc ret mov pop ljmp sbb sub ret pop hlt inc (bad) into jmp (bad) mov (bad) jge in je out mov ds or mov (bad) into jmp adc push and push out mov add adc jb push push push xchg idivl fmuls jae mov push pop xor repz sub push ja mov leave fcoms test push das sub rolb and or out daa xor push inc das ret sub aaa insl test pop or stos push ret lcall mov adc dec ljmp add or int3 push stos gs xchg jp mov push lret in mov xor mov sub jae daa jns xchg repz mov mov fcos xchg push test insb scas nop mov out xchg int out sub fdivp imul push or adc sti sub shl (bad) (bad) dec add xor js adc dec inc call data16 rclb loopne push push jle dec insb pop cmpsb (bad) das and in aam jo push fdivs adc mov pop mov or and jg adc and jl das negl xchg sub fmuls dec pop dec or cmp ja,pn loope and pop pop rorl cmp popa (bad) xor push xchg sub iret lahf xchg lds ret mov mov inc inc std pop cs adc mov add icebp xor mov ja pop std cmp outsl scas sub leave jecxz or jmp out or xor add (bad) mov (bad) in imul jle pop push js fadds mov sbb mov lret mov add xchg lds jns xchg xor in mov or inc mov pop outsl bndstx mov cmp sarb or inc fildll cwtl jno push xor mov pop adc and lea mov clc stos xchg ss add aam mov leave sti jno sub add int3 inc or cwtl cmp and dec (bad) test push add jecxz mov xor cli divb jge cltd clc ljmp sbb mov movl ret adc mov mov cmp cmpsl ds (bad) cs test mov push or cmp out rol test and xchg lds mov pushf rcll rcll xor jb call and inc movsl pop or cmc sub sub mov jbe push or mov adc stos pop mov and mov push inc push dec out pop test sar fisttpll mov xor jg cli dec cs arpl les push scas xor xor sub icebp rol push mov mov jo rcrb add dec mov and bnd mov or push jns popa xor add jne cmp add and out adc scas (bad) aas mov sub imul jae mov pop jg pop pop mov mov clc pop or xchg lret or (bad) inc xchg xor adc xor mov sub jmp pusha dec cld ljmp pop or adc sub xor jmp mov mov xchg adc inc test ror loop mov movsl sbb jne scas fcompl pushl push imul out stc pop (bad) cli sub loop in cmp movsl je push and int jnp jae lret mov into sub in or lea clc and xchg std sahf stos lcall in xchg xchg and xchg dec idivl (bad) xor mov out incl lods mov add xor or mov add dec icebp sti jb pop aad outsl (bad) into das add call daa mov xor out sub jne cltd mov dec and sub mov scas out and sahf add mov mov dec aam out imul mov pcmpgtd xor xlat lea stc lret sub xor add ds icebp das mov fcmove jnp pop sub js dec xlat adc fistl (bad) mov xchg inc mov and rorb in xlat mov shr pushf loopne sahf cmp add mov aam loopne xor jp pop sti dec (bad) dec (bad) loope mov dec ret jo sub cmp jg and xchg into stos cwtl dec (bad) in sarl mov out dec int repnz dec (bad) xchg push push add jmp xor or push mov (bad) or mov lret push (bad) sub or ljmp inc ljmp mov add mov mov dec (bad) dec and cs inc mov rep ljmp and mov pop lds and pop xor (bad) pop xor add sbb (bad) scas out dec mov shrl mov stos (bad) (bad) in sahf cmpsb add fist mov add or xchg jp pushf mov dec adc jb mov push fcmove jle mov (bad) adc and aaa iret mov repnz (bad) lret push xor jecxz pop rorb in mov add clc mov fdivs and and loope lret sub daa (bad) (bad) daa sub pop push adc data16 imul leave negl loope sub lods add and ljmp shrl mov ret (bad) je mov dec and add sub mov xor mov icebp icebp daa movb iret or xchg xchg and loope jne cwtl jmp or push mov xor mov mov mov cmpsl dec mov loop xchg scas int scas mov mov mov dec and (bad) dec outsl pop js xlat lock sbb sub cli fs jle stos ret mov bound test push in mov cmp (bad) std mov mov std mov xor mov stc and out movsb hlt pop pop mov jnp jbe sub cmp or push (bad) mov pop cltd shrb ss push sub insb cmp sbb (bad) cwtl cmp dec js into pop pop int stc roll popa sub rorb and inc add and rorb dec out pushf bound pop dec in leave push adc out std push sahf es out jbe cmp sub pop sbb cmp nop pop xchg (bad) jae cwtd adc or dec mov or and out mov imul jbe jo push xchg aad mov push lcall stos jne out gs call aas and cli mov mov cwtl jecxz adc push repnz into js fdivs leave or push and std xchg adc xor xor xchg imul lds sbb ret mov (bad) mov xchg and pop dec add pop mov dec mov (bad) and ret cli add cs lods loop adc cli stos fs stos xchg imul pop lods sti fisubl xchg xchg cmp and mov push jne aad loopne cli jbe dec add xor xchg sbb je in cmpsb aam add cmc push inc outsb (bad) jb stos mov hlt popf test inc repnz xor (bad) mov fucomip pop xchg or xchg jbe jp mov (bad) out xor and (bad) and pop jge out lcall lock iret adc stc xor mov xor sub movsl test pop push xor mov arpl pop ljmp scas test xor lock outsb jno and aas adc lret addr16 jge stc mov mov mov jle mov sar sbb popf pop push je inc xor mov sbb insb mov sbb sbb cmpsl xchg push dec out xchg out pop repz push pushf dec loop,pn movsb push mov fcompl pusha pop jo loope add jp mov sbb addr16 adc iret (bad) pushl fildll and and sub loope xor mov mov repz cmp lret ret mov pop jl pop or mov sub lea ret jmp sbb cli jb test pop mov out mov fbstp (bad) testw and ret mov sti popf lret jp jecxz jno (bad) and mov or dec mov sarl dec xor fldenv adc stos cmpsb push jg mov cmp xor iret mov lds stos fwait sbb mov jnp dec sti hlt push add nop or add arpl dec mov fisttpl cmpsl aas inc mov mov div dec (bad) xchg bound adc xchg out and fiaddl in and and push fisttpll out das das pushfw popf pop pushf sbb imul cmp test inc pop mov pushf xlat xchg jle dec aam pop lock lea aas lods movsl shlb add mov das add jle out leave lret lret gs lea std jmp fstl add add cmp pop pop repnz mov or xchg lods gs je jmp xchg icebp mov push stos pop mov mov push pop clc rcr cmp dec inc enter mov cmp dec adc fldlg2 mov inc mov cwtl fucomi test jmp mov js sub in out mov or adc lret push nop mov adc add add loop push mov int3 cld mov imul push pop dec xchg movsl daa mov jg push pop (bad) pop ljmp sub sbb bound push test pop out imul mov mov bnd push fstpl cmpsb jno sub loope (bad) cs or adc pop test cmp dec mov das mov inc pop stc mulb cld into lahf (bad) mov fisttpl xlat add mov movb mov pop add mov sbb pop dec shll mov pop imul ret or pop dec pop pop call (bad) dec mov imul test sub out xor stc xlat and push sub mov mov adc adc add or jecxz and adc in add or mov in push xchg mov movb dec out push push sub in push rcrb or addb push rcl mov dec loope ljmp xor decb push jle movsb xchg lss aas xor push aad fnstenv pop fnop or pop push mov xor jl pop fnsave jne pop fildll sub mov dec cli cmc popa outsb (bad) jmp scas pop lock push dec pop aam jl sub jge js pop xor push pusha sti pop je add pop add aad xor mov mov js mov mov sub sub lcall rcll addb (bad) pop out inc and and and cmp jp in mov adc pop mov js repz cmp roll int3 ficompl or adc pop lock sar imul movsb lea push push add push mov int3 outsb mov aad xchg cli mov insb inc sti je pop daa fwait mov ja fcompl shl pusha or dec cld fiaddl jmp add xchg int3 fstps call mov ret repnz pop xchg addr16 cmp push dec dec xor xor and pop or inc inc pop inc inc mov in test cmpsb ficom out sub popa movsb loope jno dec je loop add icebp push std xor das notl dec int xor (bad) and pop pop lods xchg jmp mov lods cld add out sub sti gs ret jmp (bad) lret loop adc in (bad) dec (bad) std jns icebp int popa sub int3 mov sub scas loop es lds test (bad) leave in adcb out pop mov addb pushw movsl out mov sub je inc sub ja xor cmp rorb adc cmp fisttpll movsb scas sbb lahf pop add add inc sub popf mov popf loop aaa fldenv outsl std cmp push push mov push imul int3 out mov pop cld inc sarb (bad) mov out pop sub mov jb inc mov jbe or and xchg imull add add cmpsl pop jmp cs leave pop les cmpsb jno sub mov cwtl mov jp dec (bad) or xor xlat mov add push ret xor in xor jbe jmp lret pop adc xor (bad) fmuls and xchg shrl pop imul mov ja add xor hlt pop fs aaa les adc cltd dec mov scas pop mov cwtl into arpl icebp dec int3 cltd sbb mov dec cmpsl stos adc idiv out cmp lods out dec repz mov or jbe mov inc lret sub cmpsl xor out lret jbe ret push addr16 (bad) xor mov aad xchg sub xor mov in add fmuls sbbb mov movsb push inc sbb ja cmp jno in rcrb dec pop sub scas cmp loopne mov lods test and hlt les lret inc daa and sbb and pop mov cmpsl fsubp mov data16 add loope ret lods test pop mov sub repz (bad) jmp ret nop testl sti pop push repnz sahf imul xchg lret add ret lahf jae mov or push aas fild and or push outsl mov rclb pop inc jbe test mov xchg xorb mov popa pop das sub and out fstl scas test sub xor stos jo mov pushf (bad) jmp fnop push idivl xlat adc xchg mov shrb push das add fidivr sub ret pop or ficoml adc in or jmp dec lret js xor loop gs mov lea add mov inc xor pop jb pop (bad) mov das rcrb ja sbb shlb hlt mov out or xor hlt jecxz jecxz cmpsl pop adc iret push sahf je xorl dec clc call mov sti fisubrl pop and leave ss push fistpll push push out dec (bad) icebp push add mov pop jmp or dec cmp es mov ja call movsb sbb dec xor xchg mov aaa stc xor (bad) loope pop adc iret hlt adc scas sub push mov into sbb and test (bad) stos xor or pop mov or cmp adc adc test jo mov push xor je (bad) jg fdivrs jmp sti adc or lock je adc test popf repz jo call in jmp cmp mov or push push lret in dec sub or xchg fisubrl jno in scas xchg js jp mov xchg sub sti mov dec pop fdecstp cs push jb rorl call addr16 in in js xchg pop add jo idiv loop xchg dec pop iret jp and lahf pop cmpsb pop sub xchg in cs enter xor or xor fldl pusha add add ret repnz aad fmuls stos je xchg fisubrl fdivrl test sub out add cwtl mov pop mov out jmp mov fs xchg repnz xchg int3 fsubrl pop leave rcrl repnz mov leave xor xlat sub out adc cmp push xor or dec cmp sub cmp cmp and pop popf mov cmp pop daa (bad) or out xchg ljmp gs loope cmpb pop lds imul (bad) mov movsb mov lods sub out cld push pop or and sub (bad) mov sub adc add mov pop icebp loop push sbb xchg adc lods xchg ficom ret fimul out pusha or mov mov cmp adc pop call or scas rcr inc in pusha aas and test xor mov inc xchg dec stos cltd dec jb or sti mov test pop std xor repnz and lahf or (bad) leave and das ret pop jmp rorb repnz mov int3 pop popl adc clc sub lock push mov repnz pop ljmp pop adc dec andb loop sub imul iret inc add jp sbb sub cmp or js lods xchg les xchg cli lret test test divl add imul xchg out dec jge push mov pop dec lods mov push lret movsb mov and fdivr and daa (bad) push gs xor pop fildll mov (bad) cmpsl fldl and movsl xor ds mov mov insl mov shrb pop popf jle sbb add lahf inc xchg mov cmpsl jne mov dec inc frstor je push fiadd in pop shlb push test movsb andl adcb mov jge xchg stos (bad) out jecxz push pop dec rolb dec (bad) mov pop int3 movsl mov cmpsl push adc rcrb xor ss xchg fildl pop lods icebp movsb add xchg mov subb mov mov test fidivrl mov or mov jno sub test aaa xor fldcw cld sarb lods stc les pop inc sub popf pop andl data16 and ja jb dec call inc aaa das add cmc sub xor mov cld in xor ret popa sti xor xchg and mov or jmp push ljmp shrb cmp outsb ficoml jne cmp pusha (bad) jecxz pop xor cmpsl dec and sub bndstx clc insl mov (bad) je fdivs or wrmsr stc sub fmull (bad) sub out pop das or faddl loope (bad) inc inc je lods mov xchg stos and addb jne sub or cmc test mov jbe jg or or lods xchg sub ss into mov pop or call gs add xor rcll stos (bad) or loop rclb ljmp fcmovu jge sbb ror jno leave test fucomi movsl clc daa pop add out mov pop rorb add mov xor pop or lea jmp mov adc leave aas fmull push insb or outsb test add sub dec mov imul je push adc xchg in movsl mov hlt jg lods add jge fs or jo popf pop mov pop rcrl test mov jl or psadbw fldpi out fistp das pushf (bad) xchg fcomip imul aaa mov scas or inc xchg sub jmp jno dec enter test dec xor lods mov push cld jo and int3 mov clc pushf enter cmp jo mov push rorb hlt mov jge xchg lahf loop sarl lds push pushf (bad) or pop cmp xlat push iret cmp mov adc flds pusha mov aad sub push mov lock sub xor or inc add mov idiv dec lret or loope or mov add push into sbb pop dec sahf (bad) loopne iret jnp pop pop jmp push mov and sub loope xor xorl mov ds repnz lret ljmp adc pop pop ret pop jle lds clc fnstsw pushf or pop add jg and adc inc xchg add mov scas stos out lret lods aad dec jo dec mov cltd ret push pop xor iret (bad) in scas es or cmc xchg ja lret mov pop (bad) sub lret dec lret mov pop iret inc jecxz das jecxz xor mov jno ds int adc mov fs mov mov jp fst pusha popa add sub jno mov add dec mov mov je or sbb pop sub dec jno hlt or inc in xor out (bad) inc lahf ret jo pop rclb mov cltd in stos popf mov les mov repnz mov lods not loop mov and sub daa or sti lods or adcb dec loope sbbl mov xlat ds ds sub lds and mov sub sub mov ret mov jmp mov dec cmp fldt lret push adc mov movsl pop add (bad) jne test and loopne ficom adc bound jmp xor iret stos and call std xor rcll add xor mov push bound pop mov lret aad lret jp icebp jmp (bad) adc mov lahf jno push sub mov (bad) ret ret jle jb mov xchg adc push mov popf xchg stos adc adc inc adc add mov or call (bad) out roll cltd rcrl push mov fist decl loope push push xchg inc jmp icebp dec sub xor leave aad data16 dec fldlg2 sub das sbb dec add dec jo xor and inc sub pop mov out sub pop out loop imul lcall dec std mov sub fmull pop outsl daa pushl or shlb shr add sbb daa call or divl (bad) in push mov dec jne gs cmp mov mov jmp (bad) pop call ficomp shrb or push mov jo imul sbb mov sbb ljmp and in adc ljmp imul mov dec stc dec adc data16 out adc (bad) jecxz inc cltd sub int push lea push xlat push xbegin adc shrl fdivrp lret mov push xor mov xchg push cmp repz cli lods aad xor or adc fbstp mov (bad) adc pop xor (bad) imul int3 sbb cmpb repz add sub lahf lds (bad) lret push pop adc stos sub jnp cmp mov shrb jl dec shrl mov push fistl adc shrb inc and int inc cmp aad mov push inc push push xchg call packuswb or and pop mov xor cmp sar cmp (bad) mov jno xor add shrl mov mov xchg cld adc jnp xchg xchg dec mov stc mov popa loop inc xor lret call arpl mov cmp cmpsl icebp insb js fisttp leave mov rol roll jg cmp xchg xchg lods jecxz jmp lea ja add inc mov jle push xchg gs sub jae lods mov and sub xchg outsb mov xor sbb jp pop cs add dec rcrl das add inc jb aaa mov xor xor xor dec xor xchg rcrb je bound (bad) dec jle leave fsubp jle or aad push aad into ret fisttp mov scas (bad) inc idivb gs add or std jae and incl and daa push in mov mov xchg jge (bad) (bad) decb and inc shlb repz jbe daa or dec ja inc dec push iret mov pop call ret fdivrp ret pop int3 add cmc js pop jno add sub pop aas add xor jg pusha push outsl xor mov pop in push cltd test or add adc dec fldcw adc xor cltd jae adc (bad) sub xor cmpsl (bad) cs leave (bad) movsl mov mov adc fcmovnb mov xchg adc out gs ficom jbe sub push sub (bad) sbb push lret js pop out sub jge dec add xor cmp mov pop xor int3 sub push sub mov mov cwtl push daa inc jge inc pushf into lret icebp (bad) lahf mov cld push popa rorb idivl xchg sti cmpb mov push push xchg xor xor mov outsb js xchg std mov js pop and cwtl jnp jbe lcall jmp (bad) clc dec ficomp call mov or push inc push ret adc push lret push and pushf mov (bad) imull jnp in iret push rclb pop stc mov mov push push das adc pop mov mov mov or mov outsl push cmp arpl sbb xchg (bad) pop in dec sar fcmovnb mov xchg pop adc dec xor pop pop sahf in or das pop cmp mov nop arpl idiv and inc mov push out sub (bad) or jle lret (bad) xchg and ss mov cmpsb xor cli popf xlat adc mov inc in in jge or ljmp xchg out mov lret repz jl pop out push mov sarl push cmp dec or xor xlat push int3 push lret push mov and xchg adc outsb push fwait out negb std jns push ja stos lahf add lret and das div jle iret mov mov jge xor lea rcrl clc imul leave or insb leave add lahf cld mov in and or shrl jmp jle mov fisubl or fmul and cmpsb scas or or aaa mull jl jle pop ret dec setg rcr xchg xor inc out or xlat fs cmp dec dec imull cmc test (bad) push sahf jnp pop cmpsb pop testb test mov popf push stos mov cmpsl fidivr ret pop and lods (bad) mov jl pop cmp das addr16 push mov sub repz or cld mov aad mov dec add out mov sub xlat add push cmp stos cltd add fisubr out dec in adc (bad) jbe das push pushf insb mov test mov inc mov lds push pushf scas sti fldcw adc jne inc leave push pop (bad) int or lods rcr ljmp pop and ret stc xchg xchg push or imull mov pop pushf mov subb out js sub inc inc xor stos sub and fsubl into add inc sar mov sub xchg xchg push mov push pop sbb outsb lea jg jmp outsl cmp dec pusha ret mov mov jmp icebp add popf pop cli sub and stos lret pop (bad) sub push lods sub decl add add sub repnz scas pop mov jecxz mov jb lahf sbb sub mov xor ret jno mov mov test repnz xchg push lret lret xor mov iret mov lods pop pop and mov push push in sbb jp or das xor mov mov and mov outsb hlt int3 aas sub cli push fdivrl leave xchg xor lret pop sbb mov pop pop out jnp std lds stc out dec fsubl and (bad) jne scas les adc or mov adc subb repz jp lods outsl int sub xor cmpsl mov xor aad fisttp and dec (bad) push aam or pop add mov jmp push sub sub pop (bad) mov lret sbb mov (bad) test dec jo icebp pop sub int3 mov push lock sub aam jmp int dec iret hlt ds aam les out (bad) dec dec jg cmp loopne iret pop es xchg sti lahf mov je lods icebp mov jp xchg xchg dec mov inc in (bad) sub das xorb sbb adc bound xor xor mov sahf push out mov xor imulb jbe or lret and sub sub test sti mov (bad) gs mov ja adc adc in pusha and lahf pop mov pushl popf callw fcomps lds add ljmp into ds out into inc inc mov xlat xor adc shrl mov ja add aam leave or dec inc test loope pop cmp pushf pop out cmpsb scas mov xor mulb adc push scas jecxz xchg mov xchg push xchg mov jmp scas pop adc lods push in push scas mov pop jb dec mov test lds xorl rclb out or and das fsubs lret dec ljmp fldcw mov ret (bad) out mov sbb push mov add xchg out adc (bad) lea dec and dec or sar xorb xor push out dec mov push mov push and imul sahf or push cmc ret pop dec pusha adc mov push mov ret jne lcall xchg push mov pop pop aam cmpsb xchg enter pop cmp cmp mov and jnp push insb jbe shr inc pop pop add adc mov les ret push push imul inc jg ja pop inc or in push dec (bad) cmp sub movsb and pop lea adc xchg (bad) out aam and push mov or jecxz mov dec mov (bad) mov mov jl (bad) and inc or cld mov jmp adc push jecxz jns dec test xor icebp mov xlat adc xchg jnp test fistp out xor inc dec adc sub int3 jle stc stos xor fidivr iret push mov adc or cmc pop push dec xchg icebp pop inc sub negl pop scas int scas pop stc dec dec sarl out clc test adc xor pop add cltd icebp aas int3 imul pop and mov dec fldz lods les and imul cmp and in daa xchg jns xchg adc push leave pop cs pop leave inc jmp test cmpsl inc ljmp das jge into xchg out stc add outsl add stos out sub pop test in mov (bad) lock shll xchg lret fcomps cli lcall dec clc mov cwtl ror add decl pop lret add inc movsl jle daa roll or xor pop stc dec scas jl push mov and xchg jp into fs mov cli xor xchg gs lods dec aam adc lock mov pop dec xchg mov cmpsl xlat dec scas lret and mov dec jne pop popf (bad) add insb dec scas aas xabort out jne pop push scas jl or ret test jmp or add dec mov cmpl call mov xor push sub sbb js dec ljmp dec xor and mov addr16 adc add das rcrl cld lret mov in push (bad) idivb and add or (bad) jge add jecxz pushf and jge outsb cmp (bad) mov push add and push add mov inc or xor out xchg jge iret xlat inc out lret sti push mov xor enter add sahf dec xor jno mov inc push test or mov testl pop mov imull sti sub iret mov ret push sbb mov mov jge bound xlat add lea lods cwtl dec xor incl js or mov imul inc out dec mov in push stos popf jl subl cmpsl pusha mov hlt cli ljmp divl (bad) xchg cmc mov sahf dec dec pushl mov fistpll sbb mov and add pop mov jmp lds leave adc ljmp lahf lret out fdivp (bad) sti xchg je and inc enter movsl repnz push add int loope cmp dec pop dec mov xor cmpsl pop pop int inc push lret sub lods mov mov adc fcmovu lods sbb pushf mov xor das mov pop add sbb call iret aad xchg xchg mov fidivr sub mov mov mov daa (bad) gs xor mov xor jmp imul push icebp and test out sub and leave rcr lret rcll mul daa mov add push sub push xor lret sbb dec sub es cmp out xchg loope pop lcall or mov xor jge xor sub and imul cmp (bad) or and bound lds (bad) and sbb call clc js lret and cmp or imul jo mov nop (bad) sub mov (bad) xor push sub jnp (bad) sub fildl imul pop in (bad) and mov xchg (bad) xor testb cmp push imul jne adc and aaa inc (bad) cmp xchg mov stos jne mov dec or sub pop lock dec out fdivrl (bad) in loopne and pop call dec out sti cwtl mov (bad) sub ljmp (bad) adc dec jl test xchg mov sbb add mov aaa (bad) stos sbb daa jg (bad) scas jnp das push sahf mov cmp and or push add push dec add mov xor stos jno xor jle sahf out dec sbb les jnp jmp iret lret sub inc pop xchg add adc xor fimul pop jb fstps addr16 sub add xor or out fmull and push jnp shll iret je pop xor cmp jp mov sbb icebp or mov xor insb mov inc xchg call push mov sbb xor jne xor xchg xor dec enter mov add fstpt cmp arpl xorb mov popf push aad outsb mov aas xchg out dec jne hlt sub mov xor mov xlat or enter or repnz pop mov aaa fisubl fistp add outsb cs movsb imul and pop clc popa sub mov in (bad) dec jmp add dec cmp lods in pusha mov push cmp push into sbb movsb sub lock sub enter mov (bad) xor imul cld sbb pop sbb idivb sub cmp pop xor add in std fistp clc pop out jo (bad) out hlt (bad) push idivl arpl test pop outsb jbe mov notb mov out sub mov xchg lret and and repz daa inc es xchg nop mov lret mov sub dec xor or and jne std sahf stc adc jecxz xchg leave fidivl je stos cmp inc lret divps sar or or ss sbb shrb inc cmpsb fdivs mov rclb pop pop (bad) cmp add das xchg sbb add inc ret add jge adc cmp pop mov les mov jle das mov push and repz mov mov sub (bad) push or jp lea push xchg adc ret cmp or cmp mov pop int3 fstps cmp add ret adc and sub sub sub movsb stos loope or leave add mov xchg lea (bad) xor scas clc cmp cli lret adc jmp call inc lret mov adc sbb pop lahf push adc mov or jg les inc out lahf in or and adc push andl ret (bad) mov sbbl pop repnz push sub mov lret jmp mov repz fistl ret jle add das into cmc sbb pop movsb push add fidivl xor xchg inc ret (bad) xadd and out pop jmp jg test xchg test movsl loope loop mov shll mov int3 popa shlb sub jge fs std or pop scas pop data16 sbb or cmp out dec or jnp push mov jns mov (bad) xor cmpsl xchg xor rcrl das icebp push sub mov or dec and cmp ret and mov dec outsl xchg sti sub rolb fistpll ret nop dec inc push jnp scas xor ds xor loope fstp les mov lock jno in mov (bad) insb imul gs dec (bad) jp jns mov or dec pusha lret mov mov mov in lock jp imul out out or fbstp mov cmc sub out mov pushf ljmp pop xor cmp shrl inc jmp mov scas into xchg push xor cmp or jne xchg push sub mov sahf insb rcll add jnp aas push push jp outsl scas mov pop xchg (bad) outsb fisttpl mov mov fisubr into cmp stos lret mov adc ficompl cli pop fldenv aam stos mov cs inc and add cmp pop add dec adc xlat or icebp sbb aaa fs lods inc in (bad) adc leave ljmp test dec (bad) dec (bad) xor dec loop xlat mov mov dec xchg pushf out daa push mov repnz outsb push inc push daa out test cmpsl hlt dec push ss and or popf sub fisttp pushf or test test pushl movsb repnz mov push mov scas jge loope (bad) in xchg fcomps ret movsb cmp mov fwait shrl jg imul sti and je inc xchg shr jne lods adc out int cs xor loop add dec mov outsb lahf cld jp dec xchg (bad) xor repz xor pop push aad out mov sbb int cmp ljmp push in repnz loop adc xchg dec insb inc add fdiv out hlt int out add jge aaa cmc and addr16 das mov and negl mov iret and dec mov stc push hlt subl push xor push mov xor mov (bad) iret movl cmp fsubl int3 je popf icebp add xor sub or pop cmc shrl mov push or repz jmp dec je aas pushl and je lods bound std sub sub and mov testb pop pop sub lods mov and fwait pop mov pop shrl dec push pop mov push into cmc fnstenv cwtl test inc jmp out push lret xchg and adc cmc fistpll dec add addb mov and dec (bad) popf mov aaa or and pop mov (bad) dec imul out pop mov fnstsw cmp addr16 stos setno inc icebp and int3 leave leave cmp sbb out enter (bad) xor sub and cmp rcrl loop mov mov mov repnz jge inc mov mov adc or or dec xor aam jecxz add jmp sahf pushf mov roll push (bad) xor lock int add sbb ja cmp pop test push scas loop xchg call mov out sahf ret and das push pop mov dec int sub pop sub cmpsl cltd jp pop adc xor mov mov and mov (bad) outsl mov jmp lcall inc inc dec (bad) aad add scas mov inc pop ljmp inc out call mov scas ret ss push push jnp pushl cmp sbb jno xchg xor sub rorl sbb (bad) or pop mov hlt pop pop movsl and pop adc test jnp dec (bad) cmpsl adc cmp mov (bad) xchg imulb movlhps mov and sar mov jge stos inc hlt inc pop ret xchg mov insb pop pop call das (bad) sbb test dec xchg loope cmp (bad) mov xchg fist xor ret jmp cmp fdivrs dec sub mov pop cmpsl fs xchg cld xor or ja dec cltd pop xor xor in sub dec jne out fmull add std into loope (bad) lods dec movsb loope inc lds mov call dec fild mov out lret mov and xor sub fcompl div in sub cmpsb cmp out xchg sbb (bad) xor mov lahf fisub fmuls xor in cmp mov and sbb mov into pop and (bad) xchg jb cmp lcall adcb std mov add or push sbb xchg lret es les and (bad) xor push jg mov dec cli repnz mov test pop inc and test lret dec and sbbl inc outsb gs repz test xchg repnz pop add stos fisttpll jns mov insl xchg or pushl dec ljmp push les mov clc mov cmp jl negb rcrb call loop daa sub lret dec adc in mov adc jne jmp das out sub ljmp dec pop loope outsl loop xlat (bad) in jne scas xor xor lods xor sub sub or mov (bad) imul pop and adc stos and inc imul xchg (bad) mov aas rcl add pusha out adc das mov (bad) fsubl aam inc xor rcrl ret or (bad) inc inc add xor jg add fisub mov popa xor sub in adc sub push adc jbe cli cmp pushf inc movsl in xchg and leave sub cmc ja into addb mov pop or test movsb xor add movsl jl xchg pop (bad) insb and mov pop cmpsl adc xor ret and push je outsb mov or mov or sar fcomi notl movsb xor fwait lds push dec sti repnz ret (bad) pop or shr movsb jmp iret mov lahf dec aaa sti sub rorb dec movsl ss notl (bad) xlat jnp (bad) test (bad) (bad) mov bound fidiv push fidivr ret inc sti aaa dec cwtl bound sarl aas sub dec out and add pop jns or add ret xor icebp js dec sub inc pop push bound cs repnz ficomp push ret ljmp iret ljmp out repnz and into fucomip fisubl (bad) xor out push daa add push mov adc dec repnz out mov pop pop leave mov dec cltd sbb and loope jp push stos cwtl dec repnz sbb pushf sub cltd and jg lahf sub add sub mov mov jg sti stos jge shll outsb or lret pop not sbb jmp (bad) int and lock (bad) (bad) nop gs gs test cltd mov stc cltd orl js and fcompl lahf inc ss std jge fimul dec xor (bad) cmp jnp test sub aam adc int3 xchg ljmp enter xor pop and and jg jne jmp inc lret xchg dec cld popf (bad) hlt daa in or adc adc cltd test xchg add pop in push lds sbb push addr16 xchg and add outsl push sub test pop daa mul push in jb pop js popa jne cmp dec inc dec stos popf jae cli push pop push gs sbb mov pop movsb sbb pop and xchg ja sbbl mov inc or add enter (bad) iret push mov mov mov imul xchg pop push (bad) outsl mov (bad) dec lea push dec sbb out shr popf iret outsb xor (bad) int3 xor adc shrb daa or insb dec jmp and scas test stc pop mov adc mov mov or mov push push mov pop mov jb sar xchg and icebp ljmp dec sub push fisttpll dec and sbb xor or and mov in icebp adc mov leave fldenv mov add int3 mov xchg iret out sub daa fsubrs mov mov mov pushf lahf lock popf cltd sarl testl mov data16 mov fcoml jnp dec sbb sti andl dec (bad) add scas inc jge jle jae mov inc lret sahf jo push xchg adc fistl jbe out fs popf das ds cld scas lea clc sar sub jne adc mov or flds cmpsl jg aas or hlt shlb or lahf and jns adc loope mull jmp push jno sub fimul adc mov inc sbb sub sbb popf cmp fidivl les adc fdivl xchg lds sbb and sub dec lcall pop fcoms mov sbb pop lahf aas xchg mov dec fbstp push icebp mov and das pop sbb or pushf cs ds es mov pop cmp out daa pusha repz (bad) xlat xor mov push sub lret sub or adc (bad) hlt pop jns push sub mov xchg insl sub mov cmp (bad) push jmpw or pop or pop sti popa inc xor cmp cmp aaa push and insl and test cli wbinvd das insl mov jno in push inc and aaa pop mov mov xor fiaddl mov sub into rorb jb or (bad) loope dec out mov sahf and pop repz sub or jb mov xor popf jge enter pop (bad) and lods xchg push mov (bad) dec int3 icebp xor ljmp popf cmp (bad) cmovge sub loop rorb xor fsubrs xchg scas hlt lds stos cmpsb sub out jg lcall push fcoms ret xchg and inc aam or cld add (bad) jo xchg loop mov xor mov add call out scas inc or inc aas add sahf repnz (bad) (bad) jecxz jmp fwait xchg lahf popf movsl call jbe scas sub mov stos repz add sub inc push pop mov push lds add xchg jl sbb ficom add scas je iret stc dec mov call jne jne push pop cmp add jmp push leave daa push scas daa mov cmp or jne sub sbb (bad) mov xchg jl or lds pop mov xor mov jge lds xor mov ficompl sbb sbb mov pop js mov add xlat xchg xchg inc insl icebp ljmp sub inc mov or mov jae mov xlat pushf mov test loop xchg or sarl sub negl nop adc stos cwtl xlat or xor mov sub (bad) mov subl sub mov popa addr16 cmp pop or fnstcw mov jge clc (bad) xor adc pop add loope add jne fs push mov aam or push push js or out daa ret shrb out loope mov or ret xchg insb dec out test cmc mov mov leave popf fdivrl icebp stos mov jne mov clc mov stos add popf (bad) mov sub push aaa or mov xchg mov push shr sub dec pop pushf mov std ss mov add stc sti push and sbb push leave iret inc push xchg xchg xor pop jbe (bad) jmp push xor clc sub or out jno xor push add sub fildl inc fcomps mov (bad) or gs jge xor sub testl mov push or out cltd hlt jb pop xor test dec inc add (bad) mov inc lret cs int arpl pop (bad) pop test lcall jmp rclb mov imul cli fbstp sbb mov ljmp dec popf or jb fwait mov data16 inc sbb movsl lcall xchg add add mov data16 daa repnz lahf pop xchg sub movsb or fs cmp shr mov dec push jmp hlt xchg add and (bad) cltd fwait cmp es lods stos mov fs fdivr sbb xor pop inc scas fs pop mov icebp (bad) push pop adc and jnp imull or repz rol mov xchg inc adc ficoml in repnz adc sbbb mov into xchg loope cmp leave repnz rorb leave stos add mov pop pushf xor enter negb mov push xchg inc xchg dec sub lea jb ror (bad) cmp push mov inc mov out or fist cs mov call ftst add and or lret daa cmp (bad) pop inc jne mov fildll clc cmp gs cli mov out xchg pop pop imul lods mov rcr fsts call inc xchg fs sub and (bad) das mov pop and pop stos rolb repz roll mov mov lret mov ret xor fild fbld lret fildl add push aad divb xchg or and inc sub ret mov sub jb daa sub rcrl testl bound notl pop mov inc or jne cmpsl into and nop mov mov repnz xlat (bad) mulb cmp imul test stc jmp test add pop mov bound int3 jno or mov in (bad) xchg jno lret aad sub mov fwait stos bound mov sarl cltd jmp xchg (bad) dec cmp lcall jmp add leave div jno inc repz mulb sbb cmp mov dec (bad) jb cmp lods mov mov into lahf hlt adc imul cmp test mov dec pop mov shll cmp in sbb mov adc stos lds mov jno inc add pop inc cmpsl popf outsb sub jl (bad) xor stc xor or jno dec jmp loop jg mov jb shr int imul xchg or jbe les sti lods xchg xchg cwtl xlat add pop daa (bad) and ja cmp leave and push xor lea mov or insb std and mov fbld cmp movsb cmc cwtl test lret pop dec roll inc jl das push inc cmp jp mov and add sbb sbb fdivrs sub leave shlb pop or cli test lcall xchg call pushf or lahf mov sbb dec lods pop daa pop shrl out add and pop inc mov (bad) (bad) pop mov js jae inc push xchg jmp out je in xchg pop mov adc sub xor mov sub mov (bad) out lret mov add (bad) sahf lods gs inc ret fidivr (bad) inc imul pop leave repnz xchg cmpsl mov mov (bad) jnp jo sub xchg pop inc xchg lret lock or out bound inc shrb pop xchg mov inc stc and (bad) cmc lds lods and mov aas clc fmul (bad) lock cs mov and mov jo mov mov or cs js jl insl jo loope das (bad) popa ss stos xchg les cld dec xlat jecxz mov push (bad) jmp leave pop (bad) hlt dec push les lret test lret lods xchg push ss (bad) mov pop push add out fstl push and mov and xchg bound fcomi lcall sbb mov cmp es pusha or mov imul in sbb jle mov mov inc mov sbb negl ljmp int clc stos pop sti subb pushf (bad) push hlt mov add pop ffree shll ds sub xchg ret jae lds mov out mov subb add ret arpl and (bad) cmp daa sub test out scas mov shrl mov push mov xchg inc push sub pop xchg stos pop ret adc (bad) cmp pop movsb clc icebp cltd sahf movsb push je cmpsb push xor mov fxch dec sbb and mov add (bad) stos cmpsb bound jo data16 xor dec mov jne je addb in pushf mov in test out pop add js xchg mov push mov das mov loop mov adc enter es or sub dec ret xor in ljmp push lcall dec pop call xor into popf data16 mov (bad) addr16 idivb test push push (bad) lret ret (bad) ja rcll movsl jge add cmp insb or mov jne mov mov into sbb loope (bad) mov sub add pop lock fs stc mov and push arpl cmp cmpsb fs call lcall (bad) fld1 sti in sarl fldenv jecxz mov (bad) sti mov sbb addr16 test fnstenv lret sub xchg bound clc aad dec pop jl inc mov fs stos mov sub ja or icebp movsb xor adc movb icebp adc pop (bad) movsb adc pop xchg lahf fistpll fwait or pop and adc je jg mov inc lods xchg scas cmp mov je add add mov jno das mov inc pushl stc movsl fldenv scas xchg cmp inc jmp mov idivb and adc xchg mov insb sub ds cmc pop sub dec mov insl mov cltd pop int imul (bad) mull dec fldlg2 inc ret mov ret (bad) fstps test cmp movsb (bad) xor ret lcall or fldenv dec pop dec pusha pop mov push push ret fldl pop bound movsb mov aad add bound push dec mov cmp and cmp daa jne int fnstenv scas mov outsl mov sub (bad) scas lret test das lods push hlt out xor rol jl mov out and pop (bad) repz or or pop (bad) ret mov mov add mov sub jmp gs xor add dec jne test scas fcompl mov push jg sbb and push and dec jb roll adc and cli insb fidivl pop shll mov ja jmp xlat jmp loope cmp xchg jl ret pop aad mov mov leave mov jns jmp test dec xchg or sub pop (bad) es nop (bad) push cmp movsb jg or fcmovb (bad) fcmovu pop dec (bad) or sub pop divb mov (bad) repnz insb push ror inc or jle leave jns xchg cmp and xchg sub repz loopne jg loop fldt add in mov pop jmp lret je pop data16 and or ja mov (bad) (bad) mov mov and dec push push xchg push jb add xor jne ljmp pop test mov stos imull dec ljmp inc add (bad) cmp out les xchg movsb (bad) sbb (bad) or nop dec mov xor push mov and pop aas lds je xchg and cs cli iret fmull mov test mov cmc fisttpl and xor inc call lret jp add sub shrb dec xlat cmpl bnd mov (bad) xchg and mov popa jmp into outsl fcomps xchg fstl ljmp xchg sahf cli (bad) lret mov fadds rcll addr16 int3 mov mov cld inc gs scas mov (bad) bound add push sub icebp pop xor xor mov (bad) pop mov xchg scas lods mov mov ret jge sub fldpi imul sub pop xor ret fsincos outsl mov mov (bad) jg add pushf dec out push push loop inc imul leave mov (bad) jp add cmpb push xor sti cmp das and push popf and cmp repnz mov sbb mov xchg push and pushf cmpsb sbb loop mov cld xlat out sub xor fadds notb xlat dec inc sti or mov push insb (bad) or xor movsb fisubl rcll and repz shrb pop or mov jmp mov pop cmp adc (bad) cmp in cmp into inc test fnop or scas lcall movsb (bad) (bad) scas mov or stos fsts xchg mov push clc shrb jp divb fstps dec mov notb cld (bad) mov mov xchg cli add iret push add xor jbe mov dec je xchg jbe mov xor pop and out out lret xchg pop cwtl sub mov and lret add or mov and sub or mov add rol mov inc lds rcrl imul sahf push mov sbb fisubrl mov push jmp addr16 or ficomp int pop aas call xor mov rcr push pop pop xchg arpl stc xchg push mov pop dec push mov add and fsubl jmp lds sbb loop push icebp imul xchg mov add push dec xor test lds xlat jmp lret adcb negl aad inc push cmp out mov and ret or loope repz movsl jo daa or pop dec pop xchg std adc mov push jecxz sub jge sub (bad) push je sub js fdivs repnz scas sub mov jnp das jl jmp sub rclb ret js iret jle enter je in push test push enter adc imul dec idivl clc scas mov negl mov das (bad) clc popf stc sbb mov pop out ss push pop out in add lock pop rcrl dec out mov movsl stc pop (bad) imul lahf das inc repz imul test or add sub test inc mov pop push fs mov mov xor pusha mov outsb mov inc std repz out push cwtl movl xlat ror push mov mov cmp jl inc ds and cmpsl in xchg jmp pop sub stos sub cmpsb popf pushf push xor mov xor mov jge pop push fmuls xchg fdivs lcall adc inc cmpsb cli jge sahf (bad) ds xor jl bound cmpsb sub or fnstcw mov fdivrl jbe in cmp scas inc mov outsb dec jmp xor push ss or aam gs int add mov es add mov pop rcrl repnz and xchg fistl fwait mov aad out and pop ret imul rorl les (bad) je ljmp jb and mov lret or orb ret clc test gs dec pop cmpsl jnp and or es sub sub xlat inc jge je enter call mov cmp dec mov pop mov mov xchg adc adc and (bad) (bad) sti jne push mov fsubr js popf mov xor mov xor jnp cmp sti lret lret inc pop xor pop out lahf rorb (bad) jge aam sub and sahf and or dec leave xor ss subb cmp inc sub push jb or enter pop add jbe sub mov ss add pushf (bad) sub pushf sub daa out push adc mov cltd cli mov nop mov shlb jle pop cmp sub data16 sbb lret mov or (bad) push outsb aam add fldenv (bad) sub sub or sub jbe mov jbe sahf sbb mulb xor xchg and pop icebp stos cwtl test popf pop cmp mov stos adc sbb adc sub dec adc ret pop in jle test stos mov adc or aam rorl inc sub jecxz into push sbb pop out call dec lret mov xor test nop and and xor mov dec mov sub or out mov mov xor ljmp test pop in mov cld repz jb xchg ljmp mov and test mov lods les cmpsl into pop dec inc add jl gs aad bound fs fcoml bound or lods imul jmp das and repz (bad) mov xor rorb lret (bad) subl mov sub dec outsl dec push mov aas fadd ljmp xor imul stc leave pop mov mov cmp maxps gs cwtl sub mov push add leave xor mov das push add ss popf pop pop adc fisubrl or inc movsl test xlat inc out and xchg or push pop jmp and leave loop fidivl sbb lods or icebp mov jns mov mov ss and scas ret shrb jg daa add psubq jge inc xor incb inc rolb and pushf lret mov or popf mov outsb loop ljmp dec add or fidivr adc mov add scas mov sub lock inc (bad) mov cmp daa lock dec push cs clc std les cli cltd fnstsw jmp pushf stc cmpsl or fnsaves (bad) or mov loop sub xlat dec popf push xchg xchg loope and mov cmp mov sub enter pop aas scas adc clc (bad) mov push pop movsb lret jns mov shr icebp lahf out pop (bad) xor add and push (bad) pop mov pop adc add add mov jp push add mov fld sub hlt iret mov xchg ljmp cwtl adc cld add fcmovne cmpsb sub testb inc and outsb lods push mov (bad) icebp sti out test mov inc ss mov daa inc push adc repnz aam dec adc (bad) push mov call xor test (bad) xor lea (bad) cmp test add ljmp sbb lahf roll xor leave repz (bad) and mov sub addr16 mov add mov je pop ficoml fisubrl xor (bad) and and sti push dec cli popf push cmc lock cmp mov xor ljmp stc fs mull dec add and sub xor imul sarl imul adc lea add or jns loop add cmp mov hlt push imulb and adc adc divb rolb xchg pop xchg mov stc hlt and imul add and jge imul add or and loop cld loop fnstsw lahf inc ljmp mov mov jecxz in insl sub add cwtl arpl sbb lret in push mov lods sbb sub ljmp xchg fs daa int3 push pop mov add das popa inc out outsb xor (bad) mov out mov aad test dec dec lret or and adc (bad) push test inc imul (bad) jp mov fwait push lret xor rorl lock sbb mov or jmp repnz push cli and rol mov out mov dec and fcoml push xchg loopne repnz or pop mov mov int add or mov mov jno push mov pop fcompl pop push sub sub jl jmp xchg leave sti mov out jmp fbld pop and mov cmpsb lret adc andb in sub add mov (bad) add add add and xchg jl xlat (bad) adc mov xchg clc das and push dec and daa adc sub orb subb dec jae xor mov stc jge xor adc dec jge stos mov mov out aad aam jmp ffreep pop sub dec mov mov pop add mov stos fldcw xchg out ljmp mov mov or psrad pusha jne mov sbb or dec rcrl addr16 shlb stc xor sbb (bad) dec and stos xor sub add xor adc jle xor cld mov (bad) push pop inc inc cmpb cld stos das rorb stc popf pop sub sub icebp stc jle sbb dec lahf adc xchg pmovmskb cs lret pop sbb mov and dec or outsb xor cmpsl add add orl iret (bad) aad clc xchg mov sti out cmp mov bound fisub out test cmp mov cmc lds xchg iret lret int3 mov shlb sub mov aad mov test test pop cltd fisubr mov push ss pop push jmp or mov loop std mov out outsl enter mov outsb inc and jle lcall xor loopne fisubr add decb (bad) and cld and add fnsave add jecxz xchg stos xchg and scas ds (bad) jno in mov pop push xor loopne (bad) sbb or mov in add lret sti and dec mov pop inc push das sahf rorb xor lock roll icebp dec or and xor push in pop call or sub push (bad) mov repz add mov cli sbb adc mov cmc xchg jecxz sub push xor or mov ret pop or fistpll fwait and sub loop or push jno ds (bad) lock jns das mov ficoml out or inc bnd xchg notl int cmp scas cmp add out and idivb xchg stos (bad) loopne out popf test push mov push sub outsb sub jecxz subb lret sub out xor iret sbb cmp loope cli pushl mov mov push (bad) pop ffree and jp and ja int ret push rcrl dec popf cwtl flds xchg in icebp jno pop adc xchg dec popf sahf ss pop mov jmp and das xor bound lods fdivs sti xchg cmpsl push add mov xlat jmp cmp fsubr jno scas or mov inc and stos vpmaxsw adc pop inc (bad) xchg sti cmpsl or push inc adc js in mov mov or xchg repz mov jge roll pop mov mov hlt out push repz add repnz neg sub and mov pop (bad) jo jo xchg push pop sub in pop sti ret and mov fsubs out push cmp int3 mov mov shll imul pop add and imul sub xchg cmpl xchg mov jnp dec data16 jb adc push mov into cs or movsl pop mov into add pop shr xor icebp and mov cmpsl es sub loopne negl gs into mov cmp sbb xchg cmovle jmp cld out push icebp inc movsl xlat in rcrl fistp daa pop int3 clc xchg jno scas js das roll and mov mov sub (bad) push in adc nop insb in pop lods lods mov or test add and cmp sbb outsb cmpsb test mov loope repz push pop stos mov into mov mov add ret test pop xchg xor (bad) rcll fs sub pop sbbl pop stc jb sub cs rol ljmp mov jle mov (bad) jno inc xchg xchg repnz sub fistp adc sarb mov sub stos jp lock int jle icebp out and pop xchg test aaa or fisttpl mov lret in in das xchg adc fidivl ret aaa jge sub cwtl sbb mov rcl pop (bad) mov sti sub cmp xchg outsl sub and cmpsb jae and aam cmp sti mov mov rclb (bad) xchg or push jg pusha stos rcll (bad) jmp xchg mov data16 sub push movsl add insb int3 xchg cmp jne (bad) dec sub roll popf dec mov sub ljmp out mov sub aad fisub mov lds shr adc mov (bad) lock aad out es cmp add fnstcw scas ss dec mov dec cld testb inc lcall jno (bad) add adc repnz xchg out lock hlt call pop sub adc add in je jecxz jb fmul mov ds lret mov add daa mov dec lahf stc sbb jno inc sub pop pop lea or enter clc sub inc jg loope add pop add popa adc shrb movsl scas aas and mov loopne pop and xchg imul jno and sub gs clc outsb pop icebp inc (bad) mov xchg fs inc pusha int flds cmp imul jb xor in jno mov (bad) mov fs fstps push lods out mov dec mov adc leave and (bad) jae das adc loop sub (bad) mov jmp mov lret adc inc add ja mov inc dec out outsl lods xor mov sub xor or out cmc gs xor clc adc push ljmp sbb xor loope pushf jle outsb icebp imul aas mov sti aad lea push sbb jo mov jg das lds fdivr jmp das fstl ljmp negl push movsl gs push ss out lret and mov cltd mov mov pop inc les pop mov lods das mov cmc insb sahf icebp out dec cli pusha jae xchg imulb (bad) pop rcr add cmp push insb sbb fldl2e ret sbb jg xchg xchg decl call push (bad) jnp mov (bad) fldcw sbb dec xchg jge pop dec adc int popf mov pop clc aam shrb push and je xor or out adc sub clc in xchg js mov pop loop pop jle push or xchg aam mov cwtl mov cli bound jmp addr16 or cmpsl les sub mov lret push dec int push bound pop rorb xchg ret dec push xchg cmp inc loopne or test dec pushf jmp dec loope push popf outsl sbb cmp lret ljmp pop das cld rclb repz mov insb (bad) jo xchg dec cmpsb cmp or out test jle inc cmp movsl cli mov mov bound sub mov daa int3 stos js dec imull mov rcr mov sbb jb cs or add cmp sbb cs sbb xor dec mov mov outsb cmpsb xchg (bad) push cmpsl or sbb cmp call push mov ret test addr16 sub divb and fmul dec ret pop das mov push xchg lods and cli dec (bad) ja xchg xchg mov dec fcompl mov dec pop mov lret adc cli hlt out popf jl out jmp pop fistpl xchg repz jecxz mov dec mov dec gs ja and sub ret adc nop pop ret mov ss lods dec sub movsl jg ficompl sbb xor cld daa push (bad) leave xorb test push (bad) lods pop repnz idivl or mov jns cmp mov xor mov idivb dec mov xor das mov adcl rol xor cmp fistpll frstor mov loope sub (bad) adc xchg out mov ljmp push add or pop int3 fistpll out or out push dec jb addl cmpsl stos jne call lret test mov or out jno sub aas std jecxz enter or js loopne fdiv sbb out cs mov inc sbb leave ficom pop lret mov sbb pop dec into dec mov jo xor push sub clc iret xchg adc sub lret add out call mov add mov push les xor insl sub sub xchg fidiv jg icebp push xchg dec xor and inc (bad) neg scas cmp sub loop fstps or pop cmpsl cld cmpsl cmpsl push mov out int3 xor dec xor pusha sub dec add mov dec mov lret clc jbe out pop lds pop into lods xchg jp lahf hlt fwait pop inc and pop jns sub add shlb xor out jl and dec mov sti jge inc mov icebp in inc aas xor ret rcl dec fs cmp push into or gs scas pop push pop add scas sub or xor mov or jo sub das mov and push push pop ret jmp sbb stos and dec cs xor mov bound sbb jl xchg or js inc ret imul mov mov inc jno (bad) (bad) sub lods sub xchg adc (bad) mov clc xchg stos mov cmpsl dec (bad) iret pop sub adc clc push cld pop or pop test pop loop test out mov out lock pop and imul mov int inc add div push and mov rolb (bad) mov imul mov outsl leave mull cmc in daa (bad) clc enter push inc clc push pop adc stos in cmp push (bad) fisubr mov push out mov pop mov mov mov pop popf inc repz jp and dec mov sbb xor into and mov xchg add mov loopne cmpl and (bad) pushf fisttp add or jne fildll pop and inc mov lret sahf adc sub xor mov and mov mov or in in or or fstpl pop ljmp lock loop xor outsb in stos adc add xor in mov pop add sub adc dec mov mov popa pop and insb adc fnsave xchg movsl mov add (bad) pop in mov mov pop pushf sub mov xor and mov add mov les mov mov sub xchg mov mov sarb cld add mov adc inc xchg jbe push pop dec fldl push mov loope sub testb lret inc push js daa sub inc adc stc and xchg in dec adc mov mov adc (bad) (bad) jp js icebp jb xchg test leave sub cmc mov cmp ror and pop adc ret cld pop (bad) push js sub cld push push and adc loop (bad) or mov fistp ror jle pop push pop js (bad) and in lods fisttpl out mov adc jmp int3 mov repz shr adc mov mov jne xorb loope add outsl int3 fisub stos (bad) jbe int aaa jg mov mov lock out pop leave fidiv je xchg xchg mov mov pop hlt (bad) scas push mov mov call mov mov add add jmp push dec ljmp fiadd inc adc jle cmp and push and adc cmpsl push xor arpl and push sbb mov or mov dec push (bad) int fsts cmpsl jg fisubr cmp dec fdivrs repz xor and push and lahf push sub shrl stos popa cmpsl mov outsb icebp mov inc sub clc xchg (bad) xor shrb or mov add out (bad) mov add (bad) mov in cmp or push test or pop jl in xchg out mov and int3 sbb jg stos jbe xchg (bad) (bad) cmp repnz and mov dec (bad) mov dec lret cmp cmp (bad) cmc mov cmc lock hlt out loop add mov mov or gs or sbb inc lods lea fldt mov imull nop and imul or dec push push adc je (bad) xor mov (bad) imull loope int3 pushf notb es stos iret (bad) adc adc loope (bad) xor xor or cmpsb frstor mov mov fwait rcl mov pop and push into jo loope ss rorb lcall adc push pop sbb sub jmp fistp jnp jnp lret push sbb rolb and inc push cs loope jle inc mov insb decl mov outsl inc flds leave fstl popf inc pop mov (bad) and sub leave xchg fist xor fdivrs mov xor inc adc dec ret addr16 sub and mov dec and or push lds or jp inc jno add repz mov daa icebp cmp das sub inc lcall and dec dec xor dec je xor mov ja add (bad) cmpb cmpsl mov inc sbb mov clc or repz leave adc add negb xor mov pop div int outsb sub out leave aam rorb push add sub push mov pop push jbe push mov inc mov mov scas inc inc push sahf cmp jmp (bad) pop cmpsl and decb clc xor pop jmpw or ret inc (bad) sub inc ss or xchg mov dec push jbe or popf cld (bad) enter jp (bad) adc sub and xor enter mov rcl inc and imul add or out lret mov and icebp xlat dec or inc sbb out mov je loop adc mov sub cs mov in push (bad) xor jne jnp in out inc pop adc iret fisubr mov leave ret leave sub jae sub pop test jle pop nop jmp ja jb adc shll cmp jne and xor imul in add sub cmc out jnp ljmp mov in stos mov pop xor mov dec or mov mov xor idivl mov jmp test fwait xchg call mov and aad add mov and push imul push loope pop imul negb repz mov stc inc les (bad) std inc mov ja cltd xchg out push iret or movsl (bad) aam scas jne mov (bad) pop jo mov or and jnp (bad) into rorb icebp mov bound jb ds push (bad) and add and ja cmc lods aaa lods lret stc jle mov cmp mov out (bad) stos mov (bad) jp adc pop sub pop jp jbe out add and jp or lcall or mov gs mov out mov adc inc mov dec mov inc test mov mov leave pop inc not (bad) sub or jno lret aam leave jo xchg mov sub and mov push sub jmp and cwtl push aam popf rorl mov into pop mov xlat push pop pop mov leave test sti sub xchg or cli fild frstor dec sbb inc dec ljmp mov iret mov push dec mov dec andl sub pop cmpsb (bad) bound or int sub sbb push and xor flds or jecxz and xor mov jecxz std xchg push inc xor inc xor xor mov adc repz es sub popf mov cwtl jl add xchg mov cmc lds cmpsl or mov fisubr mov sub push (bad) mul sub and xor leave pop cmp loope (bad) push inc pop dec loop jns imul popl dec movsl adc push and stc daa pusha dec fisttp and leave cli sub mov test int3 fist loope int negb add (bad) mov sub fs mov mov fstpt lods out xor add xchg pop pop cltd loopne push and andl jecxz sub mov add rorl mov and mulb testl push mov out and xchg push ss cmp jge mov jecxz add notb ret jb dec iret popf inc add call mov shlb enter int or leave hlt jge push ljmp cmp sub arpl lcall iret adc shl mov pop faddl xchg jmp rcr sbb fstps adc int mov ja xchg pop adc or fld fs push mov fdivrs or push test add pop testl pop jg adcb inc cli ljmp sarb jecxz adc mov pop xor out mulb ljmp xchg mov (bad) and cmpsb imul clc dec sarl in add ret cld subb lods out icebp push jb cmp stc mov add mov inc fmuls out lahf jl sbb add je out or outsl pop jns,pt (bad) lahf loopne sbb cmp or cmp pusha mov mov ljmp or ret jecxz lahf stc mov (bad) and xlat and xor addb incb bnd insl add xor add jbe daa pusha das sub push sub push mov loopne xchg (bad) xor leave icebp mov aam pop jecxz iret inc push xchg push push adc dec push push push mov into push and das sub add pop rorb mov repnz jle or sti sar add jg dec (bad) cld hlt roll push mov push in imul mov (bad) mov or loope dec lahf icebp test (bad) stos cmp fisttp mov cmp sub sarl fisubr mov xor test sbb scas bound mov lds loopne push dec push stc mov das dec add mov pop mov jge fisttp lahf adc std push mov bound adc fcmovu push ret idiv jmp cmp (bad) mov lods sub xor mov outsl push mov mov pop rcrl (bad) lret sub stos mov jb dec cli cmpsl dec push xor daa loop push push ret push sub ret pushf adc sbb add in inc mov notl outsb mov popf dec or das or jne push shrl popf cmp movsl dec push inc sub xor jbe dec notb (bad) cmc adc mov dec xor mov adc std and and jecxz add add push mov imul push cmp xlat lds add aas mov outsl cwtl jg test out in sti ret push inc jb das xchg aaa dec add add sub popa bound push sub out mov inc loope cli sub out stc dec dec hlt das gs popa xchg idivb push xchg mov xchg outsl mov in (bad) xor mov sub sub mov xor mov (bad) repnz xor leave fnsave movsb ret add mov push mov pop add xchg in inc shlb call call or sub pop fnstenv jmp fucomp jae leave stos cld dec movsb adc mov xor iret cmc mov sbb enter loop (bad) sub and mov fisubl in mov jg (bad) sub mov jmp sub pop test xchg and dec push in push xchg icebp in sub aas cs xchg jg scas mov les out jb into jge fwait pop pop pop xchg leave jge rclb ljmp stc sti int3 scas (bad) icebp cmpsl pop mov leave jle jp imul adc fldlg2 fsubs decl leave (bad) aam pusha and aam jbe pop idivb stos mov inc adc xchg in aad (bad) and popf (bad) rol jl push sub daa mov je lret or sbb mov push addr16 pop cmpsl pop adc pop or mov or adc add fdivrs daa mov jbe xchg and dec xchg test add out movsb sahf loop aad xor sub inc pop out int3 dec (bad) out (bad) fistl xor fsts inc and pop rorb sub dec jno xchg sbb (bad) arpl lock mov out dec out je jmp add sarb push mov and xchg lods xor cmp enter clc or xchg mov loop scas data16 das and or jne sbb push and ret pop cmpsl push and xchg push std mov sub es js fidiv or pop incb mov mov push jge and cmp stos lret decb testl ja nop ret mov mov loopne or test dec jmp fmuls dec in jl jmp pop leave into push aaa in ret and pop xchg mov (bad) sub adc cli fs mov jp xor bound pop sub jge push or fldl2e das lcall mov (bad) je add xor cmp adc arpl out add pushf pop arpl idivb inc mov imul loope fstps in and mov pop mov vmwrite dec icebp jne push inc add cltd dec shrb clc sub mov nop lcall lahf outsl imul xchg fadds push scas cmp in cmpsl nop push push xor jecxz inc xchg leave in lret (bad) add ror stos je int3 movb push enter inc mov gs scas jno mov xor mov sbb out add test adcl fldcw cmp mov std adc (bad) push pop jns les mov aam adc inc sub xor cmpsb popf mov repnz outsb inc mov movsb cwtl movsl (bad) rclb or fadds ret int3 xchg (bad) sar (bad) sbb fmull mov xor push sub xor iret and cmc pop ja pop pop rorl dec mov (bad) hlt sub push cmp pop call int3 out notb xor enter gs or and imul icebp das (bad) sub gs cmp mov movsb cld leave mov mov ds jne adc test sub push xchg and rclb fidiv (bad) mov or mov xlat repz or fadds jnp fld mov loop sahf push divb jl in pop sub push jmp cwtl pop or lret mov push aas sub ds xor cld mov pop push outsb mov inc mov jmp mov loop push jne test scas sti sub and push pop or imul cld (bad) add iret mov mov xchg add xor sub cld daa xchg mov push push ja (bad) add or add jns clc jae mov fldt xchg push incl aas call xor sub jae push jecxz ljmpw gs cltd iret xor repnz (bad) movsl (bad) and fwait loope ds bound pop push mov mov mov ret xor mov (bad) icebp aaa sub mov mov (bad) and jecxz or fistpll clc pop dec or mov xor and sub cmp adc test mov fwait mov cmp into (bad) cmp jg mov xor cld push movsb ljmp jno sbb movsb cltd pushf enter cmp or popf fsubl ficompl cmpsl adc sahf in out fistl mov sbb int cmp movsb test loop sarb and sbb xchg fnstenv call push mov clc xor loope ffree andl popa (bad) jnp xchg sub lahf sub clc mov inc add mov pop int3 jge adc add mov mov cs fucomp xchg sbb xlat pop sbb cmc xor or mov pop mov sub fwait inc and pusha sub inc xchg jo xor jecxz or or jmp sub fldcw in cmp sub insl ljmp jo and pop add gs andl pop gs and std xchg add loopne xorb ffree stos dec ret xor dec aaa inc inc bound or sub and dec jae or sub and mov idiv cmpsl leave ljmp jle dec (bad) es fild and lret jmp adc rclb and ds fildll lods outsb mov mov fstps mov cmp adc negb (bad) ja out lret mov dec inc andl out fiadd ret mov nop fisubr add (bad) sub test mov push loop or push test mov mov into mov and leave ret das jp scas dec call int3 xlat popf xor (bad) jg bts outsb xor cmp inc out data16 js loope cmp test scas jns loop jp popa xor add mov scas test inc pop xor inc dec gs mov mov test mov inc mov outsl jno xchg mov add mov inc and rorb push sbb call push mov jnp pop rep sub jo ret mov dec ret fdivl pop jns push loop ja sub and mov jle int clc adc mov daa lcall repz iret subl jmp hlt mov add (bad) insl mov push sti clc leave ficomp adc add cmp inc lods inc movsb xchg cmp adc fimul dec jmp testb sub cltd (bad) ljmp dec adc out int aam or xor into xchg jle pop ja pop roll imul jmp and mov lret or out mov dec (bad) scas push xchg mov fstpl jne push pop addr16 shr xchg pop lock pop int3 scas shl dec xor (bad) cli out pop inc mov fwait push jmp and aam outsb and add aad incb out and dec mov pop push adcb dec mov mov jmp stc xor sub (bad) add cmovnp cmp push or dec (bad) hlt in cmp jne mov (bad) dec shlb sub sbb mov sub pop mov mov or cld inc inc into mov dec ds jmp decb and lahf push xchg loop (bad) imul mov fldcw mov mov in push icebp xor sub (bad) mulb sub mov mov stc jmp adc mov (bad) icebp pop sub sub mov shll and mov ret out push inc (bad) dec test jmp daa lret lcall aas cwtl js mov lcall jb pop psllw mov mov xchg xchg push sahf das push or stos pop repnz gs adc clc push daa les sbb lahf dec (bad) pop daa gs pop in xlat mov lods cmpsl cmpsl mov push mov fs or ret sbb nop dec add xor scas jnp dec adc mov or ret cmp dec xchg in mov and inc add sub jo add aas daa jo xchg icebp adc cwtl adc xor mov fnsave or push mov or dec sahf adc cli pusha or jno inc rcr cmp das or mulb pop dec and mov inc inc add or movsb cli aam scas pop xchg jmp cmpsl jge icebp loope out xor (bad) lahf push cmp push sub (bad) ror pop lahf inc (bad) adc (bad) aad mov int xchg push xor mov xchg xchg pop fs stos cltd ds xchg mov cltd out mov mov rol cmpsl push xchg xchg dec mov sub and into loope in mov jecxz cmc mov mov repnz xor xor or psubusw aas popl add push mov lcall jns movsl sbb jmp loop pop pcmpgtb mov lcall push rolb xor xlat dec fimul fild lods js dec loope push mov sub jns mov inc movsl jle and lret and lock (bad) divl rcr mov pop dec xor shrl mov loope fsubrs test in stc rorl and dec or sub mov push push dec pop lock jmp push sub inc jb cmp push xlat xor js mov enter inc fimull bound mov fistpll mov jmp test inc sti push sub mov or ljmp xchg aam jmp sarl adc push pop xorl out sub lods (bad) mov jb pop into sub sbbb rcll add jae sbb xchg ret mov push out lea mov (bad) movsb loope ret jl out lret in and cli bound into mov mov adc rclb test push pop xor imul adc cli mov lea or fisttp pop (bad) jne pop pushf dec dec testl bound aam xor clc or mov es or dec xchg cmp jmp sahf adc shrl andl sub stos cs mov fs xor push aad xor or mov imul xchg mov push in test hlt daa jp cmp and push cs push inc lret (bad) rcrb call cwtl pop out inc and jmp push cltd movsl in pushf (bad) adc push dec push push int3 jno dec dec les in hlt movsl and (bad) and mov inc daa or ja ret cli jbe imul hlt pop push jne cmp add cmpsl mov xchg ficoml inc imul inc bound push push (bad) sahf push fsubr movsl loop and aam bound cli jne pop test enter sbb dec and inc or jecxz fstpt lret idivl pop (bad) in and mov divl (bad) outsl (bad) jae pop add out xor (bad) ljmp jmp bound and cmpsl adc inc pop push push mov jne sbb xlat xlat inc jmp in push into mov outsl test rep flds mov dec lock xchg and push mov jmp insl fmuls xchg or stc clc dec shrl int3 mov idiv adc push mov sbb or jnp sub leave aad pusha lock ljmp stos mov int3 pop add mov dec je (bad) ja mov push stos popa aas out add push or adc mov iret jp lret in mov int3 pop out xchg movb add add decl fidivrl rol fnop adc in fst sahf dec push pop mov fidivrl in pushl xor mulb xchg adc add sub and jns or sbb and test inc push mov push (bad) jmp inc clc mov or xor push stc lret pop jnp adc xchg std das lods push sub lret mov out sub sbb pop scas pop (bad) fdivrl mov xchg cwtl mov sbbl mov adc cltd push dec rol cmc mov sbb xor adc xor xor fidivr es imull cmp xchg pop xchg pop mov mov add mov mov dec inc icebp mov mov cmp push roll cmpsb adcb test cmp dec fstl ss jbe out (bad) fsubl and ret mov sub inc in lret ret lock stc jecxz xor xor sub dec cmp jp inc adc xor (bad) jns int3 cmpsl mov cmp jmp adc mov jecxz push ds adc dec sub pop mov daa xchg dec fwait sub dec in jp mov mov pop lret in and (bad) lods repz inc out test sub clc mov mull mov insb jg iret bound out cmpb ret mov pusha mov adc ljmp jnp test cmp (bad) outsl mov add lds pop sbb inc sub sub out pop push inc lahf sbb pop push push inc mov jo sub out sub or jg js and or subb or popf cmp cld and add int3 add test xlat (bad) push pop subl mov mov (bad) dec dec enter push vmovsldup in jp cld shlb shll call pop test das sub xor scas (bad) sarb or mov stos test in sub inc cwtl (bad) repnz pop shr xchg sub (bad) or adc lret lret aad and xchg fldcw mov lea mul inc lret pop les lret jmp sbb (bad) sti enter sti (bad) dec (bad) jecxz or sub push push or pop sbb mov cmpl xchg adc jae jnp pop out jecxz cltd bound inc outsl mov mov ret sub xor push ds (bad) je mov or mov idivb sub or stos sub bound xor sahf test aaa scas std jb xchg repz sbb dec and and cli xor sbb leave fs mov jb icebp outsl pushf add add enter inc and in lahf in pushl into cmp adc (bad) popf xchg (bad) cmc sbb rcrl jbe repz add mov adc push iret mov notl test mov or (bad) dec das out lret fadds std movl repz out das pop xchg loope ljmp out xor (bad) add rorl mov imul push adc sub xor xlat and outsb sub (bad) lahf repz daa (bad) sub adc jg aad loop cmp stc (bad) push jmp cmp mov xlat sbb (bad) scas or dec add mov int3 jmp repnz pusha mov xlat add repz add (bad) leave lahf lcall jecxz in mov push out (bad) lahf leave incl leave sar sete jmp je pop hlt in add push sti xchg sub xchg (bad) hlt fs scas sub pop into fidivrl fs out daa out (bad) pop lods jle sbbb sub or xlat add lcall mov sahf inc and cmp add dec mov sub xor xor mov dec mov and stos adc xchg leave jmp dec dec rcll xchg dec fsubrl (bad) or sub and xor enter pop jmp bound ret mov mov inc add dec fmuls frstor sub jne and fimull (bad) mov imul std and scas fcompl inc jo divb cmc gs adc (bad) mov cmpsl mov and stc es pop icebp je jne pop notb repz and jb nop and lock ss jnp pop (bad) mov pop fmul ret pop (bad) and scas fistp or out push decb jne mov in mov ror loopne mov push xchg cmp sub push outsb sbbl jp ret repz xor (bad) ljmp xchg sarl mov outsl inc or pushf mov or sub dec lods adc call jecxz and insl jne,pn dec lret sarl pop and sbb sbb addr16 mov lea jb daa ss cwtl mov jb xchg and jl les fadds aad pop adc cmpsb push xchg adc pop sub mov or ja test cltd cli sub (bad) jnp inc pop cmpsl push jb imul int outsl lahf inc pop cs sti xchg mov pop mov mov dec (bad) xor inc flds inc ret outsb (bad) aaa adc mov mov sub push sbb xor lock mov das (bad) imul jg test mov inc mov test inc and xchg push mov pop test lcall les add xchg dec add pop pop mov xor sbb icebp jecxz jns lret addb add sub lret jge mov pop or adc es cs out dec xor ret cmc loopew fwait sbb insb and iret cli repnz cs push rol jmp popa xlat sub orb mov jo jl es sub inc js (bad) xor fsubrl add into outsb in mov sub stos push outsb leave fldl (bad) pop repz mov repz xchg and ret push jg shll add lock testl out popf fist cmp mov out or sub (bad) pop mov adc shll xlat inc loop xchg in lahf lret rclb sub jg (bad) mov (bad) cmp sub cmp dec mov lret push pushf fwait adc int3 add mov gs pop mov pop mov add xor ljmp insl sub shll loope push mov test xor jno push mov lretw mov int lods dec inc mov cmp ljmp icebp add aas ss and mov (bad) mov mov orl outsl jecxz loop (bad) repnz lock aam bound inc mov push roll (bad) and mov ret xchg bound icebp pop mov cld pop jae adc push in rolb ja push jecxz adc mov roll fisttpll movl adc sarl hlt loop arpl sub rcr movsb and mov call adc stos cltd out or or adc add jnp das (bad) cmp xchg mov mov cmpsl cwtl lock mov dec arpl negl movsb je jmp js,pn pop cmc cli push xchg dec cs fistpl jnp mov int mov outsb adc xchg xor cs movsb mov divl lret mov xchg cmc xchg insb (bad) mov mov popa jmp xor jmp or xchg ljmp mov jmp imul inc pushl adc mov in add xor mov jne and sarl bound movsl repz mov push fisubrl xor call add imul lret in mov sahf std rorl clc loope mov es mov xchg xchg mov or xchg sti imul lret inc mov jge mov ret jb (bad) out xchg jmp in jg fstps das das adc repz stc cmp or out insb loop fiaddl pop push xor popa stos xchg out stos (bad) shl jne cmp jl (bad) lock mov jl and mov pop sub (bad) xor (bad) jo push dec add mov gs repz in push mov movsb stos add or xchg inc cli xchg lcall add and push mov sbb cwtl pop mov mov inc shl movsb and pushl mov push jbe pop (bad) popf movsl iret scas je adc test scas sub push sub cmp and sub mov adc aaa xchg out pop xchg in insl and sub sbb stc jle ror xor jne push pusha push add in clc add xchg outsl sbb jp divl or aam mov mov das cmpsb imul jo mov data16 cli cwtl stos ret repnz jecxz out adc add aam or add xchg sub jmp mov dec cmpsl scas dec incb jmp jp mov and daa xor stc outsl movsl je inc sar stc movsl sub adc mov int mov pop (bad) out jne sti mov xchg popf mov fwait add jp inc outsl mov (bad) sub or lods mov ret (bad) (bad) xor push or rcll or jnp add notl ja xchg push or mov add mov adc pop fucomp push shrl xor and test lret clc push jb (bad) fistl adc xchg jne les or (bad) pop stc adc loope (bad) push (bad) mov mov int3 popf hlt gs ljmp inc cltd cmpsb sub leave loop inc mov idiv sub mov or stos flds mov mov daa mov push sti cmp les dec aaa mov addr16 inc clc and xchg gs add aaa add dec sub (bad) mov add cmp mov incl shr mov and subl dec divb fcomip stc test xchg loopne cmc daa lahf data16 addr16 das iret loope ss inc adc sub ljmp cmpsb and pop add or push xchg call and mov sub mov dec lock jmp jmp popa dec add fcomps (bad) iret pusha mov adc out cmp ficoml mov mov jl loopne decb dec pop lods pop (bad) iret sahf daa jge jne loope out and js dec icebp stos sar adc fsubs jge adc fcoms cmp xor pop sbb inc and mov mov pop popf hlt jne add sahf or sti mov lcall cmp (bad) jge gs mov mov add (bad) arpl notl out repnz (bad) xor xor and dec add add adc mov jb mov jmp addr16 push mov add inc sub sub movsl stos sub repz aam gs int3 inc adc repnz aad jmp loop mov lock mov pop loop aad jl pop cli inc xlat fcomps maxps out sub pusha mov mov in xchg sub add movsl and xchg pop cld rclb mov das leave jno bound icebp push cld loop aaa stc jp mov out sub fcoms mov xchg mov xor fsub push pop adc xor out lods jnp out jne arpl xor fcoms jne dec test (bad) lds inc test pop mov push leave sbb xor adc ja xchg shrl clc add iret mov xor mov and pop maxps leave decb call xor outsl popa dec out and adc jne (bad) pop mov inc movsl lods mov lods pop xor push into mov push pop popf mov mov fsub test mov xchg dec (bad) jb (bad) mov out add jnp sub cmc in mov stos sub (bad) ja push (bad) ret xor daa (bad) pop gs sub adcb lahf push icebp int jg aas repz (bad) out sbb cmp je mov shrl push mov xor rorl push (bad) repz dec stos sub das sub push lds add jecxz fldl mov inc push mov pop std mov dec lds lea mov mulb aam and pop (bad) jbe fmull mov ret push dec mov daa lret push mov leave and xchg test add mov icebp iret dec dec lods sub stc sub cld and repnz and push and ljmp gs cwtl fldl lahf jne jno push adc xor sub (bad) test push fdivs fisubr jo ljmp notb and mov fcomps and jle outsl sub jg and mov ret pop mov push (bad) mov sub push popa cmp movsl mov mov sbb mov subl xor jp scas aas lret (bad) bound lods sub leave pop std sbb prefetchw sub inc ret ja or fwait ret or and aam mov xchg mov jl and dec jecxz mov repz xor ret dec pop sti sub mov adc or (bad) idivb add pop (bad) fcomip scas dec xor sahf push jmp out mov mov push popa jb pop mov jle adc scas fcompl xlat mov mov out test loop ja outsl mov out popf mov mov inc pop xchg lret push cmp rolb (bad) mov ja sti xor bound (bad) pushl lahf inc or dec lret dec push loope (bad) jmp cmp xchg adc inc (bad) lods mov push add sub jle into jns in pop add sbb test (bad) stos or pop nop xorl outsl clc xor pop adc pop daa add mov or fnsave aam (bad) mov sbb dec add insb lahf sub xor (bad) or sub xlat jnp or sbb sbb add push repnz xor scas je add std dec mov stc sub repnz xor cli roll xchg sbb clc test sbb pop call inc jmp cs stc sub movsl negl and lret addr16 fcoml cmp into sub mov cmp in shlb out fdiv pop sub pop mov cltd out (bad) add out and cmc inc jne sti in adc cld iret adc cld push (bad) mov mov pop ljmp jecxz adc paddsb mov mov mov add add shlb cmp daa cmp dec (bad) lret push je mov inc jo mov mov and ljmp jmp jne sub and negl aas pop pop sub pushf insb test (bad) call mov aad mov dec mov sbb pop lds bnd xchg lret dec or arpl pop lret lcall in add jmp lret mov icebp jb xor icebp (bad) xchg mov out pop fs lods mov sub (bad) cltd jg repnz pop jne test stos xor loope jle sbb inc sub pop aam imul pop and neg pop fidivr js mov mov mov jmp sub (bad) pop mov insb clc imul mov (bad) mov jge stc fist sahf push movsl push iret sbb inc fcoml xor fldt mov or sub or jnp or jl jg pop decb mov testl iret sub mov cld mov idivb lods mov dec mov add (bad) fs out and out loop mov ret enter aam lret (bad) or js mov or pop out fptan xor lock pop test movsl je,pt pushl jp push addr16 iret dec pop in sub mov xchg outsb (bad) or and pop lahf movsl inc cmpsl daa add pop sub ja ljmp js jo jmp (bad) daa push jbe jns pop mov test adc jmp xchg mov inc movsb add mov jae pop popf sub xchg pop sub mov adc mov lret movsl clc pop and loop cmp adc cli call test out mov or pop out repz wbinvd clc sub or xor dec jmp push sub ja mov sahf loop icebp jp push cmpsl or call ret push dec incl lret scas loop aam (bad) out mov mov sub lds sbb ljmp xchg mov cmp or cli leave xchg pop push pop loop pushf sub fstpt clc xor mov and test dec xchg sarb shrb xor dec xor push jmp loope xor xor xor in mov sti das dec (bad) leave push icebp ja andl lods push leave dec push pop mov daa and add test lds cmp in and cmp call mov inc xchg and and dec rcl outsb xchg xchg dec pusha sub jo inc push lahf sarl movsb lds mul ret mov loop repnz icebp xor mov cmp into ja call sbb rcl dec xchg xchg mov outsl inc xor (bad) sti and mov xchg mov and mov rcl lahf dec out mov pushf add mov sbb add std inc sub fidivrl add je out mov and shrl testb test mov scas ja divb ljmp testl ret add pop imul lahf daa sub add xchg (bad) dec ljmp xchg popf (bad) stc mov das add push lods xor mov imul arpl iret iret jnp nop add mov mov ret movsb int call das fsubs jmp xlat daa into pop add pop int3 lea cltd cmpsl imul sbbb dec imul call das lods sbb int3 bound bound push cltd (bad) test test mov sub push jo pop add icebp and sub iret cmpsb popf push leave jnp adc fimul fsts rorl fcmovb sub cs scas add aam decl das jge mov lret ds mov arpl push pushf and loop andb pop loope mov xchg push sbb mov xor jo cmp std sbb mov push jp xchg jno pusha inc pop std xor mov xchg (bad) sbb sbb das (bad) sub inc mov rcll sbb stc aas test dec mov and xchg repz dec adc stc dec mov popf test mov cmpsb sarb sub push mov lock inc mov fisubl cmp mov je bound popf jle push pop (bad) push leave std in mov mov push inc out loop shr jge call mov mov xchg jne mov (bad) mov int3 add ss mov pushl out es cmp mov repnz sub jl sar ret mov je lahf lds cmpsl rorl mov jnp xchg fldenv clc js xor cmp add jp stos daa mov sti aaa pop ja xchg lret stc pop mov pop pushf in pop jle pop (bad) je out jmp les jp dec aaa cltd in push cs test fsubr jmp dec mov xchg fstl pop mov pop mov pop mov dec rolb clc flds cs jg or cmp les sub fdivrs popf notl inc imul sub add daa mov inc push and outsl pop ficom inc mov (bad) jmpw dec movsl xchg clc lret mov sub add stos mov xor mov fisubrl repnz pop scas sub mov dec mov pop dec aad or idiv xchg inc and fisttpl into scas popf jl mov add pop xlat repz cmc roll (bad) pop and mov sbb xor stc sub int fcoms mov mov sti imul inc (bad) push jle mov enter fidivr mov mov repz mov lods sub jne inc fmul icebp sub cwtl xchg push (bad) mov shrb pushf jmp mov ja cmp outsl adc jmp adc or xchg push imul xor test sub xchg xor dec push xlat adc popf gs cmp mov incl dec mov mov outsl mov sbb sub jmp aad loopne mov xchg mov dec cli je cmpsl sti js stc out mov or shrb fcos insb (bad) xlat nop cli sub or sbb jbe test mov das (bad) cmp push (bad) xor out and xchg jb add imul pop (bad) xor sub jnp sbbl add inc (bad) adc xor jne leave adc push mov insb loope icebp stos xchg sub sub imul or sub mov test mov push mov mull lds (bad) lcall mov test movsb fsub lret pop and add stos cmpsb lds aaa (bad) jg xchg mov cmpsl lret je fs cld (bad) pop cmp inc and lahf jl push bound leave (bad) ror fcmovnbe test lret stc rorl mov push lcall ljmp sarb mov cld iret cs mov in pop and out je lret pop add add pop jecxz pop pop bound shl sub jne and xorb cwtl push mov fstpt fidivr stos adc and push mov mov ljmp scas jecxz cmpsb xchg inc sub mov and xchg add mov out (bad) dec sub mov inc add loopne xor (bad) outsl lret and rcrl or and ret xchg ss bnd stos and and jo aaa lahf insl or push mov (bad) imul out sub int3 mov aam pop pop xchg adc push pop sub inc arpl and divl inc or pop sbb fwait movsb stos mov mov dec orl mulb jg add js test cli mov outsl das scas ss or and scas mov add ficom clc sahf loope cmpsl jbe (bad) fsubs add pop (bad) dec adc (bad) mov mov add movsb clc add and jne push inc dec xlat in out pop or mov sub sbb sub sarl push xchg in sbb jae cmp rcll in ret inc cmp sbb leave in pop xor mov mov arpl pop jmp xchg dec xor fist lea or cld adc leave shrb adc add adc mov add stos jne cmp and in aaa fstps cmpsb imul hlt mov and mov mov mull repnz sbb (bad) dec cwtl xchg scas fcmovu jno ret outsb or dec dec add fisttp scas push sbb mov imul mov in sub lret (bad) jae pop scas mov lret pop sbb sbb enter adc jae pop and xchg in dec fs mov mov dec orl add aas sub xchg or cmp mov daa jo sub mov bound pop movsl pop adc xchg test stos out inc stc das xor and sub and (bad) adc and mov mov in fs arpl gs and or and lds sub adc inc push add in ja gs pop push leave push xor pop or lods daa push negl inc mov shr xor imull mov inc sbb sub mov dec pushf fadd and sub adc aas jmp stos push test mov push lods inc cmc and popf nop mov cmpsb fmull sub (bad) pop sahf stos pop xor lods imull roll jecxz xlat stos leave punpckldq push stc pop out mov insb jg aam mov mov stos iret sbb xlat mov push add into xor jmp daa and int3 aas andb and pop xor je addr16 stos into call out xor cmp jle inc jle mov dec aas inc rcrb gs arpl (bad) clc push (bad) cmc insb test adc (bad) and jmp cld stc push mov lret (bad) dec xor jbe (bad) push or add (bad) lcall outsb inc (bad) cmp xor fwait push cmp sti test mov loopne or nop mov sbb inc lret xchg lret insb cltd les jno stos ret mov xchg xchg push pop sub fprem jge,pn loope bound or cwtl jg or into sbb inc sbb mov (bad) xchg push loope test and adc mov xor mov mov call cmp fucomip lods shl jge repz lea cmp lret in movsl pop lds push aaa lods adc lock mov cwtl and sbb mov (bad) sbb pop push (bad) jp imul mov push mov popa ja add xchg xor inc test jle push mov pushf (bad) popf xor push pop arpl (bad) daa (bad) (bad) sbb pop in pop mov dec flds xchg or mov call cli fwait testb test and sub (bad) sub das lds stc mov (bad) adc or or iret xor push popa mov xchg lret or add cli mov (bad) mov and inc cmpsb scas push push push jmp sbb sub or sub out subb pusha add repnz xchg lock (bad) pop lret xor push add out sbb enter aas outsl or fstpl and cmpsl into and or and add push mov sbb in adc adc mov pop mov loope mov fnstenv shr and daa aad xor (bad) lahf in decl fldcw ljmp mov add movsl and iret jmp out in in pop std inc leave add adc nop (bad) or and sub loop adc pop or dec out push dec shll aad cmc in ds lock xchg incl adc popf std mov leave dec shr and or iret push xor roll xor (bad) lret dec sarb mov (bad) dec loope loop out jno add (bad) or xor mov movhps pop push jmp mov jp pop into bound mov sub fiaddl scas cld xchg push iret stos popf lcall mov in stos xchg adc inc push jle jns movsl jns dec or mov add xchg jle push repz ja inc iret scas fnstsw ds push leave jno push add inc push sub inc or repz ret addb repnz jmp inc xor scas lret jno into pushl jecxz add xchg mov (bad) fcoml pop test add cmpsb lahf xchg cs xchg mov notb or clc (bad) xchg xor in adc cmp xor or rcrl jns dec in xchg int3 mov sub mov push add pop xor cmp test and les pop inc pop scas fadd and cmp xchg dec loope sub sub or fld xor mov rorb loope sbb inc movsb cmp xchg cs xor into clc icebp int out pushf addl outsb xchg icebp mov sarl and mov scas out jl mov cld cmpsl push or xlat (bad) or cmpb xchg mov leave pop mov and lods or roll xchg out push xor adc and out loope xor insl mov adc cli lcall mov dec mov into or mov lods loop test push movsb fdivs or or sub and pop mov mov pop (bad) mov pop je mov sti sub mov iret lret mov and sub push mov jecxz lea mov jmp sbb rorl push repnz popf mov pop out xor std test mov mov cwtl ror or int xchg lock jno imul enter (bad) mov ljmp aad das pushf add jnp and pop inc dec daa or or lea popa (bad) sub pop xchg and add jg fdivp mov hlt mov push mov or arpl and dec jno iret fbld gs icebp lahf movsl pop hlt je dec xchg mov add (bad) or sub sub jecxz test ret push inc xchg push je in xor or mov lods mov repz sahf mov or pushf repz push (bad) mov gs pop xchg or cmc inc push lods push aam xor jge das cli jno out cs cltd std or leave mov xchg or flds and and (bad) lret jns inc mov repz cmp adc sub push jae rorl test jmp es sub xlat inc xchg sub push dec pop mov add mov mov sub idivb inc and pop (bad) aaa movsl scas adc fidiv (bad) lcall loopne icebp xor pop (bad) repnz add and dec pop cmpsl movsl imul jge jecxz xchg mov aam xchg (bad) jmp jg ss xor test shrl jo xor sub pop gs mov dec int3 (bad) repz pop pusha arpl cmp jge mov and cmp xchg or cs out or test mov (bad) xor xor sub repnz (bad) fcos lcall sbb mov inc scas sub jmp test imul sub lret es jne jge (bad) or xlat pop aaa mov push and mov add bnd adc mov xor xor gs fs cmpsb mov mov inc (bad) xor lret add push clc or movl loope push cmpsb pop in lret cli and push jns xor push popf inc jmp pop adc mov dec sub mov lds repz ja jne adc pop lock cmpsl mov inc and xor add daa jl pop repnz clc jb (bad) xor and stos mov cmpsl jmp dec lcall lds icebp out pop mov movsb push out stc inc add xor in adc int3 andl or (bad) cmc sarb iret xor mov or pushf jg (bad) xor ja aaa movsl icebp sbb aad mov icebp mov lret mov jo dec mov in adc scas sub xor sub inc and es imulb or cli xchg jecxz sti mov xor mov shr jns mov scas fstl cmp stc leave idivl in xchg add hlt scas call mov fadds and std adc mov lret or icebp pop out icebp cmp add test mov out das sub add loope imul mov mov add (bad) or mov leave jmp xor push sahf (bad) stos test mov cli xor cmpb loop mov push enter idivb push mov nop xlat rcl push cmpl jle ljmp adc pop push xbegin popa loop adcb out popf jg insb dec out mov add cli fmull xchg sub push mov aaa das divl test scas lods outsl fsubl (bad) test dec add aaa daa out out and lcall xor jns scas mov push movsl (bad) xor push push cltd sub jle mov addb scas jl push mov sarb ljmp scas or sub jae or mov cmp imul mov dec cli (bad) (bad) jg mov or scas out das mov fidivl xor imul or sub jl mov add push (bad) add mov rcrl repz repz (bad) mulb xor push or addl aas xor xchg push push pushf scas and cs push pop icebp bound mov mov jmp mov mov xlat and adc sub lea icebp mov mov into mov out lret leave pusha int3 repnz xchg or pop (bad) stos xor loopne imull or xor or and jg sbb rol (bad) (bad) mov or out jae and (bad) push ret pop add pop push or mov sar imul stos in js movsl xor ja mov xchg inc xor pop push cmp jns mov push pop mov adc mov sub and enter pop adc mov adc stos loopne leave jl mov and cwtl pop mov xchg div arpl xor out mov aad dec lahf into jnp (bad) xor or xor adc idivb pop mov repz push and fwait xchg popa mov pop cmp jle pop xor gs pop sbb lret xor and push mov gs mov dec (bad) inc jns daa xlat add jp push cli push or dec sub xor imul jl (bad) adc xor xchg mov ljmp mov (bad) or push fdivs lret mov dec in data16 fidivrl enter stc sub dec mov jmp inc mov out ret aas call adc clc sub imulb fsubrp jno or outsb std pop leave ficomp in mov xchg ficompl xchg loop cmp dec and dec push mov mov push cli pushf cmp bound push pop fucomi subl test mov xor xchg adc xchg sti (bad) mov insl cmp rolb jb push fstps push inc repnz mov adc stos xor out or clc rcll in imull sub sti jb (bad) test jg xchg stc or daa into cmc mov inc or cmp adc imul xor adc mov mov (bad) popf mov loop (bad) ja sbb aam or in or jb incl dec xor lods (bad) popf (bad) fild aas in mov pushf pop (bad) loop xlat dec sbb shll aaa or mov dec mov aam outsl pop test dec lods addr16 call or lret rcrb idiv stc (bad) sub pop pop stos mov or clc dec nop inc adc xlat and ljmp inc and xchg xor lcall rorb xchg loopne daa stos and add lcall mov mov cmp inc (bad) mov or subb std push pop cmp jae and out adc pop call icebp or xor cmp movsl movl rcrl in xor xchg cmp xlat cli inc jmp (bad) fidivrl in fmull add pushf (bad) sbb adc je pop js scas ss cli mov sbb cli outsb mov push xor jmp mov (bad) sbb pop pop sub stc into inc incb imul mov pop push xchg and fildll mov stc xchg or ret das add adc xchg jl mov pop lock mov test repz mov idiv xchg sub xor ffreep jp pop bound adc aas lret jne scas inc rorl fildl xor pop (bad) pop and pop lahf pop sbb daa out sub jge sub scas xchg cld push add or (bad) pop and push fldenv jo and jp xor xor xor aas and out repz dec mov in leave outsb cli lcall inc icebp jp mov xchg adc fstps xor xor (bad) sysret int jbe xlat cmp jmp movsb mov int aas mov sub (bad) repz adc mov aas push cmpsb adc sarl pop dec pusha add and mov dec popf movsb or notl push adc lret pop mov fsubrl mov jno cli popa push mov imul xchg sarl call sub ss mov or ljmp jo xchg gs enter push push xchg mull (bad) xlat and or rcll xor mov or sub inc addl xchg lds add fdivr and mov jle pusha add or mov mov dec (bad) das mov (bad) jo push dec aas dec dec mov fimull imull jg out jns add add dec ret fidivr gs bnd repnz xor fidivrl paddusb lahf das dec mov and bound jle out je mov out dec (bad) fucomi sub add scas (bad) or and std mov stos xor stos mov and leave sbb cmpsb sbb out xchg or mov das ljmp pop and mov and sub mov and lock sub repz xor adc push flds pop inc ret sub aaa and repnz test (bad) jb lret jb xchg vmovaps push mov cmpsb fcoms shrb or addl mov lcall mov and xchg out arpl xchg pop sbb or repnz (bad) dec mov mov cli sub call shl shr mov rol fnop (bad) repnz jo xor ja mov cmp (bad) je scas repz xor imul sub xor testl mov cli cmp sbb mov js mov adc notb rcrb pop push leave sbb and incb mov mov jae out xor (bad) push pop xor into and int3 lods pushf mov mov ja andl xchg inc sub inc sub add repz mov mov dec inc stc cmp xor stos lret insb pop mov mov into rclb repnz call push ret xchg scas cwtl cmp mov jge ret popf dec clc mov pop shlb iret adc (bad) xlat sbb popf adc sub dec xchg std adc sahf sub and add inc sahf cld insb movsl shrl imul push push jnp movsl popa cmp add mov adc or inc test adc or or (bad) nop adc push (bad) icebp idivl mov xchg popa or fbld ljmp clc cmp ss xor cmc lods jmp out sub faddp and fiadd out notb int3 insb ret mov add lds stos mov pop jno dec (bad) and loope xor das xor sbb sub testb mov pop data16 or mov mov cmp lahf and nop gs cld sti adc (bad) (bad) (bad) sti inc pop jne cmpsb push mov cmpsl sti sub push jecxz and data16 dec xor jmp mov mov adc (bad) mov mov push mov das cli icebp fstl gs shl dec jg pusha xor jne ljmp mov xlat xchg loopne jmp add mov lods pop mov shll dec xor push mov sti sub xor test dec (bad) inc orb notb in adc xchg sbb rorb xor (bad) mov and and shr cmp subb jb pop shll (bad) add cmc mov je fs test loope jno aas mov ljmp sbb dec mov dec test cltd xor sarl inc leave les ljmp mov aas jo add xor mov sub fwait or push insl push (bad) xchg mov inc dec cmpsl sbb and pop mov test add jmp aad bound call scas (bad) mov jmp mov fidivr xor lds je pop jne pushf adc in mov (bad) icebp pop repnz xchg (bad) loopne add jne sub cld sarl outsl push sub mov jns loopne dec push pop jbe iret push push mov mov cs loop jno daa fsubs jmp or hlt out in inc cmpsl and dec idiv cmp cld mov mov sti sub rcrb xor pop inc xacquire cli sub mov jge cltd xor sarl data16 jmp loope popf je out leave sub pop ret dec xchg add mull cld pop dec jne dec movsb call loope sub das mov or movsl mov stc xchg push mov xchg shrb pop leave aas sbb sub sarl add (bad) stos mov (bad) xchg aas adc sub pop (bad) mov sub add notl mov pop mov and lods or or adc or jbe push sub mov pop cli push jge (bad) mov add (bad) cltd in call popf mov dec mov mov ljmp rcr inc jecxz lock icebp stos into dec dec fsubs cmp sub sub jmp shr pop enter mov movsl or jne or and jg hlt add cmp clc pop lods pop ja cs adc ficom add nop or cld lcall loop push dec idiv add xlat enter or and lock push (bad) popf out or pop fsubrl adc inc xchg jne (bad) and sub repnz mov sub and mov adc cmpsb jbe into jne (bad) xor xor add movsl (bad) or and pop js sub inc mov (bad) cli mov leave ret popf or mov dec add insl movsl mov dec ror repnz cld stos xchg (bad) adc sahf lret cli jno xchg enter negb cmp pop lcall pop and ret insb cmpsb xchg test les xsaveopt shlb cmp mov xor je cmp shr fs scas pusha out or daa and dec and mov cmp mov pop or xchg inc cmpsb xchg out jp mov add in mov cs xor add ja jnp sbb movsl pop mov notl or rcrl xor repnz inc dec mov rcr cmpsb loope jnp jnp xor push cmpsl dec in dec adc jo dec jns pop sbb push inc iret addr16 stos lea push cs mov std sbb push pop mov and xchg push lahf add ljmp mov push xor popa jmp in movsb xchg arpl test mov fidivr daa fist adc push mov mov pushf mov int aad fmuls iret sub es lea cmpsb into and xor (bad) lcall adc loopne in xrelease xor adc push push xor mov movsb or xchg (bad) adc jmp das idivb or cmpsb mov insl pushf sub lret icebp out inc scas mov jns push ljmp lock xchg (bad) cmp adc ljmp dec fnstsw inc and pushf inc leave popf adc icebp test loope xor mov xchg push aas icebp push xor sub cmpsl ret jo lahf loope xor data16 dec ror sub ret xor out (bad) (bad) iret inc cwtl icebp or imul add and and add fisub (bad) jge pop xchg icebp lods cld mov jmp sub and dec pop std cmpsl lret leave push sub xchg popf fisttpll leave inc pop xor pop scas enter pop icebp lods inc mov out mov iret icebp cmc lret rorl gs mov dec and scas lods lds pop out sub dec mov lods dec jge cltd mov adc test jge add jnp mov lret sbb mov stc and mov rep or and lcall icebp pop dec fildl adc and mov (bad) dec cmpsb sub cltd fndisi(8087 sti sub push xchg mov sub add jp mov insw inc push repz lods ret sub mov mov or cmp (bad) popa inc and popa add add mov cs mov ds (bad) imull daa push dec mov and cli jbe dec lds cld pop inc loop aad xchg mov out lret stos xor or ljmp and call sti (bad) test xor jg dec loop mov add add fist ss repnz rorb xor push inc mov sub and sub or cmc xlat mov xor lahf out dec enter sbb popf insb jbe cmp (bad) imull and mov (bad) cmp jne stos lret and mov lret mov shlb push dec insl add (bad) sub dec mov mov fs stos in fs jg push mov and or or sbb and push mov imul mov dec scas sub xor ss ss ja out pop and ss stos mov call dec ljmp out mov in add add mov js out and outsl xor ljmp xor cmp (bad) int sahf pop inc sbb sbb push lret leave xlat adc pop mov pop fsubr jmp cmp cmpsl pmuludq aas pop add mov outsb gs bound sti cltd adc jecxz adc iret bound movsl inc fs outsb mov adc popf dec pop xchg add and adc into add mov xor mov xor mov mov (bad) scas lret sub mov dec lds push and jns jl jmp stc xchg aam fs and sbb bound aaa pop insb dec xchg push push pop dec loop inc mov inc int3 mov (bad) mov xor fadd dec dec lret imul in scas jb out xchg xchg roll pop dec pushl das mov popa lock sub pop add int repz or das push movsb mov in cs mov (bad) xor mov and xchg add xor gs repnz adc pop fisubr jo or fdivs pop mov and loope mov jb add or rclb aad arpl push push add push pop push dec push mov and sub cmc (bad) pop cld ds sub loope mov push mov jge push mov adc add push mov dec int push xchg jmp scas add repz push mov and pusha iret jge (bad) cmc ljmp push xchg jp cwtl mov pop mov add mov cmp push icebp fidivrl dec pop jno and add das mov addr16 (bad) ja mov xor into pop cltd or mov push push pop xor iret sub icebp and pop inc (bad) dec jnp add lods ja dec cmp dec inc and mov call mov sub pop add das or sub loopne shlb lods dec add cmp aas pusha addl lret pop adc es pushl and inc aam movsb cmp add fstpl mov fbld inc jo cmp sub mov or inc push enter jle xlat pop ds mov cwtl xor out cmpsl lret add fdivr das neg xchg roll mov add das jmp push idiv in pop (bad) xchg test sub mov sub mov mov add push popf push mov lds dec call jmp outsb sub ja mov mov or test sub pop adc xchg dec test enter out loope pushf push mov mov mov test sbb sub jns jecxz push xor out (bad) lock jne pushl (bad) push ret js das out and pop cmpsl out push push cwtl aas xor fldlg2 sti mov imul ret jne inc add and cltd (bad) (bad) push divl in lock push (bad) push pop sub incl ja and jmp lret ljmp xor push in popl mov mov scas sub leave fs xor lret mov shrb dec leave loope sahf and lret mov (bad) push leave pop jno dec jl popa sub cmp and push out lods jle pop into outsl lret test pop lret repnz fsubr sub mov fnsave push sti insl pop clc stos sub mov inc cmp sbb jbe dec (bad) iret cmpsl (bad) mov pop insb jle fsubrp imul xchg adc leave aam les fisttpl pop cmp push jns hlt sub adc jne dec fisttpll and imul and mov pusha out sbb pop imul add movsb repz mov jp and fldl lods int3 mov jmp icebp mov icebp push jp mov or jl int das mov je pop push dec adc in daa pop mov pop test xor mov adc test pop xchg leave negl (bad) daa in scas std add push mov mov or neg js loope jb mov xor pop xchg (bad) fsub mov pop rorb out fisubl push out jmp or cs pushl or adc push inc das add xor sbb and decb fs add pop and jmp xor xchg sbb cwtl xor rorb cli add into inc pop (bad) mov cmp sti into daa adc and movsb mov rcr into push divb adc add sub lret or adc cli repnz add fistl xchg and jl int3 aas mov mov inc daa xor push popf pop pop pop mov sub fbstp push ret insb daa lahf (bad) cmp mov dec mov jo daa mov aam push xor test lods ljmp push sub sbb sub mov (bad) mov jl lret add and sbb xchg mov shrb fdivl or dec sti mov outsl lods loopne xor jg aad push push aam jo or cs out clc imul xchg jns ret testb mov loop notb (bad) mov pop push out mov lret icebp subl push xchg in add sub cs int cld adc sbb push lods mov mov xor mov popf sbb std sub or xor push das insb ret orb cmpb dec test shll pop les mov mov push xchg add xor repnz inc cmp scas add inc dec push inc pop xor cli cltd pop sub or and xor call jne mov je mov add rolb imul mov or cwtl (bad) icebp inc adcb dec notl or cli mov out dec out mov sti xchg and adc mov idivl (bad) insb cmpsb and sub jmp lods fcmovnb sbb into mov loop mov popf jne pop icebp movsb fs push mov mov dec cltd xchg das ljmp sbb xchg in xchg add push push mov or jnp jmp dec inc cmp mov fstpt (bad) or jo cmp fisttp mov loope xlat pop xor mov inc adcl fbstp sub add mov xchg pop jmp jmp (bad) or enter shrl pop lods rclb pop iret jg or pop xchg adcl inc or inc cltd (bad) jnp dec push in or push hlt or addl jns cwtl push mov mov je aad rorl dec sbbl roll push mov sub pop add xchg xchg mov fdivl push out lods call or lds ljmp (bad) neg add dec mov xor pop push out adc push ds sbb test mov push adc scas dec les cltd imul or cmp not cmp xchg pop xchg mov dec and pop shl push mov fdiv pop mov mov or dec adcb mov fdivs inc std xlat jg and repnz icebp es add cs or pop push mov adc push mov jmp push jo add and push fidivr fnstsw pop in pop dec mov sub inc sbb push push mov push out jp je add pop pop rol add cld cmp push xchg popa mov outsl and pop sub add mov cmpb (bad) repnz push pop push ret fcoml cli std lock adc xchg xor pusha pop add popf jl dec addr16 mov xchg add out push push je out (bad) mov mov loope fdivrl lret or push adc pop and outsb call mov dec jno xor cs sti sub adc adc das stos fs outsb (bad) lock and subb ljmp repnz test add xor add mov out or or (bad) or (bad) sub push mov out inc push out push add (bad) testl xor repnz xlat shrb pop jp ret mov xor cltd jae (bad) iret jge movsb clc out mov xlat pop ret pop mov daa (bad) pop dec (bad) out (bad) repnz or (bad) mov lods or leave push stc inc sti and idivb in mov add aad cli daa pop lds stc dec mov mov outsl lret into jl jmp (bad) mov insb int3 add xor xor pop out and mov pop dec cwtl or xchg js xchg mov push jns dec pop add sarl je jmp lret lcall ds std add adc aam into dec div pop leave je daa pushf mov movsl pop sub pop pop popf mov fsubs push and mov and (bad) mov lods call dec and mov ret es pop add (bad) lret mov xlat push cmc shll mov loope push pop xor shr movsb hlt les cld popf loop stc fmull add jg jb jmp sub pop mov mov dec adc cmpsl test stos fdiv sbb in or pop inc adc sub jg jne adc pop imul jbe and (bad) je scas in movsl push xchg and icebp movsb sub movsb push sbb nop fsub sbb jmp pop enter jl add sarb cmc shr fwait pop in adc test loope sub add js xor nop or and rorl push (bad) mov jl pop push xlat dec les xchg rcrb nop je fimul test leave push inc and daa pop push (bad) sub dec jp arpl sub sub inc add or int xchg icebp or xor (bad) insb mov adc mov mov nop inc fimull stc pop mov add mov mov in popf fcos outsl (bad) xor jno xor cmp lock cmpsb cwtl lret sub push subb dec and add pop mov int3 jmp adc cli pop (bad) lret mov enter sub aam inc in popa add adc add das mov js fistpl std mov arpl cmp lea adc lock les inc mov pop fsts inc sbb sbb and and jecxz je in scas bound adc sub (bad) and dec mov mov (bad) push (bad) and mov mov fistl or stos (bad) pop push aam int sub rol imul fisubrl sub add lret push push xchg or dec mov and shll out repz and rorb or sub aad push dec clc mov iret jns popf lcall test loop xchg adc (bad) lret mov xchg dec test insb idivb pop or mov lret into add dec sarl lret pushf xchg add leave mov cwtl cmc and mov cli jne out cmpsl jg and stos xor add cmp fwait test ljmp fcompl setg add mov cmp or jne jg test xchg jg inc mov xlat push ficomp or ret rorb add push mov add aam fs cli in js sbb shrb mov push mov push loop fldenv push dec imul mov pop inc xor jno xchg cmc or or pop repz xor imul push lret sub xor out lret mov dec (bad) mov cmp mov fbstp jbe cmc mov loope push pop mov jg movsl xchg push mov sbb xor pop adc xchg or fiadd jmp divb sbb add push and add test lahf jle push push cltd dec push outsb or push rorb popf gs adc es push sub imul or push das andb sbb push aaa xchg mov in rcrl roll add icebp scas mov repnz cmp push pop inc lods jo dec add add mov jl pop pop lcall movl (bad) mov outsl or jo mov jg fsts cmpsb and jmp and jmp cld mov mov das neg xchg leave cmp pop stc xchg pop cmp lock sahf sbb or lret iret and push xor mov leave adc mov push xor test add fist inc in rep mov inc shl scas int3 fsubs pop fdivrp sbb jmp ror movsl pop into add pop ret sbb mov jbe addr16 gs adc (bad) sarb (bad) pop mov jns and add sub bound mull fs jae add xchg jnp dec cmpsl fidivrl insl into imul test jmp jmp or add lret jno mov add mov (bad) out or (bad) sbb idivl fisubl push cmp sti and push mov scas test cli and add ret lahf mov ret add push add push add jne cltd sub lahf push cmp push lret and arpl jae jno loop lock insb push fdiv inc lret xor sub inc jle andnps or rol mov repz data16 dec movzwl pop mov cmp (bad) mov ja jnp adc xor lret jnp das fnstsw jo jecxz push shll mov mov jo neg nop xchg fwait xor mov add rorl xchg hlt pop lret std mov fdivrl faddl (bad) (bad) fstp stos dec negl test loop xchg scas gs dec mov negb ljmp add fdivs mov roll pop outsl hlt aas inc xchg out push mov (bad) and mov out mov ss loop fnstenv in mov push out sub movsl bound (bad) mov xor in movsl jge mov (bad) dec lods popf sbb sub adc out sbb ret lock or jnp or mov cmp dec dec mov and mov mov mov mov sub js xor sub gs fstp std and (bad) notb lcall (bad) das (bad) xor mov sub jne mov fidivl pop (bad) in rorb fs mov mov sub pop clc inc pop fmul mov add mov and dec insb pop shr push mov dec out repz ret lods fimull ret fs adc cmp mov xchg mov sbb or es lret out popa call imul mov lahf push xlat push (bad) arpl mov xlat xor popfw rolb movsl sub stos aaa push fcmovnbe sbbw cmp mov add lods xchg clc mov add pop adc out mov xchg jmp push adc sti sub cltd inc sub cmc clc into mov and or add aad insb push push inc dec push or cmp in nop dec loop rcll sub mov jbe add xchg pop jb inc into xchg pop pop movsl push sub stos dec lods inc sarl xor pusha popa mov jp test stos test rol pushf push sub pop loope xor (bad) stc pop fucomip adc ljmp std push sub sbb aas scas addr16 test mov push xchg mov mov cmp out adc or push test pop in nop xor ret sub movzbl les fsub push fidivr lret and adcb sbb scas popa xchg or jecxz mov jno negb inc sub sbb push mov out pop inc scas fs test lods addb mov jb (bad) xor imull je sbb xor scas cwtl or dec divl mov or jge ds sbb xlat outsb lods pop movsb mov (bad) lret pop push cmp sub or push mull jle jno loope mov in jmp pop repz jmp cmp jno xor sub dec pushf addl flds or push or cmc movl fwait xchg scas jge cmp pop mov inc sbb push fbld cmp mov dec scas sub jmp and les jge sti pop jecxz fisttpl add cmp loop inc (bad) ljmp and mov (bad) and dec mov cltd mov xchg adc cmp or push xchg mov iret push mov xor lcall fsubrl loope stos lret and pop mov lret xlat (bad) xchg mov mov data16 in sbb daa xchg dec cwtl repnz mov add jmp out pusha xchg jge add and mov inc pushf mov mov sub cmpsb pop xor aas cmc cmp fdivrl mov mov scas fadds add ljmp xor lret inc mov aam sub mov (bad) jb dec (bad) lods jl test or sub sub cmp pop and in adc sbb clc ss mov sub jne adc notl and jmp pop adc icebp adc loope cmp or or cmpsb lret push pop jb pop shrb and xlat (bad) adc lea jge sbb sbb pushf mov fwait jecxz sub ljmp daa ja movsb lods sbb add mov lret cli subb xor sub pop and pop sahf adc mov pop jbe dec add push pushf rorl and daa outsb mov sti or insb aas add sbb xor cmp add js ficom orps out je repnz repnz add sub lock cmp xchg (bad) je pop call aas add sub test sub nop fldcw das dec and xchg inc cmpsl push inc pop push or pop xchg frstor xchg sarl adc or repnz pop push jnp in sub fimul sti daa rorb mov xor std mov and call xor frstor loop xchg xchg (bad) mov xor les dec mov jge xlat call clc jmp sbb add and mov xor hlt (bad) lret push jno or and add add mov ret cmp jecxz loop jns imul xlat test iret mov sub sbb iret mov and sub and into lods jb mov (bad) cs sub xor out xchg xchg scas out xlat lods call das (bad) in sub push adc mov lea nopl repz and jmp in scas fadd iret pop sbb movsb rcrl testl stc mov xor (bad) xor loope mov pop xorb mov jecxz and es and pop mov xchg out push add in push loop inc mov roll add lret movl adc ret add adc and xlat inc insl cmpsb sbb scas mov add mov cmp loope add call inc or mov icebp out dec pop push in xchg mov bound mov clc imul fstl std hlt jge js pop outsl lds clc sbb stc movsb pop mov cwtl fistp outsb or iret (bad) fs js arpl and inc add or jmp pushl imul push repz mov fidiv cmc (bad) scas dec ljmp cs pop arpl out adc dec xor out loope mulb sahf xor movzwl lret inc push xor decl jle jmp fs mov cwtl outsb mov into jno sub cs and mov cwtl cmp lret repnz outsb fstl cmp dec push cmc insb ds leave pop adc rcll cmp jb (bad) sbb (bad) adc out and sbb sub dec loop les sarb pop or jb and out clc xchg repnz add aaa xchg fwait mov sahf fcmovne push stc notl push or lret icebp sbb aad (bad) push ljmp fwait sbb pop repnz xchg test jge test ret add xor stos je lds mov adc sbb push loop push das mov (bad) daa and (bad) or sahf stc add jbe mov lods sub lahf push push (bad) (bad) out add std nop xchg scas flds mov repz daa sbb dec push mov fcmovbe add jo push test idivb xor out out dec cld cs sub lret or inc inc xor sbb mov and mov ds shll movsb pinsrw lods and xchg fwait mov (bad) outsb rcrb imull dec lea xor das mov xlat cli adc sub dec cmp ljmp jg mov push ret sub push mov idivl and and sub mov xchg icebp mov xchg and jmp pusha mov dec mov pop mov mov stos cmpsb in mov or or mov stos aad out dec mov jecxz pop mov dec scas sub popf idivl and sti hlt das mull add sbb ja lock sub movsl push ret test repnz pop xchg sbb and adcb mov and movsl out xchg ret mov mov sbb cmova xchg cmc flds and xor cmp in ret (bad) push mov mov fsubs decl cmpsl shrb adc add jmp enter mov push add and sub sti push arpl decb test xchg bound or sub and jmp pop inc lcall mov aam xor jmp enter sub push in cmpl or sub lock (bad) out add int3 jne sub (bad) xchg jmp xor sbb xor xor cli int outsb addl cmp outsl mov sub into into pop mov mov adcb mov or out bound inc push fisub bound pop bound jbe das adc pushf pop pusha fidiv (bad) xor stos fdiv mov mov ret dec mov jno dec push int daa test mov pop xchg jmp or mov pop je jmp rcrl gs je sti (bad) repz jne lcallw xchg dec lret data16 add int3 mov call out adc rcll jne mov cmp bound aad xchg das push hlt xchg pop dec lret ffreep lods mov cli imul xor cwtl pop hlt mov pop shrl cmp lods jae adc mov mov jb gs cmpsl adc or xor push (bad) dec fdivr fistl lret mov call call stc xchg pop das ret (bad) std mov (bad) mov dec enter nop lret jne and out lret fbld lret repnz mov add cmpsl jl xlat outsb mov add and repz jmp cwtl lock sbb xor ljmp mov inc daa mov add pop mov (bad) daa stos dec mov out cli ffreep dec jae xor mov push push dec pushf and fadds mov icebp stos mov mov mov push jns (bad) sub test scas cld das mov roll sbb leave jb adc or loopne (bad) dec add repz and dec and jmp sbb (bad) xor repnz sbb daa ljmp pop or cmp adc and js sub dec out sti sub jecxz dec mov jne jbe stos lret pop (bad) push pop dec ret add jg fiaddl stos rcl imul loopne scas jne mov loope cmp into cmp int mov push push out loop mov jne adc test mov sub aad les je flds xor dec cmp and test sarl lea mov xchg mov pop pop cmp icebp mov lret xlat cmp inc (bad) popf sbb sarl jno add cmp mov cli mulb daa (bad) mov in sbb sub popa add pop dec (bad) bound lret inc test adcb icebp loope pop arpl ljmp sub mov jo dec adc mov add loope out sub add daa xlat xor fadd gs cltd mov sub repz push xchg lea fwait daa ret lcall icebp gs std (bad) jbe push shlb dec into scas sub cmp push lds aad leave dec cli notb and lret xor ret and or popf jae xchg jmp into aaa dec jecxz das repz jo or adc out add out sub inc push pushf (bad) xchg push cmp ds ljmp sarb lods pusha es mov push mov jge push push in pop iret imul out fcoml ja mov xor sbb add scas jo fisubr (bad) lahf push sbb xchg clc or fdivr mov mov push cwtl add scas je aad divl add or mov clc or push jb pop inc clc jmp hlt vcvtdq2pd clc fisubl mulb xchg lcall das out pop in das fnstcw sbb push push mov (bad) jmp adc sub ret mov rcl add jmp sub lret int3 loope roll pop push andl fistp adc lods sub mov add push or mov pushl fs cld out mul adc sub xchg or call xchg imul jecxz,pt sarl cmc test jb push je jmp (bad) in sub aam imul sub dec push xlat test and loope pushf pop pop leave sub sub xor xchg in icebp xchg and das rsm push movb pop or push sbb sub loop lret add cmpsb into test pushf mov jnp das push shrb pushf cmp xchg xchg jb cmp mov mov aaa out push loopne les scas mov and lahf jne pop dec mov aaa cli push divb lret and mov mov int bound das pop (bad) jno aas fs add or mov xchg or sub push jle sbb pushf mov push xchg es dec pop (bad) push ljmp jne jo ret mov fisubrl rorl sbb dec push stc xor ficoml js xchg (bad) scas lret add mov call (bad) cmp aam pop inc add pushl jg cmp scas push stc sub stos mov push leave push add mov dec xor pushl inc hlt add jbe (bad) dec mov mov pop mov add (bad) call daa push inc adc push adc push in shrl subb (bad) leave pop fmuls movsl and imul xchg xchg pusha xchg outsb outsl jb xor out xor pop jno cmp roll loope ljmp sub in sub and fstpl and rcrl sub push lret movsl pop les popf xchg xchg fs into or sub sub add cs lods dec mov icebp (bad) dec fnstsw sub adc dec mov pop sbb adc pop enter xchg pushf sbb sub inc ja mov sahf jge mov pop aad jns int xchg dec (bad) cmp ljmp fbld pop dec or or xchg push out mov dec cwtl dec push lahf lret pop or push xor mov or divl fimul adc mov fcomi add int3 out add sahf gs stc mov dec ljmp bound jne es xor sub insb xor push and stos fscale sub fcomps (bad) decl cli mov inc cwtl cld movsb adc pop mov rcrl sub mov xor push jge jne mov lds (bad) iret dec jmp or notb dec sbb or mov mov adc sbb (bad) push jo xchg cmp das and adc add add or idiv sub jle dec enter sarb or sbb gs sub int3 nop and loopne push push mov ljmp out insb bound jg or fimull push jns dec dec call test cmpsl push jns inc push push mov jg in or repnz fsubl and xor (bad) jg pushf push mov add mov pop mov mov add mov (bad) sub rcll sub inc jb dec not inc push mov cs pop (bad) or jle sbb add repnz adc clc jg push rorb or shr or push push push pop add pop rdmsr or adc or or sub jbe aaa push or dec outsl sub loop or pop in enter mov xor fildll push mov or and sahf adc roll or repz shll pop jo jbe repz jbe adc dec pop push and test and adc out ja mov dec leave (bad) les pop jecxz pusha pop pop push push pop mov pop fisub stc sbb fnop pop movsl pop jbe daa repz jge pop addr16 push adc mov add push cmpsb add mov pop xlat nop es xchg pop cltd daa in mov popf je jno xchg push xchg int3 sbb rclb add dec aad pop or sbb loopne (bad) js pop ljmp aas jne out aas jbe repnz jge sbb inc jns loop sub sub sub mov and aas out and ret imull test add sbb shrb cli mov ja sbb das aas and add adc cwtl dec pop mov cmpsb popa das (bad) fildl add xchg mov lcall bnd in xor push sub into sub lods jl or inc xor mov (bad) sub adc and jno rorl jl mov sbb (bad) nop pop rorb sub push sub movsl lods clc xchg pop lret mov insl and popf jns dec xor mov aad fcmovbe and inc or push add adc icebp call rcll and dec cwtl xor cmp clc jnp pop aam leave xor fild rcl enter cmpsl pop sbb leave imul mov bound sbb mov xlat stos insl jnp fdiv and (bad) xor out adc mov sub ret jne out cld ds pop adc pop in push xchg mov cs into cmpsb cli movsl jne sahf ret rcll lcall loopne loope jns dec and stos and xor add sub push mov mov inc or outsl icebp mov bound test mov add add and pushf mov lods in sub jnp rcll adc (bad) mov fs pop (bad) (bad) jbe adc add mov outsl jbe out ja cld movsl (bad) ljmp cltd fimul shrl mov (bad) adc xchg imul mov (bad) xor pop es sub hlt into and xchg out movl pop or outsl stc notl stc lods mov ljmp stc and or fistp out xchg (bad) ret inc mov mov mov adc ljmp add aad stos mov shll in stos cmp sub shrl xor jg xchg (bad) mov mull pop fstpt jmp jnp mov pop dec mov add mov jo lahf jl xchg xorb push cli mov dec test movsl jb jmp jmp cmp xor jl add scas pop insb bound inc xchg jae das mov mov adc jne aam push push push ret jge mov mov outsb int xor jne mov arpl movsl out fcoml push test rolb jbe sub ret jle jge jg xchg and cmp sub enter and xchg pop sbb adc xchg mov fs add lods negb fmuls mov add cli cwtl add stos adc loopne sub std in add jbe testb cmp mov es rcrb notl decb pop repnz mov jbe dec ljmp push fistp dec rorb dec stc xor or mov xor mov mov sub dec call and push negb xchg psrlq (bad) adc sbb add fisttpl (bad) negl adc in inc lahf data16 jno sti inc xchg xchg sub out inc xchg test mov xor push into scas xor movsl cld popa and sub pop cmp jns leave repnz lds and lret pop jmp (bad) repz add mov sub adc and mov xor das and mov pop stos add fnstsw inc imul or sbb shr xor mov loop sub and sub aam inc sub and out xor (bad) jp mov push cli (bad) pop ficomp repz push fistp frstor sarb sahf adc shr fadds inc es add pop (bad) imul adcl imul iret out dec lret pushf bound clc cmc repz add mov xchg dec jle add test or (bad) lahf pop jo aam sub xchg imul in (bad) sbb (bad) xlat jnp sub divb mov ficomp and pop loop sub out mov mov aaa xor cmp (bad) ljmp push mov and xchg pop mov incl loop mov jbe imul cmp xchg jge and push dec mov dec pop data16 adc ret int3 pop add push ljmp push jmp ja test scas mov mov mov push call and js sarl popa lods or test jge js adc xor cli pop mov fidivr stc xor (bad) mul jo bound test iret test xlat mov and sbb imul jle pop (bad) mov test lds iret ljmp dec mov xchg lods dec ljmp jae sub add cli cltd add out pop adc int3 movsb push movsl sub pushf xchg int3 arpl sti dec inc test push aad jb and xlat inc jo imul mov jg mov nop ds les imull loopne lret out lret (bad) repz push jno in add into add cmc sub addr16 neg push scas dec cs fisttp mov jle movsl cltd (bad) bts lea fcoms into pop add sub fucompp xlat in or (bad) int3 fisubr repnz cs popf (bad) pop and jno sub addl ljmp iret add mov pop leave and jl (bad) ljmp jle inc xlat clc imul leave js fsubrs (bad) jno mov inc xor add dec mov dec mov cmp ret push loop sahf lods (bad) out aad inc int3 pusha lret inc daa fisttpll repnz adc popa pop (bad) pop adc out cmpsl int3 test sub cmp inc pop add sub sub add cli push add push int inc insl jb loop sbb mov pop cmp insl push jne mov adc movb push lcall imul xchg adc inc jb xor in sub test scas sub sub or xchg mov pop jne loope test cli clc or push pop dec lods jbe xchg shlb mov cmpsb js cltd xor cmc test pop daa push cmpsb cld divps clc insl push or ret mulb push push mov mov icebp (bad) xchg add int add mov pop lock scas mov push push dec imul or add mov lret add mov push pop mov jb lret adc or cmp ret (bad) in or jbe mov les xlat mov pop inc lock adc sub jl in mov icebp mov out xor std (bad) inc lret or shlb in jne mov sub pop lret and cs xacquire popf push popf mov xchg adc out mov sbb std mov into mov rorb xor inc push int3 nop mov inc sub pop xlat pusha fmulp xor lea push (bad) cmp stos add sbb sub cmp decb or xlat mov cmc mov dec loope ja inc mov fist popf pusha add add jmp dec sbb stc (bad) fisubr jb mov je add out into jmp dec movsb sti sub mov adcl push or xchg fucomi push jae repnz or add xchg mov lods inc mov dec leave cmp lds ret lret push loopne fdivrl sub mov mov fildl cmpb dec lahf leave popa test pop inc push and mov xor in xor add fisttp pop into cli sub repnz fbstp outsb ret rcll xlat dec sbb add add ror adc fbld fisttp ret mov and rcrl es es jo sub test fbld adc cmp loop test pop xor (bad) xchg inc mov add rol and ljmp inc jmp imul int daa mov lods and xor das (bad) repz jns inc iret pop push mov movb sub mov add inc push mov dec xchg lds mov jb roll in pop pop jmp sbb out inc cmc jnp int3 idivb xchg add dec and outsl cmc mov mov notl fistp dec (bad) or ja xchg xchg inc pushl sarb mov daa pop xchg mov xor icebp mov xchg lret mov dec sbb movsl pop jmp cmpsl mov shrb stos (bad) jnp adc xor aaa in cmp pop insl out dec fidivrl (bad) cmp icebp mov xor cld cmp mov cmc sahf and xor lahf mov hlt sbb push out outsb icebp sub sub mov sbb and push fist into scas sub shrb shrb mov clc mov cmp repnz pop xchg sbb xor xchg mov mov int xchg and and sub mov add cmp and stc aas (bad) xchg cmp mov push daa push gs mov xchg repnz xchg (bad) xchg and loope in sub mov push stos int3 mov xchg cltd int jae sub sub sbb (bad) addr16 and (bad) stos mov das and or (bad) push xchg mov cld mov cmpsb fcoms push and notl imul add and in mov dec test faddl inc mov push mov xchg jae lods push bound ret xchg cmpsl or add stc in lret out jle jl mov std shr movsl jno inc add mov bnd jp dec rorb rcr xchg clc pop inc test test insb xchg jb ret jge pop icebp or cmpsb dec and rolb das call xor mov repnz sti xor add xchg les mov sti or fstpt outsl inc lock pop rclb push mov jg bound mov (bad) lret sbb dec movsl mov (bad) mov aad sub cli aad ret mov hlt cmp add imul (bad) or pop outsl jmp cmp cli pop xchg adc mov loop lahf jg jmp stos hlt and inc pop (bad) sub cmp xchg mov pop bound xor dec mov test or mov out popf add mov pop lods fmul add loop jge cmp lds lahf jnp jmp call mov stos sub push jo loope pop dec sub scas in cmp cli xor mov cmp mov loop nop xchg pop icebp lahf jp sarl or sahf pop in jmp inc xchg or dec mov lds insl jmp out iret inc mov jae lret add or pushf (bad) and sub pop mov shrl mov rcr xor cli je stos repz out jnp mov xchg idiv daa bound mov cmp xchg mov lahf adc jp ljmp sti (bad) mov cli test scas les mov shlb ret jp sub scas xor xor xchg jno fs mov popa xchg adc inc adc ret pop adc rcrl lods sub push add clc jg add stc dec mov lcall push popf loop jg add cmpsb xchg lock jmp adc pop loopne cmp push lock dec pushf mov dec (bad) int3 mov std xor ret xor mov add (bad) sti mov aad je int3 rcl sub add into int sub leave or cli fs lods scas sarb adc out cwtl imul xor lds rep (bad) fst cmp out xchg xchg push (bad) lret lcall push sbb pop sub fs sbb sbb jnp hlt mov daa (bad) aas mov ja mov pop mov xchg dec in stos sarl push and cmpsb lea hlt notb adc fdivrp and or (bad) fisttp sbb ljmp jnp leave std addr16 inc add adc in divl fstpl test inc iret std insb aaa dec mov mov push fcomi movsl jl adc cmpsb mov sahf sub fwait lret sbb mov or aaa movsw (bad) in push mov ja jnp sub test inc xor sub cwtl out jmp or add lahf data16 and loope inc lahf cmpsb pop daa ret movsl inc xor sbb push int3 cwtl xchg jbe and xchg mov aad inc sub inc cmp push pop cwtl ljmp movsb test fwait scas and xor add icebp mov movsl push inc outsb ret fwait mov or dec shr sbb aam out lret rcll cwtl imull les jmp push pop aam stc push inc and mov inc test add mov bound int3 icebp sub mov add xor xor add jbe add cli push dec addr16 arpl call dec cmpsb das pop push inc mov xor loope mov out lods je cmp xchg mov imulb icebp pop adc mov xchg (bad) lahf mov sbb add xor mov dec ret int hlt mov cmp xchg cs and pop xchg push dec mov (bad) xor and xor jae adc lret push int3 jne popa sbb cmp xchg jmp mov pop lds dec xchg mov or cmp push and and mov popf lret sub push and aad xor xor xchg add stc imul inc fsubl xchg mov xchg mov sarl out imull push lods push cmp pop daa shlb sti stos jne mov and scas add repz dec ljmp sbb sahf mov scas ret push push xor pop bound rol or rcl cwtl iret sahf fwait shl insb fisttp nop lock jle enter sub das sub (bad) dec (bad) ljmp mov (bad) mov sti faddl pop cmovo xor fcomps dec imull test mov dec lods sti fdivrs mov jle bound outsl in mov push bound xchg or and test sub adc loopne mov sbb pop jns xor sbb clc mov sti enter jbe pop xor (bad) inc bound and xchg push add (bad) cmc lahf idiv pop idivl mov in or sarb sub aas dec or lds ds lods or in inc add xlat jb xor test sub loopne lahf sub dec mov icebp jmp jecxz sub adcb push (bad) cmp mov push push push sbb lock out adc decl xor dec lock mov pop add and aas pop mov sub shlb or in lahf mov pop loop icebp inc dec jl pop add mov mov sub dec (bad) rorl ret ja loop mov xor or imul sbb mov add cli gs xor iret push lret xor dec fldenv lcall loopne icebp daa and sub and dec (bad) and loope sub out add (bad) fldcw sub xchg in out popf fmul inc lock cltd push cmp lret enter pusha je xor xor lahf insb xor ret xor cs sti push in mov sub inc repz hlt daa mov and divb mov fs mov bound outsl sub and cmp mov inc (bad) xor dec mov cwtl jnp xchg jno gs dec dec test pop xor sub cmp inc loope test aas and mov into dec and mov fisttp xor jmp xchg dec mov dec ret mov mov adc fidiv fs and inc ja (bad) sar lret cli dec scas fcomp sub cmp push lret in dec mov xchg mov xor fstl mov repnz (bad) xchg and jle fisttp into and std xchg push sahf popf sti das int3 mov fwait shlb scas (bad) cmp xchg lods repnz xchg and and popf int3 push dec out mov sub ret out inc loopne iret sbb dec repz xor cli adc ljmp cmp and push (bad) adc sub out pop out mov pushf pushf and xchg and inc mov mov add cli mov iret aas mov add add mov imul data16 xor movsb sbb fdivrp jns cmp (bad) pop mov cmp daa notb dec sbb sub push inc testb adc ds sub or jbe or xchg movl repz xor push bound lret cli adc out das mov mull push dec xchg mov and cli lahf jnp and xchg adc mov mov arpl out sti pop jne mov mov mov xlat xor inc xchg adc leave pop repz test jecxz mov push repnz fist xlat lock mov sub das dec lods (bad) daa mov sarl cmp cs and add out and ljmp xchg cltd repnz adc xor lock mull pop cmp cs mov and add test mov lods imul mov movsl scas push fsubr cwtl addl mov or pop xchg insl xchg adc pop popa out das cmpsl dec adc add inc (bad) jl fbstp stos (bad) or call and add cs mov xlat scas cltd in add les (bad) jmp adc dec inc dec (bad) cltd mov mov cmc lret pop add add xor sub jmp call int3 sub icebp push arpl add or fcoml shll pop xchg rorl mov mov xor push dec cmpsb jle int3 push inc loope fistp or or adc lea jecxz jg pop gs push mov mov mul rorl mov dec int3 std lret (bad) (bad) and popf xchg mov jmp adc in in and (bad) stc ljmp xchg push cld dec add cli jmp les mov js je jmp and in cwtl jl xor push sub scas fdivrs lds repz add add xorps (bad) addr16 lret into call push cmp mov fistp rclb movl fadd daa xor sbb (bad) pop sub push adc mov or dec lods pop xlat jb (bad) jne lret setne mov fsub sub and inc int3 hlt mov fs push xchg rcrl fnstenv push ds xor sub icebp pop cmp xor pop out cmpsb aad dec dec lods sub add insl dec loope pop fwait sub mov pop and in inc sub sbb cmp das (bad) cld push jb cld aaa lds inc xor add xor jmp imul cwtl xchg (bad) mov lods psraw call xor (bad) mov cltd adc add test cmc cmp dec mov mov jg jle and leave inc xchg mov sub out dec iret jmp loop aas sub adc mov sub (bad) test mov xchg add loope std call push push pop mov ret jns dec adc xor ret cmp stc testl sub add mov mov pop xchg fcmovnbe (bad) out mov out scas daa or cwtl aaa sub mov xlat (bad) mov (bad) inc leave dec mov mov cmpsl cmp in xchg lret mov jo (bad) je jbe push mov (bad) push dec mull mov nop sub into mov lea mov mov inc or les and cmpl dec and fs xor mov jecxz mov fistpll pushf pop mov rorb (bad) xor (bad) adc out dec idiv pop mov jno imul or mov push add jbe pop test movsl and cli jecxz xchg adc mov cmp in add ljmp dec mov add test push push lret daa test mov jmp ret lahf testl fucomp xchg testb fist test mov sbb (bad) xchg xchg sarl pop or stos bound push and gs pop xchg aas rorl inc cmp (bad) mov (bad) xchg cli cwtl ret and xor mov add stos fdivrs and or sub xor daa (bad) fsubrp jmp mov ret daa lds (bad) xchg gs out or sub adc in repnz pop xchg push pop push sbb mov and les mov in popf xchg dec out push mov cwtl imul sub mov fbstp orb and and subb sbb jne (bad) mov sub inc mov xor dec shl pop adc (bad) jmp dec cs fs addr16 rol outsl clc mov jecxz es and push push inc jb add push js ljmp and jns nop (bad) xor pop xor jmp test push or sbb mov lret push pop mov add sub pop or mov idivb pop (bad) mov jl (bad) insb push push (bad) xchg xor dec pop call inc ljmp movsl mov and pop xor (bad) lods or mov mov pop gs cmpsb test lock in (bad) mov mov fs loope les cmp xchg aam pop jg (bad) or andb pop adc sti (bad) adc mov in xor aam leave inc cmp sub sub call loope lcall int in push test sub pop cmp adc sub cmp test mov or out das ret jg les xor dec jmp mov sub adc lock cmp je out mov xchg insl mov sub repz sub negb hlt fxch dec push popl sbb xchg sub and gs mov jae dec popf cmc cmp and mov (bad) cld dec mov popf pop push mov sub xor or leave lcall imul insb lock jmp incl jmp and xchg in cmp sti into sbb ljmp pop jo sar fisttpll mov nop int3 sub sbb popf rcrb fcoml jmp (bad) int jmp mov repz push or dec mov add test pop mov aam mov mov pop test inc jecxz xchg adc xchg pop lea sub and std imul push icebp mov cli adc stc adc push call dec xor fstps aam pop push dec iret scas mov mov jns inc add and daa or jne ret inc mov xchg jns in repnz sub mov mov fistpll xchg jbe pop sub add push or frstor jno (bad) add sub lds inc mov stos out js out mov cmp cwtl xlat test cmp xor xchg sub (bad) call and rorl test push lret leave mov ja xchg pop (bad) (bad) pop out dec int negb clc mov decl xchg bound jb int3 xchg out out (bad) mov sub cmpsb sbb test sub mov or mov push cltd jno imul lcall into repnz lret push into mov push stc dec inc lret jecxz dec sbb mov insl dec mov adc fsubl shrl divw xor jb daa mov dec in mov insl iret movsb sbb das mov fsubs out add add dec jmp ja pop popf jae mov mov (bad) es sub push jne mov cli dec mov (bad) xchg adc cmc movsb stos or add mov into repnz xlat mov push push inc mov mov repz dec outsl stc imul scas jne loop dec sti sub test (bad) int fst cmp rcll or add xlat jbe (bad) sub sub xchg sub mulb loope (bad) mov jae scas fistp out ja mov pop or mov mov test ljmp inc and (bad) repnz popf ret and and mov gs ficompl add pop jb not pusha push sub sub add and fsubrs dec (bad) mov stos mov daa leave je int3 adc mov mov push jbe or shr add jne cmp pop or cli mov push out pop and pop lds repnz mov lcall jmp push xor or test movsl scas jno and das mov mov inc mov lahf xchg sub cli sub outsb fs fcompl pusha test mov (bad) and out in jmp adc ja and fs ret mov cmp inc movsl mov negb enter and movsw incl and add add cmpsl pop fdivs adc rcrl clc outsl ds dec adcb std mov pop cmpsb push gs stos mov sarb adc clc stc pop and xor mov and and mov insb lds cli sub stos or jo hlt mov mov push sub mov push ljmp in add or mov xor add fild std xor pop add (bad) mov pusha inc xor sbb sbb sti dec iret push stc mov (bad) test out daa sub fnsave (bad) jge mov pop call add imull clc scas out sub cmp icebp jns lret pop mov jmp and pop pop mov sub int3 mov lahf mov pop loope iret dec dec and pop lret push inc lods add and xchg cli cli mov loop mov xchg in and mov out lahf imulb add xchg (bad) cmpsl push icebp or jecxz mov scas xor sub das out imul cmp jbe xchg jecxz lret cmc pop mov and mov and add popf pop lea jmp sbb dec dec (bad) jbe pop std push mov (bad) cmp hlt mov lret outsb call dec pop repnz sub stc mov es mov les (bad) incb pop sub rolb int3 pop cwtl mov xchg xlat mov xchg loop ja jmp jmp jg cmp xchg divb xor fldt ss add jl fnstcw jge popa mov push sbb adc test mov push mov aas jp (bad) ret ljmp xor or sub sub cli stc das xlat mov inc ret and sarb jp or fcmovbe add rorl mov into pop inc pop daa and (bad) adc add ja out popf loop mov mov es mov mov gs cmp push pop xor xchg stos ret aad bound out clc mov mov clc xchg pop fdivrs mov mov ss dec mov dec leave test rcl inc inc divb push cmp mov cwtl (bad) (bad) dec and push pop stos dec cmp push adc mov and fldl repnz mov sbb mov divl test push das test aam inc loopne dec and push push leave add outsl cmp xor xchg jne xchg add mov sbb pop jg cs mov pop or adc jmp ja test xchg mov mov movsl mov or xor inc dec bnd and std mov int ds (bad) xchg mov daa idivb xor jae push notb loop lret sub mov jmp dec lds into dec ljmp or pushf inc mov pop sbb add mov add adcl outsb dec aad movsl mov push loop popl push pusha cld or and jne pop stc rorb sub push jb lcall ret (bad) push push ret test clc clc jecxz mov mov lock jg xor push cwtl push pop lret sbb mov add rcrl gs inc or xchg dec sahf lock or dec aas (bad) shrl mov mov (bad) jae adcl loop dec inc push stos test xor lea or out cmp in ret add ret in jge loop xor pop dec in xchg lret ss inc mov (bad) int3 mov sbb lret pop jae adc dec mov out dec ljmp ljmp fadds mov mov mov in add mov test inc movsb (bad) mov adc sub in fwait and icebp cmpsl pop ja push mov (bad) lods fs add or mov insb mov cli xor pushl (bad) testb out add xchg pushf mov mov insl pop push lds scas sub imulb mov xchg fnstsw loope sub mov lock fisttpll jnp sbb repz and mov mov repz das out fwait cs icebp (bad) sahf or mov jecxz mov sub inc or and or or mov jmp pop cmp add pop fdiv sti sub add hlt and jno cmpl into sub stos lods push lret iret pushfw dec xchg flds xchg cmc xor loop push jmp repnz adc out cmp lret ljmp cwtl imul or mov lahf daa int3 dec xchg rcrl mov in jae or das enter mulb jle imul and add mov add clc popw mov xchg ret mov add iret sti lret jecxz jp xor js pop idivl or xor stos sub mov xchg mov fnstcw sbb test les cmpsl add bound xchg rclb daa mov adc adcl lds (bad) xchg hlt call sub pop je jno mov (bad) out xor and cmp lahf lcall out (bad) xor shl sti mov and mov pop adc loope mov imul stos jb adc lret or and mov das xor or testl add stc stos mov pop (bad) xor ret movsb mov fistpll sti hlt add or inc call xchg ffree pop push ret inc out rorl fist jg rorl popf fisubrl sbb das cmc xchg cmp aad mov xor dec out mov gs aas sarb popf incb cmc in daa aam jp xlat jne jle jl sub or sbb js cmp (bad) sub pop add xchg in sub add xchg out clc out xchg jge xchg ret sbb push ds fs cmpsb leave sub sub sub mov mov mov mov and dec add (bad) (bad) daa shld (bad) mov and scas mov daa cmp flds ror jb daa testb mov push out cmp into xchg ljmp push sub mov lahf roll out dec adc mov jle dec lret xor cld jae mov or ds orb out and in das sti cmp sarl and mov mov xor mov rorb mov and add popf je fs and sub cs mov push out roll push dec or fmuls cltd sbb xchg dec dec lret add dec ret jmp cmp sub xchg into dec pop icebp dec sbb incb cmp stc (bad) lret je lods push push lods repnz pop in mov pop push adc imul pop mov cltd adc cmp add lahf adc es ljmp imulb dec or adc adc int3 ret (bad) into inc subb xor xchg hlt int3 jle pop lret std movb push hlt mov mov movsb sub and popf push pop bound rol lods sbb (bad) push xchg shlb sub imul rcl rorl gs cli mov leave jecxz jae inc out cli std mov add test dec jmp push cmpsb or rcrl nop xor outsb inc popf aam ficompl inc adc jge adc mov js movsb call inc (bad) mov xchg int movsl sub lcall sub sub repz lahf xor mov mov xchg mov mov sub mov clc mov and inc or xchg inc inc sub repnz insb test test ljmp pop and daa fmull push pop adc mov inc sub cmp xlat push and xchg xor sti icebp lret sti dec or loop cmp push imul repnz gs stc push lret je js sub insb leave mov sub mov adc cmp xor mov xchg xchg lock aad ficomp in popf and pop mov push mov push and movsb outsl jmp test cmp sarl ret dec popf je stos enter add push nop cmp outsl call and mov pop mov dec xchg dec lret and fimull xchg fsubp push (bad) daa mov subl sub ss rclb pushf mov sbb sti lcall dec cmpsb popf push jge je das gs adc ret loop,pn rorl lret sub negl fcmovb aas mov inc lea dec in fstpt das data16 push or push xor pop mov mov aad shl push cli negb cmc mov push mov notb dec mov ret sahf push das xchg push dec into int3 enter jl stos sub and lods loope int3 imulb pusha cmp dec mov cmc shrl and fsincos imul negb js cltd and lods popa mov mov cs repnz out sbb pop xchg rolb imul leave sub shrb or and mov lds dec popf scas ret hlt sbb push daa test and scas mov dec and sub mov jl push sub cmp mov dec test pop fild (bad) (bad) or notl sbb adc push sbb sarl cld pop (bad) leave push push jns xchg test dec mov pop mov add stc std adc out inc xlat push cmovnp jl cmp dec jmp jbe (bad) loopne iret and xor loope dec jae pop icebp lea mov imul lds adc adc sub pop hlt mov repnz jne inc fimull push out cmp mov inc stos test push and sub cmc or gs adc jnp add outsb push lret ljmp subl cmp nop sub or cmp test out scas int3 xchg (bad) lock frstor adc sub pop lds fmuls andl push rcr aaa add stos (bad) in adc cmp mov xor test sbb fstpt push and cmc mov imul pushf mov movsl aad fwait (bad) xor sbb shr daa cmpsb and aas xchg pop cmp bound sub jnp inc out in ja mov shr loop rol or dec stc mov mov and xchg imul mov cmp xchg outsl xor std lds and and and add pop enter cld bnd scas push and xchg out out mov inc lods adc cmpsb sub out cli xor adc nop and jge iret xor mov dec add adc fsubs mov or popa sub sub push arpl push mov xor test pop sub enter fcmovne pop pop les mov jb and js xor sbb leave dec pusha cmpsl add xor int3 lods js inc std mov cmc adc clc mov fcomps imul sub (bad) jae lods leave enter adc addl xor mov out cld out fisubl jl insl std xor data16 mov pop fwait pop and sbb and pop dec mov push xor xchg int nop bound xor xor cmp pop testl iret dec lods or lret dec xor repz xchg adc bound sub add push (bad) mov loopne and int3 push jmp sub nop pushf jmp test sub xchg lods inc mov xor mov mov test sbb (bad) lock adc cmp ds cmc dec out adc (bad) xchg pushf pusha les cmp test pushf add test lods movsb push int3 lret pop fdivl hlt sub inc lret pushf mov pop loope ret jmp insb adc mov add std and int3 das pop (bad) xor jne insl pop cld ss popa out clc cmp lods mov mov outsb or cld fidivl sub sub not sbb pop mov push stos popf dec (bad) pop ret or sti push mov repz jno or jge (bad) dec lret loope dec (bad) shlb movsb pop adc mov xchg and push lcall or lahf pop inc adc xor push out pop clc les cmpsl dec or (bad) mulb out add adc (bad) jbe imul out mull pusha inc add decl scas lret mov cmp jp sarl repz sarb adc in xlat leave out cmc cmp (bad) pushf inc push (bad) outsb mov (bad) jae mov pusha fiadd jne or test lret dec dec sbb cs repnz ljmp and add xchg jb dec daa jge (bad) xchg xchg cmpsl icebp fs jl xor insb sbb lret fwait (bad) loopne cltd cmp or mov add fdivrs mov sbb push lds cmpsl dec cwtl scas pop adc cs cmp cmp push push xor push push out adc iret mov div xor aad test sarl clc in and jmp mov adc and xor and inc fsubr (bad) outsb mov es mov and ret push (bad) mov sbb mov dec movsl addb jne js call jbe leave push mov fidivr es clc gs icebp pop lret movsl pop cltd les ret cs int3 loop mov adc xchg out daa sub je push xchg and sbb sbb enter sub and pop aaa cmpsb into pop mov repnz pushf pop leave (bad) and sbb xor sub fbld fisttpl jp cmp cmp mov lea out cmpsl (bad) adc iret in inc push inc mov push daa dec mov das fist loop mov bound adc xchg inc sbb and sub popa and fbld or add pop xor out in pushf cmpsb loopne stc dec movsb (bad) es imul mov outsb or iret jl push push fcompl imul cmp inc jnp das das ljmp jp fwait pop dec jmp adc daa mov jmp xor repz ja pop mov jle jp int3 lcall out jns mov cltd dec clc pop insl adc lret (bad) push sub cmpsb jb movb test fwait cmpsl sub rolb xchg sub xor into in pop (bad) xlat scas sub add cmpsb sahf pop clc int cmp pop xor and std enter mov cmp stc not out in out cmpsl inc pop mov in call add mov pushf push mov mov dec incl dec into cmc in mov mov inc sub in jno xchg xor lret push mov adc mov mov insl push (bad) adc push stos je popf js fs sub ret jo mov sub mov idiv xchg (bad) push ret ret dec pushl pop xlat outsb sub push or ljmp add jb lahf inc add mov out repz outsb inc add fidiv pop xchg sub repnz mov inc jl fdiv push sub popf jnp push (bad) or (bad) mov (bad) or bound push fiadd icebp mov lock lret lds jae jnp cs outsb lret jmp mov mov fdivrl in dec push das sub or push fisub (bad) ljmp sti popf xchg outsl xor jbe int sub xor add les lods mov dec pop (bad) xor xor sub cmp imul jg fbstp xor movsb push popf mov repz scas push mov jmp xchg mov jno movsl aad xchg and (bad) mov insl add sbb inc imul and dec and icebp ds movsb addl mov cmp push cmp push cmp imul pop mov mov stc scas mov iret pop lds pusha lods jle sub push jle push sarb pop sbb sub test xchg adc dec std pop xchg scas mov and xchg xchg ret (bad) scas push sub mov inc xchg mov cmpsb leave cmpsl out fneni(8087 or fucomp pop enter adc inc mov roll jmp and xchg sub or or idivl dec icebp mov mov and mov cmp cltd bound add loopne cmp es adc jnp xor mov lret inc dec pop mov (bad) das (bad) adc and push lahf fidiv bound in xor nop scas shrl jmp pop mov sub mov inc (bad) jle js adc add fidiv mov rcll leave out (bad) xchg pop stos (bad) pop (bad) mov xor outsb (bad) jp adc es xor mov xchg mov and cmpsl sbb sbb mov jmp jl xor rolb and add sub jno ret test xor jmp test jae mov bnd adc push jne das add cs loope daa ss sub clc sbb int3 xchg (bad) mov inc (bad) mov dec scas test cmc test into fsubs imul repz fist ds std daa icebp sbb lret xor xlat lret add pop and ljmp jo in jbe and loop sub or stos sub or rorw push xor scas loop xchg mov or add fdivr ret and xchg ret xchg adc inc sti adc sti push pop push stos inc and aad hlt lock stos repz and inc or fadds xchg push imul sbb test pop fstl cs pop imul iret push mov cmp lret add fcoms lock and sarb add or or sbb xor test adc cltd bnd data16 sub add lods hlt pusha cmp ret cltd cmp ljmp lds aas lds call mov add test push xchg ljmp lcall adc mov dec mov push and mov sbb (bad) and sub movsl push jne inc es push sub out movsl and add or out inc and ljmp stos adc dec or push dec pop out (bad) insb (bad) lret data16 (bad) dec pop inc cmp fcomps lahf mov mov jl add pop jns into jmp das dec jmp mov pusha cmp mov push dec mov dec inc leavew dec sbb mov cmp ret and shlb xor mov (bad) aad push jae or pop pop stos dec sbb xor movsb pop repnz add aas iret or push movsl mov lock push adc cli push popf int popa xchg inc fiadd xor cmp loope cmpsb mov rcr sbb cmpsb ja push pop ret stc push sub add mov dec or ljmp sub sbb or les sahf dec xchg in andl insl push sub shlb int in outsb inc outsb dec adc mov xor cmpsl mov dec and (bad) or and stos mov jmp xor or mov lret lods pop mov and sub add mov aad pop fdivrp bound push push scas jne mov (bad) fldcw or (bad) push push jp add repnz inc add and and push out mov xchg xor mov dec (bad) xor stc push icebp ljmp sbb (bad) push and add dec dec add xchg inc dec pop xchg mov (bad) sub in jbe mov cmp push push fstpl cmp js xchg stc push dec rorb mov popl pop mov sub pop pop lods ljmp pop ffreep dec fnsave sub pop add lods and xchg sub xchg xlat (bad) lret jmp aas cld stc movsb lds mov enter inc loopne insb lea sub pop mov xor xchg adc loop xchg xchg inc sub sub xor and shll jp icebp data16 leave xchg ret pop and xor xor sarl out ret mov mov add movsl adc push shrb and jb jno (bad) add sub mov xor ljmp (bad) in sub out jae adc lcall or jno (bad) popf xor mov aas rolb (bad) jno mov ds sub mov hlt push cld aas iret push cwtl adc mov pop or gs sbb or lret cmp insb into xchg jns mov scas mov out and pop jmp or add scas (bad) cmp insl lahf lock popf dec insb cmpsl je jmp lds das xor push fnstenv cmc mov pop out pop lahf push js iret mov adc rorl xchg adc imul xor out or xchg ja ss (bad) sub fist and pop mov lret and sub das or push pushf adc mov pop lds lods (bad) sub and add jg jbe,pn faddl out pop xchg dec push dec jecxz in out dec sbb adc adc (bad) xchg mov fnstcw xchg push daa pop stc stos bound mov lret ljmp (bad) sbb lods data16 jl cmp and cmp shlw (bad) dec icebp jp xorl sub cli out mov maxps or jbe leave jg rcr dec pop pop aad push push pop stos iret dec dec test lret and fucomip inc lret add add loop adc pop stos ljmp jmp aam xor fdivl xlat ret in fildll (bad) in sahf repnz pop lods iret add daa push mov mov inc push xlat fbstp add test (bad) jo into xchg repz (bad) jb push push pop cmpsl cmp fdivrs or scas fs cld popf dec std icebp add xor mov std inc fldl push add pushf sahf out or jge mov adc fistp xchg xor lods repnz mov mov sub arpl sbb iret xlat mov inc sub add sbb mov and lcall dec imul mov lds iret jne sbb out push sub xchg mov pop aas bound idiv push outsb jmp dec outsb (bad) dec into mov or jne,pn out jecxz sub dec js sbb mov rorb out mov dec cmc push mov rolb psubsb mov add ds push fs in aas loop fstpl sub popf pop xchg and hlt popf icebp test jge imul mov xchg inc movsb aas (bad) orb xor imull pop mov jge sbb dec int3 js (bad) loop (bad) pop cmp push in push div scas sub insb or div in cmc pop (bad) ljmp push ret xchg push int3 push pop sub mov test dec cld sub add adc orb hlt pop push and movsb mov divb push mov xchg xchg inc ds add fstp fidivl jecxz and xchg ljmp clc in shl pop out sub test je push jb mov cwtl loope mov mov fxtract jmp int ljmp mov xor and dec mov clc xor sub pop div movb iret int3 cmp and push xchg mov into daa pop add jl jecxz pop dec mov cmp or mov xor and push sbb (bad) outsl cltd inc outsb repz and add xchg and dec scas in and mov decb les ljmp lea icebp mov (bad) shlb jmp in fcmovnbe stos lret insl cmp out cmp sbb jb mov or (bad) sub ret jne fcomp outsb push insb add mov and gs loope popl add test insl adc sub in outsb pushf ret jbe adc call pusha rorb xor daa call pop adc (bad) ljmp cmc add sub add jne add rorl loop (bad) jmp and or or adcl xor mov loop xchg adc or xchg (bad) jnp xchg adc dec xchg push xor insb sarl add mov ret std mov pop imul inc and mov std imul das or mov sbb lcall xor insb jecxz pop sahf jmp mov or push add and adc scas leave mov (bad) daa xor repnz cmp cld xor sub fcmovb mov push push push mov sub out pop pop mov mov jne sbb mov sbb mov gs cli mov fmull add out outsb call xor xor and stc iret sub inc mov (bad) int3 dec add inc mov push sti cmc push sub and test stos xor push lahf push loop aam pop or jg scas xor mov arpl or push icebp int test mov mov sub mov pop es ret cmp jae push mov aas call into cmp push les lret stos (bad) xor mov adc jae repz sbb cmp dec adc shr fs in vmovaps mov popf testb and dec pop mov out dec sub loope add sub adc mov jle aad addr16 adc scas adc outsb loopne out xchg mov dec or sti cmp out fmull inc cmp fisub nop pop in xchg sub in mov sarl xor fiadd pop jne jb mov add lcall jp sbb arpl scas mov fstl xor xor jne jb pop into imul lea jns ret add mov pop repz (bad) fnstcw mov out shl xchg (bad) out and mov loop xchg push jle dec jl adc jns ja jae (bad) pop sub xchg xor inc mov cmc xor (bad) outsb cmp insl inc aas mov xor push insb jg jecxz out (bad) out and and lods or ljmp scas cltd mov arpl cmp xor repz sbb or (bad) cwtl subb xchg mov ret jno imul sub movsl cmc sub (bad) out dec call jmp mov pushf cmpsl cmp sub test mov mov in les mov pop adc mov cmp mov cs pop sbb mov stc stc cmp ficom (bad) jecxz dec or fmulp sub das xor les int xchg mov std dec xchg inc das xor sub adc dec repnz (bad) mov mov push stc in mov ret and lcall stc daa jmp mov adc (bad) cmpsl adc call xchg fidiv adc pop cmpl or ss push inc mov xor hlt outsb adc les les (bad) out push in decl int cmp xor mov sbb mov sub adc or jp rolb mov sahf mov push or add ja mov adc jecxz (bad) cmp cmc (bad) jbe shrl xchg push mov fwait push in sub mov push call popf dec inc fwait sti sbb outsb mov cmc push xchg pushl int3 test (bad) or sub xor cli cwtl je (bad) mov add int3 lods mov test loop rcl fisttp mov pushf adc sub add sarl pop mov dec mov (bad) movsb in (bad) adc fsubs cmpsb movsl and add add out lods daa lret idiv cmp mov dec or add imull out xor fldcw dec fidiv jns adc (bad) mov clc add icebp mov or (bad) inc divb fisubrl gs or sbb rcrb xor rcr cwtl xor daa jo or adc sub dec scas sub xor fxch imul mov int arpl inc push adc subb mov mov cld jo mov das int3 sub lods jns gs (bad) lahf jno dec pop cwtl ret jl bound out xor or mov loopne fnstsw (bad) mov cmpl ja dec jl leave mov lret mov (bad) xchg repnz pusha push out std jne or cmp cmp add mov cs cmp adc ret (bad) pop movsb shlb mov in pop faddl xchg divl mov dec (bad) or jne inc sub xchg xor pop and add sti into cmp pop fsubrp and cmc xor dec sbb sbb jne inc sub fsubrl pop cmp cmp mov mov test sar xlat push add popa mov (bad) pop sub es (bad) mov adc or ja pusha or (bad) jl ja outsb push dec rcrb mov add push lret push jne (bad) xor fldt fs (bad) and sub lods xchg in rorb xlat stc mov cmc js cmp imul dec jg or fistpl fsts call rol into mov sub or (bad) and push cmp mov and xor jge push inc shlb gs pop sub sub add xchg jg xor fmuls imul and inc sub pusha push ljmp cld movsl cwtl addb popf jp mov mov (bad) lret mov imulb xor xchg cmc lcall dec mov mov in mov jmp mov pop xchg jle cld push mov inc or mov sarb daa leave decb and or mov fnstcw inc xor pop pop inc leave stc push out sub std xchg repnz adc add dec negl mov (bad) popf push cld stos cld inc cmpsl mov jne mov sbb sbb idiv and add add or jg dec jecxz ja dec dec (bad) stos push testl js xchg add cmp test cs roll mov test movsl xchg daa iret mov dec jmp sahf test loope xor inc aaa pop xchg or or rclb mov (bad) in (bad) xchg xchg outsl test add and pop jle out imul xchg sbbb add pop outsl jmp push add stc jno les and cmp out push insb push std adc mov sbb cmp icebp jp inc fist leave mov mov jns inc add push (bad) adc mov sub cmc pop jnp fistpll cmp cmp dec push xchg jno shll ret dec xor fsubr call leave jl imul sbb (bad) jnp and inc nop movsl cld mov ret and int3 sub xchg pop in mov mov (bad) (bad) pop into xor stos orl daa lds negl mov dec sub imul insb ss ds pop lret sub testb and push sbb mov fstpl out jge cmp pop test stc mov stc pop movsb adc scas mov pop lods push leave mov sub loop push pop test addl rorl mov insb dec and (bad) jmp cli ljmp or mov fprem sub mov xchg sbb (bad) mov sub dec stc out (bad) pop movsl dec adc popf shll pushf xor or imul jmp and mov pop push and mov leave mov test stos fldenv idivb test cmp loop dec push in cli hlt sti into adc mov jl in scas test aaa test inc out mov fisttpl pop cltd ljmp sub xor stc stc push fbstp repnz or jecxz add (bad) popf (bad) daa enter repnz mov shr lret add pop mov adc mov push loop cld lds jbe mov inc jmp decl jmp outsl sub jg jg fs sub movzbl (bad) mov jno ret movsl lcall cli sub jno cmp lods stos lret mov sub call out inc (bad) xor jg pop add adc insb gs push cmpsl popf sbb sub mov std inc mov addr16 inc (bad) mov dec cmpsb sbb and push or pop dec addr16 jnp (bad) out push mov out pop add push ds orb hlt imul gs and mov (bad) jle jo add imul aam push push ss sbb mov outsl test sub andb add mov in sub pop mov js xchg cmpsb lahf or (bad) xor mov popf je outsb mov leave or cmp pop inc out and xchg and shll fldenv sub mov jmp mov hlt push ljmp mov lret xor dec jns out pop ja cmc divb sti mov shrl and nop dec pop mov pop fmul leave test sub jae outsl fsubl sbb or int mov shrb cmp jo sub mov dec and shll xor (bad) adc cmpsl adc or jae cmpsb fcom cmpsl inc xchg or fistl outsl pop fwait enter fdivrs and push stc adc add shrl mov jp cpuid add push imull push add enter add or add jo jg adc stos mov xchg (bad) shr aad arpl call cli pusha notw add movsl aaa cs cs push ds leave out sbb fnstcw mov add and mov inc stos jno push mov mov rcl and std not mov or clc mov insb leave ljmp fwait and dec mov adc mov mull push mov popf test adc arpl shrl dec jne rcrb mov stos test imul lret shl adc xchg add and jb lret jb hlt pop and sub and mov jb mov sub jae xchg add xor fcoms mov cs mov idivl and mov out mov or mov fs mov push test inc dec mov or cld mov cmpsl add pop fmull shll pop loop xor rclb loop repz sbb xor icebp ret mov jmp fldcw sub add cwtl arpl jge xor rcrl (bad) dec repnz sub int mov xchg lret mov sub out pop pop repz lret push adc (bad) enter cmp int3 (bad) mov cmp sub mov dec push mov push push xor push push int push lea or int3 xchg lret lock mov mov push pop and and inc dec stos dec insl cmpsl jne in add sbb sub (bad) imul (bad) pop and inc mov mov jle iret aad mov es mov push cmp leave jmp add movsl sub push jno sub shrl iret imulb dec movsb sub divl jp icebp jmp (bad) push test or cmpsb arpl mov in dec sarl cli jae mov scas sub xchg ja jmp pop lods and add movb adc mov sahf mov scas pop loopne ljmp enter ret sub mov dec push add clc xor (bad) fwait push outsb pop pop jecxz cmpsl xlat mov sub fsubr jecxz jbe push pop mov lret mov in or mov mov xor sub lock mov sub mov or lcall js mov movb fs mov mov fcomp decb ljmp xlat cmp add scas xor sub es adc jo xchg xchg loop data16 dec out xor jnp and mov aad cmc mov jg stos and mov (bad) testl shr repnz rcrb std (bad) in mov ljmp test stos repz xchg cld inc xlat icebp jle adc dec ret inc (bad) pop stc call mov je (bad) iret and or add int je add pop popl cmp out subl das lcall jp rcrl scas loopne or push pop mov xchg fcos xor pop push pop push (bad) xor pop adc pop push pushl (bad) xor xor jge mov popa xor sub mov mov cltd pop imul fist lock test (bad) push xor push pop fistpll int push fadd adc pop ds or testl mov mov jmp movsl or fistp add sti pop add dec pop xor or fisubr cmc icebp (bad) inc push inc mov out ljmp fs dec jne pop cmc add shll mov fwait cmp pop or cmp daa pop pop sbb adc xchg pop mov dec jecxz pusha rcr ss ds cwtl test xchg je pusha adc aad pop adc dec sti or xor mov or push adc mov push dec jb pop sahf sbb outsl inc rclb stc or outsb test jp push push push mov out cmc ror pop ljmp lock or mov out sbb dec add and shr dec push outsl add neg add inc cmp pop movsb jmp add add and sbb (bad) jle shrb and xor insb xor or rolb push mov inc mov add jne adc mov add add push sub hlt leave or sbbb (bad) pop jge mov pop cmpsl inc jo or mov and inc and loopne sbb adc mov sub mov (bad) mov xor ret iret lret lret jle push fild lahf loope idivl mov mulb sti xor out pop or (bad) push pop std int3 mov negl insb into aad xchg nop leave jp dec leave mov and (bad) or leave jne adc mov xor lds xlat das xor aam into xlat gs lods movsl leave stc fldl2e scas xchg xor testl adc adc ret add out add mov pop mov jg add or inc pop adc push int push sbb add mov sub xor ds push int test cmp jne mov iret sti sub (bad) dec and dec xchg mov ficoml ds adc popf fistp scas mov jmp imul push mov mov dec inc adc test pop mov mov and sti jp pop inc andl (bad) ljmp mov aam pop pop popa dec (bad) ss ja xor mov out and xchg das adc inc xor jge mov xor xor leave xor cmp xor sub jns cmpsl xchg (bad) sub cwtl mov mov jne leave lods jne cwtl xor clc mov add dec in push dec add mov xlat (bad) in lods push (bad) (bad) cmp dec mov xchg aam in cs and dec pushf std and jmp adcl data16 and cli leave aaa lret insb xchg mov sbb dec out in gs xchg rorb push lods xchg or das (bad) (bad) ljmp pushf decl mov or xor sbb adc inc movsb xor and xor adc popa es pop push bound insb imul mov or or idiv dec daa adc push pop (bad) leave aad xchg xchg cmc add (bad) cli mov add fistl dec lret jnp stos out cmc in cmpsl or pop dec adc jmp pop lahf adc sub cs adc (bad) or dec sub mov add in xchg dec cs pop or jno dec js xchg add stc mov sub and out adc (bad) xchg cli (bad) pop add mov inc gs mov xchg das adc fisubl hlt aaa push sbb mov xor xor call mov push popa push push scas pop mov in or sub add scas loop dec mov nop xor xlat xchg add ljmp mov iret cmp sti adc pop push sti add out add or (bad) out sub pop ret jecxz (bad) into cmpb pop or hlt mov sbb mov inc sbb pushf cmpsl (bad) adc std das mov jne lock mov mov jbe pop (bad) xor push insl pop and push jbe xor ljmp xor aam mov int sub sub sub pushl dec lds add out (bad) add into shl pop ds pop popf jbe lret in aas daa xlat mulb cmp clc fcmovnbe scas dec out pop les dec fnsave lock pop jnp push mov push cld aad popf mov movsl dec mov adc es stc jae sub and test rolb ret xchg cmp movsb mov and lahf push test mov sbbb jne and or sti jae push adc xchg push and cmp xchg mov (bad) jge and (bad) inc ret jo pop push sub mov sbb (bad) mov mov adc and inc pop lret or movb cltd adc xchg add scas pop pushf or cmp (bad) jecxz rcl mov add or call popf fimull rolb xlat mov cmp jb (bad) stos (bad) sahf cld ficom add sub out lret bound xchg add xlat xor test daa jo enter out (bad) mov jbe dec push rorl dec incl pop jmp mov push xor push in (bad) (bad) sub (bad) jbe dec scas xchg dec adc (bad) mov jo cltd or ret dec inc outsl call leave jecxz gs lcall sub in not or into and sub sbb or shrl xor inc lahf sub cmp mov xchg in pop loop jo sahf ljmp inc adc mov outsb xor mov mov pop (bad) and call test popa xchg or mov pop add or sub add das gs adc leave jmp xchg pop push jns outsb aam or cmpsl pop js mov inc or int3 sbb dec fdivrp and ret add xor aam and mov or repz mov pop out xchg icebp mov mov dec call (bad) mov (bad) sub push outsl out test jmp inc dec out xor xor dec pop repz (bad) pop fsubrl and (bad) mov pop leave push push (bad) ret xor daa jno jbe fs dec xor (bad) sub mov dec mov and arpl dec xor shr mov pop fldl2e imul mov mov ljmp pop out mulb pop mov cwtl out data16 jo cmp mov and lahf push adc dec inc out xor add mov cmp mov adc out dec mov sbb hlt dec xchg insl pop push jg sbb and ja or push push arpl aas loop (bad) adc out (bad) fcompl fs popa mov or mov ds stos movsl pop ss notb mov mov inc rol outsb out sti sub jno (bad) cmp ljmp das ljmp ficomp into pop testl jbe mov popf test mov fwait mov mov xchg (bad) push mov iret flds mov (bad) testb and dec in ret adc sbb or fldl or lret dec dec inc sbb push jns xchg add mov jne aas pop add (bad) mov (bad) repz daa sub lcall jo std or push movsl jne into cmp push or lds mov (bad) stos stc pop add (bad) mov pop dec pop jno dec pop add push xor xlat mov ljmp aam andl xchg pop mov scas fldcw int3 lds loop mov dec imul sbb icebp sarb lret mov sub lret je clc add dec loop mov add or xor adc jle xlat push push dec repz das ljmp and das in add adc rorl ljmp or cld aas les adcb pop test aas mov jp lahf push in imul lea in les add sbbb jge dec add and (bad) (bad) push mov gs mov add pop lret xchg lcall lds push mov sub sti fstl repnz dec or mov mov pop and (bad) jecxz sub mov imul and xor int3 sbb lret or mov in or divl sub js in pop loop push jno dec (bad) lret into test mov mov sub stc test sbb fistp pop push testb mov in or (bad) dec jle fpatan test mov scas inc lock jbe xlat addb xor pop push mov fcomps lret iret pop stos and add lahf add nop cltd dec arpl sub pusha push (bad) xor xor and int jmp mov dec mov or mov xor mov xchg xor pop sub cli negl sub add xchg cli push in or lock push (bad) repz xor xor pmullw (bad) (bad) xor mov mov dec xor xlat lds add out clc and mov pop icebp and push xchg clc and leave ficomp xor (bad) xchg inc or cmp popf pop mov or inc (bad) int3 dec sbb iret pop mov imul jmp mov test add sbb clc addr16 push shr dec iret rcl ljmp xlat lock jns dec sub add push mov shrl shl add ja mov nop push or shl and jge add add not aad pop pop jg,pt pushf das pop std adc dec push cli gs pop add push push fndisi(8087 loopne,pn mov mov cmpl jnp insb adc dec or pop pushf push dec add lcall cld inc roll add lret xor pop (bad) jl test add ljmp popf mov fdivl xor pop lds jmp fistl clc inc addl adc mov xor ret cmp pusha mov mov loop fidiv sub and aas xor push jle or test inc lds mov push xchg inc add pop sub mov add cmpsb or pop (bad) mov inc pop jmp inc add dec (bad) fadds fdivs sbb imull add or mov pop bound xor loopne sub push (bad) pop pop xchg push or scas pop mov pop add xor jg push call pop mov test int (bad) add push pop or pop mov daa insb jge dec out mov mov pop (bad) in in xchg test (bad) pop int mov sbb cwtl push cltd sub pop sub jmp jbe icebp or test mov inc push or leave ss sub (bad) jo pop jmp push aas adc movsl cmpsb pusha rcrb or jb cmpsl sub std inc sbb push cwtl and cmp leave enter dec jge cmp xor and inc sub loope add xlat and and push insb push pop imulb cmp into mov (bad) fbstp xor mov adc test roll repnz rcrb icebp sbb mov sti aad in hlt ror fiadd mov lret inc enter push fdivrs repnz lcall jnp nop xlat (bad) in icebp icebp mov call rorb mov adc and add adc scas sub jmp adc rolb cmp out adc sub adc xchg inc ret mov adc fs enter (bad) push pop adc cli popf inc jle cmpsb adc into xchg ja pop ret sbb and sub ss pusha fnsave cmp cmp mov dec sub fidivr imul shll mov xor testl jl cmp and ljmp sub and (bad) out out xchg xchg jo dec mov fucom mov out mov stc ret cmp test xchg pop push jnp sub lods jecxz icebp test lahf push sti xor test or add (bad) and lods pop cmp mov xchg out mov adc pop lcall lea lds shr loopne mov pop test xchg xor ret push or lret icebp or mov ja mov jp pop sub push enter jle outsl (bad) xor push je sub lahf push cmp sti loope jnp push xchg pop xlat jmp pop inc push test jae adc mov sbb into xchg mov mov jne dec pop (bad) sub mov or mov aam adc imul loop into xlat dec mov dec ds inc clc cld lret fldcw lcall mov test mov ret pop lret jge out adc clc imul pop adc dec lret js das xor flds clc push dec jmp lret iret cmc out das pop sbb push dec adc clc out pop cmp adc mov xchg lods push dec mov das jecxz add loop pushf and adc and push xchg jl (bad) repz leave mov push sub pusha and cs adc insl ret and mov and xor mov jecxz les push sti lock add call or mov aad jno pop mov ret cs mull pop dec mov pusha repnz sub sub sti in sub imul push lds imul lahf push sbbb push popf in sub adc mov inc cli inc and jecxz dec sbb lret shrl sbb pop out ret lds jge add adc out jl sub gs mov fucomip inc pop and or (bad) mov and xlat push adcl and mov add mov lcall nop and xchg mov loope sub sub das jmp das mov mov testl jae ror je mov test ljmp push pusha or and xchg insb push push jecxz and add pop pusha outsb jbe sarb (bad) stos rclb sbb lret ffreep sarb das imull pop add xchg mov lods dec sti jo aaa mov dec call aas cld movsb dec and push sbb pushf stos loop fistpll int or mov sahf mov movzwl cmp push jne test push mov outsb (bad) leave add imul pusha jl push es out ficom leave clc or lods out in push pop pop ret rorb mov sub je scas bound (bad) mov xchg mov cmpsb push add mov jne push xchg sub bound sub xchg in out cld jmp lret mov jg inc push (bad) sbb pop mov test clc hlt in xor insb sub fldcw dec std in insl popf lcall out and ss push into add test inc sub cmp lea adc add jne gs jae sub sti push adc enter push mov adc add adc fcoms cli leave push sub pop pop (bad) out (bad) push jns lods mov xor add imul (bad) sub cmp pusha xor icebp add jbe push add add adc mov mull jo loope sbbb xor mov add loop add leave bound mov xlat repz jae and mov stos repnz mov in daa mov fdivl inc jo pop imul mov xlat stc mov js jb mov ret add sub fistpll pop jmp mov inc xchg je bound idivl sub shll fist bnd popa movsl xchg pop popf mov loop mov push aam add or (bad) sub cli dec push xchg js mov add hlt mov pop in push (bad) notl dec (bad) js inc loop (bad) xor sub dec sbbb or pusha jp sub push xor xchg sub or or add jg inc je loop loope in ds push mov push vmovntdq and sbb fdivrl (bad) push or iret das sub jl dec std in mov xlat jnp push leave (bad) bound xchg jno cli and push stc pop mov enter xchg (bad) cmp (bad) and in add and mov inc dec xchg lret mov mov insb cmp insb imul loope add add mov loope push aam dec icebp jl lret add xchg pop adc pop xor neg es sub xor loop and adc pushf shrl cmp les mov clc mov (bad) mov lock in aaa or cmp (bad) pop out (bad) rclb dec xlat jnp adc dec mov decl call sahf xor ror jmp xor icebp add mov (bad) scas jae mov cli add into add adc jo jmp cmp sbb les mov lahf ffreep push (bad) sub stos pushl xchg sbb lcall (bad) mov lods je rclb lret add pop not stc add test jnp adc std roll roll add mov daa and mov fistpll in stos mov int xor fstps jle mov and jmp sbb inc (bad) loope jnp sbb mov add xchg fistp call movsl adc pop push test je jb sub mov clc pop lds ret pop mov dec mov add mov stc push hlt mov xchg lret stc loopne push or xor jle sbb sar sbb push clc jl addr16 popf or je and mov imull and lret xor ror xor xor aad clc das in movaps xor inc roll rorl sub das movsl jecxz (bad) sarl adc or lock dec and int3 imul imul inc sub dec pop out outsl (bad) call jae add subb sbb insl xchg and enter repz add pop mov jl scas mov ja or enter cwtl inc add sub js jecxz mov pushf ret sub mov xchg test mov add push xor add icebp push icebp pushf int xchg cltd or add xchg adcb je in mov lods pop (bad) cmp lret adc addr16 enter fidivr add daa ljmp mov popf fadds leave lret lods mov gs mulb pop sti pop std sti add jp imulb cld mov dec fidiv and popf push movsl and fsubr shrl rorl neg push jle and mov dec pushl roll push dec xchg mov xor mov mov (bad) into sub push cmp loop jne mov test (bad) mov test lds mov pop xchg dec push aam repnz (bad) fsub and xor negl pop xchg mov push sub sbbl sub ret imul int3 jns (bad) imull and in loopne icebp dec lret imul xchg and fneni(8087 xchg pop cli jecxz das rcr adc xchg xchg enter adc jle lods mov push xchg sbb lret repz inc test shrb stos cmp jnp testl scas bound and call shrl sbb dec cmpsl ja sarb sub pop sub and repnz xchg xor push rorl add mov sub xor xor movb mov fnstsw jns outsl cwtl sub sub xlat jno mov pop insb fisubrl add loope out or jo enter sub xchg mov lret jne sub cmpsl cmc push pop xchg addl outsb je nop bound lock jp and xchg iret push sub lahf xlat nop add adc shrb pop push imull sub xor pop and sub mov clc cmp sbb icebp xor dec inc mov add sub cltd loope push jg pusha nop sahf lret repz scas out ds dec stos (bad) stos lret jge ret inc sub push jecxz jg xchg or aaa dec cmp das mov xor lods imul (bad) sub bound nop sub xor inc mov adc xlat aas and mov sub push adc addb add inc pop xchg flds jb (bad) pop fsubrl incl sub cmp jnp jl jmp inc loope cmp repz aaa dec cmp (bad) (bad) pop lahf nop hlt or xchg sbb addb mov xor shl movsl xor imul stc push fsqrt xchg pop aad push jl pop out jmp cmp fisubr js jge xor pushf mov pop cmp jp (bad) lods je inc sub add mov dec jb iret arpl adc dec pop int cmp roll dec mov and roll sbb mov pop inc leave add test sub test fildll loop cmp (bad) cmpsb add or test sbb xor pop and int jle inc mov dec mov jg pushf lahf sbb jl (bad) or ja push adc rclb mov fildll leave push out jge pop imul (bad) repz out jmp cmc jp sbb cmp mov pop sbb cmp xor out sbb xlat sbb (bad) xor cld les das and add lock add out and lahf rorl mov mov pop popf xor xchg or cmpsl (bad) or lds pop adc mov pusha jg xor mov adc repz cmp inc leave lret ficomp xchg jo mov insl xchg clc (bad) lret sbb cs repnz sub repz push lods ret sub and pop lds scas lret push pop mov sahf cmp orl cmpsb pop sub (bad) notl push stc push int3 daa mov jle or pop cwtl fiadd loop aam iret pop jecxz adc ficomp push shlb dec or dec adc ss lret bound add sub push js adc (bad) xor mov ret stos pop mov pop add mov fdivl lret mov fisubl mov add xorl scas dec imulb loop cwtl sbb xor out cmpsb mov gs daa (bad) cmpsl or pushf (bad) jmp divb dec out insl pop xor cmpsl xchg and stos add ljmp gs sub pop fistpll sbb jmp mov fcomp dec add jbe push out scas cmp push iret or and (bad) sbb (bad) lods dec movsl test subb sbb inc sti xor mov aaa fldenv sub faddl sti test sub cmp leave out (bad) mov sbb cmp push leave out rcrl xor sub mov bound fistp pop aaa fs xor sti lret xor call sub push movsl scas mov lret xchg adc and enter iret mov cmp jle loopne int3 fild mov stc inc loope mov in pop test or lret fimul int3 not dec xor aad push push xor xchg mov mov aam in stos xor mov sub add stos sub fs mov (bad) mov and shrb and xchg xchg lds mov ret pop push je or cmc adc mov icebp (bad) mov frstor pop mov xchg push cli data16 xor jns iret sub outsb jbe ja pusha daa imull scas sub cmp das dec jg lock pop push (bad) xor inc or pop mov mov xor xchg clc int out sub sub ds fwait and cmpsl addr16 (bad) fdiv xor mov lret shl pop adc xor inc add pop cmc jge adc and sbb sub mov and push mov (bad) jno fmuls xchg pop fsubrl fildl pusha mov sbb jbe (bad) (bad) mov xor add sub pop int pop ret stc mov out fmull add mov fistpl in xchg bound popf dec test mov scas cltd das insl rcrl and int3 lret or bound (bad) das push pop imul cld xchg push xor push xchg fisttpl mov movsb call fsts or mov pop out mov imul stos jno sub lods (bad) in es ret jae daa xchg sbbl adc cmpsl xchg dec or out mov inc shrb mov adc pop jmp mov mov add int3 daa gs or fbstp pop push push xor stc pop pop lret mov pushf scas cmp xchg jb imul xor jmp popf inc sbb xchg (bad) out bound jae add add lods lahf and sarb jb cwtl xor nop dec dec mov dec test das xor cmpsb lcall add mov cmp and scas in js (bad) cmpsb dec cs es lds jmp cli cld xor jo inc or pop push fisttpll (bad) (bad) jb (bad) fcmovu xor xchg (bad) jmp mov cmc in adc clc or sub pop mov or test cmp aas in int pop and idivl (bad) out je pop push jl jno dec sub jno cmp les push cmp mov push into pop xchg decb stc in xor mov xor jne addr16 push fild mov sti cmp add mov sbb cmpsl ljmp lret mov adc shlb (bad) lret je push cld fidivl loop mov rorl inc mull jmp add push mov insl bound adc and movsb cmpsl pop jmp inc in ret inc jecxz test mov jmp jmp mov and ds ret repnz xchg sub into inc adc cmp or mov cmp mov mov sub (bad) idiv cltd jecxz jg fcom mov loope ret icebp pop popa jg mov movb cmp mov pusha push mov fldcw (bad) push xchg mov andb or mov dec xlat icebp xor aam aas pop ljmp cmp imul or aas movsl dec imul mov jmp flds iret xor push jno push (bad) mov add in mov pop leave jns aas lret loopne xor jmp testb shlb sar movsl call and lret add sbb test sub testl push pop repnz inc rolb jbe push push fwait and xor repz cmp mov dec sub insl mov inc sbb stos push xor mov fnstenv pop nop sub and push sahf mov or and frstor sub xchg (bad) icebp mov pop dec sub push lock pop pop pop jg pop repz sub push dec pop out push adc lret mov popf gs cmpsl adc or (bad) mov cmp test pop ja pusha sub je sbb cmc xchg repz jle mov (bad) mov or cltd shrb fs mov int push adc lcall rcll clc sbb xchg mov pop sar int3 push sbb pushf add and (bad) mov inc or xor mov adc sarb adc icebp inc pop sub push iret jmp push sub and dec pushf cld subl stc cmovge pop (bad) push imul fisttp loope push adc mov dec jle movsb xchg mov push das int jp daa js pop into leave dec lods outsb xchg stos sub incl xchg and sub call mov push push movsl and mov dec clc in jnp sbb dec dec lods mov sub xchg sub lcall mov or idivb cmp out clc add cli popa mov js sub mov out xchg inc dec mov push jmp mov test pop movsl mov out ds sub sti lods mov lds inc lods (bad) jecxz add cmp test and push sbb push pop out sub and or loope xor jmp jmp sub inc (bad) mov icebp in mov lods mov adc (bad) cmp sub idiv push pop (bad) call ffree cmp pop sub xchg xlat fs mov pop mov sub (bad) mov xchg popa cmp push jle cmp test lahf insb rorb cli int outsb mov test push scas jno or jle dec push push add insb mov jb shr loop mov dec push xchg xchg lret push daa iret sahf inc dec out mov les or mov (bad) leave mov or rcrl sub sub mov cmp mov add xchg mov rcll sbb out stc cmpsl imul mov jp mov ds sbb mov and scas sub repz add jmp dec ficom pop (bad) stos xchg popf sub out add sub lods into sarb xor lret adc bound gs and das cltd or repz add sub outsb ss enter mov stos call jno xor or jae lret inc (bad) daa jg push xchg xor mov mov mov mov adc dec ss xchg jb (bad) mov mov lods sbbb loop jle outsb (bad) mov daa or gs into fmuls xor mov int3 test clc jle repnz movsl int3 pusha xor or mull fs sub lods dec mov das mov cmc xor les mov cmp sbb out xchg and xorb imul cmp or movzwl out fidivr xor mov ljmp out and mov shr adc xchg ljmp jnp daa cltd sub clc and mov pop insl mov push and ljmp dec ret add mov (bad) pop test jno add jle pop in pop into notl dec (bad) dec (bad) jl lret stos lret mov in lods mov push lcall mov insb and popf (bad) sub inc (bad) or sub jge lahf jmp shr out ret mov add icebp sbb cmp jp pop xlat xor push ljmp xor sub cmp jp adc mov mov dec inc icebp dec mov sbb sbb fadd or add jle (bad) iret xchg jl out jl nop (bad) not pusha and push ljmp mov insb and scas xor icebp sub and and mov mov shll es xchg into dec neg xor outsb call les (bad) ret add fs movsl mov aas mov loop inc mov fimull incl sbb xor cmp cmp jo pushf popf aad cmp push loope pop mov out movl jle movsb xchg clc sbb daa xchg mov jmp jno mov icebp or inc pop icebp push std sbb or dec (bad) jb xlat push insb add (bad) xor add jb xchg cmp xor dec lret mov into loopne (bad) sub mov cmp mov push cmc test stos push sub sub pop xor mov mov not sahf ljmp pop je lds xor fwait push mov cmpsl jo sub call lret (bad) gs popl and in xor jmp jbe fsubrs cmp popf pop jmp stos je sti test mov mov push adc inc mov lret inc and xchg (bad) sub add xor mov pop or insl popf cs dec mov outsb gs lds cmp out inc add pop fistpll jg in mov aaa mov (bad) sti pop test fcomps mov in nop mov repz adc inc imull imul mov and jmp cli bound cld popa jmp add (bad) imul mov cmp mov out test cmpsl movsl andb pop dec lcall rdtsc imulb and hlt add add (bad) or add int test repnz xor inc add das mov movb dec out mov mov jp movsb inc rol mov dec xor xchg mov dec std fbld dec out xor aaa jg add and das scas inc and xchg dec sub pushf adc mov sub push (bad) mov bound ljmp inc and and daa ss insl outsb (bad) lret sub push repz mov add imul ds sub incl lods gs pop ret or and cwtl pop add mov adc bound dec add ljmp sub xchg push adc stc cli push add test loope cmp inc and pop pop pop pop popf ret pop add xor ret inc movsl pop sbb push (bad) imul fbstp pop xor jmp (bad) (bad) scas popaw outsb xor ljmp daa stos (bad) xor xchg mov mov shrl xor add lea (bad) cmp repz xlat push or ljmp inc (bad) je xor out mov xchg xor lret notl mov sahf lret ret inc sub fucomp or aad push cmpsl push pop ret cmc mov loope add sbb inc jo mov daa xchg notl mov fistl movsb push je call lods push (bad) lock push je xor out xor (bad) stc add imul and cld push sar pushf push je xor xchg jle push pop mov push loop test iret aad in add and sub or mov fs scas (bad) xlat ss fs jmp ret sub daa int3 (bad) dec adc and push dec xor pop fadds je ds mov mov mov jbe fmuls cmpsb pop hlt mov xchg mov or xlat (bad) cltd mov xor push out xchg push psrld mov rcpps or fwait cmpsl jno cwtl iret add xlat pop mov mov (bad) int3 ja popa sub ret fstps sub mov inc scas xchg rep dec mov pop out xor aas jnp push ret jecxz adc sub mov or and xchg inc xor sbb je adc sbb sub adc dec and xor cmp test es or mov daa loope ret jl sub or mov cmp insl ret fisub into sub scas sub cmp pusha or lret add xchg add inc dec (bad) cli mov dec cmp jp pop scas fs xor mov pop sub fnstsw jno or ds lret imul xor mov and mov dec in pushf cld ret out pop cmp mov fs out mov jne sub push rorl sub gs orl data16 mov mov pop dec in mov mov push daa mov jbe xor jns aas add out dec test xchg sti fcmovb adc jne,pt inc adc mov jle xor push cld sbb dec (bad) mov loop cld xor push jns (bad) imulb and (bad) xor lcall sbb add mov add (bad) xor data16 jmp add cmp (bad) faddp daa loop or into jp mov (bad) icebp pop sbb cli sub scas mov add fs dec (bad) test es dec (bad) pop repnz mov jnp lret repnz daa lds stos (bad) push pop mov dec mov adc mov in je mov negb lahf push shr and dec sub ret pop or loopne test xor sti mov or inc add stos gs jmp jle cmp imul daa pop dec lret cmc xor xchg sub jmp ds xlat mov mov rcr pop popf xchg jp ret insb push cwtl and pusha dec adc sub nop (bad) dec fldl sbb sub lds adc scas add roll shrl sbb iret xchg in addb mov and and addr16 jge and push sub and call mov insb (bad) fwait stc xor mov adc sbb mov mov add in pop pop adc mov in mov xchg ljmp pop (bad) into ds iret push jb stos sub jecxz add or clc jge jb jo call adc add stc xlat shrl push shrl jmp jnp and dec rcrb xchg mov xor adc dec stos out lret popf adc adc (bad) and mov mov adc adc gs fadds (bad) ss mov or movsb sbb mov inc inc dec jmp les cltd test and xor sbb dec popf or pop dec fs mov aaa sbb push lret mov (bad) (bad) mov mov push sub popf jmp ret sub fs (bad) cmpsl imul rorb lahf sbb test mov xor repnz cmp js inc xchg sbb cli xchg repz sahf ret sub jl mov loope sub pop sub xchg pop mov push push pop mov mov scas lds scas fsubrs bnd sub and lret mov decl adc stos int3 aam lahf fimul jb mov cmp jmp jge cwtl jp aaa mov add ret xchg (bad) xchg push cltd pop push fwait lds cmp mov das pop xchg xchg cli icebp push and and mov into adcb pop xchg jae das cmp stos sub cltd xor aaa sbb decl dec test inc insb and xor mov mov and lock mov jecxz leave jnp and dec ret cmpsb xor jmp std or jns xchg out stos lret lods outsl mov jae es push (bad) fildll mov (bad) mov popa movl xchg (bad) jmp ja pop insb pop mov push jmp movsl gs lret push pop sub mov and adc (bad) in or and mov dec jecxz pop fs lods xchg test pop mov adc rclb cld scas cwtl clc (bad) mov bnd out dec push adc xchg inc imul jge in out sub pop mov and or mov nop mov dec sub jne mov lods mov xor inc insl iret stc out mov call cmpsb test scas pop mov or add add cmp xchg sti adc jmp fcomps lcall sub imul mov (bad) (bad) hlt test in lahf divb push call in gs and sub out or dec or andb jne add adc pop xchg mov adc cmp sbb add out insb cmp stc mov gs loopne jmp mov sub push xor pop adc lods jo mov dec pushl mov push jmp scas jp jmp iret ss add jns lret mov sub std xor fisub xor lods xor sbb ljmp sub sub push (bad) sub sbb pop scas xor test sub or inc pop inc push iret jb lret sub mov pop inc shlb or adc lahf rcl jp push leave ret bound mov lds push ja sarl cld push inc fdivl xor sub stos int3 adc or jb and jmp xchg inc and lock pop popf push cmp leave and pop into sti leave xor pop sarb and outsb in mov pop or sub iret into jp bound sub xchg lret call lods ja add repnz mov add mov enter push dec ret loopne push andb fcoml rol popa sub xor jmp inc dec mov mov push and xchg xlat sub pop sti repnz push out addr16 in mov mov add pop dec mov mov adc xor pushf xchg nop adc dec scas (bad) (bad) sub jmp (bad) les ss sbb fbld or push mov lret cmc xor sub fstpl jnp aam mov sub push inc push ffreep mov (bad) push dec sti mov dec scas fs jns gs xchg push lret push mov repnz inc xchg sub roll pop or gs (bad) xor sub add aaa push or and fldcw leave cmc lds dec pop jp js mov cs and decl bound mov xor les jmp push enter sub xchg jge adc decb or add mov out mov pop push and inc mov mov xchg repz sub cmp inc (bad) into xchg icebp jge sbb stos sub mov push (bad) xlat cmp movsb dec icebp out or dec mov mov cltd rolb add sub xlat xor mov enter loope pop mov (bad) lret add mov or mov data16 mov push mov lahf push aaa daa pop lods es push into sub rorb lahf fadd pop leave lods repnz cld enter fidivrl leave mov cmp add out mov ja loop mov sub shlb mov and xlat cli mov add mov imul in xchg pop (bad) sub out xchg jl pop ret mov cwtl pop mov xor (bad) int3 notb mov pop push push mov add lret mov pop adc lret pop jl push pop mov mov fisttp into push mov sub aaa outsl dec out jns shr cmpsb hlt arpl and xchg xor test icebp out dec or stos sub pop mov mov icebp nop jp es das and mov mov enter fnstenv ss shr js mov xchg hlt pop lret ja (bad) lock mov xchg jg sbb imul adc rcr movsl leave in dec ds xchg in leave ret cmpsl pop push pop mov inc sarb sub pushf cmpsb std int loop out adc leave ljmp add pop push and push pusha sub and xlat and mov xor divl push aaa or jns cmpsb cli das xor mov sub mov mull and (bad) jne fstpl pop ret push into mov idivl ret or cmp lods cmpsb test mov or xor jle bound (bad) hlt jbe lock repz cmp ret push sub pusha nop jmp (bad) sub and jmp out xor jb pop gs stos cwtl in icebp loop or int push adc test adc out xor fiadd sub xlat and addr16 (bad) and mov mov mov pop mov jecxz loop loop xchg push aad loope xchg negl xchg pop xchg jp repnz lds push lock lds lds xlat insb imul mov mov and xchg imul jae xchg push (bad) mov out add mov (bad) jp sub pop xchg lret jo pop (bad) push jbe sub inc (bad) js loopne xor xchg mov inc xor pop rcll rorl inc popf xchg imull shr aaa leave mov scas inc shlb je insl sub mov sub mov xor mov lds iret inc push sub mov inc dec int3 push loope jno imul orl lods push aas bound sti out and popf (bad) pop inc xor cmpsb jg das sub subl imul sar and xlat sti pop or int fcomps loope out mov scas cmp popa dec jle leave stc cld jmp dec mov cmp dec into out ja pop add sub mov mov sub pop ret and icebp mov xlat stos daa popf fxch rolb push lock lods daa jbe jns inc xor aad cmp xchg cmpsl add add mov (bad) ss xchg je push or mov push and mov aad push subb repnz or jmp jle push int3 aaa sti aas jmp mov and mov sub rolb inc lds sub and mov pop sub mov es pushf fisub test repnz sub xchg cwtl repnz mov cmp shlb bnd (bad) pusha inc psadbw rclb cmc mov adc jne mov push pop das (bad) (bad) xchg mov jmp cli test test xchg xchg cltd enter pop pop mov and leave pop fbld mov jmp mov or into pop popa in test mov pop lods imul mov push lds mov idivb movsl jne mov (bad) stc jge test movsb mov dec jae xor ss mov or add add xor xor add inc push daa pop dec ds lock xchg std xchg xchg and aaa imul (bad) mov push imul rcll inc pop adc aas stc scas (bad) xlat adc daa mov xlat into push dec out clc in les out mov dec (bad) jb (bad) sbb cmp cmp es mov add scas xor (bad) aad js jbe or xchg call stos (bad) mov insl mov or es and inc imul lret ret mov aam fs xchg lahf pop lret jg in mov scas sub out jge sub (bad) mov adc inc mov jno lods hlt mov inc repnz jg insb mov fnsave and xchg fstl jmp ja xor in ja cmc sbb push xchg mov icebp xor jge loope das lret or (bad) cmc xor repnz push inc add mov mov jge jb mov push lods (bad) icebp mov lcall (bad) mov daa inc lret sarb mov sub add mov stos jge push mov pop cli push fs xor sub mov or mov aas fsubrs or sbb inc and mov insl cmp stos push xlat (bad) cmp mov stos dec inc imul das sbb dec movsl pop rcll cmp cli xor jb in pop cmpsb lahf mov dec lea jl and xchg push dec dec cmp or xchg pop jmp cli call xchg or test mov dec sub fs daa xor pusha push push mov pop add jle mov scas fdivs ljmp mov mov pushf and mov cmp out xor repz push xchg xchg dec mov mov fcoml mov (bad) dec mov ret and push sub ljmp lods aam xchg sahf xchg fdivrl bound (bad) xlat mov (bad) push mov dec jg (bad) lods push pop mov jle adc mov adc enter into mov orb icebp and scas (bad) fwait out jge lcall sbb jecxz ret jne in inc (bad) jge add mov adc mov outsb fnstcw mov xchg in mov leave fs sub push jg enter add dec sbb mull dec dec dec pop outsl pop sub xchg (bad) cs repnz fs and adc xor scas dec sub and ja pop test pop pop mov test jle mov cmp fimull lcall xchg add sbb clc pop inc adc mov jg push or mov and mov sahf out and jge mov sub (bad) aaa mov dec loopne (bad) mov into cmpsl aad movsb mov or (bad) movsb adc pop pop (bad) in jo adc ljmp divb adc cld clc mov leave andl popf adc lret xchg (bad) test sbb and mov jmp xlat sahf pextrw mov xor cs mov into and imul sbb or adc adc adc out xchg (bad) or imulb push aas cmp jl xor and cwtl or in adc test cld mov cmp xchg repz daa loop xor or dec mov pusha xchg lret repnz push add lea fsubs push imul popf mov sub cmp add gs adc loop hlt bound mov (bad) mov scas cmp (bad) mov pop mov push or scas out push xor mov pop and dec and rclb les (bad) enter (bad) mov cmp es xor and and lcall nop enter cmp fldl pop or iret and inc jmp push dec mull dec imul add mov push sbb or mov inc into mov add ja and pop xor sub or out sub ds add jbe xchg jg mov out lods mov mov out jb push in jns add sub mov jae into lds scas adc nop (bad) mov cmp mov mov out jp jne stc sub mov or hlt xor out pop mov cwtl xlat fistp lret mov rorl loope sub lret daa jl pop cltd cmp sub pushf cmpsl loopne fdivl popf andl inc shl push dec fimul lret rcrb pop and (bad) das fs jmp scas test and hlt movsl mov rorb jecxz pop test sub jmp cli jg hlt test mov xor jmp (bad) into mov jl xor sbb inc ljmp xchg out mov cmp mov clc pop mov into fcoms (bad) sbb push stc jb decl push mov adc fldt je push add mov sti xor int xchg pop dec mov lea cmp push mov jo adc jge push push push pop mov mov repnz in fcomps lock cmc pop sti pop push test rcl pop jnp inc dec ss loop sub sub mov pusha or sar jge icebp inc adc add ljmp jmp fmuls sub mov js cmc aas mov shr lret fsubrp mov inc fisubrl xor pop addr16 and xchg mov aas xor pop jns xor imul xchg mov dec std test push pop (bad) ja (bad) call inc pop xlat out mov jle xchg out mov pop push mov dec inc cmpl jmp fldt and pop lock push mov push pop and stc pop jg cltd out mov adc add outsb push shll xor push lods das inc push dec add push lcall sti push std pop dec orl inc adcl insl sub push test ret mov lret (bad) push lds loop xor push inc popf or clc daa mov int dec shr inc sub jge mov sub jg cmpl js jmp add sub pop mov pop sub (bad) (bad) das mov xchg lock pop inc leave rolb call pop mov rol je dec pop ret mov push data16 xchg push add cmpsl pop fisttp jbe fadds test dec cmc pop fistp popf sbb push push pop fdivl xlat cwtl inc dec push lret out or jne pop lods mov inc mov add cs pop mov jmp mov mov les aam mov jl and test jecxz dec in dec daa sbb xchg gs inc inc jp shll cmp cs mov sub add (bad) js insl push and cwtl fist push mov or xchg xlat push lea xor sub pop ss sub jae or or (bad) fnsave xorl ficomp repnz rclb pop mov (bad) ljmp cmp sub or mov push xlat and mov cmp (bad) popa in jg xor data16 mulb push pop cwtl out lahf xchg rorl jne stos push aas stos lret xchg xor sub lods repnz lahf outsl jb lods or and mov mov cmp inc pushf imulb mov inc testl mov adc idivb or xlat jle mov sbb add jae aas push xor mov xchg leave xor cmp sbb cmp mov sub adc mov jg dec imul xor shrb cmp jecxz inc mov push xchg mov cmp ret mov mov mov sub sbb loopne push test jnp idivb mov cld mov in daa add aad rcll bound fmul rdpmc xchg adc lea fucom sub dec ret in add mov insb stos movsb scas adc cwtl add cwtl sbb data16 pop in int3 adc mov cs rorb shll stos mov cmp xchg jp fsubr dec mov xor push ss push pop mov pop popf xlat mov xchg cmp sti pop mov push jge fstpl sbb in add adc jb (bad) and (bad) push or pop fucomip lss js and xor test jns lds inc out fdivr push add pop sub popf inc pop out andb add pop sub gs ljmp or dec push mov pusha lods jge cs xor fs mov mov fadd call jp sub inc int or jg fild cmpb rclb and push test sbbb in (bad) in loopne adc (bad) in jne jl cmp mov add push sbb push or (bad) push orb mov xor psubusb sub stos inc pop dec adc pushf xor add xor and or mov sbb idivl mov lret incb sub or fnop mov icebp jecxz enter or out clc aad dec scas cmp jno dec (bad) movsl xor aaa fnop dec pop mov sbb fbstp dec jg clc and xor or jmp ljmp stc pushf rcrl xor aaa idivl pop add mov cld (bad) decl pop into jae cmpsl in popf ret lea movsb pop out out cmp push add jnp mov popa adc add dec pop fsubrp int3 fimul fbld and daa ss fdivl ds push addr16 dec pop mov and scas (bad) (bad) cmp mov rorb repz xchg in in ret sub add (bad) (bad) loop mov movsb ret and mov push jp cmp insb jmp and inc cltd out leave inc dec pusha nop inc and xchg (bad) lods subb cmp add out cmp sub cmp repz test cmpsl lods xor xor mov push lcall mov imul mov xor mov lret (bad) or mov popa jmp jnp pop xor push mov les adc xor sub sbb mov dec pop sub movsl and mov mov mov rclb stos mov leave loope push (bad) sub rcrl pop and cs adc cld xor adc push daa ljmp mov jbe loop aad dec adc lret cld cmp clc out xchg xchg add or leave pop push cs mov ljmp mov nop dec xchg out pop adc outsl sti pop or and xlat mov repz sub es hlt jo (bad) ds ffreep mov repz inc cmpsb push and das xor mov into cs mov push mov ret std or je ljmp push jg sbb xor xchg jae xchg push imull push lcall adc dec fbld fdivrl (bad) adc xchg dec stos mov loop ret xor xor mov fistpll sub xchg enter testb pusha fistp stos lods mov jns mov cwtl or pop negb cltd mov fdivrl es dec push pop inc sub jmp mov lret or sub xchg push adc pop out cmc clc ljmp xor fdivrl (bad) add xor outsl lret ljmp pushf cli je clc in add sub dec and jge lcall sbb ror pop fldenv sbb daa add ja sar test fnstenv dec pop dec mov add add pop push cltd (bad) pop inc inc out cltd repz mov daa mov push sbb stos leave aad movsb push out scas sub or cltd lcall sarb push call jno cmpsl out dec fucomip xor mov add stos stc (bad) daa mov jle enter sti lret out cltd xchg out scas cmp push xchg cs sti add lret pop ljmp xor sub jnp fisttpl xor push dec mov aad es rcr sub int loope,pn cli int3 lock mov lret fs popf lock mov mov (bad) xchg loopne sarl dec pop push popa xchg xor xlat inc jns les push mov mov adc ljmp rol lock push lock xchg push (bad) das aad sbb std push les clc mov xor ret jge cmp dec and jne xor js sub xor dec mov scas popf mov pusha and rorb xchg sub adc aaa nop xchg mov adc lea sbb adc dec sub or push lcall push pushf or adc pop repz xchg pop ljmp daa test (bad) mov rorb icebp add inc idivl in cmpsb jmp (bad) (bad) negb lret out incb jae inc lods movsl xchg hlt mov push push or jmp iret xor xor leave dec sbb jno ret or mov sbb decb nop mov jae into icebp adc sub in mov push push arpl and cmp jmp pushf and jae and int3 push and das cmc xchg dec sub mov sub mov cs pop je jmp lret ljmp mov fsincos sub push out (bad) push gs fcoms mov jg jg (bad) (bad) xor cltd cld jg ror aad int add push iret xchg or js fsub in xor mov in jle fsts (bad) sar add push inc sub push mov push sbb out test mov lea shrl cmp scas xor (bad) ds aas ret aam jmp adc or (bad) push clc imul mov push (bad) js mov mov add mov nop lret lret pop cli sub outsl cmpsl adc push sub and pop adc and test jmp inc adc xlat in out jmp pop push cmpsl mull sti repnz pop stos pushf fsubl cmp enter lahf jnp sub popf leave jns (bad) lock xor and xorb mov cmp (bad) out and cmpsl jb icebp lods ret push adc mov cmp push jno imul in lods jmp xor test cmp outsl cmpsb (bad) adc adc inc loop movsl ljmp cs sub pop mov out fist stc pushf dec cltd or and adc or push xor data16 ret je mov fbld xlat mov dec in mov aaa popa sarb hlt xchg xor sti loope jle cli dec sub in xchg ret push push idivl dec add mov cmpsl andb (bad) stc xor dec stos sbb xchg jne xchg inc mov inc jmp adc iret mov in dec xlat out xor out sub pop ljmp inc mov pushf call adc xchg loope jecxz clc aaa mov aam push bnd or aas mov xchg xor xor mov xlat xchg jo movl daa bnd jge xlat mov pop enter (bad) or lret jl xor mov call loope sub jo or pop out jmp lret scas jne sub cmpsl xorl jnp enter and add xchg add jmp xor and xor idiv in stos mov popf fstl mov icebp push or fnstcw jnp cmp sub or sbb loop pop shl daa jne mov aaa adc roll mov pushf pop push adc sbb lock cld addr16 lret inc ret push mov imulb mov test jnp pslld stc arpl fs je mov mov pop stos sub out clc adc adc (bad) or mull aad adc inc repz mov xor sub xor stos (bad) sarb push mov push xchg lahf inc add lock and hlt or xor fbstp fwait add sub cs adc loope (bad) cmp sbb push mov in insb mov pop imull and inc and inc out and and adc mov mov sarb mov rcll xchg (bad) out mov lds xlat fcompl fwait add mov out jp mov jne fwait sub cmpb sub xchg ljmp or scas adc mov mov push cmp test ljmp lods sahf xchg cld loopne cwtd mulb push or and pop and scas pop pushf mov negl shrb sbb inc mov pop pop sbb cmpsl cmp and mov cmp ret inc add xlat and mov lahf scas repz dec out stos mov xor xor sub adc ficomp add dec adc sub xor sub mov add aad mov jns sub cli js adc mov mov nop pop fisttp js sbb and sbb out mov loope sbb out movsl mov pop jae cmp add and jns dec cld pop inc loopne and xchg lods into adc jnp or jle add and in jmp rcrl popa pop push test loop mov jne sbb imul inc mov and jbe jmp xorb cmp cs daa icebp repz push push pop cwtl lods jno mov xor fcomps add pushf fildl or mov mov xor xor jmp jnp stos imul and pop cmpsl fisubr push sbb es loope add push push xchg mov pop icebp mov xchg jecxz dec test test add pop and clc jle (bad) jo dec shlb add mov jge stos loope mov fst add pop cld sub xor shrl jno dec mov mov repnz dec lods jl or pushf fucom mov mov cmp movsl out sub ljmp adc xlat lcall xor xor aad xchg pop sbb inc xchg lods mov mov (bad) jg sbb popa out push sub sub pop pop stos push mov inc sbb movsl push mov fist push fsubl dec (bad) ljmp sbb pushf inc lcall or jg push sahf adc rcr movsb pop adc out shr out imul rorl fbld out xchg into add push ljmp sbb and add push cmpb popf loop pop mov jl sub push mov je movsl arpl cld mov dec push xor push pop out ljmp mov inc lods xor mov fistpl leave inc and sub xor cmp or inc sub cmp xchg mov dec jg jne sub cmp scas push inc jb pop lcall jbe add mov js mov out inc dec dec mov mov fnstcw ret cwtl sbb ret sti mov and loop je pop ljmp dec pop aaa cld push daa jecxz lods pop mov test in lods cmp xor fcmovu jl inc or mov (bad) (bad) in or loope (bad) out mov imul repz imull pop xor jp shll inc inc add std xor or rclb pop ficom push fisttp pusha or test lret stos sub out cmp daa roll idivb xor push push or dec rcll sub mov or mov xchg icebp test mov mov int3 or jge dec iret cwtl mov out out sub das mov test mov lods jmp push test adc mov sub mov repz into adc mulb jecxz jnp sbb lcall jno movsl push movb out test mov dec in cmpsb sub stos scas stos sub (bad) pop int adc mov test mov sub loop cmp sub or mov neg bound pop inc pop cli and sahf jb cs xor add mov or mov repnz jae inc mov movsl add inc and add mov ror xor mov int3 and sub mov inc xchg mov nop loop repz cmp in lods mov jecxz pop inc fisubrl jmp xchg movsl mov mov scas xor add mov aas mov cmpsb inc aaa outsb fcoms sub xor or call in and mov addr16 adc sti sub in xchg sub in outsl mov pop xor push rol leave lods lcall lret cmpsb (bad) pusha test fsubr or imul dec fsubs ja sub popa (bad) xor das mov mov test das lret mov sub and add inc push daa dec xor ds lock test mov sub jns xchg jle push ret add adc fldenv repnz test movsb cli (bad) dec pop xor jno (bad) push cmp fsubrl xchg push push mov dec sti out int popa mov mov popa sub out pop jmp scas aas jno mov push push insb cwtl sub mov enter icebp inc in cmp das cmpsb loop bound jg fdivrl jp (bad) push in push jmp xchg mov int3 out mov imul lea arpl mov daa add std inc and int3 pop imulb and jb mov cmp or add ds bound into jg pop ror outsl and in cwtl xlat into mov xchg mov dec cs pop fs xor mov imul adc xor mov and cmpsb push or inc js inc cld or (bad) pop or or mov aam imul movsl pop in xchg lahf sti hlt or idivl sub xchg sub xor add into push in negb jl adc call and mov std loop (bad) imul sub sbb adc or aam ret jne into scas jle jae add idivb sub dec out mov add rorl and dec fiaddl push cmp mov (bad) sub hlt popf mov push (bad) rol leave into outsb std dec (bad) pop sub std push sti dec or lahf jecxz mov sub into cli gs adc test pop cmpsb out push add add (bad) or notl cmpsl rorl dec push xchg popf shrl mov das movsl leave xchg push sub add jge sub or jmp leave roll mov add jns cmp fdivp sub mov and cmp scas (bad) lret or mov adc jge or mov add mov fldl mov (bad) movzbl mov into cmp xor ret fidiv (bad) sbb fucom add add repz fdivr out shr xor push test das lods sub lret fildl aam ljmp mov aam push or ja push gs adc dec mov adc jo notl ret xlat in cmpsl sti aad jne into jmp out out sub jmp (bad) mov ja (bad) push add xchg sub jl pop push flds jo jge std out gs adc arpl sub insb jmp clc into xchg cmc xchg mov stos lret inc jns sub inc ret jmp test sub stos ficoml pop jecxz sub push les push stos push xchg sbb loopne jae les mov xor adc sub lcall call insb (bad) (bad) lods cmp lcall clc scas movsl scas xor les mov std push sbb popf nop dec xchg xor js insb out mov rcrb jle pop flds cmpl mov push fisub push adc loop push cmpsb movsl int3 decl and mov xor dec hlt xor inc ss pushf ljmp (bad) cli mov cmp cmp lret sti outsb out push ret xor jbe xchg sti push hlt loop leave mov (bad) sub test and mov shlb dec sar mov mov (bad) divl adc push es popf mov inc sub sub js mov ret xchg inc (bad) xor dec je icebp mov gs jmp fcmovne test fistpl movsl jle (bad) out or add push xor jbe jmp adc out inc lret (bad) adc pop cmp inc cli and shrl ljmp out inc inc sub insb imul ds fisttpl cmp js ret push aad out push jmp cs adc and jmp roll pop xor loope pop into and sarl test movsb cmpl (bad) mov cs js xor data16 bound pop in push outsl mov cmp xlat add ds out sub sbb inc pop imul push xor aas in sar cmp fist divl lcall test inc dec divb xchg push cmp or fnop aaa adcb stc sub lret jmp or lret xor in mov inc jno dec aad bound fstl data16 imul cmp and sbb repz xor push ja push test or cmp or sarl in dec mov add enter adc mov dec loopne sbb jo adc gs jmp or and test jp or std xor leave and or push (bad) mov mov mov and sub adc test sub aas mov cmp (bad) xlat pop xchg xor ja gs mov test scas fsubrs (bad) mov dec push fs mov and clc cmp xchg pop push std xchg mov adc inc movsl pop gs adc xchg sub mov and ljmp test and loop push sub lret out rcrl add test pushf xchg sub adc and repz mov push or hlt aad xchg hlt xor add add mov dec loope sub (bad) cld leave mov and bound push fcmovnb xchg cmp fs or test mov in enter sti jecxz sbb cmp fistp rolb hlt aaa aas mov or inc mov out popl xlat arpl loope dec sarb xlat jns dec xor out sub mov mov push pop pushf int3 lcall (bad) and xchg mov cmpsl xchg in stc inc mov sbb pop push jne jmp in scas insl xor mov or ret sahf inc inc or mov outsl lret (bad) pop mov ret lock cmpsb inc and mov sub scas xchg sub fildll inc out or mov mov orb jo sub or pop xchg ljmp mov inc repnz xor and repz cli into outsl std fs int3 mov sub and mov test loop mov iret leave into sub mov shrb xchg jmp mov cs cmp or mov dec pop lret add jle lret dec int loope cmp sub inc cmp int3 mov pop fstps inc jp fadds sti sbb and rclb pop mov sub (bad) lret (bad) stc aas fsubrs and ss sub sbb mov (bad) cs iret xchg (bad) arpl daa inc leave aad fwait xchg loop sub xor mov leave hlt mov lds cmp cs fscale sar cmp xlat pop xchg notb mov negl testb pop add jns into and nop xchg leave rcr (bad) repnz (bad) mov sub mul add mov ja mov sub mov lret or and mov and ljmp into cmc shrl pushf movsb mov and nop fnstenv into nop fmull aas test pushf jns xchg jecxz xchg bound push pop dec jp xchg push xchg and xchg push inc subl mov (bad) xor inc cmc pop sub mov out out push in jno sub (bad) and movsb (bad) jmp pushf xchg test jl shrl (bad) daa in adc stc mov dec mov ret nop stc xchg popa leave idivl inc jmp pop movsb mov popf (bad) call mov in xchg aam fs jg and shrl cs xor mov mov pop mov aad cmp lret jmp mov test mov mov pop mov mov sbb bound pop cmpsl dec jp cmp sahf add mov out jne mov stc add test ss and leave jmp push mov in dec ret xor mov repnz xchg fistl (bad) mov cmpsl popf push das add add movb or xor sbb notl jmp (bad) xor in fstps fwait pop sub sub (bad) ror sub mov push loopne out out inc mov inc and xchg cwtl into or xchg jne std xchg fcoml testl into jecxz adc adc fadds and or and add out aaa leave faddp imul add mull and inc xorb adc out scas std outsl mov insb and adc sar xor or sub push xchg fsubrl bound xor jae sub ja inc pop sbb ljmp xlat stos fs test outsb dec icebp pop cmp fwait subl loopne mov mov sarl cli (bad) mov and test sbb repnz sbb push push das mov pop mov notb add mov test test mov dec or push mov jmp sub dec lret mov inc pop daa mov fucomp sahf mov sarb stc push movsb lds and out cwtl enter es mulb mov and adc ljmp push (bad) icebp lcall xor popa mul dec les insb repnz xlat daa xchg pop xchg push fs clc ja (bad) les jmp xlat scas gs loop lret xor cmp jle push push sbb jno xchg xor xor scas xor pop ljmp xor xchg pop sbb fildll cmpsl xor in sbb mov xor xchg sub test xor mov frstor movsb and jae sti mov mov lea xor cld scas and add xchg mov in (bad) dec mov push frstor mov mov fs cmpsl xor xor icebp aaa dec inc pop cwtl dec push xor cs dec daa pop sbb jns insl pop mov push (bad) jmp mov mov (bad) hlt ret add xchg jle addr16 or aam test je das sar cmp popa addr16 icebp jecxz inc leave cmp cltd out inc cmp (bad) pop inc add test ljmp jecxz sub lods or jae,pt adc std notl gs repnz cmp daa jge int mov and xchg mov inc mov es lret ds sub xor push rorl loop (bad) jb das sub fsubrs add cmp add or mov cmc lods cmp bound sbb into (bad) stos sub mov aas movsl pop sub mov jmp push and mov pop call add scas mov out jge (bad) sti push or pop lods popf daa add and stc mov mov sbb mov insb popf pop add jl dec sti xor sub or add cmpsb bnd fidivrl incl (bad) mov mov popa cmpsb iret andb shrb clc mov cmp mov shlb inc cltd pop fisttp xor lods mov dec leave mulb fstpl js stc mov aas lret inc or jnp movsb cmp fcmovnu mov iret mov and incl adc cmp ret cmpsb fisubl sub mov in lret mov mov push push add or int sub xor cmpsl add gs (bad) icebp mov sub and xor ret push push xchg fs or cmp xor mov push cmp jnp jbe jo lahf cmp xchg mov loope arpl jecxz dec jmp lcall outsb pop ret aad mov gs xchg or and or int3 shl cli popf xlat mov bound leave jne add push cli bound push icebp pusha into xchg inc (bad) leave shll das int sub imul sub inc mov dec fisubr out pop mov out aam pop jge ds sbb mov jp and jo sahf jnp repz add sbb lods jae sti stos and mov adc pop mov out jg ds dec sbb sti push sub xor sbbl mov (bad) je jecxz dec and rorb inc sub lret and aad xchg ss daa add loop icebp mov or mov incb call jae rolb (bad) sti (bad) repnz mov dec fdivrp (bad) jmp mov out push jg mov mov mov mov mov and add push xor push ja xchg (bad) mov sub xlat inc call mov pushf xchg push (bad) jo pop and and mov xchg mov cmc jno dec lret fisttp jl pop pop call rorb mov or push pop push pop xor and test out data16 push std sbb mov sub lret (bad) mov cmc push or sub add (bad) xor ret stc sti fcomip in das mov mov in fchs add lret mov inc mov lods add jno inc and add fcmovu push inc mov (bad) dec es cmpsl push xor inc and pop pop ja lock daa jge call mov xor mov shrl sti or repnz aam in mov cmp mov and mov sub (bad) and and (bad) mov scas ja fs or xor gs mov das lea mov sub fist xor mov lods mov pop movb dec daa shl fldz nop test push pusha js mov pop out sub xchg out test test xchg lret cmp bound jbe testb mov push mov xor xchg xlat adc cli iret out pop repnz or xchg add jecxz lret clc mov dec iret sti (bad) cmc jp sbb daa cwtl xchg xor mov xchg (bad) insl cmpsb pop cli (bad) fwait shlb inc cmpsb js idiv sub pusha mov sbb cli cmp dec repnz test or pop in pop or roll adc and cli push dec mov add mov jle out dec fs xor loope fsubrl mov aaa sarb pop enter in add cmp call insb or cmp fnstsw sbb jle cmp xchg dec xchg pop cltd sahf (bad) movsl push js popf shll ret lahf cld lcall sbb pop adc dec and mov ljmp dec std xor cmpsl mov sbb lret xchg jge mov jp push sbb xor jmp repz icebp and mov cmp or dec pop sbb pop push push xor xchg sbb cwtl cld fs pop movsb jns (bad) jne sbb adc into daa ret out jbe imul xor fsts pop scas or mov jmp mov xchg test push ljmp or shr push pop outsb dec int3 push mov aam lcall jae adc mov fstl jb dec and or repnz or shlb jmp mov add add mov xor fildll rcr (bad) add push mov out hlt leave and js xchg inc push push in xchg or and (bad) lret push cmpsl inc (bad) pop idivl pop (bad) push xor push clc mov out and popa jae and rol push xor popa add (bad) arpl add dec or (bad) and popf cs or fcmovnbe movsl cwtl lds cmc sub pop jmp std mov sub xchg push scas repz mov jbe cmp jg inc xchg (bad) mov xor push adc mov out imul aad outsl xchg imul in mov mov or lds out fcoml mov pop gs and nop repnz add mov das lret and fisttpl jmp add dec mov ret jle xor push lods sub mov push flds test xchg out test mov sbb adc xlat dec add ljmp aas sub sub jge mov mov dec and xor mov mov stc mov mov loop xchg mov pop ret das repnz out in inc movsl jmp loope dec mov popf or sbb sub lahf lahf gs movsb daa push ret fcmovbe mov pop inc xchg dec mov outsb xor std setae and sub movsl rcr imul sahf push icebp cld or inc popf push clc cltd outsl stc sbb sub cmp out (bad) data16 dec or jae xlat xchg ret aad bound inc pop (bad) sahf shrl cli (bad) (bad) jb add repz test movsb cld push mov pop shrl imul bound movsb mov and mov and pop cmp jno xorl fldz jb mov xor mov not sbb push notl movsb lea (bad) imul push mov pop je push not dec dec (bad) pop xchg imul rorb ja negb pop jbe dec jge imul jle push dec and (bad) and jmp cmp in adc jle movsb cmp add scas je gs jns les add mov sahf cld mov adc and xor and rcr mov sbb ret imul test push xchg in sbb mov test or mov cmp inc jbe mov int3 rcrb (bad) cmpsb aaa mov (bad) iret popf loope adc mov ljmp pushf cmp (bad) jecxz sub fisttpl aas dec mov pusha or adc jno xchg (bad) dec dec dec lock mov gs mov and lcall (bad) xchg mov pop fucomi and mov (bad) sub sub out adc sbb inc movsl call push sbb fsubs sub xor and xchg lods mov xchg sub fcmovb hlt icebp xchg pop std imul push mov push xchg push enter xor ret inc imul (bad) iret cmpsb lods sbb sub pop movsl sarb mov aas mov (bad) mov xor scas mov jp adcl xorb mov jle sub dec lock jmp movsl pop loope push scas movsl (bad) imul imul xchg (bad) dec jmp (bad) movsl scas (bad) push call or push int3 rorl and leave xor adc mov sar pop mov dec jb mov or jne mov out add aaa xor aad xor adc mov sub lods mov xor add clc pop pop jmp ss ss xor (bad) aaa and xchg rcrl mov mov dec mov movl push sbb and xor shrl jmp sub fdivp dec out into ljmp dec mov xchg je out and (bad) pushf pop bound inc test sti and in add push (bad) out leave shlb sar bound stc hlt fadds and and out out ss xchg andb and mov adc (bad) and mov mov or jmp jo sub pop mov mov push icebp nop lods or cmpsl in pushw sub repnz mov stos jo addr16 jae (bad) mov daa mov ret je sarl dec sbb sub sub out js dec repz in jns push ror ds je in push add lods xor sbb sub mov pop push xor je les push jp and notl sbb mov pushf addb (bad) mov aad loopne hlt js js cld out jno push daa jno cmpsl loop stc in dec ja sub cltd jmp jbe sub push or loope leave jg jl add sub ret mov int3 mov outsl orl pop push jae mov xor lahf test cmp inc adc mov lret and jmp cmp push xlat xchg cmp xchg sub jne idivl repz outsb pop gs pushf xchg and xor out mov lahf imul dec loope jne and xor jmp movsb and sub mov sub lahf fidivr outsl (bad) mov mov ds sbb sub js sub lret pop in xchg aad mov rcrl xchg push test pop scas fwait and sbb add stc (bad) jg sbb adc lods loop adc sub push add call aaa call lock inc rcl and and (bad) jne lods (bad) mov adc pop data16 gs pushf (bad) and sub gs sub into scas jne scas rcrl jg imul mov jl inc loope sarl mov addr16 mov sub out out sub lods and jae add inc sub sub xor (bad) (bad) loope icebp lds les adc mov pop arpl adc fbld xchg mov lods mov sbb fistl (bad) xchg jne loop xor aad inc jno test xchg pusha cs xchg jnp and gs push push cld bound (bad) xchg rcr dec xor sub inc fsubrs (bad) push out test hlt imul mov (bad) repnz in daa xlat insb jmp xor (bad) xchg cli pop cmp leave and xlat outsb outsb dec out cld xchg dec test xor ja lods pop jle movsb leave das fistpll xchg adc mov mov jne xor pop call push ss fdivrl add das pop out pop ftst jle mov dec lahf dec jnp stc jb (bad) mov nop mov (bad) loopne iret in and xlat icebp lods dec pop sbb ljmp sub outsl mov std pop xlat out mov fnstcw fwait orl lret imul rcll mov mov pop lds or and lahf xchg lcall into idivl mov and adc and adc mov xor push imul arpl and mov test sbb or sub sbb and repnz out pop sbb xlat out push add and daa fnstsw mov and mov mov inc push ficom div inc xchg aad add out or lock mov dec jg jl jb pop lahf adc and (bad) pop jecxz sub jb or cmp cs sub or mov push jl sub (bad) lock andb inc add xchg and jg sti sub sub scas mov mov sub push daa and mov ljmp bound incl insb xchg dec mov add lea cmpxchg8b xchg je stos call xchg jmp adc jmp clc push adc fldl mov int pop push bnd sub cmp lahf adc cwtl clc lret jne (bad) ret jmp push jno inc loop out cmp mulb inc sub push movsb adc cmp sub dec daa or push adc mov je lods je sbb mov (bad) and push and adc sub lods in rcrl mov clc in out xchg mov cs xor jae leave xlat jnp cmpsb dec ret std int3 inc mov pushl adc sti mov cltd mov bound jge xchg fs lahf add dec cld xchg test push sbb mov call adc jle sbb xchg mov xchg or add mov jnp xchg mov and daa imul aad ficoml sbb push mov nop mov xchg ja pop sarl cli popa dec sbbb xor push gs dec (bad) pop ret insl xor das mov clc adc ret sbb negb lret (bad) xor aad jg arpl fisubl mov sbb xor movsb sub sub in lock jecxz pop mov xchg xlat mov call sub mov lock or (bad) inc jge xor xchg push cmp test pop inc popf outsb call and adc out rol sbb fcoms adc out idiv push test mov dec shrb jle add std mov daa data16 cmpsl xor and daa push jno mov jg dec add cmp lahf pop lret aaa xchg jp mov insl xor pop and lahf out jge ret dec jmp xchg mov in shlb dec out loope pop (bad) cmp cmp aaa or lods mov out sub (bad) dec sbb mov pop xor (bad) popa fsubrs sub xor dec (bad) cwtl pop icebp xchg jbe jmp and or and mov fdivl das inc add xchg inc add out out fsubs jp dec sub and mulb cmp test mov cs jmp mov adc xchg dec je xchg out iret pop jns inc add iret and xor sub mov mov popf adc sahf aad out jns push pop mov pop lahf loope lret arpl fs scas mov cmp sub pop cld inc and mov enter cmpsb sbb mov aad cmp lods or or pop add xchg (bad) mov sub cmp sar adc dec dec inc repnz (bad) pop mov packsswb (bad) mov (bad) or sbb push inc out hlt mov ret es mov mov fiadd lret dec mov sub cld xchg rorb or push jns dec out lahf pop fwait daa mov adc or jnp and daa inc add clc das loopne pop fildl scas fmull and xor sbb fs xor pop ret pop dec push (bad) dec mov or mov xor push sbb xor pop cmp (bad) mov iret pushf iret rclb aaa addr16 aad movsl xchg fistpll cld xchg rorb xor gs sub lret adc or shr jmp testb cmp das (bad) repz xchg andb mov adc enter (bad) push int3 push in push adc inc data16 cmp fldl cmpsl pop inc enter mov nop xchg lret adc xor (bad) imul bound pop and dec dec (bad) cmp repz cltd mov movsl fsts movsb daa je leave test js pop xchg ss pop inc int3 pop xor outsb dec aad jle dec mov mov xlat xor mov out xor shr mov ljmp add in dec pop loope sbb das fistp (bad) mov out mov sti sub sarl sub das (bad) fsubs sub sub ret xchg insb cmp mov cmc cld xor inc insl cmpsl push jmp aam mov mov inc xor icebp xchg adc (bad) mov and pop int ja pop xor mov inc cmpb gs in mov pop jbe adc out mov inc mov fdivrp add nop ljmp test test and xchg or pop ds icebp dec (bad) test push mov inc inc or insb lret stc in insl std mov xor cmp (bad) popf gs out stos add ljmp or add mov sub xor mov (bad) aam loope mov mov lret add inc or and mov js rcrl push jmp xchg push aaa or cld (bad) sbb sub lock (bad) jno push push aas outsl (bad) jno xor pop mov xchg push rcl test or loopne inc cltd or fisub into jp lahf pop cmp pop inc or or dec (bad) int bnd rcrl out mov adc sbb mov sub and xor mov dec sub mov pop jge sbb pushf or out pop sub or stos bound mov fnsave pop idivb sub dec add adc fsubr repnz or jnp adc dec and fldenv and or fcomps sbb pop daa (bad) ja fcoml jae add fsubs sbb or xor cld sbb adc stos icebp icebp cmp dec sub dec and data16 das mov das negl aam lds mov cli push or sub leave pop test loop test push mov dec std (bad) imull lds sub cltd stos ret sub lret iret dec fisttpll jnp movsb mov xchg negl jae adc lret jbe mov sub xor cwtl adcl mov push or imul rolb dec mov pusha add mov pushl sub pushf push negb jbe sti push jmp mov cltd push pop inc rcll cli sahf mov ret out mov pop xor or out (bad) ljmp addr16 jmp adc sti or and sub and fwait jbe xor lds in (bad) movsb dec fucomi rorl call lea mov dec cld xchg xchg mov inc push sub push (bad) push daa repz sbb repnz xor mov out and add ss jecxz cmp push loope pop xor les sarb jle mov pushf xlat xor mov xor les mov xchg sub mov enter cs iret mov dec dec scas cltd push (bad) cmp arpl inc out mov pop xchg repnz cli iret mov es scas insl clc loope sbbl jg cwtl pop ret lods cmp xchg push push dec cmc mov shrl lock ud1 xor insl les shrl outsl aas sub jnp sub inc sub sub jnp mov test (bad) stos or pop dec insl jp mov es add pop sub (bad) and xchg leave add pop and (bad) (bad) xor and push movsb xchg inc pushf mov pusha test sysexit xchg int3 insb cmp sub mov and add xor mov lret jno int3 test fnstenv mov dec xor repz xor out sub mov pop xlat mov xchg cmc mov aam insb vmaxss add mov das pop daa cmp cs cld adc xchg dec clc mov out mov cmpsb call into adc cli popa and and dec rclb mov or rorl leave fdiv and (bad) push xorb xchg cmp mov dec mov cwtl (bad) mov adc pop xor mov leave cmc (bad) ljmp mov add jmp jecxz cwtl and into mov sub sub cmpsb mov dec leave (bad) or imul imul pop push shlb mov scas xlat jnp and and (bad) pop adc xor dec (bad) aam out push (bad) mov push test sub jecxz or and (bad) jne sub out xor fmul ret or push sbb divb into out sbb mov dec push rorl mov or loop (bad) fstpl fisubl aas fimul lock notb (bad) adc and fistpl or loopne das pop test and sbb (bad) xor sub mov add mov popf gs push push or add (bad) add pop repnz outsb jmp cli sub ljmp pop sti dec call das roll inc mov pop xor movsl mov sbb enter in sub rorl and mov rep dec lock in adc andl stos or pop sub inc lods nop and xlat mov push mov xchg adc xlat (bad) cltd dec ds or xor jae adc aaa aas push mov lret ljmp jno add pushf add mov pop test je jne mov mov adc mov and or mov add aad pop mov (bad) add or fbstp (bad) jmp pop and ds fsubl das sub repz adc repz iret xlat insb pusha in out mov ret sbb fimul inc adc xor mov stc or cli mov dec mov inc mov jge push and rorl sbb inc mov pop mov sub es in xchg lds out cli in repz orps inc call jnp pop sub or jge div outsb push sub lret pop push push lcall repz sub or stc movsb xchg stos pop mov jecxz jns dec mov xchg mull int jp cmp hlt jg xor in mov mov movswl mov jmp add xorl pop mov dec aad das loope adc mov ss cli lods xchg daa push je adc mov add fmuls mov mov cld pop rcrb jno ret push mov jno fsubl outsb xchg mov adc pop add mov pushf xchg mov mov das cmpsl ret pop stc loope mov stc idivb mov xchg movsl enter imul xlat add ja dec xor stos mov push xor xchg jae cmpsl push std dec cmp jg xchg pop adc pop test sub jmp adc lcall sbb lcall mov pop outsb mov sub sti mov adc lahf adc pop mov jno jno or jnp leave push sub push roll pop repz fs gs cli (bad) jl push cwtl leave or mov stos dec jmp mov pop fdivrs test fcoml test movsb jl or jo pop iret scas push lret pop jg (bad) pop test mov or jne stos add adc dec mov out sub adc mov mov out xor mov add idivb (bad) push out rclb xchg pop and add xor dec sbb xor jg xchg lds xor jne mov push popf ljmpw pop out scas sarl ds scas mov or (bad) mov mov jp stos mov pusha jmp mov add (bad) mov sub cmp mov inc ret orl clc and sub (bad) es and push inc mov insb insl sub (bad) dec popa sub divl imul xor mov mov testb jne push inc pop push adc mov das bound ljmp mov mov xchg repz or sub pop addr16 call sub mov test ret ja sub lea rol ffree jb aam and arpl pop aam or stos out jl das (bad) inc pop and push or sbb push (bad) lock cmp or stos xor push push mov add mulb (bad) sbb movsb jmp iret int and sub xor rclb (bad) mov imul out lahf fsubl outsl into mov loop sar xchg pop xchg push xchg xchg xchg insb arpl mov pop in xchg adc insb cmp mov mov add mov repnz cmp (bad) mov adcb insb jns mov cltd fdivr cli jge rclb jecxz pop ror lcall mov pop loop push or (bad) and xor lret push cmpsb xchg ret aad xchg movsl outsb test js xor test mov daa popa inc lret push push aas mov dec sbb movsl std les xchg mov push sub lock mov outsb les repnz xchg loope sub call popa leave sbb jne ret xchg mov sub xchg outsb (bad) int3 imul jg (bad) movsb pop std fldenv xchg mov out notb lds mov mov pushf (bad) mov jbe and adc out imulb and pop mov fadds ret daa icebp pop outsl inc fildll xor sar sahf inc push je lret in or xor fstps xchg and jbe ret inc imul push cmp mov addr16 lret popf push mov out xor mov or mov inc cs dec inc pop push mov outsl xor xor (bad) out xchg pop xor xor call mov xor add sbb sbb push vmovapd push dec xchg loop (bad) mov jnp nop xor ror xor sub push jns ficom sub mov mov sbb and idiv mov mov inc inc or xchg lahf and (bad) mov icebp pushf lcall dec mov cmp ret insl push nop push pop (bad) mov pop fwait mov pop gs sub mov cs gs mov cmp int js and mov mov or add jns pop mov fstpl outsl sub add mov add aas pop xchg es out lret mov cltd jo ljmp sub dec adc pop in daa push lret imul outsb mov pop loopne (bad) scas xchg in xor mov mov (bad) mov pop add and add dec fmulp xor mov mov or icebp imulb or pop popf test xchg add cli mov ja das call fisub rorb push loope insl (bad) fisttpll and add xor mov push pop out sub test (bad) xor mov and mov mov aas negl cld ljmp pop pop das or out std mov dec mov lahf and (bad) xchg dec aad jmp or sti ja pop and sub lcall cs xchg jp scas mov jns dec fimul and or into mov cmpsl sar push popa enter insb fs stos shll mov (bad) jno imul jne into aas fmulp push and push (bad) and xchg push jbe mov jns xor inc and enter and scas cltd xlat outsl cltd imulb mov jb mov lock push dec (bad) shll sub daa xor (bad) or std adc mov lahf push in mov pop push lds in int test cmp (bad) and push sbb or jb mov je test out and xacquire or inc mov mov shll sub inc xchg dec xchg dec mov rorl mov enter (bad) jle lock stos ja and jg sub into pop adc shr dec mov sub dec sub cmp push fbstp push and idiv and cmpsb mov xchg cmp adc xchg xor pop or lock aas clc jno xlat lds out adc add pop mov pop mov or cmp repz add mov clc xlat dec lret mov add (bad) jmp fbld (bad) push lea icebp fisubr in xor mov sub fs cmp out sti lods add sub mov nop add cmp or dec pop inc or out push mov mov push inc mov pusha adc sub pop ret push mov and lret mov neg dec outsb pop or (bad) inc push push ljmp xchg cmc into ja push xchg jp mov inc jmp mov mov dec mov xchg jns popf sub ljmp movsb mov cs xlat cld lods sbb sub sub or jmp mov pop xchg fsubrl imulb idivl xchg add mov shrb nop pop (bad) popa cmp faddl icebp pop push mov rcll dec mov mov cs add jg and pop outsb mov xchg lahf xor xorb xlat pop add gs ret xchg pop xchg lret pop pop (bad) lret and add hlt xchg gs cli neg dec out xor stos lods dec iret push loopne popf mov mull lcall rcrb int3 sub pop jle cld inc mov jae shl divl jne mov pop inc add fsts scas pop cmp notb stc (bad) cmp idivl and outsl or add roll add ljmp cmp add shrl push popl cmpsb fcomps inc mov inc cld inc jg shrb xchg lcall sbb pop mov and imul dec or mov or pop out and xchg mov mov pop mov push adc scas movl rcrl pusha mov sbb or das bound ja push push add and sub and mull push fildll lds adc sbb push or xchg pop lock push adc sub call mov sbb lea and sbb arpl fisttp loope pop mov adc pop (bad) or shr mov sub lret mov das mov push sbb dec fistpl or loopne jle jmp imul mov sub xor stos lea dec outsl xor (bad) xor sbb or (bad) ror hlt push pop std (bad) jmp push clc push mov incb jb popa mov or dec popf outsl ds cmpsb roll and lret data16 mov or or pushf (bad) scas fadds dec pop stos sub mov mov cli mov dec and bound rorb xorl pop enter cmc js negb sti jmp jmp in xor je dec lret mov fisubl rclb out stos xor mov dec in loop add cld clc in jmp sub out je ret in call lret (bad) pop cmc ret call add pop popa xchg mov fwait cld (bad) loop fstpt ret sub push lret or push test fsubs jg (bad) dec repnz leave mov sbb xchg sub movl sbb mulb in roll xchg loope js mov adc jb mov sub sub inc pop sti pop (bad) sbb jbe push or and lods inc mov std int3 push cmpsb into imull sub out mov sbb xchg cs imul lret xor rclb stc xchg and negl pop mov mov stos clc clc sahf daa ret pop pop mov mov movsl fs das add mov repnz cmp lods aam or call and mov or xlat inc lea mov mov or cmc xor icebp add repnz decb rorl pop mov test pop mov ja out sub pop or (bad) sti mov movsl out xchg pop mov sub hlt mov jmp or dec loop sub add cmp lret xchg test mov xor movsl scas adc je inc sub (bad) add or aas push and mov push and mov sub cs rcr add fsubrs xor sub popf (bad) fldenv popa cmp (bad) leave (bad) jns test sub out movsl shr (bad) repz je push push inc xchg cmpsl pop push add icebp mov ficom std inc (bad) stc mov add jmp frstor icebp cmp xor mov cmp icebp rorl dec sub mov cs sub jmp fcmovnu popa mov fsubs and mov ljmp and icebp mov push popf sub into inc sub sub test mov scas (bad) mov or adc ss fmull ds roll add cli cmp sub jns pop adc xchg shrb call or sub sbb jno dec inc sbb xchg ljmp jnp xlat push outsb and imull enter dec out (bad) pop xchg (bad) cmpsb push xor mov shrb push stc dec imul mov dec xor (bad) push out dec (bad) xchg jne mov cli ja jge idivb lret ret cmpsl test shr jecxz frstor xlat or cmp popf jbe jmp sbb sbb xchg aas mov dec or divb xchg (bad) sahf fisubr and ss dec ret adc ret push mov leave xchg and mov lds movsl pop aad int3 orl popf mov cmp push sar orl and sub fucomi inc pop add mov add (bad) loopne add dec out in mov cltd (bad) adc and (bad) ljmp xor mov push scas sub xor pop add xchg mov lods scas mov or pop add fcomps sbb int3 stos in cmp int3 mov inc push dec or xor mov gs push shlb les dec into jecxz daa rcr cltd mov adc xor jge mov adc xchg test mov and shrb jb repz xchg mov lret addr16 call addr16 pop sub lock call sub and push mov xor mov xchg (bad) xor mov fs stos int3 mov mov lods pop mov loopne iret push sbb mov dec inc inc repz sbb adc xor xor fsubrs mov push scas lret xor ljmp push xchg pop mov les cmpl and dec jne das adc fwait dec sub sub inc pop out or roll dec nopl xchg outsl xchg ljmp fstpl jp cmp mov dec (bad) push push jo jne jmp sarl add pop inc sub testl dec movsl out and and not pop insl dec and lods in movsb jmp pop mov scas lods or cli fdivs dec (bad) push bound movb pop rsm sub mov mov lret jg lcall ret mov mov fimul sub ficomp xor xor clc sub cld fistpl sub pop jo sbb jno xchg sub icebp pop outsl cwtl iret repnz imull popf cwtl (bad) out mov gs push adcb add adc and xchg idivb inc std cmpsl jg adc icebp into lcall fdivrs push nop push xor and or das jl lds sub aas out sub aam rcr dec sarl outsl sub jle sub push push pop mov mov fs cli sub mov pop sub or ffreep into lock mov adc mov aam push push leave push icebp and mov xor out lret call fsubrl or xchg dec and push dec lret (bad) or pop pop jmp jae das jmp in pop jmp sbb les fcomps dec shlb fmull lods jne pop lock push dec cmp cltd imul loopne dec mov rcl (bad) lock xchg mov outsb lret lea (bad) dec adc test stc scas cltd pop xchg dec pop mov pop jmp xlat mov xor cmpsl ja and pop fisttp shll and jno test add scas flds out hlt jno testl imul and sbb cld adc pop sub fiaddl xchg movsb sub fild fstps cli mov rol es lret (bad) lret movsl push cmp pop into cmp cmp and inc je cs negl xor pushf (bad) movsl push (bad) loop mov dec imul movsl xchg mov xchg sub in daa mov pop push (bad) scas hlt int or std rcll sbb xchg ret jnp dec mov lahf or enter sub ret ds call and sub push and (bad) stos popa mov mov sbb sarb movsl fwait cmp cli int cmp pop (bad) repz jp sub stos fs lds cmp xchg lods inc add pop cmpsl mov insl dec pop mov xchg cli movsb push jecxz push xchg push lods jbe in cmp stc xchg or leave inc push fs push imul xor jmp frstor or pop add push out mov sub mov xor enter jecxz cmp jp data16 (bad) xor stos mov add mov pop pop inc or mov ds and (bad) dec add aad add or fscale and pop and add inc sub cmp les xor (bad) pop out repnz mov or xchg sub and jnp cmp out and repz lds mov in and and sti jae dec jmp add decl inc cli repz fldl adc fdivrs lahf (bad) xchg push ja test pop negl out dec repz or adc (bad) mov sub (bad) xlat mov jge cwtl xlat mov fcmovb mov enter dec ljmp lcall inc mov add lea xor pop mov aas clc ret das mov mov mov xor sub out pop pop lret ret ds je cmpsb adc in jb xlat mov lret sbb add pop push ljmp mov pop andl ret mov sub xor mov popa xlat sub imul mov notl sub mov mov out xchg lahf mov sub jmp pop mov inc fldcw jmp inc and shr ret inc icebp fldcw sahf cli mov mov xchg roll test out lea popf xor rorb shll fidiv aas cs jl fistl daa out lock dec mov mov pop and out popf mov sub pop js xchg push imul or adc mov loopne mov lret sub dec sub rcll sub mov (bad) arpl (bad) sbb cmp xor loopne jmp pop mov scas xchg fisttpll icebp xor mov and sub sti mov dec mov cmp cmp aas test pop lock add mov pop int (bad) xor and mov dec add and and cmp clc in ljmp xchg mov jbe mov jle push aad negl mov cwtl movsb and mov icebp push mov sarl sub mov iret mov and stc push mov movsl test jmp aam jo sub or mov (bad) adc inc pop and and popa into or cmp icebp js mov cmc mov mov mov or leave fnstsw (bad) jno and pop call shrl push jb ljmp out je,pt icebp mov mov test xor dec pop fidivr adc je pop pop test push and or and sub into sbb ljmp sub pushf test adc mul cmp sbb mov or aad add mov mov pop in sahf xchg call or push sbb fdivl sub shrb aas mov or (bad) mov sti jnp xor in sub or popa mov inc mov imulb lods nop dec xchg insb movsb (bad) fnstcw jg lds pop push pop dec out repnz jecxz or inc adc out mov sub (bad) xor call sbb or ljmp inc test scas rcrl or jl ret sarl lods xor xor xchg or repnz cmp leave add mov sysenter cli mov loopne xchg lret mov add ret mov cmp mov or fcoml lahf dec mov dec xchg cmc mov pop fcomps mov lret or lret pop das call mov pushf pop jge mov add int test push pusha push fisubrl push (bad) (bad) idivl xor ficompl mov lret ja add jnp add sbb dec and jnp ret mov xlat push sbb mov cmp pop lcall repz dec cli add (bad) (bad) sub in cli pushf add cwtl adc xchg stos and cmp add mov xchg in rorl test push jmp cmp (bad) movzbl insb ficompl je mov adc add leave shrl add test in lock repnz jmp jb mov add pop fmull (bad) iret push pop mov mov xor dec add sub cmpsb repz jmp inc dec ds imull xchg les or ficoml and cli stos aad inc out imul nop out into lock stc data16 xor xchg leave mov sbb es pop add mov ljmp pop add adc mov xor (bad) lock into pop mov mov inc sub push and lea sub das or jb and daa (bad) sbb mov loope and sub adc pop xchg add out addr16 xchg push xlat inc xchg adc xor repz sbb mov cld cmp nop adc mov mov out mov mov ljmp xor popf xor mov dec stos inc lret jae sahf insb dec xor mov push loop sub adc jb mov cmpsl xor das or out xchg (bad) movsb and pop add daa lock clc sti adc push xchg sub jmp das push cmp iret add js rorl lods mov das gs mov div lcall or sub test (bad) lods cld mov jge inc lods fsubrs sub push out cltd aaa or jb iret adc lods fxtract dec mov notb (bad) jg cwtl xchg or sub in jg push call ds jns imul mov lahf and scas std cmpsl lock mov and ja mov ljmp stos xor faddp dec mov imul fcmovb xchg jg andl sub fisubrl aaa ret xor jne popa pushl adc in sarl mov repnz or mov inc push mov sbb outsb sub outsb or sti in adc out int3 push aas mov lods lcall jmp fs icebp (bad) sub xchg ja jge loop (bad) xchg ror cmp or add mov mov or push jg fcmovnbe xor push cmp and movsb pop jnp and jle lret testb add lods popa into add xorl repnz nop das pop mov testl inc add push mov mov pop cwtl pop or cld arpl mov aad mov sub mov stos and ret test ficompl icebp dec leave mov xorl and loope dec cld xor add jge sahf or int inc mov popf clc enter xor shrl jg sub adc call mov and jl out mov hlt cmpsl jmp and jmp rcrb repnz add add rcll mov pop cld push in mov push mov pop (bad) mov jb mov sbbb mov and stos xchg mov jb xor xor cmp aad jecxz xchg sub cmp mov mov jle aad fs loop nop mov cld aaa les mov decb stos add or mov or mov pop imul adc or rol mov xor enter outsl and iret sub sub xchg push mov cmp imul cltd and mov cmp and hlt sub xchg inc xchg and and jmp push repnz mov adc icebp in or notb mov xchg cld add stos cwtl clc and pop fs loop subb sti test clc out mov clc fbstp jo je dec pop jno ret sub and jl lret fstpl inc (bad) insl sbb mov fldcw ret add fcoms outsb mov lods das xlat std cli xchg scas out daa mov xor test fs mov test iret clc mov cmp cs pop (bad) ja dec imul out xchg jmp jns dec ror adc pop mov (bad) (bad) fsubr fildl push imul shrl sarb pop shll lret test jg adc sub pusha sarl push and cltd or sub lods out mov or xor cs icebp aad jae sti cld xchg int int3 insb mov mov sub les mov pop repnz lret mov pop xchg dec out mov adc pop jecxz pop mov out repz xor out rcll out xor adc in and iret xor mov fadds push and sti mov xchg mov (bad) mov inc scas addr16 iret stos popa jne xchg jp add push and lahf push jbe std sub lock and inc inc or mov jecxz cmc scas repnz push push into stos pop into cmp lret add mov test inc fldcw std xchg dec pushf add fsubr jne inc gs xor popf and or inc sti jbe mov pop add js (bad) aam pop out xlat stos fbld or dec mov insb sub (bad) hlt hlt adc add shrl loope (bad) hlt xor adc and leave mov push shrb lahf jnp or add sbb rcrb das xlat adc in out push or loopne aas dec sub mov pop test xchg mov mov adc pop xlat loop je imul daa (bad) jmp mov adc in lret lahf int3 and jp pop or or iret push sbb and jno negb inc outsl add movl call ret mov ret cwtl insb popf pop mov ret jne xchg pop idivb int3 fistp idivb out (bad) jae movsb jp mov gs push or mov add ljmp gs fidivrl bound jae jge data16 add in dec rolb outsb or shrb sub (bad) push sub imul cmp push pop push push loop test (bad) stos cld jle scas adc fwait mov push notl loopne pop lret jmp cmp push lock or mov daa xor into xlat shrb (bad) aas (bad) dec negl xchg iret mov call dec jmp imul cmpsl outsb or mov push sti push stc xchg jmp sub mov mov xor div icebp popf (bad) or pop test rdtsc jmp in fdivr js cmpsb jae fs jne mov jecxz js jge scas lret sub dec data16 enter repnz mov sub repnz adc loop aad cld test mov leave divl aas dec enter xchg and or cmp divb push mov or lods (bad) mov pop mov pushf cmpsb cmpsl imul ror ds lds mov in lret cmpsb and gs fstps jmp lret out jo push mov insl inc sub jnp jmp (bad) idiv add cmp xchg sti dec adc sub scas mov adc ds and jo out mov das xor push les xor cmpl fcmovb push push xchg inc sub dec pop xor pop mov add xchg (bad) sub incb sti add sub mov rcrb cmp ja sub jb out jle pop out leave (bad) jmp dec ljmp or push mov lds repnz and (bad) and xor push push or xor ljmp aad xchg or jl bound into push fstps outsb loopne (bad) mov cmp push stc ljmp xchg outsb call mov lea jp pop aas cmc sbb mov lcall pop out loopne repnz cmp setl les pop test add mov (bad) mov in aam mov push jo pop das mov rcrl out xchg inc mov sub dec cwtl add sub adc add test and mov das (bad) hlt fwait in push outsb call or mull les shr mov cwtl ljmp (bad) sti idivl pusha dec shrl push adc xlat jmp aam aad adc mov pop add push xchg jl stos test and sbb xor cmc xchg outsl push lret sub lahf lds add repz lret jmp jp shr mov add sub mov and hlt pushl push push xor or jle pop lret xlat pop imull or into loop shl or call xchg jno or mov jb imul pop (bad) push out mov add cmp sub cli iret xchg push cmp or add push ljmp mov sub daa xchg add push jge sub sub out popa and jo sub scas aad sti mov dec scas sub cmp dec (bad) push pop xor mov jmp cli push faddl and in and das xor sub (bad) push jl lock pop dec fist mov add imull pop add mov scas jb cmp push fwait push idivl cmp xchg cmp movsl mov add aam mov pop mov cwtl loopne or fs pop push test mov inc inc inc fs push loop dec pop jecxz pop repnz and dec dec into xchg sub or push push xchg aam rol (bad) jne cmp out out sub in cs pop xor push xchg sbb adc dec mov push (bad) push push cld or sub dec cli mov jmp fildll adc jmp cld mov iret out das adc pop sub and mov xor out sbb sub std cmp cmc sti fildll pop mov jmp adc pop jmp pop push enter dec dec sub (bad) xor (bad) jg cmpsl inc add xchg lret mov mov shr (bad) cmp rol pop scas cmp jecxz hlt mov push ss mov and push out inc mov push scas sub xor arpl xor sarl xlat bound icebp ja add fstps jge (bad) add scas sub iret and mov pop aam in ljmp outsl addb or push mov outsb fisttpll jg pop test push test shrl and xchg mov (bad) imul orl cs sbb enter (bad) idivb mov test dec cmp jbe leave inc cs clc push out xchg xor jg lcall in inc movsl pushf and cwtl adc icebp sbb sti mov ds divb popf popf mov scas push or jbe into loop std int aam (bad) xchg lcall ljmp clc and mov pop into or lods mov inc seta or mov sub (bad) outsb cwtl sti pop loope cli enter insl cmpb mov jle jb in adc adc lret lcall xchg sahf out jecxz sarb xchg (bad) mov shlb addr16 enter sub imul shll jno lcall inc pop and add adc cmp out test xor cltd stos ds bound mov pop insl arpl cli sub (bad) mov enter sbb xor cmp leave lcall dec push sub xchg and push sbb repnz leave mov jns movsb mov shrb mov fdivl idiv aaa jge das mov ja gs icebp mov dec stos daa and aam sub and out test jmp in sub shll sub sbb mov pop and lock pop sub lds icebp hlt mov iret mov scas test push push jb mov orl mov mov rorl dec dec xor scas js xchg insb jmp mov mov imul ror aas daa push jge sbb fcompl pusha daa roll (bad) jmp fwait and push jae xchg test aas jmp loop push fs cli cmp sub add xchg sbb xor testl inc mov sub into pop insb psadbw and pushf (bad) fdiv ljmp insl xor or jp out das add dec pop jo loope insb int3 pop das mov adc cmp xchg lret pop and gs clc lcall xchg dec push mov test jo dec loop and enter xchg push clc mov mov push dec mov and int jno cs loop xchg inc pop call mov dec int or mov jg xlat stc cmc inc loop mov sub mov mov sti outsl dec icebp dec (bad) je push or mov movsl fiadd mov mov mov jle shrl lret es (bad) adc or cmc mov xchg lret push dec jmp inc inc or loop push dec jmp mov popfw xor jmp mov insb and push push test adc pop cli repnz jmp daa add inc lahf mov push sub and mov sahf xchg pop loope lds iret loopne and push popf gs ds clc jns sbb sbb pop mov mov mov and xchg sbb xor xor xchg jge lea xchg jg dec xchg pop icebp cli sub sub xor lret movsl enter loop jo and mov repz fcmovnbe std (bad) and orl stc out mov jnp leave fsubl mov mov out popa sbb mov mov jns dec cld pop push popf loop leave leave fs stc xchg adc xor mov xchg cltd cmpsb jmp or mov push mov xchg or pop pop insb pop dec leave xor or xlat mov dec movsb pop loope test mov (bad) jmp cwtl nop (bad) xchg js xchg inc outsb push push repnz xchg mov and dec (bad) out fidivrl fldz mov sub push and fstps sub test push jbe inc mov lcall push stos enter sbb adc in or mov mov xchg cmpsb mov fldcw pop xchg (bad) or pop inc xor and rclb mov int add call add and les pop cmp xor icebp (bad) push push and das imul push leave into pop pop sahf adc stos popf imul aaa out mov std sbb ljmp mov xor cli les sbb pop repnz or notl out add imul jge add sub gs pop add roll lret pop shrl mov iret mov mov dec push mull test or sub and gs push jbe dec imulb xchg aad push jo or jle popa loop pop mov dec pop dec into jmp cmp dec or push xlat lds pop or sub or mov push je gs daa mov or (bad) xor mov mov push stc out lods js pop sbb ffree aad or sub ret inc cmp pop jae add movsl test xor (bad) loop xchg loope js mov test or or ret mov dec sti adc inc repnz xchg mov jne lcall jne mov sub or and xchg pop daa sarl outsl movsb mov out popf stc pop or pushf rorb ljmp loope into mov jg xor ds push fidivrl mov ret pop jo lahf cld mov sti pop mov mov pop (bad) or and xor iret leave not inc sub mov jo or push xor pop mov and dec stc pop lret mov outsb insl (bad) cli cltd lea push sub xchg adc dec cli popf shrl pushl add mov mov shrb lock loop aaa jns mov ret loope and out mov daa adc push mov mov or aaa pop add pop adc inc iret test mov lret dec sub pop jmp lcall xchg out out pop (bad) jb fidiv jno inc dec sub and (bad) cltd add jns pop add sbb cmp adc dec sub inc add xchg lcall fbld inc xor dec and push mov faddl pop shrb pop leave (bad) jbe push cld mov (bad) scas mov adc ror add repnz (bad) data16 pop lahf out pop mov and inc xchg mov int3 out dec sub sub pop and shrb fcompl out je scas popa sbb shrb lods adc jmp cmpsl cmp ljmp cmpsl loop pop inc and pop daa scas aad cmp ljmp movsb cs dec into aad int3 sub xor push nop addr16 sub or nop mov fiadd dec or mov and push jle mov jmp loopne (bad) dec xchg jge mov jnp and dec aad inc dec fcomp nop ret fidiv cmc scas sub xor inc jae imul push arpl jno inc mov movb xor inc repz pop xchg mov and xor xor popa mov mov (bad) outsl loop sar aam and dec sub (bad) jae psubb fldl mov mov or icebp xchg adc (bad) xchg sbb (bad) sub test cwtl cld (bad) mov cwtl fcmovnb push mov stc sub xlat lea bound cmpsb imul pop mov hlt jmp inc pop pop cmp mov repnz jmp fisubrl pop or xlat xchg sarb fnstcw pushf mov jmp fldcw outsl lods jns in scas notb ja add ret insb loopne ret pop adc sahf ret out pop or lcall repz mov and xor (bad) int or xor xor sub mov or or int3 gs lea or sub roll adc stos xchg lock ss lock leave into inc popw mov in lahf dec movb fs mov sbb mov inc shlb pop movhps aas fbld shll ffree push das fstpt test jo xchg cmp inc push icebp dec inc mov fidivr (bad) and movb push xor push push push inc sahf cmpsb (bad) cmpsb enter mov es add push mov mov movsl int and push rcl cmp push mov cs and mov dec xchg jmp imull or nop or push xor daa pop xchg pop mov ja je mov lcall mov fiadd push cmp pop xchg stc mov (bad) out push ss mov (bad) out lods test out fsts outsl idiv ljmp mov sarl push (bad) mov dec lock mov jb sub mov aam clc into mov bound pop or int3 push add dec xor sub inc les mov in and or (bad) scas xchg mov loop xchg mov and pop ror das ret jns out xor popf pushf loope jp out mov sub ficoml jle aad jmp stc sbb loope out adc and push push rclb xchg iret push jmp push enter int3 adc push scas mov sub jecxz cmp jmp into mov mov fldenv mov leave fisubr mov add mov xor je mov add popa xchg xor xor mull repnz mov jmp lret or push mov jmp push sub call pop mov pop mov xchg repnz add add add mov or int pop inc xchg aaa popf insb dec jg push push jbe push inc xor add xchg out or leave ja pop insl sbb arpl mov add xchg popf andl fstpt mov (bad) push xchg fimul add repnz popf sbb dec xchg lods jmp loop rclb loop pop das lret adc scas mov inc sahf or sub out mov ja mov adc mov (bad) xor hlt ljmp int3 fisub xchg xchg xchg out pop repnz and and or pop ficom stc arpl cmp ljmp fistpl clc aaa (bad) test mov add stos push adc leave adc mov cmp leave hlt mov js xchg pop roll ljmp mov js pop jge jle int3 xlat je (bad) lock jmp mov sub or lahf jmp les jbe mov dec dec movsl lret sub je hlt jl negl dec mov movl outsl mov iret mov jge lret jb xchg pop popf aad pushf mov (bad) idivl cld mov xor sub sub inc fildl xor pop int3 mov and sti cmc cmp aaa rcll mov jle leave cmp pop out dec dec imul xor pop mov (bad) mov or js gs and cmp sarb (bad) cmp mov xor adc inc add and repz adc sbb mov or mov cli cmp call cmp ret lods icebp es mov add xlat mov mov dec mov pushf pop jl loopne repz dec and test daa mov push or xchg dec xchg xchg xchg add xor xchg and and (bad) repz dec mov ficom sbb cmp stos jmp mov dec xchg daa (bad) or (bad) stos dec (bad) pushf cmpsb adc mov pop icebp ja xor out int3 lock cmpb into ljmp pop in sub mov xor out mov (bad) aam and ret fistl dec mov lcall (bad) out test add cmp jmp sub mov adc pop ret push (bad) sbb nop push add popf (bad) xor jle cmpsb lds adc ret stc jp inc sarl cs lret jmp daa pop mov ret sub movsb shl ja icebp jno pop loopne and jmp lret lea xor (bad) (bad) (bad) outsb neg dec sub popf xchg sub sbb sbb jae or test mov loop les xchg outsb mov sub xlat mov ror in icebp or movsl subl xabort loop xlat inc hlt mov add (bad) xor sub (bad) ss push cltd (bad) fs adc movsb xchg push sbb arpl or sbb sbb (bad) or imull mov xlat and dec xor xchg (bad) cld add xchg iret repz out jo push sbb std xor lcall sbb mov and xbegin cmpsl push jne (bad) fdivl imul add aad ja insb push xor mov xchg cmc sti sub insl mov mov cltd or les rorb repz push push inc lret xor sub mov push in stc repz clc pop and mov cmp repnz (bad) cmc mov and inc (bad) cmc xchg jp inc movsb mov cld sbb or cmpsb sub out xorl lods and mov or push inc daa mov mov mov mov bound jmp inc pop and mov enter hlt cltd imul out lods or lea mov int3 scas adc jo inc or mov cmp lahf shl cmp lahf sarb sti cmp or jbe,pt fs not pop je leave mov push and xor and fisubrl cmpsl (bad) pop cmpsb mov incb ret (bad) pop mov push mov add (bad) int3 jns adc loopne out mov repz in and sub inc lds mov sub mov mov mov sub jle mov (bad) xor mov sti mov xor stc pop dec xor pop mov leave imul dec pop jmp adc mov adc jnp shl mov (bad) sub nop dec jecxz or jnp and stos popf adc add mov mov mov mov mov loopne,pt out xchg std adc popf test mov xchg mov mov loope (bad) xchg pop sahf ret push xor sbb xchg jns jecxz fcompl pop (bad) mov xor xor sub in (bad) mov roll loop (bad) call rorl test clc adc inc pop je frstor and repz leave dec cwtl addb sti enter xor repz cmpsb imul jecxz xor mov sub pop sbb push bound lds fucomip ret sti dec leave lret pop adc jmp mov mov lret jbe rclb xchg dec sar or int3 dec mov ds (bad) push or pop (bad) or movsl idivl notb leave cmpsl jmp and xor leave jne test xor xor and xor mov das popa imul pop das mov dec and sbb mov jns fisubrl movsb mov inc js leave mov adc mov (bad) fcmove push mov jp test setl xchg imul ds add cmp inc ror jns inc mov pop pop pop and pusha push rclb pop sub adc sub dec pop (bad) mov pop xor jecxz jle xchg in inc mov push fistpll mov push movsl and xor lret xchg push sti xlat test jecxz jp sti je mov pop in ljmp jp (bad) scas lods fldenv or (bad) cmp mov cmpsb or and pop push (bad) cmp (bad) ljmp out and imul (bad) xchg in mov and out jg imul xchg repz cmc xchg adc bnd sbb push shr jmp add inc or jge dec (bad) xor pop (bad) dec incb iret test or negl test cs and xchg fcoms stos fcoml xchg lahf adc sub adc add jbe pop mov (bad) jno and jp cli xchg xor or sub dec pop decl clc cmp out mov fwait outsb or push fnsave xchg add pop mov sbb mov or dec and sub mov xchg icebp xchg repnz nop xchg into mov xchg or repnz adc mov daa negb gs or pop sub aaa or ret mov or (bad) xor dec mov lds daa sub dec sub xchg jp push push sbb xor jmp in fistpl ret push fildl cmpsb sti xchg idivl mov push jo popf sti lret mov sub iret test out testl ror pop mov hlt in xor into pop sti dec cmp icebp push xor movsl sbb gs ss jg (bad) dec mov ret and imul lcall in pusha mov stc xor jb leave test fsubrs pop sarl ds push das lret pop enter loope xchg sar xor mov and mov add inc mov mov mov lods aam fs jecxz mov pushf pop in daa push inc imul ficoml xlat fistpl sub pop adc cmc sub add mov add xor sbb mov fild lahf stc pop inc sub jne int3 sub pop inc xor pushf xor jnp push (bad) jmp push (bad) pop mov xchg dec adc loope sbb sub dec push xor ret aam jmp bnd mov cmp subb adc push adc lret test inc loop adc out sarb in and push jbe dec mov out mov sub xchg icebp push xor mov pop (bad) push add fs aam stos lret and pop shll imul dec and add lahf loopne cmp mov push sub inc and adc ljmp outsl std (bad) hlt cli call repz (bad) (bad) into in mov add mov shr mov das sub xchg sbb push dec cmp cmpsl aam cltd (bad) pop (bad) pop inc sub jmp hlt sahf imul je inc dec mov mov pop jge mov inc call icebp mov and leave sub add mov mov (bad) cmpsl adc (bad) mov inc stc sub xor cmpsb mov xadd push add mov sub mov ljmp std dec out incb call movsl (bad) push repnz sub int3 pusha xlat pop sub ljmp dec orb jp dec adc pop popf in xor pushf fiadd repnz pop lret and loopne or push cmc or fisubl and add mov aaa xchg jo inc pop mov enter mov mov (bad) lods inc mov inc nop clc push iret jnp inc lsl xor mov es ljmp fidivl cmp and lods (bad) lds push scas cltd in cmp shlb fidiv ret xor mov js mov iret cmp xor loopne outsb mov push nop xchg (bad) pop std movsb std mov dec or nop pop pusha pop arpl sbb insb add mov mov in sti sarb jge sub mov movsl (bad) jg mov ret mov push dec inc inc or mov or inc mov and push and stos sub adc xor sti int xor xchg cmp lahf xor imul mov arpl fsubl cltd (bad) mov sub jo daa (bad) je rorl add pop inc das jge adc ss xchg dec dec iret stos int3 lret out mov mov mov clc mov mov je pop mov je push cmp dec cmp lret or mov add inc inc stc int3 movsl push push jg shll xor into add inc xor mov negl scas mov inc popf mov xchg inc loop xchg lea imull cli mov add lret push xor jne or adc cmp repnz mov dec clc xchg jle pop lret (bad) xor icebp push and xchg jbe pop mov rcll cs mov bound pop movb sbb repz sub icebp push hlt imul xor cli cmp (bad) push dec loope push fmuls push xorl push xlat test (bad) fsubrl mov and push inc stos lods pop push inc or xor adc mov or add stos (bad) leave adc jae dec into imull stos mov xor mov in enter daa jge ja xor and insb div repnz fstpt push repz lods arpl sub lods xchg (bad) decl subl addb gs ds aas lahf push add lret cmp rcr mov negl xchg cld jne outsb lods jg adc mov sub xor repnz pop push cs adc lret lock (bad) mov mov sub mov stos testb test and add stc popf notl push (bad) xchg loop fsubl and pop pop jnp jmp not cmp ficom cli jmp push or imul ret outsb das pushf xor sub jmp mov fwait adc int3 fsts xchg negl lret std lcall cli and gs and repz adc mov xor pushf cmc xor jmp xor bound xlat gs leave mov and ret js jg das lsl das (bad) jae mov sub or dec int das out rclw pop or ret mov xchg dec jno jge push frstor pop jnp out imul or pop shlb cmp cmpsl insb xchg ja xor jge push or out out mov idivb mov pop mov add jb mov je or pop push sub mov cmp inc jmp cmpsl icebp pop sub jns cmp mov sti imul xchg fs pop cwtl jmp sbb inc sub sub repnz sarb xchg mov ss lock mov test sub insb ror ret inc popf xor xor mov sub push dec roll popa mov jecxz push xor mov mov push jns xchg stc (bad) or into jae das (bad) and push jne or add or sub pop or rol popf test nop pop xchg adc mov int mov push jecxz jae add (bad) mov or leave xlat push jns js jg (bad) jmp xor mov dec scas sub add into iret xchg cmpsl (bad) mov cmp sbb add nop push pushf xchg imul jno dec out sub (bad) out mov pop lods jle mov add repz dec (bad) mov out leave mov jmp add sbb mov cmp in fs not push pushf out movsl jg xchg jnp scas push imul xchg add dec xor pop and add xor cmp dec sub lock movsl adc push push xchg (bad) fmuls xchg xor jno add (bad) sub push mov rcrl test mov (bad) fisubr fsubs cwtl xor lret cli imul mov dec xchg das out idivl add insb cmpsl das repnz push xor cltd sub ret das shrb dec insl adc sub out pop push scas pushf loopne mov stos push mov lods push mov (bad) aam dec leave xorl pop sub adc out sti cltd jbe sarl sahf and add imul pushf mov cmpsb sbb pop ljmp mov popf shlb sahf cmp mov dec leave sti mov pop mov imul and dec out and jmp movsl div ficoml into or xlat mov imul pop js mov pop in and ja ljmp pop icebp outsl dec loopne (bad) iret adc or out push add sub icebp inc xor dec lret xchg xchg mov ds xchg stos lret out cmp sub sub mov xchg out jmp or and aas test mov insl dec mov test push sbb sbb (bad) inc sbb push call jne jecxz sub jg test xor mov imull mov rcr leave and ja mov notl aaa and popf jbe in stos repz add es xor out test fbstp icebp ja lcall sub adc add repnz rorl nop movsb mov aaa sbb fidivr mov lret push cmp sbb push jmp pop fistpll cmp movsl push adc lret lea test out sub sarl lret testl pop negb not push into and gs fidivr rcll or mov clc scas ja sbbb and and bound loop (bad) lds sbb cltd fisubr lret push sub or test enter (bad) ja iret dec adc sub icebp pop out cmp and or and jae sbb sub mov ja jnp mov mov adc add jl ds xchg push in mov mov cmpsb imul orb (bad) andb lock pop loop jge xor stc mov daa cmpsl std pushf (bad) and pop add inc mov sub and push dec sub andb push dec mov test repz xchg sti int sub cmc or fimull jne negl repnz ljmp mov mov ret das and or mov out pushf lret out or push mov enter fbld push scas cmc lcall notb lret jge or cmc jbe es jno dec or inc push cwtl outsb test rcrl cmc xor push hlt rolb bound mov or repz std inc comiss adc mov mov cmp jmp gs add sub cmp mov fisttp xchg fist inc and les add repnz loopne rcr push arpl pop add sbb pop dec pop ss xor std icebp pop outsb xchg mov and jmp mov movsb call out imul popf jbe lret jae and pop (bad) std push sub jo into popf xchg xlat xchg imul add aas xor mov xor dec adc push sub pushf or cli repnz in lods (bad) (bad) mov add decl add das out pop stos adc fdivrl and cmpsb mov das int3 xchg push out pop icebp lahf out clc ret xor sbb enter out push adc mov out rcrb push mov mov pop adc test mov xchg adc int3 or mov xlat (bad) fnstsw push sub cmc adc dec js xchg leave jg cmpsb pusha dec mov xor adc and cmpsl out negb daa scas pusha or and mov pop xor pop stc in mov out mov aas stc or das (bad) mov fmuls mov (bad) outsb stos iret xlat mov cs imul jns das lods dec movsl (bad) idivb and ret add xchg mov rcrl add repnz (bad) mov jge mov or (bad) xor fbstp pop loopne icebp rclb dec mov add loop int3 cmp push xchg sub les pushf cli fnop mov (bad) pop pop adc leave adc inc and enter add pop and stc mov push ret repz inc fistp pop test mov add popf movsl pop outsl mov inc add pop popa add sub xchg mov iret jmp xchg dec mov (bad) or adc cmp and mov fistpl mov inc idivl aam mov pop pop popf imul add xchg pop and mov adc jl and sub push lods sub into add loope leave xlat adc mov mov mov fs cwtl loop inc imul jnp adc xchg stos cltd stos outsb jecxz pop mov jno movl dec std or rolb idiv sbb pop push loope mov jo aaa push pop jne cmp xor push lret mov sub sbb xchg shrl iret sub ljmp mov les lds xchg loopne loop frstor (bad) cmpsl xlat (bad) idivb inc inc push xchg inc pop nop negb cmpsl push mov mov ret je ja add scas dec and sub mov xchg add fidivr nop xchg ds lret pop mov dec mov sub adc dec pop mov je icebp dec mov push jne ds mov pop push mov pop sbb ljmp sub add fdivr into popf fadd push aad pop pop stc icebp pop and mov lret or lods out dec push mov dec clc push pop loop sarb loopne push dec or cltd xchg sub test rcll xor cld movsl push out jne (bad) popf jne xor and jo xchg pop and (bad) mov mov add mov inc xor push or cmp ds sbb mov push in fdivl out mov add mov cs sbb mov xchg in sbb stos sub out adcl mov jp jp xchg add add call push adc fidivrl mov in push xchg fwait lret dec adc out add inc mov jae icebp ret pop pop pop sub imul lods movsb adc sbb pop sbb and mov lods in or sbb ja out mov add cs fsts aad push pop addr16 mov sbb sub add lcall mov div pop sub rcll add or push jmp push inc push mov push dec and flds and push mov or mov cmp xor (bad) nop je scas icebp fbld aaa xchg xor cmp or sub add pop (bad) mov and xor jp sub popf shrl out mov mov dec fisubr or and ss fstpl add data16 cmp xchg repnz adc int3 mov (bad) scas int3 (bad) popa cmpsl (bad) mov out cmp in movsb mov mov hlt sub movsb mov icebp push push daa sbb (bad) mov mov sbb xor add je ljmp icebp lds pop mov sar mov pop shll daa (bad) mov mov fs out arpl xchg jmp mov ds fstpl data16 fs mov mov mov mov iret lret out push lods xchg or sub cmp lret stc mov sub jnp out cld clc mov adc add lret orb jne inc lahf cmp sub push lcall xchg into das xchg inc leave or cs pop adc stc rol ja and mov arpl cs cmpsl mov pop jne repz (bad) or push imul sub xor inc adc sub dec leave push dec or cli add rorb and add cmp xchg lret jg push push hlt or flds (bad) push addr16 inc sti xchg xlat cwtl add loopne dec insl (bad) fdivrp jge daa arpl (bad) (bad) jge mov adc add mov out mov add mov cmpsb js sub push add jo mov pop adc sub or sub adc cmp pushf cmpsb cs imul ja and sbb lods enter into jmp mov (bad) dec push daa imul ja mov out cltd mov cmp or sub (bad) mov out adc movsb push adcb iret push xchg outsl lret push adc in dec cwtl mov lahf push out pop insb cmp push cltd mov repnz out (bad) sub ja cmp call fs scas xor repz sub inc (bad) das or sbb cmp iret or xor (bad) (bad) push and out bound fcmovu pushf test mov or pop int adc mov and dec divl inc jp sti enter rolb mov pop and stc ror cld mov movb push jnp and fcoml std sub mov scas or lret xchg add inc js loop sub out jbe les lret subl js ljmp push mov lods loope loope lds jo xchg sub js or cs jb ret (bad) dec xchg je in or in mov ffreep jle xchg mov cld shl xlat je dec clc repnz roll out push (bad) out mov fisttp iret and jno ret push jb xor push bound (bad) ja and xchg mov stos push loope cmp mov lock push or out add mov pop add inc add outsb out shr pop sub xor xor mov ret roll mov imul out scas dec mov scas xor mov pop sub ss sub daa fldenv fcmovne xor scas test movsl xchg xlat mov fwait ja and dec jle loope cmp inc sarb je rcrb mov stos mov out mov inc or sub mov xor (bad) std ljmp xchg sbb push stc jle cltd jo ficompl stc mov testb sbb (bad) (bad) or mov mov or into (bad) dec (bad) (bad) (bad) jle movsl ljmp sbb in sbb dec repnz (bad) xor push cmp xor (bad) xor sub cmp mov mov mov lret adc bnd or test sub inc push mov sbb pop inc or push jbe add and les cmp adc sbb nop inc sub xlat int stc adc call shl pop adc insb pop sub popa add mov out adc cmpsb stos jp out inc lds repnz adc xorb in ret mov (bad) std or mov jae mov sbb ljmp mov pop pop push jb imul (bad) mov fisttpll popf sbb xor pop cld mov fidivr and cmp cltd sub sub cli or test wbinvd out outsb pop or xor or das je pop clc std int scas enter xor adc stos cmpsl popf (bad) xor cmp xor xor jp jp xchg (bad) mov aad or addr16 lret add xor mov gs cmpsl push dec clc mov dec (bad) adc repnz fucomip xchg sub dec loope add mov inc bound xor cwtl mov mov mov xor xchg fstpl mov aas push adc jb negl xor out push mull mov sub adc nop lcall scas sub nop (bad) jb sub lret xlat inc or mov ja push mov sub loopne xor test adc mov scas and stos mov dec mov imul inc jne mov dec adc into jne and in dec cli imul pop pushf mov aad jecxz into scas dec movsl mov fist pop pushf arpl test adc les pop mov pop sub jb xor sbb lret (bad) mov es xchg je scas fcomps popf add pop push scas push jns add or or test pop pop mov jnp mov push (bad) mov inc je ljmp fistpll negl xchg jecxz cmp imul pop int3 (bad) xor pop mov hlt mov aas dec ja ficom dec xor jmp adc sub fmull add addl or xchg shll add mov aaa imul insb xchg in or sub adc sub dec subl sti xor sbb cmp rcrl lock das into xor dec sar test stc jge iret sub imul sub mov xorl sbb pop (bad) idivb repz in stos dec out adc sbb mov sub xor sbb mov pop xchg dec mov pop gs mov ja pop fsubs pop orl push push clc dec mov and sub jne adc int3 xor stos cwtl sub jl pop jbe jo cmp sbb in mov sahf pop sub pop dec mov cmc jno enter adc loop xorb sbb push jl and daa rolb lea test push ds decl mov pop push mov sbb push shr in rcll (bad) jmp notb lea xchg sub mov xchg leave test or dec fs movsb add xor ljmp ss xor rcr lret ret sbb mov ficompl data16 sub mov mull faddl ja mov (bad) mov pop jmp je xor mov rcll dec jmp scas call or cld jmp jle out cwtl mov mov icebp jno dec jg out (bad) jg repnz xchg add or movsl xchg push repz and jne add and or (bad) xor push bound adc sub push mov (bad) adc scas sub inc push in adc out jecxz cmp jo outsb das nop mov cmp mov insl mov cmp stc lahf jo or jbe test mov add mov lret adc push xchg pop insl adc decl jmp out ljmp mov or notl (bad) daa mov and jns imul adc sub je lods mov sarl xchg loope insl jl mov push ljmp mov and out repnz ret or notl cltd xor mov sub mov stos sub add out das bnd xor daa inc adc dec mov and scas in mov or insb (bad) ficom push mov push pop outsl mov cmc xchg sahf popf jo pop fidivl xlat loop pop mov sub fwait jmp lahf adc les dec mov jecxz sahf stos cmp mov ret test (bad) xor (bad) xchg ret das pop xlat add es ficom std and xchg mov or mov (bad) sti jo fistpll dec mov push sbb and mov iret ficomp push jmp cmp mov insb dec in loop,pt aam push add repnz mov cmovae push in dec rcll negl jae imul xor mov pop cli pop jno lods aaa pop sbb xor cli lret xlat inc mov mov es out push pop sub in (bad) pop sbb xchg adc jno pop push or fildll inc fmul sub inc mov int stos out js and mov das testb xor add (bad) sub in mov or cwtl icebp dec add add sub cmp inc sub addr16 sub and pop cld push fbstp push or icebp dec (bad) mov daa call and or insb je xchg and adc dec cs push pop sbb jne lcall and repnz fnsave ds test (bad) and jecxz sbb pushw xlat sub jns add cmp sbb fistl in adc xchg out push pop es daa mov (bad) cli xor fnsave (bad) rorl add and (bad) (bad) shll sbb stos push (bad) aas xor or sbb xchg in aaa pop mov cmpsl in shrl (bad) repnz jmp mov sub jp (bad) out mov sar repz (bad) xor or jmp dec ss mov mov sub out add movsb (bad) mov sub test popa mov cli lret into repnz mov inc cmp enter sub daa aad sub jge scas xchg aam lret stos add inc mov repz addr16 sub xor sub cs int3 mov popf jg jmp jae stos test xchg fcompl int sub dec lods lods hlt jmp aas sub inc popa pop mov in or mov jp mov or ficompl in mov cmp add and mov loope sub mov dec das subb fbstp pop icebp sub (bad) movsb mov mov sti or popl inc pop outsb jb or and clc cmp out addr16 jg jl inc and test popa aas mov push pop aas mov ret push daa and xlat xor sti arpl ret rcrb and call xchg aam jb and std mov scas sub negb sbb aam aas and and xchg out shlb mov sub add mov daa (bad) (bad) mov popf pop (bad) mov mov loope (bad) mov iret test mov sub icebp fisttpll in push leave rcrb add dec subb inc push inc std sbb out into nop push repz and add inc mov int3 loop sti xchg xlat rcr int or dec rolb mov xchg int3 ljmp mov xchg xlat ds inc xor add mov pop out adc jnp jne lea pop or es loope icebp addr16 into out adc mov in inc dec fmul mov xchg mov sarb dec xchg xor or enter mov fsubp or icebp sbb xlat out stc imul add lods gs xor ljmp mov xchg jmp movsb pop xlat jp jmp push stos xchg in cs cmpsl adc mov sbb xchg in mov ljmp rorl pop rol aas in (bad) mov ret xlat and loop pop push xor cmp push fmul mov idivl mov iret arpl add divl xchg (bad) push jae add fs mov push movsl push mov scas divl shll inc pop pop xor jecxz das repz lea xor pop outsb xor lret sub xor or sub push and mov aaa mov dec popa int push inc jmp mov jl push add in js cwtl rcrl push outsb mov inc sub jge xchg jle leave jg fwait xchg dec adc sub ljmp cltd pop add or add cld jo fnop push andl adc dec into int3 cmp push dec dec mul jne push dec les adc mov push or jbe call scas pop ss jne lahf add popf fstpt dec mov cmp cmp fcmovnu cmp lret inc aaa mov jo repz aas sub ljmp ja arpl cmp mov mov xchg push imul add inc pop mov ret ficom xor jg xor lea jp sbb lock sub add xorb sub mov mov add mov or scas bound jmp and sub or xlat stc gs push adc xchg mov lcall xor das jmp sub sub ja clc call dec stos and test or sbb adc loop add (bad) pop sti je pop jge std out pop jecxz imul dec xchg leave add repnz jecxz repnz add out jmp (bad) loope icebp sub push sub mov test and push loop and ljmp jg mov jge fisttpl pop andb lret gs xlat cli data16 ss xor lret and (bad) outsl ficom dec (bad) dec rcrb jecxz add cmp aaa (bad) shll pop fild push or adc in sub push rol mov shlb adc iret sub jns scas jp dec popf sub xchg pop sbb rolb iret xlat sbb xor (bad) iret pop aam pop (bad) insl and lock and pushf int3 dec mov dec or jbe in cltd push sub out test mov fstpl mov jg or lret cld push mov cmp jae dec repz incb stos jb icebp and jge (bad) push dec lcall jbe repz or in xchg repz mov mov imull stos shrl or inc mov fwait mov cld rolb dec dec aas pop test (bad) lret (bad) scas cwtl dec mov outsb in out daa and add sub fwait xchg test push mov test mov mov dec xchg decb popf icebp das in sbb call mov jo add xor cwtl cmp mov cmp push or xor stos lods jge cmp out lahf push add jnp popa data16 or xlat jb pop (bad) mov pop mov cmpb pushf mov xchg (bad) scas jmp mov mov jge loope insl mov ja fwait push outsb push popf adc (bad) xchg pop mov mov add mov jne ret dec imul and lahf inc outsb and (bad) and sarb out lods (bad) mulb outsb or std xor (bad) ret mov (bad) setle daa pop push aas push pop inc sbb icebp sti xor xor sub insl (bad) pop and or decb ficomp and dec jg mov dec dec sub push test mov scas inc and in and add adc repz bound insb adc insl cmp call lds imulb (bad) js adc ret dec xor pushf sbb add out ljmp movsl outsl ja jae imul mov movsb push mov fist loope adc out and add xor mov mov cwtl fcmovnb xchg pop cmpsb movsl ja mov and or inc in sub dec cmpsb sbb or mov push lods out loop dec lods sub mov xchg inc push sbb stc shl mov jmp pushf xor fidiv inc sub js mov (bad) pop fwait push fildll lret and pop sub mov and mov mov xchg jo rorl jno push shr adc iret or adc add pop mov jg mov push (bad) (bad) mov in in test lds scas orl ljmp pop lock fstps int3 or cmc add (bad) out fs in dec int3 and cltd cmp add fdivl add mov dec les test mov mov add mov mov jbe fs dec movsb scas mov push (bad) rclb lods movsb (bad) rep dec (bad) pop negb gs scas mov push cld stc leave pop xor (bad) repz fwait scas push xchg stos mov pushw repz mov push shrb pop adc (bad) mov shlb xchg aad test sub sbb add and lret jno addr16 cmpsb jae mov test inc and jns pushf mov xor push or sub shr dec aaa ja dec mov jmp mov jno xor jp lock or jle adc mov adc fbld jne mov push enter mov adc ret dec out outsb cld or jb or cli pop inc add xchg leave jne xor ja pop pushf div inc sbb adc insb push pop out sub (bad) (bad) sbb dec jg sbb xor sahf push imul repz mulb scas movsb xor mov adc dec sub xor adc xchg pop push ljmp adc and jbe int fcos (bad) adc daa loopne sub xor ss stc push and push push cltd lods fcomps rolb pop not vunpcklps into pop mov repz xor call imul inc jo cmp iret bound pop jno xchg sbb lret mov pop adc (bad) (bad) push pop jp ja pushf std mov cli repz push xor sbb mov pop mov add pop and hlt or xchg insb popf hlt sti test ja mov adc es cmp cltd xor mov mov ret cmp ficomp jnp or (bad) into pop je loop and dec mov push ret inc mov mov dec or fidivl nop mov daa xchg pop xor rcrl sbb into in sbb jno jmp adc icebp xor mov ljmp and test xor das ljmp daa scas sbb icebp cmp (bad) cmp leave inc repz fbstp sbb xchg movsl xchg into ljmp sti adc mov icebp out int3 gs pop sub aas mov and repnz sub or xor add test push jge in in mov push shll sti sub ret (bad) bound fild pop je (bad) xor cmp sbb sub shrl push loop je jb js xor push adc enter adc pop dec les xchg jmp ljmp adc adc push and loope push lods imul (bad) mov xor dec pop pop idiv out xchg mov (bad) negl scas lret jmp repnz jne scas lods pop mov aad decb or idivb and cmp cmpb and popf mov dec out xchg push mov mov or push dec stc stc xchg mov das fsubs (bad) into mov icebp mov lcall push dec pop outsb lret and and xor std shll bound lret lcall out daa and decb push inc xor mov sbb lods xor adc mov subb mov stos or pop lods fs (bad) or lret out dec outsb enter ljmp pop add test ds jb and and ss add sti mov xchg (bad) fild push mov add adc push add idivl jne stos sub lods jmp and jae dec sahf pop jmp pop dec aaa cmc fnstcw mov andl repz adc xor dec mov sub mov xor cmp sub dec idiv mov cmp jne sub and jnp ds flds lret mov add sub mov in adc int sub (bad) sub xorb sbb add aam (bad) imul pop (bad) jb stc mov (bad) xor sub xor outsb mov mov add pop (bad) mov xchg sti jo adc mov rcrb (bad) negb xchg mov data16 mov jo mov dec loope jmp aaa adc bound ret adc mov bound push ret add mov mov mov mov mov and incl jmp out aaa push shlb (bad) out pop xchg test ret mov cs add sub (bad) hlt jne or iret sub (bad) or sub (bad) fildll ja sub add dec stc xchg inc and cs (bad) insb (bad) fmul and mov or pop mov and sub aas dec and and fldcw lret icebp rcll test or xor add xchg pop add mov adc mov dec (bad) lds repz call mov cs push imul and mov cld inc rcll push pushl or into inc fmull jne fmul pop fcompl mov test sub sti xor adc jne cli inc add push imul inc xor icebp imul xchg pushf xchg jne and stos cmpsb xchg adc mov and hlt and sbb fisttpl pop inc pop mov pop (bad) xchg ljmp cmp mov pop push and jg sub fsubs stc inc or xlat xchg shrb repz xchg sbb movsl push mov lahf add cmpsl aam stos pushf sbb and imul sahf or xor mov shll sbb and out add outsl std lahf nop adc pop test pusha xor and sahf jp pop sbb pushf mov cmpsb inc or pop arpl jno orb jno sub lahf (bad) call mov and and xor jl cmp loop,pt xlat mov push or cmp lret cmc pop movsl add mov pop (bad) lock cwtl cmovnp mov pushf mov es jo loope pop mov in push or inc mov cmp mov cmp push popf mov or cmp pushl pop xlat ja pushf push push mov push pop test call add mov out sub or icebp mov aam push mov jge sbb icebp mov or xor dec or ret insb and fadds cs lahf in pop das mov mov dec mov (bad) ljmp cmp push (bad) fist sarb sti and pop mov and rorl loop rclb pop out jb leave pop stc cmp mov push fsubr out mov sub or sub gs push add xor pushf xor mov pop jmp (bad) mov sbb es dec je pop lahf js mov mov dec stos fnstenv leave dec push fistpll imul (bad) mov pop pop mov dec sub sbb push or jle pop or (bad) mov mov (bad) push (bad) jmp sbb sbb xor nop loope sub repz repz jecxz dec (bad) lret or xor pop enter dec loop adc adc jge mov into dec inc mov jns rclb and mov bound cmp outsb adc ds movsb lcall mulb cs loop (bad) mov mov mov inc and jmp sub mov or mov and lods fs (bad) (bad) cmp mov push push adc iret (bad) jmp repz lcall mov lret mov int3 imul das fsts icebp xor rorb fist xchg ja fdiv push lea xor mov test into call gs lods xchg out das adc sahf cmp add sub pop into and (bad) sub add mov leave aas add mov pop xchg adc shrb in mov out pop and adc xor mov mov dec adc or loop out cmc adc and lret flds mov fistp or (bad) mov (bad) scas xor jns inc (bad) popa or sub jp mov loope push out dec sahf mov jo jl cltd or mov cs fs xor pop mov ds dec xlat ljmp mov repnz jecxz add ret and jne xchg mov out shrb push cli rcll add cld sub cmp add jno aam xor in xor mov jecxz lahf in popa leave aad pop (bad) or (bad) mov imul aad push fldl sub stc sub enter std mov mov pop cli jmp adc sbb pop sub xchg fisttpl scas jbe push jns or in xor jle xor dec and push divb mov jg (bad) jo cltd mov outsb in aam out fcomps mov je pop add inc pop es or mov icebp inc scas inc repz int outsl (bad) aas incl out repnz out popf or imulb into and mov pop xor adc xchg inc call jnp mull pop in xchg stc lds cli push icebp daa xchg leave pop add dec mov dec pop mov sbb mov jb iret dec int outsb lea outsl roll pop and add das fmul out adc outsl lods gs push ss jb lock (bad) insl out aad jns repz scas out xchg mov add cmp test out fadd decl (bad) fcomps in xchg test sar push int3 (bad) xchg (bad) and lahf lock mov push pop xor xchg ret out divb mov iret fisttp rolb mov (bad) ret repnz repz sub pop ja in jecxz xchg inc sub fisub xlat xor hlt (bad) out xchg cmpsb sub and cwtl xor jnp cmp out das jns fisubrl aad js push lods aas movsl shlb leave jnp sub sub ljmp lock mov cmp cmp sub lock dec je or and cmp sbbl mov push das mov jl push dec (bad) loopne not ds cmp jge pop lcall jns imul stc stos mov cmp test xor pop or movsb into repz pop out sbb or stos subl outsl jle out (bad) std mov jne ret adc xor push adc out test mov lahf inc lds sub aam out test xchg cmc push cmp fnstenv sub push inc lods movsl pop lret in inc lret fcomi addr16 stos lcall in xchg nop shrl and add repz (bad) sahf push aaa in xchg fnsave push ret xchg test mov cmp (bad) les je mov (bad) pop sub hlt or idiv cltd mov lods enter scas cmpsb pop dec clc popf in push mov sub ret imul and mov mov jg adc in mov xlat lds xchg mov into out (bad) hlt fidiv cmpsb sub gs mov xchg (bad) notl out pop pushf test mov (bad) fimul xor cmp jg xchg pushf and jb pop sub or (bad) mov jp cmp jbe or mov or icebp outsl xchg add or fsubl cmp mov lock mov jns lret dec ljmp repz pop (bad) xor (bad) and mov cmpsl fisubr mov test (bad) fcmovb inc mov pop test mov cs ficompl ffreep mov int sub insl dec scas xchg imul les jg mov dec jg stos test pop decb xchg mov push xchg hlt icebp pop outsl mov adc jmp rorl bound cltd mov or mov push sti js add icebp add or or mov andl pusha outsl mov mov fnsave cs dec call stc xchg xchg ret adc sbb xor in add or out popf xchg jmp dec sbb push sub jge adc push mov das add xor and (bad) jp lret push aam sub jmp cwtl aas mov (bad) scas sub cmpsl push out pop aaa (bad) adc stos arpl not test clc stc inc dec stos fimull out popf pop cmp test jge dec iret test sti dec inc cld pushf mov dec xchg lret pop push (bad) mov dec bnd and mov adc dec das add cld into out mov mov bound lds pop lods scas xchg xor cltd scas mov dec or cmp push outsb sahf mov push mov es lds mov pop jmp xor sub (bad) xor (bad) sarb sti and inc dec pop sub (bad) leave push (bad) dec pop test orb idivl mov mov dec (bad) dec into push push dec push out sub xor pop fcompl and mov rcrl fs mov (bad) decb pop divb dec loop or out cmpsl fsts add cwtl mov xchg subb mov or sub fsts das lret mov scas cld push lret and adc cld xchg rol mov cmp call jle loop jge jle jbe andl jnp cli push mov cmp iret jmp sbb hlt cmp or clc lcall dec fdivs lods dec repz ret dec ljmp jg mov sbb mov mov jge xchg iret je addr16 xchg sub add xlat mov xlat into mov jno inc add mov loopne add cmp pop push ljmp je (bad) adc pop je scas mov pop daa (bad) icebp test aad adc xchg mov push push rol inc call fnsave add push xchg cmpl adc test mov sub mov jns sub jg lods lods fsubl pop repnz (bad) imul adc adc add dec aad sub out pusha int3 add call lcall or jge fwait call mov mov push clc mov xor mov scas popf mov ret in scas mov pop mov jmp mov cmp mov ljmp adc xor das add xchg loope loop xchg mov sub adc jns imul xor xor fbstp out scas xor repnz xchg out ds into dec lret fs scas lret pop pop stc ja lea jle shll leave rolb jnp and xchg jnp sti (bad) add jle les xor mov jmp xor iret push push mov add lock loop pop mov sar xor fdivrs mov jne call sarb jge aas cs out dec sbb mov hlt and (bad) xor les xor dec xor lret aaa xchg and inc (bad) fs js mov inc cmc into sbb dec or and in cmp push jle mov mov rorl fdiv and sub push push stos out dec iret ljmp fldcw test rep mov cmp cs push add rorl mov rolb xor xchg adc stc hlt pop jmp stc push dec mov call and inc mov sub lods (bad) mov aad test outsl jne mov jge jno or sbb idiv mov (bad) push inc mov (bad) jne push inc jp lods jnp jmp int lret test and mov xchg pop mov mov mov divl push sub sub loope ss sahf cmpsl jne movsl mov movsl add pop ss loop push jp mov icebp and inc sbb imull adc jo pop fisubr stc and dec mov mov sahf adc loope lods outsl mov xlat in das (bad) cvtps2pd lcall jle mov lret mov and imul or add jno in push clc pop mov aad push jg cli pushf mov sub jmp and fist rorl and sub ja sub push sbb mov (bad) xor mov outsb fidivl lock fiadd push adc dec rep loopne or or or adc xor push push popa mov roll push les clc notb in js fimul fstpt and das (bad) mov jl lds loop shr lea out sub ret test mov dec mov pop push jle adc mov rcrl sub in mov pop xor les setae mov mov cmp call ret xchg cmpsb sub jg inc (bad) scas mov stos cltd hlt das les scas aas bnd sub mov popf mov fisttpll out xchg pop mov dec ljmp mov push into cmp add push dec sub test loop (bad) xor aas push out mov xchg xor dec neg mov and sub insb push fmull pop jge cmp outsb mov mov stos das rclb popa fwait lret gs pop inc xor clc rorb xchg movsb pop inc jl and xchg lea jl mov out inc cmp fsubs push sub mov clc insb jne inc mov (bad) popf cltd stos (bad) out mov xchg ljmp test into outsl in adc adc sub sub dec mov xlat mov jnp es jnp gs mov lcall cld sub xchg lahf pop sub test fprem fmuls mov sub movsl pushf push lods rcll cmp fidiv cmp cmp mov bound mull jo push mov (bad) cs stos pop inc clc dec imul or movaps std insb mov or push sbb mov sub mov or test inc push scas test jecxz call stc call test movsb rorl bound mov adc or fldl mov and fs or push mov out xor inc jbe out mov in pop and mov sbb lods push enter call mov ret inc pop jno adc rcr or dec (bad) jmp push shrb les mov aad add mull cld popf jae jo (bad) (bad) jge inc lods (bad) leave xchg push xchg pop enter pop lods je mov mov clc adc jo (bad) sub or or das mov (bad) fldl loop jbe or movsl icebp push cmp int ds out pushl shrl mov and aad inc mov es popa sub adc icebp call imull sbb mulb fidiv xlat shll add in and add jg test sarl mov adc cmp pop fadd aad jle (bad) and and or and cmp mov pop xor mov idivb clc loop clc pop lds pop (bad) cli in (bad) fidivl sti adc not push sub sbb pop rorb mov xchg je bnd and cmp jge scas dec add add lods adc push aam pop sub xchg std sahf scas mov sub fcoms mov cltd (bad) xor iret mov add lea icebp pop cmp loope sti dec and mov std sub dec xor notl es pop xchg push push or cs xchg xchg mov xchg rcl dec jbe scas add lea xor (bad) jae das fnsave dec fsubrs mov (bad) enter add jge test ja push xor in adcl jl sbb adc (bad) int sub dec mov push xchg mov adc push xchg and mov (bad) mov dec mov push jmp mov sub sub xor xor or iret and fs repz scas test je or lret sub sub pusha xchg stos lea adc subb test pop mov and push das xor jmp mov mov (bad) jno xor dec shrl sub pop pop mov dec inc fildll nop xor lcall jne arpl sub lret and enter lahf sbb lock sti and testl fildll ja xor xchg imul xchg fildll mov hlt in rorb addr16 addr16 insb iret je push pop cmpsl outsl data16 pushf pop push lea push adc mov jecxz pop mov jge push mov loopne clc popf mov push or dec out sti sub dec mov xor cwtl jg adc repz sbb xchg adc icebp sub (bad) pop imul pop ret dec dec inc push or fs repz pop mov cmpsl imul mov mov pop repz daa pop sbb fnstenv mov int out lock jbe ret hlt (bad) push pop jle mov sub pop (bad) push mov (bad) popa sub neg cmpsl stos jb sub jmp fidivl insl repz push dec mov lret imul bnd cmc lret pop push mov xor stos mov es adc ljmp mov imul push sbb ss add xlat gs jmp pusha add xor xchg (bad) lcall (bad) je or or sti sub push mov out out and fs dec insb push and mov (bad) leave sub ds shll pop xor mov mov (bad) out (bad) int3 mov mov ficom pop notl sub xor lret pop add cld iret mov xor mov sub bound iret (bad) push (bad) shrb cmpsl mov jge sbb and xor mov push cmpl mov xchg stos cltd repz or push xor sub (bad) push mov (bad) fdiv lret (bad) cmc (bad) jbe pop cli xor jmp rcrb rol and fldl and push ss lods addr16 jecxz mov mov pushl imul (bad) in (bad) mov pushf sub cmp mov or jecxz ds sub iret sub cmp pop gs adc mov sahf lods jle push aaa inc pop or in dec mov cmp xor jbe mov or stc lret rclb in mov xor mov xor stos icebp and cli mov test stc jle ss int jg cmpsb pop mov les push out push xchg pop mov push xchg mov xor insb inc fadd push clc pop daa fildl pop cltd push jb enter jp add mov std sti popf movsb xchg and sbb je testl or lahf inc jnp pushl cmp fiadd jno lret cli xchg adc adc test test push out ffree cmp cs repnz sub (bad) or and loop lret xor mov stos (bad) enter add sub pop std sub xor push mov cli outsl fs pop mov xchg xchg sub cmp sub sub dec pop jno imul cmpsl outsb inc xchg test fildll jno icebp xchg iret ffree jle cmp ja cmc sbb and out clc inc rolb imulb jp pop inc mov cli mov stc insb xchg ret sub sub lds add fimull or test ljmp (bad) or sbb mov mov and repz pop repz mov (bad) jecxz xchg push icebp fistpll or (bad) xor mov scas or fist mov sub repz add jb or cmp pop mov lcall lcall lcall cmp gs repz ret es aam and test mov mulb out add adcl mov sub and push sahf mov push fadds inc dec jbe push xlat fnstenv aaa pop outsb int cs (bad) notb pop sub out push pop clc mov jnp adc cmc xor (bad) into jbe pop mov jo cltd or cmp xor add sub (bad) sub push mov idivl xor dec fcomip pop cmpsl or shrl mov ljmp xchg cltd cmp lahf imul jns lods add adc xor sub and (bad) push adc divb add sub jno xor out das out push inc int3 push negb ljmp inc mov test mov les mov repnz pop xor sar clc repnz dec pop pop ror jp dec or lret cmpsb dec daa or dec pushf mov cmp adc out daa cmp ss jg push and push outsb clc jp sbb sbb cli (bad) dec ja inc nop xor fwait or cmp xchg sti xchg jnp out or (bad) ja add inc and pop ret test stos sub pushf push mov or push and ds jge adc or std push int3 xchg repnz (bad) lock cwtl icebp xchg rcll cmp rorl add nop jle (bad) jge or ja mov insl lcall or adc ljmp cmp (bad) sub in push mov pop dec jb xchg inc (bad) sbb daa dec inc out mov jl lock add test lods (bad) mov push daa mov fadd sub push das gs aad lret out das or or cld dec das jne fldt daa jg pop stc sub or sub push fiadd out xor sub add cmpsb xchg aad cmp lret xchg adc push ret jge in mov aad dec dec incb xlat jmp mov jg pop leave xchg pop cli cmp pushf mov fnop jmp ja (bad) pop es movsl mov xor mov popf cvtps2pi fild add cmp cmp add or jge xor mov dec decb xor (bad) mov pop mov xor push sbb (bad) sahf inc mov data16 loop ja inc lds rcll mulb movsl (bad) aam (bad) repnz imul loope mov decl ret add jmp dec out sub sahf mov (bad) inc sub (bad) cli cltd movsl sub and flds xchg and pusha lods (bad) xor xchg xor fcmovbe push idivb (bad) ficompl mov dec ja jnp sub dec or push xchg sbb sub sub cmpsb lret and popf negl jno (bad) inc je mov mov lods pop lea (bad) push icebp xor das leave jg pushf pop shrl jmp sub fistp test or sub cs mov dec mov rorb jno jbe aad out clc imul add dec stc repz dec jb mov lahf repnz xchg jbe data16 dec loop sbb (bad) stc and test pop mov (bad) ss sbb fbstp jo imul cli nop data16 popf mov das or stos inc std scas add lock xor movsl out loop xchg dec push loop ret dec aaa rcrb ljmp sbb and mov cs ljmp cmp jge stos gs xorb sbb incb pop fidiv (bad) in push push fidivrl shrl add pushw sub cmpb mov or jl pop lret mov fsubrs mov adc mov subb mov pop out dec call inc pop and mov (bad) out scas lret ds pusha (bad) xor and add mov js dec adc and shr int add ret jnp sbb adc push and gs inc inc or loopne sbbb mov dec das popa jmp mov jg (bad) jne pop dec iret cmpsb push inc shrb mov adc popf cli mov insl mov mov pop (bad) hlt sbb xchg negb jmp das bound (bad) push dec jo dec out loop ja lods dec aad jl enter sub or mov mov (bad) mov ret (bad) or dec (bad) ja inc fld1 mov bound xchg xchg jmp dec dec ds ds cwtl add mov (bad) stc and or adc xchg jecxz pop inc icebp and cmp das xlat mov insb outsl lahf fnstcw notb divl adc out rclb mov xorb daa jl xor scas pop int3 imul stc movsb xchg (bad) pop xor mov or add lahf jb dec into sub fnstenvs in and and add popf jne aas push out xor xor jle dec ficomp movsl push inc push mov adc pop test aas ret xchg and sti and fstl fucomi (bad) or inc sti or and jp xor into lret ret aaa test add das cwtl push fisttpll test aas dec jne push jo sub test test xsaveopt or jge inc xor stos inc push out sbb jp inc fstl add add jne add xor pop mov and sub mov push mov scas pusha fcomip ds xor inc (bad) lock lahf test out cli repz pop mov sbb fs jmp adc (bad) das mov gs or mov aam loopne out stc push imul cmp or mull iret jae dec (bad) pop bound aas fdiv lds xlat sti ret js jne pop clc hlt pop dec mov sti addr16 sub mov mov (bad) repnz rcrl fnstenv push jle xchg sbb out vmaxss mov and out pop testb movsl inc aad outsb das xchg xor pop clc stos mov data16 add xor push mov jge shlb or push sahf or or push push mov insl xor pop mov pop push mov xor dec add test pop mov pop lret pop jbe clc loop push push mov and (bad) ds or inc repz in scas aas or movsb adc pop adc jecxz add lcall jns xor ret ss mov (bad) jns aad cmp xlat out sarl pop subl xor cwtl mov add push pusha sbb cld out punpckhbw pop add sbb (bad) xchg cmp rcl (bad) jns adc push mov push pop add xorl rcrl sub add mov or push add sub pop rcll mov sub out dec add push push mov mov pop jp push push pushw mov push aas sbb mov sti das (bad) cmp sub mov clc out lds push jl xor and xor fist sub pop daa mov xchg push std pop jbe pop (bad) or add sub xchg and pop push pop sbb or hlt cmp pop pop push sbbl xor fsubs shrb pop cmpsl add fucomi int3 mov dec xor repz stc mov sti dec lods fcmovne mul push rolb insl std pop dec lds int cs jg popf repnz cmp (bad) mov dec xor mov dec out xchg cmp jo lret insb cmpsb or pop mov jg mov mov or mov push mov push or pop enter bound dec (bad) or stc lods les ljmp pop jmp fistpll das nop dec cmp jo lock arpl test or movb lds out mov adc rcr mov sbb jmp jecxz (bad) (bad) (bad) and cmp pop dec (bad) dec (bad) cli mov push daa cmc sbb idiv sub notb pop add inc enter xchg inc inc or mov dec mov lods test (bad) test jne cmp xchg mov icebp imull out dec xor loope push call jo,pn outsl fild roll clc jb idiv push dec xor js loopne or sub aad das dec cli addl lcall add js les sbb and loope loop into neg loope pop mov and lcall mov imul push addr16 sub out inc push push sti sub cs (bad) popf cs arpl pop ret notb ss out fstl and adc mov les push stc stos mov jge inc out jg pop dec add push sub ds mov lds and negl ret popf jb or cmpsl and sahf xchg fcomip jge (bad) jg pop sbb sbb pop cmpsl xor push vcvtsd2si dec pop iret mov call push aad repnz adc lods into movsl pushf mov ljmp cmp mov sub cmp xchg enter or cli jmp clc mov pusha xor xor popf jle in ljmp (bad) sub sbb xor xor xchg jae adc mov or lock xchg movsl mov stc push bound jae or xor lods les sub cmpsl loop mov push mov (bad) out aam push mov inc pusha insb lock data16 mov inc add cltd sub push xor and pop xor lods cli mov jmp loopne out pop lret test push test (bad) mov sar xor xchg push xor sub (bad) dec mov popa push or das mov into fdivrl out fidivrl jmp movsb mov lret cmp stos xchg lcall xor push mov mov jmp xor pop cmp adc mov ljmp pop xchg jo mov sub mov sub xchg mov iret divb arpl fadd out movsb mov (bad) and lods inc movsb jo ret das rorb and and fbld daa push mov out adc loope mov cmp negl cmp shrb xor dec ljmp js mov and dec sbb push inc adc sbb add lcall add mov pop mov xor xchg loop orb out sub inc xor and jae push mov dec stos fsubrs mov adc sti mov pop (bad) sbb push mov mov sbb add jne ljmp test loop das and push fs scas lret bound add int3 stc sub bound out in or out test test mov or daa xor jno inc das pop insl test movsl xchg ficom and movsl pop dec out repnz cmp ret add leave jle fisttp test sub cmp mov xor sub xor mov cltd or leave and and pushf sub dec and movsl mov sub fcmove movsl scas mov mov iret or pop out push mov daa out push xor leave jmp sub sub mov sti int pop icebp jnp vmmcall sub shrl dec scas mov mov (bad) in test and in out jecxz out aas imul push js jno adc sub mov dec xor (bad) inc and (bad) mov sub or ret add or xchg fdivs dec int cmp ljmp pop test in stos sub or or cmp mov xlat push negl dec inc lret (bad) aad inc push adc dec or cli xlat and sub test sbb add iret sti pop das jae test and xchg ret jmp inc sub or sbb sbb and mov lcall xchg or cmpsb inc (bad) and into push data16 or sub cli push out idivb idivl mov insb (bad) pusha or xchg out enter std fiadd test cli sbb push jecxz int xor mov into adc fs jge dec sahf shrl push sarl adc push mov inc fbld mov jecxz xchg mov jle cld fmuls jne cli pop xchg add outsb and jp scas in sbb iret (bad) sbb inc dec xor lcall push mov jnp rorl sbb pop add jnp sti xchg jnp push inc mov sub add push xlat xor popa ret or out sub popa sub sub iret call pop mov outsb shll repz lock out (bad) stos mov dec add sar sub test jl jmp adc imul jns sub fisubr and xchg sub hlt xchg leave ja jne sbb sub and and repz push (bad) mov or pop out movsl jge jmp and mov or pop pop fcoms imulb hlt xchg add test or shrl mov push add scas in out xorb xchg test imul fsubs icebp bound sub cmp mov out lret dec dec inc xchg dec movsb cmp rclb sbb iret xchg ret sbb arpl divl mov int imul aam repz mov aad dec mov jp bound xchg in pop xor and rorl add int stos mov or jge xchg fldl and loope cmp jbe jns sahf mov add stc mov xchg negb mov cltd or (bad) and pop adc icebp mov sub cmp lret push push and clc pop dec jmp dec and inc pop (bad) jmp ret inc shll frstor and scas bound pop push or mov insl and repz cmp daa sub jae (bad) sub dec push aad cmp aaa mov mull scas pop cmp ret xchg mov repnz dec mov stos les stc dec fisubr or sub out dec clc inc into ljmp ljmp int ret lea dec cmp loop loop xchg mov ja imul mov dec mov mov inc fs lods mov mov das jmp in xor cli ds or imull mov pop das sub or push pop lret stc decl lret rclb sub in mov mov jle sbb inc and pop popa popl sbb cmp test dec repnz (bad) xchg stos arpl sar lcall ror stc fidivr xlat jns dec dec imul lret xor dec cli test pop inc jne mov dec ss mov pop out mov out add adc stc mov or fistpl pop loop stc add sbb into or cmp inc dec scas cmp fldl2e jg and data16 pop call fs mov mov push mov jo mov add jmp aas xor les orb lds push movsbl push stos or push scas movsb lds xor and or jmp lahf (bad) ljmp pop mov fadd repnz sbb and or aaa or sbb hlt (bad) mov adc jp mov or cmp (bad) out or cwtl (bad) mov mov and sub mov js sub jg int divb inc pop mov mov jns sub dec push or fwait push add sub bound ja (bad) mov and cmc jae pop add notb orb push mov and lahf pop push int mov jne xor (bad) xor sbb outsl in sub cmpsb scas imul adc stos leave clc aad jb mov in int3 sub mov cwtl ljmp xchg clc mov or (bad) jno add loop xorl pop movsb push lock push mov mov popf lcall dec pop adc test je fcmovnbe ljmp add sbb dec cmp (bad) sub insl mov mov pop test cmc sbb mov and mov jmp loop (bad) fisttp inc (bad) int call and repnz dec xchg test sub lods add ret (bad) in mov ds icebp (bad) int das dec xor fstps or push fcmovnbe outsb sbb mov addr16 and sub adc fisubr adc loope jo sub cmp xchg dec test out pusha aaa lret sub je lds (bad) jge mov adc xbegin adc dec push adc movb mov mov add lcall clc iret xchg ja shrl push dec mov test mov fwait outsb xchg fdivr stc insl mov and inc cwtl dec shlb pop adcl mov push dec iret fisttpll inc and jb xchg loopne lret dec pop fnstsw test xor push mov jnp and inc data16 mov push and orl (bad) repnz test jb cwtl xchg ret push mov aad adc rol pushf jmp (bad) cmc lods jmp mov (bad) mov pop rolb sub lods sti and push add jmp in sub scas fxch popa dec jnp hlt movsb divb icebp jg jp and jmp out add mov (bad) pop and gs daa pop inc add or (bad) incb gs shrb xchg mov sub aad mov fidiv cmpsb lods dec int3 dec add cmp je stos sbb cld movsb add into dec inc jl sub orb (bad) cmp push aam loope jg add lret inc xchg lret mov push push pop mov and popa xchg and and adc xchg loopne shl (bad) lahf clc cwtl pop into sub pusha (bad) mov push and cmp jge xor jbe push repnz out sahf mov push loop iret in adc test mov fbld add sub mov je adc mov out sub and gs mov fcomip inc js lret ljmp mov mov sbb xchg jne add xlat add and sub mov pop fisttpll inc out add xchg mov sub push sub mov test adc sub pop push push push or into in das shrl push xchg jge push push or mov sub cli inc mov pop out xchg bound adc and jle gs add ret push add lret xorb std lret pop fnsave sub mov sbb dec movsl or sub mov ror pushf popf jbe loopne (bad) clc jp push jmp movsb and nop mov dec cmp add test mov outsb in add adcl xor ret and cltd push xor cs and pop push add mov pushf mov mov loop (bad) mov adcb (bad) or inc popa repz adc xchg pop sti mov sbb scas mull daa adc (bad) sti sub hlt xor lahf ret outsb inc out sub repz adc sub bnd mov sub sub push and pop push push sub xor lret out loope (bad) icebp (bad) loop,pn xchg call adc or add pop std js mov ss in push sub hlt and sub cltd bound mov xchg int3 or sub jg loop xacquire (bad) mov add push jg xchg adc inc cwtl sub outsl lret and and lock arpl xlat lret out mov mov and add push inc into xchg loope rorl and xor mov ret dec or cmpsl mov scas mov test rorl cmp cmp xor jecxz mov pop inc mov in bnd mov xchg f2xm1 ret dec push mov cmp icebp add xlat xor or jmp jg jmp pop cmp psrlw fnop jle inc notb push lcall cmp in cmp pop leave sub daa and in adc adc jo dec push jbe pop sub mov push (bad) fistpl lret test leave xchg sti dec ljmp (bad) inc into cmc cmp xor pushf mov sbb xchg jmp cmp add inc lods shrl xor mov fldt adc cwtl fisubrl fistp mov lret popf pop icebp sub xor (bad) lods and imul out xchg xchg dec ja std and pop repnz mov (bad) dec mov push outsb mov fwait les xor push and mov jg out icebp mov cld popa movsb and jg fstps sti sub pop into lahf push data16 ret xchg xchg aam inc out stos mov addl xchg stos add pop xchg inc fs scas sub lea jg or mov mov sti hlt lods add mov ds xor (bad) iret sub sti jno ljmp loop ja loop ljmp xchg call gs or xor data16 je int3 adc loop ror inc hlt jle in sbbl ljmp and push sub (bad) lret lret inc or mov lcall dec push leave cmp (bad) dec or stos sub or ljmp or push push xchg je rolb pop int3 xchg lahf ret test pop int3 jge lahf pop xchg aad mov sub insl adc and andb dec loope ret mov ds ljmp aam stos adc lcall stos cwtl fsts pop shrl pusha xchg mov in mov call hlt (bad) ret cmp push lcall xchg std lods cmp daa adc pop int3 pop adc add int and mov mov mov sbb clc ret mov adc repz xor or loop xor mov add mov mov add add push push jmp inc push pusha pop sub sahf jmp add jns push ljmp fist add jge mov les add pop mov mov mov add ffree in push mov xor int xor add mov pop inc nop push sub xchg imul sub jecxz pop out vrcpps and add xlat out rorl int3 sbb mov xchg mov call inc (bad) outsl pop inc xchg push xor insl mov mov adc mov aaa mov xor jne mov push fs ret movsl dec mov or cli jb (bad) mov fbstp shr push movl xchg mov mov pop subl xchg xorl pop fsts sub ja outsl pop sub inc or ja adc movl cmp ret les out bound (bad) ja xchg cwtl bswap pop xor xor leave or mov fstpt dec lds loope pop in neg in mov movsl jg xchg cmp sub lret add xchg mov dec ret push data16 fadds cmp negl xchg sbb mov scas aam and test leave cmp jg ljmp jns xchg cli mov add push ljmp cmp sti inc dec std dec mov push cmpsl jmp cmp hlt call jg fisubr push in push rcll mov call stos sub adc xor jbe pop add stos enter and cmp ja push jae dec aam xchg mov or xor rclb xchg aas popa xor mov sti cmpsl inc leave popf rol dec ret out or jbe gs cmc xchg sbb add xchg jg js xor and push insb out xchg (bad) dec and idiv into dec and jbe leave repz pop add test jp push ljmp dec jo imul and loope mov in pop lods jmp xor aas ficom add pop sub sbb or ss fstps dec test insb push popf ja or (bad) or test icebp and movsl mov ljmp and jne xchg and inc fcomip xor outsl clc daa movsl pushf fadd mov dec jbe push (bad) xor loop (bad) pusha out push rcrl add xor ja popa mov in jne es add sbb pop mov cld hlt dec mov xchg lods pop xchg lret push imul sbb mov mov lea leave (bad) roll pop mov pusha or lret xor int3 or iret add mov into test sub bound loop pushf add sbb test jle xlat push out (bad) pop xor xchg (bad) fdivrs mov in icebp loope ss test movb lret gs mov sbb call (bad) or push sub push (bad) clc push mov clc push pushf fsubrl loop shrl pop mov lahf xor xlat add push ljmp bound inc movsl push inc mov mov adc sub out add xor outsb das jg xchg test repnz rolb ffreep fistp dec push cmc ficomp inc pop push mov ja loope mov push orl sub jmp lock pop push sub sub clc std add mov add sub pop mov pop inc fcom pop out jl lret or mov icebp ret jb xor cwtl mov push push sub sti pop mov xor push mov dec sub pop push mov sub or and add dec lcall add push insl not xchg fldl or loopne int sbb ss sbb add pop xor sub fidivl mov lods in push xchg mov clc or push pushl jle movsb fwait add stc sub mov in mov sbb cmp xor cmp ja add cwtl shr add and pop xor push mov (bad) jle es ficom cmc pop outsb fbstp or xchg jbe shl int cwtl pop add dec lahf and rcl add mov loop mov xchg xor scas cmp or jg or adc mov lret push sbbb mov sub or shl and or fnstcw addl out cmpsl notb cmp pop cmp gs clc push xchg add ja rorl cmp adc push lea ljmp adc mov mov fiaddl mov ret fs pop mov jo mov inc xchg sub lea add cs mov negl dec jge lahf xchg adc jg dec icebp out mov ljmp sbb xor cmc data16 sub or cmp inc cmpsl push inc jmp cs add xor scas mov pop test lret test push lret aaa test repnz xor mov loop xor pop daa and std xchg dec pop dec jnp mov cmp sahf pop jmp gs mov int3 or add loop inc leave xlat dec mov cld in test iret cmpsb push and or push out pusha fcomps xchg pop nop cmpsl pop xor ljmp push sbb push movsl adcb in add out add ror pop and js loope (bad) lret mov inc call mov test mov push popf (bad) dec dec pop lcall mov (bad) dec sbb (bad) (bad) xchg adc push lret call icebp mov jp jns fidivrl out icebp cmp sub xor inc fdivl or mov mov dec sbb rorl push xor out cmp push or pushf ds lret (bad) je out in cmpsl mov adc pop jo lock dec adc adc mov mov pop rcrl xchg lcall jmp sub and insl xchg enter xchg fdivr mov sbb sbb test lahf adc pop and pop mov stos sub icebp imul test add adc dec jmp inc push cmpsl adc bound mov and xor (bad) pushf add sbb aam lret in pop (bad) das gs fist divl jmp call sub mov jp adc xchg xlat xor lea addr16 pop mov mov out or or notb add out outsl scas xor add cmp jge pop pop inc inc aad add cmpb dec lock sub xchg es rol jmp out ficom clc lcall imul lret mov mov ljmp pop out and lods mov jbe push stc test ds gs popa add (bad) push (bad) out dec mov sub xchg mov nop xor push std movsb xchg scas pop dec xchg (bad) pusha xchg scas mov add sub notb cli addl in jmp out gs mov pop fstpt (bad) or aaa bound inc xor sti rcrl jg push stos or into dec xchg stos inc jg jo pop xlat mov jbe and repz stc add hlt xor (bad) adc xchg call sahf dec mov xchg out mov cmp cs divl dec loopne (bad) dec mov mov sarb or lret dec add in inc cmc call jl mov push (bad) shrl cmp mov stos add repnz mov jg mov push inc push xchg stc mov jno push cmpsl jnp das fsubs idivl mov adc and insb popa or xor test add mov sub inc push jmp dec cmp cmp sub out scas call or pushf ja mov loop jle push inc in sub pop lds idivb or aad in fimul sub fpatan jle movsl mov or clc je fs js leave icebp jne adc popf pop ss rcl mov jb ret xchg mov fldcw stos add sbb leave das decl cmc in sti sub jmp or pop stos jno pop repz cmpsl cmp popf cmc xchg sbb loop sahf std cmpsl pop push daa mov adc call test mov push mov (bad) push sub xchg ret mov sub cmpsl (bad) out stos mov mov fild sti nop lds xor push adc push and fisubr movsl mov insb add pop ljmp out mov fmuls icebp adc loop rclb cmpsl sub or add std pushf mov jge sti out insb test mov mov scas xor jle and sti mov int3 or inc pop nop mov inc popa je cli aam pop push and jmp cmp sbb pop mov mov mov sbb clc xchg (bad) mov xor inc imul sub mov and nop insb jnp dec leave (bad) fimull out fcomps loopne and ret adc mov repz loope stc sub or cli loope push stc icebp fstpl dec hlt jmp xor aaa loope outsb lods jge pop and sub inc xor xchg push and mov mov mov sub jae jns ret cmp cli int subl sub mov popf out dec mov enter pop add mov jns fistp push dec stc outsl testb jo jp out sub push sub (bad) sbb mov cli repz sarb sub and mov or and mov xchg dec popf xchg inc std jno xor jnp jb cltd mov lods push fwait jge jmp push bound ror lods dec add loope mov dec bound lock pop pop inc xchg cld fld mov or and scas aaa sbb cld pop leave jecxz pushf or jnp sub inc xchg jle sub js daa sbb data16 xchg jbe ljmp mov sbb sar mov testl push xchg cld lds icebp xchg cmp push ja push pop sbb jbe xchg lds pop mov pop lock mov cmpsl inc xor gs xchg std or mov lods sahf or mull into jg jns in std cmp dec adc xor out mov bound aas stc dec leave sub stos ja push xchg or mov adc ja out add xor sub sub adc bound sarl negb inc jmp jmp and addr16 mov or enter jnp popf std pushf sbb mov xchg xchg out cmp mov stos lret scas sub lret xchg xchg jmp in mov sbb jmp mov in sbbl testb mov into inc sub shll ficom dec bound aas and and jmp call lock pop mov jg or ret (bad) jno xor jo mov stos dec je pop clc mov inc dec mov mov cli inc add xchg jle dec shlb xchg das sub das sub scas bound (bad) call mov mov (bad) push sbb movb test (bad) adc inc pop pop call adc outsl cld lret sar leave iret sbb add (bad) aam push mov or stc sub sub mov xor mov adc les lret mov loope frstor mov xor out loopne mov scas dec popa dec push pop lds cmp das fdivs and inc push mov pop or mov jmp and movsl ja rcrl jle test jno imul shrl push sub add xor test call js mov adc push xchg mov jnp and sub mov push push repnz fisubrl cs cmpsl pop call mov push or lods stc mov cmp leave inc movsl pop or cs imul add mov pop sahf fsubl sub sub stc loopne jg dec jne je push scas mov fs push stc pop pop jp enter in (bad) bound enter (bad) push sub mov addl (bad) nop fcomip repz pop (bad) cli out xchg divl movsl push xor mov push into jecxz xor repz mov cmpl pop sub or xor xlat dec pushf lahf loop pop mov mov leave lock daa xor or ja and mov pushf jb loop jge imul jae and lahf outsl add xchg or js sarl aas call int3 mov lds bound in cmp push pop adc add mov mov sub lods push push nop pop imul mov jno mov and push aas or pop lock dec (bad) ja push jle or test adc push mov xor insb push pop sar or stos cmp rorl cmpsl adc adc jno das jae sbb inc xor ss inc test (bad) mov (bad) or add push aaa imul fdivrs jbe lea mov ficoml stos out mov insb test add cmc out mov and cmp adcl xchg xor xchg loop or xchg add push mov jle loope loopne int outsl dec adc and mov loopne mov ljmp xor mov push (bad) and cmpb rcrl sbb jb and jg add xchg mov sub mov push sub jle xchg mov shrb or push rcll clc pop push add pop mov pop push push mov or shrb mov outsl and jmp pop inc pop ja dec push dec pop rclb ds push and push aaa pop push subb std jg jno cmp ljmp mov (bad) fmul xor dec sbb or adc fiadd push enter sti mov arpl lret iret shr adc add in mov aad jne and and mov mov movsl mov dec add lea mov cmpsb ret cmpsl adc flds mov (bad) adc orb (bad) add add adc enter subl repnz xor pop add je xor sahf mov or ret pop and pop enter and stc dec mov and add jg aas movsb (bad) fdivl dec or xchg or or jno enter fld loope sub xor ja pop pop sub (bad) jne addr16 mull in (bad) sar fucom xor sbb cmp roll in adc lret jp mov scas repnz gs into mov inc lods loop push pop pop sub push or lea lret and and loop mov mov cmp (bad) inc add push jg sub xor rcrb cwtl and test jbe mov xor int inc sub fisttpll and sbb xor lret outsb or sbbb js jbe je rol mov repz jmp push pop sbb dec add fisttp das shl sahf lahf pop lret push sub xchg test sahf adc push mov push test out fstp mov notl aad or xor movsb push dec add (bad) mov pop mov pop imul mov cmp push push (bad) ja outsb xchg cwtl std xor xchg fisttpl push out mov sub inc pop mov or clc ret ss (bad) popa cmp test stc xor js jnp fxch mov cmpsl notl push popf clc int notb loop and lcall mov mov inc xor cli jnp inc ja jp loopne or mov inc push cli push mov shl in shll pop scas adc dec pop or ret dec add xchg or lock fdivrl shr adc lahf pop cmp jo lahf fiadd add test mov xchg jp loope repz inc in mov int inc sub imul ja scas or das ljmp push neg test jb (bad) hlt pop jb lahf jne insl fs and clc xor push pop dec dec mov sub rolb jle sub add das adc lahf rcll and lods mov xlat jns or inc adc mov cltd mov ljmp xor in (bad) das loopne (bad) les mov test movsb push dec (bad) in (bad) xlat dec push js xchg push inc sub push cmpsl pop pop inc xchg decl xchg pusha out ljmp cmp push pop jne pop sub mov push sub aad lret add jne fsts jmp inc sub xchg pop push (bad) lods ja cli fisttpll movsl movsb inc sub mov imul leave inc inc pusha cmp dec icebp stos xor inc inc mov sti mov dec jle push jmp push mov cwtl andl dec or and out dec (bad) aaa test lret in enter add xlat add ljmp dec add dec sahf dec (bad) cltd mov pop mov push mov and (bad) xchg (bad) call ja dec sub movsb in outsb mov sarb sub xlat xor out cs outsl cmpsb scas sub cs xchg inc pop fadds (bad) xor std test mov dec test mov lret adc jmp leave mov jge enter or (bad) push push cmp cmp daa dec adc iret cmp les xlat mov movb and sub into xor sub (bad) pop js daa nop cltd adc iret lea aas divl or cmp fcmovnb sub and rorl in adc mov adc push (bad) mov add pop xchg (bad) xchg mov cmp movsb lcall jmp add out cmp dec mov mov mov aas fldpi sub roll addr16 and inc add or push lock in cs add and jg mov push (bad) adc mov xchg fnstsw push test dec ret (bad) (bad) push ljmp lret ret je leave cld mov repz push jecxz in outsl les repz and push (bad) xor into les dec pop (bad) in xchg in bound fsubrp ljmp cvtps2pi mov je fxch and push mov dec daa cmc adc xchg out cmpsb push mov jno inc out mov pop movl movsb inc mov add push cltd lods out sub ds cmp loope mov add xor cs sub movsb cmp jecxz mov or dec je (bad) xchg xor sub lret jbe dec mov cmp sar jmp mov xchg out dec rcr clc bound (bad) std sbb mov fildll repnz ffreep xchg push add aas fldl shrb xor out cmp pushf mov idivl jno push aam cmp out incl movsl xlat sub loop dec fwait push adc notl xlat xchg das or pop repz leave xor rol iret and fstl notl mov pop cld push inc adc sbb xchg out scas ud2 sub and xor mov xchg imul lock sti test sub fildl and nop repnz xlat mov pop and (bad) test and and mov mov cmp in or pop cmc bound xlat xchg dec ficom (bad) aam pop call lcall and inc pop jge adc inc adc cli stos mov repnz mov dec cli xor stos push cmp fsubp daa out adc mov repz out cltd mov sbb outsl and mov mov pop push pop leave (bad) xlat int3 sbb not cmp ret push pop ljmp xlat and and push pusha sub out xchg pop pop add nop add cmpsl jge repnz cwtl insl sub and and (bad) mov jecxz mov pop jno mov enter jae xchg ret sub jo sub repz and and jge mov decb ja xchg std gs and int3 cmp xlat out fcoms mov dec lods inc mov (bad) loopne jmp repz iret clc int sub mov adc fucomp xor sub pop or xchg ja div jg sub push or out (bad) sarl pop bound paddb fsubs push stos lods jg (bad) xor movsl xor test mov sub sub xor xor mulb or mov lret lds mov adc clc mov lahf sub push loopne mov fcoml jg sbb iret pop push mov push out xor (bad) sub cmc lret sahf xlat jmp jecxz cmp jge inc repz cmp sub add imul cmpsb cmp add lock sbb incl jb (bad) xor aad mov xchg gs dec div fstp enter addr16 and pop fwait inc and mov pop pop loop sub stc (bad) push mov (bad) push mov mov cld leave insb adc mov inc push std lret sbb xchg test inc (bad) lods fist (bad) mov pop sub daa daa out and test and mov pop and xchg mov movsb int3 popf icebp loope out push mov adc imulb dec icebp xchg lods xor mov push sub cmpsb lods dec add cli aaa shlb push ficomp (bad) sub sub jmp call push push mov add pop or outsb lods pop leave cmpsl es cs test stos (bad) (bad) leave cltd (bad) loopne sub call aaa das sar in lahf pop jae xlat stc dec outsl pop mov hlt xchg test vmaskmovdqu jmp and js push aas dec icebp ja mov inc jb mov stc mov push pop add test add les mov lods jns cmp push insl push imul adc mov stc (bad) or dec dec cmp pop (bad) mov add xchg rcr daa cmp (bad) (bad) je bound xchg ljmp dec mov negl loopne clc mov push lods xchg jmp cld movl sub xchg stc nop jae icebp in mov add mov jo xchg add push mov sbb inc dec mov pop inc popa or push xchg aad add add jmp dec mov dec out gs stos mov rcll jae or cltd out push in sub xchg dec clc stc sbb das movsb jecxz sbb test jae jecxz dec mov mov fistpl jno adc push jmp xchg and cmp cmc into jne shll adc leave mov test cmpsl sub gs dec mov (bad) mov jecxz add imulb mov or lahf sub test push daa clc mov sub xor lock inc cmpsl sub and rclb aas notb rorb movsl mov mov xrelease data16 jl das or xlat inc cltd pop or xor fbld (bad) push pusha test es pop jmp imul adcb mov ret mov adc int push mov pop sti fs inc pop sub adc xor loop cmp inc lahf dec ss out scas (bad) jmp jecxz xchg mov outsl mov mov inc bound sbb push push push in cmp jb dec mov or repz mov adc (bad) jbe pop lock nop sbb add aad mov jnp cmc pop and lret push dec mov pop ljmp std fidivl stos add fldt sub sub adc and pop xor push or dec pop mov ret add push aad ss sub pop jns sub sub rcll push loopne lret dec mov dec adc sub in push stc push or pop mov mov pop mov (bad) mov pop mov or in push add stos sbb and push push mov jle dec add or cmp add push repz push dec push push (bad) lret pop idivb mov dec mov mov fistl repnz shrl pop mov add push push mov cmpsl stc add leave lret shr andb sub faddl stc and pop pop push nop inc mov add fimul js push (bad) mov leave (bad) push out add jnp movsl sub or push push mov xchg cmc or push mov xchg aas lods push dec xchg add arpl nop xor jge ds and pop cmp xor repnz jle jecxz push cmpsl jmp stos mov call mov mov or popf leave adc cs sub or sahf fidivrl lock or adc or imul daa mov sti mov mov ja push xor jle cmp xchg push aad or ret ss cmp adc pop pop imul jmp sub pop stc hlt aaa ret mov mov lret jno dec sar decb stc mov movsl xlat mov jo loope mov or dec xor outsb and xchg outsb inc xchg mov stc ja push dec mov fsts mov mov sti in sbb lods (bad) in pushf pop or adc lea ds negl sub out je pop jg (bad) push leave in call cmpsb pop push mov and mov mov mov dec mov xchg pop clc repnz clc (bad) sub xchg cmc jns dec and outsl jg jmp cmc pop adc movsl (bad) xor dec test xchg mov cwtl and adc sbb bound push pop adc sbb inc or call notl mov lret and add fbld dec iret jl pop jl fs mov jnp xchg add fsubl lahf test push add pop inc (bad) nop repnz ret (bad) xchg popf cld jecxz mov push (bad) mov (bad) mov daa pop push cmp imul add ror push (bad) xorps lds mov xlat sarb push lret sub int3 push or pop and iret jno pop outsb xchg cli cwtl fldl2e mov outsl jge jbe in dec leave divl pushf jb jmp mov inc cmp or xchg inc fldl cmpsb cli das pop ret imul add xor fildl jmp (bad) pop and lcall jmp pop sarb xlat push pushf (bad) hlt out push das arpl and xchg lret movsl idiv mov dec mov sti mov and data16 push mov xchg ret lds xor (bad) adc dec scas int3 popf inc (bad) pop in mov adc fsubrs lea insb pop les cmp cmp xor lock cmp and dec (bad) mov shrl mov cmp out inc push lods (bad) pop imul cmp insl repnz pop mov rcrl lret lds (bad) mov pop int pusha ljmp je dec stc in sub xchg leave and out xchg mov roll sub js daa leave push sbb mov xor add lret mov add jl popf jle aad bound add lahf aam gs jecxz dec or sub push loope mov ja pop leave push rclb test nop sub aad cmpsb mov sub lahf (bad) adc stc push xchg and scas test dec cli sub jbe fs int3 out pop sti flds loopne or cwtl cmp fsts add sub lds loop cltd pop jmp call mov je push push pop jns cwtl jno aaa xchg popa or inc aaa add xor cli or leave fstpl test jbe loop iret (bad) icebp or mov addr16 (bad) sub movsb ss xor lds out dec mov mov (bad) dec xor mov adc mov mov mov add rcll dec jmp inc add movsb stos (bad) fcoml and ja push add lea out xor or xor cmp rcr add shlb jb lret mov sub sbb or and scas data16 dec lret mov stos imul xchg lret ja mov sbb and jmp imull inc fs pop push clc sub out lret pushf push pop gs xor stos inc push push add mov std and or dec pushf cmpsb cwtl enter (bad) cmpsl lahf sbb (bad) sub cmp mov push in pusha orl cmp push cmp mov xchg dec cld xor mov dec mov push pop push cmp xchg dec ja lret scas mov pop mov daa and cmp mov inc (bad) dec xor sub les sar bound ret insl imul ret add mov push jno pop jnp sub mov sub jp fmuls and cmp cmc add and orb into shr or jecxz and sbb pop lock dec or mov mov scas push pop stos lcall clc add clc stos les scas test repnz jno test lret lret add jp (bad) cs add sti mov jne scas mov mov mov mov enter out leave les ror popa pushf repnz sti mov stos add push ss mov mov repnz sbb in pop sbb push sbb enter sub xchg pushf push cmp pop rolb shrb push sti jecxz xchg call repnz lds out mov or push js mov sub nop mov dec out mov xchg mov dec ljmp in ffreep out xchg xchg das mov std (bad) xchg (bad) jp aad jl mov dec push jno shrb add icebp mov shrl mov cmp jnp daa jbe cld add inc push out decb jmp mov ret mov push mull xor mov mov imull inc test and or push das sub call fsubrs (bad) mov mov ljmp ret pop in out mov mov das push jmp frstor xchg mov jnp or xor rol mov pop in movsb dec ljmp out (bad) mov inc lret xor test popl lret sub sub dec into stos sub idivb mov jbe push and test mov cltd jg cli (bad) xor jp outsb idivl mov inc fdivs hlt jmp inc (bad) dec inc xchg and mov (bad) pop pop imul leave popf xor or sti mov std xchg xchg cmc xchg push and dec imul pop imul inc cs mov add inc sbb add call outsl xlat push lds leave and fbstp mov mov or or cmpsb dec jnp xchg fildl add out (bad) negl div daa jg inc fistpll dec cmp or or push push jo add mov or out pop add cmpsb movb ja jbe testl out pop inc inc shl not andl test adc icebp and push call pop or pusha xchg add add je (bad) mov cld sbb mov imul xchg cmpsb rorl sbb pop clc negb out and jb cltd es push je dec xchg or fdivrl xor sub iret je icebp int pop mov cmp inc pop cld call cli and dec xor roll inc int push mov out jle add ret or sub leave sub mov (bad) or addr16 mov xchg cltd mov cwtl pop mov fisub (bad) mov inc push push cmp push add add add xchg popf dec pop aam and orl xor add dec out or inc pop (bad) jae loop add cmp jle (bad) pop pop push std addr16 and pop imul test mov adc inc int3 (bad) (bad) xor ret sar scas je push subl push fistl fldl pushl pop mov jp std mov add jbe dec neg push out (bad) pop dec sub and dec hlt push add pop popf (bad) jnp addl shl add jns jmp adc add out inc push push punpckhbw hlt (bad) ljmp mov es dec pushl xor mov add sub xor add mov daa pop pop arpl fistl mov jbe pop mov xor push mov push sbb xor add test cmpb ret jp lret negl mov out outsl mov sub xor xlat and lret mov cmc jae setno sub gs das je pop bound sbb cmpsl dec ret gs fisttp repz dec mov sub xlat out xchg shll stos mov pop loope addr16 pop mov xchg xchg enter test ljmp sbb sub xchg fdivrp fmul repz stc pop popa add or jle xor (bad) out lods fidiv popf push movl rol push je or enter mov pop mov aam imul sub fcmovne ljmp rolb jp dec idiv jne aam out clc dec in xor mulb ret jl jns pushl fldcw mov rcrb (bad) das mov pop mov pop mov cmp or mov sahf scas pop add cmp leave jge lods jno xchg jmp mov ficom jnp lret shlb adc or mov aam lock in es sub call dec inc xchg pop xchg lds xchg pushl loop jae scas jb or fxch or sub xchg repnz gs add out sub pop pop or aad adc pushf adc sbb push sub pop jb mov dec or divb lahf or lahf out pop iret adc in mov push mov jns mov xchg jno xchg xor (bad) sub ret xchg sbb iret rcrb popf dec adc loope ret cmp or mov in mov sbb (bad) cli out inc stos je,pt lods insl xchg mov pop mov sub popf ret push stos xorl popf adc fiadd and mov insb cmc xchg les jmp lret aaa dec pop loope pop pop dec add sub inc sbb xor pop jge pop pusha pop out movsl xor ss and push push jp jmp push and int push mov xor ret mov ret std divb loope pop orl sbb out mov imul and out mov sub pop adc fstps and pop xchg int sbb push xor dec arpl imul or sbb (bad) jae dec mov scas mov sub add adc leave or dec push (bad) iret mov lods and push xchg push push jmp mov movsl (bad) stc (bad) rcll mov pop mov xor xchg xor mov and es add test call mov mov push pop scas push add lahf jns xchg push scas cmp add pop or push mov mov enter add sub dec fnop and jae movsb out xchg lret xor adc pop add incl ret or gs leave push out add add test stc js cld add repz or cmc mov ficompl mov out add insb mov loop inc addr16 cli mov ljmp or mov mov ficompl ret lret push lds mov push add ljmp push jp mov fldcw or fisubl pop aaa pushf mov cmc in sbb das or mov adc or fildl xor in aas out pop scas lcall xor rcrb lods aam mov lock lret int cs loopne lret jmp xlat (bad) pop in out (bad) push dec jmp dec scas gs scas cltd out mov scas out pop in pop push dec sub pop mov or mov or out imul xchg pop adc push dec cmp inc add cmp dec out fisttpll adc jg leave dec and and inc in sub jb pop ret push add pushf cli fidivl stc pop fdivs notl and (bad) push pop mov mov mov add pop (bad) xor pushf shrl aad cmc sbb out in adc lcall push leave push cld xchg leave add repz push xor loop add mov or add out and lret adc repz pop add xor orl movsb inc jle mov push fs cmpsl mov outsl add xchg xor xchg mov fxch dec jle push mov das cmp jl lret fdivs icebp aam push inc cmp (bad) (bad) jecxz mov xor das sub sub and gs cltd rcr sbb xchg loopne ljmp aaa fsts push outsb imul das idiv and jg movsb ret or daa (bad) mov inc adc sub fabs pusha jle dec (bad) scas (bad) sarl subl movl notb mov and push pop lcall imull xchg jnp and xlat movsl xchg sub imul or aas xor xorl (bad) or add mov rorl xor ss jg rcll xchg pushf mov push stos fs pop xor lods mov addr16 mov sub cmpb push inc arpl xor imul mov xchg iret mov aas cmp sbb adc push divb imull xlat fiadd cwtl in dec or xor mov jb pop xor or cld jl fbld pop adc popa int3 ret popf pop sub repz enter test and mov pop add sub mov pusha ss aas fstps fwait sti and sbb add aad fsubs jle mov xor popf cmp daa call fisttp nop sub nop push and pop pushf mov jbe push fidivl mov cld add jo scas ss leave pop js popf je push push push add hlt lcall push (bad) mov std test dec pop lods fist inc imul int3 or cmc (bad) cmc test mov (bad) mov xchg pop je out adcb pop fcoms out in fisubr ja pop adc sbb pop fdivr push sub mov pop dec pop cwtl inc mov sub lret push int adc push es xor lcall fs xor (bad) gs ret insl jl repnz mov imul dec call leave push test (bad) stos fcoml sub or push icebp mov negl lret pop sub pop cwtl lret jle push push adc repz je int3 sahf sub mov ficom gs xchg mov repnz into incb stos in cmc mov (bad) mov aas out (bad) (bad) xchg jmp call xchg in pop loopne notl int3 mov mov clc repnz out xchg push dec and inc add movzbl or call mov sti sub test mov or dec pushf xlat push fcmovne push (bad) int3 daa lret inc pop push pop (bad) adc (bad) ljmp lret add jbe push hlt mov icebp inc inc aaa mov repnz sbb push adc movsl (bad) (bad) pop leave or ret push adc mov and clc insl lds rcr dec out dec mov mov and idiv or icebp jg jg xor in cs fwait push push mov mov jl les sub push lret push jnp cmpsl xlat add in test cmp mov sbb in aaa mov inc outsb in push stos mov pop loopne xor mov mov jge mov lret pop add or mov movsl add pop out int3 mov popf mov std out dec stc adc mov xchg popf adc popf or cmc (bad) mov popf rcll int3 xor adc repnz xchg pop sti inc and aad mov pop lahf (bad) xchg dec lret movsl mov sbb mov (bad) lods mov (bad) das jbe push je dec inc scas inc pop sub dec push jecxz xor cmp ja lods mov (bad) push ficom lret ljmp sub arpl movsl shrl lods add cwtl push nop or mov xor aad add mov push push lahf push adc mov mov jg aas xlat fsts mov ja jmp rcrl adc cmp and sarl mov int inc loope fmull and js das jmp and loopne lret sub dec sub inc dec mov leave je jno push push jmp iret ret orb addr16 xor in cmp xchg sub sarl xchg data16 xchg xchg inc addb pop aaa cli inc ret pop lods jle mov inc lret jp lahf jp leave jp (bad) int3 es sub lret outsl adc add call das (bad) dec push xor cmpsl mov ret mov mov fwait cmp idiv mov pop ret jae xchg xor cmc push mov das or repz mov (bad) and add stos (bad) inc movsb sti mov lods dec lret xor xchg sub xlat call aam roll ss fiaddl push in add or mov movsl std aam dec fist outsb lahf sbb nop xchg sub leave jge imul xchg jns imul aad add lahf (bad) jnp fdivr movsb xchg test (bad) fucomi fsubrl or jecxz and add adc clc xor pop mov mov add jne mov pusha imul mov pusha (bad) add xchg lahf lcall adc xor mov out and mov pop je daa adc pop xor imul push add push or push (bad) or sub jp adc stos sub add and jnp mov (bad) add push shrl mov sbb sub mov inc fisttp repz inc mov cltd cmp cmp add into xchg out cltd imul adc xchg push outsb or jl pop jge pop bound push pushf jl jmp and cli mov or sbb dec mov and ja mov or lods sbb mov sub mov jecxz (bad) fcomi cwtl cwtl notb xchg (bad) je cwtl test xor addr16 and mov add and imul pop out xchg iret mov cli xlat insl push das repz outsb jmp jne add scas sbb xor nop pop sahf notb sub test gs push mov cmp inc sub fstpl or leave pop iret pop jmp add cmpsb (bad) xor mov xor cmp inc jmp into pop or add lds and or jge mov enter (bad) pop loope sub negb xor mov ljmp mov lds jl cs imul cmp and pop or pop arpl fdiv out (bad) mov xchg push out adc jns lods pop mov mov aam das in sub xchg jbe pop divb jbe cld mov (bad) lret sbb push add cwtl sbb lahf mov ret sbb jo sub adc stos push ret (bad) jae sbbb mov push push pop xor imull push popf jmp sbb jmp mov adc mov stos (bad) ja pop lret push and dec pop test out xor sub ljmp or mov sub mov fildl dec repz sbbb add shr jb mov leave js pushf shl mov dec xor in je popf jge (bad) call push daa ds mov or jmp add add dec (bad) lods hlt xchg mov push aas stos test out cltd imul pop jecxz inc jl out scas je lock adc mov mov idivb mov aas popa dec sub sub shll fidivrl les mov jecxz imul daa repnz sarb push pop fs out in ds add mov pop sub sub mov sub popf jge or pop jno dec jno and (bad) test xchg xchg (bad) push mov dec or and repz stc aad or add ret mov or mov loope enter add scas pushf xor loope adc and and dec out fistl add cmc lds adc xor jp jle in and push jne je cmc xor push sub fs and sub icebp out repnz push jne pop fisttp clc push cld daa jl sub push fsubrl in cmp jl push add xor mov pop adc ret cwtl adc fisttp lret dec movsl or mov pop ljmp es lahf xchg scas int sub ret xchg sub das scas fs int outsb mov sub pop jecxz jbe pop lret xchg ret in pop mov dec dec (bad) lret divb add (bad) fnop das xor jne ljmp clc pop movsl xor xor enter push icebp pop repz sub sub mov out fsub jb pop fidivl xchg jae mov pop xchg jecxz cmp fisttpl sub ror inc xor sub lret mov and and jnp sti xchg pop or xchg rorl (bad) cltd scas (bad) call lods and add mov jmp mov cmpsl test xchg cwtl xchg mov mov push ljmp inc push inc cltd je push push inc nop push xor loop icebp mov out dec lods cmpsl sub mov adc xor rcrl lahf cli clc movsl mov ds sub lods push mov aad lea mov pop cmp dec sti and xchg and pusha push rorb aam dec (bad) mov and mov xchg movsl add xor pop movsb sub xor jge mov mov mov mov repz adc pushl loopne mov cltd out jle xor dec xchg (bad) lods (bad) rcrb ss or sbb cmp and jp add sbb push xor sti leave mov std dec dec out rcrl mov pushl push je dec repz loope adc mov dec pop daa add add (bad) cli jl pop add xchg mov pop mov inc sub pop bound jmp repnz xchg stos mov ljmp cmp popf icebp out xlat dec iret lahf ficom dec std mov mov dec (bad) in inc movsl sub pop push or (bad) jmp inc shll dec push pop imul xchg add xchg jmp sub addr16 sti jb mov sbb sbb pop and mov mov push std test mov pop lea jnp add gs mov repz pop inc ljmp mov or stos add shll push mov fmuls (bad) repnz lret jmp movsl lcall add (bad) rclb add outsl xor cli and out mov call ja test sub loopne dec xor (bad) or jno leave loopne or movsb jge and xor cld and imulb add pusha (bad) lock sub cmp ss pop or mov dec xor aas movsl aas jp and lea arpl inc test stc sahf xchg jecxz push add mov stos cmp pop mov and pop scas push ljmp in pop fnop sub xchg jns subl adc sub lahf cwtl aas and jne (bad) in or out or js mov push mov je dec and sbb mov in push mov adc mov mov sub mov jbe (bad) ljmp imul mov mov push ja test jecxz js adc call push add lds jb xchg inc push push xchg jecxz add inc jmp jle add add and (bad) (bad) jae seto and loop scas ret pop pop cwtl ficomp mov out push adc call test or cld sarl add pop add dec push int int jg int and sti adc lcall mov mov push scas lea lahf in add movb fwait out das xchg into int3 jo nop xor sub ljmp in loop xchg call add jnp xor push mov out inc jb fwait lret fnsave into inc mov clc daa loope jl push mov rorb not rorl clc cmp adc andb dec add popa xchg ja ficompl or xor jge mov xchg out or arpl cmp neg adc push push pop pop and icebp mov adc sarb dec jle push and outsl jmp insl dec push pop test add inc mov outsl (bad) jg add inc call addl (bad) iret jmp push push test mov call sub or dec jge lock cwtl inc or pop jbe push scas push push add in add push xchg xlat adc (bad) jg inc popl fildll cld in insl nop add (bad) ljmp dec cmp ljmp pop outsb add (bad) (bad) repz in add or pop movl sbb es lods and xor adc (bad) pop xor mov loopne and pop push mov inc pop add dec xchg pop out daa call sub or xor (bad) mov adc (bad) lds mov dec jle and mov xchg and sub xchg add in mov (bad) std xor in mov jecxz adc js jns sub mov inc sub imul xchg dec js adc xchg imul adc ret or mov inc (bad) xchg (bad) mov add mov ds fdivrs pop fs iret (bad) pop or xlat inc mov jns imul mov daa xchg pop xchg sbb aam outsb es out ljmp push sub xchg adc jp cltd xor mulb iret sub dec mov mov aad adc pop or add mov inc repz add and jmp mov jle lret xor push shll mov pop or mov mov bound add clc or pop add ja pop sub or jmp dec mov xor pop mov pop xlat stc add movb fidiv xor repz xchg (bad) and or out inc lds das jecxz ret mov add iret mov fisttp xlat lods and push ljmp or insb notl lret mov aam xchg mov je or sbbl dec sub mov add and and mov popw sub or and mov xor jmp mov movsl pop push (bad) cmpsb daa add jne (bad) cli fistpll inc sbb push jge mov sub cmp xchg stc jmp mov jbe push fsubrl lret xor lods xchg ja jae arpl fs mov stc repz and ja sbb ljmp push jns icebp xor dec and stos mov rclb stc jp pop adc dec mov movsl incl adc rcrl jno hlt push stc or test pushf push push add jg jbe cld jmp and icebp or mov enter mov push iret inc lahf adc mov and adc mov inc das fnstsw in sub sub lahf lret stos repz xchg lahf popf inc mov call dec mov add movsl sbb dec mov dec jg jecxz pop sahf jle pop shrl adc testb or in pop and fsubr pushl fldt xchg mov dec decl hlt loopne sub and test das jle lods mov loopne out xchg call xchg xor aad mov jo or rcll jmp dec add or jl ljmp jmp scas lcall adc inc (bad) (bad) int3 jbe xchg fisubr mov and clc jmp jmp pop xchg (bad) lock (bad) ljmp rcrb pushf lahf iret repnz adc add jmp xchg jnp test sbb sbb push pop pop leave mov and rorl repnz test cld xchg movsl xchg pop mov das or shl out (bad) sbb add push xchg mov iret mov pushf xlat mov (bad) aad repz das js mov mov pop mov sub dec sub jmp notl xchg lock xor push pop push das mulb out hlt notb and popf lock sub or outsl sarb ffreep enter pushf pop push sub push out popa out or dec or mov jno arpl push add (bad) or mov ds jbe icebp jbe push popf sub add and mov popf inc iret jle orl imul into pop dec sub or (bad) movb adc (bad) cwtl jmp lcall lahf xchg lea test ret mov xor mov cmp adc bound jge sub dec loope cmp shrb jmp imul lret (bad) jle pop into mov xor loop jae scas fnstsw add push adc and shrl and adc (bad) adc dec pop lcall ret enter out sub aaa pop (bad) mov jecxz push (bad) imul jle pop into cli popf push loope xlat cmp xchg adc push (bad) ljmp xchg arpl adc xchg fmuls shrl jb lds or repnz ja cmp add mov jb call lods (bad) sub clc push inc add jg mov fstpl (bad) out and outsb loope pop mov lock imul sub pop jo or fdivl add jecxz mov inc clc ret mov mov (bad) xor icebp cmc dec hlt mov push into mov adc pop iret pop pop mov dec jmp pop stc sub mov ret scas mov cld pop lret sub or sub jmp inc movsl ret xor jbe (bad) cmp outsb and xor jno sub pusha out dec les sub (bad) scas fdivrl mov push inc mov mov test mov sarl aas dec rorl (bad) arpl add sub pop sti lea call sub (bad) lock divl das cmpsl imul and pushf add pop insb movsl jle lds mov test pop mov cmp idiv fldenv aaa pop push inc mov jl push (bad) cmp dec mull pop mov xor pop into (bad) das rcll pop or aad or decl das imul ret jecxz in shr xlat mov movsb pop (bad) ds xor ljmp shr into dec lds pushf xchg sub iret test mov dec rcrl call out dec or jnp ljmpw mov les les out mov xchg fbld mov mov mov fildll xchg xor into insb pop adc clc jmp iret pushl fs jmp jl pushf jb not (bad) movsl dec out fcomps jnp fbstp ja jae out push xor xchg add xor cwtl pop out xchg pop mov and pop mov (bad) lret in dec or lret mov and lock jg les mov mov or nop jge cmp dec cltd add aaa inc push sub sbbl mov xchg cmpsl mov lcall xchg xor sub adc mov cmp test or cmpsb jo stc dec dec mov mov mov xchg fs jecxz dec mov pop pop xor stos aad stos sub lds stc scas sub sub xchg mov xchg cs sub test (bad) lea aad out xor jmp sbb add cmc dec rorl pop ret mov adc or sub and push or mov xor repnz xchg gs or add fnstcw push das icebp jns mov repz lods cmpsb jnp jae sub jle jb push jno pop stos fdivrl push fildll movsl lods icebp pushl not and sarb xchg out or ret aam or and inc pop or out adc fiaddl mov cmp sub movsl popa dec add sub (bad) icebp sbb mov gs adc mov jmp push daa adc xor add adc sarb xor bound (bad) xchg dec das aaa add std daa sub dec jns xchg add scas mov pop fs sbb mov sti (bad) lods scas daa jge add add pop sub mov fs popf sub scas (bad) out iret ret pop aaa dec sub cmpsb popa dec mov mov fwait stc adc mov xchg dec (bad) adc stc jne push hlt shlb rcll cmpb xchg pushf nop cmp fstps mov and mov icebp out sub inc xchg scas fldcw xchg jmp aaa sub push dec cmp repnz stos test sub imul adc jbe mov dec inc das xor mov hlt out daa outsb mov pop xchg dec ljmp scas pop stos cmp xchg lods (bad) mov into mov and adc inc shr (bad) cmc xor jge jbe repnz xchg aam jecxz outsb pushf sub repz push (bad) mov push orl mov mov into jge pop lret pop or int3 addb repnz add push adc test lret mov test stc sarb scas xor (bad) cli imul mov sahf adc xchg sbb ja faddl push adc loope cmp loopne shrl cmp adc ror (bad) test movsb mov iret pop cmp hlt stos bound lret xchg das dec (bad) cli mov and sub out cmp cmp add sub lahf jbe data16 xchg je jb fidivr divb jmp mov pop mov pop adc idiv pop push roll push scas sub adc repz fistpll xchg (bad) cwtl push pop xchg notl xor loopne pushf pop scas add mov stc mov xor ja test dec stos fidivr int3 and dec rcll xor clc sbb outsl sub and xor cwtl imul push or pop data16 xor (bad) (bad) sub (bad) lahf repz arpl and mov test lahf xchg lods cs xor add std mov dec stos xor ja xor xor push mov imul or sub ja pop jl pop fnop jg daa sub jb cmpsb icebp push fadds (bad) out pop (bad) in jmp inc sub mov int3 xor cmp and add or pushf mov mov adcb jne ds cs outsb ret cmc in movsb sbb lcall aam adc in cmp cmpsb pop mov mov inc (bad) out pop sub or lods repz clc sub je lret jl xor dec in and or (bad) stc pop and jg xorb loop push mov shrb pop hlt mov divb (bad) and inc mov inc mov lock das repz kmovw clc and or cld insl (bad) aam xor mov ja in inc bound (bad) push push clc xchg xchg mov mov nop cmp mov fisttpll or sarl or fisub repnz push ret pop xor add out imul add xor mov sub add punpckhwd cltd lret add cmp mov das jecxz xchg sti mov sub xchg and fidiv xor (bad) loope,pt sub mov inc lret (bad) cmc jmp or jecxz (bad) cmp in sub add mov and and movsl jle push push inc (bad) repz cmpsl cwtl xor call int3 call rcll jmp int3 mov xlat jmp fldcw jmp mov xchg fcom xorl rorl sub test rorb (bad) cmc add ljmp rorb xlat mov xchg call leave add sub mov cmp mov lods inc xor dec addl dec clc fs daa loop cmp xor test sub add cmp xor sub ret pop out xchg stos test xor cli mov aas push daa jno subl scas ss fwait pop add lahf pop cmp movsb je mov pop add (bad) outsl dec imulb mov (bad) push adc dec out mov fldt (bad) or and enter xor loop scas sub sub cs das hlt ret and xchg pushl cmc rcrl add sub xor loopne test pop pushf out push mov push idiv imul pop leave aad test cmp lmsw and das inc jecxz inc add mov lret xor ss std js xor out jnp scas mov jle fisttp cmpsl jb test push jecxz lds and (bad) or test mov add pop mov sti hlt adc es into mov gs fild cmpsl mull loop inc jmp arpl insb sub cmp (bad) (bad) movsb adc scas pop mov dec mov cld dec in inc fstl fisubrl mov outsl sub mov rcr push mov add add sbb jmp mov jecxz jmp sub loop shrb push or push jnp lds inc scas xor dec fsubr sub and cmp xor dec or out xchg lcall jecxz dec xor mov xor jne lock and rcll jmp jns mov pusha pop add icebp lcall je jmp pop mov push adc out dec or stos cmp ss pop test inc xlat add xor (bad) in jmp and cmp mov mov ds cmpsl push das and jmp sub repz bound push gs (bad) add xor xlat dec les adc mov iret sti test adc out sbb fnsave pop in mov jg clc inc addb ja movsl in xchg mov imulb push xchg xorl mov xlat mov fisubl xor in xchg incb pop add mov out or shrl cld je dec dec sbb inc out fidivr test or xchg mov lcall dec (bad) cli xor jns idivl movsl loop test sahf mov xchg cltd jg push pop dec cmpsb ljmp pop push sbb mov call loop ffreep jecxz pop sub cmc int jnp adc faddl xchg rcll add lock (bad) lret sti ret xchg iret (bad) jbe mov imulb push (bad) dec push in movsl (bad) ss jo mov cmp mov sub pop jb jmp xor into xchg cwtl loope fstps mov enter outsl iret rcll sbb test ss lea mov rclb and loop repnz bound mov xchg outsl pop lret (bad) or sbb pushf mov inc sub add data16 stos sub mov call lods scas mov xorl imulb pushf mov iret in and push (bad) mov xlat hlt inc xchg add mov stos pusha (bad) (bad) adc ret dec pop lret pop lret mov repz mov dec daa enter dec jmp adc sub fldt adc (bad) out and mov and dec xor xor notl xor jb jecxz in rolb int sub in incl and mov scas out xchg std ss pop mov mov ror jae sbb test xchg inc add and leave clc sub push neg and imul dec ja xor test inc sub xlat mov in stos cmc shl (bad) or sub negb call in movsb scas imul das shr or (bad) dec in cli gs repz icebp add icebp xchg jns inc sub add mov aas (bad) sub mov mov rclb sub gs mov dec mov movsb mov out cmpsl jmp rcll pop into icebp mov or sbb fadds iret adc add jecxz sub mov lea xor outsb xor iret and negb shrl popf cli lahf pop out loop xlat scas inc popa sub add xor mov stos inc dec jmp fsubr popf pop mov enter push clc dec sub mov ljmp clc mov mov aaa enter xchg int3 mov dec repz mov sub stc into add push (bad) imull aam push or fist pop rorb scas mov or jmp test in sub in fldcw mov fbld sub jmp xor pop push sbb adc pop scas sub movsb sub or jmp cmp sub jp divb adc fcmove dec ds cmp xor pop mov mov fdivrl setae divb repz xor das jl sub (bad) pushl mov pop gs incb cs or cmc jp les mov sub pop jle dec das ret inc add sub insb nop cwtl cmovg clc inc mov add lret and sub cmp adc jmp inc cmp test stos xchg popf repnz test pop add outsl test inc pop stos xor das and iret cmpsb mov repz cli mov sub test ror cmp add xor mov jle aam pop cmp insb adc fdivrl ror repz dec iret mov idivl (bad) (bad) jne (bad) out daa add pop out jmp jmp add mov ja leave push xchg push cmc add adc pop ret push adc xchg std out or pop int3 loopne sbb pop and in clc mov mull cmp cltd (bad) pop (bad) bound jne inc out ljmp push cmp lods stc leave in jnp pop or pop lcall or out sub popf insb xchg lahf mov and mov repz dec outsl dec cmp push or jmp push incb fs jmp push dec sub addr16 cmpsb (bad) inc mov and sbb fiaddl mov jno ret test jecxz push inc mov scas xor or or xor or cmp std pop cmpl add fnsave (bad) out mov xlat inc fistp sbb mov cli xchg (bad) movhps xor imull mov sub and or xor inc je lods clc push xor test jecxz xchg (bad) ds out pop jno js adc adc sub ljmp xchg repz mov popf mov (bad) jne sbb pop and sub mov pop pop imul mov lret sbbb pop outsl lret (bad) jnp mov fiadd xlat cltd mov push pop add jne ljmp loop xchg adc jb daa add push cmp add imul sarl fldenv push iret pop cmp fldl daa push movntq jmp lods push lds repz mov pop rcrb ffreep xchg lret mov push push xchg pop loope xchg dec mov add (bad) mov mov jae aas and cwtl pop xchg jne sub out in push dec call add push ret sbb xor lock lret mov mov and sub aas popa adc and mov xchg push sbb popa stos or inc es or sub mov call pop pop out ds out int jp mov (bad) inc sbb pop pop pushf loop xlat mov pop lea and jl sub mov add (bad) movsb push in les or and aas mov lahf test push fildll adc mov lds mov dec icebp call push or test repnz shr push add sub push jl pop jmp je pop loop je jmp jecxz cmp dec and add notb xor jl in ret shr xchg in test fimull or jle daa cmp sub inc mov sarb test stc mov gs enter jl pop and sub push cmp aas xor and add sub mov repz adc into call pop mov jne inc pop stc xor (bad) add mov lcall sub mov in (bad) loope subb or mov inc pop (bad) push pop ret push movsb out adc mov add out mov sub fsubp xchg stc fbld iret xchg mov add mov mov ret mov (bad) xor adc sub mov out sar orl (bad) fisubr ror cmp dec idivb fadds add es ret jg fsubrp aas repnz lods fbld fistl out add in adc push sbb add aaa addr16 inc xchg enter in lock push adc xor sub (bad) inc ret scas (bad) xor ljmp out cs jno fisubr push xchg jp adc ret and ret push mov sbb sub add stc or sub jo mov lret mov push dec cmp repnz xchg mov shlb ja lcall clc xchg mov int jp mov aad push jo loope xchg test daa or xlat test pop mov shr jecxz dec lds in call mov lret clc mov and fs mov ljmp out das sti sub cli cltd (bad) ret jmp imul arpl add cwtl jo dec mov cmc dec mov insb dec std insb xor popa add and mov (bad) jmp cmp sbb add pop fs cwtl jns mov addr16 push cmp retw (bad) dec and mov mov adc daa int3 pop jg into lcall icebp inc cvtps2pi xor lock dec (bad) adc mov lret dec ljmp sub int3 sbb aas dec sub idivl mov push repz (bad) jmp xor mov lds fcomps xchg lcall ds cmpsb add sbb cmp pushf ja imul ret jne sbbl adc add int3 jl and (bad) xor xor andl sub aam loop cmp cmpsl push mov cmpsl daa cmp (bad) jbe jmp xor pop xchg int3 cmp add xor mov mov in fsubrs shrl inc lret adc pop test cli inc push insb in pop xor ds (bad) lret loope push push mov imul xchg or cmpsl pop sbb xchg xchg sub xor ret dec lods pop sub xor daa iret mov inc pop fdivs or add jno scas inc out shrl mov or sbb fimull push push dec (bad) ljmp out jl (bad) divb pop mov lret cmp dec out cld test scas pusha mov add jb and add mov cmp into push cmp add adc cld lcall mov roll mov ret pop cmp stc mov ljmp das mov push add sub out pop add push and stc sub push mov das xchg cwtl enter mov sbb negb mov jo sub mov pop push out ficoml andl shll cmp and cli (bad) push jp adc clc mov dec enter inc jge movsl jae scas lcall loope mov icebp std inc inc mov fscale xor or imul mov xor xor aas mov inc mov icebp stos lock lds add cmc dec xor ret pushf imul push sbb shrl ds sahf sahf cmpsb leave and jge cmpsb xchg cmp mov sarl cmp sub xchg fidivr push (bad) or pop jns imul mov xlat rcr lods hlt or ja push inc mov dec jae jnp mov movsl imul xchg mov jge inc clc (bad) jp and (bad) lea dec popf div pop out jge idivl and les stos jo xor mov jmp hlt cmp fsubr pop or dec adc mov ljmp popa adc jmp and sbb js and pushf pop sub cmp xor jmp pop iret xchg lds jbe dec and jo mov cmc push shrl lret fnstcw out adc mov mov dec lahf push ljmp sub mov ljmp divl jg fwait pop mov pop shr imull inc adc repnz xlat jns dec inc adc lret mov cmp mov in (bad) mov into cmp mov negl fidivl hlt (bad) or add xchg popf sti dec adc lods mov jmp (bad) mov or js inc mov dec and mov sti jae leave add mov xlat add cmpsb mov xor icebp out gs push or push sbb cli mov (bad) jg jl out push mov mov mov cmp mov negb mov adc mov sbb add pop mov add dec add sub or jne movsl mov (bad) out add adc ror fcmovb dec mov and sub repnz add stos push sbb (bad) xor mov inc sub inc mov jo and sub xor repnz sub pop cld pop or mov lds movsb push inc mov or sbb daa aad push xchg aad sub jmp or sub cmp adc loop (bad) stos push inc mov mov dec mov pop push cmp push or test je mov and movsl dec in (bad) leave out push into inc xchg dec pop push mov lcall xor aas dec mov bound icebp xchg inc or shl dec mov out sub ss inc xor sub cmp cmpsl or xor aam (bad) dec insb fwait mov sub cltd dec jg jge loop dec mov xor mov mov adc pop leave mov and sbb movsl jb lahf jbe push push aam jmp cltd jne out ror addl aas std xchg movsb jmp mov lods pop clc out or out std xchg pop adc pop and add cmp fidiv mov pop sub (bad) sahf dec inc sub cmp test loopne or mov imul pop aad ljmp push sub mov pusha mov pusha mov cmpsl mov mov add stos adc lea stc push xchg xor stos je push cmp sti mov (bad) mov sub (bad) pop sbb mov jae mov imul sar xchg test dec push sub pop inc adc fs repnz mov push push (bad) (bad) inc pop ds push cwtl sti cmpsl push cvtdq2ps mov adc aad aas mov pop push decl jg pop jg jne insb push mov cltd popa pop sub adc aas lock ret sub stos mov push adc push push mov ljmp mull pop push movsb daa shrb not cmp add jg std pop roll fwait mov push or cli add xchg imul addr16 stos push in repnz sub mov inc xor pop xchg clc insb dec sub jmp (bad) in mov clc jne aad (bad) mov ds push ja ret pop fadd test cli repz leave cmp dec and push in jle cmova pop shl and xchg jae sti jnp ficoml (bad) xor pop xor xchg pop add sub out push add add sub jb ret (bad) fs mov je pop or sub rol and push mov repz movsl or dec mov into loopne iret pop or push mov lret sub cmpsl jecxz xchg hlt pop jmp pop inc inc decl add xchg push sbb call or sub scas pop mov mov clc aas out dec mov jp xor ror jge push and pop (bad) xor repnz xlat sub dec (bad) jle fwait out push mov adc scas popf movsl push (bad) dec and cwtl sahf in popf int3 lret adc or scas cwtl dec int3 adc fs mov scas fsubrs add cmp in and xor addl mull pop mov (bad) jo jo (bad) mov movb jmp sbb loope ljmp mov push dec repnz mov xor sub fisubl shlb sub out popa mov das test (bad) or ds xlat mov loop mov mov outsl imul sti lret jl ret fst inc dec shrb addr16 popf xchg gs ret insb jns (bad) pop dec and test stos movsb ljmp lds push dec fmul add pop or xchg out ja aas push pop push pusha icebp lock sub insb mov xor test pushf push cmpsl jb (bad) gs mov push pop into inc icebp inc imulb dec ret rcrl mov lcall xlat clc out sub mov xchg mov mov xor inc mov lds aam jae jb push jge nop sbb sbb push pop mov push cmp icebp fwait adc pop cmpsl or mov clc in movsb or cmp sub fldenv mov sub icebp pop sahf jnp xor cmc xlat jmp xor pop test lret iret aam mov (bad) xchg xor scas lret std push xor xor push cmp imul cmp daa jecxz xchg fcoml lods leave mov jg sbb fldt out push (bad) out loop pushf and or push rcll push cmp add or mov insl xlat cmp pop jmp je and xchg xor pop ljmp mov and mov mov and stos loop shr leave hlt cmp cs xor or pop flds dec lret xlat cmc dec dec mov push dec add and mov xor imulb aaa pop mov jne jp and mov sub jbe or in cmpsl clc test sbb dec inc jmp scas xchg lret rcrb lea mov callw xor ja das cmpsl jl int3 dec add leave or adc mov jmp adc popf dec shr cmpsb mov xchg inc adc inc mov push ja cmpsb jecxz xor sbb ret push mov icebp popf decb pushf cmp sub mov lret cmp pop (bad) jne pushl pop lahf dec push mov sub lods scas shl inc imul or outsb scas sub repz les leave and inc mov mov ljmp xor mov enter sub ficomp push dec push fs mov jp dec pop negb clc or and push dec stos fstl pop stc insl scas loope iret outsb mov retw push mov mov push in cmp mov das mov pop cld adc stos xor sub sarb test sbb fdivl je imul lahf lds lea fidivr add (bad) sub mov xchg mov into mov and jnp add ret in mov in and (bad) mov pop xor lahf add aad sub mov inc (bad) pop loopne dec std pop xchg std xchg adc je (bad) or pop sbb lret cmp pop mov loope dec out pop xchg lcall (bad) (bad) aaa mov sub jne popf dec add adc or movsl and push cmp add cmp mov inc loop pop stos cmp jmp adc or inc aam pop je repnz fnstsw jmp outsb aam cltd mov mov rol sub and xor fldlg2 jg roll cmp test (bad) enter sub mov cld and imul icebp inc mov push movsb sub lahf push add push and fist lret pop xchg xchg (bad) dec js je imul pop popa or dec ja adc addr16 dec lea lock jmp xchg xlat in mov or test push cmp jg addr16 leave cltd jecxz cmp xor call data16 push cmp pushf jg pop out push sti mov mov mov push ljmp pusha pop fmull inc fidiv push je std mov or inc fs iret pop sub ret fistpll clc or ret mov adc lahf int3 lods mov testb ret imul daa xchg repz pop xlat xchg repz and sub imulw std outsl repz mov rolb movsb push jae xlat adc shlb mov cmp lret mov sub fldt add out jne in sub push mov pop (bad) mov xchg mov vmovddup cs xlat icebp repnz mov add dec lahf addr16 sub dec idivb push test cltd or add pop push jb cmp mov repz inc inc sarl jl and fsin jno and sub add mov or lods adc cmp mov xchg sar pop mov jae,pn test jp lock pop pop cmp call inc mov jmp sub in cmpsl cmp and mov mov ss (bad) cmpsb mov cwtl mov adcb and inc lock imul (bad) xor testl xor stc push xchg dec push cmpsl cli push scas test mov out jmp sbb pop add lret repnz or mov outsl lods push pop mov dec fnstsw and and xrelease jg add outsl add mov xchg push dec fdivs push stc mov adc cwtl movsb negl lret and rcll xor loop dec test jae adc (bad) mov push mov mov pop lahf popa adc xlat das int loop sbb in pop xor sbb test mov lret or lods xchg les and sub leave fdivrs pop pop mov imul aas test imul nop and push push mov shrl dec xchg out mov push bound xor jbe repnz add jmp or ret xchg cltd lds mov ror and mov sbb pop icebp loopne mov int3 sub pop and mov xor out into or ja fistpl ret test xor add cmp (bad) pop orl add jns sub dec add mov jge mov and outsb iret push push sub sarb sbb call mov stc push dec xor jmp out ret sbb and movb cmp sub hlt add das jns mov push cmc push dec mov and and leave cmp imull out cmp cmc scas cmpsb mov out cmp pop xor xor and (bad) cli cmp outsb fcoml push out inc popf sub or (bad) adc jg stos cmp and subb mov sub add mov test into sti cmpsb jmp add insl pop adc hlt call cmp inc dec inc popa jns xchg sbb add int3 xchg mov fwait aam add cmp sub aam fbld add fucomi and dec idiv sub or out cmpsb xor jl cmc imul and xchg mov mov or aam mov cmp sub ss add xor xor clc cmp stos les ljmp aas mov inc ret stos clc push mov test movsb mov xchg pop (bad) or xchg and xor daa xchg add stos lret lret inc cli inc and and xor sub test mov pop dec cmpsb xchg dec mov xchg mov jle pop xchg (bad) fbld push mov adc ljmp sub das loopne aas mov cmp add xor sbb scas dec paddusw sub mov sub or in xor int pop cmp idiv add enter lret popf add pop stos inc adc ljmp je jno push loop lock push pushf jo pop jle xor cmp mov es repz sbb nop cmp popa insl or leave lret mov mov or sub xor icebp cmp movsb inc cmp negl rorb jecxz pop call fistpll xchg es pop sub adc xor test cld mov mov or fild mov pop cmp xor and enter pop xor mov rcll cwtl nop gs rcll and mov cmpsb or roll dec test mul or mov cs pop sti addr16 test movsl out lret push sbb daa mov sub test inc (bad) pop std xchg pop push dec adc mov mov imul add xor mov ljmp out divl ja push jmp test or push adc xor xlat mov dec lret test or pop sub and test and mov pop push or xor inc xlat xor repnz sub out lds mov (bad) mov add pop xchg pop jbe sub and pop add dec lret jb xor stos fs ss mov cmp dec and xor andl ja (bad) mov xchg insb add (bad) nop (bad) inc ret push stos (bad) xor in cmp pop cmpsl imulb mov test movl ror ret mov xor and in add push mov inc mov add dec cli (bad) jne jge pop mov mov (bad) adc xlat xor test (bad) faddl push xchg or das dec xor lds je mov push jl and (bad) out mov xor adc faddl add call fnstenv cwtl bnd mov dec inc mov stc dec fist arpl test inc jb xor (bad) cwtl and dec dec ljmp and jl pop ljmp and xor or sub aaa imul ret (bad) fnstsw (bad) xchg xchg out clc cmp cmpsl hlt pop daa jne divl loope lcall call stos xlat xor mov mov andl leave aad mov (bad) xor ficompl pop push sub loop jmp out repz cmp mov jmp shrl xchg sub movsl sarl lcall loop popf outsl je jp add jecxz jns inc add bound push and ficom inc std xor lret sarl lods shrl push push xor xchg lock leave dec mov lret mov push das roll and xor xor (bad) push jnp movsl shlb rorl mov add scas repnz push (bad) xor mov add imul sub pop mov dec subb mull xor ret negl cli and pop scas jp mov shlb xorl call dec xchg xchg (bad) or (bad) sub out jg and shrb sbb rsqrtps outsb ljmp mov icebp jnp rorl out push jns addr16 das (bad) mov (bad) pop fnop xor add ret mov decl add sub daa leave ja or dec add xor stos lods int3 lahf sub ret popf mov das xor inc push iret xor ret hlt sbb stc cli lret and add push rol mov cwtl pop call pop push (bad) rorb mov lea mov fs popl or push xchg and (bad) out cli test mov outsb and stc push imul stos mov jl iret and or cltd and xchg ret pop mov cld out sub or movsl adc inc push cmp inc jmp ljmp fmull and ret or fadds xor lret jmp ret sub ljmp mov cli push push clc xchg xchg scas cmp popf rorl cmc insb mov jnp add mov (bad) mov std mov arpl stos sahf inc or mov outsb jmp adc sbb sub daa fcompl xlat cltd sahf lock out mull stos ret scas nop ja pop mov fdivl mov fidiv fldcw push add jne lods fildl cs sub cmp push xor js shl lea and in cmpsl out push nop pop repnz bound nop jns shrl sbb add fdivl jno add jge pop or inc mov adc (bad) mov mov xor sub loop push xchg data16 clc mov sarl push ja jg or sub dec push adc orb out or or aaa inc jl xchg dec sub mov stc pusha add adc popf mov pop dec mov jae mov and dec xor insl or mov or jno ljmp ret jae and xor inc shrb stos sub and jp lods mov xchg inc (bad) mov scas lcall test rclw inc and loopne sub dec rcrb jle mov sbb jecxz lret das testb adc dec sub sub add call (bad) or ret movsb (bad) mov cs mov js xchg fmull imul (bad) or bound mov (bad) pop jne or mov in sub (bad) fnstenv jl test xlat jmp xor repz repnz fcmovbe mulb ret mov je mov add jg add mov jecxz jg scas pop mov or shlb jle mov imulb inc rorb (bad) or popf icebp cmp bound cmp push out jl comiss add xor push pop xchg push mov xchg jbe and mov in xor or jno adc sbb fdivrs rcrb jne mulb add add inc iret mov std in daa ja inc sub out pop repnz fisubl xor jo cmp addl (bad) (bad) rol or xchg sbb ret cmp and add jle movsl cs push mov mov mov push pushf (bad) mov inc xor mov daa or fistpll ja jecxz sbb pop pop or loope add sbb aam sbb xor pop or std enter (bad) mov xchg and add mov jg lds mov add out pop and aad mov mov sub call jo ret pop pop xor stos test inc dec loop lret ret inc sub test jbe pusha div cmp jl inc out dec (bad) lret push movsl dec movsl std nop jbe and arpl dec dec out jae add hlt push sti pop xor xor addr16 imul cmc incl xchg lods clc dec sahf inc and lock dec out lea stc mov xchg xor out and pop push in cmp scas repnz pop repz pushf pop lods test mov mov into jmp leave sub fmull movsl (bad) mov xchg jmp xor int3 or mov gs jg ja mov movsb cli (bad) pop mov dec pop add or enter jl negb in or (bad) aad add pop or xchg or test push or (bad) lock cltd fadds sub insl cmp jmp aas cld icebp mov pop int3 ficoml xchg dec arpl add scas fs test dec popa mov push out xor sarl xchg xchg leave jmp cwtl pop fnstcw movzbl adc in leave dec pop push mov sti and adc out cltd in mov nop jg sbb add mov (bad) or js mov clc orl sub or bound leave notl sub out leave sub jmp cmpsb add cmp adc movl pop xor mov cmp pop sbb mov bnd push roll outsb dec pop arpl dec jnp dec popf lock fnstsw push sub add fisub xor stc leave sahf and cmp int jle cwtl sub sub and adc xchg xor test mov jmp adc dec xor (bad) ja ficoml or hlt sub (bad) xor xor jno adc mov pushf and movsl mov call pop (bad) fdivrs (bad) dec mov inc dec dec xchg dec mov lods cmp movb and mov dec dec sub loop fsub addr16 pop lahf rep pop shll mov jmp hlt es dec pop repz (bad) or mov lock push sahf xor sbb xchg mov mov out std popa test add mov rol pop mov mov rcrl xchg jnp sub jne fsubrl pushl adcl (bad) sub sti loop pop imul outsb test add mov add sbb es ffree iret sub imul imul imul cmpsb inc and or sbb mov push gs mov fidivl xor out fnstenv inc repnz mov shrb aad dec xor xchg fdivl pop cli mov mov mov sbb stos fcomps push xchg ljmp fnsave ror or les (bad) repnz sti sub adc cmp adc add rcrl int3 ffreep mov shrb sarl lea mov dec or cmp mov movb clc movb sbb jl and mov into lahf push into and mov es sbb inc sub ret xchg notl pop mov lds mov add xchg aas mov xlat mov pop rorb mov sbb leave dec in mov sub or add push pop in je data16 sbb scas inc mov mov or out imul dec mov sbb sub mov movsb ret addr16 or pop jno imul mov leave jne out mov lcall dec or rorb or nop aaa xor enter in ljmp mov mov sub les cmpsb lods inc sub bound cwtl mov in jo sti cmp mov jb cld ljmp add and daa xchg ret cwtl jle adc sub and fdivl or cld loope incb lret sub lret repnz notb xor lock jmp daa (bad) (bad) cli lods pop mov push mov in movsb push sub adc (bad) pop scas lret ret out sbb mov test shrb push imulb mov add inc mov add push cmp jb xchg sub pop jmp push stos leave cwtl and fist add cmp cmp jle pusha out cmp jge adc (bad) add std push push cmc jmp and push add out lret pop das mov ficompl mov and lcall xor movsl or hlt dec inc out xor fisub push out adc add bound into lret mov movsb (bad) mulb in iret cwtl cmp xor mov ret lahf stos mov (bad) mov and mov cld inc pop inc xchg pop cmp xchg cltd fbstp rorl (bad) jne mov data16 fldcw gs data16 inc pop addr16 jno inc cmp sub pop test loop in xlat arpl and data16 enter sbb mov bound (bad) gs fsts out jmp xchg lcall movl and adc (bad) push mov clc repnz cmp push add fs cwtl aad xchg sbb popf xlat push mov scas and stos cltd ljmp mov adc mov mov add loopne (bad) cld into mov or sub or xor jmp pop pushf nop sub push mov aad mov out sub ja add movsb into daa test subb pop inc sub mov (bad) pop lret nop cmp lock add jmp repz jbe (bad) mov into clc cmp jecxz js cwtl ficom repnz mov lds test sub mov pop int jno xchg into das pop test leave divb jge cmp leave and call das sub jle shrl or mov adc leave jo or mov adc mov jecxz push push (bad) mov std movsl fcoms sbb and lcall lahf adc mov xor test dec cmpsb cltd push mov (bad) fsts repz shrl movsl bound je push sti popa out add jno push push adcl call cs jb lret lcall jp lahf push pop fimull jecxz rcll fs call clc popf add mov cmp std in orl icebp sbb or mov or mov inc movsl cmp pop mov dec mov or xchg pop iret mov fiaddl loope jmp mov mov out pop mov dec pop xchg mov aas or xor xor and jle mov mov xor jp xchg cmp fimul addr16 lds sbb out stos aaa mov fnstcw jbe loope insb movsl movsl add sub scas mov and lcall jno push out dec jmp je and cmpsl cltd jle push pop xor outsb clc sub lahf jo sub xchg hlt ret pop insb sbb sub mov outsl fiadd test push iret mov and out mov or or push and and in ja mov pop (bad) jmp dec xchg clc jmp lahf dec mov xor cmpb cmp test (bad) sti lret mov xchg mov stos les pop lds xor mov pop or mov cs fs negl and pop repz das (bad) jne stos xchg inc mov sti pop or pushl adc out add popa mov or mov jae pop imul push movsb cmpsl decb or mull xchg (bad) in pop add call xor outsl lret aam xlat dec or dec aad jbe incb or out jl pop adc popf negb add sbb add sub xchg sub and add cmp repnz sub out lcall jle jno ficom jne push pop in pop dec ss inc cmp xchg jge jae push pop pop popf incb out cmp jle ficom sub jae daa mull push sub push loopne out cmp sub orl add push cmp popf sub inc dec add cmp sub out and daa xor pop mov fstpl push icebp lahf xor xchg test inc cmp jg ret jle inc and mov int3 jp xchg xchg pusha adc sbb cmpsl dec mov and (bad) imul (bad) dec cmc add out cli test ret xor pop das repnz adc xchg (bad) adc repnz mov inc clc daa and loope iret imul xchg sub out lea mov or repz pop testb pop sub pop inc and insl dec inc out or cmc xchg mov push mov out sbb mov mov jl add fist dec lret scas xor ljmp mov mov or out aad inc xchg jl mov cs adc pop pop push in jnp and pop or xchg or cmp xor or data16 jae iret bnd test jne mov fiadd in jb (bad) and xlat cmp sbb jbe movb sub cs xor pusha xor cmpsb outsb inc mov lahf xchg sbb std add lcall mov xchg gs jmp xor jge imul movsl sti imulb nop xchg inc sub pop lret std arpl dec mov data16 cmp xchg idiv jo btc ret jmp push mov sub adc or mov jp addr16 or jmp aas ret sti and xor cmp add test mov sub pop mov or cmp jae jmp pop dec mov cmp pop cmpsb add xchg enter xor xchg mov or shrl add stos das rcl pop or (bad) ljmp scas aas in out mov rcrb mov inc aam imul add add push mov aaa fsubr out pop mov leave push xor clc es pop xor xchg inc add loope push add xor push or mov in cli shll sahf mov jae out or dec ja orl ret add or das and cmp lret or jno push repz mov aas (bad) in lret xchg and add out cmp adc subb lods sub add or mov aam lret (bad) cmc and sub dec add mov pop lods xchg lret daa cli mov cmpsb arpl adc jmp pop sub les fs scas int3 cmpsb (bad) sahf adc in cld arpl and sbb xchg daa sub pop cld mov out mov mov popf mov cmp jne add adc inc and movsb push adc repnz pop xor sub imull push sub loope xor and popa xchg sub roll xor or shlb mov pop clc mov (bad) sub shrb mul sub jmp push lret jl arpl mov insb (bad) popf xchg divb jns add pop bound push jmp dec push repz push out ljmp add push pushf mov mov pop sbb xor nop sbb cld push push dec adc push inc xchg (bad) and push test (bad) xor mov sub movsl push pop repnz mov data16 inc sub scas dec inc negl mov and fwait cmp or push inc mov out addr16 std out daa mov mov push jecxz dec mov rcll cmc or adc negb push outsl mov mov pop rorl pop fildll test adc bound loop xchg mov jmp jp inc dec mov sub and mov push xor jecxz lret out mov loope mov mov add imul xor inc add das sub test sar push mov and sbb int loop,pt sar int3 cmpsb sbb or push mov jo push pop test dec ja fdiv aam out dec jnp and inc in aam push sub fsubrp pop ret mov jmp cmp dec mov pop or xlat sub jbe mov xchg inc imul or mov enter xor stc mov rdpmc jl imul inc add xor loope loop int shrl mov div mov dec push mov sub jge sbb stc pop fbld je sti nop cmp pushl ljmp push xchg in and out inc mov mov (bad) ffree adc rorb xchg icebp loop dec and jmp dec iret sti sub sub lds adc or clc in fistl mov repnz clc push pop rcll cmp rcl mov lret mov sbb sti mov xchg out and ds (bad) cmp or es iret add jle xchg dec sbb jno jmp jge (bad) pop repz mov test mov (bad) lcall stos je cld rcll out xchg fcoms hlt stc sahf jmp mov push jnp movsl sub cmp daa jmp inc adc es dec icebp cli cmc int3 in out jne,pn ja shl dec div add mov mov mov into xor mov popa push js movsb test test call fmull dec jmp daa push dec repz out sub mov push shlb jecxz or daa call out mov cwtl in mov vmaxsd loope fs (bad) ja cmp pop lcall sbb iret inc sub dec iret daa sahf adc cld repnz mov aas lret xor cld ret sbb xchg and shll lret orb cld pop pop and sub pushl mov les repnz xchg mov sub mov idivb and pop (bad) mov sub std pop daa or (bad) dec and lret pop jno xchg ror dec stos cmp leave and push adc inc into mov leave jne mov lock pop sub (bad) repz repz insl sti dec push lret mov cmp mov adc push call frstor cwtl pop imul jle cmpsl cmp jno inc push and mov (bad) push inc xchg dec cmp dec add ja push or pop divl add or jp (bad) jg and jae and cmp dec sub popa loope jmp mov adc dec fsubr xchg and and hlt movsl xchg xchg inc jb and sub addr16 sbb cld clc mov push sub stos sub jle and mov sbb lea das lods addr16 sub shl out shlb test mov dec in pop dec cwtl imul mov mov rorb cmp xor out pop out ljmp jbe in cli loop xchg scas jo mov add pop loope aam lahf xchg or scas mov add jge insb leave mov xlat inc fwait or rorl fldpi pop out cmp mov outsb mov or ficomp sub loop and mov xor cltd ljmp repnz cmp pop sub movsl jne mov imul mov mov ficompl pop inc sub dec sbb add xor lock fs (bad) int3 and push adc and mov jg push push push in cmpsl pop adc dec add sub lods mov and rcrb jg jecxz testl je mov xor aas mov sbb pop pop lcall repz loop cld push das xchg pop push pop add pop loop sar lcall das ja pop jo or sub aad pushf clc xor sbb jb arpl mov mov dec incb push es imul push dec cmp and dec insb stc jmp cmc fistpl xchg call lea in sub cmp mov sub cmc (bad) mov cmpsl cmp cmc push mov lahf jle imul mov add test sub mov sbb xor fwait cmp sub (bad) movsl adc and (bad) in pop adc inc (bad) xchg ficomp jno sub jp js cwtl jge ficompl cmp js pop call lahf cmp std or pop in inc xor popf push decb cmp out dec daa incb jne pop mov or stos sub push pop push lds mov je push fsubrp idivb cli sub xchg nop faddl add ret or sub dec fsubrp stos in leave or or push out mov mov mov stc jne mov es or sub out iret mov inc mov movb stc xchg push sub pop push dec loop jge out mov jle insb xchg cltd lcall jmp in adc mov mov jmp xchg mov lahf loop cmp xchg iret or cmp xor sar out mov push into lock das xor jp stos xor pusha push add mov (bad) mov dec insl cmp std (bad) scas std mov mov add pop scas cwtl shr and sub add xor out pop sbb cmp push loope dec xor addr16 pop jmp push xchg jecxz mov mov sbb add mov faddl adc mov pop inc sarl adc cmp jge sub aas lock out sub repz add ficom xor test sar mov inc int3 mov inc xor or mov out fcmovbe gs shrl inc adc pop iret and sub test loop cwtl addb pop add push ret push inc dec mov pop sub cmp out (bad) ljmp mov xor mull (bad) jnp fxch imul xor mov sub cli or js ret inc pop outsl push call and ljmp popf loope out nop das xchg pop fldcw xor mov add (bad) repnz lret out ja push cmp ret or push sti mov leave and ljmp sbb fsubs cmp lret xor insb xchg in popf push jle mov stos jno cmp cmp jo add jge xlat cmpsl cld cmp ret mov aas mov xor test (bad) jge and movsb jns jmp fstl or mov or idivb jl cmpsl pop inc adcb cmp mov or push or jbe dec xor pop in dec test (bad) out fs mov out out lods inc or push mov jns outsl mov (bad) fs cld leave movsl loope jle (bad) xlat mov (bad) mov in push out (bad) inc js lret gs popl out xchg stc std int outsb or pushf add mov les (bad) test sar pop js mov cmp fdivrl in leave aam and fwait sbb add arpl stos mov (bad) xor rclb cld mov mov pop outsb mov std cmp cld out cltd dec cmp scas mov push popf xchg ljmp mov fiadd sub aas adc mov xchg pop pop mov fisttp stc mov imul mov mov sub jmp popf pop pushl sub popf rcll mov iret cmpsl dec mov xor sub aas scas xor in ds (bad) push pop stos sub negb mov das lods ret daa or imul popw iret xor jmp dec int3 and pop negl mov inc push mov add pop mov mov mov or sbb dec xor jne mov bound sub sub ja imul sub mov push jmp mov into scas adc (bad) cld imul (bad) decl and jne and lret mov repnz in sub sub mov or inc cmp cs fsubs lcall adc sub fstp sub in daa aad adc test (bad) mov adc jecxz test sub (bad) loope xor icebp fwait xchg lret lahf dec mov xor inc sahf xor sub gs into mov (bad) and xchg dec mov or fdiv jbe or dec inc pop js addr16 and icebp dec jb inc cli pop and repz jnp or ljmp je cmp jmp (bad) cs mov pop repnz adc mov sub push test pop stos sub test shrl movsb out sti test mov insb orb xor cli loop nop mov sti stos test sbb add scas add enter add xchg dec push std in lret cltd sub mov int hlt jmp (bad) stos push push dec add sub pop and daa lock div data16 mov lea sbb stc xchg (bad) out push ljmp leave sub jmp stos mov adc jo lret push xor adc ret test data16 jbe (bad) in mov aam pusha div int3 in mov adc stos ret cmpl jmp add mov mov xchg mov mov ds mov add (bad) mov cmc shrb out and jle bound lock and scas gs aad mov iret jecxz xchg jecxz jbe or push insb jno test inc daa daa out pushf inc adc repz xchg add shll lret lock mov jb das push adc out cli loop (bad) out xor push mov jae outsl jo sub ja inc dec xtest popf insb lret lret sbb cmp jmp ds inc and cli mov (bad) dec inc sub mov sbb xchg sbb repnz add stc mov fistl out dec jns or sbb dec jnp xchg (bad) in mov adc adc sbb into mov mov clc loopne push jno xchg fisubl andb or cltd adc stos sub or dec push clc inc and out pop or sub fs mov mov mov mov divl push loope xchg xlat in data16 jl fsubrs xchg out cli mov dec cmpsl (bad) fnstenv xor add mov jne lahf sahf jl je push lcall mov xor stc xor xor jne lock (bad) pop mov cmp jecxz mov add sbb clc pop add jo popl or mov stos sub xor out add out ret arpl or jno call inc mov jne jne cmpsb in icebp xchg add lods adc push add xchg cmc movsb mov mov and popf popa das add mov push xor cwtl (bad) icebp mov cmp xor out pop and lds xor sbb pop jle fldl dec mov mov rcrl xor test push pop pop mov aad aaa or repnz mov (bad) xor inc push (bad) xchg mov cmp pop repnz sbb leave add jbe adc mov adc fnstenv cmp xor (bad) xchg jbe addr16 test notl out xchg out pop movsl mov or push xor xor test inc dec and push xchg cld mov subl gs sbb stos or jmp mov xchg (bad) cmc rcll nop push repz inc flds cli sar mov mov std mov push outsb mov xlat inc and push int3 mov and pop ljmp movsl jecxz jle sub ret mov sti cld mulb and jbe daa jns (bad) pop mov jmp sar add push (bad) rorl xorl inc dec mov dec imul jb into pop sub add lret (bad) jno ret add js movsb lods jmp test adc add ljmp xlat mov dec lea ret push push jmp or push xchg dec repnz popf inc mov xor jge insl insb push popf inc mov cmp lcall or into mov lods pop mov add xor mov clc mov mov xor sub out mov pop into out dec push stc add jmp push xor sub cmp add jbe outsb enter imul sub (bad) leave pop push leave imul xlat sub or outsb and sub leave or icebp pop pop fstpl pop ret repnz inc ja xchg ljmp or dec fiadd xchg loope call (bad) push je sbb xlat pop pop mov or test movsb test adc bts (bad) out rorl adc adc push ljmp jne idivb shrl enter test add rcll jl inc pop dec lret add incb stos sub jne mov adc mov or out fs pop test mov mov mov mov push cld lahf insw (bad) cmc pop pop notb lods and bound pop push or div in or pop out das push pop inc data16 std lock negb pop mov xlat lock inc lahf test or iret addr16 ljmp sub jg fs repnz cmp into jbe adc adc add mov dec popf push stc shrl mov jnp sub repz stc cmpsl stos mov gs jle,pn iret inc jae xchg pop fs stos int3 adc mov enter xor iret mov into xchg adc (bad) jmp adc dec out or adc lock lahf (bad) mov fwait mov mov dec xchg je or mov test std mov mov pop sub loope cmp pop add mov sub sti int3 nop lret test pop int fs and out mov das cmp (bad) fcmovnb inc or cs test aam inc add or in stc les in xchg dec iret scas jno jmp cmpsb pop fimull cmc or aad sub add adc or push and shl inc aas int aas (bad) fnclex push gs cmpsl sbb sub loope addr16 push (bad) mov push sub test mov jg loope movsl lods lock pop repnz stc fcoms jge mulb lret divl xchg mov pop je push outsb push cmp fstps sub jl fiaddl repz jb gs and es xchg lods rol dec push out add into mov popa mov pop adc std out sub movsl mov out mov inc (bad) bound (bad) sub push push rcrl aas lea cmp (bad) sahf mov aaa lock bound ret (bad) mov nop inc push and add mov or lret sub mov leave sar outsb jecxz sbb jecxz ret lret test sbb push or sub push outsb xchg sbb mov adc xchg add repz mov int3 (bad) xor dec iret retw or add add add ret dec imul test (bad) (bad) sar cs xor dec jb xchg fnstsw mov and push xor sub neg pop scas sub sub add adc pop into push ror mov add sub sub roll sub sub test pop lds (bad) (bad) mov roll (bad) jne and mov cld out movsl std mov jmp sbb xor sbb mov mov imul adc pop fwait insb inc adc pop popf outsl aas push mov cld (bad) repz icebp mov es pop jbe ret dec add lret add (bad) mov out fdivrp xor xchg sub xor mov cwtl push push cmpsb adc test xor into sub adc xchg mov and in push adcl inc test xor bound sbb xchg pop mov push jne sub xor or sub xor test out pop test pop jne sti loop xchg pushf stos out ss push imul mov fist fnstenv cmp (bad) test jnp das inc and sub scas mov lret pop inc dec lahf or jo jmp mov lods jmp or cld aaa inc repz jmp lcall fimul stc cmp xor (bad) mov sub mov adc xchg sti xchg jmp clc movsb mov lret popa sub add sub mov jl movsb (bad) popa (bad) jmp movsb jmp lret dec movl add scas cld js out fldl sub push inc movsb inc addl popf adc aas add movsl (bad) jl jb inc pop lcall stc std imul mov xchg js xchg pop dec mov push js test ret dec mov test mull mov xor add out mov dec divb jge fnsave lods js xchg dec movsl mov cmp mov loope mov jae daa pop xchg pushf test xchg into aas pop rorl add (bad) repnz es (bad) mov or cmp (bad) lret mov loope mov je iret (bad) repnz mov jge mov js dec dec jg xor push or in cmp sub jno sbb jp cmp mov fwait (bad) stc bound cmc loop xlat lds dec adc pop mov rcrl imul clc or aas xchg call mov jb xchg jbe imul push (bad) bound sub adc std add inc ja adc clc (bad) or xlat daa sub ja xor mov dec mov loop rcll je jmp rclb push xchg push inc imul pushf cmp xlat (bad) sti adc or divl fist mov (bad) cwtl cmp rorl (bad) pushf scas cld dec jno clc xlat sub les sbb lcall sub test xchg or cs (bad) cwtl sbb cs int3 test xor cmc dec xchg dec mov lcall xor test or dec cmp inc mov popf jae cmp notl lods dec adc cmc push jnp add mov ja scas dec cmpsb aad into push dec sub and sbb push mov daa out mov outsl sub and hlt test fucomip fsubr imull negl daa pop negb cli in das jns inc out into add sub add shlb inc or dec icebp sub sarl mov pusha adc xorb pop ljmp dec mov cmc adc fldcw mov lods repz mov xchg scas jl cmp xchg fnstcw push jg inc idiv (bad) push cli cltd sbb test lea outsb sub dec add int3 sbb jno icebp and out mov mov jnp ret add or mov scas bnd inc add out inc and pop aam pop aas xor pushf aam adc push pop aas jecxz or or push ljmp adc mov daa mov mov sbb pop call mov call inc mov into dec mov pop repnz mov mulb push xor xrelease xor or aad (bad) cld lret lret adc repnz xchg sbbb cltd in es mov or js clc scas mov jb dec (bad) in lahf mov (bad) cmp aad (bad) sub into (bad) xchg adc pop or and add and loop sub and sub movzwl xor jmp insb and xchg ret dec inc or dec add daa and lock mov lret mov shr bound pop out or enter lods (bad) or sub dec je fs pop adc clc ds mov ljmp mov fs es out push mov cmpsb loop divb adc mov arpl lret inc pop (bad) and add push repz fs shr hlt jbe fwait lods jge (bad) pop (bad) ljmp or and mov test mov mov ds ret xor add xor mov mov fldenv sub lods (bad) or mov mov add scas xor sbbb lcall jns bound xlat inc adc mov and adc lahf xor mov daa cmp xor mov pop mov sti fistl or inc inc mov ret stos int loop sbb lret jae mov pop mov fisubrl roll fldt push ret inc xchg repz in lods loope ljmp pop loop mov xchg leave jne inc pop (bad) sub lret inc jl and in cmpsl (bad) test jnp cmpsb bound das pop fldl repz insb inc daa or jne insb xchg out or cmp into push pop into je mov aaa repz (bad) or out mov inc push xchg push pusha jg ret sub jl fidiv xchg push sub and out adc popf sti jnp cmp push sub and sbb adc rorb cmc xor sub xchg dec clc add out jno xchg cli stos into xor fsubr dec test leave push cltd mov cmp in mov lods jnp adc es push or sub iret pushf call adc jecxz jp divl mov push out push repnz lahf and xor std inc in ljmp je xchg in push movsb sub imull hlt sub test xor mov mov lea jle mov jne xor icebp push stos mov nop inc sub and add or jns dec fnstsw mov das stos jl jmp xor or adc jne fucomip and (bad) out mov idivl hlt cli mov pop sub push or icebp pop movsb outsb and add cmp jecxz lahf out mov lea cmp or xor and psllq (bad) push xchg pushl pop movsb ret daa xchg add lods in dec jne (bad) sub repnz xchg clc scas (bad) lret sub xor scas or mov fmull mov sti sahf mov xor out cld sahf pop lds mov sub or notl sub sbb pop jge loop ds ret cmpsl jb and enter test repnz xchg push sti dec int3 addr16 mov xchg pop bound (bad) rcrl sti in mov cld push jp repz loop sub jle pop rcr movb xchg rep inc mov mov sub (bad) fnop rcll or add add sub ljmp cltd repnz out pop cmp push das repnz jecxz stc or ljmp push lea inc or xchg stos mov dec test or add add add jg fs or fldenv cmp scas mov loop orb (bad) icebp push sub push jbe pop jmp (bad) mov lods push dec aaa sahf pop test mov lock xchg call daa je insl incb jmp push mov xor and das jmp out leave mov enter xchg pop add test dec sub (bad) js dec stc jecxz aas mov push push xor adc scas mov xchg scas mov inc fidivrl jne dec mov or xor (bad) push cltd hlt mov xchg ljmp sbb mov dec sbb mov (bad) sbb std (bad) cli call les (bad) xor pop negb or cs jmp and pop cmp push pop imul jne jge aas loop xchg adc imulb sbb mov xchg mov fs mov add sub das xchg hlt cmc lds insl and mov (bad) mov jl and sub out adc repz mov fsin push pusha sub and shrl mov pushl fucom dec or negl iret sub ret bnd and adc pop add xor pop into mul jbe loope mov mov pop xlat push out mov jmp (bad) std fiadd push pop xchg shr mov xchg lret cmp scas fldcw push xlat lcall lret aad into and xor adc lods imul cmc pushf push jb (bad) mov pushf sar into cmp or jmp iret out cs jp inc mov pop stc mov cld pusha insb add xor mov (bad) adc test sub cmc mov mov in sub aam and popf xchg pop cmc sub lret and xchg (bad) scas fwait dec pop cs fcmovnb daa adc add mov ret push add lock mov pushf mov xor mov add test test repz lret xor pop dec lret lea lods outsl shr xchg out adc fidivl mov popf fsts jbe add mov sub loope imul dec enter push dec lahf dec jecxz mov fisttpl stc bound sub or pop rep mov subb mov xchg movsb and fisttp clc adc and pop push (bad) ret stc add mov jl adc outsl mov mov pop sbb ret imull ljmp repz popf mov out ror sti and dec adc lret loope jne,pt test pop ret jnp divb movsl push sbb (bad) dec cwtl jp or insl pop adc adc out mov dec call sub sbb mov xor jns pop lock xchg sub inc sbb pminub cmpsl or add or jge pop adc pop pop popf xchg sbb jnp scas cmpsb cs push fstl dec pop jp pop (bad) mov xchg cmp lods int3 mov xchg loop inc and out fisttpll dec and divb inc loop adc lock jg xor ret daa xor ss cltd aam mov ss mov cmpsb pop pop and dec mov or fs std movsl out imul sbb push mov xchg mov mov rcrb std cmc mov pop or jl and push lds adc cli mov inc aam lret xor xor xor shl lods cmp sti xchg cmp (bad) cwtl cmpsb repnz cmc adc xchg rorb lret lock sub call sbb adc xor mov jmp lods xor lock mov or in lcall aas lods out lahf out js aas sub adc xor push ret cs stos add or xchg sub and cwtl mov lahf pop aas leave fiadd repz sbb xchg shll xchg aas fcomps repz mov loope sbb sub sub outsl test into cli aaa pop test stc sbb pop and xor mov mov mov ret test pop ja repz mov add add jp int3 xchg mov xchg mov add sub ret jl call mov cmp imul fiadd (bad) ljmp cmp push test imul xor lds sub inc cmp (bad) pop (bad) iret movsb sub stos cltd nop xor call outsl xor mov ret xor ljmp mov fnstsw xchg xor das ret mov test dec jecxz pop faddl inc test fdivs add adc (bad) addr16 add out xchg jmp ret xor mov pop mov add ret cmp lahf jb or fdivrl dec add and mov dec (bad) push (bad) jne out push out pop cli push idiv sub add in jge adc push repnz imulb jecxz (bad) jno lret int3 xor negb repz xchg jmp lret les push leave ret cltd (bad) bound (bad) (bad) xchg and out mov xchg lret mull sub (bad) xchg fldenv imul cld xchg push in lret das lods mov push mov vrsqrtss scas xor add sub sub pop pop (bad) jae cs mov mov lock popf cmc sahf mov jecxz sub xor jb or ficoml fs popf lds and fsubs lahf aam push push je imul push xor xor aam in push stc (bad) sbb xchg lods out pop jle sub inc das leave testl mov xlat and or fmul into pop sub xor jo and dec and fidivl mov popa or push dec mov negw (bad) or xchg or popf mov insb movsl imul shlb dec add mov pop cmp popa stos mov inc mov mov cmpsl adc add push mov sti scas (bad) aas js lea mov sbb cmp imul in or enter (bad) xor or fadds icebp pushf lods xchg push and and cs lea or mov xor mov jne call ljmp mov jl and mov pusha mov mov popf outsb sbb push sti insl cwtl xchg jmp cmp lock xor cli pusha mov fisttp pop pop pusha lret faddp inc and pop pop sbb or ss inc mov insb inc or xor jns cmpsl aad mov sbb push mov insb xorb lock daa xchg insb mov adc (bad) adc sub test and stos dec jno jle rol imulb push pop cltd cmp pop and shr pop dec xchg mov lock dec insl pop shrl sbb and mov jp sub mov repz jl cmc inc mov pusha imul repnz jg pusha xor dec test and dec roll mov jne idivl cltd jle rorl in push icebp icebp dec (bad) pop (bad) sub cmp fistpll dec xor pop test xchg push mov pop pop pop sub cmpl jb adc jnp out pop into rcl add sti fsts sbb push das out fstl hlt mov pushf test sbb pop imul out pop push xchg jmp push cmp dec inc fistpll adc and mov dec test lret and and xchg out fs idivl cltd gs and movsl (bad) pop jmp (bad) dec subl gs iret ljmp popf jns lret inc mov mov sub pop inc push stos or adc jl mov daa jl jmp adc mov cmp pop jmp inc jno bound xor das cld arpl mov mov (bad) into mov jne sub mov mov pop lods shrl scas je mov push xor in cmp pop call jecxz pop jmp and cli int3 xchg sarl enter sub jmp xchg aas cmp js int3 icebp cmc outsl lods iret lret (bad) stc lcall jecxz lcall (bad) dec lret add sbb inc push xor or pop test inc push andb or sbb xor mov mov cmpsl (bad) adc imul and or lret aam pop mov xchg adc push push adc jb into jmp or sub lock into pop fwait lret ret mov ljmp data16 (bad) xor popf divl or enter inc push lret and mov sar sub jmp jp shrl jmp mov inc lods or (bad) and scas mov lock pop lret leave pop cld add push rcrb mov sub daa jo pop icebp repnz insb fwait and ret xor and shl ss sub ret stc dec pop jp jne dec sarl push jecxz nop in xor push and mov cwtl pop jmp sub inc push sbb (bad) xor dec push jo mov (bad) cmp inc or pop mov mov jmp adc xchg in int3 sbb sub (bad) scas sub lret and pop and mov cmp negl mov mov movsb fwait sub mov mov add out xor shll clc adc xlat mov cmc cmp push pushf repnz fcoml icebp shrl test add daa adc pop lods ret into lods cmpsb (bad) dec bnd mov dec (bad) rclb cmp xor and repnz test add mov lods gs lret pushf dec out inc lea fst mov mov call js xor daa jmp ljmp fwait in fmull xchg sub sub cwtl xchg into lahf pop and (bad) xchg push aad mov cwtd xchg sbb dec mov push arpl ljmp aaa dec js mov jmp mov cmpsl dec and test loop inc and (bad) mov iret push sub mov incl push and ret fdivs mov aas lret cld sbb push cmp stc iret cmpsl xchg into das mov jnp das icebp sub enter imul cmc cmpsl adc (bad) clc sarb pop pop test mov aam or call inc scas push pop xor sub mov cld movsw stos mov adc adc mov and sub (bad) hlt enter add xchg je imul (bad) and pop pcmpeqb adc test adc inc xor scas sub movsb pop enter repnz popf pop or jge std dec push mov cltd sub imul sub jo xlat and and enter (bad) sbb mov mov mov mov adc xor mov (bad) icebp push cmp push stos sub mov cmp bound mov jl imul sti adc xor and andl mov nop inc xor mov andl out popf stc or popw mov and pop mov push (bad) mov xchg ss bound (bad) mov fstpl movsl call jbe mov cld sti push pushl adc dec jne mov push std (bad) popf insl push xchg xor dec jmp in push mov jmp xor jmp sbb insb xlat mov rcrl leave add in xchg fcmovnbe daa clc nop pop aas in mov sub jo xchg adc cs bswap sbb or popf inc idiv cmc pop out mov mov cmp and (bad) popf popa sub mov mov push (bad) test fidiv call das mov pop and and jg cmp arpl add (bad) mov loopne into daa sub dec dec mov pop sub push xor ljmp std jno (bad) push jae xor repz cli dec and xor fmuls xchg mov call mov call or mov mov dec mov nop (bad) scas lret int3 mov jb mov or cmp dec insb fwait xchg jns xchg cmp ficoml repnz dec rol icebp fadd sub mov or push out mov xor (bad) sub sub xor pop arpl pop repz lods loope xor mov pop mov xchg js lds iret cmpsb jg mov imul mov clc dec or xchg testb mov shlb push mov xor jnp xor idivl imul or (bad) inc test xchg jmp stos into push cmp jnp xchg or cld xor int3 ja adc pop sub testl fs out mov inc sbb scas push fstl mov fs mov mov out or jbe push divl xchg out sub sarb jb pop cli icebp ffreep mov push mov fistpll dec jbe in cmp mov sbb decb pop cmp pop daa leave hlt aad mul push and leave movsl in xlat stos jbe call inc jle rclb xchg int3 bound rorl mov in mov (bad) dec sbb xchg mov push inc mov lds mov mov iret in xor jp out lods (bad) (bad) leave pop cmp bound xlat into push inc or add das stc lret lcall pop xor pushf nop add add out mov adc xor push adc jecxz push shr push pop in cli xchg mov addr16 daa in rorb sub pop sti mov rcrl enter jbe push xor mov sub je or and jecxz clc or mov xchg cltd (bad) das adc in jno,pn jno sub jno lods mov dec ret mov add das idivl mov leave inc int ret xchg rcrl mov xchg mov inc aaa loop das dec inc mov dec cwtl sti xchg mov mov sub sbb scas arpl mov cmpsl add mov or mov cmp stos aas rcrb fidiv inc sub dec and dec clc in aad rcrl push add mov cmc sub mov inc (bad) jne rorb lret mov xor xor popa pop cmp fildll icebp mov push or cli pop popf jl movsl cli int3 call mov aad movb and pop (bad) cltd dec or add je pop fild sti xor dec inc xchg lds lock dec sahf push out cmp sub cld mov xor out fnstcw mov pop or pop aad subb or lods sbb mov adc mov sub add xor out fcoms jle les popf xor idivb mov into fistp mov aad repz pop or mov jmp xor sti aas add dec mov stc hlt movsl out imul pop gs inc outsl leave pop popf xchg enter inc jp add push dec jbe push jecxz mov inc lods ret mov cltd mov push shlb test push iret mov lock fiadd dec and and rolb mov add icebp pop mov inc pop and jmp push es xor out add or sub cmp jne lcall mov and ljmp cmp test gs icebp fimul mov pop (bad) pop and xchg iret dec add nop lock mov shrl decb sub test scas lret sub xchg mov (bad) dec or and add cmp sarl xchg movsl stos pop sarl xchg divb test sub mov dec and mov (bad) stos popf mov push loope mov loop and or movsl xchg jbe jl fisub or jns sub test jmp jb push jns dec frstor xchg nop mov mov push in mov jp adc out add adc test mov cltd shrb or mov popf mov mov mov inc movsl fistp push fisttp call jo clc (bad) clc add rolb sahf ret loop push push jno push mov dec adc add push or imul mov dec mull xor rorb mov push ja and jmp adc sbbl sti xor movl jge add lahf outsl outsl adc sti leave dec in dec subl sbb rorl pop push push mov add inc mov add dec and pop stos push add push std pop xor push xchg sub outsl or cld mov add inc or adc sbb pop mov lret dec (bad) sub or into (bad) jbe push xchg inc mov in (bad) les movb jns fsub mov or jecxz dec sti and lock scas dec lahf aam in cli out push add stc mov addl loope jne int3 sbb adc lcall xor ja adc aaa xor jb addl repz xchg push sub ret pop mov jae push dec push loope mov add xor pop add notl cld mov sar jo push ss xor out mov jle push call scas push das push loopne inc jmp pop or jg test aas test pop pushw jle push mov xor andb push shl inc vlddqu xor call jmp pop in push neg test jmp lahf push mov add inc push mov mov fistpll shl xchg xchg cmp jb cmp rorb pop dec sub shr (bad) jno mov pop mov shlb xor pop add inc add jno mov push lcall lret jg and adc call in push push decl rcrl mov inc stc sbb divl std jae cmpsl jg xor add dec lods mov aas cwtl add xor imul decl jnp fistl adc adc cmpsb cmp push inc cmpb xor pop or pop roll push xor and fldenv pop shll scas adc jmp lahf pop mov popf pushl pushf loope jecxz sub xor fist stos lret lods sbb xor dec add je add or mov xor loope outsl in (bad) inc xor mov outsb jb (bad) sub and pop (bad) mov fistl into pop jmp lret int cmp cmp cmpsb std aas ds jecxz lcall cld lret mov testb cmp repnz std adc mov jge pusha insl roll jmp loope pop data16 orb sub pop cltd leave jno or fidivr jge jp xor mov ja pop inc lret mov add stos jbe jne aam pop dec pop ja iret jmp mov dec or aas mov jo inc xchg cs movsl std cmp ds sbb pop inc xchg add jmp (bad) cmc jb push movsl jns or push push gs cmp pop xor inc roll dec fidivrl test stc pop xchg jmp add adc mov ret fdivrs xlat loopne mulb bound js aad push or test pop hlt push iret mov test cmp mov or out cmp (bad) xchg pop cmp pop adc flds lahf adc fcoml in push sarl je push jne data16 mov mov cmp test xchg sub inc add mov into sub xor mov or nop cltd and outsl imul mov sub lods xchg adc xchg mov mov mov ljmp not or ret pop cmp lret fbld shll js xlat add sbb cmc ss cltd pop mov stc into ret mov mov mov sbb sub xchg out jae adc cmp fidivr movb outsb int insb sbb sbb jo loopne add mov pop cwtl add test sub xchg sub lret pop fnstsw adc push sahf jae add (bad) xor mov pop cmp pop jae daa pop (bad) into out pop add push mov popfw dec repz lret push aas sub sub jecxz sub xor or ret pop imul scas and xor jmp add xchg cmp sub insb into (bad) and mov cmp mov dec push into (bad) mov cmpsl mov ja fwait das mov pop adc mov jg pop out loop xchg cmpsb jns cmp repz (bad) and or call icebp int add inc push outsl pusha cmpsl xor sbb adc xor sbb sub outsb mov das (bad) ja imul sbb lds xchg mov pop stc int3 fs lods test aad nop mov mov pop (bad) push iret jae cmp mov xchg loope lret xlat pop sti xchg jg xor test cld iret sarl and cli mov rcll das repz loop sub mov sub loopne dec into test movsl jecxz ud2 push jbe xor mov (bad) loope xchg xchg fild mov dec out into sar into mov jl dec pop pop add and jo dec ret xchg stc (bad) mov jno leave (bad) fsubs jnp stos cmpsb cmpsl and loop fprem dec icebp das push sbb cld mov xchg das movl pop or add or stos addl xchg imulb cmc xchg xor add add repz pop loope mov lcall xor or push push dec xchg idivb adc lret push test dec dec dec mov adc mul fs jecxz (bad) pusha mov cmp add (bad) sub bound adc mov jbe rclb cmp add cmp movsl mov push enter or lret dec repnz adc push or repnz imul cltd shll cmpb ds dec push jge scas xchg pop push xchg out bound mov or ljmp arpl sub jae test scas test movsb out jb add mov (bad) lods int idivb fisubr decb andb pop je (bad) pop andb pop adc out movsb movsb leave aad and rcr jns mov call cmp enter repz and adc sbb add xchg pop adcl lods dec fdivrl scas fildl or std mov xor mov cwtl fidivr lock shl in mov aas out dec push mov jecxz pop in movsl jbe jnp mov popf rcrb cld es jae fstp fnsetpm(287 fistpl into jne or pop inc fs cltd jno jb jecxz push push leave xlat or or (bad) lea cmp cmp mov pusha fistpl js or imul in push sub sub mov enter dec add lea xor lock sub addr16 xchg adc pushf aaa sbb sub lcall loopne sub mov out inc jnp adc rcr cli cmp or in lods jecxz clc mov daa mov icebp add or (bad) and pop sub adc mov lahf jo fistl dec out inc fisubr jne lods mov mov test add add or fisubrl fstl inc and out mov add mov lods lea pop sub or das stos jne jecxz push idivb cli adcb mov pop lods adc xchg aaa idivb inc shrb int3 inc mov xlat mov cmpsb inc test sbb pop out and sub sub xor rclb cs jb push sub mov pushf add out mov mov push adc mov fmuls mov ds sub out sub adc or testb call adc sub sbbb add pop incb mov bound rorb xor cmp cltd xchg and dec (bad) jne xchg in fwait pop adc arpl cmpsl (bad) ljmp ret inc lds mov pusha push and sub jg popa mov repnz push loop cmp xor call loop mov xor jg das dec icebp dec or (bad) cmc out dec xlat daa pop stos sub aas or cmpsl into jle pop loope or test (bad) movsl cmc cltd fadds add mov and dec pop aaa fildl adc sbb jp ja fwait sarb std mov sbb loop stos bt dec out inc dec aas and jle les movsb (bad) push push mov lods in out fstl and icebp jmp adc dec push push ss mov dec push and inc xchg addr16 hlt loope clc cmp mov std les aaa mov mov sub das dec xor cmpsl das or aaa xchg fdiv lret or enter inc movl xor aad scas pop clc sub lret pop dec or add push (bad) push mov dec aas mov popf lock add add mov ret push test mov (bad) mov ret xchg add arpl mov add jb stc mov stos mov mov popf jbe repz test scas mov sub xchg ret and stos pusha stos (bad) and mov xchg call mov dec and xor fildll aaa in cmc or hlt sub mov rorb sbbl pop dec in cmp popa ja les outsl daa and scas or add mov imull add imull divb mov cmc dec adc or inc and pushf add inc pop mov ss in (bad) (bad) divl dec push dec es fisttpl (bad) popa dec and ds enter jne inc xchg jle es push adc mov adc mov push ror xor add (bad) lea inc cmp std das jmp push jno outsl lods sub or mov lock sub add sub aam lret in das add jns lods pop dec pop sbb mov test (bad) adc jo mov testb out jle jmp xor add mov bound fidivrl dec rcrl sub add mov movsb movsl bound pop jge or and jle shrb cwtl sub adc mov inc dec xchg aam leave sbb test rcrl push daa pop add xor cmp (bad) or jns leave out jnp xor scas notl mov cld (bad) leave ljmp push and pusha out mov xor scas sub lahf in mov stos or lret incl pop mov ds scas cli fidivr and xchg lret sub xchg pop sub inc movsb fs mov testl outsl std jbe stos je stos lea fmull jle std in aad shr dec repz (bad) mov cld leave lret pop into mov xor xlat out (bad) gs in daa fiadd and outsb and add lahf dec clc add fidiv jo xor xor mov bound scas ja dec mov adcb into pop jl push out xor jo cltd sub int3 roll fsubrs rcl xchg add cmp mov fsts pop or mov dec sbb out and imul mov and sub jns mov push aad ffree jmp out and inc movsl fist xchg add push mov cmp stos dec fwait imul add cmp ret js icebp je jmp add mov pop jae lahf sbb inc jg push sti imul jle mov movsl fldl sbb sub jb adc sub movsb das stc sbb (bad) jb xor xor rcrl daa mov push pushf int3 push jmp sub icebp je clc xchg test xor push dec daa or fiadd or xchg and push andl xor push std test xor jge sub shrb push jmp mov push xchg lcall (bad) cli pop lea out mov or sbb jae (bad) dec fsubp cmpsb push pusha mov push sub jmp adc (bad) push adc push add sarl cld fs idivl mov xor sub mov (bad) sub lret cmp push jmp lret outsb addr16 gs (bad) mov in out das lret sbb scas jno cmpsl clc jo repnz xchg icebp dec ret movsl mov ffreep xchg mov out mov stos lret inc push xor and pop add insl xchg mov sbb sahf pop xchg movsl idivb test sub and (bad) clc mov ret mov jo mov dec mov push stos (bad) jo jge js icebp xor jl adc (bad) pusha cmp sub in popf (bad) cmp (bad) ficoml and cld in mov push cli mov sbb fistp out sub lock xchg jns dec js sbbb fstl dec pop stos lret push inc or fildll iret je repz cmp xlat xchg and je loope repz daa mov int3 sbb lret sub sub test in cs add or cmp mov pop das lds (bad) dec movsl lret and push sub das arpl cmp es dec xor xor adc out movsb cmpsl (bad) sub jo or jbe ss sub or addl sbb mul dec lods jl pop (bad) or aad mov xchg cmp dec in sbb xchg inc (bad) mov cwtl cmpsl jge (bad) jg xchg add xor stos int3 sbb jo xorb es and (bad) jo int (bad) push or imull and mov sahf inc mov xchg (bad) stos push ja pop das icebp push movsl loope imulb jns mulb pop pop lret out out mov dec mov jle pop ret repnz mov pop mov add jno adc push xchg jmp test aad sub jnp notb add test rorb in add or jge pop enter mov xor sbb xchg sub xor fiadd (bad) pop lcall and pop ja sarb cmp inc icebp pop sub jecxz cmp dec out and leave sub or xor cs sbb inc pop mov fiadd rorl sub jg sub inc mov mov aad or popf cli xchg push addr16 into mov rcrl add std push or mov loope mov icebp subb mov adc sti (bad) push or int das mov lds enter pop shrb cmp mov pop and mov pop (bad) sti xor and out xor imulb stc arpl (bad) (bad) mov push pop mov aaa nop test (bad) scas ds xchg xchg push mov xor or fsubrs mov mov xchg cmc bound fnstenv push int sub leave xlat push pop scas rol push idiv je mov lret push sbb dec xor mov cli call pop sub and mulb icebp sub xchg (bad) cmp dec mov pop jle mov mov jle pop sub xchg and mov xor mov jno (bad) sbb pusha cmpsl mov cli and xchg mov mov xchg add and xor xor inc out cmpsb insb mov inc jnp daa cli pop push getsec lods push stos mov cs sub mov xlat insl jno push mov add not shlb push xchg mov xchg fs int3 and cmp (bad) dec or mov or cmp mulb jmp push mov push stc iret dec out shll (bad) jne add xor nop dec and push xchg icebp out jne mov dec jecxz dec icebp jnp stos aaa inc mov fisubl and push jmp sbb push pop lea jae sub es dec inc jo xchg lds clc cwtl pop or mov idivb or loopne mov stos and in movsl loop cld jae rcl les ret fistp fidivrl cmp adc mov sub sub aas adc mov rorb into dec pop mov dec adc (bad) mov mov pop mov mov sbb stos mov out xchg push scas clc and fyl2xp1 jle fisubr push cmpsb (bad) xor mov out bound out pop or push and xor repz outsl xor mov (bad) pop data16 or shrb pop fsubp and shr sbb stos or mov mov in lret (bad) pop outsb pop jmp mov xor loop rcll insl mov sub jo fdivs pop or mov (bad) inc loope repnz test and (bad) loop cs jg adc lea ljmp fwait test xchg lds push mov adc pop pushl loop (bad) fbld les xlat lods int3 fistp inc xchg ljmp leave mov jb add mov fdivp mov adc sbb jb fadds adc dec lea xor dec xchg pushf pop push mov ljmp mov push push sti arpl or push inc dec sub mov xor add cmp dec out lods inc xchg mov rcll hlt and adc or mov repnz hlt push std xor cmp mov pop fwait fs sahf jbe xor iret and xor mov out cmp mov in bound rclb pushf xlat insb push mov xchg fcmovu sbb dec or and mov sub push mov stc push mov fidivl and dec jns mov xchg ja,pn ja adc adc rcrb cmpsb push dec cli fnstenv jb test xor lods data16 (bad) int3 and jmp ret xor enter xchg (bad) mov das or int3 icebp add push push lds (bad) (bad) xchg and xor sub xor ds jb fistpl movsl in adc add (bad) lds sti add cmp scas push dec test fsubp mov in xlat leave or sbb les mov ret dec sahf and pop pushf sti add test cld pop mov or mov inc sub (bad) clc cltd xchg xchg pop xchg ja leave (bad) ficom test xchg pop mov push sub xchg cmp jae dec or jno testl pop push loop add xchg push lahf fiaddl mov jmp (bad) testb sarb inc mov inc pop (bad) xor jge incb je xchg shl (bad) (bad) ftst cmp out cmpb mov (bad) and mov sub subb pop pushf jnp or adc ds insb and sub lods dec (bad) mov add and ljmp sti (bad) mov (bad) cmc sub imul sub xor ljmp cmpsl mov clc sub movsb adc adc xor rolb add das sub push in cmp pop jecxz jecxz jg add frstor xor das lret idivw mov mov mov pop xchg js ret jno ds std movsl test rol sub aad mov (bad) mov fwait pop pop leave ret fucom je rep and or xchg pop pop and (bad) pop and mov mov cmp lock lods jnp jecxz (bad) in iret mov int gs out mov xchg mov test dec xor mov rcll (bad) jecxz dec aad cmpsb jnp ficomp or lds xchg cmp iret movsl (bad) cmc insb xchg cltd ds xchg das ret popa mov adc pop lock or testl daa or lcall pop mov lods pop mov jmp sbb mov xlat stos sub or cmp mov adc popf pop xor dec (bad) iret or mov xchg ja imul stc push cltd mov cs and leave jg inc mov xor jbe add fisubrl mov sbb and stc das sahf push iret jmp lret pop xchg adc and xor inc repz mov mov imulb mov out ja mov push push aam dec pop sti mov jp jmp add outsl aam adc and jne not and mov cmp add cmp adc mov mov fisub lret sbb dec inc and sbb and mov or add mov adc jo fcmovbe sbb loop mov push mov popf out or testl icebp idivl dec hlt inc cs dec aaa push push sbb mov pop leave pop out mov sub pushw xchg loopne fdivrs cltd daa movsl loop cld gs insb and add mov (bad) movsb push pop sub je cmpsb sarb shll mov or cmp cmp sbb mov adc xchg vpavgw pop mov sti mov test leave into pop and pushf pop cmp bnd add sbb mov mov dec in mov (bad) lret add notl sti scas movsl and ret xor stc jnp pop xchg pop cmp int jnp jnp lea sbb dec and std pop lods aas nop sahf xchg sbb xlat sub in mov inc adc dec sbb pop lret ss lahf aam push pop mov into sub test sub iret jg sarb leave cmp mulb mov pop into push xchg inc (bad) lock pop popa sbb sub and shrb test pop out adcl loope mov mov cli movzbl shll loope jne scas mov and or (bad) shr fsts or ficoml and sti mov gs call out pop mov push cmp pop inc pop xor enter xchg jbe jmp (bad) call mov ja faddl rcl in or or cltd orl decb into add and sub xor out dec mov sti int outsb or repnz jnp adc repnz enter (bad) mov mov jmp and fldt pop xchg sub out add in scas in out mov add stos pop lret push mov or fldcw cld mov xor subl (bad) sti jle jbe pop and pushl mov inc gs xchg and into xor push leave or ds out test cmpsl fs (bad) leave loope dec inc add xchg inc xor ljmp mov leave into stc outsl (bad) xor dec out lds push and test test cwtl dec mov xchg sar or (bad) jne fbstp xor push mov sub pop sub in (bad) jae ljmp cld and cltd mov adc add into cmp out jl push stos popf (bad) mov push out pop or (bad) ja movsb leave mov push mov and xchg xor icebp repz and clc pop mov push inc mulb jmp pushl loopne pop and pop test out dec and add cmp repz je les adc int3 (bad) icebp mov aaa fwait pop mov and cmpsl adc add add mov sub out or mov das (bad) je dec and or mov jp sub mov call daa pop in mov fdivrs cmpsl push xorl inc mov sbb pusha and mov fstps divb jmp (bad) xor notl es gs sbb test pop or mov (bad) jo cwtl cmp sub sbb popf sti cmp xlat scas add and mov mov mov add or and jecxz adc lahf dec cmpsb pop add and jns mov inc push cmp mov ror aas jle out sub sub (bad) fdivp cmp pushl inc subl and mov sub or cltd in jp aam adc jns scas mov dec sti lret icebp jg lods mov push adc xor daa rorl je cmpsl fnstsw fldl cmp (bad) jmp hlt xchg or and inc or aaa and (bad) mov cld cmp add cmp push and (bad) xchg (bad) out or out mov xor jne cs cmp sub mov jmp push (bad) repnz subl int push test (bad) sub and push mov (bad) (bad) out out push add and or (bad) push roll add sub sti jl fidivrl mov popa dec js jne mov jnp fdivl push mov or mov inc push fwait je push (bad) dec xlat iret xorl mov daa and in sub fldcw cs or (bad) inc xor (bad) push and daa clc pop or mov ja outsb mov pop cmpsl mov mov int3 lcall out lret lds cld movsw cltd and push sahf mov adc push or or cmp jle scas fistpl sub jg jl jl scas sub ljmp sahf rolb cs mov imulb jns imul hlt hlt enter push xchg fsubr insl pop aas sub sub jl push or pushl cli push jge cli bnd sub fnop call xchg mov cmpsl mov cmp pushf mov xchg xchg or adc jg or out mov rcll js push outsl cltd adc cltd sub aam pop or xchg dec das or mov scas adc repnz jp lcall or ffree mov push mov mov xchg pop xor div and add punpcklwd call pop xchg mov xlat dec add mov mov pop in push pop xor mov les mov sub (bad) mov (bad) jp adc in mov inc mov es aad mov lret xchg or adc mov fldl cltd (bad) mov dec xchg mov pop sbb repnz jne test out and xchg (bad) xor and inc jmp inc and in imulb sub push jne (bad) scas pop mov mov adc jne std fwait fs cmp pop jbe sbb dec sub cmpsb movsl jno dec ja imulb cmpsl fdivrs xchg sti fdivrs popf xchg push pop xor fsubs mov fcoms pushf sub push nop (bad) fstpl push rcll mov jb cltd iret outsl test xor ja mov insb push mov pop aam pop loop cmp sub popf sbb dec lret stos mov and outsb fsubrs or pop xchg sbb xchg jecxz mov adc xchg cld mov add jno mov das sbbb jbe dec or add jecxz movsl outsl lcall dec in clc xor notb shl outsb jecxz mov ret gs xorb fstpt add test push mov scas aad add mov popf xlat xchg (bad) (bad) sarl lret cltd dec lods sbb sbb lds movsl lret test repz das jbe imul xor and ds adc sub cltd or lods adc lcall push sbb popf in test sub ja out and jmp add fisttp iret out clc dec js testl or leave xor pop (bad) and or popf adc xor dec jmp dec dec add mov mov push adc ret push lret insl call pushf mov (bad) fnstsw pop cld xor popf ja (bad) or cmc shrl dec jo xchg mov xor mov loop cwtl ljmp ret andb lods mov (bad) arpl inc nop cmpsb ror imul and and adc clc add test mov fwait and mov and scas je in pop sub cltd sub mov pop in pop cwtl jl pop fimull xorb jp or ficom inc mov test sti test lret sub mov sar xchg (bad) mov or and jo add jge call xchg (bad) sti dec imul adc sub sub jg xchg jl movsb imul jbe enter iret mov or mov dec lret subl push jl jae ljmp rorl stc pop (bad) loopne (bad) pushf das mov fstpt sub scas lahf xchg add mov jp or adc xor push out sub pop roll dec and and ret xchg dec xchg push add andb dec dec sbb push scas out leave test (bad) lds inc daa outsb inc lahf divb dec dec jle ret dec add or or xchg movsl (bad) divl aam stc in mov push pop cmp out push sub and add pop mov ret fild jmp pop (bad) dec es and xchg mov cmp mov fs xchg ja xchg lret nop and scas pusha fidivl cmp repnz xor les cmp mov rorl sub or mov xor xor push cmp sub das xor xchg (bad) gs (bad) scas sub iret pop xorb pop dec xchg mov ss or jno or cs mov ror and mov sbb mov mov push testb mov pushl xor mov fildll pushf ss daa mov push xchg pushf cli out pop subb cmp loope fiadd pop sub in cmp mov dec out test and adc test sub outsb jmp frstor jne pop and lcall jg pop push imul push ljmp jns cmc cwtl lds imull sub mov or mov clc dec xor pop pop jmp subl and popf or xchg (bad) jp mov fldl xor (bad) pop xchg fimul and enter mov inc in sar jne jmp cmp lds in shll (bad) xchg xchg push (bad) fsubl (bad) dec inc add mov mov out xchg ds inc adc scas bound pop xchg xchg out xor inc inc scas inc adc out fs sti mov movsl std fwait adc adc ror repz lock lahf push mov xchg add cmp sarl into adc mov sarb mov inc mov lods or mov xchg xor or ds pop scas jno cmp xor xor or (bad) sub xor pop add lcall push orl jmp mov or outsb test loop test cmp (bad) xlat stc imul (bad) fnstcw sub mov outsl dec stos sub fsubs mov test pop mov jns inc jg fcomps shll popa sti push adc scas popa (bad) ret lret mov mov mov jne mov mov sub push jge in lahf nop or into lods mov fisubl push mov pop mov stos (bad) les shl mov in or pushf fadds xchg ljmp sub lret test sub test (bad) stc mov mov data16 sbb (bad) pop popa xchg (bad) push and lds cld add mov cmpsb pop dec mov dec ficomp inc decl push pushf jle out mov lret sub push and pop pop jb sub sub divl cmp mov movl mov cmc xchg add testl cli mov xor cs test or mov and mov pop ljmp out sub xchg (bad) (bad) popf std outsb cwtl jb test imul movsl stos adc pop movsb lods sbb pop std loop imul cli add loope shrl not adc xchg mulb pop mov std xchg sbb pop cmp mov (bad) lahf (bad) leave sub inc add adc lret mov shr fcmovnbe pop icebp movsl lds mov xchg mov jmp movsb iret and rorb jnp adc adc or push fs jle daa repz and call in sub sub dec lods dec sub clc and or (bad) enter inc aas cmp or mov cs lcall iret ret (bad) mov daa adc js shr mov and mov dec (bad) into ja cmpsb mov dec sub or ret pop add cmp xor or std sbb or cs lea jecxz sbb das repnz xchg nop mov mov ror mov mov sub xchg xlat out mov test pusha jno mov data16 shlb ret push dec mov jmp sub cmp dec out mov into cwtl jno repnz mov dec (bad) int outsb mov cmp sub add jnp adc stos xor nop and hlt retw dec or repz loope hlt mov or push xchg lret in sub push daa sub addl sub and hlt ret lahf je sub into subb dec add rorl push and mov sahf xchg push mov stos mov add (bad) pop test rcrb sub mov pop jmp mov (bad) jne mov cmp xor (bad) bound lcall in dec mov popl nop call cmp cs adc or pop out cs add adc pop scas ljmp add out stos mov lcall jmp jecxz add lods movsb lods ja in sbb cmp pop mov outsl push push push cmp leave loop add repz andb adc sub add cmpsl or jp adc pop push sub jle imul daa push inc inc sub fistp ror mov repnz sbb repz aad mov icebp ret push sub mov cld jge loop pop mov pop dec pop adc sti adc or rep cmpsl jge outsb add fidivrl je (bad) repz (bad) mov mov jge insl shll mov mov sti xor call push aas xchg pop call add pop add int cs jmp pop shll mov and (bad) or sbb cld (bad) jbe sbb jp leave ja adc loope sbb out adc cmp sub sub pop out sub sub stos sub jmp loop jns xchg mov roll ljmp daa (bad) fnop push sub mov and je sub rorb xchg aas sarb cli xor sbb into inc mov fs repz cmp jae shlb mov sbbl lret out movb jge xchg adc call xchg or mov int xchg loope bound dec aad stos rcrb mov out testb imul leave mov fwait sub pop out data16 pushl cli push lret mov xchg gs mov xchg mov push cmp inc scas fs je push fadds mov jg xchg or xchg cwtl scas mov lock aam push rcl ja mov add les (bad) fwait add dec js lahf imulb or fadds pop lret fnsave hlt lret (bad) inc xor jg xchg add jle dec push outsb loop mov push stos out dec int in into je (bad) fsubp movsb das les fisubl pusha fnsave test xor cltd dec out pop fisttp push mov mov out sub (bad) stos daa in and add call xchg xor add fucomp das loop ret xor std mov mov xchg negb clc mov mov adc loop test (bad) xchg iret ljmp (bad) popf fcompl fstpt mov sahf call adcl cmp (bad) lret pop fucomip pop sub push xchg xor pop (bad) sahf pop js adc xchg loop mov xchg pop push or or movsl adc pop in loopne push pop aad dec cli repnz shrb fiaddl cli add cs mov repnz jnp cs nop sub idivb dec idiv lret inc jbe inc add in popf xlat cmp loope popf xchg inc and dec in sbbl pop mov mov add and and push mov pop and and enter or (bad) mov xor mov mov xor loope lea xor les add imul shr jo xor (bad) mov mov (bad) mov icebp push xor push mov shrb movsb cmp mov outsb sbb mov add pop add and xchg (bad) lret stos dec mov xor iret pop add add and dec inc xchg icebp roll xor stos cwtl scas gs inc jmp inc das cmpsb pushf pop lods push xlat mov adc fstl add outsb stos mov and ret test shll mov and sbb mov pop or sbb out test xchg push ss xor enter (bad) mov es repz jmp das out cmp ds movsl mov push or (bad) das and out pop add scas lock in push andl (bad) and test mov ret sub bound sar add ljmp cmc dec data16 mov inc push sub cmpsb in lds sub ret (bad) mov dec pushf cmpsl sub inc xor or push pop out or adc shrb call mov (bad) xor outsb mov daa mov adc mov movsl or or cmp pop ds pop pop cmpsl hlt dec jo or cs aad xlat pushf das mov lret pop imul sub iret dec sbb cltd ror idivb jne scas push add xchg add add dec lahf xchg out leave mov add xor scas int3 pop add js dec inc push imul test ret enter add jle lret (bad) sub ret je xor add das out cmp and mov test (bad) mov sub add mov cltd jae cmpsl add cltd pop push cs incl js test adc xor mov iret jle leave icebp mov notl inc xor pop hlt adcl mov pop mov pop out je popf shr mov inc das and cltd ja jae imul lds enter shrb mov int3 movsb mov or pop ljmp sbb fcmovbe imul shl xor sarb mov mov cmp out aam stos negb and sub out fs xchg in cmovg lods test loope xor cmp out in repnz movsl mov cli adc popf mov push mov sub sub adc mov lret or push jne aaa cmc imul ret push adc add repz and pop repnz ja into (bad) gs xor push sbb mov neg jecxz mov pushl mov call ja xchg push mov daa data16 daa sub mov dec hlt push gs inc das add std and ljmp dec jne jmp mov adc cmp or mov vrsqrtss (bad) loop dec lock mov dec sar (bad) cmp mov add and popa scas pop negb and xor sbb cmp sub out dec ljmp dec mov sbb imul jno push (bad) dec mov (bad) mov jmp mov jg sub stc add sar bound push jg jns out xor enter add bnd adc stc push xchg (bad) stos cmpsb loope push dec jo mov push jle push out push pusha jmp xlat mov mov add xchg fcoml idiv pop mov or mov test xlat cmp lcall jo sbb out fsts int bound out mov jge test mov mov int mov stc pop inc sub lahf or sbb hlt sub jne (bad) ds es test aaa pop fstpl das sub stc dec out cwtl divb mov ret inc mov popa sub mov mull sti fisttpll std (bad) aad xchg and jge dec and ljmp xchg inc sbbl hlt (bad) pop mov scas mov fld leave inc lret int3 out dec pop xor shrb push xchg insb add jo popf xchg add ret and cld orb clc lahf pop adc mov mov flds mov ret or icebp fisub sub xor cmp ljmp ret cmp test mov and into cmp xchg xchg cli popa xorb notl and repz push mov lret in mul or nop pop imul outsl out lock clc or lock or cmp mov mov dec call iret (bad) or ja ljmp push mov andl stos xor pop call and push sub xchg icebp mov movsl add push das into pop xchg clc xchg push shll lret fsubl cld cs mov loop xchg repz pop pop dec sti iret je ret push jecxz dec mov mov pop ret xchg gs scas icebp fild xchg xor bound or lock call or jge cmpsb add mov push jbe in push pop js xor scas loop push out nop push pop stos sarl lock pushf xchg pop jns (bad) mov movsb jbe (bad) (bad) cmp jo dec pop cwtl dec int fldl movsb mov xor (bad) fidivl cld inc xor jg or pop add mov fsubrl dec and mov clc pop jns bound jmp or or sarb repnz mov pop pop jns movsl inc hlt idivl sub ret adc mov cs (bad) pop adc add xor scas or fcmovnu mov xor (bad) hlt dec clc cmp cmpsb and mov imul dec jl leave stc cmp xchg fisub into xor cmp add adc repnz mov push pushf ret dec (bad) mov addl sub mov enter cmpsb cmp pop shlb pop out pop ljmp push or push cld cli leave dec outsb pop out jmp or test lret repz adc jle lcall or (bad) xlat jns bound or out mov inc incl ljmp dec pop pop xor mov xchg mov cmpsb dec or call inc lret pop pop sti inc add je push (bad) cli lods into push daa mov stc pop dec push jmp fbstp or repz mov mov jae movsl popa (bad) out aas mov mov push mov or std mov push loop jno scas jbe in cwtl jle pop and sub jnp cmp je push inc add repz cltd sbb xor call jno fldt mov jecxz repnz mov (bad) aaa and out mov idivb and inc cmpsl cmp sbb lret out mov (bad) movsl ljmp popa call (bad) scas (bad) pop sub jl lret sub outsb std lahf je push and (bad) pop inc fmuls repz xchg les or mov cwtl pop mov cmpsb shlb mov out nop (bad) lret sub cli jbe and cli idiv aas push out hlt ret jo sub notb add inc adc jl cmpsb adcl push (bad) fnstenv mov lock push sbb stos mov mov jno and jb and mov cmp add sbb cmp ret rcr jb fdivrs xorb push repz jbe inc aad sbb xchg mov mov dec sbb mov jmp sbb insb fsts fmull fidivrl repnz and nop pop daa mov jle outsl inc sti or add das mov (bad) fsubrs (bad) mov popa xor or outsl cmpsb inc mov ds and sbb xor push in ds in inc int3 pushf inc mulb imul les lret inc dec decl add and jmp data16 xchg icebp (bad) dec sub adc add pop (bad) or leave out daa add pop fldl into mov xchg mov add or clc sarl lock jl lret add popa dec sub mov lock jb sub jp xchg mov imul sarl mov jns pusha cs xlat cmp push int loope (bad) dec dec aaa imul cmp mov mov sub inc xchg imul push loop xchg inc lods xchg out loopne or data16 sub test fs (bad) xor mov int mov pop cmpsl orl gs mov shr adc push pop lret mov mov clc test and dec loope jge fisubl mov sub icebp (bad) stos xor cld lock mov push mov aas fcoms mov pushf xor pop mov dec push dec sub add scas loope and (bad) clc dec mov out mov (bad) adc add mov xchg mov shrl xchg or fildll and (bad) mov add xor xor movsl add inc mov add mov push inc xchg in imul imul mov or mov lret call rcl in jecxz pop ja fs loop xchg scas mov pop mov or jmp add add (bad) adc std ds mov ds in bound inc push xchg cmp push out fsubs inc (bad) into sbbb sub sub dec stc xor test mov jl and push fsubs and sahf (bad) jnp sti fildl stos lahf iret pop xchg jmp ljmp cmp mov rcll ja ss inc mov cli cmpsl in int cmpsb scas sub arpl ljmp push add out mov pop mov sub pop lock pop pop mov icebp popf jns imul pop sub (bad) into pop mov xchg mov gs sub repnz dec movsb clc inc (bad) lock inc or leave cmc xor test lahf inc cmc movsl std xchg in xchg shlb movsl sbb out xchg mov cld lods pop and decl ja jno dec push scas mulb xchg sub repz jnp mov pop mov inc or imul mov mov pop int xor and pop pop shrl inc dec shrl cmp out pop and xor fucomp mov std push fmulp insl ljmp jl movsl dec aad push and xchg hlt mov push mov cmc popf xor sub loope jle dec ret fldenv pop inc mov stc add (bad) push mov mov out sub mov pop add sbb les (bad) out shl or incb enter movsl (bad) mov push flds (bad) je je (bad) (bad) loop lock pop test mov int cmp leave sbb popf jno mov sub gs xor scas mov dec pushf push mov pushf xor or scas adc in xchg (bad) adc dec add popf in push add ret (bad) aad shlb or into aam adc lcall andb sub mov incb pop inc cs and mov lcall jbe das cmp (bad) leave adc sti cmc ret iret dec mov adc push xor jg ljmp or jecxz adc and mov leave mov mov jge push push cmp (bad) and repnz jns (bad) mov xchg and xlat in iret (bad) enter rcrl mov push mov clc in mov mov pop dec jb sub add imulb xchg icebp adc lcall (bad) xorl mov pop rcrb sub lret cld cmpsb rcll outsb mov xor sub add adc sbb push jb adc and jecxz ja add pop repnz ret sbbl mov cmp xchg xchg std xchg repz jmp and push movsb sbb push jg movb push movsb inc push mov jnp (bad) mov push mov xor mov sub lock push mov nop sbb mov lods jnp out inc lret cwtl mov or add dec sub sbb insl add pop sub add xchg lret std or xchg sahf jb das ds sub mov pop jl in add sub ljmp enter jecxz mov jns and ret mov mov push movl xchg jae out mov mov ljmp pop cmp pop sub cmp pusha int push or sbbb cmpsb sbbl pop pushl js mov sbb pop xor push inc xchg mov sub adc pop mov stc movsb pop inc push pop add sub sbb loop xor sahf mov outsl xchg ficoml mov jmp repnz dec scas cwtl xlat addl sub aam cmpsb popa add (bad) or mov stc add jmp xchg pop xchg push xchg fdivs sub hlt cli xchg hlt pop fs imul das dec xlat sub mov fsubs xchg rcll out sub add cmc andl cmp xor xor mov pop cmp stc push mov rcl xchg aad cmp mov xlat xchg fsubrl fs outsl test in fsubr frndint add push cmpsb (bad) ja sub imul jmp daa push jo adc xor daa ret push pop push mov push mov cmc out sub in mov inc jmp sbb mov daa sarl xchg pop mov and mov mov inc in lods and mov sti jo hlt jmp sti xchg jle fs mov mov and xor dec out xchg fcoms push shl inc dec sbb ds sub cltd ja push jbe std stos add mov mulb mov out dec mov mov ljmp xor pusha xlat sub xchg push mov lret add push jecxz ret leave and in or ret xlat pop in scas inc jmp icebp push rcrl in or xor jle cwtl sub lahf mov pop data16 jmp enter (bad) xor sbb out pop sub roll inc sarb clc pop imull in jnp pop stc push je ret jmp cmpsl das mov cld cmp dec jg scas and or or jne subb pop pushf je and pop push jle repnz mov sub pop jge xchg and cmpsl into js sub add jle push lods ljmp clc (bad) add bound or or jne lret sub cmp daa xchg jne mov ja fnstcw jmp jmp repnz mov roll in push insl stos sti (bad) xchg lahf add dec pop sbb and movsb into repz push js inc notl push push mov or dec inc mov add ss pop pop push test loope add ret sub pop rcll adc pop xchg inc add or xchg inc mov add pop inc or hlt adc lds fwait dec stos lcall push push cmc cmpsb dec jmp jg pop aad or add add jo int or xchg dec xor push iret or xchg or push add loop fildl aaa xor push mov lea mov xchg sub scas jns mov sbb adcb mov fisttpl ds xchg int scas cltd pop inc dec call add ret add repz je xchg pop addb cmp in push push push repnz push mov adc popf ja mov sub add inc notl pop sbb pop fwait mov sub inc adc out cmp outsl xchg rorb (bad) imul add mov bound out fdivs lcall add sub sub push push mov cmp add or mov push dec (bad) fmul sbb xor xchg test cli repz sub jno test mov mov test repz jo or sbb jle out int3 dec add adc je mov xor xlat insl inc fidivr (bad) in fstpt dec push (bad) mov ljmp scas xor and cmp pop add std mov add dec add mov ffree dec push and (bad) out test inc andb movl aaa jne scas or lret pop lds cmc out jecxz or movsl xor divl das (bad) mov cmp leave (bad) sub ret dec or push imul pop mov jl jmp test into mov mov adc mov dec into adc or test mov or dec push adc xchg nop sub cmp xchg mov (bad) and mov cmpsl frstpm(287 sti dec and lods mov lret push fsubr out and sub and popf push rorl jno xchg fildll (bad) or pop cmpsl inc ss roll push or dec imul ljmp pop lcall adc (bad) ffreep dec (bad) (bad) mov cmp repnz jg mov (bad) push sub and xchg pop mov jo xchg sbb inc ds insl sub test cld sbb iret jbe in call inc stc xor sbb gs mov pop out imul pop xlat test and je sub repnz inc lods xchg divl aad pop popf in imul and jmp push adc sub pop or inc mov je jmp cmpsb in aad loope cmp mov push xlat mov inc xor dec jp ja ficoml fisubrl xor mov out dec stos push or mov inc out lods repnz stos xor lods mov and loope xor rcrl (bad) jb (bad) repz pop cwtl push xlat mov inc xchg push xor xchg sbb aad push mov movsl jbe push ret dec jns or xchg add sub sti mov push leave adc sub push js fcompl hlt mov loop inc mov rorl div les cli cmpsl inc and daa stc fldt jecxz mov dec mov ror xor (bad) pop push cmpsl mov out mov dec ljmp lds mov data16 sub out fistp or imul inc push (bad) jle lret ret mov ds int add jno out cmpsb mov bound (bad) cmp or xor in pop cmp fidivl adc dec xor inc or ljmp xchg cmc or fsub xchg sarb out dec pop repnz xchg xor xchg (bad) loop push mov std cltd test loop dec enter jmp scas loopne mov es push push sbb popf (bad) icebp add xchg (bad) ss mov loop (bad) scas or adc popf ret adc stos in andl or sub or xor inc pop mov or mov dec mov mov xchg fidivr mov and pushf jmp aas mov xchg repz rorb int3 dec dec shlb cbtw cmc adc (bad) adc jg mov mov sub mov inc daa sub fldcw mov cwtl call outsb cmpsb fisubrl subps jo loope xchg in dec (bad) mov add shl leave pop (bad) imulb fimull into mov divl outsb inc lahf bound sbb push cwtl movswl jmp xor mov test mov pushf (bad) out repz mov mov int3 mov sti and pop (bad) and xor lods jl stos push pop stos sub pop lret out sub jle sub jns gs les pop mov mov les sub adc or jp in dec inc mov scas mov pop sbb cwtl fwait mov out int sub inc adc shlb fild (bad) mov or test add mov jmp es xlat adc or bound repnz xchg xchg mov or jnp sub pop es (bad) call js scas sub mov inc xor xor inc xor shlb sub lahf push int3 inc addl xor cmpsl mov pop dec adc aad mov xchg mov dec mov and fistpl sti sub and mov xor sub mov adc jno sub cmp push cld dec sbb adc std in ret inc lods sub dec xor mov bound sub sti out pop xor jo xchg or dec ljmp adc ret cwtl scas jbe lret (bad) (bad) leave lcall fistp out lds inc imul mov mov stos xchg aad pop pop ret adc icebp lahf out xor fwait insl (bad) aam jg popf movsb test in cmpsl mov xlat ret push outsb ret or inc mov daa xor aad pop adc mov xchg stos push ss addb xor sub daa xchg jmp dec sub and in jbe into lock and add lret jb movsb loop cld stos jmp in cmp fnstcw cmp repnz ret xlat xor and push cmp jo imul mov lods mov mov ja daa (bad) cmp add inc dec mov clc xchg jbe arpl xor sti cs ds in out sbb gs gs int3 fmull fdiv or fdivs adc scas fldcw ret dec shr and movmskps push sbb movsb or sti mov outsb sub shrb rorb sbb jmp mov aaa pop jb add ds ja dec mov push adc and (bad) push push xor test add insl inc adc lds loop ja cmpsl xchg rcrl fsubl leave xchg mov test lahf sub pop sbb and mov into add jp rcll jne into fcmovu pop loop decl jb push jmp jg sub std (bad) mov push xchg loope mov data16 mov mov jge popf and shrl jl lea aas enter (bad) mov dec fcoms xchg out mov mov mov jmp sub push inc jl add in mov jmp (bad) mov add fsubl pushf cmpsl ss jg mov push ficom xor (bad) dec add sub adc xchg aad idivl push mov outsl cmc pushf adc inc pop (bad) shll mov mov or mov pop pop mov rcll cwtl (bad) cltd push sbb xchg rorb (bad) jae adc scas add sub xchg lret lahf pop popf lds or hlt add test cmp (bad) cmc jno cmpsl add xor push sub adc cmp jmp xor and or movsl lahf adc idiv mov adc cmp (bad) sarl das ret push cmp and xchg jns mov repnz push xchg or pushf cmpsb xor fbld mov push mov push cs sub dec cmpsl mov sub dec cli mov sar dec cmp jne int3 std and icebp xor stos push adc sub out push adc lret push xchg (bad) and jmp push mov and bound jle pop add pop movsb movsb adc bound xchg (bad) aas sub (bad) pop or pushf imul shrl sub (bad) sub and je mov pop sbb or push test mov adc out xor test stos push or and fcmovbe xor repz dec scas les and pop mov lahf insb (bad) mov fwait out out cmpsb push cs subb mov lcall fs jmp sub and xor and je test push enter je push push add xchg mov sub jne mov sub mov scas lods pop cltd sub loope rcll das (bad) adc mov dec fsubs cld pop sti repz push div popf icebp xor lods ss les mov call push lahf push or cmp shrl sub sbb xor scas cmp (bad) mov lods movsb or sbb fbstp lds push loope or dec (bad) int notl cmpsl sub xlat dec stos fisubr shll push mov cmp cmp or in jmp lret enter xor inc mov push sbb add adc imul or ret call movsl cmp sub fwait andl mov mov in js add xor jecxz std (bad) mov mov testl inc mov (bad) daa pop enter aaa (bad) push out cmpsl mov (bad) and or outsl cmpsb pop pop mov sub fimul lret or lret and xor (bad) xchg test add stos or sti jl enter icebp test mov xchg out push xor dec inc jg adc out adc dec pop mov push add test mov cs push inc lret mov inc push daa pop (bad) hlt ss fistp jecxz xchg sarb jl inc shll push loope cmpb iret sahf dec fs inc das push xor mov mov aam pop pop and adc push adc scas pushf pop add mov cli sub shl daa into sbb mov mov mov xchg leave cli cwtl jecxz pop loopne fucomip inc inc sub (bad) lret mov cmp das mov mov dec (bad) int jg mov adc mov mov stc or lock (bad) push adc dec out mov adc add test test (bad) mov dec movsl and xlat (bad) sub inc ds aad and test (bad) out adc bound xlat div mov sub mov pop xchg jmp dec pop imull adc mov xor cld mov jmp jmp jge mov jnp or mov les pusha xor push dec sub loop jbe push aad and hlt addl sub and push sub test into add cltd inc cwtl data16 lret sahf imul rcll ret lret pop cld push test xchg and jmp mov jmp clc and cmpsl repnz mov (bad) sub daa inc pop push (bad) out mov (bad) sub lret test stos sub pop xor jl daa notl leave cld jp pop int3 (bad) popf push outsb xchg xchg flds push lret fist mov sti div and pop jecxz scas daa negb es push fistl out add add call mov cs lahf xor (bad) cmp pushf (bad) clc push dec mov push adc mov cmp push dec xor dec pushf push or divl call add imull test xor mov mov sub lds scas (bad) jnp pop dec in es xchg sub dec repz out leave notb xchg adc adc add test mov sub (bad) cmpsb aad or mov icebp popa add pop and shll xor cmp sbb cmp xlat adc imul fistpll int fist out cmp ret and fst fsts js and jg lea sbbl test out add sbb sarb pop and sarl aas sub sti cmp adc mov jmp add lret sahf dec call out lods and bound dec lret rcll adc aaa fstps notl jmp ud1 pop outsl aaa or bound push and push test or push sahf inc sub adc jp into sub pop sbb cmpsb xlat pop idivb (bad) repz fwait jmp into sahf shlb enter jle call fildl out cli sahf jmp loop sub (bad) xor pop cs dec inc sub (bad) stos jbe mov lock in fdivl cmpsb adc cmpsb sbb stos xor shrb xchg and xor mov add loop in test sub (bad) popf out sbb nop ret outsl pop jmp stc test pushf mov mov adc std fcomi xchg (bad) lea xchg aas push repz mov push lret out mov push sub cmc xchg mov dec mov mov iret and inc jae xor negl add cltd or pop jno jmp shll jb (bad) mov mov loope inc stc (bad) jg mov mov inc icebp hlt inc jecxz orl mov dec dec (bad) sub jns jno dec pop lret sbb bound mov xor dec jle lea je jp je (bad) mulb nop pop xor mov mov cmpsl ficom sub ja mov ror dec iret lds mov (bad) jmp fadd mov push icebp rorl out mov jp mov sbb inc mov pop stc mov cmp insb cvtdq2ps test shrl and stos jne cld xchg leave mov pop insb adc xchg lods pusha mov or fldl fldt cmp mov dec mov stos pop inc dec and mov lret cld push dec mov out and lods pop mov inc in mov mov sbb stc dec pop dec cmpsb xor jmp push inc frstor pop cmp jns cmpsl adc push add mul aaa dec popa or je repz xor sub aaa mov clc lods nop cmp xchg push inc mov cltd imul sub jg shrl jmp add or cmp cltd pop fsubs cmp and movsl pop pop jbe push jle jecxz xchg add cmp fwait dec (bad) adc inc adc mov lahf jnp mov push or aad sbb call scas mov das push adc cmc mov or and rorb add iret and or add (bad) gs call sub iret mov mov fwait clc jae das test js pop movl pop in mov imul sbb mov pop into stc dec mov rcrl sbb and repz mov rcr movb fistpl pop imul fidiv push xchg or lret xor loopne ljmp div push fimul pop dec mov add add mov cld mov add dec mov pop mov mov shr testl neg notl aam pop pop fidiv pop loop jmp outsb and or add cmp fmull into sti pop adc je (bad) adc mov sti lods ficoml and mov pop clc inc adc sbb scas add mov push (bad) pop lock (bad) mov repz sub arpl pop lcall xchg xor (bad) popf inc dec es fs xchg sub xlat dec push mov hlt leave or add test lcall mov dec push ret and lock pop sbb daa fistpll mov add gs movsb mov ja inc lahf push leave test rolb shl mov out icebp push enter fmulp rcrl adc repnz out sbb imul das cli xor bound cmc mov stos mov fsubl xlat mov pop push popf hlt imul jmp jmp xchg or mov daa repnz push sub dec mov testl mov ret aas mov nop xgetbv mov mov sub jbe cwtl and sti mov or xor lret jmp pushl cli jne xor scas test lds inc movsb dec sub cmp pop mov dec test es pusha pop repnz cmpsl sub push pop xor iret jle scas shr sub mov lock aaa or lea pop pop fcoms ljmp mov jmp push pushl in ja in popf notl mov jno add mov and push dec rcrb pop sbb sub dec pop xchg aad pop mov pop cmpsl sub gs sub dec aad pop lds pop sbb adc jnp mov popl ds push sub jmp add inc xor mov call mov and inc dec jle (bad) sub loope ret leave pop pop (bad) bound cli js mov adc push sbb aad inc lds inc ss xchg cmp pop faddl lds pop and push sub dec icebp mov test mov sti mov cmc dec mov fsubr (bad) out ljmp mov (bad) je jg and ljmp stc loop adc push lret sbb mov xchg mov cld je cmp dec jns inc sub call cwtl roll cld cmp pushf xchg lret jp mov mov es ljmp aas cli jmp das push lds repnz jl lret rcr mov hlt (bad) and sahf mov bound pop xchg dec and fisubrl push mov pop lahf xor pop mov pusha xor mov dec mov and test iret ljmp int rclb mov popf mov xor mov sub adc sub in ret ret pop pop test in push mov testb bound jmp imul mov xor push sub mov xchg xlat push dec call repnz out ret ja xchg pop out xor cwtl shrb out add jne jl repz add addr16 xor mov push and sti mov or xor (bad) hlt imul das sub icebp pop dec mov add in or push in cmpsl push dec mov aad mov (bad) inc push dec or les (bad) out fsts std cmpsl mov fs dec lahf aam jmp xchg xor aas sub jmp mov (bad) (bad) xchg inc sti fisttpl xor mov xchg pop ret mov add sub insb (bad) clc out cld test mov mov or push pop jnp or pop fnstenv rolb xchg std or inc push dec pop ja stos mov cld leave xor mov sub shl imul repz mov arpl sub push sub leave jne lcall xchg fildl leave mul xor das jae nop jmp mov lcall sahf cmp or clc xor adc mov test add popa push lret and mov mov pop into jecxz dec mov sub loope aaa cs sub push out not dec imul ja and lods gs test inc add adc insb ss rcll icebp pop jp daa aad aaa push pop mov pop jnp out ljmp pop scas sbb iret call test movsb cli mov in sbb mov or dec ret xchg in adc pop add push (bad) out sub cmp push or pop rcrb xor xchg xchg in xchg fwait test xor mov std pop sbb leave repz or loopne jae out push adc or popf faddl out sti stc lods mov pushf out inc xchg adc (bad) sub xor sub jmp add jmp push iret xorb add fiadd (bad) or sub rcll cmc sbb pop mov test aaa push ljmp jnp cmp daa mov pop inc sub jg sbb pop jp xchg mov or ret or mov icebp add fs mov pushf ss cs bound aaa mov sub mov and cmp out xchg cli or lock pushf pop jno lret inc sub mov dec les xor jae or mov mov push jnp sub mov jb insl push dec daa or mov sub mov or inc pop sahf cmp jno out js movsb mov outsl lret or pop sub mov xchg test aad aas lret dec pop sbb push sub or (bad) repnz jle mov test pushf lahf imulb mov or out fcoms leave cli cmpsl jnp xchg cltd imul daa sub add sbb dec repnz (bad) lea mov sub xchg push xchg lea jns mov jmp (bad) mov xor fldt test stos ja int outsl mov dec mov jmp mov cmpsl lea mov hlt sub pop test or or adc int push and je mov into and mov cwtl sub or inc or dec mul (bad) pop or sub cwtl ja or mov dec fsubs xchg std xchg fcomp into inc cmp sub add (bad) cmpsb cmc dec xlat mov pop rcrb inc mov sbb mov xor test pop divl mov (bad) dec mov dec jmp lret aam cli mov dec mov xor lret imulb pop xchg mov cmp add sbb push mov lods xchg fidivrl add inc and (bad) pop cmp inc sub jmp xor mov jle add mov sub sub cmp mov hlt pop loop or dec or hlt dec in pop add in dec (bad) mov (bad) mov (bad) xchg push adc and pop cwtl sti lock rcl fs xor ficom dec add xor les xchg mov cmpsl mov xor lea adc xlat dec mov pop xor adc daa jle jo mov or pop sub roll cmp xor xchg lahf xor imul push pop dec popa fcomps aaa mov out adc scas adc add xor pop lahf fdivl out push sti fwait insl cmp jo and mov xchg adc mov cmpl jle adc out pop mov sub (bad) xor mov lret xchg fstl mov sub fldcw mov xchg sub mov pop iret push dec enter pop and mov add call mov cmp add mov pop push and cmp push jmp jno mov mov inc mov adc push out pop mov and icebp test add mov leave xchg mov xor loope scas sub xchg mov xchg dec xor sti jl popf into leave out frstor sub lret ja psrad xchg dec jl movsl frstor adc adc push (bad) jecxz inc int3 jp mov clc outsl leave into push push mov jge pop sbb (bad) push daa pop pushf lods pop rol in pop push lods lods push ss std xchg mov inc shrb pushf jmp xchg pop fwait cld (bad) out imul jnp fimul add fdivl fimull mov xor out lds mov aaa sahf mov xchg and (bad) sbb movb mov js xchg jbe lret sub sbb inc xlat sub movsl pop test mov pop stc add loop dec mov leave das out out xlat cli stos (bad) (bad) push pextrw (bad) xchg cwtl out call sub sub add mov jne xor cwtl sub mov pushf mov xchg sahf mov (bad) out and sub enter jne daa divl or out sub push sbb xor stc out mov leave (bad) repnz (bad) sub add fisttp xor out jbe pop xor daa or sbb xchg loopne stos sub xchg (bad) xor inc sub pop jno inc repz and add ret sub pop pop or stc pop ds xchg inc cmc je pop pop jmp aaa mov or xor mov pop popf test aaa dec mov data16 (bad) adc mov or mov cwtl jo xor cs hlt cltd sbb aam fwait mov and or gs add jmp add cbtw adc mov or andl outsl cld mov pop imul cmp sahf lret and lret and jle clc test dec push mov sub es lock aas add (bad) sub sub testl daa mov lock notb (bad) lods dec les out (bad) out movsb lcall aas mov stos int cmp fsubrp mov popf lods cmp mov (bad) fwait ljmp arpl sub add imul shrb shrl leave popf subb lods sbb pushf mov into push push or cmpsb or dec adc call sub sub add dec int sub adcl xchg push std leave pop lods test sub mov jno sub cmpsl fidiv nop and mov pop xchg inc jae add test movsb out lods or negb adc iret (bad) loope cmp and iret insb aaa mov nop pop jge xor lret stos adc lods popf xlat mov xor fstl mov adc push sub imulb lret mov sbb pop jecxz lahf cwtl sbb dec sub fisubr roll lcall push adc or mov cmpsb xchg adc lahf mov sub xor jne mull ljmp ret (bad) xor mov imull mov into (bad) sub and jmp sub sub cld pop add sub scas shr addl repnz loope jmp sarl xor scas loop (bad) or add ret stos mov or xlat add repnz in adc dec or xchg int xor hlt into xchg xlat sub add cmp pop dec and and out adc fmul inc cmc and mulb sub es jns lret adc test xlat (bad) xor mov lods test and imul mov and (bad) leave or xor cli xor (bad) sub test jmp mov cld jo push xor add shl xor insl sbb lret inc pop int3 adc test jp push pop or mov mov sub in cmp cli mov lret and sub cmp dec jno xor sub outsb pop movsb pop iret dec xor test add sahf movsb loope jnp cmp xor sbb scas fldenv push mov cmc adc add je out repz pop add (bad) int pop fmull dec shll jns mov repz jb dec and push xchg adc stos xor mov push push out add mov push jns add xlat orl neg inc (bad) sbb and dec inc or lock jle pop vmovntps pop in cmp (bad) int or jl pop lds inc or (bad) fcmovnu jae or fs insl sub or sub les push pop std xchg or orl gs mov xor sti push jl push out cltd xchg imul sub push aam push movsb test loop sbb push mov xchg adc je mov mov cmp testl or pop or call scas pop imul pop std sahf xchg push sub inc pop adc mov in pop (bad) mov fdivrl xchg andb rclb or mov and adc outsb pop and adc mov push jecxz push rcrb cmpl push mov cmp imulb int (bad) xor adc xchg inc pop and pop shlb jbe push push ret mov das jne push fnsave xlat cmc sbb jg fadds inc mov fstl (bad) xor push xor jns xchg leave or mov mov out cmp pop xor xchg icebp in jg mov sbb inc mov (bad) push negl inc inc add adc pop adc (bad) mov jmp dec stos sbbb mov int3 mov sub or inc jle shrb adc adc xlat pop xor jg mov dec mov cmp aam aad pop mov sbb cmp shrb xchg pop fcomp ror mov or or adc add xor inc fldcw mov mov adc and pop inc loope (bad) add js or sub dec jle lods push mov push push and jmp push cli add pop test mov (bad) leave clc aad or xor jmp mov push addr16 pushf pcmpgtd push xchg pop test mov shrl cmp leave sbb inc jb mov das in lods mov mov icebp and sub push push pop mov idivl loope cmp lcall add and pop push jbe js fsts inc jbe jmp imulb push lahf sub cmp and sub mov es scas ja out and ffreep push cmp pop mov xchg clc stc (bad) fcmovnbe sbb jge (bad) pusha ret aam push in icebp stos std iret cmp jp push jns movsl pop in cmp (bad) mov jno dec pop jb nop pushf dec out shl pushl sub jne repnz je jno or outsb rcr jg fcoms addr16 adc cli frstor movsl in lds mov mov int3 mov mov outsb ret and ret push or fidivrl xor clc dec dec mov out andb sbb add or es mov xor cmp pop jecxz test lock hlt pop (bad) cmp and cmpl mov jmp and test jno or notl leave das mov mov into jp lea (bad) push fisubrl in roll cmp inc fnstcw pop xor (bad) bound cmp cmp push or (bad) pop pop xor mov inc and and lret mov add pop out lret push or aaa adc ds cmp pop mov or add sub mov and push adc mov inc scas repz mov adc lahf loop dec mov sub or cld mov jecxz adc jnp movsl loopne,pn add sti mov fisttpl fstps imul fs mov call (bad) cwtl fcoml cmp repnz dec jo push xchg decl cld das mov shll push dec add inc mov cli push es cld push movsl push cmp fistl jbe daa std cmp ljmp out out dec fs and roll mov ret daa bound fbld ss sbb adc fsubrs popa faddl push xor push ljmp xchg lret test ret out aas pushl aas sarb popf rorl push (bad) movb push stc movsl push mov push push (bad) mov push cld ljmp leave xor cli push inc mov xor lret testl sbb xchg or repnz insl pop pusha sbb adc fs into out pop leave dec xor in rdtsc pop lock push ficomp or dec js dec (bad) repnz add mov insb sbb stos xchg scas jecxz mov cld and or fisub push aad (bad) and nop jg jle push xchg inc das leave sub nop and data16 xor jae iret lods lret enter das sar movsb les mov add xchg pop loope jno sub sub aam mov insb fwait js jl les lds lock jns pop inc pop stos cmpsl inc sahf adc repz push push mov mov sub xchg adc lea stos xchg movsl push jnp push mov dec xchg out pop rcrb (bad) cmp icebp adcb adc push fdivrl sub out add sbb bound cmp jbe ret in push insb xchg sahf mov das mov add idiv sub sbb pop (bad) push mov mov aas xchg mov ds mov lcallw aad repnz dec push mov pop int mov test jecxz xchg mov call dec shll mov mov push decb jg push fcmove imull fbld ss idivl jg inc sub mov push mov (bad) leave ljmp mov push pop out loopne mov or stos ja cmpsl incb imul xor fisubr adc or out adc xor out jg shll lds (bad) jg sbb daa mov inc ljmp fdivl dec mov dec aam jnp loopne add mov cmp (bad) pop mov xchg dec sarb pop and mov xchg xchg mov leave aaa hlt hlt aas inc sub xchg js add add lea or mov pushf in or popf pop ss lods ds sub xor pop jmp push cmp mov push dec xor jne repz push pop into (bad) sub xor jnp int3 ss out mov dec inc mov rcl repnz test (bad) ret xor adc das (bad) ja ret sub mov jne push insl loope enter popf ja and loopne cmp mov or fstpt adc xor lahf push push mov pop iret inc xchg and jecxz and and icebp fadd jecxz push adc pop stc scas jne xor and xchg dec and icebp lcall mov jp or bound ret lea fs je je inc add das pop (bad) hlt mov mov cmp and push and cltd or in fs mov mov inc sub pusha ds dec mov lret mov or and dec push (bad) sti mov xchg jae sub lods adc jmp or sub stc out mov ret pop imul in mov clc mov push or js fiadd cmp sub adc inc push and jns lret (bad) std sbb mov jne lods xchg adc add mov adc imul int3 mov fwait and ljmp pop std rcrl xchg (bad) mov jo push (bad) repz sub jle cltd jnp dec lds and jo adc cltd outsb fnstcw iret add xor ret popf lea push mov mulb push hlt mov push leave and cmpsl xchg rcrl adc xor mov xor repz dec out loop les stc scas divb mov dec cli adc in mov subb (bad) add mov enter fisubr adc mov dec out cmp cmp mov nop sbb xchg lock or and (bad) int3 jae sub ficoml (bad) and push pop jno scas lret nop and cmpsl leave jo lcall scas sbb out mov add cmp cmp dec shr add jecxz imul push xor sub adc or mov stos stos mov pop mov ficomp flds cmp mov int outsb mov (bad) jo loope mov mov xchg adc dec scas push or xchg test out mov sub add inc dec jp mov insl xchg jecxz cmp dec sub js dec mov xchg xchg scas xor (bad) loopne add pushl fcomps movswl jmp and dec cld lahf ds out iret addr16 sbb or lret jg add xor xor mov pop fsubr mov movsb fsts cmp iret mov and cli and or dec sub daa add addr16 subb je jo inc mov addl insl mov xchg sub jne mov jnp repz cmc jle test test mov cmp jmp and icebp popa scas je adc mov sti cwtl sbb mov xlat and mov xchg daa lret adc cli lahf push pop imul ret std shrl test mov fbld adc sub jae jne mov sub loopne jns or fcomi sub stos mov pop loope loop clc mov (bad) cmp jb lahf jns mov mov mov ljmp icebp push push shrl in daa pop (bad) aam loopne rclb paddusb and xchg sti cmp sbb js mov dec push pop popf sub ljmp rcll test out js je jle (bad) out adc daa or sarl cmc sarl mov and push pop test sub adc scas mov adc adc lret fs jbe gs adc imul or repnz xchg shrl pop adc test into jbe pop in xchg add inc cmp inc in pop dec call xchg imul cmp (bad) xchg jmp adc sbb mov int or sbb je int inc cltd mov js iret cmp jbe cmc dec aam sub out cmp fbstp sbb lcall clc ret jge fcompl cmc sub jecxz or mov pop xlat xor or xor adc inc insb mov xor cltd mov mov in jae xor mov add push or mov jecxz mov out push leave and loope loop xchg adc bound stc add movsl push push (bad) leave xchg (bad) mov sub xlat call xchg cmp xchg jle fmull lds jns cmp jmp scas ja pop (bad) sarb lds leave gs add dec aad add mov dec and pop xchg out pop les (bad) fs stos in push fst pop xor push cmp insl xchg leave and pop or lods xor fcoms lods loope mov jnp mov cli inc lcall je pop into sti sub dec popf mov sbb xchg cltd push sbb xchg and xor fwait mov sub in inc dec insb scas inc and or jmp ret jne jns movsl cld cltd gs or xor int3 gs mov into stos data16 mov ja and sub xor incb xchg xor dec dec nop pop pop push addb sbb cmp add das (bad) pop push loopne sub cmc flds cmc loop push push pusha push push lock pop add xor enter or pop jp add not dec ror add add pop push fwait mov jnp pop daa inc push mov into jecxz fwait mov xor es out pusha pop or shll mov sub pop pop pop and add sub cmp pop lods dec je push pop pop divb in test xchg dec xchg movsb jmp mov test xor xchg pop into and (bad) push inc fldcw imul push and sbb sbbl mov jae sub cmp jle or jne imull dec lahf insb movsb or adc mov mov mov dec xchg push mov cmp pop jne xchg xchg xchg mov dec jbe and jnp add or pop mul push push xchg outsb repnz inc or out dec ja aam out insb adc pop sub aas inc mov pop sub and data16 add pop xchg not out sbb int dec xor sti dec das mov xlat mov sbb xchg shr sub icebp lock iret fimull inc out dec cld or sub pop ret lods dec mov fcmovb and and push das (bad) repnz push xlat fs fsts mov ss ret repnz fild push mov arpl pop outsl fcoms dec pushl inc in adc pop dec aad adc fmuls ja ret rclb or icebp push nop nop push movsl cmp cmp inc ret (bad) pusha pop ljmp ret inc movsl push sbb lods sub cmpsb pop sub mov pop mov dec mov mov mov (bad) testb (bad) mov add ljmp mov ljmp mov mov xor mov (bad) dec xlat lods mov and jb sbb mov ja nop ret stc fiaddl test loope (bad) cmpsl and (bad) xor lret xchg xor dec cmp pop jbe xor sub ja fbld and loop ret add push xor outsb outsb push mov pop push (bad) sub rcll mov mov (bad) repz push negl push sub cmc jmp lret std insl shrl pop xlat addl pusha icebp push inc loop pop xchg (bad) (bad) fdivr sub sub lret sahf sti les cmpsb sub ret ret sub iret clc adc mov xor daa and je (bad) jmp pop (bad) dec test sub fs out lock cli adc negl mov repnz hlt arpl iret xchg xchg inc and mov movsb adc test pop push push mov dec addl aad std mov fwait notl pop push dec mov push pop pop jb mov mov call aas or aam mov jl movsl ljmp out dec jmp inc ret add into add cmc xchg call pop cmp pop and cmpsb ljmp mov stc jle push lret aam das lds cli mov push sub decb outsb imul div or aad sahf pop jmp (bad) repz ret push dec lods cmc daa out jne push pop repz dec adc xor scas aas ret mov sbb push cmp repnz mov (bad) and and mov (bad) mov add ja jnp push mov aas andb mov push jns push jb push pusha hlt sub js dec into dec or scas (bad) ljmp push nopl add sahf and or xor adc sbb adc mov mov adc sar ja push dec inc into icebp xor add in loopne dec push add in addr16 jb or loope jno add (bad) jle lds pop push mov negl test mov call in add test lods sti sbb sub call adc pop add outsl jae enter ja jbe jno addl pop push sub fs mov pop sub sar xchg out nop orl push das push pop jge xchg mov jp push jg imul dec outsl std pop inc or fwait push mov repnz adc (bad) leave pop mov fsubrs xor mov cmp nop jecxz pop repz push adc xchg (bad) dec add pop add sub mov sti jne add cli jnp xchg push push mov inc add mov rol lcall out fistp popf or jp or xlat jg cld sub pop sub add cs jp mov and test push mov add pop mov or neg dec andb xchg jno sub sbb dec pop out mov pop into dec push aam fstpl rcl sub jmp ljmp sub push movsb jmp sub mov mov dec repnz rolb (bad) or outsb cmc out divb (bad) mov jecxz cld mov push aam inc xor (bad) imul xchg adc cmp scas lahf scas cmp jo lahf jl push sub stos xchg pop outsb and xchg nop push into pop mov insl jb adc icebp or lods shll sub xor xor xchg fisub negb cmp loop imulb sarl mov mov xlat out lret xchg leave sub push mov xor xchg loop dec loopne mov es jb insl dec sub or mov pop cmp or std daa adc sbb mov out mov iret imul cmp mov fadds iret popf jg test dec jmp sahf adc add mov xor divb inc push xchg pop popf push sbb sbb repnz mov test notb add clc add sti add pop mov das sub mov testb mov out jmp fcoms stos mov dec in into cltd lock ljmp leave sub sub mov and mov lret mov and fwait repnz jbe shrb jmp idivb frstor cmpsl std mov push xchg jmp cli sbb add mov imulb fstpt neg outsb ja (bad) mov xor add mov lahf cmp movsl sbb push insl rcl gs bound std inc fsubl das jno gs ret lods daa or ret push lods popa scas rorl xchg add ljmp sub iret popf sbb (bad) sub rolb fisubrl xchg mov repz lods push iret sub idiv cld jp out fistpll dec scas leave lret sub mov xchg ja push add out xchg fiadd add fisttp push (bad) imul mov add sbb sahf add mov pop sahf jg pop lods xor and mov cld sub jbe into dec ret js ss push sbb imul cmc (bad) into and repnz fidivrl (bad) xor fimul dec cli into adc jp pop (bad) or in mov je pop dec or sar mov dec xor std and cmp mov or leave jne ds popf mov loop cli sub mov cmp fidivr or cmp jecxz xchg xchg pop clc push lds add push sub and test inc add adc pop xor sub jo xor repz cmpsl push xchg addb and mov xchg idivl pop mov add inc mulb sub and stc (bad) mov sub push jl mov call cmpsb leave push jnp cmp mov imul dec pushf mov mov xchg icebp jg add and inc mov test (bad) mov stc xor (bad) cmp jbe daa jnp inc adc adc add mov addr16 xor pop aaa loope out in add jae mov and and cmpsb lds movsl xchg test and cwtl stos lahf data16 cli mov out frstor out sub fisttpl adc ljmp sbb bound ss xor shrb in movsl out into xchg push cld xchg inc lods divl jns jmp fcompl daa jmp jge pop test leave cmpb (bad) xchg xor jnp adc jb clc bnd jmp xor dec shr xchg mov jne or push clc call aaa jno inc rorb push and cmpsl jnp daa fstl pop push aaa mul sti or add and pop stos mov push fisttpll sub add pop test aaa jmp mov mov in cmpsl iret add aaa and scas test nop es mov adc jne movsl cmpsb int lret adc stos xor bound movsb sbb shr push sbb and (bad) in adc sbb call mov divl dec out cmp cmp adc pop mov aad push es pusha xchg push lods dec std gs fs xor add (bad) jl movsl push ja or add ret pushf cmc imul or dec or movsb adc sub mov mov divb dec cmpsl inc dec (bad) insl and jecxz pop mov push inc imul mov insl scas sarl into mov test ljmp xchg nop push setg into setg adc (bad) sub div push push add push fcoms fildll adc (bad) jg scas adc (bad) and lods cmpsb test xchg into mov js mov jno dec movsb aas jbe or jg or jp pushf fsubr or sbb movsb dec mov dec mov arpl sbb and xor sub (bad) xor lret dec jno xchg add rorl mov test fdiv xchg jns imul fwait sub faddp pusha push std fldenv inc mov dec aas cwtl repz mov lods add mov cmp mov pop mov fs xor scas fst sub add sbb dec addl out xchg or data16 xor clc push mov aad repz and and cmp lret mov sub iret or sbb sub sbb lods xor adc cmpsl jmp or xchg inc push xor call sub repnz and pop leave ret or pushf jg aaa mov test into xor push (bad) pop fs xchg sti fs int int3 cmp mov imul jg lahf dec aad stos testl sub cld and pop sbb jnp out lret (bad) sbb or xlat jnp push ret dec stos test repnz xlat stos jb not fstps scas cld cltd jmp mov in hlt pop call pop into fs mov cmp cltd loope fs mov or push xor movswl leave leave rcll gs fldcw add sub popa ja sub push fyl2xp1 test pop cmp ss mov outsl jl or cli out repz aas cmpsl jne ss adc (bad) fmuls cmp jmp dec xchg dec (bad) xor jb mov ljmp xor push lods sub adc mov call push xchg test mov and jl push jle adc cld mov jmp sbb das or jne pop or clc or hlt sbb or jmp xchg loopne fcmovbe fs shr inc xor rclb fdivrp jl int3 jle daa stc add xlat insb and xor movsl imulb lret popf push xor mov xchg fiadd jo ljmp push icebp decl cltd enter dec icebp fdivrs dec push mov lcall pop sbb je in push or into repz sub lret add add push jmp add (bad) mov cmp jb sahf adc test aam sub sub test dec or sub add mov xor mov pop add std leave or cwtl jg daa leave aam cmc stc jne repz sub loopne mov dec sbb jge jp mov jbe repnz repnz into and mov sub leave mov pop jge aas pop dec imul cmpsl cld inc leave sti mov pop xchg xor push sub sbb fcmove lcall xchg sub inc emms out ss lahf xchg decb xor cs push cli mov add dec mov lahf xor jne test lret adc mov mov ret test jmp fist xor cmpsl xchg mov sbb add mov add ficom shrl push (bad) sub jle and (bad) fnstcw mov xchg daa pop (bad) (bad) outsl and push call ficomp cli xor repz (bad) xor stc mov fdivs xrelease xchg dec into stos cmp sbb mov aam out pop push mov add movb sub add ljmp cli lret inc dec loop xchg sbb popf (bad) push sbb cmp std popf adc js (bad) dec or ret add test aam dec in mov dec sti call push pop xlat jno add das or push jnp iret or xchg adc repz mov push push ret push adc jbe lahf mov divl cmpsb inc lcall pop data16 jne and mov stos pop xor sub or mov testb (bad) inc inc sub sub repnz pop push jl (bad) xor mov add or (bad) push in push sarl cmp or jl add or dec lret scas sub das mov das sbb cmpsl fmull sub outsb jmp mov fsubr jne popf movsl ret mov adc iret and (bad) fisubrl jbe mov dec sub xchg int jge mov sub add inc and sbb flds and sar or mov ja ss jmp or repnz mov into xor sub mov mov mov or jae lds shrl inc adc mov mov leave jnp fist or (bad) xor push dec or mov shrl mov stos repnz mov mov push rcrb pop mov mov push sbb push mov mov aad sbb inc xchg or xchg sub dec mov lret cwtl xchg lahf mov out or or dec sbb das inc sbbl sbb pop (bad) sub call add je jno add adc mov cld mov repz and (bad) ljmp add and xor stos repnz bound lret push out and push xor mov aas push push jnp jo adc stos dec pop mov pop lea push mov sahf add aaa mull dec push adc shr js cmpsb pop pop in cwtl test testb xor push stos xchg cmpb in pop inc sub or mov or hlt jecxz sbb jg cli mov xchg mull or lock mov jbe fsubs mov mov addl adc popa adc push push outsb es sub xor or add jp xor push daa pusha jle dec adc ljmp sub pop push pop pop add add jle lret sbb into jns xchg pop adc aas and dec pop test or ret test lods mov mov jmp repz xor fdivr sar or xchg push jo mov fstpt mov xor pop jmp sub and fwait dec lods and xchg xlat jmp xchg test sub ret mov sub jne jmp cmpsb jbe and fistpl dec aad inc movsl fisub pop push aam mov xchg sti addr16 adcb jge paddw movsl mov call push test ss ds and push push rol divb les aaa repz aas or and imul dec mov xor jecxz fistpll push cld or in pop ljmp add mov mov sub jmp jmp jle out std in pop (bad) mov xor mov std inc into xchg xor sub and dec push lods adcl sub jg out jno data16 sub pop bound add rorl xor and ret cmp loopne xor sub mov (bad) rcr repnz mov pop mov in loopne add sahf call daa les pop xchg test mov outsb sub jno and outsb popa sbb xchg fnstsw push mov and add stc in mov and repnz pop scas lods (bad) mov in cmp add sub loope cmp xlat in fdivs push add or subl pushf push nop lds shrl xor push and stos jle mov lock stos addr16 or ror ret push dec fmul or stc or mov or lret aas sub jmp (bad) dec enter stos lret sarb out xor or or fwait es jp xchg mov (bad) jne ja pop push incl adc lods fbld add and push ljmp stos lret or lods mov pop pop push dec sbb sbb push or adc xchg test pushf aam push loope test sarb xchg xchg push jg fistp leave (bad) jg fsts cwtl mov and cltd daa lret (bad) adc dec xor out push pop loop sar pusha xor sub lahf in jp fnstcw and imul push loop push imulb cwtl out sub fstps cld mov push aaa in mov adc xchg or outsb pop pop xor inc inc testl push mov push adc push rcll movsb (bad) aas jmp jmp fwait mov inc sub cmp jo add sub pop sbb pop out adc cli or rcrl and xor inc cmp pop xor mov jg mov mov cmp jbe xor rol ljmp sub push movsl inc fdivr data16 push out cld xchg pop dec test pop popf dec push mov ja xor adc cmp add and pushl pop mov xchg in pop aas jle addr16 fcmovb or rclb negl mov mov mov push into outsb jmp jne call or pop test or sti cltd dec sub dec sub movsb mov push xlat mov (bad) clc pop mov mov lods scas mov sub es sbb test sbb push mov push pop fld imul push fimull outsb out push sbb xlat add (bad) cld test and xor pop idivb pop push push sahf lret leave pop mov ret pmulhw push sti jb mov push fs push iret xor xchg and or add or cmp xor inc sbb adc jb (bad) and lods dec or jmp push int push sbb sub jmp push sub in fmull test outsl stos je mov icebp push fsubrs lock xor lret ret adc mov ss in stos loop subb xchg cmp mov (bad) clc pushl call lret rcr push mov das rorb sub mov popf push andl in mov cld (bad) dec mov dec test cld popa movsl popa sub push sti vmovaps mov xchg clc nop mov push fmull xor stos cwtl in pop and pop add jmp push add mov imul jge lahf push cli sti pushw xchg and (bad) adc out and movsl gs ja (bad) cmpsb (bad) loopne cli cmp cld fisttp cmpsl ficom push stos cmp imul shl cmpsb sub mov add ds lcall or dec and aaa movb sbbb cwtl fisubl test (bad) lcall inc push pop pop fldpi loope bound or mov sub nop fs out mov xor mov in lods or jmp inc mov xchg (bad) jmp ljmp jns fs es ret or or rcrl jnp arpl mov mov cmpsl pop mov jmp cltd sahf into sub add addr16 fucom sub js or arpl pop out repnz xchg push (bad) out pushf mov push xchg scas adc pop (bad) xor into adc out pop out (bad) leave inc rorl test mov mov add je in into pop or pop insb inc sub or mov push mov adc mov out dec or test inc inc xchg dec push adc mov add and sub lret xchg inc in sub scas dec sub pop xor lret ficom cmpsb mov popf repz add bound test mov in test jne add or jmp or adc test and jecxz pop mov aas std in jnp gs jge cmp xor pusha xor mull dec shl dec lods mov jbe dec fisubl xchg cltd pop gs mov sub notb inc lahf mov dec add sub mov pop jne cs sti pushf cmp dec xor pop cmp jmp lcall repnz leave (bad) sbb xchg gs sti jb out rep jb into js (bad) mov sub rorb jne mov mov mov sub call out test loop xchg jmp (bad) sbb sub test jl adc fcompl aad or cmp fidiv cmpsl sub popa sub xlat sbb push jp (bad) je lea add push scas fcom mov fsubl mov mov jno mov jmp cmp orb pushf pop lea loope jp inc dec push xchg xor popf xor stc mov popf xor cli cmp push mov (bad) jne stc iret or jmp cs sub jl leave fisttp daa sbb popf inc andl out push aaa push push out leave aad jns sub cwtl in (bad) in shr jns (bad) xor and pop xor scas sub popa lds pop mov cmp mov sub pop pop adc add mov lea iret lahf cltd push adc mov cltd push cwtl iret rolb imul mov sbb or out lret mov inc mov dec (bad) cs push dec mov adc stos loop nop repnz lcall pop divl jge mov sub lds push repnz test sbb inc test out repnz stc pop (bad) dec mov and pop or rorb mov das jnp adc adc mov out or flds add icebp loop subb inc repz xchg popa enter sub out xchg fidivr xchg adc (bad) xor pop push cmpsl clc popa je nop adc cltd mov in stos in out xchg call add ds icebp jmp (bad) popf pop lahf pop xor out lret xchg adc sar adc mov and (bad) sarl push push push ljmp cmp cmpsb repz jecxz mov movsl ffreep inc movsl in or fildl xlat sbb pop out lock mov push icebp cmp xlat call push mov addr16 lock mov xor or inc loopne pop xor inc das sar bound enter and (bad) (bad) push mov mov or push and dec out jp fsubr aaa movsb stos push cmpsb inc ret push adc mov in add add scas bound jmp negl xchg push imul push or lock or sub movsb mul adc orb push mov sub mov in (bad) repz xchg sub mov stc xchg or or pop mov sub and imul out mov rorb jae and aad cmp ljmp inc push daa cmp frstor mov dec aaa cmc or push sarl leave xlat (bad) mull pop dec js xchg int3 jne out mov or and mov pop xchg lret sub add mov div xchg add jne cwtl xchg add cmp cmp (bad) mov adc push popa scas leave jmp loop and adc popf xchg pop mov movsl mov js dec ret mov daa pop pop xchg call xchg rclb cli lret in or ret xorb int3 subb mov aas lock (bad) pop inc mov add sub pop dec fxch xchg cmp sbb add (bad) sub push pop dec ja aas push and sub dec adc mov pop stos lret push jp xchg pop mov mov imul data16 xor icebp das inc out sub andl push js push fisttp push and jecxz mov dec add (bad) pop cmc in mov jne jne mov and xchg cmc lods or and mov call in das je pop out adc data16 in (bad) (bad) (bad) xlat jmp pop shr mov mov je push cwtl sub cltd add cwtl dec lock fs loopne insl pop mov inc fidiv mov dec shl or sub pop cmc mov add mov test push out pop or mov jl push jmp out fs xor add sub or (bad) pop stc push jecxz js and xchg jp fcompl mov js call push pop call pushf jecxz daa repnz mov xchg push lcall data16 imul out dec scas iret dec ds loop adc ljmp mov stc add lods sub adc add shlb pop je enter das or jl (bad) call lret (bad) std push mov mov insb push lahf je loopne ds imul adc out dec ss push mov xchg mov jecxz (bad) add popa inc ret xor (bad) push pop cli and lds xchg lahf or inc cmpsl rcrb jno (bad) mov adc mov lock (bad) pop sbb imul pop inc mul fwait fs icebp cwtl testl cs ss test bound jl aad sub add push das fs mov call aaa ss lods sub dec mov jbe cmp leave and pushf adc and fnstenv pop call pop jae sbb movsl call pop int3 shlb nop out fistl mov pop jle or sbb dec push or sbb xor push ror add mov (bad) fnstenv jmp mov outsb lret adc ret mov mov pop mov mov and repnz pop cmp loop dec lods sahf mov jbe pop sbb scas stc sub and (bad) add or push (bad) xor mov xor test (bad) incl pop xor iret sub adc std inc mov cmc stc push dec xor push mov jecxz das or push out (bad) (bad) nop addr16 das mov jno popa mov push and mov mov insl push xchg lds push frstor fisttpll mov dec je leave pop int3 jb sti and xchg add mov (bad) jbe leave rcr jb xchg (bad) mov inc jo es lret aaa push mov fwait ja cld clc daa (bad) inc sub jmp (bad) jae cmp mov adc or scas mov pop lods mov stc js dec xor stos les stos repnz adc mov mov push sbb pop xchg dec int adc push jecxz sub jae pop push push jmp push sbb inc cmp sub adc (bad) jo add add sub loopne ss mov and nop fs and push xor test mov dec and scas xchg push xor or into cmpsl mov out aam pop (bad) cmp xor gs push dec push fisubr jge popf in std (bad) cmp adc mov call cs mov adc and add loope xlat jg loop add addr16 mov dec (bad) (bad) sub sahf inc inc into out xor fs dec ret out mov adc mov lods in enter push dec mov sti cmp sbb push popf decb pushf test pop mov mov rolb cmpsb cmpsl daa out pop push fsubl sarl push or mov orb add xchg sub aas arpl gs out out dec scas sub xor xor mov xchg and cmp push add jmp int3 ja lock jg cmp aas mov (bad) mov shl imull add and cmpsl into dec das add sbb dec (bad) and mov or rorl or sarl das call mov jne xchg jmp rclb fs mov cs daa (bad) cwtl pusha add mov leave idivb pop adc add xchg jge push mov push mov mov lret adc mov jmp lcall or xlat nop mov sbb test icebp sub shr push xchg ficom cmpl int int3 mov xor and sub push adc mov pop push incb or clc mov adc dec or inc test add or call xlat push xchg mov ret fildll adc popf sar (bad) sbb sbb and mov (bad) mov adc pushf add ljmp imul pop cmp xor adc mov cmp sti lods dec pop fnsave test xor xchg data16 cwtl std jecxz push ja lcall or add sub pop inc (bad) loopne or push mov sarl xchg add xchg call push out pop cmp inc xchg mov jl (bad) mov push ja pop xchg fs lret add xchg fnstcw daa jle je dec ss lock stc sbb adc rclb icebp hlt xchg loop cmp fcmovb mov or stc ret push mov pop dec xchg jge faddp aam repnz mov sbb aas mov cli sub mov jge mov inc out or sub das int jno jg outsl inc pop xchg mov sub cmp (bad) out dec mov inc and or inc movsl ffreep fisubl mov push imul loop repnz xor lock sub mov add push das mov cmp fwait xchg mov bound fcomps int3 daa xchg adc imul insb outsl pop out sub mov pop fdivrs repz jp enter scas pop call mov xchg stos lcall jns mov rep daa add push mov loopne sub test xlat jns ret and ror sub ret or inc push int3 mov clc loop cltd lds rcrl mov pushf dec int jae out add pop (bad) mov xor in sbb xchg mov clc daa mov mov fs xor shrl xor in sti or fcmovnbe dec inc repz in adc sub pop mov rorb add mov push xchg pop les cmpsb movsl incl add sub xor mov nop insb xchg jmp dec jp inc rolb push mov in icebp push mov cmp fmull pop fistpll mov (bad) or push ja jmp cmp cmp xchg loop mov push popa and add jge mov (bad) push adc and gs adc inc lret stos xor push pop add lcall push pop xlat lahf xor outsb (bad) sbb pop aam loop sbb xchg (bad) push push das inc (bad) sub sbb lcall xchg rclb pop pop mov in mov mov and fisubl pop cmp addl xchg cmp jo popf mov and mov scas out ss push cmp bound sub mov add movl add xor cmpsb jle popa inc mov repnz push xor mov xlat xchg enter dec add and inc pop mov push fmul pop es push push xor and sbb cmpsl xchg ret xchg lcall fxam or mov mov out sub sub adc icebp fs pop dec mov dec sub inc mov fcomp lahf cmp sbb fwait fs fldenv push lds js pop out sub jp dec imull into lods cmp clc mov pop cltd pop adc mov sbb inc jo jle push fbstp dec sbb push add or xor sub inc lock dec test mov lret loope sub rclb gs nop mov sbb xchg sbb or pushf lea call mov lcall mov pushf pop push fcmove push pop add inc in ror and lds mov mov push sbb mul mov or push jns pushf pop cmp test ret ljmp xchg mov movsb xchg mov pop mov repz inc stc xchg mov add or xor pop mov cli and mov loope imul test ss or jne fild insb mov (bad) mov daa push in out push sub aaa mov (bad) mov inc mov scas mov cltd aam jle fs cmp mov test aad mov sbb add sub xlat mov fdivrs jl loop rorb (bad) adc mov or sarb adc jmp mov or aam pusha divl fwait les out mov xchg mov jg add pushl jecxz adc adc jb les mov xor and pop into repz adc add push lcall add mov out lcall pop (bad) leave lcall cmc sbb pushf sub sbb mov lcall push repnz dec ljmp repnz fstl jnp imul sub and or test lret add mov std sub and cli and push or (bad) sub cli aaa and fsubrs leave jb add cs lret add pushf and mov notl sub movsb xorl (bad) and mov jge push outsb xor xchg jmp loope cmp movsb out lods push in aam mov jmp cmp aam jmp test repz stos leave ja out sub inc shrl call imul in ljmp sbb add xor loop sub sarb cmp pop cltd xchg adc mov movsl push or stc stc inc dec loope pop cmpsb test xchg hlt ret sub adc xor fsubrs out xchg movsb lods out stc push cwtl rol pop scas sub inc add cmp clc jl dec sti addr16 rcll jnp xor sub data16 sbb xor js sub adc cmp repnz out push aad push out mov add mov pop or in stos in loope xor jmp hlt imul lds mov inc lods nop mov and sti ds cmp cwtl inc dec ja imul insb sub out mov mov mov jle pop insb push pop adc sahf adc insb in pop pop pop sub and scas jb pop and xchg test pop mov mov in repnz xor mulb jge add mov mov push testb fldcw movsl jle xchg and sbb xor test and add aam inc imul ret mul stos mov pushf dec fildll in add enter jp ret jg xor shll out mov or icebp push mov sti sub loope clc dec gs aaa and decl jbe mov push jnp fwait xor je jmp xchg in cmpsl pop adc mov sub or lcall int outsb jmp mov jne inc and xchg adc (bad) not and lea cmp in subb inc sbb or add add and xchg pop gs sub inc les sbb add jl test add bound push xchg (bad) xor notb dec xor mov ljmp and (bad) test scas cs pop xchg idiv out mov pop mov jmp clc jg mov xor div in and mov data16 xchg popa or fiadd or js jbe ret push add add mov mov loopne test sub add es mov pop push (bad) mov pop pushf or cmp out popf (bad) sbb pop adc lret jo das movb xor int3 mov stos xor fdivr out das jle fs test mov popa push add sbb je push and out pop jmp or or mov and out and sarl or divb dec stc scas subb push xlat or lret dec rorb pop dec pop arpl or or mov gs ret pushf cmp xor fsubrs out dec jecxz or pop shrb roll lea (bad) mov pop mov inc ds dec and out cld popf mov inc sbb (bad) cmc mov cwtl jb inc mov mov xchg inc fildl sub mov mov fstpt add xor xlat dec movsb and insb hlt mov hlt leave bound (bad) pop lcall pop mov int jp cltd mov decb cmp jo add pusha and mov iret pop and sbb (bad) je (bad) or jg (bad) leave leave mov rorl outsb mov jne in inc push xor lretw daa clc push aad sub pushf mov mov adc fisttp popf push inc or jne mov or stc pop imul mov insl dec les adc dec icebp and sti jecxz xor jb mov dec cli sub dec sti mov pop and in xchg ljmp pop xchg ret add lcall cmpsl add sub push cld hlt rolb js lret pop and jbe or add repnz call movsl xchg ret fdivr cmp jge test xchg stos lahf lods dec pushl rcrl inc subb fistpl in jmp jecxz jmp jmp and lret ss xchg out cltd push mov xor add sbb mov xchg sbb repnz daa xlat mov ljmp loop mov aad in shll mov and js bound adc xchg (bad) movsl or (bad) xor jne iret (bad) icebp ror insb sbb in lods lret or fidivr cmp mov dec outsb es lds fidivrl fadds mov cltd and add pop movsl pop add jecxz sub add jbe push inc cmp xor mulb adc xor push ret je hlt loope sub sub cmp lock pop je jmp scas jmp mov clc inc icebp lret popf pop (bad) lds aaa pushl ss out xchg and movsb cltd xchg ret arpl notb push js popf sti adc into nop or (bad) outsb (bad) std repnz enter rol (bad) inc dec scas xor movsb mov and fidiv and aam push push mov aad (bad) or data16 sub add fs in movsb add mov push sbb pop hlt fs mov aas mov mov popf xor dec adc mov pop lock hlt fdivrs cmpsb pop or add add cltd fiadd and xchg push pop pushf faddl push (bad) fwait cld jb into sbb mov aad mov test fild shl icebp push ja pusha mov in daa mov pop cmp add aaa and fsts ljmp dec inc dec mov mov fucomip cmp mov sbb aas inc mov sub xor pop fucompp xlat shll fcoms xlat xchg movb movb mov cs and mov bound mov push je gs mov pop sbb pop das out shr aas mov test (bad) and sub pop xchg push inc pop inc iret lahf pusha (bad) (bad) lret adc stos cltd daa and jmp pushf cmp xchg movsb popf repnz lock arpl sarb sti leave sbb pop push jbe pop (bad) and fisubl in mov xor pushf call (bad) repz xor and js popf icebp lods jmp mov bound gs add or adc cmp adc int sbb iret mov mov cmp jbe push mov mov jl adc mov mov iret sbb inc pop add lods inc movsb out mov out dec out xor movsb sub scas repnz xchg mov aad ljmp or (bad) outsb popf pop pop sub add inc sub lea or jb or cmp push movsl call scas mov lret sbb iret sub stc dec es icebp push xor into sub cmp call ret sub shll inc add pop mov mov inc inc xor outsl mov arpl test xchg shr cmpsb mov stc jne inc stos ret (bad) or mov je rcrl push lds popf sub xchg push xor lods sub sbb outsb into (bad) jmp in movsb xor fcomp cmp xor dec ret andb xchg mov lcall and out jbe mov data16 movsb xor ljmp xor mov shlb daa (bad) cmp mov negb add sub fisubr cmc (bad) (bad) dec pop mov es subl int jnp mov jle lret nop dec add lahf mov jecxz and mov cmp in mov mov adc (bad) sub dec incb mov mov sarl clc daa fsub aaa nop shlb lds pusha inc sub scas loope cmp pop pushf rol pop add push into mov and dec xchg cli mov (bad) sahf ror pop scas or sbb cmp sub xor sbb xchg jecxz mov stc jecxz mov rclb cwtl sub out or or lret jae out in or xor hlt call stc scas cbtw xchg mov pop int3 in sub pushf lock into fdiv lret jmp aad jno or xor stos test xor int inc popa mulb pop enter cmp out sarb pushf js (bad) aas mov stc cmc les ds pop lret or jb and inc cli repz sub mov fxch and pop add into (bad) xchg (bad) pop into call aad fldenv xor sbb daa into insb and lahf in sahf dec stc scas cmp js xor das mov jg xor pop stos adc (bad) frstor push sub pop push mov imul xor aaa ds pop jne adc add dec and xchg fimul jno inc jg outsl mov push mull or loope mov adc add dec inc movb iret repz jl and repz push xchg aad cmp mov ret mull sbb test xor mov pop or (bad) cmp sub movsb push (bad) mov ss xchg fsubp xchg repz mov mov pusha sub stos adc pop das or ffreep jmp mov pop or test pop int3 leave popf adc lcall xor add inc fdivl div mov in sub pushf arpl (bad) scas stc dec (bad) xor cmp out mov lahf xchg jmp xlat das sub inc adc mov movsl xchg in xchg ret mov dec fstpl fsubr xorb jo pop sub adc sub sbb mov mov pop push and stc and and clc or push (bad) ror inc pop mov fcmovb mov daa (bad) mov outsl dec xor cli (bad) xor sbb mov xchg sub inc cltd scas sub xchg sub push mov pop das sub jns mov adc (bad) icebp add inc mov dec and leave lea cwtl jo dec and xchg and js mov ss lret lahf jge fldln2 mov scas pushf xchg mov push out dec add jl mov inc and mov add pop dec das ljmp movsb or icebp or add mov leave and or rolb adc scas mov xchg out sub inc (bad) fnstsw mov mov adc or popf into and sbbb lock mov lods les and dec sub adc mov mov sub cltd aas icebp sub arpl push rolb xchg test loop rol add pop sbb sbb and xchg jmp out mov out and add pop cmp xchg xor ja sub mov adc pop sub je stos inc add out mov push xchg xchg or movsl shr out dec or fstps jmp stos push push sbb dec and enter push and inc mov mov and mov sub or mov daa dec add jae out daa inc xchg or icebp fbstp sbb xor (bad) jecxz sub mov jns and push stc mov rclb mov jb and push xchg and dec mov pop jmp in pop sub adc mov jnp es ljmp xor icebp pop adc jl mov push xchg mov pushf dec push pop inc pop call inc add das xor cmc pushf sub cli pushl movsl aad xor cs add in pushf dec mov fidivr cltd mov mov data16 dec mov je cmc mov lret lea out je jo js in daa nop (bad) mov nop xlat xchg movsb xchg push pushf push xor sarb fsubrs pop mov dec stos iret popf xchg dec das add or data16 xchg scas pop mov mov xchg cmpsl mov out data16 ljmp sbb test and outsb mov dec fisttp dec notl mov (bad) inc push popa bound dec mov xor push dec inc push loope stc imul sub dec mov (bad) scas fucomi xchg mov (bad) out mov mov dec stc stc cs arpl lret xor out cmp outsl test xchg ret in jmp pop sbb repnz movsl jecxz dec shlb sub in (bad) ljmp and xlat cmp mov test pop aas lods push mov jbe cmpsb xchg fstl xchg jmp aam push out sub xchg lret push push xchg mov cs (bad) lock hlt out (bad) mov push loope add mov sub pop lds out subb cs xor jmp sti popf pop xor add jnp (bad) adc sbb or or ret jnp fstpt xchg jno aaa cmp lods loopew and cli push and push or xor ljmp shrb loop xchg scas repnz scas add inc dec mov (bad) inc (bad) xlat dec mov jle add mov and mov inc dec pop roll rcrb xchg push repz jmp add fdivl jmp fstps xchg mov jb shlb bound pushl add cmp in xor repz repnz test into (bad) repz dec (bad) sub xor or dec bound jne test sub clc ds xchg sbb je push out test movsb add push mov lret rclb add fldl xor int cltd and mov sub (bad) jg std mov fwait push jg cmp into std lahf or out cmp jmp fcmovnb mull push push clc mov (bad) xor mov push jnp push xchg ror rcll into inc mov (bad) popa into adc mov jne not mov push clc (bad) pop sub and fist out out pop scas or pop pushf dec inc push out xchg pop lods in push out inc es imul das lret shrd add roll xchg dec or repz add fistl mov sub lods out notl dec push inc sbb in loop and dec out mov mov push cmp adc sub (bad) repz das icebp dec std and rcrb fldl jns call adc (bad) xchg push lcall dec mov outsb cld jbe out adc ret sub sbb repz enter mov xor mov add clc push daa ljmp and sub add jbe dec xchg mov arpl das mov jnp sub adc scas les mov es call rcll outsl cld push xorb mov cmp das add push dec sti ret out daa pop sbb dec leave push dec bnd pop call lahf cmp or add inc daa pop jge daa dec and rep xor idivl push mov lods pop scas xor stos int3 jge daa xor (bad) xor and sbb out lahf xchg add fisubr adc je mov shrb or mov dec jmp notl mov fidivr lcall pop into pop repz loope fucomip xchg xchg aam inc (bad) xor mov stos bound jmp mov inc and jp lock into and std dec add jmp inc and xchg xor (bad) cmp into xchg icebp imul sbb and test (bad) xlat pop push imul test rcll jns fldenv cmp ret mov pop sub sub (bad) xor das shl cmpsl push jg jo xchg repnz and (bad) or pop xor std incl or mov rol mov and das mov lods out mov add mov inc jmp xchg mov dec mov in outsb sub ret inc sub loop xchg enter js jl dec call jge mov xchg lahf adc mov sub fnstenv mov and jp aad cmc jo sbb je in mov jle add xor lret outsb ret hlt push (bad) mov dec xor out and xorl lcall imul sbb pop cwtl push loope and lods dec test (bad) mov popf aas into xor xchg leave mov icebp es clc adc mov stc sbb pop cmc fbld dec xor mov sub cmpsb insb and push gs pop aam out aas push mov mov inc repnz icebp pop dec mov aaa and cmp or cmp hlt sti divl sub mov push inc xor into lahf sub push jl iret (bad) aaa push jp cmp mov call cmp testl aas add fsubs xchg jle (bad) jmp mov xchg ljmp fisttpll cs lret sub push mov fwait test repz mov das aad addb and inc jmp arpl inc pop lods (bad) sub testb or or stc pop mov mov add push jg aam (bad) ljmp cmp into stc pop fnop jo mov lcall in add repnz adc lods aaa xchg out push lods pop and out and jne jae mov xchg sti scas cwtl or pop sub dec mov cltd mov pop jge (bad) or add dec lcall movsb xor cmpsb mov iret mov cli cmpsb test mull mov and mov xchg rcll cmp jns into add jmp je push daa in inc push adc out cmp clc das lret std sbb es mull int3 imul stos pop stos clc jne mov imull fisub idivb call xor xor rorl insl push or aam pusha xlat movzbl mov and xlat sbb xor mov xor push push sub mov imul xor sub xchg xchg mov sbb jns mov loop ljmp mov push mov or fnstenv cltd pop pop sbb and data16 cmp movsb stos sub (bad) sbb sbb mov add dec pop stos adc mov mov sub push out adc nop (bad) in je mov cmp das ss sub mov jns mov add mov lods cld out mov ljmp push mov out mov mov clc mov jmp dec jo and pop mov repz add insb cs inc push mul push ljmp sub mov lods (bad) in movsl test movsl clc test cmp loope ret (bad) mov cmp (bad) test dec cld pusha ret out je popa pushl xor popf sub push ficomp popa mov add loopne mov pop pop cld cmp jb je cli xor ficompl lret mov xchg les ja mov or aas push fisttp (bad) in in (bad) or jmp das dec (bad) ljmp or and pop add xor push gs xchg loope lret xor cli dec es add pop ror fnsave je cmpl mov sbb sub push loope ss push fcoml aaa sub sub test rolb imul (bad) jno scas xlat movsb mov sub sub in ret jne out call jne and pushf inc add add in or pop movb mov or cmp ficoml sahf daa sub push push xchg push or xlat mov (bad) sub dec sub or ret rorl mov push ja or in mov pop aaa xor stos stc sub scas jecxz and popf (bad) clc or daa cmpsl hlt mov cmp fnop jg push bound ja mov negb and mov xchg pop imul pop inc call test sti mov pop dec xlat lock mov pop inc or mov aam push push sbb add sarl fs repz push mov dec stc pop sti xor fbld aas test (bad) (bad) rcrb lods popf mov test and xchg xlat cmp data16 or scas xor adc mov mov push (bad) pop xor sti stos mov mov sub mov jmp je pop pop add xchg subl outsl test test loope cmp pop or xor mov stc dec jnp jmp or mul add add xchg ret test mov add and (bad) je sub (bad) hlt dec ret cmp push and idivl lret mov popf hlt mov sub xor aas cmpsl add lea add sbb ret int3 or xchg (bad) xchg sub pop out add xchg out das add push mov push insb jp movsb xchg inc lret adc sub mov in and adc pushf cld and cmp mov movb add cmc data16 mov pop call dec add xor mov inc adc xchg stc movsb push out dec leave dec mov push xchg pop les jnp aam mov adc cmp mov push push push test mov (bad) ss pop test (bad) jb ror (bad) dec out repnz repz cld mov fsts dec pop std and add aaa popf rcrl outsb std push add mov (bad) out dec les mov xchg sbb icebp sbb pop dec xor push fimul push sub movsb pop cld jmp orl sahf pop das cld and mov mov imull xchg xlat stos mov or adc cld pop mov in mov push mov dec mov mov and jg fdivl inc dec pop das xor cld sti push mov xchg cwtl es xchg pop xor cmp popf mov daa fistp jecxz (bad) pop test movsl (bad) shrb test dec cwtl mov jg sahf jo out xor pushf pop dec fwait add jecxz and sub popf sarb bound sub fbld xchg xchg xor or pushf add movsl add pop mov outsl clc ret nop outsb dec leave sbb or call mov adc mov out xor xchg lahf test lcall cwtl dec mov xchg lcall fucom push das jno movsl jno mov adc orl orl loope call scas sub add mov ljmp add (bad) mov mov mov push popa aaa adc repnz addr16 das loop fist push pushf xchg stos inc and cld pop pop loop test jnp mov and enter roll repz inc push or dec pop or and shl or sub mov dec mov test mov mov ds jmp inc repnz dec roll cli mov lds movsb les outsl and add ret ss jne test push mov mov (bad) mov jns je pop aad pop sub xor out fldcw sub fiadd push pusha or push mov cmp ja (bad) pop notb imul (bad) dec jno test (bad) pop inc mov mov lret scas mov mov notl out mov dec rcrb loop (bad) lea pop lds cmpsl out dec ret mov test mov outsb icebp dec icebp scas sub cs dec popf push outsl push stos pusha and xor mov lret or jno ds xchg mov std lcall jmp or xor xor repz adc addb mov jl mov dec cmp inc mov leave js decl test int3 and inc popf cmp (bad) jnp adc lods sbb std push lret sub into sbbl out push sbb rolb mov cmp adc lock adc sbb lods cmp (bad) and outsb (bad) loopne mov and adc and mov mov cs movsl cmp pop imul xor rclb sub mov mov popf push xor notb stc or fmull lret jmp mov xchg inc dec icebp cmpsl xchg pop std mov mov in fistpll adc (bad) (bad) mov (bad) and int3 dec fistpl lret sub add and mov sti cmp in inc xchg mov fmull int aad adc bound fistpl jl (bad) mov notb push dec inc add mov int3 add pop scas inc pop jl lret aas gs cmp pop daa loop push bound cli stos sbb jl enter mov into xchg push pop pop xor pop imulb pop xchg push test sbb push scas fstl add mov sub (bad) pop xor pushf jo lea pop mov mov ds adc push push lahf and hlt jbe mov popa xlat jb lds (bad) in adc movzbl push cmp lret add mov mov cmpsl imul and lock mov xchg adc loop mov aam ret rcll fstpt jmp ds dec repnz jnp adc fsubrl mov movsl daa repnz push pop push mov sbb dec lret xor jge loop mov addl repnz scas out push add in jnp (bad) sub sub and push xchg subb (bad) (bad) fs and jmp adc mov mov les xor and and or add push xchg push cmp (bad) push xchg inc adc aas mov imul cmp in sub xchg rcl cmp or add (bad) sub mov lcall popa gs in xor mov imul pop (bad) sub je or or fs mov dec in hlt push mov adc mulb or push xchg adc lds jmp popa adc in jnp stos xchg xchg adc or add pop mov push lcall mov jle leave stos repz pop imul sbb rcll pop mov add ljmp inc cld xlat mov aad pop dec push pop mov sahf sbb adc and cmpsl pop les dec or dec mov adc or xchg pop stos int mov inc inc test mov sbb cltd xor mov sub adc iret out xlat cmp cmp test and mov add movsl jmp push pop or xor ds xchg inc pop adc pop leave xor gs clc dec shlb lret or ds xor xor pop sub test and je cmp xor pop insb mov (bad) jl mov or and dec lea popf mov mov negl fadd add xor roll outsb ffree cmp lds frstor inc dec ljmp mov shrl cmp mov mov icebp fisub inc mov sub mov repz and lods mov and and in fstpl jge rorl imul iret push push out mov cmp mov data16 (bad) shll push dec mov call arpl cmc ret in (bad) imul cmpsl cli mov inc ja sbb jb sbb mov cmc idivl loop xchg enter lret cmpsb mov xlat inc dec lcall sub inc pop or loopne mov xlat in into (bad) bnd call jns dec cmp xor jle lret pop jo cmp testb lods mov and adc imul sbb mov or leave cmc inc int3 das js popf cmp enter inc out (bad) arpl das adc imul jmp shrb adc icebp insb or repz lahf (bad) cmp sbb ds jge push jmp pop dec (bad) es adc jbe xor gs lods push inc lret nop pop outsb daa std push jns adc sbb cmp in xor das fistp sar test add test stos mov adc sbb xchg mov repnz icebp jo out push push subb xor stc adc (bad) mov jge aas push icebp jge and sub xor push fsubr cli mov daa aad call xchg pop clc pusha jle xor stc inc dec mov or jb sub popf sub sti adc mov test xlat ja in data16 xchg jns inc sub insb fcoms mov sarl loopne repz daa fist into inc add fsubrl mov icebp movsl dec (bad) or lret adc pop push pop jmp sub in mov popa mov sbb scas sub mov in sbb pop xchg xor mov aas sub or ljmp and (bad) (bad) int3 mov call lds fxam cwtl jg pop cli mov ljmp fisttpll xor cs popf cld jae icebp add lret xor mov test jmp aas jge inc add mov (bad) pusha out jg add das cmp push imul sub out es scas les xchg jne pop xchg or dec cmpsl clc or cmp std outsl sbb jge add mov test (bad) test dec jmp jle mov repz or sti popf mov and repz fldl sub or loopew inc ss adc sti mov mov push or xchg jge xor xor shl addl mov xor imulb negl jnp cmp mov das adc or add jnp cwtl stc jns mov pop out scas int das aam sti mov leave loop jno jmp mov sbb imul mov jp in xchg cmp mov negb add jb data16 dec addr16 daa add jnp mov leave loop push adc (bad) dec and ss or scas fcomps out sub xchg out sbb sbb shrb adc in dec das in shll nop pop and xor cmp mov pushf mov mov xor cmpb fild xchg push xchg test adc xorb sub movl adc sbb or stos in cmp mov movzbl jge popf cmp hlt fs push popf mov cld mov cli push push push or mov (bad) fidiv cmc cmp ret ds push jbe pop imull test jo sub xor decb dec mov push lea (bad) mov sub iret and lret cmpsl aad enter out jp inc jmp divb inc cmp mov (bad) out pop test mov sub mov and shll jmp push fwait (bad) dec (bad) sub imul mov or aam jg (bad) roll fildll mov or aam xorl mov push xor fistpll push aaa push xchg (bad) add mov push cmp ret pop lahf adc xchg xchg divb add sub jg orb pop lcall inc (bad) popf lret lods sub push mull add xchg (bad) sub ds mov push hlt and out dec add cmp test mov call fs loopne mov push lret test scas push jnp data16 loop xchg out pop into dec and mov jo mov addb mov aam fstpt sub and mov push fisttpl push cmp or leave and rcll in add cmp movsl inc shll and xor outsb mov jg or and pop dec mov pop cld and fisttpll push imul mov inc xlat sarl dec js mov xchg or outsl push jo cmc mov adc lret xchg sbb mov flds ss inc (bad) scas popa loopne out mov inc or adc xor bound ret shrl mov (bad) push or test mov test cmp ljmp jmp lret push push imul and inc push xor add add sub aam push lret mov mov ret test pop outsb call mov aaa repnz lret les mov jns imul mov out mov and fsubrs ja stos jmp data16 cmpl mov insb jae das gs repz and pop jnp mov jg adc mov out dec sti sub andl into (bad) cmc jcxz loopne out sbb xchg jecxz (bad) and jg lahf push mov and (bad) dec lods rorb xor iret and or sbb aaa mov sub mov lds mov cs mov repz fcmovbe mull mov out pop aad lret mov xor jge ja mov jg fcomp dec mov push lret add mov out fsub pop push adc push cmp mov shrl inc (bad) cmp push out fdivrs sub mov and (bad) push and and fs mov push add jnp ljmp sub jbe or leave shrl fist cmp inc xorb (bad) or popa in incl jge sahf cmp clc pop (bad) mov jno inc shrl add mov xchg sub (bad) xor mov xlat adc shrb popf popa pop mov pop sub mov ret das aaa jo adc pop cld and mov sbb gs push aam sbb out pushf jae mov or xchg xor fnstcw fadd xor cld add ret (bad) push adc sti sub inc jmp data16 dec shr enter sbb xchg (bad) mov (bad) sub nop jnp adc lahf hlt lahf loop pop divl mov loop test repnz jno,pn mov jp flds pop mov mov stos mov cli push xor int jle js lock out or add cld cli jmp pop int3 add dec lret cltd aam aad mov inc cmpsb cmp int3 lret or pushf jo push clc addl das test call icebp and (bad) pop loop std xor xchg mov pop jp imul push pop mov lds movsl sti push sub and mov push add mov scas push loop pop sub adc (bad) jg inc (bad) or mov daa xchg inc lcall daa add in xor in cs rcrb jmp dec cwtl (bad) xor clc (bad) mov mov out call mov sub sbb mov add negb sti mov cmp xlat xlat pop js cld test jmp lds adc inc mov lahf inc fist mov fsubr mov int3 xchg jecxz into xchg fldt add or fidivl mov scas (bad) push (bad) out dec test test mov and xchg shrl cmp sub das cmp rcrb outsl daa mov xor (bad) push (bad) mov and pop fsubp lds rep js clc inc out xor outsb lds sub jae decb xchg xor rcrl pop jmp out dec adc out les dec jmp or push out add mov cmp push dec pop icebp pop int3 loopne test repnz xchg adc lahf xchg pop shrl mov icebp xor push or repz xor (bad) fstpl lea ss leave js outsb ret rolb sub adc xor sub mov repz in and inc pop mov stc into repz into aas pop outsl sarl mov pop dec jns xor ljmp call cld out add scas mov or iret lods adc mov roll pop mov jne fnsave adc dec or and sub out lods out mov nop dec sbb jb sarl mov enter adc rorl lea ftst das add icebp and mov cmpsb cmp test or and ret cmp lods rcrb jp das fistp mov sub xor loope add (bad) xor inc aad jecxz or (bad) stos divl ja adc sub mov cmpsb sub xlat fiaddl test add or fdivrs out xchg fstl ljmp mov lret xchg stos imul cwtl leave sub mov notl negl pop int inc in sarl testb dec ret rorl add mov scas into out adc sti push shr xor outsb xor and xor mov gs cmp or je xor shl addr16 dec push cmc rorb notb add mov test sbb push icebp sub xor mov jge push or cltd dec jnp mov popf add ljmp jno xchg call mul std cld roll add jl push xchg jbe adc jo mov std or in inc xchg mov sub outsl repz fcmovb pop pop cmpsl or je mov and pop out mov xchg mov pmaxsw ret dec test dec sbb popa cmc in push pop mov movq or adc xor out daa push addr16 jnp ja cwtl mov mov hlt mov imulb je pop (bad) xor shlb lret lcall fldt out sub test outsb (bad) cli and and sar xchg loop and jg xor xchg dec sub daa outsb sub daa push xchg pop push cld inc das call sub clc cmp pop add xchg pop xor and lock daa xor fdivl mov mov int3 mov leave mov fnsave fs mov xchg icebp pop out cli lret mov xlat and push ss add xchg push (bad) sbbb daa js daa xor jnp xchg popl sub and data16 mov sti sub push sti lret dec dec mov xor lcall mov outsb scas jno wbinvd or dec negl int3 dec stos jb or adc ds (bad) lret jecxz stos push inc fldenv fimul stos sub sub iret jg sbb ja test or fs in mov pop sbb xchg xchg (bad) mov (bad) out repnz push (bad) out xchg lock stos mov pop je jmp pushf lret fcompl sbb mov fcom mov cmp out xchg fisub xor aas fs fildl inc test mov dec test loope cmpb mov (bad) into cmp lds cli xchg cld gs xor and rcl cmp jl and divl outsb sti sub ret test cli jecxz sbb sahf addb jp or mov rol cmp ljmp shl pop xchg das mov clc and (bad) mov pop aad inc xchg shll test inc push aad out jecxz rolb lcall and stos push (bad) push push (bad) or or push jns bound ret jl push xchg jge cmp jmp (bad) lods inc mov insl sub add or out flds xchg sbb pop pop cltd bound ret mov or cmc xchg insb test push pusha pop je imul mov jl or stos jne mov movsl clc test lods sbb pop ds adc add je mov jge outsb mov pop cmpsb lods mov mov loope mov mov inc (bad) lds sbb (bad) pop push (bad) mov and loope mov inc jae jmp adc adc or stos int and sahf and (bad) xor out call (bad) lds mov xor (bad) jne (bad) mov adc xchg insb cmp xchg xor xchg or add cmp call fidivl fiadd ds je repnz dec dec mulb dec pop pop jno and (bad) adc jae sub push mov bnd sub mov or das sub push push inc push adc dec add aas pop lret pop mov push inc jg cmp bsf dec jecxz or ret adc ljmp ret pop rcrb jecxz lret xchg rcl jne inc daa jmp push pop push jmp pop cmp fimul and rol (bad) lret gs mov mov mov mov lcall xor lret pop jne ds daa (bad) aam leave fbstp movsl into xchg idivl xor lods popa leave or pop stc (bad) (bad) mull fdivp push iret inc pop sub pop xchg scas hlt ja ficom inc sub add mov dec lcall add out add lret inc and pop or sar enter mov cld or (bad) out pop dec mov jmp es jp mov and gs sub xor (bad) cmp lds add cmp js jmp jnp aam imul mov icebp pop scas loop aad adc add pop inc dec adc cli popf fs pushf lock sbb mov nop or ficoml mov lea mov inc (bad) repnz mov push push movsl mov push inc add xchg xchg and ret push push cmc les frstor out nop testl stc mov add lds xor cmc xor fimull pop fcmovnbe mov push and jle insb in das mov icebp int out cmp sub sti test mull pop xchg ljmp (bad) and mov inc mov imull testb ljmp aad pop mov scas insb jb sub xchg add pop fimull push stos dec lret mov xchg mov mov lea xchg aas xchg mov inc aad bound test into out sub mov vmovddup pop scas adc sarl or std call cmp scas xor imull xlat xchg or mov cli stos dec lret repnz xchg test repz clc shld pop xor aas out inc cs dec and mov pop hlt cmp pop mov repnz rol fucomp push push mov mov jp mov dec and stos xchg xor push push das fmuls mov aaa je jmp dec dec pushf inc or popf in mov or mov fdivl inc (bad) or adc and or mov add dec pop daa sub dec aaa mov hlt dec cmp mov ret and cmp rcll xchg lods mov sub rcl (bad) lds outsl mov pushf mov (bad) out imul jge mov aad inc add mov dec sar loop mov pop adc xor dec or popa jnp cmc sub or dec iret mov jl jmp icebp push out test push mov setae js cs add or stos mov pop (bad) std and and ljmp cmpsl push adc push mov addb fbstp inc pop cmp pushf mov fistp or adc ret dec out imul cmc in lahf jbe pop or stos stc daa mov (bad) push or mov cmpsb cs int3 iret iret xchg jne push lock xchg push sbb cmpsb stos pop sbb aad pop (bad) lcall xchg movb lret mov xchg jmp cs sbb or into jne xchg lcall dec (bad) mov das (bad) push and mov movsb leave ret movsl jns inc lret mov add dec dec and iret cs mov enter or sub mov out call or jge and inc mov in test xlat xchg and into out repnz leave sar or and fidivr daa push in sub popa fiaddl pop cmp (bad) jmp xor mov adc out fdivrs divb mov das and cwtl sbb repnz pop in jnp mov stc repz hlt notl xchg sbb imul push fldt push sub (bad) popf xchg cmpsl mov (bad) push scas dec inc leave into (bad) sub iret cli lea clc ljmp pop and lock jmp popa loope punpckldq pxor mov jg xchg xchg ret add mov inc or aad or popf pushf stc data16 seta add add idiv arpl jae stos sub mov dec int3 lcall aad (bad) cmp or test fist ljmp addl sub fsubrp cli xchg sub shlb jmp and (bad) sbb test iret aas jbe jp fwait inc inc jecxz enter or pop addr16 scas mov out rcll cmp dec mov outsb mov dec mov (bad) xchg mov sub mov sahf pop out mov bound inc ret movsl int3 dec pop lret js lods push popa daa mov idivb mov inc adc test gs add loop xchg out mov cmp jge loop push push and loope call or push push mov pop jns cs lret xor push adc pop bound (bad) dec lds pop adc mov nop ljmp int jns ficoml out pop test mov loop push in out add (bad) in lret movsl push gs cltd out idivl icebp fisub fistpll jne inc xchg je or and andb (bad) hlt mov or loope (bad) (bad) jmp dec outsb mov das dec aad cld lret sbb lock mov loopne stc mov iret ljmp xor sti add aaa jg das idivl xchg push in (bad) pop adc ljmp xchg mov sub std int3 and xchg adc and and mov xor daa (bad) mov lods cmpsb mov mov cmp mov leave sub insb sub cmp pop sti js xor add jge mov xor dec out nop (bad) scas pushf and add mov outsl or sbb repnz dec shlb rcll rorb (bad) jb pop (bad) adc mov sub rclb cmp data16 sbb pop adc mov clc cmp pushf dec mov popf (bad) imul mull mov xchg xchg ret mov fisttp repz sub scas adc add or daa aad pop movsl (bad) xlat ljmp iret frstor pushf bound out jb sub dec out pop jecxz lret push pop inc (bad) iret aam movsl fucomip insb mov dec mulb daa (bad) mov add adc cld ret push clc push and xchg sbb fstpl std in mov fwait sahf sub mov iret (bad) int3 add or pop in lods push sub sar insb xor or leave shll (bad) (bad) mov std push rolb repz pop (bad) imulb shrl movsb cmp es icebp ret jne fildll push lret sbb icebp xchg xor pop sbb (bad) mov bound pop or cltd sbb aas loope sub stc add lods pop call ss (bad) jae sub cld pushf (bad) into xor fimul decb xor mov ret sub mov xor in add sub pushf mov daa and icebp adc push jno and xor jb cmc test ds mov (bad) add test mov jne cvtps2pi xchg lahf (bad) xchg icebp mov jne push xor adc jne push mov or mov xchg xor lock sti sub cwtl scas arpl cs adc push sub adc daa pop lahf jle es mov jno dec push outsb cmpsb pushf stos cmpsl icebp mov nop scas clc xor dec das rolb dec dec jo mov cs xor sahf repz xchg or fnop sub and and popa and (bad) test das jecxz ljmp dec je lret sti cltd aaa xchg sbb scas xor rcl adcb sub cli jne mov inc cmpsl jge sub (bad) in pop fldcw xchg and mov sub mov inc lret xchg div sbb aam jmp or jl test xor lods jecxz repz mov mov leave (bad) push lock out jno pusha or mov loopne js sub fdivs dec (bad) sti int das loope cmp cmp out fisttp cmp std xor mov addr16 gs mov (bad) mov insl aad and arpl (bad) cmp pop mov push lcall pop sbb add div adc dec out lods mov fdivl sbb or test cmp sub push out cmp push lret pop pop ret add add mov (bad) fldcw add or xor negl push mov inc lret fprem daa or dec outsl idivb adc xchg mov lcall cmp pop stc lds arpl dec lret mov pop cmpsl fbstp aaa fldt xor sub xchg rcrl and xor mov das leave fnsave sti ror lret cmp fnsave and out and xor and and mov notb push dec shrb lods rorl sub push add imul cli sub or sub ret adc test (bad) call cli sub popf in movsl jl lret rclb fbld pop cmp ljmp add push ja pop repnz push insb inc xchg inc cmc ret push movsl shrb nop pop pushf or (bad) push mov or pop inc out sub insb cmpsl imul out and adc mov mov (bad) je or or dec into pop cli fadds xlat in mov dec iret scas lret mov lods dec int3 rorl push das xor mov movsl mov mov inc inc jno sarb mov cmp sub test add fwait sub imul sub mov and mov pop mov xor xlat and pop mov in pusha (bad) and xor sub mov jl push adcb es jns jecxz,pn pop xchg xor push imul popf (bad) das leave inc int sub mov cmp ja popf inc and jecxz mov movl adc dec pop iret xchg fsubrl push mov out lret test repnz inc dec inc or adc mov outsb js cwtl movsl jl xchg pop sub mov lods std rcll fidivrl pop pushl jecxz fldcw into adc sbb cmp (bad) addr16 scas sahf pop sarl out pop mov roll or test and mov xor int adc sub push sub out clc dec and mov cmpb fldcw into cwtl sbb mov mov xor icebp out cltd loope test ror cmc xor sbb lret pop sub mov jp loope and jl xchg aaa xor sub mov sti sbb inc add jno scas mov (bad) je stc add test mov xor imul dec outsb cli mov lret out movaps pop pop testl jg dec (bad) fild lret fcoms mov pop fsubr jmp nop jno xor repnz shll xlat gs and mov lret xchg dec outsl dec cmpsb enter subb or out xchg frstor scas out sahf add mov (bad) mov lock shll daa and inc repz scas jns mov icebp jo dec rorl xlat clc js stos enter (bad) push pop dec movsb loope jmp push pop jne stos and add pop mov jmp or pop cmc (bad) adc (bad) jbe pop xchg sub push sub xlat pop paddsb shrl aas jbe push popf shrl mov lods jne jmp mov testb add cmp xor out fistl (bad) jne aas lods mov popf pop xor pushl stos mov (bad) lret les lcall cli mov (bad) cmc sub repz cli insl add jns jb scas sub or add ja fcomps cmp out jne out cmp notb xor lahf mov jl sub or stc icebp (bad) jmp jno nop cmp stos push or xlat or mov hlt ljmp sub popf xor je rcll loopne repz jns bound push js mov xchg cmc xor fwait sbb clc dec pop jmp enter xchg stos cwtl stos sub and add and fdivrl add add lds lret xchg xor hlt int3 push popf or ds xor pop lret add push arpl mov push bound and fucomp sbb data16 xor cwtl push xchg fnsave push sub jb movaps mov pop fisubrl push aad adc repnz test cmp movsb mov inc jmp xchg add das xor int3 pushf push ss aad and cmp sbb (bad) mov loope sbb mov outsl xchg pop jmp aad dec jmp xor mov sti sahf xchg dec fildll out inc pop test movsl add decl pop push adc or popf (bad) lods jmp data16 (bad) mov decl mov std (bad) ffree xchg pop and or xchg scas cmpsl andl dec sbbl and cltd inc inc add ja divb add mov mov fdecstp cltd (bad) into stos xor mov cs xor inc xchg int and add or (bad) mov xor xor ja push or and adc loope roll dec dec mov (bad) xchg push popa (bad) push icebp (bad) sub fsubrl xor lods jle testl mov dec mov xor bound repz jnp js sahf and jmp pop rcll cmpsl mov or inc ficomp add aas xchg (bad) xor lret mov mov and adc mov cmp push inc pop mov sub leave jne push xchg mov xor leave xlat jns in out lds mov test push cmp fildll lret fs and pushl pushf xor sub imul mov imul add mov or sub hlt hlt out out insb (bad) test enter sub test (bad) and add je and or push cs outsl fmull or lret ljmp add jae xchg rorl into adc cmpsl and xor jb sub aad andb push rcll daa repz pushf pop je push xor cmp stos sub xchg cmp test dec in lahf shr mov in jg lods clc imul mov scas lret adc sub scas or stc rcrb dec lret xchg inc cmp cld test jmp ljmp ljmp ljmp (bad) out sub dec mov in and je cltd sub rcrb xchg pushl and ja and daa add xor and jmp mov cmp and xor add negl sub add xchg push jb add sub lods in dec pop (bad) xchg mov inc xchg adc mov out dec mov add add movsb push push pop sbb mov inc and inc push pop test loop dec stc stc or mov push inc scas jge cli pop inc imulb mov sbb vmovddup jbe scas lea sub jbe lret jp sbbb mov ficom aaa test push mov ja leave pop aas (bad) dec jb push and xor movl jnp mov inc pop mov jge xor pop and mov mov jmp fld ret aam push mov push sbb jg test add es in test adc cli popf push fmul jg jg mov mov sub push xor mov out sub bound jns push icebp pop popa mov in es mov sub fs ljmp xlat inc (bad) (bad) lods push jmp and adc mov and mov mov mov sub cld adc pop fs adc lds jmp or bound cmp (bad) push add lcall xchg loop push pushf jecxz jns ret addr16 fldcw cmp mov sub out and push or xlat jo jmp cmp stos jno and mov push std ret jae or cmpb sarb dec insb ds out cmpsb mov call push daa jbe adc pop dec mov jl add and out mov out adc xor mov outsl mov das ss and dec in mov aas sti sub stos jp cmp cs dec push into adc inc sub mov jge mov bound mov scas inc (bad) mulb xor or mov fbstp fs lcall popf in sub sub outsl pushf je xchg jl push or push clc in loope dec push daa xchg movb add roll icebp jmp push dec call jno test or stos xor sbb lea fsubs movb aam lret (bad) (bad) push pop pop shll mov or in xchg (bad) push pop std lods notl pushf sahf bound fisubrl mov jnp adc cwtl je lods jecxz dec stc cmp xor das into insb sub out lret jecxz lods (bad) xchg stos push (bad) stos cwtl lds (bad) push (bad) daa repnz dec add pop test mov dec cmovne (bad) lret jl jno cs (bad) xor mov push inc vphaddbw inc stc fimull gs jne daa adc add aam ret popf sub adc lods (bad) fcoml and jp or mov xchg bound or (bad) sbb enter mov gs mov xor adc jg mov cmpsb inc xor test mov enter iret push stc mov xor jno adc scas fs insb gs inc lahf mov dec in or shrl dec clc lcall pop push pop push stos les add push mov das add pop add (bad) and jnp jp fs mov sbb adc out bndldx add or jb ds add rclb orl mov enter orb inc jg scas aaa aaa pop sub or fstl fmuls aad jle dec inc addr16 (bad) sti jge shlb out not mov and or xchg popf jne mov out pop (bad) or int loop xor out ret ja pop shr sbb mov aad pop push sbb arpl mov inc out aaa sahf and dec add mov (bad) fistp mov xor add test (bad) hlt add outsl mov ljmp push mov fdivl xchg sub dec add add ljmp incl or rolb call cmp repnz mov mov pop ljmp out std lcall add inc cltd call out jne xchg icebp lods decb inc push test push xor add pop cwtl sbb xchg lock jg push dec pop pop int3 icebp sti xchg (bad) pop cs roll cmp xchg sub jge add sbb mov mov out mov or popf lcall mov repnz div pop arpl imul das stc jnp lret pop push andl test lcall fisttpll jbe sbb outsl out jae das sub ja mov xor mov xor cs ds or and icebp push adc lret add sbb (bad) jb add cmp xor fcompl nop jb fistpll dec insl push js and add pop and pop sub cmp or je fs int imul jno ficompl cmp movsl xor inc sub jnp and bound movsl push sbb js mov xor loop cmp movsb cli fmuls or mov add sub add adc xor and sub sub sub rcl mov dec lret jecxz movq das inc xchg jge bnd add xchg xchg fldt iret push das test (bad) stos dec test adc mov or lret inc inc sub push mov lret out jae sub xchg push loope jmp fidivl mov jae clc bound mov adc out or push sti (bad) jno movsl fdivrs out jne jmp mov pop inc inc sbb mov fidivr mov push (bad) xor cli sbb (bad) lock sbb ret daa test and xchg push xchg fwait and das loope xchg push popf in xchg pop and push popf ret cmpsl cs sahf test shrl mov out cmp in or xor movsb das pop xlat xchg push adc stos sub add out pop mov cmp fnclex mov mov (bad) in aad adc push cmp cmp inc fild mov arpl (bad) fmull loope jle enter or mov add mov fcompl icebp out cmp adc or mov push sub (bad) xor mov mov pop out fldenv mov lds sbb mov (bad) imul les and fsubl adc pop xchg fwait mov std and js movsb xchg mov mov ja aam or ljmp testb xor or mov or mov sub jb (bad) iret (bad) out std gs mov arpl and call jg nop imul out test sbb jns jmp jne (bad) loopne incb sbb fisttpll (bad) flds cmpsb dec stos push jle sbb data16 add (bad) dec in sbb adc mov mov dec cmp jl call fild in lds test sub lods ret rep and out and ds mov dec bound cmp mov leave mov fidivr mov mov popf fisubl pop mov cmp sub dec mov fistp pop cmc mov popa imulb add in add fs stc arpl adc cwtl test cmp sub shl inc repnz push dec lahf (bad) popf jmp sbb (bad) out ss sti cmp jecxz jmp mov cltd mov add cmp enter add sub sub cli sub or mov enter dec in mov push jbe xor cmp not bound mov push cmp xor icebp je popa jmp repnz leave clc pushf sub icebp mov leave jno or cmp adc mov cwtl add jae cmpsb push nop negb es pop xchg sarl aam imul lret out xor mov inc and rcll add ss lahf adc andb mov rcrl iret or add cli mov add xlat xchg stc pop push in imul add lods andb fisubrl movsl imul (bad) push mov jae popa lock je pushf add or mov shrb jmp insl lret mov int3 lahf movlps mov (bad) mov or xor adc and xor and add aas (bad) xchg (bad) jno fisub gs leave xchg jle mov xor lock mov jp add mov mov mov imul mov and xlat pop and xchg pop pop sbb pop jo lret es into and jb push rorl adc fimull ljmp ljmp mov cmc into in push mov shr add adc incl faddp xchg pop push xchg and pop xor jns int pop lock sbb negl adc mov mov cmpsl cmp mov jmp cltd pop xor push push mov and mov add pop inc andl mov pop sbb fnstsw ds (bad) pop sub adc lock adc push es (bad) dec stos roll mov test push and jbe add mov pop notl add lock push mov in adc (bad) xchg test dec jnp inc rcrl clc jle not into out lret push add inc adc inc fcos cmpb (bad) or shl push pop cwtl js aad pushf (bad) xor fst mov push stos dec pusha inc or pop adc pop pop pop mov pusha into xor insl push push pushl xor pop out leave lds pop push lret push pop icebp icebp inc cmp loope call leave roll fucomp in sbb fstl cmp mov add xchg sti adc mov sbb jmp xor in add mov add or pop out cld fisub adc mov or out mov mov cmp out pop xchg pop or flds icebp pop push test push jge inc (bad) negl fs mov stos (bad) loopne (bad) aas add pop popf inc jp or lahf pop and (bad) jne jmp sub and dec sti or jb dec cmpb push pushf cmp pop std add mull sbb xlat lret (bad) adc adc out jb add mov fnstenv (bad) or icebp xchg cmc sbb sub mov xchg repnz jns and stc adc mov xchg mov or pop sbb xor bnd (bad) mov icebp or das popf mov sahf (bad) outsl lods mov lret adc sbb jmp test pop idivb pop testl out inc popa dec lock shr push add mov xor mov cmpsb pop pop jecxz dec mov mov popf dec mov out shlb test sar xor pop pop push (bad) mov or xchg or into adc mov js pop (bad) int outsl aam in icebp sub ja xor xorl sbb push cmpb imul scas movsb das or test ljmp mov fs and dec das (bad) fcmovnb sub pop cli pop jo xor xor xor lret (bad) mov (bad) sarl pop data16 xor out in and cmp xchg jbe mov and scas sub repz xor push loopne add cld ret xchg xlat cmp fistpl mov jae nop (bad) leave pop lods (bad) leave decl fcmovnb and out je mov sub adc xchg or outsb bound dec icebp fnstcw lods add jmp mov push rcrl sub fs sahf iret push ror jg cmp in and js adc jo fisubr mov pop dec xchg in and cwtl xchg popf cltd testb push jns cmpsl imull hlt inc fisubl sub xlat mov sbb inc mov xlat stos aam (bad) out dec and mov xor push dec jecxz add ljmp jecxz push cmpsl xchg jl stos dec hlt scas bound add in xchg xchg xchg cmp sbb mov mov popa and pop jle cmpsl pop pushf addr16 mov ljmp out adc xchg fnsave cwtl shrl mov ret xchg push nop dec aam pop sarb lods scas sar sahf xchg push dec lret mov js fist out xor jecxz inc mov mov lds or sti repz roll jle adc ffreep rcrl movsb lock pop jmp sbbb cmpsb jno sub loop scas sub xchg fcom mov mov inc xlat jmp pop fisttp rcrl out push cmp and sub add mov loop mov inc sub jne cli pop loope cmp pop inc sub aaa fiaddl pop in jo cs and addr16 mov loope shl leave add push xchg scas dec sahf out jmp in popf xor movsb popf divl decb data16 repnz lret add loop jne mov or add rcrb dec xor insb cmp cmpsl nop sub cmp bound dec xor test sbb mov jns lods jp mov rclb mov adc scas aaa loope fstpl cmp mov jle lret mov das jmp repz pop mov adc rcrb outsb cmp cmp dec dec jns mov js mov push insb and hlt lds out pop jecxz das stc sbb cmp jo ret cli cltd mov and ret push sbb pop cmp xlat sti inc dec pushf and cmc fldenv cmc stc leave dec test negl dec cld adc jmp loopne out gs lcall fidivr cmpsl divl je leave mov or mov fs xlat je cmp ror dec data16 mov icebp das in js cwtl push dec sahf out movsl push pop jno leave loop pop sbb xlat pushf shrb xor dec push scas les movsl xchg or or popf xchg or outsb (bad) mov mov in hlt movsl push sar mov lds (bad) movb and (bad) or dec or daa xlat int3 aad mov outsl push sarb popf push mov add and add rcrl pop add add sub in scas leave (bad) loop xor sub add xlat mov sub fmuls or dec fnsave or pushf data16 jae jns sub cmp jo push pop xchg or inc sahf sub aaa pop cltd cmpsl or rorb shll insb dec sbb lods icebp mov sarb les and lret repz in daa sbb insb (bad) mov daa std mov mov (bad) repnz pop push cmp stc cmp jmp inc pop dec into mov sbb add je ljmp popf (bad) inc mov sub mov jns dec js jle lods jecxz jle fs mov sbb scas push sub mov rorb lods mov adc and push dec ds lret int3 sar mov rclb sbb sub lret shrl mov jb,pt mov jnp xchg icebp sti mov adc sub idivb inc jnp loope and je pusha adc xchg cwtl loop add aad inc mov imul fidiv mov sub cmpsl and mov jle and mov add jbe js ljmp test mov mov mov popa xchg das repz shrl jmp fstpl cmp cs pusha and inc push mov test xchg adc call or mov lods inc (bad) enter or xchg cmpsl push mov xchg sahf cmpsl push push scas push xchg push dec ret rol sub mov jo dec fildll stos mov call imull popf outsb cmp mov (bad) mov loop lahf jne inc loop and repnz sub mov xor xchg lock push and test pop push pop adc out jnp mov pop movsb push movsl jle leave push sbb or pop pop out mov jg push js cmp jb jns icebp in jge and test xchg xchg js add dec xor xchg xor jge pushf push mov repz sbb sub dec loop adc (bad) adc mov iret adc push rep ja jmp mov jns sub or data16 add cmp jmp movsb cli pop mov dec inc out pop stc outsl dec sbb inc mov mov xchg cmc cmp movsb cmp negb lret push cmp pop sub pop sub jecxz cmp into loop pop xchg mov (bad) mov pop in insb lret div test adc mov test out mov or mov xor push fnsave mov in sti mov dec mov pop gs and cwtl (bad) sub inc mov in (bad) dec pushl lahf xchg out dec pop mov adc pop (bad) out sub or fbld add jmp xlat mov gs lock mov dec js stos cs xor mov mov cmpsb das jae pop data16 jmp fistpll iret in gs mov mov or fs fcmovnu cwtl jns xor iret sub stos cmp inc sbb xor shrl bound icebp pop lds (bad) jne out push aas jbe cli sub mov icebp leave xlat outsb mov sub jmp insb pop test dec pop notb and mov mov mull (bad) push ja ficoml (bad) imul pushf or jp dec pop data16 xchg aam rorl jmp mov outsb add icebp or cmp cli lcall cmc addr16 xor (bad) je mov inc xchg dec mov ret testb add test fidiv xchg jecxz mov push stos xchg int bound sub aas push xchg adc cld push repz gs fimull clc mov dec clc and popf je call enter jae xor jnp aas cmpsl div mov leave cmpsl push clc loopne mov (bad) popf pop xchg adc push (bad) lret insb ret jnp sahf imul mov sub stos jmp hlt ret pop pop jl inc incl dec cmp sbb cwtl xchg mov and les mov int3 add bnd mov or sti inc adc lock xor out mov jle adc or out (bad) out jmp mov icebp decb icebp push lods pop mov loope (bad) lods jb mov pop xchg jne mulps movsl jne or clc or mov daa add ljmp das add repnz pop push fldenv and out sub push jmp mov pop jo lahf xchg mov ds ret inc push daa call cmp and mov mov fmul mov sbb bnd jmp lds les push (bad) sub ja jae fisttp mov lret xlat push sub out pop icebp mov daa pop and lock mov cmpsb ss push (bad) das sub leave test sub or ja hlt (bad) xor or mov pop push sti pusha nop push mov push push ds xor sub aam addr16 xchg jne mov sub pop mov jnp int movsl adc pop jno fildll jle sbb jnp int cwtl and mov leave dec notl dec bnd xor pop jg add outsb (bad) aas add push add shr push inc fiaddl dec outsl and ljmp shr inc dec add or in xchg pop stos ret jecxz jecxz mov aas adc inc sahf ret jo das add loopne push add not add add mov cs xchg fistp push mov xor jl popa stc mov push arpl sub cmp pop mov outsl add fidivl push add xchg mov rcrb mov pop jp scas add pop jg pop movsl ja sar push nop sub push in dec not aam adc sahf mov lds rcr xchg in add incl mov bound sar shl add adc in jle cmpsl ja stos add clc pop mov sub pop nop int jge mov push and ja inc rol idivl push pop addl push in sub pop or leave sub push adc ljmp test adc out mov movsl jno or cs sub rorl clc add insl push jnp imul adc or pop mov mov dec push clc xchg out mov outsb sbb stc ret addl cmp daa push add repnz or cmc inc add and stos add pop popf adc or pop roll scas incl xlat fs mov insb push inc adc jp jmp sub lret aas mov and daa sub or push mov or pop fisubrl (bad) mov xor adc mov inc into roll pop mov xor and jge add xchg jp adc jl stos push mov adc outsb mov shr push or or into lods mov inc jo pop xchg push cmp sub sbb adc mov pop mov mov iret das dec leave iret jl push push cmp std loop push push mov imulb mov adc out xor in dec fucomip xor inc into ljmp and or mov das stos sub sub sbb into leave aad enter bnd push mov mov xchg pop ss jge inc cmp cmc xchg imul jno adc std push test sub mov sub (bad) jne xlat jg jns imul test into sub gs mov xchg xor pop push and jle xchg imul cmp mov pop inc dec repnz xor lods pop idivl std cmc pop fcoml je pop dec xor lret add pop nop (bad) xchg js in mull xchg dec push xor or mov sub daa iret jl push fsubl push adc dec mov inc ret fmull imul fistl and pop mov and out leave (bad) ffreep ljmp shll ss jg jne xor fistpll or add repz and shrb push xchg pop adc rorl cmp jo int3 daa add pop mov iret mov inc das xchg imul fwait rcr pop cli fs mov mov sub jne jmp or mov test sbbl mov das shld dec test and xor jo into adc test (bad) (bad) gs out imul sbb or das mov ret xlat out xchg mov int3 or cmp data16 dec cli add aaa imul mov sub shl push mov test dec shr fs sti lea jo (bad) ljmp (bad) sub pop cmp adc inc je or fs daa pop mov add mov mov push cmp xchg js sbb adc jg notl pop (bad) dec push mov lds xorb xlat jmp daa sub into rcll push jle insb outsl enter adc mov gs dec mov inc repz xchg sub out in inc adc push ljmp push add sti cltd aas jnp push jnp jno arpl mov pushf mov xchg jg pop xchg mov xor (bad) jo ret cmp outsl das ljmp and add pop out in pop notb push popf inc sbb jne jbe in data16 mov cmpsl out das mov xor push dec ljmp and jl pop pop xor (bad) sub jmp pop mov xor lea xor cli cmp sub addl xor repnz xchg clc sub push cltd iret mov xor daa pop sub imul out inc sbb cli sub and sbb aas dec and dec pop jno dec jo xchg out mov fcmovnu cwtl add je pop jmp fisub test pop add mov adc andb mov pop add ss dec (bad) xor sbb sub movsl and iret inc mov cmc sub in jmp idivl loop inc mov jno imul iret insl in cli fmuls stos inc (bad) lret fdivl adc inc mov or enter mov inc xor std xor sub push scas push or xchg pop imul push push fwait push cmc lds mov ja push and mov xchg cmp and or xor daa sub ret push xchg inc popf pop or jo xchg inc pop es push outsb adc sarb ljmp (bad) mov push mov cld (bad) lods push sub xchg fdivr leave les push (bad) lret nop dec inc dec repnz mov fs int3 adc fucomi (bad) stc cmp out out fidivr push enter dec (bad) jmp push test xchg scas jno sub aas int3 test dec mov ret les enter sub and clc or mov js sarb mov cmpsb push inc daa sub mov out das sub sub push pusha jl ja pop sub mov jmp xchg jbe sub mov lods leave jns lods stc flds add movsl (bad) ss mov ficomp (bad) jb or iret mov pop sub pop in imul stc in out xlat sahf jne jo add jg xor add mov ficompl and xchg lret push ret scas adc lret mov adc stc scas mov sub sub test mov (bad) gs out subl aam scas sub neg ljmp inc aas sub (bad) insl ret xchg sbb imull je xor (bad) rcr add negb mov push int3 scas mov mov sub xrelease add mov repz sub jne jl leave mov add jne fist xor (bad) dec pop loop shrl int3 dec xor roll lcall sub mov inc rcll (bad) sub or rclb mov xor test push or mov inc lock mov scas pop pop mov sub jg push or xor es sub jmp clc les jl lahf xchg sar sub add repz icebp jp (bad) adc mov lcall std shrl sub in mov icebp std pop jecxz xchg lret adc add push jl dec xrelease jno sbb (bad) mov xor test pop out clc lahf into pop dec out cli sarb mov mov idiv xor and inc and outsb mov inc fnstcw outsl pop scas or and or push mov sub xor pop mov test das xor popf das pushf imull lret pop rcrb push add dec sbb fwait pop push mov jp add mov pop add lahf mov cmp fmuls (bad) out jle out or or xor push or stc lods (bad) mov int add sbb es dec (bad) xor sub mov push jp cmp and add in add adc ds (bad) xor xor xor and movsl clc push or adc fwait push dec jo jmp pop cld adc cmc jg sub add pop mov (bad) je xlat xchg jnp jo sub and mov push pop pop push (bad) xor enter loope (bad) sbb pop movsb pop add push mov imull add add aam mov pop mov dec adc imul and dec or outsb xor icebp ret cli mov lcall push daa push add jne sbb lods fistpl xor xlat adc or add xor mov (bad) mov xchg adc lds pop add and push aas pop iret stos lret sbb out xor jnp xchg dec repnz xchg mov inc add dec push sub sar inc out xor mov jb aad push or jbe xor xchg add lods xchg jae frstor movsb out xor fs pop xor sub pop push fcompp pop inc scas sub jg std lret adc dec mov xor in pop and or and pop jp stc (bad) dec xor (bad) xor pop xor or es testl das dec or cmc pop mov int xor sub jle xlat lock pop (bad) sub or test sub ja lock daa jb pop cmpsl add loop subb xor cvtps2pi cmp jecxz cltd pop or add or jns ja insl sub lret ret jnp imul int3 pop (bad) mov push pop out idivl and gs jecxz xlat dec clc fmul (bad) ja mov mov icebp jmp pop pop sbb out xchg js mov sbb xor mov mov call cmp neg sub rcrl push stos das mov push push mov out scas cs repnz js loope sub pop pop lret enter aaa cmp negb bound movsl mov popa push sub movsb mov inc add xor aad add rol adc add pop push stos sub js jp roll bound jg pop jge jbe jle insl push sub negl cmp scas pusha mov push push mov cwtl popa popf rcrb (bad) adc add inc xor and cli subb xchg jns mov (bad) dec ljmp add sbb fcoms pop call dec clc push movsl sub mov mov sub cld repz repnz push popf pop xor xor mov cs (bad) jbe (bad) out pop repnz lahf jl dec inc fldl2t bound movsl pushl adc ds pop inc lret aad xor mov loopne or xor out es ljmp ror mov adc push (bad) sub out xor push loop push mov push mov stos sbb popa pushl sub sub (bad) fld imul mov inc and (bad) and clc mov lds lods (bad) bound pop push jle and mov scas out push pop pop xor je push fbld mov shr je aad sti (bad) jmp mov daa cmc mov pop jbe dec xlat movsl xlat add into out cmpsl ret sub cmp cmp icebp sub jp sbb das (bad) (bad) jg sub and sub xor (bad) cltd ljmp push out in sti mov das sub mov (bad) mov push sbb shrb sbb daa inc add sub ds dec js xchg sbb and adc lret movl xchg inc cmc outsb sub ret je outsl or inc xor push ja jo sub cld add jne sub mov dec test inc mov jl push ss pop shl dec mov add repnz mov hlt enter xor push loopne dec stos cmp (bad) and inc test repz bound jne or pop cmp imulb pop adc pop jmp loop cs jmp lods dec mov and sti int3 bound (bad) mov faddp cmp or fwait scas es out jb test lds xchg fstpt pop or sarb xor fisubr inc sahf (bad) negl dec pop or repnz fstpt jbe ret popf add movsl movsb mov and sub (bad) notb in xchg scas neg or and jne int3 pop roll sub inc pop mov sti sub or ret ds sub divl lret jmp sub mov xchg ret jmp in sbb jmp shrb push jbe (bad) out test and lret pop dec bnd les lods lods movsb mov xchg sub mov adc in sub pop mov mov jb sub push push into xchg add adc repnz stos jno xor loop xchg adc shlb jbe gs pop out sub and adc or lds xor add mov aad ds fmull and ljmp xor mov sub dec add jmp aaa mov xor fstps and jge das mov inc lahf dec dec mov aaa mov lcall daa pop cmp or daa std push push lcall pop (bad) shr (bad) shr jnp cwtl pop repz adc mov stc mov mov xchg xchg fnsave cld mov push dec ret add dec out or rcrl push std sub in mov loope sub ret push or ret cmp push (bad) stc scas xchg iret push dec ret dec sub ret sub cmp jb (bad) ja mov rolb (bad) rdmsr lock jge mov stos sub or int jnp push mov push stc movsl add add clc inc movsb jnp mov in leave rcl jo add lahf (bad) in mov dec aam xor cltd outsl jmp push or sub rcrb rolb ja pop enter pusha push lcall loopne loop,pt rcrb repnz les lret call mov cltd push jg lret das pop jecxz das cli outsb pop pop or mov jle push pop and xlat mov lea loopne xor in insb inc and pop rcrl or xor sub xlat mov push push clc dec outsb add in add shlb cmpsb popl and xor cld daa ja push xchg jne lcall jmp scas inc sahf and jmp out lret inc imull dec stos call pop call jp and iret jp pop les cmp test jns dec cli aas popf jo leave mov or das roll push out ljmp xor ficom sbb repz and mov pop dec fnstcw test cli clc jl sub (bad) arpl rcr and mov daa xlat mov and mov cmpsb daa (bad) js fwait dec sub jmp movsl lret mov mov and jle mov jns adc jl xor test inc fidivrl cli std jg lods sub mov ret (bad) jmp jns imul mov dec pop pop (bad) or icebp inc movsb sbb ret in iret movsb fmuls lea sub and pushf push mov pop sbb lds sub jg jp mov daa rcl clc push (bad) aam lea push add xchg cmp mov mov shll popl xchg test les or inc sarl pop add mov mov xchg mov ljmp jnp arpl fcoms je lds mov sub imul add xchg sbb xrelease scas fs in out (bad) and mov mov mov rorb js sub sbb call sahf pop adc add push les out pop into lret mov jo js or add xchg repnz pop (bad) or and insb int ds (bad) bnd icebp add ret inc jae pop lret ss test jno mov push add pop jns xchg out popf aas cmp jl icebp out sub xor les and cltd icebp jle mov dec idivl scas (bad) stc lcall jg or xor int3 pop add mov lret cmp data16 loop xchg flds and (bad) and jecxz dec mov fpatan pusha pop mov adc scas sub jle sub adc mov mov and or or cwtl dec pop mov sti xor cmp les and out pop icebp push cs dec les mov mov adc fisttp and shrb inc aaa fisubr (bad) in push dec iret test ret stos lea cmp xlat xlat sbb es xchg sub outsl adc xor pop push push xor ss xor movaps das repnz mov iret das bound push or nop mov add scas repnz xchg out je lret xor stc adc in mov mov lret lods test out je cmpsl ja or adcw and xor imul lret loop data16 sbb (bad) pushf lret pop add cmpsl lds sub lahf jbe jmp sbb lret xchg adc (bad) (bad) jb clc lds mov jno inc sub sbb mov mov je int3 sbb push sbb pop add fimul (bad) daa inc push push mov popa cli sbb jmp shl mov pop lcall fildl imul jge aad out add mov sbb and lods push shl xchg dec xchg xchg repz jb rorl aaa and dec dec icebp cwtl and js dec sarl cwtl adcl sub pop jnp pusha and dec pop addl mov idivl in push and and (bad) loopne cmp or mov rorb or push xorl stos add fstpl int or pusha cmp lret sub xchg inc push in aas sub cmp aad xchg sub mov call insb lret sub flds pop push dec xchg inc insb sti subb out andb xor xorl aam push push std (bad) test dec lret cli call bound popl cmp das xor (bad) in xchg add add mov jmp into sbb adc mov or stc inc inc xor dec push inc addl loope dec rorb jp jmp jmp decl (bad) mov pop fildll movsb das stos arpl mov lret inc jbe jl push mov (bad) pop data16 jmp push or adc ret clc pop and jecxz mov sti sub xlat mov outsb repz or xor push inc lret bound push xor (bad) xor mov fs test insb rclb inc lret mov decb sbbl jae xchg repnz imul cmp and aaa stos xchg leave out repz and inc cmp test dec or cmpsb enter push daa or jnp orl scas mov imul jge mov in daa loop lds stos pop pop insl mov push adc enter add mov mov pop notl (bad) out add or js pop lahf push test and stos fdivs sub in mov fdiv repnz jp xor fprem1 lahf fistl outsb mov push (bad) or clc lret inc loope add xor adc loop xor lret xchg insb fcoml xchg cwtl in or out sub call scas lret xor loope or lds lock dec and imul push or cmc out xchg inc outsl stos cli or int sub daa repnz mov test sub sbb popf shrl pop jne arpl jge ss mov stos mov or daa mov loop shrl sti and sub cmpsl movsb add pop cmp and or add mov orl mov pop iret out lcall xor jg mov popf jl push xor fisttp (bad) ljmp adc cmc (bad) das test xchg scas js mov xor xor sub ret rcr adc loope or or sub pop push push add test pop fiadd adcb pop mov out sub std enter (bad) mov jmp push sbb aaa xor cmpsb xchg iret pop fsubrp jo fsubs pop int daa jg (bad) or push jg inc push pop lods jno or and (bad) mov jbe pop and and add xor push mov xchg sti add cmp shlb cli sub sub dec jmp mov or sti fild dec push cmp xchg xchg mov lock xchg fucom data16 dec jg fisubr bnd aas ja cmpsb pop ret xor sbb mov loope iret sub add xchg xor sub mov stc jp cmp js in std je push (bad) int3 cmp adc mov int add sbb fucomip push (bad) push imul cwtl jecxz push sub lret lods in add (bad) repnz pop aaa dec xlat mov divl sbb xchg lds cmpsl ljmp out test fistp add fimull dec repnz xor mov sbb and pop js repz jb xchg pop xchg jbe and sbb inc (bad) mov scas fnstsw cmpsl (bad) pusha dec mov adc xor push shrl (bad) sti lea repnz lods movsb adc fidiv fbld aas repnz addl mov std jmp jb xchg mov leave (bad) jle test jmp mov inc int inc sbb pop and mov popf lock mov jb inc (bad) adc xor jmp xchg out mov jae xlat cs xor scas cltd arpl daa and jl flds syscall push ja sub xlat add std xchg add or repnz jmp (bad) ficomp je in rcl scas jb sub out mov mov loop xchg (bad) lds test rorl or mov mov test or cmpsb and lret jmp dec sub xchg pop mov cwtl and daa add out pop shlb adc sub iret aas mov sub jbe in data16 into or add sti lcall dec dec fidivrl jle push aam imul mov or loope sub ret sub (bad) cmp leave push fisttpll mov movsl cld sbb scas xchg icebp push cltd fmuls hlt and shll xchg cmc mov lcall in icebp lret icebp pop mov rclb adc call xchg je mov cmp jg dec mull popf push les movsl out lret aaa pop les sub push in cmp hlt jp ds pop push out clc movsl movsl (bad) adc adc sti mov bound pop adc add jmp movsl scas bound hlt js (bad) ds sub sbb jb rorl push adc cmc mov xlat jle sti aad jmp dec sub and (bad) lret dec and sub and sbb insb push (bad) adc adc loopne aad cmpsb movsb inc fs (bad) xor lcall mov mov jb dec test cmp fwait lods nop push push out clc lock mov test pusha cmp sbb adc insl test iret (bad) loop into mov cld int inc dec xchg subb icebp add fisub test and xchg insb cmpsb das roll sub ret (bad) xor or inc popw inc aam mov cmp out ret roll xor int3 hlt xor nop xlat and mov jne xchg and pop xchg jecxz incb xor or loop pop insb imul xchg push int pop push lcall xchg loope loop xchg cmpsb xor push dec (bad) jbe ret jl and insb mov cli repz (bad) aas gs mov inc mov sub sub int3 pop and or xor dec cmp fsubrp xor imul aas and sub cmp mov ja jns aaa sub mov jbe addr16 sub and daa fcomp pushf or mov es ret pop jl push sub mov inc stc (bad) jmp std shrl imul mov mov sub xchg jbe iret aas in gs test or (bad) and push sbbl add icebp inc xchg rolb pop mov add xor push pop add call xor cld ja (bad) addr16 jns jae out sub push mov cmpsl rorb adc (bad) call cld jge pop divb add sbbl out lods rolb (bad) shrb pop mov mov aad nop xchg add mov movsb and out sub adc add or dec dec sub test adc xchg push fisub cld cmp rclb xorb adc (bad) decl mov in dec and lret mov sub dec iret stos mov fdivs inc sbb out daa (bad) imulb fidivr cmp (bad) pop lods popa addr16 add in cmpsl dec xor (bad) xor pop repz jle,pn and stos sub mov fcom rcl jns pop into cld sub inc daa dec xchg xchg ret mov dec jmp adc dec pop dec cwtl xchg inc pop and arpl es cld adc xor test dec in lret loopne daa mov or push test or mov or mov or xchg inc sub jge mov xlat sub adc cmpsl push sahf sub add mov test mov je mov fs push push and sub pop add mov mov leave push pop repnz shrl in iret insl push pop loop scas clc xor scas or out rcll shll or lods mov outsl (bad) movl mov pop pop ficompl icebp pop jmp add mov pushl mov pop loope push mov je inc inc and sub add jg rol arpl push adc cwtl cwtl (bad) lock loop daa inc ljmp dec (bad) iret mov aas cmp dec stc xor sbb sub jae cmp sub ror cmp inc adc mov orb pop imul out mov into dec aam pop cmpsl push or dec out xor jp lea push xor mov ljmp mov repz mov repz ljmp (bad) mov outsl lods loop mov sub jbe and or push movsl jle leave push pusha xchg xor loop stc push fist pusha daa and add shll rclb lods mov mov loop stos shr jns or inc jge ds adc imul leave pop repz and push leave (bad) pop mov jg in das aad xor dec mov or pop lret sbb repnz mov cmc and daa sarb fimul mov jp lret cmc into enter sti outsb loope sub adc bound sub pop rclb aaa mov lret out repnz pop and rorb (bad) ljmp push fnop mov xchg int3 das mov movsl shll mov out cmp jecxz pop mov mov add sbb fstps push jo and ja shll sbb mov xchg shlb add rorb cli ret in xor mov (bad) sub xor mov lret pop test out add int3 xchg int js adc sbb xchg out cmp and dec fbstp stos mov sbb lcall adc test mov leave in stos xor pop enter inc xor mov and sub mov pop and sub popf jg and (bad) popa stos out cmp sub int inc icebp mov mov es and or ds fidivr pop mov lods rorl xchg add sbb push cwtl aaa xlat jp sti and and jp shlb dec sub push jle add (bad) adc xor sub jmp jae sub into or mov das rorb xchg lock jmp or sbb pop pop into mov leave popf mov es add jb call cwtl (bad) lock mov jmp in lret fbld sub pusha xor mov sbb fnstcw mov jmp insb dec mov lds sub add jb xor repnz mov pop add leave pop mov fadds pushf daa inc lret sub xor add or enter cmp push (bad) push (bad) pop or movsw stc out jmp and mov mov out popf leave clc in xor fwait or pop pushf add inc mov lods (bad) fld jnp mov sti jne lahf jb hlt icebp cmp push xor add or stc cmp mov sub jmp xchg dec scas leave enter dec aas out xor mov mov lret imulb or incl sbb ret push or shlb out dec dec cs sbb clc and repz xor and jmp aam xlat inc stc test mov daa xor push xchg scas push add sub sub cmp lock (bad) xchg xchg jae std mov in xchg pop fcom es (bad) or adc jae add icebp inc icebp push (bad) (bad) rcl dec sbb shlb push xor sti fs stos mov lret add xchg adc mov test pop std cmp jo call leave jg in fxch dec sbb int3 add mov gs (bad) repnz cli and adc out jae daa aas data16 mov mul sbb xor outsl das or sbbb ljmp stc js mov sub mov lret ljmp fwait rcll pop ds clc test sti movsb stc in (bad) xchg mov inc and cltd or notl mov mov cmpsl int3 xchg and das divl jo das ret xchg pop or ljmp add sbb in cs or add scas fidivr xor divb mov idiv stc cmp movsl adc adc or mov adc xor out sub aas cmp mov in (bad) pop (bad) fsts adc mov cmp pop mov inc pop mov jl iret cmp xor and fmulp pop aas dec (bad) out jge (bad) pop ljmp push jge sub scas fnstenv push roll dec mov fcoms repnz jno loopne mov mov add sarl cmpsb dec mov sbb cmp mov gs repz jp pop movl lret or (bad) dec inc movsl mov (bad) fidivl sub or stos daa pop jecxz xor mulb mov out cmpsb mov lds lret add repnz test sub icebp and inc dec adc xor adc lea leave push mov inc sbb pushl (bad) adc lcall jb mov out mov add sub or inc mov push rorb in xchg shrl stc leave jp jns or negb xor sub mov fdivrl xchg call xchg ret out cmpsl (bad) jbe adc cld pop pop and sub push ret add adc int sub (bad) test and sar sbb js push sub enter sub xor or inc and dec push lret mov xlat mov cwtl mov popa arpl ret test fstl adc imull sarl fistl test aam dec mov sub out xchg inc mov adc (bad) mov repnz std or aam pop cmp adc or pop dec loop sub (bad) mov mov dec mov pop pop mov in xchg sbb and dec sub inc jnp lods clc dec mov mov xchg aas jno icebp sub mov addr16 pop and jbe sub mov jo add insl mov shrb ret add scas cwtl pop out fstl adc adc (bad) mov aaa sti neg bound xlat and fnstenv xchg cld iret jp and (bad) out bound sar int scas or dec xlat dec leave (bad) xor fsubr or adc mov in cmp sbb (bad) pop jbe mov into sub mov add mov scas sub xchg inc orl insl and xor stos addr16 or lds mov mov aas das adc xchg jne arpl movb push iret push and test or inc jl (bad) std mov mov dec lret mov push cmp ljmp push push add scas mov pop jmp xor je xchg loop xchg fsubrl enter xchg int lock add aaa and cmp pushf mov es sub mov and inc notl mov jmp cld stos cmc test (bad) pop jge sbb xchg push es sub add xor xchg inc mov dec cmp mov jg daa js (bad) out cmc lds sbb or pop sbb jg movsl push cmp cmpsb mov fsubs divl (bad) xchg jg and daa aad and mov mov add adc sub adc mov and or push ja xchg sub lock loope sbb stos cld out mov popf or lea out or or call sub jmp insb in je mov rclb arpl stos xchg outsl dec sbb mov push sub ljmp andl (bad) gs out pop fstps mov dec sarl pop mov cmp jne or cmp out add lods aas mov xorb mov push pop iret xlat jmp ror xchg (bad) xor dec cmp jne out sub sub push lods jle jbe xchg shl lods jmp pushl or pop and add jne inc mov (bad) push aam mov push jno mov std xor push push sub push mov xor inc sub stos add scas aam push lods mov or xchg loop shlb pop loop std shrl sub adc jbe pop (bad) aad (bad) mov andb pushf mov jmp aad xor rcrl scas inc cld hlt sti jge mov xchg push jl (bad) out cmp xlat inc pop ss xchg daa add aam sub mov imul mov (bad) jbe pushf push shrl loop and negb xor jg mov fist iret out sub divb xchg fild (bad) mov fisubrl scas imul lahf testb push and rcrl outsl (bad) iret inc test mov popf ja movsb xchg je inc out arpl and or mov (bad) out jns enter push loop cmc test lahf pop adc mov mov sub xor sub lahf jle dec xlat fptan mov and dec push icebp lret cmp or add ret pop sbb adc pop mov imul pushf adc dec scas insl lods add fisub xor nop sbb fldcw dec pushf and or (bad) and xchg sti fldcw adc out dec rclb dec out pushf xchg (bad) push or cltd je stos cmp add push xchg lods xor jmp loopne adc fsubrs ds push int inc mov push cmpb mov cmpsb lret daa add ja int inc das ret iret popf fistp out lret negb out pop leave (bad) divb ds into xlat jnp push cmp mov cs inc (bad) flds jle add and scas (bad) mov testb xchg push or ss imul repz in adc cmp cmp (bad) mov movq movsl test dec sbb pusha das mov xor test sahf shr bound (bad) (bad) adc pop push mov dec icebp inc sub mov cli cmp xchg repnz loop lcall shrb lret jnp out adc xlat xchg sar pop out xor lock ret (bad) enter in adc iret mov sub xchg mov mov out add xchg sbb push icebp adc (bad) and mov das jno cltd push lret shll sub inc xchg imul gs mov std mov fild or mov or test mov push ljmp ret cli stc adc (bad) mov stc popa sbb pop pop cs mov imul xchg (bad) mov (bad) xor sbb cld push adc sbb rorl ret jmp cmp add repz ret mov jb mov pop jne mov leave push sbb movsb mov mulb adc sahf out cmpsl dec lret cli mov xchg dec and popf gs aaa inc clc hlt int or xchg sar adc test add sahf and frndint sarb add sbb push in mov movsl fadds popa sbb add adc add adc pop mov cmp repz dec mov push xor push adc inc xchg dec ds mov jmp stc mov test mov sub loope cltd or pop jno dec (bad) mov pop or add push popf xor mov jge fs fsubr jg add adc or jmp je leave sub sub sub in stos imul xchg adc sub sti (bad) dec and je and push add mov mov das xor adc ja cmpsb movsl pop sbb sbb ds or mov mov fptan pop mov add test add jne xor imul cld jmp push xor jbe xor or pop adc mov adc pop xor adc fsubrs sti mov icebp or fsubr inc sarb xchg push inc jb clc fadds add cmp jae adc cmpsb push xorb sub xchg stc mov mov mov add (bad) jo and mov fwait jge dec lahf push push leave (bad) pop dec sar inc scas sub and (bad) je loop cmp shrl push sub jecxz cmp cmp gs cmp adc pop aam adcl lret out movsb xchg clc les out negb mov pop icebp repz lea ja mov push jne rolb pop cmc dec or jle or addl outsb imulb mov cmp cmp mov icebp mov cmp gs gs subl push popf jo pop pushf mov (bad) xor jmp (bad) jp sbb push cs test mov idivl mov cmc pop pop push cmpsl push mov sub lret in push mov stc in ljmp mov push or insb scas clc xlat and sbb mov or jge xchg mov adc xchg mov test (bad) stos aaa sub sbb flds dec fidiv les loopne call and fadds mov mov test loope xchg xchg cmp (bad) bound xor push add repz out mov jns inc sub mov sbb (bad) mov cmp imul mov xchg in ret cmc rcrl sbb decb dec repnz jno mov outsb les out leave lds test in ret loope sbb dec aaa jp or mov and dec test dec mov in aas lods fnstenv dec (bad) mov sarb imul scas testb (bad) das lea je adc jb je xchg mov or ja out and mov or aam imul adc xchg pop pop cwtl and adc loop xchg in aas mov pop add out or add push jb xor cld aad sti jl and add out pop pop cmp movsb mov lret mov shll inc mov pop jnp into test add sub pop xchg sub dec testb xchg shll or std int3 repnz mov test cmp sti lret add lcall iret pushf sub jmp jne xchg push jo loope pop out lahf (bad) (bad) fnstenv and andb das mov add scas (bad) cmp adc je out cmp sahf scas sub xor xchg dec or (bad) mov stc test xor jg mov aad mov in mov and adc pop iret mov and xchg jle and dec adc xor jne dec cmp push xor mov xorb shrl push cmp add mov pop js push adc lret dec dec pop mov dec out test mov mov in push cmc sub int xchg data16 movsb sbb imul sbb pop iret xor jmp mov (bad) js mov das mov and or and or mov pop lret and sub jns and add stos push outsb add xchg in repnz and cli leave or fdiv jge js xlat mov xchg adc xchg (bad) dec sub cld int3 fs mov sub mov decl lcall lods (bad) stc add mov inc rol sbb lods out movsb jg cld outsb movsb scas popf push and out ret pop xchg jmp xor mov (bad) pusha (bad) xor cmp gs xchg xlat repz adc pop cmp push ret ret push pop or jae loope lds test pop ljmp iret add push loop addl dec ror dec scas bound sub mov ds int3 iret pop sbb jg popf push sbb xor adc mov lcall cmp scas sub mov int3 cld add xchg mov sbb lahf bnd icebp mov ds into cld jle das loope push or ds gs mov pop popf mov je enter (bad) dec lret or fidiv ret mov sub cwtl inc out cmpsb sti dec fildl and add adc icebp jbe push fstps stc xlat out or mov lock loopne mov test pushf mov mov xrelease nop rcrb (bad) psubw mov or scas fldenv jp sub and scas sub (bad) popf rcrl dec ret jecxz mov mov hlt test (bad) aas gs xchg and lock mov int3 or pop push in fdivrs imul rcll add cmp (bad) repz ret cltd fisttp daa jge or (bad) pop mov (bad) dec andl test lods outsb movsb mov popa cltd das out sub mov addr16 movb or and xor dec jb push fnstcw les mov adc jecxz pop push dec mov test sbb (bad) in inc and mov cmpsl cmp adc pop loope sahf and mov xchg adc mov es add mov rcll divb add lcall rorl test xchg mov xchg sbb addr16 (bad) enter rcr (bad) xlat mov push jmp sti bnd mov jmp push inc sti and add sub xor movzbl inc int icebp cmp dec xchg popf pop ret fwait stos stc test repnz and pop stos mov rcr dec sub das or push and (bad) pop pop mov cltd bound movsl ljmp xchg (bad) repnz sub cmpsl imull imul lds inc add jge xor sub out mov ljmp adc mov and sbb mov and push adc push sub imul lret pop jg inc adc notb loope popa cmp inc stos popl das mov stos sbb je cli ffree sbb xchg push and ja divl sbb int3 add pushf (bad) fimull push push outsl add jb mov fistpl adc or cmp xchg dec xchg lahf pop mov xor mov rorb jge mov push icebp push inc sbb (bad) xchg ret adc or inc lret sub imul inc inc mov xlat jnp xchg mov mov stos daa aad (bad) pop jmp in das ret push sub imul and jo ljmp push xor sti xor fist insb push movsb mov sbb cmpsl pop ds xchg (bad) jb sub negl or or adcb mov shrb xor adc rorb mov sub xor jmp out mul dec in js inc faddp or and cwtl jo fcoms mov leave push add (bad) into pop jno dec fist std cs popl (bad) jle cmp pop lret xchg ret mov and xor sub or out mov push inc test in xor or inc fsubr test mov add popa ffree pop push daa call pop mov (bad) xchg in fidivl push gs inc push push adc lcall aaa icebp push cmp pop (bad) pop xlat loopne (bad) in idivl test movsb (bad) outsb ret push push jmp fnsave out mov mov push xchg je dec sarl sbb and cld mov test mov jne test fsubr scas test into stos mov popl (bad) mulb lret xor fnstenv mov rorb ret fistpl leave xlat imul (bad) mov pop xchg test jne push pop cwtl lods sarl mov push xor and clc mov pop int3 mov pop aas popa daa xor sub idivl and adc adc sub sti lds in push pop aaa add adc out cmp inc cmpsl clc add (bad) mov xchg popf call xor cli lods ret pop out sti jbe lcall repnz pop jo mov loopne enter xchg test pusha push std popa loop add cli mov out xor jne xchg jb sub ljmp add pusha cltd loop lods test ljmp fwait gs cmp inc imul pop xor jno xor cmp cld push mov adc sub popa loope sub or xchg adc daa add lds push lods mov dec mov jno jo lcall sub pusha sub xor xchg out pop (bad) dec popa add jne sub mov out inc sub cli xor cmp clc mov sti out imul pop dec mov ret rcr or (bad) mov mov shrb xor sub loop gs daa negb call call (bad) xor mov adc sub mov add cltd cwtl sub push std pop ret add (bad) sbb mov (bad) jae iret test addr16 and int mov xlat and sub loop rorl mulb xchg jg cmp adc ret xchg pop mov int cmp dec jbe test test jbe push dec mov sbb sub inc dec dec imul fs lods cld loop (bad) pop add (bad) (bad) sub insl xchg fldcw mov fcomps sub lock cmc bnd pop loop cmc or into and bnd push mov jmp pusha rorl pop mov adc ret add jmp ljmp jae rorb xchg decl mov fcmovne jg mov in push negb sub (bad) repz test pop push and outsb xchg loop fbld ficompl xchg and xchg pop out sub mov fsts add test (bad) fnstsw mov sahf dec out xchg lcall pop fndisi(8087 dec xor mulb push pop mov and mov or push push xchg xchg ljmp (bad) shll and and xchg shrl outsl or cmp roll xor jne sbb mov ret lds fadds ret inc dec scas mov mull popa inc stos pop add leave sub and out pop int3 scas negl and sbb ja xchg inc xchg xchg es push (bad) cmpsl (bad) xor out mov xchg into mov sub fbstp dec xchg scas cmp out pushf lods add or cmp loop,pt ror fldl out and pushf fst push js mov (bad) mov loope je or xor add sbb add cs faddl add or sub nop (bad) dec mov mov xchg lock lret add outsb ljmp leave (bad) mov dec mov leave push out sbb notl and bound push (bad) and loopne jmp inc mov push out push and push mov clc and gs sub mov popf shrb lods rcll repnz addr16 adc cmp dec (bad) mov loop stos cmp loopne ror or sbb xor xor cs scas dec lret js add jle (bad) xor scas in dec aas dec jb iret shrl xchg push push mov pusha or sbb out repnz cs or icebp mov mov push dec mov add scas ss xchg jns cmpsl mov repz movsb out sub lret push and leave stos jecxz and xchg fdivl daa pop movsb pop mov daa push mov push push cltd mov inc out mov outsb adc ret jbe inc sub nop jb or into loop jmp fsubr jmp icebp jae ljmp dec das lods mov add stc mov add fsubs xchg jo dec lock loop dec bnd and lock stos je scas mov mov pop ret push sub iret test xlat idiv dec aaa or andb nop inc jae cmp xor fdivl pop aas and mov dec test sbb mov (bad) fst das je cltd test xchg pop scas jecxz leave adc jp nop in imull int ds sbb scas sub xchg mov cmp lds xor xchg (bad) int3 das mov lds adc mov and xlat pop lret mov cmp jno adc out dec shlb adc leave cltd int add ffreep std adc mov rcll or jmp pusha jmp movsb and add or cmp jo std inc xchg in pushf pop insl imull jnp (bad) movsb sub and and divl jne and or out lahf pop loop outsb sbb or sti inc lods js xchg lds jmp out lea orl ret inc push sub xchg xchg insb imul (bad) and dec insl idivb adc fmuls loopne mov sub cs mov mov pop in aam je add push push clc xchg mov pop push test sub cmpsb imul mov inc es nop les sbbl test jne mov add (bad) call scas jne and scas mov ret leave lock jl es dec lods aas jp mov lds sub lret sbb mov jae movsl sti arpl dec int sbb sahf xchg add mov lcall sub loop add adc dec pop daa mov xchg push push inc or cmc cmp and xchg cld mov mov pop cmp es mov test sub imul adc fs adc nop adc test inc nop xor call push adc lahf cmp mov fdivrs dec test xchg es cmp dec xchg shrb jl or and dec push mov loope test cmpsl punpckldq xor push cmc insl adc popf ret or cmpsl (bad) lcall shr and iret xchg leave adc dec std inc mov push leave xor or pop xor xchg fs aam dec xchg mov test adc lock sub imul loopne scas cmp or fisubr enter xor adc out mov and inc xchg xchg cmp push sahf (bad) pop repnz mov testl test push ret xor pop jnp dec add jge into ja dec mov or cmp mov or test cltd cmp xor (bad) loopne add inc or out pop push cwtl (bad) or push lds mov (bad) inc push dec cmc dec movsb lods inc (bad) or cli mov mov rcrl dec xor sub fwait cli sub xchg lds movsl shrb dec movsb lret mov cld mov mov add sbb adc pop fnstenv sub dec and and test dec cld pop and cmp jl pop xchg sub sub or and movsl and sbb jp popf adc push dec dec in adc sub stc dec inc dec or and sahf into icebp and ljmp cmpsl add jmp add dec mov aas xor lret lods xchg cmpsb cmpsl dec or (bad) xor sarl nop test sub lret adc xchg add scas gs or sub fs inc push mov ret test pop mov push add dec push jp add push add add or pop mov sub sub push dec aad sub xor pop lahf aam (bad) into pop rorl xchg lret ss jno xor jge (bad) add (bad) mov cmc out jmp mov int3 int xchg jns popa and sub leave cs pop pop dec ja jo (bad) or aaa push pop out and mov ret add int3 mov dec cmp push js mov jmp pop outsl fsubrs lret pop sub fwait push lret cmpsl push insl in sub cmp jb xor lret rcrl jmp xchg (bad) mov sahf xor sub add mov into pop mov adc mov or lds jmp das or sahf xchg aad sbb scas fimull sbb daa icebp add das cli adc or jl jmp mov fstpl cmp aas clc and (bad) cld (bad) (bad) sbb (bad) xor cmp out dec mov pop outsl lret imul add div and push movsl mov add iret das or fbstp sub repnz pop inc addr16 test xor sub add jb pop jg movsl mov adc mov xor or (bad) or sti and daa sub callw shr mov pop loopne out jno ret icebp push dec fldcw inc and sub mov dec movsl std mov mov idiv mov pop (bad) fisubr xor outsb jge cmpsl ja mov jno leave jne bound sarl imul inc jno (bad) push rorl jl or repz and ja addr16 mov movsb pushf inc jmp dec fwait imulb cld or divl out ja mov loop push and (bad) mulb pop arpl adc xchg push and xchg pushf ss ds sub mov or or xchg inc pop rorl push jns out mov lock out and inc sub aad jg inc sti loop add fmuls jns imul jmp and inc dec stc lods xchg jle scas hlt scas pop popf push or fistpll repz fidivl stos sbb lahf int3 sbb pop jmp sub push sub sub jbe mov or xchg and push xchg divl test aam pusha add cmp sub testb lret (bad) xlat or push xchg lahf jno popf jnp adc pop or sti mov mov xchg ret add imul (bad) hlt sahf (bad) in out adc aas mov mov dec adc lahf and cli mov sbb dec cmp das jmp push xchg shlb adc push xchg sub pop movsb stos pushf jb pop decb pop (bad) int3 fisttp xchg pop out and daa adc xchg (bad) or mov scas stc (bad) test fcomps mov adc cli test movsb test je add ret push and xor clc xor xor cmp sub sbb sub and sub mov and and mov pop movsl push insl (bad) sub repnz pop stc add fstpt or add or inc mov scas movsb arpl lahf je push out cld shlb (bad) call addr16 lret push adc fisttp out mov dec cmpsl jl repnz pop shl imull call add add or push (bad) das das xor jle lret cld ret and add addr16 pop (bad) lds xor hlt test insb and xor mov fild xchg gs or stos mulb or mov inc pop dec in xchg dec pushl ret sub cmp (bad) iret sub stos sub push or xchg lods fdivrp andl insb fstps test repnz sbb mov mov pop or fstpl sub popf rorb fsubrl ss mov jg xlat out mov pusha fs jle imul (bad) outsb xor mov orl push sbb push in pop or mov jge test insb add jnp push xor nop aam mov stos lods add pusha lret pop (bad) outsl lahf xchg jmp push out push idivb dec stos dec cmp add test xlat push mov pop movsb push fsubrp inc adc (bad) xor mov test icebp mov pop mov ljmp sub push dec imul push xchg mov add fisub decb jne int aas and and fs mov repnz mov push je cmpsb lock enter cmp fcoml sbb andl roll sub adc (bad) xchg lock out push add fldl mov mov pop ret aam imul push dec hlt fwait jle test repz mov in add or fdivrl xor xlat sbb aas mov mov sbb and inc daa or xor xor jmp adc and test cmp sbb xchg stos mov xchg arpl xchg lock xor scas cltd and les fidiv sti iret in pop fadds adc mov loope fisubrl mov sahf imul jnp sub (bad) pop fildll push in add mov stc mov repnz in repnz ret pop repz mov in xchg lret push xchg add sub mov int3 enter pop insb inc xchg dec mov xor sub lock xchg fisub (bad) mov xorb mov or and daa movsb mov rcr cli ljmp sbb cmpsl or add fiaddl jmp pop dec rclb pop add loop mov ja cmp popf jno fs mov in xor lcall les lea cwtl dec sbb add xlat sub or and (bad) mov popa stc into cmp sbb mov pop (bad) mov (bad) and aas jno add inc lret movsb mov push dec dec cmc xchg stos jb (bad) aad or cmp das (bad) xchg loopne jge (bad) lret imul push push aad mov (bad) sbb mov popf fisubr roll push sbb add pop xchg les sti cli (bad) jns pop (bad) mov cmp xor (bad) sub ficom or mov negl sub add out jno dec fisttpll jne insl and xchg movsl cmc test mov stc lret mov xor jo loope jecxz sbb jb rcl sub and add or push imul push or fsts dec lret (bad) mov inc ljmp jnp mov das xor jle xor or cmp repz shld (bad) cmp repnz sub mov scas mov push rcll ret shrl dec lret ret ja xchg jb pop call jle bnd pop push je push mov and ret rcrl fisubl rcl add inc push sti mov cs and mov push inc add add jmp fnstsw adc cmp lahf fildl push xor sbb push mov lret dec or (bad) dec stc (bad) adc xchg sub dec stos dec xor mov clc ficompl mov loop push xchg fmull scas cmp mulb ss and xchg sti sub jmp and xor test iret addr16 xor adc mov mov icebp push mov cli add pusha mov push push out mov pop sub or test mov jne das mov repnz aad (bad) mov loop xchg stos fdivrl mov fs cli ja jne xchg mov cmp jne push sub cltd or push stos mov mov push jle mov push idivb push sbb mov jnp leave loop cld jmp mov dec call mov popf (bad) sub stc xor iret push negb cmpsb jb arpl enter cli push mov lds xlat (bad) fdivs xlat adc call cmp adc dec jg mov test sub (bad) dec pushf pop cmp adc xchg add call xchg pop pop popa or sub mov or sbb nop cmpsl cwtl push xor push pop pop (bad) jmp and test cli mov into shrb out inc xchg nop test cmp pop stos xchg mov ljmp mov adc mov and cld and jns adc sub lods push mov sbb mov push das jmp aas fstl push adc cld xlat imul stc addr16 es or sbb or jno arpl and out and mov loop dec fdivs sub mov enter js nop mov adcl les cld (bad) mov sub push scas adc (bad) cmovle dec inc fmuls dec clc scas enter add rorb mov dec ret aas sub add xchg fisubrl mov add or xor lock jl inc sub dec fadds cmp add lret (bad) dec mov mov xor out cmp rorb pop and jmp xor insl (bad) lret dec dec jmp xchg inc imull test push jg or ret xchg xchg loop xchg (bad) xor lret push dec push push inc cmpsb enter in mov push cmp adc (bad) repnz push (bad) aam fstps shll loop ja rcrl outsl outsl lds adc fnstsw loopne jecxz pop jmp mov mov cmp int adc mov shrl push or dec out dec lret or add pop xor jo in shll push and test mov xor clc and xor imul pop stos or jno inc mov sub mov mov pop lods push jb rolb pop or es les (bad) or sbb jp sub cmp lahf pop inc sub and push add pop mov aas sub pop sub lret out mov inc sub imul mov scas pushf test push push icebp sub push adc divl push sti ljmp and es and out or out (bad) mov inc dec (bad) jb sahf xchg lock daa cmp sub gs jecxz adc jo or jmp push out sub xor (bad) pop cmpsl sahf or loop mov fnstcw inc (bad) flds mov adc (bad) xor in sub mov lret sub jbe and dec leave xor fildll ficom fucomip jecxz dec mov dec stos xlat out movsl sub adc pop pop popf stc cmp xchg out out add iret sbbl xchg adc adc mov ret (bad) repz dec dec mov test sub add mov out xchg movsb std icebp mov add pop leave jg repz aaa mov imul jle popa adc (bad) cs je call icebp sub sub in sub jecxz ds mov (bad) dec pop test pop mov fimull in rorl fisubr push or xor jmp out mov add loop test and out adc and cmc mov lret cli xor loop shrl dec cli sub sub lahf movsb adc es test lds (bad) jmp out push mov loop and push jle ss lock fmuls int sub adc and jo xor pop adc ret sub dec mov scas mov cmpl mov (bad) mov out sub or fimull ljmp dec (bad) mov sub xor fistpll aad xcrypt-cbc cmpsl push add movb add xor mov (bad) mov inc icebp push test sub jb sti das cmpsb sbb or ret cmp mov sbb pusha xlat dec (bad) xchg in and test mov and jmp mov and mov pop cmpsl mov lds jo loopne notb sub das mov (bad) mov mov xor adcl jnp adc call jg pushf xchg and (bad) sbb and dec mov (bad) int3 fs mov daa into ja lahf (bad) jnp iret inc jne test add cmpsb stos adc xchg cmp jbe fs xchg mov das add sub movl inc sbbl je ljmp mov test jecxz inc lret je adc mov sbb imulb (bad) sub mov add fisttp lret push dec mov add push jbe push jno adc mov cmp (bad) or andl add add ja add push cmp inc popf adc mov inc or push icebp jae mov mov test add lods stos sub out sub mov push or inc cmp sub mov out adc sti out dec mov sub pusha push xor mov sub push subb mov and mov outsb sub xchg xchg add pop add sub (bad) push jb dec setne inc and hlt xor fisttpll (bad) adc mov adc xchg popf fdivrl push loop pop pusha imul adc mov outsl (bad) and xchg mov jo dec (bad) movsb ds mov sub sbb sub mov xor (bad) lret inc push aaa sarl xchg adc xchg lock ljmp add pop jbe cwtl addr16 mov adc fs (bad) int3 cli and xor lsl and jge imul test mov (bad) sbb xchg hlt (bad) int or mov xchg jecxz stc imul sub mov adc sti test leave icebp jp ds jno dec fcomps (bad) imul (bad) xor xchg data16 daa xor outsl out and jmp iret addr16 stc jne adc and xor lods hlt fistpl lock sub pushf mov and mov out das clc pop movsl ljmp clc jno outsl mov sti push popf ljmp jg rolb push cmp leave jmp clc inc mov js and push shll sub dec jl or and xor sub ljmp pop mov jmp add mov adc idivl imul (bad) mov in mov int3 out pop fnstcw icebp out jecxz dec adc jmp dec pop sub mov sub ret in dec or shrb lret add fistpll shll ljmp xchg das mov jg sbb daa mov mov adc imul mov stos mov mov bnd ror out jnp xchg cmp pushf jmp or pop sbb repnz push jg outsl jb loope push sbb mov out pop iret sbb push xchg decb movsl adc (bad) xor divl arpl std add lods pop or jo out in adc inc add scas gs stc mov push aam pop fnstsw rcll dec out sub inc push xor add dec gs mov add pop mov xor sub cmp jo and sub (bad) sub (bad) out and test leave (bad) ja push ret xchg or mov or ret inc push xchg sub xor lahf pushf inc xchg clc inc add idivb and xor fsubp adc (bad) push iret je ljmp dec sub dec loop and jnp xchg or jl lret xor cli (bad) xlat outsb les cmpsb gs call mov cmpsb add test mov les add mov int3 shll leave adcb fnstcw daa sub hlt pop push sub mov stc std mov or inc mull mov ljmp adc ror add sbb stos and push inc mov movsl (bad) aaa pop and idivb in sub out sbb pop je jecxz iret sti shlb or pop gs adc xor insl insb adc js pslld loop xorl cwtl xor sub stos test and xchg sbb push ffreep pop cmp or xlat ss ret repz cmpb stos jbe or pop or jge push mov inc or adc dec xor mov cmp outsl (bad) int3 jge and sub sbb orl sub cmp movsl sub dec mov js sti mov mov enter fucomip mov and ds or sub and xor jge or jns movsl jbe push xor pop lahf pop popa loope fldenv add testb xor leave leave das test in or push or mov icebp add or cs adc in mov jg (bad) (bad) lea divl add adc mov sbb add and add cmp das xor outsl inc cmp xchg mov push pop xchg mov shll int3 mov mov addr16 cs push cmpsb mov lock xor jmp je int3 (bad) xor lock test (bad) repz jbe push sub and jmp imulb repnz cld xchg mov jecxz and sub sub ljmp and jae fcmovu out dec xor lods adc pop dec xchg xor incl sbb pop or pop or lods ljmp cmp aas shrb lock cmc mov pop loop sti lds lret lds test stos mov pop and mov ljmp dec daa into jg sbb (bad) clc cli movsb out xor pop xor add les dec (bad) pop (bad) xchg lods outsb pop je mov mov fucomi ds pushf movsl call xor rorl mov mov std (bad) je ljmp inc cli sub leave xor popf lcall icebp (bad) es adc pop push and mov fstps fsubs sub jno loopne sbb push xor and loope pop hlt mov pop pop add imul scas pop in xor lds mov out jg and mov mov adc inc xchg inc loop lret adc dec repz loop lods xor testb scas adc sub icebp repnz xor dec mov xor mov sub inc pop sub (bad) or mov ret inc shrb mov adc rcl push mov mov adc sti mov jecxz xchg xchg test pop out add lods aaa dec test mov icebp adc sub out bound ss cmp mov std sti mov jno testb xor and mov mov jmp sub and sub das (bad) push mov sarb mov pop or mov pusha test adc hlt mov icebp pushl insb xor inc adc jmp push out test gs xor scas bnd xchg cmp into movsl adc add ds icebp pusha (bad) into pushf adc out enter lahf lock or xor das arpl pop mov aam jb sub arpl inc mov pop and ja push xor add out idivb xor xor add sbb dec add cmpsl push mov push subps xor and lods ja sti lret jnp or std dec mov and ja push repnz mov or mov divl mov jae test xchg sbb xchg popa and jbe xchg xor pop and inc inc out (bad) cmc or lcall jmp cmpsb jecxz pushf push push pop icebp adc lret or ds in xchg in daa aad pop push mov add push fistpll xor or int3 mov test pop xchg jne cli aam sti jo sub mov stos cmp and fwait mov mov or or adc mov leave pop flds in xchg xor outsl lock push stc fxch adc in inc inc adc push sbb sub mov or lcall adc imul or mov idivl scas stos mov cmp pop in nop jle dec out loop xchg out or and push orb dec movsb cmp jg loopne iret and (bad) test add out mov dec les adc mov nop xor mov mov je fstpt mov and lcall add lods call mul leave fldt pop fcomps loop lret jecxz adcb sahf xlat into mov sbb mov xchg das scas sub xor out ret out (bad) and xchg loop adc xor add pop fdivrp sarb adc out pop call test or pop push and imul lds repz jmp ja (bad) ds inc (bad) sub xchg dec cmp sbb flds jecxz lahf test and push inc ficompl cltd push or enter cmp cld int3 (bad) sbb and test je inc jmp xchg lret push icebp fwait (bad) lret lret (bad) and pop test adc das push dec sbb pop push push mov or jg hlt rcll sub sahf movsl jg pop sub sub out sbbb xchg push lahf sub jecxz loop jbe (bad) sub icebp test lret stos mov nop sar mov cli mov jo add push ljmp lods xor test add push push int3 adc sti jb ficomp pusha aaa add pushf cli in cmp pop mov xchg and in sbb clc xchg or (bad) bound rcl dec and inc mov out pop pushf sub push (bad) outsl inc push inc mov add xchg push and outsb jns or sahf jmp (bad) mov out cwtl jae mov in xchg aad not sbb mov cmp stc rcll lret inc xchg cmovns lret pop inc mov ret (bad) cmpsb add ja mov mov and daa imul int jge mov sarl call mov popf je push xor pop or add mov mov pop mov outsl dec jmp xlat jnp fcmovnb mov cmpb mov or rcrl sbb inc pop dec sti add arpl mov cltd mov pop test and lods mov icebp in adc fprem daa cmpsl sub sub mov jge repz xchg cmp (bad) sub ret jo lahf pop xchg or mov inc cmp dec cmp idiv outsb pop clc (bad) mov and cmp outsl sub mov lcall ljmp or lods (bad) jne (bad) jns push shl and (bad) xor push iret clc movsl (bad) cmp and sub mov idivb xor je lds idivb dec scas (bad) xor push pop sub sbb cmc lds out sub push mov push jb lret add adc addb pop mov outsl fldenv movsl loope cmp pop push pop ljmp fdivs xchg sbb lret add add dec mov out nop dec clc adc ja mov and xchg stc sub sub sbb jp cltd xchg inc sub push adc fisttpll ret stos lods loop je in stos or cmp mov adc mov xor aad mov aam pop mov mov les xor lahf loope pop jb lret jmp ljmp rcll gs ret sub popf icebp daa scas fiadd xchg fdivp or xor pop in sarl pop sarl sub repz add mov pop cmpb cli cmp push push stc mov mov or and or add cld rcl arpl out cs pop adc vpsubb cmc enter ret cmpsb jno ljmp repz sub adc jl and xchg roll loope mov mov cmp leave pop sub subb popa leave add inc (bad) mov xchg les cwtl cs xor add xlat push adc xchg cli push push cmp and add pop pop dec mov shrl sbb leave xor popa pop add les clc add bound js xor mov xor adc xlat out les add xor mov pop and les push outsb inc int pop cwtl jle in push mov (bad) mov sbb fidivr xchg inc pop ret xchg mov cmpsb enter add jg js lods in and or dec test xchg push hlt pop dec adc xchg das and jmp loope fnstsw push mov pop mov (bad) mov push xor testb mov scas mov xor aas test mov xlat dec (bad) sub pop mov pop insl mov xor dec rclb cmc jle sti sub xchg mov xchg mov fnstenv jbe push icebp jmp push (bad) fbld add adc mull sbb test sbb xchg xchg mov dec sti cltd and mov and flds xchg notb add stos inc ret hlt push push inc push xchg mov mov scas xchg cmp sbb add lds or push fidivl lods jnp push adc stos in cmpsl out in or jmp cmp inc adc mov pop addr16 leave pop sahf js add fs lds je jb xchg incb mov or mov push sub idivl jae mov adc sub or xchg sbb clc push pop mov icebp xor fstps jno fs jmp jb clc xor push mov push sub ret bound repnz push repnz mov adc add add inc std scas dec xor or test xchg insl dec or mov stos loop sarb cmp out shr dec xor lret jecxz cld and pop cmp scas negb (bad) cmpsb addr16 insl cwtl cmp jmp ror out xchg fdivrs or add out sbb (bad) jae,pn cmpsl push stos movsl mov xchg mov cmpl xchg pop icebp mov push mov leave push cmp cmp rcrb lcall mov lret out add and sub leave mov into dec movsb stos iret mov xor adc jmp mov cs mov es stos roll xor pop insl adc sbb add mov mov add xchg fiadd cmp clc leave mov movsb push rcrl jno repz xchg pop (bad) daa iret and test popw sub pop ret xor xchg in daa push and data16 sbb mov ds pop jmp sub pusha sbb stc mov iret out mov imul or cmp imull in or fistl add or gs (bad) xor es mov push lret loope cmpsb ds ds ljmp adc leave lock inc imul cwtl (bad) idivl lret pop sbb std jg sbb fcmovb xor pop pop lahf lcall push push lea mov cmp (bad) testl mov ljmp in das mov (bad) dec inc (bad) cld push int3 repz mov mov and sub and inc and daa mov imul add mov stos mov xchg int3 jle mov xchg orw lds loopne sub cld fldt xchg cmp or add imull pop add and sti xlat pop rclb (bad) sub and adc int and (bad) jne mov mov push call inc arpl jge les xchg repz iret nop push xor mov and mov dec fidivr das mov xchg pop and lret aad mov in icebp xchg lcall je adc ljmp xchg popf sbb cs aad stc inc jecxz stos push push cmp rorb leave add push xchg dec add in loope jp stos test ljmp sub inc or (bad) rcll mov jmp in pop xchg call sti fdivrl out xchg pop xchg ja jo xchg insb pusha loope cmpb sub aas (bad) iret test xor xor push push jmp ret adc pop xchg mov pop sbb jne scas dec add adc inc daa sub nop xchg divl fidivr inc inc mov inc hlt cmp daa das into jg (bad) pop ljmp in pop sub mov mov add jmp mov xor fisttpll outsb jecxz aas shrl xor sbb (bad) mov into test aam cmp movsl out fistpll adc ljmp dec cld pop in sub mov sub mov add xlat adc es ret dec xor ss lret mov pop xor ljmp mov dec int3 xor out mov cmpsb es xor mov jo mov dec xlat mov popf adc adc push fldcw sub pop sahf and lods gs xor sarl adc and cmp lret fisub js and (bad) sti xchg ret popa dec push dec stos or xchg aam sub rorb mov pop inc outsl jbe cmp sar test idivl adc xor mov (bad) gs shlb jge dec cmpsb mov ljmp inc dec sti fs (bad) fmul xor adc sbb adc repz test (bad) bound push jg cld movsl nop repnz nop pusha and mov push (bad) dec add fsubl outsb and out pop dec pop ljmp or data16 out ja out repz xor scas pop jb pop fs pop jb lret jge shl mov sub jl inc sub inc jl (bad) mov scas jns (bad) idivl sarb mov xchg xchg xchg push movl movsb push imul or rcrl (bad) cltd in outsb lea rcll mov data16 pop add and stos aam lcall loop dec popa mov sub popf (bad) push pushf out cmp pop sub cmp jne xor adc movsl std addl and jno or mull fistp cmpsl mov jnp xor cmpb pop inc push mov loopne mov ds jmp pop icebp cli jg mov jne mov mov add lds int3 mov dec sub push pop pop adc fsubr fldenv repz mov fidivr and (bad) and fild xchg (bad) cld dec aas call out inc mov xchg xor pop mov xor xchg in xchg sbb ret arpl sub push mov jne mov xchg xlat sbb jo loope stos notb (bad) cli or lods sbb fidivrl mov imul pop fildl or inc push pop gs adc cli sbb hlt jge imul xor (bad) cmp lret loope pushf (bad) lret inc pop add test sub push leave shl cs push and lahf negb fs scas popf push sbb mov pop ret mov fistpll adc xor and out shrl lods push xchg pop iret xchg sti sti fnstenv test mov cs jns and mov push push popa outsl stos jecxz xchg fnstcw out inc push pop and push lods jb ljmp movsb add sub mov mov or jge xorl les cli aam adc jb xchg xor andps xlat cmp out xchg outsb lret cmpsb adc lret mov test sti lods jmp xchg jbe ljmp or jg sbb mov cmc xchg push dec or out jbe pop pop ffree ljmp lahf add popf ret inc add pop call out insl (bad) or mov xchg into jne call out lea divl dec xor scas daa out je pop jns mov jecxz and aam fidivr fnstsw repnz xchg adc clc clc xchg jecxz aam pop xor hlt sarb dec in dec fldenv mov bnd mov rcl fist sbbl or stc dec stc and xor mov inc dec dec insb les out movsl (bad) mov (bad) xchg icebp stos cmp ja (bad) and xor or mov dec ret jns or or mov scas xchg mov jecxz (bad) sti dec out sbb lahf (bad) aam bound div xor (bad) lret jge or pop dec push jns and shr popa or xor aad lahf pop dec mov jg and jmp mov loop sarl mov lret xor push pop ja sub fidivr push adc stos mov cmp cli jl push mov lods jae test mov add sub dec cli shr add and mov or ljmp shr daa xchg stos adc arpl pop xchg add pop lds xchg fisubl (bad) xlat insb mov dec or cmp scas mov add pop add xor out rorl cmpsb mov ljmp xchg shrl jnp daa clc inc xchg shrb lods in and fwait cli clc xor pop or or cmp int3 jl stc cwtl nop repz xchg mov add sub dec pop or jnp adc fwait roll sbb std pop nop in out xchg aam outsl ficomp std push push loope popf dec sub mov mov cmp cmp (bad) cltd xchg cmp cmp dec xor mov and fnstenv ret int ljmp out imul cli cltd outsl imul or dec sti imul popf stc test out adc (bad) and cmp rclb push out and outsl xchg int sub mov xor inc repnz aas lret mov int3 (bad) enter ss fxam les jne cmp xchg mov adc repz add xor clc xor inc shlb and sbb lock mov subl jp add xchg push scas out dec mov fisubl iret mov dec (bad) xchg mov outsl pop or adc imul jns imul mov or push pop push orl fsubl push data16 out dec std pusha xchg clc xchg xchg je stos divb or outsb inc dec and xchg jnp add and inc sub repz jno ljmp jle dec (bad) push jo lret cltd inc mov push push dec or xchg push pop loop mov jnp jmp push jno jo out jg and cli bnd sbb ds je fcoms inc loop hlt xchg push ret or cli and ljmp shlb fimul ret cld ja insl dec mov jmp pushf leave dec sbb xchg ret dec and lock rorl (bad) in jge and arpl cs adc jne aaa cmpsl lock (bad) push and jno jne pop pop std xchg dec call or mov movsl (bad) ja mov pop test subl les imul adc enter aaa loope cmp cmpsl popa pop xor jecxz out dec dec dec xchg dec lock xchg (bad) sbbb dec cmpsl ja or sub dec add and sub adc pop in and sub decb pushf mov jl cmpsl lds jmp pop or dec xor fstps imul daa mov jno cmpsl call push dec dec cmc out addr16 mov push xor not sbb pop sub push das push sbb clc sub pop std xchg or adc (bad) mov xchg (bad) mov mov adc adc sti imul push cmp pop mov bound mov xor pop cmp add xchg jge xor (bad) xor out pushf shll pop retw jg jno sub (bad) jg ja dec mov jle dec jmp dec sub outsl adc dec test lret (bad) jnp outsl and push jmp aas ret lds or add push imul lods addr16 mov adc push bound fadd ljmp or das fdivrs inc cmp xlat sub xor (bad) (bad) bound jmp out rdpmc or out (bad) mov rcl dec add (bad) clc push in notb inc mov inc sub out adc out and add or aaa repnz icebp and jnp aaa arpl lds lret pop sbb inc jae cltd adc je leave add stc fadds cmc add or mov sti inc or or sub mov dec and add jg adc jbe movsl mov aad movsl fadds (bad) or and icebp aam leave hlt mov add mov mov push leave adc stos (bad) iret or pop dec or jbe pop lock jmp out inc or or cmp mov and jne fs les mov jns imul (bad) ds or inc mov xchg cli mov dec push mov mov ljmp movsl mov fiadd and ss mov sub cli fcom (bad) push mov stos fs stos xchg movntq jg scas cld insl sarb leave xchg mov int sub pop dec push xchg idivb push push push sub mov ljmp dec push lret loope outsl mov pop dec sub cmp and cli jmp jmp cmp xchg jmp pop jle mov inc add xor push xchg (bad) out mov or and push loop mov bound imulb out (bad) into or ds shlb push adc (bad) push adc es out je leave mov js xchg inc mov mov inc rcl mov stos cltd add add aaa in mov push (bad) mov add cs mov cmp adc or xor repnz xchg inc add loope mov and popf out xchg add mov sub mov js mov loop mov std out cmp add rclb or stc fist jmp lret test bound adc pop mov add pop ljmp jbe pop dec dec lahf jl outsb aam xchg (bad) popa (bad) pop jns dec lock cmp es push cs xchg or add push (bad) cmc xchg aas negl pop inc add (bad) adc ja mov pop pop sbb sub orl out or mov push add repnz dec fistp jb les mov mov and repz and adc cmpsl pop clc push arpl dec outsb mov daa add daa push push das jg push movsl faddl pop sub inc cmp int xor cmp aad stos or jns push and adc mov dec jg leave lret in in rorl dec loop xor xchg pop lret mov push push or jmp xor push stc mov mov jnp xchg mov icebp fistp rcl pop push or scas in adc mov loop test push cld sbb mov icebp sub addb popf or popf or xchg xchg mov cli jne stos loopne dec bound gs imul fdivrp mov xchg (bad) xor cmp mov clc outsb (bad) push dec mov mov leave push test stc add decl or xchg mull jmp stos js pop jmp cmp cmp cmp fisttpl (bad) mov push mov xor mov xchg shlb les xor push mov (bad) push pop icebp out adc fldenv push dec add mov (bad) mov xor and push and push mov adc xchg mov repnz stos fcoms negl (bad) loop shll add mov fwait lret and sti movsb xchg out out mov xchg nop xchg data16 sub push xchg pop (bad) and mov mulb mov and aam xor xlat (bad) arpl ja mov xlat xor lret mov scas xor (bad) outsb adc cmp gs mov jge mov pop scas int3 mov icebp and or (bad) fidivl mov lret je mov and jle cs jge push fstpl loope iret jnp mov (bad) push mov int3 repnz sub adc push scas sub push rclb sti out or and add xor outsl add hlt and add aad and push mov fnstcw jne sub outsl add mov sbb loope jae adc adc clc ret call popa cli pop cli (bad) mov inc add push frstpm(287 mov xchg mov dec mov sub jecxz ds xchg mov cmp dec mov imul push mov sbbb (bad) push and inc pop push mov js and rcll mov fstps xchg cmpsb and sbb xor inc cmp test push and pop pop push pop clc ja sbb sbb mov mov jp mov ret rolb fxch mov int3 push gs stos mov xor sti jg cmpl add or fstp lds cs add jne add pop push jle jns and push (bad) mov pop pusha push movsl push lods popf jo test std mov cwtl adc or mov push js orl addr16 sub and add in fildl jnp and push sub scas in pop push xor shrb add add negb inc aam inc lds push in mov sahf or clc add mov add sub (bad) or orb (bad) (bad) popf mov sbb cmpsl nop call and and shlb dec cmp das jmp and jb outsb clc mov cli test mov imul and push adc xor cld mov iret std mov push shrl mov call adc (bad) lods sub dec loop outsl jecxz adc shrb sub add cmp lret sti movsl std xor icebp mov push stc or (bad) out into push and (bad) mov push jae cltd xchg push test loop jg sbb mov mov or mov daa fildl pop mov mov fadd jns push adc mov pop sub adc mov test or imul sub pop push xor fstps sub hlt mov adc add mov mov cmpsb push adc inc sub cld jne xor cmp push xchg pop push add push xor mov out aas fisttpll fs push xchg popf and adc mov fisttpll inc lahf sbb imul aas outsb xorb xchg (bad) mov out (bad) mov hlt stos adc stc decl test sar adc cld sub mov shr test frstor fimull dec das iret push xchg (bad) clc ret xchg aam push xlat xchg paddb hlt mull inc and mov xchg inc and mov dec mov (bad) pop push popa in lret lahf dec mov ret mov js mov cmpsl xchg jnp or jmp inc scas mov xor pop mov ret cmp out inc aad xchg (bad) add sti je mov dec out pop call push jo add mov clc dec int xor mov in sbb or pop stc adc orb xchg xchg xlat mov cmp xor (bad) in and push mov hlt nop push or jle leave jge movsl pop sahf mov mov mulb adc in inc mov xchg jns enter pop jne sub or dec out sub (bad) sub push xchg enter loop pop out xchg sbb (bad) je sub mov mov sub xor iret sub loop pop lahf pop adc ds pop out sub negb add hlt scas leave ja jb outsl cmpsl fild xchg and mov je cmp fdivrp out pop adc (bad) mov ds pusha cld add lret fs stos jmp add sub pop insl jl push inc ds mov mov das push jbe mov and ss dec mov sbb movsl inc fdivr mov mov jno or or add frstor hlt pop loope dec mov pop (bad) scas jne adc out xor jne mov test inc push push sbb das stc fstl lods inc loop cltd fcmovnu je add push inc (bad) adc orb (bad) and xor ljmp (bad) mov lods mov cmp pop stc or das out ja mov mov or dec add loopne xlat xchg fild mov into or and sub bound (bad) aad and outsb sarl (bad) sbb popa or cmp movsb mov xchg (bad) in sub roll push out push or mov adc out mov jp clc adc bound xor call sbb cmp and jl ljmp inc fimul leave adc mov dec loopne and (bad) and add mov (bad) mov push out mov xlat ljmp push call sbbl sub mov mov xchg lcall jo xchg mov bound jg jb adc inc stos add idivl adc lock das dec push lcall mov pop data16 imulb or adc sub push push cmovl dec cli int3 std mov pop cmp out inc sub cwtl movsb ret mov hlt inc (bad) and push cmp outsl mov out out test cmp mov jns shrl dec jne mov sub and cmc out aas pushf popa ds aam imul pop es xlat push (bad) icebp cli bound jecxz lods xlat mov popf jle repz mov inc ss ret xor out jg cmp sub inc or out loopne lret mov mov inc cli aas ds bound pop repz inc sub stc repnz cmc dec cmp repz stc and aaa test int3 mov mov shll lret or dec adc jl aaa stc sub adc sub js dec idiv mov repz mov and xchg aam sbb mov (bad) mov pop mov popa mov shlb and cmp or pop pushf or add movsb adc dec add push jp and test rcr mov mov sub jl in and inc (bad) push jno ret jl gs xor push stos mov movsb cmp dec out test mov xchg or mov mov (bad) (bad) xchg (bad) inc pop and add xor cli sub hlt push and xchg jmp sub add shrl mov imul movsb fs ljmp pop xchg xchg xchg inc nop aas lods push aam push jmp pop ret test push inc adc fidivl push pop cli lret push shrl std imul sbb lret (bad) or into ret nop xchg add and jg sub ret mov lock push add xor mov ss add jle jge mov xor and cmp in sbb imul xchg je orb mulb and adc dec insb sbb lahf push jmp (bad) jmp push divl daa and inc repnz stc stos es inc std dec out pushf fisttp loope sub dec lahf out out daa and mov ret (bad) xchg pop dec imul mov push insl cmp sub pop test ljmp or mov xor in lcall (bad) call add adc cmp adc jmp mov (bad) sub xor mov adc dec xor xlat push xor sub push push test into mov xor pop inc lret ret into rcl mov jnp mov mov sub jne aas pxor es mov stc mov in inc pop shrb jae (bad) pusha push out lahf fimull ljmp jge mov pushf loopw push (bad) jns gs xor in dec mov dec or mov mov fildl adc xor data16 sub xor bound stos sbb push dec loopne clc jmp (bad) or mov mov push and (bad) iret sbb or inc jnp sub ljmp fnstsw mov imul inc test dec and iret insb sub (bad) leave mov mov loop pop or imull nop ret stc dec mov arpl mov cwtl int fstl jo jle leave push fmul jl adc (bad) (bad) xlat icebp addr16 repz pop xlat popf push mov or sub push push icebp jp push movsb mov (bad) xchg in mov mov adc fldcw adc jno mov daa fwait push fdivs xlat and notl and jecxz mov xchg inc push mov mov daa mov shll push pop scas sub repz in imul imul and fstp inc das pop mov fsubrs mov mov test rep data16 jp sti mov into in mov mov std jle in push sub mov lret adc or add loopne sub daa mov xor out lahf loop push (bad) adc int add sub mov call adc xor cli out je push std sub pop sbb push cli or jmp incb mov pop jb or jb dec repnz out add shr mov jne inc jbe sub mov xor fwait stos and popa sbb daa mov jmp das out or (bad) movsl jae adc stos or cwtl stc fsub icebp mov lods ficomp pop and cmp mull or sbb cmpsl in mov xchg sbb shrb and inc and (bad) lret icebp mov lahf and in jmp mov sub stc push xchg mov add lret sub xchg lcall sub mov sbb ljmp test add or mov jnp push lahf pop sub inc and pop (bad) mov into jg sbb add fldenv pop clc lock iret or int3 es dec ja lock mov clc pop mov cmp cltd jge xchg movsb push pusha jo stos and das sti nop movsl (bad) pop adc mov icebp cmp jbe sub xor mov (bad) jne divl cltd leave repnz inc gs out xor js xlat push outsl stos popf dec add jb rclb sahf enter aas push mov pop mov push cltd add into cltd loope dec and push ret inc lret xchg shl movsl adc fdivl push xor push sub cmc push xchg into mov xor mul leave out add lods xchg (bad) stos idivb out fiadd inc loope shll pop mov pop xsha1 cmpsb mov call or and mov jmp cmc into lods dec mov jbe mov pop pop inc lret or test push dec lret enter pop ja lds loop pushl cs or jns adc lahf xor mov push andl pop cmp xchg lock stos dec rclb jmp ret or out and jno fs mov pop jecxz lahf sub dec dec mov xorb xchg pop dec dec add mov and cli les in and addr16 (bad) stos notb mov pop sbb sbb fsubrs jmp fnstsw test mov push push cmc inc lret xchg stc (bad) insb mov bound ds ljmp push ds aaa cmpsb stc jl xchg sbb adc sub fs leave jge es jnp pop mov push cwtl (bad) or daa mov dec xorl inc push xchg icebp push scas fsubrl stos ret rorb sub jg movsb sti popf mov dec and and daa pop gs mov xlat mov jbe imul sub into sub mov adc and ret or cmp pop mov cld jmp mov mov out mov (bad) pop sbb mov or dec lret add xchg bound ja jns imul aas and xchg int3 nop ret into xor sub aaa mov ss test xor mov icebp lods jg (bad) dec out jge jnp push cli cltd push cmp (bad) loop rcrl stc cmp jnp and fcomps xchg mov loop jge ljmp push clc pusha sbb iret sub mov in dec xchg mov pusha movaps and adc (bad) xor dec add inc movsl (bad) and push xor js fs sub cwtl ficom movb daa arpl mov dec lods lods (bad) (bad) (bad) and sub loope data16 xor loop inc rorb or xchg outsb imul cmp loope sub lret sar js jle daa adc dec xor mov mov clc pop flds xchg je daa lock lods add jmp out and mov lret xor or sub pop enter sub loop sub sbb int3 (bad) jmp or daa iret jno inc mov notb inc or div dec adc repnz xchg das pop aaa (bad) mov xor sub and negl dec pop test add mov ds aas ret sbb push dec dec movsb call mov sub test loope jno cmp cwtl mov leave (bad) lods divb cmp rcr roll or sub aaa ds jbe adc jecxz,pn sar leave out pop xchg or (bad) fsub sub std sub ds sub sti mov add loop fcom orl fisubr xor ret mov mov rorl pop sub inc cmp lret imul and or mov ret stc xchg mov fcmovb cwtl adc daa dec mov out sub cli add mov stc cmp sub mov xchg int3 jmp (bad) mov out jb repnz dec jmp test mov lret dec xor and jno cmpsb push and mov push inc push xlat dec jno loop test push xor imul cmpsl ljmp and mov pop mov jb rcr dec mov push add xor int3 xor imul dec enter or sbb lods sbb sub (bad) xor out push add pop out pop call dec and ljmp stos mov jno leave push xchg mov out das test inc cmp pop adc cmp add fsts jns out adc sub mov xor jp or adc push xchg cwtl dec and jmp rcrl pop scas push rolb in arpl shr je (bad) gs (bad) ss (bad) pop adc (bad) mov pop push or mov push dec xchg xchg clc mov inc adc gs (bad) mov push (bad) imulb adc add sub (bad) mov xor repnz mov sub jns push shlb repnz stc inc rcll ret sub mov xor xor imul mov xchg jnp xchg push and or (bad) test dec call mov pop cwtl aad cmp clc xchg (bad) xor aam popa fiadd dec int xor stc mov dec mov mov cmp mov clc rolb (bad) sarb fbld aad negb mov pop dec push pop sbb sbb adc sub push sub jnp sub test sbb popf sbb loop mov push xor out and popa xchg sbb bswap or push mov dec mov dec ljmp mov dec jnp or (bad) test xchg (bad) xchg xchg sbb lahf and push loope mov daa out gs sbb int3 decb bound fstl mul and pop ja and sbb mov cmp cwtl popf and mov add lds stos outsb push scas addr16 hlt iret cli test movsb repz sub test sbb lods imul in (bad) dec pushf aam mov jne ljmp in inc adc stc pop imul daa in jp pop enter adc scas loop (bad) negl pop sub mov fmull xor lods adc out pop stos (bad) or and out lock jl js jmp loop push adc out mov cmc pusha (bad) mov iret jge inc scas aam scas fisttpl xchg sub roll or cwtl and divb or negl in mov or je pop int3 mov sub pop ret mov fwait (bad) cmp mov push lahf hlt test or je add sub mov lds jae or mov lods sbb push outsl push mov push imul test push jb or jmp rclb (bad) imul pop mov mov adc popf dec stos fsubr lret or cmp popf fadds xor mov mov scas mov add stos repnz sub js dec out sub push daa leave inc mov flds ljmp sti adc imul mov sbb ret mov fisubr testb dec ret and dec jbe xchg and notb add mov or mov loope aad pop stos and cltd adc les stc (bad) dec jns dec divl mov mov iret into lahf sbb cld in ljmp repz dec movsl dec (bad) (bad) cmp repz pusha out mov in pop js mov (bad) in mov rcrb sub popf mov int lods clc imul fbld mov rorl sub idivl in sub lret int loope jg repz loop lods test adc mov mov lock pop add fwait stos xchg sub mov int fsubp ja fist mov xor adc fdiv lret fidivr pop add mov movsl std dec movlhps movsb cltd push dec lock mov inc xchg pop mov fisub (bad) jmp sarl add popf cld data16 icebp jnp sub mov sub xor (bad) push clc adc addr16 jmp mov mov movsb ds push cmc add inc outsl mov pushf sub lahf jmp add mov mov jl rclb mov scas jg push sbb pop cmp adc push daa xchg call in or and enter inc insb loope fcoms inc sub push mov orb pop push outsb push loopne loopne xor pop daa add je subw call dec adc cmp mov sub mov push call loop call xchg divl outsl push movsl notl and outsl xchg mov pop int3 mov pop (bad) jnp push mov xor orl push jle mov test sbb inc cmpb and pop push inc fs aas and (bad) cmp pop add loope xor leave jg loop sub and push mov pop mov adc rolb repnz neg inc shrb inc movmskps aaa xor cmp fs (bad) xchg mov aad std (bad) in push shl mov push pop mov xor bound push inc repnz mov mov sbb lods test xor pop es imul or or push in movsb push fbstp enter mov repz add pop bound xchg xchg (bad) mov adc repz out pushf sbb pop fbld pop inc aam mov mov add push push mov sub push nop lcall cmp sub mov out pop dec ja xchg shr daa imul push popa xor mov sbb fwait or fnstsw sub lods xchg dec mov fisttp decb into ret int pusha mov dec inc (bad) int or xor sub push and and and cld jmp aad shrl ret (bad) mov mov loop ret sub scas stc fs mov adc dec jbe ret mov and mov scas bound add push pop out rol dec sbb push add add loop or pop push sub clc mov stos loop jge fadds imulb (bad) xchg jne (bad) incl mov movsl xor rclb mov jo shl ljmp clc enter shr sarl xor and mov mov push and dec sub (bad) vmovshdup mov and fist sbb and sbb cltd (bad) ja dec int3 xchg dec and sbb lret or xor iret sti pop test and jmp inc pop push (bad) and mov pop push xchg add xchg mov or pop jo aas add std push jge inc outsb (bad) fs mov add repnz sub stos mov lcall lods push lods jp icebp lock (bad) mov dec push aaa cmpsl pop adc (bad) jmp jmp (bad) mov jns cli fsubrs and cli pop out test inc mov pop or adc std sbb subb movsl or add neg pop ss out int in jns xchg ljmp popf cmp outsb pop out sub out push test pusha lret jecxz inc ret lods pop fdivs mov xor loop sbb xchg sub (bad) jae lret fs dec xlat (bad) dec adc xor mov jmp test sub mov mov ja into xchg cli mov jmp idivl inc push mov rclb gs rcl (bad) push mov out xor sub sub xlat and mov ds popf mov ds add push into or jne dec jmp and fcmovb or jmp popa scas rorl and push dec push xchg aad cmp dec mov push inc pop pop push dec loop xchg loope addr16 add in into mov aam das xchg xor out movsb imul notb rclb aas pop or lea lahf sub sub sub fchs fisubl jmp jne jle push jne sub fucomi movsb stos jmp adc scas push int3 pop push xor int xor mov jmp sub or out adc fcompl mov sbb inc lcall outsl ljmp ss pop in jo xchg xchg imul icebp pop (bad) push jl push je cmp mov inc sub stc and sbb daa sub std or fbstp add (bad) push inc jb mov sbb or push test and dec pop std xor es mov pop mov (bad) mov sub dec xchg fadds mov pop xor ss roll and ret sub shr pop (bad) (bad) jecxz pop xchg dec icebp pusha lahf jmp jno dec jl das in or notb (bad) push enter mov add iret js (bad) xor sub inc jecxz cltd aam lea loopne sarb sbb pop loop je test scas fstpl out jnp xor call mov and in mov stc lret cmc lcall cltd or dec call sub mov sar adc adc dec (bad) mov test xlat test xchg mov rcll xor push xchg xchg dec nop push popf call xchg (bad) das das xchg and sub lret das ss or jp test mov sbb mov dec (bad) cmp dec sub mov push pop cld xor mov lea or out jge pop or mov xchg sub pop lret fldcw xor lret pop out addr16 sub jno mov add outsb in pop mov test inc cmpsl push pop in sub mov mov lods mov or sub inc jmp out sub xor mulb adc (bad) stc mov loopne loope push fnstenv lret adc pushl push divb cwtl pop adc mov mov frstpm(287 mov dec inc out cmpsl and ret jae mov sub ljmp mov test stos (bad) lea cwtl jo ds pop dec add sarb dec ds jb mov fstps test je stc dec subb sub xor adc pop test rcll xchg mov pop mov dec mov lahf mov les call sub mov lret pop out push xchg cltd pop or xor cmp jge pop sahf xor loop xchg loope or or test test mov scas sbb fadd mov sub cmpsl jecxz lretw dec add jg inc sub fadds dec pop repnz inc dec test aam (bad) mov add jmp lock hlt pop jb sbb lds fldenv lea sub sub mov sub sar js jbe push cmp mov push dec cli mov subl push das imulb jg xchg push pop test push mov das iret mov lods xchg lea daa xor mov dec rorl mov pop loop mov push shlb adc fbstp sub xlat xchg add ljmp xchg push fistpl popa mov in mov pop lahf push incl jg subl (bad) push lret js push and and jne loopne sbb pop jns cmpsl or jbe push cmc mov sbb (bad) mov out (bad) jge xchg pop clc xchg push sbb dec (bad) dec or movsb inc mov xchg lods lods pop mov push repnz lcall sub je add cmp sub and xor push bound js flds scas out pop ja psrld aaa sub xor mov dec pop out insl add out jno fmull cli jae or aaa jbe xor push pop and jae push stc push ret scas xchg into mov sub sub add jnp ret dec mov dec repz mov dec cmpb mov call pop mov push daa adc and or pop addr16 insb cmp jmp sub rcll jnp xchg mov clc fist cmp mov push lock flds xor mov mull repz outsb ljmp push sahf push call scas pop cmp movsl mov and cmp psubusw jae imulb leave divl out movsb mov sub pop bound mov mov loop jno lods dec daa in daa jns scas clc cmp cwtl mov lret repz (bad) ljmp les jecxz cmp mov mov add cmpsb mov xchg jl andl fldenv mov sub gs mov movl inc int3 test shr not dec mov add rolb out clc imul in dec and stc lods push push out pop sub or imul push call icebp jp idivl test andl (bad) enter xlat lods pop mov sti add pushl push jo lahf pop jmp xchg cmp scas je add xor xor sub pop xor and mov std test imul clc aad mov pop mov stos adc lcall mov (bad) dec sub ret jae adc imulb adc xchg adc or testb xchg idivb jb repz cwtl pop mov or jle sub sub xchg rorb mov std mov mov fnsave inc xor push mov psubusw cmp xlat xor (bad) add (bad) repz (bad) push test nop inc scas mov cs jmp rcll dec test mov sbb lock sub lcall pop lret inc and icebp mov fidivl mov sbb push test cli jge ret xchg fs negl add or xor push adc dec stc pop in or xor xor repz adc pop ds jg cmc sub pop test adc scas add (bad) gs xchg adc sbb out lret out dec pop pop or mov and mov adc mov fstl lret dec push mov add cli popa mov dec gs aad repz and xorl repnz push and dec jle ja sbb sub jb into decb xchg jg rcrb push lds jg addr16 out xchg repz call or mov sbb int3 xchg mov mov sar or mov xor push jns adc lods clc fucomp fmul jmp iret mov imul leave jbe xor (bad) mov add push stos (bad) adc push scas xor int cmp dec jne mov sti or xor or lret pop or mov (bad) stc mov push mov push lods ljmp mov test add add cli rdpmc lret lods mov pop out pop std push flds or xchg sbb daa inc xchg xor xor cmp pushf sub push and mov insb repz js and xchg mov mov sbb insl dec les in add fstpl je fs mov inc pop sbb xchg stos repnz and mov and push pusha mov jmp lret dec mov mov and mov in and adcl inc cs and xchg test nop xchg lahf xchg stc xchg jl divl fnstenv jb (bad) ucomiss or xor xchg int3 imul out in push lret mov popa cmp sub mov xchg (bad) adc sub stos lret insl das mov (bad) cmp and daa pop icebp les sub (bad) cli outsb (bad) fsubrp test add mov cmp lret mov movsb and repz and aas add mov sub mov test test mov mov jecxz and cwtl insl mov outsl (bad) sub (bad) repz daa out aam pusha add insb pop mov fucomip iret mov insb jno leave les add shr out adc xor inc jp es ret mov stc sub xor xor mov mov icebp out xchg xchg or inc push dec push add sti add xor mov xor repnz mov jno dec jns orb xor adc stos mov das jno jmp jmp mov mov inc dec or mov push xor leave mov in outsl icebp xor push jnp idivb loopne into mov mov stc out xchg aaa jo hlt xor test cld dec ret pop sub aad jae pusha xchg int3 xor ret mov pminsw mov and and mov mov xlat testl or xor mov add jmp push push mov js fdivp rolb stos daa jl fmull sub push roll (bad) sub cmp roll repnz inc inc mov cmp les fistpll mov bnd pop ret lods icebp mov jmp int3 jbe or ret mov dec mov in adc out fsubrp rcll jns dec push sub movsl push shrb lods repnz mov inc xor ret das cwtl push lret sbb or push sub cld nop mov xor (bad) daa push mov mov loop push in cmpsl (bad) aaa adc stos cmp sub pop sar push ret enter mov pop mov sub dec push sar mov (bad) xchg adc and and or aaa add fucomip ds aam jmp and xor and add out pop aas mov sarb push sub inc js cmpsl in mov fnstenv cli aad or cli in and xor ss mov lods icebp inc add test rol rclb ljmp into sub les pop jmp subb pop inc or pop pusha scas dec arpl fstl dec jno or into out mov int test or lods movsb call aad jp jmp sahf (bad) stos sub sub push or jbe or cmp jge sbb test into jle jmp mov clc aam xlat int3 (bad) and adc mov inc jg cld inc stos xor test inc mov push insb cmp (bad) es rcl sbb int repnz pop movsb cwtl imul jmp or sti mov ljmp cli xor ret divb imul cmp push xor in dec (bad) xor pop and push ss or aas xchg pushf stos lret (bad) and mov mov sub inc sbb fild pop fadd or push jle imul dec (bad) cmp movsb fs stos cld (bad) lret mov inc push mov sub or xor jmp push loopne call into nop push out and jmp loop fadd and sub sub and xor call out cld cmp xor jg (bad) mul and mov test mov cmpsb int3 mov stc add or and sub cmp bound sub push sub jbe imul imul pop or in ret movsl cmc dec sbb xchg cld aam or mov mov lret or mov and dec and mov (bad) push ja inc mov jne push iret sub jbe push add mov jge sarb cld jnp xor xchg lcall loope ret mov cmc xlat testb jno or mov mov int3 sbb mov mov mov out cmp push cmp stos out dec mov out sub (bad) (bad) sub inc add sub mov jp pop leave out sub sub icebp jmp pop in movsb (bad) mov outsl out imul sbb lea stc and je push fstps mov (bad) jl xchg sbb iret cld leave in stos cmp loope sub and ret mov or je iret addr16 xor push shl and sub push and pop (bad) call xor test push daa dec sub sbb out pop bound adc lds arpl jl pop aam lret or leave adc or sbb aam imul arpl (bad) mov pop xchg dec aam pop mov pop imul idivl lods pop hlt cli into dec dec int3 mov xchg inc push push ret dec out imull adc (bad) movsb jmp (bad) pop lret outsb pop sti and mov sti cwtl add mov lcall adc clc call fwait sub and jb (bad) pop pop mov stc pop js pop lret test hlt lods pop lret gs sub or mov pop xchg inc mov sbb (bad) sub xorb cmp scas sub add mov arpl test inc mov repnz lcall mov out mov push dec pop xor add and jecxz or xor hlt gs (bad) push xor sbb test das sub pop aas mov mov (bad) adc test daa iret push jbe xor scas jne mov mov xor push jnp (bad) jbe ljmp and stos pop add pop movzbl mov pop or or xchg cs sub add xor push jmp dec negl jb and xor push adc or jge push mov pop jl adc idivl enter fwait jmp adc bound notl pop sub std xor or (bad) jne or testb and or fadds outsb push pusha call or mov dec test or lret nop add mov dec xor xchg pop rclb xchg shrb mov pusha add jg mov and (bad) mov sub xchg fmul xchg movb jno insl dec sub out sub out cmp mov loop mov inc xor mov cltd jb xor int push fstp add lock dec into cld popf push push inc mov shll loop mov push inc mov jmp cmp mov divb das adc cmpsb mov std inc cltd nop fldl and add sub ljmp adc pop inc xor add (bad) stos sub sub sbb out add fsubrs mov dec scas lret ljmp mov test sub add sub mov add pop dec call cmc push out lret push or mov negl xchg iret inc repz loopne gs daa loop pop inc std jg mov xor mov out lds int3 repz sub mov dec mov dec mov mov sub sti ficoml dec inc repnz rorl movq jb movb xor cmp test in or or mov pop mov in cmp sbb aad dec jbe (bad) xor add mov rcl jb jmp in pop icebp mov push cmc (bad) xor icebp dec dec pop xchg sub xor lds xchg enter sarl sub mov inc (bad) xor out xor jmp jno cmp fs out or (bad) pop pushf lea or jge dec pop adc mov push mov jg cs jmp lret push in sbb (bad) add add dec mov adc (bad) jecxz push leave push cmove mov push hlt mov daa add mov repz adc cwtl (bad) mov outsb hlt mov pop movl push pusha cmp stos adc fidiv or rorl icebp sub push pop sahf and xchg xchg mov rorl daa jnp cmpsl jg mov mov fisttp (bad) cwtl leave iret mov adc scas sub repz shrl add xor daa adcb je add and scas mov pop xchg std cmp or daa pop xor stos xor xchg std mov ljmp jl aam dec cmp (bad) jb out push aam rol push jae mov or push daa xor lret aas test (bad) sti (bad) push pop push pusha push add pop and add xor pop stos cmp or repnz aam decb sub scas mov mov popf sub cs and and xchg inc mov inc clc xchg dec dec lret jecxz dec sti or inc sbb out dec fninit xchg add dec xor shr xchg inc scas loop xchg mov cmp pop mov push into sub dec cmp scas faddl lock mov lret jbe adc sub fs jmp out dec push in in out aad repz adc mov sub movsl xchg icebp scas mov mov stc lahf stc dec or andb imulb push bound sub lcall lret inc inc ror pop sub cli das mov ret add int cmp hlt mov jmp sbb push popf fldenv int3 movsb js dec imul mov mov inc gs test cmpsl pop jge adc out repnz ret scas repnz dec add pusha mov imul gs test int3 fidiv (bad) cli cmpsb sti add jp dec ljmp scas (bad) ljmp jmp das (bad) mov gs cwtl test or divl repnz xlat lret mov and mov loop push sub jmp mov notb adc je or mov fisubrl adc out imul lds push lock adc popf movsl stos idivb cmpb mov pop stc push outsb out es sbb jno dec in inc call sub jmp jg popf pop xor sbb push and in mov decb cmp ret sbb jg jb (bad) idiv loopne mov lods std (bad) (bad) and sub or cmpsl jg mov (bad) sub push dec sarb xchg mov sahf pusha mov sub popf fincstp mov jle cmpsb loop ljmp loop shlb add inc xor fdivr ret jle push push cmp inc cwtl push add xchg stc jmp jne in jne jecxz rol jo jb xor push stos add cmp cli push jg andl xchg (bad) fcomps mov add jb shll pop ret stos aaa sbb sbb and sbb cs sub lret frstor xor sub mov sub ds (bad) out pop sbb pushl hlt ret lahf cwtl mov pushf jge or jmp xor push gs xchg add push mov jge jg mov jl dec aam in fstpl lods and cltd mov add cli ja movsl sarl (bad) pop ret bound icebp ja xchg lret jne jle das rcrl (bad) pop and mov mov roll pop shll fnstenv outsb enter sti cs icebp or leave and fbld out mov xor xor push (bad) mov sub (bad) iret push push test fmuls rcr adc dec mov ret leave sub jne fwait lret inc adc fidivr pop not (bad) inc add stos repz loop sar jb rcrl ja lret inc ret mov cmp and lret mov addr16 cmpsl popf (bad) (bad) jmp enter mov mov aad pop dec push and mov inc push (bad) push and push and lods int jmp call xor xchg jae lea sub imul jb fsub mov dec (bad) iret mov inc and daa repz sbb add jmp mov mov (bad) mov daa faddl sub pushf inc out stos fsub repz icebp and aam sar sbb ss sub std cmp mov xchg mov add loop rorl xor push pop dec push orb xchg or (bad) sbb nop xchg stos sub xchg dec je mov daa or fistpll or mov hlt pop lret sti inc daa (bad) sub loope loope mov fcom sub push inc cwtl dec xchg mov push fbstp or pop out sbb and call (bad) out push ljmp iret data16 or pushf popf sub iret jo decb jne pop push inc mov imul xchg scas arpl pop scas daa mov sbb mov dec stc call out inc add push adc rcl int scas dec icebp push gs sub stc cmpsb sub mov popf ljmp lahf inc test sub sbb sub lcall stc sub popa mov mov mov fcmovne mov repz add lock ljmp pusha in xchg in adc test mov incb push xlat mov dec test mov or adc pusha sub mov (bad) iret lret jmp xchg sub cmp add das mov add out out mov push push mov sub bound adc outsb test cmp stc sub test in sub cmpsl stos (bad) out das sbb xor xchg les (bad) or insl cmp and and adc jne out xor stc rclb popf test pusha adc and add and cli jns mov mov cwtl jl icebp mov imul test mov icebp (bad) push jbe popf xchg add xor sub movzbl xor mov adc sub and in into lahf sbb pop inc or sub cmpsl stc xchg mov and jae mov pop jne cld leave insl jne movsl fist ret icebp add icebp out sbb push jae and rclb test mov jle lcall sbb int3 push mov sub (bad) repz and lahf incb repz das nop imul mov jb or dec (bad) mov ror cmp out lahf push push dec dec (bad) xor rorb (bad) push fsubrl adc das stos loopne cmp maskmovq negl xchg xor mov xchg mov or orl loop adc decb outsl idivb shrl push xor mov pop mov sbb (bad) mov xchg pop dec lcall push ret mov pop pusha xor sub ja lret or lahf (bad) sub fisttpll or and gs mov loop popf jl mov add in rcrl mov stc pop in or jecxz sahf in dec mov out sti cmp push (bad) clc push sub cmp leave pop into arpl cwtl push pop cltd (bad) (bad) rcll mov mov dec pop fstl push (bad) mov es fisubrl and leave out sub fcoms dec add mov sahf sub into or psrlw or dec mov daa popa lret fsubl fcomp mov scas popa inc fisubl sbb push (bad) repnz xchg cld imul xor bound not stc inc jmp adc std into push jmp dec cmp jg cmpsb ljmp pop test push out bound push mov (bad) mov out cmp push (bad) (bad) jl aad xor push mov mov (bad) jmp push cmp scas iret in das out cld push jae es sub pop mov pop inc xchg in nop in lds lahf mov jbe pop fmul out dec shrb ret add or sub inc jno jp push (bad) add (bad) cmp and stos mov or pop cmpsl idivl popa mov jmp xchg imul (bad) pop xor dec loopne dec xchg cli int sub (bad) mov xchg sub mov pop loopne sarb repz and add and scas mov lahf bound or out add jne mov dec loope jge add push ja fidivr and pop cmp mov mov icebp mov icebp and js je pop je lret fist inc mov adc iret dec aas imul in aam jmp ret pushf or loopne add inc push pop mov dec xchg mov pop clc fildll sbb sub mov fs ret shlb mov sti mov mov or inc sbb xor dec sbb and pushf adc lret aaa into cmp mov cli pop pop imul jo and sti mov daa (bad) rorl movsl bound adc pop out mov sar mov xor adc jg negb jg jb mov mov cmpsl cmp pusha stos dec repnz andl pushf or xchg push jge out daa or pop int3 lods rcl xchg mov call ds dec fstl cs into jecxz dec dec and shrl ljmp pop xor add lret add loop nop loope sti sub mov (bad) mov leave ret cmpsl das jmp xchg pop and shr push jmp inc sub jnp add cli cmp (bad) xor and ja inc lods dec jl sbb setbe lret add sub mov mov notl mov or jp push in leave pop lock dec mov dec aad clc cmpsl dec fst fadds xchg mov push scas fnstcw ljmp jg push cmp fcompl pop enter ret inc dec cmpsl cltd pop iret imul (bad) xor fisubrl jg add nop xor add fimull xor out jns inc and sub pushf loop loop shrl or lods lret pop pushf (bad) jb pop shrb stos popf sbb icebp jnp mov lds stc add mull xchg or (bad) sub mov mov shrl cmc mov dec add (bad) sbb mov jecxz sub movb sarl test (bad) sub mov lds ror in lret shrb rorl jl or adc movsb pop ret pop sub test add shrl mov fild nop add mov lods mov into inc sbb mov mov push or jbe call mov cmp mov cmp stc and ret imul (bad) iret push mov (bad) roll outsb lret sahf or repz cmpsl pop test and inc in inc mov iret test lahf ss loop (bad) (bad) loopne add fisttp lret and xlat jne cltd call pop lods push jns xchg mov inc data16 mov jno add negb mov daa sub push dec xor cmp cld inc push add jne mov les jge add jle and (bad) es mov popa cld add cs das nop push xchg mov mov fdivs out lods inc lds push out mov xchg sub repnz inc addr16 sub (bad) pop rcr dec test imul jns mov das push mov sarb sub lods pusha jecxz dec and das jne in push rol imul or repnz rcll scas mov (bad) repnz (bad) out jb aad out inc push push cmpsb mov out or mov ror sub sub xor mov mov dec stc lea ds sbb std dec xor in iret aad gs imull xor les and ret (bad) or hlt add int3 pop call add test mov or lds cmpsl rolb jge popa rcll cmp jno das idivb push jne shll and xor mov pusha inc notl pop lods (bad) sub sub xor fiadd or repnz fldenv mov std dec outsl sub or rcll pushf daa jmp jge pusha dec out lret lret mov imul in mov shlb mov fstl iret mov (bad) xor push or sub adc fimul movsb add outsb sarl into cld dec or inc clc adc (bad) push push mov outsl cmpsb ret fnop adc xor loopne rcrl lods aam daa roll aam in mov pushl add sub sahf popa cltd aaa dec add or mov xchg add (bad) popf lock loop dec adc mov in push pop mov lret (bad) pop inc imul leavew add mov and mov test sbb mov mov mov bound (bad) cld fsubs ljmp jp leave pop sbb dec or cld scas jb add imul cmc pop stos xor or icebp sbb jg (bad) ljmp mov or sbb mov add pop mov mov xchg cli std pop mov cltd mov xchg or sub frstor sbb cmp sub ljmp stc and sub js popf jbe in ds mov xchg pusha (bad) xor mov (bad) cmp xchg ret mov adc xor and es push pop outsl dec push xchg mov loopne xchg into cmpsb dec adc lret add and out lcall mov xchg in cmpsb data16 leave mov and mov icebp xlat shll (bad) or jno sbb sahf stos push pop sbb ljmp lea outsl add cli pusha jns xor lahf dec jb push repz into pop cwtl (bad) in mov stos popa sub adcb enter adc jmp mov bound ljmp sub push push js xlat mov and or add xchg xor clc js insl xor idivb clc pop lds ret xchg mov adc sbb mov xchg dec or xchg jno outsl push shrd ljmp rcrb and daa pop inc or pusha inc repz shr xor out mull cmpsl or gs sub pusha cld sbb xchg ja jecxz bnd rcrl push (bad) (bad) cmp fdivs mov clc popf aad inc lahf jns lret pop push cmpsb xchg pop pop cmpsl xchg pop xchg (bad) xchg lea neg leave pop mov xor fdivrl push mov call cld dec mov cmpsl mov push cmp dec mov ja,pt lds push xchg push ja arpl call loope subb fstps fs and cmp jecxz dec stos xor mov ljmp lret push sub mov mov lock lods cmp mov adc and jmp out popf jae cmpsl fisttpl adc idiv dec fs clc push les shr fcoms popf (bad) xchg loop push push (bad) jp loop lret fimul enter out and ljmp fstps ljmp shll pop pop xchg inc mov daa adc add and ret icebp jne push icebp jns je inc movsb call sbb mov pop ret and pop mov ja rcrb inc add call inc les xchg pop mov xlat lds add xlat mov sti jle (bad) cmpsl mov mov mov out lea and lods fadds push js inc push sub adc push inc insb mov mov cmp add add adc lret ret adc mov add inc xor xor mov ret cmpsb inc and jl imul mov push cmp (bad) cmc je leave aam jns inc cmpsb stos sub pop movsb xchg icebp dec pop lret cs mov inc stos adc lock mov push pop loope rolb and mov daa lret jp insl cmp pushf das xor dec cmp fcomip push sbb movsl fsubrl lret xchg call pop imul movsb pop mov ret test xor in popf push es sub inc add popf (bad) leave shrl mov jno jp jg xchg aaa and add dec mov stc xchg xchg add sbb fs mov sub imul xor add les add mov rcr pop test loop and push and test cwtl fildl sahf pop loopne cmp (bad) cmc cmp sub popf dec jmp cmp mov add mov or in sbb repnz mov xor jp dec or cltd xchg adc mov mov mov or daa mov fstl inc or or adc mov push ja dec push push scas mov test xor (bad) cmp cwtl sahf sarl pop or rcll mov lods test out xor mov mov ljmp inc shr or pop fldcw jp xor leave xchg add sub ss lahf gs or ret stc mov repz movsl loopne out mov xor pushf lcall or repnz das test clc and iret dec mov xchg or sub inc mov mov jecxz mov or ret ror imul divb push jbe das sbb mov fwait push into es sub and mov dec lds sub xor ljmp xlat dec mov pop stc lods xorl or jno xchg adc and jg ret dec pop daa lcall jmp push loop xorb mov adc dec imul push cld pop and popf xchg mov cmp sub xor sub ret rcl stc add out xor adc mov xchg pop fsub ret jbe jb fcoml (bad) mov loope icebp test xor xchg scas push insb sub dec (bad) cltd add fldcw lret insb test je data16 notl inc sub scas test mov je pop icebp out jo sub add int cmp into fist idivb cmpsl sub sub fsubl lods sahf pop inc ret insb repz sub pop xor mov rcrb mov fldcw cmp scas sub lock sub xor sbb mov out ds xor cltd sub das mov stos sub repnz das or xlat enter leave (bad) test bnd cmpsl cwtl jns pop ficomp mov gs sub mov (bad) insb dec ljmp pop out std cltd fsub push sub sub sti sarb dec ret mov xor lret sub add mov xor and scas int3 cmpsb xor call adc ret sbb mov movsl jl imul mov mov jge cmp or fidivrl pop adc scas xor add mov xchg jecxz divl repz and es xchg mov pop push ja push or lret scas push inc fwait adc jne sbb dec aad dec aaa sub push inc xchg sbb (bad) xor (bad) imul cwtl movsl inc scas aam jmp clc rol mov xor inc ret sub (bad) dec jbe aad sub daa jg mov jecxz je push aam daa xor fdiv cmp lods (bad) mov xchg mov add lret lea xor cs dec mov pop xchg jne aaa add mov bound in pop stos adc call pop aad ss into mov dec mov mov mov or dec cmp ret pop adc and xchg icebp and add in mov call or lret jg movsb sub xor out mov adc jmp xor jl mov sub dec sbb and imulb insl and pop mov xor xlat xor fildl aas repnz xlat test cmc pop mov mov das and xchg out out fs cli pop add (bad) mov lret xor mov jmp outsb add jns xorl mov out inc (bad) xchg into in mov test and inc sub sub jecxz das adc movsl sub rcr xlat lret popa mov lret in mov sub xchg ret divb ja stos adc lock popa dec stos or cmpsl jne imul add in mov mov and cmp dec cs add lds dec nop pop std clc mov push cmpsl xchg and and cmp (bad) rorl into xchg dec ret cmp xor femms adc arpl pop xchg out call fstpt fldl mov nop mov vmovd ret xorb lret cmp sub scas pushf sub or call mov mov cmp ds sub into mov imul int3 sti das sub xchg sarb lock add jle (bad) repnz lods shll xor clc dec testb in xor (bad) aad test pop mov adc cmpsl push cmp push rcl push adc and test rorl mov jne out (bad) movsl mov repz (bad) popa cmp popf je lret push push mov mov fidiv daa movsl inc pop in cmpsb addr16 and out inc ja in xchg in mov incb pushf cli sahf pushf bound idiv pop xchg out sub cmpsb repnz push jecxz mov push pop inc and push or or adc cli into inc jl (bad) or xor outsb cmp mov repz mov mov dec cld inc dec cli cltd lock add div test or sub jbe jmp arpl ret mov mov sti pop xchg sub sarl jg jns pusha subb mov xor int3 mov mov mov dec pop cs repnz mov xor aas lret sub pop dec sub sub pop sbb (bad) pop adc add mov jmp pop pop cmp fstpt loope mov imul jne ds rclb mov pop repnz mov mov and push jmp or arpl add and pushf nop push add mov movsl stos movsb out dec mov fisttp sub daa pop cmp fnop mov jae push xor stos ficomp or ret stos sbb jmp push sub cwtl jge add (bad) leave mov into and lret adc popf push ja loope xchg and add xor mov sbb mov in xchg sar or sub and daa (bad) fistpl into lahf or or inc mov out lock push cmp fiadd bound icebp fistl jne mov jg xor push sub enter mov mov aas mov das or (bad) inc dec push data16 icebp pop sbb in cli jo mov push cmp daa fcomps js movsl into and jp pop or adc mov dec mov aas divl pop rol fist sub adc jnp pop fcmovb aam dec jle push lret cmp jp or cmpsl pop rcll sub xor int3 call scas sub aam repz adc mov lahf add lahf mov out or mov or aaa add int3 lock cmp sub mov cmp pop cs ljmp pop enter pop lret negl icebp lcall inc add mov or inc mov and aas push push jmp mov scas fdiv add push xor scas lods in cs xor aaa std xchg sar (bad) jmp mov mov addl aas dec sti xor and sub mov jbe rsm mov push (bad) dec (bad) fucom outsb pop fsubrp gs out int test (bad) xlat xchg xor ds sub imul xor mov bound jne pop inc (bad) sub xchg in add shlb dec test mov sub lods dec jns out dec rcll pushf mov xchg pop js or mov rol xchg loopne mov xchg mov dec cmpsl rcrl cmp adc add xor test xor dec (bad) fs in jg test mov add fldcw stc (bad) divb cli xor jmp or pop (bad) (bad) sbb leave dec xchg mov adc test fsubs sub xchg lret mov pop push and cwtl dec xlat test add mov cmp xor je lret sub xor pop inc dec mov mov mov std in mov sti mov fadd add (bad) lock mov outsl jmp mov pop sub xchg inc (bad) or jge add hlt popf fnsave das jmp icebp jno xchg lret mov add dec mov add sub es xor mov sub test orl push les shr xor add negb aaa pop and ds rcll aaa sub xchg std mov push rorl js pushf fs pushf xchg scas mov les and mov or repz repnz cltd stos lret loop or in out mov sub pop mov and jmp mov lea cmp les (bad) cmp or arpl jns mov cli xlat adc sub xchg dec and pop add (bad) lcall and push push cwtl daa sub inc dec rolb gs or xchg adc mov aam and push dec and repz dec sub test bound orb enter leave (bad) cmpsl and mov loop ja call (bad) ds mov adc cltd insl movsl xchg (bad) xor ss repz inc cmpsl std xchg mov jg xor (bad) sarb leave jg jecxz seta stc pop push aaa push mov xchg enter psubusw add lea movsb dec and ret mov out inc push ja stc sub sti or aam stos call mov mov sub outsl iret and ret mov popa popf push lods dec repnz clc mov sub xor sub mov movl and imul push sub (bad) jne adc cmpsl and fldcw cli xchg scas sub xor leave test movsb mov inc mov lods iret mov dec pop push mov mov or pop mov gs pop and xor add outsl lods jne push pop mov cmp dec adc xchg stos cltd or push or mov sti movsl inc aam (bad) lret mov jmp add mov xlat sub push and mov icebp cmp xchg out lock in dec icebp pushl sub add clc outsl mov mov or push sub clc out mov sub out jp pop stos push mov sub or and negl into mov sub out and je je clc fiadd sbb mov cmp or push cli pusha add jl or pop inc es jno into pop sub shl add add popf lret add enter mov lock dec xor push test or mov loop jns in mov (bad) fwait (bad) and mov sub test (bad) icebp mov out push inc (bad) or pop rclb aaa data16 and or pop lds and xor push inc (bad) shrb sub das je daa inc pop scas push jne aad sbb xor mov pushf push and cmc mov ret push pushf xor mov stc lahf aam out pop adc adc arpl aam int xor xlat and xlat dec mov xor mov and inc add es fstps lret mov xchg jecxz dec mov ds pop mov notb bound loope in aam jmp adc sbb sub dec jp and rcrl push jnp mov loopne jmp cmp test loope sub bound cs shr mov sub or mov mov imul enter shrl sbb dec fincstp popa sub in ret inc inc pop add in add ror jne out cmpsl jae xchg jmp or fdivl jnp flds repnz (bad) cmc fstps sub and mov xchg out adc or rorl and ret neg out leave rcrl mov mov lret inc sarb ret mov xchg mov mov mov pushl out push xor adc jmp push das mov test jmp sub inc or sbb push lcall cmpsb sbb hlt out sbb int cmp jno dec add (bad) push ljmp xor add sbb mov jno ljmp or mov or xlat xchg arpl xor xor in jbe push les push mov imull jno test mov stos aaa add repnz sub mov xor cmpsb dec rclb mov sti f2xm1 sub shrb aam (bad) cmp frndint xor sbb sti loop or xor iret pushl sub call sub xlat cmp add jnp (bad) xchg (bad) leave pop ja movsl lods jbe pop ret fsts cld bound stc das or pop in pop (bad) mov jp xor insb aad popa nop fbld sub or fidivl mov lea dec inc add jbe cli cwtl imul push js fildll add loop jae xchg add out pop or add inc clc cwtl xchg xor add xor mov mov insb sbb ljmp lds mov repnz out pop das lods pop jbe std dec in sub in and out sbb fwait adcl mov sub cli ret inc mul mov test fidiv int pusha test mov (bad) jo sub adc popa cmp or test sti repnz leave ljmp out mov rorl and int3 xchg into out mov xchg daa rorl xor out jecxz dec repnz or pop outsb (bad) in and inc push sub mul pop adc add mov aas pushf (bad) and xchg movsb mov adc pop int sub pop and (bad) xchg iret xchg mov xchg mov out call (bad) cld (bad) mov out test (bad) jle mov std lret pushl and pop scas add int loopne sub das stos fs xor shr repz imul jge add inc push xor ljmp sbb sub negb pop lods stos or les or push movsl cmp xor inc jo add test out mov outsl dec call stos fs test xlat adc or lods int jl dec scas into rclb pop jbe mov mov push add mov flds adc (bad) dec sub push add stos testb insb inc cli sub and cli repnz pop mov pop push sub test mov mov sahf shlb call jp (bad) pop inc pop ljmp mov orl adc mov ss sbb adc (bad) mov repz lea pop dec pop mov pop icebp xor add scas mov dec jmp jmp or mov rclb jb or movsl cmc int3 inc pop out loop rclb ljmp cmc lret or and loop sbb stc xor leave (bad) add push xor and xchg jmp aaa mov fldenv adc ljmp and jl pop add out mov das jle mov dec icebp movsb test mov sub (bad) pop mov jno pop sub jne or andb cs xor add mov leave fldl push mov inc or xor dec repnz add stos fisttpll insb inc xchg add std xor xchg sub pop push out roll or dec sub addr16 notb (bad) mov cs outsb push and int3 push sub jle and push pusha pop cmp comiss repz in and test jb out and imul or mov fs negb neg loopne data16 mov mov jl je push inc mov mov (bad) sub cltd adc fidivr inc lds out mov mov fstpt fnstcw sub and mov dec aaa dec std (bad) jne mov imul cmp pushl jecxz pop rcrb sub mov out jmp aam gs mov sub or sub sub dec push jl ljmp adc mov mov mov fisttpll bound clc and daa jae adc xchg and and push xor add adc mov add pop sbb or jmp aad std pop xchg mov sti fsubl add push arpl ljmp or into pop xchg fcompl ret sbb mov cli ljmp out jno imul cmp sub mov dec inc jnp cmp mov testb icebp sub adc sub sub mov inc out in pushl dec mov in sub cmp leave out or pop clc cmp jl jecxz and add repz int3 (bad) rcrl sarb mov lret mov bound ljmp sub rclb test ret xchg pop fnstsw mov pop out xor divl jae in call cs pop clc inc dec sbb mov inc add pushl dec lret jg test lret sbbb aad xchg movsl jg pop leave leave ljmp sub dec sbb pop ret jmp xchg xchg or sbb shr mov push mov leave pop sub sub or cmp jne pop jmp sub lds cmp dec pusha mov fsts adc pop adc icebp hlt sub movl ljmp pop divl movsl adc ljmp movsb mov rcll mov js ljmp xlat lds daa ficomp xchg inc xchg js lock (bad) iret adc lretw pop movsl shl test add stc xor repnz push insb inc rcll das mov pop cltd wrmsr and push adc pop sub fnsave xchg pop lret enter push jl shll mov dec add pop stos jl adc lahf mov add nop mov jl mov sub ficomp stos rol stc lahf jmp lods test das loope cmp xchg xchg jle mov jge lret dec adc add out xor outsb mov mov (bad) dec jnp out loop adc repnz (bad) mov ret mov or push pushf adc and sbb push mov xor pop sbb and mov mov ret pop or xor jge and jno ds sar adc jge int into sbb cmpsl decb das aam push mov jmp pop fxch add sbb out mov push repnz mov (bad) rcr inc incl push out xor xor cmc jl or push fxch dec dec stc add sbb adc mov pop push jl jne out loop sub lds or or test stc test add mov (bad) push sub push sub or add xlat xor xlat sub gs sub xchg xchg test (bad) mov jle gs sub leave ret insb and cwtl xchg mov sahf cmp pop inc mov add dec and pop sti bound lret push hlt adc imul add hlt test out cs out push pop dec fsts fsubl pusha (bad) (bad) xchg inc and or and rorb dec enter test xchg iret out sub lock sbb adcb dec (bad) fcoms (bad) push loop xchg test and je xor push xor popa jecxz popf jg cmp adc mov imul cwtl or dec into lret data16 dec orl (bad) sub idivl ljmp jns mov pop gs mov xor sub fisttpl aad in insb fisubl pop cli (bad) or loopne mov out loope sub pop fisttp test stc stc mov inc icebp sub (bad) (bad) sbb imul test jl fwait mov add popf sub mov xor outsl mov jns mov push lods (bad) sub popf jbe inc mov imul sub into inc push pop fs mov test inc mov dec mov dec push xor sub sub cltd mov push ss or es jge stos iret out divl leave iret push (bad) xchg cmpsl adc popf loop pop arpl mov push xchg movsl (bad) into arpl scas cltd inc loope aas mov mov jmp push xchg test mov cmpsb hlt mov shrl repz shrl stc out hlt and fdivrs repz pop xor jns inc or les pop daa jp,pt call jns add or ja push mov ret cmpsl push addr16 daa push dec je jge gs in or xor mov xor repnz out jb jmp in mov mov mov xor dec jmp adc daa or ds test mov stc out (bad) xlat sbb sub push cwtl and outsl mov sarl js mov pop push cwtl ljmp sahf aas xor aam xor sub in and or shrb sbb call pop lret repnz lock stos cmp push int (bad) cmp shrb jae fsts test mov data16 cmp adc es or adc data16 ds bound rcrl ja push and xchg out scas leave inc inc dec into pop scas and (bad) loop push fcmovnb movsl (bad) in call add clc sbb (bad) mov test sarb sub ljmp push jp inc out xchg mov into cmp loopne vmovaps jns mov mov ret push jbe jmp cmpsl in and mov (bad) inc dec or lahf jbe push gs movntps push mov jmp mov je jecxz dec (bad) xor mov jmp add mov push inc cli enter jmp pop xchg ret adc bound or testb inc arpl ficoml pop movl das stc jl xor cld lahf fdivs lret aas clc test sbb stc mov std sbb sarl ja popf sarl (bad) rcrl mov add movb out add and mov (bad) dec add inc into add mov out jecxz out mov lods push std shlb sbb ret sub mov cmp nop outsb mov add jg test in arpl jle cmp mov das (bad) or add std nop stos dec test jge sub xor loope (bad) xchg xor pop incl daa sub inc pop sub cmp call dec scas test or xor aas dec stos lret mov jmp jge popf outsb outsl popf cmp jns lods sbb ljmp fildll xor and das mov jge movsl aad aas into cs sub repnz add mov push aam push jne loopne insb mov pop out mov icebp add orl mov int3 mov sub xlat jecxz pop or mov add mov adc add or xlat testb (bad) lcall andl pop cmpsl int3 push iret xchg jle push push stc addr16 mov fcom pop into cld xor sbb adc cmc mov or push dec xlat ljmp add scas cwtl rolb mov popf xor xchg push pop into sbb (bad) xchg pushf dec (bad) das in jge mov rcrl pop mov mov stos (bad) pop bound xor xor sbb fdivrp inc sbb aas stc sbb repz sub xor dec ret mov xchg jae dec cld add jmp cmpsb or js sbb lret out das and out push lds jae sarb in ljmp fldenv test and pop es out lret popf pop add rolb repnz xchg mov mov pop pop out jo add lods scas pushf data16 ldmxcsr or mov mov xchg outsb lods xchg leave xor (bad) push repnz and stos sub pop jb push dec add sub lds mov ror pop in (bad) test xor (bad) (bad) push lds adc sarl xchg out xchg cmp std dec insl jnp jbe call push aad lock adc pop add stos mov xor adc dec sub jmp add pop in sub sbb mov push mov inc movsl daa push add ljmp bound jbe push jns lods clc sbb stos test lret jmp stos rcrb pop ret push jno dec cld cld cmpsb inc adc call push testl adc out push dec lods lods mov ja or xor jns loope sub test (bad) mov inc fisub loopne fistpll add xor sub pop inc mov out in nop (bad) xchg mov or scas mov dec clc in (bad) jl das aad out xchg jmp xor (bad) and mov lret or (bad) pop dec xchg cmpsb add (bad) jnp jne (bad) xor ljmp and inc mov add mov jae divl xchg xchg daa cwtl inc xchg test jmp in repz xor ret push faddl lret jle fildl xor jmp push mov add imull int3 mov stc pop xchg (bad) cld bound add and je gs jg (bad) mov xor mov test lods pop lods cmp out sarb and movsl jmp data16 lret rclb push push leave jbe lods jnp mov add andl push mov test xchg div das mov xor dec icebp sbb push sub out mov inc cli mov icebp xchg jl push add xor mov out dec pop and add or ja lahf fs out mov mov outsl mov push xlat push inc fs jmp sub sub and or insb and ljmp xor or in and sub je int3 andb sub std nop ficomp (bad) push or std inc (bad) pop sbb lret sahf jmp pop lods adc jmp in lret ja cli or jo mov mov and popa mov and sub mov enter pslld and mov int3 dec inc imul add ja mov sbb cmp jo and (bad) cmp fist dec push cmpsb shr int das test popf outsl push inc jp ret daa idivl dec loop cs cwtl scas cmp pop sahf mov jo xor sub leave divl jnp pop xchg je les mov out and test notl fisubl add or std inc pop push mov into push lret cmp xchg xor sub mov mov push push mov jmp and mov imul mov add sahf and dec and mov scas and add inc clc out inc push mov testl sbb xlat leave xor fnstsw add mov ret lret mov xchg jmp into dec dec or (bad) jne jbe mov mov std movsb scas push sbb je fnop out and sub ja cmp rcll inc sub test jbe pop out inc mov pop lock mov test lods fbstp mov jno xor sub inc leave mov out lret mov incl and into push pop lods cmp cmpsb mov loopne (bad) ffreep mov add adc xchg mov inc sub cmpsl sarb xor cmp inc (bad) jo addb xchg (bad) push jbe dec add sub push inc dec xor int stc ret jp out fnstsw mov ds shr inc sub movb dec pop call push pop mov hlt dec jb jmp and test stos cmpsl loopne adc jmp out mov add data16 lcall push or inc popf sub testb cld add pop ja or enter xor pushf imul lret sub repnz add insl mov sbb and push mov in mov sub or xchg mov mov jmp scas stc mov push xchg call iret and movsb cld jmp jnp aas push lds push xchg sub icebp dec sbb sub mov xchg loop sub outsb dec pop lcall add or scas call daa or ret loope mov stos mov jns xchg cld cmp jb xor pushf mov fs mov jl (bad) leave pop xor mov je (bad) mov dec xor mov push mov in push pop (bad) stc mov xlat cs xor movsb call iret stos sub or fsts icebp jg pop mov dec mov jmp adc lea or mov mov or rol and enter roll or scas adc ret hlt movsb stos rcr add mov dec ss mov dec mov lock mov add dec xor jecxz dec inc or cli mov leave divl sub jmp jae adc (bad) adc dec outsb rcr mov mov lret and adc outsb lds mov enter out pop fistl mov out sub ss push mov pop out je cli mov add sub add sub call sbb setbe mov push shrb push in (bad) xchg test das mov inc iret subb insl mov xlat into pushl les jne out cmp mov cwtl arpl and repnz lds push stc dec ret sub out sbb push cltd inc mov add cmpsl or rorb sub daa aad mov aaa imul aaa xor aaa sub push or jg sub rcrl push loope sbb adc and xor push aaa sti out fiaddl xor mov cli dec test popf mov inc mov xchg pusha xchg outsb pop insb cmp sub fsubs add mov je mov sub cmc movsl jo loope pop xchg (bad) jnp and popf (bad) xor sub lret cmpsb cmpsb xchg sbb (bad) xor (bad) popa push (bad) mov jb sbb repnz stc pop test call cltd sahf jl mov sub or jbe mov inc lods aam in stos fldlg2 cmpsl (bad) jne xchg add shr loopne sub mov pop mov xor popf inc adcl cmp test lcall icebp fldenv insb (bad) or xchg cmp add nop jo jmp insl add int sub push mov jge std loop push notb pop (bad) dec mov je int and daa (bad) adc sub sub pop add pop daa and (bad) mov rclb leave mov xchg rcrb mov clc clc and inc cmpsl push mov pop fsubrp (bad) out and mov mov dec dec mov pop sbb dec (bad) clc out xchg add inc push pop outsl dec enter mov mov daa add adc es int3 mov popf jge adc (bad) (bad) icebp push out das or sti out jbe dec fwait cltd xlat cmpsl (bad) xor (bad) jmp jne repz adc fldl2e xor adc xchg fdivrp dec pop add idiv dec cld ficompl dec adc add or adc nop adc xchg inc cwtl and (bad) enter add and and and scas in push shl or lret inc (bad) (bad) or loop jl leave ja in cmpsb fs add mov lret add test (bad) incl pop lret or ds clc inc repnz and add mov add fisubr imulb mov mov in cmc iret hlt sub add add stos iret cmp out sbb and sbb mov negb lods in sbb mov adc dec repnz push les mov jl jl xlat inc in movsl cld xchg imul mov (bad) mov das pop push add clc fisubl pop jbe adc add int3 jl dec or adc (bad) (bad) neg mov stos popf or daa cld cltd les mull test sbb cld cs into ret lahf jnp cmpsb xlat push jmp clc in movsl mov stc mov rol mov and imul cmpsb mov jae mov and daa mov cmc mov out pop mov adcl push jae jno adc dec test sbb xor mov inc ss xorb xor das out sbb add xor and xchg lds dec iret jmp cmc inc (bad) xor ja xlat xor into jg push and inc dec add push xor sbb inc add (bad) xor (bad) negb add pushl and cwtl inc adc dec and pop push fcmovbe and xchg sbb loope jnp fdiv pushf test (bad) mov sub gs sub sub dec mulb dec jg sub cmp pop jmp cmp adc adc mov adc and js fnstcw out sbb repz or (bad) adc cli out pop xor out sub xchg sti imul inc shrl cmpsl int3 dec stc jg aas xor repnz (bad) in push or enter icebp popf aad sub sub push sbb add stc mov inc int3 bound pop icebp jecxz rcll leave xor clc and mov pushf push fimul mov cli inc into test ror aad xor cmp add out xor mov adc xor clc in in in xor fldcw stos adc dec into rep pop mov xor bound push bound fidiv pop test xchg popa jnp cmp sbb cwtl lea rorb add or leave lods cmp mov jnp mov lret jbe lret inc idivl and xchg pop and and sub out mov xor mov jns lods loopne sub add mov fsubp and mov dec out fstps loop test movsl push or sbb into xchg pop or repnz xchg out sub stos cmp stc add movsb mov enter push repnz test mov add std mov (bad) out cmp fisubr xor imul imul (bad) cmp ds hlt inc and jne sub clc push cmp fldcw sbb (bad) mov bound pop jns dec jnp addl sub daa jmp insb lahf mov add add je std cmp fs xor add aas test mov push jns sub xor outsl cmp push int3 adc or mov pop mov (bad) mov leave scas cmpsb (bad) pop stos cmp daa icebp push jbe out int jnp push lret clc cmc sbb decl or add fdivs (bad) and icebp xchg push jmp push test stc mov repz xchg and push (bad) or jmp (bad) push and mov mov cld call rclb pop sub ret hlt jbe out das negb mov loop call mov sub mov sub imul (bad) xor negl icebp adc mov mov xchg and jno and inc inc pop jae (bad) cmp out inc (bad) or pop xor (bad) and les add enter mov push mov xor or sub xor jnp mov jmp ficom or and push fs xchg xlat sbb fwait xchg sub sbb and fs repz xchg pop inc popf nop add xor les mov mov and and sub xor and into xor in addr16 or and mov jge enter adc adc lahf pop lcall and and daa icebp and lcall lods scas and scas adc and in dec push pop or pop cmc adc dec out cmc shlb ror repz sbb sub xchg add mov mov add flds fnsave push lret or ret out divb test sub dec inc popa ret adc mov in xchg lret scas bound (bad) lock inc test scas pop notb (bad) rcrl adc jecxz sub cmp or xchg dec cli popf mov pop cld and push pop sub sbb jnp add and scas mov push fs jmp test movsl ljmp adc cwtl cld mov ret and sub fdivs push mov push mov gs cmpsl aam gs xchg inc pop fld outsb loope sbb dec lds mov dec sbb pushf jl ss push test imull popf stc orl xchg cmp sbb sub xchg outsl xchg or sti adc jg daa adc sbb mov addl (bad) lret fstps test and sbb insb out mov mov mov int movzbl jbe icebp mov (bad) cli sbb incb xchg add rcr pop dec push (bad) lods dec xor (bad) out ds sub jg dec jg or jns mov or sub jno cmpsl (bad) (bad) or int mov (bad) mulb or push xchg loop add or and mov ret mov stos xor (bad) or ljmp addps es rcrb adc mov jo scas jle jb roll push xor add mov aaa sub pushf add inc repnz push xchg mov insb int3 or push shll daa sub cmc or pop dec cwtl outsl divps sub xor cmp push adc movsl xchg adc daa in push xchg push ja out adc adc add sub push add mov sbb push push pushf mov sub sub push iret sub xor fcoms mov jg std xchg stos call push ret xchg and push dec xor adc rorl sti test arpl test test and inc out and dec push inc xchg cmp jl mov into dec sbb push push mov out pop (bad) and cltd adc cmp lret or ret xchg or jae pop shll dec sbb sbb loope cmp sub sub ss outsb das jl movsl pop sub xor pop xor daa andb pop dec and loope pop ljmp pop sub leave xchg popa je cmp ja repz xchg fsts stos sub mov pop xor lds jg popf cld jg popf xchg adc (bad) adc dec push fadd pop repnz ljmp mov push (bad) jbe idivb jne mov pop xor mov and out repz shl cltd sbb into popf adc notl jecxz xchg sarl inc loop mov dec cmp add add loop add push cmp mov sti ljmp mov das fnstenv out push push jno movsl ret lret in inc jg pop sarb adc (bad) fs test stos mov mov inc mov add mov mov fs jmp out daa mov sbb loop stc jne mov xor sub repnz mov push pushf mov int es jb test fiaddl jmp stos mov pop jb rolb les jmp dec into mov sub add pop test fimull add loope lret sub jno outsb out flds stos xor movsb in dec orl mov adc xorb insb push xchg push inc mov decl inc sub ror stos lret sti xor xor xchg and lret in divb push data16 sub ja xor arpl lds daa jg mov divb outsl push xchg pushl idivl add sbb and fmull push (bad) jl push (bad) mov pusha pop mov xchg sub pop cwtd push cmp or or sbb jle pop adc push push adc adc mov lcall imul pop inc movsb mov roll sub sub mov je dec add mov roll sub dec div jnp fildl push jbe dec icebp jns inc ret mov adc mov lahf jle popa lock sub mov xor pop (bad) (bad) jp pop roll cmp leave or mov mov mov es dec xlat inc leave mov xor icebp mov lret loop mov jo sbb mov ret stc call test cli popf xchg cmp add push mov cmp cld dec mov (bad) out aas icebp pop lret cltd das ret sahf loop inc sarl lds xor out pop test mov pop call or sbb lock push sub ljmp test jp ljmp dec add jb push dec pop ds xchg sub test ret add cmp ret dec into clc inc mov inc fs out jmp add sub lret mov (bad) cmp bound sub push xchg testl sub cmp dec and cmpsl hlt sbb (bad) mov mov and out je decl ret cmp adc jp fs inc sub mov fs ja jg es mov pcmpgtb fisub jmp scas fmuls adc and mov imul (bad) imulb (bad) mov dec (bad) mov dec pop into out sbbb fisub jmp pop jns xchg ljmp mov aaa cltd jmp mov test (bad) mov mov out adc push dec ret (bad) sub data16 hlt (bad) popf outsb and pop or cli fwait push lret jp loop in adc jecxz shrb fistp add pop and ljmp mov sti or les test jge cmc mov fnop lds in imul (bad) mov sub mov hlt or stos (bad) mov shrl imulb into mov mov or sbb push cmp (bad) movsl mov lret lods dec pop xchg mov enter mov jge sub icebp xor cmpsl cld dec (bad) rorl xchg test sbb out and or add ret xchg or (bad) sub pop insl xchg iret add inc push popa in lret outsl sub xor dec sub xchg sub test pop or ljmp in lret or adc mov pop repz out mov mov daa idiv mov jecxz xchg mov mov xor ret xchg testb movsl js pop icebp xor mov in or and call dec imul sub cwtl add sbb rclb push mov loop sub add pop or jle vxorps outsb mov and popf ret cmp outsb pop leave int cmp out jp mov mov inc pop das in and and test xor scas loop (bad) mov pop mov repnz jecxz aam pop lret ret (bad) cmp push enter and (bad) out imul pop sub out es jmp movapd jae,pt cmp mov jmp and xor xlat imul push xchg mov lea push out sub and sbb push xlat pop ret push cmp push jle (bad) shlb push mov push pop cmc and pusha outsl shr cmp int jmp sbb aad mov sub mov jae xorl xor stc ds orl inc pop (bad) jbe add push mov lock mov (bad) adc (bad) sbb (bad) mov inc (bad) clc mov sbb outsl cmpl idivl rcl inc mov cwtl clc or mov jecxz dec adc or add mov xorb xchg push or mov push add cmp (bad) sub pop sarb mov dec sub and xor test rep add das jle mov sbb cmpsb imulb add call push push sahf mov jg flds es call adc push mov mov cmpsb add int3 ret popa pop fwait ret mov pop adc outsl dec arpl or push mov pop push aam sub sub adc test push pushf push stos push pushf pop inc frstor dec cmpsl push dec mov or pop push out dec adc push or mov sub nop out xorl cli cmp loope cmp leave and sti xchg iret cltd jno sarb fdivr rclb iret test lock xor jbe or push mov or icebp sbb push jecxz sub xlat jp jb repz push pop jmp sub imul mov or (bad) jb popf aam (bad) ss das bound (bad) daa xor fsubrs dec jmp jbe or and jge push mov mov orl loop fstl subb sub fisttp or mov add sub repnz cmp xor xor (bad) in int3 lds and aad jb lcall or out adc sahf repnz in mov stc add loop sub xchg cmp inc or dec sub sti fs pop rep lret add pop bnd cmpsl shl (bad) jmp pop lret mov cmc stos inc (bad) std ret repnz enter popf mov sbb orb lret clc xchg dec mov xor sti out pop jno xor sub mov xchg je push out sub popf xchg push mov mov loope or out pop mov sub rcr push adc fs (bad) in sub and sub xchg lret push dec int ds xor loope sub movsb jmp int3 (bad) xor sub mov jg jl daa pop outsl ret and sub scas cmpsl lret getsec xchg scas dec popa fmuls decb push in sub fwait test cmpsl push ljmp pop mov push mov std shll stc (bad) lret stos mov add int cmp fcmovne pop pop sub out inc jg pop mov adc mov jecxz xlat test pushl sub addb or and xchg repz add mov hlt mov icebp pop fucom mov fsub pop jg repnz or inc mov int loopne or mov bound mov addr16 inc into pop aas sub loop pop lret icebp pop fsubrs (bad) daa jl popa call sbb jne enter popl repnz (bad) movzbl mov ja in mov gs or rcl popf sub xchg sbb ljmp jae xchg push or lret jl fs or adc pop push mov jge dec daa or (bad) jne add and mov mov in lret add je sub cmp pop fsubr xor (bad) (bad) pop xchg (bad) dec ret fild push xchg sar (bad) push adc sub xor imul dec sbb xchg mov sub or lahf daa and sbb mov mov pop icebp cli sub sub pusha shlb (bad) sub dec ret fcoml mov jbe cs mull scas loop xchg mov lret lods push push (bad) sub push aas flds (bad) mov leave jb (bad) in xchg les ljmp pusha imulb add fwait xchg lock insb loop jecxz xor imul xchg and ja int3 hlt stos frstor pop insb inc dec repz out push incb fdivs jmp int3 mov push xchg es (bad) or lods inc cli and outsb fwait test xor cmp pop mov mov mov xchg gs data16 outsb add ja cmp jl sbb push xchg push negl clc fbstp stos pop xchg fstl xlat daa mov jle leave sub lods ret (bad) xor (bad) es imul mov lods scas jae loope movsl aas and pop scas dec loop aam rol and xor mov sbb mov fs jb pop and (bad) fmull pop fisubr mov stc add mov inc enter jle daa ja stos subl xchg dec repz mov xlat dec cmpsl out sub (bad) iret add sbb mov cwtl std out dec mov lahf push pop inc or (bad) stc jb (bad) fsub sub xor sbb dec std push shlb call and xor and ror cmp jb cmpsb push nop (bad) cld mov cmp stos pop mov imul das push (bad) or fsubl adc sub stos popa repnz cmpb fstps add inc jmp mov jmp in mov jmp fimul test sbb pusha dec mov addr16 pop sub and inc iret (bad) jno or outsb add icebp std outsl scas gs pushl or das pushf mov mov pop or jbe pop stos out inc pop mov inc dec inc stos cmp add cmpsb daa out sbb jno fwait imul add mov push (bad) out sub push (bad) cld mov imul add jno cmpsl nop push in add insb push mov idiv mov popf std insb pop mov loopne add mov fs out fldl outsb push mov imul popf cmc sarl cmp out and or out xor and xor lods or and iret in cs or fldt cmp add pop adc aam call ljmp outsb pushf lock lock lret fcompp scas je jb mov mov loope (bad) jge addr16 mov sub add cmp jmp repnz sbb adc xor stos and mov pop adc pop ja aad cwtl aam pop (bad) into outsb cmp cli das (bad) je stos in xchg jbe push xchg aam (bad) push fwait sbb and (bad) lret cmp cmp mov pop pop pop pop pop pop popf stos int imul fadds rcll jnp das fcomps jmp loope inc sub stos pop shld insl and mov mov sub popf gs xchg or (bad) ja movsl pop lret push sbb xchg lret push jo int3 int iret pop xor push or sub fstp inc sub mov inc mov mov fidivrl sub jge dec (bad) xor ljmp sub cmp shlb and shrl gs cltd ds mov sbb jmp jmp mov jbe jg push jle add test in mov gs xchg pop (bad) scas fmull mov inc (bad) int3 lock xor sub pop std mov popl mov test xchg mov mov lret out lock push ja test sub inc dec mov mov jne jmp jne and nop dec imul mov das into mov jle sbb loop dec mov jl insb push mov jge push xchg pop mov and out gs jecxz lcall out bound andb or ja imul push mov icebp add jnp into fisttpll sti popf xlat movsb or ret pop jmpw rorl mov stos cwtl cli repnz push movsb or cltd cmp and mov bound sub bnd out lds mov add (bad) jp sub dec in jo out imul adc push fcomps repnz outsb pop xor (bad) in or adc mov lret stc daa sub or adc popf (bad) and (bad) and push xor add cmp push add mov xchg adc push test cmp and repz mov pop lcall add sub xor gs clc mov les (bad) cwtl popa ljmp add mov dec xor test cmpsl mov lock imul mov shlw (bad) leave fcomip sarb scas sbb sub pop mov (bad) jle insb mov idiv bound adc test xor int3 or pop mov dec decl leave aaa imulb adc or cs sub or das cmp pop push out jmp ss (bad) repnz xchg out or testl and xchg ljmp cmpsb je rorl and pop hlt cmc push lods cli cltd int3 pop aaa ret mov in mov xor pop fldt and sub mov xchg loop mov xchg scas dec inc add adcl sbb xor add movsb add mov xchg adc fisttpll pop sub add nop sti xor lret inc lahf adc add adc and or cwtl negl dec cli inc scas test stos lret jge out (bad) idivb scas shlb jle and push cmp movl fdivrs lock push sub mov sti cmp or std in (bad) and xor jge and sti in mov push mov xchg cld lret lret xchg mov pop jbe mov or jns inc add add call dec mov pop scas (bad) mov add lret sub mov pop loopw aaa ja imulb int3 mov inc sub loop or jge inc dec call or push jo loope (bad) popa mov leave jp xor fldt pavgw xor stc mov pop sub aas xor repz stos fs adc pop jns (bad) sbbb xor cmp insb dec shr pop jp sti addr16 in inc repz lods mov int3 add stos mov pop mov dec jb or jmp xchg pusha and and lds fildl push lock adc (bad) fstl dec xor pop cwtl push cmc inc pushf movsb jo movl push imulb push add pop addr16 dec ja stos aam (bad) inc pop cwtl pop jecxz mov sub mov out pop cltd pop das call mov cmp shl js or inc popa roll push ret xchg xchg and fstps nop lea push rorl cltd ljmp out rcll jl,pn mov jne stos jecxz and stc or js lahf inc dec das adc arpl repz lods adc int sub and adcl gs or pop inc mov xchg mov add xor gs xchg xchg mov add jbe rclb or xor sti mov shll push dec pop cli negl xchg jne push jg jne sub fbstp enter push std xchg iret mov dec rclb aad sub dec mov and dec sbb test stos lcall xchg (bad) out sbb xor and pop adc lods (bad) movsl scas add repz jg movsl mov mov icebp dec imul push bound sti mov jle pop out xor sub mov adc push mov xor data16 arpl inc dec pop idiv sbb mov adcl xchg ret bound fisub and pop pop sarl and movsb stos push or nop cs rorb mov in stos mov cmp sub fucomp nop add aad lcall aam mov and add scas repz mov in subl add sub cs sub or jle sbb negb daa sarb testl loop mov das iret shr insb or loope sub jns mov mov add xor fsts mov fisubr pop fildl sub ss xlat mov clc mov pop test pop stos mov (bad) dec pop lret das push lods bound loopne sub jge add in pop sub repnz imul clc pop fcmovne xorb mov pop stos cmp cmc xor xchg rcr pop mov sbb push add jg enter daa jle adc out mov lret insl dec cmp call inc icebp and scas repnz (bad) icebp sub fstps and stos jmp adcl nop push stos sub and xchg jo int3 es mov cmc fldcw xorl dec aam loop push push push push popf push dec sub lea push and adc jecxz xchg stos ffree dec add push testb stc xchg daa sub lcall mov or xor pop lea sti cmp loopne inc lods dec xchg push jge imul xlat inc (bad) mov sbb and jnp lods lcall (bad) out pop adcl jbe or and mov movsb pop (bad) lret adc pop mull call adc repnz add push shll lret mov xchg pop nop loop cli inc mov push jge ret in xchg bound fadds movsb leave jmp lea mov fdivr sbb cmp jmp inc pop jmp call dec sahf pop shl adc cli cmpsb movsl adc lcall push bound stos sub jb divl or pop and sub test dec xor cmp add ja and push inc sub jle push pop adc add in fdivs push pop xchg sub pushf decl push adc inc jg shll add rcrl push dec push popf mov loop repz cmpsl (bad) push sub inc sub jb pop lret and data16 fidivr jge jb,pn jne ljmp mov sub mov dec outsl shlb dec imull dec mov cli lahf test mov xor dec push flds rcrb mov cmp lret addr16 xor push sbb fwait jo lea fs sbb mov pop loopne fidivr sbb call jne push pushf mov dec mov ds or sub icebp rol sub icebp push (bad) sub or xchg ret stos adc mov dec jmp loopne xchg movsb dec and test mov sti das or rcr sub cmc icebp scas xchg cmp outsb adc add pop push les out (bad) sti push xor rorl test out mov icebp and push or mov add add cld lods (bad) lret pop mov out in jl inc imul mov lods ret lahf push xchg lret jge add push out sbb stos pop jne inc add push sar stc jge shrb pop in sbb data16 jb leave dec mov jge lcall jp in pop and (bad) (bad) mov divb xchg mov insb or ljmp ja and sub ret or pop in or repz cmp bound ja ja rcrl xor sub mov fstpt popa xchg cli repnz xchg in out mov or imulb add lea in movsl inc jl ljmp pop push pushf xchg fs xor add fistp pushf pop xor cld ret cmp fnstenv mov xor sti out xchg jno imul mov fmull call std gs movsb xlat es or divb pop adc out inc xchg fisubrl sbb mov adc jmp (bad) or iret test xor jmp out loop fist mov pop mov int3 outsl push mov fadds cmpsb (bad) mov pop outsb jp lock lock out cmp das add sbb shrl idiv rcrl lds mov stc jbe mov out dec out jno out pop outsl icebp out cs cmpsl adc fisub dec leave xchg (bad) (bad) push xor xor out ljmp loope jne push lcall stos jb out xlat jns inc sub jns xchg (bad) lret in test xchg mov pop mov sti sub movsl xor mov dec pop adc (bad) loopne sub in push icebp add stos mov out push dec (bad) (bad) ud2 push cmp push (bad) rolb pop das inc dec mov scas adc out dec icebp lds push enter mov add pushf xor and xor scas cmc test test cmp lods push sub movl mov sar mov aam pop dec mov jmp dec (bad) aad inc mov pop jno dec and xchg sarb add jmp push pop std add repnz lea nop push dec mov insl inc scas xchg inc mov or mov fnsave lret pop add mov daa loop (bad) jmp and ret push pop sbb sahf adcl xchg mov add (bad) push sbb sub mov in mov and fsubs adc sub sbb std cltd adc (bad) push and pop into mov (bad) lods mov sti mov mov mov mov pop lahf pop and sbb ljmp out add lcall fadds (bad) and pop add in xchg leave inc jle add sub sub stos dec aaa add xchg scas test (bad) mov rorl popa sub daa insb insb xchg rol mov sbb jp scas decl (bad) jno push shrb mov out adc fsubrs mov pop mov cli flds clc repz add pushf jne bound clc imul lret mov (bad) (bad) push mov ret imul sub outsb mov std mov inc xchg xor ds add (bad) loope inc adc mov mov mov lods ds mov xor arpl stos ja inc lahf or mov leave fbstp es stos pop fld adc cmp stos lock push add pop loopne out push ret je stos arpl in loope in dec pop jmp fcmove jp cs outsb xor xor pop in pop mov js fstpl xlat int3 sbb pop or (bad) mov testb xchg es scas into jb push out jp xor icebp mov fwait test mov icebp cmpsb imul dec mov mov fnstenv clc out bound inc hlt inc fcmove inc sbb sarl mov pop inc or shll xor es sub hlt mov jmp mov daa pop repz pop cmc pop cmp in dec add fsubs dec (bad) xor out mov pop adc mov test fucomp sub mov inc push push adc push mov pop ret pop or xor jns dec sub jge stc les mov push lret mov xor push pop fistp jg push sub pushf repz cmc pop add xor pop scas (bad) out js mov leave sbb jg movsb mov stos cmpsl out outsb lahf inc cwtl push pop rcll stos lret jne and xchg cmpsb cli clc xchg clc movsb pop and in ljmp idivb jns xchg shr mov mov xchg inc lret jmp inc xchg mov arpl add and sub jmp pop (bad) in (bad) and (bad) mov or out push into pop and ret jge mov cmpsb mov shrl cmp dec cmp jne push mov iret jle cmp rcll cmp dec push lods adc loop or sub aam lods (bad) push push pop ds jg adc lret das inc dec inc cmp (bad) jp (bad) mov ret (bad) sbb je pop fsubrs stos jmp push das (bad) aam add cmp adc pop xor mov (bad) lock xchg xor (bad) out pop icebp in dec push roll dec fs daa add push jmp cs in pop mov push mov jne aam push call push popf fs sti into ficoml das xor inc popfw hlt scas jmp push dec sub mov pop and les orps jae and adc mov lret xchg cld ficom sbb cli or adc adc scas fnstcw test mov icebp adc movsl inc add in lock xlat cwtl stos repz mov jmp sbbl and rcll (bad) int3 cmp daa fld out (bad) ljmp dec loope mov jecxz add mov xor mov rclb xchg icebp xchg loopne fbld xlat mov adc mov sub mov jns adc (bad) pushf lcall adc je cltd jmp mov mov sarl out pop and icebp or rorb add cmc mov aad sahf dec jno mov lock or sbb add in pop ret mov xor jge xor lahf mov cmp mov pop lahf jecxz add push mov not sub pop add pop xor out or push fist or repnz mov cs pop pop js adc andl push (bad) sub jg pop pop pop push mov xchg jecxz movsb aaa xchg out sbb push sbb mov pop push mov cld insb and or pop out jl pop mov sbb add (bad) push jg jns push fdivrl aas mov orl push popa pop pop or sbb mov sarb inc sbb or sbb pop sbb fcompl and lods test sti mov inc push outsl (bad) aad or adcl jl add std pop mov (bad) es push out push add popf subb jge adc cs add fadds addr16 jae sub pop inc inc jg add inc (bad) rep mov repnz push push nop femms in mov int3 add pop rcrb repz mov ljmp push pop pop not xchg ret and addr16 pop mov icebp mov fidivr into pop or in dec push stos lret in mov rorb mov je outsb arpl inc sub jle ss lods sbb orl in add in dec or pop and mov add add popa ficoml leave jnp add jp aas outsl jp aaa fldl add and sbb pushf ret stc push add sub sub rcr scas repz shrl add add les test xchg loop or sti jg aad cld lds pusha sub jle out xchg dec inc addl ret cmp jmp mov push es pop jne orl pop test mov lcall shrl rdpmc pop cmp dec lret inc insb push ret das repz pop pop inc (bad) and mov push cmp stos and jmp scas (bad) std or std sahf (bad) or divb mov dec (bad) cld adc xlat movsl loop lret xor dec (bad) push dec mov neg cmp xchg adc cmp jp imul adc lods cltd movsb test adc xchg lods sbb sti lret adc mov jmp fild add mov mov mov or fdivrl and in and add out and ljmp jecxz dec mov ss (bad) xchg pop push or dec lcall add outsb lock std loope and (bad) xor add xchg (bad) cs xlat xor clc jg mov loop jle mov xchg ds xlat xor sub cmp daa lock add fisttpll or stos fs lea imulb dec push xor cli fs stos movsl xchg cmp (bad) mov cmp icebp xor mov aas cmp jmp lock mov daa repz pop adc mov xchg daa loope ret outsb or mov out divl int jae pop add cmp scas mov push jp add aam sub mov gs and pop mov insb xor leave jecxz rcll daa (bad) leave jb cmpsb je imul push dec jo xchg pop xor cld stc mov mov ds dec enter mov jmp pop sbb sub (bad) lret rcr jno sub xorl or pop out test daa rolb nop inc xor (bad) sar ret repnz mov or and add aad stos repnz shr mov add dec push cli and push push ret gs das inc xlat fldenv adc movsb imulb and outsb int or loop movsb cs push into lcall mov mov pop sub testl cmp jmp call es ja aad mov add in mov (bad) xor sub jb (bad) rcll or push das or lcall jbe ret sti push movsl aad xor in ret cmpsb ret adc add sub xchg xor (bad) cmc xor imul into dec neg loopne (bad) sub or dec lcall jo add mov cltd sbb lret enter sub pop pop and in dec add call pop nop (bad) sub pop mov nop mov mov push bound dec jmp xor xor xor pop das and sbb jae or push repnz xchg (bad) fcoms sub adc aad adcl push (bad) fisubl repnz inc mov mov pop add scas sub ljmp push lret mov repz rolb sti adc cmpsb xor in in leave mov testb xchg adc fsts mov stos aad ljmp mov sarb movsb scas mov adc push call mov mov cmp leave jmp rcll dec jns das les adc jbe adc clc or sti sub es push (bad) ja jmp lret mov loopne aaa sub out loopne mov gs ljmp fucomp sub call push pop pop insb dec in test test lods mov testl adc icebp arpl into adc iret popa mov (bad) dec dec sub arpl insl mov jb,pn adc xor (bad) in inc or hlt or sbb cmp in add jge lret xchg jmp mov fidivrl or dec out inc je loope js pop ljmp cmp (bad) call xchg insb negl mov je rorb out fdivs je and insb mov inc add mov adc and pop mov mov pop or jecxz xchg scas push mov pop and call sub xor stos lea jmp test ret (bad) sub or stc sti mov pop inc mov pop add xorb mov mov and ret icebp cmp mov xchg dec ret mov mov dec (bad) stc lds popf fistpll popf sbb cmp cld stos mov (bad) lock cmp xor jne nop xchg (bad) out dec jl fs jmp sub div (bad) (bad) shr int jmp jmp sub xor into nop cmp shl lret mov jge call xchg xchg cmc leave out sub (bad) xor push xchg mov popf fsub jb pushf fcompl push lods xchg lcall movsl push push xor add repnz xor mov ret jecxz fsts sub lahf mov into cmp loope inc mov adc dec mov lahf hlt lcall stos je int3 or (bad) inc jns mov dec (bad) mov xchg decl sub jmp stc mov das jecxz (bad) cltd pop lods adc mov cmp xor fnsave dec pop dec sbb (bad) mov or pushf push ja stos imul and inc push aas sub fldl2t cltd jle add rcl jp pushf cmp call in jo fsqrt and adc mov lret dec sbb mov loopne push outsb mov das or jmp lcall lret and es or in jo sub xchg (bad) mov mov stos cltd pop scas dec jge into lahf ret stc sub cmp xor loop or sarb mov fnstenv xor sahf push pop xor cli fincstp imul lods push out jge xor sub dec gs adc in dec test lock sarb push cs daa xchg out dec and jb dec sub movsl add incl adc add mov insl js dec iret mov rol sahf (bad) adc cwtl ljmp sbb scas (bad) jb mov add es pop inc and pushf inc xchg ret or pop xor inc mov add jecxz mov jg jb aas xor es movsl push mov and movl and fnop (bad) movsl mov mov sub sub push mov aaa push xor shrl icebp sub and mov pop cli or ja cltd and or aam sbb cwtl lods sub mov sti int3 mov add aaa decb mov fild adc jb dec (bad) mov je idivb sbb mov ljmp jb test arpl fs call sar dec mov (bad) mulb jne dec clc ljmp lahf hlt inc bnd pop aad out daa add jne sbb test je fistpll dec jmp push dec sub dec push or lea xor mov push enter lret (bad) ja push ja jb es call mov sarb mov push mov push xchg dec jl loop or inc xor push add into inc jae pop or dec pop mov dec or xor mov in fcomi sub sub and sahf cltd call ret or push bound lret lret fxch push cmp ret (bad) cmc push or mov and stos push pop rcrb add dec sti fdivrs dec iret ljmp (bad) cld clc push out inc loop xchg adc icebp lret pop add jae mov pop dec jp or ds addr16 mov lret cmc outsb popf pushf jbe call fwait sbbb lcall mov rcr inc or (bad) into pmuludq xchg lcall push xor xchg scas sub sub xor repnz xor clc add mov sbb das pop sub jo loope fs mov (bad) jns arpl stos jb pop jmp dec dec stc cmp pop or pushf inc add sub cmp sub pop inc cmp pop fist push (bad) addr16 dec movsb out cwtl (bad) ficompl scas push mov push cs dec mov stos fmull mov negl push and ret ljmp out and scas stc daa (bad) jbe call pop jmp repnz fistl sub lock mov sub movsb test into push pop and pop mov cltd in xchg xor cld push add pushf mov push dec test (bad) and inc pop pop mov pop mov xchg or mov and out sbb ljmp das jnp and dec cmpsb sbb popf movsl repz enter popf sub (bad) sti in dec mov ffree jp pop daa je (bad) idiv mov xlat stc popa dec push test (bad) decl repnz sbb sahf add testl add adc cli je (bad) hlt aaa lcall mov dec (bad) sub and sub stos mov mov xchg leave aad inc cmpsl push xor stos push fdivrs sbb clc mov mov push shrb dec mov rorl or aas test pop scas addr16 sub mov jbe jp rcr mov and dec mov mov pop xchg cmpl icebp push in xor mov cmpsb adc add stc mov notl or mov dec push in rolb mov dec cld pop and cmp aas shll popl fild pop jns scas test xchg ret push (bad) mov ficom (bad) movsl cwtl mov xchg cmp jle in lods jl jmp mov ret push sub lret xor push lds pop xor and mov mov jp inc mov dec fsubr idiv add scas lret jo div cs (bad) push dec mov add rorl and xor (bad) and (bad) rorl xchg mov into mov inc lcall inc dec add fisttp sub and push or push mov call bound aad (bad) inc mov xchg mov imul adc xchg enter sub sub fidivr sub xor leave mov pop aam pop xor jmp sub push insb or or out (bad) sbb aad (bad) cmp jmp ret adc adc cs loope cmp dec cmp add adc sti mov and imul mov fsubrl and xchg cmp xor and sar lret dec and jae adc add push (bad) cmp call pop pushl dec xor xchg cs test movsb stos loop cmp and test and cli xor add or dec movsb dec addb or sahf pushf imul stos sub icebp push jno dec push sahf sub (bad) mov sub leave scas lret mov fs mov js mov inc leave fistp mov out loop shll sti test push jl or lret ljmp hlt cmpsl cmc mov jbe jmp push sbb lods ds fisub cltd jp cmp sub out mov cmp jbe push mull out push mov or xorb imulb shrb xor pop and xchg in xor jb add icebp cmc jnp pop lret inc push sub loopne sub pop or push push mov pop mov or and dec jecxz lods in jbe clc (bad) mov pop mov ret aad es sub and mov cmp xor xor cmp cmc cmovne mov nop rcrb sub mov shll pop cmp lret stc hlt mov ds add cmp dec hlt lret lret fimul fisttpl leave scas adc mov add aas mov pop stos inc pop ret insl lods mov mov int std (bad) repnz adc stos fstps jmp lcall scas loopne (bad) fcoml xlat inc xor scas into inc xor push out out cs mov xchg jae out notb fwait and mov jnp test dec sbb xor add std sbb or xchg add nop lods sbb adc mov dec push scas (bad) jmp out out pop repnz imull out dec lret stc ffree and subl movsl test ljmp (bad) inc and add shrl fldl sbb pop add push sub pop xor xor or add cli sub mov out into or clc push std push rcrl add cwtl daa add add and inc push xor xchg mov outsb dec (bad) stos popa scas mov sub add fldl mov inc (bad) sub xor mov adc clc sub inc jnp sbb stc test pop xor add jge mov inc and jbe pop xchg pop mov sub jae xor sbb xor (bad) ljmp push sub (bad) adc js push scas nop pop (bad) mov mov xor push sub int3 push ljmp pop imul imul pushf sbb aaa dec bound (bad) sub cld movsl rorl inc pop push mov imul mov jbe jle cs add mov loope cld aam or inc cmpsl adc dec push bound jne lods outsb mov push pop xor stc cmpsl xchg sbb ljmp jle inc push pop (bad) mov xchg cmp jmp jmp mov sbb pop jmp mulb and lods (bad) fisttp dec mov lret (bad) fist out xchg sbb sub addr16 pop aaa pop ret into fcoml dec xor stos jmp mov or mov cmpsb adc adc xchg movsl jnp fs sub or lahf push fdivs aaa cmpsl and or xlat xor adc mov pop xchg push adc xchg pop push aas loope cs lods sahf cmc decb push push int3 repnz ret gs inc or xchg cmpsl push out ds mov mov out test xor xchg xchg adc sub jp test fs mul pop stos sub cmpsb dec lret lods mov add lret sub scas (bad) fildll pop add (bad) mov ds and cwtl (bad) mov mov push sarl add pop mov lahf mov xor lret inc pop ret cmp pop movsl cld add (bad) mov adc test lret adc push mov jns dec jae leave jge out inc (bad) (bad) fldt xchg pop ljmp popf popf aam jp cmp js cs out pop adc xchg cmp xchg outsl add jne fist loopne pop push sub mov mov shr fdivrl mov mov enter shrb mov pop cmp stos lods inc fldl cmp mov das lock dec ljmp pop jb inc jecxz negb xchg popf push jecxz,pt sub jae push out fmuls (bad) std data16 shlb ret pop dec sbb icebp adc data16 mov (bad) mov jle add cmpsl dec mov lahf push cmp adc (bad) xchg lcall mov (bad) sarl and fdivl clc jmp pop out test into es add into imul sti scas cmpsb push dec dec fimull (bad) data16 enter loop or outsb mov adc pop enter pusha adc pop xchg and sub lds out mov adc or push sub stos adc ljmp es and sub je or cmp inc jecxz mov adc shrb jg gs mov sub jno xor outsb mov test sub out xchg (bad) call imul imul or mov fwait icebp hlt mov outsb and jns xchg cvttps2pi es jg aaa jne pop mov dec xchg inc and sub push rcll jbe xchg (bad) fisubl push ds insl cmpl jae,pn and fdivrs movsb pop adc cltd idivb lods loope aas outsb cltd push cmp sub decl xchg divl dec stc or xor decb test jmp push sub xchg fcoml push xor leave sub in lret and out add jl rclb das pop lcall scas loope lret mov loope and into lds cmp and stos popf jnp jecxz leave mov mov and mov push hlt daa clc push push mov sbb push in dec icebp popf bnd mov sub je mov stos mov mov push pop rep mov jl in fs mov mov inc leave dec lock sbb cmp sbb xchg (bad) and repz mov in daa das rcrl jl out (bad) mov loope inc pop sbb lock mov cmp and shll add fimull insb leave xor jmp scas xor add jle dec mov xlat ret dec repz jge cmp push xchg lds ss pop adc cmp dec test sub in mov out in xchg mov or mov (bad) (bad) stc lock ljmp pusha popf add xor add mov and ss adc sub mov mov inc fs mov into mov jnp call loop ficoml xchg mov leave jne pop jle addr16 divl sub sub ret push mov inc jl mov out imul int3 mov outsl cmpsb mov inc sub sub ja mov rolb cmp jg push push jge ljmp lods fisttp cwtl test loop push icebp (bad) dec js movsl cmp daa rcl sub data16 add les fiadd out jg pop sub es pushf mov icebp mov fs mov ds pop scas inc stc jo inc or dec cmp lea movsb in add (bad) and in add xor icebp int3 lea xchg jnp adc xor inc pop mov and jo ret push pop dec pop scas lret mov lea pop sub popa or fldcw dec jb lret cmpsl out mov jle and jbe jp push scas cmpsb pop daa lds test jnp das or fildll lcall sbb out stos mov pop xor scas xor or repz mul push mov xchg shrl xor mov test (bad) out mov add clc push sub leave out iret push jno ret in mov pop cld push hlt mov xchg mov dec outsb dec cld test mov call jecxz xchg cld mov or and inc ret roll push shrb icebp sub inc inc sub das push mov les mov mov popf add nop jmp sub icebp xchg test daa jecxz and or sti fsubrs xchg dec imul xchg imulb sti jl int3 adc dec shrl pop std or cwtl mov or xor mov sbb sarl fisub sub mov xchg cmp (bad) xchg push sbb jne dec jl mov test in fmull jb ljmp je jp mov rcrl sbb adc cld fist mov (bad) (bad) rcr dec jge out pop xchg das ljmp mov shl cmp jle repnz and das and adc add sub jmp lds je rcll pop add in xchg insl cmp fwait adc cmp inc cmp fmuls pop and jg xchg mov mov mov pop jno inc xor xchg push cld jl lds xor mov xchg xor dec add fbld fnstsw imul lret push jnp mov out (bad) ret call sub ss inc mov or gs fstl cwtl jg test std icebp mov or cwtl jmp stc xchg dec loope xchg addb and jmp push icebp outsb adc jmp and insl aas jl mov ja cmp stos sub les mov mov call xor leave jge pop loope jl push dec or ficoml sub adc mov sahf mov mov enter clc or mov mov (bad) add mov jl xchg scas addr16 imull jb xor roll mov in pop xlat xchg cli jb ret std xchg dec cmp (bad) sub fisub call sarl fisttpll jno adc or xchg out out sbb jmp repnz xlat ss sub sbb or xchg pop adc div mov sub out in ljmp ret shl clc inc mov push ljmp push pop dec jl push ret cltd outsl jo add jb push sti fcoml jb adc pop xor push push add and scas jb inc sub cli sub in lahf les enter and adc ljmp in popf in push and add test loop xchg mov dec test inc mov adc xor cmp popf ljmp repnz mov shr push aam ficom adc inc push orb sub out mov imul repz jne cs push mov adc rcll leave leave cmc fsubrs mov loope (bad) and mov jge not imul inc lea xchg sbb mov jl daa ja fs inc fs adc fsubrs xlat mov leave jle fisub push jg divb ss xchg addr16 add mov lods sbb lret fbstp inc push mov mov (bad) js repnz add mov out js rclb mov jp imulb (bad) or or pop xor mov cltd mov fldt xchg add ja pop stc aaa push sbb lcall inc inc mov and divb lret or clc jne cli and sub mov je int cmp mov lock xchg mov adc subl ret mov mov pop xchg into outsb mov or xchg add xlat dec cmp mov sbb out pop and or decb repnz ret cmpsl ja mov mov (bad) or fcompl daa aad fisttp hlt scas outsl adc xor dec sbb (bad) xor and imull push xor sarl popa rcrl std sti int or dec or out gs inc icebp pop xchg lods xchg jg fist mov and cli inc xor mov loope das outsb sub rolb pop and scas ret or push sub mov xor mov in push lret out cmc inc push stos cli aam jmp jns and enter and (bad) les lcall lret sub fldcw dec adc dec stos (bad) (bad) sub sub movsl inc loopne pop fnstcw in cmp inc pop scas je stos sub push mov jmp cli bound mov mov xchg dec or adc clc mov and stos mov mov jne inc das pop xchg cmp adc xor js lahf (bad) out lret mov icebp xor push hlt ja cli add xchg and mov add pop sub ret cs sub adcl pop and (bad) ret aad cmp icebp mov and decb xchg inc ret mov fisttpll clc mov inc fisttpll lahf sub into jp lock xor lock in and subb lahf scas jecxz cmp and xor mov mov or and lahf clc mov and and jmp movsl (bad) (bad) ds xor movsb xlat add mov xor fisttp mov ret mov sbb or and sbbb daa dec sub pop adc call mov and mov pop shlb outsb mov leave mov xlat sub aam push jp pop sub leave xor into loop sub sbb rcll lret cmp pop adc repz xor hlt jecxz imul lret and and ljmp add das mov jp cld popa mov loope xchg outsb out mov xlat mov icebp ret sub je lds cmp pop lret mov and int3 mov jae sub xchg stc arpl lock sub lret and push and and sub imul push inc dec ret jnp sbb mov loop pop aam push ds mov adc mov call sub mov das mov ja ja,pt hlt icebp das jecxz xchg mov add mov or stc int3 fsubs pop clc and addl idivb hlt imul inc ficoml add and add iret es or aad out push popf inc or sbb into cli mov ljmp mov leave cmc pop add adc sub rcl dec jle (bad) movsl xchg pop lods mov mov jne xchg mov out iret aad hlt sub rol out je decb in daa fldl cwtl inc rcrb pop add mov out lret aas push jmp adc push or sub xor pop aas andl add push scas mov into or and mov push mov xchg pusha adc xor (bad) mov dec leave mov sub in lods jge xor inc jno push jb jb dec mov mov pop cmc and ljmp dec out cmp or sub pop ljmp xor es out adcb add shll daa jg lret (bad) push push jae inc loop mov xchg cltd mov stc aad (bad) in mov pop pushf jb pop jge call pop das sub (bad) mov in sbb cmp xchg sub mov xor out sub lret pop scas repnz sub mov xor mov lcall dec and jbe (bad) loop mov inc pop loop push (bad) pop fstps jno xchg mov rclb mov cmp ljmp aam movsl push mov and bound jno test push cmc mov movsb mov lahf or into mov js sub ja adc cmp sub cmp or sbb inc scas xchg das fstp loopne lds repz cli xchg dec loop in or lsl cmp xchg cmp mov cld cs mov test movsb adc test (bad) mov out mov xorl mov lret repnz mov inc daa loop adc (bad) test cld mov adc cmp imull add push add dec and mov stc cmp xor mov jl pop inc ja aad jge lods jge mov cs ljmp clc and in pop mov xor pop push (bad) sub sub and popf mov cmc scas cwtl gs daa xor ja xor gs mov stos lea out daa roll push sub mov mov imul inc and add mov ss lret push add scas fdivrs or jmp ret je pop repnz mov lahf mov fist cmpsb mov int3 leave insb add push and jae repz je push lock mov ds shlb repz sub (bad) ds clc mov sbb popf xor xor fidivr test repnz cmp jle int3 pop out popf push out pop sub mov mov fist clc lret xchg jg jge jge cmp (bad) fsub mov add mov dec ret jae test stc pop or (bad) mov in jae outsl fs (bad) mov mov mov cmp and call stos dec je ficom ljmp jl rorb jecxz stos mov aad push into jmp push mov cs outsb pop sbb lret add cmp (bad) pause (bad) sub cmp cmc (bad) adc cmp cmp test mov pop dec aad xorb cmp cli dec mov push dec mov je xchg jmp shrb mov mov stos mov dec mov xor sub repnz pop xor inc insl lahf inc test mov inc and add popf aad adc pop jl dec fsubr xor mov roll sbb xor push sub leave lret cmp push aam gs mov ljmp adc faddl or push push adc and (bad) fdivl mov mov push and mov mov rolb xor hlt frstor lret add jp cld stc gs jns inc xorb sub (bad) cmp adc xchg or mov iret stos loop shrl cmpsb push mov js daa jecxz mov xor xor cmp xchg push rorl cmpsl fdivr mov cli dec mov add sub add outsl mov and or mov aad mov sub imul popa cmp push xchg movsl (bad) xchg mov out daa sub mov pop nop jmp lea cmp push sbb dec cmp add int3 lret mov ljmp aaa movsb decl mov cmpsl adc sub mov xchg lret xlat addr16 cmpsl out in popf je inc xor popl dec sub hlt sahf fild add mov mov int mov lret sub fsubrs xchg (bad) outsl and cmp mov loope push ret or stc loope ret add xor lahf adc lahf nop ret cld jmp pusha adc xlat popf rcrl mov clc shlb mov popa outsl inc rorl mov imul rcl or shrl or leave pop inc bound dec (bad) lock loope (bad) jle mov lods sbb sub jb test jp ret outsl (bad) pushf in fdivrl fdivs sarl sbb jge push pop dec and xor scas jne xchg jecxz popf pop outsb and andb xlat jne xchg ret lods add addr16 xchg ficoml sub push (bad) push xlat mov notl ja cwtl and fidivrl and add lcall fistpll std pop insb lods dec xlat jecxz pop mov lret xor mov xchg lock ljmp mov sub mov jecxz sbb data16 mov fnsave jbe pop mov cwtl jmp imul stos lods sub mov mov pop stc imul adc jl (bad) and sub fidivr mov dec mov iret fwait xor jbe and std xchg sbb pop mov (bad) call lahf mov in leave jno mov sbb mov repnz add xchg jl loop jmp mov divl fistp pop into jp and mov add sub fdivrp stos push into jp inc movsb lods mov hlt leave jo and or or or sub xlat mov (bad) loopne,pn (bad) ret xchg inc push fisttp fist pop imull and addr16 and add test mov push data16 sbb xor shrb push outsb inc add push cmp or mov fnstcw inc pop push les mov popf lret into pop cmp std in cmpsb add cmp in scas or mov out das jmp sbb wbinvd stc add mov sar add fdivrp repz (bad) popf mov add add add sub push repz sub cmp out add push (bad) lret insb xchg mov movsl adc mov out js xor jo jge loop add shrl xchg sub lock or in xor ljmp add xlat add xchg out in jnp mov mov adc idivl dec shr mov xchg jb testl leave sarb subl scas xchg add mov mov lahf push push idivb push mov xchg sbb (bad) xchg scas (bad) clc mov test cmp and jecxz pop mov in dec shl sub hlt sbb sub arpl lock into mov mov mov sub adc fdivl xor and add pop jmp and mov (bad) test sub and or into jle lods pop ret das int3 repnz xor pop out es push or shr or das ret pop ss xor add inc (bad) test or mov (bad) push and xchg mov add or mov xor dec pop sub mulb iret std lds fbld aas int3 out (bad) mov mov mov dec fwait dec and out jns jmp call fs out mov shrl pop xor jb xor outsb cmp sub and aas fbstp cltd adc xor mov mov sub lcall in pop dec (bad) dec mov pushl adc jb mov mov int3 push das sub pop or (bad) mov pop adc fdiv test fldt daa jno scas push negb adc leave mov lret push dec and push lret call insb daa or icebp lret pusha jbe xchg push sub pop iret jbe jl sar mov adc xchg (bad) daa sub push lret (bad) dec cli or daa xor xchg jmp pushf xchg cli sahf rclb inc mov push inc mov dec clc out sub or xor mull inc add push jbe leave in das sub jns sub rcr pushf xchg adc dec or fstl fsubl mov outsb and ret add and sub into adc and xor loopne testb push out xchg sahf daa mov test ljmp daa pop dec inc ret out fchs sub out adc pop sti fs mov (bad) outsb (bad) mov mov push je jmp (bad) (bad) lods xlat pop push test mov mov stos fidivr out (bad) fstl xchg das adc (bad) inc leave xchg and imul add push xchg mov xor jnp sahf add nop cmp stos into add aaa xchg test jne mov sbb sbb cltd adc mov je jmp ds and (bad) fidivrl dec cs pop lds adc mov push lret repz dec push or jne call leave pop icebp adc out cmp into xchg jge jo fcomps adc fsubrp (bad) push cmp fldt push push dec je popf sarb ret and jns movsl pop out mov nop fcomps xor cmp cmp adc mov xor mov sub mov dec std iret call addr16 out pop push dec sub mov dec lret rolb pop (bad) ss dec mov add lret pop aas scas xor jmp xchg adc ljmp sub in ret xor mov inc lahf fs mov mov (bad) sbb stos movsl mov pushf xor sub add (bad) enter aad jecxz adc neg dec cmpsl pop pop xor mov es pop pop lret imul mov pop and jp jo ds repnz negl int3 sbb out (bad) sarb test mov mov ds mov xchg enter clc sub jb sar shll icebp loop les push jb rorb pop jae lcall pop leave sub mov or in je mov push cmp jl push lahf rol jecxz js bnd out repz fnsave push push outsb in dec mov out cmpsl push rdtsc icebp pushf jg fs and pop xchg xor mov jmp cmp lret adc pop test pop mov aas std inc cmp mov pop ljmp fdivl inc dec xchg aas mov pop jbe inc cmp mov sbb sbb jmp in fwait aas xor inc pop ljmp andb add add xor push cmp iret mov out pop pop mov (bad) mov push cli and or jmp dec leave inc and mov lods loopne mov icebp jle sub es lret call gs inc push mov xchg daa jecxz mov cmpb aam in or mov push jmp xchg push (bad) lock adc mov cmp fsub adc or mov lock mov add mov sub fdivrp push fdivrs test clc fstpl loop test je gs cmpsb inc pop and and std xchg mov fsubr cltd out sub fcompl icebp pop sub add mov adc mov sub xchg inc xor jbe push rep add or je push ret mov xor fnstcw push int3 test or lock push test icebp push inc cmp in and xor negl dec jb addr16 test sahf pop xor xor push jl enter cltd or dec xchg xor lea or xor push fstl dec jle cmpsb movsl fisubr (bad) daa sti xchg (bad) xor and shlb dec mov or mov scas push mov ret sub jge jnp pushf xchg jmp or call mov fldl test xlat push and or int aas or (bad) jae stos (bad) cltd test out outsb xchg lcall jl pusha xor dec data16 mov popf and mov push jp popf pop cmp push call jbe enter das mov outsl sub cwtl fildll loope movsb cmp cld dec hlt ljmp in iret dec sbbb mul jle pop mov dec xor jmp mov (bad) ds icebp lahf xchg xlat mov pop lahf out mov mov ror imul add orb ret pop xchg push xor xlat cmp mov xor bound rcrb outsb inc mov jb jl imul or lret xchg loop dec mov out call lret imul add adc out xchg repz jns jne subl icebp cmp repnz in ret push popf sbb or fidivr mov push dec or hlt clc daa leave out jg std imul jns imul outsl jo sub dec pusha mov add xchg xor iret pop sub and pushf mov into int ds fldenv in iret fldcw into sbb push pop pop dec sub lock movsl pop adc cwtl into mov mov shll sbb ret stos xor fsts lock mov pop fstps push fnstcw aam (bad) mov sti in setle sarb inc divb fdivrs popa pop dec scas out lret out aad cmp mov ret sub mov xor xchg cli mov sahf aam sbb dec mov (bad) adc mov fldenv js mov mov (bad) loop inc jbe xor lret ret pop das (bad) out jmp xor mov ret dec pop leave sbb lahf insl or test mov mov jmp negb pusha and sbb icebp sbb cmp mov ljmp das rcrb ds (bad) xchg rorl negb lret xor xchg add fdivrl inc lret repnz push mulb sar xor sahf in loop rorl jne movsl (bad) je pop jge in popf lsl cli ret lret ja adc imul imul dec mov and push and ds and lods cltd in mov daa cmpsl and lcall add scas arpl loop xlat dec pop mov inc daa and jge sbb push dec mulb fs (bad) push ja mov enter sub stos mov test stos mov outsb mulb pop scas sarl fidivr lret cli (bad) mov popa add jns or dec jno daa xlat (bad) jl iret test hlt cli lret and add outsb xchg dec arpl cld cmp mov loope jne jg add mov fcoms xchg mov xchg shll or mov pusha mov cs sub cmp gs imul or add xor cmc sbb xchg mov pop movsl xlat cmp sub sub aas adc pop push rcrl adc out cmp imul dec cli pusha xor cmp mov mov rorb mov mov (bad) add movw ret lds pusha jl mov leave xor xor into das popf fnstsw mov scas or iret push mov leave sub push hlt cli vpminsw dec push add dec adc outsb xchg bound jnp adc out stos jmp test repnz cmp lret jb,pt jo pop fisttpll out sub in sub adc jno movl pop in imul fld clc sub push adc add rorb jl movsl push mov test mov movb sub mov mov lahf out sub xor jae cld inc sub and or sub or mov cmc cltd sbb imul outsb test (bad) rorb xor leave add push inc xor xchg jmp popa add push pop push mov ds and (bad) pop std in xor add and or movsl call mov int3 xchg clc add out inc cmp and adc stos insl lcall pop add mov les pop add jae or mov push gs scas xchg leave (bad) mov lahf sub pusha mov xor xchg mov add hlt in mov (bad) mov sti insb xlat add into xor and pop fidiv ds divl jne xor jg bound les pop icebp cmpsb push cmp xor pop cli aaa std imul loope sti daa mov stc cmc mov sub push push and mov movsl lods subl push pop ljmp mov sub xchg or push into jp sbb sub push adc aad jecxz jg enter push daa icebp jg sub ljmp sahf imul das (bad) lcall and int cmp (bad) das add inc dec pop mov inc inc or jmp insb xchg xchg adc sbb or jg xor xor daa aad xchg daa mov jg icebp inc aad inc dec les adc shll pushf jmp or push sti inc xchg mov stc in jns or out adc popf push pop ja and mov ljmp sbb loop cmp mov mov dec cli out int das stos dec cmp stc sbb std and int3 enter pop loope add push gs clc mov lock cmp int3 dec or fwait cld push jb jmp cmp jb test add mov repnz sbb (bad) xor xchg jb mov adc (bad) xor mov test enter pand xlat int3 hlt dec idivb int3 lret xorl inc xor aad sbb leave cmp (bad) xchg cld rol and adc shr fdivrs popf fnstsw mov es loop jbe lret inc dec daa xor out and hlt rclb ja test mov inc cld rorb fs adc test loop pop dec (bad) call xor pop (bad) dec cmpsl cli xor inc les dec sub sub fnop xchg sar out das lret outsb pop (bad) push lret mov or mov dec out jno (bad) mov fbld stos bound fstp xchg outsl xchg int3 out or lock dec shlb lock clc mov inc push incb inc jmp call pop sub ds lret mov lret pop or repz lret inc addb mov scas adc xchg dec lock into popf pop cmp add lahf int3 push push aas sahf jnp aaa int and inc push lret repnz (bad) push jne out fist cltd andl (bad) out dec out adc dec lcall push cmp pop (bad) negl add cmp das add mov mov cmp and pop jl mov sub or mov sub add push mov or incb jg jmp mov scas cwtl sub in popf sti mov ja mov adcl out fsubrl iret push and sar sti xchg jmp pop fnstcw loope sub mov enter adc mov and pop shrl clc mov add xor jg mov test or push mov icebp cmc push lods lds cmpsb enter pop xchg imul cmp sub mov lahf (bad) mov xchg stc sub outsb mov int3 ret stc lds push mov in mov lret (bad) pop lds xor (bad) xlat xchg sub jb jnp xor inc (bad) cwtl fistl cmp xchg cmp jns bound aaa int3 js mov or ret adc push test mov push dec (bad) mov cmpsb mov add inc jecxz pop scas dec mov add mov rorl iret adc fnstcw dec stos leave pop and fisubl or mov out mov jne adc xor xlat mov lahf dec xor pop enter ret fistp scas inc inc negl int mov xor add or xchg scas xor fildl mov iret out cmp adc mov add stos popf mov mov daa cltd dec xor pop lods inc hlt scas xor and (bad) xor (bad) fucomi aad aam mov xor or mull fbstp aam and outsl sub adc cs add xor scas mov mov pop pop cmp add jp adc stos sub xor or ja icebp and sbb je ror mov or mov popf xor fcmovb sub cli mov popf xchg ret ret aas xlat stc lahf test mov cmc sbb pop out and sub loope aas loop xlat in repnz xor lea ljmp gs (bad) fadds les movsb rcr xchg add (bad) leave iret jge xchg cmpsb cld fs fcomps out sub xchg rorl cmp mov repz lret xchg stc xor or sti je ljmp mov (bad) jmp idivl adc jne mov (bad) mov xor xchg shrb les imulb pushf aad popf jns jb jnp addl inc repnz xlat push dec mov adc and mov leave iret aad sub add or sub cmp xchg pop mov in jmp icebp pop pop mov mov pushf mov ss mov mov cli cltd popf repz incl push mov fdivl xor pushl jl jns or jo inc cmpsl ja push mov das add mov mov dec cmpb adc outsl je scas mov (bad) jne push cs aam (bad) loop das stc mov shll jmp xlat inc mov dec sub pop pop inc insl stos lret xchg push mov popa fimull testb bound (bad) das call test or jnp fdivr lahf lock fstl imul jmp sbb xor mov xor or adc ds lods mov repz push dec cwtl xchg pop mov and bnd call rcll in mov mov ljmp jne mov das push aad lret push jno sub aas test ret lods sub or pop aaa lret cmp xchg ret xor add out and adcb sub xor mov enter mov or mov out int3 jmp sub popa (bad) cld cmp (bad) pop mov pusha sub ljmp ja fsubs (bad) xchg gs or fcmovnbe pop xlat lea fstpl addr16 sbb inc xchg test lret loop aaa imul (bad) jnp mov pushf push cmpsb inc add mov popf pop adc cmc lret test ret in push and mov mov ljmp mov les out xchg xlat adc adc mov push sub and xor vsubpd bound aaa jg out rcrl icebp xor xchg out xlat pop pushf (bad) mov dec sub push jnp and add popf add jno dec pop sub adc mov sub dec popf mov push push pop add cwtl test inc sub les fadd sbb cmp jne stos bound into aad lock imul idivb mov xchg mov jnp sbb popf movsl xor adc cli sub ret cmpsl js xchg adc popf in scas loope and push je lds lret jo mov sbb adc pop iret mov xchg mov rcll dec stos in (bad) (bad) xchg push dec jp enter add aad addr16 movsl fmull idivl dec lahf or dec cli push (bad) movsl lret sbb gs adc (bad) int3 xor fcom repnz and sub std cmp or repz adc ljmp xor stos lret andb enter mov cli pushf ss dec cmp test fldl and rcr outsb fsubs (bad) mov in add push and or cmp repnz jp mov gs ds je and fbstp inc loop or adc test movsl mov cltd add xchg push imul cmp cmc sub in jmp mov lods andl pop push mov (bad) (bad) xor pop push push (bad) and inc push mov sti daa pop pop adc push pop mov sub add enter push into out pop stc out aas push (bad) ljmp push jae and (bad) in inc jg js jns add (bad) std dec pop rorb addr16 in pusha ljmp push inc push out pop inc adc push add xor sub pop lahf pop ss lahf mov aad mov cmpsl pop add std popa out add popa lret andl or adc ret icebp inc sub inc xchg adc stos fstpl sbb pop stc out aaa add in add imul push out xchg adc mov add push push inc adc pop jne adc pop sub xchg or sub xor pop push xchg push add lahf (bad) into imul pop (bad) aas xor lret cmp push push (bad) push mov dec add std xor pop add fadds stc cmp push popf mov add fbstp outsl push add data16 jbe stc out and popa pop pop scas outsb mov loop (bad) mov add push push xor (bad) adc and push xor push dec pop xor xorl xchg pop and rclb xor loop hlt out push sub sbb (bad) mov test movsl out daa repnz xchg out mov (bad) (bad) ja cmpsl andl fiadd (bad) sub inc and mov test inc push pop hlt mov add lods hlt sahf daa pop xor pop ljmp add xor add pushf sbb add daa mov push in push add cmp xor mov mov add jbe adc push mov xor (bad) movsl hlt dec and sub jle xchg cli shrl jbe cli jne outsb add add mov xor inc imul fldcw outsb jmp out adc int3 icebp or test and push out les leave imul and jmp outsw jg dec add fldenv jle clc fcomps fs lea movsl sbb xlat sbbl mov ljmp push (bad) xor add pop mov pop mov dec sub ret xchg int3 (bad) icebp cli (bad) mov in and pop (bad) (bad) jb fisubrl mov sub mov (bad) jmp adc lea jae das xor (bad) lret fbld jmp lods movsb out or fcmovnbe ret imul iret movsl aam popf push push (bad) mov in daa pop push fs add cli popa aad sub mov jns div adc and arpl add add (bad) jns lret mov repz lret jmp data16 push rcl cli dec and mov inc das ja (bad) mov repnz test (bad) mov pop or (bad) mov (bad) pushf push (bad) jne std mov adc and add add jge jb (bad) jp and inc cwtl pop shrl cs add mov fnstsw cmp rcll mov out sub data16 adc push les mov xor or sar mov push (bad) dec jg (bad) sbb adc xor sub xor dec into mov xchg out inc pop andb push mov mov aad sti les imul mov jle mov das add mov fs std jg cld mov xor push or jg pop mov adc enter bound iret aad test leave add xchg loope adcb inc or dec add scas push add outsb das mov sub ds arpl icebp cmp sub lds (bad) (bad) sbb movsl inc fwait dec lock dec mov pop in and arpl cwtl int and push lcall scas jbe imul xchg or lret jle inc xor sub adc lret fistp fwait sar push pop sub lahf fcoml adc cwtl cmc and jge mov repnz jo rclb das sub add sub xchg cmc sbb inc in sbb adc cltd (bad) neg pop arpl lret sub mov sub mov out pop push cmp mov inc daa or orl pushf imul or or xor pop out add xlat jno dec jne hlt adc loop xchg (bad) jp push lret rorl sbb jmp and xchg mov and sbb and cli fwait sbb clc xor sub and popa or lret jb push fs cld stos mov aas test orb xchg cwtd push repz jecxz mov cltd je pop out mov adc mov xchg loope pushf cmp xchg mov testb call adc cs gs and mov push jl or in inc cmp repz popa cmc ret inc mov mov pop sahf and pop sub test repnz data16 loope sub notl pop pop xchg out fsincos mov into ud1 or enter cs mov sub mov cltd ss jns dec mov cmpsb push inc or clc xchg popf inc mov repz fwait xchg dec or mov les add jp fcmove pushf or mov repnz subl daa call mov cli fs out sbb and push jg (bad) mov pop pop repz pop xlat mov push add xor dec rcll test fldt (bad) movsl repnz je das xchg inc popf jae mov pop adc mov or repz es ret test jbe bound or jbe jmp adc fwait adc lods and fstps std lret push lcall movsl push sbb xchg fcompl daa or call in push lret cmp outsl or jnp sbb dec add xchg lds (bad) mov or js xchg movsb push (bad) or add imul std jl jle pop into mov push dec cs jne add cmp or jnp and cltd aam cli rcl inc and int3 leave or sub leave add push (bad) jmp cmpsl inc push mov mov sub xor clc mov add fdivs aaa mov aaa into jmp lret cmpb jno jmp clc scas mov and ljmp ret mov ja sub inc sbb lret cmp ficom shl jns and xchg mov inc push imulb push jl daa and jge loop sub jmp sub test ret push adc pop cli mov loope dec out cltd mov fstp xor pop mov mov fstl cmpsb test push pop add or cli das or out nop xchg sub (bad) fiadd in and int3 dec repnz imul pop faddp in aaa jne xchg lods inc cmpsb jl js xchg mov ror ficoml mov sbb jmp add mov mov fstpl xor (bad) add scas std mov add lods inc add mov into scas adc leave sub cmc xor aam xrelease call push fadd sub clc scas jo xchg (bad) repnz add roll jg sarb cmp (bad) mov sub in icebp jmp (bad) jbe pop hlt sub mov pop lods stc es stos fs mov mov clc xor bound cmc jno dec fs mov push inc push and leave aad cmp push rcrl add (bad) in sub pop xchg push pop xlat mov sti bound inc ret push fildl andl lods je mov daa sar lods jge dec (bad) push repnz shr out mov out scas sbb or mov popa out mov or adc pop inc pop ljmp cmp xchg pop fldl mov or mov stos mov mov mov dec mov push loope mov cs popa mov shlb jecxz dec outsb mov xchg fs cld add cmp stc cmpsl add mov (bad) mov and leave popf gs xor or push movsl fldl jmp cld lgs les icebp scas mov jecxz xchg xor xor ret push jae or add lret into dec stc in xlat mov add cld mov cmp adc divb test data16 lock nop and fisub imul add xchg mov mov mov (bad) call sar fs aam cld push mov sub jg or adc loope jmp push pushf lahf pop mov fsts jbe sub scas mov mov mov (bad) jg jge (bad) in lret cld adc jb mov es notl or stos bound inc pushl fldenv das add sbb fcomp fmuls rorl pop gs jge cmp outsl pop jnp or cmc sahf mov adc jmp ror (bad) mov and ret sub aas sbb out fs inc movsb jecxz cs fs ljmp push mov int xor push jp mov lea mov jge test sbb mov mov pop repnz jecxz icebp decl cmpb ljmp clc mov mov movsb push add inc out or jae das xlat xchg loopne fcmovnb cmp movsl or mov xlat inc xchg xor clc loop mov jns push dec aad hlt out mov fldenv divb stc jp xchg push fs jae sub fcmovne sub out lret cmpsb sbb std jmp mov mov arpl mov mov mov call shlb imull negb add aaa in cmp rcrl vmovdqa jae js xor xor popf pop dec adc mov loope in xor (bad) int3 and mov xlat addr16 and inc les mov or mov xor mov lcall fdivr dec bound lret mov fildl icebp mov adc adc mov pop test xchg mov jecxz jno imul sub push shll out push frstor sub stos xor mov pushf push mov or (bad) add and in mov xor test cmp fisttp cs (bad) js sbb jecxz call inc jmp add in fisubl (bad) pop mov andl mov push and into add sti rcrb std jmp or xlat out and (bad) push xor xlat stos (bad) jmp (bad) into jmp out decl popf adc icebp or sub int3 or cld cs sbb sub add into xor or adc mov adc stos mov adc pop push add sub add imul imul inc sahf leave notb mov dec mov (bad) jle arpl ja mov adc sub push sbb cmp cmc jno inc xor push daa pushf out xchg (bad) mov sub dec mov jg push xlat frstor lods jnp and pop or mov dec or dec cmp and ret xor inc int3 cmp push popa bnd in adc mov and inc subl cmp and test out test add rorl imul push pop int3 lahf add adc icebp xor adc call mov cmp popa fucomi and pushf movsb lods je mov jo adc fidiv (bad) call cmc pop scas je stos out cs pop inc sbb pop sub xchg ret sbb or xor jo js sbb inc mov shrl lods adc scas pushf cmp icebp cmp xchg jp ret sub dec add mov push out sub and fldt xchg out fdivl popf mov push test movsb call (bad) test (bad) jp clc aas test fidivr xchg (bad) ljmp push add dec cmc loop outsb sub les pusha and cmpsb ss add xor mov ret bound mov xchg std lahf xchg test (bad) sar pop test icebp cmc and mov ss and sub (bad) xor or jns inc xor or ss mov push lret popa sub fs std lret (bad) cld and out xor aaa mov adc outsl xor mov xor mov mov add push or (bad) xor sbb popa xchg jo xchg shl leave sti aam shrl lock sub xchg add add test mov inc mov lahf pop lret bound incb mov push dec repz and rcrl or push xor pop ds or cltd add pop and push in mov movsl jo pop pop aaa dec test cwtl mov popf insb pop dec sbb scas dec xor mov xchg and xor inc sub inc (bad) fist lods pop sbb xor imul cs mov add pop rcll xchg (bad) sub aaa lcall test mov icebp add adc jo push leave push pop push sub mov stc andl je add jecxz dec pushl xor inc xchg scas or sar dec xchg test int3 mov popf aad mov (bad) sbb sub jno mov push (bad) xchg push fsubs and mov leave and xchg jmp pop xchg movsl inc insb inc pop out sub daa sbb lock scas dec sub sub dec js pop rcr sahf mov (bad) push xchg jmp dec xchg or xchg mov mov mov dec scas push xor out xor mov sub cmp movsl jmp imul mov mov cs cmp mov outsl jb out push bound (bad) dec (bad) xor jmp or xchg outsl xchg jmp into (bad) xchg cmp aam cli hlt sub mov xor lcall cmp and jb sbb push jl cmpsb cmpps lret and repz shlb popa mov inc (bad) sub xor fildll outsb (bad) or js sub and bound sbb sahf dec mov dec xor lcall sub add fidivl fldcw xor push add sti repz push mov add (bad) xor stos lret cld bound xchg add jb xor popf mov ljmp xor mov std or jp jp mov mov loopne notl mov lea inc test ss jo dec jmp cmp ret xchg pop dec loop mov mov sbb add sbb out enter or or or test dec lret jg clc add cmp negl mov or dec inc xor mov push out push sbb imul and (bad) bound (bad) int3 movsl cld lret popf (bad) mov sub mov dec je out call push and aaa cs push in out loop xchg out cmpsb dec adc or gs fsts dec (bad) (bad) jae (bad) add mov ljmp pop fdivl push dec test in pop push in out mov push dec lret in sub gs stos fwait pop dec xor pushl mov movzbl or das xor jns inc (bad) xor bound notl jge pop ja sub mov jns lret push add pop fcmovnbe pop addb movsl jno or jmp mov pop xor stos sub je pop (bad) lcall pop dec rcl jae mov pop xlat push gs or add mov inc or gs clc xchg mov out test (bad) (bad) jne dec sub in fimul lods push scas int3 dec mov mov dec push push mov xor push icebp jmp adc mov dec scas cwtl dec jo push lods jne roll lahf push outsl jp xorl lret dec xlat out fstps dec adc xor cmp pop and mull daa stc push ss dec cld cwtl mov xorb or mov mov test stc shr jno mov jnp sub cmp movsl inc jo add sbb fstpl cmpsl adc int3 push scas cmpb and jle ficom hlt sub mov push jle jo pop xchg jecxz xchg fnstcw test dec ljmp fistpll popa into notl cmpsl fstpl jb lea and cmp pop mov (bad) mov pop in xchg cmpb hlt movsl pop or cmp or cld adc sub or orl and jmp sbb (bad) lods xchg jb mov iret or dec fdiv xor rorl repnz hlt gs xchg xor jne imul dec mov aaa lahf movsl cli imul sub adc sub scas adc mov sub adc mov or mov jmp scas and or (bad) mov dec cmp and mov aam sub cmp pusha test xor ljmp sub push xor mov jl popa mov add push jmp icebp xchg mov sub pop inc sub and fcomip jbe loop call xchg (bad) stos lds lret inc decb adc adc jne sarl dec cli clc (bad) movsl leave jo adc push lods sub push sub xchg mov push fadd mov int3 and in in loope push sub dec push nop ds call or and lods lock out gs ljmp xor pushf stos lods lds xchg repz stc add push sti or mov and ljmp inc ds les lods rcl repz jge adc imulb incl sahf inc popa add mov les push jbe pop adc (bad) xchg divb fisttp sub pop sbb push (bad) cmovle xchg mov mov in xor mov dec subb dec jmp (bad) push fcoml pop mov or stos mov xchg out popa in xor sub mov jg ja dec test repz pop add out idiv mov fildll adc jmp xchg bswap push jecxz adc and gs and sub mov mov pop (bad) notl jns push clc xor or xor fcmovbe mov bnd sub cmpsl adc daa mov push int3 (bad) hlt ljmp adc sbb mov pop jbe scas repz or ljmp cmp cltd jno gs lods push cmpsb push push cld and add xor orl (bad) mov mov sub data16 xor cmpsl das dec call out jne imul adc pop repz sub lods stos pop popa push and xchg pop fwait jecxz sbb or mov xchg aaa pop push je xor icebp dec fnstsw imul mov dec mov cmp inc insl sub xor out fldl xchg cltd scas sub mov jno movsb pop sub xor and stos mov ja pop cld xlat nop or mov lds jmp mov mov sub or hlt mov (bad) sub (bad) loop xchg stos dec push ret jno movsl inc enter xor sub insb cwtl xlat lods insb add test repz push int3 dec add mov xchg xchg mov pop dec call loopne cs cmp cmc push xor std sbb or out push popa push (bad) popf mov cmp mulb ds push fwait cmp push push fidiv add push add jge int3 sub dec (bad) scas mov mov decl mov sub adc or xlat jno sahf ljmp mov push fwait shr hlt sbb out sub mov (bad) jno scas push xlat and testb add call and pop xchg xor int3 cmp and jmp sbb call aaa mov dec jle out mov xchg or xchg xor ljmp adc das xlat lods fmul adc movsl xlat xor xchg shll sbb pop xchg cmp fisubrl (bad) xlat inc sbb daa xor rolb xchg jecxz repnz push push repnz push inc cmc adc aaa mov xchg out repnz jmp pop (bad) xor cmp mov xor mov (bad) mov jmp push mov incb call add aaa out pop stos out sub les inc hlt sub add pop es (bad) ror inc loop mov push add inc mov jne repnz mov and xor pop out aas popf ja mov add and ret cs pop enter and fs (bad) pusha sub and call or jo inc mov sub aam aaa xchg jbe and (bad) (bad) push xchg mov pop mov jp bound adc mov mov adc aam pusha push add aaa stos pop dec fdivp sub mov adc loopne gs scas stc cli iret mov jg xlat lahf ret mov out sub sub mov push xor or jmp notl dec movzbl nop jmp sub and sub pop aam jno jg rol or stos mov sub pusha xor or popf jno ret ret movsb movsl in inc pop frstor jg jb ret ja mov decb lret sub jg sub sarb psubusb xchg xchg out xchg mov push cltd mov dec or pushf (bad) iret xchg fist jmp sahf add cli lods cmp repz pop daa (bad) cltd ret mov xor pop push jo sbb add push cmpl mov xlat xchg lock cmpsb xchg inc push cmp push push dec std std fwait adc mov push or out bound flds mov sarl mov fist sbb or dec push mov add in stos outsb out loop and xchg or (bad) mov push incb xor sub loope jge ret sub aad jnp decb mov xor push dec jnp mov popf mov fmuls pop lret add or pop popa (bad) leave enter and jl (bad) ljmp pop jno dec in and xchg push lcall cmp iret addr16 idiv sbb adc mov movsb pop ljmp (bad) and push (bad) js xor jg fwait sub add mov pop lret fs or sti ljmp sub xchg xchg imul loop cld insl cmpsb add adc dec in arpl add push repnz pop mov pop mov aad inc and jmp lock dec loop sub mov and ljmp loope adc xor leave out lret jno in sub jno xlat dec xor int pop sti and fiadd sub popf sub mov pushf mov sub mov mov xchg clc adcl lret (bad) jbe out mov xor inc mov pop scas jno sub pop cli sub jb repnz or push fiaddl rcl mov in fcmovbe xchg dec mov jg insl (bad) pop push frstor xor jp mov addr16 sbb ljmp cmpsl jbe pop xor cwtl cmp pop enter mov rcll fstpt (bad) mov adc push dec adc lds or jmp jecxz pop lods push sub xlat push sub pop mov mov dec ret add (bad) inc push sub pop fcomp lds pop loopne mov dec dec jne hlt repz dec and sub dec pop adc int3 xor dec (bad) mov dec shrl pop out add lods in xor std outsb js dec shl jmp popf xor adc loopne xchg ucomiss and mov mov pop pop daa arpl adc jmp cmp inc sub aaa popf test jmp jno ret pop mov jo fsubs pop sbb jbe lret jnp lret ror pop sti jne loop mov dec push mov scas pusha data16 xor das and jbe out dec stc pop das push push inc pop fcmovne add dec ds jbe loope pop popa lock xchg add mov sti leave push mov fistl or xor ds or mov cmp mov xor mov cs push dec pop add ret adc or pop daa icebp sbb pushf mov call pop fidiv pushl inc xor xchg push adc repz roll es jb pop adc xor in insb dec out mov push ds and (bad) in sub or shrl (bad) sahf ror adc xlat pushf sub push int sub movsl jno icebp and pop fmull dec pop (bad) into sub dec jmp push repnz add std cwtl inc and popf dec push and inc addb lret ja mov mov mov stos sub lds xor or jmp cld mov sti cltd shlb and (bad) into jmp xor das adc xor sub sbb xor jg mull jo pop add outsb mov sbb loop or ja sbbb inc or adc popf (bad) mov stc mov adc push testb (bad) inc dec xor (bad) mov add ds xor sbb out mov xchg bound ja pop pop sub aam jmp xchg or cmp cmc or sub add xor loop negl adc and pop es leave ljmp xchg ljmp xchg dec xchg (bad) ss fld repnz pop pop mov and fdivr jmp push cmp sar lret cmp out fwait jge and inc ja ljmp lret clc fsubl sbb enter add sar cs pop lret dec mov stos xor call pushf mov lcall (bad) dec mov dec add cld cmp fisttpl and fisubrl in xor jmp xor shll call loope iret xor jae cmovg ret and add (bad) popf movsb sub or cmp inc bound jle lret pop inc rcll daa popf (bad) pop xchg cmp cmp adc and bound rcll jb (bad) jnp and cli sarl and imul jl mov dec cmp aas sub aad pop sbb rcl mov pop adc fcompl mov (bad) iret pop adc xchg out pusha loope mov pop push jmp rcll xchg movsl imul inc js lock mov push icebp dec push rclb pop xlat add out mov es jo xchg adc (bad) (bad) cmc lds roll xor dec dec je stos adc sbb ficompl mov fdivrl jo dec pop jecxz xchg mov pop or jmp fdivr hlt ficom stos sub movsl pop pop inc subb (bad) mov add xor jmp adc adc pop in test (bad) inc cmp and pop mov sti test add sbb dec xchg lahf stc jo mov add mov stc rorb ret push and (bad) aad pop leave cs adc repnz jl jmpw test lret mov xor cwtl outsl popf xchg outsl out mulb adc cld adc sub test dec push dec mov dec test dec dec adc pop inc xor jmp pushf ljmp inc in or jno dec nop insl xor popf out or fisubrl rclb (bad) out or sbb xor pop loopne add fisubr push rolb jae and push sub jl and inc fwait pop jbe and movsb addb adc xchg les lret pop clc inc inc lret les mov sub daa mov jno dec or ljmp andnps int push xchg xchg mov mov inc xchg out mov pop bound add or mov sub jae pop add repnz push dec mov or test xlat lods push pop mov outsl sub insb mov mov sti xor test in hlt dec ret fldcw sub pushl fs out sub xchg fwait xchg adc mov mov sbb mov cld cmpsl dec ss repz ja frstor imul push jl pop outsl adc lea mov pop push clc push add lahf sbb add mov xlat inc inc push call xor pop sahf inc mov or sbb fnstenv mov add (bad) das lret dec push mov out cmp mov sarl dec push icebp lods (bad) clc mov xlat lea add int add rcl scas je (bad) iret push dec xor jmp xor xor sub push mov rcrb sbb rorb lods pushf leave (bad) xor adc imul or mov out flds std dec sub pop push sahf insl addr16 inc (bad) repz add fldenv out mov (bad) loopne xor xor shrl jmp les clc lds leave jp enter and lds xlat aas lret imul sti out inc mov add icebp icebp ret jnp inc pusha call xchg mov leave (bad) sub mov out cmp clc mov aas mov cwtl leave push ja mov mov or mov push mov aam loope rcrb dec push mov fdivrl into and dec into sub adcb jl pop add stc int3 movsl mov addl shrl and push imul icebp push (bad) xor bound add jge sub lret inc cmc pop xchg test push sbb cmpsl cmp xor (bad) loop (bad) adc pop sub incl (bad) clc and sub pop sbb mov pop mov jmp in pop pop mov cld xchg (bad) xchg jg in rcpps xchg adc and sub (bad) xor adc repz push pop js (bad) mov (bad) mov and jecxz pop mov test adc or loope pop cltd aam in adc pusha adc sub and stc jp xchg xchg mov or shlb imul sub enter xchg or mov jno add ficomp mov adc test ljmp jmp inc jle push hlt pop or and pop pop idivl xor ret imulb (bad) and sub pushf pusha add dec pop loope xor add insb mov inc mov ret ss mov and (bad) and (bad) mov div push lock call (bad) dec sub mov mov or xchg ret scas lret jmp mov fcomps and test inc subb inc mov push sub das out lret out aad push xchg dec xlat sbb xchg into ficoml out add out add cmpsl xlat lds scas or jno xchg and sub and jmp and ret outsl and and pop cmp xchg lock add push xchg sbb cmp es leave out lret leave std cmp push sbb jmp pop xchg lret add mov or icebp call sbb adc in (bad) dec stos cmp sub push mov std pop inc dec push cmp sub movsl jp mov mov dec and mov inc cmpsb dec adc sbb stos dec scas fcomps xchg jno test sub lock iret lock clc xchg aad jge shll (bad) xor sub lea sbb pop push sub in push dec out out sub cmp mov xchg dec sahf dec ljmp lret jmp xchg insl xor or xor rcll insb mov popf xchg test in push dec out pushf mov sti shlb sbb negb xchg xor push aad insl in repnz (bad) int3 dec dec (bad) cli sub out xor xor mov dec fs stos cmpsl mov (bad) das mov lret lret jge jb mov sub in rcr or sub xchg cmp sbb (bad) cmc ljmp sti jge repnz jmp push test xorb scas cmpsb xchg daa xor ja incl add xor sub stos ficomp (bad) push add sub push insb aas jl dec sarb pop mov mov dec jo dec ret lcall pop cmp cmp or std xor and sub add inc sub (bad) push lret sahf jmp in iret or cmp xor in jmp xor lods xor push ret ja push mov push mov movzbl enter fistpll jle pop push push dec cmc mov outsl and cltd mov int mov das mov ret imul lret lods mov xor and jle scas sub xchg xor lods in add cmpsb push test in shll and bound adc lock and adc test (bad) jmp mov dec xchg repnz mov or push mov mov daa fmull and push xchg fwait or iret or (bad) mov shrb popa sarl inc push arpl pop idiv xchg push scas ja cmp nop and jo pop or imulb mov sbb and jb ja aad (bad) (bad) mov (bad) loope ret and cs mov or (bad) loope out repnz inc xchg dec sub into (bad) dec (bad) pop push pop iret int add or pop int3 add mov push xor xor xor (bad) xchg inc cmp negb dec sbb out rcll adc sbbl mov lcall (bad) ja sub mov loope (bad) mov add jle adc outsl cmpsl (bad) aaa loop mov sub jp int3 xor or cmp ret dec mov dec sti mov and aad mov pop add mov sub das mov es or and pushf shlb (bad) cmp or or xor xor sub (bad) xchg ds or (bad) cmp mov cmpl mov test inc add fsubr loope clc xor scas sub jnp mov iret pop xor out inc dec inc adc xchg stos cwtl pop sub xchg push sub adc rcl mov xchg dec lret mov testb stos pusha fbstp sub lahf push scas mov and adc decl adc cmpl dec push xor out gs mov xchg fcoms jae fdivr movsl pop cmpsl jle or sub lds sub ficoml inc fsubp xchg sti cmp fistp adc mov sub in or loope lock dec aas jmp (bad) jmp test popf jo mov mov sbb mov enter in adc adc (bad) fsubrl sub (bad) cmp fdiv adc loop sar fidivr mov js and scas (bad) jecxz jmp mov (bad) fist mov daa mov mov pop cmpsl in mov and out and imul pop negl repnz repnz sub (bad) push inc idivl xor xor andl les fildll pushf popa mov daa add lret out sub scas dec cld pop (bad) mov xchg sub int das mov jo (bad) xchg fnop mov mov imulb iret adc jge fwait jae push cltd xchg shrl aas jge divb lods pop fisttp ret in (bad) sbb sub ret mov adc (bad) scas mov (bad) jno (bad) scas xor js sub jb pop xchg out orb pop cmp (bad) mov mov (bad) xchg rorl and fnstcw mov stos xor sbb cltd movups out fldl2e adc xor and add xchg mov and jmp mov mov jbe cmpsl push pop xor aam les and mov faddl out push (bad) lock into sahf icebp jb repz test fwait ss or cs test pop scas gs or pop push popf fildl inc adc inc aas xor or test mov dec sub mov arpl rcll and or pop inc cld daa flds pop stos sub ficoml sbbb cltd imul pop or lcall cmp idiv sub add jnp (bad) xor add (bad) xor pop lods inc xor (bad) fstl adc bound lods out into ret dec sub sti add iret xor add lock xchg (bad) push in jmp xlat push dec and sub push out cli sub ds insl out and lcall dec push popa ss mov mov rcrl adc repz loope mov xor dec popa dec xchg (bad) (bad) aam dec xchg out rcrb xchg mov stc jge or xchg push ds jbe (bad) into int jnp dec sbb lods push xchg fs jae add cmp mov ret leave sbb mov sub adcb sub rol xor mov in popf add into fmul loop cltd sub mov inc dec mov xor not add mov rcrb (bad) inc jns inc sub or xor scas cwtl shr or and jmp dec add dec xor sbb test out or repz and (bad) and push nop mov adc xrelease mov mov cld lret xchg jl stc loop out sub pop and ss sub or pop push sub leave and clc leave mov dec xor arpl rcll add ljmp xor mov inc sub dec (bad) mov xor jecxz pop (bad) jmp enter sub mov sbb les leave jne pop mov xlat add shrb dec mov sub mov mov and xor xor mov mov or pop enter ret imul xor shrl mov sub push dec or cmpsb sub fstps fstps imul mov pop scas addr16 imul xor mov or adc inc adc and xor rcl jle dec xbegin fildll dec dec sbb add jge add mov pop out jbe pop mov arpl pop imul imul fbstp pop xchg (bad) sarb cli out xchg sub (bad) cmp pop leave (bad) pop jnp cmp or push push and das or push (bad) leave test jo in sub mov insb jb and mov shl dec mov jg and fs je jne jne push jg push aad in inc movsb jnp daa daa lret clc sahf push pushl sub stos xor mov sub les sti mov cmp out and lea ja out and pushf mov ja push pop repz sub ss push xlat cmp xchg mov lds test leave mov mov mov jnp cmp jbe shrl hlt dec rcl adc inc lret pop mov stc aas xor les bound pop push (bad) xor repz (bad) cmp cmp push test xor mov sub divl in fs clc push adc das mov jbe sub sbb cmp stos adc out daa push mov jbe pop repz mov pop ljmp sub lea cwtl das pushf jno push sub imul lahf mov add pop and mov mov lret push xchg xchg dec fucomip xchg mov xor cltd aad lret add decl ficompl push cmpsl push jle sub ja xchg jb loope sbb push mov lahf in loop test mov push pop sub test xor std xor sub dec fsubl add ds jmp jle cwtl add mov ds cli push add popf inc sub dec sub xchg pop call add repnz cmp and icebp scas jle push push add mov sarl xchg sub mov bound ret jns stos mov sbb arpl (bad) ror in stos daa xor flds sahf mov lock leave push out jle mov xor sbb sbb cltd adc mov adc jle sbb inc lret out dec sub xor sbb cmp xor out dec movl or adc push push fs (bad) repnz adc frndint jns and and and or jg icebp mov adc stos cmp out xchg sbb mov test lock aam push mov mov (bad) xchg jo xlat enter iret popf fnsave sbb js mov sbb xor push nop lahf (bad) jo inc push sub mov popf lcall fwait sub hlt std xor popf arpl mov mov and cs mov sub out sbb (bad) mov and stos test pop sbb jecxz pop mov ret (bad) pushl movsb adc cmpsl cld fcoms adc mov fidivr inc mov bound jbe sub jle push lret bound ficoml imul jge sbb movsl lea and dec jmp popl mov jo mov cmp das or cwtl call and mov mov sub aas movsl dec cmp mov dec push mov mov ds sub inc dec ret push xchg xor jmp jbe adc (bad) ljmp or sbb sub xor jg xchg add hlt lret mov arpl jl add adc shl mov fs and and xchg mov fwait jl sub xlat xchg add stc push xor mov pop sub repnz sbb inc test push mov sbb fwait divb adc int3 call sub pushf sub push sahf mov pop lds pop or fs pop add xor test hlt mov gs (bad) and rcll lcall mov and lcall iret mov jmp ficomp mov les sbb ret sub pop in cli cmp test fsts mov enter fistp mov sub mov add pop mov pop (bad) test inc and pop sub adc (bad) int jnp loop out sub leave popa fidivr sbb shll mov rclb sbb insb mov lret inc mov jl push test ljmp dec mov mov movntps sub jo jmp mov icebp xchg sub sub stc push loope cmp mov aam jno jp je pop xor int3 push lock bound ljmp fcmovu pop cmpsl sbb mul jno xchg adc sbb xor pushf fsts call xchg in neg sub pcmpgtd jg out shlb pop xchg add pop shrl sub jb pop pop mov inc gs out xchg lock mov xor std pushf outsb xchg cmp jne adc sub push dec dec fcoms xchg jno (bad) inc or xchg ret imul ret sub cmp ljmp adc xchg xchg mov mov adc dec leave dec insl dec fsub lret mov lahf jo jb mov cli lret mov test aam and fnstsw push lret call xor push pop cltd push call popf xchg jle inc outsl dec scas xchg jno xchg (bad) repz dec pop xchg call mov daa jl daa lcall inc cltd mov repz sub ficoml adc xlat in mov rcll das push mov bound sub negl fsubrs mov lea pop push mov mov and xor scas sub mov ljmp xlat cmpsl add sbb jmp push pop mov movsb and ljmp and cmp rorb cmp (bad) mov jecxz mov adc add or ljmp xor ret cmp out test pushf jne sbb add das loope jp loopne movsl lods jge loope bound push cmpsb dec push rorb adc fcomps mov clc dec outsl jle sbb out scas stc int cli add out daa xor sub xor mov dec (bad) or jmp lret ret aad nop ret pushf cltd dec (bad) ljmp or ret rcl cmp mov and js scas pushf in push leave std pop idiv pop es cmpsb sbb hlt sahf jmp xor dec shr pusha inc adc xchg or or cmp int3 mov sub or jo pushf inc jp movsl (bad) sub cs fimul pop insl gs lret sub scas push adc pushf jne loopne xchg adc and jge mov fcmovu jne ss jb ljmp adc cmc out dec fwait push enter loopne or dec pop mov xor cmp pushf add jbe jne mov dec pop mov insl loop pop in movsb mov sub repz sub xchg jmp fisubl sti jo mov or dec getsec cli fidivr out xchg pushf xchg shll xor mov mov outsb xchg or or mov or js rcrl sub adc adc add pop jmp enter (bad) rep pushf test daa inc scas das ja inc mov xchg inc lods popf pop sbb inc stos xor sahf loope mov lret cmpl in ljmp loope jnp adc pop push add sbb xor adc sub push cmc jno dec fdivl jmp test stc aam call mov (bad) sbb push cmpsl (bad) sub insb sub xchg (bad) movntps daa call int or add and xchg idivb imul sub bound (bad) movl insl gs mov push add jns inc sub jmp (bad) shrl pop out mov cmpsl in xchg pop add jbe ja jmp sub cli and and imul lods repz negl ja add and daa xchg (bad) (bad) pushf jae push inc dec and sub cwtl ljmp mov mov adc into push pop lods mov adc xchg xor add mov pop dec mov test lea xor (bad) (bad) fdivr in (bad) out lret push dec ljmp ja lea idivb xor add fcmovu fnstcw ret pop adc mov xor mov ror es dec sti jne enter pop fnstsw mov adc and and push es and dec ss adc push es loopne and pop (bad) cmp cld daa negl pushf xchg mov je test push cmp popl leave movsb sti push fwait adc ret cmp xchg jnp ja add (bad) stos jecxz daa jmp add or (bad) je gs mov out fs jne test pop sub in adc pop sub outsb andb lret icebp shlb inc and fnop rorl xorb mov rcrb mov int adc out mov dec aas movsl jge push pop push clc jmp int3 mov jle and sbb mov sti and jae not imul or das js jmp mov das in pop jno cltd xorl dec pop (bad) cmc adc hlt iret gs cwtl mov xlat cmp out xor out mov push mov or lea mov popa xchg (bad) popf or pop arpl push mov ret leave outsl or ds and pop sub add mov sub pop and inc sub arpl xchg jmp xor or mov or gs mov in ljmp push add sahf dec jg neg mov (bad) cmp in add push mov or mov jns mov xchg std add cld (bad) in aaa rorb gs scas lret sub add shlb mov jnp lret inc push pop lds mov repz add sub rol jl add rcll ja jle push cmp adc pop dec cmp add imull das mov out popa pop add iret enter dec inc sub lods add jae pop je icebp daa or push sbb std bound pop push cmc push jae aaa mov xor mov in fwait movsl clc rcrl push or xor jge fimul mov stc push not (bad) jbe clc mov out inc out xor fs and lock pop repz mov adc mov pop add mov xchg sahf sub (bad) and sarl and cmp (bad) mov (bad) popf sbb add cwtl leave notb fwait push jmp movl xchg in movsl inc popf sub cld or adc xor xchg push adc popf cld or out adcb dec mov mov inc mov xor inc popf mov push (bad) enter daa ret bound cmp sbb sti leave lret dec lock xor sarl xor jmp xor sub jecxz adc fidivrl sub jb movsb lock and xchg sub out lret and je in scas jnp imulb gs inc push jb dec add sub aam jae inc ret inc add pop mov jge mov into mov ret sub iret shrb (bad) push rclw nop (bad) sbb lods out or inc inc pushf mov fnstenv clc aaa movsl dec (bad) pushl lret loop push push das popf sar les aam jo sub popf inc stos out clc xchg test enter ljmp mov addr16 test jmp and aad push pop divl in or dec xchg insl and push jbe rclb xchg push int aas (bad) or imul flds add jle imul andl mov xchg pop xor out xchg mov je xor or or ljmp or bndcu jae xor pop notb iret and sub cmp sahf mov movsl mov popf insl sbb ret std dec test push xor fsubr loope or cmp loop pop lds mov sti mov std gs int3 and lret adc push into test rol xchg mov xor ss mov jmp aad mov and mov fldcw test rcl xor fs ljmp cmp cld cmp sub call (bad) mov in mov mov inc sbb push jg lock popa jecxz sbb sub mov je lods jge sti and xor push ret (bad) test ds mov and mov sub es jb adc shlb mov fucom (bad) mov dec test loope popf dec (bad) xor movsb les add add setl mov or sbb or ret add int mov gs or sub call ret jl pop fptan inc add out mov std sub push test insb loope,pn mov cltd out fstl outsl xchg push in xlat mov (bad) jp xchg add cmp inc iret rorl aas and je xchg ret les dec cs into orl insl push shrb lock adc stos testl jae push lret mov gs repnz (bad) dec out sub into mov mov fs and idivb cld cmp dec imul icebp mov lods xorl imul and aad mov inc lret jl jnp dec out dec ljmp or popf lcall mov cld dec pop sub (bad) mov mov sbb adc xlat mov mov jge sti ficompl lahf dec rcll sub mul jg repz add sub addr16 leave xlat (bad) adc call mov clc adc mov addr16 push push (bad) xor icebp xchg int3 (bad) pop loope lret sub sub push cmp sub movsl into movsb or daa imulb inc bound aaa (bad) add push stos sbb dec out stos sbb inc inc or inc fwait sahf push mov scas add test push adc cmp add mov pop fmull xor or jne add sub adc mov fs rcrl jb adc (bad) mov dec call xor scas icebp movsl int3 gs js mov push fnstsw inc ret xchg xor mov dec leave js mov rol iret call ja sti stos mov ljmp cmp out mov pusha mov sbb lods and and add xor sarb ljmp or mov dec mov stos push jmp or push in out pop mov sti aas xchg sub mull jbe add jb push in dec and and aas sub and inc add dec jp loopne jecxz dec test in push fsubl fwait call rclb leave lcall sahf movsl testb lock lret dec loope hlt fmuls (bad) push icebp pop sbb js lods sti shrb pushf imul repnz leave call pop sub adc mov flds jg lock das fs mov popf xchg in popf jg stos mov push jg,pt sub pop and std adc cmp fisubr ret pushf xchg jno or sub xchg add cmpsb mull jmp loopne out xchg xchg pusha imul mov (bad) jecxz pop push negb inc lcall popw dec sub mov (bad) popf (bad) dec push jmp repz pop repz lcall dec cwtl pop aas jge (bad) jne mov push inc jmp xchg adc jle fiadd add push pop xchg mov add sbb movsb std call mov mov (bad) xor mov divl jmp ss popa aad mov mov (bad) scas fs in aad mov add cmpsl mov inc lcall add inc add dec stos sub test jl sub leave jno movaps leave loope push jae xchg std into xlat sub sub jge movsb cmp cmp add push icebp das push jg dec cmp mov or out xlat xchg push sbb mov in sub xchg ja in sbb negb lcall mov add jmp movsl clc push mov ret clc xor hlt decb (bad) jno fs in sahf movsb fnstsw jne icebp mov lock dec pop xor inc push test jns lret ja cmpsb pop sbb test sub cmp sub cmp dec stos cmp mov sub push mov pop xor (bad) mov dec jbe sub xchg push xorb scas loop or shlb into inc cmp rorl jmp int3 dec cmpb jle push sbb (bad) sub jns xchg (bad) mov arpl dec cltd test dec cmp sti popa popa iret pop inc sub xchg fwait inc add pop daa movsl pop out pop or mov xlat (bad) pop sub lret push dec push jmp out adc or mov dec leave mov inc jo jg jmp sub or (bad) dec daa and arpl div mov decl imul stc pushf jmp test stc seta mov popf jg movsb pop imul (bad) call popf movsl xchg fstps jnp aas daa (bad) (bad) dec pop mov stc xor mull xchg int3 (bad) mov push out cwtl adc imul cwtl or sub xchg sbb sub push out mov test nop push or dec mov mov add add add divb mov jae ret in pop mov mov fstps jle lcall test mov gs aas sub xchg mov mov pop mov out push lahf movsb mov arpl fisttpll sahf das push push adc (bad) (bad) repnz call and mov (bad) pop data16 ret and xchg push mov sub aad push jmp push pusha add pop or aam xor std pushw mov adc jecxz das xor (bad) mov adc sub pop testl dec stos stc sub out push xor xchg imulb cs sbb and popf mov je push icebp mov pop mov negl gs fstpt lret inc push mov xor sbb int sub or fbld jns mov push movsb mov addl and or jmp ljmp ret pop mov xor out cmpsl push je imul push pusha push pushf and (bad) leave dec loope sub (bad) xchg lcall daa mov shld (bad) cmc fcmovne mov pop jge or or lret and std sbb push xor jmp or and in es fild adc jmp mov out or out fs xor aad (bad) mov sub icebp or jnp and mov jnp push or or jg mov and fdiv xor test scas gs push xor imul sub push enter movsb sub sub mov in cs test push shr out lock add xchg mov not pop loope sub cmpsl or push and dec and scas aam stos mov or jbe add test jo cmp sahf fcmovnb lret imul ficom out stos into loopne out adc lahf jo adc mov xor stos je mov jle cli cmpsl les out popl or mov sahf adc jl jno cs call xor or nop xchg int add in mov scas test (bad) mov adc adc out pop jmp notb lds (bad) xor cld bound dec jle inc xchg scas gs adc (bad) push xchg cmc call and in push (bad) xchg push fisubr xchg push stc lods mov repz fldenv ror push jmp (bad) cmp and pop into pop mov das and leave adc repnz mov dec add out and es aaa mov and or jae mov adc xchg nop adc in decb cmc sbb and (bad) call lret ret negl imul jle xor pop mov (bad) es add stos xor sub lahf cltd das iret das shr xchg jns (bad) (bad) divl xor test mov scas insl jle test das icebp fstl int3 xor mov xor insl dec push add mov pushf iret xchg and and mov pushf out lret loopne and or imul (bad) jns pop add test (bad) dec mov nop sti imul inc sub pushf add mov or xor mov fld out mov adc andl aas xchg and mov adc lods fildl (bad) sti (bad) or mov std mov inc enter cmp fdivrs (bad) das mov lods sbb mov and jbe bound and loopne jmp aas ja push push daa inc clc or or and xor sbb mov (bad) ljmp pop sub dec jge ficom xchg imul in fsubrs movsb inc or or jbe sub sub mov sahf es adc ljmp mov or (bad) mov shrb (bad) xchg lret mov sbb mov lods or iret add mov fisub clc xchg mov xchg in mov pop xchg fistl ljmp call jno in xor pop xchg mov fs dec test leave push jg lcall enter lcall mov pop enter iret and or adc hlt (bad) xchg cmp mov ljmp shr dec (bad) out aam jno decb pop xor push jle cmpl ljmp (bad) sbb fcoms fildll movsl xlat mov and add imul xchg mov (bad) and xor xlat inc rcll (bad) idiv popa adc lds sbb xor imul fildll out mov add into push cmp (bad) lahf adc push mov fwait adc and push cmpsb in cmp lahf test cs mov push fucomp sbb mov xchg (bad) jne xor xchg and mov jge push push scas xchg imull adc rolb or cmp xchg mov and pop mov adc (bad) jmp repz and or shrl movsl jmp stos xchg jge flds lea or bnd lahf dec fldenv xchg adc sahf xchg pop lods mov jg test and popa cmp scas add or (bad) in iret mov das ja add add imulb xchg test or and xchg push adc sbb pusha add cmp cmp (bad) ljmp loope xor or cmp mov sub sti popf inc add imul andb gs movsl fstps mov imul xlat mov adc mov imul fadds or pop inc jne xor stos clc les adc jmp mov (bad) sbb (bad) cmc cmp mov push sahf adc xchg inc mov outsl jns imul (bad) jb and jmp mov pop outsb sbb stc mov in mov sahf fstpl cmp (bad) xor out dec jmp aas imul push fsubrs adc push cltd dec mov sub push in jg mov bound incl jmp out jne adc test xchg ror (bad) jmp pop (bad) sbb leave icebp mov imull enter popf sub cmpsb and gs int3 and mov fistpl and mov inc cs and dec sbb pushf out jecxz inc repz mov push cmp div mov lods ds xor (bad) into jge xlat xchg sbb inc mov mov jge add mov push cmp xor aam sub mov stc stc xchg lret dec push lret push mov shll dec inc outsl add arpl js sub xor cmc mov add add jmp bound cli rolb cmp movsl pushf adc mov or sub out scas cmp lahf jle push push (bad) mov dec xor cmp sub xor fildll dec leave mov dec sub imul cmpsb ret lds orl cmp das adc test iret in aam movl fistl bound xlat (bad) (bad) fidiv test jecxz daa iret or dec cmc inc cmp and fs push cmpsb sbb pop dec fimul ficom pushf add push pop test mov test daa ljmp lods jns dec inc mov (bad) das mov cmp fsubrs insb insl dec (bad) out mov clc xor xor out pop jmp lods icebp push jmp ror mov daa mulb or adc arpl cmp fnstcw ja jl xor jg and xchg fidivr shr cmpsl inc mov rcl pop daa mov daa pop jbe mov sub out lcall fs icebp push sub mov cmp add outsl lret pop sbb mov cmpsl aad and sbb sbb leave cmpb (bad) push push mov test add pop clc mov lods stos and jae jae in shrl mulb fildl jle pop shll jge sar pop mov lret fcompl in adc jne js inc rcll mov fs lahf repnz cltd and cwtl mov push insl pop jg pop dec movsl and mov ds mov adc in or ficompl fxam adc adc jmp add cmp das mull adc call in das adc mov cmp (bad) cli mov ljmp mov test rcrb lret scas sbb fwait icebp jecxz sbb fldenv cmp mov ds xchg mov sbb mov cmp push fldenv adc ss cmp xchg or push mov cmp jp imul dec faddp pop repnz add mov jmp and mov ljmp mov and or or add aad ffree dec into addps sbb clc lcall in adc mov div or or cmp hlt das inc add add inc in ret jg test mov push sub jb (bad) fldcw push jbe sarb orl and daa push (bad) pop dec push pop lods inc mov mov push adc mov sarl into xor repz xor daa add aad mov dec mov push out je jecxz sub imulb enter std pop lock movsl movsb (bad) (bad) xlat inc pop xchg call dec add mov pushf dec pop mov and test movsl lret jl push fwait mov daa rorl repnz loop out jmp (bad) rcr jmp adc (bad) mov aam insb in fbstp mov pop lret insl imul and pop mov loope insb mov add into and cld fbstp pop add mov mov (bad) or test pop (bad) mov xchg inc pop lea inc jmp sbb pop sub mov pop pop es pop jmp jle push ljmp xor loop imul add add or stc cmp ret idiv repz (bad) je push or (bad) pop ljmp fnstsw add add or mov rol jo mov mov push in xor jbe adc push or push pushf sub idiv push push xchg pop pop loopne push cmp daa mov jno imul cwtl fiaddl divb (bad) mov push call and movsb mov adc icebp int3 pop and ljmp xchg icebp (bad) int3 test jp leave cmpsl rclb sbb and ss mov sbb das stc mov mov rclb dec ss mov stos sbb dec mov divl cmpsb daa sub or sub sub or sahf imul inc movsb cltd adc les mov and xlat jns sahf repz sub clc mov dec xor shr or (bad) and add jge ret xchg lret jge push pushf add inc and inc add push and inc js in sub subb push push xchg mull out xchg imul xchg mov push jp and out and push gs pop pushl in push andb inc inc push or pushf cld push jmp (bad) mov out int3 xadd in lods mov fcoml pop add mov hlt in push js sub mov mov aas pushf shlb loope adc lods test scas sub stc xlat aas mov pop push adc dec xor push pushl inc pop icebp arpl negl ja fneni(8087 sbb cs dec repz add int3 mov pop test inc test roll push cmp aam pop icebp pusha push ret sbb addr16 (bad) sub jne in std adc mov test mov bound les leave pop push mov or (bad) icebp sbb sti dec ss inc pop dec jno xlat adc push mov pop pusha popf adc mov mov jbe sub hlt and stos clc or out inc popf sub ret or movsl fistl je (bad) repnz push lcall mov aad les pop mov add mov rorl icebp or test mov inc das mov es xchg cltd lods adc or jns adc pop shlb pop rclb mov push iret sub into mov cmc cmpsl mov or scas dec arpl repz add jo jg pop adc lret inc xor rclb cmp adc rorl iret ja and cmp mov (bad) xor adc cmp out sub xor hlt les aaa repnz sub iret sbb or out mov sub repnz xlat (bad) fstpt push sub cli fs or repnz gs aad mov test ds and mov push and daa mov fisttpl cmp mov and xor inc iret aad rclb or ss in lds out inc xchg add dec push lret or lods xor push adc or xor daa into lahf inc pop mov xor mov fstps mov push cmpsb jl add aad mov (bad) pop jo and cltd stos cmpsl push push fs std sbb out shll cmp repz sub xchg pop dec xchg leave scas repz (bad) out jnp shrw dec pusha (bad) out cmp nop cld and xchg popa (bad) enter xchg adc mov cmp out mov dec jbe dec hlt decb mov push movsl bound or inc dec daa mov pop mov or cwtl std and inc or sbb or pushf lcall and sub imul fistpl mov xchg jl ss xor out iret inc mov cmp popa mov mov testb repz mov pop repnz fistp hlt mov xor sbb fisub mov divb xchg ret inc pop shll mov push mov lcall imul push pop inc add dec call stc sahf imul inc and xor mov mov loop push repz lret push mov repz repnz push aam pop rolb (bad) xchg iret nop inc add mov lods mov add xor mov outsb lds stc xchg push add fsubl sub mov cltd pop es pop mull fldenv loop,pt aam shrb das loope js mov xchg mov (bad) adc jbe enter push js popf mov and mov dec rcl lahf pop add ret rol add popf mov mov xor jmp xchg xor add repnz add pushf add lock mov xchg jmp mov mov mov stos dec lds sbb pop xor push fnstenv jb pop jle dec iret out fsqrt push add bnd cld jle daa xchg mov (bad) imul dec jnp enter mov sub hlt or adc jmp or fidivr es pop xor scas lock pop je jae inc cmp daa or addb xor xor gs dec push xchg sub jp scas push xor sbb pusha and dec pop fisttpl mov shlb jg mov repz and jge xchg loop lahf xchg fistp repnz out decb in inc inc call mov loope push push jne loop mov sub add mov scas je mov cs xor ret fbld xchg leave and jno lcall mov scas outsb int3 push shrl movsl xchg enter clc xor faddl xor add sub xor stos xor and sub (bad) ljmp imulb cmp and xchg aad hlt mov int das ficom fs add jp lods mov mov (bad) std shrb dec mov lods push xor inc xchg or mov scas test add fnstcw (bad) hlt mov dec xor and daa sub push dec and rclb add test xchg popf mov add aad ss sub mov sbb or adc add aaa cmp sub and sub jecxz push fmull push movsl aam das decb sub sub mov cli and scas pop ja aas leave pop out sub push or jp mov xor pop add fadds xchg in pusha nop nop mov xchg sahf mov mov adc or dec and cltd jmp mov loope mov movsl (bad) testl cmp push pop mov fnstenv ds stc dec shll add or (bad) cmc jns cmpsb inc push sub jnp sub push mov test lret or stc sbb adc mov add lcall aaa sbb in das fsubr imul and xchg lds mov push shrb mov rolb and subl mov andl nop ljmp leave or inc (bad) mov mov in cli clc enter leave jge notl or mov pop lds pop push jg xchg std shlb pop jmp mov lea fdiv or cmp sti cmp sbb xor les mov jmp lock mov cmpsl sub adc inc das out xchg repz push gs cltd clc cmp push xchg or jns lret loopne leave pop xchg sbb cmp jbe dec movsl jp inc adc adc repnz add cli mov and bound pop sahf das jne sahf fstl cmp stos pusha pop pop cmp add push insb dec daa and pop mov (bad) mov sub daa testl ja lret imul adc xchg jno lret pop cld or (bad) stc int3 sahf jmp xor sub outsl sub and sub repnz cli ljmp push fsub pop mov mov std xor jle mov fmull or mov cli lret jo cmp xchg (bad) frstor xlat ljmp pop sbb inc and adc sub jmp mov stc dec mov adc sub sub sub (bad) into rorb shll jmp xchg icebp pop int loop,pn shrb jle pop pushl dec or and stos jecxz inc mov pushf fsubrs push inc rolb fbstp lods scas fdivl fidivl and (bad) mov cltd xor lret rclb and adc (bad) rcl mov xchg xor jmp mov xchg stc into daa jmp cmp in xor adc sub loopne jecxz xor ret sub pop add fiadd cmp fsts inc inc into add sti pusha push mov jle lahf jnp cmp into (bad) dec (bad) fsts and fcoms mov and mov shl std loop lock lahf add repnz aam (bad) mov dec xor inc sub mov xor dec call ss lock xchg push stos xor or dec stos jmp into mov iret cmpsb test jmp xchg addr16 outsl bound dec repnz sti fldenv repz ja sub addb idiv popa xor add cmp adc jl push incb xchg push stos pop xor lahf jnp out adc int3 gs hlt jmp lret sti sub mov xor mov sub js mov adc leave mov rcrl push adc orb adc jecxz xor insl push lea mov and fsts mov scas lret add add dec add mov inc jl (bad) mov xor xchg out sub cmp adc dec les pop add pop push push loop push push les mov mov mov add fstpt sbb dec mov add fisubl pushf xor pop jns lret icebp push cmpsb loop es arpl sub mov out sbb ljmp hlt out xor lods test and imul or repnz sahf inc push stc out sub fs ficoml inc fldt out sbb ljmp dec lret ror dec leave or movzbl mov out cmp in jo cli mov adc add in mov aas lret repnz or push push mov ljmp out jb,pn roll mov jo mov pop lret adc cli sub dec xchg ljmp add push out mov fimul or adc cwtl aam add fnstcw push mov clc js adc pop sub fs test xor std inc mov jno sub xlat out dec adc lock stos fnsave mov icebp dec aaa pop xchg in stos movsl jbe sub int3 jae xor insb dec jno xchg frstor xor mov fadds add mov je pop or inc repnz xor and jb scas cltd cmp mov jmp icebp sub jb data16 cld es call sbb ljmp push movsl imul lock mov inc out xor adc dec sbb outsb mov or stc repnz test fstpl out dec (bad) je mov cmpsl xchg into mov in lods pop fstpt rcrl xchg rcll add enter mov sbb sti xchg pop dec dec out cwtl aaa ret push pop cs dec outsb or push bound (bad) (bad) faddl jmp mov push mov repnz sarl stos dec mov imul push xchg fsubrl sub aaa mov je xchg ljmp les mov repz movsb les sahf lds fs into push (bad) sahf dec ljmp sub icebp sti lret test movsb add and mov pop inc and mov jne fwait xchg push mov les mov fcmovne adc stos fs mov leave push cmc in movsl sti push mov mov sub mov jge arpl int3 jmp sbb and dec in je push inc dec xor enter mov add inc adc bound pop mov negl fildll lret inc add repnz sub (bad) xor pop ficom sub dec or mov mov das ficompl jge pop cmpsl cld sbb sub in or sub sub ret mov xchg test test lods (bad) mov dec popa adc movsb adc test xchg mov std (bad) sub mov cwtl or (bad) dec in xchg loopne sar mov lea ds ljmp loop (bad) cmp jg daa repz xchg repz pop out out or mov xor lock pushf cld sub sbb jmp inc popf outsb sbb jnp (bad) aam add sahf cmp lods push sti add rol inc fmull imul js lret ss cltd not dec mov dec aaa pop add lahf mov out jne adc mov dec repz push xchg mov pop and in or bound dec negb mov imul sub (bad) cmovs push mov ljmp push mov lods sub xchg cmp or loope add nop jmp call call (bad) xor jle fsts lds or stos ljmp mov inc insb daa inc cli daa add jbe inc cmp clc mov ret pushf xor or pop ds xchg rcll adc movsl lds dec fisubr test mov dec out dec sti xchg mov pop popf (bad) push add add or add scas aaa adc and rep data16 mov into jge fimul movsb add ljmp push stos or out scas dec inc xchg sbb ss or cltd daa sub mov loopne mov (bad) or aad push fcomps push std add xchg mov dec sbb and mov dec adc enter or pop inc je loop into inc push xchg adc mov dec fyl2x mov test bound adc sub mov jecxz and ret sub clc and jl jb dec sub fs lahf sbb js dec mov js aad scas cwtl add dec lea call (bad) flds sub cld test insl imul fstpt sbb sub and test movsb out mulb out lcall push xchg mov imul sub out movsl loopne and arpl push sub mov mov out imul jle ret outsb inc or les out mov pushl cmp negb xlat mov mov jnp adc scas popa or jmp stos insl outsb or xchg icebp mov xchg adc sub pop es jmp mov iret xor mov popf data16 loop cmc adc mov divl pop add xor aas movsl out ficomp pusha dec ficoml jo add and or fmull add push and test pop jns sub mov daa gs xchg into lods inc movsl cld mov mov repnz decb xor jns cmpsl pop sbb xchg or or pop add incl fstpt (bad) cmp pop mov cmc pop mov xor pop fbstp mov aad mov push xor adc mov xor sub cmp test xor fcomi sub jle iret stos xchg lock fcompl sbb rol mov clc push dec (bad) mov and (bad) mov fsubp mov pop lret in out mov xor arpl pushf scas into clc sub cld or or push insb dec popa pop ret jl cmpsl mov jmp xor mov scas cltd pop jbe adc add and inc sbb test inc lock negb cmpsl jns or clc rorl sub jle ds cmp mov lock gs leave adc in jb dec push pop xchg cmp lds call dec adc in cltd into (bad) push repz dec add sbb inc mov pop mov xor cmpsb add repz test and add mov jae xchg mov in (bad) dec lods mov mov loope push mov xor repnz mov leave jg mov xchg xchg push insb and daa lock (bad) add clc push cld cmp ljmp sub out mov sub cmpsb and adc mov xlat add scas sub out fist aaa adc (bad) pop popa add popf imul repz scas dec cld add sbb and aam xor push xchg mov xchg ljmp inc cli ret call push cli sbb ja and lret dec clc loope loop xlat stos fmuls out or add (bad) xor test or jnp popf aad pop mov jnp inc (bad) repz aaa andl or sarl jg fmul fstl lods aad rclb test sub pop scas repz sbb push push mov inc loop pop in or loope pusha cmc cmp sub lds mov pop or inc add jmp pop push sahf rcr cmp inc add push or sub jle add xor add pushf cmp or (bad) cmp add mov pop testl jle dec iret sub jge xchg cmpsb clc daa mov hlt in cltd mull push push fs inc xchg fcmove cmp xor lret iret jns in push add and pop (bad) jo sbb fucom rcrb push push (bad) dec mov pop cmp xor pop neg add xor sahf jg into std aas push (bad) and ret xchg cwtl jbe fcomps in xor (bad) xor mov jg add mov or cmpsb pop fild ret ds inc jno or mov mov pop mov loopne aas repz imul dec and pop push (bad) dec add test pop push repz or mov jne mov add sbb call dec std sub mov adc ficompl fadds dec add jnp mov pop movsb test and rcll jb pop add pop pop scas and or ds stc adc inc dec add ret sahf daa mov push add scas rolb sub or je loop jns dec fcoms imul pop test add out repz adc test xor out sbbl xor test mov push add xorb idiv orl add xchg cmc mov jg and (bad) xor push xchg ret push push push dec scas or pop stc outsb hlt mov xchg mov or push outsb daa xchg ja pop sub xchg rep sub pop dec (bad) push fnstcw dec out test movsb sti xor mov push ds std ret dec add mov dec shlb lret pop in xchg repz dec mov mov pop and pusha aaa add sub push mov dec push adc inc mov popf xor xor push ss sub mov (bad) push add xor fs test lret adc (bad) mov insb xlat je ret lret add pushfw ret enter ljmp divb sub out sub mov xchg repz add xchg jmp out ret cld xor notl add fcoml mov xor out je ljmp idivl sbb xchg or negl ljmp xchg xor mov sbb mov fucomp fsubrp insb mov jbe inc add out dec mov mov test inc inc or sub adc out sbb sub roll (bad) mov insl leave aam pop sar mov and sub pop pop sbb mov mov jge fmuls and sbb inc dec inc mov shrl xchg adc sahf mov mov xchg in out push mov push lret push pop xor push sub xchg leave mov fs (bad) sub and xor test es jecxz add repz pop (bad) scas sub adc jmp adc movsb xor sti cmp out adc dec xor adc fbld or and ss mov sbb jg add inc (bad) dec fsubr popf icebp rol imulb push xor gs pop mov add lcall jbe das out lret loope cli rolb out fidiv cmp mov (bad) (bad) dec ret in adc push push xor out lret cli inc inc (bad) push mov cmpsl xchg mov outsb xchg aad push mov fstl subb add cmp sub mov pop ja daa jmp mov mov rcll and xchg inc leave adc repnz xchg dec pop cmp dec pushf xchg dec mov roll pop stos inc dec dec mov (bad) test repz push or xchg leave clc movsl xchg dec and sti xor ljmp pop (bad) lret andb lret clc daa (bad) into in mov (bad) (bad) call adc and xchg adc out ret repnz cmc negb adc pop in inc mov jp jp sbb pop sbb icebp inc mov xchg adc sti cltd js inc test addr16 jecxz xor sub repz dec mov dec sub inc mov fnsave and sbbb inc sub xlat pop (bad) daa jg xchg and fs cli sub pop add or sub jo inc sbb dec push mov (bad) mov scas pop fs loopne jne rcrb push mov test jmp pop movzbl cmpsl or mov movsl pop sub mov sahf cmpsl jg ja lahf ret add roll and jle push xor xlat push jnp jo add mov mov xor adc mov xchg int3 test lahf movsb push add (bad) or dec mov sarl or popa adc push jp icebp xlat (bad) pop lret mov lret jb mov fs fisttp aaa and adc stos fldl xor out insb sub jns dec mov jmp in aad jbe fs and stc cmp out sub stos fucom mov pop iret cmc push pop add and mov xor std push xchg xchg lock fildl xlat lcall inc inc dec lds sbb fwait (bad) or and sub repz sub les popf xlat in sar cmp cltd mov add adc popl jp add cli rorl in push (bad) cld scas sub dec mov mov sub lods stos dec jmp mov mov inc pop movsl (bad) repz dec jecxz and dec xor or ret dec ret pop and mov in sub (bad) ljmp push decl mov sbb cs (bad) mov ret icebp jg or jne push je in add cmovp sub gs adc negl xor add mov ja dec sti and loop sahf push fdivrs mov insl dec xlat xchg sahf xchg fistp push (bad) sub add push clc movsl sub inc enter adc jno popa ljmp ficom ret lea push pop sub fcompl icebp pop aaa cmc add cli jae,pt repnz mov jno in pop push pop test mov in pop add xchg pushl ja rcll imul (bad) fbstp jmp loop xchg decl std data16 rcrb mov (bad) imul mov andb xor add mull mov je dec (bad) hlt pop cmp inc fstps pusha or stos cltd aam cli arpl ds cmp aaa into cs ljmp push jae testb dec std daa lret lret test sbb popf mov add fimull and (bad) aam (bad) mulb sub pop and dec hlt pop xor jmp out sub cmc outsb iret scas sub jnp repz cmp and pop icebp movq push pushl inc es rorl mov adc into ds mull cwtl insb mov hlt xor jno scas fwait js fsubrs adc cmc mov bound fidivl lret jno cmp iret mov sub cld sub (bad) insb cmp or cmc rclb xor ror push out dec dec mov test sbb out sub or (bad) aad sub mov inc add rcl xor mov bound mov lods data16 pop add call xlat mov push pop add std stos out xchg stos lret push out fildl in mov push xor dec pushf fiaddl mov jb xchg xchg lds adc and sarl xchg mov scas add fsts clc icebp into xor inc aas pop mov adc fnstenv sub sub stc sub push ljmp pop jge adc mov xchg mov repz and cmp xor jnp adc into inc sub (bad) fdivs sub and scas lea push sub test mov mov cmp adc lods ja dec xchg mov fisubrl ret cmp (bad) leave pop cwtl stos sbb out int3 (bad) notb sbb repz sub outsb movsb scas xor rcll sub (bad) loopne lock sti push or cmp loope test mov mov mov lock xchg pushf inc dec or pop bound inc and (bad) pop rcrl hlt sub loope aas cwtl add xchg jno cmpsb jmp ljmp pop sub fst lods loopne mov adc add cs xchg push rep mov (bad) enter jb xchg mov rcrl movsl shl adc outsl push sahf (bad) test ret inc pushf push xchg push nop lock sahf dec mov pop pop xor stc dec xchg mov xor fistl in jg mov push mov and lret jmp sub jecxz or or les mov mov xchg add ljmp xlat mov mov or lock mov xlat lds jb sbb in xchg mov pop or in mov sarb cld push mov jae es cs outsl int sub jb stos xor or cs cmp incl ja push jne push cmpsl sti aas and jg loope sub call fild les out mov mov pop push sub xor mov jle notb sub pop daa sbb (bad) jo das loop maxps add sti xchg aam leave loop movsb lods xchg mov scas mov pushf pop jmp or or stos fcmovnu dec int scas test mov xchg sub lea loope imul xchg xchg mov stos cwtl and mov dec xor ffreep leave inc adc push int3 mov lods fbld out xchg adc int sub xor xchg lret add mov push lock dec in out push or int3 sub mov lea ficomp pop cltd mov es data16 outsl lods adc or xor test (bad) daa push jg out mov sub xchg or jne stos mov dec mov sub punpckhbw popa and push and sti fsub sbb xor jno or pop (bad) leave ja adc xor and mov scas pusha cld sbb xchg add pop call adc mov pop sbb rorl call test jmp xchg pop lret jmp bnd sub push (bad) (bad) pop add and dec mov mov adc std ss pop loope ja or mov packsswb jge adc xor cmpsl mov out iret mov or push sbb lds mov adc sub aaa adc pop push cmp bound jle,pt cmp sub add or dec insb push and or xlat xchg scas cwtl mov lahf movsb lret in mov popf js xchg mov pop push mov out adc call cmp pop in das cli fcoms or mov popa sarl push or jns test add pushl (bad) iret lods test daa repz nop popf xor movl pop mov mov cmpsb les adc in cmp push adc movb xor xor clc movsl xlat inc iret xchg xor ret stos loop adcl (bad) movsl xchg mov jl data16 popa inc jmp stos jo add add adc out divb sbb push sub dec (bad) pop repz mov out xchg stc mov add ret xchg inc (bad) pop (bad) std repnz daa xlat gs or mov shrl jle roll xchg repnz xor dec test mov sub and std fistp jg adc or fldcw ret daa add fldcw push dec fwait add mov pop daa adc sar jg fnstenv imul dec loopne out or pop gs push in scas mov pop cmp dec (bad) jb jne xor loope std sbb imul rorb (bad) std fisubrl sub stos xor or and mull mov ljmp leave sbb jbe add stc sub leave lock cmpsl add ret mov wbinvd jg push mov push aaa lret clc add or xor jmp pop or sahf stos pop (bad) daa sub or fs insb aam jp or lret cmovbe and test shr shlb repz mov fsubrs in xchg mov ja jo inc stc orl sub xor stos (bad) push mov stos stc int3 xchg mov mov add flds dec mov mov or xor jbe sub mov insb sbb loope xor adc inc pop clc dec and repz xor mov xor call sub add iret out mov int3 pop dec add adc iret ret inc add adc popf sbb shrb fs repnz push cli in out mov sbb jb sti test daa mov mov sbb (bad) cltd call imul sbb mov test add sub mov das add fwait adc dec (bad) ss scas in cwtl stos xchg lds sub and push bound fstl cmp rolb sub out dec mov jae cmp lret add leave add pop out fucomp dec push cmp cmp add dec iret mov test inc gs lea pop jmp cmpsb outsl sub pushf and add (bad) in jmp js xchg inc iret adc push pop sahf cmpsb les pop sbb add pop fs mov xchg lds das pop jmp arpl sti adc aas pop lret lds in pop inc fnstenv inc xlat es imul movsl lods test je sub xchg sti sbb fsubs sub ret cs fs dec xchg fild add mov sbb gs clc int3 vpshufd add adc sub dec mov rol fildll inc sub push shll xor ret and mov xor in sub mov mov ljmp xor clc jnp ret xor pop rorb je test test cmpsb hlt popf jbe push into sbbb (bad) ds or scas fadds jle pop mov stos mov aaa das inc scas push test shrl sbb dec pop mov xor stos adc ret dec mov repnz scas cmp and sub add or jbe jge pop pop lret mov push in loop xchg mov sub loope sub das test daa loope xchg insb mov xchg xor mov rcrl insb sub popf xchg add movsl inc pop pop loopne sbb pop pushf xchg push push test sub jno cmp enter int3 pop add mov ret jnp xchg or repz pop es or xor clc sub mov inc lea add inc imul popa and add fstpl push stc mov in add inc shrb movsl test test adc and addr16 xchg jg movsl xor push mov test (bad) repnz push sub out pusha movsl jmp clc xchg jle (bad) xor dec or std xchg add bound sub notb popf adc test leave pop mov pusha lods lcall (bad) mov and jg call adc xor pop xor lahf pop into cld les dec xor (bad) mov iret sub test sti lock in rolb iret xchg negb xchg and movsb fnop jl dec mov cmp sarb insl nop ja rcll add cmpsl mov inc and repnz stos das add jge push notl dec loop popf (bad) repz mov shll sub lock pop aad stos sub loope ret cmp js dec jbe lret ljmp mov pop lock or (bad) shr outsl iret pushl inc push add pop loope xor pop (bad) out ja cmc add mov and add loop aam lret icebp push loop fldt js pop shrl dec push stc in notb jne fcompl jp in dec sub mov lret xlat xor mov xchg ret xchg cli xor dec stos test lods mov bnd dec scas cwtl sgdtl mov xchg (bad) (bad) sti cmpsl cmp clc cmp cmpsl cmp dec dec test addr16 xor or add das and pop sbb cmc ret std (bad) push dec mov mov mov in sub (bad) fmul xlat daa mov negb jge int3 mov xchg mov sbb jmp out repz in pusha loop lds jo adc inc push add dec and add (bad) sub test pop add jne test mov or mov cwtl pop mov push push test pop or adc dec sub nop push adc push pop fsubl push sarl aas sub popf push adc mov jecxz in or cmp xchg pop aas add mov cli gs sub add mov testb inc sub or and es (bad) (bad) and (bad) and and and (bad) xor or add xor sbb jg fcmovu inc addr16 hlt iret stos test les shrl pushf xchg aas fdivrl outsb les fs xchg outsb inc add aad insl jmp (bad) mov push jmp xor jne cmp ret loop rolb mov adc mov out les gs xor mov daa mov push and es lret sub out std outsb push pop and jmp rorl sbb call fnstenv cld (bad) xor stc gs mov iret push push loope incb (bad) je cmp das xlat inc scas jns cmp mov mov lret cld arpl fxch imul adc dec js (bad) negl or aaa popf aad dec pushf mov sub in leave fucomp ljmp sbb xchg mov lahf inc add popf xchg inc pop push (bad) mov xor push subl push insl jge jp pop sbb fidiv fnstenv xchg pop pop das pusha sub or xchg push pusha movsl sbb cltd cmp nop jmp lcall stos cmpsl dec fldcw and (bad) mov arpl shlb out pop shrl mov push mov or aam dec aas test (bad) mov pop cwtl (bad) icebp or dec icebp sbb test mov popa mov push sbb sub lea mov daa std sahf addr16 out xchg mov ffree shrb dec leave mov aad out popf jmp xchg movb imul sbb xor (bad) push cmc shr imul or or pop inc test dec enter mov mov inc cmpsb repnz fstl mov ret add fs cli dec push not or sbb ljmp pop scas gs adc (bad) lret and out (bad) lret pop out push sbb adc mov jo je mov jbe pop ret xchg imul addl popf xchg sub stos (bad) lret or mov push (bad) stc adc lods cwtl xchg leave imul sub mov mov (bad) dec out cltd lcall mov in mov push outsb cmp stos mov sub lds imull sub adc lods jecxz xor insb popf jge mov dec mov adc lret stos jnp fidivrl mov mov mov xchg ljmp xchg testb outsb stc aam aas mov sbb mov fistpl push push dec pop push daa push bnd daa cli inc int3 add mov and sub loope xchg jl sub subb scas test je imul leave hlt lahf sbb xchg mov mov (bad) cmp fsubrs and sbb or xchg push sub in jl loope mov cmp cmp xor int3 daa and es icebp add out sarl lret add jmp xor sbb mov dec xor mov inc mov cmp lahf push aam xlat bound popf dec mov add sbb movsb jmp lods xor sub stos out pop xor mov cld pop daa or pop pop sbb rorl xor xorb mov lods jp jmp inc test sub xor jge add fldl jns xadd jge dec add lods (bad) loop movsb repz add (bad) dec xchg (bad) mov sub pop ret test push xchg aas dec out mov leave sbb inc sbb lret ljmp cmp bound xor xchg cmp (bad) sub or mov in xor xchg js and push push pop and jle push jo loope add mov ja push aaa and push pop and out or inc les push inc fs sarb dec jmp mov xor sub lret shlb outsb jns repz les sub das call add fcoms mov mov and hlt sbb icebp xor fistp pushf and sub (bad) pop pusha (bad) add ljmp fwait (bad) cld icebp mov in sbb leave mov into mov xor roll inc xor out call add jle (bad) leave mov jg jmp xor sub imul push push push add sbb cmp and xor dec add stos cld push and mov pop (bad) fdivrp (bad) dec mov das sub (bad) cmp pop inc mov repnz in inc movsb stos mov dec mov and add jp jge mov test clc daa movsb out in sub and push sub call testl sti popf sub into sub ret pop hlt outsl movsl cld sti (bad) icebp popa xor and mov mov sub xchg pop mov dec repnz and and ret pop cwtl fsubrs cvtps2pd xor add fnstenv cs push call adc (bad) pop and push sub popf dec push repz jecxz jp sarb mov rorb dec add dec adc dec lods out sbb sub scas sub dec and into and test les cmpsl pop jg (bad) int jp xor push movsb fwait jae cmp mov std stos test mov mov sub out sahf icebp sub out inc and add aad xchg jmp iret mov mov add (bad) mov (bad) leave psllq and mov incb jg fadds or and add add push cmp mov push les push push sub out sub dec not add push add xor pop das or jo jns push mov out or jmp jmp test xchg jno add ret inc sub pop loopne lods mov cmp sbb iret push cmc mov in add or cmpsl fidivl sub pop and pop mov push jp enter adc pop jnp sbb iret daa cmp inc insb daa and dec jne xor pop test add mov add sti jo ja adc xchg lds mov sbb call int jno sub mov pop cmp xor mov add sti cltd add sub mov jae xchg xor or loope dec mov jg scas (bad) stos stos (bad) cli (bad) in movsl push adc mov popa (bad) jp sahf repz sbb mov mov pushl (bad) or (bad) mov sub cwtl xchg iret out sub (bad) xor sti sub adc bound repz bound (bad) lcall sub adc jecxz pop sahf mov adc in enter push mov jns and call sub jbe or fdivrs sub fistl sbbl pop lds mov in mov iret jmp push outsl jne mov das pushf sbb test (bad) mov fbstp negb das (bad) jge jae pop sub xor sub cmp push clc lods out sub add cs mov xchg decl cmpsb (bad) bnd pop add ljmp sbb add movsl push xor shr sbb movsb out ret push jmp dec test (bad) leave cmp xor jg xchg shlb xchg xchg push mov ljmp fwait cmpl sub repz std jno dec lcall enter int ljmp xor cmp lds mov (bad) out (bad) ffree pop and and sub xor mov mov pop xorb mov xchg jae loop lcall mov mov push in in mov fisttp push popa rcl xchg leave and jbe sub inc inc mov or lret out ds add shrb push jmp js jg pop les (bad) xor call sub and xchg mov inc mov sub xor sub sub cmp xchg pop aas cmp dec out mov mov jae adc mov movzbl xchg hlt dec int outsb popf loop clc call push xchg nop clc and sub jge or mov iret cs hlt mov lods jnp or push cltd test fisubl mov das aad add sub dec lock pushf cs add ret xor mov cmp jmp sub xor (bad) out sub xchg (bad) mov setb (bad) sahf out lds icebp add push arpl mov insl fnop dec pop sbb cmpsb scas ficomp in jmp mov test stc adc inc xor push adc xchg mov lock add cwtl push addr16 cmc pop jl fsubrp mov xchg mov insb repz mov adc clc xor adc fidiv cmpsb std push pop adc mov sti push adc mov aam or (bad) cmpsb lds je (bad) sarb (bad) test cmpsb dec fdivl icebp cld shl xchg ficom scas loop lds clc test push mov xor and out sbb pop das cmpl jmp mov xchg lcall sub pop movsl mov sbb or les jne insl xchg mov xchg ret and dec or pop xor pop and or cmp adc mov lcall repz enter lods jmp add add lret or out mov push xchg adc pushf in dec (bad) mov ds xlat mov stos dec push lret test sub decl cmp mov mov stc sbb push rcrb xchg pop stos and icebp fcomip jg sub jle fs std pop std movsl (bad) or daa adc (bad) out pop repnz and xchg xchg outsl cmpps neg sbb dec cmp pop or mov cli sub push mov cli push sub cli ret aad (bad) adc add add sub mov mov mov mov inc mov push ret adc dec out cmp das ds test sub stos cwtl in xor cli push pusha cmp fldenv add fisttpl inc test sub cmp push pop leave stos sub repz inc imul mov push mov aas scas lret aad add xchg in mov lods aas and sahf pushf sub mov sub xchg lea add dec cmp jo adc xor daa pop cmp lret decb fdivrl lret dec cs mov mov or leave xchg arpl in adc mov xchg jl fs scas lret cmp and pop cmp fisubr add adc ljmp or mov (bad) movsl clc mov adc out cs jmp xchg sarl sub or xor mov push mov xchg (bad) stos repnz jge stc dec push or and xor mov std push mov ret xchg jmp enter lret (bad) lret and jge jmp (bad) mov loope ret mov and jmp notb or lods pop enter inc mov imul cmp ds stos or adc loope sub sub and out add or fildl aam (bad) xor dec gs aam stos mov mov push jo jmp xor out xor jle scas insb inc mov ss out aad fdivs or mov mov pop cmp dec adc fbld pop mov pop into inc popf pop stc pop shr jne iret mov ljmp xor lea jns xchg clc xor (bad) sbb xchg pushf lds cld sbb repnz add or xor and push je mov xchg call adc icebp sub in mov sub lods and aas xor jmp stc aas dec leave add xor outsb and iret mov pop ds hlt adc mov repz sbb lret xchg mov jecxz cmpsb adc bnd jnp mov push sbb mov or pop xor out movsl icebp push sbb aam push out inc push and mov jmp sbb jmp xlat test (bad) sub fmulp push inc or mov (bad) in cld and and add cmp adc add psrlw push mov daa sti ljmp mov lret and or sbb pop and inc cmp lret adc and loopne fldl adc xor outsl bound aas jb xchg jl push push adc mov or jl pop cld out mov mov clc cmpsl mov inc and jge push (bad) push inc xor mov add pop ret push xor sar jae test add push mov test dec out mov xchg cmc xchg sbb mov dec jle cli mov pushf inc (bad) dec and adc loope loope fwait cli jg dec lods jbe sbb aam pop or xlat pop lods lods inc mov ficom loope test outsb in jb out adc stc test dec sub sub inc orb in inc sub lret fistl insl jns aam scas ret stc fmull dec mov cmp cmpsl dec add cld push or mov in pop jns imul das in mov dec cmp sbb pop adc stc (bad) dec pop mov xchg sub lret push add lret mov gs lea mov out xor xchg mov pop movl hlt leave inc daa fucompp ljmp aas pop out call and sbb push pop pop xchg stos sub fisubrl jno sub adc test into mov clc pop pusha mov (bad) sub add push mov testb ror imul bound fimul lret testb push add dec fsubl or sub mov jecxz and imul sti inc and scas mov dec jecxz dec mov pop fsubs pop (bad) dec pop lret mov xor pop mov xor std xor xor pop in xchg mov push out adc add adc sub sar cs dec mov sub inc mov (bad) mov ljmp mov or dec mov (bad) jb insb dec pop aaa outsb mov sub sti or mov sub scas xchg and call sbb sub sub mov fistp fs mov mov push adc dec in sarl pop rcrb test push stos aam scas mov cmpsl jle cmp sub cli bound mov repz adc bts in daa cltd and stc jmp stc xor xchg js mov jbe test repz cmpl dec add dec divl (bad) cmp pop fistpl cs (bad) xor sbb les pushf subl (bad) jbe push adc (bad) mov stos daa or ret andl and sub pop mov mov idivl mov loop mov sbb xchg jl pop inc sbb sub fild sti mov and jmp aam pop iret stc jle call test dec inc and xor jle shl mov imul mov adc sub daa sub stc adc and fdivp imul adc push jle (bad) push lock and pop dec test pop fcmovne jne mov pop js hlt jmp cld outsb lret mul loop push jae repnz sub lret das fidivr loopne adc push xor cmp (bad) xor jnp adc xor ss shrl imul icebp les inc (bad) out xor test (bad) dec out daa mov mov movsl minps mov mov or mov (bad) das mov push sub jle push into lods call out mov sub xor pop out adc ds cwtl sbb pop (bad) xor ss xchg and cmpsb adc sub outsl loopne mov pop jge in rorl pop cmp aad mov sub gs ss push mov xchg fs xor sarb ja std subb bound xchg mov out jmp (bad) pop jno sub xchg imul popa cli sub imul (bad) and dec sub adc scas add add je call ljmp fist lods sub insl inc and ljmp mov (bad) xor movsl mulb adc dec js std out mov dec imul pop shr sbb sub xchg dec push incl (bad) push in dec and in xor mov hlt iret dec mov xrelease sub ds add sbb fstp aaa jmp (bad) cmc dec std xchg push jns push mov xor xor adc out dec xchg out cld movsb mov daa insb call pop cmp push scas adc xor sti xchg out sub test mov cmp mov mov sbb pop dec jmp add mov aas dec icebp sub xor xor fcmovb or mov sub xor lret adc mov sub push lret test mov ljmp neg mov mov shrl (bad) lahf (bad) sub pusha sub pushf mov push repnz pop negb repnz into sbb (bad) shrb pushf mov push nop scas inc sbb in jle jmp push pop (bad) pop pop cmp scas or (bad) sbb cmc mov pop ret popa loope lret pop loop bound dec pop xchg xorl int3 xchg sub sub jmp gs aas lods push lods mov test sub mov in and rcll xchg dec adc lcall roll xor out mov mov mov push dec das mov mov mov sub dec and pop leave das rclb xchg js mov stos dec je pop sub cmp sub sbb xor mov icebp lahf fwait repz add mov sbb into push pushf lock pop inc push test xchg lret pop dec int3 lahf ljmp mov pop jbe aam push mov pop js lret sbb lods pop fcmovnb shrb xchg pop pop repz test mov (bad) jge repz cmp dec fsts (bad) out xor mov ret decl mov mov mov aam adc mov add into sub jmp mov gs lods and jl jb push jle jae adc out sub push daa add or clc rolb xor mov inc lret xchg mov sub mov mov inc (bad) xchg adc leave gs lds das rclb mov jecxz ficompl mov sbb shll or mov daa or push in and mov int mov loope cmp loope xor js xchg das mov jno jg shlb jg dec lahf jl xchg rorb mov in (bad) xchg pop loope (bad) xor push fmull psrlq xor jp dec add xchg sub cmp xor repz popf call loopne cmpsb xor or dec ds adc orb mov lret insb shrl fwait int3 ds lahf cld jo repz and adc and fucomi cwtl mov xor mov cmp les into fsubrs rcrl stos data16 cmp inc dec add ret adcl icebp xchg inc das xchg jmp inc nop push test inc repnz xchg mov push hlt out mov or cmp jmp pop subl cmc mov fisubl rolb jl std xchg dec popf sbb sbb cltd rorb cmpsb shlb mul pop sub pusha sub or push xor jmp mov call mov cmc dec xor sub pop ljmp iret mov ja sub mov movsb jp dec sbb into ja subl or sub jns mov adc mov sub (bad) insb ljmp daa int3 sahf xchg hlt xchg dec sub mov lds mov xchg push xlat dec mov (bad) mov (bad) pop out sub adc lods cmc mov out mov pop (bad) or iret pop das into call daa xor push mov dec imul and xor leave xchg cli fpatan inc mov add mov mov mov jp bnd or xchg cmpsl jo popw loopne loopne popf gs push movsl popf adc sbb movsl sub test push mov call pop jo xchg std adc adc mov mov pop aad lods test pop jnp nop or push pop cmpsb lret mov stos sub or sub nop or mov stc pop dec scas sub xchg lds xor out fnstcw or push out les pop repz pop mov stos cltd inc sub or jecxz push sub xor add mov sbb and sbb rcll mov in jb pop lock xchg fxam ret scas jecxz shl fldl rcrl aam sub je fsts push dec mov push insl add add loop mul inc mov jbe cltd mov sub xchg adc cli sub outsb mov daa sub sub xor fbstp sbb push rcr lahf aam push insb mov (bad) lcallw pop mov mov jns inc les or (bad) xor mov pop and and ret pop cmp loop ljmp jo inc or push mov loope stc cs dec dec add mov push jmp xlat sbb dec lods jge cli jne idiv pop std sbb sbb popa rdtsc scas push shrb adc push out stc cmc int adc mov and lock rcl sbb jg es scas mov negl mov pop mov inc (bad) mov jb into cmc repz cmpsl scas jo mov (bad) mov repz mov jmp out add test dec sbb stc insb stos shrb repz js lret cld mov xchg mov dec pop cmc fucomi das leave adc ret and adc rcrl testl out sbb dec mov mov cmc or jns dec or push cld pop into roll popf (bad) ds or roll pop xchg fmul das xor js shrl jle adc jecxz dec mov sub sbb xchg cld push daa negl les out adc test jae add or inc mov add fldenv shr fstpt aaa jmp (bad) dec adc sub mov dec mov rorb loopne and adc mov xor sarb sub cs push call jmp and sub movb or (bad) dec add mov jmp adc sahf mov xor push ret scas loop xlat push mov mov pop (bad) stc iret (bad) rclb stos or push xor cmc dec mov ja cmp sub add or push jge hlt dec jmp (bad) xor cwtl jmp js sahf and lahf hlt mov es bound rcll sbb mov xchg sub into push xor jo notl sub mov sbb xor loop push xor dec sub out int3 sbb dec sub les sub pop popf out test dec mov mov outsl mov push fsubrs (bad) or xlat int3 add pusha lahf xor xchg aam les push (bad) repnz xchg test (bad) repnz negl dec jo dec loop sub imul out mov xchg stos into movsb dec stos pop cli sub add test les mov cs gs (bad) cmp leave out sub mov xor add mov fucomp sub jae sub scas mov (bad) xchg xchg push mov gs xchg out xor adcb ss adc es mov jno inc sub lret ret loop push repnz jle sahf sub (bad) ljmp push (bad) or mov cmp std lahf cmpsl jmp xor jne pop sub clc out xor test movsb xor or inc push sbb rcpps lret pop pop push adc pop or cld add aas mov mov movsl xor jmp enter fdivs mov push xor pop pushf rolb inc xchg pop pop mov (bad) or mov adc sub xchg into sub push and out mov xchg and xor (bad) (bad) ret ss sub lret aas clc mov sub mov jl pop out sub sbb idiv xor (bad) popa loope xchg scas ss lods (bad) out fiadd int das imul or lock xchg pop sbb repnz mov adc mov sub dec or (bad) mov cmp das repnz jge sub mov xchg add popa mov stos mov dec inc pop rolb push and sarb pop push in (bad) ret mov (bad) fs or outsb lret sub sub jns mov cmp add mov mov fcomip dec lods sbbl push cli jl or ret cmp mov xor test or inc xchg adc jecxz jne push adc ja fcmovne mov pop pop ljmp push dec lods dec lds xor loop shrb inc mov jmp (bad) adc shr adc sub pop xor cmpl jns inc xor xor mov into test pop iret scas sub add pop mull xor dec mov dec pop mov scas xchg (bad) mov dec cli wbinvd add icebp mov push xchg push cltd sub push stc dec movsl in lret jg int3 jmp or into in mov loopne insb insl cltd jbe dec (bad) mov push add mov lcall aad jmp cmpsb pop mov out inc push stc sarl in jbe cmp mov mov mov pop divl sbb adc into aad inc push adc pusha pop test mov out (bad) out xlat mov test mov sub (bad) mov jle pop xor hlt jecxz das lcall and mov push pop dec out lret je cmp out jg or mov sub iret push dec pop cmp mov mov and testb pop mov jmp js lret pop push fbstp mov xchg fldenv dec inc in aam push dec cs std dec jge (bad) push xchg movsl mov sbb in mov leave xor sbb xlat cmc jns cmpsl sti ljmp inc xor in jle add in pop mov and mov adc iret sub call (bad) aas jb inc add (bad) xor stc mov adc test xor js jl lds sbb pop sub adc addr16 sub mov popf jbe sub push mov into cmc into xchg scas rorl mov cli sub push rcrb dec ljmp std subb inc xor insb cmp ficom bound je fsubs test repnz cmp sbb mov pop ret mov cmp cmpsl sbb pop daa lcall leave leave mov pushf hlt mov push div adc sarl (bad) and dec push hlt jmp test sti (bad) lods pop cs and ficompl incb dec lcall pop jae daa pop bound (bad) dec loopne insl call xchg and push (bad) pop push (bad) jnp mov dec aas push push mov push lgs out adc sti stos dec pushf dec negl adc sti sbb pop repz test mov fadds lret jp xor out (bad) pop (bad) lret inc insb rorb mov sub out sub in test ror mov xor mov mov jl insb push or or xor or dec mov scas adc test lock sub inc or mov lods push cmp sub imul insb adc out insb jle pusha insl fimull (bad) popf jle jmp dec ret xor (bad) sub stos jne adc lret cmp xor lahf push mov ljmp sbb repnz pop xchg jno aas dec ljmp or mov cli lret pop mov stos bound jmp lea add dec pop out cmp fsubrs (bad) mov sbb leave dec jmp loopne ds stos aam mov stc outsl jb add jb insb mov insb xchg xor fldcw aam loopne out addb xor int jne imul sub dec pop in xlat cmp sbb jo dec divl mov test lret and aad les leave and (bad) cmp in test movsl mov pop mov addr16 fiadd sbb in dec mov jg mov cli sub leave push push adc les adc repnz add js aad mov add adc fsubl xchg or and aam pop mov or or xor dec cmpsl push dec xchg adc sub jl dec jmp rorl sub and add movsb and movsl jge mov inc adc inc xchg (bad) out dec mov and enter xchg cmp xlat cmp shrb out das clc divb jg lock cltd daa xchg out dec into sub stc push mov push jne jmp aad outsl dec jno mov jo or icebp popf (bad) sahf push mov jb ljmp mov sbb push ds fsubl sub sub out enter pop pop jl (bad) or xchg inc rorl inc xchg icebp inc movsb fsubrs inc inc daa mov call idiv lcall inc or mov cmp sub jbe clc mul push jge sahf pop jo mov push out mov add jnp cmp sub mov cld inc arpl sub test loopne cmp xchg pop fwait and mov rcll stos scas mov adc sub or and lret or ret or sub adc fcomps add mov push jbe push repz lods daa mov add pusha mov movsl xlat adc lds lret mov sub stc cmp adc into mov xlat cwtl imul dec stc (bad) aas flds push mov (bad) orl dec lods das imul inc imul mov ret das rcr ror imul pop adc pop sub lds cmp or scas loop nop into pop sub sub xlat jb iret jne mov push hlt mov pushl mov adc scas lret jmp mov mov rorl mov adc rol pop add in jmp rclb push lahf inc xor ret add sbb mov repz mov or stos cld xchg mov das jmp inc add pop sti and inc xor mov and insl sahf mov pop inc dec lret dec call dec clc dec jns lret xchg in ljmp jo and das (bad) ja outsb call sub iret add mov pop ret lods pop cltd rorb cli xor das add jg out das adcl push push loopne pushf jo mov push out lods jp test mov test (bad) lock pop pushf push inc xchg imull into push das ret add sub adc jle lcall mov lea popa lret inc or pop lods scas and pop xor jmp lods (bad) lret mov dec or xor lcall mov push mov sub pop xor ret das push pop mov fildll pop xchg xor je (bad) dec sub xchg or ja mov stos bound repz push ljmp adc dec pop add ljmp inc jo and jo mov push push pusha jmp in adc enter (bad) push imul mov sub jb push leave sub (bad) dec fcomps shrl test mov mov popf scas adc pop mov pop mov mov xchg mov or xor dec iret iret call mov or mov (bad) outsl loopne loope pop adcl (bad) cwtl das sub out or sti add mov and jl ljmp xor loope aam fnstcw lret xlat xlat xchg pop mov xor sub xchg repz pop (bad) les or sub adcb or (bad) cli and dec mov and xor insb lret jle mov lcall lret or push fimull xchg mov lret xchg dec mov push pop jbe mov push pop push jg es sahf mov pop imul dec or das std mov fnstsw or (bad) rcrl loopne add jne stos xchg hlt xor andl xchg fistpl (bad) (bad) dec (bad) cs js jno das lds dec pop call lret out in das xor push movsl cli xlat inc repz shr and mov icebp push dec sub dec ljmp das xchg sub push ret outsl jge mov aad sbb cmp lret int das daa ret sub or xchg icebp xchg cmpsl cld xchg xor out daa das fnstenv dec int3 fs inc mov jbe pop repnz dec test pop jmp add mov jl lret rcrb mov cmpsl in adc cli repz rorb fldenv popf clc jb js ja cs mov fadd (bad) lock xchg adc push cmp pusha mov xchg mov xor ljmp pop and mov push mov jp pop sub add push les sbb mov and in mov xor mov pop into mov xor mov ljmp bound ret pop pop cmovnp mov mov test xor out pop out mov add ret cmp movsl mov cld push push fisttpll push xor gs mov cwtl xchg lret out jmp push insl xchg jecxz jge js pop push cmp bound push sbb inc daa pop cmc pushf inc mov (bad) out jl lea rcrb xor das xor and stos mov or mov rcll movsb js add fadds mov aam daa mov repnz xorl mov call shrl scas add stos sub or daa (bad) ja xchg mov and bound shr and sub orl js je sub popf jbe push push jno xchg repz jl (bad) or das icebp (bad) insl pop sub xchg mov inc repz inc cli sub stc popf jns bound pop aad dec push xlat jmp or sub cmp hlt cli push add sub (bad) dec es xor jbe adc fisub test mov dec add lret movsl addr16 andb inc mov lock jb je push xchg xchg xor lret pop movsb cmp imul ficompl push dec mov mov mov xor mov shlb jmp sbb fnstenv popf jae fwait pop dec xchg fstps or outsb ja adcb je jle loop popf jbe push cmp mov push cmpsb dec stc loope sub mov lea jne sub push bound push add mov cmp lds rcll mov mov xor sub ljmp fdivp add push jns pop inc iret daa jbe ljmp out add fistl adc inc stc fnstenv repz negl in (bad) movsl lock xchg sub pop mov mov or mov jno imul pop fnsave jl (bad) subl add (bad) (bad) dec inc xchg and loopne stc push bound adc push xchg cmp adc push (bad) stc pop ret test cvttps2pi cs mov test ret repz mov shrl rclb and rcrl test mov mov das bound scas fdivrs icebp repz aaa fbstp cmp xchg daa outsb adc xchg cmp das mov test mov adc mov cmp fmull (bad) dec test sub and cld mov dec lahf sti cmp (bad) or xor cltd push (bad) jle aam out outsb sub xor sub mov (bad) xchg lds fiadd aad popf mov mov outsb cld xchg imulb and add pushf mov lret das hlt fs aas gs ljmp cmp ss sub outsl inc add fwait movsb lret cmpsl jle in push jmp jmp push push jl and scas and jo cmc or lds xor iret pop inc pop and cs icebp and (bad) dec cmp dec (bad) insb push xor popf hlt scas lods mov cmc mov pop repnz and dec mov jle inc out jmp std sub sahf test mov enter fisttp dec cld add stc cmpsb xchg cld fmul lret int3 cmpsb test xor (bad) xchg and sub jns imul dec (bad) jbe rclb rol inc and adc sub scas int jle inc pop mov dec mov mov cld lods mov test call sti faddl (bad) mov or xlat mov (bad) (bad) mov xor ret jae adc jne mov clc pop mov mov pop data16 les mov ret xor das pop mov imul ss xlat dec fisubl or loope lret nop jl out sub fdiv add cmpsb sub lret mov and xlat or jl pop jae adc lret aam pop jno xchg loope mov cs jge gs sbb lret ja (bad) fistpll jo loope xor push test daa or fisttp xor lds test and xchg mov dec jo lret divl dec das xor xor inc adc or add rep cmp sub mov test pushf mov cltd jnp xor push ss push mov incl jne icebp movsl adc xor enter sub adc out das sub repnz jne adc push sub add lahf pop mov int3 scas (bad) (bad) idivb ljmp pop add in loopne and jne mov fisub mov insb push lret gs lea daa (bad) jle pop sbb xor mov scas repz leave inc sub xchg jns imul in jmp pop push les sti fcom leave icebp loope sub aaa pop icebp dec jle push jecxz adc shr lods pop mov outsb sub mov jge loope mov xor xor dec and and (bad) or cs mulb scas push sub dec push std fisttpll sbb xchg jmp xchg popf push nop lahf push mov iret mov stos bound enter sub xchg popf pop jmp xor ds xchg popa dec out outsl fcomps fimull xor cmpsl negl jle test sub fnstcw mov repnz aam mov (bad) lods lods xchg roll xchg fadds das idiv das (bad) add push pusha sbb dec idivl sbb orl iret cltd add outsl clc imul dec xor pop mov xchg icebp (bad) xor xchg sbb push call jle jmp test or pop mov fbld lock mov flds fnsave lods negb cmp mov fsts lds xor mov mov sbb mov mov int sub jbe add cmp in lret sub sub pop out sub push xor cwtl ja mov rcrb adcb arpl lret out xor lret push xor mov lea jno daa inc icebp aas adc mov iret dec addb repz cwtl dec loope xor repz mov test fisubl pop pop cmp dec and mov add sub fdivl loop testl loope add cmc ficoml push push in enter push fdivl push or cmp aas xchg out xchg sbb dec std pop xlat adc hlt mov daa jns les sahf mov cmp dec fs jecxz add or sbb or push inc cs xor push sub dec xchg push or push int inc test bound out movsl dec fdivrs jg mov insb in lahf into out iret mov call mov aaa cwtl dec or and in push mov rcrl movb adc sub lock (bad) cmpsl fs lds mov jbe push or or stos pop call adc outsb call (bad) (bad) and jle lret xlat sbb (bad) bound mov mov sbb mov mov xchg adc add rclb inc adc push outsl lea loope,pn outsl test leave (bad) ffreep dec and push jne and add repnz imul out cs bound or repz stos ret flds iret (bad) mov push dec sbb je mov xchg test (bad) mov push adc loop mov mov out push adc sub jne cld out or in lret cltd mov rcl or push test loope sbb decl (bad) enter xchg or mov jp test (bad) lret pop or (bad) (bad) daa fmull or dec xor fbstp repnz sub pop int3 push xchg dec dec dec fucomi and call in mov push or push or (bad) hlt gs push xchg scas into and and call adc fs loopne mov pop adc stos cltd inc jmp cmp test fsubr repz or mov xchg mov push xor ja mov or (bad) mov cld dec lds sub jecxz xor dec ljmp sub clc test and push sub xor outsl (bad) hlt imul sub (bad) lret mov das dec fs inc cs xor mov push dec sub notl pop add callw add mov imul and ljmp fsubrs ret sub test fcompl fldcw jmp cmp xor xor mov sub dec push cld test rcrl or add icebp stc xor pushf mov imul fcmovne xor adc ret gs sti fdivrs loope dec outsl test leave (bad) xor rcl hlt mov xchg arpl das mov fildll cmp je paddw fsubr (bad) push adc inc add mov lods push (bad) inc jp cmp dec sub pop mov adc and push sbb sub out dec mov dec enter cmp add xchg clc cmpw or in inc xchg ljmp stos lea inc leave iret jns imul add (bad) scas sub rcr jmp jae cmp sbb jge,pt sbb dec dec out adc xor fsubrs lret popa adc xor out mov enter xor add and dec xrelease push jecxz xchg imul cmpsl pop imul loop icebp aaa add pop (bad) aam fwait xchg repnz mov xor mov dec xchg das dec ret stos bound xor aad add movntps and or (bad) dec inc sub xchg insb push push jecxz pushf xchg shlb cli lock mov jmp jp test movsb stos clc push mov or ret mov insb int3 add in in call dec cwtl jecxz dec (bad) mov daa (bad) inc cltd clc (bad) mov add mov aad bound fneni(8087 inc xor pushf and movsl int3 cld aaa sbbl mov jmp sub aaa test sub out pushf adc mov and mov daa lods std test or sub xchg sub pop repnz ja icebp fisttpll pop sbb es (bad) int3 rolb xchg out xchg mov jmp mov imul jb insb jg adcl push (bad) xor decl or dec mov xchg sahf mov adc sbb mov rcll inc loop xchg lret adc add loopne divl dec or and outsb dec in xchg lret iret push mov sub in jle push pop and mov mov shr sub pushf xlat or cltd pop (bad) jmp mov xchg ficom inc leave (bad) cmp lret mov push dec ja fs mov pop lret (bad) jmp add aam inc sbb lret pop negb mov jge pusha xchg sarl icebp xor (bad) mov mov add incl test sub ret adc and add hlt call xlat mov rcl gs mov sbb call imul leave leave sarl daa cltd enter mov or sub stos mov insb mov mov pop shl sub stc mov sub fwait jg and out sti lret fstl mov xor or leave xor pop into cmp fldenv mov dec fdivrp decb cli mov das loope xor and rcrl (bad) or pop sbb xchg cmp or popf stc ljmp adc sub (bad) adc push jo popl lods push daa call cmp test mov (bad) dec ret outsb (bad) push push inc int3 pop or and jg (bad) or cltd es ljmp xor and jnp add and addr16 cli push push mov subl les jge outsb fs cmp xchg and or mov and and inc out and ret dec mov dec out sub mov jg xchg sub adc rorb (bad) stc daa mov ficoml and dec jge mov jno,pt mov cmp out (bad) jne cli dec add mov in idivw mov pop jne dec push or jae mov xor xchg cmp xlat sub sub sub rclb rep mov mov dec and and lahf cltd pop shrl mov pop push les mov aad mov stos loop test add sub sub shrb or jmp daa jge daa xchg (bad) xor fucomi and cs push iret popl (bad) out es lret pop scas push push div push xchg push movsl mov inc pop pop mov pop mov mov loope xor fwait repz inc push ljmp lds xchg add scas call lods sub cltd std outsl lods les (bad) insl pop mov cmp push daa sub push cltd jmp stos fs mov pop xor pusha push shr sbb sarl stc or sti dec call scas loop xchg cld ret add jg xchg sub jp mov outsl or loope jle and jne cli adc (bad) mov push and int loope aas add jmp (bad) ret mov xor loopne or mov mov in bound jno mov cmp xchg out leave pop adc mov jmp xor icebp fwait outsb je lods and in ja adc push testb xchg stos flds notb stos or loope xor bound int3 outsl lahf or xchg (bad) pop or inc lahf stos les push ljmp and xchg ja je sbb cwtl js test or or (bad) cwtl mov xchg push sbb repz aas xchg add loop mov test dec sub ljmp or out mov in mov sti repnz test out mov (bad) jmp push and add insb xchg jl mov cmp sbb mov sub int sub add inc das cmp jae movsl ret movsl ljmp mov ljmp mov add mov sub loop cltd (bad) xchg std xchg loope mov or stc sbb (bad) and test inc test add jl dec les xchg jg and pop mov cld xchg leave into xlat pop ret mov cmp rcll mov fisubrl mov icebp shrb das pop outsb out inc fiaddl clc outsb fist call jbe pop idivl xor repnz sbb xchg sbb loop jl iret dec (bad) repz iret mov or jmp ja inc das dec jl jne (bad) adc scas ds push daa out push xor dec les push pop dec (bad) mov das sub orl mov ret fcoms lret stos leave ss cmp xchg je push ja repz push sahf mov ds xchg in jmp add pushf add out inc xchg aad fldcw sub sub and fisttpll xchg sub xor (bad) cmpsl out jge mov or fadds (bad) adc inc (bad) add das mov in cmp je adc sub dec push dec fsubl adc aad pop iret xor call (bad) std leave adc (bad) call scas pop add (bad) sti mov popf or or xor (bad) xchg in jp scas sub repz add pop fs rol es xchg dec dec imul pop fsts and inc and pop out adc divb adc mov gs sbb dec fistpl adc mov popa cld sti gs adc jmp and pop jbe pop xchg cmpsl sbb or js sarl mov dec xor mov adc loop pop pop scas sub mov cmp mov jnp in mov aas mov jno dec inc mov push rclb xor test (bad) mov mov xor dec dec pop adc dec pop jmp cmp js mov xlat sbb or popa mov pop pushfw dec in push xchg mov adc adc fadd or jecxz inc xor push xlat sbb (bad) daa adc mov add (bad) dec daa aam cmp pop (bad) jp into mov xchg icebp inc mov push sbb or push (bad) jmp mov lods jmp xor pop or push xchg dec sub push adc push jbe adc sub cmp mov or (bad) dec sub mov cmp lock ja inc daa and ljmp stos mov and ljmp push adc dec out jmp cmpsl mov lret inc aam push sub popf push daa ret aad dec imul ret jne arpl cmp mov int3 sbb jo into mov or popa cs cmp add mov sahf pop leave pop lock mov push mov pop jne test icebp bound scas jp xchg jns push xchg enter push push add inc jns aad dec jb or xor or xlat sbb stc and loopne xor addr16 loopne mov shl repnz xor fisttpll decl fadds cmp je push add mov inc imul inc stos icebp mov or jae adc sub or pushl lds shrl lahf add mov sbb into sub sub push sbb and mov in adc push leave sub repz xlat pop mov mov in loop sbb and mov je push sub mov add jb inc mov xor or div cmp movsl ja (bad) sub mov dec fldl lds ret sub leave xchg das stc mov and (bad) std jecxz xor out jne and rclb mov daa pop mov or mov sub mov sbb cmp jecxz or iret sub add or test movsb call fsubl jo jne sbb subb dec xlat sti fildll lods mov stc ja mov push sub add xor pop mov pop daa xor sub push (bad) or xchg stos mov outsb scas dec out call xor cli sub popf rclb jmp add imul (bad) push out fdivrl and je xchg gs (bad) aaa movsb mov jno push jmp inc nop sub lods aad out data16 mov or sub sub cmp push daa into roll lods cmp mov xchg pop pop jns repz outsb mov pop cs outsl aaa ds xor (bad) hlt add push sub xchg cs bound icebp arpl xchg xchg leave or pop pop test add gs mov (bad) sahf pop lret jge push popf sti ljmp ja adc lret sti gs stos xor lret mov call movl testb repnz sub ffreep js mov sub ret stc call lock cltd mov rcrl mov std lds pop jns cmpsl inc imul or lret mov cltd fdivrl lret hlt pop (bad) lahf rcl xchg dec or idivb xchg jge dec call inc xor nop sbb sbb adc leave (bad) jno or icebp (bad) scas jp xchg dec ret lds movl dec jno jnp arpl dec sbb lcall cltd mov xchg xlat jg adc idivl cmpsl sbb mov mov mov cli xor fisttpl mov pushl leave sbb jne cmpsb idiv fsubs xor aam mov mul add mov lret fs jno bound or push sub jmp (bad) xor jge test push stc push movsl int3 push or and outsl mov lret ret outsl xchg gs sub mov xor notl and enter outsl adc dec mov mov push dec stos cmp movsl data16 (bad) out dec jmp es adc xlat push call sahf mov push dec adc jnp mov dec jmp inc mov xchg leave mov std leave (bad) and shrl add xor dec mov or sub adc xor mov mov pop ret and nop inc or push stc cwtl inc xor ja adc push mov xlat lds sub sti gs mov pop loop xchg int jle xchg ljmp mov push shrl test (bad) push mov cmpsb flds stos cwtl and repnz (bad) sub mov mov sbb test out imul (bad) jmp and mov stc sub cmp dec divps ror jecxz repnz sti pusha sub mov mulb icebp cmp clc pop fstps adc and lea mov imul or mov mov add sub leave push add sub (bad) fdivrp (bad) and pop (bad) fstl in mov outsl mov sub mov outsl imull mov sub jne aad imul sub cmp leave cmp jp iret mov jg jmp cmpsl (bad) push mov scas cmp xor dec pushf or pop xchg dec xor scas and and pop ljmp fbld push cmp stc cmp mov sub sti add mov (bad) xchg push or dec or aas or fisubr scas inc sub xor or xor xchg jge push jae aas add dec mov pop sbb push jle push clc leave shrl mov dec pop inc in incl mov cmp adc xchg js xchg adc xchg fdiv xchg lcall (bad) pop (bad) cli and popf jne and mov and (bad) jae xlat or pop gs add gs dec inc dec out pop mov mov imul clc mov pop (bad) mov pop pop and push in daa or or jns pop push leave cwtl stos iret xor ret and sub sub (bad) jbe jnp je or push xchg daa (bad) sbb fbstp lret push decl xlat mov out pop (bad) xlat add mov daa out insl or clc mov cmpl mov dec test mov scas dec dec leave add mov jmp xor lret iret inc dec cmp cmp stos cmpsl loopne fimul ds mov mov or adc add mov mov repz in lds adc sub lds sub mov jae mov mov leave add and scas dec cmp xchg call dec pop xchg inc out mov call repz pop adc pop insl rcr enter roll out or (bad) xlat out xchg cmpsl sti dec sbb leave jle jecxz clc pop mov call jg stos inc lds mov inc xor add scas cmp lock dec sub (bad) lods add xor scas out pop fstpl jle in repz mov dec push mov adc mov xor fs pop sub icebp sub fdivs or mov xlat rorl and xor int3 popw dec or mov cld add movb pop mov add fsubrp mov cmp mov jmp pop mov inc and inc jg xor je popa sbb sbb lods in mov xchg repz xchg (bad) cwtl cmp clc push and (bad) int3 scas jp out mov mov repz int push adc sub cmp ret pop icebp mov mov jno loop xor scas mov pop inc lods pop mov push push xchg (bad) jbe je jmp sub and stos jecxz dec decl mov enter mov pop fisttp sti mov inc xor sti add lret notb notb mov out iret cmp dec adc insl lret xor shrb sub repz pop lret into sub or add mov stc stc inc bswap jp add aad pop xor xchg mov in pop dec or (bad) add pop mov (bad) bswap jge cs pop ljmp and mov jb xchg mov pop aaa lea sub pop shrl lahf int and adc xor clc mov icebp pop push mov out inc imul mov shrb and mov pop and mov xchg xchg or adc lret ss inc xchg loope cmp repz mov jmp mov scas bound es aas mov dec movsb (bad) addr16 in call outsb jne mov addr16 ljmp ror pop fldenv inc sub mov inc mov pop dec imul ss fild mov (bad) xor xchg lahf jle push je push sub dec cmp (bad) xor mov pop jmp stos push ffreep das add mov pop negb sub movsl decb idivl mov ja push js push push mov shl out mov int in daa lods mov add (bad) cmpsl add in rclb jmp xor stos daa mov xchg inc je in dec xchg or mov test out into fcompl or rcl jle shlb out inc mov mov push adc push idivb rorl lret pop popf xlat loop ficoml push push inc mov (bad) xor mov push ljmp mov idivb mov add mov inc rcr xchg rcl scas xor jle fs fdivs cmp xor sbb lret cs pop call into or (bad) mov mov dec std inc nop jmp cli ficompl pusha (bad) xor in out popf push das out pop mov scas cmp div inc dec mov push adc divb loop mov inc jmp insb repz mov jmp mov stc fisttpl dec shll sbb sub mov mov jg xor popa popf lcall xor push push xchg cmc mov pop and pushf clc sbb icebp mull (bad) push repnz jl cltd inc sarl pop nop push adc aaa scas in outsb xchg dec add icebp mov push vmmcall (bad) xor scas cmp movl xchg int mov xchg lcall pop (bad) jecxz in adc aas lret and outsb add mov pop mov sub push xor pop cmp sbb lds sub sbb (bad) pop jns dec cld pop pop cltd pop fldcw aam mov push xchg or and lret push sbb and lea and ja repnz lahf nop push xor mov jne testl or mov in jmp aad fcomps aam pop xor xchg sub or add (bad) inc xchg fdivrl jbe jle pusha mov fisub mull out sub idiv pop lret pop sub idivl (bad) mov or adc ja out fstps dec push push sbb mov in pop (bad) dec popf outsb mov in pop iret and inc xor cmp (bad) push or cmpsb in stc xchg pop xor (bad) sbb fnstenv out cmp mov cli add sub and in pop xchg (bad) imul lea test mov and dec or or xchg ljmp xchg pop ret and push int3 ljmp and (bad) and das sub dec push mov mov lret xor mov and xor sbb pop and inc mov xor or jecxz mov mov mov pop movsl xchg add inc lds fldt imul (bad) icebp imulb ss sub or cmp js xor rorb cmp imulb (bad) loop mov inc sub popa pop enter clc enter test mov sub or fcmovnu and mov xchg xchg cmc in cmp mov sub ret add or add pop add mov mov rcl mull popf int3 outsb rcll and insb mov push mov aas sub cmp or adc cltd add jnp gs fist add (bad) pop or or pop xchg dec jno scas bound test movsb lea jo mov jnp aam inc jne push insl mov leave sarl sub pop jns test mov out lret testl push clc fimull xor pop iret push scas ret out push and popf sub out mov sti sub aad mov and ds lea dec jmp push data16 rorl pop into dec and out cmp sub data16 pop push xorl stos insl jecxz clc jmp sbb add fstpl jns pop sub pushf mov test mov pop xchg dec mov dec jne xchg (bad) push pop (bad) sbb add (bad) and aad mov push mov mov in shll and sub iret popf pop push xor out mov dec xor adc in add into in cli test pop push or mov repnz repz aam pop inc orl mov mov mov jecxz dec lds out xchg std xor sbb outsb lret mov jp pop mov sub push ret or sub xchg mov dec fmull push (bad) mov (bad) (bad) insb pop jecxz sub int3 mov shr mov testb mov mov xor dec scas fcoml test push sbb dec notl lret ljmp rorl loope cmp jecxz adc ret mov outsl mov inc clc fwait inc sbb jge cli jae mov or (bad) cmp push mov add rolb xor sarl icebp int3 jno cwtl adc sub stc adc cmp mov sub jmp xchg mov sbb xchg ljmp jmp mov scas jno push adc insl xor pop imul (bad) aad rorl sub fs ljmp fildll cwtl sbb fnstsw (bad) xchg andb push or enter jne and fldt repz push repnz out cltd pop or xchg test dec mov std xlat lahf xchg add xchg mov (bad) xor out inc sbb pop into lea cs (bad) lods pop jge sbb lock xor mov sbb out xchg lods jb daa mov xchg xor out stc xchg adc mov daa fnsave add jne mov jecxz push lcall rclb cld imulb xchg dec mov mov dec scas xor pop xchg and ret pop dec pop adc add icebp arpl cmp lds pinsrw jg xor mov cmpsl pop sbb lock ss fsts loop pushf or dec push (bad) (bad) iret push dec jno or push inc std or std daa rclb or adc lods lds shlb cmp xchg shll imul add fdivrl add pusha daa xor sub cmp push jno dec fldcw mov pop andb movsl std sar ret (bad) inc or out mull hlt pop jmp sbb data16 xchg push ret je jbe dec fsubrp cltd das dec xchg dec or xor cmp mov dec lcall or fistpl xor sub sti push daa add xor or rorb dec aam cli repz mov cwtl js and negb adc (bad) sub pusha or and mov push jmp out and into inc xor xchg std ret nop pusha pop mov lea outsb fcom add stos sub ret pop push sub mov sub xchg insb xchg jmp mov xlat mov add mov xchg lds or cmc int aas cltd xchg jo xchg sbb popf or pop mov inc icebp or fs mov and pop jb lret mov imul xchg ss fstl cmpsl mov add movsl scas cmp pop data16 push cmp aaa mov shrl and fistpll out sbb jmp xchg test add mov xchg lcall test pushf pushf (bad) out daa (bad) and sub pushl add ret pop and mov lret mov xchg mov and or (bad) loope jne mov stos repnz xchg pusha cs and cmpsb push das (bad) push pushf dec pop sub dec sti xor jbe push ret xor movb cmc xchg clc (bad) (bad) movsl mov cmpb stc sub (bad) sub jmp xchg sub xor cwtl mov movsb dec idiv fs fs ret jge out and mov add sub cmp xor (bad) adc out inc sub pop and xor es sbb push int3 push jno or (bad) jbe xchg ret mov js mov or insl out xchg in movsb cmp je pop add test cltd pop add mov sub ja imul push pop enter aad inc adc add or fdivr fisttpll ds sub nop fidiv xor cmpsb mov addr16 imulb cltd insb push pop xchg cld cmp inc and shrb outsb add mov cmp repz jmp push adcl sti sub jae and mov mov fnstenv or xor fsub jo add ds je jecxz jg dec dec movsl cmc jmp adc popf push test mov xor pushw imul lea xor xor jae and call call jne lods cmp out notl mov repz push mov mov dec idivl xchg adc repnz fmull add inc and xor pop xchg es xchg mov dec loop ja mov jmp rcl add insl fwait jle ljmp pop cmp cmp sub test addr16 call cld xchg (bad) xor aas cwtl inc pop (bad) mov xor sbb shlb pushl sbb xchg jl pop jmp sbb or ret adc and subl (bad) fsubrs fnstsw mov xchg icebp and mov cwtl repz dec rorl adcb push leave shl movsb outsb xchg jno les mov dec lock (bad) out mov jge loope gs add mov mov mov pop popa movb sub repnz or pop les in mov pop add cmp hlt sub iret pop dec pop call addr16 outsb dec (bad) mov inc in mov out out cmc das cmpsb fisubr mov aad mov jmp sti aad push cmp lods add stos mov sub jmp fmuls (bad) stc mov mov pop jns dec inc pop inc adc lahf js push push dec cmp ror or out ja sub (bad) or out push mov sbb sub in xor cmpsl inc mov push push mov mov mov dec stc inc insl xchg sub shrl repz ds dec mov fisttpll lods out mov push or movsl mov pushf incb mull jmp (bad) pop dec cmpsl pop out bound pop in ret lods test cli mov adc (bad) jae loope or outsb sub fs stos lods (bad) mov aad (bad) xlat jno lret xlat (bad) sub xor jno outsb mov push aaa inc xlat inc daa mov scas cwtl or pop add insb shll mov cmp and leave mov add cli addr16 shll sub mov mov icebp lock (bad) jg aas popf hlt inc gs mov popf dec imul dec sbb xlat mov or add adc or iret or scas loop and push ret add jg xchg popf pop and pop mov vpavgw inc jp,pt add mov fist pop mov add or xor jmp adcb icebp mov pushf sbb ret cmp cmpsl mov call pop sub ja outsb rcpps popw js dec add and mov and sbb scas (bad) fstpl fwait in xchg ret call xchg and mov xchg push out xchg in mov lcall mov int3 pop mov mov fnsave lds pop popf jns inc mov mov fbstp test shlb out push inc and adc test (bad) test lahf sbb mov in test sarl adc and jo out xchg pop mov clc cmp mov adc cld loopew add dec les (bad) mov add and mull test in xchg fadds leave sub leave mov jno jb (bad) add jnp movsl sbb or adc mov sti int3 jp dec fwait mov cltd push out das lods xchg xlat repnz je out stc flds push mov push push scas les scas sub add fs push inc js lods into pushl testb pop sub xor inc (bad) scas xor in aas dec insl pop movsl mov out push dec ret fidivrl adc dec inc jmp stos sub inc out mov mov sub mov (bad) es sbb mov xchg xlat cmpsb cmp sub adc or mov add rcll push mov dec sbb add add lcall popf xor cmp scas lret and sub jmp stc and fidivr lret fldl mov imul xchg enter popa xchg mov int3 stc push mov ljmp sub mov movsl addl push (bad) sbb js (bad) mov push or pop sub lock mov loop xchg icebp das mov dec scas int scas pushf in xchg das loope adc daa add push jns out dec add mov ret ffreep xor pop or mov xchg jno pusha mov addr16 stos movsb mov xor fadds xchg pop cli call bnd mov shrb xchg or dec xor pusha push andl xchg scas cmc roll shll movsl icebp (bad) mov out lret aad test ret sbb mov mov dec dec jne cmpsl mov out cmp dec jne out test idiv fcomps divl je,pt adc out or jnp lds clc insl adc neg rol pop sti pop or lds push xor dec fild add fildl (bad) xchg dec mov je mov jno xchg add std ljmp rorl sub cmc scas inc dec popf ja fiaddl jno lahf jl imul xchg cld mov cltd int3 cmp (bad) xor cltd test lods push leave and push bound fildl push jecxz out or (bad) aad push sbb mov and sbb loop jmp jg test push notl mov mov shl lahf jmp dec sti dec lret cwtl sub gs adc lret cli xchg (bad) cmp outsl in stc mov push sar lret out pop mov bound scas loope bnd insl sub dec lock mov daa mov lahf inc push fldenv rcl sub dec mov pop push rcl adc ljmp sub daa (bad) (bad) push jecxz and xchg jg (bad) ss incb dec js lock in arpl lret mov dec adc out mov jle pop iret in hlt mov in roll sti (bad) in (bad) mov fisub sbb mov aaa ja iret and outsb add imul lods ret add xchg ficoml es adc sti inc aas dec (bad) lahf out cmp jl jb pop (bad) or push or lret fidiv fadds xlat popf icebp adc loope ret test and rclb test leave (bad) data16 cwtl mov xchg pop popa jmp mov std ljmp roll mov fmul out lcall repz add sar mov mov rclb jo fimull clc rcrl out add in push dec mov (bad) mov cmpsb inc xor lret mov rorl cli add xchg in ds (bad) (bad) push sbb sti sub ret aas test frstor pop sub icebp popa xor ret and adc sub in les rcr inc je jecxz sub mov divb pop into jmp pop xor push pop loope mov add pop add mov or and xchg std mov sbb stos fs sahf into pop loope cmp sti rclb cmp in das ret xchg and fdivrs aam xor clc test das jbe push pop scas int stos outsb movsl mov notl add repz sub neg cmp add xchg push out iret or cwtl cmp adc sbb xlat inc int xor mov and or push jge or out mov stos clc mov lods cld mov xor (bad) sti cmp dec and adc mov inc in test lcall sahf pop push das notl add mov push dec decl pop inc adc push (bad) and add sub adc cmp mov js and add and out insl lods cltd adcl xlat xchg xchg loope mov adc mov pop sbb jl sub adc cmp push sete shll pushf jmp out mov inc jnp test pop stc sbb sub and sahf das je in stos jno or push dec test clc and idivb dec mov faddp jb inc idivl clc mov mov in or sti sub xchg pop aas stos dec ja cmpsb std stc pop sub mov fistpll (bad) movsl push adc or xchg ljmp in xchg pushf rolb xor mov lds cwtl pop and xchg sub out cltd outsl push sub imul (bad) jb daa stc (bad) stos leave lret jns (bad) jmp mov ljmp add cmp ret xor push jbe (bad) scas xacquire pop lret subb hlt scas pop push sti mov add push dec push mov jmp mov outsl push jno pop pop je xor cld repnz push pop addr16 std int3 ja jg test xor add mov add pop lret (bad) out lret std into out movl cltd repz ret stos mov jno add rol push lods xchg mov inc mov dec in (bad) cmpsl cwtl in dec jb jae mov xlat push ljmp lret fdivrs mov ss test mov repnz sbb rorb in lds and fnstcw lahf ror mov dec cld (bad) cmpsl mov adc adc shr xor ret lock sar lea add xchg cmp add cltd lcall negl push (bad) jmp lods outsl sub repnz jb pop mov pop mov test outsb cwtl mov or test add ja push (bad) fldcw push mov ljmp outsb gs sbb xchg xor adc xchg rdmsr xor repz pusha lahf pushl popf sub mov mov aam xlat je loope into pushf in push pop rclb cmp cmp shrb loop sub (bad) adc repnz xchg inc lret sysenter jmp iret jno repnz adc xchg ja pushf xlat imul aad mov xchg addr16 and jg das push dec xor sub dec xlat mov push fdivrl push sbb xor out das mov loop ljmp lret fstl sahf movsl push inc adc jmp test loope dec push pop stc fsubs xor adc adc xchg inc movsl cmp repnz rclb aas mov cwtl lds sub into imul mov mov mov mov pusha add or in mov lret inc jnp mov lret adc push sub std jecxz sub in test (bad) out sub mov rcll (bad) mov cmp idivl xor outsl pusha ror xor mov adc cmpsb push js pop sbb push xchg mov cmp testl fstl or repz mov loop sbb dec out mov lods aam pop mov fs stos fldenv mov xor jp call mov aad scas cli (bad) mov and mov xchg add pop ret jo andl rcr stc xchg mov sbb inc inc mov jmp (bad) and adc daa pop pushf mov pop mov cmp leave das or mov mov and aam push fisttpll cmp lret fsubrs test mov lahf (bad) or xor or dec mov cltd fstpl ret jne outsb repnz nop hlt in ret push (bad) js pusha in lret push into mov cltd repz daa rcr (bad) iret scas jmp call ljmp daa popf xchg icebp stos into push jle out mov pop out dec call push jno mov les call aas mov daa leave rorl cld or push pop test cwtl or dec rcrl fs aaa mov int3 dec mov mov pop lcall fmull movsl imul shll xor pop adc sub jae and cmp ljmp pop or sub stc cmc ljmp dec dec or fucomi sub mov dec dec adc pop nop scas fsubrs sahf push cld lock cwtl inc sub js mov lods cmp jmp ret lock or popf or push add inc xor mov pop (bad) imulb mov ds pushf stos mov pop je lret icebp fs lret push inc jle mov xor sub xchg outsb jmp add cmp pop jb cmp sub sub or lds shlb pop adc xlat imull adc stc xlat add xchg add test lock mov out push cld push mov push shlb add xlat lahf inc add push movsl push fstl ss mov je mov in adc mov aas jmp call dec repnz xchg scas or jge ljmp insb cmp (bad) (bad) mov (bad) fidivr mov into cmp mov mov stc mov repnz movswl sahf stos push subb jp sub rcrb inc jnp ret push add enter xor cli fldpi cmp dec test mov out push xorb test sub pop pop pop pop in stos maskmovq cli movsl adc outsl mov lds mov and mov fs out xchg fadd in sbb ret inc test popf popa xchg icebp lret mov or and daa int3 ret lods pushl movsb mov xor (bad) pop lds pop das jae adc mov nop scas pop sub loopne sti xchg or xlat pop mov sti movsb out int3 adc xchg jne icebp jnp xchg pushf xlat xchg fistp push xchg in mov or dec lret gs push fsubrs sub cmc icebp and pop pop gs adc sub or int add flds (bad) dec rcll lret pop cmc mov (bad) pushf ret shrb mov insb push mov push xor fwait sub mov scas es mov xchg xor cs out jmp mov leave cs inc push test dec dec add sub xchg dec mov add fwait nop mov pop imul (bad) lods jb out add sub pushf mov xchg test jbe roll stc cmp sub push add jmp adc inc iret xor mov fisttp pop sub or jl push mov adc out imul mov xor push mov mov cmc js add idivl fisubr pop icebp fidivl dec pop and xorl dec mov das into clc fcomps sub pop cmp aaa (bad) fdivl jno imul cmp xchg sub inc pop repnz mov fimull mov jge or rcr dec repnz insb mov das jnp push lret in lds xchg mul and add mov cwtl xor rolb in mov mov mov mov mov test clc sti mov xor fild (bad) xor xor and aam mov icebp mov or jnp mov out fidiv movsl out notl and jo mov and pop mov sub lods pop jbe rorl add (bad) fstpt and (bad) sub ret iret and dec ljmp (bad) lock enter adc pop das sbb aas and pop fsub xor decb iret or out das sti aas ds mov (bad) (bad) pop pushf adc fstps dec sub and sub or inc loop and movsb popa out andb sarb and or xor gs adc je and cmp pop push inc cmpsb ds jg in dec call mov divl add adc cmc sub push clc xor and jg mov xchg inc xorl cs add xchg or dec lcall mov stos fdivr xor (bad) mov and sub add mov jge repz mov fldenv cmp mov js mov pop (bad) imul (bad) and push xchg mov mov scas fldcw pop pushf add divl rcr dec or adc repnz test mov or xchg lcall cltd and outsl xor icebp (bad) fist dec mov push loope popf add add mov inc stc jbe push sub popf hlt fsubp leave stos fsts jecxz or cmc lds xchg loop cmp add cs in jg sbb mov shrb rorl jecxz jle pop and hlt lret adc (bad) repz ret jge xor das mov xchg clc (bad) adc (bad) lret pop and (bad) out push call (bad) les test mov xor xor imul or add fincstp or pop and inc mov lahf loopne rcr mov pop scas pop mov ljmp mov xchg mov dec cwtl dec sbb xor js imul xor out push inc add jne xchg lods adc mov movsl sub pop pop out dec into sbb xorl in jle cmp push jmp movsl mov dec outsl xchg dec fwait pop divb xor loope cmpsl and (bad) push or add jle pop jbe clc pushf lock jbe dec int3 test daa add pop insb fcomps push pop je,pn mov or xchg xor inc enter adc and loop pop lds mov xchg rorl or or inc rcr idivb fildll pop mov std fildl jg pushf mov (bad) mov int cmp mov push jno and rolb (bad) nop xor mov test daa mov jno lods icebp js bnd mov cmp fldl push imul test xor (bad) mov pushf add dec pop sub fist sub push and pop sub and push popa imul xchg push xchg xor out das into jno (bad) js addr16 cs out sbb sub dec loop ja sbb lock inc (bad) xor mov dec cmp cltd into dec aad movsb nop out sbb shl cmp add or xor rcrb xchg dec sbb dec scas (bad) fist (bad) jns (bad) testb xchg fisub je pop adc in xchg push pop rorl lret pop mov les imulb dec inc mov (bad) iret mov dec ja mov cld pop out sarb mov inc mov das jge add add jge mov loopne add mov jge push stos test lock lods je jae add xor and mov sar ret mov pop pushf sahf imul mov rclb adc adc xchg jb fistpll inc cs sbb add sub out jbe (bad) mov push jne dec adc sti lret scas xor sarl adc jno and arpl mov and xchg sub into add leave pop or pop ret mov sub jecxz or sub dec and mov (bad) lahf cld or or add scas sub jmp les sub je mov jno add jmp dec mov dec scas mov mov push inc ret and cmp sub test jmp pop les pop mov dec imul pop iret mov clc add mov or (bad) hlt xchg rcrb mov or test call inc mov and dec xlat gs daa dec mov sbb cmp out lods mov pusha jge sbb (bad) popa jmp adc or call dec cli jecxz dec mov or aad neg loopne leave stc (bad) adc xchg fisub fstpl mov sbb aaa fistp dec mov xlat mov pop pop sbb insb ss fwait mov pop and cltd xor cmp lods sub daa xlat icebp test mov ljmp loope je (bad) lcall mov sahf push xor pop xchg sub sti lcall mov push add mov pop mov inc mov sub mov andw pusha adc fimull dec sbb fistpll popf ljmp in insl xchg rorl lods lock bound add sub in das mov xor dec ret in xor loope adc push daa in js sar push movsb xor ret add aam lret add nop or fsub sub scas pop (bad) dec inc out add ss (bad) dec mov add or testb addr16 mov pop sbb sub fsts sti adc add lods mov cld bound fiaddl xor pop xchg mov scas repnz mov sub ja fisubl xor mulb push lods (bad) aad rorl fbstp cwtl (bad) sub call xchg sar or or outsb dec cwtl push popf ret lods rcrb sahf aam lods les mov cmpsl (bad) clc lahf dec out cltd je adc fstps mov or lock adc jno add cmp arpl mov lods shrb cmp and stc inc scas lock adc xor adc ret mov hlt ror jnp xchg jb jae cmp fdivr jp lret out shlb mov js jmp out pop add sti add or adc andb cmp sub das inc aas out mov sub pop iret mov std and (bad) repz inc jg mov pushf int and leave daa xor sub xchg lds shlb int pop arpl fdivs sarb clc pop add xchg dec lods mov or call loop pop daa les enter rcl clc std jl and (bad) jno mov dec (bad) xchg mov push outsb dec pop cmp and add in jmp je stos cltd in out xchg in xchg nop mov mov aas xor int sbb ljmp or xor jb sub clc jg add add jg mov add scas je cwtl ja pop cmp daa sub leave lock test leave enter pop hlt daa jne add aam stc push stos dec or fmull mov mov jnp mov mov and (bad) in or pusha (bad) add loope pop dec or arpl xor enter push push insb or dec mov dec cmp inc pop dec xor call dec sub jo popf cld ficoml mov jg cmp add sbb push mov daa ja inc dec cmp stc pop mov mov adc mov sub cld incb jne cli fdivs xchg push jmp mov mov sub cld add pop mov xchg pop stos test or ljmp cmp out jmp call adc or pop in and cli pop sti ret movsl mov (bad) mov aas lret xor add lret insb sub xor sti and ljmp mov imul out mov mov lcall cwtl jp notb push pop repnz jb cwtl add imul push dec (bad) sub sbb ljmp push sub popf (bad) pop lret je jb dec stos fsubrs and (bad) mov mov test stos sub ret and sub push test cmpsl es (bad) xor outsl mulb mov or pop push inc loope cld jno inc push pop sbb mov jmp push vmovsldup mov sub mov pop xor mov mov xor add push ds movb jno pop and repz adc lcall dec das loop push icebp nop xchg loop sub xchg lcall xor mov call stc insb push inc or dec mov das add or push jne inc dec pop mov ret or (bad) mov add add out sub lret push cmp popf movsl sub and pushl cmp (bad) jb add cs mov sbb cli add mov dec mov sub inc ret xchg xlat push (bad) mov imul ret cli jecxz and (bad) xor iret jmp jmp stos sub outsb int das sub xor mov icebp mov addb push xchg push or jmp cltd mov sub xor mov push out pop sti sub mov ljmp and into push xchg jge mov test inc dec sbb and pop sub xor lea mov lret sbb inc (bad) (bad) fdivrs adc test scas or xchg aas in cld dec mov (bad) sub in mov mov int3 xorb rorl test out cmc in scas mov jnp xchg out out int jge xor sbb int jnp and fwait pushf or ds and jo push movsb mov dec out jmp jne popa add stc mov das sarl test adc dec mov repz (bad) xchg rclb lret out dec adc gs xchg mov call (bad) adc and mov daa inc scas test fs (bad) adc repnz inc and sbb sub cmp sub pushf xchg mov adc aad out pop gs test cmp in out add ret sti lret (bad) cwtl ljmp cmp into jp call xchg jmp add in xor or fnstcw inc push and call out or sub adc or fidivr movzbl ljmp sub xchg sbb (bad) and testb mov loop sar cs (bad) cmp fmuls scas imul out das push sub sub in xchg jb jb sbb lret sar xchg mov loope (bad) jb xchg call jl cmp inc cmp ljmp aaa xor cli hlt leave stc sti mov and add pop cmpnltps frstor push jecxz xchg leave je leave pop add daa xlat mov push loop das mov lret scas pop push scas and and rorb out jge aad cli sub movsb loopne mov jno xchg lahf cltd je sub arpl aam push pop fisubrl dec push push sub mov add and mov push mov cwtl dec repnz jbe (bad) xchg nop mov icebp sub jp popf negl sub out loop sub aad inc jle fidiv mov das or ljmp xchg out sbb aad shll mov fsqrt adc in pop jo loope pop and mov cld imull (bad) leave aad mov pop cld mov xor mov mov out mov push icebp pop out outsl xchg sbb xor inc stos add outsl fsubrs dec inc lret cli xor adc cmp push lret lods repz mov xchg dec (bad) stos sub inc mov mov test mov push and das cld sbb and add scas and ja or insl shlb push outsl sub pop fdivrl jo sub lret xor and jb test and sbb cld mov mov push or pusha aaa add or das lret fildll or dec lcall rcll in rol push gs or jne pusha push pop or test cld (bad) mov push rorl mov std add lods std int3 ljmp sub sub scas outsl bound test adc stc aad and sub mov pop imul mov mov mov pop mov sub test das sahf cmp push das stos fs push xor xchg and and leave fdivrp pop imul and dec pop cmc in add mov leave mov or mov (bad) cld mov jmp jmp enter call inc fcoms cmp xor or add adc (bad) sbb jp or cmp mov fidivl xor xchg jge xchg xor orb or test lret bound pop xor shlb mov hlt test or out bound xor popf aad and ljmp add push push aad push and ljmp add and (bad) in push xchg pop jne data16 imul shll imul cli sub (bad) outsl in sub or push dec call sub sub xor xchg cmp inc cli xlat sarb fdiv cltd pop in mov scas and xor and xor push loop xchg stos mov lret mov mov add mov test sbb mov lock jbe dec dec or test outsb lods loopne mov sub lret and sub mov scas mov sub hlt mov aad mov aaa rcrl into add je xor lret cmp inc sub inc ds insb pusha leave pop ja aaa (bad) lods repnz (bad) notb push sarl movsb jmp mov cmp sub cld stos cmp pop in sarb out mov add cmp pusha pop cwtl and xchg fnsave inc dec or or pop gs jnp adc out jbe in mov xlat stos test mov jg (bad) pop and add jle or jl sub shlb lds or out push lds lcall mov xor add adc mov loop (bad) ljmp dec aas and and pop adc jo lods mov and repz lret cs cs xor movsl push sub add xchg std cmp xchg call inc das (bad) fdivrs cmp int cmp lret mov dec call clc mov and jle xchg (bad) mov xchg mov sti adc pop mov mov adc imul into sbb jne mov dec mov dec icebp aam loop notb xor xchg mov out or (bad) sbb push je xlat addr16 scas adc cmp fsubrs mov xchg test (bad) inc jmp mov inc imul mov loope repnz pushl sbb sub mov loop add sbb sbb add cwtl popf fbld xor mov add add out pop push ds fnstsw outsl sub movl lods jno pop mov mul jne repnz xchg cmp add or adc stos lret add and stc pop rolb adc mov insb and push das div repz and xlat push lock lahf jbe jp test inc gs test (bad) mov or out fisttpl push fimul icebp jmp push test fcomp sub in jb dec (bad) mov es test push popf lds repz cltd sarl inc mov and loop jo mov sbb jmp adc sahf pop mov test lods es or pop (bad) ljmp mov pop adc jns bound div mov inc das xor xchg or inc or jns adc mov js mov xchg rclb fmulp jo and test mov mov xchg xor mov and rcr fldcw jecxz cmc outsb cs push adc pop cmpsb push add add mov lock push pushf ret fisttpl or fistp outsb lahf pusha and cmpsl mov and inc add add in lea popf push test aam stos mov and xchg iret fs xlat mov xor (bad) or cmp imul lcall out pop sub cli mov adc (bad) bnd mov or adc lea (bad) push xor add mov push das adc or mov (bad) lret lods stos pop ret (bad) dec iret shl or mov daa rorb iret dec repz mov stos popa dec and inc cmpsb (bad) sub popa mov xlat xchg cmp stos sub (bad) cmp (bad) xor pop mov or sub adc sub je and aam pop in pop adc xchg decl mov mov xchg (bad) mov pop lret aaa dec and mov pop push lods jge adc call inc add je dec mov aaa stos cwtl push cmp jp and and outsb lahf mov out dec (bad) or movb (bad) sub outsl loop pop (bad) or jne les sbb loope mov call or or mov sub (bad) mov das (bad) push or sbb idivl and scas sub (bad) pop xchg xlat adc lods fnstenv div das push je dec das push jb push sub and fmul out inc add into lcall dec xchg aaa enter cmp loope jecxz sub bound jne pop aaa xor das push mov out out mov fdivr mov lahf das dec es popf imul out xchg jg add and jmp and dec mov imulb out ja ds dec and cmpsb stos and and in stos sub int3 dec add fcoms (bad) rorb (bad) or mov xor and inc stc in (bad) ss ljmp mov mov ljmp stc push cmpsb push push xor andl mov test fisubrl daa (bad) mov xor mov mov aam lret dec sbb xchg insl add pop (bad) repnz call mov call mov mov fdivl sub shlb stc call fidivrl test (bad) (bad) mov ljmp xor pop and sub add mov dec pop iret scas sub pop repz sub cmpsb mov add adc mov mov and lahf les fdivr sarb cs sub push jnp or push push jnp insl cmp test mov mov (bad) stos sub in in mov inc push ljmp ljmp cli mov in xor (bad) fsubs repnz pop movsb mov repnz cmp dec sub and loop and mov out or ficompl mov jp (bad) mov mov xchg out lods jae ljmp (bad) cmp cmp (bad) mov xor (bad) popf add lds mov add gs sub push jmp mov out xchg sbb bound fnstcw inc rorl popf scas adc les gs ror mov fidivl rcr mov and lret xchg scas sbb xchg out stos lret and shrl xchg or adc sub scas adc push push mov test xor (bad) scas jecxz dec mov mov sti xor jecxz or or rol cmp and xor stos xor pop dec push test lods test sbb pop out jecxz cli fstpl mov mov push out dec les adc add out fs inc add mov aad pop mov dec mov xor imul mov adc mov sub movsb gs inc (bad) repz std imul cmp adc pop cltd movsl cmp sub bound pop insb adc mov (bad) data16 or mov xor xchg ret fcomp (bad) stos popa push inc dec lahf pop xor or mov rcrl not adc or mov add fbstp lahf xor sarb lret mov xchg mov cltd add or mov sub lds cmpsl shrl sub inc mov mov dec push mov stos push cmp sub adc insl xchg xchg movsb mov pop sub (bad) in imulb rolb out mov sbb leave xchg icebp and ljmp fldl jl js and shrb inc scas sub aaa mov xchg push pop mov sub fbstp xchg scas (bad) sub and cmp pop pop dec test add cli ret (bad) lret out dec push xchg pop xorb push xchg leave adc push faddl das push xchg cmp lcallw and add cmp (bad) or push xlat loop mov xor daa or out dec ljmp add and xchg andl add stc mov cs jl daa jne (bad) push jle pop push jae add rorl mov mov out xchg mov mov fs xor and adc int3 adc dec icebp jmp cmpsb dec arpl mov pop push cs dec mov pop push ljmp movsl push ljmp adc mov cmp mov ljmp dec call pushf adc test roll dec sbb and xchg fcmovnu dec pop and xlat imul sub fprem movsb sub dec push idivl inc xchg mov sbb hlt popa inc xor cmc jnp dec cmp inc fyl2xp1 leave xor fmull shr dec ret and sub into jmp test scas sub enter out add incl outsb mov pop sub inc dec mov dec add jns mov push cmpsl ja sbb mov lds jae pop sbb leave mov mov push push fcmovnb iret jge orl mov cmp jne push dec addr16 shr add xor and jg xchg dec and notb repz popf in pop xor in leave aas and and lret mov mov lds add xor in (bad) (bad) and push xchg std rol ret xor daa and dec push mov sub xor dec aas adc mov lret stc testl cli sub movsl loop adc mov int ja cmc bound mov mov shlb in or jno mov movsl cmp out ds movsl test out cltd inc (bad) repz enter lret loope pop cmp fmulp pop nop cltd inc loope sub arpl aas movaps inc ljmp xor (bad) mov sub das or jmp mov imulb mov std in movsl lea je icebp pusha jb,pt sbb or mov xchg outsb sub pop lret cwtl sbb mov adc in lahf lock dec or pop out mov mov or outsl push xor adc cmp ret add adc dec adc push or daa cmp stc add xchg js jle pop neg pusha (bad) mov and shrl dec mov xor faddp enter mov ret test stc fstpl movsl fcoml jmp loop ror (bad) aas clc mov scas addr16 pop in push imul push jl mov scas fs out test out iret cli pop xor add sub and sub sbb lahf decl or xorb dec xor mov sub insb outsb daa mulb dec mov (bad) adc mov dec lods lret daa ret jno sahf repnz icebp mov sti cli inc pop out jg out inc jnp or loopne movsl push mov (bad) pop dec or jge aad inc lcall out dec dec xor adc sub ljmp dec lret loop lds lret pop mov clc mov cli pushf xor and xlat cmp pop sub and jns dec push sub mov sub aam imul pop daa pop fsub insl dec and cs int mov mov ds mov pop xchg ret or push repz mov (bad) pop out cmpsb xor fcmovu inc mov popf xor pusha xor out and cld or data16 leave inc out sbb cmpsb dec dec ret stos gs xor xchg mov jl leave pop pusha and pop jbe dec push pushf mov out jp dec into ljmp mov lret repz (bad) mov sbb psubq cmp cmc mov xchg xor push insb push std aas loop xlat mov fwait adc xchg xor pop test (bad) mov aad rcll fmull mov mov into lahf jmp push add addl xchg gs mov shrb mov pop ret out dec inc jno and daa or data16 cs sbb or rol cmp mov (bad) or je (bad) (bad) (bad) cltd jmp push add mov mov das jmp sti daa dec xor jbe lret lahf (bad) mov cltd sub sbb jae jmp negl or mov out xor ret (bad) stos push jg ljmp pop mov dec jmp sbb cmc in test sub not mul mov push push mov mov (bad) cltd jbe jb mov adc ljmp rcrl adc addr16 gs jne movsb (bad) mov cmc mov xchg rol adc lcall sahf ljmp sbb xor call xchg out gs stos neg bound mov (bad) das xor mov adc cs or push popa jge push fiadd xchg cmpsl test adc mov pop xchg ficom in scas loop mov sub push sub daa je push xlat pop sbb push jns je xor xchg movsl add cmp fistl xchg ret inc add (bad) xor cli icebp dec dec cmp inc in cmp pop sbb sahf cmp cmp outsl cltd lret imul or and test dec flds mov lret add out lahf cld jl fmuls pop pop daa fiaddl fwait jmp into push lret decl jo xor out jg dec fidivr iret fisttpll std xchg ljmp xchg pop daa insb sahf add repnz cmpb sub jmp cmp lcall jne mov cli cwtl add aas adc push fidivrl sbb in cmp test or push and xor mov push pop cld cmp je icebp jg (bad) jno sub aas mov push cmc cmp les (bad) popf xor test scas cmpsb pop pop lea jnp dec cli dec mov dec pop (bad) mov pop dec add xor sahf and ja fsubrs or negb mov xor lds and jge addr16 jl bound ret lcall xor icebp popl (bad) jle xlat out sub push xchg mov push sub sub mov pop sbb xor popf lds (bad) lea ljmp (bad) mov ljmp ret popa pop cmpsb cwtl mov cmp adc push jmp sub fs cltd dec or or cmc (bad) adc push in xorl xor pusha mov (bad) clc inc mov push mov ret lods repnz or xor xor das idivb xor rclb scas mov into cld dec pop push mov cld pop dec dec iret mov out or mov lret stos jnp std xchg pop ret loop sub test sub insb je cltd das aam lret jge xor add add add push out xlat push jmp cmp and add sbb or daa gs xor out add imul mov pusha add mov mov xchg sbb stc (bad) jmp and dec pop in ss daa jl cmpsl aam lret jmp jo sub pop push sub lcall pop cmc pop les xor add sbb mov cmp or sti jnp add lahf sahf pop insl (bad) push push or sub and dec lret stos mov cli iret dec sbb and adc (bad) int jns nop push push rorl pop sub xlat xor lock push xchg mov inc (bad) mov jnp mov or mov push stos mov dec mov cmp dec mov sub inc sbbl cli xor xor mov adc scas xor mov fucomp (bad) ja or adc cmp sarl add (bad) sti sub cmpsb out int3 inc pop negl daa (bad) int3 add sar push dec out dec mov fisttpll lods subl sbb out and add xchg inc push repnz lret popw dec shll (bad) xchg or xor cwtl jge popf inc out lahf pop xchg pop sub mov lret aad in pop stos idivb or add (bad) fs or (bad) adc mov or inc enter jmp imul xor stos mov subl daa push out push jnp add out and adc rcrl leave sub out pop negl sbb lahf test jmp ret in xor cmp loopne cmp stos fs jmp ds mov xchg mov mov add mov pop lret lcall aam or inc xchg or clc pop inc or jge push push ficompl stos lock bound xchg add or jecxz push mov popf lods je push sbb negl pop test jmp pop dec out ss test inc into scas jle add fcomi mov xchg fstpt stos add iret sub xor sbb test sahf jge xchg mov mov dec or mov mov mov dec pop cmp negb pop fnstenv jo cmp sbb cmc stc xor dec scas lahf shrl and or sub push int3 mov jl test es ja jns gs inc jbe (bad) mov (bad) in mov popf test cwtl push sub push aaa sbb adc lret jecxz pushf add sbb hlt xchg inc lock dec outsl jmp mov push push cltd pop inc mov enter xor inc lods adc fcom repz push dec mov xchg imul enter popf cmp jl das cld mov ja cmp daa ret ret cmpsl adc xor xchg jae and jbe icebp mov xchg cmp dec dec xor loope sub sub aaa or mov repnz aam pop xor icebp pop and gs test popf scas je stos mov hlt jecxz xchg clc and lret push sub mov popf repz nop and (bad) add pop mov movsl jmp adc repz repnz aad mov mov aaa data16 cmp pushf movsl pop jg (bad) pop hlt stc jmp mov jo or imul add rol jmp mov adc popf jle gs stos loop sub xor xor pop dec in mov fidivrl push ret sbb jl lret push imulb ds and adc cli stos or push ret ljmp mov jg fbld fwait sub pop jle (bad) xor add arpl into cmp xlat lea mov daa fsqrt inc ret push adc cmpsl out add bnd push xchg je cmp sub xorb xlat int xor jecxz in movsl pop mov xlat insl push mov or in out lahf hlt push pop shll cmp mov mov cltd sub mov xchg cmp je mov push cmp jo dec mov jg sti ss add ret mov and pushf dec push or push mov out mov lret xor enter (bad) test pop sub lds fs push sub cmp jns aaa jnp pop add ret test pushf mov ret rcrl inc test lret pop pop xchg hlt fidivl call ret stc add lea dec fbstp mov test mov push and xchg ja inc mov pop xor push and dec mov cli das inc or jecxz shll xor jmp test std into mov jnp cwtl mov pop lret mov scas int mov xchg jmp in adc dec les mov pop sub scas mov int3 cltd orb sub mov adc (bad) fnstcw mov add out xor test inc test lret and mov mov xchg fisub loope mov (bad) ja lret mov out xchg lea sub adc ret mov cmp (bad) lret enter mov int dec jl mov pop lods cli and xor pop mov sbb dec adc or fwait imul icebp dec pushw or daa sbb and call out push rcrl pop in push add rorl (bad) in push and out sbb stc sbb sbbl popa fwait leave mov xor xor and getsec xchg data16 mov and clc dec stos add xchg into lods xlat icebp jg xchg mov out or add mov imul int or out (bad) xlat fsub or insl sbb or stos push pop cmp rorl adc enter sub cli mov xor cmp rclb pop out mov test inc mov ret inc dec mov pop int3 mov (bad) mov or idivl fidivrl aaa js push push push es push mov dec out mov dec repz mov jecxz sbb jbe popa movzbl dec jmp jb mov jg jnp out jmp mov movsl insb jns into xor pop arpl lahf sub clc gs lret mov jae add sti push insb cmp (bad) jo adc mov xor test sub and (bad) das (bad) adc push cld fdivrp mov xchg lcall test mov cmp in in jae out add movl mov mov or (bad) add lahf pop js,pn dec fdiv inc dec out adc es cmp xchg adc or cmp pop add push int3 cld pop sub lret es jle sub sub xchg and and jmp cmp rolb outsb mov fs pop cmp or or cmp mov sub sbb pop push xor cwtl mov xchg or xchg adc dec dec add cmp push sub mov pushf sti je frstor out addr16 adc and sub stc mov lods push aaa fs lret daa rcl cld into xchg fidivr leave push cmp add (bad) shll stos loop sub out mov push or jnp xchg sub jno roll jne in popf daa (bad) aad sub stos pop or shll xor fnstenv ljmp jg push addb or into xchg mov call repnz andb add mov dec xlat mov (bad) dec mov pop xchg pop mov mov ret rorl xchg stos dec mov add and (bad) or stos fcoms negl add or ljmp inc (bad) inc loope iret pop push xchg mov leave das jnp or mov call scas out xchg ljmp cmp xchg fmul inc aaa aas icebp add imul cmp mov push inc icebp xor test mov push sub or cmpsl sub mov into and pop movsl rcr mov mov inc fiadd imul jg aas int and cmp pop gs das shll rdtsc dec shll push repz mov pop mov ja mov pop adc test (bad) ja sub les cmp dec sub or (bad) fld loop (bad) ret roll jbe lret nop jo sub push ret add stos out (bad) (bad) lret pop daa add std fwait aas mov adc test icebp out int3 in adc and (bad) repnz mov out loope test add cld jmp int sub xchg mov sub jg addl sub fidivr inc xor pop hlt (bad) xor jmp nop popa pop mov dec dec and call jo (bad) and pop or fsubl pop movsb sbb test add pushl xchg xor mov sahf or push xchg mov mov adc lea add cld jnp mov xor push pusha lock fsts sti sub mov outsl mov sub arpl push test mov pushf add mov push imul xor pop repnz pop push dec cs sub dec into and xor and (bad) jmp movsb pop je (bad) call scas jne lock or cld xchg mov dec fimull pop pop xor ret jg mov mov leave sub mov and jecxz sar popf sti insb or and mov das mulb ret push mov cld adc mov fldl cmp push push lret jns movsl push pop mov dec push repz rclb push fstpl faddl enter cmp je es and jge mov test fcomps popf fldenv jp xor pushf mov sub pop mov incb mov sbb (bad) or repz dec out je les xlat ret jns inc or mov add rorb test dec (bad) notl pop sub fcoms je dec ljmp cli fild pushf and les or jno fs jmp enter dec mov ret testb sub push hlt jb xchg push dec add add data16 add cwtl lods lods dec mov inc test cmp dec test push push ljmp pop rcll inc and lock sarl jns or das push add pop shl cltd push clc lock cmp lret sub bound (bad) outsl loopne or mov xor pop test ret shr add add test stc bound fistl out dec mul mov push cmp leave iret (bad) enter jns clc push cwtl xchg loopne mov xlat mov xchg ljmp shll movsl push lds out sub mov shlb sub add fcomp sub icebp jbe add rorb jnp aad jae pushl cmc push xchg lock int cld outsb mov daa xor push jp adc add xchg cs cmp lods jge and push repz lret mov (bad) jmp imul icebp inc icebp mov jne and sub sub push sbb (bad) mov cli jge es adc and cld movsl movsb test leave add test or xchg ret mov pop movsb lret je movsl jns gs and sub cli sub add mov xor mov adc xchg fs jb xchg lahf jle jmp fisub (bad) pop in call scas or mov or pop push add bnd outsl mov hlt in push jbe (bad) jmp adc and test shrb push lds or (bad) hlt leave push lcall and rol adc add jb (bad) inc arpl push ja push loop repnz xlat fnstcw xchg jbe loop imul mov adc lods sub (bad) cmp sub or cmp (bad) lret flds fild (bad) xor ret adcb in and (bad) mov dec mov loopne fs cltd jl dec lret (bad) sub sub cmc mov movsb xor pushf mov jns lods cmc mov (bad) mov jnp jle,pt mov movsb and stos cmpsb imul mov push lcall stc add xor ss xchg (bad) adc in int add sub pop mov (bad) mov lcall push test or fst fsubrp mov mov call aad pop add cmp add lock popf notl dec (bad) add cltd fs adc mov mov mov sbb test xor and pop xlat jns push mov int3 and stos xchg jle addr16 aam test leave sub lcall leave ja add jmp xchg lds (bad) rol xchg cmpsl push add sti (bad) xor scas mov mov adc cld clc xchg shlb add xor mov leave mov mov cmc out mov jne push in lahf rcr dec mov out fimull loop (bad) repz fs nop cmpsl cli mov daa add sbb mov jle cmp in movsb push sub into mov mov adc cmp ja imul mov cmp int adc sahf dec sub cmp addr16 cmp add popa adc pop add pop adc popa test xchg push aad and mov mov (bad) pushf stos rorl scas je adc mov and clc out cmp xlat (bad) out push xchg adc xchg sbb stc ret sbb (bad) in xchg pushl out hlt fstpt movsb lcall push cmp adc add adc cmp pop inc sub dec or bound outsl repz inc fiaddl cmpsl insl dec stos je mov mov push cmp js mov int3 inc pop stos dec pop cmp iret lret out gs aas xor mov not daa aam and dec (bad) (bad) and pushaw push stos and les mov xor xor int xchg stc mov out cli out dec rol int3 divl xchg leave cltd shl add orl mov cmp cmp pushf aad dec imul push aas and add adc (bad) jo (bad) popf fs cmp (bad) xor clc into sub or decl add movsb stos clc insl rcll out popf fsubrs xor sub dec add sub or in jns xlat clc int mov or mov or test jg adc repnz mov mov xchg ret (bad) icebp ja xchg adc fbld data16 fisub push mov (bad) sahf popf aam inc loop pop cmpb and push mov jp into mov ds dec pop movsl dec mov sbb cld leave das icebp jns (bad) repnz xchg mov dec adc mov pop out xchg popl mov pop add mov xchg sti or or mov pop xchg std xchg std adc daa xor pop sbb sub pushf xor jmp dec inc es outsb daa cld (bad) icebp mov adc sbb out xor dec jge stos xor jmp xlat movsb arpl rcrb stos xor pop test pushl push sbb sbb add xor jmp pop add enter (bad) mov out (bad) xchg cmp rcr in and mov dec or fnstcw inc xor sarl fidiv lret sbb mov ret xlat sti sbb movsl (bad) adc jno xchg ret scas sub pop les stc stos std adcl stos mov mov xchg out cwtl (bad) into jns push mov mov pusha ss push cmp jmp sub xorb ret fist ret bnd stos dec sar push lea rcrl or mov nop icebp ret into movsb out (bad) leave repz aad adc ret cli lret fnstcw pop and xchg in popf rcrl cld (bad) movsb mov push or mov xchg adc and mov cmpsb cli pop and jnp mov in lds sub dec mov sub xor pop bound in aas inc repz mov je add pop sub push adc sub test into sbb xchg mov leave mov dec outsl and and push sub (bad) and mov movl (bad) mov dec or cmp (bad) sub and test into fwait pop pop mov and pop pop das subw add pop cltd mov popf sbb xor cmpsb addr16 ret ljmp (bad) dec cwtl std (bad) outsb mov add mov sub arpl jne fnop das push bound mov or add push mov sub jns sub pushf or and pop stc (bad) icebp movzwl cmp fisubl ljmp out in mov test dec pop sub cwtl mov loope lret mov dec ja inc dec imull cli stc mov or and mov daa or pop cltd ret jmp or sbb push xchg sub and mov add cmp pop jae push add inc (bad) je cmp jg rclb add pop out sbb je pop popl shll jg mov hlt popa or xor outsl and out mov ffreep xor jp adc pusha lahf cmp clc dec lret add loope inc push mov xorl inc addl push test std pop xor aad repz icebp (bad) data16 outsl shrb repnz mov jle (bad) or movsb fidivrl rorl push int3 call sub add xor push mov pop xchg stc arpl mov pop push mov lahf sbb push imull xor ds add add fdiv rol mov ljmp or rclb add rorb push pop and push mov jle in mov int bound jg pop cmc into cmp jmp fimull int3 fs mov ret inc jnp dec add inc sbb das mov push inc pop xchg not cmpsb or push inc cmp lret xor mov adc sub or in add mov pop pop sub push push sbb out mov mov lds data16 pop inc ljmp dec adc fsubrs pop sub cmp xor xlat jg and pop push daa lods in in xchg les xchg cmc mov and frstor fstl push mov addl fiadd (bad) testb jg sub js in push lods push nop adc sub (bad) mov lcall mov xor or mov das test lds movsb xor add inc fwait test xchg jle jo mov xchg out and leave pop in mov div push push mov sub jp lret testb clc xor loope std test frstor daa mov (bad) int3 (bad) or xor jecxz mov and mov and jl sbb and jg adc mov inc pop push movsl and cmc and int push lods sarl (bad) mov jae mov fstpl dec inc rorl cmp mov mov sub push push loop enter imulb cmp rorb dec xor xchg cmp int bnd sarb pop lret mov vpshufd dec loopne cmp mov cmp test lahf adc popf or push lret idivl cmpsl sahf inc and lcall mov mov mov jg mov jns xchg add test dec xor push mov pushf lds daa sbb leave shrl test add xchg xchg decb in mov mov xor mov cmp popf rorl mov movb pop shrl out lret xor ljmp pop add out sub stos mov xchg mov ret jecxz jge or mov pop lret in dec mov xor scas xor adc inc sub add (bad) xor (bad) faddl dec mov adc ljmp fwait xchg aam mov cmpsb xchg sarl repnz or cld lods hlt loope sub xor cmp cmpsb jno cs push (bad) std xchg and cmp movsb xchg fldpi frstor jne jo ret sbb or cli (bad) cli negl push (bad) pushf adc cmp or add sub test bound scas (bad) gs pop call insb in faddl aad dec pop bnd adc ret (bad) and jp and das outsl mov imul in idivl mov xchg dec ss jge mov sub test scas add xchg adc mov adc out sub xor enter scas enter adc mov into pop dec dec inc fadd or add imul inc sahf imul xor or jge mov out lcall int aas (bad) sub xchg ret pop inc sub ja scas add cli jg pop divl (bad) push or rclb mov movsb inc pop mov adc scas lea aas xor sbb orb imulb push jno dec xor mov je sub fist rorl test pop mov daa mov loop fcmovnu aas cmp adc test sar aad out icebp jmp cmp outsl mov divl ret adc mov mov mov outsb jnp hlt lret in das fbstp scas mov cmp mov jo adcl fs imul xchg sbb arpl addr16 sub (bad) xor or jmp dec mov jg push fbstp sub dec mov cwtl imul icebp inc mov movb rolb movsl ret lret ficomp xchg popf (bad) and adc dec dec jmp out cmp jnp dec mov sbb add and hlt push ljmp mov and sub les push das and pop lcall and jl (bad) inc call test (bad) mov cmp adc adc sub xor aad in add xor sub adc (bad) add les test rorl cli lahf lcall xchg stc mov add mov sbb popf fsubr bound into test icebp cmc sbb loop pop xchg (bad) dec repnz out adc pop daa or lret sbb push loop inc and mov mulps loope or mov daa sub scas notl clc rcll pop (bad) gs ljmp das fdivrl push add add inc jmp mov and xor add or cmp xor not pop iret sbb add xchg push add lea sti sub xor repnz negb dec mov mov loopne and mov dec std in div stos sub popa cmp repz aas pop add mov sub fstps daa cli insb inc daa loop xchg push dec repz pop push cli xor popf fistpl and sub or nop cli aam mov jmp inc pop push jo or (bad) stos or rcrb push cld ss add lret xchg add dec loope jle lret mov sub mov xchg (bad) sbb dec jmp ret and fidivr sub and cld push dec movsb push inc icebp enter jno xor ds das out adc push (bad) cmc fdivl mov lcall rcrl imul xchg push mov scas bound imul mov dec fmulp push mov cmp lods addr16 xor cwtl xchg or add dec lds sub mov cltd into xor sub js icebp scas lret xchg dec mov push mov cmpsb xchg imul xchg test and or leave rorl div lret add or ret xor ficomp mov jge scas xchg sarl mov pop jb add out repnz xor mov pop add add ret rolb sub repz sub notl ja lcall mov dec rol fwait icebp dec inc stos lret or mov xchg cmp cs mov loop ds mov mov xor cmp pop icebp cmpsl jbe and int3 sub mov mov into inc gs lods adc fmul repnz iret mov je adc test movsl negb pop insb les stos ja,pn nop in mov xchg jmp xchg xor push inc pushf (bad) push mov (bad) popf pop les mov mov or mov sub mov mov pop iret repz lret or xchg (bad) out mov fdivl mull mov std (bad) xchg clc dec (bad) decb popl lret mov (bad) dec das mov pop mov dec cmp mov or cmpsb adc dec mov push or lret testb sti and pop mov mov mov jbe out xchg in and addr16 shll sti mov addr16 mov sbb out mov and aad mov shrl pusha mov mov inc inc or (bad) ljmp sub or inc jg (bad) lahf fiadd incb incl push divl fisubr popf fcmovnu iret sub mov mov into je fs cli lret clc push mov jno xor jno sub stos mov push push das scas popa dec xor jp add stos sub divb loope ja inc movsl jge lock xlat cli lret mov and adc iret stos adc movsl movsl jnp or and sar ret jecxz and lcall sub std xchg mov cmp lret adc sbb jmp mov add or sub and clc sub dec mov sti and cs out sbb fstl dec bound int3 sub mov (bad) (bad) jmp cltd adc sbb xchg je ljmp add scas ret sub cs push sub and cs dec in sbb push mov repz (bad) stos mov and movsl mov ret push dec sub iret rorb jo mov rolb jg or lret xchg cmp neg dec lret rorl xchg sti pop mov mov jge (bad) mov dec xor ret (bad) sbb xchg xchg test leave ljmp and leave pop mov xor sub adc dec xor cmp sub lret fsubrl or pop sarl jns loop clc ret mov (bad) or mov pop adc loopne lds add daa xor stc add int3 (bad) mov enter pop push mov push lock push mov fistpl fistpll (bad) mov push add xor mov pop cmp icebp push mov add inc (bad) sub jne inc jg push shr pop mov jmp rorl ret (bad) (bad) pusha mov mov mov cltd imul into sti pop mov sub jbe stc add fnstenv jo mov jmp add (bad) repz xor and lock dec loope (bad) and in lods test sbb bound sub dec stos fisubl push icebp push pop sub test ficoml dec hlt add divl adc pop shrl scas jp push sarl call inc jmp es jne fadd jmp sub xchg sub and mov push pushf movsl pop jo sbb pop icebp mov test sbb popa and sub movsb les scas repz sub adc repnz adc add mov clc scas and mov mov cmc rorl lods pop push outsb mov fwait das bound inc pop out pop out jmp cwtl sub ret inc mov or sub or jmp and cmc xchg fldcw sub mov xor pop ljmp ficomp lods mov jge jecxz mov mov and mov test xlat out mov shl xor les adc mov daa ljmp or cmpsb jo jno dec into pop or xor mov inc jmp cld xchg sub loop inc out movsl pop xchg push add xchg fcoml rcr daa inc jp mov popa jne mov adc shll xor das xor sbb pop sub sahf and xlat xor (bad) mov dec push and pusha push sub or dec shll adc mov fdivs dec and sub aam push pop test mov rclb and mov xchg push movsb aas or xor jg cmp and ret mov dec cmpsb xchg imul adc aaa mov xchg mov cwtl outsb pop pop sub enter cmp cs idivb aaa mov shll pop js push les movsb sub dec (bad) sti xor cld adc mov imull (bad) sbb xchg lret aad dec mov loopne mov into mov mov leave fs mov xor movsb jmp mov or add ljmp and mov orl mov xchg (bad) hlt dec cmp pop popf js xchg inc mov add mov lret sub orl xor jae adc scas sub mov cmp pop leave (bad) jne (bad) jo and mov inc lock fwait sub mov pop fs pop xor lret inc das pop add ret jae mov mov lods sahf xor test (bad) out (bad) pop jb ds or stc sub add add sbb int jp in push pop or out push or xchg push cmc jno dec push out pop jmp dec test out and cmpsb shlb or xchg out xchg jae das pop sarb loope iret outsb sub das mov adc add or pop pop int3 (bad) shrl in out xchg lock loope mov je (bad) fnstenv or push mov ret pop pop add mov aam pop out sub xor dec pop push or mov rorl dec sti cmp or out iret mov lret lret jno inc add add and or cmp mov out cmp add jl outsb popf fist cmp and xor imul out xor out loop test leave std adc jecxz andb jle sbb (bad) sub pop cmp (bad) je or xor and leave clc cmp loope fwait je int jp mov daa sub (bad) call jmp sub rclb adc sbb adc add clc sub mov enter mov and lods cmc cwtl xchg das cmp out sub xlat xchg fstpt adc add fildll insb pop mov sbb je sub push xor sub lods or jbe jmp add xor jmp je push ljmp mov dec repnz push movsl or sbb push sub jp stos mov invd xchg push (bad) rcr pop (bad) rorb ret repnz sbb mov jmp mov adc pop sub or xor or jmp sub iret (bad) dec clc lea and ret faddp add jne mov push pop sub mov jbe pop mov xor fsubrl xchg add mov add mov xchg xchg es andb dec pop mov mov xchg cli bound jnp or sbb dec ret xchg gs mov xor cld lret sub mov adc xor and adc sub jp (bad) rcll mov call jecxz cs sub clc mov (bad) cld mov test cwtl insb movl imul pop cld cmp push mov push sbb popf inc arpl adc sub ja cmp dec sub lods cs iret cld imul or sarl or mov insl pushf adc and movsb scas je stos adc cld jb repz cmp std mov test xor push ja sub mov cmp cmp pop xlat bound push cvtdq2ps repz mov fistp iret sahf mov add mov pushf das push mov jns leave xor push cmp cltd (bad) ljmp sarl fnstenv call jle (bad) xor stos bnd or mov pop in (bad) jmp sub (bad) cmp adc ror out xchg (bad) ljmp sti adc pop or sbb mov mov call rcr ficompl dec add ret (bad) mov pop jle inc mov pop icebp lds add test mov or test push pop out pop mov int fsts lods rcrl imul lods and or aad aas add jno dec or ficomp int3 fcompl hlt mov mov mov dec push mov insb pop cmpsb popf lahf flds sbb inc dec rcrl hlt adc and lahf dec sbb xchg add jno sub gs or icebp push orl and jp xchg adc xchg lahf pusha icebp mov add and cmp loop les dec ss xor stc push pusha add mov sti inc jmp pop mov jp jg mov divb push arpl jle xchg shll lret inc (bad) cmc xchg sti fstpl mov jg push sbb mov xchg or (bad) push repz out (bad) jae pop aad cmp mov mov sub push icebp cmpsl add mov and popf in scas mov jge push rclb jmp pop jmp add jb sahf push lret int3 mov (bad) aaa (bad) sub cmpsl je xchg pop xchg fmull repz faddp mov stos jecxz mov sub sti xchg adcb pop lock popf stos push adc cwtl mov push es cmp push popf xchg in adc xchg clc sbb xor cltd lods lods inc popa xchg lret out sub sub out gs lods mov xor mov aaa adc fcoml das inc in sub scas enter fildl rol popa mov lds and sub dec mov sarb or adc cmc and cmp out jmp pop das sbb inc ret aas mov add cmp ljmp push clc outsl mov stos int3 push fbld and nop and adc lret inc and sub lcall out sahf lods cmc adc sub cltd or cmp enter and xchg imulb mov mov push dec pop mov mov negb mov lahf test in test loope lret xor sub cli hlt jno push mov dec cli notb jle and movsb rclb addr16 fs mov rcll mov (bad) mov xor push mov imul repnz in das xlat mov mov or pop ss ds fisttpl xor push int3 adc ljmp dec mov out pop cmp cmpsl push adc push mov cmp dec push cld mov jmp mov outsb sub mov xor jge test decl jecxz mov dec jge cs jp mov mov ds aad cmp xchg mov mov int3 rcr dec bound (bad) xchg fsubr out pop ss leave fstpl and sub test dec mov lcall sti add mov ja (bad) lret inc stos inc and mov push and mov and and jne inc popf cld sub pop ret leave push arpl fbstp ja inc sub or bnd in iret sar mov dec and xor daa fs and add xchg mov cmpsl hlt sbb movsl es pop data16 call xor sub or xor stc sub clc fisubr inc jae (bad) mov jp mov mov pop pop push test cmp in das jb sbb fldl2t pop mov loop lds cmp je imul xor dec (bad) mov push mov inc dec test sbb pop adc push loop mov dec xchg push push xchg (bad) sub std loope xorb (bad) stos jb sbb sub leave jne push push js lahf pop xchg lret push (bad) mov jmp adc jbe lret clc cmp xor clc pop or les in sub push dec sbb and bound in idivl add sti adc icebp data16 je test call adc inc into add (bad) rorb sub xchg xor fisttp lret mov pop mov jno sub cmp sub pop mov or cmp jns push or stos pushw popa push pop and add push mov xchg shld jmp lds sub repnz inc dec jns dec jmp fist jno push cmpsl add mov les inc cmc push andl push test es fwait das popf dec add sub mov pop (bad) iret subb cs js sarl push mov aaa mov sbb les daa inc (bad) jns xchg pop mov mov stc adc jo rol nop push sub ljmp mov xchg cld int3 imul (bad) lret adc nop bnd xchg clc add fcomip scas shll mov push xchg out push in int or cmc in mov (bad) icebp popa mov mov cld int3 pop dec mov lcall (bad) jb mov jg stos adc cmc (bad) ljmp xor lret mov dec mov sub jne stos sahf or orb or dec lret mov and aam adc mov push sub xchg out stos mov inc test pop mov inc sub fwait test or sbb and mov sub cli lahf mov ret lock (bad) aam (bad) call int and xchg inc fsubrp mov xchg push roll repz call jbe aad (bad) mov adc stos lret fadds or xor inc mov pop adcl mov bound push loop dec jg mov and in fdivrs xor mov and pop loop cld jg pop rcll out inc movb cmpsl pop sahf jne and xor and xor in dec sarl leave div jns jmp mov test (bad) cltd daa pop popfw sub dec leave cld test fldcw sub sub call xor lea das ret mov hlt std movb leave (bad) arpl adc fistp add aad pop dec xlat sub jne mov mov fs stos xor mov in lods mov xchg mov xor mov adc into xchg js xchg bnd mov add mov mov lea jmp lret dec imull xor mov cmp jae repnz dec flds adc mov xor jg loop mov idiv jo lahf xchg pop xchg nop mov out subb fs jmp mov xchg out test mov lods add xor cmpsl imul imul pushf or std sub inc ficoml lret dec push decb pop mov mov cmp xchg std mov imull dec popf (bad) flds sub inc js push mov ljmp sbb call (bad) mov jge and mov pop or test std jmp jnp push add jnp sub addl call movsl ret mov mov inc inc movsb ljmp mov daa xchg pop cmp lea sti sub cli add mov sub and mov mov repz icebp dec add neg push and aas sub xchg cld loope loope test fisttp add xor (bad) lods push ret or out sti ljmp push sbb call mov lds in push mov loop adc ret aad push cmp jecxz imul lock ljmp (bad) mov mov or fcoms into (bad) pop mov repnz gs mov add mov or pop int3 pop pop add bound xor cmpsb lock or xor xor clc or into cmp enter sub (bad) inc (bad) (bad) out pop lds xchg into xor add inc and fsubr lds out test lods scas and ret sub cmp lret data16 daa inc ss or je jmp or rcl jno out rcl daa cmp (bad) adc (bad) int adc (bad) rorl sbb jle sbb test test mov push sub imul sarl mov test lahf sarl rcr shlb cmp movl mov rolb icebp mov fs mov push sub pop data16 pop pop adc test in cmp sbb cmp gs dec inc lret xchg sbb or xchg (bad) shrb xor jecxz sub xchg mov cld stc push xchg sub jge es xor sub out jle pop imull push mov out mov push aas or dec jle (bad) xchg push outsl inc fildll sub outsb lods mov add repnz mov xchg xor movsl std add pop mov add arpl rcrb sub dec pushf into inc sbb mov or pop scas sub or cwtl lret sub ja sub xor jle insl ret sub mov lret (bad) fwait or sbb ja addr16 fidivr jecxz mov inc xchg adc jmp mov jnp mov push xor leave (bad) cmp bound sub (bad) lock jle jae movsl repnz fs out fs fnstcw sarl pop or shll dec sbb jo and dec xor shl mov in push adc mov mov js xlat pop lds ret sub or aad lcall mov mov push adc xchg loop adc adc adcl mov shrb sub jnp adc inc ret out cs dec mov push cld mov negl dec loop push xlat mov and stc out leave rol in scas jns or add (bad) add or xor (bad) lahf sti jbe push neg icebp mov lock cmp pop sub mov daa jmp add ret dec je inc xor pushf push lods repnz inc xor sub xlat push mov or out and xchg rcrl mov jp mov and pop xor daa rcll outsl cltd dec adc mov lcall sub xlat mov lret jno int3 mov mov hlt xchg idivl js (bad) icebp test andb lds (bad) mov dec mov mov lret stos adc xchg mov xor xchg sub in mov inc and imul push js decl sub inc xchg adc push idivb mov cmp push jb and xchg pop ljmp and jecxz push lods lret repz stos fsubrs stc popf jge pop notl leave (bad) jl and mov pop xor mov xlat jae pop in pop sub cmp (bad) ljmp sub (bad) push mov xlat daa sti ja mov imul pop adc mov imul and pop jo out (bad) in add int ss lods (bad) movsb out fldl add mov adc adc jp test into and test mov pop cwtl lods (bad) lock mov test fldt cmp and mov call adc cmp fwait shl push pop xchg pop stos sub jl pop push pusha dec rclb mov cmpsb (bad) pop int3 popf ss and rorl repz sub loope idivl sarb shrb aad adc cmpsb sti push mov push jecxz cli pop out inc ret and xor movsl pop aam (bad) icebp (bad) cmpsb repz mov mov sub cmp shl loope sbb test mov inc movsl adc es xchg xchg std jge lret js push xor or add mov sub mov add add das stos add lods add mov push add dec mov adc push int (bad) add sub add loopne es mov add add cmc add cli add incb bound (bad) sbb in or adc add add add pop pop sbb imul xlat or sub dec or or or or dec or or push or or or xor cmp and addb inc jge in cmpb mov xchg xorb stc lahf subl sub (bad) test and and (bad) in or add push faddl push loopne cltd in cmp add add add add std pop dec or or or in adc adc adc and mov adc adc adc adc adc adc and and jge andb cmp xorb sbb xor and adc orb xorb leave mov xchg addb test adcb addb jp orb leave scas or or mov enter mov (bad) or or or or or or testl add aad sbb or sbbb mov orb and addb xor cmp sub push inc and and and and and and mov add add cmpb andb lds pop nop sbb lods cwtl andb orb mov or add add add nop stc (bad) adc leave adc lret adc into adc rcll cmpsb xlat adc int adc in xor cs out cmovo ret xchg data16 popa std push pop add xlat add or adc push pop add nop sub mov adc xchg aaa xor or add js add add push pop xor add pop add pusha add or push sub mov jae js inc jl inc cmpl add mov xchg add cwtl add pushf add sahf sbb mov scas add add add mov test add jg shlb mov fsubrl add jmp sbb add std sbb decl rolb xchg or andb mov add add add xor jnp add cmp lods cmp add sbb sub add push add pop add pop add add xchg imul jno push jne out jns pop jle roll lea fistl inc xchg xor inc cmpsl add stos and lods and mov loope and mov sahf les dec lret icebp into add add aam in flds sbb jb add push or or or ds or or lock test add push add sbb mov add and dec sub in sub aaa xor jl adc adc dec dec adc push adc adc pusha adc adc adc adc adc adc adc xchg scas mov inc mov pop xchg adc cltd adc adc adc stos adc adc mov into mov rol adc data16 shrl loopne add jecxz xor add add testl test ret lock or push inc or adc inc adc inc sbb and inc sub inc cmp inc cmp inc inc mull dec add dec add push add pop add pop add gs push lds sub or inc jns inc jg inc test inc mov mov inc xchg and cltd outsl inc pushf dec inc mov inc stos jbe scas and jp mov inc ret enter add or sbb mov fisttp inc in inc call inc lock inc repz divb inc cld lds jle inc pop inc aas or xchg push and and and sbb negb and and and and and and std testb push add add pusha add arpl test add imul outsl add add jnp xor rolb xchg loope and and and lcall and and cmpsb and test cmp sub and (bad) out or add and (bad) xor faddl add add out dec out and xor mov add adc dec or pop adc sub adc sbb scas sbb inc es mov add add xor sbb xor ds inc add add notl sbbl inc imul jb push js dec jl xchg sub add add add pushf add add cmpsb add add add add lds lock iret add roll rcl add add bound push in sti jmp jb and mulb lcall add or push or or cld add adc push add sbb add es sub add aaa add cmp aas add inc add dec add dec add push add push add pop add pop add arpl addr16 outsb add jae adc pushf jg outsl test mov lea test jns cltd inc inc sahf push inc movsl cmp test ds mov inc mov inc mov inc rorl xchg lret iret mov xlat pop inc frstor loope inc in inc jmp inc repnz push cld cmp pop adc or jle add and arpl sub pusha sub shrl add xor stos aaa add cmp lret add stc push add push add add add add outsl add jne sbb out jge scas (bad) add xchg stos mov test and xchg and xchg xor and push test sbb lahf mov xor dec lds lret int rolb push and mul and out or and lock and jo dec adc or or adc sbb adc jmp or daa inc sub pop xor cmp inc addl dec push add add pop add add add add add jb mov add dec addl mov icebp mov rclb cwtl add and movsb xor test lods or nop cmpl lds mov adc lret adc test adc xlat adc adc fcoml sti loope xchg in out pop in add add add add adc (bad) bound push sbb or incb outsl push add add add add add add add add inc and add dec add push add push add pop add pusha add gs push loopne add jb sbb out sbbb adc subb xor sbbb add in scas or or and and and and fisubl mov xor in and xor sub popa cwtl or add inc clc push adc jne dec xchg or or or pop or and or cmp cmp jne sub sbbb and mov and negb xchg and push outsl add jae push js and mov and mov fisttpll xchg add lcall add add add add add mov cmpsl enter add and (bad) xor xlat or add add add add in or mov nop sti sbb push add nop bound or or mov add adc mov add and arpl add sub add add add cmp fwait add add dec add dec add push add push add pop add add add add add add push add lea adc xchg add popf add add add push jb and and cmp cld enter cmpb lcall ficom shl adc out push jmp cmp adc mov or add and and stos mov adc bound and sbb cmp and jno or andb xchg inc subb xchg dec sbbl fstpl cmp and push mov and js xchg jnp push andb xorl mov add add lahf add add add add mov lret sarl lds (bad) enter xchg iret add add add out pop in add icebp add jge adc les xor and add pop add sbb outsl es sub das add xor xor clc cmp xchg mov sbb loope adc adc pop adc popa adc adc adc jne arpl gs adcl and (bad) and xchg and and sahf xor mov lods and mov mov enter mov or or inc loopne lock and add add add pop cwtl rolb cld or adc xchg push and cmpb inc and cmc sub mov andb jb cmpb imul dec and and loope and pop and pop and and outsb add jae mov sbb pop (bad) add xchg (bad) mov lret fist mov sub shrl or mov pusha mov mov and and and and mul xorb data16 cmpb (bad) hlt subb adc sbbl or pop outsb inc or push js sbb and sub xor cmp inc ds inc inc push inc inc pop inc inc insl inc dec imul inc pop sub jge pop sbb mov push fs ja pop jnp jle (bad) xor cli xchg jmp sbb fwait add xchg movsl add adc mov sbb mov movl rcll mov sbb fildl add in shr xchg out adc adc notl sub sub mov enter or or or invd jbe and xor xor add add add add add add add add add adc adc push adc adc pop adc adc addr16 add pop jne dec int3 add jle jge add test xchg mov inc lea inc xchg jl xchg es lcall sahf inc test lods mov stc mov ret add leave add int3 add rolb roll xlat add fildl fild jecxz jg add in add icebp add cmc add clc add cld add add and or inc adc aaa adc lea or sbb xchg or and stc sub sub ss or orb enter mov or xchg pop or or or or or jno jbe popa jns sarl jnp and mov mov add add test fsubrs sub adc adc mov or adc add call daa pop pop pop sbb or test push je dec popa repnz rolb (bad) stos sbb rdtsc mov sbb xchg xor jo test rorb inc inc and insl xor scas pop cltd test or jo jno xor push aas xchg stos cmpsb push dec popa push mov push add mov orl add cmc fwait pop add push pop pop pusha xchg add jg lods or in and lea push push jne pop push mov inc clc pop xor and cmp notl pop xchg addr16 jmp push jle add inc add push mov pop cmp xor imul cmp inc or mov or pusha (bad) sbb scas jbe int3 pop and sbb jge (bad) loopne,pt pop inc addl push or push insb add popa sahf std jge outsl inc adc push jp js pop adc out fiaddl push nop loope mov test (bad) pop xor je pop add mov pushl js sbb dec cwtl test add imul or adc sub push mov add daa cmpl stos fcomip mull pop les or subl push in bound in out or push shl not imul rcrb mov pop out aas pop dec mov xchg loope pop add mov jmp mov testl jle outsl adc mov inc rorl aam pop add jl lea and cmp sub jo push sbbl psllw and mov scas lock stos loopne xor dec sub and or xor icebp ds pop pop jg bswap pop shr dec lret add xrelease stos shlb aam mov in test add adc jl inc les imul in or dec loopne push out adc fs push rcrb aas pop pop leave mov xor xchg jb leave mov nop ljmp xchg push push outsb frstor xor push jo jle fimull fwait dec pop pop push repz pop mov aas cmpsb rorl inc add scas fidivr jmp cmp mov sti addr16 mov (bad) sti aaa adc lret sub pop pusha call fldenv jle iret adc pop or dec and mov add xchg lds sub lock push and dec call xchg addb mov mov mov sub dec jl daa cld and iret notb sbb mov cmpl sub pusha sbb pushl xchg jp orl sbb mov js sub adc or imul pop or add and (bad) je jnp mov xchg xchg add arpl test inc add jl push jb sbb cmpl pop xor cmp xor cmp jle cld pop and add andl or adc pop ret sub pop cmp xchg (bad) mov ljmp lea ret push lret jecxz ror push lea xor and cmp jnp add lret fcoms or fcom xor add xor aaa and xor ljmp sar outsl out mov add in int (bad) jno and pop xchg movsb adc aas lock int xor fiaddl push push popf dec xor (bad) mov lock dec ja test or stc pop addr16 sub pop sub push and cld push add mov pop das push mov adc jmp jg pop (bad) mov and jbe incb shll idivl fnstenv pop jo into stos loope stc xchg int3 cmp push outsl xchg pop jnp or bnd add jb add dec hlt jg call xor cmpsb dec jns sub push sarl mov cmp inc sbb or sbb dec (bad) (bad) jae pop pop pop pop add pop adc rcrb fadd mov xor addr16 push shrl xor lds sbb push add jnp mov add cli mov add cld in xchg add (bad) cmc outsl push cmp xor adc lahf mov dec pop mov (bad) iret jle jbe push inc arpl lods pop fsubrs push xchg sbb (bad) out repz fwait cltd arpl popf dec imul push cmp inc (bad) icebp adc mov pop or add int or or add aad outsl mov ja jb jle adc imul add xor lds dec add arpl mov push fisubl xor add jne sub pop push test daa pop sub js or add add insb in push or stc xor or push out and or push sub cwtl xor lret std add imul mov and mov paddq pusha cmp sub (bad) int xor jg das es inc in xchg pop jae clc pushf pop repz jo addr16 ss xchg add and or out pop pop pop pusha pop inc movsb std jnp xor xor dec pop pop sbb and insl cld es adc int xor add mov adc push pop mov mov lret xchg daa mov xor sub arpl stc inc dec mov fsts rcll mov test xor xor lods lock inc xor jbe (bad) or cmp adc divps push pop sbbl push pop loopne aad pushfw ds mov nop mov add push icebp sub fwait inc pop push lahf inc dec inc add out iret sub stc push pop add add jle or int3 aas jg sub add xor dec xor xor fsub fnstcw outsl inc and fsubrl dec pop push jns frstor jecxz mov aas pop aaa xor sub nop xor pop pop call mov sbb and xchg mov adc or popl adc push xchg dec xchg jae cld rcll adc pop dec add xchg ljmp fwait or pop sbb (bad) ss outsl dec push add mov add pushf cmc dec adc mov aad lret rcr std jae pop mov ficom aad inc dec push out add and jg mov shl push inc and lods loope jns jmp out pop cli insl mov adcl dec cmp xchg cmc pop jge inc das add sub inc les clc lcall js add fisubr imul sub pop orw push push add shll jbe (bad) xchg shll fisttp push or cmpsl push adc xlat push pop xchg fs push push xchg aas or loop or into jg (bad) sbb and sbb sub mov (bad) pop pop adc mov add outsb jae or loope push fs es push lds cmp loop pusha xchg imul orl add fstpt negb push jo or inc loopne sbb push inc xchg or pop xchg cwtl (bad) xor in rorb into pop or jg stos (bad) mov aam cmp int3 mov lcall nop dec push adc (bad) mov push sahf push jb inc pop pop add outsl mov xchg add cmpl xchg or adc mov in jg cmpsb roll push rcrl idivb adc xor mov jmp xor push popf mov jl enter push xor xchg pop push sub inc aaa imul mov pushl adc add pop push mov std daa and push inc pop (bad) rcrb repz addr16 js out scas jge hlt cltd std das in adc in cmp xchg xchg mov jnp sub icebp daa push decl aaa (bad) outsb pop xlat adc imul sbb add pop lea out out aad daa sub faddl pop (bad) shr cwtl aad or xchg dec add push add mov inc xchg cmc mov dec push fdivs add lahf jg pop mov add rep sub mov add push dec pop call in fimull loope pop and into or int3 out aaa test sub in add pop or sarl repz xor outsb push repz inc push add or pop and cmc add add push push mov inc cltd xor in xchg add mov add lods lods arpl add dec (bad) into inc add mov cmp (bad) hlt ds lret xorb add push sbb add add mov pusha lea mov ja cwtl xchg add sti test int3 add movsb rcl stc mov xchg andl ss push dec push push aaa jmp call adc push and xor jbe add daa movsl lods sbb shlb pop mov sub inc cmpsb test push mov pop addl jge bound inc bound jb add jge dec or test mov push ret jbe sub jge mov adc lea sub and out mov push and repz pushl pop ret jo jmp arpl rcrb test sub fwait cmp or inc xchg push push mov stc jge sub insb mov aas outsb cld push add mov or data16 dec add (bad) cmc lods pop mov addl jge adc sbb ss std jns or sbb push (bad) pop je incl fdivs dec push sub mov nop mov lock (bad) mov jne lret pop push push mov add mov loopne xchg fidivrl push rcr or ret push ror cmp and mov aas push cmp jno cmpsl xorb flds xchg jecxz jns jmp or or add sbb add pop shrb cmp outsl jle sbb mov adc or jl leave push pop mov mov daa es (bad) mov (bad) lret add push push pop mov adc pop aam ret cltd pop cli fs aad push mov mov adc mov jnp addl pop stos pop mov sub cmp fcmovu ret xchg adc sbb repnz add movsl aad lds mov mov jg adc pop mov lds jns loopne ret pop data16 push push pop fstps push scas inc das mov mov add lret popa outsl pop or pop mov add and mov pop out fistpl lds mov aad movsb add sahf hlt xchg enter and addl adc pop sub leave sub cs cmp mov sub xchg mov push sbb push push dec pop mull xor mov push sbbb sbb hlt inc nop push out mov add ret (bad) or les aas xor es xchg add test fsubrs sub mov add (bad) xor xchg mov dec push dec bound bound sub iret std jge xor and test sub pop add jmp push xor inc push push push loop (bad) (bad) hlt movsb pop cwtl adc subb mov testl xor jmp and cwtl push add mov fidiv sub adc pop pop lods add nop inc shl jle clc xchg cmp push pop mov sub pop sbb ret cmp push push cld outsl sub xchg (bad) or leave mov test nop in test imul adc adc sub jle inc icebp adc push sbb dec out or inc lods cld sbb push sub xchg xor sbb inc push fimull mov mov test push adc or jbe incb mov das int add jl pop or jne xchg mov jge mov adcb xlat add mov mov adc pop adc jnp add mov jae cmp iret cmp or pop or pop adc sbb icebp jge out jnp cvtps2pi add jge mov call adc push jns dec and sbb push outsb ret into lahf pusha imul cwtl xor sub sbb sar mov iret push stos icebp arpl cmp push or push (bad) bound lods ja push adc call pop sub gs ja adc cltd sub push pop (bad) adc fsts xor movhps xor out in test mov adc adc push or (bad) xchg lea leave or dec int3 mov sarb (bad) or test adc outsb sub (bad) mov cmp cmp push aad push jp dec add sbb or adc hlt cs xor mov rolb and mov loopne pusha jp pop nop bswap push mov pop or fstps test sub xor lret rorb std and inc test sbbb sbb push mov fnstcw notl insl mov push add pop int3 out ret sub out stc and loopne nop iret in adc pop arpl xchg mov mov rorl pusha jmp lods incb adc into xlat incl sub fistpll or jno and ljmp scas cmp or daa xchg (bad) cmc es cmp (bad) fiadd sub cli adc lds in int3 lods ljmp ret lahf outsl jl mov fidivr adc ja push cmp pusha popf mov jecxz push leave sub jo fucom sub sub clc leave sub cwtl out adcl pop dec xor aam sbb add pusha mov add jg test or out aas cli scas pop or adc jle subb loope pop nop add sbb jne cmp popf mov push pop sbb mov mov push dec or in shrb push xchg pop add mov icebp aas add add imul sub mov mov mov jnp jne and adc or sub ljmp sub lcall add andl pop jb adc ss add hlt movsb lret lcall add cli enter fbld jmp fstps loopne imul adc into mov xor pop sub jnp add test cltd std push jle sub adc pop xor test mov mov jbe and push pop and aad xchg es push bound jb or dec jge xchg inc cmpsb movq cmpsl scas adc (bad) ds pop mov or arpl movsl adc ljmp cli mov or and in pop movsl pushf cmp mov push jp push (bad) adc dec mov dec cmp adc sti adc push fs cmp in js fsubrs in and int3 adc inc fisttp adc push lds cli or loopne das jp rclb loope xor inc aad pop mov hlt mov and fs ds out repnz xchg sub into sub mov in mov add jp enter push (bad) ds hlt pop pop les or sbbl rcrl clc or fcomps out fs mov xorl add pop add loopne add lock add mov sub push and push mov pop pop sbb pushf add iret aas and adc xchg loope add adc mov xchg std ja or jns pop nop mov jmp imul mov pop inc popa push loopne mov adc mov add mov scas sbb mov jns mov in dec xchg int or adc test aad call jae rclb aas sub mov xchg leave dec mov adc mov test pop inc pop int xor lock outsl add (bad) test mov jae shlb lahf test sub add dec test dec xadd push add idivl rorl ljmp push das mov decl fmuls add fimull push adc pop mov outsl sub mov fbld xchg lret dec push mov adc and into jmp sub add lods adc clc push xchg inc mov xor mov (bad) mov aam repz push int pop jg nop or adc pop jecxz inc lahf mov shr dec shl add add into mov popf clc mov jg push or sbb sub sbb sarl jae add shlb movsl ret sub or mov rcr in adc (bad) pop push std das jno sbb xor push sub mov jp pop sbb popa mov mov add mov das xor xchg xchg sub addb push bound add mov jo push test leave sub sbb lret add pop outsl pop rcr (bad) mov adc mov inc aaa dec add loope repnz icebp adc loop pop shl pusha fnop jo pop repz adc fwait dec enter jmp ljmp cmp mov xchg dec pop pop jo test jge mov and negl aas lods push inc adc mov inc clc insl jp arpl sub dec sbb xor add ds inc mov sub and jb or pop test in fistl or pop lahf push jns (bad) icebp inc dec or adc dec loop sbb mov push sbb dec xchg (bad) lods adc xor or pop inc add sub pusha cwtl fdivs das in insl xlat xchg pop shrb mov inc js in cmp enter dec or jne add test inc inc jge sub dec add add add pop imul mov mov mov js pop cs pop pop add mov add fmul sub add insl jp (bad) shl push mov add das cmpl icebp (bad) mov cmp lods cmp repz xchg (bad) (bad) mov cmpsb out or ja clc popf add add repz pushf mov or add xor add pushf inc sub mov std test dec push ja out jmp addb into ja idivl or inc stc push xchg fisubr or xchg popf cs mov cmp and mov pop les add pop push lods sbb shr add mov pusha push cmc jno mov int dec (bad) (bad) sbb out sub xor sbb (bad) and or xchg pop pushf and pop mov fwait clc jmp xchg stc jb fistp mov or add in mov andl jecxz push or fldcw call pusha add out mov scas pop cs inc in mov or dec (bad) mov imul push ljmp sub push pop cli popl add stos ret fsts sub incl in mov scas daa add adc or xchg movsb sti pop inc or cld sbb mov or das cmp push push scas jnp ss mov lea std loop aam and (bad) fdivl and add inc pop adc dec pop fstl adc cmp add ljmp inc dec xchg outsb add cmp mov (bad) cmp cld xor xor mov jge jl inc scas push ds lods outsl in push inc mov idivb pop (bad) push push sbb pop jnp cmp pop xorl mov bound out add into cli (bad) or or sbb xchg (bad) jmp dec rorb lcall push xchg jmp inc scas jp pop and out pop daa test std xor pop sub jmp or test fs negl les cmp add xor inc outsl cwtl or mov pushf xchg popf push and fiadd notb jmp dec jmp repnz pop push js fs (bad) les (bad) cmp test dec (bad) jo mov pop mov mov mov xchg test sub adc (bad) jmp pop fstl es adc xor aas imul pop insb (bad) sbb push inc in pop cltd jo push (bad) fstpt jno jmp pop rorb pop lock or aaa outsb test jno popf push ss mov jns push inc push stos xchg js in or add out outsl lcall mov jge imul mov push cwtl or jb or lods popf cs (bad) sbb movsl icebp aaa loop push pop dec not jb ret fistpll sbb or repnz lret pop dec fs add mov notb iret cmp mov loopne pop sub dec pop sub testl addr16 and sub pop xchg fcoms ja addb lock or in aas leave adc or adc scas ret js in fisubrl sub aam push xor pop or sar pop cmp shrb or or pusha sub cmp add adc pop xchg jmp jle pop sbb test stos push loope xor sbb gs aas mov sub pop jmp dec add inc out cmp (bad) negb or aaa lret mov or inc xor push stc and adc daa leave mov mov add stc jg sahf ljmp sbb cmpsb jl cmp cmc xor add rol loopne add jnp dec adc lods xor fdivrl pop js add ljmp fstl fsubr sbb arpl stc and jl add add or icebp shlb cli pop mov and in lds mov test into inc out imul fcmovu add cmp gs pusha aad dec dec mov sbb inc sub sub sub pusha add jle call add test outsl pop lock add add outsl cmpb add add jne inc xchg or xor mov pop mov cmp add adc in push mov xor and jbe mov push es xchg daa jmp or push movb jne lea rol and stos mov inc pop sub sbbb pop pop dec push sbb ret repz sbb push add add aam push add jg fistpll out adc in orb loopne sbb sbb add movsl ret mov mov subb xor push je push jae ret jns das mov lcall or jle add mov call in xchg sub pop push lods es mov mov cmp jae sbb xor sar mov or lea xor inc add jl sub dec ret pop jnp (bad) jp jns cmp jg (bad) jnp and push icebp sbb mov push and sar push sbb jl jne out pusha (bad) data16 inc cltd lret cs xchg mov add add ljmp adcb add je sbb push push std push (bad) addr16 jp add shll pop push mov (bad) add nop lret clc xor pop push sbb cmp mov je mov pop lock and mov push rcr outsl dec jg sbb xchg jecxz add icebp jp mov ret pushf mov cmpl sbb (bad) jbe cmc cmp out jge je addl stos and rcrb aad rcll mov pop pop (bad) sbb out mov add rclb xor (bad) ja ljmp std dec shr xchg popa repnz inc adc rolb scas xor add cwtl sub jbe dec je adc lods fcoml out mov mov mov push push jecxz loope pop jge jne dec push push icebp adc test mov lret in fwait pop movsl rcl mov jbe and and fstpl aad movsl stc xor pop lcall or xchg fiaddl cmp add movsl jle rorb in scas sub cli inc arpl push or cmp call pop mov popl and jp cwtl mov outsb and push add push xorb jmp lods push cli cld add and jecxz jbe rolb out xchg repz add fisubr pop mov addl nop inc or out push cs fsubrl or jge into mov add pop leave cltd push push call xor lcall (bad) mov fwait insb inc and cs imul adc add icebp adc mov add inc mov scas mov out repnz or (bad) jne add lds pop imul push add and cmp insl add add sub in dec fdivrs lods and in or (bad) jnp outsl cld xlat gs mov test push inc dec insb lret mov sub mov mov stos stc mov fsubrp arpl into imul mov or xor (bad) xor lods push push in jmp imul (bad) pop fnstcw sbb push mov push adc add gs dec int3 aam fistl mov loopne push xchg add sub mov add sbb jmp pop fldl or or pop dec add sarb cmp lret js mov xchg inc lds or xchg mov mov add sub jge sub shr (bad) mov popa pop dec push shrb lahf (bad) xchg int3 pop cli add fistp xchg not into rolb add xchg and clc pushf nop hlt jne or push pop pop rolb out in mov es pop push imul add sub (bad) leave es mov sub push test mov pushf sub or or and das add mov cmc jmp adc lds lret mov inc in jae lea mov or out cmp icebp frstor jge adc mov sti dec neg cmp ret mov inc (bad) pop sbb inc sub inc lds add lret push and repnz pop inc pop inc pop add sub enter js test cwtl xor xor fbstp adc pop dec mov adc or xor clc je sub sub mov add ret insl mov nop call xchg mov mov and imul int3 pop push push cmp sbb in lret push ljmp fimull dec jge cwtl pop adc daa jb xchg mov pop jmp mov xchg lret xchg pop loopne lock jae push sbb xor push mov daa jno hlt iret inc dec pop mov repz ja pop xor sbb sbb aad mov loope loopne cmp (bad) repz clc sub rclb dec lds insb movsb jnp fstl (bad) pop mov int lea das jl jnp imul ss pop lock fildl inc stos push jno sub pop mov inc pop xchg (bad) orl movsb movsb mov mov pop push clc push ja dec es negl mov push loopne movsb pop inc (bad) cmp cmp jmp mov pop mov pop xchg sub and fneni(8087 cs jnp scas imull or pop sarb addb imul stc cwtl call xor aas imul (bad) icebp pop fsubr push daa sub push sub adcb lahf sbb push mov testl add and outsl dec xor add movsb pop inc dec xor out xchg in jns out andb mov dec jmp pop lahf in and cmp mov mov ja movsb and jnp cs push mov insl mov and icebp inc out mov lret push mov push (bad) repnz (bad) jecxz fisub and add loop inc pushf cwtl add outsl stc (bad) jns out mov cli sub jns shrb (bad) adc and push jb push ja mov xchg xchg sbb movsb stos es pop jge fldl iret adc mov jnp mov adc xor aaa std roll pop mov aas dec jo mov cmp ficom jg add out xor mov aam pop sti pop jle insl jmp cwtl lret fs hlt or data16 daa adc dec pop rolb or insb xchg fsubp add adc mov adc popa insb sub sub xor xchg adc fs mov sub dec push xor pop cs addl (bad) push or pop nop daa inc test add mov dec jbe push rclb sbb inc add imul aas nop xor scas (bad) lock cmp dec adc aaa out mov jp and pop insb lgs push push mov sahf (bad) push sub imulb push add out mov roll scas xchg daa inc out xchg bound sarl repnz idivl push push lods sub sub mov dec lods pop add inc add sub pop arpl sub fidivr push (bad) popf mov imul jne cmp push jl push push test and lret pop jno pop rcrl xor dec lea sub fldl int3 add sbb popa jp push popf loop aas movsl cs push jle sub mov jno xor mov outsl (bad) into daa add inc fildl dec inc mov push and add push add xor jl stc pop add mov pop add xchg or dec ja pop sub cmc pop xchg mov jne jecxz and sub fcomi pushf rclb daa out cld mov in sub or cld jg ret fbstp or mov add bound clc sub xlat not pusha movb enter lahf add repnz mov insb adc pop test or ficompl and mov clc rcll cs sub ljmp and add or repnz jle outsl aaa inc pop sub inc or pop xchg outsb enter push popa ds inc jge pop enter mov mov jg pop add mov push cmc popa mov and push inc pop pop mov add add push test adc cmc add fucomip jg int orl imul xorl pop sbb cmpsb add or add add cmc inc gs pop mov or je lock (bad) dec movsb clc adc push sbb insb sub fcompl movsl popf adc fbstp and es jb push loopne mov dec jns insb mov mov ljmp cmp das jne push push mov mov into (bad) je out subb xor (bad) mov xor cli cmp aad jmp call mov pop je movsb mov push adc divb add xchg popf fstpt xchg andb push iret inc daa sbb aas mov and sbb push cmp add jge jno loopne pop mov insl inc cwtl sub cmp adc mov jne pop dec sbb gs sarl dec mov and xchg mov jo clc jg add add inc sub std pop dec cltd and cmp pushf mov test or sub and jnp mov subl add dec add insl sub ds jge sub loop pop (bad) fsubr adc pop cmpsl dec daa inc sub pop mov outsb dec addl std jp stos mov and sti lahf push rcrl int3 xchg mov jne pusha cmc push jbe inc ret add pop inc es lahf xlat loopne stos jbe dec daa in imul ret hlt jbe pop xor xchg imull jle scas adc mov sub pop mov dec and call fisttp mov sub mov xor inc outsb pop xchg not aam push repnz cmp pop sub add pop loopw and nop jo or sbb shlb ret enter out pop mov jg and mov sub out fildll mov lock and add in add cld jge add xchg imul test cli jnp or daa sbb inc sbb push and jp out out loop imul push pop dec pop and repz add pop mov jecxz (bad) std shr xorl mov bound pop ret add jge jp loopne sub add jnp xor xlat imul andb xchg pop xchg pop cmc and es dec sub push or lahf pop aam add pop pop outsl mov repz inc ja lock (bad) arpl mov add sub and aam into pop adc (bad) mov popf (bad) repz mov sbb jne cmp mov add push pop inc add fsubl pop add dec sub je fsubrs pop stc inc adc dec sub inc cs pop (bad) mov outsb mov bound pop add in out mov xor fimull mov lcall adc maxps add add outsb mov in xlat dec pop ja mull cwtl aaa push inc stos xchg dec orl adc push inc das fildll cmpsb orl or inc fldcw mov mov pop pop xchg push sbb sbb adc xor lahf fbld cmp fisubr dec jge dec int push std insl es data16 sub setge outsl sub lods in and mov inc mov dec sbb mov inc inc (bad) push push arpl mov rcrl fstpt push xchg dec (bad) xchg or xchg inc fcoms cmpsl lret mov jbe pop mov jb pop lcall in jns adc or pop pop inc mov add fidiv pop xchg mov scas or sahf jbe orl sahf (bad) call or dec in sub adc push mov fldl data16 int pusha fcmovb jp lcall mov incb sbb add jo aad xchg (bad) or xor cmp jge mov mov or ret add jg scas add push or ret pop sti cmp outsb mov xchg ret mov mov fmul or (bad) repz shll xor add xor fwait push mov push out incl out in (bad) or lods clc push xor push test push loop fsubp pushf mov cmp xchg ljmp fbstp cmp es mov loope test jg jmp ret push or rcrl aas add mov call enter push mov mov pop push outsb clc dec negl in std fist xchg pop push push out xchg mov push mov sbb pop jo jo add jne into gs jge lahf and test add cmc pop mov rorl stc jge movsl (bad) imul jge lea daa mov jecxz xchg push dec jecxz mov xor out sahf dec jbe pop or or imul out pop mov fiaddl jns lret jbe (bad) mov loopne inc cmpsl pop and dec fs add pop or imul rol mov outsb xor sub sbb push mov jl xor jge push out pop cmpb outsl insl rcrb repz mov scas das mov repnz inc mov sbb es push leave cmp xlat sbb insl stc pop lock adc lcall fdivs push xchg cltd push pop dec mov (bad) pusha xlat or int3 cmp adc pop push ficoml and out pop loope lods push jb icebp xor add aaa jnp jl adc scas daa jae (bad) rorl push clc adc add sbb aas stc cmp dec sbb rcl pop cmc cmc insb data16 pop fldcw dec enter and dec xchg inc ror cmp mov (bad) hlt push dec pop add es dec dec add xchg add xchg mov jecxz pusha pop push push int3 pop push dec pop pusha fnstenv fs or mov add xchg cmp xor mov mov or out (bad) push pop lods aaa add push out dec lahf test or pop mov push ljmp test dec pop push add pop pop jle nop (bad) aam (bad) jg fs or push mov ja add incb pop mov (bad) jmp cld inc pop pop cli push pop ficoml inc (bad) mov cmp cmp add jo lock push adc mov and add inc pop pushl cmp cmp pusha push (bad) or call dec adc int3 add call sarl or push loopne mov add in inc inc pop pop repnz mov adcb push lcall jne gs push pop mov (bad) into cmc or or sub pop push (bad) (bad) push dec push xchg pop mov pusha inc hlt lcall repz pop xchg push mov or aaa out arpl lcall pop push mov imull jne aas int3 popf call cmp cmp inc and lar (bad) aaa pop pop inc mov jns stos iret jp ret std outsb subb cmpsl dec (bad) mov mov add not add mov ja add jno pop fs mov (bad) push out outsb aas test es ljmp ja add pusha and or lock cli xor jge icebp ds inc faddp add ljmp dec faddl test repnz popa jnp (bad) idivb lahf or and sub (bad) jb addr16 (bad) jnp push push pop sub aad mov negl in cld add inc test aas les xchg mov insl scas push (bad) and jno insb mov je and ret repnz test jnp push jle lret or sub jl and pop pop push xor jns sub scas cltd loop cltd shrb mov cmp push adc mov pop outsl sub mov or and in imul xchg push stos sbb das pop cmp mov fnstcw imul cmp pop xchg loope divps stos and or mov and mov push in lods cmc adc jnp les jo ret in jmp mov adc fs imul into es jle and mov cli and cmp xchg shrb (bad) xchg mov xor xadd movsl mov jne push mov push jbe jnp aaa push push push dec in sub aas jp js (bad) pop push cmp jae jb inc (bad) out mov das fisubr mov push dec pop loope inc add fistpl xor enter mov sbb sarl jnp xchg inc push push and or sbb jp inc scas inc sbb mov bound ret xchg add das shll fdivl imul push in jg lret mov std arpl push xor pop test ss push movb sub push inc jae in aam rcl mov or cmp jbe outsl jno inc arpl inc mov push sub jne outsb bound mov roll fistp add add popa xchg pop or mov pop andb ljmp add sbb pop pop pop sub neg outsl loopne enter or repz xor sub out pop push (bad) in inc and or or mov push lret cmpsb sahf out dec jnp cmp repz rcrb sti call daa ret mov pusha les daa sub fild mov mov add mov ss cmpl out dec adc stos (bad) fistpl cmp subl jg and push lret sub mov mov rcll dec out (bad) cmp in (bad) mov or ss lock jb dec push rcrb sarl stos inc lret pop or (bad) aam orb or add aaa mov nop xchg mov and out xor pop leave jl es add add mov xor jp sub and pop pause xor subl outsl into mov or adc and add jb or enter xchg jb lods sahf mov cmp push (bad) int mov scas jns inc sbb rolb mov fnstcw dec clc sub push cmp sar test adc int3 nop push mov inc or fcmovnb xor insb xor or mov xchg movsl push mov cmp mov mov mov pop mov sub test pop add xchg mov test ja nop sbb push push movb adc sub inc (bad) pop dec cli repnz shrl cmp and or jmp and adc pop lret xchg mov sbb xor cmc fsubrs push sub shrb xchg pop xor adcb ret icebp inc ljmp mov add cli pop mov pop loop testb mov jno ret lock xchg arpl xchg sti out add jp dec jbe repz xor clc add and sub add dec mov sub scas xor mov xchg insb popf xchg or push outsl add fadd in lcall rcr mov test xor ret mov idivl ss xor sub loope std fnstsw jne jmp roll sub loopne add sbb es repnz xchg add cli dec cld or jmp sar insl popf or (bad) adc xchg push rcrb pop mov inc rcll jb pushl mov push clc and inc pop push pushl mov pop push pop addr16 test gs inc or les mov and (bad) lds (bad) repnz add (bad) out xchg add sbb ror daa pushf jmp das popa pusha repz mov mov xlat jne jle sub popa (bad) push jo adc jle jbe cwtl or sbb pop rcrl mov pushf sub pusha nop push pop mov add jle sarb inc xchg fwait xchg test add pop lret jo pop mov mov push xor or mov jo fisubl pop pop ss dec add mov push dec mov (bad) dec mov cmp xchg jnp daa arpl dec mov loopne int pop in lds xchg mov or sub mov jge je repz or or jb add add test and add sti or or cmc jb jmp sarl out or (bad) imulb imul enter sbb mov inc xor lds daa xor add cmp jne jbe jmp fdiv cltd cs in adc stos arpl or cwtl mov rorb aas mov xor adcl sub add push adc cmpl inc stc mov mov dec push mov shrl xchg stos and adc jae push or imul and les in cmp es and push jp jle lea aaa hlt mov push aas or push bound cmp or pop pop or je pop sub xorl movsl popf pusha mov lahf ljmp mov rclb dec sub cmp inc out and int sub fwait in add jmp mov scas sti pop mov dec (bad) lret push pusha push cmpl shrb aas add cmc (bad) dec jno sub inc repz push addr16 les leave jno test fwait mov jle das and push cld pop cs cmpsl scas xchg pop jg pop adc sbb fstpl inc lods or cld jl movlps or rorb jge or jecxz xchg pop add (bad) and popf dec outsl pop btrl (bad) xor in jae test and mov pop cmc pop push xchg inc push mov fimul pushl sub inc or call rcr mov sub cwtl lea or push add int data16 pop fisubrl inc or adc divl pop push xor out das les cmp adc jae std pop inc lahf je clc (bad) cmp lret mov add xor jnp inc mov cltd sbb rcll jo (bad) dec les cmp fimul lock add inc jbe sbb (bad) ss addr16 lods adc jg mov mov add mov jbe das into or push and adc pop push test or adc les lods pusha pop and cli push dec push cld imul inc sbb mov popf (bad) sti idivb negl or xor in gs pop cld bound in jg pop andb mov lods adc push movsb mov inc push mov ret data16 daa mov jp or mov push mov and daa mov cmpsb aas add mov inc lahf rclb mov pop test subl jecxz add mov push cld movsb mov jb cmp sti and rol xor je addl cmp dec roll sbb roll dec addb test inc push sub fiaddl cmp pop mov pop test push leave jg cld out pop add adcl dec flds mov or add mov mov ret leave rcrl jb lods jb push cmpsl in and cmp stc pop or xchg and out xor (bad) xchg rcrl (bad) mov push add xchg in repz xchg outsl adc lret push pop mov cvttps2pi shrb addr16 sbb mov mov orw sti (bad) clc mov lret pop jecxz leave jmp pop movsb or push dec sub xor in mov (bad) or sub jp push sub (bad) sbb cli mov mov fistl ret test mov pop pop fs inc shll pop dec in ja ret or mov jge and cmp adc xchg js scas adc cld outsb aaa push mov mov sub jge popf cld sub nop das add mov cmpsl lods loope loop lret jbe (bad) popf aad and lods xor fwait mov jns,pt ljmp dec and in inc les je or (bad) pop sub pop in test inc add push push mov jnp mov mov or mov sub or pop add rol lods ret fildl xchg dec outsl pop aaa shlb fidivrl add in dec ret and mov add jg push mov lds (bad) inc xor jp scas and mov jbe es lds es mov push hlt jnp cmp push jae push sub adcl cmc jp in add jnp dec or push les cmp pop (bad) push std or pop push push fs push addr16 das flds gs mov add sarb mov jb stos (bad) cmp add sti andb push add into pop push ljmp cld add dec sbb (bad) cmpps jno imul or mov ss mov mov pop repnz xor rcll repnz (bad) push rol imul or sbb movb data16 cmp or fsubrs inc ja sub add push jnp pop push push push mov dec push in addr16 mov and pushf movsb test sbb pushf jb push ja outsl cmp push mov out push in (bad) mov repnz (bad) add fidivl mov js push test addr16 push sub pop mov scas sbb sub mov (bad) ss outsl cmc jnp testl mov dec dec xchg sub repnz sbbl dec adc inc lret iret mov add jg pop test cmp pop cmc (bad) andb pop pop cmp pop test dec mov xchg xor loop pop notb sub js xor je movsl cltd outsb fnstenv inc jg popa mov out xor pop inc imul dec cwtl (bad) fmuls vphaddbd or rcrb mov cmp ja and enter mov mov arpl jne ljmp cmp jbe les (bad) pop lock ljmp mov jl add sbb not in cli sbb add push mov outsb jmp or es ret or xchg subb push decb pop jbe out loopne popf rcrb (bad) fs push lods lret or xor add fidivr xchg xchg daa adcl xchg negl or in cmp jnp roll not movsl or popa mov pop aaa mov nop mov or push or add arpl or mov mov mov or aam dec adc movsl scas cs jl das inc xchg cwtl jle jnp or hlt ret jns pushf inc cmpsb adc sub pop dec jae (bad) push push (bad) fxch (bad) sub xchg jno mov subl xchg out or jecxz sbb mov add xchg icebp sub mov das inc mov or (bad) xor fldcw inc in clc jg aam lds mov sar daa stos jle mov cld sbb add push mov (bad) cmc pop int3 or leave fist fistpll mov nop mov jmp clc push popf cmp xor adc inc dec adc mov mov aas mov sub lret pop pop sahf mov jae mov mov (bad) push pop dec jbe loope add subb in push cmp sub pop dec cmp and pop (bad) or push xchg mov rolb sub add push nop icebp cmpsl leave in pop popf sti jno mov in mov dec shrl mov pop int (bad) adc push add mov ret mov dec mov dec les aam out jbe subl enter jp adc cmp xchg bound and imulb ret aam xor fwait or sub xchg add dec adcb mov outsl loop jmp lcall incb mov or or and push or mov and mov lret loop fstps xchg and add dec andl sbb inc stc fwait and xor and sbb xlat mov sub imul (bad) out adc jg decl adc pop jb ds xchg scas mov divl mov fildl (bad) pop push xor dec pop adc inc popa daa mov or sub pop push add add (bad) pop insl dec jns in mov or sbb aam inc shr add imul cwtl lock pop pop pop push lahf add mov shlb inc insl jmp ja xor xchg xchg or dec imul pop add (bad) push lret push push je insb nop (bad) or jmpw scas fsubl addr16 hlt xlat and clc (bad) daa outsb outsl pop sbb int mov or cmc pusha leave or sub sub dec push int hlt inc cmpsl sub cli (bad) jne dec sub push jb adc add sub adc in sbb or adc lret dec pop cwtl cmc xlat push pop fbld rcrl cld adc movsb sbb lret daa or aas pop push ja mov mov bound imul push fwait mov cli sub hlt xchg add loopne mov loopne daa pop pop mov mov jno dec or fcompl inc ljmp push mov pop out insb fwait sbb and mov xorb insl outsl out add adc dec sub cmp or loopne pop jp xchg or or mov mov rorl scas popa clc outsl sbb sub fsubr jle lods pushf rorb mov pusha stos push es jecxz adc in mov out cwtl cmp loope and xchg lods push xchg pusha xlat jge dec xchg icebp leave fs mov ss dec inc aas addr16 add cld js in das fsubr push add call cs in pop sbb xor bnd jp negl cmp daa or jnp jb pop push pshufw enter inc xchg loope in add pop fsubl into aad pop sub cld jg add test ret outsb xlat pop mov rorb pop lcall rorb inc xor jb pushl push xor push push addr16 mov fdivp bound add pop and and pusha jmp mov rorb imul aam and inc pop and je sti push push clc push jbe push outsl roll pop leave aas inc cltd stos adc jle aad mov fild adc inc sub orl shrl push icebp popa add jae sub push sarl ret pusha dec (bad) lock pop cs sub and cs mov lods in sbb in jg or aad push cld mov scas cli xchg add shll in jne or test outsb rolb pop in adc mov insb mov jmp jle shl int3 std ja negl and or cwtl pop push inc and pop test fcoml out push xchg mov jbe sub push mov pop in adc sbb xorl out clc mov dec jp inc cli xor dec test add movsl mov lods clc cmpsl cmpsl push jge fldl (bad) jae inc sbb fdivrs fimull push hlt (bad) ja sub dec divl inc adc ja das loope xchg rcll xchg sbb push cmpb in jbe pop jno dec and sbb or xchg fisubr pop jmp (bad) cmp cld lds cli ret jns (bad) xor adc (bad) pusha xor and testl stos add jp out adc add es xor fcoml cld pop add and push jmp adc in sbb inc fiadd inc mov repnz test inc fisubrl orl lods in loop adc or sub mull mov jge cmp lds (bad) adc std (bad) dec mov mov mov push cld movsl lret mov inc and jle (bad) sub scas fnstcw inc mov bound mov xchg xchg es mov negl jle sub ret fdivr insl rcr pop (bad) jge add bound lahf les xor push insb push jl loopne outsb test mov and fnop fcoml mov sbb lret ja inc push daa xchg xchg pushf or push xchg pop pop fidiv inc push loope jbe loop pusha xor or and xorl push or movsb rcll mov xlat mov arpl cmc or add xchg in repz sbb andb (bad) push insl sub push arpl nop inc fmul (bad) (bad) and pop aas divl sbb cld push inc mov inc xor outsl mov enter push sti jp daa aam addr16 mov outsl stos nop inc (bad) rcl or xchg mov xchg or dec and xor xchg cltd cmp ljmp jl add inc sub xor call out add mov ja adc stc inc stos dec lods lahf xchg fldcw cmpsb scas pop out popa mov aas add ljmp push lcall mov push in fiadd leave mov mov (bad) shlb sub loopne xchg ds adc test (bad) and outsl in lret or sub sbb sbb add pop pop sub xchg lock add push test cmp push push mov sub push enter push or inc inc sub bound ficoml dec or cmpsl jg mov repz test dec mov gs push mov pop imul imul push fs mov cwtl aaa push add in sarb pop lock inc jmp add sub ret and dec repnz sbb push jp loop in cmp stos pusha aad xchg lods aaa mov push dec out mov int3 clc aaa or xchg fnstcw test mov call sbb mov adcl out jle and add adc push pop push movsb mov lcall inc in and or test jecxz int adc lea dec fnsave popf fdiv sbb incl push inc jne movsb movsl repnz pop ss sbb jns shrb or sub in mov xchg not push rolb aas xchg loop pop adc fcoml loopne or (bad) test dec arpl bound add inc aaa (bad) ljmp mov (bad) dec in sub pop sti sub mov lds loopne sub adc cmpsb jg aas (bad) sub xchg sub add jle jo push sub cmp imull stos dec inc xchg mov enter jbe xchg adc add xor pop (bad) xchg (bad) outsl or test dec pop jecxz add mov decl inc jl dec mov push mov fildll data16 pop mov sti inc inc sbb (bad) add dec (bad) mov xor repz xchg cmc aaa mov mov add push mov stc pop xor add add jp mov mov jl (bad) pushf aaa adc sub dec stos inc je push pop push adc gs mov or scas mov dec adc pop mov imul test dec nop push pop dec jle push xor or cmp mov mov test ds push adcl or std jnp pop add sti negl jl dec push fldl adc jnp das cmp fdivrp fild adc pop xor cmp rorl fisttpll add (bad) or and popf push adc sbb mov dec pop push fxch or mov and int3 xlat dec cs aas jns ds xchg push dec insb sbb and inc mov jno push mov mov xchg lods (bad) pop lods sub imul pop or out and rorl mov mov push pop or pop and rorb and negl cwtl add sub pop fs sarl inc inc xor cld stos fsubrs mov jnp jle cmpsb repz add push clc dec add dec sti jge out pop mov (bad) aam mov lahf (bad) or pushf fistpl jb rcrl mov push cmp (bad) jmp hlt push push xchg jns sbb mov (bad) outsl cmp mov or sahf sbbl mov sub push add jno jecxz shl imul xchg inc sahf das cmp popa push add pop push sbb mov pop mov mov dec sbb test test idivl or xorb andl jae hlt jno jg les imul pop movsl (bad) test lret jge cmp je mov insl rcrb pop mov push pop jg,pt into icebp std add xor push push pop shll push add mov decb jg,pn or leave or insl icebp fdiv or mov dec out xor pop sub je and or iret sub jnp mov cli add out test pop sub push adc xor clc adc add sbb jnp push cmp rcrl shrb dec inc pop or adc (bad) and xchg fstl and loope mov push daa jl xchg mov or pop mov cs mov or push ja shr inc mov jnp cmpsb add sbb dec enter pop clc dec mov das out ja mov jl xchg add (bad) dec das and hlt loop leave jge lahf jp mov fs sub sub jmp jnp out push jl rol or push lds jns cmpsb fistpll inc xor mov (bad) xlat jne push dec or push idivl cmp add push rcrb fdivrs add fistp scas lret xor pop push push push jl dec jmp into loop (bad) sbb dec xchg xlat out pop arpl daa lea ret pop insb outsb (bad) and mov lcall pusha sub adc ret dec mov aad (bad) stos int pop icebp and push cmpb test push aaa adc pop dec mov push out in pushf mov int push inc scas sub rorb insl inc or (bad) dec cmc in mov jg push lret mov ds aas or pop lahf shll test push pop (bad) push faddl cmpsb lahf pop pop frstor enter test sarl int and movq outsl dec mov sub out jmp mov popa sti xor mov scas add add mov fs add das sub gs cmpsl sar popf addr16 movsl jns inc push push jl mov add test (bad) jg cmp faddl fdiv jp mov out out stc dec arpl sub rcrb jns xchg inc rcl repz fistpll or push and in std jle cld pop lahf dec inc dec stc loop sbb or loop push (bad) out mov cli pop xor inc roll jmp add xor adc les cmpsl ja and add mov mov and or psllw movsl (bad) dec mov js jp fisub jno add out xchg repnz pop jae jbe add pop mov nop inc xor cmp fist mov xor ljmp fdivs ret addr16 enter aas out adc or and add das mov pcmpeqw jns xorl imul pusha aad mov ret ja mov pop inc inc dec loopne das popa xchg lea inc fsubp xor xor jne push aas xor pushf xchg test ss pop or add push pop rorb cmp jnp inc addl xor sbb cs sbb cmp xchg mov lods push mov pop std mov mov and and sbb adc pusha das sbb pop inc cld ljmp and pop mov push push (bad) (bad) sbb repnz sbb pop fstpl lret xor add ds pop fs out in cmpsl sbb pushf mov dec nop (bad) mov or andl shlb cli mov push (bad) call negl add push add add fwait lret loopne fisttpll mov jne adc loopne push add sbb sti jbe mov aad push cmp fcmovb imul ljmp pop jno push add xchg dec mov out ljmp jb sub decl xchg sub xchg repnz pop out add xchg jl lock push jge add nop leave lcall push pop xchg jge mov aam andl or adc xchg sub mov cmp out mov xchg add (bad) xchg loopne fcoml jne lea outsb in or jl jbe push cmpsb adc fistp cmpsl add mov cs mov inc inc jl lcall cld scas fmuls test push je or (bad) xchg aad mov sbb fwait ret iret mov jno mov inc loopne loope (bad) jne fldcw or sbb adc (bad) mov (bad) push push xlat or push out inc movsbl mov pop xchg or push loope movsb xorl jnp add add mov test dec dec sub fxch ret outsb rorb shlb or hlt out cmp or push and xor mov rorb push sub popf push and aaa adc sbb out mov jns pop xlat dec jp or mov sbb frstor ror lret add sbb cld jg out das xor xor or xchg mov ds in sahf in cmp pop insl lret cmp adc (bad) jnp call pop dec xchg in (bad) sub dec pop inc js pushf cmp (bad) test imul mov enter stc dec xor or add jecxz jmp into data16 sub ja (bad) xlat jge cmpsb sub cmpb sahf notb push pop pop call hlt (bad) xor xchg es lret jae pop gs push repz fisubl stos mov inc je mov movsl test fsts add (bad) outsl mov dec add sub jg cs notl add cmp push xor je add mov out lret jle dec rcrl cs negl cmc sbb repz mov lock addr16 fimull adc ds clc outsl (bad) push add push (bad) daa lea sbb cs mov sub cltd and mov mov lret sub fsts jmp xor ja into movsb stos cmpb in push das scas jae or sub das jg inc mov call pushf mov rcrl dec add neg push orl pop jmp inc xor mov lcall test dec fsubrs cmp mov mov daa pop js jo pop push cmp pusha dec mov aas mov and mov add xchg bound gs dec cmpsl add inc popf pop (bad) insl mov add pop repz cmpsb imul (bad) ja xlat test pop cmp xchg cmp add sub popl adc pop dec jne xchg daa and pop pop xchg add mov jl mov sahf push data16 mov push or or enter jnp pop out sbb popa cmp imul jl lret out test cld xchg mov outsl sarb daa out dec xor enter pop mulb pop inc adc xlat push das add sub sub dec test adc xchg fmulp push adc pop mov mov xchg movsl or (bad) cli pop pop popf pusha sub pop pop add cs jbe rcrb inc xor sub cmp mov daa mov insl jmp push jnp (bad) imul lods pop hlt roll sti outsb cmp dec sbb push mov and sub or mov mov pop mov testb sbb scas push cs je int (bad) addr16 push xchg movsl push and fsubl dec or adc mov push in pop jecxz sarl cli and jg les data16 mov mov cmpsb loop cld inc and fcmovne add movl data16 aad xchg xor xchg dec js ficompl cmp add (bad) dec inc mov pop movsl and jns dec jg insl push rcl cld jbe fwait lret push pop lods sbb mov (bad) ret sbb inc fimull jbe dec mov sub test out inc xchg (bad) xor (bad) cld mov movsl push or mov mov xor or std and orl sbb push fnsave push pop mov mov divb or cmp push pop push std ret sarl movsb lahf cmp jp mov inc pop scas adc clc (bad) hlt stos xchg adc mov mov xor and std neg daa sbb hlt sub pop das mov addr16 push pop xor mov xor shrb fsts nop icebp or lds dec xchg jle out jecxz or pushl push jge lock fmul (bad) stos xor jp mov mov add rolb shll mov xlat (bad) fsubp jbe push das fstpl sti ret inc or pop sub loopne iret pop add inc mov (bad) mov (bad) pop ja cmp xor cmp mov into jne mov adc call or adc loope daa outsl xchg push adc pop jmp push pop pop clc (bad) div js and fbstp lods repnz mov inc pop cltd imull dec push pop into push mov jnp push (bad) outsl lea loop les and sbb sbb ret mov ljmp xchg jno,pn ds fsubr mov pop dec pop popa iret ljmp sbb lcall (bad) inc or sbb test scas adc icebp das jle repnz adc adc in shll jno fmulp inc add cli cwtl push shl pop pop lds or jo push ja fimul mov dec mov inc add xchg stc mov and mov pop repz and push push repz inc movsl pushf xchg jb outsb add aaa lret and les and cmp dec mov push mov negb cmp outsl mov mov pop jle push cmp dec push in xor pop daa push jae out mov out mov or xchg adc sub xlat daa cmp push xor cli out adc add or jge (bad) dec sahf repnz xchg (bad) shlb jbe (bad) push sub pop inc and cmpsl stos jne nop or pop adc and and xchg pop jmp lods sub mov hlt fdiv inc pop lods rolb push and xchg pop stos inc adc jl inc cmp add xchg cmpsb adc iret push mov cs xor cli dec mov mov or xor pusha in mov call ss xor push (bad) pop aas push xchg xchg cwtl sub add adc mov jmp mov hlt push push jmp mov add movsb cmp mov xchg adc push sub scas into ret sub mov cmp leave xchg test (bad) ljmp inc pop and push out outsl mov ficomp out adc pop sbb jg pop mov push popf jae dec dec mov cltd push add pop out xchg sub or dec mov inc insb sub les xor rorb mov xor add popl fildl fdivs (bad) push out sbbb push pop lahf add adc (bad) jb mov mov adc inc jae dec lock and lret xchg loop dec mov ja mov jp fcmovne push or sbb lods adc aam jnp hlt sub fildl jne adc lods rol dec (bad) xchg add push (bad) push pop xor ljmp pop or cmc mov jae inc cli adc es (bad) cmp pusha clc inc pop rclb xlat inc mov jns mov lcall mov or sbb mov jno enter jns aad dec fist pop pop pop insb mov scas or cltd jns rcrb push mov aas xor stc sub or xchg push adcb sti dec adcb push mov fdivrs sub cmp add pop xor lods shrb stc or fcomi jae ja fildll pushf jns jne pop pop mov popa xchg mov shrb imul outsb push xchg sti jnp fwait add jae cmp cli outsb pop ror pop adc mov push adc dec xchg pop push (bad) mov xlat lahf sbb adc adc test adc mov fiadd shl aas push rorl xor sub xor mov pop jmp add lds call adc shl adc lahf push in and jbe mov test pusha sub inc push xchg fstpt sbb cmc xor adc push fsubrp stos push popa in or or stos sub mov adc pop mov imul (bad) pop inc push dec adcl sbb icebp pop or imul mov dec sarb pop xchg rolb sbb ljmp add mov fchs std outsl add rcr xchg or and pop andl fisttpl push mov add jmp lret fsts adc fs icebp test pop jbe or fcomps fisttp xor sbb or adc and fsubr call and mov jg push or jns insl mov imul add out mov xchg les push outsl imul and rorb ja test add scas je xchg int3 in sub push sub bound push push shll or jno add push adc jmp ret jno mov pusha sub jp mov sub jns adc mov mov movl pop xor push adc jb mov push cli addr16 scas pushf aam pop das (bad) pop lods hlt dec rorl (bad) cmp add pop insl jg mov popf or push xchg or outsb push daa xchg lods bound hlt into dec sub adc mov adc ja and pop nop sarb xorl and dec cmp lods subl repnz pop xchg jle adc das push das pop icebp rorl xor notb push scas imul ja mov ja enter add jnp dec test test dec in call push mov fdivr sbb outsb xchg cmpsb add push rolb jnp jg adc sub popf pop and jae ljmp xchg call push xor or jne adc xor xor mov inc movsl mov sahf call lock mov rcrl push jg xor ja sub mov jge pop popf mov push sub cmc nop add mov in jo or test test or pushf sti insl ja cld mov (bad) jle jns ljmp sub adc cmp jl mov add push xchg (bad) icebp cmpsl jo push sbb dec jg mov test popf enter das pop out push orb jbe mov in and push ret hlt (bad) fisttp roll (bad) adc (bad) aaa adc loope cmp pop xor dec lret test fldt pop push adc stos mov mov bound push iret pusha xchg sub jo or inc mov in (bad) mov std pop popf ljmp mov xbegin scas sbbb mov sub and daa loopne sub mov pushw dec (bad) repz add jle das in pop mov arpl lret nop cwtl or dec jmp pop data16 mov ficom sbb std cmp scas leave xchg and push jg pop jg push pop inc add xor outsl scas mov shl pop sub stc stos add loopne insl invlpg ds and outsl add leave idivl mov int3 imul pop and dec jp add add xor push rolb add sub inc add cld clc pop cmp inc int movsb bound jp aaa and test add cld mov push ljmp adc sbbl push pop cli rorb xor ja insl adc notl jle sub and dec sbb jg or in icebp jge sub xor outsb fs push lcall (bad) mov pop int scas cmp movsl ds push subb cli mov jb jmp lcall cli inc add xchg inc mov jmp (bad) ljmp push push cltd enter insl je lds jp jno mov jmp minps sub add repz dec pop inc mov test movsb dec dec in clc rclb push mov jg ljmp js mov cmp pop fisub or test jo iret push or xchg push gs mov adc xor mov pop out cmpsb sbb push push or dec sub push jbe pop pop push push sub jmp stc dec push loope lods movsb dec imul rcll add dec clc das arpl rcrb push sub mov push imul jb mov jle scas pop scas jb loop ja out sbb in lea jae add mov mov and push jnp pop add lret repnz (bad) out cs inc fdivrs faddp test sbb fcompl jp loop or adc enter outsl add cmp mov and sub (bad) mov sbb mov lds sbb shr out nop roll mov push fbld test pop mov inc frstor js fwait xchg pop mov loope (bad) and jl xor repz mov rcrl std dec xchg (bad) xlat push inc lret xor mov movhlps popf daa sub pop imul jl gs stos fucom add fidivl hlt xchg (bad) loop pop or pop pop imul adc dec jns mov sti adc fimull (bad) ds jecxz sbb call in xchg cmpsb adc push sti and jae rcrb xor adc (bad) mov (bad) aaa and push xor pop mov iret lcall mov cmp fbstp pop cld in xchg mov sbb sbb cmpsl cltd jbe mov fwait adc stos mov (bad) inc sbb aas repz mov mov inc adc fdivrs mov pusha mov adc jnp sub rorb pop push cmp loopne aas sub push push xchg pop sub xchg push rorb push pop clc mov add or ret (bad) cli dec (bad) mov pushf jb xor or idivb std scas mov jg (bad) jne add xorb add sub jp repz adcb pop add hlt mov jbe and dec cmp (bad) pop mov mov sbb pop xchg fs push gs mov jns pop mov jno (bad) ja jg fcmovb loop inc sub push cs sub jp push mov add inc push or pop sub pop xor pusha shrl out pop call subb lret inc in cmp jno sub add imul or adc adc xor je push inc iret icebp inc jg pop add in adc subb sub jns add mov fwait out insl mov jp or sar xor cli (bad) cmp mov mov lock mov jns pop push and push pop mov bound jg repnz scas jbe out xchg hlt jnp fcomps sbb mov out shrb and stc and push int3 movl xor iret xchg loope test leave or push mov pop sub dec imul push ss jge icebp pusha sub in dec sar stc jle add iret adc xlat mov ret pop shll cs and ss sti xor ja add sub rcrl daa mov addr16 mov mov pop jg enter test stos pusha test lret out sbb mov push push loopne xor pop cmc pop mov stos sbb test jge dec daa (bad) sub xchg cmc xchg xchg jnp push jle and daa ficomp movsl lret test pushl jg or push sarb inc jo dec sub and or push jg add and mov pop jnp push outsl fwait mov stos ret std push fadd dec sbb add pushl push xchg (bad) xchg sub addl push adc pop mov xchg loopne mov jae add leave int3 xchg xlat pop imul pop mov (bad) dec test dec in adc fsts les add sub mov arpl xor xchg test pop (bad) inc and pop call cmc stos and dec (bad) mov and or jge mov pusha int3 pop mov rorl aam jle subl adc lds nop push jg out aaa sub or push xchg mov push hlt lea add adc fistpll or xchg cmpsb mov jae es test mov sbb leave imul or cmp or movsb push pushf add lods ja popf sbb pop sbb insl adcb repz dec jg out bound cltd pop and inc clc es insl notb push out cmp (bad) jnp into aam fistl and aas rolb (bad) jo orb out out das test or mov das jns mov out mov pop xchg ds outsl adc icebp aas loop,pn (bad) stos sub std add mov add roll or insb add jns call xchg sbb xor sub xchg shrb pop inc add push add pop mov sub push shlb test in add hlt push in inc push int3 daa push sub push mov jle push (bad) add mov call les dec pushf mov daa (bad) and fs inc daa or jns or xor xchg imul (bad) jge pop pop sub mov xor sub and dec or es push daa (bad) xor mov inc loop test inc mov push add fcoml jp dec mov cmp pop aad scas test xor push push sub (bad) mov test dec dec popa mov mov lret jp inc pop pop pop out iret mov rcr out fdivrs dec sarl pop icebp fistpll add test loope fld cs rcll cmpsl icebp das aas icebp mov add pop aas mov jmp mov xchg stos adc scas lret push enter decl (bad) xor into data16 pop inc and fsts sbb fistpll es and xlat gs ljmp pusha mov jmp push dec sub (bad) cmp mov out cli mov xor xchg adc (bad) sbb fbld add loop (bad) push jo sub and loopne xchg xchg dec mov je fs nop mov add pop bound loopne or jp or mov xchg stos addb lahf add and jp push in sub dec and jne daa mov xor pusha cwtl das fldcw jmp sbb mov int ficoml orl sbb insb jae push stos xchg stos bound lret ljmp (bad) sub dec scas inc adc orl push jle aaa add cmp imul lds xchg mov mov cli sbb or cmp ret stos out lret pop pop dec add push or pop inc sbb nop push push mov fldt pop in sub jle test sbb add test add push xchg push sub pop scas popf jle mov xchg movsb dec sub jg add jns sub dec pop jo add das mov and cld adc (bad) aas cli push rorb mov in out jno xchg clc std pusha ljmp shr cmp dec cmp jmp int3 clc add movsl rcl jmp andb (bad) dec aad mov bound out add jl jns cmc (bad) or imul sub mov inc stos add push aas sub in and lods xchg (bad) and push adc iret fisubr push lret jns leave rorb and or jl dec add bound pop cmp lods add (bad) call xor rcl out add push pop cmp pop cmc and add call cmpsb jmp xor outsb les sbb jne or mov jno jnp stos enter shll pop pop add loop into adc mov push mull xchg add pop or bound std jl test or jae add mov mov add icebp push imul in push or pusha inc add jno clc jg cltd push mov mov xor or lret movsb movsl jmp xchg idiv dec inc or in add pop mov inc (bad) pop push cltd movsb add mov les and or pop push xchg imul push pop jecxz xchg mov add cwtl mov add pop cmp or and xor scas jb psubq out sub rcr dec lock mov (bad) and add dec cmp (bad) js lock jle ljmp dec fwait sub adc sbb jno push (bad) jo adc fnsave ds pop xlat jbe add stc test cmc push fnstenv js mov add jno jb dec nop scas aam popa push jmp or sub rcr jle add mov pop shrb arpl aaa jmp jne subb test add (bad) popf data16 test push mov and push lds pop aas roll shrl stos pop push xor mov mov fsubl cmp adc icebp cmp les xchg add push test stc scas xorl (bad) sub mov in rorl addb loope dec clc cmp push arpl jno in test pop xor dec add (bad) outsl push adc das mov mov add dec iret jg int3 add mov arpl or int xchg and pop jnp pop xchg not xor or and push rorb sub add int3 sub push add bound xor inc sahf cmp sbb push lods mulb jecxz adc in int sub fistpl inc scas in jne cmp subl or incl jb add fnstsw add adc pusha popf call and add out out mov out push push jb mov loope xchg push lret movsl pop mov or pop or and jle das cwtl int3 out ljmp mov and clc lods xor pop lock les mov mov (bad) mov popa (bad) cmp push (bad) lock ljmp mov rclb hlt faddp add push mov imul rcrl jns or (bad) inc shrb sub pop and mov push outsl sbb lods pop (bad) movsl outsl inc out mov or pop jge pushf mov pop aam add fdivrs int data16 imul push and sub pop popa es cmpsb jp adc loop push xchg sti icebp push mov push jbe mov aas mov inc mov push add lds imul sbb xlat push push mov out pop sahf ficompl xchg jmp jg lods inc subb inc jg mov out mov mov dec inc mov ljmp or mov and pop ret push cmp pop cld adc insb jle mov loop (bad) mov out xor add test jnp sbb inc les in cld lods cmp imul mov mov das sub jmp shl add push sub mov inc pop into mov lret add arpl pop pop sub xchg pop jb pop loope clc push gs ljmp push ja sbb and jg mov jo addr16 addr16 sub and aaa inc or pop mov or fwait imul call adc and aad xchg lods roll or cld loopne ljmp cmp fist sub std out add pusha pop incl sub into cmp fisub test popf hlt rolb xchg dec add pop and pop add mov stos and repz rolb push imul jg out dec or scas clc mov sbb inc cmp pop and ret mov mov push pop dec add mov xor sub mov lret aas das outsl fmuls dec push ljmp mov lcall mov cmpsb sbb lea push pop pop mov cmpsl movsb divb addl jnp aaa xor inc stos ret gs lcall push push push fsts popf je jp adc mov and fwait inc dec add mov (bad) xchg or mov sti das imul jg mov sub mov push orl jl rorb dec fucomip inc ja icebp (bad) sub push std call xchg aam mov std in adc jmp jg repnz out jns fstl pop sbb (bad) outsl fdiv (bad) not xor cmp jl mov fdivr shrb (bad) dec fisttpl idivl jg pop push inc or xchg adc or fidivr fwait jo sub push sub rcrb aas aam push pop mov test adc cmp push adc shrb ficom pop dec mul jmp xor addr16 je pop pop sub test fdiv jge sub loope std outsl (bad) hlt mov push and hlt or sub icebp and fmul pop pop mov adc or ret les mov (bad) jmp push (bad) fnstsw pop push push xchg adc (bad) imul jg xchg je dec add popf pop adc inc mov xchg mov test inc xchg xor (bad) add xor sbb mov leave (bad) fistpll mov int mov out cli or stc mov jo pop fcomps jge jns insb add (bad) xchg pop xor notl test adc pop mov repnz mov and pop pop mov mov mov outsb enter xor and jae add mov pop dec xor test rcr inc add (bad) mov or pop mov inc add push hlt ljmp bound push call jnp or pop and je push and mov popf mov push repz or ret cli and loop aad xchg inc into lds movq test jbe or sbb push push mov and int3 ficomp push sbb mov imul push mov loope in mov inc mov add jo push push mov jb push push push pop dec iret xchg sbb sub inc jmp or xchg dec dec psadbw pop out dec aaa add popa cs idiv pop push jle inc cltd push psubw mov or jmp add adc testb xor lds rolb mov xchg xor sub mov int and cmp fs push in jmp sbb mov pop mov lods fistpll popf xchg fiaddl cmp subl fidivl push add sbb xchg jmp jp clc pop out mov sti aam ljmp inc daa lcall lret icebp dec out sub decl or (bad) jne and or dec fsubrs sub jp sbb adc push and cmp jl and lahf arpl mov (bad) (bad) or adc lcall loop xlat mov adc in mov inc add test jp int3 push or (bad) inc scas jg outsl enter xor sub repnz ss lret dec and add (bad) stos lcall in jbe stos cld pop fxch add cmp imul push pop loopne xchg xor xlat adc sahf insl xor cmc push add pop pop not xchg sub jmp cmpsb xchg cmp movsl mov movsl (bad) pop ja xlat (bad) mov sbb mov pop pop in jo add xor dec push add lahf ret scas repz mov fs ror inc ret xlat xor push push je pop stc xchg xchg test mov fs jmp fwait pop scas and daa xor dec jae nop or add mov pop idivb inc inc shr jp call pop xchg jle clc push push sarl cmp sub pop jbe adc adc add inc idivb xchg scas adc xchg mov loop stos dec dec inc idivb int3 push push add out pop scas cmpsb out ljmp out dec sub movsl int3 add sub jo or dec jle push and sub pop pop cmp add popa mov js add int negb scas xor inc or add repz sub aas adc pop ds xchg fmuls daa mov sub cmp dec pop lods divl dec test orb ret (bad) aam pop shrb addb sbb (bad) dec cmp inc dec and mov dec jae sub notl mov imul pop cmp adc aaa int3 mov daa insl aam scas jbe jbe mov ret push outsl (bad) jle in add add and and popf xchg outsb cmpb (bad) xchg pusha jbe insl das mov cld and das push add addr16 addl fsubrl xor adc push push add pop push mov cs adc loopne ss jl das fdivr add or fwait pop ja xor sbb xchg or adcb cld shlb and (bad) xor inc or push pop sbbb push daa daa add ficompl mov jp dec mov call movsl mov lods pushf inc mov rcrb in mov sub ja lods mov ja xchg mov aas add adc adc dec std pusha pop fucomp pop test push enter fdiv jg (bad) call std and (bad) ret add das mov stos jb push push pop xor mov pop or outsl pop hlt fcoms jecxz cli outsl call and (bad) adc fdivr push sbb pop bound push jge dec push lcall and js jecxz fimull aaa jg int3 call sub fstpt jp cli lret mov sub leave stos (bad) hlt jg shll or fcoml fiaddl cmp pop (bad) push fild and sbb cltd fwait imul sub icebp cmpsb sbb dec test xor mov fnstcw push mov add xor daa push pop push push dec mov fs push (bad) cmp jl (bad) js in sub or sarl lods pop in cmpsb pop mov imul mov orb mov fbstp mov pop inc cmp push push sti and rcrl pop push icebp jle jo inc cmp out imul sahf repz pop or ss or inc test sbb dec xor dec in sarl add (bad) repz push fwait das scas mov in or scas xor mov lock mov mov (bad) dec int3 sbb add sub sti mov mov and mov outsl lock stos xor jg and mov xor das scas sub add xchg sbb mov pusha (bad) lret push adc xor adcl or in xor inc dec push pop add dec rcrl mov or outsl jge test pop lds imul mov shlb out ss cmc or push fldenv xor (bad) pop cwtl fsubp test cmp mov push in cmp repnz mov shl (bad) int3 iret jle sub xchg lods cli xor or jp sbb or pop sub cltd das outsb movsl pop and mov cmp rorb mov inc and aaa jo jle mov andb or mov mov push adc mov mov pop sub push mov mov repz scas (bad) bound sub mov mov dec call mov dec sti rcrb int3 add out jae or xchg lods mov push sar (bad) dec xchg push fcomi ds jne and nop popf clc enter add idivb cmpsl sub arpl jbe jl add (bad) decl sahf call add dec mov iret sub cmc sbb sbb adc add and inc add cwtl pop xchg in cmp cmc or outsl jg data16 in and mov ret or mov popf in mov adc push repz ds push leave push or dec mov add jg sbb mov inc mov js mov repnz jb jge sub xchg test pop mov sar iret jp pop pop sahf push pushl stc cld sbb mov or jbe add es sub add sbb mov ja push xlat and cwtl (bad) rorl lcall add lcall inc lods or stos or iret outsl add fs faddl fwait imulb cs loope inc mov and inc nop sahf imul mov repz add clc cmp sub fnstcw sub cmp adc imul and ljmp mov mov cmp sti sbb xor cmp sub jne mov (bad) rolb push or sbb jmp aas inc add mov jg add jl xchg or and pop inc lods clc mov dec shrb icebp xor mov mov pusha in aaa cmc call pop das dec xchg or adc pop xlat or sub scas dec clc jg sub cmp rolb sbb add cltd pop inc inc divb adc (bad) jge pop dec ds fiadd ret aad mul shl je cmp bound jle mov adc (bad) or pop jmp jl pop sti addr16 xor into xor icebp mov dec add aas in lods inc pop pop mov sbb mov cmp ficompl (bad) pop mov pop mov or daa and lcall push push pop in xor sub bound fildl jb mov add and cmp push inc stos add std es mov push pop fs pop inc das scas push xchg movsl push jo pop dec xchg jg scas push dec pop test cmp mov (bad) xchg movsl inc ljmp jnp cwtl or push shll cmc xchg and popa mov rolb pop pop aaa in gs or fmull movsl jbe pop jno sub pop and (bad) je lds adc cmp and add addl xor cmpl xor add push jge add add xchg rcl add jno push aas and cmpsl add cmp out es insl mov pop lahf jns out imul clc out lahf hlt add push sub roll out pop mov repz xchg xorl push fcmovu add fdivrs movsl loop pop mov das jl xor sub pop xor add mov int push pop frstor or xchg mov or inc dec in lds daa daa iret push std mov (bad) icebp add bound out jae jge sbb pop in es out sub or out idivl xchg push (bad) repz add sub jg mov clc sub pushf cmp and imul mov sti xor std subl mov jnp repz orl ds popl jl call jo nop in outsl jg adc add mov jle sarb inc adc cltd dec sub mov pop les mov adcb lds or push or lret pop cmp ja push cli add jecxz stos mov add or dec xor jns subl or pop pop mov mov dec lcall int3 add push mov cltd mov xchg fidivrl cli jg es popa test inc mov mov das mov mov pop jl lahf pop dec out fprem mov js xchg ror push lret add push cld out rclb mov lds or push (bad) pop add pop push add mov insb (bad) mov jno or arpl cli mov or pop push cmp or popa ret sbb cs xor pop or or xor mov out shrb sub rcrb gs scas (bad) push pop xchg push push aaa mov icebp jmp add and add leave out push add icebp sub dec arpl subl in test jg in cmp adc jns (bad) mov xor adc inc sub pushf mov sahf (bad) scas jle mov call add push lahf rcrl mov sub pop mov fwait inc inc icebp insb dec dec inc cwtl fisubl inc dec or sbb andl mov cmp dec jno and lods nop lret cmpsl lods and cmp (bad) insl (bad) xchg test sbb les int3 out pop sub sti add xor inc in add mov mov adc rolb repz lahf mov xor mov mov scas sub add mov jecxz iret divl and into test insl loope add cmp das in lock adc fidivr mov cli push inc fwait or pop mov pop adc test (bad) dec cmp (bad) cli mov ror xor or loop jae or or dec in je cmc aam jg inc out jge das or sub add aaa pop pslld fistp sub in lret pop push cld pop dec fscale sub outsl cmpsb jle mov or clc inc std xchg cld loope ljmp or push mov hlt js ja add sub push clc push xchg mov jae jno adc fidivr roll frstor bound mov test (bad) (bad) and mov pusha sti pop dec pop pop add dec mov icebp push movsl pop nop outsl or (bad) sub add stc ljmp jp rcll ljmp in lcall xor push outsb shlb incl mov rcll in sub lock xor add jle fs jne pusha cmp cmp inc lods rolb and mov ds add push xchg push sbb sbb rorb cwtl jg fstps movsb (bad) repnz test decl ret aad or data16 inc fcomi jg (bad) addb pop mov mov push xchg inc sub ror shll or mov lock adc sub dec xor nop push push mov inc js inc ljmp loop sbb (bad) jnp xchg mov xchg out js jae shl jge (bad) imul pop xchg mov sbb sub pop ss (bad) fs (bad) (bad) scas sbb lcall jg cmp or aaa add popf sarb or addl jle add mov mov mov hlt add popf pop cld jecxz clc sti fwait scas cwtl xchg xlat je cmpsb xchg push mov or je inc cmp (bad) mov gs aam aas push or in pop icebp lds xor dec aad add (bad) jae sub adc push xchg jno add push out and dec hlt mov ficomp aas stos pop dec sbbl pop psubsb push pop pop xlat std shlb jae sbb or adc push inc and andl jle stc pop xor jns jb outsb and icebp or je pop mov movsb or add xor xchg cwtl in jge std mov mov pushf mov orl inc jl inc movsl jg or gs sub mov or (bad) mov scas or pop pop les jl or rol or fs push cwtl or jae stos sbb pop pop shr cli xor push jl sahf cmp mov ss and jbe outsb sub push cmp in mov mov mov push xchg rcrl mov xchg push cmp clc xlat scas pop inc jb mov jbe (bad) mov jle subb sub inc mov push cli dec pop in sbb xchg sbb or ljmp lock add mov sti daa or in sarb (bad) add mov pop inc or enter daa or jbe pop bound fwait es dec or call test std jnp lcall or pop add es jmp xchg ret xchg add xor outsb popf fwait jp out push fsubrs or push pop scas fisttpll cwtl and pop stos in nop ret popf inc pop ljmp dec inc pop pusha mov adc repnz dec pop or dec aam faddl cmp (bad) jge lcall lahf lds cli shl cld imul sub mov hlt cmp push ret mov xchg jl or xchg xchg push mov ja inc mov or pusha stc sahf push and aad fwait inc lcall pop cmp cmc adc rorl movsl push jle mov mov inc and mov imul pop loopne push mov sub jnp (bad) daa dec lods mov inc jmp xchg movsb loope (bad) pop xchg sbb or lcall and dec and and push cmc xchg das pop leave insl sub push outsb pop clc es cmp or out leave push ja push cwtl popf outsl mov push jae dec jg xchg stos inc or stos lahf xchg xor lds inc adc push decb push incl movsl xchg adc mov push jns xchg aas out lods pop pop (bad) sub xor jg,pt jno sub (bad) nop sub cmp arpl cmc imul pop add outsl and add jns inc mov mov out mov pop mov fs push jecxz jo jnp jo push push push fistpll stc pushf add int dec push loope sub add jmp mov inc pop pop push mov dec stc jl enter push push inc (bad) into pop jmp and push push sbb sti insl dec push (bad) popa idivb repnz ret les mov clc ljmp dec in jg or test test mov nop (bad) sbb cmp in jae inc pop (bad) aas and pop mov rolb addr16 xor and xor ror pop xor mov push (bad) das test lret je pop add cmp subb (bad) mov das clc lahf or pop cmp imul pop xlat dec mov test je mov pop test add inc aas and lahf push shrl or test jp (bad) cmp dec pop add adc sahf fcomi lret inc sbb jo jg adc pop dec out mov lahf push ret stos mov sub inc cmp mov pop cmp (bad) jle cmpsl add cmp outsb and pop or arpl cltd idivb in xor mov xchg stos push iret mov xlat test mov gs jecxz ja icebp jg adc icebp push xor pushf jo,pt loop (bad) cmc jp (bad) bnd mov enter arpl add ljmp aad dec jb or outsb push mov or je jbe cmpsl or mov rclb test popf loopne out adc das jg mov or add dec jo aaa xor stos sar into daa dec lahf repz adc add cmp loopne cmp rcrl insl mov gs push insb push scas or dec adc int add ljmp movl pop mov ja nop sub and or add adc (bad) xor outsl jle jbe add pop push bound jae fstpt in xchg pop mov xchg ud2 xchg add and sbb pop xor sbb sub mov mov mov cmp cli gs scas lret call lods add loop dec push jae mov push cmp pop loopne sub mov cmpsl fmul mov in or neg inc push dec pushf or imul mov shrl dec jg adc dec pop pop repnz cmpsb repz nop add stos imul adc jae xor inc or add add add push int3 push cmp dec insl add jp inc idivl mov and setg jnp push mov cmp or in xlat push int sub cmp stc pop neg push mov add lret dec decl gs jmp xor mov movsb fildll jge adc mov or mov and lret clc add push pusha push pop stc popa (bad) mov push (bad) hlt jmp mov pop adc cmp daa cmpl add xchg (bad) sbb repnz jg cmp cmpsl sub jne div inc jecxz add mov push (bad) sti outsb mov push mov mov lret es dec outsb fbld (bad) pusha push and ret dec aaa addb dec out test or test or jne fs cmpl mov loop idivb xor or dec or xchg repz push mov ret mov dec fstpl add mov ljmp adc and add sub mov and int3 cmpsl call sub and subl mov aas shll add mov js out mul jo into cmp call inc rclb pop xor scas fcomi dec clc popf cmc stc data16 sar jl leave jbe stos xchg adc dec push arpl in movsl push jne roll outsb outsl xor mov ljmp cli shr or ljmp adc push stc pusha add rcrl outsb addl dec aam mov push or add bound insl xchg repnz push inc add scas data16 add push loopne call aam xor xor dec push xchg pop cmp jle sbb jno and add sub jne mov pop sub cmpsb rol xor add pop xor loop call outsl sub test add jge push pop jg xchg push mov adc nop insl mov fiaddl icebp lock pop shrl or mov jno xor ficom test lea adc aas lods mov ret mov and pop pusha in push pop push addl mov dec test fidivr add xor and jne lcall out push stos add cmp ret lds sbbb xor pop sti and and repnz testl lea adc mov dec rep push lret or nop mov or ret loopne xchg fist xchg int3 gs push mov jbe xor ret in sbb or adc sub pop jo insl sub or xor pop das sub pushf enter pop std jecxz add stc jb push aaa pusha sarb and sub inc adc popf dec sbb pop das sbb cld mov mov dec loopne loope decl add push test imul dec adc adc push and bswap pop mov add jmp jno lahf add or ja mov mov dec ds adc fwait cwtl xor and outsl or lods sub addr16 sbb inc mov dec push mov fnstenv (bad) idivb xchg out into jl out gs pop pop push movsb loopne jnp cmp push (bad) mov xchg ret repz mov popf popf sub (bad) out push pop cmpsl imul inc call fsts push push push or call imul ja test dec divb push xor cmp jnp jg insb orl and mov dec mov and and and mov adc mov inc decl cs in pop shll fstpt outsl aam add pop sti ja int3 pop aad mov xor (bad) sbb insb das mov inc imul xor pop xchg push nop mov jbe add lret adc pop (bad) mov (bad) push cwtl push add pusha add out add mov sub xor inc lret add subl int xchg dec pop mov or jg mov mov popf sub ds jmp sbbb jno adc or mov jle mov ret xchg jbe jb fucomi cmp out jmp push cs fsts add cwtl xor push xchg fisttpl insb push adc mov insb mov push sbb imul andb aaa xchg inc das add pop ljmp pop jg inc imul mov pop sub adc cmp fcoml pushf mov jnp push sahf inc daa (bad) pop (bad) jne pop test stos push push pop and data16 add gs inc push call (bad) or push (bad) or mov aam or out push jns pop es jle lcall nop jl out cwtl pop push xor andl outsb or add mov aad into movsb pop test mov roll dec mov les jbe sub aaa cmp sub sub add fldl scas imul xor loop dec lahf (bad) stos and cmc xor popf negb mov cmp cmp imul jae (bad) scas pop pusha cli pop sbb add ret nop mov mov mov daa add test fcomip inc push loope fcoml jne int or add push pop aas mov pop pop popa sbb or push jne cmc cmc cmp push and sub (bad) je dec xor or loopne out imul cmc jb xor add test pop fnstsw and int3 push aas test mov push push jns ret xor mov and insb and mov out adc sub fsubr jge nop pop push add das ret cmc xor cmp int jbe fisubr lret rcrb push or (bad) fadds inc pop pop icebp mov (bad) ja xchg or mov decl shr repz aaa xor adc cwtl cmp std sbb xchg mov inc mov inc dec stc mov mov mov add shrb sbb pop jg jge mov xor mov das (bad) cmp daa ret fs mov (bad) jg mov xor push imul sub out adc ds lds pushf mov mov pop dec lock iret or test sub push add pop stc imul sub ret inc add mov es test popa adc rolb add add mov jnp sub loope (bad) dec xchg outsl mov out jmp js (bad) mov insl loopne fadds adc xchg ljmp je mov push imull lea push sub cli lret aas cmp into clc cmp inc sub jmp scas and clc sub push xorl insl adc pop sub and and dec stos pushf call rcrl pop xchg xor mov inc add fidiv stc pop jo dec lahf jmp sub mov div decb out jp add test lods loopne mov jmp push lods addl push movsb dec into add mull test fwait std push inc xor js jmp clc mov mov and test mov sub mov sub adc test pop scas adc and mov ja or sub inc add push sub test fstpl les scas jecxz or inc (bad) cli iret or sbb fbstp jp dec push loopne mov pop push push sub mov (bad) inc cmpsl (bad) es push mov loop sarl sub mov jne xchg lods mov das shrl outsl movsl icebp add mov movsl jmp outsl cli push pusha ret addr16 mov mov sbb sbb push lcall push sbb pop push ja (bad) push test subl or test pop mov mov or mov add lods leave or and outsb je das or pop adc xchg mov xor lret pushaw repz sahf pop xorl test icebp adc sbb sub sbb inc adc lods add ja fimul mov pop rclb aad adc in xor gs inc add (bad) push mov add jmp add mov jne mov leave push cmp idivl xchg mov out sbbl ficom pop jmp or xorl pop add fstps xor pusha das ret pop pop xor stos mov rorb lea repz jns scas into cmp pop add int3 pop mov mov mov sub pop jb xlat cmp or (bad) mov pushf nop enter push aas add xchg jle or sbb or fst punpckhwd xor outsl or rolb xlat dec jbe addb push and inc sub or aaa add dec stos xchg lret mov cmc xchg mov aas clc loope stos jl lea outsb cld das aas or ret iret and sti and rorb sub mov js inc push test inc pop mov inc in jle roll add aaa xor ljmp addl jno es imul and mov push or ret mov scas (bad) rorb sub out adc push cmp stos inc or lea dec nop and mov aas (bad) and dec insb cli dec insl add sbb cmp test in inc xchg fwait in outsb mov bound pop cmp pop or and add iret push imul imul xchg pop test adc hlt gs ret dec fild faddp or test sub lret dec sub popa push outsl xor mov lcall mov mov and stc xchg stos ja sbbb daa jle or inc and pushl pusha xor int mov fnstcw add aas mov outsl pop inc lock ljmp or (bad) pusha pop nop fisubr inc imul xchg repnz das insl ss push and ja or movsb loope test push gs dec imul mov jp inc cmp lcall dec (bad) and pusha cmp add pusha aad cmc pop push xor mov inc dec rcll negl xchg stc pop mov push add in (bad) adc pushf negb xor out xchg lcall in pop or fldcw fisubrl popf mov add das decb lea aad add jecxz jns mov cmpsl xor or pop decb shl pop xchg mov icebp sahf push mov jg in mov push gs out orb dec negl adc int sbb jnp mov and jns mov mov add xor jg fadd cmp loopne sub mov repz mov adc stos sbb jae out sub jp addr16 jb scas sti add push lcall int lret jp ret push enter sub not and jg add xor add inc psllq ret cmpsb sbb call das sub xor mov add test rclb das jnp jecxz ss mov jb push sub jp repnz repnz xor fnstcw dec add mov or sbb add cli sti push mov sbb mov movsl or stos jne scas pushf push aam int3 lock add es in mov inc jno jmp outsl xchg repnz imul (bad) and lods bound or repnz push sub cmc mov lahf adc aam inc jmp std dec mov imul js clc xor xchg fisubrl (bad) (bad) cmc in pop pop fwait inc sbb add pop je movsb ret lods scas adc into bound push into jne ss add add fstp and jg ds int daa mov adc (bad) pop xchg pusha movb dec sub mov enter mov cmp dec jo push notl (bad) call int3 jae push andb gs out ljmp fsubrl test xor (bad) cmc dec addr16 mov iret xor movsb mov loopne push xchg mov and add sti sarl stc jle rorb ficomp std or jo jno mov dec inc mov sub (bad) xchg mov lret cmpb insb mov dec cmp data16 and lret mov mov lahf aam push mov pop sub push addr16 fistpll cli cmp adc xchg xor dec jg mov pop not dec lcall sbb hlt mov ret sub and lcall or es aas xor dec sub lahf cli mov inc push stos into add ja clc pop mov fbstp fcomip mov add icebp mov ljmp mov out pop and inc xchg mov pusha mov and sub mov dec lret ficompl stos (bad) dec sub dec xchg clc lret gs in arpl pop adc lods and lcall jge iret (bad) adc push arpl leave pop insb test outsl loope add push inc mov add loop jnp push fstpt pop frstor push or test sub push push outsl outsl test sbb into jp jge or or push call mov mov dec (bad) ljmp mov mov xchg push mov negl xor inc jmp js stc adc arpl cmc inc lods mov les test icebp dec pop mov addr16 jno pop jnp sub add sub push (bad) in pop mov inc pop cmp sub cmpsl je add jae call sub mov dec jne loop jo daa stc sbb dec add shrb mov pop inc nop inc ja insl sahf mov adc or push pop arpl aaa shrl or add es add int lock xlat cltd pop mov push sub xor mov xor fldpi in loope,pn cmp (bad) jnp rcrl dec leave cmc in dec sbb sub xor int int3 hlt sub mov sub push push aam pop xchg dec cwtl lahf fisttpl pop lock xor int jecxz add addr16 add dec jmp test rorl jle and ss cmp mov push orl xor stc ds arpl push lcall ds mov add sub mov pop pop or pusha jmp (bad) out pop sub inc imul cli rcrb mov sbb push mov mov imul mov and push jbe sub test push out fmuls push mul ljmp imul std and in test or sbb dec jge or movsb mov xor lret push or callw repnz cmp sti dec add add (bad) mov das pop enter and push jmp push in lret clc inc stos push xor or stc inc mov cltd jle jecxz out jg lret pextrw bound in jecxz or pop jl leave adcb je,pn pop ljmp add push sub cmp push dec ret add test mov rclb xchg inc sbb and lock sub push pop jecxz,pn mov test out add into ds cvtdq2ps sub adc ljmp adc cmp sbb or fs push int mov sahf addr16 xchg aas pop clc sbb mov add push xor jmp (bad) mov pusha adc (bad) and jmp int loope sarl call sti es inc pop neg hlt or mov addr16 dec (bad) js mov mull jne (bad) push mov sub pop pop inc aad add dec fs ret add sub jg lret lret bound mov inc xor inc inc pop sub cmp dec in pop mov or mov mov push jl aaa mov fnop lods mov lea shl ds pop sub int mov or cmp and sub mov dec sbb push mov jmp fldl2t vpsubd dec popf (bad) push push push pop popf pop add sub pushl int3 (bad) or rorl inc jo insl das nop inc sbb call jg inc push lds inc aaa stos mov sahf pop out cli ja out push dec jg sarl or neg sbbb popf mov ja or das aad (bad) pop dec mov lret (bad) mov pop aam pusha icebp in sti das mov xor fimul shrw jg add push je pop xchg jge mov mov in xor add dec test dec sarb sbb mov xchg adc outsl xor jmp into jb xor pushf pop mov push std xor icebp jecxz,pn dec add popa pop das fisubrl sbbb aam enter add push mov sti fwait bound in pop mov mov mov pop cli pop outsb cmp sub jbe test je in add subb daa xchg mov or cli xchg outsl push inc incl xchg das aas das rolb into rcrb rolb pop in fadds insb or cld jnp push mov pop ds adc icebp imul bound sbb out into ja call mov add lea addl jns push push mov daa push addb pop mov mov aaa icebp outsb popa jg imul xor mov sbb add pushf je jmp mov rorl adc test scas outsb clc dec add xchg jmp movsb les add mov jg mov sub push fnstcw push rclb and add pop push inc test dec inc push adc movsb test cmp jns push aad iret cld cmc or fistpll sbb faddl fsub and popa pop sub lret cmp ffreep imul ljmp xlat inc push test pop daa jge mov adc (bad) imul nop add jg inc inc jp daa (bad) jle stc lgs jmp adc push push imul arpl movsb add jg jge dec pop xchg pop pop lret sti es out adc pop xor dec mov insl jp mov jb add enter stos jae mov mov addl stos repz mov pop negb inc les push lcall lods frstor adc xchg add fnstcw sub dec push xor es jno fildll icebp out fucomip stos sub addb jmp mov jae inc sbb or mov sbb add mov int3 popf mov jge adc stos lret xchg dec add sti cwtl pop sbb call and (bad) adc add xor mov and push mov dec mov int3 aaa push rorb psubsw or xchg xchg dec push mov cltd sub pop fs dec add iret pop sub inc adc push sahf stos lret sbb sub jmp jge fildl push mov jne sub and adc imul jnp (bad) pop out imul add push xchg adc xor add xchg jbe jg mov lret ljmp mov adc rcrb add sub cmp ljmp jae pop imul jmp test pop add xchg mov add call xor test jg in adcb pop ja enter add and add stos dec cmpsb cltd test fist sub dec pop sti scas mov add int jae add out mov rcll ja adc pusha xchg in lods idivl pop cmc int3 xlat mov cmc loopne pop in sub add pop sahf xchg pop adc add dec clc loop inc or adc pop cmp fucomi (bad) out lahf push dec push add int3 inc pushf add mov dec and mov cmp sub lock lea stos jge jnp fs and inc lahf fcomps (bad) push or xchg xchg cli mov sub dec push pop dec pop bound ret (bad) ds in add andl pop ret popa sahf mull pop (bad) jne out rcrl outsl fldenv cmp test or daa inc rcr dec loopne,pn mov mov gs call out int inc (bad) add imulb cmp mov lds mov mov (bad) lahf ds or mov mov aas adc ljmpw or (bad) jae movmskps sahf fdivs dec xchg lret or or add aam lahf jge lods popa cmpsl push sub jge dec mov les ljmp loop jg in icebp mov and ljmp pop pusha add or push jp mov and je (bad) repz pop jl or mov jle push and call ds pop dec addl aas inc or sub or in in iret mov pop pop and sbb fisttpll dec jle pop inc inc jl sbb adc and daa pop jno pop cmp jp mov lahf fs punpckhbw int adc mov push jl nop add xchg aad pop adc push ljmp aas jp shll ljmp xlat add jge pop xchg pop mov movsl div (bad) notl push xor jns push sub jmp jae das jle data16 jo push (bad) dec aam cmp (bad) xchg inc xlat or and pop cltd mov ds (bad) xchg call popa imul rorb push sbb imul stos ja es jg add sub test and incb sub add out push rolb pop jecxz add jl adc jnp shll leave sahf adc or or xor out sbb in lahf mov in mulb or inc cmc test mov mov push mov pop sti mov out (bad) in dec daa fiadd or adc ja cs push test shrl out pop out je test in add ror jo push pop pop lds mov pop mov jle lds enter xor jnp xchg insb dec or lock push push dec dec sbb lret movq push flds jb outsb nop rclb push cmc inc push lods js inc pop out xor fldenv push js add push dec dec dec sbb pusha xor outsl repnz repnz mov pop and fcomp mov imul dec mov lret or xchg outsl jne data16 (bad) not jge sub mov fdivs add jbe lds (bad) int3 ret push mov hlt jo add xchg repnz orl mov notl std push popa xchg cli add sar imul push jl xor push or outsb sahf push jo idivb pop sub inc or push test in mov xchg loope jnp (bad) jle and adc adc fist xchg or sbb mov push xor in xchg dec insl hlt faddl inc xor inc push mov das xchg loop fisttp and aas xor shrb or imul mull cmp aam cmp mov or std (bad) out out mov or popf jo cwtl mov out mov into pop xor and add push in jecxz andb add pop repz adc (bad) icebp (bad) pusha pop jb std mov (bad) pop inc jmp cltd xor cmp jnp cmpsb dec and clc xor pop mov test pop mov (bad) cmc mov pop repz dec push mov nop push ds push repnz lods pop (bad) rolb jno pop mov imul cli inc test outsl pop mov xorl add inc jmp or jle mov or mov jno fisubl inc push scas fisub push push ficomp and jg add sub adc mov mov mov sbb sub movsl or xor repz outsb cmpsb jl pop jb and mov jo push mov push fiaddl loope call (bad) es or pop xchg or xor repnz add mov push mov xchg repnz lret push ja lahf das push cwtl or push mov mov cmp pop test jmp pop jo jnp aam push or push fs xchg dec jbe pop sub inc mov lds out xor jo push push shlb pop jne std mov fwait inc int push inc pop cmp aad scas mov xchg jae xchg loop jno push mov cmp push add cld push fildll and or push cld add daa call pop push push pusha xchg int3 repnz dec jg lret lret lods aam add push sub sub or inc jecxz mov sub xchg frstpm(287 lret dec push lret sar and stc mov (bad) movsb fiaddl sub (bad) arpl fmul mov add rcrl add outsl jp pop xor ror icebp loope hlt sub aas test hlt adcl jl jo pop and bound jg jbe inc cmp jnp add repz roll push inc or test and adc scas mull ds inc test mov imul adc mov xchg dec push rcll jecxz hlt repnz mov pop xchg pop fs test (bad) (bad) and cmpsl pop adc jmp xor in sbb hlt sbb js outsb jle dec and jg inc and sub std shrb cli outsb xchg mov push adc dec mov sub jae lret sbb movsl cmp or std pop jbe add xchg cmp mov or iret fisttp or or xlat jnp mov loope add jge inc lods (bad) imul scas lods sahf mov sub add ds pop push lahf or fidivrl mov lcall ret (bad) or and pop clc cmp fabs lcall dec or or fisttpll out sub xor push sbb sbb pop inc test mov ss sahf adc inc jno iret cmp and popf xchg adc fcmovbe insl jb in or jns insl arpl add sub lret popa dec jne sub cmp push dec push je cs (bad) jae add add mov mov sahf addr16 (bad) fldcw mov fbld or adc cmp popa or scas cmp jg addr16 hlt jp mov shl sub and jbe lods (bad) jnp mov mov mov aad mull shll aas mov adc jg xchg mov test stos stos jne push sub (bad) mov mov fs mov mov inc leave and mov add xchg cmp imul pop sahf aas dec fisub xchg sti pop add daa add repz jge inc testb call mov call out aaa in jnp aam ja pop add push adc push cltd mov ljmp stos cmp and and inc (bad) fs jno pusha push jl lods gs add inc push push daa push mov mov rcrb sbb jg adc (bad) popf fidiv xchg movsl ss sahf imul inc push add mov pop lock add pop jne xchg cs or inc sub add loope popf sti xor or in shll subb (bad) pop shr pop xor mov and and cmp dec inc add adc cmp dec push adc add in jle sahf (bad) dec ljmp stos inc pop mov push nop ljmp or (bad) and orl or pop fisttpll mov xor and xor sub jle mov or (bad) out pop lahf cmp xchg push and add mov jnp movsl jo loop cwtl xor push ret mov sbb jge adc insb fs lret push push pop pop push mov scas push dec or xlat movsl sbb dec cs and sarb xor jnp push lds cli mov jns mov fidivr clc add and int3 sahf (bad) adc cmp push add test fsubl push pop mov xor out mov jmp test add push push pop jle or xlat inc out into and sub push jmp or cld inc leave (bad) jge out jo clts enter mov ds lods dec cmp pop jg incl jns push outsl iret xchg xchg cmpl adc outsb call pushl dec push nop lods jmp lea mov pop dec aam adc stos leave mov cmp jle and leave notb imul and pop or sub xor mov pop push push fs ja mov mov inc dec (bad) pop push (bad) hlt loopne mov or fidivrl addr16 sub ds je xchg inc aam aaa mov fadds sar orb push pop mov push add xlat pop outsl imul xlat pop popf mov cmp cmp xchg fimull scas and add das ret push sub add xchg pop and fsts aas pop add loopne (bad) dec aad mov jae orb xor jge rclb (bad) sarb add test clc sub xchg rep shl nop scas add stc push enter shrl pop pop lcall (bad) add push dec or inc cltd out sub jo pop mov jp jae int test dec jecxz popf dec push add fninit pop lahf dec in mov incl pusha push fstl mov icebp pmaxsw stos inc xchg push push (bad) add push cld gs ljmp add mov daa pop std sahf mov add mov jno push daa jl mov lret icebp xor arpl iret popf and out sbb xor lahf jno add imul xchg sub (bad) cs inc das aad and mov jge cli rorb ds notl add xchg test and ljmp fisubrl pusha add cmp or ja jno dec das pop or stc outsl jmp add sbb sub jae jo neg mov ss cli xor and mov mov push xlat imul or jge pop inc addr16 pusha jne mov lcall popf lock xor dec (bad) in aas out add (bad) fmull xchg ror fst jmp stc xchg lret push out mov mov lods insb decl mov jnp jmp and or mov paddb xchg out fsubs out lock cmp (bad) or jmp gs push push push push (bad) push xchg dec (bad) xor mov ja jae or pop pop add dec sti loopne push mov inc daa in outsb mov dec pop mov sbb mov jne mov cs ja add rorl add dec insl sub jmp fiaddl shr inc repz xor mov lock add sbb pop dec mov add sub ror add or jmp cmpb jne add cmp mov mov out add cmp inc ds sub sub jp add push decl mov add popf pop mov push out lret cmp pushf cld sarb push sub mov mov dec xchg mov mov adc pop add jp fstpl (bad) jecxz sub jle inc jge lahf imul sbb test sbb jb scas cmp jecxz cmpsl mov add notb out das in jg and and jb add aaa fsubrs enter or iret mov jmp (bad) in out jae,pt add insb adc push dec and dec pop xor sti inc push mov arpl shl imul add shr data16 dec push mov inc rcrl fnstsw mov sarb xor push (bad) pop sub cwtl decb sysexit stc pop mul mov pop mov jmp and insb jo and aaa pop or mov jp or sti mov aam shll add jecxz stos lock daa clc aaa addb lret inc add repz adc cld (bad) into sub and push fcoms js out add adc mov decb cmp sub inc add das mulb lahf fstl popa hlt test das or out push or sbb mov sti pop outsb ret push pop or push push pop sbb jp fild inc sbb add mov pop cld insl loopne add ss xchg icebp enterw pop popa cmc mov pop loopne add push mov sub jge push lcall nop jl adc jae std aad std cltd pushl inc add cmc aas add adc rcll jmp out imul orl sbb and fistpl idiv test inc xor addr16 stos into xor aad push pop pop mov in mov fs insb pusha icebp popa jp jg xchg cmpsl jecxz add outsl sti xor jle pop and mov mov pop fimull cli sbb adc mov idivl mov jno out ffreep andl lock add bnd mov push test sbb insb scas fs sti lea mov push add pop nop pop (bad) cld das adc mov mov add sbb jg ret add pop out jns int sub cmp xor movsl out ja jecxz ret test pushf pusha add adc (bad) out push test pop clc mov mov movl jmp xor sbb jg mov popa mov clc xchg mov and in mov cltd mov or or cmpsl xchg jns xchg push jecxz or lahf push aad aam jl (bad) insl jl paddsb xchg adc sub jno push in pop cmp aas test pop and jge scas (bad) repz test mov pop das dec adc jnp stos flds or jnp imull cmp add mov mov xlat imul pop and repz pop out int3 idivb mov (bad) setge and jle sub push add data16 or sti mov scas popa or leave cmpsl mov fwait lahf ficomp dec pop push jno inc push jle and jae xchg add inc insl or orb fstpl scas bound pop cmc in mov in sarl icebp ljmp (bad) mov xor notl inc pusha push xor fnstcw jle je inc insl or xchg sub scas std icebp insb dec or jo pop jbe dec sbb icebp jg pushf pinsrw add mov ja test shlb adcb (bad) push push jb stc jmp mov push cld aad pop lods or fildll enter sbb and mov and mov inc (bad) add sub (bad) out std inc add jmp outsb cs aas jecxz or jmp insl out xor fs cli call mov add push pop test faddl push add mov sub aad loope jg xor loope and sbb iret aas sub insb and mov add std lock push adc and push sub and mov dec xlat xchg in mov xor pop int3 cmp daa pushl sbb pushf sti inc mov jg inc push daa lock cmp (bad) jl pop push or ja push jl mov xchg inc shrl aam push outsl and clc dec add mov add mov fildll (bad) inc push mov sub repz jo lock push mov adc and push xor stc sbb or add pop das and leave sub mov pop add lods cmc fistp test jge pop add mov mov push scas das mov or mov (bad) repnz std ja sarb scas sub cmp xor ljmp std fs mov push or pop mov popf adc dec ficoml add rcl pop ror xor cmp xchg pop or add jp mov jp subl cmp enter inc mov das mov and movsl push (bad) rorl out pop cmpsl adc sbb daa sub push (bad) cld (bad) fnstcw pop rcr push fdivrs jne ja mov pop jl and add incb push je or shr outsb add pop cld cs dec ja inc mov scas idivb jp cmp or pop inc sbb das add xor cld sti and scas into cmpb jp mov push nop or pop pop outsl mov xchg (bad) scas pop xor gs mov (bad) push push inc inc add orl mov lahf cli pusha ds (bad) fbld and or xor sub das and mov packuswb sub pop das in add call add inc mov negl hlt or mov pop das mov push sub lret mov sti inc fwait xchg jns jb fcomi movsb or imul fsubrs pop cmp inc xchg ss sti jg sbb frstor jb cs dec or mov pop mov cld mov xchg out pop scas lock adc pop mov push jl in pushf jbe dec push lods jmp in sbb and mov sub adc rep pop aam ljmp js ja (bad) imul ds inc push push insl (bad) mov push xchg jae sub mov pop add xchg lock push push mov cmp mov push sti fidivr add sub mov js cltd add inc and add jo push test and add xchg xchg jg cmpl fidivl out imul sub or loop stos dec cwtl repnz or in aaa dec xchg or xbegin enter sti pop pop inc arpl (bad) sarb sub dec xchg and jno imul or inc sbb fidivrl add movups and push add sub aaa rorl (bad) cli inc adc insl (bad) and lret int and xorb mov add test or mov outsl cmpsb dec loopne arpl jge pusha ljmp stos or xchg jecxz xchg push xchg pop fwait pusha add bnd rcll pop inc sub aad and movl movsb xor cmp mov mov cs push fs (bad) xchg jbe add fsubl mov cmp aad pop insb fs ljmp adc pop pop pop cli push inc add jns add cmp jle and jmp es das sub in xchg mov pop jae bound add gs jmp cs pop sbb mov movsb pop mov jecxz or push sbb jo push or dec push pop insb outsl adc sbb xchg (bad) dec dec xlat out or mov sarb push push xor jle div jge mov fbstp dec add jns inc xor std lock sbbb iret jg or dec pop add rorb ret out imul out dec pop jmp jg sub mov cld jl enter mov mov out inc cltd mov imul xchg test jle dec xchg dec push adc jl cltd pop loope mov push fistpll cld mov or cld mov outsl pop xlat jns gs pusha push xor inc cwtl aas mov inc push or (bad) pop call mov outsl adcb jns pusha rolb leave xchg outsl dec pop add into jge jo cld rcll imul in outsl add xchg push loop adc mov dec add jnp data16 into imul shl pusha dec xor or aam and push lret jle push push (bad) xchg xchg mov imul mov lock stos push jbe pop test or ja pop nop rorl push mov jb mov push iret movsb (bad) pop sbb mov add or mov push bound and popa outsl test subb cli ds loope mov add arpl mov arpl add in push mov or inc xchg sbb leave shr add imul mov mov add aas jle (bad) dec pop mov imulb jg xor les adc dec daa loope mov add and xlat xchg mov or repnz call inc loopne fsubrl shrb dec out inc cli daa stos iret pop and xchg sub decl test mov add in adc sarb xchg pushf lcall in add leave ss sub negl pop pop cmc jne aas hlt add call popf or dec jl das (bad) std jbe inc cmp in inc repz jmp xlat mov popa xchg test scas mov leave pop ja xor repnz stc fsts lds loope mov cmpsl mov shr idiv outsl popf les insl sbb jns iret adc or (bad) jmp lds pop add or pop push sub in or ljmp mov dec jmp push add sub push inc mov lret scas mov pop cmp jno jnp sbb mov push insb daa push sub cld ja pop test sbb mov pushf shrb jb push inc pop and movsl bound mov addl xchg in cwtl cmp fwait pop lret mov std pop jle pop pop add dec sub and stc lahf or subb les in cmp fdivp pop mov pop jnp int sub push push andl aas cwtl cmp xor or inc pop jle orl or inc mov pop subl fs jge scas push imul mov mov cli jne mov (bad) sti push cmp imull popf ret or xor data16 sub (bad) pop sar dec pop in imul inc jl mov ja cmp mov push fs insl fs jecxz and gs je stos mov mov jne push mov das lcall dec test pop rorl push push mov fisttpll add fst add xchg push idivl leave out xchg or leave (bad) jge xor outsl adc mov add add xchg pusha push stc jbe rcrl xor push add ja mov add (bad) xchg push cmp int pop call rolb mov pop mov dec push (bad) iret xchg mov sub xor aam mov pusha jnp enter xchg mov dec xor stc pusha outsl rdtsc mov jae (bad) jo push (bad) aas ja push arpl mov fistp mov pop dec das fnsave xor adc pop sbb sub jg pop jp cmp repz inc adcl insl or cmc cli pop jae cld fistp adc mov repnz pop test add mov ja adcl jns lcall pushl stos test or imul enter pusha push adc or in daa and add ja rcrb sub scas mov or adc fsin dec adc xchg lret add fimull sbb (bad) mov adc (bad) xor add mov pop fldcw loope dec cld jnp pop mov test jg cmp add pop pop (bad) xchg cmpsl pop cmp pop add scas sub bound (bad) push call mov push cmp xchg rcr mov xor or jns fs jmp mov mov out sub lea push push cmp mov std mov jle test jne add cwtl lahf jne fiadd cmp pop jmp push sbb pop mov mov push test mov pop lods sbb xchg xchg sub xor add adc xchg stc ljmp mov jb cmpl clc sbb xlat loop rorb movsb and xchg adc push xor push cmc into cmp mov cmp xor and adc pushl pop (bad) out jge jmp les pop neg or add inc scas addb inc hlt sti dec jns add pop push lods cli dec rclb mov (bad) xor imul insl or pop ss add ffree insl pop and mov jne push lods fisubrl into fldcw add test fisubr les or add loop mov or push jb stc scas lods mov rclb vmwrite dec push mov sbbb mov (bad) xchg negb dec fisttpll mov cltd jns push in push xchg rclb jb lcall and mov jb fild pushf outsl and pop mov leave and mov or lea or pop push int3 imul pop push shll outsb icebp xchg xor inc dec mov psadbw mov dec or pop sbb enter push adc fisttpll mov cwtl mov dec or jg lds xchg jl fcoml mov mov pop mov sub ljmp in inc pop (bad) mov incl shrb jmp push jae sub cli ja adc in cwtl test sahf lods imul add adc jle cmp es xchg sub xchg push push add imul xchg outsl scas rclb jne and sub push popf insb push jl jp inc xchg jl test push leave and sbb iret jbe mov and or dec cmc outsl push mov cmc adc xchg rcll cmp pop stc jg push cmc mov ror imul loopne fistpl or shrb icebp sub enter mov cmpsb add cli mov xchg movsl sub add xchg dec pop cmp push pop pushf out jmp jne push pop xlat stos sub add add lock and sbb mov jecxz mov sti inc les sub mov xor rcrl xor jnp or lret sbb call fs repz xchg (bad) addr16 sub mov and inc sub pop dec add xor sub mov sbbb jecxz cwtl (bad) adc push mov adc adc loop add add pop (bad) adc xor sub xor sbbl ds loopne pushw mov add add and js inc daa iret fs and cmc add test das xchg rclb jmp (bad) outsl int and iret sbb sub ffreep (bad) popa popf outsl or divb jge outsl int jmp cmpsb xchg (bad) pop in mov pop lahf (bad) ss xor add xor sub cs dec xor xchg sti adc rorl outsb movq stos inc cwtl add pop pop cmp jge out xor rcrl jecxz rorb or dec stos ja jmp or in ret stos out je dec jecxz cmc es or xor xor daa and imul aaa or mov push or mov aam jge incb das jno (bad) fistl add movsb cld loope jno cmp cmpsl (bad) mov sub ret int sub jg jae (bad) call jg mov dec or sub push add (bad) cmp jb punpckhbw sti dec pusha pop cmpl cmp addl adc fistpl add fmull (bad) fldl (bad) cmc (bad) loop das sbb ror bound loop jp and insl and jne push or jecxz test or and mov outsb xor or mov lods out pop adc sub xlat jmp clc add xchg jns cs (bad) xchg push push mov and xchg jb leave in and or mov loope cmpb rol sar or (bad) scas roll out pop lret adc lret std movsl (bad) (bad) push ficomp pop or mov icebp pop outsl es sub pop mov inc (bad) cmc inc adc movb inc nop pop push std add scas or aaa push fisubr sbb fucom pusha push call repz push ret pop icebp inc imul push inc es mov or xchg divl (bad) mov or push mov sbb sbb inc cmp insb push xchg push je (bad) test add imulb lods or jnp stc sahf sbb mov pop xchg mov push push push jne (bad) (bad) dec andl pop daa xchg push scas cmp out inc pop (bad) xchg out sub dec cli and ret jp lods push mov out rcl das cmp pusha es pop add push push add lcall push out jae sub (bad) or orb in dec xor pop test leave pop (bad) pop das in adc xor outsb pushf xchg and sbb in das push enter loop jnp xchg dec out aaa xlat dec xor mov (bad) jno jns test inc xchg daa (bad) add pop jae mov and dec rol inc in xchg stc je mov jns push adc add ljmp addl jg inc jp jmp in popa sub cmp nop add push mov mov adc gs mov and nop inc add or mov add scas xchg jg movsl mov and and push pop push push mov add add in sub stos or pop and (bad) incb cli in (bad) adc sub nop mov adc cwtl (bad) jo or sti push inc sbb adc jl cmp xor inc call (bad) xchg jae pop adc jg inc add cwtl arpl loopne push rcll pusha pop or jnp movsb sbb cmp orb enter out adc ss xor jbe add mov sbb repnz mov adc sahf add pop adc std subl inc std dec sarb (bad) and pop sub add xor into add inc inc pushl orb shrl mov xor sub dec int3 cmc xlat insl movsb movsl pop mov mov sub pop add loop mov outsb mov xchg scas push fwait mov cli dec test pop outsl mov mov repnz pop fsub inc lods xchg dec out lret mov incb call jg pop push push cmp inc nop sub mov xorl outsb cmp inc ror sub dec call leave es (bad) mov or sub lahf movsb pop lds and je add or lods mov test leave es subl outsb mov add adc out rorl and dec pop mov shlb jg mov cld cmp data16 mov dec pop test loopne pop add jg lods adc xor rcrb int3 aam fwait test add adc mov dec inc or gs pop test inc xor outsl inc out or cmp add into faddl arpl insl mulb mov pop xchg aam stc jne or pop sti ja lret push pop mov push sbb sub std (bad) push stos insb lahf rcll mov pop push sahf lods or int3 std aaa stc imul outsb test loope or fistpll mov mov push repz dec (bad) sub in pop push sub xchg out or (bad) iret lock mov fcoml jbe data16 stc push cmpb dec int aas mov ss xchg lods jmp jne push xchg sbb lock or mov into adc stos xchg or sub and sbb ja mov sub orl or rolb call repz jno add sub das add sar push pop mov sub sar add cmp sub repnz or or jge loopne xchg cli add clc fwait dec aam xorl cld jl mov cltd imul sub or insl mov subb add xor sahf mov xchg (bad) cmp xchg add test jmp hlt sarb mov xchg inc pop bound gs push push jo dec loope aad inc roll aas cmp and xchg fild sub xchg orb test dec sti outsl push add stos jge and outsb dec dec jnp cwtl mov das pop mov cmpsb imull mov pop movsl push insl loopne sub aas mov out or xchg (bad) lahf push inc xchg adc dec cmp push cmpsl dec add nop push fildll mov cmp aas push pushf decb enter ret fs cmpl orl or adc and push xlat jmp mov les sub loope mov lds mov sbb js adc sarb dec jne dec fsubs xchg add xchg pop out insb ss adc sbb rclb subb xor xchg xor push addb jns pusha rclb setg jp mov push cld pop lds cmp in lods mov (bad) and push pop push jae inc sbb out nop mov cwtl dec idivl sbb notl push push mov adc adc addr16 nop test xchg and mov pop pop call add inc mov in sub addb mov xchg mov mov mov pop lcall jg (bad) in push pop sbb ss leave fstps push scas mov mov es mov sub addr16 push sub out movl lret or mov popa dec lds cli hlt subb sub pop addr16 ja push stos lods jge mov (bad) mov (bad) mov pop mov ss repz ja (bad) aam shr mov dec outsb mov neg push mov notl insl mov push rorb cmp shl xor and ljmp add outsl loope pusha push pusha pop sub and sti rcll xor sub jge mov push stc jb rep add pop (bad) pop inc push sbb sbb push pop mov sti jl andb sbb imulb push js ss jle mov xor sbb sti push or daa mov inc ret int enter add addl push repz js popf pop stos or mov (bad) loop std fs push out jge mov pop mov sub lret movsb and and xchg add jb rclb repz fistpll pop mov (bad) pusha es lcall test out icebp jg dec sub dec dec sub call adc scas mov inc cld (bad) pop out jo ret or (bad) mov test cmp cmp ljmp mov inc mov dec inc jmp es cli sub je ss cmpsl xchg jg push cmp or negl cmp dec jge test out lea outsl sbb into mov inc jg push lea cmp mov mov xor adc dec pop (bad) testb or jg int3 or xor inc push daa adc or hlt mov xchg push jg or (bad) in sti clc push bsr mov stos mov mov jecxz shrl loop mov jae mov adc push imull jp gs dec mov mov in pop outsl fisubl std add lock fisubrl shrb xchg lock cmp jmp mov lret into mov push out jns add (bad) out adc leave andl mov subb pop inc xchg xchg mov cwtl stc adc pop inc add xchg icebp (bad) inc xchg rorl (bad) dec ja or fildl pop jae or std mov std test orb mov addr16 out mov test stos inc push rcll es cltd cmp in or adc (bad) insl ljmp inc or mov into pop fcmove mov (bad) adc shr mov fcoml out adc stos mov (bad) (bad) loope or subl adc add add xchg decl std add test addb popa pop and pop and and rcl stos (bad) mov or and pop lds adc jmp leave cmovge and add fsubs sub dec out pop or mov pop loop (bad) push fsubp jp imull pop fwait pop imul and outsl mov imul jne jb mov sahf sub or cmp ljmp mov ret inc or faddp jmp pop nop mov cvtps2pd std sbb sub mov mov mov sbb mov int and (bad) pop or adc stc pop mov pop clc hlt pop push (bad) test stos loope ds scas loop (bad) scas add ljmp loope and addr16 stc pop dec sbbb adcl nop (bad) ficoml pop push jbe push xor aas mov or cmp (bad) jbe (bad) js mov push js mov and xor cwtl add cmp fildl orb push ljmp dec ret clc lock lret out or ljmp scas sub inc sub cmpsl out dec cmpsb and add inc ds mov pop ljmp (bad) mov mov cmpsb push stos jnp call lahf mov fadds cmc stc xchg push pop sbb cmpsl fwait mov (bad) cmp dec add lea nop push cmp stc push mov push inc add mov sub inc cmp addl leave jne push repnz dec xchg and mov daa sub cmp pop les call movsb pop loopne nop push js add sti jnp les pop lea std cmp and repnz aam enter dec pop orl cmp jne not pop sub dec ja jl loope popa mov mov pop rcrb pop adc fs push mov adc (bad) mov jne pop jg pusha cld inc jecxz mov pop jle or in mov loopne dec sub push lret outsl jg or or (bad) shlb mov enter add push popf mov inc xchg fldl pop test jl js ja push inc xchg sahf dec incb dec arpl lret jmp repnz jg inc jns mov and sahf inc aas (bad) or mov inc push push pextrw push jmp add std inc rcl andl dec jp roll cmc mov das dec (bad) jp xchg push jge cmp enter pop add or fwait sub jmp adc mov test mov in sarb sub jle pop adc scas std out repnz push push scas imulb stos sub adc sti cli and dec and mov dec lods jp iret shrl ret push or push fs cmpsl nop imul xor lahf push jp dec pop lret push cmc sbb pop sbb sti sub (bad) mov (bad) mov xor add dec lret pop xchg mov dec xchg mov leave (bad) arpl or sahf bound insl out test adc or cs rcll cwtl addr16 int call stos aaa leave add inc push sbbl (bad) push push pop push cwtl enter out ja mov (bad) iret jg std dec sub xor and sub and inc cmp mov mov xchg mov mov sub arpl and fild adc std push or mov js or push mov jg push xchg aas nop and xchg push (bad) loopne rcrl pop pop stc hlt xlat sti into out xchg sbb sbb (bad) jne pop push or inc push or xchg lret pop test pop sbb popa ret push fimull (bad) or xchg loop inc push push xchg aas or pop dec push push push pop ss adc push incl xchg add jp xor imulb xorb cmp mov push (bad) into cmc call xlat push dec xor fcoms sbb mov xchg stc clc pusha inc and mov jp add lahf sbb aad xor nop mov adc or add daa loopne out test mov ficom leave inc frstor jb adcl jb (bad) frstor lahf je pop shlb int3 add and lret ret xor popf rcr insb cs add mov xchg add gs aaa sub pop push sbb mov jno jae mov push mov int3 dec bnd dec xor fnstenv outsl and hlt pop push aaa sbb xchg inc add sti xor pop repnz jno mov pop push sub mov cli cld dec aaa shl inc and adcl test orb pop lret mov and and pop int3 daa inc dec add cwtl inc jge and popl andb add xchg repnz xchg adc push push imul clc sub popf push sub pop repz ret testb cld pop adc xlat add pop add add fsubrs test dec fidiv dec push inc adc imul add stos mov rorl adc pop pop jb das push pop xorb and neg ja ret push jl xor inc add test pop popf sti xor push pusha inc mov dec add inc dec jge test push mov sub push sub mov or pop jmp and mov (bad) push inc bound pop jno jmp hlt test cs lret int3 popf xchg xor flds inc or dec xor (bad) cli pop jecxz xor push cmp test add push add ret das into aad movsl ret mov jmp jne sub sti mov test or jp pop cli je decb mov lock add xlat sbb ja out jne fmul imul push xchg push and insl jg in dec popa ljmp lret incb cmp jp and arpl in lcall xchg inc js mov push xor xchg pop jbe push (bad) pop int test idivl je fcoml imul mov shll push or fildll lea or pop mov cmp es fisubr pop jnp out ljmp pop pop out je and mov add or dec scas sub cmpsl jge sbb mov push lcall jle sahf sbb and push push inc es in jl jb adc fs stos inc sti push jp pop and lods and sbb cmp mov push pop das add ret push fisub or cli into (bad) adc push imul sub in out movsb xchg js dec outsb dec ja cmp mov inc test push scas and dec push dec or not ljmp int3 jmp imul sub adc cwtl clc or inc dec sub (bad) push cmp add sub jmp inc jb jo repz add cmp pop mov shl pop sub (bad) lcall (bad) inc clc xchg jl repz pop add xor dec sti out inc call push imul sub (bad) das mov je cmc mov add out dec or xor mov popf mov xor sub arpl dec stos xor outsl aam cwtl out mov fisttp or push pop fimul (bad) xor dec outsl test pop out daa pop mov push fcoml push mov xor mulb inc mov sbb ja lods outsb add or aaa mov daa push add dec js pop mov xor enter sub inc ss cli push push jmp lcall stc and add pop sub pop dec movl mov shrl paddw andl repz imull or sbb xor push cld pslld sub mov hlt sub pop inc addr16 mov xchg (bad) sub outsl mov jnp jp and orl add jg mov popa aas add cmp jb test (bad) lahf or outsl inc dec adc push push jle cli mov pop dec push mov adcl clc (bad) adc mov or mov scas fwait mov ret jl movsb adc add jl movsl scas repz in inc or pop scas loope jne loopne call and stos mov in in popf push xchg cwtl mov cmp mov ja and mov pushf in adc lahf mov pop adc cmc jge punpcklwd xor xor ss xchg mov inc mov jo sbb and daa nop test rorl in push enter xchg std jle mov repnz adc push sbb in pop sub xchg rcrl pusha ja dec cmpsl xor xor pusha outsl push sarl aad xchg or scas push cmp jnp jle or andb push xchg push push les loopne mov pop jge imul sbb xlat xchg or pop les pop (bad) divb data16 cwtl sbb or and jbe dec fdivrl pop push popf lock lock adc add outsb adc mov and mov das add cmc jp arpl stos daa pop test dec fsubr jg sbb mov xchg or scas pop push loopne int3 mov gs out scas push out mov pop mov fcompl mov or (bad) in ror sub lock mov je daa popa or mov and or rolb imull jo xchg int imul cld loopne (bad) or mov int3 and in push jle idiv lds xor pop lcall adc icebp jnp push out lret nop jg fldenv adc jno icebp sbb cli xor ret add mov decl outsl and into in and jno jne (bad) xor scas in cmp not inc push in jmp lods pop ss pop lea cli push fdiv inc jns mov jno ja addr16 mov (bad) jle push add pop mov sub add add mov cmp inc jbe jb dec leave pop mov out cmpsb mov push jb mov mov xor jbe xor (bad) push jne or int lock mov mov loop fnsave lds aam pop test das int cmc stos xor dec dec out jb mov xor jne xor or xlat mov mov jae (bad) or pop js (bad) pop or jge sbb xchg lret inc movsl dec mov ret icebp lods addr16 daa sbb push ja mov dec test andl sbb int3 pusha repnz cltd cmp test clc push pop pop mov jmp lret jb push mov es sbb fcmovnb sti cmp shl xlat (bad) cmpsl or dec jo pop stos push popf pop lods adc or jl push (bad) mov ds mov das xchg les (bad) pop push cld push (bad) das ret pop sub out adc call divb push scas jle add ret and jl jno nop sub push mov xor and pop adc sbb ret pop outsb mov test (bad) mov int out inc icebp ret ja mov push cmpsl daa xchg pop je mov dec mov pop xchg sbb jbe jmp cmc ljmp or push test sub inc mov mov call push mov fisttp test iret pop fdivrl add mov (bad) out dec pop les push jb jno aas dec xchg mov sub rorl lret imul jb ss cli jo ljmp pop out jno test adc mov lcall popf test jg dec repnz pop mov mov jae loop add pop mov scas sub in lret push mov mov or insl (bad) cmp dec fwait es jecxz sbb jae dec jl pop sub push ljmp cmp leave jmp rcll cmp out pop xor jg (bad) repz and adcl or xor sbb lret jno push or adc jns lds inc js dec jg push cmc jle push popf jne ljmp adc mov rcll arpl bound sbb mov push pop scas xlat repnz addr16 in enter dec scas pop jo jecxz or sarb (bad) sub mov rorb (bad) xchg imul mov stos fcoms push aas inc mov mov sub sti (bad) mov ja push std into mov xor add xor int3 push pop cli push mov lret pop aam test mov negb add aas mov sub orl mov idivl xor test lods push iret dec pusha aas or sar jg push out push in jns lods inc rorb (bad) jge pop inc add rorl (bad) mov xchg inc fcoml (bad) and shll add mov lds or outsb cmp rolb sub mov mov xadd aas call sahf stos outsl inc xchg add push mov jg int3 jns cmp outsb sbb int3 jle jle jg xchg or out pop and pop or pop pop loopne push push cmp push or xchg mov or sub sti or ja jg mov lock incl xchg or pop das cmp and cwtl fbstp pop and in (bad) xor add mov push hlt call call mov add xor pop push xchg push fxch iret sub push xor pop in sahf push pop cmp into sarb mov loope inc jnp xchg ja sub dec idivl add and addr16 ja dec lods or and mov leave xor pop nop pusha cli ljmp or sub xchg leave enter pop and mov sarb pop aaa test rcrl push (bad) pop pusha inc adc xor pop sub push pop push jmp repz push imul pop stos adc pop mov sar inc gs decl sub or cmp ljmp xor (bad) inc sub adc or (bad) pop pop inc lret fcompl and inc call ja mov les jno ljmp cmp addr16 loop lcall test cli dec lret ds cmp sbb sub mov pop repz push insl and lret push sti ljmp mov js loopne insl adc pop cmc add jns fadds sub mov adc xchg outsb movsb adc out dec stc movsb out jecxz mov push shrl cmp lahf inc imulb add adc hlt jnp iret scas jno jmp outsb jge push ljmp adc push sahf and jge xor cs mov xchg stos cmp lods xlat xor pop sub jbe mov loopne shl cmp ret adc imul cmc movsl inc arpl push punpcklwd ret in leave xchg stos push pop mov or pop (bad) fucom jp cmp pusha lret loope or sarb or ljmp mov outsb lds jle insl add int cs mov pop (bad) mov into loop jne stos je and repz fs stos add mov inc test cli pop cmpsl test or imul fidivr sbb or adc notl fcomps popf push pusha push movsl push jge mov lods icebp js pop in jp sbb mov das xor inc xadd int mov inc or inc leave xchg push mov dec mov jge pop les movsl shll mov xor xor das jg fimull inc push or negl adc adc scas nop cli lretw cmp or xor inc aaa xor pop orl mov pop hlt mov push (bad) and dec mov or sbb ret iret dec cmc sbb and pop int lods push fs dec cld mov dec push push nop jo sbb inc push pushl icebp add push pop (bad) jne inc addb lahf int3 push dec repz pop xchg leave or jg shlb (bad) cmp rclb int3 sbb or aas and xor ljmp mov loope pop mov sbb outsl add mov (bad) dec xor add lock cs ret movsb cmc xchg cmp jno sbb jg std jno mov sbb add rclb inc jge dec icebp aas mov into outsb or adc mov pop mov imul fs fbstp out push (bad) popl popf lret icebp arpl aad mov pop push and movsl pushf ds jl in add add loope dec inc sub inc int inc cmp imul out mov pop ja rclb sbb jnp es mov mov inc cmpsl inc ret inc dec imul ficom dec decb push jg mov mov sub rcrl pop fstpt adc das dec loop gs test cmp lds dec jl mov or push jmp and pop fist xchg jne mov pop jl int jle sar jecxz xchg insb dec mov insl pop fs jmp add push push nop add rorb pop sub cmc sbb lahf xchg jecxz or mov sbb ret int3 add mov and (bad) xchg not aas in cltd nop mov aas or popa std mov and xor fdivs mov xor cld hlt pxor xor lcall int3 insb scas adc push xchg push and add (bad) jno nop lds scas mov (bad) xor ficomp push (bad) jecxz orl xchg or xlat mov mov lahf push and xor mov add mov jmp push jle xchg mov inc stos adc push aad fs push icebp imul das aas jg dec add sub pop out push add add add push stos xor and inc dec push jmp jmp jmp mov mov cmp cmc adc adc ja pushl in std jle mov cmp ret sbb or jg lock sbb and loop mov push sub push jne das mov pop clc ljmp arpl sub cmp int3 sub aaa je add and cmp push clc imul pop jae adc std cwtl rorb test adc push lods dec pop jecxz movsb mov dec sti lea add aam cli dec pop inc and mov xchg testl rorl dec add dec xor push or (bad) jecxz mov add lsl jmp (bad) push cmpsl negl ja jecxz push mov mov xor inc push sub (bad) adc das pusha popa mov mov and xlat out inc fwait and loopne popa out dec and sbb push pop push adc mov sahf sub xor push dec movsl stc inc mov ror iret add aam jecxz cmpsb pop push mov add mov add enter push (bad) ds mov pusha dec popa push push in and jp cli ds aad or andl outsb hlt add inc push scas loopne jp pop dec sub mov lcall movsb xchg ljmp das pop pop dec xor insb add jmp jmp mov push (bad) jns jnp ss adc lods cmpsb out loopne xchg jns das xlat nop (bad) lock adc cmp mov loope jb xchg jl popf adc cld into pop cmp pusha pop outsb xor idivb lods or lret cmp stos lcall lret and pop add in imul mov sub stos xlat add call jl fidiv cmp mov int dec roll cld sub mov pop cltd cvtpi2ps test add jg das pop popf imul mov fwait push inc subb push inc mov and jae daa push cmp push (bad) ljmp adc xchg pop pop test cli mov out push xor test (bad) jg dec hlt push ret imul (bad) rcrb fyl2xp1 orl push jle (bad) pop cmc mov mov js ds mov lds add xchg inc jg aaa add js repnz xor fwait jmp outsl or push xor pop dec xchg in push sahf xlat inc jae xor (bad) xor pop icebp mov cmp mov push mov or lods in xchg (bad) mov jg jle pop mov adc xlat scas lods mov and fistpll sti mov test rclb popf cs in cmp test pop scas test movsb xor inc scas je das sahf sub mov (bad) or or dec out loop adcb jnp std adc rcll sbb jns cmp xchg xchg flds xor in das inc push push fs in jl rorl add push les movsb adc sub inc pop mov fdivrl (bad) mov (bad) ja jmp dec or push jp pop adc adc loop inc adc push add scas js pop cmp or out sub dec add pop and jo adc push cmp push xorb or xchg mov jg loop (bad) dec cmp jge and lret jbe pop push loopne pop setno stc repnz jno scas mov cmc or mov int sub fldenv xlat dec repnz leave mov ja icebp mov xchg jmp out jns inc mov mov scas pop pusha hlt js push sbb add daa jge pop jmp pop jge orl or push aam mov xchg out mov jmp pop xor pop mov in cltd cs sbb mov ljmp lret inc (bad) jg sub inc ds movsb sar es pop lahf (bad) mov or add repnz add cmpsl mov jg and into daa pop (bad) loopne (bad) adc xchg sub out out jns cmp sub dec das sbb and and add xchg nop push enter pop adc jne mov sub inc in cmp jl push scas xor and sbb in in mov push dec jp into add mov sub sub adc push popa das mov dec inc call imul cmpsl add jnp sub add fisttp ds int push mov push loop (bad) mov ret dec (bad) pop mov (bad) dec jae fwait adc mov push sub jo sbb das addl inc (bad) push in inc or daa popa cmp add dec (bad) loopne or js xchg xor cmp sub and rcrl mov ja clc xor imul jne sub call in cwtl push sub add dec inc call dec call in stos xor jne mov jp imul xchg adc cmpl and xor xor add shrb jae (bad) (bad) add cli mov pop pop pop mov imul sahf inc mov lcall fidiv push sub dec inc fistpll mov aas (bad) fcmovnbe xchg pusha xor les push scas jmp pop out and movsb fld add xor jbe jecxz or testb add mov cmpsl rcrb std sbb xor push adc pop sbb cli nop (bad) arpl imul and jo mov cmp push push bnd or sahf cli xor mov cmc mov push or sub sahf rcll pop dec repnz add (bad) inc loope sub xor adc mov pop mov ret push sarl ljmp stos fcmovb mov cmp inc clc lds dec xor jno cld xor push push mov pushf out push inc jns xor ss inc jne cmp push cld (bad) cmpsl push inc mov inc nop xlat outsb add lds sub xor and push pop cmp in fistp ret adc add mov xchg adc test ret test ret stos enter pusha inc xor jb iret and sti dec (bad) ljmp adc sub loop mov notl scas out mov (bad) cld cmp nop add inc add int xchg rol xchg pop jmp out cmpl imul jbe inc lret stos add ljmp pop xlat inc mov and movsl mov cli repnz mov fldt jecxz sub iret mov test andb mov and dec mulb xchg mov push adc jo (bad) push insl outsb ja fucomi pop popf fbld (bad) pop ljmp (bad) or inc cs dec mov out outsl jle mov pop lock iret cld jle lcall and mov mov cli (bad) xchg inc pushl fcompl frstor out jge jne dec data16 es mov imul mov (bad) xchg fbld shrb movsb sub push es or lret cmpb sbb jmp xchg mov aad cmc or pop cwtl add popa pop push push push addb sbb (bad) mov lea jge mov push pop sbb fnstenv cmp mov pop and repz mov adc mov xor rorb push orl push cli movntq push mov stos fs scas stc pop out imull xchg pop mov into sahf and addr16 dec out (bad) dec push cmp mov dec fnsave inc add xor mull xchg push inc ret pushf mov outsl xchg and pop pop mov cmp sbb push scas push adc inc push mov mov jle lret xor repnz push pop and aad and das jns rcrl and sub (bad) rep dec shlb sbb popl inc or mov dec mov sbb xor icebp mov daa dec jmp mov inc jns cwtl mov mov sbb sub icebp sbb sub add jno sub xor sahf test popf inc rcr inc dec mov (bad) daa push push int outsl xchg xor (bad) mov cmp imul add mov insb pop fisttpll inc lahf xor xorb jmp mov jno imul scas or or sahf pop aam dec rcl adc xorb scas popf enter sub push add pop shl add js lock add lock pop mov aaa enter je and enter inc adc push ret push xor jle (bad) mov loop fistpll dec mov inc mov add aas jmp add in in (bad) in std xchg rolb loope (bad) fistl jb mov sub imul sub cmp cs pop das sub leave cmc jnp and das push push enter sub ss dec or in hlt mov pop das stos orl cmp test or clc insl or rol or mov adc mov mov loope adc stos push dec adc fwait xor mov mov mov insl test movsb or push lods ja mov push or aas cmpsl pop sub mov nop fisttpll rcr arpl (bad) outsb push loop subb mov cmp inc jl pop std pop pop (bad) lahf and xor add jecxz leave orb lcall lahf add jnp ja jmp mov loope pop pop jmp mov sub call (bad) mov je mov xchg xor ja add pop xor jbe cwtl inc or test mov cmp leave jmp sub jge add pop mov add fdivl push call pop repnz fimul lods or in in push or xchg ja xor fldt fbstp scas inc xor jg pop (bad) (bad) adc pop cmc bound std test inc mov add xchg jp dec sub dec mov and call ret mov dec out or lret fistpll das imulb daa loope fnstsw dec and loope adc sti lret stos adc mov movsb out out inc arpl sbb sbb mov pop dec nop andb into xchg rorl cmpsl or sub fcmovu adc dec cltd adc jne cmp (bad) jnp or sub jle sub mov jp sarb ret rolb dec outsl loopne push jmp cmp sbb adc pmaxsw out lods fstl test arpl add or or cmpsl mov jmp je pop xchg xchg (bad) mov test push pop jge xchg xorb xor int3 ja repnz ss pop (bad) fs inc mov sarl sub dec mov jg divb xchg rcrb sahf jo clc ret push int sub lahf (bad) loopne lods popf jmp mov or arpl (bad) aad jae xchg daa sti jle das cmp jo pop sbb xchg add inc aas cwtl hlt pop xor push push adc lahf (bad) (bad) bound sbb sub add jb mov push loope sub jl mov sbb testb jl push pop inc lahf mov xlat test lahf out ja rorb add mov repz mov pusha cmp add xchg out jne scas mov std jnp push loop jno aad push mov push into cmpsb cmc sbb pop hlt cld pop push mov rcll ficoml pop pop adc push sbb push mov aas xchg ja shr (bad) repnz push add cmc xor lahf add (bad) outsl xor ljmp cmpl sarb jb mov add rcrb ret mov inc ljmp out clc pop mov mov sti push jmp in or pop push jmp lods cld rorl sbb push paddusw xor jge xchg lcall mov int or cmp cmp fdivs jge xchg popf jae lret pop es fisubl mov adc popf ja add lock xor jns cmp stc outsl (bad) data16 and (bad) mov cld push push rcll shrl fwait std into xor stos mov pop pusha jp push xor dec orl lods jle mov dec sti sbb push add mov test pusha loop cltd jecxz popf ficoml std ja xor outsb mov sahf or pop test xor icebp shll loopne test data16 out sbb inc test scas jle mov clc dec add jp lret push and and mov fs idivb mov std sbb adc dec sti movsb jmp sub and dec ljmp push adc xchg popa scas lret mov xchg mov repz shrb inc xchg adc push add repz mov pushf (bad) xchg jo or jl jg and mov mov mov in ljmp dec pop xchg mov jnp ljmp jnp and mov mov or push in sbbl push mov mov inc hlt xchg bound loope adc inc xor jmp movb push mov sbb ja and (bad) jb ljmp sti xchg stc aaa add pusha in mov std fstpl or and outsl movlps cmc ja addl jmp push out (bad) fcos jno push push mov mov loopne lret jg aaa push mov hlt jp negb mov int pop push mov or (bad) mov sub sub adc jge pop fiaddl rorl inc pop mov adc mov iret inc push andb push inc cmp push xor and ss inc push jmp ret outsl (bad) (bad) pop je add sti jg cli jnp out inc dec and aas and popa xchg cmp cmp xor inc add je test lea mov repnz sbb sahf mov sub shrl idivl or and sbb (bad) add and arpl and or sti clc jb lods or arpl jge pushf push popf ja ja push cli cmpsb mov andl mov ljmp push xchg imul pop pop (bad) popf repnz pop stc das movsb fisubl in add pop mov repnz jle pop rorl clc testb or push pop cli imul jmp jle add inc or mov lea adc je inc add or mov sub lcall mov pop and test dec fadds movsb push jns push addr16 sub cmp inc (bad) loopne and jl cmp jb jo cld mov inc pop xor movsb sub mov fildll stc and (bad) push or cmp xchg xor (bad) js es push (bad) cmp call test cs jg mov jns pop add add outsl sub jmp xchg les jg sbb push sbb test jne mov test jns cmp pushf inc (bad) loopne ljmp pop leave add mov pushf idiv cmp cltd adc cmc sbb sbb out mov push (bad) mov stos sbb rcrb pop pop xchg xlat xchg sbb and imull xchg insb dec or xchg lcall jno les test lahf dec jge cli add rcrb inc push pop mov xchg mov lahf cmpsl mov and les ljmp xchg dec clc dec vmovhps sahf jge push mov cld pop pop outsl adc cli xor jmp loope inc in or fisttpl or int3 aad xchg loopne cmp out adc inc or dec out cmp mov xor jmp dec xchg js and mov dec rolb fldl2t enter xor notb inc idivl jmp jnp cmc and psubsw ja ret ljmp mov push pop cmp cs negb stos jmp icebp pop fnop pop or mov add addl out push xor insl or push clc jbe clc add or cmc adc or inc inc lock fidivl add pop popf sbb mov mov fcoml lahf daa and hlt cwtl nop cmpsl sti push es cs mov adc sub jmp mov pop fmuls fwait pop out jns pop loop mov xlat jl stc into sbbb and or xor inc adc add (bad) jmp mov push push push cmpsl xor adc pushl fwait pop and or pop leave jge enter cld sbb jmp push into stos or cmp pop or dec (bad) jmp cmc jb negl push or pop mov sub (bad) and jmp jg out mov or lcall stos mov push imul popl inc sbb cmp add bound dec outsl mov out mov orl xor xor fistpll xor push arpl add cmp dec stos xor aam test aas or sub aad ficom sbb add jge add mov (bad) pop jge jb mov jg bound lret cli pop mov jp dec mov push xchg add in xchg call mov fisttp sbb xchg xchg mov sub (bad) mov add jne rolb push lods jno and leave cmpsl push jmp jb lea mov mov pusha popf push jl aam dec or lods add adc push pop mov push iret and fs lods dec inc or and jmp lahf push adc loop or jae addr16 mov gs jnp cmc jmp mov or push mov sbb (bad) movsb mov or sbb push push jmp outsl dec imul fstps jmp push xchg lods iret mov ljmp (bad) imul add pop repz xchg addb pop mov cmp add pushf mov jmp in (bad) rcrl xor add sub daa or push daa cmp shrl lret adc xchg mov push movsl (bad) bound xchg xchg and fldcw aas and sub icebp jecxz pop sub lea sahf pop sub cmp sbb mov pop xor push neg inc pop sti or jmp in pop pop cli imul repz push and adc pop movl pop movsb mov cmpsl inc mov inc movsl or stc out in jno ja iret pop xchg or xchg repnz dec or aas mov jmp jns pop jmp les les push pop mov mov sbb (bad) or pop push lahf sbb aas aad pop pop adc jg (bad) into xchg jae and movsb mov sti dec (bad) in and add icebp sbb mov in add pop sub bound negl mov jp (bad) and mov add cld popf jnp insl aaa push scas arpl das test stos dec call cmp stc pop and fisttp mov gs push pop mov pop cmp sbb rclb xor fs nop stc aas outsl dec andb mov cld sub adc ret sti popa lods jb push sub or jnp sbb xchg jmp popa mov mov lret jp es dec sbb xor orl insl sub pop (bad) cmp pop pop aaa jecxz cmp or stc test pop push pop je sbbb jg pop jmp dec (bad) jb (bad) outsb push loope sti mov jmp or sub lods lret and add push mov ds js lahf pop arpl jmp inc fisttpll add push repz outsl mov mov add jmp rcll mov sbb scas dec dec push jo dec sbb add mov into xor sbb jl jno inc sub jmp fimul and inc fistl cmpsl or popa adc aaa add std jbe or sub or pushl nop ret pop cli dec cmpb jge and stos mov sub je dec push rcl sbb out roll mov cwtl push jmp push fcmovnu inc jmp push leave (bad) adc cmovns sbb push add das cmp roll xchg dec lock test loop ds outsl std cmp xchg jns ljmp outsl push add (bad) inc (bad) mov aad jo (bad) nop pop iret es imul push lret or add push popa lods and inc add sahf outsl jb loope xor cmp pop mov sub dec sbb lret mov or jg (bad) negb lahf inc int mov pop xor negl and and in (bad) fcompl pop xor adc pop sbb sbb or push push pop ljmp popa sub (bad) push xor adc pop add dec lock repnz in adc cmp stos mov mov mov push or sbb aad test mov mov adc shll pushl cmc sahf imul inc je sarb add xor mov pop repnz xlat and mov enter add or add add pusha mov and clc jmp xchg pop inc (bad) mov notl sar sub pushl cmc and push mov imul fadds or nop pop push pop or sub sub scas repz (bad) jmp xor mov daa ds jg mov (bad) in cmp out and xor jmp mov (bad) jae (bad) mov push cld cmp das pop mov mov mov pop jo or subl adc inc sbb iret xor int mull mov pop jge fcmovne mov xchg add xor xlat enter mov pop aam push xchg sbb add popa jbe std sub rcrb js fstpl mov cmc rcr ret or pop pusha fistp sub roll xor push jo xor out mov int mov push jnp add pop rclb fcomp stos cld es mov cmp orl dec cltd sub adc popf and adcb sbb sub iret adc int3 push icebp cmp insl inc dec xlat addr16 pop rcrl sbb (bad) mov mov push push pop mov out add nopl dec out loopne mov aam sbb repz int3 push enter push out jo xor testl push ret add rolb test xor popa jns mov xor rorl int3 sbbb xchg adc or pusha and sub sbb int3 or fiaddl jo sbb roll push mov pop popa or mov cld add or (bad) adc and add jns ficoml inc and dec xchg mov (bad) jl lea lock cmp mov or add cmp and pop js mov cwtl cltd push mov fisubl popa push xor imul outsb orb inc shlb add divl sub aam or inc loopne ret and mov mov mov cli sub ret int3 push jle int3 int mov andb or hlt adc add xor out push pop not mov lds dec movsb push add movsl aas xchg sbb sub cltd adc push test daa jg push sbb mov (bad) aas pop test sbb sub aad in add cmp xchg nop push add notl aam pop faddl addr16 pop (bad) pop sub int adc and adc pushf jmp sub push cmp cld push xor loopne dec lret or and mov mov iret and mov clc les jo ret dec popf or mov jae push mov (bad) sbb (bad) nop ret or or xchg sbb iret xchg add mov popf mov jns mov lods pop cli sbb mov sbb imul das dec mov mov add sub test rolb (bad) fsubl dec aaa or xor adc or sub adc and dec subb scas mov lock lcall sbb add jle sbb out add mov cld and clc jp or aas repnz inc (bad) bound and dec mov inc ds in test aam sbb sub cltd enter sub cmc xor js fs fs sahf pop inc inc push mov mov add pusha mov adc dec lcall enter dec mov lret mov popa mov out xchg sub or cmp scas xor cmp iret lcall jle mov sub sarl ret popa cld dec lods fisubr call inc add in orl xor cmpsb sub insb inc mov jg int3 (bad) cmp (bad) or fs or outsb rolb nop (bad) mov imul in xlat repnz add inc inc pushf shrb rorl or mov sub xchg sub in cli add enter stos loope or mov (bad) out push rorb xchg pop mov in aaa test inc cmp mov add lahf and out mov or add cmp sub sub mov (bad) rclb push adc ja adc hlt inc popf cmp add sbb in aam fstps aam scas add mov imul jl mov push mov adc into cltd test sbb jmp add add adc (bad) aam sub mov pop xchg test push int3 stos adc xorl test sub adc stos adc and ror mov dec hlt add dec mov xor stos (bad) loopne mov xor movsb (bad) xchg push and pop mov mov std inc js xchg mov cmp aam in les lods (bad) mov mov test mov (bad) dec mov inc add push xchg inc inc movsb gs test dec and cwtl pushf jl sub ret xor aas or popl cwtl add insb js jmp in dec mov mov mov je push cmp test sbb iret clc mov xchg cld push adc push push sbb push invlpg shll pop int3 (bad) xor sub cld and sbb add shlb leave mov inc or xchg out sub nop pop dec addl mov inc pop cmpb mov dec mov ret (bad) and shlb add insl leave and adc and mov xchg push sbb cmpsb sarb mov test cwtl insb inc aam add lds rcl lock inc and lds mov adc sub cmp xchg cs dec sbb add ss cltd mov pop add lds ss cmp mov repnz mov fs ret js jo int3 je bnd mov and jp push xchg out (bad) mov insl mov fwait pusha stos fs popa or lds and jae adc pop test dec xchg int sub test xor adc movsl clc inc xor (bad) adc call and arpl jns adc test mov mov int3 dec xor xchg pop adc push cmp daa add fist es xor dec fldenv dec js pop add in mov add sub das and xor pop push mov mov loopne mov std pop rolb addr16 push push jns dec cmc movsb sub outsb push mov pushf es and or mov ds add test pop daa cld test or and repz mov jns fdivr mov (bad) lods (bad) hlt mov js int3 xchg mov push push pop (bad) arpl fdivl pop push (bad) mov rol fidivrl fmull xchg and add add rorb and mov inc dec sub push dec pop es in pop cmp scas lds add mov add int3 add arpl push cmc subl xor sub push les sub sbb mov int3 pop outsb pop hlt add cwtl rclb sub push pop add xor (bad) cwtl inc mov or or dec sti stos fildl cmp push jns orb cmp (bad) mov std jl sbb aam (bad) aaa sub es cwtl jo scas cmp test in call cld lods jg push pop mov adc jnp xchg push and jecxz dec insl movsb dec cmpsl cmp scas mov sub xorb pop (bad) xor or fs int mov or sbb enter push test xor or movsl push add dec lds sbb loopne loopne movsb add mov add outsb ja enter hlt int3 jnp repz mov mov add leave adc add adc popf adc push mov xchg into jnp cmpsl (bad) stc roll jae in inc pop movsb call cmc sbb call xlat cmp add push mov pop mov xorl sbb jo (bad) jp into cmp loopne add ss sub shlb cmpsl pop push rolb nop mov nop adc jl imul xlat sar sbb cld vucomisd cmp jnp orb xor lods orb dec mov xor roll pop cwtl pop adc xchg cltd push (bad) lahf add pop mov cs cmp jmp in cld addl mov adc sub int3 add andl sub popf push daa shrb fbld lret mov mov ret lods mov or sbb push mov mov test jne popf push adc xor xor in faddl or mov xor pop decb cmp mov fisttp cli or cmp push lock sub inc jo xchg push loopne jmp repz mov scas jl nop inc clc (bad) iret mov jmp adc fiadd adc aas push lahf or dec add cmpl xchg lds jno pushf (bad) clc dec test push std or mov (bad) clc mov mov mov (bad) jge clc fiaddl cli sti mov push ret ja das (bad) sarl inc jle fstpt repnz ljmp add inc jp xor jg add xor (bad) cmp add out xor ljmp jbe add add pop rcrl pop sbb notb inc add imul nop add call jae cmp dec test dec pop test insb hlt fstps and popf jb lock ljmp add test mov je je xor jp popa imul hlt jecxz or mov test xor and lret add and xchg pop dec pushf and sbb add sub lock push inc scas mov addl push das or mov pusha sahf push push push lcall stos mov (bad) and pop and dec ret testb repz mov xor fild cmp jle mov clc sbb inc dec sub mov aas ret insb add data16 inc mov push xor jns loope rcrl sbb cmp fst xchg mov pusha and enter jecxz sub shr mov imul push add sub icebp bound dec lods mov adc sbb jecxz adc movsb enter std xchg loop movsl nop push push sbb addr16 mov cmp mov xor add mov push sysexit adc lods (bad) cltd inc and bound outsl xlat mov and roll push add out sbb lock in lea inc mov cmp je in sbb mov inc add inc mov xor xchg jmp pop (bad) push cs mov js test aaa pusha ret mov in push add cli pop mov mov xorl rcrb sub shrl sarb ret movsb pop jo push adc xor adc in es sbb cmpl sahf or mov (bad) insb stos xchg cld pop test push data16 or imul pop sub mov xor xor push dec test mov sub dec jns sti mov std adc mov andb dec sub ds int3 movsl push sub dec or lret xor (bad) arpl inc add jne adc push pop lret lods pop mov adc push jg dec xor push sbb jle sub hlt pop rcll push movsb in and in xor or push add js mov rcrl adc cmp sub mov adc mov mov (bad) dec adc sbb (bad) mov in mov adc aam sbb pop xchg mov clc add loop xchg mov rcr inc insb adc cmp lret jo mov cltd sub pop push test mov pushf or fs pusha jl les ljmp out rcrb sbb jecxz mov mov aam rcl hlt add ds fsubs sahf icebp add sbb or aaa (bad) (bad) repnz cmp sbb les and fwait xorb push lock js jno lahf test dec xorl or movsb shll in int cli (bad) mov ret outsl es dec sbb cmp xor xlat ss and add adc stos in xor xor dec push sub mov jo add mov and mov lock lock mov test arpl and mov push and add jne incb lcall adc ja fs mov inc pop mov push (bad) mov movsl mov xor hlt cwtl cmp pop and push push pusha aas out fstpl pop aaa mov jno fiaddl push sahf dec movsb das cwtl mov mov pop pop test mov nop xlat push pop (bad) mov loope push faddl add cli sub (bad) push add popa mov xchg nop fwait or insb pop dec add out (bad) add sub xchg and dec lods xor mov test (bad) mov sbb push (bad) lret jnp add mov and xor test inc clc or out sbb dec addb inc mov (bad) dec bound imul sub lods cmp pop fist into sub dec incl fsub pop fs hlt sarb int test lea push ljmp insb xorl dec inc add dec in jns test mov jp or clc (bad) call aaa xchg popa lock repz clc in mov mov pop je jns xor out aaa or adc mov push mov mov pop adc add mov adc iret clc add jl in loop daa or dec cmp call je ds js stc push mov shll inc mov push mov adcl (bad) jmp loope lods (bad) sub int3 sbb pop mov xchg xrelease pop (bad) faddl inc fisubrl mov adc rorl js aad jno mov (bad) enter in add adc fidiv xchg and xchg enter bound mov pop gs dec push lock cmc add ret test mov stos adc xor loope sbb sbb xlat int3 (bad) xchg test push inc cmp inc jl insb jb pop mov fsubs mov rol xchg sti mov shlb adc test add out popf fucom std push subb add mov mov call in mov mov bound js inc sub adc jl and aad mov negl mov bound sbb pop cmp dec adcl sbb sbb xchg loopne aam jo xlat push push test orl push call fadds lods daa lods fs (bad) mov dec repnz out fsubr inc or pop push or aad inc mov outsb and aaa dec cmc popa sahf lock add dec divb xchg add and add pop pushf jecxz mov inc clc sbb movswl dec add mov pop pop int lods jbe (bad) jns inc jmp nop sbb and inc mov sub rolb mov add bound cltd dec loopne jp pop pop in xor dec inc sarl ss push hlt cltd test addr16 adc rorb pusha jo xlat pushf andb dec hlt sbb sbb imul or test nop mov inc sub sub cmpl add bound pop pusha aaa jmp test cld and repz add andb push inc mov jmp mov inc test pop lock in test (bad) mov loop rol icebp cmp add sbb mov jl inc lahf adc shlb cmp mov es push sub cwtl add mov in les jge arpl mov dec jl inc pop mov sub and cltd pop add pushf push push adc dec js or daa jb adc ja adc cld cmp adc sti dec (bad) aaa and and push dec add out pushf ja mov fsubrl andb int push cwtl mov adc jno add loop jo nop jno into pop rorb lods dec adc jbe cmp je jae dec push loopne sub sbb xchg sub mov pop mov test adc mov nop adc mov and xchg (bad) icebp add add jnp ficom ljmp add xor frstor loope add mov jbe add pop sub lods mov cld inc adc sub aad jns ret sar inc in scas nop hlt pop mov test xchg clc mov or lahf or sbb scas mov in pop jo cmp push sub and xchg adc jnp add (bad) stc pop push int3 clc notl cmpsl pop dec cmpsl add in sti adc jge push dec in add push std xchg pusha add je jl dec cld mov fs js cltd adc mov popf pop mov lds (bad) jns andb cmpsb mov dec jnp pop scas xchg nop or jle add call sbb push lods jne mov sbb sbb data16 pop mov (bad) jo addb mov mov negl dec rolb je (bad) or push push and mov mov scas stos jecxz pop movd int das xchg pusha mov cld popa add jmp xor adc je adc lock add and and inc dec and pop loopne (bad) jecxz jge push fisubl sbb ljmp push mov into xor mov sub rorb add jge inc pusha lds cmp cwtl aad in cmc cmp (bad) repnz xchg fdivr push xor and sub pop mov sbb add push movsl (bad) xor sub gs mov clc addb or (bad) sbb pop clc jo cli movsb dec add addl inc ret test dec shrb andb adc cmp mov sbb jle mov div add mov test (bad) pop push inc lds add out push add lock cmpsl ficom js out sbb fimull push pop add and adc lock add sarl sub je test mov mov mov scas push fs test mov out das sbb movsb sub testl in cld test pusha mov add add call subb pushf cmp mov add cmp insl pop scas add shr orl rolb cmp mov push fisubrl xor push mov and cmpsb ja jnp jmp int mov add mov xor mov cltd sbb jo mov jge enter mov mov add bound aaa or fistp sti imul cs test push mov sub dec jl vpshlb cmp xor xchg out test shlb xchg jbe nop cmp (bad) mov xor sbbb pop xor stos in xor sbb or rcll outsl mov adc and jbe push jo add sbb nop stc mov call nop lock push popa leave xor or add or xor fwait cmp test lods out cmp data16 xor rolb std add add (bad) cmpsl pop dec (bad) int3 xorl je pop sahf push mov xchg or push push movsb mov cmp (bad) adc (bad) push in add clc icebp les das loopew movsb stos xlat dec les dec add xchg arpl xchg es jge in add lds add adc jg popa add xor cmp mov push inc pusha push xor arpl xchg je xor fsubl adc jb jns sbb dec cli or (bad) lret popf and mov dec les dec stc rolb fadds dec add rcll and in xor dec adc iret add lock test add loope out add mov lods nop add sbb push shrb and or clc inc pop add pop cs mov data16 pop nop lret aaa cli add or fs mov cs clc cld add arpl or or fmuls or mov xchg push add shrl xor adc call movsl dec lods (bad) push dec dec cwtl pop nop test ja and stos clc xchg xor mov mov cmp jge or mov rclb ds or movsl test jb aam bound adc add pop adc cmp xchg shlb popf pop je pusha je push daa das popa adc push mov or cld dec cmpsl xor push and test aad jge add lods mov push sbb add add das int mov adc mov nop jo xor shrb cmc add pop cmpsb lcall sbb std mov jb or imul js or rcll mov pop ret and hlt js push fadds pushf ret rorb (bad) nop cli sub xlat pop sti popa or (bad) sbb lahf mov cmp (bad) dec xor imul sbb andl xchg pop mov (bad) into in test (bad) jno out inc and icebp cld push inc pop aaa add arpl xchg dec jne hlt imul mov mov mov lods test or imul jmp inc arpl inc in pop cmp lods dec rcll or les into jns lss sub mov in inc cmp adc mov xchg or adc out xor hlt push add test mov daa sub lea pop add movsb or and fild rclb add cwtl (bad) adc subb stos add sti xorb pusha push rcl enter cwtl mov xor fcomp push cli cmp scas dec rolb lods cwtl mov push pop js pop add mov add ss dec cli add cwtl lret dec nop and lea dec mov and insl movntps rcl dec inc dec inc das fs sub xchg sbbb cmp xchg and cmc add add sbb mov stos ljmp adc and pop ljmp mov pop lods jp cmp clc sub popa mov xchg pop sbb ret les xor sbb jne hlt pop out fmul lds add or in push push nop cmp sbb loop negl push push jno idiv popa mov mov mov sbb (bad) add sub negl outsl push xchg mov addb sahf call addr16 xlat mov dec adc mov cmpb push popa orb add fcomip or mov xor jbe fsubs xchg js xor xchg and fs push mov lock mov lahf add in imull mov movl fisub fnstenv add rorb andb movsl mov test mov imul sbb push ret in in daa out pusha aas call or sbb add dec popf xorb jecxz jl pusha add mov or movb repz xchg push mov fs mov add setb jmp sti xchg cmp insl in lea popa pop adc jle and dec fiaddl in mov cmp xchg jmp jge push sbb test dec gs into sarl inc int3 mov mov push ficompl test testl xchg pop loopne les fldenv nop adc xchg cs fwait test add (bad) loopne and push mov scas mov push je fsubrl and js dec imul sbb mov or pop in add cmpb movsb cmp sub int3 cmp inc xor fs fmuls dec aaa in pop bound int push xor in add je xchg lret jne aam sbbb cs dec mov test hlt add inc jbe xor adc in lahf int add icebp add cmp push cmp push mov dec mov lods cwtl test inc and or cmp (bad) ret xor out mov sub in fsubr cld or mov fcmovb sbb mov lods mov (bad) mov push mov and sti pusha rolb mov xchg jo pop in mov xchg lods sub cmc xchg add xlat lods pop dec enter push inc add testl adc es mov mov jle cmc dec add jmp int add inc insb shr xor insl mov inc cmp or inc shl mov inc sbb or insb push dec sbb roll mov enter insb rorl test lock push aad pusha js and jbe test sbb cmp adc push int3 add mov ror and pop sbb adc add test es aam xor xor adc sbb ss and push sbb or cld add inc add pusha shrl jecxz xlat inc ljmp (bad) (bad) ja add add sbb sub add pushf mov dec or or ljmp pop into inc in aam sub cmp ljmp fbstp push push lods mov nop addl roll in out dec test (bad) mov (bad) fstl mov pusha (bad) leave test adc pop aad pop arpl push fs xchg adc pop and add adc ss or adc add xlat push and dec inc les inc adc je mov jp or in enter sub push mov cmp cmpl and add cmp addl fs mov push in mov mov fs pop in lods add faddp mov cmp sbbb shrl sbb sub jle sbb (bad) fcoms add stc leave int3 test xchg hlt (bad) icebp loop sbb shr and and xor or daa push pop sbb les int3 ja mov add outsl leave push fwait add pop js nopl gs (bad) pop addb arpl jmp or imul and cmp sbb mov pop xchg mov sbb xchg dec and sub (bad) mov push insl cwtl add cld (bad) jecxz movsl mov or (bad) (bad) sub insb inc data16 pop add (bad) mov mov xor mov mov pop push daa or xchg mov jp sahf int3 sbb and (bad) xlat add fstps jb repnz cmp push add mov and int nop mov mov fcompl fildll and dec inc jmp lock mov xor ljmp or mov hlt je int3 and rcrb xchg out pusha adc jl std add mov pop mov fisub ficompl scas mov ja xchg mov xor jg shll cmp dec add movsb inc sub inc mov add out aad sub inc call lahf push js dec adc mov add (bad) les mov aas sub cmp mov inc push in or mov add (bad) sub test ret mov add or push mov sub lcall pop inc int3 pusha shll pop sub xchg (bad) mov lds pushf xor inc add add push addb insl in lret sarb rorl push adc or push jp push xor push push inc daa pusha push and (bad) movlps jae mov add or add scas or cmp push je dec ror cmp out dec ss or jnp and movsl in sub dec inc add mov sti push cmp nop (bad) pop out inc xchg daa sbb hlt subb call loopne pop push inc rol enter or and pop add sbb cmp and test sahf insl inc insb xchg inc inc sub jno adcb shrl push sbb jae and mov movb adcl dec jl sbb stos add mov mov in test push lods pusha enter ds repz dec sub scas add sub jo mov add xor mov dec mov and mov repnz pusha jnp add addr16 out push shll adc nop test out lret push cwtl addr16 lret in push adc cs inc adc insb push gs (bad) adc (bad) ss mov aad push daa std loopne pusha jns add gs rorl mov in adc dec hlt mov sub ret sub int loope test pop cmp pop or adc jp fiaddl add andl dec cltd out mov add cmp inc loopne rorl loopne aad inc jl (bad) mov test or lds (bad) adc mov pusha add xor pop fldl mov jno stc aam test int cli jge add add out adc int3 sbb cmp int push aam xor dec xchg and outsb fiaddl add xor aad int inc and adc (bad) js fdivrl (bad) xor hlt cmp (bad) (bad) push fwait sbb ret lret iret or sbb addr16 or rolb lret push call outsb lret and pop fdivrs clc adc dec out adc xchg mov ret adc addr16 xor movsb push add xor and pusha daa dec push loopne jno xchg dec xor mov stos inc (bad) bound std mov push outsb cld jl or pusha cmp lods enter add sbb mov lock into mov iret rcr enter or cmp cmp push inc fdivr xorl add add adc mov sti (bad) jmp cmp aas pushf pushf outsb shlb cmp push sub dec cld fimull pop push test cmp jl push shlb and pop (bad) je les and mov shlb js sub push add or and mov push dec stos js subb stos sbb cli rorb pop ret sbb adc cmp and push mov and and (bad) or or dec mov and mov jns and jg xor xchg call dec and xorl jo sub pushf or dec pop mov mov or xorb mov out add aam std movsl and popa jp xchg (bad) or add les and mov dec sbb scas inc jo test fstpt or sub jle add and mov cmpb out push push jle cmpsl (bad) dec xor ja mov and aaa std add cmpsb loopne add push rclb mov inc mov xor add xor leave inc hlt and push std mov jbe inc mov loope lods inc xchg mov dec rcrl sbb enter add sub sub dec in jo adc ljmp mov add add dec xlat sbb adc out xor inc pushf and (bad) das and push shr call mov pusha inc add lock sbb pushf aam inc lcall jle hlt xchg xor xor sbb pop repz (bad) int3 enter orl cli (bad) fistl ja movsb test insl mov test orl rcl mov lcall out inc pop in dec xchg insb push (bad) fidivl in dec in pushf inc sarb sub cmp inc pop jmp mov xchg inc cmp addr16 inc shll mov out call push inc es dec fiadd mov inc ror mov pop xor aas (bad) test les lock ja clc xchg add mov ret inc sbb out cmp add xchg ds movsb mov push mov cmp shlb mov mov push mov rolb add sbb xorl mov movsl inc mov stos mov add les mov inc mov out xchg and ficom push daa jne das ret lret sub xor mov dec and iret pop inc insb or ds sarl les jns and or dec push mov lds bound je mov dec sub mov cwtl data16 cmp jl push movsl js icebp shlb mov inc mov add cmp cwtl or int3 jmp sbb and push mov pop imul call scas xor mov xchg inc in adc in (bad) mov repnz inc and lods ficomp mov xor add cltd enter sbb (bad) adc sbb and rcrb push add nop pop outsl cmp aad add inc inc out lods pop lds cmp ror orl inc sub mov mov leave mov mov xchg daa jp (bad) scas mov cmp clc xchg sbb add push clc das test push scas aad mov lds movsb or imul imul cltd sub dec (bad) add mov cmp dec jg adc inc pop fldl (bad) (bad) push leave dec mov inc into js (bad) mov in xchg mov mov adc test ss add lods mov and pop daa pop sarl loopne int3 jae stos loope xor cmp sub push cwtl insb dec mov in mov cli push xlat cmp mov jecxz mov imul mov xchg dec test adc dec rcr test xchg shlb sbb and pop cwtl (bad) push mov cmp (bad) cmp out sub pusha rolb mov dec xor stos iret jge (bad) jbe add test out add ret xor xor int3 jo xchg enter pop test pop adc cld push les adc and pop lcall jb rolb enter lods and sbb cmp pop fmulp lock in cmpsb loopne xor or mov mov int xor jp jl sub or dec out sbb inc les inc (bad) cmp dec mov leave adc aas int3 pushf mov xor fisubrl ret mov push jo aam push aam mov sbb pop cmp gs ret das add cld repnz adc (bad) mov inc cmp sarb sbb adc aas lock pop push bswap loope fadds dec ret xor and fadd pop push sbb add xchg fucomi sbb mov les xchg and cwtl sarb divb inc jl mov mov xchg (bad) sbb faddl aas adc inc push cs lret add idivl pusha push jle fmuls and mov xor add and push les int3 sub sti adc add popa stos nop cmp xchg mov push push adcb dec sar jb aad jg add cmp dec ret jl push sarl dec insb mov jmp dec cmp lock inc in dec inc imul or mov sbb jo push cwtl mov nop inc je js jb add ja xor xchg xor jno,pt lret nop mov mov cmp (bad) test add push jecxz (bad) jbe imul js fidivr dec adc inc ret insb push jbe fcomps push jne or or jmp and mov out cmp pop push orb lret and out fsubs cmp sti sahf out jno add and imul mov mov insb mov mov es fimul mov xchg in and loop push js int3 mov push mov jno dec sub lods push mov dec popa xor mov mov dec mov insb je or adc sub and and sbb sub push imulb and fnstsw les mov popa rcl or mov push pop inc in popf add pop mov dec sub push int3 cmp rcrb pop jbe dec test pcmpgtd cwtl pop adc mov stos jnp pop loop (bad) lock dec fadds scas or pusha mov sbb (bad) int3 test dec int xchg in pusha mov cwtl loopne andl and repnz imul xchg cmp xor pop xor or sahf repnz mov stos sbb xchg sub ds ds adc mov cld and push push int3 pusha aad lret shrb rcll pop xor pop add push lods jmp inc mov pop outsb inc nop out gs test add adc pop xchg test fidivrl movsb mov test xor and add jecxz add ret lods push out and xchg andb notb add sub out shlb (bad) lock icebp sub or dec adc insb popa sub imul add test pop cmp xchg inc aas xlat test in mov xor insb xchg mov sub inc and in inc out out js or lock mov cmp add sahf push jb mov xchg pusha std pusha insb out push push sub pop adc dec mov and dec push insb lret into aam add loop fstpl lret mov cmp adc leave pusha add mov ja ljmp xor xchg xor in int push arpl mov js mov pusha or mov mov pop icebp stos imulb sbb adc in das xchg cmp push (bad) push add jbe mov les mov test adc and lods dec shrb sub sbb int3 push and sti pop cmp ret aam rolb add imul int3 mov dec (bad) jae adc cmp int3 add jl ret mov jno add xchg cli and adc iret mov add das pop xchg mov add fs inc test add and push add push pop enter mov lods add fild push lret dec add inc jne push inc fldenv xchg dec jno in repz ret fist test cmp into out pop xchg inc cmp sub (bad) cmp lds jo cltd adc and mov in sbb out and rorb sti pop pop push inc movsb and add add cmp jo mov into mov enter les pusha jo leave movl xlat push or mov mov dec inc lock repnz xchg push or mov aas inc dec lods push add add mov sub aam sub adc jbe,pn pop sbbb fs int3 mov imul jmp roll mov push fcomps test add cmp mov mov insl sub lock mov mov or stos jl pop fbstp and cmp push lcall outsb jo push ror sub lret (bad) or sub imul aam sti adc or mov addr16 inc outsb mov mov (bad) sub mov push xchg dec inc (bad) arpl dec mov leave sub xor add sbb inc add sbb insl pusha mov int dec mov xchg inc add sub xor sub scas push int3 push and fs mov add push jg jo and sub cmp adc imul mov and cs movsb add scas sti pusha push mov xchg in adc mov push fistp inc xchg cmp aas and lods stos xchg and leave xchg mov scas inc pop mov add mov (bad) jnp mov pusha and xchg xchg cmp pop test add cwtl add sub cmp xchg sub in sub sub je jl aam push test pop adc mov cmp push mov imul push and dec lcall inc pop fwait popa hlt sub pop int3 das push stc test dec adc add mov add lahf xchg and in cmp or adc loopne jmp mov push psadbw lds pop daa (bad) push leave add out push jle jbe aam sub sbb or arpl jnp mov push push sub push sub add dec pop mov cmc mov and lret adc das or sub jno out mov lods add gs cmc sarl sbb add loope insl scas pop mov pop jp add lret add cmp dec cmp ja daa cmp mov fdivrl mov jo pop clc sub and xor cmp lods hlt ficoml std stos cmp repz jo jae xchg sub cmp les dec sub adc inc or or sbb add lret and std dec jno subb sub inc inc push aam sti adc aam inc mov pop mov lock outsb pop add mov push mov lock cmp lahf xor pop sub inc lcall mov scas pusha push push stos sub inc mov xchg jl lds jo pop inc add sub in dec and and nop fcmovnu mov mov xorb pop adc inc sbbl and mov or cltd and das (bad) xsha1 cmpsb (bad) fs inc sub dec hlt loopne jno pop fisubr repnz mov pushf lds add lods jp cwtl sbb push xlat daa dec mov mov push dec test xchg rclb and pushf add mov (bad) inc jecxz arpl es or adc fiadd mov (bad) addb hlt (bad) push inc sub scas add inc sti (bad) sub cltd lret add cmp xchg mov dec dec jo mov pop js mov sub iret stc or (bad) cmp dec pushf shr js xor fnsave add and sbbl shll frstor add push mov sbb xchg enter inc je int3 mov or push test xor ja add fld push jbe mov ds das pop lea lret jbe push add jle fildl pop and push mov out pushf repz cmp ror sbb xor and cld mov xchg out icebp or add test or inc add js (bad) xor inc xor and movsl push loopne jae mov hlt sub adc lcall add adc cmp mov push adc fsubl inc jbe jnp adc loopne jl rorb mov and pop dec hlt adc fcmovb in ret ljmp mov pusha test mov stos int3 popa enter leave cmp push enter pop mov jo sub inc mov xchg dec shlb cmp mov add adc add and ds scas jp (bad) mov (bad) and inc cltd gs daa adc add rcrb push outsb (bad) in insb (bad) fs pop int3 inc mov sub and rcr aad xor sub std sub adc aas inc cmp sub add push sbb sub iret lahf xor fcoms (bad) jno and inc call rcrb jo pop test push add fdivr and cltd add push add arpl mov (bad) movaps imul aas inc (bad) movsb inc movsb test and xchg xchg xor mov sub and and aam call add pop jg repnz cwtl adc pop push pop sub nop pop lods add sub aad xchg adc adc mov pop fsubrl cwtl sub nop mov sbb and xchg push jge and lods adc nop push mov rolb xchg (bad) repnz and call out clc add mov xor (bad) rol mov mov xlat stos xchg dec jle cmp repnz mov gs loopne mov sub scas dec test test popl fdivl add dec (bad) jno mov xchg mov cs sub or xchg hlt imul lods or push mov adc dec mov dec into sub push ret (bad) hlt xlat sbb push push or xor bound ficom xchg lret xor roll andb mov inc cltd add lret loopne sub xchg pop jmp clc mov std inc push xchg pop dec lcall sbb mov or sub inc mov int3 cmpsl cltd sbb xor shlb and jl das pop pop mov inc fldcw iret adc add xchg lret iret or or add loopne pop cmp sub xor cmp xor and sbb xor mov adc inc (bad) xor loope outsl adc std mov add sub add dec daa lret mov xor icebp and mov or popf add clc fwait incl sbb je and testb mov xor mov add mov cld and jmp arpl lds fistpll fs pop push enter imul lahf nop push shrl dec adc add sub mov jb add mov iret inc inc and push pop pop cmp push xor fwait roll sub (bad) and xchg sub enter pushf mov nop inc sub mov add jo cmc adc inc lret mov (bad) xchg push int3 sbb in jg xchg and in rcrb lds push cmpsb inc lea inc mov push or and (bad) push sub adc adc je sub sub notl mov mov jecxz fwait mov mov mov jp cmpb add xchg mov jo pop mov sub add jmp push add lock (bad) mov add ficompl fs movsb or enter lcall and daa sbb adc cwtl pop mov mov adc or sub lock flds stos mov loopne push push gs xchg rolb lds movsb pop (bad) dec shrb sub stos mov cmp sub pop xor repz enter sbb add rcll dec jecxz or add fs add adc inc jne add mov in sbb add sub mov add push dec adc push jo add (bad) movsl or rorb enter outsb stos int3 ret mov or add push aas cs push xchg mov imul xchg add popa subl pop mov mov pushf cltd push pop xchg (bad) cmp cli insb outsl push leave inc or jge call pusha mov (bad) sahf aam (bad) xor aam or les and xor push mov loopne dec (bad) (bad) pushf pop into or (bad) push enter push fxch xor nop int3 lds loop inc jmp stc xchg rcll cmp les mov je adc adc add mov dec int3 (bad) nop sub mov mov pop push or cmp xor push jne in and pop (bad) int3 jbe add adc movsl xchg jl mov rcll add sub lock xchg ror xor popl fs dec rolb repnz xor add shlb mov int3 add push sub aad fsubrs add inc fiadd aam loopne xchg push add sahf and mov movsb ss pop xchg pop jo and push inc or add out and or or fimul cwtl add rorl imul sub add and popa mov call mov sbb fldl cmp mov sbbl mov outsb adc xor rolb sbb cmp add xchg mov lock enter sub push les push js fs popf sti dec clc jle mov add sub xchg mov (bad) mov mov in int3 xor (bad) mov add lcall and outsl xlat push mov loopne mov js popf and int3 mov je sbb xor mov iret loop mov add or (bad) int push dec test ss cwtl jb clc mov push inc jno (bad) xor (bad) in push xchg dec pop movsb cmpsb fmull or test jge push sub test add les push pushf xorb push adc insl dec add xor cmp (bad) mov add (bad) push test inc mov mov imul les jle nop (bad) xchg bound sbb aad adcl mov add cmpxchg add sub sub leave enter mov mov inc rcr mov pop dec mov mov adc (bad) dec (bad) jge xor scas sub jo dec (bad) out push cmpsl adc in fildl scas into test inc sub add out shll je js cmp mov push sbb fcompl cld jmp int dec cmpsl les mov add iret roll sub aam adc sub inc mov mov les or (bad) jae in js jecxz push adc pop mov inc faddl orb ffree adc test aam jge push mov mov inc cmc call fsts sub (bad) sti xor dec mov clc and shrl jo pop or jmp pop movsb or push fldl push mov fs shlb std dec push mov popa pop xorl mov scas jns gs xor je adc nop mov mov dec or bnd xor inc adc nop (bad) fsts shlb je lret mov lods sub aam mov xlat xchg push jmp pop sub mov in or mov mov arpl nop sahf xchg sbb pop add mov pop rclb mov shll nop adc fs add push push cwtl sbb add aas enter or int adc bound into adc push xchg xchg (bad) dec vmread mov enter sub sbb cmp dec pop xchg mov js pop (bad) cmp (bad) mov xchg movsb add fadd xchg sub dec je xchg fnstsw lock mov movsb pushf adc push cmp push enter (bad) xor repz and andl mov xlat in imul pop sbb subl mov (bad) mov adc sbb ficomp mov scas jo adc mov xor fldt adcb sti or lret inc mov mov lcall xchg in adc test add pop arpl push repnz jl cmpsl aas xchg stc push sub sub loop add sbb adc incb or or or xchg in cli push xchg cmc and or test movsb mull (bad) cmpsb and xor iret cmpsb and mov scas inc test sarb jns shlb imul mov or repnz fidivrl pop add sarb into mov ret imul push dec adc and xor mov popf out dec mov and mov sahf push sbb shr dec cs xor std jb mov add into push xrelease ret (bad) or add add cmp rolb mov or push mov and jb pop mov add lret and cld add sbb into push lret imul (bad) mov mov xchg push sub mov inc shl imul sub cmp push push jp js and xor sub or push (bad) (bad) (bad) or fs or adc lods shl add popf push loopne jns inc push test xchg dec iret clc fs mov pusha movsl int3 sub cli cmp cs sbb inc mov mov inc mov test bound adc cmp pop cmpsb ret sub imul push fwait cld and or fildll fidivrl lcall js cwtl push test int je cs movsb mov mov mov cmp fstpt sub sub dec dec lock roll cmp aam push and push sbb int3 sub dec test mov pop nop cmp testl mov mov (bad) imul orb pop cwtl lcall sub test data16 inc je and shlb xor stc dec nop sub xlat stos lds inc push sub loopne jns cmp mov imul arpl cmp mov cmp xchg in dec mov lods adc leave mov fstps fcoml xor test add stc (bad) xchg outsb rorb ret shrl lret sub add jge test ljmp les add inc xor sbbb loope jecxz fiaddl (bad) push cwtl add (bad) push mov and data16 rep add enter (bad) push mov js mov aas int idiv lret xor test call loope test pop sub fdivr fst popf mov or push adc or add mov rcll std xor ljmp push rclb shrl push ret in adc jl mov xorb add leave inc fs push imul int3 inc add pop lret mov dec das enter jb aas sub adc test sub (bad) mov inc fidivrl insl push popf (bad) mov les adc lds or push xor addb sub test int3 jmp fcoms test inc das lahf push daa cld (bad) enter sbb push sbb jmp sti idivb movsl xor sub xchg cwtl jo or sbb (bad) sbb rclb add mov lds sub pop (bad) repnz cmp jnp xor add fs sub aam inc call push outsb adc cmp ret push dec adc pop and loop pop fbld cld movsb (bad) sub cmp insb or std cmp push (bad) mov or pop in and dec inc inc movsl adc (bad) lock add mov xor cmp mov add cmp or insb repnz adc fisubrl mov sbb rolb aam sub mov adc cmp js or push fadd cmpsb enter jle pop sarb mov push (bad) xorl xchg hlt fs push mov popf xchg pusha lret bound pop cmc push sar nop xor lock push pop xchg fs sbb xchg jl and sub dec sub xchg mov push lds jo sarb pop aad addb xchg test adc inc aad add insb mov daa mov test jecxz dec mov out cmp mov out xlat sbb sbb rorb mov sub fisub adc lds int3 mov fidivr jne inc add pop call loope test add push (bad) cmc ret leave sub lock pushf es jmp in add push sarb fimull adc lock push cld cmp or inc loopne addr16 cmp dec sub or les xor sub sub aas or pop push add push pusha fnstcw sub fs pop add push add sar or push pop mov xor jp ds outsl dec dec les and add mov clc (bad) jne insb shrb dec icebp xor jns xchg icebp fistpll pop int3 sbb movsb jbe adc fcompl and cmp rcl fstps jo daa stos adc stc mov sti mov mov (bad) rorb xchg jp sbb push jle int3 cmp xchg inc pushf mov xchg mov sub (bad) call add mov ss sub pop (bad) icebp xchg inc dec les and add inc loop mov sub pop and sub xchg adc dec sub test and sbb adc int3 cmp push aaa aam adc andb cmp loope not xorl pusha mov push push and sub or es xchg adc enter mov pop add mov xor int sub sbb push and cmp cmpsl push push sub xchg adc dec mov push cmp lock in add adc add lds push test sub lock (bad) mov test daa fidiv pop int3 pop dec sub mov xorb sbb sub and inc aam fsubrs xchg jo dec mov fmul outsb mov jmp sub pop aas and push out sti stos inc in loope jnp or add das idivb add xor mov jmp inc out aad dec xchg fisubr add jnp xlat (bad) add jmp mov push in lret mov shr push ds jl push pop push add mov cld (bad) ja,pn push mov cmc aas das and adc addps ret scas pusha pop jmp out jl or push pop stc ret or jmp xor repz cmp add or mov sub pop add mov jnp inc hlt movlps stc dec or jbe outsl ja lret or test lret xchg in jmp call push repz (bad) push not movsb scas jle pop or add adc imull cmc or mov mov adc cli inc addr16 notl cmpl inc pop lea mov bnd add jmp inc stos push clc fidivl (bad) lods cld fwait outsl insb dec jge pop shr inc adc in or or pop jne sti mov data16 mov jle daa mov fbstp sbb or mov mov and xor lea or push or int3 cs jno add push (bad) scas test int3 fnstcw inc and adc pop adc pop mov lods hlt mov jg mov pushf xor jp ljmp ret cli jge cmp bnd add jg aad dec dec ss pop sub xor jmp outsl mov das cli sub testl pop test mov (bad) aas (bad) pop ja adc sub mov or cli ds sub or mov rorl mov or jg ret xchg rcr pop or push jmp int fnsave pop negl ljmp push ja int3 subb sti jl imul in outsl inc setb jns js push out or push repz in push jle jno add jne mov clc jg lock inc pop lret and mov mov in cmc std dec ficompl out aaa cmp xor dec push loopne mov repnz into jl push dec mov clc (bad) push fcoml sti lock and mov gs imul scas mov xor sti (bad) stc add or push inc mov (bad) aaa pop ss cmp mov sub in or pop aaa xchg rcrl sarb and int fdiv xor mov push push adcl outsb test loope,pt or dec mov cld push pushl push push xchg xor or add cmpsb dec ljmp push test mov pop scas outsb (bad) aas fmull pop inc mov dec sbb out mov add imul stos dec lock jne pop add jp das in jns xchg ret and jecxz dec mov jne sbb inc add mov add mov add lods sbb xchg in orl add push pop cmpsb int3 dec xor sbb lds outsl push pop lods (bad) mov jne mov cmp sub inc add in xor or fstps pop push mov mov or inc or or adc in lea pop jae sbb rolb or add dec inc xor mov outsb mov add pop (bad) lock mov dec add (bad) xor pop and and mov cmp pop push jns xor dec call lret cmp add sub adc imul jns pushf (bad) pop pop push shr subl or inc xor push mov or jl sbb lea test add inc (bad) in mov pop push dec mov mov cmc push aaa mov inc sub clc xor in and push sub add sub pop add inc ss or mov imul pusha adc repz jmp jle sahf in sbb adc loopne stc aas js add or and incb arpl and fild pop xor and inc sbb sub add pop ficompl and xor xchg mov pop popa jo cmp jb jnp or les push push mov jne or or and dec push add ja xor xchg sbbb add jno xchg test lds fisttpll push pushf xor cmp mov cwtl jo cmp pushf add (bad) icebp lahf dec inc cld add inc andl mov mov pop inc add adc adc test mov jge fs test mov pop jg pushf mov sub adcl in and xchg jle add sub add daa pusha add push mov or add imul xor test xor jg shrb icebp call dec push movb adc in jle xchg inc push sub push jge sub test mov lret pop or xlat out xchg out adc push jg cmpsl loopne fldenv fmul aaa jno inc in and mov cwtl mov test mov dec ficoml push add cmpsl xor mov fcos adc jne push mov and adc mov push jecxz or int3 pop add out js jge (bad) jnp dec add cltd insb out mov lea (bad) sbb insb ds push (bad) dec pop xchg push aaa and jo adc jbe mov addr16 fdivr xchg xor dec xchg adcb add icebp rolb jb fcompl call and daa pusha mov adc imul or test add test dec xor lds pop or cmpsl add lcall jns ja mov in jb repnz lret sti lock cmp stos add sbbl lds (bad) adc mov dec sbb sarb lods mov or or mov adc jne sub add ficompl mov push in or pop jmp mov or pushf push mov cmp add xor out sbbl jg lret push pop loop push xor mov aas dec or push mov push frstor sub lock fst (bad) or jl arpl pop add xor scas cmpl dec mov shrb std cmp jb pop stc jno pop sub dec bound inc test jnp push cmc mov add inc mov jae mov mov test fiaddl xor fnstsw add or add mov xor adc mov dec jno in mov test je jne cli add push add lods jge repz jbe adc xchg ret stc add jb bound push jle mov (bad) mov arpl xor inc dec (bad) stos push xchg jo pop push inc mov fstl cwtl (bad) add pop and xor cmp sbb fiaddl cmp call aad add lea lods fnstsw jge xor js pusha mov sar pop xor ljmp push xor inc pusha stos add aas or dec mov inc sahf and add addr16 leave xor adc cmpb push pop mov add push xor sub call xchg add pop pop cmp cmpsl jl or push sub jg add jecxz arpl cmp and add pop and pusha add inc imul aas inc sbb dec imul inc pop xor add cmp pusha scas xchg lea mov fstpl add stos cmp xor pop pop es pop scas inc inc lods daa into js dec inc xor imul inc and pop aaa mov and aas sbb push sbb cmp mov inc add es push dec add testl sbb jmp or push and jg clc add push xchg sub jns xchg in dec jp pop lret pop mov mov (bad) xor xor add jge insb inc (bad) sub data16 in fmull sub add leavew sbb (bad) mov rcl adc andl mov subl mov cmp hlt push add pushf test sub sbb in jbe xchg mov adc pop mov push dec pusha fcmovne jl jl arpl jns movsb inc push loopne and sbb sbb mov inc cwtl mov xorl (bad) mov fnstcw pop sbb lods sub and mov add shlb inc lahf adc sbb or les sbb negb cli push or cmp and call push cmc or fiaddl hlt adc pop adc andl les xchg add mov (bad) loop xchg cmc inc dec ja inc pop dec cld pop xchg cld adc lds adc call and xor icebp or test mov rclb je mov pop test xchg pushf cli add sub and cld inc pop and adc xor les sub test mov or cmp lock or sub add sub test mov (bad) repz sbbl adc xor xchg mov jge adc addr16 popa sbb add and or les inc mov stos pop in popf imul inc ljmp addl mov sbb jnp cmp mov cli mov andb aad mov loop jecxz jl shll xchg push ss and sahf out inc addr16 and rclb mov xorl inc mov in and jge add or cmpb add mov xor add mov sbb cmp mov xchg inc pusha scas push (bad) (bad) cmp cmpl adc les and lods xchg or les xor dec fldt mov jecxz and jl rcll sbb fwait pop adc sub mov mov cmp rorb imul test (bad) xor push inc jmp in sbb mov jl dec mov inc (bad) inc add mov (bad) imul in push push ds sub int3 add and out push add andb idivb add stos xorl mov aas sbb cmp lret andb clc push jae add scas bound fsubrs and or (bad) (bad) mov mov jge xchg adc push inc out dec dec or add and fnop test int3 lret aad dec ljmp and pop pop bound adc sbb jp hlt inc std roll push mov lret push fnstcw (bad) mov fs add cmp sub popl inc cmp adc pop mov adc lret add and imul sbb push fcompl ja and mov jne imul push cltd push add xor jno sbb rclb xor sub xor mov sarb repz ret divl adc sbb aaa xorb incb dec jno adc mov stos rcr lock js push dec mov and dec dec adc mov aad sbb bound inc fcmovnb scas test fld sar and add dec jne rorl outsl clc enter xchg mov aad lret add mov xchg add or addr16 popa stos movsb ds test pop (bad) jo arpl push dec outsl test sbb iret xchg rcll aam mov mov push sbb lods or int insb mov aaa ja sub push leave clc repnz and adcb cmp mov or xor jno fadds xor inc lret push jge negb mov cs call pop sub movl andnps jae pop leave xchg or push pop (bad) pop or jo hlt andb adc inc pop jns mov push mov leave dec stc xchg add outsl dec lods mov lret jecxz add and pushf jne add enter lret fldenv mov adc fdivrl mov pusha mov loope push lods push push or sub rep mov or jnp arpl mov fiadd add aad pusha clc roll clc lods xor add icebp js movmskps imul xchg and jne cwtl push jecxz pop out dec pop or sbb add mov clc out add dec mov adc and lret jecxz fdivrs pusha arpl push xor xchg mov and mov je mov outsb stc push adc jb pop psubb pop ret xor xchg adc cmp jecxz enter xchg sub je push mov out push sbb add pop je lock jl add addb pop (bad) xor jae add int3 (bad) mov loop push xor mov adc push fistl iret inc add mov push outsl jmp xchg data16 add cmp test (bad) (bad) int3 pusha push and mov jmp js push sub pusha sbb js shrb test mov in pop sbb sub push push xchg xlat pop or mov fnsave add js inc mov sub adc add xchg xor dec dec add repnz call cltd adc and or in xchg adc sahf in add in push pop repz leave add sbb and adc and or and dec and lods push mov dec sbb inc adc dec movsb dec add cmp ret mov or sbb movsl add cli fisttpl inc jne dec outsl out pusha inc mov aas icebp add jecxz cmp lcall repnz cmp aas pusha mov ret mov in pop push dec add out adc add add repz cmpsb lds xchg insl xor in lock cmp je push iret jl add enter ds std add add push adcl or add mov jno mov stc test and or adc (bad) ja loopne sarb repnz and add shr add pop adc adc inc rcll sub pusha mov out std loope adc pushf inc mov scas pushf in test (bad) enter scas popf and icebp push cwtl (bad) int push nop sbb ljmp aas push ret (bad) loopne jns or loop cmp stc or hlt cmpb push mov outsb ret pop add incb and push fadds push and mov mov push jmp or in mov pop add dec stos inc adc jp xor dec pop loopne inc sbb adc xchg add std adc and inc je shl add in cld dec xor rcl (bad) mov loopne add mov add lods aaa pop dec popa loopne andl insl adc nop xchg mov out scas jo ljmp mov sarb xchg mov cmpsb les in jmp jns cmp inc adc jl push cwtl inc adc inc mov pop adc out xor add out or mov dec fild jl xlat lock xor out aaa shl stos mov movsb and push mov lss les cmp pop cmc int3 test mov xor xor add loopne xchg les arpl adc add or pop and loope bound add sbb sti sub xorps sub notl sub or xchg aaa rcrb dec cmc xlat jae mov aam xor jecxz repz daa xchg mov jg jae incb pushf pop icebp pop xor xchg scas out stos adc adc cmp inc das xchg mov aas inc mov push push push xchg push push add ja mov adc icebp and mov enter lock sbb mov test xchg call fs int3 cli lahf cmp add rolb mov fcoml xchg push or dec ret inc insb xchg mov and sti int gs into bswap push push xchg test inc adc xchg or or outsb mov imul push es mov setp int3 xor out push cmp xor and mov adcl mulb arpl and xchg xor iret inc inc insb adc mov adc call inc mov cwtl test mov adc xchg cmp mov (bad) mov fbstp xchg and pop orl adc inc (bad) sub fmull jne mov dec xchg sbb pop sub daa cltd lret and mov int3 bswap (bad) pop mov js call (bad) add iret stc mov imul push dec inc or add xchg adc mov inc lods pop sub outsl int3 sbb (bad) push fnsave sahf pushf pusha dec mov rcrb adc and mov fsubl cwtl rorb xor enter sbbl mov enter add dec xor add jecxz mov repnz push lret addr16 add push xchg lret lret adc adc fstps xchg mov inc sub mov push rcrb (bad) add cmc xchg sub shrl in add adc pop jmp rol dec xor dec dec sbb sbbb mov push add iret xor rcll std cmovae pop fistp bound push repnz push lock jmp mov out inc rcll push lret mov add mov dec xchg inc dec test mov fsts or add jae fnsave rorb add cmp add out inc xchg xor pop mov jo ja xchg dec gs and pusha movsb nop inc enter mov hlt mov cmc dec mov bound dec push or dec xchg ficoml push sub sbb mov mov add imul pop es outsl adc push jno dec mov sbbl dec test or push adc into add fs inc inc shrb cs lret mov xchg enter push push mov jns push mov pushf nop pop pop adc and xor push inc (bad) push sub loopne add push out mov mov add mov push lret (bad) mov das add mov adc sbb adc adc dec test xchg mov adc aam in dec add jecxz les insl sbb xchg sahf mov xchg stos jne add adc adc inc cmp bound push pop pop mull mov fnsave or mov aam fiaddl fldl mov repz xor mov add jae movsb xchg xor mov xor loopne je mov push lret mov sbb jle xor mov stos mov mov pusha xor fnop fsubrl repz jge pop test jmp fildl mov cmpsl add mov stos (bad) pop jae add add mov sbbb (bad) adc mov sub and stc push lods jnp jl test adc push leave loopne pop jp call dec dec dec pusha ret cmpsl les pop iret nop call xor dec adc or imul mov dec pusha aas dec fisttpll cwtl out push xchg cmp mov push (bad) nop inc inc into mov push or mov nop fmull cwtl (bad) inc in lods xlat mov hlt mov ret imul mov mov inc movsb (bad) repnz int3 dec enter (bad) push and adc xchg fdivs and xchg jge pop or mov dec mov inc fs (bad) and in push loop mov push add sbb sbb outsl mov adc push mov ficomp push and fcoms sahf dec (bad) rolb cmp data16 mov lret std cs inc xchg outsb jb sbb (bad) (bad) (bad) cmp mov pop pop outsb inc mov (bad) loopne in aad xor push popa mov inc and push clc in scas mov lret or mov lret nop add sub adcl loop sbb jecxz inc jne pop inc add xor mov sbb clc outsb in and jl sbb addb mov cmp mov pusha mov jo add out mov into int3 sbb scas pop call sub jle js add sbb insl mov xor adc lods mov ficompl pushf inc push xor in ret adc les ljmp jg add shr sub pusha (bad) push add xchg lods mov cmc (bad) or in push add aas mov into mov jg leave pop inc repnz std inc (bad) hlt jae mov sahf aam jne notl loop daa xchg push or dec or and dec add cwtl xchg fcomps lods adc push mov add dec sub add inc mov push notb inc lods jns xor and and xchg test fiadd pop jns sub bound push mov mov scas and pop (bad) and cmp (bad) call clc jp jnp xor and movsb insl cmp lods inc pop imul lock negb js lahf cmc inc and inc push xor mov or rcrl add hlt pop inc enter loope inc pop ss dec bswap xchg (bad) xor mov gs mov xlat or mov xor movsb cmp cmp cmp add test stos ret and sbb mov pushf cli xor mov lcall sub add xchg jns sbb adc sbb pop dec mov sub add sbb mov dec adc or test fwait pushf pop sbb pusha mov and pushw xchg pop sar pushf sbb xor mov jmp push inc add (bad) add xor xchg mov adc imul sub popa dec mov pop add pop xchg pop jne (bad) mov movsl and mov les ret aam test dec mov xchg (bad) fsubrl jo es mov jg sub mov (bad) pop dec out and pusha test sub xor inc and inc ljmp mov cmp in push nop repz sub adc lcall mov dec shlb sub inc inc dec push (bad) jae sub ljmp loop enter adc loopne mov or leave lret and pushf adc add decl pushf jmp or stos jne fisub xor das xor movsb lfs xor adc jecxz sbb mov push dec push lret jl (bad) dec and repz sbb shll push daa mov dec mov in jo popa pshufw or cmp adc xlat scas dec add jp or sub aam xchg push cwtl cmpl xchg fimull mov inc pop mov or xor xor aam hlt pop dec inc nop dec push dec fldl2e (bad) in xor lret mov inc rcr xchg movsb stc sub flds pusha sub add imul sbb int pusha dec popa push dec sbb movlps mov arpl jmp mov push in fstpl and aaa fcoml add fsts push jae xchg cmp icebp inc or mov daa dec fcompl xchg push inc dec inc loopne add add icebp mov fdivrl xchg pop enter and cmp mov sbb mov cld jecxz fist and mov push dec mov movsb sbbb push das rcll shrb lret add repz xchg and xor push lret mov pop mov daa sbb jae mov ret arpl inc add add cwtl lret inc daa add mov inc andb stc incb sub mov fstpl xchg testl dec xor fst les mov (bad) jecxz enter and cmp pop pop add pop push jae std aam jle lret pop add jge xor roll movl mov fnstenv add mulpd xchg in or lret shl pop outsb cs mov in push (bad) sbb push cld jnp push mov mov fstl nop jns mov add and fldl and cltd sub jmp ret dec mov mov adc push or sbb cmp and and mov and xchg jg shrl sub pop ds test jns mov mov loopne pop cmp or inc mov incb dec cmp inc lock ret in xchg movsl push or inc adc shl cs cld add fldt mov mov lock jo std icebp rorl and mov adc pop fnsave xor sbb push sub rolb sbb ljmp push imul mov jl push hlt mov inc dec shl add idivb leave add xchg arpl aaa and sub push jecxz je pop test aam add ret mov inc push mov lret lods shlb sub add aad push sub mov or push xchg lret jo sbb mov xchg push and xchg outsl inc xor or loope adcl daa cmp mov mov mov flds xor inc push (bad) lods dec xchg and lret mov xlat add out mov or and lcall adc xchg mov fnstsw cmpsl sbb mov cld mov or cmp inc inc test jns jl gs sbb cmp xor mov mov lret cmp xchg lock movsb lret dec sbbl ja sub in or mov jl mov imull push imul inc push (bad) inc bnd jecxz push flds daa adc repz outsl out sub sbb icebp fsub and cmp xor ret dec jo pop inc mov dec or imul xchg xor adc or repz xchg and insb icebp or dec or scas lret dec xchg mov jl xchg sbb insb adc cmp lea xor imul cmp pop adc ret or out mov sarl dec les pop or jge xchg scas mov cli shrb cmp mov and std ret sahf jo mov out adc movsl cltd ja add xor fwait cmp inc and add fmuls gs dec dec or add and add xor adc inc fldl jb add fldt mov lock or add or ret in pop je cmp cs add mov mov popf mov push xchg cmp out (bad) nop pop add (bad) (bad) stc mov (bad) aaa dec cmp inc enter imul arpl mov mov dec push fdivr insb (bad) pusha push mov rcrl mov xor shll pop add xchg sbb int3 pop mov ds adc xchg xchg sub push pop add and fs (bad) cmp lock cmp sbb iret add sbb test jae cmc mov and sbb notb sbb sub jmp aam push add xchg cmpb incb jl test jmp dec jl inc inc push add push mov cmp add mov adc cmp lahf xor in cld rcrl (bad) sbb fidivrl cmp ret ss mov aaa addr16 and fsubr sti push sbb aad push add imul nop add push (bad) or fcomps inc arpl cmp ljmp add scas mov dec jo sbb and in adc ss enter xor faddl out outsb jl sub xor mov bound and jnp jo sbb aam mov mov icebp dec dec mov (bad) xor int3 pop in add or andl inc mov cmp push les (bad) dec stos mov orl jae inc jecxz sub mov jo or stc popa insb inc (bad) adc or outsb push je inc test in sbbb out leave pop scas mov and add xchg cwtl inc out lds pop imul sub repz fnstcw adc int3 sbb or fs jp push leave fs jo jae mov imulb pusha adc bound mov sbb cmc mov loopne xchg pop sub inc rcrb push pop xchg jo dec adc enter adc cmp cmpsl in (bad) dec inc (bad) mov adc adc ret mov loope mov cmp lret fcmovu pop fstl faddp inc mov lods rclb sahf xor pop cwtl inc repz add lods inc dec je inc (bad) adc sub cwtl mov pusha test mov lds int pop pop nop and dec inc int3 clc fyl2xp1 sub ret mov mov orb pop dec push or les inc dec and adcl inc (bad) lds adc sbb icebp pop out insb cwtl call or test jnp push and fmul ret fcmovb pop ret mov push dec xchg cwtl jecxz fadd inc scas adc cmpl nop sahf adc loop nop test movl fbld sahf adc mov jl xor jb xor fcompl pop sub jmp xchg js mov lds mov add dec push mov push in sub cmp add icebp mov dec hlt or mov dec mov cli insb sar inc mov inc or jecxz mov test and imul repnz aaa push lods jmp or es lock roll in dec add jmp add push inc sbb sbb cmp lret jno js and loopne xchg fldenv cmpsl call mov inc incb mov adc inc sub out mov aam rcrb jo mov inc dec int3 arpl add mov or jnp movsb dec clc mov or popa inc aam je jl add scas les push fmul lcall clc cmp push add push jbe or cmp mov mov add dec sbb (bad) mov xchg aaa push and scas add push fs es adc add lea ss dec pop adc push pop pop push andl (bad) out pop lea xchg movsb and sarb pusha pop repnz test es pop js cmp add push push movsl loopne xor inc mov scas loopne push cmp and add pop sbb cmp lea dec cld sub out test dec sarb test xor test pusha push dec or fidivr lret or stos rcrb and scas mov fsubrs repnz data16 sarl pop xor cmp arpl mov adc jg js dec pop enter pushf addl sbb ret arpl inc xchg add mov ret xchg lock add cltd je adc orl inc test imul mov mov xchg xchg pop add es mov pop out adc mov or xchg pop jmp mov mov out jge add fprem divl sub lret ss xor or push clc dec jle gs sub lds loop vorpd lea jg mov loopne ss ret sbbb jbe sbb cltd incl add mov jne inc pop or sub mov push mov addl jne cmp jo dec stos faddl push (bad) aaa mov pop push pop pop (bad) xlat or data16 dec in push sub fnstcw lea sarl push mov sbb xlat fstpl inc mov jle mov fnstsw std inc lods decb push push add divl push scas ret jmp mov cmp cmp push jmp push rcrb jno inc add sub (bad) iret add pop fdiv sbbb cmpsb and pop jb cmp sbb dec jle repnz test jae test add out lahf popa inc sub lods and pop inc insl notl adc adc adc add (bad) jno out jle inc inc adc cmp jg cmc add add mov pop add mov cmp pop aas pop xchg xlat xchg bound mov pop jg or movsl or and mov add ja daa push adc loopne push ror lret add outsl js push jmp pop add adc lods inc stos or xchg dec sub and dec rol or movl rcrb cmp jmp pop sub or jecxz (bad) fldl or (bad) jb arpl dec sbb mov aam (bad) into pop dec sbb into add xchg pop insl jmp in add or or das xor pop mov push std pop add jl clc sub mov add pop pop inc addb jmp test aad sbb pop pop xor and aad int inc cmpsb pop sub into dec push mov cmp xor inc or pop mov test jle jmp (bad) push (bad) lret sub and int3 ret add cli pop divl push sbbb icebp pop inc lcall outsb mov test daa add cmp add mov sub xchg ret sbb pop sub add add xchg dec or rcrl insb sub imul orb cmp in (bad) sar sbb (bad) jecxz,pt (bad) pop push les jbe dec add repz push mov and dec add scas pop int3 jnp mov xor aaa movsb cmc adc or testl inc lods ret ljmp gs push mov xor dec jg lahf pop push clc sbb jbe mov add sbb cmp jge xchg int3 inc push push pop fwait xchg adc js sbb pop pop outsb lret cli pop jecxz insb aas xor mov sub jns sbb jmp maxps sub xor jo leave cmp (bad) in cmp adc cld jmp push fist push ja xor push push push dec scas push xchg outsb or test xchg insl (bad) lds add jb out insb xchg popf scas mull xchg pop mov (bad) cld cmpsl add or pop mov imul adc jmp dec and stos add outsb xor jns mov out jge or (bad) or jmp frstor sarb pop imull dec xchg incb lcall sbb (bad) xchg outsl jmp jmp popa push mov pop out push push jmp test test js or pop push mov popa in lods ret cmpb iret out push (bad) scas test xchg in lea shlb (bad) and hlt out push jae jg xchg pop push dec jle inc inc push aad jo mov cmpsb sub sbb pop or push nop cmp andl xlat push dec adc xor cmp (bad) jb or adc scas sub out mov insl inc je xor lret pop test dec xor adc es adc orps push repnz (bad) std xlat mov insb leave testl add push mov adc xchg sarl add jmp and fisttpl roll sub mov jnp jmp adc pop popa adc or mov xchg dec ret add xor jo push mov insl mov (bad) mov lock cmp inc pop clc jb push insb pop (bad) or push and addr16 push dec not inc push nop sbb cmpsl cmc (bad) in sbb ljmp lods inc cmpsl mov sub test (bad) in sub (bad) out adc (bad) push pop xchg push nop jae push push add lret decl ljmp sbb push and cmpsl je dec repnz add fisttpl mov fwait add mov mov add lds loopne push aas lods adc sti push inc adc mov push popf xlat pop mov loop cmpb or push or push pop imul mov jmp adc cmp jp adc sub cvtps2pi imul adc lret push jmp addl shr cltd out pusha push sbb icebp arpl push dec inc lret add xchg pop xor jp or shr pusha push pop in jl fadd test mov gs (bad) push jo inc in push mov mov leave ljmp push dec mov (bad) cmp add add and jne sbb inc cmc imul ljmp aad out repnz inc pop hlt adc aad stos push das cli xor jb pop pusha dec (bad) xchg mov adc aam pop arpl fldt add outsb sbb mov xchg jmp pop scas xor push push push popl out jl cmpb add nop or jmp repz cwtl xlat jg imul clc nop sub mov mov adcl in mov std aaa push test mov dec fsubs xor das mov inc ret (bad) fs cmp cmp xchg icebp test lcall fmull das pop (bad) cmp push push sbb cmpsl mov pop push scas inc mov fstpl inc movsl jne push add adc testb push mov cmp xor cmp fadds add inc jmp out and and nop mov push push cld loopne stos psubsw mov jle jae andb popa rcrl xor vmaxpd mov xchg ds push test add and mov mov dec sahf pop xor mov push das or fnstsw aam movl push mov jno ficom lods repnz mov push mov enter loop mul enter test adc and pop (bad) dec (bad) jnp and out push sbb mov fbstp pop fnstenv test or jg lret mov icebp lods and rorb sbb mov in inc (bad) insb dec dec cmp mov shl add xor and mov cwtl repz push cmovbe (bad) jmp and scas pushf popw iret xor adc dec add repnz dec inc js push add sub mov push fucomi loope sbb push out lret sub mov add mov inc inc jmp adc addr16 xor mov adc ss jnp push jmp bound pop push push leave dec jp push pusha pop xchg or hlt es aam pop scas fistpll lret jecxz xor mov inc and jmp cwtl mov dec scas iret lret and sbb js adcl (bad) sub out repz js rcrl stc stc inc sahf sbb popa mov push xlat out sub dec sbb loopne add cmp cmp jmp js sub pop or imul testb pop test add add sbb shr add sar jbe icebp add cs jae out adc push cld call push test sti or or add or in pop in xor add push (bad) enter or fcomps adc std imul sbb sbb pusha xchg leave mov xor add push decl mov push js sbb pop popw loop jno mov pop sub add mov (bad) lea lcall sbb inc inc add xor jecxz push adc ja clc sbb mov cmp sbb xchg sbb call cmpsb push adc jb cld rcrb xor fs or add and or or lret adc cmp cli or andb push push bound or mov nop pusha and clc dec mov or mov pop add rcll das in int3 push push in pop push hlt icebp and incl mov push mov rcll mov pop clc loop js insb es jne push push sbb add ja jmp sbb lods pusha pop jne in sbb stc cmp aaa icebp enter bound xor mov jbe lods mov or in dec cwtl (bad) stos aam mov push mov jno mov mov sahf mov subb push js (bad) xchg mov clc adc lock jecxz adc psubsb out push int3 xor jne jl push paddd add pusha add test push cwtl cld out dec les adc mov add fcoml jmp sub les sbb push or adc in int3 push or clc cld andl jecxz jl jl cmp in js inc bnd mov mov pop ja pop out sbb paddw mov lret sbb push add insl cmp add jl jmp jbe xor and popf sbb xchg dec enter adc dec push jno (bad) or addb cs mov push std pop nop and ss shr pusha cld cld adc pop or in clc cli push jnp pop jmp pushf jecxz,pn daa jne sbbb pop pop hlt jmp lret xor rorb or jb loop and adc test incb pop pop or in pusha jne cmp ja out add repnz mov shll xor rcr clc inc mov shr sbb sub loop lock or add je jmp jne sbb sbb xor (bad) add adc jecxz idiv cmp add negb dec or push push and jno push push in mov (bad) leave adc xchg movsl adc call mov push mov or sti sbb popw cld lahf push push push pop xchg test les mov scas mov in psubw sbb and pop je push js loopne push mov sbb sbb pop ljmp and sub out mov or out pusha arpl adc call mov push movsb pop cmpsb lock rorl into pop test stc pop nop sbb js or add push hlt out push push js std and and adc sub jmp call and std shr stc cld pop add adc xchg enter inc mov data16 das add cmp aam test sbb inc lcall sub aam adc ret mov cli jmp dec lcall aas sbb mov sub jmp pop mov fisttpl mov cmp lahf sub xor mov test jns sar enter movsl pop fs mov loop mov jns pop aam push lea mov movsl loopne add mov je or js push shlb add in cmp sahf sbb test adc mov outsb movsb enter int3 cmp dec movsl pusha mov inc mov test mov shl in fpatan add sbb loope add or movsl inc mov push ja mov gs js rorl add subb out nop jo js cmp xchg pop sub mov les adc sub and mov and sbb fildl adc jmp imul sub bswap mov lahf (bad) out inc call xchg scas cmpsl insl (bad) imul loope pusha mov out mov daa push or mov xlat add cld cmp push nop into enter in insb mov inc in add lea mov mov and lahf stos shll pusha pop gs pop out incb cs sub imul dec aas xlat jmp mov fwait jns xchg sbb lea sbb hlt rorb cs add and add add clc fsubrl add rol mov out loopne mov xchg add sbb pop mov lea inc in lret (bad) test pop hlt jb std mov stos dec cmp sbb cltd xchg lahf xor les inc subl dec fsub daa and push cli in add aam or (bad) mov pop lcall pop fadd cwtl fldt movsl js sti mov cmp mov test popa adc mov loope dec or adc inc movsl and test jecxz dec mov cmpb jo aaa jmp adc (bad) cld aam daa inc xor roll dec roll sbb nop mov andb jb movsb shlb dec orb pop or or jmp aam movsb pushf rolb mov mov (bad) movd inc das xchg scas mov mov push push jb mov rcll add es xchg ret push cli or cld jbe fisubr lds mov add pusha add and xchg add inc mov xor push add pushf loopne push lds (bad) and js pusha inc call push arpl adc or push xor mov fcomi outsb adc test orl cmc test mov repz cs jo adc pop scas push and insb unpcklps cmpsb loop push add sub in dec lcall enter hlt xorb mov jnp addr16 aam jbe pop enter push xor out push dec pop les test call xchg cltd lcall dec jl adc add fcoms adc and sahf loopne add adc add movsb dec test mov mov or int3 mov xor loop mov push xorb loopne cmpl dec or test dec je jl mov mov or sub or roll mov lcall mov pop push mov and fsub cmp sub jmp mov ss cmp ja shrl lock popa int sahf nop movb jmp jae dec stos xor sub lds ficomp in or movsb add test test ljmp jae adc mov dec je out mov xor add sub xor add test sbb jo cmpsb (bad) inc jl outsb and addr16 and std roll (bad) (bad) int (bad) mov mov cmpsl mov int3 jbe testl mov std inc inc or ffreep orw mov lea imul (bad) cmp fimul ds nop xchg inc loopne adc mov inc in rorb pop daa mov xor push repz add fcompl test fmuls mov xchg xchg (bad) cmp fadd nop adc ret add aas mov shrb rcrl (bad) subb clc cmpsb shlb add mov int3 xchg add fildll sbb inc ret or es test pop mov add (bad) dec shrb and aam inc lods mov mov test xor rcll or lret mov add mov xor hlt jg push mov dec pusha sbb cwtl lret roll xchg loopne jmp pop outsb sub das shrb add punpcklwd or xchg dec inc cmp jg (bad) jae lods mov ss rorb das lcall and cmp ret pop or pop and fwait sbb xchg and test mov repnz or cmp lret loop iret dec mov sub aas add jns loopne enter cmp outsb xchg dec push aas pusha sbb jbe sub aam mov movsb test or rcll ffreep shrb sbb adc dec test mov push mov pusha xor mov outsl ss add inc inc clc jge mov adc xchg inc xor lcall mov lock add int3 xor adc enter mov jle loopne daa int3 loop ret inc ljmp sbb jmp sub and sti jns or ja jp mov and inc cs xor cwtl dec and mov dec jne mov and dec inc sub sbb js mov inc mov mov pop mov jp,pt add or shlb aam jmp mov dec mov jl lea sbb dec rcrb int3 or mov xor adc mov shrb jae xchg test sub pusha lret fcmovu and (bad) jmp (bad) sbb arpl mov out lret faddl pushf aas rcrb js pusha and lcall orl out or add xchg sub daa sahf and mov dec rol inc (bad) push shl nop ds adc and pop bound (bad) sbb test loopne clc addl jp loop int loopne enter out cltd xor icebp pop test imul loop mov pop mov ret aam cmp iret dec push pushf js mov mov add push dec dec roll and pusha mov cmpl stos roll xor les test xchg adc hlt pusha in and into xchg cli push add js pop sbb pop sub cltd sbb imul xchg rcrb add cmp mov in and cmp add and call movsl mov inc enter sbb cld sarb out lea xor add lret add ds dec mov jno scas inc push mov pop or dec gs cwtl faddl (bad) and inc add fadd mov lods dec mov hlt or cmp sbb clc call mov lahf fbld add ret dec xor loopne icebp loope pusha cmpsb adc cmp and test push add push mov xor push push mov je hlt mov cmp outsl add lods add repnz add loop pushf (bad) push cmp and scas pop cmc call sub pop push shlb adc add enter xor mov add lods dec fwait rorl mov call lea mov outsb repz pusha xchg rolb pusha inc or xchg subb knotw mov sub cwtl push sahf pushf and jno xor pop lret cmpl mov and push dec pop add dec int mov dec data16 push xchg test jl xor mov sbb add add xor adc js or call push gs sbb nop pop mov sbb mov shll adc add call add (bad) add dec mov cli xchg add rclb lods sub and xchg stc add cmp dec push cmp cmpb dec pop push xorb test add xchg jl mov mov push or jb adc dec pusha call xor dec test test push pop push push fsubrp test push sub fbstp out mov mov fs les xchg dec mov inc push sbb jae mov adc roll test sub pop push daa push popa add cmp loope sahf adc loopne lock pop cmp dec pop push sbb adc and rcrl nop insb out xchg xor imul out fldcw pop inc or adc test jp mov dec lock jl int3 and dec inc inc std or dec add shrl loopne cmp inc xchg sahf (bad) mov les dec popa sub mov mov adc ret sub call lods inc inc imul jge mov jl sub adc jecxz stos movsb mov mov (bad) add and adc loop push shlb inc push sahf pop out jo xchg js inc lock or test pushf inc cltd mov fwait lahf ja into mov mov sbb cmp adc hlt (bad) and pop mov test inc add int xor or add and mov rorl insb nop push and sahf mov or mov xchg and ljmp aas pop adc jl les mov test xor jns repz in inc sub jg or fistpll jle mov mov adc mov lret adc xor inc dec jns pusha js jb mov sbb pusha test fdivs dec iret pop cmp and sub test movsb cmp lcall hlt jnp add add nop mov js insb fsubs add xor stos aaa aam in lahf shrb mov jo rclb ret adc sub jne popf lahf mov mov test pop adc pop mov (bad) mov pushf and cltd testl or adc add push in mov xor (bad) fstpt adc xchg (bad) or adc js test pop imul sbb dec xchg mov mov or je push cmpsb sbb loop in hlt add jae push or push ja add loopne jnp (bad) jl xor sbb pusha mov and int3 mov repnz icebp sub lret pop mov mov popa mov sub movsb in adc jae xor inc loopne stos repz ss inc les inc push cmp dec dec inc int3 das xchg (bad) mov test sbb inc js push les dec mov mov inc out clc add lock test xchg fs inc stc sbb xchg movsb in cmp inc xor mov clc fadds cmp (bad) jae or js popf dec aaa ds roll jecxz test push mov pop lods mov test add mov jnp sbb fistpl dec sbb fisubrl sub push mov push pop js test mov xor xchg push xchg (bad) js aas cmp enter insb sbb lahf push out jae add and sbb cmp cwtl inc add sahf jns shrb js mov dec dec aam jg iret xchg dec adcb bound dec loope jo sub add mov push leave sarb pop and xchg push and cmp in (bad) or cmp cmp pop lods sub (bad) xor call sub adc xchg push test dec dec sahf cmp clc dec inc test push mov adc imul xor loop aad in cmp push adc enter sub cli out sbb jmp rcll adc sub sahf sbb js push add enter sbb scas dec loopne adc mov mov add loopne mov xchg and arpl loop lods push dec and mov jo cmp add js fwait inc in mov pop and (bad) ficomp jae mov pop out js test adc sahf xor inc out inc mov or fiadd and push xchg and insb sbb mov cs mov xchg or sahf test jge mov xchg inc pop nop js movsl stos cmp xor mov push inc shlb mov idivl enter mov imul fdivrs hlt jmp test pop ja mov cs add fsubs lods xchg xor add mov sahf fst out sbb loope mov dec cmp xchg xchg xor in sahf pusha dec mov dec rcrb out or popf movsl loopne lock lcall mov call mov sub les cs add inc hlt inc loopne jno loope jge mov in and jle repz or stc (bad) mov pop mov xchg into pusha mov jp or mov addl xchg pushf (bad) mov push jbe push bound fsubs je xlat pop fcompl sahf inc or outsl loopne lahf test adc mov and (bad) mov jnp sbb out les or sbb pusha data16 lods and imul mov pushf lea mov inc je or fsubrl push or adc (bad) jg dec nop inc pop cmpsb pop jb sahf test mov add out loop fistpl xlat xor fstps imul sarl and js adc (bad) mov aam mov rcr cwtl inc cli adc cmpl dec lock mov jle mov jp loopne jnp jb,pt add inc ret ds cmp addb out add gs mov xchg fdivs add (bad) fcmovb adc push mov lea imul jae popf lahf in mov pushf lods sub ror adc add imul loopne in dec and sub inc cltd lds imul xchg mov lea movsb jl dec sub sub sbbl jmp xchg pop mov pop push jo loopne push jmp mov dec sub mov test mov inc pushf jmp add mov pop push xchg enter enter push mov rolb mov cwtl sbb test cld imul mov mov daa movsb add frstor mov cmc xchg shr mov sub pop inc rcrl sub mov stc nop andb adc inc jl loope notl or add jo in aas sub mov add mov lret dec lds into and enter in jo subb out mov add (bad) mov fldl mov mov and or xchg lock push add test mov adc cwtl push cwtl loop adc fdivs sti dec arpl mov dec or mov cmp hlt add popf pop dec adc pushf aaa cltd loope das adc push mov lock das push lret sub or mov cmp popa mov lock and xor xorl imull int3 les sub adc daa in and adc and add sbb mov andl loope sbb rcrl cmp cmp sub add aad mov pusha lods pop sbb or nop mov adc jne dec add sbb in adc or add mov fdivrs inc add mov adc add call orl push addr16 lds mov addb fiaddl ds ret sub inc sbb lock nop sub ret repnz sbb cwtl or add cmc jae cmp mov xor dec mov mov pop nop mov xchg inc cld maskmovq (bad) (bad) mov push add repz pop inc aaa fdivl arpl jno dec fildl pusha inc push jecxz movsl (bad) icebp mov pop and cmp xchg (bad) push cli ljmp daa xchg mov icebp and inc and inc add lahf test hlt and add out ss sahf es add pop mov or fisub test adc xchg inc and jne xor pop sub or sar add dec cmp js and out aas in xor insb or lea sahf xchg xchg hlt cmpsl cmp jae loopne mov pushf mov dec lock roll lret add xor out add mov ljmp mov jno sbb sbb xchg xor fs jge flds or dec ljmp repnz loopne lahf sahf (bad) push test pop subb sub xchg mov pusha addr16 jp inc adc add add jo sahf sub cmp sahf movsb add mov lods mov fs add pop mov enter push lods xor add test pop mov mov aaa lcall add stc dec ja add sub sbb sti js dec fbstp or pop aam mov (bad) in mov add pop js pushf mov xor loop fist enter adc sbb jb rorl and dec sub pop pushf and pushf in pop gs fildl enter adc and int3 mov js sahf mov mov seto repnz js push jp sub add pop pusha and or sbb and sbb loope jb hlt xchg add xor sub cmpb (bad) xor sub fisttpl sahf adc dec sub inc mov mov adc cmp inc rolb and pop cld mov call sbb mov icebp add push lods mov sub ret ret (bad) rcl pop push mov test xor adc addl sarl and cmc insl sub jbe gs (bad) (bad) jo or push fsubrl in jne push ret faddl loop jbe push loop lret mov and lods pop push pop and or add mov xchg lret je jl imul orl lock mov add sub shrl push push shll loopne clc jbe sbb mov in nop rclb shlb inc pushf fsubl call stos jae data16 lods mov mov clc add fs pop mov mov xor sub cs or fwait inc nop ror add dec adc or dec xor aam pushf adc scas pop xchg sbbl in and mov inc mov push mov pop add ret jg cmc add out repnz arpl push push mov pop movsl pop pop dec cmp adc push out js imul inc sbb fldcw sbb mov or mov push pop add sbb loop (bad) into rolb xor (bad) hlt and ss sbb fldcw (bad) pop lahf pusha lea push jl mov fdiv adc aaa (bad) loopne je mov addb pop in rcrl cld cmpb mov enter add jbe pop aam leave mov adc mov adc popa mov loope decl jp push dec movb aaa mov mov push mov adc test test rclb pop test mov pop jo mov daa jl pushf fmul sub inc xchg insb jl xchg pop or mov push mov and adc call pop dec rcll imull test pop mov pop push hlt pusha or movl loope inc and lret js fsts mov lock mov aam add sbb lcall jp adc fnop dec mov cld adc or and xchg jns lahf sbb jb mov dec add mov sahf sbb add je or xor and (bad) mov or (bad) lods push or ret dec sbb add inc push cltd or jecxz loopne adc mov lds test hlt add lret repnz sub sbb jecxz mov in pop dec add mov xchg jb adc inc xor out pop add andb add and and ja mov dec sbb adc pop dec and push mov fisttpl add add in and jbe sub push hlt scas movsl jge add jecxz jae fldl add xchg imul cld dec clc mov loopne lods jns push test lahf xchg mov add js cmp dec insb dec sahf dec les lea fs jnp or cld sub add and jg or lret in xor dec into clc or mov les cltd shl insb addl mov pop cld cmp inc lcall jns dec enter scas rcll imul test cmp add sahf pop js ficom push inc cld dec sbb in cmp jecxz aam and imul inc lods mov xchg mov sub call push sar sbb and or (bad) in and xchg sbb or int3 nop inc scas lahf adc adc adc mov sub jmp jbe adc mov push pop out adc jecxz mov out hlt inc mov js adc in inc xchg mov sub (bad) loop insb pusha pop mov xchg test jl mov aam cmpl mov adc imul push mov out and rorl push add jg outsl dec aaa xchg sbb test lock add test subb add cmp shrl fs lods in lds and enter mov jnp shrb push je jmp inc dec clc push xor loop movsb xchg mov mov push ss inc nop notl jmp push cmp sbb xchg and call push fsub sbb xchg xchg fwait mov inc inc les jl mov cmp inc cwtl mov mov in pop cmpsb scas pop int3 add push (bad) mov imul add ss mov int cld push mov call mov jmp jg adc (bad) jae add jns mov testb or test imul mov stos pushf and addr16 sub sub outsl add dec lods js insl inc push sbb xchg idivl xorl fidivl or (bad) lcall nop lods xchg or and push add int3 jp aam or pop mov stc push (bad) dec mov or cmp adc iret pusha aam arpl in (bad) inc xor lcall xchg sbb aaa and xchg xor pushf adc or repnz or (bad) lahf aad mov lret pop jp or sbb dec fbld inc enter sbb movsb cltd hlt or inc mov sub shrb insb rorb andb iret clc add sbb loopne inc push imul cwtl jo xor test dec cltd sub adc add cmp jmp add cmp adc or mov pushf or ret test push mov repnz push ss clc or inc insl and imul add jle in (bad) mov sub adc jo lods pop ret xor push inc mov pushf sbb and and rolb andb and add mov mov xchg sbb sbb loope bound mov push insb pop inc push cmp rcrl loopne int push mov cmpsl add dec pop daa add sahf je mov loopne xor (bad) xor add jo sarl sbb fimul sbb loopne mov inc xor sbb mov (bad) lds lret jmp rorb rcrb jo sarb fdivrl mov or jno xchg cmp pusha add ror xchg fwait add inc mov lahf pop cmp push mov inc enter pop add lret je test js jno les pop push add repz test xchg add adcb imul sub push xor push nop fdivrl xchg push dec mov fs fisttp movsb test mov or test loopne in xchg adc imul nop mov inc adc push pusha call popa mov mov push insb dec adc inc adc adc xorl out rol lahf pusha loope loopne in fadds das cmp jg pop dec test mov in ficomp into test inc xchg loop lods fyl2x inc adcl mov shll inc jecxz decb movsb in mov xchg or add lock inc hlt rorb in pushf mov jmp lahf fwait mov mov dec mov (bad) in and loopne xchg (bad) or adc call inc add insl pop pop add sub jbe add loop cli in call jne js cld inc les in add jne mov in mov and lcall push dec ds add xlat lcall mov repz mov mov enter insl lock pop mov js lods mov dec inc and fcomip mov test adc call mov pop add mov aaa sub push rolb add call ja mov mov and jae sbb xchg xor (bad) pop push push mov rolb mov mov jecxz cmc les shll lock sub cwtl das sbb out xchg inc xchg popa outsl add arpl xchg rorl mov cld dec add les or test cmpsb mov add dec in pop pop enter add sub icebp je cs jl jp or add pusha fstps xor addps fwait xchg (bad) int3 add call pop cmp jl mov aam adc aaa cmpsb or sbb and mov fsubs inc or loope popf or sbb xchg xor inc movsb xor mov (bad) movsb sub jne adc imul stos loope lods push add jbe inc js sub push push jl inc scas xor clc jmp cltd mov adc lea js inc aad add xchg in jae (bad) and lcall sbb pusha rorb and cli dec jne pop lds in mov mov out pusha push mov js rorb adc adc sbb loope das (bad) sbb cmpsl outsb jne mov or mov pop div mov sub adc inc or lahf int lcall sub mov sub cmpsl pop not and sub les movsb sarl inc lods push mov add mov jne aad mov mov pop xor mov pop dec call sbb aam call insb pop mov add push roll sbb sbb inc cs repz and pop push cwtl mov sbb cwtl mov push imul aas add leave call xor cmpsb (bad) sub stos pushf and mov test sbb stos mov call pusha mov in push mov hlt or arpl cld mov mov aaa inc xorb jns xchg js mov and add mov movsb pop and xchg inc sub jnp (bad) sarb rol dec int mov ss xchg ds jge enter das adc jne mov into faddl in test mov pop or mov lds pop mov icebp ret leave mov push inc loope sbb inc adc and mov je and lea cwtl je sti pop push mov mov inc outsb sub fcompl aas lcall add inc jbe mov inc push icebp or sahf xor imul lock lds out sub push imul xchg inc sbb mov mov xor rorb mov push loopne (bad) inc add cmp inc push xchg das add sub movsl bound sub repnz sub jl jbe call adc test mov dec outsl or cmp ret into ficomp xor mov addl shrb jnp gs imul mov mov rcrl int3 sub test dec add dec out and mov adc or ret test adc aad mov cltd xchg nop sarl pop push leave movsb shrl mov push movsb lret adc pusha stc cmp fcomps negl inc and mov jecxz inc jp add test add lcall dec sbb fildl cwtl inc popa add outsb add pop add and mov fcoml nop in jmp in loope mov xor xchg adc frstor ljmp mov mov mov or push adc fsubrs mov clc out dec lock jae cmc aas push lahf lods fldlg2 lahf aam call adc sarl addb popa aam in loope call mov add or mov lcall sub dec dec xchg in mov xchg popf (bad) loopne cmpl mov aam popa mov inc xor xor sub data16 mov and pusha lret jge (bad) lods and add je pop pop and adcl or fistpl adc jecxz mov mov inc lahf stos nop les inc add and iret push decl loope leave mov push mov bswap add outsl js pop mov pop or imul jo adc lock xchg mov xchg hlt lods insb or jb mov scas or sbb hlt aam sub dec fidivr out insl mov jle push sahf and lods aam push fnstenv mov cmc pushf jl,pt adc or pop xor fcomps scas aam test cmp imul test or ret mov pop ret push les scas clc xor imul out fcoms lods movsl test mov mov inc js cmp or dec fwait or add and cwtl in add in add mov pusha and push mov mov js lcall outsl and jbe dec loop ret xchg les jb mov ds jp cmpsb add jno sub mov lods add add ja dec jmp mov mov shrb add lock lcall (bad) js sub push xchg adc (bad) push lahf movsl cs incl xchg sbb sbb mov mov aaa mov push xchg pop jae jl test or sbb pop loopne push (bad) push mov out or das leave fisub add and ret fdivs mov or loopne mov mov repz mov push pushf or outsb add test rcrl nop push sarb jne dec cmp or push xor in pop mov ret (bad) add cmp and or or pusha inc cmpsl loop (bad) hlt adc rcll inc dec jecxz xor in and inc dec aam sbb jecxz insl pusha inc fsubp pop roll into adc idivb dec mov jp or lahf ss xor hlt dec sub out sbb sub popa cld test test xchg or sub adc inc movsb fcomi lods fiaddl in pusha xchg loope xor dec sub sub sub movsl int3 mov cmp movsb add inc fmuls mov mov jg cmpb cld or xchg inc adc stos add ror mov movsl pop test mov mov sub and mov popa loope mov add or fmul gs mov adc js and adc adc idivl hlt xor jp (bad) jno push and xor mov into nop or cld pop dec mov mov adc js dec push add pop scas icebp adc int inc and sahf jne sub dec lds mov lahf dec push or inc scas jnp inc movsb mov jl add mov aaa loop (bad) jbe arpl (bad) add loopne lahf push adc out add iret scas hlt jae cs mov lods ret lahf (bad) in xor push idivl pop lock mov das mov inc test call sub or sub mov (bad) rclb divl push cli jp sbb lcall stos out loope sbb or sbb pop xchg add call push out enter pusha cmp adcl std aam xchg sbb push cmp inc adc xchg lods jbe xor mov in or sbb push mov xchg (bad) adc or loope js test (bad) fimull xchg or jmp adc les sub imul jge jl mov cli mov or (bad) jbe mov (bad) mov add pop aam loopne sbb xchg add mov test outsl cmp inc test hlt add sub popf loope (bad) (bad) lock dec cmc sahf xor (bad) jns jg in xchg nop mov pop subl test js dec mov popf adc jmp add sbb fwait push loop pusha sub mov ds cmpl fs ja out cltd adc mov pop aaa rcrb dec cmpl adc sbbl outsb (bad) mov (bad) icebp in cmp je cld bnd or lds pop int mov cs xor movsb stos mov add push std push subb xorl dec ja mov (bad) loopne dec jmp in rclb mov pop rcrb pop cli inc pop adc test jmp sar daa add aad mov lods lock mov adc call add mov inc (bad) cmc xchg mov push cwtl sbbb mov lock in mov (bad) sti xchg cmp adc add int3 cld jnp cmp aam sbb ljmp imull xor cld sub loopne mov cmp les call jmp mov hlt add xchg das cmp pop sbb cmc pop add imul jmp js mov adc add imul insb and jns add add sub inc jno jg jb mov mov add sahf and (bad) jae or jge fnstcw cbtw sbb sub les mov fld mov (bad) lahf rcl sub es add rorl add sahf jnp push mov dec imul push imul or sub jo mov sbb aam jecxz cmp test test leave addr16 pushf sub mov mov fnstenv in icebp test push cwtl push dec xchg sub inc lods inc jae xor or ljmp rcr or or andl cld loope out popf js movsb (bad) mov imul adc add dec cltd add jae add xorb pusha je ja push (bad) loope mov outsl and and xor dec fwait aas sub lret dec jae adc mov fcomps dec or movsb sub inc xchg pop ss lock and cmc add xchg adc pusha imul sbb fisubrl (bad) jnp mov add icebp outsl js test add lahf test clc or xchg imul (bad) or das xchg nop mov js hlt aas and movsb xor int pop fsub sbb push and movsb sarb addb xchg jo jg add push mov ror imul lds cmp dec push les pop int3 mov mov iret aam arpl xchg inc push shr push mov movsb adc cwtl jae ljmp lahf outsl pusha addl add add or (bad) pushf add pop loopne imul jno testl loop dec popa and pop mov sub xor movsb js push fildl or in push test pop push sbb or xchg inc pop in xorl sub cld add sub mov cltd add mov out (bad) and sbb out mov pushf in das cmc mov adc je sbbb xchg dec push aaa jl mov xchg push sarl add loope inc popf inc add ja pop add dec mov les pop sbb loopne sbb das imul mov jle cwtl pop dec push hlt mov pop sbb movsb sbb and mov and lods cld or jle addl cmpsl and inc adcl add fmul or xchg fs nop xchg inc lds test icebp loope shr xor adc stc repnz pop add lret js js lahf pushf (bad) xor dec xor jg mov test jns lahf xor cli movsb add test jns pop stc push je cwtl and aaa jbe or mov shl loopne add in or js and mov sahf daa mov pop xchg xchg inc mov lods cld sarb subl shrl sahf push popa jge dec mov (bad) mov jle in inc add out adc nop jb aas cmp xchg cld adc add pop pusha orl lret mov fsts in cltd sub or (bad) or push jl stos daa dec cmpl aam mov cmpsl push or arpl test test xor sbb add pop or add std nop and lahf mov cmp cmp aam mov pop xor xchg pop mov inc adc insl cld movsb dec (bad) les add mov mov (bad) in cltd ja loope push xchg mov loop and jnp add imul or movsb cmc sbb dec mov dec pop lock mov int3 loope jo sbbb test int mov (bad) push outsl or fsubl imul or orb mov push test hlt and es cs jnp xchg fcomps cli (bad) aas mov cmp push call add in inc xchg jnp loope mov and add int3 add push shrl pushf lea cmp mov dec xchg add adc xor lock lea xorl inc loopne or xchg mov jo mov or xorb sbb (bad) push push push dec jb cmp mov lahf les inc dec sarl cmp dec mov adc nop les scas (bad) mov out in mov cmc loop inc dec test xor xor sub cli daa popf ret push jo sub xchg loopne lret jmp jp sahf dec xchg (bad) mov cmpsb or cmp sub and mov jns adc mov pop fs xor roll adc cltd mov and cmp xchg das and jp pushf or sbb call cs arpl add out dec dec sbb clc imul inc jle lahf add mov sbb ss jnp lds sbb inc jns fdivrs lahf ja dec xchg pusha sbb xor in js bound add add stc jbe push or out inc loope arpl pushf testb adc add mov les cmpb and add mov mov sbb dec ss pusha xor hlt jecxz cmp lret xor jo add pusha push cld call xchg jo mov insb fs mov add mov insl mov cmp dec mov adc and loope loope iret sub test lods test pop adc dec pop adc xor imul jle bound pusha sbb or sarl dec mov mov lea adc jmp nop ds in lock neg mov inc sbb add stos sbb test mov pop imulb xor lods add ja inc leave je cmpl or int daa imul mov and stos pop aam nop mov add inc enter in or imul clc or fldl cwtl inc scas push (bad) xchg cltd add push jnp dec popl movzwl fcmovb sahf adc js test pop inc mov js xchg inc mov pop mov aaa jl push js xor sub (bad) pop or sahf and pop adc push js lahf and and push rolb xchg in mov jnp adc push or add pushf aaa adc js aas push jl rol jg in sub add mov push aas jnp mov fcomi shrb pushf dec loope fs jg (bad) and (bad) jl adc add in xchg xor inc adc fwait add jb je das xchg cld xor sbb mov pushf xlat mov add or or out ss add rcr (bad) xor lock or mov push sub lods sbb adc sbb inc mov inc stos xor add (bad) idivb pusha mov pop sub (bad) (bad) mov xor fildl in ljmp cld xchg cmp ret pop imul icebp mov rorb and movsl mov pop pop adcl add fs loope mov sub stos add enter (bad) mov dec orb fstl dec mov clc mov in dec pushf sbb mov cmp loope clc sub loopne repz dec in add incb and cwtl push jo pop daa inc in mov sub in int sub xor sub in rcrl dec enter repnz mov xchg inc and cld cwtl cmp test out (bad) lock adc cmp mov loopne cld adc imul push add dec dec int3 and adc loop push dec push sarb and push adcb pop cmpsb repz lds jo sub adc dec ret icebp clc add scas mov adcw (bad) mov pusha pusha mov jecxz adc sbb aad out jo lods dec add xchg (bad) jb add fdiv sub imul add outsb adc scas pop mov dec hlt or fdivrs lret xchg inc inc pusha mov pop cmpsl movlps loopne lahf bound testb or test pop fmull repz test push aam push leave xchg sbb jo call test rorb popa pop aaa test inc mov adc or popf or aaa add or mov sub pusha mov and nop xchg push lret sub dec dec fs addr16 inc data16 mov fisttpll roll cld fadd add movsb cmp xor fisub (bad) jno sub mov fsubl mov das adc add and test cmp adc mov cld sub jne repnz mov or and rorl cwtl cmp orl ds inc cs sti inc cwtl (bad) das inc jbe dec movsl pop or dec cmc mov lods dec adc and mov add nop out push and mov stos js gs loop loope mov add das add repnz insb mull xor mov mov sbb add pop ja jb jbe add pushf hlt cwtl cltd cwtl sbb divb mov repz add xor pop dec xchg jne icebp adc inc enter cs repz (bad) cld or adcb or xor or xor les dec add js loopne sbb lahf adc xchg adc aaa (bad) and add sub ret rorl js pusha addr16 mov cmp jo js xor jl add add sarl push jb add add inc roll in add lods out dec jo repnz push sbb loop xor mov bound xor add cmc ja dec lahf xor into enter add int3 lods cmpsb add cs rol sub scas imul fldcw mov jecxz test dec fistpl dec sbb mov and push and mov pusha test fwait adc loope xor adc shl cld mov lock and movsb or inc in (bad) loopne xor imul nop xchg (bad) or out inc stc in and pop in dec push outsl add mov add mov (bad) inc mov add fmuls loop adc and push dec in (bad) nop dec and fildl das ja jp pop cltd xchg (bad) sub sbb add scas js js dec mov dec stos addb sahf mov dec add dec lods dec imul pusha xchg push loopne js aaa lods pusha xchg mov fiadd and fmull push lahf and movsl jae mov fadd mov popa les xchg inc jbe sbb mov cmp mov sbb loopne xchg stc xor sbb jg les les mov fadds mov enter jp enter rolb or cld pusha lods add and js jne enter add fisttpl addr16 andb outsl push adc js sbb and add adc fdivrp and icebp aaa push jnp inc xor inc push add mov into adc lods push dec lods push add scas mov push pop out lods sub mov pop popf xchg lock fldenv nop call pop xchg lahf and mov adc add mov lock add xchg hlt jp test push and jecxz out pushf lock (bad) mov mov repnz mov adc repz enter outsl (bad) lock rorl add insl lea popf xchg add imul push dec stos out adc call xchg js and mov or cltd cwtl sarl fsubs hlt sahf inc lahf (bad) pop mov clc nop mov daa jl jno (bad) fild lcall addr16 loope hlt add adc cmp dec mov test sub inc xor insl (bad) pusha add and pop xor sbb sub in mov mov adc sbb xchg pusha or adcl fstl mov inc xchg sbb mov popf sub mov out pop mov push add xor cld add test inc push cmp mov sbb xor cli hlt pusha int3 ds lods add lods push add mov in test push (bad) mov xor pop pop mov mov cmc pop mov xor in mov add test pop push mov pop xchg in dec xchg add jae add shrl jo mov sub repnz mov add inc pop and add loop loopne fcoml jbe mov or jns sbb ret out gs xor xor cmp sub jnp mov rclb cwtl test in faddl inc mov sub fadds sbb mov mov arpl jmp sbb inc int mov divl sbb aas stos mov call pop faddl pop int3 sub xor (bad) aad add out std or enter pop rorb test test js roll sahf xchg lldt clc xchg push loop imul cmpsw mov push mov jne,pt stos sbb loop cmp xchg js lods or xchg mov pop ror andb dec jecxz jl stc test adc ja mov sub sahf gs nop lods cmp mov stos mov or pusha mov xor or sahf movsb jmp add (bad) in clc shr xchg sub frndint movsl pusha adcb push cmp or mov lea sbb or inc sbbb pop mov jae jecxz inc test cwtl inc je add sahf xchg je inc sub leave adc movsl scas xor xchg pop inc enter sbb add dec mov and xchg jo jmp mov mov pop jmp test loope mov inc test aaa (bad) int3 syscall add cwtl ficompl mov add in movsb mov cs xchg mov xchg xchg jno inc push add out xchg imul and push and xor pushf mov (bad) dec add add out jl sar dec xchg lret sbb repz jle enter fcomps sbb ja pushf jbe add out sub or bound (bad) fwait imul js cmp add dec push mov imul (bad) xor add cmp dec (bad) push push adc mov test pop cmp mov mov or push jl jae in jl popf testb in out jmp mov mov popa clc repnz js lock lea cwtl pusha xchg je pop pop test inc imul clc test enter jle daa ror or sahf popa pop les sbbb cmp inc lahf mov push test add adc mov cwtl xor mov fmull scas add xor arpl jg cli ss les fs adc and jno hlt dec sbb sub movsl xor js ds inc ret sbb enter je push dec mov add loope xchg adc add jb lahf out xchg mov and jns sbb mov clc push cmp fcmovbe mov mov outsl faddl cmc pop (bad) jb mov push mov mov mov cmp popf and xchg shlb inc jl sub gs mov cld xchg enter imul mov dec pop sub cmp mov mov mov add out fs js push shrb loope add outsl and rcll orb add jnp xchg js imul xchg mov mov jns enter xor jg dec out push sbb punpckhwd adc enter fistl adc inc in push sbb sbb popa ret mov andl dec loop add xchg jge adc pop call and push subl jle pop fildl adc push andl sahf xchg push into daa mov scas sbb xor sub jnp cmp add int3 test inc adc arpl rcr jo jmp jno pop xor imul jmp mov pop and mov roll push mov mov scas adc and loop xlat leave sub and pop add popf jge xchg (bad) inc jmp jns pusha lea sti sbb aad mov pop imul sub push popa xchg int3 or jg jp or or jmp or out adc or rorl mov (bad) sbb jg out adc mov lret mov mov frstor or scas pop cmc add mov ds pusha jbe,pt pop adc sbb mov addl jle mov add imul dec jge add or enter fdivs jns fs out adc inc add jl push or popf ja sbb int3 or sub fs in pop pop sbb jle mov int mov cmp in test sti inc mov imul mulb fisubr stos clc aad ret scas adc mov pop neg mov push les push xchg jne adc mov push mov mov sbb xchg xor jbe push std ds pop mov mov dec mov and js jns adc cmp pusha adc out inc mov pop fwait sub loopne cli add and pop inc mov sub jmp mov push out push add fcmovne jno lcall push not mov in add pop popf idivl inc xor cli fildll jmp push push aad sbb stos cwtl imul or xchg pop dec call fild or call add ret lcall outsl fbld pop jecxz lods dec sbb into push or test and jnp jl shlb mov test je mov xchg pop and aas and stos sub sbbl jmp sub pop mov xor lret scas (bad) mov and popa push cmpsb js dec mov pop fisubr pop push sbb mov cmpsb xor add jae ljmp mov jmp daa pop xor sub push (bad) push imul mov sub leave or fwait icebp clc inc std push ret pop inc sbb and into mov outsb hlt pop mov in test (bad) notl push push outsl add dec add and enter xor mov js pop fldcw ljmp dec jle jl and das and les pop pushf mov xchg scas and pop mov add and arpl and test sub aad (bad) mov or inc fidivl (bad) bound into (bad) bnd ret stos pop stc xor outsb repz mov insb cmp or mov inc jp fstpl add mov test out rorl xor sbb je or leave push ljmp and or (bad) and sbb aad call (bad) mov rolb (bad) hlt aaa jg sub push mov add sbb out pop lahf scas push lahf scas sub push add jbe es sysenter roll arpl xchg dec out inc push add and cmp adc rclb jbe test (bad) gs rorl jmp (bad) (bad) mov scas add aas push icebp mov repnz cmpsb mov adc fcomp popa add lds (bad) addr16 shrl add jecxz pop fucom jns cmp push sub pop (bad) pop mov stos test inc pushf out jecxz push or xor out lods fmulp pop negl add hlt (bad) xor dec dec hlt adcl push mov mov arpl lock dec sbb jg and rcl push mov dec and push ja cmp outsl repnz addl shrb adc in or mulb roll aam les and fs scas out mov jne rep popf imul mov aad mov dec lret pop jge push xor lds lcall xor (bad) add (bad) inc out in xchg movsb (bad) xchg push pop xchg sub (bad) sub and add adc jp jo adcl xchg mov dec add push jb out pop mov fs or xchg test xor add mov test xchg sub xchg outsl sbb cmp sbb into sbb rcl and dec mov add dec insl mov jne negl pop xlat add sti aad jmp lods push xor cwtl (bad) sbb xor add pop xor sub jo pop mov movsb (bad) (bad) mov fs (bad) stos popf cs dec ljmp mov jmp push mov lcall aad roll cwtl test sbb shrl out cmp jb push jne xor loopne mov sub mov mov lret add add or scas push aam lahf pop lods push ja lds sub and roll sub xchg mov or add (bad) add mov (bad) xor rcrl aad xor xor cmp (bad) inc repnz ja jge jnp pop cmp ficom pop shr stos add add jg pushl mov in add pop stc (bad) test test sbb int pop mov test xchg out push daa cmpsl xchg inc in inc push push fwait stc sub fdivrl mov icebp dec pop pop std pop cs or dec incl lahf addr16 inc jns jno dec ss mov popf les sbb fisubl mov jp lahf xchg jbe mov outsl fs xor jge out jp jae and mov pop outsl mov test int xor jmp std cwtl sbb sub pop push cld mov std scas mov pop push inc mov fistpll mov jmp mov and fisubl push int aad subb push sbb std jae jns add loopne jno andl or mov repnz cmc (bad) nop xchg jl test jp jmp mov jnp mov and out xor pop adc and jmp (bad) jmp add into push pop xor sub das lea mov mov test mov js das loope ja loopne jmp cli xchg sub int3 scas jl (bad) fldt jb sti sbb lcall js bound adc xlat fsub aaa cmpsb dec mov adc pop cmp mulb mull sbb cmpb repz sub icebp push sbb out xchg ljmp xor pop push push or mov xchg pop cmp add out not adc jnp pop into mov (bad) sbb shll push mov jl jns sub inc in aad fcoml jbe pop inc daa enter into or clc xor sub call add ret imul sbb adc sub jp or inc clc jl (bad) loopne cmc in lcall stos cmp out lcall mov out xchg mov inc ljmp xor cld add ja loopne sahf pop testb mov notb sbb adc loopne lcall in cs scas popa rcrl ljmp mov cmp jl outsl and es aas jmp pusha cmpsb dec jb jle sti push mov inc ret lods add jnp inc mov xchg xchg xchg jb pop xchg mov jo je outsl outsb and data16 insl popa mov gs sub and je iret (bad) push push data16 ja jb fs jbe insb cli jo in jae ja (bad) xor data16 es sbb addr16 popa cmc imul cmc jne or mov jo jae outsb inc push push dec sub jmp js push inc pop fs sbb jnp jns or (bad) cld fisubl add push lret dec dec sbb sub push push jo jb incl bt mov andl mov push (bad) rcrl push ret dec pushf pextrw sbb vmread add ss jb sub mov add cli inc add sbb xor mov xchg or xor mov daa xor mov mov mov lds push push push dec add dec sbb ret les xlat sub es or popf pop jg wbinvd test cmp jbe dec fadds into add mov adc pop adc dec jbe inc fnstsw add inc cltd lock aad add rorl pop push push add mov and bound xlat gs push cmp and mov stc into ret (bad) fxch adc push jg bound xchg add lcall cmp fistp ss jne lock dec push inc test or outsl xchg fisttp sbb push inc pushf adc cmp add cmpsb arpl mov (bad) ljmp icebp nop add ss sbb jae jl rcrb sub mov push pop je int3 mov jns xor push pushf adc seta ror mov cmp neg xchg pop add fchs dec xchg test imul loopne dec push dec or pop testl pop xchg popf test adc jle popf lcall pop test aad jmp push (bad) mov leave push sub jg fucomip pop stos (bad) mov sbb loop lods xlat nop movb mov dec imul adc jmp aad pop and and negl imul push pop push mov hlt dec sti dec ret std loope pop je notl push or lods mov das (bad) jg mov lcall add xor inc pusha push sbb jg xor cmp clc mov push cmp es sbb xor xor fist mov mov pop jbe imul rolb sbb xor addl dec sbb bnd mov daa sbb pop ret icebp psllw adcl neg adc int push pop lea mov pop adc scas fiadd fwait xchg pop hlt dec int and les mov je jge pop add call nop pop pop stos and (bad) jmp test andb jge xor cltd sbb pop add pop xor and out push jmp pop sbb not or out lret sub jmp inc inc pusha fsubr jbe inc push jmp jmp ret push adc cmpsl pop enter or out lods xor mov xchg loope cltd sti jb std icebp cmp in jge add gs clac popf cmc sub pop faddl ret fistp mov xchg mov jb xchg daa inc ret jb orb push pop shll into cld push sub jmp movsb push and mov testl jmp or jnp mov jmp and enter add cld inc sbb pop sti dec orl or mov inc incb push mov (bad) movsb test cwtl pushf add push mov jg repnz sbb and or les sub push push pop pop xor bound out push aaa inc sub add and push push rolb std jns outsb add cmp frstor xor shrb or outsl cmp add aas sti jae cwtl mov jne pop pushf jle pop or xor pop ds inc pop ret bound nop imul in pop fs xchg xchg xchg xchg sub out adc add decl loop adc ret popa mov (bad) or sti dec jbe add imul repnz push sti das add xor and pop mov cld mov mov repz sub cmp push loop int pop mov jl mov negl or and fmulp pop jmp sarb std pop hlt dec out and adc in xchg mov lcall sar lods lds add pop pop js sbb pop pushf push jge sub xor dec push xchg fucomi aam aad mov mov and mov jns add sbbb sub sub jmp insl push cmp sbb jmp ffreep xchg sti repz adc sbb mulb ljmp mov jmp push pop pop mov and mov jp push test or xor ss dec ljmp fidivr push pop mov ret into lahf jl loope lret or sub push xchg pop nop or jno aas in mov cmp mov sub test xorl adc imul lods cli adc add lret fnstenv gs (bad) push rcll in add xchg jp not out int xchg nop pop (bad) and pop push test or lea dec jge out push sbb pop pop hlt pop jnp cs pop lds (bad) orb jno dec jne pop mov add add mov adc ret dec sub sub mov out sub pop pop xor nop movsb cmc rorl sbb loop and lret adc lock push push mov outsl leave push add cmp push mov sub sti (bad) popf xchg fimul push push jns pop fs es adc adc shl jp dec nopl or inc movsb mov addr16 dec adc or push add (bad) jbe aas pop xchg jp or mov adc jmp (bad) add add dec mov push xchg mov push out stc (bad) jbe repnz push lods fsub pop jnp dec mov add test or pushf (bad) mov jg cwtl sbb test jl test xor jge add lock (bad) hlt xlat xchg repnz test dec scas pop jecxz shrl movb jmp mov fistpl pop inc add shrb adc inc or (bad) push insb pusha test nop addl push stc aaa shr jmp xor cmp mov outsl mov xor clc mov addb loope mov dec push push mov add lea or out xor inc idivb pop add xchg adc and outsl dec movsl sbb inc pop (bad) pop cmpsl or test (bad) mov inc add pushf mov xlat into jno jmp mov and pop cmp sub xor je loop imulb ret shlb adcb movsl xchg loop pop popf js pop pusha sysexit mov jg push cmp aas leave rorl push mov or xchg mov jmp push dec jmp jb imul inc (bad) bound mov fimul push cmc cld iret mov js or xchg jns inc icebp vcvtsd2si xor dec jmp cli (bad) and add (bad) imul lds adc lret pop cmp jne jnp dec and ss in loope clc loopne pop out inc xchg repnz mov ja outsl pop push mov call sbb lahf das js,pt daa xchg inc jo inc movsl pop push push adc mov add testl xchg nop ja add ds push sbb and or mov jle into mov mov sbb push dec xchg push dec add jmp xor mov dec adc push or adc (bad) cmp orl or ds stos push push add pop push pop out fbstp negl repnz mov scas and or repz bound or push sbb add out fldcw dec pop inc mov or jne pop push ja xchg jns push pop out cwtl sbb lods inc adc add lahf lea mov mov addl push nop aad les lahf and add hlt addr16 fisttp jne adc (bad) shlb lds sub call add mov lods xchg mov imul mov pop pusha dec addl or pop sub mov inc or arpl cmc ds xor leave das sbbl pop inc add daa mov push mov cmpsb jmp cld dec sbb mov arpl ss mov dec pop scas into mov jns repz clc jmp pop sub rorb pop stos cltd mov and je push mov mov cmpsb and jg sbbl addr16 in mov int xlat push ds cmc cmp and jge rclb push dec pop inc enter shrb mov pop adc movb cmp (bad) or or push aam add inc or int3 mov push xchg cli add add js ret divb or xor test add gs or vmread mov or xor rcrl jae dec (bad) sahf mov (bad) jmp aas adc imul shr out lret cmp push push xchg sahf xchg ss popl push push push ds lret jl or add idivl (bad) xor dec nop dec nop dec jns rol lods out jp inc dec pop mov pop movsl std push lahf push mov insl and dec mov movsb push dec push add push nop fnstcw imul mov shlb and cmp push adc sbb pop js aam sti aas andl nop or popa movsb divb mov and jmp sub outsl inc xchg cmc daa or push mov scas (bad) negb or inc add in sub mov dec mov pop xor aam pop mov fildl movsb xchg cmp add mov inc jo adc jae fmull nop add movsl push str xor jmp push push insb xorl xor mov add sub or roll in (bad) xor pop add pop dec mov jmp or push rolb cmp cmovp loop les mov jno mov sub cmp add outsb adc nop adc sub clc inc movsb or out js adc out rclb outsl and and repnz (bad) pop add pop dec push pop jmp xor orb fabs jmp xchg loop dec (bad) jp lahf jg movb cwtl pop cmp test xchg mov ja inc sub xor repz ljmp pop aas bound ja sti or or pop xchg add cwtl dec mov hlt iret add shl sub aam test ret fcmovb or xlat pop icebp cmp addl stos not lahf sbb push push scas jb xchg fnstcw or stos mov sub push jecxz pop inc icebp fadds out fs add push rcrb sub test jp lea and imul clc (bad) cmc xchg pop sub cmp jb and push jae dec mov push push int3 lds push inc sub jle mov jmp cltd movsl cs data16 in dec cltd push push push out test pop pop dec cmp mov fwait test mov sbb lret push loope aam jmp stos inc cmc test out adc cmp jmp sub xlat data16 imulb loop pop fadd mov movsb mov pop aam jge xor insb cld mov dec add xor and push repz rcll (bad) mov addb sbb fwait lock out outsl jecxz or pop sub insl cmp hlt lret notb xor xchg or pop cmp adc push inc or cmp or xorb adc enter mov clc fistp dec sub or cmpsb mov sub inc or dec fs or xor cmp cmp nop and xor and sbb or inc push jmp in cmc inc int3 xor sub dec push icebp and push jg icebp mov jbe leave jbe and outsb adc add pop dec cmp out test jmp sbb ljmp std loopne jnp imul dec pop xchg loop (bad) inc (bad) loope add in (bad) xor loope sub in inc or or repnz data16 lret daa add sub in (bad) xor cltd pop sbb or or icebp jne mov or mov mov xchg push ds pop push jmp xlat mov or sub mov scas sub and add rclb orb out mov mov shl add xchg aaa xor jns jno das push aam jbe loop loopne jl and jg inc lret pushf pop rcr mov cmp movsb int inc jecxz push lods outsl (bad) (bad) dec add adc add adc lock push mov push (bad) int lea into dec jg mov dec test push sbb adc xor mov cmp inc cmp shrl mov out mov sub mov xor pushf inc or adc mov cmp (bad) xor in xchg push mov add xor sub (bad) (bad) cmp (bad) jns rclb ds xor sarl and mov lret mov movsl (bad) lret adc add and or bound stos mov add ljmp enter xchg push add xchg stc add adc pop jle lcall mov sub aam mov ja mov mov jl dec scas inc mov jl jns loop xorl jmp jg lcall pop dec adc in mov outsb cmp add adc (bad) ss ret pop push mov mov cs mov fnstcw mull mov ja into add out sub or xlat jo add ljmp lahf mov repnz pop enter ljmp shr fadd out cmpsb movsl add xchg rcrl out mov fldcw movsb rorl dec xchg imull addl outsl xchg mov cs push inc (bad) cmp fstpl repnz dec cld cmp pop mov jb ficomp xchg inc add pop add mov addb inc add mov jge push cli mov xor pusha lahf jp push ljmp push sub test fiadd xor (bad) sub pop test and outsl les nop in pop fsts xor push in jecxz add jmp js (bad) jle lcall push add jmp pop sarl jle xchg ja (bad) push movsl fsubl gs sub xor pop lds sub xor or mov push pop xchg ds jmp es and movsl pushf push cwtl hlt sub xchg int js test daa icebp add jb and push adc pop stc into je (bad) shrb sbb shr lret das jae push inc sarl sbb pop push sbb pop out call adc sub dec or push jns adc into pop repz dec or pop dec xchg mov jmp jb push out jns xlat mov pop fldcw jge lret mov cmp cld mov mov jmp xor daa mov out and sub pop mov outsb and pop fsubl push push outsl out nop mov loope fistp into lods scas mov inc add cld mov rorl push pop add mulps rcll std jmp push enter in sub cli inc into mov push or add arpl (bad) pusha cs mov and pop (bad) push xchg mov pop pop (bad) call shl push aas es fs repz push test push test jnp inc shl xor pop stos imul pushf mov fistpll (bad) jmp jge clc add ds aam mov std adc outsl (bad) out push iret arpl inc adc lret inc push jmp sbb cmp xor lods and mov test andb fstps or fiadd pop negb outsb les mov fcomip fs mov ficompl push and adc icebp lea adc inc mov daa enter dec add mov outsl pop add inc add mov int3 ja cmp fnstsw adc mov rcll or pop push stos push xor xchg jne add add imul push lahf lcall add fidivl inc (bad) ljmp xor inc pop out rcrb xchg and pop pop pop in leave addl (bad) movsl pop mov and mov rorl or out pop or ljmp (bad) mov nop enter mov jbe mov mov xor jnp push mov mov mov pop jne (bad) sbb cmp push hlt loop xchg sbb cmp (bad) jns push shrl jp aas sub cli mov mov xor (bad) jo jmp aas and iret push cmp ja test loopne or lock jb cltd push and push pop cmp (bad) sub fs inc notb lret out in or inc rclb jns cmc movsb jne add lea pop jb jg mov jmp push repz xor in scas or xchg in jl or sub xor jmp call mov ret mov and mov dec xchg pop jne shrb push popa lock lret xor cmp rorb or add (bad) out pop std loop xchg repz pop enter dec das sahf sbbl dec mov lcall sbb test repnz dec sbb ret dec add jo jge sub add pop add neg test mov int3 stc jecxz push in xchg pop (bad) lds push cli inc inc push push adc inc les cld pop rcrb les iret push xchg daa psubd mov test mov push insb and (bad) lock sbb sub jmp (bad) dec jbe pop std ja (bad) lock push (bad) mov jecxz aad push testl mov dec xor inc xchg or xlat pop pop sub shrb fdivl or pop lods add jmp ljmp sbb inc or imul sub or or xchg sub loop dec mov and icebp add mov jbe and cmpsl mov lahf fs daa aam test sub sub call test or and and add jne,pn in sub xchg movsb lea jmp mov das sub rclb lea ljmp (bad) or and sub jmp mov or pop mov xor jle jg xor cmpsb fs js movsb jns add pop mov addb add outsb sub sub cli loop pop xchg cmpsb adc leave push das cwtl in push int outsl mov iret jmp inc pop and (bad) (bad) jne adc and xchg lock lea adc mov or daa shrl iret sbb dec outsb jno xor lods ret push idivl push mov mov or repz loopne (bad) repnz addl pop les mov dec ja imul dec xor dec bnd out fstl inc in in or sub mov insl out inc cli outsb cli aaa pop (bad) dec xchg (bad) cmp pop mov add cmp adc xchg mov xor ret push fimul (bad) fiaddl enter popf mov xor aaa add pop mov and in or je es or sub aas dec sti mov mov lahf ret repnz push das aam or xor add lock notb rcll mov int inc xchg jle jl aaa adc insb pop push lods mov push aas inc adc push andl cmpsb ficom pop loopne mov mov fildl repz push mov mov addl and mov pop into cmp xor push (bad) dec xor push xchg or jbe jmp mov push mov mov add sub popa cli xchg jmp adc inc imulb ret jmp mov (bad) fsubl ret nop mov sbb add mov xchg jbe jns jae pusha iret outsl push mov or or mov cs and hlt add aad addr16 pop sbb popf jle pop xchg jae lock movswl push push lret mov pop push or adc mov xorb add test mov fadds mov test inc cwtl and mov xchg jmp xor mov adc ds push xor add mov mov mov add xor or inc add dec or xchg (bad) in and push mov jae add jmp aas test pop pop push mov xor iret lods inc fcom roll mov mov inc dec or ret pop pop pop mov (bad) jmp sub out (bad) (bad) fsubrs aam xchg test sub (bad) xor adc push ds and mov add fwait mov dec adc cmp inc mov lods (bad) xor and cmpsb xchg sub sub lret mov shlb (bad) pop inc push or cli xlat mov imulb pop inc adc inc ljmp pop stos pop push movsb dec mov ja movsb mov adc push mov in sbb jg xchg push dec insl inc popa ja (bad) repz mov add mov jmp pop lock rclb adc je mov xchg out rolb das test xchg jmp imul cmp orl cwtl ret ds push xor mov cmp mov or adc inc push add pop cmp jae sbb pavgw (bad) jmp xchg not xor xchg shll push pop mov jg adc xorb leave cli push (bad) scas mov mov jg (bad) and push (bad) cmpsl scas shrl lods (bad) scas or sbb jg lods push mov push sbb int out rcll push or outsl (bad) pop test dec (bad) push roll cmpsb xor pop sbbl push js divb inc cmpsb into lods jg and lcall add pop sbb jecxz adc call mov add imull xlat cmpb std jg sub add je mov shl ficompl adc add cmp mov adc pop jge lds aas inc mov or mov lds les ds dec call jmp icebp sti fwait or or frstor std mov ret or test add add into cmp into adc push push pop push (bad) in and and mov in add and pop sub pop mov push repnz ss pop dec shr call mov mov push loope popa push jmp and ljmp jns xlat and add xor dec add (bad) fstpt jbe notl mov imul xor pop dec (bad) icebp jl fist push jb cli repnz imul mov notl leave sub xchg sbbl sbb xorl or sbb and pushf inc cltd addr16 push fnstenv cwtl clc pop xor fcomps ret inc pop cmp ljmp sbb add pop outsb out push push mov cs add out jg fbld outsl js rclb xchg pop leave lock add imul adcb out push jbe repnz mov mov lods mov je adc fsubrs adc out lcall push notb add jmp bnd dec (bad) out sub or cmp xchg pop mov add rcll mov fldenv and dec inc add mov jmp or jbe push iret cli call dec cli dec jnp (bad) xchg push loope lret and fcompl inc daa or shr icebp out ds adc leave adc jl testl iret pop adc clc add pop dec push sti mov xchg pop insl lods jo push pop rorl leave fadds or mov out sbb xor sub test or or outsl jno inc pushl jmp inc aam mov add xor jbe inc inc sub add (bad) fdivrs fnstcw in out cmpl outsl lret mov inc test bnd add dec out in xadd cmc mov movsb xchg inc xchg pusha lea inc mov aas pushl (bad) mov les cmp lret imul pusha and sbb mov fdivrl cmp scas mov daa or adc inc rcll add (bad) jmp dec sub ja jbe es popf jnp rcll test add in pand jle mov pop pop mov les loopne jg jp xchg and jmp cmp add or cmp lds jmp adcl cmp insl jne mov mov ficom arpl cwtl jnp insb xor out rcll ss cli and or aas dec adc jae gs sub outsb pop sub pusha push inc pop mov (bad) lahf jmp jno dec leave cmp (bad) fimul in xchg (bad) lods and xchg pushf mov mov xchg cmc xchg adc push rorl lods xorl jmp pop xor jo dec dec fidiv mov sahf pop jle adc sub addb push nop add pop mov cmp fadds xchg push mov stos popa test test mov push aas and mov test fs push pushf cwtl pusha cltd mov mov (bad) pop jg negb or push push add sub jecxz (bad) jne fistpll out xor mov add ljmp rcrl ret lcall add scas cltd xor mov sub rcll in mov imul into dec bound outsb xor inc addr16 out movsl insl xlat outsl add xor pop ds insl add and out jmp subl pop pop add jbe inc pusha push pop (bad) out adc push xchg clc clc xchg mov sti jge mov mov lods lock inc mov push lods cmp xlat push pop pop repz adc mov call mov sub cmpsb ss (bad) icebp mov jle iret mov xchg inc xor inc lods xchg lret cld (bad) xchg daa pushf inc add xlat rol imul xchg xor mov add pop mov std xchg movsl xchg popa or imul jmp dec test movb and xchg (bad) jl bswap mov or xchg inc mov imul pushl test mov inc mov sub push stos bnd and mov sub cmp stc xor cli and mov aas neg shl adcb push adc sub int and in add popl pop push pop test sub rclb adc sti cmp sbb add push lds pop dec pop adc (bad) (bad) add (bad) sti scas cld jae push push sub pusha push pop or call lock or arpl rcr lock mov push outsl xchg push add mov ja sbb jne mov jg fsubrs ret xchg lods or and cmpl push cwtl test neg mov add in xor call pusha push pusha call cmp dec pop loopne ss loop testb push push in nop in ret lods inc push sahf lret (bad) xor popa xor add out add mov (bad) jb (bad) fiadd or and add aam push mov pop push adc invd add sub pop jo shr inc or and lods xor stos outsb into call add sub xchg xor ds popf test enter cmpsb dec cmc add inc dec xchg pop jl xchg cld ds (bad) pop js imul in inc ss mov roll add js daa (bad) lret icebp mov bound xchg inc mov repz loope jo lds add daa enter inc (bad) mov cmp ja dec stos mov mov sbb mov add push jmp out loopne push ljmp jmp notb repz sbb ja add mov xor sub sub jge pushf es or outsb clc sbb and or andb xchg enter add or or sbb repnz hlt data16 cwtl addr16 (bad) jno ds jg xchg pusha hlt xor push cltd cmp and inc cmp add test and fs add add mov add sbbl sub xor mov mov dec and lock fldl flds dec int3 jmp pop idivb jb sub loope dec mov and (bad) incl cmp aam add fild xchg rol clc mov mov mov mov push mov push cmp add arpl push dec in aam dec (bad) std fcoms outsb rolb add (bad) imul add les aam dec jle into fidiv and jnp ret icebp ror and add imul mov in sahf repnz dec notl test add or mov std addb ret adc repz pusha pop popa adc sub add addr16 lret adc mov in inc mov sub and xor adc (bad) enter into mov and je dec test clc roll jl pop into pop mov cltd mov inc adc aaa cld js and inc inc and add (bad) pop and mov (bad) mov add adc enter cs mov sub sahf add push (bad) push pop (bad) jmp (bad) or rolb (bad) sub arpl push movsl xor mov sub adc sbb lods xor add mov js dec movsl test fnop pushf mov add gs rorb je and inc inc add cmpsl lea jo and sbb sbbl xor cmpsb dec and sub pop sbb push aas enter inc ror jns jnp pop sub nop inc pusha in popa adc jb and (bad) pop sbb sbb loopne outsb sbb imul inc mov pusha aaa mov xchg cmp add movb in in outsl push cmp cltd cmp add pop mov (bad) jmp out adc out inc mov pop adc sahf push jbe sbb jmp and adc pop xor xor ret or add pop inc mov test insl cmp shll mov add sbb or adc int3 adc adc (bad) aaa adc add std mov outsb add test pushf cmp xchg adc test stos lods mov cltd inc pop popa lock mov fs add icebp mov adc add out cli add mov pop jns xor push sbb mov loop inc pop dec (bad) xor jmp xchg enter dec push hlt add fcomi xor icebp scas xor add and adc inc arpl push test lods pop adcb sti loop out aaa ret xor add cltd mov mov or enter add lods nop xor fidivrl pop adc mov or sarb mov add push fwait aad rorb and test mov pop add lock push ror outsb pop jo add push stos and es jp or add movsl hlt push mov xor mov push or mov (bad) out (bad) cmp cld add mov mov (bad) xor inc lea xorb push test mov sbb mov int push xor sub mov dec lret and jle hlt or mov xchg mov add or sbb leave scas aaa push sub or xchg sar and mov leave rolb mov cld loop cmc adc out cmp push add nop call push movsb push lds nop sub push sbb imul xchg (bad) or pop jno add setle cmp dec push jno add or or aad add xorl mov (bad) je (bad) and or add mov push xor inc push adc and xor pop pop push mov rcrl (bad) xchg mov (bad) popa xor les fsubs sbb cmp addb lock jl inc pusha mov xchg cmp cmp mov jg movsb test fsubrp jl push rcrb leave cmp or push shr push xor jmp dec test icebp enter push arpl add mov adc les mov xchg idiv add or mov mov push in jo call clc sub movsl dec (bad) mov dec mov cmpb (bad) mov adc xor (bad) mov pushf sub push roll loope stc hlt add mov fs dec test push sbb mov movl enter push mov notb jno mov cltd lods add pushf ss lock adc adc bound pop rolb cmp insb xchg adc sbbl push xchg xchg loopne or inc ljmp and pusha push inc out jo js add test sti jl push sub fprem xorb dec loopne ja adc or pop and sub jg xor mov in das mov nop jl cmp dec add mov nop adc xor or cmp dec lock pop jno adc lahf xchg mov cmp rorb xchg and or xorl push mov xor aam and scas add mov sub cmp int3 sbbb xor arpl inc cmc add fidiv jmp add add fs inc enter loopne add push lcall int jecxz cwtl (bad) out push js je xor push add adc xor mov dec test fiadd nop or call cli test mov comiss xchg xor mov xchg mov push cwtl pusha mov aas pop cmp add in jg out push lret pop jl out cmp sbb lds (bad) jle repnz clc xchg cmp push (bad) push jno (bad) pushf sub xor push mov cmpsl sub les adc ss sbb sarb mov js fsub int add jne or enter and fmuls inc test bound (bad) dec pushf inc mov (bad) adc adcl in adc pusha popa dec aaa insb sub mov cwtl xchg out and xor add pop cmpsb std (bad) mov or js mov mov pusha repz adc mov loopne negl out push cwtl cmpsl inc pop push les xor dec inc dec add or shlb or inc jne nop sbb push jbe cmc xor xor pusha (bad) lods aam loop aam ja lcall inc or je (bad) jge push sbb jmp jns ss fxch scas push pop lahf subl mov loopne ss or sbb and enter cmpsb out or cld shll inc cwtl sbb cmpsl and inc pusha inc push jl int3 jns mov loop jge repnz pusha pop pusha clc ret adc inc in and fildl mov dec sub rcl enter xchg lret dec push sbb ret xor jnp out js push test pusha aas jb add sub std (bad) inc cld std iret cmpsl mov adc cmp mov fs sub push xchg mov dec (bad) in mov das lret les add loop inc add movsl cmp push xchg cwtl iret sti jae mov sbb xor das pusha es mov jle sbb fist inc mov cmpl subb decl push cld inc sbb (bad) xchg cmp roll clc in xor or dec add fs mov or inc sub xchg cli sub pop (bad) push aam cwtl adc dec out lods leave int cmp mov add in mov (bad) (bad) fcomps ljmp fs punpcklbw push mov mov movsl data16 add or add ret and lcallw sbb add outsl imul jae loop mov fiadd xchg and add push inc jb pop jp out xchg and sub and push mov mov jo repz xorl (bad) xor xor mov scas mov int3 mov aaa cmp stc mov and and jno xor adcl leave sub pop push ret inc and mov stos je js dec inc add enter (bad) adc push mov rol pusha add setg popf add hlt leave dec jb push or mov (bad) or add mov orb xchg outsl mov dec and fiaddl lds push add mov cmp lods or xchg mov movsl pop stos les mov lock add adc pop adc fmull adc mov pushf and cmp dec packssdw mov push mov cltd fcomps add mov mov bound cmp nop xchg pop push mov fsubl cmpsl loop adc pop add pop pop inc enter or add mov stos xchg push push dec sarb movsl add pop xor cmp bound jb iret enter lock push andb push push nop add inc mov pop cmpsb push jl sbb (bad) leave inc xchg repz mov dec jle popa push cmp aam mov adc push or xchg inc dec mov mov push in pop in sub or idivl mov mov xor push add mov int fucomip add xor sub icebp add movsl mov int3 idivb mov (bad) lret cltd test movsl sbb cmp sbb or sbb dec fs and pop inc js adc cmp cmp xor cwtl (bad) fiadd push test pusha ja push mov lea jmp in in pop or sbb ds mov or and sub (bad) jo mul xor cmpsl psrlw (bad) pop or push adc add mov sub push sbb cld mov bound adc pop gs mov dec repz fisttpll cmp rcr mov dec push je pop cwtl test orb cmp pusha fnstsw roll mov or and xor and test repnz or sub sub cmova xor push incb add and nop mov sub cwtl pop lods in outsb call iret adc jns aam stos cmp pop pop jmp fdivrs pop sbb mov adc mov outsl cmpsl test leave pop sub fimul in xchg adcb add push mov push aas (bad) lods daa sbb mov push std lock pop or pop pop fwait sbb ja cmpsl (bad) cmp repz pop jg dec movsl loop clc push inc sbb sub fadd or sahf js mov add dec in jns test jae mov pop dec lds pop or in adc push and sub or mov loopne jne jl cmpsl jmp rcrb add dec inc jne adc fiaddl mov in add push movsl negl fs (bad) xor cmc mov psraw xchg das enter pop clc js call pop xchg es add leave insl sub shlb mov or or adc lea sub addb and jo dec cmp add xchg test fcoms adc adc xor inc mov push dec in rorl xor clc cmp out insb (bad) jne repnz jo or or movb movsl js enter roll xchg (bad) daa addr16 lcall cmp sub hlt in xchg sbb incl in pop push mov push shrl add ds add cs int pop and dec sbb ljmp and mov inc rorb and addr16 mov jmp pop cs add adc jo mov fbld lock add xor test hlt mov leave lods and adc addb sbb mov ljmp mov jo xchg and (bad) repnz outsb xchg ret popl iret dec bound ficom lock sbb add and adc add pop leave push mov xor into dec fprem dec or mov or xor (bad) cmp mov push xchg outsl fsubp xchg adc cmp std lret int3 adc sbb popf int3 leave out outsb mov add xor sub xor mov in cwtl (bad) dec mov loopne lock mov lock xchg or pusha rolb add add insb push rolb fildl or dec mov (bad) mulb enter xor aad add sub push adc and sbb pop add cld adc ret or addl (bad) cmc mov ljmp adc shld call mov loope add mov add xor clc fwait push fstps shll icebp dec sbbb popf jne enter add mov inc test mov dec sarb pop add dec pop and mov lods jmp sbb aad sub nop mov es mull test jnp incb xor dec jle cwtl and adc pusha data16 imul cmp xchg out dec push ror xchg fsubs or pop sbb stos jbe mov add sub xchg xor or add mov push enter xchg sti sbb sub adc fstp inc sub sub ljmp mov xor clc dec adc dec cmpsb and add (bad) adc fstp add aas push xor mov mov ror dec xorb and bound imul lods roll push insb mov dec pop popa add stos jnp test lods lods lock nop or out inc add out lods adc rolb sahf pop mov mov or stc xor fs xor das mov or pushf add push movsl loop das push adc cli enter pop adc ds pop mov pop (bad) scas pop push aas sub out mov dec fidivl cwtl xchg cmpsl mov fdivs dec out mov shll or pusha int3 stos push sahf js ds test popa sbb push jle cmpl xchg xchg xchg push mov mov js (bad) ds add mov adc or dec xor pop sbb mov pop lahf sbb loopne jge fwait dec or mov cmp inc add (bad) pusha cmpsl cmp xchg repnz cmpsb js add das add pop shrl xchg aad aas mov and mov in sub and ss (bad) hlt xor fild xchg sbb adc divb mov movsb xchg xchg lea pushf pushw mov push cmpsl inc adc mov fs jo aaa pop movsl faddp inc and in and js pop mov mov arpl cmp jo or mov shl sbb lods bound testb ljmp inc fadds rolb add ljmp enter lock test add add sbb push xor clc xchg lea adc aaa pop outsl fcoms data16 sbb lcall cmp int loopne adc test dec in dec fdivrs js loopne mov loope pop mov add (bad) jmp fmul test xchg jbe xor xchg jns (bad) or or add enter std or adc ja pop mov lahf and out bound pop cmp repz in mov adc and sbb and das inc pusha mov sub sbb and mov jle dec cmp jl or or adc shrb (bad) rolb jmp and or shl xor lock xor mov sarl rorb test addr16 mov bound xchg test lock aad pop and (bad) imul add rcll ror les data16 or imul add nop (bad) mov dec sub lea sahf nop add loope add sti mov rcrb rol mov cmp sbb hlt lock dec push enter pop mov pandn orl xorb adcb fistl push push pop fst insl pushf cmp inc or pop pusha xor adc and pop jnp mov inc xchg (bad) sub sub inc xor adc repnz push xor or addr16 cmp mov movsl or mov fisub push dec pop or push fidivl and xchg pushf add sub testl mov rcr and cltd and aas or add mov aaa pop or fs mov inc mov mov arpl sbb pushf lods cwtl js scas inc lahf adc add jo lea add jb aam ljmp sbb jo movsb sub dec rorb shrb stc jo cmc add aad add xor sarb (bad) mov into sbb add call mov in enter iret or jmp sbb xor mov fs lods or dec pop cmpsl nop pusha inc pop xchg mov js movsl fildl test lock (bad) jl adc jl cmp rorb xchg jbe and inc je cmp xchg inc ret dec fs or (bad) leave sbb add test mov push push popa sub push test call and xor cmp add push mov sar and mov icebp dec fnstsw pop add xchg adcl mov xchg jl inc pusha push cmpsb fidivr mov fs mov mov pop pop and jnp add scas pop push push mov int3 sbb dec test in fildl scas fsubl push xchg out or xor push or sub dec adc les mov movsl sub sbb test push dec push mov pushf enter out movsl mov fidivl add jae or dec aam lret cmpsl test adc mov orb hlt mov aad mov or ror pop daa cwtl push mov add cvtps2pd xorb lcall xor add jb cld pop mov pusha sbb or and test lods add sbb lds js pop je rcll clc mov and pushf cltd frstor std pusha push cmp mov fwait test psrlw inc cwtl int das push fisubr pop in or jnp dec jge es add add sti pop xor gs add inc addl fadd dec in dec xchg adc jo push pushf (bad) push inc leave test and sub (bad) loope and dec pop dec fcompl push sub sbb sub int3 dec and lahf add dec xchg push sub mov stos adcl outsl loopne add xor xchg sub xchg mov mov enter mov adc in das and sbb xor and adc xchg addb mov add rcll dec or nop push xor pop dec adc xchg pop nop dec call sti mov enter and jl mov test call nop in or je dec add bound je dec rclb out xchg xchg addr16 es test mov push (bad) pop shlb jo enter (bad) aam add in bound sub nop loopne enter loopne addr16 xchg mov (bad) loopne test inc movsb jle das out hlt adc xor pop fsubrs orb mov imulb adc sbb ficomp rcll xchg (bad) insb mov test out or popf sub rcrb jmp xchg cmp xchg in jle xor daa sbb mov pop inc movsb sarl insl sbb into cmpb jecxz push scas pminsw sbb add or outsl and mov mov add pushf pusha xorb hlt jl dec xor sbb in sbbb and cmp or fs xchg add test jo adc add mov dec test add mov (bad) add or dec pop clc (bad) out xor out jecxz gs bound movsl rorl push jmp jge sbb lods add pop sbb add add mov popf insb mov and mov rolb and cmp inc sbb push sub sbb mov cmpsb out cmp fcoms inc sbb fidiv cmpsl repz and sub cmpb lahf xor mov nop icebp adc gs pop (bad) and dec pop cmc cld inc and (bad) sbb repz scas andl aam mov sbb push push lea xor add popf add inc aam mov add pusha dec mov xor nop mov jmp push aam inc enter lahf and or lock add sbb add inc aam stos flds ret pop xor sbb and xchg mov and test jnp add nop ret add fsubrl xchg sbb mov add fldenv add sbb xchg mov mov inc icebp xchg popf scas ds (bad) cwtl push jl sbb or add or lods lea int dec sbb icebp inc js mov adc add scas adc adc js pop in push aam cld enter into sbb mov xchg roll xorl sahf ret mov mov mov nop add mov inc adc xchg mov or sub inc inc pop jbe add push movsl jmp jg add add fildl cmp or jl stos push sub xchg nop push lret and inc in arpl xchg daa sbb js and jno sub add push repnz add or insb xchg jns cld sub pop sub xchg adc aam hlt lcall or bound xor pop push test in loopne jp add arpl hlt and lahf push jns inc add aaa sbb push push push ds cmc xchg (bad) fcomp add ds cmpsb adc jno pusha popf dec (bad) xor data16 imul pop mov pushl mov outsl xor mov ret pop or push pushf add dec mov mov cmc pusha inc aaa add inc stos push jb add imul push les fbld push add (bad) push mov cmp ja jbe xor addr16 xchg push sbb mov ja xor das pop xchg mov add icebp aaa addr16 jbe jo mov jo mov int3 les addr16 jno adc pop daa call lea ljmp mov fimull and and lea push xchg add cmpsl pop loope sbb push mov sub jl (bad) cli or push mov add jl popa in xlat outsb loop sarb decl xor fbld aad push rolb cmpsl addb mov jbe jg sbb pop sbb mov cltd dec pop insl mov push push in dec mov int3 idivl pop sub sbb out jmp test cmp mov (bad) mov and cmpsl adc mov sarb scas inc popf pop dec nop and mov sbbb std psrad shr push pop pop add (bad) mov xchg push shll pop jne mov mov or xor icebp lock repnz jbe or cmp sarl xchg pop sub add xor adc mov push and ficompl cmp mov inc push pop mov cwtl add add test dec adc test xchg adc add mov test cmpsl add lea and scas stos test add movsl les adc mov adc mov into sub push lods pop fdiv xorl loopne push (bad) mov xchg add (bad) sbb ret cmc pop mov push dec mov mov fldl fdivs or orl hlt sub shrb push test sbb add ret or pusha fsubrs jae lock cmpsb pop js mov xchg leave xor loop rcr cmp cmp shrl cmpsb lds fild rcl subl pop paddw fsubl bound cmc mov add add sarb inc test or aam jo push and or movsl xlat jns mov adc nop cld out add out addr16 and jo js pop movsl movsb int3 lds (bad) cmp shrl call fsub jl pop xchg (bad) mov push sbb sbb cmc or xor int3 inc test add (bad) loopne adc sub es xchg adc adc mov repz and dec xchg insb or xor nop je scas inc and and jp lahf add cmpsl or sub int3 addb (bad) jmp and call imul add into fstp push push mov cld icebp addb (bad) push add jle lods shll pusha add lods js outsb mov pop add fimul (bad) hlt xchg loopne cmp enter mov sbb mov add cwtl push inc iret jns lods clc sub cmp adc push add data16 js jo dec ret pop pop inc inc and int jl mov jne movsl push fcmovnbe adc mov add fisubrl addr16 xor push adc sub mov xchg fsubs push sub repnz lock loopne in decl xchg xchg rorb add and jg lock fbstp in fs sub enter inc or xchg (bad) je dec and mov xchg xor jo sbbb js dec xchg int and rcl clc aad adc xchg inc and fucom movsb cmp push popa mov mov pusha clc push push pop pop test repnz andl adc popa icebp call dec cld sub mov dec add cli adc addr16 push inc les shll pop pop pusha add daa mov pushf movsb and push mov inc jno push ja sarb xchg add push (bad) aam xchg jmp lret in adc pop inc cwtl testb shrl adc pop inc mov push or nop mov enter mov sbbb cli fild mov sub pop cmc test cmp in fildl or and jb dec aad mov mov mov xchg int3 ljmp fild (bad) gs sub and and xchg jl cwtl aam dec pusha pop sbb gs xor dec in jmp test movsb iret push (bad) jo or call jb push and nop mov test and pop ds notl lock add std stos add mov sub adc sahf push sarb pushf pop movsl add loopne sbb fnop push pusha mov clc movsl mov rorb xchg mul cmc insb jle jle repz pusha xor cs loopne mov cmpsb call inc adc pop jmp je add es jne aaa mull loope loopne lret cmp add sar loopne fsubs xor and fistpll sbb pop cmp aam lods sbb cmc movsb sbb mov xchg out pop inc push repnz push cmp sahf mov add popl mov das in mov syscall jmp adc mov (bad) push cmp movsl add gs and sahf mov test imul or in stos and sub sub mov lods in or popl fisub je out pop add fwait pop fist ljmp rcr cmpsl insb (bad) (bad) jno inc dec or add ficomp push lcall lcall jmp add fisttpll dec ret fsubs mov and dec std sub lods pop inc pop add dec jbe adc push sbb testl sahf les lock and cmpsb repnz bound push add jbe hlt add mov xor dec leave movsl sub pop dec mov in inc mov js inc sub cmp pop inc rcrl test fwait xor iret sub adc jp pushf or push mov add sbb cmp push sub sbb inc and pop sub aam and scas cld mov test dec push jae addr16 orb mov or mov test add mov ljmp and dec rolb je sbb adc and ja cs fldl pop mov mov cmp leave cld pop mov add imul pop (bad) jno pop ret js repz stc or dec subb es xor popa out inc daa inc xchg push sub adcb jo lea js int push cmp pop cmp call (bad) out ret scas (bad) mov pop xchg add mov adc jmp add fwait addr16 pop dec insl add fidivrl fistpll push sub pop lods pop xor lock leave push pusha push add fist fsubl pop jge int3 xlat imul fiadd insb fcoms adc fs add mov mov dec out add lea pop push fmuls add cwtl and dec add sbb xor cmp or pop aad into int3 pop sub lea pushf andb mov and fidivl pusha adc inc pop jo notl cmpsl loop add push pop mov jbe lea mov mov cld push (bad) lock aas add sub hlt (bad) xlat add inc xchg pop sub movsb push fcomp adc imulb and repnz out (bad) in daa pop mov stc dec add pushf add xor dec (bad) sbb add aam fimul or sub cld inc hlt roll lods jae adc ret mov mov dec mov and sbb inc and jb rcll xlat pop (bad) mov jecxz dec pop xchg mov and nop push dec and or or out in add jl fcom cld aam and add popa sub push and jecxz sbb shl lock add push hlt leave aam ficom outsb nop cmpsb gs mov and xorl sbb adc sbb enter add loopne bound sti add or popf sub pop sub add push ss fist jle sbb and decl je sar jbe andl sahf add fisubrl inc std ret test jo pop add leave mov inc adc es mov gs cmpl int3 sbb roll xor dec leave or add fnop popa mov lea xchg mov fistl jp pop mov cmpsb sbb rolb int push or inc addr16 loopne (bad) aaa push movsb test cmc loop dec mov scas dec int3 lret mov in and inc add add sbb fs dec or cmpsb arpl sbb sub add fisubrl or sbb int push inc icebp nop fcom jns and cld jae adc (bad) daa mov pop cmc faddl inc cmpsl fistpll loop in mov int (bad) clc or mov xchg cmp or cmp adcb (bad) call jno imul nop xchg add cmpsl int or add jle repz mov sub (bad) lock pushf inc dec pop add push bswap lahf and rorl das (bad) mov sub gs movsl inc sub hlt enter adc popa imul dec mov movsl sahf or pop jmp xchg sub lods cmp inc xor fs or in jl insl sub pop (bad) or js xchg add fild enter jg and scas insb mov xor xchg pop dec stos test mov inc dec add test push mov mov inc and mov sbb mov lock add cmp rorb fnop pusha fildll dec add push test scas or dec sub and add dec outsb dec loope lods hlt test add push enter loopne popl (bad) xor clc movsl rorb les stc or lods ret dec test adc movsl xabort addl push jnp (bad) push cmp enter pusha mov aam fs lock mov mov stc adc lock adc ja movsb adc sarb out pop andb pushf movsl pop or or and jns sbb or cwtl repz cmp cwtl loopne lcall repz test ds mov jg imul pop pop icebp je call ljmp out adc and add (bad) xor sub dec xor addr16 andb inc lahf lcall aam add xchg add (bad) ret (bad) data16 push sarb cmp or hlt les and xor ror repnz sbb sbb notl xor nop fsubrs cmc inc lea je imul test les pop add (bad) ja scas leave lds sbb lods or mov ret les (bad) xor outsb mov inc or gs out pop or int3 sbbl and pop mov xchg sbb addl xchg adc mov add jno sub pusha inc mov pop sub mov push scas push jo pop (bad) hlt imul pop aam ja dec sbb dec pop pop or movsl inc sub adc xchg xor (bad) cld call xor lea in je adc add movsb add xor gs sti and (bad) mov sbb neg outsl xchg in mov inc pop not js sub add mov xorl pop xor incb dec aas add fwait outsb inc pop push push inc add xor pop enter push pop pusha jmp pusha loope test cmp xchg jne decb fistp add jl xor add pop add fadds inc mov xorl inc subb xor lret and and cmp sub in ja rclb mov xchg xor push andb (bad) icebp and add dec in fidivrl mov sbb adc add movsl dec mov insb ror sub test imul cli jp jl and cmc and mov and jae clc add add add lods bound je mov arpl fsubr mov lods mov rclb pop sahf addb and in rcr rcrb pop jecxz,pt popl shrb or xorb fmuls pop mov pop scas push add pop mov hlt sbb out mov push in xor push sub push cmpsl int3 (bad) and xchg arpl std dec xor cld add pop mov inc mov test adc js adc inc or pusha test cmp jb sub mov cmp add push push inc fs (bad) out js pusha cltd and aad sahf add into or in lcall mov cmp add fxtract (bad) xor int3 jo pusha punpcklbw mov bswap push jnp sarb inc push mov jle fwait sub sub pop or jo stos cwtl xor ret aam andl insb sbbb xchg sub pop stc (bad) sbb nop sbb pop fsts js pop add xchg adc repz nop sbb mov or sub adc testl test out xor sub dec mov fwait outsl xchg pop xchg push cmp movsl (bad) sbb popa cli dec stc ret (bad) les clc fldl xchg xor gs cwtl pop or mov rcl out add sbb sbb jo jl lods sti cmp add sbb add scas push mov add (bad) stc xor nop mov add cld push je mov add fcomps dec mov in add mov mov loop ss popa fidivl sub jmp jmp mov call loopne in inc (bad) test add fld nop cmpsl leave inc mov push mov fldt pop pop aam add rolb lds jp or xor std dec sbb mov inc ja (bad) or mov inc xchg xchg in add mov cmp sbb fadds sbb inc enter cltd sbb fnstsw mov mov push pop jne add cmp cwtl mov mov and mov pop mov xchg bound add xchg outsb add out mov in xchg mov inc rorl scas push dec pop pusha and pop sbb add sarl bound pop lock add xchg adc or push push cwtl test add icebp sub cmp or gs dec mov add push rcrb mov js cmp add xor pop push and mov popa add lock sub repnz dec push sbb mov stos fwait and mov push cmp mov orb pop test or dec inc adc jmp rcll jne mov fs push push jecxz mov (bad) imul mov popl out pusha cmp pop mov stc xorb cmp dec shlb jge mov pop mov push cmpb dec repz pushf or mov xor movl xor or dec jbe dec jg mov push xchg and and push roll shll in xor mov add (bad) iret rcr and add (bad) out sbb xor sub pop inc mov mov outsl sub mov and push data16 sub xchg (bad) xor push cmp lret add sahf int3 jae insb jecxz jns data16 inc and enter andl or outsb dec xchg sub xchg ss jmp test fisttpl pusha inc (bad) pop or or test outsl ds dec or test lods ds cmp mov mov add inc dec bound adc jecxz xchg add adc xor insb sbb dec ret add lret adc fsubr push xor idivb pop (bad) xorl loopne sub add mov std xchg mov sub stos and std out xlat addb cmp xchg in cs or insb add mov xor mov mov ret dec pop add sbb (bad) loop fwait test cmp fisttpll les cmp icebp jmp add leave andb jne add and cmp cli pop jp daa daa mov pop mulps int3 (bad) repz xor jle jl cmp adc mull fcoms lahf add add xlat aas mov repnz sti and pop xchg enter add mov sbbb pop mov popf daa pop add jbe test adc jnp movsb add (bad) je repnz test push and add pop push or and jmp outsb insb jo js arpl int3 jno into outsl test sub add nop nop pop sahf rcrb cmc ja mov scas sub loopne push decl add inc ds je popf into mov add and rdtsc xchg mov and pop mov dec out mov mov sub mov stos pop cltd add (bad) jo incb shr add movsb mull das orb out mov dec in and movsb mov add lods adc fadds adc push add out pusha inc mov xor sbb jp add (bad) lahf into ss test cli xchg push or mov repz xchg mov adc add test pop pop aaa and sarb and bound inc mov sub push mov data16 roll bound pop pusha or ret add push add push aad in mov inc rorb adc xor clc xor mov aas mov sub mov cmp push pop iret cli cmp cmp int3 or pop push add cmp mov sub dec jo add jno sub addb lret jl arpl pop adc (bad) repnz cmp aad push pusha cmp imul jno into cmc and repz adc shrb fdivrs mov cmpsl (bad) in add jl mov mov out ret pusha mov xor add (bad) out sbb ret test dec mov jle,pt inc out jnp inc (bad) nop add loop mov sbb les test dec or cld or punpckldq scas push jg (bad) mulb xor pusha xor lcall sub ljmp mov adc lock jecxz daa sub and (bad) fnsave clc scas pushf das repnz mov mov dec or lock xor dec shll pushf pop (bad) or repz ret xor add (bad) ror cmp push adc lcall sub jne,pn lods push and addb lock pusha fbstp add and xchg in and inc mov fstpl mov mov and ret lea mov movnti cld pop add mov mov fnstenv pushf (bad) sub or jb xor popa stos xor inc add fildll add sub pop outsb fdivr sub in push imul nop adc inc jb jns jo fdivrp inc xchg enter bound loop loopne xlat sbb ja xor mov inc dec jecxz push adc out lock test scas std mov fidivr es sub fnstcw cmp rclb stc and cltd xchg adc ja bound (bad) sub pop jp mov sbb subb syscall or lahf cwtl cmpl push fs paddd sbb push arpl mov and dec sub pop dec addr16 fadds and daa in aas sbb lcall push fild and jg loope xchg push jmp ds insb sbb enter arpl pop push cmpb iret xor pop add inc icebp add cmp inc mov push mov cmp lahf and int inc mov xchg sub inc mov inc subb push xor mov test xor or jnp and int3 cmp xor ret lock sbb xchg cmpsl call loopne loopne ret add xchg and stos pop pop data16 ds mov cli ss insb jle mov (bad) xor into and xor repnz cmp cmp into addr16 enter (bad) icebp imul pop icebp add pop push das clc adc stos push or push jl mov cmpsb or pop in jb lds mov pop insl add and mov jbe cmp dec repz and jp dec lea sub or cld nop add mov test test mov popa iret cmpsb xchg xlat add cltd inc and pop lock dec test addl call jmp sub inc xchg or push gs popa sbb xchg mov inc and dec rolb neg or (bad) repz (bad) pusha inc test jp pop insb int orl hlt fwait jmp int3 dec push inc imul inc push pop fisttp (bad) je add sti repz test fadd pop repnz mov mov xor mov or sbb adcb cmova nop addb or adc adc sbb dec sub push inc imul in sbb mov mov cwtl cmp ror sbb es inc dec xchg pop inc cmp add (bad) rcll jns and subl mov mov push dec ss mov inc lods mov push (bad) or pop pop add push divb repnz jp add imul rcll xchg mov pop fs pop adc push mov fwait jnp sbbb out push mov pusha pop adc lea xchg inc jae mov mov dec pop add lock (bad) ja pop inc lds cmp jecxz xor aam pop dec mov inc or pushf jo (bad) push fs hlt mov xor (bad) xchg pusha pop lods test lods xchg mov dec add and data16 mov mov out lea fdivs mov pop iret aad ret lea movntq out std jg in test stos add inc xor or cmp arpl enter or mov inc add (bad) cmp and orb lods push add jne pop jecxz mov inc sti jb cmp dec cs push icebp mov add xchg data16 dec sarb mov js dec les test push mov fs nop std cmp movsl sbb lods pop add iret out sti bound mov cmp dec jle sarb daa insl dec xchg mov add call push adcl and or and xchg test inc movsl push jge andl leave and ja and mov (bad) pop push ffreep inc insb adc and test das push je xchg or enter (bad) mov add sub and adc (bad) mov add jg pop fs and sbb push mov (bad) daa pusha mov pop ret mov pop mov stos (bad) aas scas pop add jno or add or (bad) fst sub or dec loop mov call mov lods pop pop sarb mov repnz add cmc aaa cwtl movsl inc subb mov dec push fnsave add add add pushl adc leave stos sti push add sarb cltd fidivl add add addr16 adc dec (bad) inc mov adc call xchg mov pusha adc cmp loope adc cmp pop test inc xchg sar pop hlt cltd faddl jle aaa nop cmp lods test shlb cmp pop add pop sbb adc push ss clc push sub jmp sub nop mov adc pop inc imul mov fdivl sarb leave fldcw fnop jmp xchg int3 rorb dec in jo out sub add rorb jmp imul loopne (bad) mov movsl inc iret push dec mov test dec xchg sub mov sbb add (bad) std push or pop sbbl cmp mov rol fiadd ret inc and push mov xchg mov or call shll and sub iret mul lahf mov add movsb imul andb jne push or mov (bad) dec xor aad push add sbb pop mov add scas add mov imul mov hlt test or call cmpsl dec mov cmp push stc sbb sbb shrl (bad) mov orb sub mov gs mov aam or or xchg stc push data16 es imul inc add jmp mov mov js sub jno aas movsl nop or into cmp lea das push roll sbb repz xor loope jmp popa add and jbe mov cmp adc and clc or das mov adc negb xor mov xor repnz add cmc pop sarb adc aaa pop loopne xchg (bad) xor lcall les orl pop (bad) sub hlt es out and dec lcall xor je enter shrl aaa imul ret xchg ret mov enter push pop ss lahf sar xor adc mov std dec mov nop ljmp or (bad) jo jg jecxz repnz sub dec cli add mov jbe mov (bad) icebp push adc pop sbb (bad) cmp pusha jb mov (bad) mov and es in mov dec cmpsb cwtl sub faddp sbb aaa bound xchg xor push dec cwtl int3 popf dec les push and int or pusha pop dec ficom xor jne add fcomip xchg fcomi sub xchg and pusha pop insl sti (bad) (bad) mov ficompl mov pop xchg rorb xor fwait test pusha and rolb pop test pop xchg insb sub loop xor cmpsb adc call in mov dec add es add scas out hlt and sub clc rorl cwtl mov daa insb mov aam mov sbb lds sub or push and cmp fsts pop xchg xchg push clc adc dec movsb push lock movsb mov fstpl mov dec sub repnz (bad) shlb dec clc mov mov sbb fdivs add popf lret sahf xor pop icebp rorb lock stos sub lret movsb add in (bad) test into sbb fnstsw and and pop dec insl nop inc notl daa or push mov enter cs std pushf bound xchg ret add dec pop cmpsb jo (bad) or push es adc movsb lds repnz adc mov enter push mov cmp mov dec mov xor mov movsb inc in cwtl jle hlt ljmp xlat cli clc xor les push mov xchg mov jo enter jae mov inc adc div or add fstpl das mulb adc leave xor mov (bad) roll mov dec pop mov das sub daa pop nop push lea mov mov pop xchg movsl mov test mov adcl call sub and test les shrb leave push push lods ss add mov or je cmp add mov (bad) shr add adc nop dec xchg dec (bad) js loopne fiadd enter jge pushf fsubrl dec xor sbb dec xchg loope test adc pop or add pop mov push aas pop mov cmp pusha sbb pusha loop mov jbe cmp or gs repnz int xor add fnstcw pop fs (bad) dec popa jl or inc pop xor movsl test mov cmp dec nop mov mov dec mov inc ja inc in mov add sub sbb sbb ljmp adc adc movsb test sbb aad in pop mov sbb or sub adc in rolb xchg (bad) mov xchg push call sub or lcall in in popa jo adc push leave shll xchg aam fistp xchg test fadd stc into pushf mov and (bad) insb inc pop pop add fwait rol cmp call lea dec cmp pop (bad) dec lahf inc fdiv adc shrl or cmp in inc sub dec rorb sub movsl das shll pusha fisubrl cld cmpsl add adc or xchg sti or pusha push push lret adc int3 sbb inc js cmc mov jmp inc jo inc pop cmp pop enter or addr16 cltd push and xor js out cld add rcr rorb icebp jmp sarb and es lds dec pop sbb fcoms rcl mov outsl mov loop xchg mov sarb daa clc add inc fist push push mov mov mov enter aam inc test adc fmuls loope int3 xchg sbb xor loope test mov pop (bad) lock sti call loop mov dec test (bad) es inc jp popf mov daa cli or shlb push nop lea adc mov test xor stos xchg aam sub mov add mov mov (bad) js push in push xchg jno add push nop int3 add fbld arpl daa jbe mov inc and xor push xlat rolb xor mov in jbe mov xchg and xchg and cmp sbb jle lods repnz out adc ljmp pop push rol pop mov fdivl add int3 and pop pop lret xchg mov repnz jge (bad) les sbb xchg inc inc clc inc sbb cli add xorl (bad) call int3 add je sub pop cli ror cmc stos xlat sbb sahf sti test stos push jo sbb fdivp mov adc sbb int lock and mov push adc pop loopne (bad) lock add fdivrl pop loope and jp outsb inc mov xchg nop cmpl push call add add adc cmp movsb cmp add push mov xor pop ljmp pop sahf and push or mov cld push dec sub pop xchg loopne (bad) ds and or movb mov lods (bad) popa push sub push sub cmp lock pop addb dec adc jl pushf je add ret scas adc dec xchg add js das mov les mov mov aam out sbb mov xor test xchg movsb or jae sbb das fcomi ret add mov imul pop int3 pushf xchg cmp sti jmp push addr16 inc sbb pop insl sbb clc les mov sub xchg pop outsb or pop int jg pop sub jmp in fwait lret add popa add cmp add ficom fcompl inc inc (bad) adcl mov fwait lods add add out pop int movsl or bound jbe sbbb push jne sub xchg movsl add mov (bad) mov sbb fs xlat add add push ret lock and and aam rcrl add inc (bad) or ficomp inc add mov punpckhbw adc xchg sub jno js pop adc adc (bad) mov add enter shlb pop xor mov das jne data16 les cmp mov add dec pop sbb dec add leave cld jmp inc lock add mov mov aaa mov add mov dec stc aas fmuls add xchg dec rolb subb outsb add and add pusha ss mov mov xchg add add sti mov jl fwait xor loopne iret mov add adc jl idiv add cmp mov outsb sub xor dec jp fstpt add add xchg sbb mov test adc jmp sbb adc push push arpl js mov loopne outsl test iret and jno xor fist xlat jnp insb jmp mov add into cmc mov add (bad) adc cwtl sbb nop sbb in mov adc pop sub clc xor bnd cmp sub inc or push mov adc push fadds fs mov pop push cmp mov out or and pop (bad) popf scas rol xchg ss dec cmp push stos mov sub fildll or or push (bad) je sub sarl fdivs dec pop xor pushf dec jp add stos outsl inc sahf gs mov sbb cmpsb mov xchg mov pop iret cmp and and dec or push iret mov mov cli data16 cld divb dec add add jge sub (bad) scas jb adc mov (bad) mov les xchg pop (bad) pop outsw fs or (bad) js dec arpl insb scas popf mov push cmp imul fldl pop (bad) loopne fldt (bad) jbe cs push js arpl orb mov ret scas add mov popf mov jns add push fbstp pushf and mov andb jae pop (bad) in arpl xchg and mov inc and add or std mov sub pop stc xor add shr (bad) test dec lock popl aam push jns cmp and lds and icebp adc sbb mov jno hlt gs fiaddl hlt in loopne and (bad) call sub fisubl sub xchg sub iret or shrl push jno out (bad) int3 lret popa mov mov addb enter lds mov sub jne inc pop add jl add push sti out cs jle sbb test repnz cwtl push add dec mov adc jnp les nop call cmc mov mov and adc std sbb in mov add mov sub xchg scas jb mov subb lahf fadd inc inc dec icebp mulb arpl pusha cmp cmp add and scas pop adcb xor jne dec insb push fcoms gs icebp loope into add inc fcomps imul jge pop (bad) pushf sub enter sub jl es sbb add sub inc lea mov fmull sub (bad) cmp pop lds cld pop adcb xchg cs mov jo lea mov push clc std add rcrb mov mov enter ss add outsb insl sbb add nop mov cmp rolb mov pop or cmpb fwait inc push xor adc pop mov cld outsl gs mov loope cwtl or dec push inc mov addr16 add ds cmp xor mov jp es cmpsl cmpsb inc imul fsub lods iret mov jge sahf stos nop cwtl popa cmp imul sbb mov nop cmp add xchg xor xor js fcom rorb clc loopne pop adc push test fst flds xchg xor inc pop xor add andps pushf test arpl data16 sahf ret mov fdivrs mov cmp fist cmpl mov (bad) iret xor mov adc cmp nop mov sub add inc xor xor aaa mov add mov add fisttpll (bad) sti mov nop jmp push mov sbb push test sub pop addb cmpb mov add enter and pop cmp xor sub dec pushf dec jns pop cwtl add xchg mov stc and add popf test dec mov adc enter int3 add jb add sbb fcompl xor mov je cmpsl mov rolb dec loopne xor xorl mov pop insb sub fadds adc add jb pop pusha pop out cld pop in loopne pop into or aam mov sbb nop scas sbb add call jo ret sbb push inc and or push push xor scas das pop xor stos or mov stc mov je ljmp push lret sub js adc cmp push or nop add cmpsb xor xor test pushf and call adc scas jge push cs dec cmp mov sub ds adc out (bad) incb out repz lea jne fstpt lds sbb roll or loope and jo dec mov inc adc add push outsl adc jbe mov add mov or sub mov xor add jns pop in and add (bad) sti mov push rcrb adcl inc sub mov addr16 adc pop mov popf or and add adc cmp inc adc mov xor mov xor sub aaa and add shlb or or and or shr push rcll sbb add ds pop mov and icebp jae shrb pusha mov ljmp sarb push cmp inc adc sarb (bad) sub xor adc aad pushf (bad) xor jne bound and add pop sub (bad) push ja call mov jo addb mov cld shll pop add stos xor cmp inc ret jp sbb sahf call lea xor cmp shrb stos add add mov jo sbb xchg or test xchg inc insb pop call aam jl jbe mov pushf dec lret jb dec loopne cld roll push mov cmpsl pop pop mov pop sub jbe inc repnz adc movsb setnp push and xor jae ss adc daa push jno pop das subb mov add imulb cmp push or inc push cmp ds ja into punpckhdq hlt mov and inc sub dec push inc mov stos int3 pop sbb cmp andl xor scas and aas xor add inc inc decl cmp mov (bad) xchg cwtl xchg fwait xchg or sbb add adc inc add out cmp mov push inc add sub inc lcall cmp shrl inc add pusha and push js scas mov jl mov sub cltd cli pusha xor insb push (bad) xor adcl inc fs pop loope fiaddl push adc mov cmp jl adc sub nop test push inc (bad) dec lcall jns adc xor rorb dec or mov sahf mov add mov sbb les sbb int3 push in in xor test mulb movsl cmp or mov sbb adc mov adc adc sbb (bad) add (bad) ljmp (bad) xchg and cmpsb int3 cld jae dec mov pusha push sub mov div orb rcrl nop lret push xor inc cmc add shll arpl out out cltd add jg in add mov scas sbb cwtl dec or inc push and ror bound pop adc aam push add and shll push inc mov sub push ret pop orb sbb push xor mov push daa inc sbb (bad) pop scas sbb inc lcall shlb push or iret insl sbb jmp add jnp call or sbb sub dec hlt xchg inc dec mov data16 mov inc ja add stos dec dec out mov and cmc mov popf fcoms mov dec and sbb push push add pop add rdtsc push pop pop pop fisttp push or adc pop lahf or ljmp call xchg cwtl pop fdecstp daa jne pop xchg xlat pop push mov push mov dec popf aam pusha push pusha out imul or pop aad out pop pop add sub or sub cmc mov incl mov push andb jg push mov call inc dec sub outsl fild ja dec add sbb repnz or jae jg jle mov cmpsl dec xorb std pop push mov inc negl push sub jmp mov pop ficoml fisttp inc or mov jle mov hlt aam decb pop sub mov insl popf jl jb repz jmp and movzwl and mov adc pusha shl shrb or add loope cmp inc xchg mov mov pushf push ficom push fistpll xchg aas negl test xor push pop (bad) sbb (bad) mov pop ret ficomp dec cli es aas pusha (bad) xor xor mov ljmp sbb les add pop push mov inc or movl jp and push daa push inc icebp cs push dec stos mov mov imul push pop divb pop lods cmp flds (bad) or enter pop dec pop jmp inc pusha js mov mov sub test push and adc mov pop mov fiadd fstpl mov mov lret mov and cmp mov push mov mov sub or dec mov sub test arpl cmp ret jbe punpckldq or push push pop xchg fistpll out adc push mov frstor push int push inc pushf mov jg pusha (bad) in mulb cmp jne cs repnz cltd mov pop pop fwait xchg sub push adc push loop sbb add std jg push add jns js out or pop adc enter call jnp mov test add pop pop call pop fsubs push cmp push repz test jge getsec or arpl and hlt dec sbb sub enter cmpl es fild pop pop add inc pushf add pop jle adc loopne lahf jl es xlat dec into (bad) xchg fldt push push imul dec out scas mov fdiv push inc mov add pop inc outsb lock pop fwait pop mov mov pop jmpw lahf mov dec xor sbb xor outsb addl xchg inc push push pop pop hlt orl mov add sbb add add jbe sbb mov push mov fimul incl notl and pop xchg adc push sbb push xor mov push fidivrl push sub cmp push xchg add mov and int3 dec dec mov pop (bad) xor mov lret xchg pop std aaa shrl shrb stc ret (bad) pop xor pop push push fcmovnb inc pop aam out mov addb dec (bad) and push cli mov and in cli push hlt push rcll mov cmpb out stc push mov scas scas jbe inc and cs mov std cli add fisttp jl dec or mov test call lahf pop das cmp loop aad add sub pop shll xchg xor mov xchg sub mov out iret push in je repnz les and in jl pop jae add outsl aas cmp popa push dec mov xchg popa in pop movb insl lcall das jb (bad) mov sar mov xchg jb cmc cmpsb hlt sub xchg mov push sub icebp incb scas xor cmp push mov inc or jg adc mov clc jmp rcr andb mov cmpsb jns mov or push pop push jmp mov decl mov push aaa xchg xor dec mov cmp leave sub jo out adc and push ja lcall push les jmp lahf mov jge pop fcomp xchg jb pop sub in imul aad add xchg mov sub jae sub mov mov out cmp add insb ja add push jmp and pop xlat or outsb fsts rolb bnd cmp in jle cs insl shl addb adc push rorl sbb jae ja xor cmp inc pop cld push jno push mov mov push dec es sbb loope in pop pop inc movsl sbb (bad) push and dec add arpl test leave das sub (bad) mov fldl mov push and mov lock xlat data16 sub pop inc leave data16 xor pop sub out scas repnz adc mov int (bad) inc ljmp (bad) scas pop pop nop out mov outsb scas push mov jp pop dec inc pushf inc push sbb leave sub cmp js fisttp (bad) or mov mov mov mov push push iret xor xchg adcl mov div sbb repnz pop stc mov jecxz xor imull mov push sbb and test cmc pop pop scas adc shl sarl mov bound inc sbb jge jecxz jno cli push jb adc sub mov (bad) iret fild inc stos fs lret loop pop xchg dec inc mov cli dec push pop mov sub sti lods pop pop lods aas es mov cmc add or rorb cmp jmp sbb mov xchg mov hlt add in sub lret xchg (bad) es push xchg mov ja das bound mov fcomps cmp cmpsl call cmp or push (bad) mov lea or in outsl loopne adc cmovp mov cli mov pop mov push xchg dec aas cmp jle aad jmp mov das add addb xchg es or fcom (bad) or and pusha pushl pop in aas xchg mov (bad) movsb mov mov mov sub (bad) xchg xor cmpb outsl gs inc sbb stos lock cmpb push icebp (bad) xor xor adc xor test pusha mov pop xchg push mov adc fldenv push pop mov aas push fs idivb sarb test xchg add into pop jmp icebp sbb std dec add add lret sub inc mov jmp (bad) dec push xor cwtl loop or mov pop cmpsb inc xor push push je pop pop sub sbb or jns bound pop out sarb or pop push subl scas or das hlt incl and insl std push std xchg or popa inc lahf mov (bad) fisttpl leave add mov pop add rcrb mov sbb sub xchg in push jmp jmp jg in or cmp scas pop dec shl dec add add sub ret or (bad) das imull pusha rorl pop sbb in (bad) cmp cmp xchg cmp or or or sub jle aas add add sub fcompl pop push mov leave inc lods lock xchg pusha pop ds pop cli xor data16 jnp test mov imul jge fisttp and mov das sub ljmp cmp js in jnp shr add popa add cld std jae add sub or repnz shl sub mov sub shl or inc imul inc aaa xchg inc cmc das sbb or lcall cltd jl push mov mov cld icebp subb inc and sub adc pusha fldt aas add cmpsl insb push and lahf xor or push dec dec (bad) in sub xchg add mov fisttpl inc leave xchg int3 mov mov ret daa and pop loope call cli dec pop adc jo dec cld pushl fwait dec mov push jmp cmp sbb lahf add pop repnz out mov mov nop pop lret adc and (bad) push gs incl xor and lcall inc stc (bad) lret mull pop push xchg add jbe mov add add fild (bad) jmp pop and mov lcall int cmp xchg pop mov jo mov lock shlb (bad) mul mov cmp jle test (bad) and stos mov sbb push scas cmp je ljmp xor pop dec or or sub ljmp int pop das repz mov xchg cli push adc mov or mov sub loop js xor xorb sarl mov jmp mov loope xlat jo sub add shrb clc adc scas pop xor jmp gs push adc sahf int inc pop loope mov lcall inc in jnp dec mov add loopne dec and outsl adc xor leave ret xchg add inc or adc ret jbe mov daa cwtl outsb ja mov nop lret pop push fstp jl std sbb or adc jb in stos xor jnp adc fnstenv (bad) popa xchg add repz lods mov cli dec pop sub push aam xor rolb fimull mov sbb and stos xchg pusha pop adc inc leave outsl dec add push cmp repz push mov icebp ret mov outsb pop mov outsl mov xor out add jle ss shl lds and pop or pop xchg (bad) add rclb xor (bad) pop jmp dec xchg sahf (bad) repz or dec fwait popf mov les cmpsl cs mov sub or addr16 in sbb sub jbe add les stc adc out pusha pop leave leave sub or jns dec gs add into insb pop data16 push adc add or into std add pop aam mov xlat push outsb clc sahf mov rdmsr lret dec ja dec push inc push lahf je rolb mov sub sub pop or add test sbb add fs pop insb popf xchg (bad) jecxz xor pop (bad) call pushf out cltd add sahf pop sub jg pop inc adc repz imul (bad) and jae lds mov mov push movsl cmc lea mov xchg cmp mov sub xchg (bad) sti sub cmp dec pop pop outsb add xchg cmc adc or nop jge and in pop add cmpsl mov pop adc fldpi cmc insb cli jp sbb sub mov or out pop ljmp rcl jmp jle cld imul add push push mov fimul jnp fwait ja add add and or lods das mov push pop mov ret push jnp lcall xor add or (bad) mov sbb sbb xor ljmp fucompp negb (bad) xchg rorb in ficom je jnp ret add jmp out and xchg pop xchg mov aad fnstsw pop add imul mov or cmp (bad) cmc push add (bad) adc pop loope pop sub les test into xchg cld imul add dec jg inc ret add pusha mov inc je leave inc popf and jmp (bad) out dec aas scas inc cmpsb mov pop xor and jge addl jmp jne jle fsubl add add mov adc jmp daa jmp add lret jbe jp dec push bound jecxz and cli dec or mov ds mov test icebp mull xchg push inc in push test mov test push mov jmp decb inc int push mov dec sub sbb (bad) cmp jle movsl and adc jmp xor lods cmpsl adc incb push pop pop dec test std lock adc dec loop sub xchg imul add xchg cmp shll stos lahf aaa jmp push ljmp (bad) dec inc sarb jno dec inc inc jne and (bad) dec push (bad) mov pop jg and xchg pop mov dec aas pop push sub sti lahf imul or push pop jne push cmp xchg in push mov test std sub or cmp xor cmp lahf jmpw fldl rcll cmpsb cltd cmp lret enter movsb call stc jno (bad) leave testl dec and and dec mull pop ljmp (bad) in xlat jecxz push add sbb or adc lods enter jmp xchg mov cmc sbb xor pop sarb not in loopne add cwtl subl jecxz imul mov lds push (bad) daa pop std sub mov clc xchg aas loope fdivrp add jbe les add add xchg xlat in cmp pop jecxz push stos add add pop imul dec mov adc jp sbb aad call test adc add shr cmp imul jns stos iret cmpsb sub das cmp orb pop cs cmpsb lea stos jns inc lock push out jnp inc imul mov les xor imul mov nop cwtl pop test lock mov (bad) xor or into (bad) cmp rcrl inc sarl loop mov shrb dec sub or jecxz test aad scas dec movsl mov pop in mov add orb ljmp adc adc jmp pop cs movsb ret lods mov dec cmc dec or sub stos xchg and pusha or dec into push jl (bad) inc mov test adc movsb jns or in mov xor rclb mov pusha mov mov hlt outsb pop cs andb mov inc shll (bad) inc cmp rcr movsw sbb sub sbb cmp rorb sub sbb sub dec popa (bad) shl mov test sti dec dec xor or loopne inc aaa aas addr16 pop mov mov int3 sbb cwtl mov push pop mov push and clc inc arpl xchg movsb rclb jns in nop inc outsb and in test push mov and inc into mov and and cmp xchg inc cwtl mov xor pop jl mov fistpl loopne cwtl stos xchg dec jbe subb gs and ljmp sti mov mov subb cli sub ljmp adc pop shrl xchg sbb add jns (bad) in dec (bad) xor cmp dec add cs rorb pop into (bad) ljmp divb es xchg sub test jecxz inc or mov add add iret imul loope xor push lahf or in aam mov shlb pop push pop xchg xchg or adc fsubl les es xor aaa dec jmp mov add add mov enter mov es dec cwtl mov lods sub dec add test enter hlt test push add xor dec push or cmp test js cld popa jmp fwait jecxz adc cmc mov mov in je repnz stc add mov repz mov and in mov or aas popa or loopne inc jmp or ljmp jmp cmp xchg jno inc ror or cwtl xorl in cmp imul cld rclb rcl jno aas cmp inc inc hlt dec shlb mov or mov nop dec dec je inc cs out add inc push push into cwtl sbb cs mov std and sub addr16 mov mov pop cs shrl jo faddl lods loop lahf sub pop ret out mov cmc xchg add jmp cmp add dec sbb ret push jnp push inc dec cmpsl cmp cmp add xlat (bad) mov pop rcl dec hlt jo dec jl add ret rcrb dec arpl sub es in mov mov and add push ret iret sub pop inc add and imul xchg push lods repnz jns dec mov xor mov dec inc fsubrl xorb adc push (bad) loopne mov mov mov (bad) or inc mov jge mov shll cs inc add push jle add int rcrb rolb iret bound mov pop lock add dec jbe mov mov test sub inc mov rcrl push push lcall fsub dec les dec pop cmp or shl cmpsb add add pop push mov mov movsl cmp xor cmp repnz jbe mov (bad) or clc shll jbe mov sti add mov and add add push stc rorl fiadd inc xchg pop xchg and (bad) xor mov fsubl shll add jecxz sbb insb pop into addl decl dec and mov jb add and shlb mov or loopne mov push mov and add enter push cltd xor cmpsb and adc rclb (bad) fsubs fs cmp lock lods add insl cmp push cs mov inc rol in mov sub or cli out cmp xchg sub imul and das inc sarl cmp (bad) seta or inc add (bad) cmpsb xchg dec es in fdivs fcompl mov test jmp add push cwtl lret (bad) mov or dec shll pop fmuls jb cs lret in rolb dec push (bad) dec xor mov imul add or and and mov rcll jle pop dec dec or adc inc je or mov sarl cwtl ss add pop add xor lock or add popa call xchg xchg hlt cmpb and mov mov mov push mov add cmp stos xchg cwtl inc sub dec adc add jp sub test adc enter xchg aam jecxz aas lret add out xor mov xchg cltd out and sub cmpsb inc mov stos jo aam cmpsb in sahf jmp mov je adc mov ret push es mov shl hlt sub and pop mov add sub mov sbb cs xchg dec rolb inc push mov dec shrl jb adc pop mov ljmp jecxz in pop rcrl in popa dec xor leave sub (bad) mov in sbb push sbb inc rolb or loope push popa fmull roll jl sub cld scas adc mov or xchg push popa dec shl subb inc push pop xor cs mov inc scas xor cmpsb cmp adc mov or sbb mov rorb mov sbb or inc shl sub cld mov sbb push xchg or and cmp xchg pop mov mov xchg push sub loopne push jecxz shrb test mov jno loopne add cld pushl xchg and jbe test inc (bad) dec mov push pusha cmc lods push dec fwait out dec cmpb lock add lahf pop mov aad push movsb out and add adc mov psubsb cmc pop test sbb mov pusha add int3 jle jne out and lock jmp fcoms xchg add div int3 das add inc mov lret mov xor or or fistpll addl icebp loopne and push add mov dec or imul cmp div mov repz nop pop add lret fsubrs push mov jno xorl push jle in inc dec sub mov addr16 xchg dec dec add push and adc and aam sbb add and add cmpsl or je roll fnstsw out fs repz sbb sbb loopne jmp xlat xor pusha call mov jbe int3 andb inc cs shrb push call hlt sub cltd push jns sub imul icebp addr16 add dec fdivrs and mov mov push (bad) pop lahf pop cmp and in add add (bad) (bad) dec (bad) cmp cltd mov lds nop push dec mov inc push or stos pushf mov cwtl push add test and fwait push add icebp adc cltd adc cmp add jge fimul pusha lret cmp sbb cmp add adc out add cmp scas popf jae xorb inc add popa xchg cmp ljmp cmp stc dec inc pusha mov or loope sub add mov and int3 or (bad) jno cmp sub add sub jge add xchg mov jne or js mov mov add sbb sbb pushf loope mov and push mov or loope enter dec and mov fbld cmp add shrb insl hlt pop mov test sub andb inc sub or sub adc or or jl mov adc in cmpb sub mov inc push int repz sub in sti mov push push iret lock (bad) js iret test mov sub xchg aas push add xchg inc lcall dec mov xchg mov add fisubl mov xor sbb pusha xor mov loopne lods pop mov roll jae sbbb repz xor or cmp mov sub clc test fmuls sarb jo icebp enter clc dec mov cltd fadds inc repz test xor addb mov subl or adc push pusha and pop fwait enter cmp inc rol push movmskps push movsl mov pop aam and xor rcr xor jg mov add movsl cld xchg lret leave adc inc (bad) cmp add loopne lods or mov addr16 cmc stos aam lret scas add pushf xor push test xchg adc xchg or addb jp and sbb cmp loopne mov inc mov mov adc insb xchg loope fs mov pushf (bad) aam mov dec test adc pusha dec shrl adc add rorb dec xchg out outsb icebp mov and jo je push dec mov add push sbb xchg ja mov adc xor mov mov pop and and push add lods xor (bad) cs adc or js inc sub test dec pop nop mov mov pusha jg movsl stos lds push jno xorb cmpsb xlat aad adc add sub add xchg and lds jge aad add cmpl mov in pushf inc repnz dec xchg push imul jb dec (bad) je mov fsubp sbb loope loopne icebp add ljmp mov repz push dec pusha or xchg xchg (bad) jp ror in add lahf inc in sub mov xchg push shr js jl popf add cmp in push sbb imul fld1 adc jecxz adc (bad) sbb (bad) imul inc sahf insl fldcw bound adc inc or xchg mov mov and or aaa imul xor and or xor lret mov and jns adc testl jnp gs out js shll ret and cli jge sbb push popf hlt int3 and sbb xor fstpl ljmp jle dec pop sub call mov add xchg push ret jmp adc stos sbb add aam hlt bound popa add push stos addr16 jo push add inc pusha into test scas fbstp adc pop add add add sbb and test mov jl test repz mov leave pop adc fcompl sbb mov mov movsb add and push mov jo cwtl push mov push (bad) neg xchg fimull jbe cwtl adc in pop mov add ss rcrb xchg mov stos pop hlt sub mov or dec fwait test inc inc mov and and push fcmovu jg movsb into mov bound push aaa mov loope mov inc adc xchg add ss in in sbb je add mov jecxz dec in pusha xor push mov mov xor mov add mov dec cltd pusha lock or pop lahf lret popa sbb adc push test pop dec fwait dec (bad) mov sbb add mov push leave cmp addb xchg jmp (bad) shrl and pop pop insl (bad) jae,pn push inc aam inc (bad) iret mov mov pop mov add incb add mov inc push pop cmp mov js mov nop or dec push jnp das xor nop or shrb add ret stc inc push dec sbb sbb and add jge leave mov daa add xchg adc add loop mov push mov nop ja push stos fwait clc push or test js popa bound add jo (bad) xor jns or outsl pop faddl add mov andb sub mov es xchg or ss add xchg inc inc cwtl insb push stc sbbb xlat insb xor clc icebp lea adc add out mov push and or add mov jnp dec push lods pushf add push dec jae sbb mov push icebp cmp int3 push aam js or cmp add lods cmc in and stos jo iret mov cmp lcall inc shlb dec inc (bad) in mov loope dec dec push push add inc sub outsb in sub cs in jbe nop mov repnz mov test add aaa test add rcrb sbb jno dec aam in cmp mov loop jle inc ret adc out inc gs pusha jg movl nop hlt fstpl jnp push roll repz inc ljmp inc cmc push mov inc daa cmp movsl mov push in and cmp xchg (bad) leave rol pop leave in int3 cmp adc inc mov int rorl lahf sub fwait std ss add (bad) or add test inc xchg pusha sub mov notl (bad) xchg test adc arpl jl add xor pop push mov add push or xchg or push (bad) dec xchg mov stos jbe push ficompl out out cld push add add in push inc inc mov and test xchg cmp adc outsl add (bad) jle push orl (bad) adc test lock mov mov in pushf pushf or cmp inc test xorl jge notl hlt add icebp lret stos lock mov lret cld add (bad) jle add inc dec adc fwait mov stc cmp jl enter rol insb addr16 sbb into add jecxz mov cmc and sbb (bad) out mov repnz and fcmovnbe sbbl inc mov and adc cs and test lahf cli cltd cmp and insl daa punpckhwd js sbb push cwtl (bad) nop aaa xchg adc mov les in (bad) cmp cmp pop daa cmp cltd push mov inc pop add mov sub mov xor daa pop dec and mov (bad) sub test mov leave sbb stos push or sbb xchg pop push cmpsl decl or sbb out pop bound push inc in dec addr16 ja (bad) dec mov xchg cmp mov pop ss nop lock xchg mov or test movl or push mov add or push int and xor gs pushf or mov add inc sbb cwtl shrl dec mov or and rcrl scas ds jne jg sbb pop adc dec mov and lret sub pop xchg mov in cmp adc int (bad) sub ror mov nop xchg adc or dec inc (bad) int3 bnd add jo mov inc mov gs add insb nop cmp sub (bad) popa ret mov mov test pop pop inc add jle jae and repz inc xor xchg or add lret (bad) mov imul push cmp jnp pop push popf pop push jl test pop pop ret sbb js stos iret out movsb mov cmp pop scas insl add ja aam dec pop dec fild or rclb adc push mov fisttpl adc bound lcall jbe cld repz (bad) jo and sahf cwtl je add mov test test sbbl jp inc add push pop mov out das sbbb dec orb xor push pop stc icebp push jae add imul push lea loop pop mov add scas sbb lahf push inc pop popf mov pop test adc and xchg js mov mov data16 and mov xor jo push cltd push sti repnz aam rcll (bad) sub into (bad) and jb dec and sub insb cs imul pushf add (bad) jo daa mov jbe mov and xor mov lea xchg testl lods push push ret movd push loop je sbbb cmp inc cli jge or inc rolb rolb cmpb mov cmp add add cmp inc loopne (bad) fld dec sti xchg add jae xchg jmp dec fmuls addb xor jecxz cmp sbb and add bsf mov mov hlt push sub cli movsl xchg in js and xchg cmpsl mov dec mov daa add lods test repz xor movsb adcb ds and jmp jg or popf (bad) mov nop iret and cmp les adc add subb das outsb inc push jo and mov xor xor pop enter add fwait dec dec push hlt jbe lahf insb mov pop mov or adc lods fsubrs orb rcll inc pop stc dec scas (bad) loopne pop sahf sub push add ds clc mov add mov into sarb popa push lea and xchg lock loop mov mov sub add add shlb adc adc cwtl sbb dec lock inc xor xchg xorb lods mov pop mov mov sub shrb adc cs pop (bad) daa pop pusha pop push xchg and push aas lock cmp adcl jl mov enter adc adc insb push sub pop push jo test enter out xlat in jno rcl push xchg cwtl jb cmp pop fidivrl or mov push sbb and inc adc adc js xchg pop es mov add dec cmp (bad) aas add mov add lea pusha js mov jo pop mov cmp xchg cltd xor push inc loopne cli fisubr cwtl aad fnstenv or out rol test (bad) add or out int3 sbb rolb out and stos cwtl xor in call mov add adc loope pop cmp es (bad) jl mov movhps je nop adcb or jb sbb mov scas and sub (bad) xor adc mov dec enter sub add out scas push or sub lea clc or ljmp and adc lock cmp fs lock mov mov js test sub movl adc adc lods add dec aaa cli enter push cmp mov mov mov sub adcl pop or push dec dec test int3 cs lods (bad) test int3 xor dec movsl enter mov xor in rolb push sarb add roll add mov add add mov jnp dec and loopne pop and sbb mov andl adc add clc (bad) xor jg,pn pop mov adc lcall sbb xchg sbb xor pusha sub add inc xchg dec and (bad) pop adc cwtl xor faddl xchg jl sarl mov mov dec mov lea adc add jle pusha lods cmp and popf (bad) cwtl pop pop or mov adc xor cmp push pop sub pop bound jmp loope loopne mov lods jecxz lock sub pop xor scas adc pop pop fs jmp sub sbb fdivr pop inc aaa cwtl lret rcrb into mov add out or or push mov pusha or mov mov add sarb inc mov cmp add daa lret mov out aaa iret jl sbb add movlps ds xchg jle cmp insb jg fisub fnop cmp push outsb jbe add clc adc mov push loop (bad) mov dec xchg sarb sub or cltd jle cld movsb sbb adc xor mov xchg add pop popf rolb negb mov mov insl xor mov and out (bad) add lea test push js mov mov rorb inc fisttpll and push add pop test cwtl and sub inc fs addr16 mov rcrb int xor adc push movsl add pusha ljmp loope inc jnp inc daa test pusha test or shll fs dec inc cld sahf add aam adc popf add xchg out and sbb mov mov imul push dec int3 and dec enter inc insb fdivs cmp in rorb adc (bad) mov jp jns insl dec mov add and (bad) cmp jle sbb push int3 insb test in cmp gs xchg pop sahf jo ret mov adc and les clc and call cmpsl rcr cs fcompl stos inc sub xor lret (bad) or jge imul dec jnp clc sbb sbb xor pusha jb loope repnz mov fdivrs lcall in push cmpb ds mov je shrl aas or push mov test fiadd (bad) mov xchg lret iret mov jns adc sbb sbb repnz out xchg or pop cmp in pushf pop add call dec sar cld push orl sbb mov cmp or adcl and mov dec fcomps js out sub sub les inc xchg (bad) subl cmp stos mov (bad) pop int add or pop mov sbb or rorl mov rolb add in jp push jo or out dec sub or sub ficompl push mov or in sbb adc nop test test mov loopne mov xor add (bad) jmp lahf daa xchg add add mov pop sarb add out jo pop mov dec cs inc mov popa add inc mov or adc out cld int jmp inc shr (bad) jp push push push lds rcl sub pusha dec enter jle insb jne or xlat push sahf aam jno subb cmp (bad) pop repnz xor daa add mov enter movb sub push insb scas mov lds jbe add cld mov add lea out mov mov rcrb ret mov loop dec jnp mov adc ret add cld (bad) push xchg xor ror xor cli pushf pusha gs cwtl lret add jecxz sbb repnz pop pop dec push add xchg test push mov movsb add mov dec jbe adc (bad) (bad) notl inc adc inc cwtl mov aad dec add adc or or pop aas out ss mov fsubs aam inc (bad) xor mov push adc je add in push rcr pop add pop lret adc sbb loopne mov loope add ds test cwtl sub repz xchg or jne jb push cmpsb cwtl xchg push adc mov or mov cmc add mov pop xor mov loopne and xchg add ja jge test pop add pop jbe inc je test mov jecxz das mov mov mov fwait mov repz rcll (bad) sub icebp xchg cltd sbb push cld sbb test (bad) stos outsb and idiv push dec sbb pop lcall xor ljmp push inc jge cmp add fwait dec add cmp pop bound cs test add fcmovnb or (bad) rcrb cs sbb push or push rolb movsb fnstcw cmp jbe sahf mov orb sbb sub data16 push scas xor dec inc xchg mov imul or js insb and jo aaa sub inc xor or repz mov movsl xchg test pusha sarb xlat idivl popf test test hlt je andb push sbb cltd inc add or sub clc ss cmp andl clc add lods lock push movsl imulb sahf and add jbe mov ret out fisub inc push bound ljmp mov mov adc and in and test fcomps lcall ljmp insb cli mov (bad) lds mov pop push pusha cmp js pop jo mov pop (bad) pop jns adc add and rorl icebp mov jge out dec stc out movsb js adc repnz popf and adc je lock push push movsb dec and (bad) repnz bound mov dec pushf pop mov jecxz push cmpsb adcb inc add xor mov gs cmp adc (bad) fiadd jnp das movsb push in sbb shrb leave dec jae js fcoms mov xchg shlb inc inc (bad) dec test mov stos lock xor jge dec into hlt push div cmpsb add bound enter subl mov pusha test adc fadds ljmp cmp sbb (bad) cli add std sbb add add pushf push int3 test test xchg add add out pop mov in gs xor and lock fimul dec decb cwtl inc lods or jle lock add in (bad) xchg std rclb divl mov jg xchg lcall add xor stos adc test cmp cmp mov mov stc fs pop add push sub int3 subl jb push icebp add and mov or add xchg pop stos push or test mov cmp dec pop adc xchg aam nop xchg add bound and pushf push add sbb inc mov jae es add add cs in cld jb es jmp push jo adc imul shrb adc stos jno insb and lods add dec dec bound cld or sbb loop (bad) xor and fwait repz cmp fcompl pushf add add out rcr and add or into fmull xor hlt xchg adc and or or xchg jl mov pop dec sbb sub insl out cld repnz stos sub outsl add mov sub call mov mov les fwait mov gs ja scas mov cmp mov and iret aaa add or repnz mov jmp add out insl add cli les stos popf lahf out add adc faddl aam (bad) repz xor adc bswap stc pusha inc (bad) mov (bad) xor cmp mov jp add jae icebp sub mov sbb arpl lods int3 mov jae add mov jmp loopne adc (bad) fadd aam adc cltd ja enter mov add icebp inc js cmp jle adc jmp mov sbb pop sub mov pop loope jmp and pop mov data16 nop jo dec cmpsb xchg out adc xchg sahf mov es sub dec mov cmp mov inc mov sub stos rolb movsb pop int cmpsb gs test inc dec add adc mov mov je aad pop fs jnp cmp loope jno dec rcrb dec test and add insb xor inc cmc mov inc cmc and fcoms push (bad) std enter jl cmp xchg popf lock pusha cwtl lock jns add cmp sub inc pusha xor push inc das aam outsb lods mov push ljmp mov insl js lret fs fsub ljmp lcall pusha add add adc add sub mov add cmp es in inc mov sbb add jns pop sub jmp pusha cmp lret mov and js fsubrs sbb adc or fisttpl daa and push mov fsubl push cmp icebp pop sbb mov sbb push inc test les mov add xor enter scas out cmp and xor ret adc pusha adc and jno pop mov lock add repnz std jno fistl loopne mov int mov xor xor cmpsb (bad) add add or pushf clc out inc and or hlt mov or xchg xchg pop fadds fs fcomp fsubrl fcomps das mov ror test stos lock cmp dec orl popf add mov (bad) jp adc push lods lock cmp jne sbb add jle jmp mov and dec mulb cli jb std addr16 (bad) fsub hlt lds xor pop daa aaa aas rcll orl xchg test enter gs cs in stos adc xor ret xor dec inc and inc jecxz push add es mov subb xor cmp add (bad) incl cmc (bad) bound add jb xor mov ret xchg pop cwtl adc add sub fwait inc pop pop xlat insb test test rclb adc mov push arpl (bad) loopne rorb in js or mov cmp adc js je orl out repz xor push pusha pop xlat rol push outsl repnz sbb clc add fmull les pop mov (bad) clc js mov cli xor xchg dec pop iret inc inc xchg mov incb cmp clc movsl daa shl into mov or das xor je pop xor add iret lods fildll pop add mov push subl inc add daa mov aad cld call pusha lret jmp sub dec mov and mov sbb jns jns bnd fincstp add out lret jmp adc sub es dec adc cmp int mov inc jmp xchg dec popf cmp sti xor ret or add push fbld testl mov xor sbb jo adc stc adc (bad) mov adc fisttpll and repnz xchg dec popa frstor enter or sarb and adc jnp data16 mov cmpsb (bad) add lock and xchg add mov sub dec mov rcrb mov mov xchg add aad mov inc mov pop adc cmp jo test add push adc lcall stc xchg sbb and addb pop push jl loopne les int vunpckhps add jno or cwtl inc movsl mov add addr16 cmp pop mov js subl xchg pushf adc sub sbb roll inc mov pop loop addb add in and dec cmp rcll mov mov js or pop pop inc adc inc mov mov (bad) out rclb mov add das cwtl mov cmc sub mov pusha jo cld stc das add dec pusha add adc mov sbb xchg jne adc pop in insl mov leave adc add orl push pop inc pop and dec scas cltd les mov fsts xchg call ret xchg ljmp and test cmp sub aad or stos adc push dec sbbb push pusha pop and or add or in xchg jb jns mov or add push icebp push mov pop test pushf insb icebp repz mov mov and pop cmp mov cltd andl sbb frstor push imul pop xor cmp jl pop aad mov xchg imul cmpb or add testl fs movsl push sub lahf pusha cmp cmp inc dec cmp mov mov jo sarb loopew das (bad) sub jecxz rcll int3 inc push dec jnp add push pop jae push pop and push mov (bad) push mov fiaddl outsb sbb mov sub gs sbb mov dec lock mov or push dec dec mov call popf pusha pop rcrb sbb cmp inc outsl arpl jae popl fs stos xchg sub ds add daa movsl repz out rclb adc leave sub psllw push loopne sub sub push push pushf dec imul adc add xor jb shl adc fsubr sub shr adc into lods cmp loopne js sbb fsub sub rclb mov pop or inc add (bad) jl mov mov mov cwtl test lcall push notl sbb push dec sub cwtl jl add (bad) sbb (bad) nop mov mov int sub nop enter ljmp stos (bad) repz into fbld xor in add das push cmp data16 dec inc push in je xor and dec je cmp add jo adc (bad) ljmp (bad) sbb arpl loopne sbb mov add xchg stos mov push cmpb lcall repnz bound pop and insl jle daa addl out push (bad) lock add inc repz or mov scas push push add or dec imul outsl scas (bad) add or push jbe aad inc in mov (bad) mov js stos ficoml repz mov std lds roll fs fmul inc pop xchg add movsl in jecxz rcl cwtl add cmp push xchg aam bnd push push add mov fmuls cmp sbb add inc mov add mov pop sbb mov movsb push adc (bad) sbb add paddsb loop cmc add scas add adc sbb xor les loop ja js std mov hlt mov push daa sarb enter add js inc ljmp in (bad) divl mov roll ds and js inc sbb mov lods xchg push xchg lcall test aam imul mov dec fwait xchg popa pusha pop xor mov cmp sub call lods adcb or fwait cltd js jecxz scas call and pop add cmovs pusha push xlat in push pop add test arpl and add imul add (bad) clc je cld mov push jl xchg insb pop cmp rorl adcb into add sbb stc std fsubs sbb xchg movsl rclb pusha lds inc pop push mov pop push cs dec pusha adc add int3 add push jl sbb jne cmp mov fs inc pop arpl add mov push and rorb lret fmuls or mov cmpsb jmp or jg loopne inc mov lea jbe pop inc mov cmp push repnz lods ret cmp adc pop bound inc pop pop add into xchg orb push xchg xchg addb jge addr16 cmp mov movsb loopne push je mov in int rcr in mov xorl xchg call xchg fild sahf mov stc add shll sbb dec xchg mov lock jmp add (bad) dec ds jg rorb js dec pop adc push fwait lahf sbb testl pop (bad) mov push dec call mov add inc fwait or in xor imul sbb xchg fcompl lods xchg mov and jmp push in add jae pop js stos cmp or cltd mov xor mov mov adc mov xor or or sub je push sub push sub call sbb mov ret mov mov insb sbb xchg rcll out popa mov or mov sub xor cs add lock adc fsts in or pusha jecxz int3 push pop (bad) mov push mov out mov adc sbb (bad) clc icebp scas inc adc popf cld insb repnz test dec xorl push jnp nop test sub add adc mov js pop inc push adc xchg out imulb jo inc or mov in cmpsb xchg mov divl cld add mov push mov sub fs daa shll ret aad sub mov adc nop ret add mov call iret inc pop mov fisub pushf ja mov mov dec xor push pusha pop and loope mov add cmp and pop or xor bound mov insl or test repnz push inc jne pop in mov and pop push xor dec flds inc pop xchg push jl or cmp adc push pop loopne xchg add aas dec pop xor inc fldcw ljmp repnz je add xor nop add xchg adc mov jecxz or sbb xor test or scas movsb clc add jg and inc shl addr16 das mov cmp or mov add mov in aad sbb pushl push sbb int and sbb adc sbb addr16 cmpsb fcomps pop jge xor mov test pop lods fdivs sbbl pop jns push aas jg jno inc jl imul arpl inc loop sarl or and movsl adc sahf add inc cmp sbb mov mov mov push cmp popa (bad) mov sub add mov add sarb push inc lds les lds pushl in fmull scas js add add pop mov dec insb mov and cmp add scas jmp (bad) mov aam xor xor rolb stos test rorl pop mov prefetchnta bound inc dec out add add mov and rolb add (bad) mov ss enter cmc gs add jnp mov mov nop jg jle or add stos mov loopne imul aam dec in mov and data16 inc inc or lahf adc add gs hlt pusha xchg xchg rcrb or sub mov loop sbb add js movsb out sahf jo xchg push jl lock clc inc jbe cmp dec dec and push daa cmp adc xor int3 rorb popa shrl mov or loope lret dec add (bad) xor jp out popa or jg shrb jns lock mov xor sarb cmpsb aaa in xchg xor aam jno rolb xor daa stc pusha or or or test add loope ds loopne test (bad) or and mulb nop xchg fisubl roll xor roll push pusha aaa loopne push push dec pop xor jne mov xchg pop pop sub mov pop adc fidivl in xor mov lret lahf mov dec mov in loope sti cmp test add lock jmp pusha popa jo (bad) xchg xor inc jle js sub jl lahf add pusha std outsb js jecxz pushf or jnp adc add arpl xorb cmpsb popf adc in lock addl sbb or push add test ret (bad) aas repz add adc clc je call (bad) in inc je incl ss and dec ja cwtl mov add push mov subl inc jb add cmc test mov sbb aam repz cmpsl xchg int3 in pop imul mov icebp mull sub jg mov cmc inc ljmp and iret sub loopne in push add popl ja push sub add nop mov loopne xor cmp push loope fistpl sub jmp dec sarb cltd sbb add jnp (bad) sbb xor pop mov icebp push lock push sbb das inc (bad) cwtl jne subl ret leave push ja pop lret push mov aaa pushf lcall pop cld mov inc cvtdq2ps mov xor pop cwtl orb sahf notb jl xor mov push xchg fcoms hlt in fs pop sbb lods sub xchg add xor push lea sbb or inc mov ja adc fsubrs xorl lret or jg pusha mov cmp sbbb pop daa test cs jl push fld test movsl xchg jmp add mov cltd pushf xchg push test lahf test fwait insb mov int xor jl arpl sbb xor aad jge loopne jo or int push jo cmp add shrb roll xchg rolb insb sbb lock mov or adc fmuls mov adc add insb jmp mov and add mov andl movsb inc nop pop aaa int3 dec and sbb inc add add mov fmuls hlt ret dec dec push push in jns fs jne (bad) xor iret mov mov xchg movb les mov js arpl add jmp and mov pop dec pop (bad) or repnz and addr16 add ljmp add pop (bad) cmc pop ja insb pop mov gs jno prefetchwt1 or push jg or das inc mov jnp pop pusha xor jb mov imul call fs xor dec test add loop or lcall push (bad) ss mulb nop add loop in xor add inc fcmovnu jno aam les test pop jns test add (bad) stos popa aam aaa add push or iret ds push fadd (bad) in sub mov repnz imul mov cli push fcmovu dec lods dec xchg les mov sub js and nop outsb xchg sbb xlat add mov sub gs (bad) (bad) cmp mov xchg ja xor mov push ss mov sbb and push lock sub cmpsl mov cmpl xchg adc (bad) fdivl pop mov push pop ret loopne in les jecxz test add movsb push loope xchg dec ss pop jo and scas xchg xor xor fsubr jbe pop pop test mov adc or mov loope mov clc and mov cmp pop push sub sbb jge or add shrb sub fisttp mov xor adc in je mov inc scas mov adc adc scas xor jp in cmp es add or (bad) ror adc int lahf jb mov dec add loopne lds push or push loopne add add rcrl cmpsl and (bad) outsl sub arpl push mov lods mov inc roll cmc icebp inc stos cmp inc mov outsb jbe xor mov inc test aas gs iret addb cli add stos xlat push xor sbb and xchg add sub mov xor lds lcall mov dec sub push int scas cmpsb push cmp jno mov gs pop imul push cmpsl dec mov cmpsl cwtl adc push lock jns mov mov pop scas add in insb rcr inc xor shrb and test dec test cli mov daa pusha push (bad) mov mov repnz lret add jle dec mov hlt dec mov testl mov or lods loopne dec adc mov mov pusha mov loope and mov inc loop int3 repz loop push data16 sbb mov shlb maxps gs imul xor (bad) cmp pusha pop stc pushf or xchg nop xor sarl xchg sbb xor dec dec fldt repnz popa pusha sub push js add in mov inc sbb test repz scas jecxz xchg repnz jns dec jno push adc and xor outsl add push clc pop es loope xor mov int add std pushf jb repnz jne cld sbb das ds sbb add call add and jge fwait or sbb cmp sub add cmp xchg loope int xor push sbb mov mov rorb xchg mov cmp or push test pop cld cmp js pusha pusha add cmp and pop xchg movsl and test int mov addl sub push xor call pop sbb clc push xor inc xor jns dec rorb or sbb xor add clc sbb sub sarb shr lret nop arpl pusha cmc cmp or adc cmp pushf xor lods mov out add push outsl subl addr16 jbe dec jg sbb clc nop sub mov fisub enter in push rol mov push shll clc xchg sbb pushf mov lcall sub push and cmp cmp (bad) xchg into add (bad) mov mov mov sub out adc jne test sahf push movsl push popf push add (bad) mov mov outsb pop decb fisttp or jmp imul aam test aam cld sub fsubrl fdivrl dec inc mov and test loopne enter mulb push insb xor push mov jmp insl cltd clc popa sbb das add shlb cmp std xor jne js jno push mulb mov mov mul arpl inc xchg int3 push mov inc sub dec adc or xlat sbb cwtl les aas cli add or cltd add mov and arpl sbb add mov and mov add int3 mov inc inc adc (bad) mov cmp adc rdpmc xor loope xchg in mov cld mov je add (bad) or adc mov std push arpl sub sar rolb lock pusha in repnz or in adc add mov push pushf mov or jecxz xor sub pop inc xchg pusha js pop mov nop mov es sub inc repz jg cmp jp nop dec cwtl push cmp jg mov mov sbb movsb mov int or dec std push mov aam inc repnz add mov jge sbb and icebp xor cltd add enter xor call mov xchg xor cmp int3 popa fwait nop pop dec mov hlt pop jnp bound lds dec adc add rorl clc mov sahf scas dec sub mov int jmp or mov xor mov xorb test dec scas add jecxz lods mov mov add pop and add stos sub das xchg dec mov scas cs pop stos add sbb or or fcom rorb adc cltd popa and push loop dec jle ds sbbb adc add add and fdivrs jo adc mov jge dec loop int3 fistpll cs data16 mov mov je pop push ljmp test imul inc leave add inc push mov pusha adc mov cld dec sbb jae sub aas add pop xchg loop aam (bad) in cmc stc andb repnz outsl xor mov xchg (bad) pop pop and sti add pop pop dec xchg pop inc movsb addr16 inc outsl sbb xlat in or adc adc (bad) sbb add jle jb mov xchg ja test xor cmp daa aas gs xor xchg sub pop cmpsb pop fwait inc mov sti (bad) jbe adc adc pop movsb sarl push imul mov sahf xchg inc cli rorb mov jb fldl stc xor xchg jo jne cs cli stos sti pop mov jb mov lea arpl mov xor test fimul and roll es js sbb movl fildl cmp loopne or (bad) or add sti sub ss add js push (bad) iret mov jle (bad) gs mov and rcr mov test fucomip out and in mov cld mov inc (bad) shrb jb xchg mov jbe (bad) pop mov and js mov sbbl mov es jg dec mov xor jb xor daa mov or jle cltd cmp inc sub mov or and add mov sub xchg rcr mov inc dec icebp loope xchg pusha or fs out dec js inc lods add gs sbb pop (bad) push inc nop mov xchg fisub push dec loopne rcrb pop (bad) frstor orb aam xor sbb aas das sbb xor addl mov pop sbb pop js dec push push loope test adc mov mov in adc dec push adc in fadds push stos mov cmpsl mov movsb mov into xchg daa leave fisub inc cwtl sub outsb add les sub ficompl iret mov imul adc subb (bad) cmc mov adc xchg loopne push pop or (bad) ficom mov dec (bad) xor or jo dec addr16 add cmp adc inc mov sahf ret adc adc dec aas lds fildl xor js pop dec mov pop dec push dec xor xor stc dec jne jl insb mov push roll add test dec (bad) fcmovu test iret in rcrb in imul loopne daa push lahf nop rcrb mov jb mov orl add or sbb xor mov leave fildl xor cmc add decl mov mov mov and cmp jecxz (bad) lods das out test lods add mov int lods inc add test jecxz inc daa inc mov sbb dec (bad) jo adc stos shrb inc cmp mov sbb mov test adc inc jl add add fs add push pusha add inc mov pop insl sub jb lret mov mov pop adcb sbb sbb or les sub xor add fsubrs rcll mov or pop jo push sub xor cmp dec in (bad) daa into sti clc and popf xchg les add fnstsw push mov mov add sbb cmp cmp sub stos daa xchg jmp jnp mov movsb hlt (bad) pop into js popa push mov pop jbe and scas add add inc and mov shlb lcall push mov add fwait sbb mov test lods xchg xlat gs sbb stc aas arpl in sbb (bad) dec iret (bad) nop cmp inc daa js push sarl xor test ret or add xor (bad) mov push and xchg and sub bnd push and cmp jp add repnz xor popa fcomps jp dec data16 testb mov xchg jl or inc mov outsb xchg sub add popa jl add push pop sub jne xor push and out in jg inc xorb push mov nop (bad) outsb loope cmp lret idivb jle lahf addb pop adc or jmp js or mov add sbbl stos dec lahf dec fdiv adc and scas (bad) test stc cld mov add aad sub jns push call mov repnz lahf ds cwtl adc ss xadd loop iret add sbb scas aad xor je cld js popf mov add fistl push adc lods mov inc sub jno lock mov push xchg les outsb push daa aam mov in push dec sub adc and pop xor inc or push std mov les leave add outsb (bad) jo mov pop nop sbb fwait push loop adc sbb or outsl or sub or jnp mov js sbb lea sub xor dec dec cmp add mov sbb jno or outsl push loope pop leave add fcmovbe jb es dec lret inc lods or rorb add test ljmp aaa cld dec fisubl in (bad) pop and mov and dec sbb mov inc aam repnz sub mov inc or dec clc adc xchg mov and add or in mov je push sub fcoms cmp jo or add lret pop pop jmp andb int3 jne mull or pop inc cmpsb dec pop xchg testb pop fldl push aad pusha in cmp dec mov fimul cmp mov fisttp xchg test dec inc pop xlat inc push inc cmpsb ret ja push and popa stos inc sub mov mov mov movsb pop popf pop push leave adc xchg sar adc add pop test sbb add adcb incb mov sti jp add sub pop js pusha add mov test add ja jo sub add mov das clc xor fwait dec stos movsl cmp inc push daa std push pop pushf add movsb mov and (bad) out mov inc adc inc mov fidivrl rolb mov fbld rolb lock sub fisubl and jnp pop clc daa push cmp cmp clc call sub mov push xchg test inc out int3 adc or in or cs ret rcr rcrl dec sbb xchg andl xor inc jo ja xchg add mov cmpsb add imul mov pop repnz and (bad) dec rcll daa add rcrb push xchg cmp jbe or popf into lock repnz movsb add int3 xchg pop leave subb push shrb adc fldl add rcr mov pusha bound add jbe lret sub mov mov inc adc pop fnop (bad) imul icebp add mov daa adc cmp lcall aam xchg add fwait jecxz mov aam mov cli mov in cmp and inc xchg mov in test or push es cmp xchg mov inc out add imul sub test (bad) mov dec sub or je movsb mov popf push adc mov dec mov sbb imul mov movsb inc push popf jns add loopne cmp and mov or cmpsb dec inc fistp mov pop sub pop pop mov add fimul js dec inc mov cs and mov dec shrb xor fwait inc mov pop add add or popa pop stos push xchg sub pusha inc lock mov into or xchg pop xchg add sub adc andl clc ret add push imul cmp dec scas sub sub cwtl push dec xor pop pop clc mov mov jae cmp js fldt adc sbb cmpsb push mov js clc dec sub push mov xor ret js enter fcompl push ds popf cmc push sub push loope in dec mov fild inc cmp movsb dec mov scas rcrb movsb cmp xchg dec pusha inc pop js loope adc fsubl sub jecxz and xchg rcll push pop xlat je lds in xor (bad) lock dec inc call in push roll cmp aad push lret int3 cmp mov movsb inc loopne adc popf jb add mov pop loope pop add aas cwtl and and sub mov push faddl dec out loop push xchg jb pop sub pop xlat dec mov mov clc adc cltd cmp rcrb sbb leave pushf insb and shll mov add lret mov repz roll int cmp or mov cmp sbb xor inc aam adc jae fisubrl sub aas pusha subb xchg ret xor mov add mov adc test nop popa mov adc jns rcrl in fsubrs push inc rcrb and push push pop fimull mov inc imul js lods inc dec aad mov addr16 sub xor mov mov ds push or pop aam pushf add stos cmp mov inc cmp inc dec and ror daa call inc scas les (bad) dec mov inc sub pop nop pop inc sbb pop and sbb mov daa add dec inc inc pushf add cmpsb push rcr sarl sbb and pop add push pop cmpsb xchg adc push cmp inc xchg inc cmp push adc and (bad) xor xchg inc mov out push notb cmp adc aam and out mov insb xchg mov pusha adc js fsts pop cltd add ret (bad) rorb or mov cmp inc inc and loopne subb xchg sub mov pop fs aam cmpb and stc or pushf fisttpll fcoms pop dec popa leave adc jmp mov dec sarl push rorb rolb push in pop std (bad) inc inc ret rol xor and adc pop inc pop or cmp pusha push or inc add imul sbb lea and iret subb xor push dec pop fs push jg es mov imul nop sub mov and cmp pop dec insb cwtl xchg jno cmp mov int inc mov mov call in pop sub aad xchg xor lods roll (bad) jae sub test aaa or jmp in cmp push hlt jbe push dec rol test nop int3 imul jle mov inc les rclb (bad) sbb fild jl clc inc push rol cmp and pusha and cmp add cmc mov enter inc inc (bad) lret jo xchg inc (bad) movsb pop cs pop cmp xor (bad) arpl les cmp nop inc xchg cmp sbb dec push test test inc push pop fldcw fdivs adc or push jb mov inc cmpb pop push addb cs dec xorb pop mov add popl icebp xor push in jnp add adc mov add inc xlat loopne fstpl and push cmovs adc nop mov movsl cmp xor fwait mov aaa pop xchg aad dec rolb mov stos cltd adc and or loopne sub mov in dec mov sbb sub mov inc dec xchg push nop fs (bad) hlt je push cmp xchg (bad) popa mov xor cmp jo inc lods dec push pop shl test mov sahf adc stos push orb xor xor fsubs testb iret mov dec neg js xchg pop insl (bad) rorl xor in sub xchg jbe pop inc daa add cmpsb mov cli ss or daa adc cmp add xchg adc test or in sub popa mov pop addb and add out add js push into lcall loopne push cs jo pop dec ret out sub lods (bad) fsubl aad rol stos dec daa popa add lret pop aaa cmpsb mov or aad jne pop js iret repnz lahf cli lock dec arpl mov inc xchg pop nop fsubl xchg add imul ds pop sub pop cs xchg lcall aaa and js xchg add fsts add inc push repnz test cmp daa push hlt ds fisub (bad) xchg nop imul test mov dec (bad) push roll adc test sbb and and cmp in push pop dec dec cmp call pop or pop sub xchg mov inc call dec inc (bad) lret sbb rol mov in test arpl pop mov sub rorb mov ja stos fidiv jmp push and rorl mov movsb inc js cltd les scas data16 xor add add pop loopne adc jo cmovo sub push sbb fcoms mov add es and call lahf fdivs mov dec add (bad) or fs lcall and (bad) push or dec mov pusha and add les lods icebp mov mov orl movb mov push and loopne add roll sbb test push adc mov out push imul add inc push add fcomi fcomps or nop arpl or flds dec sbb xlat xor and push inc xchg loopne add or add jno loope es imul xchg hlt out jmp sub mov addb inc addr16 cld test icebp add cmc xchg outsb xchg fs add pushf pop mov mov adc add and stc push cs and add into pop add xor in pop sahf int3 lret push xor in or lds mov and dec adc aam sbb xchg add out adc sub xchg jno cmp mov push je adc mov mov or and and mov call sbb movsb scas dec lods fs rolb cmp adc or in dec dec insb pushf mov cmp shl jne (bad) dec cmp loopne and mov rclb xchg cmpsl out mov fadds push ret cmp and and (bad) insb pushf pop add xor stos push in pushf lods bound jns dec cmpsb or cmp jno and dec pusha push sahf js shl push (bad) imul and sub and sbb sbb push cwtl les xchg and subb add (bad) pop pusha andl or pusha push xchg (bad) cwtl (bad) (bad) xor nop popa lret loop pop sub mov push mov (bad) inc add inc dec dec cs push inc sub inc add lock mov mov (bad) gs and lcall (bad) sub repnz adc mov adc add rorb push mov xchg xor sbb test inc jo mov movsl cmp add out test fsubrl sub mov inc dec subb and jmp sub cli adc cvttps2pi adc js cwtl mov (bad) adc mov jecxz xchg (bad) pop fistpll mov daa xor cmp repnz jo mov fs mov pop mov mov shl stos inc adc pushf jnp les xor cwtl inc inc cmpsb scas mov popa fadd or dec nop insl add xor sbb inc jnp add pop mov in sbbl dec fistl pop mov js or leave (bad) and in orb aaa call dec mov xchg adc call dec sub dec popa push sub faddl ss xchg sub test int3 cwtl dec dec push xor mov int3 jbe test xchg mov cli add pop adc adc jecxz int3 into je or test jl in jp jl stos and dec loopne inc add mov push push mov cmp add cmp mov mulb jmp adc js pop cmp subb ds xor pop les fnop jecxz adc add dec jb sub pop xor dec pop jae aam xor mov daa cltd rcrb add mov sbb sub adc add and je or lock call jo push push adc cmc fbld push mov test enter pushf sbb int and lock pushf xor gs lret int3 push mov cmp das xor mov push arpl mov fist dec mov movsb or cltd inc inc jno and pop les jae or into add sub ret dec push push adc inc leave pop fcomp dec addl or dec pop (bad) or cld mov int3 add pop in sbb xlat jmp mov or inc dec test cmpsb mov add outsb lods push push and pop inc lods cld inc cld insb sub push sbb pop in xchg mov jb cmp sahf js xor fsubl xchg xor jae xchg dec bound jns fs mov mov lods add add jo cs loopne call cmpsl inc add xchg push push imul and je incl nop movsl gs movsl xchg call in mov adcl dec cltd inc rcrb xchg fwait subb jl lods loope test push xchg jl fcomps add stos nop mov mulb pop es loopne xchg add mov xlat pusha int repnz addb pusha and jl or and stos sub outsb in daa jo les je xchg movsl add mov push mov rcl xchg out add cmpsb in adc insb adc fidivr adc inc test add sub mov dec push mov pop lock sbb fisttpll movsb iret cmp or or pop cmpsb enter test push dec shr loopne xchg inc ds frstor lock test fdivr cmp dec int mov (bad) inc mull mov add insb pop xor mov std sbbb dec mov enter and push fs mov test test mov test push mov sbb loop (bad) push into loopne pop jl popa rolb (bad) jns inc lahf stos int cmpsl adc pop push jle enter clc leave scas xor into aad pop out inc (bad) or lods add mull cmp push fnstsw mov or push cmp aam ljmp js push nop loope adc sub xchg test xor inc push shll cs mov ds add arpl xchg xchg mov mov xlat push jne add inc jbe imul add lods push mov lcall lock mov and jnp adc inc cmp insl cltd outsl cmp pop aas and lahf mov sub or lret jo adc fistp mov mov adc pop aad testb lret cmp pop mov inc ss jmp imul inc or frstor jmp mov add add mov mov or add add lea fnstenv pop ljmp xchg push xor inc insb fs adc inc xchg xor int3 dec push loopne sbb dec push inc xchg push pop lods or shl add sarb imul das leave test sbb xchg mov mov pushf popa push cmp loopne movsb cmp mov xchg adc sub mov test lods push mov ds push enter lea bound fstl lret clc mov jp sbb inc outsb gs popa mov add dec ficompl dec jnp adc push inc mov or add pop jno mov addr16 mov xchg jl (bad) jmp das add mov (bad) into push iret and push in or sub out adc in pop push sbb cmpsb aad mov pusha push movsl mov cs xchg cmpl popa pop dec fs pop ja add outsl shrb mov cmp mov lcall repz or push sti push mov pop in adc int cmp in and sbb lds call fbstp or cwtl and sbb jl or pop push add jge cmpl jg sbb push xchg div imul add cmpsb jb repnz mov push mov lret cmpsb inc enter lret dec push test push daa inc call cmp pop (bad) stos xchg outsl js jbe pop sub xchg lret addr16 dec in dec cmpsb (bad) mov xor sub and (bad) or aaa mov jmp test add dec pop in cmp push inc or sub in js in (bad) aaa leave xor xchg add iret mov loopne xchg push jbe push movsl push add in lea pop mov mov test pushf push xchg xor daa xchg rol push loop add xchg (bad) aaa mov cld fs cmp popa into fnstcw mov bound pop mov in cwtl loope inc jae adc test mov mov sub hlt inc inc (bad) xlat stc push (bad) push xchg testl sub ret mov pusha or pop mov mov pop dec outsb scas ds mov sub adcb inc scas hlt add jmp jl loopne pop mov xor inc popa xor mov test push test lock and or adc and and mov jmp imul popa in mov jmp fistp jle popa push sub (bad) mov xchg mov mov push mov rcrl dec pop push pop loope pop test fmul pop mov int3 jne jne inc xchg jl leave pop gs leave jnp orl movb clc pop pop data16 mov push push in stos mov xchg stos (bad) adc (bad) cld cld dec rclb enter add dec mov add mov mov and sub jmp pop pushf push sub push lock pop stos mov add add jno addr16 rorb das repz fwait xchg cmpsb sbb push mov add cli dec xchg jl in scas lods push subb inc xor jp jns push into mov xchg xor mov dec mov jg push das push fist jae les pop out scas (bad) mov jae imul or stos mov inc sbb in mov xchg ffreep inc ds pop sbb movsb add roll sub out test dec aas (bad) sbb pusha popa ficompl or add iret cmp stos mov and sbb and and (bad) ja jge icebp pop sub rorb sbb imul ds pop xor pop push shrl arpl in add inc cmp xchg (bad) sub pusha push sbb pop fbld sbb gs lods rclb push dec aam push mov idiv jp or gs jle repnz gs pop jmp (bad) enter pop xor aaa or push and mov and adc icebp (bad) xor or ficom lock dec xor pop into fstpt mov xchg or inc xchg inc or fsts adc repz ljmp in and dec (bad) fdivr or (bad) pop scas mov test jl push sarl dec xlat jg cs pop scas ss mov jle dec (bad) jo (bad) jns sti xor inc pusha in ja addb mov mov sarl xchg push ja (bad) and inc dec cli xor push std lds cmp dec add es adc add jns mov pop pusha jae or mov outsb adcl dec dec and stos xchg xlat mov inc negl fistl std add push mov cli xor jg xor (bad) mov cld subb jb pop push xor pop sub (bad) xor pop push mov sub lcall push add push rcll add leave cwtl jp dec dec out je mov pusha daa push push pop xchg fisubr jp nop add pushf sub push repz into jbe push out jbe mov mov cwtl lcall orb jns push push lods push cwtl cmp inc add out flds popf and inc mov mov (bad) icebp xchg xchg lock mov sub xchg push mov sarb (bad) pop int3 int3 pop pop ja insb loop stc push lcall pop inc test dec in cmp mov cmp dec ljmp sub push push xchg inc jmp add xor lds push adc and sbb or hlt sbb pop insb bound lock ret mov pop xor jle inc push sub or jmp shrl scas jg insb (bad) inc inc mov pop xchg jnp and and movsb pop xor xor adc adc ss out lret jbe jmp stos sub add sub pop ljmp ja lds imul mov pop xor outsb pop push ficoml adc repz aaa inc and fiadd icebp sub mov add lock jg lret and jnp (bad) sbb shr dec imulb add pop push sub rol inc push mov hlt cmp sbb pop or xchg mov and dec push mov xchg fiadd mov sub add sti inc mov dec add lea cld or xor jmp (bad) push (bad) dec rcll dec jmp or add jo add addr16 xchg adc out aaa mov in mov pop push (bad) adc push inc ljmp jmp jb out jp loop pop mov das or testb adc sub stos xchg sti mov cwtl or add stos and rcll fisubl cwtl cmp push xor xor (bad) into push mov add aas aam mov cmp ds and addl jbe push jnp shll dec lret ljmp dec mov (bad) xchg ds into orb mov mov in pop sub xchg sbb dec jbe push ret jmp and and fsubrl push xchg push and cmpl addl mov in xchg arpl adc sbb jo pcmpeqd subl fs das movsb jl cmp fdivs or imul sti add xchg sub loopne js add xchg sbb adc ja push test add in call jg leave mov dec rcll xor arpl inc in cltd or shl test jmp mov dec adc sahf push pop (bad) mov xor sub and xor jmp (bad) mov push dec cltd decb push call or scas or add push jle aas out sub repz sub pop (bad) xor or sub add sbb or cmp out or std scas outsl test std jle enter pop je mov js (bad) popa out adc sub add aas incl rcl or pop xor xchg popf out outsb or adc xor pop (bad) aad lods loope mov cwtl cmp popa mov push jo and test add add sbb adc mov ret pop ljmp dec jns scas xor dec ljmp inc and faddl xchg lret (bad) inc repz call sub fsubrs (bad) in and lret mov out cltd mov dec dec add dec pusha fldcw push pop sub adc inc shlb inc mov cmp or aad int3 jnp dec jg xchg or mov pop mov (bad) (bad) movsb mov jns sub cwtl ss add cmp loopne jle sub neg xchg push or stos popf mov add outsl sub aas mov jle jmp ret rol aam jp mov bswap jmp jp pop sub stos sbb adc pop mov and push jp pop xchg xchg scas mov fldl cs xchg fisubrl sub add sahf mov inc adc fnstsw add mov test repz mov push sbb xchg loop ss dec mov leave pop test loope ja aas add sub add test cmpsl sar add jns movsb in bound sti and repnz xor add cmp aad mov sub out mov xor cli lret jle jmp push dec jp in cltd sbb jmp inc xor jl repnz xchg xlat and lahf popf push xchg cli push jo xor pop int3 stc lcall mov in mov into jecxz repnz add cld jle cli cmp sbb jmp out sbb iret mov pop push jmp stc push jns lods lea and in inc inc sub sub test or lret inc mov pop push push mov inc fisub nop aam test push (bad) jns mov fidivl xchg and push mov mov sbb outsl stos lahf push push call pop inc cmc jmp add addr16 pop pop and stos cmpsl out movsl xlat nop sbb movsb adc and nop or mov jns jg mov out enter adc adc scas xor and notb jle xor jne (bad) repz (bad) pop add push cli mov add push sub cs mov pop add dec test jbe fldl shrl and pop add push add pop push sbb inc push rclb mov scas jmp jae jp adc movsl loopne sbb adc push bnd mov push js or aad and fwait in pop or mov andb pop shll cmovns sub dec or adc jb scas sahf (bad) jae scas mov jg fadds (bad) pop ss test sbb pop call mov pusha push sbb aas lcall cmpsl or in daa sbbl into jle nop and flds sbbl pop cmpsb sub cmpsl xor loop jbe jae xor pop push jmp inc mov pop sub mov mov mov add mov mov dec push mov mov cs fiadd repnz add jmp xchg hlt leave jb mov pushf jecxz xor jmp cmpsb pop jbe,pn inc and or inc addb sub aaa xchg pusha xor jnp sub jle outsl addr16 mov mov pop xor push lock pop or imul les xchg roll pop fs xchg std xchg sub ja test lcall shrl jae jle add sahf ret mov mov subl xchg dec (bad) (bad) popf xor add jge repnz mov push add and add cwtl fsub fsubrl rcll rcr out adc mov js fnsave iret repnz cmp outsb bound aas pop lret and sbbl lret push lock or mov add rclb out jmp lahf daa pop dec pushf push stc lret add (bad) xor int pop sti pop rcr out sbb fisubr arpl sub ds lds cmpsl sahf sarb pop xchg aam imul pop cmp jg insl mov pop (bad) test dec pop push sbb add jmp mov inc lock push stos push sar dec int xor movsb pop rolb stc (bad) jle shr add or in add mov and and jge mov add iret inc dec in adc shrl jg jge outsl mov andl push mov cmp fldt adcb jmp jnp sub das add cmpl or push test and das adc xchg call dec push mov push jmp inc imul sub xor std mov add pop scas mov xor mov sbbb aam je jg shl jmp lahf add push notb cltd or test adc stos shrb test sbb out jg add ds fisttpll cmp mov add jle xchg xor dec mov adc cwtl add mov cld sbb mov jle and dec add aad insb dec and jnp mov jmp stos cmp push (bad) xor scas xchg sbb in cmp jo add pop mov mov pusha or sub lods gs fstpl lea push xor out or adc xchg dec rolb aad leave push xor sbb or (bad) call push push enter push pop or cmc jb dec xchg (bad) xchg shrb (bad) pop into pop add fisubrl push xor push cmp nopl dec or or pushf xchg add int cmp rclb xorl lods push inc add inc (bad) push pop mov pop push enter add incb sub cli cs mov mov test sbbb push adc rcll scas cwtl sahf push push mov xlat cmpsb fldl sti rorb js xchg mov (bad) xor es pop xor sbb pop add daa pusha fidivl inc pop loop popa xchg and test mov push push lods add push adc push leave stos fsubs add jge xchg push int lahf mov stc inc xchg jl mov inc pusha scas jne pusha xchg rorb imul dec jnp sub mov push scas je and add lea sti push movb mov pop std out and push push jl xchg sub test sbb lea cli imul cmp inc pop inc into imul data16 mov sarb mov dec lds adc imul xor jg (bad) add enter inc data16 rol push inc ja aaa add cmp push outsl sub std cwtl iret sub mov mov adc adc jo xor into cld ljmp mov out mov je xchg add mov js sbb dec jb inc push out mov mov adc nop xchg mov adc xchg rcll addl inc in lahf or push into dec lea or add sbb sub and lret cld xchg xor sarl sbb pushl push sbb cmp mov xchg and fs add sbb xchg scas and add mov and mov and pop xchg add sbb cmp jo out add aam mov pusha pusha xor js fwait cmp fs dec gs ret and imulb mov lds dec (bad) (bad) push stos (bad) mull mov inc jae sbb inc enter dec and and nop aaa sbb faddl or bnd je adc and push adc add mov and xchg and mov sarl adc popf sbb addb or negl cld cmp cmp sub sbb outsl adc xchg (bad) jno stc xchg ss and xchg pusha adc cmp push pop lods fsubrs and loopne outsl sahf fs xor shlb cmp sub sbbl hlt mov sub dec arpl mov and ja add and lret sub pop lret loopne mov in popa jnp add or fs mov add pop push stos popf jle rcl inc bound dec pop adc popf je inc in mov mov jge sub cltd out sub add pop fldcw lods dec cli lahf add ljmp or adc outsl orb leave test lret clc push ja sub and loope imul push push cld outsl cmp adc scas les shrl mov xor push mov neg sbb add mov xchg adc ljmp into push dec mov sub movsl jne push ret (bad) add popa (bad) jmp add jbe dec or imul and cmp mov std jnp pop fsts hlt inc sbb fadd sbb sysret sub mov shl movsl inc jmp jg pop ret and outsl pop fcmovne sbb neg dec fidiv sbb mov jbe pop (bad) fdivs pop dec dec pop mov sub es jns fstl jmp icebp xor jns das arpl (bad) sbb insb add add shrb add pop push jmp lea clc jmp pop daa pop inc sahf rcl loope jg dec fnstcw sbb scas lds add loopne mov pop pop popf daa pop push stos std push int3 push ljmp out jl sbb push and out stc push lods inc or adc jmp loope xchg add sub jecxz andl mov sub xchg jae add ret jp repnz sub out push or pop jmp insb fucomp push es cmp test or test jle nop cld loopne loope lods out les jecxz push mov int3 xchg out (bad) cmp xchg jg movsb adc mov add push and add fs dec pop lcall pop add pop loop sbb outsb add xchg cld imul sbb or lock (bad) sti push mov xor and add xlat out scas js popf sbb (bad) push jmp roll loope leave jne or add sub push shl lret and ror pop pop jno lea inc in sub add jne xlat xchg cli jbe fdivr inc pop lret inc push dec mov sub call lods imul pop mov imul scas loop pop or stc in imull out out outsl ljmp mov pop inc adc cmp sub ja jne dec cmpsl jg popa shlb add and add pop mov movsb mov daa mov imul adc test xor sub loop fs and stos cmp shll rcrb and out pop sub out xlat out jp dec outsl dec add fstpt inc jo mov nop gs push (bad) push push sbb xor cli cmp cpuid push mov mov sbb adc cld mov dec popa mov and shrl add fdivl sbb addr16 dec (bad) cmp mov rorl cwtl lea mov insb or push mov inc pop push dec inc push and push dec inc (bad) popl pop mov dec dec xor and dec lret jo movsl add pusha (bad) mov mov jg stos ljmp add pop (bad) mov sbb or movswl out pop cmc mov mov adc outsb jo loopne adc xchg adc imul push mov mov push fsubrp cmp and xchg mov scas imul and mov and pop ret inc mov add adc je test (bad) cmc shr xchg sub mov and mov cld mov xchg push and inc push ret cmp outsl add into lret aas stos mov test mov xorb adc popl push add mov or loopne mov push out add cmp sti inc test sub pop ret in inc insb and ret rcll xchg sbb add test ret outsl add daa and mov jne xchg xchg lret mov and add or out rolb nop or je sbb sub xor daa jmp and and ret cmc jmp jl jns push fsubr movsl push cmpsb cld and cmp call ret xchg mov mov add ja lcall clc popa cs pushf mov pop inc dec sub add subb ja xor add xchg push pusha mov sbb or rcrb outsl add mov xor test xor in dec inc and inc push ret add mov mov xchg lock test fbstp loope daa adc ds and add ficompl notl in sub sbb cltd dec adc xchg movsb int3 sbb mov mov pusha pop pop pushf outsl add xchg out nop inc mov push jmp mov pusha jns psllq in popa and inc xchg sbb adc sarl mov or in decb aam mov lock sub rcr mov and movsl aam fs cmp inc or cmp cmp or or out jg ret push test call push movsb fs cld out add data16 sbbb mov add loopne divl fsincos pop add cs pop out mov add adc cmp add (bad) xchg jp push dec xchg xor ss pop inc or (bad) push std mov or repz mov xor push push push add push mov push mov xchg jnp mov mov test add jl rolb dec mov or pop cld add pusha call push mov rcrl test adc pop mov adc cwtl test push loopne adc pop pop call rorl adc add mov addr16 sbb add jbe and into adc pop add sbb cmp sarb popa cs fisub mov and imul movsl dec add scas add lcall and cld (bad) push adc or jecxz es add push test adc push mov addr16 pop cs sub sbb call mov pop mov sub push ret lock movsl add ja mov fdivs add ret mov xor test and das fwait rorl adc icebp add add inc and xchg andl sarl clc inc add or fs shlb add adc sub jl dec loope in ret pusha popa or sbb xlat imul inc add out icebp add addr16 mov mov cmp xor das pop add stos in inc jns add out mov mov and or inc lea jge mov add jg popf dec add adc aas out out adc test leave dec dec jp repz les adc gs and and add jo mov xor mov and cli mov int sub xor adc sbb add jmp scas sbb sub sbb ss adc cmpsl mov inc movsb sub jb dec les adc mov or fstpt loop dec mov roll or jno (bad) or xor cmp sbb fmull in dec mov int push mov pop data16 mov pop nop out xchg or adc das ja jp and cmp cmp daa (bad) mov cmp lret jp fistpll or sar pop add sub lcall or xchg scas imul ds pop xor push and adc mov (bad) push add xor sub sub pusha stos jno aad push sub xor cli daa add and mov push push mov outsl shr or lcall sbb adcb xchg das sbb fadds and push sbb jns cmpsb pop dec pop hlt stos xchg mov movsb icebp (bad) (bad) push mov sarl outsb sub pop test jge in sub mov xor sbb push jl out mov push jmp cmp add idivb and subb jl leave lcall into jbe sbb xor ficoml imul add pop sub pop mov or sar jle imul mov rcrb mov dec popaw movsb test jb jg or adc stc xchg flds and pop or syscall ret leave mov push cmpsl gs inc mov (bad) pop add stc pop push add mov subb mov add xchg idivl add cltd lea adc xchg cmpsl subl (bad) or cmp jp pusha inc cmp push or add neg ljmp jmp and cs jno and mov sub sahf and pop mov add call adc xchg push add sarb xor pop hlt incl xlat lds pop dec inc movl dec dec fsubr add add pop mov cmpsl sbb jns daa pop out jecxz pop push push push mov dec add push jge (bad) adc pop mov sar ror rolb and mov fiadd in xchg loopne inc sub jg cmp aaa cmp mov aam shrb push dec outsl adc push pop dec or adc sub xchg inc loope cs adc in hlt aam repz mov ficom mov sub pop push cmp cmp pop add sbb iret das push push comiss repnz lock add pop jno cmp cmpsl mov dec mov pop fwait xor gs push pushf add not test mov movsb fist inc lahf gs jp or xor cmp sbbb jae xchg ret xchg jbe jbe inc (bad) addl pop outsl (bad) cwtl gs xor jmp cmp dec in mov dec dec adc mov sar or clc mov popf adcb andl jl pop mov and sar xlat inc jns (bad) push xchg cmpsl sbb xchg sub stos pop popa ret loopne testl xor add jg jmp call repz lods push xchg adc cwtl std sub daa fnstsw push jmp jmp loop push test data16 and pop xor mov pop lahf (bad) ljmp mov or fs (bad) pop mov push adc mov pop push faddl icebp cmp jle mov stc (bad) xchg ret pop stos repnz pop sub mov iret mov and aas test shll (bad) in mov fs sti sub loopne xchg push jmp sub mov nop lods (bad) jmp insl sub idivb and and mov add fs mov loope push movsl add xchg fdivr fmull sarl xchg les sub pop push pop pop mov add jle xor imul jmp add and and jmp jnp cli rclb xor mov pop mov push inc cmp push inc mov pop iret inc dec mov sub add xchg add lahf dec sub xlat cmp cmp gs push out js push hlt or pop inc sub cwtl push and lahf insb aas jmp add fs hlt xor pop out cli push mov cmp push cmpsl inc shll arpl das pop xor lret adc push add dec mov sbb cmp mov sub scas decb jb pop and sub mov clc push add sub dec mov roll push mov orl ret cmp mov xchg not icebp pusha adc out dec push add ret das mov stc add lock ljmp adc popf jg mov mov daa mov add sub add pop push push sbb out in cmpb sahf sub add insl les aad push mov decb sti mov in sub lds or or pop (bad) jge sbb repnz add xor mov fnstenv mov cmp out mov jmp jmp cwtl scas sub pusha mov sbb pusha pop pop add stos cltd shlb addr16 loop push pop mov dec xchg dec imul add dec cmp sub and push imul or std sbb xor ss mov pop sbb xor jnp (bad) add jg mov aaa and lret mov faddp sarb pop jle pop fwait adc popf push div adc sbb mov push pushf outsb test mov sti iret pop popf jge mov push loopne pop push dec inc clc enter inc xor push sub cmp leave and outsl rclb fstps dec adc xor dec or dec adc xchg xorb mov imul add cmc insl mov pop sti push add out adc cli pop std hlt push mov mov loopne jg (bad) cld flds mov mov mov neg pop lahf or xor pop add sub pop push xchg mov idivl mov mov mov and and dec mov sbbl movsb or inc jmp shr cmc jnp dec pop das add adc xor add clc xchg je mov mov stc sub ret sbb mov (bad) out cmc movl xchg inc and rcll push inc push pop shr mov les or rolb mov or push and add adc ss pop (bad) lds pop mov and push jb sub pop mov aad push mov push adc iret imul loope sahf sbb imul add enter jle,pt mov push add lock daa ja mov rclb es add out lcall dec rorl push sti adc sbb push pop dec or in push ja (bad) sbb xchg shrb mov xor lahf fs jmp cmpsl sub cmp push pop (bad) dec cmp dec adc int3 pop ljmp dec lret hlt cmp add push xor or push mov mov xchg rorl out jecxz inc (bad) mov les xor cmp xchg mov push neg popa loopne add stos (bad) push xchg jae dec roll insb add ret jb pop fs pop outsl dec out adcb and clc jle pop sbb (bad) icebp fildl sub push pop mov add add out insl fiadd xchg sbb jae dec add sub push add add (bad) in pop fisubr push mov xchg adc addr16 and add insl or sbb dec pop es insl and or cli pop push sbb or cmp cmpsl cmp addr16 std pusha inc imul fiadd pop cmp pop add sub int sub jge out pop stc add mov negl cmp or cwtl xor jns add sbb icebp sub pusha and xlat (bad) xor mov cmc test lahf gs (bad) add cmp lret fcoml adc aaa lds mov ret push dec cwtl inc pop repnz xchg push in cmp mov call mov shlb mov sub fst sar push add inc js out mov popa mov push cld add fidivl testb xchg xor fldt add add pushf nop and sub repz add sbb xor imul inc mov inc shlb or fsubs aam adc dec pop or dec adc in mov test add pop int push call jmp sbb xchg or out jae call jle imul (bad) push and imul add out xchg xchg xor cltd movsb xchg stos adc (bad) fistl hlt sub lock imul push loopne xor mov clc xlat insb lods jne inc mov shll jg fs ljmp push mov aaa cwtl or add push (bad) and repnz mov push std pop leave inc popa inc and in pop sarb mov dec int3 pop mov jns push adc mov aam sbb pushf push out mov je into pop adc in or repz mov rcr pop mov inc push adc cmp pusha add mov and loopne iret fs or dec mov mov or data16 adc adc fs rorl addl push repz mov subl enter add mov mov test pop cltd movsb xchg lock iret pop cmp mov mov cmpsl mov mov pop clc mov vxorps fcoms sub xor pop pop mov icebp pop into fs movsb enter not jb or fsubs mov and fs pop xor loope sbb dec sbb popa adc xchg dec push add and test and jg sbb xorb sub int3 aaa imul sub int clc repz and pop addb ret fs jo int3 mov xlat insl xchg jo push rorl xchg add arpl push sub or dec inc (bad) mov in add (bad) int3 xor push mov fs dec inc adc or stos jge push fld ja cmp add pop ret je clc xor nop addb xor fcomps add int add outsb dec in fbstp sahf and sub push rcrb add xchg xchg mov out nop or xor call push jmp cmpsb jo pop stos (bad) fs push (bad) dec add cld add movsl xchg or sbb pop jae js mov and int3 pop xor hlt lahf insb inc jl adc and rclb xor inc add push xchg sbb or ljmp jns aas cmpsl mov and and pop mov in mov repz mov dec shrl in mov inc xor shlb aaa popl cmp cmp mov ljmp popf bound lea dec test mov nop bnd sbb insb sub enter push cs addl fs or add pop mov repnz sub pop add xor jmp push aam add add jecxz shrb (bad) jmp out outsl hlt pop push adc ljmp js sub jle adc cs scas push (bad) adc pop hlt add js cltd mov icebp and or jno loopne push or push dec cmp add pop and popf cwtl push addb (bad) add pop xchg xor fdivs cld leave (bad) xor ret cmp in xchg mov pop movsl inc mov dec jecxz add inc cmp cmp mov xchg jo xor inc dec mov or xchg dec jae psubusw pop xchg pop aaa gs jmp jae dec fdiv mov ret pop pop or fwait push dec xchg dec jl repz int3 test lret dec ret stos mov add pop add mov xor sbb mov adc pop dec shll cwtl and dec add push add dec and mov imul in js pusha xchg inc daa push rcrb push add mov push pop jp insl fsubrl out jle and das xlat popa jo cmp clc nop clc adc pop dec lods test nop or in jae jge (bad) xor fwait adc mov add push xchg pop jmp mov adc test xor lahf sub sarl lcall dec int3 and and repnz jae add in rclb lahf add dec or lret xor cmc shr pop jmp dec mov cwtl dec xor repnz mov out es mov inc mov and in jae adc mov xchg repz cli rcll into (bad) enter cld fcoml cmp sub and test test cmpsl es bound pusha push sbb mov and pop add stos dec imul add ret lret mov or inc add shl adcb sbb mov push call movsl cmpl inc scas xlat add popa js mov ret dec mov push mov or fiadd in push fistl sub jle sbb rcr jo add or and fs imul xor add xchg dec sub icebp xor les push js outsb mov test insb xchg int add mov hlt add rorl pop push outsl add and cwtl dec and push jmp mov call icebp es push xor mov (bad) xor jo out pop dec sub push fwait push mov sub xor iret (bad) int3 mov adc (bad) out cmp in mov mov int3 dec and les push cld rolb mov pop dec push adc pop add dec iret aam loopne lock pop rclb sbb lahf push (bad) dec cld insl jg ficom inc fs inc fdiv int daa pop adc lods rcll dec jmp add outsl push outsb loop and movl mov outsl lods subl out mov xchg je pop push shld fs icebp push mov jae enter xlat push pop cwtl sbb push stos movsb sti mov and std adc js cs leave and repnz mov jnp xchg dec int3 pop xchg test dec adc (bad) (bad) icebp adc pusha or pop faddl mov movsb lock out daa pusha outsl subb fwait in or divb movsb enter fcoms push inc mov (bad) mov add std loope movb xchg inc dec add aad jnp iret addr16 jp adc popa inc add loope loope pusha pop ret add jb or push fnstsw ror pusha and mov mov xor lods and xor mov pop cmp insl or mov fs xchg dec mov dec fwait mov jle dec call mov jno xor add mov and fadds sub adc repnz inc or ja cmpsb mov dec (bad) fldl bound pop fdivs mov mov add in jp xchg ds jle add mov pop ljmp movsb xor add loope jnp sbb sbb pop lock sub pop mov pop cmc jbe (bad) xor dec repz sbb sub shll cmp sarb adc sarl cmp sub movsb mov sbb outsl mov jmp cltd xor push adc hlt call push cmpsb fldl test xor repnz outsb sub cmp (bad) or push inc sbb push adc in icebp sbb pop sbb in cmpsb push or ds push mov test dec arpl cmp sbb add cmpsl roll clc adc xor mov dec loopne daa shl imul adc xchg add mov mov loope idivl call (bad) lret movsb fwait scas adc (bad) jle and or out xchg in push jl add sahf jmp lock adc cmp mov push inc cwtl call loopne aad mov or jnp fwait cmp icebp mov sub cmpsl inc push loope push pop xor test js lods call js stos jl inc sbb push test push push pushf add adc add ss adcb add dec test call std pop in jmp and mov test pop (bad) movsl mov mov lock dec aas notb orb add sub lock mov movsb mov inc andb fistl and jb int3 add js adc mov insl lods jbe lods add cltd mov jo popa pop fwait and fnstsw pop xchg cli sbb sbb wrmsr mov ret ja jae mov imul addb push push out jg loop sbb cli int3 stos shlb jp paddd pusha fwait mov cwtl adc clc xor subl add add push repz sbb xor inc lock sub add push pushf mov pop nop mov mov test repnz dec nop jb jmp or or sbb lods loope call dec js shlb and pusha xor gs xor shl xchg andl pusha aaa aam jmp fwait cmpsl or (bad) lea adc cwtl add or adcl push rclb sti mov sbb pop push inc decl cld and arpl dec pop loopne sub add cmp stc andl ljmp add jo push in (bad) adc subb or fcompl or mov cmpsl into add fxam in sbbl xchg or jmp ficomp xchg scas bound sti cmp popf repz sub xor out or jo xor cltd pop es pop sub xor and std pop push lcall in test inc add mulb rcl sbb lock (bad) dec sahf out out or pop hlt or dec cld rcr pop adc popa add clc int add sti (bad) divl xchg push push sub push out mov fcmovnb faddl and out dec clc pop add cmp popa add push lock xor add pop xor dec inc orb imul int3 add add stc test jo add mov mov xchg add lcall sbb inc imul or outsl out loopne insb nop aam xchg leave mov iret add xchg fldt fadds jnp add addr16 fistpl adc aas add mov (bad) push and xor shrl imulb lcall mov lock add inc test lock xor mov mov cmp cmc je sbb pause jo rcrl mov inc push or lock pop xchg or in add insb pop or dec cltd cmp cmpb loop outsl div pop pop add ror cmc jl or test fxch or dec out loopne jnp das jbe add mov sbb adc mov shlb inc fnstenv rdtsc (bad) incl pop mov sbb cwtl cltd mov xor or mov lahf add in pop testl (bad) jo push push inc sbb xchg inc and push (bad) dec and jmp jmp mov es adc out adc ret xor shll cmp pop cmc pop and in test rolb xchg sub jb add shl shlb in stos push adcb cmpl daa cltd call ficomp sbb adc int jl adc dec int3 mov fcoms xchg clc mov inc pushf adc hlt push testl push add sbb inc enter cwtl adc adc mov repnz jae sub push cld (bad) and call je sti loop jbe arpl and movsl mov jmp dec mov pushf icebp cs lods add movsl inc test jae fldenv imul or test dec orb dec ret and shrl jo roll rclb jmp adc add cwtl push dec jecxz xor sbb or shll lret pushf and jmp cltd (bad) mov sbb adc ficomp adc popf push icebp jae lds push lahf add js test popa xor cmp dec mov mov add ret les out pusha sub cs adcb in mov or shrb pop push in adc push sbb cli add cmp fdivrl in cmp add fstl adc nop pop fisubl pop jle cltd fistpl (bad) mov push xor pop jg sbb or insl pusha repz clc pop std and int3 pop outsb add xchg and sbb jnp or jae cwtl clc fiaddl sbb and out into scas inc mov movsb and xor pop or aad sbb pop sub out add cld sub adc mov or bound mov dec sti add sbb movl movsb adc mov subb imul outsb xchg or jnp insl pop and or aam pushf xchg (bad) jg xor cli push repz jae and mov dec movsb jp sbb mov ret xchg clc mov dec xor push fs mov xor popa mov add sub mov aas add in xchg fidivrl add dec ds sbb push add cwtl test jmp mov hlt (bad) jmp sub out add enter clc shll inc in jl lret add in pop rcrl add testl xor push sub loop insb fs clc xchg push xor fadd add pop je shrb and sbb insl nop mov add lret call imul mov jae in xchg (bad) pop pop dec cmpsl sbb lds rorb and das dec sar mov lods pop sbb pop out sub jno mov or orb jns xor lahf insl cmp loope xor adc and (bad) jnp out mov sbb bound idiv int cmp sub les jae nop cwtl mov jecxz repz (bad) and xchg inc in lock dec aam and jne cltd sbb cmp jl jmp fiaddl dec jl jmp or jno bound push pop mov sbb sbbb or push add pop icebp push fmull popa sbb xor (bad) mov (bad) lods add sub pop dec add jp iret pop fs xchg add dec pop nop lods xchg sbb push cmc std in pop outsl adc repnz pop pusha dec in xchg js les imul adc (bad) icebp nop xor out iret jns andb push cmp icebp add lock and and dec push roll add (bad) jae xorl jbe lock adc pop inc fbstp (bad) cmpb js pop aaa sub addr16 jo dec lcall int pushf cwtl sub mov out js add fldcw add xchg (bad) push jno mov add mov (bad) (bad) in adc jecxz dec xorb pop add cmpsl pop push add lds int in or imul cwtl push add loop or xchg mov daa xchg repz in inc (bad) lock dec aam cld adc mov pop or pop sbb call fwait jbe pop out pop sbb inc std pop and imul (bad) pop and in out or enter gs mov cmpb pop fbld test cs pop les pop (bad) adc push xchg dec push movsl pop add fs mov or mov lahf add adc inc mov inc test push push loop enter push push imulb ret pop iret add dec mov push dec cmp add ret das mov lcall adc jo inc pop pop jo and into xchg sub or pop int3 out mov stos add add aas movsb jae jbe pusha pushf scas out subl or stos (bad) jno movsl add add mov or jo mov sub add cmp pop add icebp popa inc fs pop push mov pusha call callw xchg pop cmp add add popf lcall and jo icebp cmp mov stos (bad) jge or inc ja cmp inc imul mov std or in (bad) sbb faddl mov out mov rorl pop xchg in xchg (bad) inc (bad) mul aaa fwait rcr jg iret pop and sub add sub pop adc pop lock or ljmp or cmp enter andb je add push loopne loopw rclb in xchg pop add aaa mov test (bad) popa pop shlb jae xor outsb adc (bad) pushf jae repnz or and xor sub loopne add sbb mov dec pop sub add adc jno addr16 mov adc add lahf lcall movsb or cs mov add jae dec mov hlt mov mov ds or pop and push dec lcall pop jg and fldenv sbb dec adc shlb out xor aas insl movl inc push push shr aam cmp out insl addl jae inc xchg lock add iret jle les ss and loopne cli daa xchg fs pop lods adc inc mov fs xchg adc sub mov pop pop cmc adc mov jge adc dec dec outsl movsb and push loopne add dec mov loope sub sbb add out gs pop bound out adc xchg sub movsl rclb jbe cmp xchg adc push (bad) pop in mov loopew dec pop jae mov (bad) int3 mov cli or xor add mov or dec xchg xor xchg mov or adc dec push clc nop mov push icebp (bad) push or cmp pop das (bad) or pop andl cmc mov fmuls inc xchg cld repz pop fsubrl adc add pop pusha dec call xor xchg int3 int3 dec pop rorl in mov jp inc cmpsl in pop std leave imul ret popa inc fs xchg in ds pop pop aad xchg mov ds push mov enter loopne cmpsb icebp push and push or xchg fwait add loopne out mov movsb cld add xchg pop or cli insl add fistpl inc (bad) add les call adc das aas inc pop pop pop push lock movsb cmp mov push mov cld arpl icebp jnp loop pop or (bad) cld dec dec dec orb in pop loopne or inc repnz pop stos gs lock mov mov push add loopne mov daa cmpsl sub movsb repz je out mov push dec xchg nop (bad) gs push inc mov mov clc adc fs mov leave in push sub lock inc inc fcomps add xor lahf mov adc orl cltd push into and xchg adc push sbb out in gs out loop hlt cmp lock or fidiv nop push leave push dec rcrb xchg dec es jg add push std lcall add test sbb or xor mov sub (bad) stos repz sub mov inc jmp repnz mov loopne jbe add mov adc loopne loopne orb daa call inc pop or (bad) mov pushf or add sub aaa xchg jns popa nop jno in or cld xor dec fbstp push (bad) jmp sbb or stc add mov and add pop pcmpgtb addr16 push stos inc pop push stc nop loopne xor sbb push ja cmp pop stc popf pop aam inc dec fs lds mov or and fs mov mov push mov pop add sbb sarb mov repz and in outsl loop add cmpsb fninit fbld fiaddl or sbb inc jle xchg sbb cmp xorb push dec lock pop cmp add call call addr16 and lret add mov jmp jnp add out jbe mov icebp or (bad) jo out lahf or nop adc dec sub jno sbb jo mov sub push dec call jae mov bound sahf iret ret push test test add subl pop jbe pop pop sub sbb jae sub je mov sub jl repnz loopne dec push and je jecxz movsb xchg push jns rorl sub in lods dec xchg cld push xor test (bad) cltd jl bound add (bad) mov fs arpl mov mov in add bound gs les ret jecxz adc test jo dec inc nop lea adc adc xchg test and in mov int3 shlb mov xchg div lock js push push test int3 push out jae inc loopne jg add dec mov jne push jae fs data16 pop fwait cmp iret jmp (bad) call and dec cmc adcl rorb jle push (bad) roll (bad) fs je dec test push imul xchg and pop mov dec push pop popf fadds fcompl and fs and jo outsb adc hlt push xchg lods mov rcl add inc jae (bad) or jae dec sbb rclb mov jo in sbb add sahf stc jnp and shll mov outsl fldenv pop (bad) or nop lock mov xchg mov dec test jl andl sbb sub adc outsl add cwtl push dec in popf push mov mov popa cmp pop adc adc adc int3 jge sahf (bad) test push popa add loope dec mov hlt adc add sub lahf jne insb cmp mov subb dec cmpb repnz xchg into es and fsubl fldl xchg jae add or xor aas xchg push sbb push add and and mulb add add jle pop mov mov xor xor fs addr16 hlt and inc in push and cli push popf ljmp stos sbb jo or dec push jmp sbb pop icebp mov pop notl jno xor (bad) in pop adc xlat or sbb mov add mov jmp sub int3 and or xchg test sbb adc and or and sub nop mov std push jmp or addb jb int3 cmp aam nop push and jmp iret and out mov cltd dec sub dec in adc push sub xor pop lahf repz dec pop loopne add and xchg dec imul mov pop adcl xor jns div loope fwait pop dec add shrl xchg jmp push pushf mov fistpl mov jne sbb jae jmp pop sahf dec fisttpll cmp insl (bad) xor in andb int test jmp add in push pop loop dec push int inc shrl in aam leave js sbb push sbb or shrb xor loop mov iret push pop sbb mov mov js arpl mov xchg mov clc shr push (bad) fsubp or lret popf in inc lock imul sbb arpl mov mov push and test and lock pop pop or mov movsb in push adc inc dec push mov test test push sbb enter mov roll (bad) cli lret dec push add cld iret cltd inc jmp dec jnp test inc mov add or not popl push xchg rorb xorl subb cmp adcl add dec adc adc cmp ret inc call nop add testb je mov adc orl sbb (bad) lock xlat rol pop les xor aam jg add mov shll jecxz orb addb pusha push imull cwtl or popf aam and (bad) push add cltd lret add rorl push dec push (bad) ljmp push test repz sbb push push jge mull rcl call ss cmp popf aad in mov sub pusha fcom out ficoml xor ss pop (bad) shrb jb sbb push pop jmp or repnz daa cwtl lcall jle xor sbb les sub ja cli and lods sub pop (bad) loop push cmpsb movsb lock (bad) jno nop pop scas das sub lcall push and in mov hlt pop mov jne xchg jmp loopne cwtl lods xchg arpl push jnp sbb mov out xchg (bad) aam mov push outsl sub sbb pop jmp dec adc in add lret cwtl jle mov dec das sub shrl fs and mov inc nop sbb jae sub jne push hlt dec sub je mov add lret insb cmpsl xchg xor in mov mov xlat xor push jae sub sbb stos mov ficompl test mov mov cs xor test adcl jne inc cmp jmp mov movsb sbb js outsb mov adc pop scas sub jge jp loop and and leave adc cmc inc xor cmp (bad) ss add push ret enter cmp add pusha lock cmpsb dec fistpll enter addb xchg cwtl adc or clc xchg cmc add cltd dec outsl xor rcl jmp mov popf loopne dec and sarl das push adc mov into fcomps push lods sub add aaa add and xchg and sbb test mov cwtl icebp inc enter or lods push cmp add into out xlat pop int3 imul call dec fisubr push and (bad) or lock fchs push sub pushw icebp loop add int aad rolb and add jnp inc and test movsl out add add imul jecxz sbb mov jmp fistp rol push fmull enter add nop adc (bad) divl (bad) pop loop insl in movsb push (bad) cwtl ja and mov loope lcall pop aad lret add out insb jl sub lret cld mov ljmp sub cli mov insl pop cmp jle or push pop ljmp mov mov mov cmp shlb test aad add fdivr test xchg inc imulb hlt icebp xor test lds cmp xor aas fwait mov inc pop adc jno test je cmpsl hlt add test pusha ljmp leave pop pushf mov fwait push xchg or rorb mov addb rclb add addr16 mov jb cmp cltd push subb mov sub and movsb fldt push pop fnsave or rolb push (bad) lret test enter loopne inc cwtl stos inc pushf fwait cmp inc sbb lds fiadd push mov js sahf mov imul add add jns int3 icebp push add inc popa aam add pop sub jae call arpl add (bad) stc xor xchg inc or in cmp cld pop dec mov xor cwtl add adc fbld insb add inc xchg ss inc or pushf dec inc sbb sbb testb test dec sbb dec push shll sti sbb mov adc pop add xor mov add adc cmp dec cs es adcb or and addr16 roll xchg insl jb pop repz push test gs add push adc cmp add push fisub add mov loop pop pop cmp or dec mov mov mov out jns cs stc into enter mov rorb out clc mov aam add in addr16 sti shl mov lea jo pop loop inc push je ds inc push push aam xor sarb (bad) add xchg mov push sbb shlb push nop pop xchg cltd test jo sub popf aas lahf dec sub jne jnp insl dec pushf jns dec push mulb dec int3 mov jno,pn lods inc (bad) jo inc insl pop (bad) dec lahf (bad) mov dec inc mov ljmp push push push add loopne stc add adc sbb and inc push daa ret cs add test and in inc pop ficompl adc sarb jne test aam out add test add aam ss mov jp fnstcw fwait pop jo xchg inc cmp jmp add dec pop and fldl rcrl insl fiadd push shrb nop xchg cli add cmpl jb sbb and insl add aam leave xchg dec push inc adc pop in es mov test pop cwtl int3 and sub xor lods or test add xor xchg fcmovnu and jl jno mov adc cltd scas (bad) xor inc sub inc add fmull or adc sub add add adc mov and addb insb xchg cmp add test push adc add hlt aad mov loop pop test imul pushf fmull outsl sar fsubs fmul ljmp addb and scas cmpl out loop pusha pop mov add xlat add xchg or lods les and push or or sub xchg nop loopne cmp aam cmpb mov cwtl inc and fs add xchg sbb xchg int dec enter fldcw xchg es jmp push sbb add bound and jno hlt ljmp nop mov es inc or lret or gs push inc push cs inc mov lods mov mov inc test inc xchg repz mov (bad) fbstp shlb add mov dec or loop arpl imul out sahf cwtl dec addb pop push or loop sbb rcll inc lea rorl shr cmpsb inc dec out dec mov dec push inc add cltd (bad) repz icebp insb xchg push aam dec mov jo faddl ror push call or and adc dec inc jo pop xor out xor dec jl adc int3 pusha lock add jno movsl loop mov lods dec and (bad) lods adc je xor push push fsubrs movsb add out jb lret je mov pop fld add popf sub jbe mov movsb popa test cld cmp enter jl cwtl dec mov lods cmp push add inc xchg push fs mov jb and dec std or ret enter jp test add xchg test rolb js js and push popa add iret in sarb out loope xor xchg or xor (bad) and mov or cltd bound xchg pop fistpl inc imul jo or fs push loopne xchg lock jo pop loopne and push push add out shr xchg mov push cmp shll mov adc lods nop mov aam pop xchg pop add pop xchg push flds movsl rorb push add test in and push xchg push adc orl add pop add sbb ss mov rclb mov inc dec dec insl xor add js mull dec cmp inc mov rclb mov mov les jb jo movsb add lock add out insl stc mov ud2 int lods mov and test jno sub ja push sbb fistpl mov add inc insl repnz push dec rclb in adcl lds mov xchg mov add lock jmp (bad) jp jl xchg pusha add fdivrs (bad) iret dec adc push dec mov push adc and jge xchg lcall sub hlt pop or sub mov stos popa mov pop dec adc dec sub rcl inc xor xchg mov push lret or inc loopne test dec or (bad) jo subb js xor adc in mov dec pusha movl pinsrw mov adc add test out lret test cltd insl idiv add xchg mov popa sub cmp popf sub insb pop xchg push adc add popf sub inc xchg pusha test adc cmp testl pop xor push sbb pop add or inc leave push mov daa mov inc xorb cld ljmp or xor adc andb add dec rolb addr16 sahf aad (bad) int3 add lcall add jmp xor xchg xor xor data16 mov push loop and (bad) pop addl xlat xor inc jge push pop inc icebp je ja sbb jge in inc or and add fwait lods jnp adc int3 adc call or outsb je cmp popf fisttpll leave cmp (bad) dec shlb int3 gs outsb dec mov ror mov dec fldenv xor pushf insb inc loop mov sbb daa xchg or sahf les inc inc inc pushf and add cmp xor enter pop sub call cmp int test fs pop shlb (bad) dec int3 jl lds arpl cmp add mov in rol and (bad) add pop push add or popa push inc sub or push push cmp jno sbb loopne rorb add push ja adc pop mov sub cmp popa call dec (bad) sarl push add mov mov jo sbb jae sub mov add decb hlt test stos mov pusha cmp push pop loop lods dec mov shrl sbb add mov xchg (bad) lds xchg push sbb adc mov insb repz testb orb test lock and fs cmpsl pop pop sarb add jae (bad) fs xchg pop subl sti add push cmpsl jnp stos pop loopne mov mov cmpb fcoms bound mov and xor add jo xchg ja xor loop ljmp mov push orl je dec inc mov lds xor stc push add sti pop in jmp adc (bad) mov cmp adc mov or mov dec push loop adc ja (bad) push push xchg xor clc cmp aas and inc fsubs lcall push lock insb movsl rorb lds adc jo shlb sub lret dec imul adc and out push pusha mov popf movsb sbbb clc and sub cmpsl mov fs add ret cwtl out pop mulb sub int3 add sub bound clc pop inc cmc add popw addl dec push loope pop add mov add out xchg lea push cmpsb add movsb mov add shrl dec (bad) or bound or in ret enterw repnz jo dec sub cmp mov pusha (bad) lret push xchg lods mov or popf ja dec hlt cmp aas or les dec mov int3 fmul add data16 popf insl push aad out inc sbb test or lock adc insb aam out jns add std push cmc test popf sbb pop addb dec dec add sarl push data16 or add sahf sti xchg loopne xor inc mov xor dec adc lcall jmp sbb incb add cmp out jle ja (bad) xor xchg pop (bad) mov xchg popf shrb iret js push xor and cmp jmp mov and (bad) mov mov pop add dec fcomps lods cli repnz push cmp adc rcrl inc js lds and cmp sbb out je or adc add fdivrs add add and push add sbbb push fisttpll jge je adc cmp fadds pop scas dec sbb addl xchg mov pop cltd pop dec sbb jno jg push int3 cli cld inc xchg adc dec mov xor adc or loopne push fwait dec rorb sub dec sbb or and loop cmp lock dec cmc mov popf jno mov scas inc popa test cld shrl test sti ljmp or pusha test movaps loopne mov (bad) (bad) sbb sbb addr16 sub or pop xchg incl enter or xchg dec mov add inc push shl mov aad adc fcomi add mov add and pop mov or xor (bad) push movsb mov fmull mov (bad) or fstps mov out add jle and in add cli std inc cmp les movsl sub in xor hlt jae and mov add xchg dec pop xchg add push inc scas sar repnz xorb outsl sub xor ret es mov lahf ror pop and scas insl pusha movsb dec mov mov add ljmp sahf test leave add dec xor out xchg sbb int3 xor fldcw add xchg mov dec lret mov cmpsl loope dec insl in push out cmp movl icebp and and jo cld loop xor (bad) xor dec add sub pop fwait push jo mov or jmp je rcrl or pop mov (bad) lock or push les in and movsl mov pop sub test add inc clc rcrb xchg int3 add inc outsb sbb xchg mov shll scas inc cmc shrl (bad) xor mov xchg lcall add mov movsl dec lock and dec add adc add mov inc sbb fldcw inc inc add das adc cwtl call mov daa sarl imul test scas lahf rcrb das shrb pop ss inc faddl mov inc xchg adc inc dec pushf loop mov mov pop sbb scas inc pop jns jb add pop prefetcht0 insb fmull aas incb sbb movsb add ja lock insl in iret (bad) call add and mov cld fld1 clc test mov and cld jge add movsb mov xor gs cli ljmp push lcall repz add aad sbb mov cltd pop sub aam sbb aas or jmp pop or cmp repnz dec add scas inc test xor push hlt in mov insl cwtl xchg sbb push mov dec (bad) leave inc cld pushf enter mov (bad) jo push inc mov mov inc add ret and jp insl lods add mov (bad) add lds mov cld mov in lock cltd or sbb jne nop or inc jmp imul xchg add mull (bad) jne fstl dec insb mov sbb lock adc jno loopne cmp mov nop xorl dec pop icebp lret cs fs ss fcmovb sub sbb add shll add inc xchg repz inc mov add mov insl add mov cwtl stc std in clc mov add mov xor lock xor or adc loop and negb jo mov nop or inc xchg cmc inc cmc cmp lea mov pop (bad) and pushf dec shl xchg jno cmp inc fmuls adc mov add cli xor push push cmc lods mov jne add (bad) push cmp cli loop test jns sub fcompl (bad) orl add mov sub and bound scas cwtl and xchg dec leave imul les xor jl mov inc imul push push mov aaa jecxz adc dec and (bad) push jnp insb sbb movsl or dec jl sbb inc les push or adc stos divb or ja mov aam test into cmp mov fld cld loope pop add lahf xchg into jno movsl add call out xchg and sti mov int3 push mov rcrb pop adc movsl inc mov js add mov pusha aaa test outsb xor cltd test inc insb jb movsb dec inc test adc and add mov push arpl aam popa dec mov or insl inc sbb popf lcall les icebp mov rcll rcll adc dec subb push inc pop sub xorb push cmp adc loop add cmp pop mov data16 mov lret mov test call enter add xor push lahf aam sbb dec scas inc xchg push mov js xchg inc mov add jae dec icebp lods inc cmp and test fnstenv inc mov je dec cmpsl test xchg jbe xchg mov mov adc enter dec fmuls (bad) (bad) mov (bad) adc push imul sub push add adc jne add mov int3 sub jb mov js call cmp xor dec imul stos pop pushf cmc fistl dec adc rcrb ljmp lahf or mov arpl mov and dec je hlt jne dec insl test push test scas enter mov dec arpl sbb int inc rcrb addr16 popf inc push add subl sahf dec or or xor cmp adc shlb aam and add lock cwtl add ss pop xchg rclb loopne sub sub sbb repnz pop mov loop push (bad) nop (bad) (bad) scas xor push add aad xchg outsl jne add mov (bad) in or mov cltd pop and xor pop addr16 inc cmp add shrb inc sbb cmp aas clc jg pushf pop outsb jne cmp fmuls inc and cmp popf add data16 mov (bad) inc sub sbb inc movsl mov icebp jle cltd daa jmp pop and (bad) xor mov add es inc sti mov jns (bad) cld mov nop call popf pop dec adc fnclex scas insb inc aam sub xor xchg sub and enter inc test add inc pop jns rorb leave inc movsb loop and push cmp mov inc inc ficoml push cmpb dec add lock sbb adc sbb mov xorb mov in adc das sarb das sub inc push fsubrs insb enter es inc jl aad pop sbb mov dec rolb fmuls popf pushf (bad) and pusha jns (bad) push in test mov xor ljmp and (bad) push addr16 stc add mov and push mov adc dec add xchg icebp dec addr16 (bad) rcrl std leave mov cwtl cmp add add xor dec stos je es imul add and add nop jle inc cmp pop mov orb pop push xchg data16 addl dec test mov lret leave dec fwait add into loop orb test ljmp addr16 shrb inc sahf xor aas roll test fwait sahf or xchg pushf xchg mov xor sarb or stc add jnp test and cmp hlt and fiadd es mov (bad) clc sub and xchg int nop test les push adc xor mov ja loopne fdivrl cmp dec dec and test adc or pop icebp sub pop add or mov ljmp ret jecxz movsb pop xor out loopne ds imul in enter adc out loope cwtl sub add inc dec outsb movb dec int3 adc out and jge mov push inc int sbb add out xchg hlt loope fcomps out sti ret pop lret mov insb mov xchg xor push clc cli cmp repz cmc pop dec add (bad) ljmp daa add adcw sub add nop cmp fcomps lods daa insl test cmp cmc nop test and mov scas dec stc mov inc cmpsl inc cltd movsb push in insb dec add sbb insl push aad adc mull mov sub and bound jne mov cli push pop xor mov les icebp inc sbb or dec and loop sbb mov xor test sarb outsl ret or fucomip cwtl call mov lds nop outsl sub mov sub fadds ja cmp add jo cmc insl repz psubb jle addr16 add je decl dec in adc or vcmpps sub push jmp mov out stos popf sbb push mov subl push and fwait or lods mov add jmp fisttpl cmp mov ret and hlt cmp sbb add (bad) enter xchg test jmp das aad and xabort add mov lods inc call out mov (bad) loope dec and add repz fdivs nop jb push mov paddusb pop mov add dec push loopne mov mov add lahf inc xor pop jo sub out sbb add jne push mov pop inc out popl inc add repnz dec cmc jmp das xchg and add dec sbb popa fidivl push insb mov jno push push pop and in clc mov test hlt mov mov popf sti cs xchg mov xchg stos scas movsb popa add das add mov and loop in std cmp or sbb stos out sbb mov pusha aas pushf dec pop pop inc jae call xchg push stos (bad) push ret insb movsb loopne add adc sub sub insl and jb add add lret push repnz ja mov test inc (bad) iret pop sub xor pushf fs pop scas dec inc in loop lret test inc shlb mov pusha in push jg xchg mov adcb and ljmp cld push mov pusha nop lock jo xchg cli out ja dec std test pop add jne pushf push fadd sub sbb mov mov and call addr16 fwait push mov jo sbb loop movswl out (bad) cld mov pop adc pop and mov jo mov mov dec add fs pop sbb ljmp rep dec lea and or popf dec test dec int3 das sbb mov bound insl popa das test add jb sbb push cmpb inc stos jg jbe fiaddl aas fnsave pop out addl (bad) fnstcw sbb fwait or repnz and test mov ret push xor mov f2xm1 push add cld adc dec adc in ja lock test cli movsb add cmovb adc imul xchg adc sub xchg shr add add inc mov (bad) xchg fs mov int3 adc cmp push fiaddl rolb dec inc shlb inc or mov ljmp add das add push rcrb repnz outsb mov pop jl adc dec or jge adc mov cmp sbb dec dec leave mov idivb jae add insl cld (bad) mov and shl mov sbb jno inc xchg inc lret ficomp stos (bad) mov loop daa dec sbb fs mov mov mov and (bad) mov or iret add dec lret mov mov loope jns jg movsl xchg mov adc popf push xor icebp enter mov jno and push adc add xlat mov call leave (bad) ffree jmp cmp add jno mov insl and pop jp in adc add dec adc rolb call and cs int3 jbe (bad) add test mov sbb cli add push add wbinvd dec add sbb test lods sarl push int3 rorl inc mov imul js cmp mov scas dec repnz aam push add repz cmc push icebp cmp cmp add stos divb adc rcll cmp mov ljmp rclb bound adc (bad) out arpl xlat pop mov js mov cmpsb test imul fisttp icebp sub cs pop inc test (bad) hlt test add mov movb or test add call cmp shlb jmp add je ds movsb cmc aam inc test dec mov roll roll mov xor add imul add dec loop xor pop mov sub rolb adc mov pushl imulb inc cld addr16 push xor add mov (bad) ljmp mov xor mov std cwtl sub fild push push stos es dec inc imul cmp xchg jp (bad) pusha aas or fldt test mov stos xor inc (bad) ss dec fs mov push aad jge es stc (bad) test lcall pop inc fldenv sub mov pop inc xorl lahf add xchg test sub pop data16 sub jo add or xchg jg int add mov sarl inc add pop arpl in sub test movsb or inc test rclb loop insb stc test mov pushf insb lods jecxz dec iret jb ljmp adc push inc sbbb sbb pop inc and push les push int3 cli ja (bad) push push xlat or or out ja,pt sbb xchg xor dec push mov roll inc mov cmp push jecxz imul or fwait push mov jae or or and fiadd jge xchg lret lcall fild push mov (bad) loopne repz push insl cmpsb mov dec or and push sarl jp add ret push test repz add lods jle cltd (bad) test xor jno pop add fucomip xchg and mov adc aam or ja add call inc add pusha shrb cmc test js add jge adc sub sub iret and add clc jno sbb lret mov mov into std aam adc adc pushf lret adc xchg cmp fnstcw sbb add and adc and je add push mov mov adc lcall mov fsubrl stc sbb mov xlat sti xchg push xchg loopne movsl outsb inc mov lods popa xchg inc cld leave sbb inc mov sub mov sub call shl push sbb mov aam or or in sbb cmp test mov call scas cmp addr16 enter icebp pop adc sub les adc or xchg add fs sub pusha add inc insl push out call dec aam mov inc mul cwtl in pusha scas aad add lods dec orb pop cwtl (bad) (bad) ljmp sar mov and mov add roll fsub inc pusha (bad) push xchg adc push mov inc cld add xchg pop call dec mov cmp and movsb add aas sub xchg xlat cmpsb cltd add (bad) jg inc xchg add push rol stos or adcb out jg mov aad pusha add pushf mulb adc inc dec dec roll jae scas aas mov aam adc mov clc inc mov adc jno aam mov loop pushf js cld clc mov scas dec hlt (bad) pop inc popf dec mov cmp je aas pop ljmp shlb and mov pop sub fsubrl lds adcl mov xor sub aam jno mov repnz xor test mov hlt jne or rolb inc rolb xchg mov add dec int mov lcall add stc or js test mov add jnp inc out push (bad) or les (bad) mov (bad) and sbb into out push fistpl sbb pop dec cmpsb mov adc mov loopne (bad) popf test mov inc test lock dec ljmp add loope addl cld int3 cmp inc adc out popf inc mov imul in or addr16 cmp mov push fistp cwtl lods xchg mov sbbl nop cld pop nop nop call xchg scas loop xchg add inc jp add adc das fsubrl hlt cmpsl mov pusha dec add cmp loope in dec cwtl mov pusha xchg mov clc add idiv jbe lret test or lds adc insl mov inc mov pop sbbl dec push adc movsb add mov in sbbb jne or pop and mull dec mov enter sub and movsl sti std loop pop dec ror cmpsb mov into in rorb sub rolb sbb pop orb ljmp add (bad) cmc std in cmp inc add sbb clc jne in or dec insl xchg clc or test xchg xchg imul fidivrl outsb call jno std mov sbb mov xor sbb cmpsl adc inc test fwait mov sub fld aaa (bad) call push and leave adc add or inc ret inc and cmp inc ror pop (bad) pop into mov call and (bad) pop push lahf andl jno jns sbb add mov inc pushf push xlat xchg cmp dec lock sbb scas cmp dec (bad) dec push pushf add dec cltd lods mov out or or out cmp inc pop xor lahf movsb dec je test lret enter mov push xchg add and jecxz inc adc dec add push add cmc stc cmp movsb loope hlt push out (bad) dec test pop xchg imul sub mov in pop push test addl cmpsb test inc xlat cwtl mov call cmpsl mov push cmp aad test dec shll loope dec lock or jns or (bad) mov aad mov xor leave adc daa xor je jmp cmp pop pusha inc sbb js pop dec dec cld (bad) shufps sbb jns fstps adc test (bad) push and sub insb incb test cld lock adc pop popf repz in aas add jmp cmc sarb mov inc lret rcrb sub pop pop add mov into insb push sbb jns lea pop mov inc add (bad) mov inc nop mov pop daa sahf rol add push mov addb outsl cmpsb sbbl adc fnop push add out cld imul or jo pop push and notl mov sti andb das int3 pushf adc mov and cli add les loop push es push jo inc push lahf push xchg jne and test clc dec sub out push loop xor js push xchg add jns in inc push jg dec add push and and add add jmp jo jbe aam dec (bad) dec sbb iret mov clc jmp (bad) sbb xor stos mov or fidiv pushf rolb push push leave sub les gs stc xor and add push cld cwtl ja (bad) or test jle mov push adc aam mov xchg cltd test add adc in pop mov aam push stc sub addr16 enter fidivl int push aam das and roll add mov jno test jno push into add jbe fadds cld pushf or daa mov pop add popa pop out js mov inc insb icebp imul rcll imul cld mov iret sbb add rolb rorb jmp dec (bad) prefetchw xchg adcl or mov dec sub les (bad) jo mov pop test mov insb icebp lret test xor notb rcr dec cld insb inc or inc insl fwait lret lret dec add dec aas push imul mov imul loopne test adc inc scas push push das jb sbb mov and loop mov add call mov jmp jne dec pop mov int3 mov jnp inc fwait int3 in fistl add sbb add ret or aaa xchg fs mov ret xlat add and jb insb nop mov push test and inc xchg popf and aad test pop jmp cltd pushf push sbb repnz cmp lahf jne mov int3 sub sbb iret push dec pop out loop rcll inc rcl std faddl gs xchg fild std xor push jge out mov mul adc xor inc ret or sub or incl jp sub xor fildll nop sahf or or fstl sbb push xchg insl adc test mov and rolb insb pop test inc inc mov xchg mov mov pop (bad) mov xor les outsl add dec orl enter xor clc dec sbb (bad) lds xorb test nop je ret popa add inc rorb pop jae sub lock xchg scas pushf aaa add cmpsb mov rolb jns out mov jnp add add (bad) ss and pusha lcall lods int jge mov repnz call cmp into sub fsts mov cwtl add adc add in mov xor fmul mov hlt inc jmp cmc jne xor push cmp mov cwtl int and shlb test mov push dec clc je inc cld cmp int3 pop test pop jne cs lock lcall pop xchg sahf jns add or shr mov daa nop shlb icebp sbb fs or jns add pusha js and pop jo and lahf mov xor xchg fs aam (bad) sub fs add xchg fadds je jae mov fwait addr16 je dec insl loopne mov insb mov cwtl outsb xor inc pusha adc or (bad) xchg pop sub add enter das and jo dec mov cmp divb popa and sbb fist leave mov adc xchg repz mov push push pop test cmp popf cli inc stos inc je jecxz dec pop dec js repnz push stc fsubrl and jnp or lods orb mov push adc lock lock and sub mov mov mov pop xchg pop cmp xor test sub test call test nop call pop inc xor mov leave mov mov fistpl push or (bad) repz into pop leave movsb sub and lock adc clc add mov shlb add push xchg loope xchg dec add icebp sbbb add cmpl push add sbb sbb (bad) xor jl push jo loop lock inc push push xor pop inc movsb sub mov and add movb loope jns push cmc fsubrl lock or adc add mov lea in add inc sub add push pop stos loopne dec mov pop dec add insl aad cmp add dec lret push outsb fdivl mov pop imul idivl jg call xchg jmp adc sahf std inc shr mov add ljmp cmp test adc loop outsb sar sbb sub xor pop dec fisubr add or loop stos mov jb in ljmp insl pop int3 cld call cmpsl (bad) mov sbb add lahf imul jp inc mov iret add pop mov inc add jl (bad) cmpsb dec mov push aas mov pusha sub popa popf sub cmp mov add mov fisttp daa push adc and fcmove cmp inc dec (bad) fwait cs and iret fstl or pop or repnz jl scas inc push mov loop mov xor pop ret insb add xor call push sbb mov (bad) xchg mov and insb push sub push lret xchg add imul xor push addr16 lea add ja push pusha pop mov cld in test test hlt subb adc sbb and aad and add sbb icebp xor mov mov or push mov jle push mul dec (bad) and mov dec nop sbb call pop add adc jo xor add int3 xchg pop inc or pop jp add xor sub mov js je jl js js decl push (bad) mov adc xor insl scas add inc push fsubrs pop mov cmp adc push add xchg mov pop sbb scas in pop ret loopne cltd sbb test (bad) je add xor mov mov testl sub xchg cli jo jbe pusha jb punpckldq imul add mov mov fidiv add cmp test xor adc adc loop loope xor pop aaa in outsb inc or jmp call hlt add push rcrb pop push leave mov jge dec jae mov loopne insl add push out adc ret mov mov xor xor cmpsl icebp dec loopne ljmp inc pushf push mov movsb cmp inc roll enter xorl fist push pop mov fsubr cmp mov addr16 pusha rcrl cmp xchg push sahf pop lock push imul clc mov sbb flds test scas cwtl adc or je mov pusha mov insb mov frstor and or add call ret push cmp stc and (bad) pusha mov in lret mov (bad) xor mov adcb mov mov xlat inc jmp (bad) adc lret pushf inc pop outsb inc inc xchg fsubr cli jp add cld dec rolb xor stc mov inc mov mov scas movsb mov out mov mov mov jl pop push add lods popa (bad) cmpsl or pop sbb adc xor sbb jl dec mov addr16 mov je jno test test mov rorb movsb test icebp dec inc mov in mov or inc lods mov cltd je (bad) mov adc or das cwtl test add jae popl pusha scas xor lea out stos fisttp mov bound jo outsb jmp stc adcb pop (bad) lods add and pop mov imul or xor cmpsl js sbb adcl xchg add (bad) add push ja (bad) icebp (bad) int sub test cmp fcompl push mov or inc iret imul test loop incb inc pop push jmp inc pushf pusha dec push add push push imul and or outsl loope xorb (bad) sahf add mov jno shlb fcomp bound leave fistpl mov add and sub int insl xchg mov inc test or mov lea sub je dec push pop repz lock nop mov jbe cmp sub sbb ret adc push pop mov add in cld and divl jecxz mov dec mov add rorl adc in or loopne mov inc fadds cld jg popl xor test loopne push movsl pop int dec inc mov pop arpl fcoml mov loope or fild cmp pusha mov lods popl xchg push out js add add add movsl or cli sti xor cmp sbb add fidivrl rorl dec or xor push pusha sbb sub cmp mov xor mov shl cmp lret mov insb sub test sub cmc or mov cwtl subl cmp andl cltd or mov xchg shrb adc repz mov xor jge xchg sbb mov aas lea out cmp gs add push pushf out insl arpl add mov jo push add push mov aad mov (bad) mov jl out ret adc dec jne xor push and pushf ds pop repnz mov add mov inc xchg scas (bad) fcmovbe jns adc add mov cwtl inc scas sbb xorl jg aad dec pop add mov add ftst lcall test add mov rcrb push or movsb insl add sub jno sub testb inc mov sahf fsubs or andl mov nop xchg xor scas or dec mov adc or add popf sub or push add aas cmpsl mov push pop and adc xchg jl pusha (bad) jne je ds fnstenv and fistpll xor scas push add xchg dec sarl lcall fisubrl (bad) xorl add add jns (bad) adc sarl mov int3 in cmp (bad) push fwait cmpsb and xor out inc fiadd mov or or mov sub (bad) sbb add jle daa das in stc add jae xchg mov inc fnstsw adc mov lret fwait inc out mov dec jp test add das pop push add or mov loope mov cwtl inc inc or arpl pop fiaddl rclb push std rolb push adc inc mov mov test add int rorl mov pushf pushl xchg (bad) es inc cmp test stos cltd inc mov test cmp loopne sbb sub out pop mov and add pop push push adc fsubrs loope add mov jb addb loop cmp add dec dec cld data16 mov js jge and xchg or or add cmp lea addr16 xor fisttpl test pushf add push and sub mov inc mov push pop cmp les push and jmp fcomps add jnp xlat push adc push pop inc pop insb dec inc add mov insb and inc push mov enter (bad) inc cmpl dec sbb iret js (bad) jb sub cmp inc (bad) sti mov xor leave sub es xor sahf in mov bound jo mov add test lods leave inc cmp mov ljmp sub add mov rorb gs cltd les adc and adc orl adc loopne ret cltd nop pop or nop nop mov test jl and push and sti daa shr scas xorb xor cmc pop add clc hlt loop jo in adc mov test aaa mov in xor add inc cltd add add inc test xor push je jbe iret in fmuls outsb or insb add dec sub sti xor ds mov push xchg rep rclb es xchg test movsb mov sbb test mov adc fadds rcrb add and add push or adc adc mov jle jge sub push cmp arpl dec mov les sbb add cwtl or adc loope insb repz push lcall adcb or mov lcall cmp mov incl sbb rcrb pop pop mov pop add arpl inc repnz and cmp cs in ljmp insb inc popl test add xor and int3 or push loop xorl and imul push mov addr16 sub (bad) das push and add (bad) lds pushf inc mov mov mov add push add sub inc or ja jecxz push mov dec push mov rcrb movsb sti addr16 cmc jo sbb xchg jno jecxz cmp data16 push dec mov clc mov mov sbb cmp inc push std inc sbbb cmp add (bad) stc pop loop and cltd std ss jle addb push add jmp aas ret pop data16 mov sbb cmp push mov dec mov subl daa cmp adc das insb lea imulb adc loope push or push adc adc and add ret jo ds data16 add cwtl in bound sub data16 and inc mov dec (bad) and sbb add cmc adc xchg mov cmc movsb inc imul in and jne mov (bad) incb and rorb (bad) pusha imul mov in nop add and cwtl add es icebp pop nop xchg fmull cltd jae (bad) icebp mov pop lret push dec cld sub mov lea icebp and jp clc loop negb and mov push xor xor adc out (bad) push dec jp add out cmp fsubl push or push add push loope inc add pusha inc ljmp iret in add mov stos jbe and jecxz xor add out inc xlat and inc mov in add call js mov xchg outsl addr16 pop push es add sti inc dec bt shrl cmpl jl mov icebp push (bad) in int3 dec clc les in add cvtps2pi fcmovnb mov fwait dec mov add fidivrl addb mov jecxz and adc pop cwtl rolb rcr and sbb and add xlat nop daa in popl pushf mov lea jmp push ret pop aam js adc ljmp mov outsl (bad) iret push fnstenv pop imul sbb sub ds in call in (bad) enter movsb repz arpl xor arpl repnz enter imul or or pop je les adcb adc sbb pop pusha int3 xchg leave ds jbe push test add (bad) push xor shr inc fisub add sti mov inc loope loopne push jo mov xchg xor mov adc cmp cmpsl jecxz dec repz and pusha dec sti adc sub push dec mov xchg arpl sub sbb push or jbe or and cli call in inc and pop push adc pop xchg push cmpsl int3 rcrl add mov sti fisttpl jo ret jnp divl inc mov dec (bad) in and or icebp push icebp mov inc mov aas fidivrl cmp mov pop xlat imul jnp repnz mov adc jno xchg sub add mov xor rolb mov leave push sub adc and mov add push setb pop pop add pop cmp ljmp pop mov adc enter dec xchg add in add hlt pop mov loopne inc fimull dec mov dec iret test andl scas leave inc mov dec mov jnp sbb inc pop enter or shrb push push pop push pop (bad) repz mov adc and pop inc pushf test jo push mov arpl add cli fcomip scas call ret add adc xor and enter or pop pop ret xchg sbb pop out xchg or adc jne inc (bad) and add (bad) fsubrs enter cmp push dec insl add jno js lds mov fdivr test push (bad) push testb pop fildll (bad) ljmp cmp adcb jo movsb sbb out push mov pop jns adc sti movsl xchg and loop ds xorl sahf add pop out loop ret xor aaa push nop arpl or (bad) call adc pushf orb jno icebp jmp sub enter je jno mov add repz pop dec (bad) jl cs shrb add add pop add cmp fcomps pop (bad) int inc negb daa pop xor int3 sbb int3 or add add cmp dec clc popl bound clc mov fs cmp sbb pop sbb inc shlb push addb insl push inc and sub pop adc mov xor imul rcrb (bad) xor and mov cs mov lcall or xchg fmuls insb mov mov cli movsb add fsubp stc xor add outsb inc mov cmp hlt add lock (bad) xchg lds std outsl push add add ret push test int3 add xchg sub push or dec and sbb mov xchg out popa inc or mov jns cli pop (bad) movsb test clc into mov pusha movsl inc lods jp js fbld fcoms std shlb sbbl or push js mov repz xor loopne test mov popa xchg nop mov inc jbe,pt mov loopne adc add mov sub xchg imul adc stc mov lcall add cwtl inc inc test xchg sub adcb outsl shrl xchg sub (bad) decb sub inc jae xor (bad) fisttp lret ret mov cmpb ret clc cwtl add pop gs scas push sbb pop fcompl pop jge int test adc pusha push lcall mov pop adc adc enter xor adc add scas cmp mov pop adc out jl clc (bad) sti adc xor push cmc hlt ret enter xchg xor mov lret sub cwtl inc outsb push sbb mov mov stos mov jbe or pop mov pop ret scas sub stc cld mov ja cmpsb or inc into lahf dec shrb arpl movsb pop add rorb mulb xor leave or inc sub inc and popf subl mov cli in dec mov and and xchg mov bound loop mov stc sub sbb xor pop mov push ret dec mov jnp dec push cmp stos pinsrw nop rorl adc inc (bad) cmp pop push sub pop jmp add leave adc movsl push addr16 sbb sub mov sahf or in push sub pop xchg popa and aaa add jns add dec fwait pop cs sti in (bad) cmp add loopne add inc mov xchg das out mov and pop mov hlt and loop enter les dec mov hlt shrl push push pusha cmpsb and pusha (bad) mov jne rcrl test adc fiaddl out dec lret pop xchg adc add (bad) jae lret and sub aas sbb subl xor ror fwait popa xor into outsl nop mov in and arpl mov pop add sub xor jp jo addl mov notl arpl mov sub aad es int3 push dec in inc pusha add pop lahf push jp xchg jnp mov sbb xor adc nop aas mov lock and pop in rclb movb add ljmp jo sbb gs push call jmp mov cli inc rol jg and pusha adc sub ss daa nop xorb push add dec es aaa mov dec add mov push insb xor jns and push movsl repz push adc cmp cmpsb xchg add cmp mov pop jecxz sub ficoml test add scas repz push dec stos lret lock fwait or aas and sub add icebp enter dec sub jns or (bad) leave adc pop out mov fcomps or xchg xchg pop xor outsl clc repz loopne divb jl xchg enter je stc xchg sarb or nopl and mov cmp cmp sub and int3 ret in orb pusha jmp ret fmuls and sub sbb xchg cld mov lahf inc sub sub test aam test cli cmp xchg clc jns pop jo icebp mov inc lods (bad) xor sbb es fwait in test inc movsb and xor ror or negb xor cwtl xchg in add (bad) imul outsl add in jg aaa add add inc (bad) arpl hlt imul (bad) fadd cmpb and jae add sub popa sahf mov or cwtl or popf xchg add and add lret jb in bound sub xchg push (bad) arpl adc (bad) mov inc dec cld cltd mov and loope (bad) or and mov adc ja lods or dec sbb adc lock add fidivr ret lahf xchg xor jb aas roll inc sbb push add sbb lcall sbb sbb loop push push cmpb je leave mov mov ret ficom jl jno sub dec mov outsl pusha subl push cmpsb push or loopne cmpsl clc inc xor fsub add mov lahf rcrl fistpl pop sbb add aam mov xchg daa in mov ds rorb push add sub inc in (bad) mov jb lcall cmp xor jmp or mov mov pop push mov mov inc mov cmpsl and out leave jle jb sbb xor add dec scas or clc xchg adc fmuls add cwtl pop jl and in pop mov dec sbb pusha imul sar inc add test and shll inc and xchg adc mov or pop inc pop xorb mov ss dec and mov and xchg (bad) cmpsb leave (bad) cmp and or imul pop or popa lret nop add mov int pop push lret inc mov sbb js fdiv mov xor shrb hlt cmp sar add ljmp cmp incl mov test jae pop mov adc add mov inc jmp movsl loopne sbb adc lret cmp xchg cwtl lock das push adc pusha cmp ds bound cmp rcll cwtl lea cli and pop sbb sbb mov rorl adc jmp dec dec inc xor mov dec enter or push jno pop shll add loop pop push mov cmp mov or stos adc popa pusha xor cwtl adc mov or lods pop int xlat sbb push pusha (bad) mov mov sub ss fmull enter add add ja in add rolb lock mov sarb add mov ja je imul ret fsubrs rcl es (bad) dec orl xor aad push mov test mov (bad) divb push (bad) xlat faddl xchg add add scas ja pusha add cmpl into aam push pusha add xor mov ret or mov mov cmpsb test jmp js sahf pop ja movsl cmpsb arpl push push lods jmp test leave xor mov pop and adc loop add nop lea add pop sbb outsb jne lahf sub or or cld sub ja rorb (bad) sbb mov cmp sarb clc (bad) add cmp js add add mov nop inc mov cmp inc fstl jle jb fildl jmp subl mov mov test jg sahf loopne stos stos (bad) mov mov xchg ja pushf or push js sub gs shll dec or ljmp (bad) xor add cmpl add lea add (bad) stos adcl mov movsb mov adc or pop and push (bad) scas dec jge add inc loop mov or and jl cmpsb stc mov rclb dec or dec adc push sbb sub sbb or pop dec or in add rcrl add ja out add dec ficomp cwtl inc cmp test push lds aad pop mov pushf mov push mov sbb cmp nop and xchg out and adc scas inc or mov pop mov sbb mov rol dec add xor mov pop sbb ret mov xchg jg orl mov bound jecxz xor inc mov pusha rolb cltd in mov add stos cwtl or push mov and (bad) xor mov into push add pop xor xchg sbbb movsb xchg test push or je fmul mov jae lods (bad) lods out xchg adc add xchg or mov dec clc es pop outsl xchg adc je and fwait nop or xor movsb pushf pop mov js subl test xchg fimul stos mov xlat (bad) test xor cmp inc data16 (bad) and cmp movsb pusha pop (bad) or es aam or or dec pusha dec ds movsb adc pop shlb (bad) xor popa fdivs push push mov and sbb movsl mov sar pop inc repnz data16 xor mov arpl dec aad push mov xor mov pusha inc (bad) fisttpll cld pop inc push add mov mov add icebp (bad) xor sbb popa pusha and es add or nop push jp lods sbb cmp jbe add jle push pop adcl push or nop or mov loop push mov loope,pn or xor push pop jg inc test xor out je sub ss mov add fcmove sub and (bad) stos push mov or adcl fs es inc fs aad enter adc sub lock push or outsb pop js adc xlat cmp nop inc test xchg push aaa shrl mov orl test push (bad) jmp lds movsb push push test push arpl cmp imul cld add ret lds jo test es rclb sub mov outsl shlb pop mov dec fcoml icebp jge enter add push mov or push add sbbl inc mov add fisubrl dec add repnz ret push mov imull insb mov sbb add add stos cmpsl ret enter push pop (bad) xlat push out xchg enter outsb rcr shl add sub icebp sbb add push mov sub add nop xchg mov sub add and testb pop sbb ja lea ds and push leave xor dec fmull push add and jge lods push fs xor add inc je js dec xchg pop xchg movsb pop xorb sbb and ret insb inc movsl and popl sub daa pushf fs cmp sbb popa imul adc icebp inc add cmp adcl sub sahf add or rclb jno mov or (bad) mov les (bad) div mov mov imul xchg cmp mov mov xchg xchg dec mov mov fdivrl fadds dec mov pusha push mov xchg js aam xor loopne xadd fisubl and or mov mov cs push mov mov mov inc pop push cs sub sbb mov stos mov inc test add mov stos mov (bad) and add mov rclb ret bound sbb cmp xor pop xchg pop cmp test adc out loopne sarl or inc inc lock pop jns inc dec jo rorb inc and ret leave xor push mov jnp push movsb push xchg aam shrb jno inc (bad) faddl pop mov shl cli fcoml mov sbb add insl stos js xchg cld enter fadd dec clc pop sub lods and cltd fstpl lds int3 mov xchg adc sarl jmp in inc mov ja dec inc movsb jl (bad) mov add fnop and push gs jmp sbb add adc mov loopne mov scas mov push mov push add ss pushl loopne jecxz add or push jmp dec add mov stc add mov add add add fcmovbe lds xor pusha rcr cmp mov aam test jl dec pop push mov popa mov lods add enter jo add pop push pop ret jecxz pop mov js adc outsl xor or imul pop call ret xchg rorb pop ret insb mov fcmovu push and mov shrb mov inc clc mov int3 sbb xor or pushf add xchg iret push (bad) repnz mov mov lret andl lock push pop jo ljmp loop mov inc bound sbb pop jns cmpsl adc frstor dec aam add mov pop jg or and lret mov sbb and sub in and push cmp inc fdivrs fsts cmc add pop xchg xchg xor xor add adc dec adc dec adc jno shlb sbb lret mov dec jp pop nop arpl arpl pop xor push add test mov fmull mov jo (bad) call scas jno add push andnps pushf mov adc xorb cs (bad) pushf inc mov inc sarb or mov cmp imul mov mov push inc pavgb cltd xchg dec xor pusha ljmp pusha lock (bad) adc lea cmc shll inc (bad) addr16 cmpb les or hlt sbb or insb jp mov ljmp stos adcl call push mov (bad) sarb xor mov dec stos mov mov lods add loopne or lock pop insb cmp or fiaddl mov lret in adc fsubr fstl cmp add jle or and bsf arpl loop dec pushf xchg fadds inc loope add push add cmp or arpl stos jnp mov add int3 sbb jns imul nop stos xor cmp repz adc sub stos mov add shld test rcll js sub data16 pop mov push push lcall mov xorb inc test add jp adc add mov cwtl pop repz pop pop sub mov imul (bad) mov (bad) jmp push cmp cmp clc (bad) jmp aad cmp js int pop or jno pop addl xor sbbb cmp or loop inc jmp imul stc ss adc sbb inc mov mov xor mov inc xor mov subl imul add mov and test (bad) sub pop sbb lret xor or push add xor (bad) mov and pop push mov sbb push or sbb and (bad) or fmul add add inc add jp cmc ret xorb in add or lods xchg imul adc mov xor mov and and hlt lods iret loope pop and sbb das inc test push pop mov mov xor cli dec lcall nop or and lods andl push (bad) icebp mov add stc aaa ud2 push mov mov adc mov loop fdivrs cmpsb push push sbbb add popf jmp pop (bad) xor pop insb clc cli cmp pop out lahf cmp jmp pop jmp adcb pop xchg adc (bad) (bad) les js clc xorb pop fdivl inc pusha adc test fnstsw lods dec jl inc jno cmp mov lock repz adc sub rsqrtps mov shrb cmc xor out and add adc xor or in fcom test subl add loop and arpl jl jmp mov cld (bad) imul stos push enter pop mov mov loopne stos sbb test sub cwtl sbb js add inc mov add push lea fsubrs xchg xchg enter test or sub call ret orb sub cmpsl mov pusha mov add pusha (bad) jno add and cmp mov sub xchg mov in dec les xor or das xchg xor in fs xor pop fisubl inc (bad) sbb in loop rclb jnp mov mov and pop jne js addr16 lods mov sub scas push push (bad) out pop jg movsb leave pop jbe inc mov nop xchg inc lret add mov in add arpl inc out scas sub jns mov cmp or neg lea adc or (bad) sub push ja (bad) push sarb imul popf pop add push jae pusha inc jmp ret adc xor push pop jne and aad fnstenv pop jae mov and xchg cmp call in sub add jmp stos popf push xor fisubrl mov icebp mulb jbe fbld xchg jns push mov or mov (bad) sub dec adc mov mov fcomps cmp iret pop sub str xlat inc and jle mov mov jg lods int mov add jmpw scas and and xor sub mov jge mov jne leave in sbbl add mov cmp pusha cmp dec (bad) aad mov rcll popl (bad) rcrl fnstsw mov mov push shl push xor (bad) jne inc cld ret fmulp (bad) imull mov popa mov dec aam push loop jae push add jecxz sbb or pop daa fwait aas push inc rcll mov dec jae imul jne mov mov std mov addr16 cwtl aam inc popf jl inc setns sbb push addb popf push pop ljmp push out data16 cld push subl pop push mov out mov mov in idivl add pop addr16 pop test inc jmp clc add test mov test jmp sbb mov and add xorl xor cmp fisttpll aad xor ja repnz inc add adc xchg cmp sbb jle pop jns gs mov stos mov jge pop in xlat into roll pop sub outsl or (bad) cmpsl idivl inc jmp bswap and and push inc dec pop inc iret pop jmp (bad) cmc jmp xchg das jg lret dec out or frndint decl pop add jnp imull lcall fstpl or jmp rcrb rcrl pop pop push sub aad (bad) in pop test dec out xor xor sbb andl jmp push xchg cwtl push std xor js push rclb push ds aaa mov flds jne je or sbb jmp and daa jmp insl in stos mov xchg dec bound mov pop add cmp jbe xchg sub stos repnz rorb mov add mov sub dec add lea test push fwait xor ret push pop pop scas inc or adc popf aad cs and call out sbb loop scas leave (bad) icebp xchg mov inc jmp jecxz shr sub dec neg xor xchg push or icebp pop push std (bad) jmp add sub mov fiaddl shll repz push xor dec popa mov add sub pop or pop xorl ret xchg xor push mov cwtl in push add inc dec call sbb add inc dec test mov jmp xchg mov or movl fist fldl pop ret lea sub sbb xor or or inc and icebp sbb and dec shrb into rolb cmpsb popa dec mov lds cmp push dec leave sbb jno out shlb mul (bad) orl jns add push scas jnp pop lcall sbb pop es sub xor repnz cmc push imul inc mov sti sub imul add jmp gs inc (bad) dec push jl imul stc jp jl test std sub loop sub jl push mov add mov xor jge push ja pop pop test dec mov adc xorb dec pop sub push test add push xchg imul incb lea xor add sti mov mulb mov outsb mov and dec scas xchg inc jmp ja push in (bad) xor jp shlb xor dec pop dec fisttpll sbb add dec dec cmp jmp sbb repz pop (bad) pop mov push leave test adc clc in fsubrl or mov test mov incl lret jge dec push cmp cmp push dec pusha cli push xor cmp or cmp push push mov jg sbb ret lret stos aas pop mov cmp xor dec dec mov call add mov pop xorl jnp push pop outsb push sub inc adc cmpb mov add jnp cmp mov dec or inc adc or ja rolb pop sbb cmc pop mov or fistp jle jmp add xchg clc pop push adc sti cwtl mov push or pushf xchg mov movsl fisubrl sub imul dec push and adc ret add aad mov bnd jmp xchg add lret insb flds mov jns pop addb js adc lret aaa addr16 cs mov pushf pop add xor pop xchg fnop jmp dec mov shr or xchg cmc push pop inc pop scas push xchg add out jno xor xlat mov push icebp outsb (bad) pop mov and sbb cli dec sbb pop lret sbb cmp ret fldcw add pop pop scas xor cmp jl call test xchg sti scas (bad) xchg nop sbb push push push xor das fbstp add xchg dec stc clc mov imul jne mov sub movsb mov enter mov rcrl or ret gs (bad) mov jmp subb jns pop jecxz nop or daa mov test cltd out cmpsb xor mov sub sbb aas mov fimul or xor xchg orl dec out sub and xchg cmp jae arpl xchg or push fisttp sbbb push mov repnz out es xchg int3 fdivr pop add dec cmp sub push push pop ja je pop xor sub jg std jmp pop icebp jmp push and lret aas leave jg xor pop cld xlat outsb cmc lds mov sbb push iret push jp jmp popf ja scas daa mov pop std popf jg xor stos andl addr16 push mov idivl test lods leave clc xor and ss mov xor xor dec and sbbl js sub adc ja push ljmp mov out in lock out pop shlb jnp test movsb sbb jle pusha dec push stc jmp push push sbb xor push dec in (bad) sub ds push or inc loopne cmp into or lret sbb pop lds xchg mov int3 jmp or mov mul jg lret pop ljmp fistpl ljmp adc call sbb jecxz jl mov jle mov mov jo jp jns mov mov mov movb dec xchg imul or inc es adc pusha add pop sub xchg xlat jno and lods fwait and or or imul out fwait jp mov jge jne int adc fiaddl clc adc je enter inc xor jle fwait pop sub push inc adc jae loopne int push dec cld aam daa jg jge rorb lods add inc jecxz ret stos mov ja pop shl cmp scas in and mov mov cmc sbb and xor lea imul add fstps sub dec enter inc ss imul aaa (bad) jnp cmp pop mov and or jmp add ja xor test inc push adc or ljmp (bad) lock jns push dec pop inc add ljmp sub dec add addb xor shr mov jle lahf or into addr16 add cwtl xlat jg jne cmc jle jne pop insb aas inc and ja push inc sahf jmp xchg mov xchg rcrl adc or sub mov jo nop faddl adc out adc gs add jge sub and mov clc mov jge push cmp dec inc lahf or sbbb and sub out addr16 xchg lcall mov mov (bad) xor popa into or pop pop loope sub scas cmp cmpl jmp push pop jmp inc sar inc fstpl icebp in jmp ljmp leave adc (bad) or ja cli and andl pop sbb jmp push enter (bad) inc repz or test xor ja mov addb ja dec divb fstps cmp inc sub push call aas mov test dec pop sub stos add mov adc in push push cmc dec xchg repnz bound ljmp stos mov xchg push xchg push outsl add sbb ja mov out mov pop sub push inc adc shrl sti pop inc loope mov mov inc mov xchg icebp incl outsl add loope pop into aad arpl jmp bound addb stc mov inc or shll loopne sbb xchg xchg out mov fwait mov push call push push pop pop and leave pop jns cwtl sub mov imul incl jae sub imul mov adc or adc sbb mov fsubr pop push je out cmpsb mov inc sub in test xor (bad) int3 mov sbb push mov pop pop add cltd sarb ds and cmpb sbb or cmp or rorb add pop add popa fsub adc push adc pop pop mov enter lea movsl andb sbb movsb into sbb insl adc mov xchg mov rorb lock pop cmp into in test xchg inc mov lahf cmpsb in push xor mov push mov inc push arpl popa aam cli rcrb pop sbb jl cmp das sets add add lahf ficompl jmp ds (bad) daa pop daa mov cmpsl add xchg iret pop clc (bad) push leave sti lret inc movsl xchg lock lock mov cld cmpsb mov mov hlt out mov xchg ret add add sbb sbb test stc scas movsb popa data16 test mov and mov rcll add adc aam das and inc sbb xor mov inc (bad) leave add call xorb movsl test das adcb mov and mov push add int3 cmpsb subb pop test sbb fldcw daa rorb xchg sub negl sbb jl addb daa (bad) sbb or cwtl add or daa ret mov sub sbb popf and mov les sub sbb negb sti adc hlt add stos shlb lock or xchg cmp scas bound hlt dec test xor lret cmp in push push mov insb rolb dec xchg aad call pushf or inc mov nop (bad) cmpsb mov test daa adc sbb mov pop push dec nop in add xor xor dec lods test xchg incb repz gs sbb (bad) loopne (bad) mov fistpll mull inc (bad) (bad) in fsubs pusha or rorb and mov divb sbb push neg pusha popf adc fwait cmp add mov neg xchg sub and push mov sub sbb and cltd xchg mov insl repz out and mull push sbb cltd jp dec das mov sbb pusha mov add loopne movl add jmp loope roll or and mov jnp xchg push ret sbb iret les xchg rolb adc icebp hlt mov popf sbb ror incb inc and (bad) sub gs arpl push call lock lock mov and aam add push pop cmpsl and stc add add pop push dec xchg inc bound push (bad) xor or das mov fs sub and push mov adc stos mov (bad) notl popa sub pop push add inc mov push stc and xor (bad) dec sbb add data16 mov call mov bound pop push xor mov rorl cli add f2xm1 dec call add add hlt ret sbb sbb or sbb les test cmovg inc fsubs dec lock test fcmove gs cmp add jbe push xchg adc iret ret dec data16 pop sbb gs popa jle mov xor rcrl and lea rorl xchg sbb inc mov sub andb add ljmp rcll mov dec pop and sbb lock cmp and or xchg mov mov lahf faddl sbb and sbb sbb icebp enter dec enterw sbb add pop pop mov cmpsl push int rcrl movsl dec mulb into inc cld jge mov (bad) (bad) inc add int mov gs dec call xchg addr16 pop adcb xor sti and mov dec pop push loop popf push adc or push adc mov jl pop repnz mov and inc mov loop fidivr daa xor les movsl lret mov and js mov add inc sbb (bad) pop movb shl jno (bad) dec sbb mov pop fsubrl out cmp test mov incl sbb cwtl int3 mov call out mov xor nop icebp mov adc loop fprem1 les and and push adc and mov leave jnp nop add inc fisttp push pop mov mov xchg mov ds sub pop sahf mov xor test les arpl adc hlt jecxz sbb ror dec sbb (bad) adc gs dec push pop and hlt mov sub mulb repnz ret ret cmpsl mov mov das push and inc adc jnp cmp and jb mov out popa push ss lret icebp std or popf cmpsb add lods sahf inc cmp in jmp idivb clc dec sti jl cmp mov jo test jo je xchg negl enter sbb xchg adc test std pusha loopne cmp xchg sub mov xor adc das dec cmp in mov jle std jo movb js (bad) je add cmpsl jecxz imull cld ret inc and adc xor mov push sbb lret (bad) pusha jns cmp xchg (bad) les sbb or ret les cmp (bad) dec inc call popl dec mov cmp in pop jecxz and mov sub jnp sub xchg pop xchg mov lret add adc ret push mov daa adc sbb cmp insl jo sub cmp pop dec and je mov add jp dec push lock sbb lea jge and mov inc fild xchg inc add push sub fstpt push pop js lea inc test mov aas push mov mov push adc inc sbbl js inc testl sub jae mov lock jge and dec sahf cmp or clc jge call add sub movl leave xor nop sub imul mov std adc add add test pop sub (bad) cmp mov jg insl (bad) add insb mov jmp mov test xchg or add push loope hlt movsb enter pop pop add das sub lcall and fwait pusha add mov lock hlt sti stos pop or mov mov mov ljmp rcrb enter xchg jp push push scas sti shrb icebp pop and adcb sbb mov pusha dec leavew and mov mov bound push inc pusha lea aam mov pusha add loop and sbb imul add sarl sub stc mov fisttpll (bad) test adc push stos sarl pushf repz and fstl incb jp or adc xor sti adc in sahf mov add fildll cmp cwtl and xchg add or enter sub addr16 sarb mov aaa psrad lret (bad) std push repnz loop xor add enter jns cmp and and xor outsb cmp (bad) pop pusha inc mov aam sbb push and aas lds leave addl mov pop adc sbb adc add outsb test insb in test rol stc jge loopne mov push test adc dec js or inc add mov sub xchg xor notb bnd cld dec xchg gs and dec push movsl add xorl xlat jae mov xchg stc inc aaa rcrl add push adc (bad) loopne (bad) push jg sub mov add rolb loop pop push xchg pop lea xor mov add inc pop addr16 lahf jg adc dec inc or es fildll inc ljmp add ds into inc sub in pusha sbb loope out cmc inc arpl dec loop aam js xchg sbb popf xchg int3 sbb rol and push iret pop push sbb push inc in test cmp insl xor xchg movsb or rol (bad) jge shlb mov movsl lret inc hlt outsl pop jo ds shrb dec mov in inc das dec mov add adc pop push pop ret cmp sbb inc jle adc xor shr sbb push movsb mov inc lods jb in loopne ss pop inc xchg adc push or sti jge push add bound add aad inc nop mov in pop mov into cmp adc jg add jnp xchg outsb mov push lock pop shrb push mov add xchg fdivrp addr16 sarl fildl (bad) add pop or es mov sub addl cltd adc out sbb int3 lock mov push inc sbb sahf movl push pushf dec ret xor test hlt mov imul adc mov adc enter jbe aaa rorb mov lods popa pop jae and jge movsb cmp push jmp add jl mov nop cmpl stos push (bad) ja or inc iret xchg inc lcall jl or enter test inc inc inc std add add xchg inc add mov mov push xchg sub mov sub jp sbb nop sbb sbb movsl sub push mov and aam mov xor fcoml inc stos icebp jle push les dec adc test push hlt push cld bound xor daa mov call mov out mov sbb sub mov add and cmp dec xchg add jne xchg pop jl daa cmp and sub mov and test lea dec into xor mov fdivs mov arpl ficoml and jno sbb xor add mov and xchg cwtl movsb cmc fcompl ss ret cltd add mov stc sub adc lahf or lret addr16 push ret lea push add out test add bound into fwait add inc push jge fiaddl cmpl dec add leave test outsl jo mov std daa test cmc daa mov (bad) or mov xchg and sbb loope xchg js jecxz test cmp icebp sbbl mov inc test sub add mov push icebp or std jge mov add inc or sbb clc and enter push xorb ss test add flds shlb sub cltd hlt xchg rorl in lahf sub pop int3 pusha lcall sub inc bound das mov xchg aam push cmc fmul imul xor (bad) xchg das flds and cmpsb stc mov pusha mov sub mov fisttpl popf iret aam cmp mov cmp (bad) mov lea mov test incl enter sahf mov icebp adc addl mov imul and and mov lahf aas adc lock sbb jnp in (bad) mov and dec and dec xchg pop les (bad) dec in cs loope int popa hlt xor mov xchg push sub and test arpl push popa test adc push xchg inc sub addb jo es roll xor daa dec adc sub dec int (bad) imul test and add xor les adc insl hlt imul push dec cli mov and sub out mov cmovne test mov sbb outsb pop loopne dec and ds mov xchg rolb bound and rorl xor jbe push (bad) jns mov mov adc faddl fsubs and sbb xchg sub and push jl popa fs movsl pop es es cmp adc (bad) hlt nop ljmp cmc fwait sbbb xchg add (bad) into fmuls (bad) xor jne push sbb push adc (bad) enter cmc push sbb loop dec push sbb pop (bad) jns jns xchg pop sub fdivs mov pop mov pop js xchg cltd jo outsb fs test push imul push add jns or adc add pop sub clc (bad) imul subb xor push jecxz (bad) jno shl sti jbe push sub bound inc enter pop daa adc sti inc in call rclb insb or test cli add aam je mov leave les prefetchw pop (bad) aam pop in mov loope popa lock mov jo clc xchg push out sti cmc xchg push divl in adc and pop push push push push les cli cmp xchg push sub inc cwtl les add dec int3 (bad) (bad) pop mov and mov stos dec mov mov sbb dec or and pop cmp add out sbb jae into sti add (bad) xor in out fwait and movsb ds mov aad sub (bad) push xchg mov int cmpsb insb loopne out add jmp sti push mov or mov add push xchg sbb test and cmpsl add sub subb cld pop mov sti fdivr sbb or loopne dec xchg aad pop roll push and push int3 pop inc lea test xchg mov sti sub mov inc test enter fsubs (bad) sbb lahf pusha pop sbb xchg xchg cwtl fdivr adc sar adc xchg add sub pop rcrb stc es mov mov das jle mov sub daa cmp addb (bad) stos daa lds subl movsb push inc mov mov movsl mov pusha sub lock mov add and xor repz mov xor out add jne rclb das jbe (bad) aam lret cmp add movsb adc divl dec ret cs lea sbb aad jecxz fnsave (bad) fsubs cmp adc lret arpl add pop add dec adc popf ret loop fidivr faddl loope xor push gs or add mov jbe fidivrl or add lock push sub add push lret test push adc mov movsb or int cld (bad) ja and pusha push xor mov repnz rcrl pop adc lcall leave test mov mov repnz mov adc cmp xchg mov dec pop pop lods int3 iret arpl mov inc sbb mov mov dec and lfs adc pop sti sbb jno int inc shrb push pop inc and xor fwait lods add mov xor icebp das xor ret xor ja jge add push inc jl dec xlat push jnp stc sub adc mov xchg cli add inc lods test sbb pop xchg cmp adc xchg out sbb pop dec mov pop jnp in out add test and adc push mov enter push leave add mov dec push sbb cmp cmp sbb popa data16 dec stos daa xlat into bound nop insb sbb or push lock loop xor sbb push pop pop sti and mov out jmp popa (bad) int shlb sarb sub jle lods add mov rol addl or mov mov cmp daa fcoml sbb dec aad and add mov mov sti stos mov pop fcom nop cmp fimul or incb fwait push outsl sub imull pop inc adc mov faddl out add in stos xor clc mov adc pop adc mov sarl rclb and adc or outsb negb in xchg xchg nopl xchg lea pop sub add das cs inc clc sub das xchg push and sub and pop (bad) cs lcall imul add xor mov pop int xchg clc add add out jno jns sbb dec enter sbb sub and testl push shlb jmp and std jno jbe sbb cmp inc fs lods add add decb dec xor rorl shll sarb inc push subl loopne mov jecxz daa push mov pop inc lock call hlt adc stos xor mov aaa jecxz adc test mov loope gs pop adc add movsb outsl mov push mov add (bad) cmpsb adc sub sbb popf pop or dec jns (bad) jge mov mov movsb or int push inc in inc mov push xlat out pusha xchg and int je popl push mov and ret sbb adc in adc sbb sahf add sub pop xchg scas and dec clc pop and adc adc clc shlb push xchg rclb rcr push clc add orl jg push pop leave insb movsb test loop repnz and imul xchg pop mov mov xchg in movb and call add inc test cmp mov xlat sbb pop xor rolb nop test mov jae cld and xchg and fwait inc lods push out push push cmp mov push out sub adc inc and test jns bound lea add sahf and adc clc jb pop test jae lock and fstpt jnp push cmpl add dec jl mov mov daa cld cmpsl cltd inc pop lahf mov (bad) (bad) rcrl mov dec pop add sbb cmp ds dec jg shrb rcrb sbb xchg enter jle gs jns jno sbb pop ror movsl mov jae cmp pop jg fs add (bad) js in rolb mov out add test mov add mov adc jecxz sbb movsl xchg jbe and popa ret adc xorl sub insl fsubs pusha jl push add out inc pop lock dec in add pop test cli fsub jg pop shl scas clc test call repz jecxz pushw lock das push (bad) (bad) clc add and push cltd sti sbb cmp es movsb je jmp push cmc dec sbb pop aam xor sbb mov mov add dec ss cmp mov lods jmp and pop add cld mov mov in adc and mov js adc pop outsl or popf fistpll dec mov add fnstcw adc mov jo pop pop or or pop add (bad) call add ss push xchg (bad) mov into (bad) push push xchg inc fdivrl loopne lock inc cmc mov ljmp add push adc je lods jo pop movzbl cld sub jno das icebp mov inc (bad) movsl loope cmp jbe inc push sbb (bad) je push cmp mov dec mov les or mov test enter test jge test sti int3 in mov adc add data16 inc push and mov pop rolb popa repz inc sbb test dec mov shr sbb aas adc addb inc outsl add xor dec mov enter jp add (bad) mov dec pusha cwtl loopne xchg rorl in mov inc sbb js subb mov popf mov sub jae flds sti gs xchg fdivr mov fimul inc mov fldcw inc inc pop mov and inc add incb inc in inc adc inc and aam ret pop cltd jno push in jo push fadds inc test mov inc and jg js cmp dec add stc out (bad) jmp add cli jne cmc xor xchg inc sti sub popa push data16 int sub sbb lea jns mov pop gs push bound popa add xchg roll inc adc push leave loopne push sbb sti sbb andb jae push or cmp or rorb sub push cs dec pop sbb xchg sbb stc sbb (bad) into xchg lahf add aas orl xlat dec imul inc cmc inc push adc frstor leave sbb sbb out cwtl lea dec pushl add dec bound jb adc or insl pop rcrl mov cmpsb push fisub loop mov pusha popf mov repz add dec xor das mov sbb aad cs insl sti push (bad) sbb mov (bad) sbb sbb mov and adc (bad) or fdivrl dec mov sbb mov add mov mov fdivl stc je shlb cmpb cmp mov arpl call sbb loopne cld add mov pop insl out mov dec lock cmc dec iret or push in movsl jae addb mov add fidiv cmc hlt push adc out fs inc sbb hlt jp xchg call jp and and sbb dec mov icebp mov aam pushf (bad) les pop popa clc xchg fildl mov cpuid in cli adc mov sbb es fild rol lahf jg (bad) xorl mov sar lods enter sbb lock cmp adc dec push mov movsl test in pusha sbb js add xchg sbb cmp adc lahf dec or scas push int3 rcrb js sti sbb sub loope sbb jbe faddl addl lcall mov cmp and sbb repz add sub clc mov popa sub mov xchg jne sbb inc cwtl dec cld xor push add xchg mov mov nop pushf int3 inc hlt push cmp and arpl add das push lods fs lods mov ss movsl scas (bad) mov pushf inc inc lahf das add sbb (bad) adc sbb jo mov int add xor cld pop fcompl or add cmp cmp dec scas mov loopne mov or icebp jo xorb sbb and adc adc bound push cld fild inc mov adc popf (bad) daa xor fnstenv jmp in or mov pop mov into testb insb daa sbb shlb sti xor pop mov js mov xchg or pop jbe js fwait fs jae inc cmp xor adc adc clc in add adcb and or mov adc jl in (bad) push mov cmp inc in divl pop shlb fnstsw pop aaa cwtl lret rolb xor inc repnz dec push and mov fs and cmp add dec push aad and mov test push and jl subl enter jae or sbbl cmp xchg push test dec inc mov in add test sahf and push sbb sbbb push xchg rolb pop shr pop andb and xchg mov or das push aas push or loopne inc lcall fisubrl lock add test mov xor xor inc xor sub or lds mov into xchg pop lods add (bad) stos das pop mov mov add pop jne inc cltd dec add pop adc push test lods pop (bad) mov jecxz pusha mov mov add fcoml jle es mov mov test loop aad cmp call addb shll cld hlt mov dec repz push in cmp pop add cli cvttps2pi mov xor and add push sbb pop call insl xchg pusha addr16 add jle dec out dec in loopne push add (bad) and sub push sti adc inc mov rcrb and add das int push cli cld push and (bad) aaa jne out lcall popa nop cld or rorb jp sub mov dec push add ja daa call clc sahf pop test adc lds loopne sub loopne lds clc mov pushf and cmp out push popa sub sbb push call test inc addr16 aas add jmp pop jg and cld int3 orb sarb loopne cs pop inc loop mov and mov jb sbb inc sub (bad) fisubrl and insl push cli mov mov inc idivb fidivrl sub fadds fs popf inc test jle fsubl mov loop and dec push and mov add pop repnz mov sub outsb insl add xchg call cmp rclb sbb lods inc rcll fiaddl xchg xor ljmp jnp adc dec rcr stos ror lock sub mov push xchg pop stos mov jecxz int3 sti incl and mov add loopne jne stos xchg or pop pop movsl in inc mov loopne lldt add push in int3 enter outsl mov inc and icebp sub and sub shlb mov gs ror mov xor push sbb add pop cmp (bad) leave stc xchg pop jbe mov clc cwtl loopne adc rcrl sbb hlt das sbb cmp rcrl (bad) rolb popf sub inc int out adc push in xorl mov test dec sahf xchg mov dec mov xchg add hlt pop repnz and in es jns xchg xchg cmovp mov cmpl je adc cli add push loopne int adc loope cmp adc pop mov push outsb pop fcompl push pushf daa or rclb (bad) lahf fcompl xchg loop jg in ss push hlt ret sbb cwtl mov pop xchg lahf int3 std mov popf sub pushf popf (bad) or dec rcrb mov jnp leave sahf punpckhwd xor pusha inc bound rorb or cmp out insl inc xorl sbb sub rcrl in aas xchg and mov mov xchg out add adc clc mov dec or jmp pop inc mov xor add sub enter cmp mov lret mov push xor ss clc cli or in (bad) clc sbb dec movb and fcomi dec in mov add in jae jbe or jg cld mov stos cltd xchg ret sub das cs mov cmp inc lea hlt and ja outsl mov dec out imul lcall jbe mov xor sti and push xor and js or ds xchg sbb push int3 add loop repz int3 loopne add (bad) clc daa les xchg sub stos test mov cmp jns jns sbb (bad) push rclb pop dec mov aaa or movsb dec nop xor inc mov lods cwtl xchg jle and das adc inc in push loopne fwait inc mov mov dec clc (bad) mov xor scas lcall push xchg fdivrl sub cmp add in int sarl fwait add pop pop add mov pop jp enter mov or divl add mov jl imul imul sbb imul das stos sbb inc lock hlt pop icebp fs and fdivl sbbb add addl stos jne add cltd adc jae adc sub ja cmp dec cmpsb xchg loopne cmp add aas in jne loop,pn rorb mov stos imul adc pop sub pusha pushf sub jmp les mov addl jl sarb or sbb dec mov pusha sbb inc sub (bad) fmuls aam jns movsl lcall xchg sbb roll enter std dec ja hlt enter cmpsl outsb mov sbb jns es stos mov cwtl sub mov test inc inc add add testb dec sub add movsb (bad) fs fstl add popf lods shrb pop dec pusha pusha jle imul push push push inc mov mov inc pop test mov daa scas leave shl or fiaddl mov popfw es rorl push movsb jb and inc jmp push cmp ret (bad) hlt cli sbb pop add lock mov pop xlat mov sbb sbb push fimul sbb adc je mov leave out adc loope jl dec lahf cmp and fwait outsb xchg cmp jle sbb scas push sub add mov stc loopne dec mov pusha mov pop cmpsl add (bad) aas daa sarb xchg ret fstl cmp cmpsl jecxz fld adc pop cmp inc dec sub ret jbe dec loop sbb xchg sbb outsl call test ja scas popa push push cli add enter add sub orl orb sbb mov and iret mov lock cwtl cwtl es push cmp push sbb inc mov fld1 scas xchg cmp pop incb fs insl test sti adc (bad) mov add ss inc cmp fstl add adc push add sub cmp fistpl out xor fsubrl std inc add stos (bad) rcr mov mov inc loope (bad) mov cmp jne in adc das and push jg arpl pop cs pop sahf loopne rcll add das xchg add loope cmp cmp int adc pop stos adc jge fstl (bad) mov inc mov add das jle mov pushf repnz sub inc mov mov enter mov lock mov cmp fs in aas mov add add test mov push sub inc inc and sti inc sub cmpsl popa mov shlb aaa pusha xchg loop jle or mov hlt inc or sbb enter adc xchg sub jnp mov pop xchg aad mov pop mov pop xor insl add dec mov fdivs mov xchg add ret mov lds sbb lcall pop jmp and fnop rorl lea inc jno dec fs push loope sbb pusha sbb clc add (bad) test xor lret orb sbb imul mov das es mov fs or popf fisubl pop jo test mov pop cltd adc repnz cmp fs js shrl bound sbb lods test mov mov cld adc add and in pusha inc cmpsl or jge cmpsb fisubr inc mov rcll add addr16 test mov fisttpl repnz sub fbstp mov add incb test bound pop outsb xchg test test push (bad) sbb (bad) or and mov jno fs xchg enter rol (bad) std mov pop rorb add cltd pushf dec pop jle sub mov mov xchg les fmul dec or sar mov inc dec pop xchg inc cld jp fwait (bad) ret call (bad) add dec pop (bad) jmp (bad) fiadd rolb (bad) outsl imul ret dec movsl lret fs cmp imul jle xor xchg call adc jge xor das dec lahf push mov xchg or xchg popa add pop add pop mov insl and mov and dec shr lahf test insb add daa ficomp stos out cmp push popa jp pop test popf sub adc cmp xor add test cld jbe jp mov push push mov xchg jne test adc popa (bad) push test icebp rolb add stc dec es daa nop fmul and insl je dec outsl mov push les xor in push xchg adc into add sti jnp leave cltd dec cli sbb sub mov in pop ja add ret mov inc sarb pusha add mov xchg out dec inc mov inc icebp pusha test xor mov push movsb pop xchg lea inc add pop and data16 repnz and jno popa push jp pop inc or pop dec cmpsb xchg add pop mov loopne xchg (bad) mov rcrl mov jnp mov loopne mov jg daa das (bad) cmp shrb subb cld inc xchg stc cmp dec lods mov add sbb pop shlb xchg andb and sbb mov jp add inc cmovge pusha or clc lret mov dec inc loope inc push int inc mov add data16 inc outsl sbb outsl ficoml lahf je add (bad) mov jnp cmp pushf mov or es shrb jb fadds pop inc repnz cmp hlt fmuls bound stc mov and mov dec nop and cli loopne movsl mov sbb (bad) and mov imul imul stos sti jo adc or mov das and shr pop icebp sbb adc xor scas outsb xor inc cmpsb ret or adc and data16 jecxz add enter hlt stos outsb call aaa mov jmp pop insl lock cmp add mov adc mov and das int popf push and pushf sbb lret mov push outsb mov in sbb adc jne add lods inc mov mov push fildll frstor add cli push (bad) scas outsb in clc int3 or (bad) in pusha enter enter sar xchg nop mov mov sub push addr16 mov inc mov sbb mov sbb lret add dec shrb movsl insb mov jge xor sbb push hlt adc mov xor jl movsl pusha and loopne inc ljmp add int push xchg dec ljmp add fdivrl cmp xchg sbb ret pop sbb fs test call pop dec sbb adc mov test adc mov inc push (bad) add cs test sti sbb pusha adc jecxz in test mov (bad) sti sbb jb les xchg dec jmp fcoml (bad) lods pop lods ficompl mov pop adc repz push xor push (bad) repz push int ds sub mov std add loope lods xchg fimull sub and add cld inc adc mov insb movsl or mov push and cmp jecxz out pop hlt mov movsb or sbb pop jne je addl jl sub xchg int rorl add sub pop mov adc andl mov shrb add cs and adcl jnp sub outsb and inc add mov cmpsl sbb test movsl xlat fidivr jns les jl test je mov push and mov adc gs (bad) in popa mov and mov sub and jecxz adc popl ret xlat sub xchg add cmp mov dec (bad) cmp jecxz jg int mov into xchg xorl xchg test dec pusha pusha ss pop add mov add lods dec inc and cwtl insl lock pop aam jp inc inc or inc mov xlat lret push pop stc add or out es scas inc add adc or inc fdivl push mov hlt or dec cs nop faddl icebp sar pop cld in mov jns pop shl mov jmp add jg add shlb icebp pop jmp clc test outsb cwtl add icebp or mov lret fsubr xchg adc xchg pop jo idivl fcmovnb icebp and cltd pop repnz xor lods inc mov test add fsub test rorl xabort add rorb add les pop dec xor mov lods mov sbb scas sarb fadds leave enter sub pop rcll or clc pop push in adc add cmovae in adc in add mov out std jo mov or ret adc add mov (bad) mov (bad) leave adcl outsb sub mov push sbb mov repnz add add or lcall pop clc test mov mov jl jl pop and loopne push mov xchg push or aam lock inc and mov insl flds les pushl sub (bad) movb push popa shll pop add or clc add or cld test add gs pop pop aam enter data16 xchg ss or push repz popf or test hlt sbb dec dec cmc adc adc lds sbb dec sub dec or clc in cmpsb push rclb mov ret sbb adc push mov enter sub loope adc call add outsl stc push enter mov xchg pop pop iret pop sbbb jecxz dec aad sub fnstcw xor dec adc push add mov outsl pop nop mov es ljmp adc dec jmp insb (bad) mov lahf je sbb cmp hlt xor mov or cmp testb pusha pop mov cmp jl add in mov ret inc push xchg loopne or lahf mov shrb sbbl cmp add ficomp mov mov leave cli xchg pusha pop jmp xchg into xchg andb jl add sbb (bad) mov cmp adc and (bad) dec adc push mov inc sbb or test cmp add test adc je xchg mov pop rcrb clc insb daa jnp sub outsb inc fsub mov sbb push and add mov xchg push nop sbb insb cmp mov popa lret ret and jmp pop add xor jno iret test add push rorl and arpl xor aas xchg sti adc jl (bad) aam adcb mov sti mov dec mov scas jg add push mov add incb xchg insl cltd ds insb pushf add (bad) xor cld push dec lods call in pop push stos xchg stos popf lret movsb inc sbb fdivrs sbb and enter inc sbb faddp insb lods mov test pop mov add pop addr16 push mov cmpsl or int (bad) add add add push add jl and cmpsl ljmp test xchg jp add ja sub fucomi xchg sarb xor mov sbb faddl cld daa popf jnp js xor in mov bound mov cltd adc in in test fst daa fadds rorb ror add dec mov sub rclb insl dec xchg inc shl arpl sbb pop mov inc and and f2xm1 sbb loope sub insb in es test add jo rcrl movsb jl sbb push sbbb add in or shl inc and sbb pop pop mov add lock jl jne fs pop dec inc sub xchg arpl add ret adc and pop clc xor (bad) mov addb inc hlt and stc jg outsb ret jns add ret (bad) mov mov jnp out or sbb stos sarl dec cmp enter push adc dec loopne xchg lret mov pop or cmp cld and add pop das or dec mov mov lds hlt push mov out pop inc mov cmp in enter fisttp mov sub sbb fistpll mov clc clc xor enter inc aam mov pusha mov jmp rcrb add cmp (bad) dec add ljmp daa cmc inc add cli sbb or sbb sub pop fstl push call andb lret jnp rolb (bad) je cmpsl add mov andb add sbb xchg or repnz pop mov adcl (bad) cmc jge ret cmp add mov mov jnp cmpsb push or lcall mov xchg pop add sub sbb push enter std (bad) out sbb loopne lret (bad) xor in das aad add addr16 test cwtl push and out add icebp sbb test movl add movsb mov icebp sub dec pop lock hlt cmp mov jl bound push stc test and xchg negb test jns rcrl sub insb iret mulb mov (bad) pusha (bad) mov mov add dec and cltd rcl lcall pop xchg mov push leave nop insl and mov jg push hlt jge or mov push or adcl adc sub adc cmp pusha lret cmc mov add mov (bad) repnz dec pushf fwait xorb loop addr16 inc loopne cli jg fnstsw cwtl inc popa and mov jge sti call add popa faddl dec and mov sub pop dec loopne xchg mov imul jp jne pushf adc in iret daa add imul test push or add dec sub adc les and loopne push adc sub jp add loop imul test xchg (bad) sub inc cmp insb and and test add pop enter pop push mov popa rclb add mov cmp push adc lahf mov das lds pop js add sub and dec jl sub push mov leave jnp dec (bad) cld sbb sub and insb and lods add (bad) loope add or das cltd mov and sti nop and imulb push jns pop jl rcr imull (bad) sbb adc ds pushf rorb add dec mov sbb daa test lea enter icebp sbb fnstsw clc sbb dec cld pop add mov outsb lock mov jmp and in cmpsl and xor push neg mov add int3 and lds xchg xor and sbb add add mov shlb clc addr16 inc movsl add push push jecxz rol xchg pop fiadd and xchg pop ret andl or enter dec dec lods and jae pop aam nop call (bad) mov mov mov mov lcall dec mov stos mov pop inc clc inc sub and gs mov sub leave sub inc jp cltd mov add adc (bad) sbb dec adc pop das add jnp add mov arpl mov (bad) xchg clc out enter stc dec pop mov lock push neg iret fldl arpl push add or xor xor loopne leave sub loop add pop mov and nop sub aam js adc outsb push mov test int mov fnstsw sarb inc add incb push pop adc ret daa cmp cmc pop clc and push jg popa repnz lret int lret mov pop dec push sub enter sub jno rol or sub ljmp enter jnp and ret outsl pop mov hlt inc (bad) mov pop sub or into dec aad cmpsb cwtl xor xchg dec sbbb cltd mov inc lahf int (bad) xor lret dec fwait and add jns sub (bad) rolb mov or ds cmp mov add jae cmpsl or jo in add cltd add mov and mov mov and clc cmp mov es and lea jns push iret hlt sti loopne insl nop push nop std sbb gs xchg dec pusha add pop mov insb sbb jae ljmp push loope subb sbb cmc push (bad) mov and jl dec and inc cmpsb pop jno clc loopne lods pop add adcl stos pop leave adc mov dec cmpsb cwtl xchg mov adc in push cwtl dec nop sub push dec adc (bad) pop rclb jle stc (bad) or test pop std mov enter cmpsl fist xbegin and aaa jae movsl mov and adc rorb and stos jge insb inc jmp pop mov scas jae pop sub dec dec sbb mov and jae mov mov lret cs mov inc inc pop nop xchg add cmp dec pop jl test in cmp test cld and inc mov mov inc mov sarb outsb addb jl jge cmp sbbb mov mov cmp cmp or lcall orl lock in enter or ret test and add push ret out stc call mov jbe loopne orl mov (bad) sbb xor and add loopne fsubrs cwtl fnstcw dec sub ret (bad) fildl mov daa rclb mov adc fnsave movsb xor add sbb cs xchg jp add cmp mov dec pop mov xor lock lcall in or and fnsave push and out and das popa push sub stos or dec call push rcr push rolb mov dec push movsl enter adc daa cmp dec lods inc fdivrs cld mov dec mov add inc sbb jbe push clc fstl das (bad) xlat inc adc sub decl jae mov loopne cmp hlt rclb pop popf (bad) sub stos pop sbb lock xchg dec pop dec movsl in (bad) das (bad) in add hlt insl sbb popf jb dec or dec les and loope cmpsl (bad) add jg mov lret sbb pushf jae sarb in outsb into pop pop or add adcb loopne fs sbb (bad) or icebp sbb pop js adc lret sbb xchg mov add loopne mov mov mov fstpl xor ret ds (bad) ss mov cltd pop imulb dec sahf xchg and push scas adc movsl mov imul inc loopne pop sub sub cltd jl jp cltd or inc js push sub xor add neg mov jne fadds xor add fadds add or jg not sub inc loope aam sub pop mov jg fsubrp xchg xlat inc insb pop fisub rcll push pop jg orl adc in cld xor push dec xor out in in xchg add and lods cld pop lret ja sub or addb lock (bad) cld js gs dec lahf lret fldt or add repnz pop pop sbb sbb cli add aas cmpsb xor xor in lret pop shrb fstl sub mov pusha adc rorl notl int3 add fidivl out cld test inc xor loope push sbb mov mov sub fildl mov (bad) hlt sahf xor adc xor stos and push js stos cwtl imul ffreep sub call mov xchg sahf es or and mov and add repnz lcall in add push jno (bad) fs xchg and rsqrtps int xor or aad push in shrb sub jmp push adc addr16 or adc sub out push push test xor mov rclb sub xor inc cmc andl or test lret es sub mov pusha mov push pop ja add shr push pop mov dec mov stos addb aas mov repnz scas cwtl movsl pop add inc (bad) push jl push test inc adc repnz jmp ja scas (bad) scas sbb cmp leave sub jo or add push aas sti pop cltd aam adc adc xchg imul repz xor jl cs add cmp adc cmp dec ret repnz or push mov (bad) dec pop aas inc inc call fistpl mov mov sbb jne mov stc pop loop rcrl ret icebp mov xor mov cltd pushf adc sbb push pop lret xor push jb cmp int3 mov fnstsw in xor popa sbb or aad (bad) adc add js scas in inc sub daa or add push lcall std rcr lods sarl pushl sbb mov mov xlat add rcrb cltd lahf fldenv ret pop arpl mov jne lock mov adc jle pop add ljmp adc (bad) or xor lcall pminub fisttpl nop mov xchg arpl xor je sbb sbb mov sub aaa lds dec (bad) xor inc inc jl pushf dec test sbb mov cwtl add ret ja add push dec sub cmp inc (bad) jbe mov out addl jns add or push push pop mov mov orl stos test add push pusha push into xor test push je scas xchg movsb sbbb xor push cltd out jo (bad) xor insl add jp popf mov andb scas paddq xchg call inc scas inc and sub hlt or in inc mov xor pusha adc mov sub int xchg stos movsb test add sub xor repz or and xchg mov and mov add pop push push mov and fiadd lcall dec inc push insl jns add lret sbb dec adcb or adc addl and call push push gs popl push aaa sub out out push xchg push cmpsb push les add stc dec pop stos adc push push fadds out loopne (bad) mov adc xchg push mov add test sub push (bad) stc add call pusha les addr16 mov push cwtl nop out and add ss add hlt aas xlat (bad) (bad) xor inc loope sub lods mov subl adc dec int dec scas xchg fdiv cs jne and mov jbe (bad) popa adcb add clc bound pop rcrl sub pop inc push pop jno sbb adc push sbb out add jne jno sbb and loop cmp jmp dec jg adc mov xor es fldt outsl xchg sub dec add xchg outsb mov pop pop add xorb (bad) enter or fcompl push jne mov inc fs ja repz insb add pushf ficompl and jmp out mov push xor and loop mov stc je jge dec call fstpt (bad) jecxz lcall xlat shr jne pop sub xor mov call and mov fild xor neg or jle add xlat jge (bad) lcall xor insb mov pop test jmp fisttpl adc in lock mov mov jg or push jmp lcall adc movsb mov outsl out push sub out ljmp add dec push jmp out lret sub ljmp fbstp (bad) or add bound insb inc add mov mov mov test pop push fdiv imul jbe push imul mov insb push scas in nop mov lods or add aam jmpw cld shll out add les addl das fs shrb outsl jmp rol jecxz add inc shlb call sarb icebp jnp push jo and jmp imul xchg dec push es pop popf inc (bad) rcll push jg flds insl into pusha or ss iret push push loope stos dec dec add (bad) in pop fcomi sbb pop dec jne pop jge lock scas (bad) or pop jmp or pusha push ja shll fcomps cmp sub jnp inc cld mov jno (bad) lods mov repz lcall pop hlt mov stos xor push mov xchg sbbl mov out popa add mov lock mov adc push push push jmp pop das repnz subb jns mov jmp sub not sbb sar (bad) jle inc cmp add sub cmpsl sub rclb dec (bad) mov mov xchg test push jnp int3 cmp fimull sbb in sub out pusha outsb inc into xlat push int dec loop lock int3 sub (bad) test ret jmp pop or dec movl push push pusha push adc add mov insb xor fisttp pop inc test sub or push nop daa push gs xchg push int inc sbb rcll jle popa sbb mov je add cmc rcll and pusha xchg jle jo sub mov arpl xorb add cmp std cmpsb insl pop add xchg cmp and sub shrb jae adc mov iret cltd cmp mov add dec mov lret mov fucompp lcall push jg dec add addr16 mov dec jae cli scas pop add fs sbb mov mov cmp je popa dec cmp xor cmpsb insb hlt lcall jno int (bad) shlb add xchg pop movswl ret xchg ljmp cmp xor mov lea adc jno and push paddw inc pop and push movl cld push mov add aaa data16 cmp mov push or sbb inc add inc pop insl dec cli mov popf out push xchg sbb mov xor jno pusha popa mov adc adc mov add pop adc ret sub mov mov fldt push dec (bad) call leave mov mov mov pop inc cs movzwl sbb xor inc sub xchg ficom adc and or movntps jb pop ret push pushf xchg jno mov push jl mov jbe add popf adc notb push ss jo shlb andl daa test fisttpl movsl cwtl xlat inc pop fs xor movsl pop mov xor push imul push mov ja mul adc movl xchg jne mov dec mov push jbe push mov jp pop add or inc jmp adc rorl sbb popa and sbb mov add sub stos sbb test or xor mov add mov das mov or mov cs add shll lret mov push mov pop jg test and or inc cwtl mov jns mov add dec jae pop popa push xor ret clc mov dec cmp jbe dec movsb or (bad) adc subb (bad) out dec scas dec cmp js jmp or lods (bad) clc popa cld mov fisubr add dec gs mov enter xor or test and in mov sti movzbl das pop inc adc dec pusha outsl adc sbb lock mov rcll xor test or sar lods cli es jbe arpl shr out idivb inc stos xchg push ret mov xor pop or mul mov rcrl sbb dec ret mov xchg sbb sub (bad) mov pop stos scas loop push xor outsl lcall push mov mov pop pop sub repz or movsl stos mov add pusha pop les mov inc adc xor sbb cmpl inc ja cli jle fnstenv jno daa mov es pusha mov ds add pop or jo adc cli xor fwait xchg cmp dec add jb jp jns es nop imul sbb pop inc adc or cmp jmp add push dec sbb sub mov mov (bad) xorb nop call loop push rcll mov cmp aam inc add pop lods add loope popa inc and sbb jb (bad) or inc negb push mov scas je pop add out add pop and push stos (bad) mov cltd add mov jge movsl les dec inc aam xor movb xchg inc sbb sub add cli cwtl xchg test add addr16 pop mov daa lcall roll sbbl les (bad) int3 imul push outsl jno movb mov add and popa cmp sbb xchg (bad) cwtl repnz mov out repnz ret andl sbbl xchg jno repz (bad) out mov roll in sub pop inc adc xor inc pop xchg and sbb fsubrs mov cmp and push jp (bad) jb adc and add xchg bound mov and xor xor push call out iret cmp mov or (bad) nop mov mull mov mov sub and or jo fisubl dec jmp mov repz fldl lock cs scas xlat add fs mov data16 mov mov add aam outsl push cwtl (bad) pushf daa jno dec lret or fsubrl loopne pop dec mov and lea in inc sbb xor or mov enter fdivs mov ret sbb adc outsb in xor hlt dec sub sbb sub into xor xor adc add jo xchg insl jne pusha addl sbb loopne xor sub daa and xchg scas or adc inc out jge pop add es mov fmuls jmp cld popa ja push pop dec pusha add push fsubrl inc pop ret and les in push and add xlat sbb jp pusha inc and add or ds push mov fdivrs lock (bad) ljmp xor xor or aaa mov std mov xchg jo popa xor mov add jmp nop popf pop sbb mov enter adc ljmp call pusha add mov push adc mov pop xchg cmp sbb xor pop add ficoml inc and adc adc sub sbb or jle inc jg stos dec jae ret in and test sbb pop lock mov sub nop jp mov dec xchg cmpsb jns add or mov pop push pop dec mov push pop pop orb cmp daa mov test dec pusha addl jmp dec push or push push jmp int3 xor dec add mov xor xchg rcll int mov jmp scas sti cmpsb jbe pop popa push lcall dec leave mov push jp inc sbb cld fldln2 mov fist inc pop jmp in dec inc insb cld mov jns adc int popf pop mov callw mov in movsl or (bad) pusha sub and pop dec fidiv fcmovnb inc xor push mov inc sahf (bad) (bad) or das sbb mov sub (bad) mov add cmp dec bound push push xchg neg cmp out push jne sbb (bad) pop insb adc es adc lahf mov mov and mov adc xor xchg mov adc das adc out mov xchg mov pop popa mov test cmp and add add inc nop stos pop mull cmp es push xchg es das leave pop test repz sub jnp aas negb add test and push shrl mov pop xchg or mov cli inc cmpsl popa jmp sbb lea std jae pop iret rcl (bad) mov adc pusha mov dec dec ret push inc add out in int rolb andl es fisttp arpl adc mov inc notl push inc fadd pop add sahf sub fadds fldt pushf sbb add sarb shlb jae mov pusha popl inc sbb rcll add sub add inc mov dec pusha mov add jbe pop sbb loop push pop add push jae rorb xor std in pop es mov xchg xchg pminub daa lock sahf cmp xor xor pushl push fwait xchg mov insb lret in icebp adc jecxz add jge jno pusha movsb sbbb cmp and xor adc adc push cmp and in fnstcw xchg add negl inc jns clc add (bad) popa cmp into cmc mov adc outsb jb sti dec inc adc and in je or pop (bad) call hlt mov dec and add jae pop pushf mov or xchg push and pop roll sub inc iret mov clc inc add loopne aaa push jne sbb mov dec add pop mov cli (bad) cmp outsb cmp or pop pop stos clc (bad) loop add insb jno (bad) push add loopne push daa leave dec mov push inc fst and xorl sbb xor (bad) ret pop or jle and fdivs out das cwtl push (bad) xchg sbb test sahf dec (bad) or and (bad) repnz xor fisubl push add mov and xchg hlt mov mov add ljmp xlat inc pop pop xchg add cmp push mov sub push rorb jbe sub bound int3 mov pusha popa pop adcl sub jmp icebp or inc mov jecxz lock dec pop fdivrs repnz fiadd testl or cmpsb cmpsb add dec add js sbb cmp mov sub clc in adc rolb inc rcrl lods and xor push mov adc popf and gs cmc inc xchg or test mov bound (bad) mov dec jbe pop repnz cld push mov lods dec mov lea adc into pop int3 das outsb xor ret js push push (bad) cmp add inc add rcll add xchg cmc or adc cwtl dec sbb idiv addr16 add popl bound imull test pop faddl out cwtl cltd test sbb insb jg pusha push xchg addb jbe and mov push pusha mov add and adc idiv pop mov add nop test cmpb mov inc or adc push jle inc adc mov rorb xor adc dec (bad) mov jl jg push mov inc sbb push in or jo add in inc loope sti pop cwtl fsubrl sub dec sbb clc and xchg gs adc loopne jl jbe (bad) aas pushf lcall call imul fisttpl inc xor pushf call push adc mov pop mov repnz repnz fisub dec loop ja int pusha call fs mov inc (bad) fistp xchg imul adc and add mov popf mov sub ret sub xchg xor cmc imul (bad) stos adcl pusha jne ret adc imul or dec push daa incl lods mov bound (bad) iret adc jmp and popa mov ret lea inc insl lcall dec mov jno xchg pop xchg sub or lahf stos push inc jnp imul das pop (bad) mov and push imull ret mov fdivs jecxz push insl add out xor xor add pop cmp inc fimull sub cmpsb xor stos mov sub popa out xor mov mov test jno mov out ja in (bad) fcmovu add daa insb adc loope add lock pop xor nop dec push xlat push mov dec pusha pop loop adcl aam inc pop mov adc fsubs push xor jl (bad) dec mov add and popa cmp push stos je sub (bad) mov (bad) xlat enter pusha push icebp ret pop and mov mov daa push sub xchg xor push push ret sub pop xchg stos lea mov jmp jae and or jl cwtl subl nop inc orb pop xor test push test inc data16 popf addr16 daa sbb aad (bad) and mov or mov stc shll dec add dec push popf pop or popf jb in xchg loopne test inc jo add mov or imul push int pusha pop dec clc cmp mov cmp mov xchg mov mov mov sbb fidiv or daa or push out (bad) push cltd jo lods add or jo movhps aad loope jecxz (bad) lret or andl (bad) xchg aaa ficom inc mov inc cmc xor cmp div dec or or mov mov pop fistl cmp add push pusha bound insl adc pop add test mov insl daa xchg sti aaa jecxz jg fstp xchg mov inc sahf (bad) or fildl cmpsl popf fmul mov shrb mov mov push xor and add clc orl jge test popa rcrl sbb lock jle cmpsl rcll outsl in push jb pop les mov inc add inc mov sub das js mov or mov fcoms bound iret imul mov stc sbb sub es or ss std (bad) dec test cmp std scas js jae in dec call enter sbb jmp movb inc mov jo push xchg xor jne add cmp or jb xchg scas bound mov imul mov mov divl add lods roll inc push adc xchg dec and lds jne ret mov into inc setno das movsl std push test dec ds aas adc push pushf xchg inc das (bad) leave roll loope loopne cmp jmp push test mov (bad) mov out or and sbb das mov out bound jge xchg sub adc xchg xor xlat push jo rcrl add lahf cmp movsl popl add sub sarl push (bad) pusha jg je or mov subl dec or cmp daa xchg dec lods iret imul loopne xchg rcl fbld add cmp outsb jo adc nop mov es stc pusha je sbbb xchg ret or cmc pop push add sub in test mov mov sbb cli mov pusha mov stos iret hlt scas cmpsl inc and or movsl xchg mov icebp mov lret inc sbb (bad) je add int3 jle push ds pop and les out sahf xor dec add push gs dec pop add xchg lcall xchg clc icebp xchg and aad push mov rcll loope or push popf sub mov xchg or adc push stc pop and add hlt dec rolb mov fidivr cmp cwtl or sbb shl pop lods int3 pop push mov outsb xor sub insl sbb pop fisttpl jo push add and inc (bad) dec cmp jo mov mov add sub xor push push mov jmp push jle add mov mulb out pop int xchg adc icebp je addr16 rol call fbld (bad) dec cmpsl xchg lods sarb sub mov mov mov sbb (bad) movsb cmp cmpsl push dec pop pusha ljmp fsqrt dec loop loope sarl testl add xor mov lea sub inc jb cs add in arpl enter je xchg adc int ret bound sarb aas popa jns add mov out stc mov xchg data16 jecxz mov or and mov insb add in push je les subl xor out popa push mov out xor push mov jp hlt test sub push sbb xor lock shl add sub jno cs push xchg out inc add aaa (bad) aas pop jmp xor push stc icebp cmp cmp inc jnp adc sbb and ret push push mov jmp xchg push and add mov cld lret xor jmp les popf pusha pop (bad) out dec jl dec mov icebp fildl mov aas sub mov cmpl popa mov cld out add jno jmp push popf jg lret pop pop nop add sub fistpll push dec mov jmp out sbb adc and jae jp mov mov scas pop ds bound push push jmp sub out cld dec popf xlat add dec push ljmp push sti push (bad) xchg add xor les and pop mov fiadd pop cmp jno push lock js test mov push and aaa ret cmp push pop add mov jl jmp mov aaa shr add xor adc push xchg mov push adc xchg mov pop cs cmp add jge nop push add cmp pop mov cmpl loopne mov adc push mov add push les jnp dec or lret mov add dec cmp mov fwait dec inc fildll inc add pop cmp pop out jmp cmpsl jg inc pop push cltd test jne sbb hlt ret push mov sbb push inc inc rcr push mov mov push test lcall jg call mov ja xlat cmp les iret in inc dec mov lds push mov cmp add add jmp bound movsl mov pushf pusha cltd mov (bad) loopne or xor xchg inc test jl jmp pop push add into jnp rclb adc jg pop jl pop test scas adc fidivl jg int movsb jns or icebp xor rcrb insb add ds xor xor and push inc sbb lret fadds jmp (bad) jmp js sub fdiv add imul (bad) out insb adc mov js sub push mov sub not or jmp dec mov and iret mov or (bad) adc lds fiaddl (bad) fldl or loop pop test test pop xchg call jnp add pop adc cwtl or dec dec icebp dec push xchg test lcall and xchg add pop xchg mov dec mov jge mov sub push aaa cmp add cli xorl lcall aas pushf mov push xor lahf and and ja fsts jno inc (bad) dec inc neg rcrl sbb mov js push xchg dec fild out subl xor mov aad les je add pop pop shl jo mov pushf cmp push and (bad) ljmp cmp pop adc pop mov dec xor aam xchg out sub in ljmp or xor mov push push push inc mov add fs mov test jo mov dec jle add ljmp sub inc or (bad) sarl mov pop pop (bad) jns pusha or adc and cmp scas lret ja push fldl2t jg push (bad) sbb mov or fstps mov mov std mov pop dec orb jnp sub fildl and push vmovdqu push imul lods cmp pop and pop or jle sbb sub pop jmp xchg mov push mov out lods jecxz and add push dec out out dec movsl pop sub inc in add lcall stos push fisubrl jno adc and inc jmp (bad) sbb imul mov add das sub jmp out add pop xchg adc add mov (bad) jmp les push roll sbbb push pop cmp or jmp pop lods lcall test adc cmpsb add mov adc idivl scas (bad) notl mov sar sbb lret sub fwait sub adc imul jns and mov jnp or (bad) sbb mulb lods sbb sub daa pop pop adc test movsb mov outsl stc or xor push jns pop add sar jnp in mov cmc xchg movsb inc ret in add adc icebp xor mov mov add ds pop mov inc pop lds jno mov mov je adc jns jmp ja adc cli shrl popa stos loope inc or xchg mov gs movsl push mov push add rcll cmp adc sbb (bad) aad repz xchg or ljmp js dec add xor negl xchg sub jp mov fwait mov mov stos adc adc jae add push pop imul push jge mov add cmc jns sub nop or in pusha fdivrl not sbbl and jl jmp movsb xorb nop jo mov and jbe fidivl fadds push cmp andb cld int3 mov xor and mov ds mov in pop and push dec jl ret mov icebp sub jbe scas push pop pop adc test mov and add adc mov call jp mov dec gs mov cmpsb and rclb jle pop push cmc mov cmpsl inc push mov adc out rclb (bad) adc cld add dec std dec ljmp cmc mov sbb adc cmp pop xlat cmpsb xor les jnp inc push sub pop mov dec sbb add xchg xor or adc jnp lds jo xor xchg ss add ss dec repz mov xchg loopne test ss rcrl aas leave es sub aad add mov aam dec jl nop cmp imul clc dec movsl mov in sbb inc pop push jnp bound cli negl pop mov lret mov pop shll adc int repz or daa adc xchg mov add and cmpl int3 test or andb mov leave leave push ds insl adc cmp add lods adc mov es add dec xchg stos mov fnstcw push sahf xchg inc ret or divb xchg xchg mov mov pop sub test sahf imul cld add mov call sub js push cltd jns sbb or sbb (bad) jbe xchg adc dec jg test aad pushf sbb push add int or je ds ds xor scas inc and insl test xor mov cld jp shll js inc sarb out mov fldcw dec lock push add sahf jge adc and xor scas push jnp test sub sub loopne sbb pop push out xor iret leave xchg js fs aam jb add or xor cmp addr16 cmp mov cmp mov and shll adc mov adc or mov cmpsb adc add cmp mov mov jnp in inc mov and loope test push ss into movsl sbb cmp adc jmp and xchg inc lods rcl cmp stos or cmpb jl,pn jnp add add ret cmp inc pop add cmp and scas push dec mov push add test js stos adc mov sti or mov int3 jo data16 inc xchg jmp fistl mov or inc sarl pushf int (bad) bound pop add in push pop xchg cli pusha lea xchg rcrb cs clc xor lds repz and jmp das outsl test mov sbb add lods test mov daa xchg add (bad) iret cmp outsb arpl push or add in (bad) adcl mov add add xor bound inc dec in sbbb pusha in jg mov mov test mov cmp xsaveopt push mov add jns lock mov and mov push inc adc xor imul or aam and add pop testl loopne dec push fcom popf scas fildll daa mov out movsl dec push enter cld packuswb jg stos mov add xlat dec pop mov mov (bad) je sbb test add dec inc lea pop add jo mov cmp lahf fstps push mov jnp (bad) pop and sbb xchg fldenv enter pushf jge jl jg imull and aad mov movl addr16 jle roll scas movsl and and loope pusha jge jnp fcomip test add pop mov or out outsl xchg push adc jg cmp inc or xchg sub jns fs out mov enter push mov jmp lods jmp cli gs ljmp cmp movsb out mov xchg test inc shr (bad) sti incl js xchg pop pop push jno ja cs or push push repnz repz aaa jge pusha cmp mov and fiaddl lds pop mov pop xlat mov in popf add sti and cmpsb mov pop shr cmp xchg dec or jg and or pop add jecxz xchg inc into shlb inc mov or xchg mov jg outsl push f2xm1 push mov daa pop pop push mov push sti cli (bad) push push dec mov repz ret push lret cmp mov mov (bad) mov mov std pop dec test push xchg jb imulb and or pop add pop sbb jmp ljmp push sbb mov pop sub daa pushl inc push add mov jle push mov jg imul push repnz out cwtl mov scas add outsl and ja lods sub sub add add pop cmpsb daa pushf jno add add ds jnp pop xchg xchg and cmp sub or (bad) ja rclb lret and lods add rcrl pusha and fs dec out lds jmp test out pop loope in jae ficomp sarl out mov icebp sub pop add sbb sub addl rclb add xchg out or pop mov jmp ficompl orl jbe mov and nop push xchg cli xchg xchg pushf dec dec push jmp jne and loope nop push inc pop mov dec shll pop pop test jmp cli adc mov fsubs jge jecxz xlat (bad) popa enter ffree ljmp add into out add add jecxz aam ret pop push push mov jne shrl adc loop sub negl into inc inc add mov arpl rolb fsubrs test jbe mov dec push mov dec pop imul mov test xor sbb pop add nop call lea pop pop ja xor jb or xor icebp sbb and push pop push daa jmp mov jge mov add insl test ret mov mov inc xlat jp mov test sbb add inc js add push (bad) outsl xor test add pop je sbb iret mov ds jne imul aas pusha dec in sbb cmovb or mov push inc or add rcr or inc popf fcompl sbb in in pusha sbb or andl sub rcrb (bad) or pop popa popf loopne jnp fnop inc xchg pop imul mov movsl pusha mov cwtl xchg jg jb or pop push push clc (bad) ss aaa movsb fisubrl pop in into xor cmc jne (bad) mov shll pop ffree sub jl cld fcomip addr16 cmpsb push add or or das cmp cli popa lahf pop ret jns pop xchg lret adcb add and push test es dec cmpsb test scas pop sub daa rcrb xchg outsl outsb or in adc shlb xchg les adc add negb jns pop mov mov sub push mov adc add inc ds jg,pn jl xchg dec cld jo jae xchg inc and lret adc (bad) push pop jle test loopne and inc rcr pop fcmovb enter xchg mov out mov mov mov or dec fdivrl lret and es inc loop das insb or mov adc jl (bad) mov (bad) (bad) ljmp std pop out mov pop rcrl mov add mov (bad) mov dec int enter lea faddl out and je inc stos out cli or cmpsl es movsl jge mov and jae mov and and lods in (bad) jmp in dec call dec clc movl or and push jno jne das jns jbe xor lret mov rolb push sub add add ret popf insl test pop in jle add rorl or adc add pushf test mov cmp test cli mov cmpsl pop out and (bad) xchg in sub popf mov sub adc inc push jl (bad) adc (bad) dec mov inc das lret cmp fisttp push jb out movsb iret ret mov pusha fisubl sub leave push mov xor xor or xlat and and xchg cmp in aas clc mov inc fdivr inc test xor xchg inc test jne shlb mov je adc movsl nop jmp ljmp or test stos hlt add (bad) leave jg cmp inc cli pop or or cmp push (bad) and aas call mov fdivs mov jg fnstcw cld nop daa sub lcall add push adc xor push adc (bad) in repnz push dec imulb loopne mov cmp ds push (bad) in mov insl xchg loopne fbld add fwait out clc push jne mov nop jae mov cmpsb and cli add fwait and mov or icebp das pop push cwtl shll andl mov cmpsl arpl sbb cmp sbb xor xchg (bad) (bad) add and cmp adc pusha addr16 push sbb je jecxz ds movsl in test inc enter add pop sub int3 xchg lods rcl mov push pop mov add lcall shrl cltd pop aam mov cs repnz icebp push cld (bad) jle cmp mov ja mov cli jmp les cmp sbb xor mov dec hlt out mov and adc int inc push push sub insb add mov mov sbb mov fs sbb insl jno xchg adc call jbe sub shl mov leave insl fsub xor sbb rolb and inc pop scas lds xchg mov mov (bad) shr lods adcb xchg and sub jl aam or mov sbb mov imul and cmpsb loopne add add outsb mov inc or add xlat mov jl es lret test sub outsb jo xor inc nop addr16 sub inc and add add repz es fs add xchg xchg or loope cmp or arpl pop dec loope movsb add and cmp testb shlb sbb push inc sub pop dec mov xor push data16 (bad) jno sarl add insl outsb pop mov xchg jo icebp lret push push rclb daa adc inc cmp mov adc addr16 cmp add into test sbb add cmpsb sbb clc push sub xchg xchg push adc jecxz or mov ss mov xadd push or out mov andl mov call cmpsb into add enter sub xchg int3 scas and sbb add daa in push push jg cmp push xchg (bad) mov mov mov add pop cmp imul out xor (bad) xchg mov test enter mov or jb cli insb and (bad) mov leave pop sbb scas cmp cmp cwtl movsl cmpsl adc mov nop fstpl mov inc adc push pop fs pop pop mov add nop jecxz jno cmpsb pusha movb sub pop sbb sti shlb and push sbb mov or repnz inc daa lahf dec andl bound or lds fmulp sti leave add mov add and push mov clc popa cmp mov addl pop and shll (bad) (bad) push aaa mov mov push mov and out add test cmp inc add push and popf jg push sbb icebp lret pop pop push push cmpsb loop outsl nop xchg mov cs add stos stos rcl add loope jne in fistpl push or and daa push pop jo xor push mov int3 sbb mov test mov mov xchg es addr16 push stos add icebp idivl dec jno mov nop pop add dec popf mov es mov (bad) xchg or (bad) mov or jge add sbb pop mov fisub dec fwait xchg pop adc divl iret add push fwait mov xchg out andb test std push enter (bad) mov jno imul xchg lahf add stos mov (bad) dec aam mov rclb jge add sub fidiv jae mov movzwl cmpb add push call dec insb cmp pop mov push mov loope icebp popa xchg aas or mov arpl push xor xchg icebp clc mov cmp or add push pop mov xchg xchg inc xchg nop ljmp sbb jnp push push (bad) cmp and das and mov pop imul push jno imul mov data16 imul inc jb dec sub imul adc mov pop stos jge cltd and addr16 jmp pop outsl cs adc cli and outsb sub pushf xlat pusha mov adc jl movsb cmp and les jb scas mov aas xor sarb nop inc inc pop cltd shrl lods (bad) mov aaa es test pop pop pusha int xor scas fwait cld sub ljmp test stos and pop sub add dec cmc lret pop inc mov adcb ret add leave xchg repnz cmc pop jle push push (bad) and mov dec inc popf jp adc mov and popf xorb mov outsb mov nop inc lods popa add mov ja pusha jb lea sbb pop push cmc in inc push cmc test sbb or mov xor loope sub and mov add inc test sbb mov fadds push mov sbb xchg cs cmpsl (bad) jg lret fmull pop fdivs adc mov push mov and (bad) jp add adc (bad) popa add test in adc clc add ljmp xor outsb les inc aaa pop sub xor mov adc or sbb ss push popf mov mov (bad) jb mov inc es mov repz jae xchg sti xchg insl std mov cld xor and negw sub sbb inc push test or daa mov push faddl hlt sub repnz xchg test fisubl mov or cmp push insb jno (bad) roll jecxz xchg icebp les test push call mov add or pop pop add test inc and inc stos (bad) pusha fsubl inc add pop pop shll enter pusha mov or sarl add repz idivl icebp push les sbb sbb (bad) pop lea cmpl inc mov push adc (bad) mov fild test dec sub cmpb clc jle sbb or dec test jp int3 mov in mov or mov add mov mov dec rcll nop dec jp dec mov and stc sbb das jle or xor arpl lcall cmc xchg les cmpsb (bad) xor (bad) xor pop add sbb ljmp mov sarb popf lret push push dec sti imul pop push mov les iret adc mov add mov shlb jo add xchg jg popl mov inc hlt subb sub icebp into fsts pop jnp dec cmp insb mov fldcw dec pop out call dec mov jno mov mov jnp mov js and pushf int xchg ljmp adc add xchg sub mov jb jne mov cs push pop mov dec cmp icebp pop das xor sub pop leave je shlb xor jb and push mov xor push mov adc (bad) lock test icebp inc andb add adc dec mov xchg push mov into pusha and bound or or push add iret jmp mov jbe and pop jbe dec in cmp data16 ret fadd sub sub insl negl (bad) loope in cmpsb shr ja or arpl xor cmp mov adc sbb inc mov pop std movsb xchg dec add or dec cmpb ret inc dec call shrb dec lods and into sub mov jb xchg dec aam lds into (bad) jnp cmp mov or pop ret mov push lods data16 xor jbe out xor lret fs mov add jge fs gs or xor leave cltd mov inc mov insb adc out pop cltd add cltd inc mov sbb cmp adc fidivr add cltd shrb sub sbb xchg xor pop push into aad push or ss repz incl out inc sar or ffree jmp jb test or sbb xorl xchg inc inc scas sub imul dec push jle pop push push add cmp push call pop adc mov push mov mov in push loop cmp addr16 add shlb push or cmpl mov inc cld add or (bad) jae add inc sbb push push push mov pusha jne movzbl pop inc mov mov leave sub fnstenv lea jmp inc fs or roll push add test cmp int3 (bad) adcb xchg adc sbb std int add mov adc sbbl push sub and adc test xor lods xor mov push mov mov test mov sub out lods adc inc adc mov or mov add and mov jbe add shr test rcrl inc mov add (bad) addr16 or mov (bad) xlat rorb loop pop es data16 (bad) push xchg ret fiaddl mov push inc lds and push add pop or mov mov (bad) mov add pop jmp inc enter sub sub fild or in mov add (bad) xor (bad) insb cli and sbb and movb push enter iret mov cltd or adc aas xor inc jbe repnz cmp sbb pop xor xchg xchg push adc lret xchg fs dec or sub add fcos mov ret and lahf fsubr enter dec xor and inc stc lcall mov add push jmp mov jbe test cli inc imul dec or cmpsl repnz pop pop add (bad) sbb test adc fiadd jno jbe mov pop jns add aas out pop push mov pop (bad) call test inc fiadd mov out cltd shr das mov or mov dec mov loope adc ret xor add mov sub xor mov cmp mov mov (bad) je (bad) lock aas das pop mov fildll test aam roll mov adc roll clc sbb jnp mov lock sbb stc add sbb pop movsb test or mov jno movsb pop mov ljmp xor in icebp pusha add outsl dec pop dec in xlat inc out inc adc or push sub (bad) or out mov xchg (bad) outsb and cmc movsb adc fs inc pusha sub sub flds mov mov or dec (bad) jmp pop push sahf pop addb push shrb jbe or push shrl call mov adc dec push mov es push mov jo xor jo inc mov call inc inc pop cli inc jmp jmpw loope sub sbb add cmc push ss push xor dec int adc sub pop in arpl xchg dec in pop xchg add lret ja or dec lret pushl cli jle lcall pop movsb and call jp mov sub pop insb roll dec jb mov inc movsl call and jmp jo sbb es arpl adc call sub add inc or pop dec test inc adc add add shlb (bad) (bad) rclb inc adc dec pusha clc push rorl sub lcall das cwtl mov movsb xchg jns xchg or shr mov stos xchg jnp mov (bad) fcompl jge adc and and push loope cmp ret jns ret je add lods or xchg je inc loop jle sub les dec mov es push popf sarl mov xchg ljmp xchg mov and sbb (bad) push test (bad) fxch stos inc inc pop test cmpsb mov xlat mov (bad) dec sbb adc sbb push dec lcall mov stc xor mov cwtl clc (bad) pop add stos or aad (bad) sub mov mov xchg dec mov test and rcrb (bad) mov sub add icebp pop sbb enter sbb adc adc cld pop ror dec sub pushf lods xor cmp sbbb jl enter cmp mov and loopne push mov cmp mov xor add out ja mov jmp xor xchg shlb or icebp inc add (bad) or mov adc push xor sub xor inc inc adc mov lcall test mov and lods mov mov fiadd or ds out imul je lea mov into movsl adc push (bad) sub push add dec cltd fs lcall xor jae cmc lods xchg sub mov sahf or xor out repnz out push add sti adc outsl add xor xchg or lret ja push jbe pop sub addr16 inc pop imul xlat xorb or call adcl jbe or rol mov pushf pop mov dec sub xorl imul jp stc loopne add mov (bad) roll std es push cmpsl inc je jle mov jns data16 aad push pop adc dec push repnz arpl mov mov arpl adc mov jne adc jno adc add add pusha sub pop inc cmp inc mulb dec push icebp dec mov jmp jecxz dec cmp add push push inc cmpsb push cli or xor mov sub mov mov aaa mov mov sbb sub xor push mov or jle addr16 mov adc cmp jle (bad) mov add jne sbb inc cmp sub cs adc pop or mov mov inc cltd cwtl icebp dec sti rorl test dec sbb jbe jae xchg stos sbb push pusha xchg outsl adcb push inc les in sub xor pop inc js xor xchg push push xor and pop (bad) loopne (bad) in das add rclb ficom cmp lcall pop mov cld rcl sub xchg nop xor adc and mov pop mov stos testl (bad) xchg adc jb fwait enter dec pushf adc sbb dec loope push mov mov es sbb adc pop in adc add test or jge mov sub mov pop nop imul cmc cld or pshufw popa push in mov xor jae add lahf or fbstp fcmovb stc popa nop lahf insl cwtl into inc inc xor mull xchg fs cmp cmp loop lock test xchg add jns xor clc mov rcl loop pop cld subl fbstp cs scas and aam or mov out dec fsubp jno push cli dec inc and cmp pusha cwtl mov cmp add iret aaa mov call dec mov mov scas mov dec pop clc out stc sub or mov jae shlb mov jle and mov or mov push call rolb or and sub aam rcrb xchg popa add adc cmpsb mov rolb jge repz std and push ret ret aaa xor js aam dec push loope add push sub popa test ret xor fcomps dec cwtl mov push cmp aas adc sub inc mov lret add fs add addl sub (bad) rcll int3 adc popl and or out add push cld or jnp ficoml loope dec mov sub mov inc and add outsb adc test cld xchg jl add mov aaa es repz cmp rolb incl repnz xor cmp call adc in (bad) mov adc inc add push dec sbb cltd andb sbb push sbb mov call popf and lret or inc mov cwtl dec mov mov pop xchg xchg js jecxz es add push mull push loope xchg (bad) pusha addr16 andl and sbb add or pop stc (bad) mov lock lds nop dec rcll or xchg mov cld lret jb rclb add push mov mov out sbb push fiadd (bad) aam cltd push and or repz mov push push icebp pop adc das mov inc in cmpsb mov and dec or jmp dec pop lahf push jo cmpsl es add scas push in xorl push add jbe inc jno cmp xchg pop add pop pusha outsb cld add mov data16 cwtl mov xor pop les pusha aad das or leave dec push jmp xchg out fs xchg cli cmpsb add cs mov clc xchg push mov add pop mov push dec sbb pop pop test and jo mov mov mov cmp loopne mov adc jg mov repnz cmpsl lock rcll push int3 push sub nop fs jecxz jno out pop shlb cmpsb jo adcl out mov mov mov mov outsb nop outsb push fs das jle push push jb rcr loope in roll std mov rcll mov inc xchg lea cli jmp dec testb sbb dec pop pop pusha jno das shl xorl movsl cld inc sub cmpsl mov (bad) loope decl sbb (bad) push push sbb fcmovnu js int3 add (bad) cmp ljmp mov call add fidivr push mov rorl pop push mov adc pusha add jb adc in adc add xor xchg mov add ficoml test mov jmp sub add push loop jecxz mov fildll sub jg push inc sbb movsb add (bad) mov xor jge mov std dec pop nop dec jl add jb or pop add xchg mov outsb and les or flds clc xchg sbbl test clc inc mov xor rdtsc test pusha stos mov int3 add cmp cmp outsb mov lods imul and jbe and mov in push or pop popa je jnp jnp cmpsl pusha sbb mov pop aaa lods add mov xchg mov cs popa jnp jno mov es popf das out sub inc movb in dec or add stc xor mov dec mov call sbb inc rol xchg push enter jo lock mov xor or inc out pop (bad) jb rorl unpckhps pop mov out jmp ss fs pop sbb sub and sbb adc push daa sbb lock mov or cmp add popf sub std andl stos sub jp jmp push sbb pop and and xchg insl xchg repz js ficom add lods push jbe xchg xchg add jno addr16 out xchg ds fistpl mov (bad) mov rcl imul lock mov add push add ficom int3 dec lahf arpl xchg cmp xorl pop push add icebp push add fsub stos inc es (bad) mov sub fcompl adc add xor call dec dec lods data16 js or nop add negb cld aad inc shll xor and outsb jne insl xor jg mov loop repz movsl out or jge inc or sbb sti add add (bad) sbb inc xchg and repnz pop repz cmp pop jns repnz add je sbb mov sub cltd aam dec aad jbe mov enter out sub inc fwait mov cmp (bad) jbe jge out push jb loopne adc lret in and pop ja cmc lret pop xchg mov (bad) ss incl dec (bad) scas cmp pop dec mov in rcrb js es jne mov rorb jns inc clc and mov lret pop aaa add mov ds and pop push gs (bad) add push xchg fisubrl pop mov cmp cmpsb maskmovq idivl inc ret adc mov dec fwait loopne fldenv test push loopne push mov mov (bad) xor push loopne inc sbb mov shrb in fiadd in xor sbb fidivl test clc and out dec mov and and add or mov pop (bad) inc xchg sub jae rolb test inc adc rcrb mov sbb test mov ret inc ljmp jno dec test (bad) jae rclb sub pusha adc jnp enter movsl sub shll je popa push xchg sbb xchg push ret and fnstsw loopne push xchg aaa add mov stos and xchg sbb enter call test cmp mov popf push movsl inc fsubrp fdivrl push pop jge mov inc lahf (bad) pop ja pop push pop lock sbb jmp push or pusha sub ljmp push jp out fiadd loopne notl push addr16 les add push sti jnp xchg sbb or pop jg jge push insb cmp movsb mov mov lcall push sahf mov mov int jle jmp pop test mov sub push in in es jle xchg mov dec adc add jmp call cltd popf insl pop fldcw adc fnsave inc jo add or sbb push jnp sub sub xchg xchg ret (bad) push push sbb push pop lahf or out xor leave andl ds add sbb or pop push jmp pop in add test jnp inc or jae test jl inc push jle mov or cmp xor mov jle or or (bad) fsqrt sbb icebp loop ret push jno (bad) lock pop divb lahf in sub xor es or xchg stc jnp pop out and stos mov fs xchg popf jns lds loop mov push mov jns dec mov hlt shlb cmc sti jae frstor pop jl bound daa push push in or pop jns mov push mov jbe enter push jne lds push push pop xor outsb add lock inc imulb movsb add sbb xor pop sub pusha xchg scas fnsave cli and push test cltd ljmp pop lds mov repnz push pop int test (bad) pop cli mov dec inc es sbb add pop cmp ficoml dec decl (bad) mov pop pop pop gs cmpsl dec dec pop (bad) add fadds mov sbb mov (bad) xchg sub cmp inc ret or mov and std sahf mov push orb push std sub and lret mov jmp jbe adc dec fcmove xchg xchg push scas addr16 mov xor lods lods ss icebp rolb out imul notb popf adc mov in insb enter mov testl (bad) out aas imul test das add mulps adc cmp insb call xor lea sub rcrl jno pop push popf push and (bad) mov dec pop in mov movl (bad) clc add inc or pop or loop nop addl neg addb in xchg jno lret push mov aaa push out js jmp add xchg inc in daa adc ret inc adc fwait jne cmc mov push fs xlat mov jmp out int pop pusha add out sbb outsb sbb clc inc jne es lods mov cmp xchg inc call bnd cmp fisub mov jnp push sub xchg (bad) and add loopne repz or lret add add sti mov mov pop add mov inc sub ficoml std loop cld std sbb and pop mov (bad) jmp mov cltd sub add xchg sbbb mov inc push push insb add sub adcl insb notb and das enter data16 ljmp rorl mov adc enter pop add int pop inc push and adc xor push mov das jge fimull mov mov adc jne and pop dec mov pop sbb jg jmp push or sub sub push add sbb repz shl add inc sti sub loope (bad) or sub in popa out roll add jnp adc movsb fadds pop into jmp sbb int3 mov repnz adc add xor and mov dec xor loop fisubrl jge add adc jmp and je xchg jl bound imul out push shlb pop mov cli or xor inc sub mov xor outsb add push pop pop sub mov fdivr test icebp mov loop pop push cmp ffree xchg rorb pop ret (bad) addr16 pop jmp or push cmc mov mov ljmp cmp pop inc cwtl aaa sub dec pop lods push rclb dec mov sbb test roll xchg lds sub lcall mov add sub fisubr sbb gs vmwrite adc dec cmp (bad) lcall or popa push lea dec mov repnz jmp into sub hlt sbb add shr add add dec (bad) jnp test arpl cmp pop mov jmp lcall icebp push push push outsb pop int rol xor jl out leave mov pop add leave fnstenv jae cld xlat jnp cmp or xchg push fistp gs rcll push frstor bound xchg push or mov jnp rol cmp cmp inc ret pop sbbl dec sub and inc dec mov fnop and roll loop loopne adc sub add add into rcrl xlat sbb test aas divb push push push and mov xchg rolb xor push popf stos adc pop mov pop xor pcmpeqb mov das mov fistl or (bad) push sub mov mov rolb jle cmp subl les and push inc test pop pusha bound mov sbb scas and mov cmpsb movsl mov fdivp test ret lcall aaa pop packsswb xor jo pushf ss inc ret sbb inc sub cmp aas mov lret stc adc out mov popf je adc sbb add sarb or stc pop mov or adc cmp stos or ljmp shl (bad) or fcoml pop (bad) dec inc cmpl jo adc mov nop adc add orl adc mov sub jno fs iret add inc push mov add sub mov iret cmp iret and stc ret aam dec mulb pop jnp in mov shrl dec and jbe pop iret ret xor lods push inc push pop adc scas aas lahf popf jb loopne sbb push push inc mov add cli xor jmp scas scas xchg sub push ss bound cmp decl nop mov add push loope xor das mov fidiv and lret js clc nop lsl inc add lds jns ljmp lods int cltd cmp sbb mov fstpt call push repz int3 lret inc cmp inc cwtl (bad) xchg out rcrl adc add mov in inc push cmp sub pop mov adc ret pop push inc daa add mov cmc jb movsl push rcrb adc dec (bad) adc testb in test adc imul movsb mov icebp dec and mov cmc dec lcall fstp loopne pop add gs ss add lret je arpl ret adc dec popf jnp in pusha out mov jo aad cmp pushl ds cmc dec ret add or inc xor dec adc mov mov ds pusha or add in movsl push mov lcall movsb rorl inc fisttpll mov loope (bad) icebp lahf and pusha inc adc lock push jle pop and xor inc rorl imul fnstsw js and xor jl pop mov popl scas popa (bad) mov out cmc dec and lods cli fbld or gs push in cwtl sbb mov sysret out adcb mov jmp mov repnz adc insl jbe rolb mov (bad) sbb sub mov loopne xchg lretw jmp les jnp and test flds and imul addb cmp xchg inc jecxz nopl in data16 and test ss push mov call inc inc out outsb dec mov xor outsb adc pop adc scas fs js daa stos subb dec xor popf test cmc dec js adc lock mov adc movsl out pop add mov int div mov scas xor and pop sbb lret sbbb sub decl stos push in outsl xchg divb ret add (bad) loopne and add shll pop test pusha (bad) fstpl xor inc sub add cmc cmp xor leave popa cmpsl lret iret loop pop adc mov addr16 repnz mov sub mov sarl repnz push and or inc arpl cli jp inc add mov (bad) jbe repnz bnd jl sbb mov add fwait push cwtl push repz xor mov not lds decl lods aaa or inc andb xchg (bad) cmp std or xchg adc push mov add daa fistpll in pusha movd stc test or imul fnstenv or add pop xchg mov cmp pop lahf clc pop and daa idiv das cmc xchg dec mov fcoml scas xchg mov imul into sbb jmp call add in popa mov loop mov jmp sbb mov mov jns lret je pop xor jne jbe icebp ja jg dec jmp scas fist mov or push lea nop outsb popl daa outsl pop insb data16 (bad) jne push push jno aad pop pop cmp xchg push imul dec addl pop enter cmp fidivr mov jl mov repnz pop neg call bound push ss push gs xor mov push add sbb cld je push push mul pop daa mov add mov mov push outsb mov add in stc mov pop (bad) rorl out popf push ficomp es cmpsl adc or adc repz xchg jmp int3 sub or out cmp lods add movsb mov mov mov add (bad) jmp gs bound insb add lcall mov popl subl out cmp mov push out pop orb lahf jle lahf fsts jo push js xchg repnz sub cli imul add add clc inc xchg push (bad) fidivr cwtl mov mov or and sti pop mov fmull inc mov push les pop pop jge xchg cmpl dec adc xchg movsb jmp jmp inc push sbb inc movsl fbld adc fimul and cld inc push jmp ljmp jns das notl lcall aaa mov adc incb lret xor pop push jecxz add mov lock addr16 insb sbb lods lods dec lret shrl addr16 aam inc and pop and mov in push out xlat out jg push sub and adc adc es add jl adc mov push movsb or adc xchg pop loop pusha lret mov jae mov pop pop inc adc rorb imul cld jo lea lods adc adc adc add push xor enter fnstenv ret icebp into ja add lret or sbb and add pusha out cwtl and clc das mov (bad) add fild ds jle dec jbe and lcall add add jmp mov popa jb fistpl sub cmp daa jmp mov adc arpl mov jae js std sbb push (bad) pop jae cmp mov popf ja movsb jbe push rcr add out outsl decl movsl adcl es push shll cmp and add add jne out faddl lcall outsl test fwait and icebp js and mov insb xor dec adc mov cli jmp out lds cli jp add jecxz popa sarl push fdivl xchg cmc fldcw test ljmp or jecxz pop int3 cmc pop jno jmp aad sarb mov sub pop push dec jp mov xchg das add push pop sub aas add je mov out rcl jp loop loope jb arpl push imul adc mov popf int3 cmp popa iret cmp cmp adc outsb mov add xchg inc push mov adc mov ljmp out loope push push int3 push sub jae jo mov dec lods push sbb fwait and xchg push push les cmpsb mov inc (bad) popf mov (bad) adc aas sub gs clc sub jl add inc mov out daa jae jo adc and dec push int3 daa pop jno add jp xor sub cmpsb sbb rcl and add jmp pop push push shr cmc lea das push loop jne fwait test xor lret lods jmp cmp sbb add xor loope arpl add das lock pop in pop inc enter push lea call mov cmp mov stos loop jmp adc jg mov pop sub add add (bad) sbb and sub adc loop add rorb jg out clc sub xor dec cld sqrtps xchg jbe mov pop jne shrl add lret adc faddl mov pop jno hlt jae dec push test mov addr16 lods pusha loopne icebp mov xchg pusha jmp mov or jecxz,pn arpl mov cld pop aaa test das inc push mov jp mov nop adc movsb mov adc cmp adc xchg mov (bad) sub xor les and (bad) outsb aam push fild xchg inc out xchg loopne enter jle push pushf jecxz jne,pn lods push js xorb xor xchg out loopne cwtl mov movsb dec jl fdivrl cmp add jl mov popf into pop mov stos (bad) mov cmp out add push ds mov jbe lds popf cmpsb inc push adc gs dec mov mov int popa pop pusha repz pop push jecxz popa lods icebp xor roll into mov sub jmp xchg push pusha out pop lds push add xor dec popa test sar xor test sarl ljmp aaa xorb fs add adc dec insb mov test mull and pop push (bad) push out scas jg add cmp or mov rcll and sbb add in add ds jl (bad) inc andb shll ror cmp jnp mov cmp adc mov sub push icebp cmp in test jle mov jmp fild ljmp jecxz pop xchg xchg mov push xchg cmpsb pop or and pop or iret lds int3 hlt sti test cmc mov cmp cmp xor loope cli popf push cmp push orb lahf or add mov xor push rcll ret pop jecxz das mov imul mov add mov lret inc lods xlat xchg in xchg (bad) xor mov xor cmp xorb fst gs cmp inc mov add xchg outsb outsl cmpsl aas jbe push and flds stc xchg push push and test call scas inc mov das es sahf adcl mov nop or mov sbb rorb add fsubrl ja aad stos ljmp sti push int3 ss add imul and or inc faddl push (bad) data16 repz iret ja out pop cld cmpsl ror jo cmp sub xchg mov adc int3 add inc pop push out fistp push sti cmp imul xorb aad cmp pop mov adc push repnz or outsl add pop popa mov addl ret ja or sbb dec cmpl mov pusha mov repz cmp and pop dec sub daa mov sbb push movsl and sub and xchg daa jns movsl fbstp incb mov pop dec ja movsl mov xor mov cmp cmpsb loope cmp jne adc shrl add cmpb dec pop xchg stc in orl adc push add fs xor rolb pop adc (bad) and outsb mov icebp cmpl fisttpl rcrl add jmp inc add popf dec sahf jmp sbb push mov inc or sar xor mov sub add jb repz popf (bad) sbb sti int dec shrl cmp jns mov adc std decl sub (bad) mov push stc xchg rclb add in adc cmp pop mov add out (bad) ss or icebp push test mov add sbb xor push mov cmp adc pop inc mov inc add sbbl xchg adc subb xor fisttp int3 push loopne inc pushf add mov inc jmp cmp jo in pop push mov icebp das lods dec or pop clc and mov in clc dec inc mov xorb nop inc daa das aad mov dec sub addl ljmp pushf jno adc fsubl addr16 mov xor loope or cld xor in loop mov test adcb loope pop mov xlat push inc rorb xchg fbld dec cmp dec mov mov jl mov outsb lret add (bad) or ret lea hlt jl add pop sub xchg gs (bad) movsl rcr mov movsl add fcoml xchg or add test pusha rolb aad jp test (bad) rorl pop pop push icebp push sahf sub daa inc or scas sub fdivrl jg mov shrb lahf jp aad out adc add rolb loopne popa push mov notl pop xchg push dec pusha scas addr16 jp cmp mov and hlt test (bad) das xchg cs fbstp sub cmpsl cmp aam jo repnz arpl mov idivl les xchg adc mov jno ficom outsl imul add sub jnp and push mov call inc mov lea negb push (bad) or popf push mov or xor cwtl inc push idivl cmp movsb aaa das imul mov enter loop push dec push pop xor mov mov jl add jecxz pop ljmp xchg popf add shrl mov out push out mov xchg sti push or add cmp loopne loop or cmp adc jns addb xchg sbb mov sub adc gs stos push add jo push push mov (bad) mov xchg pop push push sbb adc jo (bad) xor jl inc add stc hlt cwtl xchg adc cs mov sub xchg daa sub jns mov sub lds mov mov sub mov mov pusha stc imul push xchg aad out std jl mov pop orl xorl dec push pop xchg decb jno lods pop push xchg xchg xor add jg divl mov add test xor cs xchg inc pop fcoml cmp pop or lods jb sbbb push negb xor lahf lods add mov jle out xchg or mov mov pop mov iret push jmp arpl mov test mov jg sub sbb addb mov int3 cld ret and xor je lods fimull pop sub mov xorb jne and scas sbb jl xchg jle push push dec ret inc mov lcall jno mov mov pop sub fidivl les sub arpl and wbinvd rclb cs or mov loop dec jne add in subb mov mov or or add icebp jo push scas loop test and add (bad) cli mov adc mov mov push and push xchg pop xchg popa popf jbe add cmpsl cwtl lods jbe aam sub and mov fstpt ljmp sysret in cmp and mov jb pop jge xchg add xchg fmuls popf stos ds add mov movzwl loop mov push or pop add popf pop sbb mov in test inc and addr16 ret push push push add push popl popa clc pusha cmc mov mov push and dec popf sub push jle adc sti aad sahf das mov shl mov aam xor cwtl cmpsl and xchg stos (bad) mov mov mov push movsl inc loopne sub push pop mov jo fidivl sbb fsubl sub popf xchg cltd push aas lds push push and and mov push pop push cwtl push stc or pop jmp pop xor pop add mov (bad) sub lods jecxz sbb popa mov aam sbb adc fwait push movsb mov stos loop or or ja push pop jl push lret or pop jnp ljmp mov and jae insw sahf jae adc aam repnz fimull cmpsb dec and add inc xor pop leave jbe add adc and loopne and int (bad) push arpl add aad popa xchg mulb adc sub and add add adc add icebp aaa and inc and mov gs sbb sub sub jb mov xchg push mov jecxz adc add mov es xor mov (bad) inc add (bad) sbb inc inc or sbb das push (bad) xor mov adc push cmp nop aaa adc ret xlat inc jne add fwait inc push jnp or rcrb mov xchg and out lock js jmp jle xor fistpl add and lods adc mov loop (bad) push mov pop xchg xchg jno sub add aas add rcll mov cmp repnz jo mov xor lahf (bad) xor cmp mov add jb xchg add pop pop bnd aam (bad) fsubrs (bad) mov fsubs in push xor into idivb ret dec loop lods mov mov mov insl cltd pop adc push add das push push push pop pop popa jle jg popf scas sub test mov cmp sbb out adc cmp xchg test push pop daa inc cmpb mov lret cmp xor mov cmp (bad) enter jae in dec mov pusha ftst pusha sbb into and pop arpl mov shrb add jno cmpl loope,pt jge mov stos sub xchg or push sbb mov popf ja push pop jbe or push test test outsb inc adc pusha into daa xchg in jge pop gs pop add (bad) aam imul push dec hlt ds cmp jp inc sub lahf push inc imul push jae add inc aad repnz pop pop xchg (bad) rcrl mov mov lret push fdivs imul divl insl (bad) hlt fmul lea dec decb out popa lahf sub pop loope push dec lock mov enter sbb and mov mov adc (bad) push sti jo adc out xlat add jmp outsl in cld cmp add fldenv lcall xchg gs fadds and insl pusha or adc icebp popa test stc lea cli sbbl rorb xchg push pmullw mov mov dec mov xchg rorl add mov add (bad) jno loopne sub stc ja sbb (bad) push mov inc sbb inc sbb xor mov fisubl and mov mov js andb mov pop sarl lret sub mov out in mov mov sbb js jns sbb cli aas loopne xchg cld sti rolb adc cmp cmpb sub mov popf stos insb popa nop icebp adc and xor je inc adc repz pop data16 add popl jp leave dec mov jo lret xor add repz and mov fsub jbe sub (bad) mov jb (bad) jb lahf add loop push in pushf and paddsw mov (bad) jo inc daa xor cld add jl outsb adc and pop xchg sbb or nop push pusha imul mov jbe add push pop cmc xlat xchg xor mov adc pop cmc faddp mov jno inc loop mov xorb movb xchg stos lcall jbe nop clc xchg xchg cmp jno imul adc rorb mov jecxz add mov dec push jo jno fsubrl add (bad) xor js shlb adc mov adc leave and mov mov nop mov cwtl lods adc mov test add sub jno xchg and and mov pusha mov je int3 out pop repnz or mov lds mov pop lea push mov test sub cld insb dec in xor mov add test pop xor mov sbb mov icebp add xchg and iret (bad) pop in push stc jmp (bad) lea sbb lret rcrb xchg and adc outsl xor mov xchg pop and sti adc cld int3 ret movsl mov xchg sub cs dec xchg jb sbb in cli popf mov and pop sbb adc popf mov cmp add xchg push mov or add mov push movsb in push adcb pusha cwtl add daa mov mov pushf aam mov mov int3 cmp xor xchg cld pop dec shrb cmp sub faddl pop test xchg dec sarb (bad) dec jmp push cmc pop mov repnz stc mov cmpsl add scas bound shl popf push mov adc shr call adc insb sarl push mov dec sub mov pop xor inc sbb out pushf repnz and add add adc mov pop xlat bound and (bad) inc pop lret aas dec mov stos jne and js mov in xchg out js mov stc (bad) pop pusha or jo mov bound xor xor ret mov dec popf fmuls push mov add sbb push or jp mov popa test andb das sahf fidiv xchg cmp cld sub pop pop out aam fdivs stos add mov fmuls mov ret aaa or xchg (bad) push stos ftst pop jg hlt push mov pop dec push aas ja pop dec xchg add fisubrl lea push add add ds loop push mov jl imul add adc pushf insb xchg push sti je loopne dec jno pop js lea pop xor xor mov push jnp adc xor mov xchg mov loop and xchg mov mov add add jmp pop sbbb ja and cwtl mov add loop test test pop lods push in ret pop in add mov mov inc dec test inc push pop mov pop mov psllw nop adcl sbb dec call sbb add je sub mov repz or inc xor lea mov push or push fwait out scas faddl dec (bad) fsub or dec pop mov adc xchg in rorb mov fidivl nop or dec xor mov (bad) and daa pop rcl cld (bad) xor shrb push or pop mov or aaa lock pop cmpsl mov loopne mov fsubl add push scas pusha ja push pop mov pop enter aaa rclb into xor icebp or xchg (bad) xchg scas mov ret or dec outsb mov and inc push mov roll clc or cmp dec addl inc jmp lock aaa pop adc lret hlt lahf add push sub jbe cmpsl inc mov jbe adc or mov push and loopne outsb inc test sub and divb jne lahf inc xor lret dec into xor clc rol sbb movsb (bad) adc mov sti imul jno lret push int pop and jl pop fs mov mov push mov jl cs xchg rcr mov inc out dec lock add pop dec add mov add (bad) push xchg push jbe rclb aas cmc add jno les sti mov and (bad) in inc ret mov push (bad) ret or dec ds imul and mov mov dec lahf pop std outsb cmp std les and pop jo pop jg and ffreep fwait cld pop ret pop dec aas rcrb xchg rolb mov jns cmpsl js and fs pusha mov add adc imul pop adc test add enter xor lock popf jbe inc imul fsub mov or (bad) add push fcompl dec cmp pushf addb add fisubr or cld mov jns mov cmp inc push mov jae cmp lds stc adc shll and (bad) xchg xlat pusha pop push xor dec pop int outsb add subb dec mov test sub les push sahf call lods daa xorb in loopne lds pop nop rcl push mov aam cs and mov std adc addr16 hlt sahf daa xchg sub in and loop stc jbe (bad) inc sbb aad mov adc push mov pop dec sarb das sub pop mov outsl and mov mov fsts push popa icebp stos mov cmp push pop mov jns xor add jmp and in cli mov dec mov cmpsl add (bad) mov add das or push rcr push sbb xchg arpl pop cld popf push adc jp lret mov std sbb stc inc or mov pop sub cwtl dec loopne add sub roll cmpsb lret push lock jo pop add cmp lahf dec xchg icebp rcrb adc stos and rcrb mov lret cli jo mov sbb outsb inc dec movb mov lcall cltd loope lahf push sub mov or in ss xor adc outsl hlt add nop shrl sub jmp sbb rclb mov pop dec dec add xor push inc insl pop mov popa test add faddp jle inc loopne mull mov loope sub push in inc add sub and lret pop xlat bound jae pop dec push movsl mov xchg mov cmc mov cli or cwtl popa nop loop push in inc or (bad) ljmp mov push sbb mov sub mov push pop cmc push xchg stos xor pusha aad lea inc add lock clc pop stos les add mov clc and in out jo add jno stos and add fidivr pop stos or pop push sub xor xchg jmp ja xor sarb ret adcl out push aas mov push loop jmp pop les adc rorl adc adc fisubrl in dec mov fs mov (bad) push enter dec in imul int add xchg mov push pop bound and add sub mov mov rolb or int3 and inc and dec aam mov xor mov push cli cmp cld stos cmp pop in mov cli jg int3 ljmp mov push sub jbe xor leave movsl and (bad) mov mov (bad) jl in or mov mov iret inc pusha add in out inc es fstps mov and add or mov aaa push add rorl lds enter cwtl xor addr16 pusha clc pop cld nop sub (bad) fnsave shrb fidiv into int xor or or mov push inc sbb aam faddl lock xchg pop jecxz mov aad insl xchg inc sub add dec fisttp xchg jno imul loope ljmp arpl nop aas stos stc pop xlat mov xorb popf mov inc dec pop scas aaa cmp jbe or pop or sub dec std loopne mov mov mov sub jl push xor fs cli jecxz imul std (bad) pavgw cld je ds add out ss scas push cltd mov dec out sti clc stc or inc repnz adc and xlat dec pop mov push mov mov cmp std rcll dec fmuls jnp or lock pop or or push mov stc das sub fisttpl stc imul test dec test imul repnz pop adc fisubrl sub in subb sbb pusha jb add mov mov cmc cmp (bad) inc rcl sub lods mov pop pop mov in xor bound push mov ljmp enter (bad) and cmp inc dec xor dec or adc (bad) mov cmp mov add mov push xor inc xor adc in das and jle or pop lahf sub sbb jmp jmp outsb xor mov or movsl cmp and mov popa rolb jae add xchg add add mov inc pusha mov xchg int3 roll add movq jle cltd les push mov loopne fisubr rcll jge dec fidivrl enter cmp or xor jo mov insl add div scas xor mov sub push addb nop repz (bad) bound lds lret ret popf lods hlt xchg mov and jo xchg push ret dec push xchg out jp out pop add (bad) mov sti pusha fisub shr or pushf add and cmp cmp rcrl adc push pop ja inc stc cmp cld add dec testl pusha sbb push mov cwtl push jge rol jns lock mov out adc jecxz cs sub add imul push adc addr16 mov movsl dec scas and imul jb xchg gs or sub popa stc cmc push fcoms push int mov xlat outsb dec push fs fwait cmp dec fucompp and mov scas pop stc inc mov and sub mov dec fwait mov xchg bound fcmovne (bad) icebp adc rcl or test outsb fistpl (bad) lret flds repz fist lcall leave push sub mov loope (bad) out and or add inc adc (bad) aaa rcll mov jno adc imul rcll fstl add sub clc lods (bad) mov inc adc insb out or ds shrl inc enter or add jl mov and or dec out add jo cli addr16 in add imul push mov loopne popa decb and jo xchg push push mov repnz mov ficomp scas dec mov pop mov dec push shlb ljmp aam call or adc daa mov stc sbb xchg push jo push pusha enter mov push add imul pop mov sub push cmp sub xlat lods pop push test das test lods push les call xchg pop jns pop push sub or lods push add lock mov fcompl mov inc pop scas insb ret or add add insb cmp int jbe or roll adc fwait xchg cmp (bad) scas xor jg sbb sub sub imul dec shlb xchg mov (bad) popf int insb inc push ret pop xchg pop daa data16 dec push inc pusha inc jge or add mov bound jmp (bad) sti jle cmpsl add push je (bad) push push mov xlat and cld (bad) aam pop sbb xor scas cmp fisttpl rcrb and push push repnz cmpsb xchg push aaa sbb fidivrl mov sub add adc push cwtl scas out loopne or sti jmp xchg jnp xor add mov mov and and lcall add push add fsubs mov sub iret repnz push (bad) aam mov add pop test dec sbb push sbb xchg bound pusha aad cmc cmp sarb (bad) mov dec sti int3 mov imull test jno inc adc add inc es mov jl pop mov repz popf jb dec jne and dec push and jge pusha fsts (bad) stos (bad) lea or xchg lcall adc lods pop (bad) jnp xlat aaa and dec in popf pop enter fisttp inc pop push mov sahf and mov jo xchg mov xor mov adc sbb bound xlat (bad) fistl mov repnz or mov mov lret jo sub bnd aam sbb mov sti js xchg jbe pop push (bad) push pop lcall mov cmp imul cmpsb cmp xor (bad) into lock and fisub pop sbb fcoms jns rep push rorl mov xchg call pop jnp test mov pop stos push mov sbb push mov es (bad) dec sbb add in cmp mov sub adc mov test sub (bad) pop in dec addb in inc add jmp pop sub sub push pop cld push imul push inc sub adc xor ret adc inc mov popa gs andb add popl test jle pusha and jo repz sbb sahf push in (bad) scas push (bad) mov (bad) dec pop or push cmp cmp pop xor pop and orl pop cmp push daa sub sub xchg adc pop inc iret sar lret pop and jno or and enter adc sbb add stos fisttpll and inc jmp cmp or dec loope inc dec scas daa cs movsl or (bad) ja sub sbbl push jecxz lret add xchg pusha lahf (bad) cmp bound pop inc mov pop in pop popa dec mov mov sbb loopne (bad) dec xchg or hlt cli pop loopne add mov sar and scas cmp lcall pushf insb jnp sbb popf cmp add mov lahf adc sub jg icebp push xchg adc loop (bad) and push jecxz and mov add jae xor (bad) addb les je sub mov adc lds repnz pop scas loop adc or add test push inc incb cmp mov dec sbb and mov scas bound mov call xor jl xorb fistp push sbb and and iret push or pop xchg jno jbe sbb or adc jno push aas and pop stc cmpsl add xchg xor add cs mov mov mov je mov cmc mov mov sub push mov xor sbb int3 mov mov xorl mov in sti popf adc inc jbe lcall mov mov loope in adc dec popf pop shll lea push les inc sbb mov in mov sbb fwait rol (bad) mov jmp add movsw loope call jg mov sbb pop rcrl sub cli lret jl mov push push psubusb fisttpl adcl and and push es pusha add cltd ja inc sbb mov add pusha pop js pop mov fimul push cld pop pop mov inc adc lret add movsl (bad) repz sbbl pop xor xor cld add adc xchg (bad) pop sub clc mov cmp sub pop xor and (bad) lock push xchg fistpl pusha xchg inc rcrb push ret lods push das or dec jne dec faddp aam out (bad) cmp je and dec push push aaa and dec pop add cmpsl and add pop int3 jnp mov mov xchg inc add inc loopne xor jecxz out fs add jg jecxz add arpl mov in sbb mov enter jnp movsl jae jo mov dec push outsb xchg sbb orb sub out add and testl adc fldl sbb nop insb cld clc rcrl pop cli enter popa cmp add push xlat ja inc pop nop fwait js cmc gs outsl shrl cld (bad) add pop frstor (bad) xor (bad) loope addr16 adc mov jno or sub (bad) sti inc lret mov popf lds pop lcall pop cmpsl pop inc jne cmp les (bad) out mov and loope jnp das jne cmpsb dec mov rorl jmp push lahf inc xchg or pop clc and lods shrl testb sbb push repz adc out mov xchg push arpl xor es mov scas aaa in add nop enter lcall rcrb ret mov (bad) xor das push jbe adc repz mov enter pop and or pop das xor scas fistl or or cmpsb (bad) dec jns test outsb mov mov (bad) cs ja inc lock and (bad) je mov aaa rorb pop mov adc scas imul (bad) jmp test cli mov inc fcos dec or lods or xchg add push and mov pop lods push enter cli sub stos or and cli add xchg test (bad) lea sub addl aad add into popa pop xor add jo outsb xchg les fisttpl rcrb jae scas faddl mov (bad) mov mov or sahf mov test add xchg pop fcompl fwait sti shlb dec imul add (bad) mov mov cmp dec xchg call lcall (bad) or mov inc ficomp adc mov repz xor adc gs mov sub push xlat stc fisubr (bad) dec in cmp jg fildl push xchg into mov je adcl jns jns dec ljmp sbb jns mov fadd mov push and xchg std mov and inc jno push loopne mov jmp shr jo add cld sub gs ret xchg mull iret mov fistp jae jo aad xchg cmp mov add subb fidivr lods mov sub pop adc int outsl in ljmp push inc pop push pusha loop dec nop (bad) pop shlb mov dec mov cmp rcr inc add jnp mov (bad) mov hlt loop in out pusha insb mov repnz xchg in xchg ljmp sub nop jmp pop jbe jge push lahf sub pop repnz dec cmp inc inc das mov mov int lret outsl jae and repz fs inc push push loop mov mov mov inc stc fnop mov or movsl dec jno dec push movsb push sbb and mov xor ds sub addr16 mov xchg push test sbb aas (bad) aaa push push xchg mov add jp nop pusha jle rorb loope hlt mov or fsubl inc xlat sbbb test dec ds inc gs lcall xchg mov test push popa in and adc or push cmpsb mov dec push (bad) sbb mov xchg push test clc jne xchg lcall decb out andl clc dec movsl mov xchg stc xchg int scas aam rcrb scas adc push adc scas push dec stos cltd outsb aam cltd add and xchg jp (bad) popa push insb jmp dec mov mov push xchg pop rcll sbb cld mov cmpb out out fdiv nop stc lahf mov add jnp fidivrl fldcw aas fmul daa add pop sub shlb es sub sahf jb popa jp ljmp push mov and fdivs gs pop mov dec fmuls dec int cmpb push (bad) or popa sarb add xchg add ret test mov pop jle in mov movsl fsubp aaa nop mov inc push fdivrs mov jb lahf imulb outsl test sub neg insb sub and pusha rcl aad pop cltd scas dec push popa shll sub popf rorb mov jbe lret inc mov or sub mov push mov int add stos in fidivl mov sti mov push mov sbb cmp inc test je push lock cs aam mov imul sbb in mov adc xorl mov in mov inc inc leave add stc stc sbb jecxz bound mov mov xor bound loop inc adc mov mov hlt rcll imul fisttpl hlt pushf arpl mov dec sub dec mov ss xchg inc popf mov add lea sub sbb daa mov add ljmp orl add sbbl jp pop push add mov in cli lret pop ret add and adc add mov cltd bound pop pop jns loopne repz dec dec cld jnp cmpsl xor cwtl xchg pop fisttpl jno push xor adc inc (bad) push dec loop mov mov mov jge ss adc mov xchg jg sub cli fmull loope stos push jl sub cmp cmp loopne rorl xchg call add fist enter popa hlt sub inc add adc mov jae movl mov pop push push fiadd cmpsl test btc push mov push pusha out xor add test loop loope scas idivl add jb movsl mov push shrl fwait inc mov int3 sti and add xor mov loop enter push or (bad) push and ret add out xorb xchg push sub fwait mov xchg in bound lods push jp xchg (bad) jo lret jne cmc icebp inc das jnp cmp jnp cmpsl pop sti aam jb mov and sbb (bad) jno ja push xor das add add and dec pop inc sub arpl add xor mov dec lcall jno mov mov pusha repnz fsts push mov (bad) cmp pusha cmpsl cmp sbb xchg lret pop cmp push sti pushf add out dec rclb leave add fsubrp in std (bad) mov pop lret fist cltd mov pop (bad) roll inc or cmpsl int3 jge cmc and gs daa push nop sub stc add xchg imul insl lods xor mov xor inc das cmpsb in stc inc add in (bad) mov xchg xchg cmp pop jge dec mov imul test push ret add pop and stc (bad) and fsubr into insb dec inc mov and jecxz xor and aam and nop add inc mov fstps jg stos data16 mov adc inc (bad) add sbb jne (bad) dec sbb mov or mov insl out (bad) jno xchg xor add push push imul push jp jnp pop adc and pop stos pop pop sbb in mov movsl pusha icebp push pop mov ja stc xchg or pop sahf ja inc test and adcl pop iret jno pop jne mov inc jmp pop cld rorl imulb push clc push movsl out faddl and (bad) icebp xchg in dec jb mov jae xor adcl dec jbe rcrb xchg lahf xchg in push push jo test mov cltd addr16 add mov dec int adc divb adc loopne add test or push sahf fs movsb es mov adc repz push repz add sub fldenv xor aaa jg stos mov out push rol into test mov jle mov inc add cmpsl test mov lret adc dec add je inc ljmp push test cs mov push scas mov mov mov aaa mov mov xor fnsave add xor roll popf jno sbbl (bad) fcoml imul jb dec mov loopne rcll pop dec rcrb loop jae add mov dec add imul dec add xor sub negb movl and and jns cmpsl icebp cmp shlb sub in sub cmp das mov cltd out jp (bad) mov adc xchg and jno cmp pop mov cmc out incb pop cmc jmp enter inc lea mov lock fisttpll mov js lea sub xchg cwtl mov (bad) jo adc mov pop push push fstpl adc add cli dec nop cmpsb mov jp xor adc int3 fimull add mov lret out or jo push jp push mov loope out outsl mov mov fsubrl fnsave inc add xchg and neg mov dec jmp jno jge and add sub loope jp add mov add jg cltd fild lock (bad) cmc add add xchg xchg aaa ja add fsubl or inc movsb jmp adc dec xchg mov call mov add fld sbb into (bad) fisttp popa bnd sub push das out add sbb jno add pop push cmp ja xchg xchg push (bad) in pop jg push push js popa mov jne fldl sub loope int outsb sub push add aaa iret (bad) movsl repnz push mov adc jg ljmp test sti mov ja ljmp jecxz mov add and pusha dec nop in xor stos cltd fwait loop jns cmpb add jle test imul in cmpsb test pop sub popf (bad) xor mov mov fwait outsl lods inc add pop aas pop mov inc mov adc movzwl in jno mov (bad) inc cmc jnp xor mov lock adc dec ds push mov and orl or push ficom dec and add mov and sub dec dec pop sbb ljmp ja mov mov sub sbb popf jge enter in add add lds or add mov jnp fstpl and adc andl dec jbe xchg jle ret mov in add push cmpsl pop jl jnp add lahf mov fistp push stos push jle inc out ja mov pop repnz xor push add add xchg xchg pop stos imul sahf std pushf inc lock mov nop outsl adc inc gs pop loopne push sahf add add add cmc in jl xchg mov mov rol fbld popa inc jae sub sub lret fisttp cwtl xchg xlat add hlt scas push push clc in adc cmpsb mov xchg (bad) mov and pop movsl adc push push push dec in push dec std push mov fisubr mov sub scas inc pop icebp in xchg mov inc mov and in test (bad) jno mov insb enter repz mov push sbb (bad) inc pop inc jmp loop mov and mov outsb sub add loope aaa pop mov sbb dec popa mov mov lahf cli lret repz xlat rorl mov pop fcomps cmc cmpb inc lock jnp adc pop xchg clc mov cmp xchg aam jae ja test adc mov in adc ja clc adc scas sahf and jle popf dec dec in insl repz xchg aas rorb das bound pusha push lds and popa pop out loopne xchg repz fisubl and push into loopne jno js int push aas fstpt fsubs xchg mov mov rolb in sub xchg fiadd gs cltd jecxz pop adc add inc mov insb lods and test xchg and dec cmp adc and lods add sbb adc add out testb mov dec add push rcrl jnp jo mov popa inc jge push adc mov dec pop dec repz pusha xchg or adc xlat pop or push inc pop add rcr testl xor neg loopne jnp (bad) push xchg je and or test add push ljmp inc push mov adc fsubs jae mov sbb mov lret xchg pop sbb push nop pop or mov lods int inc mov push adc xor dec repz dec call shlb dec in mov add daa iret sbb outsl fadds dec repnz add mov push nop sbb mov add repz sub jae das les and jnp fs adc add push lahf je into xor xchg out add imull dec (bad) stc lods cld fstl xor call cli sub add mov and lret pusha mov xchg aas test mov fwait adc roll cmpsb push inc stos xor js les or sub mov stos (bad) add lock xor mov xor xor jge insb mov gs fcmovne or dec mov add rorb jb pop inc js sbb das sub xlat pusha stos fwait mov cmp sub push movsb lcall mov dec and sbb stos dec hlt or pop orl negb int3 add jl mov mov (bad) in xor inc add inc adc xchg stc add and pusha mov and mov mov dec daa cmp fdivs shr ja and add mov inc push leave jb cmpsb aam and mov cmc (bad) or pop loope adc aam and mov sti or fs mov pop repnz add or xchg add or sub ret xchg subl adc jbe push nop out cmpl adc test ja or sbb mov out mov dec dec inc adc sbb stos rolb fwait mov push in dec inc fnsave add or rol xor adc sbb loopne cmp test cmp lret repnz mov sar jp add inc dec fimull ror pop sbb test aad repnz and scas mov cmp je inc push dec sbb std pop insl add xchg (bad) sbbl xchg mulb not dec inc jmp xor stos daa adc loope mov push pop rorb push pop mov call add mov add mov pop dec sub scas add jne in (bad) adc and lds jb and sub push inc add push mov arpl push mov xor inc (bad) lds cmc or out fsubs mov dec js push cli sub adc mov dec push dec mov and or cmp stos sub cs mov std inc vmovupd test inc mov or ljmp push insl ds jmp xchg movsl push (bad) fwait and push jp les cli add roll jno ds mov mov inc adc das scas ss repz cmp inc je add cld sub jmp stc jg clc test mov mov mov mov dec push clc dec out jae xchg cwtl test add sub jo add divl mov jge movsb icebp adc xchg mov loop lods jp mov add test aaa lods add xor mov arpl inc mov pop or pop pop aam sbb adc hlt pop dec mov sbb xor out lock xor repz pop test arpl jmp (bad) sbb mov test add loope incb push aas add or out mov dec jno push shrb and xchg xor add or sbbb push xchg or stc pop and xchg sbb xchg xor mov lret les scas inc dec (bad) cmc stos shrb jg mov movsl popa adc xchg cltd add xchg jmp xchg das jne mov dec (bad) lret fisubl mov add inc cli (bad) add adc xchg lret (bad) insb call movsb aam dec push add pop xchg add jmp in sbb out and out mov fwait xor andl jb or and ret inc loopne sbb mov jbe jns (bad) negl fwait imul xor (bad) lret fisubl divl push ljmp adc rcrb add icebp popa xlat out nop loopne add mov in and mov add sbb fcoms xorl test cs cmc push sub shrb cmp mov mov xor mov sub mov rcr mov mov mov jbe lods lahf sbb cmp xor or pop or xchg cmp lahf inc or xchg (bad) jne inc xchg jbe cmpsl js dec stc lret lock insb jae fstpt mov dec sbb mov ret mov fwait data16 jb and aam xor and loop mov mov mov arpl sub add outsl gs (bad) jae es ret lret sub sub mov add cld loope push or push fldenv mov mov pusha rclb jno mov subl mov add sub in sub out cmpsl add out jge scas dec pop test mov stc xchg fdivl cld xor (bad) rolb movsb or jbe inc add mov pop nop sub add ret imul xchg test jne mov push push pusha (bad) (bad) dec sbb in aas nop or shlb xor into addr16 popa pop nop mov out int3 rcrl icebp and dec push or push inc outsl aaa xor cs add xor pop add push mov lock call inc pop leave mov daa popa adc (bad) xor xor mov in push mov mov or add lret or xor inc hlt out jne (bad) (bad) leave jb insb lret adc mov pop jmp pushf add or push ljmp lret adc xchg dec cld lret push sti add mov mov lods pop daa or dec (bad) (bad) ficompl imul add aaa xchg dec das mov test mov movsl ret iret jns mov mov jno sub jno sbb pop add int3 scas jns (bad) sbb push sub stos cli bound hlt dec pop movsb push add pusha mov cmp daa ret inc cs sub lea mov scas lahf movb lea and jo fwait dec inc in test and cltd addb add lods add push (bad) inc aad loope pop cs cs rcll jb nop test or sbb and jecxz lret mov cmc das mov enter or or nop pusha jne adc loopne fisubrl jb mov add out outsb rolb cwtl sub enter fisub and popa (bad) xchg adc push out pop dec aad add add push dec stc cmp pop add adc and shrb pop pop loope notb aaa fsubl lahf jle ds cmp cmp daa inc outsl cs stos bnd jmp adc ja mov xor cmp out cmpsl jg pusha or aas inc xchg shlb cmp pop mov add idivl push lret pop add lods sub dec mov xor mov xor xchg stos in sbb das test adc jbe dec xor cmp pop mov dec inc pop mov pop popa mov loop xor das or mov mov std add pop icebp cmc add cltd lds inc xchg std lea add insb add mov pop mov xchg add pop stos hlt pop mov cmp mov mov or pop das mov add jp lds test sbb sub or aaa rol xlat jl cs adc pop nop pop xor outsl dec idivb pop cmpsl je negb into mov in mov mov dec mov jg xor sub push (bad) pop popl sub and adc and or aaa xchg cmp mov das movsl ret xchg adc cli in rcll pop add cmp test mov or in into aad lods jg adc push insb inc fs test pop dec jge leave scas (bad) mov popa repz pop and adc orps sbb push mov adc das aaa ljmp add in push pop (bad) cmpsb xchg and push ds outsb jae add sbb flds push out add dec rorb dec cli inc and (bad) inc mov cld and jg fildll mov mov inc dec inc scas scas xchg es push cmp pop mov movsb repnz cwtl test das sahf mov les mov cmp daa out dec loope imul sub ret fs lds xchg pushl loope fwait mov jl and aaa test repnz mov scas int3 sbb (bad) loope pusha out or (bad) hlt clc in pop adc adc inc inc or imul (bad) je mov loop xchg icebp sub push jle mov xlat add out inc mov jmp pop push add sub dec pusha rcll and push fnstenv int3 inc push add ljmp sarl cmp das mov cmp mov add fild in push pop jmp pop mov inc mov push mov jmp xchg dec mov adc in mov pop and ret mov push xchg fisub das pop mov cmc sti int3 leave push stc cld dec jne popl add pop pop push xchg or popf aas aas movsb push insl sub mov push pop xchg jbe rcrb out outsl data16 adc jp lret jmp xor iret jge aas inc aaa shr mov sbb dec pop push (bad) movsl fild push xor push cmp pop mov cmc jge stos icebp inc xchg inc (bad) inc push push mov jnp rcrb dec hlt icebp push neg and push pop xchg popa add jae (bad) call adc shrb loope adc sbb push jle jb (bad) mov xor fwait push inc aam fist sbb cmovs rclb es dec push scas cmp mov or and xor sub ret pop add sub push pop push mov mov outsb stos sbb fwait dec not ja aaa push xor rorl aaa jnp or pop sub scas jmp mov das and jo adc insl mov outsb sarl add std xchg add jge rep and movsl fist sub pop pop cmc jp dec push mov xrelease jle jmp fsts mov fdivs pop cli dec jno in push nop pop into jne lret sub cmp stc std mov rcll or scas xchg imul push xchg sti nop cmp scas pop adc cmp lcall cmp add (bad) mov fistp push add neg cmp jno into sbbb push mov enter mov mov stos xor add pop lcall and in adc add xor addr16 sahf fisubrl mov jp xchg inc jmp or push mov dec cmpsb mov cli or or jg xchg ljmp pop lahf jnp mov sub iret daa dec inc inc jnp mov (bad) jle inc dec mov ja add insb or pop pop pop jp jbe sub pop aas add std jg imul enter adcl mov loope add sub pop inc add out pop add sbb add pop in popf fstps sbb jo inc and loopne into sub push sti imul xor in push dec xor pop jo jl add pop push mov fstl pop add or fwait and add cmp mov cwtl lods xor mov and pop mov out adc jmp lods out aas negb cs fs xchg xchg (bad) nop mov push lahf jno xchg xor push push pop es inc ss dec cli add jnp add dec sbb pop jno inc in daa jmp aaa popf add xor sub add ficomp movsl cmc xchg mov hlt or es not adc shl add or in mov or lock pop insb adc sarl lcall add nop adc cmp enter mov insb fsubrp in addl inc sbb jmp (bad) shr sub push imul stos push sub cmpsb push push pop xchg jae pop rcl dec xor dec add mov push pop cmpsl push stc xchg test test cld adc pop add push or inc inc or int3 mov pop xchg pusha pop push jae or jbe ja sub cli push outsb inc inc push jp xchg call ds cmc mov clc xchg les (bad) fsubr and lret sbb jmp iret into pop dec xorl andl and and pop push cs cltd lcall xchg mov and fstpl mov push push push gs mov ja jns popa xor add xor inc (bad) and sbb mov xchg repnz inc pop or sub iret push clc adc arpl (bad) pusha jle mov adc out add add cmp dec pop jmp ret loopne dec xchg fdivrl daa adc pop mov jb xor cs mov inc aad jmp ret mov test clc adc pop add (bad) add xchg and jg push daa (bad) mov pop ljmp sti push jne sbb xchg in adc repz out or inc std arpl mov xor std and incl pop add shlb and out inc inc xchg cwtl scas add and push cli xor sbb cltd xchg and out pop jnp into xchg or cmc inc push push lret push leave add push sub fdivs inc subl in push neg dec push decw int dec out daa and add addr16 movsl pop out sub leave lds xlat add mov idivb add shl ja dec sbb bound (bad) jg je mov jg icebp xchg cmpsl push or sub test pop nop movb mov push rcrb lcall mov push bound popf push or jae in or shrl and cltd adc aas inc xchg push and inc les add mov ja xchg outsb or push (bad) lods xor movsb mov xchg fnstenv xchg xor push adc imul push sub add xor insl add sub push sub movsb and fsubs jmp adc pop xor std xchg xchg les ljmp (bad) mov aad mov (bad) leave dec aaa test shrb std push xor xor dec jbe leave push cld in ljmp pop es fild lods lahf aas xchg add jnp jno lret scas das movsb jne add popf and ret cmp dec das lods shrb xchg pop sbb aaa or lds leave push pop sub push cmpsl pushf mov cltd add out cmp mov add xor mov popl mov std sbb (bad) mov fcoms jnp (bad) and mov fdivp sbb je sub sub push lret sbb jecxz add xchg es xor inc push pop push jae or xlat scas addb and xchg mov cmp adc cmp jg or lahf dec in xor fs mov add cli imul imul pop xchg movsb mov mov mov outsl out and mov arpl adc ds popl or or fiaddl das lods cmp das mov mov push and adc adc or sbb dec add into fcmovnu (bad) cmp in mov push lahf xor popa add iret mov dec mov test push xor push orb std xchg aaa add das pop cld cli into sub mov mov xor insl adc leave negl lock adc or push xlat cmp xchg movsb sbb aad fcmovnb insl es xchg pop clc pop adcl (bad) hlt xor pop dec add test or lcall jge ret insl add scas les mov std push adcl daa dec push jg push (bad) pop jbe into and mov mov pop pushf enter push inc inc mov and cmpsl call mov sbb scas push or (bad) jb fwait pop jns push xor mov rorb ja in push xor or and sub shll jge clc sub mov out gs push pusha xchg pop mov jns aas ds fcoml mov pushf pop das and shr dec cwtl xor (bad) xchg outsl xor aaa mov xchg (bad) iret dec sti popa sbb adc test orb dec mov rol or or adc data16 fdivs dec mov dec imul inc cmp aam je jb mov cmpsb xor rolb das adc pop cltd xchg fcoml sbb ds cwtl inc add (bad) sbb or jmp mov fisubrl div flds ds dec xchg ja stc add out aad (bad) or jp mov add call ss repnz jns into xor cmp scas pop jo adc xchg out xchg mov add sbb push shl inc mov gs mov dec or (bad) xchg jno fs aam add sbb int es mov cmp loopne sbb test pusha (bad) out and adc and or movsb repnz icebp xor pop cmp andb cmpsl addr16 mov fsubs cwtl adcl aaa js mov outsl adc xchg leave (bad) xor fbld out xor cmp add orl scas dec movsb push aam or aam shrb lea and inc repnz pushw dec jne adc das imul fcomps add scas xor sbb sub pusha push cmpsb xor pop lcall sub ja and leave add pop shrb out jle mov inc add das add imul and cmpsl or add rcrl jg mov and push mov icebp mov scas idivl fildll push sti add popf mov inc sub pop outsb push mov imul (bad) clc inc adcl bound fisubrl cmp or enter jbe or pop pusha loopne sbb mov push out daa test xor mov (bad) jne mov and scas test pop mov add (bad) lret or mov in mov mov rorl scas ja dec xchg imul xlat dec andl pop ja repz push pop cmpsl sbb xor xor or cs call and cmp into not repnz iret adc rolb mov sbbl mov aaa addl dec add jmp jmp add jg dec into in pop mov and push add negl shlb fs fisubr or addr16 fisttpll stc inc push push mov addb jg jmp pusha out aas add ljmp mov popa mov rol nop xchg iret mov (bad) ja leave das nop imul or jle cmp add cwtl push push jo dec sub xor xor inc adc loop add idivl push push add pop call xchg lods jg ret (bad) insb insl inc dec sbb mov mov test mov push xor cltd mov ljmp shr dec loop push insb add aas movsl xchg incb movsl or cmc jp dec repnz and adc mov sarb mov jge mov aad test push push sub push push pop push in sarb sbb adc ds mov mov mov iret pop cmp fsts push in mov jle ficom inc rcll sub lods sub and movsbl imul (bad) fistp outsl mov jbe cmp mov push push scas roll adc addl and mov mov dec sbb sub out push addl fadds repnz sub ja and pop cmc outsl inc and mov (bad) mov out movsb or xchg nop (bad) mov cmp sbb cmpsl jp (bad) loopne (bad) idivl cmp mov add adc roll adc enter das xchg adc lds (bad) aad jb or sahf gs cmp or arpl decb mov cmp das je subb pop cwtl mov (bad) ja (bad) or in js sbb pop cld pop mov pop (bad) mov add add pop sub inc xchg pop mov push mov shlb or or std fimul xor pop cmp vmaxpd mov inc sub sub sbb mov rclb jmp cmp or sub sbb xchg sub paddusw dec xchg inc lahf rolb xchg shrb adc pop xchg cwtl jmp mov push mov add lock cmp and inc gs out scas add mov xchg mov adc pop add mov add add adc inc add sti andl orl mov mov jns loope adc lret push imul les test adc outsb pop ficom sub sbb popf outsb call cld mov mov lock addb cmpsb mov inc dec cmc out arpl jg sbb sti popf adc mov popf ret inc mov cmpb icebp or xchg scas fs ja cmpb loopne lahf pop jae cli mov add push add lahf cmp push das fldl or popf inc ret ja stos or sti pop pop xor mov jo test call pop (bad) pop pop jecxz mov inc pop or (bad) mov xchg and dec nop pusha in test mov jns (bad) movl cli sub icebp (bad) cmp or add cmpsb sub xor add add push sub mov int3 xchg out mov add addr16 dec jae pop push cld xchg imul add scas cwtl add out xchg popf out lahf aam fdivl stos or jmp xlat xchg out imul mov mov xlat pop lods fimull lods add jne sbb push scas int3 mov add dec je adc nop xchg and add add xchg cmp sub pusha push pop (bad) sub stc int and mov dec jae push xor jb jno ja mov mov or nop cmc loopne popf jmp sub mov testb jns or jb mov loop or adc loop push cld test (bad) sbb pop popa stc mov roll add call push add add mov out add mov sub push mov push sub jmp ficom xor jne push sbb cmp jle aam or sahf out inc cs and add sub or sub mov xor adc enter in add push insb sar dec test lea sub loope adc jbe ja out in incl xor mov sbb sbb aam ret mov mov xor aaa testb fldt cmp sahf xor add sahf mov jae add mov mov jle,pt add or pusha call iret adc push in pop es or fcompl jge lods xchg dec stos pusha test jecxz pop nop inc mov pop dec sti sub xchg add mov rorl loopne in add pop (bad) pop fs xchg push dec jg inc in xor nop icebp movsb pop mov xchg mov outsb and xor inc pop xchg out scas jae lods push add int wbinvd es jp fisub pop or jns mov pusha lods adc repnz lea outsb fwait adc inc mov or fcoml add xlat add popf icebp cmp les int3 arpl fmull adc and inc and loopne pop leave (bad) and out inc xor cmp mov push in in pop mov inc mov js mov nop jno add xchg push sub jnp add icebp push inc (bad) rol cld lods jns mov xor pop jp mov jb push sbb lcall pop lds jl inc mov cmp add rcll mov pop pop mov stos cwtl push adcb and data16 pusha push popf data16 ret popf insb lock adc xor cmp das fimul add jl adc xchg fiadd call dec (bad) add mov fistp xor xchg sbb out push jg fistl enter inc or test out sub mov add and popa jmp mov aad sub push inc aad jae rcll repz clc xlat das cli hlt dec (bad) push sbb cmc cmpsb test outsb cmp sar repnz cmpsb ds add inc xor cmc imul mov out dec les add push jnp jo push daa mov fsubrs repz data16 xor popa ljmp fs push mov out add jno mov add pop mov push push pop pop call dec loopne adc lahf arpl ss popa test push or mov ret out add mov push inc jge clc pop loop add sub dec or pop mov inc sarb repnz sbb and add push sbb xor mov es fidivr sarb pop pop xchg call lods ret and aam nop mov out int3 mov mov cwtl push stc pop popa out loopne xchg aaa sbb cmpb or mov add adc test ffree loopne jg xor dec inc and inc mov xlat sbb es or (bad) ja adc cmp outsl mov sbb pop or enter in jno xor test xchg dec addr16 sub dec pop add or stos xor sbb dec add pop call repnz mul mov dec inc dec mov sub repnz sarl pop jmp andb es into dec ret push pop mov adc movsl xchg and (bad) call and mov add sbbb add or sbb pushf jge das xchg sbb cmp cltd (bad) loopne out loopne inc cmp rolb fsts sub daa cmc hlt mov fidiv push dec (bad) pusha mov inc test sbb adc mov ja scas ja shll jg inc dec mov mov (bad) xor pop and jmp sti aam fs sub cmc andb (bad) cmpsb popf ret cmpsb cmpsb sub sbb enter scas cmp and mov sbb xchg jl enter pop push push pop (bad) loop adc ffreep xchg mulb ds rcrl bound scas lret (bad) jb jge shrl xchg cli lcall pop daa cmp jo mov jp (bad) sub inc loopne hlt lods aad adc xchg or mov pop out cmp pop add inc aaa or divl out repz lds mov (bad) sub mov mov mov loop rclb sub mov in test mov mov add add dec pop loop mov std push call sub cmp push mov stc jno cmp outsl (bad) mov hlt mov ja fistp sub out adc xor out sub enter popf jp repz fxch cmp or dec test (bad) xchg pop dec (bad) xor movsb das dec add shll insl lods mov pop adc (bad) das inc push jge sbb sub (bad) sbb and sub testb insl (bad) (bad) repnz outsb jno mov and mov lds ds jecxz xor cmc pop in dec scas fldln2 inc and ja cmp enter push mov faddl cwtl (bad) lods push cmc push rolb rclb cmp shrb ljmp (bad) stos xor fistpl mov test sbbl pusha out repnz push sarb dec and data16 mov in xchg add jmp or xchg dec xor sahf sarl stc mov inc jae and pop fsubr aas xchg test in mov test scas mov push das jae aam push add xchg cmpb sbb push (bad) jnp sbb test pop ret adc rolb mov loopne imul sub add call stc rcrb pop ret lea xor jbe mov loope cmp push insb cmp sub inc jl mov mov out jl movsl jg inc lock xchg movsl pop inc fs xchg (bad) push dec bound mov push data16 sub add das mov adc pop in and sub add test mov and dec (bad) out jmp pop cmc or pop cwtl scas mov mov cltd add mov test pusha sub cmp inc or popa push sbb inc mov pop add xchg frstor mov mov pop mov push xlat mov and clc (bad) fistl mov mov mov xchg mov cwtl xchg add pop popa mov sahf and in push cltd push sbbb add stos cmp xlat xchg clc sub push pop or icebp fwait das testl adc ja (bad) push inc cs inc xlat jo mov popf pop push les cmp pop or fiadd in (bad) les dec xor dec and outsb (bad) sbb shr cmp adc mov clc mov movsl loope das push xor pusha inc pop pop mov xor xor cld xor jp jo ja dec shrb jo repnz jno or in push (bad) push mov dec push push jbe roll pop cmc sbb pop cmp mov sbb sbb (bad) ror cmc sub push mov ja leave orl cmc and pop lahf mov ja leave push dec inc push in xor add lea push jno pop popf in outsb lods jge sbb loop sbb fadds repnz jge mov jmp popa mov out xchg mov dec push (bad) jbe dec mov out shll pop cli jnp cmp inc mov xchg aam faddl shll es jno dec dec dec sti xor inc sahf das push or aaa or aad dec jno and and clc jns mov add mov cmp fnop inc orl add pop add push lock sub rcrl dec pop add call jge jmp mov dec add pusha mov je and add out push jb call and mov cmp pop push add scas dec xor orb ja lock icebp mov mov and mov std loope gs and add ficompl fs mov mov cmc in sarb sub mov lock add popa mov xor pop (bad) sub lcall jle add cmp test mov lock and daa hlt insl fimul (bad) push xchg mov sbb ljmp leave mov gs test call add cmpsl or aaa xchg fcoml std sub enter sub cltd jnp lcall push mov frstor fmuls jg push in enter sub test pushf (bad) repz pop push popf (bad) aaa sub das adc dec out addl in cld les outsb push jge mov scas loop add stc test add pop push pusha sar imul xchg cmp mov push sub jge lcall mov xchg std and adc (bad) push xchg mov out mov nop pop push call push jle mov sbb jle add xchg nop and or pusha loope or popa outsb rolb cli xchg xchg fistp adc and lea flds or jno in jmp (bad) aad cmp shlb sbb pmaxub ds sbb icebp add mov jne (bad) pusha and push mov add lods adc add repnz inc xchg shr mov dec and sub lds pop inc and mov mov xor lds xchg pop push std or adc mov adc cmpb and mov xchg fsts orl je cmc lret xor sbb cmp adcl sbb ljmp sahf push lea cld jns mov mov and lds mov jnp xor cs loopne (bad) rolb loop rcr clc jno lahf or push mull out adcb and pop xchg jg mov jg mov bound and add push icebp imul mov pop int and popa mov add cmpsl adc push mov (bad) xchg jns or pop add (bad) jb xchg cmc sti imul loope inc lret or outsb pop scas bound jnp add lahf sub push push cmpsl insb dec rcrb dec add pop (bad) sarb fildll sub test out cmp loop add lock mov cs fcoml or lds xchg and jae dec pop xor pop mov loop dec adc mov sub sbb adc sbb subb sub test cmp push push xor dec aam int add and in xchg jmp in fs lods sub sub and sub lds push mulb loop dec test mov jge iret loop inc jecxz push xchg repz cmp into sub jp add or mov pop dec call sbb (bad) jne je loope dec test or in cld mov pusha mov (bad) jmp mov mov pop into mov cwtl ljmp push push out pop popa sahf sarl addr16 or jae test ds inc inc popf add pop and cltd loop add push sbb repz testb dec hlt mov in pop daa jmp dec iret dec pop outsl incb push fwait push mov jp adc jle sarb stos mov cmp scas lods adc jb mov nop lods sbb jae,pn jno sbb daa mov jge mov in cmp sub push aaa jmp gs mov inc testl add shrb add test push push mov rclb imul ret int3 xor mov cli and jo or in mov sub dec cmp mov mov and xor sbbb stos cli lock das xchg rorb xchg in xor sbb xor call fucomi dec pop dec imul and sub ja negl pusha movb enter mov rolb pop popa mov sti add ret (bad) testb repnz out xor add roll push sbb mov mov push orl push add push dec push inc or mov (bad) ja xchg and sbb xor cs mov rcr jns mov jbe loope and (bad) lock je push push iret js daa mov clc xchg adc inc push lcall mov jnp xchg push add mov outsb imul push cmp test mov add jne or lahf cmpsl dec push aaa pop or outsl mov fs lcall add mov sti pop mov fnstenv xchg mov lret mov (bad) (bad) bnd push inc repnz (bad) daa dec sub pusha pop adc xor in xchg hlt mov add xor mov std mov bound rcrb jmp mov mov cld movsb mov xchg ror sub enter out mov and repz jge popa xchg sbb adc and mov mov mov inc mov and xor mov xchg adc jo (bad) lret push mov fimull fldenv std cmp ror lahf mov popf jo notl push ret sub xchg int roll imul cltd pusha jo pop popf mov sub sub add sub call in sub jmp inc inc dec add arpl imul dec adc and mov pop (bad) adc jno add loopne add mov sub or dec dec jmp pop sub je jl push or nop mov xchg fwait xchg push insb adc stos sub push aas incl add jno std loopne mov rcrb insb (bad) out add and mov bnd loop cmp or rol cld add cmpsb daa jno adc test aas xchg add mov mov call outsl add rcll pusha add fistpl xchg stos imul jmp sti jno cmpl out push mov and pop dec sub push inc sub popf fs mov aaa clc add adc mov jno roll loope cmpsb sarb rolb inc inc das xlat cmpsb pop cwtl jge xor mov outsl cmp pop xor fist jmp icebp (bad) movsb mov lea cmp addl lcall fs pusha fs mov leave mov es jno pop fwait lods aam jo lock (bad) add mov jo mov add cmpsl mov test push lcall test mov pop xchg icebp jg popa mov xlat mov mov jmp shrl jo mov (bad) (bad) lock sbb ret dec add loopne push pop mov mov addl imul ja int3 push inc dec pop lret push add mov or ja pop push (bad) scas fsubrl push add mov dec cmp and (bad) in arpl add xor sahf or movsl pusha mov add pusha xchg mov (bad) and adc divl mov cmp mov jno xchg gs xchg movsl cmc cmp and jnp sbb cmp xchg (bad) jbe add ds fstpt cmp pop push dec sub mov ljmp fiaddl in rcrb stos mov or lods inc fiadd add fnstenv jmp or inc icebp cmp loope fistp mov mov ljmp cmpsl inc fimul dec add push jne dec pop cli jb lea xor xchg (bad) or popf es clc fdivrl rol mov mov push push dec andb add pop stc jne cmpsb dec pop inc and lea cmpsb sbb push pop jge insb data16 repz mov cmpsl mov sti lret xor jae fldenv psrlw sbb xchg adc (bad) lcall xchg add push outsl push adc outsb movsl bound mov icebp mov clc xchg fs add pusha ja lods jae fsubs sub in or xchg daa pop pop shlb pop mov sti or popa xchg or loop lcall and mov ret adc aad leave loopne lea or fwait mov pop jl dec mov lahf bound xchg mov xor or insl dec das std xor fucom inc dec (bad) not mov mov ficomp add mov movsb push jmp pusha inc cmp xor test inc cld xchg es loop dec loopne push mov rcll std cmp xor lcall xor xlat mov nop jl subb lcall pushf mov add (bad) xchg mov jno push nop das (bad) (bad) loopne mov pusha mov add mov cmp enter adc (bad) xor loopne xchg enter adc push jmp notb push jo add sub pusha xlat lds inc mov xor fidivl lahf and lcall and je daa jbe add les out scas inc sarb cmp test pop push in and mov sahf out dec aad and les jns add sub add js loope fidivr sub test cli ljmp or ret xor push mov pushf jns cmpsb add loope jg cmp push mov stc divb add cmp (bad) icebp mov cli pop xchg or jno mov (bad) pop sbb mov push cmp cmpl repnz add dec add add add cmp loope inc outsb sub pop pop sbb mov push jmp icebp jg pop daa jnp gs adc xor call lcall orl jecxz adc mov notb fstl subb cs imul test mov fcomp add pop inc adc mov int push mov fsubs dec push ret dec test push addb jmp add hlt push and or push pop scas je push aad mov cmp nop int rolb js adc and mov xor mov shlb incb add test push in mov adc xchg (bad) insb out or fcmovbe (bad) das adc add vmwrite repnz inc adcb add push bound sub inc push cli push sbb pop test mov leave sub and add jnp sbb and pop mov out add dec out enter cmc cmp inc stc xchg jno add das xor nop xchg adc cld xchg add push fiadd faddl mov jae lods ja lea aad gs rorl and test mov xchg push cltd test insb add mov fdivl xchg lds xlat add mov lahf shlb xchg or mov pop imul lret sbb popa iret mov mov pop cmpsl mov stos rcrl add es insb and jl addb or mov add lret mov jo ds cltd jmp scas jb fdivr in ljmp mov lods sbb ljmp mov popf mov xchg dec aaa cli das push xchg cwtl std je sbb aad jmp xor adc sub ds push add in mov mov xchg inc mov mov (bad) push inc mov adc xor xor lcall loop xchg test lods es mov lock adcl mov jmp popf cs lea das and jmp js mov xchg test pop sahf fiadd popa and mov pusha add and cmp scas cmc mov pop mov add loopne xchg dec addb int3 and add push sbbb xchg (bad) fdivrl sub popa inc inc xor mov cld repnz stos iret adc jno test pop subb rorl pushf out pop imull mov inc or test add inc jle lds inc and add jmp mov or in shlb shrl aaa (bad) mov out pop imul mov pop add int jecxz and and clc fnstenv iret add cmp xchg cs jnp lret call xchg lahf ret xchg les and ret jo add or push and ret mov add (bad) pop sub rcr xchg (bad) cmpsl aam movl popa sti outsl add mov icebp mov mov cltd imull adc mov sub jnp test lods mov popf lret jge mov dec dec mov dec mov sahf out jp add mov mov mov add or out ja cs and rcl out xor or inc test sbb nop jb out jl add mov xchg fstpt clc test sarb ret add shll jle push mov mov jg or mov or les inc aas cli jnp add jp push dec sbb imul nop cmp add jae or aas pop sti (bad) jno leave insl cmp andb (bad) testl imul outsb adc popf inc les jecxz or sub mov push cmp dec mov test add mov lods xor lock outsl dec pop cli push sub loopne pop add push outsl lret jmp fincstp lods dec (bad) (bad) jae xor adc mov leave pop test add inc pusha mov es xchg pop add add fisubrl scas aam sub jg cli pop mov add add mov shrl mov fwait add jl lods fcmovnb adc mov dec xchg divb and mov jg fnstsw mov push xchg lahf mov push in sub ljmp rorb int3 pusha jl (bad) mov stos sub cli push loope aaa jg xchg lahf push in cwtl cld popa xchg sbbb out push lea aad js pop pop jmp dec and mov jecxz loopne and add push inc pop add mov cmp add dec jle or les (bad) fadd ljmp pop cwtl insb push add sub out pop push outsb adc ret jmp pusha xchg les adc sbb adc scas loop rclb push sbb inc sbb gs adc and pop int3 in adc (bad) mov pop sbb add addl test xchg mov mov je aad lods out sbb jne pop xor ljmp repnz and mov outsb repz and add in int3 cmp sbb mov add mov movsb pushf mov jge pop mov test std or inc jmp pop jl (bad) lock jne shll cs fisubr mov mov (bad) push mov mov jns (bad) lea test mov sub xchg xlat imul xchg cltd aam pop jns pusha stc loop andl adc mov divl dec push repz pop push pusha adc push pusha lods (bad) (bad) push pop mov inc cld stos jmp jg shrl jl dec hlt pop (bad) idivl inc mov push cwtl (bad) lret paddb ret pop sub pop push stos aaa and cmc movsb das pop mov inc (bad) lock lods adc loop repnz cmp jo (bad) xor pop in xor (bad) decb in jmp mov sub shl pop xor and mov mov mul lods ja lahf lods std sbb jb xchg add into nop pusha ds cmpsl dec jmp scas and andl pop das jmp imulb mov cld cli inc cmp pmaxsw push icebp sbb pop fimul (bad) xchg aam lea aaa jo cmp outsl addl cld mov sbb (bad) aas out les pop xorb movb je dec pushf pop ret xchg sbb mov inc or gs sahf add cld and aas xchg arpl cmp movsb sub in enter jp push rolb cmp pushl mov sub pop add pop loopne insl adc daa mov xchg push (bad) pusha inc sub push mov xchg push mov pop mov push imul data16 ds mov push clc pop and or sub rcll insl push cs call sarb and arpl cmp loopne jmp sarb sub dec push jnp xor pop xchg js nop xchg stc jns inc pop sub sbb shlb push xor popf xor rorb sti and adc leave sub and loope and test in popa pop cld fwait xor inc push stos cmpsb sub es bound pop xor je faddl outsb clc int3 push (bad) (bad) es pop fidiv sub jl cmp push adc dec call adc add fcompl pop and fldt push xor xchg sub pop repz repnz aam mov loopne ljmp int3 and add stc mulb loop pop cmc push dec or out xchg ficom aam xchg rol sub sub insb mov mov sub mov sub (bad) lcall add inc adc pop std push cmpl (bad) sub inc and mov mov push adcl add loop fucomp sbb in xchg and (bad) stc lret data16 xchg cli ficomp rcl xchg xchg cmp les outsb push push mov push orb mov imul shll movsb pop and arpl into push inc fs call inc jge push inc pop lahf fisttpl xor int ss adcl mov (bad) pop pop (bad) inc sbb jae (bad) jo xchg pop sub push inc pushf flds (bad) cmpsl xchg jb ja jns dec mov in xchg in out loopne add fwait xchg lret dec xchg pusha data16 push pushf faddl and fsubrl cmpsb dec movsl jo addr16 jno xor push jp lcall mov into sub iret pop popa pop add cmpsb inc das popa and lea and in cmc jno pop pop das xor call xchg loope jle arpl icebp popf int3 mov clc mov jnp pushf shr sar rcll push outsl or mov or add inc out pop push loop test add dec xlat push mov xlat jmp push dec iret pop lock (bad) mov add dec sub jmp sbb outsl cwtl pop xor mov mov sarl push xchg mov idivb adc fsubp cmp ret add out mov xchg push sbb jne test stos add callw adc test fs das mov dec adc arpl or ss or push subl xchg (bad) cli add and (bad) roll mov push pusha sub loope (bad) and dec sub pusha push loope mov mov xchg sbb mov sub mov jp sarl loopne xchg inc and int arpl add fildl and je xor or mov sub mov fsub in add add dec and les (bad) repz push or jb jp add or adc cmp and xor pop jnp loop sahf outsb cmp insb (bad) (bad) jne,pn std into test add xchg in aaa (bad) js add xor sar jle loop pop push pop dec imul lock stos and sub pop jae pop sbb inc sub daa xchg adc in jmp push iret xchg add mov push and jno adc jecxz adc fadd mov jb jg mov in cli add lcall popf in dec stc mov (bad) jo mov inc popf aam aam adcb inc inc (bad) pop push popa stc xchg push cs jbe cwtl mov lds imul arpl cmp adc pop push adc jae push sbb inc pop repz add adc mov xchg (bad) das bound cmp add ds loop jmp mov mov jmp xor push rolb mov dec jecxz loopne add cmp das icebp and xor pop mov cmp add sub jne fmuls lret cmp into push xlat inc pop jg xchg inc pop (bad) sub aaa aad jae xchg push loopne jnp adc lods and push cwtl mov popf loope inc cs (bad) xchg xchg push inc sub add add pushf std push ret or xlat mov call rcrb es dec mov sti cmc xchg sbb je imul mov mov dec test jno dec fadds add data16 xor adc out movsb lods fwait (bad) loope (bad) std inc movb mov aas aam dec add movsb add imul sbb cli mov or jnp inc push in inc in orb lods not inc scas enter fsubrl addr16 push pop stos inc je (bad) jnp add mov add fild clc js push jle add pop int3 cs adc ljmp cmp xchg dec mov push outsl cmc add cli xchg arpl jge jp fnstcw test pop mov aaa xchg jg mov push xor stc mov mov mov sar add push mov add add and or jl jo mov (bad) rcrb pop fistpl clc aaa mov ds dec (bad) ss fdivrl push cmpsl (bad) lock add rcll sbb cmp outsb std and inc pop or insb aam pushf clc aas and popa mov add push mov jb pop mov pusha push fildl cmc sti sub push fdivrl mov jp push sar add fidiv adcl ret sbb cmp fdivs mov or add push pop push rorl leave ja addr16 sbb sbb pushf mov pop mov mov xchg icebp adc stos add repnz inc jae add mov rolb jno aaa sub mov ljmp add and bound leave mov mov clc popf mov in cld pop pop mov add iret push jle pop xchg sbb test dec hlt fisttpll repz push dec dec pop imul mov sub std flds pusha lds push loopne cmp mov xor jl test mov and xor jb jp dec (bad) pop cmp mov xor mov rorb push ficoml jbe add loopne enter loope inc (bad) cmc fstps sub pop loop fwait sub add add dec add js jne mov fwait xorb mov sub out sbb das push loopne call xchg lcall xchg pop cmpsl roll push mov mov pop mov cld daa cmp jbe int3 mov lahf and adc pop shlb mov iret add lret mulb test jnp add scas repnz pop fstps add out pusha jge ds sbb imul pop jmp fwait fs dec jecxz xor sti outsl jo addr16 (bad) sbb mov xor mov pusha js push and (bad) and mov and enter jb fwait cs in fiadd idivb in int3 add xchg pop mov cmpb out dec sahf fcmovbe add mov das xchg jl push (bad) push sbb mov and das inc inc nop mov push enter ror dec push rcl pop aaa and or (bad) cmpb hlt mov fisttpl pop mov xchg ficomp push fs test fwait (bad) rcrl mov mov fs inc aam outsb pushf push stos mov mov add lahf or popa push mov sub (bad) xchg out sub jae (bad) jp mov jno xor adc add fidivl adc jp xlat push out loope or mov js insl xchg lcall out cs js dec or imul leave frstor repz push pusha push push inc mov xchg fs ljmp pop insl (bad) dec cmp dec dec fadds fildl jnp dec test mov les cmpb inc xchg xchg adc outsl jmp add aad jae xor jae jo pop cmpl mov aas test sbb dec icebp sahf nop in mov adc adc test js mov mov jmp push sbbb lea xchg out add cli jb mov subps xor xchg cmp outsl mov add pop rolb mov mov aaa pushf (bad) jbe and aam daa and fwait cs add int aaa jo push loopne scas add add stc cwtl icebp stos xor cmpsl push mov push xchg outsb aam mov dec or add fnstcw lret shll fmull std or mov (bad) aas or jne jl jnp das lods pop rcl ljmp pop pop pop roll fidiv jl adc xchg add sub push xchg sbb or (bad) jg sbbl stos xchg and add mov sahf imul or jns mov cltd sbb push dec add movsl jns mov xchg add mov pop in jnp and js test rcrb imul lahf sbb cmpsl sbb fsubp (bad) push mov xchg cmp lods inc xchg mov xor sbb xchg xor sub pop mov stc adc dec lea fbstp daa cli test xchg stos sub test mov mov aad jg mov add add sub ljmp notb sbb lahf fndisi(8087 adc std mov xchg inc sti xchg (bad) or dec pusha outsb lods mov orb (bad) loopne or negl add je testb push push mov add xor leave push add adc popf repnz push mov loope in pop (bad) (bad) mov or pop jae notl jno movsb in mov cwtl imul inc cmpsb pop push in dec xlat enter inc cs data16 xchg int3 mov pop movsb daa pop out outsl (bad) repnz xlat xchg push jmp or test push xchg add repnz arpl imull xor mov add paddsb fstl popf aam jb xor mov mov js jnp sti mov outsl jne scas cmpsl (bad) lock mov sub test inc xlat loope sub imulb xchg inc lods hlt jge add push decb out xchg (bad) sbb inc (bad) add movsl cmp push int3 loope,pt test shll icebp inc cmp mov fnstenv or sbb mov cltd mov xchg add pop inc add les inc jne nop mov inc mov push sub xor xchg pop jle fimull daa or push bound call ds add or rclb add cmc scas sub cmp fucomp xchg adc iret faddl (bad) xchg push in dec pop or (bad) xor roll add adc (bad) xchg mov and xchg mov mov push cld fdiv lcall in stos outsl inc add inc pop xor cwtl decl and dec xor add testl or pop nop pusha dec stos rolb push imul movsl les push test cli sbb lahf xorl jb xlat jns dec add icebp clc xchg ds repz sub icebp imul adc push iret jp pop in adc add jmp pop les push rolb leave icebp dec testb mov aas adcl and jne aam cs jno dec rcl test sub and pop adc dec sub xchg add jno inc sub pop lcall sbb das jnp jnp adc fistp jge or sub sar sbb cmp outsb and xchg and mov popl or leave sbb xchg mov sbb jp clc daa xchg inc (bad) cmc stc pop add imul cmp mov dec adc add mov push rcrl sub aad add push push pop (bad) fsubs and pop shrl push pop orl dec popf jbe sub mulb sahf scas add pusha rolb push lods cmp stos push and add orb mov sbb and dec mov mov mov add mov es call adc rolb add inc testl sti adc mov dec or in dec icebp fdivrp sbb and sbb pusha iret add mov leave lret add pop pop add fisubrl pop and popf and sub dec pop adc aas insl pop pop (bad) shrb cmp not pop and mov jb (bad) pop mov xor test sbb jbe les mov adc test xor (bad) loopne arpl xchg bound fldl add sbbl std jb ss es hlt dec push sbb adc popa inc shrb mov les sub jmp cmp add inc in xchg mov bound push adc xor adc mov insb loope pop and push cmp daa cmpsl inc add dec sub add je inc xor xlat test pushf mov cmovl pop push lods stc adc pop cmc sub mov dec int out cmp cmpsb push jbe std push adc cld scas divb mov and repz out push enter loopne pop add push cmpsl add lcall or sarb sbb addr16 enter adc lock aaa inc or mov ljmp pusha or jle popa mov jne or addr16 rcrl or jo jmp (bad) sbb mov (bad) mov xor adc xchg pop cltd push sub mov in stc cmp repz add jle or andb or insb xchg popa mov test adc cs stos sarb cmp ja mov es or or in adc lock pop sbb inc subb mov pusha mov roll mov clc popf jno add jg mov xchg and cltd add jnp mov mov add repnz jecxz (bad) fsubrl pushf jne pop in xchg ret cmp rolb movsb xchg lret outsl dec daa lcall pusha stos fs jl pop pop sub ffree adc push pop pop nop and ffree popa add sub and push je mov cmp sub adc xchg std ss jmp push push pusha jl or add iret addb pop or decb insb mov dec pop int3 pop lahf movsb mov jg aam (bad) mov xchg lea inc addb pop (bad) cmp outsl dec mov lock movsb pop scas in lcall pop pop mov repz cmpl or jae or cmpsb push loopne outsl mov dec pop cmpsb mov jnp in nop sbb insb push jnp fs daa pop pop out imul scas outsb cmc add mov loopne xor dec dec sbb mov add cmc xlat popf in pop inc pop mov scas je scas push add mov jnp daa add cmp ret sahf das maxps (bad) xchg push pop stos movsb dec cmpb leave xor sbb mov hlt ja fisttpll clc int xchg pop outsl loop pop add sub dec mov or add inc (bad) pop dec aam fldt jbe mov pusha and mov popa out cmpsb movsb pushf ss mov and loope push or jp pop cmp jnp loopne ds std jns sub or nop cwtl jnp test pop shll pop sbb int adc xor mov add mov popf adc jo sbb xchg cwtl and or mov sbb or dec mov jg adc jmp add sub aaa popw test add aaa mov aam je or push sub stos aam mov popa popa pop push or ficoml add inc popa das sub lods (bad) mov leave dec inc subl pusha sub sbb cld xor add sub subl ss and and sbb xchg xor je mov or js mov popa dec push in out cmc and daa icebp adc aam lcall pop test movsb add mov xchg adc decl lahf jbe dec pop test lods xchg pusha out adc out les mov in push sbb (bad) loopne or adc sub testl and or adc (bad) xor sbb mov inc mov mov mov adc cltd std jl add and cmpl arpl ss fbld movsb movsl loope fidiv mov out xchg adc pop xchg ficomp imul jb or mov inc movsl jl (bad) in lock xchg mov adc addr16 mov clc cmpsl inc insl add mov sti rcrb call jo jae rcl pop push es cmc add mov cmp and add in and aaa xchg int js pop mov xor insb adc clc xchg dec sub (bad) add pop adc cmp or addl adc mov and mov xchg inc push popa jno xor xchg cltd pop loope fwait shlb pop cli nop popf in aaa incl dec pop xchg xor and jmp (bad) pop sub imul aas mov sub and fcomp loop pushf dec mov stos repnz add rcr js fucomp in add inc mov pop or cs inc (bad) movsb pop push das push mov aad pop sub out insl sbb (bad) pop out aam arpl xchg dec sub loop lea sbb movsl inc add adc xchg cmc and cmp mov fist (bad) jl rolb ja pop gs xchg fldt or rolb push mov jmp mov pop dec add rorb pop rcrl adc lahf mov xor stos jecxz shr movsl enter imul adc xor or rcrl cmp and adc inc push mov je rcrl iret pop adc push fwait pop pop jg aas aad orb sbb pop jge xlat dec inc add out cpuid mov pop insb mov push xor jns in cld js and push jno jg dec out std movaps das pop jmp push mov sbb fist mov cmp mov outsb jmp xchg test or leave push pop push ljmp xchg mov pop and outsb push push insl pop sub jmp mov ret xchg aam in xchg aaa inc adc sarb jg add nop push or pop inc mov mov in movsl arpl out sub out xchg test xchg out inc push je xor in mov lds daa push pop std inc test cmp scas stc aam or jl pop xor push push aad or loopne es addr16 adc dec out cld jmp aas add (bad) pop scas push mov aas shl pop data16 adc cmp clc fisttpll lock jecxz aaa jbe push jmp cld push jmp add cmp orl cwtl dec repnz out inc not sbb pop int sub cmp jnp mov add adc inc fwait add pop test adc ss and fstpl hlt shrb ret (bad) cmp stc stos and mov mov xlat dec dec out sub mov sbbb loopne ficoml fldl mov cmc cmp ljmp adc ljmp cmp dec xchg inc inc lcall test cmp adc add addr16 pop xor dec pop push push nop push add and pop scas fdivl rorl (bad) cli clc cmpsb orl pop popa add xchg popa add lahf imulb sarb inc rorl push imul jnp out push jg ja fbld push mov mull (bad) repz lcall lret and inc pop imul xchg (bad) pop (bad) or loope leave pop inc (bad) push jne faddl sbb add loope aaa sarb push xor imul (bad) pop xchg sbb ja dec add aas jg ficompl lret popa jg subl rcrb insl aas mov pop dec (bad) (bad) cmp push push jge cli push pop jae add sub add xor out dec aaa push jno lcall dec push mov add sbb cmp adc hlt (bad) rclb loope gs cs jb push ret test jmp lahf ret inc cmp pop sub pop sub (bad) repz pop fdiv jmp movb push xchg xchg call mov push out jae sub (bad) rcrl xor js jno cmpsl or sti clc push add xlat push in pop pop mov pop mov sarb cmpsb jg or or ret push out pop daa lahf mov sbb mov in sbb stos gs push inc inc dec sub adc out add or daa fimull or inc shl xchg imul mov or je cbtw adc int aaa (bad) jg jmp or rolb sti dec cmp push pop addb add sub (bad) shl add jmp mov add pop xor push (bad) cmp js rorl pushl lret rcrl aad out push pop mov jecxz das std orl xchg rcrl int3 lcall add push or add popa (bad) cmp (bad) pop mov rorl int3 loopne fs push call and jnp mov loope aas shrb test lret ljmp sbb cld jp inc or scas hlt jge mov add (bad) aaa data16 orl fsubr push push adc cmpsb push out push js add pop pop xor pop int3 ret in sbb dec test push dec cld shl push sbb in dec pop lret mov (bad) les scas xor jmp or jae dec icebp stc and inc fstpt adc jbe jge pop out push sarb pop test movsl push call cli ja aaa inc jns add jb or xchg movb lret cld lods inc dec sbb test sub nop aam or xchg pop mov or mov aas clc push cmp imul out cmpsl (bad) jmp add and ret sti adc mov popf (bad) sub dec cmpb es mov and jns bound (bad) negb (bad) bound icebp or mov or jl xor mov add xchg jo dec add pop add inc sub pop add pop dec dec jne bound mov or jmp in jae sbb stc push aaa out popa or cmp jnp xchg sub in sub fst jns dec sbb lret jmp or nop in lret enter ja sub pop xor hlt xchg sub lock (bad) leave or repnz jg fmull or push (bad) out push xchg mov ret push mov das bound cs dec lcall iret add movsl xchg es and daa dec pop leave cltd xlat push xor push or add mov fmuls clc dec ds dec in sub das mov bound xor shlb lret stos dec xor (bad) stos fistpll cmp mov inc stos fsubl out mov add dec sub pop push push jnp pop scas int3 jnp adc int3 jmp adc jno mov imul lds add jmp mov and or adc fs rcrb mov cli popa lcall idivb fcomi jg jp mov mov push aam push pop lods push and jae xlat lods orl (bad) xor inc xchg xor inc mov sti jbe test add gs push cli mov add negl ret or fildll lods sahf aam or jmp push jns adc test testb ret and pop scas mov adc repz adc sub pop add add xchg and clc add push leave cmp sahf loope push ret pop inc and mov pop fdivrs pop xor es pop cmpsb stos jle aad pop cmp icebp sahf or cmp cmpb dec push xchg xor ljmp cmp pop dec add (bad) cmpsb sarb push jnp xchg mov rcl stos mov addl push idivb dec das cwtl jnp insl mov xor push mov xchg jne jle push data16 roll add dec movsb aaa add call popa jae xchg imul pop sahf sub ljmp std adc aad test in add lret pop pop pop subb fildll (bad) xchg imul jle js imul das add push jb negb sbb in scas popf add or (bad) and sti (bad) mov rcrb inc loop dec inc push into addb (bad) insl pusha dec popa adc cmpl cltd fistpll outsl mov or add ja mov ja pop jecxz subb mov adc cmc outsb out lea fs xchg fcoms cmp jmp pop ret mov ret inc imul or aas psubsb js cmpl loopne jns nop mov iret mov rcrb jg add test inc out rclb js jg add iret pop ljmp arpl andb insb cltd inc test lds mov imul (bad) fsub (bad) push test decb jno and out lea push jle nop aad push jg add mov push ljmp jns or sahf dec xchg pusha fwait and cmp add (bad) popf mov push pop inc sbb in enter push jl jmp nop fstpl inc mov movsl andb lds jb cs and sar dec mov mov bswap inc add gs call pop addr16 cmpsl inc ror add jmp and outsb out mov push push mov mov test mov xor into dec jno add loop test push mov add int3 sbb xchg add xor das and or js or nop add lods fisttp xchg shlb or mov cmp data16 mov add or dec imul add mov cmpsb pusha out push add mov cltd xchg and push and add push cld test jl fs or ds adc push sti cmp pop sbb popa lock pop es mov jo lods cltd aam add ds and arpl xchg inc and add scas pusha addr16 scas add mov or hlt in push shlb ds incl xchg fldt pushf pop pusha mov dec out data16 cmp inc stc add push xchg mov lock xlat call hlt (bad) cmovg push outsl xor adcb sub je (bad) xor adc movsb lcall cmp inc and bound call dec (bad) cmp sbb cmp add xor dec sbb test addl hlt (bad) je mov repnz jl decl adc sbb nop jge call xor rclb jmp cmp jne add or jb or pop mov and out dec mov or outsl jge int3 dec adc rol loopne in sbb jno and mov pop xchg jbe bound sbb mov inc xchg shlb push add pusha pop rcl jb xchg adc shrb add mov outsl dec or cmp mov jmp mov sub sbb cmc pop cmp or clc xor fstpt sub inc inc test aaa sbb add inc ds cmp sub cmpsb dec push addl dec adc call sbb xor cmp pop and add inc out mov dec push push test call mov ss add in push fisttp add fnstsw push rorl cmc pop dec stos xor rcr cmpsl xor dec xchg and (bad) push mov mov les or cmp pop enter ds mov call notb add rolb popa aam dec nop movsb pop cmc mov add in je jne nop or outsl in or mov fcomi and cmp cmpsl fnsave fs nop sub in push add test push dec insb and and add mov (bad) xor add push or push js push aas add outsb test jge sbb lock sbb mov cli aas icebp add stc mov mov popa sub fsubrs sub shlb lret pop inc jp les cmp add aaa fstl test inc in sbb clc (bad) int push pop adc pop add jne int3 cmp pop clc push test aaa pushf push mov popa arpl fmuls mov add daa bound outsl pop add sbb add pop (bad) (bad) or pop lods mov fs pop mov nop test add and lods push pop mov sbb push mov push add xor shrl pop int3 push je adc add (bad) jo cmpsl jno mov add cmpsb orb add xchg pop cmp sbb loopne add scas inc push rcl lock (bad) je loopne fsubrs cwtl ret inc test jmp mov lods call xchg or mov cwtl or xor push adc testb jnp nop hlt jle je sbb xchg jb sub mov adc push inc mov jle add jmp popa push add (bad) pop scas and xchg js bound scas (bad) and test pop in mov cmpb lods mov cmpsb add cmp pusha js loopne pop and pushf call iret lock jno popf fsubs add stos out mov (bad) sbb dec mov test or iret fs fcomps (bad) enter cs fimull mov mov call inc xchg rolb cmp enter xor and les repnz cmp mov add or ret cmp pusha pusha xchg int3 vmovapd and out or pop andb adc jge aam mov or sbb std inc pusha fisttpll adc add call or cmpsl fadds cwtl lock dec adc add pusha mov inc push jne jae cmc js cmpsb cmp jg xor and andb or js call outsl push fdivrs sub loop inc adc movsb orb dec xchg nop jl pop (bad) icebp and out sbb test test jne xor and or in or in (bad) push (bad) push pop add adc add lahf in or orb mull xchg add adc jo lret mov sub mov jnp lret sbb xor xor and loop js adc push sub fwait stc lds enter fdivrp or or and sub rolb sbb pop test pusha xor movsb aas stos lcall je push out add ud2 lods xlat test sub dec jl and stos orb and inc loopne xor xchg or ffree mov les xchg rolb push jp pushf xor dec dec add cmp sub or bound js fadd lods inc cmp pop cwtl or test cmpsl out ja dec sbb push add int3 xor dec add adc rclb dec push mov pushf (bad) mov inc xchg (bad) pop push addr16 push nop push sbb cmpsb add cmp test je mov cmp add cmpsb lods ja dec enter rcl mov punpckhbw roll xchg test xor ret insb jo lock mov cmp orb mov adc push pop xor adc push test mov mov or cmp lds in pop js fdivrs jne xor (bad) mov mov dec mov les xor jl push lods test ljmp imul bound cmp xor or cs mov in les mov sub inc call jo nop jmp cmp bound dec mov test sbb adc jo bound add scas lock (bad) addb or adc mov pusha popa pushf push or ja xchg subb stos ss loope add mov rcrl cltd sbb shll sub mov jmp fidivr lods pop xchg insb cld in xor sbb sbb out (bad) push orb pop fisttp mov sub data16 dec sub or and inc push punpckhwd in xor in out mov hlt enter add je sbb add jp loopne out mov jmp and out and mov sbb sbb push add mov xor fimul xor or movsb fisttpl outsl dec or xor or adc out and mov scas lods dec sbb lcall mov subb scas es sbb mov ja loop cmp adc mov fcomip xor lods (bad) dec into add or cmp sub aaa mov fisubrl xorb adc cwtl adc cmp and xor fimull mov cli bound negb cwtl aad cmpb pusha rcrb lahf xor push out mov bound jb mov stc aad test clc incb xor loopne movsb test dec or mov ficompl add movsl mov pop mov addb add inc test dec push sbb jmp js cmp cmp add cmpsl mov enter sub or inc nop add pop insb popf mov push orl inc jae cmpb addb inc mov mov fimull rol lods aaa mov dec rcrb call insl int sbb inc repz and clc unpcklps mov fistpll push shrb pop xor adc push test pop mov and cmp add call inc xchg sub mov pop ja pop or mov je cmp aad mov icebp adc lret pop cmp xor cmp dec jns lcall shrl nop or xor frstor pop roll (bad) xor popf mov jbe cltd push fwait mov loope rcl repz pop pop imul fistp scas or rorl leave cmp adcb push pop xor inc aad mov stc pusha mov add inc stos push icebp xchg cmp add add mov jl push call xchg sub lock stc jae adc pop call add mov pop aad cmp inc inc push iret js sub mov sbb fcomps mov sub and in dec inc mov pop bound jne int outsb testl mov rcrb push test dec add subl jg pop push xchg cmp rcl inc or add lcall shll xchg lock or cmp ja inc mov adc pop test mov and adc nop jo and andl and mov pushf aas inc aam add cmp rcrb xor icebp mov push lds clc xchg cmp add jmp andb cmp addl enter rcll mov sbb or subl xor inc push adcb fwait or xlat leave rcr pop pop push add mov push cmp pop cmp fldenv add adc jp xchg jne test in mov (bad) and push sahf sub adc add adcb cmp and add jbe test add xchg daa mov cs leave mov push sbb cmp mov mov or insl rcrb adc cmp xor xchg test cmp jecxz push and into test and sub mov popa mov das mov adc jge and mov icebp sbb cmp jno cld nop push inc outsb mov or loopne (bad) rcrb or stos lods push mov dec sbb roll lock clc call cmp shlb loopne fdivrl mov sbb icebp jmp mov cmp adc or inc inc and sub add sti lods stc pop xchg or in rorl fisub subb add loope mov and adc or fwait pop es les mov add push cmp clc or jo mov add mov inc clc fs dec cmc pop xor test add clc push mov js mov pusha sbb mov mov adc roll or fnsave clc pop lods push mov cmpsl inc nop (bad) mov push int3 add mov xchg push popa cmpsb mov cwtl add or fcomps mov sub loopne scas pusha inc rolb dec outsb rorb xor xchg fdivrs popa cmp add dec rolb addr16 shlb jns inc adc and adc rolb cmp leave es call sub movsb mov inc mov cwtl fisttpll insb movsb (bad) loopne shrb test jl xor adc sub sbb jne xor jo cmp cmp mov push adc in insb (bad) inc fcmovb adc out xor and mov or pop inc push and or rorl jns sbb dec aaa dec in inc loopne jl adc mov inc out xchg push adc dec cmp mov mov lods push pusha test and fdivs add imul fldcw push pop je add outsb cli addb or pop or imul push fsubs dec mov jl loop bound sub je or ret or add adc jnp adc rcl (bad) xor mov mov movsb mov mov add push mov jns mov and arpl sub into dec xchg sub in iret xor xchg inc pop push cmp notb mov movsb sarb lods sub adc add fmul shlb mov jge cltd sub stos xchg je rdmsr insl rol cmpsl cmp repz sub sbbb lahf lret in int3 ds ror ja pop fldcw mov cmp adc sub (bad) pusha mov mov xchg pusha jmp mov pusha cmp sbb mov cmp or xor mov cwtl out cmp mov and test pop sbb js sub push loopne rolb jo dec es lcall rclb inc and cmp stc mov test push or sub add js mov xor fmuls xlat es jge (bad) movsb mov sub adc rclb pusha or mov mov jl sbb add push sbb sbb pop pushf add icebp pop je clc xchg je mov movsb loope je jmp addb insb (bad) adc mov pusha cmp push pop int3 subb sbb lods inc shlb hlt xchg enter adc jbe or out orl jne sbbl and out add lcall jg cli cmp loop xchg in test mov mov in mov fadds push nop xchg pop or mov or loope and addb int3 or les pop rorb dec sahf xchg lods (bad) call scas ret xorb (bad) hlt jle sub cwtl shll or cmp sbb or sarb or sbb add fmulp mov xchg and mov mov mov daa (bad) loope push bound pusha lock sahf xor or (bad) data16 sbb shlb push pop (bad) xchg loope daa int fmul fstl enter enter pop aam popf subl sub pop add out cmp loope adc lahf pusha xchg mov sarb add sti lcall ret or push inc push pop popa jp cmpsb xchg and pop test adcl jne test jle pop or mov and push jge xlat clc imul push hlt in or add adc jns loopne adcl fdivl dec lods mov (bad) cmp aaa add mov sbb pop aad sub imul and insl mov adc xchg call push sbb pop sub mov or nop add mov lds pop cwtl cmp sarb and (bad) hlt adc fwait insb or pop insl in or cmp add int outsb xchg rorl gs loope jl shll in pop fs dec call cmp test adcl add pop push mov imul mov jle mov and mov daa loop cmpsb loope push lea pop xchg xor clc dec int and cmp aam sub jle mov xor or xchg add jmp out cwtl (bad) jne and ficom inc adc jl pop cmpsl (bad) mov xchg fmul dec inc insb movsb mov dec outsl push mov in jl ljmp shrb jecxz cld inc and jmp in lret (bad) mov pop shrb scas shlb in cmp xor test add pop add add push scas popf sahf hlt aam out imul mov cltd dec add testb fwait rcl divb scas lds and cld daa dec sti sbb fmuls lock push pusha adc add jle in out aas scas jnp stos stc mov pop jecxz daa aas push push in repz mov insl pop fwait xor jl mov popa (bad) sti inc nop inc inc fwait pop add pop cwtl add (bad) xor js add inc inc lods insb pusha mov (bad) sbb mov or add js es sarb inc cmc cmp ret bound lcall jmp adc xor jl je adc xor mov add fisttpl mov js cwtl sbb add insl or aam divb cmp js jg shrb insb js clc aad push sbb in fsubrl mov inc test xchg pop or pusha sahf enter pop dec lahf or sbb adc call pop js mov pusha in xchg aad cmp push sub pushl ret adc dec inc js add imul shlb loopne cwtl mov or lds movsb inc lods mov and mov jne pop mov test (bad) cli xor addb cmp rorl enter js and push dec push movsb repz lods and mov xor cmpsb jb hlt movb fnstenv test adc jp fnstenv addb xchg (bad) mov aas decb xor inc mov or dec (bad) fist int3 and pushf dec andl mov insl mov sbbb jmp dec or jbe rol call lods rolb push std ljmp and fimull xchg and (bad) pop insb sub xchg push add jae jle jp push dec and fs outsb enter sbb or inc xor and xor fsubr les xchg push pop pop xor dec fbld shrb cli loopne adc mov sarb sbb adc dec pop sub xor and add sbb out push movsb enter mov mov add arpl adc xchg add or sbb mov adc lret pop cmpb and push test arpl jns inc mov inc dec stos push dec and or outsl adc xor push sahf call mov hlt insl inc sbb jno ret loop (bad) pushf mov sar lcall or enter adc and lahf and sbbb (bad) jo in sahf inc or cmp add dec inc movsb push add mov fidivrl fisttp iret mov hlt add fldt push xor aaa pop call incl mov arpl push scas ljmp xchg pop dec sub push mov adc and sub les dec jl pushf lds clc (bad) cmp add mov add fnstsw or sbb cmp popa movsb mov sbb jnp add rcrl dec inc adc or out stc hlt cld popa xor xor movsl jmp loop push sarb into add dec lcall insl jmp and pop fwait pop xchg repz push jne add push lahf mov int sarl fdivl (bad) dec or pop fs jne jp xor mov sub add jp test sub xchg test lcall or in in xchg and xor mov fnstenv popa xor ds and or rcl (bad) addb lds daa push push add push sub cwtl cld fstps mov pop xchg cmp test movl push gs jmp pop pop mov jmp lcall or xchg adc mulb pop int clc dec xor or shll mov outsl stos push in icebp pop aam and xlat out sub or test push dec sbb (bad) fwait jecxz inc lods or mov mov repz shl inc mov mov jg inc iret mov (bad) xor lds shr fidiv sbbb mov add ljmp fcmovnbe hlt (bad) cmp repnz mov push lods jne add sbb jnp cmp stc add pushf jecxz xchg sbb add test xchg fs cwtl pusha mov insb sbb aad push xchg dec rolb sub or cmp fadds lea xchg sbbl gs inc add fildll pop mov lods mov mov mov inc xchg cmc repnz mov xchg mov sub call adc das clc adc pop enter pop std add addr16 pop test cmp push jge cltd frstor (bad) xor and xor insb sbb loopne pop cmp outsb cmp in daa pop or lahf xchg mov test movb cwtl movsb insl sarl cmp cmp mov nop adc loope movsb loop int3 cltd or fsubp mov xchg or jl mov add and or fsubrs sbb add adc rcl jb daa fimul push jecxz mov insl cmc push push movsb lret sahf and xchg movsl adc pusha jbe shrb pop leave loopne push xor pusha inc and jle and push push fdivrl mov cmp ret or mov cli push dec inc lods xor adc nop orl add add inc int movl mov push push sbb xchg mov mov and fdivrs aas mov popf mov jno add fdivrl fadds in adc inc and pop int3 sahf jge add jae outsb ret push and mov arpl cli pusha jns mov in mov lahf orb xchg inc push imul (bad) mov and sub jg push lock mov mov jne pop push fisttp incl rclb xor mov aas jo dec and aaa inc push add push fdivr sub xor aas (bad) imul adc add inc fidiv lret sub and js sub mov jmp sbb inc inc mov sbb and push ja test dec cwtl xor nop movsl cmp dec cwtl xchg add jo lahf hlt xchg (bad) and nop add cltd leave push or loop and dec (bad) lock bswap jmp xor mov arpl js add mov fcmovu inc push add iret shrb sbb cmp (bad) lock (bad) push stos hlt rorb adc arpl or mov push loope insl hlt call (bad) cmp cmp shrb in loop jne subb cmp or jbe add lret pop mov pop mov adc pop mov push inc cmp mov pop and lock xchg dec repz lods add mov adc inc adc mov es mov (bad) cmp xor shr in cmp add jbe cltd fldenv jae test xchg or mov scas and in add call adc push adc fcmovnu pop aad mov mov push inc and adc loopne push sahf into addr16 inc fdivs pop aad xchg cmp out cmp push ljmp adc cmp push bound mov mov mov jne jns stos ds jo dec push and sbbb inc cmpb mov and mov mov popa andl dec test test fwait imul inc pop mov lods mov imul jl cmpsl cltd nop std pop aas and subb pop jo cmp sub cld inc hlt sub add add fiaddl jmp fdivl cld or cmc leave xor jae and mov faddl push cmp push xor mov ficom pop jb sub sahf out lds movsl icebp pop pop or pop add or in mov bound mov add scas mov inc add lds rcl cmp cmp daa and and in mov push pushf pop (bad) outsl lret xchg aam aaa xor or inc xor add jl movsl (bad) loopne push mov add add leave sub add fs cmp int push (bad) test shr popa lods mov push cmovbe pusha icebp and push push push sarb cmp jne add cwtl mov adc xlat mov repz push pushf test xchg sbb ljmp inc es add or cmp imul sub pop jmp cmpb sbbl loope les pusha xor rcr mov out sub mov inc cmp xchg popa sub (bad) xor fsubl inc mov ds bnd enter mov and add mov jg les push xor adc adc mov push jne adcb mov jl jle (bad) gs cmp add into push inc lods clc inc stos imul icebp mov (bad) aas cli inc imul lret inc push or jmp mov inc push daa cli cmp xor je cmpl imulb pusha add nop lods int inc fnop sbb loopne data16 scas ja roll nop and ja out sub (bad) pop mov mov call mov dec inc clc sub aam mov jns pop add btc dec in out push loopne push scas inc hlt add out lock xchg dec ficomp ja mov jp decb and and mov sbb add sub inc mov mov adc (bad) jmp cld xor sbb push inc cwtl cmp insl xchg fadds pusha push out add popf into imul jb clc push arpl push sub pop add outsb les inc inc insl repz or lods in add clc mov add mov cwtl adc leave outsb sbb adc or dec lcall rcl push inc mov xchg xchg js xchg js add stos cs fisubrl les lds loop cmp push add xchg lods xchg mov xor rcrb int in pop inc sahf pop popa mov scas test cwtl adc pushf sbb mov cmp mov lahf dec (bad) lock gs push add scas add xchg ret or sub dec push cmp xchg mov fsts mov hlt push cmp hlt int3 cs jne hlt cwtl xchg imul rcrl lods mov sub pushf nop test movsl jmp push mov mov bound cwtl and into movsb lret jle cmp enter xchg (bad) enter push pop pop xchg xchg cmp add push adc lds add mov cwtl add push sbb in pop rol lock lea adc nop enter pop dec lock mov lock fmull and adc push dec or mov hlt pop xor ret loopne enter xchg dec adc enter sbb stc movsb or pop rclb imul jl call into insl rol or and cmp in mov repz sub adc jl arpl ret pop lock xorl pop dec add dec pusha push and sub dec xlat insl aam dec pop jle mov or (bad) js dec sub rcl mov pop int pop cmp mov add adc fmull daa es mov add stos push sbb (bad) lods xchg and scas push or sub cmp inc fsts fsubrs sbb (bad) mov fcomps les (bad) mov pop fisubr push mov add imul mov test fdivrs or mov add add stc aam test mov loopne fnstcw add mov add or add or fwait js add (bad) test xchg inc movsb push cmp pop cmc sub xchg add sbb roll jbe out push decb cli frstor lcall into fcoms jl repnz mov mov cmp fisub jmp stos pop aam mov add sbb mov inc push (bad) cmp ficom lcall popf idivb mov push fcom rorb or xchg into cmp sub push pop daa pop lods ja add or loope ret cwtl pop mov notb mov push fdiv xor pop inc dec mov cmp xchg pop xorl or mov rorl push push rcrb sub mov mov sub dec cmp inc lods fcmovbe cld xchg pop cmp jbe bound enter mov bound and pop pop dec pop adc mov add adc out dec aam push in nop dec cmp add add pop mov mov jp pop movsb (bad) adc dec cvtdq2ps aas icebp xorb imulb ret ret pop fdivr push rolb je and inc xlat orb push rorl and or std fwait je push cltd pusha aaa pop rclb test imul or add mov cmp add fidivrl mov or jne push add rclb cmp sub mov jl adc test jne lret push or ja mov adc ret pop mov stc (bad) lret pushf pop mov cmp cmp (bad) aas mov pop mov mov lcall push shlb inc push dec aaa (bad) or scas add fcomip push adc mov or pop mov jbe outsl jmp fcmovnu pop dec test js mov push loopne mov add scas loop mov aas mov sub jo push mov mov psrld dec xchg add mov sbb mov jmp add loop cmp pop mov jo add aaa ljmp mov xor fcoms jb enter pop cwtl pusha pop outsl mov movsb mov jle (bad) pop and jge sub dec xchg clc (bad) ret call xlat push push out sbb add inc adc lret bound or and mov rolb int3 inc cvtdq2ps (bad) popl mov in mov or xor adc dec int3 pusha add test cli mov loopne rorl mov add jne cmp mov jle idivb mov sahf out pushf (bad) fcmovu repz cmp add pop imul mov sbb sbb push ret in in lahf jg mov in and pop xor movsb shrb or inc pop jo jns js ret or jbe int3 adc aas mov sub push int jg dec add movsb lods adc stc adc insb in cmp ret or or cmp and into add enter mov test dec pop movsb loopne cmp (bad) pop enter (bad) cmp lret mov (bad) mov clc (bad) and shrb xchg pop push dec hlt js mov adc cmp pushf cmc jg cmp cmp sub (bad) insb cmp cltd xor mov push aaa aaa mov pop jns movsb cmpxchg nop and fdivl or pop push jne,pn sahf sub inc and push pop test icebp push dec or in pop mov out (bad) sbb pusha lahf aam out and outsb (bad) repnz insl (bad) or mov jnp and popa cmp mov adc add lock add xor rorb or scas add daa fidiv push das mov inc nop pusha cmp mov psubw add and xor push cmp pop pop aas test sub aam lret xor (bad) or sbb jmp repnz mov test dec adcl dec outsb mov mov nop xchg nop or test call imul cmp sub cmpsl mov es clc adc inc nop pop mov dec cmc push cmp xchg std sub faddl hlt into push mov mov jb or sub lea test jl pop movl cmpsb test lock nop pop push (bad) mov pop or rclb xor in cli cmp dec imul in sub daa inc call jge xorb dec dec fs cmp testb push sbb (bad) faddp js (bad) push and fs adc and pop cltd and cwtl rcrb mov and int3 xor sub xchg xchg in inc xorl mov cwtl or int push ret aaa adc sub gs dec lret add pop cltd jno lods jo adc xchg adc (bad) sti inc and push aas mov lds xlat outsl js xor call int sub push sbbl cmp popa xor xor test test mov mov push pop pop jg add xor mov sub cmp dec repz hlt (bad) sub sbb fstl test daa inc add sarl and ret sub adc fcomps xor adcl mov (bad) mov push js (bad) ds pcmpeqw popa out pop add hlt cmp pop push mov xchg mov cld data16 fcomp das ljmp hlt cmpb lock add gs dec jbe lcall hlt cld or enter jb mov dec cmp dec popa adc cmp inc xor fsubrs mov gs sub push insl adc mov push mov fst lock xorb subb les fdivrl lds inc je pop sub js dec mov mov addl cwtl sahf es xchg mov mov and and cmp dec adc and add xor cmp (bad) imul leave jo ret add lods rorl pop and xor fdivrs jae mov mov dec push sarb leave push cld pop push (bad) mov je push in jl add movsb aam inc pop gs jbe xor mov mov (bad) mov cmpsb xor stc push jno jle in jne pusha xchg push inc add js mov cwtl test mov daa aam inc insl pushf add nop mov test inc (bad) lret ret inc lret pop in or mov sub pushf addr16 ror cmp sbb out adc xchg sbb and add pop iret cmp sbb mov pop add mov xor adc and or mov mov and les rcrb stos std push (bad) and shll dec adc push lock add jecxz push sub or packuswb and jo lods xor sbb pusha and lds fldenv xchg nop int3 cmp add aaa jmp (bad) xor adc in adc enter lds cmp ret out cmp mov adc add push xchg popa xchg ds cmp sub jo dec out cmovo test int xor push xchg push (bad) pavgb cmp sbb test sbb js pusha jmp pop cwtl pusha xchg ss mov ret xor out mov orl jg test pusha add inc ret inc pop mov adc cmpsb mov mov and leave jno push into cmp jge insb dec scas pop mov and out add out inc cwtl stc and nop call cmp jo sub ficomp and fwait mov subl popf mov inc pop imul push mov movsb enter push lret call xlat and sub pusha add or stos cmc dec xor pop dec sub xchg jae pusha jecxz rcrb push mov push addr16 inc jge sbbl rclb and and add cmp test xchg push ret movsl int3 dec scas dec pop enter mov inc pop xor test repnz add lods data16 xchg xor int push (bad) in or mov or adc fdivs or sti mov test out xor int (bad) sbb xlat push or push and inc int les bound ret mov aam mov (bad) sahf lea inc outsl xchg in in into cld xor out fsubs xchg pop mov es push cli mov pop fs std rorb push mov inc rclb imul inc scas push jae xchg xchg add scas dec in int3 or call dec dec inc fsubs mov xchg or jp out xor sbb leave rcpps aas sbb scas add call pushf inc xor jno outsl popa mov add popa call lds (bad) cmp add mov aam adc push sbb clc andl scas or cld fdivrl icebp dec add add in icebp mov cmp or and rorb mov or shrb inc xchg scas stc andps lds xchg cmp sbb pop add xchg mov loope push mov je es sbb mov fstl out sbb outsl popf pop and adc push xor cs fdivrl jo pop add mov lret push and out sbb adc mov pop xchg mov mov add test push mov (bad) dec add jbe and jge or lahf xchg jl cmp imul mov es in push andb sahf xor adc jecxz lods data16 cmc scas popf addr16 jnp loopne call mov cmp sbb mov aad test jbe cmp bound add jecxz rcll cltd and dec add xorb icebp jno dec mov or loopne inc and adc test ficom mov jo loop push pop or cli jmp dec dec mov xchg outsb add (bad) je or adc aas out cmp pop (bad) mov hlt and jmp cmp sub aam fs add or mov jno ds lds fcompl jl or movsb inc dec or sub add repnz xchg movntq out pop mov xor add add out or cwtl mov and mov sub jmp (bad) pop insl mov mov xor stc inc test nop or ret add fs cs add faddl popf out xchg ds nop jmp and clc or mov push (bad) loop inc aam in fs inc inc adc dec test sub mov and out ja adc arpl inc hlt pushf cltd mov andl sub sbb cmp pop xchg imul mov subl push sub mov and addr16 (bad) mov jmp scas xchg faddl test add sub dec pop pushf cmp out or test mov in push mov pop add inc xchg int stos and xor mov cltd mov test (bad) test sbb and or dec sti inc repz push push push mov cwtl or sub mov repnz insb pusha out repz es mov aaa cmp lods cmp xchg arpl cs sbb mov adc sbb and mov mov mov sub test sbb sbb add popa addr16 push lods hlt mov (bad) in push or xchg jmp mov xchg cwtl (bad) inc mov (bad) fisubr sti and xor shrb andl pop jg cmp loopne lret mov add rorl xchg scas inc call cs out push jle shll addl xchg pop cmp xchg mov adc adc inc hlt (bad) pop mov sub add ret pop sbb mov sarb jnp mov fisubl jbe nop cmovae jno pop jo movsl insl add xchg jmp adc jo loopne xchg enter and mulb push mov and stos std or orl adc mov mov insb and dec bnd cmp cmp ret es xchg push dec nop adc adc push pop bound mov add outsb ds das mov mov test iret xchg cld pop jecxz add dec mov xlat add jns js outsb jg nop aaa clc cmp and and fmuls (bad) jbe cwtl and rorb (bad) jmp jnp cmp add mov cmc dec fs daa or and push xchg or test sub imul inc mov nop pop cmp xchg pop aam xchg dec pop add adc jge fstps add repz push je mov add mov cmp rolb inc lods sub mov xchg add cmp sub add xchg pop xchg mov es insl js xchg and xor cld xchg sub jl push inc mov mov testb and dec test enter mov xchg sub jb cmp push andb xor insb cli clc (bad) adc or bnd loopne sub xchg popaw out add call xlat add xor cli xor add ficompl nop dec imul or xchg cltd and je add dec xchg dec xor bound rcrb sub mov pop push jp and out or imul add mov sbb repnz cmp cmp (bad) and out test bound jmp sub sbb or and add mov xchg xor jo mov rcrb mov jnp negl dec push mov shlb insb sahf cmpsl xor test xchg cmp inc mov andb int repnz jp pop inc xlat je sbb and add into add mov xchg jecxz jne (bad) call pop (bad) and div add shlb popa add in xor xor add xorl stc imul push sub iret icebp sub imul shl lahf decl ret test add xor sbb and loopne adc add xchg jle mov loopne cli (bad) add fidivr int3 out enter add adc out pop lods nop cmp or or gs enter sub loopne jecxz add cmp cs adc xlat jno pop or sub add icebp mov hlt push (bad) repz addr16 popa xchg fidiv add sbb dec iret inc pop and inc fdivl xor pop cmpsb pop jns int or dec add dec roll in popa cmp and push jl jmp xlat scas movl and popl js loope xchg jl xor push and or rclb adc add jbe nop pop into inc shll push push xchg stos add sub cwtl cmp lock jno dec int push dec xor mov mov sahf cmpsb push int js test cli mov loop xor mov ds sbb or in int3 jge adc sbb movsl (bad) fsubrs xchg mov or scas sub shll loop push dec mov imul xor and js pop dec scas mov (bad) and mov mov cwtl mov push cmp or imul inc adc (bad) adc mov xchg mov xchg push push dec add sahf add push ljmp and lods rclb sbb les add cmp pop lock arpl into inc xchg adc push mov sub cmp dec push jle popa aaa sbb mov jns adc and pop push adc pop mov mov mov mov inc fbld adc inc xchg aam mov push mov pop je loope and pop fdivrs mov int3 sbb pop jecxz mov mov jle and sbb sbb pop mov scas add mov or pusha pop (bad) mov xchg enter mov dec fadds mov fwait inc lods inc cltd ficomp dec jbe cmp xor movsl xor pop push xchg cmp int3 or mov push mov test adc leave (bad) lods iret repnz fcoms mov lcall adc or sbb cmp leave bound mov mov int xor (bad) shrb inc or js and sbb xlat cli xchg and or sub and roll pushf iret add fwait sub es dec adc cwtl and inc add mov scas and xlat inc (bad) lock test rclb sbb add sbb push shlb push push push bound xchg mov inc test add inc ficoml lahf enter (bad) js cmpsb or mov fist sbb xchg mov repz sti fwait xor jo stos pop sbb pop xchg sub push mov mov rcrl sbb pop xor (bad) aad or jecxz jmp push add test insl cmpsb add xor pop aam and les pop dec pop push sbb outsl lret adc add add cmpsl sub (bad) xchg subb js rorl out mov enter ds insl and and or lods iret int3 and in rcl xor cmpsb cmp xchg xchg call ljmp mov or mov ljmp adc aad mov mov or sarb push or mov mov pushf ret shll lock inc sbb (bad) test popa add ljmp ret fucomi cmp addl mov aaa cmp call push dec mov add jmp cmp mov hlt (bad) lds mov xchg arpl or mov fucomp fsts push pop mov and add ljmp jmp dec movsl hlt adc xlat push add and inc movl cmp xchg andb (bad) lock add mov into nop inc inc loope in or adc dec add jge gs inc js sbb push loopne loope maxps subl sub orl jmp pop lahf push add js daa lds push add loope xchg in imul repnz push push sub hlt flds and (bad) pop xchg push leave sbb js sub add push jp mov int add test jo leave (bad) pop add mov pop add mov push jmp cs and popa lods das adcb cmp cld (bad) out and xlat push mov rol jae stos or and cwtl sub movlhps push push sbbb xor pop decb stos mov xchg jmp lock nop push push (bad) xor xchg sub cmp dec sub scas cmp inc in (bad) mov xchg in fldl2t lock faddl in mov add push (bad) adc addl addr16 imul test xchg dec and mov sbb inc mov cmc ljmp aam in pop xor add int mov bswap fsts pusha cltd enter add (bad) cmc movsl jnp mov jge (bad) xor sbb push in mov jns ja or mov orb jbe ds cwtl ss lods adc cmp sti divl mov or (bad) add add icebp add call jne insl sbb test inc lahf mov stc ja fimul bound add jle push mov shlb ret dec hlt out inc pop and pop stos mov push repz lock pop test fmull lock push insl add xor push je cli sub and cmp cmp inc idivl pop sub cmp pop sbb or jle fadd pop dec enter sub xchg mov adc adc icebp pusha in cmp sbb sbb mov fimul loopne (bad) fdivs js inc lds pop push dec pop (bad) jle or shlw mov (bad) mov hlt daa add in inc scas xchg sbbl cmpsb cltd mov dec add adc outsb xor iret cli jmp aaa xor push sbb out loop mov jnp mov or push pop stc sub fisubl add pusha mov aam lret dec cltd rolb push pop jl lahf rolb adc add sbb in add lea fs add mov cmpsl sub push rolb in cmc add imul scas call and or push adc adc sbb sbb and into (bad) push out add test imul stos mov imul sbb ss adcl pop sbb xchg and movb je add mov mov push pushf pushf into mov jno leave dec push sahf roll and mov add push push add cmp adc pop adc xchg push movsb pushf pop shrl out (bad) (bad) dec ret mov test add push mov nop rcl out andb pushf in or pop data16 dec es cmp mov lahf push xchg sbb push push add pop pop xor aas add or inc adc xorl push sub or push cltd xchg popf push adc daa cmovge inc xchg or add sub lods mov or inc cmp orl mov xlat xchg lea xchg sarb xchg add xchg mov or mov std xchg in dec cmp mov sub sbb inc sbb jne pusha mov rol mov adc mov mov add aad push sub fdivs in xor dec into ud2 adc aad gs jnp fsubrs or add (bad) jge push mov jb add into inc mov push int3 push popa (bad) sti xchg and out add dec adc add shrl lcall sub test out jg inc lcall push adc stos jp dec sbb dec adc mov mov and call inc repnz xchg dec pusha loopne dec pop jp mov orb scas xchg jo pop rolb jle mov sbb insl push addr16 jl test push cld dec inc mov cmp or dec int sub movl aad pop mov inc les (bad) outsl add ljmp stos cmpsb and xor adc les sbb cwtl fiaddl pop leave adc inc and sbb xchg test lret sub aad mulb xchg push out je movsb test mov jge test (bad) sub ret and icebp aaa fidiv inc push mov mov shrb fwait sub add icebp cmp movsl addr16 es pop sbb mov add pop (bad) lods gs sti dec jno add (bad) mov xorb or inc hlt cli andb stos cwtl aaa mov pop xchg push mov jge dec pusha int mov pusha dec lods test fldl daa mov xor outsb icebp (bad) cwtl ret fistpl jmp lret sbb dec adc sar dec xchg cmp cmpsb and push cli or sarb les (bad) aad or test cwtl xor add (bad) adc mov enter jge add add pushf push and add (bad) cmc pop xor xchg test cmp dec dec add push rcrl add sbb mov cmpsl inc add sarb jmp push lret sbb xadd add jno inc xchg fmuls mov cwtl mov leave push add bound repz cmp adc xchg mov xor cltd loopne inc add mov iret sub aaa mov pusha sbbb mov insb roll movsb xor xor jnp xchg sub (bad) js sbb mov mov test sub and or lds cwtl cwtl mov mov adc xor xor lcall mov push js js add pusha nop fsubs add leave pop dec ret stos pinsrw das fs les mov clc rol jl pushf cmp mov cwtl inc push scas lock sbb sub add movsb cli dec or dec pop call jo mov repnz adc xor or lret ret dec mov sub adcl subb aas (bad) mov enter pop clc add xchg orl add lods call adc (bad) mov leave push adc lcall pop fstl fwait xor jecxz je cmp mov inc sub ds loopne push dec gs fistp test dec orl cmp jnp mov mov cmc adc (bad) sarb sbb jo ljmp jg mov test pop dec fsubrs cmp jge cmpl add push jg mov dec out (bad) ljmp mov push (bad) lock sbb adc xchg inc sbb adc mov and mov xchg hlt adc mov punpcklwd ret dec pusha dec pop add xchg aas xor push and dec rclb mov or sub push inc jo and js mov adc cmc mov adc inc pushf cmp lret cmpsb xor dec dec rolb push iret pop movsb fmuls lret jl mov scas jns lahf imul movsb in pop or adc pop std xchg add add rclb dec aam mov hlt lcall stos push call test sub jns add sbb and adc test rolb lea sbb and mov cmpsl shll es push push and std mov insb movsb inc push and inc in imul dec test test mov imul xchg sbb adc ret repnz int3 or leave sub pop or and dec mov mov mov out push xchg or xchg pop fadd mov aas leave jmp push lea fs pop lcall xchg stos pop inc jmp mov daa imul mov sub mov gs or cltd mov and lea add pushf pop and and adc inc rclb add xchg and cmpsb icebp xchg xorb sub cltd js or (bad) mov push mov cmp cmp or fmull and les sub mov add sbb push and stc or cmp les push test mov and cld mov aas (bad) out test add int3 adc in fldenv pop popf and and (bad) mov or adc sub nop test dec (bad) pusha inc (bad) xor sub cmc push add inc aas adc lret add pop (bad) sahf negb add fcomp lahf cmp cmc dec push push adc inc pusha and insl jl hlt mov cmp outsl xchg add mov jns pmullw add xor cmp loopne adc popa icebp adc sbb fmulp mov (bad) jo rolb in lods fnsave lret adc adcl cmp cmc push xor scas (bad) xor iret adc or mov testb adc mov mov enter xchg movsb mov nop shl mov mov testb lods loopne jge (bad) js out xchg cld sub push mov clc push (bad) jb pop push test daa aas dec pop out (bad) mov enter aas out rcl popa sub mov (bad) adc pushf xor sbb (bad) jb mov mov (bad) bound ja xchg inc xlat pusha pop dec mov lahf roll mov add (bad) out sbb test or popa call add stos xor mov outsl mov mov pop repz aaa cmp inc jo pop out mov data16 es test test pop or mov sub pop in mov sahf jne notb cmpsb nop xor pop jg inc xchg xchg sbb fidiv or sub cwtl or mov xor lret sahf pop sbb dec mov pusha push dec inc sbb mov adc and pop or (bad) (bad) into xlat loopne pop add incb subl add lods ror sub adc inc jne popf les and ja mov adc cwtl sbb sbb outsl ret cmpsl or pop push add pop stos lock dec adc xorl movsb fidiv cmpsl (bad) out mov hlt dec ds jnp mov mov mov clc call imul aaa mov pushl adc add pop inc int3 lods lahf xor bound cmpsb inc mov lea jo out adc mov xchg inc cmp pop dec lret inc fwait arpl xor test mov inc mov setg sahf and mov dec add mov cmp fcoml sub xchg mov hlt add addl cmp inc add push icebp mov add push push mov in push loopne mov dec hlt mov rolb mov ficom movsb add and leave jb (bad) xchg pop dec push xor dec inc pop mov push cmpsl sbb sbb xor add lods dec enter js loopne rolb xchg lods jb push mov (bad) pushf hlt daa mov mov sub imul imul dec ret fmull add andl test loope mov rcrb pop js or neg mov lock arpl pushf pop mov xor rcrl mov in adc fcompl or add jecxz cmp push fadds push sub loop xor repz mov mov sbb sbb sbb and sbb roll les mov out mov and cmp pushf cltd mov sub dec pop pop fild or or pop test and sbbb sub insb jne int3 pop lahf sarl lret lret lock es push sub mov sbb dec (bad) int3 add call sub ret lcall dec mov or push pop addl out cmp cmp data16 mov mov dec pop pop inc xor and inc and in lret addb inc add stc (bad) dec inc fcompl repz leave je test movsl lock adc aam dec or testl std loop add cwtl pop in stos sub mov inc pop adc add ljmp pop add out test nop shlb sbb ja mov and mov inc push mov or adc and adc pop pusha andb sub mov sbb pushf or xchg pop inc jbe loope push or mov loope mov loope bound popa cwtl pop sahf or sbb fwait andl stos movsb ret dec inc or add jb imul sub pop sbb (bad) cltd arpl loop loopne clc cs and or push adcb adc mov xchg test xchg and mov mov (bad) cmp add fidiv push adc adc aas arpl adc or add mov push push out in mov into jb call loop dec out jecxz sti inc aad mov lret adc and xorb dec mov fs mov mov rcrb mov or inc test pop fistl js sub or add fcmovbe inc cmp sub xchg hlt fdiv ss mov adc add mov dec movsb mov adc adc aaa xchg and mov pop (bad) sbb pop cmpsb mov in mov fildl dec and mov mov rolb pop call add dec xchg fadds dec stos pushf pop imul jb and fwait je add lea pop xor mov (bad) mov mov mov push rcr adc xor rolb push push dec sbb ret inc je adc xchg in jno mov mov loopne and inc sbb and inc cld add and xor ret leave popa cmp adc dec mov adc ss add add scas mov xchg inc dec pop (bad) cmp xor sbb in push sub xchg (bad) or and aam adc cwtl sbb hlt sub nop nop push aam adc add jg fsubr dec dec add das or sbb js mov sub les frstpm(287 in (bad) or leave movsl cwtl sbb loope cld arpl test aaa nop xor mov out adc ror cli pop xor jne dec rolb pop mov push mov xchg or cmpsl inc mov test jl js or push dec lods lock hlt mov fadds adc add mov mov sbb jl lods imul cltd mov mov outsl enter mov xor fwait add add imul pop (bad) mov add fsubl adc loopne add mov or xlat xor or adc in inc push inc ret adc repz inc fdivl aas movsb insb (bad) mov sub out ja inc mov lahf mov out xchg jl cmp decl inc mov (bad) dec jne xchg enter push mov cli pop notl sub repz add fiaddl (bad) mov mov ss xchg sbb pop mov jno inc je aas sub mov repz outsl push and cmp mov or aas push lea xlat cmp mov lret and (bad) or js inc test mov je add and das (bad) or push stos int3 ret mov mov mov (bad) dec mov mov sbb inc subl (bad) fnsave or add out daa or xchg cmp dec mov push and aam adc jecxz pop add fs push jp cmp movsb test mov add fwait add cs xorl mov jecxz add popa pop mov jno or pop mov mov add dec lret and pop das mov mov sbb hlt inc mov adc not or hlt sbb pop inc mov xor mulb call roll dec push pop dec (bad) jmp pop push test push pop aaa ret sahf adc in stos clc call mov loop or jge jnp fs sbb fcomps mov and pop adc pop add (bad) cmp or xor movsl or sbb mov sub inc mov and cmc popw sub dec mov movsl mov jns das (bad) daa cmp leave and or push movsb cmp inc mov fs pop inc xchg push (bad) scas jo insb loopne or dec lock pop loop mov movsb push add add rcrl and (bad) outsb xor add cmp and fstps inc and push jo addl (bad) inc into mov and adc adc or js cwtl mov pushf lock sbb dec push popa jo mov and inc cmpsb aaa das jo push clc into lock add nop repnz adc or pop or dec (bad) sarb or (bad) ja inc pop jne dec adc mov (bad) rclb nop sub inc pushf pop and arpl pusha inc push aaa xchg rorb add sbb fs and push add dec and adc pop add test fsubl xchg in push inc mov add cmp mov iret mov push orl insb jae mov dec fadds adc and leave sbb jo and or add push in jle lock add jo fs add mov mov xor inc insl in lods xchg sbb lods push call (bad) notl mov and xor add dec insl sbb xor adc scas out push jecxz xor sbb call or or fs mov test rolb pop mov ret js pop jnp sub sub adc sbb pushf sbb (bad) jne sub inc inc test int3 ret add fcomps inc adc pop movb cmp hlt lcall and mov pop sbb inc orb popa aaa sub cmp or cmp xor and jnp push repnz and inc int3 push inc test daa mull lods push cwtl sahf inc ret inc cmp jb add inc push mov dec jns push into ror test mov ljmp test fistpl xor xorb fistp add push jp add mov (bad) mov ds push bound (bad) enter sbb jo cmp dec int3 ljmp or sbb or test xor adc in out sub push cmp inc fisubr ss loope call arpl xchg das dec enter insl das popf mov sub mov enter pop adcb lds rolb pushf add mov add andb daa negb and adc sahf pop mov subl cmp mov dec pop shrl inc add test mov ret stos punpckhdq imul in push sub je add arpl cmpl mov lds faddl aad insb (bad) lret mov xchg lds xlat inc jo sub push insb or pop fmull ljmp inc fistp jnp es cmp jns enter xchg aad xchg inc dec jge push push mov mov daa stos and ja add push jns add xor jbe jnp pop dec rolb and (bad) sbb out sbb xchg int ja add push and adc mov mov jmp jmp push mov sbb push pop add push pop xor ss jbe nop test leave adc test jae pop or shl mov rcll insl cmp xorl inc xor lods jmp pop outsb push jns pop dec mov out xor dec or sub sub and movsl xchg insl xor in imul or inc loopne sub sub jl outsl and inc xchg icebp jns xchg and and call pusha push xor in push or xor xor in inc mov int mov lcall psubsb aas mov orl push aam xor jnp inc sbb and out ret cmc cmp push fisttpl adc pop push mov push pop mov fist sbb rolb ret inc mov addr16 mov cltd imul jnp inc jo lds inc push (bad) mov inc lret xchg xchg mov cli aad (bad) inc leave pop andb daa jo push xchg aad mov dec mov or cmp jp mov das scas addb add test adc fisubr adc push pushf pop sbb jne in adc or and scas rclb out dec add or cmp mov test add ret jo pop mov sub xchg cld add xchg cmp adc andl add inc int3 in adc clc aad enter xchg int3 adc adc jno mov aam inc mov lret inc add lods lahf rclb jns loop add and push nop add xchg mov and push lds les popa out nop xor es mov in mov shlb jo pop subl imul mov mov push pusha pop adc cmp add push push (bad) sbb lock dec movsb xchg adc loope add test adc scas es pusha mov jo adc in into (bad) and xchg push adc mov lea inc pushf inc xor test add push add (bad) or add or xor out aam adc cmp pop dec sbb dec xor sbb or stc test sarl test jl sahf adc push adc imul sbb cmp push pusha inc nop jl add xchg adc cmp into cmp mov leave pop loope loopne inc xor imul fs inc sbb or and (bad) es insb ret into mov sub dec inc fsubl in or push rclb push daa sbb adc jmp or into jge add out mov jl xchg mov inc clc pop jmp mov fcmovb sbbl mov inc sbb mov cmp lods nop repz movsb out adc lds in loopne xor and leave aaa inc dec xchg or mov cmpsl lds sub cld push dec and and (bad) fstpl add push sbb addl jns frstor and pop fs lods xchg aam jae adc push xor inc and das pop or js fwait pusha add mov xor xchg out inc pop imul movsb sbb call loope inc dec dec xabort adc cmp mov lods andl adc clc andl xor xor jae aad movsl inc adc cwtl cmp xor andb push mov xor jle lock mov inc xchg cmp inc cld pop lahf adc les xchg push push lock push xchg adcb (bad) sbb (bad) in xor add push sub sub loopne pshufw shrl enter call (bad) mov (bad) imul mov dec pop and adc adc lcall ret push imul push push adc mov pop sub cmpsl psubsb popa mov add cltd stos xchg leave jnp movsb mov and inc mov inc sbb sbb push mov insb in jg dec dec xchg rcrw (bad) fild fildl lods cmp mov test lock xchg mov lds inc pusha inc jle cli sub rol jmp mov jle mov hlt adc sub imul jbe xchg and add loopne sti popf inc jae cli aad inc or inc lahf pop dec or subb and rorl les mov xchg add xor push int3 xchg jne add mov icebp push push (bad) pop leave push jo dec pop cmp popf xchg pop int addr16 sahf sarl lods jmp dec cmp inc add lcall inc xchg inc or and je adc mov adc shlb mov push adc push and pop call inc cmp push add inc sbb mov test and add mov mov sbb inc mov (bad) adc push and jne xchg fiaddl pop adc adc fs add out and mov in add pop or mov fs and jae xor imul adc test sub je mov xor test dec pop in sub out add out push and inc test xor cmp bound clc inc movsb jmp sbb es pop inc fistl inc mov sub ja inc addr16 adc xchg aam xor sbb push shlb sbbl adc popa insb cmp push scas fidiv cmp pop sarl add mov pop push fiadd cmp mov rol inc (bad) mov sub fs and dec pusha mov (bad) lock lock mov and xchg gs dec xchg cwtl pop (bad) sarb arpl xor adc insb and sub (bad) sub push pusha mov sbb lret xchg or or or adc dec lret and push call or dec fs test sub mov adc scas mov in jmp adc push mov pop push rcrl mov sbb imul adc pop hlt sub int3 xchg loop adc cmpsb or inc les fcmovne cmp jns nop and daa adc out mov js insl add mov or xchg or les xor adc inc mov cmp mov dec add loopne xchg rolb sub addl in push in dec mov adc or aas test push dec adc faddl add aaa jl test dec adc inc and lahf icebp and cmp scas or pop push test sub jl cmp mov sub and xchg mov out push jl sub rcl adc test mov adc jnp jge jo lock rol pushf dec loopne les dec push and xor or movsb inc mov sbb loope or adc insb add rol pop and adc in in idiv int mov lock es js add jle shrl fldcw pop dec mov subl cmp jns addr16 and mov adc and sub push sbb adc cmp lods push sbb inc or icebp ret loopne out jnp int3 je out lods adc or inc jecxz repz je out clc scas add add (bad) push add (bad) stc mov mov add ret adcb add pop lret adc repnz lret inc int3 cmp test jno add xchg and insl adc divl pop iret stc aaa imul push jnp or add cmpsl pop ljmp mov imul push clc mov pop ljmp xchg movsb mov (bad) call iret inc andl adc xor clc js movsb mov cmc jbe sub jle inc test in mov sub out push (bad) mov rsm ljmp or push push jno sub fimul pop jge pusha inc xor scas jns mov inc repz inc pusha lahf cmp pushf ret mov (bad) rcrb mov cmovo push sub push mov jge orb scas xchg test mov cmp fcompl into dec add ljmp fsubrl lock push pusha sbb jae shll (bad) xlat ret clc adc jmp leave inc fmull inc nop pusha pusha add adc ret rcrl shll test push shlb pusha cmc xlat mov pop inc sub mov inc test dec jo mov cld and xorb adc sub jg xor js (bad) out inc xor xor jge jo cld ds shrl clc push out mov mov loopne fdivrp insb jne les les cmp xor (bad) adc jp sub sub pop mov xchg and add sbb add push out mov pop mov loope or lock (bad) push cmp (bad) incl loopne fsubl mov test mov icebp sub adc mov rcll jno xchg repz dec lock mov xchg mov nop push sub mov dec sub jo add sbb test add mov sub ds inc or iret xor mov jg inc adc mov fcompl push dec or stc shl pop inc jno (bad) idivb fnsetpm(287 cmp xor dec addl mov and inc mov adc dec (bad) subb orb cwtl mov mov pop mov les enter test and dec enter scas and inc inc xor movb sbb sbb xor adc fbld xchg fstp insl inc sbb mov enter push int3 inc xchg push pop and js mov mov push add flds xorl adcb js xor push sub insb add push ss push cltd and (bad) xor and cs jne mov test pop xchg jns sub add add add adc movsb cmp es mov mov xor mov ljmp lret jl icebp push test je rcr push imul (bad) ret dec jo adc mov shlb orl adc in ret xor or sub repnz push or push sbb dec movb cwtl or dec xor pusha movb add jae (bad) dec es mov adc sbb int3 ss in cmp lret xor lret insb and mov or call inc adc (bad) xor (bad) les push jne sub popf lods lock mov jb aas adc adc xor popa add add cltd sbb or cmp or fistl cmp loopne and gs int3 inc add inc mov mov imul ljmp mov and test mov adc dec or lds pmuludq xchg call fs cmp pop ret dec dec push pushf add and pusha test mov push push popa jecxz (bad) pop mov and or stos inc jae inc ljmp inc mov out mov cmp add or je push shlb and in xor mov clc push fsts mov test add fimull (bad) sub xor (bad) push adc dec pushl (bad) sbb stos cwtl and hlt (bad) sbb cmpsl or call shr addl xor int3 jbe pop jg cmp mov mov and jno negl leave enter sub notl stos into and xor dec lods or sbb cmc mov jbe movsl jge add fstpt sbb idiv adc push pop in xchg and push inc repz sub mov (bad) push sbb add pop adc lret mov mov les adcb scas aam lods pop lcall adc add dec adcl pop xor ljmp sbb xor xchg jns add cmp mov push enter inc test jl xchg sub scas jle cli inc cld fdivrl inc adc cmp cmp add lods push int push ret mov xchg ret pop adc jp mov stos ret mov lcall push insb popf push rolb lret or icebp test dec rclb xor xlat mov xchg mov jl cmpb out adc dec arpl xchg (bad) pop pop and mov or jo add cld xchg inc inc outsl mov sub sub xchg or loop lret nop imul jae xchg sub enter jae push or dec mov int3 inc mull and mov dec aam and sub pop fs jno mov sbb or call dec (bad) jo imul ss (bad) mov sbb pushf mov pusha (bad) cli test arpl ds arpl test adc pusha clc cmpsl mov xchg xchg lods jbe fimul orl ret adc jmp loop add mov jns (bad) je in sub push repnz push add pop or and pop not inc mov das adc mov push dec sub jns xchg inc enter add add pop push std movsb cmpb pusha loopne imul leave call sar sbb divb mov stos pop push mov out mov or enter iret push mov add pop add fs cmp ret lods jb xor jo ret cld out dec das movsb pop fadds or pop clc push add xchg and enter cltd hlt adc aas int3 (bad) (bad) and pop (bad) pop hlt sub inc ss lds lock adc or jge sbb cmp mov sbb negb cwtl shrb lock and push xchg xor push test int xor xor out adc sbb dec cmp or popa clc test loopne test xchg inc xor jg and inc adc xor jbe mov push mov sbb adc ror sbb leave rcr pop sbb xor popf inc inc shr jb shrb adc lcall mov in cltd dec add and cmpb pop xchg and or adc hlt mov insl mov mov xor loopne push jno push movsl movsb adc dec add xor push jle rolb es jecxz push and mov sub in enter push push fidiv dec dec xor loop test and or addr16 dec sub fcomps (bad) cmp push mov mov push and and pop or pushf leave cld cmp mov stos add mov iret add repnz inc aad xchg and adc push (bad) mov pop cld fwait les js xchg cmp cmp fcomps (bad) adc in out add mov scas xor add sub test add push pusha aam mov or add les in add imul (bad) je mov nop aam push es dec loopne push pop add ror add jmp inc je dec mov mov adc iret dec add adc iret mov jbe adc inc mov xchg mov nop (bad) push push dec hlt jg movsb bound or add out sub cmpsl cmpsb pop ret loop call xor icebp or iret inc and mov and and call lods pop ljmp dec push clc les inc imul cmpsl test sub adc mov mov add enter sbb dec add popa enter and (bad) cmp pop rorb adc pop negb in scas addb and call sub pop call inc test xchg mov dec dec inc add sbb outsl inc cmp cwtl (bad) imul push pushf pop cmp sbb jg xchg mov cltd mov and shrb inc or ljmp dec xor jnp xchg push js xadd mov pusha push out cld cmovs add pop jl adc loopne add cmpsl jno hlt mov mov andb shlb xchg add loop add cmp (bad) dec clc dec xchg lods jecxz out xor movsb add mov data16 int xor sbb pop sbb mov inc pusha repz or inc pcmpeqw imul repz pop jbe xor xchg or inc pop mov jae sub dec cmp insb sub lods and and inc inc jnp lcall fcoml mov add fldenv mov xor and xchg xchg cmpsb push xor dec inc sbb fdivr pushf je mov imull and xor (bad) jo (bad) cmp shll adc sub test xor push add sbbl cs mov popa ja nop inc xchg nop sbb mov mov (bad) jae ret sub and enter rorb and push lds rclb inc je push fcoms fldcw inc xor adc cwtl jmp cltd sbb mov testl test dec add insl xor and jo je xor inc addb sub mov and xor xchg jmp and xor sbb (bad) mov jo mov sub orb cmp mov fs lret pop les sub rcrb sub daa adc push and jb into jns (bad) and and icebp aas pop push mov das inc lea js (bad) ds push pop je mov sbb imul adc mov mov subb push inc inc das xor push les adc pushf jl fwait mov mov or dec fstps rolb mov pusha push notb (bad) xchg sbb les mov ja ret clc movsb inc sarl aaa ss add push xor mov inc and dec fcoml mov and pop xor jae lock jl cmp mov repnz jmp cwtl out mov pop inc fs adc (bad) xor orl mov cli push and call dec xrelease ja inc inc push push lds xchg sub cwtl mov out inc pop add add push icebp or dec or adc mov movsl jae ljmp add movsb adc nop enter xor pop and in lds add xor loopne jl jno push (bad) lahf cmp add mov in cmp movsb call icebp cli adc add xor xor add jnp (bad) mov mov sub loop (bad) rorb gs loopne adc icebp fildll insb adc mov flds movsb sub mov inc in in inc sub nop xchg sbb jbe mov jl mov mov fs xor lret xchg add and rorb stc mov in clc pushf mov test test insl and push jge adc inc les add sub sbb push pushf pop mov xor cltd mov inc iret mov stc loopne test xor mov cld jmp and es pop adc aam (bad) sti mov stc nop mov push or es (bad) mov (bad) lahf sbb and inc movsb cmp inc adcl push mov fisttpll push mov outsb addr16 enter mov and jne xor jmp mov repnz xor pop add mov push dec cld enter stc pop sbb mov jge rcrl clc add pop fidivrl add push or sub and mov out ret jmp xor xor enter or fiaddl inc inc adc xchg adc and or loop mov and in pushf and mov push adc adc jb adc sub je negl add jb addl jb bound divl mov mov or testl imulb scas cwtl lcall xchg inc jmp adc xchg xchg push jo xchg insb add mov imul repz cmpsl add sub sub movsl xor (bad) icebp jp jo jl inc movsl leave add push into jmp ret pushf adc or repz dec cmp popf adc push mov dec pop js test iret xchg in je dec lcall sbb sahf shl adc sbb cmp jbe rcrl cs mov testl sbb repz add mov dec mov fsubl mov and lret push cltd (bad) mov dec mov xor test xor dec xchg or or mov jns lret xchg mov mov daa cli push cld push or xchg mov sbb sub cmp and inc (bad) fcoml and pop clc xorl int3 loopne arpl (bad) xor inc int3 adc in mov xor dec sbb js sub jecxz jmp xor gs repz cli jbe lock cwtl repnz loopne pop out ret fnop or jl imul xor and lds add xor xchg xchg shlb out or lock add cmpsb pop xchg or and and movsb outsl das fwait (bad) gs and inc jmp mov jg out fs dec xor (bad) stos and repnz aaa ret hlt inc das push dec (bad) sbb mov xchg add les dec mov or push ja jecxz sub xchg jg pushf sub adc lods or mov enter les mov dec adc jl fstl lock xor dec test mov push mov sbb push inc xchg add jge sahf pop xorb sub addb adc xor dec mov add cmp jl add xor stos push pop mov mov loopne inc add inc test rolb out sbb mov or inc xor sbb add mov aas shrl dec (bad) outsl pop push xor xchg xchg xor mov and pop dec or xchg outsl lods and sbb mov mov aaa add xchg mov or push and dec rorb leave out lret call dec fs xchg mov lahf rorb push popf push push adc mov xor mov xchg jge popa push lea jns pop dec fsubr push and add or iret stos sti nop push or and mov pop mov pop add xchg in mov push and aaa adc aad jl pop das and jp adc sub xchg push add push pop sub outsl cmp rcrb pusha cli pop mov dec mov arpl pop out test fisubrl das adc xchg test cmp mov lahf int loop dec aam mov mov (bad) clc lea test pop inc xchg inc int3 and nop mov imulb xor rorl mov xchg stc int inc mov dec mov xchg lock rcrl cli mov fnstenv orw das bound sub rclb nop fcomps into or rclb aam jg add sub scas sub xchg rolb sub xlat jb cmpl add in sbb and repz jb jp xchg imul (bad) push divl out inc push scas decl or jg add adc loopne add inc dec mov add leave stos pop shlb xor (bad) sbb rolb add cli or jge add dec pop addb das and insl push xor push xchg mov cmc add add incb mov push jnp daa adc jg arpl fwait int3 js (bad) xor inc mov mov callw pop sub fcomps sbb test adcb push mov mov xlat mov dec aaa in fisubrl mov in sbb xor or jle cmp dec lods cltd add or jg jae cli fwait clc dec rclb sarl jp fistpl jo pop pusha (bad) pop sbb fbld mull cld insb pop jecxz test (bad) test movsb jnp sbb sbb icebp or insb jecxz and fst dec add in (bad) cmpsb xchg sbb ss xor aam push popa jp pusha and add in mov inc push lock insb lock push mov xchg lods jl pushf add imul xchg popa mov cli sub mov jo imul in out xchg stos nop jl xor and pop rcl outsb inc popa lock or test or pusha lock rol or inc mov loope fcmovnu and mov xchg sbb adc pop faddl movzbl out cs mov fidiv pushf dec mov inc push enter addl cs fmull pop roll add jl sub push mov pop das inc xchg pop sbb js rcll add in int3 popf xchg jnp into repz (bad) mov pop lea fdivl cmp dec in iret mov inc sbb test mov mov lcall push pop jmp cmp inc aam xor dec dec lods add and rcll xchg sbb mov and xchg test out pusha popa sbb cmp dec or fnclex test pushf mov mov setle xor out test sub sub orl cmpsb test (bad) adc stos iret pop mov fiadd add imul push mov enter cmp push push xchg xor cmp add or inc push out ljmp push and sub insb rorl mov inc andl test adc loopne push or icebp and mov mov inc sbb nop or mov test aam xor add pop lock orl pop sub fldenv xor xchg inc mov pop push mov addl pop fstps test add loopne jo jp test in fimull leave xchg orb sub and and inc shrb push adc mov or leave mov shr pop add in lret lods add dec imul fild in sbb andb jne add pop loop stos inc and or push les mov push and sub mov inc jno test mov iret sbb orb sub dec and stc psrlw stos cmc stos sbb sbb out pop mov pop cmp (bad) push fmulp out pop xchg andb rcrb xor sahf and into sbb pop and sbb mov xor sbb xor push adc add test in push stc sub mov pop push sarl lret xor cmp pop (bad) arpl (bad) mov out dec dec lahf mov mov pop inc jmp loopne xchg xor add sti mov pop cltd mov in and (bad) inc arpl or mov cwtl cmp sbb inc jmp orl and sti xchg sbb lret dec xorl cmp cmpsb mov add repz adc mov into ljmp dec xor test add ror gs mov push (bad) mov aas les clc and in and fadds sub test adc clc sbb fcoms inc and inc notl lock pusha lcall add pop orl and cli ds subl add in cmpsl push pop push inc loop pop or cmpsl rorl (bad) int push (bad) jl movsb mov repnz xchg and pop pushw inc xchg inc cld or rclb dec push jecxz xchg push cltd sbb push jecxz sbb dec adc rcl aam adc mov dec in mov ret add adc add in mov ds jb push lds sub fsubrl xlat ror xor cmp bound cmpsl dec lods mov pop dec dec adc pop insb or fs popa stos daa or or lods add cmp pop lret cmp push daa xlat sub jge mov rorb xor mov or (bad) and add cmp fsubrs decb mov add and push pop rorl pop out jmp add adc xchg inc cmp sbb cs jno add push cmp dec int3 ret je mov inc test sbb push out and mov pop dec in and push add pushf push ficoml push testb (bad) inc dec inc or xor rcrb mov cmpsb call adcl das xorb and or dec arpl fdivl nop sbb lret (bad) int3 xor fcmove loopne push test mov js adc pop mov add (bad) sbb pusha dec sub arpl cmp dec add jmp push jns cmp and loop cmp adc and stos lahf pop rol pop cmp lret mov pop int inc mov adc aad loopne and pop mov nop mov (bad) mov inc cmc or push xor mov shrb inc xchg sbb dec mov xor scas pop dec nop test pushf popa pop (bad) icebp pop xchg sbb mov sub mov xor or sbb pusha call int mov cmp sahf xor or mov imul inc cmpl pop je and movsb mov ds mov xchg add pop and gs pop sbb cltd dec sbb push loopne pop insb add xor outsl cli pusha xchg mov rcrl inc (bad) or jnp imul and sbb jg sub enter mov add clc leave lock sbb out fnstenv add dec repz in out cmp dec or cld vaddps cmp xor xchg in popa sbb inc divb roll fwait xor sub or mov adc add flds dec push xchg cltd inc cltd or push pop mov rol push mov aaa fnclex push or shlb jl (bad) cmp mov cmp test dec mov xor inc push and push push pop aaa pop pusha jno xor xchg dec inc cwtl jbe pop xchg mov mov in or outsl mov inc adc call sub dec dec cmp pushl in xor adc enter aaa adcl rorl jg xchg jbe xor sbb inc mov mov add pop push sbb es addl or inc pop sub nop push mov mov iret (bad) mov fwait dec xor and test loop aam hlt xor adc mov cmpsl repnz xchg pop sbb xchg arpl lret sub faddl lret loopne mov mov mov ds mov mov pop sub mov (bad) and xlat test pop orl push adc imul fist add jo fstpt inc cmpsl roll xchg pop and pop jae rcll and or movq das and dec incb pop mov jl test xchg popf (bad) nop divl std fdivrl or jmp test out fwait cmpsb pop sub ds repz orl sub pop push mov test rolb mov mov dec adc test imul cmp mov into fidiv aas fstps pcmpeqw inc das mov and or xchg sub stos jne mov xchg lds sbb bound adc cmp sbb dec jb sti scas jae les jg daa dec incl add mov mov stos sub das test addr16 jb dec jge aas mov shlb aaa movsl aas (bad) add sarl (bad) cmpsl divb sarb push test (bad) aas jge out not inc iret loope push lret js lret and aad inc jmp inc mov mov push cmp pop xor stos push xchg or or xor rclb (bad) push mov xor or pop add pop pop movsl mov bound inc add xchg cli pslld push int pslld cmpsl cld jg fcomip add push or aam jg out cmp mov mov jns pop in iret inc add ds enter outsb and incb (bad) lcall js addr16 idiv inc lret roll iret push or mov fcomi int push inc ret cld xlat pushf push jo insb and push push es push sbb rorl add das in lahf aas lret pop ret std mov inc rcll cmpsb fisttp repnz mov rcr nop div bound sti pushf pop jns (bad) repz aas enter insb and incb roll jg sub add incb rolb outsb mov cld xchg aad pop out push mov mov std ljmp dec js mov mov testb in and push out lahf aas fs sub add mov pop lret (bad) (bad) xchg push ds mov loopne into jmp lds or jp (bad) push mov and pslld add cmpsl xor in in cmp loope xor addr16 add xor inc push pop dec mov xchg pop jge or neg aaa push fsubp inc or pop sahf push cli (bad) xor push push loopne mov popf push int sbb cmp xchg dec xchg aaa push sbb scas pop sub js push pop mov hlt push es (bad) and pop or xor nop sbb inc adc jno ret mov test or mov or fsts xor pop xchg mov cmp insl xchg inc mov adc test mov adc cwtl test sbb and xor xchg and cmpsl dec ret clc inc mov adc mov or inc jl push insb push and cmp and push popa test imul shll test or test or push pop or xchg inc mov sub mov jbe and mov adc xor lcall popf and mov and inc pushf sbb xchg and and mov mov and test les or test sbb mov inc sbb push xor js mov xchg (bad) adc adc out push fwait inc pop and add fadds cmpsb and push or mov fmuls test mov test ja in adc test sub or mov and adc scas or cwtl adc and dec or test ds adc mov sub xor mov sub idivb leave cmp cmpl mov fnstcw ret inc cmp (bad) aaa pop push es adc adc mov ja roll adc mov ret pusha outsb call ljmp sbb xchg pop sarb jle sub jnp jmp jno mov mov or (bad) push cmp popa ret (bad) xor pop adc and mov xor add add push call cli push xchg cltd les dec pusha jle in cmpsl xor jecxz out int roll lods sbb enter adc popa fidivl movl sub outsl fcmovb sub and jle xor inc dec mov push test rcrl leave cmp sbb fdivs clc loopne lret dec sub fisttpll jle fistl xchg (bad) cmpsb ret inc xor icebp xor push push aad jecxz cmp in pop pop inc mov adcl push push mov inc inc pop push pop (bad) repz inc cmpsb test adc loop sub add push cmp test pop adc add adc inc push jne adc mov push push sub and stos in sbb lods sbb pop pop rclb rorb add subb add movb bnd cmp out add jbe lret push xor shr push add loopne inc sub xor push or jp pusha mov mov std xchg xor pop push jmp out lods add pop cmp jg mov and sub push push jmp jle dec lea cmp imul jmp ret loope adcb push add sub pop cmpsb cmpsl add dec pop ja hlt out call adc pop push and sti jb cmp test push pop mov cltd push mov jle and cltd pop sti jp add jle data16 push not jmp add sub mov not sarl add mov and pop push mov fiadd jne push inc xor ja in add mov xorl es add hlt add aaa loop mov ljmp cmp push and jge shl add pop and pop loopne (bad) or dec movb pop push out lods imul add inc sbb aaa pushl xor ljmp int3 jbe mov sbb outsl pop jp jae pop sub fisubrl adc les nop or out xor ja cld jae sbbb into ja and mov shlb adc or pop add jns dec aas and sarb loopne gs repz clc cmpsl pop add mov xchg (bad) xor gs or jmp add xchg idivl fsubp out inc or std cwtl andb loopne fistpll neg jne int3 sbb pop sub js xor daa outsb out push mov jl and mov sbb in (bad) mov push and xlat xchg fnstsw repz fnstcw test and add pop and cmp (bad) aaa push push dec pop add out insl jg and push ja adc imul add xchg pushl clc push xor jae mov xor outsl lods cwtl es cltd inc fimul in outsb std push mov sbb xchg fs mov or cli sahf repz push pop xor mov mov add and sahf pop xchg fs mov ja jle aad inc or pusha (bad) frndint in es or ljmp cmpsb or loopne mov inc xor add mov or pop dec mov push add mov and bswap pop in mov dec mov add rcr shl add outsl add repnz pop jbe jecxz inc mov pushf cld add jbe xlat jmp je (bad) icebp xlat xchg xor adc fwait inc mov stos push pop mov jl dec inc stos lret jmp sub notb push push inc inc mov fsts xchg dec xor je push dec fisub ja,pt mov xor inc or cli popf and fmuls add icebp dec fiaddl int push jmp loopne push idivl stc (bad) xlat or mov out mov add pop xchg test lahf (bad) test loope mov pop sub test sbb test xchg call mul test ret jp dec push dec rorl jmp and jge daa xchg sub xorb sar or cmp mov dec fildll sbb fs lea jg add arpl jmp sahf xchg sbb or js pusha inc std mov jg (bad) or xchg cwtl sbb hlt sarl pop into shrl or clc inc mov jne add jo push inc decb lret and or mov orb inc cmpsb ja and lcall (bad) aad dec (bad) xchg fnstcw subb rclb push push pop adc ret call test and iret outsl add scas inc push xor mov rorb pop push int3 or rcrl pop jno mov fsub add test push pusha pop jecxz push (bad) fbstp xchg push xor or pop adc push add push out mov sbb jne mov lcall xor out aam out in and adc (bad) xor insb add dec stos test adc jmp cld dec das add (bad) jmp add pop sub call push push push pop dec lock push scas insl sahf in jmp lret adcl push mov mov test pop pop dec pusha fs push jb sub push lahf ja fsubrs jmp xchg aam add (bad) xor sbb mov out fcmovu jne push push and pop scas fwait int3 (bad) sbb xor xchg into sbbb push inc and (bad) adcl in repz stos mov jae dec (bad) or or hlt stos lahf pop sbb push jle pop and out addr16 mov mov push xor sbb sub mov fiadd adc adc lods ds loopne repnz in jmp repnz mov mov mov adc add xor pop cs scas sub cli sbb es sarl mov cld insb or cmp push jmp std inc mov and jmp das lods je pop in (bad) leave rcrl pop (bad) xlat mov push popf aas lods pop adc xor in push sub dec add addl jp shll aam or push in lahf adc mov lods cmp shlb (bad) pop xor pusha test cs jl and rolb cli pop into inc pop push in mov jmp sti cld cli mov lods add sub push pop loopne pushl or cltd out es adc push bound ffreep jmp test xchg std xor adc pop mov adc clc aaa sub xor cmpb mov test ret or lea cmp aas fdivrs and rorl push add mov in dec sub xchg inc push xorl inc jmp mov shrl inc mov mov sbb jecxz dec adc push rcrb (bad) in mov loope loopne push and add or push fldt xor imul mov mov pop xor rep not mov add pop sub jnp or push pop fld1 cli add scas jl ljmp cli push sub movsl xchg fcomps push nop sarl addr16 adc xor (bad) pop xchg testl pop mov ss sbb jle movaps lcall mov divl push (bad) (bad) sub sub shrb add mov xor mov insb xchg xor (bad) pusha lea movzbl pop fisub ds xchg loope arpl inc dec arpl add push cmc es jg adc pop dec pop sub lcall add in nop lds jno push test and gs xor ljmp icebp icebp jp leave inc rclb ds sti push push mov icebp iret mov pop sbb in int3 in or push xor rep sar mov push push push push (bad) cmpsb dec sub inc push mov or cmp pop mov or xor rorl enter loope inc jl popa mov xchg (bad) jecxz loopne (bad) xorb and jnp (bad) loope sti sub add mov xor sub mov pop xchg jge fdiv or sahf pop cld jae in popa out movsb pop out fiaddl or js mov nop push inc sti std fsubrs mov imul mov idivl xchg cmp outsl (bad) push inc into jae xor pop jbe jecxz mov and add inc jo pop aas pop sti sbb sbb cmpsl les and add dec xchg clc cs mov sbb mov pushf add xchg or inc (bad) shlb outsl and (bad) stos push add mov adc test fneni(8087 (bad) sahf push pop push mov imul and iret sub inc push xchg jo inc pop cli fmull mov cwtl xchg inc add mov icebp (bad) hlt dec push movsb pop mov push fsubrs mov xor fsubrl (bad) add das jl js add mov pusha nop mov or je (bad) fwait push mov add inc rorb test pop ficoml pop lcall hlt das sub nop push mov orb push xor sub stos je outsl test es sub mov sub pusha mov adc mov sub adc lahf adc dec jge fisubrl sub and fstpl push add (bad) aad outsl movsb (bad) pop inc pusha addr16 aam mov mov popa test cmpsl ret inc xor or (bad) adc lret call sbb add inc push xchg sub (bad) mov (bad) xor je push out lock or scas ret (bad) jo test xor inc cmp ds lock add and inc add orb das notb nop test or jecxz js es jo or xor lods stos add je and sti out dec mov inc icebp mov or or adc (bad) push das mov lret faddl cmp int3 and or dec loopne lahf cli out xor test das push lods loopne add mov bound clc pop xor imul xor inc xor ss sub clc lock (bad) cmp adc xor push jne cmpl mov add test pop inc dec cli and pop add mov out mov sarb add xchg and add pop xor xor cltd pop loopne addr16 std dec jg mov add dec insl mov (bad) mov and mov add das pop xor inc and pop add mov pop cld cmp add sub ret add pop les addr16 cltd adc scas inc stos shlb xor add and cmpsl xchg outsl sbb adc lahf mov pop gs push fidivrl inc xchg leave or and and push push mov sbb jecxz orb movsb mov loopne ja sbbb adc mov rorl leave (bad) xor sbb jmp scas pop add icebp sbb dec movq adc mov test adc add popa sub and ja xchg and add pop cmp cmp dec mov cmp and (bad) xor fs sbb push inc push push and xchg gs xchg mov add imul sbb negb mov leave imul sbb sbb mov xchg mov shr lods pop cmpsb sbb or mov add data16 xchg insl pop sub dec mov xchg add add cmp sbb div sbb xor loopne cltd sbb mov xlat pop add and and dec insb cmp xchg xor jno cmp xor or and fist jl (bad) push xchg inc pop add aas and cwtl sub xor stos dec nop insb xor dec xor lods jbe adc pop and add xor movsb enter insb add cmp int loopne and mov outsl popa les mov mov or aad dec addb sbb ljmp ficom adc es dec add mov movsl mov adcb lcall mov int3 xchg cs xchg inc mov stos test cmp aas decl mov push dec and jae arpl inc repnz test mov stos mov mov int3 inc and test add fadds ret sub lods cmp and pop dec inc push cmp xor cs ret sbb mov xor xor fs es mov fildl push lods stos inc push pop sub lock mov sbb popf add imul xor mov adcb out loop (bad) push pushf and aad insl call cmp push dec in cld add aad mov pusha popa jp xor xor pop or pop fstpt push mov inc popf (bad) cmp mov jae inc cltd xchg test sub sbb loopne jl add mov adc cwtl dec push or into xor dec roll fsubrl and or sub lea jb inc shlb movsb test adc dec mov pop aaa addr16 mov lea (bad) xor or sub sbb add into vmovupd or adc add adc sbb jae dec test mov push aaa pop mov pop call pop jecxz leave sbb movsb movsl mov inc stos mov sub daa add movsb cmc (bad) (bad) push jbe push mov mov mov dec push or mov push sbb adc sbb cmp add cmpsb fsts and adc cmc adc inc mov add pop xchg push add inc popl sub or inc imul add mov scas xchg test lahf cmp xchg inc push inc clc adc push mov and push test and xorb pop in adc loope in (bad) mul sbb (bad) stc mov sarl (bad) into cmpsb and and push jecxz xchg icebp or cmp cmp cltd mov cmp loopne adc fwait lret sbb in iret sub pop inc xchg das je push inc mov xchg adc insb pop ljmp shrb mov add out stos aas push inc push add rcll adc pushf fsubrl clc pminsw (bad) (bad) es adc mov addb mov je dec (bad) dec push or dec pop int3 and (bad) imul cmp dec cmp insl mov sbb add in (bad) loop sbb lods push dec xchg push mov push pop sbb call aam inc negb pop sbb or fidivl xor xchg (bad) sbb adcl fld1 sub mov jns mov cmp pushf jo cmp cld cs cmc add jmp or rcll inc int3 add dec (bad) (bad) push pop dec dec mov lcall je and sub lock cmp push pinsrw stc dec repnz movsb lods mov (bad) je cmp mov and dec test (bad) and fiadd sub mov cmp push frstor jns cmc loope rcrl in clc cmpsb xchg pop xor in and xchg sub push hlt shrb push ds (bad) jmp (bad) jb out or xchg adc pop loop sbb test repz js xchg xor mov sbb mov add hlt add mov bound imul ret xchg sbb outsl cmp popa ss rcrb jno sahf jg add inc lret mov arpl (bad) or outsb int test sbb cmpl imul outsl add pop addl iret mov xchg or cmpsb lods ss dec setp inc std mov xchg add mov scas cmpsl mov ret jne mov (bad) icebp pslld icebp movsb ret int or scas sarb (bad) dec fdiv out sbb inc adcl mov iret int aam push and arpl or leave sub iret in cwtl sbb test sub inc icebp xchg insb adc adc and pop fs or pop loopne out mov mov loop mov leave cmp sbb cmc push sbb push cmpl and adc lcall pushf adc out inc nop clc cmpsb or repz sub or popa mov in pop mov in out faddl and fild push add jne xor cmp sbb adcb loope dec add mov (bad) fdivs out jmp fwait xor pcmpeqb mov push or inc (bad) jbe lea pop cmp sbb pusha sbb cmp test mov mov xor push sbb lret repnz jl xchg and sub test mov and jb adc faddl jns add popf out lret out mov xor push cmp mov fisttp pop cmp pop js or mov sbb punpckhbw sub andb bound cld mov inc sbb mov dec xor in jp cmpsl jecxz push cmp in in and js xor les pop bound cwtl mov and pop shrb mov aad int3 fstpt into cmp (bad) fnstcw ret daa inc enter adc add mov pusha inc mov xchg nop add jo dec cld sbb add data16 sub inc mov shl cs mov rcrb xchg jle pop mov mov hlt call xchg mov mov out jnp,pn dec cltd out cwtl in xor repz cs subb mov fcmovnb sub dec xchg test subl mov inc imul test mov mov mov dec lock mov in or dec or pop aad and push loopne or inc pop and inc mov cmc xchg sbb jl xchg or jo fbstp jo test stc rolb lret out aad cltd mov inc and (bad) mov push negb add xchg and mov ss fcoms push adc dec bound inc push or arpl sarb loopne test sbb push mov jae ret inc or aad imul mov or inc ret or jbe bound movsb leave sbb add hlt in je (bad) cmp in sub gs xor fldenv orb test and inc or int cmc sub cltd and out xor orl dec psraw cmp push pop mov inc xlat sahf mov leave int3 sbb or stc out and popf add scas jnp stos push inc test into std (bad) mov jecxz ret and xchg enter iret sbbl add loopne mov hlt xchg addr16 sub add ret bound outsb clc movsb adc (bad) add mov scas popa cs mov cwtl cmp fcomp xor mov movsl in sub cmp jo push lret sarb pusha pop inc add mov int3 push lds adc adc jne add jge xchg fldenv inc fcoms int add xor loop xchg or and aas neg inc sub mov inc pop stc xchg das pop popa lock mov test xor pusha xchg sbb dec cltd jge shrb cwtl adc or ljmp shlb push std fisttp xor inc mov add insl mov mov add rcl cwtl leave dec mov data16 js push arpl mov jg xor xchg sbb pop add lea popa insb mov xor test dec mov add into (bad) mov jo adc loopne ljmp xor sub addl or push test jg add xor into add pop mov test add and mov pop mov es test test or add in mov (bad) sub sub imul sti cs (bad) or dec pop and sub (bad) push movsl push push push mov jecxz add cmp dec imul nop hlt es ja shr xchg ret loope pop je sbb or sbb loopne inc out mov xchg dec jbe cmp add rolb loope sub cltd shrb les addb fs mov inc (bad) je loopne in das pop add movsl and and mov andb sub dec hlt call shrb cmp mov sub aaa mov mov insb push pop dec movsb orl pop orb ffreep test dec pushf rolb push cmp sbb cwtl jl cmp arpl pop sub (bad) cli cs adc xchg aaa aam adc call mov add mov divb and cmp fwait mov and cmc in sti and icebp jmp add inc fcomps mov cwtl imul mov cmc pop push pop aam add mov or adc add sbb fdivl dec mov loopne xor rorb mul lcall jl lds (bad) cli outsb fldl push roll (bad) jp das add aad inc sub jge add jecxz sbb mov daa add int pop stos and cmp adc scas xchg xor and fiaddl shl xchg or stc fs add xor mov pop xor cs adc ss xchg je int add loopne (bad) aam mov mov test scas mov mov lock hlt (bad) fsts and add popa lods push jg inc adc lds xor enter dec leave dec add test ss mov pop mov pop mov adc and out nop les cli or sub les mov or mov test out mov dec mov push movsl test add (bad) clc (bad) mov sub mov mov ss icebp dec xchg adc xor imul add ds mov jnp cmp cmpsl xchg scas mov hlt in outsl sbb repnz add cmp cmp stos jmp mov pusha or lods test loope fadds inc sub adc push add out fisubrl or hlt or and xor xor (bad) call push lods pmullw mov lods xor mov pusha cmp pop add loop sub pop push add jb sti aas stc daa cmp lret mov adcb xchg push push nop cmp add xor loopne (bad) or sub pop mov cwtl cld dec imul mov daa aam dec sub adc aam sbb (bad) push mov lea mov pcmpgtd cmpsl lcall mov push add pop mov sbb or scas and lock mov mov jns,pn or pop xchg and mov int3 sbb inc or jmp lock mov stos push popf or inc nop add jg adc push pop test or cmp pop mov pop or movsb adc mov int ss sarb sub add mov xor insl test test pusha imul lahf sub adc jae and cmp inc dec clc or jb push outsl pop (bad) mov nop mov ret push rorl adc mov mov loope insb pop add mov movsl in lret dec int3 adc in add inc and enter in stos jle les outsl in ja je mov outsb int sbb mov or sub icebp mov xchg fnstcw pushf xor xchg ljmp jns in lock mull add insl fwait add jmp jo ret add ss push pop rorl les push in pop pop in mov mov mov insl sbb popl xorb or mov mov bound push fwait mov not loop sarl addr16 push fsubr mov ror fdivrs sub inc mov pusha dec scas xchg (bad) sbbw push cmp pop (bad) jae (bad) outsl lret sbb pusha cmpsl mov daa movsb insl lret sbb mov push and mov fcompl sarl arpl aas pop pop data16 pop adc mov add mov adc mov xor add dec add into xor les lret fmul iret sbb dec mov add add push mov daa (bad) mov add xor in (bad) cmc imull fisttp push test inc sub mov or fstpt es mov sahf into movsl inc lods test hlt (bad) add fcomp ja sbb sbbl dec dec movaps (bad) mov cltd mov or mov (bad) (bad) and subb mov dec jae adc fiadd std lea test add adc movsb cmp and sub lcall xor xchg test (bad) nop pop int push fildll js cmp test clc xor mov mov (bad) push shrd pop daa mov das incb aad aam sbb mov push (bad) enter (bad) xor hlt jl and hlt fistl movsl inc cwtl test nop (bad) xor pop add movl test mov mov gs fcmove (bad) lret sub or jo rolb pop or add aam mov popa nop adc int mov movsb popl cld lcall hlt xchg adc xor sub mov das sub lock call bound jl xchg sub das jmp mov shlb pop mov daa (bad) in dec mov cmp int3 xchg adc mov pusha les mov lods adcb push or lds outsl mov fldl jbe icebp pop ret xchg inc add (bad) mulb clc shlb clc adc cmpsb mov sarl cltd sbb stos test or dec lret mov adc push inc and stc or jne clc lods jg xchg mov sbb push mov xchg das ljmp movsb lock mov adc inc sub leave jmp nop pushf daa inc push sbb ror sbb call xchg and fmuls int3 add adc sbb pop or imul je js xchg fistl mov and shrb ss cmp sub insb and hlt inc pusha scas xor xchg xor enter xor shl popa xor stos jge adc fdivrl push xorb lret test add dec push insb pop les movsb repnz lret (bad) xor inc add hlt enter leave inc ss pop lds mov jl (bad) ss and lcall dec dec enter mov cs adc xor push dec mov (bad) or mov test xchg fistpll dec cltd and lods add addr16 clc or pushf scas in cmp clc inc cmp cwtl or add sub or les js dec mov push les xchg enter or (bad) lds rolb mov add or adc jmp cld insl cwtl sub (bad) mov xor cmp dec bound movsl xchg jle xor dec fmul fildl sub mov mov jmp nop pop jae mov jb adc fxch inc cmovb add jge rcr fstps adc mov outsb mov fisubr in lea test cs mov add ja mov je sbb popa adc mov lods or and or pop adc add lock cmp and push push sbb inc arpl es (bad) dec aad cmp cmp cmp pop pusha ds mov pop and insb test xchg mov hlt sub movsl (bad) (bad) xor push dec mov inc shrl push decb pop inc cmc es jo push inc rcrb sub mov xchg sub addr16 in pop (bad) (bad) add sbb test adc inc adc and lock adc adc test outsl lret bound sub dec mov test in mov add pop test sbb sbb and dec or lea (bad) pusha mov add cmp and xchg and dec mov mov loop lcall aam xlat cwtl pop ss int push add push sbbl xor add fstl faddl int3 pop mov addl dec xchg ss callw jae int3 add lret lcall int3 loopne mov mov pop ret jno punpcklbw xchg and sub dec inc dec clc inc add icebp inc adc push inc arpl (bad) xor mov and xlat xor pusha sbb sbb or nop mov sub sbb pop pop inc call scas iret adc push jle inc xlat cmp pop mov leave adc xor xchg sub stos call stc je (bad) xlat enter lock in inc movsb pop fcoml rcrl push dec add mov in mov outsl sub cmpsb jb lock mov repnz adc in mov or push xor jno mov sbb std pop in lret iret push enter cli out jns lea inc mov jl sbb (bad) dec imul rcrb xchg decl shlb mov aas (bad) mov clc sub shrb inc hlt inc add mov cmpsl aam and inc and push (bad) or mov ret cmp push loope rorb fwait pop xchg enter inc mov sbb pusha xchg push imul or dec loopne loop sysret lods jle in adc xor adc rclb sbb rcrl fs lahf fdivl mov test out adc popa sub nop rolb pop jbe mov add cmp xor mov jmp mov lock lods sbb adc es std rorb jl cmp jo adc inc push pop adc imul push push mov and fistpll mov out dec mov arpl and sub call (bad) icebp dec adc inc mov (bad) cmc sbb sar fcoms sbb cwtl mov lods mov and jge rcr adc lea dec and adc push out mov aas xchg xchg mov mov xchg pushf pushf dec cmpsl mov mov shlb xchg in ds ret adc cld add imul fucomip mov push shlb inc and lret dec sub repnz jne (bad) hlt mov dec sbb sub aas mov inc mov test pop add add inc hlt loopne jae add dec or mov in test and or jnp pop into (bad) lret push call pop xchg sbb stc pop inc stos sub pusha inc inc pop add sub subl sub mov jmp push mov insb lods nop add subb dec pop adc adc int dec dec pop add scas fadds adc adc pop mov in dec sub adc add pop and push pop jns rcrb jnp (bad) sub shll pop mov cwtl imulb add js outsb inc push je fcmovbe and enter mov je xor and xor icebp cmp out dec sbb inc add lds pusha fst add (bad) (bad) mov lahf push add push jae icebp pop fisttp adc (bad) push adc dec test lret je rcrb sub les mov sub je and add sub dec add les add adc dec scas mov lods mov add mov jecxz orb je fsubl orl xchg popf jo pusha jnp jmp data16 test rol cmp pop add fdivrs mov sbb add pop mov mov iret push clc mov cmp cmp add stc addb cli xorb pop xor xchg push adc in add inc mov in add lods loop push movsb mov cmp ljmp pop dec rcr inc add xchg adc icebp cmp mov (bad) out jmp dec jge andb orb arpl xchg xor test mov sbb or xchg out lock int rolb les and and pop (bad) push aam pusha es clc mov fcomps jecxz add das cli jb add mov dec popf lret test mov gs add mov leave clc in mov repnz push adc fadds sbb push mov add dec push loop in insb pop fldenv push push bnd pusha lret mov in xchg add mov fdivl (bad) adc jecxz scas les mov lds mov testl retw inc cmp jmp shlb sbb aas enter shlb pushf jmp das stos in xor sub inc adc out sub rolb fildll mov cli adc enter jo jle xchg mov fcmovnb inc les call fucomip popf xor hlt jecxz outsl xchg add xchg int mov mov iret lods sbb and rol insb sbb add aaa pop stc adc pop dec out mov mov sub nop xlat lods pop lahf sbb insl add sti mov cmp cltd push xchg cmp dec and inc mov outsl sbb test push fldenv push adc lock (bad) mov or add push mov xchg call (bad) mov inc xchg push fbstp dec (bad) push (bad) das (bad) testl aam add mov or add insb into mov or test ret ja or lret sbb inc psubd jae dec xchg mov dec adc (bad) cltd mov mov adc sub lods pop aad popf shrl xchg xchg in cmp out inc cmp out das or loop pop shl scas and scas lock fisubrl and dec xor dec inc mov cmp cwtl scas and cwtl out daa mov push lret jp cmp jl cmp outsl scas bound mov stos leave mov push loopne cmp fadds adcb add push push and shrb mov mov xor (bad) or adc inc add inc adc movsl imul clc (bad) or cmp inc sub and out and mov mov dec pop shrb jns push xor lods aam cs xchg xchg jl dec scas out stos je xor and stc mov lret iret add xor repz cltd movsb push dec pop pop add sub cli add push mov sbbb xchg fildl add loopne pop adc pop cmp dec pusha popf pop inc mov mov sub movsb mov loop add mov cmp or xor sub xchg adc push lods pushf data16 cmp dec nop mov inc popf outsb sbb in mov sahf pop dec ret jne test and cmp loop dec cmp sbb sub les push mov dec out sbb dec call js adc sub mov push mov push lock das pusha mov cmp aaa adc ret add in jne pop add push outsl mov dec rolb fstl (bad) and add cmp cmpsl bound dec daa xor mov loope adc addb inc nop int3 inc insl adc mov daa pop rcl sbb fidivl out adc sbb test or out or inc pusha sahf jno xchg dec fwait sub jo fsubs inc ljmp and inc cmp xor (bad) dec and adc add xchg inc mov les fmuls addr16 es call cmp push sbb loop push cltd lahf repz sub rcrb movsb mov stc xchg iret sti cmpxchg pusha lock inc adc add jge inc sbb push add mov mov fldt adc movsl sbb insb movsb pop pavgb out push mov lret int dec int inc dec mov mov fisubr ljmp and push (bad) sub lods adc hlt add data16 adc sbb cld xor or scas cld push mov jb adc scas mov lock out mov inc movsl call sti clc (bad) cli fistpll lahf sub fnstcw mov enter fwait cld cmp xchg xor orb push and pop xchg inc in pop cmp fdivl adc addb xchg loope scas xor loopne adc aad or in and daa push (bad) fcoms es pop fsubl push add inc push mov fistl lahf loop mov movl fistp mov lcall cmp sbb push (bad) or adc rolb hlt inc push loope mov cmpsb and (bad) sbbb lock jae lods mov ret adc push xor out addr16 imul nop lret push and mov cmp jle pop sub add call and push and add jb lock xchg sahf (bad) movsb push sub add cmp (bad) call cmp pushf inc decl inc or push push lea push nop jo jle ljmp jl lds or lcall cwtl sub repz ja jno cmp pop xchg test cs pushf test enter jmp jnp jmp movsb frndint add xchg (bad) sbb movsb xor jecxz inc cwtl sahf fs flds lock movsb adc jmp sub inc or (bad) std in enter mov test aam jno imul int3 pop loope nop pop inc push adc push iret and mov dec xchg and shlb dec jl xchg and pop in aam inc dec jecxz sub sub pop dec mov xor sbb mov push pop out cmp or sbb xor addl into sub lahf pusha pop test adc jb or test jo,pn and aas aam popa cld and dec or lcall das adc sbb or pop into mov mov or dec pop mov inc aaa mov je mov inc fsts mov fmull xor pushf xor hlt les dec inc and lcall pop and cltd int3 cmpsl pop add cli cwtl imul and popa fs iret or cmp rcr enter fidivl cwtl xchg and xchg rol and push cmp lock bts outsb pop bound dec xchg (bad) dec pop mov subb sbb push or aas add sub and mov pushf push rcrb outsl mov add or incl jg inc jl sbb add mov daa cmp (bad) hlt add cmpsb adc rclb test scas add (bad) sbb add dec mov nop inc add fimul daa imul add xor cmp es xchg lods jp add mov push dec mov insl lock sub adc sub push sbb mov adc push enter les daa dec adc movsb cmp pop ja push pop pusha cmpsl xchg adc lea les mov and orl clc divl cmp sub and scas or sbb iret test (bad) movsb arpl enter jbe pusha inc adc clc (bad) sub cmp inc adc inc pop mov and xor iret dec loope push (bad) cmpsl aaa xorb test (bad) add sahf mov dec imul dec stos addb pop and mov dec pusha or sarl sub and popa and mov addr16 and into js push mov xchg test test lods out in xchg dec (bad) sub or loope adc mov inc cmp xor pop adc lock lahf out ja lods mov pop xorb inc enter daa mov sub dec mov andl les test dec add aas andb mov sub mov mov jno mov lods dec adc stos jl popf (bad) adc push movswl sbb into push rcr cmc lcall addl mov and mov mov adc test inc mov sub sbb mov out imul mov mov lahf imul (bad) lahf add sbb pop into pop mov add sbb cmp xor notl or jnp (bad) rorb jns jp inc test adc dec mov cmp roll sbb test fnop push lcall xor mov cwtl push xor lret (bad) push cmp sbb dec or mov (bad) push pop aas iret mov adc add pop dec repz sbb es mov pop pop (bad) ja add xchg rorb sub hlt cld push enter lds jle jl sbb cltd xchg sbb adc add sbb sbb das dec test push dec rclb xchg cmpl movsl and cmp xor mov adc adc add bound test mov cwtl sub fs dec dec shrl inc insl xchg enter rclb xor sbbb jbe and push xchg inc das (bad) push roll sbb leave push push imul mov sbb mov xchg (bad) cwtl mov xor xorl push inc (bad) sub inc sbb mov icebp push test xor mov pop add bound loope mov mov jns sub sub or ds rcll add xor loope mov scas jo into test push push xchg int pop and into mov sbb xor cltd cwtl gs cwtl (bad) xor fsub stos sub sahf xchg (bad) mov xor ljmp and (bad) sub pop xor loop xchg nop xchg sbb test add push or lods inc push outsl mov mov loop gs mov sub cmpsl (bad) mov rcr sbb sub mov addb xor sbb xlat push pop add push pop mov in inc jbe mov fxch les subb es push sub adc std mov or (bad) fcoml add orl (bad) dec pop scas mov sbb push (bad) mov cmp adc cli jns add pop icebp xor jmp jno add in les and inc cltd sub cmp add pop add mov roll add xor mov nop rcr fnstenv shl popa fwait adc mov cld xlat mov add and clc loop and adc xchg lods js cmp xorl pop sbb dec and test das stos adc dec pop and dec mov push jno add jl xor or test mov fsts adc lea movsb pop nop roll movsl inc clc mov sub (bad) adc repz movl (bad) inc pop add push dec push cwtl xchg mov je mov mov sub stos dec jno add nop and arpl inc add pop (bad) lock mov add das or std hlt push mov add jne inc add jecxz adc test outsl xor cmp mov pushf push mov test mov pop mov cmp add jb add adc pushf lock bound inc sbb add stos insb rorl lock add jno,pt and xor pusha or jmp clc test add jb jmp fldcw lock sbb ret loope sub cmp push testb adc bound cld lds push inc test in mov outsl sub in xchg mov xor xchg and push pop mov cmp dec xchg sub enter (bad) fcoms xchg fildl int adc mov pop rclb jl xchg sahf cmp icebp add mov pushf fyl2xp1 subb dec add sbb and sub sbb push aaa movsl adc mov pop push xchg cmp pusha test iret stos mov and or stos imul cmp loope or mov sbb test xchg loopne dec mov or pop mov fcoms cli mov mov jno lock popl mov test cltd imul cmovg inc iret shrl mov or add fiadd pop lcall add inc fsts push add aam adc divb lea mov xchg test inc imul pop and cmp mov roll adc leave bound or mov and mov pop call sbb and dec pop or mov imul cmp inc pushf push in sahf and repnz jle add adc jle cli push pop cmp jns rol jno test ljmp lret cld mov sub int3 adc jne pop das ret inc call jecxz (bad) fstps shll faddl clc popa out repz insl in in mov adc inc add cwtl arpl pop test and (bad) shll cmp out pop jbe add mov ds jmp inc nop cwtl mov add andb push aam rolb (bad) lcall cmp dec pop xchg or inc dec sbb and mov inc add (bad) dec and pop fdivrl clc call repnz and movsb mov fisubl insb or jns push pusha les add sub repnz dec or aam adcb xor pop xchg (bad) sarl sub mov lds (bad) sub (bad) test loopne add std mov rcl mov sub jecxz add dec dec sbb push inc push adc add test call mov dec fnsave cwtl add push jmp rol cmp cmpsb rclb cmp push mov push mov mov insb (bad) adc mov push movsb xchg dec dec mov (bad) mov ljmp sahf or test add outsb aad add xchg sub mov mov push or inc jle dec xchg and jae mov cwtl cmp mov adc test inc pop add sub orl jg dec loopne sbb inc popf leave cmc add stos setl (bad) ror and pop xlat jmp add mov inc sbb sbb add pushf add ret push xchg add imul lcall popf push call pop or (bad) ss loopne jmp dec out cmp pop xchg fildl pop inc test (bad) sbb push add add mov xchg add xchg dec (bad) into loopne push fwait mov lcall jno and insb mov jae pushf stc dec dec add push push nop shl mov rorl sbb cld sub or lcall stos sub sbb cltd push test mov dec and add or push es repnz cmp jne into mov movsl movsb mov dec stc inc rolb fs test lret cmpsl clc pop js inc pop mov call adc pop enter mov mov fdivr add xlat adc xor dec movsl and jmp lret insb jl inc (bad) adc lods lea pop (bad) mov test jl roll pop lock inc add mov rcrl lds xchg fs shrb mov sbb cmpsb aaa sub in adc adc lods jo or (bad) std mov clc clc xchg push mov mov icebp pop aad adc push xchg fisubl add arpl xchg or loopne adc and aaa inc adc mov jae (bad) mov fcoms inc test push fs call adcl inc sti pop scas out mov jo js jo sbb inc bound orl call ljmp dec inc jo movsl or add adc sti mov scas xor lcall mov movsl adc or enter push mov pop add mov xor push jnp cmp stos xchg mov int3 add aam fcoml mov dec mov sub add repnz ret pop lahf add push (bad) adc and sub mov or adc sbb adc inc rcl push ljmp les mov mov loope adc push cwtl lret xor adc enter test scas dec dec repnz pop icebp adc mov lea (bad) cmpsb (bad) dec fs ror mov push mov mov xchg daa popf pop and iret stos cltd aas xlat inc sbb loopne pop add mov call sbb xchg enter add mov ds movsl jg mov fsubl mov mov inc xor lds stc int3 mov jno sub cmp cmc mov leave adc add shrl dec fist loopne inc mov xchg cli cmpsl inc stos mov scas add sbb data16 lods aam int3 add mov mov nop das dec inc mov pop stos jbe lret pop jo or fcompl jns test std fbld ja cmp mov mov lods push cwtl and std or fs push jecxz xor neg mov adc pop or sahf inc push or nop rcrb xchg (bad) dec mov cmp in add loopne pop adc jge sbb jge (bad) divb sub test pop sub cwtl add int mov clc adc mov xlat push repz test sub jmp rcl data16 push (bad) xor (bad) jle sub jb lock pop sub push ljmp pop inc cmpsb fildl aas wbinvd fiaddl adc test dec jns add jnp fimul xor add add xchg inc call fwait xchg dec outsb enter cwtl push cmc ret mov adc psubd add mov mov inc lods pop sahf clc mov inc ja add fldl mov xchg sub test add cmc (bad) jne mov imul cwtl mov ror dec imul jg sbb or pop inc pop lock dec pop lcall nop add pop pop adc ret push ret xchg enter push sub push or ficoml inc into test and and or sub mov or fldcw orl push mov push nop (bad) jl pop test or inc movb xchg dec and test push pop xchg mov push fimul add mov loopne je mov dec cli push mov sti and xor mov xchg dec xorl stc (bad) jno mulb adc ds sbb pusha sub pop push mov (bad) xor (bad) je outsl push or test icebp cmp int3 pop add jne adc loop sbb sub mov sbb jge or adcl mov dec xor popa loopne adc jle adc (bad) dec and mov push mov add cmpsl sbb sub in sub or sbb scas adc add push push and test xor ss dec xor or push shrb cmp jl sbb (bad) jnp and nop sub lock loopne,pn mov mov and xorl dec xor mov dec sub pop inc shlb ds and movsb iret nop adc outsb dec xor or inc pusha push xor mov sbb pusha mov mov ja mov push adc and dec and sub lock sub xchg push mov lods mov xchg in xchg jl inc fsubrl and ja pop dec dec xchg jb clc arpl xor bound add adc data16 hlt adc add insb cwtl cltd cmp or rclb add dec sbb inc add mov cmp and sbb js lret sbb push adc sbb xor and inc cmp jo add ds sbb scas adc push adc test int3 cmp adc xor mov insl xor enter push (bad) mov fisttp sbb test dec es ss add test pop scas movsb sbb mov xchg lock sub enter adc xchg addr16 or and xor pop adc and mov mov sarb hlt pop dec or call imul cmp jb in popa mov test sub orl inc cmp adc sahf and cmp cmp xor (bad) and dec xor in (bad) mov shlb js push sub in or or mov mov adc jo and mov insb dec dec clc xchg xor sub dec loopnew xor inc les (bad) adc and andb icebp stos pop inc dec push mov xchg lock inc insl adc xorb gs fdivs mov ret pop mov push nop hlt mov xor enter jns push inc dec pusha inc dec sbb rorb clc dec andl adc mov add mov and jo,pt pop sbb cli adcb (bad) push push pop xor adc dec push pop (bad) or loope mov decb or push jae lcall test sbb inc addr16 adc call jno (bad) rorb inc add xor cmp fidivr jmp pop (bad) out inc cmp imul in pusha push sbb xchg xchg loope cmpsb and adc out mov clc mov pop rcll mov (bad) pusha sbb imul out pushf jmp sbb push push xor (bad) pop sbb push (bad) loope movsb pop sbb xor jl lods adc and sbb stos add xchg dec sbb adc les xchg add (bad) push fsubrl mov call fdivs roll roll loope cld inc inc inc xor adc icebp adc in (bad) aas cmp xchg push nop or cmp mov sbb dec stc loopne popf sub sub and inc lea xor pop add mov pop cmp push outsb xchg inc mov mov insb cbtw push push cltd (bad) out push add out or sub adc mov jo xchg inc enter mov mov imul lods loopne (bad) mov and inc pushl orl popa cmp ret pop push and add xchg push or push sub jbe mov sub out and ffree sarb xchg adc jp adc push jmp aas xchg mov mov and cwtl outsl mov dec fs loopne pushf adc sbb adc enter (bad) jecxz mulb jle cltd push in orb fdivs cmp fldcw and fbstp push cwtl mov es pop subb nop loope jns (bad) lock daa (bad) mov xor jp outsl xor sub lea out mov (bad) insb (bad) nop nop push push mov and pop or cmpsb out push (bad) sbb pop leave xor push xor sbb test inc mov push or inc xchg jo inc clc jg pop ret inc jl sbb stos and push xchg xlat cmp xchg pop pushf add jmp and push xchg dec notl enter mov or inc mul push adc (bad) enter xor insb add push test aas es movsb jno push hlt push sub rcr jne sub rcl pop add pop sub sub sub mov inc and jecxz and xor outsl pop add lods imul sbb and clc rolb push mov push les data16 jne or cltd cmpsb loop ds sbb inc adc es lahf mov add nop cwtl mov inc pop mov add psubusb in icebp daa mov push js,pt es mov and fisub mov cld sub mov daa aam adc and enter cmp dec inc in cld in sub hlt (bad) cli push pop insb mov inc scas pop and inc lcall aas fcoml daa mov push cwtl or inc lods cmpsb fldt inc inc xchg sub push ja jle lcall popf inc mov pusha sbb aas jns adc cmp and jb je jg push jmp inc lods and mov call mov xchg aad pop mov and or pop pusha and pop fsubp out into xchg lods sub add ss aad jnp imul jle or fsubr enter jo push fiadd xchg dec jge xor lret dec mov inc sub jl andl lahf mov jo push sub jg nop sub and add daa xchg add sub lds pop push rorb adc sub xchg sbb arpl and call add sub sub add and inc shll es or ret mov pop lcall lods outsb cs imul daa cmp nop xchg scas pop sbb bound or mov cmp mov into add dec xor jp sahf enter add inc dec clc bsf ss cmp dec and sub xchg stc xchg dec inc mov rcrl test fmuls sub sub mov xchg add mov in cmp jo dec cld xorb repz inc nop test lcall lock mov mov inc aas and mov stos outsb or jg or jo insb dec xchg inc or dec notb cwtl dec nop sub lods je es cld adc add ret (bad) jmp cmpsb xor dec pusha xchg loopne fmull sbb xor mov push add or adc push test and inc inc dec test adc imul dec xchg or fsubrs xchg inc or sub test push mov and popf and adc or rclb adc int3 shlb adc (bad) inc mov movsb sub sbbl pop pusha fcoml add test inc mov cmp xor sub adc or or adc and dec inc dec enter leave popa pop add sub imul pop xchg xchg xchg add jbe inc add lock sub and or cmp rclb std inc add imul pop push cltd jmp mov mov loope mov fwait push sbb ror jecxz or and inc cwtl fs and subl nop xchg inc and fmuls mov add and inc mov adc sbb xor and in adc shrb xor mov mov cs int3 and or adc and xor cwtl push orl mov sub pushf movsb inc lods mov pop pusha sbb sbb cmp adc dec cmp je mov mov or and push sbb pop sbb mov xchg pop sub mov and aam sub xchg cmpl aaa cmpsl or jns jecxz add and inc pop sub mov or sub sub xchg pop cwtl pop outsb pop (bad) vandps inc call adc shrl je sti or xor pop sbb and inc add or push addl inc add test fsub sbb std adc sbb bound xchg push inc inc mov push sub mov xor inc cmp clc stos fdivs cwtl rcrb cltd popf push xor insl or aaa jo mov cmpsb pop and idiv lods lock sbb xchg stos jnp hlt addr16 and or inc (bad) sete push fdivrl movhlps xchg (bad) je call imul cmp push insl dec test loopne xchg hlt fiadd xor je xchg add outsb je into add jl sbb test loope imulb add movl lods add imul inc stos pop inc dec xchg out in sub movsb cwtl (bad) cmp enter nop aam ds or lret inc scas add int3 xor mov cmp or aam enter jle ret cld add in push mov mov sti and xor adc loope xor mov sub add xchg cwtl jo push or (bad) rorb cld mov inc or add hlt (bad) in jl pop roll inc dec nop jne aad adc mov das fstps add cltd out cmpsb pop (bad) cmp int3 dec add out and adc pop push dec fsub mov scas cmp mov clc daa call or push dec nop enter les mov je sub xchg pop xor dec dec test dec es sub mov jb sub js pop div outsl sbb jmp pop cmp jo insb and into cmc pushf adc or movsl sub nop ljmp andb adc mov test mov je adcb and adc and das stos mov movsb cmpb jo pop cmp int3 sbb adc dec (bad) adc roll dec jne aas jns cltd push in clc push insb call mov mov out enter xor jmp test push outsb push enter sbb test add add inc outsl mov and xor and xchg inc push lods push or adc push push push push enter lock jno rolb mov xchg test mov stos add insb fldl cld xlat imul addb mov sub test es outsb mov test enter (bad) stos inc jmp add mov test inc daa mov inc pop adc jo and xor push adc push jnp push mov aas sahf test push sbb sub xor add cmpsb adc arpl (bad) sub jmp bound or jp push mov test ret nop push fldl pop imul cmpsb pop xchg imul sbb adc rclb movsb imul insb and cwtl cmp lock pop nop test shrl jo data16 (bad) das sbb ja (bad) xor push mov jl add loope aad add and xchg jns add pop aam push xor sbb dec sbb stc fcmovnb and sbb lret or mov orb inc sbb dec sbb icebp movsl stc popa and iret pop lcall dec loop daa xor add mov jle sbb jae or aam das int3 jp inc loopne xorl and xorl mov adc std les lcall roll les and xchg pop andl push push fmull push and and inc push sub popa dec xor adc pop insl inc loop cld inc push sbb add and cmp out jge and mov adc xor or or fcompl mov (bad) popa lock push inc test adc jp cmp inc jl cmpsl cmp dec xor jg bound dec fwait adc and clc push popf mov sub push inc pop push jne mov movsb sub dec pushf sbb jbe and pop mov aaa mov add push cmp mov cltd mov mov and jle movsl adc add insb inc jo and ret adc sarb xchg inc mov push mov or xor test inc in cmpsb mov or jl loopne mov clc inc xor sbb push xchg pusha cmovo mov jae lods sub outsl lock cmpsl lock daa sub movsb add push mull cmpsl mov add xor push test and dec push inc mov fcoms or scas addl xor xor sbb jo movsb sbb mov dec jns mov sub ss sub xchg add call pushf addr16 insl pop nop adc mov push test iret and popa sub mov adc rol dec sbb mov popa mov lcall ret mov mov xor inc or push test xchg push ljmp inc or cmp pop and imul mov js aaa xor mov pop and nop mov cmpsb sub mov mov orl and inc shll clc jmp add icebp cmp fistl add and mov jl shll jo dec dec les jno sub add (bad) lods lret add cwtl sbb popf add sub fwait pop nop cmp fisttpll dec push hlt add gs in push bound add inc shrb lods pop ja (bad) ljmp or std adc add push orl or sbb aad popa mov add sarb push pop add lcall add lods adc sub mov fs js mov icebp mov xchg clc es sbbl and or pop sub ds adc mov xor into cs adc adc sbb inc das test shrl out clc inc pop or repnz push fcompl and adc add pusha cmp mov dec popa push sbb and mov mov hlt incb arpl xchg cwtl and and mov jecxz mov ror aaa xchg cltd call addb adc in cmp and jno std fist stos pop xor dec pop mov dec sub xor mov adcl pop dec xor cmovo or popa push cmp xorl xchg adc insb test dec mov mov data16 adc (bad) pusha mov jae adc sub pop and aaa mov sbb sub inc insb les inc inc lods xor or sbb rcr or add (bad) bound mov adc and xchg mov sub insb popf adc lods xchg pusha ficom cmp test adc xor lea push les rdtsc or mov mov fs iret push sub into std arpl loopne fs ljmp rol sbb push sbb rorb dec sbb shr jno sbb leave lea inc and adc mov mov mov and adc aas in mov dec cmp push add adc fsubp inc icebp add lcall and sbb movsb or mov push (bad) mov cwtl movsb xor sub sbb int sub mov je fs push mov loop cmpsb sbb push xor adc jno mov fldl ret sbb sbb rcrl mov test jns adc je jmp lock cwtl lds lret lods fcoml xor mov gs inc lret and inc dec push sub adc fld test in add enter adc sub dec jl ffreep or inc push les or cmpsl sbb jne cmp xor mov mov insl jp fcoml mov xchg add aaa jne cltd je add cmpsl sbb loop popf movsb inc inc fcmove and inc or cmpsl inc cmp and push movsb addr16 mov ret adc jge gs faddl sbb rol pop xor pusha pushf and xor cmc mov es or cmpl cmp sub dec or mov pushf enter pusha xchg lds ret jecxz sub mov jno in and inc cmp aam jle les addr16 cmp lds sarb inc inc rolb adc or faddl in add xchg mov or lea (bad) js out mov std jmp cmp mov or sbb inc lea test xchg std push rcl sti nop add mov repnz jbe (bad) pop dec add gs push js or cmp divb sahf mov (bad) fidivrl pop push ljmp and lds xchg nop mov sbb mov sbb add xor jae iret push arpl js idiv jo setle cld je (bad) fbstp mov enter adc adc adc cmpsl pushf ds nop inc fmuls mov mov dec test enter add pop xor mov sbbb jle mov ret cmpsl add std outsb jle xor inc cltd inc mov mov in add adc imul mov movsl mov cli lods add inc xor jb cld loop arpl lds daa mov mov and insb sbb inc xor js insl mov mov and cld push jmp imul addl inc mov (bad) rolb add inc and mov mov xor fdivl jecxz loope xor andb pop rol call xchg cmpsb imul ljmp cli or fiaddl inc push imul sbb add lcall lret out or les ss test jge cli add xor jbe add je push jno inc pusha xchg dec pop add ljmp push mov add movsl pop push das addr16 sbb inc xchg js add push mov icebp sbb sub dec cmp ja nop icebp daa rep add mov add cmp and add mov daa jae enter arpl das dec or js pop dec or or jb and pop (bad) add xor ja push sbb shlb je dec fdivrs fcmovu push aas loopne test sahf (bad) dec data16 mov leave sub dec add xor xchg lcall popf or and pop stc call fdivrl mov jecxz add jge or icebp cmp out or sahf bound cmp add push push outsb inc daa orb lea jae loope adcb sbb mov jne int3 frstor pop js add mov jmp mov in inc sub adc push fsubs divl pop push jne push mov stos aaa mov test pop test pmullw push cmp je jge push dec test inc mov pop xor mov xor sub rcl nopl pop js push push jae out add lcall mov sbb cmp stos xor nop mov cmp out cwtl pop in mov aas push sub lock add popf mov add sbb push mov mov sbb pusha adc mov test pushf cmp mov xor xchg pusha or dec sbb loope in movsl push mov cmpsb addl out pop sbbl cmp dec aas popa push xchg rolb add sbb cli jecxz mov rorb add xor scas push adc add add fidivl pusha add bound sbb cwtl inc mov out adc jmp mov adc icebp or or cmp mov add hlt nop test cmp (bad) insb (bad) ficomp jb mov ljmp int cmp jbe test adc aad inc mov cli in or pop xor pusha jne or call ds loop jle fcmovb pop pop pop pop mov adc cmp mov mov fs sbb nop ror adc xor ret inc test and stos inc add push cmpl dec sbb push rolb mov je enter add jnp,pt dec mov mov adc and jo (bad) pop dec inc sbb pop repz mov test inc test pop test leave sbb (bad) jge mov js sti icebp dec icebp lods loope icebp orl push jnp sub cli add sbb shll in dec add cltd test imul add jns push push adc (bad) (bad) jbe movsl inc stos mov cmc pushf aas je and jns nop push xchg mov xor daa mov ret rcr pop dec inc in test add (bad) jns sub imul lahf repnz pusha mov push xor pop inc cmp and test mov (bad) pop or add gs mov mov outsb js add add mov and addb pushf add mov push fidivr add in popf les mov pusha dec testl je leave shlb push lods push push sbb dec cwtl mov mov shlb movsl add xchg loop int3 adcb mov arpl sahf dec sbb js sub adc mov ret fstpl sbb and out xchg mov shrb dec flds js and and inc mov cmpl pusha adcb jl insl mov sarb or xor mov prefetch imul pushf pop dec sbb lret mov xor add sub and push cmp insb dec cmp adc cli inc inc hlt bound pop stos pop add int add loopne fs cli cmc push sbb repnz lret arpl (bad) mov sub xchg enter repz in mov les lcall xchg dec test incl enter push into add aad and or lods xchg xlat xchg sbb (bad) (bad) stos fcoms and inc in loop imul cli push pop outsl rcrb shlb mov in sub scas lock adc inc arpl cli fist nop add fnstcw or and jns sbbb cmp das xlat ljmp orl mov mov lahf fstpt cwtl push sbb test nop jl fldcw and imul in rcr inc cmp and fisubr jns and xor push (bad) push ja shrb mov fisttpll mov leave pop ja inc jne ret dec dec sbb adc jmp inc push daa (bad) mov cmp or and mov push jge add scas je xchg add add inc xchg inc rolb or push mov enter xchg test cld stos push imul or js scas sbb mov insb daa or cmpsl mov icebp sahf daa pusha and adc or lods or and mov and pop pusha jl jmp js test xlat adc mov sub pop lea cmp mov xlat sub inc and push xchg into xor pop add shrd imul imul jb push cmp pop dec fistp loope mov shlb sub ficom stc push sbb pushf mov dec and movsb xchg popf xchg nop add dec jp add pop daa and add (bad) int in mov das les ljmp and pop insb in pushf outsl pop mov and cmp mov mov add test enter mov outsl sbb mov int3 data16 add cwtl sbb repnz and add adc add inc ds fstl insl push or inc call and xchg dec inc cwtl mov xchg test jl sbb scas jl aam test pop inc jo mov sbb sub push push or rorb and sti adc cltd (bad) mov je mov cltd mov popf (bad) or adc ret fmul mov movsb pop push call push test cbtw dec test pop jp vmovdqu and js add xchg std divb add xchg nop out rclb dec mov aam mov mov adc les aas mov push repz mov inc xor add mov hlt icebp sbb out es inc add inc cmc lret out nop jno scas pop pop popf sub lahf in mov scas pusha add inc lods dec addr16 mov sbb and outsl aaa les lock or xchg icebp xor cltd movb mov test xchg orb sbb add sub mov mov dec mov push add jmp outsl push xchg pop add sbb cmp xchg cld out mov js add push movsb push cmp inc xchg pop pop mov rcrb clc test cltd cmp inc jl jge bound pushf xor pop pop movsb sub out flds inc xchg inc mov rol pop lock sub adc lret imul rorb inc cmp stos out shrl fs out mov add adc cmp loopne add add sub imul je lock out mov jge inc mov pusha sti add repz pop pop movsb cmp fwait clc or jne inc cmp (bad) bnd adc add bound xor arpl loopne fwait push rorb push xchg mov cmp xchg cld push js xchg mov enter or mov pop cmp stos test sbb pop call push js and add out enter pop loope xchg xchg cld and adc sbb inc test adc pop pusha dec sbbl ja xor mov add test insl dec rolb cmpsl and call stc jmp dec xchg add (bad) shlb add sub cmovge sbb dec cld sbbb cli sbb imul push fdivrp pusha call xchg add xchg add ret test add aas add bound jle test cwtl lahf sbb sub (bad) lock add sub stos add aad (bad) (bad) mov mov dec xor sub je in or lahf sub fcoms fistl out jmp cwtl pop mov cmpb jne ret shrl jmp icebp fs cltd test mov test sub dec inc mov mov sub or pop add in iret loopne pop rolb scas xchg dec sub es cmp sbb inc out lcall daa pop data16 fsts lret mov ret insb call leave cmp sbb push (bad) sub lahf add xlat ljmp daa or cmc and maskmovq idivl mov outsb in pusha cmp nop xchg rclb and loopne cmp nop cmpb orb push sbb stos icebp fidivrl push add pushf and mov mov dec fimul push pushf mov ds inc mov lock xchg jl jl fs sbb xor jns add adc ljmp pusha test test addb fcompp call add sbb lock xor loopne daa sbb cmp mov or jle mov mov repnz sub mov lods cpuid pusha fiadd pop jl push and add ror shll sub inc pop pop nop add adc add cmp (bad) test push adc jno dec cwtl xchg and add xchg add sub fdivrl adc cmp jno cmp pop imul mov dec mov dec push inc fdivs or lret and mov mov pop out lcall inc fild jae addr16 aas and sub scas lock insb test les inc dec and mov cmp fcoml in dec pop add adc in pop shlb add push (bad) sub mov (bad) or loop out and popa add sub int3 mov lea pop insb sbb stos nop roll dec pop lcall add push sahf push out lods neg add shrb inc test pop jo dec xor xchg fs add add jecxz pusha inc mov push mov inc imul mov or add pop jg jl ja sbb shlb and arpl or push or xchg in outsl adc in fs adc and loopne repnz outsl mov mov xor cld mov (bad) in or out (bad) dec add movsl sbb inc out loopne pop clc lods push pop insb cmpsb xor push test je push test add mov or push cltd fdivs mov mov add addb sub cltd mov mov insb fisttp pushf pusha mov or mov (bad) mov fs mov lock push inc sbb loopne popa pushf jb xor fsubr sbb mov or sbb push mov xchg adc mov sbbb mov addb cwtl sbb mov (bad) stos movsl xchg push dec cs lahf rorb or add lea or pop daa and pop hlt out dec movsl jl pusha lods jmp repz nop stos rcrb xchg xor addb push sbb xchg inc addb inc hlt sub add (bad) mov lods add inc jg xor scas fist (bad) idivb rcrl xor outsb outsl icebp arpl or xchg xchg ret mov mov add pop inc pushf jo out jnp push dec inc and adc int mov insb or xchg addr16 lock int adc gs sbb pop mov add lock cmp mov sub sub sub sbb mov (bad) xor cmp pusha pusha or faddp dec sbb dec in mov imul test inc rorb inc in push icebp clc and pop dec sub pushf add ret pop rolb rorb push inc shlb xor jecxz,pt dec mov (bad) xor dec xorb les imul sbb shlb sbb sbb stos shll add push jno xor add and shrb inc add add pop divl mov cwtl pop sub and or mov outsb hlt dec clc add push das jnp loop pop addr16 push cmp mov jl xorl cmpsl or push jb and dec xor mov fwait add push icebp stc int3 cmp subb mov adc dec sarl or sbb add orb nop cli nop sbb arpl inc sti cli in xor push jne push inc xlat out es sbb popf adc mov sbb add inc adc ss mov fnstcw jl cmp push subl rcrb lcall das push add pop cmp add inc xor pop cli es xchg mov or movsb add popf dec jle adc loope push out add dec push inc mov js push sub pop cmp xor xor shll dec sarl xchg sub jno jbe lcall xor sbb adc mov sub test adcb fldl add fadds js pop (bad) mov mov inc sub mov or and add inc insb add test lea lcall ds xlat add daa cmp repz jns and ret rorb out in sahf nop lahf push or jb or rol or test add loope sbb or mov in jns rolb cmc adc (bad) sub xor aam jl xor sbb sbb cld cli adcb insl xchg jl mov nop add nop jp push xchg sub push test rolb rorb mov cwtl push pop ljmp test mov cmp pop mov add jl and lret mov out jbe and imul hlt sub das es cmpsl shrl sbb xor inc das add shll popa sub mov movsb mov xchg mov or es cmp jne xor inc int3 in rclb mov inc xchg daa and imul (bad) add mov adc flds icebp sti adc repnz outsb pop ss vmread ja icebp mov sbb dec jae sub adc ficomp aas pushf adc roll xor sti sub xor and mov xchg jae or add pop dec (bad) dec stc adc sti push adc jo xor je dec jl mov adc jbe movsb insb lahf push dec lock xchg push push jae add (bad) das test add cmp cmp push insb popa adc cmc insl in mov fstpt fcoms cli icebp cmp lcall pop and add loop mov add mov sbb add jns add call sti mov mov cld (bad) jne jmp sbb xchg adcb mov xchg jp,pt adc xor imul sbb and test jno add in push lcall mov sbb xor lcall cmp loope mov js inc sbb mov pop and push cwtl pop mov inc sbb loope daa orl lcall dec int3 sbb addb es push add lods or aas jnp cwtl test insb js cmp lock or and sbbl fs sub push sbb pop push lcall xorl sbb test movsb aam inc jns lods outsl adc xchg inc cltd int3 xor inc pusha add pop xchg mov sbbl mov mov nop add mov les stos pop fwait xlat xor xor mov inc mov jl mov enter mov xor movsb fstps rolb mov or fidivrl xor les iret mov sub mov sbb ja push fild add pusha adc xchg int pusha hlt and mov imul test sub push leave add nop add loop xor pop inc (bad) js inc lock lods inc arpl sub test push stos mov cmp mov pusha out notl mov mov stos push in loop outsb inc push bound test push and mov bound add mov mov int3 das cltd mov xor js pop dec insl sbb mov pop mov wbinvd sub mov jl push xchg les sbb dec add fildl stc inc push add imul rorl pop add or push pusha subb inc mov popa cli popa and je dec test adc (bad) testl pop and push xchg and pop pusha inc cmpsb and test loope loopne in xchg clc add insl (bad) mov sbb inc insb scas pop lock jbe push nop mov popa and fwait arpl btc lock test mov cmp mov jmp adc cli push mov pop addb adc stc mov pop mov dec clc push dec dec or cmp mov add clc mov pushf xor in sbb xor cmpsl jecxz and mov cmp lods and sub fwait xchg pop movsl sbb push bound and cmp add push es imul mov in bound imul icebp add mov movsb (bad) lret or test in bound sub mov adc jbe adc inc mov mov lock mov mov jo loop in lods pop xor add and sbbb jae and xor jbe subb xchg clc loopne sbb out ja mov je cld les lret imul sub push cmpsb lret fsubr mov xchg js popa (bad) repz faddl mov add xor sbb or rclb cmp mov mov or and cmp enter test les hlt dec loopne dec int3 iret jmp sbb movsl aam push push addr16 mov and inc mov mov inc movd xchg adc add repnz jmp pop and add mov mov imul inc mov shrl test add fs fdivr mov push sahf cmpl (bad) stos pushf mov adc fdivrl jbe xchg adc stc rorl push dec push mov add jo loope pushl sub (bad) pusha dec pusha stos lock add mov loope add mov add insl lahf fwait ror adc mov mov jne xor mov pop (bad) (bad) and push dec clc adc cld cmp (bad) neg push jae add aad jne rdmsr adc cmp add lods push add push jmp aaa push aaa or and fldt add sub cli loop and out pop mov pusha ljmp mov imul addr16 rcrl icebp in enter sbb add pop xchg sub sub popa xchg dec out in dec jns pusha add push jl orb sub imul sub bound aaa pop movsb nop or cli mov (bad) cvtpi2ps jecxz mov sbb xchg mov add push xorl js arpl aam push das mov (bad) xchg insb pop out add lock mov leave push jae test pop call mov mov cmp lret jmp push je dec cltd fbld push or into mov orb dec mov hlt pop cwtl push sarb add sbb dec pop and add (bad) or xchg inc das in adc pop and mov insl outsl loopne pusha xchg adc add (bad) xchg dec aaa insl xorl inc subb sub fnop flds fs lcall or jge aam xchg or popa mov mov enter jae je imul mov xchg and mov data16 loope xorl das dec cmp push lret enter adc and inc adc jle adc mov rorl push shrl inc aam std js fistl faddl jle mov out mov lret xchg clc shlb or test insb adc outsl push xor cltd and fsubrs inc or dec cld aaa add negl sti shrb add stos or (bad) test push sub out rcl lcall mov mov xchg dec idivl enter lret subl mov add rcr addr16 sti xor popa cmp cltd or cmp cmp cmp test mov and aas outsb adc lods add int3 jno xchg pushf push lock dec loope rorb mov aam add iret inc hlt push jne fcmovnbe jb das push xchg sub nop sbb cwtl loope and dec add add aaa jb ret int cmp xchg daa bound add enter or or cwtl inc loopne mov mov lret sbb and icebp dec aaa push xor out mov repnz or mov add lock xchg (bad) xor add aam mov ss (bad) dec mov push ret xchg adc lea sti das test xchg and and sti jmp mov sub test pushf (bad) lods mov add sub pop inc shrb addr16 xor jno jns dec xor mov pushf sbb popa popa shlb sbb or inc adc and rclb mov into add call nop xchg cmpsb sub test into arpl enter (bad) jp adc test ja and int fstl dec adc cltd jne jno leave mov cld xor adcb addb sbb push pop fdiv lret and xor and mov bound roll dec jae dec sub mov dec push cld icebp push mov pop or mov popa add jge (bad) push insb or ds jl jmp fcoml faddp shrb sbb dec add cmp add push pushf cmp adc (bad) or pusha push dec int3 bound pushf hlt pusha inc mov sbb lods xor nop jmp fadds adc pop pusha (bad) stos lcall dec popa jg add jns std push mov adc pop xor jmpw mov adc pop mov popl add mov xor loopne outsl xchg add ds (bad) in pop addl fistp aaa dec pop cmp lods adc inc repnz mov fsts jmp mov loopne sahf adc mov sbb xchg fdivrs cs ret push lret lock or xchg push dec cmp adc popa iret xchg xchg add mov mov js hlt mov cmp outsb or add leave ljmp test mov stos scas pop lahf clc mov dec inc and sub ss mov push in icebp (bad) sbb jo mov aam mov daa sti xor add sti add xlat mov add out mov adc (bad) sbb add mov (bad) push add xchg loop and sub adc sti icebp and add push clc loope cwtl and inc lock ds and sbb dec int mov cli sbb pop ret test ror faddl or ret jg cwtl sbb lods int xor sbb jl and shlb push push inc pop sarb data16 out enter and cmp adc clc mov fidivl (bad) jo dec jle mov mov inc les fnstenv cwtl mov jae test inc repz sbb or add ss es mov popa push popf inc adc xchg inc sbb fcmovnbe push jno addl jns aad enter daa shll dec inc aas (bad) popa cli std loopne insl add call lds fmull or mov xor rorb add pop lock pop mov shrb sub dec aam sbb xor lds cmp push add adc xor bound pop cwtl loope mov dec lea mov enter adc cmp mov clc inc leave add pop pop sbb dec mov stc jae data16 pushf sbb test xor or ret (bad) sub shll adc or fimull rolb push mov inc insb mov xchg dec or enter lret adc and (bad) xchg pop push push mov mov int mov xchg inc or push rolb push dec rorl sti sub sbb sub je sti or popf adc lods push sub nop clc pop loopne pop add mov inc xor notl loopne mov lods enter cmp mov xor cwtl jnp mov loopne ret test add lea test jnp add mov push dec xor cltd hlt adc sbbb pop dec mov pop data16 or andb push sti pop xadd and dec in or je cwtl cmpsb cwtl or xchg repz loopne ss dec add inc sub dec and and mov mov mov movsl dec test lahf add andl mov sbb js pop mov mov aas (bad) cltd mov xor imul adcl loope or xchg adc pop dec push cmp dec (bad) sti or or int3 addr16 xor daa in sbb jg add cmp adc pop xor bound mov mov shll sub lods xchg inc rorb xchg cs in hlt (bad) lock cwtl pop jge,pn clc mov jae lods sarb add outsl sbb sub mov and mov jo jbe pop adc out lds mov pusha mov dec cld rolb sub add add in sbb or pop mov add insl xchg add pushf enter push or outsb into xchg add popa sub adc test int mov das add lea add ret inc or mov xor mov enter jnp sub xchg loope fildl int3 and fldl push push push push jp orb int mov pop fimul sbbb nop or ffreep cmp add inc sub pushl loope or dec inc push test push push popa (bad) lds sub decl or dec neg fisttpll push mov add inc inc and xchg pop add push je add xor cltd (bad) jl add ds inc popf ffreep jp mov xchg mov loopne push add cmp (bad) stos jl inc movsl mov arpl pushf xor test aaa add push dec mov fldl inc mov scas in ds add (bad) lcall in push andb xor ja add (bad) test mov sub or dec call push enter int3 sbb les (bad) (bad) mov xchg jnp sbb popa or test mov out in imul ret sbb pop mov add sbb dec push pop cmp popa bound pushf sub inc sub out iret jl and cmp cmp pop or loopne in les lcall or jp cmp add sarb cld add cmc out push idiv and mov icebp inc in (bad) dec inc cli sbb inc call fidivrl or sbb das iret adc add sbb xchg push inc pop xchg aaa fnop jns jns add sahf or fcomp repnz push add cmpsl cmp push enter lock mov je rorb push sbb mov movb mov test mov cmp add sti inc test bound mov arpl mov push push and aas hlt jge push fstpl cmp or jp push daa and or fnsave loopne jg mov ret (bad) and ret cwtl fldenv mov pusha sbb add mov int test inc adc inc hlt or repnz cmpsb and sbb adcb add dec dec aas arpl sub lahf pushf add das out push movsb lcall (bad) cmc mov (bad) jbe add or adc cwtl mov inc cmp mov js cmp push inc (bad) pushf xor add fnstsw nop loopne adcl sub mov dec adc das adcl insb fnstsw bound pop daa js jnp dec test aad les push in cmp mov mov push dec sbb pop fmulp nop add int out xlat or mov lcall jp sbb insb iret dec outsl push inc js mov sbb mov jbe cld sbb mov notb and addb mov (bad) mov jnp and inc clc mov sbb mov and cmpsl enter bound arpl nop pushf add je lea popa mov mov sub ret inc dec rorb push mov fsubs push inc xchg lods add aad lds or outsl mov push lds rorl inc jp dec adcl das ja add aaa adc pop pop mov adc call add and xchg mov nop ds movsb call xchg inc leave add adc pushl cwtl inc pop xor dec inc xchg cwtl (bad) aad mov iret sbb test xchg cwtl dec cwtl mov popa dec lds add shll dec add pop (bad) leave sub sbb adc fmuls call add mov fs repnz jg add xor mov je in inc inc loopne out clc sbb movsb or frstor mov loopne rcl out movsl xor mov lret and jl push add inc sub and and mov add xchg inc mov int push mov stc push xor je mov cmp and jnp cld add jmp jecxz mov or push dec push and jl jecxz ret pop dec jg sbb or jl and out add lcall xchg fcmovne sub mov push fstpl mov fdivrs add stc add stos gs fdivs cmpsb movsb mov xor cmp dec adc push xor and pop adc nop mov xor sbb movsb lcall adc lods icebp je push xlat pop idivb pusha cmp adc fiaddl jle mov add arpl mov or mov lcall jae xchg inc mov pushf (bad) jbe test pop mov and fsubrs xor push call mov inc in (bad) scas add es push push fist mov lahf mov xchg push lods lcall insb lods inc adc je aas mov lds xlat mov fstl mov or js push mov divb dec outsb push adc dec mov mov movsb mov pop in sub mov es fs lock cmp (bad) dec mov movsb popa mov xor sbb xchg cld pop ja add movsl popa rorl js fistl mov jl (bad) mov and in xchg jne sub xchg (bad) jbe add aas fildll mov stos in mov add ja aad add cwtl popa lret mov daa (bad) adc mov test sti cltd idivl in into dec adcb add outsb in push mov sbb inc push xor movsl dec push inc jns mov mov inc popa jl in jnp adc lods pop jmp sub loop,pt mov mov push mov (bad) ja xor stos mov mov repnz lock cmp mov inc xor loope xchg movsb out mov loope add incl adc or pop popa mov and dec movl push fild mov add cmpsb int3 add (bad) test repnz push sbb (bad) enter push push test mov imul lahf sbb fldenv out jecxz cmp fcmovnb add js cmp iret xor les mov scas mov shl sbb xchg gs enter in xor shl in jno xlat hlt jl inc or stc add mov ja or les nop mov push fsubrs add or shll fs fs hlt add lret push rclb inc or testl dec sti shlb iret xlat xchg and and xor enter pushf add add mov cmp dec add mov mov test dec xlat int3 icebp dec push mov out sub out jae inc aaa stc daa adc xlat dec orb addl inc or sbb dec inc sti dec int3 adc lock cmp cmp push cmpsl popa xor cmp mov inc add in jmp cld or ret mov js add out aas out mulb movsb dec js in lock test and xor test jge xor adcb mov dec out sub out mov je inc (bad) xchg cmp xchg (bad) lea mov mov push sbb push or nop and movsl cmp xor inc jns outsl lock or sub movb ja push pop call (bad) cmp adc cmp mov jno inc cwtl ret cwtl cli add int3 ljmp popa inc xor testl cmpsb adc push push adc aam (bad) sbb aaa cwtl adc cmp xor inc nop mov hlt mov out xor cmpsb jns add shlb jne dec lret pop push and pop ja test in test enter lret rolb inc mov jo nop mov rcll mov xor fsubs xorl mov mov xchg inc add or lock dec cld popa pusha outsb stc testb (bad) jmp sbb std lods jp add flds lcall mov fadd sub xor jp mov mov stc push or jae add jns adc std push in dec and mov xor push or movsb add insb pop js insb cmp scas mov (bad) push add (bad) mov inc inc or push addb sbb mov sub std add loop es movsb inc stos rcrb sub add lcall (bad) and pop andl and aam fnstcw dec addl mov xchg addr16 mov aam adc sar jne add in dec add sub pop mov lcall sbb adc adc add sub shr in testl loop pop hlt pop mov stos int3 dec into inc dec adc int3 push repz dec (bad) cwtl inc fistpll lret sub mov or popa stos and inc mov push add outsb repz fldenv push and pop stc je mov push mov adc dec cld sarl jb pop (bad) fnstsw lods jle push add adc mov adc jo push sbb or mov cltd or cmp and inc and les aas inc xor mov (bad) mov or outsl dec dec dec out loope loopne mov cwtl add jl bound in or add js push stos mov add ffreep add xor pop dec or repz bound pop dec pusha lock jns xchg xor pushf add mov mov adc and pusha xorb shll jp stc rcll popa mov add cmc dec repz inc pop cmp addl les mov push stos push loopnew fnstcw add sbb daa jp pop inc cld fmull hlt adc mov sbb sar pushf jp leave and insb (bad) xor adc adc add pop test inc (bad) fcomps or into mov jb lret in cli mov test icebp stos je sbb adc nop mov arpl and or or or pop jns hlt mov and add mov cli sub ljmp xchg clc xor (bad) outsl jo dec sbb mov sub js pop push and jne insb cmp xor jbe push cld jp adc sub xchg or andl mov nop test pop test clc dec adc test push jl arpl mov fs pop movsb (bad) lds mov pop setns inc jbe adc lock add push cmp cmp cmpsb inc inc lock or push xlat movsb pop adc or call test sub mov les xor stos jl mov pop mov xchg xchg mov and or aaa clc push add gs mov add adc (bad) je and push iret div mov jg ja (bad) (bad) or (bad) xor or xchg jne (bad) xchg jns cmpsb jns jb sub sbb xchg insl xchg mov int3 pop pop mov les addl lcall stos cwtl dec xchg stos pop jle add lods fdivl and xchg orb mov push cmp or add unpcklps mov les jnp add mov fwait test xor cmpl rorb sub in cmp jns std mov (bad) jle cli xchg popf sarb push test xor sub jno sub or incb aas popl cmp inc andl pop arpl and jo jbe pop (bad) adc inc lcall loopne mov and add add jnp fmuls and aam lods adc outsb cmp je push mov jge sub or dec dec fildl test add gs jo xchg or cmc hlt mov je inc xchg fwait xor insl or jnp xchg xor or sub mov mov movsb and sub push sarb pushf push mov adc jno adcb es or push jge std and pop fwait mov push das adc jl in mov xchg mov add ss sbb aas test jge cwtl insb jo cmp sti and mov test clc test pop les xor hlt and movsb dec inc int dec jg xchg and jb nop adc nop in movsl mov sbb call aam xchg adc mov add lcall clc cmp (bad) xor push ljmp push or fmuls cld and add sti test jl and push je lods adc aam and mov lods mov jle inc adc sbb cmp lods mov inc or mov xor mov mov stc inc lods jbe and add mov std pop inc sub rclb add sbb test inc cli and and inc enter int adc in adc enter (bad) mov mov mov cmp push les ds or jo cmp (bad) nop and jns cmp psubusw adc mov sbb (bad) xor clc dec push enter cmp sahf sbb mov or mov ljmp daa jne dec hlt loopne xor mov add andb or add leave mov (bad) pop and xchg sub test xor cwtl or push lock or sbb in sub test repz je adc sbb xchg enter xchg adc mov repnz adc aad aaa repnz jns cmp and lret addr16 pop aad lds shlb xor or (bad) jecxz sub test rorb cmp out mov cmp push sbbb adc mov call xchg mov rcr roll in adc pop add sahf add lret call lock aam mov push xchg mov push clc add out inc fadds (bad) cmpsb (bad) hlt shl scas add xor fldt rcrb mov repz xor sarb pop xchg mov mov inc out sbb xor sub test testb and (bad) lock add (bad) ffree pop inc xlat icebp fist idivl ds mov lock xor mov fmul adc icebp mov std (bad) pop (bad) cwtl fimull pop lcall ret jo ljmp lcall or cmp cltd dec jmp adc fsts sbb std repnz int mov loop out (bad) iret dec addb popf ret stc xchg push jb cli jp sub add add or jb aaa aam mov cwtl sub sbb cli or imul mov out fistl jp sub jno and in (bad) push mov mov (bad) fsubrl repnz pop adc pop push or xor jb pxor push adc enter mov in cwtl les (bad) call cli in sbbb or icebp fcmovb std lret sbb mov inc hlt insb inc and les and test int mov jp cmp stos xchg add inc or lcall je in add mov or mov xor je fildll mov mov pop jbe and out xchg lock mov imul fdivs or icebp lcall dec add hlt mov cmp mov inc add adc aad adc or add pushf fsubl inc lock add dec and add and adc sub orl cmp les cmp scas mov outsb clc xlat sbb fs or mov inc mov lock cmpsb jp sbb add jbe (bad) and dec pusha arpl cld mov cltd hlt (bad) sbb xor (bad) fld inc mov jecxz outsb pop ret mov pop or jbe xchg mov out add xor je sbb mov add jmp sarb add int3 fwait out adc sahf pop je pusha sub adc cltd pop adc jecxz pop imul pop cmp incl mov xchg enter iret rorl test hlt push cmp insb lahf xor lock outsl pop dec mov in adc pop pushf sbb sbb subb add jb jne add ficompl or mov jno in mov or mov pop mov sub cs lock or lcall and call jb sbb add loopne add push jno push or dec add cmpsl adc fsubl rorb lcall adc mov (bad) test jl and (bad) rolb scas in inc adc and rcrb cmp bound das or fs sbb shll push add lods icebp pusha scas mov add out ret test and cld or sbb test lods pop aas aam js aas icebp psubusb fisubr inc adc sub xchg lock mov nop test pop push push pop dec and fsubrs bound or jo mov and out int mov pop sarb mov pushf jb gs sub test mov add add or lds xchg loop mov adc or lcall jge push xchg add les clc (bad) and iret cld stos test test les enter cltd jl push dec push dec aam or push in mov adc add sbb xor js or add push sbb fdivrs sbb sahf gs faddl lods imul or and stos mov inc (bad) je mov call add or adc push mov test movb xchg cs mov testl cmp and add mov pusha (bad) pushf clc or lcall icebp mov push cltd subl ja jp inc mov outsb jmp fdivrl xor sbb pop inc test xchg fs or add cmpsl mov add cmc fisubl pusha pusha test add lods add ja jo add les insb idivb scas lcall mov xor inc dec movsb loopne cmp jb or cmp lret pop aad inc clc inc cltd inc xor adc or or mov and cmp add leave adcl test andl add test ret add les call pop flds out cmpsb inc shrb xor dec xchg push lds mov adc nop test imul test mov cld sub and adc dec add and cltd add shr or movsb mov or or push adc xchg (bad) icebp and cmp add pop add and cwtl jmp cltd dec cmpsb imul movsb cmpsb adc sarl aad inc push jne cmpsl and icebp fs les out push cmp push ret dec test fstpt and je sbb add (bad) jae cltd cmp xor inc add je mov or cli cmp and mov add call bound mov or and nop sbb jo or mov xor cmpsl (bad) out insb cmpb adc xor add ljmp add sbb jo xchg or and fdivrp (bad) jl popa xchg test adc stc push or lcall roll mov fwait inc test (bad) pop sbb push js js or pop dec mov mov fwait lret xor (bad) jno inc cmp xchg popf int and add cltd cmp add and inc mov ds inc mov out or or fs movsl loopne pop cltd add or and fstpl dec xlat js ret movsl mov jmp mov push inc lea mov or popf stc call xchg jo movsb sub (bad) loopne or sahf inc or repnz into ds (bad) mov lock xor push lcall mov flds and or loop pop push push rsqrtps mov xorb fsts nop and mov or pop insl and sbb daa in mov adc or pop or push add inc loope push pusha add movb jbe pop inc lods add mov int3 dec addr16 or xchg adc add mov inc lods and dec pop inc add ljmp adc mov fmull pop inc jp movsb xor cmp (bad) je mov mov pop xchg sub or mov sbb mov std dec dec sub xchg add mov add dec (bad) std mull mov and faddl xor jl pushf mov jo popa in ror loopne stc mov xchg faddl pop mov iret fstps and test pusha add (bad) pop mov into adc and mov xchg cmp push add lret loop push les add call mov (bad) dec jmp mov clc pop dec ljmp rol popa dec add outsb cltd and mov mov enter adc add lahf test insb add ja inc loop aaa test in andl je and pop int3 ror sti leave and add ret repnz andl and jle es xchg add mov jecxz mov int3 mov arpl popf xor cwtl mov dec add pusha cmpsl sbb lcall mov sbb insb adc adc add dec test dec lock dec mov and rolb push test sub ret mov int3 cmp nop fcompl insb mov das adc mov repnz mov push push sbb push enter cmp xor shlb jo aam clc jae mov aas pop push mov xor out and jp inc loop xor clc or imul and cmp xchg outsl adc (bad) int3 mov ja adc insb xor pop inc mov xlat call pushf test dec js aam push fsubrl add cmpsb repz xchg out negl psubusb rclb (bad) fcoml scas push rorb test add lods push out mov pop stos cs add add stos xor pushf sbbb sbb lods push and stc shrd pop add arpl ljmp inc push jl sbb test (bad) add (bad) pusha jo sub jb cwtl add and push nop sti pop test xchg jae inc mov inc dec xor sbb add lcall lods das and (bad) sbb rcrb jno lock mov push sti xor leave test add push clc jne pop nop add cmp or sti sbb push and adc cmp dec sbb aad add sbb mov xchg jge in xchg and or daa mov dec push (bad) jg inc mov add add pop xor add dec inc push popf (bad) sarb repnz pop adc xor xor adc cmp sahf sub mov and pop mov dec repz lahf cmp pop leave rcrl lods sbb xor push imul pop sub cmp xchg cwtl js fcmove pop repnz imul cltd adc lods (bad) repnz (bad) adc inc mov cmc fwait jbe and lea ret pop sub fnstcw cmp push cmp and inc adc sbb pop repz stos jmp push nop enter mov push push adc stos sub into inc or pop inc dec add test add (bad) dec stos jnp leave sbb and in pop xor sub mov das mov fldcw mov inc in lea and dec test add add xlat cmp cmp mov pushf push loopne pop add jge or xchg add daa ret ret inc sbb icebp jecxz inc (bad) into add (bad) push mov add or jno orl jle gs shlb or inc mov cmpsb mov out mov andl lock (bad) or fsts sbb sbb xchg jb add outsl sub data16 std (bad) not mov outsb fs shr and int3 dec inc out (bad) push rclb add inc pop cld and aad ret nop adc repz adc cmp mov xor add push out (bad) lds add data16 push xchg shrb std lret addb aam pop imul adc adc (bad) icebp mov mov orl dec jg mov pop data16 test add int3 jb sbb (bad) adc loopne int3 add inc dec fsts adc (bad) xor mov or xor sub cmc inc data16 jno add jae inc inc cltd fidiv sub pop insl add push (bad) (bad) js mov ret jge adc sbb lea add mov hlt pop or sar int3 orl outsl insl dec jno jns rorl pop enter and and test (bad) and sub pop sub xor insl and cmp and inc sbb pop adc enter xchg jmp push nop sbb sbb repz push add stc and push dec hlt cmp outsb aam add push dec pop testb fs mov rclb push pop movsb or mov gs cwtl fistpl adc sub dec add sbb test xchg or inc jns mov cs dec stos in out adc imul mov push stc sbb (bad) dec inc xlat add ret dec fstps jge add in jle jnp push adc add and (bad) push push add cmp pop fldenv add mov test adc test fstp sub adc dec adc stc add adc mov aaa imul test xchg add shll sti test xor pop add inc in sbb mov xchg sbb xor andl push in pop dec inc adc cwtl inc arpl subb lock repz sub push (bad) aas add stc test push popa pop cmp dec shrl xor and dec cmpsb loopne mov or adc jne and pop mov cmp inc fsts test call add mov mov test test shrb pop movsl add xor mov add cmp enter bound sbb push sahf add (bad) call out adc lods jecxz xchg ret sub push aaa and push ret sti inc dec inc pop les lahf push in test es sub adc rorb sub xchg dec mov movsl adc sbb js sarb fnstcw pop cmp mov out push dec roll ror adc or sbb aad add les (bad) lock popa push icebp test into sarb pop mov ja and js cwtl add adc inc clc orl adc push xchg or mov inc lahf adc mov inc in mov xor jne add cmp add repnz insb dec mov sbb mov xchg shrl inc add mov divb subb repz adc fwait nop fistpll mov and stc (bad) fisttpll dec and sahf push out and sbb pusha sbb cli fstps jbe xchg xchg cmpsl xor mov pop cmp jmp loop mov cmp add out out lds add aas add sbb cmp test (bad) dec sarb jecxz mov mov fdivrl cmp inc inc sti add xor push add (bad) mov arpl add lds (bad) xor inc add iret mov jmp lcall xor add jl loope daa cwtl dec in or mov jg add cs sub pop imul cwtl rolb js xor call xchg loopne repz jl dec push inc popa add loope add cmp add out scas lea add jmp xchg xchg icebp std testb xchg xor dec or push pop clc adc addl cwtl add pop (bad) fadds pop sbb ficoml sbb fcoms adc stc cld xchg sahf fs add (bad) enter (bad) shrl mov fsubrs cmp xchg cmp xchg sub add xlat dec pop lock sbb mov adc mov jns or rorl arpl les repz xchg adcb notl daa and add ja shrl xchg and sub rcr push daa ret mov push loope test sbb xor imul (bad) fcomip iret mov add popa inc push add push and cwtl sbb mov ret jo add push (bad) cwtl imul adc pop mov int fsubrp xor lds das cmpsb rcr sti call xchg adc dec or test inc mov js daa add je inc xchg lods subb sub lahf push add daa cmp xor xchg mov insl cs push pop xchg jne mov lods pop xchg lock xchg mov loopne fmulp cwtl leave lock xor push clc fadds mov and sbbb sub mov dec and add enter call (bad) xor mov (bad) jno mov pushf cmp push cs stos pusha enter or cmp dec and sbb cld add leave fldcw sarl push pusha lds addb or inc fsubrs cmp add addr16 fstps pop or sbb dec test xchg movsb and fdivl pop je mov mov mov and rcr mov les cld and fdivs ret test cmp or stos lcall cmpsb loop insb and mov and movsl (bad) loopne add jns call lock mov sub fidivr cmp mov nop add pushf mov and aad (bad) nop scas int3 loope sti mov popl je xchg and ret or dec mov je add pop dec mov sti push cwtl push sub pusha push sbb cld mov out push je imul enter add jno cltd add je pop push ror xchg push or aam shr and add mov insb fcomip mov repz fadds pop and shlb xor inc sbb add es icebp or mov pop das ds xchg push fstps (bad) dec mov lret add in push and fisubr sbb xor fnstcw loope push (bad) (bad) test cmpsb shll popa aad test inc add pushf sbb gs fdivrl cmp and divl xchg (bad) cmpsb (bad) mov fwait movsb add and sbb insb loopne flds mov rolb push movl and push test mov sbb outsl add aas roll sub inc fsubs aad loope add pop jmp fcoml cltd add pop pop int or sar mov fsubr cmpsb and fcoml or add xlat mov or add (bad) (bad) adc pop jl jl insb loop adc push adc mov bound fs add loope movaps pop cmp push pop pop sbb loopne mov repz mov stos adc push dec inc jp (bad) pop ljmp mov cmp xchg fiadd xchg dec and lods xchg imul mov mov push cmp lods mov fs mov mov test cwtl push pop iret and out adc add mov test pop sarb lcall ja data16 add cmp lock arpl js push add test frstor xchg push adc inc jle adc (bad) mov mov test (bad) push push daa fs adc fsubs test test test pusha mov test sbb sub sbb dec sbb and in xchg mov fldl jp add sub cwtl push or movsb or dec or dec mov push mov or jl add and push push jmp nop pop (bad) sub pop sti mov inc mov xchg mov mov xchg jge jle jo add cmp lret les scas inc xor adc pop rolb xchg jg stos movsl jmp je mov sub sbb xchg add loopne lea vmread jns add mov sbb mov add pop ja inc mov scas adcl inc nop xor xchg jno and jb push add dec mov cmpsl ja add cmc les jne cmp pop mov add in mov test dec push js sahf les jl mov shrb repnz add mov or and aas popa mov out xor mov fdivrs mov mov and sahf mov mov addr16 and out add push out lock mov sub jns pop shll popf adc add dec push dec imul clc push lock lahf xor shrb xor jg adc sbb cmp test dec jo test dec inc sbb repz incl pop push add out mov mov dec inc nop sbb stc adc ljmp int and test xchg add pop pop cli movsb jo sbb cmpsb xchg shr mov rcrb shrl gs enter adc stos xor adc adc inc sti inc arpl ds outsb fadd cmp dec rorl adc mov and xor sbb jbe add (bad) mov mov cmp inc and dec xorb aam sti ds dec mov fadds mov movsb push cmpsb mov xchg mov movsb or and clc icebp inc sub enter nop adc add shll pop mov add mov adc rolb leave cld adc add xchg lahf jmp shr les add dec inc add es xor add fmuls mov adc pusha mov cli dec fwait push cmp xor lods pop shl add insb (bad) aad jge mov (bad) mov push ret push addl jmp nop fsubl cltd push pop pusha pop test (bad) or mov and push inc pusha push or or jb mov xchg sahf mov push add sub xchg and cmp mov dec add sbb lea addl imul shll loopne ret ja movsl push sub or xor xor int mov aad jl cmpsb sub test mov add out call (bad) repnz and and mov popl icebp sub add pop and cmpsl add repnz mov jns roll mov js (bad) repnz xchg xchg xchg push lea add inc mov pop jecxz xorb addr16 lahf fcoms xchg and adc jl mov add bound add add arpl push or and push mov shlb xorl cmp fild inc aam icebp mov sub jmp lds inc lods xchg pop or jns add or jne movsb fdivrs sub pop movsb or adc mov cld mov mov movsl mov inc shrl adc int3 fadds mov inc adc jecxz in (bad) repz insb jl dec mov sbb mov mov shrb add mov cmp xor sbb lods add pop and addr16 call test mov push lock sarb jbe dec jecxz jle test into inc pop mov ja push (bad) repnz sahf mov or enter xchg jle stos sbb cmp movsb mov mov cmp xchg out add mov inc int3 or lods add out inc mov xchg jmp es (bad) mov jnp rolb rol (bad) add loopne or (bad) mov add cmp popf cmp xor dec mov fdiv outsb mov add sub mov xor test and movsb cwtl (bad) ljmp xor mov subl mov mov test cmp dec pusha fcomps imul lret or insl xchg fisub xor or mov ret and repnz sub and jo icebp mov inc fistl add bound rolb add gs mov add fistpll shll xor sbb mov and data16 xor fs std test sub xchg sbb or les in mov mov test in pushf cmp or push sub push mov loope dec cmp repnz cmpsl test cmpsb jae lock sbb jmp lock inc adc mov andl push mov test lcall push repnz mov or (bad) testb fdivrs iret push xor sbbl inc cmp sbb add ja mov idivb sbb addr16 sub stos lods pop outsb je into lods sub add add sub add jge lret es in add fs int or gs push subl hlt inc mov xor adc jo pusha add mov icebp or add push xor stc or or jae or bound insb dec mov xlat pop fdivs ret push test xchg test rcll je xor adc fldl sbb sarb loopne ljmp pop add jle std xchg or dec inc nop mov pushf test enter mov fstpt lods rolb imul mov bound popa mov andb jae stos dec sbb jno push test sub ljmp and or icebp cmc arpl cmp inc mul pop daa mov inc movsb fimul mov sub push popf divl dec int push out arpl adc adc mov incl pop pop add cmp mov dec mov mov pop cmp cmp loop arpl insb xorb loope icebp adc xlat ret nop push sar and mov lea xorb (bad) popf mov inc andb jo shl dec sbb enter lret xchg outsb lods lahf sbb lock pusha mov mov and push in adcb rcrb add add mov mov fwait btr bound ret xor movl sbb pop idivl shlb pop gs mov das pop pushf insl mov rclb inc push pop lds sub shll jl jno mov lock (bad) xor cmp jmp icebp add jo fbld std loop pop ror subb push xchg test clc subb mov sbb cltd mov stos jno dec ss fisubl loopne fcoml in stos es xchg jl sub dec mov or gs cmp pop xchg cmc enter dec add sti dec jns push scas xlat addl fs scas adc lods mov cld pop test add push lods add xchg pop lock sbb xor xor (bad) dec push out mov xor stos clc sbb (bad) les add ret and and jp ss icebp dec cwtl add int clc (bad) rclb mov cwtl mov cs adc add cmpsl lahf dec pop xchg loopne add xor aas insb dec add arpl mov (bad) push and mov sub fbld lock dec call lret or mov mov add cmc mov add push pop test mov adc fadds gs lahf dec or movb add (bad) sub push add or pop add (bad) addr16 xor sub test and cltd mov dec sahf movsb mov and pushf in (bad) cmp (bad) ss and xchg xchg cmpsl xor add jp imul mov cltd add sbb (bad) inc dec xchg push dec jne lret (bad) (bad) dec bsf pop and cmp int3 inc cld add nop pushf and mov xor hlt subb pushf pop xor push pop mov jb add xchg pop sbb aaa cmpsl mov out icebp inc popa push push fsubs sub mov ds add pop adc lea add jle xor mov add mov lret add inc jmp lock lahf dec stc xchg and mov pusha ror call xlat ret nop add sbb js loope mov pop enter cld and adc mov and or inc stos sti lahf and add rep sub mov cmp stc add cmp outsb mov dec push cmp pop add fnop xor dec enter or dec insb and cmp dec inc add sar dec add jecxz xchg xor cmp cli pusha dec dec js add adc add lcall mov pop mov ret inc test add mov push enter and loopne scas sahf les clc movsl ffree fnop popf sbb xchg lret nop add pusha rorl inc lret mov xor inc dec jge add sbb pop jmp fild inc dec add insl ss fisttp adc mov or mov add fs bound out stos into jmp jno ret inc inc rcrb scas or std (bad) mov mov xchg cmp arpl lods test mov cmp (bad) (bad) mov out cmp repnz add push mov loop movsb add les add mov bound cld add sbb sub andl cmp mov mov cmp sbb add repnz mov adc int3 clc mov cwtl ret dec or cltd lock dec test push cmp fimul in push push mov lock popa dec std pop adc sub inc mov das dec adc adc dec pop xor mov rorb push cmpsb bound cmp and (bad) adc hlt sbb popf mov pop in imulb xor out fsubrl sbb push mov jmp add bound or or insb insl sub je mov sbb xchg xchg mov aam jp xchg and pusha push shlb add lret pusha push ret test dec popa cld (bad) jne daa cmp or cmc mov mov add cld in call int3 dec cmp mov movsb mov es fdivs cwtl dec or (bad) flds dec jecxz adc fcompl insb lahf inc inc sbb adc and lods lcall ljmp pusha enter test cmpsl mov nop mov mov add push jo xchg mov adc xchg mov xchg aaa cmpsb movsl jmp loopne cmpsb sub pop ds adc and cmp int imul mov out mov and mov roll jecxz pop push ficomp test inc dec nop xor aaa sarb push and pushf push add inc xor outsb push dec cmpl fmuls sbb push jns rolb out mov cld xor inc in imul add push xor (bad) push movsb xchg mov nop add sti stc into mov cmp leave sbbl dec out inc mov daa mov xchg movsl loopne std rol stc or or mov inc in jge sub add ljmp popf inc fiaddl inc pusha xchg push jo out inc mov loopne test leave mov or movsl push adcb push xor xor out mov repnz add adc les icebp push pop movsl pop push xor and sub imul jbe add push hlt test jno addb roll stos lea lods lea jle push mov (bad) mov xor rcrb outsl movsl sub rorb dec lock jge cmp fs in inc test sub mov test packsswb push push lock sbb dec outsl xor (bad) nop adc xlat push pop xchg pop sbb inc lea lahf and mov cmpb cmp ss mov lret pop xchg rclb (bad) jo mov add cmp lds push fcmovnb inc rol mov mov sub dec add sub nop (bad) mov inc mov leave jnp or je sbb xor push inc push fisttp mov jae push les pop enter mov out call push or testl (bad) nop aam add add push adc xor pop mov mov je shll sbb rcrl dec mov (bad) (bad) (bad) das dec aas adc mov adc xchg loope sub das dec popf rolb (bad) jno push in dec or (bad) xor and pop and push mov push mov mov pop int addb mov icebp or loope cmp xchg mov sub mov sub cmpl dec xor insb and jg push pop add sbb sbb clc pusha pop mov dec shrl push addr16 or mov jge push dec mov add loop xchg clc dec aam adc xchg cld rcrb sbb cli push cmp ret add xor pop adc pop shll aas mov push hlt inc and jmp xor xor mov xchg sbbb into add mov cmp (bad) mov aaa popf inc movsl adc dec adc aad jns mov ret ret mov out shlb xchg fisttp pop mov inc sub loopne xor pushf inc sbb pushf cld int3 mov push pushf test imul fmuls cmp add mov hlt leave daa je add je adc sub cmp and mov mov and xor popa stos sbb sbb inc push cli xchg pop push sbb call popf xlat test pop cmpsb push pusha sbb lds jecxz cmp mov lret sub cld add idivb xchg mov push fs add ja sbb xchg and pop rcll lret mov aam outsb sub test popa dec add adc sub fsubr sub scas jns mov xchg inc pop inc lods adc outsb inc push mov mov mov les iret (bad) mov push jns mov inc arpl dec das or add or push dec les pop jno es shrl xchg shl adc das lahf clc loopne mov test stos cmpsl out lret push add (bad) lods in mov add pop mov jl pop int3 adc ret jae mov fcomp add scas iret jecxz push stos hlt pop sub mov cwtl enter stos sub add test daa add repnz gs stos or pop sub daa cmpsl or bound lds popf xor jnp test add dec cmp inc insl test movsb pop (bad) push in rcl inc dec sbb shrb lahf inc sbb mov or inc xor pop fwait out sbb ret dec xchg add call jmp push adc cmp mov ja pop push xchg mov push lea cmp adc leave call mov scas lock sub roll add jbe (bad) in movsb ret popf add scas jmp pop cli js clc daa sub pop sbb inc add push js add out sbb out push rorb add and arpl lods rolb lods pop add sbb xor sub ret sarb add and std cmp cltd xchg testb xor shl popa add aaa rolb pop cwtl les arpl cmpsl or cmc mov bound int3 or leave push add fstl nop jo out dec inc out gs stos es scas pop dec push test mov stc xchg mov clc xchg ljmp lret jb add jo scas pop add sbb std jo xchg pusha enter mov add in bnd je sbb dec sub and jmp xchg add popf inc lock and sbb cmp adc lahf rorb or lock dec mov or push (bad) jge nop cmpsb cmp fwait pop sub pop cli (bad) inc cmpb add dec ljmp lret sbb lock adc jl pop sbb adc scas in xor (bad) and daa pop adc mov sahf nop inc add rolb loop clc inc adc lock xchg pop sub dec popa add movsb pop xchg not dec jae daa in (bad) xor lods icebp xorl add imul and mov mov cmp adc inc sbb data16 mov sahf arpl add pop jmp xchg inc pop mov data16 xor mov push or out cmp shrl jo les jbe sbb mov clc inc jae mov lock pop and add sub mov lock xchg dec adc adc popf mov and jg mov shlb jmp and mov imul mov add pop imul jo adc add inc cmpsb cmp jo in jno aad xchg nop cld sbb xchg push movsb cmpsl sub test mov push xor pop xor sbb adc stos or adc or adc add (bad) fcmovb add push xchg inc verw add mov je jno push sbb fs pop rclb (bad) jl shrl mov or pushf test nop lret push lock push dec fst mov sahf loopne inc popa sbb sbbb jp js pop adc push mov cld test icebp (bad) enter mov ficom popa lea mov inc out aas add daa (bad) cmp fs cmp add je je sbb sbb lods add dec jne sub pop add adc loopne test mov into nop mov xlat pop sub ret jo nop test notl fnop add das testb push add mov add or scas lret aam mov call jb xor sbb pop lds test cmp xor inc cwtl push pop sbb sub cltd pop or dec adc mov jno xor jmp gs push pop loopne int jle xchg sub sub test loop push xchg xchg mov sbb test mov popa cmp cli add push pop add lods enter dec adc test mov cmp sub inc in ret popa mov dec and sbb in mov mov dec xchg les in cs inc xchg mov mov repnz dec rsm sahf and sbb jns dec push or pop lock sub mov cmp add lret push ja aaa add inc cmc pusha dec dec add repz xor in (bad) repnz jbe add int3 push daa outsl jae adc sub mov pushf add push cmc je sub jo dec pop les fadds adc nop mov insb jns add dec shll daa sub andl adc hlt inc flds shlb mov push add mov je inc sub dec repnz es push adc add daa mov push fwait jmp and out add jb dec dec cli mov or ret sti fadds roll add scas jmp pop jne cmpb sar dec adc adc mov cmp dec inc inc stos add or mov dec lcall into mov mov xchg lock sbb or nop pusha fldl pop inc add add mov push loop mov scas (bad) roll ljmp fcoms and jbe scas add movsl data16 imul add or jae faddl outsb in mov sti popa ljmp adc mov mov popa adc and lahf stc jg call dec cmp orl add jbe ficompl sub cwtl dec sbb jge loope mov hlt cmc mov dec lock xor cmp movsb sbb nop sbb xor lea cwtl lock and cmp inc sbb lods test or sub fcomip add outsb out jns rcrb rep fmull (bad) imull lods xor fidivl inc jl push and and or sbb pop aas pushf push (bad) mov xchg or js or dec int3 dec and nop loop inc addb stos lcall mulb adc popa test loopne mov add add adc data16 mov mov jo pusha and gs ja push mov mov popa xchg pop and (bad) pop xlat enter push nop or xor fs pop sub add lds int push pop add popf (bad) iret fisttpl inc icebp lock cmp push mov int3 ficoml inc ds lods jg out push je (bad) loopne cmp mov faddl int3 mov dec or add popf and pop test sbb repz subb jae cmp pusha loope ja cmpsb sbb sbbb dec xor mov mov cwtl inc sbb rcrl loope outsl pmaxsw xchg clc popa push mov test mov mov andb pop das or stc and frstor xchg jecxz pusha cld cmpsb cld lods aam mov fadds jno jae xor cli sbb push std jnp lret xor cli xor pop lea adc sub popa xorl movsl (bad) xor or jge add inc leave mov xorl xchg xor jo mov pop aaa add ficom xor nop popl sub pop xor mov aad cld add into dec jno pop adc sti pop sahf push or (bad) test stos add push inc mov sub mov mov mov cli xchg cwtl mov sub lock mov mov xchg or dec shlb icebp out pop lahf call mov fild mov or in fistpll cltd lods add and iret (bad) roll punpckhbw loop and add cmp (bad) bswap test add dec sti sar int3 cltd pop xchg add stos mov jb cmp mov test lea int3 mov inc (bad) jb push add mov (bad) cmp sahf and ss fbstp xor (bad) rep push mov movsb andb pop nop and negb xchg popa push fcomps cmp dec pop js mov dec (bad) jb movsl mov lret inc hlt xchg add add mov int3 sbb cmpsl add pop mov sub sahf or enter mov sub add out les mov scas add es or jno mov mov shrl xor cltd pop mov or mov (bad) xchg movsb push fadd dec adc sub or ret js dec dec lods push loopne xchg movsb push jo lahf sub add jle jns cmp mov pop mov dec jmp sbb rolb leave js add js xor cs xchg mov test or movsl scas sbb or mov add jb push cli sbbl sbb je adc test iret add scas mov sub pusha cli cmp fisubl sub in cmpsl pop pop or sbbl pop clc mov inc je adc mov jmp imul hlt fneni(8087 adc daa (bad) jnp js je adc clc push xor mov cmp cmp adc mov orl add sbb push xchg cmp or (bad) sub hlt and xchg mov dec mov out adc push push rorb in sbb mov call cmp push xlat cmpsb jecxz les fadds js nop clc mov or les loope dec sub xchg call repnz or scas (bad) mov or in sbb add out sub sbb add mov into enter lds jns rorb (bad) es xor loopne in mov fcoms sbb xchg pusha inc movsb pop js add mov incl xor xor sub pop or cmp mov xor (bad) sbb dec (bad) or mov adc clc fdivl xchg pushf rcl dec rclb js mov mov jmp add and (bad) jb add test rcrb cmp add test lret pop fistl cs add ljmp jae cld mov sbb cwtl sbb sub hlt ret and shll clc lcall lahf mov test inc rolb inc fidiv mov movl imul mov shrb mov jnp add inc cmp rolb psllq ficomp pop out pop cld jecxz mov jo mov fwait out or add cmp dec loop subb xchg jl sub (bad) push pop add repnz cmc inc mov dec cmp mov nop mov or lea pop and xchg and inc push (bad) xor inc push mov negb (bad) (bad) orb or and push mov daa (bad) xor sbb stos (bad) jl out cli pop push rolb sti cmpsl add push pop xchg lods jne adc jae insb add pop mull pop (bad) mov cmp or add inc lcall mov hlt add push add xor add sbb cmpsl mov and stos subb sub (bad) jne add add add cmp dec cld adc and into rcll sti (bad) fcom and xor jg in dec cmp mov and js xor and dec adc or fidivl or adc add enter sub fldt inc dec and xor sbb enter int bound add pushf fdivs and aas cli scas add jb xor sbb and int3 add (bad) xchg jbe stos les (bad) push adc add outsl sbb push add cli aaa fisub mov inc ja lcall sbb test test mov movsl adc pop insl stos xchg andb xchg sbb push or pop push jb (bad) and popf pop orb rclb mov jg pusha mov cld cli insb pusha fmull adc push orl xchg std enter jne mov sbb inc pop mov add fadds add (bad) jmp sub add or pop push dec subl add decl mov cmpl pusha xchg aad adc inc or daa push inc loopne and sub call sub sbbb out xchg lods popf add gs lock arpl jno sar mov mov ret inc jns dec movsl sub or dec dec sahf cmp and sbb add int3 rcl pop dec call lds xchg or push popa jne xor add std mov (bad) bnd add pushf cmp jecxz mov ret mov loop add jle sbb sub test lock sbb or adc (bad) mov jmp add faddl lcall loopne adc xor bound and repz and pop push in add jmp or inc pop dec adc lods ljmp dec adc push clc in std stc gs add int fldt test jae xor or push pushf mov lret fsubrs fsubr xor dec inc mov mov iret cmc aaa mov mov or xor inc jmp mov cltd xor faddl fs (bad) jl jnp add enter aas cmp lods adc jmp sar and les clc jne (bad) mov rclb ds pop icebp sar mov or adc fcompl enter dec pslld xor test xchg sbb mov add cs bound jbe or dec sbb pop test xor lds mov leave outsb call dec les out ret pop xor loope (bad) push jl sub add push clc movb push rol es (bad) xor inc out add test popf sbb jno pop cmpsl or sub xor sbb aas lret test sbb mov es fidiv test mov iret push in movsb testb sbb fnsave hlt or leave rolb pusha sub ret es jl and adc xchg (bad) jmp jno sub push mov ja int3 in outsb jns jg or xor jnp test adc xor sahf test aaa (bad) mov and ficomp enter mov or loopne add push pop adc dec add push xor xor dec xor call stc ret je mov jo adc jle shrl cltd sbb push (bad) and aad adc negb sub lret outsb nop or adc xlat xchg imul test cmp mov add aad and dec sarb xor sbb enter iret cltd add mov ret mov call mov mov pop jo add jns nop mov js xor (bad) cmpl inc sbb or jg inc lods enter push mov pusha dec cmp sub cmc and push xchg js nop in xor cmp xchg or xor (bad) inc inc movsl leave imul jbe mov sub cld test push sbb pusha mov inc xchg test push aaa cltd or sti and lahf ror mov rolb std add test subb loopne (bad) rcl js dec nop je push or dec pushf mov xchg jge pop lea or scas xor js xchg in adc es js cltd fcmovnb adc lret movsb dec push jns es mov add and jne lea loopne push add and arpl aam (bad) jo in cmp add xor and and xchg aas sti mov add fsubl add cld loopne jl xor or sbb or or enter es xor enter xchg jno sub sub outsb (bad) cld pusha pop xlat jno arpl pusha push mov mov adc adc fidivl and aam enter and cwtl pop inc bnd or int mov add call sbb or xor stc add mov sub shrl imul es popf test adc dec aam cwtl add jmp and sar std in and add pop push and push jg adc add inc jge mov std adc icebp (bad) jge add ficomp sarb add dec add dec into in xor cltd inc std jno push out cmp cmc sarb add xor add or js add fld jmp adc movsb fwait loope mov lods inc push xchg (bad) dec and cmp push xchg shll mov cmpb (bad) lcall icebp bound dec and xor fcomps (bad) sbb in lock sbb icebp mov and and xchg inc test lcall in mov rorl inc push xor dec in (bad) mov test clc push mov jbe and in inc dec inc inc adc es fadds scas insb repz call xor jmp lea outsl push adc andb movsl lret pushf mov mov push dec shrb inc push mov push pusha movsb push mov mov mov sbb jno jecxz pop sbb and xchg and push lock in inc inc push mov mov ret xsavec xor mov lock (bad) lahf fldcw adc in (bad) push adc xor lods and call dec popa or ljmp mov or push or lcall mov dec pop adc dec sub adc stos pop adc out call lcall cmp add adc cmc stos movsb inc les (bad) pusha pusha dec jmp xchg mov sbb inc loopne rol and daa mov pop loopne cmp xchg pop push movsl mov jb (bad) mov jge add repnz aam add jnp jecxz call hlt push mov test sub imulb push ret pop adc add cs (bad) test dec (bad) rclb lret sub ret shrb (bad) mov xor pop mov lock dec pop (bad) xor push movsl adc or xchg fildll (bad) nop push mov cmc xor (bad) enter enter data16 and (bad) cmp fisubl (bad) dec fs xor mov clc pusha xchg mov js and loop clc xchg add mov ret imul lea mov hlt test add lods test test mov andb xchg sbb cmc mov dec xor sbb push aam jg fistp loopne xor stos add scas or sbb pushf sub cmp add fcmovbe sbb es ljmp or sti lcall repz dec adc fmul sahf dec subb pusha leave test jno push add (bad) (bad) loope xchg pop test adc add sub ja pushf dec sub jl dec pusha sub pusha and js test int3 dec mov fadds test in and es hlt inc jae jno sbb mov xor jnp jl popa and mov sub call into mov subl add clc imul rcrb fs xor or pusha adcl pop enter cld insb call sbb adc push dec hlt test nop and pop cmpsl shr inc dec and rclb rcr xchg pushf (bad) gs ljmp into imul hlt (bad) fs add cmp jecxz and in adc sub cmp cmp je xchg inc adc les push fadds sbbl sub mov dec add inc adc and xor xchg lock mov jns dec dec sahf sbb adc in inc aaa data16 jns orb (bad) stos and and xchg inc push mov and fldt out pusha cmp fs loopne in dec add rcrl daa or adc and jbe or hlt xor mov adc cld shrl adc inc cmp pusha roll add jo add (bad) mov into xor add nop outsl mov sub mov call dec iret mov or ljmp cwtl enter push inc mov pop xchg mov ret xor push xorl sahf test inc inc hlt xchg lods mov inc rolb mov hlt gs push inc rcl fsubs jg rorb jmp iret cs lcall hlt pop xchg testb out dec pop subb adc test pop mov loop sub push pusha addr16 (bad) push test js nop sti in les push fwait push adc pushf pusha cmpl mov mov mov lcall xor bnd add pusha sahf mov adc lcall cs pop push pop mov add fistpll inc mov (bad) push mov xchg sub lods xor inc push movsb andb insl pop or or sbb mov inc dec pusha shr push into mov pusha adcl cmp jns xchg (bad) out (bad) fcoms aam loopne sbb mov bound loopne fcoml xchg jbe cltd push jo loope les jle mov add adc xchg into nop xchg js sub daa pusha add je dec xor xchg clc mov mov or scas xor lret jl rcr jns out and sbb fs push lods or jne sbb dec out mov or xor jl cltd adc xchg lods orb pop push loop sahf test jno sbb out dec push dec mov fsts fcmovnu pusha mov iret dec ss js sub (bad) or dec and or mov lret nop fild stos jp mov and jno or lock push dec add sub les fadd call sub lods pop das xchg jle xchg or loopne pusha add push mov daa cmc and fcmove and in dec dec xor xchg dec rclb jp call in in ja inc inc sarb mov movsb pop das xchg add sub daa add xor shll hlt pop adc xchg cltd sub in cld push mov data16 and mov inc cmp and mov push bound daa movsb push rorb inc dec push fs leave test js push cmpsb mov shll adc lods mov fs mov add test arpl or lret sbb sub cld xor mov stos xor xor jecxz push jns test dec push xchg xlat stos jns dec jae push cwtl or hlt leave or test dec or dec imul jne subl test fnop inc cs xchg xor in xor outsb jo dec jle and xor push mov sbb or mov adc or (bad) enter aaa cs pusha or cltd sub sub jp movsb hlt jne mov jge xor inc xchg loope sub xchg sbb cli inc cmp movsb (bad) test xor fadds dec add mov ss add clc pushf hlt pop cmc pop mov repz mov and and rcrb add sub pop clc or dec lret lock and std enter sub xchg mov add ret rcrl popa sub dec arpl pop cmp inc jmp mov lods xchg dec stos adc cltd loope fcoml dec sub pushf and insb jbe imul int (bad) daa call mov aad adc add pusha add loop fs xor dec clc xchg loopne fiadd test cmp pop push aad call cs daa add dec adc cwtl and add xchg xor push jno and scas add pop mov or sti push pushf daa sbb or lret sbbb ror xchg fxch js insl sbb xchg lock dec cld jl or pop imul inc hlt mov inc mov mov inc add inc rcrb add aam aam or adc dec cli add (bad) mov enter and sub sbb cltd cs cmp jl bound add or cld mov sub inc pop mov or inc pop mov push pusha push jo mov mov movsb outsl add inc loopne cmp pop sbb mov ja hlt adc pushf push test pusha pop arpl dec sub daa test fdivrl inc lea icebp bound pop or fistp mov fs insb or mov adc xor cmc clc (bad) iret sub roll push setg (bad) aaa daa call jge leave fld loop icebp js and xlat rcrb dec lret pushf add nop in xor push cwtl pop (bad) ss sbb and adc pop movsb add pop add ja jmp push sub add lret aam sbb xchg fldt jae add mov cmc jns dec mov mov or leave or pushf sbbb cmpsl jns xchg cmp subb cld popa adc leave xor adc add insb or int3 xor adc je jecxz cs adc xor push xchg daa imul js lahf fstl dec addr16 xlat sub pusha and and or jo push and pusha jg popf xchg cmp mov sbb pop test dec les call and and pusha repz xor or lods loope out mov push sub lret xor xchg pusha cmp pushf pop sub fadd (bad) out fs mov pop loope mov inc pusha popl icebp lret adc or push or mov popf adc push and add push lret dec dec sbb pop add mov mov add int xchg hlt cli aaa out cmpsb and cs xor sahf in rclb loopne push sbb and hlt inc adc and sub and jb lret adc cli xorb mov dec push sbb xor loope mov int imul (bad) sub xchg dec fcoms addb mov adc or out push (bad) jb mov and or add pop inc inc cmp lret xor sahf and call cmpsb xchg mov movsb inc clc inc rorb fsubrp mov out movsl push mov fldt xchg push push xchg lea adc sub lods lret rolb xor pop or add push mov int pop repz pop add adc outsl daa or sub sbb add push or mov push and icebp pop loope and push or cmpsl mov mov mov add jmp lcall mov xchg add imul dec mov daa push in push mov mov xchg inc loopne ljmp loope add sbb movsb mov push and nop clc pop xor lret cld mov popf push or into adcb add imul jp dec mov cmp dec push adc mov out mov mov loope cld xor sbb arpl (bad) mov (bad) xor inc lahf or outsb sub pushf add sub repz dec les pop ret std sti add jnp jne aaa shl add push ljmp push or adc xor add mov xchg mov jp cld pop dec xchg pop mov cmc push mov mov aas lret fcoml fisttpl in xchg pop inc leave lds cld adcb fs xchg xlat je mov mov ljmp addr16 fisub clc and sbb xchg xchg push nop pushf inc bound setno cmp decb in jle add pop pushw adc test xor rcrl jmp add call (bad) in enter cltd dec add jbe rcrb fistl (bad) stc mov pop popa addb push jo lock repz sbb lcall inc inc pushf sbb sahf adc inc mov cmp mov arpl xor scas pop jmp lods add fdivrl mov lock push push xchg jmp push adc jns psraw mov push lods push hlt ja addr16 mov sbb (bad) jbe mov dec in cwtl adc shlb lods push js sbb std sub adc dec scas andl xchg inc inc test in cld cmp xchg pop fisubrl xlat daa mov and loope insl sub adc add imul cmpsl xchg punpckhwd hlt rolb xor fmull mov gs and mov mov xchg dec add jb pop sbb or cwtl pop cmp xor std inc orl fdivrs arpl sbb adc add inc std pop cmovns adc or adc push in enter dec and dec lahf fmul aas mov pusha into mov dec leave sbb dec int3 enter xlat dec inc push rclb nop movsl nop bsf sbb ret mov lods shrl sbb movsb and or les cmpsl scas aam mov outsb sub in les pop push mov pusha sbb insl xchg sub and orb pusha in cmp push stos aas mov add mov test pop movsl sahf mov dec test cmp shll add enter xor enter imul fsubrl jmp adc popa pushf nop mov add in sub dec clc mov inc mov xchg in xor add fildl in ljmp dec adc std pop and add sbb in and cmpb cmp inc xorb xchg adc sbb and test dec push push rcl add xor jno push in daa (bad) xchg or inc add (bad) insl outsl add popa je dec add xchg jmp loope pusha sbb test and dec (bad) je pop pop or pop push sub or mov xor outsb movsb dec cmpsl nop js cld outsb movsbl and xor ljmp or mov loopne adc pop adc or mov dec loop lret and scas bound push dec aam or arpl push or loopne fnsave push xor push adc out pusha jns push jae cli popa add and repz lock sbb cmpsb rorb arpl push push andl sbb es add scas movsb int3 std pusha sub pop add adc int xor jmp dec test add test sbb arpl jno mov addr16 cltd or lea push rorb ret add out rclb fstps andb stc inc dec nop fs cld lret push outsl xor xchg cmp mov and sahf xor ret (bad) data16 dec xchg xor popf add mov mov add adc mov jle clc cmp push jno inc outsl mov faddp sbb clc dec movsb movsl mov dec ljmp rcr cld push fdivs test inc adc or inc into add insb inc jo or daa cltd incb ret popa outsb xlat bound sbb inc inc jb or mov repz adc nop and std sti lcall cltd sbb aas mov test popf cmc sbb inc mov mov andb jbe hlt pusha cwtl push or lret cltd in add mov in imul add inc bound inc mov stos (bad) je cmp loop rcl add and test dec (bad) push js cmp je inc adc mov push push into mov outsl add push add js sbb add cld and mov xor jno sub ficompl stc ljmp add (bad) dec add in mov cmp sbb fdivs or pop loopne sub (bad) jo sbb dec scas xchg pop ud2 cwtl add and shrl cmpsb sub lods cmp sub inc pop sbb sub adc jl sbb adc test hlt pop and sahf mov xor adc dec test inc jno cmp scas add push (bad) xor movsb loope adc cmp fcompl cwtl add dec mov imull sbb std (bad) aad ror mov inc pop std sbb call pop lret push push mov (bad) fldl push pushf xchg dec movsb sbbb aaa fsubl pop cmpsb sar sbb lcall aas addl push out test ficom cwtl add aam arpl jmp or push in icebp adc xor xor sbb sti and adc or inc fmull cltd bound dec jo push dec dec adc (bad) aas xchg xorl sar out or mov push xchg repz dec mov adc loop rolb fsubrl pop sbb sbb fdivs adc inc pusha nop mov adc add adc hlt pushf pusha adc mov add jge test mov mov test scas cltd adc add movsb add mov mov pop clc sub add (bad) scas loope inc xchg push dec add jmp sub test insb pop mov xor sub add rolb pop mov add pop fdivl int push xor icebp xchg push push test popa pusha (bad) jbe pop push inc push fist jnp jne lds add push pop mov xchg cltd mov cld and hlt adc dec inc sbb dec lret push enter and and and dec push adc imul pusha cld imul mov push and fs add mov mov rclb or frstor jno sub js mov and sbb mov es xor (bad) rorb in jno xchg xchg fiaddl dec sub std push push push inc inc mov and mov mov add inc pop icebp and test and fnstsw sbb popa xor push push andl popa pop dec rolb loopne ret enter xorl adc lret insl cld add mov clc pusha push xchg clc sbb add or cs inc adc ror dec test adc jbe rclb shr nop or in mov pop stc bound (bad) outsb pusha dec movsb mov sahf bound dec pushf sbb incb and add cld stc popl mov cld lock jno lret xlat jle cwtl lock cmpsl in cmp add out mov dec outsl ds out push hlt jg sarl jl sbb cmp inc push fwait pusha pushf sub mov enter mov sahf xor mov mov add fucomp aas mov rcll jne lahf (bad) mov add int3 add mov xchg inc mov or fcomps out add add repnz popf xchg pusha cmp cwtl es lods push add add lcall fadds sub jb inc adc sbb pusha aaa (bad) inc sahf xorl and pop aad sbb scas and (bad) enter ret pop or jno sub aad rolb pop (bad) test cmp rorb vmptrst xchg lret fadds cmp enter insl (bad) add push imul cmp popa sbb fsubr mov pop sarb dec and add pop clc test into icebp cmc test out ret lahf sarb mov mov sub lock push stos mov pop fistpl cmpsl cmp mov xor cmp jp in cmp mov (bad) jle pop mov sarb mov sub cmp or rorb xlat scas add jnp popa in jmp jg push out rcrb clc sbb add jae xchg fdivl ljmp or adc leave mov stc mov daa leave call sar test mov fisttp mov sub in lahf pop adc (bad) je push clc addl (bad) mulb or mov jne dec add (bad) test xchg mov sbb or pop cs outsb adc lock add daa mov mov add (bad) fwait sbb cli mov or jo pusha cmpsl cwtl iret add and add adc mov pop jno cmp pop cmp push dec xorb push mov les pop loopne mov xchg inc mov pop pop xchg dec test and jo gs inc cld mov int3 cmp or or subb enter in inc mov repnz and jp int3 lea push outsl pusha mull mov gs lods and mov mov push fwait dec pop pop pop mov pop mov lock incl xor add mov jge sbb cmp jmp and orb mulb adc xchg add into fs jno mov jp mov adc cmp mov outsl setbe clc call pop mov jo ljmp mov dec sti frndint pop pushf data16 xchg cmpsl xchg mov rol pusha pop fwait push add fdivrl aam hlt xorb fiadd sbb sbb sbb push pop out (bad) in clc xor iret or das popa add mov xchg les pop gs adc add shrb insb fldenv sub mov xor mov (bad) xor cmp xor push pop lcall push xor cmp sti arpl mov sub adc nop mov sub mov ds dec int aam mov mov out pop xorb popa imul test std adc dec xor ja pop inc mul (bad) adc icebp das xchg outsb int arpl jno dec rorb call xor pop sbb jmp adc sbb jp xchg sbb repnz cltd add jne and scas adc orl add xor xchg mov add mov fdivs mov mov fcmove call mov cs inc and cmp or enter push inc hlt or or mov scas sbbb lds cmp cmp or fiadd add mov xor pop cld cld jnp sbb and cmpsl add mov mov movsb pop out popa jns push or (bad) mov nop add pop cmp shld and cmpl loopne xor xor cwtl in push push repnz add pop cmc repz lods (bad) mov or es fiaddl inc mov xor adcb sbb jns and and sub subl lods sbb ss sbb popf sbbb or mov and inc add xchg dec (bad) jecxz pop and mov loope add push (bad) clc addr16 add xlat sub mov call lahf sarb and sbb in add pop in lret dec pushf or pop pop aad mov xor dec dec xor je mov movsb xchg add data16 xchg imul jmp jbe adc inc xor push stos push xchg addb sub mov mov inc icebp sbb vpsubb add incl jo loopne into sbb inc jg xchg adc shlb inc cmp addl adc inc and das testb add inc inc insb clc bound xchg xor into gs dec cmp (bad) xchg inc movb sar sbb cli push aas mov data16 add hlt dec (bad) lret rcl rolb aad dec push xchg hlt bound cwtl out push int3 ret fist push sub hlt cmpsb sub roll aad test mov add sahf int3 (bad) push cmpb mov or adc sahf push daa pop push orb pop add addl jns add or das notl lods popa and lock add xchg sbb sbb push jle mov sbb mov dec mov jns xor pop mov jo inc ficom nop add (bad) sbb lock dec mov andb std lods addr16 mov fmull mov or adc lods mov push sub leave lahf mov pop gs pop (bad) adc outsl push pushf and stc test xor adc or enter js push xor les addr16 dec jo je (bad) movsl arpl ret stc adc push mov in pop arpl pusha or fnsave rcll imul data16 and cwtl rcl shlb (bad) lea test repnz xchg add out gs inc jo ror add add dec cmpb jne dec leave inc and (bad) jo lahf adc cmpsb adc add mov add push inc and xchg add test hlt leave es sub cwtl icebp pusha dec or inc je in test mov xor icebp or xchg or test jecxz or adc iret jmp in sbb dec sbb push sbb shrb fldl popf addb inc mov cmp ds cmpsb inc and aam sbb fcoms fwait nop mov jne push mov add push dec jno sub cmp or dec push or mov add and pusha sbb les call push mov bound jmp ds adc adc inc xchg mov adc loop (bad) or jp call pop and add mov adc or jecxz sbb fldt sbb xlat andb cmp clc imul cmp sub adc js push test adc mov xor cmp push add push (bad) lds jge adc jecxz movsb add mul xchg mov ffreep inc cmp jns subl (bad) dec or mov xor pop cld cmpsb and mov adc mov add sahf or daa lds cli add cmp jne in push mov leave cmp adc lahf popf in sub daa rcll in add push pop lahf xor xchg add cmp js ret (bad) xchg push fwait ljmp mov add pop aas insb dec xadd mov aam add add in cs rcll fwait add inc dec pusha clc lcall mov push cwtl (bad) movsb cmpsb cmp add pop insl es push xchg cld rcll enter nop xor je imul mov in pop lret jns (bad) mov dec popf movsl loopne les js rcrb adc cmp aam hlt add dec cmp fdivp popw dec mov ja add adc mov mov imul dec sub xor sbb add in stc (bad) clc push mov and jmp aaa repz pop out cmp mov mov in jecxz xor aam aad repnz out sti pop or (bad) icebp lods sub cwtl lods adc cmp xchg and push pop xor test add adc dec cmc leave sbb adc je jl pop and in mov mov or mov dec stos push (bad) pop push and pop movsb ss stos les rcr data16 or je pop and fnop rorw call jecxz and inc mov xor add int3 (bad) xrelease xor jo jns and push std pusha cmp add add or pusha orb jg mov mov in loop cmp jno adc mov pushf sbb and (bad) in inc cmp js movsb or stos and or cmp adc jb xchg adc dec and add es sub push cmp inc add sarl push rorl mov cltd outsb mov push xchg pop jmp inc add movsb fmuls mov adc jmp enter pusha adc orl cmp mov pusha arpl or and fld add stos push mov add and movsl int jecxz (bad) cwtl into mov or sbb jg mov loop cmp arpl add cmpsb adc je push addr16 ret loopne and inc adc imul or pop int3 adc popa jl push or xor inc pusha sub pop mov or int3 int3 pop out outsb and mov cltd jae in mov jnp out inc insb ja or seta inc pop add test jns cmp dec out add psubusw xchg mov lea and popf mov outsb pusha cmpb xor lods mov jmp sahf fnstcw (bad) push xorl add mov inc cli add cmp sahf rcrb xchg sbb inc push pusha add outsb fdivs andl mov mov cltd mov test add mov dec push imul mov mov sbb lret fs (bad) and mov (bad) xchg inc and jnp xchg mull xor push mov adc aaa aad sub jmp xlat cmp push jns push cmp sub add insb das pop adc adc or sbb stos cmpsb testb ss aad mov js lods test push cmp and xlat or or fadds mov push dec jno push divb mov dec nop pop sub jns movsl nop mov iret or adc mov pop inc sahf push mov xor cmp cmp pop add xchg push nop insb pop inc pusha and xor pop mov js mov popa mov xor arpl aas imul mov fiaddl sbb dec xor mov sti sbb add (bad) push mov pusha stos (bad) jne dec lods loop je sbb sbb jge dec cmp jge shlb xor pusha push dec mov (bad) aam in out cmp or pusha xchg mov (bad) popf jae lahf mov or outsl add pop ret int scas mov mov add mov sbb pop mov insb lods inc hlt jl or cwtl add arpl jp and add dec fs (bad) mov stos mov out lea xchg xchg or push into sub add out lods gs popl lea testl cmc les inc xorb push or les mov ret icebp adc or imul sbb xor xor scas xor addr16 sbb lods add fdivl xchg out loope push and adc mov popf movsl cltd mov dec push push jb add iret scas push and sti mov adc or in mov push cmp fsubl int sahf decb cwtl sbb enter pop or and cmp add std adc outsl les (bad) mov loope lcall imul insb shrl mov loop outsb and incl js xchg cwtl dec jo add inc add push sbb mov sbb mov add out test cltd pop mov push lahf lret lock orb insb push dec xor adc and (bad) jp push xchg sub jbe add mov adc js mov mov add inc ror mov clc dec jb jne aam stos punpckhbw insb xchg pushf shlb cwtl cltd jmp popa imul inc adc popf adc push in pop mov roll loopne sti ss inc (bad) mov add jl adc mov xor ficomp add lret ds and scas pop inc push cltd add flds add xchg pop (bad) scas push addb scas mov sbb test lock xchg cvtps2pi ret gs inc addr16 inc stos test and or repz into ja add std pop xorl lret fnop add inc xor dec sub sti cld pop jo fisubl rcr xor mov call adc mov frstor mov or outsl and leave jae movsl call xor dec mov mov dec or or inc sub adc xchg (bad) negb cmc rcrl cmp sub add fs (bad) xor inc add adc adc and test or xor sub sbb pusha dec rorb adc fdivs repnz xor push inc xor add pop cmp ja pop or aas xchg adc or add les sub aas loope,pt pop mov dec add test xlat adc in test mov inc push add mov mov fisubl push pop mov sbb insb add xchg xor mov add dec into cmp add inc jne inc add push or push add dec push xchg mov subl add loopne add outsl cmp mov and repz jl inc mov sbb scas mov sbb push jmp pushf sbb xor inc dec rorb sbb cmp sbb cmp mov mov lea push ljmp inc mov call push rorb cmp sub mov out xchg fdivrl lret lods jae mov add in mov cmc pop mov arpl jnp xor rcrb push lods adc and xor scas cmp (bad) dec imul (bad) nop add mov orl add cmp cmp in imul mov test cmp pop adcl add mov inc push xchg push inc adc pusha add push (bad) (bad) or shrl addl xor sbb push dec or lea mov je mov xor fisubl jmp ret clc ja and push add or inc sbb pop (bad) xor dec test mov (bad) mov mov outsb std ds push test add cmovb inc scas pop mov sbb adc xchg inc jg repnz jg add int3 adc mov push shlb and mov xor insb test dec popa push mov shlb outsb push cwtl xor sbb and daa or ds js xchg stos test pushf pushf adc add (bad) scas les jo sbb repz dec fisub and xchg adc (bad) mov frstor jb cmpsl pop sbb subl stos pushf sbb or adc jmp sbb rcll loop xor inc add sbb sub and divl test jp or sub fstl jbe push xor ljmp mov xor dec fs or xor jo arpl and or cmc adc xchg scas xchg (bad) push sub mov add pop shrb jl dec add xor les fs lds pop xchg xor int3 and mov pusha loop inc cmp sub push test jmp or loope cmp push xchg in or add es or xchg test mov pop movsb sbb jge jnp,pn das lahf ja sub add xor mov pop sbb (bad) adc cmp je push cmp mov ss push sbb inc push fwait jnp adc arpl mov fcmovnb cmpb mov mov xchg cmpsl dec out push or jbe seto mov pop mov cmp shrb add lods xor mov xor insl sahf push out xor push mov call out cmp xchg xchg (bad) and addr16 xor lcall daa scas rcr or xor push and or stos xchg mov sbb clc adc enter xor sbb out lock jge or out daa add xor add fs pop jg xor daa mov repnz ficoml sub or test mov testl dec mov ret test pop xchg add addr16 xchg inc xchg inc adc push xchg sbb jo mov add cmp mov call dec fwait inc lods adc add mov in lock insb (bad) pop sbb and jns in js cwtl cltd decl adc mov mov shr sbb shrb repz and lds js jne iret push jbe or dec jbe sub add daa test mov or dec add inc cld add stos pop mov xor sbb inc cmp les adc loopne icebp dec les inc fdivr push outsl or add adc xchg mov rorl outsb sub enter adc mov jle cmp jecxz ret into sbb outsl test lahf sbb mov adc or lods jp push aas cmp sbb std jb and pop enter insb mov inc cld mov and popf dec pop lds test (bad) jne jns or (bad) hlt das je adc mov roll and cmp jns pusha inc sbb jl andl je and sbb jp shrl (bad) xor or rcll sub je add in sarb adc imul and adcb clc hlt pushf mov inc dec cltd adc sbb or xchg fisttpl lcall mov and push out and mov ficompl scas popf loop testl fwait bound or pop addr16 or fbstp xor mov nop inc inc dec pop scas adc add pop add and dec jle lcall xor (bad) fs gs inc (bad) inc shl add add imul sarb or repz sub xchg (bad) inc shll int3 arpl push es cmpsb jmp sub jl stos in cmpsb inc mov add rcrl jbe xor test xor pop es hlt cmp add loopne xchg xor sbb sbb repnz not popa andb loope shrb add cltd into mov inc (bad) lret pop push jo outsb xor inc popl xor cmp stos fsubl int3 scas sbb sbb les repz adc and bound cmp sub xchg ljmp jmp pop jo or push cmc fildl jb cltd nop jnp push lret sarl add fisttp jae test (bad) popf addr16 pusha sub xor cltd mov dec cmp (bad) lahf hlt adc pop xor orb mov inc pop cwtl cwtl pop or inc sub add and fwait test cmp sbb cmp or popa rcrl sub cmp rol in mov xchg pusha ss mov add loop and pop sub insl out lods sarl (bad) and fwait icebp add test sbb aaa and sbb jl shlb scas sbb sbb push aaa insb adc pop popa or out scas and sbb pop pop (bad) aas ss dec popa xchg (bad) test mov subb xchg inc mov add or aaa test jp sub mov push lock add push xchg cmpsb arpl and add jmp stos sti mov fcomps lods stos inc jbe out leave cwtl inc leave and jmp std and es bound fildl push ret push add shlb bound xor add loope (bad) cltd lcall push pushf idivl je sbb xor (bad) xchg sbb inc imul mov sbb repnz sub pop nop cmpb jo shrb out dec rclb mov mov (bad) lret pop in xor mov fsubrl faddl cld cmp push push fadds in mov pop movl mov out mov dec pop and xor push push fs cld lods add mov in aad jae dec sbb sahf jnp fs push stos mov add addr16 xchg sub stc out sbbl lock push ficompl jne sbb cmp (bad) jecxz aaa in sub sbb in arpl xor xor fldenv ja popa xor add dec xor sub push xor adc movl aam jl xchg jle xor sub and rol dec orb sti les cmp cld add adc add fwait inc (bad) push fsubr adc imul lds jge push mov sbb or stos xor sbb adc mov and inc jbe add xor jno lds push call rcrl mov or pop out mov xchg mov and push jno ljmp inc shrl adc add mov sbb (bad) xchg xor popf xchg inc mov push cmp pusha push ror setne and xor pusha jnp movsb mov add or (bad) inc mov pop add jo insl (bad) in and test rcrb popl jmp inc testl repz pusha mov dec bound mov or push xor jns xchg sbb fdivs add cmp test call push cmp and jp jl outsl mov les mov stc jecxz and in cld out adc inc adc sbb rcll xchg (bad) lods push xor push jl cmc pop call shl lcall int jmp adc jp mov xor scas add shrl and xchg mov dec mov jmp andb and pop jmp jbe add rcrl add aas scas cmp std adc out jo dec adcb repz add jp cmp (bad) and ljmp xor add push stc shl sub mov and jge cli push pop aaa pop mov sbb fmuls test lcall jb push adc add mov and sub pop (bad) sub dec mov ss add xchg mov dec jmp and adc sbb sbb or xor or sbb mov jnp stos iret andb lcall sub mov pop push xor add aas fiaddl jbe (bad) lods icebp push jno add aaa fcmovnb addl inc pop lret dec mov push insl mov (bad) rolb add aam adc mov addb (bad) fistl or and add icebp jl xchg adc lahf out adc inc pop stc mov iret jns ja mov (bad) stc mov cmc jno lods fsubs icebp adc out and mov sbb pop push sub xorl pushf or andl dec test je movsl xorl jg rolb dec push add adc lcall mov mov popf add in mull pop push mov xchg insb imul flds cmp adc aam sbb and mov fs sub fdivl jo std pop cwtl fsts aas adc mov inc ljmp adc aaa xchg fistpl add xchg incl inc jmp push add xor pop mov sub ficompl (bad) jo rcrl into cmp adc stc and (bad) nop (bad) xchg jecxz mov jg pop dec add and lret (bad) mov popf repz pop pop add push and pop xor rorb adc andb xchg stc imul (bad) lock es xor adc mov push imul push mov xor iret adc dec ficompl ja sbbb push xchg mov sbb rclb adc inc movsl cmp adc cmc inc stc jns push aaa pusha or dec sub xchg cmpsb and fs add lods add mov cwtl xchg and sti pusha sub and roll addr16 push data16 and mov add and dec pop aas push cmp fwait jl cmpsb push lret testl pop in imul rolb bnd add add inc mov inc push push push mov push imul testl mov or hlt iret leave daa add jno lcall pop aam das fmull jae adc adc mov icebp cltd int3 repnz mov or dec add adcb push inc jmp xor data16 rcrb add sahf int3 dec out cmp mov scas sub adc sbb fistl pushf andb pop lcall xor mov pop cmp shll inc outsl mov dec xor (bad) jg sbb imul push dec cmp cs icebp movsb sbb aaa (bad) inc addl fsubr xor cmp cmp mov in mov leave repnz cmp fsubs adcl jp adc cmpb lea sub or lods int3 xor ljmp leave lds add rclb pop shr test mov jmp inc cmpsl adc mov lds test mov fisubl or lcall mov and fyl2xp1 add push push inc fldl test mov imul mov sbb popa inc pop sbb sub or loope cs mov lret cltd lahf ja pop xchg add xchg sub cmp inc add cld adcb movsb in movsb pop mov cmp stos outsl (bad) int (bad) mov mov lock inc push es (bad) insb add in or jg xor and shrl sub push cmp jbe pop cmp dec lods inc data16 cmp xor or in add inc lret scas sub in sub add jmp inc jns lods or insb rorb shll scas (bad) add loop adc or add adc lret push fidiv fsubl pusha and inc insb and xor ret mov jnp and mov xchg (bad) add test and pushf stc jns inc add (bad) divl add daa mov adcl push jb (bad) mov mov and xchg pop aas rcll jns jb mov pop popa pop test mov test es ss jmp (bad) mov sbb xor sbb or jae xor pop imul xchg inc pop notb sahf out add imul movsb pusha or push add jae push out lds inc pop cltd sub cmp or jecxz sub fldcw cmpsb and add sbb mov (bad) dec hlt cwtl inc (bad) sbb and adc mov data16 je add pop pop insl jle clc sahf in dec scas addr16 add sbb pop or xor daa mov jp xchg cmp mov pop daa in mov pop nop cmpsl das push dec push arpl xchg mov add xchg cld insl and jo inc or and fisub mov int push inc mov xorl adc inc sub cmp and insl imul and stos sbb pop ret add jle xchg nop fmuls push add leave lahf sub sbb nop jmp sti xor mov stos xchg dec xlat push cmpl cs test adc pop jg add add xchg mov icebp lahf aam (bad) xchg fimull mov stos outsl add sahf add mov or std rcrb in xorb xor ja movsb or xor or ret mov mov insb cmp out lret adc scas in sub cmp je scas inc jns adc les jns push adc fcoml fist js dec ror or rolb subb push push scas xor (bad) repz bound or movzbl call add adc popf outsb xor sbb dec or cmpb aam adc (bad) repnz pop adc adc ret shrb movsb mov push jmp adc cmp inc cmp adc dec orb and imul rorb push lock call and jge lea and int mov fwait add add negl shrb into pop xor cmp ja pop add dec js jl out das imul mov mov inc sub pushf mov add push cltd sbb orb pop loop insb mov lock ss jle inc push add mov add insb xor int je push call sub adc mov inc ror je sub mov ret xchg lock cmp adc xchg fiadd nop (bad) bound pop movl fiadd loopne jae xchg and int3 mov jns mov arpl xchg pop dec mov dec mov in cmp xchg jbe mov test clc dec daa cltd push inc mov pop shr ret aas (bad) pop push inc addb ds inc clc inc lock mov push dec add mov mov or sbb push imul stos or dec daa nop xchg int3 fs sub add add pop pop loope mov adc jae cmpsb pushf xor js add out xchg cs in pop pop inc or insb imul mov or ret pusha test orb mov js int3 test add ss in mov push fstpl ljmp dec mov es jmp lds cs addl dec mov and pusha maskmovq sub xchg aam adc inc add mov int inc cmp push dec aam xor outsl mov sub test mov mov loope inc das mov rclb call fs xor sub shll cmp push in cmp add xlat pop fcmovnb daa stc out cmpsb push xchg mov adc stos imul mov adc add dec rclb faddp cmp jecxz adc pop mov cmp jb sahf shrl sbb mov and cmp loope lahf and sbbb stos jmp xchg dec add sbb mov jg aaa push lods repz fucom sub stc scas (bad) mov (bad) (bad) aaa cmp jbe mov hlt enter mov or mov dec adc adc and push xchg sub push pop or pop fisttpl inc adc mov (bad) imul ret jle lock outsl or push add mov sbb mov fnstcw mov xlat std and inc add or jne addl addr16 and loopne sub and push jnp or mov ror and adc jecxz dec push and aam ss pop out inc jle sbbb dec push faddl add data16 jns mov and inc sti or jo mov jne cli push icebp loopne jg cmp sub mov push dec sub out inc sub adc cmp loop and add push mov add pop (bad) cmp jae and xchg jle xchg ljmp inc insb mov dec loopne (bad) push cmp or jo add jo jle (bad) xor jp push add stc dec les cmp mov xchg jno and add mov jbe jmp dec sub inc mov add imul insb in jl mov fadds test or mov xchg pop push pusha les push xchg (bad) adc jmpw add les add push lock mov mov pop decl push mov jbe insb sub adc addl pop ja mov (bad) jno ja mov ljmp mov popa ds loope lea test jg mov or es shll jg push pop lock pop mov push push mov cmp xchg sarl orl shl (bad) int cmp cmc adc adc push mov push sbb or inc push mov push add not rcrl imul movzwl lret push pop cmp or mov mov push aad mov mov arpl js fsts or push adc add ret (bad) lds add jmp loop push push push jb xor xchg push pusha dec or mov add sti loope mov lods rolb cmp jg add or push and repnz cmp addr16 notl jp decb add jns adc sub js je inc pop jae into push jg add xor push fisub push cltd out negb cmp adc mov aas or insb rorl jmp adc sbb lret dec or lret xchg inc push push mov mov stos dec sub adc (bad) jne push pusha and pop jno add jbe xchg pop mov pop dec sbb pop fimull add andl push cmpsl scas les aam add cs push mov dec or dec xor fisttpll cli (bad) inc sbb (bad) jo inc mov repz cmp (bad) mov lods popf lahf test mov gs add out push and adc xchg cmp imul ret jecxz mov xor sbb inc inc sbb adc mov dec jg push mov popf fistpll push and dec push sub pop sbb and mov fistp jb pop jae xchg push leave imul and cmp and sbb push push fs inc jle scas dec fisubl cmp cltd xchg fnop mov and dec jmp insl and pop fs or push gs jne sahf jg std mov dec add push decb cmp lods enter and pop sbb xlat mov xchg in xchg pop adc iret and dec add inc xlat push inc (bad) push push pop xchg repnz loope push push cmp xor push sbb shr sbb push pop or mov and xorb sbb test sub pop popa movsb in in sub std mov lret int3 jecxz mov or outsb out xor nop lock mov add xor mov adc mov lds and adc jl dec jb mov outsb push lcall enter es adc pushf int and inc sarl pxor (bad) add outsl fwait pop add add or lret adc jmp jns aad mov push push pop xchg out add sub adcl add pop andl and push fstl (bad) aaa popa push mov cmp pop jmp inc mov mov xor or xchg mov or mov add loop mov dec rcrb repnz add adc inc cmp jb add rorl add push pop (bad) adc and outsl ja add and mul adc jle cmp (bad) push dec bound pop pusha sub inc dec or add inc cltd lret mov popa lds leave push add sbb push xchg fldcw pop ja or lea js aam ja push sbb insb sub stos add mov fwait jno nop mov xchg xor pusha cmpsb jmp and adc push pusha sub and sahf add test xor cmp outsl dec jmp xor cmp cmpsb int add jg mov or fsubs xor or ret mov pop xchg dec sub cmp mov sub test jle ficomp sub or mov dec in decb xor jl dec add sbb cltd pop pop push out dec push aaa enter and mov subl add jl (bad) jne pop nop dec push or out mov lock (bad) add push pop mov sub imul mov jg xchg cmpsb dec (bad) dec dec les (bad) mov mov daa pop pop xor popa pusha shlb push inc popa cmpsl mov cmp sbb or insl jne add movsb insl pop xchg xor xor inc pop add fwait sub fwait mov (bad) xor test pop jecxz jmp addr16 ret jg mov lret outsl outsb mov jp cmc test sbb adc ljmp cmp push jg inc bound mov mov cmp push movsl test jp sbb and inc rolb jle dec pop fs and mov pop cltd and movsl and pop cmpsl xchg dec dec pusha and ret or fs dec dec inc mov jmp add stc rclb sbb shll sarb sub shlb pop pop mov inc push inc add jecxz ds and inc fnstsw jns cli push xchg test mov les jl mov mov cmpsb inc jge addr16 xchg push push mov add push mov mov mov mov pop push jge pop imul adc stos inc push mov cs je hlt movsl xchg adc cmp ja testb push nop imul shl divl in ja icebp jecxz add in add pop add insb push mov adc test movsl test add mov pop xor pop popa iret pop jmp roll dec sub dec stos hlt addr16 mov sub gs jb aam repz sti dec jg jnp mov outsl push pusha adcb aas mov pop and or sub xchg js cli jb pop ss lcall mov lret nop test mov add push mov push xor pop (bad) mov sti pop data16 xchg daa outsl (bad) in xchg push aaa data16 pop sub out shlb (bad) sub jl fimull mov xchg mov lret out pop nop ljmp test ljmp xor ret adc outsb adc add mov pop add xchg cmp inc xchg cs int3 inc adc aam pusha lcall daa push out or pop or insl imul xchg bound (bad) jb (bad) and sahf pop pusha push aas (bad) jae stos add sti outsl pop push pop push (bad) insl add push push adc xchg imul mov iret pop and xchg cmp adc movsl adc push stos and cmp pop xchg cmpsl imul and xchg xor and or inc add das clc xchg mov cld cmc pop xchg and pushf push xchg adc mov mov cld sub idivl (bad) push out dec pop sbb jge (bad) adcb out xlat cmp fldl fstl gs pop outsl mov lods inc popw sub xchg addr16 sub jae adcl movsb cmc in adc mov and dec sub int cs jmp push pop lods add adc imul fistl xor inc push punpckldq pop frndint add push mov rorb lret pop pushf daa in cmp cmp add fiaddl popa fistp stos shrd lods push push mov rclb cmc popf add ja shl or in roll cwtl xchg test scas cli test add push pop shlb into pop movsb or or push inc and call popf divl jecxz fsubs xor sbb cmova sbb dec pop out sub cli cld push mov jecxz push mov aas or ja add pop movsl (bad) cmp mov inc add push pop pop push add std or jp popa stc or lock jge (bad) jmp add test cmpsl dec add cld adc and push es pop pop pusha push pop test mov add push add dec or dec xchg mov push rcrl mov fimull rcll mov not jmp data16 xor cmp mov add add jnp ds lret mov push inc fisubr fcmovu addr16 mov seta lock add push inc pop mov fisubr ljmp jo add pop or repnz xor lods js daa mov lret jp leave lods mov sub iret pusha dec adc pop pop or cmpsb divl (bad) mov mov fadd nop push cmp push cmp cmc adc and or out mov out inc add pop xchg rcl adc or in icebp jno add sbb clc loop fs xchg js sub shrb test jns ja pushf loopne inc fcomps pop aas vaddpd sbb scas add xor or lcall or mov add jmp inc loop jnp add idivl dec cmpsb inc out daa or lret js lret jg popl adc out and jns sbb int3 or jae,pn sub ss daa adc jo sti jnp test mov dec notb add xchg aas cmp add add inc sarl test aam loop cmp dec ss push sub nop roll jmp sub adc inc dec xor cmp fidivr jle push shll int3 xlat mov sub jmp and add cmc mov jb jo sbb inc pop add aad ror fisubl inc cwtl adc dec dec or cmp daa cmpsl xlat outsb mov aas jle testl jg movsl and add test inc jne repnz xchg mov pushf fcoms cmp and push jle pop jge repnz sub pop cmp rcrb out (bad) pop cmp mov mov and sub jmp negl dec fldcw fldcw lods pop add jns push or pop dec jo outsl xor jge pop loope mov insb or adc sti jle jmp in pushl cld pop mov imul push shr or mov add pusha mov add inc pop nop loope stos jl mov xchg orb jo push dec or xchg popa pop push fcmovb adc pop push negb stos mov adc pop into arpl imul test mov cmpsb daa dec push ja in push out add cmp rclb jno (bad) and iret outsb (bad) into fisubrl lahf push and add mov mov outsl xchg sub or xor mov (bad) push add mov jo lods insl stos dec jb jmp into jecxz sahf sub sub xchg push sub add rcrl mov or or and out (bad) out pop and dec addl lods xor js cmp adc xor roll movsl outsb pop dec mov push adc (bad) pop pushf xchg push xchg add mov out xchg xchg rorb lds test cmpsb and cltd into fbstp addl ss dec (bad) mov imul es dec pop lahf shrl std cmp inc das jge or sub test icebp cld aam cli cld lods out xchg out cmpl fwait and mov repz or jae and dec xor mov pop push cmp aaa sbb add push (bad) lock push in xchg inc or pop (bad) lret int3 pop aam mov sub fidivl sbb leave lods pop lds es xor fnstcw loopne xor mov adc sbb sub aad or xchg push movsb es sbb mov divb adc and (bad) mov or add rorl add inc cld pusha add xchg sub lret aas adc mov mov arpl sub in dec xchg mov rcrl sahf dec addl (bad) mov aad xchg pop fld leave mov xchg push inc test or adc add ficompl pop add pop push test push lods cmp mov jmp sbbb in not mov pop inc arpl push dec pop sahf and xor jo jp pop out jg pop aam mov repnz rolb pop or jg xchg mov jnp pop add pop mov xor cld xor pop or push call push lea sub (bad) pop ds push jmp mov add mov pop ds sti aam pop xor sahf in pop jg adc mov out cmp mov or sti push and add pusha std xlat fdivs push cmp mov or jg stc mov sub push rcl mov fldcw mov lcall pop or rol ljmp mov clc lods xchg cli jne sbb push fs inc jl mov shl xor cs add or rorl cwtl inc and xor sub popf mov out add or or shr jle xchg sbb mov insl sub mov add mov pop add xor push xlat jp add xor push xchg push cld sbb pusha add lods push sub lock push mov addr16 rcr ss add cwtl addr16 adc insl and addr16 repz test repnz adc dec lods push sbb nop repnz data16 jb out sti outsl cmp mov push xor and mov adc nop push in cmpsb or sub sub out rclb pop stos ror shlb fcompl cmp dec and sbb jg inc fsubr out pop (bad) xchg dec out jmp dec incl mov pop outsl push pop (bad) ss jle cmpsl pop lock (bad) sub cmc xor fsubrp pop out jb mov insb jp ljmp imull push inc pop rcll in cli pop leave insl or mov movsb (bad) pop jp int pop and (bad) repz ret and movsb push add int3 jg push add mov pop stos add or xchg push mov mov fcomps sub xchg pop add sub push push jecxz pop movsl ljmp outsl xchg pop inc and inc jmp xor pop mov pop pop leave xchg loope sub loope push ja pop sub pop cwtl aas pop ds pop into out fbstp jnp leave aaa rcrl shr cmp add repz dec jge jmp (bad) sbb jb out or pop push cmpsb rorl mov add popa insl sub rcrb std adc mov xchg sub push jl rorl push add jbe ja mov inc mov mov (bad) int and mov roll mov scas sub (bad) lea das cmp shr cmp test sbb pop xchg xor push fildl cmp pop daa jle add in pop fistpll mov cmp push mov jnp std jbe ljmp lods pusha and add dec pop into jge xor push mov pop (bad) out movsl jmp in sti loop dec or std insb or xor jg std ds or sahf and and xor or int3 aas dec outsb sub sti pop sbb push push and push dec mov push xlat testb pop out shrb (bad) push lods dec push or xchg daa pusha mov dec pop (bad) imul rclb add and int3 stos add (bad) jnp ret jge es add enter or gs push pop les mov shrb repz xchg adc pop adc rcrl xor push jmp add in rcl pop or cmp sbb mov or jmp jno jmp mov sbb rorl jmp adc push in push je mov push mov cltd pop jbe cmp test jno add ja aam xchg cmp mov mov call xor push inc mov lods sbb into insl xor jge mov sbb xor pop in test push dec nop mov ja jmp pop sub loopne xchg out cmp pop xlat pop jecxz pop lea sbb out lock fisubrl mov push movsl push sbb and sub mov or aaa push (bad) adc push jmp jecxz movsb mov lahf lock outsb sub out pop add mov cmp cmp data16 sbb and ret sti jbe adc vmwrite mov fwait das jg arpl push (bad) cmp or jmp lock pop rorb fcomps xchg inc mov fisubrl jmp cmp push pop idivl cmp pop and das add cmc xchg sarb jmp (bad) data16 xchg mov wrmsr popa arpl lret mulb leave push test inc shll mov loop mov push roll bound ja jmp adc jne ss js jbe or adc xor fnstenv or or add into pop push xchg and jmp andl lds pop sub pop sti das add lret cmpsb jg or addr16 add nop repnz add pop call les fldl add cmp fs ret push sbb dec push adc les mov loop ljmp repz dec int3 (bad) push nop fidivr fldl2t into aaa test sbb xor (bad) test jg dec add ror mov mov or out pop shl inc add scas pop add sti jns dec into xchg inc or addr16 sub push push cld push lcall call mov std int jp cmp pop pop pop pop sub rcl stos lcall loopne aad pop cmpsb push dec lods imul (bad) xor repnz sar iret sti imul pop pop adc push dec fmuls test jp ret xchg jmp aad jne mov je sub add add pop push push push das aaa xchg pop add add cli inc ffree pop fs mov lret test cmpsw push fldenv sub insl imull loopne jge or in rorl adc (bad) and daa adc loope cmpsb lret sbb sub and cmp es push ret add pusha insb sahf movsl push push fildll dec arpl jo add repnz sar lahf in jno mov add std jge (bad) or jne or mov arpl shr pop and lahf pop pop dec and dec mov movsl ljmp mov add pop ljmp adc jmp push loopne out inc push sub or push adc aas mov add sub ficom pop mov add in les xor cmc stc dec pop pop push ljmp jl xor pop mov dec shrl ss and ja sbb pop js es pop nop movsb xor fsubp xor outsb popa shr divl imul add loop stc xor dec add mov mov fldl dec sahf pop (bad) (bad) imul dec cli jb icebp inc lret jg mov sub int push das (bad) mov gs ds cwtl sbb inc xor pop sub mov and es mov sub push mov jae sub xchg jmp mov (bad) pop js add xchg insl mov pop cmp fidivl sub ja movb pop pop mov test mov or push nop fildl cmp sub or pusha aas out add xchg jmp push add ljmp sub (bad) das cmp ja push add adc flds imul sub pop mov jmp mov jmp mov std mov cltd pop inc and mov les lret xchg sbb sub pop lds and popf xlat and mov jmp mov mov pop ljmp push or inc mov cmp subb sub pop shrl movsl or and sub cmpsl xchg rol pop das ss popf inc dec dec mov (bad) mov fnstsw fucomi xchg add or adc insb mov stos mov pop fldenv jae fidiv lods aaa dec add cmpsl ret test paddusw (bad) lret add mov inc pop stc scas add enter add mov in idivb fiaddl xor add lods popf xchg data16 jmp dec cmp lcall in or aas or xchg xchg lds mov daa add aas add stos push adc mov xchg dec push aas adc pop dec (bad) (bad) icebp shlb add add lret pop pop mov dec insl es subl repz stos mov jle cld xor and dec sti dec or cmp rol inc mov in into cmovno cmc jbe out pop sti sub in shr clc add jl xor pop xchg mul add imul mov and dec dec shr loopne jmp inc scas or lods je adc and inc fdivr sbb fbld data16 pop and xor mov in negl xchg push sub sub push loop rcrb imul insl xchg jae mov mov pop test scas dec mov xchg push lods push sbb fmuls notl sbb mov inc add add mov shrb cmp nop jmp xor push pop inc in push mov add scas xor mov addl leave mov into out adc mov push popf push sbb fnstenv xlat add jo xor jg stc or mov mov xor mov adc movsb in cmpsb pop xor pop dec out pop cmp mov sbb xor mov ret push test adc cs sbb cld movsl push jb stos jmp shlb daa xchg mov and push scas or mov or (bad) and inc ret orb jo scas push cmp and enter cmp cmc loope xchg aaa sbb jbe adc pop adc push pusha cmpb mov pop mov arpl and xor jno dec jmp or jnp or pop add lods inc or leave jbe cmp inc aad jecxz (bad) lret pusha std jl and dec cmp or xor inc xchg (bad) cmp mov mov add stos push and pop les outsb dec test inc (bad) faddl jbe js jae or add frstor insl adc push in push mov sub push add or sbb bound push int3 das inc sub add ret xlat jo cmp inc push dec jg in or xchg push adc out pop mov mov push and fsubl dec data16 ss mov jno jb mov cwtl sbbl aas scas push ret jae xor gs inc repnz mov add lcall sar loopne jo push xchg popf fisubl add faddp out add cwtl je aad lock test push mov movsb test ret adc xor movsl mov push jo adc push and pop lret int3 dec dec (bad) loopne cmpsl cmp pusha or popa or or xor add xchg adc enter or cmc inc sub in push rcrb cmp push xor inc xor or lock inc dec not xchg inc adc push add push dec jae inc sub mov cmpl jecxz or mov adc sub dec addr16 imul cmp int3 ljmp add icebp stos out inc dec and and push (bad) sub lea xor jnp loop sbb add shll cmpsl outsb stc sub add loop push stos mov rolb add cs push daa jmp test arpl or push cmp xor lock shlb pop mov je in sub lods jge jmp jb mov out and push mov pusha divl into adc sbb pop das jnp or jl in repz jl mov fwait jbe mov mov scas scas (bad) xor hlt sub mov xor test inc data16 das in ss scas sub int3 sbb jo jg mov jno orl jmp dec std sbb sbb mov mov es faddl ret xchg mov push add jbe mov xorb add pop aas jmp icebp std pop xor cmp jl dec gs addr16 sub (bad) sub inc lcall mov pop scas jnp pop jp adc clc std cld (bad) (bad) jo jp jbe adc out enter pushf push xchg sbb (bad) inc pop incl cmp pusha pop and (bad) fwait cmp mov andb test inc or jl xlat jl cmp xchg clc stos fidiv add movsb lcall scas add mov shll out adc adc mov push pop mov cli and call stos xor adc cld mov cmp (bad) hlt repnz shlb popa lcall nop dec mov mov xor cwtl inc inc xorl mov xchg dec sbb out push pushf cmp ss xor mov addr16 xor adc sarl adc and pop rcrb dec push add xchg (bad) icebp in pop sbb or push jbe sti mov push or adc dec mov hlt add ret mov movsb pop jo push pushl and sbb js cmpsb data16 repnz sub push pop dec mov cs pop insb adc inc sub inc sarl add push dec mov inc scas pop mov call push test mov mov add mov jl and xchg pop movsl fs adc mov outsb push and mov daa inc mov dec adc les sbb xchg inc scas nop xor jo pop ds addr16 inc or pusha in push lcall mov xchg dec rclb test add pop adc pusha xchg insb rclb add and add jle push (bad) and js jbe imul imul inc movsb mov push pop pop mov pop or jo in sub fs pop push xchg sahf pop sbb dec mov xor adc inc dec gs (bad) jl mov pop sahf xchg xor in xor pushf ds test xchg sarb dec xrelease xchg in pop mov rolb cltd out imul sti sub push push aaa mov outsb or pop dec ja adc push clc test sbb mov or daa dec adc arpl sub cli notb sbb hlt lds push jge inc xchg add sbb mov add (bad) lahf jmp and into sub lods lret or push inc add xchg ror or sub or or call xchg sbb pop add or sbb call bound aam das adc mov nop lds sbb in or add mov cmp sbb ljmp insl pop add lods stos rorl (bad) clc pop scas hlt dec ret add mov cld xchg ret add mov add sub ljmp pop fwait or fsubrs inc mov xor jl sbb mov add aaa jge add in push ret xchg add je mov icebp add sub pusha aaa inc and jmp xor sub jmp sbb mov sbb inc stos ret ss mov cmp and push jmp cli xchg aas pop push pop mov jge jnp sahf xor xor mov scas (bad) sbb add ss cli inc sbb test jnp add jb rcll mov pop int3 dec mov sub ss ficom push pusha ret outsb pusha pusha xchg and push mov ret sub popa xor adcl mov inc sbb rcrl add push rclb or xchg orl rcr out pusha xchg cltd xchg jns dec adc daa nop test or cmp push out dec cld mov adc addr16 xor and rorb invd push and add and mov out shlb jne mov xor push jo push pop enter lock enter dec and add sub in mov stos jae mov mov jns test mov pop dec (bad) xor push or sub inc test aaa (bad) cmpsb sbbl mov and cmp xor add cmp test mov (bad) je unpckhps dec sbb add cmp ss imul loope sbb jo stos xchg cmp mov push xchg adc fist add add ret adc mov in inc add ret adc sti imul push jg ss sub andb rcrl dec add mov or inc fs jl add mov sti add lods adc pop xchg sub out jmp xchg push xorb inc dec pop adc cs out ss loope dec jl pop in inc adc incb test outsb and loopne push sbb sbb dec pop stc add jns adc push lahf xor push in ds pusha aad cmpsb outsb stos inc jae and cmp xorb pusha out insb jmp aam (bad) xor imul cmp mov sub fldenvs les push pop push sub jns in cmpsb in add jbe roll dec add xchg imul aaa sti fbld test movsb mov inc lret daa (bad) aaa push or popf and or xorl xchg cmp test out js je repz (bad) mov and adc xchg inc cmp cld sahf mov jbe add movsb cmpsb and cmp jecxz jge add push xor out enter mov inc ficoml fimul into sub jb cmp or jecxz into into jp sbb out fildl cmp push add push sub add add pop jecxz mov ljmp popf add xlat mov add cmp lcall dec mov and fistl pop rorb inc inc sbb jmp pushf mov mov xor loopne iret sarb lods sarl pop cs sarb mov call ret push add sti es rolb out ds popa fs cmovnp dec inc inc cmp outsb sbb mov push stos pop mov dec sub add mov jnp adc xchg or icebp fldenv sbb out sub mov sbb push xchg xchg pusha sbb add mov fcompl icebp bound movsl add rorl push xor pusha xor jae imul sbb (bad) xor dec sub mov mov in inc repnz nop loopne mov lcall mov jnp or mov mov mov mov push movaps xor push data16 cmp add inc iret jae mov or mov mov pop mov mov cmp pushf enter add mov and out lock sbb fwait adc in add pop push cmp lock pop bound inc inc or xchg cmc or ds pop add out cwtl pop (bad) sti fcompl add fist add push lahf movsb push add scas outsl and int3 gs or adc and and sub pop ljmp xchg pop sahf push das insl out sbb mov pop aad push xchg push test add pop pop pop add stc outsb rorl add push aas fs push je mov or rcll aas push push (bad) imul movsl cmp mov test nop mov jae push loope adc jg rcrl ficompl mov pop adc pop or add pop nop cli jl and daa sahf push jo ss imul shlb (bad) add push sub mov pop leave popf hlt mov pop sbb hlt dec icebp inc push jge dec mov or lcall cmpsb rcll mov and loopne dec mov addr16 es sub mov add movsb in add lahf loop aas cmc (bad) rol testl dec xor nop fistp adc ss cs sub adc xor add or add insl push in stc xchg mov pop into shrb js xchg or pop dec xor jp sbb sub push jb mov ret repz (bad) and adc das shlb push lcall fidivrl adc pop dec mov rclb sahf cmp mov dec out jnp rcrl and sbb pop (bad) int3 dec mov cmp fs pop out xor and push jmp lods lds loopne cmpsl or cltd xor in ret add xchg pcmpeqb pop incb mov sub and jp push mov adc test int3 mov inc add fnstenv xor mov xor lods xchg sub mov mov and add sub inc push adc push nop add push sarl pop or pop xchg ret lret xchg adc andb pop outsl push icebp xlat dec mov adc fcoml mov enter ljmp rcrl packuswb clc mov mov push shl sahf shrl inc call ret mov xor in pusha and or fnop aam mov mov pop (bad) pop mov outsb jg add jge adc dec mov or pusha aas pop jnp rorb jge and lods add mov dec mov or xchg jb push add push add scas inc or sahf leave xor jns test pop mov sub clc pop fwait pop dec mov add or sbb faddp decl arpl push idivl sarl pop sbb adc dec repz mov test adc and push inc dec loope cmp movsl add out mov nop icebp jns xor in insl dec les nop test cltd xchg sub loopne sub or push inc mov xchg add ss ret (bad) cmp leave cmp fiadd repnz shlb pop mov add or mov jns test inc (bad) insb pop aad jmp lret inc roll mov (bad) pop push xchg ss out insb lret jle pop or fist lcall leave cld push das jle cmp test fadds cmc inc test pop sbb je ret add insl pop fbld inc and out mov and add add push push or pop test push int3 xor inc or add movsl xor push loope cmp add dec or push cmp jnp dec daa (bad) lret push mov (bad) jecxz xchg cmp and pop xorl cmp rclb (bad) sbb push and cltd xor and aam dec mov popf jns and inc jo mov push (bad) je xchg cli in sbb adc cmp je aam jne mov dec movsb jae add adc sbb sbb loop mov (bad) sub cmp ret push sbb add incl movsb lods cmp nop xchg fistpll xlat sbb or inc inc mov dec dec cmp test xor add lock mov (bad) js out sub fildl and push push stc push xchg or lahf ss inc daa xchg pop (bad) adc adc out and (bad) out popa jle add loope ljmp inc mov xchg mov cmp out cmp adc rcll adc or js into xor cmp sbb inc mov sub push add push ret inc mov call sub daa test subb or mov dec rcll add mov add xor add push add push dec cwtl add jg loopne out in add das sbb jae faddp cwtl cltd dec add fwait add xchg loopne mov sub test adcb repnz push int cmc push mov ret (bad) aad inc test sub out jp cmpsb repnz and add sub gs jae xchg add out mov dec leave adc push ss js inc adc add jl dec dec cltd adc and mov enter das cltd cmp xchg mov cmp jl xchg pop test je sbb not push out and imul (bad) xor insb adc mov nop outsb iret leave mov sub addr16 aaa mov pop adc notb sbb out hlt sbb jg call dec lock fucomi add lock push xor add dec rclb imul nop cmp int mov call sub add xchg gs fidivr daa sarb xchg iret mov mov sub mov cld and std mov loopne cmp cmp add mov push push sti fldl lock and icebp dec mov cmp cmp cmpsl and sbb pop push xor mov or js inc xchg rorl (bad) in add pushf es jle mov lea into inc (bad) cmp add aaa push lret lods and cmpsb or cmp dec push xor fnstsw xchg xlat mov or xor cmp pop mov pop push xor nop cmp add xchg out cmp adc pop in fild outsb jo mov test add ja (bad) xchg adc jae mov add je or jae addb sub loop cmp icebp movsb jp dec jne push out in mov scas mov push sbb push add jmp int3 push out sub add stos pushf cs rcrb adc lahf push movsb ds lret mov and xchg cs pop outsb jne scas int add push movsl jae pusha pop cmp loopne imul sub jae pop leave or xchg lock or mov jne cmc hlt cmpsb nop in sub loopne imul dec fdivs scas sub jl movsl fnop test fstl mov (bad) mov sub or das ds lds dec bound add hlt sub pop (bad) adc fldenv aam addb pop push jo sbb push mov sub icebp outsb bound (bad) pop or push cltd nop adc mov lock pop sub lds cltd inc pushf les xlat cld roll je xchg ljmp dec fisttpl shr movsb dec rclb les add and call or sub rcll (bad) lea sub stos cmp cmp push add bound lret jg int3 sub add outsb sub out add ljmp or loope (bad) xchg pop jmp jg push dec movb in xor das lcall out out iret movsb (bad) lea insl inc jge jnp (bad) jns rcrb mov jge repz add and ficom dec mov add inc push fcompl mov jp lcall adc mov and daa jl dec out mov add dec mov cmc dec and add mov fistp adc pop data16 xor outsl stc fistp mov fsubrs lods jp add push dec adc xchg in fldl2e xorb or dec leave jns jae fiadd pop dec push jo and xor subb dec inc mov jp adc push aaa (bad) jnp add lret xchg test add rolb adc (bad) lret (bad) mov out out dec inc imul mov cmpl and xor loop mov dec (bad) out cli add les add or mov or movsb sahf test push jno sarb test dec and into mov xchg dec jbe or mov jns dec (bad) out (bad) jo add pushf pop jb sbb imul in and lea scas xchg jno jecxz dec adc push push add jecxz loopne,pn xor push xchg jecxz inc je xor into adc xchg imul outsl je dec mov push pop lret jnp lds push (bad) add jle rolb mov loopne fdivp addr16 jns pop push cmp out and fnstcw mov out or stos push mov das (bad) repnz clc (bad) adc gs ss pop lods imul xchg and add gs cwtl pop jno xchg cmp xorl jb adc cmp sti mov jle jnp andb clc cmp inc (bad) pop sbb sahf fimull dec dec mov add xor xor cmp addr16 out add sti (bad) push leave adc insb adc add mov adcl clc jae (bad) pusha in mov jne repz je (bad) dec (bad) js xor mov jne mov pop sub pop aas popf push cli push sub push cmp sbb negb bswap cmpsb cwtl sub or iret jo xor jbe ret push xchg mov pushf andl jo mov xchg cmp xor leave aas and push push add jno test add scas sarb loopne test ja pushf stos mov add pop or (bad) fs xor add mov ljmp js pop and jg ja call fimul push cmp leave xor add cli jl inc pop xor add sahf jns sbb add test push adcl stos xor dec inc imul scas mov push popf test mov push sbb add push pop inc cmp or or cmpsb and jmp out icebp nop mov movsb xlat scas out daa (bad) in out roll mov push mov sti push shr and push cs sbb xchg (bad) jmp rcrl jecxz test popf cwtl movsl sbb add int mov les or mov inc pop push data16 push rcrb fisttpll decb (bad) mov xor mov pop out shrl sbb (bad) aas push pop shl in test dec mov dec sahf jo popf mov and cmp std or cmpb mov and lods or pop mov xchg xchg and inc imul jnp mov pop testb xchg jbe fiadd sub push pusha sub fbstp int3 mov sub (bad) add adc inc add xchg leave pop test mov mov xor sub add adc cli cmp cltd pop subb xchg sub push and xchg call push inc rolb daa sbb fwait and and insb rcl sbb cli imull loop sub push mov addb pusha mov jl add fsubl push (bad) cmpsl and jnp dec lahf call push addr16 adc aad popa xlat pop dec jp mov in cmpsb and lock dec (bad) shrb pop inc in (bad) (bad) out dec pop xchg mov fild in push in pop pop test insl clc pop daa mov insb daa (bad) xor adc jp pop jb mov inc pop sbb push test xor mov push mov add in fildll dec push pop fs xor mov inc push mov adc sub xchg icebp pop xor xor fs or sbb or cmp mov test inc mov outsl shrl leave jbe dec sub notl cmp repnz or (bad) mov divb scas jns cmp shrl ffreep add mov loop add pushaw pop mov push inc cmpsb mov imul shrb sub inc mov inc dec mov movsb stos mov push push or (bad) (bad) pop push mov aad gs jno pop adc jmp push sahf sbb sbb push add test test xor push xlat and fadd popa push in stos lret sub repnz or add ss loopne xor and sub stc cmpsl adc outsb in mov lcall lret push push push pop add xlat je jle imul jp (bad) jge sbb lods ret das push push push and (bad) repz push jg mov push push adc add loop cmc rcrl in ljmp rcrl lret pop mov je inc push dec dec pop cld cmp in xchg jae scas icebp in leave fcoml push mov imul cmp xchg lods pop adc jmp add addb pop popf pop cs xlat xchg ljmp jb cmp dec shl out inc mov add jl (bad) mov cld movsb pop ja adc sub jmp sarb stos push hlt sub lret clc decl add add stos stc jne test xor push mov add jecxz fcomps pop insl adc push push inc mov sub popf stc loopne pop or in add cwtl jl adc jle movhps jecxz push js fwait inc xorl pop add mov dec dec test jge inc lock aas and fwait pop ds push lea pop mov ficoml dec lods stc dec pop pop (bad) push repnz lds pop push mov push pop repz inc dec adc xchg scas jno nop adc jbe add pop xlat pop clc push daa pushf int3 (bad) and and fidivr lods xchg (bad) add dec mov ret and add xor push pop mov mov xchg iret mov shlb xchg stc gs nop lds ror rorb or xchg mov sahf lock or lds in and sub or adc (bad) ja mov es aam or dec pop sbb (bad) arpl (bad) outsb (bad) push push jns sub inc xchg sbb jp or cmp daa push pop (bad) rcrb sub inc pop jno xor pop push jl cwtl adc pop push sti cmp sub dec stc in jmp and add je clc xchg pop sub inc mov xchg enter adc shll cmpsb inc add sub sbb ret call out jge mov ja sub pop test fs popf push stos mov xor mov idivl (bad) xchg push pop add adc dec pop jmp fild repz jbe mov add jnp pop ljmp cltd jl jmp (bad) jns loopne rcll mov aas xchg pop add jne cli pop push pop fcoms call jecxz push lea pop cwtl dec sub gs sub mov pusha push (bad) push mov jle std call (bad) fisttpll mov jnp in push pop mov and mov jnp pop pop movsl les imul push inc das pop stc push test and and divb add ret daa imul cwtl jg repz es pop mov adc rcl dec cmp (bad) add sbb mov pop pop pushf jbe push inc prefetcht2 mov movsl cmp add stos out dec or add or je xchg sti push xor cli dec sub cmp cmp xchg mov dec mov push fwait (bad) cmp push and mov aad dec push (bad) iret pop cltd outsb inc pop push (bad) sarb in loope inc or or inc cmpsb dec jp inc mov push je fidivr imul sub fwait scas add ss es jb add adc hlt repnz sub lods push shrl push pushf mov mov xchg xchg jb pop insb pushf cmp lcall pop adc rol ljmp (bad) popf push and lods mov int outsl lds sub loop ret inc adc jnp inc cmp cmp mov fmuls sarl outsl ja or in push xchg push add ficomp repz in and (bad) pop sub add out (bad) jg cltd adc xchg loopne sti sub popf pop or fist push sub psrlq mov jns inc adc sub mov pop sbb xor pushf mov xlat push enter push xor (bad) es xor pop dec insl out push push gs mov mov xor or jmp sbb add xor and adc jno mov inc es add (bad) aam jno mov ljmp pop jl and cmp call dec mov repnz bound cmp sub inc or and push xchg jno push sub rcrl pop xchg sbb push gs mov mov pusha cwtl test sbb adcl adc clc push xchg icebp push dec jae inc (bad) mov pop push mov pop jne add adc add push mov adc add push sbb ss clc push mov jae pop mov rorb sub xchg push lods pmaddwd adc loopne dec jnp popf ficoml add mov jge adcl test dec orb mov inc inc sub cmc mov fiadd xchg (bad) xchg cld inc add mov iret subb aas push (bad) dec cmp lods outsl fidivr dec daa hlt mov xchg pop add jmp dec cld hlt dec jne hlt lea or xchg lods jge push or cmp jge sbb outsb loope push sarb popf ror les and or or xchg sbb sbb and sarb and and scas jne and rcl or cmp fiaddl shlb iret pop jecxz repz add jle sub push jmp daa or pop sbb pop xor mov mov sar jge (bad) pop out sub dec iret jp pop mov pop xor ret aaa adc sub dec popa xor add sub mov mov jb addl lahf mov mov cmp movsl lcall int3 dec out insw aas sarb (bad) stc pusha mov pop aam pushf xor sti adc gs sub lock mov imul pushl inc mov sbb dec aaa addr16 in mov in or jecxz cli test daa data16 sti aas rorb add cmp sub jmp mov push cmp xchg mov hlt test in int3 mov lret sbb push out adc jnp ja ljmp sbb orb ret daa idiv clc jmp pop repnz pop aam aaa stos add pop gs mov mov repnz dec jns out jl (bad) orb lret dec dec shrb out mov pop (bad) in addr16 mov movsl mov bound jl lcall (bad) aad push or ret ds or add in sub mov add mov pop push sub (bad) sbb add les test or pop jno cli jno dec or lds imul cmpsl inc xor pop out xor lods jg pusha insb sbb lret cld push lock out or shl adc lods xchg rolb sti push data16 pop jno loope mov jb and jns and rcl dec jnp subl adc dec and or jno rorl aam xchg cmpsl cmp inc and (bad) cmp leave or nop shrl das inc cmpsb sarb cs jnp rcr mov push jbe adc ret stos push jmp rclb or adc insb rolb push push adc jmp repz int jae adc pop push nop aaa adcl jle or daa movsl dec jg xor imul pop fs mov scas pop fistpl (bad) push (bad) mov mov sub sbb xchg cmp call leave ja push add iret idivl fldl or jmp jmp ret adc add xor jbe dec imul pusha ja push cmp lahf cmp or pushf mov and mov sub pop adc subb lods or xor dec pop pop push movsl outsb divb cmc sbb lods jbe mov loope pop push add or bnd and inc gs int pop and mov xor mov out mov xor add jle push xchg std cwtl notb push nop and fcomps push not int3 sub in push ret mov jb xchg sub dec faddp rorb pop ret pop loope ror lods pop jmp insb mov loopne push push pusha dec sub pop pop movsl gs and sub fisubrl outsb jmp mov push jle into popa movsb mov cmp lods or es (bad) jmp xchg bound mov lcall pop push mov dec push (bad) or inc pop call mov push push test (bad) leave xor add neg mov sub jle add dec cltd rolb sub sub xchg jmp pop popf data16 dec dec mov jnp mov dec sbb or mov lds imul dec cld jb call and dec out pop aas push (bad) xchg in inc push mov iret add lret movsb dec xor aaa imul sub push shrl adc inc push mov stos sahf mov in sbb and fisubr cmp dec lods fsts cld jl test dec adc icebp stc xchg xchg rolb jnp sub ficomp pop jbe inc pop in nop mov pop mov sbb pop adc lahf fwait sbb push mov xor icebp push and fstpt or out jg or iret pusha xor lret sbb das and xchg and xor pop ss lds cmpsb adc lock clc mov in sbb cmpsb mov add outsl lods or or mov roll mov stc xor insl sbb fsubrs add adc and sahf es movsl fbstp add add js add imul lahf enter xor add push lea mov arpl add mov outsl add jnp loop sarl pop (bad) les push push call pop ret xchg mov enter inc push ret xchg mov aaa jle clc push jnp dec adc mov add mov mov xchg lahf sbb xlat add insl dec mov push flds sbb ret and inc push ret mov daa ret into sub mov cmp jl cmc stc push mov pop ret in inc pop and cmovae jle adc call fisubrl scas (bad) hlt sub pop movzwl push not jge sub pop cmp ret mov inc push ret pop xchg jb add ror jg,pt mov les sbb mov jmp mov push (bad) and std mov cmp jmp dec movsb gs and sbb les test jns adc mov cmpsb add pop fdivrs jg shrb ds or adc mov push inc mov cmp jle dec inc jge add add sbb je sbb (bad) loopne xchg pop lcall push js rolb add cld in test mov es add mov int3 add mov sbb mov cld int xor aad xchg jno and hlt popf pusha cmp or add ljmp adc adc enter or js arpl or add or ss aad repnz leave mov cwtl inc je js loopne pop xor lods cld in sub cmp popf cmp cmp testb mov cld cwtl or inc cmpsl pushf cmp mov int3 je add add nop add mov push xor sarb xor fcoms icebp enter mov mov sbb inc (bad) mov outsb jno icebp and loope das lcall mov sub js inc fbld and mov je imul sbb xor aad outsl xlat cmpsb mull xchg rorb dec jne add sub or inc sbb aaa cmp sub xchg inc xor dec xchg dec test and pop addl es popf sub hlt mov xor lahf clc add pop fcoml dec push lods inc sub js cld mov push or and or jbe das and shrl lock xchg shr mov cmp and cmp add pop lcall xchg jg add push and mov jno jmp inc subb cmp or daa sub mov xor rep movl adc sub or adc jl fnsave sbb pushf enter sub pushf and cmp pop and imul inc lcall data16 jns pop and leave pop cmp enter lret jns jb stos mov or rorb movsl sbb sub inc mov mov sub cmpsb in inc imul call or sub dec popa mov push dec inc jo rclb out sbb add dec and mov je sub ja xchg cwtl or add xor les je sub mov fidiv es gs mov and mov in cmp jo inc inc pop lods xchg pusha hlt or xchg xchg mov dec mov and fs xchg popf dec or shrl or xor or and andb sbb ja xor add mov mov push jecxz test cmp inc xor dec dec inc push in inc lcall jo xchg xor dec xor sub xor mov nop nop mov shlb adc daa mov mov int3 pop add rolb lret stos imul popa push std pushf repnz fs in int3 (bad) aad inc scas lret cltd rorb pusha addr16 hlt fstps cld xchg nop in int jo hlt ja dec add lea xor mov sub outsl adc sub mov insb dec adc sar daa imul stc sbbl cld push in xor jo xor popa cmp add mov xor cld pushf dec je inc shl (bad) adc outsb sub das popa mov adc pop je hlt (bad) fnstcw inc push inc imul rcrb mov pushf xor sub push xor pop sub out add call jno fsts jg stos pop or sub fwait test push aaa pushf std cmp pusha inc nop sub les mov pusha lock cltd daa or mov or push imul mov int3 popa sbb orl pusha mov mov xor mov ret les inc cmp jns xor loopne dec ss and lds inc inc mov add sbb (bad) stc ffree xor add mov add (bad) push and add sbb or and xchg mov sub xor pushf es or xchg pop push mov js pusha push psubusb fbstp xchg xor dec and ja push push setno addr16 cld movsl mov sbb mov or fs inc xor adc or inc lock test lcall or shll sub pusha sub add adc adc les in mov and mov lea and or sub movsb sub lsl or adc pushf or sbb xchg adc xor popa cmp add test cltd xlat push aam dec or fcoms cli iret fidivr sub sbb jle aas xor sbb xor cs daa adc add sbb xchg add pop xor add repz and lds dec lcall sub adc or mov pop and les cmp mov adc jns or xor adc add sub fiaddl jg ds pushf add xchg add out or rcrl pop pop add add sub dec (bad) jbe or xchg adc add sub cwtl and shll in es sub jo and and jo add addb xor icebp xchg dec mov rorl jecxz lret pop std shl cmpl pop cmp mov addr16 jle out mov bound inc push out inc fsubrs cmpl inc (bad) mov sahf sub imul fdivl stos or xchg js in mov test dec inc mov daa inc lea or and fild daa je test and sub or adc cld xchg or jae cmp aam je cmp mov lahf mov in pusha icebp jns mov add into repnz inc xor clc add inc mov xor inc lock cld outsb dec dec fdivl or lods adc and mov adc push repnz xor adc movsb pushf repnz cld xchg movsl pusha scas nop lret scas pop jp jbe insl xchg test mov dec add cmp push add mov add mov xor push je dec int xchg xchg rol insb cmpsl mov sti nop xchg outsl jae call or push push hlt jnp lea adc clts add dec mov adc stos push pushf (bad) pop add push xchg sbb mov in nop in pop mov and cmp shrb loopne (bad) loope lods cmp xor cli mov jl hlt or add test push dec and sub mov pop sbb lds or movsl cmp cmp xchg push cmp icebp ret lock rcll outsb cmpsb or dec lahf ljmp jo xchg cwtl imul mov loope rolb add dec lods repnz mov aam lahf pushf jge cmp jl js js jl jl addr16 (bad) (bad) lahf adc (bad) fbld pusha dec inc xor mov lock sub (bad) into mov jb add bound sbb inc pop in out add cmp setp mov xor popa push cmp sub adc xor cmp fistp pushf mov das inc call sti cmp adc jecxz imul add sarb fmuls add arpl cmp mov nop lods mov xchg xor into jo (bad) sti mov clc inc aad test ja inc push aas or mov mov pop or cld aad mov cld cmp in sbb aas inc ljmp testl xchg rclb mov lcall pop call dec mov fiadd mull and popa popf es loope (bad) lock and insl and and dec push jl sub popf in je (bad) sbb push cmpsb push ljmp pop pop jnp rclb imul imul and cwtl or push mov dec movl or (bad) push adc dec icebp xchg sbb mov int3 xlat enter adc mov cmp jne dec pop adc pusha pop (bad) xchg fadds and inc and rorl mov fist push add push or (bad) pop out sub xchg add outsl nop rclb in jno or fwait pop test cmp sbb pushf push aam popl dec xchg xchg push adc sub add mov push iret xor mov and mov adc cmpb add dec xor sti scas xor mov loopne jecxz push stc push or fs sar sub rolb adc add or inc push xchg sub xchg inc or inc lret xlat add xchg mov leave mov xchg push dec dec inc ret mov or xchg sbb int3 ds cmp and and subl cmp xor adc cmp je adc and inc xchg ret and leave add mov inc add sub sbb pop iret xor jnp mov fdivrl mov test aaa iret rol sbb pop es pusha adcb dec out subl lock sub andb xorl push push pop (bad) popa mov jmp push add shl push movsl cmp adc clc fs lods jo dec and fiadd popa inc push mov xor cld clc psubusw dec pop fdivs test scas push jle es mov mov or and add in sub xchg cmp pop fisubr (bad) cwtl sbb adc inc mov add push cld mov popa push or mov enter out nop icebp inc xchg and repnz out (bad) dec jecxz,pt jns cs sti icebp cmpsl or lock jle popa fiaddl jnp imul fs adcl and in inc add xchg ja (bad) adc outsl or movsl insb out mov iret push nop add mov (bad) in mov pop xor push cmp and or (bad) xor sub add stc pop dec xor cmp xchg sahf dec jge fnstcw fiaddl out movsb dec add popa mov xchg jle add mov sbb add stos fwait jl jge mull mov test mov xor pusha mov jle js dec dec inc inc sbb sbb adc or aaa xchg negl lods mov int3 xchg add pusha mov sub and lods mov insl mov imul mov xorl xlat mov and (bad) les xor sub cld or cmpsl (bad) aad fwait lock sub or lea xor xor push popa aas push cltd add sti pushw or mov add cmp cmp push cwtl add in xchg pop sbb dec sub add cmp mov xor xlat push shrb dec and and push lds pushf sub cs mov lcall dec addb mov inc dec rol gs imul xchg lock in push gs xor mov cwtl rolb inc and adc push out jns rcl pop xchg (bad) roll cmp add push idivl insl les inc pushf jo repz gs fs loop int3 (bad) xlat sub add fs and arpl mov mov (bad) arpl jge rorb fild pusha sbbl mov dec aas push jnp nop adc inc adc cwtl lods pop roll mov dec add scas mov dec addb mov pop int3 es add (bad) insb out push (bad) and sbb mov dec jo cld mov shlb leave mov int3 mov jmp test hlt mov push fcoms mov mov lret inc add or ror mov cld or xchg rolb dec push dec jae dec push mov test jl push and dec sti (bad) cltd mov xorb cmp ret aas in mov pushl movsl pop and adc mov and ljmp cmp cld jno add and mov arpl and push les mov test fisubl sbb or mov xchg sbb xor jne sub jb (bad) sbb movsb shll xchg and call incl iret add jno fsub add add cmp mov pop sbb orb and pop pop addb mov sub adc sub ret jle (bad) pop or xor add xor add push jnp mov inc dec in xchg and mov push lds jbe faddl pop mov and add nop inc or and add or sbb insb or rcr push addr16 jp lret and mov xlat xor arpl adc icebp sbb inc mov push pop pop lret mov xor psubsb sahf data16 lret int cmp adc fbld (bad) cmpsb in or mov add in jge xchg and nop cmp mov loope jmp mov mov cmpsb push cs and out sbbl cmpsl stos movsb push sub cmp mov jo add cmpsl or sub fildl lds add cmp mov fisubrl repnz lahf cmp mov lds ret lcall sbb fs dec incb bound stos jl loopne pushf adc jns leave cs pop and adc push or inc cld pop dec push outsl inc adc pop xchg pop jo and inc es mov pushf nop mov fmuls nop cmp sub icebp nop push and pop or iret mov inc jne add push das mov imul or rorb fmul pusha jo mov pop std rcrb fistl sub adc faddl and add push jmp xor sub ret insb ficompl subl stos pop loope pushf int movsb adc leave shll pop dec mov and aaa add out and les insl add jns hlt push clc lods adc lock iret mov hlt mov or sahf mov lock and adc add stos mov ror or fnsave push xor (bad) bound sub in sub sbb stos insb mov dec bound loop adc fucomi mov shlb in push inc and gs push out test add push leave or arpl jo inc sbb lds mov push mov mov in mov (bad) jne cwtl das outsl sbb dec or xor data16 adc hlt adc cwtl xlat jmp or test rcr div mov out fxsave adc inc test js mov push pop fisubrl pusha and js push sub sbb jo adc fsubp sbb add adcl inc bswap sbb call dec insl push sub lock cs (bad) repnz dec mov push sub xor arpl adc adc dec (bad) mov sbb lret or cmp dec test dec inc scas or inc imul outsb jb xchg movsl nop inc (bad) dec adc add cmpsb pop dec int3 pusha inc (bad) xor ds inc (bad) loopne ret out dec and lret or push xchg cpuid pop fisubrl sub and sbb mov push out pop cmc loopne (bad) dec clc fsts push adc or hlt xchg add loopne xchg gs mov pusha jp loope push int rclb rorb cwtl jns ret jl mov push shrb mov jnp jo leave mov lods inc xchg xchg pop pop adc mov and clc nop push and dec add je hlt sub mov pop or cmp scas jo mov pop fcmovbe inc imul and int sbb and repnz sub mov test add int inc pusha adc in jl movsl or jno sub or into in adc loop jnp xchg movups mov add mov jge test pop add inc fs das mov mov pop lods adcb cltd and adc adc ljmp (bad) (bad) cvtdq2ps lcall gs mov or and and add xchg xchg ss cwtl push push (bad) data16 (bad) adc pushf sti out and ss mov addb rclb inc in ds loop into push cmp stc ret mov pop (bad) je andb cmp in in jne loopne xchg frstor arpl (bad) loopne dec jno add nop mov cmp pop jle loope mov jo and lds cltd test mov inc or pcmpeqw out push inc insb cli sbb aad mov rcr stc enter pop cltd push in les movsb pop pop sbb sbb mov mov jmp enter and mov popf or stos ja lock les push and sti testl or jge (bad) mov fnsave cwtl pop lahf jno pusha cmp mov je dec into sbb fmull cmp pusha add in adc push and subb adc sub sub loope ret mov push pushw insl lock push aas out movsb js jno or push aam out or pop xor xchg stos popl in sbb in aaa pop mov iret ret xor test loopne repnz dec enter or mov rol push pop sbb aas fwait xlat push std sahf out scas and jbe and jp (bad) fidivrl sbb mov mov dec (bad) ss adc stos int3 rcrb repz lock fucomp inc cmp fcomps ds mov pop push (bad) dec sub and cmpsl faddl push inc aas pop jno out js and cmp mov adc mov sahf push add out add cmpsl loopne or jae sbb adc (bad) test mov adc repnz pop sarl adc pop pusha std mov jnp lea sbb pop add cmp and mov mov xchg (bad) cmp mov mov popf xor enter dec das and xor mov lea cmp or inc fnstsw fdivrs xor fisub or jb add pop in hlt int3 push dec inc adc notl ficoml loopne pop xchg test push mov xchg fwait je pusha cmp xchg ret push pop cmp jne add lahf inc out lret mov xchg or aam inc push inc add jecxz cmp arpl inc xor lea out xor mov dec mov mov stc lods push pop dec dec mov xchg jo daa mov pop lret movsb and icebp add cmp xor and lea push fyl2xp1 cmpb push dec push mov jo pop sbb lods out cld add scas dec xchg cmp inc mov pushf or pop xor pop sbb lcall jno hlt clc (bad) cmp (bad) mov mov (bad) jno loopne mov add sub test or jo fcompl pop push inc movsb int3 pusha and repz arpl pop or pop mov ret enter stc xor xorl sub pop in and lahf sub fist mov adc lds faddl repz xchg xor cs pop push add dec xor test mov imul in les lret xor mov mov rorb mov xchg or fcoms sub jmp or mov mov sbb and sub test jno sub mov mov and mov add addr16 add out pop (bad) mov push out int test notl add xchg sti push out mov daa fst xor pop (bad) push pusha adc cmc mov dec dec mov call inc mov xor xchg jmp out gs pop jno sub mov adc or jg push cld adc jo sub enter cmp add pushf imul mov push imulb pushf dec fiadd fistpl xor adcb movlps ret imul dec mov push ljmp xor std sbb adc mov dec aam not add (bad) push sbb cmp inc loop hlt ljmp xorb push shrb xor gs cmp int3 xor sbb mov cmp add xor and xchg lcall (bad) and (bad) cmp pusha aam add out pop mov xor bound sub dec push (bad) fcoml pusha cmp movsl jae push cmp jl push call jae int cmp les xor mov les clc into mov cmp ret add pop nop push sbb les add sbb imul xlat add rolb adc clc or inc (bad) mov pop pushf pop lret push jge js sbb ror mov or push add ljmp push xchg sub adc mov adc cltd push daa cmp jl add incl and push das jbe xor ds pusha pop adc mov adc add ljmp push nop pusha into das cmp jo enter (bad) dec add ret in jno pop pop mov sbb insb sbb aad mov rcrb leave pushf lock inc (bad) dec out or lock fwait (bad) imul aad lds lock or cld insl mov xlat inc lods leave jbe insb mov inc dec xor cmp mov and testl dec lods mov push xor mov mov setbe add hlt popa enter cltd sub mov leave mov arpl insl lock dec loopne nop test (bad) jno cmpsb gs xor xor std xchg scas add lea mov or out push xor sub and add repz hlt scas stos jnp add ss ja cwtl mov cmpsb shlb sub dec insb add sub dec mov jle add loop cld sbb idivb mov lcall mov (bad) xor enter imul je or bound fmull daa mov sbb xchg sub in pop movb clc push shlb (bad) adc dec sbbl adc add cmpsl xor shrb or push cmp add cli xlat nop ja jl mov loop mov fwait subb daa daa xor pop pop loopne mov outsb shl shll cs es in shll add int sbb dec (bad) mov sar aam xchg dec mov add fucom sti push pop pop jno inc imul and push mov jmp inc add mov aas xor and or call xchg sub subb pop les mov scas dec loopne enter dec clc or es cwtl adc xor sbb aaa test stc sub mul (bad) dec fcmovne ss rcrl fldenv jle les insb int3 jl jae add js mov mov fcomps mov in sub fisubl mov xchg test pop add mov addl mov jg push loopne add mov add sbb in enter rclb cs loopne inc push lea mov or cmp inc push das jmp sub nop das add dec xchg ret jp mov mov or add scas xchg pushf repz lods mov call jne jo and inc je xchg bound xor call or dec or call xor add or xchg and sub or dec and daa hlt add test jo and xor sahf or inc mov or mov xor jns adc inc pop xchg and insl jl dec cltd sbb test mov stc pop xchg pop (bad) xor sbb imul f2xm1 mov jb add inc incb sub pop and jne mov and add rorl in inc and fstpt imul add or movsb xchg (bad) sub or pusha sbb push addl jae pushf ret sbb out pop or adc sti mov insl stc jne enter mov ds mov add push add pop das lcall mov inc testl mov out or pop lret pushf rcrl add fdivrs cld mov push cs lods jecxz xchg xchg inc inc jmp sub daa in in jo or repnz and psubb pop test jl fstpl int3 mulb sub dec and fsubl dec and adc sub movsl cmp pop clc adc sub jge add lods xchg fnsave ja adc lods inc dec loopne test and loop aam pop and and lods xchg add mov add lds loope add or and enter dec call push andl xor mov inc js add xchg movsb push sarl sahf cli jp loop ss xchg or add cwtl pop xchg stos inc add sahf mov test and add inc mov xlat fdiv or mov add jnp xor loop inc test xor sub fmull (bad) (bad) insb pop push movsb adc or and sar jo add adc xor mov or sar rorb adc add imul into ja cmp imul lods add (bad) aaa jno dec mov add pushf rcrl fs and enter stc inc rolb test adc test sbb add clc int lds adc jb stos (bad) orl packssdw pop lcall add mov xor mov add xor jmp es mov cmpsb xchg inc cmp mov loop mov xor or (bad) cwtl hlt pop ljmp cmpsb mov jle cmc fisubrl test nop add and out add dec inc lock jge sub (bad) hlt clc in movsb or shlb or lods sbb mov lods cmp mov cmp mov mov scas sub hlt add in inc loop mov fs cmp sbb lock popf dec pushf stc hlt adc ds push dec mov data16 push test out dec inc inc jge adc fadds mov cmovs and out out inc mov mov das mov sbbb jne xor or add pop cmpsl jae movsl lcall adc fmuls dec xchg inc pop iret int3 and in push add aaa mov mov jle add inc (bad) lds loope adcb mov lahf push lcall int3 mov push lret sbb xchg fs add inc sbb inc and (bad) dec xchg mov lcall cli testb dec loope inc and jae enter mov lods add scas or stos adc pop cmp and cld jae aam add add inc xor or pusha mov sbb jnp mov (bad) fnstsw stos jl jo jge cmp aad add outsl lea xor lods xchg nop popf cld daa and push mov in lret xor loopne pop in addr16 adc sahf push inc and xchg fistpll cmp dec daa pop fwait and push mov jmp call pop dec pusha mov inc aam fmull negb test or rcll adc decl mov je shrb dec arpl stc and push clc jmp js loopne sti and punpckhbw scas mov jns call fcmovnbe aaa add test mov sbb or or or pushf mov push lock mov adc fmull enter jp lcall je or gs insb sub mov outsl lret pop adc xchg adc loope inc test jmp shrl test insb dec jmp add sahf xor dec or jne jl sub mov or add xor xor push out imull fwait mov add jb,pt lods hlt cmpsl mov lea enter mov dec jns daa inc jae add outsb sti into mov xor add mov negb mov jge fnstenv xor fsubrs xor push std mov pusha dec clc add xchg daa and pushf inc sub or inc je xor sub js movswl sub cli inc out xor pop lock int3 repz and cmp sbb rcrb inc mov rcll mov mov movsb clc daa jecxz pop or mov or mov mov add xchg in sub sbb jl mov cmp xor mov xor test push mov xchg jns or lods jo cld dec enter enter and pop insb addr16 sbb xor dec sbb add scas shr push push ret (bad) sti mov daa xchg or fwait inc int3 js and cwtl fmulp xchg scas pop stos int3 cltd imul xchg loopne in adc setae js adc or notb adc test lret sbb (bad) nop ja cwtl mov sarb pop les outsl fwait enter and pushf or sbb mov pop in push je rorb dec mov lahf lds inc (bad) mul adc adc jb push ret fdivr or sub in jp shrl and nop fisub nop cltd int3 bound mov insb mov lcall (bad) or sbb mov test call cmpsl aam cmp lahf lods enter xchg sub cs bound xchg push repnz xor or in mov stos add mov hlt mov jo add sub imul fcmovbe xchg inc mov lcall fs pushf int3 sub pushf push jae add ret cld xchg gs dec mov add stos loope je roll aad in and pop mov adc sub inc lret sub es arpl and mov mov insb fnstenv add jg xor gs syscall outsb push sub addl add (bad) or lcall (bad) leave ficomp sahf mov or fstl cld mov or cmp or xchg fsubs mov dec sti push cltd inc adc mov adcl addl sub fsub mov fdivrl mov jo je fs mov ret jl cwtl cwtl add dec xor mov inc lcall pop arpl test pushf cmp imul dec lea jns push (bad) lahf inc xor or xor (bad) pushf mov ljmp mov cs jo pushf push inc or jp js pusha leave (bad) prefetch pop and clc sbb add mov cmp inc add xor dec or xchg arpl inc dec add out mov xchg adc xor mov dec clc outsb xchg inc cwtl stc hlt lret inc lock push stos xor push cmp fnstenv sub loop add jmp (bad) in jns xchg or lods inc mov clc add sbb sbb pusha mov jnp (bad) mov or add sub (bad) negl push inc add test dec xor andl dec adcl cld ds cwtl inc add and sub push cmp or sub sbbb xchg jo mov pushf daa (bad) xor push push sub push cmp or das repz daa imul xchg pop movsl mov gs fnop outsb push and sub xor jno add push jne mov loopne lcall pop pushf dec in cmpb mov lcall into mov add push and fldcw test lret cwtl mov mov xchg (bad) and cmp mov cmp imul push sbb jge xor xchg rcl xchg or fwait jp adc jo in aam iret pusha int3 sbb jo fnop or dec jecxz test jp (bad) adc mov xchg lods hlt add push inc inc es (bad) xchg add add in fldl xor iret and lret add sub mov jge or cmp idiv gs dec pop add cmpsb mov mov pmaxsw out dec popl mov inc leave mov inc add cmp (bad) dec pop (bad) (bad) jbe add lret int sub xorl and insb es and mov clc add inc das loop into push cmp pushf loopne pusha lods xor jns mov lds mov movsl data16 lcall call imul mov dec (bad) and fbstp mov xchg xchg ret test test sub ret aam lcall fcomip inc mov xor andb mov push add repnz nop xor cmp mov lahf stos rclb add add addl es daa pop jg clc or sub push push add (bad) aad sub xor cli and xor push daa (bad) xor or in sub imul sub push push cmp add test xchg jbe jle in repnz mov das js hlt add adc loope inc or add mov add xchg rorl scas sbbl adc jo add or add std xchg cwtl sbb rcrl add das xchg pop sub pusha xor mov stos mov pop adc fdivrs add push cmpsb repz lock sub jecxz inc in cli add outsb cs cmp (bad) loopne loopne pushf inc cs cld lcall test scas xorb add test xchg (bad) sbb or push xchg inc mov sub aam lcall jb xchg enter add mov mov dec test adc jb enter (bad) adc insl pushf sub mov bound cwtl sbb xchg and sub nop int3 add scas rol pop ja or js cmc xor pop push mov popa (bad) or push hlt jp sbb insb les mov or test je sub shlb into mov loop xchg cmp data16 pop fsubl outsl xor pushf mov mov fdivrl jns jb sub cmp insl sti pusha push es hlt int rcrb add xor or lea in jae das push rcr add inc and jl pop jno and out mov imul jb cmpsl insb push xor fs sbb sub movsb sti add in jb pop mov push addl sbb or ret mov dec push pop adc nop mov pusha mov (bad) mov dec inc or and jp mov add lcall addl add frstor stos dec mov add or and add addr16 push pop rclb movl mov bound arpl and cmp mov int sub loopne or imul fwait and xchg push inc aad pop mov dec pushf insb add inc dec mov sub shlb subb xchg pop stos xabort cmp pop xor lahf sub dec push mov outsl jo mov inc xchg out and or xchg push xchg sbb push test inc inc cmp insb push sbb add int scas cmp loop loopne jns rcrb jb inc fidivl and mov push test or mov test pushf mov jnp stos nop sub loopne xor xchg inc or lahf cmpsl add sbb or pushf push fs sub ret xchg arpl nop rcll sbbb or jp pop xchg inc je add push loope sub cmp into sbb add jle adc hlt lcall xchg lods mov rolb or cmp js dec imul sbb dec mov dec mov jl sub xchg mov gs mov (bad) (bad) lock pusha sub movsb nop mov dec push sbb movsl ja push mov add ljmp and adc ja xor into mov and xor es lret imul sbb push add out cmpsb jge mov jne rol loopne jbe pop sbb adc add cwtl adc in pusha (bad) fldenv sbb (bad) gs pushf lcall jmp clc add pop repz jae sub xchg xchg stos mov cmpsl clc xor xchg sub push sbb jl sbbb xor rcll mov and cltd cld xchg leave scas xchg adc sub add mov adc (bad) pusha (bad) add and xchg loop add stos nop cmp or mov cmp xchg add xchg or stc nop/reserved mov mov mov add inc aad or xchg mov mov xorb xor in les leave paddq pusha cmp dec add sbb shrl pushf lahf mov jnp jo xor push cmp xchg int3 inc xor mov add xor lcall das shrl pusha pushf cmpsl dec mov lods mov dec ficom jo jg orb cmp and fadd xchg mov xor (bad) mov sbb jo mov test sub aaa orl stc inc shlb mul cld dec sahf in sub add dec arpl les mov adc icebp loope cmp mov push nop push daa add std loope add mov cli xchg jno mov lcall mov mov adc je jg and pushf jecxz mov mov or adc bound out lcall xchg sub push ljmp rolb test fstl daa out or sbb sub xchg in rclb add pop and pushf cmp xchg dec push movsb add ja popa icebp add stos cmp xchg hlt lods hlt add add pop jae xchg mov je jb cld ficompl lcall adc lahf loop xor (bad) nop nop or mov inc pusha xchg push ja pop inc inc mov add pop mov jnp loopne sub pop (bad) sbb inc push add sahf push in fcomp or mov adc iret mov mov sbb ret mov xchg test mov dec (bad) hlt (bad) push inc add xor cmp jle repz add adc jnp xchg out mull xor hlt rorb ds adc add jae add and xchg test and sbb add mov dec and lahf sub add or (bad) cltd mov push test gs data16 mov cltd je icebp sarl push dec or enter mov lahf xor push dec and mov mov push sbb dec add out pop f2xm1 lcall jo lods hlt movsb inc je cs and dec hlt add jb dec bound mov adc add loopne movsl sub gs xchg inc das dec xchg stc jp fs or scas inc sub outsb rcr stc sbb push or adc mull imul cmpsb adc mov mov subb int add push push jb scas pop mov adc scas pushf xchg stos xorb stos mov movsb add jbe sti sub add jg and stos or fsubrl movsl xchg lods js inc jbe cli lcall push mov test lcall jbe adc lods test lea (bad) jo dec jbe pop sub pusha lea push xor movsb cmp das xor jge pop sub imul rclb (bad) scas mov les add pushf out mov cmp sub add es or hlt dec test mov ja in (bad) lock data16 sbb inc or mulb cwtl pusha aas ljmp xor or lds orl xchg pop loopne fiadd sub repz jmp mov int cmp sub std out add lods sub cli cmc xchg inc mov and popa mov icebp scas cld notb xor stos add jne add lods add inc or mov lea add and mov jl je or jns (bad) mov xor add mov test mov adc cmc cltd xor flds xchg mov sub or cmpsl mov sbbl cmc push mov nop (bad) sbb popa xor fiadd je xor cltd stc cmpsb xor lods fisttpl popl sub mov ret sbb jmp (bad) cld hlt sub dec cs bswap cmp push (bad) or (bad) test add xchg in loopne and les sbb inc rdpmc xor test add ret insl xchg push xor lret out mov pop addl push int3 ret push or cmp pop adc js or bound arpl out lret mov sbb or stc push or cmc push xor inc addb xor xchg cmp lods add push or add (bad) sbb add adc add movsb lea imul cmpsl add aam xchg sub or xor stos push stos stc push loopne arpl lret adc sub adc stos inc lods push mov test inc std inc sbb mov xchg imul (bad) sbb xchg cwtl or (bad) cli jmp loopne enter out and jnp xchg sbb cmpsb sub inc add xchg cmp ret add or cs add repz sti xorb mov mov xor add sub lods lret add jmp add repnz xor out sbb or sbb es lods push mov pop pop cmp add repnz insb xchg xchg and or or adc xchg xor pop test pop add push aam (bad) cwtl inc mov imul jo add sbb mov add addr16 (bad) mov xor sti or sbb adc and or fwait sub fmull inc mov dec add pop jne add adc inc xor sbb jle or nop lods mov cld mov movsl sbbl inc xor shrl mov inc adc sub and in add sub push mov sub mov test (bad) sub and mov decl push rorb push stos lcall addr16 sub sub or push lock xor rcll sub or sub adc ret in add xor mov int3 dec add or mov cmp dec push adc and dec mov xor mov mov add pushf adc ljmp stos inc ja inc hlt xchg sub or outsb sbb rclb lods and data16 add inc mov (bad) xor pop cwtl xchg add and xchg das adc dec lods mov mov jo (bad) mull orb push rolb and sbbb in (bad) stc dec test (bad) jl orb xor sub mov nop sbb fildl andb pusha or pop xchg adc inc psubw xchg loope sub es push repz leave call and sbb dec or jecxz ds mov mov mov fadd lock and clc je aam arpl loopne push cmpsb je testl add rolb mov call popa and sub in inc movsb cld sbb data16 js push sub in das xlat dec mov and xor cmp add inc and int3 push les and or dec arpl push aam sbb jo repnz add ret pusha pop cmc jno xor cmp fwait pusha lret sbb mov pusha shlb cmp xchg dec fs pusha mov add sbb inc or or or xchg popf (bad) mov dec mov push test mov lcall cmp test or mov cmp jmp jge sub (bad) mov cmp push push xor dec call xchg loope rorb and mov sbb stos xchg or call adc add out (bad) mov dec push roll aam jge fbld dec fdivl xor test shrb sbb push das sub nop inc es cmpsb xor jl sub cmpl xchg aas or fimull dec add aaa add add mov ja addr16 lods and and xor into sub cs nop sbb xor add add push xor sbb sub jo mov and sub (bad) push pushf mov or rol cmpsb inc adc add mov jo sbbb add call adc int insl scas (bad) hlt xor sub pop push mov nop js push cmovo pop push or and aas icebp ret xchg cltd sub add inc xor subb lods pushf add xchg xchg dec insb sbb cmpsl xor cs fs mov arpl adc and arpl sbb lock xor inc push icebp sbb cmc jl add aam test test mov fsubs mov jg xor push mov xchg dec es mov dec stos push mov gs pop and (bad) push jg add daa cs lret rcrb jle mov mov fwait addr16 inc test adc sbb push mov sbb pusha or pop push sub (bad) shrb push dec cmp and and sbb sbb push sub jmp stos test cmp in loopne cmp xchg outsl loop fimull sub adc fldenv in xor es mov cmpsl sbb or add sub add dec adc jno push mov xor add les popf pop cmp push add jecxz pop mov lods xor aam fisttpll bound sub pop xchg aas sbb test and sbb int ss jle addl cmpsb pop popa jl inc or pusha sub leave (bad) xor jl lret and mov or rcrb jae and jecxz add or aas test jle or outsl sbb leave lock repz mov test inc fdivrs std dec or mov add and pop je hlt and cmpl dec add pop loopne xchg dec adc stos (bad) repz push mov add out std test inc jb,pt add cmp mov sub xor and std shlb scas add prefetchwt1 cmpsb and imul sub call push add sbb daa add xor and add mov je mov outsb and jge jg xchg sti cmc shlb cmp sbb les fnstenv xchg movsl xchg mov cs call mov testl or mov adc jmp mov add pop and les movsb xorl add adc (bad) jbe xlat dec les sub (bad) adc popa xor pusha lods sbb das pop clc insl sub mov push outsb mov pusha sub sbb imulb fildl cld outsl adc sar inc xor cmp add imul (bad) jecxz or xor sub dec mov inc ret test pop add push bound lods push cmpsb sub imul xchg xor nop add dec xchg and mov cmp xlat adc adc imul pop push sub add push adc (bad) loopne popl mov mov and es mov pop xchg push or sysenter lret stos or jl jl xchg add mov add cltd adc lods and cmpb sti out push mov xor xchg clc push mov repz lods and jge je push sub xor cwtl add xchg fisubr cld in jmp xchg fsubl or mov fcomps mov hlt and push fs testb cmc pop adc les mov xchg and pop and fs outsl lods test loopne sbb loopne lea cmp insb add rcrb test icebp popa fsts sub inc or mov mov stc sub roll (bad) aaa and in ret push movsl xor enter xchg outsb cld mov adc (bad) sbb imul cs mov add cld ret lock xchg clc cwtl sbb nop out jl inc lock lds xor xchg xchg or ffreep aas and cli xchg dec sub rolb xor xor sub inc mov add imul scas adc pusha imul je es aam cli and test in lret cmp cld adc jae add fstl sbb push popa adc add inc jo aam cmp outsl (bad) xlat iret (bad) mov fcoms icebp pop sarb sbb clc daa add jnp mov dec pop mov and add sbb mov icebp jo mov jae loopne insl fcoms pop pop loopne sbb js pop stc sbb arpl add jb xchg popa sub add sbb dec dec cmc jnp xor cmp test pop aad lock sub sbb mov nop (bad) lock and xor out push sbb push push mov stc xor mov jl sbb push fsubs mov inc fiaddl stos (bad) arpl jmp jo xchg cmc dec clc ljmp add outsl push popa xor push push mov sbb jns xor adc mov xchg and and add mov addr16 das jge cmpsl leave dec inc test sbb mov arpl lock pop push sbb inc jo add repnz inc sbb fwait clc push shll stc repz cwtl add scas pop sub sbb cmp andb pop cltd cmp adc inc mov nop pusha push cmp rcll mov cmp lods mov rcrb sub inc push adc dec decl mov push scas or dec push sbb xor push int out add in popa mov mov jnp lret rolb outsl push xchg cld lea xor hlt js in sbb fs pop je jge rcrb dec xor jmp xor sbb dec xchg xchg pop add push addr16 sub rcrb movsb fist aad (bad) add shrb xor pusha adc hlt cltd pusha es stos or add stc shrl dec pop mov lea inc sbb cmc subl dec or repnz orb clc outsl cmc call call je push dec jecxz jl inc sti and dec fs inc test in dec adc push popf stos mov sub out jg mov aaa and push sbb push and or rclb sbb or add mov pop xchg push cmpsl loopne adc push dec je fistpll aam pusha (bad) or adc jns mov ret adc icebp jle ljmp shll add inc push iret xor test arpl or inc inc push icebp mov sti push cwtl cmp jo jge jg dec pop ja xor xor adc dec and popa jmp (bad) call lcall push scas jno cwtl fdivs xchg sub jmp stos sbb or cltd incl nop adc lock enter shll mov xchg dec dec or mov scas xor inc movsl jno movsb jge fidivrl enter outsl arpl int3 ret in (bad) fstpt sbbl outsl xlat daa add rorb leave sub test jns cmp dec jae aad test sub mov pusha ret dec mov rolb and pushf xor pusha cmc sbb repnz jg sbb push je and mov add (bad) imul sub mov in out pusha mov insl jge xchg stos pushf dec call out mov and dec mov cmp push or inc es push mov cwtl pop adc clc cmovns fnstcw dec push pop fsubr shrb add lret call incb (bad) push add addr16 mov test aam cwtl mov pop dec mov shlb and pop dec sbb loope xor mov sbb aad push add imul adc nop das push fcomps mov lock push mov rorb and push mov add ret dec jge movups lret movsl stc add je add (bad) ljmp ret test loopne inc lock add les xor push sbb push fwait arpl or imul pop (bad) lcall fcompl add (bad) in popa aam aam clc rclb inc insb pusha movsl aad hlt and inc fadd nop vpaddsw fcomps mov or orl push and ret sbb jl sub cs pusha cmp out mov rclb adcb pop sbb pop mov pop sub pop sbb push mov xchg pop ljmp in sbb loope mov mov test dec rorl mov aad cmp jge nop dec clc pop mov cmc je xor sarl cld shl mov clc adcb jg sahf mov sub outsb ljmp dec add dec outsl jns lret fldl mov mov mov xor call and ds subl add xchg sbbb jns lret pushl clc dec mov xchg je pop sbb jbe sbb sbb push adc in mov sbbl int3 imul hlt arpl (bad) dec stos shlb (bad) mov and mov dec cmpsb cwtl clc iret fldl add (bad) pop xorb stc (bad) lock dec mov add (bad) xor push loope cmc jne sub cmp (bad) or inc dec lock and adc sbb ret and xchg mov call test sub notb push roll pusha ja or pushl add add test mov xor fdivrs cwtl daa movsb xor stos dec sbb jne pop dec mov dec mulps js xor loopne dec popf jne test test out mov or sbb mov xlat mov mov or or xor aas inc aad ret ja jns push pmaddwd adc mov adc or rclb inc insb in mov (bad) and or (bad) mov movsb xor loopne loop daa jl add insb cpuid push out pusha fisttpl test xor hlt and rolb addl mov lret pop jmp ljmp dec add mov push dec mov adcb or cwtl sub and push push push push push nop or rol cmp adc pop xor bound mov adcl aaa scas mov mov out imul inc enter push inc movsl sub je test pop sub xchg cwtl pop iret jge and (bad) xor std dec fs test rcrl push repz mov cltd xor xor jge nop js inc sub rorl xchg mov iret stc pushf jl xor xchg ds add lret mov notl xlat jl push add stos dec sub rorb out pop addr16 sqrtps pop dec push mov mov mov iret test and xor or mov push mov lds fmull add push rolb mov mov js xorl cmp clc lcall dec cmp repnz pop or jl je nop scas sbbl mov or or movsb mov pop inc cwtl and test in call push outsl mov sbb aad ja jmp repz lods dec sahf push fcomps pop sbb in arpl sbb adc pop inc data16 lock sub fadds add cld push dec je pop xchg call sub dec prefetch clc mov or aaa and jno cmpl je or sahf jge add or dec js nop add inc adcb dec add scas sbb dec push push dec out mov add dec pop shlb dec mov cmpsl js add cmp fildl cmp cmp subb pop add (bad) push jl negl cmc lods stc push (bad) push rclb add sbb jge push push test (bad) testl in (bad) loopne jmp sahf or cld adc xchg dec pop mov mov inc loope,pn lods inc aam nop data16 jo icebp pusha inc ss sbb jmp aad or in add aaa call insb ja adc call xchg movsl xchg or or mov sbb pop enter (bad) std jae aam jo cmpsb pusha js js popa mov lock inc jl jl dec sub ss or adc ds inc cld xor fist jb mov cmpsb xchg jp pusha add xlat cmpsl call inc push dec add inc adc mov cwtl test lods (bad) push bswap dec or test int3 mov cltd xor sub and adc cmp adc pop sbb add xchg stos dec jle xchg mov fldl loop xor sahf xlat call sub lods sbb mov push xor pop ret sub popl add push lcall jb (bad) jnp dec movsb xchg roll add aad jno dec test xor rcl insb rcrl jb cmp adc xor lods out cmpsl push ret jne add sti adcl nop (bad) or sarb push lret fs stos or jne fisub rdtsc xor in inc push imul adc mov outsl add orl loopne fnstenv mov xor xchg (bad) fs dec lock loopne add aam sbb sub movsb mov insb dec or or and clc xor (bad) sbb cmp push dec test aas lds cmp jbe dec fcoms cmp sbb add sbb pushf adc add mov or les test ja add in dec lods jae cmp arpl dec and adc mov call popf pop sub mull mov pop lock mov (bad) sbb sub fcmovbe push lret push adc add xchg mov push add mov in inc pusha clc enter xor sbb fwait xchg pop cld cmp or dec mov inc std push movsl movsb es xchg aad add pop dec add out lea incl mov sbb pop nop cmp insb imul mov inc inc addb add in pop in adc rcrl sbb cmp cltd push cli inc xor or fmull and add pushf push xchg cmp push add xor xchg cwtl sub insb mov les push shrb sbb ja daa test and mov aas cwtl inc or pop fistpl push fwait sub adc flds add ds aam enter or sub pusha add jne mov popf or mov mov sahf (bad) out xor cmpsl dec jmp movsb out push repz clc adc mov je dec jl ja pop adc mov push sub sbb sbb inc and inc add daa out or repz push sbb sbb test add jbe cli add and shlb (bad) ja mov fidivl push mov or xor mov movsl outsb popa icebp decb fs rcl aam cmpsb daa mov sub mov dec cltd mov sub or xchg fcomp mov push sbb lahf mov mov fldenv dec fidivr sbb and dec and dec jns mov or lock pop std aam or and ja cld sub dec je mov in add push or push call push mov add popl lahf mov rolb xor aaa insb add jns push lcall scas cs lods in mov cmp enter and jns (bad) leave stc popa sbb mov hlt inc adc lret push dec fs and or add outsl fnop mov jo icebp subb mov out psubusw xchg rcrb pusha inc push inc xor adc mov or cmp push js or movsb mov sti xor fsubl adc jl pop and insl out cmp push mov push testb rcrl sub fcompl inc add shll cld push xor jo test fnstcw stc pop lock mov cmp push mov nop adc scas sub sti test aaa insl xchg fwait add push fwait jl inc jb add cmp mov pop mov movsb pop sarl scas ja or jmp cli sbb ret or addr16 enter int3 xor loope cltd add pushf dec mov adc test push cld add dec or or rcl mov pop sbb pop push adc int3 adc xor pushf sbb mov lret or rcr and adc cmp inc loopne imul cwtl dec xor mov or jg les sbb adcl and xor and add cmpsl mov ror andb xchg cli xorl xchg mov jl fcomps je sbb sub adc outsb push mov and add cwtl vandnpd daa test test addb mov sub sub minps add lea adc xor inc pop ret psubq xchg mov loop fsubrs mov jno in shrl pop test xchg pop (bad) add stc mov fs push and mov mov es rol or mov add shrl xor scas dec nop add adc test les jmp and scas ljmp pop jp movsl xor add dec shr inc test jp push cwtl clc push add bound aad or int3 pop cltd js cli dec test mov enter cmp lods subl sbb das add mov add dec cmpb les sbb add je loope sbb jmp or jecxz mov in cmp addb cmpsb imul les xchg mov adc sub push aad subb (bad) pop sbb add pusha add push mov jle iret cmc add or daa inc lahf out add or js cld into aas outsl xchg mov ret cmpsb aad xchg bound add imul sbb add fildl sbb (bad) xchg push cmp fdivrl xor jge pop or pushf xor lahf xchg or jl mov ljmp enter out pop push push sahf mov adc and add incb pop adc lds inc and inc xlat test mov out mov in inc pusha cmp orb lret push sbb orb push lcall pushf sbb xchg cmp mov and outsl push mov js add rol inc in ret and test into lcall movsl psrlq cmp les mov xchg and mov (bad) loopne jno add int cmp dec fsubrl add xor fldenv push (bad) xor sub subl decl push adc iret pushf push adc sbb shrb repnz jb mov pop sbb add shlb mov jbe adcb sbb arpl pop roll out mov add push (bad) lock jmp xor scas jo in rolb (bad) xchg xchg imul push lcall xor daa cmpl push rcl mov pop movb jl jmp pop les push cltd dec cwtl add mov mov or sti lods or push or add inc push sub xor jle sti pushf dec and sbb sub stc pop or add push inc mull mov rcll xchg mov daa mov loop test mov mov mov cwtl or pop out pop mov inc mov dec adc jg add lock jb inc test hlt dec xor inc cld push or pop fmuls sub pop pop mov and adc adc mov jecxz xchg inc fbld sarl add jmp push cmp test sub ss sbb or shr (bad) in ljmp push jmp mov std (bad) mov xor sbb jle dec es mov mov inc sub insb sbb rclb rorb pop jb in mov jle (bad) je jmp lods mov add ja add sti jbe cmp jl in out sbb or pushf inc or aam sbb jo push push popf push cmp les jp xorb xor call scas jecxz xchg pusha repz cmp add pushf mov int3 cli icebp call mov addl xor jl clc cld push out mov lea out sahf jp or mov pusha pushf push push jb test rcrb push add xorl scas pop and and mov mov dec add ja scas out mov pop fldl stos xor add stos dec test inc es dec call ds ds and les mov idiv mov dec dec and (bad) shlb lods mov jo loopne adc xchg sub cmp mov es cmp xchg mov hlt loop add xchg into push repnz inc mov leave testb add movsl les add daa xorb add dec cmp movsl xchg add inc out aaa in (bad) lock adc and mov rolb cwtl cmc push aam mov push jne jge sub in dec test movsb rolb (bad) mov stos add mov jb aas or pop jle dec sub mov insl pop lock cmc out lea loop push std jg add pusha addl mov dec add push call cld xchg fsts xchg jle fucom cmp xchg dec (bad) dec sarb test fcompl sub sub pop xchg leave or inc xchg fdiv cmp imul (bad) lods adc and out push sbb dec mov mov enter push inc xor hlt pop or fcoms inc or (bad) out jo ficompl mov xchg in rcll pop add add cmp jno dec sub xor (bad) movsb stos jl dec sahf clc (bad) cmc pop mov xchg mov add fbstp add imul pop cmp shr in push in xor and cld mov test mov sbb mov jbe add jg movsb jge mov sbb adcl cmp add xchg inc faddl sub mov ror popfw shr cs mov fimul cwtl les into jg test je jmp lea data16 adc jl pop pop fcom mov jge mov xchg jb adc jg pop je jae fsubrs dec add jmp push cmpl xchg psrlq leave pop (bad) xlat inc push das inc nop (bad) mov add push lods adc cmpsb sub fdivl cld pop je es dec add pop aam push aas xor dec xchg movl smsw adcl in loopne jg in loopne add popf xchg sti xor popa fdivrs sbb pop lock push add push sub add loopne mull inc das mov cmp psrld jo,pn aam ja shrb inc mov adcb dec imul dec or cmp hlt mov pusha cld pusha dec pop cwtl (bad) lock and xchg aaa mov andb dec mov jns (bad) adc dec push sub icebp or arpl js cmp jo cmp adc les lret fildl push xchg sbb xchg dec dec sub dec xchg sub hlt je mov imul jo stc clc enter push or loop mov pop (bad) je data16 mov nop add push adc outsl daa (bad) mov lcall adc int3 dec mov or (bad) mov nop add test movsl fsubl and mov inc lock je (bad) (bad) xor leave adc in sub call sub in pop stos sub mov out jg mov or stos sub and pop sub rol cltd sbb pop dec orl fsubs cmp add sbb jnp inc jg add popa add into dec ja (bad) xlat add cmp mov or adc adc jo loop jno push add pop insl inc test jns lock add xchg das notb or inc fwait mov daa inc in xor sub pop sbb mov movsb mov sub repnz or hlt lcall in out loopne cmpsb xor and xor pop jmp or add rcrl sbb mov xchg pop fcom lahf pop daa inc mov das stos add mov push cmp push and cmp jg repnz push push (bad) scas jge rorb add rorb sbb movsl imul add insb mov aam and or dec xchg rolb xchg lahf cmc scas lret jmp pushf or sbb jb cmp push inc cmp das pop mov in sub or jns add cmovnp adc mov insb xchg out push je pop push or inc scas andb bound or sbb in add cmp jb imul add shlb sbb addr16 and ret adc cmp popa in push fs je xor out jno call mov or push or mov imul adc popf into femms push stos cmp andl jl pop pop dec jp mov jns add lret jbe adc test movsb xchg jecxz xor jae loop push mov inc mov out sbb test (bad) hlt repz inc fidivr fsts mov dec push or icebp cmp xor loope mov xchg dec sub add lret xor fiaddl andb and mov outsl or mov cwtl sbb dec stc sub and dec push clc add inc xchg mov movsl fs out dec rorb into inc xor xor xor mov loopne loopne cmp cmp lods loopne popf pop add adc mov add mov sbb add popa je stos cld lock lcall sub sub shlb xchg mov sbb (bad) jbe jnp pop dec push and xchg andl outsb insb ret mov pop and add mov (bad) push adc push add stos adc and sbb adc inc add sbb pop repz and pop leave popa sbb in cs sub pop mov insl outsb sub mov lcall mov imul mov iret add push xchg sti imul pop dec xchg cld mov push icebp xor fadd sub sub inc pop test xorl dec dec insb pusha clc ret and xor stos les (bad) mov cld gs jmp push cld inc and jae or test jp test lods orl rcrb xchg adcl pop xor incb je or in mov pop inc or and stos or add adc out or cltd aad iret xchg rcr (bad) hlt add push out mov mov pop cmpsb out add hlt xorl roll aas adc mov xor test add or pop dec cmp rcl mov (bad) into or cltd and cmp fmuls dec stc add mov sub test ret mov inc addl xor jae testb xchg sahf or add and inc jo adcb lds mov sahf or add (bad) sbb mov call or daa or push push jno jne add (bad) (bad) pop shll pop push xchg fsubs add jbe pop (bad) pop mov cwtl or mov popa popa mov xor mov dec cmp inc ret dec pop insb add stc add outsb int3 cmpsb fcoml sbb mov xor cmp sbb push repnz out sub mov cltd test sarl or cld inc clc pop jecxz loop stos sbb dec push cltd repnz pop ret cmp xchg adc iret cmp push (bad) ja pusha movsb xor xor jmp loop push xchg out movsb add pushf xor test fs or adc mov ret xor mov inc add dec loopne subl mov aas sub or in mov push cmp xor sar cmpb (bad) hlt or js add aad mov ret shrb (bad) ljmp and or sbb test mov xor pop js hlt xor cwtl and mov cmp jb and adcb push insb adc sub mov xor je pop jecxz adc sub call mov rclb sbb or push repnz xor adc std lock fsubs loopne add pusha or pop out insb iret cmp cmc fldenv lock and in fmulp cltd dec sbb xor dec mov inc (bad) jne dec popl das stos insb into call and movsl mov pop ja push add mov or sub sub adc mov add clc adc call mov adc xor (bad) lret push add scas test loop inc outsb mov mov clc shl adc imul jnp push jae std mov in push push and sbb dec push add (bad) mov rolb xchg and lds addb push pop aaa dec ret ds cld push push orb push cmpsb lds pop pop pop gs cwtl add xchg mov xor les mov flds jae push mov les dec inc or push aaa fildl inc jmp enter mov pop or xor shlb sbb xor (bad) std add mov cmpsb or pop pop push pusha adc sub and xor ret sbb xor inc jl push pop aam mov inc je mov sbb pop int3 jno or andl rcrl sub loope test lcall fdivr popf add xchg stos adc fs mov pop mov lcall ret rcll fs sbb add add mov inc dec inc test jne pop incl cld test test add pop enter imulb and js and or or xchg pop or or mov mov fwait add movsl rorl scas jbe push cld aad pop push xchg dec ds mov xchg pop inc xchg loope adcl int3 jbe adc inc das mov jno pop (bad) add cld jns push mov scas add dec lds imul add add xchg adc insb ret fs and int sbb clc cli hlt je add and adc (bad) aad push test shrb or push test ss inc add sbb incl inc out mov popa ret or lods pop movsb rcll (bad) in sub cs sarb add orb in adc lret sbb (bad) negb call push rcr lea sti cmpsl addr16 adc jmp sbb mov or ret mov int3 cltd cwtl mov faddl mov loope xor push daa clc dec aas test jns fbld adc jbe ficoml xchg and loop pop iret add mov jne faddl scas xchg and add xchg xor in xchg inc out add add xlat and and pop out rol pop out mov (bad) out sbb mov adc ror in xchg aam enter clc jecxz pusha test ret (bad) mov xor cmp mov es nop or or daa lcall and test xchg cmp inc or bound xor jo and testl fucomp mov int3 mov mov rol push xchg xchg (bad) mov dec out inc dec mov or pop out adc pusha cltd aam test xlat jg pusha push adc fwait mov std xchg inc xchg jns loopne cmp xor jg xchg dec inc fcom les in xor imul jns les test add push outsb mov (bad) jnp cwtl int3 cmp ljmp add inc mov pop mov addr16 dec xchg jp and pop sbb add push add push and (bad) jo in pop fcomps frstor xchg leave in popa aam pusha sahf dec xchg fs xor test mov ja sub scas mov push add lock mov lock imul add sbb call call (bad) rcrb jp pop push push cmp rolb mov jecxz or cld fs xor inc add mov push push addr16 dec xor jno add popa clc dec stos int xchg push sbb inc or fdivrl push fcom sbb sar iret mov xor cmp mov jmp call push aas xchg dec ss faddl add loop fstpt pop dec push cmpb xchg cwtl jno xor sbb lcall insb js inc loop pop add fcmove dec int3 and int lds pop push mov mov mov adc fs pop cmp bound mov push inc jge data16 sbb rcl bound jbe nop inc outsl les js out sub jecxz (bad) bound pusha add mov add cmp andb or popf enter add in outsb adc jae xchg test js dec aaa ret rorl enter movsb push scas sbb ljmp pop pusha add idivb jecxz test insl xor xchg enter adc mov pop sbb cmp addb mov pusha fsubrl lret aam add add in cmp data16 cmpb mov mov cwtl je add dec lret nop sub (bad) cltd data16 sbb test pop push (bad) pop outsb scas inc mov mov push int3 pop enter aam xchg rclb push xchg cmpsl sbb sub fwait popa xchg adc or adc fs inc js push xchg push shlb lock dec lcall dec mov mov aaa bound mov add int movsb mov stos or cli add add test adc or pop inc cmp cs push add lahf mov cmp stos call pop or rcl mov ljmp test fadd popa cmpsb push repnz dec dec mov fadds xchg cwtl test mov xor inc dec sub cmp sbb movsb rorl sbb pop les (bad) push sarb sub jae add sarb add jl and add inc mov jo pop pop mov push clc and andb inc out jl mov adc mov sbb or out enter movsb and lret pop dec push data16 xchg shll cltd mov gs and mov inc cmpsb nop and xchg add leave (bad) lds out cmp add mov call scas bound imul xchg je xchg lods pop out push js das daa sub push pushf inc or jmp pop and aam subb xchg mov in xchg aas jl xchg repz jne mov add lret stc mov out xor dec roll movsb mov inc mov insl fsubp and cmp xchg add push outsl stc inc jo out test sub and rcrb push dec cmpsl pop jmp pop mov push call inc dec cmp movsl fs cmp inc mov xlat rclb adc pop adc add xchg or dec ret dec rolb fadds out fist mov and cmp and outsb mov enter es pusha inc (bad) fwait xchg js mov enter sub jb pop mov mov mov test xchg js pop mov imul jno,pn aaa mov xor adc mov cmp sub mov pop lods push (bad) pusha enter test add adc lcall mov and pop inc pop aas (bad) popf insb scas pop pop in push clc mov cmp add stos dec fisttpl push push sbb dec xchg xchg lock (bad) dec adc add imul pusha test daa sahf mov cmp addr16 loopne insb vucomisd xchg ret add xor pop mov in cmp and add inc fdiv xchg push int3 add aas mov adc sbb sahf jne cmp push outsb jle outsl leave and jnp sbb add aad and imul test push dec sub dec adc adc call cltd outsl xor push int3 inc mov xchg lahf sbb or adc aam mov mov mov add jp push mov inc les lds out xor pop cwtl push jl (bad) pop int in enter push repz add fiaddl nop bswap test mov fidivr or rcll and int (bad) sahf xor mov add inc clc add add lods sbb cmp and icebp cld mov sbb xor xchg scas inc or dec mov add fcomp outsb repnz push xor jae xor adc test cmp xor push or or nop cmp nop mov dec test mov and and imul rcrb jnp ss push adc outsl xor jge xor push xor pop adc jbe int3 and andl lret enter add int lcall sti push and jl ljmp js add cmp sbbb add mov sbb sbb or (bad) icebp add mov movsb add lret mov je (bad) sbb pusha mov xchg aam add rcll dec mov addb cld addb lret dec lock inc sarb and lock mov mov and fcmovu push hlt je pop mov adc adc sbb movsb das inc adc xlat cwtl mov and adc mov or mov sub inc dec pushf pop add pop push psllw adc cmpsb data16 inc jp lods pop sub rorb add cmp loopne pop es jl xchg mov pop int aam push pusha push jnp jno cmpsb add adc push cltd pop pushf lock or mov mov xor add in push in xchg xchg hlt mov popa pop pusha loopne out push pop sbb sub xchg bound mov mov pop or lods cli add pop mov or mov (bad) cmp jle add mov pop out xor leave aam add jle call cmp xchg sub adc loopne cmp shrb std js sbb dec cwtl xor dec jae ret sbb bound clc adc mov cwtl into (bad) nop pop mov xor xor pusha cmpsb cwtl sahf lods push (bad) jg aas jo cli cld (bad) pop add lcall rcrb inc je dec (bad) aam push add sub mov nop adc int3 mov adc mulb mov movsb inc or mov test pusha (bad) daa inc cmp dec outsb xlat mov ret sahf dec (bad) daa in jo clc pop into jge aas ja jo out call (bad) mov xchg xchg dec nop cmp push imul xor in into mov js or push rclb sub test xchg popf xchg js enter leave xor insb mov lret and xchg insb (bad) dec cmp daa lea das add inc dec mov inc enter popa test and xor mov sub jmp sbb repz loopne mov and cmove mov mov jmp pop cmp mov int3 pop mov mov je adc subb inc mov mov mov sbb and push cmp nop sub dec rcrb inc decb enter lahf dec out clc or push sub sub jns xchg daa imul mov and sub sbb leave fsubrl shl mov mov je mov popa add leave (bad) adc and sbb add jns xor pop mov mov and ss enter loopne xchg int3 test and ja xchg jno push js jl add push xchg ljmp clc out push mov jge,pt pop sbb dec pop push pop push pop or dec inc js loopne data16 add sbb cwtl adc push shlb pusha jno add push sub inc mov mov lahf sti cmp sub int3 test rcll add adc leave adc sbb loope dec push fcomps (bad) jo sub xor and jne outsb cmp rol subl dec cmp dec or mov mov out xchg jmp inc aad add imul dec nop call outsb mov int3 imul andl imul xor aad test fsubl daa sub mov fwait enter mov leave sbb test adc mov sub iret aaa add sahf call sbb cmpl mov iret cmc cwtl andb and add loope xor inc test cmp fnsave loopne sbb adc pop cmpsl inc nop jmp xor aaa xchg add icebp jmp pop or sbb test inc xchg sub add mov ds mov (bad) lock or and mov mov add jge xor add (bad) xchg pop lret mov loopne pusha adc rorb outsl das pop add mov es jno movsb cmp in imul imul std mov (bad) jbe fs out mov imul xor pop mov aam or mov movsl movsb movsb jno mov or and inc inc push jmp ret adc loopne add enter movsb inc mov adc daa sub les mov push sub icebp loope or test aam or pusha jl je call out fldenv (bad) and (bad) rolb clc ja gs pop mov jl dec or (bad) cmp mov pop and inc (bad) bnd into test mov lods or or dec shll mov add in out ja jb sub push mov cmp xchg mov lock icebp adc pop or xchg out xor nop sahf sbb push mov mov mov inc push pusha and xor cwtl adc pusha adc pop adc (bad) ss pop xor sti sarb mov and push mov push ficoml pusha dec pusha mov and ret (bad) lock cs mov add sbb pusha push inc bound jno and ret lds cs lret sub or cwtl cmp push in jns add cmp out in fwait stos bnd inc xchg out or (bad) push xchg cld jb inc xlat mov insb inc pushf jp aas sub cmpl mov xchg mov test push jo popf cwtl hlt and lea imul test push adc inc lock sbb jecxz mov inc in push pop lea pop cmc (bad) mov mov imul push subl (bad) mov orb sbb inc pop sbb les int3 add lods mov sbb or mov mov insl push ss adc rclb jp jae mov pop mov loopne std xor arpl cs sbb inc dec pusha (bad) mov dec lcall test sbb addl or aad inc mov test xchg sbb mov mov and add push cmp hlt add enter jbe in and scas shrb mov jnp (bad) (bad) add repz or lock or xor and movsb add (bad) icebp popa (bad) jne inc enter xor cmpsb stos (bad) hlt mov sub mov mov lret mov or fiadd xchg (bad) call push in cmpsb lret jl,pn jl add repz push xchg fsubs cmp (bad) test mov hlt xor push inc dec pop adc inc pushf mov fxch adc movsb or jnp mov push push rolb aad mov out loopne aam je cmp sbbb sti dec push fsubrs dec pop mov loopne cmc int3 hlt mov fadds pop addr16 enter and jl,pn jnp in and dec iret inc pop xchg or and fwait push push out nop cld inc (bad) mov push ds cmp stc scas dec int3 sub push xchg push cmp test cmp cwtl mov push push sub and imul sbb mov add mov xchg push ds adc clc xchg dec and aad jns (bad) sarb push popf cmp icebp cmp pop sbb outsl repnz hlt cs adc mov mov popf and push sbb and gs cmpsb mov pop addb dec (bad) lea js stos inc xchg mov push inc dec dec jne arpl mov xlat scas add jl xchg push jb sbb (bad) dec nop or adc and cmp mov adc push xor pop or and xor push mov dec in and je adc scas into lock xchg es push nop dec clc test pop or aad (bad) fsincos inc inc inc js pop add dec out xor sub or add sub fcmovnbe clc mov pop mov stos (bad) shll es in push or adc jl or cltd mov mov jp inc add inc popa pushf jg lret aam mov or pop xor add cltd mov mov mov lcall and ss ficomp (bad) xor (bad) adc (bad) or in inc rolb scas scas fldenv sub add push pusha test and cmp dec js mov stos fs push inc cmp add mov loope pusha mov adc mov sub jns and push and or mov jge push push pop sbb push push nop insb and jae fnstcw lods bound pop lea subl gs lcall push adc pusha rcrb mov mov push mov fstps jp shlb loopne lock pop push ds jl mov sbb and pop loope mov adcb int3 sbb loopne cwtl dec add int orl jb xlat pop add loop imul aaa repz fs pop sti jae pop add xor ret inc in inc in inc es xchg hlt movsb inc inc push and adc push fstpt pop add pop popa jmp int3 stos roll scas lret enter mov xlat and xchg cmp scas push xor enter fwait lock dec sub or adc xor push adc leave cmpsb js add stos cli lret xchg sbb in sahf adc and in mov inc xchg push pusha je mov andl cs inc lahf or pop add lahf dec lret add mov xchg inc testb xchg mov js inc test push test fwait or or pop das and xchg add imul or jl xor enter test push jb lods cs cmp sub mov and gs mov mov mov dec rorb test je orb mov mov lea push sub popf mov scas add (bad) pusha pusha cmc sub (bad) mov xchg and dec lea pop iret or push pop add adc add pop mov xchg or jno and in add movsl sahf jl rolb sbb jecxz push and mov adc cmp or fs pop sbb push dec shlb jmp push sub cmp (bad) sub jl arpl insl cltd pushf ret daa stos adc xchg sub fsubs sub rorb push mov xor js fistp add test push sub and fdivs xchg push sub xor mov push fwait nop mov adc cmp mov in scas imul dec and jl lock dec pusha pop stos sbb push cmp sub imul inc mov imul add sbb sbb pop jecxz loopne imul cmpsb das fstpt mov or xchg mov pop xor mov lret dec or xchg test adc cld jecxz or sbb jne loop push push (bad) xor add inc clc fldt pop pop lock xchg push mov push xchg test inc push les adc sub and (bad) jb js fcomps enter jp je mov sbb test add inc dec in xor jnp and hlt xchg mov stos in ret push repz jo inc jnp or test adc fs xor jo xor adc hlt mov adc push mov add scas cmp mov cmp sbbb and jge rolb jne out std into fisttpll pop mov sbb orl add stos mov or repnz push and cmc add fisttpll in jge rolb cs sub call and cmp (bad) lret (bad) and daa ss orb int3 xor dec lret inc mov xchg add fcmovnb mov dec inc add jbe,pn sarb std jae jmp xor das mov lret push test (bad) in popf jo cwtl lea test aam mov jecxz mov add cmpsb jecxz scas aam or mov jg and stc inc dec cmp cmp test (bad) test dec xor rolb cmc dec push add lret popa fs test add pushf loopne lods or hlt pop add (bad) fstps dec dec push rcrb xor scas enter push sbb test or repz mov movl test xor cli mov sub inc cld shll mov aaa pop adc into push js sahf sbb or inc jl adc test jg add jmp cmp mov sub xor xchg jbe dec sbb jl addr16 mov mov and fstpt gs loope mov xor cwtl cmp call mov in fwait or inc push ret add mov jp orb aad adc mov mov rolb add dec cmp add test rcrb xor xorl cltd pusha xor mov test sub movnti shll pushf les repnz jl xlat pop je dec push or les shrb es mov mov aam movsl push cld pop test lret iret fwait pop dec sarb loopne scas (bad) je lcall enter cmp movsl stc mov mov leave and or and sub lds movl cs push jl and rorl pop xchg adc and or xorb push jno inc adcb xor nop add xchg mov mov mov jb sub mov repnz incb enter dec lcall rol loopne mov jecxz and mov scas mov dec push sub cmp inc and pop jecxz inc mov lahf sbb and pop nop fisttpll (bad) sub xor inc pop inc nop je pop lds ror add shlb jnp dec insl add or add jl jecxz jl mov faddl mov mov xchg xor pushf push nop lock mov mov clc xchg dec add lret add add gs lods clc cmp test add cmp inc nopl inc loopne in and add dec and test or xor mov fdivrs inc fdivs cmp and push ds loope je mov xorb adc jp mov xor add ret adc push clc jo les or xchg dec dec xchg or mov lods and adc xor ds xor xchg xlat jno rclb test (bad) xchg cmp inc setl fnsave mov or and fadds add xor mov sbbl dec sub jo mov mov lea adc pop (bad) leave in adc hlt mov push call dec and add sar aad sub push sbb js mov and in stc add add jp xlat dec arpl js fwait hlt add xorb lcall adc call xchg and lret mul jg out sub sub adc lcall dec cwtl aam andb int popa inc cmp dec loop aam sub xor jo leave or lock mov sub cli sbb mul pop cmc insl mov cmp pop dec push cltd test call and jecxz,pn add in cltd or sbb mov sub fsub pusha loopne dec lcall and xchg pusha mov and sub push jg xlat iret aam cmp rolb scas jl test add (bad) aam mov sub fs iret push mov or cmp into push mov pop adc inc cmp jl pop pop mov arpl and fnop sarl add loop aam stc xor sub (bad) popa add sbb dec mov sub mov in aaa test cmpsb rorb or mov faddl xor inc fwait jge fxch or and daa push aam insl add pop add rcrb or or sub mov add and ljmp fwait rcll sbb lea sbb icebp adc lret mov add xchg cmp xor push xor mov xor cmp sarl mov test mull cltd or jo pop sti mov (bad) aaa dec (bad) xor shrl jge sub lret inc into rolb dec jae mov xchg push adc pusha dec sub sub mov lods cs bound mov test jmp push cmp xchg popa add (bad) sbb test sub test adc icebp xor inc nop int cltd add pop jp cmp mov sub xchg add jmp pop or inc mov or jo lods jno mov mov xchg xor mov fistl inc cmp mov test lock jl xor scas dec pop and mov (bad) mov pop sbb cltd sub mov push popf sbb xchg fstps dec test xor loopne dec xchg test mov xchg and mov xchg cmp js inc push movsl mov stc add je daa mov adc adc out aas adc loop and pop ret icebp pop add mov xlat add loopne xor sbb cmp popf inc add addl add rcrb std or lahf add mov add movsb (bad) sub outsb xor stc jge in popa mov bound inc pusha jg or sbb add cmp pop and mov xlat cld and pop ret lds pop jle xchg pushf or jnp insb cmpsb push in out and mov dec add sbb addr16 rorb inc pop mov add jbe and aas and dec sub lcall lock enter int add jg cmp popa fdivrs pop lock (bad) hlt scas dec iret mov ds add call xchg test inc xchg lret push dec cltd mov je xchg (bad) clc and adcb pop lcall push lahf pop gs les aad mov sbb cmp ds sub mov arpl or push unpcklps xor add pop das int3 cmp movsb jecxz pop push cmp cld into push (bad) mov fwait jo pop movsb push loopne nop enter cmp push xor push and (bad) pusha sarb test aam cmp or imul inc movsb mov (bad) mov and xor ret sub or or sti mov and loope jnp and jg adcl xor (bad) cs adcb int3 pushf fcomps loope out cmp cld or add inc mov pusha movsb mov fdivs adc mov pop mov mov sub inc ret sbb and lea movsb insl bound pop lods and cmp add xchg call out pusha pop fist push leave push xor add xchg lret mov mov xchg loopne adc push xor adc dec jne cmp add mov mov stos cmp sbb in ror jp or or lods add loopne int3 jbe mov enter mov pop or inc pop cmp dec pop sti add data16 ret mov out rolb lret (bad) pop sbb push and pop cmp cmp sub arpl adc test pop add mov lds (bad) mov cwtl (bad) inc mov push rorl lret jl movsb xor add sbb test xor mov ljmp inc adc call mov inc xor addb lock and stc clc in add adc pusha pop dec pop and idivb ja mov out loop dec push pop or dec push and push or add int3 adc lret xor sub and dec push and adc nop xor dec xchg sbb add int (bad) push repnz dec mov mov leave and nop push popf add xor mov add adc divl add adc lret addr16 mov push rolb loopne add sbb adcb dec pop pop pop das imul cs pusha fildl lret dec inc je ret aam mov inc loope inc add mov pusha adc xor push mov mov jmp or cli psubsb ljmp sbb out xor call imul or and test xor xor and sub mov mov or mov cmp lret js shrb ljmp push faddl test mov lret push sbb rolb add mov movsl push in add cld sti out or push dec adc mov popf sbb nop dec stos enter adc add pop lods popf xchg out add mov or and mov mov xor add gs and pop pushf inc ficom out add inc in xor push and pop lea sbb pop sti add mov lock add fwait sub dec clc cli add outsb dec xor faddl mov jecxz mov or mov or or and add jb pop lods dec dec jle xor mov pop cltd sub rol xchg ret adc add fbld (bad) adc xor int adc call std jmp or and in fwait adc rolb jmp insb dec cmp mov popf in sub add nop outsb insl dec int3 (bad) rcrb aam sbb sbb outsb dec aaa pop sbb push loop and mov push fldl clc mov xor lock test sbb clc and add idiv clc int3 push add mov stos cmp (bad) repnz inc xchg nop cmp mov cli cmp add sbb fldl jbe jae (bad) push jns cmp fwait add mov add fstl mov hlt jle std ds roll adc mov loopne fildll lods push jl inc xor lods scas loopne sbb add jb or jno push arpl imul dec mov add pushf enter mov and popl or mov xor and adc ret mov arpl fwait loopne mov xor mull add push lret shrb pop aam dec add fidiv or dec loop mov pop mov push push xchg cmp in incl sbb ret cltd mov aad cmp int andl lahf and hlt jno push arpl test inc add cmp jecxz inc xor or loop ret into pop xchg mov int3 mov sub (bad) (bad) je jl fsubl cmpsl add xor mov imul scas xchg xchg addr16 (bad) gs imul add jge or pushw mov sti or out es adc and xor popf aam out daa adc outsb pusha bound fist cmp adc and jmp lock sti addb stos lahf rclb (bad) cmpsb lock cli daa or add add push adc mov mov call pop mov out scas (bad) cmp lret add xlat pop enter fistpll add (bad) push lret dec jnp dec cmp mov sub inc (bad) or inc xchg std lcall sbb mov dec add dec xchg mov ds jne push je inc daa pusha pusha xor add xchg and fdivp iret mov std push popf inc mov push inc dec iret add mov sbb scas pop sbb in xchg test into add push jl inc out xchg jge cmp pop popa mov rorb test inc or push fs fldl nop jno mov bound (bad) inc (bad) adc adc xchg or fisttp sub mov xchg push push jnp mov sarb (bad) dec adc in enter adc fs std (bad) sbb mov mov packsswb sbb or std lahf adc scas pop pop mov pop movsb enter pop add hlt cwtl jno xor mov add bound or or sahf mov mov or xor rcrb add and roll test sub stc mov js mov dec pop or xchg inc adc fisubr inc mov mov inc xor sub push or jnp mov lret xchg cwtl sub (bad) enter jo inc clc mov mov xchg inc inc cmp movsb pusha (bad) xchg mov pop pop add push inc cmp adc orl cmpsb ja sub cmc js mov jo cltd movsl leave subb es mov cmc add and inc aam push push cmc aaa (bad) popa orl cmp sbb fs push add jecxz mov cmp enter mov bound dec pop movsb sub mov push pop jnp mov xor adc test sbb xor (bad) mov aaa inc cwtl shlb or gs push pop add rorl ret push repz inc fimull dec (bad) mov cmp cmpb pop add (bad) es test sti and mov adc int (bad) cmp adc test outsl test mov or mov (bad) test mov clc pusha test out or popf test and and (bad) and lds ret inc mov clc cld add test mov sbb or adc inc add pop inc mov sub (bad) jae (bad) ss sub or pop repz mov mov sbb pop cmp inc mov sbb aam mull adc popa ror cmpsl xchg cmp pusha mov stc out jl jp mov cmc mov aas cwtl loope in xor sub sbb nop or sub in add repnz call stos xor rclb lock add xor xor add or add iret nop mov xchg nop sti lea adc cmp dec (bad) movsb pop jbe out mov dec adc enter lods cld ja sub std (bad) (bad) jo mov inc ret adc dec adc add cld push je stc test and mov shlb das fs call sbb nop ret iret inc scas add out sub push pop sbb mov daa fs aam dec xchg js sub insb pop (bad) movsb pop aas and push out dec add test addr16 test stos xchg repnz xchg jo es mov cmp mov popa cmp mov mov jg dec lcall adc pop or inc iret jo inc adc add js dec add cmp rorl inc mov adc mov mov sbb add aad inc mov mov out inc add pop cmc test add dec lods push sub add into xor mov xor movsl xchg sbb xor mov mov call int pop cltd pusha or out test jnp dec std and and sbb mov push and adc inc cmp (bad) cmp (bad) in mov fadds subl ret mov iret sub and ret imul or mov movsl xor xor (bad) xor pop jp adc xor (bad) jns sub rcll and popf call xor add repnz bound in xor cmp sbb dec mov sbb rclb cmp cmc rorl aaa iret xor stos fdivl adc sub rclb add int3 mov nop pop jbe (bad) inc leave (bad) lea mov mov jge sbb out enter xchg bound push mull add es or pop adc in mov push (bad) dec dec or mov adcl cmc add leave insl popa dec mov lret mov dec je cs sbb mov inc repz mov xchg or xor ret fcoml push je mov test scas or xlat into mov out mov nop add mov (bad) loopne mov pusha es sbb mov stc inc sub ljmp dec inc cmp mov cmp test push or dec test pusha inc jno mov subb out push cmp aas cmp add ror mov mov sbb push enter mov incl mov adc pop jo dec cmp push je cmp cmc cltd mov mov inc adc cmc inc dec cmp push negl or adcl cld dec sbb pop lock pop popa sbb and jb xchg test xchg jp scas cmc adcl call inc lock jg and and or test call and fcmove mov imul popa and ljmp inc test and adc xor mov and and jbe and movb aaa loop das repnz xor std ret cmp ficompl icebp cs mov hlt dec popa and dec xchg adcl xor ret add cs push inc inc cwtl mov adc (bad) jl inc add mov popa fnstenv pop gs lret xchg loope (bad) mov inc cwtl cmp mov cmp sbb mov push mov and pop clc inc adc f2xm1 adc aas jecxz pop rorl mov inc xchg fs (bad) pop adc pop or adc mov or mov adc jg test popa (bad) sbb mov add mov (bad) xor imul clc cmp mov lcall in xor mov in sbb outsb xchg dec add (bad) xor (bad) adc nop negb sarb add (bad) mov add test push add data16 sbb xchg cmc add mov cli cwtl pop int dec sub arpl push loopne stos jo adc les or inc and push rcrb fmull adcb lds jno pop add dec movsb arpl jae sbbb bound mov mov jl xchg xchg sbb pop cwtl fiaddl lret insb add adcb mov jbe mov cwtl popa sbb xor sbb or imul lock push test and or or in and call outsl mov push inc fldt cwtd mov push loope,pt cmp inc (bad) clc mov or adc cmp inc ret sbb xlat fisttpl fstpt sarb insl add lret mov subb stc lock cltd or dec xchg inc mov inc sub add clc ds dec and cwtl mov lahf or fdivl in sbb fnstenv mov xchg adc daa cmp add test mov jg inc fwait dec mov xchg (bad) loopne mov and and clc mov fnsave and sti inc les fisttpl loopne shlb pop cmp and sub sbb inc mov add or ret sar jnp sub jns mov mov mov adcl xor add and xor loop,pt and ret in lds fadds insl icebp xorb and pop xacquire push fdiv xchg sahf mov sbbb jl shl gs je dec inc mov add jp sub js or mov in and sbb mov cmp xor inc fcompl sub jne or mov cwtl mov pop (bad) out mov xor arpl jae dec fadd or add or popf lret xorb push mov push fwait push or pusha out xchg xor add xchg nop xor out movaps popf addr16 or lret loopne arpl outsb add in xor xor rol or pusha dec xor (bad) adc cs xor in bound add pop loop int3 nop imul pushf push xchg (bad) xor arpl shll in daa es stos faddl loopne push popa std orl ret sub in pop inc mov aam inc sbb xchg push xor call pusha and cld sbb nop adc movsl or inc call jnp add cmp jne insb xor incl jmp xchg adc mov rcrb andb inc lret jns add ss sbb addl xchg adc lret sbb shl add cs ret test fs stc sbb fs sbb aam cmpsl movsb dec dec sbb ja push les mov std ss out add ret add nop test addr16 sub push mov mov mov js arpl mov loop and aas sbb mov rcrl and mov jle (bad) (bad) data16 aas xchg iret pusha cmp repnz cwtl add adc and ja mov dec inc cwtl stos add or add pusha push mov mov or in cmp out fwait sbb leave sub fstl scas fisub mov inc or or xor push addb sbb fmull pusha out cmp loopne and andb in inc jl ds jnp xor add sub xor sbb xchg dec sbb and loopne lahf js aad pusha pop inc and arpl and sub and int lea inc adc xchg push or adc and xchg pop jbe or aam jecxz add ja pop jbe push mov lcall and mov lods pusha mov xchg xor lret sbb fldl dec test clc (bad) into aas fildl push ret xchg add sbb sub nop cmp jo (bad) dec cmp pusha cmp lds push pop jmp cwtl and lods adc push push pushf test mov xchg pop add add pushf arpl mov dec cmp ja pop inc jno add mov sub mov sbb add dec out push int inc test mov negl pusha test out cs aaa push adc cwtl adc add out scas add test mov fcmovne in and popa or lret mov inc es add xchg xchg cmpsb adc pop add or adc sbbl popa mov pushf test mov cmp mov hlt not mov sub adc sbb mov outsl jg and pop pop xor jae lock sarb add cmc dec rolb leave sahf psubusw rolb inc lods push pop cltd loopne pop pop sbb push or and push add and add push jno bndstx scas dec inc add add or xchg or add es dec cmp inc or mov jmp or add and xor mov test imul cmpsl xlat pop (bad) fidivl xor cwtl andb adc icebp dec fmull je,pt cli fbstp popa jmp pop ss scas add mov subb sub ret xchg push jae stos jbe xor adc add pop cmp jl fcmove push inc adc dec push fnsave add pop add leave push cs or icebp inc loopne cltd ud2 pusha pop xorl dec adc xchg cmp mov mov into dec mov test add sbb inc aam add (bad) mov dec out add ljmp jae xchg sbb add sahf add inc inc out or jg jmp ret pushf add scas lahf cltd xor ret or pusha clc mov add cli scas int stc imul and or (bad) (bad) push test jge decb push movsb packsswb pop out add insl js (bad) enter dec dec or sub add int sahf loope and pop push test dec pop push xlat mov call add popa stos mov imul enter insb mov and jl (bad) add jge das call jno mov in mov fwait inc add jns sbb add xchg les nop dec inc scas and cmp push stc adc adc stc mov dec lods push stos mov or mov or pushw or fsubrl adc mov fwait pushf mov sbb enter faddl mov add lock sbb xrelease cli popf or gs fdivrl pcmpeqd int loopne dec lahf inc and test pop sub mov loope mov dec push cli popf fmuls xor or sub outsl mov (bad) pusha sub jo stos push je add ja pop subl into (bad) jb or inc mov and aaa mov jmp sbb std pop pusha jno xor in xchg or pop xchg push out ds and and insl loop stos lock and outsl repz out pop and jecxz pop mov push jge les dec or mov test stos test jae aas sahf dec dec int fcoml inc clc outsb test das mov sbb lock mov xchg rcrb movsl idiv jle mov dec nop js loop inc stos int call ret mov xchg cmp or dec stos shll jno int mov push jne add aaa sbb lret or fidiv movsl ss in (bad) mov add lcall push out xor pusha popa push movl mov int3 jno dec pop mov or inc out into pusha or (bad) xor adc notb sarb dec dec dec xor push inc xchg jnp adc or test ret pusha xor jne ret cmpb jno mov test loope and fcoml add repnz mov dec cmp add inc xchg and add cld sub add mov push sub std push sub psraw add pusha jmp xor loop push shll mov orb fnstsw pop push or cmp mov test jno scas pusha xchg fdivr add and or xor int (bad) push add add mov fidiv push push push xorl fimul jbe add fwait sti in mov push sbb movsl and jns mov fmuls mov add mov or add pop push jo xchg and gs shll mov cltd sbb fs gs cmp mov dec jecxz jb rcrb cmc lods bound inc pop jmp mov xor les mov (bad) mov mov xor movsb mov cmp xor add mov rorl pop mov lret negl dec out pusha adc pop repnz loopne les mov or shll fsubs dec mov les jns imul mov xlat pop jl gs mov and push cwtl xor push pop or mov adc (bad) pushf xorb add aam in fdivr js add push lahf stos jbe xorl cld test cmp aaa or subb pop xchg stos jle xor lods in test negb mov push pop adc pop xor push or push and jge jnp shlb push incb and fcomp push popf repnz add adcl add xchg test xor mov add add out push xorb aas add inc or add dec xor loope jmp jge cmp or lods add mov ficompl leave stc stos push xchg sbb test mov pop xor rorl je dec mov mov shrb add add mov xchg xchg roll (bad) lcall sub add jge jmp orl inc add incl aam and dec pusha inc push add xor nop sbb and mov loope inc lds cmpb out popf sub cmp sahf push xor xlat imul push xchg scas hlt jmp lret add xchg dec push sbb add (bad) jae dec pop cltd hlt ret les add mov mov js xor loopne repnz xchg jns lods std mov out dec bound out into xchg xor inc adc xlat dec in xorb lods push pcmpeqw sti es lods jl daa test sbb (bad) or adc pop inc sub adc cmc jne add xchg sbb sbb sarb mov inc movsl or jno cltd sbb (bad) pop cltd xchg push mov enter xchg pop fs rcrb xor ficomp (bad) sub mov sub jno add push and add mov bnd mov jnp inc sub inc mov cmp push lcall xor xor test inc adc jnp sub dec in mov cmpsb leave add jecxz xchg add xor adc mov test jns push sub add xchg fisttp aas jmp push ret and dec xor sti inc inc or data16 and add inc mov ret xor mov pop pop test enter jae xchg dec and push dec sub ds mov inc sub stc test adc xchg jmp mov nop and cmp and test and ficom mov jnp (bad) loopne pop push (bad) xor push lds lock sti jmp jo and add sahf test jnp or sbb xor je or scas pop enter add inc cmp fwait sub cltd pop add test adc mov xor mov add xor or pop sub ret or sbb test outsb int3 pop or shl jle jnp add jo push mov cltd flds dec lock fdivs aam add mov fwait pop insl out cmp inc jmp cmp (bad) mov jecxz (bad) jne sub sub sbb cmp mov add dec mov data16 add ja in xor add sti fist pop adc and xchg test push rcll sub and repnz mov mov icebp mov push (bad) stos mov hlt fwait mov mov dec shlb (bad) leave pop add inc loopne or clc nop mov cwtl pop push mov insb mov les lds ret sahf and test test pop arpl xchg es ljmp inc fist pusha pop sub jns add lods stos jo je incl addl mulb int3 cld cmc xchg cmp and xchg add lods adc test and adc lcall xchg cmp xchg rolb sbb orl mov (bad) dec cmp mov cli andl fmul pusha sbb test (bad) push int3 sub cmpl xor arpl nop popf jnp or dec test inc rcll ret jae pop mov lods xor add mov add add jle adc popf sub test xchg sbb mov cltd daa lds inc enter cmp push push test jl jl pop dec and (bad) test lret or sarb push int3 nop inc je js dec lods dec lods stos inc pop add clc push cs mov mov push add sti repnz and sub sahf push insl add and mov push sbb (bad) xchg dec add pop xchg dec push push pop lods or popf test fwait lods xchg adc or inc sti adc pop cmp iret out mov (bad) add inc add ljmp jg pop adc mov loope rcl mov cmpsb icebp faddl adc stos ljmp (bad) adc lods rcl pop jo nop cmp jle cwtl call add das cmp add push add sbb and sub add dec ret ret sahf cmp int3 pop nop add add cmpsl sarb loopne add or insl jnp pushf or loope cmp jbe mov sub sub stos sbb adc adc mov xor movsb xchg pop leave rdmsr or test (bad) int test je sub imul and lea adc arpl sbb push loope ret add jbe mov cmp mov dec add adc int pusha sub lock xlat mov stos out mov sar and std lcall adc test js or dec pop movsl orb jbe mov jecxz pop adc rorb fcmovnbe and inc int3 push push push mov pop repnz imul mov nop test fwait mov and xor adc push mov jl call aas add sub sbb pop add or femms fldt lock xchg movsl clc adc inc test pop add dec loopne popf aaa sub or and jmp fsubrs mov dec flds lods ljmp dec mov cwtl mov dec inc int3 mov movsb cmc jge cmp and arpl or sub push pop sar xchg test sub or pop sbb inc loopne and outsb cmp push jne add test lds mov clc sbb xchg lret call xor mov out add mov dec sbb or in imul cmp (bad) pop psllq xchg or cmpl inc enter stos mov mov cld repz cltd push in movsl add cmp iret sbb int3 test adc and cwtl repnz mov test cmp mov adc push jecxz ds push (bad) jg add ret and mov into and shrl (bad) (bad) ss add hlt stos shlb loopne fildl outsl mov or mov roll mov cmc or (bad) xchg rol scas and sub fs push les lods add lods pop pop addb sarb ret mov jo icebp xor mov fstps sub or lds pop push add (bad) imul jp push pop mov xor testl sub (bad) js int outsl push mulb jb aam add pop gs push xor cmp xlat outsl aam sbb pop sbb aaa imul add lods out add jbe dec jge in jp add push sub cld lahf addr16 jno pusha mov add out sbb and push fs les hlt test or xor and lcall inc enter jo inc inc test push inc jge mov lahf sbb cmpb movsl xor jno sub add jo iret cmp enter cmp test lds xchg or repz pop or inc and nop add imul xchg in xorb push and mov fwait mov jns test repz je mov pusha and push fs adc leave aad popa in out sbbb and sahf push cmp fnstcw jnp iret cwtl add adc adc jae inc int3 pop and xor jns sub loope fs pop lcall lods inc cmp add stos cltd movsl mov and xchg mov inc mov add push pop into add popa add or test loopne (bad) push clc arpl into rcr fwait sub jae xchg test dec sub lods inc lods scas pop sahf or add dec aam movl pop pop mov and sub shl gs insb fs jmp xchg mov dec or int3 push push je js cmp add stos dec scas dec rcrl pop shrl mov test mov lret and pop sbbb mov scas mov jl test loop nop lods or int3 je mov jae and sub hlt addl (bad) jns sub pop int3 push mov into and dec push int3 test imul sahf cmp enter fldenv mov js mov push xchg adc push add inc push lea stc stos stc daa loope inc or adc inc rcrb cmp loop add int3 lods mov dec cmp mov out or adc sub lret mov cmpsl movsl xor add cmp shlb and movsb call xchg nop movsb call mov pusha adc mov push (bad) in (bad) inc icebp sbb pop movsl mov daa mov xor and cld sbb cmp cmp pop nop mov xchg xchg jne inc inc imul hlt dec and cmp and add mov mov jp dec cmp bound or adc dec dec adc ja aam adc add je rorb mov xchg int xchg call push push pop ljmp sbb js popf loop push or sti lods and dec mov cs int3 in sub or nop adc in jae jmp xchg xchg rcrb jae (bad) jmp test test in lods mov xor bound and or (bad) enter jp movsl pusha inc push or mov mov aam push inc inc dec mov adc imul mov jmp lock mov in lock pop cltd hlt les popa and xchg mov js mov mov adc and inc dec xchg ret test add add mov pop xlat lret sti and and roll push fwait hlt or test add push movsl cmc sahf and jae mov sub clc loopne dec or ret int3 jb push cld jle loopne sbb xchg lret adc addb adc jle sub aaa add rorb test add xchg pusha sub repz sbb ret or or addr16 lcall pop mul xchg ljmp dec xchg jno adc rolb hlt jnp add add and les lahf lock adc clc push mov pop inc add dec add push xchg repnz enter ds leave inc xchg sbb mov mov insl sarb xchg sbb flds aas test lcall mov pop es (bad) lock inc xchg inc cs pop sbb (bad) int3 loopne mov rcr inc sbb lret pop test test xchg addb movsl dec test push stc in cltd push outsl xor (bad) lret out out loope and mov jmp sub push nop fsubrs enter mov aas pop adc cmpb dec fs mov dec (bad) push aam test and pop nop push clc insb and ljmp add ret and imul ljmp push pushf add jge xchg aam jae adc adc sub push pop inc jb popf add movsl push lock adc xchg mov lods sub pusha adc or bound xor push push dec pop ljmp adc inc push ljmp sbb gs push es or test int3 xchg sbb and sbb xor pop pop push jle lods ljmp nop movsb pop outsb add imul imul xchg test pop nop out mov test push js adc inc mov add mov mov imul (bad) jbe mov mov inc push or iret std push jo adc bound in shrb cmpb push jnp cmpsb add orb or fxch jbe mov lods data16 sahf test jmp stos cmp push add aaa or push jmp popa mov (bad) sub nop sbb pop cwtl dec xchg adc or mov sub push and mov and enter rorb cwtl pop sub mov cmp jnp push (bad) push cwtl pop lock loopne (bad) into out loope push clc popf push loopne loop ret lahf das and outsl sti sub push mov push cmp lods gs idivb sub jp push pop movsb loop bound adc test pusha adc test jmp (bad) stos push xchg jo adc jl add test mov test cmpsb iret push pop pop in push and insl adc push push out ds mov cs cmp in sbb (bad) sbb dec ret add test xchg in or mov stos clc mov mov or enter add sbbb enter lds lods xor adc pop stos aad mov pushw sbb inc adc lods add test xchg leave mov sub sbb rcl rcrb sti pop les dec lods add cmpsl xchg sbb inc or xor sbb enter sub jo test (bad) (bad) push popa pop sub mov ret jns jno adc push xchg repnz cltd jp dec pop push (bad) mov das vpunpckhbw adc add add leave xlat dec outsb inc loopne (bad) mov out xor cmp (bad) cwtl (bad) in out jmp (bad) packssdw les loopne xchg outsb inc push pop and imul mov clc in outsb add leave jno xchg pop add (bad) lock (bad) and fs sub mov out xor add pusha lock push fmuls jns cli (bad) mov pop into cmc cwtl cmp addl mov add pop fisubr mov out rolb loopne subl fidiv cwtl pop mov das cmp hlt (bad) push stos xor xor or jle add mov sbb jmp psubb in out and dec imul lcall or outsb fwait loopne mov test mov rcrb inc xor ffree mov pop cs test subl mov mov mov cmp mov or ficompl jnp pushf pushf add sub call pop xchg sarl xor addr16 mov inc arpl pop in fs adc jns push or movsb lret call movsb xchg xchg repnz jl ror daa shrb mov dec loop jo es xor ret inc (bad) xor push lods or mov fwait adc cmp enter jo inc clc mov stc lahf cmp sarb lock xor add ds dec pop lock xor pop sub dec add test mov jo sub cmp lods cwtl subb or cmp in rcr and cmp cmp sbb and pushf pop movsl mov pop or addl ljmp repnz dec pop rcrb jno fdivrs push inc add subb int3 jl orl pop (bad) mov xor fbstp stos xchg jp les add daa mov into inc add lret stos sbb in sbb out or add movsl rclb pop xchg test nop sub mov mov and adc lcall loopne sbb cmp ljmp pop aas mov xchg icebp dec in lods sbb mov repnz mov push cmp je mov arpl stos roll inc or cmp hlt imull fs push les sahf pop nop sbb insb (bad) pop hlt push fidivrl inc out or mov lods pop jl cmp mov cltd sbb xor xor or scas dec fwait inc or mov je add lret or fcomp or repnz and popf int3 or daa dec cmp cmpl scas cmp pop clc and ss clc add out adc rolb and xor mov aad ljmp ja aas ret sub push push dec rcrb xorl insb xchg gs add stc adc adc insl lock sbb push icebp shr cmc and daa inc mov lods cmp mov test (bad) jns push inc mov push jne mov adc or inc jmp add jp outsb adc popa sbb inc scas mov cmp into das and cmpsb push ret popa add jp mov xchg pop mov mov test xor xchg and bound insb or cmp xchg and arpl bound mov jmp stos mov cmpsl inc call roll dec xchg xor ljmp adc mov mov inc and incb xchg jecxz imul stc pop aaa lock sbb in dec test hlt pop repz adc sbb mov mov push aam and dec mov lds test test sbbl gs loopne push jno mov jg or and or dec jbe cmpsl mov adc dec inc pop push sbb xor sahf mov insb adcb xor add sub je adc pop enter or ss lods orb add jp inc test pusha fwait pop loope jnp,pt adc push enter xchg cmpb lret fcmovnbe (bad) cmp insb mov ljmp outsl sbb jo (bad) cli inc call add and out test pop xchg mov jmp movd ficompl movsl adc test pusha sbb js inc in imul xor cmp dec mov or sbb xor inc fidiv dec out cld sarl xor not imul mov daa pop adc imul push ljmp out daa pop xor add inc dec add push add and pop sub enter int3 shlb adc push push test pop shlb mov lods dec push add (bad) and push add add cmp add cli outsl sub add cs inc rorb push arpl dec test inc insl mov bound aad call fmull lahf add push xor xchg cmp mov cld inc add pop and orb scas sbb test adc dec aad sub xchg cltd inc stos adcb mov or dec add pop lds sub adc cltd pop add and push pop xlat sub lret lock pusha push pop jnp pop dec ret mov jle andb cmp nop push (bad) rcrb clc rclb inc sub mov (bad) push imul loopne fiaddl adc hlt jns in lret jmp xor sbbb xchg push popf addr16 push (bad) cmpsb mov pop mov call mov (bad) push mov sbb xor movsb add pop mov out add pusha stc or lds mov adc je cmp pop enter (bad) loopne outsl mov (bad) stos sub fsubs lods adcl add popf mov and push or repz lds xor je and cmp sub sub repz jge jl mov sbb (bad) xchg lret mov int3 mov mov sub mov pop test inc lss in and xchg shll fistl imul aam or hlt sub cld bound jno movsl jnp mov popf add push inc (bad) push aaa ja add add sbb push pop shlb cmp push ljmp aas xor xor mov xchg add cmpsb pop andb and inc mov cmp ljmp shr stc mov cmpsb mov pop mov push loopne push adc and test inc jmp or dec lea xor stos sub xchg mov (bad) cmpsl and adc lahf pop out into mov inc sbb mov push mov jecxz xchg pusha (bad) pop add out (bad) repnz xor inc (bad) stos and cmpsl xor shl insb shrl xchg mov aaa add jb dec addb xchg inc rclb and ds ret test adc sub dec inc mov addb pop je or pop add lcall mov jecxz aas sarb add fiaddl in pop (bad) rcll orl adc or lret cmp mov mov jae jg arpl push ret or dec push fnstenv push add rcrb push and popa (bad) and stos or ss repz pusha dec sub fisttpl aad je dec mov pusha data16 loope movb xor push add add jecxz add and push mov mov cs mov (bad) adc insb fdivl aas je hlt sub and nop xor fidivl (bad) and dec push (bad) jge shr mov nop rorb fcmove jb or movsl mov pop mov or or and mov sub mov or test ret nop mov inc test mov pop jl and mov inc push sub stos add sub iret mov jle add xlat cmp out js xchg arpl and mov sahf inc test mov or mov dec xor repnz pushf out fbld addb sbbb add push leave sarl repz scas insb lea (bad) mov cmp xor addr16 mov movsb int3 setno mov fmulp dec lods xor test popf in cmpsb pop add leave sub shrb dec push call xor push mov mov orb jne (bad) push add push and mov cwtl rolb sub ljmp sar inc add mov test (bad) cmp in inc push xchg mov xchg call inc xor cwtl add lock push push and adc add sub add mov sbb xchg sub pop mov loope movsl mov xor jecxz mov push sbb mov clts (bad) and scas xor jnp sbb mov lret bound adc mov roll cli jl lret lods inc mov out jno in jecxz and pop faddl mov dec sub push inc dec call add pop popa sarl adc xor adc nop in sbb cmpb jmp inc and sahf xchg nop inc push xor sarb mov aad push ds adc cwtl sarb rcrl movsl mov (bad) ja or mov fwait testl pop stos inc cmp popf sbb mov add add in sub cmp es pop dec sub mov mov adc and mov lock inc stos xor sub and popa sbb pop push xor add pop into pop and hlt adc adc mov mov add mov sub inc xchg cmc inc push repnz inc xchg jns fisub cwtl cmpsb ret dec call jns cmpsl rol test clc and cmp xor mov push js call add jnp ds mov adc dec push sub hlt jo or enter out mov add fwait cmc fdivs pusha dec cmp cmp pop xchg ret pusha mov or or jge cmpsl inc inc (bad) pop sub stos pop loop push iret add cmpsb sub addb (bad) lcall and jno shrb cmc jnp pop or xchg ret add adc testb adc frstor fs xor and inc add adc rol adc push push sub movsb ljmp mov mov inc ljmp add sub xchg cmp (bad) mov in sbb adc adc cmp fadd (bad) jno xchg lea or fwait push dec or xchg cwtl lahf and mov nop nop fs mov pop pusha cmc scas out xchg mov call mov mov xchg xchg test frstor dec lahf insb cwtl cmp xchg add out jno sub nop insb add dec scas repnz lods inc xchg cmovo adc cmpsb aad sarb push scas and or in enter push inc out mov fwait mov add jbe call or cmp push push cmp cmpsl jnp or xor ljmp cld add pushf ss pusha loope stos sti lret loopne cmp dec fsub pop push shrb movsb cld loop mov pcmpgtw data16 and pop cmp inc inc shlb pop dec pusha rorb push xor add sbb jp jnp rolb or jge jns fsubs mov andl and std sbb insl xchg add (bad) mov pop addr16 cmp iret pop xchg inc les (bad) pop enter jno arpl lock cmp inc enter fbld mov js xchg je cmp xor cmp in lcall and shlb inc cmp lcall xchg xchg mov or test test cmc (bad) fdivrl jge in inc pop ss push lret push mov sub orb adc xor add sahf push push xor or push inc xchg scas push pop dec jmp clc or sub aam and (bad) call scas mov xchg mov push add dec rclb lods push and inc mov sbb mov out fist rorb inc enter sbb cmp add out les rep or xor into mov es fs popa inc add mov push stos popf push jmp out leave mov fcompl scas sub (bad) mov jl and xchg cli xor xcrypt-ecb cmpsl (bad) mov outsb inc lods inc add fsubrl mov cmp adc mov les scas push sbb loop stos xchg in fildl andl ret dec in inc xchg or xchg and and xor inc pop xor fiaddl push sbb ds lods lahf sbb and sbb jae xchg and and js in cltd adc or adc or dec pop mov mov je add push scas mov cmovge mov push push loopne mov pushf mov push push pop ljmp outsl inc les inc add and cmpl pop clc add cmp pop cmp (bad) fdivs mov or xchg js enter cmp push xchg inc lock add jge dec sub xorb lods jae add stos scas or or nop sbb sbb loope or aaa test mov add jns (bad) cmp fwait xor (bad) mov or pop imul nop (bad) pop fisub clc dec rolb gs lods movsl mov mov mov pop mov push mov cmp add inc xor add push rorb repz arpl xor aas add int3 cli ds add sbb je push jg xchg mov inc adc daa ja add popa pop scas mov imul mov push in push pop leave sub pop mov jno xchg fild dec ds loopne xor cmpb pop and mov add sub jo mov and xor cmp test popa frstor testb or dec mov ljmp mov scas call mov fcompl add mov repnz mov pop mov mov and xlat jbe dec out fidivrl sbb jne mov xchg inc pusha test cmp jecxz jb xchg jno mulb xchg call sbb les ja jae xchg addr16 rcrl xor (bad) in or jp pop cmpsb test ljmp add jp push xchg stos (bad) or into test inc je insb push mov pop clc fstpl call dec cmpsl test (bad) dec jecxz add xor jnp jmp add inc fsubrs mov mov sar dec sbb xchg fbld (bad) jmp dec or mov jo add mov movsl sbb cmp pop insb dec cmpb xchg out mov repnz lahf loope hlt (bad) push roll ficom sub movaps fs xor out out (bad) push xchg push loopne stos adc xchg call add and scas dec inc fxtract pop ficoml (bad) negb leave lock je jnp push push leave sti jne jae fs jae sub mov daa (bad) jmp rcll jb lock jge jo test (bad) rcll clc mov movsl cmpsb xor add and jge clc adc push xchg cld sbb out and sbb xor sub pop xchg jl adc hlt cld adc sbb sti mov mov push ret repnz dec dec inc mov mov cmp pop add out lahf popa push jno xor add or mov adc ja pushf mov dec test push sub js add iret ret test add lock sbb jl rclb js repz and addb push pusha mov xor jge movsl add fs push jno cmp call add xchg test dec lock inc rorb lcall test (bad) cmp je jl icebp in cmpsl test or sub mov jae sbb inc sahf dec cld fwait or test xchg sbbl fdiv jmp xchg sub adc dec (bad) rclb jl rolb lea push clc mov fcomps adc or cmp add push lock movsl xlat sub hlt orb or lea sbb dec or adc xchg jecxz xor je js add add daa and aam fwait cmp dec push pusha cmp ja jb das mov rolb out inc loope ja mov mov xchg movl push out or xchg push fwait lods inc cli imul or cld jae push les lret in (bad) mov add jo mov lahf (bad) push or aam sbb scas sub cmp xchg fs jnp or mov ljmp pop in pop inc push loopne xchg lahf notl mov pusha fcoml xor xchg pop sbb pop out lahf inc notb adc (bad) lock pop xchg inc mov mov (bad) push (bad) xchg jge push dec roll js push je and mov lds frstor add push add lret cmpb bound insb cmp sub xchg lods sbb nop mov pop les jmp inc and enter les cmp movsb add je inc xchg call push mov aam repnz (bad) or cmp popf adc xchg and sub or lock cwtl mov xchg rolb jae dec popa movsb and xor or sub add test jp add dec sahf add popl push add outsl adc pushf add int sti and xchg fs stc pop sub hlt xchg mov and les and out and hlt insb stos adc or pop mov fsubl jnp lock push inc jb lods add in inc add add ftst sub cmp mov pop (bad) popf xchg mov out in adc xor imul and (bad) clc add jge clc xlat sbb sub jno cmpsl push cmp and pop mov insb test lods lcall movl mov add fs push jns and pop in imul je ljmp and fcompl push leave fcoml pop iret mov jb (bad) dec (bad) mov pusha enter add adc jno xlat or in mov xchg ret sti out test test ljmp adc repnz pusha push inc faddl daa mov dec les xchg test rcrl add and stos pop mov and mov lods add sahf data16 in lea pop loop sub or cmp push cltd stos lock or sbb and and xor lock lock test mov sub mov mov dec mov out imul mov in push jecxz add add sarl jbe jmp lret add xchg sub int3 jno mov int xchg and test in scas jo cmc fwait lock xor sbb lods xchg add lea add adc ret pushf outsl mov mov xor cmp pop les adc sbb sahf and push pop fs sub or xor cmp jge imul mov push pop inc mov and and jno pusha mov lods jle rcrb imul push xchg fdivrl add (bad) xchg inc cmp in xchg inc cwtl scas pop xchg outsl add lock cmp repz or insb jl adc add xchg pop adc sub mov sub pop inc pop sub push test js pause adc add pushf pusha xor jnp out scas sti add mov push out arpl enter lock lcall and decl in hlt sar add inc rclb sub in pushf sti xor mov xlat push sbb sbb popa lret push loopne fild and shlb test xor pushf negb xchg in sti cwtl in mov sub mov jge cmp fwait cmp das test (bad) or jl es loope daa loop movsb (bad) insb push pop add out and stos ljmp sbb test adc xchg cwtl ljmp in xchg sbb sbb nop int3 or lret adc or add cmp insb inc ljmp ret xlat or les fdivrs lea mov sub xor in and or movsb mov or and cmp lret sub adc or clc pop cmp mov shll mov pop mov push je add pop or repnz jo push data16 test (bad) fildll mov stos mov in adc sahf mov addb or or adc out and add test cmp mov (bad) adc jno add decl jae adc cltd mov sbb mov and push or or fildl orb xchg movsl es mov cmp clc out out push inc fdiv push mov movsl jno lahf test fmuls sub lock ret adc mov push xchg lods rcrb push or jnp lret push je sub dec leave mov outsb les lds pushf ljmp pushl jecxz cld popa ret test js pop je mov mov in mov cmp inc outsl adc xor push mov dec xchg add (bad) mov pop add imul add jns add stc add and and mov call sbb nop lock xchg in or je sbb clc mov lods pop in cld sub push push jno and test push pop mov repz xchg or pushf das (bad) hlt test cmp mov mov push in pop and dec pushf push adc dec hlt dec out push dec jb subl cmp pop adc mov int3 dec pop pop pop xchg (bad) (bad) sub test sbb inc adc push test xchg loope mov or and cwtl addr16 mov pop test mov ljmp inc mov add movsb cmpsl sub sbb ja inc mov and sub mov fs lcall jns leave stc or in adc sahf mov sbb repnz pusha mov push cld lret push inc adc sbb xchg lret mov flds (bad) int and push fildll mov add movb push out in je add lods fsubr fsubs cmp cmpsl and and adc jmp in fbld movq js ret dec jecxz loopne pop loop rcrb ret pop rcll test popf cmc xchg xchg xor addl clc rcr (bad) stc fwait add cmp cmp mov iret cmp ljmp mov and jo or add ror sub fiaddl notb mov lods xor enter adc dec ret loopne loopne or adc test iret add sub mov loopne into cmpb cmc cmp call (bad) and lods push das xchg mov inc imul inc xchg jmp fild aas cli push mov test nop mov pop mov and scas les inc add fiadd lock rorb or out adc andb pop mov sbb pop pop mov or jo add mov (bad) jo add daa dec inc out mov pusha loope loope xchg movsb inc lods jae cmp adc rolb repnz ja mov mov and loopne mov pop movsb mov fwait pop and ja xor add inc mov rorb add jae es sahf add xlat outsl ds xor add fisttpll sbb fidivl loopne pop fwait and out roll sahf and leave push or fisubr sbb out mov pop push jne sub rcl xchg into mov sbb and in loope (bad) adc movsb xchg sbb cmp and and outsb insb sub aas jmp sbb and sbb bound fistpll adc or fdivrl stos call sub and mov inc (bad) xor add lock rclb fidivr into jns adc in jp hlt faddl test addr16 add popa mov sbb push push nop add cmp add push jbe add lods jo lcall adc jmp jne out mov imul cmpb sub leave xor fdivs push out imul dec xchg adc insb js mov jne mov lcall call mov imul subl loope (bad) adc cmp push adcb mov jno jmp shrb or sub sbb dec sub push xchg xchg adc pinsrw fwait xchg arpl aam sub inc imul cmp push pop jl sub xchg xchg andb xchg pop and sbb lcall icebp xchg dec or nop and imul sbb mov and fsubrl jae add jno test pop sub sbb out test mov ja mov cmp in sub adc test test jecxz xor fnsave xor cmp add push xchg jnp mov gs (bad) imul daa movb call inc inc int3 cmp or xchg pop mov and (bad) out out sub sub repz push mov inc adc and push pop mov int3 jne push mov add add cmp adc fmull je push lods xor and adc mov test mov daa and in rolb lds scas push dec mov mov jp adc push pop test clc lods sbb test mov add or xchg add and test sub addb and (bad) pop enter les add lcall sbb enter icebp dec arpl mov jecxz inc pop and js add or jge (bad) mov ret cwtl add inc imulb mov addr16 es es int cmp dec cmpsb add and (bad) aas sbb sarb xchg jne xchg xchg jb mov ds subb add fwait stos add sub loope push mov add xchg test ret mov dec sbb jle add cmp nop add jge add push mov adc jo inc je lret rcl mov xor jmp add xor in mov jno add mov add aad inc pop or pop pop adc dec pop jge xchg push (bad) xor call sbb adc in and cltd andb jne ror cmp scas and aam mov sbb popf xor inc pusha ds (bad) lea cwtl sub or movsl sbb dec cmp jnp addr16 adc fs or adc xlat add ds xorb pop or nop stos pop xchg nop push cmc hlt cmp inc xor jnp add sbb dec (bad) mov dec dec ljmp aas test push add scas xchg popf sub cmp insb loop and sub pop or lods or scas xor test adc push and adc add xor sub arpl pushf mov jge mov xchg mov cmp mov jo,pt call cmp mov xor mov (bad) rorb sbb imul pop loopne jmp or lahf orl rcrl cltd lea push fiaddl pop aaa jmp lds les sahf (bad) nop jns daa xor sbb aam add mov es push cwtl push pop inc add pop adcb cmp mov add insl inc jmp mov dec mov pop jecxz hlt loop add out int cmpsb cmp imul pusha loop lahf and jne je js aaa and push jp popf cld out xor and adc pop xchg cli jbe cmpsb std push rcrb or push add lods xor pop add out mov pusha add or std sbbl jle jge pop dec rorb bound mov mov test add cs scas xor pop jg rorb cmpl iret xchg sub sahf loop popf orb inc iret add lods jp add xchg sti lds cwtl dec fimul sbb push int3 xchg fldcw push enter add jp (bad) ret or mov dec add jo cli mov sub pop push in mov push mov sub loopne add push in add and (bad) mulb or loop jle clc mov int cmp or inc cmp or jecxz push popa push fadds sbb lods pusha mov adc inc mov add sbb mov arpl push xchg daa adc sbb aaa mov js icebp pop icebp and js movsb (bad) sbb ret or test pop add ss xchg sub sub add adc addr16 jae mov mov push mov sbb dec or nop out lds mov pop xchg add mov mov and add jne in xchg lock pop push iret nop in pop cmp xchg lahf dec pop in add inc mov cmpsl lds xor pop rclb rcrb test push cmpsb push loop dec cmp bound out jl add sbb pusha push jae and mov jno movb js test test xchg add mov add insb adc loopne lret out inc fmull es xor hlt xchg sbb jmp adc pop dec or scas pop add mov icebp es push mov and and push mov cmpsb inc mov inc nop rolb inc sub loopne add sub inc dec add icebp clc xchg js inc xor push test cmp lds adcb int add xchg mov hlt add int xchg add rclb add dec and rclb push and (bad) xor jge pop pop mov pop test add and popf ja movsb aam jae (bad) jge cwtl and cmpsl hlt gs aad or loopne into push push mov (bad) mov dec adc cmc mov mov xchg push ds or xchg mov add dec cmp push xorb jno inc pop cltd movsb sbb ss add insl and mov in imul cmp xchg jg repnz and sbb rclb out add push dec and mov lods or sub out dec inc push lret aam jb or dec lock dec push jbe fldl cmpl sub cmp sub xchg mov push mov or sbb cmp mov sbb pop lock mov add add sbbl (bad) mov cmpsb fadds mov int es das pop sbb xchg js test clc push addr16 add daa xor mov xchg stos cwtl sbb bound add mov or nop jle adc sbb loop orl inc pop mov ret jecxz xor pop rolb jns xor jmp and push mov sbb dec and xchg mov jle sub popa jnp pop into rcll (bad) (bad) xchg pusha xor xchg addb pop js mov mov pushf inc insb in sub rolb xchg mov andb enter subb xor mov test adc inc mov xor mov mov cli and inc in fisub push pop dec and mov mov xor xor lcall or nop pop popa push enter xor cmpsb jl sub ja and sub xchg xlat (bad) hlt dec test or and inc bound jecxz (bad) dec and cmpl roll jne cli stos sbb push push sbb add dec adc (bad) pop movsb jb add (bad) iret lods ljmp pushf test dec sub sub clc push or or jb inc cld sub mov pop pop xchg mov mov movsb icebp pop lock and divl or pop lahf js in mov push hlt movsb push int adc movl loop add flds and (bad) rcl pop dec pop sub cs inc loop mov dec popl and iret in xor loopne inc push or mov adc loopne add loop xchg aas loope in and sub adc mov inc cmpsb and fs inc sub icebp mull dec push and dec int3 into mov pushl jno add sbbb jae mov dec fs and mov add lea popf or in in inc and lret into and gs inc or hlt outsb inc (bad) mov test mov and (bad) xor js and pushf cli nop lock push add lahf inc in (bad) not sbbb add ja cmp push lds lods les sbb sbb push xchg nop sbb out bound enter cli int push cmpl jle inc mul mov add mov push js shll rcl lar jne rclb movsb jbe mov addb mov (bad) test dec inc dec sbb and xchg dec (bad) add inc cmc pop out jecxz insb pop jle lret mov mov in ret out sbb push jb add (bad) lds fimul jl pop sbb mov and (bad) sbb or inc (bad) sbbb nop roll inc and mov push addl xor xor push out cltd mov pop fwait add mov xchg loopne scas testb lock push mov or cmp test movl pop loopne push rclb pop mov daa repz adc add (bad) pop adc setge fildl push xor fdivrs cmpb pushf in push and jg jnp add pop pop xchg lahf lock xor stos xchg or inc fisub mov fwait mov out add xchg popa fs xchg pop mov add adc or addb movsl call (bad) jmp cmpsb iret jmp dec and xchg fs stos cmp add popa sbb mov push pushf xchg ret pusha (bad) in pop adc stos popa lock cmpsb nop sahf xor lods jl push or repnz call or popa fsubr dec or lds cmp or dec shlb pop mov movb cmp mov mov dec andb lcall loope dec clc lods pop inc mov cmc cmp inc fwait inc inc pop rolb leave cmp mov in (bad) mov dec loopne fdiv xchg sar push sbb addr16 dec add adc repz cwtl or cltd hlt cmpsl inc rclb or add mov jg stos addl and cmpsb arpl inc adc (bad) jecxz adc mov and add mov dec fs inc xor lods dec push and adc addb mov push int3 lods xchg add bound mov xchg add stc push into sbb dec fcoml jno call rolb aad ds adc add outsb clc sbb mov in add add jbe cmp cmp out xchg sub push pop push test hlt lods dec cmp movsb cmpb pop int mov fimul aaa pop mov into xchg or inc push mov mov cmp xor in xchg cmp scas mov adc mov int addr16 sbb or mov call sbbl clc cmp or inc pop fsubl inc lods shlb cmp or or cwtl in (bad) ret js in add test xchg jg xor sub adc push sub ret mov dec aas xor mov rcl cmp mov pop sbb or lods cltd mov lock pop cmp add int nop push inc cmc add loope fwait xchg rolb and jbe adc inc sarb pusha cld mov sub mov aas test pop dec ja mov push inc enter inc (bad) nop call push into jp and mov pusha xlat inc mov leave or (bad) cmp xchg jbe xchg (bad) adc fwait cmp pusha mov or pop and mov out jns aaa aam jmp jno push repnz jle push nop jl pop push mov inc push add iret add ljmp jno and lock add dec inc js pop aam dec xchg xorl push repnz add cmpsb xorl push (bad) mov xchg loopne pop in or add pop and lock add sub or xlat adc xor lret add mov jb add adc push mov pop sbb inc and jl mov lea dec dec push dec sbb pop mov cmp jbe cmp je push dec shr or icebp movsb movsb add dec cmc cmp nop sub inc add inc cwtl popa jns sub adcb popf sub pop jg sbb dec insb push push adc add or popf sub (bad) cmp scas stos xchg js mov add jp addr16 fistl sbb mov xorb or sub jp subl gs lock sub push mov mov mov cmp inc lock push aas xorb jg fistl dec lea lcall jmp rorb jbe add lock daa and adc jae loop rclb sbb arpl xor test inc mov rol das and cmp dec mov andb push jns flds loopne xchg je sbb push add int3 adc jbe cmp out addr16 rorl or fdivr adc inc add xchg in push jge sub insl dec or xchg addr16 and test cwtl mov pop sarl and loope dec push ljmp mov insb sub dec inc add jge jge add cmpsb dec pushf pop aad or testb ret clc mov push call ljmp dec inc insb sbb loope xor lds in inc bound sbb jl fsub sub adc sub dec clc add mov jg sbb mov bound xor xchg inc cmp mov adc mov push jge mov mov aam inc fs or push inc in or icebp or sarl cmpsl sub jg add icebp outsb cld setne sarb sub xchg or xchg and lcall xorb dec push adc call aam inc jmp mov lods add jg inc sub xor xchg dec sbb mov pusha ss xor fdivrs repz adc shlb mov sbb movsl dec dec pushf pop cmp sub popa mov sbb mov push dec test add test cmp dec (bad) icebp stos jo pusha icebp mov adc cwtl faddl sbb icebp in push and sub test inc mov mov xor push pop rcr incl cltd aam jp push push daa push adc or mov inc cmp dec lods push mov test and loope in mov imul pusha je shr dec andb adcl fs subb and nop mov fwait add jecxz leave scas jp adc dec lods push faddl pop out (bad) and cmp add enter js adc jge addb popf mov es jb cmp xor lcall sbb inc or cmp nop push push jg aam jp sti jo in push push push add add adc add cltd aad add jne jecxz mov nop inc add mov jecxz movsb pop xor (bad) out inc push into loopne mov test jl lret aam movsb js dec push add mov adc xchg xchg addr16 lret sub and pop mov inc mov mov xlat push jns ret inc push iret and cmc mov hlt dec call sbb xchg pop test cltd xor rcrb pusha scas ljmp sub inc push adc dec enter ja rolb vmread outsl stos add out nop xor adc ret xchg jge loop pop insb sbb push jae test cvtps2pi xchg jg loopne dec xor push adc pop lret js fbld cmp sub cmpsl loopne pop ret js in aam sub xchg xchg loope mov in cwtl adc sbb or sahf xchg cmp test addr16 adc test call jnp sbb aam cmp into adc fs call push (bad) cmp dec cs adc (bad) repnz arpl add xchg mov xor jo pushf shrl or repnz jnp,pt add push mov testl push dec dec xchg mov cs jno sbb pop sbb mov ss pop xchg gs add test lods lahf xchg push pusha mov sub (bad) mov xchg sbb inc cmpsb test lock ja mov imul and ss pop or pop push or lret add xlat pusha insb or mov inc xchg clc mov jecxz mov rorl sbb mov es (bad) fiadd xchg cmp nop cmp insl sarb jne std fbstp cmp cmp fdivrs or xor sub mov pop inc or dec dec test mov sbb and es dec add sbb jp sbb xor mov xchg fbstp subl sub or cwtl mov icebp (bad) xchg enter sub (bad) cld or (bad) xchg inc adc or inc call mov and lods fwait pop out lock dec arpl xchg pop xor stos in int3 add xchg xor rolb out and repnz pop pop hlt jbe cmp cmp mov cmpsl sbb lock or stos mov inc or mov fildl fidivl mov out dec (bad) mov (bad) hlt nop mov in mov int sbb sbb stos sub mov or test sub cli jl xchg xor cmp add add or aaa cli cwtl movsb mov sbb pop jmp and jp mov add and insb xor sbb mov std sbb cwtl addr16 inc test jbe out push cmp pop mov call out shr js mov and inc or mov aam ret sbb jecxz js sub mov sbb ret inc sub je out arpl pop ret popa xchg cwtl pushf push loope nop push add jmp and push shll cmp rclb add pop (bad) mov nop lcall add jle xchg andb shlb cmp cmc movsb push pusha adc fnstenv and mov add add jo cmp in xor jge cmp clc dec jb xchg push xchg test inc mov mov inc mov xor adc xchg int3 xlat pop lods adc inc push adc call mov fdivrs cwtl pusha xlat jecxz add adc adc adc and sub fmull es movsb dec add or movsb lock inc add div add test int lock jmp inc push inc cwtl add sub test or xchg dec addr16 add clc fcmovu adc push sbb sarb lds icebp sub mull adc in xor mov out lcall call movsb int3 aas ret mov cmpsb stos add popf sub add sahf add in pop sbb test and sbb (bad) xor mov (bad) aam push xchg jne pusha mov mov inc xchg or sbb out (bad) mov push jp rclb (bad) fiaddl in pop pop das in jl xchg lock imul mov mov fsubrl shrb jnp xchg or mov cld xchg fldenv dec add cmpsb xchg jnp and out js push cmp dec adc add sbb and ffreep int xchg mov iret lock icebp push enter call fdivrl js outsl xorl std mov add push faddl mov mov or stos stos addb (bad) mov loop adc notb cmp dec sub insl jg aad lret pmulhw int3 testb add nop movsl fdivr enter int3 mov dec adc and xor test xor fimull push enter cmp enter fild enter and sbb xchg fldl hlt xchg out xchg mov xor je repz fisttp stos stc sbb add pop xor xchg mov push mov add add out or daa cltd xor call inc push jbe push mov dec sbb sarb xchg mov in cwtl cmp dec jmp inc pop daa mov adc pusha cmpsb outsb jmp mov add xor shrb neg pop in jae test cmpsb dec pushf pop xor outsb push inc jecxz sti add push adc and incl or and cmpsl shr inc mov xchg and cmp and lods sbb lods out sub outsl stos mov shll test cmp add jnp push or inc daa cs cld cmp xlat ret adc pushf mov cmp stc xchg jb add pop sub mov mov movsl jle sarb push inc cmp psadbw pusha mov xchg repz cld push mov fistpl xchg fild cmp pop aaa push jp lahf mov push jle pusha jbe bound jne cltd mov mov stos fcoml push add xchg lahf (bad) xor pop add push lret or cld pusha faddl in scas add sahf push jl cmp inc nop and daa fisubr push add adcl mov gs (bad) test mov mov mov push jg mov int (bad) repnz add sub mov sbbl addps cltd add loop and ret sub sahf add dec jmp subb in adc inc rclb push jne ljmp shrl and cmpsl jo mov adc pop fldt and adc in repz mov fadd xchg movsl lcall in (bad) in mov add sarb pop cli jns or cmp add xlat mov nop inc cmp adc imul push mov or adc mov frndint hlt in test into inc insb sbb out test data16 (bad) aaa xchg xchg flds je pop stos add jno mov xlat or pop insl subb gs dec imul lahf pop push sub leave rol sbb daa jle jne sub add outsl inc sbb inc sbb (bad) addr16 ror sbb popf hlt sbbb cmpsl cmp sub lahf and pop push or mov push loope pop push adc orl cmp push add mov loopne sarb popa fcmovu push add push pop fmul and popa test cmp js scas fdivrp popa movsb (bad) cmp adc mov sbb push and cltd jo fildl pop and pop fcmovne jmp adc jecxz or or add xchg pop (bad) ljmp fcoms rcrl mov jo call mov sarb ja sub nop pop pop and inc add mov dec sahf cmp les stos mov add int jno aaa enter (bad) jbe test mov xchg mov xchg pop les or mov pop dec out test mov out adc sub xchg cmp xor popa dec imul sbb xor push push add daa rolb nop and lods pop pavgb mov icebp push out cmp push ds sub js adc sub add iret push lcall mov sub push mov shrb cli sbb (bad) jne add mov repnz add xor pop flds sub cs faddl mov sub add in pop pop pop fwait adcl cmp dec cmp inc mov js xlat (bad) dec fldenv or push pushf jb and out int3 add nop cltd jmp dec inc pushf and mov leave (bad) adc jo cli insb push lret cmpsl cwtl nop call imul mov pop dec add lods and lcall sbb mov jg adc push outsb call mov popf adc dec xor fdivs adc in std or add inc xchg xchg (bad) pop add cmp orl mov cs push and adc adc sbbl shll jnp jecxz sub mov (bad) jbe fldt int3 (bad) add popa arpl roll add fsts sahf and cwtl mov call mov inc and push xchg and pop xchg notl pop ret rolb mov inc sbb test hlt xchg leave jp aad and repz sub or push std pop stos push mov fadds jne clc popa or (bad) out jae pusha mov repz mov push sbbl xlat add mov fwait xorb jns test add imul clc add add sahf inc and add add mov add arpl xchg mov out shrb orb into xchg push mov aad js fwait add das pop andb mov mov mov shlb fldl lods hlt sahf add inc xchg mov push adc jne jns mov and insl add xor or das in push popa leave inc popf lret dec nop fld1 sar add fsubs and add in call rorb add inc sbbl adc xchg fsubs jle cmpb mov psubb imul cmpsl mov sarl movsl cmp test fimull movsb dec data16 inc sbb insl ljmp stos cmp jle fdivr mov push push jmp dec (bad) hlt inc in out adc mov lock add pushf xor sub pusha pop mov out popa js sub icebp or sarb push or sti enter add aas jbe int3 cld add aam iret (bad) xor bound roll ja imul xchg ds add in aam fldcw jo testb cmp inc sub xor aam loopne lods and cmp ret mov add leave mov sub stos sbb cmp sub mov aam subb mov sti adc in and outsb je xchg mov push jns faddl push sub push dec aas jo (bad) jno add mov cld push icebp push sbb mov dec bound andl and mov inc arpl push push (bad) popa inc push lock adc fild add mov lods fadd out sarb inc arpl int3 pop rol fild jmp mov push enter out xor mov hlt fsubl stc add xchg jns xchg dec fidiv in adcb mov dec mov and in inc add adc sbb mov je ret and gs xchg subb mov xchg push insl xor jecxz test gs push nop js lahf cs in pop (bad) lock push (bad) pop ret int3 fdivrs loop and jne lock and pop xor test xchg push pop dec out insl std mov xor mov ja test fimul jl push sub or push sbb jge dec insb push xor pop test sub aaa cwtl in jecxz icebp (bad) xor popa mov lea mov pop mov fsubs repz push (bad) iret add test lea ret cltd fldt fmuls dec fwait push mov inc add test sub add movb sub and sbb sbb and adc insb cmpsl push jp xor (bad) jo in xchg jge mov dec (bad) xor (bad) cwtl mov leave mov das out nop jl and adc (bad) pushf or js push stc cmp mov dec push stos add mov cmp and push loop js inc add aam rorl nop dec push cld mov pop inc cltd mov or into jg ljmp divl jnp pusha out xchg sarb or push xchg popa sub add lret shll loopne das add push mov mov inc push addl std mov (bad) in sahf ss fbld shrb mov sarb add mov rolb jae sahf jmp cld aad es mov xor jo dec mov pop loop inc test xor in jmp lret movsl enter dec xchg in movsb dec or add sub mov test xor jns aas in inc or pusha aas orb inc cmp mov add or sub sbb or adcl insl xchg out rcrb add popf sbb mov pushf dec sti outsb or ljmp out shlb sub cmp mov bound incl xchg (bad) hlt test cmp (bad) and dec sbb xchg add and xor dec popa mov adc test mov push jbe pop add movsb and (bad) push (bad) inc xlat jo xchg and push cmpsl stos add push insb push popa (bad) or stos loopne (bad) cmpsl mov inc stos std and sbb sub jo push cwtl mov jp enter ret sarb pop lcall clc xchg or sbb lret in in les paddw xorb mov ret sbb xor and sub cmp pop cmc inc mov pusha andl mov push xor out push push xor inc in xor mov push add jno sbb push jno or cltd or icebp fsubl or mov mov dec sub adcl (bad) xchg outsb and cmpsl les pop in or (bad) nop mov mov rclb pop sti jge push scas jne pop inc pusha in inc xchg sub jl dec movsb add xor cmp xor (bad) and or rcr in sbb add popa loope loopne out mov mov cwtl cmp or push dec inc mov mov test mov jge xchg in and nop les jg mov sub push cmpsb add dec mov hlt cwtl adc rolb es shlb pop adc push pusha jl or jnp cmpsl inc pop and push mov cmp and aad push cmp ficomp ss test add iret and and aas sub xchg mov nop loop dec mov cwtl pushw dec add jl outsl leave push mov nop adc push (bad) imull test xor pop mov ja or les outsb hlt test pop adc xchg or test lret shll jnp mov xor dec inc fisubl daa and cmp lock outsl in ret mov ret sub add idivl movsl int3 mov and cmp sub cwtl cwtl push imul sbb out ret or sub arpl div imul sarb loopne movsb sub cmpsl sub in stc sbb xchg sbb aas stc xlat lret clc xor adc into cwtl nop xchg pop pop push js cld lock push pushf (bad) daa dec or and dec push add sahf mov test test jl js bound add inc fs mov push xor jg adc sbb shrb rcr xchg jo out or lret sbb dec sbb call dec mov or pop sarb das rol das pop mov mov sbb insb nop clc jle mov inc (bad) (bad) jl (bad) push add (bad) clc into jg test and stc insb les and pop sub and ds push pop jnp cmp add das test sub adc and or sbb pop addb int inc (bad) inc cmp fdivr aam outsb push mov and pusha in pop das aad push and in and add sub add adc cmp sub adcb aas inc lods andps push xor inc sub push clc in mov xor popa dec js jge scas mov bound call push mov push mov or js sbb jle jmp mov call xchg mov inc in xchg test aam xchg jns add push rcrb imul fistpll fwait pusha lock cwtl jno xchg dec mov lret lock data16 mov xor aam dec push loopne push test jbe icebp xchg add rolb mov lret sarb cli cmp jg mov ret xor clc add jge imulb stos pop jae test mov add jecxz add jg or ds cld pop lods mov push add pop cwtl xchg inc or rorb inc or repz cmp mov mov xchg clc and xchg leave mov jne dec test push push cwtl clc cmp push dec and rolb in das (bad) jo in nop pusha test jge int add add into mov sbb jne xchg pusha leave and jnp loop add sbb movb mov in ljmp (bad) or xor rorl in adc xorb inc (bad) hlt push out pop dec xor xor pusha mov add outsl add (bad) sub add dec (bad) sub mov incl mov imull andl mov cltd xchg dec xor and inc sbb add push out roll andb sbb pop data16 lods ljmp (bad) mov les int3 cmpb int test jl push test call mov add or inc inc aam push in inc daa nop repz aas in adc or lds xor nop andl into out mov outsl dec jb rcrb mov xchg dec fcomps inc jbe mov pop add mov inc add push and ja add (bad) imul mov mov es data16 or adc test push inc cmp and gs adc daa cwtl cmpb nop sbb sbbl call pop sub lock lock or add jmp mov sahf or xor cmp or es call add push or xor mov add xlat cmp call (bad) xor pop or orb dec je dec (bad) xlat jmp pop and xor dec sub mov add xchg add sub fs out xchg faddl jne xor or inc jmp cs ds clc nop cmp int out jae insb and adc push mov add jno jg and movsb jp dec aas lret add stos loopew add mov popf pop insb mov test addr16 or mov xor cmpsl push pop inc jne rcl jbe movsl imul mov ds call scas test fdiv xchg mov out loop adc sub lds out xor sub ja incl and push xor xor pop aas lods leave fs xor dec or xchg or jbe loop and jecxz stos loop push xchg cmp jns or fidivrl es jge jns add pop pushf mov jge fs dec and xchg pop add add push or in sub outsb movsl je sbb push mov push fsubp xchg mov or leave dec xchg aam adc inc sbb inc xchg jl movb mov cld lret insl aas in add xchg sub jns pop adc dec add fidivrl xchg add pop sub inc push inc (bad) jl add (bad) out push das xor call stos enter mov xchg and xchg push push jp dec jecxz jg jge push mov test push call push xor fiaddl fadds movsl rcl or cs fcoml fildl inc and fwait mov pusha and dec add and adc scas inc int3 sub test enter add cmpsl (bad) adc cwtl call fsubrl mov push cmp sub insb push cs cmp dec addl mov mov or adc daa jns les mov jns test sub xor pop mov cmp les xor (bad) ja mov sbb mov aas adc call adc loope dec mov mov js fwait dec push lods lds xchg cld (bad) je xor cmp sub dec add rcll sbb jl js xchg movsb cs movsb fsub cmpsb pop loopne inc jl jno push xor dec cmp frstor jns add push stos (bad) and jle inc lods sub loopne cltd cs lret jno pop incb xchg enter inc jmp arpl pop fs cmp sub push dec andb jge mov mov test pop (bad) in and int3 inc lret adc dec shll lock sahf hlt paddusb movsb and testb adc jo daa sti xchg jno adc movsl add or call inc and in mov jl mov nop and jmp int3 inc test sub mov shll inc inc int3 push push xchg in xchg enter sahf in bound adc or pusha add mov jge test mov add or push call (bad) in cld jl push movsl or cmp shrb cmpsl pop sub cmc push mov xor sbb inc sub cmp insb push mov dec and mov sub inc imul add out and sarb stc aam inc dec rorl xor js int3 xor shrl push enter push pop inc (bad) notb pop or movsl orl popf in sarl out dec lods lock xorl paddb fisubrl push fcompl pop push push xchg jl test daa jnp outsl push adc ds add pop inc pop test mov dec jmp sub aam addr16 sub inc cmpb cmp jns je in sti add cmp in xchg mul fdivrs push push cwtl mov dec or adc jg inc fs mov inc loopne xor mov mov sarl aam inc inc stc and inc cmp cmp pop adc divl ja inc jge jo (bad) ja add pop mov mov jl gs cmc rolb clc sub (bad) jns sbb sarl add movsb xor add dec push loopne lea xorps cld ret xchg call push add sarb adc cmpb sub cmp xor in xor push and sbb cmpsb nop clc pushf int3 sbb jo adc jecxz cmp ljmp xchg (bad) (bad) xor xchg xorl lea cmp mov js insb pop mov imul aam (bad) xchg sti push adc in pcmpeqb sbb lea mov or cltd ljmp mov repnz out dec or mov mov dec out faddp test and daa cmp add inc mov push fnstenv pop add icebp and cmp jae add test mov ljmp dec pop in jae adc nop lock mov es mov add and movaps sbb jbe clc enter and xchg sbb test and std leave mov sbb pusha loope sbb jae xchg pop lret adc sub addr16 shrb mov sub int3 enter adc sbb mov or jnp out mov setb daa mov jns inc lahf inc mov adc sub or sub inc into aas or aam fdivr insl cmp adc jg xlat push into (bad) mov (bad) adc adc adc inc es rorb in subl add add xor xchg xorb pusha fprem xchg dec pop lret mov imul cs outsb mov int3 sbb fadds call rcll inc add cmp sub icebp push mov jp cmpsl mov and out aas sbb sbb push sub and dec test in push sub xorl lods adc xchg xchg jg or (bad) aaa cli sbb cs lret xor fcoml dec add icebp clc ret jbe call repz mov sti ss ds inc stos add xor adc out sbb les lods xchg push es mov pop in mov mov test testb cmp sbb js pop out sub in lods inc and and (bad) mov rorb aas pushf add push add xchg popf cmp add dec adc movl (bad) popa jmp jo add jle xor scas add add pop jnp pop cmp push dec xor add sub scas or jg xchg add arpl dec mov sub mov add mov sub adc mov sub add jl and stc add out loop mov lea or (bad) popa insb or push dec test or pushf jle adc out sub jne dec fnsetpm(287 mov (bad) xor sarl rcrl dec sbb fadds lea push jns adc mov inc or (bad) loop rclb mov jl mov js add (bad) in stc mov sub push mov int push adc mov ds push sbb out inc je push orb data16 subb sbb ss test pop cmp add jae scas lods bound leave out adc jle inc fild add arpl adc inc out push addr16 inc test test loop repnz xchg aam mov sub cmp push pop jo aas out adc repz pop sti enter leave ret mov xor test cmp pushw aam movsl push daa inc adc pusha incl mov add mov push add pop loopne movsl push or in xchg fsubl (bad) add xlat inc imul outsl mov lret mov nop movaps jnp fs or mov xchg dec out xor add in pop mov xor adc stos mov jl adc add mov or orb repz add lret mov es (bad) jle test push pop sahf (bad) adc adc add ds xchg addb les (bad) lcall subl sbb sub sbb add out sbbl sub mov add mov pop jl mov movsb addr16 sar pop sarb sbb gs cmpsl cmp add jns add mov ljmp test xchg cmp adc xchg scas mov mov mov test xchg pop adc cld sbb xor sahf jle pop jle cli fmuls or aam dec and jg out adc pinsrw jl into insb xlat push test int3 subl sub test fs js jns insb cld popa enter movsb adc xchg inc add add js jl aaa loop cmc (bad) sub push sub in leave jnp jmp clc xor (bad) clc add mov push in lcall dec mov or push das in sub or in sar lods data16 mov out insb inc mov in push movsb jno adc clc add ds inc cld jne out add pushf (bad) mov xchg ret sbb xor dec add into and stos dec push fsts cmpsb fwait sub xor outsl adc fdivrl xchg (bad) out ficoml shrd sbb xchg adc add sub ret rcrl add clc rorb xchg sub in pusha or cmp mov inc cld ss adc lock and js jmp push and inc and mov push sub cltd mov jle lds push rolb cld test repnz clc jle cs pop dec xor (bad) fucomip addr16 enter sub out les add imul sub dec cs stos iret adcb push lods mov cwtl lods mov mov pop mov sub loop dec adc pop inc hlt mov jae or and xor cmp sbb dec fldenv add stc push shll (bad) sbb hlt pop sub sbb inc xor je jp add add push lods sbb pop imul dec movsb cmp test add out mov and sbb xchg jge insb js or repz fbstp (bad) xor lea adc jge mov addr16 dec call shr mov sbb push je lahf scas and and add jmp in or clc adc cmp ds sbb jne or sbb ljmp es jle nop lods in imul das and add add or cmp sbb or arpl jg pop mov mov inc dec rclb dec add and inc cmpl in push test sub je out push outsw push xchg (bad) lock inc movsb call mov aam add sbb nop cmp testb lock sbb rorb sbb sub mov mov mov xchg sub and adc add andl cld push and xor sbb ds lock adc xor push cmp xor mov jl adc lcall divps mov inc insb xchg sarl sub mov xor sti add scas mov test dec data16 add jle fmull in shlb sbb xor (bad) xor or (bad) xor test sahf test nop push xor test aaa xchg dec adc inc jb and push push aaa xchg mov mov rorl loopne push pop or subb sahf pop (bad) dec xor mov cmp mov mov cmp and test mov mov push jae or data16 and add out or or add data16 (bad) xor jge inc inc in mov pop cld aas sub mov add jl orb movsl test jmp dec into adc pushf adc sti push adc add aam adc in dec xor jg inc mov jp xorl mov mov addr16 push sbb jns mov sbb lea rclb add mov mov arpl je mov mov xchg aam adc push loopne out adc sti cs movsb xchg push cmc and adc popl dec mov rorb jge and adc pusha stos int3 stos cmp cmp cmpl mov idivb imul jg inc add xor dec sub faddl push jbe insb shl orl decl cld add adcb add push lea jmp roll push test (bad) push sbbb addr16 and jns aas or push pushf jne call mov push bound jb out test (bad) xchg add pop sti imul push jecxz or sbb add adc add lock (bad) and pushf faddl test (bad) stc mov pop mov ss add push addr16 shrl or cs je mov mov popa cmpl inc xor test pop out sarb clc mov (bad) lret es cmp pop inc ds xor shll test sub or inc cwtl ret sub mov rcrl dec in ljmp mov add pusha addr16 fmuls or pop sbb push pop mov sub add lcall out add pop pcmpeqd add cmpsl cmp sub mov add out sub pop adc add mov pop xchg orb mov or test jl add test and incb xchg int3 cwtl (bad) leave out add sub inc lcall notb lea jl sub pop mov pushl shrb out or sub daa add cld mov add push adc dec (bad) scas mov test pop sub (bad) cli cmp mov dec cmpsb sbb and cwtl lods sbb rcrb lods mov jo test jg popf popl nop rcl xchg sbb jecxz in leave add add cltd pushf cmp adc mov into insb loop sbb xor in mov js mov pop test add mov in dec aam loop or bound add gs sub mov xlat jle inc mov mov push sbb leave fdivrl outsb test add pop pop push dec fldenv mov icebp int add xor mov add push adc jle shl in test cld xor mov and sub clc add xchg push cltd loop xor sbb pushf hlt and aaa mov (bad) icebp repz xchg and (bad) hlt lcall loope or xor fcoms lea loopne push sub or and cli adc shl dec push test cmp pop mov pop fs data16 lahf aad dec sbb enter adc push mov cmp popa lock add out add jns and aam in add (bad) jno sub lds orl adc jo pop movnti sbb dec stos push shll or inc or mov pusha xor pop mov adc nop sbb test sbb out push sbb clc shl add push add adc cmp movsl mov add cwtl iret prefetchnta mov inc xchg or call xor add aas (bad) or xchg insl insb and adc cmp xchg pop and andl sbb adc sbb sbb jno fucomip (bad) dec (bad) (bad) popa sbb sbb rcrl subl fwait inc jno jo orb js push lods pop dec add fcomps inc jmp adc std cmp add ds stos or lods cmpsb movsb pop or dec fs pop lock dec push and pop mov fsubs movsl lds mov popf aas (bad) mov jl jnp and inc cmc mov int3 add mov add mov in icebp jo mov lds jg and inc cmp pinsrw add sbb and mov (bad) jb inc lahf push clc popf (bad) sbb mov or jg test shrl or cmc std inc add cmp push jns mov fwait push add xorb or mov pop daa popa icebp xchg imul stc ljmp inc jl add fstpl pop sub inc and mulps mov or test inc lods fsubrp cmp (bad) flds nop inc mov xor movsl fdivr xchg add cmp insl imul jb addb cmpsl in mov (bad) aaa (bad) push inc test cld mov (bad) lret xor fs jb add inc bound mov push push sbb and popf mov rolb bound or cs movsb cld sub dec adcb adc and xchg dec cmp add jmp gs dec add mov cmp and cmp or sub sub xor shrb sub or inc or pop loopne sbb lock sub add bound pop loop jne sub cld add mov outsb xor add ret stos push push sti mov cmpsb adc sbb call or orb scas jecxz std dec pop scas cmp lea mov cmp nop popa sub call push (bad) fimul inc xchg push ret mov sbb lds mov cmpl pop jns and sbb and sahf jecxz dec xchg adc sbb xor dec push mov pop stc xchg adc xchg jge insb int3 inc push inc push pop sub cmp mov adc or test inc enter lea jo movsl popf nop cwtl aas push add sbb sbb xchg mov mov inc les add xchg incl popf int or push std mov sahf (bad) fsub popa in xor xor and mov mov xor test mov push dec popf push pop mov dec je sub nop pop scas inc and loopne test (bad) sub cwtl add mov hlt mov orb mov mov cmpsb fidivrl adc mov popa notb adc cmp add or inc xchg sbb or dec cmp mov faddp aam adc xlat inc jno ljmp test (bad) jne add xlat stc add adc xor loope jnp pop dec push sbb iret inc xchg lahf xor daa sti cwtl adc xorl or dec push and test imul xor aam lcall push jge or (bad) divl loope jl pop and pop fiadd outsl (bad) cwtl xchg arpl sti sbb fldt icebp or jle jne add cli push mov add ficomp pop push sbb or add loop push xchg or fwait cltd mov add add mov (bad) lock cmc out int3 ljmp int fisttpl mov das add cmp push pop pop outsl cmpsl sbb mov data16 sub das add jge push dec push in xchg mov pop into and sbb cld push aaa push aas hlt dec rclb mov lock aas sbb add in sbb lea xchg and jne jg lcall movsb add loope or sub or les mov adc push outsb pop inc ret and add (bad) or mov mov sbb sbb add mov and mov out jecxz dec cmpsb test (bad) ljmp movsb andb mov push faddl xor test or and into popa cmp repnz hlt push mov xchg fdivl pop push addb add mov scas inc mov int cmp push jl xchg les add push inc inc cmp leave xor (bad) test movsb clc andl add ja xlat loopne and inc dec test dec or add fidivrl jo sarl adc nop and mov xchg loop repz movsb aam mov jge jl push push push sub xor shrl and out int3 ja xchg xor cltd add push push mov cmp dec xor adc dec mov and and sub cmpsb adc jb jl mov cmp mov flds mov loopne xorl and xor notb xor or pushf add push dec xchg xor int3 xorb sbb push (bad) les inc mov or scas ljmp xchg sbb adc jo cwtl jecxz xchg push mov add push xchg mov add into repz fwait xchg add pushf jl sbbb lcall push in xor or addl xor in ret xchg add fadds or cmp arpl push jb ljmp add mov in pop mov cmp cmpb add (bad) or jnp sbb mov push std mov cmpsb je adc sub leave jno jl mov xor xchg pop xor shrb add jmp gs xchg pop imul add popa cmp push (bad) or dec mov jmp aad pushf pushl lods adc cmp cmpsl (bad) clc je mov das insb mov les jmp cmpsb clc cmp and mov mov adc icebp xorl push mov mov xchg xor jg in and add movsb adc add cwtl cli les fadds ljmp je or mov (bad) xorb push repz (bad) adc andl or mov jl mov in xorb jne cmpsb jbe (bad) xor xchg outsb out incl inc xor clc lret test xchg push pushf cmpsb pop mov pop dec xchg and (bad) mov push mov inc xchg in in sbb call imul stos out cwtl cmp add pop cmp cld mov pop sbb jo pop dec js push (bad) mov dec jg rolb xchg sbb push mov and cmp sub inc inc cmp or sahf inc ret sbb xor (bad) xor scas pop cwtl mov xor sbb mov sbb add sbb decl xor arpl push mov jb mov sbb add pushf pop adc scas push ds imul fcomps add xorb mov cmpb ljmp bound xor lods call pushf add xchg mov mov add jmp jae or scas push popa or cmp mov push aas imul cmp add out mov jnp jl add mov imul push nop xchg adcb aaa push sub dec cwtl mov sub add adc sbb lea insl cmpsl cmpsb fimul repz mov mov add and and fwait cmp enter sub fisttpl outsl out nop add mov test sti adc cltd out mov xchg addb sbb dec mov aas je mov sub not sub sbbl sbb adc sub aam sbb std jno jmp movsl int3 dec push lea int3 pop mov dec sbb push addl loopne add lock pop or ds push in sub and push lods dec or mov loope push and call nop add pushf rcrb inc adc loopne mov enter not mov dec fdivl dec loope cld add test jecxz or lahf leave or orb or shrb jmp loopne insb add adc xorb loopne into js or or or fucomip jmp inc jl adc cmp dec cmp or test sbb pop sahf outsl sub cmp adcl jge adc sub addr16 fidivr and add cmpb mov lret inc (bad) je push clc sbb or cli pop cli inc jle (bad) xor xchg andl or fbstp fwait push or insb clc push add in add sbb push add call cld loope xabort add dec (bad) rcrl insb pop xchg pop adc inc adc popf sbb pop sbb je sub rolb inc jb sub xor aaa mov dec lock sbb push hlt mov loope dec xchg sbb add movsl es or sub shrb sub in mov dec mov leave and outsb or (bad) lock (bad) lahf cmp test mov add rcrl adc int3 dec mov test sub mov sbb mov pushf loop dec hlt inc inc jl mov shrl or cmpsl mov rclb test out xor inc test aaa ljmp xor data16 jg mov jle mov out jnp leave cwtl add movb loope add rolb mov dec fbstp setne mov arpl adc xchg addb in loop or orb lods call dec int add and cmpsb sub or lock add leave outsb call ret push xor gs pop insl shlb cmp cli rclb iret enter pop xor test test add dec into sub cmp pop pop cs or add or mov xor repnz loope jge es pop mov (bad) mov jle rolb or clc add dec cwtl pop dec or mov mov push pop sbb adc mov mov push call shlb xchg hlt and cmp (bad) pushf sbb add nop mov out add dec (bad) mov out push mov jo fadds and stc add lods xor in mov or inc sub lock jns jae inc cmp inc and dec pusha sub loopne nop jbe inc or lret jl cmp adc dec movsl add xchg pop cld jmp fisttpl inc inc in jle xlat add lea or adc adc add fstpl out cs movsl xchg inc xor add fcomp into push shlb cli jnp xor mov pushf mov insb sbb (bad) add sub subb leave out lret inc cli jecxz sub addr16 mov adc pusha sub mov add and add loop dec xor and inc shlb mov xor outsb pop fcoms xor push popa add je jl call mov stos dec sub dec idivl outsl add loopne (bad) enter std cld jb mov lock pop xor pop in dec mov (bad) int3 pop hlt shufps mov data16 and fnstenv add push push cmc sub (bad) aaa add or push jle jno inc flds pop popf rorb cmp out subl sbb push mov mov repz mov xor add pusha mov sbb and es mov addl fnstsw (bad) aad arpl mov sbb pop mov addb sbb push test jne mov jmp jns sbb push leave sbb js stc stos inc adc cwtl loopne dec mov mov icebp enter insb pushf cmp adc push dec je and mov jge icebp add sub int data16 adc rclb aad sub enter andl jecxz add sbb add in inc push shrb jmp xchg xorb mov inc inc xchg enter ljmp test sbb mov push call mov xor enter outsl lods add adc jae fiaddl add iret sbbb or adc pop (bad) cli ja pop lods push mov pop adc adc mov xchg or jo fdivr push pop nop (bad) jo add je add mov sbb and pop add arpl add js in dec insb mov jo add inc or sbb je enter (bad) pop jg push lret lods and rcl sbb xchg test push jmp icebp rolb clc js lret dec mov sbb pushf cmpsl push pusha out pop in mov push push xchg pop xor fs sbb sti dec mov adc inc loopne ljmp jecxz jbe pop lret mov enter lods imull pop (bad) mov adc pop cmp aam xor mov adc repz push inc (bad) sbb out test pop pusha mov fwait sub or add sahf es lahf loopne sbb icebp cwtl and cltd push push mov mov xchg pop add inc lds jl sub xor push in and push and xchg cs fstl sub cwtl or pop (bad) xor int3 jmp (bad) inc cmp aam xchg xchg (bad) push in xor sbb dec cmc or inc sarb sbb pusha ljmp loope xchg pop cmpl add in nop add mov adc xor xor icebp and push (bad) jnp cltd jl lock add popf sub mov mov fcmove pusha pop test mov jne push ret insl nop pusha add xor add cmpsl xchg add add fbld dec es arpl (bad) call js push add jbe adc and out adc and mov sbb and cmp ljmp dec inc adc cmc jle pop in cmpl call clc xchg outsb xor out pop mov add cmp xchg adc add add xchg push sar sub lods adc std stos pushl (bad) lock es xor jl call mov adc jo je js add sub clc add cmp pop add aad ljmp mov adc jmp cmp push add sbb adc call jne jns mov sbb pop xchg add int addb pop fxch pop leave dec mov sub lds push fmulp xchg push lahf jo lcall sub daa divl and xchg aad inc fs test and jae or mov (bad) mov sbb cmp lea test ja mov imul mov adc and popa imul cmc loope in loopne mov ss insl adc aas xor rep int inc ljmp nop xchg aam and or rolb in in lods or daa aam xchg jo (bad) shl pusha movsl test mov out aaa sbb cmp pushf nop mov ja add rcrl cmp push lds xchg mov in (bad) push and push insl orb or adc xchg data16 pop mov movsb out mov nop add nop popa jmp repnz mov jne or jbe pop adc pop mov pusha sbb sbb mov sbb mov sar ja lods mov sbb nop add lahf std icebp mov imul mov das pushf jge pop rcr pusha and js insb sub add shl jp andl pusha add pushf aaa fldl mov in mov cmp je pop (bad) clc xor mov jne mov daa add out lcall add imul dec cmp aaa pop pop rolb jbe shl adc push ja scas sbb push lods loopne lret add and rorb subb arpl daa xchg add pop stos vpabsq mov xor cmp leave jbe cld popf icebp and rorb push notb (bad) ja jl add shr xchg pop movsb sbb add or ja push xor lret pop push xor rclb pop (bad) mov xchg rcrb push sbb shl (bad) sub xor in sbb xchg push dec xchg iret adc add dec or mov lods inc sbb fsubl mov and bnd jl js sub adc dec rolb cmp test fildl sbb out or fimull mov pusha cmp mov es adcb sbb incl xchg or cld and sub jns push cmp addl jp arpl hlt sub mov pop fcmovb shrl cmc dec mov fs sub and ret int bound pushf cmp add lock sbb int3 or mov xor subl or push add mov fadds dec mov outsl add inc push ss push jbe pop lock dec inc xchg sahf loopne js pusha test pushf or popa jl imul movsb lahf pusha xchg add lcall loope or (bad) sbb inc and sbb orl mov dec xchg push pop jno mov add pop fisttpl mov out ja push sahf insb jae dec sub push out loopne fs mov (bad) jmp lret inc add push add jge jae or flds (bad) and mov pop push mov and jno jmp movsb test frstor cmp push add test jle sub xchg jo cwtl sub push inc mov sbb push or lock mov fs subb and cmp adc push jbe pop cmp (bad) arpl leave int rcrb adc sbb aad add mov sarb loopne xchg nop cwtl mov mov shr nop push sub jge (bad) xor xor lds push mov or push inc xchg adc or pop insb xor repnz nop jecxz subb popf adc adc mov add sbb into movsl xor cmpsb fwait rolb push mov arpl pop xor cmpl adc popa or (bad) mov xchg xor adc arpl fs xchg (bad) jae repz adc sbb lret jl add and cmp sub push in push sub sbb inc push das (bad) add rclb rcrb out push cmp jbe lods cmp xchg cmp roll loop lock pusha movsb cmp mov sub mov test xchg std xchg lea dec aas xchg lret xor jae and and xchg and sbb mov mov (bad) adc or sbb add push mov fiadd lds add in jno rcl push movsb mov lret psubusw popf mov jne loopne adc int adc mov xor push adc arpl rolb ss out sar xchg mov add dec lods sbb popw sub rolb nop (bad) and jp add push cmpsb fidivr xlat in add inc test cmp adc mov (bad) fistp clc xorb xchg and dec ds add jnp mov fwait mov push jge add jbe push dec or fiaddl sbb scas and sahf push mov outsb mov push mov xor pushf xchg (bad) fcompl sub jne fsubrs mov sbb add lock cs divb or sub sbb std cmp add add loopne xor sub adc dec jge push rcr mov xor (bad) icebp fwait inc es subb pmaddwd popf cwtl dec mov clc or enter stc fsubs mov sbb aad call out (bad) hlt lret repnz je add arpl and jl add dec std ror lock adc pop aam cmp cmp inc dec push lock pop inc sbb mov pop add sbb aaa iret sub jne lods movsl xchg sbb repnz push cld xor mov inc or mov inc sbb js or sub xorb movsb iret jo pusha mov dec outsb add xor add sbb test out stc and mov pop or xchg mov sub mov and mov daa push add add jne jae sbbb fstps and sbb roll (bad) sbb lahf and or cwtl add test bound repz movsl add xchg dec push sbb sar in add push loope fldcw adc ss (bad) shr adc add hlt xchg jno das adc test xor out dec loop int (bad) stos loope and pop out stc mov xor shrl aas cmp test sahf sbb out adc into push out or pop jb add pusha xchg ret movsb adc and add jge stos (bad) dec cmp mov fisttpll lods xor lea in cmpsb fs adc or call lock outsb dec shrl aam cld shrl adc mov nop (bad) es pop imul aaa jl adc mov xor sbbl ret inc sbb lock jae arpl cmp or stos mov cmp ficompl add pop and cwtl jo pop jmp mov fsubs call hlt adc dec leave data16 sbb push xchg sbb xor and pop add mov xchg xchg rorb add cld xchg cmc xchg lcall add and mov dec dec sub ds xchg and push rcr dec movb mov in cmc sbb push icebp pop add mov xchg cwtl fs pop aad push test out push jecxz dec dec cld lds dec jne ljmp pop enter or pop cwtl lods cmp push xchg jns mov and push xchg fsubl sbb jno jp cmp bound adc out fcomp dec push push sbbb add xor fdivrl pop mov sub cmp icebp lahf es into insl pop cltd and rolb add and int3 cmp and add cmp roll pusha sti loope xor sbb (bad) sarb pusha movb clc pop lahf dec dec movsb roll fimull jb aad adc pusha cmp and (bad) in pop ret mov mov mov dec call insb sub (bad) cli dec loopne cmp cmp jbe aam popa mov sbb jae push inc xchg mov push adc and imul and jne in adc lods fcoml push fadd mov scas add dec sahf inc mov insl outsb xchg inc pop xor dec add fcmovnu ds sbb xor scas leave adc out pop nop xchg mov sub pop push or or aam cmpl or cli pop (bad) icebp and clc xchg and repz int3 lret rorb clc jne push jg and cmp dec aam and addl mov or sub insl ljmp dec cmpsb pop ja mov lock hlt aas nop pop or or add dec adc add jl xchg mov lods add hlt (bad) pop dec jmp mov enter js xchg test inc jecxz leave push push push push or lret dec push add xor jmp mov sub les inc pop xchg sub pop dec add add or out xor jle movsb adc jecxz mov sti in adc push lods cmp aad mov or sbb test test jae pop js or mov add xor adc jno push andb icebp cmp subb int (bad) out loopne add jg imul fwait add call xchg idivl fdivrs or fcompl cmp jle psubsb add xchg xchg std cwtl je movsl mov add xor inc dec cmpb nop add inc int shlb and cmp jnp nop add or xor outsl ret adcb sub (bad) rorb sbb inc imul daa sbb shl notb push inc or sti mov and sbb xlat addr16 xor mov clc mov adc inc pusha and sbb xor loop add sub test mov loopne cmp cld xor adc cmp lahf sbb or add sbb and xchg addl lds insb mov lock and (bad) and jl movsl aam sbb dec or int fcoml adc inc enter or jmp das dec push cwtl add xchg stc ja call imul jle xchg (bad) adc mov mov jae cmp shll test dec or mov xor icebp xor sbb mov aad add xor std adc xor push mov cld in call dec movsb ret sarb add shl xchg cmp adc xchg lock insb lock mov xor inc push rorb adc (bad) aam (bad) fs mov lock push test jb les and mov stos mov and sub sbb xchg jno add dec inc or repnz push or hlt pop jo push xchg xchg jmp fiadd rcrb pop pusha out push add or mov lret subb dec test aad cmpsl test enter dec cltd inc iret sub addl daa sub repnz dec jo cmp aas fcompl repz ljmp int sbb pop movsl rcrl mov out fadds fstpl dec xchg fmull mov js add stos sub cld mov sahf inc stc xor adcb add jge or ror add push stos jl int3 cmp push lret out sub jo sub div jmp pusha jge call test cwtl push pusha aam call push scas data16 inc mov pop pop hlt jle xor cmpsb arpl push fdiv sbb mov pushf aaa movsb add sub mov hlt jns les push sub fwait in cmp adc mov ljmp in subb sarb add ja movsb (bad) js xchg movsb xchg dec stc inc data16 gs push xor cmp ret mov nop add mov cmp insb and daa sahf (bad) pop add movsl xlat les fidivrl pop cmpl jg mov add insb clc fs aaa (bad) dec ds mov jae add ljmp mov xor sbb fiadd imul enter sbb xchg insb rcrl mov dec mov rclb adc rorl push mov nop sub sbb cmc pushf add push jg sub mov adc mov jo js packssdw xor jle mov rorl push mov shrb sub loopne sbb mov fcom push and add sbb loop jne pop fwait push sbbl addb adc xchg inc mov add mov lcall into dec jp out stos lcall inc push je repz std ja ljmp loop lock inc push inc test add mov xchg jge ss es enter inc ret dec insb xchg push stos push (bad) cli add pop repnz loopne or mov enter mov jno sbb or nop pop dec mov push in pop push lods pop lcall ret out hlt aam or mov jle and mov jo (bad) mov mov pushf lret adc nop sbb (bad) je push cmp pusha adc lock push (bad) sbb sub cmp cmp add call mov and ds movsb xchg xchg xor scas jmp daa adc adc in fdivrl and clc jae in jns sbb sub dec add addr16 enter nop loopne fist popf pop dec les int3 dec popa mov dec cmp pusha adc inc push sbb icebp cmp mov in or leave stos (bad) fs xchg sbb pop or add mov and xchg sub pop lock or push test pop inc mov xor lret dec add sbb jne les add adc xor jno push pop loope sub subb mov (bad) int lret out arpl xor pop ss cli lods cmpsl (bad) or fadds add shrb adc or in push jmp iret xchg push lods jae adc push fiadd and pop pop add fwait loopne lock loope xor and cmp out inc mov lret cmpb adc leave lods test dec xor pusha fildl adc aas pop inc adc xor lahf xor adc add in stc dec pop imul pop adc mov test lret dec fwait and mov sub mov sub lcall dec rcrb das sbb mov push das push shlb sub test enter mov pusha negl pop test inc cwtl xchg cmp sbb pop in loopne cmp aaa test xchg mov (bad) cwtl rorb loopne push add sahf aaa cmp fs push adc test push arpl mov mov movsb sbb inc adc or jg cmpsl lock push scas xlat pop sti fadds insl mov into movsb cmp mov push movb call adc push cli mov mov xchg cmp dec sbb cwtl fcoml leave mov adc inc add jo es insb add pushf pop lea sbb and xchg dec mov xor lds xor jge adc (bad) int xchg add lds dec add push add call sarb push and aam orl enter in add sub jo xlat (bad) mov int xchg inc adc andb pusha inc sbb icebp sbb int out out adc xor dec pop cmp mov les mov test and packuswb mov push adc les lret jo pop add inc sbb mov lods jle ja add push mov mov push inc adc mov add fdiv jb mov sub hlt push push out (bad) jae xor cmp sbb repnz mov dec (bad) (bad) or mov jge sarb add pop mov insl sbb fcoml adc lcall sub inc fs das mov jbe rcr incl iret push sbb xor (bad) or mov or icebp mov add insb jno jp lock and xor push lret fs sti and je jp jne movsb jns and jo mov jb cmp lock aas dec adc or jno mov lret mov xchg int3 add mov inc hlt dec imul addb clc mov lods pop aad stos ja ret mov add sbb inc xor lahf pop cmp mov popa inc jnp sahf aad icebp and ds mov iret xor inc pop or addr16 sahf fisubrl or inc int mov (bad) or (bad) jbe add fstpt pop xchg push lods lret dec out xchg enter mov sbb ds lcall and fisttp cmp cld pop xchg adc mov and ljmp push aaa xchg clc gs pop loop xor mov lods add mov and and add ret sbb and and and fimull inc adc add scas repz mov aam pop add fwait aaa ds push ret rcrb int jo pusha jb xchg jne xor test sbb call movsb push jl roll fsubs inc cltd cli mov popf dec mov inc fwait add dec pop scas les in lahf (bad) xor and sub dec cmp push pop lods movsb push imul push test push inc out pop out and pop jno or push xor popa loopne xchg and sub ret dec sbb ljmp cs shlb dec adc test sbb (bad) mov fadds mov jnp sbb movsb inc out popf xchg dec int xchg inc or mov mov mov mov fldl2e jmp xor pop pop add lret sbb sbb jmp test dec add add movsb xorw shrb pop insb mov pop mov inc aas lock fdivr arpl movsl jmp jb or arpl push idivl adc stos outsb adc repz inc xchg push and fcoml mov add sbb sbb mov test sbb les testl cld inc ret data16 cwtl scas adc sub adc test mov rolb inc js cmp stc sub ds xor sub xor aam mov cld push cmp push fstl pop xor in sti gs movsb push mov insb and iret pop decb or jne adc popf xor xorb inc push cmp sbb daa xchg pushf inc lea push hlt lods psubb leave xlat cmpb loope jo ss adc int3 sub subb mov jno js jg aam nop add stos adc sub es sub std aam jg add (bad) cmp out popf mov mov xchg es jmp int3 cwtl mov mov mov dec inc adc cld adc inc cmp stos cmc adc adc imul in sbb jbe stc add fisttp repz andb add push push jle lahf xor mov or mov mov or ss insl jl inc (bad) jo and sub mov xor imul nop int3 cmp and lods js add rolb mov jg or mov pop add rol repnz adc js stos das adc scas or cmp xchg add inc mov out push fs pusha mov ss push dec mov pop test jmp adc xor push lahf mov (bad) fidivl add dec jae mov add movsl cmpsb stos pusha lock push lret std mov cmp dec cli (bad) div orl xchg inc push (bad) adc pusha pop stos (bad) pop inc and jnp adc add sbb les (bad) inc and mov xchg mov clc sub aaa loopne xchg cmp frstor pop xlat xor push mov dec cltd jl pushf aaa nop dec adc and pop and dec xchg dec ljmp cli hlt inc inc aam sbb sub in or sub dec inc adc je sbb dec xor fwait insb inc and and bound cmp je xor mov fisubr mov inc test stc dec jl jl jmp xlat mov fldenv les scas dec mov fisub dec je xchg xor in lahf adc sub add aad addr16 sbb push jge sti scas cmp fwait leave rcrb rorb loopne (bad) rorl enter ret sarb jbe incl mov and fildl cs xlat iret ds push fs loope sbbb jp xchg jecxz (bad) daa adc and push lret inc (bad) loopne nop subb popa clc rorb xchg (bad) jne mov (bad) movsb push out push out or add loop or xchg adc and pop add cmp mov push lods add into test nop pop fadds int3 mov xchg andb pop push adc lock bound pusha insb mov popa push cmp lds jns sbb loopne sbb dec and mov mov add pop testb clc adc and test push dec dec js xor xchg xchg movb and jne inc jo adc push xor nop sbb icebp xchg push mov or pop aaa add enter test mov mov mov or or inc pop int mov lret or and out nop adc fimull arpl or aad xor in inc mov fisttpl push adcl out orb xor xchg pusha incb movsb push or mov jae add in xchg lods (bad) mov sub jne cwtl jns in mov jl nop dec lahf push aad nopl and xchg mov outsl sahf inc aas xchg mov icebp test jmp clc inc xchg mov pop scas sub cmp xor or (bad) and inc call push sbb jne dec xchg mov test aas das into stc xor sahf popa push lahf bound aam or icebp and rcr dec popa or or push pop inc cmpsb imul jle xor xchg in fildll mov clc sbbl or daa xchg sbb leave sub popf addb inc mov xor lods stc add iret movsb push outsb xchg scas dec pop (bad) rolb and cmp movl stos push ficom sub fildll mov pop xchg push and enter add or cwtl int3 or (bad) xor xchg shrb sbb and dec inc fsubl and (bad) dec subb cwtl cmp add pop cmp rclb aaa and mov sahf add ds pop loopne lds mov dec add pop out inc les and inc and adcb cltd cmc je fs xor shl xchg mov in mov int3 push stos sbb loope or mov mov pushf add int3 inc sbb test jl es adc mov push mov aam push test mov sbb sub sub inc pop mov call hlt rolb rolb mov and int inc popa push cmp js xor pop jg xor fdivs cld add and mov lcall popf sbb ljmp and loopne lods pusha call lcall into or mov sbb in xor sbb popa orb xchg mov push mov in orb or (bad) mov test dec int insb push add or sbb pop mov insb xor xchg movsb sub mov adc loopne rolb scas adc fcompl and or xor je orb insb insb (bad) dec mov add imul mov and add mov pop clc mov push movsb test push int pop pop fdivs bound sahf lock or mov jmp scas xor push and cmp sti sar (bad) rorb mov adc xchg aas rcll mov pop adc mov ret or dec add lar pop hlt js fs or fwait (bad) or jo cli add jno sahf push inc lock add (bad) clc pop roll mov insb pusha les pushf push add inc fisubr repz adc dec mov lcall movsl repnz mov enter push jmp sahf mov add and into or xchg stc cmp daa adc lea push mov mov add lods fs (bad) loop cmp enter jo sub sub push xchg inc dec test or sbb or rclb xor fdivr mov mov in js inc ss sub sbb loopne ret sbb add int3 cs mov cmp sub out addl push cmpsb lods dec outsb ja jmp mov icebp dec loopne sbb jbe pshufw stc subb pop add pop cmpsb sbb scas xlat pushf push es mov addb addl sbb add test mov jp pop rolb jo xchg inc sbb mov jmp push movsb je,pn cmpsb rolb add (bad) lock sbb add sbb jmp popa or movsb arpl dec scas add mov lcall jp pusha add sub or and sbb lods jno cmp or add loop and stos add shr add icebp pop fnsave scas nop xor and pusha xchg loope shrb setbe mov xor jg cld fs dec and sbb dec cmp push roll aam (bad) roll lock dec dec cwtl add and mov mov enter cmp shlb add testb push mov mov aam in mov inc movsb push add lret arpl andl and or dec popa stos insb pop xor mov mov inc add aam and in fdiv insb pop jns xchg fadds mov add or ja add xor push insl pusha mov pop das inc flds pop scas out test adc pop lahf loope int add adc shrl (bad) push leave in (bad) or xor je xchg xor imul popf push push xchg or out xor inc xchg add xchg (bad) fsubrs jecxz js addr16 outsb dec and scas sbb dec (bad) push add sahf lret jle mov xor lods es popf inc ljmp scas test pop push ret nop incl jno in (bad) xor std add mov rclb mov clc inc pop cmc xchg mov insl fs popw adc and pop mov sbb test adc pop movsb or stc jne outsb rolb inc add dec inc xchg lods arpl jg lods adc subb popf loopne add xor cld pop arpl add push mov aad adcb gs mov sbb (bad) pop xchg pop jns sbb inc mov test sar bound lahf out jo jl nop xchg add fidivrl jae jl add mov jle add inc test pusha int out sub xor mov push iret mov (bad) shrb jbe cmp in or dec movb inc hlt dec lret inc nop xchg rolb lods mov sahf enter (bad) shrl add pusha xor adc jns in or jno inc fadds jbe jp fcompl push pop inc js and stc arpl dec add mov into pusha nop cltd jecxz sbb jno movsb add imul mov and (bad) dec xor adc ret pop cwtl mov and insb and push fs (bad) insl and (bad) test ret or push xor les stos push pop sbb inc rcrl or ss sbb flds mov dec lods enter (bad) in mov cwtl add (bad) cmp test and sub mov cmpl jno pushf daa sub lret hlt inc sub dec outsb or int adc enter or xchg sub cmp or dec je add or mov mov adc sti mov mov jecxz popf int3 mov movsb lods outsb cwtl fdivr add jbe in xchg dec xchg ret sbb loop into xchg adcb jo cmp xorb je imul sbb add or mov mov dec mov and je jl shlb cmp mov xchg dec inc or stc add inc xchg jne xchg stc lret and and int dec and xor fwait outsl mov jl (bad) rolb push dec sbb sbb fdivs movsb mov scas dec add popf gs mov aad xor lea repz sti push leave mov mov mov dec negl add test mov rcr sub jbe hlt movups inc into cwtl orb dec adcb cmp sbb pusha loop add dec sbbb (bad) jne inc cmp in out int3 adc mov les pop cwtl std fcoml pop add test jecxz xor xor sub inc sub and mov ret stc mov test pusha pusha fdivl mov in test mov mov dec pop sbb cmpsb add std or push cmc mov or push loop imul mov push or xor lds add xchg out fs cmp inc insb push pushf fsubp clc aas nop or sub cmp pusha xchg sbb loope inc pushf int and cmpb add sbb or jno clc inc xor cmp iret and js dec xchg adc jo add addl jecxz mov movsb orb inc inc rolb aaa adc sbb stos cld shlb add sbb in leave add pop jae jne insb shl pop inc cmpsb call enter andb cwtl outsb inc out in and push mov inc mov sub in mov popa pop pusha insb inc icebp push and sbb dec (bad) dec inc xchg mov mov mov push clc mov inc lock and hlt or adc cwtl stc and xor aam les mov loope fwait pushf add arpl cmp dec fnsave mov fwait sbb int stc lret add cs imul cmp inc iret cld dec mov adc cld and pop clc out jle jne push pop xchg loopne mov scas xchg adc mov fmull mov lds movsb push imul push mov fwait mov xchg inc mov xchg into sub adc movb or repz je mov test lods or icebp ret dec cmp leave sub and and loopne int3 jb sbb aad and nop add lret (bad) loopne fbld add cmp js pop and adcl nop dec mov (bad) cmc inc or inc icebp mov das mov lock jb xchg lods sbb pop imul push data16 outsl inc mulb test push rcl mov movsb clc insl pusha mov out and cld dec or add sub pushf mov mov lods imul loopne hlt pop js clc int3 dec popf sub cmp lods mov cld cli adcl enter dec add add sub xchg push test aaa adc lods or fwait bound cmpsb mov outsb and mov mov mov bound rolb lret (bad) jno sub dec nop push leave imul cmp fcompl jbe dec cmp mov pusha pushf decb out cmc and into add pop insl xchg cltd roll push popa nop mov xchg add arpl lock pop mov loop pusha fnstenv movsb add testb and xchg push and xor pop sarl out cmpsl andb aas cli popf push sbb into mov int3 cmp mov sub adc pusha mov push dec cli jecxz push or nop fcomps mov scas js mov dec ja cmp mov nop pop into fcompl fcoml rolb xchg pop adc add fs loop loope scas add fisub bound mov mov xor mov (bad) add sbb push mov add ror xchg sbb pop repz or pushf sbb jno gs shll subl cld mov (bad) enter mov lahf mov jmp push sbb inc inc hlt mov or xor sub jnp nop or (bad) adc shl jo or jns scas sub and imul pusha dec or nop sbb rolb xchg daa jne lds jno fistl mov pop repz add inc add push popa fmuls pop sub lock sub dec xchg dec subl inc or mov xor rcrb add and or fs inc sti loope cmc or and inc pop repnz or mov pop adc and mov jno push ja sub aas and and inc enter repz data16 out leave addl adcl push lahf cmpsb sahf rolb test fs jns add rcrb cmp enter pusha push pusha push je cwtl mov rorl fdivrl mov es mov adc xchg lods mov dec sub pop pusha or cwtl lock loope rorb sahf dec lcall imul jo sub je scas pop mov inc es xchg insb or inc or int or rol les cli lcall enter add sahf ret bound push jmp jl sbb pushf lret lods das inc cmp push cmp (bad) mov clc leave add mov jb and fwait adc or push (bad) xchg rcr xchg jns cltd call push leave and std insl xor lea pop andb les add dec icebp dec in in dec dec xorb inc mov or sahf cld (bad) lret das (bad) dec mov in sahf sub adc mov mov jae xchg jno test push lock rolb add arpl icebp es or push mov flds inc xchg pop stc inc iret clc cmp cmp adc xor in test jno jo leave std adc inc xchg cmp enter pop add inc lret sub nop cmpsl xchg adc test sarl lock adc add cli sbb int3 pop lds call je push sub lods inc clc fmuls insb jo,pn aam mov (bad) dec sub jle mov push loope adc out roll add mov sub fcomi cltd (bad) cmp cs cmp lock and (bad) add jl frstor jns aas fs add pop lret adc enter imul enter or bnd pop push (bad) les inc add insl (bad) movsb leave enter dec pop jo hlt push mov fstps cli into fcoml mov lds outsb mov sarb cmc dec or mov inc ret add divb jl (bad) clc inc pop pop xor gs mov pop xor cmp (bad) push add jne add xor adc cmp cmp cmpsb push push shlb cmc cmp xchg scas dec popa mov mov push fadd ret mov pop inc call lcall dec xchg movq or pusha adc mov mov or nop inc lcall scas out ljmp jne xchg jno lock push pop inc pop add mov mov stc rolb insb mov add mov dec pop jl pop (bad) push nop aad repnz xor into or adc and out movsb mov mov iret orl sub inc lock clc hlt and or inc jmp xchg test jne sbb loopne mov or pusha jo or ss push push sub rorb xchg mov movsb xor add sbb mov decb outsb mov add jo lahf mov lock test sbb popa icebp js lcall pushf imul popa jns cmpl xor mov lds jg mov push in mov jnp mov and mov flds xor mov shl aaa add bound inc xchg mov test pop jl mov sub pop aas adc inc mov push xchg inc cmp push cwtl mov cwtl aam imul aam inc js push icebp jae mov in dec movsb mov fcoml outsb inc enter int das mov fdivs mov add test sarb rcll lcall push xorb imul pop (bad) or mov pushf bound push test xchg sbb mov and cmpsb adc jns or js inc push dec xchg push orb jle jp in cld mov incb adc and ljmp inc (bad) jne in jae hlt jns in enter push aas push mov scas mov push mov or ja dec cmp dec int dec dec ja repnz xchg ret loopne pop sahf and inc rcl int3 test sub rolb xchg icebp mov xchg loop inc xor adc test or push out lret xchg pop mov aam mov add pop add push jg adc dec mov add push pusha or add jl fwait test pop jle jo cmc xchg push dec adc jecxz cli mov or push inc test subl test mov add lret hlt sar push roll gs cs adc mov sub scas dec rcll int3 and pusha mov dec int dec fwait movsl scas (bad) jecxz (bad) cmpsb mov test mov cmp mov mov repz mov mov mov inc bound add xor imul adc nop mov mov dec mov pop sbb daa xchg insb pop push in xchg faddl jae gs imul ds (bad) lea add sub mov xchg mov jnp divl cwtl adc and mov and xor jecxz fild sub mov push in sub xor psubw sbb xchg mov (bad) pop dec dec mov pop jne repnz fnstenv insb lods jno or gs inc stc xor enter andb mov and jle mov dec and cltd add test xor dec loope add push xlat adc ds inc or ret xchg dec xor add dec jb mov lods add cmp data16 inc rorb bound inc cmp push aaa test inc push mov stc inc push fwait add push (bad) lret les sub sbb xor cmpsl insb jp imul add fidivr mov sbb jno adc dec jmp xor push pop mov dec sub push inc lahf adc xchg jl xchg repz dec fistl dec inc aam outsb mov and arpl leave shrb or loop shl mov add stc cmp push mov cmpsb dec shr or push int dec xchg add adc out call jmp cmp pop adc sar aam mov shlb (bad) repnz stos adc add es outsl xor (bad) xor mov sar mov cwtl les call popf pusha push cmp mov roll lahf xchg cli fs movsb jno inc fnsave int jo or aas mov test fs sbb dec cli daa push sub add out daa adc dec leave xchg add push (bad) dec hlt arpl mov push xchg push fadds xor test mov pop cmc insl inc inc inc mov ja daa jne ret push lods hlt mov push fsubrl js test mov cwtl mov push or fdivs les cli jae cmpsb dec sub xchg fs and shrb bound lock add out sbb or sub sbb das sbb (bad) fdivl lret (bad) sub mov mov pop loopne test sub push xor sbb enter pop pushf mov (bad) xor push mov (bad) mov xor stos pop pop adc mov adc inc mov cwtl dec and fadds out mov adc fiaddl mov mov movsl mov aas push xchg cmp or jge loop stos out repnz (bad) xor js stos in mov add mov bound repnz popf mov mov add das ljmp or imul lret loopne (bad) jp add sahf adc nop imul sahf add sbb add aad (bad) les pop pop in clc fnop adc leave cwtl aas add stos xor testb jle add sbb int pop lods jmp pop repnz mov dec add aaa and inc and add lea es imul add sbb add bound sbbl ret mov subl cmp adc iret adcb and mov cmpsb sbb sbb or or and cmp imul add jbe inc mov mov and add (bad) in or ret push adc mov jge cmp sub xor or pop mov mov in adc imul lods jb jo out pusha movsb push mov add push mov jnp icebp out les ret lods dec push or aaa or or fbstp aas jb insl in dec mov jmp insb cmp sbb out pop cmpsl inc sub (bad) in rcl sbbb cmp or dec nop les enter sub sub add push fs pop pop sbb hlt and fcoml pop adc enter shlb push lods xorl add adcb xchg xor call adc fsubl movsl add mov ret xor rcr pop pop push aaa add pusha xor dec stos in adc mov jle int aad cwtl shrl or loopne pusha or jle dec pop ret cltd and dec icebp jp xor ret pop cltd inc adc adc test and mov push popa add xor jmp rorb (bad) icebp (bad) mov adc pop lods dec sub orb sbb daa jne imul push lods cmp sbb dec mov cmp inc inc and and stos mov inc lock mov push add fisubr bnd dec arpl js jle fwait mov cmp or stc out dec sbbl sbb xchg clc add xor push test jl or bound repnz mov mov mov lds inc add xlat fwait stos lds sahf lcall and pop mov adc sbb xor mov sbb add test test dec loopne xorl rolb fistpl out popa mov popa rclb mov popa mov and pop test pop dec enter repnz icebp pop test inc in movsb cld and sub mov lcall cmp cmp add mov enter fdivrl iret mov xor jb inc (bad) in dec xchg pushf push or test sahf mov pop cmp sub rolb or loopne jbe mov mov adc mov js fimul fxtract xchg dec push insb push mov les sub add arpl movsb enter sub mov xor cmpsb push mov cmpsb pushf loop xchg data16 and jae jnp xchg or pop jl sub inc and pushl pop sbbl cmp ret jmp mov rcrl sub mov movl jmp mov jl cmc add or sub flds lret sbb add xor add clc (bad) leave xchg sbb sub adc sub adc jo popf push sbb pop and movl loopne xor add mov fiadd inc add and or mov pop mov jge sub test push xor in inc pop and add ret lret xor incl cld outsb mov mov push xor xor loope mov call in push inc ficom push push sub cwtl or inc inc push ret sbb pop js add or (bad) xchg and mov fsubrs sub mov jmp hlt fisttp add jmp add push mov push mov mov cmp loopne mov inc sub and push sub jecxz or xor gs ficoml rclb popa pop xchg insl je mov pusha dec and out out add popa push sbb test cwtl dec (bad) aaa pop adc pop xchg mov out je je stc xlat or gs xor add rcrl repz cmpsb ja lahf add dec inc cmp icebp stos inc dec pop sub int3 sub loop sbb arpl add pushf cltd xor in cmp lods js add push cmp int3 sub cmpl add aad (bad) inc (bad) mov out test sbb xor mov sbb add fs pop mov xchg divl dec pop and gs out pop fistpl dec lods mov int3 sbb jmp lods js insb mov movsb pop (bad) cmp mov fisubr add negl in xchg pop popa cmp mov movb int fs pop cmp movsl xchg (bad) fild out jg adc shr mov jp data16 pop sbb outsb std mov sbb in or ds ret adc aaa in cmp pop and mov dec or mov inc cmpsb sbb push mov call xorl lcall fsub (bad) sbb icebp es dec sbbb xchg add lods ds jns repz (bad) repnz add fs imul cmp or rcrl pop jl push push adc push das sbb and add insb xor cmp xorb xor xor xor dec pop incb dec add dec xor xor add js push inc inc in sbb xor xor xchg pop ds mov (bad) xor and mov sub adc jecxz add outsb negb sub and add jo sub lods cmp xor inc lock mov fisttp jge mov lock lret and push (bad) xor add clc aaa xchg pop fcoml je test movsb mov pop mov stc aam out lock fisttpl or shll ret daa bound cli inc adc lods das push ja add lea test adc lcall dec cwtl (bad) and add and dec js pusha push mov cmp add and aas nop pushf lock xor sub sarb sub fmuls ret jno or adc add mov push cwtl js mov jmp dec lock adcb out cmp cmpsl and mov repz mov out adc sbb das fcom and adc cwtl movsl cmp push sbb ret aad push lods push dec sbb movsl hlt inc mov xchg ret cmpsl xor sbb add incl add pop inc out add fs cmp and es xchg (bad) mov and inc push mov les mov cmp (bad) xchg mov imul xchg pop add jb les pushf adc inc cmp stc out andl cmp loope add pop mov and repz testl jmp mov mov pop xchg lock jnp and pusha cli and ljmp and push sbb inc (bad) fistl ss inc or ret mov jecxz and mov aad cli and int add xor mov sti dec jo and inc pop rcrl pop push sub xchg pop pusha pop lods outsb inc enter daa and sbb fisubl (bad) test and push rolb clc sub popa cmp jo mov xor add rcll push insb into cwtl mov andb xchg mov (bad) or popa push mov call inc and sbb jp push repnz fmuls sbb mov subb stos je aas lcall mov in mov syscall stos push sahf add int3 pop xor mov scas leave sbb cli cmpsb xchg insb jo or mov xchg enter adc in sbb cld enter jo xor mov popf mov inc push cld cmp xor mov loope xor xchg adc pop (bad) pop je mov insb xlat jnp in add in mov sub cmp mov pop sub lods les cli inc lcall add test xor mov fisubr or js inc or fcoml or les cmp mov cmp hlt mov fisttp sbb or add push push mov jo adc dec sahf mov rcr mov inc ret dec fcomps int3 out aam xchg mov add nop mov and xchg sbb xchg mov jo sub and int3 pop adc sbb xor loopne add mov mov mov or pop dec jp sbb xor pop mov or cli xor pop jne jo ss rolb sub hlt adc popa fbstp pop mov popa cmp add fstpt cli aas out or jno,pn add std popf shlb sub fs or in in xor out jmp push xorb out rcrb mov push hlt in test push mov xor xchg pusha xchg jg sbb inc xchg adc xchg or test and fimul xor cmp cmp jp xor icebp fwait loopne stos (bad) cmp sbb xchg mov mov and and jbe adc xor loopne xor push loop roll test mov add out xchg clc add lret stc xor dec fs sbb les sub pop xchg pop sti cli mov fsubs lods fsubl loopne xchg (bad) xchg jp dec add popa ret mov mov insb test cmp fldenv mov xor les das add fs mov clc inc popa pop xchg dec jb xor rcrl push mov sahf mov das mov aad and test out mov adc lea int3 mov inc int3 js push mov adcl jae inc callw or mov test fs mov mov lock test mov xchg call loopne push mov adc mov xor add sahf fdivs mov adcb lock sbb xor inc mov push ror xor and sub xor cmpsb or and add pop mov pop fs dec xor push mov push scas mov mov mov pop test lcall (bad) mov insb cmp cs roll mov fadd ret fist movsb dec in movsb adc ss sub inc xor pushf sub push jmp add enter add in mov jns int3 ss add pop pop sub movsb adc pusha sbb xchg int3 je stc adcl sti shll xor lahf adc ret pop mov xchg push enter sbb xor and ror mov fdivr in pop outsb (bad) jnp sub inc lock or pushf and xor insl (bad) pop push movsb xor mov cmp rcrb xchg xchg mov adc cmpsb sub fidiv fsubl xchg or push xchg push add (bad) dec dec adc fadds mov pop ds inc cmp int3 dec push sbb and xor and movsb add mov movsb sar ficompl fwait push clc sbb andb out rclb fisubr jns loopne inc mov loop sahf lock fs push and ret xchg pusha lock xchg sbb inc pop xchg loop or xlat xchg mov cmp leave in xchg ja movsb xchg sahf int3 lret add mov add mov fidivrl nop inc push mov int3 nop xchg cmp add sahf imul and jno pusha or add sub fsubl cmp cld test popa bound adc cmp test push xor xor pushf dec into lds in nop in not adc fiaddl xchg sub cmp add add mov test xor sbb mov mov sub je lods movsb dec pop add sbb adc pop lcall jne cs xchg mov enter xlat imul and adc popf pop addl loopne fdivl (bad) loopne repz jecxz rclb fadds inc movsl cmp xor dec or ds push add inc (bad) hlt jecxz (bad) and cld adc mov or jg add ret and inc movsl xor pop xor call sbb jl add (bad) (bad) (bad) pop lea cmp inc mov ret push jmp or mov inc (bad) adc pop xchg cmpb and xor (bad) mov popa xor sbb jnp sub cld mov mov pop scas fwait int3 push sbb xor in jne,pt xor pusha (bad) cmp js sbb ret leave hlt cwtl clc jmp jecxz mov mov push inc sub test pusha insb push arpl mov jecxz mov adc inc enter sti cmpl cli cltd mov and push or fsubs mov shlb lock jecxz dec enter and adc fisubl sub lock jmp in add test ret aas out scas ds add gs out mov pop add movsl fs mov sbb add jge daa inc mov aam gs loop push fdivrl insl in mov data16 movb ljmp dec and or jo add cmp (bad) movsb push lret xchg cmc test xor mov es sbb mov icebp mov push test adc lret inc pop mov adc and xchg add (bad) out inc push xchg cmp or loopne jl adc and or pop add jmp in rcrb and fwait xchg out fidivrl push adc les gs test xchg call fisub adc arpl test les outsl pop aam sbb loopne jo loop push xor stc add mov cmp js or cmpsb or pop es mov scas ljmp (bad) jmp cmp push jns clc jl sbb movsl negl pop mov inc pusha jp mov imul jne dec mov and cmp rclb push arpl mov sar rcll adc xor mov add ds ret add push enter push push mov out pusha add adc cmp loop sbb nop add daa mov sbb inc jl int3 cltd fcomps pop nop cld add add loope sti sbbl popa push mov test insb and mov push ret inc clc das xchg imul lret lahf push sbb nop out rorb test dec aam (bad) xor inc aaa or sbb add sub ds (bad) xor lock sahf inc and inc and lcall push test and rorb xor mov jbe adc or add in loopne dec mov loope pusha xchg sbb add pop xchg fisttp sbb das sub inc adc lock pushf (bad) push add mov repnz or adc jmp lods test and mov mov cwtl mov jmp roll cli ret pop push out push ds jns loop nop jae test mov fdiv pusha and imulb and fidiv inc lahf jmp jnp add (bad) mov xor xchg add mov or pop add cmp inc add mov mov fistl add jmp in cwtl imul btl mov in push loopne lock mov clc add push cmp mov inc jo mov jo mov loop push jg adc call xorl je shlb jl adc pop popf gs mov ja fnstenv mov (bad) sbb rclb scas ret sbb sub rorb ds cs (bad) sbb lea andb or sbb cmp pushf add add xlat jns movsb push call fsubs sub dec (bad) mov mov xor lds ljmp popa je add or pushf sbb cmp rcrb lods arpl push in sahf lret ds xchg or or mov inc mov in adc mov in pop inc js pop push repz inc cmpsl inc push test lea xchg fs loop and inc fcoml je mov pop push fwait jle mov test orb push mov xor and test fwait inc dec mov inc push mov mov sbb lock xchg sbb mov sub int3 inc jmp dec inc dec cmp shrb pop pop scas push cmc dec bound orl push fsub adcl cmp pop mov or movsl cmp mov lret and enter sub and fs adc cmpsb pop mov and sub dec cmp push pop xchg test fnstsw mov test push cld xchg mov das or hlt ret cwtl push add jle jns call rolb xchg dec popf dec fs push dec mov inc ljmp psllw dec lret mov add and lods sub or stos or push xor push test push cmp loopne pop (bad) mov and inc aam push leave jnp sub in inc test cwtl in movsb mov insb mov add cmp and cmpb in push add xchg cmp fdivs cwtl jge xchg mov mov mov xchg or jne (bad) xchg in test cwtl mov dec lret fs pop and xchg xor fsts mov inc push stos std lahf xchg pop adc mov inc or test jns xchg aam mov pusha push in mov mulb push cmpb adc inc (bad) enter out das mov mov mov mov aas cwtl or fdivrp sub jl push xor mov add inc pop adc or pusha pop dec xchg mov xchg lock mov mov sub fmull mov or call cld adc sub mov pusha loop push pop xchg in dec icebp loopne xor pusha add sbb lds add fistp roll aam add sahf cmp pop jns push xorb lods ds test out sub xor inc add add rcr (bad) mov sub hlt sub ds (bad) and out xor jo push popa or ud1 add shl pop pmovmskb test add mov mov push mov add and mov (bad) fsubrs push add fisubr (bad) popa push in pop sbb int xchg icebp push inc cmp insl mov jne leave out pusha jo (bad) jmp outsb add sub ljmp iret imul jl pop jle jge and sub pusha adc stc dec jle lock das rorl adc or imul pop outsb div and mov add add aad (bad) mull add or pop call jo push (bad) les and add (bad) mov pop es dec (bad) ror js inc roll and fstl jg out or stc mov or cmp mov (bad) loopne pop add add sbb jne in sub add js insb rcr ret aas push mov outsl loopne dec aaa call rcrl leave sub insb lock inc add sub mov push add lods sbb test add pusha dec inc (bad) rolb push xchg (bad) dec data16 icebp test cwtl pusha rorl lods push dec shlb xor pusha jo aad mov sete add mov adc rcrl xor mov add les push adc js jecxz and dec dec roll and imul std inc add popa stos jno mov gs imul in sbb sbb jg mov test xchg sbb xchg sub insb adc and bound icebp push adc push sahf outsb lahf enter push add les jle xchg push inc nop xchg adc xor and in arpl add push cmp xchg inc fcomp inc (bad) push adc mov xor cmp or pop clc data16 imul cwtl scas pop cmp mov in int clc or push (bad) fs adc and mov cmp dec dec inc and out js fsubrl xor cwtl (bad) and pusha fwait adc cmp push es or add insb movsl sub mov mov inc insb pop push mov push or sub movl push inc mov add into mov mov (bad) sahf test dec shrb stos or dec lret (bad) lock stos std inc xor jae fidivl lcall push sbb add xor mov mov (bad) xor subl pop lds pop push add xor xchg add sbb inc movsb add mov mov js mov subl es (bad) aad sub int3 out fs add ljmp dec and ffreep pusha or dec add cwtl dec push mov jecxz sub insb lret inc mov mov xor mov sbb mov ljmp fsts adc jle add pop inc mov aad aaa je sbb adc mov and (bad) push cli loope sub mov mov pusha test sub pop add mov std mov or cmp cltd cmp inc repz sbbb dec and out mov sub mov outsl or add adc xchg or aas lds pop inc mov sub fwait pop in mov mov (bad) fstl ret mov inc xor rclb push jmp add sub stos jecxz daa xchg cwtl or lock stos cld orl and outsl or jmp lret loope out mov mov push xchg xorb mov pusha aaa and push sub sti shll add dec icebp mov imul jbe test clc add (bad) lock lcall push sbb fstps jl shlb inc mulb adc jle cmp inc mov out xor lock loop jecxz loop out movsb mov inc sbb enter pushf add mov int3 xor pop sbb dec outsl rorb stc xchg sarb cwtl mov icebp data16 add cld jns test rcr or dec push and jmp jl sub xlat bound adc pop cs int3 lds shrb jnp bnd add jecxz insb sbb loopne test imul mov nop jl or test clc add loopne xchg sarl dec es imull repnz pop push adcl addb pop inc lret outsl mov mov dec out ja cltd jp add fldt dec add pop repz pop ret add adc and xor xchg sbb or dec aaa shr (bad) in adcb loopne cs (bad) jne jns add ret pop add sub je add sub add pop sti (bad) mov arpl je mov pop xchg leave mov mov pop fwait in inc in lcall das adcb insl and in xchg jle sahf mov xchg add inc xchg sbbb rorb inc push dec nop mov inc pop jnp into sub jo inc in popa mov in sub lahf add rolb js add test mov mov inc clc and adc testl sub loop sub test inc xor das test aad or xor mov push add add js cmp and push push sti jne cmp pusha add mov stos or xchg insl xor mov or xor dec imul popa pop add xchg std inc push and ds int3 es inc orb mov or je jbe add lds aaa inc es jo push adc push fadds sarb and cmp inc sbb movsl in mov xchg sbb imul and shl mov cltd clc add sar xchg insl scas xor sub daa repnz je or dec sub andb adc xchg jmp outsl or stc sbbb jecxz jno add adc sbbl jge mov pop sbb pusha addr16 add pop js jb xor jp dec xor inc adc iret test inc cmp add int3 nop call cmc outsl outsb pushf adc (bad) and or shlb fisub cld xor jl add or dec lods cmp shrb xchg xor jo in mov aas cmp adc inc push add scas xchg pop dec sbb jl add cmp pushf sub pop cmpsb mov push push mov add lods lcall pop add cli jge sti add iret push push mov mov add popa dec push adc in pop pop out shlb loop add xor fwait inc xlat pop andl (bad) and push xor lods pop and add lahf mov add stos xor cmp sub enter jb xchg mov inc es sub int3 dec in stc cwtl mov leave popa sbb xor nop adc call outsl xor jns mov pop addb popf (bad) repz ret jg add cmp add clc mov fisttp outsl dec dec test inc movsb or push fs call (bad) cmp ret add xor dec sbb andb dec sbb jb mov push decl dec iret sbb sbb sbb push lret dec adc inc mov nop add sub and sub bound icebp xor repz andl ljmp xchg pusha xchg je in rcrb ja push ret or dec fild pop push xor lret jl rcll pop into adc cmp xor js gs repnz cmp call jg (bad) or rcrb mov lret stc rcl and mov pusha in shl orl jecxz out sbb pop fwait movsb and xor pusha xor mov rcrb rcrl add inc ret and or mov mov inc and or (bad) xchg push loop js leave mov sub add fcmovnu and loopne std mov sbb push inc mov int adcl jns and test in push out jno xor mov sub movsb jae out sub in jbe repnz push inc es js imul (bad) pop popa popf push cmp xor mov adc leave xchg pop enter mov mov clc push sub fidivrl icebp movsb jo fs out nop shlb loopne loop out test insl add in clc inc out (bad) jae or fistl ds repnz nop (bad) lods rorb add add cmp in bound insl add sbb stc sbb aam rorl dec cmc and cmp xchg scas pop lock mov mov sbb dec hlt fnstenv js xchg and add adc mov rolb popf sub sarb imul clc cmp pop xor mov insl sbb push mov pusha rclb fidivrl test xorb xor inc nop cwtl test bound test das xchg test push xor cmpb sarb lock or rorl adc sub xchg and inc inc jecxz push ja inc xor or hlt inc pusha add mov pop cmp xchg pop call add (bad) stos mov push scas dec xchg cmp clc out int and test add add fildll cmpsb pop inc out loop inc push xchg xchg xor or add lret mov fwait push cmp es aad xor and push aaa subb aad loopne dec or in sub jo add lea and push cmp das jmp test xchg cmp jle stc dec dec clc test dec add sbb loopne ret xchg iret loop jae and inc and fsubr lods add mov es cmp mov inc js fisttpll jecxz and push pusha je pusha les dec hlt (bad) jo js mov lea or ficoml mov lock icebp sub cwtl movsb sub mov shll loopne xor jmp jl push scas mov (bad) (bad) hlt and insb pop adc lea mov inc jp push (bad) jmp adcb adc add idivl cmp mov movsl add push js,pn push dec sarl push and inc lret sbb ljmp cmp aaa js je mov sbb adc adc adc mov cmpl std out in xchg pusha cmp mov add mov lods loopne xchg xor push aam dec and aaa inc inc mov leave jecxz adc pusha faddl add loopne jle sub add mov sbb cmp add adc sbb arpl rolb jmp in ret sub cmp lock test adc inc clc push cmp dec cmpsb movsb leave and push jp ffree add push inc aaa inc leave test cli sbb ljmp shrb jnp cmp xlat or lcall push mov sub flds inc outsl lret or mov loop loope movsl push mov push adc mov pop loope fcomp clc js add test sbb lods push test fisubrl jecxz outsb rcrb lcall mov cltd mov insb sbb inc shrb out or fisttpll jbe xchg jmp ret inc adc push sub adc les rcrb scas ret in dec and pop sub push mov pop lods inc test cmc cld jge or std xchg add fisubr mov out xor shlb jmp loopne push or cs xchg and dec and and insl push mov movsb imul sub xchg sets xor add icebp sbb lock cmpsl ficoml push sarb test mov repnz cld xor add sub inc (bad) loopne shlb ds sbb xchg pop push outsl xchg inc js and xchg addb and push mov mov sbb iret mov loop and inc (bad) push in ja add cmp sti repnz dec xor pop and lock and lea call (bad) scas push and loopne pusha or push shr sub stc lods add xchg pop push add call and lods (bad) (bad) (bad) dec subb sbb sub add add push dec xor aad xor lock cmp add in add push je lret roll push and mov sub or loopne pusha xor lock xchg or cwtl fwait add push inc rcr outsb xor fcmovb in mov jg (bad) pop mov mov in inc (bad) jne mov shll dec pusha sbb mov jo ljmp hlt inc push xrstors sbb lds lods ds adc mov pop les out jo ficompl rsm inc loopne xchg jnp or mov ss movsb imul test fidiv les rorb mov sub or pusha jmp add mov mov lcall mov jns pushf pusha push js pop rcll mov callw mov or iret repnz push pop shrl imul (bad) add test fidivl outsl xchg aad cmp rolb adc bound dec adc aaa jmp pop mov mov mov loop and call inc pop pop sub lods clc add daa inc rcll xor loop adc xchg testb xor pop shll into aam in and out add sti xchg adc cltd push inc push or and add ds in adc or pop (bad) stos dec enter out push mov sbb es std in adc faddp mov pusha mov enter jne rclb mov rolb test ss stc dec mov gs cmp sub add rcrb ss or rcr fwait cld jns mov mov (bad) xor test call mov out mov and jmp gs pop mov mov push jmp mov or loop pop in and push mov adc lds pop iret lods sbb fcomp ret mov pop sub movsb jp sbb stos ficoml mov and test adc or mov mov addr16 dec sub adc test inc add lods mov xchg push (bad) pop pop push adc int inc repz jmp popl call add les es push push xchg lea mov add into movsl scas mov es and fsubrl stos sub cmpxchg hlt mov inc out int3 or ret xor adc sub clc sbb les sub aam ds cmpsb shr push ja (bad) dec lea enter pusha cmpsb in push pop out addr16 add cltd sbb jl pop hlt movsb add sub clc addr16 sub sub and sub pop (bad) mov in adc (bad) std push adc or repz sbb lret inc or bound movsb jae sub jle add roll es pop pop jl dec dec fistpll adc add icebp xor jne cmp cmp push mov push pushf xchg sbb dec add adc inc fldenv cmp push cwtl or loope pop psubusw cmp cmc mov xor or dec aaa sbb in dec pop or mov movsb cwtl stc add mov test adc adc sahf and insl pop ljmp popf mov mov push push xor inc lods mov cmp ret rclb (bad) es js loop xor mov and dec es xor dec jbe mov ret sub inc and orb and cli mov loopne or fstl in les xlat mov and add fwait add pop mov in ficomp es cmp mov pop cmpsb mov pop (bad) add pop lds or sub adc data16 pop xchg call cmp (bad) pop and add inc or add xchg insl adc out push or cmp leave jle sub test inc icebp out nop dec sbb pusha iret sbb sub in icebp and mov inc (bad) fldenv mov push or push jl add xor jp cmp (bad) push mov cmp aad dec lcall hlt imul (bad) js pop lock das sub pushf add xchg in push mov add and mov (bad) cmp dec inc dec in fldt in mov hlt dec call (bad) (bad) push enter mov sbbl mov and mov add adc mov fmul and or push mov push sub push mov mov push cwtl sbb inc xor and je mov rcll es mov adc ja fsub xchg inc in xor rcrb fcmovb add mov mov in mov pop sbb popf pop sbbl xchg jnp adc cmpsl or stos xchg sub inc lock repz push cmp enter imul add mov mov ficom (bad) in pop jmp xchg addr16 cwtl jecxz add inc or pop xor adc (bad) xor hlt cs lock data16 mov xor adcb inc loop clc (bad) lahf xor inc shlb push out mov sbb aad add lcall add test inc inc pop lea fisubl push daa push test jg and rcrb pop outsl cltd hlt push push frstor fbld dec inc add lds int3 cltd cwtl add imul iret mov and and std or (bad) or addl clc cmpsl test (bad) sbb icebp add jecxz cmc sub add fistpll xor inc push xchg dec sbb mov rolw mov mov jns cmp loopne push mov in mov inc int3 dec repnz ret or push mov and scas jo cmp int add rcpps bound jge or pusha jecxz out mov or mov dec rolb insl or enter adc mov scas adc dec in in jle pop and adc (bad) xor xchg std pop push cmp cmp call xchg pop not and or xchg fwait lret nop adc mov sub insb mov cmpsb xchg enter add sbb mov je dec mov mov xchg push mov in mov rorb mov push push int ds mov in xchg jo lock es mov and and add push in cmpsb lods push pop test push mov (bad) (bad) jo es js gs mov dec cmpsb test dec fnop jo mov cmp xor xor fs and icebp iret mov es add das cwtl stos and pop jne dec scas xchg xor in and cltd rol and xor orb push jbe push mov mov and pop add imul cld jmp je test sbb jo adc dec js rolb enter scas rcrb scas jno out mov mov popf add es in roll xor cmpsl cwtl daa mov inc xorb and pop dec stc push push loopne addb adc mov xor or sub push pusha add push add flds or xor push cmp add das in add je push pop clc add adc cwtl int add pushf in push add les adc shlb pop or adc mov in push dec mov adc nop xor sub int3 or movsb inc pop lock inc xchg inc testb xchg push xlat pop sub jl jmp adc inc (bad) into add pushf (bad) cmp pusha pop insl or add mov inc iret sub stc in cmpb add and dec adc (bad) push mov and adc ds dec xor mov cld adc hlt push mov shrl mov rcl adc and ds cs rolb imul ret js lock pop xchg jo stc les jmp (bad) cld nop cmpb jo inc and cmp and add mov in add push add (bad) rclb scas nop cwtl lock jbe pop add mov mov xchg push mov sub push nop add sub ret ss sub jle add xchg stos (bad) mov mov add xchg in cmp into aad mov and pusha add and orb jg std call add enter push ljmp add xchg ja pushf addl leave js,pn sbb mov add sbb mov pop std add movsb mov add cmp push xor dec loop popa adc lods sub les js push dec or or adc mov push and push lock mov and sub aam or dec mov xor add add xchg popa outsl inc rcrb lret and rolb add mov aaa (bad) cli mov mov loope inc pop pushf fcompl loop or mov push xor bound add xlat cld add scas mov push adc adc int3 jle call sub xchg popa ds lock add pusha dec pusha sub fwait loop push inc pop (bad) sbb js pop out sub sbb sbbl jbe jle (bad) int fadd es mov jp push dec cld mov je and das jl fs cmp adc rcr cmc sub into inc mov mov sbb sub outsl repz mov jns out sbb flds paddusb xor mov mov leave pop pusha inc movsl rolb inc bound sbb mov test add js add stos mov in xchg into mov and popf mov test xlat push add nop add mov cmp pusha ss enter rolb mov fcomp and cwtl jmp add mov mov mov xchg (bad) test loop fstl sbb lahf add js je repz je adc sbb pop inc cs scas adcb xor adc push arpl or add sarl insl fsubrl icebp test dec data16 cld add ja out in stc jg rol aaa lret iret push dec pop lods add rol outsl push in (bad) pop and add push cli je cld and mov push mov xor pop nop subb adc dec mov jg add (bad) mov popa arpl jno push add push or push stc in jo jnp nop lods stc add adc fsts out cmp loopne mov std int3 add push mov imul mov add into adc mov je add adc inc adc ja lret lds push xchg inc mov xchg cmpb push jecxz dec mov dec test scas push xchg cld mov xchg (bad) repnz aam lret push pop ja cmpsl or sub jecxz outsl inc push shl jl shll cwtl lods add mov (bad) imul rorl clc lea push cmpl inc mov inc iret fisub pusha jb addl mov add imul mov add mov pushf add xor cwtl push aaa int3 arpl pusha jmp cli test cmp adc notb mov or in add outsl popf pavgw pop jno lods xchg out add cmpsb jae jns and mov into dec in popa add movsl pop loope out jns cwtl insl push negl cmc adc movsb jecxz mov or cmp (bad) mov loopne pushf adc rclb clc inc cmc cld aam fdiv or mov lock icebp mov call outsl inc or inc sbb and lods call or iret lcall movsb jl dec sbb pop (bad) xchg int3 test dec xlat lock pusha xchg push sub sub mov dec cmpsl loop xchg es ss je inc insb loopne jo add or add sbb inc or xor cs loope mov add ljmp push cmpsl or inc icebp jo xor xchg add mov repz fadds pusha and mov xor dec adc pop add repnz out je dec cmp loopne xchg sub les ret jae notb cltd mov pop add pop in es push add sbb pop mov iret jle (bad) in or and inc hlt sarb adc mov adc or add push xchg cmp dec xchg xchg faddl and ret cld or arpl (bad) pushf add into adc in jl addl sbb fisubl enter inc xor in aam inc les mov test pusha mov rcrb shll gs inc cmp inc (bad) jmp lcall leave test adc fsubrs and dec sub add push mov pusha pop loope ljmp cs mov inc and push add rcrl dec (bad) pop ja and xor pcmpeqb icebp fcoms adc inc push mov sbb loope and repnz cltd sbb jg clc decb in pusha cmc sbb hlt sbb test lcall gs repnz and fistpl fnstsw push fcom js add imul add adc in or ds ret xchg incl xchg lock mov mov loope sbb cmp adc les cmp je loope ljmp dec fisubrl or sub ret fsubrl adc arpl enter sub in xchg xor in and dec and enter add pop xor mov sbb sahf cmp in pop xor sarb push add gs adc mov add int mov jp,pn clc ss cmp hlt into inc ret daa cmpsl (bad) mov cmp andb add jg cmp dec das add sbb test enter add sub sub dec test cmpsl sbb ficompl popf dec es pusha mov add mov push shlb std cs int3 pop outsl sbb fimul mov mov xchg dec in push xor jle and js or lock mov call sbb mov and les jg pusha mov aad and clc pop and mov movsl xor jns add push mov mov add ds ret (bad) js fsubl push pop dec and inc cmp cmc imul out orl sub fisttp xchg lahf inc jnp push push sbb sbbb mov dec leave enter and cmp out lahf xchg inc xor cmp sahf mov mov dec push jbe xor test xorl xchg out test jae insl adc out iret adc imul mov xor flds add inc jo fistl int3 je inc insl add inc ror loop sbb sbb cmp out add adc jecxz repnz (bad) lahf inc adc pop test pop cmp and and sbb jecxz nop insb jbe or clc adc mov mov add cmp rcr mov repnz add sub add loopne add inc xchg std movsb mov (bad) adc or gs pusha fldenv xor or jl mov out int3 and add pop inc push xchg mov add inc sub fld roll mov push dec or jno add mov mov mov push mov mov add pop pusha add inc rcll pop xchg sbb lods inc and cmp cmp push enter notl cmp mov fnstenv dec jae mov cmp test xchg bnd fs add imul dec inc or cs outsl movsb mov inc imul push loopne je add movsl mov or ret pop subb nop dec mov daa jns push jl mov xor xor push cmp ljmpw inc outsl cwtl out insb xchg outsb jbe inc call xor or hlt adc and in les mov inc and scas test (bad) ljmp inc dec push push xchg jae push cwtl sahf bndldx arpl jae add rorl cmp push mov push loopne rorl lock and push call xchg inc or cmpsl dec push mov flds lret adcb inc add jae dec bound pop leave test xor fs lcall add or xor xchg dec mov add ljmp pop inc cmp in mov or and push adc or and pushw jbe jmp popa push jno xchg add sbb xchg pop add in push push mov pop mov testl sahf test and inc sub daa rorl je cs jae sbb mov and xchg into sbb (bad) cmpl xor mov in inc sub and sub lock or adc add lret sarl js es and cmpsb dec adc push data16 out adc subl rclb mov loopne inc adc fdivl or sub cwtl lods in sarb cmpsl push movsb or push mov cwtl in pop inc orb xchg inc jge in and and pop (bad) lock test push xchg nop icebp dec and sub and loopne inc inc clc mov sbb xor jmp stos loop xor pop subl int3 aas lods bound cmpb mov xchg jo rolb call sbb pop jo clc sub mov pop nop lock jle mov and scas sub push mov lcall popa add (bad) mov mov xchg lcall or (bad) mov jmp nop sub lea movsb cmp faddl sub ret lret (bad) pop dec jnp rcr jmp or sub (bad) mov mov or pusha add ds pop cmp js sub shrb addl pop inc aad cli out add fwait rorb sahf mov push mov or add ljmp in aaa jbe sub leave (bad) andb dec pop and push mov cmp pushf out xchg mov sbb (bad) xchg push inc lock (bad) xor pop mov mov ret sub inc clc imul mov xchg in arpl lret inc xor movsb out test dec das push sbb ljmp push add pop pusha jmp mov xchg sbb dec stos icebp sarb ja sub and cld cs popa fwait imul jns nop outsl sub xchg inc lret sub inc clc fisttpl or int3 push loopne popa xchg pop inc or jo (bad) pop js cmpsb leave movsb add hlt adc xor jae loope sub jmp pusha pop cmp jl rcrb rcll out fiadd cmpsb out hlt add cmp fsts ret inc insl cmova mov add into repz lret call or push mov loopne and pop (bad) push shrb stos jg pop jl stc push inc xorl (bad) cmp or out shrl test pusha mov jae inc loopne adc add pushf clc mov and inc mov xchg xchg and and pop icebp scas xchg dec fist xchg int3 pop ljmp (bad) sbb js or (bad) lock int3 push cli and flds divb inc jbe daa lret jnp push xor pop dec hlt notb add jo jns push cld addr16 popa lods xor les push imul (bad) in cmp cmp (bad) mov subl dec loopne mov jl imul mov sbb and push sub or mov pop rcll or inc xor sub sar pushf mov loop add add movsb call or cmove pop pusha cmp (bad) inc (bad) mov mov sbb fdivs je popf adc cmc mov or in in adc xchg jnp repnz sbb cmp xor mov push sub sbb stos imul int3 in or (bad) xor enter cmpsl repz xchg aaa not es xor incl mov add test iret adc ror inc inc add xor and lds push lods lods fldl mov (bad) out stc hlt push jmp ja rcrl add cltd test mov jnp jo add imul (bad) mov bnd adcb andb sbb sbb ret repz iret movsbl popa (bad) jbe add insl pop jne pop dec push xchg les gs loope xor pusha mov cmpsb js push clc nop (bad) cmp xor outsl push dec ret add mov mov nop cli out cmp iret mov dec push push dec pop (bad) enter scas cmp push mov push movsb fwait cmp or lret fdivr repz fstpt mov rcrl mov push cwtl sbb xor pop daa xchg sub nop (bad) or cmpl movsb inc xchg and cmp ret lock mov dec push mov pop and lahf inc hlt push fsubs mov fsubrp (bad) int js (bad) call sahf jne pusha daa sbb xor mov ret mov xor lds push and cmp mov mov cmp inc fsubs jbe push mov add aad fdivrl pop and fimul popa jecxz add cmp or std mov mov add push inc dec mov jno and adc (bad) dec das mov pusha inc cwtl sub (bad) xor dec mov imul cmp push je iret int sub mov jb add xor ljmp ret or add mov test cld mov daa cli lods mov aaa inc or cmp sub fsubrl cwtl (bad) pop push push inc std inc (bad) jp dec mov xchg insl sbb xchg fprem add ret fucom add and or loopne xchg inc push adc mov inc icebp ss xlat shlb mov sub imul js add loope add dec and lods jp sbb jl add cwtl loopne xchg insl lea adcl cld sahf xorb sub adc lea pop loope js adc (bad) data16 (bad) in or stos rep jo adc jge in jnp sub dec rclb vmovshdup movsl push xchg adcl push inc inc push rorl push test or in jb loopne adc push cmp xor xchg in pushf nop addr16 stos add dec loop movsl inc in jbe jge test cmp ds (bad) dec jl cmpl cld aaa fcoms inc xor outsb andl iret cmp hlt int3 mov scas mov test jbe (bad) out dec xor sbb daa fimull xchg inc (bad) mov in xchg rol mov adc add pop (bad) mov fstps or insb outsl push push mov dec out js mov dec or in addb sbb (bad) mov xchg test stc je xchg repnz (bad) nop adc fildl loopne (bad) mov add bnd scas cltd in jne or jl test fmull pop in (bad) outsb into mov push dec xchg cmp fistp xor daa repnz mov arpl and int3 adc jmp push adc fldl imul and sar pusha mov dec arpl imul daa adc sbb out lds pusha push adc and loop cmp subb mov cmp xchg in ret je add add out add rclb cmp fwait adc push xchg cwtl add adc sub xor push cwtl sbb fs (bad) je add inc cmp insb loop xchg stos imul and in sub (bad) js pop test jl subb mov lods test add mov into cwtl pusha pop jno ds jae mov outsb add sbb out cmpsb mov adc loop mov repz dec inc lock mov sbb ficompl cmp mov or sub sbb jne (bad) pop leave or and fs xor fistpl adc xor or mov leave pushf lgs orl test pushf mov add into das sub loopne mov sbb test add (bad) imulb mov shrb mov cmp test xchg in and dec jge ror sbb repnz and sbb into sub mov add sbb stos and mov dec xorb lret xchg and cs mov fwait jns addr16 aad jmp insb enter push nop ljmp mov push pop insl cmc out fldl nop push (bad) fcomps dec movsl or dec xor inc xor in pop add enter xor inc and shrl iret test pusha lret pushf add notl sub (bad) cmp cmpsb xchg int lods inc pushf mov jle loop hlt inc stc loop es or mov mov (bad) jmp inc pop cmpsb sub adc inc mov lods cmp addr16 mov loopne and fildl sub jl aaa shrl jle dec mov js push jmp (bad) or mov mov inc add insb or jecxz pop push mov loop add push cwtl sub push mov cs cmc and ret xor push icebp in fsubrs adc lods clc xor dec lock mov mov mov adc add xor insl pusha in in cmp test mov add movb add arpl and mov cmp add mov cmp and into movsb xor mov and (bad) sub cmpl adc add pop in and mov push add mov or pusha ret cwtl add dec (bad) cmpsb add jle cmc jnp push imul (bad) cwtl and addr16 js lret pop push dec jmp sbb pop (bad) movsb jno cmp clc iret mov or jnp js add rcrl (bad) pop cmpl clc adc cmp sub and dec aaa xor rclb xchg xchg shr add cmp je and addr16 add fimul cmp lcall jl imul cmp lds pop jne cwtl ds mov sbb mov test push int3 ret rorb cs sub (bad) pop ret push lock adc (bad) or test mov les lock adc sub add xchg mov (bad) pop loope enter pop stc orb imul ljmp mov les cs lods and mov cli and xchg mov push imul pushf popa cli fs out adc add fucomp jecxz sbb add xchg scas and inc jnp pop sarl dec add lock push push xchg sbb adc and lods cmp sbb dec rolb sub in icebp aam jp add fisubr sbb jne and shl fstpt nop movsb add outsl mov bound imul jnp jmp mov aas cmp adc (bad) (bad) mov sub cmp pop leave lds ss aaa dec int push add repz insl mov test xchg and dec xor jno adc (bad) mov lahf and pop or and jge mov jnp jmp bound mov data16 scas add loopne and (bad) cmc and popf aad or (bad) subl (bad) jb adc fist test outsl sub and incl push dec sti jns inc mov cld xchg mov or mov and dec addr16 repnz inc jno lahf adc sub lret adc insb lods leave rol and aam cmp repnz daa cld xor lds sbb mov jns int3 or push ljmp ds lret lods mov hlt adc call ljmp les adc mov inc jge shr xor ja add (bad) jae lods in add jle imul mov test inc clc ret insl (bad) jae or addr16 push add ss sbb loop lods (bad) jae or add mov incl xchg ljmp or out push and sub int xchg (bad) call jae add adc mov cmp add adc adc into dec push xor sbb test adc addb xor pusha dec jmp dec jbe sub nop stos adc test jg mov outsb dec test fs and pop fstpt dec cmp sahf ljmp cmp fdivs enter popa dec xor fldl int3 sbb push loopne cmp xor nop out add dec movsl (bad) call mov xchg xchg lods inc and (bad) inc cmpb adc es mov cmp mov fsubrs ret shlb fs repnz lods or mov add aam mov clc rclb in jno scas mov mov lret dec (bad) loopne dec int3 inc addr16 jno test push jle xchg pop mov pop cmp hlt mov add xchg ret cmp lcall fs dec movsb stos adc insb sub pop cmp sbb int3 sbb les sbb imul sbb iret mov xor push cmc js outsb adc das lahf divb sahf test mov bound adc push decl or bound loop mov ret dec in in xchg pop jae sub cs cwtl notl push sbbb and int push out cld and push add lds ret jg popa fmul mov sbb sub jb inc scas repz sbbb add cmpsb sub xchg or or outsl ljmp mov push in lds xor jo xchg rorl stc jp mov xor icebp adc push loopne dec add push xor cmc sub lret fstpt push push adc inc nop adc mov pop fs mov pop inc dec lods and pop sub sub in lret mov test xor addr16 jno std out addl jne or mov inc test out or icebp xchg iret inc jl dec mov pop test adcb xor ss lds js jmp rorb add xchg jl add mov call mov xchg daa sbb push test sub add jne sub mov test cmp push (bad) nop xor add inc cmpb jecxz inc cltd inc cmp pop add js add mov mov ds roll xor data16 loopne cld mov dec (bad) lods inc push pop in jns push ljmp sahf or cld xlat ljmp (bad) ja pop inc inc adc push sub jne test lret les cli ja (bad) sbb ja shr sti mov xchg and xchg pusha loop fdiv sub ljmp mov fs inc mov arpl cmp cmp add nop xor push jmp (bad) adc and inc adc dec (bad) add test push add ret ljmp cld dec and or daa sub pop movl fildl sub pusha adc pop sar shrl xor xchg and imul das loopne inc scas pop scas ds xorb pop mov xchg xor pop dec mov adc (bad) leave sti pop addr16 addr16 jne mov roll clc cmc add sahf cwtl sbb xchg xor adc adcb pushf mov test cwtl flds and mov pop inc or loopne insb or loopne aaa xchg fld xchg loop bound (bad) inc adc cmp and insb mov (bad) les inc stc scas sbb pushf ret or cmp pushf cmp cmp sub test nop rcrb mov (bad) mov xchg popa mov adc outsl adc icebp cld in mov sbbl pop xor cmp int add dec cld or ret nop sarl and inc sub xchg inc add ja pop subb aam xchg enter add push jge adc insb inc and faddl adcb dec leave mov pushaw and add cltd push and xchg fstps es mov push inc inc and adc and inc lret ljmp mov pusha cmpl mov and out ds xchg adc or inc sub daa xor cwtl xlat cmp pop add loop nop add mov dec xorl enter dec mov jbe ds jne adc dec mov cmp mov add movsb outsb or cmp pop fdivl push fmuls out mov pop mov lods or lcall and fs or dec ds cwtl sub loopne inc pop test jns or test fcomip adc jge lds xor daa or nop or dec lock mov push fadd clc xor mov push xchg popf (bad) cmp add shr stc push mov inc cmp cmp push ret ss xor push shld mov pusha inc add jbe inc add popf data16 lock xchg add prefetch or and mov cmp jl ds test in hlt xchg (bad) je je js bound cmp notb pusha pop cltd test push lods test fcom jo add xchg xchg outsb mov aaa xor dec adcl sbb xlat ds (bad) and cwtl into fist (bad) subl xor addb out mov outsb inc popa mov lods mov bound mov xor sbb fadds xor inc mov and insb add loopne pop dec addb dec inc adcb in sub rcl rolb cs inc jo sub mov mov in data16 call add out pop insb jno insb repnz push mov or fmul xor mov or daa pusha aaa pop adc test add into and sub call fldcw inc push adc jl es add mov outsl add nop mov or mov push xor inc fs xor sub mov add or mov mov loop xchg jge icebp out push fsts (bad) (bad) sbb mov or enter fcoml push test push cmpsl xor add jg in gs les (bad) mov mov mov pmaxsw mov add add movsb and sub cmc or sarl xor call dec ds sbb and loope fmull sbbb popf add scas sub adc adc adc lret mov cwtl push mov lahf adc out inc xchg push out aam add in add mov pop pop xor fiaddl rcrb dec nop mov rorl mov mov cmp inc add and add cld jmp clc lret cmp dec or jl push push cwtl test movsb sbb adcb mov dec test cmc sub mov aam mov sbb out inc inc js xor andl add cli or mov or ss and mov pop cltd aam cmp mov add xchg xchg mov pop xor rcrl xchg push pop mov movsb hlt mov push mov movsb jne mov adc sbb rclb xchg out dec or add push add fnstenv cwtl test push and mov xor and push lock pop push rorl out xor dec or fadds leave pop xchg popa lret daa cs add stos pusha pop das (bad) lock or (bad) cmpsl out and jne add (bad) fs leave stc push cwtl push xor test fnsave push mov inc rolb push sub (bad) (bad) or adc scas dec xor lcall mov orb insl fistpll and jl mov mov cmp sub (bad) add pop xorb fdivr jp ja,pt or mov movb adc cmpl int3 cmp add fcmovne inc loop enter fadds fs out and or or sar popf shr nop add (bad) in pop xchg and call and xor pop sub popa jl and sbb or adc (bad) xor pop add pop lret push fcmovb dec pop jo mov add aaa repz stos push in push add arpl (bad) insl divb call adc int3 push mov enter hlt sub cmp pushf fbld insb and je clc pop sub leave and fcoms or lea gs test xor mov adc (bad) lcall or sbbl jecxz jne addb and xor and mov push hlt testb test or inc movhps daa push dec addr16 or enter es or lahf js push daa adc inc mov xor sbbb sbb push add inc dec cs daa and inc push loopne or jbe test or ljmp sti push mov pop pop sub (bad) insl push jbe and and pushf enter push mov cmp lea add js loop push aas sbb xchg and fdivp lock xchg test call rcrb (bad) push mov xchg pop das pop mov movsb mov xchg (bad) lret (bad) or jl inc dec and in pop cmp sub xchg int3 popa cmp xchg cmp and test adcl (bad) or mov push or dec in insb cmpsl mov cmp cwtl mov push test mov inc addl loopne cmp icebp dec dec cmp push insb sahf pusha jo mov xchg (bad) push jns sbb jecxz sbb es lds push outsb shlb aas sbb cmp xchg pop mov sahf pusha jb xchg or movsl add fcompl add mov push adc enter and mov mov insl mov xchg sbbb test xchg (bad) sbb les into fwait mov in call mov add dec mull outsl or pop or loopne out es popa xchg mull push lock fadds mov or jg xchg push inc and cmp mov call mov mov mov das dec and or out xchg cmp mov pop fsts inc sbb inc mov test push add push xor push jg mov inc lahf sti or xor enter int bnd nop mov lods or cwtl dec add adc out inc stos lss popa imul out mov adc and sub cmp push daa in (bad) icebp jmp dec dec js xchg inc push jae (bad) movsb movsl mov xlat test dec jno push je in dec loopne add mov int3 jo push out xlat cmp pop ds mov cld jb imul add dec lods or test rolb xor addb out push repz sahf and mov push push lea inc lock and add push js sbb dec mov or cwtl mov jl push mov pop xor into and sub mov jno test movsb mov or dec lock inc adc mov mov nop lock lock sub inc aam rolb push lods inc push mov roll pop add mov test inc data16 (bad) ljmp pusha mov fsubrs fldl das sub (bad) imul fsubl xchg push add xor adc xor mov mov loopne,pn sbb gs xor jg gs inc jmp pop push push pop (bad) xchg in or mov or push sbb and popa subb mov lock nop mulb lcall add xor sahf pop insl inc xchg mov jl cmp shrb mov add scas cmp jp cmpb insb idivl nop sysexit insb cmp dec add mov add xor test ret push stos cmp daa mov xor fisttp jl pop subb mov lcall inc push cmp mov cltd pop xor jmp loop sbb je fbstp loope in ficom xor adc or sub add fwait je (bad) mov jmp out inc cwtl js cmpsb sub or out and mov enter sub pusha jg decl push xlat sarb add pop adc jae in icebp test fsts js or pop adc pushf loop imul mov push jg (bad) aaa imul lcall cmpsl aaa les or cmp sub lock mov sub sbb adc add sub pop dec lods xor fs jge jae cmp ljmp sbb pop xor (bad) dec adc clc loope ja loope add pop ffreep jb or add mov add xchg inc cmp sbb in jmp lods in add sbb fldl mov push or push mov xor inc jo push pop jmp (bad) mov add inc into add and add cmc pushf push jle shrb mov rcrb int3 scas or pop mov mov aas or mov sbbl push sbb mov adc cmp adc jg sbb sbbl ss ds ret (bad) xchg inc push mov pop xchg mov cmp aas notl push add dec (bad) aaa dec push push push ss aaa cld loopne add pop mov pop push adc loop pop add cli pop add pop and loope push pop push inc push mov cmp dec jg add mov dec add pop cwtl fcomps leave lods pop adc mov jmp sarl add adc push and jmp mov push or test pusha push push pop jle xor xchg pop or xor pop adc int3 stos cmp add pop pop popa pushf push push repz inc call add (bad) dec cld mov call mov cmp push lret dec jg push adc sub or mov pop sub adc mov out add jp (bad) xor ret pop xchg cmp ret jge pop jns jmp mov inc add inc mov adc dec icebp and mov (bad) loop jg test cmp jge xlat cmp add (bad) pop xchg xchg xor cmp mov sub push xorb jge rcrl sub jg dec sbb or jae repz dec clc add push imul cmp dec neg rcrb fstpl in roll cmc (bad) xor jae cltd ljmp and lcall or mov pop or rcll in dec and into outsb push jg cltd adc jecxz adc pop bound jmp xchg nop in pushf push sub jp adc daa inc sarl add fidiv add pop rol (bad) mov test inc icebp (bad) shrl push test dec adc les push jmp pop rol rolb xor mov mov ljmp adc div adc pop pushf xchg mov fldcw sub fdivrs shlb loop mov add jl cwtl popa pop or pop out and (bad) movsl cmc add dec mov mov mov outsl xchg daa out sahf pop fwait std pop sub mov jge pusha loopne cmp clc leave push (bad) aas fistp jl sub and fs rorl jge or lahf aaa ja pop (bad) hlt lea mov mov cld add pop adc js test (bad) jnp sub rclb add xchg dec hlt cmp dec dec lock dec pushf push jae dec pop aam js add mov test mov adc or sbb movsb jle inc adc inc push icebp cmp mov lds jb enter in dec imul xchg (bad) pop pop cmp je imul mov dec (bad) outsl jns dec add enter fmuls dec push mov int and mov push inc jnp jae or packuswb xchg cld ds shll xor pop dec es out test sbb pop fnsave adc and push call push or push pop orl cli adc cmp adc andl incb cmpsb xchg lahf sub adc dec cmp cmp rcll sub je rorl push pop cld movsl pop pop or adc fdiv push mov (bad) aas pushf push mov mov lods dec popf and sub add dec xor add mov and out pop stos test pop fst fnstcw dec jg cmp push or pop mov dec push or dec (bad) push dec pop gs mov ss push nop adc in into int fistpll push dec cmp out int3 sbb pop mov or dec jmp inc jge insl enter push mov subl mov ss lock xchg or sahf fs rcrl std mov aad jmp mov mov insb popa sti mov fiadd xor aam mov pop xor pushf push xchg pusha add cs xor in nop aaa xor insb or dec sub add pop sub and dec (bad) mov xchg xchg xchg dec jl sysret dec jmp loop push pop or outsl jno add jns mov dec push sbb (bad) jecxz push xor or out jo adc cmpl xchg iret in imul sti pop mov pop lcall lcall clc daa mov xchg pop test (bad) push or loop popa mov push out jb out fisttpll sub jbe mov outsl jbe idiv cli pop inc ffreep test lcall lds sub sbb pop adc or push test mov jnp mov scas cltd ljmp jno push xor pusha push xorb sbb mov enter mov mov inc mul adc sub pop adc pushf pop out aas es inc xor jne repz or adc fs fldl2e or mov pop js push xchg add pop inc dec sub mov ja mov das scas mov clc push push mov es cmp movsw lret pop cmpsl push mov rorl mov jne aaa push das push push inc xchg jmp hlt cmp xchg mov sub pop or fwait or pop in add sub push dec xor repz inc jae pushf and nop pop or fisttp push mov add jnp or (bad) pop clc add pop dec xorl ja scas push push mov inc (bad) lret ss in sub mov rcrb daa cmp nop xorl enter sub dec pop cli mov push mov xor lret add in mov cs jns mov je mov inc or sub add jbe jae (bad) dec pop (bad) mov dec xchg sub iret inc insl js aad jae mov sub test js xchg mov push jmp je sbb add xor sbb push fwait push pusha add add adc cs pop sbb pop fmuls imul xchg add (bad) cmp or add repz cli jae pop mov pop and rclb stos and jmp pop dec cmpsb and repnz sbbl inc ljmp lea or sbb adc push push push cmp add pop sbb jae inc sbb (bad) jp push mov add push jg ret shll mov sbbl add stc enter mov sbb jmp sbb xchg add sub (bad) dec or loope pushf dec sti push aas jb (bad) js int3 hlt push je inc popl jge imul add mov mov imul lea insl mov push cmp repnz inc rorb les mov jp or push mov popa jne pop inc mov xchg pop es push (bad) xor push loop cmpb insl shll bound bswap fisubr push dec (bad) mov pop sbb cld in sbb fnsave int xor imul and push loopne aas fildll stc sbb add pop les out xchg and xor sti stos mov insl js mov in pop repnz adc inc xchg fwait pushf xchg dec (bad) xor mov xor dec daa mov cmp cmpsl xor nop adc iret js repz push push mov push dec shl xchg cmc es or not xchg or xchg mov pushf negb xlat fnstcw xlat lock adc out dec ja jg dec divl mov sub sti pop xchg xor je jle subl fs enter jg push mov leave xchg bound in mov inc xor rcrl mul lret leave sahf dec fwait dec dec push jae mov imul mov dec int3 shr and pushf jne and pop jecxz stos xchg (bad) jno adc ss les push jmp push in sti jg mov bound and cs dec (bad) ja js and mov push push inc lret shrl js loope cmpl or dec int push mov push mov push nop inc lds push add pop lods ljmp or inc inc inc and pop pop and mov cld pop jge call xchg lret ret inc (bad) sub push std xchg (bad) jmp or jmp dec out dec pop mov pop push mov orb and mov pop push add cmp out imull shrl cwtl push cmpl jmp inc cmp cmpsl aaa lcall mov mov push pop add and (bad) and pop ret push fistp lret lock or cmp ret push push push pop add sbb dec inc xchg lret ret jnp cmp test lds jne sub sub inc push out repz aas hlt (bad) xor mov sub push adc add push out pop jmp lock (bad) or jp lcall pop sub scas pop push (bad) mov hlt fistl out and dec jmp push rcrb add pop shl pop jmp xchg add test xchg loope and dec pop xor mov jne js lahf inc cld sub jmp jle jno or or (bad) add jg out jno pusha idiv or sbb cmc ret inc dec add and rorl sarb xchg xchg cmp cld dec or xchg add call pop pop sub decl push sbb rep sahf mov fsubr fidivr into repnz lea or adc lret cmp insb repz (bad) cmc push outsl jecxz call fsub push mov jle stos (bad) ss jmp inc inc sahf (bad) or fdivrs test push and push mov loope jmp dec pop xor out inc fnclex test aaa es mov aas sub ja dec fmulp jno lret inc pop or pop bound addr16 mov sub jg jo negl sub add jle jae xorl inc adc idivl sub std outsl sub sbb xor iret mov xchg ret test outsb adc pop or push adc movhps sub inc (bad) cmp add pop dec push sub add pop xor add into popa in add adc pop lods pop xor mov inc popa xchg icebp imul out or adc adc mov sub dec pop call sub rorl jne adc pop xchg xor jp add arpl addr16 js lar lret xor je inc pop mov pop push pop jl outsb loopne and push imul out xor (bad) fsubl sub mov mov jmp pop insb sbb mov jmp and stos adc cs inc fwait sub loopne lods in dec dec xor and xlat push rcrb dec push or mov imul mov aas icebp jns push in pushf xchg jmp out enter mov insl js sub dec and dec ret add mov adc and fs ds sbbl adc pusha repz push mov sahf add jnp mov add in dec mov adc pop pop lods fcomi push xchg lods push pop or aaa or mov stos or sub lds mov ret fs add push cmp xchg cmc xor aas jg int push push push arpl clc mov sarl adc jns xchg mov pop movups cli inc sbb or cmp test xor outsb ret stos and mov push das dec or inc (bad) aas inc es das aaa aad fwait xor inc daa jne xchg (bad) and push fldcw mov mov iret pop pop xor mov out inc movsl (bad) or in daa push repnz add rcrb or inc (bad) cmp add jg outsl cs push ret mov jmp arpl fiadd and in push push cmovbe test enter scas xchg (bad) inc push pop sub mov pop xor scas xchg xchg sub imul pop xor imul (bad) jmp sbb (bad) mov call in xlat mul jge cs adc aaa movsl in or ret loop shll cmc shr les pop xchg dec insb loopne xchg hlt mov mov cmpsl sbb pusha sbb in xchg scas dec aas and mov jl mov push sbb jg loop cs mov inc mov sub pop mov dec jne push xchg and cmpsb imul hlt in jecxz add test stos xchg add adc repnz test jns int3 mov xlat mov imul xchg pop ret pop fstl sub inc dec idivl cld sbb mov add test (bad) fcompl or adc in (bad) add dec sarl mov add push iret lods adc (bad) sbb lahf in sbb (bad) dec loopne pop inc lds (bad) punpcklbw and cmp popa in mov (bad) dec les cld add dec cmp push and leave inc mov pop mov loopne add pop push dec dec outsl jl test imul (bad) jg shrl or lcall add xor aaa mov pop mov and daa jmp or push icebp ret data16 push pop jecxz fdivrs jne cmp xor sub mov loop pop dec lret cld inc jb or ljmp neg add mov fnstenv jl and push xor cmpsl lds xlat mov mov adc lahf or jo adc pop mov out dec std pop xor add jmp movsb mov mov scas (bad) xor jmp lock aaa int3 add iret pop and mov jmp sub mov inc pushf mov out or and cs mov or in pushl add call lret ret add jmp test pop lea xor (bad) out adc pop mov lahf repz fwait adc jbe jmp fwait and and fiaddl addl cmp pop popa iret jg add inc rcr sbb sub or push test push cmovg adc in inc lahf dec push xchg andl mov shl iret out or sbb (bad) jge nop in or sub push add (bad) xor jmp (bad) mov rcrb xor push mov es xchg sbb std fwait iret inc xchg lret jge lea mov jg dec jnp ret adc add jmp shr push xor and in pop ficom lds out mov mov cmpsb subl sbb xor pop add cld lds into push pop xor pop ss cmpsl xchg xor shlb ss mov daa pop pop xchg inc loop insb pop xlat les test in addr16 pop clc imul dec mov pop mov movsl loop xchg mov sub jnp push jb sbb jmp sahf push adc pop adc sub rcll and sub or in add mov outsb jmp and inc popf cmc dec and (bad) aaa ja sbb inc push adc fucomip push and add push insb cs fildl into inc pop aas sub invlpg fsubrs inc (bad) das in jge je cmp pop add ret and mov add jnp jns xor or push lods jmp xor push enter enter mov pop in iret (bad) pop mov add inc add (bad) (bad) and (bad) movsb int stc fnstsw es dec push test scas push sub push add add pop mov dec loope call rcl xor cmp and add loop rcll das mov push add jnp mov pusha and mov subl or xchg (bad) hlt pop add dec std incb adc (bad) xor call sub lahf pop sbb js popa test mov sub push test loop add je pop push jno sahf sub xor push imul dec orb mov push enter insb mov (bad) jle or and lods mov mov sub mov sbb mov or push test mov sbb sti push pop inc xor or ret cmp std mov adc push aam in xor cld add push stos loope loop xorl (bad) pop insb ljmp jbe scas pop push mov lods sbb jnp add push stos add sbb sahf icebp cmp scas mov pop or test add xchg push lds mov sbb mov push push daa sbb xor mov aam sub or cmp scas sbb and or mov or data16 rorb xchg inc jne inc sub mov sbb xorl mov cli and lods sub add jecxz test xor cmp lds fwait mov mov icebp xor push jno or mov loope xchg data16 push and xor mov sub jnp std insl jo sahf lcall ret xlat insl mov pusha and inc xchg cmp repz and adc jge paddusw ss negb dec jmp shll insl mov inc adc push push ror push test cmp popa push add cmp lcall arpl cld cmpsb cs and ljmp dec add test cmp xor rorb test imull into andb mov bound push es xor subb cmpsl xor cmpb lret xor inc sti out mov push in jbe inc add flds cmp push and push pop dec iret and dec clc add std push inc or jo sahf sub xor add and inc sahf repnz pop xlat (bad) adc test lods mov push rolb push test sti jmp mov dec outsb lret (bad) mov adc sub cmp add mov push popf mov gs adc mov dec lea sbb les rcr aam aaa in sub pusha (bad) adc or push add bound insl sarl inc fcoms fldl add pop add sbb arpl cmp outsb and orl mov rcrb dec or aam mov xor adc popl xor pop pusha push (bad) push outsb cmp xor in mov xorb and and lock (bad) pop ss xor sbb push icebp add sbb in adc roll sub and nop sbb ds mov (bad) xchg mov into lahf jp adcl mov adc into xor cmp inc and fucompp fildl xor nop cmc xor sbb jl nop mov add add jae or xlat xor xchg popa test xorl ret pusha ja mov cmpsl mov mov mov pop bound dec sbb push lods push jg or in sub pusha adc xchg inc out cmp js adc das shll jecxz or push xor faddl pusha aaa (bad) pusha lea dec lds or add pandn nop enter push in mov push (bad) sbb jne repnz sub mov mov std cmc adc mov add or add adc and and adc mov jge add push push hlt aas pop jnp pop sub imul adc push out sti xchg jl and add nop pusha push fsubl andb mov pop dec pusha cmp std mov adc dec inc sub pop (bad) or sub add mov push mov cwtl sub jbe enter add xchg xor pop xor xchg mov add inc and je push sbb sbb and mov repnz mov add fwait push add call xchg inc fimull inc inc cmc push sub adc add sub jle add pop fmull add xorb xchg mov dec rcll lea sbb rcrl lods ds or push (bad) icebp jno cmpsb sbb sub adc stos mov nop mov xor add dec cmp mov sub dec xchg cmc jmp pop add in push cmp pushf sahf mov or icebp or add dec push pop push daa cmp test dec lret rep add inc mov adc dec test and xchg sbb in xor inc cwtl dec loope leave xor js cld sbb add cld mov mov sub jmp adc int mov data16 sbb mov mov and (bad) mov subl mov xchg xor dec sub or pop rcrb inc rorl popa notb push test testb out scas mov and xor pop jmp dec call sbb adc sub cld enter lcall xor addr16 adc inc sbb shlb ret adc aam add sbb xor (bad) adc lods xchg cmp cmpb out pop xchg push in rorb lret mov or add sub hlt aaa mov sub xchg cmp lods test notb idivl test and add loopne mov inc add rolb pop xchg rorb jl push sbb pop and in xor ja test pop push mov jle sub sbb add jae mov int pushf fiaddl sahf cmp sbb xchg or cmp or rcrb push roll popa dec cwtl je mov adc or pusha inc or jnp je ret pusha or lock xor loopne int push mov pop xchg test arpl jp add mov jno push pushf and sub add scas mov inc insb add and sbb cmp lods add sbb pop sub lahf sbb sbb sbb or imul xchg sbbl das jmp pop sbb mov jns jp dec jg xorb das shlb xor adc ficoml xor xchg sbb push xor clc inc inc xchg loopne jle mov mov push add bnd add call inc mov aad test push and cld add xchg or incb add xor add inc cmpsb xor ret insl add sbb pop int3 xchg mov cmpsl inc mov adc syscall pop add popa test sbb fiadd mov scas outsb shlb pop sbb test pop repnz sti push push add xchg movsl cmp or xor push jae add mov mov add add test bound fild out outsl jbe lock push insl popf add pop out add and xchg test pop bound mov addr16 stos les and call int3 fidiv mov add es push mov adc sbb xor out pop cmp and sbb popf js cmp aam je fsubrs out jmp mov push add mov cmp shrl inc pop cmp and sub pop inc inc popa lahf xor (bad) jb mov mov mov jne jl fdivp push sbb lcall add ds and lret lahf nop dec hlt sahf jne sub jae pop outsb bndldx dec imul push aas insl jle cmp sbb das dec sub or aaa inc inc adc dec outsb mov fs es push cld scas daa mov dec loop jecxz addr16 xor sbb or scas xchg mov mov leave imul aad lcall adc dec cmp push and cs in add pop push pop xchg jmp xchg subb add mov aam lcall pop movl lret icebp loope std push add roll inc iret add cmp loopne jp fdivrl in mov sbb aaa mov mov adc adcl adc add daa and sbb xchg je or in ret out xchg add mov push and sbb insb inc xchg hlt addr16 fwait movb test inc ljmp cmp add and or pop mov dec loopne cmp lea jo pop inc dec dec movsl add pop ja pop insl in push gs les sbb sub adc out push (bad) cmp lret mov pushf adc pusha or lods xchg mov jb cwtl mov jg jns inc (bad) les fldl push aaa (bad) out dec jge cmp (bad) xor andl cwtl xor pop mov mov out xchg add outsb sti dec aam add mov sbb inc inc test add (bad) mov outsl dec inc xlat pop cmc in pop jge push xchg stos cmpsl roll sub pop repnz jno sbb mov adc mov in xchg in xor movsl push dec les sub pop add and stos lock pusha sub scas add pop dec dec xlat cld shll rclb sub movsl js inc and mov push sbb cmp jne cmpsb sub push sbb lret sbb adc aas mov aaa (bad) and stc or push scas rol aad pusha sbb xchg in hlt rorl (bad) fadds mov (bad) imul add jae repz and inc jp add cmp or in jnp and sub xchg sub add inc add (bad) rdmsr push out outsl and add aas pop mov sub cmp jmp sbb xor (bad) add inc iret mov sub into inc sbb and jb lret dec ds dec push add mov xor and dec push cmpsb adc inc mov cmp jnp js mov shlb movsl cmp inc add or jle dec sbb adc mov add out dec xor jle cwtl pop test sbb rcrb dec je or (bad) mov xchg mov sub cltd cmpb pop jne call shl xchg mov shrl adc aam jns jecxz mov mov pusha sub mov out cld ds incb xor in les or mov fdivl adc cwtl push mov sbb adc sahf or jge into test out sub and mov xchg or addl xor add aam adc nop cmp xchg xchg mov scas dec xor add js push adc dec scas xor (bad) fsubs idivb imul xor xchg pushf xchg (bad) out sti sub ret sbb or bound (bad) cltd pop rol cmp repnz or add push out (bad) xor (bad) jl sub jg adcl pop add shll out verw popf clc lds add xchg popa ret lahf mov data16 cwtl sub ss loope xor push mov or inc sti sbb mov out rorb shll jl push mov add orl bound xor xor mov or lret pushf packsswb les sub jo fwait add mov push arpl imul jo dec test jmp cwtl call mov and add rcrl sbb push js divb pop ja popf syscall sbb lods shlb and push pop add loopne push sub pop inc and sub push (bad) aaa xchg aad and cmp add xor pop xchg jmp dec and dec (bad) cmc xor jle shlb inc or inc imul addr16 jle mov cld pop call sub pusha add int3 sti jns and adc idivl sub das pop std xor xor lea mov sbb or dec shr addr16 cltd int3 or jae and stos pop or sbb and (bad) subl xor inc dec pop push nop jb dec movsb jno dec pop dec cwtl pop dec mov and mov xor fdivr sub mov adc and sbb add repnz fstps stc pusha imul push ret add bound mov sbb pop sub sub pop mov push add (bad) jne sbb test mov mov pop xchg sub jbe idiv fs adc std pop pop add icebp pop push sub mov or lods in sbb jbe shrb mov loop inc push pusha gs imul aaa push adc add outsb lcall xor shrl cld iret ljmp lcall rcll sub cmp clc add and dec add dec push fadds sub test pushf xor add sbb add or xor inc push add out xchg dec subl into and xchg mov aad xchg mov fmull mov int3 and test push sub adc orb insb dec subb hlt jge xor dec xchg pushf rorl dec pop push test clc andl stos mov outsb xchg into add ret sbb dec mov add push popa xchg sub cmpsl fbld pop (bad) push test int3 fs cmp or mov mov pop rcrb sub cmpsl pusha jp ret aaa pop cs std add lcall fs in adc pop test add mov and pop es inc and jl nop lcall dec imul xor mov stos mov push pop adc mov cmpsb pop cmp cmp xchg mov test push fisubr out icebp or aas jno sahf add rcrl outsl xchg and rclb outsl add and sub bound push pop add aad mov and sbbb inc iret and loopne sub imull add cmc add data16 bound lret popa mov orl add imul pop (bad) out jbe je add daa pop push sub stc or (bad) mov stc adc inc sbb mov xor scas pop shrb xor pop mov es sbb cwtl lret pusha cmp cld pusha mov dec nop fbstp pop in jo pusha xchg (bad) cmp pop jmp mov shlb bound pop jns test add adc xor nop xchg adc (bad) jnp pusha iret xor sub sbb push fsubrl mov subb adc (bad) ret (bad) xor mov popa mov add stc xor cmp jle mov xor lret decb daa or cmpb lock imul xchg pop fiadd cmp int3 add ja movsb or mov xor pusha call add out pusha ss mov les scas mov pop int fiadd lods sti pusha pop sbb repz and adc add cmp jnp,pt test and dec jns lods pop popf or jo int3 pop test test test ss (bad) sbb xorb lods sbb cs xchg (bad) arpl bound pop cmp movsb lods pusha dec xchg cmp and (bad) loope cmp cs insb add inc mov add aaa push mov cmpsl nop sbb push inc (bad) jae cs scas in loop int3 add inc pop push or sub pop xchg pop mov test add add sub mov xor add cmovge negl adc xchg lods add pop aas mov in popf xor inc add insl or mov out push fldenv sbb dec mov mov pop mov jo dec js (bad) pop sbbl cltd test dec and mov stos cmpsb or rclb push jp pusha inc adc add or inc (bad) jno xchg roll mov int3 add ljmp mov fcoml or mov aaa add xor jl movsl mov add ljmp pop or ja dec mov cmp test and adc mov xchg lock je mov inc sarl add push sub cmc inc testb leave dec repnz lods orl push int3 cmpsb or cld xchg clc jmp orb movsb push stos call out sbb add adc add stos add stos add movsl imull mov cmpsl leave aaa daa adc dec or rcrl mov inc mov adc sbb add jmp pop inc aas inc adcb ret test dec adc adc jae pusha jp jne out and icebp daa or jns pop add cmc das movsl jle sbb subl inc in loope pop add ret repnz and daa mov popa dec enter mov repz add xor xchg aad xchg rcr inc jae in in adc push push nop push stc inc sub clc adcl leave push pop jmp dec mov or stc sbb push sbb sub sub enter mov cmc mov adc into jno add or or test or subb fwait and and cmp jns adc sub mov push sbb xchg or xor es xchg pusha scas fldt pop lahf test mov (bad) adc xchg xor push sahf and pop jge (bad) loopne std adc je loop aaa add jne movsl add (bad) scas xor and clc and push inc loop jns stc sbb jnp xchg push repz sub popa out sub cmp jl mov mov outsl rcr sbb mov and dec and movsb push aam jl dec push nop sahf ljmp push inc dec cmp (bad) sbb cltd jne xor inc add sbb and clc dec pop rclb aad (bad) xor dec xchg (bad) rcr push sbb rclb cmpb or (bad) cmp mov adc jno add and stc cltd xor and push cmp nop cli xor sbb or cmp daa insl addr16 es cmp lret stos fcmovu push and lret inc test and add fdivrl pop push mov andb or mov rorl cmp inc popa stc mov cmp imul mov add es mov lret out sub push sbb cmp inc rcrl pusha faddl loope test aaa jmp lret in dec (bad) sub lahf add inc sahf pop cmp cmp stc or sbb (bad) or lret add inc (bad) les loopne push pop stos sub cltd push inc (bad) and adc sbb sbb in mov adc in mov push cmp push jmp mov sbb cmpsl nop fistpl push repz jno jmp mov pusha sub call push dec mov sahf mov dec xor test aam sbb mov repnz cmp test out dec sbb pop int mov jl jecxz add addl into xor bound lret daa daa test pop and add xchg fild popf adc jo std sbb dec mov outsb jmp inc pusha add xchg rolb fmuls jns jmp insb cmp sti jge enter jp add inc adc add push inc or daa xor xor inc xchg push sub cwtl inc mov rcrb jl dec push fld inc (bad) xor and cmp cmpl insl sti pusha jmp ficoml add stc push pop fbstp and pop ds shll loopne es xchg movsb mov cmpl lods jp jo and mov jle in add scas inc pop inc std shlb lea lret jl adc and ror cmpsl sbb ss xor xchg or clc jnp lock dec and das and repnz add fs dec push cmp jno push and xchg or mov cmp and or add push sub dec inc lea popf dec push mov cmp cmp sbb outsl out pop add dec test orl sbb pusha jl rorb mov insb sub (bad) mov or cmp fbld sarl adc pop jno hlt bound or jecxz daa and add pusha int3 (bad) cmpsl mov dec movsb cmp sub rsm jl push push mov jg adc adc xchg mov roll add inc repz add loopne mov inc pop jmp push ss jno es push mov imul loop cmpl jo add data16 cmpb std cs jb cmpl sarb pusha test lods adc fmuls iret sbb out cmpsb add add pusha pop sbb std call and add mov pop push xchg mov fnstsw lods mov aas inc das dec fsubs ljmp loop push add test mov jae scas jmp xor lahf cmp mov pushw bound repnz jbe add cmp add mov imul cmp and or jbe pop sbb mov js cwtl movsb mov mov repnz add adc sbb mov pop adc sub out out scas mov mov in push mov pop xor mov cmp xchg dec xor inc ret daa xor gs inc add sub mov or rcl mov int mov ret add xchg and mov out cmp imul pop mov mov mov ljmp and rolb cld shll pop push sub add lret int xchg idivl xor cmpsl jbe leave movsb dec xchg jmp scas aas popa jne jno (bad) sub (bad) xor sbb adc xor in pop pop lret jnp push pusha fstpt fs into bound and sbb in rcrl in sub cvtpi2ps (bad) cmpb pop loopne fmuls das or pop stos push push add clc pop add jmp jbe mov or mov mov lcall and push xchg daa push inc xchg and adc jl add sbb setle ficomp cmp and icebp cmp add cs add mov cmc pop pop cmp push test xor inc pop ja in je mov test bound push test xchg mov pushf aad dec enter int3 movsl mov cmp je movsl fisttpl fsubs push insl add push sbb mov incl lahf mov ss adc ja sub sahf push arpl jnp add adc bound mov mov loopne cmp adcb jl pop ss subb lea pop in test cmp jmp xchg cmc add jnp fcoms push scas push leave popf sub adc jmp in or popa mov add mov jmp push idivl jno sub add and sub or lods idivl aas push mov fcoml and or mov push pop mov and jmp jns xor lahf popa aaa (bad) push jno leave scas pop outsb and mov add stos sti pop decl fmull out push mov add cwtl inc xor int3 movsb xorl add addr16 imul dec push xor pop jle pushl add mulb sub sub xchg pop pop lods xlat cmc out movsb jmp lret cmp (bad) imul add sbbb xchg pop sbb adc jnp addr16 repz mov jmp aam or push xchg push add cmpsl or addr16 std in lods je sahf push fs add jge pop sahf add inc mov jns push adc or pop popa or mov jmp mov fldt movsl pop dec loopne test ss and fmuls fisubr cmp outsb out cli dec in out hlt push pop mov fdivs adc mov add aaa lods cmpsb mov sub sub mov xor rcr inc shrl jae xchg cltd xchg in push (bad) aaa daa addr16 jnp (bad) repnz cmp out sbb in adc arpl jbe mov jp or cltd mov rcrb mov gs aam cmp jne xor jg test clc out jle pop pop repz xor xor mov mov or (bad) jmp stc jbe cld xor push inc out mov sbb pusha xor add jg fdivrl add sub mov jmp push pusha push pop arpl test (bad) movsl stos and test pop push jle (bad) paddd add ret or mov fsubrl adc test jae mov test pop add (bad) clc fstpt mov jle cwtl das rcll jae pop add mov adc mov add rclb inc adc and in aam fadd dec addr16 mov ret inc mov sbb outsl out add pop pop jle gs (bad) das xlat dec test aam cli push in nop scas rcl push add sbb outsl shr push dec neg push push adc incl dec aad test push in test push inc mov sub jle mov repz call and inc push mov add test fwait xor push xchg in repz adcb jg out and push out insb xchg sqrtps mov jp roll stos sub test push test je add pop xlat mov or aaa add pop sub fisttp mov xchg faddl aam rcrb mov sbb nop and hlt xchg repz adc xor das out xchg stos sub push (bad) aaa mov or loope in imul lret xchg pop (bad) mov add subl push js fwait and mov push adc scas and inc lods or xchg fldenv xor dec or fldenv mull aas jg or mov cmpsl xchg jge pop ds pop sbbl jge inc mov xlat ss and xor and dec out enter test sbb in lods aas shll dec dec not rorb pop push fwait cmp ja hlt dec xor aas pavgw icebp dec mov movsb adc aam sub add jbe decl test jae push push in frstor pop cmp loop xchg mov mov mov mov mov dec lea mov sbb mov mov aad inc (bad) dec mov test ja jle cmp (bad) pop push push mov aas jl add mov sti fs pop aam xor pop orl xchg nop push add cmp imul stos enter popa aas or mov fsubrs fisub ficoml jmp mov and fwait subl shrb mov (bad) lods test dec xlat and sub push mov cmovnp mov and jp lds mov push jg cmp adc push mov aad mov popa inc xlat ja mov or sub pop mov dec clc (bad) movsb mov push fcoms jnp adc mov mov xchg out xor scas cli imull mov sub sub inc mov pop dec repz out imul cmpsb mov push out pusha jae xor sub lods mov mov inc push jecxz mov add push (bad) sbb in mov mov pop sub push lret inc mov stc xlat xchg mov pop push outsl out jno and jbe inc aaa movsl hlt sbb adc inc fidivr mov dec cmp je cmpsb dec (bad) shrb mov or int sub xchg negl (bad) mov add xor xor dec sub cmp in into lcall int3 jno repnz dec push inc pushf pop push push pop cli xlat nop div ja stos movsb lods jg mov popa fmull push or push mov lret (bad) pop dec cmpsl add adc ljmp enter sbb xor cld add xor adc out loopne loopne ja add adc dec dec add jae cwtl (bad) mov adc push push fwait mov mov cli sub and mov shr int3 mov mov mov daa (bad) jo pushf push push popf jnp lahf es push jle xor inc add jae pop outsb sub mov std in mov xchg mov xchg push dec aam pop jnp pop inc mov add jecxz repnz or out mov sub or scas lret fmull mov sbb js daa insb jge cs xchg pop test xor pop or jge sub lods lret xchg pop pop call jmp loopne add arpl mov in mov push aam dec push lds sub inc fwait sbb lock pop add cmp xor push popa xchg add add jl push mov pop sub push roll xchg dec push (bad) xor enter add push xchg mov in xchg test xchg flds cmpl add ljmp mov mov out mov or ret stos dec add and add scas lds xchg lcall mov frstor add pop push and mov jmp insl add push and cmp jp lcall or (bad) jo mov jns mov push imul add pushf push xchg movsb pusha jne mov pop push jg mov sti push std pop loopne adc insb mov pop inc dec in ja pusha push ret sbb ljmp push push ja mov jle jne dec dec dec adcl ret mov add icebp dec cld mov cmpsb mov jb (bad) pop dec sub xor into in jb push push jnp ds pop jle jns sbb loopne lret dec call xor jmp movsb aam jl inc in pop ss pusha mov adc andb mov cmp inc add adc jp popa sbb lea sub loopne call stos add es add vcomiss pop cwtl add adc mov push add push or mov js mov jns faddl or into (bad) out enter dec sub test js and adc add mov cmp sti mov popf arpl data16 or fiaddl and test pop fchs jno mov or pop shl daa cmp fcomp push add xchg je jae or pushf mov or sbbl and aas (bad) icebp (bad) scas aaa mov test shrb sbb repz fs scas iret xchg dec sub rep mov dec test sti xchg jmp pop rolb sub and fmuls (bad) (bad) pop or aas sub pop nop lcall sub adc jno adc retw cs jg add xor and mov inc push push mov aad stos xchg pop ret icebp (bad) lods and xor mov add lods outsb add movsl iret cmp faddl jge jp in sarb mov movb cmp jno and push add je bswap (bad) inc add cld out jg and hlt outsl dec sub xchg sub insl stos sub fsubrs pop mov test out jg lcall es or idivb aam ljmp in sahf push iret cmp sti sub push pop pusha pusha adc xchg sahf and sub popa call hlt pushf in sub or addr16 dec cmp adc rol loop sub and test xchg ja sub cmp cmc in adcl in fisttpl mov sub aas mov sti ja ret jg fmuls mov imul imul mov xor sbb inc xor push cmp pop mov ja pop mov ljmp loopne (bad) inc dec pop cmc pushf nop push ljmp and push in jns movb adc mov add repz jo cmp test pop cmp push xchg inc sub lds rclb lahf xchg test in stos test xchg pop sti dec cmpsl push mov push lret mov stos jb sub aam pop div xor pop out adc rcrl cmp jmp sbbl ja adc adc push popf insl mov ss shrl pop add pop push mov add lods sbb mov push lock out dec fsubrs jmp popf jae xor inc xchg out (bad) sub popf sbb (bad) push xchg jns xor arpl mov adcb ja or add stos addb jnp add and loop fistpll movsb mov add fistpll or add pusha mov or daa lea roll subl sub mov xorl mov pop cmpsb mov aaa add pop sub dec divl jnp cld jl fnsave mov fiadd out xchg pop sub jmp ja hlt sub rorl (bad) mov sub or or mov sbb popa push (bad) and adc ljmp dec push cld xor out pop dec pop jmp and add add or push out xchg mov scas mov pop jle cmp rolb dec add stos fsubl orl jno push xchg xor les call xor add xchg enter cmp cld mov push mov jge mov push mov push nop and dec xor and es in movl add in mov nop imul inc dec xchg xor add fsubrl sbb sub insl test cmp dec mov cmpsb aaa xchg in pop pop inc lods bound mov imul addr16 xchg xor lret hlt add es inc or add cmp test add push mov mov add add fstl fs nop pop aas jle movsb dec xchg iret adc cmp sub aam in cld sbb sbb daa sub push test cmp push add data16 dec pop mov nop adc out xchg repz stc push adc mov push push sahf sbb inc sbb and jmp and push push push pushf dec enter scas fs add sti add fucomp in inc sub cmpl add adc pop adc js jmp fidivrl mov sub nopl subb pop xchg lock pusha cmp push xor jne lret les addr16 sbb divl loop add lret cmp jbe nop xor aaa mov cltd (bad) pop outsb mov and mov mov add movsb sub jmp push popa add sub cmp ret xorb imul add adc xlat mov ds pop cs dec lds or aaa (bad) and stos iret mov out ja idivb pop dec lods adc jg and rolb cmc sub pop hlt mov cli fucomp mov std dec pop pop push fidivrl rolb add xor lret push xchg jnp cmp (bad) xor dec aad movsl mov or int3 scas mov add mov xor push lret inc int sti jns push dec and add push push out push fwait inc xor push lret cmc dec push dec cmpl dec sbb mov xchg aas lahf jmp ljmp sub movsl or cmp stc and push int (bad) ja out sbb or ds inc mov jae or xchg adc pusha xchg push mov sub sti pop int3 clc fiadd pusha fnstsw jmp xchg icebp lods lods mov cmp enter mov xchg pop stos sahf pop outsl outsb jno std jns stc test or pop xorb mov cld mov insb dec pop push in inc shl cwtl mov mov and loop (bad) sub xchg lds test push loop stos adc mov pusha adc add test pusha xor sub push jae mov push xchg daa je rolb adcb test rcrb into push int pusha ds push pop daa dec test (bad) xchg adc pop xor and nop and mov shr leave push stos bound das push jnp and data16 in pushl add adc leave jge rclb xor imul (bad) sti pusha push pusha pop push adc xor aas pop ljmp xchg xchg mov mov or rorl mov fistpll push mov pop dec add les add loopne popa es xchg clc and add cmpsb lret repz in loopne lds icebp jno push pop jnp stc push adc lods push push in out push xchg lea sbb fldl sbbl and addr16 cli cmp inc movsl jmp mov xor insl test push int xor push push push fildll jb in dec mov cmc sbb and dec xor pop pop and loopne das fnstenv jmp push out fcomps jmp mov xchg and dec or pop and je or lods lock pop test outsb xor and push mov jne dec je scas add sbb jo cmp sahf adc fs jle dec inc out mov xlat std mov pop and (bad) pop inc ret mov push push cmpsl fadd jnp pop std mov add loope,pn nop cmp sbb test mov addr16 pop out aas and fnstenv movsb nop and pop pop decb jmp fldcw push jmp ret and sub jge das dec add ror data16 iret fmuls (bad) icebp ret orb xchg (bad) into out addr16 repz arpl cmp fsubrs xor out mov mov mov or xor mov insb dec pop mov mov adc mov push ljmp dec fwait and or in and xchg adc lcall push sub push xchg jno or mull jae mov movlps stos pop or mov out inc leave add dec add dec sbb idivb mov into or dec int3 test mov jle mov adc and pop pop mov or xlat aaa add and (bad) icebp incb add jbe cmpxchg or std jnp in sub rcll inc pop sar push cmpl sbb bnd xchg push stc imul mov daa xor stc jb sub xchg jmp idivl or add jae addr16 push mov xor sub inc sbb gs adc jmp and mov mov jg inc int pop out push xchg jns icebp outsl lret jg leave push adc jmp arpl push pop pop xchg jge fistpl sbb pop adc jecxz subl pop nop cmp (bad) xor out add out lods mov mov das dec in push movsb add xchg movsl jbe stos scas dec clc nop mov scas (bad) push lods (bad) push movsl fdivs and jmp xlat and das add mov ret std lret cmp aam pop xchg adc mov std sub xchg aaa pop ret int3 pop test adc push cmp out es les and add lret add test cmp bound movb in mov dec pop in inc sbb xchg or adc das leave jae sub negb xor or pusha stc push jnp rcrb xor std arpl add js ja imul jbe inc push data16 movsb cwtl pop add or xchg mov mov xchg mov lods or dec in insb cltd out adc jne lock call sub adc sbb je mov mov or addr16 or add rcll add jnp xorl mov ficom xorl pushl testb add fwait insb cwtl stos push cs mov push into sbb sub cmp rorb std push and add xor (bad) dec insl push popf inc cmp sbb pusha or jo dec dec lds rcll pusha fimull fadds fwait sbb sbb and and cmp rcrb loopne cmp mov movsb daa cmc push jnp sbb and jne sahf and or and in xor ret daa or testl testl fstpl ret xor and sub and add es loop xor add add icebp lock pop je and xor lret out das popa sbb push jnp or inc xlat mov dec out mov push movl cs push xchg popl data16 cltd sub inc ljmp mov orb iret fcompl push and addb xchg pop inc inc cmp push jle lods cld std test adc push inc and adc sbb xor lds push mov pusha ss call xor fisubl pop sub sbb js lock jmp fildl dec cmc push fcomps rcrb (bad) rclb add sub push std mov add sti xor cmp inc hlt fisttpll (bad) sbb push cs mov xor les jge nop fmulp prefetch in in sub repnz mov daa insb dec or mov loopne mov stos sahf mov inc adc mov int3 aam loop mov adc int3 (bad) test gs mov fldt jp movl mov inc add es xor add rclb mov add adc mov jg and add dec mov add cmp sahf sub xchg ret mov xor xchg out sub mov xchg xlat sbb ret sbb sub mov jecxz pusha cld mov es arpl sbb jbe or cmpsb fdivl xor xchg lods mov icebp add push in shll das (bad) aad lcall and mov lahf and add dec push addr16 loop add in mov mov mov push subl mov dec add or clc push imul fbld cmp rol add inc (bad) cld mov push scas jns mov fwait add add dec cmc scas sbb (bad) iret push fild fcompl and add and std fiaddl out or call push cli gs xchg aaa pusha sbb pop jo add or cmc ds pusha shlb push mov push test lock popa sub push fmull pusha and mov fimull sub sbb dec pop orl pop pop cmp sub sbb sbb movsl mov pop mov and test sti mov std jge,pt add js or sub sub push (bad) push fcompl and add jle mov mov stos in pop add push pop jp xor and xor aaa lods insb pop xchg in leave imul lock xcrypt-ecb cmpsl dec aam pop jle jl ret or aas add push ljmp stos cmp cmc ljmp or sahf pop mov movsl sub pop jns inc pop jmp call jmp test sub push push sub mov dec enter sbb xor in daa aam cmpsl jae mov ja jno popa mov ret pop add into sahf ja repz push lods dec aam push aas pop xor (bad) call inc test push push mov mov imul mov add add inc (bad) nop sub (bad) jg push popa sbb insl sub pop mov push cmp and (bad) xor mov jmp mov xchg out adc xor push rcl in push cmc imul sub push or jns out jae stc decb sub pop push dec mov jge insb rolb push je scas xchg (bad) lahf jns stos sub mov ret test pop jmp fs or inc test xchg lds inc dec xor sbb imul pop (bad) mov imul push (bad) pop pop sbb xchg sub std mov sub push (bad) daa data16 jmp daa xchg pop lahf jns sbb mulb lahf addr16 lock mov add rcrl dec aam dec add push mov or sbb adc xchg sqrtps mov dec (bad) aad fsubrs sbb xor mov pop stc rsm movsl mov fidiv lahf add out cli addr16 lret pop (bad) jg out iret inc or in mulb out jge iret lock xchg sub sub add sbb rolb jns mov int3 lret mov mov je mov rcrb pop je cwtl or or (bad) outsb add ret sahf jp and aad push xor xchg sub xchg push inc add jo shrl in gs mov ret fistp sbb push push imul inc jle movl rcrb cmc add pop push cld jnp sbb jp iret and pop add xlat sub ret ret mov mov and icebp test jb lret push lods into js mov (bad) adc mov sbb add jle xor adc sub (bad) je and mov add call mov add jmp add arpl cmp aas add sbb adc sbbb jmp mov test sub fcomi or pop mov and push push loope xchg adc sbb clc stos into xor push jae les push pop xor lret fwait (bad) and cwtl js (bad) cmp jbe sub das inc mov dec subl inc repz or inc jnp xchg pop sti mov pop jbe lds cmp outsb jmp dec lds sub push stc xchg (bad) nop add mov add xor pop add cwtl in push pop jp minps jg pop imul adc fidiv dec pop nop clc mov out adc pop stos repnz jmp push fldt pop mov into add popa jbe sub and or lret out and in sbb or jle pop bnd in push sbb push lods outsb mov rcr ljmp out adc mov aas sub pop ret lahf icebp (bad) daa fmul mov jge andl into mov mov jmp mov xchg into shll pop clc cmp push push iret mov pop mov in out add imul std aas mov cwtl mov mov das lcall or sub repnz int cmp xchg out jbe iret sbb cmp ret mov shr dec xchg lock pushf repz mov mov or lcall mov mov jne (bad) (bad) xchg or aam push insl testl mov jmp pop lea pop xor pop or dec and (bad) jnp stos popa mov mov pop xchg push ljmp call out leave mov adc data16 xchg jp ds cmp incb pop and cmp fisub aam xchg jmp pop and sbb jmp movsl jb xchg mov push sub mov push and aaa aad jmp and sub popf cwtl fdivs les add mov jne (bad) movsl mov add xchg dec cmp outsb aas repz das and ljmp inc movsb pop mov mov fdivrl mov aaa (bad) sbb (bad) gs push aaa popa movsl (bad) scas pop push pop pop not ljmp and cmp jmp mov imul insb mov iret push and add push (bad) sub (bad) aad inc mov (bad) dec and xor mov shl es and push or sub push inc stos xor int outsb inc std dec aad inc bound xor dec mov jge pop and dec repnz add pop pop pop lods rolb incl repz pushf xchg pop push sub inc in adc mov dec xchg (bad) mov pop pop push test jno gs mov xor sbb enter lods sub iret int aaa notl add loop pop stc int scas sbb stos push sbb jns add lea lcall xor (bad) scas cmpsb mov jl pop imul or repz outsl cld pop popf lcall (bad) dec mov in mov mov jns or aas rcr pop dec lcall (bad) pop mov daa jg lods mov cwtl out (bad) incb xlat cmp and pushf push mov test iret pop pop les shrl jae adc out pop add outsb adc sub pop iret xor mov sbb outsb ss test sub mov mov stc adc push adc jg push cmp ljmp loope push push push dec arpl push call or pop jmp pop fldl and (bad) and out xchg or or xchg fcompl mov push jmp lock mov mov cmp inc dec xchg in dec xor xchg dec fidiv jmp and push cmp xor add sub icebp jmp push inc dec dec mov xchg pop out sub adc push loope clc outsl mov pushf lret fsubrs mov out xlat xchg pop cmpsb mov dec xor inc jb add jg mov aam das jle pop shlb vmaxps aas imul mov adc dec pop add push jmp mov or mov or es xor mov cmp or fs nop xchg mov pop and icebp mulb cwtl pop add xor stc xchg test movsl stos ret (bad) jnp jge xchg push add or cli or add sbb pushf mov (bad) sub and pop ret dec and clc or cmpsl loop (bad) mov jmp or sub pop or test stos ja stos cld sub frstor or fiadd mov loope pop into mov hlt pop cmp add mov cmp into rcrb sbb sub xor pushl aas xchg dec xor out add jge insl pop mov (bad) hlt pop add pop cwtl in mov add inc fs popf push dec jmp hlt xchg hlt xchg or fsts jne add xchg aaa add aad inc sbb push cmc cmp ret mov icebp inc out pusha test sbb clc xchg cld shrl hlt pop add loop xor mov les imul mov push add add dec add incb and dec pop lahf jno fmuls sbbb xor jl adc imul add lret cmc js,pt inc test cmp in sbb mov aaa dec push or jae (bad) xchg add movsl aam push pop pushf and sbb add ficomp cwtl pop dec xchg push jp mov add mov (bad) movsl in sub cmp sbb xchg push icebp mov (bad) lock mov adc push mov fcompp outsl cwtl lcall dec or fwait pop out cli das xor movsl push daa jbe je or xchg sahf adcb test dec imul jmp adc add cmp jg mov les (bad) insl mov inc sub mov les cmp dec pop fadds ret cmp dec sub inc sahf or mov or lcall rolb hlt adc sti roll jno leave add mov movsl push or inc pop add mov mov fistpl fsub mov aas xchg sbb push inc daa sub add push stos stc dec or lods jle popa bound in pusha add mov fildl inc mov and dec mov adc pop cmc jno pusha pop pop xor push ja dec jl cwtl and xor (bad) loop pop or dec iret or push dec test (bad) bound aad jecxz sbb stos (bad) popf out rolb cmp add mov fbld or jo js or test pop push dec (bad) fstps scas pop arpl insl mov or hlt lret dec sbb fbld mov xor xor pop gs lods aas add nop pushf rcrb cmp jg int dec cmp iret dec xor lcall sbb pop aas or inc nop xchg pusha xchg mov fs aas call leave push push mov adc mov cmp add add push add enter bound add lea scas cltd in orl mov push adc scas imul xchg mov fistl je adc loop je lea add (bad) and mul and pop popf (bad) imul mov push push dec mov (bad) lret dec in sbb mov jns sbb sbb sbb mov cmp sbb cmp (bad) psignb pop rclb mov push aas and fdivs push in fwait movb ror shlb sbb sub mov (bad) (bad) cmp dec sub orb std xor add ja pop inc enter fwait lods push les subl jecxz sahf lods jmp hlt fsubl mov test sbb and and js xor cmpb xor or and push das enter or sbb mov adc cmp and mov fbstp push sbb out shlb rorl fisubr adc inc pop hlt lahf flds dec rcl scas xor pop add fnstenv add add or xor lcall jbe (bad) je popf cmp xchg add mov mov dec mov or fidivrl or insl cmp sub out ret cwtl mov mov movsb repz repnz mov dec gs jb popf ret sub push mov repz mov pop mov sub xor stc jns mov movsb or loopne mulb jb and out jmp stos cmp push push lcall jb loope lcall sub add push pop jg sbb (bad) or std push xor cltd push js (bad) mov adc mov push or push and and add mov push lahf jecxz iret sbb push clc mov stos orl add (bad) notl repnz cmp inc add (bad) pop adc sbb fwait xor mov cwtl mov (bad) scas or xor dec mov popf push addr16 mov cmp mov push sub push jecxz test nop lret adc xor xchg push mov (bad) inc fadds lods inc sti cmpsb std mov pop rolb out add mov repnz aad roll aas sub nop push adc xor add test pop cmp and ljmp or daa cmp fisub mov add lret add mov inc xor (bad) mov dec xlat xchg sbb addl add movsb hlt pop maskmovq mull xchg push test je add popl lret jae lods mov or or inc repnz sbb cmp test jae jge mov mov push mov dec pop rclb dec lcall dec sti push addb xor jo pushl add sub lcall cmc mov sbb ficoml jle movsl jmp dec jae adc mov sub sahf rclb sub in dec je sbb add sarb movsb mov stos enter nop arpl (bad) xchg sbb adc dec pop add cld shll ljmp rcl adc fist adc clc fiaddl mov jg or dec add pop push scas mov sbb nop adc (bad) dec dec test inc mov xorb pop xor dec dec das xor adcb mov xchg xchg andb movsb mov add lds jbe xor xor leave or out imul adcb arpl dec repnz sbb jle inc dec jae push (bad) push inc les loopne or pop or pop addr16 adc sbbl mov or xchg mov xlat xor arpl stos pusha mov jmp iret or je orb mov inc std mov cs sub add ss jge jp and mov cmp cmpsl scas add in popw xchg pop jb jg (bad) cltd repnz shlb cmp insb jp in (bad) int3 mov add xchg pop call push into inc pusha pop push sbb stos dec repz (bad) mov dec sub les pop popa iret pop push lock popa inc imul adc or shrl mov out test shrb sub in je clc aam add sub sbb rcl ljmp cmp dec xor sarb scas and sti pop popa fldt xor jb cmp mov nop iret stos mov imul pandn shll jle inc jmp fwait cmp andb and lds xor mov push push mov mov mov xchg xchg sub push jno lret sub mov pop adc xchg sub outsl ss dec mov jnp or mov pop fstpl insb add outsb dec int outsl dec jne sahf inc lret push repnz or mov push fiaddl stos pop xor jl mov mov inc adc jns iret shrb mov mov push or or add xchg pusha inc dec (bad) cmc icebp lods rcrl fwait sbb loopne push out cmp jbe and sti mov pop es xchg (bad) adc push pop add es stos mov add hlt pusha sbb inc sub push (bad) aaa lcall xchg add jecxz lds adc sbb cmp add pop rorl push cmp xchg dec icebp aam xor in mov movzwl xor mov sub dec cli mov jg sbb out int rol out add and cmc push in movsl xchg adc sbb jg sub stos dec rcll sbb and mov mov out std push inc dec add mov jb lahf inc pop cmpsl cmp enter in cmp dec and test add ja (bad) mov or jmp in add mov adc stos add aas cmpsb fiaddl ret push add mov hlt sbbl stc test std popa and (bad) rcrl sbb cmp jmp cmp cld inc shr xchg out sbb sub push clc mov or add or adc sbb fstp rcrb dec fiadd leave in negl hlt js or push ror psrld jb sub mov popa (bad) mov in insl dec mulb aad cld adc or dec dec pushf or ret lcall jl xchg out sub scas sbb mov jp lods push fbld push stc fistpl mov cmp test inc pop movsl cld push fstp add mov xchg dec push aaa orl mov inc inc bound xor hlt add add lret (bad) popa adc std adc ret or xchg inc xor mov and push mov sahf and sub cmc add test push testl inc int3 mov ret inc push mov add fiaddl insb popa mov mov adc xchg hlt or pop cli out call sbb inc lods jg dec mov sbb pop out sub add add sbb adc jg jp add mov mov or cmpsb push mov sub mov aad and jae cmp in sahf stos stos push xor pushf (bad) cmp push movsb jae out cmp mov inc inc xor sbb push dec pop xor jo mov inc pusha jnp stos sahf mov sbb xor add cmpsl adc shll (bad) inc lret outsb cmpb les add mov pusha mov jo js jle jbe nop rcrb or hlt adc xor add addb jns sub out pop js push pusha jae aad int3 mov sbb mov mov flds fucomi inc test sub sbb push or and inc or or rcr or dec jle xchg in pop mov dec ret push mov mov push or fwait adc add loop xor ret inc mov jno lods dec dec stc xchg add (bad) mov cmpb and loop push add shll and or (bad) cmpb ret sub mov dec push push fild hlt xacquire sbb inc hlt add lea ret ds pusha adc add cmp dec jmp dec and xchg into pop cmp xor aad (bad) add xlat add xor repz sbb cld mov push data16 mov imul push xchg sbbb lock and sub adc gs cmp addb and sub inc (bad) jno outsl push or mov mov push scas sub and daa mov out and sbb inc loope add int out push inc movnti cs (bad) jo mov fadds cs cmp xor sbb sbb push mov cmp aas xor call mov or ret mov addr16 adc and xor adc out pop outsl pusha fs orb add sar mov mov leave std mov call xor fwait adc and js sbb add ret xor out test fistl lds mov adc pop pop cmp or cmp lods and or jle sub sti and xor daa adc or decl mov jbe testl inc jl rol push (bad) (bad) jg repnz xchg or dec mov lea je test xor lcall (bad) pop sub test repnz push mov cmp inc push (bad) cmp int inc dec js rolb push dec pop push xchg xchg xor test and stc inc (bad) jmp mov or inc pop stos and loopne ss fadd dec add mov std sub add rclb mov psubsw imul push insl or xchg adc popa mov push push add sti jno mov pop add test mov mov or adc ljmp sbb cmp mov lret xor andb cmp paddsw push fwait jge xchg sub daa ds adcb loop sahf pop or pop cmp jb mov outsl mov xor js add jns xchg mov shlb mov fildl xchg hlt orb or pop pop pop (bad) bound sub and add mov xorb mov and mov cmp add mov pop push lods xchg jl push add arpl daa dec mov cmpsb sbbb daa xchg jl push or sbb xchg js push sub imul lret pop push insb mov ficoml sub icebp out pop and add cs dec sbb or repz or aas out adc add jno xchg roll push shlb cvttps2pi pusha sub sti lcall push xchg in sub fs daa mov (bad) fisubl pop dec lahf mov jge dec mov cmc out or add jnp inc and inc shr (bad) or jbe and jge sbb cwtl dec frstor add sub xchg dec push jae pop lahf pusha add mov dec push jo add sub lea mov or ds dec mov cmp jmp sub in ds dec sbb pop add add adc pop out loop jne add and fs int mov cs dec pop int3 cwtl (bad) out idivl popf in loop adc mov and hlt divb add in lods pop lea xor cmp imul xchg sarb add outsb out ljmp les aas mov or push call add adc mov dec jmp mov inc push pop pusha iret pop add imul pusha xchg fs push cmp add inc sbbl sbb out movb cltd in loopne mov aad jge push movd pushf data16 xchg xor (bad) mov imul sub push xchg adc pop mov mov xchg ret adc imul ja sub orl xadd mov sub mov (bad) push mov mov add xor or push push dec aam add lahf xchg push das sub jno dec movsb pop or and not jb inc enter pushf jbe mov mov movsl fs mov xor add adc mov cmp pop (bad) xor icebp test idivl cmpl and sub popa adc add test xor mov inc cs and and inc jl mov lds out into sbb jmp pop sub add and iret sahf and inc loope adc ret jg dec (bad) ja sbb pop ss aam scas in add data16 or or mov ss pushf sbb inc mov dec or shlb xchg xor popf in dec and and jmp outsb pop aam and cs rcll fwait sub les add testl cltd movsl or jbe mov rcl cmpsb adc jae mov and push bnd incl aad lods (bad) aad movsb movsb decl daa jmp (bad) cmc mov mov mov sbb iret imul add les lahf add test adcb add push movsl adc pop mov inc roll mov sbb mov adc push mov pop add push push xor sahf inc and add movsl pop push loopne add fsubr add pushaw dec xor xchg add sub clc pusha inc mov ss mov add movsl stos lds test dec adc xchg pop adc cmp (bad) inc push loope cmp xor adc cmp pop mov call lea imul bound mov add iret (bad) jae inc inc mov cld pop repz lds add jae shrl xor test cld mov aam add mov add data16 push pushf ret fiaddl in push sahf nop xor mov out jle into jge mov mov leave loopne movsl inc sbb sti xor adc mov data16 in loop push imul and js adc dec rolb cmpsb imul loop jmp and int3 in or or movsl push cmpsl loopne pop jbe push repnz hlt aaa pusha adcb sub inc sti out or test loop jbe dec add cmc loopne jno adc fs pop mov pop mov jns dec lret js sub mov divl mov cmp xor add stos outsl adc les sti lods adc movsb (bad) cwtl sbb lret add lcall and imul dec (bad) jae jbe push loopne daa ds out dec out add sub fdivrs pushf addr16 out push cltd sti inc adc add add cwtl lret xchg pop sub and add cmp call adc jp fdivrs sub inc add xor push repnz test cmpsl fadd or adc push clc in in pop add jb and add test mov js push mov push pop inc push popf mov cs jge movsb jnp push or adc dec add jg and repz cmp xchg icebp or pop nop or dec xchg je add and adc negl and loopne fs je adcb jecxz and xchg jns cs xor ret (bad) pop sub roll cmp int mov add and mov andb jg sub loope xor idivl xor fcomp add adc gs movsb fiadd cwtl sahf push in aaa mov scas clc xchg adcb icebp xor es popf sbbl mov mov push mov or je push add jnp or xchg sub adc insl (bad) and inc cs xor sub or inc dec push adc and subb xchg sbb leave sbb mov das mov fisub pop push insb lock loope sub lods or rcl jmp (bad) push jecxz add lcall jp cmp push incl sti pop cmpsb popa loopne dec or (bad) ss mov mov fdivl add push adc push rcr fild (bad) andl adc xchg add and xlat cmp in or fmul test sbb mov dec (bad) pusha daa push push dec call sub pop adc pop lcall jg aam sub or addr16 dec xlat cmp jno icebp imul xor ret dec jl cmpl xchg mul and fcomi pop popf sbb aaa inc (bad) adc enter add fimull loopne adc popa mov push incb sbb scas push int push cwtl pop mov daa dec sarb push arpl mov add (bad) andb mov dec lods loop cmpsb test sbb testb test add xchg inc push out push dec push sti ja lea aad das repnz jo sbb or daa icebp sub xchg xor orl pop dec bound jge (bad) dec rcl mov daa pop add adc lods fstl clc or inc pop jnp loopne imul loopne add mov pop mov cmp sti xchg inc push mov jnp divb cmp jg orl dec adcb sub cwtl sub icebp pop push jmp fstps out clc adc outsl mov mov lcall repnz decb mov out pop and outsb dec ret adc shr jae and ret test push mov jmp jecxz mov pusha jg or or loop lret and cmp cmc cwtl ds mov and cmp or dec movl wbinvd jo out pop jg inc insb add push js (bad) or cwtl ficompl or xor xor les rolb jbe test in sahf push pop mov loope (bad) punpckhwd and mov mov imull loope inc or push sub stc addb pop imul mov movsb mov (bad) mov jmp and pop sbb dec dec test pop jbe fstps out shlb cltd leave outsl xor push sbb pop or xchg mov xchg dec jmp pop add adc push xor in ret pop jl cmpsl adc xchg add lock push cld or mov loopne add arpl cwtl in mov or adcl xchg jns cmpsl (bad) lods fs ret jno push daa jp lock pop mov dec cmpsl (bad) iret sub in or push or loopne mov sub or aam jo,pt sti sub sbb sbb xor repz shrl out test add mov add or dec xchg (bad) jge idivl and pusha mov notl in mov jg test mov add (bad) (bad) aaa add jbe lock aam cmp xchg sbb push xor push (bad) pop (bad) pushf cmp and das outsl xchg fucomip jbe add and inc mov daa lret or pop mov ror dec mov xchg (bad) aad notl jecxz aam adc or sahf sub xchg jnp and ss addl jecxz movsb (bad) push pusha int3 mull pop or mov loop inc sbb fldenv stos jmp or mov adc pusha push pop pop pop clc jne push scas int lret daa xor add loop jns sub add and mov shrb aas sbb mov sti lret and lock pop mov push push rcrb pop jb inc mov out imul cmp mov jle and jmp cld jg fsubp xor mov adc das loop fsubrs clc (bad) ja jp push ror popf or or (bad) push inc add jo push dec jno stos sub and cmp mov add jecxz jno test cmp adc cs ret pop xor fdivrl xor inc inc cmp in ljmp sbb mov sub push loopne push add lock arpl clc and mov std pop cmp push push fisttpll jle pop (bad) push rorb nop mov xchg mov or push inc add stos fbstp loop push sbb jo and pop jbe dec jle jno out dec cmp inc sarb hlt mov rclb adc or push mov popf pop and hlt scas push push adc pop lahf fdivrs stos aam movsl sub push fwait cs xor leave fistpll call adcb fldt add ret insb or and push jne xchg adc or lea nop sbb and push xchg ret push or jge andl inc (bad) (bad) aas xchg fsubrp inc les fs das or or jge mov inc pop adc fwait imul adc inc lea push add in sub aam clc out push mov pop push cmp mov mov xchg jle,pn or mov jmp adc adc sbb (bad) adc jae push stos imul dec in xchg mov jp mov mov or std divb jge push faddl sbb test shl mov pop loop jo divb inc or xor aaa pop icebp xchg adc mov adc (bad) negb bound push adc sarb push sti and jns fnsave cmp push int (bad) sbb das imul imul mov ja sbb mov fisttpll es inc or sub add mov mov icebp mov add xor jnp sti sbb rorb dec add aad sub pushl xchg cli push xor sbb movsl add scas mov pop fstps mov frstor and push dec xchg mov jnp into pop addr16 loope cli cmpsl repz shl inc shlb cld jg outsb lock mov mov push cmovnp scas pop cmc push mov andl and dec jbe or add leave inc inc sub (bad) xor or and in mov adc test ficoml adc (bad) mov jae pushf icebp or push inc sbb sub jbe add adc lcall int3 xor jg addr16 and dec add inc inc adc mov sarl and lcall add lret mov or mov or lds jp out push loop jne cmp cmp rcrb out pop add push in or mov jmp adcl and push adc inc xlat add xor push pusha lods loopne pop icebp sbb mov dec pop lret xchg xchg add adc les xchg sub stos das inc add jmp insl ss mov dec sub es pop jmp mov aad jbe pusha push push sbb (bad) sbb adc push xor imul mov xchg scas ds pop and mov push cmp mov inc repnz daa hlt push outsb pop loope jmp cmpl jne lret or sbb push pushl stos orl mov mov pushf shl scas insb pop add pushl in ret add or pusha push testl shr ljmp cmp bound push das push mov ret inc adc push jge scas xor shrb mov pop les xchg or add push xor rolb xor popa dec sub xor fldcw cmp pop mov cmp ret dec xor jno push scas pop ds xchg push pop xchg std loopne scas mov roll pop fbld fcmovb mov scas icebp pop not rcll inc adc outsb subb ficom push mov popf icebp sbb out daa imulb aam shrb dec and add jno pop add lahf clc push dec xor xchg nop jno in in xor pop mov lock mov pushf xchg jg pop lcall out or jmp push cmp lock daa out rol dec push lret mov jnp sub add test lock out pushf cmp popf in outsl xchg mov addr16 popl (bad) jge sbb cmp mov (bad) aaa inc mov sbb jb repz testl or add inc lcall scas inc or xlat dec inc mov cmp xchg enter out mov pop and shrl push or and std imul add jmp push dec push test hlt mov pop jmp call stos clc ret roll dec es push jp jg jmp imul add xor clc lret fyl2xp1 jl das idivb int3 lods inc add jns jmp in in rolb dec adc jg les lcall leave fcoml xor dec push sub mov cwtl push add leave lahf outsb jmp xchg adc push add rol mov xor pop jmp or (bad) pop loope mov jmp hlt fs stc mov lods out fsubrs lret enter arpl xor out pop sti data16 dec add (bad) out jg adc xlat mov and sbb pop jmp jnp jno iret lods mov fdivs bound push sbb sub add outsb popf pop jmp add dec pop push aad sub jb pop mov outsl rolb divb cmpsb test mov stos sub test call push push jecxz stc xchg aad ss je nop repnz jg rorl fistp lods pop cmc mov xorb xchg add mov loop add add sar cmp out shrl xor and pop into lahf jae aas test or mov mov add gs daa fidivr inc mov pop sub pop nop or das pop pop adc std or mov add rorl aad fidiv jmp in clc enter sub das bound xchg out pop mov xor lock mov mov (bad) addr16 inc fs cli leave jle sub xor das mov or inc divb inc push inc outsb (bad) lcall add push insb push sub (bad) jl push cmpsl jno adc cld shl fimul xor lock or inc shr mov xchg sahf cmpsb out cld add jl cmp iret ret sub xor mul shll fstpl cmp in ja shrl add test test rcrl mov mov xor jmp (bad) aam jecxz bound sbb jne push jb addl rcrl adc pusha movsb mov sti in add push sbb outsb pushl sti (bad) ss cltd mov dec pop mov or (bad) jnp lods mov jmp xchg push push inc je es lret in add pop imul mov pushf inc rcll dec mov sbb cmc cmpsb jno das inc repz sub int3 test mov cmp loop daa push pop fnop inc push shlb dec push pop aad ja add push xchg pop sub ss and and popf jae sbb mov jle dec cmp and dec jle or out dec std test (bad) idivb (bad) or or jb or inc cmp loop pushf ljmp out cltd xchg notl pop sub adc enter daa jmp add das jnp stc mov jmp out xchg or outsl pop xor idivb pusha pop stos stc pusha cmc jnp sub sub pop loopne or and mov in cmpb jg fist push sub cmp aas mul mov push add icebp add (bad) out or dec xchg fidivr or ja leave popa pop int3 rcrb xor in cmp into rcl in ja es pop sub iret dec sub call pop pop push mov adc adc jmp sub push and daa insl xor xchg push adc add jmp (bad) mov jae popa sub mov stos daa lods jae ds lods xchg jbe loop add sti sub xchg pop shrb dec in in and clc mov mov add or sub (bad) icebp stos in sbb das mov xor inc sub add pop push push rcll or cmp add xor jmp jmp sbb les dec push mov (bad) and dec add adc into and mov cld imul jnp test sbb add scas pop movsb add les shrl fsubrp fs and or sbb adc out or add and movb (bad) jbe loop in push pop push push pop inc lods subb add pop cmp push ja insb imul imul dec or pusha mov outsl push jmp in mov cmpb and repz out push mov cmp mov jmp sbb or pop nop js add fmul jg out clc add les cmc es ret in bound daa inc mov leave add rcl adc neg xor add and inc cmp shrl and or jle fnsave ret and push stc add xor add enter sbb jp adc out or jb xor jl or push divl (bad) ja rolb mov xchg xchg adc ja xor ret add and mov jecxz lahf cltd sti cmp test out push (bad) xor jl xlat and cmp fnstcw cmovnp jbe sub inc popf add out mov inc add pop xor nop loop jmp adc inc fwait nop int adc iret add xor sbb icebp (bad) aas or pusha pop jle es icebp or mov mov push push or fwait jg dec dec mov add push std sub xor adc or stos push fcoms add ja dec mov push pop lahf lahf adc push dec push adc push jnp dec lret aas add fcmove adc xor mov mov pop xor imul or int3 imul push les xchg sbb add neg xor sbb xchg jmp fildl mov (bad) xlat sub (bad) push mov dec push mov (bad) inc sub sub push pop nop movsb sbb xor push js add pop sub cmc jns xor pop inc dec push jae repz push jg push xchg jb xchg adc (bad) pop and cli cwtl in cmpsb sbb push ja mov xor not cwtl push adc lock and pop nop add xor fidivr or push mov sub jmp add call push dec xchg orb out jl add or out mov push aas in stos cmpsl mov push (bad) mov loopne lcall (bad) shrb idivl adc aam dec jge pop jl (bad) ret mov stos enter pop dec imul push or cmpl push dec enter adc (bad) or add aas nop cmp inc ja cs add in cmp dec push pop idiv fwait xor stc add idivb mov in into in lahf cs dec je add pop sbb (bad) xor std pop mov out add or in test push loope dec mov lahf sar cwtl dec popf push inc mov shlb lds adc stc jnp shl loope adc push add lods mov in ja push push jecxz jg test faddp or out cmp jmp ret xlat jg test or push push push mov lret out push xchg mov add mov sbb add mov and neg shr inc push jl add jb je add add jnp arpl fwait mov dec dec imul cmp jae ret fisubr pop mov loopne cmp and cmp push xchg inc add push rorb pop (bad) jbe dec iret cmp fsin inc test add jge repnz xlat notl movsl adc sarb clc imul jmp sub mov sub mov jnp sub pop sbb sbb xor xchg addr16 test ret (bad) in pop mov or or sbb cltd pop mov xor mov cmpsl push xchg cwtl pop into mov pop jmp and ret pop test ficompl push imul loopew (bad) sbb push outsl xchg xchg pop aam nop mov das jle xor (bad) (bad) inc pop test pusha ljmp lret pop or jns push xchg jecxz and push aam mov movsl je popa sti sub inc clc xor pop inc and repnz lds jl or icebp loopne jmp fisub mov push pop jp aad test push mov mov dec fnsave mov jb bound outsb loop jg jns insl sub popa sub inc jle bnd (bad) (bad) je pop push mov cmp inc jnp js fcomps sbb jmp dec xor ja aaa pop ljmp (bad) jno and (bad) xchg mov mov adc leave clc and sti xor nop mov adc pusha pusha cmc lret out stos lds ljmp test push test loop push testb fldenv movsl jmp dec mov call ret (bad) addr16 sti popa xchg cs js mov pop pop mov pop (bad) mov lcall sub push stos dec add into movb jno and pop movsb (bad) dec int3 mov sub add fs jge std ds sub ret and push inc je (bad) cmc jge,pn xchg mov mov loopne jmp out icebp mov stos ss popa loopne or dec mov add out or or jle or popa cld jno and add xchg fs mov dec rcll sbb fld pop lods pop dec stos or jae adc pop push jb dec pushw adc aaa inc fistl mov lods mov cmc mov sub popa out addr16 add jno push mov (bad) jns popa push or call sbb out outsl insl dec (bad) sbb dec dec fstpt ret mov stos jecxz ss rol dec paddq jmp sub cmpsb cld mov add imul lea ret jno lcall mov lock fmuls pop cltd push add testb popa lret pop push sub mov int popf cmp clc mov add les pop cli push ja ss add out sarb xor inc add lahf nop mov pop add movsl and add dec jns add push mov fdivrl push mov hlt lock pusha sbb insb cwtl mov jo xor mov mov icebp adc push fnstenv lret icebp mov mov dec mov sub pop jmp and nop mov inc mov loope inc jl fcoml inc out add mov adc add icebp cmovns add ljmp punpckhdq mov inc incb hlt loopne sbb les pop in decl addr16 cltd and or mov lret js js dec gs inc inc mov int3 jns movsl jl xor faddl add dec les nop dec loope cmp xor inc fimul ljmp pop jns inc sbb or mov mov fcoml add push in scas js xor push add cli (bad) arpl pusha in cmp data16 add dec mov leave sbb or mov cmp xchg sbb push add popf mov xchg movsb add jb mov adc insl pusha loopne xchg nop add xchg jg jecxz inc mov xor add stc and stos or inc mov ss int3 icebp nop les add cld push aaa inc sub negb dec bound out test inc aas stc push test adc xchg nop sbb jmp fcomps (bad) pop ljmp add xchg mov cld pop sbb stc dec mov int3 icebp ljmp outsb test xchg shr push mov cmp popa sbb add xor jmp or out push pop sbb outsb jmp lds dec dec (bad) adc and icebp or pusha (bad) xor cmp pop inc (bad) ror xchg cwtl js out insb outsb xchg or out xchg enter lock (bad) pop dec add add popa and pop or adc mov das (bad) xchg jns or inc test (bad) add cmpsb (bad) (bad) dec and cs movsb js or cltd dec (bad) js adc mov and stc les sbb pop xchg xor jo testb push mov enter movsb psubsb or loope rcrb pop dec mov dec jne pop shlb subl xchg jle arpl fadd ljmp cmp (bad) and mov pop sub and ret imul or popf dec jo push add xchg pop add out mov adc out stos test dec push cmp adc mov popa dec cwtl jns mov push or or and mov or inc test sub fs rclb jb and lds cmc movsb push xchg cmp or push xchg adcb imul sbb jo inc cmp xchg mov pop add pop ds jle arpl pusha lret icebp add xchg leave popa push sarb out gs mov wbinvd mul scas push bound out or jns (bad) lock fildl jo ja xchg push mov add imul in sti insb js add (bad) in add push nop cmp add mov xchg in adc in push cmp add sbb (bad) in add insl loope push push and (bad) xor mov jb xlat pop pop call adcl push js add jne cmp fs test jp mov jmp xchg (bad) jns add popa or inc xchg or sbb mov popa ffree loopne mov sbb fdecstp (bad) js mov mov test add add push cmp test lldt (bad) test pop add jno pusha addr16 pop lock stos pop das add mov lcall or or cmp sub jmp add test sbb fldl mov xor cmp fs lock push repz sar cmpsl or stos jns cmpsb js xor jmp cmpsl aam jns xchg push adc mov or cld xchg sub and jmp xorl pushf mov enter lods mov cmp pusha jl loopne test inc (bad) int3 call popa dec cmpsl pusha sub lret ss stc cwtl jns roll movsb dec pop lock pusha mov dec xchg lret frstor sbb push stos aaa hlt pusha push add sub sbb cmp push cmp mov pop (bad) mov inc movsb decl push add or dec cwtl lock push add outsb xor sahf je out dec repnz repz pop or mov xor sbb push fninit cwtl cmp and pop dec test or faddl cwtl mov and popa fistpll or out push cmpsb pop (bad) xor push enter push out mov inc pop imul out dec aas add mov cwtl and pop test icebp adc mov mov loop add aam push lret rorb call xchg sti leave add cwtl pop nop sbb hlt (bad) jns test lret rolb aam test xchg jns adc pop xchg sti test push movsb (bad) push add idivb leave in sbbl or cld mov (bad) and pop and int3 in test add pusha pop jns adc cmp or add inc ja cli jg enter fstps push dec sar add and add rolb mov and and pusha and mov nop dec pop xchg lock mov les dec repnz push add mov call mov gs adc popa jle cwtl xchg enter orb dec fs in fwait call mov js adc cs inc dec push out in loope stc mov cmp pop add push add in or sahf xchg mov sub fsts lea scas flds adc es add dec cli push xchg or jno out loop out xchg imul jns mov je cli leave push jle dec fdivrl cwtl test or pop dec and add jns popa test adc mov rorb pusha and sub mov jge mov mull test pushf shrb fmuls add insb push or add pop lds imul jl jb inc test shlb xor pusha or mov js or pop rcr call lods xor cld inc mov imul push cmp or es jl or or mov flds clc adc mov mov and mov pop cmp mov push push int3 fnsave pusha sbb push das into push push or test sarl out sbb fidivr adc pop or insb test mov call test std nop (bad) jb mov loope loopne mov adcb jo mov mov fidivr jecxz popa sub shrb cmp fdivl (bad) cmp xchg mov (bad) cwtl je add ljmp dec std mov lock pusha fstpl nop jno lods rcll jo outsl mov xor or sub jo cmp cli add push les mov pop call sti roll les (bad) xor mov mov dec push jg js,pn lock ja mov push mov out mov lock mov lret test and das in sub xchg mov push add mov insl cmpsb mov sub add push cmp enter cmpsb cmp add cmp sarb dec jae mov sbb cmp loop xor in ffreep xor not sbb push mov sbb add inc mov mov and add nop call xor std arpl andb mov mov mov pop roll insb loope enter mov insl xor mov es mov add dec aas and in cli pop add sbb sub dec ss mov loope pop insb add xchg loope dec xchg adc jl or mov enter or inc sbb inc out lcall xlat xor mov scas add xchg sti scas lret notl mov pusha out pop bound jno add pop jne,pn push cltd (bad) shlb mov jmp in mov in fadds adcb mov jb add sub jbe icebp inc xor cmp jb test stc add out pop jmp pop (bad) add inc mov push mov sub xchg nop mov fwait add mov mov dec mov mov outsl and dec mov adc xor push shll adc icebp movsl xchg out mov xor movl ljmp fsubrl inc enter test or lods icebp adc loopne imul xor mov xor je test xor mov sbb outsb mov (bad) mov adc int3 out dec sbb mov mov (bad) daa or lcall out andb cwtl add (bad) jb pop fmull sbb and and dec xchg cld fmull cs cmp xor icebp sub sarl sub sbb test inc sbb es jge add (bad) cs or lcall xor add movsl jns faddl fadds test bound outsl outsl shlb mov test xchg push pop rorb out sbbl sub insb dec jno cld or adc loopne mov and push sub das dec cmc out fdivrs lock loopne push mov pop or sub inc movsb adcb mov (bad) cmpsb mov rcrb xor push or rorl sub loope xor ss aas cwtl or rcl int3 add call sbb adc aaa je mov inc add fdivrs (bad) and xor mov dec decb mov mov nop sbb push add xchg mov mov popa pop sbb cwtl xor mov adc sub or xchg movl pusha inc outsl add out cld jns int xlat or pop ret in adc fmull ret addl xor dec xor inc mov enter or call add adc int3 mov xor nop push add cmp (bad) (bad) arpl pop out add mov push rolb or xchg ja add in sarl add xchg xor mov scas test nop arpl sub add mov shll mov and or test loope (bad) icebp (bad) (bad) aaa sbb lock pushf int3 pop addr16 mov dec fucom pop adc jmp jmp pop dec rcll mov orb enter aaa fnop inc adc dec scas outsb add daa push sub mov adcb mov daa aam cmp sub out mov xchg xchg jae inc nop movsl or cltd rcrb in pop mov push push into insl xor lcall xor (bad) call pop sbb aaa mov lds sub cwtl add ds push pop movsb rcrb lcall mov jnp sub push mov test jns nop push jge inc sbb pop (bad) adc sbb (bad) shlb or xchg cmpb cmpsl inc push pop int add mov push je in out pop add lods loop movsl scas mov out aaa pusha push sub loope mov xchg inc call nop fimul add push insb jns addb (bad) loope push mov call xchg dec pop lods adc dec arpl or sbb fisttp sbb movsl pop jecxz mov xchg test sarb lcall sbb aam mov popl cwtl rep jbe jo and and and and mov xor lods xor sub xor test mov lods add fnop cltd push or hlt mov lret and jbe wrmsr add jg mov data16 mov ss shr add fs mov imul leave pop add add cmp test add out xor sbb mov add xor rorb jnp jns cmp sub test cwtl ljmp or nop or test xor xchg or divl cwtl inc stc dec aam scas or (bad) mov mov xchg andl add dec je in ret in add or adc inc (bad) or test jle ja pop dec xchg adc adc aam andb or gs pop push into dec xor inc adc cmp enter mov jo and outsl cmovo lods pushl (bad) adc mov inc aaa imul shl adc imulb fisubrl and rclb or push (bad) (bad) rolb pop movsb loopne add sbb pop jb aad fnop out mov mov and adc mov icebp dec ret sbb sbb sub and jle or sbbl fs ret xor pusha pop adc xor dec push add rolb cmp insl adc add sub pop adc int test pop in ds mov sbbb cs pop mov add jbe push add ret xor lock das mov ret cmp inc jg rorb add cmp adcb sub (bad) hlt ss mov pushf xchg pop fbstp ret add vminpd xchg and mov xor enter add mov inc jmp loopne push sbb pop lret add ret (bad) cli dec jge push or out mov jbe cli add cmp in cmpl rcr popa arpl jbe test (bad) push dec test xor cltd and rcl mov add mov inc pop dec in add jg jo xor mov dec dec hlt aaa and les or mov xchg xor pop or pop in add cmp push rclb nop xor push shrb adc fs xor add ja pushf xchg inc pop mov cli mov pop xchg aaa sar lock sarb adc clc jbe dec bound push roll out jo cmp daa add adc inc shlb stc or or mov add das cli sbb int sub mov dec sub add xor jecxz sub fsubrs paddw fsubl cmp outsl xchg pop mov cmp push in pop mov cmpsb int3 xchg pop add jne mov jp shrb pusha mov push pop jmp mov xchg mov cmpsb call js outsl les pop push loop add push mov addr16 clc inc add std repz add cmp sbb xor mov add das into inc pop pop push pusha and arpl pop adc wrmsr hlt add das call add mov lds mov js push mov sbb in lock and add je or jecxz dec pop lods add popa jo shlb push lock sbb add or sub insl push fmull add cmpsl test rclb cmp cmovb outsl loop data16 gs shrl sbb roll sti jno inc out call icebp dec bound cmp jnp aad je ds enter or or imul pushw cmp dec arpl mov mov xor jo shrb mov stos ret test push sub andb into jmp ss popa add or mov add int3 aaa xchg push div popa cli adc ret dec xorl insb imul sbb pop adc scas adc xchg pop lcall fsubl mov andb shlb cs (bad) xor sbb sbbb inc inc cmp xchg jg jle push pop ljmp xor push inc rclb pop push (bad) jbe jae adc (bad) stc loop mov leave jg sub push mov mov arpl lods mov lahf mov xor loop and (bad) sbb mov iret movsl gs lods and andb lcall push loope outsl sub and or push mov pop push mov ficomp fistpl (bad) repnz jno mov mov or ja lock add push jmp pop shrl mov jg subb insl cltd mov nop icebp inc xchg hlt cmpsb sarb xor cmp sbb or xor les sbb push in nop xchg mov stos pop xchg (bad) mov mov mov pop and dec pop lods daa sub int xor lea lret enter repz (bad) dec add xlat mov arpl js or in sarl add or pop sahf sti or inc mov (bad) mov cld mov and sub lea and lret or rclb ficom arpl aas loop ret pop push mov and adc cwtl lahf pop lods xchg dec jl sahf sub insb sbb pusha scas sub mov mov dec add adc rorb push cmp add and sbb lea sbb push mov xor xchg in and inc jno xor addl bound pop cmp daa xchg xor pop (bad) addr16 fs push cmp lods shlb mov andl jne xor sbb sbb shrl xchg add add sahf les dec fdivl outsb xor push pop xor mov lret bound loopne mov add add pusha outsl push addr16 inc cld shlb cmpsb sub and mov fwait pop xchg inc aam dec fstpl push iret and clc int int3 adc inc sarb add and stos push and add iret mov add movsb enter mov jne inc add mov dec mov xchg dec sub xchg add mov fildl sti mov add test mov mov icebp into insl int3 inc mov jl adc cltd cwtl lea push sbb aas sbb or push in out add pop out int3 lock jne add dec push xor cmp stos cwtl add pusha jo les pop loope pusha pcmpeqb pop call outsl cmpsl js test testb imulb das lock hlt add lret lret call dec lods xlat jmp lahf mov rcrb push and mov push addr16 into xchg dec add dec mov jne and loopnew mov adcl scas ja add sub push int3 dec or and movsb add std int push inc dec or nop rolb rcrl ds adc aam inc loope cmp jbe fistl mov (bad) sarb add (bad) cld or sbb pop inc in (bad) nop pop (bad) aam mov mov mov pusha sbb out loop cmp adcl pop lcall (bad) hlt sub pusha bound inc cmp dec pushf inc (bad) clc push mov rorl add iret loope rcll cmp push js or movsb mov cmp jbe ja pop push push inc inc adc adc arpl ds into loop add lcall add dec mov and addb jmp (bad) hlt add mov inc or add fldcw stc fcmovnb into lock jg cwtl sbb cmp or (bad) add int mov rcr push pusha rolb add fmul scas dec lds lods mov (bad) jno add in add pop in (bad) imul sub mov int3 les pop and lods inc dec push cwtl or aam pop dec push rclb in sbb leave sub (bad) fwait jmp loopne push push adc push sbbb xchg add xor ljmp movsl sbb mov shrb ja sbb jle cmp out and test (bad) js xchg gs or cwtl inc mov xchg pop insl add fimul dec and or inc mov incb sub sub popa inc or (bad) daa push or cmp out cmpsl popa mov dec xor sub imul ss in jae adc dec les es cmp loop sub cmpsb movsb adc jmp add jbe nop enter push lret jle mov push ja divl es add sbb vcvtsi2ssl mov aad aas adc ds nop add pop into mov in int3 mov xchg push andl pusha cmpsb and ret (bad) movsb nop push jnp add and lret or inc sbbl imul add pop je adc add jg adc mov clc insb adc pushf call loopne xor and sbb sbb xor mov loopne daa in cld sbb aas cmp sub mov and adc shll dec add lret mov mov xor pusha in dec test dec xor fadds xor mov adc sbb mov pop dec inc xor xchg sub adc dec (bad) aam push push sarl ror into pusha sbb pop nop push cs push (bad) mov mov fs adc aad dec jnp rorb fs sbb mov push repnz lcall sbb cmp hlt movsl lock or inc xor and mov jns pusha sub into or add sbb fwait mov mov pusha push push dec outsb aad xchg mov inc adc dec cmp xor jl adc add mov sbb scas push enter add js adc call dec sbb int3 addb jl sub pop add jge push inc hlt loope or add add insb pop leave inc incl cmp cmpsb pop pop mov xor repnz inc push shr fldcw or mov loopne je sbb scas cld test xor pop xor and or and mov ja ds dec aas inc dec and stos pop ds pop iret inc pop pop hlt iret sarl mov int test mov cmp jmp test lahf aaa add mov leave pop and outsl push cmp sub push fldt pop mov shrb rorb lods sahf add lret dec rorb stos ja xor adc jge mov fsubs enter sub add sbb jnp imul insl leave add inc dec xchg xchg add mov pop mov iret (bad) pop fcmovbe out sub sub lock fbld inc adc sbb adcl insb les jo mov testb cld daa inc insb add leave int sbb js repnz sbb and push test cmpsb leave jl or scas or push fbld inc (bad) clts sub jbe insl inc sbb add push roll pushf add xor in add iret xor push lds inc addb les pusha xchg and pop je sbb orl jae or mov leave loop add repnz insb and push (bad) pop fstps xchg movb enter push mov movb mov add jnp mov push push or pop in jnp cmpsb cmpb xchg outsb xor add xlat dec xchg mov and rcl mov mov (bad) mov mov add add fdivr jne inc fnstenv and ljmp sbb sbb (bad) jle sub inc pop andl es push or test xor js mov and adc dec mov sub arpl xchg adc mov lods add add rcrl out and mov sbb inc repnz rol and daa sub hlt sub sbb mov cwtl mov dec dec xor sub and mov test add xchg xor cmp lds test cmpsb test sbb insb and bound shl inc adc xor add cld pop shlb bound and xchg jl and dec sub movb in inc add data16 hlt bound xor popf rorb jp push stos cmp sbb pop fcompl pushf and add jge inc jnp out adc adc or arpl andb pxor scas cmp lock icebp or cmpsb mov test xchg and cmp dec les stc sbb out and cmpsl clc adc call out add mov add pusha adc enter xchg mov hlt rorb sub (bad) fbld and adc fmul ljmp xchg xorb aam scas xchg loopne (bad) push dec pop mov nop mov iret or into (bad) mov pop pop dec or lea cwtl nop inc lods adc pop xchg lock je in insw pop nop dec add aas inc dec ret rcrl test pop bound fcoms cmpsl or xor inc ret jecxz (bad) add test repnz push (bad) xor sub cmp pop dec mov push je jns push shrl adc and sub hlt (bad) (bad) jg sahf sbb pop pusha clc adc pop add in mov mov movsl cmp pop add dec inc cmp jo xor sbb (bad) mov jg fdivrs mov add sub or pop fwait mov icebp or lea clc fstpl jb in lods les mov push sti xchg pop into sarb xor lea or jo or sub je and sub das and mov pusha dec in movsl loop adc jbe jno inc mov test mov mov add or cmp or fwait xor out sbb (bad) sahf pop je fidiv dec pop gs sbb je sub pop pop xor add cltd insb and bound xchg cltd jecxz shrb pop int xchg popa int3 jle sub addb das dec scas sarb xor les sub pop popa mov add sar xor and fildll add das xchg push enter or add add mov shl pop jl jo inc clc adc bound test mov or pushf std rcrl push imul dec rcll push jne mov cli push arpl out push shl xlat mov lock fdivl ret add lods xlat in adc or sub les divl dec enter dec xlat ja test inc jno add cld mov xlat lods xchg roll mov imul mov cmp inc push or or (bad) jae xchg xor test cmp jno sub sbb xchg mov and dec insl mov or cmp aad adc js mov or xchg mov xchg (bad) jl clc movsl add in lods add insb cmpsl xchg lcall dec sub mov push or ret arpl or inc mov adc jmp inc iret and pop or lock hlt nop into xor nop fwait clc mov mov xor add push call lcall adc fild mov out and mov lods (bad) insb fld movsb mov imul in or cmp sahf inc adc fadds andl js or cmp inc ret add fcmovb pusha insb push loop call dec mov dec test fmuls mov (bad) not pop mov sbb rcrb sbb or test (bad) jo inc add pop jbe mov out out or test movsl dec sub pop pop xor clc sahf and sub dec xorl sub into mov push mov cmp out cli imul popf cmpl pop ss xchg push in sar lret adc in xchg add (bad) scas lods aam mov inc shrb xchg mov xchg sbb rolb outsl jae pop dec js push xor xlat mov into fildl push push mov ret xor leave aam and test fs or xor lods jl ljmp test jecxz cmp mov xlat dec addr16 mov xchg cmp lret add scas in xchg pop (bad) xor rdpmc sarl dec (bad) mov xchg mov pusha add movsl add stos test fnstenv and das or xchg cmp in popf and sahf sub sbb lods pop inc add loopne or leave add sahf jecxz mov test xor inc dec add cmp mov dec rcrb and fs add dec lods mov cmpsl sub fisubl ret cmp iret push sub fs jo pop dec lret in pop lock in popf lcall mov cmp (bad) das sub cmc hlt lahf xorl stos add das mov xchg xor jo lock add stos loopne jb inc xchg add (bad) ss adc pop add pop push push clc pop mov or jno adc push cmp and outsl mov push lock mov lods add stos cwtl js add pusha mov mov jae add jb (bad) adc add lahf jno dec out rcr xchg and inc mov mov ret push (bad) out les clc push mov jl je in dec mov mov cwtl cmp pop stc shrb add push jnp add push fdivs testl xchg scas pop int3 cmc outsl loopne cmp (bad) imul das and int xchg inc or hlt sbb push ret rcrl add sub not imul js and lods adc std mov and in cmp cli ja xchg loopne or dec mov sub rcll fistpl adcb sbb adc ljmp rcrb adc adc enter rcrl cmp push dec jle cmpb popa mov scas add and jns stos xchg mov outsl push xor andl jb jle cld mov pop cmp ret call pop fs inc sub lods sbb mov out sub and aad add sbbl pop clc cmp cmp int3 movsb daa mov dec insb xor (bad) mov xor add daa test daa lcall inc aam lock mov mov inc faddl out dec lret fcmovne (bad) or cmp pop inc lcall sbb inc js das cmp pop fstps icebp mov loopne and jle arpl lahf and add dec test lret cmp cmp inc rcrl or insb icebp xlat inc push push push outsb insb inc pusha adc (bad) and push mov jno mov cmp inc (bad) xchg mov sub dec cld movsb inc mov cmp pop push loop or movsb xor les movsl mov jo jle cltd je sub or (bad) mov pop and xchg roll or add int scas pop xor ljmp dec fwait xorb jl fs jo sbb pop int3 mov or inc cli jns mov push leave mov leave nop enter mov mov insb jnp in addb xchg pop sub cmp pop popf (bad) jbe shl push dec sub inc sbb mov dec clc (bad) fisttp mov jg cld and pop nop xor jmp les les add rcll mov notb iret call shll insl clc inc adc push scas cmp pop and movsl repnz push xchg leave loopne repnz add push pop add leave fsubs std and push clc inc jp pop add pop es sbb add mov sub out xchg insb adc and pop loop jp jo andb mov cmp xor dec xor pop mov imul jecxz dec (bad) int jl inc and xor pop inc adc nop sub loope push mov test add mov add mov jmp pop out fnstsw nop call sahf out xchg movsl mov lret cmpsb ret xorl stc rclb add clc outsl bound mov out iret fist sbb xor xchg adcl mov lods dec jl push pop lret pop add jmp inc popa (bad) lock and inc push add (bad) dec xor cli add test (bad) xor lods pop mov add lods lock das lahf das mov cmp mov imul push jl inc mov into iret jbe and push in mov std addr16 aam int3 add flds daa inc es sahf insb addl mov inc mov popa lods je sub inc enter sarb pusha rolb and sub loopne mov fmuls (bad) add jo popf pusha fldl pop movsl rol and add push and mov push mov mov add jo enter push lods lods add add fcoms jnp enter push in cmp inc add in pushf and push sub popf lds cmpsb adc (bad) push dec inc jbe push test adc sbb arpl lods mov xchg xchg pop and andb dec and (bad) pusha lcall in sahf negb cld xchg adc nop cltd inc in xchg (bad) or pop mov subb shrl out jne cwtl lret xchg push mov mov xchg (bad) ja sahf test jl lods jnp or mov mov lahf dec or mov outsb inc pusha jge cmpsb shll xor mov cwtl add mov cmpsb loopne or (bad) mov pop pop dec xor add sub pop (bad) cmp loopne jl push sbb fadds aad test pop dec add push fisubl pop lods push xor pop sbb inc adc lds popa cmp pop add xchg add aaa mov inc lock popa push roll and repnz jp mov fistpl or inc mov sub nop loope xchg pop je aad cmp push and jecxz xchg mov push adc cmp mov cmp inc xchg imul fisub cmp sbb push lock icebp and js scas das xor ret cmp dec movsl aad call je sar sub (bad) mov mov jmp jl jl push rol adc (bad) jno clc and sti lock jo pop or xor or imul and jbe and push into jmp sbb sub (bad) mov xor fnstcw mov call rolb mov movsb sbb int3 inc mov dec int3 pop add movl imul imul mov out in inc push or add clc xchg sbb sbb jl sbb nop rolb (bad) push cwtl out fs nop jbe aaa por (bad) cmc add lret lods andb push scas lods add push call bound sbb imul test (bad) ljmp shlb cmp scas call dec push (bad) xor jb dec jns in and pop addl fldenv ds dec add sub pushf dec and adc or and mov add cmpsl (bad) jae dec inc cmp test dec fadds nop sbb fimull pusha pusha mov imul jb pusha adc arpl jl nop dec jge adc adc xchg xor das dec jno mov push test movsb sbb and push dec in mov inc xor jbe add cmpl add mov mov dec inc mov cmpsl pusha sti adc jge loopne xchg dec mov cmpsl dec xor push popa pop jno or cld in pop dec mov sub xchg push jp insl cmpsl jne in or mov xchg shlb sub jl (bad) testb jae inc orb data16 dec xlat add jb and sar sub (bad) nop lret mov add imul and aas jnp mov iret cmpb pushf push push mov pop (bad) jecxz dec out jnp scas subps ficom mov jmp dec mov pop inc fucomp insb xchg (bad) hlt in mov mov pusha aaa mov fiadd cmp add mov rclb pop jno add test rep mov clc adc out or out xor enter subl and sarl addl mov and dec mov mov andl std add or movsl stos xchg lret xchg push jge cmpl packsswb enter jo ror add iret mov inc cmp lock shll push sahf rolb cltd sbb jne fcoms inc jns cmpsl leave fs sbb jnp sub lods int3 out sbb mov loope pop scas pop js push test mov add sbb enter add movsb mov fbld mov jb cmp push or pop push pop pop add sbb stos pop out mov jbe jno mov add and mov lret mov cmp cltd mov stos mov adc pop dec in in inc and dec mov pusha shlb pop lds stc sbb pushf je xchg lret inc add sbb xor and cmpb testl xlat out mov nop adc shrl cld hlt push ds mov mov pusha mov xlat scas loopne fdiv jmp stos mov xchg mov aam jle and mov jno add xor mov adc cmp test sti dec add jp aas mov xchg aaa sahf sub fsts hlt std add (bad) idivl in cmp gs inc adc xchg add jne cmpb icebp mov and pusha ret inc or sbb mov fdivl push mov xor loopne mov push in insb repz vmovaps sub popf cmp pop jp rclb out lahf bound xchg or pop loope push push jns dec fiaddl xor sbb or in add add std jg push add pop je scas push push scas call mov mov mov or pop push add mov lock or inc mov xor ret out cmpsl test movsl inc add cmp pop or aaa pop xor sub jecxz or sbb fnstsw mov mov in dec sbb add enter jp add or xor jne xchg mov das call repnz mov outsl test mov enter enter sbb xchg mov lods xor js mov xchg fs xchg mov movsl xor add pop sbb leave nop pusha and and push sbb and nop insb in xchg ljmp arpl and xor dec addr16 jge xchg cmpb push sub push dec and mov jmp fwait inc add or add lret sbb rorb cwtl or enter cmp add imul in test and dec jnp xor std inc loop lret mov icebp fs xchg xor cmpsb scas xor ret push loopne and pushf andb in add jmp test mov xor xor adcb mov push sti mov stos insb out les pop (bad) sub mulb out lcall mov nop aad cmp js jno addr16 insl jmp push pop fadd clc call loop mov insl push xchg dec ret sbb add sub nop sub mov xorb addl jns mov sub into in lcall fwait outsb push int3 incl icebp ss cwtl sbb cmp dec jp add cmp pusha pop (bad) mov xchg sbb and xchg int and into push and outsb call stos dec mov xor sub adc mov xchg leave dec add or add add (bad) (bad) xor addl hlt cmp imul rol adc and ds ds stos sub add in jmp cmp clc test inc jle hlt dec movsl or cmpsl cmpsb int3 (bad) les pop push inc dec sub jle add inc mov mov sub or push or (bad) push nop dec (bad) mov arpl or movsl add adc push les dec jmp (bad) mov inc sbb int3 push in inc and ficompl std xor in ret jg adc fmul call jns or add and jno inc and dec jecxz imul and push mov mov add (bad) gs push popf dec addb vmovaps pushf fldenv clc and xchg add jo add mov add or xchg out (bad) and fildl cwtl and cmpsb popf imul rclb ror xchg nop add mov bound (bad) int in xchg hlt inc pop js push push das jbe mov jb mov xchg and or sbbb ljmp test mov (bad) sub pop mov aas (bad) pop or fnstsw add pop mov add popa or xor lcall aas mov add dec (bad) loopne (bad) xlat repz pop cmp sbb adc repz ds int3 clc jno ja test in pop (bad) cmpl mov in sbb pusha adc aam push dec cmp ljmp xor pop push lods adc push jp addb fsubr orb jo popf pusha jp fiadd or js adc xor push inc sbbl cmp call or pop inc mull imul movsb sbb mov cwtl pop outsl iret inc mov cmp mov push mov inc test cmpl xor or clc add inc sub int adc jecxz addl mov ret (bad) fsubs ss and sub cmp xchg jl inc adc mov inc into mov loope xchg fildl shrl sbb hlt and push and lahf pop cli es pusha stc test jb cwtl jno add cli inc sahf sub aad xchg fs lods or or add xlat mov ds les pusha lock mov hlt add or ja add cs mov dec (bad) fsubl and or bound inc leave add add movsb clc pop xchg pop add mov and pop xchg lret push sbb xchg xor sbb jge cmp add xchg sbb aas adc sbb sub aam jns mov mov add mov add jmp cld loop inc nop movsb imul inc dec in movsl loop jle add mov gs adc fwait pop jae lret fimull dec inc jp shlb adc in test popa imull cmp add loope sub pop mov repz test loope push in jns push add cmp ret inc sbb pusha icebp mov pop mov std jbe stc adc push test sbb adc cmp adc mov and flds pop mov insb xlat pop scas push gs or in add jmp adc jg fwait test push cmp inc fimul and xchg les jg sbb pop punpckhbw outsl mov in mov push inc mov shl and sbb (bad) sub daa in push dec mov mov pusha xor xchg mov fnstenv int3 adc cwtl mov mov xchg ljmp icebp fimull add dec icebp pop jo movsl adc pusha sub data16 fsubs jo mov cmp mov pop or mov jne mov jle ret pop mov rclb xchg push inc pop sub or movsl iret pop stc push mov lret cwtl lret add dec push add stc call jl jmp inc fs adc (bad) js add adc sub mov test xor and sbb jl call (bad) mov lods jo iret test add sbb add or fbstp or roll or pop bound or inc xorb add js pop aaa push nop inc jo fs incb daa xor leave dec cwtl pop lods stos sub xor add outsb pushf adc xchg hlt dec xchg mov sti jbe sbbb xor sahf cmp add fstpt dec shrb jmp iret sub imul cmpb out adcl add inc (bad) jb lea sub xchg nop pop add mov (bad) jp aaa rorb and mov (bad) test loopne push das arpl fs nop sub adc cltd insb push or adc (bad) subb sbb (bad) push les jb xchg ljmp mulb push fs pop push (bad) je lods mov repz mov (bad) cli add mov (bad) icebp mov pusha push dec mov mov stos pop push cwtl pop fs xor mov inc dec xor lock gs adc and push lock stc add sub faddl lds mov ret dec enter clc xchg push jmp fmuls mov add xchg add cli jle and (bad) jne add (bad) push xchg adc dec or sti adc pop jb ss rolb xor imul push fsubrs sbb sbb inc popa push sub inc sbb adc lcall (bad) mov rcrl out loop cwtl push push mov dec jnp ds fmuls ret pushf mov dec dec hlt push push xorb mov xor pop incl push lret push sbb jo add (bad) cli cltd movsb call pop imul or dec daa push sbb cmp idivb imul mov test xchg add rcrb add movsb jg ss or adc inc pop adc push or add stc lret xchg and lods mov (bad) and stos push cli mov ja (bad) popa adc je enter xchg int3 stos in loopne mov cmp stc aam roll out mov (bad) lock (bad) cmp roll xchg call and push repz adc in mov rolb dec rorl and out enter mov js dec jb pop add je mov cmp dec or hlt xchg adc ficom loop sahf fildll sub cmp lods cli js push jp lock or xchg jns push fsts xlat es mov mov (bad) jne xchg mov notl mov push sbb sub jp mov sub outsl mov cmp lret push fildl enter jecxz mov lods clc stc xchg cwtl fimul jmp xor jmp rolb xchg mov cmp xor push in leave shrb lds imul loopne (bad) xchg or fwait xor jne mov add mov sub lods out cmp jno rcrl add xorb xlat push add aas or pop loop rcll ss pop and push push int mov sub mov gs xlat mov and xor pop sub dec push adc adc xchg dec pushf pop xor push or sub mov pop (bad) mov dec inc je mov xlat or inc push icebp push adc jg sbb lea dec mov sub pusha jns inc sub les cmp gs xchg negl mov mov pop inc add or cmp movsl cmpsb mov dec and test shrb in gs scas xchg adc pusha leave jo in cmp xchg adc pop xor das jmp inc call enter arpl int3 pop mov lret inc in in shrb ljmp xchg cmp in imull or dec mov adc inc cmp adc rclb data16 cwtl in mov out cmpsb sbb jb and or pushf xchg xor pushf push std adc mov xor cmpsb push cmp das mov mov mov les out adc pop mov popa push cmp sub cmp sbb clc movsb clc repnz add imul mov mov in pop adc inc rolb pop jmp xor sar cmp push cmovo and rcr mov dec add popa inc jae pushf inc xor loopne mov je xor pop pusha aam adc or popa addb add push lea out adc sbb rcrb xorb mov add clc jg mov push sbb iret adc ret xor mov and xchg pop cmc mov lods adc xor pop fstl jmp xor dec ljmp outsl adc adc cwtl mov mov dec fisubrl fimull adc sbb enter sub add mov enter pop mov jae loop sub push pusha mov add inc repz push sahf in cmpsb push in xor pop mov dec jo fmul loopne sub jp adc into xor adc jle add jno push arpl mov lds pop gs in sub jmp push mov pop pop or mov pusha mov arpl add or and sahf xor xchg call or (bad) cli rcl add ja into test xchg mov stc xchg cmp add mov call pop or int3 mov mov cmp les js cmp lock adc add out inc call pop js lods js xor pop rcll insb enter leave or mov pusha cmpb (bad) push mov push xchg outsb and pop movsb sbb js dec insl mov push clc (bad) lahf or lcall and xorl adc add popa jmp sub bound test stos push adc into lock loope popf in fldl inc ret hlt add loop cmp repz xor imul and xchg in inc xor sbb call dec mov fsubr lds add es and (bad) mov cli dec pusha mov test dec std iret xchg fnsave jo pop sub xchg cwtl push icebp sub xor add adc xor cmp (bad) cwtl loop push xor inc xabort into mov fisttpl inc aaa or xchg push add out and or cltd xchg add pop lret pop sub sbb nop lds and mov and inc mov lock shll cli cld mov jo add jmp mov xor jbe stos cmp std int divl add pop jae sti inc push inc pushf mov imul dec daa xchg fild lock dec mov pusha leave jns loop pusha sbb or lock je cmc mov mov (bad) decb fisttp push xor lods repz dec inc jne das fldenv pushf sub push sub inc xor inc and add (bad) leave jo add pusha jl leave add jbe stos cmp fistpll test or pop xchg stc orl push lcall inc cmp adc push mov jnp mov and (bad) nop cmp push inc stos mov adc out out aas xchg mov popf inc push int add bound mov scas pusha insb test or aaa in (bad) stc mov (bad) bound int3 aad or dec add and push sbb cmp jle mov pusha and out xor repnz daa popf xor pusha sub roll sub cli add stos lds cmp test cmp pop in cmp mov inc lods jge xlat mov cltd add inc push inc int3 mov movsb push mov xor enter xchg nop rclb rorl mov fisubr in dec push (bad) add push lock dec inc mov out add arpl (bad) sahf add mov insb cmp repz fs js mov xor or xor lods adc js jp add pop out in and bound je repz adc xchg sub cmpsl xor clc loopne or arpl mov cmc ja dec fnstenv push inc or xor ret mov cmp (bad) xor aaa clc sar sbb pop cwtl sub adc jmp dec adc dec mov mov add leave jmp pusha xor dec and dec inc push (bad) in pusha (bad) mov jmp movsb adc daa je xchg push mov fidivl adc and ror out add out call xchg addb mov roll cwtl pop shlb jo pop sbb push mov pop inc add sarb add fisubl mov mov push adc std fsts adc mov out hlt outsl pop gs mov sbb add arpl imul add loope sbbb xor cmp daa fnop in orps and mov repnz push inc mov enter call and and lcall jmp sub xchg add add jg cmc mov dec inc in mov jl lret dec je sbb push mov lock fcompl ret gs xor adc fcmovne push lods mov jbe xor outsb into (bad) sarb mov push jle mov mull jae xor ret cmp pop arpl push pop jne lods je clc fadd xchg es dec and inc lods les testb push imul xchg stc xchg out aad arpl inc inc outsb push and mov arpl rolb add xchg fsubs aad aam mov inc mov rolb mov loope inc fucomp mov add adc or pop sbb ds hlt int3 and aas inc pusha (bad) ljmp mov ret xchg rclb add jg cwtl or fdivl paddw outsb cmc adc dec add loopne repz push lock pusha rcrb or jg mov fsubl add stc and cld in popf pop dec inc (bad) icebp or (bad) test fwait lods loope inc or out mov shlb (bad) jl add (bad) nop shlb mov sbb pop shrl mov mov add sub pop xchg (bad) push mov (bad) adc xlat mov mov ljmp sbb mov lods ja je cwtl pop xlat or cld frstor mov ret enter retw and jns jbe add add insb add pop jns sub sbb add jmp ret lods es gs jle dec mov xor (bad) push aaa je ds stos push rolb in sbb xchg and push rcrl mov mov push subb add push sti pop out imul inc aaa dec sub call dec jge mov cmp inc clc push jne rorb stc sbb push sub mov lods jge test pop push mov out inc movsb bound stc test pop dec (bad) hlt add out cwtl rcr xchg add inc and rcrb adc out or push xchg pop inc push adc mov fchs jge dec push addb popa add and dec fadds or pop lahf pop call mov repnz enter xor leave or and pusha pop fldenv scas jl sbb dec lock cli xchg add or (bad) mov in clc mov mov or push stos inc push (bad) mov add jmp add add add cwtl loopne adc push push call nop popa jno insb jbe xchg cld mov mov sub cwtl xchg fadds or nop sub stos sub and (bad) mov mov adcb dec int3 xchg es test pop add loope mov push addr16 and mov das jmp hlt cmp inc mov mov dec push lock dec test and xchg fnstcw pop je dec inc fildl gs leave pop (bad) in pop cli pusha nop aad add mov test ljmp and add pop dec rclb hlt sub push adc cmp pushf pop or adcb push cmp pushf loop pop cli xchg dec mov add cmp jl test fstpt cli adc repnz test cmp mov jne je imul adc push rcrl mov pop jge pop cmc mov loopne icebp or add xchg and mov (bad) icebp popf mov mov out hlt and cld jno in adc cmp dec cs sub fcoms xchg je data16 insb push sub icebp mov jnp add mov insb add push imul sbb sarl mov add sub push adc movsb nop call and jbe add add stos cmp je xchg stc jmp and sti int3 insb cli pop sub sarb pushf jge aam fs pop nop jl dec gs xchg jo xchg jl jmp mov push pop pop mov lods lret test out mov push or jmp adc cmp cwtl or pushf push mov or int3 adc adc pushf add lock cmpsl xor jmp ficompl rcl test cmpsb dec push js inc and in inc fs or lock push push adc shlb adc sbb pop ss rol add sbb nop nop loop es add inc cli sbb aad xor or fcomp loop push xchg lret pusha inc dec fwait or insl sub (bad) nop mov dec sbb lret loopne (bad) xor adc or mov cwtl push dec pop xor fcom mov lods gs popa rcl add or add jns cmp pop inc fsubs and inc (bad) lahf f2xm1 imul (bad) dec lods and jbe jno lea dec push add cmpsl sahf xor add mov pop aad jbe mov pusha scas pop mov jl and rcrl or inc js xchg pop scas xor mulb xor adc pusha sbb push (bad) rcrl adcl js jle mov cld aad or or ja and pop inc rcrb jmp ja sahf or push sbb adc xchg nop pusha (bad) dec lcall lea sub insl rorb sbb jecxz dec jmp (bad) and mov popf sub and adc in call pop mov cwtl fsubl add adc daa pop insb and inc and push clc mov daa push mov ja and adc pcmpgtw popa mov mov or scas jbe jl lods pop out jmp xor lret or dec xchg mov mov xchg mov (bad) mov push loopne mov push fsub mov dec fld jge,pn xchg inc add cli jecxz or fldlg2 hlt cwtl cmpl stc add (bad) (bad) cmp leavew (bad) cmp add dec jge jno mov and adc or or push ret mov xlat mov mov cmp mov push cmpsl loopne push or andb arpl pop or jns lock lret inc xchg test mov cmp int test js add fdivs sub add mov mov ljmp inc and fidivrl sti or cli loopne pusha adc xor es add rorl call and xchg ret enter xchg sub movsb arpl jae inc addr16 sub movsb or mov js pop movsb movsb xor adc dec jl cmp pop (bad) lea cmp xchg mov and xchg ficomp arpl loopne dec inc xchg jo mov lea ja mov imul icebp or or mov push sbb in clc xchg lods or daa inc or cmpsl sub xchg inc ja dec add xchg mov fsubrs ljmp into insl sub push popa dec sub lods test add pusha (bad) ss mov push fcoml cli xchg add (bad) or add decb add clc ds add js dec roll mov test dec lret call je pop aam in icebp pop rorl sbb sub mov cmp (bad) fldcw dec cmp dec scas adc aaa int3 or push xchg fsubs add mov insb adc inc hlt jecxz xchg and out or push cmp imul out adc lock shlb push rorb loopne ss sbb repz push jmp push fmul lcall dec pop arpl add inc mov xchg adc leave ds or push call add sbbl dec flds sub in pop push or fs aaa and or test imul push cmc and mov xchg bound sub adc pop cld lea fldenv insl cmpb pusha jns mov lock mov add mov jl shrb and daa insb or sub pop (bad) je stc pusha fstps fcomps mov jp loop mov jns add adcb aad mov mov or lods movsb fcoms pop push jl bound int (bad) call pop addr16 ds pop cmc add ret pusha mov stc cli jmp xchg scas pop adc pushf or add xchg and pop imul adc pop sbb xor jle cwtl int3 cmp ficomp imul cmp gs fwait add pop xor sbb (bad) jno mov clc mov adc push int3 xor cmp out mov mov shrl xchg adc ret fildll adc addr16 sbb xor and sub sti hlt dec (bad) dec mov lds leave inc inc or mov xor inc lock lock sahf test jmp push mov lods sbbl add and sbb rcll pushf sbb stos ds nop dec cmp push rcr shr sub pop adc xor lock xchg inc add bound jns mov shll dec scas inc mov push xchg fcoms mov add mov mov push test mov mov push or jb pop xor and adc inc and mov out sbb mov mov mov inc enter clc aas jecxz or icebp mov xor stos or (bad) mov cli pop js xor call xchg and adc popa pop inc cmp cli movsl call xchg sbb xchg adc mov imul nop sbb mov xchg pushf mov jl xchg les or nop pop (bad) mov bound out lods rcrb fcomps leave call popa pop xchg xchg (bad) icebp sub jnp imul sahf loope enter xor adc imul xor pop jl jbe adc pop dec push mov push js jb stc adc add adc xor dec jp add enter ss (bad) dec or int3 or (bad) dec faddl mov dec insb dec mov rorb sbb repz mov pop scas cmp stos call mov stc mov out or scas jno adc cmp dec mov mov jle (bad) ror sub pushf mov sub cmp hlt xchg mov pop dec cs xchg cmp push and fcoml hlt mov out mov mov (bad) call incl rcl jge cmp xchg pop pusha out pusha mov mov lret cmp add jmp mov jns fwait dec (bad) inc call loopne mov sbb shl scas or adc add adc leave pusha lods test xchg jne lahf cmp mov add fadd loopne sarb loop mov or rorb jo and xor dec daa xchg mov or xchg pop mov lock sub jno add aad inc (bad) mov clc or in loopne lock lods sbb (bad) push jle jae xchg inc add and and pushf arpl ficom pop mov or pushf cmp mov push call std bound js lret jmp and in add mov mov enter hlt push ficom aaa fstpl mov (bad) and andl mov mov clc add xorw rcl xor pop dec mov add movsl decl cmp in test insb or xchg nop rol add mov inc add xchg or sub dec mov mov add push push xchg mov add mov js or int rcll pop inc (bad) pop xchg mov lock sub shlb inc adc (bad) or adc mov pop mov push cwtl push inc mov cmp fsubr cmp dec dec lahf adc mov icebp orb cld mov stc add or adc jns and in push push or sub test pusha push pop mov add mov xchg fldenv push mov pop int3 leave fsubrl xor push push mov add pop adc or jg mov leave or ja mul out inc adc loope add repnz ret les xchg test dec mov add pop int3 hlt xchg inc pop in and mov idivb inc or adc and and mov gs jg aam ficomp nop cmpb test mov test cmpsl test repnz cmpl je pop jns or scas push scas or pop mov lods adc push fs xchg pop pop cmp pop mov cwtl sub pop loop test and test and adc loop jbe pop aad sbb mov or test and mov pop xchg test pop mov dec out test jle inc and xor (bad) loope jp enter push add daa (bad) rcrb je dec xchg test dec std dec jns sub dec inc adc xchg aam (bad) pushf xchg addr16 in xor mov (bad) adc xor cmp in pop dec mov dec (bad) mov cmpsb cwtl leave ljmp mov push cmp lea xchg stos bswap cmc and (bad) nop daa scas mov and pop lret outsl inc lea data16 pop es mov (bad) add arpl xchg push icebp in idivb lahf pop add dec cwtl into jb mov xor insl mov inc loop mov jo push out aas dec sbbb cmp (bad) mov (bad) sbb mov jb pop or popa add imul xchg pop sub insb nopl out push test add mov pop js mov jmp lret out or (bad) push cmp mov sbb xchg ret enter movsb hlt arpl nop loopne push mov data16 pusha mov adc inc in push sub call inc sbb lods insb cmp add sub add in mov sub test sti (bad) in aam inc addr16 mov aaa imul push aaa insb adc or sub gs xchg fcoms stos pop cmp mov push inc lahf jl add mov mov sbb cmp add mov push pop (bad) and xchg mov pop arpl and jo addr16 xor cmpsl xchg add inc add or dec outsb repnz ret mov mov dec jbe pop and sbb cwtl inc pusha push jmp push in lock addr16 or xchg cmp lcall int3 in rcr jecxz jb mov or or add pop enter (bad) orb rolb mov lahf test ficoml mov mov loopne sti inc mov xchg addr16 hlt adc test rolb std mov mov rclb sbb dec add sub lret sub cmp xor sti adc (bad) mov xor dec paddq sarl cmp nop stc push sub clc add test clc popa pusha test jge pop or dec inc outsb les sub sbb inc sub les lods cltd add cli xchg leave mov mov add and popa xlat xor jmp and jmp ja out jbe pusha push pop sub mov (bad) loopne shr push sti popa cmp pop cld stos fimul sub push incl aaa out xor or pop femms inc mov xor mov xor push mov add mov jp jle lcall aad int push das or pop nop sub mov push pop test jle mov inc ret jg lret jbe and and sbb movsl data16 mov gs cmp push xchg pop icebp push inc js ja sub mov push fldenv pop stos jecxz loop or rolb ja test xor out jg add movsb jno cmp add clc mov jl jmp push mov xchg fmul loope sbb sbb enter add addl test lret cwtl imul subl negl (bad) adc mov adc mov xlat imul mov rcrb pop int pushl das ss js imul mov call jmp push pop adc push mov outsl neg inc xor aas cmp jle loope ret mov dec std jl push sub ljmp js icebp sub inc pop jns (bad) cwtl or setp loopne (bad) add xchg (bad) jg (bad) leave sub or inc dec pop xchg hlt leave roll test dec pop incl xchg dec lret cmp pusha sbb fisttpl cwtl rclb das jo xchg (bad) movsb call adc out add and push dec pusha orb sub dec and xchg push cs fisttpll cmp shrb cmp and pop pushf fstl movsbl popf mov dec xchg fdivrl (bad) shlb out or xchg add ljmp pop inc insl in push jnp add es rclb xlat mov insb add pop jl aam or pop loop arpl jle divb (bad) icebp mov lret xchg (bad) jge ja call jge xchg test add test enter xchg into stos sbb popf add pusha lods pusha adc imul push pop pop push jno cmc sti push les mov adc push push cmc sti dec in aas jmp dec jne pop push mov sbb mov imul pop int3 clc mov jg ss or pop ljmp jle xlat out out or fs outsb pop jmp sub xchg fsubrl xchg aas je in aas jmp icebp jns rcrb jae in inc pop fadds rol pop sub xor das lret rcrl mov cmp scas repz lds stos mov imul mov cli negb sti cltd int cmp idivl xchg jmp pusha (bad) and int3 mov pop push adc (bad) mov mov add or popa dec rorl sbb lods pop add frstor aam icebp cmpsb int mov pushf push fwait cmp sbb xchg jae inc aad push jg flds fisttp mov mov sbb cmp hlt mov add fsubrs push fsubrs pop jl dec adc (bad) or xor cs fsubs lcall push push or pop pop in fdivrl dec dec pop adc push iret dec push test pop adc int3 inc movsb sub jg rorl or inc add fiadd ljmp fsincos or mov dec data16 pop push into push xchg (bad) cmc pop xchg cld lcall jo mov mov xchg add push push ja inc xchg loop pause das aad nop leave cmc add and lds pushf push stos loopne mov gs out shr mov jbe fs or je xchg decl push xor out dec clc adc nop mov mov jae inc xchg sbb jo jge mov std fiadd push xchg push sti mov and popa jne mov xor pop pop mov stc add pop cmc sub sysexit jne inc add dec rclb mov ja mov xchg add fs pop std sarb ja js hlt mull cmp xchg popl iret (bad) shr addb inc xor stos movb scas mov iret adcl lock repnz stos fwait pop dec out cmp adc lds or mov in mov pop dec outsl push in dec xor js inc imull and and cmp out or lea adc pop pop mov decb sbb mov iret nop das pop adc dec insl scas fcomps add cmp jb daa aaa jmp add pusha rcll mov xchg jle imul lds jns adc pop push and add leave mov pop scas insb std pop pushf mov ret gs lret add loope jle jecxz push xor in cwtl lods das ljmp jle sbb jmp dec adc les scas mov outsl test in cmp sub mov add ljmp aad or cmp add jbe sub lret xchg mov and call push jno test fdivrl xor int3 (bad) jbe add push push aad xchg aas lcall aad and pop sbb or mov fcmovbe pop in xchg jl push push repnz mov mov add add pop negl dec push ret jl jmp ja ja xchg into daa clc push mov imul xchg mov int3 sub push push push jg lret out (bad) pop mov add cld jle scas xchg xor gs xor repz (bad) or add insl ret mov xor sub ffree mov or scas sub sub repz ljmp pop add ret or push xor es pop adc push inc xor dec stc or xlat dec daa or jne (bad) adc es push adcb adc ja jl mov std mov insb inc sub orl fimul mov test es int3 and ljmp test xor ja sub hlt push cmpsl sbb aas outsb or enter fcom je (bad) ss add pop or into jmp xchg call add adc push sub pop cli enter sbb test cmpsb adc push ja popf loop push ror mov clc andb mov pop pushf repnz jmp xchg jbe imul test inc push das dec pop push pop mov imul ljmp sub push add sbb (bad) pop push roll jbe sarl xlat sti inc jg dec sub jmp test fildl ds nop sub stc jg xchg jmp cmp orl lock (bad) movq jle insl cmp xchg adc add push ljmp out pop inc jp push add and loop cmc jb test dec loopne xor repnz push or cmp fnstenv add and ss jg fistl in cmp mov (bad) int xor lock pop mov jmp push adc or inc aas movsb sub push (bad) or andl test xchg (bad) pop add jmp add push xlat lods sahf xor or clc dec xchg or or inc insl or (bad) jbe pop push shll add inc loope test or stos jl mov jmp xchg mov push rclb mov and stos add push pop pop mov xchg pusha dec fdivrl lahf jbe xlat mov ja push gs cli jp mov and sub jb mov xor xor cld xor aaa or and (bad) jmp pop lea adc ja insl mov xchg push adc dec pop rcr in daa icebp je pop cmpsb arpl test jne xchg (bad) idivl adc loope and cmp push decb xor pop xor in cmp or ret adc stc push or cmp push jmp mov xchg orl fs push xlat fldcw jmp negl cmp or enter sbb lret jle std pop ret jbe rclb mov or ja imul in cmp in mov dec jbe jmp sub sahf inc sbb or adc ljmp mov push jne int rcrb and out mov adc add adc or mov not xchg js or js or push mov pop pop mov jb (bad) dec test pop int3 std pop popf push mov xchg xchg pop push jmp or inc scas mov jno sub and addl lahf sub jle call ret imul (bad) push and dec add aam jmpw fsubrs movsb inc addr16 sbb sti add (bad) xchg fwait pop shll push pusha aas jmp jle imul dec (bad) cmc jge pop xor or add jmp sbb sbb pop stc cmc ss xor (bad) leave add sbb pusha mov inc and std sahf jbe aaa cmc jo pusha mov jmp add mov and jmp cmp add sbb dec gs pop loop add add cwtl or pop movsl inc test xchg sub sbb add push (bad) jge xor sti ss jnp xchg mov mov cmp fcoml inc dec dec sbb sarb les (bad) aaa jmp test rorl lods jge rolb pop adc (bad) lods or (bad) or das adc in rorb insb (bad) fistpl scas inc sub mov sbb dec mov push push add pop or ljmp push pop mov in loop or adc pop cmp in inc xor adc dec jle (bad) lret in and dec fisubrl pop xor out cmc jbe push into fs dec or sub fnstenv cli and lods cmp add pop retw dec or cmp stc adc jge scas cld jg arpl push fnsave mov inc test or rolb popa mov mov ss in xchg sbb lret rorl and pop add ja push repnz aam sar cli pushf loopne aad aaa lret test lods inc add jp faddl and mov loop jl ljmp sahf xchg sahf push imul jge push (bad) out stc xor cli clc ja fcoml sahf idivb ds pop push cld rcrb fldl adc jno push inc dec test into pop xor test aad add xor in mov add inc inc or repnz fs dec push test clc pop push mov push aaa jg pushf jp neg mov aas cwtl cltd (bad) push repz sbb push popl or pushf cmpsb pop fist out push jge (bad) loope aaa inc jo mulb xchg jae pop cli jo bound xor decl ror push pop cli sub lcall arpl jge push add inc sub pop cwtl int or arpl cmp dec mov jno out imulb pop in rolb xor das adc jecxz (bad) mov outsl jo inc repnz imul adc mov and sarb dec jnp cwtl stos push sub jmp ret (bad) stc push push repnz clc roll add jo inc and icebp inc cmp jmp sub cmp xchg add cmp jle cmp (bad) sub pop aad lds xchg in adc xchg adc jecxz sbb mov cs or mov imul pop mov jb ja lods outsl dec sbb lret or xchg (bad) mov loopne jnp jmp leave adc add hlt xor jge imul test test fstl jbe dec es cmpsb mov test test mov dec dec cmp and inc outsl jmp aas enter mull and (bad) pushf insb in movsb loop and lret dec pop mov mov rep sub push sti add lret mov or cli and and in mov add push subl mov push loop fisttp dec xor push jle push clc std (bad) cmc subl aam adc sahf adc test clc pop adcl outsb mov out dec pop es or nop mov add in mov mov movsl std inc inc push repz add mov sub dec and and cmc xchg sub call pop rcrb fwait xor je or (bad) (bad) pop jnp push imul insl sbb pop scas add sbb sbb adc xor mov into pop mov icebp pushl jg dec sarb add or and pop sub adc push repz or inc or sbb push ret (bad) xor enter (bad) pushl or jg xchg mov mov loop (bad) push stos pop mov cli arpl push jmp push daa cmp inc aas jno add mov xor mov sub scas jae sub add cltd mov pusha mov cs sub call aad pusha dec or jmp xchg and idivb daa (bad) bound dec and pop pop pop pop xor push cmp mov imul cmp (bad) repz xchg cmpsb xor push push mov jmp pop negb mov cld pop or (bad) movsl mov inc stc jge adc mov mov in mov pop leave mov push pop mov ds mov and ficoml pop or scas cmp orb xchg sub pop push sub cs push cmpb pop imul das push mov xchg fstl idivl xchg add rorb jmp dec push xchg int3 and mov mov cltd and int3 sbb mov xor mov and cmp dec test add ret jp xchg push aam lahf pusha es movsl jg mov cmp (bad) sub addb das fs jo or movsb xor push sbb push pop call or daa and pop rorb push xlat mov push iret mov icebp pop jo adc popa mov push mov pop push test imul cmp sahf (bad) dec fnstsw adc adc (bad) out mov leave popa dec jle xor mov add sub jae dec push (bad) sbb out (bad) cmovo loopne stc sbbb mov pop out shrb into push lock jle das mov cmp mov pop mov xchg mov lds nop aad push imul dec xchg (bad) into jp xor fsubl hlt or outsb add out xor insb insl fdivp orb pop pop movb hlt xchg push jmp cmpsb bound push xchg sub jmp jecxz out (bad) jbe cmp or (bad) xor xchg push jl icebp cmc repz or aad mov jmp and in add loope jne xor mov es lods pop in mov shrl push mov xchg push insb lret out mov pop jae (bad) add inc xchg int sub pusha loope inc pop push add add cli lods adc cmp mov rolb pop imul jmp sahf mov rcl mov movsl icebp les xor jecxz xchg (bad) jg adc or popf cmp pop clc outsl adc es pop lcall neg inc pusha std xor ret (bad) jge pop ficompl or mov jmp cmp test hlt cmp lahf ret jl pop adc lock dec mov insb mov jbe mov sub iret test mov mov xlat and pushf add cwtl das pop (bad) mov pop std out inc decl mov xor sub pop (bad) cmovns add shr daa push call xchg movsl xlat mov and mov and pop pop mov push xor int3 dec push xchg hlt mov in mov sbb ret ret xchg and add ja ret pop mov jae mov pop sub add dec push and std push cmp inc dec add xor mov ret cmp lcall push dec mov push cli adc xor pop das sub dec push or pop xor mov loop (bad) (bad) fistp or jnp sub rcrl add or xchg outsb sub xchg loope addr16 dec jmp rcll jbe push pop scas push lock mov jne push call add push add pop loop pop pop call jl and aas or mov jmp pushf push sub sbb pushf mov xchg inc loop (bad) cmp or ret jmp pusha xchg xchg sub pop frstor lret mov jnp fmull cmc ret xor jle pop scas dec movsl std and pop mov mov sub dec cmp cmpsl inc cmpl dec incb pop not xor cwtl pop rorb sahf cmc test mov ja or imul add pop shl (bad) jg ljmp pop ljmp jg jmp jbe sub loop add movsb xchg lds pop pop pop cli push cltd mov xchg xchg pop pop xchg xor dec xchg (bad) pop icebp std and jbe cld push (bad) into add jle out cmc sbb scas and jns dec into fmull mov mov mov xchg rolb (bad) pop cltd rclb adc pop mov xchg or lret dec pusha add out cld jge ret inc clc cmp es adc shlb pop stos push pop xchg and cmc lods cmp scas mov iret stos repz jnp inc inc or cltd jl ret or daa mov and add (bad) pop test in cmp mov dec pop xchg pop or (bad) mov mov (bad) jp pop cs xchg popf cmp and out fs pop test test xchg and pop push ficoml mov movaps fistp add mov jb test or add mov in in loope lock jb add out or flds push fsub dec das jno jmp fidivl and jns push mov dec nop icebp or data16 jle hlt adc je xchg mov jg add cmp test daa add ljmp aam inc mov inc enter push jl rcrl cmp insb cwtl jmp shl or aam inc movl mov int3 and push dec push adc cmp loop outsl sub js adc pop call ss jge daa repz lods cmpsl subb outsl rcll loope test xchg enter (bad) mov xchg jo cli xchg sbb loop xchg jmp ffree test jg repnz (bad) fldenv pop imul add adcl mov rcl and xchg inc mov and push and in (bad) daa xchg ja lret dec push std fisttpll stos xchg (bad) pop hlt sbb cmpsb sbb mov jo pop jge fist mov lahf xchg test jns fmul imul cmpsl outsl leave std shrl xor adc pop aam lcall cltd dec adc aas jg jmp in pop ja mov sbb shlb xor mov and fxch xchg pop out int3 or and add sar jmp out inc shll xchg (bad) sbb push jns in xor lods and cmp jmp jmp loopne or jge ret fdivp add pop mov xchg idivb out inc jle sub pop add cwtl xchg mov cli push jmp push add inc aam jae fdivr or stc push lea mov movsl std aas or cli mov mov inc mov cmp pop mov jg and cmp jecxz add es outsl dec sbb or nop ljmp dec xor mov pop scas add stc inc nop iret mov jne mov sbb pop cmpsl std imul popf decb fwait into pop lds sub and adc and shrl fadds pop push inc nop sbb cltd outsb or sar xchg fs add ja mov sbb mov lret shl push add mov aas xor push test repz adc xor pop dec js cs and in fstl inc fldenv sub mov push mov push jp fstps cmc mov das mov sub lcall nop mov imul popa cmp push add cmc mov pop (bad) pop pop leave jecxz jno push or jmp dec jmp (bad) mov std ds xor outsb sbb lds jle and cs mov xchg adc int pop push xor andb in das in in cmp adc cltd gs mov (bad) jg and pop mov sbb jp ret les mov insl inc push out and push mov sbb jl push stos popf mov cli add pushf imul add jp and mov jnp or in idiv inc dec dec add cmc sbb dec jecxz cmp jmp xlat loopne sub movsb push stos cmp imul ja add das xchg loop dec inc dec inc cli (bad) xor divb and jb adc scas add mov ret cmp pop je test add ss loop and mov cmpsl and pop pop insl dec xor in mov cli les pop nop adc jmp or call mov pop pop cs jae adc lret or add push mov add push pop lods mov mov jmp repnz sti jl fstps sbb outsb fwait push loop jge imul mov mov push xor adcb adc mov cmp inc jg and ja dec push jmp std xor (bad) addl jle sub lods xor cmc pushf adc lret (bad) repz add sti mov fs inc movsl stc mov and adc mov xor int3 adc mov or in cli cmp cli sbb fcoms xor adc mov inc mov loope xchg lcall sub xor or sub faddl dec test push xchg stos add lcall ja xchg in dec fiadd jns enter loopne and test pushf jp cmp lea sbb xor nop js add inc lock xor cmp into dec (bad) xchg xor add (bad) mov jne cltd inc and mov mov arpl sbbb add adc (bad) pusha iret sub insl push push add mov dec pop xor in or xor aam jl push cmp push or lahf pop and je sbb lret test mov push mov push aam in or scas add cmp pushf lcall add dec enter fwait add out ficompl lods sahf add inc lahf sar repz pop push dec negb out call add push mov add inc add adc adc mov push xorb push fidivr cltd aad or and daa clc (bad) fist add mov mov sub sbb add inc xchg xchg jbe shlb adc ds pop or pop add enter sbb scas cmp mov jge arpl and mov add mov cmp rorb add cmp xchg jbe or mov mov adc nop sbb xchg cmpb mov repnz xchg arpl inc lock sub inc sbb mov sbb int adc jae dec inc pop xchg xor jge loop roll lods aas enter add add cmp mov fstps push push jb xor cmc cli int aam xor fdivrl and dec sub lret inc jl add xor mov xor das rorl add inc push cmp pop mov pusha lret sbb outsb out call mov push xor out rolb insb insl mov scas jle mov cmpsl lcall add fisttpll add pop sub sbb leave ds cwtl in sbb adc xor push (bad) stc shl dec adc sub cli outsb pusha mov or xchg adc mov add and lret inc or cmpsl adc (bad) (bad) daa ret inc xchg fs sub sbb cmp and add xchg xor pop add add push push (bad) insb add popa pop cmpsl adc ja add js pop adc test add inc sub cmp outsb loopne jge call sbbl add mov (bad) das or sub sbb outsl data16 inc adc xchg dec sbb cli icebp sub push mov fs aaa dec mov dec aam jmp lret out mov cmp pop mov sbb inc inc insb dec icebp mov cmpxchg8b lret and outsb mov mov adc rcrl and js push scas stc inc fiaddl xchg or cld mov mov add fcmovne mov pop test add and xor rol cmp test xor sbb pusha popf mov pop scas outsb xor out lock cmc pop clc add insb dec and lods or adc scas or lea push outsb adcl mov add jl push shlb cmpsl in daa js dec add movsl test add mov jns mov fimul and or sbb dec aaa aas lock adc adc dec push inc dec outsb lds dec fisubl sbb (bad) les and lcall jl dec faddp or inc push ljmp sub pop xlat jmp pop pushf or jb add adc shr add jmp cli sbb frstor rolb rcrl mov mov outsb sub frstor (bad) icebp push (bad) mov out mov pop dec dec out xor mov adc xchg nop sub clc cmpsb pushf add cmp add pop xchg cmp pop add mov dec cld xchg div ljmp add loopne add sbb ficompl cmpb mov cld mov mov lea jbe or cs hlt xor sub in in or bound jb imul jne aam aaa sbb addr16 cltd outsl jno dec mov jbe jo dec and cmpsl or enter ds mov push and add sbb push leave insb cmpsb test dec daa clc je xchg in and pushf std cld outsb dec imul xor hlt cmp pop mov sub mov call insl lret xor mov or loope mov lock mov inc shl push loopne push mov sbb or sub jecxz sub call add and dec aam enter or sbb dec or add sub movsb xor lret xchg mov inc jb dec negb add in das cmp xor loopne (bad) pop push push andb push nop cwtl nop sub pop jge mov les rcll pop mov (bad) mov sbb pop add adc pop andb (bad) jmp mov mov fisttp xchg or lret les clc sub sbb xor dec movsb in add mov cmp mov sbb inc pop add dec vmwrite fcom cld iret sbb js push scas or imull fadds sub ja push loopne or int3 sub sub mov iret or out or daa cmp mov rclb aaa lret xchg cmp push add addr16 rcrb imul dec dec push test cmp rcrb fisttpl stos hlt inc cmc dec push int3 out mov inc repnz push cmpsl sbb mov dec fistpll push inc repnz daa rcrw (bad) andl dec les (bad) jp cmpl sub notl or adc inc xlat stc cmpb jle popa adc jl jl faddl sbb mov add loop pusha pusha jo pop in (bad) daa dec test or sbb (bad) cmp jbe out xlat add les test out mov lock jno push movsb in js cmp es inc add mov or pusha mov inc mov mov in cltd test mov pop mov xchg lret mov cmp orb test sbb dec xchg push leave pushf add scas xor pop jl cmp fidivrl inc pop (bad) repnz adc push mov inc dec add push lret and and call push es bound ja push jle popa jno cwtl mov inc nop or nop xor movsb or dec sbb pop dec adc fcompl (bad) repz out cmpsl sbb adc jbe and push dec fmull and mov mov in outsb cmp inc jo or pop mov movsb outsb lahf inc xor or les jb test data16 mov inc sbb xor rol push cltd test clc mov sbb adc mov inc test je aas setns cmp xor or sarb adc hlt addr16 fdivrl pop sahf lock add lret out into sbb popa insl xchg orb mov addr16 out sbbb add inc rcrl lret add sub les adc int adc mov dec repnz lret mov pop pusha mov cwtl es and aad cmpb inc cmp clc int3 mov es test pusha mov fldt dec adc sbb push in aad jae add enter mov pushf add add dec pusha push inc mov dec xchg nop imul pop or cs les in std cmpsb repz inc pop mov lods add cmp scas aas pop add add sub stc call and inc mov test popa pop sbb sub mov (bad) mov mov sar js scas int in nop add ljmp test (bad) mov inc and gs mov cwtl fsts sbb dec enter pop and data16 cmpsl push out adc mov ss (bad) xor jno,pn sbb jg xchg push and movb sbb sub pop repnz add jmp pusha dec ljmp inc mov dec cmp shrb and sbb add pop std andl sub mov movsb jno or daa es out or xor sub push xor ret mov and push out mov sbb dec sub push fcompl mov mov inc outsb or movsl mov or sub cmpb push dec adc les dec sbb in jne sub add sub les add adc nop (bad) jno cmp scas push adc popf add loop icebp jb pop fsts fildl test test mov lods add call cld add fdivl mov test sub adc push or lock insl (bad) push xlat movsb xorb sbb mov out or xor hlt enter jge cwtl mov add sbb mov jp add adc cmpsb sub outsb or sub dec add push mov push popf bound or cs inc (bad) or inc ljmp enter loopne sbb les cwtl popa xchg inc cwtl or dec stc push xor pop jbe repnz je add pop jo in out in (bad) push test sahf lea cmp adc fs pop aaa movsb and sub fs cmp lea and sub sbb sub adc pop or push dec pushf hlt push pusha sbb and lock dec xchg sahf cmc daa outsb rorb cltd mov js insb movsb cmp add popf data16 mov inc bound aas push push fs or das scas xchg mov outsl and jg sub mov sbb pop cmpsb das pop mov pusha fild leave pop cmp xor or or push push sbb xchg sbb insb push das cmp jns in sbb les sbb adc xor add stc add jg pop mov jae lods or rcrb and inc sbb cwtl sbb fidivr pop stos cmpsb mov cwtl mov scas cmpsb clc imul aad out add sbb (bad) xor int3 fiaddl sub loope sbb insb or cwtl nop add (bad) ds mov repnz mov in mov add adc sarb add push imul xor ss (bad) cld pop imull or in adc mov or lods inc xchg in cs cmpsb daa jo adcl lods xorb fisub repz add sets jle xor fnop and add jns movsb les popf test pusha fnop push push mov rolb lods insl es or ljmp jo out in stc loopne and outsb sbb mov add les fstpl repnz shr xor into dec xchg in dec and mov rolb jo cmp jo js sbb rcrl js aas nop add push xchg jbe mov popa mov mov sub xchg adcl cltd jmp das or mov enter mov repnz stos adc cmp pop adc loope push pusha mov xor mov cmpb and or and loopne daa xchg mov and jnp lret xor sbbb enter add xor add mov stos scas lret fs adc push shll (bad) fucom pushf add pop xor outsb push lcall sub add pusha call dec mov lahf xchg in outsb lret sbb jns or sbb ss xor cld movsb add jns cwtl push pop xor pop adc lods pop cmpsl jbe stos dec loopne ror push test pop aaa out or or add jnp xor fsts adc out add mov pusha jo enter dec sbb mov sbb cltd bound cmp inc dec mov lds popf (bad) jge (bad) push sbb movsl lret pmulhw icebp and lcall inc adc add out loope dec stos push cmp in popa xor and push adc rcll je and enter or inc jno or add fidiv xlat insb add mov xlat pop xchg jmp sub dec push (bad) jge es adc and cmp aaa jns adc add add rcrb xor mov xchg pop adc dec imul xchg xor push pop inc xor test lods mov stos dec add (bad) stc and mov sbb ds pop sub fstpt or shll add out add mov arpl loope inc jb push jp dec dec or pop (bad) out nop pop and mov mov mov xor loopne aas imul push pop paddusw inc xchg add fdivrl leave in or ret jbe dec jo imul outsb pusha add add xor paddb push je adc inc cld adc sahf outsl sbb inc lret (bad) pop popf add pop roll dec or mov stos call and stc or movsb jno cmp test inc gs push (bad) repnz data16 sarb mov mov xor es (bad) icebp popf (bad) (bad) or lret dec pop mov sub decl or rorl ss dec cmp pop or adc call mov add decb orb outsb sub sbb sbb (bad) mov pop les aam push sahf lahf dec add jmp les mov rorl imul lahf ja ftst icebp incl xor leave xchg out ret dec xor xor adc add ret imul pop inc add add sahf rol call mov pop rclb push lcall cwtl aas les mov dec inc mov or push pushf xchg mov inc push scas les jmp mov xchg das mov add jo dec adc mov sub shll mov pop movaps cmp add add sub mov cmp clc jp sbb mov fwait lds pop mov add xchg and xchg dec (bad) arpl adc xchg adc mov repnz push call sarb (bad) xchg pop (bad) push sbb sbb popa pop adc add jmp and dec sub mov cmp es jl gs fiadd sub cmp pop dec sbb pop das push cmp rcll dec sub mov mov shlb and push call cmc jbe jmp push pop test js pop bound out xchg mov xor jns in sbb pop mov add and test dec rcll enter enter xchg daa cmp gs cmp sbb inc imulb adc inc sbb xchg pop jbe add mov mov loopne dec pop in aam sti jne mov cltd data16 rcr add loop lahf add imul xor add (bad) mov arpl cltd pop pop (bad) decl (bad) mov movsl call dec and int3 enter adc data16 mov leave xchg lret mov push mov mov dec and cmp mov and lods das andl dec js and loopne cmc lock xorl mov inc (bad) xor or mov cwtl movsb mov jbe inc push pusha mov adc cld sub out enter mov jmp push push cmp mov ss dec mov and dec dec add roll xor mov leave sahf mov dec in cmp lods mov mov push fisttp jns cmp les sahf xchg add in mov pop xchg inc mov dec push mov nop bound push mov lock imul fs or or mov (bad) push fisubr inc and nop lret cmp inc lea (bad) and pusha jo push shl and mov loopne in pusha push adc mov aas or scas mov data16 push mov (bad) out pop or push daa mov add mov push int3 addl sub jo and dec push add sub cmp and je mov ret movsb fisubr mov push test (bad) xor aad dec ret (bad) jne add out sub mov adcl adc inc sub xchg add sub and nop movsb cwtl pushf imul add cmpsl mov pop test (bad) icebp dec and stos xor mov les or js mov sub or inc lahf fwait mov movsb stos pop imul dec dec push nop mov and in push shr nopl imulb loopne outsb scas mov add jb in loope fsubs xchg mov hlt std hlt pop sgdtl ja mov inc jmp dec mov add xor cli and inc je adc dec dec insb add test jp add fmulp stos inc pushf loop ret repz inc sahf imul mov add adc cmp xorb adc add xor lret cmp sahf push mov xchg mov dec mov ljmp lea in out or sub adc mov lcall inc mov imul pusha adc movsb mov lahf rorb cmp int dec (bad) (bad) (bad) xor xchg jae jbe mov push xor mov dec mov or adcl (bad) adc nop cmp test push xor ud1 orl dec xor (bad) xor mov adc jae sub mov (bad) push shll test (bad) cmp push popf add mov je sbb add cmp lods lcall arpl sub imul test push cld add ret iret imul ds rcll rorl popa cwtl add push les leave xchg and arpl add loopne les sarb jno add cs pop call subb lods pop stos call mov or lcall stos pusha addl sbb or leave xchg pop add cmpsb mov push jmp out subb push (bad) out dec cmpsl clc (bad) std cli add mov xor (bad) jmp leave popl mov loopne jp pop or jmp add pop jl je add das fwait ss push or add (bad) rorb push lods fnstcw imul or and add xchg test sub sarl inc movsl xchg cmc mov push mov add test stos je or push jne add aas enter push mov daa push int3 push pusha jo nop or mov xor mov imul pop mov in cmp adc dec shll mov dec cld add fsubl jnp adc psubq jo insb frstor out push leave test dec pusha and insb and and cmp add lock test fimul (bad) and adc fcompl mov dec shll insb sub sar jb dec test movsb imul jp (bad) pop cmpsl aam add insb imul push push cmc int3 cmp inc push adc lods push dec aam sbb push les shrl and (bad) jp add aad insl mov add xlat inc pushf inc rcr add rcrb inc dec sahf push xchg in bound fwait jbe mov mov dec adc sub gs mov xlat sub gs movsb lods dec pusha and stc data16 lock sbb inc movsl jbe lods imul addr16 es cmc cmp hlt inc mov aam mov mov loopne sbb mov add pop lcall ret jae push jbe mov mov mov cmpb mov sbb repnz test mov subl mov cmp iret xchg in mov push jmp psadbw xor (bad) js or jno xor dec sbb mov cmp push pop cmp outsl dec jle lods dec sub add mov sti push dec xchg push add imul xchg xor jge sti cltd std imul pop insb push inc gs test fiaddl imul decl mov cmp loope ror lock sbb cmp aam ja and jno cltd icebp add (bad) lock idiv mov cli loopne add inc xor push lcall or jns add xchg push jle or shlb mov sbb sub in adc and ficompl or and lods push xor sbb or insl cmp jno add sub push mov (bad) aaa jmp rcrl insb add nop lods cmpb add leave push pushf js inc daa cld add int enter call clc jecxz mov mov andl sub pop ljmp add inc pop mov push fsubrs stc xchg ds push js jp sub out pop mov jnp imul and lahf insb sbbl pop outsb cmp cwtl mov loop shlb push loope cmp bound test clc inc bound mov push cmp ret inc ljmp inc and add cwtl push mov (bad) xor xchg cmp cmp jecxz mov faddl orl aam data16 xchg ret sbb test add ja xchg (bad) fisttpl sbb cmp call loope lock mov cmp lret dec push dec jo mov mov out add jno nop movsb cli or add (bad) aam jns cmp push faddl and xorl roll adc dec test push mov movl and sarb rorb xchg xchg lods pusha xor add insb bound stc roll dec clc (bad) mov dec lcall jnp sub adc mov cmp add mov inc cmpsb or add jne cmp sbb pop jmp or jecxz enter stc dec lods rol into in fwait add dec xchg add test xchg stc adc test mov jns sbb mov xchg cld jmp lods xor xlat sbb pop cmpsb cmp sti pop adc jmp mul rclb repz cmp cmp mov popa cmpsl dec jg cmp mov (bad) jo mov adc dec mov adcb scas push and loopne incl fdivs pop and push repz adcb mov clc loopne add mov out jg ds jbe popa mov addb jmp ljmp (bad) add mov repz rcll jno rorb dec sub xorb xchg cmp mov and jns pusha sbb adc daa out mov addr16 jae cmp xor stc pop jl nop cld sub or add dec xchg mov sar call in pop xchg sub mov pop sub or (bad) xchg enter pusha push scas subl or outsb rolb jns je mov stos mov inc into and test jno clc or and jg addb hlt sbb push mov lods or lock les shll sub xor call popl mov add adcb add mov (bad) adc (bad) mov test sahf and loop js dec lahf or cli pop arpl mov bound subl push pop add sub xchg and push (bad) or rcl add jl int add faddl imul mov inc add lret repz fsubrs lds call inc pop jp cwtl insb mov lcall adc xchg push outsl gs out pop add cli mov pop add add (bad) cmpsl lret scas add push in xor arpl mov rorl (bad) mov adc add call nop sarb mov cwtl add mov rorl mov mov rcrb pop push xchg adc mov and adc xchg negb add enter xchg mull and adcl fistp fwait cli inc dec jne lret push cmp sbb pusha cltd stc ret push lods xor jg xor das sbbl cld mov mov leave in ljmp ret nop add lcall xchg lds jecxz stos sbb pop or add fild cltd and ja out xorl icebp stc shlb inc clc inc inc cmp push imul cmp xchg loopne (bad) loope cmp sbb dec icebp imul fist push fidivr lahf clc adc mov xchg pusha pushf adc leave sbb fcomps mov jl adc push and (bad) daa pop mov mov adc stc inc js cmp dec mov dec hlt fbld and js adc fs pop add push and inc add call add or jne and jae mov insb xor add inc add je mov or es lock cmp lret mov inc cmp or jno push (bad) push mov pop fcoml orl push and iret leave add xchg push rolb dec sarb add xchg or loope add adc lods enter lds test in lret push leave addl call jnp xor repz mov xchg push or mov or and mov xchg add lods (bad) out xor mov imul xlat bound mov dec push sbb cwtl inc add adc enter add and gs cltd cwtl adc adc dec mov push dec inc pop sbb push nop add ror enter sub dec inc push hlt jmp mov add add xchg mov adc push cmp loope adc into jmp or add insb push add cmp adc call pop insl fisubr inc into xchg (bad) nop in imul sarl scas fs adcl or mov lods add sbb insb xor mov es cs in imul lods add dec les cmpsl jno xor fcoms mov (bad) and xor dec pop clc and xchg int3 cwtl sbb add rcrl and fs jmp cltd divl xchg push loopne xchg sbb mov fadds inc pusha push ret xchg daa mov mov lock jns in adc and mov in rolb xchg mov repnz inc or cmc cltd movsb in add out pop sbb add lds adc mov dec push xor repz push call test loopne jl sub aam dec dec (bad) dec shr push xchg mov push or pop cmp sbb cmp xor sbb adcb xor mov xchg mov pop int jb sti and mov ret mov inc xchg inc (bad) pusha das xor fsubl rclb and test adc push push pushf sub fldl lock dec fdivr add loop sbb and sbb ficompl xor push sbb loopne outsl xor jecxz leave sub add ljmp leave pusha jmp adc push inc in inc dec shl dec cmpsb iret mov mov adc gs mov lock in shrb sti mov add sub lock mov scas lcall sbbb fisubrl test mov cmp rclb mov stos mov arpl fsubs mov xor (bad) jno (bad) pop push xor dec pop add or icebp xor cmc insb lods sub adc in xchg push stc or push into loop test jo mov sub in mov scas push mov pusha cwtl lahf mov lea ret loope iret lret dec add bound fdivl xchg cmp or fisubr mov (bad) push mov jae jp sbb adc inc jge lcall popa sbbb xchg (bad) adc out push inc (bad) adc ss jecxz ret out xchg movups dec rorb cltd scas or xor aaa mov mov xchg mov jmp mov test loope xor pop jo sub mov lahf xor sub shll mov in imul sub push xchg jmp int3 inc mov mov mov adc adc mov cmpsb xor or or lret dec dec jnp aad jp lds stc push jo scas mov jne inc in bound insl xchg mov and add and (bad) sub add lahf xchg fcoml and and mov jmp mov addr16 xorb inc add insb loopne lock sub aas push cmp dec pop mov push adc lea mov jge add rclb inc pop mov add loop mov in jp pop add sub shll in call ds shll arpl xchg cltd in cmp mov mov loopne cmp add mov cmpsl and push sub mov call sub and dec and roll fs xor (bad) pop sub enter or pop (bad) incl rorl daa (bad) fistpll cmp andl or xlat jns and add iret add aaa inc andb pusha and lahf daa dec aam (bad) or cmpsl add bound int fist mov imul push outsb adc popa notb out (bad) pop xchg imul lods ret inc lds xchg jb and pop add clc add call movsb push mov xor mov clc fadds xchg add js mov lcall mov adc test imul nop push pop cltd pop rcll dec and sbb adc push xchg and loopne sub rcr rorb mov dec dec inc fs add xchg inc cwtl mov lret mov xchg xor sub adc pop sahf sbb aam test and rorw push test xchg push and pop or adcl icebp add in arpl mov add stos adc xchg pushf leave push jno int3 popa aas adc scas xor inc or jno inc enter pushaw mov add and add in leave test rcrb loopne inc xor sub jns mov pop ds push or and jecxz shlb lds jbe push dec cli add icebp movsb adc lea arpl pop push and in sbb jno mov add push lods cmpsb and mov add add and jmp js and rcr lock cmp adc xchg push enter and add pop push mov sub jecxz iret dec sbb test pop add pop movsl dec jecxz or imul inc add sbb inc or loop cltd cmp leave xchg ret mov adc and add push aad hlt je adc push jg sub dec les adcb add inc mov jno pop addb pop sub imul ret sbb sahf rclb cmp int3 lret xchg mov mov test and (bad) loopne inc adc sub adc andl imul adc pop and int (bad) mov pop cwtl pop push add cmc out scas push addb push inc push roll rolb test pop mov mov adc in jmp and xchg pushf fstpl sub xchg or (bad) int3 pop sbb sub (bad) cld pop addr16 and out lret mov and bound adc popf push aad xor push jecxz vmread mov pop out adc lock ret cwtl out add xor (bad) loop mov add ret imul xchg les clc cmp cltd pop dec inc nop nop inc daa adc testl xchg pop xabort sub adc in in ss mov jg ret test sub jo stc nop add outsl fdivl faddl add out mov (bad) lcall or mov fcompl (bad) push movsl inc icebp jmp xchg ds (bad) push or push jle inc xchg gs test mov ss rcr xor xchg loopne pop and dec (bad) push sahf inc sbb movsb sbb stos dec jl or loope adc add mov mov mov ret mov add xchg insb adc adc cs lock adc xor nop js outsl inc addl jl add aad js imul adc cltd adc popa scas js push movsb incb hlt into rclb (bad) mov cmp rcrb fidivrl cmp call xchg fdiv nop pop add xorl lcall dec and and stc jo js (bad) test insb loop jecxz divb daa loopne pop dec out xchg inc ret popf jo mov inc inc addb divb dec fiadd add mov add leave jp mov pop ljmp nop inc orb xchg aas mov sub mov fadds push les sbb lock mov lods dec add pop shrb adc pop imul jno dec cmp jb or sbb loopne jge or in add xchg mov add fisubrl add pushf iret test cwtl cmp adc inc ja pop sbb test pop sbb pushf enter rcrb dec mov add aad test test push xchg js push inc add imull or mov dec inc mov xor andb add jp les sub in pop pop in lock sbb pusha aas sub pop test xor pop or mov (bad) adc sub push sbb enter and cmp clc js fiadd pushf pop xchg jns aas jmp sub cwtl in add les xor push jo daa sub adc ret mov and and (bad) mov xor and sahf or xchg and sub shl lea lahf sarb dec lods or cmp mov scas jne test rorl sbb inc js mov cld add mov inc sub push mov sbb es sub add sub movsb addr16 and mov pusha insb sbb pop fwait inc cld les xor cld add dec jb lcall dec and nop lea push add adc cmp je dec xor adc jp push scas mov fiadd pop (bad) or push add push loopne or loope repz inc xchg sbb loop fiaddl mov rclb lock je sbb or sbb xchg (bad) out cwtl inc xchg inc mov mov ds cs fs mov dec lret loopne bound or adc xor sub outsl adc dec movsb add cmp add pop dec mov dec sub cwtl mov fwait cmp js es sbb insb arpl cmp and mov in pop rorb test clc push push add incl mov add test lahf in pop andb mov xor push gs push lcall andl jbe addb mov sti cmp push or imul add or mov cmp lahf adcl sub iret adc push lds add (bad) fistpll (bad) call pushf mov adc loop pusha push add mov inc add push sbb push add lods add std adc sarb inc test adc loopne jbe pushf add xchg cmp dec out inc add xchg dec and pusha out (bad) jmp pop into pop aam push popa dec sarl jno xchg inc mov or xor cmpsl cwtl sub adc mov jp sbb inc dec sbb push lods jns add into lock pop std loopne jp push dec jnp add jae cmp fdivr in std clc add fidiv mov repnz imul inc dec or stos pop jg jge rorb cmp inc mov cmp sbbl int3 enter jmp (bad) iret das cmpsl xor add or inc mov jge push mov arpl addb clc push dec inc imul addr16 leave mov cli xchg xorl aam aad inc mov push pusha psllw add or sub aad cmp sbb nop or movsl lahf dec jns pop (bad) xor outsl js jo in pop add ss inc pop or push mov push pop xchg inc mov cmpb ja add aam mov inc add clc rorb lods sub add pop pop das fsubrp sub cli in and jle inc mov mov (bad) xor and clc add ljmp pusha mov fdivrl inc jge popf outsb mov add cmp ljmp cmpsb lret add lock test sarb or sbb test mov (bad) mov es xchg sbb scas cmp inc pusha sub push push (bad) sbb cld mov out jno sub les or xor cltd aas and adcb add sbb repnz mov push cli inc notb loope iret adc lods mov nop mov lret or jb (bad) outsl hlt inc daa out (bad) mov inc jecxz cs xchg mov insb sbb fisttpl hlt lock jo (bad) mov or dec mov cmp mov enter mov call js jmp lods dec add jmp les hlt jb icebp adcb xchg mov add mov and inc jecxz stos movsl loopne sbb jl mov jge inc repnz mov adc jno xor call push mov rolb push cli jbe out mov loopne or xchg jle sub add push add mov fs adc add mov mov adc cmp gs add cs mov cmpsb sub std ja dec xor inc enter aam xor in add adc jae loopne repnz ss pop lods jns (bad) sbb push cmp lods repz rorb xchg mov scas sbb movsb les sbb ret pop mov pusha push push xchg add push jge mov cmp out adc test ret jno (bad) add pop je loopne lods je adc into sub xorb stos daa dec out or iret push add cli xor loopne pusha jb xchg sub sbb add cmp inc subl lock lods push loope xor inc or movsb add jmp cmp arpl pop repnz lock test int3 pusha mov roll int test add add jae arpl popf pop adc jl mov cmp add sub cmc cld fidiv add daa std add pop sbb int xlat pop xchg xchg or leave pop xchg pop mov add or cmp and jmp loope in lods stc fs cmp fiaddl or and lods nop out loop adc cli push lock push xchg sbb add add in daa enter out sub popa or pushl push inc mov pop mov add (bad) fs sub xchg xor fsubl add std add (bad) adc sbb sub shl nop nop push and pusha pop cmp push add push js mov pusha test notb pusha mov push mov push repz call add fbld test and xor add mov inc xchg les cwtl test ljmp inc xchg int3 rolb pop aaa xchg cmp jo bound divl and add notl rolb (bad) mov xor nop arpl imul add fdivr cmp cmpsl cmp in sub mov and aam pop jl or or enter test mov sub and dec ss add push sub pop and adc mov mov jge leave sbb clc (bad) leave in sub xor push loop push or jp dec roll push ret out sub movsb movsl push int3 aaa jo or adc inc sbb jp sbb mov iret data16 sub ror xchg test dec push repz mov dec or adc and push cmc xchg pusha mov call and add repnz inc mov pop inc xchg push loope nop push push movsb mov sub xor mov and scas movsb lock mov inc mov xchg test mov (bad) in hlt xchg add mov incb add jbe pop jg popa int3 and bnd das and and fwait pop mov sub xchg (bad) jle jns mov and les (bad) test push mov std or cmp mov pop nop adc faddl inc aam add lret std mov or cmpsl lcall jl lock roll mov jmp sbb adc mov inc frstor bound in dec xchg clc xor or lret cmp xor (bad) leave clc ds xor mov pop xchg xchg cwtl int3 sti inc lods xorb lret xor mov lret inc mov in pop dec clc add mov icebp andl (bad) out js mov (bad) mov mov xlat jmp out sub mov mov add rcrb fmul adc cwtl or mov cmp xchg add fs add dec inc sub xor je add enter pusha imul mov data16 movsb aam psubusb out lahf mov out mov or cs xchg sbb dec arpl jmp add and js popf sbb les mov xchg or les rorb ds sub mov cld adc adc jbe call data16 lock or test fdivl inc cmp sti inc cmp jl sbb daa mov arpl and sbb enter push pusha ljmp cwtl adcb jmp cmp test ja insl jmp ljmp call loopne je inc in add fiaddl mov mov add inc inc xorl mov pop xlat dec lods sub mov test jae pop jno je add mov fsubrs aas ss push stos add pop sub adc sbb jbe mov cmp push call add sub hlt cmpsl ss add rolb mov out add inc imul imul cltd cmp adc mov loopne sub loope xchg lea mov mov xorb and ljmp push add in dec inc xor adc jg or sub lods js pop inc cmp fcoml lods jns or jbe or gs rolb dec fisttpl ror cmp mov xlat data16 icebp inc add jmp fstl stc je add inc rorb mov and push mov mov pop pop cmp push pop and fstp or add fldenv and add loopne add pop mov pushf bound xor call inc clc loopne dec aaa adc call rcrb mov jle cmp add aas adc jo pop mov clc lods test add cmp mov add push stos xor rolb push pop mov fild pushf sub fmul repz add dec imul adc sbb sub xor lock dec cli icebp cwtl mov mov xchg sbb inc dec lret leave repz inc cmp test cltd pusha clc dec sub mov pop loope aam hlt das adc test mov add inc mov jb add or jns mov aam mov sub btc xor mov adc ljmp push (bad) sub fiadd mov adc sbb xchg sub test xor jnp mov and sahf mov cltd lock pusha inc and test add add sub mov jnp xchg imul scas pusha call inc popa push sbb mov ja cmp loop pop xchg mov addb lds xchg mov add jle jnp xor mov mov ficom xor andl adc repnz sub dec lods pop add adc cwtl into in lea or add inc or fsubrl push pop out stos test inc mov call movsb xor pop cld scas add mov lahf ja leave mov push adc incb in mov xchg sub push lods push std jl dec jge mov popf pop das in loopne sub sbb adc sbb mov inc push pushf cmp pusha std mov (bad) in sbb and add xchg aam out sub clc mov push lret fist je sub test fs adc dec (bad) adc sub bound js test mov and lock cwtl mov dec test jb (bad) xchg push test rcr jae add jg insl mov out cmp nop or jno xor fiadd pop test xchg sbb sbb jnp imul jbe inc loopne sub shrb sbb inc add es sbb or mov pop inc out lock push jo pop xchg (bad) sub push adc and adc lret popf mov push lods push dec add sbb jmp add mov cmpsl testl popa cmp daa cltd mov lods fidivrl js sti in sbb jle add inc (bad) loope lret or and jbe nop stos lahf jge subb js add inc mov jl lret rcrb ret test movsb push inc mov popa mov loopne (bad) repz fwait shll xorl push (bad) je mov sub add push popa push xchg scas or xchg sbb adc jmp jle dec inc movsb lock add scas loope dec push data16 add mov lock fdivrs jg clc sbb pop sarl ss mov jmp xchg jl cmpb push jb lret test jno shll jo add movsb (bad) fstps aaa idivb mov fadds pusha inc jmp lret aas out inc inc call jne adc pop leave out dec cmpsb dec add xchg sub xchg add mov adc mov xchg rolb sub adc daa test call mov xchg pop mov ret pusha dec mov mov push jno push dec pop xor and pop dec mov xchg rolb push stos mov push mov push xchg mov (bad) out pop push jns add addr16 pop cmp dec scas push clc shrl sub adc dec adc xor jo (bad) or rcrb add push rclb jle rcll push shl mov iret mov rcrb and stc inc into hlt add mov xorl call bound movsb dec loopne sbb arpl lods xor dec scas es cwtl mov clc add xchg jno xor cwtl xchg cmp arpl pop add and addr16 adc test (bad) xchg dec sub mov int3 sbb mov es mov cmpsl adc cmp push add cmpl imul pop or sub andb pop mov xor aas mov scas sbbl (bad) xor dec or mov icebp xchg in int das (bad) aam (bad) mov add test xor mov mov es jo add inc fadds xchg lods mov out or js mov mov and mov xor xor lds inc sbb sbb adc and inc ss jo adc push sbb xor pop mull inc add or arpl cwtl nop jae movb sub or dec les mov bound mov lret leave push mov push aam xchg ret pushf es add (bad) push mov mov addr16 push imul loopne adc sti or rclb js inc test mov add int rcrb dec push jo arpl subb pop test mov leave dec dec loopne push cmpsb cwtl rcr cwtl out dec lods jo mov xchg mov in cld movsb mov enter subb pop (bad) pushf mov sbb and pushf ret sub mov xchg mov jnp xchg arpl cli cmp mov add into sbb or push add (bad) aam lds inc iret (bad) xor inc stos in jns add test enter or fs ret xchg and gs sti jne les dec or add inc mov push jge xor lahf dec addr16 shl cmp mov cmp movsb fidiv in aam je ljmp sbb inc xor clc or in mov and in cld ds ja jns or daa pusha movsb adc pushf mov (bad) cmp jmp cld clc enter cmpsl pop mov popf push jo call pop sub push cltd adc cmpsl jae daa jnp sbb mov ss sar imul jbe mov lods sub push xchg cmpsl sub incb iret add pop fbstp mov add pushf dec xorb mov and mov clc push mov and lock je add sbb mov mov cwtl mov (bad) pusha xchg xor lret jae adc sbb lods popa into xor fdivrl add scas cli inc push or push dec movsb in push hlt clc add shlb push sti dec test add imul push scas push add pop cmp lret mov push repnz jmp xor outsb (bad) fmuls pop je clc rclb mov movsl aam cmpsb test mov adc add repz (bad) js push lods mov in or and xor in add subl adc add pop push and xor imul sub rorb xchg stos adc dec es and pop lods or dec xchg adc (bad) dec jmp mov push pop sub fdivrl nop test lcall lods inc jmp out cmc pusha fmul push rcrb movsl out jmp mov gs js add out mov push cmp leave and pop sbb andb stc cmp mov mov rorb loop aaa call xchg mov repnz dec or cmpsb mov xor repz inc nop or int sbb jmp push lret daa stc push xchg or int3 in jp mov push cli dec mov imul mov or fdivp jno sub pop jecxz aam adc sbb (bad) sbbl scas ud1 mov lock pushf int fwait adc cmc inc rolb jnp imul jno sub in mov mov mov adc mov fmul ficoml pop ljmp pushf pop pop fldt mov adc dec movl mov (bad) faddl rorb pop sub test sbb adc mov insl mov inc dec add pop and leave hlt lahf rorl sub cmovnp adc (bad) mov repnz pop adc xor dec sub in add push out ret int3 fs popf jecxz jnp cli xor mov lods mov shrb insb lcall pushf adcl inc lock iret xor and jbe rclb js daa shrb mov popa mov cmpsl test outsl xlat add std movsl add mov xor or sti pusha xchg adcl pop lods nop pop push leave jecxz adc dec dec nop pop jns cmp sti mov pop mov jge mov mov stc sub and js in jge cmp add push mov dec push test xchg (bad) cmp out push add dec xchg imul mov sbbl clc pop sti add adc loop sbb or (bad) repz adc mov inc ja insb and repz js je jecxz mov nop out or xor xor jg ret inc mov xchg gs loopne mov mov loop add push add fimul pop xchg xor mov sbb dec push pop lahf dec addl cli dec sub mov out jmp add sbb add (bad) jbe stos lcall pop mov mov popf cli add adc dec mov jno jno rolb test adc inc clc stc mov xor movl cmpsb add fsubrs scas jmp andb jo adc movsb int xor xorl pop fmull mov ja mov lcall mov sub (bad) add in xor xchg hlt dec dec mov adc and add dec cmp popa je lcall lds insl dec fiaddl and call pop mov mov mov data16 pop or jns or mov jp push jnp inc pop or xchg push andl lods adc add and xchg test xchg movsl loopne ds push xchg jno jns inc (bad) jge popa jl insb mov into xchg sub cmpl stc shll mov xor and test jno dec xor test repnz fistpl sub jnp andb xor es repnz test sar cwtl repz dec dec mov pop mov jmp div xor rcrb cmp test bound push (bad) or xlat subb add movsb add lds mov mov pop xor dec outsb (bad) cld xlat pop add jb lods (bad) sub pusha mov push orl in xchg and ffree add mov into sarl rol xchg add mov and mov pop xchg popf out loop popa imul push sub ret add adc inc pop fcmovnb cwtl dec repz jmp pushf ficoml mov fbld jnp je js xchg mov and stc sub adcl cs (bad) push (bad) leave mov cmp mov xor jne enter mov pop xor repnz mov faddp xchg sbb inc loope pop scas cmp in in sbb and (bad) push push add mov dec inc test sub inc sbb cmp clc lods dec sbb repnz pop adc test add jno mov add adc out mov in mov ds inc pop lea add xchg fxam add test js loope outsl xchg leave mov and mov xchg mov cltd jmp jnp nop iret xchg call fdivs loope bound flds push das add sahf adc aas sbb and pop mov imul ja sub jne adc mov rolb cmc xorb xor jnp in mov xchg sbb add mov sub pop and mov inc fimul xorb adc pushf sub lcall aas inc (bad) test (bad) test addr16 pushf push sbbb add add pusha imul leave adc inc aam cmp pop clc enter mov push sarl sbb add push mov inc mov stc sub adc inc int3 divl popa sti mov and imul loop sub lods pop push test sbb movsl fsubs adc cmc jecxz insb xchg jo sbb test add dec sarb mov xor inc rolb mov mov in mov sub movsl nop rorb xor dec (bad) int3 cmpb xor pusha jns jle push add dec add mov pop xchg out push cltd rcrl je pusha pop mov jl push shrd mov shlb std xchg enter add dec sbb adc xchg test js xor cltd inc imul sub outsl adc (bad) les fsubrs xchg movsb xor and arpl sbbb or sbb in or aad pop aas xor add dec dec mov cli add in mov sbb int add mov xchg xchg xchg enter or (bad) repnz xchg loop or fimull cwtl pop pop sti fwait (bad) and xor in sbb or jmp stc add add pushf (bad) in aaa jnp add addr16 ja rcll inc add orl ret sbb adc das push and movsl adc mov out lea jne dec sub mov fwait js rorl xchg pusha stos xor xor adc push in xchg cld jecxz pop add and push or insb cwtl xchg ret inc mov roll or inc cmpb push lock mov fs test repz xchg bound inc nop jbe push jg sbb add lods sub popa dec mov push jl daa iret test rorb ja (bad) movsb test inc and or xor push mov movsb sbb and lahf bound cmovs push push mov add addb xchg jmp xchg ljmp or sbb dec add icebp add cmp cmpsl sbb adcb cmpsb push mov into lock cmpsl jg add push push incl add jge jl xchg and sbb sbb imul dec push movb jl add fs mov mov and movsb jnp adc loope add jbe bound push lods push sbb imul xor stos je or mov int xchg shrb in out push lods dec add pop (bad) jno mov dec xchg test jns subb cwtl jecxz add fcomps loope mov sub add pop fisubrl ljmp add cmp mov repnz pushf mov addr16 push repz lahf sub or add fcomp rol xor pop ljmp pusha loopne mov push stos jb lcall addb mov dec xchg push rorl clc or popf adc pop pop push movsb sbb mov or pop xor or adc jl test dec mov test or add xor jmp and mov and shrb std pop xchg and std (bad) enter sub adc pop lcall aas std cmp cmp fs ret shr icebp ja and xor dec nop mov clc mov sub jp pop dec xchg jno mov add pushf lock lods add cmp or cmp pop cs mov test loope sbbb mov add outsl dec cmp and fiadd and fwait sub jno mov mov add push add call add sti (bad) out cmpsb adc mov sub subl gs dec clc jle fcomps fistl sbb and cmp or add xchg push push add ret adc add popa dec fistl mov pop in push loope,pt sub sub inc addr16 mov push out enter ja ds cmc mov scas jecxz fmull lahf outsl mov adc cmpsb out jno add add mov out and sub add cmp lret jnp or jno sub pop dec pop or aam iret sbb sbb lea inc xchg fsubl rcl adc cs scas test call lods add xchg jb add adcl adc jl je adc push stc mov cli enter push xor cmp or into or outsb mov xchg sarb sub pop pop mov andb loope xchg int3 push scas and or out rolb insb push cmp das cltd or xor cwtl cmp cwtl rolb push jmp pop fs jns rorl outsl in daa or stc mov js sub inc pusha (bad) nop mov leave repnz rorl mov mov mov jo jne xchg cmp or shrl out js jge mov adc imul rorb rcrl lock clc in push jmp adc cmp dec adcl dec xor inc mov xor frstor pop nop lret dec sbb nop pop dec xor stos inc rorl xor imul add lcall in inc jecxz xor cld inc and add (bad) stos or jno xchg sbb in sbbb nop pushf mov bswap loop out mov or addr16 sbb in adc or mov sub pushf jp cmp mov loop outsb icebp and mov add push pop cld add nop int fidivrl mov or adc mov js lock jnp sbbb xchg les add mov cmp mov pushf adc xchg adc aam push xor call jnp (bad) adc pop and cmp imul and rclb in pop xchg or dec sub cwtl pusha clc (bad) das iret push xor int rorl mov mov daa pop loop lea loope xor add push cli (bad) jo push sahf push sbb js xor mov outsb xor les mov mov lods or xchg sbb jno add arpl sub or jno xor lods dec push dec cwtl mov lods adc dec mov mov xchg test push mov repnz lahf cltd (bad) and repz adc in sub or int3 scas movsb je add pop pop add sbb inc rcl and or or add xchg mov addb cmc push jl xor dec sbb sbb or cmp imul ret pop rolb jae fisubr inc ret xchg pop pusha lock pop jnp (bad) dec cmp inc call add mov stc clc sbb pop pop jne outsb add jno loopne lock add lea add idivl les outsl add ljmp xor pop out (bad) testb outsb add pop jle dec mov adcl pusha fstps lock jecxz mov xor inc xchg dec push frstor add xor or xlat mov sbb pusha pop cli test movsb xor dec repz sbb dec in cli subb jbe,pn jp divl push adc fldenv (bad) mov ds push sub pop push mov dec add aaa add jp ret popa ljmp mov jle push xchg adc xor sub insb inc push xor push adc fimul test pusha fstpt add (bad) pop lret ds xlat lcall out loopne jne add mov push xor mov inc sub scas add lods cmp adc push xor dec jns cmc sbb stc fisttpll xor sbb sub adc add jmp and cmpsb add jecxz mov scas xchg nop push mov and cmp xchg lock add lea add (bad) repz sbb add mov scas mov sbb and mov out jle ss sub scas sbb xchg addr16 inc nop add sbb mov je sti and insl adcb push fmul add mov cmpsl shlb xchg out jo ret repz adcb adc (bad) mov js adc jb pusha jmp dec add into pop outsl jbe mov mov dec (bad) dec (bad) or xchg mov loope cwtl xchg in pop xor js (bad) into imul cld add sbb xor mov jmp adc add leave jg mov faddp sbb xchg loopne xchg adc aas xchg insb jo and mov shll dec repnz dec pop int adc enter or mov fnstcw add adc xor mov or adc popa idivl out popa jns xor pop add js inc cltd mov jge add sbb mov test mov xor push or pop (bad) and mov sub inc xchg cmp loopne inc fsubrs lock pop movsl fdivrl jl clc mov xor stc xor dec (bad) test loope dec jb andb hlt or adcb mov xor movsb mov xor add or bound and outsl adc mov into std xadd sbb fisttp jb loopne repz mov add pop and lret jo (bad) test dec in sbb mov bnd xchg addr16 mov mov add jnp mov mov sti nop or mov outsb ds out inc loopne pop das mov jae xchg dec mov add sbb mov repz bound int3 fnstsw adc pop movsl enter dec jnp sub xchg add call dec jo test or sarl mov sub inc sub (bad) ffreep mov add pop add lods sub xor add loopne insl jb xor leave or xchg jne inc mov cmp sub add jp,pt call sub (bad) xchg pop nop lock push add clc adc outsl xor ret sti pop sub inc loopne push inc sub or fdivrl andl or jno adc sbb jo leave or or xor or loope ds sub sbb (bad) cmp dec add jge and adc lds inc or jo add xor shl mov sub std mov aam ret xchg push dec je in pop cmp mov adc mov insb and mov repnz cmp push pop xchg pop out or je addl mov testl push xchg std nop add and aam jmp loopne sbb pusha pop adc pop mov jo dec mov xor mov repnz cs cmp int3 and and ljmp int andl popa out adc jb std adc mov xchg loopne sbbb push (bad) je pop sub cmpsl pusha dec lds nop dec outsl insb jge bswap pusha icebp out or or scas leave inc add add sub push add dec sub pop adc in mov mov not xlat pop adc sub jg out je cs jae (bad) cmp jo imul divb cmp stos mov stos add adc pusha aam jg cwtl lock pop cmp fs cmp push pop sub (bad) adc inc in leave movsl jl or xor insl dec mov cli mov xor sub movsb or add sub (bad) repz out push jmp lcall imul into dec cli out pslld add subl cwtl ffree sbb pusha cmp imull add cmp jnp mov cmp xor and pop mov xchg in adc shlb data16 add jle jg call add lret dec xchg mov lock or adc xchg mov cmp mov fistp adc adc jecxz (bad) hlt data16 or and mov jbe push mov rol repz or shlb (bad) (bad) adc movsb cmp sahf or mov je pop pop fidivr pop outsb addb repnz rolb rclb add push inc xchg icebp es lahf push mov xchg pop jno repnz int3 push mov shlb sub mov or inc pop jo xchg jns xor adc test cs adc fdivr scas jmp popf push or mov cmpsb mov mov jne inc push andb mov and xchg and (bad) sub pop dec sbb jo sub hlt inc fcompl pop adc movsl mov jb outsl xchg pusha dec add test inc icebp push sbb xor lods xchg fsubrs js cwtl mov jg outsl lds dec cmp add mov mov push sub dec jo push and or or mov inc (bad) (bad) repz mov add imul aam add ret push out xchg or and stc push rcr repnz (bad) jecxz xchg in lcall inc adc aas jp inc sub xchg outsb cwtl add loopne gs or xor mov pop imul mov add mov pop clc mov mov or xchg push fwait mov and hlt cmp xchg lods xchg xchg add aam xor mov aam and jae flds cs add fdivrl rcrb jns or sub adc push sub cld sub inc ret mov jbe,pt enter je xor sub roll lock addl xor xchg dec sub or ret mov inc notb ja pop inc mov out ror mov lods pop mov xchg stc xchg xchg mov (bad) loopne or mov fildll dec mov lock adc test xorl mov cmp mov out lcall fadd push (bad) outsl add sub imul or xor dec sub clc lods ficoml leave sbb mov lcall stc jp pop fstl (bad) repnz addr16 int lcall jb sub les in inc sti xchg xor rorb outsl lcall cs (bad) in out jge dec call pop mov mov loope xchg xchg dec fadds sbb mov cld nop out add lods lds clc add push push into sub cmp xchg xchg push rol imul jns fistpll rolb mov inc mov fmull mov mov test jb sub and mov pushf call fldt inc fsubrl jb outsl jno (bad) fsub aam std and pop test ret sub add out adc jo and xchg cwtl fistpl nop pop lock loop lcall push add fsubp or lods sbb dec push std jmp clc sbb test xchg loop xchg mov push mov push pop jecxz fisttpll and add or or sbb fimul pushf xchg scas inc test addl js add outsl (bad) (bad) sbb mov ss mov dec clc sub fcomp adc add stc jg add outsb push xlat lods pop test and mov xor inc jne outsl mov cmp mov jae adc rcrl addr16 out cmp add nop push pop jl rcl fdivrl fchs dec add sbb xor mov js std inc call or xchg imul adc add push dec cltd scas push fwait lret mov jnp dec jmp add stc jb test dec push sbb shll rcrl arpl add movsb jg out je adc xor int3 roll jb in movsl call or add mov loop jae test scas gs add sbb aam push mov cwtl mov dec add shlb (bad) mov mov aam add aad mov sahf adc stos cmp lea add xor in shl jnp (bad) (bad) xchg fcompl nop rcrb les push cmp xlat xchg fs aam mov cmp cltd push jl insb push mov or jg shrb add pop or xor xchg popa sbb lea adc aaa (bad) ljmp into adc push push out xchg push sarl cmp mov mov sbb and fs adc xchg mov nop cli sub pop loope aad call xchg dec call pop mov or xlat repnz nop icebp inc pushf push adc or negl mov lock or cmpsl aam mov sar test mov lret iret and pop loope lock les mov mov mov inc hlt js rorb pusha cmp mov subl dec invd lahf lds popa jp xchg add sarb xchg fild mov and gs imul orb stc push imul adc jns stc (bad) scas lock fwait mov inc push or test xchg xchg jge inc fcoms and insl iret mov hlt or mov sbbb sahf push test aam std fmul xchg unpcklps fdivr jnp mov mov or mov xchg mov mov movsl ret ljmp mov psubb add sbb pop mov add popf push repz movsb (bad) xor sub push jmp rclb loopne mov push or push jecxz mov pop pop push ss mov loop adc clc xor enter sub mov popa js inc and push pushf mov movsb push add lods push mov shl mov lods lahf adc lcall call ljmp adc sub sar leave mov push or dec sub dec test pop jbe mov or push and loope pop inc adc fstl neg inc icebp add insl inc xchg add lods pop test pop push loopne inc inc xchg stc hlt shlb add pop lods loopne sbb adcb fs cltd xor or cmpsl orl inc pop orl (bad) rclb sub adcb or ja cmp add popa sbb faddl mov aas mov xor outsb clc dec push notb enter in rorb inc adc xchg or (bad) call lcall test sub lahf rolb sbb cli cmp cmp xchg fiaddl shll out loop inc clc nop fcomp inc shlb cwtl dec addr16 hlt popl mov daa js pushf fmull loope in push (bad) lock push es nop sub repz and pop mov fisttpl test (bad) dec mov jbe push cmp mov mov adc gs xor bound jnp adc hlt insb (bad) xor fnstenv or pop jne jg icebp xor les leave inc mov lods cmp push out add popf xchg in mov cmpsl sbb inc out mov pop fstpt dec dec outsl sarb push les cli loope mov daa sbb add (bad) xor jmp icebp idiv add stos fldl jns imull movsb mov mov pop arpl lock add movsb cmpsb push rcl fucom xor pop sub adcl inc in xchg push out lcall subl push xor mov xchg jo popa add mov les lcall (bad) imulb sahf pop push mov lds add pop xor lock push js add push adc mov inc or mov push pop add inc test cmp mov (bad) sub out dec push mov sbb push rolb add adc sub adc adc or or sahf clc xor mov stos and lahf and imul out add sbb icebp adc jle add into xchg add add movsl sub nop nop xchg adcb add mov bound outsb decb inc jns (bad) rorl roll xchg mov bound mov mov push fidiv mov cwtl mov cmp push mov inc and lea sub xchg mov movsl dec or lcall cwtl or push mov addl inc push jg pop ret pop xchg loopne pop cmp jne sbb push mov mov loopne jle xchg mov (bad) pop sbb jbe push popa sahf add notl xchg mov push push outsl jns push hlt dec mov ds cmp sub or adc enter add (bad) sub or and mov mov fsubrl or or and jle aam cmp (bad) pusha sbb lahf nop ret cmp cmp mov fwait popa sbb test cmp lahf push xor insb and sbb ljmpw and cmp sbb movsl pop int3 loopne sub jne cmp mov jo,pt push les pop add push test mov mov cwtl mov adc jb push out jg push add fwait mov insb or aam mov inc and cmp lret add and or je lea xor sbb jecxz stc push rcl or jns ss loopne sbb clc xchg push adc in stc sbb mov push adc add loopne movsb cmp ret or inc popa cwtl xchg movsb xchg sub cli jg mov aas push leave movsb xchg xor mov add pop mov test or mov lods movsb lock add outsl inc add sbb sbb lea stc outsb mov mov outsl mov pushf add hlt pop sti je jo push cmp add and add cmp rclb push xlat cmp xchg jle loopne divb xchg add dec add mov jecxz lret cwtl or jae inc mov mov cmpl jl sbb inc jl (bad) je sub dec test ds test stc push test adc push and out je loopne push push add inc stc imul and in adc push cli xchg mov add scas jne jb fwait (bad) add dec es dec mov mov or movsb adcl lds dec out add xchg xor test es fmull sub (bad) xor rorb pop mov sbb gs or mov or mov fwait push pop cmc inc test jo fadds push aam mov add insl ret adc enter mov jne int3 add jmp loopne push rclb mov rolb ror test imul ljmp inc sub dec inc js pop shrl mov mov push pusha mov rorb out inc lods adc nop or lock sub lcall insl xchg add cmp mov (bad) push or jmp or iret or sbb add jg or stc sub mov inc into mov and add js or dec hlt pop fidivl jecxz mov call sahf sub lcall adc in inc cmp pop into mov push push ljmp sub dec and shrl mov sbb stc xor ja inc pop jb push pop xor fldcw clc lahf push es lods inc mov jle push inc xor adc int add or sub xchg dec fdiv xchg cmp repz push adc cld jle mov push movsb test jmp lds push mov lods add loopne rcll xor sub mov xchg push std adc cld sbb scas leave or (bad) negl dec out test xchg pusha shrb add pop cs movsb xchg cmp out jo fisub or inc sbb pop add xchg fidiv faddl fwait mov jmp inc icebp push sub outsb add pop lret sarb push adc leave mov ds pop je mov insb adc add or cmpb xchg (bad) jo and adc call sbb ret loopne jo sbb inc push mov sarl mov mov and shll rcl dec inc add stc (bad) xchg mov inc aas clc fidivr cmp push sbb loopne jle and je adc mov and push movsb movsb enter and jmp rcrl movl dec mov mov mov add push je loop,pt enter add out mov and jnp sbb xchg xlat call mov jge inc test outsl xchg adc xor sahf daa jge or jecxz and ret sbb xchg add lock clc and fs cld pop (bad) in dec jo mov or mov dec clc mov sbb adc add loopne pusha mov scas cmp out add mov or fwait shrl stc push and mov sbb mov cld mov bound and inc ficompl enter popf js inc pop xor jne ja push xchg fs cmp daa sub dec subb addl rolb out push lahf sbb inc add ljmp jb mov add fld les clc rcll out add push sub mov out add lret or cmc mov adc cmp out and andl ds mov xchg add stos roll call in pop adc sub pop lcall adc (bad) repz xchg dec add insb or cli pop and fwait test and mov jbe cltd cs rorb test or and sub push mov scas loope adcl sbb aaa mov mov rclb fldl or mov sub add adc jecxz inc and push jl or pushf mov orl inc int dec cmp dec aam xchg sahf sub inc rorb jp out stc dec mov push out dec mov add ja cwtl enter rorl fsubrl pop mov mov cmp inc loope and nop lahf mov sbb mov adc inc push push pushf inc push jecxz shrb ss sub int (bad) mov jp jo loope lds shlb add aaa xchg fcmovnb dec fwait lcall xchg inc add ret add mov xlat pop inc or (bad) aad inc in stc int3 mov add push jne xchg rcrb fdivl dec add shl dec and pop dec or sbb add xchg lcall or and inc add mov out sub test mov jo hlt dec push or daa pop pop xor push xchg movsb lods add pop movl pusha orb add xchg mov into fst nop adc enter dec sahf add or andb inc add mov loopne lcall inc rorb dec test xor xor lret lock mov add jbe add fwait mov mov cwtl lea jbe movsb loopne or imul sti and mov fs call insb push add hlt daa aam jp xchg inc add push inc adc mov jo bound adc and sbb dec cmp push jae es adc and mov jns add pop popa pop lea xor push and outsl rorb dec rcll fsub es inc aam xor test test popa lods inc cmp lock and xchg fimull sbb lods or scas xchg (bad) (bad) loopne adcb js mov into enter push and and and (bad) popa jnp add xchg inc lock js xchg mov flds push sbb jle push xlat dec push out and cld adc adc mov insb cmp dec add adc mov call sub sbb inc and mov cmp push aam mov js or orl rolb add (bad) mov into or enter add lods xchg add jns or push or sbb test mov je and mov mov movsb subl je (bad) in mov pop imul notb loopne xchg cmp adc add adc stc mov adc and pop mov add and andl or stc imul or int3 inc les add out inc xchg push cmp insl mov mov loopne pop push aam push mov arpl push lret scas sbb jnp mov popa lods loopne test xchg push call push adcb ja mov and push fdivl sub in in or ret jnp popf add push adc sahf and sbb and and divb push jb add roll lds int in stc xchg test mov hlt data16 sti enter ljmp cmp loopne stos jle adc (bad) mov add cmpsb sub inc add mov sub add mov pusha xor movsl and dec enter or jae add sar orb std adc test cmpsl sbb inc and nop or fcomps ja jno push xor xchg cli jmp shrl inc rorb pop adc mov mov out pusha in cmpsb xchg les shrl cmp lods inc cltd or lahf add aad mov mov out addr16 push mov lret std scas pop ss xchg or popl sbbl or mov jne js adc shlb sub test fstpl adc cwtl push xchg (bad) adc movsl fdivs dec jne fildl pusha ljmp rclb push mov inc pop sub push (bad) pop cmpsb dec test std add orl inc push into inc cwtl in ret ret pop bound js inc push fcomi dec xchg add lods (bad) (bad) lds lret stc or inc mov mov stos jae inc mov add loope cmp lahf mov bound or les mov push adc pop push je cli stos dec or je int3 xor adc add add loopne xchg test mov mov cmp movsb mov jmp insb add dec mov scas mov mov pop jg repnz jl push (bad) (bad) stos rol or pop fdivr push repz cmp dec dec push or inc inc popa jno rclb add dec push insb inc idiv cmp ret aas mov cmc xchg nop pushf cwtl js xchg test sbb push inc pop mov loopne adc mov jo sbb and dec rcrl push je or test mov ret inc in pop subl mov mov and cld add sub adc pop cmp imul dec mov or popa jno rorl xor or mov xchg add sbb inc and and cmp xor insl add cmp sub adc shrb jb xchg push adc dec xor aad cmpb insb sbb popa add rcll push xchg cli mov dec mov test loopne push push push mov inc loop dec int3 push sbb inc mov fistp add insl sahf xor cwtl movsb adc xchg cmp aaa fldenv jnp sbb orb mov out int3 rcll xor xchg mov mov push jg and jbe sbb add lock lcall cmp cmp int push (bad) jno fmuls dec pusha lahf and scas mov add jb incb xor std xor int xor xchg xor add inc push mov addr16 and cmp das cmp push cmc imul mov nop loopne inc push dec sub xor jecxz mov js movsb push sub xchg fstp jp mov ret add xlat push lahf xor mov jo mov inc mov (bad) jecxz xor popa and inc add fnstenv outsl data16 xchg sub push cld xchg aas inc cld add icebp mov add notl push test out mov cmp lret add shl arpl repnz sub mov or pusha cmp sbb xchg mov inc das mov orl jns les fidivr sbb or shrb or push es mov in sar inc cmpsb pop add mov or add xor dec test (bad) add ret add xchg add sbb ret add mov add iret xlat push in jnp lock insl je xor jp add out fsubrl sub jae add or and and ret jae arpl loopne fs sub mov sub sbb andb and test push sti lods ja loopne sbb fld xor jmp mov push ret mov and xchg clc xor and mov jnp (bad) in or or pop or cld cltd out xchg test test repnz adc jp dec add inc inc xchg sub aas mov testb add add inc add rolb mov cld and push repnz and add ja pop in cmp sub cmc jmp js xor enter push fstpl cmc ret ja mov cmp xchg or in lret idivb add enter sbb aam imul jae mov add xor push pop pop ror das add cltd sbb sahf push daa sub mov adc adc push jecxz fs orb inc add sub mov les (bad) or fild or sub int3 sbb push sub add xchg pop rcrl popa adc (bad) loopne push xlat or sar push sbb pop (bad) mov mov sbb mov add lea test or or sub out vmovaps imul nop rorl xchg jo lock hlt out loop in dec push and add mov mov mov xor mov mov adcl adc sbb leave mov fcomps popa add jmp mov sub in push lret adc mov sbb or dec test orl mov jl add xlat xchg push fildl cmp inc int3 popf lea mov pusha xchg or pop jmp clc (bad) xchg adc xchg or mov adc inc xor xchg cmp popf xchg cmpsb mov notb stc and add notl clc stc sub lds add and add popf pushf mov or or std addr16 orb cltd lods and sbb loope jnp mov sub pushw and inc mov js pusha jno mov lods mov rclb and cwtl repz jbe loopne mov sub addr16 test decl movsb sbb in xchg mov rcrb cld movsl xchg fmuls add cwtl lods inc loopne fsubrs adc mov cmp mov lods movsb xchg and cld data16 int stos lea into fwait iret xchg arpl mov inc mov lret push add inc repnz cwtl shrb xor xor inc push rorl add (bad) ja das orl push es mov mov xchg gs in jb nop or push mov (bad) or sbb mov push icebp xor xchg xor jmp or or roll aaa pop loop cwtl mov enter jl pop dec int sbb test mov stc lds ja inc xor addr16 in incl or fprem bound pop jae jl mov (bad) clc aam xor sbb sbb flds (bad) mov addr16 arpl cwtl push cld dec (bad) jmp popf test test push in aaa add sub int inc arpl xor pop mov pusha cwtl idivb int popa outsb adc dec xlat insb pop (bad) fwait ljmp push add cmp cmc fiadd pop cmp jecxz jae int3 add push xchg popf ss sub push lock sbb sbb cltd inc push movsb xchg notl mov (bad) js mov fisttp ret aaa cmpsl call dec daa lock sbb in enter js jg sbb or sub mov int3 or push mov out sub andb cmp out dec cli aad movsl addr16 jle add insb cld out out fs (bad) xor pop rcrb loope push icebp in nop cmp sbb xor aaa add inc leave mov nop lds push xchg rcr arpl push mov push inc adcb mov out test jae pushf sbb inc mov or shlb test sub xor add (bad) fcmovne in addb ret adc cmp nop add cmpsb fstps jnp ret in iret cmp daa jg std xor dec cmp mov lods stos add cmp nop adc dec shrb je daa adc xor testl adc lods rcr sub xor push mov cmpsl add dec or mov dec cld fadd add stos rcl mov out xor adc add sbb rclb sub add jo pandn xchg insb sbb adc sub inc jl lods sbb inc add mov (bad) loop call ljmp scas (bad) xchg cwtl and out (bad) sbb cmpsl int3 repnz lret pusha and pop pop mov dec stc scas inc jno sbb fucom adc adc cmp dec inc xor dec jmp push xchg lret add dec mov cmp xor lods dec sbb xor jmp hlt cwtl jo adc xchg or sub cwtl push jbe bound and inc mov in mov mov push inc clc pop scas in dec arpl mov mov push jne sahf mov add loopne icebp and fisttpll rorl or sub (bad) mov xchg test xchg popa (bad) mov xor enter add dec add (bad) xor push push loop pop (bad) add or push mov out ss inc and shr (bad) fs in dec dec adc xchg dec cwtl sbb sub into sub loopne dec dec jge icebp or out or and scas es testl or stos mov jmp rolb (bad) xchg sbb out loopne adc add inc sbb (bad) jae clc es jo cs mov pop adc hlt rol cwtl jl cld nop inc adc xchg cmp orb fs popa or dec stc leave cmc add adc mov sbb xor or insl roll or inc adc inc xor (bad) and mov sub lahf xchg in xchg clc sahf test (bad) hlt inc adc lods movb nop add decb je rorb aas loopne push jmp lea mov inc ja stos aaa sbb adc pop jmp mov xchg mov inc rol and xlat mov test nop inc jo je add lret or mov or cmpsl scas lods mov mov stos jo lock rol js test or pop sub leave sbb and je cmp xchg add inc adc js outsl inc xchg icebp test and and cmp in rorb scas cmpsl cmp clc dec test imul movb xor add imul (bad) pusha push leave call xor and add je mov lods pop pop inc dec jo loop mov jno adc add leave push add jno (bad) mov outsb aad add or xor sub adc pop xchg inc sbb sub loopne jmp mov push enter xor jo sti mov lea push pushf sub mov lret fldl xlat dec imul lods xchg gs xchg dec pop or lock cwtl or stc adc xchg push roll shlb call xchg push jbe add sub imul xor call stc or repnz inc mov add jg and aas mov jbe cmp and cli nop add ljmp cmp cmpsl and lods jns cmp pop orl js sub pop clc mov or pushl mov add sti sahf jo fprem outsb pop mov rcl ja sub je lods add nop add popf test (bad) (bad) sbb and scas adc popa dec andb loop xchg (bad) sbb ds stos cmp jmp mov lea lods sub cmp or jo movups clc or mov mov sbb adc subb jnp cmpsl push mov xchg jmp sbb fsubs add frstor push in mov insb sub jbe pop pop lods dec in and repnz loop (bad) adc dec push rolb cmpsl scas popa jl fucom push (bad) mov dec sbb jmp and cli jl dec push gs pop fdivl fnstcw and jno xchg shrb jb jle pusha (bad) adc xor xor lock bound stos pop or and repnz xchg add cltd mov data16 or sub mov or inc cmp cmp icebp jbe mov (bad) pop addl cld adc les fdivs jmp arpl sub out add ror shrl cmpl call loope fwait or fisttpl and push sbb ljmp aam ret flds or nop hlt daa add mov mov or inc stos (bad) mov outsb mov fldl xchg mov push or stos inc add jnp notb adcb jl pop adc pop and cmp add jp jg outsb jns push jno je sbb xor cmpsl pop cmp push les pop (bad) dec call add loopne arpl mov mov jge cmp pop pop pushf (bad) push and sbb sub andl call (bad) lock movsb cmpsb jl add rorl mov shr add adc lds mov pop sub outsl sbb ja xor mov hlt stos je xor add test lods pusha hlt cmp call xchg mov push adc test pop rcrb and faddl mov inc lea nop test int3 cmc dec aas cmp aad mov jp inc icebp jp inc pop or test mov scas lods imul mov and push xchg faddl nop in js shlb push xchg and mov mov flds add jl,pn aam xor aam sbbb call mov std repz add xchg and fisttp add or sbb int3 ret sub insb sbb rolb or xorb movsl xor mov push iret (bad) nop stc rcr sbb mov out pop iret mov mov lahf mov push or mov in scas pop or xlat vmovss adc bsf test cmp iret add test fistpll ja pop clc add insb fs xor pop adc push aam repnz push repnz push aaa cmp lods adc lret add dec adc test push push mov lcall pop xor jmp int3 dec jg add fcmovb and lods cmpsb or cltd bound xor sub push mov sub mov enter add test hlt jmp mov lsl mov add push pop push mov adc cld adc fmul test fsin add (bad) fistpl orl adc or inc add sbb loope mov jne iret (bad) mov stc push test dec add inc dec nop adc fild adc lods xchg test ret ljmp xchg idivb cmp push sub cli sub pushl fs sub ret inc arpl xchg enter xorb and scas fadd dec mov cli jl loopne jge mov pop test nop cs sub mov test lods insb dec out xchg jo jp lahf adc push adc nop iret mov lds std loopne mov xor js dec mov shll add add enter xchg in cmp enter in outsl push and jno movsb pop cmc int3 sbb xor sbb in xchg xor dec lock push es mov jp xor cwtl jo test push push cmp sub add in fstpt pushf sub imul dec mov push lock sbb andl (bad) dec sub jae sub xchg add jp mov sub add daa lock and jno pop cmp fwait mov les adc mov jae leave push or loopne fwait les pushf fbstp nop inc sbb or lret cmp adc add ret sub aam xchg fstps out xor (bad) rolb xchg mov lret and lods add add fs loope sbb hlt add xlat xchg pop mov fsts jae sbb out xor mov lds jne dec pusha sub pop add dec fimul mov cmp xchg notl mov int inc aam push repnz dec bound mov mov jns push sbb cwtl cmp arpl mov push or add or rclb outsb cmp hlt (bad) in cld scas inc cmp xchg cmp lahf inc mov (bad) nop imul push push jmp pop add adc in xchg in addr16 test dec mov in scas cwtl sub and jge push out push adc and enter add mov sbb std add inc add xchg ret icebp jb sbb pop cmpsl sub or icebp add sbb mov mov test mov jno divb pop jp,pt sub sbb sbb adc (bad) or rcrb int sub les faddl add mov push ljmp cwtl or adc cmp fadds adc lret and pop mov in nop cld sbb mov push adc mov cmc add lods sub inc xchg test and adc pop xchg pop (bad) add loopne in xchg jle sub jno push xor xchg out jge adc mov icebp fdivl sahf wrmsr jg in xchg mov insl xchg xor pusha fdivs xchg ret inc loopne call sahf mov xchg dec sbb stos daa fcoms sub pop xchg pop stc es sub fcoms push mull faddl pusha inc adc jmp fdivrs sbb das loope repnz sbb sbb or jp add jmp pushl jb mov pusha mov imul jne pop and sub pop or xchg stc pop fistp mov and jg and (bad) cwtl push stc mov add (bad) pop cmpsb lock push divl or sub stos inc ljmp aad shll mov mov fistp xor mov dec sub pop fsubrs adc in and outsb pop mov jo dec xor push jbe cmpsb add mov xor inc adc mov rclb cwtl (bad) pop loope andb add fs mov mov out lods adc cwtl add lods pop jo xchg and push test cmp dec (bad) aam fistpll mov pop das inc xchg and ds dec clc nop lock data16 mov xor xor push adc mov inc xor add push and lods xor push cmp or add in addr16 mov lret lea and add jge test mov cmp pop or inc add (bad) out in and aaa dec mov das rol cmp xchg sbb das jle sbb mov (bad) xchg fsubrs add adc mov adc sbb xlat js mov jp call dec add inc sbb orl loope repnz rorb fwait add sub mov mov xchg xchg cmp inc setno push call jno mov or cmpsb lods inc jns mov mov xchg cmpsl dec test xchg into popa cmp out mov or mov call loopne popf les jo test popa mov jno (bad) in dec in inc icebp jns inc int push andb flds adc or inc sbb mov sub xchg mov dec adc pop test rolb dec sarb mov adc dec aas fwait mov and loopne pop das mov jge in jmp dec lock mov and mov xchg stc cmp ret pop hlt fisubl mov andb sahf xor add ret std ja cmpl dec insb iret add cmp andb mov pop mov insl in sbb in call bound or xor adc push pop and xchg (bad) in pop dec mov mov jb orb jns in cmpsb sub insb push inc inc mov inc jo aam inc inc pop enter jle sbb fwait shll or xchg push dec stc lea lds and xor sub jo fdivrs mov lcall pusha pop xor or add fidivl mov cltd rorb add mov pop mov mov mov aad pop mov xor fiadd hlt jb or dec cmp outsb out or mov mov mov mov or imul lods xor nop loop pop or fdivrl mov xchg (bad) pop (bad) push sub inc mov and push mov sub fs jg push loopne fmul or mov stc pop lahf xchg add or pop mov into or add les add pmuludq int3 dec inc mov lcall faddl in cwtl aaa outsl sub je out cld sbb loop outsb subl test popa cmp hlt nop mov adc xor mov sbb xchg jg add pop lret dec dec rolb mov push xchg int3 cld std lds in add aad sbb mov popa out push mov dec loopne add in insb mov xchg jns push inc mov mov sbb cmp test and push daa or lock sbb jge ds test xor xchg mov aas xor nop icebp in inc fdivl fisttpl add mov xchg aam lcall cmp mov cwtl xor cmpb incl das add orl and mov add add cld lret mov add pop inc test mov pop mov cmp push fisubr push das adc cmp enter (bad) jo fadds lods (bad) sub stos dec mov and adc add add repnz adc jo cmp in subb push or clc arpl imul push jmp std mov loopne push mov andl les (bad) mov xor call inc bound mov pop mov jl pop clc fsubl and push je inc adc fildll andl add fstpl mov xchg jns xchg loopne and sbb subb xchg push nop pop mov cmc cmp es push or (bad) adc mov ja cmp or cmpl xor adc adcb mov jmp dec sarb (bad) jg cs fisttpl in scas or push jge push mov add sbb addl outsb dec push xor movsl subb cmp sti mov xor add insl xchg jge outsb and adc mov addl or and lds xor pusha iret sarb je cmpsl or lods es inc inc lods movsl lahf or add sbb pushf pop addr16 decl sub xor js mov lods popa or lods xor pop xchg dec enter or add push mov mov sub or sbb cmp push mov test sbb jbe les (bad) cmpsl xor mov and arpl and and pop mov cmp mov pop mov int3 rcrl in popa and push add fldenv sbb rorb cmpsl lea stos and cmpb ds in adc xor call sbb adcb cmp test and mov cmp or int mov jmp loopne and nop inc lds lret push jp adc push sbb sub bound fcoms or pop push adc and andb jecxz movsl sbbl pusha add mov addl fcoms mov and sbb xchg (bad) xor sub fldl add xchg or cwtl arpl sub and or and sbb mov jnp ja dec cmp les add in adc fs clc sbb stos xor dec into add jno xor pop and stos js mov cmpsl pushf pushf outsl xchg enter int and add jo lcall call cmp mov les sbb adc rol fldcw mov add mov je inc aas (bad) mov and xor mov icebp lea enter sbb mov sub call mov aaa mov add cld inc scas add pushf mov push aad push push fsubr add fcmove jns dec cs adc xor (bad) lock add adc dec call xor cmc push mov sbb in mov les mov rorb xor lods sub das mov pop (bad) insb add lret js cmp pop pop aad rclb daa pop or mov data16 gs into sub clc lds fdivs adc push and and pusha and nop xor mov pop jmp xchg mov lods shrl popa sub fcoml push cmp sbb ret add daa rclb or mov aam cmpsb xor or repnz shrb sub incl cwtl xchg xlat adcb (bad) fldl repnz push (bad) leave cmp hlt test sub rorl pop mov and (bad) loopne shrb aad jbe mov cwtl daa fldcw push dec sub xor lods lds or xor repnz jo push sub mov add xor aam cmpb ljmp loopne (bad) ds test movsb aas cmc cltd lods loop push pop loopne cmp (bad) cli mov add push (bad) mov mov movsb shlb inc mov mov and sbbb shrl std xchg add sahf sbb mov es test inc call insl leave cmp add pushf or push mov movsb dec mov mov jns daa sbb push or or aam add out lock in xchg mov xor cmp rorl je rclb adc popa mov push fadd dec imul loopne jp rol inc sbb cmp lods push imul sub mov dec int add stc ror xchg dec lret fdivs pop cmp (bad) dec pop insb test dec mov add andl jl jne sub mov outsl sub shr sbb inc push in lods xchg pop call push scas pop cmp sbb mov jne or pop xchg (bad) xchg arpl mov test add pusha mov inc xlat and test pop cld out xchg ds out pusha xchg mov adc sub inc and std fcmovbe add lret scas imul loopne mov add mov arpl repnz sbb dec add out sbb mov minps jne jo ja add xchg das and adc add daa clc cli mov (bad) repnz loopne (bad) test faddl sbb cld sbb xlat adc dec jp testl adc sbb pop outsl adc xor or xchg jo loope repz jo in mov popf and pop cmpb adc js mov sbb push or dec ret xchg inc or dec dec push movsb push push hlt jae js xor push repnz popf enter sub (bad) fmull xchg je test aas or dec dec cmp jecxz leave movq jp and xorl rclb dec xchg mov mov scas cmp in out js out xchg add add ds sbb xor dec dec sub rorl arpl out add adc push xor int cwtl iret xchg rclb xchg test ss and int3 mov mov hlt sub ret adc inc shr xchg sbb adc add xor add and and adc in lcall jp adc push sub les icebp mov pop nop xchg mov inc sbb orb aad xor add jns and lods add push leave cs adc sbb test adc or xchg cmc sub mov push mov lcall loop je test ficompl loop out or xchg ja cmp jmp inc ljmp call pop xchg lods adc lret mov sbb push mov mov push xor adc adc add cmc dec push mov insb dec or aam mov lahf movsb mov adc push lods inc pinsrw and cmp dec stos push lcall fwait mov fsub push add xchg into leave mov mov sub lea add push sbb loopne sub or or mov pop xor push mov and popa dec and rcl in cmp push push mov fiaddl dec xchg clc lods or jp rorl ja aam sub mov push xchg insl xchg push bound ret hlt add xor sub push mov or and les repnz test inc pop dec ret xchg (bad) jno notl imul sub xchg movsb jb jo shrl test xchg or xor mov pusha jno movsl pop icebp mov dec jp and or sbb outsb xchg sub cmp pop sub jg cmp add xor nop int3 push lahf mov shl (bad) dec push push inc dec psrld inc adc cmp mov cltd mov std and adc sub jno add arpl or add in lahf or je test mov ret fmuls jnp orl (bad) out cmp stos push or cwtl dec jbe rorb inc fimull add in xchg sarl add outsl dec xor mov sub bound jge cs mov dec mov fldenv je cs dec sub and nop adc cwtl mov dec inc mov add adc lock out xchg test xor inc and jnp (bad) or dec hlt mov movsb or in xor jecxz lret mov jbe shl add add sbb mov outsb rclb pusha pop imul or sub push or dec push inc arpl mov lret inc mov and cmp and xchg loope jo fisub or inc ljmp and jl test dec loop add mov test mov inc movsb shlb lret sbb inc sbb pop push lock insb pop inc sbb adcl leave adcb out sbb or fsub and cld mov adc sbb pop or sbbb mov push jmp xor cwtl sub gs cli ret cmp imul ss cwtl cwtl mov mov and jge imul (bad) int3 pop pushf out adc mov xchg or mov loope inc int dec fisttpl xchg push dec fs orb jne (bad) push gs mov dec inc dec std test insl jp sbb pop jb popf add out pop fadds lea or xor sub xchg or cwtl rorl fdivrl ja mov jno and daa pop xchg inc inc sbb dec iret fs fmuls test add or pop or (bad) adc adc in adc xchg add pop lds scas adc adc jo lods jg sbb mov xchg (bad) jo jp jo cmp sbb int3 adc xchg mov cmp (bad) enter bound nop or pop es pinsrw in decb add mov mov in add mov in int3 pop xor dec push in inc jmp cltd orb or dec mov mov maxps js test out int3 add dec add in cmpsl dec pop jb je push or sbb sbb ror add lods pusha pop xor mov aad xchg popl cltd inc lahf in add add or in adc adc add insb repnz in inc xchg test mov nop adc add fwait jmp cmp (bad) sti cmp inc lock dec aaa inc (bad) mov push aam pusha lret or or push sbb adc pop mov ficomp fs in leave sub lock mov dec dec and icebp pop xor roll sub mov sarb mov pop push cmp xor loopne out cwtl cmp push (bad) mov inc enter and jp add sub jae cs repnz pop cmc jmp adc pusha stos lret in sahf mov or loopne je sub inc call xlat sarl rclb xor fsts add or fdivrs stos push testl adc inc js fs inc add fcomps cwtl lea sub jno test outsb push inc adc pop push mov fsubrs cmpl and pusha dec or (bad) mov adc mov nop adc adc xchg mov aas jg pop dec cmp and insb mov out xchg pop test mov bnd and dec pushf cmp inc mov adc or xchg (bad) mov aam and or test loop mov cwtl and popf inc push shl inc movsb mov lods mov shll xchg jne sahf inc and ss mov pop sbb rorb stos xchg and dec mov and push push faddl clc xchg repz iret adc out mov xchg lock movsb je adc addr16 xor inc fs daa sub call pop les cltd std adc (bad) xchg jns adc mov add cmp and hlt add loopne mov sub aam adc mov inc stos xchg cmp pop and push rcrl pop jb cwtl mov or movsb loop,pn xor or push mov add push lcall insb inc loopne sub adc loope jbe add mov inc push hlt aas dec hlt lcall adc push xchg lds dec in and cmpsl enter jp (bad) lods imul daa xchg loop adc data16 push lock and out adc and pop inc push push push xor and comiss pusha sub lea lahf (bad) iret inc sub popa fsubrs sbb aam push adcb pop out je dec shll and pop jecxz rorb loope add cld lcall fs add and loope inc jl inc add (bad) add lcall push dec loop adc enter pop adc add and (bad) adc jecxz popf push cmp (bad) mov addb out bound xor popa in and jl mov mov inc sarl test pop pop sub or aad inc bound mov add add cwtl scas xchg sub aaa mov push lods xor fs inc xchg (bad) xchg shrb scas out dec movsb ss outsl sbb or xchg xor fnsave cwtl aaa (bad) pop aas mov xchg mov popa cld daa stc lock mov xchg adc mov in sub lcall in clc daa mov push push push sub and les int3 out cwtl adc mov mov fsubs daa inc lock in in mov (bad) jne sub mov sub insb imul gs cmc lcall cmp cmp xchg aaa test inc data16 jns add sub cmp or insl jmp call xor sbb inc inc nop and adc hlt cmpsb or icebp cwtl pushf js,pn fcmovne fwait call and mov dec jg rorb mov out jo add dec out push jo add in inc or and pop aam orb mov enter lods lds push push mov je add repnz dec cltd rorb mov mov popf inc stos or addr16 push push les mov das ja (bad) leave call test sbb rolb rcrb nop add rclb pop stos dec cmpl fmuls pop cld mov cwtl lcall mov mov lds sti shrb push jb enter add or (bad) cmp inc repnz sub and test pop xor and sbb mov xchg and xchg add adc loopne lods pop out loope jo inc add das subb (bad) push or pop sub jns clc movsl jle movmskps or adc adc cmp mov add loope pop add jle or nop lock stos das jecxz cmpsb rcrb lods loope daa pop insl pushaw xor (bad) adc adc pop jmp rol cld push add mov js clc mov adc and inc leave dec lods pop xor insb add dec push xor adc push repnz xchg inc enter inc cltd iret adc pop lock mov nop clc sub test jp cmp gs movsl sbb push bnd sar xchg or gs and movb pop xchg enter fwait add cmp cmp mov clc push or hlt in pop js mov bound lods int3 pusha pop xchg in inc mov dec ja stos and std rcrl push add leave dec imul enter rolb add stos int3 mov movsb cwtl mov sub cwtl xor xchg inc jb xchg pusha dec xchg jmp lods int3 dec insb jno adc jecxz add pushf in push lcall inc add pop aad jo jmp cli sbb jmp leave pop mov movsb sub lret sbb aas dec xchg gs mov mov repz outsb dec outsl xorl and repnz cmp pop enter mov jno xor icebp mov adc push mov fisubl add pusha add push mov in in and arpl adcl ds add nop mov idivl cmp scas xchg add and inc push fisub lock (bad) and lret jp mov in std xor loopne rorb xor dec mov lock inc sbb jmp pop fsts adc add adc xlat and sub xorb popf dec pop fstp push add add adc mov or mov clc or add xor pop push aaa sub lahf roll jns add daa inc pop xchg pop insb data16 popf jge xor jb mov cmp cli push dec sbbb jp add in or dec popf dec add and (bad) adc clc add shlb ja mov ljmp push and inc jmp bound xor loopne inc clc inc movsb aam lods mov sub in jle in dec sub jp add push fwait pop jmp gs pop pop dec adc add mov inc sub dec add js cmp (bad) adc stos xchg xor push cld adc cs in add xchg jl adc xor mov pop jp and cld or cmpsb pusha in icebp sub std mov mov aad sub mov and xchg xor js adc loope mov cmp mov fs adc lea xor imulb arpl lock pusha lahf adc cmp sbb and ret pop and out scas fwait loopne and inc push cmp push mov out les jb add add sbb xchg bound jno pop push jnp dec pop and add pop cwtl adc lods inc cmp call mov cld mov les or or sahf lods sbb pop and gs jae xor and or in arpl adc test (bad) inc cmc (bad) mov dec lods inc adc cmp add cli ss std adc adc mov add sbb jb jl xchg add pusha cmp mov pop jg stc bound pop dec out lock xchg jl add call jne push mov cmovl xor xchg sbb sahf pop cmpsl mov lahf add cmp sub or xor or fstp pusha lock dec or mov pushf into add cmp aas mov and bound pusha dec ja inc (bad) adc and repnz sbb cmp out and sbb push mov fidivrl aad add mov add xor mov imul push negl loopne jo enter sub pop (bad) mov pop loopne add roll imul push enter and jecxz arpl (bad) xor stos in dec xchg pop outsl push push sub mov push lods push dec add jne dec dec xchg adc pop (bad) mov inc les push pusha mov pop in adc xchg and jg xor jmp pop adc or inc loop inc or andl dec or xchg js and sub sbb mov xor push fs cs push add icebp xor dec and add subl es or fidiv lods pop add scas je mov daa mov gs add test mulb popa data16 add pop call sub mov enter add or aad xchg stos and mov inc out inc mov movsl loopne cmp and lret mov repnz or cld sbbb lods pusha xchg jnp or xorl scas jl fdivrs mov popa int add add pop and movl inc (bad) jno lahf cmp nop fildl or ret cmp out mov imul add pop popf inc insb cmc pop fbld adc inc xchg hlt inc inc add dec jo lret cmp js fcomip adc pop dec add mov xchg (bad) xor and imul pop mov sbbb dec cmp inc dec xor inc test mov ss sahf push gs xchg mov or sti mov or and test push xor sub std inc sbb jp,pn cld mov add es stos add int add loopne or fwait adc add je andl mov jne fwait add rcrb sbb mov pop and (bad) fdivrs adcb pop xchg sbb mov (bad) das test cmp sbb add int3 std aam adc xor add or mov jne mov adcb push xchg xorl fcomp xor jp mov pop test add enter lods (bad) add sti imul inc adc in xchg es pusha enter inc rorb mov xchg dec (bad) ret add std mov add fs xorb frstor or ds ss lret mov arpl data16 push (bad) adc es cmp and sub mov mov dec sub fsubs leave mov inc clc dec (bad) and sbb mov fidivr and mov sbb pop add imul fs mov orb popa cwtl iret in add xchg popa dec or ss dec mov (bad) fldt push pop mov inc adc int cmp mul rorl cmpsb out aaa add scas jo adc mov test jbe pop andb repnz jge das scas pusha adc add mov iret insb mov add adc out psrlw mov xchg js faddl (bad) dec pop pop test mov ds jnp adc sub mov push jge test mov dec sbb mov stos push pop mov dec push (bad) xor add and cmp xor dec pop xchg fstpt sub js jecxz ret test clc dec inc popa aaa push push pop mov test cmpl movb jo sahf idivb and mov add xchg loopne jns sub push outsl push nop cmpb xchg xchg push mov add xchg scas mull cmp lret test xor mov testb roll mov xchg push sub fwait mov jg mov jno fadds pop test adcb stc cmpsl ljmp mov sbb ss cli rolb lds add xor sub add cltd ds int3 add stos and add ret into iret push xchg and scas sbb stc addr16 (bad) enter mov add andb daa dec into mov cmp jae fadds add mov inc adc aaa push xchg insb xchg loopne fstps arpl xorb adc (bad) pop push nop xchg add push mov nop popf xorb and or jmp add stc popf cmpsb jg mov cmp js (bad) add cwtl fbld pop pop iret jbe psrad add add and push clc repz pop add hlt xor jl std das add push andl addr16 push or and mov jg pop push loope cmp and icebp add lcall clc add mov add fisubrl xor aam mov enter gs fisttpll jl dec fmull xchg sarb and aas gs fsubr (bad) xchg dec lods and xor sub lods xor roll or mov xor rorb jl add (bad) push xchg arpl pop cld fldl mov stc dec mull jno xor sub ja clc cltd inc add sbb inc inc jle or push dec jg int3 ror add scas add cmp nop pop sub cmp add (bad) mov lock ja out or add jle xchg inc adc mov (bad) roll adc xor xchg loopne (bad) or fildl sbb pop in hlt cmp lcall mov aaa imul and cmp push shrb jbe and cmc sub push incl mov sbb nop je inc dec add and js jl add mov pop nop ss or mov sbb and lds outsl xlat xor mov adc aam inc and push inc bound in sbbl jle les mov fld or xor push add adc pop xchg fiadd add (bad) or dec sub sub xor adc mov int3 push inc mov stos scas push inc shrb mov add adc aaa iret add push lock ja cmp inc fiaddl cmpb loope cwtl cltd pusha pop mov outsl lahf xchg add div test loope jns pop mov stos fidivl cwtl in loopne add ret rcll mov in sub sub stos push scas popa add lret add aaa push add pusha mov add dec mov mov jae add add (bad) (bad) fild mov addr16 lahf js mov pusha and sub and add and xlat bound add movsb pusha es fstpl test xchg sar dec or and int3 into mov dec sysenter faddl cmc sub and pop and in sbb sbb (bad) adc bound xchg aam and add data16 xchg outsl mov mov icebp daa adc mov adc xchg in (bad) mov (bad) sbb or scas sub stc or (bad) xor add mov rcr mov and out addl sub stc mov lock push mov (bad) repnz rcrb cmp mov add sbb cs movsb popl adc sbb add ss movsb add jmp mov int3 xor loop inc data16 movsb dec nop (bad) xor mov hlt cwtl adc add xchg push pop add das mov pop push js add outsl popf fstl cmp xchg notb call push sub lock loopne shrl mov add nop jl aam lcall pushf lret cwtl lods mov cmp bound clc cmp cmpsb imulb inc jno inc pop lods add lcall fs popa hlt pop pop sbb mov nop in mov adc jecxz mov push pushf idivl loop add dec pop int cmp sub sub movsb add mov stc int fisubl cwtl add inc and jne shrl shrl xchg cmp jns or sbbl push xchg (bad) sub fnsave sub cld or push sbb push ret repnz mov fidiv and fcoms dec divl fcomi xchg mov into add xchg add xor sbb xchg pop xchg (bad) into fidiv mov movsb dec jl jg scas and jno add xor mov enter (bad) mov xor xchg add jo test nop add loop or jns add sub xor xchg fsts push repnz insl roll lea add mov (bad) pop push add mov inc cli into je jae add sub add add inc jg pop (bad) or cmpxchg jecxz pushf (bad) or push push subb hlt jle mov cmp mov lock subb add cld jg orb mov rclb and fiaddl or (bad) sub mov mov mov iret pushf arpl lock sbb mov xchg sbb popa push pop xchg add sahf cli lock std push mov sub mov jae dec jne adc loopne clc mov push sti insb add lods aad or mov scas orl loopne jmp fs push mov inc dec rol stc fbstp pusha ret mov test push adc stos or inc imul aad dec pushf and add push jg mov (bad) jae mov repz in cwtl mov pop push mull lds add data16 or add jg into in in add pusha testb (bad) sbb pusha lods sbb es enter aam sub or out mov add cmpsl xlat (bad) push jnp,pt add orb rorb inc pop mov inc int add jle add or clc pop cmp mov xlat fistpl lods and sbb (bad) stos dec iret lods add cmc sub lock je jns sti mov xor scas dec add dec popf sub pop mov test sahf out ja outsl aaa pusha ror push inc fnsave call and xchg inc jg out add mov call aaa push movsb sub add or mov bound inc test push or test pusha mov mov and insl cmpsb jo sbb pop loopne xor fld cs dec cmp nop jns jle xchg ja add inc push mov int3 or add fwait xor hlt cld test shll enter test or sbb and and clc or mov add lds add (bad) call add mov (bad) rcrb pop xchg mov add lds ds gs cmp inc mov mov or daa mov in and (bad) lods add ror pop jmp lahf dec aaa aam sbb add cmpsl scas push push jns shrl add cli jb mov xchg popf pop sub cwtl test repz or and lock pushf xor add rcrl add scas inc test push dec idivb dec adc outsl movaps dec clc and gs loop push roll out push iret mov add aad or push mov dec push psrld inc push add in je inc arpl pop aad jle add (bad) out sbb xchg lcall push inc jno sarb add push std jecxz outsl popf sbb inc cli sahf movsb loope stos popa (bad) mov js push push mov xchg or rcrl (bad) xchg clc add loope mov pop hlt mov push sub movsb and add xchg std jo lret inc mov pop mov hlt push jp pop jo fstps js (bad) jo testl je adc jge inc sub insb push or mov daa jo and andl add adc mov dec and pop icebp add push ja adc pop dec lods inc adc test push xchg pop add or inc orb out jne add inc mov xor pop sahf icebp out and aam js cld push and and adc sbb and outsl or cltd rclb jle pop xor adc and mov enter insl cmp fidivrl add lods adc cltd add (bad) mov or dec test addl pop (bad) add data16 cmp popf jnp pop add dec inc testl and data16 notl add test lretw jae push sub xor push ds inc xor mov scas ljmp mov mov add (bad) xchg dec adcb sbb repz pusha data16 pop inc cld roll cmpsl ja cmp test xorl mov loopne leave cmp sub add (bad) mov mov fdivl lret mov scas add jns sub pushf ja adc add and add sahf mov xchg (bad) (bad) pushf add addl mov hlt rcll js sub lret pop cmpsb add flds sarb lock int pop mov sub je or dec jg xorl jae add and ss dec insl mov push push fwait xchg pop mov outsb mov adc jp je fsts hlt or push lret adc sub cmp aad outsl mov mov test add shll mov jl push nop loope pop add dec push cmp mull cwtl cld dec pop pushf out dec fisttpll and inc movsl clc sbbb jae fistpl shrl and inc pop rolb mov xchg (bad) fs test sub push xchg es push mov jb mov movsl mov (bad) sub cmp aaa lret add mov push popf pop loopne bound xchg xor ret mov jns into fsubs addb insb cmp pusha and gs into (bad) lret lcall add pop jno ret movsb loopne pop push loope aas pop jle (bad) xchg xor push cmpxchg in sub adcl mov jl rol movsl cli pop pop sub jo pop mov sti cltd shrb dec sub stc adc sub fist xor and loop daa add ds jle add sbb push inc stos scas add add jns fldenvs add xor add loope stos aad dec push ds jnp data16 int3 pushf fldl sub inc and iret loop sahf roll dec xor aam insb add es notb hlt aad inc inc add push insb mov ds (bad) in xchg adc xadd in out lea and and arpl aam lock in popa jg adc fisubr jne sbb push add je,pn popa xchg sub jns add and mov pop sub out pop adc (bad) xchg push (bad) xor add das adc push push (bad) jmp insl jns add mov or fsubrl xchg xor cmp cmpsb mov (bad) movsl mov gs test rol mov and and mov add je xlat loopne mul adc aas mov (bad) loopne mov mov adc movsb add pop or push add mov loopne mov add mov (bad) cwtl pop jmp inc pop mov jmp push jo mov adc fild add xor jg cmp rol mov sti add sahf in rorb nop adc lock mov loope add aas loope mov rol and dec inc fldt xorb xchg rcrb sbb ret push xchg cmp pop jge (bad) jno sbb push lock or in push push adc push dec inc rclb xchg add loope push sbb add gs push sar sub push add jae adc adc dec fbld pop mov cmp or mov mov addb mov xchg xchg popa adc sub aas (bad) out jo push and cmp in sbb add push and psraw and (bad) push aam cmp mov adc js ret sub orb lock add mov or adc mov in or dec mov add pop mov fnstenv xchg dec cmp je and pop adcl jg shl out mov mov das add (bad) test rcrb nop jp mov inc sbbb add cwtl arpl adc mov push xor xchg loopne scas add lea or addl add outsl pop sub mov lea sub xor mov pop dec add mov lock jmp jns cmpb mov mov bound (bad) int3 ja jl outsb cltd xchg clc add or mov (bad) and dec or rolb xchg js imul dec dec jo push outsl mov and and push shrl fadd sub jo add mov dec pop pop (bad) (bad) xchg scas jg mov add (bad) jns cmp or mov or adc add xor repnz test push or lods fsubl movsb pop call add in cmp push pop xor pop (bad) in inc int shrl pop (bad) add jo xor push pop lock dec pop pop mov cmp arpl mov add movsl pushf fcompl pushf adc fnstsw daa stos dec leave pop (bad) and jmp out mov iret mov pop enter adc pop sub sbb add or nop outsl mov dec add and jo xchg rcrb test cld or inc or (bad) sub loope pop daa sbbb mov and and int push adc fsub andb (bad) and mov fcompl add push push add pushf test es xlat cmp xchg add inc pop push cmp enter push dec jno js add and sbb and xchg and inc mov fsubs or pop jne add sahf mov jle adc or xor and in dec and adc loope pushw add jmp push inc mov enter mov inc lods out mov pop fild incl test push sbb shr bound add repz cwtl aad push andl and fldenv int3 sbb mov or push pop jge pop ud2 dec das mov mov in fildll mov xor pusha les mov pop daa fcoms adc loopne adc cli add inc xchg xchg mov iret add and xor enter mov dec xchg and lea int3 rcl imul push lret fistpl inc xor cmp lahf xor pop arpl sub or rcr fcom mov mov mov shll or inc test popa inc in xorl push push cmp add and popf adc sub add mov loopne mov mov xor lds movsl dec lods mov mov sbb bnd es add int cmp cld cltd es add jns mov cmp inc push add stos and fcompl dec mov fsubrl jecxz pop push js adc pop add scas (bad) jb pushf dec popf add dec fsubs mov mov adc repnz (bad) add cltd pop jg add outsl aaa js inc repz xor mov push rcrb (bad) add popa js push add loop pop inc and and adc or (bad) vpsubd loopne ja xor scas data16 jae loop adc shl dec fsubrp roll inc xor rorb cwtl leave push add dec mov (bad) lods xor punpckhbw lret stc inc or popf sti and daa push mov jl sbb or clc mov mov fcoml inc jp (bad) mov jnp pop mov loop hlt jle test lret or rolb jb and cmp fmull push inc push aaa xlat sub pop stc loope push cmp xchg add pop cmc fdivrs push mov sub loopne ret and shrb stc daa les inc mov xor add shl aas push pusha xchg mov pop lahf add pop ret ds mov add add in and dec add inc les imul aam (bad) invd add mov cmpsl adc out mov aas xchg aaa push incl in pop jg rcrb mov xchg enter xchg sub (bad) adc idivb and fsqrt sbb push inc lods xchg outsl xlat sbb add loope jp cmpb xchg movsl dec cmp sbb jmp push mov inc int pop inc cwtl test fadds inc arpl hlt shrl cmpsl lea enter nop dec adc xor in lods sub or xor dec inc mov stos scas fs mov in lods insb roll lock fldcw mov add nop ja push and decl outsl xchg sub sub shll mov and add and mov test inc stos addb xchg push and jno add addb loopne inc dec jno add sahf scas push aam iret lods inc pusha add mov jmp pop mov or add js push push mov xor es adc shrl inc pushl inc mov cmp lds rcll ftst sti mov sub add xor cmp sub stos nop in mov mov fs add test add loopne imulb inc insb fs inc cmc arpl add mov cmp pop and nop aas into leave mov fildll js push int3 push xchg imul in xchg shlb pusha stos popa pop aas loopne add push push orb pop add pop int3 mov mov lock mov nop (bad) ljmp add pusha mov stos incb xchg mov mov and cld mov ds movb push mov dec ficom dec and cmp add not lods push add cmp sahf sbbl push (bad) hlt xlat inc mov add mov jno and fiaddl mov sub cmp push fucomp pop andb sub mov scas or pop add aaa dec mov cmp fs ds dec add gs cmp (bad) mov jns data16 jno sub pop fist or mov xor pop fstpt push cmp cmp add (bad) orb xchg pop mov push pop and sbb pop sub sub cmpsl loope pop inc fcoms pusha es iret jns js add push nop (bad) adc sub addb inc push out xorl sti lahf mov je xor (bad) push mov or push aas add loop dec add hlt or out pop in imul cmp xchg xchg imul cli xchg mov in mov popa (bad) add and xor adc das mov cmp sarl and cmc (bad) xor gs popa into inc es and out loope dec fucomip fs xor mov ret xchg add pop aam out andl (bad) rolb add sbb and add sbbb lahf jle js mov and pop movsb mov rcll lods add push xor adc add lcall xor adc scas (bad) call fcompl cmp xchg add gs lods push (bad) xchg xchg or repnz mov cld or leave xlat mov addl xchg inc and sbb jp fildl fadds mov jnp ljmp aas lock pop das pop stos pmaxub add cltd inc pusha mov mov sub jbe mov stos adc or movsb xor int fmull adc test xorb dec mov add imul or cmc mov call mov es sub ret icebp rclb xchg loop adc sub mov pop add lea rolb mov fs das and lods iret cmp (bad) in and jge jmp xchg nop mov loop push add rcr push pop pop mov or (bad) mov enter add push int3 fldenv pop inc (bad) jno push jg adc add mov mov inc add push sbb and push mov fiadd ret lea into pop je mov scas pop xchg dec sub adc push unpcklps add push inc ret jge cmp rcrl cmp mov adc loope (bad) lock leave pop or and push adc add stos rcll test add gs pop push mov jne mov inc scas jnp jno cli jb (bad) jmp xchg fdivs pop in mov cmpb cmp and ds scas pop adc or mov and addr16 call int3 es cmp mov xor popl (bad) (bad) addr16 or aaa cmpsb lret xchg out add frstor ret inc mov and jbe mov ret fwait push movsb xchg inc (bad) mov adcb mov cs repnz sbb fsubs or pusha jo testl add fcompl mov adc cmc int3 and push xor xchg pusha push mov jg adc movsl push clc call or mov cmp pop test sub sahf sarb pusha je (bad) je imul pop add (bad) sahf rorb and add pop fwait and mov add xchg loopne mov adc dec mov mov mov add add pusha or in xchg cmc cmp fcompl and cltd add xor fs call lahf dec adc pop rolb inc or into enter les iret popf mov mov jl add lds mov push pop (bad) shl xor or jbe and bound pusha nop mov fsub pop les stos ljmp test enter add push call cs dec pop cmp add sub shlb add cmc jns push pop cmp testb lahf cld sbb fmuls bound mov fsubl enter mov (bad) xchg push jge hlt cs cwtl add xchg xor push out out dec dec adc cmp aaa (bad) cli adc sar adc cld add fistl pushf xchg loopne sub addb dec jno fist movsl mov cmp aad scas sub fmuls and pop int3 jge orl xchg mov mov test jo rolb and popl fs shlb adc out cmp mov and mov stc js mov xchg add push les mov aas xor call mov dec stc and mov inc sbb (bad) cltd mov je mov je scas ljmp xchg jb pushf xchg add xor cmpsl sti mov and pop add fild xchg lcall mov cld jp mov mov shlb and add mov and sub lds pop fucom pusha in mov sbb int3 add add jns xor testb stos xchg dec movsl pop add cld fs or out xchg xchg adc xor or dec add sbb ret xchg add lret inc jnp or rcll cmc or cld cmp fistp imul mov insb mov ja or cmp orb fidivrl mov je sarl cmp aam xchg jae add jg jnp js jp dec push cwtl imul adc or pusha xchg (bad) aas rcrb and add sbb xor testl icebp out jmp popa lds shll adc inc add or outsb jecxz inc add or ficom adc mov arpl jns sub data16 mov and push jae in sub or ljmp scas mov mov mov lock mov jle xchg cwtl mov (bad) lock lahf sbb shlb fnstcw out in and or cmpsl and bound mov add clc cli push pop cltd lret scas ja lcall idivb xor add je mov jmp jl push adc adc adc add je xor into add push movsb clc pop xchg or shll and mov jne ret dec add imul jne xor enter movsb shrb test pop stc imul int3 and pushf inc add incb movsb pop jge imul or xor (bad) popa add test js jnp into or (bad) mov scas ljmp jbe xchg jns jp xchg jl or (bad) sbb jae add xor and sbb icebp push mov add cmc cmpsl loopne (bad) push jl push (bad) xor arpl fdivrs push push mov insb mov jp and and int pop call add pushl push out xchg cs rolb add aas add lods (bad) lock pop or negl shlb and (bad) sbb sbb fs cwtl hlt mov shrl cmpsl add lret and jno,pn nop xlat dec sub mov inc or jns,pt mov dec mov (bad) (bad) xor inc shll pop adc sbb shrb xor dec cmp mov adc mov addl sbb addr16 in test js sbb repnz clc fs and std lock pushf lret fbld int3 sbb add dec ficomp add lret repnz adc or jae and out lahf jp pushf in sti adc xchg leave xchg cmp dec inc or inc adc inc add es or sub ja inc movb imul fsts adc adc popa fcmove fcomip addr16 ss adc into in xor dec xchg mov or mov fnstsw lods popl aaa xor and add pop adc push cmp cmp jnp pop rol ja cmc stc add es pop push addr16 leave push jbe push or cli pusha and push enter push imul pop dec dec xor sub jge add mov test (bad) jl and push lahf push jl add loope arpl adc inc rcrl pop test push jl arpl popa jns (bad) ja cli xlat cwtl cli sbb lahf sbb (bad) ljmp test xchg enter sub cmp icebp insb nop adc jl sub sub testb jp or xor inc sbb fstps repnz jns hlt mov dec add mov and mov stos std data16 push inc mov jl dec packuswb popa lcall shr adc jo pop push add push add push nop jmp mov ds pop mov sbb aas ljmp jo nop addr16 or jnp cmp push cmpsl (bad) adc ret mov popa push jb jp mov add jno jne lea fisttp dec mov push aas sub adc pop sub mov add or cld loopne cmp add mov pop (bad) in jb adc jmp pusha jae or nop mov xor aas push or pop inc push cld adc mov pop pop xor stc loope mov clc mov lret push pop call xor add add mov push mov dec add cmp (bad) sbb or adc add mov pop mov xchg dec add inc jmp sti jp ret pushf or push jmp jp loopne add cmp mov pop shrd jnp loope inc dec into test inc add push adc pusha or out dec cwtl clc mov sti sub sbb and add or and das cmp test sub jmp mov lock inc push scas add cmp cltd push jno mov pop sub adc in test xchg push xchg gs (bad) cli fsubrs push add repnz mov push xchg jp dec std pop cmp leave jno and push push add mov jmp pop pop add popa pop movb and stc mov and add push pusha enter mov fsts xor nop rorb (bad) stc cmc mov cli cltd mov add add loop or push cmc add cmp xor add pop mov popa push jp shll adc and push shlb cmp decl fldt (bad) repnz shll cmp out inc mov push xor adc lods cmp sar cmpsb mov test jnp mov xor add aad dec sbb data16 xlat pop jns xchg push lahf pop xchg (bad) xchg xor test ret inc test cltd sbbl mov mov add dec or cmc hlt mov jmp fmuls enter (bad) cmc ja add push sbb out mov adc inc ret mov insb subl cmp imul ficomp arpl popa push cmc fdivrp rcll inc call cmp aad seta js loope mov test adc rcrb sub mov popa roll icebp sub lret nop clc or mov icebp mov adc scas sbb rcrb (bad) add cvtps2pd fistpll inc mov dec (bad) push sbb sub sbb nop dec cmpsl cmp pop mov mov jo xor push repnz add pushf inc and test cmp xchg or mov jns mov xorb push aam movl imul xor aaa int sbb popa ret arpl mov push test pusha dec or (bad) mov popa pop cwtl jp (bad) adc mov popa and inc sub (bad) aaa pop inc dec inc or add mov daa addl nop rcrl sbbb and fidivrl dec or (bad) icebp adc test xchg add pop cld push pop add mov mov mov mov loopne add xor cmc call cwtl jno or inc sub sub popa clc (bad) xor pusha push pusha jmp rcll pop pop push xor inc rolb jns icebp pop cmc or movsb jb xor mov stos add js adc (bad) jb mov loopne add lods add arpl adc rcll jae lds or int3 fistl stos pushf ret mov add cmp (bad) icebp loopne sbb mov cwtl dec pop pop push mov fild stos (bad) cmc lea ret push call loop fldl lcall movlps and lcall mov add punpckldq clc mov add adc inc in lcall jno aas pusha mov in lret adc and or adcl add lret adc cwtl (bad) rorb inc inc popl flds (bad) cmc into xor xor sub pop sub and pop cmc outsl les pop push dec orb jno,pn loopne sbb enter push lcall daa scas and sub jl cmc fwait ret movsb jo or push imul cwtl lock movsl pop aam inc (bad) sar in adc push or rcrl fidivrl dec inc dec aad popl mov lret jno imul movsl xchg iret pusha jbe (bad) mov mov jmp push cmp add sub pop aad insl dec cmpsb ds adc dec pop sub mul adc repnz cmc andl or adc push cmp imul loope roll mov scas sub in clc aas sbb ret push lret dec test jae cs sub call inc adc out inc les ficompl push lds (bad) aas mov pusha cmc inc cltd lret sahf roll mov pop test bound cld push jge sub loope inc les mov jp mov push mov popa inc in dec inc add fbld dec ljmp fist add push pop mov popa test mov insb dec popf cmpsb push mov sub jmp lods popa loope stc push xchg nop mov lcall fcoms mov test sub jle sub stc and test mov mov sub dec sub adc nop in and cld cmp inc xchg mov inc adc mov orl inc xor xor add jmp sub sub and lea inc fwait inc add dec xor xor sub mov loope xor cmp add add ds push pusha push lret rorb je jae cmp add inc repz jmp cmp push std inc mov inc pop stc mov inc cmp sbb lds inc lock add mov push pusha add repnz lea mov and xchg jnp or or es pop pop daa mov into pop mov and push xchg add test out rorl jle sub push xchg int3 mov xchg lcall xchg addl jae and clc out sbb or nop adc and ss ret movsl mov mov lcall fs push popa pop ret enter inc pop inc add sbb push dec mov sub add test sbb pop mov and push inc mov repnz or cmp pop inc sbb adc mov shll sbb (bad) fdivrs sub sbb sbb adc or cmp xor addr16 out inc and setnp mov jge jle add daa loope pop cmp cltd mov ja add add std add jmp out fsubr add into lods cmc in jno cs and nop add cwtl add add insb add sbb outsb std out add fildll pop in sbb add rol pop data16 (bad) lahf stos sub fistl daa ficompl pusha les scas push push fs inc lds sub jp and mov lods cmc jmp dec (bad) call in jecxz lock mov pop add jmp ficoml add shrl add add aaa ljmp test pop inc int3 or pop incl insl add scas xor inc in mov xor stos push (bad) push mov inc cmp (bad) std dec nop xor call (bad) rolb and mov adc push dec mov rolb inc les and inc jl adc inc rol pop insl (bad) ljmp add xchg dec insb insb cwtl mov lods jo fbstp sbb out cmp xor fs mov cmp fiaddl sbb fsub mov dec pop xor push cltd jae cmp inc and std add inc (bad) fbstp in js pushf add or popa or inc movl daa xchg rorl and (bad) pop decl ljmp das dec icebp js pop imul or addl test les mov xchg andb ljmp inc das popa rcrl push cmc clc and test bound adc mov cld sbb mov pop push jle push es movsb nop lock icebp inc adc mov pop mov mov or hlt add cmp mov dec adc dec add add pop xor xor clc or jmp fs sbb or pop fisubrl dec dec arpl int3 add pop enter add and push add adc ljmp and pop pop add fnop mov (bad) daa add add adc jb add push add dec pop and hlt sbbb orl test and daa enter fmull sub (bad) icebp ja insb nop xchg sub pushf data16 push fs inc dec shrb cs and fs dec pushf and and mov or push aam fcoml or sbb stos loopne sub mov jg cmc (bad) popa xor mov xchg xor and push es outsl je negl cmp mov inc insb adc sub push cltd loopne xor and adc rcll call es daa pusha mov cmp rorb pusha xor or pop add gs jo add mov push pop xchg pop inc push decl repnz sub enter ret adc sti cmp inc and mov jg xchg cmp fdivrl and push enter xor leave movsb add cs add mov lods xchg enter ljmp (bad) add movsb rcr push or adc sbb dec test and mov sub ss push aam add ja sbb mov test into rolb pusha inc loop jo (bad) pop jl fs or icebp fwait out mov xchg outsb push enter mov test push mov push inc sahf or and mov inc adc sub pop pop xchg ret inc adcl les xor ljmp and test (bad) xor test aas pop xchg mov inc cwtl loopne jnp add (bad) in dec das ljmp jmp add adc sbb jns add arpl adc sub xor arpl les pusha push jno add sub jnp add sbb cs test jecxz inc add and jb pop call add sub (bad) into (bad) (bad) cmc loopne rorb (bad) loopne hlt push (bad) mov lcall sbb or or stos ret jmp cmp dec rol sqrtps lock sbbl inc pop inc test test lods lea adc lock les mov ljmp push sub mov jg sub cmp mov test faddl xchg jne lea adc (bad) mov scas and mov hlt data16 rclb jle ret cmp in dec ret nop add mov movsb rcrb mov dec stos jo xchg test hlt pop mov add lds adc push stos xor dec mov sbb pop mov cmp or clc add push sbb add inc pop and push loopne sbb dec xor add pop xor pop pop movsl sbb les jl add repnz adc insb sub mov repnz les inc movhps mov xor and mov add sbb (bad) call and dec in xor (bad) hlt add inc cmp adc mov fdivr ret test inc and movsb icebp inc xor mov pop rolb push xor loope mov scas or pop fsubrl cmp das jp std mov push sbbb int rorl xchg in adc int3 fstl mov and repz decb pop outsb inc sbb jl sub cmp pop cmp rolb scas mov fimul fs jae fwait or mov push enter lods rorb add push jo fwait adc aam sbb fs pop mov adc inc mov adc mov fbstp xor rcr stc ret or mov inc and xchg popa dec aas jnp add mov add dec inc add xchg sbb inc fwait in jle add out aad rol xor adc ret sbb mov mov cltd jecxz mov inc aaa xchg fsubs xchg aaa or mov adc les (bad) popf xor pop jno xchg sbb inc int3 mov add sbb mov dec in (bad) jbe fist ret (bad) mov enter loopne imul jl xor lods cs sbb pop idivb add lcall iret pop dec jo imull outsl mov fsubr push fist adc or test pusha daa nop rolb jge adc add das notl sub (bad) fdivl insb call add jp daa adc dec and mov insb pushf dec lds cmp out dec adcb cwtl pop add adc dec push (bad) cmp inc repnz icebp sub loop rorb pop add dec push dec pop ror mov enter (bad) mov inc jae add stos cmc in ljmp adc add add fimull or leave rolb push push test pop jmp scas mov sbb jg outsb lock test or lods inc stos push sub rcrl sub sub loope xor sub pop push sbb push imul push cmp sbb jns cmpsb adc or (bad) mov insl js lods imul push aas inc les inc icebp scas fmull inc loope cmp in xor in std test jne sbb js je push pop ret verr fidiv adc xchg sbb cmp sub push inc xlat or lds or adc mov add sbb add cmp add les shrb shrl push or xchg add and push and ljmp adc jp sbb push sbb sub sbbb xchg xchg adcb aam insb mov shlb add aas ret ja test shrl adc sub out (bad) jb sahf addr16 ret mov and sub pop add push push push rcll (bad) (bad) sub adc in add inc scas jno jmp mov pop mov outsb add or cmp add fistl aas sub mov or cmpsb sbb loopne mov jnp dec fsts aaa mov cmpsl test repz nop sub sub lds mov nop andl call js push dec jns stc xor cwtl stos ds sub inc pop cmp enter add jl mov ds into sub jl dec xchg fdivl jge jo xchg mov lods bound push jne inc xor jle int inc addl out or xchg or adc and push pushf mov cmp sbb pop orl mov popf push call pushf cwtl xor loopne (bad) call sbb push add jbe je xchg sbb js test inc je or sub cmp xorl and sarb push je mov lock sub and dec push insb jmp lea mov rcll xchg pusha dec sbb cmp clc gs shrl mov add mov cs xchg daa push add or mov add jo cmp (bad) mov push sub push and cmp push adc adc jl test loopne test pusha inc ss mov hlt mov adc (bad) imul cli lods mov or cmp mov add push js lret ja rcl pop and sub pop popl test mov dec inc sub es pop iret popf and (bad) in mov xor jecxz int3 movsl or out add add or loop popa pop xor cwtl fimul leave cwtl pusha sbb cltd pop cltd pop adc pop inc insb push sub jg xor dec outsb mov xchg pop nop add adc pop or fildl in pop mov jo push push test and and or add xor hlt stos mov pusha push (bad) mov insb xchg xor inc imul mov pop xor xor sbbb or mov lock jl insb push cmp lcall mov mov and fstpl (bad) dec or (bad) rolb sub sub popa adc popf fcomps je dec ror scas fsubl add dec pop mov (bad) jo faddp stos or mov out ja inc out stos cli mov andl pusha push jl and add push mov outsb rorb std push flds inc sti repnz mov pop push ja pop adc push mov sub jo pop add (bad) lods fwait mov sbb mov pop jmp dec mov jo outsb pop sbb push pop iret and cmpsb (bad) push scas dec or nop daa or sub mov out and add add or mov push inc divl std inc pop and loop adc mov dec xchg adc adc sar push cmc mov add cmp subl dec pushf mov add cmp movsb xchg cld inc cmp aas orl sbb stc mov leave outsb sbb in (bad) adc and add out adc add lahf xor adc psrlw mov pop inc out add frstor pusha jge int push fadds or clc add cs or cmp repz push ss sbb iret loop pop or out push mov ret imul and push jo jnp xchg inc jl sub dec sbb cmpsb push in xchg add sbb inc adc and add roll and aaa lcall in andb mov or movsb xchg ds sub cmpsl dec pop nop das dec jecxz sbb mov inc (bad) in fs push or pop xor sbb push pop sbb rclb lods pusha cmp or mov and add and push adc test cltd dec jne repnz dec jns add test xor loop inc imul or push or mov mov mov sbb ds (bad) inc adc pop xchg int3 movsl sbb shlb loopne dec sbb add (bad) sub mov mov mov mov inc ret or int3 add xor inc insb jp push daa mov test pop nop dec outsl push shll push sbbb add mov mov (bad) test mov subb sub lods mov sbbl add inc fimul or mov push or cli jp std addb inc pcmpeqb imul dec testb mov je add inc lea pop add push mov test mov add sbb xor cmp out in mov es mov bound sbb xchg mov ds test mov sbb inc add xlat sub addl test les mov in fiaddl sbb mov cmp mov inc es xchg push paddb fild cmpsb jae imul mov scas (bad) pop je pop push lods adc mov out cmp inc test mov in popf dec dec mov jbe inc push mov pushf mov imul aad call repnz test inc (bad) in andb das cwtl loopne ljmp dec xchg inc insl sub xchg cmc xchg int3 xor add stos add sahf mov push test mov adc cmpb xor jns test jmp adc jbe add stos inc repnz add fs test inc push popf add hlt mov (bad) fsubrs inc pop and insb lahf nop sbb pop or add mov inc stc mov inc jmp sub push jl in dec mov adc scas dec sahf add mov mov call scas mov cs xor adc jae push loopne inc (bad) cltd hlt xchg inc xor inc cld dec daa stc jl adc or push mov add or sti fcoml mov adc call dec jl or xor (bad) add sbb ljmp mov push xchg sbb rolb push jns in mov subb xor nop sbb adc lret dec cmp sahf sbb add in push and mov add jmp jne inc hlt jmp sub cmc and sbb (bad) rorb jl,pn pop clc in ljmp mov xor insb sbb rcrb inc cmp insb addb sub sub in sub loopne sahf and pusha fsubs add loop ja idivl jp or dec add cmp lods push inc push adc sub and xor adc mov or bound add scas mov xchg fwait mov pusha inc cs and sar xchg test sub iret test pop (bad) sbb pop jbe mov mov fucom and mov mov in inc nop add lahf jle ja pop pop inc and sahf inc roll and mov push push lret cs xchg aam andb push add into addr16 stos xor add out enter jle add mov or incb incl outsl inc in and pop addb mov push mov push daa fwait mov ljmp (bad) sbb add cmpsb jle pop mov xor jbe sti and push mov ficomp xchg shrb aad mov das xorb mov dec pop loope popl fistpl xchg jne into js fmulp lcall and add sub sbb adcb jl or cmpb pop lock loopne jle cmp xlat inc push push xor (bad) clc insl sti fcomps xor fild cli lods jp jb lret xchg test xor mov xchg mov pop xor ret xchg xor jle lret xor push sub popl push xor xchg xchg pop xchg mov fdivrp cwtl lock fcmovnu callw inc fmuls sub xchg and mov mov push mov or push loop adc rcrb testl sbb sahf sub movsb jecxz test xchg cwtl add inc adc mov cmpsb or aad xlat ficom jnp push imul int cwtl icebp add mov and inc inc outsl cmp mov sub cmp inc cld push inc mov dec ja push mov inc sbb push je js dec push push sbb add xchg xor jmp xlat fimul movsb or xchg push int3 push sarb fidivr cmp sub aas add movhps (bad) and xchg call scas data16 pop js pop or mov fdiv xor mov mov stc aam mov xchg fdivrl pop xchg sbb mov or push outsb inc lods aam imul cwtl mov sub test test push (bad) push sahf adc bound sub push pushf jo add in cmp sti (bad) pop and lods add mov pusha and mov cltd les mov sbb enter cmpl outsb add xchg mov arpl loope and mov in push punpckhbw mov sub enter push xor adc xchg repnz pop shrb dec mov sbb hlt enter js ja imul dec sub inc movsb faddl dec jmp or jp clc rolb je pop push call arpl mov repnz mov mov adc pop popf push iret aad inc add xchg loopne jmp pop pusha xorb out push sbb cli add cmp scas (bad) lds adc push xorb cmpb jns cwtl sbb jl aas mov (bad) mov imul and dec inc dec add sbb add and xor mov or cmp ret outsl in negb add and add (bad) mov mov pop jbe je xchg enter push pusha push aas fisubr and add add and cld pusha pop mov mov adc test xchg pop pusha inc into inc enter mov or fldt push inc dec adc clc rcll dec pushf and movsl add lds fsub sbb add push loope (bad) icebp dec test pop add jns popf pusha fistp pop roll mov push nop popf add add cltd je cmovno mov sub push daa and mov adc mov and xor dec cmpsl mov mov xor pop popa or inc cmp in mov cmp xor aam xor dec add pushf repz and mov push and ljmp loop adc mov dec (bad) adc rcll lds and jg ds repnz lock and push dec xchg test pushf or xor ud1 cld cs and test xchg push les sbb or fmuls mov ror push adc add movsl loop mov mov in bound arpl add testb callw dec sub sbb pop loopne jo add imul jo adc pop inc mov shlb scas sbb imul push nop xchg dec or pop iret enter mov fsubrp and inc imul push xor out add lds and (bad) inc xchg jecxz mov mov push xorl xchg mov hlt repz or aad adc inc dec sub ret adc jl sub cmp cmp shrl pop or inc mov cmp ret ss cmp add cwtl lret imul and es psraw cltd mov nop adc and or adc sub popf out push mov (bad) pop and mov add add out dec pop mov iret inc mov inc call or sahf xorb add add nop sub or push inc and dec cmc and iret scas cs fiadd js add mov fildll out cmp out mov xchg inc mov pop bound inc daa pop push xchg add lods push and (bad) fisub loope xor std add sahf add call mov xorl fidivr mov lss or les xchg dec inc rclb mov push scas mov nop in inc xor inc xor lods or inc daa nop sub mov movsl dec add fdivs insb popf xchg and or xor jbe xchg add cld jmp mov add sbb stos mov jecxz lds sub xorb xchg loopne or js ficomp xchg ret cmpsb rcr pop push addb in pop into mov dec xor cmpsb sub push cli sbb (bad) lock (bad) sub mov mov nop mov (bad) mov push lret test sbb fisubr cmp and push outsl std mov stos aam adc scas or je notb and xor xchg sub psrlq js add mov test neg mov xchg mov (bad) pop gs (bad) call xchg stc (bad) mov jl dec push or js dec stos in inc je and imul cmp and mov dec fsub xchg repz pop adc mov add (bad) aad sub icebp arpl push test setle xchg add idivb push inc or inc adc mov or sti dec andb pop xchg sub push add inc or push pushf stos or ret mov pop add ret add mov and push add add mov inc adc and mov fimul flds jecxz (bad) cmp inc xchg in jl ficomp ret jb cltd pop mov hlt shll lds inc mov and sub add add mov imul insb dec or rcl outsb push inc imul cwtl call lods add movsb mov cld fadd xor adc (bad) pop mov inc loopne and dec push cwtl int3 push je in out cmp mov (bad) mov xchg sub mov imul ret cld and jbe and cli sbb stos and sbb cwtl cs dec or inc or sub js sbb jmp sub sub or sub dec cli mov pop and adc pop push pusha push jae in add push sbb loopne push lret cli jnp xchg add (bad) jnp adcl js add out push icebp jnp xchg dec inc inc imul push cmp lret sub sti sbbb outsl inc xchg and push push call jns mov xor repnz addr16 and ljmp stos jne outsl movsl flds or aam mov xchg loope mov or and mov aaa loope add cmc sub add outsl cli xchg test pop bound inc or xor sbb roll pusha jb jnp repnz ds xor pop aaa sbb icebp cmp (bad) dec or push ss pop (bad) jne add rclb sbbl sub sbb stos outsb and bound mov in orl mov lock inc test clc mov jno faddl stos xchg mov adc and inc sbb cmp sbb push jo push js sbb lock rcrb cmc and movhps rolb arpl gs popf dec call cmp and je sbb inc std lods mov and pop add movl dec loopne movsl test mov daa pop ret dec insb cmp addr16 hlt and push push inc call les inc mov push lret xorb xchg (bad) frstor dec lds inc daa mov inc shlb (bad) add mov pusha out pop sub push mov dec test cli test xchg push fisttp nop pop and jo adc js das cltd es insl call jnp and std push add imul or mov jb test (bad) loope inc dec movsl mov aad xchg sub fnstenv and adc push pop xor sbb and mov adc data16 jns mov fs gs mov add or pop mov and inc xorl sbb lcall sti int3 test push lods mov fs mov mov test xchg movsl dec add mov in cli scas rcr inc push ss push sbb sbb xchg xor cmp pop add push adc inc xor xchg pushf xchg cmp call int cltd movl push jg dec mov test ss shll js mov inc (bad) xor lea mov add lods testl aas (bad) jno mov adc sahf add jno sbb ljmp negl xchg dec leave dec dec or sbb dec dec mov jp imul stos aam faddl pop dec push call clc pop mov add jle mov push add adc lds clc enter lock mov mov sbb lds enter aaa xchg push fcoml mov cmp or stos test add fs loopne and fisttpll add adc fmull ficomp sbb adc or ficomp push rorl xor cld pop nop mov xchg mov add sbb aaa lods punpckldq jmp mov ja add or sbb pop arpl popa adc mov (bad) call mov ja cmp inc ret or or add lods nop mov scas outsl out and mov xor lods adc scas dec jl jle push mov adc add pop sbbl rcr xchg xchg mov dec adc movsb rolb and sahf and pop add ds sub pop add lods inc fcomi push ret clc mov mov loopne jbe and sub mov js mov or std xchg dec xchg stc jl push stos mov clc fcmovb sbb sbb lods jmp imul pop out and inc add es or xchg js xor cwtl sbb cli sub mov nop cmovno in (bad) adc dec repz mov rorl mov ret rolb cmp test std and jl add dec imul lods bound mov outsb cmpsl xchg movsl fist mov dec cwtl pusha std xor and mov imul add and push xchg hlt into popf mov (bad) aam fwait dec pop jbe sbb jno dec movsl mov push and xor add sbb nop mov into jmp jmp add rcrb (bad) jno sbb je insl gs sbb in add adc std dec loope mov and fidivl dec mov pusha hlt jne sti rorb jbe dec lds and test add addr16 jge add cmp sub dec out or mov mov inc add bound push movsl (bad) push or pushf fdivr mov inc mov push gs ljmp pop mov fbstp xchg ret mov and sbb or cmp shrb aam push xor lret push xchg push cmp test jmp xchg mov mov gs and call aam subb add xor lods pop scas ss pop pop sub or data16 push add and mov imul sbb inc add inc cmp nop or test sbb push dec cltd sub mov ret add and mov adc dec mov cli inc call lock cmp mov pop pushf xorb add rcrl bound cmp bound mov call enter push push pop inc xor imul pop jmp xor orb push pop clc dec and mov push cs es inc mov cltd dec subb scas lcall xchg (bad) jmp ret movsl lea xor push mov inc test mov add inc mov pop repnz mov pavgb int3 pop mov clc or mov push test jmp enter xlat pusha xor cmp rcll add sbb xchg sbb pusha inc push dec movsb add outsl inc mov mov inc inc nop lock pop ljmp push iret or xchg fmuls test cmp popa repnz dec cmc push (bad) mov xchg clc outsb jo pop adc add es lock sar subb cmp add dec ror and dec or add xchg and mov andl adc inc bound add mov rolb pop test cmc lar dec andb xor jbe loopne inc add stc mov pop mov aas sbb pop adcb sbb insl sbb cmpsl pop xor dec dec or jne mov pusha pusha dec andl test dec xor or negl pop add test xchg or mov and imul clc inc mov sbb sub mov sbb pop pushf outsl or orb shrb adc xor adc xchg lahf sbb xchg insl (bad) and ficomp push das fs ss mov mov adcb xchg jl sbb or aad pop mov xchg pusha push jo (bad) mov stos or add mov or add sbb xor ss fwait and pop cmpb xchg xchg hlt faddl mov sbbl sbb cmc xchg mov and mov cmp jle jl add fwait or mov ret mov mov sub scas push dec daa addr16 jge and cmp test scas add add test lock xchg inc add add popa inc ret sbb rclb arpl add jno imul or push mov sahf aaa in dec into push xor lods xor lahf jnp cmp inc test iret mov xor inc fdiv lods (bad) cld inc add (bad) les or pop sbbl add adc add test sub lds (bad) lahf and imul fdiv jns pop loopne add xchg add adc push loope in and icebp xchg mov push mov test or add and xchg int mov cld inc lods je adc mov (bad) cmp roll test jmp jns xorb mov jp mov scas push sbb repnz testl xor loopne add rorl ljmp pop xor push and sbb or xor scas imul mov or or pushf test sbb js andb daa mov sbb push mov mov imul or rcll cld xchg adc mov pusha lock mov jg call dec in sub pop fwait ljmp js mov xchg and mov sarb add scas inc lds pusha lods cmpsb and mov call hlt nop and mov in loop ljmp mov fsubp rorb sbb or mov cmp add mov clc cmpsl mov adc or add or jne add mov in push mov arpl mov loopne movsb mov sub les push shlb repnz adc and int3 adcb hlt and movsl sub push roll clc xchg or imul xor cmp adcb inc jne add (bad) mov mov in xor fstl sbb cmpsb mov iret pusha mov xchg jns push call fistpl mov test jo int3 add in cwtl out incl or mov sub pop xchg cmp jns call and and mov loopne sbbl (bad) and scas push and ds lods nop sbb inc pop leave jle popa mov mov jo cld adc out mov loope sub inc mov xor bound and je hlt pop sbb pop mov pusha out xchg and sub insb cli mov inc test cld inc add dec dec vmaxss add sub push add dec jmp sbb adc shrl xlat jno mov dec add push repnz das xor add (bad) mov outsb shrb cmp pop jp fadds cmp sbb addr16 sbb xchg add xchg xchg inc push data16 adc pusha ret mov (bad) fnstcw cmp xchg arpl dec sbb pop outsb jns xchg stos dec and mov or add fcmove mov pop xor xchg out cmp mov mov lret xchg sbb pop xchg outsl decb pop jae int aaa pop out add mov mov push rolb add mov clc cwtl sbb sbb cli inc dec lcall shlb imul or (bad) and ja inc mov ret xchg mov les dec fsubl pop cmc jg loop adc adc and sti lcall sar mov bound (bad) sub xchg fidivl and or divl das add mov movsb movsb out popl or popa add jno push sahf movsl out push clc push call sbb popa dec js dec imul (bad) cmpsb enter sbb dec or out add outsl cmpsl clc test iret push rol test xlat add pop inc jno loope add or pop dec pop test data16 cwtl add std sarl push inc jo cmp cmp jl add idivl xchg sbb icebp nop popa loop sbb mov jecxz addb popf lahf mov sbb mov adc pusha mov mov pop fisubr jp addr16 add mov sub xlat and xchg cmc or pop mov jl dec xchg or adc mov outsb dec fs add loopne mov lods push adc fmuls or or movsb add bound xchg inc xchg lock xchg pusha add push xchg jo inc lods inc jecxz and add int jmp mov pop sub stos rorb xchg pushf add and stc movsl cwtl adc xor sub bound lock daa enter cmpsl mov ds cltd mov pusha mov pusha fneni(8087 subb enter mov push adc jmp aam insb dec pop xchg mov andl inc push lea jl loope out mov and repnz js and dec insb or ret xchg loope loopne cmc push sbb gs test or mov lret and push test xchg mov add addl imul incb test pop push int and mov or pusha and inc lret and aam jl sbb les dec icebp push inc lods aam sbb mov push insl sub test inc dec sbb test insb in sbbl lock rcrl (bad) pop nop cmp clc es xchg loopne imul xchg fs insb lret data16 jg cmp clc fimul sub cwtl inc incb addr16 test and dec js sub fmul sbb pop leave lods dec or sub iret jns xchg cmp sbb pop lea pusha or bound aam push lar imul mov add xor add arpl push sbb xchg push mov hlt out mov test inc rolb dec jecxz clc and mov mov mov xchg stc add mov add sbbl or add dec dec sbb push lods insb lds les jge push movsb cmp push jo add sahf movaps shrl stc data16 dec clc ljmp mov (bad) lock push mov les movsl ljmp xor sbb fmulp cwtl mov pusha dec cwtl cmp xchg jp lcall js add inc push ret leave loopne sub out ret add mov xor push xchg jecxz sub mov push cmp add out or sbb mov sbb mov adc push out sahf idivb add cmc push xchg add sti outsb je into mov adc sbb and add mov nop and cmc add out pcmpgtw fstps add sbb scas dec cwtl mov femms sub ret xor inc insb sbb or cs lock cmc stc mov xchg and in std add and sub pop jp (bad) fmulp add push mov sub add movsl pop out clc and dec outsl fucomip or icebp add and add add stos cmp xchg push push jbe sub cld (bad) sbb testl clc out sbb andb mov inc adc mov mulb outsl mov aad fnsave cwtl stc adc fcompl (bad) les call push sbb inc popa adc in push mov push addr16 xchg loope stos cwtl loop push mov xor lock nop mov add aam cmp cmp xchg dec lock add ja mov ret sti icebp cld mov mov test adc xor stc sub pop inc mov in lods and loopne enter mov data16 adc and sub add insl inc nop or or popa dec fstl out pop sub pop shlb icebp std js add mov adc push (bad) mov pusha loop add je insb mov sub jb and mov mov test and pop test sbb sub xchg xchg stc push int3 insb pop repnz adc xorb push mov popl aam hlt xor mov dec pusha pop faddl sub lds pop adc adc in cmp xchg mov push fs mov cwtl int3 aad sarb pop ret jle adc push rcll movsb adc push pusha sbb mov add test fisubl add xor inc sub push adc lods and sbb cli mov ret roll fisttpll and add jecxz (bad) call stos mov xor imul adc inc mov (bad) pushf mov mov mov mov jno insb test push or jne mov mov out cld add cmp mov pop arpl adc and add xchg out (bad) (bad) mov sbb pusha sub ds nop les adc adc sub add std shl fisub mov mov cli shrb (bad) mov nop or inc imul (bad) insb sub cmp clc icebp add dec stos imul les mov adc leave xor mov push mov les sbb or les add and dec mov push cwtl fsubl cmpsb dec in sub and inc or ret test lds mov push mull rorl xorb mov (bad) dec inc aam sbb popa hlt add adc in mov dec sbb sbb push inc call mov test inc sub sti mov pop mov sbb add ja and jmp lret sbb or ret bound jmp and lock add mov sbb pop movsb cmp (bad) fimull clc gs dec lds sbb cmp lods clc sub xor imul leave pushf clc cmpb sbb push or divb sub add adc sbb jno in lret pop icebp adc inc lock or sbb push hlt popf in test pop push jbe scas sbb inc push sub sub mov adc sti lahf add bound mov inc or cmp jnp adcb add jg fwait bound xor dec pop cmpsb sbb dec pusha adc xor insl cmp andl in inc icebp sarl mov inc push (bad) lock mov push inc loopne sub pop loope xor mov push popf mov loopne hlt xchg (bad) sbb inc add mov mov mov (bad) rcl faddl sub sti sbb or fs and cs pop xchg test mov ret movsl jecxz xor add insb rclb add push push mov movhps mov xchg pop mov arpl mov insb cmp je int adc outsl imul add pop jo jmp adc dec sbb roll (bad) and ficompl inc stc sub cmc ss or add popf (bad) pop int3 les fsubs loop cs sub mov js dec mov pop popaw daa and mov nop sbb or adc adc push nop pusha add cmp cmc mov pop mov xchg test insb gs push push test bound movsl ret mov sbb and imul push add ret adc sbb icebp in hlt dec pop repnz mov lds cwtl add sbbl cmp insl push sbbb add leave clc fnstcw mov jl fisubrl push cmp mov mov ja mov adc mov (bad) fisttpl fwait adc loope jb mov lods jns pop sbb nop xor adcl aaa data16 mov push pop fstpl add movd aas push insl adcb cmpl lret xchg fistpl out mov jecxz mov aas mov (bad) push std jmpw xor and add loopne jp push imul dec pusha jge aam fs and xchg cwtl inc call lock cmp sub mov mov sbb push push cs xorb jno outsb incb push sbbb pop dec scas sub adc mov iret add xlat cmp push sub xchg dec mov sbb dec xchg rolb jl pop das (bad) add xchg and add imul addr16 jge adcb xor or add int3 ret flds idivb addr16 xchg lahf pop add and mov cmp sbb adc (bad) xchg or insb and add rorb push mov cmp nop test add aaa xchg test lods add dec and mov dec add push add mov xchg imul popa aad lret inc movsb add mov mov sub xchg fidivl scas rolb adc xchg pop enter push push push cmp dec aaa clc adc iret ret cmp sub and inc stc pop pop or inc insl sub jp lds stos push push jecxz pusha pop cmpsl push test pop cwtl cmp cltd jp add xchg pushl lods cmp rolb adc sti (bad) test push movsb iret add xor das (bad) cmp push adc mov roll push ss fsubl xor or je,pt mov pop xor in sbb adc mov lods scas xchg add fild xchg test dec xor pop cmp add imulb adc stc jle add rcrb add lahf aas (bad) mov add xchg pop xchg es pusha xchg cltd add cmp test add mov mov pusha jg daa mov and andl lcall rcr or sub movsb dec push and sarb add in loop ja push xor xor nop in movsl jg xor jno pop es sbb movsl and xor js xor or iret fimul dec mov sbb pop sar and into push inc enter lods add dec adc aam xchg inc xlat loopne sub out jp push cltd fadds jl lahf subb add fcomps dec mov jmp adc or lcall sub sub ja enter bound enter lret pop nop rclb lods pusha fidivr cwtl push adc popf add insb stos sbb nop enter cld push and imul cmp sub add cmp js sbb cwtl stc sbb (bad) fsubl stos dec mov popa cmpsb dec mov push push lcall in mov andl mov cmpsl mov and pop mov and and ret sbb incb les sbb pop loop js xor out lahf je and push or lret or insl lcall dec loope (bad) mov shlb xchg sbb add jmp inc pushf lret cltd and dec fcompl lret sbb push lock movsb mov xor fs nop pusha xor test and sub push iret xchg (bad) mov stc cs std inc or mov sbb xor sbb movsl sbb hlt xor dec icebp pop mov jp jo and or dec roll mov lcall mov sbb mov add loope xor stc sbb or push lods cmp jecxz jo and pop mov sbb add and add adc sub (bad) pushf inc adc fs jge jo add lret scas es jg cmpl push sub adc int3 pop and pop and aas fiadd and mov adc in orl inc pushf addb lods mov cmp (bad) inc dec mov mov (bad) mov lret hlt (bad) push pop adc inc and sub add nop xchg and and dec lock dec pop jno pop push xchg sub mov adc pop dec dec mov mov stc std mov cmp add arpl movsb adc jle jge test aam xchg les sub sbb sub push add add mov loop int3 sbb lret mov sbb xor lcall add iret rorb stc lods aam add enter shlb jg xchg and sarb and (bad) clc add push cmp adc jle and xor dec sub push cmp pushf je int and (bad) cld inc push add in pusha dec sub jnp inc mov inc mov and or adc sbb int dec sbb dec push mov mov sbb sbb mov andl mov je mov push dec stos fsubrl xchg xor sbb or addr16 bound scas rolb xchg pop dec or (bad) (bad) mov je pop test xchg xchg add or mov jp cmp add pusha mov add stos sbb add cmc stc sti (bad) mov fcoml mov popf sbb adc cmp lods cwtl adc xchg and outsl push inc fs or movb pop inc pusha out mov dec xchg jle ret cmp test in adc sub jge leave jo xchg dec test and sbb or adc jg es dec in sbb (bad) add rcrb adc pop imull rorb pop or dec outsb lcall sub mov pop cmp or jbe lcall jae ror mov adc and adc xchg dec inc xchg lods adc mov mov faddl dec mov sti sub or fwait clc in add addb adc add mov add cmpsl push inc loop aam fadd addl jb jne xor dec sbb add pop repz sub divl adc imul cmp inc sbb and mov dec out inc es inc enter add add sbb xlat cmp hlt ror rorb pop leave add mov pop cmp push ds mov cmp mov mov mov popa push negb mov xchg mov sub cwtl inc ds mov mov cmp push push push sbb icebp pop test mov or movsb add inc nop mov pop inc adc nop ret jmp dec lods xchg test push sub add cmc sub xor shrb mov mov adc test mov mov push or add lods xchg cmp stc push (bad) mov xchg mov cltd leave and clc dec or shrb jle cmpsl xchg int3 pusha test jno adc add hlt jle pop mov sub repz mov cli sar jp imul adc lock adc push out mov lock and ljmp add rcll call gs test dec std xor fdivrs mov and add or (bad) mov and addr16 (bad) pusha cld movb xor addl (bad) adc add push or fwait xchg sbb jns adc jge mov inc push xchg leave xor shr repz mov xor mov into jg sub mov ficom loop leave std ja cmpb outsl inc add add xchg sub movsl pop inc hlt sbb js in cmp dec arpl dec cmpsl rclb lds pop les ret fwait dec invd pop dec sti push push andl pusha cmp in sbb smsw stc add out dec push push cmpsl js pop push cmpsb movsb out add loopne (bad) pop dec rorb add loop cs dec xor nop stc int3 add mov mov sbb add xor push inc sahf into incb imul insb enter test (bad) data16 sbb xor mov jno (bad) and cmp push push dec aam arpl and jbe jmp or pop jl push popf xchg dec and addr16 in xchg or or xlat mov and fisttpl mov adc pushl repz movsb enter int3 inc inc (bad) mov push mov mov jmp or ljmp add or jnp subb insb cmpb adcb ret pop (bad) mov add mov sub cli adc (bad) test cmpsl sbb mov jae pop dec add repz sub add pop or std pop sbb repz hlt repz pusha add mov xchg push mov mov and sti ljmp out xlat add xchg popa mov mov lcall or (bad) subl arpl dec jnp test cli dec cmp daa and sar and adc sub icebp lods popa mov add sbb mov sub mul and and out mov jnp mov push mov icebp and sbb repnz shrl adc stos adc cmp (bad) repz aam add pop pop sbb cmp (bad) aas imul mov or hlt fs imul sbbb dec mov bound push mov pusha js push lds fwait pop add addr16 or insl pop adc sbb sub clc rolb test pop add test hlt scas mov std mov add xchg ficompl pop add pop push loop add mov pop push lock in jmp lods sub add outsb fst divl lcall data16 adcl sbb (bad) and xchg lods add and xchg inc hlt sub into fwait loopne adc xor fldt mov add push mov xor cli jp bound loopne pusha in loopne add js pop mov and adc mov loopne in mov xor inc cli dec int3 jo xchg xor push aam insb xor out scas pop and mov and das js cmp mov int push pop dec add test clc out add sbb adc mov fistl ja push (bad) bound adc add mov xor adc push push iret push pushf sub aam inc and sti fadds in lret nop popf mov (bad) lcall mov (bad) xor sbb repz push test inc repnz mov in data16 lcall add mov fiaddl movlps dec xchg inc popf cmp loopne xlat xor push ja inc sbb popf pop push add adc pop jge add mov mov dec sub rol ljmp call repnz push or inc xchg adc stc out inc add cs pushf in nop movsb push sub sub sti cld insb inc and push xor pop mov rol fsts sbb lods inc fcompl sahf dec mov lods (bad) les add addb jg lds push mov and xor mov jae addr16 jl xchg orb jo jp push mov push dec sbb faddl cwtl jmp sub cli add pushf (bad) jno fiaddl rol (bad) add mov push cltd lock dec cmc mov mov and add test cld pop xor mov nop xchg mov ljmp (bad) insb xor pop sbb fcmovne cmpb inc sbb add jmp lahf add aaa decb dec sbb insb dec sub inc rcll stos or dec aas add or sbb or aaa popa and add std jle jae sub or movsl fdivrs add cmp (bad) and push add xchg js sbb mov sub xchg out or add shr xchg rcrb adc orb mov daa add test in xor mov sub (bad) jno dec mov push push sub cwtl xor dec cwtl add push loope pushf iret xor in fisubl or mov add sti and mov aam sbb arpl add repz icebp daa dec pop push dec or add jne sub pop xchg add jae sub adc pusha clc xchg rorb pusha and movsl pop cmpsl lods (bad) adc and xor inc and ret rorb lods add jns mov xor fcomps stos adc in insl cmp jle xchg repnz out cltd cwtl jo lret push es adc nop adc lds jp ds lcall mov je loopne (bad) sti addr16 jmp addr16 ret insb sbb adc rolb inc cltd test xor xchg sbb pusha call lock cmpsb jmp test and dec xor add out jo repnz icebp daa mov xchg xorl mov xor lds fcomps add fnsave mov adc (bad) dec (bad) push pop into add pop and (bad) dec push sbb add add in cli roll push popa mov testb inc jge mov adc xor push fisubl dec xor adc icebp mov add push inc xchg ds fnstcw push sbb scas es fdivs add mov rorl sub xchg js outsl sbb mov lock rcrl dec jnp push js mov je cmp mov (bad) xchg es pushf adc mov pusha pusha sahf xchg je xchg mov or jl (bad) pop fistpll push nop ret sbb sbb mov dec and fsts dec out adc lret insl add pop jp cwtl cmp push movsl enter sub lods fs xchg mov (bad) ss out outsl add adc cmp movsl pop jg fisubrl sbb mov add dec push sub cmp fs out inc mov add fdivrs mov pop sub inc sahf adc jecxz fidivl std fnstcw shlb iret test fadds icebp sbb adc mov arpl add iret shlb dec negl je jo xor xor sub cmpsl sbb add push iret add sub outsl cmp and sbb sbb clc cwtl mov fsub loopne addl xchg testl push xlat inc add inc jno rcr pusha dec pusha nop dec and add sub or nop mov lock fsubs into lock dec adc js mov sub cmp xor dec inc je ss add sbb lods or repz adc push sti cld mov xor mov dec xor adc xorb (bad) and add lahf dec inc mov rolb imul sbb pop mov cmp xchg arpl aam testb or incb jl cld sahf scas dec out je push xchg jl in xor push test (bad) xchg xchg add mov jge rclb sub dec je call test adc pop rolb in sarb mov insb jge gs pop (bad) scas adc dec jnp add jl jle int3 push add jge lret aad mov jle nop cltd add jg push cld cmp xor xchg mov daa push andl (bad) adc add adc inc call adc enter add repnz or dec (bad) fiaddl cmp inc cmp andb and mov inc jbe mov or aaa pop test cmp mov sub dec movsb clc or pop xchg inc int ljmp and in xor cbtw dec add hlt cltd pop xchg or call add push inc rcrb jbe fldt sbb insb or rolb xor push jp xor std out pop outsb sub mov js cmp lahf add xchg faddl adc insb test jo xchg inc mov sub hlt mov push jl outsb sbb iret cmp xchg nop imul and jle push mov lods nop dec sbb (bad) and leave cld rorl mov hlt out es dec rcrb add xchg sahf lcall and pop mov inc or or jns call push pop cmc enter sub in push addb cld or or mov inc fnop add loope adc xor lods xchg cwtl push je push adc push sbb adc dec add cli jae inc pusha test ds add hlt les je pusha dec mov ror and loopne push add pop loopne (bad) dec sub cmp addr16 and sub dec leave push mov mov mov xchg ret pop icebp test dec ss rorb shlb xor mov and or aas js jbe jge pop sahf fs aam idivb sbb addb dec test fcoml add sbb stos jp add add ret xor into sub cs clc push call mov fsubl dec cmp fs lock sub mov fmull outsb cmc push int popf loop dec loope and pop lock cmpsl repz pop test clc add or sarl xchg shr push dec subb loopne dec xor xor jbe js mov shrb mov dec add mov mov sbb test aas sti xor insb pusha jns mov enter jnp nop dec and andb push scas or push add in fs fiaddl loopnew sahf and popa adc dec pop cmpl mov adc sahf mov cmpsb mov dec mov incb add xchg xchg mov dec test pusha or jno add mov cwtl sub or (bad) xor icebp shlb inc sub dec dec dec test xor popf jno jecxz mov loop aas adc push inc mov dec nop mov in aam add pusha push sub dec insb adc andb test xlat das sbb adc cmpsb call sub pop adc inc mov jge push jnp out test adc pop xchg mov call add add movsl jno in cmc add aas ljmp jmp cmp mov add jae into adc mov aad sub shll and insb add xchg adc adc pop push lods ret pop mov fistl sub scas push xchg lret mov pop and aaa lret test leave (bad) cwtl cmc (bad) repz pop enter inc pop lock (bad) sub pop loope and rcrb cltd xchg add mov cmp std mov fild push scas and rcrb mov (bad) xor in icebp clc xchg imul (bad) and push enter mov add test add mov and cmp mov pop rcrb lahf push loope add pop xchg push pop pusha out orb inc add jmp push loop add or div and xor les divb jl andl sbb lret pop repz mov adc popf fisttpl sahf add (bad) cmc mov and cmp pop sub outsl daa sbb pop pop data16 xchg lcall sub pusha lea add outsl popf shl jp call push cli fisubrl dec or pop out add or das push dec test jo lds sub ljmp fidiv mov pop fucomp dec test jl push adc jns inc sub dec add cmp mov jmp or loopne mov into cli pusha inc and aas mov sbb repz jns sub xor pop xor sbb push out adc lret jnp adc out addb in mov loop fidiv popf shll (bad) clc xlat jb adc mov sahf and loop jb jnp lea pop js jno and loope push xor inc out push or inc int clc jns inc shl scas and jns push dec add add push mulb push or and gs and les xchg xchg test inc mov test dec sbb loopne (bad) sbb fsubs add lock lret or leave xchg pop inc dec jo or adc les xor aaa fnstcw xor jl jp mov cli je adc aam add push sub ss popf mov add and sbb mov xor insb cmp (bad) xor and (bad) push out repnz ss les shrl jl pminub lock jg test inc test mov mov sub xchg in pusha clc xchg mov lods or daa rolb pop adc inc aam sbb sub test mov xor cs in xchg inc pop sbb jp sub clc daa jne or push add js cs inc pusha inc xor (bad) jns fimull clc pop push dec jne arpl xor mov dec jne inc mov add push stc mov cmp cmp inc repnz pop push add sbb xchg int3 repnz sbb adc mov testb test sahf loopne insb nop sbb and mov andb shrb into (bad) mov mov fstps and into mov cmpsb (bad) fadds decb mov or aas decb jl mov sbb sbb test ds add and jae test dec ljmp push pushf les je add inc lcall int3 mov jecxz loopne (bad) cli js cwtl in and pop sbb dec fiaddl ficom fsubr mov sti inc mov dec or clc ret mov (bad) in pushf call int xor (bad) jns add outsl lea or mov call and xor add sbb jl fstps dec mov andb xlat test rcrb loopne out les ja imul xor mov loop sbb cmc add es shlb jecxz arpl mov inc nop and out push insb incb pop sub add inc fiaddl sbb loop int inc aad adc inc mov mov enter add jg dec das inc test or cld add out sbb mov nop pop std mov adc jno add jae dec add jns loopne shr ficoml js add sub and loope rclb and (bad) inc cmp push loope inc fdivl js mov das jae ret fsubl push inc push pushf cmp into or inc aam lds fstpl inc dec sub inc or or mov dec mov pop cmp sbb pop mov jg clc xlat mov repnz or repnz sbb fs add jl rorl mov cwtl cmp inc sub frndint cltd std rcrb add jne mov popa dec dec bound mov lds and sub jge add loopne pushf dec rolb in int3 cmp push movsl out ficoml mov sbb and stc and int3 xchg or leave dec adc and (bad) mov add inc mov pop into push bound ds cmp lret je fsubl sbb sbb fnstsw pop imul arpl push movsb hlt jno xor inc and inc adc mov add arpl sbb and or fimul xchg cli cmp cmp out cltd mov ret jecxz popf lea rclb es fs pop shrl call and add xchg push mov jnp nop cwtl movsb mov dec xchg fsubs cmp gs mov dec mov cmpsb icebp test mov dec in mov fldcw data16 sbb jne and loop or loope mov test adc loope sub outsl nop add leave xor xor inc pop add add sub and cmp gs mov push dec (bad) fs (bad) add in sub mov or xor (bad) sub andb sbb xchg incb inc aas jl cmpsl shll add dec inc add mov xchg jl add mov out pop add loopne scas jne jnp inc mov mov mov mov shll mov xor (bad) push nop icebp mov pop popf dec loop mov rolb inc and dec lods js jbe movsb loopne inc int mov rcrb inc inc lods push nop les add jmp mov mov add jo outsl (bad) int3 in add pop addl lds adc xlat leave mov scas in push inc mov push aad loopne mov movsb nop jl xchg dec or inc arpl jno or imul enter aas xor repnz cld out ss add loop (bad) and enter sbb pushf scas add mov dec cwtl add (bad) jmp inc ret sub (bad) loopne in sbb lea jl aad dec add popf mov mov fsubr fsubs mov push pop mov and sbb lock (bad) jo push mov lret js adc enter mov and mov lock adc add loop mov cmp sbb mov out and sub push push fdivl add push je add (bad) loop cld rol ficom rolb orl in in pop mov aam or enter sbb popa (bad) adc ret das add add and push outsl pop pop ss les in cld mov xchg ret or sahf and and lds and add int cli sub shll mov ret or nop and adc lret les mov xchg adc xchg or push pusha popf add addb mov xor imul mov rorb cld stos push and shlb js inc adc mov lods les mov nop xchg push in inc enter stos sub adc stos pusha or rolb pop mov mov call fmul sbbb lock leave (bad) lock mov sub test rol mov add ret or adc clc int3 out pop add in inc pop fiadd add cmp out lret test jp jl inc sbb or inc xchg mov add or sbb icebp mov sbb fcomps rorb xor out mov jmp lods cmp inc or cmp xor xor call or dec jmp or aaa pop cld scas lods add sbb (bad) sub (bad) pop xchg cmp adc lods add fcoms shlb fisttpll xchg test lahf mov xor lds (bad) inc pop sti (bad) (bad) std daa inc push nop cld lahf aaa or jecxz mov mov add scas fwait mov xchg add test gs ret ljmp xchg push sbb lahf jbe push pop inc jns cmc adc mov fmull lds xchg mov dec int3 or push rcl dec mov and push (bad) lock mov pop add cmp push bnd dec add cld pop aas call jae xor sbb adc cmp mov je ja (bad) pop pop dec add lret push mov mov js (bad) lods dec test add in fcmovu and adc mov mov cmp dec insl add dec jg dec cld inc push cmp movsb xor mov adc mov adc jp inc mov faddl clc cmp loopne je je add insb jb aas ficom jp push sub popf add in (bad) rcrb adc test (bad) jno sarb ss or mov sub mov pusha jnp mov push call dec and pusha je add mov sub lock fcmovne ret ret sahf cmpsb shrb in jmp adc pop rorl pop jb or xor and cmpsb mov hlt in retw rcrl call inc cmpsb sub mov sub xchg rorb and fidivrl xor (bad) test dec aaa fstpl imul cwtl mov roll dec mov (bad) mov jmp xor movsl movl int mov jno sbb mov out mov jg xlat mov cmp in ja nop dec mov fucomp jle xlat movsb ret inc mov jmp lcall scas jne leave dec mull test mov dec ja pusha jbe lock ret ficomp (bad) mov push pop inc add fs inc ret add inc sti orl in lret loop and test sbb cmp jecxz mov add leave jb in dec sub arpl add mov jno cmp loopne cs fmuls mov jae pop outsb sarb jp stc mov pop jo adc xchg in dec sbb push pop fstl pop sub dec xlat cld rclb repnz push fildll shlb or les xchg sbb aas dec pusha sbb add mov and iret push add dec test ret pop aam lock jbe or mov imul mov xchg ljmp jg lcall cld xchg fild add ret or adc add push fs dec pop pop jno jnp stc les pusha adc shl jb sarl sub pop ljmp dec and jnp call jo mov test cmp ljmp push in test in aam and adc test (bad) test js xor mov xor xor cmp test les insb inc inc loope out pop add push lcall popa aaa push out add pop pop shll nop inc sbb mov orb in loop mov js or ret push sbb xor fcoms addl jne jp imul lahf addb fucomip mov in or or call (bad) scas addr16 or inc scas inc pusha sbb xchg add loopne je mov push add xchg in ret fwait in xchg or push aam push xchg pusha mov cmp int test fcomp jo push push ret loopne test adcl xor ret or xlat push bound les push jnp sbb xor mov and add cmp insl inc pop daa popa jbe adc push jmp xchg or and (bad) dec subb xchg adc in andb cltd cmp mov fstl ret cmpsb mov lret cld add stc push pop xor add hlt nop lcall dec sub dec push mov mov pop add gs xchg (bad) jne dec pusha push jp cmp and mov ret sub (bad) lea (bad) lock ja es scas sbb cmp add mov inc out inc lahf insb mov or enter mov dec sub inc rorb xchg jo jp dec inc push push dec cmp stc repnz or inc sub adc fisubrl mov xor rolb in pop mov loopne ret hlt add fcmovnbe ret rorb lret stos sarl xlat out adc push add xchg out sub cmp sub mov sbb sbb pusha cwtl call jb sbb cwtl aam gs gs xor pop inc les daa pusha xchg andb xchg push les xchg ja add and ds cwtl mov scas sbb cmc pop arpl fldl jns in lods mov cld mov xlat xor push mov sbb movsb in jg (bad) mov pop jo mov loopne jmp xchg mov sbb (bad) mov pop loopne jo out mov aad cld dec adc xor mov gs test cmp insl enter and xchg mov mov jl xor (bad) loop add std pop cmp in aad sbbb aam adc jp push mov lret sub mov ret dec daa inc xchg xor in int3 fdivrl jle insb rorb rolb or call mov xchg stos sbb ret mov pop sahf dec (bad) and (bad) or scas les aam ret sub shr cmpsl mov int and mov pusha dec cmp push (bad) push ret loope iret sbbl lock lock je adc arpl pop sbb nop cwtl dec sub adc pop fcomp loopne push jno mov pop mov mov repnz push les pop fcmovbe dec jge xor dec insl pusha or jae lock stos mov in or add xchg js sbb repnz add (bad) dec lods movsb hlt cs push and push mov fiadd pusha pop adc and es pop cs and dec in mov cmpsl mov jge push adc (bad) xor push adc mov add pusha dec out xor cwtl cmp icebp sbb or (bad) int js lea fnstenv pop loopne jp loopne sbb adc pusha loopne and xchg and or ret sbb push add loopne mov cmp jmp fistp pop or test es and mov lea enter ret and xor lea ljmp hlt out and movsb or fwait xor insb add and adc loope out ror pusha jnp mov sub bound sbb ret mov (bad) mov fidivrl cmc das and xorl add push call int and jnp push or cmp gs sbb inc add pop push inc push jp xchg mov in movsb in xchg cmp xor shrb testb pop pop cld lret loopne popa lods fs dec sub pop call and pop pop inc sar cwtl mov pusha jne mov xchg subl in xchg mov sarl adc bound mov sbb ret test mov mov fbstp sbb add push xor shll pop cltd pushf xchg test nop ret and xlat nop mov inc adc popa and pop sbbb xchg sbb inc (bad) aam fsub rorl (bad) in in insl xchg jp and fs popa inc hlt in fbld mov adc inc dec lret roll push rcl es jo,pn enter cltd js pop out and movsb ljmp inc jmp popl roll (bad) or pop inc (bad) mov push dec and sub mov jb and mov int3 sbb xchg mov mov sbb add jl lret popf push or in ja je adc mov daa fsubl or add and aaa loopne loope inc repnz inc mov jg aaa mov mov lods sub cmp je add adc enter roll or popf outsb adc aam sbb (bad) and or push xchg lods nop nop mov daa call jecxz add push test jecxz and mov dec pop das out adc jmp jg popa pop dec jle push jae add or repnz adcl sbb call mov add or sbb add inc push les dec push or daa jl mov add pushf and dec pop pop mov movsb in adc xchg sub je rcr stos and xchg cwtl dec pop insb test xchg mov insl mov pop dec repz jl in add pusha mov aas pop push int3 (bad) repz jmp push and pop rolb js bound mov sarb leave xlat pop push pop mov xchg (bad) mov dec inc leave enter add mov sahf call inc daa jp mov sbb xlat pusha ret dec mov mull jp adc inc in mov mov xchg cmp jno adc sub in sub fildll mov cmp xchg cld inc gs cmp sub lret dec (bad) jp mov fistl outsl adc mov lahf mov adc add jl daa push pslld add adc or mov lock add mov lods ds aad cmp mov imul test rclb popa lahf push jnp inc pop (bad) jno cmpsb xchg les add mov addl clc sbb orb dec add jns push mov dec sbb test add mov and movsb lock cmp push inc data16 addr16 (bad) leave inc xchg add fs hlt das mov add inc out (bad) into mov incl imul clc add push sarl sbb xor xor adc push lahf (bad) jns mov sbb push test out sbb pop xchg adc dec nop or pop xrstors or sub outsl push jmp xchg xor sarl sub movsb and adc inc mov jne cmp std add das xchg pusha add mov cltd insl adcl add mov mov dec nop jge (bad) jb les daa or xchg xchg js mov sbbl sub mov or scas ja addr16 pop notb pop rcrb ja into mov jecxz mov jae dec or add mov nop xor inc inc mov iret adc sbb sub push lahf xchg adc add ret insb or imul xor rclb jmp push mov cmp clc cmc mov lcall push mov mov xchg rcrb mov aaa xor mov mov or push push pshufw dec sub jl push jo cmc stos shrb mov jb mov in xor xor mov sub insl push and std sahf push cmp add inc cmp xor pusha or cs jmp (bad) leave mov add stos lock cld adc or dec xor fsubrs dec add and cltd jg and movsl test cmpsb lea mov xchg inc mov repnz mov lock xchg and (bad) and call or fadds and loopne in xchg (bad) (bad) sbb iret mov jo add jnp out push add test cmp jae xor mov dec icebp dec out adc das decb test pop add enter inc mov jno and pusha aaa mov ret adc sub mov stos in nop mov mov push xor out add and adc (bad) dec scas shll add mov or out jae cwtl and ja or pusha xchg dec adc or lahf mov inc sub add xchg js and movsb dec leave cs nop stos int3 or push mov test dec (bad) dec fistl or and ja mov nop jo inc sub push (bad) mov jp call cwtl hlt jmp mov outsb jmp test mov sbb xchg add std enter push faddl fsubrs insb sbb aas xor aaa out cltd push mov (bad) xor mov nop push call or clc mov lock cmpsb xor cmp jo (bad) lock sti push aam dec pop out mov cmpsb and fsubrl mov in fstpt xor adc scas xlat shl jns jp aad adc je aaa orl add rclb adc std xor jne add sti rorl dec cld mov (bad) mov sbb push dec pop jo fmuls fwait mov sbb pusha cmovl insl inc movsl stos push mov dec add (bad) fistpll xchg and jp js dec and pusha in lock jo or xor (bad) xor shlb test sbb inc xchg cmpsb and movsl pop cwtl pop adc fstpl enter pop stc les inc packsswb out enter xchg add mov cmpsb xchg les int3 xor lret add idiv pop cld mov imul xchg push xorl aaa jne or jmp dec and push dec add loope fcmovnb jp pop rolb les mov call and int mov lds loope loope in xor shl push xor adc es push outsl repnz sub lret nop aas in or cmp int3 push push push les add loope adc mov aaa loop xchg or or xlat or inc gs (bad) lods push dec scas add xor outsb and or imulb cmpsl insl mov and cmc (bad) in cmp popl aam je adc add push dec icebp cmpsb sti es mov cmp or cmp cld cli and enter xchg xchg lods je roll shrl rolb adc jmp paddb pop cmpb mov jne outsb add nop (bad) out inc cmp iret jo outsl mov and xchg rclb dec faddl incb data16 inc (bad) add mov scas lock pop dec xchg andl add cmc cwtl adc imul nop push pop or lock sub stos xlat iret je inc mov adc adc sub and cmp pop or adc mov fcomps popf cmc aad mov inc sbb jle jne pop push add mov ljmp jl or inc xorl mov mov or dec test inc fwait adc push cld movsb test mov add (bad) pusha mul push lock rolb xchg iret push stc adc add nop inc mov insb cmp lahf and fsubrs push dec inc inc adc jmp mov sbb sub xor out pop call push scas push lea push push lock cld inc js cmp pop enter lss pop sarb mov and test mov and mov jns scas cmp lret je popf xchg int3 or mov xchg dec add ret std aam sbb cmp leave mov sub dec and aad jmp iret lret xor scas add jg (bad) mov adc jle ja add sub pop pusha mov add pop and or push cmp mov dec xor and or lret push sbb adc call push lret popa fwait and mov data16 sldt movsb adc push lahf pop xchg fs push and pop cld inc push popf mov ss push sarl push inc outsb dec movsb adc leave icebp bound and cmp in (bad) iret mov push dec shll movsl jecxz jb or cli cmp inc push add int3 test push push sub stc add imul add idivl jno sbb dec sbb (bad) jns in mov cmp pop ret call push in add or push insl sarb ljmp add lret js pushf je inc xor sbb out cwtl fdivs cmp and mov insb shr xor aaa push popf nop adc dec mov insl mov mov cwtl in and rcr adc sub push mov cmp in inc push inc mov movsb in movsb jno add data16 int3 addps inc or cwtl add call cltd inc xor orb stc fimul dec repz hlt cmp repnz (bad) adc mov inc sub fs cmpsl push insb xor shrw sub negl cmp push mov pop (bad) mov xchg adc dec in inc adc pop outsl fs inc and sbb rclb in dec pusha jo jge pop cmp aad or or enter dec rcrb in xor jmp xchg jb iret mov into test andb mov xlat add shrb push lcall nop sub xchg cltd and cwtl or lcall loop cmp and das jo (bad) add dec mov mov pause ss sbb dec adc mov lods test mov mov pop ret inc test adcl lods mov jle,pt add mov cmp (bad) xor jbe add and sbb add cmc data16 ljmp push xlat mov sbb mov add clc mov mov pop int3 mov add jnp mov lret mov loopne out or mov lret xor sub xor ja push movsb push sbb hlt ret inc sarb fmuls add fwait cmpsl stc xchg pop xor xchg sbb fs fsts into or or ss in insb sbb pop mov or dec (bad) mov xchg sbb cld cmp xor test mov xor dec lret inc int movsl pusha leave mov or scas mov insl orb push (bad) and inc lods jb xor jns sub rcl push lock pop cmp push lret or aam xor popf scas pop mov (bad) mov push sahf or cltd push or sti std dec fwait and ret mulb loopne sar or add ja popf inc and repnz hlt inc adc cmc loope ret pop push ror adc push loopne cmp (bad) mov pop mov mov call imul popf xchg and add ret inc and int3 push popa cmp sub fldcw fsubp push leave jne add adc or mov iret out xor fs ss inc inc jle fwait rclb pushf pop inc in andb inc (bad) rcll xorl cwtl push inc rolb mov adc cmp xchg iret dec rorb ffreep pusha add sbb icebp xchg xor out mov sub xchg cmp nop xchg mov sbb jae mov xor mov mov test sbb in cmp add (bad) xchg in sahf push push and sub cld sbbb dec mov push xchg addr16 inc loopne mov inc dec jl rcll sub pop enter push dec cmp loopne cld jl popf fsubl xor inc adc lret mov insb mov inc pop addb xor gs dec lock mov mov push and xor cmp cmp in js test and (bad) out ss jl lock push and lahf or shl je jo mov aas pusha or adc and and shlb inc pop call sub pusha add jns mov pushf cltd xor jle es push negl cmp mov inc rorb and leave add lods xchg or xlat add je jg test adc inc pop jae pop push call imul fs in push sub cmp and push sbb movsb add das xchg (bad) repz inc add inc aam pop pop aam push in outsl sbb loope loopne pop pop cmp xchg rcrb jno das cmpsl cmp roll jno stos add fadds adc jg add fcompl sbb addr16 sub testl xchg adc push xchg jle aam push test dec or arpl je cmp imul add enter push mov push push inc mov rorb out enter incl xor std and and mov add mov fadds push cmp dec cmp adc sbb jnp add je daa fisub cmc out shlb pusha add push or adc adc add leave das xor mov or mov add add jo push xchg mov or jae loop jmp cmp jbe fs push (bad) call pop fwait movsb add sbb movsb (bad) lahf out ss xor adc xor xchg (bad) fmuls inc push sahf jge adc or adc xchg jp add shlb mov xchg popa push mov orb movl xchg cmpb scas mov mov mov jge rorb lock and popf aaa xor fstpt adc fwait pop inc or pop add jle aad push mov sti ljmp mov add cmc (bad) aaa or sub loopne loope in ret sahf push mov aam mov add popf lods inc hlt jl jo popa jo lock jae jmp xchg jno or in push test mov jecxz hlt rolb cs je add fsub movl cmp pop insl xchg push add mov push test mov cmp cmc adc mov es sar jp xor mov pop jne lahf imul (bad) ret lret jnp add xor jecxz adc inc inc (bad) fistp or js arpl inc push loop xchg es lock mov cmc add mov test add ret aam mov dec sahf sbb cmp rorb dec dec insb enter pop or das mov mov clc or and jno rorl pop dec insb nop scas add xchg inc movsl or rclb cmp adc push mov add xor aam out popa adc psllq mov inc pushf gs or pusha xlat and lret int mov or pop xchg imul inc xor xor js sbb and dec add nop sub cltd pop dec mov mov jmp movsb cltd xchg sub pop cmp pusha push out std in or ror pop lds mov xlat pop idivb and adc or adcb adc iret mov outsb adc adc adc repnz and jg in jge movsb add sub mov sbb mov dec pop and int3 xor in mov adc mov daa nop pop shrb dec sbb jbe push mov inc pushf bound nop orb mov jp je das jmp push loopne mov push bound (bad) add adc lock add and cs loopne sub nop cmp rcrl or jns test negl pop dec mov outsl jb add xchg cmp add add icebp arpl add jnp cwtl (bad) lock inc cwtl push (bad) mov int3 inc and push mov adc push cli cmc add enter add ja inc adc movsb jbe mov mov mov int push hlt pop xchg xor in ja add cwtl dec and pop xor daa rcrb or in in xchg push jp xchg sahf subl scas mov dec mov cmp andl bound hlt and cli pop sub rclb leave add (bad) pushl jle inc movsl adc push cld out and fucomp jge daa mov leave push lahf adc mov lret stos or xchg mov or cs mov add jmp pushf bound xor xor push adcb repnz je subl pop test push jecxz jl push frstor aam orb cwtl or jmp cmp inc rcrb pop aam scas and int mov in sbb cmp lcall lods add loopne jne add stos jecxz dec ja dec mov fiaddl mov test jecxz xor test mov fwait test loopne and xor or (bad) fcmovnb push sar add cs aas xor jp lcall jp fildll xor mov hlt mov push sbb jae movsl adc cmp mov and cmp pop inc sub jecxz pop inc pop and pusha push (bad) loopne pop leave in test push xor or loopne sub or xchg loop cmp inc hlt jle hlt dec ja add aaa imulb pusha clc fsubr sub test test dec leave xchg out and call mov push dec inc sub mov pusha cli dec ret adc aas ds push xor mov inc loopne mov fdivs andb add andl test jbe test mov xchg push in dec pop add xchg mov push and daa jo cmpsl pop rorb and xchg add cld idivb add jl push dec push lahf jae inc mov xchg icebp out hlt lret dec inc mov inc adc out aad sub or push fsts push lahf cmpsl nop (bad) jne xchg adc inc adc push mov pop movsb sbbb cmp sbb sbb pop adc and enter sub add in and inc outsb (bad) push je mov ss inc fs cmpsl (bad) adc popf ret std (bad) sub jno icebp add and adc xchg push mov add je loop fs jp pusha push cmp inc jb push xchg mov or daa jbe adc addr16 scas add or stos icebp inc jo add test inc rolb or int3 sub inc out jo sub xor or adc and fnop je nop jo mov inc add xchg pop pop jne push orb pop icebp sub (bad) mov push flds test fisubl push ds add cld leave mov into int3 lock add mov (bad) lods outsb and pop sbbb inc ret sti jns dec mov sbb or pop fisttp push and decb adc pusha sub inc mov pusha push mov push (bad) cmpsb (bad) das mov mov mov inc add ret dec dec pop imul mov and mov and inc mov leave and add call dec in call mov cmp sub jns ds or lea repz add dec lods fcomi lods cmp jns push mov and test sbb pop notl pop or and jnp enter xchg cld lock jle jl js push bound dec popl test adc lock push arpl ljmp cmp sbb shlb fwait adc add and loopne das push cmpsb mov xor sbb pop sub xor push repz push lahf add pop pop sbb xor push pop popa incb and pop jno retw stos cwtl out mov sahf sub into and aad and jnp rorl test mov adc xchg pop pop cmp (bad) addl (bad) lock scas pop inc repnz push pop mov and fdivs add fwait jno mov sbb mov pop inc jb and jno push test repz or in cwtl fldcw adc mov jge sbb mov push sbb js sahf push mov sahf sbb jo loop es in jno popl test or inc mov movsb cmp imul and cmc dec push xchg shlb dec popa sbb xor dec mov or mov imul cmpsl mov fs xor push into xor xlat cs (bad) lahf pop jae fmuls pop stos mov jmp cmp add pop lds or mov and push xor in or sahf pop add or push jae shll dec cmp cmp or or rcrb jle movsb xchg sub jl ja push outsl or mov aam sahf add push push and mov push inc pop add jmp sbb pop xorl dec fadds outsl push xchg hlt sbb jns rolb jl push xchg push addb fsubrp icebp adc cmc add addr16 xchg pop ds or fidivl xchg cmpsl jl add jg,pt mov fs jae sbbl mov sbb dec dec lods and hlt jl hlt pop inc fnstsw (bad) test inc movsb das nop mov dec jnp rclb jo xchg jl pop out sub outsl jnp jl dec out ss mov hlt fwait cmp add mov and scas add test add imul (bad) cmpsl cwtl sub cld add adc aam push add flds lcall test (bad) int3 cmp les dec add pop mov cld cmp cmp push sahf ret add or inc loopne jg adc mov inc lock add mov jle arpl scas dec repz popf aas sub nop mov mov adc (bad) dec dec add movsl add nop ret addb xor bound rorl mov mov mov push jb and adc je scas and lcall sbb lds mov xor fisub lahf mov lock dec in sub nop add mov in enter push out imul test sub add out push or mov and sbb into imul and add sub mov cmp push push xchg cmp incb (bad) icebp cmp (bad) dec mov add sbb add sub jg sbb and inc mov imul dec fstl sbb (bad) or cmp cwtl adc jle add lods addr16 das cmp adc std pop (bad) cltd sldt iret mov (bad) push movsl jecxz les sub sbbb outsl arpl mov outsl add pop xor mov and jle pop aad mov (bad) jb movsl aad push xchg push (bad) pop inc cmp std nop jl xor mov pop lahf adc lods mov ds cmp push push inc dec add mov adc pop xchg arpl mov pop cltd out in in inc in test push imul nop mov jo sarl loop mov or pop bound cmp mov jmp xchg mov mov push cmp nop shrb xor mov mov cli inc jl add mov adc jge out push clc mov into xchg mov cmc cld add pop jg int3 xor dec push sarl lds (bad) cmc cmp pusha xor nop mov cmp adc lods out or cld or pushf ret hlt mov lcall add test arpl push mov add xchg inc ds jmp enter sub lods sahf icebp movsb add lock lret gs imul cmp neg mov imul jp push mov and pop notl (bad) cmc dec jmp lret mov cmp stos movsl pop inc hlt xchg in inc rcrb add arpl push adcl or add out cmp adcl adc mov aaa sbb sbb push mov fwait mov clc mov insl cmc jle xchg sbb pushf xor ss mov and cmp pop pop mov push std test or sub fcoms insl in add repz cmp mov jo insb sub lret xor add xor rclb addr16 js cmp cmp or xor lret out jno cld push sbbb adc inc in and inc and or adc int3 cmp push jno xor add pop cmp hlt adc pop push pop jge in adc or and daa pushf adcb mov loope push lar xchg pop add add jge jecxz cmp mov cmpsb mov sbb cltd push inc lret (bad) dec mov movsb mov test jl xchg push enter or mov dec jecxz adc lods or jae lock nop cld fldl shr clc adc cmp push sub js pusha add mov adc add dec push push jp push jnp push inc call icebp pop sbb popa popa push mov or cmp mov pusha loopne call fwait xor xor mov push jb popf test and dec cmp add jnp inc jecxz adc (bad) pusha or mov mov cmp std int3 mov push or test nop push mov and mov mov pop std sbb mov cltd lahf inc rclb out (bad) push sbb jmp sarb add xchg cltd pop xchg out (bad) mov repz xor addb xor rcll sbb cmp dec adc mov lods call hlt icebp inc push int3 dec fcoms test ret add pusha dec pop addr16 dec lret test dec enter or dec inc push push sub lret push adcl mov pop movsb or inc cmpl fwait lods jle mov push aas adc loope test mov mov pop dec pop jns in xchg lahf mov movsb cwtl mov cmpl lds lods lods clc add jmp addl js sbb cmovno inc lds mov pop aas call and lock (bad) pusha add inc cmp in pop jno adc sub rcrl jp popa pusha cmp xchg repnz cmp cmpsl enter jp add js jg sub dec sub sbb mov and fs or repz xor xchg clc add loopne mov fsubl subb imul insb xchg pushf lock push inc call add push repz jge add test mov pop sbb cmp mov jl dec in lock sbb ret cmp mov mov rorl jge lret xor fwait sub jo jno add inc clc stos push idivl push xor mov lods dec cmp mov jns mov adc pushf les fwait adc adc ret and add lahf pop xchg push pop les sub in enter and aas call mov mov xor and pop adc mov data16 and lahf mov adc cmp in mov xchg xor pusha mov and pop sbb mov sub adc and jecxz cmpsl test mov cmp call xor xor mov cmpsl mov mov sbb push dec jo je xor nop pusha lods addr16 test pop dec fsts (bad) int call lcall fcoml mov adc xor shl xchg je mov push aam fadds mov hlt aaa (bad) mov sti sbb loopne xchg push or xchg movsb push inc xor (bad) popa loopne adc sbb imul sub or adc dec shr (bad) xor insl push push lods fprem1 sub bound add stos call insl scas sub test sti add (bad) jp push aas cmc inc fwait or push push adc nop add clc pop nop in icebp add mov adc clc cmpsl rcrl or (bad) gs dec fsubrl shll nop push aad pop mov add lret (bad) xor or add inc into iret mov shlb inc cmpsb nop cwtl call enter push adc pop pop aam aas out xor movsl push jge (bad) std push pop adc sbb into jbe add clc push jo mov ja test mov mov scas ret cmp mov push xchg repnz js or iret dec xchg out cwtl add arpl mov xor sbb lret hlt pop int stc decl or cmp or adc cmp iret mov push push cmp fs test leave add test push push add test sarl int3 xchg int3 mov fwait pop cmp notl push mov sbb leave enter ljmp in mov jo (bad) push adc add sbb fcomps inc add lods mov mov cmp mov mov sbb xor jo adc pusha shlb adc fcomp jecxz or or xchg mov sbb xchg mov sbb mov jecxz add mov js cmp dec xorb pop mov data16 or inc (bad) loopne js dec pop mov mov and or dec rclb sbb jne add pop test xchg mov pop inc ret add aad fild push jae push cli lods int3 dec in cwtl mov add push inc add arpl sbb outsl cmp call mov lds lahf ja cwtl push mov pushf pop adc and push ret mov mov xchg jmp (bad) mov mov pushf fwait and adc std pop add cld add es loopne test mov arpl sbb loopne clc or cmp lds pop arpl (bad) scas push mov movsl clc xchg por mov pusha btr lahf mov adc icebp cmp mov in andl mov or add jge and loop push les jnp,pt add outsb imul in mov mov pop sarl jns jecxz mov repz stos int sub add add xor notb xor push mov lret xchg (bad) dec and movsl xor cwtl ds push lods fiadd adc add ja insb pop mov jge test (bad) les pop popf or xchg sub inc mov inc mov ljmp gs out roll push cmpsb in (bad) enter dec cmpsb add sbb push fs and (bad) and push cmp dec lret lods enter hlt arpl jl movsl pop sub lea push cmc js xor cltd cmp mov and leave sbb hlt fcoms sbb sub cmp jo imul add or mov mov into or pushf addr16 jno,pt add aad int3 out xor adc jo (bad) pop jne mov or movsb jmp xor dec sub add cmp hlt (bad) jo ficompl cmpl inc inc sbb rorl fldenv jle xor (bad) movsl iret aas and lea mov mov add icebp insl jb jo cmp cmc cmpsl sbb adc movsl pop nop push jmp cmpsb out fisttpll mov dec setbe je or jb les fdivrl clc mul je sub jl xor dec inc ret jbe lds cltd movsl adc sarb xchg fs dec testl mov or faddl les addl cmpsb cwtl andb cld xor cmp mov test lret nop push inc cmpsl (bad) fs stc clc cmp lods or mov aad sahf push sbb or int3 or (bad) mov mov jmp and and mov aam fist add dec shrl dec sub adc (bad) int3 and push fsubrs pop inc (bad) or call jge mov xchg lods ljmp fnstenv loopne insb inc lret mov cmp and pop ja add push lea add add in rcr aas stos cmpsl cmpsb sbb popa sahf push idivb cmp jb mov sbb mov stos and nop jl andl xchg test aaa clc (bad) lock pusha fadds add scas insl dec push loop gs xor fadd imul mov lods pop fldl (bad) add test xchg cld dec call ret sbb lret ds in sub mov lret stos scas mov enter sbb fidivl add adc iret and out sub cwtl test jne jle std and mov mov adc test lock push call add inc lahf (bad) jge jne xor inc ds sbb and or mov sbb xorb in xchg stc cmp xor sbb (bad) jo mov fldl jp add repnz mov pop stos stc sbb lea int cli push sbb mov push add mov imul push pop dec push or jl mov mov in or inc ds or addr16 mov (bad) outsb or xchg shll jl adc inc lcall das mov repz sbb (bad) or clc gs dec adc mov aam push add cmp rolb out dec addl xor lods inc sub pop xor inc sbb clc cld mov cwtl mov add lcall jo jle add add loope inc iret jbe test pop rcr enter arpl addl dec popf out ret addb sbb mov jecxz sub fs or nop xchg pop sub xchg je mov ficoml or xchg les or xchg iret popa push shl repz push addr16 ret add (bad) mov dec mov sbb dec pusha dec mov test adc nopl dec aam push test push cmp pop adcl insl ret jbe test fsubrs js push stos inc xor push in inc add fs dec fnstsw orb adc inc (bad) loopne or js test bound inc ret icebp stos or cwtl out or mov cmpb out (bad) enter andb mov test int and mov inc dec in loope jb sub ja add mov mov add insb pop and jl cld and adc (bad) cmp and mov add inc fsts xchg xor add adc inc jmp mov aaa shrb or dec dec fild jne push popf mov add push add pop in or pusha sbb add je dec push fistpll shll iret shlb andb and inc lea cli pusha pop push dec fnstenv inc test jno lcall sbb cltd les enter adc mov sbb sbb jp pop jl sbbb imul (bad) dec ss or inc inc ret sbb mov loopne in adc inc in jg pop mov push das mov (bad) popf ffreep js mov mov cmp in inc aas cmp fmul dec jnp sbb loope std xor mov (bad) lock pop loop int3 cmp jbe inc ljmp test lret cltd (bad) test sub test pusha test jp sub add dec imul jle cmpl jo xchg movb cmpsl mov push lods les xchg into cmp or sub inc mov and pusha nop sub mov jb cwtl in xchg cltd add adc push int3 pop add push and mov out mov xchg add cltd add and xor adc pop pop xor or cmpsb xor out pop xchg jae nop inc lahf push mov out test jno enter pop jp push mov stos jb les adc scas inc add int3 pop or dec inc cmpsl mov push pop lds push xchg out (bad) push add shrl xchg fsubrl enter (bad) cld cs hlt popa and int xlat and aad cwtl repnz outsl fwait test and je cwtl sbb nop pushf and push adc (bad) and push movsl xor int movsb or and popf dec push mov dec and fnstcw add mov je add xchg dec insl push sub test mov and add test sbb sbb add sub push clc or add mov and sbb jo aaa jns pop stos or ret int mov jb fsubl sti mov push dec lea add dec pusha mov lahf pop inc cmpsb sbb aas inc or inc test jns out inc mov push push adc inc mov popf (bad) or jb sub cld add jbe jl push inc mov push jo push inc test add and mov sbb fnstenv ds or adc insl (bad) (bad) xor dec jecxz and add inc into (bad) insb cwtl dec mov xor push daa pusha jg lods sbb jbe inc adc sub popa jae ficompl js mov mov or jp mov lahf dec sbb scas mov xchg mov jle shll mov xor ret add pusha fxsave pop std xor xchg jl add xchg dec pop cmp dec andl xchg js fiadd pop nop pop jl mov or rclb adc cmpb in cwtl add stos sbb cltd add fidivrl push movsb xor ss inc sub add xlat or add cmp ficoml sti lea cmp dec inc dec cltd adc push inc bound and add add sbb dec ror add cmp dec loopne sbb pop outsl mov add inc mov pop pusha adc scas xor mov fiaddl (bad) push inc les xor nop xor (bad) dec aad hlt imul cmp and lcall cmp add icebp out or sub rorl inc cmp xchg add mov notb les cmpsb xor andb (bad) dec jo imul bound sahf add (bad) mov (bad) lock mov and lds and sbb adc into xor leave cmp xchg mov jo fs pop or push (bad) mov adc hlt je xor xlat add xor fldcw daa cli shr rolb out sub sahf fdiv pop jbe cmpsb lods shlb push mov std fildl or mov push addb dec xchg sub ljmp insb in out jl fildl sub (bad) add push out loopne mov or bound or mov push movsb insb movsb push xchg cs rcrb dec dec scas adcb enter (bad) movsl pop adc test or jns cmc mov mov jbe add and or cwtl test (bad) outsl imul stos dec push adc sbb mov xor push stos cmp push or xor scas inc adc hlt jle insl jb inc pop jmp fidivrl popf js push test (bad) insl stos and sbb mov dec add dec mov or sub pop sbb adc jno scas loopne rcrb add cmpsl in lahf sbb and dec adc std and add adc add je mov push push frstor data16 push add mov loopne rdtsc fisubrl xor pop push mov push or or pop add or push mov mov outsl sub pop stos push jge mov push mov pop pop jb scas (bad) or shrl addl pop jo push andps ret mov addb adc xor push or add inc xchg pop ret cmp push jl adc sbb (bad) cmp adc orps out (bad) test push cwtl xchg pop cmpl inc or add or sbb mov pop and loope roll mov pop xchg sbb sub sbb mov mov push shr jecxz push (bad) int int pusha sbb fdivp (bad) out fidivl pop xchg jmp lcall mull (bad) fbstp push enter or sahf enter add xor cwtl jp push and sbb neg pand push je outsb sub into xchg insl stc divl push test or lret mov es in loopne cli data16 or xchg or mov mov jg pop cwtl add sti cmp inc bound add fcomps call xor leave or in xchg xchg inc mov inc int or pop push cmc xor xor leave or adc dec push or and xchg scas js pop mov jle pop push (bad) push cmp add addb pop adcl jl mov loopne add pop jmp pusha xor mov sub xchg or xchg jp jg dec fcompl loope icebp mov push pmaddwd cmc iret sarb xor jbe (bad) daa push loope pushf push stos int add mov sbb dec mov arpl add in inc roll ds lret lcall cmpsb es out pusha fsts push pop test dec (bad) jns popa push cmp xchg lock pop pop sub cmp xlat cwtl pop dec push mov add outsl in out addr16 pop mov neg add or insb addr16 repnz push push mov dec inc adc int xchg xchg mov push push call jb lret cmpsb xchg inc out das xor jb stos inc xchg and bound mov pop in mov xchg or lcall sub pop enter cmc and inc movsb pop enter push push add testb and push dec (bad) inc dec ja push idivl sbbl pop jg mov inc in jnp lret es pop and je nop xor cmp push xchg inc push pusha ss repz fildll test lret jg (bad) adc and popa pop pop into add jle mov ljmp push mov mov add loope and rclb xchg cmp in aas mov cmc pop (bad) and push xchg aam mov push and mov pop sub xchg out lcall ja xchg jl std jmp hlt movsb and xchg jns mov and mov test jbe add notb fistpl jo pop lods das pusha adc pop jge or and and mov fimull cmp (bad) out add (bad) pop xor xor adc pop sub push stos mull jbe add jmp mov pop xchg push xor (bad) not in and pop cwtl mov sub fs (bad) push mov mov add or inc mov jecxz ss xor movsl js outsb dec mov test stos test or mov ja mov das or hlt jno push data16 call xor ja xlat add pop xor enter or push lock adc add dec outsl push sub dec (bad) nop fnstenv jnp push inc push push das inc sbb fwait mov inc call mov mov or fildll and inc inc mov and push mov mov or adc xchg jne fucom int push cmp cmp out adc dec movb cmpsl mov mov iret mull or dec pop shl xor or add pop loop sbbb jmp xlat xchg push adc add xchg jmp pop jae rcrb mov add out jmp dec je mov out sti pop xor cmp into les pop or fucomip daa pop mov repnz pop xor dec incb sarl xchg cmpsb ljmp inc xor jecxz inc sbb sbb jge mov sub jmp inc ds lahf out pop lcall ljmp push push xor pop out loop loope out add sub jg aaa in aaa add mov sar fwait int std leave sub addl and xor push mov out add shr inc shlb js add arpl dec pop cmp testl xor fsubrs dec inc sub lea (bad) ffreep push adc adc int3 xchg xor cli push movsl or pop aaa xchg rclb sahf pop js incb shr rolb mulb sub jle repz pop sub mov test sub cwtl or and daa push pop sbb xor fadds ds cmpsb push xor push scas das and sbbb pop lock or pop or daa mov ret arpl fbstp pushf shl push pop pop and mov (bad) mov shlb xlat cmp add mov push aam pop add rcrb xor and jnp addl sbb jmp in adc mov and test adc sub fnsave aas arpl pop mov cmp loopne dec jno adc mov decl frstor fidiv xchg daa sbb dec pop subl and ret pop mov xor push ret add pop sub jmp sub xchg test je rol xchg unpcklps adc dec sub bound xor mov push insb and sbb inc push ret inc jp or lock mov mov push pop sub adc mov add push in push jb mov call add jl fistpll sbb inc mov mov pop (bad) into loopne pop pusha push sub mov js add imul jae add ret aad add adc dec aas push add sbb out mov in push insl loopne fsts xchg lret adc fidivr idivl aad les add xor push mov in pop sub mov dec mov or inc (bad) popa sbb jl (bad) sub fistpll dec lcall or inc in mov mov sub add push fsubl str xlat test mov cwtl add lods mov cmp out mov stc mov rcl xchg xchg cmp ds add cwtl cmp mov dec sub jne add cmp popa push and inc ficoml add iret xor imul pushf add pushf jae nop inc sbb or divb mov mov ret out lods scas aam sbb test test test add fist mov mov sbb mov xchg xchg add out lods popa xchg cwtl adcl add arpl mov movsb push jno xor int3 cmp sti xchg mov sbb out dec sbb loope mov xor in arpl push inc mov fnstenv (bad) out xor cmp cmp push mov inc pusha inc push ficoml dec jo aam sub push test fdivp adc loopne mov jns call sbb popa sbb inc xchg adc sbb loopne inc and or push sti jae in pusha and out imulb ror clc lahf sub andb xchg adc add (bad) test dec ljmp andb add push cltd mov in push mov add adc inc jge push in fdivrl aaa xor push xor add or cmp mov and loop or mov and js out jno jle in clc mov idivb or xchg cmp in mov add mov cmp orb rcrl mov leave gs jno orb or insb jge pextrw shrl mov mov mov js dec adc adcl lods ds dec adc out and mov leave mov lock add pushf fbstp jo mov adcb mov mov pusha or add push cmp cmp adc out test or add ss les enter out cwtl add xchg adc ds aaa sub sbb add mov clc push push xor sub enter fdivrl es repz cmp inc test dec enter aam sti mov lods or and xchg or insb inc cwtl loopne lods data16 and fidivr and aam xor cwtl js xlat adc mov sbb jmp rcr test or mov roll pop data16 adc mov inc add mov cmp inc pusha cmp jbe pusha pushw mov push cmp test or xor int3 fmuls pop cmp int inc mov sbb pop lret and add adc cmp add stc scas (bad) inc and aam push jl movsb push and aam xchg in sarb adc mov adc adc sbb adc clc out sub ret jl mov in pop ret shlb popa subb and push mov push call xor inc mov mov test adc js add pop cmp cmpsl cld or mov pusha call and lea dec in jle mov fiadd and inc nop adc lds mov inc sbb dec and push shlb aas mov movsb adc inc (bad) mov or pop leave jp sbb pusha cmpsl adc mov mov clc jmp dec push hlt pop push (bad) sbb movsb push adc inc addl sbb test jge fmuls add (bad) xor cmp dec ja test cmp rcrb stos je loopne and sub cmp mul and idivl inc pop and out movsb popf out (bad) push cwtl sbb mov repnz mov sub xchg cmp insb ror inc orl sbb mov mov jl call mov cmp fnop and sub js dec jo popa in xchg add adc xchg xor in cmpsb inc sbb mov cmp mov es les mov and out xor jne xor pushf (bad) movsb push xor mull sbb jae or push and movsl dec lahf jnp mov fsub sbb mov mov xor mov mov sub int inc add aaa adc add cmp pop adc sbb sti (bad) sbb adcb test sub idiv add sub dec test cmp test pop pop mov cld adc cmpsl leave and pushf mov out addb cmp (bad) dec xor push pop (bad) mov mov jle fcom inc int3 stc adc adc lea nop dec add jns mov loope add and popa out mov js int3 inc xor sub xor test mov sub lahf adc adc cwtl xchg adc inc test xchg dec lock and addr16 cmp mov loop xor sbb pop adc testl out test add data16 pop adc fs xor inc xlat adc insb adc pusha punpcklwd sub push xorl popa or and (bad) popa out shrb sbb cmp cmp pop or test inc mov rclb mov mov sbb jg push in aas ss mov ja sbb mov adcb push dec add push add xor dec jne in pop cltd push dec (bad) rorb iret adc fs test mov rcll xor imul pop movsb adc sub out mov cmc lcall mov out ljmp test or inc imul fbld mov xchg inc adc dec movsl adc jbe cmp cmp mov (bad) jl scas lret or sbb insb incb les (bad) sbb pop (bad) mov shrb add adc cmpsb xchg add (bad) movsb dec aas rorb sbb push mov inc mov cld out jl sub mov and test in pop cwtl test mov dec rclb addb pushf or mov nop dec push inc jecxz ret pop ret aas jecxz jecxz jecxz loope mov add fcomps mov rorl cmp nop adc dec push insl rdmsr add mov inc jle enter aam xchg test cld iret fild add test sbb xor and in (bad) jl movsb (bad) cmc add dec lock push adc jne push cmpsb pop and mov repz lcall mov fdiv dec imul lahf mov aaa add pop dec arpl add pop stos popa pusha pop xor xchg repnz mov pusha sbb pop lods and xor and dec add pusha ss mov push xor add pusha and cwtl dec push add pop sbb call aas in inc sbb or clc jle mov loopne into cmp add fsubl lods scas sub clc inc jmp mov loop mov inc or sahf xor sbb (bad) arpl enter cmp insb add (bad) mov cmpsb inc mov dec xor fldcw inc cs arpl insl push clc js mov std ss push pop pop mov outsb dec in les mov dec popa call mov bound pop xchg fucomi adc sti jl add mov dec shlb add mov sub add movsb sub fldl jno daa add cmp js push inc in mov inc mov iret push xor test and movaps ljmp add popa push push dec adc clc aam insb add dec out ret loope andb loopne xchg nop push sub shrb icebp mov mov push out hlt inc cld lea inc test test mov mov and ljmp ja test inc or or add mov dec or add and lds pop mov sbb xchg push aas jns inc fsubs or push pusha je pushf test add pop jmp mov and clc mov repnz sbb cwtl dec (bad) xor popa mov add into push bound adc xchg xor int3 adc enter ret call (bad) inc or lods gs xchg jp push mov dec push sbb pop fildl add xor push cmovl sbb movsb mov pop push add repnz push gs mov mov push inc xor mov sub fiadd inc test push xchg lcall push nop pusha mov stc mov loopne fdivl test faddl add mov popa bound hlt adc dec pop mov push xlat add jp and mov mov popa mov lock into mov (bad) cmpsl je add xchg push jb jle nop adc inc movsb bound mov and inc addb dec (bad) mov nop cmp mov push int cmp andl fdivs leave dec es andl mov fisttpl mov and imul stos ror (bad) xor es fidiv cmp mov add in mov jmp ja dec scas cwtl mov rcrb (bad) jbe add add dec cmp stc leave subb loop dec lds mov (bad) fisttpl dec test aaa cmpsl loopne push jp test lret xchg pop mov jnp imul mov sbb pop repz pop or in inc mov cmp aaa and sub mov out call pop roll jl adc loopne ljmp scas cmp push dec das lret dec adc pop icebp xchg add inc cwtl idivb push adc push and movsl jae cltd inc add out rcll or jecxz imul aas scas inc adc (bad) sub jge sbb mov adc out push xchg (bad) mov in sbbl cltd clc icebp and pusha cmp movsb push mov mov out add pop je out js adc idivl fwait lds nop int cltd jge jbe mov mov add mov dec push test sbbl sahf lret sbb sbbl xchg inc les arpl insl mov sbb jnp sbb pusha xchg fild nopl jo lcall shlb sub imul mov dec popf sub js pop iret ljmp cs shll mov sbb pop jb inc jo outsl (bad) lock (bad) fisubl cmp aas sbb imul or fsubs adc jae dec and sbb (bad) xor sahf (bad) add mov sub pop sar and pop jl cwtl dec test (bad) cmp popf dec dec fisttpll mov add cli (bad) mov sti pusha xchg sub dec sbb pop add fstpl lods xchg cmp es out js fnstcw jno cmp sbb jnp das shl xlat and xchg gs xor addl js aam das push pop sub pop and aas mov aaa sbb cwtl mov mov lods pop js rolb mov jg lock or adc or sbb push sbb lret xlat adc adc and adcl inc rclb xor jl scas add lods add dec fiadd hlt call fnstsw dec shrb ltr sbb jns pop (bad) testl push pop sub jb push subl repnz scas sbb jge mov cmp ds sarb xor inc daa ds sbb mov adc cld fstps cwtl push lock jg movntq out xor hlt sub loopne in fcomps inc lret ljmp cmp pop (bad) out adc aam mov arpl mov aas or and inc sbb lcall push popa and xor jno repnz fisubrl push cmp test and outsl mov add xchg movq cmp scas add adc xchg jo js leave mov or or rorb or or adc rclb push xchg add adc test pop mov cmc push (bad) or sub test loope mov pop nop je xchg xchg arpl dec and mov jg sub mov xchg push in sub fsub mov inc nop sbb test cmp pop and dec or add popa pop call aad mov rorb fsubs in mov sub enter je dec ret and daa fmul ret add insl je les adc mov add xor mov mov test je shlb arpl (bad) or fwait bound cmpsb add cmc inc aad sub popa popa out sbb adc add pop mov aad jl aam mov push mov pop add leave inc enter ss or add jne movsb leave mov iret cmp push pop push xor xlat (bad) int3 jl push add and gs add push test aaa sti popa cld xchg adc xor add imul les ret lock or xchg mov orl jg pushf lds divl movsb aaa js xor fnstenv cmp adc subl pop xor jns shll push stos popa pop fisttpl test (bad) dec call xchg add mov arpl loopne or mov or add repnz push hlt lcall int3 fwait mov or js dec push aaa xchg or mov jmp movsb jns push cmp (bad) and xor cmp push jno pop inc lods adc dec sub push (bad) lock adc dec cwtl adc movsb cmp adc push pushf or xchg adc pusha (bad) je bound xchg lods sar add out js push and sub inc xchg cmp sbb mov xchg add int push mov inc inc aam cli xor movsb mov nop je clc rolb add out je call rcl or test inc roll cld add fwait jp pop cli out and mov or or adc lret add xor push xchg cld cmpsl inc xor or mov aam popa pusha fdivrs dec cmp pusha adc mov add lahf dec test add xor inc call notb and outsb push and cmpl movsl sub hlt ljmp and (bad) ja adc jne and adc and sbb xor test sbb and ret cmpsb push mov cmp pop mov enter dec stos popa cmp jae add sub and mov movsb adc repz add in negb add mov mov adc mov movsl push pushf repz and add in push cmp orb mov dec icebp fadd movsb and add xor popf pusha and add cltd repz adc test sbb cmpl cld mov xchg loop dec inc or adc jno pop or sarb cmp daa lahf dec push (bad) lea xor adc mov nop xor inc test dec addb push inc lock pop gs pandn sarl mov aad adc sbbb add lods sysexit mov mov sub stc clc add adc xchg test dec add add mov sub loopne add in lds fxch in push ret int3 jl jge div or fs pushf inc adc out popf push movsb out pusha jo daa or add out inc (bad) loop xchg call clc sbb into shrb subb call test bound lahf out add inc sub movsl int sbbl lcall ss and inc rcrb sub inc mov mov or (bad) fildl xor sbb adc mov std xor int3 sbb ret inc add ja inc fldenv add xchg mov add and jno mov inc mov (bad) push stos add imul add out ljmp push adc in (bad) xor fistp into imul test test test push push xchg inc loope lea add movsb rorl jo add fiadd push mov pop por push sub adc ljmp js loope loopne mov mov add push roll xor push inc daa xchg push add sub dec push sbb gs and mov add imul adc addl push jge outsl mov popf (bad) rolb mov jmp cmpsb cmp pushf loope lock mov lods mov pop sbb addl sub jb push mov add into bound xor push jge jbe test mov fnop lea mov mov test es (bad) fstps push into das cwtl arpl call cld sub sbb add das sahf mov add or test sbb adc mov sub push enter dec mov xchg lea rcl outsb sbb mov adc or or mov addr16 and mov pop es jmp mov adc clc push arpl inc orl inc sub sub int3 clc cmp add and inc xchg (bad) jmp mov sbb adc int nop fistpll ret negb sub pop and pusha in xorl (bad) inc lea sub imul mov ret movsl xchg or mov and mov adc xchg test xchg hlt mov sarb rclb ss push or cli jmp push mov mov push and and imul jbe mov pop push imul add lahf and and (bad) enter out jmp imul popf jno lds mov fsubrl outsb rcrl xlat les add nop cmp call cmp subb dec aaa pusha mov popa or mulb jl or pop jl fist inc xchg loopne nop aam fmull hlt adc mov dec sub cmp mov mov mov mov mov cwtl pop add arpl jmp leave add and mov xor ja cmpsl mov insb and fadds add dec in dec jb mov (bad) rorb call and sbb xor dec push push fidivl mov je push loopne pop repz int pop sarl icebp popf pop pop xchg or xchg sbb and mov aam mov (bad) aad daa jmp add inc out fmull movsb add jne add xchg movsl xchg cld cmpb and add mov jp pusha mov jnp hlt mov push cmc stos mov add add and shlb mov add movsb lret loopne push sbb adc sahf fstl sbb roll add (bad) js int pusha inc add cmp lahf push sub push sbb mov (bad) adc mov out mov arpl and jg mov fistpl add mov sub hlt ja lret rorl ret lods mov push aad movsl mov lock pop add pop mov das aam imul inc push int3 push add mov aam gs movsb mov inc and mov push and add or mov cwtl add push sbb arpl in imul add xlat xchg loopne mov xor ds aad nop fldcw rcrb sub cmp (bad) adc push arpl or and or cmp aas pop cmpsb add out sbb jns push pop cwtl and paddw cli pop lret adc mov push pusha inc or push mov dec dec fildl cmp addb (bad) in and push sti sbb je sub out inc lea cmp and js mov mov inc sbb xchg jmp push sub imul sbb call adc or mov cmpsb cmp xchg cmp xchg pop bound push pop add push test cwtl jnp gs js dec dec pushf dec pusha test mov and pop mov and adc jb dec mov and ljmp nop je call aad out adc xor push aam lea add pop xchg jl pushf movsl pop inc and xchg xchg mov or add ds (bad) ja cmp mov popa xorl or fwait sub xchg dec and (bad) int3 test add int mov or dec xor call out cmp lar lock lds and push or cltd stc cmp ret and cmpsl xor or mov fdivs add xchg rol dec hlt inc mov or (bad) xlat test rclb xchg test leave test add jo cwtl fs dec pop push fnstenv (bad) in daa xchg push in ret test push pop add shr pop aam shrl insb add movsl mov jae pop and call and in out sub push dec cwtl cmpb adc in add jb mov add jmp add adc or scas xor or add pusha adc adc and or orb out mov mov movsb cmp lret mov lea in fcompl scas add push xor jo xor movsb xchg adc stc hlt mov ret or pop repnz push add test clc addl sahf jno xchg in (bad) xor xchg cld adc adc lock mov mov sub aas and and pop icebp frstor xor push sub mov cmpb or loope shlb jae daa subl ret loopne gs push add xor xchg or mov iret pop insl pop test mov movsb dec pop (bad) je sti in push pop cwtl js ret nop ret add inc mov add push dec add (bad) or lock adc mov sub mov cwtl cmp dec jb add dec xor xchg clc std jo,pt js adc data16 imul dec inc (bad) insb fdivrl test jl pop mov mov orb add sub add push mov pusha add sarb rorb inc sahf imul xorl daa push xchg push insl mov int3 jo sub cwtl lock mov clc hlt icebp in outsl clc dec clc in sbb pushf cmp sti cmpsb adc mov mov pop into add push sarb sbb dec movsb inc stos push or jle or inc into pushf xchg jle pusha in jge xchg jmp cmpsl lcall add int in jle xor int3 (bad) sbb sub add jg scas js add jo push push mov sbb add mov push cmp pop (bad) cmpl sub dec or mov testb cwtl imul clc lock xchg dec sbb aas mov pop mov inc adc test hlt mov jmp add enter mov xor pop dec mov in mov push mov loop pop cmp call ljmp push pop push lret adc ds sbb sub cmp and orl lds mov call inc pop out pusha dec (bad) dec dec xor shr hlt xchg and jle xor push js xor ret addb add pop inc jae or adc mov sub push or or jl push ret or es dec or cwtl (bad) jg add mov aaa pusha (bad) sub xchg loop dec enter lock mov hlt clc xchg int3 (bad) in je pushf sbb xchg cmp pusha pop in mov mov fidivr mov fmuls fcoms add sbb aaa pop ret lock adc fyl2xp1 mov push movsb mov adc lahf sub mov movl mov enter loopne mov lcall nop sub or and push lods les and mov scas and stos enter mov or lods movsb mov or jno mov adc mov dec dec add jns nop inc loopne (bad) in test flds nop xor sbb push xchg cwtl cli jno ficom pop push adc call shrl outsl test fcmovnbe push dec mov int or adc pop cmp push test and test xor shlb add push cmp mov sub cmc sub dec xchg pop add stos sbb jns nop in add xor cwtl mov nop or out inc sub cwtl push push in pushf popa xchg cld movsl or add mov insl push mov fwait and mov outsl (bad) xchg lahf or mov dec movb push outsl inc inc inc jbe,pt cmpsl inc orl cld pop sarb and fdiv out dec movsl add jge sbb lea mov adc push xchg and cmp cwtl adc nop xor enter pop push and call std mov out add outsb in jecxz sarl cmp jle xor pop gs mov jle sub add xchg (bad) je add cmp int testb adc dec js call rclb rorb bsf cmp jle or enter imul inc and add sub cli shlb les pushf adc and push sbbl into imulb repz sbb or icebp lds jmp je sub add (bad) mov out or pop jp sbb and dec cli inc push sbb iret inc pop adc div jns sub mov sbb and push push mov pop inc adc add mov dec cli adc icebp xchg jae pop in sub dec push xchg insb xchg test movsl (bad) cltd push cmp inc out xor fwait and or lds mov cmp sub cwtl adcb cmpsl rsm push mov adc pushf sub or stos call or pop cltd mov out ror cmp add inc lods jnp sbb aas bound xchg in dec sub js mov fsubrl loope int inc push mov add (bad) popa lods in outsl fcoms sbb mov andb (bad) mov les inc jae jge fimul or notb loopne adc jbe mov push in or pop mov cld roll sti mov std imul or popa mov hlt add mov rorb or rcll lret sub pop sbbb mov sbb fwait in andb rcrl xlat fcoms xchg sbb add jbe fist mov stos jle mov jl sbb add ja aad cs lret add mov push pusha cmp adc pop push jecxz loopne xor (bad) and dec jns jle out add pop dec aas std leave mov mov pusha imul (bad) imulb sub enter cwtl call pop pop arpl dec inc in rorb negb and add vmread movsl test sub add aad out sub mov jo dec mov and push out inc dec mov push dec loopne loop das push pop push and mov shrb inc insl popf enter cmp adc push and and enter adc sarl hlt rclb cwtl add jl lea push push sbb mov mov and or xchg movsl out adc adc mov fnop int3 inc cmp les imul or mov and leave xchg mov mov loop add or mov cli xlat add lock push ret xchg fstpl popa in sbbb inc pop or mov cwtl daa mov inc mov cld add stc sbb inc cld cmpsl sbb cwtl lods ss sti daa leave dec jl mov arpl mov cmpsl idivl into lods or int3 sub pop icebp add push push ret xchg lods pop hlt push jno dec sub test rcl mov jl push mov push daa add push hlt push aas inc and mov jb por push arpl leave sbb push dec or insl cmp add js movsb and jno dec mov push and popa dec rcl lock daa sub mov shll and (bad) push icebp mov add call stos and add (bad) fimull loopne inc or cmc mov or les cmp mov cltd push enter cmp push pop clc imul rolb addr16 les or pop or inc fisubr sub mov (bad) add shrb arpl pusha dec popa fcoms jmp mov adc aaa fdivrs adc push lea rcl out das paddw mov sub aam or adc inc add hlt rcrl sbb push les push out mov lods jns or and je mov (bad) xor adc ret xchg mov push insl test cwtl xchg cwtl pop or xchg cmp imul dec lock and dec repz es sub dec dec pop sub ret (bad) enter loope,pt in mov or enter add add (bad) mov ja or jmp add mov nop leave aad lret push jecxz push mov loopne inc add lahf (bad) mov ret or adc fcmovb packsswb xchg test ffreep or adc add xchg adc add inc cmp xor cs xor xchg jmp push xchg adc in and add (bad) je mov sub pop rcrl mov hlt lock mov mov add ret aam add fnop push sub jmp ffree push xchg pop dec sti add or and and adc mov out imul cmovns fs pop push aaa push and js imul add (bad) rolb clc pop push add lds xchg or push aad push sbb test out xchg and push and add sub cmp popf sbb jo mov (bad) rolb and add xchg add clc mov push mov inc sbb mov mov jmp add sub popf or aaa mov xor xor adc shrl mov rcrb scas sub xchg test nop xlat lds and inc aaa mov jg movsl mov jo imul pusha mov pusha mov test enter mov xchg or and and add jno sbbl add add mov mov and mov mov push sbb add aas push test ds mov and rorb jmp push inc fcompl xor or cld nop add push mov lea popf stos sbb pusha sbb sti repz insb sub lea pushf xchg mov in jnp push cmp dec xchg dec inc les lock (bad) xor pop sub inc rcll gs pop jge movsl jg mov xchg mov pop cwtl sub jo dec mov mov loope and lods lret ret pop cmpsb xlat add mov leave xor out (bad) leave xchg fcompl mov and add mov xor adc mov pop popa jo jl lods test sbb dec pop enter dec jns sub mov add je mov sub dec sbb sub or adc inc push mov adc push test cmp shll xchg into adc mov mov dec push out jecxz lods add mov popa gs push ret xor xchg js xor dec cmp xchg loop xor mov popf adc fdivrs negb pop add testb in sub pop pusha or mov testl lods xorb sub cmpl sub lret xor add cmc push cmp adc xchg gs add xchg mov adc int xchg and clc mov mov add pop (bad) int xlat cmc add orl jne add test add mov sbbl fcoml int xchg pop mov test inc (bad) or (bad) pop xchg loope int3 mov and jle and adc push jne mov ret cmp call or dec jge pop cmp add ret movsl mov test lea dec mov xlat adc sbb add icebp lcall (bad) enter and cmp pop arpl xchg push rclb and add or cmp add xchg les and push pop dec fsts and sub or jmp push add dec lods push int3 add in mov pushf cmp sbb xchg leave inc sti jl arpl mulb cmp add add (bad) in add pop sahf dec inc add clc fstl dec mov add xchg jmp sbb popf and jns add pop mov hlt dec test cmc add push movsl fisubr fisubrl cld mov cmp mov mov add jmp sub in dec cli mov and clc test mov movsl daa xchg pop in or mov leave or add fcomip mov mov cmpl fbld popf gs mov rorl sahf or ljmp int3 adc int loopne (bad) lret lcall sub pusha out (bad) arpl xchg cmpsb fcomip in addr16 lea sub ret (bad) cmp mov mov lea xchg sahf shll cmpb pushf hlt ja pop push arpl jge mov shll in add cmp pop testl xchg (bad) adc lret leave add mov push dec sbb lea and dec pusha int and rcll inc jo pop push test in insl pop jne subl push lahf test out imul mov test xlat repz (bad) jo jmp insb addps (bad) xor out xchg add imulb sbb xor pop and xor mov fisubr sbb and int add adc fisttp loopne add push rorl push lds loopne das adc in jg in icebp jl sub mov push fsubrs dec push test xchg test in cld xchg xor test inc pop ret test stc rcll push pushf mov test test loopne je mov cld add push jno mov jo movsb xchg add icebp movsb xchg (bad) mov xchg nop nop push pop mov jmp cwtl jno mov cmpsb and fcoms push mov call in add add (bad) cld loopne lods or addb sub out lea add js dec mov add cli imul or or bound push adc jl test pop jns mov xchg push or das mov dec push mov ficoml test loope pop mov add and (bad) inc inc push or loopne loop sbb push xor mov test adc lea out jo push xor pop mov and fdiv add push ret imul out or pop rcrb inc ret xchg push rol stos jbe add add inc mov jp dec popf test xchg cmp aad mov leave add ret enter mov add dec js push add lods pop and aam out push fisttpl (bad) xor imul add and loop cmpb and adc out and cli fsubs pusha or xchg jns test imul arpl mov jmp lods addl or pop xor jns pop shlb push jl xor mov or cmp nop in arpl sbb mov lret pop lahf push add add mov xor and faddl mov or mov pop addr16 int3 ss inc jmp mov cmpsb pop xchg push cmp fs push push test movsl cmp clc gs jo sahf (bad) aam and mov dec add mov loopne addr16 inc cmp inc adcl jbe andl sbb rcrb inc jl fsts aaa jbe sbb pop mov sahf sahf ss insb repz xor xchg add outsl movsb ret mov and jnp add xchg xor sub add aas arpl and add call fldcw std lahf cmc das loopne lock aam and cmpsb (bad) cmp dec (bad) add rcll daa scas lods dec insb repnz aad sbb test add sar and mov js mov adc daa push in mov adc pop inc cli sbb js ja repnz faddl cmp push jne int push jmp lahf outsl movsb ret test push fistpl mov mov stc xchg or and adc push aam inc adc lret repz sti nop and ds jb ret sahf or sub add xchg cs dec mul inc sar push ss push xlat adc or aas mov testl nop loop aas and push test loope (bad) iret add pop cmp or mov xor mov cs fwait and dec ljmp mov sarl dec add (bad) jae cmp pop push adc insl and lock repz and mov sbb add fstps sar cmp jnp movb sub sahf add xchg mov xor es aad out mov and pusha jmp fwait adc mov adc (bad) out in pop clc sbb push mov mov pop movsl fyl2x xor dec loop or dec faddl jbe clc inc xor inc jge pusha daa inc add je inc or inc (bad) xchg jge pusha mov jo (bad) rcll inc or dec lret dec push cmpsb mov pop cmp inc in repz and daa fistpll enter repnz jo push stc in cmp (bad) xchg rol pop inc inc lock hlt shrb pushf mov push push sub or add mov out inc mulps aad sub xor (bad) xor rcrb adc jnp mov movsl xor inc bswap cmc add sbb arpl jp pop xlat adc add mov push cltd xchg outsb push push sbbl xchg sub sbb imul loop fdivs faddl mov in popa int mov jp add push negl nop sbb adc mov push inc pop cmc add sbb jo mov ret stos add mov jp addb daa shrb cwtl mov jno and xor jbe inc test mov dec and sbb pop xor dec es adc (bad) addb inc or push aas jge inc pop pop iret mov xchg fmull inc roll jecxz (bad) js push stc and pop pop ja in int3 pop addr16 pusha push loopne inc shll and add adc mov sub jb out cmc (bad) mov aaa add sub mov pop pop inc test js adc sbb repnz pushf push sbb mov sub mov xor mov xchg xchg dec mov nop mov sub mov out mov into stos inc push and popa ret mov test inc push fdivrs fstps je add push mov fmuls repnz cmp (bad) xor xchg lahf sbb sub cmc (bad) adc add aad push add ror pop adc mov mov or and and dec clc fadds (bad) cmp adc dec sbb xor sbb mov subl rorb popf repnz sub in enter test in adc adc xor test out mov sbbb mov cltd or int3 pushf into mov inc sbb js test ror push jmp xor or add sub and fs andb push and sub push lahf cmp inc (bad) xor mov rolb out stc push js mov xchg in je jbe ret pop movsb movsb xor dec fucomip mov push add sub inc mov and cmpsb pop sub jo cmovns jl (bad) call push shlb add js stos adc push popf (bad) data16 sbb addr16 out push jae adc fadds xor fsts cmp fs and aas out test lds pop in into mov loopne cmpsb je mov lea cmpsl (bad) testb xchg add inc lahf cmp xchg xor incb adc jb sbbb cltd mov adc inc je sbb and xor rolb pop je ficompl push pusha in loop xor insb push jl aad lcall adc sbb xchg mov mov loopne test fcomps cmc jle jg add add int3 pop (bad) mov xchg mov inc fwait movb iret sahf nop mov ret inc nop xchg xor add cmpl hlt inc cwtl jae test je js mov mov xchg adc les fadds jnp push in aas lahf iret pusha xchg lock xor test jnp mov das adc pop mov outsb mov push adc in lods inc xchg dec test rorl fldl aaa es lods les subl in insl sub rcrb jb cwtl mov repz mov sbb ds cmp (bad) and xor xchg mov and jle adc out mull in xor jno dec mov jnp adc push add dec icebp mov push shlb (bad) push and fdivrs adc mov or lcall imul add fsubrl lsl int mov inc push frstor cwtl jne push faddl mov (bad) push enter scas lock mov adc (bad) sbb out sahf cmc test ljmp push test loopne add stos les scas or mov and adc fs push icebp mov stos iret fcomip push and shrb scas jg sbb test int mov add test lods aaa cmp add out int3 (bad) imulb push test add xchg or clc bound push test sub xchg pop mov and pop mov mov stc addb mov mov xlat jnp mov rorb pushf mov push in jo (bad) hlt sbb icebp dec xor fsubl xor addb stos ror adcb cmp icebp dec xor mov jl add and pop xchg movsl dec rclb mov pusha adc jmp stos xor push cmp push adcl jmp ficoml add lds add mov out test adc dec sub js push pop hlt popf add push sub jne push pop add in dec lods out inc test cmp adc orb add sbb adc pushf push sub jns or call mov mov scas xor mov or ret rolb jle or pop aaa inc push (bad) push cltd mov and pop (bad) daa or in rol sub test add hlt stos inc lods outsb sbbl pop xor cmp arpl push push pushf pushf les dec repnz rclb cs pop mov mov sub lcall cmpb add and enter and pop popl and xchg dec jns xor mov xchg xchg test lahf shll pop xchg inc pop sub popf or rcl pop and xor pop outsl in in enter (bad) (bad) ja out adc iret and cmp stos mov adc ret loop movsb rcll inc enter mov mov fbld push or inc xor cmp mov xor js lret popf mov sbb orb add cmp cwtl add push movb dec xor (bad) mov cld adc cmpsl push push in pop sbb mov fdivs hlt push add adc inc add mov sti push jle test sarl xor dec push push in sbb and cli nop pop popf mov pop sbb inc jb cmp lret add sbb add adc and xor jmpw push fadds movsb cltd incl xchg outsb or call sbb xchg jl or xor mov add cmp dec cltd or jl into mov sbb daa out mov xchg xor js xchg adc lea lds test leave mov mov adc sbb mov sub mov (bad) sub add cmp icebp pop call int3 (bad) inc or and xor pusha push mov sbbb or lret sub push jl dec shll add in and mov cwtl xchg mov repz push mov popa xchg mov cld test sbb mov mov sbb adc push lods and xchg push push pop and xor movsb xor negb aaa test arpl and pop clc sbb std sbb mov mov or push or mov insb test pop push jmp arpl mov lret pop fistpll repnz mov xor sbb cmc int3 addr16 cmpsl fwait or xorb call push dec mulb loopne fstl inc cmp mov dec je cwtl (bad) xchg or mov or cld pop andl adc les pop xor shll inc mov lock inc add call add mov xor or hlt adc pop inc subb ret mov jne and imul cmpsl mov hlt xor jle loope (bad) fisubl mov iret mov add lcall dec mov push dec xor sbb call movsb xor xchg insb (bad) pop nop clc jmp add xchg call or dec bound popf pusha (bad) sub adc lock and add cwtl xor dec incb dec movsl pusha sbb adc cmp out adc arpl push cwtl inc test xchg or repnz and daa mov out ret popf ret dec add sbb repnz push loopne pop cmp rcrb inc inc scas xchg sbb xchg and cmpsl pushf shr mov sub fs dec add enter mov lods add pop or inc jae push mov sub sub call mov and out jnp pop fs cld add ret mov push outsl sub mov pushf jne sub add leave scas mov cmpsb ret rolb or neg and enter aam add outsl movsl mov xchg outsb subb cltd ja or mov mov mov jecxz xchg loopne xor cltd in and pop mov dec fisttpl lock xlat mov sub fmull mov scas jns mov mov adc jb adc loope enter mov shlb dec fs int3 xchg test mov sub add lods out push in mov sub test and add jecxz cmc inc pop mov mov add fisttp negb or add push in addr16 xor aam sub or ret mov clc cli iret mov jmp enter fmuls insb sbbb mov rcl xor inc dec pop (bad) dec dec or xchg aam lret sbb jno xor imul orb (bad) push push jmp jge add fcmovne pop addr16 pop xchg add mov adc stc (bad) xchg test sbbl xchg inc and and sbb pop push adc int mov divl mov xor mov mov mov jg or sub adc jae clc cmp mov xor push sub or and pop jne cmp push or notb adcb (bad) adc and mov dec in adc dec jp ja jae cltd and mov pop or rolb fsubrl ja mov lods rcll sarb test xlat into sbb xchg into push jne add xor cs jb sbb pop mov adc ret add adcl decl push inc dec test push out inc jns or mov ret add scas cli and divl xchg xor or adc cmp mov mov add test mov adc sbb pop sbb or adc pop push lcall push aad mov or and out lods das nop ret sbb adc frstors pop test cwtl dec jb adcb xlat and jo push (bad) or mov mov mov js inc test mov dec ret stc sti cmp or adc jns pop inc sub repnz xor into jle and rcll push adc ret mov mov jl les iret out fs adc xor add je jmp add jo pop cmp test dec pusha mov int mov inc sbb push add mov xchg into nop push aam mov adc inc pushf insl xchg sbb add fnstenv loope add xor dec add mov or add mov (bad) pushf iret std xchg bound and inc (bad) (bad) cmp xor orl sbb call roll inc and inc push sub pop test mull cmp fwait inc and lea pusha cmp sub insb int3 sbb mov push or jmp data16 jae add push repnz dec cs jl les xchg add dec pop pop mov jnp push push or mov jns add or fadds and fs call add lds add daa inc addr16 pusha popa push lahf mov lret dec aad add sub arpl jl or mov adc (bad) outsl add mov es lock repnz xor adc fbld add repnz push je push jl add mov sub mov fistp loope je loopne aas add arpl bound pop lock push pop jg or push push jns inc cwtl loope dec inc push inc inc pop add sti (bad) addl inc negb sahf add cmp pushf dec xor pusha jmp mov mov daa (bad) mov hlt sub mul inc les push ds gs in sbb jne cwtl mov loopne popf in mov cmp nop mov movsl dec loope mov (bad) xor xor pusha das and mov inc and mov sbb mov cld arpl dec out or dec xchg js dec adc sbbl add jb adc or hlt shr inc fcomps dec mov push inc rcll pusha lahf fistl test xor sub mov int3 jge popa push sub xchg or mov aaa stos call flds or and or cmp hlt or pusha and (bad) repz les lock inc cwtl mov out cmpsl loopne inc xor mov imul rolb sub jb lods loop cltd add repnz sbb jle and mov xor pop adc add les pop xchg mov jne cmp or mov pop cmp add xchg roll adc xor add and sbbb cltd push mov jnp repz pusha dec cmpsl cmp loope outsb push loop inc cli ret pop mov inc sbb mov mov inc push xchg sti push push cmpsb and loop sbb pop mov daa adc jno xor and test out xchg add pop icebp add mov dec aam inc dec out mov sub sub adc loope out adc dec add out lret hlt cmpsb pushf les cmpsl add xchg fdivrs subps in test in pop and loop pusha push cwtl cmp fimul dec xchg (bad) and push and ljmp mov aam inc shll subl mov popf roll test (bad) cltd mov inc mov sbbb in mov pusha repnz (bad) in mov dec mov addr16 add inc lret in enter addb push sarl jo sahf jmp pushf dec cmp inc inc (bad) xor arpl xabort mov movsb add pop test push mov pusha imul xor cmp (bad) popa fldcw jno nop cltd stos xlat loopne gs pop mov push mov and movsb stc mov or mov push movsb ds push sbb sub or rorb push pop jmp leave sub or in (bad) xor fisttpll hlt pushf mov jecxz mov jl js or adc jbe call pop aaa dec mov xchg fsubrs movsl add add scas shll add stc cmc fs dec fwait mov add cmp cli in rolb clc pop add add jbe fisub inc (bad) jno mov insb dec mov stos jmp push js dec cld outsl add add les sbb add jl in (bad) out xorb std movsl pop jb push jb xor pusha pop xor sbbb push dec adc mov inc test dec je and orb ficom scas add mov lcall mov xchg leave xchg sub call sbb leave subb inc dec push adc jp sub aaa inc cmp shll jo nop and cmc lock fdivs ret das mov cmp sub fdivl mov aad (bad) sbb andb addr16 sbb pop nop test movntq mov pop and mov xchg dec jp in fdiv pop cmpsl inc dec pushf push and mov push xchg jno jae mov ret bound nop les in push mov sub xchg mov jbe imul vandps les out or lds rcrb jo pop (bad) cmc add fcompl fldl2t (bad) imul ret repz dec cmp lea or jmp adc fs mov daa sub sub inc (bad) add add mov xor inc outsl xlat or test push xor lock clc pop leave pop or pop imul mov shrb dec dec xchg dec pop xchg cmpb repz fcmovnu sbb add xor cld pusha xchg xor out jge fildll dec pop pop xor jle ret add shlb xchg add dec mov mov cmp adc popa nop sub mov rcrl clc inc push add adc add (bad) xor lahf xchg bound sahf js jae or sbb sbb dec fwait ret ret pop pop rorb mov sbbb inc jg add dec rclb inc adc sub mov mov push sarb and inc lock add adc aad stos xor cmp flds jnp pop cmp (bad) lock push sbb cmpsb pop push add and mov or and mov push test inc imul fs fstl sub jbe sub enter adcl inc jnp add rcrb adc dec mov les ds loop ja adc xchg mov fwait aam (bad) mov pop int3 jnp flds stc mov ror lock push loope and cmp out cld xor sbbb jge in xchg xor mov xchg xchg pusha sub mov scas or andl push stc cwtl push into nop fiaddl pop movsl mov adc push out mov mov pusha incl roll inc cmp lea lds jg pop lret clc dec pop cwtl push add adc rol pop scas (bad) xor inc add cwtl test lgs pushf in mov pusha add xor ret jmp xchg mov lret enter dec fmuls jnp mov or ds inc dec cwtl add das movsl mov aaa shll aam mov jno push add push mov adc pop and and inc pop daa ds sub js repnz inc add test je sar push int mov js push (bad) xchg jo pop (bad) mov xor out add sub mov push jbe idiv outsl mov sbb scas icebp add mov loopne mov pusha addb sbbb inc loop mov xor xchg mov sub mov ror pop cmp adc or call rcrb icebp xor xor inc inc xchg nop or pushf or adc jns lods pop jecxz push inc leave dec push stc mov jo rcrb in repnz cltd fmuls daa xor stos rcr mov push fdivr dec or sbb mov adc cmp clc ja pop push jmp movsb sbb xchg cmp cmp adc andb (bad) pop stc cmpsb shll mov add jp loop std sar adc inc jnp jmp outsb in push lcall ret pop push sub mov out fist add push add cld push pop jo xor sbb add test mov popa dec outsl cbtw or xchg into pop xchg jb (bad) int3 cmp mov dec enter add imul test test fcomps enter lock pop stc movsb and push mov cmp sub dec enter and cmp xchg push sbb test push pusha jno add fimull and lret push fbld insb mov adc mov xor mov push mov sub pop lahf pop pop (bad) rcrl mov mov (bad) and out dec xchg (bad) mov mov outsl and lea outsb out sub andb daa and push xor jp cmpsb pop jge insb out fnstenv cli scas sub out es push sbb or je lret mov rolb inc je (bad) push mov and jo cmpsb cs cmp mov js into adc mul mov or lock sub cld std (bad) or jle jae js pop adc test mov add bound sub aad nop addb pop in sbb add dec xor xchg (bad) fsubrl cmp xor inc je lods inc push das xor xor cmpl or mov jnp add (bad) mov xchg stc add hlt rorl aaa and inc push fs repz daa sti adc mov (bad) ret mov dec inc lea jmp pop (bad) out js jo dec rcrl sbb mov iret sub fdivl rorl adc decl scas dec pop jmp out lods divb cmp add or cld fildll xor dec fdivs addl pushf fs add mov movsl cwtl data16 adc fdivs jmp nop xchg (bad) and mov dec sahf dec lcall mov aam fs and push sbb daa shrb mov das and into test jnp sub pop sub and and (bad) clc dec and mov out and dec xchg xor mov ficomp int3 fndisi(8087 or sahf movsb add pop fdivs loop xor jo insb jp pop jg add pushf add sbb jmp orb shrl gs adc dec mov out lahf xchg or inc dec sbb cmpl fmuls enter push fidivr sahf xor add popa add add sahf call xchg push stc fistpll add xchg rclb add iret and je and scas add and pusha mov and adc or jns xor mov and (bad) fs and hlt cwtl cwtl scas jnp hlt xchg inc xchg loope jns mov ss mov jo aaa mov shrl add xchg pop clc inc test jp push or jo or add nop fisubr sbb sahf sub jge add shr shl xchg mov add dec js mov inc cmp (bad) pop push sbb testl push fucomi pop cmp jne add stc mov imul ss and js inc subl pop mov incb jb mov fiadd lea xchg (bad) xlat orb sbb xlat cs aaa sbb ljmp daa lahf xor inc stos mov adc push enter push xchg stc pop cwtl dec lahf in (bad) jno cwtl or dec xor in cmp lahf add sbb cmp sbb (bad) hlt int3 pop ret jecxz fcmovb (bad) xor or test cmp inc cltd dec out cli ss add fnop mov sbb test (bad) jae imul mov adc movsb or test push push test lds xor mov pop cwtl add lret pop or or rcr mov popl push push mov test fdivrs or push out mov xor test xchg inc pop inc sbb cli repz roll and or mov stos imul or scas fcmove xor lcall xor mov cltd add int3 pop or push lods fcmove fstpl sbb inc and jne sbbl test pop jmp pop xchg (bad) nop cmp fs leave test mov mov sbb mov popf mov xchg push push cmp mov and pop js pop jne dec notl xor or mov test insl and pushf int3 and and pop aaa fisub inc pop mov into andl pop or enter push push xchg and adcb or loopne,pn and (bad) shrb sbb data16 and adc hlt and rcrb add add nop mov lret in or test aad adc or push jno push (bad) rclb (bad) in pushf insb je outsb leave cmp test mov dec rclb imul dec out pop pop loopne cli movsb fadd push pop subb or (bad) pop pop or cmp dec push in push dec or outsl aad loopne ss ret (bad) loope imul mov mov mov pop mov shlb or inc shr movl mov inc push mov lcall dec aam imul sbb cmpsl add and cld sbb mov or xor int3 cltd cltd hlt sbb jae adc cmp sub xor mov push adc and (bad) cltd fsubrs add fcmovbe andb jnp dec nop jl das stc jb pop adc and sbb (bad) repnz lock test dec or xor sub ljmp push add mov out repz adc xor dec dec inc sub add sbb dec in mov loop (bad) in test xor or stos dec and inc mov fs jo inc cmpsl in in sbb xor repnz popf mov cmpsl fs inc in and int stc mov stc jno les xchg jnp add test dec enter movb loope test sbb xchg out rolb add push cmp add imul enter dec lea mov and adc jo sub add loope imul enter mov dec push sub stc repnz pop jb and inc fdivs cwtl adc mov test popa cwtl xor dec add imul dec mov pop sbb pop roll in cmp repz mov dec or test pop push inc mov shl add test mov sbb push jno add adc pusha push xor enter nop xor sarb les test cmpsb xor andl pop xchg ds pop lock sub dec rolb jno lret add int3 xor into cltd cld outsl jo dec rorb or mov mov pop popa loope addr16 or or hlt (bad) hlt mov pop xor mov mov rclb sub xchg mov sbb loope or adc jo enter mov das (bad) loope cmp int and jmp pop lahf loopne pop jnp or inc jb xchg pop mov mov lret lods pop movsb test cmp adc pop mov les adc mov (bad) inc sahf rolb push mov dec add push pop add mov sbb (bad) and cwtl adc cmp imull inc fbstp shrl ss or and sub (bad) in adc (bad) jp cmp mov test dec lock repz hlt or adc loope enter add sbb jae jmp adc jmp into nop xchg dec and enter jae adc adc push mov push gs add mov inc cmp (bad) jo push add push rorb bnd mov pusha pop add inc (bad) dec stos mov and dec fisubl jmp mov movsl sbb jae cmp sbb (bad) xchg inc inc repnz es shlb sub scas (bad) mov or xchg test pop xor es cmp and fsubrs fild nop or push xor rolb cmp pop pusha push mov or xchg xor aaa (bad) (bad) inc pop pop jl sahf add cmp sub das add (bad) add popa aam mov jo les pop jl add in cld xor stc xor xor sub cmpl (bad) loopne push xor pusha pop xor rcrl push sub fldenv mov or pushf adc js and add mov scas stc jae inc xor add mov pushf inc sub cwtl add fmull cmp nop dec sbbl or test nop test pop outsb xchg dec add imul mov fcmovnbe and gs repz insl es push adc sbb sub push cwtl add sub ret sbb mov dec sarb scas or imul ret or jno xor pop dec andl inc lret subb jp repnz adc sub inc call lock (bad) outsl insb sbb pusha mov dec inc or and cwtl add lret cld and pop cmp or cmp shrb and xlat mov pop test bound sub popl sub lods les fnop fs ds lea fisubrl ds ret inc repz rorb sahf in adc inc cwtl imulb js daa jecxz dec scas mov add dec int3 fisttpl outsl in pop add mov mov mov test xlat in xchg fcoml mov rcrb and dec push inc mov xchg dec mov push pop arpl (bad) fdivl mov dec sub mov add inc xchg call add push imul stos inc stc scas imul fldenv and fistpll rorb lods enter xchg and sub push test mov cmpsl fcompl inc addr16 dec pop imul scas sbbb push inc test hlt andl jmp jb and mov sahf imul repnz je fbstp jmp test fs and xor js into andl pusha call js push clc cmp out popf cltd insb fsubrs sub test iret daa mov adcl fistl jl inc xor dec pusha rolb mov dec cmp dec push jp out xor je repz cmp xor xor jne fs mov pop mov aas arpl enter fcmovnb jecxz out dec or inc cwtl hlt or xchg mov xor mov mov imulb adc push repz add in pusha jl sub or int3 add js xchg loopne ret jae sbb mov add mov push shr adc jae insl mov add lret ds out or ret enter and dec jo or cmpsb add pop cmp inc repz push call mov pushf cmp sbb or sbb sbb fnop mov sub add cmp cmp lahf or dec lods push xor mov mov mov movsl cmpb mov sbb jb insb inc popf mov por cltd dec xor mov repz aaa dec cmpb lret push push xor (bad) inc push imul fnstenv pop je push xor arpl push dec ret and orl scas cwtl push clc or push and shr ret icebp inc and leave xor adc dec pusha fdivrs shll clc jo pop pusha cmc leave faddl adc shlb rolb xchg add xor mov loopne xchg ret fmuls outsl add popa (bad) pop or inc rcrb pushw cs sbb in and mov mov mov scas movsb lret sbb or xchg fs pop lahf fist pop rcr jmp imul adc movsb dec (bad) hlt sahf sub shrb in add inc bnd imul xchg cld pop push push orb enter xor outsb lahf fdivrs rcll cmp data16 mov xchg leave sbb fisttpl and xchg jb sbb add inc xor add inc mov repnz (bad) mov je loopne pop add push imul jno or mov xor (bad) lock xchg and mov push push aad push sub (bad) mov inc mov sbb add mov (bad) (bad) nop pop scas mov push mov fcoml dec imul add inc ja dec adc mov and (bad) cmp pushf cmp adc es loope arpl inc pop lock and mov lahf jl lock sahf mov and xor leave mov xor adc cmp xor push adc cmp into data16 test loopne bound and hlt lods pop sbb leave fild iret add mov and je sub int cmp cmp (bad) cmp sub mov (bad) mov add xorl in nop xchg es test subb aam add sti in xchg (bad) mov arpl add je in (bad) enter mov jl mov sub daa movsb sub cwtl xor and push and scas sbb dec fs dec xchg sbb lock mov or imul xor inc in mov and mov sub dec rcll push dec pop sbb lds push lods inc imul (bad) cwtl mov adc mov clc pop adc inc xor push push clc dec mov lods xchg shrl pushf add test dec out inc sbb cwtl mov in sbb and test bound push add rorl cmp gs push leave fild jno and lods sbb push mov scas (bad) aaa shrb movsl pusha rcrb mov in dec shll mov push inc mov adc repz fnstsw enter ficoml and insb adc nop add movsl and lret movsb mov movsb xor and xchg (bad) repz jmp dec sub mov mov and fisttpll dec or mov mov mov sub or flds sbb loopne int3 notl push aam (bad) mov das mov mov pop sahf sub xchg inc (bad) inc or dec pop pop (bad) inc add nop push xchg mov adc and inc fsubl cmp cmp faddl mov push add lock jne pop adc dec mov in inc xchg adc int3 inc rclb inc push xchg in add decb add jp rclb mov pushf push mov cmp adc mov test fdivrl cwtl ficoml fldcw add inc stos dec dec je jne mov mov rorb push add dec enter cmc call adc xor add insb les inc mov leave into loopne aas mov repnz cmp jnp add pop cmp cmp fisttpl push pop pop cmp andl xor xor lock add jae mov movsb mov enter lds sbb push clc and dec pop inc pop or add out xchg aam test daa aam inc nop daa dec inc inc jo nop and sub call mov adc add mov push fisttpll gs and cmp add test rolb sarb les xchg cwtl pop cmp mov inc add inc adc dec sbb shll sbb cltd xchg mov sub add jne,pt sub fs sarb or pop and mov fbstp sub jl or cmpsb fbstp jp out inc test or dec pop or jno (bad) or inc and cmp psubsw or mov adc gs das xor movsb sub pop rol jbe fild aaa mov fstpl xor in dec int3 fimull xorl clc sbb inc push dec rcrb cmpsl xorl cli and pusha jmp mov sbb mov dec mov mov nop nop add test push xor and repnz nop or lds leave das xor call mov jmp shrb and pop fdiv sbb sbb cltd fcoms xchg add xchg test bound negb add xor adcl fadd faddl add or rolb xor add (bad) pop movsb aad les rclb dec mov dec add cli movsb push mov push test add sub addb or rcrb es imul mov cmp rcrb movsb adc add jecxz or repnz xor lahf sub fbstp fstpt fnsave adc jo xor leave mov mov jns dec and mov and mov sub xchg fs clc adc gs inc mov dec enter movsl push inc fs xor cwtl in sarb xchg rcr sub adc sub push daa sbb mov into imul js roll movsl stos mov sahf push js add jg xchg dec cli js pop mov mov ret in sbb dec out add scas rcr les hlt push adc je push int3 fs mov addr16 jge mov xor mov cmpsl aad and push pop add out pop shrb mov in and push pop xchg and adc pop lods and fs test ds rolb dec mov shll inc clc movsl inc dec fcomip xor and gs mov add dec xchg xor inc lret popa cmp sbb and les int3 fs sub shrb addl and adc lahf hlt shrl icebp loopne mov pop mov adc dec push (bad) xor inc jl bound pushf cmp push pop paddq insb inc test fucom sub push mov test xchg mov cmp (bad) xor inc pop xchg je and adc add inc mov mov sar add aaa and and and inc movsl ret cmp aaa div shrb loopne lcall popa xchg addr16 nop lret inc cltd adc stc test mov push jns add pushf xchg and fldcw in add hlt rcl lret rorl (bad) hlt rorb xchg cmp pop xchg arpl call test loopne incb jmp and shll push mov push pusha add sarl mov or adc test frstor dec or dec test leave fistl and repz adc or aas push mov cmp mov and mov sub fsubrl and ret and push andl rolb add ljmp jnp fistl or fldl je mov lds mov imulb mov dec (bad) dec push stos xchg in jno and mov add adc sub xchg xor dec aaa fisubrl mov test enter xor das out mov push xchg cmp mov inc xor popf adc andl adc mov mov negb mov test insl aaa nop cmp xchg lret and sahf jl mov mov testl frstpm(287 sti leave rorb (bad) mov fbld jmp xor jo push lock lret mov (bad) addr16 inc rcll sub sub js lret push pop xor add pop es adc in mov lock stc dec daa dec mov fsubl mov dec mov in or sub cmp nop or mov mov and gs push mov add jmp rclb aaa popa cmp dec shll das loopne mov add jae shlb add cmp cmpsl dec cltd inc mov push xlat sarl cmpsl adc xor xchg shrl rcrb xor inc mov ret lock xchg add inc cmpsl push push repz or push rorb pop inc fistpll jno mov mov (bad) push jne adc mov nop rol add cmpb dec pop add or or mov (bad) mov pop pop or (bad) hlt mov or jp pop and scas and repnz mov push mov and mov push xor imul or add pop pop cmpsb adc adcl or pop push xor jge dec ret inc stos cmp xor fstps adc dec jmp mov mov add jmp mov inc adc adc pushf push (bad) nop in aaa rcrb sarl mulb mov add call arpl (bad) or pop pop push cmpsl fsub xor push mov mov rcrl mov ss orl in movsb sub das inc dec push cli jge pop jmp mov mov imul test or push movsb cmpsl mov rolb rolb add test pusha or adc sti jae js pop in and mov add mov mov sbb rorb cwtl add xchg aad push push out mov (bad) jno and cwtl fildl pop dec jp cmpb cs mov pushf jae adc adc ja rcl jge cwtl xorl mov or mov add pop sarl and into inc mov test pusha pushf ds mov nop cwtl lcall movsb push add or mov xchg adc jbe icebp stc loop or mov sub enter push shll mov adc lahf movsb nop and cmp lods dec (bad) les jbe push test and or adc jl xor lods add cwtl or (bad) xchg mov scas xor rolb jo mov inc mov mov test xchg scas dec sbb push xchg addr16 sub dec aaa or jmp jmp insb sbb jp or mov jmp cmp push and or xorb mov pop cmpsl cmpsb lahf sbb ds fstps or ss and lret test or fistp andb (bad) cld pusha sub jmp push stos inc dec or xchg cwtl mov imul adc fs inc js scas mov (bad) jnp pop add jl movsb test nop jns mov mov mov bound repnz je inc dec mov imul add xor mov lock pop lods and mov rclb cmp lret push and jbe cmpsl inc cwtl sub xchg mov xchg cltd add add jae arpl pusha xchg popa add ja (bad) push and sbb and xor sbb jle addb jo sbb cs inc push dec add cmp cwtl psubq jle cmpsb xchg pop xor lds les cmp out inc or stc sbb cmp insb in pusha iret cmp jbe jo mov adcl push sbb (bad) xor and adcl sub sti mov ljmp xor mov push add jb mov add push or and jae mov jmp xor mov cmpsl rcl add sub clc mov and clc mov push and sub push nop pop sub cmc loopne mulb sub dec adc imul ja pop outsl add xorb insl dec push enter jl js pop addr16 clc xor cwtl loopne or enter mov add pop dec add shll sbb imul push push addr16 gs js bound leave jl int3 xchg xchg lock mov loop jnp xor imul and enter in xor fs jp or imul (bad) iret jl xor push pop cltd dec rcrb imul fisttpl aaa xchg enter pushf or add push xor lock or sbbb test and test stos scas ds test add or adc mov pop mov push mov inc jno fstp jo adc movsb aas out mov dec push (bad) scas stc inc add and pop aaa in mov mov aad addr16 (bad) cwtl sub or cmpsb mov or in jns fadd movsb sarb arpl int3 push loopne call jb out sub mov cmp adc fidivrl insl or cmc cmp int3 (bad) data16 push push jo and and leave mov and stos add cwtl mov mov aad lods inc pushf inc movsb inc stos lds adc xchg popf mov jo sub les cli in mov repz imul ja imul sbb fsubrs test push fcmove xchg add adc ret mov lahf jnp pushf negb sbb arpl lea dec mov lret or cwtl cwtl inc in das xchg xchg orl inc jecxz push das js add add inc call pushf repnz iret xor push dec mov adc mov mov enter push or rclb cs inc bound add pop xchg loope dec aam jno sti jmp push sbb add push push dec iret cwtl jbe aas dec ds daa push cmpsb inc push or or dec mov xor dec adc out pushf cs mov es xchg pusha add movsb push add mov pop add cmp push and push leave cmp cmp popa adc aas mov daa mov addr16 adc fisttpl mov nop mov and cmp loopne shll out lret jns xor push and fucomip add push xor out jl in cmpsb out mov pushf pop fs mov fsubr xlat sbb and sbb add sbb dec push push clc arpl jb add fnstsw mov jl xlat push loope add push les inc add clc call mov movsb roll sbb daa dec test cs sbb push stos js and data16 aaa mov sbb shrb jnp loope rcll mov js shrb out mov push loop lods or add sbb pop jecxz add push int mov adc mov popa mulb xor xchg jbe outsl sbb ljmp add pusha mov xchg cmp add mov mov xchg cmp cmp fwait sub pop or bound fbld and inc or add sbb mov das inc dec scas enter stc outsb insb and or pop adc mov popa jo add sbb or add pushf push fildl mov addl jg sbb xor sarl inc push in inc jg add sbb push mov xor sbb pop push gs popa inc sub call mul sub pop adc (bad) pop or scas loope cs ret mov into cmp sub mov dec jne cmp pop mov ja inc leave jne cmp push pop mov mov push mov cs sub sub shrb call loope in subb xor ja mulb neg shl div add (bad) decl sbb fdivp add push jne xor xor jmp inc sub (bad) jmp inc push pop xchg jmp push or lret xchg lcall fwait jecxz ja jp cmp add cmp fild pop add jmp sahf push lock std (bad) jmp push jge aam push adc push cmp mov mov xor inc loop inc xchg mov sub push insb push mov adc jl pop and pop push jmp into mov cmp cli pop push sub jo xchg jbe enter fwait xchg ret jno insl pop cs push (bad) or cld xlat test and add out add inc fldcw (bad) pop jp or lcall mov pusha aas movsl cmpsb aad or (bad) sub add addb out mov inc sub sub pusha sbb jg andl mov fidivl rcrl cmpb lods jle dec jns add xchg ja sub mov cmp adc dec adc gs or cmpl push xchg cmp pop push imul xor xor xchg and adc or mov arpl and fdivr or not lods in sub cmp and push push pop aaa sti or jmp push addl subb xor mov gs lret outsl push jae scas xchg test test mov popf test loop js cmp inc xchg sbb ds or mov cmp or maskmovq testl ret decl (bad) push mov xchg addb push mov mov cwtl add mov enter or cmpb data16 add sarb es inc adc shrl out pop push and aas and sub inc cmp out jp addl jmp mov add adc mov lret cmp inc xlat add shr out mov (bad) push cmp add js test add adc aas pop imul out inc (bad) js add sbb pusha imul inc lahf push int or cli mov es inc mov inc cmpl add pusha test stc jo sub enter push push cwtl sbbb mov jmp pop add popa push jmp mov shl (bad) out add ror test adc sti add outsb add or repz xchg xchg add sub cs stos (bad) cmp test mov dec std jle int outsl sbb push jl cld clc rorb pandn out ja sub dec push mov je fstpt bound test dec push xchg jbe inc add clc ja inc push push push ret jecxz fdivs pop push pop mov pop push lcall lret mov in daa js insl (bad) sbb dec or mov add (bad) loope fimull jle aaa (bad) xor or in pusha rorb sbb or cltd pop pop scas dec scas xor bound ret aas dec add pop add pop push mov cmc pushf std pop dec cs and or mov loop xchg insl testl xchg pop out pushf dec jmp sahf ret jnp not es push xor (bad) and cs stos lret add loop inc call ret pop testl sub pop (bad) (bad) or and jnp xor sub pop cmpsl repnz jne jmp push mov gs clc xchg testb or or or xchg (bad) mov xor dec jmp push shrb aaa add cmp into pop inc inc lods pop pop shl adcl and in push stos jmp hlt add pop pop pop pop pop loope jl inc mov int xor or adc sub les jmp ljmp int3 add inc or aas shlb xchg fisttpl sahf sbb and cs add icebp jno add pop sarb into pop orl jo or enter cltd pop (bad) inc push xchg loopne adc pop mulb push or sub pop cmc adc xor cmpsb out sbb mov jg inc out adc (bad) mov out and fiaddl jg hlt shll jns adcb adc mov mul and fwait jle mov push les add repnz rolb push xchg into arpl jle in xchg ljmp push mov jg (bad) mov xchg push cli std jo shll adc and mov pop push push pop push push adc aad cmpl loope push and xchg icebp add mov and in mov sub popa cmp mov xchg xchg pop enter add (bad) (bad) cs mov cmp jmp (bad) lahf or add pop dec loope scas ret imull rcrl int3 lahf jg arpl js add (bad) in cli dec and mov mov push das clc in addl sahf lods mov (bad) out pop pop pop xchg cmpsb xchg mov nop aas mov data16 jns dec xor dec xor mov xor jg push and cld cmpsb jo or loope pop loop fiadd mov mov sub pop xor jmp loopne movsl arpl push push mov xor pop xor cmp sub add test les inc aas mov jo push jno push sub pushl loop add nop jne add pop pop mov cmp subb jb xor pop popa push cltd out mov add mov jge push xchg add inc andl inc call ss or and sub sub jns add lcall fsts or test imul cli insb inc fimul mov dec and mov das mov imul movsl std cltd push into push jno (bad) cmp jmp and xchg inc ret loop sbb and push (bad) repz sub xor sahf test and dec jne fidiv fstl mov cmp nop (bad) ret cmp cmp jno cmp movl xor ss add shrl mov in cmp xchg lods mov mov inc ret ret pop pusha ds jle xor pop sbb add hlt or push mov fstpl (bad) add mov pop sub sbb jl fcomps adc pop subb mov cltd aad push inc lods pop add mov scas push lret inc inc scas lock pop mov cmp pusha mov xchg sub xchg or pop subl dec adc stc sbb push lods lcall cmp mov push pop jmp out pop (bad) enter mov (bad) repz mov test or fldl out pop push ficomp imul mov mov adc cwtl (bad) jge in pusha push push add inc jle outsl out shrb push lcall mov or push xlat mov orl or sub xchg add jg call or icebp roll pop jmp adc xchg out push and jae push (bad) ja pushf mov sysret dec in movsl and jp mov push in lcall jle dec or or mov mov pop dec sub or outsl jg jae js mov add and mov mov xchg fisttpll rorl cwtl mov dec xor pop in push cmc jnp and push inc call pop xchg leave inc push inc dec addr16 mov push out loopne adc das push sbb mov dec shr enter adc push adc pop xchg xchg cmp xchg add orl mov xchg pop xor mov push push mov repz out lret rclb add mov stos and ret xor inc sub push repz add and std mov cwtl lret adc lret pop xor cmp mov push push les loope leave and add mov adc sbb xchg dec mov stc jbe pop add iret mov push jmp repnz xchg mov (bad) ficompl pop mov shr inc imul sbb dec xchg push add lods mov pop lods pop lcall push mov arpl xchg sti jp add shrl das add jmp mov loope enter add rcll jecxz push sbb ret mov fisubr fwait js add (bad) addl ss dec pop or push sub jg int mov xor clc pop dec xor jb and push push xor dec stos lcall mov cld adc mov mov mov add mov sub imul roll daa push push push or dec daa push pusha dec inc mov pop add adc dec adc adc xor aam push adc add mov sub cli add jg shlb outsl and fbstp cmp adc pop push xchg mov mov xor push clc dec sbb addr16 pusha push push inc adc push cmp es outsl les mov add aad ja jle imul dec jmp sub (bad) mov sub std add sub pop inc add sbb inc sub pop and mov adcb not jae cwtl xor call popf outsl add cmp or pop sub out jmp push (bad) mov dec sbb call pop xor xor dec xor out mov adcb xchg adc dec dec scas mov inc sar sbbb adc repz add xchg cmpsb das pop jae sbb and rcpps and (bad) leave mov pop cwtl ret sahf xor mov sub or es xlat xor loopne jnp out push jecxz call dec dec ret scas jge aas fstps pop sarl add sbb mov and incb push xchg (bad) sub push inc or test neg add (bad) xchg in popf in in imul rcrb shl push xor and push mov inc (bad) or xor mov lods call cmp sub push pop cmpsl push xchg inc push dec cmp add mov imul hlt jb push (bad) sti add ljmp pop sti jne int3 sub pop jne dec mov shrb push dec or iret ss jno sbb mov sub call loopne sbbb jbe movsl not leave push sbb xor xor mov push jb (bad) lock insl sbb push xchg inc popf mov pusha aas jns mov sub mov jbe mov cld jmp add cmc push jb iret dec pusha and mov loop out test inc ds jne cmp sbb ficomp rcrb movups (bad) lock mov movsb arpl scas or xchg mov js pusha sti clc sbb ljmp shlb and sti into lock push and cmp loop sbb rcrb xchg jae dec sub sti xorb jb push insl lds mov push mov fwait push cmpsl jle cmc pop test adc mov adc dec into lds jno (bad) clc loop dec cmc xchg mov insl add sbb xchg jb in add jae mov (bad) jbe push mov stos dec js push sbb in add lea mov xchg icebp or icebp mov adc or loop add xchg addb jle addr16 jge pusha daa pop out inc movsb iret pusha rclb add incl test push ja outsl icebp jo out mulb movq push insl lcall in cmp lea mov xor adc clc sub std add add add pusha pusha test add jp xor rclb ja repnz jl ret out fstl cmc ss inc adc lea mov or negl dec mov adc mov loopne cmp cmp mov and js add mov nop inc mov lcall imul add movsl das push or push pop ja (bad) shrb inc mov push mov jno add icebp pop in notb sub mov or jl or pop es adc push sbb insb xor dec stos ret test outsb stos sahf add lea leave adc xchg rorb in lock sub rclb into add lahf xchg jo inc fmull leave and arpl fcom imul and (bad) in and pusha jae push rclb or js push jb pop pop mov dec push inc add imul shrb mov or (bad) adc sbb mov es clc sub outsb mov (bad) in test movsl pusha pop test push incl mov jae subb mov fs mov jle jo mov movsb jo rorb out add sub mov mov in out push mov leave cmp pushf sub insb mov cmpl mov cmc pusha loopne aaa pop lret jg sbb pop popf and in nop xor insl xor add arpl es jmp push and push cmp mov mov dec cld loope cli cmp lock mov mov xchg cmpsb pop jno push ffree (bad) push mov or push dec add and addb popa mov ret xor sbb mov mov in adc aaa jo inc cwtl lods xchg add lea int3 test add add sbb sub jne xor pop icebp sub jp iret jg or je mov fcomi inc lcall xchg dec mov (bad) push stos inc add lea add jnp out xor in stos push ja (bad) xor inc dec sub mov jl fwait or mov mov lods xorl sbb and (bad) add fdivrs ljmp sub (bad) call or rorl rclb divb je inc mov test mov adc popw outsl jp sub shlb and and movsl dec (bad) lea inc cmp sub add sub sub adc inc mov sti jmp call adc dec xchg mov dec inc mov sub xchg sbb cmp sarb js cmp xchg inc ja inc dec add xor jb inc mov sub mov jo js stos out rorb dec and lret push cli xor sub test (bad) mov adc popa lcall sbb in add and mov inc ret mov push xor pop lea mov mov push cmc in and adc mov push ja sub jg xchg lock cli sub pop push add mov sahf inc xchg cmpsl call test or xchg push imul mov push and jmp mov cs pop add jo (bad) add mov insl outsb and push inc mov sbb sbb or mov mov test cld mov mov iret add call jmp mov or vrcpss fisttpl unpcklps test je or mov sahf (bad) xlat jnp add and addl loope je lock xor pop mov (bad) testb dec dec add inc sub jmp push loop and mov mov (bad) icebp test and pop lcall lret inc cld ja inc mov mov js xchg sbb and jbe pop movsb mov loop sub cmc mov sbb dec ret cmpsl daa jo sti adc xchg mov fmuls pop mov icebp insl add addl es adc push sub push lock call cltd test mov pop in inc xchg sub mov mov mov add add loope mov dec (bad) insb insb add bound push (bad) fiadd mov (bad) pmullw test cmp pop mov arpl pop sahf lock mov sub mov cltd mul jo (bad) cmp mov popa lea jl loopne fldcw and add mov mov xchg xchg lods add das mov enter push fsubl jne pop mov sahf mov push je popa mov aad dec adc adcl int3 ret cmp adc (bad) jno push (bad) ret nop pusha mov fistpl and mov add mov xor dec inc mov leave and rcrb mov jecxz cmp mov sub push mov dec mov jp inc add sub push xlat mov adc aas test std dec add stos push and ss mov or fadds adc js jne pop cmp imul fcompl xor dec add xchg (bad) push push mov xor lea dec pop push mov and sbb lock xor add loopne into add addl inc cld and push loopne leave inc pusha jb movsl jle sub adc add push enter cli divb sbb dec jmp test insl pusha in add std mov pop mov lcall inc mov sti mov dec and sbb add or (bad) mov add push hlt add (bad) jl sbb dec add mov add dec add and xchg test adc add addb fadds jno dec xor sbb les pop add add lock or pop in add inc push dec das or test imul jbe mov enter shll je outsl mov ja xchg sub xchg cwtl xchg and test shl or adc adc das stc or or popa stos (bad) jmp push mov lock adc mov inc or add xchg sbb xor (bad) rorb inc iret insl lock jae pusha xor pop pop dec test jecxz sbb out packuswb ja lahf xchg add mov movsl jg stc fsubrl and xchg jo nop push inc mov ss sbb lods movb mov push (bad) adc dec and inc rclb test dec lcall hlt or push test insb add out xor inc inc (bad) mov pop sahf sbb xchg rolb mov test or cmp and jne daa add jmp hlt jo add add daa sub mov pop adc stos popl xchg notl cwtl add adc jo movsb movsb pop mov fidivrl sub out fsubr mov push mov je adc lcall mull push inc stos arpl and and call jns cwtl push mov loope add or adc es sub pop xor loopne inc test int3 es mul arpl addl adc testl mov enter and das mov mov dec inc test sbb add or rcll imull rclb sbb push loope lea testl (bad) and add jno jne movsb mov jo cmp jns arpl and sub adc lods jo roll nop fs lods and icebp and pop cmp aas fnsave adcb dec mov pop test mov pop mov adc (bad) in lea mov add adcl dec popa adc in push and fs gs enter sbb add je mov add add adc insl outsb and adc or test clc and push mov adc idivl sub inc inc mov mov dec int3 xor pusha mov lea mov data16 add jns inc push mov out mov in ss popa fs js pusha or mov mov mov push pop ljmp add shl mov sbb add lea and mov pop jnp (bad) jl cltd dec mov lahf dec inc shrb cmpsl (bad) lret test ret pusha pop dec add pop or loope lret cld rorb add adc mov std ret xchg sti or fisubr mov xchg xor xchg mov dec neg imul lock flds popa test pop ja data16 xchg add int3 xchg cmp rorb add into jle xchg aas pushf pop sarl arpl (bad) xor lock pop jo add sub sbb out rcrl cmpsb adc inc in cmpb push and or (bad) mov inc or call adcb in inc das iret xchg dec addr16 sbb aas mov stos js movsl enter fwait or leave add pop les imul loop dec mov fcom jo loope xor sbb adc sbb push xor lea call ss sbb push add lcall cmp dec jnp aaa and add xor lea xor sbb insb adc shrl sbb or out pusha in stc into ja add (bad) lds (bad) or and ja flds and in add arpl and mov pop or data16 dec mov cmc add mov mov scas jbe inc test leave jge and add rcl (bad) (bad) mov movl outsb pusha cmp int3 sbb mov out js dec loop adcl popf je lods aam pusha ds pusha dec aad out sbb adc lds pop paddb std or push mov and insb xor fstps or xor mov and xchg insb pop mov push movsl outsl out mov icebp in ds clc jecxz jns ljmp pop push int3 int jne sbb lret xchg add lret add js add mov sub or add inc inc outsl jecxz movsb (bad) or mov xchg rcr aas (bad) jns cs popa dec xchg push xlat inc sub clc xchg test or mov adc sbb inc sbb or push in or leave (bad) arpl in mov test dec jmp std mov pop hlt (bad) xchg mov cmpsb xchg int3 xchg inc xor mov mov push pop js xor jo push cmp aam or clc loope das or adc out stc xchg adc icebp fs lcall fbld iret xor or and aam xlat int jge adc jle or ss adc pop sub hlt scas jnp sbb aad sbb inc mov push js pop addb loopne push add stc and idivb dec sbb lret hlt popa push jno movsb aaa mov movsb mov lahf jmp cmp add shr sbb add repnz mov mov out mov aad cmp jae cs fidivr rclb (bad) push jns add in inc sarl fistp add sub lods lock xor inc or icebp and or xchg adc (bad) xor pop mov mov push dec lahf (bad) dec pop imul iret fild mov xor rcll pop add sub cwtl hlt stc push xorl iret mov jg add (bad) mov nop mov fistpll push in in pop or mov inc ror fs jl adc ret push push mov (bad) sub xor add or icebp aam nop inc mov add xchg adc cmp outsb imul stc jmp cmpsb (bad) arpl jmp push aam add mov nop pusha jge pop xlat add inc out fisubr repz stc sub push rorb xor jge mov mov mov sub lock aas mov test mov aad (bad) mov pop add cmpsb jne test int3 and inc xchg dec mov subb add scas scas push push aaa pop loope inc or addr16 pop test xlat and jle and mov and pop test aam loope lea mov push mov lret and xchg push mov xor or lret addl and test push dec jnp mov nop imul mov les cmp push inc in bound and push idivb (bad) push loope aad cld lea jnp mov push xchg aaa mov inc add insl xchg sub loopne push mov pop dec stc test js fldt adc into test test adc pusha jns les inc xor push xchg pop cwtl enter movl mov and out mull into leave push push es or xchg add xor out leave test and jb sub scas dec dec push add out rcll inc aas add add jae pop adcb loope inc or fs fbstp fsubr add add cmp mov push push pop loopne ds jo add xchg and sub pop mov lret push jns js mov inc fst pop int3 inc or (bad) and push add fwait popl add mov roll shlb and daa fcmovnb pop xor dec loope aas xor (bad) aam nop mov loopne das mov xor add push aas les mov or mov xchg dec je add mov ja mov xchg mov fild xor adc adc or test cmc lcall cmp hlt sub iret push sub mov adc pop inc pusha fs cmp pop popf out jnp negb repz (bad) aad int movsb or loope pusha dec outsb cmc add sub loop bound add inc loop mov xor adc jl clc dec pusha aam add cld add inc cmp xor repz (bad) cltd inc dec aam imul jns out mov fsubl adc cwtl in stos cmp scas cld cwtl rorb jecxz sub mov xor out fild fs inc mov pop movl and pop pop xor (bad) mov sub adc fsubp adcb adc iret cmp pop push xchg or ret inc xchg sbb or jne jmp inc loopne das int3 dec js and lds jo clc test pop push sub arpl (bad) in pop dec clc cld (bad) push push aas inc insb out packsswb stc lods sti jmp mov add pop mov dec arpl add int3 mov xchg les (bad) icebp pop or xor aam inc pop push andl dec test out shrb aam inc nop mov pop and sbb add mov pop aas aaa mov push jo cmp push xor pop and inc ret pusha faddl insb xlat jb clc or or inc mov ficoml test lds in hlt and aaa rolb inc sub (bad) fbstp jl cmp or mov movsl jl add sbb nop cmp or inc int3 int pop call cmp fs push loope ret mov mov nop fcoml mov (bad) iret xchg inc mov dec adc jbe mov adc out push test std or (bad) les test cs (bad) test add pop divl mov push mov mov add xor shrb scas mov ret mov cmp dec xor add or sbb cmpsl push cs adc sbb jecxz xor faddp adc inc mov push or lcall (bad) rcrb xchg xchg out jno in out sub mov out stc or inc ds repz cmp lock add push sbb sub mov addb cmp push pop or or xchg and push loop lods xchg fbstp mov pop or mov roll xor adc xor sub je add jns outsb pop mov js adc cli or mov fs add xchg dec mov fistp and dec pop jo cmp dec xchg or pop cmp (bad) and xchg ret (bad) mov cld add out xlat dec js cld adc clc call fcoms rcr stc push xchg int3 pop (bad) dec or or lods sub add call int3 add mov jecxz test fs add fbld test push stos pop cld (bad) (bad) or push and jo divl insb test xchg mov outsl add xor aam shll insb ljmp xor push xchg in and int and cltd mov in xor add orb pop fst ror fs fidivrl push sbb push cmp add xorl fiadd adc dec call pop cmpb lret jge repz or push mov add loopne jnp cld jge and and je dec adc adc (bad) lock jl add enter push mov add icebp fs sbbb jo pop add pop inc xor jne mov xor jl out add int3 add test mov test ret dec sbb adcl pop mov insb cltd jnp jne dec mov (bad) push cwtl jo in mov xor (bad) cmp pushf (bad) rorb pusha addr16 ja xor xchg je add jl (bad) pop loopne call outsb mov les jnp pop and ja cld fisttpl in frstor out loopne inc add mov and sub (bad) push cmp push lret jns add rol (bad) push insb jne sub scas pop push daa and mov xchg sahf push or lea jnp cmp pop xchg sahf negl ds jmp sub xchg push jnp rcrl and and js out mov or adc mov xchg fmull xchg iret jnp mov les jo jl add jo mov inc ret fdivs xor xchg add repz inc gs xor xor (bad) fadds pushf dec jl subl or mov cmp sub pop mov push add cmp push mov das and push jo pushf pop sub adc mov movsl dec test add pushf inc hlt jae sbb push push mov loope inc mov mov push push xor inc sub sbb jb jo inc shlb and mov inc adc adc clc mov push lahf jge aaa dec push mov jg cmpl sar ds bswap clc lds dec mov loop xchg push inc cmp cltd adc clc clc adc jl dec fldt das push stos pushf mov (bad) cmpsb inc sarb mov pop sbb cmp scas inc xorl sub orb ret mov test lea mov pushf adc add in add lods push dec mov mov xchg mov add (bad) push ljmp add dec movsl xor pushf cmp push inc cwtl or mov outsl loop jnp and push and inc int3 jp jecxz mov inc sbb inc inc xchg add ljmp mov add rcll cmp jns test andb xchg hlt fnstenv add negb mov or add adc movsl adcb aam test cmp loopne int pop out or call scas iret xchg xor mov in nop clc inc addl pop lods xchg push lret cmp mov mov adc shlb mov cmp test outsb rcr scas (bad) mov cli inc pop and jnp outsl mov lods dec push and add and dec or inc cld xorl inc in add fcmovb cmpsb shrb sub jnp shll and mov aam inc les sbb inc aas cmp ret xchg xchg out dec mov loopne gs sub pop (bad) pusha cmpsb lods das shlb cmp dec push std jnp or ficom (bad) fdivrs mov sbb shr (bad) or pop and xchg pop and js add xchg xor movsl sti xchg fldenv lock es arpl mov (bad) adc inc les adc jo fwait mov pop cmp or (bad) and sbb popf sbb js movb cwtl fsub scas cwtl sbb mov jg shrb and add jl aam mov add pusha daa mov push cmp mov (bad) int imul loop lock mov xchg lods cmpsb std dec adc sub or mov movsb add shrb add dec pop add mov insb xchg add ficomp xchg mov dec push sbb pop inc jo pushf sub ficompl push xchg xchg testb stos inc test cmp xor xor inc xchg xchg and jns cmp mov xor xchg stos fcoms mov stc cli rclb sahf dec sub fiaddl int3 mov sub mov jl xor and mov sub fcmovb mov sbb mov inc cmp insb jmp (bad) jns xchg aas mov push daa add rol enter sbb and ret xchg mov xorl fcoms adc pushf push jmp push int3 add xor jl adc or and xchg cmp jl add xor add mov add or js mov or mov jns mov popf xchg and mov mov rol jle pop fcmovbe or ja cwtl xchg add rcl adc push mov xlat mov mov lock or out pop pushf repz pop loopne add and aas add ljmp fstps addl pushf mov (bad) or leave push es adc adc and add adc rcrb rcrb jo scas lock mov adc sbb cmp cmp and or sub call add or adc inc or xchg (bad) xor repnz (bad) lock jns inc incb inc aaa sbb push (bad) sbb sbb push xchg mov sbb rcrl loopne mov and pusha sub xchg add out jecxz popa mov outsl cmpb xor dec add out dec sarb dec stos test xchg jl add add mov and jl adc sbb inc and cli es mov xchg mov subl xchg push insb rorl icebp fiaddl call cmp jecxz push lret faddl in nop and sub jo icebp mov pop orl mov xchg pusha jo pop ds xor push sbb xchg pusha call adc mov lret push nop ljmp lea sub das mov mov xor push cmp mov push popf mov xchg xchg loopne movsl mov or add jnp addr16 push insb or aad dec fstpl mov cmpsb lds dec lret (bad) or inc enter or inc int3 test mov in mov push nop mov or scas mov lods pusha and or cmpsb cmp scas fs clc dec pop pop repz fisttpl and add sbb push mov insb add pushf fwait pop sub cmp mov xchg int3 add push sub add jno add out sti jl inc mov jp aad lods jo mov dec or repz or cld adc imul test subb lds cwtl mov push cld mov mov xchg or add addl ret cs scas test es clc fnstenv sub xchg test outsl pop mov je fist movsl push sub mov push cmp data16 cmp inc inc (bad) fcmovnb andb popa or das pop inc andb (bad) out adc faddl (bad) push and push mov jne xchg cwtl push popf fs test inc (bad) mov loopne or popf mov inc pushf xor fist shrb sub loope sbb aad sahf (bad) adc sbbb mov xchg stos and cmp add mov pop (bad) fildll lds xchg push xlat mov cmp pop dec icebp and cmp and add sub scas shlb jo les jl divl inc lock sbb cmc scas nop push pop jbe add mov cmp rcrb jge sbb or loopne adc inc rorl nop add xchg outsb xchg xchg pop cmp add or push adc std mov xchg jl mov (bad) addb mov out stos enter add sub xor ljmp scas popa idivl mov dec in rolb call mov cmp mov in xchg sub inc enter inc pushf xchg inc xor push push push push pop dec push add loopne push cmp or add xchg lods inc pop add xchg ret mov stos lcall add pop std dec movsb inc lods mov out cwtl inc andl repnz add (bad) mov iret sub add inc enter movsl inc cmp es cmpsl rclb inc mov lahf jg xchg cltd test jbe add ss mov push dec and pop sti inc add mov sbb sub inc mov adc scas mov mov aam add ret pop lret sub (bad) mov les es fs sub ret push mov cmp or fs and xchg inc mov dec cwtl inc loop lods loopne sub sbb add cmpxchg sub adc adc mov jmp push mov aam lret cwtl ret push lea std mov pop or xor cli sahf test mov jae pop ds mov lods sub or inc inc loop jl cmp push adc jns or inc in lds and dec aad add lods cmp aad cld test (bad) aas cmpsl ds push sbb inc sub jno add call add and lea push push xchg dec mov (bad) pop lds in in add inc hlt ja jb pop push call int3 adc mov push imul add (bad) shrl pop or xchg jl dec pop loopne push lods pusha mov jae ret flds add and mov cmp hlt adc lock lret xchg add xor push in xor (bad) mov lret sub dec pop jno adc daa (bad) push mov inc xchg ja sbb cld add lret fmull mov add lret ret fdivr push add addl repnz cmp cmp pop in lods in add movsb ss lahf cs push imul in or cs adc paddd (bad) test jg or jnp adcb mov out adc adc sub or pop sbb push xlat or adc and push arpl adc fs test sar in addl add cmpsb mov arpl loopne jo jl push in andl add push add adc pop add xor dec mov test adc add je mov add push lods sub cmp xor addr16 inc and sahf clc icebp cmp add das push cmp sbb dec rorl xor addb add insl out iret mov sbbl lods scas cmp pop add pushf test cmp bound int jge mov shlb cltd ds add xor push add add hlt leave divl add or test (bad) cmpsb lods arpl pop xchg cmp daa addb push pop imul lahf psrad (bad) outsl mov imul dec cmp sub dec sbb add or or mov push cmp sub push lahf cltd inc mov mov push add int3 sub rorl dec into mov xor push jne aad adc lods mov out sub or imulb or outsl add add or out mov popf les js popa sub rorl or add rcll push add lods mov fadds lock mov xor jmp lods push ret xor pushf adc adcl (bad) arpl jns js repnz sub clc lods cmp rolb dec fwait sbb mov mov lods movsb mov sbb dec pmullw xor fistp fistpll sbb push call cmpsb or and or pop mov data16 mov pop xchg or sbb fcmovnbe out lea movsb lock sub lret push jle sbb in aam aas lock (bad) push xchg andl test lods mov adc lods and sbb pop pop mov loop add dec jb cmp ljmp pop aad cmpsb scas jae mov mov shr test add mov into loop lcall adc and mov test cmc push mov add mov add cmp cmpsl rcr mov sbb or push lahf pop scas xchg mov dec dec pop mov cmpsb aaa cmpsl mov mov or jl cmp stos testb mov mov call lods enter mov dec sub add and les hlt mov mov arpl inc sbb jbe into pop add push mov add mull das subb popf sbb xorb mov adc ret fsubrs loop add mov lock and add add es add cwtl subl mov xor les je pop cmpsb (bad) jbe sub sub cli test cwtl iret mov lock into ljmp or or ss lret imul (bad) cmp push mov dec mov and mov shr lock sbb stos xchg xchg mov lahf pop inc test sahf lldt fcoml cltd mov stos daa enter adc pop out shl ret jbe lock add lret int3 movl sbb dec movsb or and xchg dec ret mov imul repnz stos push mov mov pusha clc (bad) popf movsb add gs in andb dec adc adc movsb sbb ljmp pusha xor fisttpl xchg ljmp sub in and sub outsl push xor adc push enter mov loopne or insb xchg and ficoml push (bad) repz add cwtl xchg insl aas in fs popa loop sbb or fcomip cs push and add xchg lock lret sarb gs stc (bad) leave js xor or add test (bad) add xchg dec dec or sbb fdiv lods mov cltd inc test sub out mov inc xchg adc rolb add and ljmp outsl shlb dec mov xor insb push fsubr push scas jmp cmpsl xchg movsb rclb xchg inc or sbb add dec mov or xchg inc adc orl test inc mov and add lret jmp clc mov (bad) outsb xor cmpsb jle enter xchg fadds mov nop cmp pop fs lcall push aad fistpl push and gs rcr sub aad jns pop (bad) jnp aam std movl push add lods inc or add mov je popf addl xchg jp adc mov (bad) mov leave out cs and into add in loopne mov cmp cltd mov nop pop add add mov push pop loope lcall cmpsb movb aad push add mov rcr add sub rolb (bad) in mov or jmp cmpsl ss add xchg push inc sbb inc fs testl sbb outsl call pop test sub push pop (bad) dec add loopne add sbb mov pop adc and push inc in imul and call dec dec lock into fiadd xor shrb add sub mov repnz cmc adc xlat adcb (bad) xchg enter aas and sbbb add fcomip rclb or and fadd int add mov aad clc (bad) sbb in ljmp lahf xor mov cwtl je cltd mov scas add sub lods xor je pop inc (bad) aam les sbb shlb add push icebp pusha xor xor shll adc add jl push mov (bad) shrl iret mov xchg add lret loop inc test push popa shrl push mov mov lods cwtl nop jo enter adc rol jae cmpsl add fwait rclb xorl enter lcall and cmp inc ds and add or xor push aad popa jno add sbb or jnp sub ret mov sbb sbb adc pop add cmp repnz xchg test repz jp pushf lcall xor mov push (bad) cmpsl aam je (bad) mov in cmc loopne add lods adc sbb faddl call dec cmpsb adc dec cmpsl lds adc mov dec push out inc int3 js or cmpsb cmp test into or dec imulb add sahf xchg xchg mov mov in sbb jo sbb lock in add add jnp jo lahf adc adc xchg mov add lahf jb ret push fwait lret push loopne lods pusha sub test mov fwait sbb xchg jle sub mov adc daa cmpsb fildl jne out cltd sahf mov or rorl daa repz lods stos dec pushf in inc mov and (bad) lret mov mov mov dec pop inc dec loopne add push (bad) aaa lock in xchg mov leave mov lods push adc pop add inc fsubl pop (bad) push add mov call outsb sbb repz aaa add shrl cltd pop mov loope push add fdiv sub jge push notl mov int3 push (bad) shrb loopne (bad) xchg pop (bad) add (bad) pushf cli and mov inc xchg lods dec mov cmp hlt add cmp jecxz jbe idiv cwtl mov xchg add data16 adc lods les dec add lcall sbb shrb les push cmp pop mov and push xor (bad) mov imul (bad) loope lret je int das push out add inc push (bad) hlt mov cs add mov jmp inc adc push pop iret lret mov mov mov mov lods add jne cmp adc popa loopne test cwtl mov cmpsb loop mov sub cmp jb xchg lock loopne cmp test adc enter add mov leave call sahf cmp and ljmp test jg dec xchg adc push mov jae add and loopne jmp es sbb xor or into push nop pop sub sbb adc je clc mov lret and and add rdtsc cmp xor cmp lcall mov push sbb test pop push mov dec mulb popf mov push xor pushf mov xor andb out rorl mov xchg into rcr mov rorl pop sub jle aas mov adc outsb push and lcall shlb lea lods adc loopne push push sbb fadds mov push cmp (bad) daa cmp mov test sahf xorl xchg iret mov jge int3 and in adc aad movsb in stc test movsb push sub into dec xchg je pusha movb sysenter push and cmp enter add push int and cmpl jmp xchg inc js add jmp sbb stos sbb rcr xor mov mov and lcall and add rcrb repnz ficoml push test inc imul adc and stos sbbl icebp andb adc push add sub adc mov out fbld aam xsha256 cmpsb nop sbb int3 mov adc xor mov pop scas sbb push dec cmp mov mov cmp xor shlb pusha (bad) popa mov stos fxch fldenv std adc outsl (bad) scas fsubs sub xor push xchg fwait add sbb movsb add loope jecxz sub push add test adc mov cltd pop pusha adcw mov xchg rcr out and orb andb adc scas mov adc test jmp push lods sub out mov jnp cld test inc sbb test inc es fwait movd adc cmc xchg test jg cwtl xchg jge lds cld or jge lret cmp ss lock pop cltd xorl pop add mov std (bad) sbb dec lea sub add popa mov or (bad) in pusha aaa and dec jg add adc icebp mov mov sbb std outsl int3 and sbb cmp andb or or sub andl addr16 cwtl ret inc je das push sbb (bad) add sahf mov (bad) jmp movhps xchg add dec test sti sub ret rolb scas shrb mov pop xlat and movsb dec cmp andl cmpsl xchg hlt xchg cwtl inc rcrb push sbb xor (bad) mov call js xchg push out push lret shl cmp pop or sbb mov push faddl rorb or dec xchg push dec adc rcr pop push inc push out jecxz (bad) imull cmp jmp jno or cmp jmp mov jge push lock es add sub or mov (bad) and (bad) adc and rcrb jle or test inc adc pop es negb popa nop lods push test add pop mov out icebp jl add lahf and and (bad) repnz xchg js std push (bad) cmpsl clc lahf xor push and xchg adc mov push inc test rorb add sub xchg jnp mov xor call cmp adcb lahf test add cmc loope das stos es mov mov (bad) call xchg mov sub sub push je movsb mov sub jb out cmp andb arpl loope cli lock fnstcw add data16 (bad) mov cmpsb mov ds adc rcrl add sbb xchg mov sqrtps add jp ja jbe inc adcb jnp add rcl adc add mov jle push sub dec pop cmp pop dec mov xor shll push std aaa push les call add ret sub cmp or orb loop sbb test inc popf mov adc xor sahf inc sub xor je cmc xor inc pop mov dec adc or or in popa in adc mov (bad) mov inc inc insb or xchg mov push push loopne rcrl and dec xor lahf adc loopne and js and inc sahf stc dec xor lock jmp pop inc inc dec sub test pop cmp dec and fwait xor push mov xor or hlt xchg mov scas dec dec cmpsb and cli mov fnsave pop pop pop add mov addr16 add xlat sub repnz add fdivrp add pop sbb sbb jo mov lret pop sbb adc jle and mov push xchg adc sahf dec fsts push sar loop mov and out mov rorb xchg aas or adc and and test addr16 sbb outsl mov or std pop xchg dec popw (bad) cmp insl add pusha outsl out sbb sbb adc jl jnp fcoms jle sbb jge adc inc sub xchg push mov pop inc repnz add push rorb cwtl sub sbb enter js dec sarb js adc xchg or lock jg add lods add js sti lods clc and les sub and aaa inc mov mov inc pusha lcall xchg sbb sbb xor adc push nop pusha sbb jecxz call inc jbe and adc or sub mov push mov and and pop push rcrb add js (bad) push sub cmp and inc sbb imul (bad) sub sbb scas sbb dec adc insl dec add mov mov xchg xchg mov (bad) or xor (bad) insb add std sub or cs les pusha xor outsl xor bnd add sbb xchg sub push adc lock bound dec es xor imul sbbb or and jp test jmp xor mov lar inc mov inc cltd mov js adcb pop cmp ficompl inc or xchg sub cmp inc mov add and addl fcompl nop and dec and add xchg punpckhbw add test sub add (bad) (bad) clc or mov xchg and movsl and cmpsb lock push dec sbb inc cmc enter fsubrs insb std jns mov inc or js dec push push xchg sub mov adc dec push les mov cmp movb ss int3 add arpl mov cwtl in xchg dec mov add cwtl mov lret sub fsubs pop movb pop mov jo sbb xchg mov or sahf addb std push outsb jo out pop fwait add scas sub movsl add popf test leave sub pusha (bad) xor push pop sbb mov aam test xchg rolb sbb adc jne pause jl mov rcrl push aas popf cmp shrb les mov stos add out scas mov sbb or push hlt lcall (bad) push ss fs lea mov les push or pop jmp fwait and xor out add in lods dec and je pusha adc cmp or cmp cmp rcrl jl or add call and hlt movsl loopne and in xchg mov jo nop fs add std pop dec mov stos cmovae sub cmp leave mov mov sbbb lds addb (bad) jae or xor and mov add call (bad) rorl aas pop and dec mov jg fnstcw pop inc les mov fmull lret push or dec sub pop arpl pop xor je idivl xor addr16 bnd inc mov inc mov and xor add jbe enter out popf fdivrs mov sbb inc mov cs cs outsl fsubl add jae add jg int aam outsl lock inc inc mov cmpsl or pusha add aaa mov add cmp sbb das (bad) push jmp push pop into pop ds hlt subl add mov mov mov addb aaa les add aad das add imull push cmp arpl das leave mov cwtl add add and sbbb jns (bad) loope pop xor stos aad cwtl adc mov add test mov bound pop loop push pusha push test and sub push push test pop in enter add xchg add xorl addl push push cmp add add test and mov pop inc mov jge and lods sub jns add mov sub sbbl and add or add (bad) jp dec ficompl clc shll push xchg inc lret inc test out shrl mov test fnop and pop jnp adc or and add sbb scas jecxz cmpsb or xchg add sub xchg push nop mov int add pop cs imulb in pop out addl push lock inc pushf movsl push dec jle sub inc mov sbb addr16 add add jmp xchg mov shrb or add dec jbe push and add rclb rclb imul fnop je mov cmp adcl pop nop pop into dec test xor pop jno sbb test cld sub aam rorl les int mov and and into pop pop sub and and inc cmp repnz pop repnz loopne mov add cmpsb jo cltd js add pusha mov add adc sub pop imul cld sbbb jl dec cwtl xchg sbb adc xchg ljmp stos pop int3 cmc push dec ficom stos pop ss jp in mov out sar (bad) test stos xor mov mov loope push loopne lret clc lahf add nop add fld dec scas les push das cmp or sub adc mov pusha inc fwait mov xchg repnz adc jbe and outsl add inc aas add fldz je roll lea dec xorl mov arpl lock push movsb ja and pop bound adc mov sbb xchg push mov movsb cwtl adc loope sbb addr16 mov xor lret mov ljmp sti xor aam popa add cmc cmp pop mulb (bad) aam pop test mov mov fcomi andl jecxz fsubrs xchg pop xor or mov add in sbb out js jl add stc xor lods rcl jmp dec icebp out imul ds pushf push pop out adc and jo ds sahf push push jle stos push js xor pusha imul cld add scas (bad) jno les mov mov aaa sub jne je add negb mov jo xchg aam push cmp pop xchg mov rol imul jge add in add xor sahf add xchg mov xchg adc or or jecxz rcll add xchg jge movsl push lret stos xor adc sub popl lret icebp and mov or in mov adc jmp jg push sbb jle cmc xchg lds nop add testl xchg mov cli rorb push push lret sub or in test sahf icebp sub sbb aas mov add es fs sub add xor imul lods cltd push adc sub inc cmp add loopne mov xor mov test add push or or aam sbb sub addr16 add sub ljmp xlat movsb mov adc xchg ror adc sbb pop test cltd or repnz or outsb cli std arpl cmp scas add call inc and nop sahf mov adc sbb mov lock rcll and pop add adc mov fs and mov xchg and cmp pop add xchg pop sub jo js sarb addb loopne jo mov call mov cmp clc testl repnz fs call leave sub out lret or not add rol xchg add or iret sbb add jb movsl pop retw push inc push mov xchg loopne or psubb add or pop mov negl fs test xor cmpsb enter imul outsb cwtl inc add in jae ds sbb cmpb (bad) or add test sahf inc sbb pusha ja add repnz scas jg sbb or lea adcb sbb fwait and je pop sub xor and push sahf and mov test xrelease int3 cld xor cmpsb lock (bad) mov inc xchg out enter dec insb pop mov xchg sub iret and push jo pop sbbl out das dec cmpsb add cmp sbb sub cmp fiaddl add (bad) or cmp push add jmp push adc add xlat push enter inc lcall sub sbb cwtl and cltd sbb sahf ss arpl and inc mov add dec shlb rcrb icebp shlb add and mov inc les push adc es ret jmp in test push add push cmpsb in sbb cltd outsl cli loop add andl stc fs js and mov sub pushf bound aaa lock ljmp mov and fistpl inc mov bound and pushf jns and jp cld sbb lock data16 icebp loopne sahf je arpl push push or std push inc xor add xor (bad) ja push xor lods cmp fbld sahf js (bad) leave jmp and (bad) inc lcall test and and cmp movsl cmpb test xor or clc add add pop or (bad) int and push lea movsb fwait int3 js xchg in add mov popa sbbl adc sbb sbb xorb add xchg lods jnp std cmp data16 movsb jge mov inc test xchg (bad) and mulb xchg push xchg clc sahf push cltd cld inc add xchg mov popa xor and and cld dec (bad) mov or add andb push movsb inc mov and mov jp and push mov jmp fs inc test or aaa push mov sbb cmp add mov std jl rcrl faddl sub inc hlt nop roll sti and push movsb cwtl bnd js jge aaa in adc js pop pop push push mov mov aas loop adc inc in fwait orb push mov push aad inc imul sbb in pop mov mov dec adc dec xchg xorb syscall ret stos xchg addb out aam inc mov inc je jno,pn adc add jns or add sahf je inc fmul cmc cli add adc mov add or and repz cwtl adc mov push popa fsubrl ljmp mov or pop ja mov pop cwtl call clc cmp and push (bad) sbb mov xlat ljmp adc sbb and cmpsl imul mov (bad) mov sub rclb mov jns xchg mov nop mov or shlb adc push or lock clc push add sbb jmp cmp cmp jns pop push fsts push push pop dec push and dec adc es add inc pop push pop pop xor test sbb in mov decl pop or xchg inc mov stos cmpsb loopne add dec add xchg loop pop mov pop movsb pop sarl cld or add cmpsl enter add push cld mov ficom add sbbl sahf push in mov cli pop lds jne out add push adcb imul data16 lret clc jmp mov or (bad) cltd cld ret or push pop adc call add lcall lods nop lods stos (bad) cmovs cmp pop jge stos adc add push push mov cmp (bad) mov xchg dec dec sub jl mov rclb arpl sub cmp jbe add je dec das add or ja nop add call pop movd xor jo mov insl sbb sar in sub dec sub and add enter in pop mov sbb je push add div fs mov loop mov add scas nop inc push jg cmp pop jle mov add mov push mov sbb jb and popl lds xchg cmp push or mov in adc std push enter or ret inc rclb nop pushf and xlat hlt cmp or jnp sub push (bad) repnz mov push inc pop out jl add cmp or adcb jp add cli mov mov cmpsl dec aad xchg sub add fisubr repnz addb popf lcall mov pusha inc add push sbb es mov sbb roll lret or mov dec imulb sbb leave (bad) or aaa or cmp sahf arpl shrb mov mov add data16 mov mov push ror (bad) pop sbb mull adc aaa mov lock sbb sahf xchg fs pop loope testl insb aam cld or xorl ss cld rorl add (bad) pop push push into cmpb pop xlat inc (bad) ss dec std fsubs movsb push and inc sbb cwtl clc push pusha (bad) icebp sbb cmp mov loop xchg inc fistpll lret mov inc lock add aad loopne dec pusha sub add das or dec jbe (bad) push mov nop push sarb pop push aas cmp sbb xchg sbb pop call xor mov js fdivs add fmull jp insl rolb aas adc out sub mov mov xor and mov adc out mov dec sbb test mov pushf fs test movsb lcall adc xchg adc add bound pop rclb loop mov enter cld xchg mov mov sbb rclb jnp mov ret sahf sbb sub xor scas and and push popa pop pop sub xchg push sub sub movsb cmp jg rcrl or cmp bnd cmp enter inc push and mov jge ror mov mov scas or nop rclb adc push dec popa push lock enter les or rcll roll pop arpl lcall cwtl dec aaa xor and sbb mov fs cld xchg fiadd or push cmpsb mov xchg adc mov sbb add fstl and pop lea add sahf cmp cltd jns add clc pop pusha std sti dec out and push rcrb nop adc mov sub inc mov in add mov jmp cmpsb loopne add out adc pop or add adc mov sub or adc fs lock jns push jne sbb aad pop mov sbb call and push jno or (bad) mov ja or pop mov sub js inc push cmp add call push push shll inc pop pusha jno lods pop push add daa sbb xor jb lret add pop add je dec cmc loop cmp jge xorl js add pusha rorl dec mov sub sahf or pop cwtl (bad) ja pop (bad) sbb scas xor add and js adcb cmc lock push push adc cli imul sbb cmpsb pop daa inc dec cmp loopne mov fadds mov adc ret (bad) xchg in inc jo les sbb popa push jbe jns mov add xchg adcl jmp mov mov mov pop add test rcrb lods pop jl dec xor pusha xchg xorl jp subl adc and (bad) jmp inc xchg xchg or mov add add repz adc or subb call movsl cwtl inc adc jns lods jmp xor adc enter sub cltd dec push add insl mov and mov sahf xor xor cli add sti xor outsb sub fadds xchg push inc insb and sbb sbb add sar addb out jmp cmpsb enter aam sub add insl push mov pop add psadbw ret lock cli jl aam shlb pop jecxz push jb decb lock sbb xor sbb push and push adc clc arpl cwtl aad add cli shr mov js and cmp dec ret std push out pop scas sub rorl (bad) hlt xchg cmpl sbb bound ljmp std cmp push adc jns cmp mov cwtl and sahf stc jecxz mov xor inc nop jle hlt lcall lea mov adc adc adc xchg jns inc or ja div pop mov jl leave lret les add cmp jno sub mov add fs aad mov in (bad) adc pcmpeqd out stc orl lods arpl pop call xor mov add fisubr int clc hlt pushf in adc clc or dec or jno mov xchg je add testb loop sub dec sbb pop push dec push dec pop sbb add leave std or popa divl cli jl insl fidivrl xchg add mov pushaw jbe clc addb sbb lret test adc andb add js,pn movsb add mov mov add push rol mov stc add sti mov pop mov (bad) repnz js (bad) xor jbe scas rcr icebp dec (bad) sti out jge mov je (bad) int3 movsb mov sbb mov into jmp popa or rclb lods pop adc mov add (bad) or sti mov jmp sarb clc testb and inc data16 nop cld orb lahf dec orl dec xor in lods or cwtl repnz xchg outsl adc pushf cwtl add dec sbb jl outsb ds out xchg cwtl rol dec (bad) xchg adc mov enter add popf push xor jb add lea mov stos fldenv cwtl xchg sbb roll sbb xchg and push mov in rcl cwtl xorl (bad) xor ret jno push inc in sub out loopne mov xchg mov dec mov rcrl cmpsl nop push jbe (bad) xor sbb movsl sbb jl outsb fsubrs xor in cmp lea subb push jbe iret xchg enter es fmuls jg pop mov add mov mov add std pop mov mov add in scas add out pusha pop call cmp btc mov ret das pop outsl mov repz sbb clc mov mov push add lods fimull mov mov jno mov cmc mov incl outsl in xchg cmp mov cld or insl outsl mov sbb cwtl addr16 xchg test out add addl inc hlt rcrb pop adc mov jg jno inc in mov or out or call fxch mov sahf orb adc (bad) mov adc mov or outsb divb loop push mov jl mov ds pop push out jle jno daa xchg mov imul ljmp out (bad) mov mov sub fsubrl add hlt push mov fcoms clc (bad) out and dec pushf push inc mov inc jl in icebp adc orb int add push rdmsr popf push pusha xchg nop cmp in aaa add xor ret inc je add add int3 or loope or ret lods insl fistpl jl add outsl push shl mov mov inc add pop xchg mov inc out ret xchg and divl mov and stc jmp mov stos jbe dec je cmp mov or popa adcb jmp js and (bad) jo dec add or rcrb imul dec mov pop jno or mov mov orb jae jbe adc sub into inc push cld push outsb les cmp leave enter xor ja jmp pop sbb mov bndldx cmp dec movsb xor add cmpsl and sahf mov shrl test call cmp or gs jbe in pusha lds ret test or mov loopne stc rcrb subb xor push js aad mov (bad) add in (bad) inc test add mov out push inc mov js inc into addr16 lret es rclb test inc sbb adcl sub js mov shl cltd test and mov shrb out dec iret or mov mov les xchg mov mov inc mov cmp add inc sbb inc xchg pop hlt in (bad) mov xchg adc fs jmp xchg shr std push (bad) sub inc pop loope js in push mov add (bad) rol mov or inc pop addb xor add inc xor xchg sbb push jo jl in popa inc mov (bad) jnp insb sub loopne add push out mov popa and push inc movsb or mov inc sub adc mov jnp outsb out push inc sub ret clc js repz pop adc les popf xlat sub iret add sbb inc pushf pop lds add cmp nop xor shr (bad) xor mov add aam lods mov inc mov fsts lea mov ret inc pop js nop lods add in sub fnclex push hlt mov mov mov sub cltd push sub aam data16 cwtl mov xchg mov inc xchg or inc or gs xchg es mov mov lods loop mov insb jg push (bad) fs enter ja add xor sub rcrb mov insl shrl jo aam and subb lds je jmp clc push movb push nop loopne (bad) xchg outsb ss js mov aad jb sub lods (bad) js add sar loopne push xlat or add mov jns xchg cltd es jge fimul sti inc lods in lock addb mov (bad) mov shlb sub clc shlb js int3 adcb dec add popf xchg adc or pop loopne jbe adc es push ret cmpsb out sbb pushf pop xor push aas (bad) mov nop movsb cmp call ret hlt ficomp xchg inc fnstcw pushf mov int xor lds pop push xor jbe cmp sbb int and hlt bound scas lcall xor xchg test and movb js xlat ret jns mul aas or adc ret add jbe fldl ret inc test cs clc jbe lret addb lods dec push or insb push mov jmp bswap inc mov mov xchg jne mov jns jl adc data16 adcl test in push push push xchg repnz or mov (bad) cld push add mov xchg cld add aaa addr16 in stos mov add mov and mov fadds jl and addr16 xor inc mov and and inc dec pusha cmp or int3 or sbb sti and (bad) mull jbe orb jo js push or jmp ss popf in inc hlt andl fadd outsb aaa adc inc dec cmp jecxz mov lcall lds loope into stos dec (bad) add and fs das sarb jo jae in add jle pop push mov pop add or loope xor jmp xchg je dec jg adc push ss loopne mov inc inc cld jge cld outsb cwtl and pop push test test lods xor pop add in orl test pushf xchg dec adc sbb inc repz or jo push sub sub push lret xor push aad add sahf cmc xchg (bad) (bad) nop lock and push test adcl xor xchg imul mov or pusha (bad) fwait push repnz jp pop xor dec xlat clc add pop sahf leave subb les (bad) out ds push (bad) dec adc jbe inc adc jo lds push aad loop rcrb cmp or in sbb dec ret sarl dec mov std lcall or inc addl and and cmpb or inc ret notb inc jge add in sahf xor (bad) adc pop inc mov sahf push adcl ret enter add lods es cltd sub sbb pop test shr sbb mov push mov cmpsb inc pushf mov jbe out (bad) fmul adc jecxz sbb add inc pushf cmp lods add mov sbb (bad) add std jbe mov stc sbbl (bad) sub icebp inc adc xor xor and test inc pop ret cmp xchg orb inc push popf mov adc fsubrs insb popf add movsb movsb mov sub xchg adc dec jo adc add enter (bad) lret loopne cwtl inc jbe xchg (bad) ljmp adc add lret (bad) in pop enter subb pusha inc jo adc lods dec and add lock adc lds jns or jecxz sti or cmp js mov xor rcrl jo addr16 movsb stc jns sbbb sti cwtl jmp (bad) jmp andl popa cwtl push mov sub mov shll addb xor arpl fnstcw cmp sahf orl xchg xchg xor lcall add mov ss pop push aam mov add xor mov je cmp sbb xchg (bad) jo mov dec xor or jmp sahf sbb mov rcll jbe xor int sub jp nop imul (bad) jbe nop xchg and sub adc and and enter adc push pop xor (bad) inc shl push ss jge mov rcl jns subl rclb push add adc mov dec push mov jo mov adcb adc or das sub or pusha cwtl and and gs pop fistl cld push add cmpsb jns add stc out leave add call dec rcll (bad) in inc out clc or push sub les clc rolb out xchg pop inc fsubrs sbb xorb mov lcall popa adc jge or mov pusha stos subl xchg add xor in aas or mov out cwtl add mov dec pop std test daa or in in add and iret or pop cmp sub insl mov and cmp push pop arpl insl dec mov add inc xor dec cmp add jne imul dec cmpsb (bad) add cmp and lret movsl popf shl mov push inc outsl xor addr16 lret xchg subb mov mov clc (bad) mov ret arpl lods in and lahf or add cmp enter jp leave notb jo fiadd or add cltd js rolb mov pop icebp lock ja cmpsl aam pop adc (bad) insl maxps jp mov or jno rcrb imul aaa mov push pusha stc in nop xchg sbb iret rol jp loopne push ficomp stos inc dec sbb test arpl push inc add fwait (bad) sub mov push sub ja fidivrl add push jmp adc rcl lret and test les gs mov push jno mov inc xor cwtl push jo mov pop add adc cwtl call (bad) adc lods or xchg bound nop mov sub xor sub mov in push adc repz add shll push mov jo test add push xor lods lcall ret xor xor push adc xchg lahf pcmpgtd add sbb pop push or hlt jle adc fldenv sbb mov mov (bad) lods pop or inc rcrl xchg or pop add inc fild xchg and sbb xchg mov lret cltd divb scas add jno shlb fisttp ret or adc shlb (bad) shlb cwtl xchg fmull dec inc (bad) and jnp or sub mov pop pop mov inc add inc fnstcw fsubrs add adc jne repz mov ret push sub and add and add hlt roll cmpsl cmp sub testb popa pop dec mov cltd pop leave pop add adc jne mov ja inc sbb dec pop jnp sbbb outsb imul mov push mov push inc pop ret inc inc jmp push sub and and adc inc aaa push pop push sub sbb or mov push inc and or add rcr rclb mov fdivs cmp pop push jo out push insl arpl lods add lds cmp xor push push xor sbb add aaa (bad) xor xchg xchg les rol adc es lock inc mov les mov or rcrb inc xchg push or or fisubl push pop mov add mov jge push subb cmovl cmp scas xlat and rcrb rcll push xchg sbb jnp test mov gs mov add aam fstpl insl pusha sbb jb add pop jno ds popa and xchg fbstp cmpsb add adc mov pop jl or and add mov in or push xlat and and out mul mov dec movsl xchg adc push stc ljmp icebp mov loopne or and (bad) mov sahf mov jno pop aam add sti jp shlb cmpsl popa jnp subl and pop pop sub or cmp outsb add inc adc cwtl loopne or add negl les int3 iret ret rorl dec sbb pop inc sbb inc aad lds ljmp test jl jle inc fmull adc sbb xor dec ja sahf add xor fldenv push loopne dec sub or cmc add popf add cs push jmp mov cmp imulb mov sbb mov add shlb mov hlt pop add mov and jo fstpt xchg (bad) pop nop andl inc add fsubl sub jne cmovbe mov jmp or mov xchg fisubrl sbb and fsubl lret das outsl and and iret push dec shll popf sub mov cmovns sti mov pop pop mov pop (bad) pop fdivr test push adc xchg addr16 pop mov jne popf nop push add jle test js mov pop xchg pop push inc mov bound cmp or sub dec gs int3 adc add cmc imul mov rcrl testb mov push or sbb cmp xor jne xor push push jbe lret xchg ja inc ds mov add sub jmp xchg jnp (bad) xor es movmskps dec xchg sub mov fisttpll mov push cmpsl nop test mov xlat les (bad) or roll mov xchg dec inc nop fwait repz loop (bad) sub fstps mov jb add sub es adc sti dec pusha out xorb ds jle (bad) inc cwtl fisubrl scas cltd xor pop sub adc xchg std sbb and test xor cmp (bad) sub mov mov dec pop adc jp mov push and sub in nop ds mov fistp pop and mov int call push inc daa jb ret lods cwtl mov add mov mov sub mov out or dec test iret jge pop and push rolb cld and negl adc cmpsb adc fsubrs pop jle inc test push mov inc fs push flds add adc mov and and fidivr adc cwtl dec push aam inc scas dec sahf push sub jno add adc out mov jno pop int3 loopne push push mov les outsl dec pop mov cmp dec adc fwait dec inc or inc dec fcoml xchg and mov add mov xor pop mov xor mov xchg or adc jmp and pop lcall pop gs aaa test shlb dec mov xchg adc repz movsl imul andl lret sub int mov cld rcrl push rcl mov mov xchg ja sub adc lret lret rorb aam out in lret int3 mov addr16 and fild adc xor push sub icebp or iret inc in xchg sbb add sahf jg fisttpl xchg add jmp jmp xchg mov mov fisttpll sub pusha xrelease add mov scas movsb cmp popw mov xor inc ret add pop cmp mov cs andl dec rcrb add mov mov loopne orl and cmpb cltd dec (bad) jno push cs cmp popl insl mov lock insb aad subl call push mov (bad) lret nop mov mov test pop mov xor cmp dec into jg pop or pop xor mov pop push fcoml or push xor data16 loope lods mov rclb loopne push push jmp lcall pop sub roll dec aas cmp fistpl xlat test rolb xchg mov mov pop out add inc push lods jge out insb add lock push add pop add stc dec mov inc pop xor mov jp enter inc or pop and add xchg add xor lret pushf jmp stos xlat cld mov dec pop sub jmp xchg sbb aaa bound in add mov stos sub jbe invd fwait cmp pop add or bound aam xor in daa out or lret jge add sbb sub sbb jle or cmpsb into jle add push sahf lret clc pop lock arpl sub jg cmc push or adc call ret scas jno xor sub adc pop or fstpl or in ljmp xor test lods sub xor cwtl dec pop push movsb test inc std lahf hlt lret in cmpsb imul bound mov xchg inc add push mov icebp mov add sub mov cmpsl aas call pop enter mov out or hlt sbb test dec add push hlt mov sbb jle add xchg pop cmpsb cmpsl dec dec sbb jo lret add out int sub dec xchg add adc test call add clc inc push test sub pop loope add pop inc sti (bad) dec jl jb js xor in cmp jne in sub sbb pop dec aas aaa sbb jo push mov xchg or js xchg inc inc je lcall push cmp fisttp xchg add js jl or xchg aam adc add adc mov sbb and mov add xor cld fidivl mov push jbe xchg mov add inc lcall xor sbb sti mov jo push mull daa xor aam mov or xchg adc icebp (bad) or pushf aad cld mov adc dec mov (bad) xor fcomps xor mov inc xchg test hlt mov push lahf inc frstor (bad) data16 add stc adc cmp outsl mov aaa jecxz inc lods jg mov mov loope shlb add add mov cmp add xchg rclb fildl out arpl adc (bad) (bad) ss add test and dec imul xchg lea cmpsl movsb push int3 mov shrl dec cli les push dec les or xor jecxz orl mov add test pop les (bad) aaa std rcl cld dec rclb adcl cmp xor xor mov aaa js mov (bad) and or fistpl rorb inc daa adc popa lds xor dec cmp push xchg rcrl xchg (bad) fdivrl and (bad) das mov insb mov push mov dec cmp xchg adc stos (bad) jae push popa and call xor jl cltd vpmulhw fdiv push push js lea pop and mov sub orb fs cld xchg add inc sub or add or add or dec cmp scas cld push dec mov test (bad) jnp lods push adc pop add adc fildll nop xor aas test inc inc cmpsl add je gs sbb test mov loopne push rclb addb sahf or scas xchg add push cmc shl jns adc add fs mov jo add cwtl popa fdivl lock cld xor js (bad) xor (bad) mov xchg add jnp jmp mov test nop out xchg repnz cmp (bad) mov hlt or inc adc dec sbb data16 dec xchg xor sbb lea mov add sbb loopne movsl jle or and fsubrl add movsb dec mov push and inc xor adc sbb and push pop xchg mov mov mov xor ret sbb mov mov xorb lods (bad) fwait movsb lods mov lock fsts aam dec and out loopne js jno clc or and pop mov pop pushf mov rcrb pop outsl dec pusha int jl pop dec pop dec jnp loopne loop jle icebp jo sbb andb mov nop dec inc sbb cli sbb xchg inc xor pushf and lods adcb sbb mov mov add jmp mov not cmp lcall movsb xchg cld lods dec nop add xchg js add cld lds lcall pop nop cmp push stos jno inc add js fdivr imul sub xchg jns sub and lods ss ror sbb adc inc inc loopne xchg sbb pop mov or ljmp lods and inc dec jb pop pop das add and aaa scas xor inc adc mov xlat sbb ss and nop and or or dec clc inc cmp add lods int3 mov pop in pop clc aad pusha jl add ds pop pusha addl cwtl cli jb mov and pop sbb xchg sub popf cmpsl cmp push imul dec dec add dec adc insl cvtps2pi add (bad) mov lods popa pusha mov or jge pop cltd addr16 pop mov jo dec addb mov push je push xor adc sub xchg and test mov or sub inc xchg push in fdivrp je sbb cmpsl push dec dec add aad pop out xchg repnz inc sub inc fimull cld in outsb cmp add rcll xchg mov cmp stc adc test shl nop fcoms leave clc sub inc inc inc lock adc test add mov in add xor loop push adc test mov fiaddl xor mov mov arpl ret pop repnz and lret fbld (bad) pop dec loopne add cmp lret lcall out gs fiadd inc stos or repnz push cmp mov add mov lock js add int clc adc add ljmp jnp dec pusha sub movb sub or enter repnz push insb mov sbbl mov adc add mov push sub pushf add in (bad) lock inc jns add jb xchg push pop nop or std add int jecxz cmp (bad) jno ret bound shrl js shlb sub lcall fistl inc mov cmp dec sub xchg lods xorl sti mov dec shlb lds loopne xchg dec xchg or xchg stos push jae push inc push inc shl mov mov and imul adcl sbb orl xchg cmpb sar enter dec cwtl dec es dec jo or mov jo add scas xor push sub add pushf notb mov xor add xchg mov pop push add dec mov movb std dec pmaddwd shll ds inc fdivl or jo adc mov loope imul xor (bad) sahf out mov mov add ss and fsubp test xchg stos (bad) dec pop loop rol lret mov (bad) jo nop push cmp push clc dec pop or mov test nop insb inc inc push cmp fadd and xchg jnp hlt movsb pushf setb sub pop lock mov jo cltd adc lcall pop mov mov imul pushf rolb xchg lods add sbb mov nop sub xor adc dec xchg xor stos or pop lods xor push addps inc daa add arpl jb push add mov in clc add inc loopne inc jle js push inc add add mov movsl mov mov (bad) and lret mov and arpl xabort inc aam xchg mov icebp scas push mov inc addr16 pop xchg mov add stos jp jg mov sbb sbb sub xor add jne jnp pop (bad) iret cwtl push mov cmpsb je,pn sbb xchg fsub leave mov dec xor pop rol in mov in aam add lods iret xchg int leave fcmovb mov repnz jb dec jno cltd repnz xchg fadd es add js aad fnstcw dec fmul shr mov push lods lret mov (bad) pop add cmp and enter inc mov ljmp add stc sarb cmp sub lods sbb andb add jae scas add stc pop repnz bound push mov fmull js outsb rolb fwait xchg nop fs sbb shrl idivb push call sub jmp enter pop cmp xchg in add fwait pushf mov lock xor cli add stos in xchg insl xchg clc call rolb iret enter in xchg not mov pop (bad) mov cld mull jp (bad) add mov mov sbb repz mov lret xchg popa (bad) sbb in push add mov loopne jnp cmp outsb add mov add (bad) mov sbb mov loopne inc add or adc cli sbb xor cld test xor add in mov std stc pop lds icebp pop cmp cmp mov mov sbb mov add notb adc jp imul mov imul cwtl lock mov cmc sub cmpsb cwtl je add icebp nop adc leave mov xlat push add ltr loopne or in or add pop bnd inc rcrb arpl outsl in test nop jns fiadd jmp and cmp cmp pop adc aad mov das mov jno out or dec mov add subl sub jnp push cmp mov mov sbb stos call popf push sbb leave add in cmp pop adc loopne inc sbb pop in je pop add sub fwait xor pusha or push insl push or push or and fs push sbb sbb mov and shr icebp fdivs inc mov or stc add pop sub je mov sbb aad pop ljmp jno movsb or out subl lea and enter lds push or xor test push loope testb nop out sti jge aaa inc inc sub or hlt loope adc push inc sahf cwtl sub jl pop mov inc pusha cmp movsl sbb sub inc and adc or jl or xor in test fdivrs lret xchg jbe movsl faddp push add lock test fs xor mov fldl sub jge (bad) ficom (bad) cmp inc dec pop jnp aad or mov sbb jl (bad) push outsl ret loopne mov repz sub movsb leave cmp std pop mov cmp incl test cli aam inc sub stos mov nop mov and xchg mov sbb mov sbb mov cmp xchg les pop sbb fs vpackuswb outsl aaa divb aas inc mov scas je pop mov add clc lds cmp sbb xor xor push rclb test lods (bad) jae shrb ljmp cmp jne scas inc (bad) and dec sbb or cmp (bad) stos jmp daa cwtl add (bad) and jno add and cmpsl mov sahf call add stos or dec xchg ror add cmpl add (bad) rcrb ret add (bad) movsb inc jae pop mov loopne sbb cmovl xor (bad) adc push lods outsl add or and xchg xor nop arpl decb xchg add add or pop nop sub mov in inc lds (bad) sbb dec lret int (bad) int3 cmp adc cmp test in xchg sub push pop mov adc sub rorb (bad) xor push xor loopne xor (bad) lock pop add dec pusha xchg and cmc inc inc inc andb scas mov push lods adc add fs loopne add leave ja xlat arpl add and out add cmp or xor aas xor sub xchg mov push es aas mov bound sbb fistpl xchg les pop (bad) sbb dec pop enter sub sbb pop adc push fadd mov mov push or or xlat push or subb sbb pop add sub (bad) inc movswl int scas mov and jnp enter pop int js pop adc mov xchg push dec insl pop inc movsb imul push and mov adc xor jl and and adc hlt jl es out pop pop aaa repnz mov add ss xor add mov and subl jmp or cmp adc and loope int3 fmul dec mov xor je pop mov cli lock cmpsl sbb sahf add push inc loop in pop add insl or cltd daa ds aas xor loopne dec test call xor jmp sub pop push inc cmc int3 mov test dec subb push pop fbstp add inc cld mov bound jnp mov lds push insl je xor (bad) jg inc sahf mov cld sbb adc push gs sub sub les jo xchg add pushf pop inc jl add jge xor fadds add popf icebp mov (bad) mov pop pop inc pop mov sub sub cmpl mov add mov and cmp pop add cltd dec xchg dec (bad) faddl sbb jp dec aas and pusha mov aad lahf jecxz lds add aam scas popf js add sbb pop fldt test xchg push xchg test dec adc add xlat ret hlt addl outsl and add jmp outsb movsb orb lea add es mov add testb std pop xor stc rolb imul mov cmp push je jno or das jge dec nop in clc add adc or sub sbb popf mov add sub lahf push inc insb mov scas or add (bad) lahf in test shrl insb jbe inc (bad) and (bad) movsl xchg je clc loop xchg pop pusha mov jo popa jns add jl mov mov je add insb sbb pop jne repnz jle xchg jbe lods add inc loope push jns stos cwtl je fs add outsb sysexit roll std mov clc enter nop int3 cmp lods xchg jl mov or dec es push inc mov out adc insl adc pop add fildll xor sbb loopne push adc inc ret fsubl inc inc les in cmp add pop and in dec jmp dec add (bad) daa pop pushf fisttpl sub lods sub sub js cwtl inc cmp xchg test xchg add pop outsl add lahf xchg dec xor pop jmp popa flds xchg xchg push add cmp iret shrb fcmovne and pop sahf xchg popa and add jle pop (bad) cmp mov or lock sub pop je outsl insb pop out in xor cld aas or jno nop push ret lea xchg lods fmuls int mov xor push mov jmp inc jno and pop popa pop test pop push (bad) mov sub or push js out loop xor mov movsb jb out pop xor push imul loopne and dec rolb xchg add popl inc adc add into aas (bad) lock and push lahf js push xor fdivl mov cwtl loop sub pop jno mov mov dec sbb std add add rcrl (bad) mov pop inc push inc dec cld fs sbb movsb clc test dec mov ss lods sub test fadds aam inc push xchg cmp mov das xchg add outsb lahf je fldz iret or js jg pop call add or xchg inc adc push push xor imul add sub (bad) scas mov add loopne xlat add les fcomp lock push xor dec xchg add adc mov add incb lds lock xchg imul stc (bad) xor cmc cld imul adc aaa ja or add adc out xchg arpl inc mov sbb rol add jo cmp cmp adc inc add push jae jecxz and mov lods mov inc pop jnp push xchg subl and aad out pusha test dec shrb sub jecxz popa sbb dec mov cmp mov out in pop std push pop xor inc mov leave sub adc cmpsb mov cmp and mov lods add and mov add push dec jecxz jnp or mov adc push ret jo pop loopne push mov je gs out and icebp jmp insl mov pop and sbb in push jnp mov (bad) mov je dec cmp fsubrs (bad) push xor add inc xlat xchg sbb pop icebp lcall xchg sub push mov mov adc adc jbe outsl fistpll dec inc insb inc aam and adc jnp scas sub adc jl jle movsb xor adc lret (bad) xor cwtl out ret sarb sub add mov test dec mov icebp rcll mov mov add sub mov out addl jmp je xchg je orl inc int3 les and mov lcall add (bad) mov pop cmp out into inc mov ror jb cltd xchg imul subl push cmp sbb mov cwtl xchg shrl sub push repnz call cmpsl sub xorb roll mov push xor pause sbb xor mov je lret into sub sub rolb pop add dec or push movsl dec or xchg push lret xchg xor mov pop cli pop or jecxz es dec inc call push pop push adcl out pop cmp inc fs roll test dec sahf inc adc lret out mov fldcw cmp fs adc push sub cltd mov mov xor test shr ret cmpsl cld inc adcb mov jnp add jecxz add dec in add cmpsb sub add sbb xchg clc addb jp dec decb jmp ljmp lret cmp xchg out inc xchg dec add out jl fisub cmp in add add int3 sub cmp pop jg insl xor out push loopne mov push ret out jp sub inc cmpsl inc or cmp clc push or push add cmpsl pop jns imul or xchg inc (bad) rcrl mov jge add (bad) popa inc dec movsl hlt fidivrl cmpsb mov movsb fbstp add add push loope add dec (bad) pop incb mov or aam ret loopne jno add or sub mov add outsb jne jns push inc not push pushf pop push outsb movb lret add movsl popa mov xlat push nop (bad) fild xor or fdivrs clc jecxz xor addb mov xor and movsl adc loopne jl push pop add inc mov inc or inc pop call shrl add les lret add (bad) int dec popf mov inc jmp inc cmp sarl lock or cmp xchg jno add mov fstpt (bad) xchg test popa adc push add xlat stos cmc fidivrl push inc add dec pop daa cmp add scas (bad) fild push sub repz jl sub lret adc adc mov xchg call cli xchg sbb flds add cmp xor test in mov xor cld ds cmp mov jecxz or add aaa dec sahf pop (bad) xor mov xor in add nop je mov and out aam push rcrb mov inc cmp adc xchg jl inc jg xchg or inc mov stos (bad) mov ret sub in in lret cmpsb or pop enter aam nop ror ja add mov and jp in js (bad) ss jmp add pop dec xchg jns pusha mov rcll das mov fs addl add add add mov pop out inc cwtl cmp xchg aam stos sbb mov cmp jns mov mov subl pusha nop addr16 inc (bad) stc jp or dec hlt pop fcompl pop popf nop iret dec and xlat jnp and fs and add cwtl pusha fcomp repnz punpckldq bound daa int3 adc loopne push test xchg add add shrb push out xchg and setb dec adc sbb hlt (bad) negb lret mov xchg add jmp adc jnp mov jmp adc loopne das pop int lods fmul test inc dec aam dec sub lahf add add idivl inc sahf ret add dec je xlat inc lock cmp push enter test fs jbe add add repnz dec pop aam bound xor cwtl jb aam push fmuls inc aam lret inc dec cltd add ds inc xor mov or push cmpsb add out (bad) out cmp movsl push sub sbb fcoml add dec out fsubl lcall mov mul mov or out lcall fidivl movsl test test ljmp enter cli lahf ja xlat push push cmp cmp adc mov mov push stos ret add and cmp push out mov dec or mov movsb inc fs add mov mov add xchg mov xlat adc mov inc push adc (bad) test mov test test cmp push ja xor leave fnstcw inc imul cwtl or cmp xchg add stos sbb add adcl add ret ret cltd outsb add inc push add fwait xchg pop shlb (bad) bts les add dec or mov fwait jg jmp inc (bad) (bad) mov sbb popa mul mov inc add cmp inc test sub sbb clc cmp xor cwtl inc add xor xorb xor sub fisubrl js sbb shrb sbb stos adc icebp ret mov addr16 add jmp cmovno lods test xor mov arpl sub cli aas movsb mov add aad xchg inc pusha adc dec aas cld dec pop add pop popf mov push xorb call out xchg and and inc xchg xor (bad) pusha movsb dec lahf pop jmp inc dec inc nop pusha bound jg inc repz mov in out pusha nop jge cwtl push xor push les lods cmp daa add mov dec pop push div (bad) jb fwait lock nop dec xchg in add or data16 call adc xor ljmp cmpsb stc mov sub je nop pushl xchg add fiadd ja xor pusha jmp jae cld sub inc ret repz or lea jmp add aam sub je cmp cmp sub sbb fiaddl divl test push sub jnp test inc xor aas dec das repz cmp and adc nop and daa ja push stc loope jmp cmp jl (bad) adc clc or (bad) sub pop jmp inc cmp push (bad) inc stc icebp std je or test cli xchg rorl hlt mov scas lahf and loopne,pt dec fs push xchg addb in add into jle push cmp dec sbb xor pusha pop js push inc mov daa add fcoml add leave cmp dec addb push add push jae add pop mov adc mov test pushf mov pop adc insb add shrl add hlt push jmp fdivp les jno xchg ja sbb jle xchg in mov lret or sti ret push xor jle jae scas pop les stos ret push inc pusha mov adc loopne inc push cmp inc push or add in push mov cltd fcomip (bad) jno or out cli (bad) xor test enter mov cld movsb mov or (bad) inc pop lret daa and mov dec test xor lods mov add pusha dec sar jae mov stos sbb push cmp cmpsb pushf insl inc rcr loopne inc mov fist jge (bad) mov sahf mov mov push pushf pop add das into iret bound add push rcr inc rorl mov enter stos cmp mov pusha or adc lods rolb (bad) in addb pop dec or or test inc mov in xor call loopne adc and (bad) lock pop (bad) mov ret insb mov push push jmp mov lcall dec lods (bad) leave stos lret fadd (bad) push cmc and (bad) or add ljmp and test adc push cltd ljmp cmp cmpsb lcall (bad) (bad) or lock xor enter mov nop or pop fs lock mov mov insl inc mov add mov ffreep sbb (bad) mov or add popa or adc andb lret out cmp adc or cmp inc mov xor cmp and adc (bad) mov test dec arpl aam ss ljmp xchg sub xchg adc mov push jge int mov inc sti add in gs mov fiadd push push ret push shrb rcr jo stos (bad) (bad) jle movsb mov cmp pushf jae mov adc test or pop add adc push pop mov jb add dec (bad) pop adcl orb add mov or cmp dec mov lods dec test mov movsl cwtl and adc jg sub popf (bad) add aad mov jmp in stc outsb mov push mov and fmull (bad) inc rclb ss iret push sub ret mov add sarb adc cld xchg mov aam push mov nop test dec decl or cld pusha dec push xchg xor add adcl push es sbbb xor jne jno add js cmpsl jnp or xor je mov xor dec mov sub cmp push sub cmc add pop push jp int icebp mov sbb inc xchg mov movsl or mov rcrl mov loopne jle sbb mov xchg divb jge or xchg and jae lock fisttp inc insl jb pusha addr16 (bad) and xchg ds add xchg fbld inc sarl inc xor pop aas jp arpl and jmp mov aas pusha push push sbb fbld pop repz cmp rorb das popa mov test and add jbe lahf and inc and sub cmp add cmpsl xor loopne dec hlt pushf aaa or inc xor xor cmpsb ss lods cmp loop fadd pop stc sub xchg sbb sbb and sbb inc pop ja add ljmp add addr16 pop fidivrl call adc inc rolb add mov mov inc pop js mov add bound pusha mov pushf dec xor scas or and sbb dec pop lea adc int inc loopne ja enter pop call inc popa adc pop jne push lahf sub ljmp clc adc cmc repnz push mov call pop mov xor mov aas (bad) (bad) jle mov in add sahf add cmp xchg pusha iret add mov roll cmp xor mov push shlb and cli repnz insl mov hlt add pop adc pusha sarl sub jp sbb das mov add not add jmp in shrb andl add out inc push sbb push dec loop call pop repz inc mov or jle cs out inc add stos popa or clc arpl xor cmp mov sub or mov lahf lods inc add inc mov test jl jl sbb sub sub mov xor lea inc mov (bad) inc cli push stos push pushf mov fdiv subb repnz inc xor push mov add shrl pop stos jmp pop and imul dec dec mov jle cmp inc jecxz pop jno call lahf popa dec clc xor dec mov xor loope inc lret je push pop sub add cmp rcrb enter popa ja popa and loopne les jmp push lret loop (bad) in sbb test sub shlb cltd in out ficoml jg lea push pop sub movsl movsb adc lds mov mov dec sbb jns in inc jae cwtl les (bad) xor mov loop ret jmp in adc sbb mov jg adc jmp (bad) mov shr movsb cmp cmp (bad) dec xor and je cmp mov inc pop movsb les sub pusha (bad) js roll xchg adc out lock xlat push add shr mov xorb sbb out inc xchg jg and pop and decb cli enter xchg fdivrl lcall and jo pop jmp js add sarb jno or aam pop sub add and jae dec pushf jbe and in adc add sub inc pushf cld mov inc jl (bad) lods mov inc aam pop push mov loopne dec addb movsb cmp and push sbb (bad) jp adc loop or xchg sub inc push mov dec inc pop push add pusha lods (bad) fmull adc mov pop jmp push fisubr sub lds inc add add fist test imul xchg shr jne sub enter icebp je jmp push cwtl add xor xor push cmp nop pusha xchg xor jne lahf cwtl insb push out dec and popa test arpl jne out mov sub movsl adc sub movsb xchg sbb popf orl xor adc sub lret mov mov fmul cli add cmp lock mov lds sub movups or xchg jno notl jp fisubrl and inc inc data16 (bad) pop pushf cwtl fs sbb mov xor xchg and cmp jnp cld xchg push sub or dec std add jae pushf adc dec xchg enter sbb loopne,pn pop xchg nop or je and sub adc fadds add loopne add add pop jmp out fs add daa add push add sub cwtl shrb call hlt xchg test pusha imul fldenv jmp inc push rol leave test rcr cmp fldl xor call sar in in (bad) sub sbb ja inc nop push jle sub repnz nop add (bad) out pop cmp push scas (bad) cld cwtl dec call clc add decb out cwtl mov (bad) test fs lods in adc inc sbb inc push cmp aas mov push mov mov lea and sbbl clc cmp dec ds xchg mov fnstcw iret mov sbb pop aaa call add sbb popf pusha adc mov lea mov jp dec and dec sbb dec jo add sti adcb xchg fmull push xchg es add ret es and add inc (bad) dec dec add sbb mov xchg mov sahf es mov aaa aad fmuls cmp repnz add test loop (bad) sbb out add das push gs dec test add and mov pop fild lcall xchg mov popf push inc shr jl sub mov addr16 out (bad) ljmp les nop jp test fcomps jecxz cmp fildl mov ds mov test scas test cmp add push jb incb mov test movsl xor inc mov mov mov popa lock add jecxz pop in mov mov mov dec or jne ror xor sub mov sub inc fildll inc and add (bad) dec jle andb sbbb sbb movsb sbb mov daa sbb pop fxch ljmp popf adc pop nop int3 sub push xchg stos fbld test sub mov fiadd inc pop pushf clc test add add je xorb rolb icebp sbb cmp daa and pop push int3 mov lahf mov jl dec pop imul push and bound push movsl (bad) dec dec add adc cli loope,pn xchg lea into add push dec cmp insb jb enter add add and das pop xlat add lock je add pushf out xor sbb add push push adc and cmp lds pop mov imul js sbb mulb sub dec pusha maxps mov or inc pusha (bad) or stos jp push add repz pushl adc int3 mov test mov or jmp mov fs xor dec jno loop test fild cmpsl ret inc adcb jns pop inc mov or inc xchg mov out and into addb cli js jle pusha pop adc jp pusha rcr sbb pop fiadd ret daa out insl into gs or jp sub cld aaa pop sbb orb or pop push xchg out xchg add xor sahf negl xor out cmp jle cld outsl or sub mov div mov ret cmp sub push lock push sbb jbe inc fwait sub add (bad) sub xchg lock sbb cld jg iret mov xlat pop lgs test inc adc pop pop jbe sahf fwait scas dec and or xchg add jle dec lock adc shr popa xchg data16 mov les adc jle nop add push insl lds push dec jns out push sub mov pop addr16 fwait idivb pop xor outsb fs xor inc adc outsl push xor loop add ja mov mov add xchg outsb inc jae cli jb stc push pushf push or or (bad) ss out cmp jl sahf mov push aas ret hlt jecxz xchg aam mov mov das sbb aaa mov les test icebp aas sbb out mov push mov inc add jle or sbb fstpt push mov hlt adc les push sub dec pushl jne mov and push push mov cld in pop pop stos test clc push fisub test sbb gs ds rcrl movb jg xchg cs sub fadds and xchg aaa xor jns or cs nop cmp les sub add push test outsb hlt adc dec loope inc sub or sub xchg jecxz push dec lds inc jns mov and insl push add pusha push lods loope mov xchg add sub into push cld mov xchg js mov cmp add mov insb xchg sbb enter pop cmp push xorb mov outsl imul aad ds mov add call push lock cmp add loop push mov (bad) mov or pop xor dec faddl dec jo scas mov cmpsl adc pop insb in sbbl lods inc int3 mov test add or test add xorl lock adc insb push mov dec es xor jne lods adc cld mov sbb push add xchg (bad) lfs add mov jns nop sti add sub and inc cli dec test fldenv clc les out sub fcoml xchg xor mov lahf enter in adc in cld lret adc (bad) push rorb adc insb mov and (bad) (bad) jb mov push lcall inc xorl pusha int3 jnp add adc and inc jns inc xorl outsb inc call jo (bad) push roll in das add iret scas nop bound mov mov add xchg jmp andb add mov cmpsb xchg add test cwtl jb inc adc test inc lods or in mov pop sbb or mov cmp xlat roll xor test sub xchg cld adc inc pusha cmp sbbl push sarb or loop test xchg inc xor into aaa push shlb dec add mov dec dec inc add sbb out repnz and mov jmp mov (bad) dec xchg or add push sub lcall daa add jnp jg cltd add push loopne push sbbl mov clc mov stos int3 stc mov add sub mov movsl sub mov add nop jo pusha sbb sbb movsl stos sbb adc loopne mov add mov mov cmp icebp adcb rolb add lock or xchg push mov pop sbb adc sbb roll inc fisttpl inc and jecxz jl pusha sbb fwait xor inc xor jae cmp mov lods pushf clc pop stc popf pop mov and mov sbb es pop daa mov sub or sub cltd hlt sbb xchg gs xor mov add cvtps2pi lret pop cwtl cmp inc xor nop mov lret rolb (bad) ja add cs (bad) pop push ret data16 add (bad) out mov xlat xor push mov xchg push vpshuflw add lods ret or dec test jo push cmp lock mov lods int sti add mov xchg pushf addl popf scas sbb cld mov push add int3 imul adc daa xlat push push rorb xchg fnop inc xor ds loop mov sub push add pop inc das or mov adc in test sbb stos fdivrs rcrl and imul lret cmp pusha aam shlb pushf and or and add cmp cmpsl sub push shrb sub add adc cmc add aas pop and mov xchg push and roll add lret repnz insb and loopne or cmp mov sbb adc cmp inc lods sbb imul add aad movsb in pop nop loopne lcall cmp int imul and add push sub icebp sbb sub out cmpsl sub fadds sahf jp test test dec adc fldl jno mov sub sbb popf xor cld out push and inc pusha test lcall stos push je test pop mov add mov xchg cmp popf je fcoml aam dec sbb orb out test jmp nop xor (bad) mov jmp and add js lcall testb adc push add sub pusha mov rorb test fcoms pushf jp enter (bad) adc aas loopne aam mov push test test les fbld (bad) shll push xor cld ret pop mov sub xor (bad) rolb cld xor add rcr xor adc mov add add dec (bad) leave imulb dec mov sbb test add ret dec add pop int3 mov cmp sub pop lock mov xor cmp sub imul in mov or add sub add dec sahf jae or sti pusha or in xor icebp push xchg arpl cmpsl mov sti insl push cwtl andb cmp adc and pop lock pop rclb sti in jp inc push out inc push add fwait daa aaa mov inc js add add (bad) mov pushf je cmp xor cltd sbb lret and adc and (bad) mov nop pusha push movsb mov push cld push mov cmp xor sub pop xor test ljmp sbb loopne add adc mov insb dec pop js push xor add cmp dec or imul movsl jne das dec shr xor mov test add add adc fs insb jg nop xchg push xorl nop (bad) out nop push add (bad) insl in test es aaa dec ljmp nop pushf test and cwtl lods (bad) ret adc mov mov scas xchg and in stos (bad) push mov push clc in inc test xlat add and sub inc (bad) xor add push cltd pop js jb add mov (bad) adc sbb xchg sti jecxz (bad) jb inc sbb sub scas jl and xor rcrl jb mov cmp lcall add negb cmp fiaddl test popf (bad) mov faddl sbb mov jne adc add sbb or popf fadd cmp ret mov dec repz pop jmp push pusha fldt cmp out je popa rcrl stos ds imul lcall push inc orb xchg cmp ss arpl sub add mov lods jl rolb bound or cmp sbb jmp jge add les jo push cmp cmp jns stos mov dec imul nop inc dec sti xorb mov mov sbb xor dec lcall xor gs cmc or add fsubrs cld xchg cmp xchg mov test sub and jg cmp push test inc or and movsb mov mov adc add repz mov test sub daa mov addb stc jge lahf dec adc sbb mov stc out lods cmpb and add cmp add push or xor xchg cmp sbb aad call addr16 or lcall pop test inc jge mov add sub pusha add sbb mov push or cmp xor sbb into or mov insl push test jnp into adc int3 push in adcb leave inc mov jns sarb out sbb mov je pusha mov stc ja or out fldenv or aam add (bad) add lock add lds faddl pop add inc test (bad) sbb lret clc sbb push ret dec mov and add lahf gs lea inc jg add sbb mov shlb xchg inc loopne lock jmp inc (bad) add or ficom and mov mov fisttpl push test clc and mov and xchg sbb out mov imul fistpl cli pop xchg pop js mov or add add std and xchg fildl or mov jmp insb or mov add and xor xchg mov mov fmuls add cwtl cmp lds aad mov jmp std mov hlt pop inc mov sub psubb cmp cmp add mov rolb jo idivb mov add outsl mov cld fcoml ret int xchg add sbb sub xchg (bad) add iret lret cmp cmp add or orl es push jno cltd shl adc xchg into jne mov int xchg mov cmp xchg loopne push add clc cmpb dec mov xchg es nop sub jnp inc mov stc clc cmc loope mov call mov xchg sbb xchg adc push xchg mov and mov push add xchg pop add cmp mov jl add lea in or add xchg mov ss add cwtl imul dec (bad) cmp dec add xchg jno pop fsubs scas and add test xchg enter mov mov add add xchg xchg das pop fidivrl add sub pusha push sub stc pop lods jb test inc add xor cld mov mov pop xchg ret push pop cmp or xchg mov ror push inc mov add (bad) dec and mov pusha push push rcl add fmul stos decl nop mov movl (bad) or nop mov or fs lock sub sub adc cmp inc xchg mov movsb int3 add fs incb adcl sub les push scas cs and add aam andl adc jo in call icebp shrb (bad) pop push andb pusha stos xor mov inc dec dec jb (bad) pop mov test or mov (bad) jno bound loopne iret and and push fadds outsb repnz out pop cmp dec add into xchg add mov aam mov ror mov pop dec mov adc add pop mov scas out adc aam lea sahf push jae adc icebp dec mov imul cmp xchg add and add mov dec pavgb xchg flds ror std int3 fst cmpsb cmp xchg test dec dec icebp pushf pop loopne test (bad) jne or dec pop repnz add lcall xor bnd add push (bad) dec jmp add or sbb xor cwtl add and dec nop js (bad) aad push gs mov pop pop sbb mov aam ret xchg add add repnz clc xor mov jb add movsl jge pushf int3 xchg syscall mov into jl mov pop xor daa scas mov (bad) mov (bad) and push inc mov xor add and dec hlt loope nop popl jbe jmp loopne push and movl mov cltd ret es cmovo lods mov pop lcall mov xchg dec push (bad) fdivs lds lock dec cmpsb sub aaa inc or push mov inc cmp and mov adc xor add sub jnp mov movsl addb push sbb hlt sbb mov mov jmp insb test cmp es stos or in sub test andb fbld pop mov movntq out dec push xchg push call inc dec mov dec int3 and push sub lods sarb iret push inc pop add and arpl (bad) mov push sbb push and mov sub movsb pop mov add inc mov add sub mov add addr16 dec (bad) fs in push sbb scas xor ret mov add enter repz push (bad) psrlw sbbl test inc push test aas lret iret pop mov ja fild xchg jl push loope add je outsb and jl (bad) jo shr add jb aam cmp push adc pop sti loopne mov dec sub add mov mov sbb aam fsubrs add adc ret stos add repnz pop push mov adc add and clc mov sbb (bad) xor adc lcall sub pop add mov adc sbb sbb adc data16 mov sbb mov add imulb mov cs sar pop add mov xor test mov into ss add jnp push cwtl or pop ds and dec mov pop ss sbb sbb and jb add das test int3 (bad) adc in add cmp and lock add xor cmp stos stos (bad) mov loopne push jne cmc mov add out xchg mov xchg sbb test stos jge xor call sbb nop jmp pushf mov add loopne add and cmp push (bad) out mov inc rolb jp movsb cmpl and xor cwtl out jae cmp fstps hlt gs cmp add push out (bad) leave dec fdivrs mov jl daa (bad) mov mov jp (bad) cmp loopne xlat rol dec add push pusha fs loope fwait cmp mov idivb (bad) push test aad rolb adc cltd nop add fistpll cwtl dec xor xchg in add in mov iret fxch loope mov sahf add fildl mov mov push lret xor mov js enter (bad) lea lock xchg mov outsl cmp es push cltd push sahf and loop test xor and add jge or lds push shlb and mov or orl mov inc jbe pop dec clc cmp (bad) adc jns (bad) mov loop or pop pushf jl mov adc xor jne jae xchg dec and call pop inc dec push or dec data16 cmp add fldenv dec in dec add sbb push or push sbb dec jbe mov xchg dec jl ds loope jmp add pop push adc xor jnp iret jbe push mov mov sub xchg mov xchg or xor out mov mov mov pop jae clc push add repz and dec mov mov je inc push xor pushf add xchg gs xchg stos out es bnd ret mov cwtl mov stos mov js (bad) mov test push push movsb push loopne ret movsl push cmp movsb mov xchg nop mov not jl outsb daa out and dec rcrb lret push add stos sub add cmp pushf adc nop mov push sarl test int3 andb sbb sbb sub sub dec push vmovlps xchg jo leave daa mov xor test mov pop lock stos xchg in jns add jge add out clc pop mov pop sub jae jecxz xor cmpl push inc loopne lods addl sub sub sbb and and cli adc dec adc jmp frstor outsl lods add push sub pop dec lods jl icebp adc add xchg mov add cwtl pusha or dec pop or jg xlat rorb stos icebp xchg jb sbb std repnz jecxz jae outsb gs and pusha mov mov add mov inc (bad) pop dec or or mov and aam add loopne mov push pop xchg je ror dec fsubrl mov nop xchg aas jns add test iret adc add push push pop inc jo sub shlb mov and les dec pop dec mov sub sbbb or pop cmpsb addr16 jg aad lahf adc inc pop inc or xchg (bad) fsts push test mov sub mov dec jno add outsl pop sub clc mov sub movsb or mov push and pop pop mov xor stos inc pop add xchg scas mov adc test inc xor xchg fadds loope sub xor loopne stos push in dec dec movsb test push mov push pusha xchg cmovp sarl (bad) xchg andb xchg or jg inc mov aad add add mov shll pop xorl pop (bad) cmc mov mov les push in jle in xor or les inc movsl sub inc movsb jecxz mov out (bad) movsl repz movb outsb jno popa decb (bad) inc into mov jbe add insl lds inc push (bad) jle orl mov pop cmp imul popa add add sub cmp pop orb enter cmp or xchg lods or mov xchg jbe outsb or rolb cmp add leave cmp push or xor pop in bound pushf ljmp mov or subl cmpsl push add scas sbb incl mov or xchg or jl jbe nop pop and mov hlt sbb (bad) jbe jg mov mov xor cmp mov insb add pop repz and orb jmp add add cmp adc std hlt adc hlt pop or jbe push jp arpl mov pop (bad) (bad) push loope int3 add jle mov mov jno push adc inc lods and movb inc mov mov or sub xlat pusha lods testb into xchg inc fildl dec mov push cmp jmp push inc or inc addr16 nop and sub stc add sub aas lds mov std (bad) pop push push movsb or and xor ret mov (bad) rolb sahf pop imul mov mov adc or add mov add addr16 movsl (bad) xor add cwtl loope repz push add push dec cmp xor enter pop mov push or inc xchg cld mov sub pop test pop push test mov xor (bad) loopne xchg in cmp add pop mov jbe cmc leave xor sub adc jp inc cld pop (bad) mov adcb push sub inc (bad) push addl imul pop mov fiaddl jp ret outsl rorb call inc dec cmp pusha xor orb and jp cmpsb cmp cld test enter loop mov ret fldt mov and loope sub adc loopne cmp or lods sbb mov pop fsubl mov enter xor (bad) insb sub dec push xchg sbb and dec cmp test push popa inc lock sbb xchg rorl insl add (bad) mov sub cmc test cltd cli test mov xor dec js outsb xor cltd mov and adc cmp xor sbbb sbb ds and mov push enter sub adc jmp movsb inc xchg xlat or mov mov sub les in fiadd loop push adc pop adc andb test inc loopne add movsb or fs mov mov mov xor insl and pop inc sbb or fisttp sbb pop cmp (bad) lea push inc add fild or push rcr cmp inc cs cmp cwtl xchg mov jg lea cmp inc or int3 add push mov js loopne add pop pop flds pop out rcr mov cs aas icebp jge dec sbb add enter inc adc sub ret add cmp add inc loop push rcr aaa out push and pushf inc aad mov fisubrl mov push movsl cmp pop add call dec lret aam adc sbb dec and xor push push xor xchg pop and push and int3 add leave loopne cmp dec es cmpsl cmp and gs icebp mov sub in add out dec adc fcoml jb and (bad) dec pusha mov in mov inc aam sbb jnp das sbb stos hlt mov (bad) adc stc aaa sub hlt add dec mov (bad) call pop mov rolb cmpsl cwtl test jno xchg dec inc xchg cmp pcmpeqw xchg add call sbb xchg (bad) cmpsl dec lods add and (bad) sbb and push xor xor stos pushf aam in inc aas sub das scas out push add test mov jns push cli jbe fmuls dec add xor in mov repnz ret add sub subb or sub dec sbb cmpsl or push test mov add leave stos data16 add mov dec add sub addb push push bound inc addb cmp xchg mov popa in sub in cmpsl (bad) popf sbb dec mov add (bad) mov add xchg inc (bad) dec enter and mov cli xchg add (bad) mov and jbe jae nop adc push fldl shrl popf loop mov cmp test mov jo cmp (bad) das (bad) mov mov adcl rorl imul mov jl mov (bad) cmpb mov movsb pop push js sbb mov mov pop imul repnz add mov sub add cwtl xchg aad mov imul ja pop sbb insl mov lahf push nop mov (bad) cmpsl xchg (bad) cmp mov sti sub xor push fidivl sbb xchg pushl pop jb fnop dec (bad) push sarb pop cmp fadd inc cli dec push add or and mov into xchg pextrw es add pushf (bad) (bad) (bad) mov je repnz or fsubp mov notl xor cli add sbb xchg cmpsb sub push xor nop or insl cmc fcomps sub or add xor adc push add mov stc (bad) jb sub add add iret pop insw adc sub xchg pop mov push mov sbb xor mov lock aad movsl dec adc xor add mov (bad) nop hlt cmpsl sbb cli fistl in adc aad or sbb jo add adc adc mov jno aam lods pop fidivrl lock rcl cmpsl bound iret sub jo aas add mov cmp test (bad) cli push sub xchg mov jo xchg cltd hlt inc aas cmp add in mov and movsb cwtl mov xor sub cmp or leave je mov ljmp fs imul sbb addr16 xchg cmp (bad) push cmp pextrw xor dec add loopne cmp push xchg test lock push adc dec mov dec cmp aaa mov mov dec xor mov dec (bad) pop aam sbb dec mov leavew xchg aam dec jle lock jns inc add xor loop les addr16 jp cmp cli fsubs add sti je add call pop adc mov and fsubrs nop jbe cwtl xor jecxz (bad) adc add jo push dec aam andb dec cli xchg pop pop std xor or in cwtl faddl (bad) andb sbb xchg jl add fisttpll mov cld adc cltd mov inc sub push add inc sub jnp in outsb cmp add dec inc (bad) jb dec push pop shl add push sbb add add mov hlt pop add inc lock jge inc (bad) mov xchg aaa loop nop imul adc je inc cmp jge loop sbb adc inc mov in mov (bad) hlt adc push inc dec popa pop call xchg sub mov mov xchg faddl mov lock in test cli outsb int3 pusha inc cmp cmp add fwait rcrl stc add or inc mov pusha pushf push cmpsb test mov shll ret aas cli shrb add jg inc cwtl sti and sbb adc testb push cs pop (bad) cmc (bad) clc loopne inc sub out dec add and out pop inc adc flds jns pop pop jg ud2 rolb mov (bad) (bad) xchg dec and xor add push add (bad) xlat adcl xchg add incl (bad) fildl dec mov fcmovnb fdivr mov movsb mov repz (bad) jno add call dec pop dec or out push inc xchg add xchg xrelease sbb sti and dec add inc adc jb push adc jb mov (bad) leave (bad) lock imul notb test arpl pop in jns (bad) ja or pusha call ficoml xchg push inc cmp or cmpl inc dec int3 mov adc add mov add mov add push add add hlt scas sbb movsb adc in dec sub lods fsubl add fs add pop lret and mov mov shll (bad) div comiss dec and cli ljmp mov jl lret ficompl jo lcall jg xor adc nop ds data16 (bad) imul dec add les add hlt xor mov test cwtl cmp inc adc adc xor add jo addr16 fcomps push clc xor es je mov cmp dec adc movsb sbb loopne hlt jo xchg pusha in adc imul les mov (bad) sbb test add and xchg add push and lahf addl xor das jno sub add xchg fsts nop xor scas jae icebp mov dec lret mov dec int3 or add clc test or mov mov cli inc or je in jns (bad) int3 add enter fdivs and in and inc data16 and dec add es mov sub add jmp and jl addr16 idivl cmc fs sbb cli jecxz orl xchg jns je mov cs into pop hlt sbb cmpsb dec mov and cmp arpl sub nop push pop push pop lahf sub sbb icebp xchg inc cmc ljmp (bad) jns dec or inc inc push paddsb adc jmp in mov cmp push lods jl jae add pop add adc or and shll mov lods insb cmpl ljmp incl mov sbb dec ljmp test lds mov cmp ja dec imul or je lock or inc and ret and shrb xchg mov add xchg and jp jbe add or add ficompl (bad) and jecxz insb push pop ja jbe dec lahf or push add sbb mov movsb push inc cmp jl lods jle cli fistpll jl pop adc xor andl dec add inc sub test mov movsb test jp cmp sub shl push (bad) and push les push add movsb dec adc mov outsl push das sub push sbb inc add mov adc lahf sub push cli lods cli and add cli cld (bad) shlb sbb xorb fs outsb inc (bad) add and test pusha adc test cmp jo add dec mov inc sub xchg xor xchg fsubl add mov mov lret mov in nop add jl mov fiadd mov push std add lods cwtl add lods hlt push xchg jo sbb push out pop aam cli and cmpsb jo jno cli std jmp mov adc mov (bad) call add sbb add sbb sarb xchg push cli test pop xor push xor fistl sub bndldx ret pusha dec pop push and rorl inc add sub and add adc add push sbb adc fcmovb inc movb inc push fsubrs aad sti test pop mov inc push cltd mov into or inc int3 sbb push xor cmp sub inc das (bad) cmpsl leave add jbe sbb pop inc cld sahf push mov inc or jno enter sbb mov insb jnp and fs xor or cmp pop add push daa data16 andl sbb loop lods lock mov addr16 cmp xor cmp and fadds aaa jmp mov xor fsubs es popl int (bad) xor nop clc les enter aaa add aas adc add cli mov gs inc xor or sahf xchg mov fwait and jo xchg inc (bad) cmp add inc cwtl add add push xchg add roll xor fdivrs js js test loopne push mov test rolb pop fimull dec js pop clc dec call pop jp pusha in sti inc out into pop xor and cmp adc fistp mov stc add inc fninit add dec push bound jne mov sti je aas lock add adcl add xor out cmpsb mov fsubs mov jp into push fnsave sbb sub enter xor pusha movsb into (bad) jae ljmp cltd lcall sbb lods orb or and cs sbb sub movsb jae add dec rorb add push mov cmp std pop pop dec pushf data16 sti jns rol jns pop mov mov or sub mov data16 or sub mov ja test out cmp xchg adc lock sub clc fld1 popa and dec sbb push popl cltd or adc andl bound negl arpl mov or push adc mov jns push xchg add pop das pop in lds test mov lret sub pusha push dec push sahf cmpb push mov (bad) call popa add dec add lahf test and fisttpll sub jbe andb stos mov sbb insb ja add testb aas pop and cmc mov imul and dec jno (bad) ret dec ret add pop cmp sbb add add test sbb movsb test nop xchg fildl outsl and push xor xchg fucomp inc push mov mov pushf jae and add xlat pusha arpl fwait xor sub push jae add sahf test mov mov fisttpll out or sbb arpl jae nop cmp test in mov shlb pop (bad) inc sbb or rol movsl pop fcoms mov push inc dec adc test mov inc imul lds nop dec add in clc cltd les sbb shll nop jl xor cmp lods and jg sbb add loopne jo add push add mov adc push or ret dec sub mov xchg movsl cmp pop mov test cmp (bad) daa pop inc stos imul fsubl cmpb pop push or sbb xor enter push sbb pop cmp push and mov loope in insl lret xor push pop fmuls adc lahf test xlat sub and pop add shlb in push push push sbb sbb lret sub add push push or inc js adc dec xchg adc adc or dec incb pop add rcrl lods sub jecxz jno pop mov push scas js es test xchg push sti push test adc enter test clc (bad) jmp gs sub (bad) xchg xor hlt jge sub add push mov sbb (bad) idivl in rolb xchg sub add pop (bad) and pusha je xchg push loopne ljmp out sub add icebp inc test xor xlat mov sarl xchg mov jg add (bad) testb fmuls pop inc sub push inc xchg mov adcb adc xlat push or loopne inc jno aam daa ja sub ja adc add push ret les add popl sarb out jp mov sbb test call sbb nop or fs (bad) xor rorl sbb sub and es loopne enter outsb cmp in adc pushf xchg dec xor sbb jns test add add mov inc das lcall mov stc lods add xor dec sahf mov test push push subb clc fwait js add loop mov xorl (bad) jbe enter arpl dec dec add loopne sub and loop xchg out fldl sub jbe jne (bad) fs in roll int3 and (bad) das push adc xchg fcomps xor and xchg ss outsl or xchg sarb dec mov mov mov xor add enter jl inc in push sub dec test add out cmp arpl adc add mov aaa das imulb (bad) cli sub ret jae outsl in (bad) sbb xchg mov adc cmp inc add jno add test lret pop xchg add adc jb push sub adc sub movsb pop xor pop cli jo jo fcoml jg cmp cltd add fbld clc and xchg xchg or and jecxz test mov jp cmp clc xor cmp pop int3 jnp jl sbb ja dec aam adc jmp add js xchg sub loopne in mov lret push pop (bad) mov add pop add adc or add stc dec sub sbb js push aam stos add in jmp jecxz inc xor mov add cmp dec add xorl aam icebp roll aad sbb icebp hlt das addl pop mov lds rclb xor movsl sub xor or jge add les into sahf xorl leave in stc icebp mov or shrl cmp or mov into adc loopne mov fbld sbb mov or lods jbe sbb dec pusha or add pop stos sarb mov fsubs push lea cmp js pop add add adc add mov push leave or push shr ja testl jno dec xchg push popa jo cmpsl or xchg add gs push push ja add pop pop lret cltd mov insl jle xorl sbb icebp pop sbb cmpb add imul xor lock xchg add inc iret pop and dec adcl add add pop sbb push addl in and adc mov into xchg int3 cmp or mov mov adc imul push add stc rolb jb ret add and and lods mov push push add add pop lock int aaa xor shrb jne in pusha les pop frstor sbb adc data16 add (bad) ss mov pop adc or insl stos imul inc jecxz sbb fwait xchg mov ret pusha loope ret add pusha mov (bad) cltd xorb loop cmpsl in fisubr mov ret mov lods add in inc jbe test jle add gs fnstenv jae lsl mov sbb add mov dec and add inc rolb adc fadds enter adc add int3 push mov jge int push sarl mov inc add jb mov adc sbb mov imul ljmp add mov call rorl push inc iret roll xchg push lods cltd or push xor subb clc out je rorb inc push or inc mov pop push lret mov and add movsl mov hlt add and idivl xor push xchg test xor xchg aam gs xchg pop repnz popf insb push outsl popa fildll loop clc in outsb or push (bad) xor aas add mov pushf mov lods xchg cmpb fidiv adc xor stos testl add and loop add adc bt and xchg push sub or iret mov insb inc inc ja cmp lock and pop mov sbb pop cli mov std cmp lret or jnp rolb adc inc nop sbb cmp iret sbb ss arpl mov and test push out or xor cltd dec xor movsl or jecxz lock pop jl cmp nop and jbe add xchg adc mov pop jbe push iret add addl js arpl mov sbb add call sbb inc dec jno lock nop add les sbb jge andl fwait pcmpeqw pop dec xchg push cltd and rclb mov mov add jecxz cmp inc pop sub push mov pusha mov data16 pusha addl testl mov mov and add pop cmp js jae add (bad) xor push pushf in aas mov xorb out sahf lods sub and sbb ss push and add mov xorl outsb call mov dec pop clc pop cmp shrl insl adc pop pop test test imul pop shll lock fwait sub add jl cwtl xor rcr add notb dec push jge enter sti insl out cli fucom dec stos pusha les mov jg add daa jo jno test mov jl push mov and addb and arpl pusha pop lahf xchg pop sub mov mov (bad) mov clc mov and mov ljmp test add cs inc cmc aad mov mov xchg sbb dec pusha lock push dec incb (bad) pop add dec jno xor mov pushf lods loope xor adcb xchg cmp push inc fldl pop push jle inc push test (bad) mov xor sub mov dec and inc inc jl dec sbb and ss pop xor psubb outsb add rol clc cmp inc in lcall mov push xchg popa push clc add mov aam push imul pop add xchg stos enter push mov pop add fwait arpl pop std xchg bound add cmp nop add mov inc inc cmp and cmp leave lock push inc pop aas inc imul inc mov add jno int3 dec nop icebp adc jecxz push and push leave fildl clc and push fcoms jo add xchg inc fwait (bad) sarl add (bad) cmpsb mov lods int sbb add je cli add pop inc ret adc sub rolb addl nop dec xor mov (bad) subb lock cwtl pusha lock add shl call js inc ss cmp push fistpll mov mov repz add mov or xor fdivrl sub clc and mov xor or movsl inc mov test movsl loop fidivl pushf out xchg mov stc push negl or cmp outsb pop push or and clc push dec insb fisttpll js ret popa mov mov clts pop mov inc fistp adc jl cmp adc pop jae and gs sbb mov push rcl add (bad) xchg loopne and jmp dec mulb fucomi inc pop imul xchg (bad) in add inc jg cmp pop lret test inc je pusha dec add xor mov aam loopne movsl or add dec in out pushf test addb push jno clc movsb clc addl sbb mov stos rolb xor addr16 and js mov lods mov lods lret in mov sub xchg nop add mov popa add aas mov rcrb mov push fs shrb arpl dec rcrl fisttpl imul xor add push ds in or loop rorl ljmp xor pop add push xchg inc addl mov pop insb mov and es sbbb outsb sarb jl pop pop in shl jecxz js and out xor and insl add cmp cld xor xchg imul fwait pop and add sub rcll arpl and xchg mov neg ss out xor adc sbb daa subb pop data16 negb bound in or cmp clc clc sub dec or outsb inc mov xchg cltd rolb or and add push xchg or xchg insb js xchg and and or dec and mov mov in ljmp inc cmp je pop add andl jb pop cmpsb js in loope cmp inc aaa jp xor clc add cmp xor push mov push and lods into dec jne mov outsb es dec dec xchg sbb or sbb pusha mov enter push jle xor pop cmpsb lret dec (bad) rorb jp sbb call pop push imul addb cmp add orl loop sarb fnstenv xor outsb sbb roll jecxz fdivr sbb stc imul test aas xor add lea pusha pushf xlat mov add nop sub arpl dec xchg scas and and pusha dec push loop in inc movsb mov int pop pop jge aad addr16 (bad) jno adc inc hlt xchg es pusha mov fsubrs (bad) fldcw sub mov mov into je mov inc and mov xchg mov and inc xchg ss inc pop xchg inc xchg (bad) lock (bad) test lahf repnz jge sub std fimull movsb cmc inc addb arpl inc pop lock fadds sbb mov add xchg mov cwtl and call mov xor xor out mov add (bad) rcrl mov or pushaw orb int3 pop inc scas pop xchg sub sti mov pusha xorl and pop lods enter ret pop lods in pusha fmuls js je and arpl dec xchg pop rcr nop mov dec in pop mov out cmp dec jo,pt adc stos and or mov test xlat push int3 jmp cmp adc push sbb scas data16 aaa sti mov inc outsl ret mov popa pop and or leave xchg out icebp add mov sub jmp inc stos (bad) test or add sbb dec jle popa xor inc bound pop aaa pusha adc in jb aad xchg pop sub fadds sar and cmp js (bad) in mov xor jns push test loopne or fsubs mov jle and lret nop xchg out (bad) and mov (bad) push jle add xor xor dec adc push or and push dec nop add and jecxz mov and into aaa test and imul inc xor out xchg hlt dec xor (bad) es adc mov insb in sbb mov inc cs test mov sbb and add add (bad) lds lock cmpsl push rorl xor dec jns pusha rolb (bad) jo adc aam pop dec int andb aaa mov xor mov roll xlat or pop hlt adc pop mov add add xchg movsb mov cmp outsl cwtl sarb cmpsb mov add fcmovnb imul dec into mov and aam pop mov add pop mov pop adc mov andb aas push pop stos aad loopne push inc dec adc pop or into (bad) add or (bad) imulb jmp lock jecxz dec pop mov add pop dec xchg and pushf sub mov dec lahf add leave sub adc int3 inc xor stos pop inc xchg dec jl int3 sahf and sub sbb add dec dec inc addb lret push ds add jl cmp enter daa jno adc pop push int3 cmpb je outsb iret sbb test int xchg stc jne loopne lds add or lcall add mov cltd inc sti pop (bad) sbb fcomps popa sub loope aam cli cmpsb loopne test cmp insl in push movsb in mov sti icebp dec hlt enterw mov sub dec (bad) (bad) nop cmpl adc cmp nop lods js js or test pop sarb mov add scas fimull aad add push out insb int3 and push sahf xor jp insl mov stc cmp rcrb dec sbb or dec pop addl add push gs pusha imul lret repnz xchg mov mov incb add test nop or cmp add andl roll jnp arpl outsl fadds ret fwait shrl cmp mov movsl inc add out rcrl in push pop mov imul and add pop xor fs insl or jl mov jbe test arpl cmp dec rclb xor push aad add jnp out xor outsl push add mov rcll arpl lcall dec mov icebp int mov clc mov adc insb repz or mov mov xlat encls mov push (bad) pusha mov inc es hlt pop call adc scas pop jo add repz jle inc and xchg int3 add cs or (bad) outsl enter (bad) and inc mov xchg test cwtl adc inc mov int3 addb sub push imul adcb sbb js xor das stos pushf fdivs icebp and pusha mov add xchg fnstenv jbe adcl fdivs popa leave add adc lea fldt addr16 test sub sub enter add pop sbb mov pusha je addr16 in xorl insl inc jl mov pop nop clc sub dec fprem loope sbb pusha dec fildll js mov imul ss cmp pop cld and jp xorb mov push jnp icebp jae push lods jp insb mov inc movsb fmull je pushf in and sub inc and mov mov (bad) mov andl jb jecxz sti inc add jae or mov mov push add inc call sub call call sbb inc add test dec push clc dec fisubl mov xor js jo je jnp arpl adc pop movsb test inc call xchg outsl (bad) orl (bad) jb push jl mov pusha int3 cwtl mov (bad) mov outsl add xor repnz dec lret mov push fiadd push pop push loopne rolb popf and bnd jno xchg add sbb bound js add dec fist add ds jnp xor ret jecxz push rol leave cmp lods pusha push popf mov jnp in mov mov push sarb movsl sub popa push adc mov and loopne push lret push clc add mov add dec out mov add sub adc pusha mov add sub nop mov and add into mov sbb nop pop or rol in clc push pop sub jecxz mov inc or add loopne sub xor hlt add mov lcall jns adc leave ja lock add cwtl in js jb sbb pop fadds mov cmp movl inc idivl or mov adc sti pop sbb sbb mov push in je rcrb jb push inc imul popf repz test xor xchg pop sbb push (bad) mov sbb in imul into xlat or mov hlt out scas or inc mov xchg aam or adc add fbld cmp xor mov pop xchg imul dec xlat push jl adc or adc or cltd add push nop push push xor sub nop sbbb lds and mov mov pop imul dec sub cs lret mov test (bad) or push call call inc push jb xchg push xchg inc subb dec fiaddl xlat dec push jne push mov cwtl push push ret adc xor push test inc pop add and xchg jg mov adc cmpsb cld and or add mov cmpsb inc js push sub fidivl push inc idivl fnstcw xor push cmc and int3 sbb fmul pop jge xchg test mov cmpsl imul jo add shrl xor cmpsl into sub push in inc call lock movsl push out xor or pusha in stos movsb adc push cmpb push xor test push (bad) and fisubr jno mov mov lret sbb mov xor inc push clc out lea mov dec jae sub mov aam les add mov xchg call mov add (bad) fildl mov pop push pop jnp add pop mov mov mov and jbe loope js adcb adc xor adc aad add fbstp cwtl pop sbb xor lcall mov or rclb cmp sub push rclb xchg pop leave enter out pushf repz rcl add test mov fiaddl pop inc (bad) aaa leave sub test (bad) mov add xchg sbb dec jnp pop shrl sub call test and lods jg int (bad) mov pop repz mov les mov aas (bad) js cmp lret mov sbb pop (bad) mov add inc lock sbb dec mov xor out adc and lcall push ds push mov xchg dec push sub jno sar add pop mov and dec pop orl jle xchg loop sbb inc movsb xor sbb pop fimul lahf into mov gs mov mov inc mov mov repnz push mov mov xor adc pop mov inc sahf cwtl lds adc cmc mov (bad) fs hlt fs movsb fmuls or into xor and movsl fsubs adcb sarb fnstenv xor mov pop nop int pop jle test pusha test add mov mov sbbl mov lock inc push (bad) jp outsb mov pop movsl (bad) loope pusha mov aad mov adc rorl push stos test bound dec mov mov loope push xchg lods or mov cli les aas sub or cs and addr16 sar enter hlt or dec imul push pop sub sbb push pop imul push rclb push loop mov cmpsb lea xchg sti add js outsl repz jb jg or and nop dec inc pop in and cltd hlt inc or negl jp sbb pop or add fidivl and aad add repz lods lock mov dec ror push mov push (bad) fld jne adcb pusha test mov adc jg fs ja ret lahf loop jg adc sbb js cwtl fdivl cmp xor movsl adc push xchg push fisttpl popa aam out mov out dec lea movsl pop xchg jo je cld push in cmovge inc lret adc add popa xor sbb push jo mov clc insb pop js enter ficom xlat rolb sub sub lea (bad) outsb xor inc add mov inc jl add insl cmp push push cwtl lea roll sbb enter pop sbb mov cltd sahf sub push xor push xchg and mov pop dec and mov push inc dec dec and or cmp mov sub mov (bad) mov cmp inc sub inc out sahf cwtl inc xchg mov test pop les sub pop das fadds ja pop daa push pop ret fnstenv test jl adc xchg fisttpl and adc dec mov cmp stos xchg or and dec std sbb xor pushf lret imul fldl xchg pop data16 mov test push stc sbb and test adc dec push mov faddl int3 adc fidiv in jae cld pop dec dec orb or aam mov push jnp xchg push add adc in pop pop add in jbe push shlb mov jp movsl scas pop jo icebp adc cmp lods mov add and les and inc add pop xlat inc inc xchg push bswap jae add sarl adc les addb dec cmp mov adc pusha imul fstps inc mov mov add add mov sbb dec jg movsl push sub and insl int3 pushf (bad) mov mov and enter xchg adc dec mov dec scas mov cmp mov sbb das cld push add add cwtl insl jb mov (bad) sub cltd pop mov mov fild (bad) mov in sub pop decl fs cld aad mov rcrb jb sahf cmp mov dec pop sarb adc inc fisubr ficoml stos dec jae stos add cmp pop jg inc stc jmp or rorl cwtl rolb nop sub daa lret add stos shrl lea jne roll and aad inc push pusha inc loopne jp add xchg inc repnz cmpsb inc nop pop (bad) mov adc and sbb inc sbb push sub sbb add outsb hlt xchg and pop adc xor cmpl push adc pop xchg jo and dec push or and xchg int3 or sub mov dec dec cld cli adc jno cs test (bad) sbb push pop mov movsb cmp xchg scas andb inc int loop aas mov inc xor mov push clc push aad iret sbb sub je add loop clc cmp add jecxz mov mov jo dec call xchg pusha push mov or popl imul xor xor jl loope mov cmpsl mov in jno (bad) xor ret aam dec insb or xor lods xchg out adc cli mov add jo jns inc or inc cld mov test call xor call loop or and pop xor sub xor jb pop cmc les xabort mov adc or mov insb cmp mov cmp pop pop or lahf andb pop in adc pusha dec aad or mov int (bad) adc sub test mov add cmp mov dec fwait test mov out sub adc add push rcrb icebp adc add cld inc mov mov std insl xorb sahf jmp shr dec pop imul insl and shll add jl mov fsts nop movsb xor add iret into pop insb xor pop fsubrs cmp push push jmp (bad) ljmp jo pop addb or push rcll add jno rorb test aas push clc pop leave or imul ret pop cmp jo fbld in in call (bad) fistl ret push jp add adc pop mov fcomip test shll dec pop clc xchg arpl imul roll aad jo cld mov sub scas mov mov dec mov or pushf test jl std add int3 dec les mov pop out ss adc mov es mov dec adc dec pop pop xor push sbb push add inc addr16 fidivl aam stc cmp aam xchg mov adc or xchg mov pusha push cmp pop test xor inc xor push rcrb push insb mov dec lret xor sahf popa insl add jl add xor andb ss repz out inc and mov mov cmp xor push or scas mov das cmpsb ss or and sub cmp mov push lods ret adc popf adc add add scas adc stc pop and in into dec (bad) mov int3 jno hlt cli xchg push pop cmp fsts inc add pop mov sub dec and and mov insb sarb push pusha mov xor fisub pop bound fisttp fstp add imul data16 rcl jl inc cwtl adc outsl cmpsb std out jns,pt or int3 loopne jl mov lcall xor rcll hlt pop sbb pop pusha xor loope jae xchg cmp sbb add in xchg add xchg data16 sbb mov adc inc xchg clc add xor and mov inc enter or adc sbb mov sub xchg push adc cmp xchg repnz mov push cmp flds and inc sbb cmpsb je push push addr16 shrb push jmp and ret inc nop add push in outsb loopne js std sbb mov aas jb sub fmuls push pop and mov aam (bad) mov fwait add push push jns push jo or pop mov mov stc add mov xlat mov xor xor nop/reserved inc add pop dec sub sbb popa aas push jecxz push push cmp mov test lret xchg sub in popa fbld inc inc and mull pop cmovbe cmp mov mov dec sbb cs inc insb dec jb cmp pusha into cmp adc shl subb or pop mov sbb enter andl test push (bad) and iret inc out jae or daa lahf hlt pop imul xchg fwait add inc pop lods add pop xor scas (bad) je std sbb pushf push test je es rolb mov dec fdivs and in xor push (bad) js mov clc int test lods add push push in push push push movsb push int insl enter popf xor call push push push pusha in push xor push pop pop sbbl stos sub nop adc aas mov daa mov out das movsb adc adc push inc and addb push ret and or enter jo add jae add movsl in dec daa inc es sbb rcrl test jle xchg or xor mov test add jbe insb sar loope test shl and lock push or inc (bad) call xchg cltd dec sub mov mov mov mov repnz (bad) loopne inc cmp dec dec pop add pusha stos sbb lret cmp xchg sub adc push sbb in add enter cmpsl aas mov sub push xchg sub dec sbb mov dec aas fs adc mov insl adc out xorb jns xlat loopne xor add add movsb lea inc lock xchg mov mov lahf cwtl andb pushf add xchg inc sbb rcl or ljmp pusha or in add neg cltd int inc rclb fidivrl les (bad) lea rcrl push outsl and push movsl add cwtl call pop xor pusha jecxz pushf dec int cmp pushf push dec push add push add and sbb lds xchg popf mov adcb push sub push mov mov mov xchg pop xchg std cmp mov dec xor adc jne pop push ficompl fs pop je add aad or and lds pop xchg add mov or fwait add icebp dec inc sub (bad) inc cmpsb sbb dec out enter pop jo xchg or mov scas clc add stc mov dec push add enter test mov leave pop sub lret addr16 inc mov (bad) loope mov movsl mov lcall mov pop (bad) xlat cmc in popf pop out int bound sub pop imul test xor add and pop and inc sbbl pop cmp je xchg push loopne push and iret or fist adc cmp leave scas dec and das cmpb xchg mov inc and loopne lret push ja push add mov fadds fs mov js push pop mov and inc sub cmovs movsl cmpsb ret inc ret sub inc sbb mov test cld mov push cmc jbe sub shlb pop xor (bad) sbb xor outsl insb out imul ret adc pop push lods sbb push xor cli hlt cmp pusha xor iret and push adc dec imul fimull mov mov xchg enter cs adc mov cld add (bad) mov mov int3 dec and jecxz roll pop mov daa in repnz mov add xchg inc rorb xor push aaa daa mov testl rolb movsb shlb pusha cli idivb mov and call cltd and in nop xchg gs mov jecxz cmp mov pop nop inc aam rcll mov mov add push cmp add pop loop fsubl scas in sub mov dec popa les ljmp and out jb lahf pusha mov insb je mov cltd jle sub mov pop jecxz push mov dec xor imul int3 mov and mov test dec mov icebp jb cltd cld rclb and add sahf test jmp mov fwait dec push (bad) jge add mov lock mov ds and dec ja inc add outsl enter cmpsb xor dec stc es add or jmp in add movsb xchg dec fidivl fwait ret mov xor (bad) pop jne or and loope lock add out out pop pushf push add push jg xchg add inc jp int aaa fiadd xchg cmp out xchg shl scas push pop test inc into rclb cmp push and add fs shr sub bound movzbl inc sub int3 add ret add enter jnp add push in push pusha shl pop js ds fwait (bad) outsb (bad) std fldcw into rcrb sbb add movsl push cmp pop inc mov lock pop int cmp jbe xchg rorb std add xchg cmp aad rcll insb xchg push and jne inc add clc sbb arpl add inc stos mov and movsb jae in jg je sbb pop clc and gs out xor cmp insb (bad) and movsb push inc push out mov andb jb sub ja (bad) sbbl mov outsl or pop rorb movsb pop and dec sbb inc scas jg adc lock or fsub xchg push add lods jl sbb scas js or cltd mov or fwait jae xchg scas dec insl xchg sbb scas sahf and das pop mov xor dec dec adc (bad) clc pop jp xchg mov outsl inc (bad) pop pop mov rorl adc and sub movsb pop lret test mov push pop dec shr and (bad) jne adcl int sub push cmpsl nop jo ret inc in loopne adcl fnsave jb mov cltd rorl inc or or jnp add aas add clc pop out cmp imul or js sub jl dec or ss jg scas inc icebp inc mov imul push insb scas pop mov and xchg dec sbb and push jmp cmp insb or inc call pop lahf mov mov test mov shll or lahf cmp sahf sti rep mov das fidivl jg cmp sahf mov cltd je cmp sbb sar mov pop (bad) add test push andb mov sbb jno cmp ljmp mov inc shlb lock es pop add sbb or sub push cmpsb cmp hlt add add ja lcall xor mov push (bad) ret jmp adc push mov add pushf jbe pusha leave dec in mov lods jo xchg data16 xor cmp push cmp jmp popf sub mov cmpsl orb jb fstps push mov adc mov mov add dec jbe mov loopne sbb stc out es inc jo enter and push (bad) call jo and (bad) daa insb adc mov inc aam or sub push inc xchg popa call cmpb icebp and push or jl mov adc xchg in (bad) mov sub jle addb in out int3 pop cmp inc pop pop add mov jnp cmp xchg rcrb push in packsswb enter cmp jecxz cmpsl mov add mov dec test cmpsl arpl sbb mov add mov jge cmp adc je adc int3 (bad) (bad) fstl mov mov jno adc test jo pop jmp fwait cld push mov fs iret lock adcl in je adc imul pop push (bad) fdivrl repz or data16 xchg xor leave and pushf xor xor add test cmpsl jne and into sbb je sbb jb fwait jge nop adc xchg cmp lcall out lea js mov inc add andb out push gs mov add shll sbbb push fdivrp insl or mov xor rclb out rclb (bad) or mov cs or addr16 orb lock or movsl inc mov xor mov mov dec loopne andb (bad) das es push insb orl xchg daa iret (bad) mov sub pop cmp sahf mov out daa incb add add into pop out adc pop sub mov repnz pop nop int3 sti inc mov adc adc loope xor cmp or cmp or int mov outsl fs cwtl ja lods cwtl mov mov sub out and mov dec lock add sbb pusha cmp push cmp call movsb out xor push add test xor sbb push jecxz add push pop aad pushf xchg loopne add push xor adc mov addb cmp pushf jp add adc mov aam jae and pusha pop cmp aas push std enter fisubl mov add xchg aad fcoms push push jnp cmpsl loopne or adc adc pop or movsb pop xlat popa pop jno cmp pusha pop aam cmp popa xor xchg add mov (bad) mov icebp fisubl mov lock push sti int mov pop pop rcrb outsb add jno loop (bad) adc pop jl clc xchg nop nop mov int3 adc xchg nop imul addb js dec subl sub adc sbb mov push call in movsl test call test sub and xchg movsl cmp sbb adc cwtl call mov mov (bad) int3 or lahf cmp add ret (bad) and sbb lahf xor sti and mov scas jns ss sub and and shrb andl mov pushf sub cmpsl sbb enter xor divb mov inc cmc cmp (bad) inc in dec push xor adc pop cmpsb adc and inc sbb inc popa jecxz mov fs cmp cwtl xchg and cwtl inc (bad) roll call mov and movsb insb subl add adc add addl lea xor inc in pop pop xor xor mov dec (bad) jno add fild mov in inc mov sbb push andl mov xorb lahf sub aam mov and mov push cltd cmpsl ret add cmc pop push xchg cmp lock addr16 inc or pop cli or xchg cmp aam popf adc insb mov and inc xor add (bad) xor jp sub adc mov add push movsl add jle imul adc mov dec pop pop popa mov push popa push sub andb aas inc lahf xor sbbl sbb add and xchg cmp sbb rcrl push add loop movsl sbb xchg cld push push cmp test stos pop cwtl sbb lods test fnop cmp push mov jo rolb int xor xchg or sbb mov xchg adc jle mov in or xchg fcomip sub cltd add mov pusha xor adc sub mul lret call xlat pop loope (bad) iret sub lret add sbb push leave pop push (bad) rclb or pop cmc scas lods xchg mov sub test andl cld icebp pop sub lret imul mov hlt stos push sbb iret movsb jo mov addb inc cwtl sub add scas cmp cmp fsubs aad bound add pusha (bad) mov and add pusha sub sub adc xor jl add in adcb stos and out or pop es mov sti adc cli mov push pop imul push (bad) cmp inc sbb (bad) lock adc pop add ret add lret add add add and pop imull dec scas mov inc outsl dec and xchg or jge (bad) sbb iret push repnz mov enter dec add ret (bad) pushf sbb andb dec sarb ja sarl (bad) cwtl jo mov add sbb jno xchg xor inc (bad) or inc incb lcall adc cmp mov ljmp mov cmp adc jge movsl mov add pextrw push xchg je cmp lock mov mov lods push push insl add mov sub push add push icebp fcoml iret xor (bad) shrb add (bad) cmp dec in into add jle jbe inc add dec fist loopne sbb je cmpb (bad) inc movb clc or adc (bad) icebp std inc or lcall inc or ds dec or or xchg push (bad) xor mov clc dec cltd es and lret inc out add mov dec or pusha xor mov mov pop inc pop xor sahf lock cmp add daa es pop inc sub jmp repnz add jp push xchg decb inc les clc cltd adc cwtl cli (bad) push inc imul jle test out jbe int3 xchg fs in and into pusha adc mov pop jp cmp sbb (bad) nop nop inc add std cli sarb inc in and mov loopne mov or inc iret inc jne loopne into test or xor jo and icebp sbb sbb cmpsl outsl jge (bad) sub shrl sbbb call ss dec cwtl add adc aas sbb push lds and mov (bad) dec push into arpl clc cmpsb cmp in lods inc jg push pusha nop sub (bad) sbb jo mov dec jne cmp jp or stos jns jge xchg mov sbbb inc and jo pop mov adc hlt dec repz mov dec or jb sub jno and add bound xlat xorb cmpsl dec ja (bad) icebp cwtl les mov sbb and fidivr dec orb in push (bad) pop test loope in jg adc fnop mov mov loope and int3 cmpsl inc cmp xchg jg les inc jae cwtl pop inc cwtl mov sub sbbb adc repnz mov add in out cmp add aad (bad) dec popf mov dec and popa adc inc and sub pop hlt mov and cwtl inc aad cmp adc pop sbb dec add cmpsl sahf nop push into movsb add pop rclb and mov mov fdivl vshufps nop das xor push popa repz pop les bound int3 in mov mov (bad) push adc inc or and pusha add shrb out loope orb adc (bad) cmpsl add nop mov cmp andb insl adc aas nop pop jp push xor and adc or clc dec adc mov out pop addr16 orl mov sbb mov mov jnp push push inc dec mov sub and scas call xlat imul lahf movsl adc clc push mov ret nop add (bad) mov mov xor inc cwtl add out cmp ja movsb lret rol xor nop dec add push sbb xor push xor adc enter sbb sub fs pop push mov sub fisubrl xchg andb daa sub ror mov shrb (bad) mov xchg mov gs fidivl xchg dec add test fdivrl xchg sbb shlb sbbl pushf shll inc test in je data16 fbld sub and sbb test jg inc add xchg mov les jg xorb addr16 mov adc jae add hlt incb xchg push out push sbb lods sub enter inc sub xor sub mov addb adc xchg or inc insb mov and sbb xchg cltd mov add inc repz add rcl stc push les xor add xchg cs int3 adc shlb pop ja mov enter mov lds dec and nop and xor cs mov outsb rorl fcomip add sbb xor aam xchg lea in cmp xchg jl mov ss pop mov fs clc shll sub xor jo,pn sarb jns lods imul dec jns dec mov mov mov mov inc mov cmp jno jns mov jb jge inc add push fs cmp pop test adc cmp cs add mov cmp cmc cmp mov aam adc dec xor adc test jle dec sub xor pop mov cmp into pop mov pushf inc fs mov rcl jl addl jo (bad) pop and cmp repz test in lret pop nop add je out imul aas xchg mov lock dec fs sbb cmp cld xor roll (bad) (bad) mov and xchg clc adc scas push (bad) hlt rol jmp nop pop inc add xchg mov cwtl popa inc and into lahf xor enter bound sub mov rcrb cmp pop cmp push sub add pop je,pt xchg lock mov (bad) and dec pop jbe xchg fmuls dec repnz out xor gs dec push int3 add cmc mov dec mov and hlt subb cmp mov fstpt add incl stc fs push sbb fsubs cwtl leave ja daa cmp rorb xchg push bound and mov lock inc and pop fisttp mov lods cmpsl pop sarb xlat xchg loopne mov fs cld fiaddl sub dec cli call mov xor push movb into test in inc fadd mov and pusha clc rcrb pushf fdivrl lock or fs xor insb in mov or popf inc aam loopne sahf (bad) aam adc cmp adc ds pop es xchg outsl enter outsb push dec cmpsl mov push mov xor and test and rcrb (bad) xchg out jl (bad) mov fadd mov sub shr clc fcmovu jl mov mov pusha mov dec loop xor sarl lret and dec loopne mov mov les (bad) in lock aam mov insb dec or call in leave cltd cltd add mov int3 pushf inc add (bad) cmp sahf mov push ss or push dec (bad) dec (bad) fucomi push nop pop jle mov or push pop fcoml adc and daa clc pushf les in scas dec mov out jo mov push jmp andb push cmp and jbe xor fistl and test xor adc call mov in dec and fbld mov cmp ficomp pushf mov and outsl mov adc cli and in insb inc mov enter jae add lock rol scas xchg int3 and je loopne (bad) lods ljmp mov mov cmp or add ja adc testb loope pop adc loopne ror dec loop inc sub xor icebp inc lock add rorl rcr and dec dec popa mov rorb lock push cltd add (bad) xor xchg or push xchg and xchg push mov dec jb mov inc lods mov xchg or and mov roll out insb add dec js lds and jnp jl pop sti pusha mov cmp rorb jbe aad addr16 dec sub ret mov xchg jo mov mov cmp and hlt sbb lock rclb andb into out das and sbb xor imull push nop int sahf popa rorb and cld add cs (bad) nop mov lret inc or mov xchg cmp (bad) les cmp and adc push daa add sub inc sub mov or inc jle jbe (bad) imul xchg js das or pushf dec mov ffree inc repnz or inc xor cmp mov xchg hlt imul inc mov dec mov test pusha enter inc pushf movsl pop xchg cmpsb sti mov out dec lock fwait xor add xor test cmp cltd pushf ss mov xor pop adc push sub lods cmp inc scas mov xor inc sbb add inc jp jle jne xchg jge push rolb push push (bad) pop push mov xor into cwtl adc xor test out pop sub andl in jae inc add stos addr16 push mov mov mov out sbbl (bad) mov push incb push subb mov add idivb and sub pop sbb or push inc lea (bad) addr16 mov out test or mov pop or mov cli mov adcb inc (bad) sti jl push scas push stos (bad) jbe push sub push lcall and outsl sti pop test push cmpb hlt mov jnp cmp sbb fiaddl cmp lret push sub das and pop mov adc mov jns or xor imul mov out cmc inc mov jmp (bad) out popf pop add adc push pop cli cwtl add mov jno jp,pn nop enter push add sub fs add jb repz push out pop jo out fmulp push imul inc jbe xor bound imul rolb mov ret mulb inc scas mov sbb push inc mov pusha add lgs pop imul inc or scas nop mov add (bad) push mov mov test mov mov stos push xor popf xchg std cltd push lret mov mov jns and arpl popa stos push lahf mov dec pop clc out cmp sub or out adc subl test pop inc orb fisubr loopne fidivl rorb add dec xchg sub (bad) add adc popa and xor ljmp leave or push sbb arpl pop xor rcr sti mov adc idivl sbb jns rcrb xor out cwtl (bad) fimull dec rcr dec aaa fs inc cltd mov sar mov add xchg mov pop test add xor inc and adcl popa imul loope,pt enter adc shlb pop add inc push add jle mov imul fiadd test mov lds mov cs push adc test or mov inc les icebp cmc ds test les cld xor repz pop call mov pop repnz push inc orb jmp shlb sarl pop xor mov add lock add shrl fildl pushf jg movsb je fldcw sbb mov inc mov jnp jg mov and lcall cmp xor adc xor insb shll sub mov or aad stc push insb jb pop xor add sbb and leave sub fidivrl sahf fsubl and les xor push xor fbstp aas xchg cmp pusha cmp jno lock sbb shrb or dec in stc add shrb (bad) nop (bad) dec je or (bad) aam mov sub add pop sbb or test jl and pop mov mov fsubrl pop adc mov mov pop mov cmp and cmp enter scas leave dec jg movsb and jne imul (bad) cmpsb leave cmp (bad) xor icebp inc rorb push outsb out fs rol fdivs dec mov out cwtl fadds mov cmp adc mov pusha sbb mov pop jae push nop push aad jp add (bad) scas andl (bad) mov fdivl sbb jne lds fisttpll xor mov inc ljmp dec out rclb icebp xor in cmp clc inc add aam les mov ret fs fild in js add aad sbb dec inc sub or mov mov push add sarb sub mov adc imul ljmp adc bound dec js dec repz gs (bad) fs xor rolb js fildl es call add stos pop mov enter js,pt pop aaa dec les aas dec fisub add and jae mov dec adc adc cli dec inc sbb or adc pushf loope ret pusha xorb dec xor adc and adc nop inc push adcb jp add sub mov data16 je frstor add (bad) jle jmp ftst xor mov push pusha jo shrl mov and cmovl shr sbbb repz in pop test dec dec cmp mov shlb sub fs add loop add sub adc mov lea ret adc push movsb cmp js mov ljmp rcl popf xor loope sbb aaa aas mov out xchg sub daa xchg mov movsb ret push push push dec jl jg mov sbb xor iret sbb loope ds mov push mov cmp fistp imul dec movsl sbb inc jg mov out out fstl subl add inc xor enter loop addb mov dec pusha cwtl xorl or cmp loopne fadd nop stos ss mov add inc or (bad) or test aaa adc cmpsb xor insl or les mov lret xor or fnop pusha jo pop stc imul mov pushf push fwait sarl cmpb adc mov add loopne mov add dec int3 fstps inc add sbb iret stos or push add mov add push repz add sbb adc adc scas bnd lock or cmpsb add dec dec sub cwtl adc adc xchg pop test fcom fldt movsb push mov enter lods jb pop inc cwtl adc ds loope loopne nop dec lret shlb jecxz jb mov add (bad) aad repz bound mov aaa mov mov add sbb push hlt jo loope in lds add out imul or aaa lret movsl mov or shrb jne mov idiv repz mov mov pop sbb aam popf fs ds cmpsl push bnd pusha xor shlb dec push inc mov add jp notl fs je aas dec mov push (bad) sub rclb add scas mov lea inc cwtl sub add pop imul add lcall mov xor in aad pop popf jg lret and mov call loopne subb mov inc inc cmp (bad) fdivs imul loope xchg arpl enter dec push stos rorb lcall or push repnz push aam mov mov sbb sbb sub push push add shll movsb push aad xor shlb dec imul pop dec mov push adc cmp pop xchg add xor inc movsb jbe dec sarl mov mov es jo pop push jae adc (bad) mov mull sbb (bad) fsub fldenv mov loopne jbe pushf popf pop sbb inc into (bad) ds mov mov mov push fcoml pop shrl push imul mov and mov cmp add es add gs sub push pop (bad) out imul add dec jp aaa and sub hlt mov add pop fs mov push sbb mov test mov iret adc ret movsb mov clc push pop xor rorl fisttp lret addb fldenv and andb mov xchg lcall addr16 loope inc or pusha je sbb and add sub and fmuls enter iret adc shrl insl push jb push jl rolb (bad) imul add stos aam mov shrb mov add pop xor sbbl add pop test lods test jns xor fstpl enter xor aas aaa scas pushf dec xchg pop fsubl inc cmpsl pop fs ss pop repz fdivrl loopne push add pushf enter insb add loope imul rcl repz test fadd test mov lock mov bound (bad) roll jo lock and lds movsb pop imul or add sbb (bad) xor popf pop add mov sbb mov add rclb aas dec xchg test inc out repnz ret or inc add mov mov add pop lds jmp divb sub shll inc add enter rolb (bad) int (bad) (bad) xor add xchg sahf xor into shlb mov xor cwtl adc push shl cli addr16 fs pop insl add mov clc inc test ret add push mov aas jmp add xor movsl push pop inc sub or dec lahf or bts mov xchg out movl fild jmp shrl dec imul imul pop loope and and fistpll xchg sbb pop cmp roll mov es enter mov add or xor fwait add (bad) paddq sbb pop pop fildll sub cld out and scas nop not inc pusha (bad) cld cltd movsl mov call mov inc push pop cs nop add gs faddl xor aam or jb pushf (bad) lcall xchg fs mov cli lods and push scas pop push fistpll push lods or dec subb je or jl cltd add int3 aaa aas inc or push ret mov fs push cmp push mov add sub xor or add xor jl dec iret fisttp pusha jmp add mov sub rcr mov loop imul dec daa nop sub test (bad) push inc sbb mov and rcl int3 ds mov das shl push add mov fs rcrl mov loope xor cmp add shrl mov sub mov jo fnstenv popa mov inc add jnp xchg dec or sbb pop add sbb outsb mov cmpl stos dec and fist aam cmp pop or mov aaa xchg xor lock sbb shrl fild sbb lahf mov add stc jne mov jne fisub fbld ds and inc icebp cmp add shl or lea mov js cmp sbb aam inc mov jno cs ss cwtl nop push test and inc fstpt jae jle dec inc aaa pushf dec cwtl jo xchg mov adc lahf subb test cltd fdivrl stos aaa mov xchg mov fidivl mov pusha fdivs rcll inc sarb inc popf push mov sub fisubrl imul bound pop push sbb (bad) dec mov mov jne mov xchg adc inc int3 mov inc ret push cmpsb fs jl aas cmp icebp mov add push mov inc mov mov int3 sar sti lcall enter lods fiaddl push xor xor popf std mov cmpsb pop cmp int3 add pop sub int3 pusha lret rcl add arpl pop sub ret push stos jl sub addb cmp sbb jge adc ljmp dec out lock pusha nop mov mov sbb dec add pop jno inc inc push jp pop ja mov out inc enter dec je std loope add sbb mov ds aas loopne add add rolb cmpsb and or xor (bad) dec clc push jg push mov ja aam clc xchg call mov jo adc adc mov jecxz and mov mov dec inc push call xchg mov cmp aam xchg movsb sub pop adc push mov mov sub adc leavew push xchg loop mov cltd and out xchg adc adc sar rolb sbb pusha mov jnp out loop pusha jg (bad) mov adc in out pop incl out dec je enter add sar and inc sbb jno cwtl xor sbb xchg lock mov (bad) xor mov pop cmp pop mov icebp adc inc lds xor sub ljmp and mov xchg cmp or es add addl (bad) popa pop int push xor push mov inc sbbb pop cmp jns call negb push push dec or inc fadds lock lock movsb mov rclb inc pop ds std das xor dec cmpb add lret inc jl mov or imul loopne rcll stos movsl cmp aas popa sbb add push mov je pusha mov pop xchg adc xchg jbe adc and xchg mov add mov cmp into dec cwtl or and jbe fisubrl mov (bad) movsb (bad) sarb arpl fimull mov push add (bad) fidivl sbb adc jl es insb roll lcall cmp aam adc and rcrb ret jl push adc cld pop aas mov push ret loop push cmp and pop aaa sahf cmc jbe test dec xor dec (bad) adc pop insb shl test repnz sbb fs or and xchg (bad) jp push and jecxz inc dec add sbb dec mov mov dec lea es aam pop lcall outsl pop dec ret xchg inc mov adc adc push adc add jl add mov lcall sbb cwtl dec adc sbb inc test inc xchg out je xor pop sbb push adc bound aam add ljmp test pop sub inc mov icebp mov mov jl add dec pop dec (bad) into icebp mov addl fistpll vmresume jecxz mov xchg loopne sub addb dec sarb loop push subl in mov xchg and ds test andb divb xor popf (bad) imul sub mov je aas sbb imull xchg jmp lods push fimul mov fadds fwait push test add inc xchg lret jns test gs out les negl adc lcall mul xorl mov (bad) dec mov stos inc sub mov push pop cmp inc cmovo xor xchg fmull dec xchg dec imul inc mov addr16 add int3 and inc and and dec inc fidiv dec xchg inc add sub cltd mov fldcw jnp cmp outsl inc pusha mov shlb or popa inc call mov (bad) xchg enter pop div mov or add sahf jmp test pusha sbb add (bad) arpl int clc mov (bad) out pusha fs add or jno add aam lods add push leave adc mov jo adc mov daa insl xlat add pop jo and cmp push dec fimul cltd inc mov aam and adc pop xor gs xor mov push and pushf xchg sub insb add xor in or mov jecxz sub jbe icebp mov popf pop fsubrs rcrl pop inc mov aam lcall (bad) seta test hlt or jae push mulb data16 stos shrl or jae andl cld pop xchg sub mov sbb movsw add loope hlt bound mov push sbbb xchg (bad) mov repz repz and inc hlt cmc sbb xorb push push jb add pop aad jmp or xor (bad) lcall mov inc out popa add lds sbb pop sub movl add adc inc and divb pop test add inc push cmp jmp add and cmpb sahf xorb out adc les mov xchg es mov xchg bswap arpl push xchg faddl subl mov add sbb (bad) imul repz (bad) fiadd in add fnstenv or nop ss mov xor fsubrp inc movl hlt inc sub mov in sbb inc out push add jp orb and mov push outsb mov insb jb xor and inc cli mov mov sub test (bad) sub xchg je mov dec inc int3 sub nop push sub push lods and mov bound mov and in aaa aas or test icebp ret arpl push fcomps ret inc lock mov es arpl sub mov mov cmp call xchg sub jo cmp (bad) xor push cmpsb aam or out sbb add jecxz cmc ud1 push mov pop xchg pusha adc rcll je (bad) pop leave pop sbb popa stc pusha hlt adc ja sahf ss dec add lods lock clc dec or add and push fild aas test fidivr (bad) add jo push mov adc hlt mov mov xor mov cmp jb add dec aas dec sub xor call bound sbb (bad) push aad dec jge push cmp push mov cmp lds fcoms xor cld xor sarl push push jp pop vmwrite mov jno push cmp xchg and outsb inc insl pop fidivl push test xorb (bad) mov sbb xlat jle cmp push xchg insb arpl fbld push arpl push mov loopne add jne and push or addr16 and jnp dec cld jmp jne test or push cld add inc jno mov and pop loope aas rorb mov jne xor ret or push mov inc and and or jbe fldenv aas inc inc sbb call lret int3 mov mov xchg pusha (bad) mov scas fadd xchg cld mov stos dec sbb adc loopne cmp or jg mov lds outsb add je or int jl dec jo pop push test and dec jmp fxch push jns notb inc mov leave xor inc dec cmp inc sbb jmp push adc xor pop xchg sub mov gs ds pop adcb sbb fs enter (bad) es sbb sub or int3 mov clc lret (bad) out jb (bad) cwtl into call lret fs cmp and out jno fist rcr jp mov clc inc (bad) sub dec testl push jne negb dec aas inc or cmpsl pusha cmp sub pop jae in je lock into sbb test aas cmp cltd loop pop lret (bad) cmp int3 out and add movsb or cmp push nop sbb pop outsl and inc repnz or push add int3 add es xchg in movsb add jp mov sbb nop inc movsb xor movsb sbb test push mov mov pop adc inc push inc inc jl jne adc and or dec sahf xor xor andb sub jg enter ss mov dec or or aas xchg out fs (bad) cmp mov push (bad) lock mov push dec js push push or mov (bad) mov (bad) add addb push mov aaa xchg add mov inc test movsb outsb loop add mov jb aas inc mov cltd add pop push scas nop or push (bad) push (bad) hlt sbb fcmovnbe xchg daa mov pop fcomps inc adc push push test xor insl mov jecxz or jne push jae ret adc stc add hlt add or decb pop and and (bad) or (bad) dec int test and adc xor adc add jbe fistpll in fsubl cmp addl mov lret jno pusha test add or mov dec cwtl cli pop pop leave mov loopne xor mov les jbe and lods xor inc pop push xor inc subb sbb push jp fimul push sub push andl dec push fstpt into add mov push or inc and cs dec stos add out repz mov clc add inc mov add or jo jl and mov iret push movsb sar aas outsl fcomp pop out dec add pop vcomiss out pop (bad) aas push jns shrb cld ds mov mov cmp enter imul lods pusha imul ds mov add flds loope sub adc fisubl add add repnz sub sbb subb mov xchg enter sub fildll lods out or xor decl je push ret push dec xor ljmp (bad) xor ficom mov jmp dec das fcoms clc inc les mov (bad) andb ret addr16 pop cwtl (bad) xchg mov popa lds rclb pusha movb mov lds inc fs iret test fbstp loopne push dec inc into sarb sub gs add or xchg sbb dec rcl jno cmp cltd add jg or scas mov push pop icebp add enter adcl and push (bad) lea xor (bad) fstps hlt push inc loop add enter inc and in in cmp je mov jae rcrl push jne mov inc je in inc test mov je mov call outsl inc pop enter insb sub out xchg std add dec pop inc call cmp sub insl punpcklbw rcl xchg push mov pop xor inc sbb push call in push pop inc mov mov push dec ds or inc jo add test mov jbe jl pusha fcmovu and jmp adc inc hlt fildll adcb (bad) das or inc dec cmpb int popf ds out cmp repnz roll pusha mov mov rcr lcall inc xchg mov andl push enter push test push test dec test stos adc jns stc inc in stos dec scas clc or or xor push cmp sub mov andnps xchg fisttp push cwtl xchg iret mov rclb pop cmp addb pop loop cmp dec sarb inc testl mov pop inc gs mov bound push cmp repnz rcr les sub gs testb sub xchg aam push stos hlt push incb adc roll xchg (bad) enter jge add adc and sbb cmp or jae bound outsl adc addl stos and jae in and xor rorb jno jecxz push popf sbb (bad) lods jbe repz xor adc sbb lret pusha push and push outsl fisubl sbb movups push sbb cli cmpsl xor jnp sbb xchg sub mov inc and pop movsb and ret and push and and ret add mov jo jl or inc add dec xchg sbbb mov pop push shrb add loope push test add pushf xchg cld jno and mov mov mov out fildll jp int3 jns pusha lcall stos lods cltd js xor fwait mov mov dec pop inc add xor dec push lret push jmp xchg or add repnz out arpl data16 negl xor lods in inc je add cmp jae ss xor cli add jg mov add ja daa clc pop imul xchg hlt cld dec shlb or inc dec movsb std arpl leave sub aas jbe incb jp repz out iret mov faddl push jmp push push xchg xchg ror adc jno leave inc rcr (bad) idivb sbb sbb subl mov xchg or xor scas inc cmp push test lcall in (bad) ds push jg add inc add jne push add mov lret (bad) popf sbb lret inc or movsl pop cmpl pop sub xor test insl mov int3 mov push je add ja add ret and pop cwtl and pop repz jnp jg mov cmp adc pop rorb push xchg pusha jle push leave loopne int3 loopne xor lods idivb jmp lret sub dec imul pop rclb mov fldcw cmp int sbb leave js push pop mov jecxz lret lock inc jb and sbb adc insl lret add pop lea ljmp sub jo inc dec imul xchg xor push pop lcall lahf int imul mov lds or inc lret inc and dec pop sbb cmpsb (bad) pop xor repz loope jecxz mov hlt jge loop cmovno leave or and gs lahf mov pushf sub xchg pushf aas and mov arpl enter rclb in dec (bad) fsubrl out loopne push push test mov in cmp test or or fmul pop hlt mov inc add xchg rcrl add lock dec arpl sti mov adc xor out push inc sub fbld faddl push fstpt dec cmpsb in and test and sbb cltd push fwait add leave xchg in pop lret icebp pop add fisubr jmp mov cmp pop adc mov xor xlat adc (bad) xor jb enter mov mov dec lcall bnd cmp sub inc cmp shlb add push xchg and lods sbb add fldl das pop push add and (bad) push ficoml lahf (bad) mov in mov loopne je push out test add sub jmp and leave adc in mov mov lods add notl dec push fmul xor popf xchg rcrb sahf jecxz sub ret or jp push pop dec mov ljmp mov shlb inc mov add pop gs movsb test lahf into dec pop or icebp cmpb dec mov lret test dec mov push jmp jp mov adc leave dec pusha push dec adc js in cmpl push js push add xchg test sti ror int3 leave fwait dec shlb test sbb jbe add adc pop add loope gs (bad) push mov lods andb dec add nop mov mov jno movsb inc imull add xchg jmp jns test icebp xchg movsb sarl jp jne (bad) jns mov nop rorb xchg lret sub rcrb imul inc add xlat lret sub mov inc cld lar inc add leave shrl fist je add pop out lret mov mov add jl shr adc into pop mov test or repnz (bad) mov shlb adc jns mov inc leave mov in lea lret inc imul idivl add sub sti add or jecxz lock mov fdivl ret push loopne sbb inc add pop in lds arpl inc hlt movsl cld cwtl test or (bad) cmp out mov xor adc push aam pushf adc jl jmp enter mov mov arpl les add push jp inc pop mov daa xor mov xchg dec push or movsl jo (bad) je jg add mov xlat pop pusha outsb shrb test adc and pusha je jp dec rolb les add lret adc test lods insl jno add je (bad) xor mov insb inc fisttpll cwtl repz push fcompl dec or lock rorb adc mov int3 outsl push cwtl rolb xor mov add jne push cwtl lret pop xlat dec shrb sbb sub and lret jp cs mov jns jmp sti push add xor mov les cmp imul test in jmp nop dec inc in into adc dec or mov push lods orb xor clc scas xchg jo inc or lret pop icebp cmp in in (bad) xor and mov and push jp loope (bad) adcl cmp stos lock mov out push xor jecxz in movsb inc pop or les xchg inc mov add push ret xor icebp and out aas movsb xchg fs sub pop inc jmp mov add sbb ds jo xor push bound ret imul mov pop sbbb leave ret aad inc cmp add pop loope inc or add fisub scas bswap push pop push cmpsb cltd and in cmpl in std aas lock sbb cmpsb lahf add adc fisttp dec and and xchg pop pop sbb (bad) loope mov aas dec dec sub dec dec ret shr in push mov or dec repz dec add mov nop dec out orl int repz cmc or xor or inc mov inc sbb add mov pop jno js xor xor adc mov hlt push mov xor cld add loopne jecxz cmp push sbb sti in fwait ja cld lods cmp in adc movsl popf add mov xchg ljmp rorb inc pop mov or pushf mov cmp xor lock and mov icebp or rolb sbb out addb cmpsl cwtl push push mov push inc shl pop push cmp and daa lret mov les popa pop incl mov inc and add add mov icebp pop xor pop cmp lds lods or fist leave dec pushf add mov add mov or dec xor add xlat adc outsl mov icebp aaa add cmp jo xor cwtl mov cwtl sbb mov les sbb rorl add sub inc xor lock push dec adc cmpsb hlt sub loopne gs aam add loope mov ja pusha sub pop xchg aam mov mov mov mov outsb cmc jns shl mov mov pushf or add and (bad) sub push andb (bad) icebp inc leave test dec orl sub test sar sbb mov imul js imul sbb mov inc push cmp cmp mov add mov imul lret in mov add iret pop rcrb data16 pop jae ljmp arpl in mov ret lock loope pop inc cmp popf and cli pusha les inc lods push loope (bad) sub xlat xor pusha lret arpl inc fsubrl inc sub cltd imul lods rclb data16 or and cwtl jno insl xchg mov pusha aaa pusha jg jecxz dec cwtl aad mov int3 or lods and sub adc clc inc sarl cmc xor mov pop psllq out pop js adc arpl add std test call loop lds sbbb xor ret mov test add jnp into lret add sbbl test in (bad) (bad) pop outsl lods mov push sub sub jecxz add fistp shr add fmull (bad) inc ret pop js aas cli mov dec bound dec add (bad) xlat sbb out outsl cli loopne lret in xor (bad) scas cmc idiv add lods loop add ret mov xchg push adc stos mov push stc je sarl or adc push mov sbb sub xor add cmp pushf adcl dec push mov xlat cwtl xorl fwait add xor (bad) out dec lods pop cmp cmp add xchg push nop insb cli mov jae cmp in subl and dec push cld aaa imul xchg leave (bad) pop fadds push ret dec popa outsb pusha lahf sbb adc push xchg sbb jmp fiadd adcl adc rcrl xchg or adc (bad) cs cmp (bad) stc jge les cmp in mov pusha nop js (bad) push stos add xor adc test add mov push mov mov enter das call int3 add sbb xchg mov cmp xor sub add jp cltd shlb cmc add jl mov or add and jmp jecxz inc adc js (bad) cwtl ret inc push test sub mov add test mov out add icebp adc lock test fs jp mov pop outsb cli lret mov adc int3 or imul or shr mov gs out aad nop lods add mov ds rolb mov (bad) pop mov cmp leave pusha bound add mov aas jbe xlat es adc in movb outsl subl imul mov push cwtl dec or pop mov mov push sbb and aaa aam stos mov mov dec pop (bad) hlt in mov in test push fiadd pop orb push or lds leave jp xor sub xchg cmp push movsb or push bnd adc xchg xchg or xchg fmuls fwait cmp add ret sbb scas add ret bound and push inc xchg inc test clc lea and mov xchg push jo fcomip and outsb out loopne push call push push push mov cmp add xorl mov test lock pushf xor fistpl nop cmp (bad) int3 and dec push icebp mov pop test or fsubl popa stc mov cmp gs mov rcll js les test sbb mov xlat imul push push cmp add (bad) fsub outsb inc add test ret xchg adc aad and xchg and mov xor inc pop mov std js sub movsl call (bad) insb push mov add mov fwait adcl fsubrs je mov and mov aas rcrb push ret shl rorb add xor mov cmp lret lock add inc imul inc adc sbb or pop mov sub xchg xchg jecxz mov repnz sbb icebp adc das lcall lds dec pushf push cmp pop mov (bad) leave icebp push (bad) sbb xchg mov movsb mov sub add inc std sbb ffree mov (bad) jo fmul mov add jo jg lds lret xchg pop add imul add fsincos loopne sub add xchg aam push movups out jmp cmc and inc push add roll push (bad) sti inc enter jp mov xor adc cmpsb add repz sbb gs pop cmp jns lods jno sbb cmp insl add jb cmp add movsl jge adc add (bad) in les stos or jb cmp xlat nop mov sbb jmp push push cmp jns cmp xchg loopne fldenv sbb add cwtl hlt test adc outsb adc pop mov out jmp sbb inc mov and adc cmpb subb dec or pop inc and mov ss (bad) pusha inc imul pop and xchg stos hlt push (bad) int push in push lretw sti add fldenv (bad) sbb rorl andb xchg push dec mov iret mov (bad) or aam clc adc fistl dec pop push add push adc test je pop push test inc add movsb and xlat pop cmp lds cltd xor fisttpl ffree xchg push xchg or inc test (bad) ljmp sbb add cmp push xchg sbb and cmpsl fs xchg add dec andb shll out inc and push mov repnz mov mov mov jmp cmpsb mov inc pop mov dec sbb xchg add and insb (bad) adc or fiaddl and sbb sbb and ljmp xchg adc fstpt rcll fbstp aas add test xchg sub (bad) mov outsb stos clc and pop arpl mov shll or mov out mov add jbe ds jecxz mov cmpb pop or cmp pop (bad) rol mov ja sti sbb pop ljmp gs xchg vpsubsb dec cmpb push outsl mov pop sub in ret lock push and mov pushf pop add xchg shlb push mov cltd and pop test or xchg cmp ffree or leave inc in mov or sbb out mov clc or dec xchg xorb movl or arpl dec fmull add push test mov pusha xorl inc pusha leave mov jo (bad) xor insb arpl xor dec outsb pop lret cwtl add int3 fstpl adc adcb dec dec orb adcl sub add je xchg and imul inc and dec sbb push movsb cmp mov push add rcl bound add pop cmp xor dec add icebp mov mov stos pop xor pop outsb xor add je adc pop movsb inc add ret inc loopne and gs fs mov inc nop lds loopne je adc jle add xchg sbb jne lret shl addr16 mov or add jns add sarb les out and mov mov ret cwtl add inc xor push pop sub adc in xor mov in cltd addb or (bad) adc push pusha aas xor mov xchg or dec in ret es or shl sub insb or pushl jp mov push mov push mov lock cmpb jg js out and xchg mov adc add xchg sbb shlb call les mov xlat lods ror inc je inc sbb (bad) jno or fdivl adc xchg or inc xor or inc movsb inc and adc cmp adc cwtl or inc add mov cmp push adc adc and mov scas (bad) cmpl add rcl popa pop add xchg jno adc add stos cmc jnp aaa add jo enter pop mov adc test inc insl lock out add les or mov or sahf mov or add jecxz mov sub lock jle cmp jno push outsl add xor sbb sub rolb or (bad) pop mov add jno (bad) adc nop dec clc mov cltd sbb fwait xchg dec mov imul dec jp fwait pop xor adc adc add loop adc ja push fwait clc add pop cmp dec mov add fisttpll sbb test loopne lods sbb add jp out sbb outsb or clc xorb xchg xchg cmp rol mov or cmpb testl stc imul aaa jmp andl imul stos add out dec lock inc cmp add or rclb rcrl cmp dec popa sbb and aas out add out sub mov jecxz and icebp loopne mov cmc imul int3 adcl (bad) insb mov out mov sub adc xor je adc xchg (bad) jae sub iret sbb mov loope cmpsl call or (bad) aam out push insl inc push mov pop sub cmpsb cmovno and jge xor cmp add cwtl lds or or nop insb dec nop pop add addr16 lods shrb mov mov add cmpsl push outsb sub nop pop add push push dec sub adc aad add hlt sub lret mov adc xchg inc add sbb out push cld mov aam add or std adc in adc popa fsubrs sub aas aaa nop add xor cltd inc insl dec or and mov shlb (bad) jg adc push dec push fadd popa add mov sarl sti xchg punpcklbw pop inc (bad) out and push mov or sbb pop or in xchg test daa dec inc push nopl mov sbb inc or mov and add jmp add out dec and inc push add mov cmp adcl (bad) cli popa and subb in jecxz push lret or mov test inc inc (bad) mov iret fwait mov mov movsb jo dec or xor clc push mov xor in shlb add fsubs xchg loope imul addb fisttpl mov sub mov or mov jo add or xor pop in dec mov mov sbb add scas divl jl sbbb (bad) xlat inc loope ljmp add dec push insb jecxz pusha cmp test or insb ja and adc add in int mov pusha and out js xchg mov pop orl add fmuls imulb inc and adc add popf inc inc sub mov sub dec push jno add aam ja and sbb imul sub pushf xor pop push push inc mov xchg xor int inc adc sub (bad) xor sub adc mov and lcall stos ljmp gs inc xchg movsb and or dec lret shlb mov jge pop inc add aam pop push adc mov ds jnp scas shlb andl popf and out pushf les mov mov test sbb sbb and je dec pop and test jg jb jl sbb loop mov std pop pop push out jmp aaa fs xor xchg or (bad) mov jo jo push popf lds dec pop adc xchg or or inc fbstp add test add (bad) jb add imul mov and and add cld and mov or addr16 lea cwtl cmp jmp (bad) mov mov xchg push cmp test adc ja mov cwtl xlat xor rolb dec sub sarl dec mov inc cwtl fxch in push and (bad) and sub sub sub cmp cwtl sbb (bad) outsl and sbb stos fs or jecxz nop or sub adc mov nop rcrb sbb inc mov adc ret enter add push push loope lods pop mov nop jecxz lods mov push sarl insl jns shrl leave ja push mov je adc movsb test jnp lods sbb icebp add ds enter pop fs rolb push hlt std sub cwtl insb adc or nop or lock push mov sbbl lock dec add pushf mov mov mov dec mov fild and push and dec dec sub in call dec inc cmp mov orl cmp push dec and les dec out mov and dec dec and push pop add cmp int3 xor shlb pop cmp mov mov outsb push or lcall pop xlat mov mov roll clc ficompl into adc je cwtl xor add (bad) orb scas aas mov add mov xchg pusha sbb mov rcl movsb in clc fistpl fisub jns sbb xor bound adc pop insb orb adc stos inc dec test scas xor das mov std and je mov sub inc add or rcrb or mov inc adc mov dec loop add into in cmpsl fwait pop dec cwtl inc clc sbb cltd lcall jae pop outsl lods add cwtl inc adc scas rol lds push xchg sbb lock sar add mov and xor enter in xor mov push dec or andl loopne or and cli push jle xor and pop jmp insl dec jmp sbb enter lock orb add sti (bad) ds test aad mov and rcrl loopne rclb sbb movsb shl xchg sti add adc add mov xor fisubrl rclb add dec outsb sbb dec add mov dec adcb aaa sbb ret (bad) in add fcom push sti loope jmp rcrb stos ret push inc adc add jle sbb daa adc and fs lcall adc out rclb cli lods adc test repnz or or sbb cltd mov mov mov stc and nop sbb movsb cmc pop clc nop sub push add push rep add xor and ret fiaddl std cs ds and fldcw fisttpll and cld insb add addr16 inc les dec out nop xor mov ds sbb (bad) sub cld dec dec fadds sub or jae xchg add scas sub sbb dec and adc push adcb aam add dec add stc outsl nop adc cmp cwtl mov sub add or scas push aas xor repnz xor aaa push sarl sbb and dec (bad) outsl dec mov dec sbb dec adc daa mov fs sub jl pushf in sub xchg xor or arpl lret pop pushf pop add sbb icebp jle mov adc mov add dec mov and lods mov jg push and mov nop xchg push inc inc iret mov dec push sbb orb inc nop sub dec add sahf xchg test sub lock ds cmp xor scas pop repnz fsub dec push and movsb lret lahf push call mov sbb push loopne dec iret xlat mov arpl icebp sbb pop sbb jmp and cmpsl xchg pusha pop jmp pop bound inc rcrl sahf and or loopne xor shrb aaa add pushf inc repz loope adc enter mov dec jo rorl push fstpt and sub in loop cli add leave scas mov int3 inc scas sub xor sbb shlb out cs or sbb out mov dec xor arpl pop xlat xorb sub and add pop mov subl mov xchg mov loopne add dec or mov imul xchg cmp je push lods in ret pop jns mov and mov mov jecxz call and iret stos mov ficomp push sbb aas add cmpsl repz push xor xor jo xchg enter cmp sub cmp jecxz rorb or adc or mov add xor jecxz mov scas fs xor inc add (bad) out adc cmp data16 popa call clc nop xchg add jae jns jbe ds add mov rcr fld pop je mov fadds push cmp int3 add pop sub dec mov in add (bad) mov jno imul stc adc inc or mov shrb adc outsl mov ss push pop or test insb or push and mov push inc fdivs adc xchg sbb cmp cli cmp adc movsb sub adc loopne mov in fs and insb xor pop das pop inc test xchg clc popf xor lods dec add adc cmp (bad) jae addb push jmp adc fs sarb or or mov lahf into adc test hlt aam xchg (bad) negb sub adc out inc cmc mov shlb cmp mov pusha (bad) stc insl inc cld add xor in aam dec add fstps js dec and xorb cmpsl sub sub push mov pop or mov shr dec test jnp adc adc (bad) mov jb xor nop sub mov test jl adc pop adc in cmp sub inc icebp pop cwtl sbb data16 cmpsb xor mov les xor stos test and loopne sub fsubrl mov pop xor cmp (bad) (bad) (bad) shrb sub lods out clc adc imulb push dec arpl aam sub pop or push dec pop xchg mov push movsb loopne mov sbb adc fs sbb (bad) jl adcl fimull dec cmc das or dec or dec shll jle int jmp in cmpsl add imul mov (bad) mov outsb jg mov xchg cmc mov sub cmp mov nop lock (bad) dec xorb adc mov push dec sbb movsb imul mov sbb mov mov out dec cmp shll stos mov shll rclb dec adc pop repnz nop xchg push sbb mov outsb cmp test call jg gs mov cmc or lahf sbb mov xchg pop (bad) sub cwtl push xchg fadds and test dec pop push mov add (bad) lcall push (bad) cmc and sbb xchg pushf push push iret adc push mov subb gs ret xor sbb test or mov xchg and aam sbb loope andb pop mov or mov adcl sbb or cmp lds xor and cmp rcrb test lea mov enter call xlat adc outsb hlt insb insb add test sub insb pop and inc adc es in pusha aas pop dec notb cld sub or adc pop mov cmovo fdivr or adcb mov lea lds js sub or mov and xchg inc inc pushf dec jo,pn sbb inc mov and add mov pusha cmp cmp mov push cmpsb sbb mov stos cmp pop in pop lret leave fldt xor cwtl mov xchg aam or or add out pop add ret dec inc test stos add adc pop and inc adc pop jmp push dec das cld adc lahf mov mov inc or orb sarb sbb dec out or fmuls lahf xor sub out mul pusha (bad) jb pop ror lds add test add or stos insl adc rcrb add cmp (bad) into ret (bad) cwtl cmp je je lahf cmp sub outsl (bad) pop scas add push adcb mov mov pop fsubl mov jb hlt add clc int3 sbb mov ds outsb mov mov mov call or mov psubq adc cwtl pop cmp and in mov push out lret or jo jp push adc in rolb mov jbe sbb adc dec push add mov xchg add jnp adcl mov mov add jle adc test dec xor mov imul mov sub cmp test jl fimull add mov out mov add mov mov test scas ja push outsb call pusha add inc rol rorb or lds sahf mov in xchg mov sub inc jb jno sbb adc pop mov or pop adc push add xor and dec addr16 mov rcll in push push xchg push mov jecxz call inc lods lret call xor inc movsb jle test xchg and or cmp test push pop shl (bad) outsl cmpsl mov rcrb dec pusha mov or adc adc insb loop icebp mov je addr16 es xchg repnz test adc jp sub add hlt cmp sar repnz xchg sbb outsl outsb sti and dec iret xchg (bad) mov into push imul inc shl mov cmc ljmp pop push push and into test xchg insl lea adc shrl nop mov js pusha sbb mov xchg bound or and pop inc jbe or in sbb pop leave nop xor in mov ret xchg or imul nop sub in xchg js mov sub (bad) outsb or cmp adc ficompl mov dec cmp xor and and aam mov sbb pop ret orb js add sahf push aaa add jecxz movsb or lock pop push dec std clc daa pusha fstpt dec add cmp jmp pop add (bad) or add iret addb mov sub push add aad sub jnp mov and stos loope and xchg rolb sub cmp sbbb adcb jmp dec adc dec dec fsubrl addr16 cmp lock rcrb lds call mov lods leave enter push pop lods fcomps stos pop add jbe or jge add mov inc cmpl int cwtl lods pop (bad) fsubs fisttpll mov mov mov add in mov adc xchg into pusha xor push andl mov std adc lahf fninit adc loopne lods xchg sbb cwtl mov mov fadd stos mov inc mov push inc cmp add inc pop pop and jae js dec outsb xor xchg shlb cmpsl mov movsl mov in cmp inc cwtl mov add fimul dec xor sub (bad) call pop sub add test mov in pop pop pusha cmp enter fwait and loopne pusha daa mov sub imul add stc or out dec xchg sub jo dec and pop mov dec roll sbb test out cwtl cwtl and add mov movsl add imul cmp inc mov mov or pop stos and mov lcall add scas imul cmpb add cwtl add ret and mov lret sub cld push pop lock sub dec mov adc jo aad les sbb adc push test jg mov and jo pop or cli mov xor sbb loopne push das mov add sub add (bad) mov int in stos xchg push aas add pop call scas push cmp (bad) adc jecxz hlt test adc testb das rorb mov pushf add test shrl jmp pop xchg mov add mov ror add mov sub pop out std pop or adc scas loopne cmp xchg jne mov andl jp add leave jecxz sbb add das inc test cmp nop inc shrl inc lds popa ret mov test adc xchg outsl cwtl cmp imul or and sbb push inc pop or lcall lds jl lahf sbb test jmp inc add jecxz lds dec mov push pop pop cmp (bad) mov sbb mov jp pop inc mov outsb mov xchg sub fs je or inc mov and dec test mov push add lahf xor dec hlt add in je sar popa mov cmp inc sbb test ja stos or push sbb enter cmp and enter push dec inc cwtl xchg push outsb sub ljmp mov dec xorb roll cmp outsl xor jp pop add fsubrl clc mov movl xchg sbb les fsub (bad) (bad) pop (bad) lock mov adc shr sbb jae dec jo and mov dec inc mov lods aaa test into push sbb nop rclb jo dec mov mov in out je mov mov xchg push pop stos and adc loopne cmp add rcr dec scas mov jmp add insb pop dec cmpsl cmp mov xor outsl adc (bad) xor and inc lock lds lahf sar add jne lods int3 insb inc icebp adc popl hlt cmovle add mov add xor cmp js add pop xor and cld test into sbb loopne cmp cwtl pusha dec pop mov add cltd push mov test in add lods ljmp scas adc add inc cmp lret add mov mov add sbb jo and jp or xchg data16 add cmp add add adc out call mov call cmp dec lret in pop jmp shlb out lcall gs movsb xor adc add dec lea pop mov sub inc mov rolb push loopne sub cmpsb and inc pop test test in mov cmp outsl xchg mov adc mov rorb or xchg mov pop sbb ljmp pop andps push inc xchg je nop dec jb lea cmp add (bad) mov xchg add push cmp dec imul mov bound fdivr ret hlt lret xor sbb inc lock inc or rcrb rolb js lds rcl mov (bad) int mov mov or push cld xor movups inc test insl mov xchg inc outsb jmp sbb pop lds xchg decb insb add sbb mov idivb imul inc std loop aam or adc mov loope dec sti xor mov cmp and push sub push sbb sarl mov mov adc sbb and fdivrl cmp rclb pusha enter add das or dec xor add cmpb add jp cwtl and adc and inc (bad) lock les sub dec or call adc jnp mov enter adc adc dec push add arpl stc (bad) xor push or imul jge sbb imul sarl dec in push add mov cmp and shld sahf add (bad) mov mov xchg sbb test jmp mov (bad) js shrb hlt push or or lds mov icebp mov xchg pop scas or dec loopne jmp movl test outsb sahf pop jnp bound pop sub daa inc mov movsb (bad) fs sub fldcw clc lcall popa imul pop mov lea xchg adc pop jl and lock lds jl sub dec push frstor and jmp sbb pop jo icebp sti sub js pop icebp dec shl fs add cld add mov call movsb cmp mov xchg (bad) cld pop punpckhwd sbb dec sub xchg push mov and xlat insb cmp fmuls fiadd push adc add cld unpckhps in dec insb cmp je hlt loope mov pop adc dec xor insb je (bad) in inc push or push outsb dec int3 push pop and inc xchg mov dec mov adc pop cmp call pushf movsb adc dec push mov int3 mov lock xchg add xchg scas pusha and pop nop mov clc push stos loopne loope gs xor dec outsb js cmp iret call mov fwait or sbb and push sbb mov out data16 into aas in test lods loopne mov or xlat test or std add and lods fistl pushf push icebp movsb and test mov sub or push icebp std rclb add inc push xchg jg nop xor pop stc shr sbb ficom in mov add and pop jnp jle mov scas jbe fwait add pop and push push sbb sub pop jns shrl mov divl mov jl mov ds pop xor pusha mov int and in jl xchg xchg shlb add xor subb daa push stos mov mov pop out lock pusha test or mov out in ret cltd jnp stos mov repz icebp jp add in test in push movsl xchg in sub dec xchg inc addr16 (bad) fidiv mov imul sub sahf (bad) mov stc nop ja cmpsb sub mov jno inc push mov sbb loop ret test xchg mov pushw sub mov inc outsb push repnz mov add icebp clc xor cs sbb or sub mov hlt outsl pop test and mov mov enter loope or test js adc sub sti add out sbb push or mov pop cld int inc push dec fistpl mov inc fcoms mov (bad) jno (bad) cmpsl mov popa int mul xchg pushf mov xor mov test cmp and fdivrs xor mov (bad) mov adc push lods add cmc imul enter aam adc lock ret sbb pop test (bad) int imulb push mov orb add jo add es add neg push jp inc jl addb or inc cmp push mov pop icebp mov bound xor insl and xchg add push shr add pusha push pusha push lods xchg roll aaa and adc sbb cwtl cmp daa pop push lret add stos ret mov sbb pop mov add add lods or in (bad) add pop mov pop fsubrl push mulb pushf popa aad xchg or movsb dec pushf dec xor pop push sahf ljmp je xor not arpl roll movsl leave faddl xchg add in push out mov and push lock sti adc int3 pop outsb add xor divb dec add push xchg cmp push lahf add mov out ficoml mov out xor (bad) adc sbb inc sub (bad) or xchg jle jae xchg adc icebp fiadd call stos xorb xor fs shl aam or push outsl mov (bad) pop pushf adc (bad) fucomi push xor jmp lret inc neg faddl and cmpsb roll in aaa lock fstps inc pop xlat or mov fcomps add xor movsl mov inc add inc sahf xor mov push adc and add mov mov xor dec icebp sbbb popf rorb fldl push add dec xor cmp dec adc loope (bad) jmp dec push jge fstps lds xor inc jns,pn ds lahf divl xchg push pop neg cltd es xchg cwtl mov cmpsb sbb inc sub ds xor pop ror cmp addb aas mov mov sbb xchg rclb loopne adc andb popa or cwtl dec mov jecxz sbbl push mov xorl fcoms pop pop cmp adc in xchg and push sub xchg or or rclb scas xor add dec shll fidiv jno lret mov push lahf negl ficoml pusha sahf stos outsl xor out adc sbb arpl (bad) mov pusha adc nop mov pop dec push pop add pop ja faddp shlb xor add in rcr call xor cmpsl shl mov arpl mov lret xchg lahf mov fildl das jg fnstenv aas popf sub stos cli (bad) pop adc fidiv or in mov sbb leave push pop add jo push or outsb nop sbb cmp jmp orl fadds push xor dec add cmp mov (bad) mov (bad) cmc cwtl pop push inc mov dec (bad) cmp cmc mov int3 adc inc sub inc push cmpsl xor cld push mov lock or adc push dec cmp imul aaa inc movl lods ljmp sub mov add inc out aam andb xchg jp add xor xor imul mov shlb into add pop leave mov sbb sub xor (bad) dec xchg jo cmpsb xor sahf or repnz jle adc ret adc xor sub add dec push dec aam (bad) jecxz das lds mov add and lcall add and jae inc repnz xor inc testl xor fcomp ret cmpsl aaa pop adc idivb xchg add and (bad) leave inc jo adc mov xor out mov push cltd nop scas and pop int3 sub push inc push lds call add ret cli xor ds and add shrl in in (bad) out add cmpsb add adc xor jns dec mov inc push cli push adc inc dec aam add push push dec cli push push mov mov xor sub and repz pop icebp sub and pop aas or mov (bad) or mov xor jge and sbb cmp xchg fnop lea int sbb scas imul and sbb clc mov (bad) out cmp xor push arpl aad insb push test xor add mov cmp popa xor sbb pop inc push insl add or pop push int3 jo cltd xorl lcall cmp lret fwait inc push out and sub fstpt pushl add sbb mov add hlt rclb sti inc sbb call inc adc dec mov test add and mov das add push fcoml mov insl push jl les add nop pop push stos sbb loope fnsave pop mov scas sbb cmp mov int3 test jnp clc push mov adc pushf add out pop push popf cmp test xor xchg sbbb les add (bad) int3 lea rclb xor repz push int3 or fstl jg lds push in push out test scas add rclb xor pop mov xchg pusha enter xor test test (bad) (bad) push xlat adc scas test stos inc dec inc push lods lock and imul push loopne (bad) icebp xor add dec xchg loopne cmpsl push xor push dec pop (bad) lods (bad) mov int jo (bad) cmp movsb test mov and fs dec out test cmc shr mov pop (bad) mov pushf sbb jae inc sbb and pop add pushf ljmp push nop sub jb dec inc add sbb stos lret jo test mov aas les push loop je rol lock adcl cld mov mov xor jl fsubl push jo sbb inc cwtl icebp pushf xor shrb les or mov pop and imul pop xor inc fsubrl mov sbb sbb xor (bad) repnz mov jge daa pop adc pusha mov sbb das in sbb inc sarl call add imul pop jmp mov (bad) les aas inc mov adc cmpsb (bad) jb adc sbb jbe mov mov inc and inc xor push je mov add sub lock loopne hlt push inc cmp cmp xor nop mov pop dec lret add cmp xor xchg or or sbb dec into out out or adc or xor cmp loope sub orb mov aam repz jmp sar fcmove lcall mov xor dec ss add (bad) mov lahf mov xchg rorb or sub push pop andb pusha hlt push adc pop (bad) add dec push push pop cmpsl test cmp jb in std cmp sbb xor cmp bound xor rorl adc popa dec mov mov (bad) aam push fimul mov mov aad pushf xchg shlb sbb jg ret stos (bad) rcrl xor cld mov pushf mov or (bad) popa sbb pop cs lods inc inc aas pop lock adc sub mov pushl push push data16 pop rclb mov (bad) mov dec notb enter inc repnz clc xchg add mov pop xchg rolb jl sbb xor (bad) int3 dec xchg inc fiadd gs je test mov xor pop add daa cmp push imul addl add lcall inc repnz loope fidiv add repz push stos sahf push pop lds sub ret rcl mov test ret ret add fimull loope pop hlt (bad) popf test inc xchg pusha pushf mov add mov cli push dec inc call les addr16 adc insb unpckhps icebp push xchg js stc mov xchg mov pop aam rorl int3 xor cmp call mov adc int3 jo sbb add aam icebp and push jl sbbb adc fs push cltd nop xor adcb iret pushf sub add push push fldt add xchg aas xor stos sbb inc adc fiadd out and mov mov mov arpl ret xor adc iret jo jp enter cmp pop dec push mov xorps cmp insb jg shll add push into add jbe fnsave std xlat lret test insb adc sbb test or xchg dec lea xchg inc dec inc pop or xor rcl popf loope sub add cmpsl mov pop add inc hlt mov pop adc jl call aad pop sub jae add call jns add dec xor sub inc sbb ljmp js leave lret clc adc insl add dec cltd pop and add and jge add pop xchg js mov mov mov ja (bad) out nop push xor mov cwtl pop mov or mov pop add (bad) arpl and jbe popf adc mov dec jg push pop mov int3 xor and loopne loop outsb add mov inc push push xor (bad) mov hlt sar push sbb add (bad) and sub mov inc inc in push ss xchg or adc sbb mov lock dec imul mov jnp or push mov fcomp lahf push mov dec xor push adc iret in cmp and inc mov sub push faddl xchg les int in inc mov mov xchg xor in jge mov xor add out lret xor icebp or pop push call push pusha dec les scas lcall mov dec cwtl js inc popa mov xchg mov jl dec fs mov lock inc add fild popf int3 rcrb pop adc rorl es sbb or sub cmp lods sbb inc jo cwtl mov fldlg2 add jp je jg inc scas inc ja dec call inc popa aaa dec nop (bad) (bad) repz imul pop fdivl mov or add cmp je adc fadds sti cmc (bad) xchg fstpt (bad) fcomps mov je jmp subb in mov movsl add fsub fdivs lret jo cwtl push xor shrl icebp inc adc mov adc jle push inc lods sub gs mov js inc inc mov push mov pusha cmp inc jbe sbb mov and push stc popa nop enter fdivrs add lods mov popa fcomps hlt lock rorb jb sub out cmp sahf or mov xor add and and mov sbb jns dec (bad) push or leave aas xor movsbl sbbl mov fwait xor loopne lock dec sbb mov push inc dec testb pop insl jae aaa mov xor pusha pop sub adc xor adc fcoml pop pop xlat test rclb iret insb dec push xchg nop lods push pop jo jecxz jae inc mov (bad) mov or cmpsl add outsl or mov jecxz out add (bad) rcr pushf cwtl into xor sbb pop pop sub inc pop pop jb sbb or mov and jae pop add pop loop push xchg jmp cmpsb sbb adc push mov jl or std push inc fcomps jne xor ds popa les mov inc jl push cmp mov sub mov or sbb or sub sbbb cmc jl pop enter hlt mov mov add les inc test movsb cmp in and mov mov movsl lods repnz popl shrb lds lret mov pop lahf fdivrs mov sub push in or sbb dec dec mov and mov sbb cld lock sbb inc loopne ss dec mov or push xorl pop and xchg cli cmp xor test lds into mov int3 ss adc mov cmp clc clc es outsb jge mov iret or xor add add icebp test jnp mov sbb mull sub lock sbb push sbb inc mov shlb stc xchg sub mov mov movsl adc and jbe add jl int3 add pop pop std and xor adc arpl loop fsubrl xchg mov inc add pop inc cmp push insl arpl sub cmp addl sub jecxz cs jo cmp mov sbb inc in cwtl add out sbb mov lret jmp inc push xlat in cld mov pop sbb out es outsb cmp cmp fwait movl cmp or hlt loope and mov pushf fwait dec icebp ja lods enter jl int sbb sbb into mov setbe xchg pop pushf add stos fcomip sbb pusha stos loope mov out or add xchg adc xchg repz push inc stos pop cs fld sahf fdivp push push sar in xchg inc hlt push mov adc or mov mov pusha jo insl fistpll or cmp mov repz sub or adc xchg mov adc sub mov test lods push mov das jno fcompl mov cmp jecxz mov cmp pushf loope and cld popa add lret xchg ljmp sbb push sbb fldl dec in or cmp cld andl push mov mov add cltd mov xchg js rcr inc test sahf add mov push pusha jle and hlt add (bad) add icebp mov xchg clc int dec sub adc mov pop test push inc scas add repnz xchg jnp adc jecxz sbb sub rcrl xchg jl add xchg or sub popf jo add lods mov pop testb mov and pop pcmpgtd ss sbb or sbb mov mov pop out push xor sbb (bad) mov xor cmp cwtl ss mov push insb xor mov jecxz out add xchg add xchg fisttpll pop fsubrl jg push dec pop add mov (bad) mov sbbl ret or in clc or or in sbb adc aas mov jge (bad) lock mov inc pop dec xchg push (bad) arpl mov jmp in sub dec call ja pop mov loopne daa clc xor mov jb jns jno adc lret cld addb xchg pop mov popa jns es loope cmpsl hlt bound shrl call push adc pop (bad) sbb inc lock add arpl sub xchg fadds push in jb stc fdivs std and orb aam dec test popa add add pop pop adc fiaddl les stos xchg jecxz jge push sub loopne nop (bad) push ljmp or inc js inc scas loopne std pop and and mov arpl iret cwtl cwtl movsb mov pop sar add add nop sbb and mov xor icebp jecxz adc cmp mov add daa rep add sub shl fcmovnbe pop cmp cs sub add cmp dec cmp xchg aam fwait xor bound mov push mov mov ror aas ja and pop and xor cmp iret js xor int scas adc xor rorb fs pop cmp fldl ja lods lret add sbb mov pop or out push (bad) mov add cmp pop mov jecxz rclb cmp xchg mov or mov lsl cmpsl adc sbb fs or xor jb es mov mov xchg incb aaa jp outsl cmp xor inc sbb rcll sub test jo adc lock mov outsb or pushf pop ss jecxz cli lods inc and pop loope das sbb add scas dec push jle jbe or sub xchg and adc push rorb fidivl in mov pop data16 push lods xchg add add push and notl cmpsb xor and insb sbbl imul sbb mov sbb pop outsl xor push imul ja arpl and scas lock cltd add inc add inc loopne ljmp roll jl inc call jne pop push cmpsb clc ds sbb inc cmp (bad) xlat test add xchg push push fcoml push loopne mov addb int rolb mov cltd sarb mov lock clts and lcall les fwait add or fldt pop push lock fiaddl icebp and cmp add cwtl xor xor (bad) jne aam lods lock xchg and in scas nop or add add mov sbb movsl add movsl das les sub cmp cld dec rorb push add dec cmpsl cld push pop cmp pop fadd xor xor or imul js stc pop dec mov and mov add out mov xchg xchg xor addb movl mov pop and test xchg mov cmp repz cli in mov test and fstps push stos movsl sub xor add popf test adc lds sub ds sub int3 and lcall adc gs aaa jle jge add addr16 sbb adcb add leave test sub pushf sbbb xor adc es dec pop sub out cli xchg cmpsl in (bad) icebp lret (bad) icebp adc lea loopne inc mov out cwtl pop loope pop and add sub sahf js fs call inc sbb jne pusha mov jb gs fwait dec mov add cld fildll shrb inc test lock ja test movsl jb jecxz scas mov ljmp and popf cs nop fs or jns sub (bad) sbb and mov pop movsb rcr xor or data16 lahf ds divl and fildll and aad add dec lods jp call push or int or enter and sahf add int3 pop push lock dec add roll xor and movsb mov in sub or add int cld loope add lret mov mov arpl dec add rol sub sbb cmpsl int3 loopne xchg (bad) sub imul xchg or scas and leave and sbb pop into sbbl sbb out in and pushf mov dec andl push adcl pop adcb sub or les jle je,pn add xchg add popa xorl shl addr16 add mov clc add pop mov addr16 fbld leave fs sahf sbb cwtl sub xchg fist inc rol cmp push mov xor mov jno or inc or jbe and xor cmc nop sbb add idivl or pop sbb push int lahf aam mov add aaa cli add (bad) enter mov sbb insb int3 es or add imul mov jp jmp lods xor loopne test hlt jecxz adc fmuls (bad) mov (bad) sub mov add and mov mov add inc add sbb in xor aas add add stc xchg add loopne inc test add inc outsl ret jge sbb mov arpl aas lods test movsb xchg addb mov mov mov pop mov xchg sub sub inc pop adc enter cld adc nop shrb inc in jl fild add pop lret and jbe negb jno add adc pop (bad) xor jnp add hlt js add cmp inc xorl jl nop les add mov jge lds pusha and inc dec cmpl andb push cmp fildl pop out xorb rolb shll jmp fisubl sti insl adc les mov xchg cld out add mov es inc mov icebp faddl cmpsl xchg or pusha popf xchg sub hlt xor or lock es mov xor stos mov add jecxz popa push enter test test loop sbb cltd add std enter add inc ljmp add loope jp adc test pop mov pusha and arpl xchg je dec lahf pushf daa imul jns test sarl inc push (bad) cmp bound aad add les push pop and inc fmull sti and (bad) dec sub fsub lock pop dec sub add or movb roll add idivb mov cmp fcomps pop pop pop xchg test call add cmc push sub mull jecxz insb popf arpl test in js testl and insl lcall add push je adc sub inc cwtl cmpsl mov pop xor mov imul loop imul shr test lcall push (bad) std adc dec inc (bad) ja in xchg add or lock stos mov add sub faddp loop pop fist add jmp stos xchg mov test ljmp add push add adc addl add sti add xchg aas shrb test xor add xchg jbe scas loopne aas dec shl pop and in adc dec stos roll mov pusha dec and adc cmc mov (bad) pop push sub (bad) leave mov sbb adc (bad) sbb add dec dec add jbe lods mov xor loopne mov fisttpl jp,pt xorb (bad) bound inc add sub inc addr16 cmp and popa inc dec add dec xchg add mov inc push pop iret popl addb arpl add (bad) int push enter inc addr16 mov sbb cmp rcl add mov mov sub xor imul (bad) (bad) jmp mov xchg sarb add fldl testl stos cli das sub movsb add cmp push xor sbb sub mov pslld popa pushf xchg pop sub push outsl push mov and sub in adcb addb pop add jo pop adc jmp push cltd out ljmp dec jecxz test dec mov xchg jecxz rolb out or jle and and or adc int or add xchg adc sbb add int lods mov mov dec add or mov xor sub insb mov sbb and vminss inc test outsb (bad) mov ljmp cmp xor mov fdivrs push cmpb leave jae rcll repz test inc movsb xchg mov xchg jge repz es mov mov mov mov pop push cmpl and (bad) mov adc lret jecxz pop sub (bad) cs pop test dec and ficoml stos mov ret psubusw aaa mov mov clc stc mov adc test (bad) sbb test out xor add rcll dec sub add push dec jp adc add shl imul nop or mov mov add jno mov and jnp mov aam and adcb arpl mov loopne imul lret movsb sub adcl inc jmp aad mov test stos cwtl jecxz loopne fsubrl add iret int3 pushf and add pop adc jbe pop insb repnz mov lods lock mov add and bound or xchg or jo test pop sbb add jb sub push rclb (bad) lds lahf xchg ret shl inc mov out inc pop pushf fiaddl repnz inc test sbb xchg ss inc inc ret out jbe cli into xor dec or cs orb sbb adc pop jnp or sbb jbe fmuls clc sbb rcrb jg cmc js and clc lahf sub sarb push pop xor out mov arpl roll or sbb dec or les push fimul fcoms mov test loope lods jo out jno sbb jle jnp add add (bad) mov mov jne add mov mulb xor add mov cli dec xor mov ret xchg cmp pop add (bad) ja bound lret loope xorb sbb mov jp add push and push lcall add iret pop repnz add aam mov add add test mov popa lods and test call cmc lds xchg xor fcomip push sbb mov stc loopne and rorb rol addl xadd movsl sbb js and fidivl outsb mov add dec pusha test dec ret mov (bad) pop add leave add negl inc mov mov ds shr push lret pusha fldt popa fist call push or fwait std sbbb ror popf mov mov or call xor xor (bad) hlt sbb adc (bad) mov add repz push mov jae in insb pop mov jge push jl or or cmp adc xchg or (bad) mov cmc aam xchg lods cmp pop xchg test mov pushf enter sub in rorl jecxz outsl out push adc adc arpl int add and in popf aaa xchg fbstp adc cmp or movsl cmp add and add add divb in jecxz sti sub pop mov ret mov jmp mov add dec nop addb dec stc in or xchg mov lock scas fldt xor or pusha adc jo adc xor lds out (bad) push mov mov cmpsl inc js mov lahf jge je sbb jle adc jmp enter adc call (bad) push add pushf add and xor dec nop or jge in daa pop inc hlt ret lcall dec lods push xor inc loopne jge test add cmpsl pop iret mov add rcll lcall xchg (bad) jnp int inc pusha and jl nop mov adc inc es inc or cmp jge mov adc or sub popa xor xor jge dec ret sub add lret pop mov movsl jl cmp in lret scas push jmp mov scas test mov movsl adc adc or and push xorb pop in pushf out dec aam cmp push int3 test loopne arpl inc fs push push mov xchg popf mov and int inc and rclb add jle push test mov ret aaa out xor andb xor es and add jle add clc bound scas mov xchg jecxz push cltd mov adc or repnz nop inc int test out cmp fadd outsb adc cmp inc pop nop je imul fwait push int3 inc divb bound adc dec sub ss jle or sbb daa sub rorb pop pop add xchg sbb pop pop push mov int or addr16 push repz add int3 add xchg push and and add lret sbb cmc pop mov pop movsl xor gs lds leave (bad) lea sarl loopne in adc pop into popf out mov sbb (bad) sub movsb mov daa rolb xchg or je subl mov int3 add mov daa inc dec fwait movsb adc lock call or comiss lods and push shlb lock (bad) mov popa insb hlt and pusha xchg leave popf adc push dec xchg xchg and aas addb iret aaa mov dec out xchg add ficomp (bad) into pop add stc sbb popf sub mov add je mov push or or adcl mov (bad) aaa in test cmp shr adc iret mov and adc test jae icebp movl push testl ret repz popf (bad) jno or xchg dec jno add stc dec scas bound mov inc call aam adc lcall js je inc inc cmp cmp mov sbb xchg clc add jno xorb test xor sbb mov pop movsb and lahf lcall jnp rclb gs pop add (bad) inc fild mov int and mov xlat jae andl out add pop test scas jl cwtl mulb cli cld adc push rorb rorl in jecxz mov enter into inc call mov jl xor mov lret xchg les jo fmull pop pop lret ror loope add push push les mov pusha mov test lods (bad) repz lods mov rorb xorl xor or int rorb add jno add gs ljmp inc pusha insl inc je add pop sub or ficomp (bad) and pop es pushf in add test in cmpsb pop sarb cwtl sbb cmp shrb sub call jne call out push and mov and aam std lock into xor pop cltd add sbb pop mov inc pop ljmp cmp or sub pop cmpsb ljmp mov adc and jl lcall movsb jnp and bound cld in sbb xor sbbl push gs movsl lea mov inc ficoml and divb add pop mov mov xor sbbb test jae adc fs nop cmp insb add inc out mov push popf lret out inc stc mov dec jl pop je repz dec enter mov rolb divb xchg lock (bad) push in int3 pop jge push sub enter fcoms cltd sub je add (bad) adc cmpsb dec inc jnp mov inc sbb cmp cmp mov iret add jbe dec sbb push mov or mov ret rol jecxz jecxz jecxz jecxz jecxz pusha adc into or mov int cmp lock xchg lods mov sbb rol in adc cmp lea lahf rorl dec or push popf movsb sub out inc cmpsl pop mov inc pop in js fstpt ret ret es cmpsl and jno clc cmp inc push push jmp dec sbb inc lahf je inc sub stc jbe cmc dec push mov test sbb mov ffree cmp add dec inc and pushf inc scas dec xchg idivl jno sbb dec pusha ss push fwait mov mov test js aad call testl pusha push outsl push xchg sbb cmp rcll xchg lret and inc add gs xchg or or mov popa add fs add adc xchg sar adc mov insl cmp adc out dec inc clc (bad) jno lock add test xor mov out and out add out or loopew in ds sbb add pop dec jl cmp push setno rorb xor mov pop xchg push roll cmp mov mov inc pusha scas inc rorb pusha or jne test inc aam add out (bad) jp xor push push clc fs xchg add out dec (bad) cwtl and sbb or dec int3 adc cs popf xor cmp lahf cmc adc mov cmp push shr add fdivrl nop (bad) data16 cmpsb push jle add add or push fsubs and xchg xchg int faddl jmp mov pusha dec cmp cwtl lods inc push clc aam scas cmp sbb inc cmp icebp dec test adc push xor add test inc cltd xor push ret test outsl (bad) mov jg xchg mov (bad) mov or out (bad) lock les push bound or (bad) cmp mov cld jle mov rcll sbb mov or je push scas or push int3 add faddl push into pop xor add mov lret pusha mov rclb subb cmpl xor xchg aam out xor lods cwtl pop mov sbb rolb call movsb pop cld inc pop and jnp faddl jmp cmpb jp call (bad) cmp mov inc xor push fs stos js gs or call pop sub sub inc enter rorb dec scas mov out add lods hlt dec fwait ja int bound add shll dec or pop addr16 mov andb cmp imul outsb into in mov adcb add in jg sbb adc adc add dec sahf cmpsb in pop cmpsl adc mov (bad) xchg cltd mov mov rorl pop push sub fadd sbb fadds addr16 inc imul (bad) cmp insb inc push jmp inc push mov pop (bad) jp decl hlt (bad) cmc add rcrb aad and mov sub mov sbbb clc pop aam cwtl paddusb xchg js int popf gs dec xlat xchg insb inc add ret inc inc enter aad cmp pop into cmp xor mov xorl inc xchg xchg insb mov adcl push pop pop lods adc xor test push mov mov sbb in jge cmpsl mov rolb fwait js xchg sbb cwtl xor sahf mov hlt adc test aad push mov clc rclb mov and insl movsb and icebp (bad) cld sbb or adc sub fcoms and and fwait popf mov add lds add imul int or xor clc mov into clc imul sbb sub or loop es cmp sub mov and jl pop cmc pop xchg dec adc push mov xor lds pop inc stos or bound (bad) xor gs jne stos add inc adc push mov and push scas (bad) cmc cmp pop bound pop xchg fs or ja int3 loopne or enter adcl push int jne ror incb in stos add repnz les xchg aam rclb pushf repz sub or rolb mov adc fbstp jne add push push adc pushf fcompl mov dec xchg movb mov loopne or outsb sbb jle add int jnp adc pushf pop mov or sbb cmpsl fsubr pop sub sbb roll (bad) add or add jmp jne loop pop xor lcall dec fs xor js into pop pop (bad) popa dec imul (bad) ret dec repz sbb push mov and jge pop add es repnz mov fcmovb sarb mov hlt add sbb test roll sub xchg sub add xchg (bad) or leave sbb add sbb pop pop xchg call ror or mov stc xchg dec ds mov sbb dec push jo push out fs add sub int daa into loope cmpl jl in lock js and rcll test test mov pushl add movb jmp cwtl rcll sar or clc lahf push enter and dec xorb sub pop jne hlt lods (bad) lock push ret jae icebp and out and xchg or fidivr mov les ds jo ret or inc test dec arpl and in dec pushf cli sub clc mov or push add push adc add dec js lods jno sub mov sbb dec fdivrs push fucom (bad) adc xlat or out push mov sub pop scas (bad) das pop push iret mov add (bad) or iret jmp lcall push loope add cmp push pop mov cmp imul add adc mov and scas sbb repnz cmp add sub add aam pop adc fadds cli int imul pop outsl fidivr iret aaa icebp and adc out push pop sar jmp and mov imul mov lock movaps insl cli loopne movsl mov loopne dec or push xchg fnop sbb mulb ficompl sbb push push sub mov xchg fisttp sbb mov jp leave xchg and aad xchg add movsb inc xchg outsb xchg mov in mov stos jb and out sbb mov stos sub int3 imull dec sbb mov imul insl sub xor adc scas or scas stc iret add repz cmp mov or xor dec hlt pop sbb jns mov xchg adc imul and (bad) negl iret ds adc rolb push sub mov das mov cmp loope arpl dec lods push or subl fmul pop xchg in shrb aas aam dec sahf nop and push imul or mov adc mov test sbb add and shl (bad) aaa add insb fldcw rcr xchg cmp push sub cmp fwait mov add scas push test icebp adc add pusha mov sbbb push js cwtl xor imul fstpt fimul andl dec sub stos add pop adc add push xchg (bad) rcrb xchg xchg popa add xchg sbb clc push xor jbe in addr16 mov lods cmpsl cmc sbb fsub or sub adc imul aas aaa push cmp rclb xchg or das sub mov aam daa dec mov cwtl mov add mov and cwtl add imul mov or mov mov dec pop xor xchg sahf sti dec shll imul or or and aam push test and jg loope adc dec inc movsb inc xor mov push and xor sbb or jo xor and movsb and pop mov mov repnz in ljmp adc cmp dec mov add in and dec cmpsl or dec mov xor mov cmp mull test iret aam or xchg subb and inc inc add xchg lds cwtl jne cmpl or cmpsl dec cwtl imul mov jmp dec (bad) shrl inc test cmp lods pop ljmp inc mov cmp testl cmp sub push in or cmp or dec fbstp pusha sbb es or inc loop jae out push push jecxz mov and cltd clc inc or repz andl or into insl fistl popf data16 sbb mov or clc add cmpsb xor mov movsb jecxz lea inc xchg cs xchg scas arpl jle xor adc jo arpl sub mov int mov int3 or into mov adc pop mov aas add cmp and inc (bad) je mov add add mov stos and dec cwtl sbb or das xchg sbb or bound push add and scas sets out loope cs (bad) clc (bad) clc or call and push push xor add xor shrb add cmp and repz loop fsubrl call (bad) mov loopne add test or xchg add enter sbb into aaa or sahf dec or mov sbb mov adc xchg add xchg xchg pop adc into cmc or data16 push lods call lret out add xchg push adc mov idivb leave ljmp push fstps es or sbb mov push fbld repnz mov mov jae and rcll add and cmpsb or jns cmp adc les dec adcb int sti xor xchg into or cmp out push or inc and fimul or inc js aam add cltd (bad) mov or pushf inc push push orb push cmpsb loopne or jp,pn test stos or xchg dec das scas cmp pop stos loopne (bad) xlat sub xchg inc dec repnz or dec lock in sbb lcall jnp xorb xchg sbb cmpsl in decl adc inc arpl pushf pop cvttps2pi adc mov test outsb adc jo repz adc push pop xor xchg out cwtl lds or lea pop cs push in or xchg dec xor adc push clc mov cmp jmp cmpsb mov lds or cmp jg dec fcoml scas xor or jg insb sub jns inc mov sub push adc xor sbb xor sub and int3 js or inc mov fs mov push fisttpl xor or into push adc mov add lods (bad) adc sub push sbb arpl cmp xchg js (bad) lcall mov and xor pop aaa into and sub nop mov inc xchg sbb dec mov or pusha stc and or sbb cmp out outsb shll push pop jns jl inc in scas xor inc push nop or cs add and mov sub dec sbb dec lret sbb scas iret adc std test movsb leave or es or outsb cltd loopne lret lods xchg imul sbb adc dec jmp mov sbb out scas in sub or pop popl (bad) xchg xchg js dec pusha cmp cmp mov leave inc loop xor lcall sbb cmpsb xor lcall sbb into add dec clc mov out xor out subb lcall or lahf push mov or adc xor sub mov dec push arpl mov sbb mov mov outsb orl sbb cmp add leave movsb popf cmp sub add orb jl xor imulb fwait movsb or and gs mov adc (bad) push sub inc adc jbe pop hlt or jg mov adc xchg test fldcw js orl sub pop loop out dec mov je cmpl and sbb cmove jo or inc iret dec xor cmpxchg xor sbb int3 adc jo and mov mov adc or es stos or sahf arpl call mov fsub push push sbb cld inc out mov popf rorl sub push stc aam repnz dec hlt xor xchg rcrb loop pop xchg je mov or and stos push and adc mov inc xchg bswap je ss les mov in xor or cld sbb and and scas xlat pop push inc test rcrl les mov and dec lock inc lcall mov or fiadd sbb out xor in (bad) and adc jno mov icebp xorb inc repnz sub fmull cs jb (bad) dec pop bound fcoml test into lret inc mov fs and inc sbbb xchg fsubl rcrb cmc lock pop arpl pusha test push and out cld or stos loop mov outsb xor add push or mov cld mov or in push call or fnstenv inc mov scas (bad) jmp outsb and in and push inc subl or mov adc push mov sub fs out in mov js (bad) jo or and dec insb push and add or aam inc dec pop (bad) movsb or and data16 mov mov test adc cmp insb and and xchg inc mov mov mov je icebp sahf imul int3 mov movsb cmp aaa cmp or cli dec xor mov or orl or fsubrl decl add nop and stos clc xchg stc add into movl ja sbb xor or (bad) sub call sub add inc rcll mov mov push mov notb adc cs pop lcall js movsl sbb xor mov dec and or add dec pop movsb dec jb fs push xchg cmpsb or or repnz add add lea dec mov push mov jmp lods and call push cmc mov scas adc lds dec or sub sub push dec mov or xor outsb lds xor push bnd inc (bad) dec les mov xchg fdivl cmp mov fsub inc inc or mov cmp cwtl js xchg in push es cwtl cltd movsb pusha rcll shll add mov xchg or inc pop jecxz enter fs adc pop repz mov rcrl dec dec or and push fiaddl les or adc mov into xor adc xchg inc dec push mov mov rcr sbb mov lods addb xchg mov adc sbb inc scas cld xor cwtl fwait lret mov into add call (bad) xor lock xor or pop push movsl je and pop mov mov fidivrl cwtl xor sbb mov xor insb add xor scas lods and addr16 mov fdivr repz sub or pusha lock add add aas sbb jae mov push pusha leave nop and pop inc loop je int3 xor pop dec jbe imul loope pop push inc or loopne jns or cmpsb pop aad shrb call (bad) mov sub sahf xchg nop adc adc imul insb js pop je and out mov xor push mov outsb xchg cltd and dec mov sbb jo ljmp mov mov or adc cmp pmaxsw lcall and push add outsb and inc insl dec fs jb cs adc into mov out mov scas fiadd dec mov iret adc cmp movsl aas or or (bad) jae sbb xchg mov rolb inc (bad) xor mov sub dec dec cltd dec pusha psrld lock ret or xchg and pop lock and add in imul mov out lcall or and in movsb jp lcall mov or outsb mov icebp dec ja hlt add leave repnz sarb les ss fsubrl loopne push rorb dec cmp or and push and mov mulb lock movsb pusha mov repz pushf stc or cs out sbb leave or icebp je mov jno or cwtl sbb loope sti js xor es jo lock mov fistpll gs test pop sbb xor outsb (bad) subl movsb frstor sub daa or cld (bad) xor add dec mov sbb call push cmp and rcll xor les fidivr push nop loop,pt movsb xchg out dec jmp dec fdivl push add cmp and rol outsb cli sbb out mov shll pop adc dec clc dec jl (bad) xor mov or (bad) mov inc inc xlat or inc stc outsb and or pop fisttpll out adc adc mov mov sub and add fs or add jo mov xchg pushf or or dec add jge sbb (bad) inc xor and add pop mov add pop lock push les dec sub inc lods fs or fisubl lds bound push xchg lock inc outsb and mov sbb mov xchg out pop pushf popa or cs popa sbb test sbb into push or mov sbb sbb lods xor mov stos pop pop or rclb cs or add adc dec pop sbb and mov sub mov insb mov dec test test nop aaa bound xchg sbb test cmp scas mov int3 sub or loopne inc fsubs or push mov outsb inc or shrb mov jl sbbl xor outsb nop or dec scas or fisttpll xchg mov jo outsb cs mul inc cmp pushf adc adc mov inc sbb arpl js fbstp enter daa add pop sub inc or (bad) adc jne rolb xchg or lret subl xchg and or jg dec sbb inc jmp in fdivl xor inc sub pop sbb xor fisub dec push lds pop jmp or in inc mov cmc add pusha dec jb mov frstor sbb push inc sbb into je (bad) (bad) cmp clc call hlt or (bad) mov bound sbb sbb pop jge (bad) in adc lcall and (bad) hlt insb dec push stos sub into add and gs andl xchg dec adc scas or xchg or mov into or sbb push xor mov mov inc nop and inc sbb outsb mov adc inc fsubrs mov ja adc les out xor mov jns or dec (bad) or push sbb out or jle loope mov into cmp sbb pusha scas xchg or sbb into ret adc xchg pop inc mov lods orb les sti dec or or ret sub or push pop xchg or or (bad) adc aad sub xchg or xor sbb push mov lock adc into or and scas fs sbb or shrl inc loopne inc adc dec jmp push mov mov sti adc mov ret mov xor adc adc repz xchg loope mov add in or daa movsb das inc test loopne leave mov dec or int3 or mov cmpsl or pop xor and fsubs data16 sub or mov and enter push xor mov arpl or jne pusha arpl sbb adc and nop and mov dec or and xchg fs test cs adc pop dec adcb jge mov mov mov loopne xor daa mov mov scas add push xor jmp xor cltd push les add or or sbb or cmc int3 cmp push dec clc mov dec adc jecxz mov adc push and lock xlat cwtl inc outsl sub pushf (bad) (bad) fcoml and push nop daa and pop mov fwait cmp loop jle fdivr and cmp jmp das sub dec movsl pushf popf mov jmp push lds data16 adc inc sbb mov daa into mov cmp xchg and xor mov sbb inc cmpsb add lods xor or push jb push sbbl xchg pop lret xchg xchg loop sarl jmp cmp mov and push ljmp pop in bound into int3 lock test je push aas mov clc xchg dec lcall lss es and sbb out xchg aas mov xor xchg pop stos pop nop dec fldl jecxz dec js and ja and adc movsb adc je push or and nop out xor mov aas or das add and mov sbb dec outsb adc cltd jns sbb lahf or mov mov ret lock cmpsb adc mov movsb out adc (bad) mov and clc push adc into or sub in adc adc xchg push faddl sbb or push js mov int3 mov push arpl jp dec dec bound pop fistl shll sti nop cs popf test (bad) sbb sub xor out (bad) sub js pop inc adc sahf cmp mov daa xor shl push subl loope push in push clc cwtl dec icebp fcoml or lods add adc clc adc test sbb lock xor aas mov ret jle pop mov cmp lods cmp rorb mov outsb xor ret hlt pop or out cmpsl jo push or mov cmp dec pop cmp int enter into movsb call ja jmp pop sbb in andl aaa lock adc cs xor or cmpsb in add pusha sub or scas outsb mov adc or sub jle mov ret mov adc or lret mov rorl sub rorb adc add xchg dec cld dec pop mov or or lahf test mov push xchg push adc sub push stos andb sub push clc and xor lods add mov cmp lret add or insb call sub add loopne jb or mov outsb add inc popf sbb cmp mov sub adc mov sbb aas add mov cmpsl inc cmp mov or and and cmp inc dec pop or mov js add inc mov mov mov adc mov or dec (bad) les scas push inc push and and and mov dec leave pop shlb xor add push mov push rol clc sbb shrb inc inc sbb mov daa inc mov mov fisubrl mov push das adc or sbb fmul mov push add adc xor sub push or jo mov push add (bad) push (bad) enter js dec arpl and or and adc out in sbb xchg sub ret movsl aam dec hlt mov into fs adc mov or jge add or xor dec loopne loopne int3 ljmp cmpsl in addl cmp xor (bad) nop hlt daa into test xlat fdivrs mov insb enter push xor push shll pop lcall fidivr mov arpl pop cmc fwait jmp mov loope xor adc adc les jmp imul inc clc push dec or dec addb (bad) mov push (bad) into nop xchg mov hlt or (bad) (bad) out xor mov jns rdmsr sbb leave xchg adc daa cld rorb xor fdivrl dec and push js fisubr sbb or cwtl loopne cmp ror xchg sub hlt mull xor inc inc cmp add ret clc mov sub pop leave les cwtl cmpsl lock les dec fidivrl popa jnp jbe hlt pop cld pop in push sub push (bad) xchg add xor arpl or aaa mov pop shlb adc mov out mov lods std (bad) fmul das adc mov aam or or out andl test daa out and testl addr16 rolb scas sub ds mov into xor lcall xchg bound stos push xchg or mov test dec loop dec dec jmp mov jo inc jbe js sbb adc test and (bad) shrb or pop cltd rcll or cmp mov shrb test cmp mov xchg add imul mov mov and into fstpt sbb inc push loopne push lock or push (bad) jbe arpl cltd ret clc pusha popa and outsb xchg pushf bound and dec loop daa sti popa insb (bad) or mov jl (bad) (bad) hlt scas adc cmp mov pop (bad) lret imul jl xorl scas cmc xchg cmp or ja dec test clc and daa or sub loop xor in int3 and dec add cmp jl dec sub hlt pop or or mov adc xor dec fmul mov scas insl dec dec pop mov push jae mov jne xor bound push lea scas xchg add xchg add ret xor lds mov xchg push xorl fiaddl fsubrs or aaa int3 or mov movsl js bound dec xchg add popl into xchg and cltd fs sub bound or add xor pop (bad) (bad) sbb mov nop or js or push or dec sbb fstpt cld loopne out inc lret cs sbb test js mov or dec or or fdivrl test add aad dec std test and sbb test jg out notb in adc sbb outsb inc subb enter push jecxz scas loopne in int or aas inc (bad) inc jne dec jb xor inc dec fadd sbb sub into arpl or std or orb or les outsl inc or xor xchg sbb dec xor sbb cmp dec dec cs enter xor repnz mov xor mov xchg or js push cmp cs mov xor sbb mov lret (bad) inc mov pushf loopne imul outsl or dec arpl seta mov dec loope or or inc test or inc mov mov or into pop imul add inc dec xor pop les repnz or pop adc (bad) inc jo and lcall add insl cltd add dec outsl cltd je (bad) mov cs or inc les sarb xchg xchg int3 fisttp or xchg inc imul or cmc nop sub je scas or add add push stc adc dec and int3 cmp int or loope movsb rcr or test ret or lds cmp notl sub or pop adc add inc add mov int3 cmp push test mov adc outsb sarb sbb push inc push dec lret lods mov or mov cltd cmp and adc mov ret pop adc mov fildl loop add rcll and mov or cmpsb cmpsl mov inc outsb movsb add add push lock stc jle lcall or sbb int3 or inc sbb icebp std nop xor dec xchg push sahf enter repnz cltd jno subl fs add lret scas mov mov and xor ljmp xor or pop adc xlat or add call insl lods mov adc dec addl or inc pop add (bad) js in andl or mov pop adc or mov fldcw iret cmp movsl enter outsb xchg or mov (bad) or enter test sub int3 imul loope mov mov mov inc fisttpll mov subl mov cs decb add outsb imul int3 adc jp out jns arpl sbb cs sbb xchg or movsb test xor test xchg bound push or adc (bad) loopne lret xchg or (bad) pop repnz (bad) or lods scas sbb sub aad mov and mov movsb out nop xor add stc adcb pushf shlb das mov nop push or (bad) adc pop out jle movsb sbb push adc pop repnz (bad) aaa mov jge loope add sbb mov and stos inc mov mov pop and adc and xor and mov call jp push xchg or pop jo int3 lock inc xor cld js jns mov mov rolb out sbb clc loopne fisttp or mov clts xor arpl into xchg and xor or out adc subb les outsb mov call nop dec pushf ljmp popf cmpsb in mov dec xchg add or jno inc adc call add cmp push sbb cmp cli xchg jnp int3 mov loopne jb xor xchg and stc das push pop xor mov xlat mov jmp add addl test das or sbbl push stos test mov push jae adc cmpsl stc js dec xchg pop ja movsb adc in mov xor setb js,pn mov pop sub test negb hlt fimul mov in cwtl inc xchg dec mov add mov sub bound fimull pusha dec inc xchg inc stc mov test mov or add aas add add repz (bad) adc sbb mov push and sbb xchg lret add jnp and (bad) cwtl push mov mov xchg push xor and push mov adc mul lret or ljmp aam sub outsb push les adc or and ds lods xchg loopne lahf fisub cld sbb sub lock fisubl and mov mov mov fwait push mov xchg popa mov out push mov adc mov pusha cmp adc cmp mov (bad) mov (bad) inc mov mov jmp xchg bound mov or fidiv jbe shl fwait mov cltd test adc imul push xorb insb mov sub and pop fld sub xchg mov dec xchg or xor xchg fadds or outsb inc pop push sub mov nop dec xor push and xchg mov int daa int3 push push lahf pop sbb pop cmp and dec stos or xor enter in add aam in dec xor xorb adc and dec ret iret mov clc ja inc jno mov add jb xchg aam jge movsl leave mov loopne cmp pop mov test es pop cwtl sbb xchg or outsb fmull push adc or adc scas and loopne sarl addl sar test repnz lock (bad) movsl mov jecxz sub push dec xchg push loopne int3 mov clc jle or hlt cmp pop jl adc fcompl and inc test (bad) jae and xor popa push lods xchg lods repnz or cmc cmp loopne add je push lds push xlat rcll push test sbb or bound push lds xchg mov push int jl inc daa push xor or mov xor pushf dec push xchg fs adc inc out and pop mov xchg add sbb adc or inc push or arpl out mov fidiv ret and xchg xchg aas push mov (bad) std xor cmpsl popa testb shll pop aaa and lret mov xchg das dec or adc movsl mov inc scas or mov pushf xor fdivp cmp pushf clc rorb jle jo push and (bad) hlt mov jle mov rorb add cmp pusha outsl popa fstpl mov data16 dec xor sbb sbb or sarb inc hlt inc add add inc ret lock enter mov jo (bad) or push ret add xchg add lea xchg notb jp hlt out pop ja add clc cmpsl popa enter rcr cmpsb sbb mov mov and lods xchg nop inc dec cwtl xor or int3 rclb iret xor xchg or push mov pop push adc arpl test push test xor cmpsl add mov pusha and std add sti adc xor stc cmp sub sub push int3 inc adc push data16 inc lahf or cmp push mov xorb test adc xor push and add add xor and add dec add roll cmp inc fldl and js or rolb scas clc or mov scas inc shrb sbb inc jl arpl pop mov jo lret mov les push ds mov sub fist mov mov xchg js lock lods pop mov cmp xor push je shrl or and mov inc mov adc mov jmp clc ljmp test push sbb mov lock and daa (bad) cli xor decb mov xor mov or add cwtl fs int3 xorl cwtl mov adc enter adc pop ret pop xor push (bad) push adc movsb xor mov scas fdivl movsl jnp dec mov adc icebp inc inc bound js cltd jo repnz cltd cwtl push mov xor mov or inc fdivl push lret push loope jb dec xor es in lock or (bad) pop xor mov dec or loopne dec lret bound jo mov pushf mov arpl sbb lret in sarb push nop xrelease xor sbb lret sbb mull dec push repz xchg sbb xor fs arpl or sbb sbb and les pop cwtl sbb dec pusha push movsb and mov xor fbld movsl imul pop or nop pushf mov frstor mov push cmp pop adc push adc push cmpsl mov or fs mov mov or jmp push les lock adc ljmp sbb (bad) lock adc adc sbb les push jae lock adc mov xor jo add bound adc add xor jo add repz popa lods enter xchg xor xor sbb jbe sbb sti xchg jl aad iret mov loopne mov inc dec repnz cmp out test lods cwtl and and xor push inc sbb arpl mov and jp sub test sub cmc cwtl mov stos adc push mov in cmpsl pop aaa cmp mov lock xchg inc pop push sub xchg sbb faddl nop addr16 (bad) mov mov arpl sbb notb sbb (bad) or dec push ss add mov fidiv jb les mov pushf mov add sbb lods adc adc adc add or mov mov pop mov enter in sbb dec mov and adc enter mov (bad) mov and adc push test fwait xchg rcrb mov inc ficoml mov dec rcr sub sbb xchg sbb xor sbb mov in inc movsb adc cmpsl pop and stos pop shrb js adc insb fwait mov test data16 push pop mov jo in aad sbb add adc adc xor adc add xchg rolb mov add adc ds pusha mov or cwtl adcb add adc push xchg or pop mov xor lock (bad) sbb or xor or mov or pop and adc jo dec sarl mov adc ret inc mov push xor rorb sub int3 xor mov arpl pusha xor stc push xlat ficompl test test jb mov mov inc fmuls lock fcoml or cmp repnz mov stos inc push push lahf dec or mov movsl out mov push insl mov (bad) xor lods or jecxz push es mov lock inc cld sub adc int3 mov ret mov jnp xor addl dec mov cld inc cmp dec inc or (bad) or mov arpl shll cmp xchg xchg jo std adc sbb xor sub or cmp or in xor gs pop mov mov adc xor and aam pop xchg cmp (bad) push push sub cmp push pop xchg jp dec loopne inc popa leave or xchg lock test or mov push cmpb or inc xchg (bad) fs (bad) les shrb hlt or (bad) mov push cwtl sbb shr inc pusha (bad) adcb sbb mov lock imul mull and and movsl pop mov sbb in inc ljmp pop popa pop dec mov push lds xchg add mov adc outsl push call jo fs sub and push jnp sub test sub adc lods dec cmp (bad) cld fisubl or scas cmpl repnz iret insb roll frstor bound lock lock mov add push int3 mov stos mov dec dec push int3 repz nop bound or inc call nop and and scas sbb mov or mov imul mov jecxz adc sbb push cmc pusha xor push pop je subl jo sbb mov or jne mov sub cmp inc insl xor inc mov and lahf movsb cmp inc (bad) data16 xor or rclb lods and xor sbb ja add add xchg or popa repnz or inc push push adc cmp int3 sbb nop inc test and mov adc or add mov xor add adc stc add xchg adc dec test lock call or jle xor sbb ret call das add lcall and add leave adc adc xor sbb shlb jmp pop adc push sub push jo or addr16 adc enter pop adc sbb outsl dec or push push ljmp xor cmp or mov fidivl pop daa roll js xor xor imul sbb loope stc adc into mov sub inc or inc sub int3 pop xchg sbb push clc adc dec xor adc pop and and push (bad) jae (bad) sub and js and sbb movsb and int out adc or pushf or adc adcb cmp lods or xchg cld inc dec push std inc cld (bad) add dec fs gs adc pop mov dec cld add enter lods clc xor dec inc je inc int3 fdivrs add outsl dec dec mov push push mov sbb jnp (bad) mov jle pushf sbb (bad) dec call push nop pop and sbb and lock adc sbb mov dec xor and pop xor or icebp mov ret data16 and or push mov clc jo sub add nop dec pop lds (bad) and movsb lcall or jp sbb or mov add or xor test stos mov xor mov push fisub mov int3 cmp rcrb test ret icebp and jecxz int3 or push sbb or movsl fwait xor (bad) stos inc jbe sbb lods inc xchg mov inc bswap in xor mov or dec int and mov sub adc enter cmpl push xor stos inc out cmpsb sbb jo mov or sbb adc and mov push lods adc cwtl mov mov lret bound mov push fcomps insb or std mov pop loope sbb xor adc add and rcrl or add rolb push and aaa adc fs sbb or or or cmpsl xchg mov mov add sub inc add mov adc cltd scas mov dec and nop mov rcrb dec adc mov or das add test push ficomp xor sbb xchg fs adcl sub fs add psraw xchg sub jo data16 mov das nop push sbb add lret scas add (bad) mov xor or mov pop xchg js cmpsl sbb mov fsubl roll shrl add aam fimull sbb push pop adc dec hlt and xor mov js icebp sub (bad) fs jmp je orb rcrb or lcall push adcb add fsubrs pop xchg (bad) loopne bound push and rorl cwtl adc js dec shrb xor enter push js jle pusha jo mov sub xorb call mov or and fimul or adc lret xchg js xor out dec mov int3 pop nop add sbb dec pop in mov sarb and or shlb js mov and aam pop or sarb sbb fsubrl jae orl cmp jp pushf test (bad) inc adc inc adc push cmc (bad) push jl adc cmp mov xchg mov (bad) pop mov sub jne sub popa or cmpsl and inc push or outsl (bad) or adc xchg dec orl push push cmp inc pop rcrb push nop dec pop pop imul sbb adc popa push or fisubl sub inc call sub mov jle dec mov stos sbb scas (bad) sbb cltd dec rolb jae inc repnz outsl pop (bad) push xor mov cmc push mov dec in push sahf mov (bad) test shrb mov test adc or stc add cmp stos mov fstpt (bad) je cwtl and or in adc dec mov or nop addr16 inc es xor or adc enter rclb call adc sbb ret xchg sbb xor or faddl xor sbb xor cmp lock mov cmp int3 and xor adcb or imul or jo or inc sbb (bad) nop adc xor rolb inc rclb arpl xor sub data16 inc jmp sbb (bad) stc nop xchg rolb mov (bad) pushf enter rorb cmpsb out or (bad) les sbb scas cmp mov or pop clc mov mov push or adc arpl cwtl scas loope sbb pop or dec or nop rcrl cmp push lret test xor and rolb mov arpl adc (bad) or adc xor test cmp nop shlb enter xchg mov or pop ret xor roll sbb ret or sahf dec xor add add sbb (bad) xor dec sbb push hlt out in bound xor es mov lods cmpsb sbb bnd scas popf cmp in add adc sbbl cmp rcl adc nop movsb or lods sub add lea rcrl les mov sbb mov pop mov or sub push sti mov ljmp inc shlb ficom xchg mov popa push or add mov xchg xor inc xor xorb or dec dec hlt pushf mov lret notb fbstp pop or je loopne or sbb push pop sbb cmp arpl and out mov push (bad) out or xor out cmp dec pop cwtl inc test sbb adc pop adc adc add les push pop nop ljmp in dec enter mov pop (bad) stc mov mov push (bad) lock mov shlb fcoml fs loopne ret dec dec gs cmp in std add call or sbb loopne dec push adcl push mov dec push outsl jae adc mov imul cmpb inc sub xchg out mov push int cmp daa sbbb iret jno sub sbb mov push xchg xchg data16 pop mov lret call mov push or mov inc sbbb xchg or out cmp lds jns hlt lahf pop mov fs inc pushw int3 or mov fsubs or jmp jo (bad) adc cmp jmp or nop or pushf sbb fisubr aad loopne inc xor adc sar arpl or cld xor clc sbb add test or mov push lahf sbb mov and or sarl nop inc mov fs adc leave js popf adc and push pushf or xor and and data16 and cmp sbb push cmp fimul adc arpl sbb add xor and and adc sbb mov or popa or sbb adc push jbe jo test hlt icebp add adc sarb nop add sbb add adc jo adc xor dec pop push xor push adc cmp and sar mov xor and sarl inc lods or mov adc sbb cmpsl jl mov push bound movb xor movsb or jecxz cmc inc repz adc xor loop jbe add mov sub xchg sbb push and mov mov jmp mov aaa mov and fstl adc pop push mov xor idivl cwtl push (bad) divl sbb or fs arpl fcomps or out sub sbb nop jnp sub or and data16 js or or jl or sbb xor add mov mov call push adc adc lods cwtl into call push adc or adc in pusha xor xchg popa popf or rcll adc loopne call lods push cli (bad) xor inc mov sbb adc sbb mov and mov sub sub jo mov or sbb xorb mov fiadd inc fldcw xchg adc test ja xchg hlt les add nop jg jae addl sbb sbb push clc rolb (bad) hlt bound xor mov aad dec insb popa mov out and push xchg clc daa mov imul and repnz xchg and or es sub mov aaa rcrb cmp mov data16 into push mov mov pushf inc mov test xor xchg dec cmp dec mov inc ret pop mov sar pop test inc pop leave inc (bad) hlt add adc add pop cmpsl mov mov mov cmp mov mov dec cmp jg inc mov movsb dec or cmpsb add and les test adc mov xchg xchg or xor or sub (bad) adc jp sub sbb mov loopne adc jo add jnp and jmp and sbb rolb sbb xor adc mov ret mov leave dec out adc jl sti int3 sbb or mov cli push insl or nop ja adc add mov insb decl (bad) push rcr adc (bad) adc inc dec and xor inc imul xchg je xor enter leave push inc jo sbb rclb es cwtl ret call sub mov insb sbb mov cmpsl mov mov sbb lods nop in or popa mov sub daa push add push push adc (bad) rcl sub lock (bad) rcrb or mov lock pusha adc or cmp pop test push stos lock aaa sbbl adc (bad) or popf xor enter jo nop dec (bad) cmp push or lock push setns and xor adc cmpsb cltd adc mov sub or push sbb or orl inc (bad) repz adc or push cmp dec cmp xor mov mov popa or mov or push cld repz or adc mov lods movsl test jbe adc and xor inc jmp sub xor xlat nop stc arpl scas dec or pop cmp adc int3 or inc int std nop and cld pop popf sbb and jo nop sub dec cltd push mov inc andl cmp pop push adc xchg xor fwait cmp xor nop xor or jl (bad) and or adc and outsb push or push sub or cmp mov and (bad) or xor or inc push add pop inc inc outsl jo mov mov clc add test add das push rcr sub nop dec sub pusha sarb fisub sbb mov or xorb sbb sbb nop mov cmp push mov xor jp jo xor jo add outsb pop leave and insb into or xor or or shll (bad) xor inc jle in bound adc add and aas xor jecxz jbe jo or mov loop mov sbb push add sbb loopne or movsl add push pop enter push inc sbb hlt adc mov or lahf cwtl sub or arpl or jl xor add jmp mov or pushf xchg sbb dec gs xorb sbb mov rcrb adc inc jg adcb jmp insl add pcmpeqb and and int aam xor clc add sti cltd popa movsb sub or push dec pop xor jmp sub inc sub cmp loope add les lret test mov out data16 adc inc cmp arpl or cmpl inc fsubl sub jg mov repnz xchg imul bound adc rorb fwait dec or mov add dec and nop lcall and or or nop scas repz repnz jae xor in movsb sahf lods sbb or cmp adc inc es sub push into cltd push (bad) cmp inc or in rol or dec or pop add or inc xlat stc push test inc ficom add rolb xchg in inc pushf jo lcall mov xchg ret and jo and xor sbb mov or dec ret or rcrl dec outsl or adc add adc rcrb push insb xchg ja xchg js or sub dec xor xor lock mov nop ss or adc je xchg xchg pop call mov mov mov fsubrl cwtl xchg adc ret and adc xor dec cmp and inc test or fbld dec push mov mov adcb xorb xchg les cmp mov xor int3 or cmp movsl xchg dec adc (bad) xor lock decb mov or roll into adc jns in xchg or ret call fmuls mov into or repnz adc and push mov or adc xor push data16 inc mov mov inc add adc nop fs int3 pop xchg sub or mov mov push cmp daa mov push add or jo aaa pop adc pop xor lock xor loop pop mov roll cld add xchg adc cmp mov lock movsb mov dec jbe in adc dec in sbb xor mov clc mov mov and xchg js fnop or push mov cmp mull cld jmp mov xor int3 push imul pop orl mov or push add jecxz or mov enter shrb push push outsl adc xor mov cmp cmc add hlt or pop stc fs and mov sbb sbb test imul xchg int3 dec dec and jnp lcall push push inc arpl inc adc cmpsl mov sti sbb rolb fdivrl (bad) int3 and leave lret (bad) sbb dec or inc pop pop lret sub jl or push mov adc jo leave sub xorb std cmp or shrb or sub nop imul xchg or mov or push outsb sbb sub and add leave sbb fs (bad) fldlg2 inc (bad) or mov nop mov fdiv inc psadbw fldt or lods leave enter xchg xchg cwtl aas or xor dec int3 sub ud1 movsb mov adc iret clc ret test xchg adc xor pusha or xchg fdivrl nop dec enter xor addr16 inc mov enter xchg add (bad) pushf add sub add insb sub adc (bad) jmp jmp rcrb ljmp outsb aaa test jbe sbbl push add hlt std inc add int3 ljmp aaa or out int cmpsl loopne outsb (bad) mov mov push in (bad) lahf rclb jae mov jge js push inc add mov movsl xor add idivl ljmp or sbb enter pop push and je mov nop sub dec rclb xorb xor int xor adc add loop stos cwtl add or mov cs xlat sbb add xor cmp xor push pop (bad) mov jno loope aam jge dec sub inc push dec xlat push dec jno push adc fdivl push jg dec lods addb pop loop pushf dec negb sub mov aas (bad) in sub mov inc xchg and xchg cmp sahf add int3 add loop or jno,pn dec mov adc sbb into dec pop add lds adc sub dec int3 cmpsl mov inc sub cli divl out or (bad) pop test cwtl lock jmp xchg bound pop inc aam lret out xor inc test (bad) push test jnp add dec jl add sbb add dec into push xor fsubl shrl outsl mov scas mov aam push push mov lret and lret xor mov inc add nop dec xor push pusha add ret stc cmp addb sbb xchg push (bad) rcrl or cwtl cmp jmp fs rcrb push sti lret inc dec pusha std ret push add mov into add mov push adc mov and jbe rclb add shr sbb mov orb pop jnp pop stos mov (bad) mov lahf inc cli push mov lods cwtl sub andb push sbb pop add pushl movsl add jge push pop mov ret inc mov add scas into test shlb xor enter cltd jne jnp jae jne jae mov test enter dec sbb and cmp cwtl dec nop pop push mov out outsl nop and cmp adc inc push loopne jle adc out popa mov inc (bad) repz xchg jns inc out xor pop lock or (bad) push int sbb push jle loop cmp fsubp inc cli add (bad) cmp and dec sub pushf push jp lret lock inc rcrb icebp loop dec mov push lods adc je test inc bound fnop or cmp xor dec nop or xor out aas add les outsb ss dec adc inc cld leave cmp (bad) hlt icebp mov cmpsl mov out mov roll ljmp sub rcrl lock pusha imul add adc push and sub mov int lock movsl rolb ret xor lds cwtl leave gs insb ljmp cmp bound test jae (bad) loopne push (bad) push cmp mov push rcrl daa fcmove mov or push and cmpsb xchg (bad) xor jnp jno (bad) movsb call repz rorb idivl dec gs (bad) hlt cmc push mov adc cmp sub push inc cmp pop arpl leave fidivl loope mov nop roll (bad) pop enter push pop lret cmpsb (bad) lret loopne dec cmp arpl imul and icebp mov movsl cmp out push cmp mov push gs ss or jge add pusha add add and pop jecxz push jb stc or adc push enter push inc nop dec xor pop mov repz sahf xlat pop push xor cltd lock jo add lret loope add pop adc fs dec dec pop add xor inc js push sub je cmp pusha repnz lods clc sbb cmp jl xor xchg push imul xorb or les sbb push nop or jle and insb cmpl jge jle push pop dec xor jl jge mov (bad) call or jle push lret xor out (bad) jo arpl leave xor xchg aam and inc mov push orl repz sbb sbb int3 pop or lods bound fstl pop push addl add or loopne mov add pushl lret jl jle ret sti sub adc push jl js pop jb push pxor cltd adc sbb add fsubrl insl loop and loopne sbb jl pop sbb jge popf dec fwait shrb pusha lods jno repz ret add push pusha mov hlt aam clc xor and aas pop xchg nop (bad) jbe xchg rclb rcll push push andb cltd rol xchg pop je adc sbb sub movsl or push out jecxz xorl or cmp mov push (bad) xor push sbb (bad) sub xchg mov stos fs mov test or fisttp mov loope lock add xchg in xor and mov int3 jl or dec push pop arpl inc inc test imul add movsb inc mov aas cld clc fnop std lock xor add xor enter or subb inc (bad) dec add jle sub out and xchg fcomi in test lret call add mov cwtl push dec sbb and pusha push sub das (bad) xchg mov sbb push shlb cmpsb add in arpl ret inc cmp lods fmull cs mov icebp call add sahf cltd pop (bad) ss xchg add cmp mov push mov outsb sub mov or adc pop popf cmp or add mov into dec pusha add rcll pop add mov outsb push ret dec movaps movsb daa and jno jnp loop scas mov pop push shlb ja xorb add jmp in addb daa jno adc sbb pop pop jmp cli inc inc es jg sbb xlat mov and (bad) pusha into dec sub pop stos pop sysret cmp xchg jecxz inc inc sub jl addr16 adc ret mov sbb sub xor ss cmp js lea jmp outsl inc dec sbb popa mov add imul (bad) cmp or loope sbb ret in ss sbb ficomp mov jl sub lcall (bad) and les aaa pop mov mov push sub xchg in adc sets jns lds lods xchg add inc das into test outsl std fadd cmc jmp push jp divl mov imul jl test add inc fistpl mov cmp add inc sbb idivl dec shlb aam lahf xor adc sbb jmp testb pop jl and mov mov cmp ds sbb xchg je mov or sti mov add cmc inc cmp std jge insb push and sbb adcl pop pushf sbb add fldcw lahf xchg popl jno xor arpl lock les inc mov icebp enter or mov nop cld mov dec and ss adc test imul lods test enter lods mov into rolb cmp out test les movntq (bad) sbb sub dec sub cmp fs out loope call fwait xchg mov stc dec lock or cmp ds jl mov divl mov nop movsl mov js xchg and or push je ljmp lods or xchg jae dec shr mov jl icebp push adc movsb cmp pop lahf and mov cmp add mov in dec sbb xor xchg sarb xor xchg cmp inc rolb popa mov inc inc inc mov pop xchg add loop data16 xchg cmp mov lock and xor or cltd xor mov add call sbb sbb push xor (bad) and out adc cmp sub enter fcomps and jne mov dec icebp nop ret (bad) xor in and add adc sub lea inc add sub dec adc sti and fdivs and xorb push pusha repnz dec jecxz mov fadds xor pop (bad) imul adc mov mov cmp aam cmpsl pop les add rorl js or test nop cmp inc divl std cmp pusha push push xor xor pop sub dec or cmp xor mov mov mov nop xor mov mov mov and pusha mov mov les jae xor dec add xchg out push aam cmp mov enter add push pop xlat loope rcrl inc cmc jnp sbb maxps mov mov sbb mov sbb aad add test imul add call test clc ja cmp mov mov imul jl notb mov out pop jle sub mov and cmp sbb jbe add and sub inc es stos sbb dec or mov mov jl pop lea sub cmp leave aas testb loop pop ljmp add lret inc jbe xchg pusha sub and pop jg and or and mov sub jno adc loopne sbb xor inc xor popa push mov std rolb and and clc ja add mov scas in lret xchg and and cltd inc cld add jne add das adc movsb cltd mov sarl pop aas push hlt push pushf push ret divl subl arpl insb cmc lcall (bad) xlat mov sub push dec into lods fwait sub inc sub jae xchg pushf test dec mov or addl stos movb sub push test test sbb dec repz clc cmp push mov pop sub fdivrl jmp ret push inc jmp pusha dec scas cmpsb cmp mov cwtl mov (bad) mull xchg cwtl test or cmp sub dec push mov lock pop and push sub test sbb ret dec loope xchg cmp lock (bad) cmc ss cmpsl mov stos lods dec add jo pop adc sbb mov insb movsl jl or jp xlat dec adc mov xchg xor add xchg inc cmpb pop mov mov stos add insb fwait pop or cmp stos adc call add pusha sub adc add jbe mov sub and fwait loopne mov sub mov cmp mov adc xor sub shl mov inc or adc test ds loopne test in mov add pop cld xor js adc aaa in adc lahf jmp push or sub arpl push movl sbb inc sub and outsb fwait mov cmc lcall or xchg aas out popf push in mov add nop je sub pop mov scas test xchg pop flds or in mov jge mov sbbb xchg xchg mov lods sub pop popf in add xchg jp cmpsb push iret add or stos sahf subl sbb bound xchg subl or cwtl push aas cmp pop (bad) mov or jl adc xor in mov mov loope hlt lods inc pop fdivr mov imul leave pop adc and add stos push cmp and enter xor and push mov add cwtl nop xor stos mov stos sub les lahf call cwtl mov jo lcall xor loopne and jbe pop imul inc mov push ljmp addr16 insb add nop xchg pop and nop dec insl popf out sbb (bad) loope cmp popa and cmp jb adc xchg mov ljmp sbb pusha xchg call sbb mov inc add out inc popf adc sub add add or sub cmc or xor mov pop shl arpl or cmp fwait xchg popa and lock addr16 add loop ss mov lret sub cmp mov xchg xchg and out sbbl mov sbb add mov sbb jne mov hlt sbb test loopne inc pusha sub dec enter xor call dec adc push and add int movsb or lahf sub leave pusha dec lcall test sbb sbb fxch (bad) xor add inc ja ds or xor test sbb popf faddl push rorl or test out inc pop jo push popa sbb add add cmp inc and xchg pop xchg repnz pop and adc add stos xchg xchg aam jne pop sub xor test cmp inc movsb jno and out add sub inc xor stos movsb lret (bad) rcl pop add add loopne pushf add rorb sbb icebp add xchg jp pop movsl pushf add int pop xchg inc and or xor (bad) mov in shrb fsubrp cmp add movsb add xor xor add loope call js push or mov and movsl lret jmp cmp mov inc add add cmpsb sbb xor repz adcb cwtl inc or outsb add imul adc add and jle les lock mov loope mov xchg nop cmp fs popa or xchg pop pushf fdivl bound mov sub lds lock cmp or mov push pop add out jmp lods fwait jo cmp std loopne sbb push pop xor movsl jl insl pop js test add cmp jecxz mov or cwtl (bad) mov cmp sbb mov out add or inc sub test add incb add pop cwtl ret jmp inc (bad) xor mov dec js movsb js xchg cld xchg inc dec negb sub int3 inc xor or clc or and sbb test or aam adc aas adc iret out cmp sub add cmp ds jmp mov js ds repnz sbb xchg dec add fbstp shr mov push enter or add mov (bad) mov neg imul or aam sub or cld sahf pop (bad) dec sbb adc mov or sub adc mov pop loopne push jae mov and out leave rcl enter packsswb aad jno push sub sbb imul pusha hlt add mov test (bad) inc mov mov push xadd je xor das add xlat sub lock sbbb ja adc mov cmp cmp or shll (bad) sub push or pop pop gs jbe or test xor data16 mov clc xor jp out fcomps cli mov sbb aaa nop cmp lret inc cmpb pop imul and je test enter add sbb mov mov std cmp int sub push xor or inc cmp nop sub pusha divl cmpsb mov mov lret (bad) loopne out adc add sarb mov daa inc jno sbb sbb insl sarb cmpsl lret test and push sar das mov inc cmp fbstp mov add add mov jmp pushf fimull enter repnz clc fbld cwtl ret jp push add rcr mov push rolb add cmp dec in mov js add lods adc mov dec dec rorb mov push sarb jecxz push fisub sbb pop cmpsb push leave push sub shrb movsb adc mov pop aam push ljmp mov and jae movsl mov push or cmp mov daa mov push push imul test ret mov pop or or add pusha sub bts add mov bound icebp lea and jo add push mov xor adc sbb in outsl lock cmpl and je add sahf pop icebp push jg dec xor (bad) or dec push in mov bound fs (bad) or push sbb pop pop pusha xor sub inc push cmpsl add mov rolb repz mov jl add and pushf aad jl pop pop inc cmp lret lea call mov mov arpl rcrl cmp in xchg clc push lods mov sbbb clc or insb add (bad) xor cli cmpsl (bad) nop js adc or fs cli lahf imul push xchg cld js xchg clc stos xchg and test pusha adc stc mov adc outsl sub push xchg shll mov or push nop mov cmp loopne enter arpl fldl sub mov rolb jb xchg cmpb loopne mov sub imul addl mov mov lods lods mov mov or orb (bad) jp add sbb jmp xchg push add loopne (bad) movb sbb mov shlb icebp shrb or rcrb xchg add outsb stos xor add shrl push loope (bad) and cmp addr16 and enterw rcrb sbb cwtl test mov xchg mov mov xchg and xor cwtl sub sub mov jle or lock mov int3 sbb cmp pop pusha loop xchg movsl mov ds add pop sbb push ljmp pop lock sub pushf inc clc or or push mov jmp mov jbe sub mov inc mov es std movl insb push inc pushf push xor lret mov call (bad) push pusha sbb cmp in mov add loopne mov aas inc pusha cmp cmp inc mov movsl aad or mov mov jmp leave inc jae sbb xchg pop clc push inc dec add pop add xor sub rolb (bad) pop dec mov xchg sti sub pushf dec dec cmp inc loopne or add rolb rcrl pop scas and sahf sub in sub mov cld scas cmp out cmp jecxz push shrb rcrb and test xchg fstpl xor dec es jnp hlt push (bad) lret sbb sbb mov pop and aam push cmp or imul xlat mov ds mov rolb or mov dec xchg test mov dec cmp dec js nop add repnz mov (bad) lcall dec sub test fs mov lock dec mov xor dec mov and adc cmp or push pop clc enter lods jne pop mov mov push add cmpsl je pushf test inc rorb mov cmpsl cmp into adcb ds sbb cmp push or adc inc mov clc movsb cmpsl jl jecxz pop into adc push ljmp pop test fsts jl jl lea shr ficompl sub cld int3 loopne lcall mov nop mov out mov test leave das add xchg xchg mov jecxz mov push sub outsl lahf ds sub push mov (bad) adc dec int3 pop add dec lock add mov ds inc movsb push movsb clc and mov je add cwtl outsl cmpsb insb xchg cmpsb mov mov mov adc test xor sub movsl dec sbbl pushf pop bound cld ficom int3 push adc add ficoml movsl sub push inc xchg mov loope jnp xchg and ss xor sbb mov fildl xorl lods xorl test aam cld imul sbb or inc (bad) enter in add popf sub push adc xchg jg js sarb and sbb pusha jecxz xchg fs jl sub mov and pushf aam pop xor cmovp pop mov fisttpl add cmp adc paddusw jmp jae dec std pop add dec sub mov in jmp sbb inc pop je insl push test mov mov cwtl fidivl add jno sub push add jle xor sub push in fsts les (bad) bound (bad) aad jo dec push outsl sub sbb mov outsb xor mov mov ret scas push dec mov xor rcl cmp test sub pop push sbb xchg push rorl add mov hlt nop xchg rcr xchg (bad) out add cmpsb idivb pop jne mov mov arpl add sub or insb xor loop mov popa mov lahf imul lret add aam xchg (bad) cwtl or dec mov mov push push xor or into push jbe test and xchg dec add lods insb mov dec push hlt shrl or jmp cmp call add popf inc or and mov and scas pop sbb cmpsl stos dec jno jo js cltd inc out xchg and push xchg stos push xchg push cmp sub rolb cmc sub ret push les nop pop jae and or cmpsb icebp movsb mov test add jle jmp sbb pop jl inc push clc in (bad) mov dec int3 test adc add jl (bad) negl adc mov imull loopne enter inc jmp pusha out pop sub xchg xor add xchg sbbb inc lahf mov cmp or outsb cmp loopne (bad) xor mov popf in test or xchg les cmp inc loop push pop out mov cmp movsl xor xor lock dec xor lock in and nop xor pop cmc jae cmp nop lods dec cwtl cld jg xchg add ds mov sub dec inc popa fsubr adc pusha pop js dec adc loope (bad) jbe popf xor or cmp icebp xchg out mov mov fsubrs orb push dec orl bnd mov adc or lds sbb or out mov movsb pusha adc loope sub mov into and xor add mov pop or push add push pop rorb or jno nop add test stos stc add nop and xchg test (bad) mov loopne or (bad) aam inc xor test inc sbb sub lock sub xchg cld testl mov push arpl inc dec cmp jmp xchg push pusha mov ds cmp jl add add repnz mov subb in xor add pop mov jmp add adc mov in orb sub aas mov cmc push xchg or add xchg lcall outsl cmp add sub jmp lret jp cmp push mov mov pushf test sbb jb sub lcall popa iret sbb hlt jge xchg stos mov insb pop add cmpsb xor mov xchg add movsl fs add dec popa je mov push pop mov ss test loopne pushf push shll cmp or enter dec mov pop stc cmp fwait xchg cwtl cmp sbb dec stos sub fwait jnp sbb inc sub sub call mov test fs add add add je pop sbb dec add inc xchg in add out icebp xchg and mov push mov loopne test jmp add cmp cmp imul mov cmpb inc add popa jmp adc pushf adc mov call mov movsb cmp sbb paddsw or bound mov or push add pop pushf dec rcrb xchg subb je push sub mov in test push jle js add fcompl and or pusha add adc subl push inc scas pop lock test or and scas testl jmp pop xchg (bad) rorb xor arpl xchg mov add mov cmp dec jnp mov fiadd jge (bad) cmp testl pushf push add xchg cmp inc adc and sub mov cmp jge add adc jo fld add sub xor test add fidivrl fsubs pop dec sbb pop movl mov rdmsr xor in mov sbb (bad) addl jmp jg push pop pop mov mov int3 push cwtl sahf dec add pop enter subb jo add dec in cmpsb mov fildl cwtl fcmove xor mov in sarl sub fmulp sarb pop imul inc sub nop subl xor scas inc test xorb ja xchg ret mov mov sub aas es subb inc js inc adc addr16 adc pop add mov add push pop xchg push xchg test notb and and in enter pop std adc shrb pop xchg enter pop test nop (bad) popa mov incb sub sub dec mov lds ja ret mov mov add and push inc lock stc and sub add xor add (bad) lock xor inc inc sbb lods mov andb xor or sahf in movb pop stos add enter insb or les and test jecxz test push fdivrs xor cmp insl pop mov push add ficoml rclb jp in and nop nop insb add jo loopne inc sub aam sahf aaa pop jl js pop incl and dec inc jl stos ja bound icebp enter ret xor add fildl jle add enter push loop push lods sbb outsb add xchg scas jnp add (bad) jl add mov mov mov inc sbb into add inc jne pop sub stos push mov add fcomp sub insl loopne (bad) adcb and add shlb movb loop add icebp mov in dec (bad) sbb push push aam mov aad adc xor in inc js add jo inc clc std adc fidiv or adc into pop or dec (bad) adc cmp add stos fsubr pop inc int xor push cmp orb and or jno sbb inc add jns arpl inc in or or xchg pop add bound test adc pop data16 sbbb adc push pop mov sbb insb sub scas dec mov or sbb sbb lods add loopne and mov push pop xor xchg das je test subb add dec je (bad) xchg mov lahf add sbb jmp insb mov mov pusha mov cli dec outsl or xor aaa and lret push jmp pop add push xchg mov aam test or sub bt or es adc rorb push push js lods in inc and pusha scas inc pop xchg xchg nop jecxz dec unpcklps mov scas push int pop rcrb lret pop jge pop xchg or shrl (bad) les pop pop xchg mulb nop xor in cltd test and inc cld test fmull fist or pushf and xor dec pop aam int3 push nop rorl xor jb adc push inc test int lcall adc xchg jl dec imul bound pop and pop fs sub add loop dec pushf lea adc jl in jno sub rolb fnsave push in repz dec push cli sbb cmovno (bad) inc fs add dec add adc lods (bad) xor sub lods push shrl sub rolb mov pop sbb iret lahf scas leave adc je add dec inc mov std hlt ja pop push ficompl pushf shrb ret xchg cmpb (bad) add mov sti adc add sbb les add push int lds sbb pop jge icebp shlb pop and js jns dec add aaa jnp add lret (bad) xor mov (bad) pop add sbb sub pop add sbb rcrl dec rclb xchg rolb push push test fisubr jg shrl aam fsubl sub add add (bad) into js jmp (bad) push pop sbb in sub (bad) jnp es sub (bad) loope ja mov and dec enter dec or cmpsb (bad) xor xchg jo mov mov call (bad) lock ffree push cltd and pop jnp test jbe test xor xchg popa mov loop pop mov add mov sbb addb add add pop ret push adc add les repz and cmp cli pop jae cmc cs enter adc sub adc enter add add xor fsubl push xor cmp mov ret (bad) clc adc sbb lcall mov push and jp nop sbb sbb scas or cltd push mov xor sub xor cmpsb add inc and pop repnz ds or scas shr mul lea clc mov sub lret pop mov xchg scas dec std mov popf or test adc and scas (bad) sub mov dec js add sub stc xchg add (bad) dec arpl andb xchg test loopne pop push or cmp mov int outsb add sbb xor rol pop pop ljmp sbb dec leave test xchg mov clc xor pusha jl add mov aam adc movsb lahf add xor xor sbb push dec push fstps adc inc or dec movsl cwtl add mov and cld loopne push pop enter ja mov pop incl test popa jmp inc iret sub xor pop pop jb inc cmp sbb add push and mov insb and cltd add and adc ja lods sub sbb addl inc arpl jo sbb sahf xchg adc or (bad) push add cmpl mov adc xchg movsl (bad) inc dec mov add or xchg stos pop mov or cmp mov sub hlt add jae push faddl xor fldln2 jns js push and fwait inc (bad) pop and add lock lock stos xor clc cmp sub (bad) pusha in fldl jno mov sbb inc push or or and mov xor cli aam add lret mov out pop in call and and adc mov xchg test roll xorb call adc and add sbb dec mov pop and sub adc int inc lock fs sbb jo addl push inc dec sub push adc cltd pop pop cmc mov cmpsl bound and roll adc rol adc loope jle sub adc push xor adc insl adc or out cmp add paddsw cmp repz std into pop es sub (bad) pop pop pushf es and add add push das out outsb mov add aas cli nop add int3 dec (bad) js or dec add xchg dec sbb call imul stos pushf ret fisttp adc adc add and jne repnz hlt mov sub lds adc ficomp inc xchg fcoml jbe xchg mov push mov sub sbb add inc adc and add or (bad) push xchg data16 mov (bad) cmc mov xchg inc cld mov loopne stos xor (bad) or xchg xchg in mov mov xchg (bad) dec ja adcb (bad) pushf mov std and dec sbb pop test inc loop sub out dec sbb int3 and stc push cbtw adc pop (bad) jo fmull movlps add push pop push sub or push int3 dec inc push lcall mov addr16 xor xchg hlt dec dec daa test je lock push cltd push sarb cmp push popa add mov test cmc dec dec add adc or sub inc int3 xchg (bad) aam nop test sahf enter dec pop xchg fs sub and std rorl mov enter push pop subb sbb bound fsubrl test xchg out xchg pop mov or adcl jae add shrb pop push movsl push aaa push and cmpsb and pushw and pop jae add dec xchg xor sub adc sti es add mov adc mov rol inc add les jl add icebp xor adc xchg sbb xchg mov or xor mov inc fdivrs add out (bad) gs or pop mov xor mov mov jb sbb mov lods imull inc sbb cli test dec pushf cmpsb mov and pextrw sub test mov adc add push nop call test dec add sub jmp fwait add xchg scas lret das sbbb call (bad) push popa push (bad) add adc xor enter add pop icebp out and test add push sbb int3 mov xchg mov sbb mov stos add call and mov (bad) push cs xchg incb push lds sub xchg or iret test lea daa dec mov enter push imul jecxz in loope jo pop jl or sub pop pop je add test sbb std or imul mov mov adc ret xor pusha dec mov add outsb sub mov sub daa iret and scas ss call mov xor inc js ja adc mov nop enter xchg adc mov inc sti icebp add push dec sub nop push sub mov add push dec or xchg xor mov mov cmp jl cmp stos sbb and aas xchg inc iret adc ljmp int3 daa add xor ds dec aam test or das mov xor test adc andl dec mov scas lods ss sub add adc clc mov mov and add adc push pop mov mov add cmp leave in divl inc mov call lods pusha mov jp cmp cmp push jle test loopne lret cmp test or jg pusha dec insl mov sbb pop aaa xchg in ret adc inc mov popf add xorl cmp add jge jne int3 jno add popa mov fnstenv nop push movsb adc mov add js fmuls es cwtl mov mov movups rcrb inc orl and inc nop loopne add push mov arpl mov xchg cmpsb push adc mov imul cmpsb inc arpl js in sti sbbb dec push mov cmp pcmpeqw or xchg pop lock rclb adc cmp addr16 add lret dec mov pop js sbb (bad) loopne mov popa or (bad) jb and ds inc incl out aaa fisubr leave sub mov cmp cmp ds dec iret cmp adc call cs xor (bad) xchg dec or in mov inc add js add pop or sbb adc mov lahf or xchg adc mov xor (bad) sbb sbb xchg sbb or scas and mov movsb or xor sbb inc mov cmpl ret jl adc popa adc adc add mulb movsb shlb pushf arpl adc jbe and pop pop (bad) enter subl loopne pop movsl xor fsubr xor lcall cmp push lcall inc and in and popf bound jb rcll add int3 mov and rcrb lea pop or add rcrl gs into aam push hlt add loope out lea mov divb push sub loope (bad) aaa ss xchg enter into sub enter jo cmpsl push xor push sub addps js out leave xchg adc lods inc xor data16 (bad) xchg pusha add aas inc or out adc mov iret jo ds push cmp scas loop fldenv ds mov sbbl andb mov ret divl inc in hlt and in lock mov data16 aaa pop or jp lock sbb je aas out and pop mov mov add out leave push lcall sub lods sahf xchg cmp add pop xchg fnstsw clc in xchg mov cmp lea adc jl jl mov loopne push lea sbb sbb jns jl in hlt pop loop test in nop test ret inc addr16 hlt pop inc mov push out adc and mov push or gs (bad) mov adc pop jg or pop aaa push adc pop push and leave xor inc inc pop mov adc push lods lcall inc sbb jne cmp (bad) jno add push jmp xor iret jg pop add mov push int lods pop movsb inc orb push nop adc (bad) daa add stos mov jnp dec adc stos pop mov cmp or add sub inc inc loope mov ljmp sub fxrstor nop addr16 add mov loop pushf xchg mov cltd test bound divl stos push (bad) dec pop out call pusha add pop sti and mov pop adc scas leave aas cmp add jl add into dec add popa push push adc (bad) xchg test xor mov in ss adc into adc dec (bad) inc adcb xchg and adc (bad) and gs or leave jne or pop jno sbb into adcl add clc insb jo sub inc wrmsr and cld or and cmp pop out sbb jo mov sbbl lods roll and adc cmp and sbb cmp cld add mov push push adc pop mov add cmp mov push mov in mov dec (bad) or add pop gs adc jl inc jnp sub add addr16 arpl mov and or flds enter outsl and pop adc xchg inc test mov mov xor loop sub jne add jns lock mov pop pop lock or mov dec out add lods adc flds jl or pop add pop cmovne and jo jae into je or cmp adc adc les in add movsb pusha test jo jns push and jl adc push inc iret dec sub clc pop pop jne push add (bad) push pop cltd sbb pusha psubsw xchg pop mov stos dec loope xchg add or mov movsb cltd sahf lret or cmc lock add pop pop out xor fiaddl jbe movsl (bad) mov out cmp lret test add js xchg es add lods aam popa mov aas pop cmp lods jo jno xor push add fisttpl add push cmp iret jb or cmc lret pop mov push add popf lods out pop mov stos and int pusha aad lcall push cmc inc inc clc pusha fnstcw ret adc jmp mov push xorl cmp lods xor adc add pusha push sahf mov rcl or add pop pop mov aaa pop insl test frstor xor or cmp sti outsl jne mov mov sbb mov push or add xor lock add sar sub lods adc enter les push mov lret pop jns xchg sbb cld fstpl or push add sbb jb test subl adc mov inc cmp (bad) xchg pop mov roll int mov mov call inc int lock jo jecxz jmp add sbb lods inc cmp add mov (bad) xor cmpsb lea dec cmpsl mov movsb lods fdivrs xor add int3 lea cld movsl bnd outsl jp mov repnz jl int push loopne lea (bad) add or movsl iret enter push xchg pop xchg jbe adc pop xorl mov jge jg or stos inc sub pop (bad) imul aas pop add and movsl test push fisubr add adcb and pop ss aam lock stos cwtl xchg lods adc and fidiv mov push xor lods rorb or and adc sbb or xor pop (bad) pop and int movsb lods sbb jg rorb sbb and add loopne lret cwtl test jle or sub jge and orl clc pop xor fbld js push xchg movsb sbb mov pop sub les (bad) and mov cltd sti jo ds lods mov sahf mov sub push xor insl lret or loopne mov add add cmpsl pop add sub pop movups fs sub (bad) ja add jge test pop xchg nop dec mov paddd add repz clc divl mov and xchg lods (bad) aam stos lods pop leave mov wrmsr xchg insb push stos push xor jp cmp jmp les mov arpl subl inc pushf pcmpgtb inc cltd (bad) sub and push cmp fs sbb pop in mov lea shrl pop iret pop cmpsl adc adc jp mov push (bad) or pop mov and pop pop (bad) xor fdivp mov or sub pop sbb les ja xor dec lret fsubs mov stos xchg add cmp and addr16 mov mov subb mov xchg sub in add xor (bad) daa int3 mov inc rclb add in cmpsb add ffreep fidivr or dec sub pop xor movl mov pop mov mov adc mov fnstcw adc dec xchg xchg aas push gs push shr jo js test ret idivl add adc add add insl rol sub mov xorb push pop lods fs in push or inc add push pop and (bad) test or xchg enter lock sbb jb movsb mov test insl push je into and mov add dec inc ja dec cld aad in xchg cmpsb enter xchg adc aaa or call add xor push arpl xchg push inc sub ds sarb rcll push and pop dec les pushf pop add and pop stc out (bad) int3 inc test or jne push adc ret (bad) rcl or jo mov out mov iret or int3 push mov fistp push xor in inc push rorb push inc and pop or mov insb adc movsl enter adc aaa jae or clc mov or add int3 push add cmp add or mov and jnp mov inc pop and xchg mov out negb aam popa adc in test lods xchg inc adc xor pushf (bad) pop xchg dec sbb mov leave or shlb rclb adc mov arpl jb xchg and pop add push cmpsl mov stos out rorb sub xchg mov sub rorl sbb cmc mov cmp xor sub test mov or pop or aad int3 push mulps adc movsb cmp outsl pop add and xor mov jo push xchg lock pop add in mov lret mov inc add pop and xor or lsl pop and xchg xor jns sub mov lret mov pop cs outsl pop clc sarl stos std dec call pop mov shl movsb add push sub clc aad rorb imul lods dec fcoml add mov pop add daa aad cmc xchg xor add sub addr16 nop (bad) push xor fsubs xchg adc dec push (bad) icebp push popf jg cmpsl sbb lods rcrl out xchg add xchg invlpg xchg lods sub lcall sbb jne sbb add and movsl pop mov mov inc aaa dec inc jo sbb mov std push cwtl pop adc adc int3 shrb in add repz int jmp loopne (bad) out addl test mov push mov add xchg addb inc mov mov hlt add dec or cmp int3 out pop hlt inc or cmc or clc push (bad) pusha ds lea int push test cld ljmp mov or lods out adc jns pop cmc mov and int3 xor sbb cmpsl sahf inc dec jo dec xchg jns pop nop/reserved lods imul imul fdivrl lret jmp pop sahf adc adc lea mov xchg in jge push (bad) mov push add fs pop mov dec jb push pop aas andb xor add and addr16 push daa lods test dec mov and les sbb jns push xor adc adc pop xor cmpsb xor int sub add mov ja bound call mov mov iret pop and jne aas clc add rcl add mov cmp enter mov fs js sub push or hlt mov in add jo jg in mov scas mov cmp cmp and mov xchg test add mov jge and and scas icebp xchg je test pop jg int (bad) jo insb cmp daa movsl icebp mov push daa jl adc or loope aam add out lret popl mov lret dec pop fadds jle and aam mov pop cmp mov aam pusha mov je fildll mov je iret xor dec inc push rclb xchg jo push jg out mov dec sbb unpcklps cmpsb or adc insl adc or adc add imul int in cmc sub dec popa add out add lods stos or out fldenv and pop loop lahf arpl je sti and xor push fadds mov pop fldenv cmpsl push sub jae adc loope cmp add and pop xchg psubw xor inc imul inc je mov add pop mov subl ja es xor cmp xor add sub rorl sub (bad) cmp call stos or mov test jb les add cli sbbl push stos xor or push or sub cmpb cmp and sarl lock mov gs inc sub shll je push or mov bound and inc int3 push clc cld ret imul ret repz pushf loope add or ja dec fidivrl inc push or leave and stc dec push xchg add imull orl pop aas sub add or jl daa or cmp pushf or mov mov enter rolb hlt cmp cmpl ljmp mov jnp mov cmp nop (bad) jb sub push (bad) std pop andb cs pop arpl icebp mov adc inc fsubrs cs rcrl sub enter in dec add int or adc adc fs and insb in add cmpsb mov pop pop stos pop test xlat test or ds xchg fs es (bad) (bad) xorl pop add mov imul push das mov cmp and add pop xchg lret push clc cmp sarb psrad inc ret loope imul pusha imul cltd jno add stos sub add data16 xor pop add or lret movb cmp out cmp cmp dec sub or roll or iret inc mov imul xchg push xor sbbb jae push push xchg dec mov inc test sbbb push nop fst addl sbb and inc mov or or rcrb std in pop xorb dec negl push add jle inc rcrb shll xchg imul je add xor xor mov jg rclb add lds add xchg cmp xchg add mov add xor cmp outsb cmpsb push pushw sbb arpl es or xchg enter daa push nop cmpsl scas dec add mov clc push push lahf cwtl inc xor sarl jl cmp xchg add and xchg das and dec (bad) jno int3 cmpb mov shl cld call and pushf inc xchg push and push and test sar xor cmp and xchg nop xor push add (bad) pop adcb mov xchg xchg sbb gs mov jmp sub sbb inc stos adc (bad) in cld cmp clc or and add sbb imul inc and mov push leave add lods pop xchg pop sub mov push xor xor cmpl xchg mov sub mov dec pushf adc cmp or mov xor jmp mov fucom jbe aam call ja pop lahf push lret fild and mov add loope cmp jl add test jle or clc jecxz mov pop sbb daa push adc pusha or mov cmpsl xchg push jnp test inc xchg clc out fsubl jge nop shll and and dec xchg add inc ret cmp pop clc stos mov xchg cld adc testb lea jp push lods adc or xlat cmp add daa add xor xor stc scas cmp hlt pop not xor imul mov (bad) rorl adc (bad) (bad) je fadds push fsubs cmp outsl jb mov call loopne and add and sbb mov pop adc repz inc push nop mov gs sub leave mov sbb loopne mov movsl fdiv xorl and jecxz sar or mov fwait and sti pop fidivrl adc inc call push or imul jecxz inc je rcr movsb lock add es and ds inc jb repnz sbb push pusha sbbl out int3 xchg add or movl repnz sbb pop aas (bad) ja sub test ss (bad) hlt mov xorb sarb xor imul add jae shrb add fcoms out dec mov repnz or stos xor stos pusha and (bad) xchg xor jno rclb lods out aam (bad) iret mov inc (bad) loope imul sbbl add rclb mov jge stos cwtl pushl fs in and sbb push stos xor movsb xor add fstpt sub fsubl mov hlt cmp inc movsb or stos adc js inc adcb arpl xlat sub aad add scas out hlt loopne push jmp test insb mov lret xor icebp icebp lret fbld push imul aad fwait or or imul data16 or lahf roll rorb andb xchg xchg or idivb hlt test dec orl fs js pop repz mov insl in push rcrl sbb push add movsl inc pop stc shrb mov mov jmp lods and dec cmp inc (bad) and (bad) loopne xor int cmpsl push xorb inc js shr in jmp jg test add bswap int3 fstl mov add and cmpsl inc (bad) lret add dec out xor jb les ja mov adc adc cwtl arpl adc sub sbb std and pop adc xor sarb mov pusha cld pop nop xchg add cli add and in dec in sbb or adc sbb inc ret cmp mov pop enter cmp pop xchg shll push bound add lret sbb jl mov scas add sbb dec icebp push jl test mov pop add mov inc mov (bad) and sarb mov add dec lods xor cmp push and push adc add pop xlat stos imul xor cmp scas sbb add test jo mov fild in pop fsubl mov pop dec inc adc js ror push test fcompl push cmp stos insl mov xchg add (bad) push stos enter xchg jns clc test sbb movsl pusha xor and cs addl std fcmovnu test outsl jno jne roll add out xor pop mov rorb add xchg lret fldl adc cmp outsb cmc imul inc or into nop je add push je pop js add jl or stc xor ss imul cmp mov fisubrl cli jmp js mov dec out mov subl sub and add bound lds cmp clc cmp pusha push push xor out mov jl xor hlt or rcrl ljmp or or adc shrl fwait leave faddl inc or and stos or sbb inc fcomp rcrb dec pusha lahf push cltd leavew jne mov adc inc pop jbe and jno sub mov mov mov mov mov lods add lea subb rcll mov and je mov mov adc mov cmp sbb sub mov adc (bad) cli leave sbb push sbb add mov cmp push insb mov (bad) cmp dec or and sbb add mov cmp push add loop and fdivs mov movsb pushf stos pop lcall lods inc loope lock mov pop lds clc add or ficompl es lock mov inc add jno out shl cld cmp rcrb dec test jge sarl ret xor jecxz add cmp xor cmovo dec stc or call out mov fnstsw push daa addr16 gs push insb nop add test call jo inc stos inc sti xchg ffree dec hlt adc add std xchg test dec cmc push or sub or mov rorb push xor lods xor pop dec fnstcw add push stos add movsb movsl push jg lock (bad) data16 fsubrl arpl je js lret push nop les add push inc insl mov mov push and add sbb movsb hlt insl jno jle mov rcrb shr cmp or clc (bad) sub adc dec test movsb popa fsubs mov sub pop mov imulb pop pop add hlt mov fildl sarl and fsub sbb xchg lret in leave or rcrl mov add pop nop sbb in add aas rorb cmp inc add (bad) out dec arpl add (bad) add mov mov int dec clc add loop arpl hlt pusha pop push icebp mov xor pusha icebp and int add arpl or nop mov mov lret cmp pop rcrl push punpckhbw jmp pushf mov mov aad (bad) mov sub dec cwtl sbb movsb push push jae add xor fmuls inc or inc add aad add and mov cmpsl xor push jns fs or div imul (bad) jo loope int3 or imul jg lds repnz dec add inc (bad) adc jg sub rcl and imul adc fwait sarb cltd lret js jl (bad) int and sub xor cmp jb add loopne fadds sahf cmp fwait sub mov inc fsubrp je pop mov and ret movsb pop shr pop inc push xchg adc add aas cmp pop jp sbb iret (bad) or inc iret imul inc jl dec sub add in and (bad) icebp push mov fwait (bad) jmp and add dec adc or dec sub push (bad) in add lcall ret jl add add inc or jnp add dec pop orb fldl jmp scas push mov loopne das (bad) stc jo iret mov popf add add insl rol daa clc imul jl,pt addr16 jns jo pop push jnp cmp adc sub and add pop jae mov fsts pop (bad) or sub pop mov xor xor xor sbb movsb push or xchg push xchg in lods push mov pop movsb mov pusha sbb jecxz,pt loopne cmp sbb and je or or (bad) mov jl fidiv mov call (bad) cmp push lcall ret inc xchg jg rol stc es inc or sbb bound inc les scas push call (bad) repz inc movsl sbb (bad) jno scas add xchg int3 and mov (bad) repnz shlb lret mov adc dec mov or cmp cmpsl push lock cli sub jnp pushf jmp into jmp inc xchg mov push xor pop pushf mov jae shr push push fdivrs push sbb sub xchg sub stos icebp xchg cld sub pop inc stos inc mov push test mov es xor jno adc lret xchg test pop pop mov sbb ds int push pop clc xchg add inc sti std notl nop mov jo push mov ret xor popf jae inc inc int3 shll jmp leave roll std pop or loopne and jle adc mov cmpsl movsb fnop push dec mov add jmp int3 leave adc adc jae inc xchg xorb cmc sbb arpl cmc bound xchg insb inc into clc push push cld lret push loop or jo ljmp ffreep ja sub xor xor std pop roll test fneni(8087 mov rcrb aad push push lods sbb inc clc fcomps dec clc test add inc inc inc fs insl dec int3 mov adc fsts dec out add push cltd adc mov add adc jne add xor push aas shl push mov rcrb mov mov sti adc inc sub loop int3 xchg sbb nop jo xchg and push (bad) mov inc or movsb lret subb cmp cltd add es dec in cmpsb pusha iret ljmp shr sbb add inc mov rcll pop adc mov mov add xor and scas repnz outsl aam (bad) cmp pop in jb mov jno pop jne fs add jae addr16 mov fstpt jbe in add mov shrb adc fwait (bad) cmpsb ja lds mov out add repnz jecxz push jno pop cmc xchg call xor lret bound adc add test mov int push repz stos aam sbb jns jg sub cld add adc (bad) repnz fwait imul jne pop nop adc inc mov repz push mov shll jb repnz repz jae cltd test cmpsl sbb pop sub add es sub add and repz je and ret (bad) call cmpsl cli xchg push xchg push or mov enter idivb pop xchg add xor xlat mov mov push int3 jle or (bad) shlb inc ljmp test and mov stos mov (bad) jo dec cwtl mov mov push add rclb fdivs jge xchg mov addr16 fildl mov xchg aaa adc jl dec mov les inc xor mov dec push lock aas jmp push jno inc nop xor xor (bad) in loopne push fcomps push stos or dec pop cltd dec sti xchg sarl add (bad) lock fcomps cmp popa mov cmp xor push and cwtl add pop or add stos (bad) fwait jns pop js jmp movsl lods xchg and or ret push out jp pop pop fs mov xchg jl jb add dec (bad) mov add test adc stos lret or sbb (bad) or iret paddq rolb out add or jp out clc inc and scas add les dec adcb movb loopne fdivrs xor (bad) jo mov jae hlt dec mov add cmovge add sub inc inc xor (bad) sub addr16 orb imul adcb movsl inc sub enter fisub sub sub xchg or js add stos or enter cli fldcw dec ret or nop jg cli or les cmp cmp orb aam xor dec inc movsb or movsb xchg stc and mov out in in sub addl or inc pop ret enter les sbb hlt frstor push mov sbb push fwait push out push cmpsb push pop add out jno push dec cmp inc sarl add inc and add lea std shrl fstl mov sti test out pushf push mov rcll or (bad) enter lcall cmpsl mov pop push stos mov xor ficomp mov mov unpcklps push mov insl out lret dec cwtl rclb pop popa fstps dec mov xorl push adc sbb and sbb xor test sbb adc and movsb out inc outsl cmpsb inc add adcb cmp pusha push and inc rol dec xor dec pop cmp xor enter es xchg pop add adc mov sub jge mov js mov rolb lahf jae cmp jmp xlat dec out adc insl in lods jle cmpsl cmp (bad) (bad) cmp inc mov dec dec pusha adc enter and fwait jp xlat es adc cmp cltd fldcw lret and jnp inc dec (bad) push ret cmpsl out jns sbb (bad) fstpt scas dec add adc adc pop mov add lret adc add mov imul lods rcrl fcoms add lcall adc (bad) jo xor adc lea sbb push popa mov mov jne ds lds xchg (bad) and and adc push ljmp jl inc sbb adc loopne je sub push mov and and iret pusha lcall adc fs add out in test or inc adc rorl rcll sbb and stos mull and ret add inc jb test fs stos mov into out jl mov int addr16 fdiv shlb (bad) jno jbe and inc pushf and shrl cmc mov cld mov mov popf in add sub fmuls fbstp adc jnp (bad) sub push push or jp and adcl sbb sahf pop loop fs sbb lock add sub mov ljmp out or pop popa pop repz stc mov shll jae mov leave (bad) bound cmp movsl (bad) rcrb xchg dec fidivrl lret aad lcall sbb xchg jo and nop xchg repz xor or inc in add mov lcall push mov cli dec (bad) rclb fistpl rol mov sbb pusha popa popf scas jo mov sbb adc or adc icebp roll add jbe in add dec scas sub sbb add mov (bad) (bad) (bad) pop jl add add adc sbb inc cmp and push aad loopne inc repnz and loop (bad) xchg xor xchg push adc inc fcoms xchg jle,pn mov xchg cmp mov test sub cmc xchg adc jo sbb inc xor add hlt or add pop fcoms ss and push push int3 push pop pop xchg mov xchg dec push or mov push pop cmpsb fucomi subb xchg inc hlt mov pop xchg and and xlat enter mov std xchg dec and adc jecxz mov mov sbb fwait clc pushf out push xor cmp mov shlb pop mull lea int fcmovnu loope fdivs enter movsb mov xor push sub or xor inc dec xor inc lock xchg jmp cmp xor mov add loope fdivrs sbb jne (bad) mov mov add or idivl pop imul lret (bad) stc repnz sub adc or mov and repnz and es test test sbb sbbl pop cwtl sub xchg or rcr aad xchg or int scas js xor ljmp mov inc in mov iret pop or pushf or popf rclb add dec dec pop cmp mov xlat push dec lds enter lods lea (bad) mov lds roll sbb add xor adcl ret sub imul lods pusha and mov and in dec add jmp rclb adc inc pusha mov arpl (bad) push scas sbbl xchg or inc ficoml rorb adc xchg rcrb and adc loopne adc add cmpsb sbb ds scas orl adc push out hlt push or mov xchg and cltd or test in and sbb push jb xor lret cwtl scas sbb mov jle mov xor add addr16 pop test xor psubw dec add mov pusha call (bad) jg sar roll jl stos mov nop adc shll addl pop inc mov inc mov inc insb pop sbb mov push xchg inc movsl movsb jno add (bad) mov add add stos lods ret pushf mov sub lret push (bad) xor (bad) lock push mov test dec frstor fsubr lret arpl shld arpl ror lcall pop stc sbb rol bound sub arpl ret add lea cmpb inc xchg pop inc and loop fwait pusha adc jns mov push inc mov push xchg movsb mov adc add stos nop adc out cli push les shlb test cwtl mov inc leave clc test inc inc mov dec xchg mov mov cwtl jg pop popf cmp jnp loopne out mov ds je nop outsl jno mov cmc addb or push xorl jnp andb jle sbb cmp aaa mov js jbe fistpll mov mov cmpsb loopne inc mov mov xor sahf jo lret xor mov dec xor repnz or or test xor call and (bad) lret pop mov pop test xchg les or nop mov jle (bad) cwtl sbb xor (bad) in (bad) adc push icebp mov adc sub iret jo repz adc cmc jb pop icebp pop sub daa mov adc ds or mov add adc inc dec xchg call out jmp mov add notb loopne arpl fstps in mov mov jns mov add loopne pop cmp das lods mov mov inc adc cmp mov pop cld add ss add hlt pusha loop add inc xchg fmuls jns sub jg jnp dec jle arpl pushf add ret pop xchg cmpsl dec mov subb cmp loopne xchg add rolb cmc cmp movsb jmp cmp push or shll inc sub mov dec imul mov jno adc and jno push inc insl in and xchg icebp js lods add aam push dec daa addb hlt push cmp sbb jb popf adc sub test dec mov cs or and popf sub add adc mov adc xlat sbb aam test push pop test and sub dec add fistpl mov dec jbe pop pop jg loop ror (bad) mov icebp rcrl xchg jno pop das scas into add in push outsl sub jge add (bad) xchg (bad) sub lret stos push dec negb pop jae cmp mov sub jbe xchg mov and sbb int3 loopne dec ljmp push push (bad) movsb pop cmp inc js clc inc add xchg cli adcb call and or adc int3 jbe push jb aam add lret loopne xor cs divb aad movq xor pusha cwtl sub cmp mov mov fildl and mov fnop push daa sbb sub dec cmpsb loope jo sbb push pop lahf dec or cwtl ljmp or lods repnz sbb add mov dec add dec push adc add inc inc sub sbb add dec and adc fs cmp xlat movsl dec and or mov addl sub js xor shrb xchg (bad) pop orl shl mov enter int movsl mov sub inc test (bad) push loope sub add and xor (bad) in jg test add test mov jmp add pushf xchg sub cmp xor (bad) jo pop xor add or je in add and push adc mov mov sbb or dec push inc xchg (bad) stos aaa push sub cwtl xor and or dec aaa mov jmp test dec sbb sbbb add test inc push sbb and mov sub nop fiadd jno dec xchg mov leave xor push cs sti inc xor or sahf mov mov loop out push push das lcall cmpb inc rolb mov test pop repz sub xor mov xor (bad) xchg sbb mov out inc adc push dec loopne (bad) call xchg loope inc out ficomp add (bad) cltd rcrb movb jo (bad) inc stc hlt in fildl adc int3 xchg inc add mov xchg nop xchg add cwtl pushf fisubrl add mov in fdivr sahf add or repz add ljmp pusha xchg or xor jns pop repnz mov mov repz jb sub in in insl add pop jbe xchg add jcxz,pt test or int3 lock aam nop fmuls mov in mov mov mov cmpsb or or insb push ret dec mov rcrb inc adc rolb repz cmp insl test dec add or mov mov sub xorl mov aam aad xor ret mov mov icebp push push out dec or adc lcall push sub push hlt ja mov inc and push or jae movsb mov dec stos out aaa dec fisubr xchg push dec add adc jo scas lods inc adc out push cmpsl (bad) mov add (bad) int3 cmp mov mov pushf mov add nop sub mov rclb hlt insb pusha pop or cltd sbb sub sub test lea cmpsl adc jecxz push dec rolb in test in bound lock mov mov repnz and dec jmp sbb dec fidiv adc adc add pop cwtl rolb cmpsl sub stos lods inc sub nop sti scas in push jns pop or mov imul in mov ret sub push imul outsl (bad) adc in je mov icebp fmull test add mov cmc (bad) lock sub pusha movsb dec push jnp add sbb or inc add mov pusha cltd dec jo jno and pushf jb test sbb pushf add es or or and adc cwtl jnp addr16 shlb test test cwtl jl sub mov sub hlt xor rcrb cmp insb mov test sbb mov loopne mov enter pop ljmp imulb sub xchg pusha es and hlt int3 test jge cmp xor inc jno leave xor mov shll jo pop inc shrb mov jle nop cmp cmc cwtl nop add fwait xor (bad) pop dec add (bad) cmp adc add mov out dec movsb add (bad) jmp jb cs rolb sub leave dec inc (bad) aaa jmp mov pop pop or mov mov inc sub sbb or and rclb pop sub sub movaps or aas xor xchg lret int3 push mov popf lock sahf cmpsb xor mov cli cmp outsb int3 adc insb test pop mov adc cs mov push push jnp hlt jle jne pop je or add imul pop cmp sti or push adc adc inc lock add fwait push dec lock lcall cwtl pop adc pusha pushf xor aam jb fadds pusha ret int3 mov mov mov clc sbbl xor add cmp cmpb loope mov orb cwtl mov xchg sub daa lahf movb push adc inc dec pop push dec pop dec les pop and jnp sti xchg push inc sbb mov imul xor sub jle lret xor sub orb fwait in xchg dec pushf or lea dec or lcall loopne inc test inc inc adc and push xor fiaddl loop pusha andl mov xor shlb daa mov sub sub fstpt bound idivb (bad) clc lods fadds cmp sub insb jne cwtl pusha push sub movsb adcb add aam movsl or jo xor add add xor lods test dec mov mov aam int enter rol mov icebp pop sbb (bad) inc xchg stos nop add mov vmread (bad) cmp mov mov (bad) xor shl add push cmpsl hlt xlat lret mov xchg std add iret clc or (bad) test fdivl mov loopne nop (bad) ljmp les pop mov xchg ljmp dec ret or sub dec (bad) pusha push fmuls sub loopne jb bnd in pusha push sub xor jmp mov xor mov jecxz js sbb out dec inc cmp lcall xor rcr bound dec mov mov out sub stos cwtl int3 mov sub popf jae dec xor lahf hlt pop scas fs mov rolb mov test call lods ret sub mov sbb and (bad) xor adc decb push add cmp and pushf jl and push push rcrb xchg andb sbb or sub (bad) mov je push add sbb fistpll adc and dec fmuls jl ret mov movsb xchg sub mov or icebp dec fist cmpsl pushf adc popa mov push in pushf mov xor mov lds adc inc ljmp rorb sub or cmpsb daa xor xor dec pushf adc push or enter push and or sub mov add sarb mov (bad) jg cmp or nop inc shrl (bad) push push loopne test add ljmp mov mov mov shr mov xchg sub xchg sub xchg adc mov dec jbe dec jle test jae sbb or adc cmp inc fsubl xchg cwtl cmpsl push loopne aam aas (bad) test popa inc sbb or add jl add inc pushf data16 sub das sub mov pop aam add push inc dec mov inc mov inc or in xchg pop test inc dec sarb push pusha push add inc xor jne orb je sahf mov (bad) shll mov mov rcrl sbbl repnz daa jle xchg fadd jns adc lcall push movsb insb popa xor cmp and lods adc je les pop dec xor cmp pop lcall movsl sub sub sbb push and sbb xor pop leave cmpl mov mov test dec mov imul sbb mov inc insb xchg cltd addr16 ret adc inc pop or out and mov (bad) mul sub cld xor in xlat orl (bad) or or add outsb (bad) and inc cld out out lock add dec xchg fidivr cmp pushf (bad) fistl call inc add sbb add fdivrs sbb repz sbb sub cmpsl cmp xchg inc pop inc mov int3 sub dec lock or test xor mov push add or adcb dec xor cmp adc xchg jl jg add fbstp (bad) or pop push add adc xor mov xor es loopne orb cs mov push test out loopne xor int sbb mov push jns rcl punpckhdq or (bad) push scas or or outsb pop rcll cld sbb jno sub add push repz cmpsb enter xor imul inc sarl call dec jle sbb mov out lds pop pushf insl push ljmp dec test aam push xchg imul mov push xchg xchg push and mov jg push push orb cwtl sbb push jg pop push arpl push shr leave pop imul adc (bad) divb movsb push lods lret andb and andb les aam int3 fldl push call lods push sbb add daa lods int3 xchg outsb mov mov (bad) xor and stc faddl clc pop push mov and je sub sbb rcrl pusha and movsb je cmpsl sub mov inc hlt or cmpsb test dec xchg xchg push mov (bad) mov mov out in add pop (bad) jbe sub xor push push clc fcoml mov xor adc enter xor dec icebp push inc push andl jle fildll call push fidiv mov inc fnsave jl dec fadds push shl (bad) xchg lods push xor and inc push push and fcoms xor cmpsl mov fiadd or pop jno mov jmp pop (bad) test xlat add xchg out mov inc pusha insb (bad) fildl jns sub xor adc lcall push test fs sub (bad) xchg or or sub clc pop xchg lods cmp test xor imul xor (bad) adc push (bad) lock pusha adc ja mov dec add sub add jle fldcw cmp pushl movsb les jns (bad) pop dec adc xchg je add xor and rorb xor and bound adc xor add aaa mov aad inc adc bound (bad) repz test es cmp xor movsl mov lock and sub xlat xorb mov cmc cmpsl popa add cmp into daa xor ss aam xchg les mov adc arpl popf sub adc xor nop jge push nop cwtl dec xchg add stos lahf neg les xchg dec insb add pushf push loopne lret add jl pop mov clc call pop xor test push mov pop add mov clc es mov loopne rorb mov aam into pushf push add sbb pop jge cmpsl pop lcall and jle push sub add sti xchg leave add and add arpl sub pusha sub mov movsb sbb push lret fnop jo sbbl add adc push add mov test add inc dec aad dec enter shlb movsb xor nop popa push sub shlb adc daa orb cltd loope jo lock pop lock jbe cmp fist xorl out or notb repnz xor inc test aas (bad) dec mov rolb andb mov jnp adc sub fsubl ret cmpl inc jmp and push div and lea cmp movsbl and shrb push xor mov sarb out nop addb aad xor mov jae dec in jle or je jecxz mov and mov mov mov mov mov mov std mov fwait jmp mov inc sbb (bad) xchg jmp pusha je xor (bad) les or cmp mov pop roll jo in push sub cmp mov hlt and add cltd dec adc dec dec shlb xchg int3 shll adc out add xor sub leave sarb rcr adc cmp cmp add fsubrl dec cmp jmp in clc popf push rclb push stos adc (bad) shll in rcrb orl inc fadds sahf clc mov lods in mov add pop mov adc or (bad) jo push mov cmp mov mov imul daa sub cmp pop mov subl jl mov aas sub loopne fisubr enter adc and inc lods sahf pop cmpsl sub insl mov enter loopne rcll js mov mov xor lock add (bad) (bad) and or iret xor dec or sub jmp push xlat adc add dec ret adc mov or add jns sub (bad) mov mov sahf cmc or or mov add dec mov jb push jne mov je and jns mov adc not and popf cmovo adc add cmp jmp mov (bad) movsb clc and dec mov daa pushf inc add xor clc out xchg subb add jg adc inc mov cmp mov xchg add aad xor in mov push pop cld or test cmp xorl (bad) in jns ljmp mov call jecxz adc mov cltd int push jl add loop loopne out lret daa dec push test loop sub add js (bad) jl addl arpl xchg adc xor ja sbb loopne jmp inc sahf push sub pushf cwtl sbb add loop cmp cmp dec addr16 add cmpsl or clc ds pop push pushl or std (bad) jbe add sbb test sbb or add push push addr16 (bad) lock push or inc movsl insb inc int3 mov adc add sub xor sbb mov ljmp (bad) push adc mov test sbb xlat adc mov add repnz imul xchg movsb in mov shrl in je cmp cmp pop pop outsl dec xor add pop (bad) lods sub (bad) push enter adc test test cwtl outsb xor orb adc add fwait lea sub leave iret jb loopne push add scas movsb nop insb mov add movsl xchg clc and cmpsb push mov adc push add pushf popf sbb mov aam push mov jmp fs shrb data16 scas into daa add dec lods cmpsl push mov push shll test or inc cwtl dec (bad) imul push (bad) pop sub orb clc test and mov xor movsb add jo sub mov xchg lock jbe pusha sub stos das mov pop sub shll or arpl dec movsb scas add mov add cmpsb movsb mov pop popa pop pop loopne jmp (bad) (bad) dec sbbl (bad) jecxz ret inc add inc out add jle out (bad) sbb add add popf cmp adc jnp negb movsl push adc push (bad) faddl xor test ficomp sbb shl ss push mov mov (bad) inc push sub mov add sbb cmp xchg and pshufw sub or fsts aam and cmp lret mov fwait jge nop sub add inc leave icebp sbb mov js sbb mov insb jo pop (bad) int3 and insl mov sbb jmp jns adc xor icebp mov lock stc xchg adc jo pusha les add fimull fnstsw (bad) xor mov cmp mov loopne or mov sbb jnp cmp rolb jmp inc dec mov push in test push call dec sbb sahf and add daa icebp fimull push or hlt mov xchg sub lcall in dec enter (bad) (bad) mov ds clc cmp out pop pushf cmpsb and xor sub add mov notl push out lods mov fistpl inc sub (bad) pop arpl cmp aas sub push sub inc jl aas rolb jl xchg cwtl dec mov mov lret add add xchg or mov inc (bad) pop add fdivl outsb or add pop push dec mov inc xchg add and cltd push sub and mov inc loopne mov mov addb dec mov insb add insl into in pop mov jle pop xchg push sahf inc lods add out test lahf add cs xchg mov add push xor push movsb or xor js shrl mov jo inc insb cli jl dec mov fs jle pusha (bad) xor insl add loopne cmp daa xor jo xchg lcall xchg mov rcrb repnz xchg insl and loopne or outsl pushf mov adc mov add jns mov test pop xor push adc or push sub adc sub (bad) push aas adc sbb mov sub les cmp adc sub stc and and cmp mov scas rcrb mov enter pop loopne sub popa sbb cltd xchg mov test in je mov jge je lods (bad) test test pop push (bad) push repnz mov add dec fsubl fcmovbe pop or jl or sbb pop xor test je cmp mov add out dec or sub push cmp dec or lds test aas xor js shrb dec dec in pusha aam sub dec movsl aam sub xchg repz xchg addb loop lldt sub push mov roll hlt push pop nop push pop jno and (bad) sahf sub aam sbb add scas mov (bad) xor jl add test cmc es or mov add xchg jb mov jno or les test xor rcl (bad) insl push inc add insb push adc pushf jb leave (bad) or sub add xor adc sub test mov or (bad) lret out inc rorl hlt test sub or (bad) stos inc add sti ds dec sahf les (bad) mov out push or pushf push sub adc dec call add cmp sub pusha daa bswap nop je sbb add adc adc mov xchg or inc xchg adc mov rcl ja lods lcall jns data16 mov (bad) popa push inc mov xor mov add sub mov pusha xchg icebp into dec jo je clc arpl in xor test icebp cmp lds cmp fimul aaa mov xchg add fldcw sub xor xor push gs popf pusha jbe jns add push cmp cmp nop dec rolb mov mov mov adc dec and mov xchg inc pushf and pop cmp sub daa mov mov add jmp cmp aam pusha lods pop (bad) mov push pushf add jb mov xchg mov sub inc pop add imul cmpsb loop and xor adc xor imul push test in inc push fldcw fwait mov mov shlb add test cmp or sysexit and dec xchg mov loop lock sub push cwtl adc jne les add sbb inc rcr insl adc mov insb jo pushf push bound rclb pop leave pushf add jecxz inc and xor mov repnz cmp (bad) in jge incl xchg mov inc insl mov cmc sub or cmp inc sbb out js xor push add out cli dec xor sahf mov push mov or fldcw (bad) xor test iret imul data16 pusha leave mov fiadd sub sub movsb pop cmp lock clc sahf clc je rolb mov testl sti inc inc mov push fdivrl cld or mov (bad) push mov (bad) nop push arpl subl cmp sub faddl int testb insb movd mov fsubl hlt and or dec roll xlat mov mov test movsl pop in sub jle les jo sbbl cwtl add scas dec test stos xor cmp inc inc push mov add es loop inc lods enter mov mov xchg icebp hlt xor nop or pop dec push aaa movsb xor stos push pushf (bad) xor mov cwtl xor add (bad) rclb hlt lret sbb add dec dec mov cwtl add lahf xchg mov in add aad add xor and jae ret push inc xabort pop sbb mov scas jl mov add mov add mov pop and push adc icebp test push add add dec adcl ret mov or mov xchg sbb scas xor xor fimull lock xchg rorl xor addb jl dec sbb dec mov cwtl sub xchg mov sub mov xor push sub mov in cmc and push test cmp movl ljmp call cmc mov mov loope xor cmp or insb or sub fdivl xor loop push sub in xchg add push sub (bad) inc movsb insb or cmp cmp popa xchg push in push into push stc nop (bad) lahf leave test xor jns pop loopne or adc xchg scas add loope dec cmpb lahf shrb loopne mov mov lods addr16 add cld cltd xchg pusha leave mov or fidivr sbb mov fprem inc push or add pop pop (bad) adc jle inc xchg into icebp push cmp inc call push aam add inc cltd mov adc and jo addl rclb jb add mov ds jae dec push xor dec daa insb cwtl jo mov push dec cmp hlt stos cmp xchg and in fdivrs or mov add sub jno and std add iret in in or (bad) adc lahf add movsl add cmp pusha dec jo decb xor push push jecxz xlat push add inc jb sub rorb push inc dec scas mov clc mov jmp sbb pushfw out ffree mov call jbe xchg fidivrl rolb push aam in pushf add test aam pop and cmpsl aam adc lock sbb es in mov mov xchg out jne aad mov das push add mov jb sbb adcl push std fbstp and lret inc testl in sub cmpsl jne and std movsb ss shll hlt lock or lock rolb outsb sahf daa enter cld ja pop or sbb (bad) ror mov movntps push jne inc pop int add mov psraw addl or outsl jge lcall or lods xlat imul mov pop push mov test icebp pushf inc mov adc aam mov mov imul xchg or add loope ljmp out cli add adc jle push movsb push or push scas test mov lds lea add divb add push add xor cwtl and pop lock cwtl mov push dec mov and ficoml in lods clc or cwtl pop addb insb adc pop jno mov (bad) mov subb cmp ss movsb mov inc outsl bound jb and (bad) into (bad) stos adc adc lods or dec inc ret lock test insl mov popf add std mov and outsb add and test mov stos adc imul and pop pop jb std xor lea add inc cltd mov jge hlt add (bad) sub repz add fs leave mov inc stos outsl inc add xchg (bad) xor mov cmp cmpsl fdivl call dec mov jae cmp push or fbstp xchg notb fadd or aam push sub sbb fadd cwtl mov test into mov cwtl dec push push add clc and insl sbb ret into or mov add mov sub andl jo mov mov sti add lock lea shlb sahf xor pusha xlat xchg mov sub sub adc add in stos test adc mov sbb cld fidivr cmp or mov push adc mov add loopne sahf aaa jb sub sub cmpsl (bad) xor jecxz sbb sub add popf jae push (bad) aam xchg cmp ljmp jno add adc imul outsb pop push dec (bad) fs insl insb push and arpl test icebp jne add and sub add mov xor mov add add gs jl cmp jl add or cmp inc fdiv cwtl aaa jg add mov adc jp pushf cmpsl push insl push push mov cmp adc imul or pop nop push jno hlt mov or add aam aad or xor pop xchg mov add fstpl push mov insl cmp pop sbb push pop movsl adc iret sub or dec dec mov (bad) push mov sub arpl js push loop stc add add subl out loopne lock jno add daa fisttp xorb and adc or mov push outsl and xchg mov jno jge inc int3 hlt adc add mov fisttpll cmc push cmp xchg imul out sub sub push xchg addr16 rcl inc mov movb and sub jecxz aad and imul xchg ds mov cmp loopne test mov popf add outsb orb lea add add adc roll xchg inc ret mov and add cmp sub stos add inc and fcompl jae pop mov clc popf call in dec popa iret fsub jns icebp sbb inc xor mov mov or and adc ret test add inc jp sub or jl xor adc lods ror push mov mov loop add jbe popa ds and cmp mov enter int3 mov sbb cli cwtl push mov imul cmpsl stc pop mov mov push std cmp push rcl js pushf add push in pop loopne,pt (bad) mov xchg pop add sbb xor push and jae xor cmp xor inc fwait aad mov and rol add sub sub pusha adc pop add xor jo sbb cmpsl in rclb out sarl lock cmpsl or cmc mov (bad) dec leave pop mov or loop in into fistl xlat bt pop adc iret popf sbb fwait int lret jae,pt and add sub cmp xchg push (bad) aam cmp fistp test insb outsl sbb lahf jp push inc sbb or leave stc push xor dec in mov mov push loopne pop xor pushf inc add and or inc ss pop mov pop lds push pop cli mov ret (bad) popf jecxz xorb pop jbe xor loope and sbb in ljmp xor rclb pop pop add adc inc outsb inc sahf rolb sar int add aad (bad) jo negl xchg in mov bound mov dec push pop sbb cwtl xchg push ja add cmpsb jae or xchg and xor push jo mov pop dec mov cwtl gs fbld imul mov xor adc cmp dec insl pop sub test lods mov and in sbb add mov adc push sti pushf or mov mov or push (bad) mov nop add cltd push add jmp push inc jno mov xor pushl cld cmpb out and pop pop fistp in cmpsl out push adc je mov rorl dec std cmc and jo in (bad) xchg in add adc loop mov popa mov dec shlb test mov sub lods fcomps inc push pop nop mov dec fs adc aam add repnz in add push in lret adc mov pop (bad) (bad) jge mov scas pop cwtl inc xchg jo addb js lods and cmp sbb xor ror push cli gs mov pushf (bad) xor sub mov sub in stos std inc sti xchg sub cld add and sub fldenv fild cs mov or sbb (bad) jb xlat and adc xor addr16 in inc xor add in out add ljmp cltd ret xchg addb dec add push pop xor and int push or push xchg mov push loopne jp insl add lret xchg lods movsb pop dec out add xor mov leave shrb sub push jno mov outsl or mov pop mov out jmp in lret ret negb lods subl mov mov sbb add enter add je or icebp jge push push jl add xchg cltd sbb push hlt lods mov clc or and lds cltd mov cmc jge push outsb (bad) int imul je or push mov dec or and pop orb lds adc or sub outsl call add std mov or (bad) mov add pop mov sbb dec add xlat clc sbb rcl cmp xchg cli es dec and sbb or cwtl faddl mulb out fcoml pop pop push cli sub iret test call fstps shl subb mov xor nop pop add mov pop sub mov out pop mov or and (bad) mov adc dec es (bad) jecxz jae sbb cwtl sub fnop dec inc xor or imul sbb icebp mov inc xchg scas cmp mov mov adc mov call lahf mov movsb mov sub dec sub insl stos test inc outsl loop loope xchg fdivr adc ss aam xor int3 add clc fisubr popa cmp ja call xchg mov and add popf fmull clc out pushf add aam inc pop xchg in cwtl enter and cmpb sahf scas cmpsl or test or cmp gs pop or push cmp shr cmpsb and insb sub (bad) js xchg leave dec jns inc or push inc jl lods mov fsubs sub push pop mov sahf jmp pop or cltd out or pop xor sbb mov sub pop aam xor cmp fnstenv push lret mov add dec test mov mov out ja ljmp add rcl cli add inc insb pop in mov inc inc cmp add mov jne fwait add stos xchg xchg js add cmp jge add rcr xchg cmp push int3 add jge aaa les jne sbb hlt push je xorb icebp cltd lea mov jl dec add mov mov cmpsb lods jbe aam pop or mov hlt jnp iret je sub xchg fcompl and adc mov mov adcl mov push sbb shrl add jmp shlb mov jo stos (bad) mov or test insl cltd add rcll push inc (bad) cmc aas mov mov rcrb pop add inc dec js and inc call cli jnp push sub cmp jnp or mov nop cmp subb lods push fidiv or ret cltd aaa das sub cmp push leave incb dec lods addb inc cmp inc mov mov jl pop shrb out imul push push inc push test into mov mov cmpsl or sbb pop cmp jl mov push inc mov ds aam outsl inc xor test add es pop xchg outsb shll adc ret jne or cmpsl out add (bad) adc loop mov mov pop cmp loopne lcall pop and mov jns inc push pop push sub rorb or hlt add lret enter lcall ss xor jnp mov push xchg and fs or fcoms mov (bad) or call aam push mov mov fiadd push jne push enter mov js xor sub rorb mov adc (bad) xor add push mov fldl xchg or nop fild or lds fs jmp adc shrb cmp and arpl add bound clc inc xchg popf repnz push in adc and das push les add inc mov and fmulp inc push mov and sub int3 jge mov cmp pop aad mov xchg xor or dec jp xor mov mov mov test pop xchg int3 or punpckhdq ret aas ret push test xchg test sbb loopne xor mov cs jns in stos pusha out dec mov adc add add and or addr16 push cmc xor je imul test mov jne adc pushf push inc jmp sarb mov bound mov sbb fchs mov jl js rorb and insb xor cli mov ror cmpb sbb movsl stos sbb mov mov dec push dec sahf or loope cmp mov pop mull sub fiadd xor pop mov test das ds push insb or call jnp test cmpb roll negl stos ss xor inc int3 push es add daa popf jmp xchg sbb (bad) xor jp push pop aaa dec pop faddl sbb call loopne mov xchg sub push cmp rorl and dec mov adc push das divb sbb mov out dec mov pop outsb pop les imul bound nop enter jg sub xor lahf jl push push or xor mov and enter loopne cmp add jp sub cli jg pusha inc and inc movsl orb hlt and add xor fwait push sbb mov adc dec or add mov inc pop add xor cmovs ds inc lahf cmp add (bad) mov adc mov and cwtl lret xchg or mov popl (bad) fsubl jl mov out inc push xchg andl pusha leave sub je jbe add xchg daa incl shrb iret inc dec sahf sbb mov inc sti and sub dec sub mov pop cltd mov ror add lods xorb roll hlt lret lea add xchg push jnp out adc push lahf add shrb sbb pushf xor dec xchg adc test arpl xchg jnp nop sub jmp in mov jnp jo test loop push adc inc dec mov enter add mov fstpl in jns push (bad) movsb dec sbb jne fucom push roll cmpb std mov imulb cmp jns add add add mov stos les fcmovbe pop rorl mov inc fsubrl sbb sub add add mov push je popf dec adc push mov lock push subb cmp fidivrl or mov jmp xchg add add aas mov mov fs cmp add and dec xchg inc test add ret inc pop sbb mov pop loopne or dec pop and dec adc or and xlat fsts movsl mov enter sub add dec nop ret bound je mov or and sub or dec arpl adc sbb cmpb sub fs cltd popa mov jae add sub mov clc inc in and rclb xorl mov xchg incl add sub loopne les pushf adc sbb jl ss add fs sub sbb mov and jne mov insl pop mov add xor in push cmp int or pop sbb inc iret mov scas sub and dec je push pop orl mov (bad) enter jae or incl mov je fdiv sub fnstsw adc lock ret nop mov mov dec pop (bad) inc addl cmpsb fistpll aad jae sbb roll add dec add or rcrb xor add push mov inc les inc test nop aam mov pop cmp xor cltd cwtl scas cmp pop lcall sbb or inc ret lahf sbb or mov pmaxsw or addb stc pop sbb imul add xchg in add out add mov clc call pop mov mov (bad) mov lret aam incb rolb jg mov cmp adcb icebp pop jbe adc syscall xor bound xchg mov sbb mov pop into out rcl (bad) or xchg dec jge add add movsl mov mov cmp mov or mov and and pop daa popa pop fdivl pusha xchg and sub and rcll inc and mov lock lret dec push cmp and sarb call loope imul sbb das push sbb mov loopne test xchg cmp es lods orl jno aad mov or mov test push ret imul adc test cmp dec lret xchg cmp sub lcall inc and sbb (bad) aam call pop pop out mov add inc fdivs clc insb or fs and outsl mov shrb xchg mov push add lcall jns faddl dec add roll in jl insb dec xchg sub pusha mov dec mov inc test inc arpl push lret mov jnp out xchg hlt cmc das cmp popl rcr push mov inc inc sub cmpsl and insl inc sbb pop (bad) addr16 or test sbbl cmp sbb addl cmp jns add xor add push cld clc fsubr cmp dec mov ljmp add cltd push cli (bad) add out shlb std lret xor pop rolb push loope addr16 call loopne adc out pop mov or ret cli aaa add shll into add inc pop pop dec lods xchg sbb loopne push (bad) and nop sbb jmp pop add mov add cmpsl dec pop or jo mov in add add adc loope pop (bad) repnz lock inc daa and (bad) in pop ret or pop test xor mov js push and je add mov jl xchg hlt in sahf lock outsb sbb pop mov cltd add push push mov iret out in push shlb sti mov or push lahf add aad rcr ret adc int push fcoms stos jecxz adc add test add jmp jecxz mov call fldcw andb divb xlat arpl ret test or lahf xchg mov xchg jecxz shl cli lds inc add add add (bad) bound pop mov pop pop and pop cwtd mov jo push orb fcoms push jg xor pop adc inc mov fcoms or add mov mov xchg test add mov arpl jns push adc pop pop pop mov (bad) ds mov jb je je leave pop push add or sub xor adc in push loopne jo push addl aaa in sbb add lahf xchg pusha xorb lock sbb pop add mov inc mov adc push adc insb push add pop out add fs (bad) stos sub in add mov adc mov sbb (bad) sbb fsubr and lret rolb jp push pop pop mov mov or or shlb xchg mov xchg xchg sub sub sbb add mov and lods inc fs xor or dec pop lods add inc inc push push test gs sbb mov cmp mov mov xlat inc loope push fs dec outsb inc in dec icebp mov pusha adc cli icebp mov sbb jmp jecxz mov mov pop iret pop pop pusha bound and imul and pop add negb sbb adc inc arpl icebp mov inc cmp push (bad) jle,pn add (bad) aaa mov mov adc shlb pop add into cs neg adc inc aad xchg loopne add pusha hlt mov adc test cld inc push dec insb test inc push cmp push pop pushf cmp inc in icebp (bad) dec mov add or push inc movb or fwait inc rorl call xchg xor pop xor pop (bad) les shll lds sbb cmp repz call mov pop mov mov mov dec pushf icebp std xor and scas or pop lea add xchg daa bound inc adc dec push stos lock (bad) lcall test push add mov add cmc pusha (bad) jbe data16 fdivrl cwtl or push nop or fsubrl (bad) pop stc cmp push lret ss pusha jmp rolb mov dec hlt xor in jle pusha lcall sbb adc push mov imul add inc int3 into loop cli adc pop cmp push jo mov (bad) into or jne xor mov push std mov push dec jmp push fiadd xchg jo adc inc lds icebp ss or push hlt das nop adc out push lea jge mov imul add outsl and push dec fnsave (bad) stc push mov adc sbb fcoms loopne inc sub cmp movsb add test cmp pop sbb mov es sbb mov xor data16 imul add je fdivl push (bad) sbb and aad mov adc sbb fs push xchg and inc fs enter push xchg mov lods mov aaa add xchg dec icebp adc cmp in adc adc nop repnz into cmp sbb xchg sbb pop jno andl and in or and cmp xchg adc and add xor and outsl sbb mov call xchg pop mov cmp dec pop dec lods data16 pop rorb shrb jmp cmp xor test test and nop xchg (bad) mov inc (bad) mov jp dec and enter int daa rolb (bad) mov rol push jecxz cmp xadd ficompl mov imul sarl stos jecxz pop xor and mov and aam ret movsl or and movsb pusha cli pop in cmp test xorb push sbb cli arpl mov cmp outsl (bad) mov add or push (bad) ljmp enter or dec or clc inc jle push mov push push and sub je repnz mov dec adc nop xchg and scas je lret mov rol xchg xchg les push add gs nop mov lods pop sbb or and (bad) jo dec mov int3 inc rcrb sub and pop loopne sbb scas mov in push lea cmc or mov mov push add or pop ja xchg les push fdivs and inc xchg and xor add call fcomp mov sub loopne dec dec and out or add mov pop lds pop push int3 add std ret out cmp (bad) dec adc add popl shrl (bad) xchg ljmp inc or cmp or imul xchg add insb dec fdivrs pop cmp aas (bad) mov add xchg adc mov imul pop push fsubl or lds pop andb test adc fiaddl sahf lods sahf push rorl pop nop sbb push dec pusha les loopne stos pop iret lods sub nop adc xchg and es mov jl mov shr adc clc ds sub data16 push pop add push mov les sub cmp pop jo popf nop jns mov dec cmp and push (bad) sub daa fist pop pop fstpt cli xor int gs and inc adc jmp mov mov sub lahf mov in lods xor data16 xor inc cwtl xchg je add jb and jmp mov stos pop mov rcrb fcoml adc bound les or adc xchg aad push aaa pop in and cwtl adc in mov fisub cmp ds pop bound or sbb idivb ret jno adc shlb rcrl dec lods enter loopne les adc dec xor sub test mov push fdivs and and cmp pushf scas in mov fstl pop gs jo mov notb dec adc add pop xchg pop enter lds aaa pop aam sbb jl sbb sti mov cli pusha jo push std outsl fldcw mov nop mov inc xchg add pop and push sub mov sub xor push orl jl mov es in out push cmp sbb test sbbl push add dec sar mov xor nop out mov and popf lret roll sbb stos adc adc lea sbbl jb sbb cmp xchg dec xchg inc dec mov movsb loop adc mov push pop or and mov mov xchg ds lock sbb arpl adc fsubrl push outsb ds fwait pusha mov dec (bad) and sti sbb and fisttp sahf pusha cmc jns xor out add and and test xor popf rolb es push mov pop xchg pusha add aad clc sbb es movsb mov xchg xchg loope test or nop int lods cli sub jno mov xchg int loopne mov mov mov sbb jecxz in pop inc add mov mov pop cwtl pop xchg jmp adc or inc push mul push and scas in push jno sti add (bad) hlt nop lods lock shrb xor push leave mov outsb inc sarb (bad) popf rorl inc in loope lock add jp mov push cmpsb mov in add inc xlat mov aam rolb cmp cli push cmpsb mov cmp lcall mov sub (bad) cld cltd push inc loopne sahf dec leave mov insb add (bad) fldcw loopne dec lret xor inc test das lock dec add xor dec test (bad) add inc mov pop xchg and xchg push daa js cmp xor xchg mov popf or lret sbb addl sbb (bad) mov or cld in test inc dec mov ja add or pusha std lcall stc stos xchg cmpsb add jae push (bad) scas jae adc and dec mov jo clc adc sti in in add mov ds jo cld imul xlat sbb sti (bad) lock ds in add adc pop add jbe add sahf lcall rol arpl mov rorl data16 loopne nop add xlat lods cmc int mov stc or add lcall out mov fcomi pop aas xchg adc dec test repz lret cwtl mov add hlt xchg and es (bad) in (bad) fidivrl scas or call fdivrs add movsb lds add add mov jp add jb mov pop inc jl fldl (bad) xchg popf xor sahf fwait inc mov add jg cmp loopne xorl push sahf pusha add test xor cld inc adc insb xchg xchg rolb push jns jb lret pop add out inc loopne int3 nop lret div fstpl xchg jne sub add push push sub add add xlat leave push push push add add cmp mov add sbb fisubl orb mov jl sbb add call and add adc jp movsl lock dec and (bad) xor dec xor sub (bad) mov data16 ljmp and into or mov movsl add imul popa test add out cmp bound cmp lock popa aaa sub pop rolb sbb mov jge mov loope mov fsubs add jl add mov aad (bad) cmpsb add mov pushf cmc sbb (bad) sarb enter add ret pop add push (bad) and (bad) inc insl sbb sub fdiv add mov pop mov iret add add in add push into mov xchg fwait imul (bad) dec shll repnz test test pop and or mov sbb mov sbb fnsave mov add out sbb add pop xlat cmp cld ret inc int push mov add inc arpl xchg mov add rclb adc xchg xor out xor push aam hlt add negl push add cld imul sbbl pushf adc and cmp sbb xor aad enter jne dec dec adc inc in fidiv jecxz inc pop push cmp ds fwait lea cmp xor sbb add aas jbe inc pop ret (bad) mov mov sbb xor call add jno and inc inc or mul testb ss adc ret sarl aas mov sbb ljmp add (bad) in mov push cmc arpl add outsl xchg rorl mov mov mov lcall lea repz lods cmp or and inc fiadd cmp insb add lcall jge test add lds jp mov enter and jb add inc (bad) mov das cmpsb mov test dec add inc arpl cld imul cmp xchg in nop clc dec das cld push xor xlat scas out add sub mov adc (bad) add cmp stos lds test subb cltd push jbe loopne pop aas std loopne cltd scas xor clc test cmp dec adc test imul or nop enter enter testl pop scas repz pop mov dec jmp mov push into cmpsl ret flds mov lahf dec sbb cmp add add mov xchg inc test cmovno pop or lret push shll repz add loopne dec sti repz mov inc test sti inc enter ja add fldcw or cli ljmp xchg rorb lock pop sub mov mov push (bad) hlt test sbb pop cld rolb enter xchg mov call movsb pop adc scas (bad) pop xor popa pop cli mov mov shlb mov and cld iret xor sbb inc lret jne cmp add call push xchg rcrl or in test pop mov jge inc pop (bad) insl data16 and push jl xlat mov test add pop mov rclb pusha lds cmp sub mov adc fldl icebp iret xor xchg add dec or push xchg and push test sub sahf cmp rep icebp leave inc or dec int3 nop insb and test decb add mov fwait inc dec mov loope orl or mov sbb jo test adc add jae ret mov mov int3 insb push push (bad) xor and pushf pop repnz add cmp add dec test add sub fsubr lcall outsl add loop inc gs ds dec pop ret inc lods inc cmp (bad) dec test jl dec cmpsl lcall or into mov xchg xor push ss (bad) je push fwait xchg fsubl aad or test stos orb aas mov sbbb clc add xlat add dec push iret push pop xor cmp push add or mov hlt xor sbb jl mov adc (bad) cmc ja fdivr shlb jge adc push sbb sbb ficomp aad andl mov xor out fcomip mov rcrb mov das jnp dec mov lret movsb mov xchg les (bad) xlat fildl jg sbbb inc sbb or ficom jae clc xchg or stos and xchg add cltd in jb cmovp in mov lret pusha mov push (bad) and jge mov mov lds cmp add or jmp push js jo push dec sarb (bad) adc or into addl (bad) mov inc push sub jo xor ds and xor inc addr16 add push xor sub jg or jp js add stc inc movsb cwtl mov add fs lret xor inc dec mov sub mov (bad) cmp js je lcall (bad) sti popf mov cwtl add repnz cmp mov dec stc pop rol push enter add sub pop push ret test andb cmp ds pushf testb out add push mov push fimul shll ret out push xor pop sbb jmp lret out mov xor add repz sub clc and pop cmp add flds mov xor adc push in fsub add xchg lcall jbe mov adc pop add sub adc adc xchg and sub mov ss mov inc or mov xlat adc (bad) and (bad) das dec xor push adc ljmp inc mov cmp loop inc mov jbe nop cwtl jmp loope mov addb pop std ljmp mov xchg sbb xchg add cs xchg sbbb push mov dec pusha pop push mov je daa dec inc jns inc mov test add mov je mov xorl jno inc movsb xor in hlt movsl dec dec cli and push (bad) imul mov sbb sbb popf jbe outsl leave and adc aad xchg hlt (bad) aam push test and ret ss arpl faddp fbstp mov sbb sahf and je sub sub mov and jle mov add frstor fcomip adc adc ret pop sub mov call in int3 mov mov shll or pushf add mov sahf add (bad) hlt cwtl leave sar and arpl lret cs addr16 mov (bad) jp pop sahf xor inc into and dec mov out popf rclb or sub mov xchg inc push popa pusha lea dec test mov dec xlat inc adc push sbb lock pop or movl or cwtl out adc (bad) mov pushf pop inc sub js fiadd push xchg out dec add jns add mov lds adc test lods add jecxz and (bad) ss in clc cwtl add lcall and jmp and es (bad) notb pop mov adc andb int mov xor cmp xchg in sahf dec nop and movsb arpl jno xor lock iret lock lods daa lods mov add sub pop aam (bad) pop fsin dec cmp loopne adc push cs mov imul xchg cld rolb mov xchg or xchg pop and pop clc jg lods pop mov add out xchg push loop mov and out add shll aaa inc mov jecxz sbb pop out lret das cmp in cwtl dec inc add adc setp xor xchg sbb inc int3 cwtl popf add (bad) sbb ljmp jmp mov out add push daa dec xor jmp mov pop les (bad) push sbb loope cmpsw xor pop fisttp pop cli testl adc aas (bad) sbb xchg dec imulb xorb (bad) jg xchg inc jb fistpl cli movsl iret dec add jmp test lret lods inc arpl push je sub dec sub add cmpsb in mov add (bad) cld movsl scas aas and mulb outsl jno add cli (bad) aam hlt andb mov add mov add jbe sbb repz je sub mov and pushf sbb mov ret or stos xor xchg sbb pop mov add jb push movsl mov je mov ss test dec js dec mov rcrb stc ret xor sub inc inc sbb cmp sub sbb mov dec scas movsl shlb inc hlt dec and xchg inc repnz cmp add outsl iret cmp pop cld loop mov dec or addl pop jo cld (bad) clc test (bad) sub or movsb loop cwtl and sahf jbe add lods pop dec jmp push nop hlt stc incb add ljmp or xor and jbe mov hlt fisttpl pop lds adc dec out add jae mov ljmp stos shll in cli je add bound jg xor rolb cwtl add xchg jmp sbb sbb dec movl fcoml dec jo test fisttp add and cmp clc arpl outsb movsl cmpsl into mov jp and lods aad std jecxz outsl sbbb or mov movsb in add repnz in jo adc jl mov xor add jp nop/reserved divl (bad) insl fyl2x rolb (bad) xor add push jg adc inc sub sub test add and cmpsl jno subb ds mov movsl mov outsl and add stc and mov and clc adcb sbb mov xor imul mov sbb inc add sbb add or testb add lock push (bad) stc dec pop xor adc mov adc and mov sub adcb and out adc add fstpl enter push and pop stc jnp loopne dec cmp sbb mov push sub mov pop and or cmp and callw pop sbb add mov add out mov call fmull xchg icebp jmp push (bad) xchg pop xchg (bad) int3 fldl jmp jecxz aam sbb jg dec push xchg pop (bad) xor mov cli add mov mov or mov add push xchg cltd enter int3 aas cmpsb add lret dec rclb ret andb outsl jo orb clc fsubrl rcr and add adc xor mov jge mov xchg imul dec dec add insb lahf and add test xchg imul test fs add jns ret les lahf inc jne adc mov test lcall push aaa jns ja,pt xchg testb add std mov lods testl ret inc mov and mov loopne or push push jmp (bad) xchg xchg mov sub mov pusha dec test fs mov int jno and xor xchg and inc jmpw imul aam (bad) xchg mov nop and mov pusha incb ljmp push xchg int3 pusha add jns fistp mov mov bound adc stc sbb fsubl or nop pop push fadds lods and stos xor jg daa or jno,pt adc lods push add aaa (bad) (bad) arpl sub adc mov cmpsb mov jb mov test or imul popa push icebp mov dec inc mov add (bad) push div push add mov nop and (bad) mov je movsb xor pop in hlt mov or push cmc pushf pop insb in scas add mov xor xor lods add dec call arpl sbb lods in in push nop xchg faddl scas repnz pop mov mov sub outsl pop dec xchg or sbb sbb fstpl imul out jns fcompp adc fcoml mov dec rcll mov pop orb jle test pop cmpsb stos xor lret sbb xchg push pushf sub cmpsb fs pusha pop call jb lods push ss dec and xchg cmp add scas mov test add mov xor and adc mov faddl and add sti (bad) pop out cmp psubusw sub orb in and inc inc pop pushf jmp push or shl adc js scas repz fiaddl loope jae lods shrl pop (bad) xor stos jno rolb dec mov in mov adcl inc pop sub lret or xchg jne sub lods xor or subb nop xchg mov movsb je cmpsb jns dec jae movsb adc mov (bad) cmp (bad) sbb mov gs orb ret jo cmc mov (bad) xor pop int les dec out xor dec js mov loopne enter nop mov divl mov jo daa pop adc xrelease adc ss repz (bad) jg aam scas and sub cld loop add sub or and or push mov mov ljmp dec (bad) pusha pop out leave adc (bad) in jnp add inc fisttp add jle cmpsb fdivr jno push andl cmp js es lods dec jmp xchg pop cmp lods fwait and or xor mov or inc push scas lods pop xchg mov in mov cmp test mov (bad) jae popf das and dec fcmovnb es dec sub mov and push in scas push lods add es and inc inc enter add jle out adc or pop mov jne faddl xchg mov add movsb insb dec jb and add pop dec cld sub inc fadds repz rol dec subb inc mov add xchg (bad) mov mov inc mov fcomps lret nop xor dec mov nop jne dec mov fdivrl add (bad) push dec jg inc adc loopne jne lahf subl push ret jmp (bad) xor and fisttp lret insl cli pop sbb repnz inc mov (bad) mov test dec je xchg and xchg xor les insb pop cmpsb loopne push pop xor mov mov xor mov push sbb pop clc xor fist je add mov sbb adc add sti lcall add push fdivs mov enter imull nop hlt and sub inc mov inc mov popa sbb shlb xchg popf push test mov xchg test dec sub sbb inc sub jno or (bad) in int3 add mov rorb mov adc cwtl pusha add rcl sub push xchg add into int3 ja inc mov xchg rorb outsl and pushf hlt fldenv xor or xor and aas rorl inc dec xor (bad) cmp jecxz les ljmp cmpsl lcall add dec pusha pop and es int3 outsl jo idivb or fisubr out cwtl xchg daa sar insb push dec add lret cmp std fnstsw inc rol pop pop repz pop int std sub mov add pop orl adcl inc dec add mov hlt in clc sbb aam cltd fwait sbb xor or and add lret push aas and sub les mov mov adc out jle xchg mov pop jnp shlb jp (bad) adc aam out push inc je stos or xor pop add mov mov jae fnsave lods cmp (bad) stc and test adcl sbb rcll cmc outsl repnz adc push cmp add ret dec push andps pushf mov adc dec std (bad) mov daa or pushf or movsl inc jg cltd lock add movsb or (bad) push pop sbb inc pushf push fdivs push mulps xchg xchg sbb or cmp in adc jmp std adc sub es xor test mov mov mov sbbb clc adc sub add push mov daa out in sub lods push int3 je cwtl push test or daa mov add decb ds push das push sub and adc ss mov imul and cs adc imul sub cmp pusha add stos xor es dec push push inc andb add dec ss inc nop pusha hlt or dec enter std xor addr16 cmp xlat or push aam leave xchg add sbb or add test clc mov xchg inc fdiv xchg jl rolb les sbb into and pop adc mov sbb and inc ljmp fdivl add xor mov mov sbb enter in out jnp pop jmp dec adcb movsb fild nop xchg repz outsl and mov flds (bad) lret sbb dec pop arpl adc sahf sub xchg iret xor mov fs mov clc pop pop pop das mov (bad) and mov bound rorb (bad) icebp xor jb push cmp push clc sbb xor sahf dec mov clc adc mov and inc cmpb addr16 dec xchg inc test shll push xchg insb rolb out ret call pop gs push jno (bad) not test cli and bound sbb jno inc cmp shll call leave arpl lret push xor mov and jbe,pt inc jg inc loope add add scas call aam xchg clc movsb in xchg shrl in cmpsb (bad) jno (bad) xor adc jl jnp movsl punpcklbw add xchg repnz mov inc and lods out cmp mov add stc pop sbb lahf xchg (bad) jne pop cli mov dec sub and mov pop inc (bad) sbbb (bad) leave fist mov push and mov xchg ret loop xor mov (bad) jno ret insb or push dec cmp fbld aad mov mov rclb cmp aam add stos inc dec cmp mov pop (bad) jnp xchg daa mov and dec pop xchg add and pshufb sbb das stos ret push xchg xchg and or add les inc jbe or nop nop inc (bad) jnp sti cld pop mov cmp add repz sbb pop add loop cmpsb stos in adc jo,pt shrb bnd push xchg mov sbb inc jmp insl push ss pop sbbb jb imulb in mov hlt ret xchg daa sub jns cmp or sbb in fwait dec add ljmp dec enter or lock imul (bad) enter adc shll daa push je rol adc cmp sbb leave or dec push insb push add gs jl shrl (bad) mov and (bad) xorb push sbb sub cmp popf and xchg fst mov inc jg push and lods push pop inc sub pusha sbb sarl orb add fsts sbb inc cwtl xchg mov inc idivb aaa and mov cmp fimul sub jno pusha das mov in insb enter imul leave popf nop xor loope push xor inc nop jae aam lock (bad) (bad) mov xlat add data16 movsl (bad) mov pop jne mov das and sbb gs sbbb jo add mov insl pusha add dec clc jbe iret sbb mov mov dec and and dec mov clc addl adc mov test add push mov mov insb stos aaa sub andb push icebp adcb pusha call mov adcl pop dec or fwait mov mov jae mov pop inc int push out inc lods sub gs pop mov dec push add xchg mov insl pop adc subb add dec cwtl call in movsb (bad) mov lock inc mov js jno add int3 cmpl dec add out pop mov inc call xchg dec (bad) sarb mov fistp out sbb testb nop push sbb hlt divb add in scas rclb inc nop dec jecxz sbb movsb lods adc mov mov ja cmp fnstcw arpl jmp xor sbb scas dec inc fndisi(8087 jp adc add push and incl stos cmp hlt jo popf push lock sar (bad) ss sbb fcomip inc mov cwtl xlat mov xchg (bad) in js add outsl cs add iret sub lods repz xchg adc jecxz call call rorb xchg (bad) or stos movsb shlb mov or mov mov and add nop movsb sbb pop dec ds dec ds mov hlt lea jne push mov pop loope mul pop xchg mov mov mov add psrad nop pop subl jmp call mov add mov add cmp ret sar add lods add andb and mov adc cmpb add adc arpl int push movsl or (bad) sbb inc call adc sub fsubr scas and xchg out pop sbb movsl and dec int3 notb pop adc lods cmp dec insb xor cli icebp jns,pn fs insb adc (bad) dec push dec nop add rcll mov lds mov nop sub in nop mov outsb push sbb adc clc cmp loop addb nop sub jae pop aaa int3 xchg mov subl icebp push in mov sbbl cmpsb lods mov dec (bad) jl push out adc sub ror fstps lahf int3 push sub pop add hlt mov loop add add jo fstp fs ss enter xchg in sbb xlat std in lret outsb mov xor (bad) sub xorb or jl repnz xorb inc sbbb fdiv xchg add inc clc jb lret sbb mov cmp cmp mov les inc add adc ljmp fdivs push cmp mov or cmp sub pop mov cmp add lock aam mov fadds in sbb imull inc (bad) xor clc sbb lret add jecxz (bad) out lock sub jo pushf jns or test leave mov and mov adcl call jg call lods (bad) push lcall int3 push sbb pop adc out clc sub push test testl jmp jecxz and jns and dec cltd pusha mov pop dec mov sti xchg adc in push add mov test cli and jae mov mov (bad) pusha mov popl xchg mov in ficom add mov les inc xor xor orb (bad) repnz add push mov addr16 push pusha inc xchg lret push push or cmp pop mov xor push add out pop popf xchg inc adc and js (bad) cmp imul inc cmp mov sbb es pushf outsb and or sbb cmp sbb sub sbbl push call bnd jl enter xchg jne rcll adc dec xor mov and mov xchg add nop inc xor sahf adc movsl fwait pop xor xor inc xor and (bad) xor std call sub icebp cmp clc add ret (bad) mov cmc cmpb mov fldln2 add inc dec ror sbb aas mov les imul xor lcall fwait mov cmpsb icebp pop or cmp dec les rcrl pop popa pushf sub movsb icebp je and jp movsl mov dec nop jo xor add ret jmp push clc add stos out sbb mov or dec cmp shl add xchg fs add icebp and nop cmpsb dec sub ja clc push add mov roll data16 jne mov sarb lret dec lcall add repnz aam lock adc xchg mov ja cli cmp pusha call and pop sub lret xor add inc mov xor dec repz and xchg cmc fidiv icebp xchg and and xchg lahf mov jae,pt xor xchg ret and xorl mov fs sub add mov jb scas testl xlat xchg out pop sub push inc sti pop inc (bad) movsw adc pop sub add les cld mov push popa call push cmp and push push pusha cmp add faddl inc notb adc xor sbb mov inc std lods rorb (bad) cmc adc js imulb inc imul mov sahf xchg dec mov stos sub lods dec sub imul call adc (bad) int3 xor in xor popf lahf cmpl pusha inc (bad) shll cmpb call mov mov sub repnz aam add ss xor sbb xchg cmp add and (bad) je cmp lds cmp xor cmpsb jl xor das sub add fwait jbe sbbl inc (bad) jg xor or dec test iret jne dec or mov cld push popf in test neg mov add scas pop push (bad) icebp enter push push in inc mov mov clc xor push and mov and pop xor fisttpl les push pop popa lods cwtl dec popf pusha pusha ja add add jne or loopne lods nop add call cmp imul in int3 sbb add fsub xor inc cmp and jno xlat mov into xor (bad) or sahf or insb pminsw dec test aas lea xlat add sub mov jle cld outsl xchg out and add pop push test mov cmpsl xchg addr16 push mov cmp and dec and and inc test mov sbb add loop push or inc lea scas xor test pop dec or jl mov add mov dec cmp sub nop xlat ret jecxz stos (bad) push lcall shlb sbb pop mov in outsl sub dec jne cmp shlb sbb and mov fimull pop jle fmull js insb iret mov popw pop jle arpl add (bad) pop cmp adc dec adcl rclb imul jo dec push xchg mov sub sbb add sbbl jmp and in sbb add mov ficompl add or cmpsb test mov je adc push add or or nop nop mov inc xor xchg test clc cmp or add cmp mov lods (bad) jbe push mov fwait and (bad) mov aas hlt pop (bad) loop add les xor ss adc psadbw test mov int add push inc pop or adc mov jae cmp lcall aam add push mov or sahf xchg pushf loope (bad) fadds addl push icebp out xchg adc adc imul xorl inc lock (bad) and jae adc leave cmp add movsl lcall ljmp push test add dec jnp mov xorl inc ljmp lcall fistpl jb js push sbb mov stc add cltd xchg popf inc dec call pop pop mov jnp add push inc xor push add fbstp pop mov add ljmp push popf (bad) loopne cmp ret push loop jb ja,pt pop and sbb lahf js or push xchg jns add popa push test adc and xor pop outsl (bad) cmp sarb cmp pop sbb pusha xor sub dec mov adc loope fdivrs or sbb jle push xchg dec out stos adc nop das ljmp lds pop inc sbb dec jae add test xor sbb mov lods xor add xchg add pop and sahf mov jo push mov shll cmp pop dec push push in pop push adc mov stc sbb jp jecxz stc and xor clc rorl xlat rcrl inc sti enter add sub dec pop jl jge xchg adc add cmp xchg add xchg and arpl loope loopne inc and cwtl setbe and jae loop scas call test jne inc mov fistpll dec loopne test add sarl outsl inc push movsb int3 loopne add or push pop xlat rolb in aaa clc je adcb (bad) dec adc add inc loopne mov pushf lock sbb dec jbe and (bad) enter xor adc pop dec add mov xor pop repz imul ret mov xchg lea mov call les repnz jo inc dec cmp imul add dec imul ror loop sbb test les je cld cmpsb icebp sub cld add add and cwtl sbb or add push pop lods and inc js,pt add and jecxz inc in add loope sub mov pop add lods int3 std les mov fildll push sbb sub scas fwait mov push clc fcompl mov in xor fbstp orl imul movsb jnp icebp jae add fldcw xchg add out shrl or mov jno push xchg push mov xchg adcl frstor and xor out add jno cmp sub test jle idivb jns loop (bad) mov and daa rclb dec xchg mov inc mov add push (bad) iret pop push mov mov loop sbb clc pop jns sbb push imul lahf xor stos add add push pushf mov lret push jl jo pop dec cmp push jne pop leave (bad) mov cmpsl push subb in inc mov add lcall inc dec imul xor out add mov incl (bad) sub jle xchg test inc sub or add rclb rorb popa mov popa sub test imul mov add xlat adc dec pushf mov test xor mov mov jle pop sub stos hlt sarb aam jnp xchg test roll into pop mov xchg and cs cmpsl cmp shl xchg inc mov sbb das daa adc and out das roll sbb xor mov (bad) xchg cwtl sub (bad) faddl scas dec mov add stos add xchg push dec ds inc or stos imul cmpb mov and add mov sub enter cmpsb lods shrl xor push mov aas (bad) push lret lods addl xor cli data16 cmpsl jbe jp dec inc std adc cli je push add imull je pop aad test or jl mov pop push xor inc clc push cmpsb cs sbb add dec push inc loopne lods (bad) shlb mov movsb push (bad) repz scas jno pop dec sbb sub pop in inc aam pushw ret sub ds sti or add fist imul clc fs adc inc lock test loop repz add inc lcall rorb hlt push sub test add es lcall xchg nop sbb popa es sbb xchg fdivrs adc add inc sbb or daa sahf mov adc inc inc and scas xor in movb mov push test add mov addr16 add pusha mov mov testb aad into (bad) mov mov xor add sub lock add mov xor xor and out mov sub and and mov rep call stos in cs mov dec (bad) xchg or pop bound ret inc dec pop mov stos adc mov clc test push fadd in popf mov jecxz or in movsl or jo add pop fs nop xchg sub inc aam push fwait out out and incl faddl pop jg dec cmpsb lods mov cmp lods (bad) sub pusha loop push adc cmpsb mov inc add (bad) adc cmp pop pop cmp lea cwtl or les and arpl leave xchg fs into add scas push xchg add dec cmp sub inc test dec movsl xor xor add cltd or in enter xor dec add mov rorl add pop jmp jne rorb pushf mov inc es jns,pt fprem adc cld fs xor enter add xor in pusha pop inc outsl dec (bad) mov sbb xchg imul dec subl add dec push insb pop sub jmp js fsubl or xchg xchg stos add mov push add je lock cmovae enter lods out jle push insb js push roll sbb inc into mov lock mov je mov inc loope xchg roll aaa repz insl xchg cmp push es cmp call aam int3 (bad) mov add dec lcall fnop movsl test notl adc call stos xchg dec repz add pop or and sub negb (bad) lret adc out ljmp mov add in push (bad) or lret pop inc push push daa jo add push orl loopne lock add or sbb out cmp lret loop or mov (bad) xor notl sbb cwtl push (bad) jmp xchg or jno add ljmp outsl stc cmpsl sub jg mov out jl daa mov xchg adc jecxz movsb aam stos jae sbb xor mov xor in add loopne mov mov scas rorb xchg mov add lods xorb call mov jl cmp push popf cmpsl gs add add xor sub and cmp cmp cs sbb es imul cmp cmpsb push add pop pop push xchg addr16 mov push pop or sub cmp pop jb or and arpl mov ret mov orl adc cmp push dec pushf in inc jbe,pt faddl jb lods arpl loop (bad) repnz jno xchg inc cwtl jmp inc cmpsl int3 add sbb mov ljmp call add mov ret or mov pop jle cld pop lret add sti fcmovu loope ljmp out and (bad) add xchg loope jp loop push push sbb (bad) inc roll mov lea dec lret rorl es mov call cmp xor cmc fwait enter aaa and push xchg daa popa pop out adc ret adc mul dec and xor dec les call popf dec lods jo nop mov and pop test hlt ret sub inc add mov mov repnz mov repnz dec mov mov adc xchg out and decb and pop mov and fldenv inc repnz imulb and andb inc ja int add dec es lods in sub cwtl inc mov loope push lock jmp jnp and call adc roll sbb (bad) lods pushl ficomp sbb dec pop test clc je lock insb rol repnz ds cmp loopne cmp out popa sub dec cmp adc add xchg cmpsl test dec or xlat mov xor jno movsl push push jp add stc mov push jns ja,pt aam lods mov in cmp call xchg cmp cmp add inc lds pop xor add mov mov xorb cli mov invd cmp mov out push adc outsl jmp sti (bad) xchg fbstp xchg inc xor loopne jns pusha jecxz (bad) mov dec cmpsb sub push out dec add sbb rclb pop cmp bound es and add les jp push push cli and insb mov dec fbstp push in push and jbe add xorl addr16 dec orb das in mov mov jne je mov push inc mov pop push fnop xor je daa test push fldenv push push cmp dec divl mov pop movsb clc push jecxz shrb (bad) xor jmp mov pop dec push xchg mov cmp cli jbe push imul jp andl mov ds push lock (bad) cmp pop xor pop pop aam cmp (bad) mov add into (bad) sbb loop jo fild push and rcrb sbb add stos inc repnz cmp sbb loop clc inc in les cwtl dec jp jmp cmp pop mov jae add lea xor add loop dec xlat or aas jbe xor add jo in and movsb mov adc dec dec enter lret loop lock aam sti pop mov fdiv dec mov sbb dec push clc push mov inc pop shlb shl (bad) enter pop jmp mov pop aam sub adc call or rcll mov fstp fs cwtl cwtl push aam and sub clc loop dec cli loopne inc (bad) inc add inc lea xor sbb pop in add sbb add dec and nop inc jmp and test mov push xchg ret add cmp mov sti add sbb push mov push pop pop xchg inc hlt movsb xchg adc and jmp stos adc divb (bad) out push ret loope and stos psubsb adc andb mov int3 in mov enter dec and pop or sbb cmp sub inc xchg pusha push imul scas sbb inc xor jp push sbb inc add and std adc lret and jbe inc repz jnp or dec popa or mov push jecxz cmpsb or test add mov add lods jecxz or and fadds stc dec jmp in sbb add test loopne push dec enter or nop loopne jl and mov ret outsl cs dec inc and fdivrl call pop sbb fsubs pop negl (bad) movsb push push fistl sbb and mov roll rcrb testl sub mov fdivs pusha add or inc pop or jmp dec imul mov out mov inc mov test pop rcrl xor shlb push add sbbl bound add mov jno lods dec cmc mov addl nop repz push nop sahf test add sar sub inc sub cld or idivb mov sar push xchg ja dec and mov and imul sbb add xchg mov add pop add lret and pop add sbb cmp add jge jmp add loope inc (bad) push lods sub (bad) data16 cmc cmpsl pop add lods les and outsb pop dec cmp test enter add cwtl or cmpsb sub or test sbb outsb push cmpsb andb cmpsb mov aam pop adc and psubsb loop cmpsl rolb hlt xor jl (bad) dec rorb and daa and push sbb sub cld adc imul stos divl lret mov je repz leave inc mov out sub cmp jg out (bad) daa (bad) in dec lock mov inc jo mov xchg sbb mov lahf jbe inc mov mov mov loopne adc adc dec repnz push pop cmpsb push xor push ja imul popa xchg dec add and notb sbb mov add jns out stc pop inc aaa or clc sahf add cmp ljmp test mov add sbb rolb add jno imul mov push jbe,pt shrb insb pop and (bad) pusha sbb push lods pop ds jb addb in outsb cmp add pop stc inc pop and sbb add fimull mov dec int int3 jmp pmulhuw enter adc gs pop push xchg add xor icebp and test cmpsb loopne frstor inc bound clc cld add or jmp movsb stos pop xor add call cmpsb loope jo mov xchg ss and cwtl push test cmpsb mov fstpt xor jns shrl pop adc lods adc mov imul je add stos lock add push in jns stc pop pop enter sub pop jo ds cmpb rcll pop into push call add out cmpsb push adc mov pop dec pusha test js push jg xor inc out cld je add pop xorl fisub xor ret notl ja in imul dec and dec xchg int3 repnz add out loop (bad) loope rolb dec and and jo lods xor push stc ds sub test inc mov cmp rclb add aad jae xchg jb add pop popa jne push sub cmc je cmp or adc std add (bad) scas rcrl dec decb add arpl es (bad) mov or push fdivrs push fisubrl add jbe sar and mov adc jl push pop mov mov add lcall call inc hlt add andl out jg enter pop inc ss xchg loopne adc sbb je pop inc push clc pop add xchg mov bound jmp push fnstsw pop int3 mov nop jle sub cmc add dec hlt sbbl imul incb mov fistp adc mov subl je push dec mov shrl jg xchg out xor cmpsb lods mov sbb adc and xchg xchg push (bad) ds jmp dec add xchg mov push add or ret push jno add cltd xor xchg cwtl and insb inc push sub aad adc add out mov xor imul add push dec and iret out push enter push jp dec xor pushf inc mov insb add stos or arpl jecxz jecxz xchg les ja cmp jo jnp mov push mov ss faddl test xchg scas jg sbb inc fiadd imul lock inc pop mov pop jecxz jle cwtl cld fldenv fs cmc mov push adc inc ds dec dec sbb mov dec mov test nop cld adc add dec in fsubrl jae or cli and setg xchg loopne dec mov mov xlat hlt sub or xorb stos enter hlt pop ret in dec inc or lods test add add cmp pop mov cmpsb movsl in and nop mov or mov pushf and adc test cmpl rorb les push add inc in and (bad) pushf in scas add (bad) mov cld mov scas int3 xchg pop pop sbb in push or jmp push dec cmp in add je dec loop mov call popf cmp mov fisttpl mov mov (bad) fadds mov jne mov insb or stos add xor or movsb pop add icebp fadds mov add mov (bad) or data16 aas and and fdivl jae,pt cwtl and dec dec in rcrb in add in arpl clc enter adc xor jl nop pmulhw addb push adc bound sarb and es or sbb lock sbb adc fnsave loopne outsl and push ljmp adc jmp xchg mov jbe dec sub stc and dec mov mov add (bad) sbb les mov push stos repnz lahf nop mov jp add popa (bad) sbb cmp movaps cld or mov cmp pop fsubl xlat dec clc lods and sub mov ja dec jne lahf adcb ljmp xorl cmp fadd push xchg subb and pop xchg sub push xorl xor push and in adc stc push icebp cmp add adc dec clc pop mov xchg stos pop cmp add push les inc lcall dec add nop insl push inc inc shll or mov dec sbb movsl in rolb adcl pop or je ret xchg or jmp add mov cld mov xchg (bad) dec iret and call fimul xor or xor nop add xchg out and mov mov xchg adc call add js mov or sub cmp add inc pop add inc adc fildll or sub and or sbb subb xor nop or shrb xor hlt arpl inc mov neg add push out sub dec fisttpl fadds mov imul xor mov sub xchg adc movsb xor jo lmsw shrb outsl lret movsb cmp aam xchg aas adc jae faddl jo sub pushf cmp or rcrb pop adc mov pop ret sbb aaa pushf pop sub rolb mov (bad) fbld mov fdiv add (bad) xor mov lahf add (bad) mov sbb push or adc adc cmp add lret gs js add jne or loopne loop inc jl cmp stos jbe mov pop mov sbb mov test push dec add nop out movsb xor push cwtl subb mov and xor fdivl popl pushf loopne call push mov nop xor mov and xor faddl push sbb jmp add sbb and inc mov fcom add push das lret in adc jbe dec push clc mov lods dec pop sbb mov fild enter (bad) inc movsl test xor pop sub inc dec mov or les imul xlat std (bad) ja dec jb mov fs add std pop sub lods adc xlat mov adc push mov sub sbb aam mov in out jne inc cmp out mov in repnz xchg std inc mov in dec roll dec jecxz adc mov dec add jns decb xchg dec lret xchg out adc js mov sub daa cmp faddl inc cmpsb stos cmp repnz rcrb addl test pop mov test mov pop outsb mov jl arpl pop push (bad) cmpsl stos add lock subl test and lock cmp shll mov mov je (bad) pop inc rorb dec adc cmp add inc cmpsb mov adc inc add add rcrl je pop or addb rcll mov test insb pop fmull xor lods cmp cmp mov add or xchg cwtl adc cwtl and cmp inc aam (bad) jbe cwtl lret cmp and sub xchg fdivr adc add fnstsw add loop lcall in mov xchg lock and in ficom or pop fxtract inc aam inc (bad) loopne sub loop add sub (bad) adc jo js push cli arpl fnop test test shr (bad) loope dec shll dec cmpsb jbe inc sbb (bad) lret pop cmp fisttp inc dec push sub cmp jecxz xor add gs cmpsb jns and mov mov and add adc call mov testl (bad) mov imul mov push call lea adcl and adc and mov or mov cmp inc xor and sbb ds imul add out loop out lea cld mov mov cwtl fcompl push inc addb test gs or sub int3 add xchg lahf mov cmp sbb mov sub pop adc les push xorb movsb mov fwait push adc jge pop mov fdivr mov into mov stc and sub mov stc or cmp dec loopne std adc jmp jl je fistpl mov mov scas shrl mov lock add movsb or inc push mov xchg es dec (bad) lahf cmp aas sahf test movsb adc mov inc push or test lahf in add movsb lret cmpb push rcll inc xchg or test out pusha pop jns xchg mov adc jne pop and push js push aad xchg or and xor (bad) push push sbb xchg or jnp xor lea mov pop cli add int3 test aas lods cmp cmc pop jecxz adc pop movsl movsb and or rcrb stos orb sub fucomi cmp (bad) icebp push out outsl (bad) xor pop push loope repnz subps jl cmp cmpsl jne adc jbe int3 xor add cmp sub out adc (bad) lret rcrb add dec nop push int fstl ja je loopne ret cltd test jb xchg in ror movsl mov sub dec add shl sbb ficomp leave aad mov cmpsb fsubs inc clc mov xchg (bad) xchg jl adc aaa test xor test xchg movsl stos mov sbb out imul test push mov inc add sub add das sub clc jns sbb inc test sub adc js je mov dec sbb outsl push les sub or mov mov movsl pop lret sbb fimul jbe fs inc pushw add cmp dec enter xor add lahf loop jbe or adc lcall add pusha cld jle inc das mov icebp stc dec sbb dec (bad) lds ss adc lret lods adc dec aam adc mov lahf xor call lock or enter insb rcrb push out mov out mov out xor xchg pop hlt pushf loopne sub sbb test xor jl mov pusha lock jae jb or dec divb pusha or add in push sbb fist cmp dec xchg enter xlat push jmp je dec sub pop xor mov dec test lds mov xor xor pusha xor dec push clc inc out shll lret rorl jno jae movsb arpl scas pop sbb roll in dec (bad) vpmuludq and test inc jne add adc xor popa fwait and and mov inc and repnz jge jne in xchg sub adc pop cmp jno pop dec cmp in ja inc icebp xor les sbb or pop push jmp orb jae pop inc xchg out lcall add mov mov add imul cmpsb mov jle rclb stos (bad) outsl jecxz or or mov leave shl and scas mov addb mov xor jo and sarb (bad) leave repnz jne inc jo arpl rclb pop mov sub (bad) shrl test bound shll clc and xor call xchg push and xor dec dec and xchg imull (bad) mov test pop push cmpl lods lock pop aam add cmp jp add jno cmp add out xchg mov mov enter jp dec test inc loop in hlt or mov nop hlt push cmpsl add ja push and mov push add jae mov fisttp add fwait loop out pop les rcrl or movsb adc test sub enter xchg fild inc or sbb fs dec and test and call dec repnz scas les fistl fistl push dec add or add lds xchg adc mov data16 les adc cmpsl lock loopne add scas xchg and frstor stos push inc out sub into rolb insb push mov loopne jecxz adc cmp mov jle imul push lods imul add push outsb jnp mov pop mov fldenv lods ljmp mov mov jecxz mov sub lock cmp sahf pop xchg push add (bad) clc add pop add push inc ficoml faddl and add inc dec bound repz push cmpl push pop or push mov add push (bad) dec sub fnstcw ss mov bound dec or fstl inc mov dec xchg cmpsb fmuls roll add sbb incb stc repz enter andl pop cmp mov sarb dec fsubrs sub stos and ljmp adc das sbb add and daa jno add leave mov push add lret jp arpl sarb cmp mov loopne nop jo inc stos push dec out popf ret mov jne mov sub adc loopne and inc in add dec mov add dec xchg cmp subb sbb add pop mov adc mov and add xchg jae fs add out add xchg push mov and mov sub jo sbb in cmp insb scas or sub sahf push inc (bad) sbb (bad) incb test mov mov sub add popa loope pop test (bad) cmp ret add in arpl dec sbb or mov adc mov dec insl jno pushf je movsb push lret cmpsl mov dec movsb xor ret sub cmc xor mov sub sbb xchg in nop add fs dec push (bad) push or jno push push test inc pop fbstp shr test sub adc out cmp movsb mov adc enter add xchg mov pop notl cmpsl lret test sti adc adc subl (bad) stc bnd loopne lret pop fs nop jl push leave mov mov add outsl inc hlt sbb inc js jae and bound add mov inc xorl add push mov mov nop nop adc enter (bad) push add inc outsb push xadd test icebp push je jno or call sub mov or adc js daa mov (bad) inc adc (bad) js movsb ror shrl (bad) mov neg xlat pop cmp imul addb clc mov mov lret cwtl mov in subb sbb insb add fildll sub cmpsb lea inc inc sbb ja and aam jge jbe xchg cmp pop out mov mov jmp sub aam inc jl push fdecstp loopne sbb and add mov fs pop jl add jne xchg push add mov (bad) test push push inc dec mov add hlt xor sub add and pop ret pushf push inc dec pop adc repnz push lods insb (bad) pop rolb xor push pop jbe dec imul fs (bad) test adc inc test imul ss add sub cmp and mov pop adcb jb int xor fs repnz jl adc mov xchg adc mov mov shlb (bad) cmpsb repnz adc cmp aas and fildll or jmp sbb pushf (bad) pop xchg lea cmp arpl mov addb fisttp push xchg daa push icebp push (bad) sbb loop add popf cli push repz adcb add mov insl adc xchg adc or mov add mov add pop mov sahf mov pop out and xchg jl xor jb add in xchg cmp rclw jmp or mov mov sbb jne push popa outsl mov jmp cmp fstpl push insb lea cli xlat dec in je jns inc add loopne mov sub addl fcoms mul stos pop mov push call lock inc dec arpl add pusha sahf push repz fldl2e adc jmp mov fwait jnp das jb nop int3 gs pop mov loope sbb int pusha dec (bad) mov xchg js pop out das insb and mov add mov jecxz xcrypt-cfb cmpsl out dec dec lods int3 sub mov cmp or cwtl leave pushl fcoms fldl pop add insl cmp sub or in cld enter mov imul add mov scas loopne test popa cmpsb sbb bound outsb jnp js jbe sar sbb cmp (bad) test inc xor loopne dec add xchg std inc and push dec xchg adc lock pop xor and lods push mov popf in add adc push inc jo inc pusha or inc adc push out jl dec sbb aas outsb cmpsl mov nop xor jg enter adc test sbb in mov fs mov addb imul in dec mov add mov fisttp int push xor dec mov stos inc xor inc xor add addr16 negl lahf mov js adc ficoml and jo mov mov adc or jmp jae jns or and lock arpl add (bad) aam mov lock push xchg enter push sarb mov jne or and add fisub cld cli pop ret xor seta lods jnp lock xchg jle fs lds add xchg pop sarb dec xor mov loopne (bad) dec adc mov lods push int3 clc scas mov mov sub jo xchg adc add (bad) cli enter lock mov xchg push pop scas jno xor pop add test test test lret jnp dec push clc or push rclb add ss or cmpsl (bad) call je sbb pusha ss xchg and cwtl add xchg pop mov rorl sbb and push sub mov arpl or lods or daa aam pop dec imul cmp roll pop inc ss adc pop out mov shlb mov mov sub and stc pop cld sbb sub jmp cmp iret popf jmp jge out jl adc addr16 test pop out adc adc xor adc and and add sub and xchg stos fsubrs adc js push jp xchg xor mov pop subl adc xchg ror cwtl cmpsb js and sub sub mov addb out lahf inc cwtl fdivs or mov fdivrl hlt add in inc mov mov mov bound jp add xor je sti scas repnz jae lahf dec push cmc add sbb pop xchg mov lock sub hlt lods mov out pop aas outsl dec into out adc lret pop jl jecxz fsub adc shll or in orb adc adc dec xchg mov rorb and sub popf sbb push lret adc imul inc int3 add (bad) lcall imul cwtl mov mov das jns inc out add cmp fs stos in outsb dec dec in mov scas call sub (bad) jecxz aam mov std les cwtl sarb fadd mov cli sbb xor stos in and add push aas mov or mov into adc pusha test fs dec mov and adc sbb xor or fidivr sbb std adc and int jp pop push push stos add inc xchg pop lcall mov push cwtl out jmp in ljmp (bad) fbld rcr in insb mov dec pop push add inc lret rclb clc rclb mov rcrb (bad) dec popf and into icebp jecxz fdiv daa push sbb adc pushf add orb insl sub aaa add or xchg and and fs cmpsl push addr16 jns mov addr16 rolb or mov mov mov sbbl xchg xor push test dec call dec popf adc add mov into repz jno xor xchg scas ljmp lock xor jne (bad) or cmpsl aaa jne pusha add mov gs test (bad) outsl test add add and int aas mov popa test add outsl mov and sbb sbb push push pop in dec clc inc pusha sbb mov popa mov inc adc xchg pop cmc and xchg pop loopne cmp lods inc adc dec pushf jae xor xchg sbb xor icebp jl in cmc cmp aas add js out pop pop lock pop mov fmuls js mov pop xor push bound and int (bad) pop mov xchg xor mov xor jns hlt lock inc stos ss jo pop call dec and les jb dec mul (bad) je pushf add fnsave daa jbe mov pop andl cmp sub aas call out xor mov std imul and nop cmpsb add and lea ja push dec (bad) mov jmp jno jo out push mov mov mov sub pop xchg mull xor sbbb lock stc dec loope dec call js scas mov mov loop stos sub sbb cmpb repz adc jae pop jp jbe push call (bad) mov xor loop incl pop out add push pusha (bad) jne enter inc adc add nop (bad) in add or outsb xor fidivrl enter pop mov dec daa xor nop je cs add adc pop loop out pop adc out xor ret mov std jecxz pop mull pop stc sbb mov lds mov shrb pushl test decb (bad) xor sbb loop jge inc xchg cmp mov xor pop (bad) pop sbb push (bad) jb or je pop or mov mov cli dec dec loopne xor mov mov outsl push sbb and push (bad) cld add faddl loopne jmp add sbb xchg fcom push pop sub mov in out mov mov adc sub inc inc add jbe add lretw xchg lcall mov jo (bad) pushf mov insl cwtl and push sbb mov cmpsb adc cli ja adcb xor sub sbb pop mov lds in add mov xor mov xor cmp jl sub repnz pop lock aaa sub mov or sub jmp or cmp cld enter dec rclb nop rclb add test push inc jno inc add shrb jl pop dec (bad) xor shll mov pusha lds (bad) es mul dec int3 sub daa aam push xor js sahf popl or add mov mov dec clc fs mov mov mov lret outsb jno add (bad) cmp add adc add sbb lret jnp add mov adc xor push movsl lods push mov sub loopne loope pop mov xchg xchg sub lock add sbb and push imul pushf jbe add lock ret adc sbb pop cmp and inc inc ret clc call sbb or repnz fnstsw test dec je test pop idivb lret es cmp fsubs shl in xor addr16 es pop stos sbbl cs jb add xor rol lret mov mov push push or jmp inc sbb jns cmp jno,pt cmp sub pusha je dec sbb pop nop xchg and mov in stos adc pop and out mov imul dec pusha mov jl mov lock xor sar inc add or mov push xor aam aas test into (bad) rolb stc push daa jmp hlt or movsb add push and mov add popa in stos and sbb (bad) (bad) (bad) lds or mov hlt and xorb dec das cmpsb mov xchg inc insb add sbb mov add pop cs mov pop aam add je push and xchg fiaddl (bad) int3 xchg add cli in xchg inc xor pushf or sub sub mov es jnp add sub aaa xchg test (bad) xor or jae lods pop popf les and loop std mov pop ja in movsl cwtl add cli add loopne or xchg jo movsb mov xchg mov jns add xor dec pop in dec (bad) hlt mov sbb mov add or xchg mov pop jge push rcrl shlb adc lods add scas out imul fldt ds cli sub pusha add lock (bad) mov fcompl dec (bad) scas mov add push mov inc add cmpsb cmp jmp movsb addb xchg inc call push lcall mov xlat fdivr inc fiaddl fildl jg fcoml add imul (bad) xor inc rcll mov cmp ljmp xchg xor add jp popa or push add or mov sbb mov jbe popa pop hlt outsb lods dec pop push mov push push test dec andb adcl lcall inc mov lea (bad) jg fmull and cmpsb sub test or xor xor daa xor mov lods js movsl test and imul xchg sbb shr (bad) jl incl sbb push jecxz or mov pop stc pushf xor clc mov shlb xor inc jb out inc fwait and add push je fadd jmp and fildl enter add clc fbstp mov out pop add cs and mov pusha mulb addl in cmp mov popa les pop inc jle inc std clc les push rcrb fstpt sub js cmp mov or mov push fisubrl sbb mov stos mov adc stos imul adc (bad) je add lods sti add sbb sbb or mov pop cld pusha test adc or or or jno das mov and sbb mov out lds mov xchg mov and inc and sbb add psrlw cwtl scas xchg in in or out mov pop aas pusha repnz jg sub nop add pushf mov adc nop sub xor adc stc mov scas inc xchg dec sub int3 cmpps addr16 loope aaa (bad) xchg mov ficompl add dec sbb mov cmp pop movsb pushf jmp or test push cmpsb clc ret (bad) push loopne lods jns jne add lahf lret mov aas aaa fs xor jmp cmc xor mov pusha lock and jo push pop jle inc outsb cmp movsl scas dec adc mov test (bad) out fistl adc fisttp dec jmp pop test mov mov mov xchg stos sahf add pop and xchg cmc and andb dec inc xchg out jno stos push scas lds mov add (bad) mov push les shrb jne nop ror xor adc cmp or adc loop loop aaa lods icebp cwtl or jecxz addr16 adcl xor push xor pop cmp jae sbb js lcall (bad) lock jae xor xchg mov cli or or call cmpb aaa jmp cmc or icebp outsb fisttp adc or test sub clc nop mov mov fwait jp shrb cmp add sbb out jae jg cmp jp jb inc xor and hlt shrb fdivrl les cmpsb imull sbb push jb add fwait repz jmp lock shl aad rcr and inc sbb pop pop mov shrb sbb add aam jae cmpsl add (bad) fsubl add pop lret pop stos jne add xor push loop mov pop je sub jp xchg aaa add jl clc xchg pop mov pusha ja enter push loop cld dec cmpl cli mov ljmp nop mov mov mov leave sbb js pop sarl cmpsl nop fimul in ret popf je and cmp inc add lret fsts aam cmpb jno add sbb add es (bad) cmp adc stc mov hlt nop add jmp jl imul loopne lds stc ljmp and add jge mov arpl pop jnp mov enter mov sub test loop inc sbb aad dec pusha jl add dec call mov test hlt inc pop push push xchg jb jp xor ljmp xchg (bad) orl lea incl push inc lret jno xchg sarb push repnz sub mov iret adc fsubr mov inc xchg pop dec enter shlb mov js add adcl sarl bound mov rolb enter cwtl (bad) push loopne ljmp cld inc and inc outsl lock push pop mov push and rcr movsb jmp push loope int mov xor mov add mov xor jno call paddsb pop outsl out fldenv cltd (bad) xlat add sub insl imul push scas mov pop xor in cmp jne fdivs add cmp adc mov jns mov in xor pop sub jne adc mov les enter clc sub faddl dec jae push and aas icebp push push xor std jbe add sti pop adc cmp out jnp jbe jg pushf imul andb and jno pop pop iret fistpll cmp jmp imul addr16 inc mov pop mov enter pop jo push add andl test imul mov in push mov std rcrl fdivs cmp popf in mov push inc mov jmp jp or pop aaa adc cld int3 cmp push jbe hlt ret pop dec xor mov add insb fadd test daa (bad) mov pusha stos shrb lods in or and mov mov inc xchg (bad) mov mov sub xchg (bad) icebp shlb shrb jmp jg pop inc test arpl clc jmp cld pop sbb fsubr mov leave pushf je mov mov sbb push movsl aam add test int3 xor mov pop in push add cmpl dec mov and inc push loopne lret push lock jg pop inc mov xchg pop sbb (bad) jns nop mov mov lock dec idiv cmp push mov xchg jne or arpl cmpsb pop movsb lock rolb push xchg nop shll rorb mov dec add mov mov push cmp push inc cltd add cmpsl mov sti insb mov jo imul mov imul inc jo scas sbb nop shrl mov imul xor and test pop adcl mov call (bad) loopne mov rclb add xchg sahf nop out add scas pop or stc adc dec lret setne add mov and in leave fisubr inc movsb xlat (bad) mov adc dec lock lret lea cmp add data16 pop daa add loopne out insb vxorps pop out ds add (bad) out pusha mov loopne push and mov aaa je add adc movsb cwtl fsubr mov (bad) lret mov add cmp pusha sbb dec pop or arpl scas sub into jecxz dec movsl mov sbb pop add mov orl in sbb and in sbbb add inc pusha stos sub and outsb pop xor (bad) shlb fild inc loopne ret in cmp jb bound loope pop repz mov in mov test mov xorb add jge mov xor lds xor aas dec sbbl pop dec xchg pop rcll loop and aaa imul sahf and movb inc push orb mov enter sub les dec dec lods pushf sub inc jp jge adc fnop push nop dec loopne adc pop pop mov mov xchg pop jo in fldcw push pop push cmpsb insb sub insl aas int mov and and push ret push push fsubr mov and pop shll clc xchg jae sub xchg idivl dec pop mov mov sub test adc or push mov fsts out popa pop imul pop loopne xchg or mov rcrl add jecxz adc jne mov add xor arpl scas rorl ud1 ja add repnz (bad) aam push and imul mov add test and js daa or rolb mov aam pop pop mov pop lods in es popa es (bad) std or push add clc sub mov ds sbb push jle insb xchg mov mov push mov lods add mov lods cmp and stos mov mov add loope jno pop cmp cltd mov xchg add outsl (bad) mov jbe sbb cmpsb dec jge fwait and cmp (bad) xor lea adc lods fsubl cwtl pusha out cmp cld lea fcom test xchg mov movsb xchg xchg sub xchg jmp (bad) cmc iret rolb rdmsr cwtl pop add mulb sbbl sub jmp jl sti test inc out and push sbb std hlt adcb cli ret ljmp pop (bad) fildll cmpb in pop adc inc and mov add int3 xchg imul (bad) sbb popf add out arpl push lock mov pop mov leave (bad) loopne mov dec nop cmpl fdivrs nop shrb mov sbb stc es and mov add lock fs jge shll popa pushf lcall je and xor icebp (bad) and jg stos xchg rolb xorl faddl repnz and mov les je add mov fdivl daa loopne mov xchg repnz add push (bad) outsl loopne push jns cmp xorb cmpsb and repnz or pop pop (bad) mov insb and shrb mov dec mov in add stos sbb sbb or fwait add neg sti test or es push test dec loopne xor fiadd and pop xchg dec roll das ljmp inc or clc aam jo les mov popl mov adc lea fsubl imul lret push fiadd xlat imul test addb cld jne jno push mov add std int3 pop mov dec or xchg rorl movsb (bad) ja inc loopne mov lock push add call mov out sbb fadd add rorb aas outsb fsubs pushf adc mov pop cs mov sbb mov jb in adc inc movsb sahf adc push nop push xchg and lret mov out lock or rcrb es xchg dec rcr dec sub push xor gs mov inc pusha push out subb pop dec cs add sbb pop cld sbb push jbe fdivl xchg pop in and mov sbb inc test mov adc nop cmp dec add inc inc push add jg lods xchg std int3 test cmp add sarb sub stc adc lods xor mov xchg cmp xchg subl scas dec inc imull add sbb mov jnp mov les call adc lret sub shrl add sub sub inc and adc daa rorb lahf dec je adc add fidiv dec dec lret ljmp pushf pop mov popa mov xor inc add fldenv orb stc push sbb jbe je pop in ret pop nop fnstsw mov adc rcrb mov ljmp icebp dec sbbb push pop xor pop add mov xchg jnp push sub xorl mov and testb mov push push call outsl or out jno cmpsb mov pop nop ficom xchg add xor nop roll cmpsb fldcw sti jbe or js les nop push mov inc in push int cli sub adc outsl lea mov cwtl and icebp and and cmp cmp cmp nop xor imull fsubl sbb dec or jnp xor or adc (bad) sbbl push add and jg xchg icebp (bad) hlt pcmpgtb inc mov lods sbbl push push cmc out sbb mov sub rorb sti add sub xchg sbb icebp cmc add xlat dec push mov inc push mov pop xchg les xor and add push lock add movsb iret aad mov xchg mov xchg stos incb cli (bad) enter mov push scas pusha or call (bad) js sub or xchg and repz sbb cwtl pop xchg (bad) sbb xchg adc popf jge and adc inc add pop lock add inc and adc cmpb imul push stos jle add pop jb pusha mov in xor jmp cmp cmp loopne scas mov push mov out jo xchg push add arpl js mov lods adc aaa or cmp push xchg inc add iret sbb mov mov fcoms inc in dec jns dec fildl insb sti xor jo shrl xchg in jns,pt mov or jge pop jo add enter hlt sub inc add dec sub aam andl lds daa mov lds fs mov js fdivr out fsubs call ds mov repnz xor dec cli addr16 dec jl shlb push inc add pop ds xchg cs in jecxz mov loop jmp mov cmp sbb mov mov (bad) adc xor daa cmp repz mov jno inc add adc imul sbb cmpxchg orb lock mov mov jne push cmp add inc jmp js push mov pushw add and les test and pop jo sub inc ja jb add in imull pop mov xor xor push xchg loopne pop scas loope push pushf hlt dec imul mov inc cmp ljmp movsl je and sbb inc mov xor add lahf xchg call and lret cmovbe xor inc (bad) pop mov sub movsl ljmp add pop adcb lods fwait int3 test cmp pusha nop (bad) and sarl scas push and jno ja mov inc int3 stos jns dec mov add cmp or xor pop aas js xchg jo sbb inc adc dec sbb inc out mov push xchg push mov sbb dec xchg pop sahf mov orl loop add pop shll mov adc xchg add das nop test (bad) fsubs push sub subb dec hlt push nop out add aaa cmp or xor outsl mov rolb pop loopne imul (bad) or cmpl or dec pop (bad) mov outsb adc in xchg pop pop or sbb xor test add adc outsb add inc loop dec aaa les (bad) mov xchg pause es add mov imul mov aam aad in pop cltd pop sbb adc xchg or and pop mov neg pusha dec or sbb mov mov aam xorl test test push clc je dec add sub lcall mov ds dec or hlt mov fnop jb pminub movsb les clc inc cmpb popa cli add jae adc fwait push pop loope enter mov sub in in cmp add inc std sbb inc out add xchg andb and adc sbb imul xchg pop sbb adc xchg stc sbb (bad) sub xchg bnd dec adcb cmp fsubrl sbb test negl and clc stc add xlat add (bad) push repz jbe lods xor movsb dec jo cmpsb dec push xchg clc add xchg add iret xchg add inc push sub fisub dec or mov inc add mov dec mov dec mov sarl xchg aaa clc rcrb inc pop lock push and push test lods push in das int3 loopne fmull (bad) das xchg cmp mov jg in cmp movsl ljmp cld lods push out add jle jno or (bad) dec outsb mov cmpsb in adc jp and test (bad) (bad) xor dec dec daa imul sbb jl jns shlb movb mov loopne push mov daa rorb scas inc rclb hlt sub das test mov dec xor loop cmp shrb add inc inc movsb test ffreep roll mov xchg sbb ja lret sbb outsb sbb cmp imul mov nop mov ret clc xchg icebp js sub adc ljmp xor nop int inc repz mov pop cmp sub divb jl aad lock xchg sbb fidivl je int fild pop jns jl adc add cmp mov or in add jbe or sbbb xchg movsb and jo and scas dec loop pushf pop sub add (bad) mov add fdivrs cmp (bad) push (bad) dec test push (bad) add das push and cld pop fldl aam dec roll mov loopne or test loope inc stc mov adc mov repnz mov mov ds jge jp mov subl rcll or movsb and sti dec mov sbb dec jge repnz rcl pop imul dec sbb mov scas out inc dec nop rcll pop in rcrb test push or mov xlat in add sub xor lods sub sub sub jae cmp in insb jnp daa cli sbb fcoms sub xchg arpl jne (bad) dec sub jmp add add out (bad) jbe add (bad) dec adc andl lods out dec jo in shlb mov stc in push mov pusha dec icebp adc cmp mov pop mov (bad) mov aad lds push mov add in (bad) loopne shrl pop mov dec hlt rolb icebp out jge inc (bad) dec sub xchg lahf jno push andb fldcw cmp out push mov xor xchg pusha sbb movsb rcll and pop or push dec mov loope dec jge add fs inc cwtl lret adc pop pop push in or ds mov sbb mov ret inc xor xor sbb mov jp add or fnop stc xor xor push dec aas add mov lock add (bad) ljmp add lcall aam stos ja es pushf add cmc inc (bad) mov and push sbb roll sub fldl push pop mov add jge insl push xchg push lock sub test out pop fstl je pop jp mov test sbb sbb adc add pop inc int sarl sbb aad add mov repz je test fisub sub add add imul scas mov pushf loope cmp cmc nop dec pop adc lock push sti loope arpl repnz mov popa and push into imulb sbb (bad) mov adc lods push rcrl pusha push mov lock mov shl cmp mov cmp xor dec iret in mov add (bad) mov sub enter stos lea lods add dec (bad) cwtl mov pop cmp add addl pop (bad) and imul lahf or push xor add dec sub hlt out pop xchg mov cmp xchg jnp ja (bad) cmp insb add adc dec je pop movb sbb test sbb xor sbb sbb push add loopne jb add mov (bad) pushf add in fldenv xor mov aam inc std xorl add push jmp nop clc xchg sbb imul cmp push push xor add jae adc mov aaa sbb mov add add in inc (bad) inc aad aam jo xchg js mov lock pop or adc lods icebp lahf xchg fmul call dec rcrl add push add jbe or call cltd shr mov add repnz rorb mov adc and shrl scas or lods mov mov add sbb sub mov fisubl and dec xchg adc sub sbb mov movsl cli push sub stc dec das jno,pt push addb loope add inc les xchg loopne aad add addr16 push and mov inc jmp rcrb push push or out add xor adc cmp testl jp add push insl jmp (bad) jmp pop js ljmp scas pop adc je bound add add or pop mov mov test or mov pop xor in xchg nop add inc add notb rorb hlt add push repnz add sbb push pop cmp nop push adc sbb and xchg xchg js jmp lods imul mov sbb movsb xchg andl loope mov pop xchg imul nop add in mov loopne hlt dec ret push cmp add and (bad) mov adc in rclb ret or fisubr rcll jno adc imul mov nop adc mov das ret push dec push (bad) lahf (bad) in fcompl call inc dec or mov sub add pop in or dec xlat imul inc mov (bad) sbb loop aam and push int3 popa xchg sbb pop inc mov repnz adc (bad) jne xchg ljmp shll pop pop mov pusha js adc imul clc xchg adcb or mov and push push adc cld xor (bad) cmp add outsb fist xor sbb jnp mov fild mov loope out imul or push dec test pusha jnp and shr pop or inc or add and or add or and add cmp mov lods mov mov inc cmp sbb enter xor (bad) jo inc (bad) mov pusha sub ret xor andl movsl sub mov xor stc cld subl aas mov out mov pop lods enter test negb push sub or mov leave jno imul jbe xchg jno adc fcomps sbb jnp insb mov bound dec and roll cmp inc cmpsl add scas rolb xchg insl pop inc and add and push je aaa inc or dec adc fcom xor cs in (bad) jl call jo jmp and push push sbb aaa fiadd or das fistpl inc and add push call (bad) sbb dec jp cwtl pop push fidivrl sub push scas pop in mov inc out mov fisub iret or cltd or (bad) (bad) xchg fldl test stos call scas or sbb movsb sub mov (bad) sbbb loopne push stc rcll and jns and push out int3 or popl (bad) ficoml jae int3 or sbb hlt mov or and sahf xchg movsl out aaa push mov mov int3 add cmp rorb add dec int3 push aam mov dec repz jns fs xor add rclb pop mov cmp mov in sbb sbb adc mov xchg sbb fimull jp add and out add pusha jp lods fwait xchg sbb pop outsb (bad) xor pop cmpsb jnp test push mov and cmpb or fldenv lock aam int in imul add and imul mov lods fadds test add push clc lcall sbbl adc (bad) enter cmp data16 add sub mov xchg in iret arpl and mov hlt add lret and jmp test clc cmp xor (bad) mov pop adc int (bad) nop clc (bad) js fs xchg orb fsubp out js stc cli push jno pop mov divl rorb adc mov or cmp pop hlt inc (bad) xor in adc (bad) mov push dec rorb hlt jo,pt inc push icebp add mov mov xlat add dec and sub xor push sahf adc pop ds int3 ss mov das ftst out daa insb add cmp or bound add mov push aad jo lahf mov sub dec add add adc xor ror add mov sbb loopne add test aas push cmp lock movsl fisttp mov and and scas enter pop jo out add rorb in xchg mov add inc mov xchg and clc test mov dec push push xchg add and mov and stos fwait push sbb cwtl sbb andl movsb xor in inc lock in sbb add jnp nop and mov aad insl push jg cld and adc dec es xchg (bad) jmp out cld popl ror shr aaa mov mov add scas cmp mov fmul (bad) mov mov stos clc adc lea inc add xorb fdivs call lret addb cmp jbe inc shrb aam imul inc sbb jle dec inc icebp nop ljmp push stos or sarb and pop int3 sub or inc push or dec incl jmp jecxz fsub ja pusha push mov repz inc push in mov addb sbb mov dec inc aas or lcall add incl sarb (bad) jne jo jp fldcw loopne scas add lock push xor push add jmp cwtl mov aaa fsubrl push pop sar and stos cmp mov sbb pop add jne roll inc clc mov pop xchg hlt and push call (bad) jecxz clc jne push clc add cmp xchg push dec ja add out (bad) ss add nop in mov out or pop sar cwtl inc ret mov pop jns test loope xorb xor int pushf xor xchg or add imul sbb pop fisttpl out nop int3 outsw pop ja addb cmp leave xor dec and fsubs test cwtl or icebp inc inc (bad) lea mov cwtl sbb push xchg pop cmp sbb das lods out add pop pusha mov movb stos push add or pop dec cmp pushf add mov loopne hlt push mov mov jns or sbb mov add xor fcomi (bad) lret in sbb xchg fidivl pop sbb mov lea clc out fstps sbb scas mov dec sub mov push and add dec xlat ds add and ljmp jbe inc incb or jo je add dec dec jge sbb cmp jno loope push call test dec mov inc mov sarl scas loope (bad) mov jecxz dec dec and das xor pop xor or pop add mov js push cmp add inc loop xchg outsl add in mov in jae cs not push inc out xchg subb cli dec das daa imul into xor hlt push enter pop cmc test add pop mov mov jbe add push jmp fbld clc xchg sbb or lock pop jno fwait loop cmp andb bound addb repnz cwtl cwtl mov jbe sub xchg push lret push rcrb cmc push mov fnstenv pop and enter inc and push fs and jmp xchg jl loope xchg (bad) hlt pop enter les push sbb inc add jno sub fndisi(8087 sbb mov adc adc or push jle jne je (bad) mov cmp (bad) jp push lret out xorl loop adc pop mov cli mov and pushf jmp dec or inc push and fucom mov mov lahf adc in mov imul negb popa mov mov fbld dec loop mov jb test sbb (bad) pop repnz fldl leave orl xchg daa mov shrb and mov add popl push mov add xchg fldlg2 stc clc xchg sbb fsubl mov cmpsl incl mov sarl inc (bad) ljmp add jge aad stc cmp mov and add aas jmp insb jnp (bad) hlt cmpl mov dec or mov or dec sahf stc pop pop loop jo and loope lods adc and or orb push push xchg push add cmc sbb push pop sub pop imul jb mov dec addl lock cmp add es sub push pusha jb rcll loope test repz push jmp js,pt push sbb cmpsb mov pusha cmp pop add sbbl xor cmp jp dec add std jmp cli rorl (bad) and (bad) and adc mov inc andl mov add cld push pop cltd mov push rorl aas outsb loope and ds ds dec cld lods sub clc and (bad) xor fs fistpl (bad) xor jb xchg test lret or je idivl clc or (bad) icebp mov dec xor push sub test mov inc outsl push jnp cli mov scas and das pop iret and leave jl test sbb movsb xor add inc imul add (bad) in ja mov das mov xor sbb je,pt mov lock cwtl je pop or mov or in adc nop add jno or cwtl add dec add je lods pop add push jp and shlb div mov nop nop inc jne cs fisubl test jl add out loopne inc negb mov cwtl dec cs sbb sbb rcl enter pop adc imul or dec sub add mov js add aaa shll out adc mov dec jmp hlt add lds xor out jl enter inc or and jle dec jne add sub call xor (bad) sub inc adc nop jo loopne mov xor mov (bad) stos or out pushf jmp pop jns cmp add push dec xchg hlt test add (bad) cld rcrl movsl loopne pusha adc pop mov (bad) icebp push mov pop scas aaa je inc ret es dec or arpl mov notb cmp mov mov mov push xchg gs clc add jmp lds iret nop daa sarl out and cwtl rcrb faddl pop push dec test adc lcall inc call jecxz push add loop xchg push sbbb rclb xchg fbstp loop outsl jmp push pop cld in iret mov lcall pop ja sbb test inc cwtl pusha (bad) jo or icebp dec (bad) sbb push aam add stc sbb hlt add jge fisttpll sbb mov mov cmp jbe cmpsl notb clc sahf sub push jno test add pop sbb push pop or enter shlb mov push orb aaa fiadd popf (bad) lds sti loopne mov loop add adc jecxz sub xchg add xor and sbb or lret or jle jb out imul mov xchg sbb shlb jl jg lods jne (bad) (bad) sub mov or idiv sub sbb add mov int3 push fstl jno jns test adc or or mov inc xor adc sub push push mov iret jo push rep add outsl inc push mov jbe outsb sub mov mov sub andb xchg cmp add test xor pop data16 dec gs ret call clc sub ljmp lcall add scas push sbb xor je loopne sbb xchg (bad) mov mov fmuls repnz jmp movsb rcrb lret inc push xor sub inc popa dec pop loop and add aam jl scas mov dec mov add lea pop (bad) fcomp mov xchg cmp scas jnp xlat and ja xchg add fs jg and xor mov (bad) xchg push test mov add das iret out inc rolb pop sbb sti outsb add jne lds mov sbb jecxz call test and loop pop cld adc xchg sub sbb cmp adc rolb notl sub fcomip inc mov lock adc and mov pushf mov enter and adc push sub jno sbb iret jns xor pushf mov sbb and inc out (bad) sbb inc loopne and cld cmp jle les mov mov add or shll nop cmpsb out add mov fs add or flds ds lds popa lods out stos testb cmp (bad) mov sbb or mov movsl scas les mov fisttpl or fcomps ret adc in lock cmpb inc popa mov adc and xchg or mov mov sahf daa sbb pop cwtl push sbb test and repnz neg push pop jne adc ret (bad) loopne sbb push xor mov outsb and cmp scas sbb push scas mov inc lods (bad) jne or add adc (bad) and and push icebp in xor (bad) mov xor in adc sub nop push je or lods sbb aad in and inc push mov mov clc xor fcomps inc inc add cmp inc scas dec mov mov cmc cmp jp fisubrl aas js je out nop cmp add jne jnp fnop in nop es pop hlt and pop pusha sub pop cmp out jb test push in and adc sbb lods les dec outsl dec fwait mov enter xor je je add cli xchg add fdivl mov and xchg jne pusha mov inc ljmp das stc add or ja rolb push jbe movsb or jne push mov insb lods rcr in add cli (bad) fstl pop lcall mov inc fidiv mov sub sbb cwtl outsb pop hlt loop and adc mov pop mov fcompl sahf nop inc and add push inc jo imul insb add add andb sbb stos testl scas jns cmp ja (bad) (bad) jg sbb movsb add mov outsl js sbb sbb cmpsl clc push adc sbb dec dec hlt jmp jg js js imul (bad) repnz jmp adc int3 arpl xchg aaa fprem test in insb cmp loopne pop adc fs jne cmp push xchg lcall mov mulb add nop test or ljmp and (bad) pop test int3 add data16 pusha movsb sub and (bad) negl out adc test sti or inc nop (bad) movsb lods cltd mov xchg (bad) mov (bad) or push dec mov nop aam mov xacquire shrl lods add xchg dec fadds xor leave cmp xchg in or mov pop and jmp pop fstpl popl inc and (bad) push shll aas je lods push mov push add in push jo arpl push and insb push orb cwtl inc xchg je jg test sbb call out pop add push repnz loop cmpl cli dec and test xor fsubs push push aaa jl out add xor jg and lahf xor mov push rcrl sbb pop push xchg imul pop and mov prefetch xchg aas mov jb loop in mov sub cli jnp jns dec sbb sbb movsb dec aam js in mov jle arpl sti mov add loopnew (bad) mov sar mov cmpb movsl loop dec xchg int3 mov inc out stc dec sbb add xor orb in and xchg add mov and adc cltd push scas jbe pusha nop xchg pop arpl pop cmc adc loopne lock insl sub ljmp mov fnstenv adc mov les movsl jmp push (bad) mov adc dec add jmp add push mov dec cmpsb scas clc pop les subb testl cmp clc dec or and pop test into sub adc fist add mov test or xor cmp cmpsb call or insl xchg mov adc mov jl je add pop dec mov push sbb nop push sbb xchg icebp mov pusha mov (bad) fsub xchg inc xor push cmp addr16 push (bad) add sub push pop jo nop mov mov pop mov pinsrw lret add das xor adc jp call aad mov mov add insl mov mov and push xor mov sbbb bswap mov lock sub push (bad) and loop add or add out lds xor hlt sbb pop std sbb cmp mov xor into pop jo push dec (bad) ljmp sar inc lods dec pop mov out pop repz (bad) in aam push and fdivs xchg xor nop cmpsl stos ds mov lcall (bad) repnz dec mov pop jmp and pop xor loopne and mov enter andb fimull jns add xor jo fiaddl testb fisub cli outsb outsl sub add cmp rclb or xchg stc and inc outsb xchg dec rorb mov lods dec adc roll ffree push movsl pop nop aam jge adc (bad) jp ljmp dec mov out mov ret add mov push and inc hlt in mov (bad) mov adc cmp and dec enter cld insb rorl clc pop xchg jmp hlt xchg icebp dec xor pop movsb mov sub or nop inc lods sbb add in (bad) sub fsubs sub and les daa js ds and dec dec inc and inc mov scas xchg pop mov imull icebp add push jecxz add cmpl sub push out mov jo loop mov rolb adc pop add xchg mov cmp fistpll cld stc cmp add test xor in xchg pop scas in into add inc fnstsw lcall add nop mov fbstp add inc xchg ret loope test test mov mov pop or push outsl stc add in inc sbb loopne daa js popa (bad) out add in out enter sbb sub and adcl scas repz out out movsb in push loopne loop sbb sub mov xchg xor shlb js sbb pop and aam cmp xor test add andb rcrb rcrl pop ja mov xchg and es cld lock sub pusha in call (bad) mov push lahf scas xchg sub add and pusha xlat fisub pop dec clc mov jae push sbb pop sar ljmp lret adc jns pop push and insl push ret jnp sbb push stos dec xor fisttpll dec add jns add addr16 xchg pop add cmp sahf aaa shrl add test (bad) test mov xor mov test pop int3 das push adc daa mov and int3 add sbb test (bad) xor or xchg mov and adc add loope stc and cmpsb cmp mov call adc fstps mov sbb ds pop fwait cmp inc std push inc or push cmp out cwtl fs rcrb dec inc cmp mov adc push in lock or add imul mov jnp adcb mov loopne (bad) and lock movsl xchg roll pop mov xchg and in jbe insb add mov inc adc mov xchg mov mov das inc cmp push int3 jge mov inc cmp faddl aad jp insb stos add scas insl (bad) and cs sti mov insb js push push movsl or call (bad) rcll (bad) insb mov out out sbb mov fsubrs dec sub dec xor rclb or push mov loope adc mov jg sbb call xchg jmp in cwtl jge out icebp ja mov (bad) repnz inc push cmp or js pusha insl dec lock mov pop sbb xchg lods push popf test rorb push pop lods mov sub jno mov scas js pop cmp pusha push loopne loop xor scas xorb and mov leave add imul (bad) lock stos cs ret or cmpsb movb rcll or (bad) cltd fstl or enter fsubrl pop lock mov andl mov add pop (bad) adc (bad) or mov sbb sbb adc jnp or sub or xor (bad) aam out xor cmp hlt sbb mov (bad) test popf dec hlt push and and test sub cwtl add xchg push adc xchg call orb and rorb push adc in faddl enter push ret jecxz add jl idivb sub pusha and cwtl dec jmp arpl or add cs cmc or mov inc rcr or push les aam pusha icebp mov pop js mov dec fwait adc jmp pushf mov clc add movsb pop nop mov and test orb jp jae adc rcrl ds aam sbb arpl out (bad) js sbb xchg sub popa hlt adc mov or adc and push ds adc mov and pop icebp mov inc lcall nop dec pop clc dec push and inc mov and out test mov (bad) sbb xor jb push dec push fs jbe mov inc xor add or stos test test mov or lods xor push pop push jne inc jg pusha or dec push and cmp or push call aas push lods clc xor loopne lods ror push fdivr int3 mov aam les cmp mov sub cmc js and sub fdivrs or std inc cwtl pop xchg inc jg push mov aam adc je add push sahf mov cwtl ja fs jno in xchg add icebp out test dec jb jb dec adc movsb add (bad) and jnp xchg lock lock mov rorb inc or (bad) movsl mov adc nop xor dec or or and in and sbb adc add hlt adc inc pop addl and aad or mov cmpsb sub and add (bad) js xchg mov lods pop outsl scas sbb mov stos mov je leave mov cwtl jl into push pop mov mov es bound jmp add sub xor sbb pop les cmp icebp movsb hlt es leave adc roll in mov mov pushf call sbb adc pop in dec jle adc nop scas push loopne (bad) lods xor xor int3 mov push hlt enter fild test movsb add and pop or ret mov nop in pop sub mov sub pop (bad) sub mov movsb enter fs sarl push add push mov adc xchg cld jl shl add pop out jg pusha xchg hlt lea loope movsb pop sbb paddsw ret and adc xor (bad) sahf cwtl out rorl cmp loopne rcrl mov mov xor inc jge adc stos adc call add insb pop in or and dec je js orb mov push in and mov sub xchg mov mov or jns mov inc xchg push roll inc dec test mov outsl adc nop shr imul push inc je and dec xor xchg lcall jmp xchg pop imul push or cmpsl sbb or cld addb cmp sarl pop sub test jmp add add cwtl ljmp imulb or inc mov aas orb cmpl jmp xchg sub movsb mov or cwtl xchg adc in les sbb cs push in pop adc xchg cmp lock xchg xor jge repnz adc mov andl or and push pop or add pop push sub mov or daa adc call out in lock jecxz and je fisttpll xor sbb decl add pop fsubrs xchg imul shr outsl xchg loopne mov (bad) test and or pop xchg rolb sub adc jb and cwtl sbb adc int3 (bad) add les out mov (bad) outsb cmp add and inc fsubs push lock mov push adc rolb (bad) xor cmp sbb out add data16 dec add mov stos loope cltd rolb dec mov (bad) xor and out jp jns jne or icebp push add sbb xor push cmp inc lods jle addb sbb subb mov sarl sbb sbb jae mov sbb loop push inc jnp add (bad) and iret ljmp add cmp lret idivl pop ret pop cmp lock test push mov xchg ljmp pop adc fwait js mov jno popa jp loop add dec je push sahf dec mov pop xor stc daa pushf cld (bad) fsubrs (bad) xor or sbb xchg cltd stos dec cmp lret adc (bad) dec scas leave movsl mov call in loope adc pop sub or xchg add or out or add in loop dec int aaa push push inc pop inc stc push pop or jge xchg es dec inc inc jge icebp mov cmp aas mov sbb lods adc fildll call insl mov inc test (bad) das jnp push dec rolb sbb mov fbld in mov std fdivs out mov add or or xchg cwtl outsl clc push popa mov xor std mov pop xor and cwtl orb ja pop cmpsb icebp mov adc adcb sahf mov xchg sarl outsl test adc ror cmpsb xorl test addb fs shrb xchg push movsb sub dec movsb inc jb mov or (bad) wbinvd lret mov xor repz popa mov cmpl aam dec fs aaa pusha rclb js mov sti adc jo adcb cld adc xor aad add pop mov sahf popf add sub test pop cmc inc mov in inc adc call lods xor ror stc push jp call push repz call push out pop xchg push (bad) add mov mov aam rclb fwait and or jne hlt enter bound enter sub push js addr16 sarb sub int3 xor popa or push lcall in fsubs out jmp cwtl mov pop inc dec fldenv iret sbb mov dec or add jbe adc imul ds fsts rolb jbe movsb mov data16 push add or inc in mov push mov out enter sbb shr adc lods fdivs hlt push lods add enter jge add xchg xor icebp lahf pop dec outsb pop add repnz loopne cwtl mov aad xor and clc iret xchg add add pop fs jg add rclb add hlt jo add fiadd outsl push push lcall xorb sbb adc sub sbb lahf jno lcall (bad) push and fnop push aam jne mov test jle ret mov sub ficompl dec add mov push dec sub dec cmp lods or nop leave jge lods add test imul cld ss and or cwtl shlb or andb scas or dec out nop inc sub lods jnp mov add cmp push scas pop pusha adc andb pop sub or ss mov insb sbb sbb mov and sub sbb daa inc sub enter push ljmp repnz push or jb pop dec mov rcl push mov pop mov push pop lret loopne add mov adc adc lret inc fstpt test mov add test or insb lret add fwait mov push stos add push jle dec xor xor push andb fwait push mov cmpsb adc and mov xor pop mov cmc sahf (bad) enter test or iret sbb addr16 sub adc cmpl or fwait pusha and add xchg scas shr divl inc test lret jae lcall sub push aas mov cmp xor lcall push ret movsb int3 inc gs mov mov jmp jnp xchg test int3 inc movsb fcoms sub mov jno cmp xor add out xor adc mov or rep enter movsl outsb sti pop pop add dec mov pusha mov inc cmpsb push (bad) cmp jae pop or sbb (bad) repnz mov les lock scas add lock and pop xchg pop lock sbb addr16 xlat test fisttpll insb je movsb pop popf sbb mul leave or push push pushf or (bad) or xlat test adc inc stc cwtl andb sbb xor icebp jl pop mov les ror clc fdivrp dec push fdivl insl jg mov aas mov jno inc mov jns das fsubrp sub mov test movsb scas xorl mov sahf mov xchg mov mov push in loopne imul and jno outsb lock loop je adc insb pop or jle imul or push xlat xchg je (bad) dec jp mov (bad) jmp mov jmp add hlt mov and cmp jnp mov cmp jb pop inc jmp mov mov fisttpl das xor or sbbb dec pushf mov fldenv daa lock fsubrs add adc and lock repnz imul jno xlat push test stos add fmuls stos sub fadds xchg and and mov pop stc lea sbb cmp sub stos loopne sbb ds loopne inc xchg jle in or mov sbb or outsb (bad) mov hlt mov pop fmull sub sub adc jbe mov fadd mov or push inc xor sbb cli push mov cmpb sbb or dec sub jb or xor jg cmp and rorb xchg test jo fs in loopne stos add test jge sub pop adc mov lods push jmp nop pop data16 (bad) lock imul cmpb dec xchg sbb cwtl subb pop pusha (bad) or cwtl addl push xor comiss mov shll jns push iret mov pushf mov pop push inc and adc test subb inc push mov icebp sbb mov jns push pop scas jmp jnp sbb (bad) hlt xorb jno mov mov push adc or ds jno or clc push or inc fmuls xchg xorb popf and adc addb hlt das or test test jns fild inc fsubrs mov popa push std inc les mov repnz lods addl gs mov fsubp adc mov mov insb (bad) call (bad) dec pop sbb and push in popa pop jecxz add in cwtl adc dec xchg pop cld (bad) je gs xor cmp xchg push sbb outsb inc mov pop push and faddl in fwait dec jno es movsl jne int3 adc mov push aaa dec pop lahf fldcw das and rcrl push mov xlat fcoml daa xchg jb cmc call gs pop mov xchg rorb adc movsl cli xchg pusha sbb ljmp or xor js daa add shr fistpll inc xor jae cwtl push loop add pop pop sub dec fidivrl jo sub sbb bts jge adc test xor inc mov sbb andb subb mov inc jae sbb das xchg push cmp mov inc arpl subl push ret inc in pop stos xchg inc cmpsb xchg fbld sub or cltd ljmp pop jnp mov or inc mov sub jge js pop jmp inc pop jle push sbb aas add lock push inc pop add mov nop cmp and mov repnz and popf pop adc dec pop mov fldl js clc or std cmpsb add cmp nop push enter mov fadds adcb loope fbstp add in lock fld1 inc add sarb pusha xor jl add pop mov pop pop aaa jnp (bad) lock sahf or cmpsb mov pop sar rorb fmulp nop add test dec fild xor mov das and pxor addb lock lock (bad) hlt pop fstps adc iret clc sbb mov mov aas and xor jecxz xchg mov into sub stc aas jae mov adc cmc push pop fnstenv add jge cmpsb popa mov mov push notl jnp icebp mov pop add xor add in es fnsave add fidivrl aam add adc add jns pop dec sbb test int3 int3 or xor js add pop inc mov or or sub pusha pop jbe imul xor pop aaa mov inc or pop push push mov dec mov adc dec pop pop inc mov or adc aam push push cli or mov fdivrl add dec pop fldt call dec xor sub out or add fisttpll adc loop pop xor inc fnstenv test mov loopne leave fldenv sub icebp aas inc data16 mov push mov js push pushf mov js test adcl rcrb xor sub push inc leave test and mov xchg mov andl inc je cmpsb mov sub or or in into add movsb jne xchg sbb mov sbb fcmovbe faddl lcall dec xor cld shrb inc mov dec dec cmp dec jo add adc int3 sahf mov pop and mov adc dec add dec inc jmp inc push or mov sub xchg xchg inc inc movsb jge push pop hlt jae repz or (bad) mov or insb push lods adc pop xchg pop aam push icebp fldenv xorl popf hlt sub mov loopne mov jns jo inc icebp xchg sbb dec fcmovb pop mov cltd adc fdivs add lret das or in inc test add inc (bad) (bad) sub sub mov xorl and xor or orl test enter insb sub fs loope sbb cwtl push add iret mov dec mov add out adc jp xorl jg stc push mov (bad) mov cltd stos pop dec mov add in jg sarb sbb cmp inc jp dec idivl inc xor push add jns lret fcom fadd sub jle dec push les jmp add leave push outsl mov fs inc xchg or leave lcall hlt cmc xchg or negl leave loopne or loope ficoml loopne adc scas loop sbb out lds sub lods nop clc dec test popa roll xor hlt stc test fiaddl lret xchg pusha (bad) adc (bad) hlt sbb dec fs dec and and aam fndisi(8087 mov dec sbb hlt ja mov push test pop mov outsl sahf dec sbb and dec fcomi pushl (bad) add ret adc pop add aam jg push (bad) lcall imul mov in hlt mov pop jae xor push xor cmpsb lock lret sbb mov hlt pop mov (bad) loope cmpsb jge mov lods fsub and pop add and mov inc push (bad) test or pop pop cmp fdivl test test in and test pop push mov outsl or xorb mov xor mov and xchg xchg add xor outsb mov jl push jns dec pushf adc sbb pop fldcw sub and push lret test adc rcrl ret cmp movsb call dec (bad) and sub push cwtl insb jge push sbb jbe add incb enter in ljmp push sub fsubs mov mov daa inc cmp inc into add jle rcll aam cmp mov cmp int3 push test and or enter repnz sti rcr (bad) or stos out mov mov adc (bad) into sub out mov andl or cwtl nop insb mov add gs and test and and les cwtl mov test jp cs data16 xor sbb lods pusha loopne out sahf jo add xor push fcoms sub cmp push je lock (bad) jg and test or cmp gs jnp test xor les xchg inc jp mov add (bad) xor mov pop clc ret push inc cmp cmp add mov icebp or add dec sub fld hlt cli mov pop fcompl fsubrs sub pusha pop jb mov rolb ljmp test (bad) mov jae rcl js in dec sub mov mov xchg adc xor dec cld outsb or lcall out enter xchg fcoms xor mov cs sbb cltd xchg fdivrl insb les inc or imul xorb nop or dec inc lods idivb enter push and inc dec andl add (bad) lods jmp sbb inc or xchg add hlt ds or mov (bad) call test repz push mov adc jb xor fcompl add loop lods and icebp sub jl mov pusha fdivl mov popa rcr adc sbbb sbb mov mov in add mov hlt add push pop add sbb lea push daa adc shrb dec idivb xor sbb (bad) mov cmp fadds mov or jl movsb bound inc adc fnsave inc push adc sub fild iret inc and adc fwait mov mov movsb inc rorl js mov popa iret cmp mov fs repz stos ret or cmp les dec mov mov cmc pop lret add and mov add or or cltd mov sub push and pushf dec or add in or shll les or mov daa lock mov (bad) loopne dec sbb clc cmp repz adc xor pushw fisub pusha push inc test (bad) cmp dec cmp shll ss inc mov push lret jo es addl adc into imul sub adc sub outsb (bad) pusha pop pop sahf and mov add jl popa ja stos xor fcomps pop mov jae repz cmpsb push lods fsubl scas scas xchg add call mov dec and mov stc jne push fwait pop pop clc pop sbb ss dec pop cmp stos icebp loop test pusha es fildll lahf sbb inc enter add pop jle inc pusha repnz iret cld add fchs cmp or mov out es lahf mov pop dec push cmpsb je cmp outsb mov pop lea sbb cmp and nop cmp inc xor je sbb sbb sbb cli lods shr test es aam ljmp sbb mov nop sbb add cwtl push add out in rcll or mov xor and icebp fs dec pop adc add xchg mov jne shr or adc in sub outsl add (bad) divl aad push jp and addr16 inc fistpll inc xchg push add aas outsb sbb scas js int3 jns sbb add dec or fwait insl or push jge inc jg adc clc push wrmsr sti outsb inc lcall and add mov das cltd (bad) mov lahf mov int andl sbb and call js and xchg addr16 movl fistl and loopne jecxz push movsb xchg jne mov sub add lock xor xchg int3 pop sub push data16 cmp mov repnz (bad) in stos cltd xor mov or mov adc inc xchg ja pop jg add test mov jb icebp aam xchg iret add sbb mov xor mov push scas ss jnp call add lret pop sub dec pop jl pusha or cmp mov mov cmp fnstcw add mul shrl mov test mov rcll mov dec pop push sbb pop js rolb xor jns xlat add sahf xor imul call and cltd xor xor aas imul cmp insl aad lock xchg movl mov andl lods add js pop (bad) fadds inc pushf jno add dec inc inc js imul dec push jno in stos mov and and inc push fisttpl cwtl add add xchg add lods xor test enter test fld or loopne xchg mov add jnp inc and fpatan inc pop movsb or popf pop or jp jle sbb mov rorb adc mov bound add mov inc mov dec cmpsb or pop vzeroupper into sbb inc add icebp cmpsl arpl mov pop xor cmc in adcl or add loope cld push push add inc lds stos int3 aas cmp adc push push jns xor inc sbb dec jno sbb cwtl repz sarb cmp cld rclb xor xchg sbb pop cmp repnz adc add and cmp lock or jns mov adc or or in out mov js add sub ret add loop fldenv push push test adcb scas dec in cmpsb rclb sbb or test mov cmp out inc or dec inc popl and movsb stos sub or xchg mov or mov inc sbb pop push push and lea fist xchg or adc loope xor pop and repnz add fs xor (bad) ljmp or sbb popa pop mov out shlb test inc mov add sti lret je or fwait imul adc xchg inc jle xorb cwtl mov rol xchg nop pusha dec clc orl lds mov add out mov sub in inc addl jle add loopne cld add mov cltd test orb mov inc int push fxch mov push push mov sub fs inc or cmp test (bad) or adc sbb pusha iret sub cmp addb mov (bad) sarb shll enter dec fisttpl cmp adc push or mov stc mov jb or or sbb inc and and add sub jae fsubs jp xchg inc les adc pop dec or add mov insl aam sahf push int ljmp jl jnp xchg hlt in or add (bad) mov movsl dec and daa cmc mov xchg bound or inc je jle add (bad) test jnp xor sub clc (bad) mov sub stos insb adc mov es mov orb or icebp mov mov sbb add or jns adc xchg pop add mov and lock cwtl xor fadds inc rcl cmc jnp daa or subb adc fiadd inc xor std xor pusha test daa xchg sbb addb adc xchg push and inc or rclb insl xchg jne out movsl aam cmpsb out enter popa fstp fstcw adc jnp or or and test fsubrl jge outsl mov sbb or sbbb adc mov imull and mov or movsl xor inc je data16 pop imul nop lods push ret add adc and and inc into cmc dec xor push in (bad) xchg loopne jmp xchg lock mov mov lock testl shlb add pop jns dec lahf incb xchg adc es mov mov repnz mov and in (bad) mov xchg jbe add jge loope (bad) pop push daa out fldcw xor dec jns enter fstps inc push loopne jge mov lods jl sub outsl adc fdivrs sbb repnz inc add mov out jne mov rol cld sub cmp push les lods pop inc pusha push ja mov xchg dec ds jno dec les mov and icebp xchg jl jns loope rcll push int3 out cmp fnstcw fidivrl xor imul jmp (bad) notb nop das and stos fstpt (bad) jl jnp and dec psubq adc pop mov sbb addl jnp nop mov cmpsl dec xor or sbb out mov aaa adc sub mov mov sbb mov fist cmp or mov sbb dec lods pop (bad) dec sub inc and add fnstenv cmpb push adc es movsb pop out (bad) push and mov test test sub xchg andl jae pop adc addr16 sarl add sbb cmp loope xchg add jp xlat cmp out mov mov test xor frstor adc jno xor lods fmul xchg stos lods inc scas jnp mov sbb ss mov lock dec test sub dec aas inc push mov or les (bad) push dec or inc push and push xor cli icebp cwtl out insb pop test dec cmp loopne xor mov pop movsl stos sub sub add mov mov rolb fadds pop pop imul mov pop xchg in in add les out push or mov dec loop fdivrl inc mov xorl int3 and and xchg mov and mov aam sub out dec fdivrs mov loope cwtl enter scas pusha xchg add fiadd and inc leave cld inc pusha mov gs andb rol out test mov aad fadds movsb call mov in cmp dec bound pop hlt xor and sbb xchg or (bad) and fsts lods add mov call leave pop mov pop outsl sub fstl mov cmc leave out jle add xchg pop adc fs subb add lods sub or mov sbbl in mov xchg test or or dec inc xor inc ret push add add addr16 je mov and add sbb inc or push rcrb adc mov aam int3 (bad) xchg jo (bad) out iret int3 push pusha add push sub dec cmp cli push cmp cmp sbb ror cwtl mov pusha or test test adc (bad) aas push sub xor mov cmp test xor cmp in movsl and or enter test rorb daa add adc pushf stc push mov fistl push into push sbb lret daa ret or sub in es adc cwtl pop or loopne inc jge mov imulb xor mov mov push xor mov push in call faddl mov hlt outsl jp repnz pop xor xchg ss aam jbe push (bad) hlt dec push or aam sub and in inc sbb addl nop popf sbb adc cld xor lret adc cmpsb add mov cmp in mov sbb mov testl dec ds xorb or add cwtl inc and mov loopne repnz mov mov mov mov scas dec xor ja adc dec in call push mov call rcrb add (bad) pop mov enter xchg xor add pop add push fcompl lcall sahf sbb xor movsb clc adc mov shrb xor sbb rolb sbb pop or jp dec lahf adc shr mov jnp xorl or pop daa leave lods je or cltd (bad) movsb js je jnp push and icebp sti daa ficoml mov mov sub or repnz mov aas pop loopne lods inc xor subb cld (bad) xchg sbb mov enter nop movsb push dec roll leave std adc pop jge cli add (bad) cmp dec inc push jae rcrb xor lret xor (bad) jl (bad) push movsb or xchg enter add jge lods nop mov xchg add (bad) push ret arpl cmp cs sub sbbl xor int fldenv sahf hlt jb lods js movzbl or outsl pop add mov rclb dec or adc hlt jecxz lods lret jnp sbb dec sub jl mov (bad) cli dec nop adc cmp jp sbb add sub xchg xor jnp rcl cvttps2pi lcall mov push cmp in add insl cs sarl xor inc movsb stos push daa rcrb pusha pop rol mov sub loopne test push imul xor pop data16 mov sbb clc in pop sar xchg icebp mov lock pop mov xor sub dec (bad) sub fbstp in mov and and hlt aas pop inc xor imul sub adc test cmp sbb mov or rorb sti mov dec ret hlt hlt push push cmp nop or xchg int3 dec dec and cltd cmp dec aam lds jecxz cli call repnz andb fnstcw push pop out mov nop call nop adc mov in stc (bad) xor jecxz test std add mov mov lock adc inc hlt dec xchg xor mov in add out mov xor ret mov hlt call scas in enter and mov dec loopne add add dec mov add les cmp cmp mov pop xchg in pop xchg lock imul es jmp out lds jnp or adc movsb lods jle cmp out adcl lock add (bad) or mov lret int3 flds push fs hlt dec pop rorb in lods xor sub es sahf mov inc cmp or xor push inc pushf test hlt loop vmread aad pop les ficoml pop add (bad) scas mov xlat mov sbb add push dec hlt mov rcl int mov inc nop std sbb (bad) add outsb xor and lods inc add sbb inc pop insb pop mov icebp insl or push nop jns and jecxz xchg jbe aaa inc call mov and dec xor imul sub pop hlt xor push fist les push mov mov pushf cld pusha inc pop and and test dec cld test dec loop jl and icebp sub test adc push sbb or or cwtl adcb push sbb repnz in shlb add fstpt outsb xor cwtl add cmp mov fdiv push lcall sub mov sub inc xor (bad) jmp sbb dec aam add push inc inc mov or shrl fsubrs inc add push cltd or xchg add ds dec and xchg mov (bad) push lds mov pop inc dec cmp inc addr16 mov dec add cmp sub mov or cmp xchg addb dec cli ds inc push mov pop jge add mov cmp in jo mov add setnp inc out add leave adc sti inc adc mov scas rcr sahf adcb je or dec idivl (bad) ss pop test mov push adcl inc ljmp dec rcrl or sub sub cli mov in cmp enter repnz iret pop adc insl push sub fs mov out pop jnp insb mov cmpb imul aas inc or (bad) push pop dec xlat xchg sub mov xchg imul mov and (bad) cmp jmp push mov xchg mov lds mov jo add (bad) loop sbb jae (bad) fist xor mov inc bsf inc adc sbb push pop xor ds xchg pop push push int clc add adc ret call and andl movsb add fcmovnb cwtl mov fisttp add cld pop pop nop insb mov push aas xchg pop std ret xchg and (bad) cmc xlat lds lock cmp fdivs out insb rorb sbb fwait jmp adc mov push xor mov test inc inc or inc aad adc dec push mov sbb dec push iret cwtl and mov xchg test pushf sbb (bad) and inc lds sbb leave or insl adc stos add sar and hlt adc add inc sub adc enter jle fmull cmp dec add mov xchg mov inc aaa xchg xor in push mov add or or mov xchg xchg addr16 dec negl and xor dec xorb jecxz rclb xchg mov gs test xchg pop mov pop inc add inc repz mov xchg push (bad) or popf ret mov xchg mov or and mov lret push leave xchg aaa jle xor (bad) mov mov (bad) fistl ret pop xor inc cmp cld mull inc cmp hlt adc int jne cmp clc xchg xor sahf or int3 (bad) pop mov cmp mov and int3 push adc js nop add pop cmp jl mov mov fmull jge mov xor sub int dec add or fmull out cmp cltd add cwtl jno test push lret fwait out xor inc es mov cwtl inc ljmp adc adc xor gs in add fucomp imul push dec dec and mov nop and mov daa push inc jb (bad) icebp add test les and xor sub aam inc lock mov leave pop adc jecxz loopne or lock hlt fmull cmc xchg adc jg popa cltd sub pop iret shl (bad) cmp ret sbb pop jb cltd and or sbb test xlat dec mov js (bad) imul (bad) daa add ja fs pop mov (bad) das xor ret cmpl outsl sbb adc jecxz xor sub and pusha into outsl xor repnz or push xor pushf or push and adc pop jae (bad) cmpsl int mov pop add adc adc testb js add cwtl dec (bad) add jns pop cs roll mov (bad) cmp jl pop add push shr and inc test adc cmp in ds imul dec popf cwtl and ret (bad) mov push jb add or andl adc mov (bad) mov unpcklps lahf fwait pushw xor or jno loopne dec repnz mov out xor imul cmp in lret pusha les jb (bad) mov or dec ss adcb (bad) jle rorb clc aad cld and sub add test and add inc sbb pusha pop cmpsb loopne push loopne sub cmpsl jge jae mov adc mov (bad) dec push add jmp mov sbb int3 lret cmp pop xchg push fcoml cmpsl xchg adc enter imul jge aas jnp sub lea push jg (bad) sbb xchg xor lds scas push sahf inc fildl rcll jp and sub enter sbb mov xor cmc enter aam mov push mov cs cltd xor add mov lea ja cmp cltd in pusha cmp gs rorb bound push add je fisubl shll (bad) adc sbb push dec leave jne add lcall imul icebp mov inc xchg inc mov jbe cmpl loope dec cltd cmp lret repnz pop xchg sarl aad repz out add insl mov shrl cwtl or pop leave jl test xor (bad) xchg dec (bad) cwtl ss and mov inc fmul push iret cmc (bad) pop add loope lahf (bad) pop sbb pop xor out scas cmp jecxz push cwtl add shrb jae cmpl jl pop lahf arpl ds push out fiadd data16 push stos repnz loopne (bad) pusha iret imul xor adc fildl cld xor dec (bad) scas jo pusha rcr stc in push adcb jl ja add push or cmp or add cwtl adc xchg bound push sub push push leave mov ja and rcl adc leave mov scas icebp enter jmp add mov lods adcb arpl cmp mov ret adc jae sbb xlat lds cmp aaa mov cld cmc out or ja inc xor add fdivs pusha movsl mov shrl pop test xchg mov add ss add data16 cmp mov movsb lcall sub adc sub or jp cmpsb add int3 or mov xor jb mov adc aad ss sarl js (bad) dec mov add xor add xor lret jo clc inc add dec pop mov mov add cmp jge mov (bad) loopne incb outsb mulb xchg enter lock bound sarb dec jge and addl loop push mov int add xchg push pusha adc call (bad) sbb add pusha mov cmp fbstp and mov js testl adc sbb cmp jno outsl aaa les add mov mov and lods add sub sahf or iret lcall xchg je mov stos push rcl rclb add inc test and dec pusha les pop mov adc fsubs mov loope mov mov add ret lds push mov jo jne mov sbb add les dec das pop sti popf xchg push iret sub rolb and jl cmp fildll xchg and pusha and add and add into cmp (bad) xor scas loope sbb push xor fsubl mov jae xorb imul pushf inc lods add add cmp mov add xchg inc mov dec push and adc ret repz mov pop and sub xchg push and stos sub and lahf cmp jns ss cli jp lds stos cmovle push xchg rolb add ds add and ret daa sbb insl rolb stos out mov les sar add outsl jle out orl mov xchg sbb jne pop cmp lods mov jb arpl inc daa cmpsl (bad) fstpl inc push divb lds sarl xor enter lret test std in jae data16 je xor dec dec outsl dec test mov into in lea test xchg scas inc inc and add mov ret lahf mov (bad) xchg add push lahf xchg imul xor mov inc inc and mov aaa negl dec sti cmpsb mov loopne mov mov or enter stos push add les jmp dec loopne mov push sbb mov xchg fwait mov das pop pushf (bad) sub pop lret add daa addr16 dec mov lahf mov adc or call daa out inc pusha enter and iret add ds je push sbb (bad) inc cli cmp dec push adc cmpsb mov inc nop mov aam vpunpckhbw xchg aaa clc xor and add insl (bad) sub add inc loope insb inc ja mov stos or fadd insl (bad) mov cmp gs leave inc cwtl adc sbb mov in or cmovp pop add rorl gs ret test push sti test fistp cld (bad) cmp enter jle ret js xor rcrl mov enter sub test sarb pusha push or loope mov cli int3 pop popf hlt cmp scas push (bad) aas sbb add jb addr16 inc or xchg and scas xor outsb dec sbb pop push les and sub lock dec call xchg or mov and sub jne out push je and call cmc mov mov sti subb ljmp lret stos mov stos jl mov mov push (bad) jecxz mov movsb xor (bad) je jp (bad) inc xchg int3 or popf mov (bad) jae je xor pusha pop out shr add shrl test or test sub jne fcoml pop pushf push mov loopne and adc and and pop mov dec hlt dec xor aas stos scas adc and push adc pop mov rcrl xor lds pusha xor inc xchg popa sbb adcb xor or or and mov sub sbb sbb adc sub mov aaa call cltd pusha or (bad) and xchg dec cmp dec test or pushf mov mov hlt rcl insb sub inc push gs sbb xor push in push mov push xchg xchg or movsb sub xchg push test clc lcall and add or aas inc cmp xor mov aaa in sbb dec fsubs clc xchg xchg adc cmp push mov sbb and jne xchg push inc cmp xchg add xchg mov xchg mov mov fwait inc push mov repz es and push mov jmp ret mov popf imul test pop and push inc (bad) repz sub push cmp aam sub mov dec sbb mov push add lret dec stos sahf ret pop lahf sldt xor push popa adc sub lahf (bad) leave mov and leave pushf jo js xor in rcll sahf lcall cli and inc jo loope mov loope in and cmp jl cmpsl ffree sbb jp jb dec cld aad add adc pop loop rorb mov jecxz mov sarl sbb aas lock jg sbb rcrl push add mov andl inc mov in mov adc sub xchg fild call jno dec pusha subl (bad) mov es and sub push xchg rorl fcom adc push mov scas into mov test stos sbb (bad) mov adc rcll inc out mov mov cmpsb dec movsl mov adc lret cli or xchg push dec stos (bad) stc pusha mov sti and dec decl and xchg in or (bad) mov arpl mov rcrb add stos xchg sub cwtl sarb adc push fcomps add xchg mov inc and mov lods dec dec je fs xor and mov and and or and (bad) and and mov mov loope mov shlb icebp sarl pop jno ret and pusha adc bound mov stos call dec sub dec sub repnz add ds and push mov repz mov mov addb add shrl sbbb adc add inc mov mov shll popa sbb mov mov clc bound es (bad) rorl les jb inc mov mov add xchg pop mov jo loope les lods andl dec mov sub ljmp stos push stc dec mov jnp inc in mov xor inc or inc sub hlt (bad) xor add repnz andb sub jno add loope and mov pop inc leave pusha cmp cwtl sub out pusha andb push stos cmpsb jno (bad) add ds pop test jb pop push cwtl and (bad) cmp push aas pushf mov (bad) scas cmp cltd inc adc leave mov mull iret sub jmp ret call push or push into dec mov xchg int3 call jne add push add pop jecxz mov roll into arpl lds and in mov and xor adc pusha cmp mov js dec mov leave dec and pusha add lcall add rolb xchg adc add jb add pop pushf neg lds add inc test adc stos sub das ja sbb cmp mov leave aas sahf pop mov lret xchg cmc in pop jns pop cmp shrl roll xor repz mov mov jl insb xor ret cmp sar bound test nop adc into leave sbb adc adc rorb sbb dec xor push or dec sbbl dec sub push mov sbbb add mov iret pop sub mov inc and cli jo cmp add pushf cmc push xchg pop jle or add jl jb sahf in mov int3 mov cmp mov clc push inc insb rorb inc and ds adc inc push int3 popa dec adc imul testb inc mov add (bad) iret pop mov icebp inc fadds roll adc ja in mov fildll cmp pop shll loope dec xor jne inc test dec adcl and rolb nop lahf hlt push xor mov or lods push pop ret movnti mov int3 inc mov add add push pop ja adc das pusha pop movsl rorl enter xchg (bad) pop arpl or test imul sub mov dec pop add xorl pusha mov mov pop jae movb stos jecxz or mov xchg add mov sub call or (bad) xor fcompl or mov pop (bad) add (bad) pop loop add and jle adc ret pop sbb (bad) shll sbb mov cwtl fnstenv pop mov push mov xchg nop or notb xchg pushf add and nop dec fmuls pushf pop test sbb mov adc push lds and popa dec imul mov xchg js lahf mov movsb bound add xor and xchg nop outsl jle xor ret cmp lock stos mov xor cmp mov or mov cmp sbb or addr16 adc sbb repnz sahf repz (bad) mov xchg mov xor testl mov xor dec adc jbe add dec sbb push pusha call sbb insb (bad) das dec pop sub (bad) sarl sub pushl or lret pop ret xchg aad sbb rol mov xor mov int3 lret adc jno pop mov mov sbb mov in clc loope je pusha repnz notl and and pop cmp pop mov mov out add inc (bad) cmc xchg or mov ror ret mov push or pop mov or adc mov adc pop lret add pop gs mov or adc mov inc push adc lock push or sub sub cmpsb shrl add add mov loope loop or jbe repz shrb repnz mov jge xor inc or mov aad and or cmp mov in aaa pushf imul pop lret mov add in test sti add pop pop and mov int3 (bad) sahf int3 add lret sub and stos xorb dec test mov adc mov sbb push ret sbb pop lods mov in jnp je loopne and or jne into pusha loopne mov (bad) or and ljmp dec mov add enter mov lahf cwtl aam test mov push sub (bad) cmp add (bad) insl mov mov mov mov rorl and (bad) jae nop faddl mov cmc bswap or sbb push movsl mov rcrl and and xchg rcrl gs cld and add mov pop mov fcmovb out inc sbb adc insl and or pop cltd pushf je lock cmp pop mov test addl ret xor adc mov pop insb rorl push mov push xchg rcrl dec and pushf mov movsb mov adc rclb lods clc add js cltd js cwtl outsb pop aad dec dec cmp mov mov outsl add jne mov mov sub lock movsb sarl mov add lea adc scas sub mov push popf hlt sub mov (bad) push add js xchg add je adc xor jbe dec (bad) mov inc push cld test icebp add mov clc cmpsb jne push lret add test xor in pop dec or push mov and dec pushf andl repnz rclb sbbb jl pop sbb bound mov movsb xor dec cwtl cmp push xchg loop lret or adc dec js adc push adc cli test jns clc shrb dec lds cld movsb xchg inc into xor sub push adcb xchg and aad xorb mov jl or dec dec push and fsubrl xor mov inc les sbb cmp pop jo int or adcb xchg pop jne call and addr16 dec clc pop mov pushf imul mov nop ret test jl insb jg jl aas and (bad) pop mov (bad) dec jecxz mov cld mov adc push mov or clc and jo pushf cwtl (bad) adc and cld rcll in sti or fiaddl cld out fcompl in ret or pusha in daa mov or rorl addr16 xchg mov out es adc loope enter sub pusha (bad) jno add adc lods add sti cmpsl enter add sub xor dec js imul add repz xor sbb loopne jg das scas es xchg orb mov jns fstl rolb dec jp inc and neg xchg popf test cmpsb lock les mov push scas mov adc mov push adc mov xchg push and pop xorl pushf in insb mov inc cli clc call inc fcompl dec sbb xchg xchg pusha mov mov movsl xchg add xor dec and stos mov je add int3 inc out mov test xchg xor mov int3 add mov adc dec iret push sbb xor add repnz dec loopne out test dec sub or xor or (bad) movsl aaa inc test aad add push in int3 cmpb sub or adc hlt add or lock add arpl jmp mov xor add add cvtpi2ps xchg sbb xor push out add in jno dec es lds in pop sub lahf adc cmc or xchg ds outsl add lock add mov inc dec dec add lret in clc nop ficom or mov test mov in test or add inc cmp and lcall add subl dec mov rcrl push imul and jb mov stos sub testl loopne ret xchg mov sub or or outsl add push mov and (bad) cmp lods add add mov iret add mov sub ret adc mov push lods lcall fnstenv mov sub test jne dec add push (bad) xor mov lcall test in mov lock push sub mov and outsl add sbb jnp push imul repz xchg xchg shrb testl repz imul add dec sub fwait mov jl mov loopne js xor loope or aas int movsl xor sbb rclb inc sarl add xchg add out pop push push or push test fcomps dec inc sbb or adc (bad) sub or dec sbb hlt in add into add cmp outsb nop and jo dec mov inc sub loope lret fcompl sub in ret dec faddl or adc mov jl xchg adc les loope sbb pop (bad) xor or outsb jae mov sub stos and pop add dec inc lcall stc bound addl cmpxchg mov adc in mov (bad) fisubl (bad) hlt dec push push rorb xchg data16 add cltd test xor int in andl xchg xor mov mov mov ret rcl or lock xor add or add add icebp dec out dec pop sbb ret insb add xchg das pop jnp mov push and cli fistpll pusha xorl (bad) adc pop in sysenter xchg and jg sarb cs and or pop or mov adc fwait ja push inc mov popf xchg rclb push lods xor dec sbb mov push jnp dec add nop (bad) (bad) call in xor jl mov sub or decl les nop int3 or cmpl mov aam and push fsubrl negl les lcall adcl out jb dec or mov es rol mov in dec sbb jo or (bad) clc pop orl mov add mov dec bound mov nop bound nop cmp adc test pop mov mov decl mov mov xor adc fwait insb pusha mov popf (bad) cmp in cltd pop in sbb lds cltd cmp jle aaa mov add jo mov add scas in push das add cli sbbl jno arpl xor cmp fcoms test insb in lock jp fadds push push je sub xchg jo imul lcall or into push add jo sbb add cmp shlb push fwait dec jg or in and inc or nop xor (bad) push or rclb and add pop testb movl lea dec pop data16 aam push test fsubl wbinvd sub and pop or fwait lds jg shrb nop js mov dec pop int3 (bad) adc inc dec ficoml fwait mov cwtl sbb cwtl ret inc xor and cmpsb cmp mov test repnz xor add xor mov ret loopne push add or xor orb stos imul mov xchg cmp mov push add pop pop jns stc and or cmp addl pop adc aad push xor (bad) (bad) jb add repnz or fwait jnp push (bad) in (bad) xorl sub jl add stos hlt inc xor cmp push sbb insb rorb lea inc nop mov iret movsb (bad) ja sub movsl std sbb and test sbb ds hlt add repz mov jno sub push sbb js dec and add fwait std mov dec lcall add mov sbb jmp sbb mov push pop hlt adc test mov cli inc xor hlt shll sbb sub xor sbb movsl cld test xor jno cmp xchg cmp xor lcall pop jo lahf inc pop add ret pusha in sbb sar dec jnp sub add push pop ss or es in push push in push mov mov sub lock sub add cltd lea test adc xchg dec mov sub out push subl mov sbb stos or or in mov xchg lods sbb push add imul and cltd insb xchg xor push (bad) aam sub cmp add fnop push add inc ljmp xor fwait push push call sub test ret inc fsub int xor xchg add lds ljmp xor jne les cli adc (bad) cmc push movsb add mov fwait or cmp test dec nop and es jno adc cmp adc add push jnp xchg xor sbb cmp mov in adcl push cld xor jno ret pop das push add xchg mov adc or mov mov pop push add sub das mov push adc mov push inc pop nop insb cmc popa nop xor enter add (bad) fucomp jmp inc xchg lock aaa and popa fwait inc xchg xor enter sub cltd push mov xor andl sbb lcall and sbb push test pusha js mov sub mov lcall xchg jge mov and cmpsb cs cmp cld jge repnz xchg test cmp fwait pop mov xor or dec pop pop data16 adc add inc push push sub outsb arpl and in sub xor add es xchg pop dec and and sbb and sub dec inc ss add jnp nop dec push out mov push (bad) out rol nop add xorl pop (bad) lods ja mov xchg lret push lret cmp adc and (bad) or pusha sub mov inc mov xchg shlb and in aaa jno or jo in push sub and int3 xor add notb mov jo cwtl loope mov push js rcrb push in mov iret sub mov hlt pop inc mov pop xchg fs and test sbbl (bad) xor add test and jb pop push movsb repnz sti mov push or popl rclb mov push in testb fidivl or xor add xor stos cld adc int3 sti cmp fcoml addb les in das mov cs cld test fadd xchg sbb jno mov addr16 inc imul andb jmp movsb xor outsb add xlat or les mov (bad) fcmovne and ljmp and or add insb cmp add and add adc divl mov cmpsw and sbb sbb jnp push and out add pop cmp fsubr xchg movsl cmp lds pop xchg pusha jb lods ljmp mov mov pop inc inc jae icebp in inc add or inc pop loope aaa cmp cmp adc push pop or mov out nop mov sbb mov rclb loop xchg or loope sbbb fbld jle jo call mov mov les aam xchg orl cmp mov loope xchg sbb mov shlb sbb insl pop mov push hlt jmp push sub shrb push jmp iret lahf outsl aad js pusha push js cmp add roll in inc push ret cmp (bad) jge mov fnstcw pop cmp and inc mov add and or or call cmpps add jmp xchg mov shl jmp sub call jno cmp arpl les fdivs add mov dec cmp push xor popf cli stos and add or call std xchg add jno movsl pop sub insb and push and add adcb nop faddl fcoms lahf add and inc sbb add jg loope xchg add rcll pop inc sbb xor adc js or mov mov cmp xchg sbb adc sub push clc fsub and jecxz or xor adc inc inc lea popa adc jo mov out das inc call add push rorb (bad) call xchg cld and mov ds icebp mov aam push out xor stc push std mov jg movsb pavgb dec call pop fmul fabs test ret xchg mov (bad) iret loop mov cltd mov cmp adc cmc sub adc adc or lea loop (bad) imul jne jmp lahf mov push jns in inc mov test (bad) mov jl add add lea daa sti (bad) fs aaa pop popf dec mov jne xchg dec mov pusha xchg cltd adc add pavgb jl test jle jl add cmpsl push hlt orb lret arpl adc or addr16 inc cmpsl outsl cltd lea sti jnp imul inc lcall cmp imul arpl xchg add inc in outsb enter mov cmp xchg in xor fscale push mov dec add loope mov sti pop mov mov and loope add and xchg mov inc lods jle jo push inc add push xchg in add pop sbb call mov mov xor nop xchg pop stos push xchg (bad) or enter insl imul ljmp rorl sub and clc xor aas stc lock jecxz pop in call in dec aas icebp incb dec jno jmp insb rorb push ss cwtl rorl movsb sub xor je lods push or pop loopne dec xchg lahf pop xchg subb fwait xchg fucomp pop add sub lods mov cmp mov add rcrb push fs test jecxz daa mov lock lret mov fwait mov pop dec or ja add sbb faddl xchg cmp pop xchg inc clc lahf xchg outsb sub (bad) mov in inc fs pop pop imul add call cmp sbb enter mov adc and mov xchg push lock push mov mov fwait incb scas dec pushf scas mov les cmp cmp push mov xchg push inc sub mov pushf push aas add dec add adc rolb lods imul or inc fdiv out pushf xor jmp jns aam andl ss push xor (bad) xor sub and inc sbb mov fs xor test dec jns add in (bad) repz mov shll jg ljmp mov test sbb push or decl dec adc in out cmp mov lock pop and (bad) adc xor das loop sub (bad) in sub test das lods or lds and aas or negb cmp xor mov adc cmpsb cli jno pop sub xchg adc add adc pop adc cld sub loope dec or rcrb inc or pushf dec dec inc inc pop dec inc loop (bad) jle call xor lea mov jmp sahf and xor clc fdiv enter imul add popf outsb aad dec pusha daa push or add sub mov push cld icebp dec push or and lcall mov cmpsl sti push cmp xchg or lea dec or shrb daa stc cmp fmulp sub push int3 dec nop aam ljmp xchg jp mov leave leave loope jmp or mov imul mov pushf mov adc inc pop cmp cmp inc add jmp lods adc es stos pop les and pop and and shrb mov or mov sbb cmovae shlb (bad) pop (bad) xchg push cmpsl test or xchg incb inc jecxz push or inc subb adcb hlt push pop dec (bad) int3 mov fwait push jge mov pusha sub mov adc push push cmpsb pop or or mov adc jae cwtl add push dec daa sub lahf and es lcall mov nop les lahf xchg dec add push cwtl test in and loopne jo test jb insb arpl sub cmp enter divl push adc cmc inc adc insb dec dec pmovmskb mov add add enter jb adc add pushf repnz add hlt mov add sub and in mov std (bad) or andl cmpsl mov add daa add in mov out add fcompl add dec jo test mov mov subl add push out in pop stc xchg mov mov mov inc sub xor and or add push mov lock push pop stc hlt add arpl jae sbb jno (bad) fadds notl mov add jecxz in andb add out hlt xchg std jmp cwtl cmp aaa sbb loope add dec add mov popf add add pop pusha mov shlb das fcomps and dec cmp mov in push ljmp cmp xchg jmp mov dec test add xchg lods les ret push pop add loopne xchg and ljmp lret cltd or inc dec data16 fidivr dec inc jg ja mov inc push test dec and and adc in xchg and movsb cmp push xchg test pusha add fwait push push xor or inc in bound mov inc aam dec and popa test pop cmpsl mov xor test pusha jl js push int rcrl test xlat lock hlt inc (bad) popa sub lea bound cwtl js pop inc icebp and dec add pop xor jge dec add lock xchg push adc lds outsl lret pushf cmp dec mov add roll cmp sbb push frstor add int3 mov dec xor cmp xlat je push cld xchg aad loopne mov mov lods adc test mov sub cltd rcll pop movsb cmp les cwtl stc add pop push lods scas icebp into push repz mov cmpsl push xchg rorb and int add ljmp lcall push add push sub jno int push mov outsb xor addr16 (bad) or cmp stos insl or clc and sbb je add mov adc add and cmc xchg add jge pop jmp fnstcw in (bad) or dec and push mov and push pop fwait mov and mov jmp fisubrl inc iret dec xor dec mov add int3 add pusha andl js (bad) xchg setae (bad) mov or rolb lds mov nop fwait cmpl pop les and inc xchg movsb scas lds ror xchg add pusha test add repz or adc pop mov into cwtl (bad) mov adc push mov hlt or add push add xchg mov or mov add pop (bad) sub iret mov pop jecxz,pt addb pop add dec add sub mov dec adc out cmpsl mov jp jp sub xchg hlt sbb mov dec add out test cmp xchg mov sub in mov fbld push mov and cli push push insb or pusha enter fiaddl test pop mov stos cmp inc xor sub sbb imul jb loop icebp stc push insl daa jg xorb mov add repnz sbb pop dec cwtl popa subb repz push mov add dec (bad) mov mov stc mov iret and jle and xor xor pop cmp lret cmc inc inc (bad) mov in js icebp rcrl mov (bad) lock enter or add lahf cmpl adc and adc inc fcoml mov jae xor add repz sbb movsb orb mov xor out or inc test cwtl cmp add cmp add push sub jge rcrb mov xchg dec hlt jle movl mov adc and or add wrmsr push cmp adc adc adc inc mov inc stos call mov xchg mov pop push test pop scas or cmc inc idiv cmp pop push push jb fcomp je push repz jbe insb xor add mov inc dec andb sub popa rolb mov dec out loope sbb inc nop adc movsl lock inc pop xchg cmp cwtl dec mov mov inc and in add mov xor dec shl rcrl andb fwait js mov mov inc push push test and xchg or push enter imul mov cwtl sbb loope push adc mov mov add ret clc mov imul popf add and (bad) mov lock rorb sbb test sbb enter push mov xchg lahf jno add rcr les (bad) lods or sbbl mov mov add push out std and dec add xor pop add dec enter add and and lods adc sub sub outsb cmp in arpl aas mov scas jno nop lods or repz pusha sbb and sahf sbb mov adc (bad) fwait adc sbb call and bound inc sbb (bad) xor sub enter cmpsb mov arpl subl andb mov stc xor mov dec sahf add (bad) int3 sbb call push mov xchg popf cmpsb mov mov xchg fimul sahf push mov clc xor xchg je ret out fadds rcrb lods iret cmpb imul sbb and add mov cwtl pop cli xor call add mov mov andb cmpsb stos push sub xchg mov add mov popf and mov jbe jl adc xor cwtl jnp cmpsb roll or pop pop sub shlb loop in fldl test rolb dec icebp sbb and and inc int jmp jle mov dec cmp inc push push xchg es cmp rol push jno mov cmp rolb jge int3 mov pop mov xorl jnp pop lods or xor inc dec and jo sub cwtl popf int sbb xchg fiaddl push mull jl add dec pop int ret jb or mov adc js mov ret sub lahf stc lods arpl inc insl add inc xlat xchg adc cld arpl push and sbb xchg addl inc mov pop mov or inc aam mov mov fxam (bad) jae repnz xor mov inc int mov leave rcrb push and sub jae sbb rolb cld pop push jno xchg fbld dec dec xor les nop sbb mov xchg or ss mov in sub push lcall inc inc add jns call (bad) scas sbb popf shrl mov xchg hlt stos jmp or pop lods cmpsl sbb rclb pop clc ja mov push cltd mov loop insl xor jb and dec add insb xor jmp and push add mov add inc clc out pop std sub repnz repz cmp dec lds xor test pusha bound aas stc add in (bad) sbb adc add frstor add add addl aas repz mov lahf out or inc or adcb pop cmp movsl jb pushf dec out pop into shrl cltd cmp xchg xor mov inc aad xchg scas rorb push aaa sahf cmc mov jne roll in aas jnp xchg add push mov jge add call cli subb mov jno loopne add jo minps sbb scas mov (bad) sub inc push jp jl shrb push movsl add cs and mov sbb dec add shll push and and add jo pop inc fadd cltd xor add mov mov fisubl add inc sbb (bad) xorb jbe gs into cmp sub les rorb inc dec bound nop cmpsl or and in xor and test sub xchg cmp clc mov xchg inc (bad) dec pushf cmp add test push sarl add dec enter adc adc dec xor push enter xchg les xchg add sub lods cmp test js add mov add sahf pop popa mov mov or js adc mov shlb cmpsb pop orl add imul mov dec xchg andb (bad) andb pushf test loopne mov add cmpsl inc jbe push sub (bad) xor cltd add inc and outsb ja sub pop and adc out and mov mov mov jne or adc push push shr push enter in xor pusha aas and xchg or add pushf sub and push movsl dec jno ja xor mov and xlat subb mov dec divb pop leave loope push sbb imul imul cld or popa addb out ja test inc sbb mov jge xor js xchg dec pushf rolb outsl pop or fucomi pop add aad push inc cmpsb and mov add sub pop rep lock push sbb inc icebp and pop loopne and add popf or mov jmp cmp mov (bad) enter outsb ret sbb cs mov xchg fcoml fcoms aam cmp roll sbb stos mov sbb pusha xchg lretw cltd sub and add clc jecxz loopne jo sarb and push pusha lcall and nop neg aaa xor mov pop lret inc or and or and and push pop xchg fstpl mov je (bad) bound fstps outsb nop mov jo cwtl mov dec sub inc call lcall fstpl add mov repnz jle pop or pop add orb mov xchg add xor lock and stos jl test mov sbbb jg adc jp call xorb loop test add fidiv pusha and int3 je adc pop lahf sub xor sbb in cwtl pop add jo lcall cwtl pusha xor xchg add shrl pop mov add addr16 add cmpsb call adc in or fistpl lock lret push cmc inc cwtl or test cli mov sub add xchg in mov es or inc lret cmp push sahf inc pushf add sbb ret cmpsb rcll cwtl push mov lahf xor adc sbb mov push stos pushf (bad) psrad or stc lret pop aas ror add fwait sub nop or add mov cltd stc or jo ss jne add (bad) fdivl pop sbb mov cmpsb daa and ret popa dec aam or jno sub add adc jnp pop bound and pushf adc repz test lea (bad) out mov test andb xor add aam movsl inc in mov push outsb ss lea data16 adc mov push add lock stos push frstor xor xor pop sub mov clc sarb int3 adcb call loopne lcall push mov sub sbbb cld clc std cmpsb and lock inc outsl das rorb or cmp loope sub ds xor sub xorb lret push inc in xor sub les cmp lret in mov clc cli cmc add js adc nop stos test xchg int3 sbb lock inc stos xor aad xor and fsubl imul cmp mov and sub pusha xor push icebp stos jge jecxz or andl cmp jo add mov int3 (bad) popa loopne add inc leave popa cmp adc add xchg dec repz push arpl cmpsb outsl xor add int push test je hlt jmp or sti push gs add mov scas add jno xor rcll sub dec xor xor (bad) mov mov pop xor add or push and mov xorb inc scas loop mov push pop sbb orl push jge mov popa sbb fdivl xor xchg mov and sbb jnp adc jmp clc add dec imul push rcr rcrl mov into dec xchg movsb sbbb shlb lds and or add popf xor lods mov inc out stos roll pop mov pop add in or shrb fsubrl sbb lock xchg ret add add loopne aaa lret and lods push sbb adc int3 pusha ror stos lcall mov orb add xchg sbb dec addl mov js sbb fs call add cltd add imul subb mov push mov or test or lds lret mov imul fidiv addl out (bad) ss test jge xchg bound mov nop aas pop push pop loope jne inc push and imul add mov das cmp add push test hlt iret movsb lock sub icebp push lds mov dec jno dec pop pop sbb sbb scas and in loopne nop adc add push test or and adc inc fs cmp jo test movsb mov mov outsb mov mov rolb leave xchg imul in jb xchg add cmpsl push dec loopw repz test cmp xor sub mov ds xchg repz test sbb xor in test add or out xchg or inc lock dec movsb cmp fcmovnbe push jo rcrb aam add test inc push cltd dec enter jno lock cmp inc or pop mov push xlat sub and gs or and push enter xchg mov cmp nop stc mov sbb mov inc imul enter jbe mov mov or (bad) sbb push test xchg inc repz in push cld sub js add pop adc add test xlat (bad) test insl cltd incb in and adc insb mov jo pusha fisubr nop cmc mov cmpsb add jnp arpl push rcrl sbb sub dec dec in or in xor nop pusha ret dec shr mov jmp or mov sahf inc xchg pop lds xor test xor inc jge loopne outsb cwtl inc xchg adc test mov lods pop aam cmpsb xor scas add cmp flds pop cmp (bad) push sti mov pop (bad) inc add or mov dec fiadd movsb loope sub pop sub (bad) je orl cltd push addr16 imul shrb push jno test fwait mov test rclb inc xor push jne,pn les mov inc imul inc xorb pop ret adc adc add mov mov ss in imul pop aas popa xchg roll push fs lods xor ljmp cltd sub sbb rorb int3 cltd lock mov test xchg adc shrb insb and enter cmp out cmp dec inc sbb icebp sbb dec and es in pushf inc adc mov jle mov hlt mov and aad dec lods inc add orb mov push mov fisubl pop cmc inc fistl add sub mov sbb add movb int3 pop add lds dec in daa fwait jg cmpsb rcrb xor cmp and xchg add sbb sbb daa gs add pop pop xchg xchg mov xor sub push xchg mov ficompl cltd xchg mov loopne add fwait insb scas pop inc and outsl pop cmpl and sbb aam sbb subl pop push inc pop fs int3 sbb lahf sbb insl mov sub adc cwtl mov inc pop jmp mov xor adc test ja cltd mov and (bad) out cmpsl je pop jno or aam flds inc fwait jo pushf pop aaa aam inc pop push sub add cmp xchg lret and sbb cmpsl and cmp jle push ret and or fwait mov mov mov nop imul stc aas and lock mov in sbb jmp aaa lret dec push test mov sbb pop pop or int3 mov or lret add and pop enter mov sbb into add enter lahf fidiv push mov mov add cmp fdivs mov hlt sbb jno push arpl subl aaa int3 inc pop xchg rcrl popf imul decl pop fild or jno jbe add insb mov leave test add in lock rcl shlb shrb add mov and dec push popa or lods test push lret imulb mov sbb push sbb jns cmp arpl ret je sbbl add (bad) mov fcompl sahf jg push cwtl aad adc push hlt and nop cli addl sbb push inc scas mov pop lods mov pop sub test sub jl lock mov mov dec or inc stos pop cmp xor sbb rorb (bad) lock and cwtl test xchg mov addl pusha sub pop and pop test lcall cmovge inc in les sbb push mov cmp or or hlt add repnz mov and jp sbb test push jo add mov sbb inc enter ja add jmp cmp mov addb shrb xchg js xchg mov enter fstl dec adcl in aam test and pop int xor test hlt xor jge mov jl pop shlb adc cmpsb xor subb fiadd call sub lahf and ds mov push fistl test pop dec and cltd pop xor or add pop cli mov sti add xchg xor (bad) out inc pop inc sbb cmp andl (bad) je aaa add push lods xor jnp jns aam pop repz mov fcomps jl sbb ss jp cmc sub mov dec push inc ljmp jns lret sub sub or iret cmp mov nop add sub mov inc call jae xchg enter add jbe or in mov dec mov xlat pop fistpll sbb inc or inc dec xchg and test push push lods cmp loope mov xor adc test push pushf pop dec fsts sahf cmp daa mov push fisubr and add cmc mov inc sub inc dec mov pop mov or push and dec fbstp imul xor addr16 add stos push aad mov cmp roll jbe pop mov ret nop test popa add inc xor add call pop loop push cs add fldcw iret cwtl dec adcb insb lds push aad adc subb inc jecxz pop mov sbbb sti mov inc push add jnp and out outsb mov xor pop js xor cli inc loope inc dec cmp in aam cmp add lea sub inc jae pop push sub push and test fs dec pop mov decl test pop je and xor (bad) in stos leave push mov xor and stos add mov add outsb xchg call subl add pop lods sub mov jp push in pop popa push test rolb fdivs popa xor add in orb sbb pop jno (bad) jo xor mov xorb sub xchg mov idivl cmp int fdivl and popa fwait pop add iret dec jbe loope push sti subb adc pop mov push into adc cmp movl dec sbb mov inc jle cmp cmp lock cmp imul and push in scas mov xor fs mov sbb leave mov xchg and pop xor jo jp popf add dec pop sbb mov bnd fwait cmp or sbb sbb mov (bad) fcompl xchg cmp lcall or add push nop call or dec cld inc mov adcl mov stos sbbb xchg bound mov addb mov aam loopne jo loopne sub ficom pop or dec adc call and cmp push dec (bad) jo scas clc jbe pop adc imul rolb nop test push or orl mov adc add movsl es jb js out dec add pop gs mov test pushf sub pop pop lret test mov xchg xor imul sbbb and jp xor stos xchg fistp dec jbe (bad) into ror enter xor pop (bad) ds push add push inc sbb out (bad) nop out js add popa add repz sbb les pop mov add loopne lret pop mov add jmp add je cmp sbb imul aam inc inc or lret dec test lds cmp mov add mov jnp push and daa pusha test movsb mov push cmp jno sub xor imul add mov loopne hlt lret rorb add icebp movsb sub add repz mov pop push cmpsl data16 xor adc pop adc fadds (bad) and jns or mov mov sub add jecxz jbe or insb inc repz cmpsl add repnz (bad) nop cltd sub pop lock rcr cwtl in sbb stos xchg pop movsbl pop sbb nop xor jno jp jnp lcall xchg add loope fsubl push clc push sub data16 fcmove repnz sarb push sub or aas sub jno pslld leave nop pop push or ljmp add ficompl mov rcll into lds rcr ds adc xor inc je push add mov popf and lcall jae add stos inc sbb adc push call lods outsl inc add (bad) xor cmp enter sub adc call adcb push or and lods and lahf mov lock cltd sarb sub (bad) negb jno mov mov lret xchg jno add pop outsl shrb in loop add cmp arpl fiadd mov cmc nopl mov add and cmp fidivl lret adc cmp cwtl cpuid aaa andps and inc cmpsl xchg cmc bnd nop sub mov add or mov ret xchg push jbe sub sub mov push xor or jo mov call add sbb jle js,pt pop mov outsl nop push sub lret or nop lock add cwtl roll ss mov add adc mov cmpsb push xchg push or xor call adc cmp push jmp popf cmp imul test nop lds cwtl mov lret inc (bad) cld aam into inc lods das inc push mov mov mov addb or nop jb ja xchg inc fwait inc popf pop ret aad cmp mov and aaa cmc adc test lret jbe add lds iret dec sarb fsts pop nop imul pop andl icebp push dec jecxz adc mov sub scas ja (bad) sbb lea movsb push scas xchg fcomps je push test andb sbb mov jbe pop ds inc jno aas stos add jne add inc inc scas sub adcb popf xor jns or mov inc jnp lret lods adc test imul xor add inc adc cmc outsl adc jle and fs mov popf lock mov aas dec mov jp add pop mov lods inc xchg loope dec sub sub xchg stos dec push in xor movsb pop cli xor inc xchg in fmuls out adc xor mov add mov sbb mov inc push mov or xchg cwtl (bad) xor lcall lret ret lods mov pop ret xchg movb cmp lods cwtl faddl inc clc stos je nop xor push loope push lods add inc clc pop sub push arpl jno xchg icebp loopne cmp outsl cwtl nop rorb enter push add div push push ljmp cmp and test lods or jne or jno mov sbb test lock clc subl into call xor pop add ficomp out fsubrs adc pop add divl ret mov je pop scas testb pop cmp inc xchg dec in adc loope ds loopne repnz sub pusha sub add xor mov inc and xor (bad) jno push xchg jge daa jns xor and shr test inc pop xor fdivr mov shl sub add or lea adc push inc int3 loopne fimul cmp push int3 inc mov arpl cmp mov insb pop aas and push sub pusha outsl and imul fidivl fdivrl or or sbb cmp add dec hlt mov and cmp dec insl jp push (bad) loopne movl and pusha test and clc test inc (bad) mov (bad) ficom xchg and in ja (bad) or sub add movsl add mov nop jle lock loopne rcl fnstenv pushf sbb sbb sbb jecxz xchg pop mov inc sub add push and aaa test add dec (bad) xchg nop sub or sbb and jb cmpsb xchg lock (bad) push jle jmp enter add pop andb cld cs mov pop mov add mov sti cmpl cwtl aas xchg add aad imul xor add pop fcmovne push add dec lret loopne mov dec es inc je add popa in clc mov pop add pop out adc mov add pop js pusha pusha xchg adc outsb roll inc jecxz loopne jae les push fstps add jb hlt sub push pusha repz aam cmp lahf das (bad) push jo sbb xor aad adc lods xor sbb cltd jp inc stos jl aad aam testb jl sub or sbb scas add iret mov inc add daa mov mov dec push pop call add ja add out mov sub and sbb sbb mov push orl (bad) xchg js xchg and je add addb or movl fnsave ljmp rcrl fwait jle add les cmp xor ds imulb jno in add inc in rcrl add jle out test lret sbb xchg mov xchg js add out fmull add mov jo sub (bad) (bad) ret add repz insl and push xor pop add inc enter mov mov push ds and xor inc cmpsl mov jp lock add stc push out jle add push push and stc mov repnz daa (bad) xor sbb add and add dec xchg lods fcoms out scas repnz or or lea pop mov lahf inc sub aam mov mov lcall add mov dec jl adc ljmp addl dec in pop or cli mov testl jo jp mov inc adc dec cmpb mov lcall daa add pop test enter lods imul cmpsb add mov and pushl lret lahf pop and or inc mov inc mov cmp into add es jns orl sbb (bad) mov in (bad) icebp popl gs pop incb roll addr16 cmc pop push xchg dec dec inc xorl aaa daa mov imul mov jb rolb aaa xor or xor jg adc dec jbe xchg inc inc dec dec imul imul adc pushf inc inc mov ljmp repnz decl jmp mov loop inc test mov decl xor inc jp nop inc pusha std inc cmp lahf mov aas mov adc pop test nop cwtl sbb dec push clc add or mov (bad) aas inc popf je cwtl in cmpsl mov pop adc pusha pop enter pop fs xchg jmp lods out movsl or pop lds push (bad) test and jmp lret pop mov data16 mov pop sbb arpl mov xor lahf mov sbb sbb ret mov inc int3 cmp sbb ljmp insb lods inc mov jns push std add inc enter pop out add push daa add add xchg cwtl lods add iret push dec rorb bound leave bound adc jge push cld or clc (bad) jno sbb add sub jbe add jl mov (bad) loopne jle xor pop jo cmp das adc push add or inc and repnz pop push (bad) int3 xor pushf nop jb jno dec mov add test cmovl repz ljmp adc add stos and ret adc mov dec mov test les adc (bad) push cmpl loop bound xchg pop dec dec faddl push fcoms jg test imul les shlb push cs xchg pop (bad) add mov imul lds fisubr and es fsub xchg loopne xchg (bad) pop movsb sub imul xchg ss pusha jo jp jbe push je sub push (bad) push mov popa cmp and adc xchg add lds imulb mov stos mov lcall adc pushl push daa pop cmp in or sbb loope outsl jno mov negl jo ret push stc (bad) jb adc cmp or add dec aam push xlat xchg sbb icebp xor fsubl ficom dec hlt stos add sub push mov ret add sub lret cmp dec pop mov add add js je dec fimull cld test les lret add je inc push ret push jge loopne mov jno mov push repnz inc sub sbb inc setae dec mov sub xor js sbbb jecxz jle lret add and lahf push jl add adc add hlt xchg mov jne loope inc inc dec loop xchg aaa ljmp jle orb dec loope mov sbb jl mov or pusha jge mov dec sbb push orl hlt cmpsl loopne fs sbb add and pop nop mov mov mov add sbb rcrb loopne dec sbb jo fs inc add xor rorb and xchg push pop pushf pop xor add mov scas cmpsl rorb fcoml adc addr16 push fimul lods sti add mov daa xchg and mov repz movsl nop lods or xchg jp xchg add sbb adc fs jle and shrb xchg pop int testb out jl jecxz adc test sahf adc inc or adc out inc and jmp adcl or ficomp sbb or enter add inc (bad) or jbe rep test cmp add xor jns clc or push dec repnz (bad) xor push xchg int push adc leave xchg mov inc cwtl mov jbe xchg sub cmp nop dec xor loope fadds hlt data16 test es add cmp frstor test xchg mov nop fmull adc shl mulb and cmp push cwtl mov add stos sbb shrb adc add inc or or cmp mov es into cmp adc faddl cltd hlt mov adc xchg hlt add icebp adc dec popa inc enter lods popa in dec lds push js add shrb imul mov scas pop in add leave or sub jge test sbbb stc into jns add xchg arpl jg push pop mov or sbb inc jmp dec icebp sbb adc pushf bound repz xchg addr16 imulb cmp add (bad) ss inc loop dec mov xor cli cmc je pop adc repnz xchg pop push add and or sbb adc sub jecxz dec cwtl adc sbb clc push popf and push push test test fisub popa push pop scas or sbb lods jmp push das cwtl lahf mov fcoml pop mov icebp xor out adc xor dec and xchg mov dec stc test int3 pop jp js test xor pushf lods loop add hlt dec popf test daa and add push mov sbb xchg xor sahf (bad) jae xchg clc fcomps loopne icebp mov stos add js pop divl jp lock mov push shlb and mov in xor test jp cmpsl pop push push xchg xor fmuls cld add (bad) dec ficomp test push cmp js testl ficom (bad) cwtl add repnz xchg mov rclb cmp mov into ffree jo jo adc push rcrb dec sub sbb fldl and int3 (bad) fdivl movsb cmp mov cmp push in js mov or (bad) loopne cmpsb and adc inc pop stos pop or loop hlt jp movsb icebp adc xchg mov shlb add push pop mov inc in mov inc xor jae sub pusha cmp push mov mov mov and and hlt add mov enter mov leave fbstp dec xchg arpl or add aad xchg fs fnop push insb pop hlt faddl scas mov mov pop sub cmc movsb add insb mov addps and iret ret roll push (bad) push inc leave (bad) lock mov jmp icebp mov mov lock sbb cmc or clc xchg imul or or mov out adc xchg xor nop test mov pusha int3 xor add enter stos les pusha pop mov mov or call test hlt pushf ja and mov mov (bad) data16 jmp in enter inc sub xor ss inc mov imul (bad) popa test push loopne jo rorl xchg adc or cmp add aas cltd or or dec or pop add or push pusha dec xchg loope js dec fbstp or mov jmp adc pop cmc jb dec cmpsb xchg xchg push test repz xchg sbb rolb jmp fcoml dec inc or cli xchg cwtl adc faddp jo adc xchg fsubs int mov xor jnp out and or clc in aaa or or push adc bound add inc push call mov jl and nop hlt inc fcompl add inc mov insl add in mov test clc sub rclb ret arpl and and test sub xor ss aam pushl mov or in sub mov jb sbb sub xchg mov inc adc fs ja subl push sahf add adc mov xchg jle pop fsubl sbb icebp lods cmc xchg loopne ljmp xchg les mov lahf rclb jl lds push in mov rorb lock mov (bad) xchg push mov hlt and push es add jmp mov and fwait sti xchg push xchg leave out xchg test movsb sbb mov fmul pushf cwtl into nop dec adc mov jnp mov add mov xor xchg out and in push and xor outsb popa xchg mov cmpsl mov xchg xchg into cltd sbb lock add hlt push add aam mov add in push pop cmp add lods add in sbb daa aas jecxz pop lock pop cmp push add pop incl push std (bad) movsb mov rcrb add test xchg add mov enter adcb jge scas pop cld pusha push loope sar sbb jg add sbb add insb mov fsubl sar in bound adc add in mov or or and mov es add mov jb loopne sub mov in cmp xchg movsl pop jno test out ret cmp icebp pop lock add imul xor add clc xchg frstor and out add sub add add fiadd mov loopne add (bad) adc and mov imul shlb cmp jae jbe and inc ja stc add mov xchg jl add sti pop dec repnz push push bound es pop fistpll imul jbe sbb lret addr16 idivb mov sbb mov add popf fs adc add sub (bad) xor outsl adc and xor js push mov or xor pop js test or inc in adc mov int3 bound inc add insb add or and adc adc pusha andl pop or repnz sub dec push jl inc mov aam lds push stc jg or rorl xchg mov cmp or enter je jge,pn pop subl mov add inc sbb insb enter sahf xor pop rcll or faddl cwtl enter leave add in lcall nop mov mov sbb push cmp std push aas sbb sahf push sub dec in jle cmpsb in add push jo pop out mov xor les push fnop and call add scas sbb std loopne and pusha insl bound push mov ss jmp test sbb mov and push out sbbb push cmp hlt mov hlt jo or cmp pop sbb clc jo stos pop dec xchg or roll inc dec mov loope add in rolb ja and add xor sahf mov sub mov andl scas loopne mov cmpb pop fbld addr16 in in add or sub adc pusha add cmp cmp dec adc cmp mov clc incl add jg in jbe aad rcr add stc lret xor push add aam ret icebp js pop repnz rolb sub push add std dec daa dec mov enter push add mov add les jb or mov inc cmp mov sub mov cwtl popf movsl adc push push test rcrl rorb push pop imul cmp xchg adc xor in mov or add mov xor mov jo cltd mov or inc arpl cwtl int jns push xor and dec pop cmpsb stc sbb inc fsts pop (bad) sub cs rcrb jle mov in xchg add movsb dec xchg cli iret (bad) call xor sub mov fcmovnb mov test or data16 push lock xor aam (bad) js add mov and pop cmpsb pop inc push add mov popa rorl nop cmp adc cmpsb cld sbb scas xorl cmc cmc nop xor aas pop xor lret sbb mov mov dec aam add cld or adc sti into sub xchg out and add scas popa pop dec adc orl clc idiv out aam sub xchg dec mov pusha stos and nop and in adc inc jo push mov mov push or cmp pop adc dec nop test xor daa cmpsb cmpsl ror in adc add in sti xchg push andl xor adc call sti jbe fsts rclb jo (bad) and test jl stc je add xchg ret push jecxz pop jge push add insb lahf inc adc push cmpsb jmp loopne pushl mov xor int pop (bad) xchg adc sbb cmp sub add jno fsubs pop fisub icebp xor addb mov pop add gs cmpsl in push xchg insl aam mov stc es push add outsb push mov pop pop sub sbb imul adc and push push mov sub test sub mov mov inc data16 call mov adc fwait dec aam mov mov cld cmp and mov repnz pop (bad) inc in aas xchg inc call andl cltd aad ficompl outsb jmp mov adc pop int and xor mov mov adc gs sbb andb test ffree ss xchg fmul and add bound adc add inc inc std jge lods push sqrtps fsubrs pusha test pop nop and jno add (bad) push or jns pop (bad) cld mov pusha in dec hlt icebp jmp (bad) push inc mov mov sub xchg repz nop or into jne sub cmovnp notl jmp (bad) (bad) icebp and and aad mov mov repnz rcrb in cmp sti ja ds popf lahf or stos pop pop enter inc mov movsl push js pop imul lahf and movsb adc jno jb dec inc sbb jp hlt orl sbb lods in mov xchg adc das cs in pop cmpb xchg mov inc test add xchg cmp shl roll and lock sub in jo xchg add fsts jg push adc cmp sahf xchg movsb pop outsb add movsb jns movsl xor js xchg and scas shrb or cmp pusha dec mov mov cli pop adcl stos add dec out fcmove in or sti repnz sbb stos sbb and fdiv dec les addr16 xor mov movsl clc cmp and dec xor mov add aam dec lea jle les pop adc jns clc push ljmp pop xchg popf aaa add lock xor or int3 (bad) loop sbb in rolb mov add idivl xor add cs xchg mov or cmp xchg jo xor sti daa rolb and dec mov (bad) fnop mov subb jle adc inc cmp push jae movsl (bad) sub pusha add psubsb and xor ret repnz sub sub adc cmp mov dec nop adc add add push push push jae in orl inc in add inc ds xor aad add fdivp ljmp mov jne adc pusha mov xchg in pop lods xor and mov insb inc sbb bound adc jecxz loop and and add mov cltd inc shlb sahf movsb dec xchg fs lock cmp lods mov mov fs test push pop add jno sub ret add scas and push add inc jno enter aad lods stos sub adc outsb add sbb adc (bad) in inc mov mov outsl js les adc lcall sahf call cmp test jb cwtl repnz inc lcall sub sub cmpsb add xor and movb mov lcall adc sub xor add push in add daa pop int3 hlt add mov pop sub mov fnop sub arpl adc inc add sti or aas scas adc pop scas add popa out es rolb pop xchg data16 and dec dec outsl add add (bad) movsb fwait xor dec aas or bound xlat incb add sub les (bad) insb orb jp or pop pop addr16 lahf lods xchg sub nop in out adc shrb roll pop xlat and (bad) fimull enter ja add sbb fcoms or and add test dec cmp pop mov sub hlt cwtl js and sub dec cwtl ret sbb (bad) cmp or dec insb add (bad) aam jge sub sahf push add cmp xchg xchg imul je rorb add inc mov xor mov pop inc fsubl andb adc cmp (bad) dec test out add jge lahf dec pop sbb xchg sub cmp mov (bad) adc fcmovnu incb mov adc dec xor cwtl (bad) repz jnp dec in sbb lods mov nop cmp loopne addl jae or mov repnz or test inc jo js add out adc nop ljmp jmp ret pcmpeqb lret jno inc (bad) xchg sbb outsb push lock or or mov cmp sbb dec cmp int add sbb outsb movsl test outsl fiadd (bad) mov lcall insb fs sbbb and icebp lods sub pop jno ret xor mov xlat fistl insb or loopne sbb shll aaa mov and xor add dec dec out xchg ss adc pop (bad) (bad) jne out mov sbb les mov pop mov jl cwtl jns and add xor in mov inc in add in lods rolb sbb xor mov mov out addr16 int3 cwtl mov dec rolb imul test push js add insb test outsl xor into inc mov pop lods addl out dec cmp dec xor out les call and lods rcrb push ss in icebp out gs jge movsb lret mov pop sbb pusha cld nop adc sbb and dec das (bad) jb jbe pop and jb je mov lahf sarl xor dec mov xor movsb lahf fmuls jl add mov (bad) sub inc jb add inc jg pop mov xor cwtl cmp push rcrl inc pop and scas sub add dec jl sub test mov arpl mov add shrl das cmp nop mov mov enter das arpl cld inc or xor or fsubs lcall cmp xchg enter es lret (bad) in add xor push and inc push mov pop and mov adc data16 f2xm1 mov loopne pop int xchg pop sub mov mov dec add imul lock push xchg push dec nop loope inc and inc add popa mov hlt mov and nop hlt or pop clc jb xchg add fiadd aam push push cmp jo dec imul inc icebp ret sbb add fbld incl (bad) mov mov inc test pusha xor pop xor shrb inc xchg add or loop std pop pop pop mov imul and mov add insb pop sub cmpsl movsb add cmp jmp sub and mov (bad) gs mov add xchg xor jb lret jmp add cmp in fmuls mov jl js cld repnz das push out pushf or sbb inc (bad) and inc inc jl fmuls pop mov sub jp movsb xchg add test pop enter test add jl push lea mov into mov push aam mov test clc xorb add mov mov mov cli mov fbld lea mov and adc mov orb lods or pop pop mov cmp in rclb pop sub jae mov nop push push xchg rcrl adc push insb pop and cld setno pop push add ficoml test into repz data16 and push dec sti hlt and xchg sbb in stos pop xor in stos nop adc jmp test repnz mov add jp andl subb loopne sbb insb aad int3 mov jo test push xchg xor pusha lret movsl int3 push and xor daa xchg mov sarl icebp pop lahf ret adcb cmp call pop add or cltd bound add mov je add ds mov xor movsb xchg (bad) add pop dec cmpb imul dec lret add fcomi jae dec aas lock imul jl or add (bad) push push sbb pushf pop movsl inc xchg push dec or and mov xor pusha push push mov xchg push add push xor stc repnz je gs test cmpb jle sub sbbl push fadd and mov cwtl and inc out push add add pop ret xchg xchg jae fildl pop mov add or mov ja push cs shl pop add sub and stc xor int sbb mov xchg mov fxch push push push mov cmp xor dec adc mov test daa add lods add and push jnp push push cmp pop xor and and xchg inc and nop incb or jns subb jbe and mov in loope and adc ss pop fcom push sbb cwtl insb jno pusha dec jb loop adcl inc fisttpll and lock xchg add dec mov mov movsl dec mov mov add push mov or js movsb mov (bad) mov mov mov xor xchg sbb in mov loopne inc aam clc add jno imull add js (bad) and bound adc xor mov push imul xor xchg jae jl sti jmp clc add or cli outsb push mov test adc inc inc dec icebp movsb mov mov dec aam push push loopne adc scas cmpsb push in cmpb lods rep daa xor (bad) leave or xor pushf add fild pushl enter xchg pusha or call sbb mov sbb lock or mov dec nop addl push sbb xor mov test mov es mov in and and xor cmp jle pop or mov fsubrl loopne movsb and mov xor dec add cmpsl pop mov nop and mov pop pop inc popa nop or mov (bad) cmp pop or fs andb jns mov jb add insl ljmp lea lret sub mov inc mov sub xchg jmp push jl imul inc mov cwtl cmpsb jmp and dec mov icebp out rolb pop es and popl fwait popf mov jl enter nop or in add out xor inc enter add mov clc aad aam popf jle add cmp inc sbb sub inc adc mov fsubr pextrw push dec lahf ljmp (bad) pop push rcrb scas and add xchg adc or mov fiadd mov pop shr cmp inc sbbl pop cli (bad) mov xchg dec loop push sub add outsl inc pop or (bad) fsubl add xchg mov mov push sub pop mov xchg std iret pop xchg cmp lcall arpl stc xor das pop mov xchg mov repnz rolb rclb mov dec mov icebp cwtl loopne push cmp pop ljmp nop fisttp pop mov and clc popf call outsb inc adc jl sub mov cwtl mov sbb xor cmp imul out clc jne sbb movsl test lahf (bad) or add add aam jecxz inc std dec mov inc push jmp test mov cmpl push mov xor jns inc aas xchg (bad) mov cmc lods or sub xor push mov and aas pop loope pop mov sub jb push mov (bad) and sti add lret je mov dec xor into or lock fdivl rcr inc jecxz inc movsb movsl (bad) cmp test add mov mov fidivr leave fs ja push cld repnz sub xor bound in or or out (bad) push (bad) and add (bad) leave je jl js je jl js xor cli pop or pop dec imul or movsl xor sbb and xchg aas adc mov insb push or add movsb inc and sub cs adc mov inc or inc int3 pushl push fwait mov mov add xorb mov push push hlt mov addr16 sti repnz (bad) jns les adcl xchg xchg jns xchg jp sub sbb insb adc ds push sub fs bound add pop les aam pusha lret xor or lds arpl andl mov call and sbb (bad) loop adc add sub repz out pop cmp scas outsl add xchg gs push in mov mov enter and shl mov shlb js out dec insl movsb xchg and mov dec push (bad) inc mov das mov sahf sub or test add mov (bad) or movsl mov int3 add pop mov pop test jns mov or popl ljmp ja int3 cld fwait sub add pop fbstp and xor addl ds sahf jnp and xchg loopne or test add jno push das mov inc add rolb sarl cwtl frstor iret lcall xchg stos and jo or movsl push add andl add xor inc mov xchg jae sub nop shrb mov sub mov push test addr16 lret rcl add push inc (bad) cmp lock add in adc nop lods outsb lret mov ret or dec jbe bound add mov fisttpl and sbbb pop cmpl add sbb pop or stc (bad) mov ret lcall sahf push dec mov and push pop lcall adc push xchg orb inc inc add add movsl cltd orb scas mull repz jno push in push adc fnsetpm(287 pop jae cmpsb mov add dec idivb pop jne dec enter mov call xor sbb subb rorb movsl sarb loopne inc andl jae inc nop sub xor arpl out xchg inc outsb or mov leave adc fcmovb push push lahf sub jp cmp jno leave nop (bad) cwtl push test inc and cmp adc aam shlb test mov xchg jmp or cld cli add or rcr cwtl icebp jns add add aad jb cmpsb dec lock addl mov dec movsl out test orl cs cld inc ds xchg sbb cld inc inc xor push sub idivl add or jl jo (bad) out and and dec mov pop mov movsb mov sbb mov loope jl cli pop xor je sbb rorl jmp hlt nop sbb adc daa lahf rcrl push lock push shl inc push inc add cli inc mov adc lock and xchg nop sub rorl scas push mov fisttp mov add push xchg jecxz js jle xor push cmp inc stos mov call xchg stc fcompl or insb hlt or or dec or pop test adc sub cltd xor shrb in nop imul mov popl aad pop mov add repnz shrb pusha or lcall sbb js add lret fstl icebp and mov and or xchg add addr16 sbb dec cmpsb rol or push scas ss lcall mov cmp into enter mov fstps mov lods fsubr xchg sbb arpl sbb and outsl test dec bound add fwait sbb inc add mov inc cmp stos out add nop xlat inc inc notb pop adc dec push or rolb cmp adc pop fdivs mov xor xchg inc inc inc or mov dec add push out pop inc ja addb pushf inc cmp je adc popa (bad) inc rcl std les pusha cmp aad mov mov loopne andl test pop mov sahf cmp add pop insb notl aas fadds ja add mov roll outsb sbb (bad) hlt pusha or stos sarb jbe or lahf xor cmc add adc inc bound xor aas mov sub jmp enter sbb jge ret inc int3 dec mov (bad) xor je dec push xor mov add mov loopne fcomi cmp orb in add pop or mov (bad) nop int3 stos push lock or daa jmp lods push call cmp sbb fisubl dec movsb ss mov das mov sub add outsb pop add dec jle jecxz xchg lds lods push movsb nop fdivs std imul or mov xor mov ficom enter ljmp push or sub inc cmp dec stos inc sbb or fbld xchg js and icebp mov scas pusha sbb pusha add pop cmp arpl inc nop scas test add or dec dec xchg pusha push and (bad) es and pop les sub aas dec clc and or add les and inc lea jp popl imul test mov inc and add stc out xchg add xor repnz inc das adcb rclb sbb mov sbb or clc pop vmovupd into xchg mov xor test push test mov outsb in scas mov cmpsb dec test sarb lcall fisubrl ret rcrb std dec std nop pusha idivb xor out jo adc mov nop cli aam push mull aad rolb pop fisttp dec popa adc jnp nop xor add cmp and add mov and inc or sbb ds out add (bad) cld xchg mov subb pop cmp cltd mov (bad) icebp xchg xor add rorb jnp shlb mov imul and (bad) faddl add push mov imul fwait mov cli push xor ss adc push out xchg cmp and mov adc add and and shlb aaa adc add aam sub add push pusha mov mov or lods cmp arpl pop xchg dec jp clc push adc dec sbb pop shll das dec insb pusha repnz jbe add pop adc enter push cmp push and and cld mov push (bad) adc sbb add bound enter lea in and bswap push out add jae ret sbb loopne pop sbb test je xor mov test popa movsb popa sub jp std push scas daa xor rcrb mov imul adc dec adc cld dec fs add or fistl add fs mov push cmp lahf fcom sbb nop jle xchg jno mov dec mov retw fnop jns xor and ljmp leave lock movsb push push imul add mov adc ss rcrl imul add fsub push scas push sub ljmp or add loope xchg pop jg add (bad) ljmp inc pop scas cmp andb mov cs pop lods in push sahf ret and mov mov fist aad adc jmp adc mov or xchg addb add int3 cmp rorl cmp pusha cmp orl xor xchg cmpsb inc aaa cs dec push insb adc sub add sub xchg xor or ds int3 inc mov and push jo mov adc popf mov call insb jo gs pop add and leave icebp sub dec lock mov xchg mov pop in jnp jmp stc shlb cmc add mov mov mov aad enter into xchg jne and pushf mov roll jbe sbb jle sub xor dec inc (bad) loopne jl sti inc fsubrs mov push cmp adc add movsb sahf or inc pushf mov push (bad) or clc adc mov mov daa nop enter and jne push into mov or dec inc inc sbb sbb mov sub dec pop es jne dec frstor (bad) cmp adc cwtl inc orb or fs jl dec rcl addb add xchg sub (bad) inc (bad) roll adc xchg mov sbb or and test mov sbb inc jl pop mov imul shr cmp loope add mov jp ljmp push add and outsl cmp mov push outsl add add notl jmp mov push jbe adc (bad) jmp fldl mov sbb out enterw xchg popf lret rcr pop cmpsl test and fs xor ljmp inc add xchg pop lds clc mov and xchg mov xor push mov in and jl adc mov fsubs mov sbb pop pop test sub popa jae jbe adc mov mov xor cmc pop repz jne,pt cmp xchg mov aaa cld aam (bad) mov ja adc pop cmp xor jp pop pop jbe jmp mov repz cmp mov jb mov mov call loop push aam push inc in sub sbb test mov nop inc adc hlt inc cmp mov push add adc cltd xor push mov lock xchg add push xchg and (bad) jne dec add dec pop jnp leave (bad) and mov arpl sub fwait sarb xchg and mov leave repnz add daa inc shl add subb pop mov and push mov (bad) daa jge push dec das xchg xchg add jns xchg ficoml sbb mov add insl ljmp pop cld xchg dec jo jg es test pop push shlb cs or stos hlt add xchg imul cwtl cmp xchg arpl pushf in out outsb or lret pop and int3 popa rorb loop push jmp dec xchg add inc fwait fs data16 (bad) je push sub push loopne sub or cmc push lret and call xor pop enter fs add dec shrb in pop xchg dec fadd sub pop mov (bad) movsb sub mov pop mov and push loopne dec mov pop cs add inc in cmpsb dec mov lcall mov mov pop mov ror cmp dec cwtl dec xor cmpb and test cld lret shlb dec adc (bad) inc mov xchg insb dec push adc insb fcomps fsubl js inc pop or sub sub inc push xchg xchg nop or mov inc pop sbb xchg lods mov lods aam xor dec add divl cmp and add adc sarb jo scas xchg push sarb pop mov push cmp orl (bad) mov repnz mov ret icebp andl enter fdivrl inc pusha lcall rcrb lret ror lock sub dec hlt dec xchg xor adc pop mov add fcoms aas cs call fnsave sbb inc and in daa dec and adc out das inc cmpsb xchg and cmpl lods jle add push movsb or mov add add sbb cmovno mov out cmp nop fldpi xchg add enter imul (bad) (bad) lock mov testl (bad) mov mov add xchg xchg sbb pop stos movsl push pop iret cmp pusha mov dec movl icebp mov mov (bad) sbb push and push aas add push popa outsl les sbb cmp lods nop test jmp push roll adc mov ljmp xchg xor sbb add or insl loopne loopne fsubr adc cmp or lcall call loope sub push sbb sbb mov add subl (bad) pop mov inc cmp (bad) in sarb sub pop ljmp arpl arpl mov loopne jmp data16 and pop sbb add test jbe xorb and pop sub xchg mov mov in cmp xor jge push adc icebp fwait jecxz add add adc add mov jne bound test (bad) xor fcoms or test xchg push hlt rcll or pop fs aas in mov cmp out mov (bad) pop ja mov imul jno sbb stos les or fdivl dec sub mov mov sbb sti fwait push mov std push inc outsl in nop xchg rclb add rcll es lods jmp ret sub les in jbe hlt adc shlb pop aaa xor or mov lea fxrstor adc ljmp mov imul mov jecxz cmp mov add xchg inc and repnz sbb or stc sahf jmp jb pop jmp cwtl add pop pop mov mov (bad) cmpsl and lahf cli data16 mov loope adc shlb add adc in je je sub jmp dec (bad) mov test and out arpl xchg adc or sbb pusha cwtl cmp xchg lods cltd add outsl pause hlt or sub and test cltd and ds lcall (bad) call add mov inc cwtl or aam mov andl sahf xchg bound mov add icebp ficomp and cmp enter add mov (bad) and add mov sbb movsb aam loope lds mov nop push nop lods adc imul sbb mov inc add dec or dec stc fs push push mov pop ret fisub popf push and mov enter out and sarb xor mov fs mov mov lcall or and and push mov xchg add (bad) pop test and mov rcrb dec push sbb fs sub fiaddl xchg fsubs call and cmpsl sub mov int3 pop lahf pop (bad) jmp fdivs nop adc sub insb cmpsb sub cmp sub pushf loope es mov mov and cmpsl sub sbb push mov mov jp clc daa add or xchg loopne fwait in mov cmc pusha inc or fidiv pop andb aaa popf push dec sarl popa sbbb xchg or nop data16 adc add mov subb hlt mov sub adc mov jecxz sub sbb add addr16 mov lock hlt cmpsb je or rolb fsubrl movsb aam test fmull jns repnz test fsubs rolb bound adc aam in mov nop shrb add dec icebp sub jb add xorb push mov and push (bad) dec push data16 (bad) fnstsw xchg xchg mov pushf cmp pop lods mov pusha cld (bad) mov xchg jo cmp jl xchg loope cmp and dec lea xchg scas int3 (bad) jo out (bad) jns lods xchg add mov movsb bound shlb cmp and js sbb nop nop dec xor cmp aas (bad) shlb cmpsb loop dec sbb jmp int3 imul dec mov js add rclb mov sbb sbb mov rclb ret cltd add jne mov sbb mov jno in aaa adc dec push int3 push pop imul fdivs and inc rol xchg mov clc inc mov dec push psadbw cmpsl cltd loopne fist jp mov or roll js nop cmp aam cld push idivl std faddp js and push xor js xor push in ljmp cmpsl (bad) xor pop shr xor mov jmp and mov xchg es aas mov sbb push xchg aam sbb and and ljmp mov aas adc mov and jg ja push rolb in adc aas dec mov push sub sub call add test adc push mov or shll add loope shlb bound mov js sbb aam rolb mov add and mov jbe les inc inc sub dec loopne call and pop push (bad) enter jmp mov xchg hlt mov or xor or pop mov enter jecxz dec cmp sbb ja data16 push mov pop xchg sbb lret or add xor xor imul pusha jle dec inc test push mov arpl cmpsb sub dec jo adc scas push jo xor sub add pop outsl inc lock fwait mov sbb jo (bad) fsub divl imul lcall mov jo cmp aas add les adc repnz rcrb lds jp jae rcrb or pop fs jmp mov mov dec nop and addr16 xchg fadds dec andb mov out pop call sbb faddl dec add sbb xor ret fadds lods data16 add aas outsb and insb aad push icebp arpl popa or xlat ljmp aas fimull movsb and pusha xchg inc push mov push or neg outsb push fstpt mov add xchg and adc xchg and or rcll sub into inc loope pushf lahf imul mov sub fsubrp sarl shll (bad) rolb call outsb add jecxz xor jo call jno out icebp repnz add fadds or xor mov and bswap loopne test mov insb nop repnz test popa xchg pusha sbb add jae add roll mov pop lahf jo add push lock push call imul rorl cwtl jl adc xchg pusha lock insl pop addl mov fisubrl mov cmpsl aas and push icebp sbb adc mov xor pshufw mov inc int3 dec dec mov fsubs fcoml cmpsl cmp test inc lret repnz in sub add or (bad) popa nop/reserved pxor aaa xor mov cmp sarb inc arpl dec cmp fs add sub pop sbb and pop cwtl add in cli in sahf sbb stos es jb add pop and enter jl or movsb push inc mov outsb jne xchg js xorb test xchg loope xlat in lcall xchg and test cli int mov aad jne cltd or mov es mov mov lds sbb in adc sti xorb das mov xchg sub adcl xor cmp lods sbb imulb inc imul pop dec enter xor mov sub dec add pop aam push imul dec in sub cwtl mov pop (bad) cltd jl aaa mov dec sub mov cmc mov dec stos pop inc push adc es sub or popa dec (bad) push mov sub (bad) cld popa add dec daa jo inc cwtl fmuls mov or je add fmull add sahf and imul sbb packssdw lea cmp mov jne mov lock rolb fbld and or add mov xor enter daa sub add xchg stos mov inc jo out sub adc and sarl repz inc fs (bad) sbb jb or int3 mov lahf push es sub xchg aaa and ret ja test push pop arpl mov or insl dec sub je xchg xor and popa neg ljmp insb add and dec and pop test mov cmp pop mov xor mov add clc fmull mov lret inc push test out add sbbl xor popa sti cmpsb fs sbb iret jno iret sub and leave push adc ret test xlat lods stc aas mov loop mov push jo test inc or and add mov daa mov ret pop add push outsb jo xchg shlb cwtl adc loopne push sbb or icebp pushf cmp and inc pushf clc dec push je xchg bound inc bound mov jmp xchg cmp shrb or or in dec inc cmp and xchg ja in adc sub dec fsubrs es mov pop jne mov mov or and fiaddl (bad) sbb in sbb daa xchg xor rcll xor int mov push and mov lock jo les test sub mov pop mov or push imul ret movsb notl test dec rorb push lret mov fs mov sbbb (bad) lock and jge adc dec and aas dec and ret stc aam inc movsb loope add ss fidivr es cmp and es test dec out adc int3 mov pop fcompl (bad) js loope mov xchg icebp xor push addr16 cwtl jle xor inc rcrl cmp fwait in add or push xchg cmp repnz add les dec add lret (bad) jbe add jns ljmp xchg rorb or enter cs push (bad) inc push enter loopne jmp idiv sub and cwtl movsb lods inc lock out push sub mov loopne add out jl mov je pop leave jmp dec and push add sub mov pop push push mov adc test sbbb jne push pop push pop das lea hlt nop enter dec or les es add data16 xchg sbb push push dec les and xor mov nop fadds add mov pop xchg mov push jmp push int or call inc fdivrs dec mov or pop dec xchg mov rclb sbb xchg ret movsb lock loope imul les nop inc movsb and push sbb mov lods rorb (bad) and cmp call sub insl add clc fcompl loopne mov pushf sti iret mov mov push icebp addl insb xorb and inc pusha dec cmp push ficomp mov mov mov loop int3 je cmpb mov lock xchg adc js and add mov in xor mov adc addr16 imul (bad) aam fsubs lret sbb shl pop dec xchg movsb cltd sbb lods sub mov lods test inc in enter sbb adcl dec sbb movsb add scas mov aam in test xchg and mov push pop adc push jae mull mov int3 xor pop dec lahf rclb adc mov add inc movsl cwtl fcoml paddq fadds dec stos xchg repz add test fnstsw sbb (bad) ljmp xchg in push adc or sbb fdivs (bad) jg xor cs in adc int3 js cwtl mov repnz mov call (bad) push push push js jns fdivs cmp sbb dec int3 out dec inc xchg xor push xor jle andl nop mov push (bad) sbb mov xor mov xchg in mov loopne sub push add shll add mov divb mov (bad) add push out xchg pop push out add jp std movsb ljmp xchg (bad) sbb jecxz xchg cltd scas fiadd out rcll push pop (bad) push aad xchg rclb mov pop mov sbb cmc lds in mov (bad) ss andb mov mov mov pop ss sbb xor cli push mov scas sub add int3 cmc stc aaa les scas cmp push ror cli clc sbb fmul insl xchg cmp ret adc adc stos add pop lahf cli xor rolb or out mov mov add jl push lods mov and sbb scas inc mov fwait hlt lret lret fldl push cmp loopne xor movsb leave add sub rcrl test hlt pop adc push jl adc cmp andb cmovns mov pop cmc insl test cmp jmp inc into push push enter add xor cwtl sbb sbb scas inc icebp call mov js cmp mov cld sub xchg mov jae mov nop add arpl add enter in inc xorb aam mov mov mov adc add push push cmc ds xor icebp push xor bound in mov mov adc jp shl mov in inc cmp or sbb out sub cmp shlb rorb lods inc sbb add or cmp push scas and mov roll fcom xchg cltd repz pop adc mov fcompl and clc je mov cli push std fmul dec add lods cmp pop popf xchg cmc in inc clc add mov mov adc cwtl pop add insb mov sbb add jmp fs and mov loope scas cs dec mov jl dec (bad) sbb xor lock lea jge jl add sub and push add xor hlt push inc fdivr cbtw aas pop cmc push test mov add in xchg mov aad shr lret mov push or sahf mov xor jno add fcompl push xorb ds adc xor add aaa icebp ror cmp mov adc mov notb cmpsb jg fdiv sar pop and leave adc adc int3 jge add into add imul jmp mov or call sbb adc cltd enter in push and nop ficom (bad) movsl test shrb ds add aas jnp push add int3 or and mov call sbb sub add pop popf jno mov mov adc pop or mov nop and add adc cltd or xchg push add sbb ljmp outsb cmc cwtl adc pop add xor cltd pop imul movsl (bad) cwtl (bad) xor movl mov sub cmp xchg xchg xorl (bad) and aaa loopne add cld lds push dec or pop xor nop sbb fdivs or or lods cmp mov les sub addl mov lea and add mov cmp jnp repz or push pop test mov mov jb adc decl push xchg add scas pop mov jns add push sub lods and aam add test cmp sbbb faddl add ss jae addl (bad) ds imul mov push add in ret add sahf mov push mov jno neg or incb add aas lock cld or insb xor sub push jae ds call adc jbe mov leave divb (bad) cltd jns std ret je jecxz iret rcrb cld add pop (bad) push arpl mov hlt sbb cmpsl add dec (bad) push adc aas push cmpsl add out jp add jmp xor leave add imul sahf pop out sub inc mov cwtl fistl mov jne adc cmp pop or ret or and jne cmp out idiv ja push adc pop int3 and out sub in push sub xor or fsubs sbb jno icebp imul pop inc arpl add sub and and ss cmp scas sahf adc add fildl or and ffree out mov jle pushf mov data16 sub (bad) sarl jl les mov fs mov test adc mov sbb pop cmp out add pextrw mov rorb test mov mov dec shrl xchg jno sub or inc push stc pop mov insl loopne xchg sbb inc pop jo inc bound add jb (bad) aam mov sbb jno xor cwtl jle cmpb pusha shlb inc adc mov dec lds xor push negl dec ret dec adc (bad) sbb push mov adc in sar xchg (bad) sbb adc and sub mov jae test dec test and movsb js mov int out cwtl lret bsr push mov call push jecxz dec out inc mov push push add test jecxz loope out fadds popf mov adc adc test hlt add ret cmp jmp cmp out xchg (bad) xor clc ret xchg and mov shl push xchg push add dec xor mov or sub popa scas out push fdivr out inc rolb ret ds icebp sub mov popf mov pusha test mov pop cmc sbb sub xor scas adc dec or sub in mov ja jo nop xor add adc or add dec rorb popf pop pop (bad) lock dec dec (bad) aas fldenv sti inc clc mov and clc sbb dec inc mov lods dec cwtl push cltd (bad) and xor dec lock adc fadds push repnz or sub cmp repz les jg or add mov xor sub sbb mov jl or loopne add push jmp add and int3 jge add xchg std out xchg call popf pop pusha push sbb ret mov in sub sti into inc cltd enter dec movsb xchg adc add add rorb lds fisubrl or insl rolb test adc cmp sub or ret ljmp popf fsts cmp add push sti loope aaa and out cli nop xor push lds clc mov xor popf xchg adcb cmc fnstenv push into nop add add add push adc jg add pop sub and mov jns adc les rorb or leave xchg cmp cld mov faddl push dec xor lret inc lret data16 push cmp das cmpsl (bad) loopne add pop mov fwait or mov and inc out sub out insb into mov mov cld push loop dec adc pop push mov push cwtl jne add (bad) adc add xor push shr sbb dec dec add push jmp pop and mov add mov push mov mov sub jo dec rorl push es loop jl sub push aas dec xor inc cmp insl jae mov ret mov inc xchg fcoml popf and in adc clc pusha js mov loop pushf inc sbb or sti xchg mov inc rolb mov rolb test sub dec unpcklps sti mov push in aas or ror fadd dec (bad) iret leave xchg cmpsl mov sub sbb cmp adc mov and shll adc pusha fs loope ret out push stc push int mov adc hlt mov mov fsubl xor adcl in add (bad) cmp mov rcll test push jmp stc movsb test cmp shlb xor fldenv dec cmp test fs xor xchg popa leave jno inc mov inc mov or sbb enter out ss mov add inc cwtl in and fstl mov push xor fiadd sub dec call inc cmpsb les sub pop jl lcall les js mov out mov jmp inc pusha push loop add pop xor inc loope into test dec or addr16 shl divb enter std (bad) test sbb insb sbb loopne out clc cwtl mov push push shll cmc jno add xchg popf enter xor dec xlat shl pop insb clc mov sbb rcrl arpl aam adc dec pop mov cmpsb pop lahf insl (bad) jo xchg test xor (bad) rorb or mov mov xor cmp push lret clc fs inc cmp out roll mov mov negl imul in hlt and addr16 dec orb xchg xor sbb out mov dec cli inc and fnstsw sar xor add lods add (bad) pop inc or xlat mov pop mov adc loopne jo and adc inc adc in arpl inc dec mov clc addr16 sbb add push push sub ficoml fistpl dec xor add shll push popa dec faddl nop mov sub mov shl push dec addr16 mov xor dec dec push xchg inc rclb adc jmp sub out enter fs jo out inc sub sub dec sbb dec sbb mov mov dec cmp clc jno xchg mov pop or aam sbb adc nop or inc sbbb pop xchg outsb mov call lock out add adc cmpsb mov orb (bad) and les popf sub sbb lcall shrl xchg movsb mov pop mov and in lcall xchg fwait clc ret xor adc test enter adc iret push sbb fildl adc icebp jl and inc or mov lods std mov pop cmp mov cmp js test cmp loopne movb jl add push adc cmpb loopne inc push xor xchg loope notb sub pop ret sub scas (bad) mov xor sbb push inc sbb sub cmp ret scas icebp arpl xor push or xor add inc mov adc in ret fsubr or mov xor les fidivr in out mov fisttp cmp inc imul dec rorl loop inc outsb inc push sbb in fidiv xor pusha mov (bad) adc jns pop sbb loopne sub push lret test adc rol in mov adc loope imul push sub lret push sbb mov pop push pop inc adc inc cwtl sub cld mov mov adc or adc (bad) int add loopne xchg add mov xchg mov (bad) call andl incl nop cmp pop sbb pop dec mov mov pop out test orl negb xchg xor inc sub cmp xlat pop inc scas std (bad) or mov push or shll dec mov das or sub xor pop aam inc or or or sbb xlat inc or cmp std sub in loopne stc pop pop inc data16 cmpb or sbb sub mov sub mov inc push movsb test and dec enter and cmp in lock mov adc and sbb fidivrl xor adc (bad) adc jg ret push shr adc mov call je inc or dec neg test xchg insb (bad) mov mov mov cltd xor jp loope loope icebp fcomi ja or ds pusha xor and (bad) xor and or adc push addr16 out xlat fistp popa rclb cwtl cltd cmp in cmp dec add adc push jns ss popa mov mov pop aam jle aas sbb pop roll fwait out pusha push sub mov push (bad) adc sbb adc xchg cs sub jnp inc pusha js repnz push or adc rorl inc xchg lahf cld test mov call dec jo mov or sbb arpl and rorl jle mov cwtl push mov or testb add fs push fdivrs mov negb or pop andb adc arpl and add cs cmp pop enter iret leave mov loope sbb xchg lods (bad) hlt cli add pop out sub rolb mov pop dec inc or cmp addr16 or mulb or jecxz icebp fistl mov hlt xor fldcw (bad) popa imul (bad) push or xchg dec mov xchg mov ja in scas nop mov shlb push fildl dec inc mov sbb ljmp adc sub adcl xchg sub push test xchg pop xor ret cmp sub adc popa xor or fdivr xor push and mov test jecxz or loop adc cmp or xchg cltd inc mov sbb (bad) (bad) xor mov ret das sbbl hlt fwait pop call outsl (bad) xor rorb cmpsb adc dec add jno test leave xor icebp jns mov sub jne xchg addr16 mov add or loopne pop js adc lock imul ds adc push jno dec and xchg lea xlat or push jo iret rcl jl,pt inc jne stos lahf (bad) loopne fnstenv and jo pop ljmp dec les insb mov and adc jb mov pop test sarb lock or cmpsb (bad) adc sbb add xchg mov dec mov int cmp cmpb adcl fsubrs xor push js int3 adc in sbb adcb mov xor aam fldcw dec pop cld (bad) add test jmp ja mov popa xchg lret in jb and test xchg repz sub movsl inc lea mov hlt arpl pop push sbb add xor cmp or mov inc clc cld pop fdivrs add mov mov cmp jge pusha dec fwait xor and outsl lahf ds fs lea inc es insb adc in inc add xor or std lahf sub inc stos xchg mov add test inc xchg xor fild xor loope test fs cli xchg adc adc sbb lock pusha inc cmp xchg test mov cli adc mov rolb lea nop pushf cmp push inc cwtl mov das xor push jmp mov cmp sbb push adc icebp push and or dec cmpsb jo cmp xchg jp adc xchg and xor (bad) daa sbb sub test (bad) adc adc cld and mov loop adc ds inc xchg clc pop xor cmp popa (bad) loope dec and fild inc mov adc dec add fisub inc push add or pop pop sub lods cld sbb dec add out in push ret and fucomi je jno inc lods cmp add sbb out push mov and push bound xchg les imul sbb add mov scas xor mov rol pop inc sbb ja sub mov mov xchg push and cmp inc xlat test (bad) stc add xor cmc lret push and leave mov sub sar xor cmp dec lock and jp and pushf nop or shlb and xor bound loopne mov ror ficompl mov xchg and xchg aas push xlat rorb inc mov shlb or mov (bad) ret sbb inc repz outsl fild pop clc dec fnsave std mov aam imul sbb sbb in (bad) or mov jnp outsb loope fdivrs add mov sub add lret jp add outsb stos sbb pop push arpl scas xlat xchg int3 int3 mov (bad) fcoms dec shll notb and enter pop sbb push dec dec lock mov xor jne add lock cmp add push add xchg add js xor push sub rolb imul or mov fistl dec pusha (bad) mov or lcall inc jg loopew orl pop mov (bad) movsl cmp leave loopne sub add rcrb pop add pop idivb xlat in cmp adc jl ljmp inc inc test xorl outsb (bad) int3 xchg dec inc adc adc mov fldenv push lds shl mov sbb and or sub sub addr16 scas addb lret in cs sub and arpl cmp jns out or fs sub rcr ret cmp rcrb ret push sub shrb and mov fs jo xchg xor rolb add std movsl mov pop out adcb mov in inc pop dec lcall enter and pop jp (bad) lock or subl sbb push add inc addr16 lret add cmp xor inc mov push pop push pop and in js and inc lods sbb hlt xchg or push test add pop cs es xor movsb mov add add aad inc push ja andl int3 jno addr16 lock data16 in inc (bad) mull aam xchg pop dec push cmpsb jl inc cmp les jb and sti (bad) mov inc mov cwtl sbb dec cmp loopne cs add jg andb or ljmp icebp add sub and pop nop mov enter cmp push cmpsb add mov pop hlt addr16 xlat nop addb lcall lcall cmp fiadd popf out popa lods adc cmp rol addb test fidiv add loopne cmp sub js push pop rolb mov or and movsb inc outsl sub push inc mov js adc mov stos nop rorb lods inc inc mov sahf test fnop xchg jbe psrld cmc xchg pop gs es mov mov inc jge mov mov nop mov (bad) mov pop cmp daa aas cwtl mov jmp pusha imul movsb addb test fldcw adc mov mov mov push add add cmpsb xor cmp push jbe sub dec mov addr16 lods loopne ret (bad) mov sbb add mov add hlt xchg jbe pop repz idivb add mov xchg addb movsb inc inc in (bad) cmp (bad) rorb fidivr ret push lock fcom mov push adc add jae push cmp adc adc xor push and and (bad) (bad) sbb enter pop ds and dec mov dec (bad) push push pop xchg xchg xchg ss pop or push xlat sub or stc mov ss mov or or aaa inc divb xchg lock mov xor shrb sbb xchg add jge fs ret leave push sbb cmp push mov in insb xor out movsb add jle mov ds pop ss (bad) push dec sub xchg mov pop and mov fadd scas mov jmp pop and ja int lods into add and aad cmp test xor stos test ljmp int adcl mov cwtl mov and jno xchg jl ucomiss mov pop adc sub and mov sbb mov imul jae mov not test push into add (bad) insl mov mov jg cmpsb hlt lods mov xor loopne stos fisttpll movhps fs cmp sbb push mov clc add pop sbb mov sbb mov iret xor add sbb xor mov mov xor sti ljmp (bad) jle dec push xchg add rorb hlt jo xor mov sarb lret pop add mov add cmp dec or xor add (bad) loopne mov movsl pop and inc (bad) jae sbb int3 add add pop test pusha test xor and fwait aam daa xor adc hlt scas xor mov mov stos cmc xchg ja add fsubs pop pushf loop push mov push lds push mov or aam pop mov iret sbbb or push jg ret loop mov add imul nop pop add repz iret add shll add jl daa repz sbb pop or jmp iret and pop nop lds dec arpl ss push push test cmc je add xor push out add ret mov dec mov test popa bnd push mov sub icebp add lods jae scas and fs jecxz mov sbb push rcrb pop call roll cmp (bad) xchg out add cli add test lcall add lahf mov inc scas loopne insb push add mov int3 add add inc dec jl adc jmp cli pop fmulp fdivrl mov call jmp movb sbb pop pop push mov dec paddusw cmpl mov jae jmp cmp int rcrb (bad) jno push ret cltd dec pop jne fisubrl mov mov push insl jbe jne push outsb pop xchg sub js jo add jp fldl jae push or add insb cmpsl aad jp sbb dec or and loopne roll rol xchg dec sub push pusha cmp xor fildl xor (bad) dec or cwtl or sbb add pushf push sarl test pop adc mov fisttpll rolb (bad) divl add jl loop xchg stos jae add push call xchg mov jnp outsb out pop or jl int or or sbb adc pusha notb sub mov insb loop test push shr xchg ss add adc and test or and sbb arpl jle (bad) popa in pusha push adc outsl jb add ljmp push leave dec bound sbb jo scas rolb adc (bad) pop push scas jmp pop fadds jbe push sarb and and add adc dec icebp add leave pop mov mov push adc sbb (bad) fbstp pusha mov xor fidiv and dec sbb aam imul iret and sbb xor jnp mov jo,pn add pushf mov insb aad nop sbb mov fidivl add or mov and mov fdivrl cltd pop repz call cmp mov jecxz and jbe lahf and jo or jbe push movsl faddp cmpsl xchg jl add in (bad) adc les cmp and daa dec sbbl les pop ds pop (bad) cltd fstpt or test leave movsb int add outsb push jae jg fadds loop sbb scas xor mov fcompl xchg jl add xchg mov (bad) aaa add xchg lret push inc cmp inc int scas mov dec dec add fsubl jbe and add jbe xor jne sub xor or dec fadds and es dec pusha push adcb ss cs xchg loopne sbb sub imul stos pop add test jmp inc mov pop sbb pop dec clc movsb mov ffreep cmp or add adc ficom cli and cmp stos rcl push (bad) notl andb fisubr out sbb sbb stos mov pushf xor inc sub sbb pop xor leave adc lods loopne sbb aas stos ss xchg mov (bad) les jae push test loop xor push jp dec jbe in inc call mov (bad) xchg cmpsb mov cmp dec cmp insb xor adc push lret or inc cmpsl fcmovnu dec mov add loopne jae sub (bad) rolb sbb jo lea ds and clc addr16 cmpsb mov (bad) jbe pushf popa mov inc jae out sbb loope andb or fstp les daa out aam cmp outsl xchg xchg and pop xchg in std pop daa sub jecxz loope aam test sbb push gs mov stos mov rcrl shrl bound sub shlb pop mov insl xlat jle cmpb (bad) fcomp clc pusha mov lock pop js push rcl outsl fldl and fdivs inc mov cltd sbb xchg inc movsb xchg add pop or push (bad) pusha pop sbb xchg cld cmp imul or xchg orl cwtl clc sub and pusha hlt imul xor cmp nop xchg or sbb fsubrl mov shrb cld mull faddl int3 aaa cwtl loope push bound mov sbb psubd cmp add out repnz fsts je pop add imul testb dec les inc movsb jnp ds sbbb dec dec sub xor add (bad) fstps push jecxz outsb add rcll sbb pop cmp flds xchg push fildl test jecxz dec call cmp inc adc pop add repz sahf mov mov mov sbb inc mov cmp push pop leave out lods mov (bad) hlt outsl fwait jo pop sbb rorb into loope subl sub sub pop push in aam or outsl loop pop inc fstl sbb jbe sbb imul rolb or inc or aaa dec lahf icebp adc dec and push or mov push pop out stos call inc sbb nop in bound and inc fadds push inc cld adc add jg pop push jl and pop lahf inc and mov aad dec cmp and inc xchg cmp mov inc push sub or xor adc mov add fnstenv mov adc enter inc sub mov or aas leave lret dec xchg fidivl aaa add popa mov sbb clc and in ljmp hlt or (bad) fs je add jne stos sbb jge dec imul pop fcompl adc jp scas test fstpl out cli jno sbb add or popf adc and fisub inc mov inc or and adc (bad) leave or and push leave in add stc jmp fwait adc add sbbb ss out lods pop or fwait sub std xlat or add test push pop jle sub inc rcr or mov inc mov add xor pushf xor sbb arpl push fs inc sub (bad) cmc push xlat pop loopne test add pop xchg lods dec push lods data16 ljmp mov rclb sbb push out pcmpeqd sbb sub jbe ljmp mov pop ret sub and clc fdivrs push or nop loopne or ja cs xchg add jmp mov hlt and jae jb inc mov cmp mov push rorb out pop arpl inc mov shlb add in decb or add pop ljmp fmull ret xor adc fiadd inc cmpsl inc push push imul or pushf inc orb call add lds or pop cs cmp mov icebp lods iret xchg jo insb fmulp and sbb clc nop in cwtl add fs lahf sbb hlt sbb cs faddl repz xor cli addl in add mov xor dec testl xchg or xor push add aaa fldl push sbb call jg jmp adc adc adc lret sbb pusha pop jb xchg pop adc push and shr or mov or ficom (bad) scas fcmovbe pop shlb push cmpb icebp add lret push jae cmp jno movsl xchg and cltd pop orb nop in mov pop sub les or (bad) arpl jo (bad) xor jae add mov test and mov (bad) xor or imul test and adcl cmp jo loope insl cmp inc pop adc and ljmp sbb sbb ja adc jo pop in fwait inc cmp mov gs push pushf addr16 jge lret xchg rcrl rcll add pop add add mov (bad) bound ficom popa sbb push or lahf adc jno dec push adc add adc add push daa icebp mov popa mov (bad) cvttps2pi icebp movsb psubq pusha cmpsl rcr pop mov sti scas and pop add mov rol push add in sbb (bad) cld xchg xor and pop popf jecxz outsl aam (bad) jae lock xchg cli mov in nop insl xchg push cmp jo cmp adc xor cmpsl xchg pop adc inc jecxz rcrl dec mov pop lahf icebp notl lods les jne lock sub fsubrl adcl mov cli xchg adc add mov or out cltd cmpsb fdivs push add pop xor mov add sub xchg adc add lds jo sub lods fdivp mov add cmp pop repnz xchg jns pop popa pop repz add dec clc cmp mov (bad) push not jb add add cmc xchg or loopne fildl enter call sbb push dec xor jp dec mov cli xor repz push mov mov (bad) fadds add mov mov or add cmpsb push add mov lret ret jbe sti add lds push xchg xchg inc jmp add add out inc test mov xorb out push add flds insb sub fsub hlt pop or in daa movsl (bad) and cmp add mov int3 fwait mov xchg jmp dec xchg cmp add cmpsl lods movsl call lret and hlt pop lock add inc xchg xchg cmp add sub mov sbbl add repz sbb scas mov mov mov mov mov imul rorb add enter xchg xchg sbb adc push popa inc cmp mov jnp add pop outsl push mov out cmp mov (bad) clc xor sub imul add mov dec add rcll push sbb add add insl or arpl in std js movswl outsl iret adc push cld out pop int xchg xchg xchg ret or mov xor sub mov dec and mov gs xchg arpl and pusha push loopne add inc sbb xor push pop or add mov add cmp arpl into adc cmpsl jmp subb xor arpl cmp in sbb or jo cmp push sub push pusha pop lcall mov int3 pusha push lret (bad) aas into mov add les stos pop add (bad) div push or inc pop jl pop adc lcall int3 push mov push xchg jns or in rcrb call adcl and rorl popa mov loop push inc repz jno cmp dec add xor insl mov lods jmp push xchg add je dec aam hlt mov xchg pop mov js mov sbb les ret and movb (bad) adc movsl shlb ret ret inc and sar cmp push out inc push cwtl push adc mov dec mov dec cmp movb shrl inc xchg arpl and dec pushf add test push xchg and movsl add test sbbb mov mov adc test into cli cmp cmp mov leave mov adc mov cmp adc es mov add (bad) call or mov or test into push addr16 rorb or pop add repz inc (bad) dec sbb mov hlt adc stos aaa jae adc dec es inc mov and shlb xor fdivr rcr clc add adc aam cmp cwtl xlat dec cwtl jge pop add push bound sbb cmp xor xchg inc sbbb sarl xor arpl sbb inc mov rcrb or inc pop push xor dec push inc icebp stos add jo (bad) jge adc xor lcall mov shrl or xor xchg push pop push sti bound fptan imul cmp popf lock dec pusha mov les jmp bound out gs push cmp sbb cmpsl mov movsb scas and addr16 rcrl jecxz jns add jo (bad) pop sub test xlat fldenv xchg and test ret add fs clc loope jge sub xchg jo dec ljmp xchg xchg pop (bad) std popa in inc cmp adc add sbb xlat call movsb inc add (bad) jecxz out je iret xor pop gs sbb ss loop cmpb bound push xor test lock inc inc inc adc leave in jo cwtl nop and adc jbe cmpsb or mov popa push data16 sub mov shll xlat mov pop in aam cwtl loope or test inc xor add or scas cwtl out das push cwtl or jae enter and xor adc mov leave sbb jg (bad) or cmpsb mov imul and mov dec sub mov add sbb cmpsb or shufps call paddq pop inc add or adc push mov xor push pusha arpl or insl call (bad) ds or (bad) mov in add divl xchg or add mov nop jl lods pusha dec mov xor xchg mov sub out fsub sub pop aam daa cld and or cltd call inc fnop add xchg pop les popa or and jge add shlb clc int scas adc dec test lods test lcall pusha je cmpsl jp fwait shlb add lea sub mov ret mov inc loop ret loopne add push add or pushf sbb out sub in bound and repnz out xor inc sti xor adc pop or inc iret in nop movsb add insl fs cwtl sahf mov inc (bad) mov xchg inc test sub mov mov into in add inc and aaa xor int3 test dec mov imul pop sbb mov adc (bad) dec popf je push inc mov fisubl add aaa mov dec mov and leave inc or and push jno mov pusha add and sbb dec xor insl js sub cmp pop and aas dec in aad or push cltd inc jae xor popf rol sbb pop fwait call (bad) cmpsb or insb add jo mov out loopne push mov icebp or jbe shrl and loop aas sub lea rolb in sbb inc pop cmp jg scas cmp adc cmp outsb jo (bad) sbb pop dec in rolb push loopne bound jg dec mov or add ja add imul jecxz enter clc mov loop outsl cmpl jbe mov add fsts pop push into test push and or xlat mov add lret data16 test cmpl in dec ror add roll add cmp mov mov call mov and subl jbe push loope sbb pop inc pushf adc test call data16 dec movsl roll dec pushf gs mov addl inc cmp loope in pop and jno js or jne nop sahf or pop and arpl dec jl dec mov addb js add sahf mov add xor xor push nop scas call add in xchg pop mov add fwait cmp mov sbb data16 enter es popl jle mull adc push add pop push imul fadds dec test popf bound call lock adc dec lea js pop mov mov mov and add sbb mov push or dec xchg test pop jns incb nop lea xor cld inc lret add adc cld pop clc and dec or inc insl sbbl dec ficoml out xor inc sub scas mov dec insb inc add enter lea rcrl xor push pop (bad) hlt dec and sbb mov xchg nop adc push nop int3 (bad) jo xor mov nop dec push fcoms add sbb or adc rcr dec add mov inc push pop adc (bad) jo mov pop sbb xchg (bad) sbb mov aam inc bound test (bad) adcl or mov imul aam nop xchg fcompl pusha in fmuls inc rcll add mov pusha ds incb mov cwtl jecxz pop loopne pusha pop mov mov dec add ucomiss mov pusha jae add cmovae es movsb mov mov out xor jae or add mov or and jg test loop push add or out lods mov imul mov dec jno out adc sub cwtl sbb test add cmc cltd and inc repz adc add ret jp mov cmp xchg repz fstl push inc mov mov jecxz mov dec test aas rol orl rol and and test sbb pop (bad) dec out stc rolb adc dec pop es jge add add jg test inc repz add adc (bad) cmp adc and xchg and outsl call adc pop cmp mov imul xor and mov rolb pusha lcall inc and mov and pop jl decl adc call mov pop mov popf lret xchg movsb (bad) std xchg cmp pop mov int3 cmc adc nop lods mov test mov jb jnp xor cmp scas jle cwtl mov adc push pop mov lock pushf test add mov add pop imull sub lds adc jb ret push mov add fiaddl inc xchg fild jo aam add inc aad outsb fs (bad) xor cmp or lods fsubrl inc mov subb lods add shll mov cmpl enter (bad) je jp xchg ffree decb mov mov xor int3 mov xchg mov loop jae pop lods ds xchg shl pusha mov test in orl mov sbb adc fidivr push repnz sub adc call (bad) les dec ret and inc arpl imul sub pusha or enter loopne in or aaa xor inc jno mov sub cmp sbb mov call sbb repnz (bad) negb cmp (bad) stos sub add sub mov jmp jl and pop shlb mov test pop dec sub fs add in cmpsb call ss or dec push adc int3 cvttps2pi add mov (bad) icebp fisubl push pop cmp inc fs mov stos cmp cwtl or mov frstor mov rcrb mov or mov inc out add test lods shll in or lods sub mov mov sbb add clc arpl sarl pusha dec (bad) xchg cmp and mov xor (bad) sub pop and push test pop inc (bad) aad add push pop lahf add and and xor and push (bad) mov daa iret sub (bad) fistpll add (bad) adc mov and ja pop int3 sbb shll je push add inc daa jle cmp outsb xchg push pop inc pop mov enter sbb xor nop xchg jl add or (bad) sub or mov push lahf lock push mov (bad) ljmp mov or ja movsl sbb or stc inc nop mov mov sbb mov daa (bad) jns sbb cltd add in test sti cmp pop push push xor mov adc mov (bad) sbb clc ret cmp mov (bad) adc cltd stos arpl sub sub xchg or ss adc shll add dec or mov movsl add sbb xor xchg push cmp sahf ret xor mov int3 and add dec cmc xor mov jmp adc les push push in clc sub repz mov add rolb add mov mov gs jl sbb cmp orl gs xor cmp xorb mov adc and sbb js data16 or ss sub aad int3 sbb pusha or movsl adc arpl lods loope pop imul mov and mov rcrb (bad) push in pop jl std orb mov ret add mov and lods jg and gs call cmpsl add in sahf xor arpl test in xchg rcrb popa aam or pusha or les mov sbb xor int sub sub jp xor pop push rorb rcll in jbe rcr cmpsb js into jp adc fidivr clc inc int cmp arpl int3 pusha and call or mov pop insb mov jb and imulb adc test adc dec cld ffree fdivl lock mov or mov repz les add enter mov loop cwtl stc ja arpl xor mov or sbb dec jns push arpl das inc mov jbe movups pop inc fiadd fwait xor sbb mov adcl fisubr popf (bad) lods ret mov cli out or jge sbb ror rorb and jmp nop rcrb sub (bad) mov adc stos das daa add pop xor in lea add pop jae insl or std xchg mov mov popa lea in jecxz mov add fild adc div mov (bad) mov add sub (bad) mov fcmovb mov clc repnz jl adc mov push or or pop mov popf push inc fcoml ret add or mov xor ror loopne or mov xchg pushf call dec es and push xchg xchg sub scas xor inc xchg cmpl and add xor cld insl jnp imul hlt mov cmpsb into xor pop lods xchg mov iret arpl stc push shr fiadd pop cmp mov or or pusha xchg mov popf add dec push push push insl mov addr16 mov ret fisttpl movsl mov mov jae pop mov ret inc gs jbe adc sbb adc iret cwtl add call enter xchg lea xchg or xchg sbb mov jo or rolb fadds aam add inc (bad) (bad) int pop push sbb stos cld jbe push xor add cmp arpl mov jl add inc and sbb (bad) in jne cmpsb pusha mov jmp test dec int3 aam and iret pop dec or pop and cmpl fs fldl rcl xlat movsl roll mov xor pop jne stos repz clc dec pop pop push mov into push incb enter or pop adc or arpl rcr icebp scas orb lods lcall or cmp add out pop sti sbb and (bad) cmp shrb iret jno cmp mov scas stc dec fstps inc fs sub loope mov mov enter and push mov add data16 mov pop popl arpl test sub and xchg jns pusha jmp xor inc or pop mov mov es and pop or mov or sbb lcall ficom xchg cmpsb hlt dec cmp mov inc jbe lea cmc adc setnp add arpl lret ficoml mov adc mov push xchg xor rolb sbb cwtl in mov fs xor cli mov xchg icebp fimull femms sbb xor xor in lret adcb push dec and out je mov dec int3 mov mov cltd rcll xor into out in add push mov and sub rorb jecxz add std faddp add mov dec adcb fidivl xchg push xchg clc repz mov lcall jle arpl and repz daa (bad) xor mov mov push sub add fidiv xor lock out mov insb fisubrl or mov xlat sbbb (bad) pusha outsb adc xchg ret mov and lods lcall lcall pop fiadd sub movsb outsb int3 lahf cltd js aas mov inc ret xor push popa gs xchg dec test aam push pop push and shlb jae and (bad) or inc cmp lods inc mov test mov and xchg cmc nop jo int repnz pushf pop aad dec andb inc (bad) cmp adc loope fadds pop pusha call (bad) mov mov and push daa jecxz lcall in and lods or push sub mov sub lods js cld pop sbb lods (bad) and fildll lods data16 mov cli mov gs movsb xchg jns mov or inc xchg adc lea iret shrb mov out xchg jmp add insl mov and adc dec dec fadds mov int3 andl mov xchg inc ss sub add pop enter iret leave mov pushf and pop dec cmp fdivrs imul xor ficoml or xor adc lea cmp jo adc scas add sbb clc sbb sub sbb hlt (bad) cli imul xchg sbb mov xor jge ficoml lcall rorb lds arpl mov mov dec adc movsb pop (bad) arpl xchg cli and add les rcrb sti mov or jno cli adc sarb adc imul ret and mov enter mov (bad) scas mov rorb icebp cmp (bad) sbb pop dec jmp clc or rcrb nop add cmpl fld1 push xor add hlt and or (bad) pcmpeqb and and rolb or js adc cmp ret test cli add nop xchg mov add cmp stos mov and fdivrl scas cmpsl push xchg loopne and cmp ret dec loope xchg pop or sarb repnz pop clc push push add lods jp cwtl (bad) jle sbb shufps mov cli arpl imul lock mov push dec arpl xor dec call xor jbe sub inc leave xchg add pushf mov push cmp mov jmp inc stc gs lcall mov and or adc add or mov jmp stos add in mov push leave test adc cs sbb movb add mov (bad) push imul add add xchg adc loopne cmp jae add push lods mov adc sub ret and pop add jmp ret dec sub sub nop nop cmp gs sbb push cmp insb enter mov mov enter subl push or scas pop sarb dec push int pop jnp lret and lcall adcb loopne jl and xor scas mov inc dec ficompl shrl inc movsb test mov dec lods rolb out or ja lcall push data16 add xchg add and lcall pop mov (bad) add rolb jmp mov rolb cwtl pop arpl dec add or push mov push lods sbb add test pusha aaa cmp pop ret pop mov pusha sub pop in add mov mov movsl rorb ss cmp pop xchg daa adc dec cwtl and (bad) jle lods pushf cmc jmp imul mov fsubs pushf lcall ljmp adc and loope insb adc push push cmp xchg (bad) mov popa out fsubrs pushf dec adc cmp sbb or xchg mov add out addr16 fiadd or lcall rcrl and or (bad) movb mov fs dec sbb dec or dec nop and stos sub push int3 ds shll cmp (bad) les cltd cld pusha dec je mov mov js mov call mov shrb (bad) xor jno sub cmpsl mov add and jecxz movsb mov push lcall and fsub pop inc sub pop aaa push or popa stos push rcr adcl arpl dec rolb neg push mov push add scas add sbb xor sarl fisttp and decb jno add xlat dec inc nop xchg ss mov xor mov mov mov insb mov jle and or mov pop daa stc std lahf and sbb sub fcomip dec mov imul inc clc xchg sub and mov xchg adc movsb sbb sub sar jbe subb push sbb pusha scas lds js inc cwtl mov test jl add dec (bad) call add insb mov or mov out hlt adc pop xorl dec addr16 pop test sbb add mov fildll and xor adc stc je jns popl inc sbb pop jecxz add push inc jns pop jp cmc sahf in sbb aaa shlb addl or sti jbe (bad) cmc adc cld xchg add lret add jle out add roll xchg jle fistpl pusha stos add nop in add mov adc cmc jp loopne imul mov and inc loopne and add cmp jno sbb jecxz or rcrb roll add push add xor test pop jecxz loopne andl loop andl jle repz dec mov inc shll ss inc test sbb bound nop mov sbb psubb aaa xlat mov xchg (bad) jmp (bad) pop add inc ja pop loope jge mov jo sbb pop mov je jmp std loope call pop jecxz movsb inc cmp cmp xchg pop data16 add inc out ror cwtl sbb jmp dec imul add inc in std (bad) pusha sbb jo mov adc add rcl adc cmc stc mov das lods dec (bad) jmp add mov cmp jae mov mov or jecxz andl push inc in xorl movsb mov in mov sbb jb jmp or pop dec pop jo iret jno add scas js add jne pop hlt mov sbb in xchg ja or xor dec add or and push adc xchg pop mov mov lods in sbbl and cmp incb pop push (bad) mov jmp repz cmp roll test ds nop int3 add sub mov roll or lock std sbb out pop or insl in jns mov cmp or jmp cmc xchg xchg rol mov mov lock int3 inc push push fisubrl inc add xlat add sub add in xorb pop and pop inc jmp jbe loopne inc push inc cmp andb arpl js sbbb dec rcr adc scas add push inc add dec (bad) clc push (bad) cltd enter cmc sub ja addr16 inc shlb gs callw add rorb cwtl sarl sbb mov and (bad) or jno and xor push jmp das clc add xacquire aas gs adc rol jp fs js ds sub pop leave add (bad) mov inc and fwait pushf and popf roll test sbb sbb inc loopne mov mov fimul test xor movsl (bad) mov push push push sahf cmp push jbe imul (bad) lcall ret fsubl out bnd push sub pop call mov sbb out test lods mov jmp xor mov std add jl divps push inc enter inc and jno and sbb xchg pusha inc aam inc xchg clc adc pop and popa dec fdivs int3 sub lcall adc fisttpl adc dec repnz lods movsb into sub shrb mov fcompl push je in int3 pop imul push dec mov rcl xor add xchg in or test imul (bad) add mov (bad) xor hlt push push loope (bad) cmc jne xchg call mov cmp iret xchg cmc adc or xor (bad) (bad) cmpsl add fs xor add ret fdivr les fnstenv mov (bad) and sub loopne call in stc and nop mov pop xor call rcr mov bound mov add pop in xchg sar jge cmc andl mov rcll mov pop fwait mov cwtl lea push xor push xchg push sub (bad) fs enter insl add loope cld lret xorb push cmp mov and imul leave divb imul or and xchg cld dec arpl je das xchg enter clc imul (bad) xchg add ljmp outsl cltd lock pusha push or fnstsw mov mov (bad) jno mov push test inc and addr16 push jb dec jp mov cmp pusha push popa sub and dec bound xchg mov hlt aaa inc daa xor mov mov pushf mov in jecxz cld sbb inc xorb test aaa jne or or stos cld int (bad) (bad) ss sbb sub ret pop enter sbb jae loope push adc mov in (bad) xchg dec sbb xor cmpsl test jae test inc or pop adc sbb mov fnsave sbb inc fcmove and xchg lret dec enter or pop and mov add sub cld add push add jmp pop jbe mov outsl or adc pop add xchg xchg pop add clc cltd out xor nop mov mov daa xchg test xchg and lds cwtl push sbb jne jo add mov jg pop dec aas and inc pushf inc (bad) addr16 jp sbb pop je or popl pop sbb mov out sarb fmuls xor imul (bad) cltd push aas mov lods std inc sbb cmp xlat shlb inc sbb and pop push xchg sbb mov js adc clc xchg inc dec and xchg dec mov daa mov sub push mov push mov adc mov mov sbb pop push xor and lahf sub movsl inc in insb xchg enter mov and xchg inc dec mov dec adcl lahf pop push rorb add xlat cmp adc xchg outsl adc or scas and shll test push inc test lcall test xchg add loop enter sub dec cmp clc mov or pusha ret sbb into push (bad) loopne ja mov in arpl leave and cmp pop dec jno inc (bad) cmpsb das dec push aad pusha out push sti and and mov dec dec pushf add daa or movsb adc fs scas mov (bad) dec call enter mov or push and add add xchg xchg sub xchg in jg ss jae mov xor mov mov in or inc in mov mov xor inc mov pusha jae or mov cmc xchg inc mov push xor jns mov xor gs pusha cmp and add scas and ss mov xchg pop cld shll movsb cmpb mov adc mov inc cld inc enter push shll xchg mov and test lock adc cmp jg adc cmpsl mov fwait dec rol add lret ljmp repz popf cs aam or imul mov cmc mov pop fwait jp mov inc adc pushf and addl mov add adcb mov mov lret add enter push int3 lahf dec lahf sub push pushf mov push push mov cwtl add insl or (bad) repnz (bad) dec xor lret lds lods test bound jae mov out mov aad mov dec fxch test cmp sahf (bad) and add mov xchg icebp mov out mov xchg (bad) or sbb mov mov popf and sbb mov mov sbb sahf bound pop ljmp int movsl addr16 mov add in pop add sub push andl addr16 fs mov data16 mov subb cmp cmp or pop imul or push pop dec pop rcll or hlt xorl xor xor dec sub sbb or fsubs xchg mov dec sarb nop inc cmpsb (bad) sarb mov sbb add and xchg push add (bad) movsb in shrb push ds add adc cmp les dec pop pushf xchg adc mov clc data16 fldt ss xor shl bound sbb sbbb mov js outsb pusha xchg test xor and adc sti cmp inc js mov test cwtl add mov mov dec xchg jae pusha mov mov sub es sub xchg jbe rcrb ja jo mov add std jl sbb (bad) mov cmp mov xor or add test mov push gs add pop repz data16 and jbe cmp lods pop sahf xor scas xor enter inc sbb xor inc sub sub add jp inc add stc sbb bound clts pop mov lret add and ret xor std clc xor jg cltd adc mov cmp pop jo lret in and les out add sbb mov cmpsb push nop and cld dec dec fs mov or xchg add inc mov insl or pushf xchg inc xchg add das cmc xchg aad dec xchg and cmp enter add xor and pop pushf xchg or mov out jl add pop cmp dec or pushf jns sub dec and fldt gs ja pop sub sbb fs (bad) ja push cs test xor xchg sub lahf int3 fs fdivrl clc cltd in cmp xor or cld push icebp mov sub jae add iret es xor in inc jl xchg push (bad) pop add sub cmpsl jmp sbb ds adc mov adc dec imul shll push jl ret gs inc aam mov std dec xor (bad) sarb (bad) (bad) cmpsl mov sbb aad cmp in mov aam dec mov hlt inc (bad) adc stos sub cs loope repz in pop adc stos jmp push lock inc daa xchg lea mov add add jp ja mov sar pusha jg out adc rol and addr16 and and popf dec adc out sub sbb enter sahf push xor mov fisttpll sub iret xchg iret in nop and lock xchg dec fs xor ret (bad) sbb pop sbb sub dec xchg dec pslld mov jno xchg add xchg add loopne rol in xchg test pop cmp pop int3 cltd cwtl sbb ret adc push sti and and fwait sub push adc cmpsb mov loop flds ss xorb scas js adc mov inc lock sub adc sub fildl loope push data16 daa add cmp or pop add xchg dec jns pop dec pusha and add std mov scas and jno add and inc daa dec or dec mov sbb lock add pop test fsubrs rcl popa or int sub ret mov sbb xor and push sbb pop jl jns xor lds add out sub or push and add int3 add dec jbe mov cmpl mov dec inc fcomps jl add jge int andl mov mov dec push pusha xlat nop adc std shlb sub popa nop mov rcll sbb pushf and add jns fisubl mov push push in mov mov sbb inc or fsts cmpl jl adc push pop pop cmp inc cld add and jns sbb mov (bad) orl les cmp data16 adc fbstp roll push data16 pop cmpsb pop nop nop add mov insb test mov pop mov jae dec cmpsb mov clc push xchg add addr16 push test fninit adcl xchg int3 pop repz mov sbb mov xchg dec jmp xlat cmc pop mov int xchg cmp das cmp loopne push add (bad) pop lods inc adc cmpsb test outsl sub push rorb pop push and add (bad) stc dec sub push dec jo inc sbb sbb push mov sahf mov add add dec in add adc aam aad cwtl imul in xor mov popa fildll cmove xchg dec pop cmp js cmp mov popf xchg sbb sarb adc adc loopne dec xlat or xchg sub loope das sub inc adcb jno and jle add push mov xor cmp test add add dec nop gs mov jmp xlat mov das xor mov aas ret mov je push push mov mov or mov repz fcomi pop insl jle dec cmp dec jl daa iret adc das mov fs add jge and std loope or cmp and mov test or test mov inc fs mov outsl cwtl add (bad) and and push mov cmp pop popa fisttpl cmp or cmp jo pop mov push (bad) pop movsb xchg pop sub sub (bad) icebp mov xor adc jmp (bad) aaa aam add jnp inc stos or addl loope jl xchg or mov adc (bad) pop mov out add add std cmp inc popa inc sub xchg (bad) test dec sbbb (bad) je adc in ds lret push mov repz dec std in sbb cmp mov shlb mov int3 es rorl xchg fadds sub inc enter dec xchg in push loopne pop mov bound (bad) jbe inc in in nop push inc xchg leave sub sbbl pop movsb ret in adcb popf add mov sub add inc ds loopne push and sub js popa fcompl in addb cmp jmp mov in mov pusha rcl cmp xor sbb cmc and jbe arpl or push daa sbb (bad) and fstpt mov jle push inc and (bad) adc adc in adc add sbb and push and mov add adc jnp dec jne add mov xor xor dec adc adc dec loopne out je out mov es sbb fdiv das pop mov mov imul popf xchg jo push mov loop mov hlt fstpt iret (bad) xor pop inc add cmp jmp pop out stos add mov loopne (bad) xchg nop mov xchg sub jecxz pop loopne out xchg (bad) out mov cmc jno or out rcrl dec aam cmc sbb add pop mov addb cld pop sub xchg js pop es aam push insb adc insl (bad) push jo sbb jmp xchg add loope test jge cmp cld add push popl xor or movsb mov mov repnz shr and gs daa add xchg mov sbb rcrl out xor lea loopne and daa mov inc mov addr16 inc in xchg pusha push ret push cmc or repz stc jecxz add mov fldcw xchg jnp mov ja mov in dec cld and push adc loope and in push inc push push jmp das xorl js push xchg mov imul mov and xchg mov test push cmp in mov shrb and dec test cli push add sahf mov and or push jl inc pop pop pop roll test outsb mov ror add inc jns add test arpl pop mov int lock or popa ror lcall add addb xchg push adc lahf mov push mov cmp je pusha arpl popf adc idivb fldt fbld add add mov mov sbb rcll add jp jmp jno cmp mov test lcall xor sbb inc pop adc in hlt cmp dec mov push je in (bad) cmc test push sti xor pop pop cmp xchg dec or jbe stos add dec repnz pop ljmp mov mov icebp (bad) xor add data16 mov sbb pop inc add mov in fs loop push fcomps (bad) pusha aam sbb sarb dec jl pop (bad) jb insb add popf sub mov push ja xchg inc enter and jmp pop sbb add mov test loope xor gs jbe jecxz xor fnsave (bad) mov mov mov mov jns jne add jmp or js jne jge call (bad) faddl pop add add xchg add iret xchg loopne addb push mov insl jns clc dec inc add (bad) sbb hlt stos sbb jo gs loopne add loop add enter lock and icebp add mov xchg sarb jb pop das stos and adcb mov jnp sbb in (bad) enter insb add pushf (bad) xor jl fwait jmp sbb or int3 sahf insl cmpsb lret frstor (bad) jae mov popf add push sub or or je pop shlb mov mov mov jno xor (bad) icebp stos dec sub fwait sub push mov adc shrl sub sub and nop cmpsb pop test cmp pop push xor cld add addr16 jmp adc xlat add fwait sbb lahf inc int3 rolb adc add lods xchg jns pop call cmp or shlb adc adc add mov adc cltd sbbb addl (bad) sti ret idiv add mov push and and imul add push movsb push or inc inc dec ds inc pop add or and xchg dec test or inc pop movsl stos xor mov aad or std and add pop mov stos inc push test mov mov (bad) imulb push pop fbld cvtps2pi shll push mov hlt mov sbb dec cli inc lret ss mov mov mov popw cmp cmpsb mov adc adc inc aam add ret push (bad) loopne add inc mov inc push pop add sub dec (bad) aas push push pop repz jg jae out rorl xchg xor and repnz pushf mov ret xorb insl pop mov adc push mov jl sub add xchg mov add fs add test cmp add imul syscall xor add mulb cltd push jnp int push lcall cmp add les loope shr repz adc js jns xor dec adc xlat sub push mov movsbl fdivs repz fnsave pop jne rcrl adc scas iret add imul daa add outsl and test mov cld xor mov icebp jmp xor pop sbb add cwtl loopne push das icebp and dec mov xchg js or dec push mov push sets iret repz jno mov popa lahf ljmp sbb add je fnsave ds xchg mov loopne rcrl je imul xchg add sti mov int3 and data16 sbb mov add jmp push add fcompl lea aaa cwtl push nop and push xchg inc and out jg loopne lods add cmpsb bnd xchg lds in jge fs sahf popa outsb jne or jge dec jns call add sub sbb mov dec int3 xchg dec or insl push leave pusha add lods add lret clc mov loop cli fstps pop mov cmc dec popf mov add jmp mov jbe aas pop enter inc mov lea pop lods jae xchg push nop sbb add sbb push dec stos add and loop aam inc pushf scas enter jg or push pusha test mov add fildl cmp inc add jmp sbbl dec pop (bad) jecxz mov out cltd loopne (bad) pop jns fwait jmp pop jne insb repz xchg mov pop cmc mov add sbb gs or ret mov js fs sahf or add mov jae es xor push (bad) mov inc in clc in jns,pt or pop mov add outsl push push mov add xchg inc pushf mov xor lds popa lods mov leave or repnz test push enter adc in bsf je (bad) dec out sahf jecxz xchg add and add dec mov clc test call je xor adc sbb add jns sbb mov xchg add pop jae out addr16 sbb jp inc push sbb out outsl xchg dec push sub nopl pop cs lock sub or into mov mov pop jl arpl and xchg ja je mov adc mov fist jo inc push xor jns and dec in pusha cld (bad) push push jle jns sbb xor inc dec push daa xchg dec jl sbbl out or mov (bad) outsb repnz adc roll ret les jle lds xor push pop je test lcall lahf mov out mov mov mov loop or sbb xchg orl stos add pusha (bad) in pop in and orb pop mov jno xchg inc add and movsb mov mov andl xorb mov and mov test fbld push and pushf mov (bad) xor outsb cmc mov (bad) sti (bad) in sub ss pusha out sub jns sbb jb scas mov fistl fnsave bound fs jl jecxz jle or add add pushf dec and sbb pop gs mov inc hlt outsb sti mov sub adc and add cs and lock push pushf adc dec cltd jno or cwtl pop je and adc pusha inc mov pop cld cmp dec movsl loop lock dec xchg lods test loop dec mov fsubrs add add push stos dec pop xchg dec andl jae cwtl adc gs cmc nop and movntps inc mov jo roll stc dec mov jl cmp inc dec push push jns cmp mov add loop cmp leavew pusha rclb test pop jl lcall addr16 insb sbb add pusha repnz and mov pushf jl add jbe sub test lock aam push push push push or dec push mov jmp inc adc ljmp add cmpsb (bad) mov sbb sbb (bad) fsubl pop or adc aaa bound stos cwtl push lods xor daa add and popl unpcklps xor pop cmc pop pusha js pop cmp jge pop xor mov repz arpl or xchg mov inc cmp aam and sbb adc add inc dec mov or repnz push mov rol loopne (bad) cwtl leave ja rcll enter scas push dec (bad) mov lods add in adc mov sbb jmp or xor push stos xor out lret cmpsb mov push jns sbb xchg mov or mov aam mov int3 or add mov insl and stos mov int3 pushf push shrb int insb or gs inc inc mov rclb fcoms mov jge dec rcrb mov push adc add mov incl adc or mov jl xor mov pop adc inc test jns andb xchg push fs push cmp mov pop outsb std pop mov loop sub pop stc jbe cmp (bad) xor push clc movsb or loopne pop xchg inc push pop jg cmpsl add fldl roll sub jge add or mov push testb mov test ret and into adc cwtl add adcl and jae add jl cli mov scas cmp add test push push pop add imul pusha je add cmpsl mov js xor int jg xchg add andl dec add out mov jno xor aam cmp es pop push cmp mov sbb dec cmc in mov roll push gs dec push repnz daa outsb in leave add xchg add fs popf arpl push push cmp cmp sub adc and sub lret jp push mov (bad) sbb xor insl out jno out inc loope xchg adc sahf and pusha or loopne or add in inc in inc add popf add int3 cmpsb dec sahf je stc cmp hlt push inc jecxz or mov fisttp addl pop dec shll mov push adc cld loopne dec dec in add pop mov add add inc pusha lret rcr mov (bad) or std mov icebp add in and jnp add xchg fmull xchg and pop add push popf fs xchg sbb mov js into cmp (bad) push std adc mov das add pop pop mov out lock inc daa jae mov inc (bad) repnz mov cld lods cld sub add aaa enter dec xlat push and mov pop adc add xchg rcll mov and sub add scas cwtl nop aaa sub arpl and lahf test inc sar add aas push pop adc xchg mov add int3 mov add lds inc mov mov mov add cmp mov mov jbe push pop push push mov nop mov xor insl inc cmp jmp sbb xor pop lods mov inc xchg xor and or inc mov mov in push xchg inc lock in rcrb dec mov nop outsb daa mov inc enter and add xlat mov ljmp xchg fmuls int3 push mov mov test or push mov dec ljmp push push adc xor adc jg xchg popf add push pop clc out call cwtl pop cmpsl cmp cmpsb sbb xchg inc scas push mov orb xchg or or lods jge in dec xchg outsb adc xor mov mov mov mov out je movsb adc push inc test jo adc add repz jle,pn or out add dec (bad) and call push sub outsb cmp outsb orb xorb sub movsb enter mov jge cmp loopne rcrb mov test push lods cmp add lods js add movsb ret clc xchg add outsb addl jae and gs adc mov ret mov sub or mov jp add fdiv lock xchg outsb js add pop mov pop add or scas enter mov cmp aad mov cmp out dec mov cmc fcmovne push add adc jne (bad) movb nop movsb mov jno add mov (bad) xchg add loop mov pop fwait jl jne popa pop jmp shl fstps mov pop es pop movsb mov cmp nop test aaa fldl popa sbb pop idivb xorb pushf mov cs faddl (bad) adc push (bad) (bad) sbb jecxz dec add add xor dec cwtl push arpl or insb add mov jo pop outsb push in mov push (bad) adc addr16 add or pop mov push pop add sti mov loopne mov popa int cwtl pop fisubl mov dec add xor jle and paddb std push mov mov gs lods cmp cmp sbb xchg jge cld xor dec es lea (bad) jnp rorb popf mov add (bad) stos mov and xchg cmp hlt add or icebp sub aam add push inc nop test sbbb adc xchg dec ljmp int xor in mov subl push sbb adc pop cli and mov jo aaa mov lock add add jmp add sub cltd je pop repz fwait in outsb lcall or mov sbb jns jle cwtl lret test mov pop inc mov mov shrb or xchg jnp call jns and sub pop jbe mov mov lahf test push adc and (bad) hlt loop adc mov jno xchg add scas and (bad) dec ret xchg out pop adc add pop shr cwtl movsl push pop les fwait mov dec add clc adc int (bad) jo or mov mov or out pushf xor sbb and mov sub dec push ss add add repz mov std push adcl inc je jp orb inc pop ss imul pop adc mov sbb fnstcw loopne ret mov cld jb xor push aas pop xor dec stc cmp add ret cld test adc mov pop inc xorb jge xchg add mov xchg xor and add and in mov add cmp stc fldcw icebp cmp xchg mov mov fsubrl and pushf inc pusha out (bad) pop dec add lods cwtl hlt mov jno add ja or mov sti add lahf (bad) jg push pop testl rorl data16 pop in dec inc dec sbb add test repz (bad) ficom popf dec pop (bad) je and sub cli cmp adc int hlt lahf das cmp test arpl inc xchg mov fxch pop add and mov cs ss dec pop cmp adcl sub and js xchg insb adc pop xchg popf adc loop mov jl ljmp pop setnp loop push mov stc adc lods clc inc add addb inc int3 sahf addl mov imul add shlb dec (bad) adcl pop out in mov ret fwait pop push je add sub mov pop mov mov faddl pop test inc sbb inc add push xchg push mov inc xor cmp jne gs mov push or out lods nop stos mov mov popf ss mov mov jae pop data16 add mov xor or lock jno inc cmc add and dec cmpl lock lds sub add loop ja in jnp nop pop (bad) call or or nop jl xchg outsl and stos in out test andb aad add loopne (bad) icebp add cltd mov and (bad) push movsb dec push and popf xorl sub inc xor xchg orl adc sar in sbb jno pop insl inc add pop and rolb cmp xor mov call aam add sahf adc pop push xlat dec fsubl dec (bad) lret sub xchg or xchg (bad) loopne add sub (bad) or jbe adc add mov notb mov mov mov push and xor aas sahf test mov xor or or adc add je dec loopne mov (bad) xor push ffreep sarb stos popf test push dec add jo,pn outsb icebp mov jmp mov in imul inc lcall sub mov fwait pop sub hlt add xchg cmp loop (bad) cmp adc and aam jae (bad) loope add jne andb std add add inc rorb in lock and test subl xchg pop adc enter xor lahf roll and loope iret push (bad) cmc hlt in cmp les jl xchg lods add mov mov lds cmp divl test add pop sub pop pop daa inc or adc add test mov sbb pop dec add sahf or mov mov fs ret push lret hlt add add popf pop dec dec pop dec cmp or inc iret nop mov xor pushf icebp mov pop push jle add sbb add push (bad) stos pushf cwtl int3 sbb xor and nop inc aaa sbb out sub xchg cli pop add mov dec add je pop push dec adc shr mov pop pop jl add or mov xor sbb push loopne mov mov or cmp lea test adc (bad) cmp mov add add sbb repnz push mov add dec jge sub ds xchg mov sub pop loopne shrb jecxz nop fildl push mov push repz sub or push or outsl or add cmpsb xor les adc addb inc out stos add roll xchg in pop pusha iret push mov and ret xchg jo or cltd cli stc add and test mov push outsb aaa bound xor lahf pop xchg dec jb cmp or es insl cmp scas and imull jno jns jl xchg xchg jnp stos dec outsb iret xor addl in mov push push add inc repnz sub sbb cmp dec lock (bad) push adc or and aam inc xchg lahf xchg out push test rcr mov hlt cmp nop xor push inc and add pop or mov add push xchg stc movsb cwtl aaa mov pop add mov addb pushf cwtl sub jno fild dec cmpsb mov fldl inc xor xchg repz shlb jge sbbl or testl in inc inc pop inc lahf mov in adc es subb int xchg jmp je lods rcrb adc adc mov das cmp pop roll lret jno dec or dec pop push sbb or pop ret push jno ja xchg adcb mov out (bad) ja adc adc popa pop out and sub outsb add pop lcall int pop notb (bad) dec enter cmp lods push imul ljmp push and push test outsl mov push xlat mov je les dec mov das add rcrb inc pop sub mov dec es cwtl mov inc bound mov add cld sub sti mov push add insl cmc and and pop add ficoml add xchg shlb test enter mov cmp xor fistpl xor out in cs cld adc fildl mov test mov and cs daa push add (bad) cmp andb push daa fistl xchg int3 push sar int and imul xchg xchg add xor rcr popf cmp lock sarb push xor push add add movsb add arpl or jno add jmp subb xor insb mov lock int lcall push mov test imul jmp mov sub xor cmpsl dec mov adc repnz jmp inc stc pushf mov or fadds adc mov mov dec mov outsl test push enter jbe mov in inc adc and ja pop jg mov or test movsl adc or jae add scas popa cld ret sub outsb and in fild mov out push daa lea add ret roll les jle add xor idivl ret insl les cmp push rolb pop jae stc rcr (bad) fwait pusha and fadd std outsb push lds xlat (bad) cltd and pop add inc loope js sub data16 lret (bad) mov sahf into jecxz and add sub pop add adc int3 mov fcoml push lcall loopne,pt adcb in in jge (bad) in dec iret mov jp and mov pop sbb xchg or out mov (bad) test xchg loope ret adc cmp add push xchg or pop popa adc add adc xorb dec lret mov jl,pn xchg loop test mov lahf sahf in push in lcall das popa sti popf and fldcw sbb ficompl pop sahf adc fwait ja add test inc cmp and sbb add lahf add sbb movsb dec mov push jb cmp mov pop mov jmp mov xchg rorl pmaxub movl or xchg mov in push icebp (bad) (bad) rcl es push cld iret and sbb add dec xchg jne push mov sub xchg add mov addr16 sub lret jecxz cmp sahf hlt add sub mov pushf mov mov in into imul xor adc test add mov call xor repz push mov je lods pop loope outsb lock adc xor ds add push mov and imul mov xchg dec mov mov fsubrl nop stc andb dec sti xor mov inc out enter psubusw aas jmp xchg pop inc push jle add push scas xchg sub adc and mov add add shrb add pushf ss add inc sahf mov adc lret loopne lcall sbb pop push push popf mov inc fmuls ret rorl xchg mov or stc push sbbl mov cmpb mov pop sbb daa dec hlt jl add jae mov test jo add pop mov add sub mov sub adc push pop loopne push cs jge jmp daa cwtl rolb add xchg and sub inc or (bad) or lock sub ds pushf (bad) enter or stc add pop push xor in push push dec popa adc mov sbb jbe,pt cld mov mov repnz add pcmpgtb cld cwtl mov cmp push loop xchg ljmp mov in inc nop or sbb jge add scas cwtl hlt inc int3 or jl dec push and outsl jmp add dec pop pop (bad) sahf loopne jl pop movsb jns add add add xor movsl push ja fs pop add test int cmp cld cmpsb movsb pop xchg out push call movsbl inc pop jne sahf cmp insl hlt insb fwait add stos jns outsl push das add cmp push add stos mov loop cmp and mov cmp cmp mov add xchg loopne mov xchg add mov hlt pop cwtl lods xor cmpb jg add ds pusha dec mov cld ret jns add repnz xor and in jb mov (bad) sbb sub dec xchg adc ret js daa cs cmp clc push mov mov loop in dec xor js add push and pop or xchg xor pop xor add rorl inc sub enter sub add idiv add or mov mov dec add rorb xor pop ds addr16 inc (bad) pop and adcb inc push inc sbb mov fsubl push test add or lcall es mov rcl sbb mov sbbb add (bad) cmp pop in add out mull cmp mov rorl pop pop add or mov sbb cmp xorb outsb cwtl test sub dec incl cmpsb or inc sahf xchg les (bad) mov out pusha xor inc jmp push ss sbbl (bad) fisubr mov cmp movsb cmp mov xchg pop and sahf andb or jbe add jp mov data16 test adc mov add cmpsl enter add cwtl arpl and or inc (bad) sub aaa add je mov xchg mov add lds inc jno sarb dec push enter imul cmp sub dec bswap hlt movl or cmp add push jge add ss adc mov popf pop or cmp mov jl punpckhwd dec pop loop adc lods repz jle xchg stos adcl or or in adc pusha enter jp insb ret shlb test push (bad) rcrb arpl or pop add xor xchg pushf mov jge out mov xchg sub rcrb or imul shll cltd adcb mov cmp jno incb mov pop push and repz call rcll aaa mov fwait add in lret jno cmp das loopne inc aam dec inc shrb push mov psubsw aam inc push cmp out xor xor push popf ss add loope outsb aas movhps or push and push in nop adc test or loopne ds push lret test xor jl jb popa loopne mov cwtl pop pop adc repz in pop inc cmp popa inc lds dec ja pop outsb lods js dec mov pop mov push mov add pop jecxz cmp fldt sbb xchg mov jmp or lock stos call mov lock adc fwait add jle,pt add jge xor nop je add or outsb add sub fdivs rolb dec and test (bad) dec add (bad) int3 mov movsl mov mov sub pop orb sbb js (bad) lds loopne dec and fdivs sahf sub shr jge add xchg add lret add jl rolb lock xchg jg jge lods cs (bad) sub xchg out pusha int jp adc ljmp ja rolb push lahf fs fldenv xor inc (bad) out sub call dec (bad) xchg sub mov dec fldl fidivl clc mov xchg xor test xor add sbb add cmp jnp sahf mov mov push subl cmp mov jp,pn push lea xchg push xchg jnp in cmp je add cltd fdivrp add aam jo mov test sub ljmp jp jecxz lcall pop xchg addb movsl push add cwtl fisubl push je xor and test xor add rorl sbb jle add push mov addl adc mov add and addr16 (bad) add xchg sahf inc into pop jbe jge loop pop xchg push fcmovb inc fnstsw sub xor mov mov jbe push decl mov jl or xor inc add push icebp pop xor inc aam (bad) push les add inc mov adc cs sbb adc add add iret pusha jp mov xor xor int3 sub pushf mov imul mov push and mov cs js xor test pop popw sub pop jnp mov lods push (bad) adc cmc cmp ss ja add inc jl ficoml push aam stos pop test enter popf insb hlt push add push mov push aad sub push fldl cmpsb push vmovmskps add mov int cwtl dec repnz inc cs test adc dec mov add cltd jecxz sub scas lock xchg cmpsl mov sub enter and (bad) ss add mov pop dec movl push movsb cmp pop mov jecxz rorb mov inc lcall ljmp jns and roll lahf cmp mov or and imul sti inc xchg sarl add mov pusha in imul (bad) addb cmp dec xor pushf xchg mov sub mov inc jbe adc or xchg and rcr add stos mov rcll inc xchg sbb popf mov inc sbb mov or add jb mov test push pusha fisubrl push xor add jb push adc cltd adc jne push and inc mov xchg lods add sti lret pushf mov in mov mov sub rol cmp mov jl call jmp mov lods xlat sub mov push insl imul add mov add ret ficom cmp mov inc jae adc and nop or outsb mov enter pop pop repz lea pop es rcrl sbb ret test and and mov loope xor xchg add adc adc sub xor mov rorb (bad) jge or add into mov inc pop iret arpl cmp pop jae sar mov dec add dec nop mov jnp mov inc iret xchg xchg adc sbb sub in push das xor add clc jmp jo dec inc push arpl fcmovu xor xor lods incl cmpsb inc xchg push push aam dec adc add lods xor inc rorb add xor cmpsl call fistp jnp add push mov push sub jbe add ja xor rcll insl jns add jae ret loope loope,pn clc pop and mov add adc mov pop nop xchg pop adc push jg pushf mov push mov adc das xchg and jb add cmp call int3 push dec xchg cmpsb repz mov mov xor add or inc add cmc imul mov loope or pop inc dec sub add fist (bad) hlt inc jp fildl add fdivrs add (bad) jp mov mov (bad) mov xchg lock decb sbb andl int3 rolb daa pop or rorb loop cld out and xchg fmull pop fs add ret and lock mov (bad) mov add inc push xchg sub xor mov add and mov mov out mov push mov shlb sub mov xchg xor dec mov (bad) add inc push aam sub sbb inc add inc ret cmp test push dec sub adc push push push rcrb sti (bad) xor pop popl mov out push popa fisttpl fdivrs test lret pop mov shrb adc push or dec sbb jbe mov and es mov sub sbb pusha dec pop adcb sub add les loope mov adc mov sbb aad mov in add pop iret add inc out imul push hlt scas mov lcall inc or dec push mov fsubs add fdivs es fidiv (bad) shrl or or inc mov adc cmp cmpb (bad) push push dec add popf dec mov andl fdivs mov add mov add adc cwtl fwait pop jnp xor add popf inc pushf add stos cmc xor outsl mov sar (bad) loope dec cmp sbb int sbb lret sub push imul (bad) xchg xchg add ljmp mov mov jecxz rcr into xchg sub repz jle jmp movsl roll sbb xlat and call xchg xchg adc push movsb sbbb inc add dec lods icebp mov dec inc xchg fwait adc add or push rorb pop or movsb ja add out xchg out loop mov xor add mov (bad) in or in inc jne cmc lret jmp adc lock pop cwtl rolb add (bad) arpl jp xchg sbb add leave cmp inc call pop das push out pop sahf pop or and orb and popf inc enter push add lods sub movsb cmpsb fs xor push pop lea fiaddl popf xchg inc movsl outsb imul cmp add jo fsts inc pop mov popf xchg dec add xor adcl pop sub mov cmp cmp push pop sub adc cmp (bad) and mov dec das jbe loopne ret (bad) cmc cld lds inc stos in inc push and inc ja xor xchg cmp mov mov pop xor push incb ret arpl mov cmp xor mov inc jno adc nop in jnp cmp adcb call in fisubrl decl sub sub mov sbb test pop lods aad add loopne aas sub add inc pushf mov mov (bad) or jae std hlt add mov add jg mov inc mov pop mov sub call (bad) lods sub add xchg push (bad) cld add or mov adc jp mov dec sub fdivr andb cmc repnz or jnp add mov lret xorb add dec or sub pop clc jmp (bad) loopne fisubrl pop jns or adc sub push mov sbbl test pop loopne cmp pop mov pop sti ret xor mov add out div and inc mov mov inc sbb std fsubs xchg ret mov sahf adc stc or addr16 pop movsb dec xor add lret adc or rclb and add push lea leave sub mov sarb pushf mov dec movd pop xchg sub push cwtl lods test movsb dec lret ljmp xor and pop (bad) or pop mov sbb call orb sbb (bad) dec mov add inc ror (bad) xchg jecxz nop cwtl cwtl rcrl cwtl jno (bad) (bad) ret jae mov test cmp scas (bad) aas invd lret adc cmp fimull daa pusha dec test xchg ds lock sbb dec mov iret xchg mov xchg cmp sub mov arpl (bad) pop xchg les lahf mov sbb pop mov das mov test add mov insl mov insb mov push mov jae xchg sub add (bad) xor rcrl push gs rcrl ret mov mov push adc mov repnz cmp jae and (bad) pushl (bad) inc je mov sub loopne int3 add jge push xor es lea mov das adc mov cmovnp mov push js add pop aaa (bad) push sti sub sub jo add dec and lea adc pusha xchg out or inc out sub add mov cmc dec incb add imul sub jae lods dec xor push stos adc aad in mov fidivr in xor movsl mov lea jnp mov scas push fwait or hlt xchg mov icebp fs mov dec int3 loopne loopne out jle cmp pop fwait inc hlt add imul cmp stc call daa test sub or (bad) mov lret lock out adc adc (bad) cli push aam sbb cmp jle push xchg faddl nop sub ds mov loop pop movsb fsts or jb repnz inc les fsubrs cmp mov cwtl movsb xchg pop nop or jbe shlb sub mov test jle dec mov in sbb inc nop popf pusha lock dec and in aas in repz mov pop mov jae or call cwtl xor mov loopne cmc test jle and sub ss call and and xor cmp mov push add (bad) lahf xchg nop inc add sub nop jbe xor aam dec dec add add add pop jb fidivrl mov dec jecxz (bad) pop repnz cmp dec add mov cwtl and cs cltd fmull js fiadd test aas sub loopne sahf sbb pusha dec mov loop cmc dec jo and xchg lret lock xchg add xchg notl ret add mov add dec out mov ljmp cmp and aam mov adc add add lods cmpb pushf loope jnp dec add dec nop les xor (bad) insb lock sub sbb call sbb cmp lock adc pop sbb (bad) popl mov or add aam fmuls cmc and xor xchg aaa data16 mov add pop sub mov (bad) shrl ret xlat cmpsb jl add int cmc cwtl xchg mov das dec loop xchg repz dec dec mov dec and nop les mov ja mov jmp addr16 lds cmp cld jno lcall rorl pusha jmp xchg mov adcb pop push xchg mov popa data16 pusha xor add cmpsl mov pop or hlt imul popa sub leave push pop push pop xor adc scas in ds adc mov inc add addw insb call jp mov outsb arpl push sub push sub add mov fwait mov movswl pusha pusha or mov popa add scas popl lret pop pusha hlt rcll jle add jle ljmp lcall add cmpsb sub push aaa jno or xor xor test in sbb stc jb pop add or test inc sub lock adc push push mov pop pop mov xor adc or pop add ret (bad) mov mov lock adc or out daa fild ficompl cmp push iret and call jecxz lcall outsl add stos movsb cmp negb mov enter pop dec int mov mov lods add popa je enter mov pop mov shl and xor mov sub xchg mov fwait inc sbb jmp mov jne sti loopne icebp shl inc scas jmp jp xchg push xchg lahf jg jle sub pusha into lock mov and call lock testb in xchg out jmp imul sahf ret loopne jnp out mov dec mov (bad) mov (bad) fwait lret popa add mov dec ret mov inc mov sbb xchg nop xchg add add popa (bad) in push cli mov add sbb iret add orb pop xor punpcklwd ja add div inc or push inc test sub lret xchg push pushf insl inc mov (bad) xchg adc sbb sub popa cld call loope inc cmpsb lret mov pop push mov sub add fnop gs (bad) inc sbb jnp cli pop popa je and add pop es test add add psrld dec cwtl cmp gs xor push inc push lock fmulp push nop jecxz or loopne add and cmp push add mov ret je popa pop in sbb and es push enter ja add cmp in popa adc or addl mov (bad) loopne add sarb jo mov cmp addb inc and inc xor outsl inc add hlt pusha js cmc clc call dec mov add hlt roll jmp and lret in xlat push add test js or dec cmp adc mov nop mov cld dec fxch andl inc shlb xor hlt test adc out mov int3 jmp rcl push pop popa movb fcom jno xor cwtl pop adc push push sbb and pop rcll or cld popa mov sub (bad) int cmpl push iret sbb mov and xchg shll pop and inc in add mov dec xor sar fsubl add inc stc fs cmpsl push adc mov push sar shl scas mov cmpsb jp cmpxchg pop addr16 cmp jmp test shrl movsb cs outsl add sub mov inc lcall leave xchg shl dec imul mov jns mov or ds icebp and or enter xor xor mov sarb inc add adc fisttp imul xchg inc adc jmp repnz add sbb and insl cmp jne add xor mov aam push stos in pop lret sbb mov cmc inc outsl add bnd cs fwait cmp mov add inc add loope fstpt inc in stos add daa inc fcompl xor push mov movsl int3 push add pop sbb rcll push orl pop xchg roll (bad) shll ret aad je or xchg daa test jmp and out rcl pop adc rclb test mov add mov xor mov inc inc lods and test lret or mov addr16 adc stos outsl and je cmp dec mov lcall push cltd xchg sub cmp mov adc movb fdivp shr cs or add scas xor sub movsl dec cwtl pop lock add pop jo add pop adc sbbl xlat les shr lds loop cmp out flds jno sub add aad add add sub add and add inc add add add lods lods lods cmpsb cmpsb cmpsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb movsb cmpsb cmpsb cmpsb stos stos stos add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add movsb movsb movsb (bad) (bad) jmp loope loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne loope loope loope loope loopne loopne loopne loope loope loope loope loope loopne loopne loopne (bad) jmp add add (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std std std std (bad) (bad) (bad) (bad) fdivrp (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) jmp add add std cld cld (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti sti sti sti std std std fstp (bad) std std sti sti sti cld cld cld (bad) (bad) jmp add add std cld sti (bad) (bad) (bad) cmp xor jp dec scas cmp (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc cli cli stc cld cld sti (bad) (bad) cld sti cli cli stc sti sti stc (bad) (bad) jmp add add std sti cld (bad) (bad) incl jl (bad) cld jecxz cld loop jl (bad) (bad) (bad) (bad) fdivrp sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc cli stc stc cli sti sti sti fcmovnu (bad) sti sti stc stc stc cli cli cli (bad) (bad) jmp add add loopne fdiv in add (bad) std in std in jg mul jmp (bad) fcmovnu fcmovu fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop fcmovu (bad) fcmovnu fcmovu (bad) fnop (bad) fcomp fcmovu fcmovnu fcmovu fcmovu (bad) fcomp fnop (bad) (bad) jmp add add (bad) cld lcall aaa add add add jmp in cli sti clc div clc div stc clc clc fnop fdivr clc clc clc div clc div sti stc clc (bad) fsincos cli stc stc clc idiv div stc clc clc fnop fdivr clc clc div idiv div (bad) (bad) jmp add add pushl sub mov (bad) (bad) lcall xor (bad) stc div cmc hlt repz cmc (bad) (bad) aad div hlt cmc repz clc hlt (bad) push in xlat (bad) push (bad) (bad) cmc clc clc hlt div cmc (bad) (bad) aad div hlt hlt repz cmc repz std cld movsb movsb movsb add add add movsl movsb movsl (bad) std (bad) push cli mov enter cld idiv cli cmc idiv stc (bad) cltd int add cltd iret mov clc std clc hlt cmc cmc hlt hlt aad aam repz cmc repz cld hlt imul mov cld hlt div hlt aad aam repz repz repnz cld cld movsb movsb movsb add add add movsl movsl movsl cld cld cld cmc hlt repz cmc cmc xlat aad cmc hlt repz hlt (bad) cli std test cwtl int (bad) clc cld clc cmc cmc aad aam hlt repz cmc repnz push mov mov decl and div aam (bad) hlt hlt repz repz sti sti cld movsl movsl movsl add add add movsl movsl movsl cld cld sti rcl rcl aam aad aad rcl rcl rcl rcl fcom (bad) in fild (bad) mov fcom xlat aam aam xlat aam in adc mov into call mov fcom aad aad aam aad aad rcl std cld sti movsl movsl movsl add add add movsl movsl movsl sti sti cli repz div lock aam repnz out icebp out out icebp out out repz lock aam idiv xchg lret mov jge shl fnop fcomp stc cmc repnz cld icebp lods mov adc mov daa mov std repz aam cmc not in out out cld cld movsl movsl movsl add add add movsl movsl movsl cld cld clc out ljmp repnz in out in in in in out out in rcl (bad) repz std repz cmp std imull mov in (bad) push stos scas fisttpll loopne (bad) into loop add (bad) sti sti movsl movsl movsl add add add cmpsb cmpsb movsl (bad) cld imull mov imul out out ljmp iret into int in in icebp in in cld icebp hlt xchg lret scas add adc les out aad into repz cli imul test ficom lds mov lret lock stc stc movsl movsl movsl add add add movsl movsl movsl sti sti clc div in cmpsb stos fmull fnop imul lock jmp in in iret into int in in out in jmp lock (bad) cli notb lcall (bad) cli hlt cmc icebp out ror into out out in repz (bad) stc hlt mov bound hlt lock cli stc clc movsl movsl movsl add add add movsl movsl movsl clc clc (bad) iret iret lret int3 xchg cwtl leave or leave xlat (bad) int3 rcl int3 iret iret int3 into into lret rcl lret fnop int3 xchg cwtl lret sbb leave push xchg cltd add fcmovbe aam rcl ror iret fcmovbe (bad) mov mov xchg cltd pop and xchg xchg lret lret cli cli mull add add movsl movsl movsl clc div ljmp (bad) int3 movsb stos ficompl sub iret shl cmc repz div ljmp xchg xchg lret repz enter cmp rcr push clc int (bad) add in aad stos fisttpll sbb stc mull add add movsl movsl movsl div cmc out jecxz call repz cmpsb xlat sbb rcl loopne fcmovne cld cli call and aad out in call lds xorb xorb xorl out lock int3 repnz out mov clc clc cmc cmpsb cmpsb movsl add add add movsl movsl movsl div cmc in jecxz in lret ljmp test adc mov sub icebp out int3 enter in out (bad) in repz (bad) (bad) in jg (bad) in repz call jmp jecxz in div cmc movsl movsl movsl add add add movsl movsl cmpsb div hlt in loop in lret out jecxz jmp adc (bad) mov mov ljmp jecxz out stc jmp add vpmulhuw std in jg stc jmp ljmp out in loop in div hlt movsl movsl cmpsb add add add cmpsb cmpsb cmpsb div cmc (bad) mov mov aad (bad) adc mov call and aad (bad) lret enter mov mov leave int3 aaa pushf outsl add add aaa pushf outsl ror int3 leave mov mov (bad) (bad) cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb div cmc loop fsubp loop mov in fucomip ljmp mov insl lret loopne in mov jecxz loopne loop lock fmul int out out in out loop jecxz mov loop (bad) loopne div cmc cmpsb cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fsub loopne ret (bad) (bad) (bad) loop fucomp jmp out in fucomip call loope faddp (bad) (bad) (bad) (bad) fucom loope mov jecxz loopne loopne (bad) fucom loopne ret (bad) (bad) (bad) (bad) fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb cmc hlt repz fcmovu (bad) ret (bad) (bad) (bad) (bad) fnop (bad) (bad) loope (bad) (bad) (bad) fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) fstp fcmovu (bad) ret (bad) (bad) (bad) (bad) fprem1 hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div repz fcomp (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu (bad) (bad) (bad) rol fstp fcmovu fcmovnu fcmovnu fdiv hlt repz cmpsb cmpsb add add add cmpsb cmpsb cmpsb div hlt (bad) aad fcom fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) fnop (bad) fnop (bad) fcmovu (bad) fcmovu xlat fcmovu (bad) (bad) aad xlat aad cmc hlt cmpsb cmpsb cmpsb add add add cmpsl cmpsl cmpsl clc clc div cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt cmc cmc hlt hlt cmc hlt cmc cmc hlt clc clc mull add add rol cmpsl cmpsl cmpsl cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsb cmpsl cmpsl cmpsl rol add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add leave test rorb enter add xchg (bad) dec jno hlt xor out insb data16 add xchg push cmpsb (bad) add add add aaa xor xchg xchg (bad) xor out add scas mov icebp pop push repz lock add xchg xchg cli pop pop stc je stc imul cwtl (bad) lret xchg add add add hlt add add sti mov (bad) pop pop stc int3 jg enter add pop push ljmp mov ss dec xchg cwtl cld pushw xchg sti rorb mov jns ds mov mov add mov dec dec repnz add add hlt add hlt dec inc repnz pop push cmc xchg cwtl cld push dec repz pop pop cmc add add ljmp mov ljmp out lods inc lock lods inc add lods inc push add push lods inc (bad) stc lods inc (bad) clc lods inc (bad) std lods inc (bad) ljmp and add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add inc add add add add add add cmpsb cmpsb cmpsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp movsb jmp cmpsl cmpsl repz add add add cmpsb cmpsb cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add push add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp loope jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne jmp loope jmp loope jmp loope jmp loopne jmp loopne (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) fdivrp (bad) (bad) (bad) (bad) std std std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld cld (bad) (bad) (bad) (bad) (bad) jmp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fdivrp std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) sti sti sti (bad) std std std (bad) fstp (bad) std std std (bad) sti sti sti (bad) cld cld cld (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std cld sti (bad) (bad) (bad) (bad) (bad) cmp jnp incl jp decl cmp (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) cli cli stc (bad) cld cld sti (bad) (bad) (bad) cld cld sti (bad) cli cli stc (bad) sti sti stc (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) std sti cld (bad) (bad) (bad) (bad) incl jl inc cld jecxz (bad) cld loop add (bad) (bad) (bad) (bad) (bad) fdivrp sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc cli (bad) stc stc cli (bad) sti sti sti (bad) fcmovnu (bad) sti sti sti (bad) stc stc stc (bad) cli cli cli (bad) (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) jmp (bad) push in incl jg inc std in (bad) std in add push in jmp (bad) (bad) fcmovnu (bad) (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr fcmovu fcos fcmovnu (bad) fcmovu fcos (bad) fdivr (bad) fdivr (bad) (bad) (bad) jmp add add add movsb movsb movsb (bad) (bad) (bad) (bad) (bad) (bad) cld (bad) lcall xorl incl jle incl xorb mov (bad) (bad) (bad) cli sti (bad) clc div (bad) clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc (bad) clc div (bad) clc div (bad) sti stc clc (bad) (bad) fcos sti cli stc (bad) stc clc idiv clc div (bad) stc clc clc (bad) fnop fdivr stc clc clc push div (bad) clc div (bad) (bad) (bad) (bad) jmp add add add movsl movsb movsl (bad) (bad) (bad) (bad) pushl jp decl (bad) (bad) (bad) (bad) (bad) (bad) lcall jle incl cld (bad) (bad) stc div push hlt repz div call (bad) aad div cmc push cmc repz clc clc hlt (bad) (bad) push jmp in (bad) (bad) push (bad) (bad) (bad) cmc (bad) clc clc hlt push div call (bad) aad div cmc push hlt repz cmc repz std std cld jmp add add add movsl movsb movsl (bad) (bad) std (bad) (bad) push cli pushl (bad) (bad) cld idiv (bad) cli cmc idiv (bad) stc (bad) lcall jle lcall clc std (bad) clc hlt cmc push hlt hlt call aam push repz push repz (bad) cld hlt ljmp sar push and ljmp sar (bad) cld hlt push cmc hlt call aam push repz push repnz repnz cld cld cld jmp add add add movsl movsl movsl (bad) cld cld cld push hlt repz clc cmc cmc call aad push hlt repz repz hlt hlt (bad) (bad) cli std incl jle lcall clc cld (bad) clc cmc cmc call aad push hlt repz cmc repnz (bad) push decl and (bad) mov and push div call aam push hlt repz repnz push repnz (bad) sti sti cld jmp add push add add movsl movsl movsl (bad) cld cld sti call rcl call aam call aam call rcl call rcl call rcl (bad) fcom (bad) jmp fcmovu incl xor (bad) mov (bad) fcom xlat call aam (bad) fcom aam out (bad) call mov (bad) mov es (bad) fnop aam aad aad aad aad aad aad aam aam std cld sti jmp add push add add movsl movsl movsl (bad) sti sti cli push repnz push hlt lock aam push icebp out push out out push out out push icebp lock fcom aam push cli call jge call jecxz jmp fcomp (bad) stc cmc repnz (bad) cld icebp ljmp sub call daa mov (bad) (bad) std repz fcmovnbe aam cld cmc idiv xlat in jmp jmp (bad) std cld cld jmp add push add add movsl movsl movsl (bad) cld cld clc jmp out (bad) mov fcmovbe push repnz (bad) in out in (bad) in in in (bad) out out in call rcl push lock (bad) std repz xchg leave mov add mov ljmp and jmp in (bad) (bad) push ljmp and jmp (bad) dec loop incl (bad) aaa lcall sti sti jmp add push add add cmpsb cmpsb movsl (bad) (bad) cld idiv stos mov incl sbb (bad) stc imul (bad) out out ljmp in jmp iret into int out in in push in in (bad) cld icebp hlt call mov decl pop (bad) ljmp stc out call aam push repnz (bad) cli imul ljmp and (bad) jle mov call lock cld stc stc jmp add push add add movsl movsl movsl (bad) sti sti clc push cmc in jmp and (bad) clc imul push out jmp out in in dec into int out in in (bad) out in jmp cmc lock (bad) (bad) cli idiv push xchg lcall movsl (bad) (bad) (bad) cli hlt push icebp out call iret into (bad) out out in push lock (bad) (bad) stc hlt decl cmp bound cmc push lock (bad) cli stc clc jmp add push add add movsl movsl movsl (bad) clc clc idiv iret iret lret fmul call and call (bad) int3 call ror dec iret int3 dec into lret call ror (bad) fnop int3 call and call cltd incl mov mov mov call rcl call iret iret (bad) fcmovbe sar mov mov call cltd call and call lret (bad) cli cli idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl (bad) clc div (bad) ljmp (bad) fcom int3 jmp sar shl push repz out ljmp stos (bad) mov call div call test jmp rcr (bad) push clc dec (bad) incl test jmp (bad) jmp sbb (bad) sti stc idiv cmpsb cmpsb movsl incl add push add add movsl movsl movsl push div jmp out (bad) call int push repz mov sub call shl (bad) (bad) lret cli call decl and call aad (bad) out in call call cmpl incl xorb add scas (bad) clc out lock into int3 push icebp out mov (bad) in in in clc clc cmc jmp add push add add movsl movsl movsl push div jmp jecxz jmp in dec leave enter in repnz in mov daa mov call sub push icebp out into int3 enter in in out (bad) (bad) in repz xorb (bad) (bad) in (bad) (bad) in add (bad) (bad) in repz in call enter in call in push div jmp add push add add movsl movsl cmpsb push cmc hlt jmp in jmp in dec leave (bad) jmp out (bad) jmp jecxz stc mul call into (bad) (bad) mov daa mov (bad) in ljmp out jecxz jmp jmp incl jg inc std in vpmulhuw add (bad) stc jmp (bad) ljmp jmp out jmp in jmp in push cmc hlt jmp add push add add cmpsb cmpsb cmpsb push div inc (bad) mov enter mov (bad) rol call and (bad) mov int call and call rol dec enter mov dec mov ror int3 pushl pushf outsl incl jg incl jg pushl pushf outsl call leave int3 dec mov inc mov mov inc (bad) div jmp add push add add cmpsb cmpsb cmpsb push div jmp loope jmp loop inc mov jecxz loopne in (bad) in ljmp adc mov jmp (bad) in ljmp mov loopne jecxz loopne out loop lock (bad) fmul int cmc out (bad) out in jmp loop jmp jecxz inc mov jecxz loopne loop (bad) loope fdivrp div cmc jmp add push add add cmpsb cmpsb cmpsb push hlt repz (bad) fdivr loopne fdivrp ret (bad) loopne (bad) (bad) (bad) loop (bad) ljmp (bad) out in (bad) jmp loop jmp loope inc (bad) loopne (bad) (bad) (bad) (bad) (bad) loop (bad) mov jmp loope jmp loopne (bad) (bad) (bad) loopne fdivrp ret (bad) loopne (bad) (bad) fdivr (bad) fdivr cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) (bad) loopne fdivr (bad) jmp loopne (bad) (bad) (bad) (bad) (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) fstp (bad) (bad) fdivr ret (bad) (bad) fdivr fstp (bad) (bad) fcos cmc hlt repz add push add add cmpsb cmpsb cmpsb push hlt repz fcmovnu fdivr fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos (bad) fcos fstp (bad) rol (bad) fstp (bad) (bad) fcos fcmovnu fdivr div repz add push add add div hlt (bad) (bad) aad fnop (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) fnop (bad) (bad) fnop (bad) (bad) fcmovu (bad) (bad) fcmovu xlat (bad) fcmovu (bad) (bad) (bad) aad fcom aad div hlt jmp add adc cmpsl cmpsl cmpsl (bad) clc clc idiv cmc cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt push cmc hlt (bad) clc clc idiv cmpsl cmpsl cmpsl incl add or cmpsb cmpsb cmpsb mov cmpsl cmpsl jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb jmp cmpsb cmpsb mov add add add add add add add add add add add add ja jo je loopne jno jo add add jp loopne stos xchg inc jne jmp sarb jo jnp out js in les jne add add sub scas sub and scas int inc sbb jns mov movsl (bad) jae or xor lock xchg xchg (bad) ljmp es cld into jl push xchg arpl repnz cmp ljmp lock xor cmc das daa out sldt add pop pusha stc scas pop pop stc sti push push clc rclb neg dec dec (bad) leave sbbl loope jne aas add add cmp icebp cltd xor lock add add add add popa das loop pop sub sti mov (bad) lcall std pop push clc add add add add int3 jnp aas leave js lock in mov ss fs lods mov push stos mov xor mov popa das loopne push scas fs sti popa (bad) cli scas int inc in mov (bad) mov push int aaa call xorl xor lods xor add add jle jo jl loope jns jo add add cmp push cmp lock inc cmp lea ss mov inc inc hlt push inc cmp fnstsw repnz cmp icebp jo add add hlt jecxz cwtl cld (bad) cmp add add jo inc hlt loopne repz add add ljmp pop ljmp push aas lods inc sarb inc loopne lods inc add lods inc push add push lods inc push lods inc (bad) clc lods inc (bad) clc lods inc (bad) ljmp add and add add sbb test add xor adc add add add add xor and add add add jne adc add add add add xor add pusha add add push add pop add inc add push add dec add pop add dec add dec add add add add add add enter enter enter add add add add inc add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add add add add je jb imul inc add insb add dec add data16 add pushf add add add add xor cmp xor xor inc add add add adc add inc add insl add add je jae add inc add push add add push add add add adc add inc add insl add popa add jns dec add insl add add add push add add add push add add add add add add jb outsl add add je dec add insl add add add inc add add outsb add add add add add add imul push add jb jae imul add add add add add xor add add xor add sbb add push add outsl add add je push add jb jae imul add add add add xor add add xor add add add add outsb add add outsb add insb add popa add add add jne add add add jbe add add dec add add add jb imul outsb add insb add imul outsb add insl add add jno jne add add add jbe add add js add push push push call int3 pop mov inc sub sub add cmpb jne movb mov push push push push call add mov pop pop ret push mov push push push push mov mov shr mov mov test je xor add add dec jmp pop pop pop pop leave ret popf add jle add mov sbb push xchg jl mov in pop into jp sbb adc xchg jge movsl arpl sub mov xor pop push subl mov add add sub mov sub and sub shl dec xor xor xor sub push decl pop shr shr and xor mov mov 