add mov lret icebp mov mov adc push jns dec test mov jle repnz pop out inc (bad) (bad) jb,pt inc call jns sub nop cli faddl xlat ds iret or lahf movsl dec fcomp cmp jl dec dec lds outsb in mov setbe cli and movsb push add aad ds es xlat fwait push mov xor imul in pop fidivr adc xchg out aam ds ret (bad) xor adc fs xchg pop push fwait sbb ffreep fwait jge inc sub ss mov inc push lods push pop pusha ljmp clc ss fisttp or jo je pop iret dec lcall movsl and xchg adc fst lcall out jo lods mov lahf push int3 fs in xor jno lret dec or cwtl bound popf dec aad sub iret and sub xchg jns push adcl pop pop or adc lock popf (bad) dec iret and sbb mov fwait sbb mov mov aas test in (bad) mov enter incb xor mov jecxz or insl fdivrs repnz movsb js xor sub fidiv and fidivl gs lret add iret and in rcrb popa (bad) adc addr16 into push sbb jo leave sbbl int3 arpl pushf cmpsb lea sbb push or fldl mov cs jl cmp (bad) pop pusha push add cwtl jp push (bad) adc dec dec mov je aas and dec xor addl add adc into (bad) scas sub mov sbb xor movsl test out les sub inc movsl push fcomp sbb inc sti xchg inc aad dec lea cwtl cmp movsb jle inc and dec mov mov xorb jecxz ret jp ds mov imul adc or push inc push adc addr16 mov sub scas mull push sub mov jmp push and arpl ljmp push mov pop call andl sbb dec adc out xor push or fldl or lods mov xlat mov pusha aaa mov (bad) cld push or xor cmp out aam add push inc mov jbe ds push fst cmp leave in into mov sahf xchg sub mov mov jno aam fstps out pop mov xor push sbb addl lret mov push xor adc (bad) cmpsb add mov out push mov xchg enter lods clc cltd daa cmp inc test int cltd pop fwait popa dec jl jnp mov (bad) das adc pop jg cwtl out or jecxz insl mov mov xchg sbb mov add mov dec or cmpsl add je mov sub aas (bad) test insb aam lret enter nop into pop (bad) mov jmp push and mov and test and mov or add add jmp movsl mov pop sahf jno sti hlt ror stc dec dec hlt ror into mov jne js (bad) mov ljmp and push xlat sbb fisub shlb aad movsl jg pop add cmp mov sub sub pop fmull stos xchg fs xchg sbb mov lea aad push out push mov lret dec sahf icebp aam rclb pop inc xor xchg bound pop add lcall sbb insb (bad) xchg adc cmp add cmc imul inc mov out fmul xchg mov mov dec cmp jae hlt (bad) sub lods xlat or addl cmp dec mov sub and cmpsl mov stos add lcall jne jo int or cmp xchg xchg js stos sub dec ds jo pop ja and push roll enter cmp fbld pushf jb mov aas lcall aam or sub adc movsb cmpsb loopne mov mov fsubl int sub inc popa jmp push sbb lret sub sbb into lods xchg xor js stos adc jbe das or (bad) (bad) mov enter call cmpsl inc sub scas xchg sub adc dec cmpsl sbb in fistpll cmp sub lea and (bad) pop fs add dec (bad) jbe shrb push adc mov xor movsl cmpsl pop or mov xchg jge mov stos (bad) mov roll mov loop or aad cltd ds cmpsb in inc push sar addr16 cmp mov scas adc into aas lahf add mov push in inc sub in (bad) test imul sti fnsave shlb das mov and in cmpsb lods mov push pop inc sub jns xor adc pop mov jo mov push mov pop push add pop pop addl mov or ret mov xlat mov ds pop mov imul adc outsb xchg rcr ljmp in iret cs xchg pop fcoms int3 push dec les add xchg lds jbe hlt (bad) lods sahf push lods push fnstsw stos xchg add lods push loopne fwait adc dec jle adc loop pop xor add sarl adc mov in out jno les adc mov test mov ret inc pop outsb pop add push lret xchg lods and outsb jecxz pop lcall mov and (bad) sbb push push pop (bad) ljmp dec cmpsb mov inc test mov repnz push hlt rcrb cltd scas out cli fdiv xor xchg and (bad) and dec add inc mov inc sub cwtl sub loope repnz out mov mov push dec sub and shrb jns push das add mov xchg and lcall adc push sbb jne jp xor sub push in mov (bad) mov outsb push xor fnstsw and mov push mov mov mov loop push push inc mov stos movsl jge adc xchg mov icebp jmp out sub mov xchg xchg bound enter scas sub and xchg ffree mov push push iret and out bound pop cmp es shl (bad) sbb int cltd xor hlt outsl sub or mov rcrl cmp mov inc xor scas popa cs ss push dec das imul sub push ror fildl adc ljmp pop je (bad) adc aad stos les jmp cmpsb (bad) aaa xor (bad) xor js stos pop mov ss jp mov daa or jg inc pop jp cmp popf cmp insl dec movb pop or rcll pop push xlat mov sub xchg sbb jne ds add fistp push cmp push mov lahf push sbb pavgw xchg lcall or add push or fcoml out mov sahf inc fmull push inc jecxz dec test adc repnz jl (bad) or xor sbb adc push into dec aas outsl or mov add stc xchg lods pop pop into add add inc jae lock imul dec and mov enter out inc inc pushf fimul xchg fcmovu lret inc imul lods sahf cmp adc fisttpl xchg push cmp cs ret dec pop or cmp jp xchg popa add xchg insl dec sub in loop fistl inc outsb mov add jle jae mov icebp dec (bad) mov in (bad) repnz pop cltd movsl mov in push sbb ja mov and lods into ljmp pop jb mov adc sub jmp push lahf jbe sti call mov pop pusha pop push pop outsb xchg dec fdivrl fisubrl pop les sarl pushf fimul lahf jmp inc mov adc push push in pushf loopne test ret and repnz mov in dec pop (bad) mov inc mov call movb (bad) and nop in mov roll dec rorl or push fs ss cs imul mov jae lds adc int3 or mov sbb call rcl mov arpl pop lods add and push dec dec jmp push xchg and loopne cwtl subl pop mov sbb fnsave mov repz sbb jecxz add mov sbb aaa pop iret push imul inc imul outsl inc jmp orl push dec push lret mov xchg mov mov adc dec lret int and xor jbe icebp jmp iret or jns repnz stc xchg shlb jp fsubl shrb push into xchg ret cmpsl mov pop cmp je rclb add push std stos lea pextrw dec (bad) mov sbb fcmovnb fild clc xlat mov hlt jbe dec jno icebp (bad) mulb cwtl xor rcrb sbb xchg lods adc int3 dec shl mov and dec push sbb into das or lahf out inc cli jl into data16 cli dec mov mov shll jecxz addr16 jae aaa cmpsb or jns lock dec cmp inc or in iret mov insl dec xor pop movsb aam jle push lea pushl rcrl test jle incl insl addl fidivrl mov cltd jnp xchg dec mov lock daa stc pop mov push lret pop jle push jg cmp loop dec jno es xor adc push out (bad) in leave and nop mov xchg jns cmp or addr16 dec scas mov or sbb add imul sbb sbb daa sub adc cwtl sti fnsave in jmp inc mov mov call ret (bad) xchg cmp pop aas and clc out cmp xchg imul out pop inc inc fsub test sbb jnp adc inc orl imul inc add pop inc sbbl jae lret outsl (bad) test ficoml call jae aaa sbb insb dec pop mov pop cmp cli xor jge cwtl inc in lods xchg and mov dec in mov ret lods cmpsl mov cmp shrl aad fist movsb xchg cli inc das adc adc es push pop add mov clc xor ficompl add pop fwait pop (bad) dec jb (bad) jb xor mov lds mov dec xor and dec pop dec sub mov xchg or fstpt push mov mov jns icebp out sbb jae hlt sbb mov (bad) jl cmc gs (bad) mov cmp push mov bnd iret test sbb jl lods ds int mov (bad) jae cltd mov dec sub sub cmpsb mov cmpsl imul lahf mov cmp mov or cmpsb xchg in mov lahf pop loope int3 das adc das and sbb popa arpl mov mov sub repz inc mov int faddl and (bad) xchg dec xchg pusha test add push xchg xchg inc divl insb adc ss rorl or es (bad) sti data16 (bad) jmp loop sub out mov stos cmp xor addb imul jl rcll fcmovu and scas dec xchg inc ret dec sti (bad) pop pop cmc lods mov test in xchg dec push pop add test repnz scas jbe cmp fimul jg jl nop bound ds out jle xchg ktestb lods or jl inc inc stos ret inc and jmp sbb sbb idiv xchg call dec add sarb sbb loope loopne inc or push test jnp xor push pusha pusha push lods insl jne shr mov cmc pop cmp jb pinsrw test hlt iret mov sub out mov inc push cli arpl (bad) mov and lock jle repnz lods movsl jno lretw mov scas mov rep dec xor cld aaa int3 (bad) mov sbb jae arpl (bad) in loop or icebp xchg dec bound xor nop (bad) push clc fnop cwtl lods xchg mov jno dec ja repz push fdivl push inc xor jno outsb pusha lcall mov out ss jae dec cmp std es aam push or and pop push mov addr16 (bad) (bad) xor jmp enter aaa sbb mov sub jge cs clc sub je ds das or in inc scas xchg cli aam cwtl jns inc daa or lds scas or fcmovnb in and clc pop testb imul paddusb imul loop shll pop out jae sbb xchg in pop leave mov push xchg sbb add es test or aam jl aaa jnp push jl,pt cmpsl repnz jecxz icebp push call pop dec cmpsb (bad) data16 test or and mov fidiv test mov mov mov cli out in int lret and pop and popa mov sbb imul popaw loop test add add dec mov xchg js sahf rcl mov pushf push sti stos cmpsb aad dec lea cmp inc lods enter or out xor push jmp sbb and popf push and jbe aas lret adcl data16 and mov and add sti movsl push add add pop rcrl xorb stos shrl subb stos je arpl inc mov in lret pop add pop jecxz dec loopne insb xchg xchg mov pop stc cmpsl and daa or imul and sub mov mov dec ss mov (bad) mov fiadd sbb pop mov xlat enter push call popf stos sti fdivr jecxz rcll inc push xchg movsb xor insl mov mov sub popa mov adc notb fwait aas or imul adc or cmp std dec mov dec lods cmp aaa mov add das or mov fsts pushf das adc insb mov mov fcoml in push lahf fs lods mov xor and (bad) mov dec adc jb ss add pop es arpl pushf mov dec into mov sub aas arpl jg mov mov (bad) jmp jno ljmp add sti ffree inc push inc mov jl sub pop (bad) push mov pop (bad) push addl lods mov fldl inc mov xchg push stos cmp pop (bad) dec lahf and stc popl lea popa data16 hlt std hlt aad and ficom mov pop xor outsl pop or scas (bad) test mov pop cltd jnp adc shrl mov and jno xor jp sahf dec scas push sbb cltd roll xchg loopne inc inc pop xchg mov xchg sub sbb push test cmc mov iret mov out fsubrs push aaa loop adc xchg loop ss inc cmp int arpl jae scas lcall add (bad) sub popa sub (bad) xchg mov adc ljmp add sti pop lret sub push push js cmc addr16 and push ss int3 inc mov mov aam mov push dec xchg xchg imul movsl dec lahf and idivl stos sub xchg loop push add xor test xlat or xchg pop cmpsb andb js xlat adc stc (bad) aaa mov sbb cmp mov mov xchg icebp jb lahf pop mov lods and push mov pop mov mov dec xchg jmp cwtl inc pcmpeqw mov dec pusha sub (bad) push decb dec xor or gs mov gs mov push mov push sbb jne mov xor bound (bad) adc (bad) push outsl bound cmp insl cmp sub push jno jecxz lea xchg aaa sbb mov or adc sub stc fidivrl adc sbb sti sbb mov xchg cmc js jecxz popf lahf cmp mov push hlt or (bad) add add cld jo lret sub aaa cwtl sub inc xchg mov mov or push mov je sbb jo arpl push mov dec scas (bad) rcll pop out and sbb add int3 inc fist arpl mov cmc add adc imul rol and mov inc adc inc insl dec jno rorl jecxz push pop inc mov cs das adc xor push sbb idiv cmp outsb jbe arpl inc mov pmulhuw cmp popf jb jnp inc jmp xchg jp repz push mov ret dec dec les and and aaa insb mov lret lret aas mov out stc (bad) cmp pushf xchg mov (bad) fiaddl sub icebp dec dec jae ljmp cmc ret pop adc adc dec faddl je cmp scas jl scas sub aaa jnp mov es test xor (bad) or mov mov ret mov rcrl add mov and mov pusha addr16 test cltd bnd sbb loopne ds or inc dec outsl je push mov mov add push dec jno jmp sahf mov aad dec mov sub sub sahf cmp cmpsl fldcw enter dec xchg cltd je fstps insb cmp inc lret cs pusha push sbb xlat cmpsb mov sbb inc out cmp jl and sti jmp (bad) adc bound pop fwait rol add ret out test movq fnstsw popa mov pop or xor xchg jae fcmovb mov pop sbb fucomp sub jmp push xor cmp pusha pop xor (bad) aaa add xchg inc pop jae fidivr sub jle add cmp xchg or jmp (bad) sbb sbb clc inc cmp out jo xchg inc out push fwait js jg stos loope mov nop xchg jae and mov out adc adc pop xchg movsb ja clc push pop dec dec mov movsb lret je js pushf add add mov mov fldl2e jl inc shl (bad) sub cmp sub sti (bad) subb jl stc fldt fldcw sbb out pop cwtl sti ffree adc mov scas pop stc cwtl xchg xchg shrl adc gs sub ret lret push (bad) je or add sahf dec insl mov inc clc in sti xchg xchg xchg pop movsl adc aam lcall in pop test aam xchg loop dec loope ja (bad) mov (bad) jbe mov pop popf ret fs xchg push data16 in (bad) add jns adc es icebp pop mov xchg sub jmp dec pushf scas xchg sarl inc sub imul mov adc das sahf int3 and xchg xchg lods stc mov xchg repnz pop pusha addr16 inc popa (bad) (bad) adc mov in jge in daa adc mov mov jl push push or clc std cmp pop ds jmp cmpsb rcrb jp call lahf and xchg loop scas nop adc ja outsl fnstsw inc adc into hlt mov pop imull inc dec out (bad) jno xlat and pop xchg daa (bad) fs jmp xchg rclb cmp insb xchg or push insb idiv jge enter pop mov push push jns fisubl add or push jo dec cmp mov mov ret push jno push ds push int3 jecxz jns or adc test inc cmp pop out add icebp sub pop inc and rcrb popa mov test sub and pushf mov pop sahf lahf rcr sub mov sbb or stc insl jns ss mov and or cmc outsl in fidivl cmc mov in dec fwait pop dec mov jo js cli mov jg and dec enter lcall sub push sbb xor pop and and rcrl in dec and jno mov (bad) mov lret repnz or div sbb mov mov mov sub adc scas sbb adc add push (bad) cmp es xlat lods sub out adc sahf add xchg pop int cltd jnp pop sbb push cmpb es xchg xchg outsl jb add pop inc cmp mov scas (bad) fucomp mov sbb push andl inc mov aad pop out sub pop push aam dec xlat mov lock mov (bad) fdivs daa jbe push xchg and mov out pop lock cwtl push push insl lea mov test int3 sbb pop pop stos and ret ret mov push xchg jae fdivr jecxz lahf ds and mov push pop nop cmc rcrb mov mov (bad) cmpsb push int3 into push add push jnp cmp mov aam (bad) mov sub dec and stos fidivl jno jmp daa adc mov dec aas int fbld mov lock fstl lods aaa roll les cmp icebp call xor pop (bad) adcb fucomp mov mov ja push sbb pop lret sti mov xchg sbb (bad) jmp js sub jnp loop rolb rcl pop adc jge sub mov rcll sarl add cvtps2pd dec bound xlat mov or mov mov or sahf dec push dec jbe pop sbb jg mov jae push fwait jl call call jns push idiv fsubrl sub mov add je or and call xor pop cmp out lods roll stos lea inc rorb hlt fdivrl lds pop cmp test ljmp mov in cmp aam sbb jge daa ret (bad) fldt cli add mov ljmp les jp scas es jg push ss mov push mov jnp rcll into imul data16 test movsl scas add pop mov mov loope cmp mov call mov scas adc mov repz pusha popf test (bad) mov ljmp xchg sbb dec mov adc push adc daa cwtl test sti test fmull jnp popf (bad) push sub cmp mov clc and repz pop sbb adc nop mov xor outsl rol (bad) mov dec aam in subb movsl ds (bad) out rorl pop scas hlt lods ja and inc push jo mov inc inc jecxz dec lcall add cmpsl lahf pop idivb cwtl or add clc popf inc daa mov pop adc mov pop adc mov pop and pop mov or cmpsb mov jnp bound xor scas add int3 into aad lods lsl sub or xchg xor add stos mov jno or mov push sbb pop dec fnop jg jle addb inc or lret cld mov imull cmp movsb out inc xor outsl mov sbb pinsrw jmp jo stos adc xlat pusha (bad) jecxz or cmp lcall fs gs inc sub add add imul mov loope xchg cli out out subl jmp mov jns cmpsl sbb inc xchg cld aad out movlps cltd jns jb lods ljmp mov sbb fnstsw cmp sub lock jns mov je push push xlat push lahf fsubrl addl mov mov jae ja sbb outsb push rcl inc mov jne aas and ds pop ds xchg iret cmp repnz inc in mov fs test fstps push inc push rol cmpsl sbb cmp cmpsb mov inc loopne mov sahf js lahf push inc mov int sbb shr mov mov xchg jb imul fdivrl fidiv andl std (bad) mov mov lods les pop cmp (bad) nop dec andl out sub mov fsin stos sub and push test mulb xchg in push jbe mov lahf mov adc mov fisttpl outsb or ffree inc jge loopne or jnp jbe js mov cmp pop pop add xchg psllw fild (bad) aam orl xchg mov mov pusha xor push sahf mov xor test (bad) scas das hlt or aaa sub test int3 pop cmpsb inc (bad) cwtl xor sarl sarl pop ret mov aad mov adc and leave lret push mov sahf mov sbb mov lahf adc fcmovu jbe repz inc leave cmpsl sbb andl iret mov repz les ficomp fwait pop mov xchg pop int3 push and in sbb xchg imul nop ds cmp inc ja inc sbb sbb stc rol out fdivr gs ficom adc icebp inc mov mov push jge push in call or rcll roll cmpsb bound pop lods pop xor fnop test mov fistp xchg inc faddl adc pop lods xor push dec lods add push xor jb inc (bad) xor aad fcompl pop or lahf pop dec pop subl adc mov inc cltd lret sub jmp inc mov mov and pop lcall inc inc xor jecxz loope das or push adc test mov out outsb test inc xor test adc mov mov hlt push lcall jmp (bad) sbb cmp mov dec mov mov sub push sub sbb (bad) cs test mov addr16 loop sub jns adc into cmp xor movb das jae int3 (bad) sahf ss add dec mov imul pop std enter inc loopne adc in into mov or mov pop into xchg lret mov outsb stc movups push call push imul std inc add sbb inc ret mov addl mov dec ds add adc adc inc add pop xor gs fidivrl ds ret pusha out or int inc inc ljmp inc jno loop iret xchg mov rcrb and repnz in scas je popa push ss cmp inc or decl roll orb stc push cmp inc push mov xor sbb movsb popf push mov ljmp jb fstl pop cmpsb insl dec sub mov pop stc fistpl xchg and shl push push outsb pop adc mov mov aam into dec mov ja add mov push rclb aam pop cmp jl (bad) movsb inc xor hlt mov xchg add push les inc aam sti push mov jns xor (bad) pop clc pop xor andl hlt clc repnz mov pushf dec es jmp pop repnz lock subb push subb dec movsl out pop push pop call lock pop adcl cmp lock add jge cmp dec repz addr16 mov mov rcl inc mov xchg ss cli cmpsl fiaddl ret mov outsb or rcr (bad) xor lds (bad) lock mov stc xchg jle sbb cmpsb gs fdivp mov pop sti mov jg mov pop jb cltd xchg andl imul ljmp fs push ss push push adc dec jecxz mov outsb mov sub fdivs rorl ficoml mov rorl repz add push dec pop jae sub lcall mov dec jb lret ja pop fdivl fildl fsubr xchg test addr16 repnz mov nop jge jecxz test jo ret adc das pushf xor or in mov push inc push decb mov mov gs sbb out dec (bad) xor jo lret rcll shrl push je adc pop push gs mov mov cs cmp fiaddl sub jmp fild adc imul cmpl cmp in mov (bad) test lods imul sbb adc dec adc jnp rcr jns cmp (bad) imul jne pop add sbb cli (bad) sub sbb add cmp pushf push fildll mov dec sbb repz cmp inc out mov push mov (bad) int3 jne sbb push jecxz mov mov incl pop or aas push jmp lods mov enter xor lods sub jbe and out out push push inc std call pushl lcall or fildl xlat test dec divl (bad) sbb jecxz test push add jbe xchg add pop fistpl mov icebp cltd outsb push enter cmp add pop and in je xlat cmpsl mov popf popf fistp sub icebp lret cwtl ret dec (bad) call push cwtl jp cmpsl test inc (bad) push (bad) scas nop lcall popa xor lahf shrb push and sbb jp sbb inc xor push fadds (bad) js int jmp mov in in (bad) out pop and mov (bad) lods aaa iret in ficoml dec jecxz or jo adc sahf fwait clc sahf cmp lods fdivl cmp xchg sub dec mov or cmc xor and fdivr push xchg fstl int mov push cmc mov xchg jecxz sub inc adc inc and add inc fstp roll and arpl (bad) out daa xor das or xor cmp ret and xchg xor adc sbb fbld enter pop xor xchg xchg (bad) pop (bad) fimul or and adc fbld dec out test pop mov loope mov xor mov xchg pop mov or jno xchg push push fnop ja cmp les dec hlt popa aaa repnz jns bound in xor dec lock outsl pop lock mov mov push dec jmp add cmp cmp and dec or rcr cltd cmp mov lods scas push xchg sahf pusha xor or mov adc cmp fidiv idivl sahf in nop jmp inc mov mov mov lods sub xor imul mov adc and pusha and sub and fs jb pushf sti arpl (bad) cmpsl ret ret push ret inc adc cli ffree xchg idivl arpl push lock fnstsw andl in push jecxz repnz ja mov insb dec xor sub mov repz inc ret mov enter pop (bad) jno lret sub (bad) lea test repz pop les lahf repnz ja pop lods pop stc jge push pushf push sub sub aas aam sbb push cmpsb mov dec inc pop jmp outsb jbe mov lcall or loopne and loopne add mov push mov icebp mov push dec mov int3 stc negb sbb in imul aad nop mov lret xchg in mov test sbb or dec mov add adc mov add jp or lds sbb push (bad) aaa sub pop sbb pusha stos loop and or fs mov sbb lahf fldcw jb ljmp mov je test insb dec xor repnz lahf push push les aaa jno xor (bad) pushw jae movb xchg xchg jae (bad) das jne mov je leave (bad) mov out mov fcomp inc ja pop ficompl jmp adc fcmovu je jl outsb in lret lods ja daa jb clc fidivrl movsb sub nop adc sub push dec imul pushl loop pop jbe pop push orl adc inc and sbb xor jo ja pop pop andl adc (bad) cmp cmp fidivrl cltd cltd jno gs out aam cwtl jp sub adc lret mov push cmp pop mov in dec clc mov pop jns xor imul adcl jmp (bad) mov dec les test sbb aas pusha bound push cld adc xor cmpsb mov in andl sbb sbb add mov mov rcrb jmp mov out mov je mov (bad) lret shrb clc fidivrl dec loope int jnp,pn sahf and pop xchg movl mov iret ret scas mov xchg mov aas (bad) push xchg mov mov sahf sbb jne pop cmp xchg orl pop lock jl icebp mov jp push aad mov andl mov jnp jne and and cmc in mov jp movsl fdivrp fistpl in ljmp dec push fisttpll andl xor push das adc or pop ret aad push cmp mov loope push repz inc sbb sub ffree and jo mov inc movsb or mov fdivr and rolb ljmp addr16 movsb fs cmp repz ds xchg inc lods xor xchg cmp jmp pop sahf nop add iret push std fwait clc cltd and (bad) sbb punpckhdq cmpsb mov jecxz in iret mov adc cwtl out sbb imul outsl je dec sub xlat arpl sti adc sub cs negb and mov subb pop sti mov adc mov stos mul outsb lcall mov ficomp (bad) decl int3 mov pop daa add fstl inc mov mov lock mov mov fiaddl push movsl subl dec push mov adc lcall push fwait dec mov or sub cmc std popf mov inc ret and repnz sub xchg or adc jge dec dec inc pop jmp (bad) popw push stc cs cltd mov jnp (bad) lret movups movl mov xor push clc add add popf aas jecxz sub jb sub mov push dec addr16 rcrb jg hlt adc cli das cmp sub mov or rclb xor icebp mov arpl popa sti (bad) (bad) xchg stc sub pop (bad) jnp clc add adc pop scas cvtps2pd and inc fnstsw and test dec pop nop test pop aad outsl mov aam sub xor int3 (bad) mov inc addr16 loopne push aaa jns mov or or mov cmp mov mov jno cli xchg scas rcrb pusha sbb mov jo xchg adc popa dec pop cs repnz lds xchg outsb jmp mov repz push dec cs fwait jg mov mov cmp pop (bad) je outsl nop xchg pop mov add mov or and lret xlat add cmpsl punpckldq sub add cmp (bad) nop mov cmp aam enter lds std jmp pop insb rorl icebp mov jns and xchg adc sbb in leave scas nop lcall mov or insl (bad) mov ja ret and push mov outsb imul ljmp mov push sub (bad) adc push lods mov push mov call and mov stc sub sub scas rcrl xchg adc lret call sbb mov decb sub cli les cld repz sbb xchg mov leave push (bad) cmp ret fcmovnu inc xor das fstl xchg int jge nop adc inc sbb adc adc inc or popf push cltd test mov pop inc lret cmp lcall shlb push jl ds int aas dec cmp (bad) into imul mov jl pop repz add insl mov xchg mov fwait cmp cmp xchg test imul test mov xchg cltd xchg aas sub fucomp sub dec aad xor lds lock test aaa jo (bad) sbb cmp into jl (bad) mov inc sti pop xchg dec lret aad imul push mov out push xor jne pop rcl loopne cmp das or inc stos aam jp,pt xchg fwait mov es (bad) (bad) out imul inc cmp movsl ljmp jne jl mov int3 or dec push sbb shr imulb jns jl js arpl (bad) mov sti cs mov push mov lock jp jbe xlat and cmp lods enter lcall jno inc inc jg mov jl rcl int pop mov dec mov dec div jmp mov scas imul sbb pop sub mov (bad) mov add jge mov adc mov into mov xor jns out inc jo push push pop lret xchg mov aaa sbb pusha bound push fnstenv cmp jo inc push test lods cli lods or jnp iret push inc repz adc test cmp sahf jle and or push pavgw aad inc mov cmp lret push mov jb mov (bad) xchg test enter daa jmp fwait popf loope add fiaddl or dec sbb fistpl mov in xchg int3 add aaa xchg iret lahf test insl dec sub pop cmp inc and xchg ret div sbb add inc call das adc std popa jp popa stos cmp out sub (bad) jb adc jo cmp fwait push dec or mov (bad) idiv xchg mov (bad) jb pop (bad) mov dec pop insl aad dec and pop clc cli push (bad) test mov sub iret ficoml mov das or pop ds int fwait sahf andl (bad) mov cmp andl iret mov cmpsl out mov add sub insl and insb inc pop jbe shr (bad) or cmp cmp adc xlat dec js rcr fisubl and sub adc pop or push das mov aam add mov lcall mov out lcall jl xchg add or ret (bad) sbb jnp push and (bad) push outsl jae push push cmp clc sti inc mov andb call jno (bad) pop mov ds cmp enter mov jecxz mov pop inc enter outsb movsl clc push xor (bad) test or sub lahf mov cli fsubrl loop aad and push add jmp cltd jnp sbb sti mov fs cmpsb cmpsb fwait dec sha1nexte add jecxz pop and xchg inc and mov inc cmp jno mov rcrl andl imul imul lock vpaddusw add mov pop lods sbb scas push jge fsts adc cmp jmp out imul mov ja dec mov push repz insb mov xchg shrb mov aad popa mov adc sahf cmp xor mov leave (bad) dec sub aaa push and (bad) cmp out cs stc fisubl lcall std sbb cltd jnp nopl and andl xchg sbb mov out popa jo dec das or adc ja push inc psllw adc das or mov inc inc outsl call mov push xor fiadd cmp es sbb notb pushf js enter lods dec adc mov or inc jb test (bad) loop jp jmp ss mov mov (bad) push insb divl inc bound dec sub xchg fistpll dec cs test rcr sub fcomp adc mov xchg ret and rcrl (bad) (bad) dec mov jno mov inc insl dec xchg inc xor push clc test xchg sbb lret inc loopne sub ftst (bad) xor arpl out pop pop push xchg sbb aaa cld popf (bad) dec push (bad) cmp and jo adc push aad cmp outsb leave es nop aas pop jl mov mov imul in jmp adc cmp mulb adc stos sub std xor xchg stos aas cmp pushf ljmp ss lcall push sahf stos lock dec sahf in jbe std jno imul mov push repz ljmp mov in jno popa and pop cmpsb cwtl jp fwait jp mov inc cmp andb dec dec pushf sti ljmp and mov lcall les dec mov mov ficoml mov pop test adc push fsubrs sbb push cmp or xor and or incb (bad) jmp jecxz or jns add xchg xor ljmp out hlt dec mov dec das or sub fld fstl sub or inc dec outsl je xchg mov lret dec dec dec hlt pop adc les das adc sub pop xchg pusha pusha add sub mov and in fwait pop (bad) jmp or ss pop cmova jne dec ss mov push ljmp jnp sub idivb push cmp pusha addr16 in (bad) cli movsb mov aas push nop (bad) cmp mov dec ljmp loop ss mov mov mov xchg std mov push push dec jno xchg add iret mov pmaxsw out push or pop (bad) and insl (bad) popf andl insb and subb cltd mov push and pop sahf mov test lods scas jo cmp and mov and imul pop stos or ja ret mov push and jno cmpsl lods sbb not sub mov add inc cwtl push sbb fucomi sbb jge daa ret mov in xchg and imul cmp mov jp outsb mov das xchg rcrb and sbb mov inc mov (bad) pop cmp dec inc imul adc fisttp sbb xchg jp pop test (bad) frstor adc mov and jbe es sbb pop xor fs shrl outsl mov inc sub dec es loope loop sahf mov mov mov add inc dec movsb adc cltd std add and xor dec jg mov lods mov inc push leave in inc addb cli mov inc aad xlat add add fadds mov (bad) sub inc xchg push mov test mov add xchg scas (bad) xchg aas call jp inc imul fnstsw sbb add rcrb and stc fstpt cld leave ret add repnz push int xor cmpsb xor cmp and xor pushf jge ss push jo vcvttpd2dqx out push rcrl pop pop bound int cmp mov stc jl pop imul dec ret fcmovnb (bad) sbb es jmp lods cmp jae and dec incl arpl xchg xor xor push mov insb popa push std push and out test (bad) mov sub add leave mov mov insb nop xor mov fbld mov jb iret cmp add data16 gs dec mov dec adc sbb wbinvd lds ljmp pop stc sti inc test pop in into mov repz popf lahf and cs dec xchg dec nop lcall loopne (bad) lods dec xor cmp je jae aas ret pop jp and sub aam sbb and movsl jns mov pop aad xchg repz and (bad) leave jl aad stos push lods (bad) ja mov inc jmp ret test aaa sar pop add jmp stc in ja and mov sub mov wbinvd dec jle cmp dec cmp jge mov in (bad) dec rcrl cmp mov mov mov repnz imul and sub (bad) repnz (bad) lock inc inc movsb shrl push lods (bad) in adc push aad clc (bad) mov adc ficomp fldenv pop call ffree loope mov test (bad) xchg dec dec fnop js dec lcall adc ds addr16 (bad) pushf (bad) sub lret and lret rcrb xor clc loop or je mov push nop gs xor add mov sub jge cmp enter jmp lret and (bad) jle,pn (bad) jb dec lods pop jmp sub xlat lods sbb das bound cld imul cli add jo imul jmp loopne repnz push mov cmpsb insl ret and mov push sbb jnp ds xchg and sub add lds out scas lret jns mov jno pop fwait mov fildll xchg mov jle rcll or orb sub mov decl movsb out or xor daa (bad) push fldt xor popa adc inc daa inc pop pop lret int3 sub jl std xor adc mov popa mov add std cmc mov decl jb lock mov ljmp cmpl dec (bad) xchg dec xchg xor cmpl push ss je xchg add add subl jo out xchg push ljmp adc pop mov stc insl cmp ret push mov sub xorb xchg push and btc cmp mov push cmp aad cmp and enter iret cmp shrl cmp add lahf jmp xor sub xor jle mov daa or xlat iret mov push sti ja das mov cmp in dec inc sub xchg xchg or lcall pop xchg mov in add ds rorl sahf ret mov in push out imul cmp mov mov pop iret add popf movsl xchg xchg aaa stos jno dec cmpl pop xchg cmp xor sbb lahf shlb in (bad) stos jp fwait sub sbbl lods mov cwtl jns aad loope cmp adc out sub sarl pop add out imul clc mov hlt aad scas andl add insb imul in sbb rorl ja hlt inc and inc js,pt add xor mov stos push pop rcr cmpsb aad cltd inc jmp ja int3 sub dec cltd mov pop mov inc lock mov mov dec adc nop lcall mov icebp call xor lahf orb mov pushf mov cmpsb leave in mov mov xor jo xor jle ret movsl dec leave (bad) jp loop hlt sbb jecxz push insl xor push jo cmp xchg mov xchg dec scas and sub repnz mov lret int adc popf cld fisttp ret scas mov pusha adc pop inc rorl (bad) and push inc xchg loope mov negb or cs out adc loop inc enter loop mov or xchg mov dec inc les jo aaa fmuls imul popa xchg add jp,pn and imul xchg sbb pop pushf movsb movsb lods fnstsw repnz and cmp and rcrb imull cmc or pop xchg int xor repnz aaa pop leave xchg stc lret movsl clc adc mov fidivrl and push das jo repnz fstps cli fdivl jo xor iret lods xchg das arpl lea mov pop adc xchg out test pop mov xchg jb iret dec popf sbb js xabort rolb mov iret mov adc dec (bad) hlt mov cmp dec icebp imul or sbb cwtl in cmpsl xor dec aaa test mov xchg popa mov mov push push outsl cltd xchg lods repz fwait out jmp or sbb clc push adc lahf lret dec dec shrl sti inc or push pop sub inc jae scas sub dec lret jne fild pop mov ret test dec push jae bound out ljmp dec jno adc mov addr16 pushf pop xor push test or jle add mov dec jne mov arpl movsb sub cli push aaa sbb or dec addr16 hlt lock nop mov pop leave pop push push lock jl jp into jb imul or lods scas inc mov push aaa xchg ja fisttpl movsb xchg addr16 and mov dec repz in push aaa cmp addr16 lods (bad) mov and and aas mov ljmp sbb fstpt pop mov ret insl sahf dec cmc pop sbb insl dec xor pop repz sub pop sbb sbb das mov pop test ret dec push mov (bad) dec notl aad pop ja ret movsl adc imul aas and roll rol cmp jae cmp mov je ret fs jle mov jns and adc bound add lahf and scas and and lea jle fnstsw pop sbb ret nop xchg xchg xor sbb mov cmp or push xchg lret fwait (bad) fiadd dec jbe ds add mov adc xchg mov lods push pop add push jbe cmp loop mov or pop (bad) and jecxz jns pop subl inc in sbb (bad) mov mov jle in loopne in push nop stos or cmp cmpl add xor das inc into mov cli pop or xchg fisub daa adc int3 negl cmpb repz adc aam sbb and dec outsl xor or cmp repz sbb imul fdivrl sub jp dec add icebp aas pop sbb push imul cwtl pop cmp jns cmp imul lret int pop and and fcoml mov dec adc adc insl adc adc iret sub test mov push addr16 xchg xor (bad) ficompl sbb mov xor (bad) fild rcrl jb xchg sub fcoml jp int3 imul movsb inc cld ljmp mov std aam test or into outsl jne cmp add mov mov adc mov adc test jo or inc mulb repz (bad) jno lock cltd adc (bad) cmp aaa add (bad) pop test sbb cmpsb ja in movsb pop cld pop or imul add cli add pop adc gs lods push xchg push or dec pop cmp int3 lcall add xor pop pop loop xchg (bad) repnz mov xor je ret mov pop lods mov mov aad mov (bad) ss lcall dec adc or push fstps push or lds xlat js pop ss les flds aad mov stc sti cmc cmp sub outsl dec inc aam das fnsave iret loope mov mov fs xor jns cmp inc xchg test popa push xlat jo sbb or scas (bad) jno (bad) cwtl xor cmpsb (bad) mov push dec stos adc movsb loope loop push sbb aas mov cmc dec pop insb out ds xchg fst cmp enter lock mov mov mov loopne dec mov mov rorb sahf ss aaa mov in movsl mov insb shrb jle xlat and cmp fildll call xchg (bad) cltd mov mov sub in push sti adc push add adc mov and in pop fnstcw stc imul mov sub scas sbb (bad) mov pop mov or pop ds xchg mov jmp jp pop stc pushf xchg test push sbb sahf sub mov lods les scas and into into sbb jp lret popa cli mov lea sub push mov dec aad xchg mov pop xchg pop test imul lret xor inc ret or dec mov (bad) jg aam lock dec cmpsb push call sub push add push test jmp push pop int cltd cli xchg pop xchg cltd cmp aaa mov imul or push ret inc xor jmp call loopne mov je pop cmpsb pop push fs rolb fildll das xor movsb and add imul push inc dec cmp rcr xchg lret movsl push push lret and xor in mov clc cmp into das dec pusha jle stc xchg fucomp bound add sub xor mov sti fnstsw mov xchg sub sahf cmp fmull and mov scas lret dec imul sbb insl lret popf dec mov out dec add inc and dec repnz imul sub xlat loop sahf in push js not hlt loopne out lock aaa pusha add repnz test mov pop xchg mov clc das test push (bad) adc push fistpll pop inc daa or lds inc cs inc cwtl fistpl lret push ret dec fisubr lret mov xor jmp dec mov fldt (bad) dec sbb (bad) rorb mov xor mov jbe loopne xor inc push cmp ja out mov gs mov add arpl cmp xchg adc outsb and mull sub aaa ficom movsb scas inc pop pop iret xor cmp push or xor pop add bound jo pop sub cmp adc (bad) fs dec mov mov test call sbb outsl pop jle out pop pop (bad) jle fwait or icebp add sbb xchg mov adc iret dec sub xchg dec out pop jns mov outsl stos inc leave rorl mov lcall (bad) call cmc mov ja movsb fist dec lahf in iret sub aas pop pop add dec aaa jle fadds mov xchg popf int3 enter pop ja and cmp (bad) aam pop mov mov ret jecxz push mov lret rcl std imul dec out sub mov xchg xor fldcw bound add ja dec dec push inc fnstsw and dec mov push movsb lock lds add lock push pop inc inc mov xchg lahf sub dec pop mov xor pop cmp (bad) aam cmpb repnz mov xor repnz fcompl adc mov adc (bad) mov addr16 call call jns (bad) clc (bad) mov mov fstl adc pop leave sarl cmp jo mov scas adc jle add cmp dec xchg leave (bad) stc and mov mov or and insb adc cmp lods (bad) mov arpl sub orb pop int popf jmp or mov repnz stc clc pushl xchg insl jg cmpsb int3 hlt dec fcom inc push pop xlat popf daa repz add das sub mov mov inc ljmp mov jecxz fucomip push cli in pop jne arpl jns add pop add xchg test lahf (bad) pextrw adcl daa or mov adc aad fwait push (bad) aaa add les fcoms ja mov ja push negl xchg test popf lret pop push cmp jns cmpsb fnstenv stos lods push cltd xchg xor in rorb test fstcw jns outsb lret hlt incb inc inc push scas xchg divb mov les xor pop sbb shll push add ljmp fcomps movsb mov inc mov mov cmp aad iret andl or pop jnp jp out and push pop sbb cmp jo mov or fs xlat sub imul jnp jmp nop movl outsl or in add jmp (bad) jno jbe andnps fadds jl movsb and push pop cmpsb push insl mov gs fnstenv loop cli sbb sarl pop movsl clc sub pop cmpsb mov push sbb pop testl js mov mov (bad) stos cmp mov push sahf ljmp int dec cmp adc inc cwtl (bad) repnz je outsb adc push lahf mov stos aad nop aam jmp notb mov inc movsl or scas mov test lods hlt xor jns pusha jo add sarl loope dec cwtl negl xor into mov orl dec pop leave mov push mov add (bad) outsb jns bound dec loop push rorb loopne mov jns or jmp ret xor and pop xchg adc ja cwtl bound int3 jb xchg pop stc dec adc ficompl jmp test aad insl pop adc or fs jecxz into aam je push xchg stc push add jnp and insl sub or push cwtl cmp shll stos in push sub addb mov arpl rorl xchg movsl push fwait jp mov cmpsl movsl sbb pop xchg popa arpl cli dec cmp cmp jg mov out sbb in mov mov mov dec sbb icebp orl push add stc xchg mov xor clc stos pop xor pop xor xor or push inc pop incl popa loop clc add in fdiv psllw lock pop sbb insl jmp sbb xlat popf xchg and sub xor div lcall stos cmc lret fdiv sub aam test mov outsl xchg out shrb jg mov in nop jmp ret jge fldenv inc enter or out scas xchg mov sub cld sarb test fwait (bad) mov mov sti push push dec je inc mov push dec jno out pop mov shlb andl (bad) (bad) xchg sub es (bad) cmp stos in add int3 in es sti (bad) popf lods dec dec inc in jo je pop pop fstl xor cmc mov ja xchg sahf fcoml fdivl ja xchg mov in into fwait jge sub xchg jl pop sub in push and addr16 lock outsl cmp cld mov out lret (bad) nop dec xor fsubr push mov mov pop (bad) jb xlat lock mov js outsl dec dec pop pop jae test mov lret push in sub aas loope fidivrl pop pop cld and mov mov (bad) shl cmpb (bad) or cmp mov out (bad) add adc and sti cmc xor sbb add add push leave rcrb das xchg bound clc mov adc (bad) repnz out repz cltd popa cmp pop xchg movsl jne repz pop sub (bad) scas sbb mov inc andb lods mov std jno ret and (bad) call movsl mov adc and dec sarb xor push fnstcw sub mov add fs dec push test sub mov popf inc xor jg,pn insb push and ret inc imul (bad) xor scas pop pop xor in mov outsb cwtl adc (bad) es and test push dec outsl lahf clc mov (bad) scas shrb sbb and out and mov scas xchg mov xchg pop rolb and in mov mov imul aad mov roll push (bad) call jge xchg jecxz vmovaps push aad fwait jo pushf xchg repz (bad) mov not or add and insb add jno icebp sbbl xchg adc adc jle pusha in loop jg mov adc xchg jmp xchg xchg add fistl test inc popl mov mov mov dec dec push iret js cwtl pushf arpl insl jo aad inc and mov sub sub cmp or ljmp mov pop push or icebp adc xchg cwtl addl push jnp inc dec aas int add jmp mov add sbb mov ljmp aas inc cmp push dec or aaa (bad) xlat and test or je cmp push test test adc lret fnstsw repz xchg ljmp cmc xchg stos and pop int3 into das les sub (bad) cmc push repz fdivp ljmp iret add mov lds adc rcl bnd jg push sahf pop cmc inc inc (bad) icebp cmpsl jmp mov or js push xorl scas push mov movsb cmpsb jl leave dec clc in cs lcall dec test lea xor add jl xchg push sti dec test cmpl jle sub dec and and fcmovu mov subl pop jo mov add imulb addl mov ljmp std repz int3 or int adc mov lret sarl (bad) js inc outsl add push pop adc aam fcmovnb cmpsl loop sahf push mov stos sub (bad) mov imul idivb into cwtl stos cmp dec add gs loope das dec dec push mov add out xchg dec push (bad) out xchg je jns test xor xor idivl push sbb mov insl out insb rcrl xor aaa inc mov or in inc jo test into or sub hlt cwtl push es ss out test xchg inc out pop nop clc fidivrl rcr xchg rcll movsl adc pop (bad) ss cld movups stc fbstp push out jg xchg xchg ljmp pusha mov jns push fldenv mov xchg lds and cltd adc pop outsb mov mov lods push stos mov xlat pop das cmp or jo jno adc fistpl addb dec (bad) add xchg and and and bswap std out mov bound adc fs xchg mov xchg jle test mov adc (bad) cmp inc inc mov lret or pop ficompl rolb aas inc dec leave xor repnz rcrb inc bound pusha inc fisttp scas je mov mov test clc fidivrl jb sti pop (bad) cltd or inc scas fcmovu ljmp jmp pop jo or hlt das xchg cmp lcall dec dec jbe into mov les or mov fstpl dec dec jmp push pop (bad) clc add cmpsl sub mov or push cs mov popa inc and popw xchg mov jnp stos addb xor inc (bad) addr16 inc pinsrw push xor pop mov mov fiaddl loop daa dec daa jbe jp,pn daa sahf lret pop into lods test aad js sbb (bad) or int inc dec inc pshufw rolb push sub jo push cwtl lods (bad) jno push and mov mov jecxz fwait push lods pushf daa imul mov mov xchg inc push fnstsw scas and (bad) jle and fimul sub arpl cld addb or cmp xchg gs inc xchg lret mull jbe (bad) jno inc or loop pop (bad) sbb pop xor pop xor fwait mov jp adc or mov jp cmp jecxz sub or jns lahf fsubrl sub pop daa jns lahf dec test loop js adc xchg mov cmp add aas fbld inc jl cmc add push pop mov ljmp xor push cli sbb inc push call pushf pop pop cwtl loopne (bad) gs call mov (bad) xchg jg mov push subb fiaddl xlat rcrb call sub jmp add cli lahf outsl sbb faddl xchg stc es push jo negb rclb ja and jno outsb xchg in mov pop or xor jl sbbl es mov dec lods jg clc sub pop cmpsb cmp pusha imul arpl mov mov lods leave dec into cwtl cmp mov push test mov lret dec sbb mov inc aas mov xchg stc sar in cmc mov movsl add mov xor xchg jns fisubl (bad) andl add pop push in cmp jae pop cmp and (bad) insl jb (bad) jno push popf mov mov adc jecxz and data16 out aad pop insl aas adcl and sarl rcl movsl pop add push or test or aam (bad) cwtl adc jbe or push leave (bad) cmp add (bad) in mov pop mov push cwtl lret add inc cmpsl xchg cmpsl sub mov data16 lds mov mov test inc cmpsb xor push xlat xchg je mov cli inc cmp add shrl mov mov rcr xor xchg cmp pop fadd cltd test jo (bad) or mov cmpsb repnz lock jo xchg mov jecxz xor xchg xor xchg mov lods outsb jo adc xlat or divb test sub aaa inc xchg and or pop xchg icebp cltd es pop sbb ljmp sbb inc icebp int and jmp pop mov jle mov popa xchg loop icebp xchg jnp ds sbb pop mov dec mov popf push jle push mov push adc push jb cwtl inc mov shlb dec xchg loope add cmpsl pop loope lea jae (bad) aam lea pop push ret adc iret bound sbb mov push jne out fcmovbe push clc lret jnp popf inc add loopne lock aad daa xor mov and mov dec adc jne push mov inc sbb sti fnstsw lret xor in lret es sub jmp adc (bad) stos (bad) push mov sahf movsb push loope aad jno aam add in or or cmpsb pop leave cli lea loopne or outsl in jo xlat leave scas aaa jp jl out fmull ja dec stc pop (bad) clc sbb mov mov sbb int cli fwait mov dec lods clts out arpl ret js add test roll xchg je mov mov jmp daa jecxz xchg ss add lds dec lea mov ror es add mov lahf inc cmpsl or mov xor pop cmpsl mov bound pop test cmc pop inc ds add and or dec mov push cmp orl int3 scas adc sbb lds cmc dec out dec mov daa push stc adcb dec bnd sbb ss push jo sub push aad dec inc outsw cwtl inc or pop xor lods iret push pop in or jmp icebp adc mov ficompl push mulb movsb xchg insb clc fisubrl pop cmp cld movl int add add inc scas xchg push fcos loope lods in mov stc mov mov mov adc pop das mov repnz pop imul daa loop mov xor popa dec sahf ja aad pop out imul gs sbb subl pop sub mov push aaa mov add mov into inc xor sbb shld xchg insl icebp sti dec push inc sti fdivrl jns in mov fsts xor mov (bad) jno dec out jb mov push inc fldenv dec add fwait adc repz loope pop cmpsb out fadds pop xor imulb imul jmp xchg pop xor xchg out push aaa clc pop cmp jmp add stos xchg out pop cmp jns xchg pop dec das dec jle jnp jno cmp mov push mov decl incb std repnz cmpsl outsb jge inc scas lahf rol gs icebp enter cmpsl xlat mov mov cmpsl fiaddl inc mov sarb test mov repz xchg xchg jg ljmp les pop pop xchg sbb pop adc in insl dec xchg mov cwtl jp mov loop movl pmulhuw pop loop sti pop inc int3 in dec xor dec cwtl jp inc jmp adc dec jae xor mov pusha pushf rcl out sbb push aas stos ret aas popf cmp xor sub jns lds lods dec xor cmp ss rcrb dec shl jmp icebp jo cmp (bad) (bad) incb into dec inc in push rclb jge lds lcall mov roll and and inc jecxz (bad) rcl cmpsl sbb fimul loopne lahf mov jne mov and ret lds mov jb subb addl ds adc aas insl add push lea dec xchg pop mov mov mov test rclb leave push ret cwtl and inc (bad) mov jb jnp aas and mov dec adc incl fucomi jle rcll xchg (bad) (bad) sbb ss cmp jecxz or insl pop cli pop cmp fldl2t push mov dec int sarl mov scas dec lret jns pop mov lcall adc xchg cld movsb jle sahf test sub into je (bad) jle xor xor jbe aas or jo dec jns scas inc repnz sahf dec popa arpl loop mov ljmp int cmp (bad) int jb lods movsl xor xchg dec nop fisubr arpl cmp hlt stos mov stc add add or and jns out mov or sub cwtl lcall jno lahf and add adc mov mov test cmp xor subl xchg jae xchg xchg push xor loope mov sub xlat sahf pop jl jp sarl xchg dec dec sbb xchg pop cmp rorl fcomp or mov pop or jae cltd mov push sbb mov test inc lods jb mov je xor inc addl xrelease mov jnp mov add (bad) push idivl (bad) jns mov jecxz cmpsl dec mov je cltd lret aas mov jge icebp repz mov lahf ret (bad) inc inc sbb dec jbe lds cli cmpsl sub dec or repnz (bad) incb popf pop sahf dec inc jmp adc sub mov (bad) imul pop loope lcall add daa sub loope add push idivl xor push scas mov dec xor jecxz stos inc rorb outsl jno inc cmp add jno test repnz xchg loope nop es mov dec call pop lea adc jbe jmp xlat shll or ja xchg sahf dec lret outsb mov roll sahf adc cwtl int push daa dec stc ret cmpsl out mov mov dec or fwait cmpsl mov mov (bad) push and scas pop shll loopne cltd and pop (bad) xchg cmp mov cli roll inc es clc sub das jns imul pop shrl popl rorl adc lcall pop fwait mov inc rcr xor sub add adc insb push (bad) jo stc fstpt adc out add inc (bad) ss outsl aam test clc xchg and clc jmp jbe jns ljmp push mov cld cmp push jbe dec ja inc and cmpsl ret inc or push mov outsl (bad) push pop stc fisubl std and aaa cltd jnp adc fwait lea push es xor rcrb cmpsl dec movsb outsb (bad) push xchg push sbb jg aaa (bad) jo mov mov sbb pop or loop dec add cmp push add mov lds imul sub fnsetpm(287 lds jecxz pop jno hlt dec fcoms aad xor out mov rcll lods cli xchg lret nop sbb out mov ljmp and test jl sub fs cmp push imul pop dec mov xchg xor repnz arpl aaa and negl bound dec push fdivs aad les adc push repnz adc push mov xor push jo pop (bad) test add add jb pand jb adc xlat sub add fdivrs orb in imul adc test icebp cmpxchg push pop arpl dec jecxz in cmc mov pusha lret fxch popa gs das outsl cli or not pop dec sub xchg xchg orl enter in jbe (bad) shrl push or sub jno and adc pushf (bad) int3 (bad) push mov out adc push aaa sbb fwait jmp jo inc push movsl mov enter imul push scas and jnp aas mov (bad) pop pop add addr16 jnp or ret pop jle mov (bad) insb mov pop pop sub push push pusha (bad) mov aaa mov loop or sub xchg inc loopne aam add push pop push and ret xchg (bad) repnz sar jp cmp test mov xchg xor pop scas push fimull inc push mov mov jnp rclb add dec das ret out dec pop mov add mov add loopne cmpsl and aad ljmp sti inc mov sub push int3 cmp in push sub lret aam adc push adc or (bad) cmpsl mov fimul lcall pop mov dec dec (bad) out sub cmp call out scas dec mov test dec out push out pop pop in push mov dec jbe lods xacquire adc rcrb mov xchg aas and push lcall dec call aaa stc jecxz mov ret movsl loop inc sbb jae jne inc xor pusha dec leave xchg int cltd rcl sti lock aam mov lea sub pop fidivr (bad) mov int3 mov lea push (bad) mov orl jg push out lods pop add cmc insl and ss (bad) fidivr xor shrl ret sarb sti je sub ja mov adc stos mov mov (bad) jmp jno ljmp add sti ffree inc push jns sbb sahf lods jb cmp pop add (bad) fcmovnb hlt add push mov fcmovnu mov cmp out fidivl push jl (bad) xchg mov mov cmp rcl jmp inc jns add pop fnop jl inc xor not ret sti popf mov movsl inc lods and jbe dec jbe sub movsl clc sub (bad) imul pop fcmovu adc push es dec inc push stos pop cmp xchg popf bound scas xchg sub lcall jp mov bound lahf je xchg mov xchg ret ret mov sti add ret push mov pop and rcrl fxch out mov shlb cltd sahf cmp out pop out jg enter add fcoml cltd sub sbb mov pop push and pop mov lahf fdivl ja dec dec out test cmpsb das cmp mov push adc cmpxchg and mov jecxz popa fldl add adc std fcoms loop,pn mov popa out stc insb (bad) mov imul leave cmpsb mov cli in test mov jns (bad) mov ljmp (bad) mov xor jle or push mov aaa mov daa stc (bad) and lret int xor pop xor in outsb dec push sub xchg (bad) adc icebp lahf out lods fsubs adc test dec lods scas loop inc xchg sbbl dec addl add cltd cmp data16 inc sub or and out push lock push out or or jp adc icebp inc (bad) mov push mov sahf and inc (bad) sub xchg xor mov xchg sti loope mov inc nop inc cmpsb inc push in into mov lods xor xchg cs ficompl incb cli stc testb iret add dec pop add xchg rcrb aaa inc (bad) sbbl jg mov iret sbb mov arpl fcoms lret lahf or adc inc mov shrl or lret ret adc xor jnp popa movsb pop add pop cmp push mov jns ds (bad) out rorl pop lods hlt cld or lods outsb movups mov loope dec imul out (bad) enter call sub dec cmp jp (bad) mov lods adc pushf mov cmpsb mov push (bad) cli cmc mov popa mov jge add stc pop cmp inc ret scas nop ljmp push arpl mov jle pop dec xor pushf mov jo (bad) (bad) pusha jnp scas ss lret jp (bad) cmpsb pop add adc sub push dec loope inc addr16 fs or lret push or out pop ret xchg mov sbb ja cli xchg inc bound xor push bound jno fisubl lret dec (bad) or int lods cli in inc mov lock arpl outsl std inc jbe lock clc pop cwtl inc adc jmp sbb ds pop mov bound mov (bad) int3 pusha xchg sbb mov fimull fimull adc rorl or push sti fcomps xchg mov xchg xchg pop adc mov jmp sub in dec inc je aaa mov lock dec mov nop lcall mov jg in mov xchg jae adc mov jg ret xor mov cmpsb inc pop stos or fsubr test xor jbe and leave jns jo,pt cmp loopne cmp mov sbb push and jmp dec lods pop ljmp sbb adc dec sub leave pop xor int imul xlat inc mov int3 dec dec cmpsl xlat cmp adc lock sti push movsl cmp in addr16 mov out add arpl xor push mov jo dec pop mov ja loope mov aam lods stc or cmpsl pop notb int les loopne cli aas pusha adc jnp fwait insl dec ror test stos fild lods jle inc ret pusha loop inc sub aas mov (bad) in idiv push int3 into das cmp incl bound scas stc in xchg .byte dec xor test inc stc sub inc aam sub xor inc or mov das add aad aad cld inc and dec dec test dec inc dec inc dec cld aad cmp xor adc cmc add mov dec add aam dec aad clc clc cld dec dec or aam dec sub mov add clc sub sub dec xor mov cmp aam aad aad inc mov sub not aam cmp das or add aad or dec mov mov and stc cmc aam xor aam test and cld mov aam cmp mov xor aad clc sub cmc cmp xor cmc aad aam aam and mov and aam aam test xor sub or das or aad daa cmp add or dec add cmp stc adc das cmp or xor lods add ror clc add add sub jmp ret nop jmp jmp call not not jmp call sub jmp ret stos loop lret jmp inc scas stos hlt aas push mov xor (bad) lds or stc push scas sbb add nop jae (bad) fiadd add jmp inc xor mov insl int cmp ret xchg cmp add sub lcall stos xor sbb adc repz jl fnstcw mov lds mov mov jg (bad) push dec test add ret neg das inc arpl mov adc cld inc mov (bad) test adc or mov sahf pop mov imul inc popf mov in imul movsl push cmc xor in sbb adc pusha (bad) xor lds int3 call mov stos mov adc popa insb int3 lcall pop mov sti sub shl inc icebp mov sbb cmp sbb fimul mov and mov dec lods or push dec mov sub jmp and rol cmp aad xchg hlt push call sahf xchg icebp inc sarb adc push lods flds dec mov jecxz rclb lret sarl sbb mov xor and xchg icebp dec mov push push into cs mov mov xchg xor mov test adc cmp mov mov push sub hlt xchg adc hlt xor push inc test jnp jmp aas addb pop dec push sub sub adc adcl dec and in jg mov stos mov push xchg xchg jno loop mov test clc mov ss dec sub je or pusha pop sub or jo js in scas es mov jbe xchg xlat jecxz dec pop push popa lods pop pop mov es test jne int3 adc mov fsubl adc mov and inc pop inc outsl (bad) xor outsb add mov or lcall fiadd or fildll mov push in sbb xor mull mov jecxz test push dec mov add mov jns sarl sbb sub (bad) rcr pop adc stc and lret lcall adc out rol lea mov pop sbb and (bad) pusha push mov loop mov iret lods push outsl inc or xor movsl mov das (bad) lods sahf sbb arpl mov cmp mov xchg ror xor das fidivrl or lods or icebp dec mov jp cmp mov fiadd je ljmp sub xchg mov cli cmp mov aaa data16 punpcklbw cs pop xor adc lea popf cs mov mov dec (bad) ja and push bound and pop dec shll push js fsubs (bad) icebp push and pusha dec (bad) hlt pop mov inc inc xor mov imul jg movsb xchg lahf jmp xor inc sub fisttpll inc jae xchg mov cmp arpl mov aam sbb mov sub stc xchg push leave outsl xor sub dec mov loopne mov sub push sub aas mov xor xchg adc jp dec xchg decl mov test aad inc lods arpl mov clc in lcall (bad) popf mov mov mov adc loop cmp jmp and imul nop icebp push lods adc jo mov jns cmp outsb xor and cld int push mov fdivrs mov fstpt adc imul jg push movsb (bad) jbe cmp jns cmp jmp and int3 cs icebp push mov jbe sbb cmp cmp jmp and int3 push outsl (bad) xor jp cmp and (bad) pusha roll lds mov dec lods push outsl (bad) xor jp cmp and out test mov dec lods or hlt push mov jp cmp and insb int mov dec lods or hlt push mov jp cmp jmp and insb int nop icebp dec lods or hlt push mov jp cmp jmp and imul nop icebp push mov outsb (bad) xor jns cmp jmp and int (bad) icebp push mov jbe cmp jns cmp jmp and int (bad) icebp push mov jbe cmp jns cmp jmp and int3 cs icebp push mov jbe sbb cmp cmp jmp and int3 push outsl (bad) xor jp cmp jb xchg aad popa inc pop mov push outsl leave out scas inc dec movl cmc push rcrb mov loopne imul inc sbb cmp aad pop divb mov cli mov ret xor push out lret xor out test pop cmp inc pop out push mov jp mov xor fdivl imul ret and test xchg hlt push mov push outsl mov adc push jne adc int call addr16 out imul cmp xor cmp ds pop ret test adc imul (bad) xor push mov mov imul and inc mov jbe or or outsl out scas xor push std mov imul outsl dec orb insb stos (bad) xchg popa ret jnp add add add add or add or add or add add add jb gs xor cs insb add add fs imul add add je jb arpl fs jae add add jb jne insb push jb je arpl add jb jne insb inc insb insb outsl arpl add push imul jb add 