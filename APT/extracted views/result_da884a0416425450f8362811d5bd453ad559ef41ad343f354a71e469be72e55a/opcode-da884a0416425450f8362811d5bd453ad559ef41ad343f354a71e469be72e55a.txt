xchg mov jb push mov jb push jb inc mov jb mov mov jb cmp add int jb add jb loopne jb xchg mov jb outsb movsb jb bound jb (bad) mov jb mov mov jb fwait mov jb xchg mov jb inc mov jb add jb xchg mov jb mov mov jb insb mov jb ret outsb add jb xor movsb jb imul xchg mov jb ret bnd jb out mov jb frstor jb add add pushf sub add add add inc add inc add inc add add add add push fildl add add add add add jecxz inc add add add add add add inc faddl add add add add add loopne inc add add add add add add inc fldl add add add add add movsl fldl add add add add add sub inc add add add add add add mov inc add add add add add add sti fiadd add add add add add int3 fild add add add add add inc loopne add add add add add add mov add add add add add push loope add add add add add add loopew add add add add add add fabs inc add add add add add add ja inc add add add add add add jecxz inc add add add add add add dec jecxz add add add add add add cmpsl jecxz add add add add add add add inc add add add add add add jnp inc add add add add add add sub inc add add add add mov and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add cmp add add add das pop pop add dec mov jge loope add add add add add outsb and jb jo jb add add add int3 xor add jnp inc cltd dec fisub loope imull ret gs dec mov ret mov dec or cmp xor or stos add xchg rcll add int3 adc add or push jne popa insb insb jne xor or popa jb popa outsb je gs sbb add and and add insb je add add add add add sbb add add or enter add add sbb add add add push add sub add sbb add xor add add or popa xchg mov or add cmp sub jb xchg lock mov pop push mov or mov sub mov lds mov sbb xlat mov fs mov in out mov sub mov inc dec mov or jnp cs fld mov xor mov cmp push mov push insb mov out mov or sbb mov sbb std (bad) or mov xor mov and mov push push mov sub mov aam mov jo icebp dec dec dec mov pusha dec mov jns mov adc mov ret ret mov (bad) mov and insl sbb sbb int3 mov enter adc mov sbb mov imul (bad) div mov sbb mov int mov add mov jbe mov cmp mov outsl push mov pop pop mov js mov sub mov or cmp pop pop mov sbb mov and mov outsb outsb mov xor mov xor dec inc dec mov cmp push mov imul dec imul add es pop fs or jae adc push add movzwl sbb jb sub sub pusha mov mov mov aad mov ret ret mov iret ret mov xor mov int3 int3 mov xor mov cmp mov adc mov and mov adc pop imul xor in jae sbb inc jbe mov push push dec gs mov push or dec outsl inc mov adc mov je mov popa popa mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in xchg xchg jmp jmp in in in in in in in in in cmpsb cmpsb cmpsb cmpsb cmpsb in in in mov mov ljmp jmp jmp jmp mov in in mov mov mov xchg xchg jmp jmp mov test in in mov mov in lods xchg mov icebp cli sti xchg cmpsb cmpsb in in in mov (bad) fcmovbe mov fwait mov mov (bad) clc jmp in in in in mov mov lcall xchg cld cld ljmp in in in in mov cmpsl mov cmpsl xchg xchg cmc xchg in in in in in in fwait fwait mov mov mov in in in in in in fwait fwait (bad) cmpsl mov mov mov in in in in fwait pushf mov cwtl pushf pushf cwtl mov xchg mov in in in in in mov loope and movsl jecxz mov in in ljmp xchg lea scas cltd (bad) jmp in in popa in ljmp in xlat xlat lock xchg movsl fstps in in ljmp nop aad rcl cmc mov xchg in in ljmp mov ret out (bad) xchg mov lods xchg jmp in pushf cwtl xchg nop xchg stos test mov mov (bad) lahf rcll xlat xchg repz mov std out mov jmp in in xlat xlat ljmp nop nop nop scas xchg (bad) fwait mov in in in xlat xlat xlat fwait fwait xlat mov xchg xchg xchg xchg xchg in in in in in in in in in pushf pushf ljmp mov mov in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in in dec dec dec mov dec dec mov dec xor aaa mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov dec dec mov dec dec mov add add add add add add add add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov rcl mov cmp (bad) insl cmp (bad) xor rcl mov rcl mov aad mov mov mov mov mov mov mov (bad) mov in out mov jmp mov xor out dec aas ljmp ds mov mov mov mov mov mov mov and rcl add (bad) dec sub rorb fmull aam push cmp aad daa rcl fisubl rcl repnz (bad) idivb (bad) xlat hlt cmp call cmp (bad) aam cs dec das fcmovnb dec cmp jmp jmp mov mov mov mov mov mov mov rcl clc and fmull cmp cmovs cmp aam and fimul rcl dec and rcl dec cmp xlat dec cmp call dec and fisttpl rcr dec or sub sbb pop xor dec aas ljmp mov mov mov mov mov mov es out sub (bad) dec push or dec jp dec or aaa dec pop or sub (bad) dec enter es dec adc xor dec jge push dec inc jnp dec sbb lret xor dec dec imul rcl dec xor jmp ds mov mov mov mov mov cmp xlat xchg das fcmovu push insb add dec dec push sub ds dec sub (bad) xchg dec inc pop pop dec dec dec dec dec dec pop pop dec dec pop pop dec sbb lret dec or inc dec dec arpl ja cmp xlat dec xor in les mov mov mov mov mov mov in loop and shrl add cmp dec pop pop dec jae adc dec dec imul (bad) div dec sbb lret imul dec push dec dec imul jae sbb inc dec dec pop xor in in push cmp mov mov mov mov mov mov mov mov rcl mov aad loop rol inc js dec push ljmp dec push push dec sbb dec pop jnp dec dec pop pop dec dec push push dec dec pop pop dec jb adc ljmp pop js dec and fmull in in adc (bad) aad mov mov mov mov mov mov mov mov mov mov xlat xlat xchg fcomp dec imul dec adc rorl out dec je sbb inc pop pop dec dec pop pop dec pop push outsb dec or loope dec adc iret dec dec outsl inc dec popa add aad ds mov mov mov mov mov mov mov mov mov mov daa xlat xlat fwait sub movl data16 jl sub pop enter out out dec sub ret dec adc xor aaa aaa dec sub in dec adc lret dec jo adc inc addr16 dec data16 dec cmp (bad) dec cmp rcl mov mov mov mov mov mov mov mov mov mov mov aam adcb rorl dec push ja dec jnp cs outsb sbb dec jle cs sbb lret mov adc ret dec sbb lret dec add cmp sub dec jg adc jbe dec outsl push je and rorb call (bad) mov mov mov mov mov mov mov mov mov out out mov fstp fistp ss pop jp dec insl sbb dec pusha adc dec insl sbb dec push push push dec imul dec pusha sbb adc pop sub sub dec jno push dec js add push add pusha dec sub (bad) dec cmp jmp mov mov mov mov mov mov mov es in mov fcmovu add sub jp dec outsb adc dec je and mov dec or cmp cmp dec (bad) aas dec add xor dec das rcl dec or cs insl sbb push dec add daa dec cmp xlat inc cmp (bad) xchg mov mov mov mov mov mov mov mov and fisttp pop jg dec pop or dec pusha adc dec das (bad) dec adc dec jae adc sbb ss pop lret lret dec adc int3 dec sbb ss jne adc sbb xor and rorl sub dec pop or jno es dec cmp call mov mov mov mov mov hlt hlt mov fcomp push jns sbb dec pop add dec or rcl dec inc insb insb dec dec dec dec dec pop push push dec pop imul pop imul pop pop dec inc inc inc dec push iret ret dec add push jbe pop or add ljmp mov mov mov mov mov dec inc push push dec dec inc inc dec push and dec and rorl cmp dec inc outsl push dec pop fs dec inc push push dec pop je dec push jne dec jnp or xlat (bad) dec jl sbb gs dec pop push insb dec and in in stc mov mov mov mov adc ret jne int3 int3 dec push jg dec dec dec dec dec jbe adc rcl dec inc jns dec add jns xchg lock dec gs dec std (bad) or dec sub jb xchg lock dec push xor dec ja adc dec pusha dec dec adc dec and call mov mov mov adc rcrb xor dec or and sub (bad) dec push add dec dec inc inc dec inc imul inc push pop dec jno imul jbe dec inc push push dec push pop fs inc inc dec dec inc pop push dec push lret enter ss das fcmovu dec cmp aam cmp aad mov mov mov mov mov mov adc int adc ret fcmovu jo fcmovu dec jbe and outsb add dec pop jns dec dec pop pop dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec dec push push dec pop jo dec outsb add dec jg adc (bad) dec cmp jmp cmp call mov mov mov mov mov mov mov mov mov adc (bad) mov ret push int icebp and ror and roll push lret lret push add cmp or das dec ja adc or sub and dec sbb les call out int rcl icebp cmp aam cmp xlat mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov std std mov in mov leave icebp icebp cltd xor sti out sti sti aad sti sti aad clc clc loopne cld cld test clc clc stos iret std std mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov dec dec dec mov dec dec mov stos mov ja mov ja mov ja mov ja mov ja mov ja mov push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov dec dec mov dec dec mov or push popa jb popa outsb je gs xor mov add sbb add xchg or add add add add add addl test add xor inc add add add addb add add add push addb add add inc add add add jg add add add add add add jg add add add jle add add add add add jle add add add jge add add add add add add xor add or or add add lock add (bad) decl add add add add add jmp sub pop and inc add add jg add mov add mov add dec popa insb imul fs insl insl gs add jo jb add hlt add add add rcl inc add out add inc add lock add inc add add add add mov jnp inc cltd dec fisub loope imull add adc add sub add add add sub inc add add add loopne cmpsb lods into lahf xor mov nop or add add add add add add add add add add inc add add (bad) lcall mov jmp add add sbbb add add add add hlt inc add add add add (bad) faddl inc stos outsb rorb add add sbbb add or add add add mov add add push add add inc jo lods adc dec mov ds add or add add add sbbb add add add add in inc add add add jp aas dec dec mov cmp add sbb add or add add add inc add add add add aas mov mov xchg xor push stc or push add add add add or add add add cmpsb inc add add push add add scas push fidiv aam cmp in pop add add add add add add add adc inc add add add data16 scas cld shrb sub int or add sbbb add add add add add add add aas ror inc mov pop inc nop mov add or add sbbb add or add add add enter add add add stc in inc mov (bad) clc adc loopne das or add sbbb add or add add add inc add add add and (bad) in push inc lea mov or add sbbb add or add add add add add add lods ja add add add (bad) (bad) incl add add js add lock add add add sub add sub add add add jl add add add sub add sub add and inc add add add sub mov push sub inc add add add add adc xor add add add add add mov add xor add add inc add add add add add add add add inc add inc add pop add add inc add (bad) (bad) incl add add add add inc add das add inc add (bad) (bad) (bad) in cs add cs add das inc add das inc add das inc add das inc add inc add add inc add inc add inc add das inc add das inc add inc add das inc add das inc add das inc add das inc add xor pop xor and inc add xor xor dec xor pop xor xor jb inc add inc add inc add xor (bad) xor int inc add xor out inc add xor add inc add xor sbb inc add xor xor xor dec xor pop xor imul inc add xor popf xor stos xor mov inc add xor (bad) xor fidiv inc add xor clc xor add xor pop xor add add sub inc add adc rclb inc add adc icebp cs add incl add jecxz add subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add lods ja add add add roll (bad) (bad) incl add add inc add lock add add add xor pushf xor add add les add pushf xor add add movsb xor add add mov add add mov push cmp cmp inc add add add dec xor aam inc add xchg inc add add add push test and add cmp mov add xchg and add inc add add add add inc add add sarb add mov add add inc add add add push test adc add sbb inc add mov adc add inc add add add push test add add add add add inc add mov add add add add inc add add add cmp add mov xor add inc add add add push test add add cmp das add inc add add add adc dec add add inc add add add das add add add add adc push add add inc add add add cmp das add add add add adc push add add inc add add add add mov and add inc add add add push test or add add add add jg add inc add add add add inc add add add ds add mov push add add adc pusha add add inc add add add inc add mov push add add adc add add inc add add add das add add inc add add add push test sub add adc add mov sub add inc add add add inc add add add add add add mov sub add add add push test sub add enter mov add mov sub add inc add add add inc add add add inc add mov adc add inc add add add push test and add addb mov add mov and add inc add add add inc add add add inc inc add mov daa add add adc addb add inc add add add inc inc add mov add add adc test add push test or add xchg inc inc add mov or add inc add add test sbb add lock inc add mov sbb add inc add add inc add add add add add add mov sbb add add test sbb add test inc add mov sbb add inc add add inc add add add inc add mov adc add inc add add test xor add pusha inc inc add mov xor add inc add add inc add add add das add inc add add add adc mov test sub add sbb add mov sub add inc add add inc add add je inc add mov sbb add inc add add test adc add rolb add mov adc add inc add add inc add add add inc add mov add add inc add add test and add mov add mov and add inc add add inc add add add inc inc add mov or add inc add add test and add add add add inc add mov and add add inc add add add das add add add adc rolb add inc add add add inc inc add mov add add inc add add add add inc add add add add mov sbb add inc add add add add inc add add add jg add mov add add adc int3 add add inc add add add inc add mov sub add inc add add add add inc add add add inc add mov push add add adc aam add push test xor add les add mov xor add inc add add add add inc add add add dec inc add mov sbb add inc add add add add inc add add jl inc add mov xor add inc add add add add inc add add add dec inc add mov aaa add add adc in add push test or add xor inc add mov or add inc add add add add inc add add add jg add inc add add add adc in add add inc add add add dec inc add mov push add add adc lock add inc add add add add add inc add mov xor add add add add inc add add add add add das add inc add add add add add inc add add add dec inc add mov adc add inc add add add add inc add add pop dec inc add mov or add inc add add add add inc add add add jg add add inc add add add push test sub add adc inc add mov sub add inc add add add add inc add add add inc add mov or add inc add add add push test pop add add dec inc add mov pop add add pop add add add inc add (bad) (bad) incl add add add add dec inc add das add inc add (bad) (bad) incl add add inc add adc rclb inc add adc int3 xor and inc add adc rclb inc add adc hlt xor and inc add adc rclb inc add adc sbb inc add inc add adc rclb inc add adc inc xor and inc add adc rclb inc add adc insb xor and inc add adc rclb inc add adc xchg xor and inc add adc rclb inc add adc mov xor lret add adc (bad) adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc pop xor add inc add adc rclb inc add adc test add inc add adc rclb inc add adc lods xor add inc add adc rclb inc add adc aam inc add inc add adc rclb inc add adc cld xor add inc add adc rclb inc add adc and inc add inc add adc rclb inc add adc dec xor inc add adc rclb inc add adc je inc add inc add adc rclb inc add adc pushf xor inc add adc rclb inc add adc les inc add adc rclb inc add adc in xor inc add adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc fs add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc fdivl inc add inc add adc rclb inc add adc add inc add inc add adc rclb inc add adc sub inc add inc add adc rclb inc add adc push aaa inc add inc add adc rclb inc add adc jl inc add inc add adc rclb inc add adc movsb aaa inc add inc add adc rclb inc add adc int3 aaa inc add inc add adc rclb inc add adc hlt aaa inc add inc add adc rclb inc add adc sbb inc add inc add adc rclb inc add adc inc cmp and inc add adc rclb inc add adc insb cmp and inc add adc rclb inc add adc xchg cmp and inc add adc rclb inc add adc mov xor lret add adc (bad) adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc pop cmp and inc add adc rclb inc add adc test inc add inc add adc rclb inc add adc lods cmp and inc add adc rclb inc add adc aam inc add inc add adc rclb inc add adc cld cmp and inc add adc rclb inc add adc and inc add inc add adc rclb inc add adc dec cmp and inc add adc rclb inc add adc je inc add inc add adc rclb inc add adc pushf cmp and inc add adc rclb inc add adc les inc add inc add adc rclb inc add adc in cmp and inc add adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc add add lods ja add add add (bad) (bad) incl add add js add inc add add add xor xor inc add add add mov add add xor inc add add add inc add add add push inc add add add inc add add add pop inc add sub add add sub xor sbb inc add inc add adc xor add push test sub add cld pop inc add mov sub add inc add add add add inc add add add inc add mov xor add inc add add add push test or add mov inc add mov or add inc add add add push test xor add adc add mov xor add inc add add add inc add add add add mov sldt add adc dec add add inc add add add pop inc add mov pop add add adc dec add add inc add add add inc add mov adc add inc add add add push test or add sbbb mov add add inc add add add inc add add add pop inc add mov push add add adc pop add add inc add add add pop inc add mov sub add inc add add add inc add add add add add das add mov adc add add add push test pop add add pop inc add mov pop add add adc add add inc add add add add mov add add pop add add push (bad) (bad) incl add add add add jg add inc add (bad) (bad) incl adc insb add add inc add add add inc add mov sub add inc add add add push test or add add add add jg add mov or add add add inc add add add pop inc add popl sbb add inc add add add push test sbb add push pop inc add popl sbb add inc add add add inc add add add das add inc add add add adc addb add inc add add add pusha inc add popl pop add add adc test add push test push add add add popl push add add adc mov add push test push add add pusha inc add popl push add add adc mov add push test adc add sbb inc add popl adc add inc add add test or add js inc add popl or add inc add add inc add add aam inc add popl or add inc add add test sbb add xor add popl sbb add inc add add inc add add add das add add inc add add test aaa add add bound mov add add add adc movsb add add inc add add add add popl and add inc add add test xor add mov jg add add inc add add inc add add add arpl mov add popl adc add inc add add test and add pop fs add popl and add inc add add inc add add mov inc add popl xor add inc add add test xor add add add add gs add popl xor add add inc add add add add nop inc add add add adc rolb add inc add add enter mov add nop inc add add inc add add add add inc add add add inc add nop inc add add add adc enter push test or add andb mov add nop inc add add add adc int3 add add inc add add add inc add nop inc add add add adc rolb add push test sbb add cmp add nop inc add add add adc aam add push test sbb add xchg addr16 add nop inc add add add adc fadds add push test and add add add add addr16 add nop inc add add add add add inc add add dec push das add add inc add add add add inc add add add add add jg add add inc add add add add inc add add add inc add nop inc add add inc add add add add inc add add add inc add nop inc add add add adc in add add inc add add add das add add inc add add add add inc add add add push add nop inc add add add adc hlt add add inc add add add add nop inc add add add adc clc add add inc add add add add add push add nop inc add add add add add inc add add add inc add nop inc add add add adc add add push test add add jg add nop inc add add add adc add add push test sub add in inc add nop inc add add add adc or add push test add add add add add inc add xchg inc add add add add push test adc add pushf insb inc add xchg inc add add add adc adc add push test push add add insb inc add xchg inc add add add add add inc add inc add adc (bad) adc fs inc add inc add adc (bad) adc mov add inc add adc (bad) adc mov inc add inc add adc (bad) adc fcoml add inc add adc (bad) adc add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push push inc add inc add adc (bad) adc jl inc add inc add adc (bad) adc movsb push inc add inc add adc (bad) adc int3 push inc add inc add adc (bad) adc hlt push inc add inc add adc (bad) adc sbb inc add inc add adc (bad) adc inc push inc add inc add adc (bad) adc insb push inc add inc add adc (bad) adc xchg push inc add inc add adc (bad) adc mov dec inc add adc rclb inc add adc in inc add inc add adc (bad) adc or inc add inc add adc (bad) adc xor inc add inc add adc (bad) adc pop push inc add inc add adc (bad) adc test add inc add adc (bad) adc lods push inc add inc add adc (bad) adc aam inc add inc add adc (bad) adc cld push inc add inc add adc (bad) adc and inc add inc add adc (bad) adc dec push inc add inc add adc (bad) adc je inc add inc add adc (bad) adc pushf push inc add inc add adc (bad) adc les mov adc rclb inc add adc in push inc add inc add adc (bad) adc adc inc add inc add adc (bad) adc cmp inc add inc add adc (bad) adc fs inc add inc add adc (bad) adc mov add inc add adc (bad) adc mov inc add inc add adc (bad) adc fcoml add inc add adc (bad) adc add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push push inc add inc add adc (bad) adc jl inc add inc add adc (bad) adc movsb push inc add inc add adc (bad) adc int3 push inc add inc add adc (bad) adc hlt push inc add inc add adc (bad) adc sbb inc add inc add adc (bad) adc inc push inc add inc add adc (bad) adc insb push inc add inc add adc (bad) adc xchg push inc add inc add adc (bad) adc mov dec inc add adc rclb inc add adc in inc add inc add adc (bad) adc or inc add inc add adc (bad) adc xor inc add inc add adc (bad) adc pop pop inc add inc add adc (bad) adc test add inc add adc (bad) adc lods pop inc add inc add adc (bad) adc aam inc add inc add adc (bad) adc add or lods ja add add add roll (bad) (bad) incl add add jp add lock add add add (bad) xor int3 insl inc add add add add int3 insl inc add add add insl inc add add add insl inc add add add insl inc add add add inc add add add aaa add mov inc add adc xor add push test add add xchg jbe add mov add inc add add add add inc add add add jbe add movsb inc add add add adc cmp add push test sbb add dec ja add movsb inc add add inc add add add push test sbb add test inc add movsb inc add add add adc inc add add inc add add add inc add movsb inc add add add adc dec add add inc add add pusha js add movsb inc add add inc add add add inc add add add das add add add add adc push add add inc add add add jns add movsb inc add add add adc push add add inc add add add add movsb inc add add add adc pop add add inc add add add jns add movsb inc add add add adc pop add add inc add add add inc add movsb inc add add add adc pusha add add inc add add add jg add add add adc add add inc add add add jp add movsb inc add add add adc push test or add inc jnp add movsb inc add add inc add add add inc add add add das add add add adc jo add push test xor add clc jnp add movsb inc add add add adc je add push test sub add push jl add movsb inc add add inc add add add push test das add add jg add movsb inc add add add adc jl add push test or add add add add das add movsb inc add add add test push add add inc add movsb inc add add add adc test add push test and add add add add jge add movsb inc add add add test add add add add add jle add movsb inc add add add inc add add add add movsl inc add add add adc nop add add inc add add add jle add movsl inc add add add adc xchg add add inc add add add inc add movsl inc add add add adc cwtl add add inc add add add add add jg add movsl inc add add add inc add add add jg add movsl inc add add add adc mov test pop add add inc add movsl inc add add add adc movsb add add inc add add add das add inc add add add adc test add push test xor add add das add add add add adc lods add add inc add add add add movsl inc add add add adc mov add push test sub add mov jg add add inc add add inc add add add add add inc add movsl inc add add add test or add jo inc add movsl inc add add add adc mov test sub add int3 (bad) inc add movsl inc add add add adc rolb add inc add add sub das add add inc add add add add inc add add add das add movsl inc add add add adc enter push test pop add add addl jg add movsl inc add add add adc int3 add add inc add add add inc add movsl inc add add add adc rolb add push test sub add add add add jg add movsl inc add add add add add inc add add add test mov add cmpsb inc add add add adc fadds add push test add add inc add cmpsb inc add add add pop add add add inc add (bad) (bad) incl add add add add das add inc add (bad) (bad) incl adc loopne add push test sub add inc xchg mov add cmpsb inc add add add adc in add push test and add pushf xchg mov add inc add add add adc call test or add clc xchg mov add add add add adc in add add inc add add add add cmpsb inc add add add adc lock add inc add add add jg add inc add add add adc hlt add add inc add add or inc add cmpsb inc add add inc add add add add inc add add add inc add cmpsb inc add add add adc cld add add inc add add add mov mov add add add add adc add add push test xor add and das add add inc add add add push test push add add add cmpsb inc add add add adc or add push test adc add add add add mov mov add add inc add add add push test add add xor inc add cmpsb inc add add add adc adc add push test push add add jg add cmpsb inc add add add add add insl inc add add adc rclb inc add adc cld insl inc add add adc rclb inc add adc and inc add add adc rclb inc add adc dec outsb inc add add adc rclb inc add adc je inc add add adc rclb inc add adc pushf outsb inc add add adc rclb inc add adc les add add adc rclb inc add adc in outsb inc add add adc rclb inc add adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc outsl inc add add adc rclb inc add adc mov add add adc rclb inc add adc mov inc add add adc rclb inc add adc fsubrl add add adc rclb inc add adc add inc add add adc rclb inc add adc sub inc add add adc rclb inc add adc push jo add add adc rclb inc add adc jl inc add add adc rclb inc add adc movsb jo add add adc rclb inc add adc int3 jo add add adc rclb inc add adc hlt jo add add adc rclb inc add adc sbb inc add add adc rclb inc add adc inc jno add add adc rclb inc add adc insb jno add add adc rclb inc add adc xchg jno add add adc rclb inc add adc mov insl inc add adc rclb inc add adc in inc add add adc rclb inc add adc or inc add add adc rclb inc add adc xor inc add add adc rclb inc add adc pop jb add add adc rclb inc add adc test add add adc rclb inc add adc lods jb add add adc rclb inc add adc aam inc add add adc rclb inc add adc cld jb add add adc rclb inc add adc and inc add add adc rclb inc add adc dec jae add add adc rclb inc add adc je inc add add adc rclb inc add adc pushf jae add add adc rclb inc add adc les add add adc rclb inc add adc in jae add add adc rclb inc add adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc fs add add adc rclb inc add adc mov push insl inc add adc rclb inc add adc mov inc add add adc rclb inc add adc fdivl push insl inc add adc rclb inc add adc add inc add add adc rclb inc add adc sub inc add add adc rclb inc add adc push jne add add adc rclb inc add adc jl inc add add adc rclb inc add adc movsb jne add add adc rclb inc add adc int3 jne add add adc rclb inc add adc hlt jne add add adc rclb inc add adc sbb inc add add adc rclb inc add adc inc jbe add add adc rclb inc add adc insb jbe add add adc rclb inc add adc add add add add add rolb (bad) (bad) incl add add js add add add add add add add add add inc add add add add add add add add add inc add add add add add add inc add inc add add add add inc add inc add adc xor add push test sub add sub inc add xchg inc add add add adc cmp add push test and add mov add add add add adc cmp add push test and add in inc add xchg inc add add add adc inc add add inc add add add add add inc add xchg inc add add add add inc add add add add add das add add inc add add add push test add add clc xchg inc add xchg inc add add add adc dec add add inc add add add add xchg inc add add add adc push add add inc add add add jg add xchg inc add add add adc push add add inc add add add inc add xchg inc add add add adc pop add add inc add add add inc add xchg inc add add add adc pop add add inc add add add xchg inc add xchg inc add add add adc pusha add add inc add add add add add cwtl inc add xchg inc add add add add inc add add add add xchg inc add add add adc push test xor add add add add cwtl inc add xchg inc add add add add inc add add add inc add xchg inc add add add adc jo add push test sbb add nop cltd inc add xchg inc add add add adc je add push test and add in cltd inc add xchg inc add add add adc js add push test adc add dec lcall pop xchg inc add add add adc jl add push test add add add add add das add add add add test sub add add das add inc add add add adc test add push test or add add add add add xchg inc add add add test sbb add mov jg add add add adc mov add push test pop add add inc add xchg inc add add add adc nop add add inc add add add inc add xchg inc add add add adc xchg add add inc add add add pushf inc add xchg inc add add add adc cwtl add add inc add add add popf inc add xchg inc add add add adc pushf add add inc add add add das add xchg inc add add add adc mov test adc add loopne inc add xchg inc add add inc add add inc add add cmp inc add xchg inc add add inc add add test aaa add add jg add xchg inc add add add adc lods add add inc add add add sahf inc add xchg inc add add add adc mov add push test daa add add inc add xchg inc add add add adc mov add push test push add add das add xchg inc add add add adc mov test pop add add mov das add inc add add add adc mov test or add mov das add inc add add add adc rolb add inc add add add mov das add add add add adc les add push test or add sbb inc add xchg inc add add inc add add add add inc add add js inc add xchg inc add add inc add add add add inc add add add mov das add add add adc rolb add push test push add add mov das add add inc add add add add inc add add add add add das add add inc add add add add inc add add add mov das add add add adc faddl add push test xor add inc mov das add add add adc loopne add push test sub add mov jg add add inc add add add add inc add add add mov das add xchg inc add add add adc call test das add add inc add xchg inc add add add adc in add add inc add add add das add xchg inc add add add adc lock add inc add add add movsl inc add xchg inc add add add adc hlt add add inc add add insb movsl inc add xchg inc add add inc add add add add inc add add add movsl inc add xchg inc add add add adc cld add add inc add add add inc add xchg inc add add add adc add add push test sldt add jg add inc add add add adc add add push test and add fsubl das add inc add add add adc or add push test and add cmp das add add add adc or add push test xor add xchg cmpsl inc add mov xor add inc add add add add inc add (bad) (bad) incl add add add add cmpsl inc add das add inc add (bad) (bad) incl add add add mov lret add adc (bad) adc xchg mov in mov lret add adc (bad) adc mov mov lret add adc (bad) adc in inc add mov lret add adc (bad) adc or inc add mov lret add adc (bad) adc xor inc add mov lret add adc (bad) adc pop mov in mov lret add adc (bad) adc test add adc rclb inc add adc lods mov in mov lret add adc (bad) adc aam inc add mov lret add adc (bad) adc cld mov in mov lret add adc (bad) adc and inc add mov lret add adc (bad) adc dec lea in mov lret add adc (bad) adc je inc add mov lret add adc (bad) adc pushf lea in mov lret add adc (bad) adc les inc add adc rclb inc add adc in lea in mov lret add adc (bad) adc adc inc add mov lret add adc (bad) adc cmp inc add mov lret add adc (bad) adc mov in mov lret add adc (bad) adc mov inc add adc rclb inc add adc mov inc add mov lret add adc (bad) adc fmull inc add adc rclb inc add adc add inc add mov lret add adc (bad) adc sub inc add mov lret add adc (bad) adc push popl in mov lret add adc (bad) adc jl inc add mov lret add adc (bad) adc movsb popl in mov lret add adc (bad) adc int3 popl in mov lret add adc (bad) adc hlt popl in mov lret add adc (bad) adc sbb inc add mov lret add adc (bad) adc inc nop inc add mov lret add adc (bad) adc insb nop inc add mov lret add adc (bad) adc xchg nop inc add mov lret add adc (bad) adc mov mov lret add adc (bad) adc in inc add mov lret add adc (bad) adc or inc add mov lret add adc (bad) adc xor inc add mov lret add adc (bad) adc pop xchg inc add mov lret add adc (bad) adc test inc add adc rclb inc add adc lods xchg inc add mov lret add adc (bad) adc aam inc add mov lret add adc (bad) adc cld xchg inc add mov lret add adc (bad) adc and inc add mov lret add adc (bad) adc dec xchg inc add mov lret add adc (bad) adc je inc add mov lret add adc (bad) adc pushf xchg inc add mov lret add adc (bad) adc les inc add adc rclb inc add adc in xchg inc add mov lret add adc (bad) adc adc inc add mov lret add adc (bad) adc cmp inc add mov lret add adc (bad) adc fs inc add mov lret add adc (bad) adc mov inc add adc rclb inc add adc mov inc add mov lret add adc (bad) adc fcoml inc add adc rclb inc add adc add inc add mov lret add adc (bad) adc add add lods ja add add add inc add (bad) (bad) incl add add js add inc add add add add add test add add add test add add cld test add add add inc add add add test add add inc add add add mov add inc add add add inc xor xor inc add adc xor add push test add add les das add inc add add inc add add add add inc add add add mov add test and add inc add add add push test adc add jl inc add test adc add inc add add add push test pop add add mov add test pop add add adc inc add add inc add add add add add inc add test xor add add add push test sub add add add add jg add add add adc dec add add inc add add add mov add test sbb add inc add add add push test push add add inc add test push add add adc push add add inc add add add das add test sub add inc add add add push test add mov add test add add add add inc add add pop mov add test and add inc add add add push test add add jg add test add add adc add add inc add add add inc add test xor add inc add add add push test or add jo inc add xchg or add inc add add add inc add (bad) (bad) incl add add add add mov add das add inc add (bad) (bad) incl adc jo add push test aaa add add inc add xchg aaa add add adc je add push test sbb add mov jg add xchg sbb add inc add add add push test sbb add sbb das add inc add add inc add add add inc add add add add xchg sub add inc add add test or add sarb das add inc add add add adc test add push test sbb add sub inc add xchg sbb add inc add add test xor add mov das add add inc add add inc add add add mov das add add add adc nop add add inc add add inc mov das add add inc add add inc add add add add add das add add inc add add test daa add add mov das add add add adc pushf add add inc add add add add add add addl add add adc mov test or add mov inc add addl add add adc movsb add add inc add add add inc add (bad) inc add add add adc test add push test add add push jg add add add add adc lods add add inc add add add mov das add inc add add add adc mov add push test push add add mov das add add add add adc mov add push test sbb add jl inc add jle add add add adc mov test adc add fdivrs das add add add add adc mov test adc add add add add inc add xchg adc add add add add inc add add add jg add add inc add add add add inc add add add mov das add add inc add add add add inc add add add inc add xchg sub add inc add add add add inc add add add das add add inc add add add add inc add add add rolb jg add xchg add add inc add add add add inc add add add add xchg add add adc fadds add push test adc add mov jg add xchg adc add inc add add add add inc add add add inc add xchg or add inc add add add add inc add add add inc add xchg add add inc add add add add inc add add add roll jg add inc add add add adc call test push add add ret mov add inc add add add adc in add add inc add add add das add inc add add add adc lock add inc add add add add add ret mov add xchg sbb add add add add inc add add add inc add xchg and add inc add add add add inc add add add jg add add add add adc cld add add inc add add add ret inc add xchg xor add inc add add add add inc add add add inc add xchg xor add inc add add add push test or add lods les mov add add add adc or add push test das add add lds mov add add add adc or add push test and add lds mov add add inc add add add add inc add add add lds mov add add add add add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push test inc add adc rclb inc add adc jl inc add inc add adc (bad) adc movsb test inc add adc rclb inc add adc int3 test inc add adc rclb inc add adc hlt test inc add adc rclb inc add adc sbb inc add inc add adc (bad) adc inc stos inc add inc add adc (bad) adc insb stos inc add inc add adc (bad) adc xchg stos inc add inc add adc (bad) adc mov test add adc rclb inc add adc in inc add inc add adc (bad) adc or inc add inc add adc (bad) adc xor inc add inc add adc (bad) adc pop stos inc add inc add adc (bad) adc test inc add adc rclb inc add adc lods stos inc add inc add adc (bad) adc aam inc add inc add adc (bad) adc cld stos inc add inc add adc (bad) adc and inc add inc add adc (bad) adc dec lods inc add inc add adc (bad) adc je inc add inc add adc (bad) adc pushf lods inc add inc add adc (bad) adc les add adc rclb inc add adc in lods inc add inc add adc (bad) adc adc inc add inc add adc (bad) adc cmp inc add inc add adc (bad) adc lods inc add inc add adc (bad) adc mov inc add adc rclb inc add adc mov inc add inc add adc (bad) adc fsubrl inc add adc rclb inc add adc add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push scas inc add inc add adc (bad) adc jl inc add inc add adc (bad) adc movsb scas inc add inc add adc (bad) adc int3 scas inc add inc add adc (bad) adc hlt scas inc add inc add adc (bad) adc sbb inc add inc add adc (bad) adc inc scas inc add inc add adc (bad) adc insb scas inc add inc add adc (bad) adc xchg scas inc add inc add adc (bad) adc mov test add adc rclb inc add adc in inc add inc add adc (bad) adc or inc add inc add adc (bad) adc xor inc add inc add adc (bad) adc pop mov add inc add adc (bad) adc test inc add adc rclb inc add adc lods mov add inc add adc (bad) adc aam inc add inc add adc (bad) adc cld mov add inc add adc (bad) adc and inc add inc add adc (bad) adc dec mov add inc add adc (bad) adc je inc add inc add adc (bad) adc pushf mov add inc add adc (bad) adc add push add add inc rolb (bad) (bad) incl add add jns add add add add add add push xchg inc add add add add pushf movb add add add add mov push iret inc add sbb add add inc imul add inc add adc xor add push test sbb add pop iret inc add xchg inc add add add adc cmp add push test xor add mov jg add add add adc cmp add push test add add inc add xchg inc add add add adc inc add add inc add add jo inc add xchg inc add add inc add add add inc add add add rolb mov add add inc add add add push test adc add add add add roll mov add add add adc dec add add inc add add add das add xchg inc add add add adc push add add inc add add add roll mov add xchg inc add add add adc push add add inc add add add add add inc add xchg inc add add add add push test or add cwtl rolb mov add xchg inc add add add adc pop add add inc add add add rolb mov add xchg inc add add add adc pusha add add inc add add add add add inc add xchg inc add add add add inc add add add das add xchg inc add add add adc push test add add or inc add xchg inc add add add adc insb add add inc add add add add xchg inc add add add adc jo add push test add add aam add xchg inc add add add adc je add push test sub add sbb inc add xchg inc add add add adc js add push test adc add js inc add xchg inc add add add adc jl add push test das add add aad add xchg inc add add add adc addb add inc add add add add add (bad) inc add xchg inc add add add inc add add add das add add add add adc mov add push test xor add call jg add add add inc add add inc add add add add xchg inc add add add adc nop add add inc add add add jg add add add adc xchg add add inc add add add add add xlat inc add xchg inc add add add test sub add pop fadds mov add add inc add add inc add add add das add add add adc mov test sbb add adc inc add mov sbb add inc add add inc add add add add xchg inc add add add adc test add push test add add add add add flds mov add xchg inc add add add inc add add add inc add xchg inc add add add adc mov add push test sldt add jg add xchg inc add add add adc mov add push test and add (bad) inc add xchg inc add add add adc mov test xor add cmp inc add xchg inc add add add pop add inc add (bad) (bad) incl add add add add das add inc add (bad) (bad) incl adc rolb add inc add add add faddl mov add xchg inc add add add adc les add push test add add test inc add xchg inc add add add adc enter push test adc add loopne inc add xchg inc add add add adc int3 add add inc add add add das add xchg inc add add add adc rolb add push test adc add cwtl fldl mov add add add add adc aam add push test or add hlt fldl mov add add add inc add add add add inc add add add inc add xchg inc add add add adc faddl add push test add add lods fiadd mov add inc add add inc add add add add inc add add add fild mov add add add add adc in add push test aaa add add add xchg inc add add add adc call test sbb add rcr add xchg inc add add add adc in add add inc add add add inc add xchg inc add add add adc lock add inc add add js inc add xchg inc add add inc add add add add inc add add add loopne add xchg inc add add add adc clc add add inc add add add add add loope add xchg inc add add add add add inc add add add das add xchg inc add add add adc add add push test sub add call jg add xchg inc add add add adc add add push test sub add inc loop add xchg inc add add add adc or add push test adc add mov jg add inc add add inc add add add push test pop add add loop add xchg inc add add add adc adc add push test push add add inc add xchg inc add add add add add inc add adc rclb inc add adc (bad) movb movb adc rclb inc add adc in movb movb adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc movl lret add adc (bad) adc mov inc add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc fadd inc add inc add adc rclb inc add adc add inc add inc add adc rclb inc add adc sub inc add inc add adc rclb inc add adc push enter movb adc rclb inc add adc jl inc add inc add adc rclb inc add adc movsb enter movb adc rclb inc add adc int3 enter movb adc rclb inc add adc hlt enter movb adc rclb inc add adc sbb inc add inc add adc rclb inc add adc inc leave inc add inc add adc rclb inc add adc insb leave inc add inc add adc rclb inc add adc xchg leave inc add inc add adc rclb inc add adc mov movb adc rclb inc add adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc pop lret sbb inc add adc rclb inc add adc test inc add inc add adc rclb inc add adc lods lret sbb inc add adc rclb inc add adc aam inc add inc add adc rclb inc add adc cld lret sbb inc add adc rclb inc add adc and inc add inc add adc rclb inc add adc dec lret inc add inc add adc rclb inc add adc je inc add inc add adc rclb inc add adc pushf lret inc add inc add adc rclb inc add adc (bad) lret inc add inc add adc rclb inc add adc in lret inc add inc add adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc fs inc add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc fmul inc add inc add adc rclb inc add adc add inc add inc add adc rclb inc add adc sub inc add inc add adc rclb inc add adc push int add inc add adc rclb inc add adc jl inc add inc add adc rclb inc add adc movsb int add inc add adc rclb inc add adc int3 int add inc add adc rclb inc add adc hlt int add inc add adc rclb inc add adc sbb inc add inc add adc rclb inc add adc inc into inc add inc add adc rclb inc add adc insb into inc add inc add adc rclb inc add adc xchg into inc add inc add adc rclb inc add adc mov movb adc rclb inc add adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc add or lods ja add add add (bad) (bad) incl add add lock add add add (bad) xor sub inc add add add add add inc add add add inc add add add in add add add inc add add add in inc add inc add add add jle add popf inc add adc xor add push test xor add add add add in inc add popf inc add add add add add inc add add add inc add popf inc add add add adc cmp add push test sub add lods in inc add popf inc add add add adc inc add add inc add add add out inc add popf inc add add add adc inc add add inc add add add add sahf inc add add add adc dec add add inc add add add out inc add sahf inc add add add adc dec add add inc add add add inc add sahf inc add add add adc push add add inc add add js inc add sahf inc add add inc add add add inc add add add out inc add sahf inc add add add adc pop add add inc add add add lock add sahf inc add add add adc pop add add inc add add add das add add add add adc pusha add add inc add add add lock add sahf inc add add add adc add add inc add add add add add add sahf inc add add add add push test or add mov jg add inc add add add adc insb add add inc add add add icebp inc add sahf inc add add add adc jo add push test adc add add add add inc add sahf inc add add add add inc add add add das add add add adc js add push test sbb add add add add repz add sahf inc add add add add inc add add add add sahf inc add add add adc addb add inc add add add repz add sahf inc add add add adc test add push test pop add add inc add sahf inc add add add adc mov add push test sbb add xor add sahf inc add add add adc mov add push test add add fdiv inc add sahf inc add add add adc nop add add inc add add add cmc inc add lahf inc add add add adc xchg add add inc add add xchg cmc inc add lahf inc add add inc add add test sub add lock inc add lahf inc add add add adc pushf add add inc add add add add lahf inc add add add adc mov test push add add jg add inc add add add adc movsb add add inc add add add inc add lahf inc add add add pop add jl add (bad) (bad) incl add add add add inc add das add inc add (bad) (bad) incl adc lods add add inc add add add add add testl pop lahf inc add add add test add add inc add lahf inc add add add adc mov add push test xor add lods clc inc add lahf inc add add add adc mov test sldt add stc inc add lahf inc add add add adc mov test add add fs inc add lahf inc add add inc add add add add inc add add sar add lahf inc add add inc add add add add inc add add add inc add lahf inc add add add adc enter push test add add js inc add lahf inc add add add adc int3 add add inc add add add cli inc add lahf inc add add add adc rolb add push test or add add add add sti inc add lahf inc add add add add add inc add add add das add lahf inc add add add adc fadds add push test push add add sti inc add lahf inc add add add adc faddl add push test adc add inc cld inc add lahf inc add add inc add add add add inc add add add jg add inc add add add adc in add push test xor add cld cld inc add mov add inc add add add add inc add add add inc add mov add inc add add add add inc add add add das add inc add add add adc lock add inc add add adc inc add mov add inc add add add add inc add add insb incb mov add inc add add inc add add add add inc add add add incb mov add inc add add add adc cld add add inc add add add inc add mov add inc add add add add inc add add add jg add add add add adc add add push test sub add fdivr inc add mov add inc add add add add inc add add add add add add mov add add add adc or add push test and add xchg add mov add mov and add inc add add add add inc add add add add mov add inc add add add add add inc add inc add adc (bad) adc pop in add inc add adc (bad) adc test inc add inc add adc (bad) adc lods in add inc add adc (bad) adc aam inc add inc add adc (bad) adc cld in add inc add adc (bad) adc and inc add inc add adc (bad) adc dec in add inc add adc (bad) adc je inc add inc add adc (bad) adc pushf in add inc add adc (bad) adc (bad) in add inc add adc (bad) adc in in add inc add adc (bad) adc adc inc add inc add adc (bad) adc cmp inc add inc add adc (bad) adc fs add inc add adc (bad) adc mov inc add inc add adc (bad) adc mov inc add inc add adc (bad) adc fsub inc add inc add adc (bad) adc add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push out add inc add adc (bad) adc jl inc add inc add adc (bad) adc movsb out add inc add adc (bad) adc int3 out add inc add adc (bad) adc hlt out add inc add adc (bad) adc sbb inc add inc add adc (bad) adc inc call inc add adc rclb inc add adc insb call inc add adc rclb inc add adc xchg call inc add adc rclb inc add adc mov jecxz add adc rclb inc add adc in inc add inc add adc (bad) adc or inc add inc add adc (bad) adc xor inc add inc add adc (bad) adc pop jmp inc add adc rclb inc add adc test inc add inc add adc (bad) adc lods jmp inc add adc rclb inc add adc aam inc add inc add adc (bad) adc cld jmp inc add adc rclb inc add adc and inc add inc add adc (bad) adc dec ljmp lret add adc (bad) adc je inc add inc add adc (bad) adc pushf ljmp lret add adc (bad) adc (bad) ljmp lret add adc (bad) adc in ljmp lret add adc (bad) adc adc inc add inc add adc (bad) adc cmp inc add inc add adc (bad) adc fs add inc add adc (bad) adc mov inc add inc add adc (bad) adc mov inc add inc add adc (bad) adc fsubr inc add inc add adc (bad) adc add inc add inc add adc (bad) adc sub inc add inc add adc (bad) adc push in inc add inc add adc (bad) adc jl inc add inc add adc (bad) adc movsb in inc add inc add adc (bad) adc int3 in inc add inc add adc (bad) adc add pop add add adc add (bad) (bad) incl add add inc add add call add add add add add cmp inc add add add add add add int3 add add add enter cmp add int3 add add mov push or and inc add add add aaa add inc add inc add adc xor add push test or add mov inc add xchg inc add add add adc cmp add push test sbb add call jg add add add add adc cmp add push test pop add add add xchg inc add add add adc inc add add inc add add add jg add add add adc inc add add inc add add add or mov add add inc add add add push test or add pop or add xchg inc add add inc add add add inc add add add das add add inc add add add push test and add adc das add xchg inc add add add adc push add add inc add add add add xchg inc add add add adc pop add add inc add add enter mov add xchg inc add add inc add add add inc add add add inc add xchg inc add add add adc pusha add add inc add add add jg add cwtl inc add add add adc add add inc add add add push inc add cwtl inc add add add pop add add push (bad) (bad) incl add add add add cmovno js das add inc add (bad) (bad) incl adc insb add add inc add add add add add cmovno mov add inc add add add add push test sldt add adc mov add cwtl inc add add add adc je add push test adc add test inc add cwtl inc add add add adc js add push test sbb add loopne inc add cwtl inc add add add adc jl add push test xor add cmp inc add cwtl inc add add add adc addb add inc add add add add add jg add inc add add add inc add add hlt adc mov add add add inc add add test add add inc add cwtl inc add add add adc mov add push test sbb add add add add das add add inc add add test or add or inc add cwtl inc add add add adc xchg add add inc add add add add add add cwtl inc add add add test sbb add rclb add cwtl inc add add add adc pushf add add inc add add add inc add cwtl inc add add add adc mov test and add js inc add cwtl inc add add inc add add inc add add aam inc add cwtl inc add add inc add add test adc add xor das add cwtl inc add add add adc lods add add inc add add add das add cwtl inc add add add adc mov add push test adc add call jg add cltd inc add add add adc mov add push test push add add add cltd inc add add add adc mov test add add mov jg add cltd inc add add add adc mov test and add cld push inc add cltd inc add add add adc rolb add inc add add add inc add cltd inc add add add adc les add push test pop add add das add add add add adc enter push test xor add adc inc add cltd inc add add add adc int3 add add inc add add add add cltd inc add add add adc rolb add push test sub add add add add sbb mov add add add add add add inc add add add add add inc add cltd inc add add add add add inc add add add jg add add inc add add add add inc add add add sbb mov add add add adc loopne add push test push add add sbb mov add add add adc in add push test xor add xchg sbb mov add add add adc call test or add lock mov add cltd inc add add add adc in add add inc add add add add cltd inc add add add adc lock add inc add add add jg add cltd inc add add add adc hlt add add inc add add add inc add cltd inc add add add adc clc add add inc add add pusha sbb add cltd inc add add inc add add add add inc add add add add add das add inc add add add add add inc add add add sbb das add inc add add add adc add add push test or add je inc add lcall inc add add add add inc add add rcrb das add lcall inc add add add push test sbb add sub inc add lcall inc add add add add inc add add add jg add lcall add add int3 add dec add lret add adc (bad) adc hlt add dec add lret add adc (bad) adc sbb inc add add adc rclb inc add adc inc add dec add lret add adc (bad) adc insb add dec add lret add adc (bad) adc xchg add dec add lret add adc (bad) adc mov add lret add adc (bad) adc in inc add add adc rclb inc add adc or inc add add adc rclb inc add adc xor inc add add adc rclb inc add adc pop add dec add lret add adc (bad) adc test inc add add adc rclb inc add adc lods add dec add lret add adc (bad) adc aam inc add add adc rclb inc add adc cld add dec add lret add adc (bad) adc and inc add add adc rclb inc add adc dec add add add adc rclb inc add adc je inc add add adc rclb inc add adc pushf add add add adc rclb inc add adc les add add adc rclb inc add adc in add add add adc rclb inc add adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc fs inc add adc rclb inc add adc mov inc add adc rclb inc add adc mov inc add add adc rclb inc add adc faddl inc add adc rclb inc add adc add inc add add adc rclb inc add adc sub inc add add adc rclb inc add adc push push inc add add adc rclb inc add adc jl inc add add adc rclb inc add adc movsb push inc add add adc rclb inc add adc int3 push inc add add adc rclb inc add adc hlt push inc add add adc rclb inc add adc sbb inc add add adc rclb inc add adc inc pop inc add add adc rclb inc add adc insb pop inc add add adc rclb inc add adc xchg pop inc add add adc rclb inc add adc mov add lret add adc (bad) adc in inc add add adc rclb inc add adc or inc add add adc rclb inc add adc xor inc add add adc rclb inc add adc pop or dec add lret add adc (bad) adc test inc add add adc rclb inc add adc lods or dec add lret add adc (bad) adc aam inc add add adc rclb inc add adc cld or dec add lret add adc (bad) adc and inc add add adc rclb inc add adc dec or dec add lret add adc (bad) adc je inc add add adc rclb inc add adc pushf or dec add lret add adc (bad) adc les inc add add adc rclb inc add adc in or dec add lret add adc (bad) adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc or dec add lret add adc (bad) adc add or lods ja add add add roll (bad) (bad) incl add add lock add add add data16 pop pop inc add add add inc add add add add add add add add add inc add add add add add add inc add or add in jne add inc add inc add adc xor add push test aaa add add inc add lcall inc add add add add inc add add add add add jg add add add adc cmp add push test adc add fsubrl inc add lcall inc add add add push test pop add add sub mov add add inc add add add inc add add add das add add add adc dec add add inc add add add add add sub mov add lcall inc add add add inc add add add add lcall inc add add add push test adc add add add add jg add lcall inc add add add inc add add add inc add lcall inc add add add push test sub add pusha sub mov add fwait inc add add inc add add add inc add add add das add fwait inc add add add adc pusha add add inc add add add sub add fwait inc add add add adc add add inc add add add add fwait inc add add add adc push test sub add shrb add fwait inc add add add adc insb add add inc add add add add add das add inc add add add add push test xor add mov das add add add add adc je add push test sbb add in inc add fwait inc add add add adc js add push test add add inc cs add fwait inc add add inc add add add inc add add add das add add add adc addb add inc add add add cs add fwait inc add add add adc test add push test and add push das inc add fwait inc add add inc add add test sbb add mov inc add fwait inc add add add adc mov add push test sbb add or inc add fwait inc add add add adc nop add add inc add add add inc add fwait inc add add add adc xchg add add inc add add les inc add fwait inc add add inc add add test and add and inc add fwait inc add add add adc pushf add add inc add add add add add add fwait inc add add add test das add add xor mov add pushf inc add add add adc movsb add add inc add add add inc add pushf inc add add add adc test add push test sldt add jg add pushf inc add add add adc lods add add inc add add add xor mov add inc add add add adc mov add push test sub add add add add inc add pushf inc add add add inc add add add das add inc add add add adc mov test push add add xor add pushf inc add add add adc mov test sub add pop xor add pushf inc add add add adc rolb add inc add add add jg add add inc add add add add inc add add adc inc add pushf inc add add inc add add add add inc add add add inc add pushf inc add add add adc int3 add add inc add add add xor das add add inc add add add add inc add add add ss add pushf inc add add add adc aam add push test add add test inc add pushf inc add add add adc fadds add push test or add loopne inc add pushf inc add add add adc faddl add push test sbb add cmp inc add pushf inc add add inc add add add add inc add add cwtl aaa inc add pushf inc add add inc add add add add inc add add add aaa inc add popf inc add add add adc call test adc add push cmp mov add popf inc add add add adc in add add inc add add add das add add inc add add add add inc add add add cmp mov add add inc add add add add inc add add add add popf inc add add add adc clc add add inc add add add cmp mov add add add add adc cld add add inc add add add inc add popf inc add add add adc add add push test or add add add add inc add popf inc add add add add push test or add aam inc add popf inc add add add adc or add push test sub add xor inc add popf inc add add add adc or add push test xor add mov inc add popf inc add add add pop add add add inc add (bad) (bad) incl add add add add cmp js das add inc add (bad) (bad) incl add add add push inc add adc rclb inc add adc mov inc add push inc add adc rclb inc add adc mov inc add push inc add adc rclb inc add adc fcompl inc add push inc add adc rclb inc add adc add inc add push inc add adc rclb inc add adc sub inc add push inc add adc rclb inc add adc push and in inc add adc rclb inc add adc jl inc add push inc add adc rclb inc add adc movsb and in inc add adc rclb inc add adc int3 and in inc add adc rclb inc add adc hlt and in inc add adc rclb inc add adc sbb inc add push inc add adc rclb inc add adc inc and in inc add adc rclb inc add adc insb and in inc add adc rclb inc add adc xchg and in inc add adc rclb inc add adc mov push inc add adc rclb inc add adc in inc add push inc add adc rclb inc add adc or inc add push inc add adc rclb inc add adc xor inc add push inc add adc rclb inc add adc pop and in inc add adc rclb inc add adc test inc add push inc add adc rclb inc add adc lods and in inc add adc rclb inc add adc aam inc add push inc add adc rclb inc add adc cld and in inc add adc rclb inc add adc and inc add push inc add adc rclb inc add adc dec and in inc add adc rclb inc add adc je inc add push inc add adc rclb inc add adc pushf and in inc add adc rclb inc add adc les inc add push inc add adc rclb inc add adc in and in inc add adc rclb inc add adc adc inc add push inc add adc rclb inc add adc cmp inc add push inc add adc rclb inc add adc fs add push inc add adc rclb inc add adc mov add push inc add adc rclb inc add adc mov inc add push inc add adc rclb inc add adc fsubl add push inc add adc rclb inc add adc add inc add push inc add adc rclb inc add adc sub inc add push inc add adc rclb inc add adc push and inc add adc rclb inc add adc jl inc add push inc add adc rclb inc add adc movsb and inc add adc rclb inc add adc int3 and inc add adc rclb inc add adc hlt and inc add adc rclb inc add adc sbb inc add push inc add adc rclb inc add adc inc es add push inc add adc rclb inc add adc insb es add push inc add adc rclb inc add adc xchg es add push inc add adc rclb inc add adc mov push inc add adc rclb inc add adc in inc add push inc add adc rclb inc add adc or inc add push inc add adc rclb inc add adc xor inc add push inc add adc rclb inc add adc pop daa inc add push inc add adc rclb inc add adc test inc add push inc add adc rclb inc add adc lods daa inc add push inc add adc rclb inc add adc aam inc add push inc add adc rclb inc add adc cld daa inc add push inc add adc rclb inc add adc add add lods ja add add add rolb (bad) (bad) incl add add lock add add add arpl add cmp add add add mov add add hlt cmp add add add cmp add add add cmp add add add cmp add add add inc add add add xor in mov or adc xor add push test or add mov jg add mov or add inc add add add add inc add add add inc inc add mov and add inc add add add push test xor add je inc add mov xor add inc add add add push test sldt add inc inc add mov sldt add adc inc add add inc add add add inc add mov add add adc dec add add inc add add add jg add inc add add add adc dec add add inc add add add inc inc add mov adc add inc add add add push test or add inc dec inc add mov or add inc add add add inc add add add das add inc add add add adc pop add add inc add add add dec inc add mov and add inc add add add inc add add add add add add mov sbb add add add push test add add mov inc add mov add add inc add add add inc add add add inc add mov and add inc add add add push test adc add push jg add mov adc add inc add add add inc add add add add add dec inc add mov xor add add add push test adc add and add mov adc add inc add add add inc add add add add mov add add adc js add push test push add add dec inc add mov push add add adc jl add push test and add add add add inc add mov and add add test sbb add nop dec inc add mov sbb add inc add add inc add add add dec inc add mov or add inc add add test xor add dec dec inc add mov xor add inc add add inc add add add das add inc add add add adc nop add add inc add add add dec inc add mov adc add inc add add inc add add add add mov sbb add inc add add test sub add mov jg add xchg sub add inc add add inc add add add inc add mov pop add add adc mov test sub add jo inc add mov sub add inc add add inc add add add add add dec inc add mov sub add add test xor add sub add mov xor add inc add add inc add add add das add add inc add add test or add loopne inc add mov or add inc add add inc add add add inc add mov sub add inc add add test or add cwtl push inc add mov or add inc add add inc add add hlt push inc add mov sub add inc add add add add inc add add add inc add mov sbb add inc add add add add inc add add add add add das add mov or add add add add inc add add or add lea add add inc add add add add inc add add add add lea xor add inc add add add add inc add (bad) (bad) incl add add add add push inc add das add inc add (bad) (bad) incl adc aam add push test add add add add add add lea add add add add add inc add add add jg add add inc add add add add inc add add add das add add inc add add add add inc add add add inc add lea aaa add add adc in add push test das add add push inc add lea das add add adc call test xor add and add lea xor add inc add add add add inc add add add add lea push add add adc lock add inc add add add push inc add lea push add add adc hlt add add inc add add add inc add lea and add inc add add add add inc add add add jg add add inc add add add add inc add add add push inc add lea pop add add adc add add push test and add dec pop inc add lea and add inc add add add push test adc add movsb pop inc add lea adc add inc add add add add inc add add add pop inc add lea sub add inc add add add push test daa add add add lea daa add add adc adc add push test adc add add add add jg add lea adc add add cmp add add adc rclb inc add adc and inc add add adc rclb inc add adc dec cmp inc add adc rclb inc add adc je inc add add adc rclb inc add adc pushf cmp inc add adc rclb inc add adc les inc add adc rclb inc add adc in cmp inc add adc rclb inc add adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc fs add add adc rclb inc add adc mov inc add add adc rclb inc add adc mov inc add add adc rclb inc add adc fdivrl inc add add adc rclb inc add adc add inc add add adc rclb inc add adc sub inc add add adc rclb inc add adc push aas inc add add adc rclb inc add adc jl inc add add adc rclb inc add adc movsb aas inc add add adc rclb inc add adc int3 aas inc add add adc rclb inc add adc hlt aas inc add add adc rclb inc add adc sbb inc add add adc rclb inc add adc inc inc inc add add adc rclb inc add adc insb inc inc add add adc rclb inc add adc xchg inc inc add add adc rclb inc add adc mov cmp add adc rclb inc add adc in inc add add adc rclb inc add adc or inc add add adc rclb inc add adc xor inc add add adc rclb inc add adc pop inc inc add add adc rclb inc add adc test add add adc rclb inc add adc lods inc inc add add adc rclb inc add adc aam inc add add adc rclb inc add adc cld inc inc add add adc rclb inc add adc and inc add add adc rclb inc add adc dec inc inc add add adc rclb inc add adc je inc add add adc rclb inc add adc pushf inc inc add add adc rclb inc add adc les add add adc rclb inc add adc in inc inc add add adc rclb inc add adc adc inc add add adc rclb inc add adc cmp inc add add adc rclb inc add adc fs inc add add adc rclb inc add adc mov add add adc rclb inc add adc mov inc add add adc rclb inc add adc faddl add add adc rclb inc add adc add inc add add adc rclb inc add adc sub inc add add adc rclb inc add adc push inc inc add add adc rclb inc add adc jl inc add add adc rclb inc add adc movsb inc inc add add adc rclb inc add adc int3 inc inc add add adc rclb inc add adc hlt inc inc add add adc rclb inc add adc sbb inc add add adc rclb inc add adc inc inc inc add add adc rclb inc add adc insb inc inc add add adc rclb inc add adc xchg inc inc add add adc rclb inc add adc add or lods ja add add add inc add (bad) (bad) incl add add jns add lock add add add (bad) xor mov add add add add mov add add add add nop pop inc add add add mov push arpl sbb inc add add add lea add inc add adc xor add push test or add push arpl mov add mov add inc add add add add inc add add add add add jg add mov add inc add add add push test or add or inc add mov add inc add add add push test pop add add inc add mov add inc add add add inc add add add fs add mov add inc add add add push test add add gs add mov add inc add add add inc add add add add add add mov add inc add add add push test daa add add gs add mov add inc add add add inc add add xor inc add mov add inc add add add push test das add add jg add add add add adc pop add add inc add add add add add inc add mov add inc add add add push test push add add inc add mov add inc add add add inc add add add das add cwtl inc add add add adc push test sbb add add add mov add inc add add add inc add add add add add add mov add inc add add add push test sub add mov jg add add inc add add add inc add add add inc add mov add inc add add add push test adc add jo inc add mov add inc add add add inc add add add imul mov inc add add add adc addb add inc add add add push add mov add inc add add inc add add add das add mov add inc add add test and add loopne inc add mov add inc add add inc add add add inc add mov add inc add add test sldt add jg add mov add inc add add inc add add add add add imul jg add mov add inc add add test sub add push insb inc add mov add inc add add inc add add add das add inc add add add adc mov test sbb add or add mov add inc add add inc add add add add add add mov add inc add add test or add shrb mov add inc add add inc add add inc add add add inc add mov add inc add add test push add add inc add mov add inc add add inc add add aam inc add mov add inc add add test sub add xor add mov add inc add add inc add add add das add add inc add add add add inc add add add outsl inc add mov add inc add add add add inc add add add add mov add inc add add add add inc add add add jg add mov add inc add add add add inc add add add jo add mov add inc add add add add inc add add add inc add mov add inc add add add add inc add add add das add mov add inc add add add add inc add add add jb add mov add inc add add add add inc add add insb jb add mov add inc add add add add inc add add add jb add mov add inc add add add add inc add add add inc add mov add inc add add add add inc add add add add add jg add inc add add add add add inc add add add jae add mov add inc add add add add inc add add add je add mov add inc add add add add inc add add add das add inc add add add adc clc add add inc add add add je add mov add inc add add add add inc add add add add mov add inc add add add add inc add add add jg add add add add adc add add push test and add add inc add mov add inc add add add add inc add add add inc add mov add inc add add add push test xor add mov jg add add inc add add add add inc add (bad) (bad) incl add add add add ja add das add inc add (bad) (bad) incl add add inc add adc rclb inc add adc mov pop inc add adc rclb inc add adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc pop pop inc add inc add adc rclb inc add adc test add inc add adc rclb inc add adc lods pop inc add inc add adc rclb inc add adc aam inc add inc add adc rclb inc add adc cld pop inc add inc add adc rclb inc add adc and inc add inc add adc rclb inc add adc dec pop inc add inc add adc rclb inc add adc je inc add inc add adc rclb inc add adc pushf pop inc add inc add adc rclb inc add adc les adc inc add adc rclb inc add adc in pop inc add inc add adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc fs inc add inc add adc rclb inc add adc mov add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc fcompl add inc add adc rclb inc add adc add inc add inc add adc rclb inc add adc sub inc add inc add adc rclb inc add adc push pop inc add inc add adc rclb inc add adc jl inc add inc add adc rclb inc add adc movsb pop inc add inc add adc rclb inc add adc int3 pop inc add inc add adc rclb inc add adc hlt pop inc add inc add adc rclb inc add adc sbb inc add inc add adc rclb inc add adc inc pop inc add inc add adc rclb inc add adc insb pop inc add inc add adc rclb inc add adc xchg pop inc add inc add adc rclb inc add adc mov pop inc add adc rclb inc add adc in inc add inc add adc rclb inc add adc or inc add inc add adc rclb inc add adc xor inc add inc add adc rclb inc add adc pop pusha inc add inc add adc rclb inc add adc test add inc add adc rclb inc add adc lods pusha inc add inc add adc rclb inc add adc aam inc add inc add adc rclb inc add adc cld pusha inc add inc add adc rclb inc add adc and inc add inc add adc rclb inc add adc dec popa inc add inc add adc rclb inc add adc je inc add inc add adc rclb inc add adc pushf popa inc add inc add adc rclb inc add adc les add inc add adc rclb inc add adc in popa inc add inc add adc rclb inc add adc adc inc add inc add adc rclb inc add adc cmp inc add inc add adc rclb inc add adc bound adc inc add adc rclb inc add adc mov add inc add adc rclb inc add adc mov inc add inc add adc rclb inc add adc fsubl add inc add adc rclb inc add adc add inc add inc add adc rclb inc add adc sub inc add inc add adc rclb inc add adc or inc add rolb (bad) (bad) incl add add lock add adc pop dec lcall fisttp add or or add add add or add add add add add inc add (bad) (bad) jmp (bad) inc add add inc jp add incl add add add (bad) ljmp add add add add incl add add add inc add (bad) (bad) ljmp add add add mov (bad) incl add add add add (bad) (bad) ljmp add add add pop xor (bad) incl add add add (bad) ljmp add add jnp add add add xor (bad) incl add add add mov (bad) (bad) (bad) ljmp add add jnp add add add xor (bad) incl add add add inc add (bad) (bad) ljmp add add jnp add add add incl add add add add (bad) (bad) ljmp add add jnp add add add xor (bad) incl add add add push inc add (bad) (bad) ljmp add add jnp add add add data16 (bad) incl add add add (bad) ljmp add add jnp add add add (bad) xor (bad) incl add add add inc add (bad) (bad) ljmp add add inc add add add (bad) xor (bad) incl add add add add (bad) (bad) ljmp add add jl add add add (bad) xor (bad) incl add add add jo jb add jns insb insb jne xor add push arpl fs outsb je add outsl arpl jb bound gs add jo popa outsb je add add jb imul jns add add outsb fs add dec outsl fs insl outsb add add push insb popa je arpl outsl jne xor inc popa jp jb add data16 addr16 gs imul inc jbe jb gs xor insl bound imul add add in cltd jge pop dec mov ret mov dec or xchg dec or ret dec popf cltd cmp mov mov jnp inc cltd dec fisub loope imull test jmp int3 inc mov aad call dec lods xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add add add cmpb add add add add add add jl add inc add das add xor add add xor add pop add add gs xor add add add gs dec outsb jne add inc add add dec testl add add or je jmp push mov call jmp add add outsb jne push jb jo inc js add add or inc add add add pop testl add add or je jmp push mov call jmp add add add add jb gs xor add add push add add imul inc inc inc add add inc add add testl add add or je jmp push mov call jmp add add add add inc popa fs jne gs jb je push je add add inc add add jo inc add or je jmp push mov call jmp add add add add imul or add inc gs imul outsl jb add jbe insb fs je add jae jb arpl add popa insl jne imul add add add inc add add add jl inc add or je jmp push mov call jmp add add add add outsb insl insl cs insb add add add add imul jb jo jb dec gs fs add jle add jle add add mov inc add or je jmp push mov call jmp add add add add je gs outsl popa jb dec popa jns jne dec popa insl gs add or inc add jg add add xchg testl add add or je jmp push mov call jmp add add add insl outsl jne gs gs outsb je or inc add inc add add mov add add add add or je jmp push mov call jmp add add add inc insb outsl jae inc imul jle add add lods testl add add or je jmp push mov call jmp add add add add data16 je imul addr16 js add dec jle add jg add add mov add add add add or je jmp push mov call jmp add add add add dec outsb push arpl add add add or inc add add add (bad) testl add add or je jmp push mov call jmp add add outsl outsb jbe jb inc gs jne je outsl arpl add add movsb jge add add (bad) testl add add or je jmp push mov call jmp add add add add jne inc push imul add add inc add add fdiv inc add or je jmp push mov call jmp add add add dec outsb jae jb dec outsb jne add inc add add call add add add add or je jmp push mov call jmp add add imul outsl push jns je insl push imul movsb jge add add add hlt testl add add or je jmp push mov call jmp add add add add insb dec outsl jbe dec gs outsl jb add add inc add add add inc add or je jmp push mov call jmp add add jbe popa push gs jns je insl inc jb outsl jb imul popa insb add add push add add add add cmp add cmp add inc add add add add dec add add add push add add add push add add jne insb add add imul outsb add insl add cmp and add add add add mov adc add inc add data16 add add cmp and add add sbb add push add outsl add add arpl jae add cmp and add add sbb add inc add add jae add jae add cmp and add add adc add inc add add jae add push add add add add add add add add add add add add add add xor xor add add xor xor add add sbb add add xchg add add adc add add add push inc inc ss dec dec add add pop pop jbe popa push je dec xor add jbe popa dec xor je add popa fs imul jae pop pop jbe popa inc jo xor add pop pop jbe popa dec xor jns add pop pop jbe popa push popa jb jne add jbe popa inc jb outsl jb jbe jb insb outsl ja add insl popa jae gs add dec outsl outsb jae jo outsl jb popa bound add jb jae add pop pop jbe popa inc jb inc gs jb arpl add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa inc jb push popa jb pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa inc jb gs je add add pop pop jbe popa push je inc popa je add add pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa inc jb gs popa jb add add push jae outsl outsb outsl insl imul bound popa add add push jb jo outsb fs add pop pop jbe popa inc jb jae add pop pop jbe popa inc gs inc jb xor add jbe popa push popa jb gs add add pop pop jbe popa push gs bound jb inc outsl outsb jae jb arpl add imul add and je mov gs (bad) lods xchg push dec mov push fnop cmp jo arpl dec cmpsl mov nop or xchg mov inc dec cmp loope dec lods xor or stos add xchg push jb jae outsl jb arpl je jb add gs jb outsb jae add je outsb gs jb gs gs xor dec jbe jb je jb outsb add jne imul add popa outsb popa add add popa arpl jae outsl jne jb jbe insb gs push jb outsb jae popa jo xor add imul add jae bound je outsb outsl jne add add push imul add add imul insb je jb add imul jb insb insb gs outsb addr16 insl gs jae insb imul add jne outsl jne je add add arpl insb outsl jno imul add dec gs jae fs gs inc jb outsb fs insl insl outsb add popa outsb imul insl imul inc imul outsl add inc outsb je insb imul gs aaa add add jae arpl insb imul jb dec popa insb jbe jbe gs push arpl je popa insb je add inc outsb jae je insb jae jae insb popa outsb outsb jae add push je arpl popa jb bound add imul popa fs imul jae add dec imul imul xor add add jne imul dec outsl jae imul gs jae add add jae fs add jae gs gs add arpl jb gs outsl insb fs jae add je jb jae gs dec popa outsb fs insb popa outsb outsb jae add add jo outsl outsb gs gs dec je jb imul outsb outsl insb outsl imul gs popa addr16 add jb imul add outsb jae popa jbe add bound jae add add sbb inc lret das out inc mov orl inc cmp lahf xor push shrl xchg rclb jmp dec or in inc cmpsb xchg add sti push push insb jbe jae popa popa outsw jb jb fs outsb add bound fs outsb jae gs add inc outsl jb push jb imul popa jb gs add gs add add push jae jne jae jb xor add insl add add push imul jae add jbe insb imul outsl jbe jb data16 add add jb jb gs add inc data16 je addr16 data16 outsb outsb add add fs imul jo imul add inc je insl push imul arpl je popa insb jae addr16 push imul outsb je add jo arpl add add inc popa jb gs gs add bound popa gs arpl popa je jb add inc gs jae add imul add jae outsb je imul add add popa imul gs outsb xor add insb cmp add push jne outsb outsl jne xor jo outsb popa insb add insb imul outsb gs insb jae jne fs add xor add add addr16 outsb fs popa add arpl outsb imul add add jne jo imul outsl add outsl jo outsb imul insb outsb gs add push gs imul jae imul jae gs gs inc jne fs outsl jne add add insl data16 fs insl jb popa fs add add jae jns add push popa jns popa outsb add push arpl jae imul add dec popa jb push xor add arpl outsl outsb je arpl push jo arpl insb imul xor push insl insb gs gs add add je popa imul popa insb jbe jne gs add insl imul add imul insl gs jae add add push gs jne popa bound add fs addr16 imul push outsb jne gs je outsl outsb add add inc popa arpl je je jbe insb jns add inc popa outsb jae jb add arpl jns imul xor imul add shrb nop jmp lds test push (bad) dec mov (bad) mov (bad) faddl inc stos outsb rorb inc imul jae add inc in sarb test rcr movsb arpl imul aaa add jb popa addr16 add add arpl outsl add dec outsl imul outsb gs add add bound gs push imul jb add gs fs je jb outsb addr16 add add popa outsb je imul insb jne imul jb fs je outsl outsb jae fs fs jae outsb xor add je jb jae imul outsb imul jb imul jo insb jns arpl insb popa insl imul outsb je gs add jb imul add outsb jne popa insb imul add dec jb jb je jb fs popa fs jb add add popa fs outsb fs gs add add dec outsl imul add push jb arpl insb gs add outsb outsl outsb jbe jb insb outsb je jns add inc outsl jb popa popa xor add push je insb imul add insl insb imul insb jbe add add inc insb outsl ja jb xor add add insb imul add push insb popa ja add add fs gs add add insb je jo outsl addr16 insl insl gs outsb addr16 push outsb bound je bound add jb popa popa jb xor add jb push fs add jb imul gs gs add push je gs outsb xor add dec jne imul insb insb gs add outsl je jb imul imul add push popa je imul je je add add push jo insb insb gs outsb fs add gs gs jb outsb add add inc gs jb je outsb outsl insb add inc outsl jne je imul add add jbe add add je outsb aaa add insl gs fs gs add add push insb jns outsb imul jae add jbe gs imul add add jne gs gs add add imul popa jb add add je bound imul je push jae add gs gs insb jns push outsb fs popa addr16 jo gs add add add push inc xchg daa inc add mov xchg dec mov and inc jb outsb popa insb outsb jae add inc jo lods adc dec mov ds add or iret lock test inc pop adc (bad) and insb jae jns jae add add popa data16 outsl imul gs add je imul jae add inc insb imul popa jae add add inc fs outsb add push gs add push insb je popa jb je popa insb imul gs outsl jb jb outsb gs add add inc push add inc outsb jo imul add add imul add add xor inc popa jb outsl insb insb imul jne je outsl outsb jae popa jo outsl jb gs add add popa jo imul add push popa insl gs imul jne fs imul outsb cmp add add outsb data16 addr16 gs add add jb jae add je jb gs add push popa je jb jae xor add inc gs popa je outsb add add outsb outsb jae add insb imul insb jne jo outsb add add outsb fs outsb add add push insl gs je jae imul outsb xor add add add add popa outsb addr16 outsb gs add add push insl insb gs gs xor gs outsl jns jb outsb addr16 add inc outsb addr16 imul dec popa je jb jae outsb add add imul jae jb push imul add add gs imul dec popa insl gs insb gs gs inc bound insb jbe jb jae add addr16 outsb addr16 jne imul add add dec jns popa outsb je imul insb imul gs gs jo popa insb outsl jo gs jae add push outsl insb outsb outsb imul outsb gs add outsb imul jae popa bound imul jae add inc popa jo imul add gs imul jae outsl jo jb add bound jae outsb gs add add insb jo arpl add jae imul outsl outsb xor add jo je popa add arpl jae popa je add dec outsl outsl jb jns add ja data16 addr16 outsb add imul jb jb add je insl popa outsb fs jae add add outsw jb xor add aas adc push or or iret push loop scas mov dec xchg pop add add jp aas dec dec mov cmp jl orb mov loope jmp outsb ja insb arpl gs jns insl imul outsl addr16 data16 add outsb popa insb add add jae gs popa jb outsb add add push outsb jae outsl jbe outsb xor dec insl jo jae popa bound add imul add push imul popa jb add add push popa insl jae imul gs gs xor imul push jb outsb fs gs add outsb imul jae je jb gs add dec jb imul outsb gs insb popa fs xor add jb imul gs jb imul xor add je outsb imul jb addr16 jne insb popa add add je jb jb add add push popa outsb gs inc outsb je jno popa jb popa outsb imul imul popa popa insb outsb cmp add add jae addr16 add add gs popa jb jb add push jo arpl aaa add add add jae imul jae add add popa outsb arpl arpl add add imul add imul add jae outsb je jns add add jo gs imul add add insb gs gs add je imul imul jae add fs je popa outsb jae outsl jb popa je outsl outsb outsb add imul bound addr16 fs jbe jb push gs arpl outsl ja gs outsb je add add imul popa popa outsb fs add push outsb insl imul imul add push jb fs je outsb jae popa jb add je jbe jae jne fs jo jns push arpl je fs add push jb arpl xor dec gs imul bound jne outsb gs add add jae outsb jae imul jae add add gs push add dec insb insb jne je popa je jb add add inc gs arpl add add jbe popa data16 insb fs add add je jb arpl jo jae xor add jb outsl insb fs add xchg xchg or dec scas inc inc jecxz mov out or fimull int and cmp adc mov mov xchg xor push stc or or mov mov imul bound fs add popa insb imul jne fs imul add inc insb push imul insb add arpl jo jae imul jns popa jae outsb imul add add jb insb popa jb imul add jb jo gs add inc jbe jae jbe jb imul je jb add jbe insb add add push outsb gs popa jae imul add push jns gs add dec jns outsl outsb gs add add bound imul add dec jns popa data16 gs gs add jb insb gs jae jb add insb outsl outsb gs add add outsb gs popa addr16 add add popa outsb je jae dec popa insb gs add inc jb insl gs jb add add outsb bound jae jae inc jb outsb outsl add dec imul je add inc push gs imul add add outsb outsl outsb imul outsb je add jbe imul add jb imul jae jb add fs insl popa insb gs add add push popa insl imul outsb xor add outsb fs addr16 fs xor add inc outsl outsb imul push gs jne add dec insb outsl imul add outsl outsb arpl outsl jo outsl outsb jns add add push outsb insb gs outsb xor fs outsb outsb add add outsl arpl je jae add jb outsb addr16 gs gs gs add add outsl jb outsb add add push popa addr16 jb add jo outsb je imul add insl gs jb jae add gs outsb outsl gs outsb jae add addr16 jb outsl outsb cmp add outsl jb outsl outsb imul data16 popa bound add push jo insb outsl jo popa addr16 xor add jb data16 popa jb data16 je je add jbe gs gs add add popa jae insb insb popa bound add add jbe je jb add add sbb cmp fwait jecxz fdivs inc dec add sarl lahf add das jecxz fldl add add scas push fidiv aam cmp in shrl cmp das xor dec dec gs insb ja jb jae add inc jne jo jb add outsb insl jne arpl add inc jne data16 fs add popa jb gs jae popa insl insl gs je outsb jae add jae outsl insb gs add outsl outsb fs popa bound jne fs jae add je outsb imul add popa jo insb jne imul jbe jb je outsb addr16 outsb xor imul add insl imul jb jae add add outsb popa jb jne fs jo gs jo imul outsb je imul popa jb jo arpl add add jbe bound fs add outsb fs jae je outsb fs gs add add jae gs je fs outsw jb jns gs add add outsb push imul add inc outsl outsb outsb fs add add imul insl popa outsb fs imul gs add arpl jae push popa insb add insl popa je insl jns gs add add jae add add add insb popa outsb fs jb jae jb xor bound fs add jae add add push popa bound outsb popa je add add jae jo bound add add popa fs outsl addr16 add outsb outsl jbe jb outsb addr16 inc push outsb xor add je insb imul jae inc data16 imul aaa add add push jb insl jo popa insl jo jb inc gs imul add fs jb je jb add add inc gs outsb je addr16 jb je add dec jne je popa insb xor add add outsl arpl jb outsb je jb gs popa data16 jb push je add add popa insl insl gs jns je insl jae push imul insb popaw jb add add push fs imul add arpl add push jns je outsb gs gs jo jae jne popa je outsl outsb add arpl add jne je jae jo gs add insb imul imul add add jo jb jo jns insb jne add jae insb je je imul (bad) mov mov out add lahf cmpsb movsl js test mov data16 scas cld shrb sub int xor add xorl dec popa gs addr16 insl insl gs add add inc popa bound imul add add outsl ja aaa add push imul outsb add jb popa outsb fs gs jb jbe jae outsl outsb gs add push jb jae jne imul insb insb gs dec outsb je popa jbe insb jbe insb popa jb add inc outsb bound outsb gs inc imul gs add add insl imul add gs outsl jbe jb add dec gs jb outsb addr16 jns je xor add add arpl jae outsb je add bound outsb outsl insl jae push je ja jb gs add imul add jb imul je outsl outsb jae jo outsl insb fs add gs jb jae outsb addr16 dec jae push xor add dec outsb je imul aaa add add bound jb outsb imul outsb je bound imul jae outsb jae add add insb insb imul push jb gs add insb jbe imul jb outsb addr16 add gs outsl jb outsb add jae arpl jae imul fs gs outsb fs add inc imul insb jae outsb gs xor add add addr16 gs outsb fs add jb fs popa outsb fs outsb jae push fs jns outsb imul popa popa fs add add inc outsl jp outsb imul je jae add add je jb jb add dec jae jb outsl fs popa insl outsl insl gs jb add push outsb fs popa fs jae jae jns fs add add jae outsl jb jb addr16 add add popa jb imul popa outsb outsl outsb jae add add fs outsb add popa jns outsl jb add add inc popa insl popa arpl jb add add jns gs bound insb outsb jae add gs imul jae add add arpl gs gs add jb imul fs add jne gs gs add jb gs popa bound add add jae outsl outsb insb gs add push jns jae add add outsl jbe imul add add jae imul add jo outsl outsb imul xor add popa outsb imul je jb add add fs inc mov dec aas pop mov dec jno rcr mov dec cwtl outsb gs jo pop push aas ror inc mov pop inc nop mov add mov xor popf dec sub movsl mov jne insb gs fs add add gs gs add dec outsb outsl jo xor add popa insb jae jb add add jb jbe je jae add outsl fs outsl outsb add jne xor add push outsb bound jns outsb je jns push imul insl imul add add je popa insl imul popa outsb fs bound add add jae gs outsb jae outsl outsb gs add add dec imul cmp add fs outsl jae add add bound gs add gs insb insb popa imul outsb gs add add jb popa jne je add add gs jb gs jae jae add add outsl outsb insb jns jae imul add add jb je gs jae jb gs add bound add add imul jb jb gs add jbe jae imul dec popa addr16 popa insb insb outsb xor add add jo gs add imul add inc outsl jb imul jae insl insl gs gs add add jae jb add insb insb gs je outsb outsb add add inc bound outsb fs inc imul imul arpl jb add add bound outsb addr16 gs add je gs popa jns add add dec popa outsl insl outsl jb push add add outsl jb addr16 insl jae add popa popa insb gs imul fs insl popa outsb gs xor dec imul xor add fs jae insl popa je aaa add add inc fs imul add add dec popa push jb je xor add data16 jne add outsl jbe jb gs insb imul insb jns add insl popa insb popa jae jo popa jo add push jns push add push outsb outsb gs arpl add dec insl jo je gs imul inc outsb fs add add outsb gs add add inc jno gs add bound imul outsl fs add jae gs add add add sub out mov fs out dec mov mov mov jne in inc mov (bad) clc adc loopne das adc push aaa jge inc scas cmpsb iret call imul outsb imul gs jb outsb outsb jae add add arpl outsb imul je jne add outsb imul jae add add fs addr16 popa addr16 je gs outsb jae add jbe imul outsb fs popa jb outsb outsb add add popa outsb fs imul imul add add push jb push arpl gs jns add add jae outsb imul dec gs outsl ja jne xor add insb je outsw outsl je add imul gs add dec outsb fs je outsb cmp add inc insb insb gs gs add add jne outsb popa insb imul jae add add inc insb outsl jb imul imul insb add add addr16 bound add jb popa outsb fs gs jb jae jb gs push imul gs popa jbe add add push je jbe imul add add add insb popa jb outsb gs add jb imul imul je gs xor add push outsb insl jne jne insb xor add jae jb outsb addr16 jbe add popa outsb imul outsl insl imul jns push push imul push jo jb outsb addr16 add push insb jne outsb imul outsb gs add add dec popa jae outsl imul popa insb imul jae popaw bound imul gs add add je popa je insl insl popa jb push jb bound data16 add jb insb gs outsb je outsl outsb imul outsl arpl outsl insb insl jae gs add push push data16 jb popa jb add jne imul add add push gs popa je jp je outsl outsb add add je imul jb jne imul outsl outsb popa je xor add inc outsl outsb gs jae add insl popa je jae jb outsb addr16 add add arpl outsl jb outsb jae add add outsb je outsb jne outsb je add popa insb jp jb jbe jb add add inc outsl outsb imul add fs jne insb imul add sbb in add popa outsb pop xchg fcmovbe aaa in push jl aas out cmp in push inc lea mov jg (bad) mov (bad) repnz mov fs repnz xor outsb addr16 gs outsl fs jae add add insb bound insb popa jb add add jae outsb imul jns insb outsl je outsl outsb gs add inc jne je addr16 jb insl outsb jae add push popa outsb outsb popa jae push push xor add add imul add insl jb imul gs add popa jae outsl data16 jb outsb imul insb gs add outsl bound jne outsl jne add je outsb insb gs popa arpl push jne insl outsl outsb je outsb add addr16 outsb addr16 outsb add inc imul ja outsb arpl add jae outsb gs add add gs insb gs add dec popa gs popa je imul add je addr16 add add gs jb add add inc gs imul add push outsl insb jns push xor inc data16 imul add imul jb add add jae insb addr16 popa popa insb add add jb outsl je imul popa bound add dec jo jne imul jno popa je jb popa insb add inc popa jae jb je jae outsb jae add add insb imul fs add jae jb fs jb gs gs dec data16 je imul gs add add popa popa jb aaa add jbe outsb gs xor add inc insb imul add push gs outsl outsb fs je cmp add add imul add inc outsb insl gs fs jae jae jb outsb imul add jb je push outsw jb imul jb add imul fs gs add fs insb je addr16 add add push outsl outsb insb imul popa add add gs imul add imul outsl ja jb jb add add je popa jne imul add add bound jb add inc jb push popa insl jo outsb jae add fs popa js add add imul add jo je outsb jae popa outsb addr16 add dec outsl je bound insb jae add popa fs imul add add dec xor aaa aas mov mov xchg xor push stc or mov dec scas inc inc jecxz mov out dec lods xor or stos add xchg popf or add add add add fs insl outsb add jne gs jb outsb jae add add inc add add (bad) (bad) (bad) jmp add gs jb outsb jae add dec or add add add add or data16 outsl jb outsb add adc jae gs jo insb popa imul outsl jbe outsb add add adc add add add add push add gs add push add jo gs insb outsb je jns add prefetcht0 add add add add je add pop add outsl jb gs adc adc add add adc inc jns imul insb gs gs add or push popa insl insb gs jb jae add push jle adc add add add add imul add or push gs popa fs cmp cmp incl sub add push or bound jb gs add or push imul fs add adc and add add add add je add or dec outsl outsb outsl gs gs add add (bad) add add add add add adc inc jbe jae jbe jb imul je jb add push add push add add iret add adc add add add add push add gs popa jae imul add pop add popa jb gs add or push adc add add add or add data16 popa bound add or jo gs jb outsb imul in lods divps pop movups add add add add or inc imul jae add push add jo jb push outsb popa add push imul add add add add outsb add or inc gs gs gs add psrld adc add add add add jb insb popa jb imul or push gs jb gs popa jb add or movups incl sub add push or dec jns outsl outsb gs add pop add jne jae jae add add punpckldq pi2fd add add add add or inc imul jb add or jae jb popa outsb gs outsb add adc add push add add or dec insb outsl imul add add jb gs popa imul bound ret movsbl adc add add add add pop add insb gs outsb xor add push add data16 sub nop or add adc incl xor add adc add insl gs jb jae add or inc popa outsb jae gs jb bound add push push adc adc incl add add or inc outsl jb insb gs jae jb add or inc popa jb bound imul add or add pop adc add add add add add jbe gs gs add or inc jns jbe imul gs mov adc adc incl xor add adc insl jo jae imul jns add pop add arpl jns add or adc ucomiss adc incl xor or inc insb push imul insb add adc inc insb arpl outsb addr16 jbe outsb add xchg dec add adc add add push add jb imul jae jb add push add je jb ja outsb gs outsb je add add or add push add add add add push add insb jbe add or push popa outsb imul jb add or jge daa add add add add or push je gs gs add or inc gs popa je outsl jo arpl add add repz push adc add add or inc jb insl gs jb add adc inc jne outsl jo jo jb popa insl outsb je je add push addr16 sbb incl xor add sbb add jo outsb je imul add or inc insb outsl jae popa bound add add add add add add gs imul add or push jns arpl imul and rolb stos or sbb incl sub add sbb outsl outsb outsl add or dec outsl bound fs add or ret or sbb incl add add or inc outsl outsb imul add or push jb outsl insb popa jb add add adc insb or sbb add add or popa jae insb insb popa bound add or je gs outsl addr16 insl add push jbe add jge adc add add add add adc inc jb outsb arpl outsl jo outsl outsb jns add pop add jb outsb xor sahf adc push das adc pop add add add add or inc push gs imul add jbe addr16 imul clc or inc or add and incl sub add and add insl imul outsb xor add or imul add or add or add and incl cmp add and imul outsb je add adc outsl insl popa popa jae imul jb gs add push stos adc pop mov adc add add add add add gs outsb outsl gs outsb jae add or insl jne gs gs add add add and incl sub add and insb add or push jne imul jb add or add and incl sub add or inc popa addr16 jb outsl outsb cmp add or push jo arpl jns add add fisttpl add incl sub add daa or fs outsl arpl je jae add add popa xor cmp int3 adc incl xor add sub add imul jb xor add or push imul gs add push pop adc daa add add add sub add jb data16 popa jb data16 je je add or insb popa jbe jb outsb jae add or jnp adc add add add add or popa data16 gs gs or popaw arpl insl imul or adc adc add add add add pop add je outsb imul inc gs outsb imul gs gs add push (bad) adc sub incl xor add sub add jae popa outsb addr16 add or push jns outsl jo imul add add push mov mov sub incl das add add outsb gs popa addr16 add or jae jb imul jns add or jle adc incl add add or bound imul add or dec jne fs jb je add add cwtl or add add add or inc outsl bound gs add pop add outsb jae imul jae gs outsb imul add or add cs add add add or outsl jne bound fs add add push jns add or or (bad) or das add add add add or inc popa outsb bound jae jae add push add jae outsb add or loop adc add add pop add popa outsb je jae add or dec outsl jbe fs outsb fs gs add adc or xor incl add add or fs addr16 fs xor add sldt imul jo jne je gs add cmpxchg in pushw adc add add add add add insb gs add or dec jne outsb fs add adc adc add add add add outsl jb outsl outsb imul add gs jae je outsl outsb add add ficom sub adc incl sub add ss add popa insb imul add push insl jne insb gs imul add push cmp jmp fwait adc xor add add pop add addr16 jb add or inc imul add adc adc add add add int3 xor aaa (bad) faddl inc stos outsb rorb jb shrb nop jmp lds dec lods xor or stos add xchg ret add add add add jo popa outsb je add popa jb gs fs imul outsb xor inc add add (bad) (bad) (bad) jmp add jb gs fs imul outsb xor add adc sldt jne add inc add add or dec popa insb insb jne imul add add arpl popa insb add adc adc mov incl aaa add add str outsb imul jb imul add push add insb imul insb jae jb gs add add or add add add incl cmp add add add jns jb jb je outsb outsl insb add adc insb fs imul je outsl outsb jae add add adc add incl das add add add imul add or push outsl insb gs gs gs add pop lahf add add add add incl sub add add jb insb gs outsb fs add push add imul add adc incl sub add push or addr16 fs jb add pop add jb popa jae add adc add add add or inc outsl jne gs gs add pop add insl insl gs xor add add adc add add add pop add je imul add gs jo popa jae jp jae add adc push sbb add add add or add arpl insb gs add or jne imul add or adc clts or or incl xor add or add jb imul gs gs add pop add arpl xor add or adc or incl xor add or add jb popa popa jb xor add push add jb insb imul jae add add push sub jp adc add add add add add je outsb outsl outsb gs popa aaa add or dec popa je arpl add add or adc add add add add outsl je jb imul add jae bound jae jb je add add adc or incl sub or inc outsb insl gs fs gs add pop add jp data16 add adc adc or add add or jae insb gs outsb gs add pop add jb jb xor add add adc add add add add adc inc jb insl fs je jb outsb addr16 add or data16 jne insb imul testl adc add add add add or push je insb imul add or inc popa addr16 outsb add or or (bad) push adc add add add add or dec popa outsb jne popa insb imul add outsb fs gs add push mov jb xchg add adc incl add add or dec gs bound imul or fs je imul mov pop adc add add add add add outsb je gs or jb insl outsl jb push add add pcmpeqb cltd add adc incl add add fs popa addr16 jo gs add or inc outsb jae fs je outsb gs add add fisttpl adc incl das add add or inc outsl jb popa popa xor add or push insb jae jae gs add add stos shld adc add add push add imul add insb gs add or adc ret add push add add add add or push fs insb imul insb jbe add add inc outsb arpl mov adc or pop add add add add or push imul jb add add imul or adc add add str insb imul insb insb gs add or jne data16 arpl outsb popa insb add adc or sbb incl sub or push gs gs gs jb outsb add pop add imul xor dec or adc adc add add add add add imul outsw jb jb gs add or add rolb sbb incl xor add sbb je jb jae imul add outsb jae bound jb bound jae add add pusha or or sbb incl xor add push lldt jns outsb imul jae add or inc jo arpl insb imul (bad) or (bad) add sbb add add or inc insb outsl ja jb xor add or inc popa je jns arpl push arpl ucomiss adc push add add add add push add insb jns arpl insb popa insl imul inc jb jae insb imul or add pop add add add add push add outsl fs je outsl outsb jae fs fs jae outsb xor add or dec popa jae outsl imul jo fisttpl mov xchg adc and incl xor or gs imul add push add popa jbe arpl push insl add adc incl das add add or popa data16 popa addr16 add or fs jb insl outsl jae xor add add add incl daa add add add popa jb add or inc fs imul push adc add and incl xor add and popa fs outsb fs gs add or push gs gs outsb add mov movl adc incl xor add or push outsb bound je bound add or insl popa imul add or adc cli or and add add or arpl gs gs insb jns add push add popa outsb imul jb xor add add ja ja adc add add add add or jb push fs or je jb popa insl gs xor add or or ljmp xor add sub add je push jae add or addr16 outsb fs add or or adc add add or push jo imul add adc inc jb gs addr16 gs jb imul mov add add sub incl sub add sub add jbe add or push jae gs outsb jae add or lods or sub incl sub add sub add popa gs outsb xor add or dec jne jae outsb addr16 add or pop adc add add add add popa ja add or jae popa popa outsb fs add or add adc incl das add add pop add bound gs add push add outsb fs je jb add add pop mov sub add add add jns add or jo popa outsb je jae imul add add cs add add xor add arpl outsl add or dec arpl outsl arpl popa jb add push gs push cwtl or das add add add xor add insb je jo outsl addr16 insl insl gs outsb addr16 add pop add jne je outsb add add sub xor incl sub add xor jbe jb insb outsb je jns add add jb add add or adc incl das add add or push popa je imul je je add or inc outsl gs imul mov rcll or xor incl xor add xor add je outsb aaa add adc outsw jb jbe outsb imul jb add pop push push fildl add add add add jb imul lldt outsb gs imul add push xlat adc test adc incl sub add or dec jb jb je jb fs pop add jb imul mov inc adc incl xor add aaa or inc outsl jne je imul add or jae outsl insb outsl imul add or ss add dec xor aaa flds push lods adc dec mov ds add or mov push inc xchg daa inc add mov cltd iretw adc pusha rcll ret or add add add inc popa jb imul jns or jne je popa jb jae outsl jbe xor sbb add and and (bad) (bad) jmp add je popa jb jae outsl jbe xor xor xchg push add cli add add add inc add add add add or bound jae outsb gs add adc inc popa outsb fs jbe addr16 jae add push pop add adc add add add add or data16 fs outsb add or inc gs ja arpl add add or add incl sub or push insb popa jae outsl jo jb add or inc js addr16 insl imul cli add or adc add add add add add gs imul add jns je outsl insl insl add add (bad) add add incl sub add add imul jb jb add pop add jne fs add add add mov adc incl sub add push or dec imul add or je je jb addr16 add or push or add add add add or inc jo outsl jb jp jae add or inc push insb imul outsb jae add punpcklbw add adc add add add add adc dec jbe jb outsl jb jb outsb gs add or inc jae popa jo jae gs add add or adc add add add add adc jne addr16 outsb addr16 jne imul add or arpl jb arpl jne add or add or incl sub add or add outsb outsb jae add or outsw jb jb outsb fs add adc add add add add or jne je jne outsb gs add or inc outsl jb jbe jbe gs add or add or incl sub add or add insb imul add je outsb popa jae add pop clc add or incl add add jb outsl jb jae add or push imul outsb imul push pop add push cmp adc incl sub add push or push imul jae add push add jbe cmp add adc adc add push adc add add pop add je outsb add or dec outsb outsl insl popa outsb imul fwait or adc add add add add lldt je popa jb je popa insb imul push add jb imul insb insb jns add adc add adc add (bad) incl sub add adc je imul outsb gs add push add popa je jae add add xor adc add add add add or insb outsl jns jb outsb addr16 add sldt fs outsb gs gs or adc adc incl xor add adc dec jns je insl popa outsb fs jae add or push outsb imul xor mov in adc incl sub add adc add jae popa je outsb add add add jns gs xor add adc pop add adc add add add add imul add or dec outsb outsw jb popa add pop inc add add add add add add add jb add or push gs gs outsb je add add adc add adc add add pop add jb jae add add gs add adc pop adc add add add add or imul insl jo outsb add add add insb jae jae imul add adc add adc add add add add or push je jb jae add adc dec jbe jb jo arpl popa je outsb addr16 add push jg adc bound adc add add add add push add insb imul gs gs add insb popa outsb fs add adc jne incl sub or push popa insl gs imul push fs addr16 fs add add or sbb incl aaa add add add outsb fs imul outsb cmp add or jb imul outsb jae add pop push or sbb incl sub add sbb jo imul or je jb jo outsb jae add push in push je lret sbb incl add add or push popa je jb jae xor add or inc jb push jns popa add pandn adc incl and add pop add push popa imul dec addr16 xor add push fldl out adc add add and add jae insb jbe jb jae add lldt jo jb jae insl insl gs jae add adc incl xor add and add jae imul outsl outsb xor add or popa insl imul add pcmpeqb test test incl das add add adc push insb popa outsb addr16 outsb gs add add imul pop adc adc add and incl sub add and add addr16 imul add add jb je jb add or adc add add add add add gs insb gs gs add or push gs outsb je insb gs add or mov add adc add add adc push outsl insb outsb outsb imul outsb gs add or push gs jb imul adc sbb in add and incl sub or inc popa jb outsl insb insb imul je jbe gs jne add adc or mov incl add add or insl imul je add adc pop outsl outsl jo popa jb popa arpl outsl imul add adc es add or inc jbe jae jns jae add or outsb imul imul enter (bad) adc daa add add add add or imul data16 addr16 outsb add or outsl outsb jae popa popa insb gs add add add add add or inc outsb jo imul add adc dec outsl jbe fs bound addr16 aaa add or mov adc add add add add adc push imul jae popa jo outsl jb gs add or push imul insb jns add or sbb add sub incl cmp add sub add outsb imul jae popa bound imul jae add or dec popa jo je insb imul sbb jle push adc push adc add add add add jo je popa add push add jae outsl jb popa outsb imul mov dec or adc incl daa add add push add insb jo arpl add pop add outsb jne je add adc mov sub add add or dec jns popa outsb je imul push jae add or add fcoml adc add add add add or inc insb imul popa jae add adc inc jb insl addr16 outsb addr16 gs outsl fs jae add add fisttpl aad adc add add add add or inc outsb gs imul add or inc gs imul add or add xor incl sub or gs gs xor add jne arpl add adc add adc adc add add add add lldt popa data16 outsl imul gs add push add fs add or or pop dec add xor incl xor add xor add jns jne outsb add or gs arpl insl imul mov mov mov incl cmp add xor imul jae jb push imul add or push jb jbe imul adc pop adc adc incl sub add ss add outsl jb jns add or gs jb outsb popa imul sub jmp jb icebp add xor add add adc push insl gs je jae imul outsb xor add pop add popa outsb jne add pop jle mov add add int3 xor aaa aas ror inc mov pop inc nop mov add or inc ljmp pop mov dec cmp xor or stos add xchg rorb add pusha add add verr popa addr16 gs imul or jns bound popa outsl addr16 jo jns add add inc add add (bad) (bad) (bad) jmp add insl bound popa outsl addr16 jo jns add ret add add add sldt inc add add add add or jbe jae imul add or imul jb jae jb add imul adc add incl sub add add add jne jae add or push je addr16 add add mov adc add add add add add popa popa insb gs imul add je imul add or orl add add add add insl popa jns add or bound insb gs jne add push aaa or add incl xor add add bound outsb fs add or push jb je jo insl imul add jecxz adc incl das add add or dec outsb outsb outsb gs add or imul jb add or add add add add add gs add or bound addr16 popa jb outsb add add call incl add add adc dec outsl outsb insb jns jae imul add adc jo jb je jns outsl imul jp jae add adc or add adc pop add add add or add popa insb jae jb add or push outsb insb outsl outsl jae jae add setns jg movsb or or incl sub add or add je popa insl imul add add jb gs add or add add add add or push outsb fs outsl jae add adc push push outsl jo jns imul popa insb add adc pop pop xor adc add add add add add bound jns outsb je jns add or push outsb je outsl je jae insl gs add add pop adc add add add add insb outsl jae outsl jo xor add pop add fs call or or incl xor add push or inc fs imul add or push outsb jae outsl jbe outsb add or push aaa adc or or add add push add bound outsb addr16 gs add or push jb jae imul mov mov pop adc add add add add or je imul outsb fs popa add add add je data16 insb gs add or add (bad) incl add add push add jae jne add push add jb popa je gs gs imul jae add adc mov mov adc add add add add or push imul gs jae add pop add popa bound add pop mov inc adc adc add add add add or push popa outsb fs bound add adc bound jae jns imul je insl xor add push mov or adc incl sub add adc add push jb je xor add or push jo outsb imul adc or in adc add add add add gs insb insb popa imul outsb gs add or jae jb jae fs add adc adc add push adc incl sub add push pop add jae jb add or dec outsl outsb arpl outsl insl jns add or sahf movups add add or inc outsl jb popa jne je add or arpl imul arpl jae add adc add push add add add add adc dec gs gs outsb jae outsl outsb gs add or push gs imul imul ficom adc add add add add or insb popa addr16 jb gs add or popa insb outsw outsb jae outsb add push xor adc add add add add or dec gs insb gs je outsb outsb add or push push popaw js add add and push adc sbb incl sub add sbb add outsl jb addr16 insl jae add push add imul pop adc add movups add add add add add outsl insl outsl jb push add or insl gs insb insb gs add add imul add add add gs jb gs jae jae add or imul outsl outsb gs add adc or sbb incl xor add push push add jb je gs jae jb gs add or jae imul add add add sbb add add or gs outsb outsl jo jns push add add outsb arpl je jae add adc in fiadd adc add add add add add insl xor add or inc imul add or add pop add add or inc imul jae add adc outsl jo gs jb outsb addr16 je fs add add adc inc pop adc add add add add or dec jns jb jae insl popa je aaa add or data16 imul add or or and incl sub add and add gs gs or push arpl jo imul adc or or adc add add add and add jo je gs imul add inc popa outsb insb popa fs gs add adc or adc incl xor add and jae gs add adc inc popa jae imul imul adc or adc incl add add or inc imul imul add outsl jae imul outsb jae add add or mov adc add add pop add fs outsl outsb add or push outsb fs jb data16 add or add lahf adc es add add add or insl popa insb popa jae jo popa jo add or imul outsb jae add adc or daa add add add add or push outsb imul add pop add gs add add decl jl adc add add add add or bound imul outsl fs add or jo jb outsl jb je jb add add add sub incl xor add sub add outsl jo xor add adc push outsb outsl insl jae imul jb gs add push pop adc pop adc add add add add add jo gs add pop add imul add setno (bad) or adc sub incl sub add sub insb insb imul add or push outsb bound ja jns add push mov in setbe adc incl xor add cs gs add adc imul outsb addr16 outsl jb popa je jb xor add add xor adc add add or popa je imul add pop add jb outsb jae add pop pop push push or add add add add pop add bound gs add or bound imul add or push adc add add add add adc outsl jbe jb gs insb imul insb jns add or inc jb insl imul or add jno adc add add add add or outsl js arpl jb add pop add fs fs add add add add add adc inc outsl jb imul jae insl insl gs gs add or jb imul add or add add add add add outsb gs arpl add or push insb arpl imul dec or orps adc add add add xor outsb jne insb gs fs add push add insb jbe jae add add add insb or xor incl xor add ss dec popa addr16 popa insb insb outsb xor add push add outsb jae gs popa insb imul or or incl xor or inc outsb fs insl popa outsb gs xor add adc inc gs outsb outsw jb popa je jb add cmovae add incl add dec xor aaa add jp aas dec dec mov cmp push or or cmp xor or stos add xchg fimull add inc add add push add outsb fs add imul add add inc add add (bad) (bad) (bad) jmp add popa jbe ja add pusha adc add add adc add inc add add add add or dec popa insb gs gs add or jb popa imul add push sub pop or movups add add add add or dec insl jo jae popa bound add or outsl gs outsb imul push sub add incl xor add add gs data16 insb fs add or addr16 je gs outsb add push add xchg add add incl xor add add add insl imul add imul push popa popa fs add adc pop adc add add add add je jb jb add push add gs outsl gs outsb imul dec add adc incl sub add push or dec jbe outsb imul jae add add dec imul jno sbb dec push adc add add or dec gs addr16 add push add js popa je outsl jo arpl cmp add or rolb incl xor add or add insl jae imul gs gs xor add jae popa jae add or adc imul pop add add add add add dec popa jp add or push popa je outsl outsb imul bswap add orl or incl sub add or add imul add or push gs outsb gs jb insb cmp add adc push stc or incl xor add or add popa arpl outsl ja gs outsb je add or push imul gs adc add or incl xor or inc popa popa outsb fs add adc inc popa je imul gs jb xor add or cmp adc add add add add je jno popa jb popa outsb imul or popa bound imul add (bad) add push adc or incl xor add push push add outsl fs je outsb jae popa jb add or push jns insl imul add or or or add add push add je jb arpl jo jae xor add or jb insl jne fs outsb gs add adc pop xchg adc adc add add add add add insb popa add or push popa outsb jae insl jae add or push pop add incl das add add or bound jbe popa jb jb add or jb outsb imul gs add add adc dec adc adc incl sub add adc add imul or push fs jb gs outsb fs or jge cmpsb add adc incl cmp add adc add jb imul gs jb imul xor add or inc gs outsb jae jae add add add adc incl sub add adc add insb jne add or inc data16 outsb arpl jae add or add adc incl cmp add adc jbe jae jne fs add push add outsb je imul jb je jb jne xor add or pop pusha add push adc incl cmp add push adc fs je popa outsb jae outsl jb popa je outsl outsb outsb add or arpl popa jae popa je arpl add add stc or add add add add or push insb imul add add add gs imul add adc add add or inc gs arpl add or push jne outsb je jp jb add push imul or add add add add or dec outsb je outsb imul add add outsb arpl gs aaa add or adc add add add sbb add popa outsb arpl arpl add or dec imul xor add adc cmovns fwait or sbb incl xor add sbb jae outsb jae imul jae add or popa imul popa outsb imul jge mov addl sbb incl xor add sbb add imul popa popa insb outsb cmp add or jbe outsb imul outsb fs add add or sbb incl xor add sbb outsb jae outsl jbe outsb xor add or jo jae gs outsl jb add adc dec (bad) or sbb incl sub add push or inc imul add pop add jo gs add add add repz sbb add add adc outsb imul bound addr16 fs jbe jb add pop add insb imul adc or add add add add popa insb add adc push outsb insl gs outsl imul jae add or adc pop add add add add push add imul adc dec jbe jb jns outsb imul xor add add jns rclb adc add add add add or inc outsl jb outsl insb fs add push add popa imul arpl aaa add or push adc add add add add push add imul outsl je addr16 data16 add verw popa insb insb gs bound gs add or add or or and incl sub add and add jb imul add popa jo jne jne add add or adc push adc add add or jo jae gs popa jb outsb add pop add jb jae xor add or push adc incl add add or dec je imul add or outsw jb jb imul add or push pop add adc add add adc je imul imul jae add push add insb insb gs outsb xor add adc adc add add add add pop add outsb gs add pop add jb insb jne add pop or daa add add add add pop add arpl xor add add gs add or add sub incl aaa add add sldt outsl jb outsb fs gs add push add jo jb insl outsb je je add push in repnz add sub incl add add or jne ja insb arpl gs jns add adc inc outsb gs insb imul outsb add add push adc add add add sub add jae outsb je jns add or outsl jo imul in aad xor sub incl xor add sub outsb imul jae je jb gs add or insl outsl outsb outsl outsb jns add or pop or adc incl sub add or outsl jbe jb push add or inc jb outsb imul add adc push pop add add add add or jae insl bound jne outsb gs add or data16 jae outsl outsb add add adc cs add add add pop add jae imul add push lret cmovae adc adc add add add xor add jne popa insb outsb jae add verr push jae je popa je outsl outsb gs add push aad pop add add add add add or inc arpl je fs add or push jbe jb gs add add or adc xor incl add add or push imul popa jb add sbb inc gs outsb gs outsb addr16 jne imul outsb xor add or sub flds adc add add add add add insb jne je popa je jb add or push outsb jae jb ja add add or or or add add add outsb outsb gs insb popa fs xor add or jae jne jae addr16 add add in adc incl sub add ss arpl add or fs jo jb popa insb add or add push rolb xor add add or inc jne push je arpl add jb imul imul mov in add or ss add dec xor aaa stc in inc mov (bad) clc adc loopne das lret sub out mov fs out dec cmp xor or stos add xchg (bad) add dec add add or inc jbe jb gs xor add outsl jo popa jae jae sbb add and and (bad) (bad) jmp add outsl jo popa jae jae xor sub add add add add add add or dec outsb fs je outsb cmp add add gs add add or xor add or arpl je outsb jne outsb je add adc jae imul jae outsl jb outsb jae add (bad) imul add add add add or jo outsl bound data16 add adc jo outsl jae push outsb outsl insb imul mov and cs add add add add add jb popa data16 jb popa jb add or dec popa bound outsb fs or hlt add adc add incl sub add add insl jne jne insb xor add pop add jb bound add or adc incl das add add or inc outsl outsb gs jae add or push gs arpl imul wbinvd push paddusb add add add pop pop add je jne add or dec outsl insb outsl outsw outsb gs xor add or or sub adc add add add add or inc outsl outsb imul add or dec outsb imul imul js add pop add add add or add jb outsb add or push insb jne fs cmp add push push or adc incl xor add or add arpl outsb imul add jb jne jb je outsb add adc pop adc add add add add or arpl outsl jb outsb jae add or bound popa jb gs add add incl aaa add add add jb outsb addr16 jbe add adc push je outsb fs jb jb je outsb gs gs add push push add adc add add add add imul add add outsb jae je jbe insb add add orl add add add add or inc insb outsl jb imul add or push gs jae outsl jo add or add or add add or push imul gs popa jbe add or push insb jae outsb xor add or mov adc add add add adc add jne outsb imul outsb gs add or popa jo arpl outsl insl popa je add adc pop add add add add add adc inc insb popa outsb imul outsl insl imul add add jo jb imul add add or adc incl xor add adc add insl popa je jae jb outsb addr16 add or bound jo push gs add add adc adc incl xor or inc insb insb gs gs add adc inc fs insb jae imul gs add push movsb (bad) add pop adc add add push add insl outsl outsb add or jae insl outsb je gs jae add or adc add add add add add outsl push arpl gs jns add or dec popa outsb gs popa outsb jae imul or adc incl sub add push or inc popa jae outsb imul pop add push add or pop cli pop push adc adc add add add outsl jns add or inc fs imul add add add push add add add add or jae jb imul imul add outsb fs insl jo jb outsb aaa add or add pop add add add sbb add popa outsl ja jne xor add or dec jne imul pop outsl add or adc add add add add pop add jb insb gs or arpl imul mov add add sbb incl sub add sbb add je imul bound je fs add adc push adc add add add add add outsl je gs xor add or dec outsb jns outsb fs add sbb adc add add add add imul inc je jb bound jae insl bound gs add add add ljmp sub add push add inc jns push add push imul add adc or test adc add add sldt je popa je insl insl popa jb push add add outsb jp jae add add dec add add add add pop add addr16 bound add or inc gs insl insb gs add or add or adc add add or dec popa outsb imul jae add pop add outsb bound add add add or add add add add adc dec popa jae outsl imul popa insb imul add addr16 je jne outsb gs xor push or or adc add add add add or push imul gs add or jne bound je jb addr16 add or incl xor add and add popa insb jp jb jbe jb add or inc jb imul xor add add xchg adc add add or push je jbe imul add or push je je outsl outsb gs jae add or pop adc incl xor add adc fs addr16 popa addr16 je gs outsb jae add pop add jo popa outsb jae add or or adc add add or gs popa jb outsb outsb add push add outsb outsb jae popa bound outsb add add icebp or or es add add add or inc outsl insb insb popa jb outsb gs add or gs gs outsb gs add adc incl cmp add sub add jb popa outsb fs gs jb jae jb gs add sldt jb gs imul jb add adc or or add sub incl sub add sub add fs gs add pop add bound gs add add pop or add add add or arpl outsl insb insl jae gs add or je outsb outsb imul add adc or adc add add add add add imul add or jae insl gs je add add adc sub incl aas add add outsb imul gs jb outsb outsb jae add adc push jb addr16 insl imul outsb xor add or (bad) add add add adc dec popa je imul outsl outsb popa je xor add or dec popa je imul fcoms xchg or or or sub add add or imul add or bound je insb outsb add or popa or cs add add xor insl popa je jp je outsl outsb add add gs add or lahf or adc add add add add verr popa jae popa insb imul add or dec popa jo outsl gs add add or xor incl aaa add add adc dec outsl jne outsb popa insb imul jae add or insb imul outsl outsb add adc or xor incl xor or imul insb add adc inc outsb outsb gs jae imul imul or add add add add add add popa outsb fs imul add jp jo insb imul or or pop adc add add add add insb je outsw outsl je add push add imul outsb popa jb aaa add or add adc incl xor add or dec outsb je outsl outsb imul add fs outsb imul push hlt or add add xor add add adc push insb jae popaw bound imul gs add add imul pusha or adc add add add int3 xor aaa and (bad) in push inc lea mov lods mov insb xor inc lcall xchg cmp xor or stos add xchg loop add pop add add or inc insl bound imul or outsl jae gs popa fs outsb jae sbb add and and (bad) (bad) jmp add jae gs popa fs outsb jae xor mov add cmpsb sldt out pop add inc add add add add or dec outsl je bound insb jae add adc push popa insb popa outsl outsl addr16 jo imul add adc adc add add add add adc dec jo popa outsb addr16 gs outsl fs jae add or push popa jb je jb add adc push fmull addl add add add add or push jne insl outsl outsb je outsb add push add insl imul outsb arpl add push mov imul add add add add add jne imul add adc push jb imul jae jo popa jb je jb add or jge daa pop adc add add add add jb imul add push add bound jae add add repz adc add incl xor add push push add imul imul add or dec popa outsb data16 gs add or incl das add add or inc insb imul add outsb popa jbe addr16 je xor add or movsb adc push add add add or add push add or inc gs gs insb insb gs add add add add add add add or add popa popa jb aaa add or push imul gs insl jae add add add add or or incl cmp add or gs fs jae jae jb outsb imul add or jae insl imul add push mov inc or adc add add or gs popa je jb popa insb add or bound jae outsb fs adc add incl sub add or add outsb addr16 outsb add or inc insl bound imul test icebp cmovle jnp adc add add add or gs popa je imul push add imul push xchg or adc incl xor add push or popa fs imul add or inc gs fs imul add add cmp adc add add pop add bound imul push gs bound push outsb je outsb add adc add push add add add adc add popa jae outsl data16 jb outsb imul str fs gs imul cmp add add add (bad) incl sub add adc gs add or inc jb popa imul jae add or add adc incl add add push add jb outsl je imul popa bound add push add jae outsl bound outsb outsb add add fisttpl push add add add add or outsl bound jne outsl jne add or gs imul gs add or push or adc incl das add add add insl outsl outsl jp xor add or je outsb imul gs add or adc or add add add add je outsb jae popa outsb addr16 add or push outsb ja insl outsb xor push or adc adc incl sub add push or insb imul add pop add outsb outsl je popa add push cli adc or add add add pop push add fs add or push gs imul jae outsb xor add or or adc add add add add push add imul insl jo outsb jae add or inc imul add add adc or or pop add add add add push add imul add push add outsb imul adc sbb incl cmp add sbb add addr16 addr16 jb insl outsb jae add adc inc fs insb jae popa addr16 jb outsb add adc add sbb incl xor add sbb imul bound insb popa jb add or dec popa jo popa jp jb insb jns add add or sbb incl xor add sbb add outsb imul jns insb outsl je outsl outsb gs add pop add push add adc or add or sbb incl sub add sbb insb addr16 popa popa insb add pop add addr16 add add psrlw add add add add or data16 imul add or popa jb imul add or seta sahf adc sbb add add or dec jo jne imul adc inc jb outsb fs outsb fs je outsb fs gs add adc or push add add pop add popa outsb outsb popa jae add or jae bound imul gs add or mov adc add add add add or push outsl insb jns push xor add push add insl jb add or and adc add add add add add inc insb imul bound gs outsl outsl fs add movntps mov pop add and incl aaa add add sldt imul fs gs add push add data16 arpl gs xor add add adc add add add add add add imul add add insb outsl addr16 jo imul add adc add add add and gs jb add or push popa jb outsb je jae jae add add push fiadd push adc and incl cmp add es inc imul gs add adc inc jb insb jne je insl outsb outsb gs gs xor add or mov and add add add popa arpl add adc push outsb gs outsl arpl jne outsb xor add add jmp adc add add add add or insl jb imul gs add or dec outsb jbe insb imul outsb add push adc add add add add (bad) jae jb fs jb gs gs add or gs outsl je outsl outsb jae add adc add or push adc add add add add or push outsl outsb insb imul add outsl outsb jae jb jb je add or add add add add or inc popa jbe outsb gs xor add or inc imul outsb imul push adc mov incl sub add sub add jae outsb gs add pop add popa jb push add adc or sub incl cmp pop add je push outsw jb imul jb add or je insb outsw outsb bound bound add or or sub incl sub add or inc outsl ja jb jb add or push popa outsb arpl jb jae add or add add add add or jb gs insb gs str jb imul imul add add adc cs add add add or dec outsl imul jb add or push jo jb arpl je cmp add adc or adc add add add add or inc popa jae jb je jae outsb jae add or arpl jns outsl imul push or add add add add or je outsb insb gs popa arpl add or dec outsl jb outsl outsb popa insb gs add adc pop and lret xor incl xor add xor add outsb arpl add adc push imul gs outsb gs add adc or popa push adc add add add add add fs popa js add push add fs jb gs gs add pop daa adc xor incl xor add xor data16 je imul gs add pop add popa fs outsb add add add add add add or push outsb insb imul fs or insb popa outsb arpl outsl je add or pop adc add add or push gs outsl outsb fs je cmp add or jo outsl je jp imul add adc add add dec xor aaa (bad) lcall mov jmp inc lret das out inc mov orl cltd iretw adc pusha rcll jmp add push add add push add outsl arpl jb bound gs or insl outsb je outsw jb add add inc add add (bad) (bad) (bad) jmp add outsb je outsw jb add flds add in add inc add add add add or dec imul jae jae add or jae imul add pop xchg xchg packsswb adc add add add add or inc jne fs outsl jne add or inc imul imul add or add add incl xor add add add jo outsb popa insb add adc jo popa je insb imul gs outsb arpl add push mov adc lea add incl sub add add add bound fs outsb jae gs add add popa xor add adc adc add incl xor add add fs jb gs add or outsl bound outsb addr16 add add pop adc incl xor add push adc inc data16 je addr16 data16 outsb outsb add pop add jae je add push mov xchg or adc add add pop add popa jb jae add push add imul stos push push push mov adc add add add add or inc jp jo outsb imul adc outsl jb je jb outsl jo popa jbe jb gs add adc add or add add add add or push outsb je popa imul or jbe arpl insb popa je outsl outsb add add or adc add add add add pop add fs jae add (bad) jbe outsb jbe je imul jae add or push addb or or incl xor add or add arpl jns imul xor add pop add outsb je outsb aaa add add adc add add or push outsb jne gs je outsl outsb add pop add imul or push adc add add add or jbe jb data16 add or push je insb imul je add or adc incl xor add push push add arpl jae imul add or data16 imul add adc add or add add push add fs imul jo imul add or push jne jae push add or add push add add add insb cmp add push add jb outsb je bound bound jae add adc or adc add add add add or inc outsl jb push jb imul add push popa insb add or add or adc incl xor add adc add fs addr16 imul add add arpl imul cmp stc add adc incl add add or inc js arpl add or insb popa jae jb outsb outsb jae add or add or adc incl add add add xor add adc inc addr16 outsb jne outsl arpl outsl jae jae add or adc leave adc adc incl xor add adc jb jne popa bound add lldt gs imul gs gs add push fisttp adc incl xor add push or insl popa insl imul add or push jbe addr16 jbe outsb gs add or adc or add add add add push add imul add or gs jb addr16 add add int adc add add or jo imul add adc inc jne outsl insl jae jb je jb gs add or adc pop add add add add adc jae insl data16 fs insl jb popa fs add or outsl addr16 jo imul add push aam add adc add add add add push add popa imul gs outsb xor add or je jne arpl outsl outsb gs or add sbb incl xor add sbb add arpl outsl outsb je arpl add or outsb popa popa gs imul adc add mov cmp adc add add add add add outsb gs insb jae jne fs add or inc gs gs cmp add adc cs movups add add add add outsb je imul add or jae popa bound addr16 jae outsb add add pop adc incl sub or je popa jb jb gs add or inc insb outsl fs gs jae add adc add add sbb add add pop add insb imul jae imul jae gs gs add or push gs jb fs jae add push push adc add push add add add add or inc jb jo imul outsl add adc inc popa insl imul gs outsb add add add adc add add (bad) jae popa popa outsw jb jb fs outsb add or push imul outsb gs or or add adc add add add add push add arpl je je jbe insb jns add or inc outsl arpl gs add adc cs adc and incl sub add and add jbe insb imul inc outsl insl insl outsb jae add push sbb sahf or and incl sub add and add jb gs gs add pop add insb insb imul mov xchg or incl xor add and insb outsb gs add adc push je imul je imul gs add adc or and incl sub add es imul add add outsl popaw bound gs add or or or or add add add pop add push gs or jae insb jae outsb imul sbb add es add add add push add jns popa outsb add adc dec outsb outsb gs imul gs outsb jae add add push dec add add add add sub add jae jb add adc push gs outsl insl imul outsb imul jae add add or add add sub incl sub add imul outsb outsl outsb jo jne popa insb imul or adc sub incl xor add sub add popaw arpl outsb je add or inc insb fs outsb addr16 add adc add sub incl xor add sub add outsl insl push imul or insb popa outsb jae jb gs add push inc or or adc add add add add outsb je popa insb jae addr16 add adc inc outsl insl jo je jb outsb imul add add add add add add push add push jae jne jae jb xor add push add arpl je outsl outsb imul call or incl sub add das add push imul add imul add or adc cs add add add or dec popa insb jbe jne gs add or push popa jae outsb fs add push or das add add add add or push jne outsb outsl jne xor add outsb jae je jp jb add push je aad rolb xor incl sub add xor add jb push xor add push add insb insb gs add adc add xor incl xor add xor add gs add adc inc gs imul insb imul inc push sub or xor incl xor add xor add arpl insb imul xor add popa fs gs popa outsb aaa add or or push push or add add add imul insl gs jae add or popa data16 jae outsb imul loopne iret adc add incl sub add or gs popa jbe je jb add or dec gs jo gs add or inc or xor add add or push insl insb gs gs add or dec outsl insb insb jns outsl arpl add adc push adc add add int3 xor aaa ret scas push fidiv aam cmp in sbb cmp fwait jecxz fdivs inc dec add dec lods xor or stos add xchg or add dec add add or push insb popa je arpl outsl jne xor add bound jne add add inc add add (bad) (bad) (bad) jmp add bound jne add adc add add or add add add add or inc jne data16 fs add verr je popa js outsw outsb gs gs add add out xadd adc add add add add or jne je je imul add data16 popa jb jo imul add push incl adc add add add add or push outsb outsl jbe jb outsb addr16 add or je popa jb push add add add add add add add jae jne popa je outsl outsb add str fs bound outsb arpl popa je add or add add incl xor add add jae gs je fs push add data16 imul xor add add adc add incl add add or gs push je add pop add insl jne popa outsb add add sbb rolb add add add adc outsl outsb fs popa bound jne fs jae add or inc imul outsb gs outsb fs pop testl adc add add add add or dec gs insb ja jb jae add or push imul outsb gs outsb jae add add or add add add add or add insb imul inc popa jae insl gs imul sysret adc add or or incl add add or push imul insb popaw jb add adc push imul jae outsb jae add or rorb adc add add push add imul insl popa outsb fs imul gs add or popa outsl bound popa outsb imul add or incl xor add or add jae outsl insb gs add or push gs gs jb je xor add push push or add or incl add add outsl arpl jae push popa insb add adc imul outsb jae popa bound imul jae add adc cmpsb add add add add add or insl imul jb jae add add push push mov call or add add or push imul add or dec popa jb outsl arpl je jb add or add push add add add adc insl jne outsl add push add jb imul jb jo gs add adc or movl sub add adc add jae jo bound add push add jae gs add add add adc add add or dec jne je popa insb xor add adc push imul imul outsl gs gs add movq adc add add or arpl popa jo arpl add or inc outsl je popa je imul inc add adc add add add add add outsb imul add push add jb gs add or or adc adc add add add add jae outsb je addr16 jb je add or inc gs popa fs insl gs add push and push adc incl cmp add push or push popa popa fs outsl addr16 add adc inc data16 jb popa fs jae jae jns fs jae add or add adc add add or inc data16 imul aaa add or popaw bound imul popa outsb add or jg push add add add add or jo jb jo jns insb jne add or jae outsl outsb popa jb gs add or add add add add add or insl popa je insl jns gs add or inc popa jbe insb insb outsl jne xor add adc add pop or sbb incl add add pop add jo jb add or gs jo popa jb je je add or add sbb incl xor add sbb add jbe bound fs adc push jne gs jb jbe je je outsl outsb xor add or adc add add or outsw jb jns gs add or inc imul fs add or in jmp adc add add add add outsb outsb fs add or gs insb insb outsb xor add add or mov adc incl xor add push or push jns je outsb gs gs add or fs imul add adc adc sbb add add or dec outsl outsb insl jne arpl add or push gs gs jb add or or adc add add add add or inc push outsb xor add pop add outsb outsb jae add or add adc add add add je push add sldt insb imul jbe gs jae jb add add and adc add add add add or je outsb imul add adc inc outsl jb popa addr16 imul gs add pop or cwtl or adc and incl xor add and add outsl arpl jb outsb je jb gs add pop add insb jbe outsb add add sub pop adc and incl xor add and add insb popa outsb fs jb jae jb xor add or gs outsl jb gs jae add or adc or add and incl sub add and arpl add or push outsl jb gs xor add add cmp xchg movups incl das add add or inc gs imul or data16 fs bound add push xchg mov and add add or dec gs imul add or push imul jae gs gs add push out add adc adc es add or je insb imul jae add or inc push imul mov daa add add add add or push popa bound outsb popa je add or jo insl imul jb add rsqrtps adc add add add add or push jne outsb popa jb jne fs add or inc jns outsb popa jae popa insb add pop push or adc add add add add or jne je jae jo gs add or push popa outsb fs jbe jb gs add adc pop adc add add add add add fs add or inc je jb jo jb add add or adc incl add add fs jb je jb add or inc jb jb jae add adc or sub incl sub add or imul imul add pop add insb fs add push or jmp jmp incl add add or popa jo insb jne imul push jb outsb jae gs gs add cvtpi2ps mov cmp adc add add add xor add bound imul add lldt gs jo insb jae jb gs add or js lret das add add add add adc dec popa outsb fs jae je outsb fs gs add or push insb addr16 imul cmp inc or add add add add (bad) je imul gs jns je insl jae add push add gs outsb outsl addr16 data16 jae add adc mov or xor incl aaa add add or push jb insl jo popa insl jo jb add adc imul jne fs outsb outsb gs jae jb add adc add xor incl inc add add add gs je outsb addr16 outsb xor add outsl outsb jae jb je outsl outsb jae jb push jae add add or adc adc add add or jo gs jo imul or dec gs insb outsl ja jb add pminub out mov adc incl aaa add add adc popa jb gs jae popa insl insl gs je outsb jae add or dec popa fs push je aaa add add jl adc add add push add arpl add push add bound je imul gs add push add cmp add add add dec xor aaa data16 scas cld shrb sub int inc (bad) mov mov out add dec lods xor or stos add xchg or add add add gs or push je jb jae imul add inc add add (bad) (bad) (bad) jmp add popa jb arpl imul xor xor inc add add or add adc add add add add pop add fs outsb add add add gs popa je jae add adc or add add incl add add push add insb insb gs push add popa arpl je popa insb gs add adc add add incl inc add add adc push fs jns outsb imul popa popa fs add adc dec imul insl jns imul add adc fs add add adc jb imul je outsl outsb jae jo outsl insb fs add or popa outsl jb outsb insb jns add push outsl push dec add adc add incl xor add add gs outsl jb outsb add or dec imul outsb jae add adc add add adc incl sub or inc outsl jp outsb imul or arpl jne popa je outsb add cmc adc add adc adc add add or ja gs outsl jbe jb add pop add jp outsb outsb add add aam adc add add add add or jo popa jns outsl jb add verr jae gs gs outsb addr16 add push (bad) or add add add add add or inc popa jae imul add adc dec popa insl bound addr16 jns outsb gs add add push mov pop add add add add lldt gs jb jae outsb addr16 add push add imul insb outsb je add or add or incl xor add or add gs outsb addr16 jns je xor add or dec outsl jae outsb jae add add adc or incl inc add add add je outsl fs popa insl outsl insl gs jb add adc jae outsb popa insb outsl insl imul outsb imul test imul adc add add add add outsl jbe imul add or push gs insb popa je outsl outsb add adc or or incl xor add push or dec jae gs imul jae add or outsl insl jo popa insb outsl outsb arpl add add push outsb or adc add add adc inc imul insb jae outsb gs xor add or gs gs add add add push add add add add push add outsl ja aaa add push add gs insb add or adc or add add add add or bound fs gs add or push je imul jae add add (bad) adc incl xor add adc add fs popa fs jae jae jns fs add or inc push imul push mov adc incl xor add adc add arpl gs gs add or popa data16 insb fs outsb insb addr16 add adc add push or adc incl xor add adc add jns gs bound insb outsb jae add or inc jae imul dec adc or adc incl xor add adc je popa jbe insb jbe insb popa jb add or data16 jo insb insb add or add add add add add add or inc jne imul add or dec outsl bound imul jns out icebp or or adc add add or push imul outsb add add add jb insl popa popa insb jae outsl outsb je popa imul gs add add or or incl xor adc push je jb imul popa outsb outsl outsb jae add or jbe push gs imul sub fisttp xor incl xor adc push outsb je bound imul jae outsb jae add pop add insb imul int3 adc add adc add add add sbb add imul add or push addr16 imul or or add incl das add add or bound jb outsb imul add add jae insl jne outsb add or dec adc adc sbb incl xor or inc popa insl popa arpl jb add adc inc gs imul imul jae add add aaa or or sbb incl sub add sbb bound imul add or popa jne outsl arpl jae add pop push adc adc adc sbb incl add add or inc outsb bound outsb gs add or inc imul jae add adc add sbb add add or imul imul add add insl outsl imul add add or or push adc add add add add add gs add adc je jae insb popa outsb fs gs gs add adc or adc add add add add adc jae insb jbe imul jb outsb addr16 add or popa je outsl outsb jae imul repnz or add add add add push add jb popa outsb fs gs jb jbe jae outsl outsb gs add or dec imul cmp add or movnti lret and incl sub add and add jb gs popa bound add pop add insb insl popa outsb xor add or adc adc adc add add add add add je imul aaa add or push insl outsl imul imul jmp adc or and incl sub or push jb jae jne imul or inc gs gs add or adc and incl xor or je fs outsl jb jb addr16 add str popa jb popa insb jae jae imul xorps mov ret adc and add add or outsb imul fs push add imul outsl jae popa xor add pmullw mov lea adc add add add sub add jo outsl outsb imul xor add or dec jbe jb outsl insl jb outsb addr16 add add or daa add add add sub add arpl jae outsb je add or arpl push add add pop int3 add adc add add add add add je jae add or insb imul jae add pmullw adc add add add add or jns addr16 gs outsb fs add push add jae popa insb imul jae add add push adc incl xor add sub add imul jb fs add or inc outsb je je jne je add pop insb pop inc add or sub incl cmp add sub jb fs popa outsb fs outsb jae add adc push imul jb jo popa jbe jb add push int scas or incl add add add jae add pop add jne outsl add sub lcall sub add add or insl popa jae arpl jae imul add jae gs outsl jb jb jbe insb jae outsb jae add pop xchg or add adc add add add add or dec jae push xor add or push popa bound push je add add popl push adc add add or jae popa outsb imul je jb add sldt arpl push jb jo jns add (bad) adc xor incl xor add xor add gs jb gs add or gs insb gs jae jb add or or xor incl xor add xor jb je jb outsb fs add or push imul imul xchg adc or adc add add add add add popa outsb arpl outsb gs add or dec outsl jae outsl insb outsl imul mov add xor incl xor add xor bound outsb outsl insl jae add sldt imul jb jb gs add add add add add add or je jns imul or dec popa fs imul pop or add xor add add or popa gs addr16 insl insl gs add or push jb imul jae add adc push adc add add dec xor aaa loopne cmpsb lods into lahf xor mov nop or mov jg push je mov gs dec lods xor or stos add xchg in mov add add add arpl fs outsb je add outsl imul gs gs add add inc add out lods add insb je add lods add scas sbb lods add add add add add add add add xor add add add add add xor pop gs xor or lods cmp je mov dec dec dec cmp jne mov dec dec dec cmp jne xor push push push push push addl push push push call add ret mov push loop push push push mov add jmp pop jmp pop call push pushl push call cmp je call push push xor pop pushl push call jmp mov adc cmp jne jmp mov imul pop mov mov mov mov dec cmpw jne mov mov inc mov bswap cmp jne cmpl jne sub push call mov mov push rep mov xor pop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jmp push jmp pop jmp pop call push push push push call pop jmp call push push dec outsl je data16 arpl inc add lret (bad) (bad) decl inc dec dec add ret (bad) (bad) decl push gs outsb outsw jb popa je outsl outsb push jb arpl jae call inc push fsubrs sarb xchg mov or adc lods sahf jne or sahf fwait cwtl push sahf cmp dec add pusha cmp adc xor pop fisttpll xchg and xchg es push adc daa sbb fsubs (bad) push or cmp push adc lcall cmp stos adc cmp push dec xor adc ret push jo clc mov adc cmp push jne and adc cmp push add cmp fiadd sub adc fs into cmp push adc mov jnp ret push jecxz (bad) push xor push inc daa insb sbb pushf dec pop nop mov push jp pop push push push pop int3 movups mov push adc mov xchg (bad) mov clc pop sub adc outsl adc jge jmp fnstcw or cmp (bad) push adc mov adc cmp or fdivs (bad) mov cmp out into cmp add fcoms out or and and add jo clc ljmp push adc cmp push adc ret fdivrs fwait mov cmp push adc mov out iret cmp jle xchg sub adc cmp pop jnp ret fdivrs fisubr cmp dec dec sahf mov (bad) out faddl jns and adc test adc cmp addr16 fdivrs push adc push push jnp aad add cmp fild cmp push adc cs push dec xor add fdivs clc sub adc cmp inc adc fsubs movsl (bad) cmp test mov fdivrs push adc ds push dec xor dec and lea push adc cmp inc adc fsubs popa (bad) cmp test incb cmp push adc jbe sub adc cmp push adc test cmc add jecxz push adc push jnp push push add cmp push jnp push icebp out lea mov fsubrs out bsr adc cmp out int push dec xor sbb fsubs jmp popf insl out into cmp sbb fsubs cmc aad push and mov (bad) fdivrs xchg pop cld xchg adc cmp test lds icebp push pop rcr cmp push adc cmp icebp out daa mov xor push cmp adc cmp mov fdivrs push and cmp icebp out lea notb lods aam push aam mov push loopne mov fdivrs out add cmp incb fdivrs jns fdivrs out iret cmp adc xorb adc push xchg loopne jp xor adc test push cwtl dec cmp adc aam push fdivrs icebp and or or cltd cmp push adc aad push fdivrs adc cmp add int adc gs int push dec xor fs ds jmp test int3 push fdivrs push adc add jl adc cmp push clc icebp sub adc gs into cmp nopl adc pop test test fsubs popf aam push inc push mov adc cmp push dec xor adc (bad) sbb jne xor adc cmp icebp (bad) xor out daa ret lods sbb out mov add sbb add cltd cmp test cmc nop sbb or fdivs sbb fdivrs push sbb cwtl push notb fdivrs add and fdivrs xchg add cmp or mov test push mov test mov (bad) cmp xchg pop rorb pop std push adc mov add pop cmp mov sarb (bad) shlb cmp push sbb cmp push add cmp cmp add add stc lods ss adc mov aaa xchg xor icebp cmpsb fdivs cmp mov adc cmp push adc ret sarb pop sbb push cmp adc or inc daa dec push lcall test fstpt inc xor add xlat lock sahf fdivl icebp cmpsb aam push adc dec add outsl cmp std sbb cmp push adc cli dec add pop (bad) sbb fdivrs push adc insb test push mov psraw cmc fs sbb out sarb add fdivrs xchg adc cmp push adc push lcall into fidiv push cwtl pop cmp clc inc push mov or adc int sub dec push out cmp or pushl push adc mov sbb cmp push adc push sbb fdivs std inc push ds push and push adc sbb data16 push adc push sbb fdivs std inc push ds xchg push cmp (bad) xchg int3 aam out daa ret sarb push adc push adc mov push call jge lcall push adc cmp cwtl nop sbb push adc push adc push adc mov or lods imul fmuls xor adc cmp test fstpt inc mov icebp inc mov jl sahf fdivl xchg fnstsw adc mov sbb cmp push adc pop test fldt push aad push adc mov adc mov xchg pop (bad) xor pop (bad) jp add int push loopne shr mov and or and ret movsl xor adc mov inc push jo lcall test mov adc push push movups mov sbb nop mov sbb xchg xor inc add ficom fdivrs inc adc fsubs adc cmp dec jns push push adc mov jge lds in xlat cmp xchg pop les gs mov inc push xor add push int3 cmp out enter xor push adc ret daa dec add push push jnp push push jnp push push lcall pop out or inc out daa ret test jmp stc dec xor dec sbb cmp scas add cmp push adc push inc xor add popa xor pop adc addr16 sarb test ret or jns or bound fdivrs inc sbb or inc (bad) mov inc push cmp push jnp mov out test ret push push out ljmp push pop mov inc push cmp pmaxsw mov sbb psllw mov fwait adc cmp inc pop mov cmp notb fdivrs push adc ret push sbb test lcall test ret (bad) and mov cmp inc ja les insb gs add cmp adc cmp fstps fdivrs push adc dec push lcall ficom (bad) ds adc push jnp push or mov stos adc cmp test ret or sti adc cmp int fdivrs test (bad) cwtl (bad) mov popa xor out fistpll test ret daa in (bad) jmp fidivrl add fdivrs or add push adc cmp int daa push icebp rcll shrb vmwrite sub or daa push push adc cmp adc mov popa xor adc addr16 fidivr pop sbb dec or or push adc cmp and fdivrs push adc (bad) adc cmp repnz fdivrs icebp and in (bad) scas and push adc cmp adc mov lea fdivs mov fidivrl out (bad) cmp or fdivs lcall push dec xor adc mov insl fnstcw or enter pop mov mov cmp push adc mov fdivrs push cwtl and sahf adc cmp movups mov push adc mov test in push adc xor sub (bad) jecxz xlat mov xor pop mov mov fdivrs push adc clc or fdivs mov lds jo fdivrs into gs add adc std jp in push adc dec addr16 cmp xor fdivrs inc pop fstsw in jge cmp sub cmp xor cmp push adc add adc mov lea fnsave mov fnstcw fwait test cmp movups mov cmpsb dec cmp adc stos jb fdivrs icebp (bad) mov push adc mov out outsl test cltd insl fnstcw or fnstcw cmpsb inc cmp adc mov xchg adc cmp out outsl movsl movups ret fnstcw movups (bad) mov adc mov (bad) jmp and inc mov adc cmp test ret lea xchg jo push adc adc fnstcw icebp cmpsb pop cmp adc mov dec rol cmp adc cmp out outsl movsl movups ret fnstcw movups mov mov popf and adc cmp mov out outsl mov push sbb push icebp inc mov ret mov icebp inc mov mov sbb psllw or daa ret (bad) cmp xchg scas and cmp aas fcomps imul fstps or lods sbb and mov sbb add adc xchg push jo out fs xchg and sbb or xor lods ds (bad) fiaddl inc xor pop xor adc xchg push adc mov push adc mov test sub mov lret fincstp stc enter adc cmp cwtl push lret pop mov sbb into add sbb loope xlat push into push mov add sbb sbb (bad) rcr dec or and fs push push scas mov push adc mov test jp int3 pop (bad) (bad) sbb push adc hlt mov fnstcw out ljmp test fdivr test push cmp push pop les adc cmp hlt adc cmp fdivr add mov adc mov sbb fdivrs aas lret aas ret incb aam xchg fsubr test daa jno sbb aam leave shl cmp mov fnstcw push lock sbb xor adc lea (bad) lcall push adc jbe adc (bad) cmp test (bad) rcr and adc or fdivs push add cmp add fsubrs push fnstsw dec sbb fcom call cwtl test add push push cltd mov out fnstcw (bad) xlat fsubrs test push and lret lods sbb das fmuls clc cmp push adc rorw push out dec test pop in ret fidivr sbb and push adc mov adc mov out fidivr out fidivr pop inc xor adc mov sbb fdivrs pop inc xor adc cmp xlat ficomp dec stc xchg cmp adc pcmpgtb sti or sahf sti or sahf sti or sti or or sahf sti or sti or sti or sti or sti or or push lcall push adc ret mov adc push push adc add fdivs (bad) rcr pop lea fmuls lcall push adc ds cmp cs pop mov sbb fdivrs ds sahf cmp inc daa dec repnz push xchg adc imul adc lea int3 push fdivrs (bad) lcall xchg sbb push or sub dec or rcr lcall fsubrs adc aas adc cmp cs pop mov sbb fdivrs js pop sti int3 xor cmp sub push push adc test adc cmp push dec mov adc cmp pop lcall mov ret fidivr push adc nopl repnz daa aam sbb cmp notb xlat mov out sub icebp jne or dec add xor jmp cmp sbb push fs mov jne and dec and push lcall out push int3 (bad) rcr pop test rorl pop cmp (bad) rcr cmp and mov xor int3 xor sbb push loopne cmp adc int3 sbb mov xor (bad) mov xor (bad) mov cltd fstpt pop pop hlt jnp sbb push jne or dec sbb fdivs inc adc inc or jg xor push sub push mov imul enter mov adc sbb xchg lods int imul dec jmp inc mov adc cmp inc mov xchg sbb (bad) aad (bad) aas rorl cmp jnp daa dec push inc daa test adc cmp lea fmuls cwtl and int3 sub lds int push ds pop std or push mov sbb cmp xchg adc cmp (bad) jmp mov cmp roll enter sahf xlat pushf or lods loopne clc scas cmp adc push jne or dec sbb fdivs push adc mov test push or pop loopne jp lods faddl push mov cmc nop sbb fs mov push add insl fs daa push xor adc or sbb test push xor add push int3 cmp push or fadd mov out outsl cmp icebp out lea bound icebp nop cmpsb sbb adc fnstsw pop inc sub fdivrs jo mov push (bad) outsl cld jge adc dec push nop cmpsb sbb inc pop inc sub fdivrs jo cwtl cmp (bad) outsl cld jge adc sbb fsubrs and sub fmuls jo cwtl cmp (bad) outsl cld mov sbb call jge adc (bad) sbb xor mov fdivrs cs cmp push sbb fdivrs out and xor adc cmp push adc mov lcall push xlat fdivl or fsubs add push push cltd mov test enter push jnp push push jnp push push jnp push push adc jge out lea add fcoms inc daa dec or fsubrs out lea pop out lea enter push jnp push push jnp imul icebp inc mov test xor data16 fdivrs pop pop sbb or in or push push cmp push push sub adc sbb adc outsb fs mov push adc insl fs daa push sub push cs adc fdivrs test mov lcall dec sub loopne pop adc cmp push lcall push cwtl test or mov xchg xor pop xchg xor pop jnp ret and push adc sub fstpt sbb mov xor push cmp or fidivr mov fdivrs sbb ljmp xor push cmp repnz fwait (bad) mov mov push pop push int3 and push sub cltd mov push xchg jecxz jnp mov fnstsw push jle (bad) fwait cmp fidivr rcl mov push xor cmp push lcall or pushf sbb push loope jp pop push mov cs (bad) xchg mov xchg rcl or test cltd jle add ret (bad) and jp push jle test xor xchg jge call lods out aas rcrl sub lcall push fwait enter fwait jl sub dec cli rcl cmp push adc ds pusha cltd push adc cmp pusha cmp adc (bad) aas rcrl aad call mov outsl bound pop push stc pop icebp out idivl je dec imul outsb dec xor js mov xor dec sub imull xor cmp icebp ds dec imul cs pop xchg push and aas and adc clc pop outsl ja dec imul and sbb jo,pn pop xor outsb popa ja dec outsl arpl dec popa bound push pusha jne dec jge fwait dec jl mov dec jge mov push inc lods push sub (bad) dec xor jl stos pop push xor sbb jp mov dec mov ds pop push stc aas (bad) icebp out (bad) dec jnp clc adc clc pop outsl ja dec imul out and icebp pop fsubrs inc fdivrs inc fdivs daa fmuls push pop fdivs stc ret out cltd cmp dec adc cmp out xor js pop fsubrs sub cmp icebp out fdivrs push adc cmp push adc cmp push adc cmp push adc cmp push adc cmp push adc cmp out daa pop cmp jge cmp icebp push mov imul dec push stos pop outsl gs aam out lods dec imul push stc mov icebp out popf push jnp mov je pop pop js pop popa stos cmp icebp push mov inc pop js pop popa data16 pop clc daa ret lods jns bound push pusha jne dec push stc lret (bad) icebp out lea jo imul jb push mov imul add out daa je pop mov dec popa mov out xor icebp push mov dec jp stos dec inc jg push push stc cmp icebp out mov jl mov aad clc daa ret lods jno bound push stc or icebp out mov push stos dec popa arpl aad cli daa ret stos dec jnp mov bound pop dec imul ret stos dec jnp mov jl lods pop insl gs inc push stc repnz icebp out fwait dec imul dec js pop dec adc pop in daa push js pop dec js pop push stc in icebp out mov jne push bound dec sti daa ret lods jnp jge outsb imul xor icebp push mov jge nop pop pusha jne pop push stc mov icebp out lahf pop jp mov imul push imul movsl (bad) daa ret lods jle jl pop pusha jne push pusha je cmp icebp push stos pop outsl gs pop jge (bad) cmp icebp push mov dec dec jle pop pop arpl cmp icebp inc mov pop jp mov jb dec jge xor (bad) out daa push js jnp arpl js mov push stc pop int3 icebp out fwait push pusha gs jnp pushf pop insb fs dec push stc jp icebp out mov je cmp icebp bound femms stc int icebp out mov jge js je dec jp cltd cmp icebp jg pop bound aad stc daa ret adcl mov push push stc (bad) (bad) icebp out xchg dec pop arpl dec jp mov push jl fcom sub daa ret lahf pop jp mov jp mov pop outsl jne aad (bad) daa ret fwait dec imul dec js pop push stc dec aad out xchg dec pop arpl imul dec outsl jge pop arpl inc push stc in icebp out xchg dec pop je jle jg pop jbe mov je pop push stc push int out xchg dec pop je dec arpl jl mov (bad) icebp out xchg dec pop jg pop jle mov jns mov push popa jg aad loope ret mov dec addr16 pop jge fcom aas clc daa ret mov aad clc daa ret lods push pop js pop popa stos cmp icebp pop mov push popa jb aad sti daa ret xor icebp out fldenv adc dec out daa cmp mov daa ret fdivrs icebp adc cmp icebp out out push pop jne aad clc daa ret jbe pop mov insl (bad) xor inc adc jne or push cmp sub adc mov ja sbb cmp jae xor sbb rclb pop (bad) shlb sbb loop lods lcall in decl xchg xchg jl jo mov inc cmpsb push or inc sub dec dec add ds int adc mov jmp lahf mov mov fwait xor mulb lea mov cmp push push jb mov repz loopne mov clc sub cld mov aas bound test mov mov pop popa inc pop push cmp sbb or (bad) fstl and fisubl fisub outsl inc and mov cltd push cmpsl and in movsb sarb test lods jae shrb add ret fdivrs icebp out fnstcw std out daa popa push lods pop arpl push jge stos pop jp mov xchg cld out daa cmp adc aad stc daa ret fdivrs icebp adc cmp icebp out fdivrs (bad) out daa cmp add daa ret fdivrs icebp adc cmp icebp out fdivrs stc js mov ljmp adc in jnp (bad) std cmp out push cmp scas or inc cltd mov scas mov (bad) int3 pop mov jbe orps xchg addr16 inc movsb push mov mov adc push or pop mov std mov lea sub aaa cmp sti mov push in lret ss add xchg jne in mov jle subb mov xchg sbb sbb dec add push push mov adc test mov push mov outsl idiv ret pop aad sbb stc loope enter das fistpll cmp add sahf stos in push pop lods sub pop mov dec adc jp or movsb sbb repz jge dec (bad) xlat sti xlat out add out push sub push mov cmp jnp lods jae dec lcall aas ret sbb or adc (bad) pop (bad) dec mov sti popf sub aaa mov bound sub fimull stos jb test repz xchg inc jge xor mov movsb test xchg xor stos fxch imul (bad) call je mov pop (bad) aaa or int3 js push jp lcall xor into inc jmp lcall mov (bad) dec loope repnz mov adc push dec dec and adc loop jge mov jnp nop push shl add in sub add cwtl pop aas or scas aas push rep mov movsb and bound mov mov mov jecxz addr16 jg xchg scas dec mov (bad) mov push lret jbe pushf jg daa cmp out jle ficoml xchg bsr fs pop xchg inc outsb dec inc pop mov in sub or push jae (bad) mov dec mov cmpsb mov test mov jmp and jb repz jecxz dec das mull (bad) flds lret ja xchg inc mov xor fldcw js inc frstor mov pusha push push inc jecxz insb xchg jo lret fistpl xor insl imul test adc into icebp (bad) mov dec push pop pop movsl mov xor lahf mov je and daa fistl aam es cmp fildll xlat jno icebp pop das inc mov dec pusha inc mov test push cmp mov xor scas stc (bad) push inc fs test mov or insb addr16 popa popf lcall fnop (bad) cltd aas cmc aad inc int fstpt cli mov pop adc push mov xor idivl inc push fisubr and (bad) imul jbe or mov and cmp or adc cmpl dec std fildl stc sub and fcoms repnz xchg mov dec push ret xchg mov in push push mov sbb scas sti adc cmp push mov sbb mov loope movsb cmp scas fnstenv pop ds ret sti gs jle ja pop sub pop pushf cmpsl mov push in inc lock adc ss xor stc mov push stos ljmp mov js (bad) jg pop ljmp or addl xor hlt lret pop arpl xchg leave jg mov inc loop fstpt insl dec jo mov bound add daa int3 outsl pop jl adc and stos inc dec popa xchg mov or (bad) in fadds outsl sti adc daa iret in fnop push in jnp je add fisub cmp lods jecxz cmp and flds push test adc push xchg std test movsl jecxz push adc lret cmpsl sahf fnstcw ret sbb aad out mov insl cmp loopne fldenv fidivr mov mov pop mov lods inc fwait lods lret xchg add jge loopne (bad) mov fcompl sti and cld inc sub push jnp mov pop inc sub movsl mov push in jb pop les jge and aaa mov insl mov in push mov inc pop movsl lahf mov (bad) hlt scas cmp dec data16 mov into bound push pusha pop (bad) pushf mov xchg mov es xchg sbb test stc shlb xor mov stos bound sbb data16 roll icebp dec add ret jo (bad) fisubr or (bad) out jecxz fistpll dec test (bad) jl es xchg add (bad) iret push ljmp inc (bad) andl sbb sbbl (bad) sti inc pushf mov mov adc add cmp dec jnp mov mov push mov push ds std (bad) pop insl push ficomp inc sbb sub negb and cmp pop bound jne adc ret xchg sbb dec popa pushf test lock push adc lret mov inc in into (bad) pop int or mov mov sti sub push jo aad cmc sar xchg rcrl jnp jb movsl in mov xor leave out lcall mov mov pop push push js loop insl inc mov push xor xor repz loope push sarb adc sahf push scas cmpsl imul je xlat rcr push push (bad) repz jle and out loop xchg cmp dec daa mov roll mov rcll adc mov inc mov pop aam ss mov aaa pop scas repz and and cmc stos test jecxz push popf sbbb add mov jecxz iret mov mov in add mov mov mov in jl xlat jmp cmp pop loope pop jmp das outsb fwait (bad) in sarl aaa cmp jp cmpsb je fucomp add sahf adc cs sub pop fdivl mov ret (bad) pop jbe cmp sub xchg (bad) jbe pusha mov nop hlt sbb pop xor jl aas decb lods cwtl sbb sbb cld sub mov dec bound mov inc enter (bad) inc enter mov cltd push inc pop lods (bad) mov pop xchg (bad) mov lds (bad) cmc xchg fsubrl cli pop repz jmp inc xor sti (bad) xchg push test jnp xchg cmpb push xor xchg xor lret push or push lcall es ret fwait mov cmp mov add movsl pop sub ret mov mov sub fldt sub fwait imul das subl jge sbbl sahf xchg cltd mov adc and add lock ss dec inc push and mov dec mov mov dec mov pop sub cltd push inc adc xor out push rorl ret mov out daa (bad) insl daa cmpl in hlt jno cmc mov xchg dec aad add sub and mov mov lret aam imul fsts sbb popa loope fsubr fcompl push int mov pop fisub std inc sub mov pop fnop mov sbb scas mov xor and dec stos push aaa je xchg mov mov pop iret sub mov xlat lods jge mov pop jp daa cmp pop dec and xchg insb and dec sbb xchg sahf sbb xor cwtl sbb mov lds jno adc pop jg jmp popl adcb icebp fiadd nop push sub xor and mov cwtl mov repnz vminpd stos into cld cmp xchg stc int cmp rolb imul push sub dec pop pop inc pop test cmpsb and cli xchg push mov movsl or adc inc addr16 add adc in dec stos leave jne imulb test cwtl mov push std dec fisubr popa pusha jmp xor cmpsb cmpsl idiv adc loop cmp sub mov dec std push pushf adc push dec inc pop pop xchg pop imul add clc push es (bad) dec mov out add or loop jb mov call cmp les (bad) dec lock scas cli mov lods and inc push xchg cmp enter mov push xchg enter cli les stc adc or lods stos mov pop push sahf aam cltd dec dec addr16 imul push dec mov fildll and rol out inc pop or inc js jns popa mov push jo inc lret cmp dec test movsb fnstenv push lds ja adc loopne cmc xchg cltd dec pop mov outsb cmc adcl ror lret clc add mov sbb mov pop mov jbe (bad) xor mov les mov jecxz or pop sub jle orl iret fs sahf push inc mov push rcll stc or jnp xchg or inc push shll fdivl pop adc outsl xchg xchg (bad) outsb xchg mov xchg (bad) in call or (bad) outsl cli jae xor cltd and stc bound mov test mov mov adc insb dec mov pop sahf test pusha movsb rcrl popf test jmp insb mov mov push outsl or scas repz sbb dec call cmpsl xchg cwtl push outsb pop sbb negl ret push mov sbb jb jmp push call push add popw movsb jmp in cmpsl jo enter jno fst mov enter scas adc jae mov jnp pop lods cwtl (bad) (bad) mov mov jo sbb gs fldenv add cmp (bad) cltd xchg add (bad) stc jg ret add cmp test mov ret int3 aad and fcom cltd rcll in or enter pop in clc sub into cmp or mov repnz xlat leave (bad) and add out (bad) adc cmp hlt cmp mov fistp inc fwait jae sub sub in scas mov out pmaddwd adc sbb aas int3 repnz call pop xor xlat sub xchg jno outsl xor sti fs cwtl leave mov (bad) int push or mov rorb xchg mov (bad) jbe xchg outsl arpl arpl xlat cmp xchg jb or sahf push jo jnp xchg fmull enter mov push incl jb inc not clc mov jp xor sub jns into push data16 xchg or fadds cld insb mov xor rclb (bad) fsubrs mov mov jge aaa adc and mov dec push xchg aas jle mov in xchg and enter insl js sarb sti mov sub fdiv pop cmpsb push mov mov dec mov cmpsb adc gs (bad) ds iret xchg jb xor or xchg pusha push call fcomps jecxz mov adc mov stos repnz and fstp loopne lret cmpsl xchg xchg xchg in inc xchg adc movsl xor enter xor loop mov fistl and push or cmpsl jbe pop movsb test push stos cmp mov fisttpl das lods (bad) mov add sarb and mov push jmp mov push shr sbb dec or or mov cmp bound cmpsb pop fidivr push movsl (bad) aad lret cltd iret xor shlb fnstsw push enter scas lock xchg pop lahf insb inc inc and rol dec add outsb icebp or (bad) lea sub jne or ds push pop out movsb and (bad) divb inc add into pop sub add pop xor (bad) mov inc inc mov test xor xlat lret adc push test bnd aam jg cmp imul jno sub ljmp call mov sbb jge out dec ds inc cwtl ja jle or jns sbb and cwtl xchg sbb adc push movsl inc stos not dec mov aam jbe fwait or ret testl xor adc dec dec add test and (bad) mov mov subl jne and gs and js jbe mov test sti inc xlat iret push push push dec or leave scas insl sti les sbb add out lcall notb popa jnp (bad) pop jae adc lret sbb xor orl and call xor iret imul iret push enter clc pop aad mov lcall gs xchg pushf arpl repnz pop aad inc cs outsl or cmp js lea cmp or adc mov (bad) aam pmaxub push xor insl pop repnz dec aaa xchg sub aas pop mov inc testl xchg les mov aaa repz sahf mov xlat cwtl xchg xchg and inc mov loopne popf push fisttpl rorb ret inc nop hlt mov nop lret xchg nop call cmpsb ja xchg aad decl imul cmp fs mov hlt sarb dec int3 in mov fnstsw adc pop xor jnp mov mov lods sbb adc divl mov (bad) mov aas xlat leave stos divb stos cmpsl jne cld test mov dec into and xchg adc ret jmp adc add sub cmp leave sub mov andb dec js push outsl push mov mov push mov xchg scas adcl jmp push xchg push and and int3 mov lcall or pop adc jl inc inc add loop or imul or sahf sub roll jmp mov stc insl in fcmove lcall fidiv mov out jb pop das sti mov sahf fdivs xchg cwtl jnp aas ret pop pop loop dec movsb les sbb dec lock pop ss lods push repz xor insb push and dec push sub loope inc shll adc cmp shlb arpl pop push into push sbb push or jmp or push scas mov and insl add test inc pusha sti mov adc fnop jbe or jmp test pop out orl or sub shr repz jb es push imul mov adc cmp sbb add clc dec mov inc xor mov fwait mov sarb (bad) xor sub add jecxz sti xchg xchg (bad) cltd dec mov out into pop roll inc sub insb rorb and lock dec repz add push jne xchg sbb gs lods adcl repz add push (bad) jmp cmp mov xchg dec sahf sub std dec mov push xchg mov push xchg mov dec incb xchg mov dec test pop dec xchg stc jb xorl imul in stc lds lods xor cld lods js or and inc inc push inc mov std lahf cmpsl sub push mov push sub pusha cmpsb lret mov pop inc xor andl (bad) std push mov push xchg out call mov arpl push in add xor jmp pop lahf mov fs mov cmpsl fsubl push fadds push aad push push or sub cmp rclb jne movsb push sbb es repz jge or js pop cmp mov gs jno pop push lds mov lea push xor jl int sarl mov mov xchg push push add hlt lcall jne (bad) out movsl test cmp pushf dec test jbe add idivb je fcomps mov test pop dec adc jae sub mov push in inc inc and vmulss fbstp adc rolb add cmp or iret mov jle lods pushf es sbb mov in add dec jbe mov cmpb lcall test pop js popf xchg in add adc jo mov enter rcrl test in out inc lcall inc adc stos sbb ja scas out jle movsl ss or mov leave pop out mov add or mov lock and ja cmpsb movsl add jo js sbb pop sbb sti shrl enter inc cltd sbbw push add (bad) ljmp enter and insb cltd (bad) cmp cmp lods and push loop stc push jg mov push sbb (bad) lahf inc out sti (bad) xor fld test fiaddl (bad) imul pop test sbb daa fdiv stc cli mov pop adc add push dec lock cmp xchg mov test xor pop in aaa xchg adc mov jg dec in add xchg dec (bad) pop sub mov dec daa fwait lret (bad) subl sbb ror dec dec mov fbld push sti inc insl (bad) mov out (bad) fidiv jp rcll cltd lock pop daa cmp mov lods imul push pop cs insl inc insb test mov loop add test repnz cmp test movsb push ljmp sbb adc mov xor mov push or pop fwait jmp mov xor cmp mov adc (bad) mov into push lret add jg xor pop xchg xchg int inc sbb or add sub out jl sbb xchg nop inc call (bad) jecxz and cs sbb aas mov stc pop (bad) ret mov (bad) sub sarl cli les (bad) incb mov into cmpsb movsb scas int3 jne add jmp pop sbb push xchg and (bad) dec es shl add xchg cmpsb xlat mov in cli outsl inc faddl adcb dec int enter jle pop add mov mov fist shrl incb mov mov (bad) mov and lret pop (bad) or cmp mov add sub or sbb and sbb xchg popa ficom iret pushl cmp dec lret arpl add es cld sbb fldenv ja sub sbb inc sbb std bound push xchg scas pop jmp dec sti popf inc inc and xor pop ret dec adc (bad) pop data16 push ds mov xor lcall iret sbb movl insb lds add sti popa out clc cs xchg cmp (bad) jge decb add (bad) xchg pop mov xor pop or hlt sub enter cmpsb mov divb and push (bad) adc fistl leave and cmp scas or inc rcr outsb inc scas jmp outsl pushf out add dec (bad) insb test mov ds pop xchg xchg mov jne loopne lods ss mov scas and fistpll pop xchg pop and mov in pop dec mov xor je lcall loope (bad) test inc mov neg cmp cld cmp mov out ja ret out rorl jle mov sub in addb sub mov push mov (bad) ret pop xchg xor push loope pop add in mov adcl cmp inc (bad) int3 mov insb test rorb xor std gs pushf push popa sti jmp push mov and mov jecxz loopne jno jbe lds cs cmp or dec popa shlb loope cltd enter stos popa rcll cmp cmp rcl cmp xor lret leave pop push scas dec fsubr jns sbb adc xchg call push xchg jmp outsl cltd bound ja and (bad) mov insl hlt popa mov xlat dec das repnz into add fildll mov inc push sbb xchg cmc jge outsb insl lcall inc add cmp mov ret pop jg sub (bad) jno dec adc ja sub jne (bad) repnz adc scas lea cs loope fs fiadd jno mov roll xor sbb lcall push xchg adc insb sbb (bad) fisttpl xchg cmp jmp mov mov movsb out nop and sub lds pusha loop mov jle jle scas and arpl mov adc mov adc add cwtl mov mov pop lret cmp in (bad) fldenv out or push sub sahf test add add int xor sti jno aaa jne roll mov cmc mov xchg ret jbe fcom or or push mov jp xchg cmp cmp xor sub loope ret xchg inc sub adc fs mov aaa mov cs jo and out pop mulb push jb lds mov mov mov imul jg cwtl mov sti shlb fadds div sti fcomps or ljmp sbb cmp test cmpsl stos imul lock jo xor pop or ficoml xor push imul rcrl scas pop push xor jo add push adc pop sub jmp add inc pop xchg gs pop cmp ss cmovle mov out fucomip sti add jae push mov xchg imull aad dec jnp cmp stc mov in shrl inc insb and mov dec stos mov shlb imul (bad) or push cli ss mov fdivrl mov jg lods into sarl lods ss call push sbb or movsl lock mov lods loop mov fldt shrl lods js pop dec xchg popa in lret leave je (bad) mov xchg movsl sahf insl (bad) fwait or inc lcall mov aas movzwl sbbb mov push cs mov leave fucomi pop jmp sbb adc mov xchg repnz mov scas pop js in popf add ret mov dec cmpsl cmc sarb repnz (bad) bound push push std rcr loope jmp xor or dec sahf out xchg in imul jle xchg cltd or mov loop mov das push call test or mov mov or add jbe and gs push jmp iret ret mov mov (bad) scas dec mov hlt inc adc ja fcompl jns jp insb imul les jo,pn mov mov push decb movsb inc sub and (bad) icebp aas aam out sub pop in mov or sbb jg stc mov xor leave push sub lret dec cs push pusha lods cwtl cmp mov cmp mov rcl ret cwtl mov pop std das or inc ret adc mov inc mov mov xor mov sbb push ror xlat and cmpsl leave xchg hlt xchg aam mov cmc arpl lahf inc lcall jns (bad) nop nop in dec cmp jl jle fidivr mov add and jl enter popf inc cmpl test mov add xchg sarb je inc jae xchg jecxz jne roll adc xor repnz shlb cli aas push je cmp in dec xor sarb jmp mov int mov or imulb cld test lock fdivr jae pop push or lret fimull cmp mov mov popf ljmp lret nop xchg xor fstl imul (bad) xchg xchg fwait mov rclb pop sti pusha mov add sti mov inc loopne and dec fucomi adc jae pop int or or xor pop repnz mov in mov ret or imul mov xchg cmpsl sbbb leave (bad) mov xchg subl dec and jge lcall pop mov or dec xor inc ds idiv xchg push add add lods push ror ficom sub inc inc cmp jb cs jno in pop add dec mov cltd inc dec aad sub inc inc pop xchg call mov xchg mov xchg cmp inc les add cmp mov sub mov lods xlat mov repnz out data16 xor test jno jo jne aas xor dec outsb cmp xor in dec mov jle in (bad) fist cmp fistl addr16 out cli dec shr std andb add add mov add fdivs cli sub adc lock pop aas and leave mov jl and lret fimul addl and and push and outsl cmp sahf adc out lret jno add inc sub sub fbstp ror push outsb xor cmp jge daa jp into jne (bad) sti sbb xor push (bad) cmp cltd pop xchg push cmp pushf add jno sub imul loope mov je outsl mov fwait push pop sbb mov pop inc aaa sub ret mov push icebp popf mov fildl pusha jne gs movsl lock data16 outsl jae and (bad) adc movsl mov xchg cmp sub add push fadd pop xrelease out fidiv mov insb xlat (bad) dec ret dec push lods (bad) out shrl fcompl xor je xlat lea adc jo adcl lods inc mov repz fs test (bad) clc adc cmp cmp mov pop jnp rcr dec stc loopne rcll call push xchg jmp fdivrs out roll lahf aas inc jmp or shll sub pop dec mov into mov divl shlb add cli pop lret sbb dec push xchg sbb xchg andl and xchg rolb cmc stos mov inc push xlat pop std inc dec jle loope sub mov inc ret jge add cmpsl and fprem adc js es xor push sub sub pop into test dec test notl movsl xchg pop mov mov dec fisubr pop ret sbb pop nop dec pop xor ss ss mov mov lods mov pop (bad) inc lret dec pushf out dec mov pushw xor push mov or mov mov xor or jb iret fwait pop leave inc adc add adc rcl gs shrb hlt jecxz ljmp pushf mov dec rcl cmc ja icebp inc xchg jmp stos pusha and xchg xor in mov add aaa adc jns sbb (bad) mov push lds lret cltd and dec push (bad) in inc or and decb int3 test lock and out pop (bad) xor push sbb mov out negb pushf mov rolb jbe jb pop mov testl xchg in mov fldcw repz fstps lods adc test lahf sub test cmp jbe imul xchg push mov or mov test mov xor fidivl add pop push sub push inc cmpsb mov in adc jbe add jmp xchg ss mov fdivl outsb rol fcoms jae fs iret xchg adc mov (bad) test mov fldenv inc add loopne push inc pop cltd pop sub pop xchg or mov popf aam pop cmpsb int3 mov dec dec xchg and sub addr16 add ret into dec in or or lods (bad) pop pop pop loopne dec dec jb xlat pop xor repnz pop jnp inc sbb aas mov fnstcw fdivp pop adc and add jnp fsubrs ljmp mov push xor push repz das shrl aaa sbb ljmp addr16 fnop dec mov adc add imul outsb lahf popf repz push adc inc push cmp aam adc xchg jmp adc or (bad) (bad) mov leave shll sbb push jle cmpsb sub loopne lcall test int jl std dec mov fwait or fs mov pop mov xor and pop bnd lahf enter push fwait xlat ret notl loopne cs add sbb jmp insl insb xor mov xchg test lret inc push xchg dec jae popa stc arpl lock jge push sbb rorl (bad) popa jl and dec jne aad in inc gs inc or cwtl xor or sub scas fdiv aaa pop push and scas xlat jne scas fcomps dec std nop leave push call add push rorb add lock ret testb push dec jl sub and bound inc jmp add pop and popa inc arpl jl dec (bad) enter aad push insl es (bad) movsl or push xchg push ja lret mov xchg adc js hlt dec cmp (bad) sti and gs mov fcmovb xchg mov pop imulb jnp dec xchg jmp sub leave add lea pop xchg cli (bad) lods lret (bad) lds rcll mov scas adc ljmp loope aad jns bound sbb mov shrb movsb (bad) std xchg fwait cmc jns jne and mov adc sarl cltd out loop sub cwtl jle push sahf pop or aam mov cmpsb xor cld sbb cmpsl pop test add inc jp and mov add push rcll mov out (bad) nop aad (bad) xor cmp faddl insb cmc icebp leave cli mov stc stc cld pushf inc cwtl jb das push and or mov dec repnz dec call or sub mov repz cmp jmp push and jnp xchg repz ljmp xor inc mov mov jle leave xchg xor add sbb mov xchg pop lea xchg dec push mov scas and push xlat pop sarl fwait lods out and cmp pop and jle jle sarl cs fdivrp scas cltd and push mov lock push jnp mov lahf add or push clc fwait and dec icebp pop jecxz,pt insb loop or std sub loopne data16 or jg sbb pop js (bad) movsl enter or and pop jne and mov imul jge das cmpsb inc rcrb add and dec das cmc cltd pop or fcmovne cmp xchg pop or xor jg adc ljmp add cltd ss ds or lret push and adc (bad) cltd ficomp mov cmp pop cmp sahf outsl add call cmp sbb loope push rcrl xchg jnp sub popf lret test sub cmc mov adc adc mov mov push das pop jp xor (bad) adc push test push inc stos fisub inc (bad) loope dec and in mov repz jae xor xlat mov mov xchg cmc rolb adc dec mov loope pusha push jne dec xchg mov mov mov push xlat or pusha push mov sarb das int3 mov mov (bad) cwtl inc sbb mov rclb inc sbb pop jge mov call sbb data16 jne shrb vpsrad (bad) notl loope adc popf xchg int mov xor ja daa or sub cs sub loope inc clc lods stos sbb add insb std or cmp fistl inc xchg xchg push and out les test addb movsb sbb mov test test xchg jns cld dec scas (bad) bound cmp xor fwait and adcl jno mov rclb stos cmp cmp ds cmp test jge pop fbstp add add push add xchg les in addr16 shrl dec mov ds xor mov data16 jg int mov gs loopne jmp popa rcrl mov xor mov or push mov xchg sbb add lret xor add jl ljmp xor jecxz xchg lods pop (bad) inc mov or adc pop ljmp pushf loopne push or inc loope movsb lea jmp mov imul push stc dec test adc mov add mov outsl xor xor outsb stos in das adc fdivs xchg pop adc inc gs faddl ror outsl xlat gs aam hlt cmp test dec lock add xor mov pop ja arpl inc movsl mov xor sbb fcoms fmull dec xchg mov xchg arpl jle adc imul aaa jmp daa adc rolb sar jecxz ret push rorb (bad) aaa cmp stos sub add popf addr16 pop fistpl cmp jnp xchg (bad) jecxz mov mov lods mov add insb push (bad) push and add push push cmp xchg ret push mov mov mov outsb dec mov out nop jnp in (bad) cmc xchg int3 push xchg sub adc jmp repz pop fmull push inc add negb jl jnp fcomps in in pusha aaa adcb push loope cmp les leave in bound out mov jle lock cmp addr16 inc sub or aas pusha mov inc addr16 jecxz xchg push mov inc pop roll popf into dec and and je icebp cmp dec clc sub mov pop aad popf mov loop jae mov (bad) adc pop cli hlt aas loop rol pop aaa popf stos xchg lods jle inc sahf xor cmp xchg mov mov (bad) (bad) mov xchg mov mov and push inc pop add xchg arpl hlt in loope xchg jg hlt pusha arpl adc iret lock jecxz lods movsb (bad) jecxz (bad) fsub (bad) in (bad) push xchg test (bad) enter inc cmpl (bad) cmp push jae xlat add inc pop cmp pop daa adc lock aam sbb sbb lcall repnz int cli jp xchg sbb inc cli pop pop lcall or jae mov dec movsl adc jl fadds js pop shll (bad) lock mov jle scas inc adc repz jle mov lods pop cmp mov mov mov ss mov lods roll inc aam mov xchg cmpl fwait repnz and mov ss fwait jmp aad leave aas inc add rcr push mov jnp mov pop flds (bad) cwtl sbb (bad) inc popf or das mov sbb pop inc lock mov push xor pop aad daa lods jns jge in movsl or cmp xor cmc les sbb aaa pop sarb sbb jge pop fisubl xor inc mov and sti (bad) fiadd jo inc and lret aam icebp adc movsb cld jns sbb xor cmp repnz in cld (bad) jg push jne in add orb rolb add add movsl ds int jbe fistpl iret xchg add hlt cmpl add pop daa lret test scas inc (bad) (bad) push sbb add or or dec stos push add lods mov test push mov sarb repnz ret push sub daa in sub repnz (bad) test cmpb lods int (bad) cmp clc add inc leave sub (bad) popa fs dec pop sbb sahf jae out lcall outsb aad pushf lods add stc int fstpt mov loope pusha out fwait add mov mov pushf mov mov dec sbb jle insb loop sub ss and (bad) xor mov mov jge xorl fsubrs (bad) xchg loop fisubr into sbb mull sahf daa jmp mov stc mov inc pop cmp in sti movsb jnp push mov divb mov ret sub mov shrl repz jge ret test popa (bad) mov scas cld fwait loopne jnp fprem out fdivrs and inc adc iret mov jnp call jg data16 int aam incb pop out in push les cmp in cmp sbb cmpsl sbb push pop sub mov jp xchg jo,pt test shll dec movsb enter mov push adc repz or push mov adc roll cmp jmp and stos inc inc stos arpl jge push mov insb mov cmpsb es jo jbe cld enter cwtl push cmpsl pop push mov repnz xor out or mov pop adc mov or push mov sub xchg test push pop xor sbbb sub cmp aam incb and mov mov outsb mov aad mov ljmp cmp iret jmp sub xor stos adc dec pop dec ss pop inc popf rclb ret dec xor mov and enter cwtl lret fidivl jns add movl jne roll xor movsb push dec shrl add inc (bad) popf scas sub (bad) push mov movsl in icebp push push in (bad) stc test xchg (bad) mov mov aas cmp mov popa dec bound pop in push je int xchg and add ret mov test ret repz ss cmp or (bad) add xlat imul cwtl mov jp adc cmc jmp into sbb and pop sub out sti cmp cmp inc scas or jge mov cltd and jae jns outsb out loopne jb aaa xchg iret ret jge sbb (bad) sbb outsb ret fld out fsts and int out jb divl mov (bad) sbb pop out leave inc arpl push (bad) push jns mov idivl or lret cmpb push nop pusha push dec push addr16 and aas insl inc push sti repz aas dec (bad) leave xor push sbb push cli out jae das orl ss cmp jo push ja pop jae xor enter ret adc daa dec xor xor push std jecxz xor in out push add mov cmp cmp dec push imul in cmp dec daa repz push mov outsl jne jo fisttp into pop mov cltd je fidivrl xchg loopne adcl test jnp push jg mov icebp cmpsb pop xor lods pusha movsb pop add sub ffree jne push testb jno mov mov mov sub pushf ret dec call (bad) lret mov jg lock cmpsl inc lds cmp hlt or mov push xchg jp test cld lcall stos (bad) sub adc and inc lds gs jp sub pop jg clc cmp aaa inc outsb (bad) shrb pop mov cmp mov adc andl icebp (bad) xlat jns or lret sahf fcom mov lret mov sbb pushf sbb mov ret fdivrp stc xchg popf popl lret jns and dec aam arpl mov cmp adc adc add clc push dec mulb shlb mov hlt insl aam or out xor (bad) jmp or andl inc ffreep xlat cltd sub lds jno xor dec mov or cmp lods pushf out icebp dec xor addl xchg enter sub (bad) cmpl push imul or cmpl mov cld dec outsl pop mov movsl stos (bad) loopne movsl mov jo cmp jge pop jg (bad) xor movsl cmp push pop add test and in in inc or stc jb mov int3 xchg xchg or mov adc insb push cmpsl les and sbb adc in inc and push xchg rclb ss push stos cmpsb outsl testl mov test call adc (bad) mov push and mov mov imul addr16 fadd pusha push dec movsb das or jns or ret pop mov js cmc in imul push push dec in es xchg pushf inc in push or sub mov jle push int jl rclb leave jno scas cmp mov in add push stos jno or jp in sbb insb aaa mov imul cmpsb (bad) or mov and push mov int inc out adc mov incl lea ret fneni(8087 int xchg in loope sbb aad mov (bad) push dec mov add inc sub out mov push (bad) xchg out mov fwait call lea push addr16 in xchg ds les mov pushf stos scas scas mov in mov pop outsb xchg jb sub and jecxz inc scas sub pop cwtl add or jp mov scas adc push mov dec xor out xchg mov cmc stos insb or or stos pop mov mov sbb xor (bad) sbb push imul mov xlat (bad) adc mov jl pop in test pop inc jno pop test pop xor clc notl lds cmpsl rolb mov imul cmpsl inc js lcall inc adc xchg inc in hlt (bad) xor or and imul or jle nop add (bad) cmp je out clc pusha xor jecxz mov jo and mov dec xor sub daa sbb mov (bad) jno ret dec add int insb fsubp adc movsl in xchg jle movsl sbb cmp add add std adc loop fsubrl add mov stc push or lods idiv dec scas push ss push rcrl movl fistpll das fsubl jge mov cmp adc lret dec cmp (bad) jmp cmp push jl jbe mov aad insb iret add call (bad) das sarb jp in push daa inc fistl cmpb and loope xchg cmp pop rorl cli sarl jne inc push add shrl mov sbb movsb mov outsb dec adc sbb push inc faddl mov das mov xor push dec loop xor sbb mov mov lods pop adc test aaa jle push cld dec push pop mov adc push adcl xchg mov fistp pop xor adc sahf sarb mov arpl sub lret pusha sub lds arpl or idivb jmp movsb and dec decl pop xor insb int3 fbstp lret xor lock lock sub sbb mov aas xchg arpl cmp out add cmp pop lret xor and imul sub mov cmc call inc sub clc clc dec dec and dec xchg mov leave cmc mov push enter fstl pusha test push xor movl mov pop fisubl icebp stc lret xor or dec fld ja mov cmp push (bad) hlt out mov das (bad) loop fldcw xchg sahf popa jl xor sub fldenv mov mov int leave inc xchg iret jmp out xchg and pop imul dec (bad) lock shlb cmp aas jl ret scas scas out lcall and xlat fsts jle imul out (bad) sub jg or inc push mov push inc push cmp mov enter jno pop xchg rcrb fnstenv dec rcl xchg repnz jne push sarb cmpsb aaa dec (bad) fnsave inc aas mov sbb iret subl pop dec inc pusha pop dec push push test mov pop cwtl add aas cs leave xor gs lcall pop jl mov jns aam dec mov xor push dec dec aad iret clc cltd (bad) cmpsl pop cmpsl push test adc push or stc mov inc jge dec fs push repnz sub adc xchg (bad) iret fndisi(8087 sub push push popf cld call repz test das decb cmp dec xchg mov dec and faddl movsl dec popa movsb test sbb pushf lods lcall cmp mov es js cmp cmp xchg rolb adc popa lock fistpl inc dec pop sbb mov ja roll (bad) int3 pop mov (bad) sub or push mov add in loopne push lret dec sbb cmp sbb enter mov std test pop add fucom push out sub adc and cmpsl js xchg adc addr16 das pop push (bad) pusha adc in jecxz popf cmp stc sbb sahf fdivrl cmp cmp xchg stos fwait popf inc dec dec xchg adc pusha pop test call ds pop mov stos fild movsb sub jbe push jmp jae inc xchg inc stc fldcw lea pop jnp stc mov sub ror sub rorl es daa fcoml pop xchg loope test mov mov js xchg insl pop pop rcll jno (bad) mov cmp xor test arpl (bad) pusha inc mov gs jmp add sbb das xchg jmp lret cmp sahf iret fdivr pop and sahf gs jne rolb mov jge jns aad add mov push mov adc jge pop int int sarl fcoms faddl push jp add loopne pop xor andl sub jbe jns aaa xor (bad) push ja add (bad) dec outsb jbe (bad) stc push mov xchg (bad) sbb leave aaa pop daa cmpsb jbe jg int3 push loope test gs aad pop in add repz loope adc cli push xchg test test stos xchg jnp fldenv or cwtl in add cs pop gs mov pop jae (bad) rcl ds xchg push mov dec mov in rclb add jmp int push lahf rorb pop cmp pop and cmc in lret fs jb icebp (bad) cmp jb fs repnz sbb ja and repnz push dec leave mov or cld repnz neg sbb add jecxz mulb test ret cmpsb push jecxz lcall fcompl outsl add sub xor (bad) mov sbb push dec cmc outsb (bad) or (bad) mov mov pop adc mov stc inc or push cmp mov test mov cli jmp iret cmp mov dec and add fistp mov es jns aad js push adc fnstcw mov mov pop mov mov lahf cmp lahf mov pop push lret ss lret leave icebp xor and jl mov push ds inc imul push pop xor xchg cmpsb lods dec dec mov in fistpll sar out ficomp xor sub std inc fistpll sub scas push push fisttp iret inc rolb adc repz jbe ss testl add push lret lret cmp push mov mov cld push iret lea sub or adc mov inc sbb xchg inc jp inc subb jecxz xor mov xchg scas xchg mov sbb adc sbb data16 pop pop lcall inc sbb popa push push xor std cwtl leave (bad) push mov aam cmp test jle pop test test js pop (bad) fidivl insl xor test push and sbb sub lret adc and xchg push rolb push mov mov (bad) popl or cld xchg andl rorl nop add out ret cmp jp xor fucom loop inc mov popa or imul addr16 mov inc mov add rcrl mov lret push cmp insb cmp mov inc cmpsb adc mov add dec xor ror mov and gs mov and iret (bad) sar mov cmp mov push cmp and cmpsl test push lret ljmp lods lods cmpsl aam std xchg pop xlat test dec out sti movb out aam mov pop push xor mov cs inc xor pop gs xor call and fidivl outsl (bad) dec jb xlat inc pusha mov xlat popf lret mov sub add and ret mov push mov lcall scas xchg ss sub pop mov mov pop roll in mull sbb push fidivrl sub push sub in test ljmp bound int add loopne out and dec pop ret pop xorl addr16 sti xchg stos js fdivr loopne lcall bound jl cmp xchg je cmp dec push mov mov jb pop movsl and jnp and fistl clc push push jle and inc je into xchg mov add inc popf ret (bad) pop mov hlt xor scas xchg repz xor fs in stc loope sarl les jno cld fucom imul xchg fistl pop mov xchg and sti jb adc adc aas xchg loopne jg,pn cmp fstps ds insb mov sbb gs out sub dec scas mov inc pop jmp mov call flds xor fsubl dec pusha xchg jne cli jne out rcr popa xor int3 jmp push fsubp pusha xchg aam sbb jmp or cs inc popf loope cmp aas into adc push fimull mov je mov and imull mov or sbb imul jo int3 mov pop shrl sub and lds andb xor jp jb adc inc lods aam and push cltd mov dec pop jne pop dec ja icebp std pop pop fldz xchg xor jbe mov xchg mov push (bad) out ljmp in xchg jb out mov xchg inc sbb xchg js shll lret sub jns dec cld adc sbb lods sub insb and push push sub ficomp sbb outsb lcall mov into outsb lods inc cld cmp fcmovb inc mov inc es addl cmp pop lds push (bad) stc aaa xchg leave or fild jl dec popf mov out out cmp inc test movsl lret mov sub inc add in sti dec (bad) ljmp out push sbb sub ja push std adc cmc jp fldln2 (bad) sub cmpsb rolb mov in sub mov jne lret fildl test in push js fstps movsl jecxz js sti or sub int sbb (bad) movsl push cmp or cvtps2pi scas mov mov (bad) xor sub (bad) jo pop xchg out in jmp mov inc in pop ljmp ret loopne repnz adc mov pop (bad) stc jnp cs enter mov int jge std pop movsb rcl add (bad) int addr16 leave into push cli dec arpl push mov xchg cmc arpl sbb fbld rorb clc jmp aad sti lcall insl (bad) pop push and jno test loopne add push sub pop cltd sbb add push mov cmp incl and stos lea mov bound sbb movsl xchg test inc push push sbb sbb lahf (bad) lret fsubrp dec test call bound and sti out cmp inc inc call (bad) repnz les adc cmp and inc aaa pop (bad) testb shrb mov xor mov mov pop inc jbe pop out xor mov lds add loopne jne imul aad nop cli add sbb inc xor cmpl call mov out xchg mov repz movsl jns dec xchg and jp sub (bad) arpl daa arpl mov inc mov ret loop ror sub mov scas in (bad) fsubr xorl jmp mov leave mov mov inc sarl and mov jle in popf or dec mov or pop mov mov aad gs cmp icebp fcmovb out add mov imul outsb rcrb cmpsb jb mov cmc push and pop cli lea fildl inc pusha push fwait cmp mov les xchg jb mov mov xchg fcoms mov mov lahf loope sbb sbb inc xor aad pop xor push out movsl sysexit into lock outsl lods push mov mov cmc arpl pop mov fbstp dec mov shlb (bad) or cmp inc pop push stos xchg sbb dec mov mov ljmp testb divb xchg mov outsl or mov push jmp dec dec outsl iret jmp in add jle shll fldt ffree loop add enter loop and popa lret pusha out adc clc (bad) cmc dec bound fmul fmull and negl repnz ss mov cs lds dec add xor subb mov gs inc in mov push (bad) cwtl into lcall and xchg and push jp fs subl or add xchg xchg jp mov fyl2xp1 and int fwait rolb push sub xchg jns or cmp fs sbb pop mov cmc pop xor sarl mov pop fsubs pop mov shr shr mov inc cwtl add inc fscale test repz and sub jg inc mov jmp das jb rcll adc std test shrl cli and mov dec xlat push inc add push mov xor sarb sub jnp addr16 jae mov stc (bad) push pop and xchg xchg inc cwtl add pop cmc cs dec push ds mov pop sarl ljmp shr add inc lds sti (bad) or test loope clc sub pop sbb mov push js xor push insl movsb add and cmp adc fisubl ds and jmp cld lahf gs add test data16 xchg (bad) xchg jnp add jns inc lock jp in pushf xchg and sub push scas mov adc xor xchg imul rcr push mov aaa xlat out mov mov std gs std cmpb popf ret call mov js leave (bad) ja mov and push cmp and jno pop mov shlb sbb test negl ss mov and rcl cld icebp sub bnd xchg pop or cmp xchg xchg (bad) sub addl adc fdivl sahf insl fisubl and cmp shl shlb pop lods inc test icebp lds mov (bad) (bad) rcrb and lret pop add sets les imul icebp xor stos enter in dec push and xor mov movsl in data16 push repnz lret and ds dec mov push rorb aas sub mov cmpsb mov mov popa mov inc scas add in stos push loop aaa cmpsl test test or into and mov mov outsb in sub hlt loop add stc cmp loop popl jnp cmp lock addb jmp (bad) out ret jne ja add push daa repz lods inc sahf xor pop imul or pop sub push mov add dec adc xchg xor pop divb mov ret add testb ljmp mov out mov and in sub jo gs iret adcl les xchg push or mov push repz cmp xor clc push add jp mov (bad) aaa je or push dec sbb fstps mov shrb push dec sbb jae dec daa dec lret pop xchg jns mov aam bound adc xchg pop mov mov dec mov test loopne dec cmp pop adc dec ret mov sbb mov addr16 ficomp fisubr jg movsb out icebp sub ljmp pop leave aas and cmp push outsl xchg xchg out lret movaps sti mov rolb inc cmp enter fnstcw aas jo cwtl cltd ds ss inc xlat sub pop dec movsb mov jae test lcall xchg inc stos push add stc jnp ja pop jns jge pop inc inc test dec push adc sbb int xor inc pop clc lret fisub add ljmp fdivrs xchg idivl jno pusha repnz jge sbb lods dec cwtl loope dec outsb iret hlt fisttpll dec test and popf cmc pushf add add data16 lret gs mov xchg jns and cmp mov mov rorl jl add aaa jne dec cmp mov mov lods push (bad) arpl testl lcall icebp les (bad) xor adc arpl outsb dec inc mov cwtl shlb jne lret outsb add ja pop mov jp jl dec xchg xorb lahf nop adc bound mov test pushf shr pusha adc outsl mov pop dec stos sarb cli cmpsl pop pop dec mov push mov pop xchg jbe sub adc pop and sub and ds add in inc xchg ffreep jae mov sub sar mov int3 test into mov ja roll mov jle sub or popa mov cld cli add sub imul jg push rorl int cmp or inc sbb bound aas inc cmp mov ja sbb (bad) (bad) and pop mov xchg outsl bound push jae cmp or mov jp xchg jmp adc lret and rclb mov rcrb pop pop or mov icebp adc inc add cli out (bad) ror les arpl push movsb adc inc leave inc mov pushf out lods cmp jne jbe add pop cmp sahf jnp mov and pop loop dec mov cli mov scas std push (bad) or movsl dec das cld dec stos in push ja loopne inc or fs int insb dec adc fcmovne cmp dec push mov cmpsb dec dec mov pop xchg jns out dec sbb out lahf sub fcomi adc ss and dec xchg cmpl push mov xchg jae mov xchg cmp xor cmpsb jmp addr16 inc mov pop fnsave push pusha pop cwtl rorb jno mov mov data16 mov call insb loope test out cmp jp xchg stc or or or cmp xchg ret in hlt pushf (bad) fcmovnu push pop and insb inc in nop fcom fwait hlt out lret add sbb or add scas lret clc adc inc mov pop inc mov jle mov ja mov aaa sbb xchg cmp and ret dec xchg cmc jae outsb in dec in ror mov adc pop ljmp mov inc movb mov loopne cli jmp (bad) xorl out sub xor aaa pop jle sbb loop icebp out cmp sub push adc shr sahf xchg cli xchg add mov dec mov sub (bad) dec stc add sbb fdiv dec cmp and leave push leave sub imul push xchg mov xchg mov aaa ss daa fs stos adc aam mov jae imul ja fidiv test and or sub ret inc in sbb arpl negb test aas sub clc stos jg pop sub stos in adc dec inc (bad) mov outsl ret mov jecxz xchg imul dec (bad) (bad) mov pop cs lods pop sbb iret sbb in mov pop fstl and lcall cmp cmpl out into sti popa adc (bad) outsb add push jne sbb dec lea outsb adc ja ljmp push cmp out and test push push or inc pop xchg ficoml xor xor mulb pop mov adc jo cs cmpsb jge (bad) mov or rorb outsb dec mov int test adc iret add test mov test out jmp call js inc (bad) and vmread out mov inc imul mov xchg (bad) fild cmp sub outsb test jno pop add push fsubs xchg (bad) pop out xor int aaa add loop inc cmp push pop jnp sbb xchg inc inc lds jge sub jecxz fcom mov jns pop das (bad) push adc push inc inc rol clc inc lahf repnz and adc shlb sbb xchg out loop jmp cld pop cs ja jp mov arpl popa add (bad) push imul mov aaa mov mov stos pop out bound data16 test je repnz popa arpl fsubp pop insl stc mov and scas adc loop pushl cmp sbb and add icebp mov mov fiadd pop repnz pop pushf repnz imul ja movsl add cmp inc and paddsw bound ljmp and insl shrl adc popf mov es lahf or xchg lods and aas dec xor push mov stos mov mov and lahf dec cmp cmc loop stos lcall outsb stos negl leave into popa test lret out incl addl dec test xchg pop scas pop mov jno cld lds imul xchg mov mov fcomps mov pop dec (bad) (bad) int3 or test inc mov gs and xchg dec push and ret lahf sbb and int push mov push pop mov jne dec imull ror (bad) lds outsb sub mov jecxz mov mov add mov clc push movsb mov push inc or jmp inc inc inc xor lods iret push xchg pop adc out jns in ret adc xor out mov pop and adc sbb pop xlat jp outsl sub pop cltd andl aam sbb stc ret xchg adc gs pusha repz mov xchg xchg push mov (bad) stc mov pop xor movd insl push dec arpl fdivl mov in mov loop mov sbb repz test nop bound jns inc test sbb ret hlt in mov daa and or sahf push (bad) pop out cmp jl test (bad) sti and add or mov lret ror jp (bad) iret dec push out xchg push push loope mov iret popf repnz cmc mov sbb xor cltd and sbb or outsl mov push pop scas (bad) out fidivrl or out scas sub adc cmpsb inc mov jge mov mov add pop lcall out sub testl adc xchg cmp xchg ja lret mov pop les cmp jns fs imul mov test pop aad hlt jp jge orl mov push arpl inc test cmp sbb mov scas aad in cli ret push cmp push popl lcall nop pop mov mov int add stos stos ds pop hlt cmpsb add push out dec mov int3 push mov mov addl lds adc mulb push popl lret repnz cmp out inc jnp mov ds aaa (bad) xchg cli sub fisubl xor rcl pusha jge pop xor call sub fisttpl push clc jnp dec mov inc push loope dec push (bad) xchg jg imul pop iret xorl mov aad xor in adc xchg js fadds sbb push sub outsb loopne bound outsl sti aad sub leave and icebp sbb out adc mov je fimul and jecxz in add pop (bad) inc adc dec xor xchg aas dec scas shll xchg xchg mov mov (bad) sti dec in sub (bad) iret mov inc loope or mov push aad xor jae mov push lea roll mov pusha push xor cmpsl lods test push jle shrd push orb sbb cltd in cs (bad) sub bound loop xchg mov inc xchg xchg pop jne jne mov push add (bad) cmp sub test and xchg sbb gs subl aam jo lret mov scas jle and fmulp mov lds (bad) movsb dec push daa aas mov rcl pop rol xor repz jb fmulp cwtl xor pop scas xchg and les aam das dec in cwtl and ret aaa jg ret mov lahf inc lock pop and stos (bad) roll inc adcl cmp dec dec cli push push flds cli and push jecxz loop jle out push mov mov sub jge js loop popf insl ljmp inc movsl or stc test enter addr16 ret dec adc mov pusha rolb mov dec add dec cld cmpl ds test and sbb xchg sbb mov fnstenv addr16 dec (bad) mov dec data16 pop jecxz mov loop dec imull jg and lods out and out mov mov sarb out imul out std daa stc inc xor push mov repz fnstsw mov lret lret movsb dec ljmp push lods scas (bad) or xchg movsb gs jmp push cwtl jmp add mov mov dec out js decl fistpl mov push cli mov or es inc mov sbb cli add repz inc fsubrl jo (bad) (bad) mov movsb lods stos repz inc inc jb fwait xor and sbb pop dec loop insl add divb add repnz mov movsl mov lcall int or push loope inc mov xchg int inc ror push mov (bad) mov push je arpl xor rclb sahf mov mov mov pop adc fwait fwait add push mov pop jnp jne or mov scas fstl shlb das xchg mov sbb icebp mov adc mov pop push movsl cs jnp add (bad) call push and scas pop pop sbb xor cmp cs les and mov inc cmc sub out mulb mov lods popf repnz clc ljmp shrb lahf mov push push push das xchg dec popf dec repz fidiv int3 in in lods cmp add loope or cwtl add scas jg jge sbb mov xchg xchg fisubl cmpl pop jnp repnz loopne mov lds dec jg fldl mov or adc push lods pushf add xchg outsl jmp imul sub cld psllq loope in (bad) xor mov aaa sub das mov push (bad) test in mov xchg sub xor imul adc test nop dec push pop xchg inc sub cwtl xorl lret stc jb mov add cmpsl pop mov mov das mov mov or push and incb daa mov (bad) les sub pop xor pop cmp test inc mov push dec fldt movsb mov and movsl popf mov sub jae hlt jecxz rcrl pop ds outsb popa inc add sbb pop hlt stos push out inc dec mov add jns pop mov add xor inc popf test inc ret and shlb sbb out adcb cmp rcr mov das movsl push test fsub jae into push and orl sub dec mov xchg dec cmp pop std sub mov xor daa arpl popf bound sbb or inc je mov jne shlb mov and les sub (bad) jecxz jnp and data16 dec xchg cmpsb cwtl mov movsb sahf fcmove fild jp cltd roll dec mov jp rcr mov andnps pushf and fwait (bad) adc out cmpsb or cmp pop or mov aad insl imul cmp cmp cmp xor lahf mov jo jne push xchg or ja lock jmp adc fldcw rcrb arpl into stc jno jecxz mov sub or mov cli loope and xor stos (bad) stc add das aam push sahf mov stos adc sub mov sbb hlt push in gs cmpsl sysenter stos movsb dec insl xchg int3 lods cmp repnz (bad) test aas idivb mov push mov out inc jg fldenv cmp shll inc mov mov pop mov mov mov dec jo xchg lds push test jbe std add (bad) jle or loope ljmp push loop or pushf in fisubrl hlt out test inc scas xchg into outsb jnp jbe cmp jns or mov sbb pop adc jl cmovno xchg (bad) notl les or inc mov sub mov xchg mov mov dec jmp adc dec xor add fs movsb jle int3 push call sbb daa jg pop adc mov fcomip inc add adc add mov pop cld arpl lods and mov mov lods loope dec test mov fwait push mov jecxz inc xor cld (bad) notb out push dec jl adc lea idiv leave mov inc cmp ds xlat mov loope jg cmp fidivl pop insb in cmp jmp negb or icebp loop sbb les adc jge xchg cli push nop out jo movl xor sub mov (bad) jmp sub pop (bad) mov xchg xor xchg out jae movsb insb xchg lock mov add pop sub or (bad) leave mov add (bad) mov rcll mov inc (bad) pop push or aad insb cwtl push aas cs sub pop hlt inc xchg mov cmpl js out and jne into insl lds xor jl inc jae jmp outsl test shr push inc add inc cmpsl dec jl iret jnp push cmpsl dec (bad) mov mov or stos lock (bad) in (bad) (bad) into aas sub xchg fucomip push and mov jmp dec mov arpl in push sahf shrb (bad) xor jno xlat hlt mov xchg jmp cmpsb mov lcall jle movsb and cltd cltd jmp out pushl pusha fild pushf lods push sub (bad) adc fistl sub daa mov imul pop jg outsb adc or mov pmulhw (bad) push ja mov sub lods mov xor scas jns and jp gs xchg dec stos push aad pushf test lea gs mov jb jnp jg mov out xchg mov out xchg repnz pop xor shr jne mov cwtl sbb mov push xor pop mov push push ret mov add dec push call popf xorl sbb or inc cmp add xor sub loop dec xchg les int3 sub sub outsb cld (bad) bound cltd pushf mov push sbb sub dec mov es jg das push jo and cmpb in adc scas jae xchg adc mov imulb inc mov stos dec xor adc or popa add out ret adc and and (bad) xlat or psrlq bound dec mov xchg mov mov sbb adc push (bad) jle xor and in or xchg pop xchg jg loopne ret loope hlt mov cmp mov int leave test ss cmpl lock out aad loope outsl sub fmulp addr16 adc jg lds movsb mov int3 popf sbb lods sahf mov gs test pause scas sahf adc add (bad) in addr16 (bad) dec cmp adc fldt aaa jmp xor leave repnz jbe mulb outsl rcrb movsb insb sbb sbb mov int roll mov jnp mov push inc (bad) mov inc fisttpll rorl pop lock jo cmc mov mov jno and pop xchg stos dec mov repnz jne xchg add add call lret push xchg mov add in adcb lds (bad) or fmul cmp sbb jae jg lods dec mov aas push mov nop cmp push lret sbb ja mov inc jo jne popa clc test imul lock mov cld mov imull (bad) dec sub push into jle cmp lock in test lds dec jmp mov jmp mov lds xor mov out add sbb fildl or and hlt push dec push ja pop xchg sub sbb test lds xlat ja sub cmpsl or icebp add add fidiv or adc pushf lds out push xchg loopne insb xchg cli in inc mov int3 push sub mov (bad) hlt push mov xchg jl mull mov sub push mov or out ret mov xchg movsl mov in dec dec fs mov sub aam pop cmp inc cmp and (bad) aad pop test mov lods rcrb insb (bad) mov cltd ds push enter and fsubl cmpsb pop add cmp xchg outsl test add aad in mov int3 sahf in pusha cmp ss push test or dec add dec cmpsl mov out (bad) push and (bad) xchg add push add out pop out push loopne call and jo xor jne insb popa sahf lods xlat lds mov jae xor push mov sub add fistp lret es sub mov lock mov cmp mov lea mov inc sbb fidivr hlt push insl fwait jb push dec jg mov leave add (bad) jb jp mov cltd stos in pop int3 sbb loopne inc movsb mov pop cmp ja jg and sub aad pushf sbb sbb rorl rcrl push (bad) mov sahf pop sbb push dec repnz negl fnop jns dec push mov (bad) and push js test xor js push addr16 (bad) sbb mov andb jg xor outsl mov (bad) lock (bad) ffree (bad) dec or aam mov and push jge mov sarb dec push inc repz mov sbb and add or and cmp bound dec (bad) int3 jno mov clc test ja das or adcl adc push push repnz insb call sahf sahf jno and dec cmpsl adc xor mov loopne movsl ret pop adc sub dec xchg je add and test mov push in push ljmpw iret jne cld xor test push lcall or fcoml xchg aaa test or nop and pop scas test repnz popf out pop or orl popa sbb (bad) mov adc clc fldenv std mov lds push xor insb sbb (bad) fwait sub cmp (bad) into pop arpl xor push loope jp jle ret and push dec push test jbe popa lret aad shrl jb test sbb call outsl lahf xchg popa int3 lods mov pop movsl ficom mov pop push inc pop sub and adc jmp mov shr popa inc xlat jl mov pop popa in mov cmp icebp mov dec dec inc lahf dec xchg mov pop dec mov (bad) (bad) mov aaa dec push xchg add (bad) lea pop das cmp mov test call and cltd fisttpl push test cs xor cmp xor xchg mov push repnz aad movsb inc fs js sbb dec pop jl mov adc (bad) xor jge mov cs jle jno imul xor fdivrl jbe mov xchg jnp loope mov insl pop rclb ret lcall enter or push mov xchg mov mov js (bad) js lret sarl icebp sbb (bad) paddsw inc xor sbb xchg (bad) ljmp mov nop dec out push push add push mov ss cmpsl frstor (bad) xchg push movsl xchg mov jge cmpsl pop fs cmp inc int adc bound xor aas loope (bad) jl push das shlb test pusha xchg xchg add push arpl adc sub xor popa cs adc inc stc jecxz jp flds mov lahf rcr cmp inc sahf jb movsb inc push mov cmpsl das (bad) lret (bad) mov add daa mov and gs cmp lds mov pop mov aam into mov xchg pop addr16 push outsl (bad) mov (bad) jmp or rcrl fstps dec or jno dec push mov imul xor add (bad) jbe gs cltd lea pop jmp pop call and jne nop leave dec pop movsl in and sub sub jo push add dec movsb xor roll cltd ficom call cmpsb inc lahf sbb pop (bad) mov daa sti cli dec inc jno xlat aad mov add je inc cmc and add in popf subl cmp lods jbe stos sbb clc cmp daa mov fsubrs jmp sbb jg jo dec inc jae (bad) mov gs stos sbb outsb xorl jmp push mov pop sqrtps adc in xchg (bad) and dec sub fs (bad) mov mov ljmp adc sbb gs sub pop push mov iret ret ret sub cld xor addl (bad) clc mov lods dec push mov movsb xchg movsl sub push (bad) adc inc lods (bad) out lock pop mov add sti inc fwait push xor lea pop enter xchg hlt lret adcb dec xchg aam cmpsl and pop add mov (bad) cmc and sbb adc add push xlat (bad) sbb or scas add rcll gs pop xchg mov jnp sub cs mov mov int mov lods ret lahf (bad) mov xchg mov pop adc repz mov pushf inc or push sbb xor mov push nop push ret dec or dec mov fwait lods adc outsb cmpsb and push repnz pusha iret decl mov nop rcrb sbb movsl lret xor in and mov or shrb add jb add sti jecxz mov clc xor lret (bad) or dec jo xchg mov sbb fdivs outsl add xchg jg cltd sar pop arpl (bad) pop mov fdivrs addl lret adc dec mov push mov mov inc dec lret in or jo mov aaa cld fstps add (bad) je bound jge cwtl push std (bad) fwait mov push cmp sbb mov not jecxz (bad) adc mov xor pop push fldl or pop mov lahf sbb cmp mov es lods mov (bad) ja pop sbb inc and pop jae neg jbe xchg jle fcoms jb and mov add push pop or inc push adc cmp cmp add mov popa pop mov mov pushf mov inc mov inc imul inc es je add popf test push scas fninit aas popa mov sarb sarl and cmp das push xor xor popf aam dec mov mov and sub lret dec data16 in mov dec adc sar mov mov mov (bad) in pushf or xchg pop clc aaa lahf test cwtl add (bad) ljmp mov pushf sub inc and in jno add (bad) dec dec sub xor pop (bad) pushf stos mov cwtl jns mov pop decl sti mov sub lret jecxz cmp je sub push clc inc push arpl les fimul (bad) mov ror hlt jae std cmpl insb xchg jbe rcl or add mov sahf mov mov in test and jns jle pop loope pop loopne ja int adc xchg arpl push pushf mov dec test xchg (bad) clc imull mov inc mov leave insl mov lods mov mov in (bad) ficompl (bad) xchg out mov push cld mov addr16 or mov nop (bad) or aas inc test push lret fistpll data16 mov xchg out sub into xor push rclb and test out loop test push xchg cmp add xor mov mov add insb add hlt jmp inc xchg inc imul xlat inc xchg outsl int push xor je mul and in inc adc push sub pop imul enter ss add push lret xchg jp sub pop add sbb in out (bad) scas (bad) out pop aad push or cmpsb xor int adc arpl aaa push scas repnz sbb (bad) pop (bad) (bad) repz lcall pop stos xchg xor add xchg sarl loopne jnp loopne pop icebp push nop sbb in cmp xchg sar push sbb xchg rclb rol cmp adc pop out mov push push jne mov mov sub jg xchg jle lds ja addr16 and jo std add (bad) mov fsub fs push sbb or (bad) in cmp addr16 jb pusha or out (bad) jne adc mov (bad) movsb jnp inc sbb xchg adc or lcall pop xor cmp dec or dec dec mov jbe std cmp fild mov jo push int3 add push test cmp add cwtl or or sub es fs cmp mov or insl dec cmc mov fidivrl ljmp nop js mov mov idivl inc hlt aad jecxz arpl dec test sbb aad xchg test test (bad) std shlb dec pop push jne (bad) arpl es data16 shrl xorl or mov aaa dec inc call xchg jmp cmc lret icebp (bad) stc (bad) push daa sub adc shrl fwait popa test add mov xchg mov scas dec mov test cmp sbb push jo jb sub pop adc pop out test adc inc fmuls mov aas out bound xchg loop pop pop dec arpl out hlt sbb mov popa fildl mov fildll (bad) pop add (bad) idiv (bad) arpl out sbb mov arpl insb cmp dec or add push push sub jle pop push jmp lods aas out dec cmp sti jl xor ret cs rcr xchg cmp jecxz fistl xlat cmpsl insb push fstpl or ljmp inc cli addb scas xor fdivp sbb cmp lods insb (bad) dec bswap mov pop lret pop mov mov pop repz sahf sub stc fs insl inc psrld jecxz je xor push add push mov xchg js int add shr (bad) shl add sbb inc test lcall and sbb push leave imul jb neg in ret cmp imul nop and mov test enter (bad) imul pop mov xchg daa push cmp adc xchg push clc in push xor loope stc repnz mov imul xor mov mov adc pop cld sbb enter fcmovne mov in enter jmp les mov in mov xchg or aam data16 aas xor addl std icebp sbb adc fistpll shrl xor clc jmp lahf aad icebp jge pop pop xchg repnz jl clc pop and ja inc cmpsl data16 push std and out pop lahf (bad) mov jne push pusha inc inc adc add into movsb xor loopne divb enter fnstenv fimul xchg adcb pusha sub sbb lret clc in mov lods fnstcw push push jo pushf fidivr adc jb mov int dec jne faddl (bad) rorl xorb loope (bad) lahf (bad) or pop hlt mov imul imulb rcr arpl push aad lret mov sbb rcrl movsb pop sbb push hlt stc arpl and in mov fdivrl out pop addr16 sub and push dec aam pop mov inc test mov sbb jle aad inc pop dec inc fbstp sti iret inc hlt or cmp iret (bad) xchg xor sub xchg shrb repnz mov popf and (bad) jbe sub sarl sbb (bad) xchg fwait rcrl and daa and imul jg push push xchg pop pop pop xchg mov xchg scas xchg insl or fistp test lret popf call aas xor dec imul jbe pop xchg je idiv test loop aam add lahf or mov ret repnz mov sbb es mov mov push data16 ja icebp jnp or imulb in out xchg out cli repnz popa in mov jns add aaa lret das aaa mov jecxz inc loope loop outsl insl adc pop add imul mov leave stos mov lret imul inc xchg test test add arpl pop rcl repnz mov mov push test das dec push fiadd pop dec mov lahf outsl outsl cld jne lcall ss sbb pop jno fwait cs (bad) dec jbe mov fldl in (bad) xchg push mov vmovups decb sbb dec inc repz push pop sahf enter test xchg repnz imulb sub cwtl mov test push insb xchg icebp pop add push stc add ffreep test pop lret fiadd ret (bad) aas int3 fsubrl sub notb into xchg and sbb jmp jo (bad) mov and pop mov leave xchg inc mov pop inc xor nop movsl into xor shrl enter scas sbb loop daa insl ret push jbe add cmp cmp iret fcmove jnp mov pushf sbb out xor scas and adc dec movsl aad popl adc out aam sti mov cltd mov rolb cmp lcall jns inc les xor adc in push iret arpl mov imulb sub add push sarl mov mov ljmp fmul addb push dec std add clc in push inc jg lahf inc lods scas ret add adc nop sbb (bad) xchg mov rorl int3 loop jle mov test iret cli cmp cmp jg xlat pop ljmp insb jne cmp jo inc inc int mov in push xchg (bad) xchg jno sub xchg sbb lahf das outsb push ret leave je pop jecxz sub outsb inc cmp push test (bad) inc push lret test das leave ljmp arpl mov dec outsb xor in inc sbbb push shll mov fistpl (bad) iret repnz ret sub in inc cld mov xor xor cmp lret pop ljmp rcrl pop jb int3 int (bad) lock add inc inc xor stos or pushf pop rcrb add jg sarb mov pop jle sub add mov test or push mov sbb push inc out (bad) xor gs xchg sub mov or mov inc mov lcall mov (bad) dec movsl pop je push (bad) cwtl push adc ficom jbe int3 mov pusha inc (bad) jg ss dec xor lea fldt cmpsb icebp add arpl sub sub pop inc dec test jle out (bad) sbb lret dec dec cmp lret mov stos push push fmull fld xchg add enter sbb jmp std gs sbb adc rclb adc pop (bad) and pop insb mov push sub sub xchg and jmp pop aam mov int or inc xchg lahf add mov cmpsl push aam inc not insl push cmp xorl pop sub mov push test xor push cld scas jle das jb fcmovu jle iret add insl jno mov mov int3 pusha push dec fidivr (bad) mov dec pop (bad) stc mov inc inc lret and sub stos pop pop dec add pop movsl dec jmp cmp imul scas (bad) sub pop int3 sahf jmp lock pushf repnz lcall fwait jno mov and mov jbe mov mov (bad) rorl mov movsl lods and repnz pop ljmp push adc iret sarb (bad) dec icebp jb movsl push fild pop repnz (bad) call adc dec pop fs popf clc lock lds imul pop push ja or adc mov cltd aam xor mov fucomip sub lods repz mov push or jl (bad) lock iret mov sub mov cmpsb in dec cmpsb jae sbb in xor jbe (bad) sbb mov adc add outsb ja mov pop cld xchg inc cmp xor daa xchg movl push cmp div das and js mov in mov sbb enter mov mov outsb in ret lahf pavgb pop add inc mov mov adc dec xor inc or add ds pop std inc lahf lret ja insl jnp jmp adc dec pop xor js arpl add out sub or mov adc setle int3 inc sysenter jno ds ja or int fild ret or loope mov mov and mov in lahf push fisttpll cmp rcrl call xchg or repz pop xchg mov clc arpl iret push fcmovbe leave dec dec movl cld sub push out insb inc sbb fdivl out cwtl xchg sub shlb outsb into cmc sub sti imul movsl int3 inc dec xchg sub lods les dec mov jg cmpsl mov lods shr push jo xchg pop paddsw sbb repz jo and mov and inc clc mov jnp mov jnp jno sub jecxz (bad) inc lea push faddl jmp jno lea ret mov test aaa xor test pusha pop popl inc gs clc dec mov jbe sar clc imul xor (bad) (bad) pusha out pop or aaa or jl mov adc repnz fistp cmp out insl (bad) cwtl ja xor clc sahf enter loopne sub in mov add jmp ljmp loope mov sti flds cmpsl inc mov arpl push sbb sarl adc dec icebp ret into xchg inc pop sub lret jle (bad) gs xchg xor jne sub call cmp rorl aaa movsb inc jns cmp and fs imul aam sub pop hlt add addr16 or lea mov xchg or and sti enter (bad) mov add xchg in movsl sbb loop outsb add and ret lret into lcall jge pop in jp in adc loopne sub and and jnp and ror lea push xchg xchg lods arpl xchg dec mov fstpt inc test fcomps pop cmpsb mov outsb add xor push popf icebp lods aas imul add push (bad) dec mov cmp imul sub mov xchg test cli pop test add sbb ljmp nop (bad) pop jae lea test add (bad) iret pop stc and jmp jmp mov xor or popf dec insb aam jne arpl dec xor imull cmp mov mov mov (bad) in les dec fildl (bad) pop add inc xorps push dec mov pop add hlt (bad) addr16 xchg (bad) xchg mov pop imul ds push pop lds movsl inc test add add popa int3 or pop inc dec push iret pop in (bad) push adc mov fstpl cmp adcl (bad) mov pop pop cmc jo and out in add lcall imul pop hlt lahf or js adc mov movsb andl mov addr16 dec sub push jno inc sub (bad) fidivl (bad) jae jle mov sub mov jg pop addl cmp std xchg sub sbb stos and jmp cmp mov ljmp loope push out sub sbb out add int3 pop orl jbe in ja ja mov jae cwtl mov jno mov and mov (bad) outsl fadds jecxz fnstcw ficomp (bad) cwtl (bad) call mov xchg (bad) loop sbbb in into xchg or push cmpsb es aaa pop lds je test mov mov loopne inc inc pop cmp lret inc gs call leave fwait gs add and jnp jp mov stos cmp mov pop test mov mov imulb inc dec mov xchg and mov adc pop sbb cltd in cmp (bad) cmc adc cmp push rorb addr16 or dec sub in mov adc sbb xchg inc and in pop xchg and pop mov pop pusha jne sbb jno les sub int3 inc and mov inc clc cmp push mov bound test and pop ret mov pop bound lods sub adc int3 fnsave sub negl insb insb push mov mov lock cmp xchg out test cmp push push dec inc popa lahf push in lea sbb and cld and stc orl cli dec lds ret xchg mov pop jns push mov dec add lods push aaa iret add xchg xor dec sbb jb pand add lret cmp sub push push lret and inc adc xchg mul cltd fucomp xor jp (bad) rcrb imul or (bad) sbb test jae xchg jns loopne jb arpl dec or inc add mov (bad) push test sbb and push inc ljmp sarl movsl jno (bad) nop add sub loope sub (bad) outsl mov mov dec fldl enter mov inc add mov push pushf cmpl sbb cmp xor xor repnz sub ja mov sub insb jle jns inc mov jecxz fsubs inc dec xchg cmp sub jns shrl mov cld int scas adc cmp jae mov mov stc movsb stc jnp adcb xor cmpl mov ss cmp frstor cmp add mov imul loopne std mov or lret jbe add loope insb add or add mov pop pop rol call mov stos mov sub les adc mov scas cmpsb fsts icebp cmp bndldx mov arpl test xchg js push add in cmp rolb fadds pop out popa movsl mov movl leave push lahf inc dec rcll mov xor jne pop jne xchg int lods jbe pop push cmp dec lock mov or into insl ficompl repz lcall setl ret aas xchg pusha dec test mov enter cli arpl movsl test gs scas xchg push push mov in or andb cmc dec in outsl and xor out insb cmp adc sbb in imul stos adc pop les sub push xlat fsin fsubl push mov (bad) rorl mov push push aam (bad) dec sbb cwtl pushf (bad) pshufw in adc ss fimull push sub loopne xor sub test inc cmp push fsubrp xchg cmpsl mov stos xchg gs inc mov into mov push jge xor imul jg repz insl cmp push pop adc insb or add pop inc imul adc and mov aam les sbb fwait mov lahf pop mov cltd mov jae or test pop xchg xchg ss cs addl push (bad) push adc shll add jp jle jmp push shll bound pop push dec push into ja iret or imul aaa adc outsl mov aad movsl cld ret adc sub scas pop mov ds fprem1 fucomip pushf inc (bad) test fdivr (bad) xor mov add scas repz dec pop aam mov movsl cld mov mov cmp rorl mov loop xor lahf jecxz sub xor mov lods xchg cmpsb sub dec lahf lret test outsl mov test cmc data16 loope cmpsl in push aaa rorb popa addr16 cmp sahf mov (bad) fadds enter jp dec rcrb mov mov cmp cld and mov jo dec pop jmp sarl mov imul jg add mov mov or push popf jecxz adc pop ret pop dec nop cmp (bad) lea mov or test gs out subl sbb (bad) mov mov pop sub fdivrl data16 (bad) xor daa in test and bound and jne add add fdiv dec pop pop sub mov out inc mov inc stos or mov rcll dec ficoml loope push xchg push jg push inc out aad push pop div imul mov dec sub inc popa data16 mov hlt jnp cmpsl mov sti lret push inc cmp sub pop cmp lret ficom mov sbb pop cmc sbb scas and or stos lock sti sbb dec push aaa (bad) pop (bad) mov out (bad) dec ss fsubl cmpsl adc or ret mov pop xchg ja add and rcll lret lret loop sub lret arpl or jb adc adc jbe mov jl loop and push inc inc xor fsincos and cmpl dec mov adc scas fisttpl jmp (bad) xor mov loop hlt inc ja inc shll mov inc ljmp push test adc lret lods dec jnp inc insb fsts aaa and aad mov mov es out lds arpl mov push imul push xchg stos push mov cmp add inc adc adc ss ds jg int (bad) fist jo enter imul xor mov adc add sbb mov fwait cmp lahf push xor push ror leave push add in js jae and aaa out jo sub dec xchg sbb lcall and xchg movsl nop (bad) xor adc rcrb inc in mov or and imul mov dec jmp or pop sbb clc insl cmpsb xchg bound push or pop lods push stos adc out test bound jmp ss fdivrl jb pop mov or test mov sub add mov pusha testl mov divl or jg or push dec (bad) cmp jg xchg mov pop mov fldt call add sbb sbb loope and mov fmull inc jmp mov add nop cmpsb mov sub adc push xor add in xor test pop xor ja pushf adc jb inc jns lods cmc pop add jmp gs aas or jp cmp (bad) into fldenv mov cltd lret inc iret xchg shll mov push les lds mov dec and test adc sbb enter aad add mov (bad) ss repnz inc pushf xchg js stos pop in jecxz pop inc sbb push lret pushl mov (bad) add and push or repnz aas push nop fucom cmp adc sub xlat test (bad) rolb dec out movsl xchg xchg xchg mov ljmp movsl dec (bad) outsb ret inc clc dec dec lcall pop shll jb sub (bad) dec dec nop sub inc enter push call (bad) jne add xchg in dec pop and dec mov ret and pop popf xorb jns rclw sbb lret movsl out inc ds stos aaa aas stos insb test add sub mov push mov loopne loopne sub push aas js daa leave (bad) lret (bad) (bad) jno push aas ret push fs stos fiaddl cmpsb sub xor adc gs push sahf test jmp xor sbb test shufps jle jbe cli jmp xchg (bad) pop scas xchg sbb dec lock inc imul xor pop ja test pop cld xor out mov scas std pushf jnp daa repz sbb (bad) repnz pushf and lods je aad das cmpsb ret lea pop push pop jae pop mov pop gs das (bad) pop (bad) and push mov stos mov sbb cmc in add into dec add movsb scas cwtl mov cmp das (bad) lock mov or sub push mov out stos subps inc adc stos lods dec rorb push fsubrs xchg lahf push add or sbb cmp sbb mov repnz and xor sub add mov adc add jmp add pop jno scas cwtl daa mov mov sbb mov mov cmpsl mov push push mov mov xchg cmp ss or icebp dec xlat sub jge mov dec or adc and jg push outsb cmp mov or loope leave in dec (bad) aad sub arpl add out pop mov sub addr16 mov (bad) sti mov out mov push enter out xor and adc push pop cli sbb or outsl mov mov mov mov cmpsl mov sbb loopne mov and into push js in mov loop mov addr16 sbb jb mov and into sahf in adc dec aas cmp pop xor pop lea mov mov ljmp adc (bad) add cmp cld add or aas int gs cli xchg jmp fidivrl inc hlt pusha pop mov cwtl xchg adc fldl mov cmpb sbb cli pusha push cmpsl sbb push popl push sbb hlt push sub std push add mov and pop sbb loop sub das ss pop jp notb js push outsl std (bad) jg xor inc jp ja ret lds cld mov push xlat sahf push cmp add cltd mov test sbb ss jns pop push js sti mov mov js sbb xlat rclb pop test add imul jmp adc xlat xchg sbb jno mov push xchg pushf xchg stos sub push enter cmp icebp mov adc (bad) jo lods xlat dec mov enter call stos push mov add jns pop lret sbb jb mov js pop dec int aad in scas inc orl out lock outsb xorb movsb mov adc xor add mov les outsb mov add hlt call and in push pop int3 jo in loop sbb xor movsb mov aas call pop pop push rorb lret mov and arpl mov ljmp das adc jl call xchg scas pop sub icebp push sub mov fs sbb hlt cli sahf adc mov rorl push cmp in mov imul fstl cmp insb xor push sub xchg in or loopne pop (bad) enter pop pop mov pop testl dec cmp cmpsl jle aam pop insl and fsubl mov in in insb cmp jns das adc sbb (bad) dec or popf mov push scas inc mov (bad) pop pop or jecxz pop jecxz pop mov mov int3 out outsl shrl js sbb add mov xchg cmp mov pusha adcl fildll fimul mov mov sbb imul cli push daa jbe aad test cmpsl jnp mov inc sti movlhps loop mov mov les lods mov into outsb xlat and cmp or inc (bad) xchg pop pop cltd mov mov xchg mov subl cmp enter pop sarb rcll mov xchg ret loopne xchg call pop jae pusha aaa in and out mov out rcpps adc xchg add cmc je and pop push jbe adc jno test in cmp xor jae pop mov push xor cmp fs rolb pop fisttpl out adc test pop out fs outsl and cld pop cmp xor xchg fcom imulb in shl mov sbbb jo xor push mov or fildll shr or insl xlat repnz and xor sub mov inc cld cmpsb out jl ds jno je jo cmp (bad) cmp jle pop cmp fstp add add mov out addr16 mov inc inc je hlt lahf push mov add insl out push mov pushf cmp push xchg add sbb pop cmp mov mov cmp cmpsl (bad) add cmp aaa test mov (bad) push test xorl push int3 faddp loopne in adc jg xor cmp xchg xor inc sarb in xchg hlt (bad) jne cmp insb mov and ja sti jb adc cs jns test mov mov cmp pop and jae adc lcall rcll add adc movsl add add ret icebp lods xchg xchg (bad) aam dec ljmp jne adc lds mov insl std mov (bad) ljmp shrl subl jp jnp bound and cmp jb jns jne mov jne fwait mov jae in pop sbb shrl push xchg xlat mov xor leave xor add bound stos inc sub aam and ja push sbb xlat add xor fsts fstl cmp inc or mov loop lret enter dec push icebp or and jb stos cs ss cmp and aad test iret pushf incb aas adc and sarb mov sub push push xor mov jg xchg (bad) fmuls fiaddl xorb or mov cmp adc cld iret and adc rcrb xchg pusha lock or xchg ret cmp xor mov rcll mov std sbb lret test cld jecxz pop xchg dec mov and (bad) xor mov cs inc sub addr16 outsb loop inc scas sbb dec inc jno mov mov loop clc push stos xchg aad push lds xchg adc sbb sub mov (bad) notb sbb and push pop and mov dec xchg add ljmp iret std mov mov dec fwait xor push fistpll add jae push dec sti ds jge and imul insb xor cmp or movsb hlt rol std mov les mov fs push js push out lock frstor enter cmpsb aam pop dec lcall cld jne sub xchg dec push inc and pop lock movsl les inc outsl mov cltd sub xor xchg js (bad) add add shlb lods (bad) cmp (bad) adc xlat or and push or ret mov cmc hlt hlt pop stc sub arpl lcall ljmp xchg stos lods inc dec test mov cmp or xchg dec xchg mov adc cmp arpl push push repz sbbb inc sub fwait movsl vmovq cmpsl lahf pop cmpsl rclb iret outsl daa add add sub cmc add xor xlat jae add add mov leave xlat mov lods jbe test fcoml je test aas fiadd cwtl pop or (bad) inc popf mov test xorl jmp dec sub push sub stos jo ret xchg inc cvtpi2ps cli aaa cmp cwtl jmp jb adc mov pop and repnz (bad) mov lods mov or dec loop cmp pusha aas adc push pop dec pop ret rcrl fildl add inc push insl pushf dec push (bad) int3 xchg xor inc mov aas dec mov cli lahf mov mov in inc clc lock adc jmp scas or push (bad) int3 int3 stos mov lret jbe mov and pop lret repz mov dec hlt mov out lret pop xor xor js mov dec jmp test jnp fwait lcall repz mov lret icebp xchg gs sbb bound xor lods loopne out (bad) jmp sub pop mov aad bound mov xchg and xor sbbb jl xor jae pop push jecxz test popf arpl xchg push scas xlat xor sahf cmp sub popa mov add gs adc lods mov sbb mov in aaa xchg jo mov roll (bad) pop push in out imul fmull dec add dec movsb insb dec mov scas xor mov int3 test mov xchg movl out or test dec scas cli mov stc lret sbb ja cmp pop les pop jo pushf scas add dec jns mov xchg xchg das mov xchg loope (bad) push je scas add fwait pop outsl outsb imul jns ja sub or cmp push leave jl mov cmpsl int mov pusha (bad) and pushf xchg jae cld xchg sbb lods adc imul mov (bad) jmp loope in inc mov dec stc data16 sub (bad) pop inc addr16 sahf adc xlat pop das movsl pop (bad) mov adcl and mov decb ret loop dec test or mov sbb ljmp lret cmp dec push popa push hlt inc xlat loope fs mov test sbbl mov rorb ds lods es popf and fwait cwtl cld pop mov incl dec sbb fwait jecxz outsl xor inc pop jb inc xor popf loop sti inc leave mov mov fdivrl mov pop or sbb inc pop dec sub xor and movsb lret pop dec pushf lods leave dec pop fsubr js xor mov das stc push aas popa (bad) cmp mov xchg and sbb push xchg and mov mov xchg gs (bad) xchg sub lret in sub in mov mov aam mov cld mov jle icebp add pop inc dec popa sbb push stos test mov push xchg (bad) dec mov inc mov call outsb ljmp hlt push mov mov adc outsl add jb (bad) sti cmpl sbb push imul imul ja push loop push fisttpl (bad) fisubr loopne jae mov inc enter push xchg mov or sbb or sub movsb mov jmp or cmp xchg mov xor insl mov testb sub cmp and scas xchg js testb clc loope fwait mov add shrb sbb inc (bad) repnz shll out das adc cmp in clc (bad) icebp mov hlt jnp cmp adc xrelease push scas in adc sti jnp repz xor adc jnp sbb xchg xlat inc loope test outsb jle gs cltd shr cmpsb push fcomps jmp stos or jno add push push jo adc in arpl fisttp ret stos das mov dec or dec subl pop enter sti mov inc xchg or inc xor xchg pop dec imul (bad) pop mov mov hlt cmp (bad) in sbb dec (bad) ret cld popa mov add mov js dec adc push out mov pop (bad) xor stos out pop sbb sub push pushf loope xacquire cmp cli loope popa jp fwait jo test xchg jns mov mov std outsw (bad) addr16 into pop jge pop les jl loope push xchg out arpl xor sub fwait loope dec or cli push mov ja and lret subb ret mov stos test mov adc or pop sbbl dec test aas out mov adc test insb mov ret daa inc inc pop mov inc cmp out mov xchg ljmp xchg mov loopne std jnp pusha sti andl loope pushl mov cmp inc loopne test fcmovnb enter pushf dec sbb or push std cld mov in mov cmpsb push pop mov daa and sub lods xor scas sbb xor rclb push mov daa data16 xor out sbb fadd xor xchg fs out insb out inc push lret adc test ret push dec lds mov or repz push xor dec aas rclb fstpt xchg jle mov ljmp adc int loope add mov push stos lods (bad) ud2 mov lcall dec lret dec pop test xchg and mov inc and aam (bad) je ljmp mov dec std es mov enter fmull mov int3 nop inc sub push ficoml aam pop (bad) in jmp shr data16 add loopne mov mov divl enter outsl test push in jnp lret int pop fisttpll jnp test pop mov rolb adc add (bad) sub aad movsb out xor pop push adc call es lods sahf adc mov scas pop lahf call lret add out pop jmp and ds xchg xlat xchg lret in dec ret push imul sub pop orb mov pop push (bad) outsl mov lret sub repnz xor and (bad) sti inc jcxz and sbb in add xor adc inc in mov mov xchg ds fldenv fldt add lods sub mov mov mov fwait ja xchg and faddl mov jl jb pushf pop cmc push sti adc fiaddl sub aad or mov cld mull mov jmp xlat sbb mov push popa xchg dec pop sub out add fadds cmp enter out add aad psrad lcall and cltd mov out xchg xor (bad) jnp pop (bad) xor mov sub out addr16 mov ds mov stc and xor insl dec xorl mov jno jge hlt push jmp mov ljmp mov add fadds sbb mov enter cmpsb (bad) jo lret popf mov xor dec ret cmp push rorb cwtl sbb mov sar cmp xchg mov sub out lods (bad) and mov jp push and jb cmpsl jmp jbe (bad) out int jno pop xor sahf in jmp pop xor or fstps add (bad) stc aam les fsubs sub inc mov xchg das add imul cld test insl adc or or inc jge nop fstps out rcrb stc sti stc ds xchg imul jns xor mov xor adc (bad) mov add mov lcall mov inc dec cmp xor test sbb mov inc aas aas mov mov lods xchg sahf rcr sbb shl push sbbl or mov inc add xchg dec lea jl aad stos push sub cmp sub mov push adc in in xchg xchg adc cltd aam fstps out pop push pause scas xchg aad pop mov popf push les sub mov icebp mov in into mov add rcr scas and jns fwait and jbe push pop mov into rcll loop scas xchg mov aaa and mov cli xorl mov mov in fildl leave scas mov mov push pop push adcl xor aad int mov aad mov mov push ficoml enter mov jl data16 fbstp clc adc dec and loopne jbe add daa xchg cld mov mov add std in subl add test xor and pop jbe dec mov inc dec push or scas jb pop into sub stos in mov add sbb imul lock mov (bad) xor or mov pusha outsl or fsubs sbb and sub cmc les mov mov pop test les pop popa cmpsb cwtl pop xchg out es xor sbb push sbb sbb mov mov push dec mov les enter jno mov addr16 dec ss jns shrb cmpsl repnz mov fisttpl sub addr16 (bad) test pop mov or ds jg jmp adcl subl push push pop sbb push aam mov jle xor ss (bad) in lret xor ss ljmp lret mov fwait insl dec mov push jmp xlat jbe fnop mov mov bound dec addr16 out inc out pushf and std (bad) cmp jns enter movb imul jbe movsb jg scas or inc cmp mov fsubrs mov jmp add mov (bad) mov dec outsl ret (bad) jns addb lds js out jecxz inc sbb dec mov js out lret cmp jp addr16 cld icebp out mov mov jmp add jo fsubl xchg inc jne or lret jmp insl sub aaa dec scas push rcll or in jae dec pop add pushf lods cmp push and ds push xchg xchg xchg sub add js rorl lds ds xor add shrl std (bad) mov inc lock xorl xchg movsl xchg inc stos push stos pop (bad) sbb leave mov dec das jbe adc cmpsb mov test (bad) add mov pop leavew pop sbb add jnp mov imul popf shlb xchg test div jo xchg xor jno sub les clc lods nop pop sbb jl or and enter inc inc ret inc ljmp mov clc jle cltd jo or mov fisubr rcl mov mov xchg nop flds imul (bad) mov shr xlat mov call out negb sub jno xchg xchg cmpsl inc jo pop push push xlat (bad) mov sbb js outsl mov mov pop dec jns addb lret jg and adc pop cltd into xor sub jl pusha (bad) aam data16 xor mov sub pop es arpl inc jb (bad) or pop add aam out mov cmp scas ja (bad) fcmove je jno and dec jae or fimul mov adc fldt mov dec push push sub mov mov lods jb call pop lret adc stos daa mov out js and push (bad) fnstcw push inc (bad) or xor mov (bad) pop push loopne ror jle,pt xchg jge adc mov arpl in in lret add repz xchg ja jg xchg mov add aas outsb jp mov les call js xor pushf inc das ret xchg sub xchg inc dec add sbb pop in push lahf fcmovu ret popa jp cmp ror outsb in inc aaa mov mov lock lds data16 insl dec sarb fld1 popf xor imul into sbb fwait adc push mov pop push fnstsw divb xchg push js ja xchg inc sbb add adc sbb adc or in mov lea lods jnp nop mov jnp xchg les dec ja les int3 (bad) jp xor inc cmp cmp nop mov jle dec insb add nop and jle sub xchg fcmovnbe ss aaa and test dec fiadd inc stos jns dec inc inc enter in push jle jp loope (bad) push mov or dec push (bad) jbe sti inc movsl (bad) icebp and lahf or fs add dec and out mov loopne mov sbb rcl in and cmp cmpsb leave push cltd add jecxz mov jle ja les add xor (bad) (bad) lea out gs sarb jb sbb push xor dec add pop popf mov sarl mov (bad) add mov adc je rol cmpsl int bswap mov inc dec cld rol ljmp sar xor push sbb loop jb lea sarb cli mov stos push test mov (bad) int3 fs and lea in cmpsl mov scas lock jne inc stc rcrl sarl outsl enter inc mov test pop or mov cmp mov stos mov das mov fdivrl out jno sti ds push mov pop dec popf mov movsb popl shrb xchg out mov wbinvd jb dec jecxz push in inc jns mov aas mov popa xor push pop push mov std fs fwait (bad) enter jnp out icebp lret leave cmpb jmp cmpsl rcrl jb out adc int3 sub inc in push inc cmc andl mov jae out inc sub stos in mov aas lret call sbb sbb adc test addr16 (bad) xchg xlat lret mov inc sub ja mov loopne xchg in or jnp or pop mov es rcr jno nopl aam mov data16 sub jle pop jmp cmp lods push outsl in add xchg and mov adc push dec mov or dec adc fisttpl dec ss add jns stc das push mov clc (bad) stos cmp add xlat or pop sahf inc (bad) jae fisubrl sub mov popa push in mov and push test leave cmpsb mov fs mov and mov es mov insl rcll push jae mov adc loope mov dec lcall (bad) fadd pop sub stos push add nop sbb dec mov rcll xchg push mov loop icebp dec aas fwait (bad) xor movsb sbb inc inc push test or sbb movsb mov xchg sub or mov jp cmp shrb mov mov mov dec das xor xchg jl aas inc loope xor into jne gs leave push popf inc inc pop and test mov (bad) fs pop fsubs mov mov out sbb pop loop push (bad) movsb and jo pcmpeqb sub inc and inc rclb ficomp mov bound xchg das out adc clc jo movsl inc lea mov push jno mov subl push fidivr fwait insl pop mov imul iret popa ror popa int3 mov xor xchg cs xchg rcll test xchg imul jle or pop cmp mov inc sbb mov jg test outsb mov or js xor inc idivb jne ret mov add and push inc in ret push xchg xchg and push iret into mov ret mov int3 mov cltd mov addl cmp add (bad) divl jl xacquire mov pop push or xor iret mov les addl add addb insl sbb out dec sbb adc xchg int outsl add xchg or lret mov mov and jge push add jns push aad or push test cmpsl cltd sbb testl out int3 adc mov js dec nop shll jnp lcall ljmp int3 ja sbbl out arpl and cld inc notl add adc call rcr sbb adc outsl push cmc lret data16 out mov out rolb mov mov loopne mov lock arpl adc push and mov pop aaa stos mov sbb or jle popf (bad) lret pusha je pop or jmp int push sbb inc out jmp bound cmp sahf std (bad) rolb pop pop int3 addr16 call xchg inc repnz mov dec cmp outsb (bad) add pop xchg sarl or dec lea ljmp test inc adc add mov popa and or out gs inc mov ljmp (bad) daa scas mov jne dec push pop xor xchg mov (bad) hlt stos je out test (bad) stos dec js xchg shrl dec or mov cmp xor mov dec inc popf push and cmpl pop xor xchg push push or jnp jb (bad) int3 mov push das fsubr and xor jg push imul adc iret insb je aad pop xchg outsl shrl or push (bad) push (bad) add inc mov mov push cmp inc pop aaa dec es dec xchg inc mov push shll push in cmp pusha fidivr and movsl add pop xor lea mov rcll fistp frstor inc mov clc pop jecxz shrl mov shrl mov (bad) (bad) dec lcall jnp aam (bad) jo fwait imul or test outsl pusha sub mov adc inc iret inc dec cs mov out pop add rorb jns sahf push mov cmp mov xor insl pop jecxz sarl arpl sub mov xlat sub pop scas je mov lods (bad) jbe mov dec imul or ljmp in jecxz cs scas enter rorb je xor xor dec stos scas add sub jns arpl xchg jge mov popf mov int3 push sti notl cmp push jns xchg cld pop cli cltd rcl xor sub test xlat pop jg mov sarb test outsb mov adc icebp fxch int sbb mov std notl cwtl cld jmp in ret add lock sub scas (bad) outsl cmp lret mov pusha cmp pop lock xorl or xor popf mov adc dec sub icebp andl rcl pop push dec aam adc (bad) adc sub mov mov out sbb push daa inc hlt pusha adc xor cli leave mov aam mov dec mov sti pushf mov imul or aad push dec add bound jl fwait cmp (bad) xchg and push mov addl std lods cmc into jg sahf pushf mov jmp (bad) mov mov or stos sbb cmp push (bad) sti loopne into pop rcr into adc iret sub push sbb icebp adc jb aas mov push andl imul xor lret daa pushf mov dec add fcoms jp jecxz mov and push faddl cwtl test mov pop cmpsb and sbb push push rcr push les dec cmp in add roll sbb xlat and out les pop push cmp jno mov inc out adc call push push out cmp push addl mov rcl into cmc inc mov jnp mov xchg cmpsb js push sub lea pop xorb xchg scas lret aam jb repz loope fstl arpl rcrb divl gs adc scas mov lahf push sbb add pop or inc pop aas rolb xchg mov and das dec adc dec cmp cmpsb aad pop out sbbb push test pop and mov sbb hlt add xlat enter pop das loop dec loop mov daa (bad) xor les mov mov cs in mov in mov xchg xchg mov inc or sbb dec sbb mov mov daa xor sub pop push test mov pop xor cltd jp pop jae mov push je inc movsl mov neg add ret jle (bad) sbb mov jo sub arpl rcrl jg xchg test cmp xor call push in cmpsl sub sbb icebp push mov cmp jmpw mov mov pop xchg arpl (bad) mov dec bound adc cwtl pop fisttpl pop aas adc jmp cld add pusha pushf sub push sub inc mov ret enter ljmp sub test adc and cld (bad) repz jg push mov pushf js cli mov inc rcll in and adc pushf in mov lods sbb and sbbb inc arpl int pop pushw in push outsl (bad) sbb pop inc (bad) mov dec dec jae (bad) pop mov movd mov loop pushf or ret aaa jge je sbb add pop xchg xchg inc in cmp cld cli out xor aad js mov jae jge icebp je cmp mov push add leave pop aaa dec pop jle adc cmp cmp mov outsb jp mov jle imull lods insb test xor int push jb jmp sarl cmp dec sub jo ret mov jne inc jl rclb imul and insb sahf int3 out sub movsl pop rolb out mov inc loopne shrb mov addr16 jns sbbb mov lret or icebp cmpsb mov scas pop adc cmp imul imul dec cmc mov movsl cmpsl pop stc pop nop add cs mov rcrb ret scas add test add push aaa lcall clc mov fstpl loope movsl mov aaa jo xor mov jne outsb lods push movsl mov outsb mov push ja fs mov add js inc nop in add jmp pop pop dec cli pop gs push mov push pop ss mov sub les pop setnp test sbb push xor sub and in mov loope mov inc movsb cmp outsl arpl inc js jge aad inc dec clc sbb jp test cld jp sub push stos cwtl iret add xor (bad) pop andl repz incb into cmp mov push loopne loop cmpsb sub fistpl jae mov fsub cwtl jg push icebp pop push cmp sbb pop out lcall pop xchg adc (bad) pop (bad) mov xchg pop hlt cmp pop cmp (bad) repnz mov jae mov push lods xchg xchg into pop repnz adc ret sbb pop adc mov stos jnp mov loopne loop (bad) pop insl fnstcw inc (bad) fadds mov jae int sbb xor jae or imul mov mov add gs jecxz mov das xchg data16 xchg xor sub add mov repz subl sub js in mov mov adc test shrl rcl pusha int cmp sub xor jmp (bad) push int3 int movsl faddl bnd rclb shlb je sti (bad) mov xor mov mov pop pusha jno mov fcoms stos cli sub outsb int3 and loope in mov xor mov loope lret cli xchg mov jge push add xchg sub pusha push xchg cltd push jg and mov repnz jmp dec and dec out aaa mov sarl out ss inc cmp ja cmpsl or sbb fstps sahf or inc push mov in cmp call xor insl test out inc add call mov cmpsl arpl js sub mov aad daa fidiv jns (bad) xor mov mov fnstcw pop mov mov lds imul loop xor add jmp sbb xchg test cs stos jno lods shl (bad) cli jns pop (bad) mov xor fdiv xchg loopne jecxz xchg daa les and adc cli mov hlt push (bad) movsb mov cld fwait stos mov aaa sti jnp (bad) sbb in pop popl push jae sbb push enter dec nop push inc jbe popa arpl lret mov push fstl out je,pn push pop xor ficom push (bad) call cmp lock cmp sahf pushf cld cmpsl xor xor pop out jo xchg flds lea or jbe outsb leave (bad) aam (bad) fistpll cmpsl loope xlat hlt xor lock out push push ficoml adc pop imul popa gs (bad) xchg (bad) std repnz pop sbb pop popa outsb push in jo fwait mov push call (bad) and ret jne into inc imul mov xchg repz outsl dec and jecxz xor popa fwait cmp lret push adc cmpsl sahf pusha jae fdivl vshufps mov mov loopne in adc sub push add in adc cld ret mov and add daa xchg mov bound out xchg in xchg jns pop out orl movsl (bad) call mov pop mov push cmp (bad) mov adc sbb push pop mov pop inc jle inc add pop lea lret cs dec xchg jns outsb sarl arpl sbb mov xchg popl (bad) xor push into (bad) icebp inc lds mov lods hlt push stos aam inc outsb sub dec jns cmp pop pop add pop test stos repnz sti fsubp into and cmp add mov cmp mov ja xor adc lea jo mov or dec mov scas lret psllq cmp jecxz test pop scas shlb cmp sub cwtl lods mov in xchg dec xlat arpl dec mov arpl out pop sbb inc lods mov movsb std jecxz pop sub pushf xchg pop or add mov pop push push lds push cld sbb popa fnstsw mov jmp sbb nop adc mull jmp push aaa xchg pop sub xchg mov (bad) rorb lea mov je xchg ja iret arpl sbb repz jbe cmp adcb mov push jecxz jns pmaxub test sbb mov pop xor dec cmpsb pop sub or aam jmp jp jmp jae data16 dec lods push or in mov std xor xor loopne add (bad) xor gs ret rorb cmp inc add scas dec push push jge mov pop xchg lods test int3 fimull and or dec pushf sarl dec ficom dec cltd xorb sub and fisttp mov lds mov dec sub mov imul jmp xor mov jmp xor in cs mov cmpsl xchg xor jg jns or cs sbb mov xlat xchg pop loop jno (bad) enter jmp push bound jle into test out into mov repnz mov dec inc lods lock inc sahf and inc pusha sahf daa pop mov inc int inc cltd xacquire lods sbb aam dec popf repnz testb nop (bad) mov rcll cmc cmp cmp mov lods xchg adc push push lods bound imul pushf (bad) arpl bound inc cli mov xchg push sub fild cmp mov dec and repnz push sub aaa (bad) movnti imul push popa ret cmp xchg (bad) push mov jp shr loopne inc test mov push push repnz pop rcll ret into jmp repz les ja push test imul sbb nop jae insb mov punpckhbw adc add sub xchg xor pop mov jl adc cmp push stos xchg adc xor fildl push push xchg test adc lret inc aad jbe movb xor lret lods cmp jp dec add dec jmp cmp ret jno add lds ret cmc push pusha mov cmp popa cli aaa lcall ljmp (bad) imulb lahf xor xor dec repz pop stos inc mov push cwtl pop ljmp jge add incb cmovp push out bnd add mov jg (bad) dec in insb ret xor movsb js aas or (bad) loop sbb pop xor lcall jne xchg mov lea leave rcll dec out enter add xor xor mov adc subl jnp stc popa mov jecxz push pop inc xchg mov out xor jle mov xor (bad) pusha mov pusha inc ret insl mov inc push ss loop push movsb ss int3 in cmp sahf in cwtl sub cld pop adc pop xchg mov inc call xor xor gs pop shrb sbb sub cmp push lods fiaddl insb sub mov dec sub mov iret sub sbb mov scas (bad) xchg fs mov hlt repnz mov cmp dec inc mov movsb adcl xchg nop jge jns out (bad) sbb push jp fmuls add mov mov and dec mov in adc pop xor push lcall sahf inc nop jnp fstpl out cmova (bad) xchg or or cli (bad) in into loope jl sub jno mov dec (bad) cmp fisubr add into ret push xchg jns rcl icebp push pop pop data16 repnz sbb push cs int3 imul outsb xchg insl test (bad) stos (bad) or jecxz int movsl xchg scas loop mov sbb xchg mov pop arpl cmp fisubl iret lcall push mov lea mov inc into stos daa inc inc push inc and imull jle cltd ret add pop data16 mov loopne jo out cmp std adc dec call cmp aas fnstenv adc (bad) xor clc js mov sarb into mov into outsl sub add test lods hlt fildl xor jecxz cmc (bad) or xor test mov iret xor lds add xor in sbb pop jo mov popf xchg adc cld add dec sbb xor (bad) lret cmpsl adcl cmp push pop clc insb fsubrl iret aad xor test imul popf cld data16 jbe mov dec cs dec xor es (bad) cmp xchg ja insb jmp cmp (bad) (bad) xchg int ja mov loop push daa test out sbb sub pop mov (bad) ret clc ljmp cltd je comiss in mov loop loopne dec lret pusha dec incb ljmp imul inc data16 mov (bad) nop in cmpsl (bad) cwtl mov push jo aam jmp (bad) insl gs aad mov scas (bad) out repnz (bad) divl test and loope les arpl shrb scas lahf sub lock pop fidiv js xlat xor mov adc cmp pop adc mov les adc (bad) movsb xor mov adc out pop icebp iret jecxz jnp insl mov mov pop in mov lret inc xlat pop shll (bad) and xchg enter add data16 adc cmpsb xor lahf inc popa sub ret or inc lret jg outsb mov das mov movsb pushf and in pushf push testb and icebp sbbl xchg adc incb mov in xor and hlt sub adc xchg dec rcll jne ret jecxz inc mov loop mov pop inc mov sbb lcall pop mov xchg xchg in sti push incb mov xor fwait mov mov cmp pop jb stc out jno pop cmp pop loope cmp fsubr pop cmpsl pop sub incb or mov movsl insb dec aas (bad) call cltd lea clc inc jl loop cld std scas jb and js out push mov adc fs mov mov jne jp mov cltd out orb test (bad) xor arpl adc dec data16 sub mov or (bad) or pop ret sub rorb je and mov sub out cmpsl lcall and mov notl (bad) repnz xlat fisubrl (bad) fistp push (bad) repz or and stos popf cmp inc mov movl xchg test cmp cltd lret loop,pn sub xchg out out cwtl imul mov add mov pop movsb mov push (bad) gs scas into mov and sub mov add mov lahf add inc scas and nop daa pop loopne sub and ds popa rcl out add xchg inc pop lret pusha push inc xor mov and (bad) fbstp xchg push lods popf sarb mov inc and mov cmp xchg test in mov mov cmp stos loop shrl mov pushf jo,pt add js add test ja mov cltd sub xchg call push or cmp sbb adc lods or fucomp push dec (bad) test sub fmulp mov movsb (bad) xor decl ret push outsb (bad) mov aas inc inc push mov bound mov in or (bad) fs cld in fs cs jo daa cmp loopne pop cmc (bad) cmp out xor cmp cli push dec in or in mov cmpl (bad) movsb push pushf nopl jne pusha jg loope xchg mov mov movsl int3 dec dec cmp push add lret jp jp test clc cwtl or nop outsb data16 insl jl cmp test pop movsb imul or xchg and push mov decb loopne push cwtl push inc pop call jecxz mov mov xor mov cmp xchg leave rcrl clc sub and xchg sbb mov xchg and mov std std iret in lret leave push jge cmp cmpsl fimul bound je push pop seto cld mov (bad) fcmove xor arpl jno sbb adc jae jge (bad) test pusha xchg into in mov (bad) lahf and push jb lea cmpsl cmpsb (bad) jnp popf and mov lods outsb in xchg aas in jo (bad) mov aad mov (bad) daa sub aaa mov fs xchg jae xlat das gs sbb inc mov pusha stc pop cld sbb fnstsw in xchg in jl aad mov push stos xchg jne in jmp mov cmp rorl fmulp adc fs mov mov inc (bad) les lret mov dec faddl add outsl or mov pop mov xchg mov dec cmpsb jle sbb out icebp out iret fdivs pop mov addr16 mov and dec inc cmp mov xchg jns and ss cmp ds inc dec xchg enter cld cmp mov jg xor cmp mov popa pop add xchg sub fwait jo sbb xor jns or fucomip rcr ficomp sub out sub xchg pop jbe add jecxz lods or dec mov leave sti xlat and pop int movsl inc mov int xlat repz aaa sarb mov loop lock loope into xchg cmp pop (bad) or and loope add stc push mov sub or xor inc dec (bad) pushf jecxz test mov cltd mov jno push fldenv arpl pop mov jae sbb pop push mov lds adc xchg (bad) mov jle jmpw call negl cmp outsl clc mov xor je mov xchg or fisttp movsb xchg pop xchg mov inc inc repz icebp mov test hlt out outsb xor sbb out pop stc cbtw inc pop test cwtl push test push or std inc (bad) mov aam mov dec call in xchg divl out push cmp lahf ljmp adc mov cli pop sbb cltd adc xor dec mov cmpb (bad) mov jnp into jne pop and aas pop int3 push fwait std lock push lret cli in fwait xchg xchg cld (bad) (bad) mov testb ds and fistp push add mov mov mov das push or rcrb or jecxz dec or or sub inc (bad) mov in mov dec pop lods jae xchg not sub repnz imull aad pop fist inc jg dec in push aad (bad) or xchg mov push je cli ret stos in inc (bad) jae in sub jne mov (bad) push dec pop in jbe (bad) mov mov je repnz xchg inc pop jo (bad) frstor out cli jns xchg inc (bad) xor push sub sbb (bad) add bound roll pop in inc mov push cli jmp pop (bad) aas bound and mov arpl jecxz fadds jp cli dec loope jo push sbb add lods mov ret (bad) in movsl mov std andl xor stos dec lret clc add ss dec add push lret xchg fwait mov mov xchg outsb clc and pop into pop gs popf cmp loop and push fist adc mov xor loope xchg (bad) out cs enter jae lds loopne adc fiaddl sub scas pop rorl pop mov stos loope jg fwait xor adc mov add scas mov xchg mov or inc cmp jbe arpl xor stc out stos pop mov jne fnstsw stos adc data16 and mov outsl in loopne ret or mov pop mov jae cs push dec mov (bad) jne,pn scas push mov pop cltd addr16 in fildl sub mov or fcmovnb xchg pop jbe pushf repz movsl stos jg je mov mov dec cmp call je movsb mov pop scas inc mov (bad) jae mov xor shlb xor stos mov adc out add sbb sub idiv ret mov test fsts lea sahf scas mov lods jo and ret sarl push fstps add repnz and cltd movsb cmpsb jp mov dec cltd xor and fwait dec adc pop popf inc repz xchg outsl add pop add out pop lret mov loope jne pushf mov dec nop lret data16 das adc adc loop sbb scas clc lret adc inc popf mov es cmp sbb add out xchg fimul pop aas in pop mov ret jo (bad) push pop mov mov sub mov mov mov test mov nop sub in stos cld data16 dec bsf aam jns dec jg test add pushl add int3 push cmp rcl sarl xor and aam inc cmp inc dec jmp sub rcll mov incb dec fisubl imul lock push ret mov das inc arpl imul push daa js fimul cmp adc out xlat mov jnp push test dec add mov sti leave push adc or (bad) add cmpsb pop movsb and (bad) jnp push inc adc mov xor and rclb fdivrs or push xchg mov cmp jnp mov ljmp fdivrl xchg cs ret mov enter cmp pop push mov sub stos pop and cltd jb adc adc mov and lcall xor mov fidivl mov fdivrs dec cmp inc enter dec lods sub inc jl popa sti inc movsb mov sbb cmp inc jl (bad) sub mov in jp or add adc in shrl in mov add fdivp and pusha ds int3 in jge jo addr16 gs bound pop aam mov add cmp (bad) in xlat xchg outsb dec cmp sbb arpl rorl fcmovne jle ror push clc jle jl jle ret sbb pop xor add or fcoml push jmp and mov js mov enter mov imul add mov push (bad) xor sbb pusha or sub xor inc push pop mov insl in pop scas mov test cmpsl cs ret in mov pop ljmp gs test les inc add xchg icebp movsb or sbb outsl mov movsl imul cli mov (bad) stos lock test es je dec push or sbb nop mov inc cmpsb in push iret leave mov stos adc pop js mov mov dec push pop icebp and gs add in cmc sahf sbb mov fcomps lahf adc sub jnp iret sahf sub sub dec xor fdivrs adc adc aas nop lods (bad) rorb shlb xchg dec loope or cmpsl das jb jb cli and sahf roll or add cmpsb mov out cld jne push ret out lock loopne mov ret cs mov lock lret xor xchg inc sub or add mov xor lods adc cltd setae movsl inc pop inc (bad) fs jmp lods mov and or out lock aas lock gs sbb xor stos jo sub sbb push add xor loop js push test cmp mov cltd aas (bad) cmp loop mov lahf jbe vcvttps2qq push dec int stos int3 sarb sbb ss mov cmp cltd lret out cwtl ss pop pop push mov fsubs add outsb jecxz sbb mov mov cmpsb xorl outsb js xchg gs inc loop iret adc lods lea roll lea cmp or mov call and or pop mov push cmp jle dec add xchg fwait inc dec mov pop jns xchg mov xchg mull inc sbb out popf mov or fsts repnz jg dec inc loope,pn cli insb jo add jb or lret mov adc sub clc and mov dec pop jno adc sbb and push or push xor mov pusha std adc inc mov or add sub out adc (bad) or xchg jbe insl xor pushf aas xlat adc sbb jecxz or or jmp cwtl repnz scas loope jae lods popa mov fisubr push add scas sub sub dec mov pop push lret mov xchg add add (bad) dec fstpt adc xor outsb leave inc (bad) push dec push inc cmp pop jl jmp fsubrl popa insb das fldl nop sahf push xchg push inc enter shrl into addl push (bad) sti push mov xchg in push popf lds out fmull jb fcmove jl cmpsl mov cmp mov jle int in xor or push popa or xor out rolb sbb lcall inc fstp pop outsb xor pusha xor jnp add mov pop push mov jl loope jp ficoml inc lods into js xchg test or or cld xor pop insl or and jg in sti pop insl daa (bad) (bad) fimull gs mov push jp xchg nop push out mov mov cmp mov pushl adc (bad) pop out int3 test mov xor nop stos inc sbb xchg pop and (bad) mov pop ret inc mov xchg xor movsb js adc push lret mov dec mov movsb ds in hlt mov pop outsb fwait push push mov jmp js cs dec xchg ja xor inc lret jnp adc (bad) mov xchg xchg xchg repz push repz xor cmp xchg mov dec (bad) jnp aaa cs or pop lcall loop imul push inc pushf pop pusha mov mov or popa addr16 fldcw arpl sub cmp mov scas (bad) in xchg xchg mov and push push xchg fnstcw mov xchg adc sahf xor inc mov jns pop leave test std push sbb (bad) clc lods xchg xor movntps pop imul xor xchg sub test in add mov in cmp lret mov lret pop sti mov (bad) fisttpll add rcrb lds imul dec xlat dec inc lods test fcoml lahf mov fdivs int outsb mov imul mov add push dec gs popf pop fmul mov outsb enter cmp jnp lahf jle pop fsubr loope int cltd cmpsl (bad) std (bad) pop lds sbb in test dec les out insl jo jmp mov inc nop icebp push mov pop mulb rcr arpl bound loope adc ds icebp jns xchg mov sarl leave push test adc stos xchg xor loop mov push cmp repz mov repnz inc (bad) jbe lods aam ja movsb push mov in out (bad) mov add xor jne add sbb inc in outsl and push ret cmpsl sbb in pop test add inc inc or mov mov js clc in fidivrl jg inc jle pop in mov shll shl das lods (bad) popf sub mov outsb in inc adc popa (bad) cmc scas movsb test fdivrl fs rolb xorl push mov pop push ret inc iret lea icebp int enter xor add (bad) jp cmp mov pusha je and push push call adc jns (bad) xor scas frstor fmull push (bad) ja int3 pop in or stos jae add cmc inc or imul imul arpl adc mov std shlb xchg hlt mov aam pop repnz inc xor out mov or mov mov mov in push mov ret lcall dec xchg mov jecxz jecxz cld stos mov scas int lock ret mov call push inc out (bad) inc lds lods loop jne fnstsw loope (bad) lcall xor popf or fnstsw fldl loop mov (bad) lds (bad) icebp adc pop cmp and xor lahf inc inc movsl enter jo sub fadd mov xchg xorl arpl adc add aas jne xor add sti insb xlat lods cli dec jle in imul mov push rclb mov jg push daa (bad) or jmp into push sahf test and pop lea mul sti add and push mov outsl pop sub xchg (bad) dec or aam inc aas pusha enter push xchg mov push les ljmp cmpsl lret push pusha pop cld ss stos mov jo jl out mov mov mov mov mov out (bad) inc jnp mov mov xchg cld or imul xchg cmp int fadd jp mov in xchg sbb std pop mov pop xchg or adc sub xchg lcall in notb inc ds xchg mul in outsb inc out scas jge lcall add fstps dec lcall dec jae or dec pop mov mov jl lock jle dec jg and fidivrl mov arpl scas bound add push or ret pslld pop mov shrb repnz cs cmp sarb xor or or mov lahf jle bnd cmp xor sbb jbe mov push inc and mov push fcmovnbe add fstp daa iret mov jo dec test popf inc mov insb xchg mov mov das bound bound pop jne call daa push push js inc mov xchg pusha dec scas out lea pop das push mov sbb fdivs xor fsubrp jge (bad) or repnz lret pusha loope outsl jp aam faddl (bad) fs mov loopne out stos bound add xchg mov or cs cwtl add and cmc daa inc mov cwtl ret xchg aas jl clc cwtl lahf iret push jae dec (bad) lfs test fs push pop dec push dec and loopne mov sti lcall mov and imul cmp xor xor pusha mov lock dec rcll sbb out mov jo ja mov jo es mov es xor cmpsb leave xor repnz sub incb add push xlat pop loopne fidiv or lea ficom insb pop dec fdivrl inc dec mov aas push test push nop inc je push or rcrl ret ljmp jmp es jle inc (bad) or inc into add aas imul pop mov mov sbb pop cmpsb stos repnz aas push (bad) xchg mov inc push mov mov xchg lret pusha xor inc (bad) ss sahf jno xchg xchg nop arpl push inc pop and mov pushf xor shlb add stc (bad) cli arpl lret adc incb clc adc pop adc out icebp (bad) hlt push and jmp std pop stos pusha push dec stos mov aaa fldenv xchg aad push inc ficompl inc dec sub jmp mov movl sub push push mov lea inc mov pop int3 mov cltd sub fwait pop adc cmp mov mov mov outsb pop mov loope mov outsb cmpsb ffreep dec push adc and xor mov add fidivl dec cmp or not cwtl mov sbb rorb iret dec test xchg std adc dec cmp nop test dec push jp or out in lock clc fldcw sbb cmpsb xchg rorl fwait adc fucomi mov lods test imul js xor push dec pop in scas and adc in cld jmp scas sub xchg fcoml in xchg or and pop mov ds jmp jnp and mov (bad) dec (bad) lods jle and fnstsw loope mov jb imul cld sbb jp sub push adc std adc push inc test rolb push fiadd inc mov sarb inc into xchg push scas push icebp fimull (bad) pop into lods fmuls adc add lahf pop push dec pop cmp pusha test daa xchg (bad) repnz pop scas cmp inc leave cmpsb imul mov enter add xchg jns push adc mov fldenv dec int scas or xchg adc xor push pop xchg (bad) mov xor sti sbb and shr mov leave aam and insl add rcl or scas kmovw inc add sub (bad) mov xchg nop dec xchg pmuludq cmp adc pop vmwrite or mov add jo dec clc (bad) pmulhw inc xor cltd lret dec loopne out xchg movsl inc ja test cmp mov sbb les lahf and cltd sub sbb inc bndstx xchg xchg and mov pop aad subb pop roll cmp subl mov mov ret dec sub cmpsb push push fs pop aaa cmc jns sti add (bad) adc pop sbb or lret repz adc fdivrl fwait movsl dec xchg dec (bad) adc fistl (bad) xchg fdivp std inc repnz call lods jmp (bad) jmp mov push sbb cmp cmpsl test hlt xor or push out rclb push pop push mov clc repz mov jo test hlt xchg ljmp adc sub sahf mov adc fcomi add push and int inc or out fdivrl mov mov lret js or cmp pop sbb pop out or push hlt xor insb popa jp cmp cltd fisttp loope es cmc cmc jo js stos ja jmp or add pop xchg lods inc xchg cmp mov lret test outsl mov popf mov into or repz arpl adc cmp pop pop jbe and jae adc adc push add sti dec jp cmc out and insl push subl out (bad) (bad) mov jns and mulb sbb leave shr aam ljmp jmp pop jle jbe gs mov inc ret push cwtl test cmc ljmp mov test and push ljmp push cmp cmp sti stc jge dec js nop dec xchg aas inc test push inc stc sbb aas add in stos xchg mov cmp mov sub push (bad) dec ret ds cmpb sbb mov rolb and sub and shl dec pop xchg add add cmp stos out dec iret cmp lock jne lahf out push jmp mov push jns call test xchg roll flds stc (bad) loope imull aam mov jle pop in add call out or inc mov adc cmc mul popa jnp lret pop pusha jnp lds cmp or xchg pop xlat lret clc stos adc xor push mulb fistp inc clc movsb sahf xor or add jbe add add iret fsubr stos sbb or into jne cmp mov pop insb mov movsb mov out pop sbb pop lods icebp lock dec lret ljmp xchg pop and sub cwtl lods sbb and sbb daa ss jno ret adc mov jg mov cmp sbb out loop test or (bad) push std cmp mov mov jne ljmp scas enter pop sbb adc push sarl iret mov push push adc inc repz enter mov aaa mov fsub ret or (bad) inc pushf inc repnz and aaa cld cmpsl stc lret jmp dec mov add sub xchg xlat rolb stc leave jle mov pop (bad) pop or push xchg adc cld mov stos mov xchg push sbb imul xchg jecxz pop xchg test inc int3 imulb mov xor repnz cld add popf dec rolb jle in scas push add xchg xchg fwait dec xchg sahf lock push ljmp insl iret sub lret orl jp pop insb push into arpl xchg add cmp cli ss nop aad cmp push fnstcw pop test enter cmpsb pop cli mov outsl pop movsl shrb pop xchg push (bad) lods ja out js aam (bad) xor dec test xor push fbld jo repz dec stc xchg fimull adc loope iret (bad) pusha xchg cmp scas sbb mov cmpsl mov adc sbb sub cmp inc adc lret scas and dec ja mov aad insb add imul jle xor outsl in out testb mov int and rorl test scas rcl sbb xor cmp jge rcll inc inc ljmp mov xchg loope lahf push int mov test sub xor into jae aad cmp or dec (bad) (bad) test es xor jecxz xchg insl cli jge and xor (bad) fcomip daa sahf es popf ret test sub or mov (bad) (bad) insb jp popa mov fwait mov adc test fadd jne fcomps imul xchg jg or cmp sub aam pop daa nop out pop ljmp sub xor adc adc sub or lcall push lods push sub mov adc lds adc mov pusha ret xor pusha xor stc movl int rolb add loope cli mov sbb push loop mov cmp adc inc arpl rcll cmp push xor inc (bad) fsubs cli fucomp jecxz and outsl xchg mulb xchg add adc (bad) pop aad ficoml scas and outsb cmpsl inc dec xchg in cld ss cltd aad pushf mov xchg ja sub flds icebp fsubrp sub pop inc movsl ljmp jl (bad) mov push xchg aam aas mov popa popa pop cs (bad) das inc xlat out cmp cmp mov mov movsb sbb jmp cld fimul inc sbb mov ljmp push subl cmc (bad) scas xchg push nop aam nop lock aad out rcrb mov pop push adc push push push sbb mov les dec cmc inc adc out dec cmp inc aas and push repnz jge sbb aam cmp mov test ljmp add out ret pop loope out mov or ss fidivr ds scas fs imul push fdivp mov pop jle cmp push aam pop mov outsl and push gs push xchg sbbl mov pop out es mov movsb dec mov fdivl jl loope xchg jg jg pop add adc movsl jmp xor std xchg daa and (bad) jbe cmpsl cli cmp icebp inc fcmove push inc xchg nop fcom push xchg daa out pop and js lods dec push mov mov xchg pop cmpsb mov mov (bad) mov or stos add cmp nop notb mov pop pop dec inc sub and enter add add push cli xchg dec sbb xchg push stos in mov arpl or or stos (bad) mov mov gs aam loope scas std xor xor aas ss sbb adc pusha jns jg inc xor sbb orl lret pusha pop pshufw and or push adc int sub pop cmp shll fisttpl cmpsb rcll pop mov push dec jbe jbe pop das mov das jae dec mov and lea xchg stos (bad) popa js sbb arpl or cld push pop push enter xchg int3 and cmp inc test or lret pusha and mov out add pop pop adc stos loop xorl and mov in jl mov rcll mov push int mov loopne,pn lods lcall jge dec fcoml inc hlt cs (bad) or fs es lret aas lea cwtl adc mov mov jmp or das pop mov (bad) jle ljmp popa popa pop dec cs jae (bad) and cltd lret mov mov scas je pop cwtl lahf mov mov fwait rolb (bad) sar push lods rcrb mov jo and (bad) shll jbe (bad) mov push pop cmp and sub inc and push aam loop push sub inc ficompl cs xor (bad) and hlt mov mov je push arpl daa daa pop pop lock mov adc dec vmovdqu mov push xor cld cmp icebp mov jne ret xchg data16 mov (bad) xor mov jp (bad) das pop jle adc nop pop add les push loopne and add aad stos (bad) sub orl xlat mov (bad) cmp vandnpd add rolb sbb hlt enter adc scas leave inc mov js mov sub and (bad) xor sbb aaa add inc pcmpgtb adc mov fwait add (bad) sub and fistpl call daa notl push or xchg pop pcmpeqd loope inc pop and xor orb (bad) push pop fs xchg xchg jns dec jne fisub and loop gs inc dec xchg xorb and insl lea ret dec pop mov mov jne test mov shrl inc or fstl cmp inc jge cli pushf (bad) lock jae cmp and ret shrl jno (bad) xchg mov push ja push xchg or outsb fcmovnu or adc and mov and mov xor inc aam scas lock mov mov sahf sub jo add mov test mov sub sbb jbe mov scas cs pop into pushf xor aas sti loop mov pushf mov ds test jo and clc pusha or cmc lret outsb loope jno sbb and fnstenv dec (bad) (bad) and or call jbe cmpsb push loopne mov pop jmp mov push adc and jecxz imul cmc add mov mov (bad) repnz mov push jecxz or clc xor (bad) and xor dec int3 nop push sbb mov adc std xchg insl inc mov lds push jns arpl lret add mov scas adc loope mov cld mov cmp jge sti push aad imul sbb push adc dec push xchg js jae je and sbb xchg inc test dec jg roll pop cmc lods mov (bad) push orl loope mov inc fcmovnb mov push add fwait xor cmp push addl pop pop push mov mov mov clc xchg mov adc push sahf test hlt add jl adc int sub gs popf ds sahf cmp push pop mov dec imul adc dec stos (bad) xor jecxz cmpsl or jp and push sub push sarl xchg je jno leave mov scas dec sub cwtl ret jmp movsb ret fidiv nop pop leave mov push jnp and mov jecxz mov mov mov jmp or cmp ljmp dec xchg push cld aam mov xchg adc loop and dec cltd aaa jns scas jbe push push in iret adc aaa pop test es fidivrl (bad) sub mov aam mov sub xchg (bad) push cmp sbb mov pop rcr mov mov mov dec sub movsl lods or stos add pshufw cs push add inc add push (bad) vpaddsb int3 repz stos and test jns xchg mov inc cmpsl push (bad) push daa add lds in dec sub enter addr16 mov add (bad) ror sub (bad) pop popf mov mov mov lret mov jnp mov add rcr dec adc daa push daa call sub mov addr16 imul out sbb pop outsl mov pop adc push dec pop cli rolb gs dec sub inc xchg mulb mov xor pop xchg jle aam sbb cmp sbb aas aad in dec (bad) std push loop adc jl insb movswl push push xchg iret mov (bad) fwait xchg inc dec xchg push clc jns lods sub mov lcall outsb fnstenv es orb sub lcall dec cmpsl xchg pop cltd mov add push out xor lret ret js and mov imul dec xchg xchg loop push outsl adc mov inc out in dec sbb dec popf or pop dec jae and enter adc sub loopne aaa fwait push lret xor pop cmc dec loopne repnz sub sti mov jae sbb add jl cmpsl add cmp pop or xchg pop inc push jl sarl xchg aad jecxz (bad) ja,pn cmp idiv xor clc cmp nop jmp add xchg sub dec in xlat sahf xor inc cmp fsub adc (bad) jle adc mov dec incl mov popf mov std adc mov xchg push lahf push loope stos iret lret sub cmpsl clc pop and xchg dec cmc mov arpl inc pop mov js push out lret sbb dec outsb outsb xchg xlat pop and push insb rorb push adcl hlt aam daa push sbb bound (bad) sarl adc je sar xchg mov jae (bad) jns in adc popa leave and jb addr16 mov arpl sti mov cli jle xchg es cmpsb stos popa inc sti je dec xchg cmp pushf in sbb push sub mov push pop dec arpl ret sbb fnsave popf scas loop dec scas or dec sub loop and loop mov mov aaa je inc cmp and mov ss add dec push sarl popf jae dec lods pushf out mov jge add jle dec movsl (bad) fsubs jns add push je and push mov lds aam fmull pop aam xchg inc sbb sbb dec jmp mov xchg test dec and out cli dec stc inc mov xor dec sub add fcomps or aam cs aad int3 and xchg and (bad) incl les movsl shll inc movsl fwait roll clc movsb adc nop gs lods jmp (bad) hlt or (bad) imulb in mov (bad) adc push movsl or faddl push xchg or push pop mov jmp mov popa push and repnz jecxz addr16 inc jg pushf rorb inc test mov cli dec jmp jns mov enter iret sahf push add test mov push ss dec or mov jg (bad) std add idivl cmc (bad) jb sbb pop jns mov repnz add dec mov lret fisub dec mulb mov or or cmp pop fucomp popf (bad) pop cmp iret jp or scas aam cmp popf push xchg (bad) in and jbe jp or inc xchg fcomps sbb lret fs fdiv mov fsubrl pop jnp mov fsubrl mov mov jle cmp add mov mov push cmpsl popa lds mov jo and rcrl pop fcmovnbe pop cmp push cmpsb inc in js lea lcall test data16 in or adc jb stos or ds outsb loop,pt cli shl xchg ficoml adc pop les push shl sub test pop in mov mov or xlat cmc xor inc xor cmp sbb outsb mov add jle dec jge icebp (bad) cmp mov mov ljmp mov push xchg sub iret hlt cmp sub (bad) (bad) jb popa shlb cmp mov and orl (bad) sub cmp lea faddp xor lcall xor lea sbb mov (bad) out mov das daa dec mov jo adc push cld jmp movsl pop xchg mov lods pop pop pop es mov les jmp cmpb mov fsubl jnp (bad) (bad) cli xchg lret mov js push stc cmpsb lods xlat mov sub jbe cwtl test jns,pt adc call (bad) imul sahf loopne cwtl repz add dec sbb jp (bad) or sbb xchg cmp das lock jmp (bad) xor insb cmp sbb popa icebp stc daa scas pop cmp inc insl cmp dec into mov or mov pop enter push ljmp sub std cvtps2pd mov or push (bad) hlt xchg push test shr scas shrb jbe (bad) daa mov lcall or and setne mov cld in int3 jge imul jge dec inc push cmp lea negb or hlt (bad) xor mov popa inc mov out xor out inc mov les inc nop test popa xor push gs andb xlat cmp xchg outsl pop push (bad) insb (bad) cmp aas xchg std and sub pop pop add jle or clc cmpsb aam pop out xchg adc adc jmp dec push xchg bnd mov cld xchg fsubr lcall (bad) (bad) pop lret das pop or outsl and add push lods cmp (bad) dec loope pop jg pop push dec dec mov or nop add call jl add bound insb or cmc inc adc jnp lds adc and mov lods cmpb jl push out adc fnstenv or movsl out mov sbb push push bound aad inc scas cmp push mov (bad) sbb hlt xor roll mov add into vmptrst jo lods das dec inc f2xm1 adc std push (bad) movsb cmpsb bound push mov add xchg addr16 loopne sub mov hlt subl adc sub int3 loope pushf lock bound pop cwtl js mov cmpsb jns mov out adc sub cmpsb pop cmp cwtl fwait push mov test cli int pop push ss pop fsubrs mov push iret sub adc sub dec xor mov aas nop clc xlat or mov push cmc out js fs sub cmc dec sbb push hlt mov sub negb mov or popf insl dec pop test mov inc and mov jmp jp addl and (bad) push pop stc hlt leave cmp push sbb sub enter mov nop cmc out pmuludq (bad) mov out or dec mov mov (bad) test xor test (bad) and mov inc mov mov xorl popa jo mov ds pop dec pop in fcompl test xor into lea enter push lock ret and sahf xor sbb sub inc call test out mov jb xor inc push outsb pop (bad) mov xor cmpsl sbb in and pop push in adc cmpsb (bad) mov mov out test mov jle loope inc mov mov ret or or into cwtl mov push push cmp rcrb test inc push sub or and push popf (bad) in call gs ja fucomp (bad) inc push sbb pop add pop stc push or inc in aad mov leave sahf in xor inc push xor cmpsl fsubp int rcll (bad) sbb lds jge mov adc out das sbb and mov scas sbb arpl lds sti ljmp jle xchg mov sbb jg jl jb pop xchg pop mov xor cmp fiaddl ss test xor sub pop sub mov lcall push pop sbb mov mov ret dec gs dec insl cli test mov adc inc fwait dec int3 insl outsl push mov or lods inc stos adc dec test scas xchg sbb xor and rcrb adc or mov in adc dec dec push aas xchg enterw call xor cmpsb (bad) repnz xchg and or mov enter pop stos scas in cmpsb (bad) mov lock lahf sub ljmp jmp cmp leave mov test out inc adc jecxz (bad) lahf sub pushf cmp in jmp cmp sub call mov pop test fwait les gs dec (bad) pushf cmp xor xor ret subb ljmp mov orl (bad) and test xor mov inc orl rol sub fsubrs lea lods xor outsl cmp sbb pusha (bad) cmp arpl in in mov cld jns add ljmp in xchg test hlt (bad) popa outsb outsl jbe out adc mov stos fdivrl shll (bad) push lea mov loopne,pn test verw imul cmp adc (bad) cmc std inc fwait adc ljmp fs adc mov push (bad) dec incb mov cmpsl sahf insb repnz cmc lret stos jg fist (bad) pop in add xchg or or icebp dec stc xchg iret jle lret loop adc xchg fcmove mov xor data16 xor out adc xlat rol fwait outsl jb mulb dec js add lcall adc outsw push adc jns and sub cmc leave mov mov stos in mov fwait pop arpl out cwtl mov sub aam imul cld jl (bad) dec mov jmp and insb nop fwait in es dec fadd pop dec lcall or enter mov jo pop cmpsb push add cmpsl setns loopne call mov push push mov mov scas sbb arpl add or shrl inc cmp ljmp pusha lret js pop or daa call cli mov scas das jp movl rclb hlt icebp popa mov loope add loope mov dec pop jne shl cmp xor mov mov cs (bad) out push mov imul sbb das jp pop loop push add imul cs mov into mov pop mov xorb jg xchg bound insl out mov cmp mov cmp mov sbb pop and ss (bad) lock mov push popa loopne and popf inc mov nop jecxz cmp jp mov jbe pop out jns fsubs out fwait (bad) push insb and jmp mov adc mov adcl pop loope addl inc arpl xor cmpb push xchg bound xchg test xchg xlat std jbe in out aas pop or pop icebp mov gs mov in (bad) cltd and mov arpl call mov call je mov rcr subb jg adc fmull hlt inc ds xchg add mov and les ss lds popf and lcall ds inc sub cmp fimul cmpsl add sub pop mov or cltd inc subb cmp arpl popa xchg leave adc sbb sbb push adc fdivrl std xor push dec cmc test pop and cmp jae (bad) nop and bound pop or enter xor nop jno aad mov arpl lds leave mov adc mov pop hlt mov xor xchg xlat neg sbb push cld imul and out jb sbb and mov jl jmp das add jecxz sub je inc movsl add push imul mov pop dec sbb cwtl rcrl xor outsb and mov add or inc stc jge fsqrt mov mov push out lret fistl fildl cwtl divb jnp mov xchg dec dec xor inc leave mov es push sub xchg aad jae jb lret jg adc cmp push les pop jnp sub xchg jle lock lods cs mov and rorl cmp je ror xlat mov mov pop and call jne adc fld in adc btc scas mov (bad) cltd (bad) jns inc jnp arpl pop imul insl stos cmc sub outsl push adc push adc xchg (bad) xor mov push int push mov or dec pop inc int3 (bad) pop imul ds (bad) sub sbb loop movsb mov insl pop mov (bad) push es subl les cmp xchg sbb xchg inc mov mov pop push cli xorl nop jge daa push mov cmc adc popf push mov or shll das sub sahf mov rcll jecxz lret push dec and pop mov repnz jae shrl ss add mov mov pusha leave popf fwait xchg jg adcb mov mov arpl add cwtl loopne imul dec je arpl ljmp loopne cmp jge cmp ljmp xor xchg (bad) imul nop sub push jno dec xchg push sub xlat jl stos mov add fwait adc and xchg mov imul mov push sbb insb jbe inc push pop xor xor inc xor xor pop pop push xchg (bad) rorb lea cmpb or aaa push not inc inc and mov or pop repnz or pop jmp mov fldt ficomp cmp mov cli xchg fstl test pushf test cmp and sub int sbb fbld es push mov dec lods aas cmp stos dec fwait push pop loopne jg dec (bad) rcrb lahf stos add add jl addb testb sbb pop mov movsb pmullw mov lods add loope popa add andl cs adc lock popa fs rcll sub jp out fisub mov push hlt mov loope ja out repnz or bound gs imull (bad) out adc outsl cmpsb fwait cmp pop sub imul nop das jg ret nop inc (bad) dec ffreep arpl out and ljmp jg xor sub and push jae cwtl (bad) scas test repnz subps jp sub jne shll sbb fdivrl and insl inc fnsave dec jp xchg pop jge sbb and xor daa cmp push push pusha cmp jns pop jl shlb fnstenv and add push adc push enter or mov pop push lret jne ret rol es mov push or jne sbb fistp and sahf pop inc pop pop adc fs ret ret ja push push push or aam sub mov pop dec mov cs aas cmp jae negb xor outsb jmp aaa (bad) (bad) lret mov jg mov aas xchg (bad) icebp mov fstpl and sub xchg (bad) sub push (bad) (bad) hlt cwtl mov lods lods rcrw xor add mov jecxz and push xchg (bad) jno lahf (bad) push in shrb xchg xchg or jo les sub dec fbstp fcomps mov (bad) loopew into cmp jnp sti inc jne dec cmp fs rclb sub outsb sbb sbb psrlq sbb insl pop add clc cmp cmp cmp getsec xchg enter jae je mov hlt xor mov or cmp xchg pop dec insb add xor lock je jge ja mov cmp dec int3 pop cmp lret pop mov scas bound push add nop les jle adc fs lahf mov dec xchg cmpsb mov lds gs arpl xchg sbb ss insl icebp push repnz mov dec xor or das jge mov cmp ret fs pop stos scas adcb rcr or adc and in pop xlat xchg and inc inc pushf ret clc jb sub pop movsl push push or test fisubr js mov sbb and lds outsb cpuid mov jge mov jmp mov iret aaa inc call xor xchg imul loopne lcall divl sbb fnstsw int3 push aas inc cwtl fnstsw cmpsb mov dec lret (bad) rcrl sbb pop flds fidivrl movsl fnstsw push mov sbb adc sti sub cmp pop js add (bad) repz rol test (bad) mov bsf cmp mov fsubs add aam adc xlat mov out aad jne pop mov cmp xlat push inc (bad) jle xor xor stc mov mov push std push push push ja cwtl cmpl pop add cmp ret inc sub mov or sbb add shrb imul xchg dec (bad) aaa insb mov or fcomp sti mov lret fistl lcall push jbe test rcll lea add pop push mov push xchg or mov lret adc push cmp insl test stos mov leave add aaa fcompp pop and mov (bad) (bad) mov mov test stos inc pop shll inc and sub jmp sbb loope je ss mov int3 jge mov stc sbb in movsl or gs or ret jne pop sub push out xor adc fidivr push mov pop or jo adc ljmp popa sbb sbb loope inc notb sbb jmp rcll mov gs jo pop push jae aas mov add xchg imul jne mov and fwait inc loope push push sahf mov fistpll (bad) jmp ja ret test dec xchg idiv mov cmc cld xor cmc (bad) arpl pop scas arpl lds ret dec mov dec aam or push daa fstpl gs jae lea cwtl sub xlat jmp sub mov cld popa lds mov mov icebp mov push cmp inc loop mov mov inc mov and jae in into sarl xchg mov mov fildll dec fs es mov clc repz (bad) mov sbb mov xor xchg xlat mov out add lock fidivl and push mov shrl or mov dec dec jl inc add mov (bad) adc push push movsl pop int (bad) xor cmpsb or rorl (bad) in decl cmc jl pop sub outsl insl (bad) mov sbb les mov out pop pop sub sbb inc mov sbb xor ret dec fwait clc (bad) notl add sub bound addr16 std pop into repz stc inc xchg sub (bad) mov cltd cs sub inc out push imull mov bound fcoms jmp push mov pop lods (bad) cmc add jnp pop cmpsb (bad) incl test push cmpsb cwtl (bad) mov mov popa out stc push mov clc sub pop je,pt imul in pop cmp push rcl cmp lcall in and jo (bad) jne sti insl mov aas inc cmp and les xchg lods mov orb inc xor test xlat addr16 div jnp cmp jae jae pop cmpsb push xor cltd add out dec jle mov mov and pop rcrb stc sub sub sbb ret jmp and loopne push lods add pop ja js mov lock jbe std out jp dec test pop popf and xor loopne pop lahf ljmp mov push and lods data16 adc sbb insl test rorl add leave fist in and aaa xor dec cs int mov movsl pushf mov popf jp xchg mov mov mov clc push push or iret add cltd aaa adc das dec imul test gs lock add fmul mov inc sub pop jp xchg (bad) mov popa sub and sahf arpl aas popf es push js loop lods pop ror add fbld frstor das push pop cld xchg add call in movsb push mov loope sub jecxz inc cmp sbb xchg (bad) and icebp adc inc icebp xor into dec push and or imul (bad) and mov test hlt aam inc (bad) push or adc sub cmp rcl xlat mov notb pop (bad) dec cmp stos or stos sub mov test pop lahf xor lret lea into xchg daa orb adc xor fsubr clc jle arpl sahf test loope xlat aaa fstl and (bad) mov xchg stos rorl iret shrb fwait sub sbb movsl bound lea mov dec sbb arpl loop xor (bad) lock push je dec outsl rcr fsubp mov mov stos sub xchg jmp test fsubrp les jmp inc lahf sbb test mov fdivrp jae sbb lcall dec jb xor cmp jp sub sub inc cmp fs insl dec test mov push js inc dec mov dec lods je jl jbe xchg jmp hlt imul sub ja mov sub xor outsb pop push fs push fcoms dec jns mov dec push cs mov popf cltd mov repz lods mov orl mov mov jp cld in je push aam orl add dec cmp pusha jmp test int std pop in ret sbb es je pop jg jg (bad) stc xor lea lds bswap and xlat or jno dec dec popl dec stos jbe mov mov cmp lret mov pop pop jbe xchg push sbb xchg push mov rcrl cmp mov jmp push aaa (bad) push cmpsl iret lea mov lods cmp cmp mov arpl pop cs pop push sbb adcb adc xchg sbb cmp pop dec push int adc cmpl cmpsb adc add (bad) in push xchg inc mov dec mov pop mov pop inc push imul (bad) xor pop call test pop pop xchg addl jb mov scas leave cltd (bad) mov arpl lods push lahf loope mov (bad) xor xor imul add push mov addl dec mov movsb mov push (bad) cmp mov or add inc in cltd nop xchg jnp push test pusha mov sbbl dec ss lcall sub jmp repnz sbb inc fs add mov push pop sbb xlat std iret pop cltd arpl lock fcoms or adc arpl fcomps inc pop loop add pop mov out sbb nop mov xchg loopne lret test push (bad) pusha mov fsub jp in inc js xchg push xchg fldl aad (bad) jecxz cmp adc fsubrs xor xor add fdivrp xchg and add and xor fisubr imul rcll mov sub mov xchg or push ljmp les xor sub lret test daa hlt in (bad) mov cmp sbb jo pop outsb in cli pop jbe inc lahf mov mov ds inc add jo push jge push hlt repz add adc mov out jno xchg sti mov test mov imul movsb xlat sub and lahf repnz jp imul adcl (bad) xor es push xor or repz jns dec popf jbe hlt cwtl (bad) sub in pop push and push push inc push les (bad) push cmpsl jp ja mov xchg push movsb pop cmp repz mov inc cmc imul test stos clc sub sti mov fidivrl push into dec (bad) sbb popf mov es pop lcall les push loopne xchg xchg pop out popl les imull mov fwait in shrb xchg xchg mov pop jp (bad) stos or sbb jle fiaddl xchg sbb inc dec push add test jnp stos or cmpsl cmc xchg xor js jnp mov push cmp (bad) push cs sub gs (bad) sbb mov fcomps xor cmp (bad) mov aaa call inc repz mov or outsb (bad) pop adc cmp (bad) andl mov jo cmp ja fistp xchg sbb add cmc push cli inc fwait push aam pop mov out jnp stos xchg ror cwtl sbb cmp movsl cli idivl icebp pop gs sbb (bad) out outsl imul fidiv in fimul xchg movsb inc outsb sbb arpl lods adc cwtl adc aas sub mov adc sub stos std pop mov insb pop imulb aaa push enter mov jp call mov push push fistpll jg fwait into clc mov push xchg int dec sbb js lock imul jae sub add insb shll or aaa adc das sub mov orb clc scas (bad) imul jle push mov lret fmuls into dec (bad) aaa xchg adc mov mov fxtract loop pop mov cltd lods or jmp lea jg pushf lret xchg mov xor (bad) roll push (bad) stos stos push bound mov or nop rcrl and lahf movsb andl cli jne fiadd sbb push xchg int3 sahf mov mov mov xchg dec xor fisubl lea pop ret stc cli test mov stos push pop mov cmc js xorl (bad) mov lods ffreep ds es cmc nopl cmp int3 in add mov xlat add mov dec (bad) xor xor mov mov stc xchg fisub pop jmp mov sti test jle insb sbb sub cmpsb push xchg and imul adcl and dec mov jb,pt les sub jecxz rcrb in insl xchg pop sbb je out adc cltd jo xlat xlat sysexit les push sbb gs jl xlat pushf or mov jo jnp sub pop xor repz addr16 push dec cli rolb out push (bad) jge fimull repz cmpsl clc das xchg imul cwtl pusha xchg js adc stos popf push push imul push loop jge sbb js xchg scas adc pop adc pushl jns loop aad fwait std scas lret mov (bad) jmp mov stos outsb (bad) and out mov icebp jg or dec inc (bad) fimull sti mov fcmovbe push loop and inc jo dec out int mov sbb dec dec (bad) jmp dec mov or cmp jo inc iret (bad) mov out adc dec jnp clc pop loop arpl mov (bad) cmp cltd stos icebp movsb xchg mov test jl (bad) or into (bad) and cmpsl jo out sahf (bad) lods sub push sbb clc push inc and fwait cmp out mov dec jo fs insl fcomps clc lahf xchg mov adcb pop jl adc mov xor pop sub pop in jo mov push adc lods pop pop dec popf sbb out loopne mov ds in mov pusha mov into dec popf sbb add xchg pop or sbb mov iret negl mov arpl jae (bad) loope mov push mov jnp mov mov inc aaa nop mov hlt andb xor pop adc (bad) ss (bad) lret pop mov fs mov int dec push add out fs ret sarb add dec add sub fist fadds les pop or add cwtl pop and push mov or jl pop pop sub fimull mov bound or nop pop lahf fnstcw fs mov sar xor ljmp cld add cmp aaa fsubs enter daa aam jno (bad) push insb lcall cmp out xor jl xor adc les pop sbb inc sub stos jnp jno ret or loop mov popa int adc rolb cmp lret lods cwtl mov cwtl (bad) (bad) mov aas das popf out in sti (bad) lock dec loopne pop (bad) jbe add insb stc jge lret push push testl or and es test jge push fs pop inc push cmpsl fcoms xchg dec stos push mov pop pusha push inc aas stos adc sbb mov aaa (bad) jne cmc les ds inc xor jmp ljmp xchg jns arpl scas pop and xchg inc jp dec arpl dec inc call xor jns popf bound xor sbb in jno inc inc ds js mov lods pop pop jg xchg sub nop aaa int3 loope pop push dec adc fcomps insl bound xchg popa (bad) dec push addr16 std push mov xor jbe xchg jbe mov mov push inc adc jp jmp push out in into in stc and inc fcmovnbe adc mov inc xchg test ss xor push sub sahf jne (bad) mov je jle push cmpsb lock jmp sbb sub pop inc xor (bad) movsb fldt pusha mov stos in or pop lahf mov ret cwtl xlat jns test test cmp mov cmpsl rdtsc xchg lods leave popa lcall jns test ds xchg movsb sub fwait cli rol aaa mov shlb jb insb push je std sti enter rclb pop cmpsb stos popf mov lahf stos lahf std ret mov aad mov std cmp sar in mov jl ja popf jo inc xlat pop xchg insl pop and and cwtl dec mov je lods push cli mov mull push pop sub push (bad) (bad) mov adc lahf pop sbb xchg xor lret or cmpsb cmp movb push (bad) xor lea xor mov fstp mov fcompl and mov (bad) stos mov push push (bad) xchg adc out sub add daa or mov arpl add dec (bad) jmp imul fsubp bound sub push mov imul das scas pop dec add imul jno outsl cmp ss cmp sub mov cltd cld (bad) in jae and stos cltd jg cmpsl pop ljmp dec pop sub adc mov adc les mov out pop and in clc cmp data16 imul and xor scas add inc sub add add test fisttpl insb or xor and cmp xor jg ret inc push shl pusha ds sbb fsubrl subb sub xor jp fnstenv (bad) jmp jg nop cld test ja cmp sub mov add add daa mov mov fnstcw (bad) jne std test cmp push xchg sbb dec inc test lret je loop data16 inc mov repz rorb jmp clc jle pop ja adc sbb iretw xchg sbb dec push push lret mov xchg jg (bad) push sub push cmp insb jb loope adc push lret adc jns pop mov add iret mov xchg stos (bad) lock cmpsl jbe and push xchg outsl icebp outsl imul test test scas int3 xchg or scas mov inc div cmp mov das mov push jmp xchg lea in pop in sub cld iret pop cmp fnsave xchg dec testl xchg mov jo push fucomp lock mov xchg mov mov sub bound push pusha xchg fwait std xlat cmp xchg jbe test adc push push mov lods sahf and mov mov inc iret (bad) (bad) dec mov xchg test mov pop push fwait and dec jp sub sub repz in fsubl loope in adc js lods inc stos mov mov insl mov mov xchg mov adc ss and push mov sub sbb push lods xchg insb sbb pop (bad) jae stos es and pop sub inc stos shl into xchg adc xorl leave pop push popa test sub movsb adc or out loopne cld mov push add xchg and fisttp mov jne jo and cmp sub and inc mov ja jne (bad) shll repz jnp lahf and stc in popf insl xchg pop mov push sbbb popa mov stos stos addr16 push push xor xor pop adc and jo jb daa sub mov mov shlb aad (bad) mov or lea sub sub cmpl adc mov and xchg or adc (bad) jg xor pop push cmp fiadd mov push sub dec pop (bad) mov enter rcrl cmp sub sub aas lret jmp push fcmovnb and cmpsb xchg daa cltd adc pop xor or aaa (bad) jl push fwait in mov push out mov jnp mov repz jecxz fistpl inc pop out mov push sub call iret adcb sub mov das fidivr cmp xor in dec pop fild je xchg stos jne mov mov adc add push fs inc and add mov xorl push ja loopne nop inc pop or xchg push repnz pop int ffree xlat mov lods xchg test mov cs mov mov pop arpl add negb loope scas loope cmp imul cld lods scas aad push push cmpsl add xor lahf push lret cmp sti test jnp and cmpsl sub sbb mov mov out mov dec push inc stos imul xor mov pusha andl notb inc sahf aas pop test xchg dec outsb fiaddl insl cmp addl push jl sarl or cmp daa fsubrl pushf popa push into sub idivl in popa iret pop mov iret fs mov (bad) jnp mov xchg or mov cmp cmp scas mov or lret cmp ja cwtl fldln2 adc dec xchg popa cmp dec inc and sbb mov mov pop enter je movsb mov xchg std xchg add push add dec rclb daa mov scas mov jo cld ret mov push pop fnstsw loope inc push mov push pop out fwait roll inc pushf mov fildl cltd cmp push add jns int stc or lcall xchg ret ret int3 insb popf or and inc cs sub push dec cs lret ds xorl adc and jbe pop outsb out xchg popf rcl sbb stos fnstenv (bad) popa inc (bad) mov (bad) clc push and data16 push inc push mov xchg mov or adc lcall dec mov dec pop push xor push ret inc test das and scas pusha mov stos bound pop and cmpxchg (bad) jb faddp mov int3 jle jg xchg or dec loopne pop xor shr cltd adc jmp mov (bad) pushf mov arpl jl pop imul or ljmp in jmp inc ss lahf in outsl jbe pop push mov dec lods add stos mov pop jmp test sbb mov cmp aam xor ret imul push ljmp and fsts adc lea ret imul or mov cmpsl xor pop pusha sbb aad xlat cmovs fwait in mov inc aas fwait dec repnz int3 lret cs push imul pop popa mov jb cmp lock lea daa mov xor xchg mov inc and popf in jae push xchg insl mov je das imul (bad) lock sbb dec shl popa dec movntq out lahf gs jle mov fcoml fnsave out outsl movsl pop xchg jge stos adc cmpsl and xor or movsl clc popf imul xor mov mov sub cld add das je mov cmp or jo das movsb fsubl fcmove and iret pop lea or xchg or nop in movsl xchg dec lock or fnsave adc inc jnp leave sti dec dec pushf sbb push popa inc jnp jmp into xchg test andb movsl sarb pop sub test and dec dec mov jge adc sub icebp sbbl fiaddl fwait orl popf and repz (bad) test cmpsl cld (bad) cltd subl mov aas gs jecxz sbb (bad) sbb pop test movsb into (bad) (bad) imul (bad) movsl mov scas mov insl dec outsb aam pop add dec lods or fcomp fsubrs mov xchg xchg add loope mov repnz loop aad je iret inc in jle adc (bad) xchg mov cltd push cmpsb sbb stos add lret mov adc cmp pop (bad) je sub mulb add add push xlat (bad) mov mov jp sub call in lret and fimul xchg dec push outsb (bad) fldl popf aam sub pop xchg and push xor test push inc (bad) daa jb push jns inc inc mov sbb cmp lock inc loop push mov sub mov sar (bad) jle inc ret (bad) xor mov inc sbb pop imul jg (bad) fcmovb aad mov lret push daa dec dec sbb les daa mov pop in popl fwait imul and in adc jp cmp jnp test (bad) xor test lcall loopne outsl lret cmp stc (bad) sub lock fstl jmp fisttpl sbb incl xchg data16 cmpsl out xchg loope,pn mov sub sbbb jnp scas lea (bad) pop sbb xchg xor xchg scas sbb insb lea mov lret lret ficoml mov ja jo dec cltd test gs sub (bad) jb int test inc pop out out and fwait (bad) ljmp sti xor push stos popf and (bad) dec leave lds out rcl add leave movsl les lock cli int dec mov jp xor xchg adc jmp call jl not sub push scas fsts cmpsl std add cmpsl add jno push adc xchg out dec movsb mov push fcomps mov jns lds push sub std adc addr16 imul stc sarl push daa dec jo inc pushf mov pop cmp test das add mov pop test ds or pop sub inc insl push jl add add repnz lock fsubs enter sbb cmp push iret sbb test inc pop inc sahf gs stos jno out mov mov lock lret lods adc (bad) aad mov add adc and sbb add fs (bad) mov cmp dec ja mov rcl test fs cmp pop cmp add and imul inc lods leave mov dec in xor push sbb aas mov ss lcall adc sub push pop push jle push int std fldcw adc sbb je jae push mov jg xchg pusha hlt cmpsb js in shrb sub sub and icebp adc (bad) jnp stos dec adc test leave lock loope daa je inc fisubrl (bad) lret jg pop cmp sbb fucom imul xchg add test mov mov cwtl jl loopnew xor repz loop xor xchg cs aad andb aam sbb (bad) sub or mov jb add clc push add faddl mov xor push jecxz dec dec or mov ret jle mov cmp sbb (bad) xchg adc (bad) sti jns pop ja nop xor shrl rorl inc rcll leave xchg jae pusha xchg mov jae dec mov xchg dec push inc fbld or pop ljmp clc fadds lods pop mov dec mov mov cli push cmp je sbb push std shrb aas mov bound xor mov lods sub sarb mov dec shr stc mov jns outsb sub pop cmc xchg sub lock push lcall mov dec out mov popf out clc outsl nop inc lahf adc mov mov (bad) mov mov faddl lcall xchg xchg sbb inc xorb dec sub sbb cmpsb adc lret mov iret mov out xchg jne cmp inc cltd dec push clc jp pop ja test push pop rolb imul mov fmuls (bad) push sbb push icebp (bad) jnp or xor sub sbb test cmc pop cmpsb mov mov sarb jle ljmp or pop or pminsw or movsl sub adc inc jmp or xchg jb mov movsb mov pop add and mov std cmp (bad) (bad) fistpll jl push inc mov test sbb pop scas les sarl mov sbb push pusha jbe dec ret inc ror cmovnp scas pop fisubr test mov xchg in (bad) inc adc repnz adc into or push sbb push fldl rcll jge lcall inc dec adc inc sbb or jb xchg daa adc push hlt sub call push aam clc bound test lods loope stos jo int negl mul scas fwait mov add xchg push scas or (bad) or adc dec dec in shrl loop movsl inc rclb push dec xchg jbe rcl jne jae scas shrl ds (bad) push jp inc jmp insb mov out test lock (bad) mov cmp push xor aad subl add insl inc jb lahf pushf xor in sbb pop pop add jae into out jle rcl jae clc adc mov sub mov fstpl sub lock jb push jecxz in lods test adc fs jg pop sbb pusha and xor xchg sbb xchg inc jp int3 aad ds sub inc (bad) cmp rep mov mov and in outsb or mov (bad) (bad) dec pop nop add mov (bad) mov mov mov push mov push push dec es push push notl loop andl and push (bad) xchg add lods call pop mov xchg js adc mov sub mov imul addb (bad) gs imul data16 leave push lock ja es daa sbb xchg sbb cmp adc sbb jg insb dec (bad) jno stc hlt push cwtl out test xor and out imul cwtl mov roll int divl adc in mov stc jecxz add fbld cld pop push mov ss xorl dec stos movsl inc mov stos dec mull pop or icebp mov fisubr das arpl mov addr16 inc add add das loop cmp sub sbb (bad) imul dec es repnz jb push mov pop and sub xor cwtl je test imul je js pop or push mov jl shl xchg add cmp test mov xor push lret pop popf push aaa ret and dec cmp lret xor nop mov mov rolb iret bound clc sbb xor test push ljmp jg and ljmp mov adc mov cmp jo jecxz sub mov fisubr mov (bad) dec jle xchg jl or adc xor (bad) je out pop jno dec fsubrl jl in sub push push sbb in sbb mov xor adc scas add iret fdivrp test or aaa jns cli push inc movsb clc push icebp xchg loopne cmp jno in scas pop popa xchg and push push loopne into mov jp leave ret add dec in mov das jb in and mov cmp or sbb cmc adc mov dec dec and pushf (bad) xchg out pop jle fwait nop push cmp mov xchg imul cmp jmp pop call imull inc in cmpsb adc sub mov inc and fldl (bad) arpl push sub daa sbb inc lahf xchg lods xchg nop rcrb push sbb or xlat scas rclb mov (bad) aam inc dec cld push add rolb lods xchg aad out rcll ret or pop mov sub stos call mov aam pop pop mov mov or (bad) cltd mov pop lods push xchg dec out into repnz mov int jbe test jl lret mov cltd jb inc xor inc cli fs mov aaa push push or fcoms xchg lds add sub int stc push out test sbb sbb cld pop mov dec lret push mov sbb push hlt repnz fcompl loope mov mov cmp sahf sub pusha mov and lds clc ss fcmovbe add (bad) adcb mov icebp loope shrl (bad) mov aas enter push roll jo lret pop mov movsb popf and mov mov movsl pop scas shlb mov pop popf pop mull shlb nop mov test subl dec xchg rorb int3 ja sub jno ja popf xchg mov jge aam push outsl test ret dec pop adc mov popa cmc lods imul or mov inc fwait xor jb repnz xor xor push adc (bad) shll and negb and push gs (bad) sbb fs push mov sub or pop into lds jo arpl inc mov cmp mov inc (bad) dec les shrb cmpsb nop push btr (bad) jae pushf mov mov rorb fildll lds mov fldl and test test mov pop mov clc push pop in jg cmp (bad) mov push jle inc loope iret fs xor fcompl push sub sbb sbb or sub jmp xchg sub xchg (bad) ja out and jmp mov jns mov push jl jns jo sub (bad) int add push pop mov and mull mov xchg inc dec imulb jmp jecxz sbb add imul cwtl sbb xchg cmp push jg jl imul inc stos cmpsl in sub add mov pushf push cli push jecxz dec (bad) mov jg ss mov jnp sub popf mov dec or and add rcl mov add sbb push cmp loop push movsb cltd dec mov pop (bad) in jp cmp icebp gs rol (bad) lcall inc mov jae inc mov sbb stos xor mov mov iret in fwait push iret and outsb insb (bad) jbe or cmp adc push jbe imul gs xor and aas inc cmp cli aas notb sbb fild addr16 addr16 push sub lahf gs mov lea dec jno push mov ret arpl dec xchg push rorl push adc pop dec nop rcr test xchg jp mov (bad) sysenter sarb and les sbb add pop xor mov andb pop arpl repnz push adc aaa jns adc pop inc inc jmp sbb loope dec inc les push jae inc inc adc imul rcrl sbb icebp stos std cmpsb xor sub xchg jne dec stos pop or mov lret sub dec jns idivl insl dec jl xchg test nop loopne es push std int3 rcll sbb or and rolb aam mov and xchg jp dec jne jl mov add xchg test sbb cmp jge push add pop mov sub movsb xlat sbbl stos push stos cmpsb xchg lods mov jbe mov jne mov or and stos mov and test ja aad mov xchg stc pop data16 imul sub sbb shrl jbe xor cmpsl push popa mov add push ret jmp lret pop mov ljmp add push cli mov addr16 push cld or cmpsb push push or stos movsl lcall test jns sbb cmp (bad) call mov popa js mov popf jne (bad) loopne cld add mov aas sbb les mov pop dec aaa jnp mov mov repz cmp inc popf dec mov shll push aaa js int and out push push push stc dec cmp ror mov cltd mov clc adc dec (bad) and and out and mov fwait push push ficom jecxz inc add jno mov repz testl mov push jp,pt addr16 xchg jne xchg jp mov insl pop adc bswap dec mov or and add movsb rcrb push and out xchg or pushf insl add popa mov stc lcall mov sub sbb test jbe sbb dec cmp dec cld and adc cmp inc add push dec repz mov jno stc adc (bad) ss imul cli add sub cmp leave rcl sub mov push rcll jp clc xchg cmp aam fs mov xchg dec aam insb mov add loop mov push fnop inc pop push cmc ret add push xchg stc xor xchg inc rcl mov aam mov mov jbe addr16 xchg cmc ja sbb leave jb push rorb sahf rorb xor inc lds sub push insb stos mov cmp mov test pop or mov or (bad) fildl std sub dec inc sub jle dec stos fdivrl jl push adc push data16 adc sub and leave mov xorl or pop fisub push das decb mov clc std adc jp dec pop inc pusha sbb pop dec test dec cmp je push lds lcall dec pop scas jle ja jbe fiadd dec mov mov cmpsb fmul out (bad) popf ljmp inc call aad iret fnstenv mov sbb enter xchg xchg mov lahf sbb or mov sarl pusha push aaa scas (bad) gs fadd pushf js push inc femms add inc pop cmp rorb dec insb fwait pushf sarl dec aaa add mov sets sub lret jg sub rolb in sub movl xor daa mov dec mov fcomi push push mov pop lods jl ja or mov or cwtl es jae addr16 sub into push mov icebp jge dec test cmp cli sub test (bad) cmc push xor ds pop scas fistpll jp mov divb out sbb sbb add rcr lahf mov (bad) dec fsubs ret cwtl xchg sbb pushf repnz mov pop push stos mov mov enter je ljmp mov cmp jo or jl fstl fcmovne xchg mov (bad) push repz push fldpi mov pop mov shrd aaa notb (bad) shlb mov dec shr mov (bad) cmp cmp stc dec pop pop sbb inc in ja shlb jg stos cmp outsl add cmp add movsl ret daa loope outsb test pop ret push jne sub jecxz sbb out mov into lret mov outsl or scas loopne rorl or mov jae iret xchg sbb xor mov divl add shlb mov sbb scas add push lcall mov je mov add mov arpl xchg xchg pop and popf adc push push hlt loop push push cltd xor fisttp stos inc cmp push mov jge or les lahf cld scas push cltd pop pop fcmovnu sbbl jge arpl push xchg loope add scas or iret push mov (bad) mov js test sbb mov inc xchg mov divl inc cmp fnop pop test bound and stos dec push xchg lds jl mov or and cltd std icebp and fsts add es inc (bad) roll inc xchg push xchg mov and xchg enter test push sbb int3 and inc fmull jl dec xchg sub sbb inc mov pop push pusha fcomip call push pop dec (bad) sti mov pop jnp mov dec loop sahf int push mov inc bound in ss loopne data16 sub pop in jmp jmp out arpl gs rcrb mov inc lret scas ret popf adc arpl (bad) scas fsts movntq rclb clc stc adc mov adc and mov push imul in sbb xor negb js outsl pop jne repz sbb add clc jb dec mov in out pushl (bad) call sub sbb push idivl insl jne inc pop xor addb addl out (bad) pushf lcall dec sub or call lcall (bad) xchg cmp and fimul xor push bound fildll fdivrs sbb testl icebp lock in pop xor xlat adc mov ja mov ljmp std ljmp mov out pop jb cmp sub adc dec push pop mov fisub adc aam mov (bad) scas mov das jae adc inc imul iret cmp cmc mov pop jl outsb cmp scas repnz in mov dec sbb std dec lret test inc push adc int or mov aad jmp int3 mov mov pop or sti mov aaa cmpl sbb jb push cli mov lret mov jecxz xchg out adc pop jmp jbe add inc repz pop add popf cmc or mov cmc jecxz jg out mov gs inc lahf aaa loop fwait inc in jle scas inc imul add mov shr push adc hlt adc jo xchg push lret or and cltd jo arpl adc mov xor scas push (bad) nop xlat sbb cltd shrl xchg mov js xchg mov push (bad) leave scas sub inc in mov dec lds sbb jle mov push pop lret pop sub mov nop scas lods dec mov pop mov rcrl mov mov sub sahf mov stos mov inc popa and clc lods les std pop (bad) pop inc xchg das dec daa lods and stos inc xchg ds or ret cs sub lods insl into xlat aaa jnp xor inc jbe mul or popa imul add and dec popf imul lock and rol dec bound lret or xchg (bad) and sbb and stos outsb jmp subl xchg cld cltd dec nop push insb mov int3 fsubr sub addr16 fldenv cmc cmpsl nop and rolb inc call push jnp lcall repnz xor inc fldt cmp cmc lcall mov js imulb mov mov pop lret mov jge (bad) pusha and (bad) mov jno mov sti aaa pop lahf aam addr16 rdmsr cmc jle mov pop sbb cmp pop stc insl sub inc cmp ret mov (bad) pop xchg (bad) cmp stc mov mov sbb adcl jp fldl xchg out cmp stc ficoml dec and dec push fwait stc jg inc iret shrb dec adc rcrb add sub and (bad) ss inc repnz jge sub sbb cmpsl imul es mov push lret fdivl test sub das or xchg call mov xchg scas (bad) outsl sbb xchg cwtl sbb lock in das jl cld fadd add cmp jp xor les sti je ret add mov test icebp xchg and leave adc mov mov or xchg xor add xchg mov nop sbb cmp loop daa jne push pop je std mov leave lret cmp (bad) in xchg leave cmp push adcb pop pushf lahf mov mov subb (bad) ror push ljmp popf xchg push push ret dec stos movsb xor jge mov inc js or xor inc lea push int mov out mov es sbb mov aam dec or lcall stos addr16 xor mov sbb sub imul mov pop push arpl dec shl fnsave pop sar lds xor cmovae push inc sub movsl mov insb mov mov je (bad) dec stos movsb dec jl mov jo inc scas xorl jb jecxz mov popf xor fisubrl insb add les in cmp lods mov iret int3 or adc loopne scas out xor lahf (bad) fwait xchg lcall push mov lahf stc xor xchg (bad) or xchg (bad) pop lods xor cmp push dec out dec dec push sahf out das mov xor or mov mov jno test clc sbb bound mov out inc mov xchg xchg (bad) jo jnp test cld xor fadds in xor dec stos inc push pop pop or shr pop push mov mov mov mov (bad) aam test sbb data16 jo or pop jnp adc cmp pop add (bad) popa cmpsb shl mov cli popf jnp fwait adcl xor movsl (bad) lock fsubrs push dec popf into negl or in addr16 cli mov and je xchg jnp bound sbbl sahf out or jg movsl sar jo icebp (bad) (bad) enter mov (bad) and fwait stc lcall icebp jbe (bad) iret inc mov pop test stos xchg subl add mov jae scas inc xchg lret fcompl add sarb dec dec fistl fldenv push mov scas test (bad) dec add xor push aad sbb cmp scas inc dec jbe (bad) sahf mov inc out cli jae xchg add jg hlt adc mov andl rol rolb xor and add (bad) mov popa and sub push inc jle in or mov cwtl rcrb sub mov push dec ljmp adcl mov aam loopne insl push jnp hlt fistp scas leave dec js push xchg out rclb in icebp sbb ret in push jg movsl jmp pop pop adc dec int3 pop add iret xchg js loop call pop cmp cmp xlat jmp xchg jle fbld and or std repz mov jecxz inc pop subb (bad) mov decl and rol push mov movsl iret sbb sbb inc int lahf cmpb mov and jmp ljmp je lock inc push jno loopne je xchg outsb (bad) loope mov lea dec mov push mov fs sub stc mov int cmc popf push add xchg and stos sbb arpl stos dec xchg stc fisubr fistl mov (bad) iret jecxz mov repz jne jo jns fstl sub mov xchg and inc mov ja and dec add pop xchg ljmp cmp je sbb icebp out mul cmp pop dec jecxz fs sub cmp jmp ja mov and lret clc iret movsl adc mov movsb sub fcmovnbe es addr16 ficoml push imul sub mov and xchg jns fidiv pop (bad) jne fisttp cmp data16 (bad) push sbb pop (bad) js mov imul mov jb fidivrl and sub sub fcmove sahf jbe popa in ljmp sub movsb cwtl rcll sbb mov imul add test pop out (bad) push (bad) es xchg mov xchg divl cmpsb insb fisubr fidivr iret and sbbl xchg ds bound cmpsb int lds and mov xchg cmc stos add jbe and popf xchg jae iret nop sti sti mov inc pop cli jmp loopne xor jg lret aaa movsb stos push scas or jbe into pop (bad) es jg sti outsl ja leave jo rclb sbb mov (bad) cmp or mov andl xchg sbb icebp lea out jns cltd inc (bad) in punpcklwd fst sbb ja mulb or setnp loopne pop jg push out xchg enter sbbb push fnsave cmp jl xor cmp inc movsl test in int test mov push ds das jne roll notb sbb fwait mov jb sarb cmp xchg adc popf pop imul or add add loop or mov lods add add inc (bad) and arpl cmp aad inc and pusha movsl cli bound push mov sbbb pop test je pop dec jno into test jge mov pop mov pop cwtl jnp mov (bad) in pusha movsl incl and js mov mov aaa inc (bad) out fwait and aam add jb push outsb or cmp xlat cmp rcll bound pop lds lods xchg push inc mov (bad) ss inc call testl aam ret add lahf mov mov inc popa add jnp mov cwtl shr lds cmp ffreep pop cli test shll adc mov lods push jnp jle and lret pop inc movsb decl xchg push lcall xor pop mov mov cmp ss mov push sti cmp mov fidiv stc jno cld call (bad) mov call fimul loopne or int3 inc add (bad) mov je in pop cli mov xor lahf in imul pop cwtl or test bound aas and cs xchg scas out jno push sahf mov adc sub mov cli mov test jb subb (bad) hlt xor into adc lds fimul addr16 mov jmp jnp aaa outsl fnstenv jp mov cmp data16 pop jbe mov jnp js mov sti je xchg fwait pop (bad) dec or xchg adc jmp sbb mov mov arpl jae jle stos arpl fstl lea cmp (bad) (bad) or jbe mov xchg inc and cli push adc lds and repz mov jnp lods ret mov clc cmp mov adc data16 in cmp xor nop sub lahf fwait inc std add inc adc stos shl dec cmpsb push add aas xchg push mov push outsl lret sbb push push cmp push ret out gs and outsl or mov int3 or fcoml cli andl mov fwait mov pop std sbb or xor es (bad) jmp stc (bad) xchg lahf pop and lcall fistl and jb push out push stc sbb das outsl subl fistl inc push (bad) sti popf cmpsb jnp or xchg dec or insb pop sbb xor inc and movsb jle neg xor mov push loope mov mov inc mov sbb dec add mov fisub inc imul sub out hlt and sub adc or jl test jg icebp mov inc xchg sub mov test in mov lret daa xorl pop lahf push or leave js xchg add mov in fstl xor fisubr (bad) iret in jl dec movsl loope sub nop dec rcrl mov jge push nop xor add lock and (bad) push sahf imul les test mov xchg xchg pop insl flds fsubrs xor xchg std dec xlat sahf aad enter aam test mov or movsl mov mov cld or sub and sti xor in mov pop jne into dec icebp scas (bad) std aad stos and inc in enter mov cmpsb dec sbb dec (bad) cmp movsb (bad) pop add dec pop pop xchg sub out cmpsl mov rcrb movsl xlat inc scas jp mov je or cmpxchg xor xchg xchg jno sahf mov (bad) and in insl fisttpll pop dec fcomps lahf add lahf cmpsw test negl loop stc jecxz js jg sub cmp imul mov mov ss xor mov jmp push sub loop mov mov add jmp rorb psubsb cli add icebp test dec push out imul xchg fwait aad adc es xor mov or mov ds dec sub dec test push xor (bad) xor mov jg ret outsl daa aaa mov shlb sarl (bad) mov adc outsl xchg adc mov popf into ret out shll cmpsb repnz add xchg decb mov loope daa hlt shll insl insl mov mov incb ficom pop cli mov roll jge pop in mov jae ljmp (bad) stc sbb lcall mov ss rorl push ret jl push sahf sbb jg xchg ficomp insl in ja lcall ja popa push shrl ret cld addr16 ret test mov mov test add cmpsb dec nop jno (bad) call inc dec push movsl push pushf mov in pop xor mov shll in pop cli fiaddl jb dec mov inc pop fcompl or adc rclb or icebp arpl mov push dec scas xor xchg ret cmpl fstpt inc jne ljmp jl pop jl adc xor ret fldcw bound sub mov les push aas cmpsb out mov stos xchg arpl cmpsb std lock (bad) aad and repz cmp mov pushf lock mov mov pop mov stos gs ss (bad) jp mov icebp cmc pop ja fcmovu je mov push (bad) (bad) popf lahf pushf pop in pushf dec lea jb xchg or jbe xchg leave lock lock xchg fstpl inc sysretw mov (bad) push test pop sub mov xchg fildl leave test cmp mov ljmp into sub sub mov add movsl mov mull dec mov cwtl popa pop jecxz (bad) stc xchg mov scas stc mov icebp sbb stos stos adc mov outsl bound inc inc imul sbb dec cmp (bad) cmp call and mov push jbe out fsubs dec mov outsl cmpsb outsb (bad) loope xor xchg aaa aam fbld jb cmp dec scas repz negl leave out cli xchg subl test jle mov xor in jbe sub imul pop sarb repnz (bad) icebp mov xor das mov dec mov arpl pop mov inc xchg pop xchg imul mov push xor ret sbb xchg ds push xchg (bad) push les add jge dec inc rcr mov mov nop lea mov pop je or lret js (bad) outsl jg lods sub lcall and or (bad) mov ja push rorl pop clc jnp out xchg call dec mov xor sub movsb jg inc sub sub cmp inc test aas das scas nop xchg loope cltd es pop cld push push in and movsl call adc pop jmp mov sahf sbb sbb into mov dec fistp mov rorb or fldt push xchg stos and faddp js mov pusha cmp aas mov daa xchg ja scas adc std dec clc jns fidivl daa or aas jo mov jns lret into jmp adc add test mov outsl add push aas lahf mov es aas sti jecxz dec cmp sub in xchg push hlt (bad) jmp jae inc and lock add popf (bad) xchg xlat adc mov les mov (bad) popl adc xchg jle push mov inc enter adc in in and dec adc jb jle ds outsl add push dec mov mov mov xor lret jae cmpsl jg jmp xchg scas xor (bad) mov sub sbb mov daa mov mov and (bad) dec push push aad sahf mov sub mov jnp jle sbb cltd sub add insl jae ret stc sub pushf (bad) xlat push mov xor lods aaa movsb sub cmp jge and sbb enter lock dec push pop mov dec cmpsb mov lcall bound push mov cs mov sbb lods out push movsb lcall jo movsl adc scas or xchg clc cmp push ret pusha pop hlt pop push cmpsb imul into cmpsl mov inc cmp aaa pushf push out loopne leave fisttpl sbb inc fwait mov outsl popa add jle cs iret rcl scas inc pop rcrl xchg pop add mov (bad) mov lods inc add cmpsb and pop mov xchg push (bad) aaa adc xor loope push xchg lahf sub cmp xchg aaa rorb mov adc test loope pop fmul pop mov scas seto adc dec mov adc mov fwait sbb clc cld sbb pop aad mov stos xchg in (bad) or mov mov fstpt pusha (bad) (bad) repnz aaa jno jns popa sti dec (bad) cmp adc xorl mov xor cmpsl lar insl adc mov mov mov dec mov dec out stc lcall leave addr16 push jecxz mov fsts (bad) xchg sbb fiaddl push xchg push adc call xchg mull js inc das movsl and fmul sahf pushf inc push fs daa jmp outsb dec mov popf (bad) out mov lea xchg xor ja add dec cmp jbe push roll cltd shr mov movb jg push rorb jbe pop int3 push mov cmpsl js or in mov pop jp ret cmc xchg pusha xor ret movsl gs loope outsl jbe pop sbb cmpl out and std pop daa pop sbb pop (bad) ficoml daa xchg xorl idivb rcll fs sbb lret outsl add jo add and bound jmp jp add test mov das (bad) out sahf stc mov (bad) scas outsl sti insl xchg push mov cwtl cwtl jmp fnsave jle pop mov jns out pop cwtl out (bad) inc hlt jmp mov scas stc fstpt xchg repnz sahf lcall ds jae xchg jbe dec sbb test sti das and mov test mov jecxz add rcrb pop into hlt adc jmp mov pop xor loope std mov pop push sub pop xor in xor mov jb nop in xor add inc add mov add inc mov and mov mov es movsl adc notl movsl test (bad) test mov ss das fwait pop dec dec es out (bad) (bad) pop mov push mov xchg cmpl pop incb and cmp mov dec stos mov push xchg push jle push pushf icebp sbb scas aas sahf imul sbb loop push sbb sbb out pop cmpsb and or cwtl xor push (bad) and movsb xchg mov jbe lock std mov rolb (bad) fsts pop adc das aaa (bad) add mov mov xchg outsl stos sub xor leave into ljmp ret mov inc sub dec js xchg scas mov repnz or rorb imul sbb xor lret dec add out inc sarb imul lahf jle int3 (bad) into stc je pop enter das int3 lds sbb mov je das adc mov push aad cwtl pop lods mov dec outsl or mov pop xchg lods aad test aas fldl mov jbe dec pop addl movsl test sub push out mov sbb add jb or xor pop cs (bad) pop lret mov arpl mov pop cmp cs and fist je loopne iret mov (bad) iret jno mov and add jge lar cmp xchg cmp inc or mov mov and mov mov xor jecxz pop mov or sbb test mov pop loope lock lods popf mov xor dec push cmpsb push scas add loop pushf inc push and movsl testb out imul mov arpl xchg movsw push leave mov and and or lds push rclb xchg fistl out aaa xchg ja (bad) pushf icebp cmp icebp sbb xchg push outsl insb and cmpsb pushf in mov add lea and (bad) fisubrl push test push mov push mov mov inc pop pop cmp dec outsl (bad) rcrl add notb loop adc fsubrl jmp mov pop xor fs or jnp test sbb inc pop cli dec stos popa mov jmp sub jg xchg or xor mov cmp ret xor mov stos sti push fcoml xor mov andb fcompl adc xlat arpl xor cmp jnp fst pop test pop sbbl test xlat jno insb pop dec xor jl and xor in dec push mov and out stc scas cmc adc ret scas inc adc xchg mov sbb jl lock cmp pop nop push jecxz enter fstl mov sbb cmp out shrl jno mov inc adc fnstenv sbb mov gs and lret out cmc in movsb dec sub mov mov push repnz out mov (bad) je mov aaa xchg xchg add or cmpsb arpl in aad and rcrb lea jns (bad) faddl mov popa sub (bad) outsl xchg dec lcall loope insl iret sub rcr sub push shrl sub cli dec andl sbb stc mov lds adc je mov or cs xor mov lods pop gs aaa push cmp xchg adc add and pop mov adc jae mov jmp xchg fimull mov add jge ret cld popa push xchg movsb or fldl mov or xchg or dec loope mov and push jae inc data16 stos adc xchg cmpsl fistpll mov (bad) ljmp repz pop xchg xchg cmp ss mov js test loope pop mov cmpsl jmp fiaddl cmp push sahf adcl add mov mov adc xchg out dec int aaa mov xor pop cli insb add pop movsb lock rorl (bad) xor outsb jecxz cmpsl xor push stos mov xor adc push clc mov outsl inc nop add and sub aaa cli inc mov push cmc and enter add inc test mov sub jo inc test loop movsl aad jg jmp inc arpl mov leave pop aas cs lahf aam sbb push je testl pop inc push int3 inc js je out lret ror jp orl js ror popa and (bad) cli hlt inc popf arpl sbb popf cs xor xor and int3 mov in rorb loope add loope rcrb xchg pop iret (bad) (bad) aam clc add gs add adc or pusha std xchg jg inc xor jno xchg (bad) int3 push lods in call push xorl xor pop adc mov or mov add inc ja int popa inc lret mov push dec bound pop mov or popf fmull push (bad) jne repz lods sbb jmp lods stos (bad) pop xor jns inc inc in inc in imul sub daa (bad) inc outsl and orb mov cli or in mov mov adc pop lahf (bad) out imul repz scas ss fsubrs xchg cmpsl sbb jns (bad) push pop mov (bad) mov sbb sub sbb pop xchg adc cmp scas dec addb fmul inc or sbb jnp sub int3 lods sub jp push push mov pop imul fistl and dec (bad) shrb dec adc fimull in push out in pop nop dec std cmp xor clc inc or inc rorb mov int3 mov xor popf in das or jb mov pop cwtl mov hlt adc inc cmp push fistpll (bad) dec sub and call or incb mov in int3 push in push xchg mov iret data16 (bad) xchg pop cmp idivl adcb sti mov xor ljmp xor int3 cltd xchg add out addr16 callw fsubrs jge adc push (bad) mov jo mov mov adc lea ja scas jle fucomip pop mov clc xor dec loop pushf idivl sbbl sbb imul call aas mov loop cli pop in and int push aad push pop fs cmp sbbl outsl mov daa lea sbb add sub xchg pop gs push lea dec lock loop repnz mov xchg adc push orl daa test mov out lods pop addr16 jbe cmp cld xchg jg xchg (bad) in out mov or mov loope arpl mov or out push mov stos jecxz aaa inc adc mov std adcb gs gs cwtl imul iret ret or push cmp (bad) clc and rclb mov mov adc push mov (bad) ss (bad) dec aas data16 jp clc lret stos decl adc xchg pop clc fwait inc popf testl jo xchg push cltd sub and int in ficom js,pn xor fwait lret push das in dec fst int3 pop mov cmpl push aam test (bad) sub xor insl std out roll cmp mov adc or cmp push inc jno xchg repnz enter bound inc arpl (bad) flds xchg xchg sahf ljmp jns cwtl sbb or add insb or adc (bad) insb or adc push push mov mov push cmp and clc (bad) inc xor out xor cmpsb push push mov les imul mov sub es dec pop and pop and cmp cwtl mov in jb adc jb aam push rcl data16 push mov sub imulb xchg aam jae,pt dec lea imul add push test push sarb (bad) push sarl and cwtl xor lahf mov loop push add stc add cld xchg outsb pop out add movsb push enter loopne out jmp jne mov out cltd or pushf in aam ret lds (bad) and sub fmulp les aaa xor mov cli push xchg jb and mov outsl loopne arpl push jbe in imul push pop in cli cltd call and pop iret mov and xor jb ret mov push sbb push xor cmp mov jmp cmp sub mov mov pop cmpsl int and pop inc cli inc fucom xchg lds test (bad) lock mov lods jge fs mov loop mov mov jo sbb cwtl ret imul ja fstps ret cmp or sub inc pop inc mov mov push daa add aam push fs (bad) mov cmc pusha gs out aam iret aad mov jnp (bad) mov ffree testb movsb mov mov push inc pop (bad) fwait cmp add aaa sbb and addr16 lret outsb and mov jae movsl test mov (bad) push hlt adc into int loop notb pop into adc jne pop test dec jo popa and dec nop mov inc je out pop fwait loopne dec pop add pop add je les scas shrl mov fst mov mov outsl mov ret stos loop out xor inc inc xor fistl hlt stos and (bad) jmp int insb jbe mov in or mov sub out (bad) lock jge or xor mov loopne jbe inc jle inc jmp sbb data16 pop ret aad fs aam jno mov loop pop mov shrl push mov test (bad) push fcoml and sahf jmp adc jle add (bad) inc loope fidivr jl pop ds enter lock dec int3 lret in add and or jle xchg lds mov repnz pop pop outsl shrl repz jnp lea stos pop mov xchg jl ds sub out jge test sub xor xchg cmpxchg8b cld mov fnop aam sbb xchg incl out sub or sub xor nop cltd std rcll addb mov insl out sahf inc dec add add sbb push dec roll (bad) mov les js add cmpsl adc mov rolb hlt popa cli cld dec je xlat or cmc jns loopne cmc in sub adc push xor sub jmp je repnz in or cli data16 xor daa pop lahf loop cmp or jb imul push inc fnop nop sub xor aas aaa ljmp jnp pop loopne stos jp push or adc adc mov cmp and add lock mov test in pop cmp in das notb xchg or pop je xchg sub push add out mov cmp cmpsl sbb dec cmp rclb shrl cmc pushf mov jmp sub dec jb jp dec fnstsw shrb stos pop sbb add lea push add mov clc ret mov in mov push stos mov sub into xchg xchg arpl and push icebp jbe jmp xchg inc adc (bad) sub mov mov imul lods je push xor movsb pop in pop subb inc test adc je call mov push popl and adcb adc jmp cmp scas jg xchg insl jmp int3 jmp xlat shr or jns repnz cmp andb dec cld adcl xor xchg sar lea imull jle lcall push and cli push and pop sahf stos jl xor pop js sarl xor mov pop inc adc cmpsb inc idivl inc cld stos xor xor stos xchg sbb ja sti or cmpsb or adc xor iret fwait cmc repnz scas outsl in icebp mov xchg sbb test rclb pushl daa das xor add xor adc and rep enter dec test sbb push gs cwtl push add mov inc enterw (bad) iret stc push insb roll mov jg push pop inc subb fisttpl mov or in nop push mov push rcll fadds jecxz lods mov stc test jecxz push ds xchg rol jmp cmp add dec xchg jnp cmpsl cmpsl rorl repnz add adc cmp icebp ljmp jg or and mov mov mov inc in add testb je xor push loop push sub arpl xchg addl int sbb das dec inc popa (bad) add push or test sbb out cmc add les outsb lds call jb sbb inc test les adc popa lods or mov add mov xor repz push mov adc mov dec mov and cltd sahf xor (bad) jmp std pop ret push ds hlt cmc loope out adc dec stos jge xchg mov add fmuls dec push movsl lret jno aas fdiv (bad) enter cmpsl adc xchg (bad) xor imul pop movsl bound sbb dec ja push sbb mov adc fnstcw fldl arpl mov sub (bad) into mov fwait jnp stc lcall mov mov arpl call nop into arpl cmp push or iret jle mov mov add cs iret push rcl and push lcall mov pinsrw lds add outsl dec or add insb ss pop fnstsw add and cwtl out fdiv xor cltd dec clc mov mov mov lea mov pop lea xor fcompl ljmp or inc dec or add push repnz insl imul push jle je out add lock mov inc add inc nop lret cmpsb imul or mov jp mov inc (bad) das repz fmuls fadd dec adc cmc mov push mov stos neg scas in jl stos xorl add pop cmp or leave push test ljmp mov faddl (bad) loop lods mov push in lea arpl jno jl pop mov lods cmp and inc push ficoml sbb add sbb xchg adc cmp outsl and add rcrl mov call les movsb pop push add xor jb inc das pushf lret aad hlt js flds inc mov push and mov aam out (bad) xchg and pop (bad) cmp fwait and mov nop ficoml sub dec mov ja in add mov inc (bad) arpl cmp push push sub jmp popa imul or add popa pop cmp push scas jnp std mov push fisttp ds (bad) xor or pop sub jns jb mov iret xchg xchg jge xor push or add das push push sbb dec std cwtl push lods outsb mov sbb (bad) xor (bad) aam imul mov mov jl jge,pn cwtl clc lods mov movsb bswap sub xchg scas das ss repnz nop adc or rcll nop popf xchg in add cmpsb stos mov mov pop out imul imulb jle jecxz inc fisubl mov inc dec jns fisttpll dec and adc imul cs lock add ret and outsl inc out lahf out xor sarl mov sbbl scas ret inc ds popf or xchg int3 loope cmp std xor and mov or pop xlat pop stos outsb jns loop aad lret insl out mov movsb aam jmp test cld fs xchg dec push loope add inc push pmulhw cwtl push in cmpsl (bad) sti pop loope or push mov daa out pusha stos (bad) out adc or mov in (bad) lock lcall jecxz popa stc sbb push aaa rcrb pop xchg inc pop mov iret ret imul iret inc cmpb push mov pop or xchg imul jl xor xchg es mov cmpsl stc inc scas popf lea test (bad) xor out jmp jle mov jnp add add int jle mov (bad) test int scas clc jge les cmp cmp push jp fs cmp aaa test dec xor add mov in inc inc add push inc pop adc mov js fsts mov ja pusha mov push and mov sub and pop dec jne inc (bad) pop cmp (bad) sub mov cmpsb sbb scas inc mov inc sahf stos dec daa adc insb mov (bad) mov shrb mov xchg cli mov cltd add lock in lods loop roll sub inc lret outsb sbb out outsb (bad) jno iret mov inc insb jno jl popf jae rol inc addr16 xlat xor add mov mov aaa bound jecxz xchg cwtl pop inc gs xor repnz into daa add stos shl sti out sub loop xchg add xor or ret add aam jno jl loopne cmp test add insb ret jns pop notb xchg sbb push push call and scas je pop cmp dec out and add cwtl push aad push mov push out ss mov lods call sub rcrl pusha inc rcll shl in js sub mov mov add repnz xchg push cltd or dec or mov jp mov shl icebp in lea lret mov xchg leave repnz or xchg sbb lea cmpsb repz xor (bad) jo fsub mov xchg mov push and push out dec fs sbb addb aad clc sbb and jae ret mov sub outsl xchg mov loope aad rol lods out mov leave xchg lahf shlb jg stos dec fildl int and mov fcmovb add movsl cmp (bad) in ljmp mov (bad) ljmp stos pushf dec sbb out xchg cmpsl out scas mov out xor mov ja cwtl (bad) push push (bad) fidivr out enter cmpsb out (bad) out sub cwtl outsl in aaa aam push push add std repz push ret scas jl mov sti adcl sarb jo cmc pop cmp mov dec in add sub sarl test inc daa and or ja cmp jp nop mov cmc imul or adc cwtl hlt out movsl in repnz rolb mov test dec jmp std jnp adc add mov popf cwtl mov popf adc mov mov mov loopne mov jo mov push and mov pop jnp mov testl call add jbe mov bnd xlat cmp mull or sub mov mov in loopw,pn pop sub rcr jne outsl dec fidiv cmc or pop pop and or add jge pop push cli or push lret pop xor and stc (bad) mov push into ss scas (bad) pop fisubr push sti shlb les pusha mov data16 lods lea aam sbb in jmp je cmc fistp psllq and xor sbb icebp frstor (bad) mov imul dec fnstsw mov les inc imul mov or sbb idivb arpl in xchg cmp mov push dec pushf neg call dec ret jp imul and stos inc in loop inc pop or in cmp rcl and xor fwait fwait or push jmp jg mov dec sbb pop jbe pop push inc lret je cmp mov push xchg or pop add std xchg add jg mov (bad) pop and push add in aad (bad) mov mov xchg sbb or fisub push push push pop stos or call pop mov cmpl loopne (bad) xchg push jl cmp sti fdivrp push xchg mov (bad) cli hlt mov stos es cmp pop xor jge add pshufw and xchg or xor lds sub int3 jmp cld push add mov es les and and fsubr jo inc push pushf sti mov js lahf insb add dec dec fnsave cmp or inc dec aaa outsl test mov xor in jno bnd xchg clc adc repnz mov and cmpsl fcompl test stos dec xor sbb nop addr16 lcall ds fnstsw mov or inc xor in out fwait jmp cmpsl mov out cmp scas and loop aad dec (bad) aas mov inc push (bad) push fs cli jae mov jg es and clc push loop test fs es pop and test scas ret cltd and pop xor fcmove jmp pop push or sbb push adc test into jae push loop inc pop push call push (bad) and addr16 cmpsb aam repnz sbb out push test mov mov mov insb imull (bad) call push stos cmp and or jne (bad) (bad) std data16 fsubl lea jne insl ss aad lods and pop jne sbb cmpsl dec push sbb (bad) xor loopne pushw push pusha orb neg sub add ss das cmpsl (bad) push iret push fadd or and and push lods and xchg int xor popf js pop jbe pop push dec pop adc int notb iret cmc pop pop and shl dec das ljmp loopne xorl rcll lahf jbe pop (bad) in out je mov and cmp adc (bad) test cld add imul xor les mov fnstsw cmc andl cld xor sbb sbb ss leave popf mov push or sub bound es lds dec out fiaddl cmp fwait sub cmp ficom pop xor sub mov push (bad) sbb jb cld and popl dec add inc addl adc ds bound sbb xor add push jmp sbb mov add xor not dec scas cmp lods inc mov and mov xchg mov pop in roll or icebp mov xchg scas ret test call cmp sub add mov mov fildll jb (bad) scas inc pop inc mov cmpsl jecxz sbb add jge jge pop movsl cmp inc dec jecxz mov fsubl dec cmp cmp insb pusha bound (bad) sti add arpl sbb bound loop add (bad) addr16 fnstsw xor mov add (bad) sbb imul cltd lret inc mov lret mov ss pop popa push jge xchg pop add sbb adc icebp pop repnz pop outsb jmp sub mov int3 xor add leave repnz xchg inc clc jbe mov xchg push or out cld pushf jmpw gs mov push es lock out and rcll cwtl daa loopne mov ret insb (bad) adc jne push inc mov pop dec (bad) repz cmp leave (bad) out mov mov pop lahf lret adc push hlt dec fucomip xchg sub xchg andps (bad) push aaa add stos inc jbe xor pop mov mov mov dec mov test shrb sub sbb lds cmc adc insl loop mov and gs mov (bad) enter xchg mov dec inc xor clc imul push and popa adc sbb test out mov pop dec jo repnz subl mov mov mov leave inc stc fmulp movsb dec sbb movsb jns or lods cmpsb sbb lahf pop xor cli f2xm1 adc call aaa aad dec xorl dec push dec add outsl popa (bad) insl (bad) repz pushf lret adc xor jno dec imul cmp inc jp adc repz rcrb cwtl fidivr jbe mov fwait pop add clc adc push jmp cmp fsubs fimull or xchg aad jp sub mov lods inc pop notb mov stos xchg jl das mov outsb dec push mov cmp fdivrl push out mov adc dec mov and sub ret test repnz insb pop lods popf imul fldenv and fistl gs cmpsb xlat push cmc imul jno in jbe mov jl mov fildl and shrl or dec lret in push pop push xchg inc lea dec push scas sub mov xchg lea repz hlt inc adc push (bad) sbb pop cmp jb add ja scas mov gs bound push mov std lea and jno jg repnz sub sbb (bad) inc lods mov mov clc std movntq lods pop gs test icebp jo insl fldenv loope repz ffreep out pop jne cwtl push sarb sar or add mov xchg mov test jo shrb imul cmp jp pop fcmovnbe and lods stos sti push jecxz and push pop xchg cmp add dec lea in inc nop std out push nop addr16 fabs or mov js xchg (bad) mov imul scas in test outsb add pushf lds dec out out cmp (bad) out dec lods jp jge jo ret pop mov pop and mov sbbl and jns loop ss sbb (bad) pop (bad) fistpll inc xchg mov add fnstsw xchg sub popa pop outsl push mov enter and inc mov mov jp std outsl mov imul sbb push aam shrb pop loope mov jo and xchg ljmp mov dec pushf lods xor jmp insb cld xor jns and push ret stos aas scas int3 jge cld sbb daa push lods lcall xor sub movsb dec or and std mov push sbb push loope sti repz mov push inc mov cmp mov push fsubl loope pop mov mov cmp jl adc inc inc xchg cltd ret jbe pop xor movsb cwtl insl push in mov ret cmp lahf jbe vpmullw cmp add out andb jecxz movsl fcoms into out push iret and ljmp mov push push imul frstor mov xchg scas inc cwtl (bad) inc lahf or mov mov push in in jno mov movsl mov and push fisubrl mov jae test call mov pop out add shlb out jns adc icebp mov push fs cmp push mov jne and inc xchg loopne cli (bad) ret push pop xor mov hlt iret pop jl cmp pusha xchg or frstor icebp mov nop pop imulb mov or mov (bad) jne loopne dec cmp sarl (bad) aas sub push xor hlt push dec mov pusha push (bad) movb inc (bad) test rcl (bad) mov push jg mov push repnz mov (bad) ds cmp jb sarl dec ja sarb test add xlat pop push mov ret daa sarl std ss lret push icebp pusha inc jmp sub sub cmpsl fs mov mov movsb mov clc clc je imul pop int3 inc clc std inc jb mov push loopne sbb push loopne push aas imul pop pushf dec daa enter push or fisubrl loop sbb pop out inc rolb lods jp out jbe rcll (bad) jbe negl xor ret jl dec dec add out cld xchg lods pop push xchg cmp stos lret xor popf ss mov xor rolb int scas les mov pop xchg push mov (bad) push inc je pop imul cmp mov fs fbld add cmp mov mov nop pushf xchg mov test inc cmp mov stos lds pop insl repz lret adc xor inc cld pop test int3 cs mov xchg or shll decl movsl sub or mov inc cmc mov ficom xor cmp aaa xchg push ret add and scas imul aad lods mov fsubs or loop lcall rorb dec pop sbb push xchg push nop sbb pop ss in fbstp mov jecxz push pop loopne (bad) arpl pop jl cmpb fwait inc push test push jmp jne mov cmp es jnp mov xchg in call imul mov or insl jo xor lock mov stos fldcw xor jno mov ret cmp and fistp sub imul cltd leave pop adcb daa jnp push lods xor add xor mov push dec cld mov adc sbb mov push repz not stc push rorb inc ror fnop sub add inc dec mov dec popa fnstcw add addb cmp push dec fcmovne or and or (bad) ss dec popf call (bad) iret out outsb mov dec insl pop into add ljmp mov inc jge add pop leave mov sub ss push aad sahf data16 push pusha cmc imul add mov pop mov mov jns mov cmp ret and fisubl jge pop jbe inc cmp pop jae mov sub add in int3 out sbb outsl out outsl fdiv test and (bad) sub popf lock arpl jb cmp stc scas fiadd es cmp lods es adc push and xor dec adc xor or sub repz ljmp sub scas ret add pushl mov ret mov jae mov enter dec fnstsw sarb mov hlt dec sub inc xchg jge jb dec inc sub and fisubl stos add ljmp test fstpl cvtps2pi jg jl xchg stos mov aaa inc imul fmulp jns inc sar pushf mov sub (bad) mov push push cmp rcl les ret jg sub add jg inc and xchg int3 pop (bad) xchg and lret xchg dec sbb hlt dec cmpsb push sub mov xchg push mov rclb xchg aad mov lods mov mov xor adc xchg push es sahf xor shrl add xchg data16 int3 sub mov mov fisubl and lret push cmc cmp adc in inc mov call sbb ljmp shrl into dec out xor cmp rorb fnop sub (bad) lret mov push por jae sub sub adc (bad) icebp dec cmp xor mov dec add in xor pop pushf mov mov shrb inc (bad) xchg mov mov cwtl dec cmp xor mov mov lcall lods in (bad) mov cmp in pop in sub mov test out mov stos dec popa (bad) into arpl jle je ds sub subl loopne lea xchg push es (bad) mov int3 out pop or movsb imul (bad) aam das shll std idivb or add (bad) mov popf cmp lock xor sbb out repz pop out popf hlt pop pop xor ret push les mov adc fstpl and adc rol pop test iret mov inc (bad) notl stos loopne loopne lods push jl mov pop inc pop fwait repnz (bad) dec xor push xchg arpl es pusha les add (bad) mov daa outsb cmp and push mov stc dec push cmp fmull cwtl fidivr mov ret inc int3 fdivrp in inc adc enter int3 jno out xor xchg cmp adc pusha jge imul test and pop cltd xchg call add in out sahf je sub jno mov adc ljmp xor xor jge (bad) or ss fldcw scas daa inc sub shrl in outsl jo dec xlat out (bad) scas add xchg imul inc lock (bad) pop in push gs push movsb (bad) mov lods jecxz test sbb or movsl repz xchg or xchg or mov mov arpl in adc mov aad and call scas aaa frstor jg pop or push std bound jmp pop dec pop cwtl aaa lea out outsb dec lods mov cmp add add xlat daa xchg aad outsb or iret sub sub sahf stos dec mov insb or mov dec adc das mov mov stos push into fwait mov xchg ret nop fs xor cmp mov push lea out add lds sbb add clc jp sbb and mov ljmp sbb outsb nop outsb pop and lds out lret and in lods sub dec or sub lods arpl xchg fsubs cmp or cltd mov test in inc fistp xchg lock sbb cmc lods mov orb cmp sqrtps test xor lods pusha xchg pop ret cmpsl mov mov in cs sar fldenv push xlat jp mov repz xchg subl dec mov and out and les fstpl xchg inc add xor inc jne repnz and and mov jb dec test or and dec add leave cmp scas test dec mov and sub sub scas popf test cmp dec fwait scas lret pop stos sbb cwtl jb jbe leave cmpsl (bad) mov pop mov mov es (bad) (bad) sti imul add clc inc idivl sbb mov fildl idivb roll fisttp fs push cs negb dec xchg loope lock jg cmc fiadd lods fisttpll jle mov pushl xor mov fisubr loope adc pop and insl mov mov xchg push into je push cmp mov and out test insl jne in pop movsl mov sbb arpl je std adc push jmp cmpsl jbe dec jg push adc scas xlat shrl xchg fildll pop (bad) aad scas cmp xchg ljmp addr16 fdiv ret mov cmpsb jno xchg mov scas imulb popf add or icebp mov adc pop and jae push imul (bad) cmp pop push push (bad) int3 fwait jecxz leave xor xor std dec pop sub fwait sub jb sbb decb frstor int cmpsb in sbb push jmp jp jmp jp lret and cmp jnp mov xor repz cltd fidivl int cs or nop (bad) cmp fcmovnb mov in sahf adc jae popl clc rcrb stc or in mov movsb sbb sahf push dec aas adc repnz mov in inc pushfw sbb out mov jo ror loop rcll mov stc repnz fildll out je lret push jnp shlb in movsb cmc dec mov add nop idiv pop and add xor int3 dec inc dec or or dec push push and mov xor inc pop fwait fwait stc sub movsb pop mov arpl pop (bad) pushf mov sub xor inc mov into inc lds bound cs repz jbe mov and cmp data16 insl sub in mov shr pushf sub xchg (bad) xchg sahf sbb and in push outsb jne mov pop and mov mov faddp (bad) cld arpl sub sub popf pop push in (bad) cld sti pop cmp call mov jbe mov pop inc lds mov pop pushf pop push fidivrl outsb out out scas and imul mov sub cltd scas xchg push rcr mov dec arpl rorb xchg xchg test cmp iret lcall fild sti or js leave or outsb adc pop or and xchg scas mov cmp xor lret mov push out gs or dec scas stos fild movsb ja inc cmp fstpt (bad) in sti sahf cld cmp je mov dec cld xchg nop push mov fsubrs data16 jae unpckhps cli popf mov lock nop and into popf sub and div mov test jno sub fsubrs mov pushf inc mov xor sahf mov mov loop push push pop jae loop inc repnz jecxz ljmp jle jecxz iret jae cmpl inc adc add xlat sbb xlat test cltd enter mov pop add lahf mov imul outsl inc cmp sar jle std and in push (bad) cmp jmp sub outsb xor or or fwait cmp icebp or dec mov insl mov push les arpl cmc loop add cmpsb int3 xchg in push and sub adc pop mov fdecstp (bad) jb or pop bound std xchg jl (bad) pop pop call inc (bad) sbb daa inc roll dec inc int cltd repnz adc pop mov mov jmp dec mov leave lock out mov fwait xor adc subl mov and and ficoml repnz idivl call in inc insb (bad) mov jne or movsb mov xor call stc fcmove insb cmp dec xchg or adc pop outsb sbb in in adc es in sbb mov and aad adc add jns mov dec mov divb mov in test adcb and adc inc lcall ja mov jo lock gs mov aad in adc dec sti fstpl cs pusha or sbb pop pop xchg pop mov xor xchg data16 subl mov add aaa popl in cmp jbe rcll outsl push mov fiaddl inc icebp test fwait inc in mov add sbb push ret imul pushf hlt movsl scas aad lea xchg (bad) mov mov xchg popf popa loopne cmpsb pop test aam dec sub xor test je outsl push hlt std lret jae fisttpl adc jno aad or ljmp xorb iret (bad) aad cmc lret xor movsl daa sahf and (bad) mov std inc xor jbe out arpl push xorb fsubr fnstcw xchg sbb inc stc or xchg (bad) inc dec (bad) in xchg push in jl push lret jae jbe repnz movaps push push test imul add dec xor loopne pop sbb cltd dec mov dec es testb adc add (bad) add jg sub pop and aas jp (bad) repz xchg lds xor xchg add setnp stos (bad) bound les sbb mov adc (bad) in lock xor out jnp add inc or lcall adc cli aam sbb jp ss lret movb nop fwait inc lds scas js lret xlat push sbb pop lahf inc jg int jp mov fnstcw pop sarb jae loop (bad) loope or pop and inc adc insb inc cmpsb inc lods or adc je repz cmp xor lods sub push aad out xchg daa int mov push cmp xchg xor test loope sbb cmp mov jge (bad) inc sbbl mov aam push aam ss mov add fmull bound xor push or push inc insl sar aad aas loopne (bad) divb xchg inc sar fldz xchg aad xchg divl push pop scas xchg mov mov sarl out divl cmc jne movhps movsl idivl cmp sbb xor ljmp addr16 fisttp push hlt lods push or mov test fsubp test insl (bad) and jno mov adc push scas sbb push cli sbb jecxz mov js roll out xchg push aaa dec movsl adc jnp hlt (bad) int ds icebp adc scas mov jl mov push stos add sbb add in lods sbb jb call push sti popf fisubl adc or dec enter xchg in sbb lret or or je loop cli inc ss sub push ja leave movsb scas pushf pop mov add pop mov out outsb jno jmp clc pop cwtl (bad) (bad) and jmp mov call das or (bad) jle dec aas sbb xor xor adc cmp adc (bad) jo xchg rcpps push pop mov or cmp or testb dec xor nop fwait call sub push iret inc mov sbb inc je insl lret imul (bad) xlat sub shlb xlat (bad) dec xchg repnz and jnp outsb idivb adc int jno popa dec scas repnz pop adc mov cli xor data16 adc adc je je lret mov xlat loopne push mov push sbb mov cmp rcr lret jl jp push mov adc insl xchg mov mov insb sahf mov pushf iret jp pop lret mov or sub push dec sarb mov daa mov insl les add outsb jbe loope ja fistpl inc xchg sbb inc inc lahf push fwait loope jnp jg sbb dec scas or mov jge jg dec xor bnd sti in pusha sar mov outsl test lahf movsb and lods push (bad) fistpl (bad) sbb xor aaa jmp inc add mov adc sahf sub mov xlat sbb pop std mov stc aaa jnp pop adc test (bad) mov es adc pop movb ror mov sub mov mov cmpsl rcl (bad) ljmp xor ret jmp sub xchg xlat rcl pop sbb cmpsb mov (bad) xor push ret ret add or pop fs xlat lds lahf sub add imul mov fistpll dec fwait (bad) push fwait dec jno cmp jle xchg pop int mov arpl sbb fnstenv pop lret nop cltd imul add cmp scas movsb rol dec pop push jle aas push into xor adc mov gs repz xchg cmpsb xchg and xchg (bad) ja stc addb sub in jl cli pop mov pushf push jp int push sbb aam add shrb cld adc out in jl lahf lods add or (bad) out (bad) cld lock int3 test popf int3 into cli iret fptan mov adc mov notb loope icebp or mov and out add arpl les or xor in sub lahf test in jp lods sbb lcall mov (bad) repz push out cmp aam daa xchg lret ret dec mov mov test in xchg cmp (bad) (bad) repz cmp cmp in xchg mov cmp aaa leave add dec mov cwtl mov fwait jae bound jb lea lods pop cmc sbb das clc pop sub shrb adc cmp test jae add mov mov sbb or mov inc lods push gs sbbl into scas jno imul xchg lea fsts sub outsb jnp push fiadd pop out int3 xlat dec mov sbb jbe and sbb notl pop (bad) ret jl pop mov iret (bad) outsw cltd fimull fstpt cmpsb hlt inc adc sbb pop adc jmp jbe dec adc (bad) dec jle jbe les leave jl shll jp sahf pop xlat inc wrmsr in sub push scas mov js xor (bad) scas mov xchg jno (bad) mov mov aas xchg push popf loop ret out cs push repz pop lea push mov xchg mov xchg xor xor adc add lcall push lods mov push repnz stos arpl push repz mov leave (bad) imul jno movsb jg jmp cmp ret mov addr16 or dec or repz fdivs pusha in scas adc and lods pop aas movsb fwait bound mov rcrb mov out xor fsubl adc sub lahf inc mov cld jbe jp addr16 dec inc outsl dec fcmovb gs dec jnp and lods mov xlat and xor or mov in mov pop ss pusha flds test mov mov jbe jmp push xchg cmp das jbe dec lahf xlat fildl sbb in lret ja les in dec pop pop addr16 in xor and add fldcw and push xchg lret and out aas (bad) cmp jo dec js pop iret div xor adc mov mov xor roll nopl cmp lret outsl test sbb cmc out out jp lods popa pop jmp push shrb jbe arpl cwtl popa in cli movsb and cmp mov lret inc adc and outsl mov orl fildl and and es lds cltd int3 cli xor add fild pusha adc xchg lds sbb clc mov sti std cwtl inc jle (bad) mov pusha push mov scas pop sub mov dec movsb cmp add jo adc out xchg adc mov xor jecxz leave addr16 mov jne mov clc dec and iret dec pop or and xchg cmp int3 pop decl repz xor insl inc mov or fdivl jecxz out loopne pop dec mov pop or repz mov popa jl adc jb lret sbbl movl jnp push fdivs mov je pop xchg lock and ss and push mov pop dec jnp sub dec mov pop push mov xchg pop fnsave adcb inc pop rorl mov int3 cmp sbb cmp jnp jo es call ret loopne or mov pop lea test je es sub (bad) pusha mov mov and add inc adc nop loopne test out fimull xlat ffree incb or mov aam lahf pop sbb pop cmp mov dec sbb sub push sbb xor je andb lds mov xchg imul sub test out sub push and in mov sbb lahf jb call int aam mov inc imul cmp dec pop imulb imul sub jl pop and insb adc (bad) xor mov xor ljmp jle pop cltd movsl push mov cltd jne xchg inc pushf mov fistl jno ljmp sbb rorl xor or dec popa pop xchg int3 mov xchg sub dec jb int popf mov hlt inc (bad) rcll push push and cmp jmp jae mov (bad) cmpsb pop add fistpl pushf and pop and mov xchg addr16 jno jo and jg mov sbb lock ja cmp loopne dec sbb leave adc jp fldcw out add imul pop insb xor addr16 and jmp cmp adc (bad) jmp loope xchg lock sub xor mov bound int xchg or or xchg sbb mov mov insl psrad in pushf repnz repnz mov pop test cs popf pop negb add ds cmpsb mov es mov enter inc outsl clc imul cmc popf (bad) out (bad) fmull loop mov rcr or sub outsb mov jb pop push jge cli rolb mov in int leave mov cmpsb add lds adc fisttpll loop popa repnz jecxz ds popf xor mov xchg inc mov leave imul pop mov cmpsl fcomp orl pop js push repnz lea sti stc lahf (bad) add cmc (bad) loop mov pop (bad) aas mov lock popf pop out je (bad) and jno cmp mov jmp fidivl repz add nop lcall and jbe popa stos arpl add repnz xor lods icebp mov inc xchg add into movsl fcos mov call rorb inc call dec in lret cmp xchg (bad) push pop dec arpl push test test sub jle push mov clc pop inc push xchg imul cmpsb xchg into fs xor sub test push and mov cmp push push daa mov test (bad) les mov mov cs stc and jge andps jmp cmp add jge pop mov clc loop shlb add cwtl push push cli test popa jl xor jp scas jne sbb jle test jns (bad) push push stos mov sbb cmp scas jns xor mov inc aam sbb adc or pop jl nop and and shlb and jg lcall out cmc jne ja rcl cmp test imul mov xchg sbb jecxz (bad) mov xor sbb dec aam jno mov mov jecxz sub rep sub jae imul jl mov xor stos aam pusha sti adc loopne sub (bad) notl sub mov stos lock dec test lea movl pop lea clc jbe adc out jge daa sbb xorl inc sub mov mov push (bad) mov or jae pop push out int sbb loopne jle lret inc and add push xchg push and sub addl stos dec fcomip fs idivl addb popf out dec divl sbb lcall clc sbb and loop jmp sbb pop dec mov movsb enter inc je dec pop jle out inc push insl pop js xchg shrb cwtl adc jno or dec js mov push rclb push insl out and xchg icebp inc mov xor and pop std mov dec addr16 lock insb insb out or mov jo mov xchg hlt popa or jecxz xchg xor push jbe mov jg lret add and mov test (bad) in test gs ds loop inc jge dec in pop ficomp clc mov fidivr and je cld sahf notl outsb sahf dec jle rcrl daa or out mov add mov or and pop push or jmp mov cs bound xorb cmpsl icebp cmpsl scas in push pop out cmovl subl sub (bad) adc call jb das lcall jns jg (bad) or out (bad) scas repnz mov fbstp (bad) jne or loop aad out pop in pusha xor pop outsl loopne aaa daa jnp adc shll ret mov jno adc jecxz fs sub and lcall ljmp xchg add jbe cpuid mov movsb lock mov push cld in adc int3 sar mov mov bound test stc and xchg push clc or push les jp leave adc (bad) (bad) sbb dec popf add jns fbstp push pop (bad) cmpsl dec sti mov pop sahf scas daa sub sub mov xor mov jmp fwait pop stos mov popw lcall repnz in data16 fsubs stos sub and outsl cltd adc clc cs and (bad) fs in iret jne jo ror mov mov aad xchg icebp sub dec pop mov sub jp fisttpl cmp gs sarl pushf popf inc out lret movsl push scas or mov popf sbb jmp mov add shlb sbb adc pop dec mov scas xor andl adcl sbb stos cmp or outsl sarb pop cs mov or lret loopne sbb xor jecxz pusha push mov gs or shlb lods sub lahf dec test cmp cmp cmc in hlt mov (bad) dec pop xchg mov in add xlat popa push fs inc inc pop outsb mov mov inc mov xchg mov push lea mov sbb mov xor xor les rcl pop pusha cmc aaa add cwtl mov dec sub test inc mov cmc xorl xchg jge rcl jecxz (bad) std mov dec and (bad) scas lock push jecxz leave jmp inc (bad) repz test mov jle xor xor repz cmc pop jnp sub mov call test mov clc in inc cmp jo (bad) icebp (bad) xchg (bad) and mov jae sbb rcll test pop push dec mov sub and and mov xchg loope rcrl xor or inc das lds mov mov push dec mov pop std lock lea mov mov sbb repz (bad) jge adc ja adc mov inc insl ret mov push mov xchg movsl cs mov loope lret and or jg lahf sub lahf pop cmp sub xchg imul jbe es int3 jo or mov xor inc sbb mov pop insl aad lcall icebp jno gs dec out pop mov test (bad) aad xchg pop pushl nop mov aas testl pop (bad) push inc lret pop push sbb cmpsl mov pop sub outsl movsb fcompl sub push cmp jnp aas sbb xchg mov loopw lods inc sahf fisubr (bad) (bad) iret icebp iret movsb or inc inc dec jg and aaa inc negl jne and iret sub (bad) xor ficompl pop xor inc arpl rcrl test pop jmp push mov clc push out add daa gs movsb jo cmp and (bad) ja lock push cmp mulb cmp stos incb into shll or fsubrs adc sti push cmp mov pop je arpl inc aas xor mov out test mov sub sub jge hlt add leave add and ret xchg out rcll test fwait mov (bad) mov sub ljmp inc pushf ss sbb ret (bad) fst (bad) je jle xchg dec popa (bad) aas ror gs js add icebp mov jno sbb js add fwait push xlat adc fisubrl inc (bad) ja addr16 test (bad) mov and mov cltd fcoml xchg fistl neg adc jne sub xchg lods mov fcom out sbbb out imul mov rcll pop loope ficom cltd and cmp arpl xorl cmp sahf aas push fbld (bad) fimull scas xor jge sbb inc and je push fild jae add andl in add clc gs xchg insb loope push cmp and in cmpsb inc mulb dec cli arpl mov sub int rclb gs stc jle (bad) mov loopne xchg repz pop dec lahf inc or adc mov insb ja pop lods (bad) mov inc (bad) push ds cld sahf jmp mov inc pop fildll ds cmc pusha xchg adc xchg adc mov rcl jne jl pop pop add dec pusha jg xchg push orb inc cmp ja loop,pn js mov sub adc pop into sti mov push mov sahf (bad) emms push mov cwtl or dec mov and mov inc dec and or xor jp mov xchg lds outsb push inc add dec in (bad) ljmp inc cld scas popf js test and pop add popa sub cld cmove jne subl pop mov adc movsb push xchg js mov arpl jno sarb lods (bad) aas movsl mov xor dec inc repnz xchg arpl rcll loop in aas outsb sbb jp pop push push loopne mov mov cwtl add inc or mov cltd mov in adc and int into ja and (bad) les mov shll dec sbb inc push jo and fstl insb daa xor rcrb ret inc psubq loopne and (bad) pop fldenv popf pop out jns cmp rcl fildll mov (bad) jp or mov mov xor (bad) push and fs (bad) cli mov ljmp and cltd push stos pop inc push mov enter lods sbb push imul sbb das dec std (bad) cmc inc popa jae fnstcw fadds jle (bad) jl sub fsts inc repz xor popa sbb sub sbb dec nop div inc push fwait pop out scas movb sbb mov ret xchg mov mov push ret inc mov shrb inc add test pusha push in out mov (bad) jg pop jmp fldl aas out or popa jl repz xchg imul push add mov scas jl fidivl cmp add cli outsb mov cmp fcomps mov incl add pop enter cmpsl pop xchg icebp call inc or test cmp push dec aaa scas dec sar push sbb jl iret fisttp mov sub inc jle lret mov inc stc aaa hlt dec push in dec scas addr16 fs outsb push stc in mov aad mov lea jl inc mov adc roll pop in and mov mov mov sahf lock movsb jnp xor shll mov repnz leave and mov std add jbe push jle sub out xchg inc nop push lods std sbbb ljmp inc test (bad) cmp push sbb mov mov mov pop sub dec test scas fidivrl es (bad) mov pop loop dec aam add aam ja xchg insb adc sub je frstpm(287 add fadd jl into mov jg data16 push push cs shll xlat hlt jno test lret xchg (bad) ret jne pop mov xchg push sbb ljmp ja negl test es dec pop cmp mov adc add sbb mov push add lcall (bad) mov es std jnp and mov les adc les mov cmpsl adcl push frstor ljmp addr16 in xchg in fistpl stos stos jbe mov xchg cmp out lret roll mov mov cmp js ret out test lock outsb add repz xor jecxz sahf stos mov std dec je jge imul cmp insb cmp imul fsubrl dec sbb sahf dec mov cs loopne out xchg movsl mov ds pop mov sti popf adc lcall xchg int3 dec dec fdivl adc pop mov adc jp adc (bad) jecxz or push jbe jne inc scas in xchg fsubr jnp (bad) dec adc scas ror mov xchg cwtl adc pop lret push jge dec loop mov mov sbb lods out lret in pop sub loope sub xor mull (bad) or ds jl pop (bad) and add dec mov (bad) or (bad) xlat in pop mov cmp clc rorb add movsl adc mov shrb jae xor mov push jae sbbl xor or xchg mov inc xchg popf sbbl and inc test mov les rolb sub lea jle neg lock jo pop pop pop xor arpl jg xchg shll jl ret cmpsl (bad) jg,pt fiadd in xor cwtl xchg call adc jl mov inc pop push add insb cmp jmp int3 enter int inc test out mov lret add or fsubs scas inc jnp out pop imul ret or leave sbb ss sub outsl adc lds inc hlt pop inc jne,pn push arpl fwait mov cmp push mov daa cmp add lcall and fbstp push pop sahf test popa mov and enter stc mov jle pop (bad) loop loopne xor lcall sbb shll mov sbb call (bad) or loop pop mov xchg dec imul xor jmp mov fsubs push sub or outsb sbb je dec lods jo cld pop pusha rep push mov mov and jne stos je lock pop (bad) ficom lods nop mull and int3 pop or sbb mov loop sti cwtl fidivrl adc test pop cmp lret mov stos std and fdivs push sub mov pusha data16 jle aad and mov adc xorl mov dec add iret iret mov xchg stos or pop push xor movsb fildll insb xchg push in popf ret jne xor jl xchg mov repnz add fcmovb popf mov xchg sub fbstp test jbe jg pop add pop movsb push das and ss cli cmpsl push mov and push repnz cmp adc inc xlat popl insb push seta mov pushf mov mov xchg cmc dec cmpsl add xor jb sub nop imul or and ljmp or in sbb cld repnz pusha jl (bad) adc xchg jae mov (bad) cmc stos inc jl cmp lock stos (bad) mov inc lods xor lds pop es fiadd inc sub flds inc test in icebp aad (bad) incb jb xchg arpl and dec mov (bad) lret inc sbb stc mov adcb lock jae inc mov data16 je das fldl mov call lcall ljmp fstpl dec (bad) and lcall aas outsb mov pushf gs mov dec or lods in sub fcmovnbe mov adc cltd lret xchg add pop dec push or ret lock clc pop fsts lret mov gs or fistp rcrl add mov push jne pop test dec in call inc je lds (bad) xor dec das sbb mov mov hlt and scas std or outsb jno imul outsb inc add int imul jbe push add test sub mov adc jle mov xor test push xor pop dec jecxz adc (bad) ret jecxz das jp inc lcall jmp dec cmp mov sub out je hlt mov xor mov push xchg mov std pop adc mov ret add inc mov ret ljmp add mov jae popa push add stos mov pop xor dec xor xor adc inc lret inc sti pop mov pop xchg es (bad) pop xor pop pop pop jnp fs pop adc or cmp imul out xchg (bad) push sub and out test mov in push adc into sbb popa pop js add mov xor jno adc lret daa push cmp inc lds (bad) bt inc dec xorl xchg daa jo std cmp sahf addb fs ds mov mov dec or and sub push push xor push jne leave hlt jbe adc xchg (bad) push push push or adc mov out test int and fsubl pop movsl jecxz mov jns in loopne mov iret mov imul addl push lock in pop lahf push cmp fwait push jbe mov fimul (bad) lods nop xchg mov xchg or mov out out mov fildl dec scas mov (bad) aad add and mov sub xchg out dec jle mov fisttp sub (bad) cmovle xor mov cmc sub or push inc adc leave pop jp xchg mov shlb aaa xor cmp sbb scas add sbb push ljmp hlt movd pop pop in dec push add and pop jmp fistp hlt cmp add mov or or mov imul dec jo ret pop (bad) push daa outsb push mov sahf jge pop in jno bound push pop or call mov in sti cltd sub mov dec adc repz es (bad) bnd jno fstpt xor add dec (bad) fild sub aam cs add test or mov sarb jg mov jl rcr pop sbb mov iret dec outsb out push les mov mov pop xchg or call test pop mov je lea mov mov icebp or adc cmpsb dec pusha jae in xchg push pop aaa ret xor bound je push lods and sbb xor mov in movsl sbb out push fwait int adc pushf push cmp mov mov mov imul fs pop mov cwtl clc add test daa adc xor ret ret pop pop fnstsw insb test xchg lds and inc or rcrb mov or dec cmc icebp xchg mov fidivl dec shrl mov mov (bad) ljmp das push call test (bad) enter inc add push es jmp adc cmp sbb xor inc dec and mov and insl inc mov mov cltd dec dec xor or arpl aas testl mov push cmp ds lret jmp jae cli (bad) jmp pop loopne inc popf jne jp cmp andb (bad) xchg cmp popf sbb mov aad jns mov sar jno mov or in dec imul fistp mov dec mov rorl negb and mov cmpsb inc mov or push iret push sbb cmp nop add sub cli hlt jno xor fadds movsb and add daa xor pop push cmp mov imul dec lahf mov inc pop nop aaa xchg movsl call loope ljmp mov cld push pop enter lea pop adc mov adc das mov mov (bad) popl sub icebp loopne jb cld insl stos js movsl mov sbb sub push (bad) and cli cld sbb dec push clc aam sub je mov xchg jo mov pop popf cmpb enter sbb sub add inc shr dec addl jo xchg xor pop movsb inc (bad) adc orb sub inc aaa sub pop lret ds add push xor fistpll int3 (bad) aad mov stos aaa push std jl movsb mov mov cmp sub mov fs jle leave adc pop xor ds jo neg pop push test sbb jg xchg je cltd js pushf mov sub push ficompl inc add and stos adc add pushl mov inc das gs and pop test xchg xchg fnstsw out sbb dec mov lcall xchg adc jbe pop sbb add rcrl nop add ds leave loop add jno inc xor jns dec jl xor inc pop daa clc popa lea and jb in daa push es xor dec test lret out mov (bad) jnp xor mov xchg adc adc data16 add or cmp icebp pop test mov or pop xor mov sub hlt and rorb cwtl dec xchg int daa leave dec enter xchg pushf pop or movsl pop sub inc mov (bad) aas lds pop add in roll dec cmp dec mov inc jl insl jbe dec sub test pop push dec jns (bad) push sar cmp jb lock push sub xlat jb andl (bad) not aaa jecxz push dec fnstcw in ret das mov add adc int jns dec jle jl xor in dec popa cs push leave push fwait pop das (bad) cmc rolb int pop in cmp (bad) mov xchg movsl mov in call inc push (bad) insl popa (bad) ss sub push rol sahf and inc add cmpsl xor enter out sbb jmp das xchg pop pop movsb lahf dec scas cs loope loopne cmpsb push mov aaa loop ja dec or enter mov jmp shrb aaa xchg pop repz and mov mov mov push repnz lds and mov out mov enter leave add jne push jb inc dec in inc xchg sub cmp push xor dec rorb push jne fsubrs jge inc mov sbb je add mov rclb push adc popf das out (bad) xchg add push sbb add scas das jmp pop xchg mov lahf insl es out mov xchg xchg scas sbb and clc shlb cld rolb push sbb not jl std ljmp mov sahf (bad) lret out xor (bad) mov ret sub movsl and test dec xchg addr16 loope add fistp mov js pop rcll fsubrp push inc icebp jle xchg (bad) or loopne sarb jge in bound inc sarb jae lcall imul enter ss mov sub push icebp or mov adc stc lds sbb lahf or jl aad mov jns sub jo mull bound lret pop jg push pop push fwait add pop addr16 movsb xchg and (bad) int into xlat or movsb clc xor jge add in arpl adc (bad) lea and sub test jne dec jge add test sbb dec sahf push (bad) cmp lret fistp push add lahf push and ljmp jl mov clc push xor imulb push outsl pushf sbb add mov push lahf addl imul leave daa pop subb mov pop cmpsl push in lret aam sti cs adc popf mov test xor nop push jo pop xlat xor (bad) gs pop sbb adc pop jo sub icebp mov xchg stos adc and hlt and nop out and ljmp lea add dec sbb xor mov add fmuls push adc cmpsb jbe xchg fimull mov cltd fwait dec jl aam push pop enter lcall adc push xor add mov lea loop jo xor (bad) aam (bad) (bad) divps mov popa mov mov xor or (bad) mov fdiv add out add and mov lock xlat dec xlat fnstsw inc out mov inc test fsubrs ljmp pop leave rorl lret mov add lods in (bad) hlt adc imul sub fs and in cwtl mov inc add mov call enter xor add jnp int ljmp xor imul xor sidtl mov stos xchg sbb jo cmp sub mov and sbb cli test xchg scas dec jmp sub jl test shlb add lahf add jg popa iret sahf xor das jnp fmuls xchg jae cwtl sub or into jne hlt (bad) loope test pop iret mov xchg jl sbb insb mov test pop out mov or mov mov roll data16 add add mov in jno sub repnz shlb sbb sbb mov mov inc testb and lret jle cmp and mov lea mov inc mov xlat test ljmp inc cmp xchg mov dec add jns xor imul jmp mov mov (bad) jns out dec mov pushl mov roll jle add (bad) or xchg mov inc pusha mov dec inc cmp lahf loopne sbb lea daa out add adc mov inc mov mov and jge popa arpl push adc push lea push xor cmpsl aam mov ret mov add test push push repnz lret or jbe (bad) pop or fbstp (bad) (bad) stc jae push mov add fdivl dec xchg in cmp jmp shll arpl lret jecxz xchg scas dec das lret call dec sbb pop jmp adc push push pop sub or sub xchg push xor lret cmp ficom push je mov xchg push in mov inc cs cmp insb xchg dec cmp sub jp mov imul stos and or ss dec clc mov ljmp pop loope and (bad) mov jns and adc or add and scas xchg pop (bad) push into mov repnz inc movsl rolb lea cmp shlb dec push jg sbb cmpsl mov test out (bad) push stos in inc jle cmc stc fucomi into push lds mov xor inc push leave es shrb loope sbb aad ja adc sub and mov push sub mov aam pop xchg cmp fimul or outsl scas fsubl mov jg fcom cltd jmp out dec lret les outsb push or adc enter or pop fimul jg subl or mov test jae ret aaa das sahf std xor (bad) xchg mov imul mov mov popa jnp,pt in xchg sahf leave (bad) icebp aam mov je pop inc add or sbb cmp or mov movsl outsb dec push mov ljmp sbb dec dec dec adc sub pop test ret mov mov jae mov nop mov cmpsb xor add add and loope fs cwtl cmp jecxz adc add in sub nop sub pop jns fisubr rolb scas cmpsl sub and inc iret and lds cmp dec push lcall pop repz out enter cmp mov hlt int insb cltd (bad) sub bound xor push sub dec push fs pop jo sub pop jae xor inc or pop ds notl (bad) nop push xchg sub push pop ja sbb adc push pmulhw xchg je mov jbe shr in leave mov sti xchg fmull adc aas mov or jb push (bad) (bad) pop aas in (bad) push aad clc (bad) pop repnz sbb div mov test mov push cmpsb xorl and insl ret sbb mov js mov sti mov pop repnz mov cwtl lret outsl fsts or adc aaa popa xchg repz jb push in ja pop shrd cmp stos mov cmc fisttpl mov pop adc dec insb or cmpsb add push adc fisttpll test mov decb scas inc aad loope rol mov cmp je shll loopne test sbb mov xor scas dec (bad) cmc push stc push andl rclb je add mov or push and or adc mov or lds or push dec dec add jg mov jge dec mov cwtl popf push cmpsl inc fmul (bad) shlb jmp cmp mov iret mov les ss scas mov sbb pop bound mov movsb sbb mov cmp in adc fs out xor ss pop fild cmp das or fsubl std movsb ja adc loop (bad) cmp repz out mov jo or add test inc push es mov push stos xchg push mov ficom fcoms in paddusw imul sub adc xchg jnp xchg mov dec and adc out lcall scas and push push xor xlat lahf sbb push or andb sbb push (bad) call lret xorl das dec dec jne sbb xchg or lock jg jne mov daa popf sub jmp push xchg pop js jo outsl into sub cmpsl outsb inc mov adc gs mov popa cld mov data16 mov iret push fcompl int3 xchg popa sarb mov icebp mov xchg mov imul fcomi leave es pop dec mov stos rorb dec popf stos push addl hlt cmp lret dec imul in inc sbb insb sbb sahf sbb mov scas jno mov sahf sbb push jae (bad) ss mov aaa mov out rcrb insb mov and lahf ds imul mov pop xchg add mov push and mov push mov xor imul cld lds mov popf jg jl stc sub add cmc fxtract ja mov sti out lock (bad) mov push pop dec hlt daa fisubl mov fstps fwait xchg fisttp out adc cmp test fidiv xchg ds test jo xchg add (bad) in add sti std repz fs int (bad) and and inc pop pop and shll jge adc popf or clc test ss jg inc xchg mov mov imul jge and xor or ret add xor mov arpl xor push out add pop scas mul lods inc push adc imul pop push imul mov xchg jg dec sub daa push pop (bad) daa lea mov ljmp rorb jns push ja ja ss clc mov add andl dec enter insb test xlat popf xchg xor rorb cmp or les mov xchg push inc ret jae jbe je cmp xor movsbl aam xchg mov pop pushf mov dec xchg repz daa daa in and loope jecxz xchg dec int3 bound jne mov xchg js mov lret sub jns sub xchg or mov lahf xchg dec gs icebp in xor sarl push into scas cs mov mov stos int3 jge movl shll pusha add fist shrb pop jb pop cli lods loop and adc mov mov xor (bad) mov sbb std das pop ret scas into push outsb cmp (bad) mov mov loopne cld inc pop ss and iret jle dec pusha and lret and scas mov mov mov (bad) push in imul bound lret push pop lcall stos mov xchg outsl cmp imul inc dec loope mov mov in pop jo fnop jne rcrl (bad) cs dec add jnp sbb jb ja outsb ficompl xor test xchg mov addr16 mov shr and xlat and ret movaps adc sbb pop xchg test dec sub in aas shll and mov lret cmp mov cltd dec (bad) mov adc insl dec outsl add adc mov aad pop mov adc outsl ficoml insl lret mov jmp lds in aas xchg xchg jmp pop sahf cmc cli mov add mov or scas in or adc insb mov clc and cltd mov clc dec hlt in xchg (bad) (bad) fcmovbe push inc lods lods xchg jnp adc scas add adc push ja rorb mov daa flds lods push jbe jge cli xchg dec pushaw pop mov gs lods adcb pop icebp orb mov loopne mov je sub sbb or (bad) push pop mov lods pop mov lret std pushf mov add in xchg mov ret (bad) lock xchg and movsb loopne (bad) std and inc pushf xchg inc pop incl sarl (bad) out out (bad) into into cmpsb lock (bad) inc jl inc pop mov addb adc mov sub into mov push cmpsl add push rolb fsubs adc jg and fist and int pop fistl push fdivp and stos dec test pop mov jb push xor add jecxz icebp aad pop imul mov gs sub repz sarl and jp pop lods inc or inc push dec lahf idivb and in stos xchg les mov xchg or mov icebp pop fdiv cmp arpl in xor cwtl xor xor int3 push adc cmp pop cmp fwait je lds frstor mov imul mov push fprem1 push sub jnp les inc jg jns jmp adc adc adc xchg dec lcall out jae jnp pop push sbb xor out imul mov add cmp fs fdivrs fistpl arpl mov push int3 add mov lahf inc pop add adc mov pushf je scas test test mov lahf mov xor sti mov cmp pop cmp adc mov jecxz sbb mov test in (bad) test ret add mov jecxz dec dec dec and or sub (bad) xor mov in fwait pop inc divb (bad) cwtl (bad) jno mov pusha mov fsts sarb inc sbb rorb lock dec push cld push xchg pop stos jg jbe sbb repnz and push out or outsl (bad) repnz or add mov mov ss dec sub ljmp (bad) lret dec neg mov jmp adc (bad) std adc lods xor cmp scas and inc leave into xchg jo movb and fdivr pop imul fild (bad) sarb mov sbb in outsl repz loop stc insl lods xor inc mov shr push xor adc pop sub in xchg jbe fcmovne sub xchg or jne jle mov outsl push neg daa push cmpsb and adc mov sub rorb lock xchg mov (bad) lret xchg push mov or inc mov fistpll lock push sbb pop scas mov push lret dec cmp pop mov popa sbb xchg cmpsl push stos xor sti cld and pop jmp cmp fsub dec dec xchg sar pop shlb idiv pop mov add sbbl int3 fistp js jnp das pop icebp xor dec sbb xor into inc scas push nop inc loopne jns imul jg lods xchg mov pop (bad) hlt in push mov inc and xor js repz jb mov pop sti add xor stos pop and push push stos add jl sub mov shlb (bad) outsb lods jne call mov pop push pop leave mov cmpsb (bad) dec sbb movsl xor pop ret lahf imul cmp pop xlat add cmp test pop ja sub xchg ret ja sbb lret fninit mov jbe sbb jge bound inc xchg out mov jae stos in enter pushf sahf in aas mov rolb lahf in mov mov jb es push test push inc pop (bad) loope xor pop scas push hlt xchg shl (bad) jp dec pop lcall sub xor fcoml leave pop scas pop inc mov insb fldt (bad) or lret aam (bad) movl fucomip pop sbb push push jno xor (bad) out push call test xchg jg leave dec movsb (bad) lock push dec adc movsb add adc sub mov (bad) lret sub out inc stos cmp js pop movsl pushf xchg gs push xchg (bad) dec jne sbb sbb cltd cld insb cwtl and lcall add pop sub mov jb sahf ljmp pop cwtl and std ret cwtl xchg xor pop std pop push pop mov push ret mov mov insl and xor cmp inc cmc out fiaddl stos pop xchg xrelease out in fidiv stc inc leave adc pop stos cmpsl mov dec ja sbb lret adc lods adc fwait xor in inc xchg or xchg jno cmp mov data16 (bad) sub dec xchg sarb xchg mov xor push xchg and lret adc test adc cmp in stos cmp sahf xchg sti cwtl cs sbb or xor push mov and test jmp jp add push pop decb stos push adc inc xor jns je xchg pop mov mov mov test fsubrs mov push jo add sub ja enter mov (bad) cmc jmp mov xor test lea and mov bound js inc sbbl cmp bound flds pusha or pop dec in mov lea inc lahf imul neg fist jnp bound xlat insl or xchg lods and loop dec aam mov jo subl out pop leave dec cmp xor mov push popa das mov cmp cmp adc stc test (bad) stc es ret push push sbb or sbb mov hlt aad fldl jne icebp mov mov dec insl xchg mov cmpsb cmp sbb call int3 cwtl add sahf daa mov out cltd les cltd xchg out sbb fisubrl add push pop sbb jg int3 jb pop dec arpl ror and cld movsl shrb xchg jb sahf ret xor inc lahf adc pop jmp aam push rcrb push pusha cmp std jg push fldt (bad) adc lods or stos addl add stc and and add inc (bad) leave fs imul repnz sahf sub pop aas xor data16 add pop test push je mov jle sub test inc ror daa (bad) pop mov mov stc jge movsl xor js stos enter inc ret pop int dec inc test push cmp sub vmovlhps clc scas daa xchg mov cmc inc data16 pop (bad) adc pop cltd sti imul cmpsl jne sub cmc mov hlt cmp mov mov cs push (bad) or arpl push rol test arpl mov rol xchg (bad) dec xor pop cmpsl stos inc or mov jnp xchg je fs inc xchg (bad) icebp leave loop pop adc lret scas mov clc push adc jle ljmp negb push push es push fwait (bad) std jg jnp jno arpl aas mov out jecxz push dec mov loopne jnp dec ficoml insl pop inc mov pop loopne outsl test jbe mov adc loop out push cmc ret jl push (bad) mull (bad) mov adc jns xor xchg clc push dec (bad) add bound lret das scas inc mov sarb insl mov adc or test jge imul jns in sub in mov push scas sub (bad) mov movsb dec add cwtl int3 outsl mov repnz test mov mov aaa iret (bad) clc xlat outsb lahf and xchg (bad) mov jno dec jg cwtl loop pop mov cmpsb inc js lods xchg gs push or add cmp cltd and push popa dec into push fild mov and cmpsl push lcall pop mov sahf in leave call inc xchg and adc push call and push add ss xchg sbb (bad) and pop cmc dec lcall mov stos aad mov ret fstpt mov shlb lock mov push jns jbe cmp pop icebp out jecxz sarl in fiadd fisubl push addr16 mov jns or sahf inc lock xchg sub jnp inc sbb gs fiaddl or popf popa sbb ljmp rcr test add pop adc jae mov mov hlt dec int3 fistpll jl dec jne pop test mov xorl jmp xor adc popa maxps ja cld mov ficom or push cli pop repz xor movsl neg test xor push incl mov sub dec inc test xchg push icebp jbe xchg push ret inc jmp dec adcb std sub scas and add lods inc daa loopne xlat dec call push bnd call imul inc inc (bad) dec jnp les pop outsl fistpl (bad) repnz add fstpl je sbb xor jb in push loopne and sar xor push jae je jbe leave sbb jne mov xchg shr pop cltd lods call in andps test pop pop idivl jmp mov cmp sub xchg and add push cmc outsl das loopne and inc xchg xor nop loop lahf lods fisttpl adc inc jb xchg inc scas mov push xchg pop lock cmp jbe (bad) out and mov aad jns xchg jo xor cmp loop divb xchg out stos pop icebp das xchg test push pop incl popf jmp push (bad) ljmp bound mov ret fldt pop adc imull inc jl push das ficom outsl mov sbb clc cwtl pop adc cmp stc aaa repnz push loope jle pop lret xchg dec jbe jmp pushf mov push shrb mov or mov fildl scas lcall inc rclb pop pop in movsb add mov int3 and cmpsb xchg rcll fyl2x fnstcw xlat mov jo push jb add cwtl cmp rolb scas (bad) icebp or jg clc std mov setp and (bad) push stos cs xchg mov xor cmp jbe ljmp cs dec ljmp mov cmpsb push inc xor or fmuls mov jecxz (bad) adc xor enter jg pop jno out xor scas jb and (bad) xchg jp mov xor jae fsts add mov pop incb js xor push and cmp aam cli test pop dec mov in lock mov scas cmp shlb mov and stos xorb push test lds add or jge and add dec and fadd jae push das adc jecxz cmpsb mov stos mov add aam adc inc cmp adc and lods mov mov jge sbb hlt jp repz pop sub xchg xlat popa sar xor mov fsubrl cmc jb stos loope jl rcpps fstl pop mov and cmp jb imul les or mov mov fs sbb cmp add adc push fsubr rol (bad) daa insl pop pop push fildll cmp mov ret sbb in loop dec add cwtl pop fistpl out rorl push inc and mov ret test pushl pushl sarl adc pop pop lock enter jb pop adc jb sbb jnp sbb adcl lods popa xor xor push inc mov inc dec sub fistpll lds cmp (bad) ret call xchg out testb addr16 out push mov stos push orl pusha xor mov dec jo mov inc int lds mov mov sbb mov inc lds das pop mov mov dec push mov jb sarb aaa sbb add xchg ja and rcll (bad) xor mov xchg sub and sub push dec cli push push cmpsb sub sbb fistpll mov ljmp pop inc outsl mov mov cld mov xor jno ret adc (bad) (bad) sbb daa fisttp fwait mov nop aad push mov mov push xor cmp cltd pusha lret stc add fwait sbb mov loop and mov int3 mov fwait push push insb sbb xchg into in mov pop lahf jmp sbb dec inc leave sub cmp and jp mov push in mov inc test les (bad) lret push cmp fldl jns xorl sub into and adc cs add add lods movsl push sbb push cld xchg ret cmp inc and push mov sub cwtl jo push jecxz mov push pop mov mov and pop (bad) in xchg jg adc std aas loopne xor mov push jne mov faddp xor mov pop mov push pop cmp imul pushf es sub mov test dec hlt dec mov add pop pushf frstor pusha sti out inc sbb pop or or pop dec xchg sbb sub adc imul scas mov inc pop mov xor stos call adc pop push mov rol mov and cmp mov mov sub or sub and add xor std mov push testl imul je dec pop xor out mov insb adc cmp mov xchg dec addr16 xor das rclb repnz mov cmp push pop push mov ss adc popa scas jne jno jle fdivp cmp shr int3 adc mov push mov incl repnz add xor xchg popf cmpl cmc stc enter sbb jp insb inc xchg xlat jmp adc iret jbe icebp stc stos loop enter int3 aad inc cmc or pop mov test xor cmp daa in or sub cli call mov aam rorb ret add gs les in mov lahf stos cmp xor mov jae ds push movsb lahf mov inc hlt push emms insb (bad) cli scas mov xchg mov add xchg enter pop dec jl out xchg xor jmp mov sbb test inc mov mov mov out and mov adc sub lds es call pop into aas mov clc or sub daa xchg js dec jb (bad) aaa inc loopne (bad) jno jo jne ret push sub iret or xchg in sbb pop ja aad mov aas add repz stc into jl mov cmp inc cmp xor imul adc push (bad) scas xchg ror lods jns gs popf addl mov (bad) pmullw adc outsb stc cmc scas cmpsb gs push pop lock jle stos es push test pushf mov sub daa mov jg add outsl jmp add mov jmp jb in into (bad) jae mov xchg rcll ret fstp mov lock out into jae dec sbbl in (bad) fstps adc out xor (bad) int3 andb jmp xor ljmp data16 (bad) hlt ficomp int3 mov lret push or notb insl ja hlt xor mov jecxz xor push stos sub add and adc dec addl iretw mov nop mov fnsave scas pop les fmul imul outsb int xchg mov inc sbb jbe mov adc pushf sbb imul enter arpl (bad) in jb pop jns mov jnp xor (bad) pop pop cli mov aad sbb pop inc jns lahf sbb or popf cmp mov jg in icebp mov and pop add fdivr mov jns mov xchg and mov cld xor pop xchg aas jmp test imul movaps test notb mov lcall popa jp jp rcrb jb lods mov lcall (bad) fisubrl in sti lock test mov mov mov dec xchg jle xor lahf repz aam imul stc leave insb add sub out mov jnp jnp test daa mov cwtl hlt leave sti repz mov mov stc into outsl push mov hlt xor rdtsc fwait push adc stos or jno repnz ss loope jns movsb cmpl push pop mov jnp insb cmp mov mov inc adc mov jp jae cltd xchg mov cwtl fidivr fs loopne sbb or sbb dec and inc and xor jp mov bound dec pop cmp insb xchg or sub (bad) fwait sbb fstpt or nop jecxz fnop mov (bad) cwtl mov cmp pop scas addb movsl sbb je mov push jbe out movb mov adc cmp movsb test sub push xlat gs add mov sbb pusha mov jno ja negl cld jne leave jne aad mov push mov sbb xor mov dec inc nop fadd adc sahf mov pop inc mov xor add movsl mov loopne sahf repz addr16 movsl scas mov jae int3 lcall fistpll insb movsb aaa gs shrl dec xor push std ljmp mov fldl stos jae cmp lock inc lods dec and xor aam inc jp movsl in (bad) int3 xchg cltd cmp test roll out push popa out mov adc arpl inc inc xchg cli mov stos push adc xlat out xchg lea lock lock ucomiss xchg movsl mov cmp or lods add aaa mov mov push inc cmpsb cmp dec test test lock jae sbb xor push inc insl sbb dec sbb lahf cmpsb lahf sbb cmp lahf pushf xor dec add jnp loope sti sahf daa mov xchg sub xchg pop mov jnp test push push or les cmc push or xor aam push les and push xchg clc dec (bad) dec loope push pop pop xchg xchg ficom sbb jle bound fwait add xor sub push in dec xchg jl mov inc cmp out jmp cmp mov (bad) scas pop pop cmp sahf lahf push das stc mov adc cld adc mov mov xchg pop xor cwtl push rcll xchg movsl pop (bad) cmp xchg cmp or loopne out (bad) mov jb cmp jno adc adc xchg mov jge repnz jl xor ret add out sbb pop data16 sub or aam ljmp insb leave or xchg jo fs into fistpll dec sahf pop xchg jns popa (bad) jmp xchg xor and mov pushf mov jmp pop push xor sub repnz adc sbb test mov mov adc push ret int3 pop fs mov dec push xor cmp jae adc dec dec fstl lcall mov add pop iret rorb add push sbb popa call cmp sbb mov test cmp adc sbb mov mov loop push jecxz int ret mov mov pop mov popf add aaa popa push add inc imul jge outsb hlt ret (bad) fiaddl add popf out adc inc xor mov mov dec xor fimull xor dec jns lods outsl call in push or (bad) leave (bad) cmp sub mov nop jae int xchg xlat dec cmpsl jb push int3 xchg or dec aam mov jp lock jnp xor shrl add gs sub hlt dec jecxz pop loope stos adc imull dec mov (bad) sub sahf cmp pop frstor pushf push cltd pop add out daa jl mov lds push outsl cmp pop les aad lcall sub loopne lds (bad) and cli pop in lcall loopne jbe fiadd js adc cwtl out fabs icebp scas shl cmc shll jno hlt stos aas (bad) lret xor push jp into imul push (bad) lret pop xchg cmpsb stos jg ljmp shr or xchg push fisttp arpl sub dec lock fcmovne call adc push xchg dec xchg fiaddl push rclb inc rorb out push rcrb mov sbb sbbl mov test or pop daa cltd cli pop je ds pop mov cmp jl cmc pusha outsb xor push fcomps pop and cmp inc (bad) out fistp adc dec pop sub jmp lock fldenv cmp hlt notl imul sbb les loopne mov enter and ljmp (bad) mov cmp mov dec addr16 and push push xor mov cwtl test push xchg jo adcl or xor (bad) xchg je das cmp movsl fisubl pusha ss cltd arpl push out iret sub push mov dec aaa mov dec inc imul xchg xchg push jns push or sarl insb dec lods (bad) jl and testb or mov std shl int3 xlat adc and pop int3 add lret mov sarl mov or sti inc mov pop or adc int3 sub pop jecxz sub xchg mov xor dec rcl or jecxz,pt out mov adc and jl in sbb (bad) hlt adc push pop into sub push ret mov rcr lds inc cmpsl (bad) push je jnp pushf iret push cs iret pusha mov xchg lahf mov cmpsl or xor mov int es sub add cmpsl or sbb out mov mov sbb scas pushf pop test or bound lret and mov enter mov mov call fist cld sbb sbb push mov mov adc js hlt test out jne test je rcr dec imul divb andl aaa loopne or jns mov (bad) fnsave xchg int3 mov sbb lods jno mov dec mov ljmp hlt sbb xor sahf movsl kunpckbw pop push xchg or lret lds je lahf fldt cs push addb enter lods aam ds xor in jo popa sub out sahf jb in cmp imul or push sub jno add scas ds (bad) cmp stos leave or sbb dec sbb in gs mov inc fsubs jbe adc rorb pushf lahf mov adc mov inc cmc and aam jo cmpsb repz mov fstl jb xchg add dec jae mov (bad) cmpsb jns lahf jne push and subb push (bad) xor iret dec jmp roll jle push (bad) sub mov pop mov ds repz dec sbb push icebp add shrb repz mov (bad) mov mov lea stos fcmovnbe fwait cmp cmpsl xor loopne inc stos sbb bt inc fsubrs out xchg cmp lcall (bad) rcll push xchg rcll xchg (bad) int lahf movsl in incl cmp xchg mov ficompl dec lret daa js jl bound test into xor out jmp xchg scas dec mov inc and push clc mov inc inc and xchg xor inc push sbb je push adc inc cld sbb scas je mov lahf dec (bad) xchg ja fsub jg stc fwait or pop ficompl adc aam xchg sub in and aas mov sub in rcr xchg addr16 pop push adc outsl or mov jp fnstcw mov mov (bad) hlt mov jmp sub out int3 dec icebp inc jp sub sbb adc dec push add mov insl and (bad) inc jbe mov loop jge nop xchg push sbb or test inc movsl negl push cmp movsl js pop xchg or lea sbb pop std imul jle pop hlt leave jp rcrb inc (bad) test mov dec add (bad) adc (bad) arpl mov push cld cld stc cwtl jne fcompl arpl ret popa je ret mov mov or test clc pop pop mov xchg mov test push gs mov sub push icebp xorps pop jo jge xchg pop mov adc lea bnd stc sarl es gs push or popl jg loopne out mov pop in bound (bad) outsl ja (bad) xchg push fistpl addr16 pop add or ficomp sahf jnp in xchg xor mov xor add push popa imul lahf call cmc mov fistpll jo push (bad) movl inc jecxz jmp mov push adc and lods and and (bad) cmp mov lods lds jl push ret fbstp enter or cli (bad) and push cld fwait pop mov xchg xchg (bad) sbbl adc mov mov xchg je and lds sbb fwait xor jle pop mov dec sbb divb repz xchg decb nop mov das dec (bad) inc repz xor pop inc xor (bad) pushf jbe stc jns push jle add lret or adc stc les push and (bad) leave mov cmc fs push pushf das outsb fbld xchg mov dec pop test inc mov xchg outsl push data16 addr16 xorl bound shrl mov aas (bad) lcall lcall or in mov pop xor inc call sub add xor mov pop inc pusha cmp mov sbb pop pop cld lods xor push sti scas and outsb pop jns cld loop test arpl fmuls cwtl mov xchg pop nop repz pop push (bad) clc mov sbb xor lret jns icebp add imul add arpl push dec aaa xor inc data16 pop mov out jae nop test mov call cmpsl xlat (bad) mov mov incb bound into in add call lcall jg jg shl pop idivl dec jns add out (bad) (bad) push adc cmp scas mov (bad) (bad) scas shlb sbb jle test (bad) push mov cld add (bad) repnz jnp mov sub inc cltd in ret sub mov push xlat inc jbe jp jge cmove test movsl scas pushf inc xchg fimul mov fs jge outsl loop cmpsb fs cmp inc inc int3 js shrb outsl cmp lcallw jl or dec and arpl stos lods jns decb gs xor inc sub lds imull out inc dec data16 add pop sub push mov jns adc jl mov call cmp sub dec pusha sbb leave aad test adc outsb sub stc mov or xor jg in pop test sahf arpl adc ret fidiv and jb push or popa test xchg sbb mov mov stos pop xchg int3 (bad) cmpsl repnz (bad) fmull test pop shrb mov mov cld fstpt rorl dec les push test sbb fistp xchg push (bad) movsb arpl mov push and pop fstpl mov push dec pop jo,pn stos xor sti cmp pop pop cltd jne jl mov (bad) int3 out movsb movsl or ret lock or outsl sti inc inc call adc mov int3 in add push movsl sub mov and popf dec scas jecxz daa imul (bad) add lock (bad) mov iret xor test out and inc mov and or push dec sbb jbe cwtl or adc (bad) std mov nop ficoml sub cmc out cmpsb fisttpl lds leave and dec inc inc mov jns pusha ss jg or imul cld dec mov clc cmp jbe sub xlat cmp pushl push mov add imul aad xchg out fbstp movsb pop (bad) cwtl gs nop xor stos sti add push push mov mov mov push nop daa test pop sbb insl cli pop popf and push dec pusha dec flds mov movsl stos pop xchg push enter mov (bad) ja cltd mov pushf mov push mov loope les test cmp sbb inc inc cmpsb ficom sub test sbb test and xchg (bad) lcall cmp imul xor pop lret xlat movsl ljmp rol push inc and dec mov mov jb sti loop int (bad) outsl dec jg push inc fnstcw cmp mov jge aas pop push pop lcall push add inc in xor loop pop and mov addr16 rclb cmpsb call xchg ret sbb leave fildll imul xor clc jne adc dec divl pop hlt ficompl xchg or insb aaa and sahf push int or je xchg and mov jbe stos mov mov add jnp xchg push ret xor xchg bound mov loop daa ret cmpb dec aas add cld jge pop popa sbb jb sti dec leave sbb inc js cld dec aad fstps lret dec je add mov stos rclb or das inc xor sub or and call mov clc incb mov je scas bound push mov movsl daa pop and fldt dec (bad) adc cltd repnz test add pop mov cmp in pop inc ds jno and fs xor add mov repz test xlat sbb or (bad) xor outsl dec pop jle or jge aaa sub test inc push push mov dec pop mov sbb cmp add or pushf (bad) ja into stc dec int or lcall outsb unpckhps sbbl pusha push sbb dec sbb or (bad) fdivr test in stos int3 pusha test and rorl sub lock sub out sarl pop sahf stc or or mov cli cmp (bad) dec popf addl (bad) push xchg mov sbb addr16 js,pt (bad) in cwtl jle popf push pusha jg ja add js xor (bad) mov mov sahf cmp mov outsl movsb sub inc mov mov dec add fisttpl dec in lahf ret jno cmp lret cmp xor xor lret push or xor jbe out or push pop push cld sub pushf jae in push (bad) testb out jl int3 jbe iret mov add repz xchg mov sbb popw movsb lock xchg dec ljmp add dec cmp or or and inc das jecxz adc in dec sti inc (bad) std xchg shl jbe xchg mov inc mov sub xchg and pushf inc push ss (bad) dec dec inc loope lret ljmp sub cltd ror imul inc aad lret mulb sub mov stc inc or adc xor mov or fwait add cmpsb out int push cmp adc divl fisubr bound ss pop jo ficom das fwait pushf adc ret cmp ficom adc lea xchg sbb (bad) xor lods mov xor test test dec push insb mov or inc jge inc dec and mov mov cld pop xor xlat pop push xor das or mov jnp xchg cmpsl and test shr mov sbb push les sti lret dec pop cmp std das jmp push loope mov repz mov add xchg mov adc rorl mov dec jnp add (bad) mov pushf cwtl sub adc repnz mov fwait aam pop fildll js shll js add jle les cmp mov jno push jne xchg ds push sbb es fadds xor pop or loopne mov aad cmp cmpsb or push mov mov popa dec sti xor enter pushf mov xchg call sbb mov jmp jge xor lods sarb pop cmpsl cmp imul adc ljmp jecxz add mov in stc mov ja stos lret stos hlt outsb fcmovnu out ret sti imul push fs mov mov cld jae scas mov pushf xchg add xchg push add jg insb cltd out out xchg cmp jo adc xor push test popl xor pop (bad) sub sbb cmp mov sbb cmp mov sar mov sub (bad) mov adc leave lahf je arpl push xor je jne sbb add xchg mov sbb xor xor push pop movsb sbb and xchg aas rcrb sub pop test mov dec ja rcrl dec xor push (bad) addr16 xchg xchg out adc jo popa dec and add pop aad ja mov rcrb xor test test add outsl jne inc inc cltd mov rcll aas inc jmp mov mov push fwait add sub leave je (bad) jne insl nop cmp pop inc sbb data16 repnz jo out scas js ret xor jl and ljmp lcall lock mov xor or push mov dec push xchg pop add (bad) xor mov (bad) mov gs das xor jge jle inc ret aas cmp lret (bad) jno pop mov not das pop outsb pop jge mov daa add arpl gs inc ret push iret fsubl leave cs cwtl xor dec mov cwtl imul insb jecxz mov sub pop or inc inc lods das sldt aam and fild or fsubl and jnp mov mov or push shrb aad cmp fimull or sbb in (bad) test cmp sub or dec ss push fstl mov int3 mov cwtl sub fmuls xor stos mov pop lds add cwtl stos push and mov cmp adcl mov movsl mov stos jmp cli insb arpl imul dec lahf xor fwait pop rcr push lock out add pushf or cmpsl je daa arpl mov mov in cmpsb jns pop mov jb jo pop push jg xchg rorb fsubs mov les xor mov mov in addr16 jecxz mov sbb mov adc (bad) jl or xor pushf sti sub mov dec out cmp out xor lret and dec add cmpsb xchg add imul adc or out fsubrs insl popa mov rcll adc outsb inc cmp sub arpl frstor stc push push clc cmp or outsl iret jmp gs sbb add push (bad) stos xor int adc out movsb call cmp out cmp mov ror stos aad mov dec jns sub sub jp add mov call test cmp adc mov andl sbb in dec xchg mov add push mov jmp pop adc mov mov mov xchg mov cmp fs sub adc sbb inc or xor (bad) icebp outsl push fxtract test (bad) (bad) cmpsb cmpsl popa mov adc mov daa or ss in pop adc jb push cmpsl xor fildll adc inc test sub xchg jl add les sub rolb or outsb pop cmp add and (bad) mov push and aad add mov adc or jle lds decb dec fisubrl xchg sbb mov sub mov adc dec xor pop sbb insb jecxz outsl imul and jae,pt or inc push insb mov jbe jo shrb loopne push xor xor cli (bad) lock fldcw popa dec movsb mov arpl in dec lds mov xchg or mov fistp cmpsb lock xchg lcall cmp xchg ss movsb inc sti xchg sbb scas (bad) sti push lahf outsl push dec pop orb jno pop xchg outsl ljmp mov push dec addr16 push in aaa xchg out xor lods mov sub int3 xchg repnz ljmp inc pop stc mov lea push in ljmp (bad) stos mov fwait sub fs jo in add mov and push xlat and mov imul jo or and lock pop imulb rorl dec sbb adc jge int stos push imul mov call repz pop notl xor scas psrlw jb cmp cltd das jbe pop repnz and sbb mov mov sbb js orl xor aad loop loopne or mov aad cltd pop andw or imul mov sub sahf out roll das fisub (bad) add sti cmpsl dec cmpsl iret cmpsb cld xor mov cli lcall cld lods push jge sub in mov xchg aaa dec aad js lods sub xchg push dec pushf in xlat jmp pushf push orl cmp pusha jno fcmovne push and (bad) adc mov sbb clc scas push movsl (bad) mov je pop (bad) xor cld inc dec lods push ret test pop xchg ret sti lahf push mov jecxz xchg je mov loope and imul out imul add divb or lds fisttpl mov xchg repz pop or mov push mov sbb lock imul xchg pusha in aad mull cld mov cmp out repz inc sti push int and pop (bad) jae pop mov push mov ss or (bad) jo inc jae icebp sbb cmp mov adc mov gs add mov ja call or pop popa push pop xchg arpl nop adc mov movsb and jge ss pop aam test cmpsb insb add cmp push pop sti lret sbb insl adc (bad) adc or (bad) xor (bad) pusha jmp mov insl jle push jmp in sbb test aad push inc test add sbb sub pushf fstl ffreep or pusha ret outsl sbb bound sbb lods std xchg cld dec fildl xchg sub adc mov push stos jb mov cmc stos xchg movsl fidivr mov mov ss pop and add dec adc xchg loope scas add jg xchg jle stos (bad) imul lock xorl (bad) mov fnstcw rcll xor repnz mov xor sbb mov or mov outsl movsl cmp test cltd lahf or divl sub dec push movsl dec paddw mov hlt or or adc jae or in pop fisubr push cwtl inc (bad) push insl rcrb leave insb xchg mov or fisubr inc mov adc ljmp add xor das inc jmp inc repnz aaa mov lock jle sub aas sbbl aam push sub push fs shl jbe and std fcmove js loope xchg ss xor sti sbb inc jl or (bad) cwtl dec inc fpatan jo and mov loop pop sbb jecxz sub mov mov jno sbb outsl call fs cmp adc cmp jne dec cld cmp out pop (bad) jb loop cld sub sbb inc sbb adc addr16 out cmpsl scas (bad) sub nop push rep ss sbb test push pop out xchg mov mov inc cld and test lds lcall pop in sub sub hlt jmp or outsb jo faddp xor pop std add fldenv je mov insl ja hlt pop lahf pop dec jge lahf popa push divl and lcall and push sub leave js inc inc loopne mov lock xor pop ret push push sbb int adc push jl pop arpl adc pop in in push into and outsl pop cmp outsl in jle adc lret popf pop xor lock pop fiadd mov movl mov add push addr16 and (bad) pop jbe xor int3 jne cmc jge gs add fwait push xor daa pop aaa sbb enter adc xlat cmp call or mov mov imul outsl dec cmp jmp inc mov (bad) lret dec xchg iret ds inc insl and push sub sarl mov sar rcl aad in mov push xor push inc xchg mov jmp test movb sub (bad) ss jecxz push sbb rorb aas stc cmpl fcmovu sbb add adc ljmp sbb les mov sbb stos fldcw xchg fstpl pop lret sarb es movsl nop pop out sbb dec in jno xchg pop push add dec dec pop pop (bad) stos xor pop cmp mov cmp adc int test xchg fnop ss clc enter mov out adc inc stos jl inc nop push xchg mov mov movsl movsb insl aam push jl cmp pop (bad) repnz push cld lock xor ficompl push sub lret or popa mov insl add or sbb lahf gs cmp dec lahf mov clc jle in fnstsw cli dec out outsb ds gs vsqrtps insl mov sarl inc mov pop ss mov ret in mov or aad or sub adc aad xchg or push sbb ljmp mov in js mov cli push xor mov test (bad) push insl cmp in xchg jnp sti out xchg sbb adc movb sti fsubrs repnz mov jo or popa push mulb push (bad) mov jb xchg cmp bound or imul dec mov into cmp fldenv xor mov lret dec or mov fstl (bad) jb jl or ds lods pop cmp rol lahf lock cmc pusha stos loop out inc inc leave repnz sub shl scas sub sbb fstpl mov mulb inc fisubl add xchg sbbl and lea adc call or pop adc lahf inc fsubs leave fsubl mov xchg cli xor mov pop mov test pop xor jae (bad) out xchg shll loop inc rcll add push (bad) rcrl mov sbb mov push out (bad) shll das mov bswap mov mov jne sahf jne mov xor icebp ss adc sti add xor gs sbb out jne adc ret (bad) push push (bad) dec xlat cmpsl movsl xchg push stos and cmp adc jb (bad) jl cld xchg sbb and fsub insb push xchg sub dec ret push lret fidivr jo (bad) xchg rcr leave out stc outsb test inc fstl outsl iret jge cmp repz push push nop lea jl lds out (bad) ss inc add xlat mov adc aam jecxz ja (bad) xor jb js bnd ds xor (bad) sbb leave xchg pushf xchg jecxz ret (bad) mov js out xor lahf fistp (bad) cld xchg ret dec push fldt outsl jb sbb sbb loop arpl out inc mov pop into leave push ss xchg test ds (bad) adc add mov mov jp cmpsb scas js in fsubl push cmp or das xchg mov (bad) mov mov fadd jne sbb push jp mov cli loopne pusha imull xchg daa jg mov push and jne inc cmp fiaddl mov loope stc mov mov push mov mov adc (bad) cmpsl mov pop inc rorb lea jp fwait add jne test cmc jns cld lret mov pop aad fdivl add std mov inc movsl and dec sahf pop nop add fs cmp mov and (bad) icebp mov cmc lods jo (bad) fcomps or dec cld sbb out dec fstl stos arpl das movsl loope (bad) xor xor ret mov or inc (bad) or aad ds xchg (bad) cwtl lds adc mov lret lods out sbb add mov fbstp ljmp lcall sbb mov fbstp aad sbb imul jbe lds clc or rol aas dec in and test loope ret lods lahf jns mov call sahf mov jge xchg mov mov repnz fcompp mov lcall inc sbb cmp dec mov mov repz mov dec xchg pop pop aas mov movsl insb jo push xor movsb adc mov push adc out and ret int3 arpl scas icebp mov or imul gs push fisttp arpl dec push sbb cltd mov dec pop jae pop pop dec es ljmp lret push xor inc add cld jmp lods cmp push iret (bad) rcl repz mov inc call jne sub push fnstsw xor adc jnp lcall mov in cltd mov fistpll ret jno mov lret pop push sbb push cli xor mov mov (bad) sbb dec fistpl mov shrb (bad) cld sub leave inc and sbb xor fdivr lds mov jno cmp lods xchg lock aam fwait and sub in jbe aam aaa xlat jb or xor dec dec loopne les loope adc sub mov pop push jle push inc or mov in in xor or ret jp mov arpl nop dec xor repz cmp (bad) fstl stos mov fnstsw push inc jmp push in xchg xchg pop (bad) push fidiv stos iret arpl imul dec fcomip cmpsb jg ret scas out (bad) xor dec scas add inc imul xor sbb pop or sbb jbe and popf inc cmc test lea sub sbb or add js faddl fwait xchg mov lods mov push jno mov fisttpl and cmp pop sbb jecxz std push push push daa dec add mov push jno mov xor adc mov sub sub outsb dec scas mov lods int3 gs shrb sarb jecxz mov jne or push pop adc add xor jg (bad) mov sbb int jns xchg adc add mov inc aas fs jg pop cmpsb in les mov arpl xchg push dec cmovns and xor jno and outsb hlt hlt pop (bad) cli shrl sti xor pusha int imul sti fnop cltd dec sub test inc push jns lds adc aaa cld sub lea adc aaa into ficompl adc mov outsb inc pop pop leave jmp add dec sub pop add outsb ret cmp lds imul ja pop mov jae lea (bad) or mov pop mov fdivp insl stos push inc repz std testl lods fucomi cwtl push notl data16 jmp setp std sub lret aas pop test jmp mov jmp decb cmpsl or (bad) idivl iret test outsl dec mov std cld jmp pop jmp divl mov xchg ffree fstps jmp lock jle fcompl lock pmaxub or arpl lret stos jmp mov aas xorl lahf or (bad) aam push jnp push fisttpl insl hlt xchg dec lds dec jae fwait scas sub ljmp loopne test add mov fisttpl xchg mov jg mov adc je pop gs push insl rcrl mov dec dec and and fiaddl mov mov cltd out jb and push iret pushf cmp xchg pop push mov addb ljmp sbb shl dec push mov jnp or mov push loopne cmp ja lret out nop jl lods push xchg in (bad) movsb push pop das sub pop icebp xchg dec lahf sbb dec pop lods or enter add test cmpsb mov sbb mov fist mov push push mov dec pushf lahf lret pop rclb dec add and cmpsl (bad) xor add xor pop push fild mov out mov popf pushf inc arpl xor cmp sub sub into repnz das in dec push xorb jp sub jne pusha arpl pusha sarl add out js xor addr16 dec enter jbe inc add fimull mov and xor pop loope xchg in push (bad) rcrb out add xchg int3 pop ds jbe repz mov out push add xor popa mov xchg das lcall mov xor mov dec enter or addl xor cltd push mov imul jo cmp shlb into mov rcr and xchg imul push add pop push inc or cmp dec cmpsl cltd sti leave push jp hlt sub js sub inc xor (bad) or add mov repnz sahf imul out or adc shlb icebp pop (bad) cmc test sbb jo shlb leave dec orb push leave pop xchg xor enter inc insb and inc inc cmp mov das and pop jo ljmp dec cmpsl ret inc adc nop call out stos or notl clc or ljmp mov mov outsb push cmp inc pop pop pushf divl mov jecxz mov int3 cld scas push jb mull lcall pusha and pop pop in mov and xor pop mov dec adc push (bad) push cmp push data16 cli cmp mov dec or loope call xor or dec inc (bad) mov jno inc cmp jbe push adc iret lcall arpl mov in cwtl fld or fcoml repnz (bad) xor mov or push out imul mov xor mov sub mov add (bad) add xor adc mov sub lret pop xchg icebp xchg xchg cli movb inc cmp pop insb adc mov cwtl mov stc xor sub cmp mov mov jp jle mov hlt scas sti xchg xchg dec mov sbb lret sub into aas sub cmp or addl mov fwait es fs fsubrs in cmp icebp div shrl xchg mov out fs insl xchg and test mov adc xchg push cs add or inc pop out mov mov pop push aad pop mov imul subl test push jbe cmpsl int jo cmp or lret adc mov les inc sub ror sti loope scas cmpl and mov pushf add pop lahf jecxz cld jae jne pop add clc lds cmpl or mov pusha mov pop sahf pop xchg mov arpl call in jbe repz mov sub add or mov mov pop add dec pop push push jecxz imull imul hlt loope daa jg cmp (bad) dec adc into shll mov pop xchg inc mov cli adc ljmp lock mov ret pop dec and lret loopne loope les icebp (bad) in lods or jge and mov js dec ja out mov rorl test jo mov mov shr xor dec leave sub jecxz inc fild mov jecxz sbb in movsl cltd lahf movsl sti cltd int3 (bad) mov cmp mov mov aad adc inc jb test pop push scas inc and adc es sub shrb push or rcll sbb cmp daa sarl loope jne js xorb xchg jmp adc sub ffreep push push aad fldt (bad) dec dec inc dec std jg jae jecxz jmp xchg dec mov fnstsw addb in test ret mov add cmp int3 insl and add scas inc nop addr16 inc nop sub leave adcl leave jg jmp xchg cmp aam mov sub cmpsb aas pop fmull jmp xorl and lahf mov mov lret push and rcrb out mov push push adc js sub (bad) sub pop pop in adc cltd mov jnp fdiv cwtl das pusha fsubr mov test pop cmp xchg (bad) sbb insl arpl lock js mov insl fwait cmp xchg mov jp cmpsl sbb jae jmp adc sub ljmp jle cmc pop and xlat pushl sbb (bad) jo xor and cmp mov jl in nop fwait jmp fs or hlt add (bad) add test cmp test jae in sbb pop pusha int fnstenv iret pop out dec ss jo popf jbe fldenv bound xchg lcall (bad) or mov (bad) lret ljmp outsb cltd xchg enter je push lds sub ljmp push je jp xor clc je sahf mov or es pop jns loop movsl sub out mov iret xor int3 stos jns mov mov sub stos adc fldln2 dec ret aaa push inc jmp rclb cmpsl mov mov jbe cbtw push bound push cmpsb xchg jnp mov arpl fisubr stos push mov fcoms dec sbb (bad) lcall add gs jp ss pushf and lahf stc mov lret (bad) sar lea add lea sbb jns jns test mov dec dec lcall sbb jno mov stos jle dec mov lock push or popf dec push mov test and cmp and dec add jp lock jge jp leave cmp inc pop aam in jl xchg or jo pusha test adc cmpsl rorl lods mov scas or pop in cmp fucomp imull mov rcrb jns in scas pop jno xlat (bad) (bad) iret inc and pop daa mov (bad) sbb or jns xchg mov xor cli jnp xchg mov lock lods insb mov (bad) arpl test outsl stos jle mov in adc outsb adc sub ds mov jle sbb mov into cmp pop xchg mov movsl pop push adc and icebp xchg dec xchg imul mov addr16 movsl lret in js inc pop sub or mov (bad) jne add push mov ja repnz into push push (bad) fistpl (bad) cmc dec push inc iret xchg and push mov imul repz dec test push or test xor jecxz add and pop mov mov mov frstpm(287 ret insb loop popa (bad) mov mov mov mov (bad) icebp push cld push mov outsb mov subl adc scas pop rcll loope ror fnstcw ret add cmpl push repnz jb mov sbb imul nop xor jnp sub jg push dec inc sub push je mov add lret ds mov rclb lods (bad) pop stos gs mov xor sarl in (bad) outsl mov in pushf stc xor (bad) pop nop jns add daa sbb jns (bad) cmc leave cs in push fsubl imul out push or in clc cmp cmp inc les out ds stc pop and fistpll pop pop loop dec xchg test in jo mov clc insb add push shr cli shl adc divl mov cmp jae and xor pop pop jge (bad) lahf sti xchg jmp add and xorps push pop adc mov push jg mov inc (bad) and sbb test sub cmp or fbld pop xchg ljmp jnp sbb jecxz mov aas mov mov jae gs cmp mov gs add inc (bad) in pop ljmp jno inc fwait push cltd xor shrl fidivr mov jae fs dec push mov inc icebp or pop stc les push sbb cmpsb xor fiadd mov mov jns ja xor out lods or mov (bad) js (bad) sti and sbb jb add ja sub push adc not notl xchg mov in in mov (bad) in mov and movsb out sahf fadds fisubrl jno int or xor pushf (bad) es nop xchg rorl repnz imul mov and rcll inc sbb in cld out int pop mov sub or insl or pop lcall ljmp stos sub hlt add and aam and movsl arpl xchg pop gs mov and and ljmp push mov xor jb add add fs iret mov fmull dec pusha js cwtl fistpll mov (bad) inc iret xor push shrb cmpl shlb push addl add push ljmp rcll push sar or sbb negb inc adc insb xor adc sbb dec mov mov mov dec fsubs xor jge gs movsl mov inc and mov mov pusha iret mov dec (bad) or xor jns aaa jnp das mov daa jmp xor aas sti adc (bad) or rolb (bad) mov sbb inc push int3 cmpsl sub fcmovb dec aam inc xchg (bad) ljmp xor xchg (bad) xchg push adc adc jle shlb arpl rcll xchg mov ds stos ss es mov sub cwtl pop sub test sub fwait or dec mov jne lds sbb xor lret in pusha jb or dec sti repnz outsb add push pushf push push cmpl cli jns lahf imul (bad) fadds (bad) dec fisub in xor lcall push inc jmp cmp test jno xor or or cld add cwtl xchg push dec cmp sti adc and enter or mov jns sub shr imul call lahf lret sahf cmp mov dec ret ss jecxz push xchg pushf data16 js lret lds aad clc andl pop mov and jge add repz lahf inc ds xchg repnz sti rolb and outsb push push jne dec and aam imul mov enter repz mov test mov push out jno jg iret sub enter jbe xor insl adc and xor loop jmp test (bad) subl jmp or cmp call add inc mov pop mov jmp dec push pop mov jp pushf jb in int fsub xor cmc and (bad) rorb or fwait mov sbb mov jecxz mov mov negb hlt cmp loopne loope mov add (bad) incb pop add mov cli cs xchg cmp and xor cltd loopne push xor cmp or nop cli sbb enter and das movsl mov inc cmpsl adc iret mov ja loop shl addr16 cwtl rolb fstpt nop inc pop mov push pusha aad inc inc loop mov add push ljmp or jle xchg aas stos mov addr16 aas (bad) mov repnz jmp adc push dec mov jp outsb lcall fdivrp adc fucomi mov pop clc mov mov mov daa or pusha imul mov mov (bad) es or xor fnstcw outsl cmp push mov imul (bad) xchg lea sbb jge in js sub addr16 or jbe dec xchg sti lods mov std das outsb mov iret cmp icebp cmpsl jmp cmpsl ds outsl sub je adc mov loop push adc push sbb mov inc dec mov call push call int3 jmp sahf and xor shrl imul jo insb xchg push popf repnz adc pop fidivrl cmc pop push jp mulb mov faddp push fs cmpsb js xchg enter and pop add lock fcmovnu insl sbb rol out (bad) icebp (bad) and lods cmp xchg fwait sub test mov pop xor pop xchg jmp outsl lods inc dec out xor jecxz cwtl mov push dec adc mov jl mov cmc fidivr mov jle xchg (bad) test xchg sub fs imul in and data16 sub iret adc pop or pop jae xor inc add sub push popa add rorb xor (bad) jbe xor dec dec pop sbb dec sub push lcall mov push mov rcrb imul lret inc xchg lcall mov out lock lahf pop rol clc insb sbb dec mov jb sahf (bad) xor cld push cmp xor stos shlb push ds push aad aaa (bad) cmp fmull fdivl push cmp pop out jae movb movsl cmp movb fnstcw or xchg or push mov lea push pop into push in (bad) das push bound test push nop in repnz les sbb dec xchg into outsb in xor sahf inc cmp leave repnz (bad) repnz push adc xchg add mov popf jg jmp shl out dec incb sbb insl jnp aad cmp xlat out mov mov inc xor push push (bad) xor into cs std dec repz fistl divl and jp cld out xor test movsl or sbb inc nop cmp or push inc push jbe int3 jno sub pop in sub jo movsl sub jne jne loopne or mov insl imul aas mov inc out mov jmp int3 xlat scas es xor jl jne lahf pop lret inc cmp fildll fild sti pusha daa dec cmp insb into and push incb push dec jecxz and sbb scas xor pop dec sahf xchg cltd pushf dec mov mov ret ficom cmp imul pusha lret cmp lea cmpb adc push xor xchg sub sub sarb test aas add int mov push fld push sub cld jno dec jnp mov or sbb jge xor aaa fadd les xchg pop push pop mov mov inc imul push xor add test cld jp jmp shll xchg in dec lds je cmp xchg movsb adc jl and test scas pop push mov lods push rclb jbe cmp mov imul sbb xchg pop pop les xchg add fisub push sub inc pop int repz xor sub and mov test scas gs clc (bad) adc (bad) loope pop int hlt adc mov or mov push cmpsb scas push stc cmc xchg das insb mov call mov cmp popl cmp adc or fnstenv sarl mov sbb inc sbb or mov lock jle mov mov aad idivb test xchg dec es push mov in jbe push (bad) fcomi sbb pop mov cld mov inc sbb ljmp xchg sahf test push xchg sub sub pushf sbb (bad) imul sbb stos lret xor mov aaa sbb cltd je push cld pop sub push mov mov fmul xor movsl sbb ljmp adc in xchg and lock dec andb push sbb subl and or das pop into push sbb cltd adc stos rclb and inc jg pusha fs push sub out fbld pop sti xor mov jecxz dec dec jae or dec leave test cmp lret rcpps jno mov mov ljmp lods (bad) push fiaddl imull hlt sarl stos cmpsb jnp int out mov ret and stos pop out leave aas push dec pop aas fstpl js push or mov and sub lahf or sub mulb daa jb,pn xchg popa cs imul jl pop push sbb popf ret push bound mov and or mov and cmc loopne test or and out push inc add push sar mov mov jo jbe icebp popa shll sbb cmp jg dec rcr xor dec hlt lock pop sbb and mov pop dec push lock jg mov (bad) lret mov fldenv sub pop mov sub sbb xor loope xchg jg shl and xchg xchg in fstenv sbbl std cmp push loop pusha (bad) cs mov es add sbb stos mov mov enter push add sbb jg daa int cwtl inc insl (bad) icebp lret das adc dec jb ds ret test jp push push ds clc xor push xchg inc push jnp mov stos sub add fcompl in movsb in roll dec lar mov pusha dec data16 pop or adc imul mov jae and mov xchg cwtl test scas cmp xor mov pop enter add pop pop enter adc pop jp rcrl sbb ss rcrb stos xchg push dec lock xchg and mov pop jno leave rcrl jecxz sub nop and mov add xor cmpsl aam loope cmp aaa lahf (bad) jmp cmp movsl ret mov push andl inc mov rclb adc sti jne enter xorb insl out jb imul mov mov outsb sbb fidiv mov (bad) clc in ljmp or lret inc in cmp fisttpll pop andl push mov rol xchg adc xchg (bad) mov pop adc or inc movsl xor icebp mov push cmpsl bound insb add or out xchg testl out jno jmp orl jmp divb sti stc loop mov dec adc int3 sub sahf cmp int3 (bad) hlt adc or cltd mov mov push (bad) add (bad) ss jmp sub dec iret and mov cltd inc imul dec mov cmp (bad) idiv jne push lahf jb xchg imul cli in mov dec movsl lret push push cs pop adc cmc jp push xor jp xlat mov insb dec add iret jg test sbb (bad) testl (bad) add sub pop pop adc mov gs push cmp movsl adc rep jg and adc cmp int fsubrs jp,pn fucomi or cmpsl shlb xchg out out mov stos lods aaa mov xorl add xchg xchg (bad) popa cwtl pop xchg jg aad sbb sbb nop lods push in and and cwtl push mov es pop jnp mov insl xor inc popf push das mov dec push push push cltd ja out repz sbb fs xor jl pop dec inc xchg mov inc mov cmp jae insl push icebp xor (bad) mov pop popf fnsave mov iret out sahf mov ds (bad) jb hlt sub in lret xchg mov aam mov mov mov int (bad) and push jmp adc fidivr daa adc or mov je push fcoml pop lods repz and jns mov (bad) jmp and leave (bad) dec xchg or out outsl movsb cmp inc inc pop xchg mov adc push dec enter cmp mov cli mov xchg xor mov or and dec and es subb in xchg inc pusha pop add or popa xor lock cmpsl sbb loope push add or nop jo dec fcoml jp aad cwtl outsb mov cwtl mov cs add das das data16 hlt mov gs jge test outsb test mov nop out sbb (bad) aam pop mov xchg xor ror cwtl pop add hlt jmp push sbb scas jns nop mov cltd (bad) xor scas fadds cmp add cmpsl mov mov aaa rorl scas mov push stos icebp cmpsb mov repnz mov stos add je cltd push (bad) scas cwtd mov jnp xor pop xor (bad) imul mov dec (bad) pop xor out arpl pop std clc in (bad) cld (bad) push or pop add adc dec jo pop outsl pop divb dec js dec adc jne mov sub dec imul jg sbb dec lods aaa and xor push cmp clc and or iret push loope push adc (bad) jb repz fistp mov out loope and add enter cmp xchg adc dec cmp cwtl mov icebp jno jnp rcr nop outsl xorl sbb lock xchg push addr16 and cmp jmp jno popf cmp jns inc pop cmpsl cmpsl add jge cmp adc clc adc iret repz jae iret pop mov or add add icebp fisub inc test aam in push fst aas inc cmpsb jecxz inc (bad) xor pop iret pop xchg stos cmp or test inc stos mov jns popf (bad) sti jg mov cmpsb iret xchg pushf fidiv loopne sbb int stos lret inc mov cld xlat (bad) std stos dec (bad) or or mov inc inc pop sub jmp cmpsl (bad) fcomps shl pop aaa xchg in jb hlt mov xchg je test or xor aaa mov pop sbb push insb inc mov int3 arpl cmp stos mov mov mov push aas mov sbb pop xor loopne sub xchg adc mov daa jno pop push outsb and cld outsl cmp test push fnstenv lds outsb iret movsb pop mov sbbl out imul iret out movsl sbb cmp add mov push or inc pop mov sbb and adc add outsl out push fwait bound mov ret jno bound daa flds lahf sarl cwtl pushf enter notb jecxz mov xor mov icebp stos pushf fildl sub cmp xchg and fs icebp fnstenv sti adc xchg test jbe mov lds cs jecxz imul or and fist lcall xchg imulb outsl les mov xor gs imul inc jp push mov sbb fcmovnb sub add sub or push daa mov adc dec sbb sub mov xchg jge cli out and mov jae div (bad) bound xlat fimul cwtl std lods mov scas sbb xchg icebp mov out dec jb pusha mov sahf (bad) into push push and (bad) xor lahf pavgb jns fiaddl (bad) (bad) mov sar cmp sub sbb lahf sub stos int lods hlt mov add pop cmp mov out mov xchg sarl inc or pusha jns and cmp sub das cmpsb mov xor add lea dec sti xchg xchg out data16 or dec or adc inc loope aad and xor and mov imul jne jne xorb inc out icebp aad adc or (bad) xchg and rorl sub (bad) sub cmp sbb insl movsb pusha outsl add pop add stc addl aaa sub fldt dec jl mov pop add repz cltd xchg and inc aad into call sub add or outsl lret cmp jae jo scas adc loopne clc mov cmpsb pop push mov inc cmp mov imull outsb ljmp outsb sub ror mov push daa (bad) xor cwtl hlt sbb inc jno js sbb xchg hlt dec jl mov sbb test add inc jle xchg int3 sbb lds mov nop cs out mov test push adc out fcoml or test fisub xor scas sbb outsl mov mov inc xlat xlat push or jbe stos add push cmp xchg rorb scas movsb fisubl (bad) cmp mov in aam xchg sbb push stc pop imul cwtl lcall cmp (bad) xor inc sub sub inc add in mov ja fcmovnu xchg arpl jecxz,pt outsb pop jo iret pop je sarb mov inc pop mov scas cs cmp mov and cmp (bad) adc aam xchg stc dec jmp xorb orl cs sbb fwait jp and push sbb add add ljmp adc sbb fimull add lret lahf xor call pop sbb mov xchg rcrb push fsts cmp movsb pop or or xorb popa call pop test mov test adc cmp mov push scas int cmp inc cmp arpl mov lods (bad) aaa sbb push in mov lds mov mov cmp push in dec jle or fptan lahf sahf push add popf cli movsb xlat (bad) cmc loope aam pop sub jmp aam jnp (bad) in lds (bad) aaa ret sbb sub aam clc test inc push mov push dec mov lods shlb ja fwait pop dec jne dec and imul insb or fs mov or pop xor adc shr sbb (bad) rclb mov fbld mov and out inc daa lods popf pop pop sub call xchg outsl fidivl enter scas ljmp jmp adcl iret insb mov cwtl add rcrb repnz jle cmpsb test das jno cmpsl outsb dec xchg in int into mov or lahf or lods aaa jl pop cmp and push cld jo pop adc mov inc mov xor mov ljmp imul inc cmpsl pop jae fs cmpsl sbb imul aad (bad) cmpsb gs jp mov in fldenv cmp pop push xchg test cltd clc cmp nop out movsb (bad) lock jnp mov dec scas xlat mov sbb dec mov test push inc mov xchg jo shll ljmp pushf or cltd push (bad) scas sbb push ret xor (bad) pop lret ss out mov pop xchg xchg icebp cltd mov pop mov lcall jmp cmp pop mov mov js (bad) mov mov loope int mov dec and dec push mov xchg sbb or mov xchg bsf jle push repz push call push dec xlat jg loopne cmp push push movsl test or xor sbb xchg xor adc push mov cs jl fisubrl sbb xlat fcoms imul xchg adc mov dec (bad) scas push outsb push lock (bad) push (bad) inc loop insl test iret mov jecxz sti sbb sti mov inc in xorl test and mov ret bound and adc sub insb sub sti adc imul xor cmp cmp mov mov push and push push push (bad) mov rorl es mov mov aam int3 xor aam stos flds or mov inc pop sbb xchg out inc cmp dec jmp (bad) cld jo pusha mov rolb lcall inc mov xchg or cli lret mov push mov mov or push and (bad) nop mov or cltd ret jbe pop mov jmp dec mov add jns sub inc (bad) mov jne stos js cmc mov es fs push enter repnz inc adc scas mov test adc loopne sub jp mov cli cmpsl mov (bad) jmp inc in fnstenv lods jg inc (bad) xorb dec (bad) adc dec sub bnd jle imul stc adc inc ja fistpll je xor and mov mov (bad) lret mov (bad) push lret cmp bound movsl dec ss lds xchg push pop and call adc inc fisubrl and and stos and jg cmp push and adc jno jmp and mulb push clc sbb mov mov mov xchg loope cwtl mov ja jbe jp imul aad pop fsubs push (bad) lods and push pop and (bad) jle stos cmc mov cwtl pusha lfs push pop mov (bad) add cli jmp jns fldl addl rolb arpl dec das push push jge xor jp cmp dec xor pusha scas push xor enter bound outsb std inc pop (bad) sbb mov mov sub xchg data16 adc mov push arpl mov icebp add mov jns jne adc dec bound outsb stc repnz mov pushf xchg mov mov cmp (bad) dec sbb mov imul rcrl sarb mov pop les jno scas clc xor jmp xchg sbb pop out adc inc cmp out xchg push movups ss icebp jge arpl gs stc mov sbb rorb or mov cmpl xor push and mov push in mov ficom push or jb fildl or lds sub inc xchg jmp jmp nop and js inc add sbb lods xor fldenv out jae mov push test out js in (bad) xor sbb lahf mov arpl scas pop mov loopne mul jbe add pushf xchg jmp loopne movsl in xor cmp stc mov out iret push jbe lods xorb mov and jl dec cmp cmp imul mov adc push popf les cmpsl xor enter cltd push pop sub inc pop jno scas movsl data16 ja xor (bad) mov jecxz inc jmp call cmpl mov jmp movsl movb cmc sub mov sbb jno loop push sbb mulb jbe inc jns popl xor (bad) jo xchg and ficom xor daa aam mov mov gs pop add cmpsb repnz xorl pop cld jns cmp imull adc xchg mov rcll cmp push leave add push pop mull test (bad) cmp fistpll adc mov enter pusha dec sub movsb js mov pop cmp loopne leave push xchg (bad) bnd push push lret lcall dec mov in scas ret repnz push fist or (bad) lret and (bad) int int3 shrl hlt dec cwtl push mov ret jl loop mov mov rorb push jns dec mov addr16 sbb (bad) jmp mov pop mov shrb insl sub sbb repnz movsb fcompl mov loopne stc leave ljmp mov mov and daa pusha cmp das mov rolb cmc mov lea mov or (bad) out pop aaa lds sub jl and mov adc mov (bad) sub jg sub sbb push cs iret sub pop fcompl int3 scas pushf jo dec aam fidivrl cld frstor int3 cltd icebp lret pushf xor push cmp bound xor cltd sub xchg mov scas fucomip push sub jnp pop xor leave lret push push jl fbld movsl and addb cmp fisubrl popf xlat outsl fyl2xp1 lahf fstpt jne pusha popa int mov dec xchg add lcall lds iret push insl test call dec adc or lds ret ffreep xor xchg test push and jp test or pop mov fbstp adc mov inc fdivrs lock sbb push ret aam lods dec in or dec (bad) cmp cmp call dec insb xchg movsb sub lcall sub inc cli and mov mov push pop mov pop adc lret sbb mov lahf push (bad) iret outsl pop aas data16 sub sahf loopne cltd clc cmp push sub pop mov (bad) xchg cmp in sbb aam xchg sub adc lods out test repnz aaa pusha mov adc daa (bad) xor cmp dec sbb jl add push mov sbb flds ss sbbb sbb xchg rorb (bad) mov mov adc xchg push inc push lods dec lods repz (bad) imul pop xor inc leave test jnp sub pop movsb jmp pop movsb mov add mov xor push inc pushl iret call dec mov push enter jp fs lret enter cmp push and xorl sub loope and jo jbe xchg inc lret jae out repz push (bad) jb mov repz mov xlat jecxz dec inc dec mov xor decl push add xchg or push stos (bad) not mov test cld mov add sbb jb and mov jge pusha int3 adc add int sub pop xchg inc andl inc cmp xor imul push mov test out loop sbb shlb jo mov pop rcll inc mov add outsb jge aaa fwait pushf xor stos jecxz rcll jg (bad) jb xor push jg stos int3 int xchg out loopne xchg xlat in sbb test jg repnz jae or jb dec in icebp fwait aas xor push dec out sub or push out pop test dec in jns fdivrs mov test sbb dec push (bad) mov aas push rol xchg jb nop pop jp scas cmp daa cmp sbb dec xchg push stos xlat bnd push popf adc and in or mov mov les and pop testb sahf jnp and pushf mov (bad) add mov pop popf lods adc mov mov shl dec cli popa adc mov cmp jecxz cmp (bad) jl leave shr movsb xchg int3 xchg adc ret xor cltd add pop fldt add ds test push push and (bad) mov cwtl dec je fs cmpsb pushf push int3 imul cmp mov sbb mov sub xchg les push dec aam stc dec push sub xchg repz rcl pop in xor mov push pop enter mov jnp fdivrl push and ror scas aad add jmp loope,pt lret int imul mov push es shrl inc test pop pop mov cmp into mov add push cmc addl (bad) test jae push and imulb test mov push hlt fidivrl mov add add addb dec repz (bad) xor push mov lahf lock pop jmp lea lret fistpl cmp mov xor xor and mov xchg ficomp push xchg push ret cmp push fiaddl jnp or inc mov or xor (bad) push and je xrelease jge into mov adc pop pop cmp (bad) dec shll enter lahf popa (bad) xchg mov pop mov popf jecxz lods out jp mov in movsl aad xor push pusha lahf cmp cld test jbe out jg xor das and pop push mov imul sahf jo iret cmp or adc pop cmc jae pushf (bad) cmp sti daa jae scas add xor roll xchg in int xchg and imul test cltd idivb and mov adcl lea adc sub cmp sub (bad) bound das fs xchg aas mov and cmp clc stos pusha mov orps cmp cmp sbb sbb sub shl mov ret pop hlt jae jl lret lock icebp shrb xchg jl and dec arpl and cwtl sahf push in sub sti push jnp outsb dec adc inc test cmpsb jne mov or mov sbb hlt mov lahf out or mov push call rorb sub push mov fstpl ja cld pcmpeqb repnz and fcmovnbe pusha iret push leave cmp cmp cmp lods stos mov inc sub rcrb repnz xchg fiadd sbb fadds into jge mov loopne add inc shl daa pop scas ret shrl lds loopne pop fcomip cmp push subl imul sub mov mov out test mov mov cltd ja cld fwait outsl mov outsb inc jb punpckhwd add xchg sahf pop jbe mov add scas popf inc outsl jl call and jbe int js stos ja jmp xchg std push inc frndint repz or imul icebp call fsubrs mov sbb xcrypt-cbc cmpsl push pop or add mov je aad jp das mov jae cmpb fs shlb mov sub rdtsc call daa sbb jmp ss in or dec push insb xchg int3 dec inc (bad) repz or sub push mov sub sub daa dec jge cmp push notb mov pop sub sbb neg in movb pusha add jae (bad) (bad) dec xor push arpl jno inc inc fmuls insl rcrl mov es adc mov pop cmc sub mov adc mov sub mov add pushf ds jmp add in lahf stc cmpsb sti in xchg and mov or xchg neg sbb aas and xchg jbe jg jmp lret lret dec push out and mov movsb or sbb push clc pop lret add or enter xchg daa addr16 sbb (bad) cmp lea push scas lds decb movsl sub add mov repnz mov jns xchg icebp push dec dec mov or mov or cli loopne pop stos dec push push mov pop cmpsl ljmp outsb add test jne loope jp add adc loopne jnp sub loope stos cwtl mov dec jg ret adc inc pop xor imull pusha les inc repz push xchg rol cs int3 enter mov push adc dec dec ffreep add mov cwtl std cmpsb in cmp fstp push faddl sbb rcrb pop ficom push inc idiv xor int3 imul mov lcall and outsl jns ja dec std in in jecxz mov pmaddwd push xor adc loope ds stos cwtl not cmc mov inc dec pop movb cmp sub push test pusha out das mov (bad) test test sahf pusha inc fidivr or adc or mov rcrl jg shlb stos ret push iret mov in cmp dec cmp mulb push mov adc and repnz xor sub bound scas pop add lcall pop (bad) sahf dec pop mov fsubrs addb pop or mov rclb insb pusha test and xchg ljmp jmp fs or jge aaa test shrb or and ljmp mov sbb mov mov mov add xchg xor mov (bad) and or push cli lcall push dec adc cmpsl push add fisttpll mov and lahf xchg decl xor in mov scas (bad) pop mov repnz jne pop les add (bad) dec xor mov popa inc sub ret addl outsl xchg xchg jmp in mov mov fcoml xor mov clc xchg mov in add bound pop xor and adc inc adc xchg aad push in repz pusha jno and xor push repnz mov cs jae popf test fnsetpm(287 or dec and adc mov in addr16 int xchg mov push cmc push mov call inc jb ss lock int3 and inc ljmp mov and (bad) pushf aam cmp mov xor int3 orb shrl (bad) mov es int push mov cmp jno fsubl (bad) repnz jmp (bad) (bad) xor ret add pusha xor jp aam loopne push call mov daa rolb lods in bound cmp jmp push sbb lods sub ret fwait test mov xlat shrb sub cmp shrl jg pop pushl xchg mov stos imul mov call pop mov cmp xchg and and loopne fistpll dec mov lcall stc xchg jge sub dec repz out clc lea loope sbb xlat sahf sub or (bad) jnp cli imul dec sub push fcmovb test cmp lcall outsl shrl sbb sub test out ja jg dec and jle test jg fs jbe,pt jno xchg fisubr cmp jnp iret insl jl xchg ret lcall cld rorl outsl lds popf and lar rcll popf jno (bad) mov mov loope,pn popf xor dec jnp push iret cmp divl add jmp xor hlt mov sub movsw imul xlat push (bad) out fistp push ds lea sub aad daa inc sub cmpsb lret fstpl adc out std jb lret in mov iret or pop lock imul (bad) nop sub insb push out mov loopne js pushf pop cmp jno push (bad) dec xor fidivrl push imul lcall fnstcw add lea fmull xor fmul fldlg2 movsb sub xchg or mov add cmp clc dec arpl mov fwait jecxz das adc lds push mov xor or and lods xchg mov xlat (bad) fwait jb in or pusha out adc (bad) pop mov sub pusha mov cmp mov lahf push stos cltd dec jge nop loope stos mov fnsave xchg cmp cmp lea pop adc imul out push mov or data16 push dec (bad) loopne out mov or push int mov inc pop in test bound push push sub xor mov pop sbb jp int3 push mov adc mov (bad) fdivrs test test pop insl sbbl mov movsl jmp xor sti ret imul pop sub jecxz mov leave xchg sbb xchg test mov shrb sti jns and shrb arpl xchg cmpsb bound sub add aam xchg jbe in inc sahf outsl je push pusha insb adc fwait pusha in fmuls jecxz sbb sub push cmp enter jo aad adc pusha cli negb sbb jl inc clc fiaddl loopne xchg call shrb or mov pop movsl add and fnstcw push sub jmp (bad) jo cli inc push cltd dec jno mov mov adc cmc push scas inc aad cmp or add and jge sub pop mov sbb fisubrl leave test popf ret ja daa fisttp adc and or push mov (bad) xchg sbb jne mov push je aas cli push aaa bound into gs in adc pushf and movsb cmpsl mov sub lds insb pop pop outsl das jne addl mov lahf xchg push mov pusha add inc xchg mov mov adc jae std jo or mov loop std add mov push pop sbb pop pusha out scas dec test into xor and cld push pop or cli shlb rcrl nop inc bound mov push cmp jg aas xor ret in jbe add xchg lods je inc push dec mov mov fbld cltd add sbb mov inc daa imul push cmp inc pop repz ror push idivb js stos adc mov andb inc sub xor imul cmpsb ret nopl pop mov pop ficoml addr16 lret jecxz mov pop call imulb xchg xchg jno dec jo movsl loope xchg mov pop mov inc or lds rcrb les mov and sbb sub sub cmpsl imul enter xchg jno mov jmp shll out out dec jmp arpl sbb cs jnp mov push or rcr call pop jno jmp xlat jns xchg pop adc pop pop mov bnd cmp bound lock sbb jo in mov mov fstpl pop xor fistpll scas fadds push push pop push add push orb pop inc negl mov or in bound (bad) cltd lods pop fidivl repz insb loope and outsl add mov mov mov out xor stc jge inc mov inc cwtl and daa (bad) dec adc xchg aad push or fidivr outsl adcl mov lods (bad) push or jae dec push lock scas pushf lods out mov sub push inc xchg (bad) imul xchg dec push xor daa test mul sub mov pop mov push pop lret aad hlt dec xchg lods mov push mov data16 inc mov ficom mov xchg aaa pop outsb fcoml mov call mov xchg (bad) mov lret mov or mov movsb daa aad dec imul dec outsb sbb xchg ret mov std inc ja xchg pop les loope bound jecxz xchg stos (bad) cmpsb fbstp repz iret loope push push jmp dec sbb cmc pop pop rorb mov mov push add dec into mov sub and cld push lds loope mov in test scas jae movsb or mov add jle js cli and arpl enter push movsb roll fwait arpl xor (bad) and push and cmc jle ds ss push ja scas pop scas xchg cmp out jnp dec sbb cmp push inc sarl (bad) lret in dec lahf mov jmp dec push add push (bad) insb push hlt leave nop data16 (bad) (bad) rcl jb sub pushf adc lret mov xchg repnz iret jns (bad) cmp dec add inc fs dec out dec arpl lds xor shrb (bad) push data16 or sahf bound fs loop xchg fdivrl iret les mov push adc cmp sub sub scas and iret mov int3 mov pop aam xchg push aad (bad) cmp mov xor inc loop dec hlt push pop dec and fwait xchg popf out and push rcrb jno (bad) repz xor bound movsl cltd enter pop sub pop fs xor dec out inc adc fistp mov stc mov dec mov pushf inc or out mov dec and sub arpl xor test out sti jnp push inc int pop dec push add mov cwtl imul notb xor push outsb in sti repz add out call int3 jb xchg stc jle push push dec leave in jae cmp jmp add push test jnp lea sbb iret outsb mov movsb pop out lret dec mov shrl pop and ret jne push leave popf or aad pop push inc push lret gs outsl sub sbb fsubrl cli dec mov cmc jl popa jo outsb popf rcr aam daa ret movsl add dec cmp jns rcr sub push sbbl movsb or jmp das dec call inc subw mov stos jl lahf mov (bad) mov mov cmpsb mov sub xchg xor sbb mov js inc pop popa jno add mov mov dec push mov xor hlt mov adc out fsubrl dec lcall mov inc popf push mov and hlt in adc dec movb or ss push sbb fsubl je fnstsw dec add iret mov pushf fbstp or inc lret fiaddl (bad) push sbb (bad) inc mov ds mov add xchg mov aas ret or or lods sti mov jp push rcll push js mov ret inc cli xchg insb (bad) sbb int cmpsb dec mov dec ret iret mov scas sbb out xor pop push pop mov dec mov and call or ss and mov jecxz rclb sti hlt lock sbb stos sahf imul loop mov adc adc mov testl cs cmp sub mov mov addr16 lea loope,pt (bad) mov pop pop lcall enter fstpl xor adc mov xchg test jae mull xchg out pop xor adc aas and sub cli inc cmpsl fs cli (bad) movsl pop test rorl pop mov add and aad movsl in xchg and lret push sub mov (bad) icebp mov jno inc push sub pop fisub sub push pusha sbb xchg loop ds push push sbbl sbb inc mov outsl sahf fsubrl fdivrp xlat add movsb cmp or fimul xchg fnop xor popa (bad) xor xchg push cltd hlt xchg inc jnp addr16 xchg adc pop addl adc movsl imul and cmp mov and mov adc in push andl cmp test xchg cmp (bad) sub inc dec xor inc les int add iret enter dec stc insl sbb mov scas js icebp std repz xchg pushf in pusha push mov mov and cld sub or cmp movsl cmp lcall les int3 jmp cmp xlat push gs adc add nop (bad) dec enter dec leave mov cmp pop sbb das pushl dec jmp out in dec fidivrl dec int3 mov pop pushf je push icebp xchg jmp rclb mov outsl push and push arpl inc enter (bad) xchg test test sbb ss loop mov pop cmpsl pop aad sbb call shll adc dec hlt (bad) mov das mov jl push (bad) cmpsl in inc (bad) add push push popa jne ja adc fbld enter ja push lds mov dec push stc inc push test mov sub data16 repz sbb dec lea mov inc and dec and loopne dec fdivrs outsl dec ljmp push inc mov mov fs xlat or mov pusha pusha and jl daa ss data16 call mov mov sbb (bad) fist mov mov jl imul cwtl in popf into jbe arpl cmp adc push test pop inc call sub xchg adc push rcrl or mov jbe add out sbb test (bad) popf xchg cmp rorl fwait add cmpsl or sub jecxz mov (bad) ds jno sub xlat inc and ss into sti sbb xor push sbb pop or in xchg and gs ja mov (bad) lcall movsl imul adc fs mov nop and shl push call test (bad) int shlb mov movl aam js repnz jmp xchg es js les das mov dec jle aaa insb jnp push imulb fdivr sub ljmp and sbb fisubl mov dec or je jo mov xchg (bad) dec mov sar jge push adc adc sbb push cmpsl loope sarb xchg xor leave and or add pop xor addr16 mov inc lds inc sub xor pusha (bad) (bad) sti (bad) ss (bad) in clc mov mov stos add add push das fsubrl add in mov mov pop mov popa scas pop or push pop push xchg and (bad) repnz lods and and shll rcll xor inc mull pop push ret addr16 leave jle stc loop outsb or lahf lahf es data16 clc mov iret mov cmp (bad) jecxz loop dec mov ja inc jecxz add inc sub cmpsl in in or push aam fs xorl out add add or inc neg sub scas jae,pt bound int xchg daa and popa and in ret jle aas into dec daa lods movsl test or sbb daa test mov cmp push fs dec scas fidivl out aas dec adc add cwtl sti (bad) in aas sbb out dec addr16 fwait pop addr16 js aad les cmp mov in add imul xchg inc pop mov into test jge lret stos pop sbb push sub sbb cmp mov cltd out cltd divl ljmp imul pop add and push and dec leave (bad) (bad) out jb mov stc push xlat fdivs lahf fisubrl jp pop lds insl jecxz ret lods dec jnp push in jae pop insl pop sbb adc cltd lahf adc js sarb test mov inc movsb push mov in leave int push lret outsb int int or ss add push push mov stos add dec outsb outsb xchg lahf mov aas (bad) out nop pop decl sub imul in arpl (bad) bound js add inc loope inc leave lret xor sub and mov movsl aas cs jbe push movsb fldcw pop aam xchg jo lods mov sbb add mov adc adc inc mov inc arpl push out popf mov jno mov fmul jbe mov jg (bad) xor adc mov test loope outsb faddl rcr and aam adc enter orb push inc xchg cmp shrb subb jl mov cli aam xchg lret mov mov rolb xor hlt mov or cmpsl sub lock scas sub (bad) or sub jne in lods stos cmp mov or pop sub stc fidivrl dec and sbb movsb dec popf push cmp (bad) dec rclb stc rcll sbb bswap push insl je sub cmp xor adc inc xor push dec (bad) and push sbb lss rorl (bad) dec test out jnp orl jo mov push test mov xchg push jle pop lock sbb enter fcompl cwtl scas mov xchg xlat add (bad) mov inc roll test mov aad (bad) add jmp mov xor jbe and add mov dec scas incb or out cmp inc div test test lahf decl les xchg xchg scas test out or icebp cltd sahf add movb push sti cmp movsb jae scas mov (bad) cmp fs lcall setbe inc stos popa jmp mov push cmp inc sahf push cli ret lock out mov inc (bad) pop rep gs inc rorb adc clc jmp dec push inc sbb adc insb jb push scas shrb (bad) xor xchg ret test or push sbb jle fucom push add shr push mov test xchg and in cltd lods jge std loope call cs inc inc imul das sbb mov ficom jp push negl fstps sub addr16 sbb add ret mov push sbb pop repnz xchg inc inc insb pop xor and jno xchg push clts xchg pop adc repnz mov hlt pushf fmul and enter loopne cli xchg xor jne mov dec inc dec fs xchg hlt and and xor add xor adc or pop pop out pop je stc jge mov mov and and adc or (bad) mov jne mov andb mov outsb es sub je movsb mov lds out adc cmpsl iret pop jp mov (bad) fmuls andb ljmp lcall imul xchg lcall popa inc aas int3 sbb jae repnz mov xor pop sub (bad) test dec repnz pop mov sbb adc (bad) mov pop xchg cmc and xor cs pop inc stos fbld pop add jmp mov lcall mov lods xor es xorl mov and mov mov lea push mov daa and add cmp das aas jnp jl (bad) inc insb fs xchg sbb daa outsl dec ds int3 push and ljmp aam jle test out in arpl aad push cli jnp repz (bad) fidivl inc cmp (bad) ss sub lea iret inc inc mov loopne test inc pusha pop aam xchg mov inc push xchg mov popl sbb (bad) mov imul fs sbb imul pop bound mov inc (bad) xor adc mov pusha xchg pop scas mov cmpsb xor aas mov loop loop sbb inc sub icebp clc jbe lahf jl popf add sub in fidivl cmp movsl sbb xchg (bad) hlt mov cmp in inc in mov mov mov imul or mov push aas sub push jns (bad) addr16 sbb push and jg ds test mov out xchg adc out nop into add jle test dec daa rcr stos xor addr16 xchg push bound jle call (bad) add loope xor inc daa xor dec out dec (bad) jl sub mov in rolb ret sbb jmp xchg cld fisubl inc loopne out push mov mov je iret rorl lret std mov or jae push bound in add imul lret add das fldl mov add cmpsl aam xchg into in int sub mov jae mov mov and leave enter pop loopne std dec in mov and push popa lahf cmp lahf pusha loopne cmpsb and es push jno mov in fsubs lret mov cmp aam sub jns dec (bad) jecxz pop icebp into sbb rol xchg and sbb pop int jmp sbb push xchg xchg je rcl sub xchg out xchg mov dec xor test dec sub cld xor gs sub ret cld add loope cld out loopne out sbb fs ljmp out or mov push pop and aam push or dec push lcall pusha pop inc fwait data16 mov pop jo adc xchg jb jae scas pop cmp jns sbb aaa cmpl mov int3 inc add fildll orl mov pusha (bad) sub insl fs pop mov or out or rcr add icebp stc or dec pop sub frstor pop ja imul pushf inc and sbb add imul arpl test or sub faddl ss xchg dec sti test (bad) and fdivp mov cltd mov call sub je iret adc dec cmpsb xchg outsl call pop pusha add stos inc test (bad) cmpsl (bad) repnz xor and sub lea lret mov xchg jno stos mov xchg std (bad) jle and fwait leave ljmp cmp push test lcall ret jns and sub stos or adc sub arpl sbb xchg sub cmp cmp loope pop mulb adcl sbb push lock push fyl2x sbb dec mov lds cli ret pop aaa xchg dec adc movsb test adc movaps mov fcomps cmc jl lcall inc jge pop pop mov mov pop adc pushl leave stc movsb insb jmp add mov adc or repz jns push cs repz outsl or xchg in xlat fbld movsl (bad) mov movsl aas add ja cwtl mov (bad) mov cmpl movsl cmp push jp mov add adc mov fldcw cmp cmp rclb dec sub xlat push jno jp iret cmc dec gs mov sahf push frstpm(287 sub sub out mov inc jno cmpsb cmpsl mov mov divl inc fildll aaa lea add std rcrb shll jmp scas add sbb test pop sub sahf lahf add jle xor addl mov pop inc (bad) in xor and jmp xchg imul and push xor (bad) dec and adc sbb xchg xchg jne aam xor xor adc ljmp dec jg std in dec push push sub dec cmp mov leave lret insb xchg int3 fmuls mov inc mov push push xchg lock sub sub mov push dec pop jge cmc lcall (bad) call call mov sbb sbb mov push jle cmp das adc rclb outsl (bad) (bad) rcrb push stos mov shrb jmp cltd add dec mov inc fidivl stos inc or jl cltd repz loopne ret leave dec (bad) mov xchg mov (bad) movsl add shll jle jno push push not leave stos xor dec addl pop shll jnp xchg push xchg mov sbbl (bad) stos sub outsl fs les or js bound cmpsb mov ljmp in ljmp sub add test shrb push mov (bad) mov inc mov insl jecxz fildl mov cwtl and xchg out dec push pop mov sbb stc mov adc leave inc popf movsb inc lock es mov adc cmpb loope outsb ja clc mov mov adc mov or pop or popf mov stos repz stos jno pop mov add mov mov sbb dec jp adc scas mov or arpl ljmp add test repnz mov aaa xchg gs popa mov pop mov pop and sub jge lcall ret test (bad) xor and cmp loope adc iret fwait mov dec ljmp jno loope adc push cli push mov ljmp sbb mov mov push notb adcb mov sbb mov push and adc pop pushf js aaa push scas mov xor jmp adc cmpsb or daa ret cmc add leave inc push add or push xchg add stc into add je in sti dec fistl test mov out dec or popf rcr add lcall pop cmp mov movsb fs or aaa dec scas ljmp pusha xchg lret xchg arpl je das mov or add mov jne add mov scas imul gs movsb xchg jmp cmp jmp pop jno mov push fs mov sbb inc out or push inc adc xchg xchg pop rcr inc jns shrb dec js mov push cs add sub clc leave outsl jbe add shl jp sbb cld enter jg mov xchg jmp sub stos or pop and sbb (bad) test loopne aad cld add xchg mov aaa lret push rorl push xor jbe pop movsb inc shrb dec fcoml fcomip adc data16 aas lock jno cmp mov lret push pop in ljmp inc addr16 sti push cmp sbb hlt (bad) push and lret push mov lahf and pop insb jecxz cwtl js arpl lcall aaa shlb divl and es dec sub icebp loopne cwtl pop inc inc adc inc (bad) int repnz outsl flds adc cmp jnp jp jnp in nop push add xor stc or stc aaa flds adc les push fildll sub test dec scas movb cmp fimull jp or icebp pop mov cmp leave ret dec add jno,pt sub lcall out xor rclb int3 mov mov pop mov push cld pop test lret insl rcrb push xor ret jmp in rol test in push clc enter jmp stos or xchg repnz pushf (bad) push xlat lret mov mov or pop mov mov jbe ss xchg ljmp (bad) push ljmp cltd imul dec cmp aam sub bound inc xchg sub fisubr push repz xchg push insl xor jecxz mov movsb mov xchg leave xchg mov test and pop mov leave out mov je pop mov pop lret out (bad) popa insb mov push xor jl les rorl xor cmp (bad) sbb or outsl (bad) fsts frstor gs cli xor and imul add mov loopne jl js fisubrl adc lcall ret andl dec jmp push test stos sbb test xchg cltd loope sbb sub movsb mov xor aad mov loop jecxz adc cwtl cmp pop dec xchg jnp dec cwtl sbb inc sub mov test sbb jae call into adc pop aam and ljmp mov lret pop nop jg and or jb imul pop jb mov push jle data16 mov sbb push inc xor adc push aaa mov inc outsb adc cltd jne mov sub je dec mov clc scas and js scas pop xchg bound inc loop jo sbb jns insl sub mov loope xor int3 insl sub mov mov aam pop shlb in dec shr push leave jmp and mov pop xor pop mov lods jae sbb sti js test sbb jo shl xor sub mov lcall pop mov in pop xchg push or jge (bad) cmc aad insl mov lods sbb ret cwtl sub xchg jnp test mov push fstps and push pop shr out inc out repz stos xor stos pop aam jbe inc mov in push cmp inc (bad) xchg sub out push jne or inc add add es mov push cwtl cmp inc loop shl imul popa sbb adc or xchg in cwtd xchg add pushf mov pop insl mov arpl jecxz inc (bad) xor and cld and sbb loop pop mov pop fcoms xor mov mov xor mov xlat hlt flds test mov adc adc cmp sub mov push xchg insb test mov jnp sbb lcall addr16 enter in movsl cmp xchg jecxz jae stc xlat and adc sbb sbb add inc jns sbb in cmp std enter xchg mov inc add fidivrl ljmp mov cmpsb stos push (bad) mov insb cld add insl pop dec rcrb lret or scas aam xor test fnsave jmp jb push rcll pop jle xor fadd push push dec jne push xlat adc mov jle mov adc mov in repz mov ret call cmp push clc movsl cmp dec (bad) sbb (bad) jmp sbb xor and adc ja cmpsl rcl hlt push lret int dec aad fiaddl cli or mov mov psubd mov dec cmp xor mov scas push dec inc inc push sbb mov mov sbb add mov xchg in jp jns fidiv les push sub inc mov (bad) mov sub ljmp xor pushf sub addr16 loop std adc ljmp (bad) jg sub push inc arpl mov mov pop dec sbb mov push sub xor test cmpsl fisubl mov cs cmpsb lcall xchg lds daa loopne bound movsl lods movsb pop xchg mov lcall fs addr16 outsl out imul jns loope mov dec lcall xorl mov mov repnz xchg push push and mov (bad) dec ljmp stos stc and mov jg inc jo outsl pop fmuls roll jb adc test mov sub xor or mov push jecxz,pn mov fwait xchg mov je mov std xor loope mov clc imul cmp pop ffree adc cld outsl ficoml push and es lcall jnp lds adc and fwait sbb lods mov push lods dec add fcomps cmp dec (bad) clc in int add jle mov ss ret jno mov mov ret mov out inc int3 addr16 mov jl repz repz gs and jge (bad) adc movsb fstp cmp push js dec cmp flds das adc inc cld repnz (bad) xor inc (bad) xor jl (bad) pop imul icebp cwtl or in andl aaa hlt lock sbb outsb mov mov or xor adc loope fidiv push test jne xlat (bad) rolb in mov arpl cmp xchg arpl jmp test ljmp pop or data16 bound aaa jbe fmull and jmp daa cmpsl push repz les les fsubl xor dec add cld (bad) int3 test push inc mov test gs outsb fistpl inc daa push (bad) repz fidivrl notb sti fstpt mov rcrl les movsb test push rolb push shll out pop xchg push (bad) and sbb xchg sbbb xorb dec hlt jno out lcall aas mov sub fsubrl adc or push xor and jae add jbe dec lret xor imul add sbb scas add (bad) mov insl mov test mov mov dec nop adc push add aam (bad) jecxz cmp pop mov sbb xor out push cmp sub mov push int rol in outsb (bad) adc push push jl pop loop push (bad) pop mov push jge mov movsb mov jb repnz dec xchg push inc mov mov push mov mov sbb or pop inc or cmp arpl (bad) leave lock loope in test stos or jbe inc adc pusha jb add cmc ds dec mov mov cmc loopne jbe add mov cli jne into push xchg shrl popf test icebp mov fimull icebp aaa outsl cmp pop inc or cmpsb insl push push movsl sarb mov adc xor loop lcall mov xor cmc (bad) mov aad jmp nop clc mov insb jb (bad) insl xchg mov (bad) testl sub xor pop xchg movsl lds dec push movsl push rcrl mov mov jbe loop stc inc xchg les jle sub sar mov mov addr16 dec pop aas rclb xorl je enter outsb pop push lds push xlat aad sahf mov stos fldl es mov popa popf fcmovne jg popf stos je std inc out ret mov sub mov xchg lea mov cmp invd outsb dec ljmp lock inc std pop add push mov cltd lods in push (bad) mov lret dec iret dec fdivrs mov icebp push xchg cs daa shll gs clc das les inc es rdmsr mov and add das pop pop das push xchg jnp sub xor aam lret and mov cmp jns xchg mov sub inc addr16 pop out aaa sbb and dec sub gs lret sbb (bad) les fnstenv mov jmp adc pop push mov push mov test dec jo scas xor out leave pop sub mov testl cld lret dec mov dec add adc rcr negl mov sub pop mov outsb inc lods push lods bound or jne mov (bad) das ret lahf jmp cmp xchg xlat mov setbe cld fwait sahf cmpsb sub bound adc jp shr inc pop mov fldt add mov rcl mov or (bad) sbb jnp (bad) cmp and mov mov dec xorl mov in repnz sbb mov out and jp inc fs mov out sub inc xor mov mov cld push or push call jle pop mov mov das sbb and cltd push int push xchg mov mov adc nop idivb sbb je sahf mov into xchg mov push cmp xchg add lock dec in popf cmp out cmpsl ljmp add fstl sbb iret add mov mov cltd jbe cmp mov ficom pop stc in outsb cld cmp pop mov adc pusha test inc (bad) adc lds pop in sbb jp and xchg nop adc xor les pushf shl cli inc xor jns cmpsl mov in cltd and mov ljmp sbb cs mov mov adc (bad) dec fcmovne js aas adc test cmp dec jp sbb and pop jae adc xchg (bad) pop and pop mov scas out (bad) push jmp loope stos mov std imul add scas cld (bad) mov mov ljmp sbb mov mov fidivl outsb xchg stos nop add dec xchg out cmp jbe and xchg (bad) or leave push push xor mov pop push mov (bad) in adc roll add jns mov cmpsl out jl cmp cmp mov xor jnp rorb sub adc loop push cld scas call mov sub jg adc pop popa cmpsb hlt mov sub mov cmpsl add test inc xchg lret movsl vpmadcsswd push addl arpl push dec add das outsb sti pop inc andb mov or or xchg (bad) push (bad) aad cltd jae inc inc sti dec stos sub lods in pop lcall pop test enter xchg xor push jbe arpl dec dec leave cmpsb in cmpsb cwtl orl mov movsl insl out xchg cmpsl sbb fwait mov push push rol fs push and dec das (bad) div in fsubrl inc ret add loop push pusha ret test or inc xchg mov sub js add (bad) xchg (bad) lahf adc lds out jp inc es add mov test jge dec int test loopne inc xchg mov fistpl test rol mov sub ret and mov sbb loopne mov out adc fadd scas jne (bad) fstps scas xchg mov sarb cmpsb pop scas push out xchg lea xor jge xchg aaa sbb dec sub jo adc pop xchg inc jbe xor add test fnstenv hlt daa xchg add xchg lcall xlat lods insl sub cmpl xor adc pop lret rolb add adc jmp jno inc test mov xchg jno inc imul lods popa lahf loopne lock rorl aaa mov fisubr push and add repz pushf xor in lds mov add fsubrl push jne cmp test adc mov mov mov movb dec pop test sbb adc pop cmp cwtl dec pop rol jo push cmp adc or aaa sbb loopne push faddl xor xorb (bad) inc aas icebp and mov and sarl int3 sti repz push mov cmc mov (bad) hlt inc std jae or adc xchg mov push xor ficoml cltd (bad) lods xchg fwait push icebp in (bad) cmpsb jle mov xlat loop push stos sbb movsl pusha int3 test dec ja push in push popa call inc add xchg or in xor lds scas xchg or pop mov push sbb push sub (bad) bound ds notl repnz mov scas cmpsb adc aam push int3 xchg inc aaa cmpsb in cld idivb idivb lods adc scas push enter shl dec imul (bad) mov das ss scas inc mov or stc (bad) lcall jl push add movsl inc repnz leave mov jo add xor aaa xchg mov xor mov movsb (bad) push icebp jge cmp or and xchg xor push push out bound aam or out cmp loopne nop (bad) pop adc jle mov sub loop sarl push enter out arpl mov sub push stos ss sbb sbb mov inc repnz scas pop enter insb dec mov mov inc outsl loope sbb or mov cltd clc inc cmp xor or xor inc sub mov call xor repnz (bad) cmc cmp mov enter push xchg xchg sub lods adc xor iret test out cmpsl lods mov cwtl pop sub push movsl xchg (bad) fwait add cs insb aaa or das sarl ficomp inc mov push adc cmpsb mov pusha push sub out xchg and mov arpl cli pusha ret jge (bad) dec cmpsb cltd add int3 push jl adc inc out cld roll dec dec sbb push daa int ficoml ficomp fcmove mov rorl call inc mov mov cs mov ds pop cltd add push pop push out mov mov ret aad in cmp xor (bad) mov lea leave inc mov fcoml and xchg push sbb sub push cwtl sarl roll test outsl push pop pop test and fsubrs rol divb inc mov push mov fmul stos mov imul push lods (bad) and (bad) leave pop mov xchg and xchg adc lcall push push js out (bad) pop inc cmc movsb inc mov rsqrtps std pop or xchg daa sbb loopne icebp inc jb mulb mov popf aam fdivp mov scas xor push mov and fild inc stos jnp pop and shrl cmpsl cmovne add dec add stc fmul fidivrl jg fs cmpsl mov jns push jle lret inc and adc adc (bad) loop cmpsb pop mov aad mov (bad) lock dec imul test add mov cmp and mov test hlt mov jbe mov pop adcb scas add aad xchg aam lods dec mov stos arpl iret inc sbb out mov add adc movl or push addl js mov add inc pop add xchg cli push (bad) lret sti (bad) inc in cwtl xchg je lea popf push pop test xor dec or mov aam sub mov shll and sbb pushf es orl sbb hlt mov imul adc in ljmp pop mov test mov pop int mov jg adc xor adc outsl ret push or dec shlb pop outsl dec xchg cmp or aam add and (bad) aaa push mov jne xchg pop lds int3 cld cwtl cmp cli shrl (bad) xor xor dec es jmp cmp adc cwtl push fsts js in jle out jo jmp inc or sahf sbb test jmp pop lock and rol sbb sbb in mov dec cli dec imul dec les aaa ja cli movsl adc arpl out ljmp xor lods xorl xlat push lods mov mov dec bound dec xchg xor mov rolb mov xchg add jno or push adc sub dec jecxz add push and mov fisubl push sbb vmread sarb stos add outsb jmp mov call repnz test cli (bad) cmp rcrb mov mov jb,pt pushf xlat scas test jns mov push clc jge mov sbb xor xchg pop inc xor mov push out cltd or jbe push cli imul lea ds aam gs repnz sbb mov push sub out in rcrl int3 jnp stos test in out push outsl push stos (bad) xor inc insb sbb incb mov push (bad) ds shlb pop out icebp mov sbb fsubs in pop ja pop sub idivl mov imul xchg mov pcmpeqw (bad) mov xor xchg in add adc in pop sub cmp jae mov ss inc jae add dec adc lret enter arpl sbb sbb or sahf aam push sub adc sub xchg scas push subl rcl out loopne mov cmp mov daa sbb imul inc and insb jne pop cmpsb jb inc in cmpsb fcom and out sbb lock nop lret les mov or ret adc in push sarb or inc jl iret aad jl mov push aaa mov in std fisubl dec stc cmp fidivr ret push fnstcw negb aas jnp pushf adc and pop mov mov sbb (bad) mov push dec xchg mov lret push mov or test idivl push xchg mov push mov les add push and stos adc test aaa les scas int push lret (bad) dec adc pop or (bad) mov inc out add inc xchg (bad) dec jp fwait xchg mov or jle fs repnz mov (bad) out cmp bound add sbb mov push lea sbb rcrl mov aas (bad) jo movsb imul addr16 and insl mov xor push or or sahf cmc jge mov sub mov gs and shrl xor jb or fimull sub mov lds hlt add gs xchg cmp sub cmc aam ret ror jb mov add sbb sbb sub jnp jno jns adc or dec popf mov push adc mov pop hlt mov jmp ljmp inc pop frstor jb jb mov pop ljmp popa jne inc xchg inc pushf mov (bad) test inc icebp lahf and xchg add jp dec xchg cwtl xchg stos mov aas cmc insl fcoml into xchg bound xchg and cmp mov push fwait test hlt rcrb scas push (bad) and inc add jg imul jne mov xchg mov sbb xor adc xchg pop and xor lret jmp test sbb adc or sarb out xorl jns cltd lds push xchg dec add xlat inc fs test sbb or out test addr16 daa jns fs lcall add add (bad) (bad) (bad) jmp add imul gs gs add pop push add popf push add jmp add add add add or popa fs imul jae add or dec gs jb imul add add add add incl xor add add add jne imul add imul outsb popa insb xor orb pop add add incl xor add add add outsl arpl popa jb bound add verw jns gs popa outsb imul add or cld add add incl xor add add add gs outsl jb arpl je jb add or inc jne outsl insb imul popf push (bad) adc add adc add add or ja imul add add outsb gs jb addr16 add adc add (bad) adc add incl sub add push or imul popa insb add pop add outsb gs outsb add add adc rorb add add add or inc outsb jae gs gs add pop add popa imul jae popa imul xor addb push loopne adc add add verw outsb je outsl insb insb gs outsb addr16 add or push je imul add adc incl sub add or add popa outsb fs insl insl outsb add pop add arpl jns add or or or incl sub add or add jb jae add or inc jb insl insl popa bound add or add or incl xor add or add jbe fs je outsl outsb gs gs add push add imul stc pop scas or adc add add add add add insb popa addr16 add or inc gs popa jbe outsb fs add push inc or or or or incl das add add outsb jae jo outsl jb popa bound add pop add jo jb xor add push adc out or push adc incl add add pop add jae fs add add imul lcall adc or add add add bound jae add adc inc outsl jb jae popa data16 jae jae gs fs push jae test stos adc push add add add add adc gs jbe jb jae outsl outsb outsl insl imul add jbe add add add (bad) incl xor add adc add outsl push outsl add or push fs insb jae insb popa outsb add adc mov hlt pop adc add add add adc dec popa outsb fs insb popa outsb outsb jae add push add imul insb imul add push ficoml in fiadd add add add or outsb imul jae add pop add outsb xor add or add adc incl aas add add add je outsb gs jb gs gs xor add outsb gs jae imul imul add push mov les imul adc incl das add add je insb imul gs aaa add add gs cvtps2pd xor mov adc incl xor add push or inc js je jne je add lldt imul gs gs add or and adc add add or dec jbe jb je jb outsb add add push popa popa insb imul add adc add push add add add add or outsb imul insl imul or inc outsb jb je imul add adc adc add add add add or jne outsl jne je add or push outsl jb jne jae add or push addr16 add add add add pop add popa arpl jae add or push gs popa jae gs add pop push push aam rolb adc add add add add or popa insl jne imul add adc inc outsb je jb jo outsl addr16 jo jns add adc or sbb incl xor add sbb add insb insb outsl jno imul add add outsb fs fs addr16 add adc or adc or add add add popa jb gs outsl insb fs jae add or jo imul popa insb add adc or sbb incl das add add or outsl jne jb jbe insb gs or outsb popa jb outsl jae insb addr16 add add adc add incl xor add pop (bad) jae arpl insb imul jb add or dec outsb je outsl fs gs adc add or or push add add add add or insl popa gs jb outsb jae add or push popa outsb jae jb fs add or push sub sub adc add add add add or push outsb outsb jae popa jbe add or inc jno popa outsb imul popf add pop adc add add add add or inc popa popa jbe insb fs je add push add outsl gs insb add mov mov addl sub add and add je jb jae gs or dec jns outsb imul add lret add and incl cmp add and add bound je outsb outsl jne add push add imul je imul gs imul add push add bound movups add add add add gs outsb fs add or inc popa jae addr16 outsb outsb add add inc adc and incl xor add or push imul add push add outsl insl imul gs gs add adc add add add and add add or fs popa jae gs add adc popa jb insl popa je jae jb outsb addr16 add adc pop adc add add add add or dec gs jae fs gs add adc push imul je je bound insl jo insb jae jb add or add or daa add add or push jb outsb jae popa jo xor add or jae popa fs outsb addr16 add or or add add add add add or dec popa insb jbe jbe gs add or jo gs gs insb add or pop or sub incl sub add sub add outsb je popa insb je add or push insl popa popa jbe jae add or ljmp incl add add add addr16 add or inc imul add add in adc add add add add popa outsb popa add or inc jb addr16 gs xor add add add push roll adc incl add add adc inc outsb jae je insb jae jae insb popa outsb outsb jae add adc push gs jbe outsb jae outsl outsb imul add adc pop add test incl xor add das or imul imul add or push gs gs insl jae imul ljmp incl cmp add xor dec outsl jae imul gs jae add adc push fs imul jae outsl jb bound xor add add or adc add add add add push add imul insb je jb add or insl jb gs imul add pop or xchg add add xor incl sub add xor add jo outsl outsb gs gs push add jns insb add cvtps2pd mov xor incl add add adc dec je jb imul outsb outsl insb outsl imul dec gs outsl outsb popa insb add adc jnp push adc xor incl xor add xor add imul add or jae outsl insl popa arpl jne insb jns add push jmp add xor incl xor add xor jne imul add or dec jo popa addr16 imul add push cld or push adc incl sub pop add imul add dec outsl imul jo imul or lret xor add add or insl gs jae insb imul add add outsl insl insb arpl add or or mov adc add add add cld jl add roll roll rolb rolb rolb rolb rolb roll roll roll roll add add add (bad) (bad) incl add add add add add add add add add add add add add in mov (bad) (bad) (bad) incl add add add add add add add add add add add add add push insl inc add (bad) (bad) incl add add add add add add add add add add add add add adc inc add (bad) (bad) incl add add add add add add add add add add add add add mov inc add (bad) (bad) incl add add add add add add add add add add add add add in inc add (bad) (bad) incl add add add add add add add add add add add add add jl inc add (bad) (bad) incl add add add add add add add add add add add add add sbb inc add (bad) (bad) incl add add add add add add add add add add add add add mov (bad) (bad) incl add add add add add add add add add add add add add lods ja add (bad) (bad) incl add add inc add (bad) (bad) incl add add jl add inc add inc add jl add inc add clc inc add add add inc add (bad) (bad) incl add add add add add add add add add add add add add test (bad) incl add add add add add add add add add add add add add push (bad) (bad) incl add add add add add nop aam add add add roll rolb rolb add add add add add jmp mov xor pop ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call push push lea push call call push push push push lea push push push call add lea mov lea mov movl lea push pushl call mov mov call lea push fld1 push fstps lea push call lea push push call lea call cmpl jne push push call movl jmp movl mov mov mov movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl push pushl push call add push pushl push call add push pushl push call add push pushl push call add push pushl push call add mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov pushl mov pushl call mov lea call mov mov add call lea call push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov pushl call push mov pushl call mov lea call push pushl push call add lea call push push push push lea push push push call add movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call movl movl lea push pushl call mov mov call lea push lea push call lea push push call lea push push call mov lea push lea push call lea call movl fwait push jmp lea call lea call lea push push call ret lea push push call lea mov lea push push call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call movl movl andl jmp mov add jo mov mov cmp jg jmp mov mov pushl call xor leave ret call push mov push push push mov push mov push pop call push push push mov movl mov lea call mov lea call push lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov flds fstps xor leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call lea lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov xor pop ret push mov push pop call mov flds fstps xor leave ret push mov push pop call mov fldl fstpl xor leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov push pop call mov fldl fstpl xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call mov lea call push lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov mov mov xor leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl lea lea call mov lea call push lea call lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call lea lea call push lea call lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl lea lea call push lea call ret xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call fwait push lea call ret mov flds fstps xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov mov mov xor mov mov pop pop pop leave ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov push pop call mov mov mov xor leave ret push mov xor pop ret push mov push push push mov push mov push pop call push push push mov movl mov lea call push lea call ret mov mov mov xor mov mov pop pop pop leave ret push mov push push push mov push mov push pop call push push push mov movl push push call mov movl andl jmp mov add jo mov mov cmp jg movl fildl fstpl fldl cmpl jne fdivl jmp pushl pushl call call mov jmp call movl movl lea push call fstps lea call movl movl lea push call lea call cmpl jne jmp mov add jo mov push pushl lea push call call jmp mov add jo mov push pushl call mov lea call push call push push call call lea call fwait push jmp lea call lea call ret ret xor mov mov pop pop pop leave ret call int3 int3 int3 int3 int3 int3 sahf sahf sahf sahf cld out add (bad) (bad) (bad) (bad) (bad) (bad) (bad) in out add adc add out add add adc add and add xor add inc call add sub add jb add cltd add orb add test add push add adcb cmpb add add ljmp add jmp add sub add inc jmp add (bad) jmp add jle add pop add adcb add jmp add lock add push ljmp xor add inc ljmp fs test add xchg ljmp movsb ljmp ret add ljmp call ljmp push jmp add jmp add jmp add add add push inc push dec xor inc dec dec add add pop inc dec arpl add add pop popa fs data16 popa outsb add add pop pop jbe popa push je dec xor add add jbe popa inc jb gs popa jb add add fs imul xor add pop popa fs data16 gs xor add pop pop jbe popa push je inc popa je add pop pop jbe popa push gs jns je insl inc jb outsl jb add pop pop jbe popa dec jb jae insb je push bound add add fs imul xor add pop pop jbe popa inc jb push popa jb add pop pop jbe popa inc jb inc gs jb arpl add pop popa fs imul imul popa fs imul xor imul dec jae outsb add add pop pop jbe popa inc jb jae add add pop pop jbe popa push popa jb gs add add pop pop jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa inc jb inc outsl outsb jae jb arpl add add jbe popa push jb outsb je bound add inc insb insb inc jne arpl outsb inc popa insb insb add add fs data16 je outsb add add jbe popa push gs push inc dec push pop push dec dec dec pop push gs gs jae add add pop inc dec jae jb add add inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add pop pop jbe popa inc js gs dec popa outsb fs gs add add fs data16 gs add add pop popa fs imul ss add add jbe popa inc push inc js gs imul pop inc dec insb outsl add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add add fs imul xor add add fs imul xor imul jbe popa push je inc outsl jo add add pop pop jbe popa dec xor je add add pop pop jbe popa inc gs inc jb xor add add fs imul xor add add pop popa fs imul add pop pop jbe popa push popa jb jne add add jbe popa push popa jb outsl jo add add pop pop jbe popa inc jo xor add pop inc dec popa je outsb add add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa dec xor jns add pop popa insb insb insl jne add add dec je outsb add add pop inc dec gs add add pop pop jbe popa inc jb gs je add 