in ja call in push push xor call cld push or sti (bad) jg test je pushl call mov mov pop pop ret ficom cmp je adc or add enter cli lock sub aas and pop add add push repnz leave cmp repnz mov xor outsl xor jge xchg das lock push push pop adc push fadds ss xor (bad) popf or push add and (bad) (bad) (bad) fildll inc or add jne sub mov xor and in in idiv push push push or cmp add (bad) dec incl or pop push pop lea mov cmp jne movb fucomi out decl movzbl mov adc (bad) (bad) pushl dec jns mov mov mov shl sar or mov adc jg fiadd enter jecxz shl or mov jne mov clc js fwait hlt add jb sub mov inc mov mov movb leave ret or jmp idiv in roll add add orl fucomp add ret or daa xchg adc mov into mov lds out es mov adc cwtl lea movsl decb mov fildll je fs leave jne push and xor mov or and outsl mov add add movsb jo cmp cld add out (bad) outsb test int pop adc fmuls test jae mov std inc lcall jne jns or sti in push lea movl (bad) shrb sbb rcl add outsb add mov push sti (bad) je xchg or fbld mov inc leave xor (bad) or cmp xlat andl push sub je push and jnp cmpl aam xor push pushl push jp push in test fldt bound ret jne jp pop add push sbb sub sub push roll pop pop cmc pop jbe xor lea push sbb js cmp (bad) mov pusha cmp jbe push xor sub and push (bad) add adc xchg in or or push lea sbb pop xor or fs add test adc xor push push clc pop lods sti cmp cmp push js fcomps rolb stc lock mov or sbb fldt or mov fwait push mov outsl js fdivrs insb add mov imul pop insb mov sbb mov outsl fistpl dec xchg and test xchg xor sbb out mov mov das nop adc xchg jbe inc adcb xor (bad) push adc sbb xor or xor inc nop cmpl (bad) iret rolb clc pop fidivrl sub add jb test add or or aaa icebp push movb call faddl jge (bad) stos stos stos lret fdivr insb mov mov xor sti jg mull or jmp mov lea lea adc add add fildll aam jmp cmp je inc cmp jne and repnz push lock and (bad) pushf mov ja pop or cltd fcmovbe push or sbb jmp inc or es mov and jmp adc add jbe dec adc or test in fist xor xchg adc cltd add jo inc sub jb add xchg cmp int cld clc cld sbb sbb aas fidivl and jg dec mov inc cs push add add data16 add test sbb shlb insb pop movsb (bad) lahf in fxch sub shr inc add sarb dec aam sbbb fcoml (bad) jge test std jbe movb (bad) or fidivr or add movsl adc aas movsb jmp je aaa std push sub push push (bad) cvtps2pi jb das xor sbb fnstenv sbb dec or jecxz flds mov pop leave mov jmp push add push sbb sbb or cmp es (bad) std mov sbb imul call enter mov into rcl xchg sbb iret bound pop and cltd scas dec dec mov push sbb data16 decb pushl jae sbb pop adc int fcoml (bad) insb sbb pop add jbe imul insl insb lock and fcmove int3 mov add imul add adc or repz ficomp or pop jmp cs mov (bad) clc mov in repz mov fsubs mov scas out mov pop mov daa mov fistl aam sbb jmp imul pusha repnz into into popa das enter in pop insb xor or pop add cltd in nop mov fsubl push pop fnsave dec pop mov adc loopne cld mov iret pusha or mov in pop xor push push add jno mov jo jne sbb push cmpl daa push aad push insb sarb in sub pop loopne das out jno sub adc mov mov xor push das or pop lds clc (bad) fnstcw cmp push enter cmp mov cmp pushf sub scas imul ja push (bad) cmp ret push fs dec int3 mov adc mov push sahf roll lea sbb push cmc and addr16 dec je adc ljmp loopne (bad) test dec test xchg mov data16 fcmovnb and jne test gs daa test outsb mov jbe add xlat push mov xor call inc xor jae ficomp testb fbld push push in aaa int3 or lock les push notb cmc je pop and in mov bound mov daa mov fistpl pop loopne out cmp movzbl push (bad) xchg shrb inc or es adc rcl int3 cwtl jb sbb xor dec add and pop pushf sti call mov jno lds pop push arpl xor jl popa in (bad) hlt or sti inc les pushw aaa insb lahf mov movups repz or (bad) in insl enter and jnp sub cli xlat sbb mov xor fdivs cmp je out pop je sbb fs or sbb outsb imul and sbb pop lea mov stos push inc out xor and out mov scas add loopne ja cmc je and sahf add adc jne pop sbb add or into (bad) popf sbb or sbb jne fwait lea push push (bad) fucomp mov cmp pop call add cmp data16 loopne or or add or adc dec push sbb fadds divb or popf ss dec sub ja ret add test lret sub je pop aad xchg and inc mov lods fisttp mov test in cli push int cwtl mov mov test inc pushf mov out xchg and cs test sub pop dec sub cli pusha mov jbe pop jl mov in add mov or cwtl les or sbb sbb stc test aam out jl fistp sti popa xor sbb int3 and out js adc outsb ljmp rorb or cmp xor scas push test rclb adc cltd cwtl ss je test out pop push or loope sbb daa mov outsb roll pop or dec sahf sbb mov ret movsb pop dec movsb ds xchg push push pop les dec inc dec test xchg or inc movsl cmpsb lods and cmpl in mov cmp addl shrl gs xor xchg mov pop and sbb and jb das xor das std pop adc add pop jae jmp mov les pop rolb push or je push add loopne aaa stc js mov icebp dec cld and sub push loope pop add pop push and inc mov inc lret mov add xor (bad) or inc insb jno je pop dec addr16 push or popl jae out out fcomps sbb enter xor or xchg mov inc pop mov xor loop jne push xchg aaa sub mov adc ret popa and adcl push and mov in sub push imul add cltd add or dec cmovne lds adc or ds mov inc cmp negb jne mov (bad) xor sbb jmp dec scas das ret and dec aaa pop push mov xor adc in and mov cmp pop sbb adc inc enter mov mov sbb jno inc inc mov sub add outsb sar sbb shl jne inc lods fiaddl js jne,pn or lea scas push out aam sub call sti mov (bad) xor lcall xchg ficom xor les enter push cli and mov leave in push inc cmp mov lret scas mov lea jl dec add iret insb pop loope aam cmp (bad) cmpl pop (bad) movzwl mov mov out pop lods mov aam int3 inc loopne xor sub out sti adcl dec iret jge jbe push cmp pop or push dec push mov mov add nopl mov sbb jae pop xor cmp sbb cld dec cmp mov xor enter jns ret movb nop add test js push in pop outsl jo je push inc pop fist popf add xchg jno ret pop jge call mov adc cld (bad) popa adc popa jb xchg and ret mov mov into mov mov sbb sbb fld mov test inc mov es ljmp sub les push mov (bad) outsb jmp jmp (bad) mov pop xor (bad) stc adc xchg test mov leave enter cwtl mov add jg push sbb cs adc fnstcw cld and push fwait or push nop add mov fsubrs ss mov jl push cs lea sti (bad) xchg xchg push ja push jb push sahf int mov pop outsl jbe adc mov decb mov sub push mov xor shr outsl lcall roll shl pop out xor inc sub ljmp add cmp jb push and cmc clc std jge sbb mov or jg leave dec fdivrs mov arpl std mov es lea jbe mov pop outsl gs push inc cwtl in xchg movb cltd adc pop push out push and movsl sub xor add negb out mov push std or or mov jno shrb int3 or xor xor aas ret call or cmp jne inc add pop add mov lea inc inc mov add add ret andl lret cli lea push mov int mov sbb lock dec adc or dec lock mov cmp retw insb out leave cmp jne imul mov std pop jecxz cmp cmp add cli jge xlat scas add or mov or and pop push mov popf pop mulb inc mov je pop lea xchg jne out loopne jge mov push pop add scas mov sarl mov or lea jge fnsave pop outsl mov push adc xchg outsl cmp test lea test fadds andl pop adc mov xchg xor sub (bad) lea push or addr16 sti insb pop or adc mov mov add push aas push xchg enter dec aaa push (bad) sarb andl jns and mov lea loopne rorb in ds mov mov push fs cli lret push adc clc adc mov pusha mov rorl arpl push fsubrp fildll add or xchg pop into std adc movl fcompl add rclb sub push int3 ret mov mov enter add xchg fcompl jl das rorl dec inc push jo or (bad) int3 adc imul sbb sub lea xchg and fildl adc jmp inc jae cmp or sub clc dec jbe mov mov push or dec lock lea jmp add mov mov inc cmp rolb sub xor int3 mov and inc decb add pop in xchg popf sti in push mov inc lock test int ss add inc sbb or hlt mov in xchg je cmp or and cmp cmp imul mov add lea orl xchg sub (bad) fdivl test aas jnp mov push das or mov mov push outsl gs push decb push and leave (bad) (bad) data16 sub sti cwtl jne cmp or inc mov inc pop fisubr cld add inc movsb insl sbb mov fidiv or ss cld (bad) lea lret in (bad) lock jl pop inc dec movb nop pop sub push mov arpl add rol cli pop cli mov inc push pusha cli mov push pop je jns icebp pop mov cli xchg adc mov divb out or jo cs push into and pop js dec int lea cmp xchg mov out jb sbb mov jo rol mov cli pop aaa jp test xchg andl and push dec push ljmp pushl dec repnz fwait mov mov pop mov xchg data16 stos stos and (bad) gs push jmp nop inc lcall adc jmp push pusha lahf inc mov cld test inc mov insl leave mov cmp xchg sbbl and cld sub and lods push or cmp adc lods xor push je xor cmp sbb js cld mov mov push shrb rorl dec outsb sbb jns jl lret xor loope lcall rcrb adc fldcw movsb xchg (bad) jae aad sbb shrl sbb inc ret fnstcw mov xlat xor or adc jne lods mov sub adc movsl and add imul je or or sbb jmp or cmp jb push xor mov sub test icebp add in jbe rorl mov pop or adc push push lock and fmuls sub xor push addr16 push mov xchg fmuls push (bad) jg pop clc lock inc xor cmp jl testb sbb daa inc xor mov sbb dec mov mov add movsl or mov push js adc mov test movsl (bad) lret add cmp pop test stos inc mov or repz ret adc jne out dec decl add les mov xor imul (bad) rcll fucomip stos xor mov sub mov xchg fildl push push cmp inc and sub shll push xchg xchg inc push sbb rcll pop or fsubrs lods sbb xorl sub pop add jb cld adc jo dec das and dec fdivs mov out (bad) popf ret jb push jae xor stos push movsl adc je,pt sar and cmp jnp sub nop mov mov add pop or pop pop sbb push sbb xchg jle push aas sub test jne push pop pop ret addr16 cmp sbb adc faddl xchg imul in daa add test scas sub sub dec jle dec pop or in out or test enter inc or test loope add fildll mov jecxz push jmp fisttpll pop jnp lock das sub aaa daa jne out xchg std popa and je and sub jne mov mov ret test out cltd insl jbe adc jne je divb cmp mov lock ljmp lahf mov mov add xor xor mov cmp mov add test fistpl ret or sub jmp and icebp adc rclb push or mov add arpl icebp inc test ja mov (bad) icebp and inc or adc fcoms or dec insb mov add mov fstp std rorl je mov push loopne dec jo pop daa push jb add out rdmsr cmp xor pop pop or pop jbe dec outsb add testb adc or xor inc lret mov push or sbb lods dec mov ja sbbl push or inc and and pop sub jb add adc loop sar test jne popa mov cmp andl mov and jo xchg and cmpb jge mov push or pop jo jbe dec in push jmp sub lods roll pop push addr16 pop fsubl mov or hlt fwait scas clc je sub lcall dec or movsb mov ss inc inc and mov lea mov fadds pop xor sub dec xor push lcall xchg insl add push mov jns inc inc jbe jbe and cmp or and mov cmp mov pop jne dec push lea xor bound pushf adc pop cmpsb enter in dec mov xchg jo ss shrb xchg fstps push or jo (bad) rorb push and jge je fsubrl (bad) jne jbe shrl jb or jbe cmp dec sub push ja mov std xchg (bad) ja imul mov dec insl jge fucomip mov sbb jmp addr16 aad and lock adc mov push sti test add imul in pusha add adc mov ret sub add sub mov xchg push sub iret lock sub cmp mov pop iret hlt pop mov jbe mov or add mov sbb iret ja mov ja push pop push pop popf and push rorl inc imul sub jmp and pop adc xchg push and push test leave sub pop es xchg sub adc xchg xor icebp lahf sbb and and sub mov adc sar in (bad) mov cmp push add sbb adc sub jne pop nopl pop cltd pop enter sbb enter fldcw push cwtl xor stos jmp repz fs pusha ss cmp or mov rcl icebp shll imul push sahf mov lea adc fldcw or adc hlt cmp jns clc clc mov das xor sub push inc adc sub (bad) (bad) mov clc jb jp fnop push jge clc cmp pop mov and fisttpl mov cmp dec enter push fsubrs (bad) jb repnz cmp sub jl sub daa mov outsl jg and inc gs mov adc cs mov ljmp push sbb adc test jae test inc pop clc sub test das mov add and ret (bad) movsb adc (bad) jmp imulb lock jnp xor mov pop jns inc jmp pop sbb cmp adc andl inc add pop rolb (bad) nop adcl pop or mov inc imul ja ss out or das lods jl std inc or xchg aam sbb (bad) mull ss int3 outsb jl jmp movl iret call push in xor cwtl lods push fwait jge cmp mov jge adc or mov out lds mov mov jne orl push in pop scas pop js pop mov (bad) jnp adc sbb cs scas lock aas fistl jge int3 jg outsb mov cmp adc jnp in js jle push imul cmpsb pop adc cmp enter pop and xor andb dec pop stos pop ja,pt adc jmp mov cltd out xchg push inc pushf mov inc lock push push jbe shld call mov out out xchg lret sbb xor adc gs leave adc jns (bad) std xchg jns mov add cmp loop loope or and dec adc inc movsl mov and and pop push cs xlat les movzwl jmp mov mov dec pop imul sbb xor std outsb or cmp jne das dec in adc cs pop lock fcoml (bad) pop sbb push fsubrl pusha cmp fnsave in das sti and fist arpl into roll xchg sub ret jae and mov mov cwtl mov rolb mov imul jnp xchg mov jno (bad) sub add (bad) pop mov xlat arpl lcall cmp lock lods adc sub icebp sbb push fwait xor inc faddl xor push mov pop (bad) sbb (bad) aaa test data16 jnp shlb push pop std movsb mov cmp cmp inc or xchg (bad) mov or test and popa mov aaa xor or and jmp xchg jg mov test push xchg and fcomi dec xchg adc cmp jp test and test push gs pop icebp adc popf or loopne pop push inc jne push mov add mov pop jle add in push pop sbbb adc dec sbb enter sbb cs mov dec jne inc test ret (bad) aam (bad) sbb fld xchg pop mov sar (bad) hlt adc loopne add xchg jmp or inc ss fildl mov or jecxz push push pop mov ret loope add or push xor inc push int sbb outsb cmp test daa jmp pop and pop lods xchg arpl push orl outsl std push mov decl js adc aaa fsubrs rclb or push daa push xchg testb or pop jnp cs fiaddl (bad) aas push jmp mov add xor add or xor in divb aas sub adc push aaa mov aad aas add clc inc add sub sbbb out xor jmp jg lea add fs mov enter fs mov push and sete sub (bad) or lods or loopne aam jne out mov pushf xchg clc enter dec inc cs sar or dec pusha sahf out or jg fwait daa sbb sar lea mov and lock fnstenv or (bad) faddl jae mov shrb mov scas inc sti popf rclb mov jl jns lea cmp ja (bad) fwait in out insl shr outsl cmovne push pop sar pop decl rorl jmp and fidivl sbbl xor and int3 lock repnz jnp xchg arpl add xchg sti (bad) or or mov or enter addl add (bad) or cld or fnstcw push decb lea negl jnp mov imul xchg lret or ss daa sbb nop es sti add test inc sub je add je insb je ja mov repz or pop es pusha jg insb jne inc adc scas and ss ljmp mov jne cmpb mov ret add adcb xor (bad) pop popf movsl mov fnstenv and cmp pop outsl sahf in sahf ss js pop inc int pop push and lea push divl sbb (bad) shlb mov (bad) scas inc jbe jae je (bad) mov and clc xchg (bad) mov daa pop xor mov loop push mov xor adc or sub mov xor ret mov jnp je fnstenv pop fdivl mov sahf add rcrb pusha mov das jne sbb outsl insl add lahf jecxz,pn sub sti or inc test call aas out dec es insb sub mov mov mov and mov sub mov fnstsw add cmp inc cld bound test mov hlt xchg sbb add pop push fistpl fs mov jg clc data16 cmp fs sarl cmp pushf sarb jle loopne ret adc sub sar lret or (bad) es cmc inc xchg mov push imul sub jo add mov jle jl arpl sbb outsb je insl test add jle test or insb cltd inc loope pop inc jmp addl mov mov pop bound inc arpl pop faddl imul imul dec inc insl insl lea idiv add es push add imul jle popf hlt mov (bad) aad popa mov xor mov call hlt push adc addr16 adc push cmp aam addr16 push mov std cmp pop sub adc mov inc push mov xchg xchg jno mov fsubr or out inc out ds stos mov xorb jecxz invd test and fs (bad) out dec out lds sbb add sub sbbl test or dec push sub sub loop push cmpsl call dec adc cmp sub or fldl push insb cwtl mov pop cmp xchg fstps jmp xor outsb sbb push sub cmp daa dec cmp daa and adc xor and (bad) nop xor ret xchg mov cmp jmp sbb push adc adc xor aas sbb shll adc (bad) or rclb aas mov (bad) gs cld adc cltd and and test jg jl fnstcw das jae neg adc neg loope inc pop call test ss mov aas inc add andl inc pop mov or adc loope scas jo lea fs mov sub push je mov mov pop clc cltd push push push push subl pop sbb mov jne cmp mov icebp pop call repz inc xchg outsl or sub (bad) jg push into cmpb je outsl lret (bad) movb inc sub sub popw cmp add inc xchg inc (bad) sbb sub inc mov jg jmp dec cmpb inc sub sbb mov jo add xor add es pop mov add je popf inc nop push ljmp lea adc hlt add pusha mov dec outsb or or imulb mov popf sub addl fs lcall lods or pop mov test gs jecxz les je es or lock insl or outsb mov nop or imul cmp lea cmpsb insl les into cwtl cmpsb jne jmp mov sub loopne sub es add je (bad) mov or scas (bad) notl push or lea pop fwait shr mov adc pop ljmp jmp dec and fwait push cmp (bad) add xorl lods sbb lods out orb pushf and pop push cmp nop cmp add push jo push popa jae add loopne push (bad) add in push push inc add iret and arpl ljmp inc mov data16 popf enter int and (bad) jno push dec add lods fildl xchg xor clc dec cld sbb xor pop jle dec or cld adc mov push mov dec cmp rcrb hlt clc stos push add add and adc push jo sbb xor pop fistl jp stc inc cmp xor mov shlb int sbb add mov inc mov div lea pop adc push pop mov push das test or sbb shr fcmovbe and or dec pop lahf lret ret fistl mov or int or jbe (bad) push or stos mov mov mov jmp movsb and insl in sub push lods mov jne loop sbb shl push or ret lcall adc add lret je test push adc sti add jmp fcoms shl push or ljmp xor add add xor and jle aad xor cmp loope jne and fcompl add and mov jbe inc cld cmp je sbb cmp je (bad) je add adc dec push aam xchg sub push pushf adc sbb pop xchg sub fildll std inc cltd inc stos (bad) fwait repz lock push inc and or add jg in mov data16 fist mov push lea cmpl loopne xchg jecxz push mov add pop jo enter js sbb add orl std test pop inc jmp cmp mov jmp or jne rorb test dec add sbb std add and in push lods rorl sub pop or and xchg mov mov jmp and adc ss (bad) sbb adc andb in mov movl lods mov push clc fwait lret or mov and push or (bad) lret sub mov add decb insb xor sbb inc mov aaa stos dec adc sbb mov ss add clc jbe add hlt mov jge and sbb or mov sti jmp pop mov imul add jo lock cld decb sbb (bad) cmp jge add or loope jmp jbe lahf notb mov je shr adc (bad) jne xchg aad stos add mov (bad) sarb pop jb pop cld (bad) cmp inc and jmp and lods cmp mov jmp test lds sbb cld inc cli or adc clc addr16 xor and jbe push lods and mov xchg adc mov cli lret gs jp les mov dec das dec ret lahf cmp dec (bad) jb xchg sub add add or mov mov pop arpl lods or repnz mov xchg adc (bad) je adc addr16 and cmp bound mov xchg jmp or sti lods push push add add jl sbb inc mov add shlb fmull ret jle cmp jb ficom rorb jle pop hlt cmp dec int3 sub (bad) imul fldenv add ds out nop scas ljmp iret xchg sbb add push mov cmp xchg mov jo out add sbb mov jbe push xor push and or cmp xor lret test xchg sbb mov rclb jle adc lcall aam rcrb fstpt aam faddl xor or sti jb pop cmp je or in arpl pushl adc adc sub out fdivs scas xor pop xor push inc sub add push mov add imul loopne loopne popf dec sahf shl mov rolb (bad) cmc mov adc and (bad) lahf adcb popf nop dec movsl pop inc mov mov sbb sub push add xchg adc pop leave sbb inc insl int3 add xchg lahf mov adc loopne pop push lock xor pop push mov clc aad pusha scas xchg cltd lods add mov aam test xchg fistpl andl cwtl push pop rcr addl xor les movb clc push cli add or add or mov inc lret punpcklwd dec sbb push call mov pop or dec bound inc dec dec dec add dec xchg mov lret cmpsl inc (bad) xor (bad) outsb je mov sbb mov inc jg int3 fdivs into add lahf and (bad) ja enter hlt ffree mov in jmp mov loopne mov and add and push push sbb inc fcmovu push sub or outsb pop mov and push adc mov push mov pushf fldcw jbe or out or cwtl pop cli loope mov insb dec or out and lret push or movsb cmp call adc imul lods mov adc or push push mov push inc sbb lret testb mov sbb or insl mov shl or inc adc clc (bad) out sbb sub into mov mov inc dec jne xor mov mov iret adc jns adc sbb push insb adc mov sarb add mov das add mov or inc and out adc lea add push sub inc push lea pop cmpsb push sti mov sub inc add insb (bad) je in int3 mov or cld outsl push push inc roll push cwtl mov xor xchg push push push pop jbe push xor dec xchg popl add lds and add xchg mov hlt push orb pop cld pop add stc jg cmp adc dec mov pushf push sbb bound jmp jmp inc mov (bad) je lahf sbb or incb add lea adc ja fs addr16 xchg push lea jmp cmp or loopne incl iret jb xor jl push push incl les setbe mov pop (bad) jo jg ja aad inc mov outsb or clc and add cmp bound hlt sbb shl cmp push loop pop mov sub addr16 push push or mov lock xor cltd orl mov push (bad) in aad pop dec rolb inc add cmp std jne (bad) test fistl cld dec add icebp mov jmp shll (bad) fcmovu xchg push mov inc clc jo adc mov popa movsb fisttpl test loopne je jle jecxz lds aad fdivs cmp and inc iret je or jge lds test cld push ds lret add cmp inc daa xchg cmp and sahf jae mov jbe stos aas rclb outsl jne mov (bad) or (bad) xor aam sub mov xchg or imul mov xchg mov inc mov stos mov xor sbb loopne adc dec fnstsw or dec add dec ljmp cmpb rcrb mov mov cmp sub inc or insl mov and push mov js mov pop mov and mov mov jne mov and mov sbb das or jbe pop jle xor (bad) aaa cmp mov inc dec jne mov push mov fadd push and jmp mov mov jnp cmpsl cmp cmp mov inc in jo pop adc jmp push (bad) hlt loopne or fsubl and jle mov repz sahf test jno push and sub add pop idiv xchg mov fwait adc add mov mov subl fdivrl push cmp daa push mov push sbb xlat testb ljmp popf add insl xchg mov adc lds js add test jae or push cld (bad) mov push jmp sbb dec sbb fnstenv out loopne jmp xlat mov popa sbb out fsubs cmpsl mov int testb xlat rorl movsb pop push fsubr xor jmp mov flds and jns testl push adc ja movl les push pop in add push or mov rorb add fadds les mov sbb add push popa movnti or hlt adc push ljmp xchg xchg mov xchg xchg add pop daa push inc mov xchg mov push push daa (bad) pop cmp jne or jbe daa (bad) pushl and add mov or int repz mov inc inc mov fldcw les int3 jbe cs xchg sub adc or dec rorb mov push jne cmp lea aam mov cltd test pop test cli xor cmp jnp test inc add add (bad) mov sarl cmp stos bsr sub mov das sar add cmpl sub sbb push pop test dec cmp xlat pop addb inc and and push jo test pop loopne fwait sbb sub mov sbb pop jmp sub add inc mov (bad) fcomps and fmull and and movsl arpl xor push push sub mov or xlat mov in inc jmp ja push sti mov pop out mov or fnstenv data16 or std inc push dec add add adc sbb and sub pop adc inc rcrb or insb scas xor faddl mov adc std and and xor push jp add mov adc cmp cwtl cmp inc inc cwtl sub and sbb xor das adc addr16 shr or pop mov pop imul pop js addr16 fwait je adc inc enter and test xchg test and xchg or enter dec enter dec pop cmp cmpsb adc lea or jns xchg adc push movsl pop dec ss rorl push mov pop cmp int3 adc inc push push adc or pop ss into mov push mov clc ja xchg dec mov lods insb and sbb cld or pop or dec sbb add aad and mov mov cmp adc mov and add mov add cmp mov popf nop mov shlb xchg xchg add mov sbbl adc shll and dec lcall xchg lret xchg int ss xchg aad jno add iret xor push push mov sbb pusha push adc pop pop or in mov dec call dec es jae mov push adc jns push cltd fwait xor xchg mov addl ja add push pop loopne in sti inc lcall push mov xor pop int3 or jecxz inc out mov push mov pop std movb adcl xor xchg sub leave push cld stos inc push fldt or clc push push push enter jo jecxz or cld cmpsb outsl cwtl and mov mov push mov dec stc xchg mov mov add add mov add loop pop bound jmp cmp mov (bad) mov fldl and adc mov out sbb add adc mov or add lret inc xor sbb jl push pop and pop rcr call popf mov out shl push pop (bad) jg arpl xor inc cmp mov jmp sub into pop int3 in jbe sbb iret jp pop test cmp dec test fistpll lock xor sbb sub lcall (bad) inc mov orl jo add and pusha cli movsl mov insb add dec das and bound xor icebp mov jp xor sbb outsb add shr or cltd lods das cmp ljmp jo xor xchg dec sub sbb lcall hlt add lock inc cmpb je mov cmp je cmp mov mov je mov or mov sub mov mov outsl inc inc outsl addb push push ret jg add lods mov sbb lcall fcmovnu fcoml push (bad) or or je pop sbb lods lret sub lods test sbb jnp icebp or pusha xor ret inc into push sbb push lods pop inc lock add fdivl add repnz jne push and outsb jne je icebp xchg mov mov je xor push inc add ret add fsub mov jne or jmp cmp cmp imulb adc jle mov adc xor or mov js loope popf and push ret fsubrs daa mov xchg or xor push mov mov jle push sti or jne sub xchg fnsave stos aam add iret nop insb daa push lret cmpl push pop arpl cmp insl lods adc cmp mull jmp push push push push mov push and mov inc add sub insl mov lret sub add mov add pop pushf mov push stos cwtl fsubl mov in add loopne xor (bad) lret (bad) xor lea cmp and fiaddl test jne test inc std add mov xchg ja pop xor sbb xchg xor or inc mov aas sbbl push ja jmp aas in jne xchg loopne push and popw xor cmovp sub xchg pop add jle sub (bad) pusha dec rcrb sbb shrb cmp popa mov cmp push andl xchg jp pop pop add orl popa adc jle or rolb ficoml into and and push push push push push xor sbb and fs rorl or push push mov push pop mov dec bnd lea arpl divb pop mov or int3 fcompl push js subb std ret or jmp popl fidiv testl xor or xor rcl jp subl je adc sbb jle pop and mov mov sub add add sub call icebp push mov popa sub lahf push fcomps xor pop push ljmp mov and out pop loop inc push in push push mov in add sbb xchg cmp pop or es or and inc jne jne sbb test out add push mov and add (bad) mov mov xlat das pop test push rcl or sub pop or mov (bad) xor (bad) mov or inc loop pop push lea psubsb push pop pop pop pop insb jmp mov and cmp pop mov scas popf mov stos fcmovnb push int push or cmp pop popf xchg sub xlat sbb stc add int lock jmp inc push adc or stc test dec push pop lds rclb pop loop cwtl pop push in mov test add sbb andl add movsb (bad) loopne cmp repz int fsubr sub in in pop mov sub and fstp or shl mov lcall pop jmp sbbl cmp test inc push add sub mov pop je mov add mov mov push decb sbb inc hlt add and (bad) lds or adc imul lcall add adc xor inc push fldt xor or push jecxz or pop cli mov mov mov push sub mov mov inc dec mov mov push ljmp ljmp js push mov das or mov insl (bad) cmp push and in aas mov adc sub xchg addr16 and sbb add or push (bad) pop pop fadds and (bad) sub fwait add test mov ss pop int3 xchg dec hlt lea dec mov insl and or loop cmpb int3 or add call insb ret sub rcrl and jae cmp das push pop aad in cmp mov inc (bad) mov xor das dec cmp jae lea cmpb mov jle adc dec mov jg insl incl orl mov or mov sbb dec fistl dec aad pop pop mov mov jle dec decl cmp cwtl popa enter push mov int inc nop (bad) (bad) inc js lods sbb ds inc in in and mov mov scas push mov inc adc or inc scas jbe push mov jg jl push dec pandn push jge inc cmpb push lret mov subl jp adc add fsubr inc ret (bad) mov negb push xor cmp and or sub adc cltd hlt push fldcw sub adc inc in adc lock out scas dec sbbl rolb mov dec in (bad) mov and pop or ja add ljmp adc xor rorb push mov jmp movsl adcw sbb arpl arpl push flds pop adc clc or pop inc jge arpl mov fcmovu cmp paddd add sbb pop or pop xor (bad) imulb adcl and enter sub inc sub divb popf popl sub or and xor jmp cmp sub in and incb out fdivrl pop sahf lea mov push or xor sbb xchg (bad) mov push repz in lods addl addr16 jg push pop gs add subl pop sarl inc add inc push fadd js sbb adc xor mov stos push sub je sahf in and sbb into test cmp outsb std adc fs push call das and inc push sub xchg mov push mov aam test push add xor sub jns adc pop pop das stos inc pusha orl fidiv or jmp sbb pushf insl (bad) sub sbb mov stos fs push pop push and jne int3 cmc or cmpsb (bad) and subl push mov add xchg mov inc lock jb neg arpl sub cmp int or mov test lret mov lret add stos pop jnp pushf mov daa ljmp add je je ret test sub push mov lock int xchg dec adc jmp sbb stos xor vaddpd test cmp xchg (bad) or jae fist push mov (bad) cmp and mov push lea pop addr16 add cmp mov sar mov aas add shr and (bad) aaa pop sbb sbb pop aam int cmp jo add push das mov jno nop (bad) es add or iret inc fildl dec push and popa fnstcw add iret xor mov cwtl fldenv pushf cmp push popa sbbl jl pop pop sub xchg test iret add daa xor or rclb addr16 mov sub mov xor sub js and mov std stos std hlt mov andl hlt push jmp jns jg les push sbb sub add arpl insb movsl sahf push jo pop sub test cmp inc decl mov push cwtl or (bad) cli lcall lea push arpl pop add (bad) cmp int cmc xor insb dec sub mov cltd packsswb cmp jno add lea cmp sub mov jl incl push add add add test or add cmp xor ss clc jo cmp mov xor cmp rcrl mov fisttp mov jg call jo sub cmp test pop sbb push add sbb pop push (bad) sub xchg pop pop mov loop outsl or movsb pop mov and push mov sbb cmp mov pop test imul std leave lret xor sub xor pop mov es pop popf loopne or mov cli dec xchg add adc adc es lret xor lock sub and adc inc add fiadd fadds mov fwait sbbl adc loop and pop nop (bad) mov inc add stos movsl btc fcomip cwtl mov inc stos adc out aam fisub sbbl mov movsl adc jo xor in mov adc push adc cmpl add add push cmp jne pop mov fs fcom stc pop cmp cmpl xchg in mov mov cmpsl mov xlat loopne push aam test and inc xor inc mov aam xchg jmp dec aam inc push sub ss fdivl das cmp aam es inc xchg sti mov test add mov sub jg jmp adc adc out or or mov dec cmp push push xchg insb push cmp sub dec cmp insb push inc sub adc inc dec push sahf mov adc mov aas sbb and fs xor adc dec or add xor adc and scas inc je outsb jno or sti enter fucomi and push jne test cmc and sub sub push pop adc cmpl getsec mov fisttpl std imul jo add ror pop cmp xor cs loop pop push jne les or mov mulb inc xor mov adc test push adc adcl adc xor mov xor cmpl mov loopne out hlt push or (bad) std lods inc sbb das cmp jne inc ret xchg popa jne jnp lcall lret lcall bndldx mov fdivl adc insb in inc jmp nop loopne jo mov (bad) jbe je adc test fmull sub mov test adc rcll cmp jbe mov mov mov sub sub sub jne or pop aaa mov outsl adc (bad) ja adc cmp jb rep jmp movl sbb push in adc sbb add push jbe push jmp addr16 (bad) loopne pop fs adc or add adc mov push data16 mov int add mov pop mov sub gs add add nop and pop aaa nop mov movl dec shll je insb into mov inc (bad) in call dec in in lock hlt sbb xor clc cld cld adc xchg mov clc or push add out mov cmp mov or adc adc sub mov addr16 cld andl jecxz ja insb rcll jns dec xchg stc mov js and addb fstpl imul add outsl push out add add add xchg adc and add lea sub ret outsb popa pop push and sub mov inc dec push arpl sbb sbb adc cmpsb imul cmpsb imul mov add scas and ret ret mov xchg push scas lcall mov inc lret frstor outsl (bad) mov sbb inc sub fnstenv push mov push clc xor sub push rcrb nop pop sub mov nop lods fisubl test sub pop (bad) into add jp les push out out jb push shrl sbb or jl jns pop arpl pop je and inc add sbb andl and push add add rcr pop xchg pop fs (bad) or fistl dec hlt movb pushf inc cmpsl add xor addr16 mov mov inc sub (bad) add xchg inc mov inc xlat imul and inc mov sub ficoml icebp cmpb sbb shrb lods mov pop dec je loope mov or iret vmread mov fsts add jmp pushf outsb adc jl mov xorl mov pop lock mov (bad) cwtl ret out push push xor ja dec loopne outsl push push push fdivrl and jl ja push aas add push add sbb mov push or (bad) outsl mov outsb es pop es mov jne jmp faddl push jmp and push std jnp xchg push and sub push les or adc or lock loopne xchg or inc jecxz pop js mov cmp inc xchg inc cltd adc add in (bad) mov in cmpsb (bad) add cmp add js xchg mov cmp repz sbb cmp push xchg push xor jge jmp lret cmp adc cwtl je inc aas push jb mov pop aad or add cmp jge xchg fldt mov cltd insb add mov imul dec add pop adc cmpsl loopne lahf adc sbb cmpb push mov loopne push cmp test in ret ja adc push push xchg mov sbb sti add pop inc push test movsb lcall dec cmp roll cmp sub inc mov test push xor sub mov sub push push sub mov pop and push (bad) loop repnz dec fcoms xchg push dec push mov jmp pop push add in hlt outsb ja mov cmpl inc mov je ss in or insb test cmp je inc cmp or fnstcw mov push adc lea movnti jne push movsb inc ret xchg add inc add cmc dec mov aaa mov daa lea call or add icebp dec mov pop repz sbb daa push add orl mov push data16 hlt fsubrs push and movsl or pop pusha mov xor test mov and jle andl (bad) fidiv add sbb in in aas cmc lods mov or or inc fs jle cmp out nop jno inc jle stc pop cmp (bad) in nop lahf (bad) ds xchg aas cmp mov cmp cmp cmp mov fs stos xor repz inc loopne add pusha jnp iret pop lret sbb mov lea push adc jl and stos movsl and ffree add and and xor (bad) xchg lods cli cmc mov loope add and xchg xchg shrl pop outsl jne pop adc sub mov jo jle popf pop sbb cmp cmp cld fadds add ljmp mov clc pop xor lods jmp fdivrl inc push jmp xor ss lahf xor and inc cmp or sub mov mov (bad) outsb les repz jl adc pusha in push xor mov and or in fdivl cs push push jne repnz sub inc mulb adc adc imul adc bound mov inc adc cmp test inc into add push or push push xchg dec adc adc mov pop out and jge lds popf sub outsb test add adc sti and sti or dec mov sbb dec out jmp dec dec push push cltd repz jmp sbb jl popf xor mov fidiv add inc inc and mov fcompl data16 ficompl roll add jmp mov into add mov shr out out mov pop adc add leave jne lret pop mov push mov inc (bad) insl add sub in data16 dec or jmp and sbb xchg sub pop imul xor jge jge adc nop mov or sbb jnp sbb adc jp mov jo repnz in mov pop fstpt sbb cmp aam js mov and jbe (bad) lea (bad) fwait ljmp stc pushl mov shl lahf cpuid ss pop add sub aad xor inc dec mov arpl pop add addl fdiv adc ja inc ja lods push das jb je mov xor add add lock stos (bad) jle ljmp stos or dec pop sar xlat mov cmp pop rorl mov mov hlt and add (bad) in mov xorb or call dec push mov std xchg and push push pop push je test roll push xor loope (bad) mov and mov orl fldt inc cmpsb or or and and mov idivb and add int push in mov mov lahf call push iret add je add mov fsubr fidivr in outsb jge mov pop in lahf dec push addl pop pop arpl pop push xor pop add xor lahf pushf out jbe mov or imul cmp jb xor pop inc bound or aad int3 fstpt inc add push sbb call mov fimull or stos sbb mov or stos nop mov movsl bound ja inc mov std insb ret or mov lret push scas push jecxz dec sti jl fistl idivb mov inc push jnp push orb jmp movb sub sbbl pop sbb popa (bad) cmc mov cmp leave ss inc push ds fwait xor js aas xrelease inc add add int or xchg je (bad) mov es xchg inc add loop add jl or pop push xor cmp imulb (bad) jg rolb mov sbb jp or xor add push pushw loopne sbb hlt inc shl aam dec add add add outsl sbb dec mov mov pop push or into movsl arpl push cmpsb dec dec mov inc stos arpl xor pop adc lock dec (bad) push push xor cmp insl mov dec pop jmp test aas (bad) or fucomi push push or fild pop cmpsl mov lcall push enter xchg pusha adc fcmovnu adcb out jmp pop push add mov mov dec push popf sti test adc or iret add jecxz cwtl lea and outsb push adc leave ficomp inc jge add sbb mov roll mov test add shll add lock xor loope push sbb mov or lods add (bad) jecxz push loopne sbb and mov mov fstp and xor and sub orl es ds orl movl lea subl (bad) or adc pop and loope inc mov cmpsb test or mov or cmp and pushl rcrl or loopne mov icebp lret enter jbe sbb sub add mov rcrl shll add mov adc cmp push mov repnz sbb das mov insl addr16 call test inc test lock xchg insb in pop adc sub (bad) std xchg stos leave and xchg add cmpsl je push ret int3 mov or arpl mov sarb clc mov cmp xorl sub push mov sub inc pop outsb cmp ljmp mov mov add pop je or or add sub cld pop cmp es jne arpl push or ljmp push scas cmpb mov or or popa bound mov or js dec inc pop mov sbb (bad) je dec jmp fcmovnb movsb mov push mov jae sti jbe add pop and add mov adc mov mov enter mov leave or push or inc xor inc (bad) push jmp or sub cmc inc mov push ret div mov out xlat pop push ret mull mov pop add jmp or and inc incl rcr shr rcr or hlt div das divl mov mul sub out pop popa sub mov jbe dec sub jo xor sub ficompl fsubrs sbb lret addr16 push mov mov xor call push xchg ja and inc pop jmp rcll mov movb fs or stc adc ljmp lea mov push das inc xchg test mov or sub and enter add adc mov enter or scas loope ret test rcll push and or or pop out loop ss ret sbbb jae sbb mov or scas jl stos add add cld cmp ja mov pop add sub (bad) mov dec insb dec (bad) mov dec inc dec adc push and roll inc or cmp adc mov into cmp dec push jmp andl push aad ja sbb je stos jbe push push loopne xchg les add loop push xorl idivb cmc aas mov mov push or cmp pushl push sbb dec lock dec or and (bad) hlt mov fadds pusha andl icebp dec push movsl jp xchg mov xchg inc jne inc sub cmpl xor jae cmc mov sbb pusha jl sub jnp pusha pop rorl sub mov aas push sub out lds xor sub push daa int gs inc push sbb mov inc ds adc lea cmp je inc rorb insl push aam hlt or mov jmp push jmp das jne or ret clc pop rolb sub jmp or xchg jns pop popf xchg nop jge or flds push sbb sub or gs dec aaa hlt or fmull xchg sub inc js lods ror add push inc pop fwait mov (bad) rcrb mov fist jl les enter or add movsb push cmp pushf aaa push sti icebp imul add mov leave or pop adc add stos and xorb clc fdivs add repnz pop pop add popf jmp add or rolb pushf clc sub jmp out adc xchg adc jmp pushl fidivl xchg xor lea fsts sub mov call or ds int3 jmp or enter js or sarb mul mov bound lret (bad) xchg loopne mov shrl in dec lock dec adc int3 int3 or roll rcrl sti (bad) push mov decl aam inc pusha pop jne or ds mov sub cwtl adc push pushf add cmp mov mov push pop mov (bad) jmp out and lret inc mov ret add loopne sbb mov test bound in mov outsb xchg push or fs sbb pop or pusha ret aam push xor push jmp roll shr mov push push rorl pop ret rcll insl xor xor out in push mov push xor pop inc movsl cld in sbb cmc jo jp dec push stc jb cmc add or or sub sbb ja call decb adc jbe add jnp or or test shll inc or dec pop pop cmp xchg sub sub sbb inc and call push out jg rcll mov push (bad) add add stc jns xor les push or out add aas fstp inc sub pusha lcall push sbb sub mov cmp or pop adcb cmp jge inc push test insl sub and adc cmp cmpsl inc and (bad) and or pop sub sub add jmp and pop arpl sbb pop xchg jge inc xor int push mov test mov adc sub xchg sbb xchg sbb push xlat adc lret lea fsubl lods push xor inc movsb mov adc or add in mov inc stos sbb test out inc xchg push or adc add (bad) mov insl mov mov data16 ss ja mov jge push jmp mov or aas imul mov clc lock mov mov pop (bad) and push push jmp and (bad) hlt fnstenv pop fdivl jae or movsb gs lret mov out xchg sub mov aaa lods mov mov xchg test mov sub sbb and mov sbb and std sub jle orl mov mov cmpsb mov test ja pop leave add sub in sbb xor rorb xchg jo and xchg aad adc nop sbb push add faddl add orl or adc fmul and ss and enter and sub orl xor popf adc enter inc and inc pop dec orl dec push push pop or enter pusha fs and and mov or mov dec test dec cs cs pushf mov movsb test pop jb and cmp mov fcomp loopne in dec in in in dec cs hlt leave dec cs xchg add mov pop jbe or adc adc pop jb and leave and leave and cmp xchg pop jb inc dec mov xchg lret cs inc push push xchg dec cs push adc sbb fadd scas mov push push in adc enter xor jbe cmp push ss xor dec or adc (bad) adc jl inc inc push sbb test mov fs cmp cmp movsb inc fs inc test lods fs inc push dec mov movsb cmp fs int3 pop pop inc mov add aaa push or stos add jmp sbb adc test fisttpll gs mov inc sar and cmp loopne push shrb add ljmp clc sub repnz mov mov inc sbb jge add dec jne xor arpl mov rol jge andps cmp outsl xor add xchg mov popa or bound jne adc outsl adc xchg gs add js outsb (bad) aaa push ret nop sbb (bad) icebp add inc pop out push rcrl jmp out jl addr16 fcoml add bound rol lds test inc aam jl cmovb lahf (bad) push xor lea xchg pop js sub rcrb mov cld jne mov or lcall call incl inc orl ret vmread add jmp or cmpsb mov cmp std jmp cld xlat cs cld jmp insl dec jmp jb fisubrl aaa std adc inc cmp jb popf add fwait sub add or test pop jae dec (bad) cld nop adc in clc or lea push jge es ret mov andb cmp sbb jge pop lds divl sbb add or inc lcall inc add call sub add mov push mov dec pop movsl xor js mov test and lods lea cmp outsb aam adc int (bad) fadd inc call jmp fadds and ds xchg add cs fmuls mov movb lds pop add (bad) inc cmp adc ret mov mov mov and and decl sbb mov sbb mov push arpl inc push push hlt mov jmp aaa add sbb insb call sbb int3 sarl xor or adc push cmp leave dec xchg pop mov aam ret enter aaa fdivrs mov lods pop popa pop mov fldt mov xor add dec or inc sub mov push cmp popa loope addr16 or cmp pop or mov or cmp ljmp shll dec sbb pop fidivr lcall dec add or sbb test sub test and cs aam jmp mov test jo adc scas leave push fmuls mov sbb aaa sub sarb fs add mov in or or dec jo mov mov and sub gs gs lds xor test gs mov cltd into inc adc (bad) test gs push mov sahf fsubrl (bad) or insl inc mov or sub or lods xchg mov mov cli fs sti sbb mov leave add pushl sub addl std andb adc mov push dec jle (bad) mov pop or xchg add pop rcl loop push xchg and pop push add cmp movsb test jns lock (bad) test sti sbb sbb (bad) jbe add sbb ret pop jmp adc sub test mov mov fsubl (bad) mov dec in push push fstps push adc mov jecxz cmp and add add lods add jne xchg incb add sbb (bad) mov inc nop mov add push stos fisubrl cmp (bad) pop and cmp insl lods cmp jns ss lahf (bad) (bad) jbe add jbe fiaddl pop push bound outsb fistl push or test inc jne sbb jmp mov mov push push or dec xchg int3 push adc add jge fist sub pusha pop ja int xor push pop sti into not sub cmc pop pusha fisubl int or movsb aam xor xchg jge dec mov adc imul stos and xor jp jne pop divb lret inc mov cmp bound in test mov std jle ret mov ds lcall out mov sub mov mov in add mov jp or fistpll sub and (bad) enter mov push lods xchg cwtl xor and xor and aaa add shl and or mov (bad) lret ljmp ficomp xor popa pop je and js fidivl dec or and popa or mov add dec sbb nop pop pop iret pop (bad) adc mov and push xor mov icebp jle fwait add jae sbb aam jne cmp (bad) rcrl inc aam cli and and in cmpsb (bad) sbb jo and push js int3 lret push or icebp fadd mov (bad) (bad) add mov cmc pop and add shll or mov (bad) xor inc (bad) add fstps in repz test in cli (bad) or cmp sbb xchg sub cmp es test dec loop sub inc sub push push add xor mov adc inc andb sbbl add gs outsb sbb sbb invlpg xchg pop fldt test outsl ljmp std sbb ds cs loope shlb lret and inc fdivr ja cmp jb add add jmp adc jb icebp mov and push clc lea testb push xchg fildl cmp into sub jle inc xchg out (bad) fdivrl je jb pop mov mov jne outsb xorb inc and xchg xchg xchg xchg dec dec dec dec cs xchg xchg dec dec cld cld xlat mov push inc into jb repz and ss inc sarl add lock jo stos jmp (bad) dec and dec aam shrb inc inc aam push cmc xchg sbbb or hlt cmpl sbb daa push lahf adc icebp mov clc add add stos (bad) push cwtl push hlt or gs inc cmp dec fcomp (bad) adc xor adc mov leave mov in inc push inc mov jbe int inc ss inc cmp and xchg sti popa clc jmp mov fs repz mov inc cli pop js cmc jne scas popf sub xor mov je enter add stos out mov add fldenv js mov (bad) sbb outsl xor add cld outsl adc pop and push sub and sbbb add popa (bad) out dec addb push push fs and cmp arpl or cmp sbb push xor ficom mov push push cmp mov outsl mov inc mov mov ss aaa pop xchg sub inc mov or jmp mov push sub cmp jno jg xorl or push or push xor fsubs rorl lcall aaa mov or push push push pop pop pop pop pop ret xchg stos push cmpsl stc push cwtl rcll stos xor sub decb es or call xor subb inc mov push or xlat icebp push push lret (bad) or push pop test push and rolb outsl or pop in (bad) mov cmp push roll fsubrs fadd or mov mov push push out int3 lret icebp and dec dec orl adc inc (bad) xchg sub mov sbb adc mov pop ret xor aad mov cmp pop stos int or add mov in shrl mov dec pop (bad) xor and sbb jne pop push and scas cltd adc pop pusha xor repz cmp (bad) mov (bad) lock xchg pop mov or cmp lds cwtl orb or or xor mov adc mov insb repnz (bad) sbb jge push mov stos shrb mov loopne lds xchg xlat orl or cmp ljmp sbb sub stc or xor fwait adcl notl or dec cld or mov mov xchg jmp sbb cmp cmpsl push sbb sar dec pushf add test mov add std push pop adcb sti sbb mov mov scas mov add pop ret movb sbb or cwtl xor in xor fstpl cmp and loope cmp sbb mov xor ret pop test jg pxor push cmp icebp sbb mov shr je mov pop jg add add jle out xor pusha jo mov aam test push sub lods inc inc je push movsl (bad) or aas push icebp xchg mov pcmpeqb pop ljmp sbb js in lods out sbb cli pop pop dec fdiv fildl fsubrs xchg mov sbb inc dec shr add (bad) (bad) rorb sub enter xorb jle push push loope lock push cmc jle mov pop mov cmc xor dec ss mov mov push add inc enter leave movb sub cmp jne adc shlb shrl cmpsl fmull push data16 push and sbb lret dec mov (bad) jge add mov xchg add pop cmp iret jl xor jae ret adc push push push (bad) add cmp jb jl outsl (bad) cmp mov (bad) lret mov fidivrl or xchg mov xor imul and sub pop cmp push mov add stos dec push cs not popa jno push jge les or sub pop add ret sub cmpsl inc jmp and add jne lahf in test adc in sahf and into push inc or aad push dec js push mov mov jle or or in xchg sbb inc push cmp les mov in (bad) dec push jmp rcl pushf dec cmp gs fwait dec outsl push cmpsb imul xor mov jns dec push pop outsl inc add push cmp shll pusha jle je outsl ja mov lea inc imul mov outsl pop pop outsl pusha lea lea and nop pop add movsl test rorl push mov sbb push in enter or or out pop test maskmovq negl ret mov sub sub popa movsl push mov push mov loop mov pop inc dec pop mov lds scas loopne push shr pop push add mov inc mov mov ret push cmp xor xor adc jo add insl test pop push xor cmp mov pop in loop xor mov aaa out jne mov dec sti je mov lea inc mov xorl cli nop push lods mov sbb dec xor ljmp sbb sbb clc push xchg and leave adc add mov xchg (bad) mov sub (bad) cmp and mov cwtl icebp subb xor out adc adc mov adc push and add xor sub idivl cmp sbb jae leave invd cs movsb out imulb and lock (bad) sbb dec push xor popf push sub call push ljmp mov cmpw out mov dec jne aad sub iret sub add shlb in inc push xchg dec ret inc sbb imul movsb fild lcall adc mov xor push mov jmp and push cmpsb push icebp mov xor mov daa jmp jnp repnz or mov jnp sbb jle push pop popf (bad) push mov inc xor outsb loopne cltd or push push inc dec (bad) pop or and cmp push xor sbb clc dec pop pop sub pop fistp pop dec aam mov aam pop (bad) mulb add add push mov mov push push cmp add xchg add cwtl cli aaa push mov test (bad) adcl lods push cwtl cmp in mov jno popl add les push aas ljmp mov or scas fidivl pop outsl adc push push adc call (bad) rcrl or pusha and adc nop jns or adc pop loopne fsubs dec mov daa dec je mov and (bad) pusha mov aad shr inc push push and rolb sub adc inc add sub shrb clc enter pop mov mov or and sub lea mov xor dec lea inc jl inc mov and pop jl add mov mov enter das xchg and fild sub sbb js push das ds mov push addr16 xchg sbb xor or sahf cltd push out sub mov cmpsl arpl or inc popf or leave cld and loop cld sti lcall roll mov fdivl das sahf add (bad) or jmp push mov cmp fdivr pop lods (bad) jmp cmp jg jl jae push inc xchg push cltd mov xchg jbe or dec pop dec cltd mov lock imul stos and decb decb in call adc push inc sub pop sub ficoml fstpl inc je stos add int push pop shll adc rorb sub icebp sbb into mov jns inc mov xor mov cmp (bad) je addb add les or dec ret push fidivl and adc add incl in hlt call jmp sbb and scas add mov add mov push pop adc aad mov mov add cli ljmp mov push mov mov pushf adc sub rcll ret dec es lock add and es mov add inc daa or cmpsb sti call lret jb cmp ja add cmp or inc inc inc jecxz cmp mov lods popf or neg mov pop (bad) int3 jmp shrl push outsb or test mov (bad) push adc jl shrb mov mov sub adc mov push lds inc jl cmp insb add lahf stos jo mov cmp (bad) dec inc and push and add out sbb add les arpl sub mov mov dec pushl cwtl adc jbe mov push and fild dec jb lea or and rolb push repnz clc add sbb inc hlt dec push jne adc aaa test addb test pop cmp sub les adc dec call and adc in and mov cmp cmp (bad) dec into mov cmpb xor mov insl mov add add inc cmpb mov pop jmp rolb push add clc adc aad ret inc outsl or negb pop pop sahf pop dec xor mov add jbe fdivrs push fucomip lahf adc mov rclb and xor hlt dec xchg outsb sbb cmp sub pop and popa loopne fdiv push add dec sbb fldl scas jne push int mov jp,pn push sarl jecxz sbb cld loopne nop call lods aaa mov test arpl jbe sahf outsb push inc cmp jne inc or jb sub je cltd push mov mov xor aad mov jbe sub push out ret js popf and ror mov and inc dec daa sbb in push adc jge fldt stc xchg je roll add std adc xor std call popa and insb outsl arpl imul add clc sub or add mov sub and fcmovnbe mov inc add push add add add jg iret add sub cmp pop or aaa xor push push pop cwtl ja test or pusha movsl (bad) or adc imul add xchg inc outsl jb js je mov lret push jb jae (bad) add add jb gs pop sarb add add movsb imul sub insb mov jp add adc int movb pop das das adc push pop inc inc insl jne pop mov gs bound jbe leave fstl add pop scas loope pop jo and xchg (bad) lock pop jns outsb jne cmp jnp das imul adc inc pop bound jnp aaa popa adc mov popa ret cmpl sbb sub jns ja addr16 pop (bad) or sbb mov andps aaa pusha adc fs fldl mov xor pop enter (bad) outsl insb fdivs inc (bad) out sbb aas and insl insl cmp xlat fsubrl sub dec and jns add das das or dec add or inc gs bound dec outsl jbe jg mov outsl or jo adc jne jne or sub dec sbb outsb enter clc inc jo imul bound out mov popa outsb or push pop neg jnp dec inc inc aaa jns jnp mov and insb cmp sahf dec pop or jae into push (bad) push push gs push jne dec iret int xchg rclb push jne inc cmp neg jnp das daa and add inc add xor dec add add imul out jae gs stos je jp,pn enter inc inc inc ljmp std ret pop add add or adc (bad) (bad) (bad) call sbb sbb push pop and and and es sub sub sub cs xor xor (bad) (bad) (bad) pushl cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push (bad) jmp pop pop pop pop pop pop pop pusha popa bound incw push insl outsb outsl jo add jns jnp jge test sarl push arpl push push inc sub ficompl fimull dec dec inc dec pop mov nop jl push outsb imul and lcall pop movsb jbe jae sub ljmp cmp imul dec icebp jb and and lcall push add (bad) mov push sbb sbb dec xlat inc and and ss aaa (bad) mov adc subl pop pop mov mov imul arpl push subl popa pop cmp scas dec jne jae (bad) icebp imul sarl imul cmpsl pop jp popf lahf push pop sbb daa fs arpl and add outsl jne enter jo push arpl mov sub sbb push insl adc int3 jge imul popf jb jnp cmp add test insb fpatan daa sub dec fwait jae sbb repz das add cmp add mov outsb mov mulb add cmp xchg cs js fwait xor int or je ja jmp popa jo arpl and dec outsl in test sbb addr16 xchg adc push out outsl fldenv je inc inc push xchg jb xor lahf cs fwait sbb (bad) (bad) xor aaa shll in xor cmp popa ja and add scas dec aaa mov ja outsl add movsl test enter test push jbe jb jne nop mov mov xor push adc ret sbb mov mov sbb (bad) jae outsl insl jg outsl test (bad) pop add notl xor lea xchg (bad) xor jne out mov xchg insl inc aaa insl in jmp pop jmp inc push add nop xchg lret imul inc push (bad) push dec xor stc test add jae in mov adc or add cmp dec sbb mov lahf dec add xor jecxz jae cmp fsts sbbw jnp xor ud2 insl mov ret rcrl test (bad) mov add pop fistpll jns in or loopne mov inc adc call adc jns in call sbb mov dec dec sbb clc push mov jns lock je in xchg jns jp cld xor jnp inc jp dec sbb pop adc push sti adc stc sub sub dec cmp add fsubs fisubr add cmp pop addr16 insl jnp dec imul add lcall push dec cmp dec add inc mov add add movsb sbb sbb nop add xchg xchg mov dec aaa and jns pop (bad) cs addb adc xchg scas insb jg adcb xor adcb mov stos jg daa cmp and movsb mov push mov sub cmp mov push js jo add sbb lahf int or and sub jns and adc adc add and add (bad) popa cmp add add inc pusha lret add add add push mov xchg (bad) and sbb add xchg sub adc das pusha mov add addl mov mov xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods (bad) (bad) (bad) ljmp mov mov mov mov mov ret (bad) enter int3 (bad) (bad) (bad) dec into iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call add (bad) in out out lock repnz cmc div clc stc cli sti cld add mov push adc stos adc (bad) jg inc sbb xorb add gs bound arpl outsw jb popa jl,pt fcoms sub gs das roll insl cmp dec shll gs mov in inc outsl js push add push and out dec add fldln2 ja out and insl jo dec and mov call daa sbb aaa push sti jae dec imul sbb push add inc gs jb or and test jnp mov inc pusha inc std scas insl sbb fldenv je jb xor mov shlb fs (bad) insl (bad) psraw arpl jns outsb sub xor jb adc cltd dec pusha and bound sub fdivl fs insl xchg pcmpgtw movsl test and fistpl inc and and imul daa pusha gs dec dec gs setae pop fxch es dec icebp roll popa lea ficomp inc sti add sub imul pop sbb jnp pop pminub cmovno and outsb gs (bad) leave adc push fsubl xchg imull and push push push dec jnp dec add dec aam jne jns cwtl push adc fsubs and adc fs pop aas imul mov imul mov xchg mov mov xor or adc shrl popa jne je ss jg mov adc or mov pop je ret mov inc sbb (bad) fnstenv or add stc dec es cmp or add sub and xor popa mov sub mov cmp add popf scas insl lcall sub sub inc sarl or cmpsl and and add lret mov pop pop jne loope push or fistl sbb jo ss gs faddp fcmovnu imul data16 (bad) jnp mov fmulp mov or push pop xlat pop int3 arpl ds jg xor fisub add or out hlt cmpsb imul jae lcall mov out xor mov test cmpsb js push imul cmpsb imul lcall lcall adc xor movsl imul (bad) xor (bad) lock loopne int3 dec (bad) xor shrb out xor or call cmpsb imul add hlt ror dec (bad) xor mov and clc int3 mov push cmp ljmp (bad) xor les or icebp adc adc outsb push mov scas jge outsl imul inc or adc push dec push mov inc roll push and es mov fwait mov pop inc mov or (bad) push out scas je inc js movhps mov sbb icebp xorl fwait divl lahf mov sub mov inc push jb push imul je (bad) adc fs inc mov (bad) fucomi imulb jae sub movsl das mov insb push push or jo push fdivl push das mov jnp stos dec cmp je mov xchg jnp lods lock jns stos push imul fldlg2 add inc ret mov and push pop mov inc addr16 ss sub xor xor push lods add xchg xchg sbb int3 dec push or dec inc std fs test jb jnp inc add mov and jae insl mov ret or xchg insl sbb outsl ja mov adc push xchg imul jo jmp sub xchg add mov outsw mov mov leave push inc push inc sub mov stc insb aad cmp mov ror cmp mov lcall ss imul lcall cmpsb imul imul cmpsb imul cmpsb imul dec lcall cmpsb imul cmpsb imul cmpsb imul imul imul adc mov jp jo aad jg xor xor sub sahf addr16 outsl (bad) cmp dec push dec inc and adc sub (bad) and and xor push inc fcmovnu outsl iret lahf xor dec inc inc xor cs inc sbb (bad) dec push and adc xor adc cs or xor pop pop stos sub adc bound inc ja inc fs sbb jo cli out dec icebp orl imul std jp sub sbb scas cmp xor pop pop sbb insb mov pop push lahf pop and add mov and popl sub push sahf xor xor mov sbb sub pop push in lods sbb sbb add dec cs cmp imul push push and es inc cld ja pop cmp ja,pn bound arpl cmpsl test mov pop jle jns je,pn pop mov jnp dec bound aas pop fistpll lds pop fs inc inc fisttp dec push sub fcoms push inc jo dec mov pop dec imul loopne pusha mov pop je aaa sub incb bound mov mov jae pusha sti out mov and push dec inc push push inc push inc pop comiss cs push or push cmp push mov movsb push dec jae mov push pop and and mov pop repz dec inc popf push dec jl jnp mov inc mov arpl cs xchg xor adc mov es gs mov je es jb xor jg push test and xchg xor aaa cmp fcmovb andb cmp pop mov outsb or addr16 xor dec sub jnp fmuls sub mov push aam popf arpl lock fs inc jp jns imul pop insl cmc mov xor insl dec fsts outsl mov push inc data16 je lds or pop iret pop orl push je pop cmp das outsl push push dec dec sub and hlt jne shrd pushf or jno xchg adc sbb test jne dec (bad) xchg jns or xor ja test jne insb xchg std aas push fstps lahf mov xor sbb xor ss cmp sub add push pop std lock and (bad) dec sahf xchg sysenter add xor mov mov enter and sbb js mov bound mov sarb adc aas mov enter jb jl mov jae mov (bad) xor pop (bad) das xchg fstpl daa test dec xchg mov das cmpsl xchg dec push jnp xchg xchg (bad) mov jbe (bad) in (bad) or in xchg or les sbb inc outsl pusha fisttpll cmp scas das xchg push jb dec aam or int3 push fcoml pusha das push pusha pop fcomps or mov or xchg inc pop pop pop shlb pop leave sub nopl je sbb mov out jbe gs inc jns lock aaa mov adc xchg lock mov xchg scas mov mov mov and subl pop mov adc test leave mov or adc nop mov add lock (bad) lock inc push mov pop inc sub sbb test inc sbb inc shrb divl out push pop sar add (bad) repz add add (bad) xor sbb orl or or fimul enter push cmp cmc push sti pop xorps adc pusha cmpl and enter xor fsubs push pop push pop pop xor pusha cmpl insl stos and das dec rcrl (bad) das xorb pusha xorl (bad) xor or sahf enter mov orl xlat adc pop xor xor test add add mov push mov ljmp and cmp addb test or stos mov add add movsb add pusha (bad) jns cmp enter fild mov sarb jle test shll in adc das out push sbb inc mov iret mov inc (bad) sbb in call (bad) push add add pop ficompl fisubrl xor fcomp loopne dec push dec outsb cmp jle inc aad cmpsb imul lcall pushf cmpsb imul cmpsb imul cmpsb imul inc lcall sbb aam lock xor shl fnop mov repz add test cwtl xor (bad) xor mov dec rcrl xor adc cld hlt in in lcall mov cmpsb imul cmpsb sbb and int imul mov dec ror mov adc inc psubw cmp add pop outsb das jecxz cmp nop jmp fcom in push inc incl jne push xchg adc pop add adc add test or jno xchg pop inc add add leave and add or and lahf lahf orb dec or rcrl lods lods sti pop pop jns mov das pop rolb inc mov cs add mov add fs stc jo,pt stos mov andb inc mov test push fdivr ja dec inc dec inc push push out sbb adc es pop mov add in (bad) jge push add or push pop pop add or or or or divl ljmp or prefetchw or ds or add adc adc fldt xchg adc add (bad) mov pop ljmp pop xor jmp mov add add add (bad) pushl inc push adc pop and xor inc mov adc xor (bad) cmp inc mov popa xor add add pop mov and push stos and adc or adc add xlat into add xor xlat adc addl or adc (bad) (bad) repnz incl adc pop popa jno and adc xchg mov lock rcl and loope icebp fcmovu fcomps in add mov or mov adc sub jae or adc add adc orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add xchg mov adc add add pop nop fcomps push adc incl mov mov push decl pop mov int mov imul jb insl and adc outsb outsl je bound jb outsb and inc dec push and cs and sti ret (bad) pop sbb pusha ja,pt add jo inc popa pop jnp faddl out inc jmp and in ss arpl jbe cmp fadds in aaa xchg push imul mov xchg inc dec add inc mov push adc add and add or adc nop lock jnp add pop add add pop pop add push inc imulb fwait or pop push clc add add into frstor or and add jae inc and (bad) int3 daa push push pop xor pusha add jmp daa xor std out push push daa inc jb,pn jb add gs xchg pop daa sar adc xor or aaa jle and fstpl stos (bad) aam jmp int3 enter jecxz push adc inc adc or jl mov sti call dec push push jne xor and les insb add fdivr cmp cmp push outsl aaa adc push pop push call call std jmp lea sti xchg or mov cmp push push sar je add adc out pop xor push xchg and add inc cld call scas sti (bad) movsb mov out addr16 sub lea adc add cmp jno (bad) (bad) mov xor or adc or js lea adc or jge jne adc jo ljmp outsl (bad) (bad) mov addr16 data16 cmp jle push add mov add add decl in (bad) fistp ret ds sub push loope lea enter outsb in imul cli imul popl sbb (bad) (bad) in cmp sbb mov sbb fs and push inc sub pop in insl imul ja mov (bad) cmp (bad) sti jg (bad) (bad) cmp pop out pop and sub xor xor add sbb js mov popa ret pusha and or sahf and fadds ret sbb xchg (bad) (bad) jg pusha add cmp cltd sbb jno xlat jo test xor sbb adc loope ret push pop adc (bad) pushl cld ja fidiv push std push add adc and fistp call push adc xor push sti (bad) (bad) call xor arpl jae mov push push jnp sub xchg je or adc add hlt (bad) (bad) (bad) jg adc out mov and cwtl or and aaa jbe or push and sbb test call sub outsb add mov int3 add push cld jg (bad) pop scas sub in (bad) roll pop push cli and add mov cmc std pop aas insb mov push sub pop xor test cli fwait out jg jg lcall sbb push mov rorl sarb decb (bad) push pop test jg and pusha sub fsubr xchg push push loopne pop mov fwait mov xchg (bad) mov in cld lcall mov sbb mov loop outsl cld adc push mov cmp insb push rep fildl add add xor ret add int shrd sub ja adc movl lea mov in or pop pop ficom jle or loop (bad) mov push ja mov dec mov dec add push lock add add call or push lea decb mov sbb cs arpl push sbb sbb call (bad) xor pop in push adc push push lahf incb imul js adc jb sbb jbe nop xor test jne cmpsb cld add clc cmp clc das cld shrb cmp cmp jne push push inc push std lods fisttpll rolb jg push (bad) out inc mov xlat add insb push push inc cld pop or sub adc and pop add sub push imul pop daa out js insl test xchg xor lock sub jg sti push push js sbb fldl2t add push loop xor clc cs jbe lea adc and insb push push daa push insl stos lock cld mov hlt push adc lea mov ret dec sti (bad) mov sbb push ret sub (bad) stc push push test push nop dec pop (bad) xor mov dec int3 inc sub pop outsl jg outsl iret mov push lods sub fucomip xchg or jns mov js (bad) push rorb pop cmp ret clc lods (bad) (bad) in call push pop xor int sub jge lea fistp push pop test es pop pop insb or dec cmp pop push inc adc js icebp mov testb mov hlt push or add out and aam xchg out or pop cmpsb adc sbb mov inc neg xorl out hlt pop sbbl sbb fcoms cmc mov and push pusha sbb std sbb lea push jmp jp dec (bad) aas add or shr push adc (bad) lret push xchg fdivr std and pop pop bound and std neg mov cmp sbb push sbb in (bad) or das sysret clc (bad) sbb daa xchg xor lea push jmp stos push (bad) decl mov xchg ljmp jl pusha shll inc sbb (bad) lret or mov ljmp int3 pop notb pop rcrb out adc rcr mov pop jmp mov mov ss push mov jg dec cld aaa cmp or mov push mov in neg (bad) xor push xor lods push outsb clc ret adc cmp pop shrl test dec mov jge out sub pushf add mov (bad) (bad) (bad) add cwtl mov mov (bad) ds mov fistpl popf test add leave mov out je mov sbb pop jnp adc decl loop sbb xchg adc dec call mov aad push adc jae sbb push xor in sbb in sbb sbb push imul sbb lcall mov test or jg mov push ljmp cmovb mov into ds xor outsl (bad) out dec (bad) dec in lea sbb fimull pop pop cmp or cmp in xchg in cmc cmp mov dec mov pop loopne cmp pushf jmp testb (bad) pushl arpl jge push inc inc movsl scas mov jbe sub dec clc call (bad) test mov cmp pop push pop jge dec xorl int3 jg push pop push adc mov je sbb cs jnp out mov (bad) call insb and sbb std cmp je xchg imul lock outsl mov fsubr or or push and lock (bad) decl test inc cwtl mov (bad) fwait cmp cld outsb out mov (bad) mov dec add rcr test (bad) loope ret mov sbb ja or addr16 (bad) in (bad) and push push les mov popf fsub xchg cwtl and testl xor sbb js pop leave mov pop xor fisttpl in or mov adc call clc popf adc fs xor jg les rolb fdivrs pop cmp push clc outsl xchg jle out fs arpl or sbb mov aas loope std pop stos jle addl fwait in imul fiadd jg jo pop jecxz nop adc push push inc xor xor (bad) (bad) jmp xor enter add out lock ds sbb fnstcw lock mov testb call add jo (bad) dec mov fildll pop mov pop outsb fneni(8087 dec lret cmp mov cmp or and (bad) (bad) fstl std mov jnp jnp mov aad lea push xchg adc movsl outsl lock (bad) adc daa or sub das pop jnp lret cmp call loopne pop dec fdivl lahf fwait dec jb adc cmp stos aaa shr outsl cld mov movb std jne repz xchg push jl or cmp in outsb cli mov add pop (bad) (bad) lcall imul decb and jmp push and decb pop push test mov fwait and pop or pop sti aam out or (bad) fldt jmp push pop extrq sbb or push sbb pop dec or pop cld (bad) call fwait and cli fistpll insl sub sub (bad) iret shr jle incl (bad) mov or sahf pushf jne and sub wbinvd sub mov (bad) cld jl jbe (bad) xchg push in dec mov es dec mov je push icebp (bad) jg ret jmp lods add adc adcl clc loop add xchg call pop jmp or (bad) (bad) aam inc je push fstl adc xchg mov pop adc je incb (bad) fist por adc outsl (bad) mov dec add push push minps jle nop pop std inc hlt sbbl mov mov mov sbb sub jbe aaa (bad) cmp push (bad) fist push cmp je cmp or add mov subb shr sti call and push adc out insl test incl and mov outsl pop and push call das mov jmp popa dec adc mov in idiv (bad) or push aas or jg mov sbb (bad) in aas inc pushl jne mov mov loope fildll or jmp and jne add mov std xchg push or vmread and out xor pop (bad) (bad) fistpll movsb ds inc mov pushf cmp jo dec ss cmp xor std mov sub mov pushf pop add dec add sub cld and adc xchg and mov push sbb shr mov and outsl mov aas dec ficompl jle pushf push mov (bad) and pop cli sub ss setl fwait inc adc or push rcr push fisubrl xor ret jge nop add fmull (bad) jg pop push xor mov jecxz inc mov popa pushl mov test nop jg add sbb mov jne and sub add pusha mov push test ret in pusha aaa pushf ret pop mov arpl or movsb in fnop jle sub xchg lahf cmp or lcall add ret fwait or push (bad) ljmp push stc add dec mov pop pusha lods adcl ja jg (bad) mov (bad) add popa mov (bad) cmp addl in fisubr sbb add or inc decl (bad) fbld lock shrb into jle cmp jbe mov xor (bad) lcall adc in cmp push or icebp mov frstor in xor adc in arpl idivb sti jbe pop and in (bad) popf aad push mov pop fidivrl clc das (bad) aas nop push sbb cs ffreep aad dec icebp fnop (bad) lcall (bad) add lahf xchg je (bad) cli pop adc mov fdivl imul aas adc add lcall cmp loopne loopne inc enter fcmovnb pop int stc cmp inc mov mov (bad) mov roll aad mov lret push or jg pop loop push and sub sbb and cmpsb pop and fs add insb lea int (bad) dec in and in out mov stos xchg jae pop loope jnp cmp faddl and fucom jg fistpll insb cmp shll je cmp adc add mov xchg loopne mov sub test mov xchg lock (bad) cmp (bad) lcall ret lds je mov std pop and mov mov fiadd mov mov std call aaa add jae jae popa push nop cli mov inc jl (bad) lret xchg sbb inc and mov arpl add sti enter sbb popa mov xchg mov not and test push fimul aaa push call dec push adc je or jo clc ljmp jmp and pusha movsb and lods jmp cmp dec loopne pop clc fildll sbb iret hlt cwtl cmp fs popf jnp aad dec ret cmc out adc jbe pop jbe adc pusha jae fcoms (bad) (bad) jg lods sbb imul lods push push dec pop rclb test pop cld and pop or and imul jg sbb lcall inc sbb fsubrp clc popa lock pop pop or xchg sub mov (bad) movsb cmp test cld sbb dec pop daa cmp cs mov stos fildll scas sub clc push incl pop mov js sahf insb jbe adc call aam xchg sbb addr16 decl lret or inc jns rorb and pusha jg jb cmp ret mov decl decl xchg xchg subl add add dec test push test or clc jg jg aam cmovl pop or scas mov ja or pop call push roll (bad) mov or (bad) incl adc ss add xchg push xor (bad) xchg jge (bad) aaa jo pop mov xchg xor inc inc or in dec aam (bad) hlt sbb lret in pop xor je or popa push mov pop sbb push push movsl clc or repnz and adc add popa push mov dec aas (bad) std pop cmp addr16 pop cmpsb (bad) fsubrp pop je inc test mov or jg xchg (bad) cmp and pop (bad) outsl mov ss or push rol jo and fstp aaa subb (bad) fisub add cmpsl mov xchg dec lods dec inc push sbb cmp test dec test add jnp ffree adc jno adc dec inc add or adc incl icebp in aaa and aaa testb dec add enter cmp add inc pop mov adc repz negb insb sub loopne add fnstenv add pop sbb add adc jb neg and push js loopne cmpsl decl stc sbb fnstenv and andl mov mov lcall bound addr16 push add cmpsb aad push add stos aas fcmovne js icebp (bad) decl pop das cmp and (bad) mov pop inc and adc pop push push lahf jp xor or xor inc out ret rorl imul or cmpsl mov dec js mov dec or or out add xchg add sub dec inc add test in add mov mov inc sub jg jmp ud2 or mov (bad) pop pop les rcrl jl sub mov xor xchg cmc pop loopne imull or xchg lahf add les lods mov int3 sub inc add mov or ja pop dec mov sub je add loope push xor mov pusha (bad) sub subb rolb fnstenv les loop sub mov add inc (bad) stc faddp push add test or push jnp add les (bad) repz pop cmc push mov pushl sbb je clc add xor xor mov stos aas inc inc or (bad) mov out add or and aas or sbb push cltd inc orl or add rorb pop pop leave clc mov notb popa lods xchg outsb mov (bad) and pop xchg jle (bad) jp clc add mov jo inc pop lea enter (bad) jns fistp shlb jmp ljmp cli inc inc cmp (bad) ljmp fwait cmp decl push hlt sbb decb xor cmp das (bad) (bad) cld cld fisttpl xorl ljmp outsb sbb xor jmp xor xchg inc add mov aas push add call cmp pop jg gs clc inc xchg mov adc mov mov out cmp adc ds mov loop call mov sahf sti out xor cs addb (bad) adc fucomp aaa inc jae orl push sub out or add icebp or push or push ljmp pop adc aas inc add outsb mov orl adc add inc xor pusha outsb jl add add add push add out push jbe fs add jmp shl ja mov sbb out fistpll dec inc outsl popl imulb sbb add cmp lods ds jae ret shr mov shrb cmp leave jne lret (bad) je cmp clc out test (bad) out incl adc cltd jnp and jnp outsl mov sbb ret loope pusha jmp or mov jle mov inc mov ret leave xor cmp mov mov dec mov push add test andl add test pop clc ud1 add or add or add inc mov decl mov int3 or add inc mov icebp testb mov mov imull paddb in pop jno aas bound xor cmp mov adc aas sub or incb (bad) pusha outsl add sbb adcl lock and add inc in mov je mov mov les add adc push add jecxz sbb in (bad) in test pushf mov or (bad) (bad) lcall xchg push dec and pop das jl push push fadds and and loop push stc and pusha in mov xchg rorl mov ret jns cli imul add in ffree and adc lret sub pop dec mov call pop bound lret movl xchg loop xchg or outsl and (bad) pop pop jo les call pop iret (bad) shlb inc mov xor sub add adc adc fidivr call or or and loope push xor incl loop dec push mov fucom inc xchg mov stc das inc add je fisttpll cmp jne mov and lea dec ds push cmp fxch cmp mov aas idivl xchg cmpsl mov dec insb mov jge or ljmp pop ret jg dec incl adc or aas inc add loope sub (bad) jg test mov aaa std add ja dec jl or cltd (bad) hlt loopne push add aas add ljmp dec sub inc push lret imul and popl push movq dec dec std out cmc pop nop add adcl push nop hlt ja or and add add aas stos mov decl inc and outsl jne stos mov inc subl icebp adc cltd out or pop xor (bad) or push stos test loope stos sbbl pop jg push add adc mov loop sub jle nop mov xchg dec icebp mov fwait andb (bad) pop push add (bad) sbb ja das cs mov inc jb fbstp outsl cmp (bad) stos or pop jg cld insl mov dec inc cld (bad) in loopne or pop sbb add jl cli test push adc sub outsl mov mov mov imul rclb push xlat inc mov push cs jg push test cmp (bad) jg add jg jbe pusha add addb xor js stc adc jb sub add pop (bad) outsl hlt lea (bad) pop add fsubl icebp test pop push mov cmp lahf mov adc add aaa adc cld clc lods pop push adc jbe cli decl sub and jne sarl add aaa clc or pusha fadds les inc je ds mov jae cs (bad) ja aaa sub enter xchg jo fsubrl leave (bad) xlat icebp pop addb xchg pop push or ljmp fdivrl out jb pushl je call repz add ja add mov sub ja jbe clc test xorl push pop adc adc lret sti aas dec push add in aam jg loope incl test sti js or call push inc addb add mov ss sub sub movsb jne (bad) add and int3 rclb xor call cmp ds es lret push mov dec sub flds out jnp cmpsb stos incl mov mov add inc jl insl daa stc sbb mov push (bad) jg push xchg addb xor or ss cmp fs jmp sbb or loopne,pn inc cmpl loop cld pop dec sub fistp mov inc pushl mov jns aam pop int3 rcrb mov mov xchg push lcall gs and cwtl mov fs notl fistpll mov loope push xor sub mov jle or pop sbb inc xor pushl jg jnp xor lds mov or idivb sbb (bad) in pop movsl xchg inc xor aas sub clc add xor or add cmp adc fistp add jg xchg jbe jg js cmp faddp mov aas dec sbb mov dec ret fstpt in test fnstcw enter adc adc faddl ljmp ljmp adc or cmp and cmc movsl es mov xor add daa je pop jne fstpl sub or xorl pop sub xor jae ror (bad) mov adc out fist adc add mov out adc mov jg xchg mov (bad) insb sub xchg cmp mov push mov pop lods sti outsl cmp ret push add adc bound lret icebp ljmp or mov or adc scas jle adc adc add mov lcall and out sbb call mov (bad) (bad) into mov pop mov mov and or dec adc sbb sbb idiv dec mov lret fcom cmp jbe cmc or mov mov push (bad) jg enter hlt mov cld mov movb ret inc add subb icebp (bad) lods push pop sub inc mov dec push add jge adc adc xor push jnp push mov aas push enter mov mov push push mov orb adc les lods xchg and push add and aad adc and mov sti sub and (bad) cmp (bad) xchg movsb test sbb sbb cli call and bound mov (bad) mov jmp mov movl adc mov mov pop mov jnp movsb test js sub and insl cld jl and pop mov in push call pop sub or xchg mov add mov cmp push dec and inc add std jle icebp lcall cld lcall adc or (bad) (bad) fbld gs cltd pop sub jmp sbb pop in lock xor jg adc jne in data16 imul (bad) addr16 dec ja aaa (bad) loop cmpl jo mov movsl imul dec fnop inc xor pushf push lods pop (bad) ja lret inc test mov sub cmp adc push stos jg out fs or mov lds mov push jmp jbe sub shlb inc xchg shlb das xor out add adc add jmp sti mov nop and add std xchg (bad) lcall test les pop xor inc jl xchg pop cld jl std das xor mov and stos or clc decl add dec (bad) sub push syscall loopne jo dec call adc mov xor xchg lock inc or adc idivl dec xor in mov jmp addr16 mov adc les (bad) fistpll add ja jp mov aaa inc (bad) rolb mov ja dec decl mov push pop shrl out fwait cli ja push push inc mov sysexit das insb (bad) fistpll inc fucom mov movsb test add js or movsb test aas xor mov xchg (bad) ja mov test js aas dec push sti mov rol add cmpsb outsl std mov imul jge add jb cmp movl icebp fcomip sub cmp xchg jl sti mov or sbb mov cmp sub and cmpb cmp mov movsb xor cmp push push decl push push xor cmp jnp cmpsl out lcall ljmp mov mov pop (bad) adc jge jnp mov ja mov fwait adc (bad) jbe or xchg inc mov into or pop and and mov adc push pop mov jbe fpatan jl add cmc dec push add out call (bad) outsl add xor test ss cmpsl lods adc push (bad) jg cmovbe std adc pop xchg fsubr call add mov or ficompl jge lock clc lea movsl and mov std jg mov adc call ljmp adc adc sbb outsl pop (bad) call rolb jge sbb sbb out sahf clc xchg call add insl xchg (bad) mov mov addr16 mov add pushl xor xor (bad) cld push xor out ds sub push (bad) push adc cmp test test mov dec xor mov (bad) fbstp ja pop xchg mov add cwtl ficoml inc adc mov add adc aas orb dec cmp mov into add call dec ret adc dec std std fwait call xchg (bad) adc push or or ret jmp inc sbb mov ljmp popa sbb xchg push cmpsb icebp jg (bad) jbe cmpsl sbb loop jp aaa mov test outsl arpl mov and popf aad add sbb push loope (bad) xchg inc xchg cmp dec mov or cli mov add clc outsl pop mov arpl sbb rorb or push loope ljmp (bad) adc cld add jb or xor decl or mov leave lret es ret (bad) dec push imul pushl and nop mov out repz psubq lds adc xchg aam mov push add xor and jle aas jge test loop cmp pop mov push int3 call xor fsubrl push (bad) rorl jbe xor dec pusha pushf inc and test add xor push add sbb and fisub jg xorl lea mov data16 call cmp mov cmp out test sub xor cltd outsl cld ret jne sub shr (bad) cmp sub ljmp sub clc or es or fimull sbb ljmp andl cmp repz cwtl jmp xor outsl sbb mov or xor fucomip inc xchg sbb mov add loopne jge outsl cli inc add adc sbb int sahf dec roll or pop or pop cmc imulb add lahf and adc nop push fmull xchg sbb add bound sti push cmc push xchg pop add inc push add mov mov inc incl adc sbb insb jnp pop in xchg or (bad) shrb xchg in xchg add aas sbb sbb lods andb jg adc ret mov xchg test xor mov (bad) lahf icebp cmpsl adcl jle (bad) bound test add push and es xor sub stc cld out mov cld ljmp mov aam mov mov mov push cld add (bad) and jg mov lods mov aas adc loopne mov mov (bad) outsl add adc adc movsb dec (bad) in lcall scas adc scas pop int inc jl rcrb (bad) call fistpl nop push (bad) popf or jne mov clc js jmp adc xchg (bad) testb outsb jne dec add icebp fbstp (bad) gs (bad) (bad) add and data16 inc int3 fdivrs imul fild out mov xchg mov (bad) call nop aam or pop clc push das movsb adc push dec or out push xor lcall test push cld ja fiaddl icebp xchg jg lock fmuls pop (bad) cmpsb cli les or gs outsb mov cld mov cs push pop push decl jmp push adc xchg pop mov jbe jmp mov in jb daa rcr push add (bad) push fsubrs aas jp aas sub les pop inc outsb cmp mov clc std outsl hlt call inc loopne aad push aaa fild cld push jbe or imul out or mov pop popa decl iret jo push pushf mov adc std and cmp or mov mov mov add mov inc mov mov repnz add inc mov clc push add ljmp and cmc (bad) mov out addr16 add (bad) shrl fnop jge adc push mov push and adc nop clc inc cld inc add mov adc (bad) lcall mov and fsts jl fimul pusha push mov cmc dec mov fcoml ds dec insl ja in or sub stc movsb and loop fwait (bad) mov sbb sbb out scas jmp lea xchg adc mov and nop pop jge lcall cmp aaa cmc add and ficompl fcomp loop ljmp enter jle and fiadd adc ret mov dec out add jg mov and outsl lods incb adc rorl (bad) (bad) (bad) fildll aam push inc (bad) negb mov xchg jbe mov xchg mov add and pop call incb push pop aaa out fsubs dec roll movsb inc xchg sti add pop cld fcomip in cmp sub xor and clc je fnstenv dec xlat add (bad) stc jge mov push xchg dec bound idiv or adc (bad) jg jle and jnp out out imul pop push add mov add aaa xchg jg enter sub lock cmpb mov icebp fisttpl mov push add cmpsb jg lcall cmp pop adc push pop mov popa and or jp xchg (bad) mov jbe push enter scas cmp sbb outsl adc push add jle es inc sbbl std dec inc je add ljmp push ja jg mov movb xor pop mov sbb sbb andl jle jge pop cld or sub dec adc inc movsl xchg in js inc mov imul xorb and add ja add and and cltd fs gs lea push or cld lods and popf or icebp jg sbb aaa decb fwait mov test push push push sbb icebp aas push add inc icebp add push cld clc sbb add mov pushl sub in clc cld xor inc fistl clc frstor adc (bad) sub cs ror or insb hlt pop stos aam std fistpll pop push push inc iret (bad) push adc sbb xor or ljmp push cmpl jmp fs loop xor mov incl add push jge test mov mov ret sbb push adc ret scas mov cld sarb and outsb mov pop inc add lock fcos mov sub sbb xor (bad) pop xchg lods mov (bad) mov insb icebp insl popl pop das xor scas and xchg aas fisttp mov jne fcoms test ljmp cmpsb pop adc ret (bad) mov cmc imul arpl jbe jo inc mov jg pop outsl pop (bad) std push out cmp adc mov cs ss mov (bad) ds movb pop addl sahf add pop pop push add idivb (bad) (bad) aas das jae inc sub pop dec es addr16 push setg mov clc mov inc sbb (bad) and xor or pop sar pop jge fdivs pop jl jae xor mov cmp (bad) ljmp jg mov lret push mov mov rorl (bad) lcall mov adc dec push mov sub sub fbstp or mov inc mov movl ss pushl fmull call (bad) jb inc mov fldenv dec hlt and or js sbb lds mov adcb imul fild pop or daa adc adc mov sbb call inc aas mov adc dec (bad) (bad) jg xor pop or dec inc adc or jno cmp pushl mov or subl std movsb and jbe std push sub adc adc outsl test subb lcall call das and enter mov out aam mov popl cmovnp out mov add xchg mov int (bad) fadds adc sbbb sbb mov outsl jmp cmp mov adc and push inc adc inc dec inc push fs dec rcr sbb dec mov jbe std aam leave cmp inc cmc pop pop cli add imul cmc hlt sbb adc push sbb mov (bad) lcall cld add cmpb std cmc and into mov ljmp fiadd mov adc inc pop cli and orl adc add push insb cmp jle mov cmp adcb daa add orb fbld add std call or add pop adc adc popa xor ja or stos add and jne jmp sti (bad) adc and inc fwait jle int3 negl mov mov es cmc aas dec or int3 fs jno adc addb lret add ret in aad jnp in call rorl insl jbe gs cli ja jnp andl add sub or mov icebp pop adc call (bad) lcall mov fcomps test pop or in add push add (bad) mov (bad) stc jg add xlat mov xchg clc lds aas sub add cwtl sahf mov cmp and pop inc in popf sti and adc pop aaa jne outsl (bad) lcall adc call shl rcrl xor int loop call pop or test pop icebp inc (bad) std lea sub mov cld mov add adc sbb sbb outsl and pop push adc add or (bad) aas pusha and cltd ja push pop adc scas mov inc adc push adc les push add enter sub enter icebp decl jno loope push and jg popa decl add adc js cmp std xor mov fcomps pop in add (bad) adc adc or test cld ret xchg test push test xor cmp and incb sbb test decl add std push test (bad) jne mov push inc into mov push or dec pop (bad) mov or sbb or das stc (bad) fistp dec xchg (bad) out ss dec (bad) dec push sbb or or push sub ret add aam add and mov nop and jmp mov adc div (bad) decl inc dec pusha dec sub pop xor dec lret dec mov add imul call lock hlt or out outsb lcall aaa mov cltd out sub add jl sbb dec sti pusha out sbb xchg ljmp xor fcoms mov mov and cld inc lsl and incl push inc adc ja aas dec pushf (bad) call dec dec dec xchg pushf cmp dec mov loopne adc pushl mov lahf pop dec cld (bad) call adc pop dec mov cltd jle adc mov (bad) fistl sbb nop daa fistpl add mov adc in mov xor xor adc ret (bad) xlat pop pusha jno mov add js xor (bad) mov imul sbb rcll rcll (bad) fistpll or or fwait insl rcrb mov xchg icebp (bad) decl arpl add aaa jae cwtl adc mov mov sbb and andl push dec mov jmp add icebp adc pop stc jmp jbe test js xor mov cmpsl js xadd inc das cld outsl pushl adc push rorb clc mov add xor dec jge xor jge test nopl add xchg jmp stos scas adc xor nop lcall add outsl jl pop test lods lahf mov cmpsl xchg je mov or nop mov addb dec lret push dec sub sub addb mov pop mov pop mov les cld or mov pop and daa iret xlat sti ljmp std or sbb push pop aam outsb test ja in mov cli jg sbb (bad) xor (bad) mov add adc incb lret push ljmp lret xchg cmp push outsb xlat ffree mov add jo dec sbb je div adc add ja out jbe je pop inc add pop cli and add imul jmp loopne in mov push xchg lock addr16 int addr16 xchg mov daa jmp subb sub movsl fisttp sub ja dec jne or mov push inc and (bad) in pop inc cwtl int inc or or loop sti idiv jb cmpb adc int3 inc cmp jge jg sar movsl xor xchg add (bad) rolb or sub aas pusha add dec js es test dec aam mov and cli out sub or fildll in sbb rolb das lock pusha and mov sti mov inc jg clc push (bad) or int3 stos sub xor push cli fisttpll inc xor pop negb sbb add pushl cld std pop rcll das add pusha clc xchg dec popf sbb rorl popa xor adc inc jl push push or lds mov sub iret adc inc push in incb push rol jl jo clc std ljmp mov push sbbb orl mov enter adc aaa cs dec mov nop cld adcb pusha incl sti or dec adc xchg fwait or es xor push add inc add outsl dec je incl mov sub jg loop (bad) mov dec icebp and cld (bad) ljmp adc repz and inc push pusha jo cmp rorb sar rorl and add sbb roll sbb inc aad add push adc out lret mov mov sbb mov dec pop mov add push sub add sti push xchg add add les cld sub xor adc mov rclb (bad) ds sbb and push jge (bad) (bad) (bad) outsl push add outsl push outsl pop fsubrs pop fisttpl jg jg outsl data16 mov push (bad) ljmp outsl jbe jle and cmp fwait int outsl jecxz out and dec mov (bad) aaa in add and inc mov inc idiv xorl xchg fwait js inc add or icebp push mov cmp pop faddl or sbb inc ds fistpll add cmp loope mov inc xchg ds inc dec xor add cli decl outsl sbb mov and test and mov ljmp popa sub incl scas xor add in mov es mov push add mov sbbl scas daa sub push fsubrs fcom dec fnstsw adc push jne sub testb daa mov inc jb add outsb das hlt pop ja fldl or inc lock pop push or mov shlb sbb lcallw pop pop enter sti mov mov mov add leave pop or pushl sti jg (bad) xor int add (bad) mov pop push enter dec clc xor or cmp ret adc mov (bad) fmulp ret testl fildl movsl xlat sbbb mov in sarl pushl je mov or cld jo inc icebp and loop lods loopne sub adc arpl mov insl sub imul xchg popf sub lock adc xchg lea data16 loopne pop sbb sbb arpl or and jae inc push cmp sub insl mov test jle sub lea push and cltd jmp sarb hlt sahf sub add pop aaa outsb call mov adc ror aas jle leave mov ljmp push mov adc jno popa sti pop push mov pop (bad) lcall iret lea xchg sahf jecxz loopne push jae bound in pushl mov push add mov inc pusha jl add (bad) ja and sub and (bad) fcomip and leave and mov lea add pop add lods mov cld pushl daa pop fsubs or mov pop sub orb les pop loopne push ljmp or ret les add and and adc daa add add ficom cmp mov or or (bad) jg sti out xor adc lahf int jge movsb mov pop into adc jbe (bad) mov sub mov add mov cmp add mov and flds xor mov add inc mov (bad) ja add jb movsb adc push sub sub bound ljmp es lahf mov add popf and aas and in loop out out lahf addb or jecxz shll cmp push clc ja in sub bound sub add jg mov add inc insb mov les aaa in repnz or (bad) out pop xchg add fisttpl pop stos fwait ret icebp lods xchg adc adc xor adc mov add sub sbb insl and and sub or mov or mov mov (bad) out add add pop cld add fcomp mul fild cmpsb jle jmp mov add pop sbb add incl fnop adc jbe cltd add inc xor fwait cmp inc xor nop and add adc les (bad) out (bad) mov push shll add addr16 inc add pop add lret inc jbe add roll inc clc push cmp add sub add test (bad) incl pop rorl xchg or idivb add (bad) call mov pop nop and add xchg or outsl das sub mov or push decl add pop shrl (bad) sbb jmp fs add and lea popf jns sbb pop das cld out mov movsl mov pop inc inc loope or pushl jb (bad) sbb mov dec inc je out push xor and and (bad) incl or jae dec dec or jae mov sub push mov dec (bad) ljmp ud2 arpl pop xlat insl mov or add outsb imul inc and fnstenv (bad) cmp push (bad) mov add jne subl mov sub lock lcall mov popa add push outsl je aaa push lods sbb andps ljmp inc movsb jmp push jae mov scas mov imul sarb std sbb dec aas outsb xor punpcklwd mov loopw fidivrl gs aas int imul and or push jg addb mov inc add add dec pop add push xchg dec aam incl add sti fs lock xchg je add or push add jo (bad) insl clc xchg ss pop repz inc jle stos add ficomp gs out scas add in (bad) pop inc bound jnp jb or xchg and mov add aas xor (bad) stos add aaa outsb testl (bad) cmp add fstpt jle dec or pop ljmp mov stos add or scas dec add in das pop sbb push movl aaa mov call daa jle mov mov push imul lcall xchg jb pop inc rcrb (bad) lcall mov pop push push and and sbb (bad) fisttp cmp sbb mov pop inc and pop push push pusha fildll add fstl imul dec lock mov inc lahf mov dec add pushf cmp rorl lea cwtl insl and cmp sbb jns test dec (bad) (bad) lcall out xchg and push sub xchg xlat dec imul imul inc jp dec jecxz sbb mov mov (bad) (bad) jg jae xor and outsb jae dec popf cmp jo push xor xor stos insl adc pop mov pop out push stos jg insl adc imul cmp adc sahf stos leave xor jge jg push loope leave jge addr16 clc cmpb insl jnp gs jl xor (bad) popl scas adc pop js ret pop test pmulhw add inc lods jnp popa pop outsb loope outsb sti divb cmp mov mov (bad) outsl hlt shrl sbb jecxz (bad) (bad) (bad) decl mov out xor out outsb cmp mov jns mov and (bad) cmp ja (bad) arpl das cld xchg mov in cmc out data16 insb sbb addr16 pusha test mov push push push ret inc pop adc inc lahf push add or mov dec and inc sub lcall (bad) xor sbb mov aaa jno in dec mov negb test mov cmpsl insb push and cli xchg jle lods inc and pop or cmp pop sti test jg outsl and out add mov dec pop fnstenv leave jo nop sbb dec cwtl in mov jo aad loopne sti mov (bad) sti jbe jb mov adc in insb cmp (bad) jg adc test das pop (bad) pusha ljmp std mov or add sub fldenv mov cmp ljmp subl mov rcl iret outsl scas icebp fs out (bad) call inc idivl jo arpl xlat cmpsl popa pop jmp sub cli sbb aas lahf inc cmc loope scas insl cmc push xchg push mov (bad) jae imul sub and jmp mov and cmp or jge (bad) clc xchg je push sub xchg hlt (bad) (bad) dec xchg adc push xorb addr16 xor aas push fwait inc clc pop setge (bad) jmp add addr16 push xchg insl leave pop inc mov das lock xor pop jge jbe decl jb test dec jo cmp cmp iret lds jmp sar jmp sbb push iret call pop or sahf aam or outsb adc insl mov (bad) jg inc push mov and insb sarb mov pop pusha adc adc dec fdivr rcrb inc sahf cmp sub push push jns enter rcrb (bad) cmp in nop pop push dec pusha adc js hlt call (bad) (bad) cmp push jns xor sbb hlt fmul outsb pop enter dec mov icebp fildll popf jo (bad) movsb adcl imul add lcall push push psubusw mov jb hlt (bad) ljmp lahf orl push cs or call addr16 popa fist ret xchg dec imul sub lods xchg (bad) call aaa aas in and shll (bad) lcall jae repz push add mov add mov add (bad) pop add test xor cli add inc mov aam jnp inc (bad) or ret push aas pop std aaa clc jg and push adc fwait xor or add add add adc add adc (bad) jg aaa mov lock and das in xchg mov inc mov fwait int3 or mov and das xchg add add add das and adc xchg and das xchg add add add add aaa popa and mov ret insb push fstps outsl hlt add stos jg inc inc dec andl or test jg pusha rolb ret (bad) punpckhwd inc sub xor mov mov sbb lcall inc addr16 add incb sbb add cmpsb pop sarl push inc stos adc pop sbb adc sbb or jge not scas or inc cltd mov push (bad) adc call inc jmp in inc (bad) out stos jo push push mov inc lcall mov mov loope dec shll je insb pop mov mov push add ljmp mov arpl test fs outsl popa fs insb js outsb mov dec pop xchg push jns jp ret incl xchg push insl repz jns cmpsb gs xor inc add lcall stos push and arpl pop xor enter xor pop sub jge add (bad) sub mov jmp jmp mov and add mov std jge pop cmpsl jns (bad) dec push adc mov (bad) (bad) dec pop add test das clc mov hlt aas fsubs test pop pop decb mov call dec cmp loope loopne xchg outsb push mov adc pop ja fnsave aas jg pop loop xor pop xor jmp fdivl xlat jmp cmp aaa stc xor xor js xor aaa add outsl mov pop aam imulb sarl (bad) (bad) jg add push js mov or repz cmp ret stc popa xor sbb cmc fstpl xchg sub sbb mov mov aaa mov push inc js push call into jne gs pop push dec inc out clc popa dec cld (bad) stos call mov push popa dec push mov jmp aas add xchg sti aaa pop fistl sbb test fdivrs or push pcmpeqd (bad) decl nop xor jp pop or dec mov dec testl clc (bad) mov jle xchg adc xor loop inc mov mov inc or out js lods xchg dec add rcrl mov test notb jbe sti adc aam jno add insb ljmp pop cmp adc imul push stos and adc inc daa ret jle sub sbb (bad) ljmp adc or xchg mov outsl inc sbb pop jnp test add or pop mov push jbe scas sub int3 jg adcb mov pop lret fstpt sbb mov cmp cmp pop cmp mov and push rorl sbb dec mov orb (bad) cmp or (bad) in mov (bad) idivb pop fidiv (bad) and icebp mov mov sbb pop sysret mull cmp movsl pop jl call loopne sub int3 xor les mov iret lcall jl je insb push or sarl xor sub and lcall mov lock mov pop les sbb into jne in divb dec xchg fs lods add fs or mov or jg mov into add loopne inc mov paddw arpl pop arpl fistl fild arpl arpl push arpl cld (bad) in rolb push mov cmp jecxz fldt xlat arpl (bad) jmp arpl arpl pop sub adc jmp lcall bound ret mov lret sbb insb pusha xchg xchg imul mov push imul lock mov push stos out jo jge push rolb das cld mov xchg add in mov loope dec pop jno xchg push movsl adc push mov cmc fwait adc or cltd push rcr add mov clc aaa add ret mov clc psubd or push sti pop push cmpsb fild or loopne test incl adc jg inc jle pop ljmp shr adc test cmp lods jae or mov (bad) mov push push sar add arpl pop pop jle xor (bad) mov jo xchg sub std or pop enter scas jnp ja mov dec sub rcr push lret cli or test pop add xchg add and adc mov inc push cmp sbb sbb adc mov or inc xchg pop loop sbb sti fsub mov pop push jecxz iret lret pop daa aaa data16 pop scas insl setae pop (bad) pop push mov test xlat les enter add rolb js mov rcrb sbb dec xlat mov add mov shr inc or insl lahf lea adc loope push sbb add mov aas pop insb icebp add jae dec test out jg jmp add pop je ret add xor cmp shrl (bad) jmp out add lods loop add mov push push clc (bad) jnp adc push adc (bad) mov (bad) testb pusha add sbb imul jb lock stos stos sbb divl clc ret adc or aam push nop loopne test insl inc stos stos (bad) fisttp fwait mov dec lret add arpl cld mov lea mov push jo push popa lret inc (bad) fisttp push push lds in int ljmp mov cmp pop loopne cmp in (bad) outsl cmpsb push sti fbld jg sbb aas or pusha outsb xor out sbb (bad) adc dec loop xchg mov aas mov jg pop and xor leave (bad) aas clc pop das mov jae and hlt js sbb mov lods test test lcall jmp xor add sub inc adc cwtl push jmp fdivr idivb add jae dec jae fistpl gs nop inc fildl push jle jo clc cwtl adc ds outsl add out dec inc adc dec dec iret sbb ljmp adc pop dec ljmp icebp push (bad) (bad) pushl stc insb cmp cwtl mov dec mov ja test imulb stos push adc cmovno outsl rorb and sbb lock aaa in mov arpl ja,pt cmp cmp subl popa (bad) or bound fildll sub outsb jnp mov cmp add lock push pop or lock dec scas add fmuls mov mov pop inc push push lock ja out fldenv and inc insb fcmovnu push pushf imul iret jo push jne outsb mov dec inc xor iret adc dec fbld inc jae sbb in push jo xor cmp push imul mov icebp mov loopne push mov jmp ljmp pop movsl jo xchg jbe xor shr mov mov jae dec cltd inc push add insb fiadd je jecxz xor (bad) in cmp scas outsl (bad) push jne push cld sarb neg mov add scas gs stc push jg setns push sub fdivrp addr16 adc (bad) (bad) mov mov (bad) push fstl (bad) mov add dec inc dec jae insl clc or out fwait push lock clc outsl jbe (bad) or or adc (bad) or mov test cld insl mov int3 xchg jecxz jl outsl jl (bad) jne mov lahf cmp jmp sub lahf add loop push sti addl pushf fs call sbb popa lahf out incl addr16 lcall mov ffreep pop (bad) jo inc data16 (bad) or cld xchg arpl inc mov xchg je outsl call sbb and inc and popa xor mov and pop and adc stos push or fist call adc sbb push adc or mov or xor push push xor or dec inc pop push sub or daa or and and inc adc add and fistpl inc push clc dec sarl sub push ja adc or adcb cmp or cmp fistpl mov push sub jl or mov or adc push inc std out jle mov pop push or or or and testb not fistpll es or or push femms imul ficomp push add repz (bad) mov add add push push ja or mov out or xchg sbb push adc push aaa add sbb call push adc add or or or mov push add es sbb sub outsl inc pop adc (bad) sbb and adc int3 adc fistpll cmp inc or adc lock sbb dec int mov or and clc lods or or sbb or sub sti mov adc and sbb jle das jge and push out dec dec push ret js,pn jae cmp and dec cmp push (bad) xchg dec or lock in sbb sub xor outsl pop jne adc mov jae sbb or daa sub sbb das inc sub push jge dec fidivl (bad) mov aaa (bad) push and adc or cmp add popa dec insb out jg mov adc or cmp fldt ja add pop pop mov or mov jb inc sbb fs push jae xor adc hlt decl cltd add or lock add hlt sti lods ret dec cltd rolb xor dec (bad) or jg add sub push pop add ja sahf add or add and xor or aas pop and push aad mov sar push outsl cmp sbb add pop push xor cli or mov mov add add sub lock inc out cld dec and in cmp add popf and mov adc add or sub addb flds mov and jg insl sti mov ja adc adc cmp jnp push or add ret sub std fwait jp icebp and dec add lea pop not pop or (bad) pushl rolb mov or sub sbb andl pushl fidiv adc (bad) out push out jae (bad) xor xor and shlb fisttpl lret cmp mov fstpt shrb pop clc mov cmp int3 inc orl call (bad) pop inc xchg or cmpsl je cltd jae mov mov add jbe cs cs loop (bad) jb test bound push push mov pop pop sbb (bad) fist xchg sub cwtl add test sbb sbb pop in orl add push jno push dec push (bad) (bad) fistl pop outsb add int3 cmp add add notl outsb inc add shlb add fcomp add fcmovnb in adc jl or mov hlt adc int incl nop add inc mov inc add jne mov sub adc jb pusha das mov xchg adc rorb or jae xor subl dec (bad) jb popf cmp sti je mov das leave or and dec pop enter jg pop push roll lea orl jbe mov inc xchg shr arpl inc mov nop mov xor add icebp cld jmp insl sti mov mov sub cmp ja cmpb jne mov mov (bad) imul shr rol xchg sub sub jp add fistpl int cld les adc daa (bad) mulb mov or xchg sbb or outsl fstl mov push dec repnz push adc push add cs mov add loope xor push mov ja or and ja add mov jo push loope pop jo loop mov pop loope add scas and scas push jo fdivrl loop push push call lea jg (bad) (bad) fcomip pusha sub adc lea push cmp jne sub jmp mov xor push cli inc mov add add pop nop and add sbb subb out xor pop or sbb add mov in xor insb jns js insb (bad) fnstsw outsb jae nop jb cmp push push push add sub test cmp insl jbe,pn and sbb data16 subb scas rcrl cld push xor xor ds pusha xchg dec xor call jg in mov push jno gs subb call test push mov mov xchg insb add imul mov insb xchg arpl adc sub in (bad) addr16 das cmp adc push fsubrs jge stos adc prefetchw adcl out fcoml arpl adc movsb sbb jne imul pop roll lcall orl in dec inc push dec inc dec xor add fdivr inc dec dec add push inc push dec or mov dec pop sbb push push lods sbb pop or inc mov add setno subb je (bad) stos cmpsl je xchg add add push scas ss cmp dec inc adc ja mov push scas xor cmpl add wrmsr add cmp adc loopne pop nop push adc adc cmp fsubs dec jne push sbb xlat adc imul or sub cwtl mov inc mov bound imul sarl fs inc frstor cwtl lock test in xor xor xor push add xchg (bad) mov sub adc lret out or add xchg push loopne lret xor enter add and add out sbb imul mov mov mov mov icebp or sub mov cmp and inc inc or adc adc (bad) (bad) mov (bad) (bad) lret push push outsl mov add or (bad) ret inc inc arpl roll inc int3 outsb popa dec data16 pop ss push enter (bad) aaa jnp ret inc inc mov pushf cwtl add sbb and loope or ret and adc sub sbb mov inc push mov adc in dec jae xor inc mov fs pop mov popa fs xor pop adc int or xor jb,pn push fadd sub pop sub loope (bad) (bad) pusha mov jo push sbb adc xchg add adc mov mov push das (bad) mov mov mov nop inc int3 add and cs inc gs aaa pop add push mov or imul es add push add or out xor test xchg fdivrl mov jbe adc xchg add sbb nop dec adc push movsb or and ret sub pop jp dec test nop xchg and or push (bad) jno or sarl popa imul movsb mov push pop into sub mov jns jae sub rcrl ret xchg inc aad das (bad) out hlt push mov lods adc push add lods (bad) gs xchg shlb les xchg sub jae (bad) and push and push mov inc inc cmp xor mov shrl lods inc adc and push mov int inc inc adc or add pusha push in adc mov lds or fwait xor (bad) mov push push pop insl fldt sbb adc add jne scas sub sbb adc add (bad) (bad) decl or pi2fd add and push and cmp dec and adc rcll icebp (bad) lcall dec push sbb add femms add mov and sub adc xor and sbb dec mov push syscall and sti sub adc adc sub movhps or adc adc and pop push sub dec pop sbb (bad) ljmp add and pop das inc push or inc and sbb push push pop sti mov jle adc push add adc adc xor (bad) (bad) (bad) call sbb dec or xchg add adc or inc push pop xor inc inc or and xor in or push pop aad adc sbb mov push idiv adc xor or lock push sbb sbb (bad) adc dec mov mov lods dec adc (bad) lea add sub das xor or or adc and or adc or or push add sti nop inc xor pop lock jecxz jg cli add sbb adc lock jl and in inc pushf mov add (bad) cmp cmp pop sub dec or loop mov movsl call sub mov or or mov xor bound or jo jmp jo sub add sub dec fiadd loop rclb (bad) sbb das add sbb sbb adc add (bad) pushl adc and (bad) cmpsl add pop pop pop sub or adc adc jb push xor (bad) push test mov mov ja aad mov mov and and lock pop lock add (bad) xor inc pop popf sbb add mov and and out add pop adc dec push add push and xor fistpll pusha cmp movsb sbb push js subl xchg fs push lds pop push mov in sbb inc jno mov adc in decl dec or mov push dec push cmp cmp pusha add sbb mov mov outsb sbb add pop lds and ds lock adc adc outsl push push add or or subb adc inc sub fistpll add cmp push pop and (bad) pop (bad) aas (bad) das adc and push sub sub mov clc incl cmp or lock add sub loope adc ss push add add mov ret add or fcomip lcall mov jl pop sub leave sbb adc lock pop incb add lock outsb or adc add (bad) xor lods or push sub xor (bad) lock or fsubs xchg xchg sbb or or add mov rolb add add test jnp or call outsb add js data16 inc pusha add and or xchg mov add sub iret sub or add in ror (bad) aam mov inc sbb and loop jb add dec inc cmp and add aaa fs dec decb mov add or lahf enter inc cmpsl mov das mov cmpsb je es pop enter jmp jp (bad) jbe sub xchg fidivrl sti push or cmp cli inc and jae cmp xchg js aaa sbb jmp dec mov repz bound inc mov gs add data16 inc add add mov inc adc add add add add incl add add add add or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add or add add add add add call add adcb add push add add add add add add add add add add add add add add add add add add add add pop add add mov add pop add in add add add add add add add addb addb add add add add add add add add add cwtl add add jo add add in add add add add add add add rolb addb add add add add add add add or add add add adc add add add add add add add or add xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add inc mov add push add inc mov aas add add add add add add add into add add add je jb imul inc add insb add dec add data16 add stos add add add add xor cmp xor xor bound xor add dec add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add add add add imul inc add jae arpl jb imul imul add add inc add je dec add arpl imul add and jno test push pop or pop sub pop ja add add add add imul push add jb jae imul add add add add add add add add add add add add add add add add push add add outsb add add outsb add insb add popa add add add imul outsl add imul add add js add add add add popa add add jo jns jb imul je add test add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add insb add add imul je jae and jb add add jbe add add add add add jb imul outsb add insb add imul outsb add insl add add inc add je dec add arpl imul add add js add add and add outsl add add je dec add insl add add add dec add arpl jb outsl add outsl add je scas add add imul outsl add jae scas add add jo add popa add add add add jns jae je add add add inc add add add jb outsl add add je push add jb jae imul add add add add add add add add add add add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add adc jae insl bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds jae gs bound push inc pop jbe add jbe add adc add adc add jbe add adc add jbe add jbe add add add jbe add add add jbe add add add ja add add add push dec inc dec xor cs dec dec add push inc push dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec jo outsb push jb arpl jae outsl imul add jo imul add je jb gs jo outsb inc add add pusha adc add cmp cmp cmp add push add add add xor sub add add (bad) sbb xor xor push add sbb or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor push add sbb (bad) shl lret dec out or inc sbb jl jg push mov mov (bad) add xor add add adc jmp jl dec pop ljmp cmp or dec xchg or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and (bad) add xor dec xchg or add (bad) add add (bad) add add lods mov push dec xchg sbb or and sub mov imul cs pop sti adc jbe inc add inc hlt call int3 and mov add (bad) dec in mov imul inc cmp inc into inc adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add stos cmc dec sub js movsl das mov out out mov push aas cmp clc jnp in or lock inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb xor xchg and jl out dec sbb ret sahf sub out daa push jge negl push mov in cmpsl sub stos gs fcoms dec dec inc lcall loop pop xchg or push js inc int inc jle rcll lds leave (bad) jno add add mov divl sbb push add add pop lcall lcall in dec subb xor push or push add add xor and or push add xchg push das das outsl arpl je,pn popa ja gs xor push add adc add add xor add incl add xor push add pop add xor xor xor je jo das das arpl je,pn popa ja gs das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub or xchg (bad) or add addl pop xor jecxz sbb pop aaa pop cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc test sub mov pop xchg add (bad) xor cld loop sbb sbb jns bound aaa push and mov fstp push aas sbb push push pop cmpsb cmp adc mov (bad) add xor add add adc or js xchg fidivl mov enter or dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and (bad) add xor dec xchg or add (bad) add add (bad) add add and or jp sahf pusha or out cmp jl cmp sbb sub (bad) sub stc push or cmc icebp lods enter and sub clc mov dec mov (bad) jle push in out inc (bad) adc movsb fcomp clc loopne bound cmp lret test in (bad) sbb ret fadds push dec rorb rorl divb jnp dec push rcll mov mov xchg addr16 hlt push add nop mov cmp hlt cmp loopne jmp mov hlt xlat lods repnz cmp xor sbb and and sub (bad) aad dec in arpl cmp or inc mov xchg scas push popf aam inc shlb adc jle aas lahf jae xor iret pop aas xor xchg mov push call add add (bad) add clts add adc add add xor add pushl xor add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add sgdtl incl add add xor and xor xor add sbb xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push add add jg cmpsl ret mov inc cmp add insl push or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor dec xchg or add addl lea push xor add push shrl cmc push and cwtl mov push mov cmp xchg sti xor adcb add loop into xor popa adc (bad) icebp outsb repz push inc jle ficomp mov xor or jno fmul fisub loope adc fdivrs cmp push mov and lahf push gs mov mov xor add add adc iret hlt cmp (bad) mov push sbb push xor dec xchg or add pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and push pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor add add sub insl popa outsb je arpl push imul insl jo outsb and jb imul outsb gs sub (bad) add xor dec xchg or add (bad) add add (bad) add add arpl cmp and jmp xchg mov fldt outsb incl adc std test popa jns pop leave dec xchg loopne dec and rcrl dec out test mov fs lock mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov sbb shlb movsl sarb xchg pop gs out pop je inc xchg fmull dec mov ja pop push fisttpl pop xor fldenv dec popf cmp (bad) or icebp mov fnstenv add jp mov scas cs jo mov sti or loope sub int add add mov (bad) add or add adc add add xor xor push add and or or or push add xor push add sgdtl incl add pop xorb push or push add add xor sub or push add xchg push das das je sub ja,pn jae,pn insl popa outsb je arpl arpl xor push or push add xchg push das das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor jb cmp add pop add xor xor mov sub je cmp das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor insb xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub add push add add inc (bad) imul arpl aas pop ss push add and xor adcb cmc outsb pop int3 int3 je aam jge aas fucomi dec subb xor dec xchg or add (bad) add add mov sub dec lock bound aaa js test pop outsl sbb aam add lcall jns and fidivl hlt sub arpl in fs or testl mov mov frstor (bad) jno int je mov fidivr out mov sub mov mov xchg push adc cld fstpl dec pop push inc inc inc outsb or mov fimull jno cld sbb mov jnp imul push sub jg or lret insl add cmp loope hlt pop test sub dec sbb and push ret xchg cmp xor jnp,pn fsubl or jno push pop iret call mov mov and push lcall cmp xchg loopne mov xor add mov add and jge mov (bad) jb iret mov or dec xchg or add xorl adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor pop or xor xor xor xor pop pop or xor xor jmp or or add push adc inc dec xor xor push add or pop inc imul xor push add pop adc inc imul xor push add or inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add inc imul insl popa jp popa insl and and je jb gs push arpl outsl insb outsl addr16 inc outsl cs dec je xor push or xchg (bad) or add (bad) add add (bad) add add push fist iret in mov icebp sub xchg jo xchg ficoml nop adc mov aad mov notl mov cmp popa xlat call xor test mov ret pop mov imul inc fst jne das fcmove out cmc das cmp cmp push sbb xchg sbb or add sub mov fdivrl mov insb and adc cld push lds imul in mov push sbb dec int scas lahf movsb shrb lret adc subl insl out jns movsb stos lret gs push xor fdivrl sbb scas pop scas jns mov jmp sub add xchg add imul out pop ja fldl add add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push add and xor adcb test dec leave mov out jecxz cmpsl popf xor push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add push cmp pop mov and popa outsl ret stos fistpll push (bad) add mov out shrl (bad) je pop lret jp cwtl das mov and mov jb lcall jo pop mov mov lods mov popa cmp addr16 jno and push js test aas inc mov dec cmp shrb jae mov jecxz fsubrl aad movsl mov clc popf in xchg ljmp pop mov inc int3 jmp nop sub pop inc addr16 push inc das iret adc dec push out dec (bad) mov pushf jo sub int3 sbb cmp inc iret push je punpckhdq arpl loop mov js lea cmpsb in idivb js arpl dec push std dec repz jns cmp jmp push or (bad) add mov add push add stos and in xchg leave aam xor xor dec xchg or add or push add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and push pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor push or xchg (bad) or add (bad) add add (bad) add add and movsl xlat mov imul in es sbb xchg divb imul jne xor push push int or mov cltd loope aaa dec pop into cmp xchg (bad) cmc daa xor cmpsl mov pop mov sti int bound sbb icebp jecxz cmp nop add cmpsl jbe jg add jle rcr add imul inc add fist jno push add add dec inc cmp mov insl orb aas sbb das xchg cli in ja mov mov cmp sbb bound push (bad) hlt pop xchg sub jle std movsb xchg cltd jg int movsb jne out adc sbb cs cmpsb mov dec jle mov icebp xor cmpsb ss xorb movsl int xor mov add add mov (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb sub sub and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor jb xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor and push or push add push or push add xor push add adc xor movsb sbb xor push add add adc jb push imul sub sbb push add add iret cltd test dec leave mov out jecxz cmpsl popf xor push add and xor adcb cmpsl ret mov inc cmp add or dec xchg or add (bad) add add out movsb les dec mov psubusw in jp and inc cmp insb sarl sbb test (bad) push cli adc dec and andl mov arpl inc call add test jno out add cmp pop adc (bad) aam in jns or jb aaa and or lcall nop pop cld cmp cmp cmp adc and int3 dec and nop pop pop mov cmp in (bad) outsl movsl and scas or mov outsl xchg pop mov pop (bad) jne arpl into xor sbb test lods xchg cli lods in xchg mov ret arpl adc cmp sub cmp add dec xchg (bad) xor add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc add and jge mov (bad) jb iret mov or add sbb adc or push add (bad) aaa add or add add sbb or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add push add shrl mov arpl mov sub or dec xchg or add add popa jle dec jns xchg dec icebp push loop aad xor sub test shrb popa jbe pop mov add adc xchg cs (bad) push jbe xor pop jno dec or cmpsb inc scas pushf mov push test dec xchg push ja dec outsl lods mov sbb xchg fmuls push out in add mov push (bad) sub xor aaa jge xchg je in or or pop xchg or stos int std xor or xor jmp loop fsubrp cmpsb inc push lcall loope aad aaa or jmp mov xchg aad and loop mov inc add cmp add ds int3 push cmp inc inc cmp xchg inc jp jmp inc xchg lcall mov cwtl les sbb mov mov xor sub add push xor add add add jb pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and adc iret hlt cmp (bad) mov push sbb push xor push add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor xor push or xchg (bad) or push add aas fsubs stc lcall xor ret mov enter push or xchg (bad) or add add jae mov pushf mov insl xor mov push les scas dec lret sbb or lods icebp mov imul ds pop repnz js cwtl xchg pop les popa je xlat push cmpsl cmp jae cli out adc test add (bad) xor inc (bad) xchg mov pusha mov aaa icebp in neg jle insb popa mov add aad outsl adc and lea pop cmp adc or xor mov dec lcall jmp sbb popl out xor call xlat scas xchg xchg aad cmp pop call xor jp cli and add pop lret repz cltd sbb jbe pusha lods (bad) pop mov movsb push xchg call cmp lret icebp loop mov pop push mov inc jle xlat cli mov loopne add dec add dec add dec add dec add dec add dec add (bad) dec push pop jb int jle dec mov ficoml gs outsl and jae out gs outsb gs and xor outsb aaa inc (bad) dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add (bad) dec add push cmp dec add dec add (bad) dec add dec add dec add dec add dec add dec add dec add or inc (bad) dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add pop add dec add dec add dec add rorb jecxz add out add (bad) dec add dec add dec add dec add call dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add das js (bad) dec add dec add dec add dec add dec add dec add dec add dec add (bad) dec loopne mov dec add dec add dec add dec add dec add dec add dec add dec add mov jb (bad) dec add dec add dec add dec add dec add dec add dec add dec add (bad) outsb add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add push dec (bad) outsb add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add push dec (bad) dec add inc or sbb cmpl inc cmc inc (bad) xchg cwtl inc (bad) dec inc inc (bad) insb or mov movsb jo outsb in add (bad) fucompp inc ret jns in push shll mov dec push and into (bad) push inc dec add cwtl and or ds lret dec pop pop jl sub (bad) dec xorb mov dec pop rorb std sahf jns lods lret pop lock sub cmp sahf pop pop dec push pop dec inc xchg mov inc inc cmp adc xchg push test mov or inc mov xchg cmpsb mov (bad) mov sahf in ja out mov sbb pop xchg mov push imul jge mov (bad) aas adc jl sti (bad) dec add inc (bad) sti mov jecxz ret or mov (bad) sbb dec pop movsb (bad) clc mov inc leave xor inc mov lret mov and inc fcoms sti aad inc (bad) xor mov adc mov or pushf push sbb lea cmpl daa in testl bound jnp inc ds mov push lods mov mov fucomip outsl sti or dec ret jbe mov push shll mov mov ret dec imull ret lds outsl mov cli push ret sbb push cli out sub mov std jle test mov inc dec cli adc mov or ret data16 mov clc cli fisttpll imul cmpsb mov (bad) rcll aaa cltd xor xchg jle sti movsb mov sarb scas rol popf inc mov imull rcrl inc les std cmp push add fdivrs xchg jp in hlt les jne jb inc (bad) out out not xchg jno in lds icebp inc mov mov dec (bad) mov unpcklps inc ror les ret aad sbb mov or push (bad) std call (bad) jbe ret jae sbb adc sub (bad) dec jno mov scas cmp shlb fs out nop jle xchg fcmovne aad pop sbb pop sbb add pop ficomp inc addr16 (bad) icebp cld idivb repnz xchg lea into dec incl jns,pt sub rol cwtl dec dec dec nop jmp jle dec cmp fidivr and (bad) adc mov in fwait test or addr16 jecxz cli adcb inc jo nop and (bad) lahf (bad) cmpsl inc adc scas mov test jmp pop lds insl jle sub movsl icebp scas or movsb mov jge enter (bad) ret push mov lds jbe push icebp adc sbb icebp mov popf rcrl rcrl xchg mov xchg sahf mov mov push adc mov pop sbb pop xor push (bad) aad or xor add ret stos xchg or sub es adc sbb imul inc mov (bad) jne xor sub dec cltd inc cmpl xor clc jb push push push (bad) jnp push hlt xchg addr16 xchg mov dec pop clc dec jo mull cmp decl ficoml or xchg ds lods mov inc imul push fxch cmpl mov and add lock dec mov pop lods and repnz mov cmc fs mov test aas out cmp cmp sub sub bound inc inc mov shrb mov enter loopne mov xor inc jp inc es inc sbb ljmp dec fisubr es inc rorl mov into cmpsl or jmp add fmul pop or sbb mov insl jg insb in mov scas sbb and imul in insl pop cmpb fmull or out cmp sbb xchg arpl jne or xchg das push popf arpl xchg cmpsl sub sbb int3 cli jne int3 cwtl repnz or outsb sbb sub xchg push fnstcw adc mov mov (bad) sahf mov loopne xchg sub cmp pop adc mov fistpl int or xchg add xor sub dec (bad) xor (bad) mov sahf subl enter (bad) (bad) sbb mov dec popa int or addl push cmp or inc pop sub aam cmc jecxz push mov popa imul xchg xchg dec out pop cli lock cltd (bad) jae push leave faddp (bad) daa dec pop adc js repnz inc jl mov push dec pop push pop pop lods jp mov lahf pop inc aaa sub loopne inc jnp cmp mov pop dec adc inc jl sahf push test dec lahf out lret dec mov jo movups jl xor addl ret jne outsl xchg (bad) sbb repz sub xchg pop movsb lret stos rorl dec int (bad) inc fucomp mov xchg pop loope scas into mov rcrl icebp bnd xchg bnd mov push ja ret push ds iret in cmp pop into mov test dec push push mov mov and dec sub xchg iret (bad) ud2 push dec fimull std xor stc movb (bad) into inc mov dec xor decb lock (bad) cmp xor insb jp lret test adc rorw mov dec cs mov ds test cmc xchg imul sub inc movsb scas push test jne nop (bad) mov mov out jbe rorb jle dec jb icebp (bad) movsl je mov (bad) stc imul inc hlt mov nop iret mov (bad) clc and fwait pop adc cmpsb insb sub stos xor inc cmp pop pop ljmp rorb or mov jo or sub sub int push nop dec pop movsl pop lcallw stos mov jg sahf test dec pop push int3 sub sub leave lds lods dec push arpl push jne icebp xor add out xchg sbb popf push add fsubl sub adcb add int3 adc scas push pop jbe and fs inc jl mov das addr16 cmp fdecstp sarl xchg ljmp dec mov and js lea mov xor enter (bad) xchg jns test mov mov push mov sub hlt ret jbe dec ds lcall mov push mov dec incl stos loope imul popf jmp mov push daa push (bad) or out pop std emms ret xor fcmovnbe push ret or fild lock stc ljmp mov cmp sarb or ret xchg lods lea iret es jmp push test push sbbl pop leave fstps (bad) ja cmp push lods jg sub sub cmp lds push or movsl mov dec pop vpsllq dec imul push les sub push fcomps leave je lea cmpsb lds xor mov lods int3 lock fisttpl sbb popf sbb push mov push and movd dec sub fbstp clc mov lret xchg in (bad) les pop pusha les iret xlat push add mov jns xchg pushl (bad) dec push inc jle jle mov add jmp mov jecxz or data16 jb pop into shll lcall int ss out push or leave lret mov xor dec js xor je out imul cmpl cmp aad mov jmp push inc push fwait xor adc test jbe mov jl push mov int push push pop jge pop or jge fiaddl adc push sub push out (bad) push rorl shll jne loop sbb lds aam (bad) std add dec and (bad) stc push inc rcrl inc (bad) sbb (bad) add pop enter push inc outsl sub inc sahf dec stos add das sbb loope push or sbb pop hlt pop add push gs fisub add ret or xchg add je in test cmp fninit incb aas push sbb daa clc je mov negl aam sbb rcrl bound popa mov sti inc vpaddusw mov insl jb outsl aaa stos cmp sbb or sbb add popf dec ret in mov mov mov pop push test das outsb mov or out sub into sub iret mov inc sahf dec add mov adc cmp mov cmc adc lods dec pop cmp neg int cmc mov jl jmp pop lds addl xor sbb and jb pop lret test dec fwait mov mov lock pop push push out clc int3 fnsave in xor jne movsb xchg out cmpsb invd or or mov mov inc mov dec cmp xor add idivl pop mov ficom inc push idivb inc arpl in das add aam dec cs repz sub je lret dec push jbe (bad) scas xor and mov and jns arpl sbb clc or jl nop jmp sbb and (bad) cli mov push and mov stos ds add out jne inc lea neg mov or and leave (bad) sbb mov cmc inc xor rcll movl ficoml jns xor lea cwtl (bad) mov repnz pop push icebp inc sub scas adc mov lcall aas jb cmc push add and lahf sarl sbb jne inc fsts fcmovne and mov ficoml and xchg and fisubrl insb xor pop mov test outsb adc ret push dec pop jg (bad) dec xor or addr16 (bad) jo leave jp fstp sub cmp cmp cmc bound insb rcrb (bad) loope pop mov mov dec ret inc cmp lret xor cmp in cmp scas rcr jns pop xor int xchg jmp ljmp into test add scas cmp dec jecxz add mov and lahf lahf lahf repz ffree sbb iret outsb cld cmpsl or pop aaa adc mov and jae add push sbb aam enter cmp pop (bad) ficoml inc (bad) xor call and pop cs xlat icebp imul jg sub ret test pop jbe aas fdivrs mov adc into dec arpl out lock call adc add mov mov mov sub lds int sarb int rorb (bad) cmp scas xchg addl pushf popa add hlt cmpsb jmp repz cmp dec adc ret lcall lds out dec fwait rcll loopne push lret rorl push jae fist outsb (bad) xchg lcall insb mov xchg std push push sub push inc xchg pop cmpsb std push mov repz mov outsb hlt add dec jne rcr test (bad) loope xchg sbb mov pop ds adc jno sub into mov popf popf pop cmp add push xor cli jbe add push lock or dec push cmp xor les outsl dec pop pop add xorl add pop mov test ja jns arpl and shll pushf inc ret jge inc iret or bound jge andps out cmpsl test xor push inc addl inc leave and lods bound lock push cld aaa imul les (bad) ljmp aam (bad) je jns test jle ljmp push push leave std inc inc mov inc test dec lea cs mov fwait mov dec les xor insl aaa or inc fs lea and add mov jp sub dec lahf inc inc cmp outsl cs add (bad) pop dec aad inc mull dec addr16 add xchg pop xchg dec addl fisubr mov jns cmc push jns rclb das pop or and pop inc cmp or int3 adc fs fdivrs dec lcall cmpsb stos (bad) sub aad (bad) in mov cmp cs (bad) mov push push (bad) adc cli loope (bad) test dec push dec add sub cmc sub dec push (bad) mov cmp sbb pop int pop enter pop sbb (bad) dec std cltd jb xchg pop dec cmp push jle loopne out orl sbb pushf sahf jbe cmp lret push in push enter lcall mov push mov dec mov add aaa rcrb (bad) pop dec lahf inc enter inc mov jg push stos in xchg pop pop or mov dec shlb pop pop or std icebp push xorl (bad) mov ficom adc xor inc mov xchg mov mov jne shl push sub xor gs sbb adc push add test out adc jbe lret dec sbb int (bad) pushf jbe pop pop mov call jae push cwtl lock push adc cmp mov xor roll leave cli add call sbb dec jl hlt mov popa (bad) or dec int in sbb inc lcall ds bound std dec adc mov repnz pop pushf arpl adc pop dec lea cltd xchg pop inc jnp add push leave jl iret sub (bad) repz sub dec out pop stos mov js push dec mov and jno test and mov add dec fildl adc mov lds dec inc pmulhuw pop pop sbb lds loop mov std push add scas (bad) ljmp inc xchg es mov jae repnz mov cmp dec xor add pop sbb scas gs add fwait pop cmp fwait loop divl mov in je lahf push ljmp xchg jae push mov lods sbb dec addb pop push rorl rorl sbb sub lcall (bad) std jge movsl inc mov adc clc add shrl bound add pop outsl popf inc mov psubusb (bad) lret imul mov (bad) mov fcompl sub pusha mov dec sub imul cmc push mov mov xchg mov xchg add in inc cmp mov jg fidivl test and jns push and mov bound negl sbb inc adc adc lcall push sbb inc cwtl jmp pusha xchg into adc int in lds sbb sbb les or inc cmp aas mov push lods ret dec sbb mov sbb inc lock icebp add into xchg out in mov xor test fwait jno cli (bad) jb arpl das jne movsl adc mov aas dec lret arpl repnz into aam leave xor mov shl adc loope xor xlat pop adc xchg stos jp mov pop xchg gs cmpsl dec fistl push jne (bad) dec scas mov pusha pop jp stos data16 pop sbb les push inc add jge icebp xor jg add or rcr jns aaa and xor adc jno dec jno mov add inc mov leave clc inc mov adc xor popa jo cli outsb pop mov sbb ljmp cltd sub or inc shlb ja add rolb int3 daa pop arpl lret mov inc dec shrl sub xor mov inc int3 test (bad) dec cmpsl mov dec sub js sub cmpsb test mov adc (bad) cs dec mov rclb out shrb push sbb push push dec mov pop xchg pop cmp dec clc adc jnp test pop ret add push enter or in sbb mov insl mov out mov mov sub fxch or jecxz lea push and and ret aaa ja lret inc or xor test lahf inc xchg (bad) xor mov pushf (bad) lret out je loop insb pop clc push add mov dec iret leave (bad) pop cmc lahf sub jp insl je mov add int3 xchg jae push fwait popa push aaa adc lock pushf dec mov mov int3 lock (bad) adc push inc sbb push imul dec mov inc jb and dec sub mov data16 xchg cmp jne addr16 and jae jns inc sub sahf bound push add pop xor add std inc nop ja fcoml sub inc inc sbb adc lret fildl lret call jge cmpsl js (bad) sbb ret jg into xor mov mov adc addb nop repz (bad) imul inc leave out sub hlt mov rcrl mov dec dec sbb dec popa int3 sbb (bad) xchg imul mov dec lcall xchg stc outsl loopne sbb bound fcmovb push mov (bad) jmp mov cmp aas or push stc and xchg dec lcall mov mov call push sti xchg scas pop or (bad) pop sub outsl out inc cmovnp dec xchg pop daa cmp in mov dec lret outsb xchg pop subl and or (bad) ljmp (bad) ljmp jbe mov scas jno (bad) rolb mov fisttpll xchg dec (bad) data16 pop aad in jp (bad) ja jno,pt dec xor les cmp out lock mov scas and pop in mov gs jl nop mov andb sbb adc mov inc mov adc push xor mov ja fistp and imul push cld sub cmc in xchg push xchg sub or roll outsl push test icebp scas xchg repnz adc mov ffree jle mov ss ret mov test dec pop sub daa jae sbbb jge sbb inc pushf push insb inc aam jmp jno rcll add sbb mov and scas mov icebp or mov lahf pop les rclb cmpsl adc int push (bad) xor rorb jb loope adc push cmpl and pop adc mov enter vdivsd dec in cmp rclb pop out fmul pop jecxz out sahf ror jne xchg push subl nop sbb ja mov or int sar and sbb sub pop mov movl add mov test sbb std (bad) jle notl add jle xor lcall std js out mov and test push mov add push cld xchg lahf dec or jg inc sbb shrb dec cmc jle sbb inc aad inc test shrb (bad) xor (bad) shlb or mov adc pop mov dec test inc bound jp loop mov push (bad) fsubrs add fmuls pop (bad) sub mov pop mov pop sbb dec ret ljmp test fnstenv stos les or dec mov mov imul lods push ret jns jb rcrl jo dec sub cmp sbb add xchg jecxz push fisttpl (bad) mov ljmp add ja inc mov jg or mov cld add pushf ret mov int3 add push inc icebp mov orl inc je mov iret pop pop push cmp pop scas xchg repnz and push clc pop cmova ror adc mov sbb icebp fldl dec pop inc dec and inc dec sbb nop lods jns pop push sbb inc mov adc call shlb ret add or add xchg addr16 ret popf mov sarl movsl mov lahf pop xor dec test xor fldcw sub mov push (bad) mov ss mov dec test cmp inc (bad) repz addr16 aam popa rcll ljmp (bad) iret mov push mov xchg jmp and cmp cmpsl divb inc test inc mov sbb push jns xlat sub pop mov int3 xor mov xchg mov xor nop xchg add mov push fsubrp xchg je sub data16 mov test pop lahf inc add xlat roll xchg bound push test inc mov incb fs mov aam subb and aaa insb fcomps es jle xchg je call test inc cmp jo in pmuludq fiaddl adc into outsl xor jmp out add lret movsb int dec dec dec ficompl dec mov xor das mov add sbb push (bad) popf insl jmp loop lret sbb push lret iret mov mov jg and add sub pop roll lock mov lock sarb nop jl cwtl inc in inc mov loopew jo mov scas cmc adcl (bad) or icebp add dec int push setge (bad) adc dec pop aas push add dec pop scas lods insl das jbe pop xchg xchg ja loopne jns push xchg push push fsubrl add lds arpl and dec or xchg dec push je mov (bad) stc cld dec push lds jmp cmpsb stos mov scas in addl nop neg imul lock es stc nop cwtl outsb sbb mull cltd sub (bad) clc shr loope loope and jb ret test outsl dec movl inc pop daa mov subl lods adc xor jmp es aas sub into rol mov and sub xchg inc mov cmpsb and push sbb and ficom adc lock pusha pop shlb outsb sub cmp add movsb inc sarl push shlb push xor or les xor shlb ljmp or inc pop jl cli shrb scas mov in pop fstps cltd push xchg (bad) repnz push jmp cmc pop je cmpsb pop cmp xlat into inc shrl xchg cwtl push mov ss jne jb and dec pop jmp imul movsl jbe sub addr16 pop mov mov decl and mov pop fs stc sbb sub sub cli push lods mov fs jae outsb icebp mov inc adc mov aad mov dec or jno sbb movsl test or gs dec push cs push cmc hlt call fisubl add (bad) pop fistpll lret aad jp enter pushf xlat repz inc add or data16 pop addr16 mov xor fiaddl sbb cmp mov add (bad) ja push mov cmpl subl mov mov or aad jnp push xor push mov xor cmp iret adc leave call cmp (bad) jg cwtl xor dec or xchg push mov sub xor out loope adc cmpsl pop and dec aad test pop dec dec les inc fisubl adc push mov xor ljmp mov xchg fcompl scas (bad) shlb mov pop mov jae rorb add ret rolb inc push outsb cmpl ret scas rclb (bad) pop aad cmpsb push or sub fs in loope add mov jge pusha (bad) xor fchs add int sub jbe mov ss xchg and mov leave and popa xchg adc outsl xor dec shll pop iret lahf jae dec loopne je or mov push mov inc (bad) cs std cltd (bad) adc outsl mov daa add adc adc dec ss jne xchg ds push jne mov push mov pop test xor or bnd js pop scas xchg call inc jbe jecxz push push hlt pop call fs mov inc repz outsb push mov mov lock pop cmc lock adc (bad) or add pop xorb mov jecxz jns adc out hlt sti repnz loop jo ja push inc push mov cmp inc fldl stos mov mov mov inc leave jne cmp nop add xchg and jp sbb in test adc mov dec mov iret mov mov rcrb incl add inc mov xor mov out mov ja xchg js,pt fs lcall (bad) shld (bad) dec add popf and out into fildl dec sbb fadd out xorl popa jbe cmp add or mov ljmp sub mov inc push call pop push adc int3 or add es cmp fmuls mov lods cmp dec std aas enter movsl adc mov xchg jp push fs arpl into bnd out push push mov jne inc dec test popf clc stos popa and mov xor pop dec xchg out mov lea or cwtl jp push idivb insb mov clc add out enter add iret push or or adc lret mov pusha dec (bad) sbb lock cltd dec (bad) jae leave and (bad) repnz mov or inc data16 fldl or mov add prefetchnta pop push scas aad out add pop fstp pop pop es loopne leave arpl ljmp add flds mov cmc stos inc pop dec inc dec mov fcoml popf xchg sahf nop aam or xchg push es dec and fs cli inc mov inc int3 sub push push cld imulb into fs outsl push cmc xchg add push inc adc jecxz mov inc fnop rcrb fnop sub jb dec pop sbb cmp xor adc and outsb or ficompl jne sbb loop xchg loop movsl mov pop push leave add push jb leave iret lcall mov pop jae int3 mov outsb arpl xchg jb add dec into xor sub sbb lahf or mov push and push popf add int3 aas or clc jp (bad) and add icebp leave in arpl (bad) mov into or mov cmp scas loopne pop mov mov das adcl and xchg scas loopne inc cs movsl and and push push rcrl xchg fmuls (bad) pop (bad) xchg push pop roll fs xlat (bad) movsl insb lock add or lods test adc inc arpl sbb jae xchg mov addb add in lds mov mov out push mov hlt add xchg daa out mov cmp repz lods lods rorb sahf (bad) lret inc les jle inc or lock add pop outsb dec or dec cmp jmp xor sub dec inc jge test (bad) sub enter push xsave test pop inc inc int3 arpl ret mov sub pop dec inc shrl pop stc ja xchg jns push mov add stos fildl lret pop mov fcmovu inc lea inc stos push gs xor mov and daa mov cmp push aas pop and push sub loope in push icebp ja sub xchg push mov fimul ja imul mov rolb imul add js mov jp popa mov nop mov sahf xor (bad) xor push std das pop dec pop mov lea inc fadd or push leave or dec mov adc and enter rolb fwait pop cmp add ds repnz addl or ljmp sbb lcall dec cltd push stc out aas dec cmpsb jge and pop mov cmp mov aas daa mov into (bad) or jae add loope scas (bad) ja (bad) mov int scas add push or jbe mov repnz mov add ret jmp sbb cli pop inc sub or lret pop lea sub daa push or lea cmp lods aaa and sbb arpl jge imul xchg xor add les int stc dec add (bad) addr16 add push mov sbb iret pop jns gs dec cmp cwtl lds mov addb ret cmp rcll sbb xchg xor fstpl push xchg xchg (bad) je or rol push or cs inc and add adc stos leave mov lock pop inc or xor stos or fwait stos or jnp cwtl and inc (bad) scas or cmp (bad) dec sub adc cld pusha or insl pushf or mov or mov enter mov (bad) sub test pop test pop xchg or in outsl xchg dec sub add push lret push movsb (bad) pop outsb clc loopne pop jne dec pop les add incb enter push sbb fldt xchg arpl bound mov insl test (bad) hlt insl sub leave js stos jp icebp dec add loop nop cmp push pop and mov imul xor call lods in inc sbb mov mov test cmp inc xor mov sbb inc cmpsb or xlat mov mov sahf jno popa popf lods aam xchg jmp add mov mov dec int popa ret or pop jmp test outsl inc pop cs mov cmp mov insl sbbb or test xchg fdivl xlat in cmp inc loopne jg mov pop inc sub sub movl lret sbb mov dec add jbe add dec (bad) leave repnz add push lods dec or lods mov inc xor cmp jnp add mov ss or inc out sbb pop sub ret popf mov in lea in push lahf mov rolb imul cmpsl add out push xchg mov dec addr16 add fwait aad dec inc or andl xchg mul out popa or pop mov pop scas pop push daa inc arpl sub pop jle push aam mov inc mov and mov and pop push loope daa inc and cmpsb das pop in push inc mov gs ret pop cmp pop pop inc int shrb dec jg addl sub or nop pop test add push push repnz dec sbb sahf pop cmp loop push into cmp outsl add push dec inc lea shll lock dec icebp rorl shrl aas lods sub imul xchg pop test bound lret in inc and aas push (bad) data16 sbb and jno addb adc roll cmpsb and lea aas sbb dec xchg jne adc inc jp sbb pop pop dec xor and mov jl dec xchg mov rcrb jo sub inc shll insb mov data16 out push into inc push mov sti or sub ds ss das loopne and or push lcall ret dec push (bad) sbb push or (bad) aam cmp (bad) hlt cmpsb cmp adc lret and xchg loopne sbb xchg insb xchg add push push pop push into in je lcall imul sub xlat add sub int lea loop lahf lret adc dec inc mov repnz aaa mov enter divl (bad) and cmp and sbb movsl cmp in mov loope (bad) jmp pop divb or (bad) sbb movsl and mov sub std or adc cmp lds sbb push inc or jle les add sbb and andl inc jb test call push sub mov push cltd jb out cwtl mov or and (bad) mov inc xor cmp pushf mov inc xchg inc or mov cmc (bad) repnz mov mov insl daa aam jns lock scas inc dec jl lret aaa test xchg mov (bad) sbb test repnz adc btsl outsl sub inc nop bound inc or test and cmp sub dec pop mov pop jb rcrb scas iret ret movl inc or jnp xlat les mov aad push rolb cmp pop pop lahf (bad) adc data16 movl bound mov xor inc add xchg iret cmpsl pop or add mov xchg lds mov mov push out les fdivrs fcmovb dec insl inc xchg inc xor inc stos push jnp push dec icebp mov jb dec mov cwtl dec push dec xchg add or test jp fisubr jp inc jbe xor (bad) and sub fmulp push lods dec lods push push or dec or inc or and dec mov dec and es or xor fisubr inc movb mov cmpsl stos push and mov and inc jg push xchg fisttpll fidiv stos or add dec sbb insl andl inc lret inc pop sub and bound inc movsb mov mov cmp jecxz inc inc (bad) sub bound in rcl fs mov or dec push aaa (bad) rclb cltd mov push outsl push bound lock leave or jle sub jb andl sbb sub pop add popa sub (bad) lods dec xor fldcw sub mov inc pushf inc ja mov pop dec movsb clc popf sub into andl sub lock and (bad) push add mov and mov adc sbb jbe or add scas xor orl push outsb push ret jecxz outsb das xor popf das movsb ds out pop movsl ret scas mov jecxz repnz add xchg jp test in mov cmp inc inc xor data16 pop xor push jnp jno xor lods sbb cmp xchg or mov cltd andb testl das aam into out xchg cmpsb bound inc popf and mov js and leave inc xchg sub mov loopne sbb repnz cmp sbb inc into inc adc test cmp (bad) aas imul lock (bad) cmp lods xchg push (bad) cli test adc das jge test sbb scas push push dec dec mov aas add popa sub jge pop das add sahf push and mov aam inc pop pop xchg inc lds push jo in pop mov inc add mov iret jg push and mov cli inc xadd dec and mov xlat cmp xlat in in insb dec aad cmp imul xor (bad) lret lea ror push pop pop push dec and les xor insb add xor add sub (bad) in cmpl and xchg cmp sub cli xchg pop lcall scas mov lock fnop jo sub jmp dec xor mov pop mov inc in push dec pop push pop mov into ror adc inc lds fsub imul jp sub mov mov pop xchg lea mov xchg pop xor loop stos (bad) mov lock out mov xchg xor xchg divb addr16 js pop adc mov pop xchg aam pop xchg mov (bad) dec sbb ja inc test lods dec (bad) or pop xor xchg (bad) dec pop inc lods arpl loop fsts inc xor or dec les push pushf les adc add and (bad) sbb cmp gs arpl adc or push mov xchg pop pop fmuls adc in sbb mov push fs sarl test idivl dec xchg test or push nop xor into adc dec (bad) xor jmp and push fsubr test pop inc aad mov scas xor data16 inc pop fistp mov js xchg or shrl data16 jbe mov andb inc sub pop enter out repz jb stc aam push movsl sub loopne mov sbb pop inc lcall push fsubr inc rorb push loop add xchg inc pop add and mov sub mov adc js jbe jno loopne rcll and cmpsl jle xchg mov xor xchg pop jp not outsl fwait into dec jge lods sarb cmpsb add (bad) mov add push scas push mov jo jecxz aaa test lods stc push mov inc mov imul inc cld vmptrld sbb cwtl dec repnz (bad) sbb sub (bad) xchg push cli xor aad sbb in sarb das dec mov lds aad imul pop cmp inc push std stc xchg hlt cli dec rol mov pop cld push loope mov clc dec scas or les mov aas aad repnz repnz cmp mov push mov scas into jmp add aaa mov jb push jecxz or xchg (bad) ret dec (bad) or add jmp jp cs pop inc push xor aam stc jno xor pop arpl mov nop int3 ja data16 adc cltd sub jmp push popf cltd pop das cwtl data16 mov enter push mov jge fadds jnp xchg pop fisub arpl iret call xor mov lea inc add mov add cmc lcall push dec xchg fldt sub aaa pop aaa wbinvd dec das and push inc adc or (bad) add push jmp aaa popa mov es mov pop inc (bad) inc push or and jns out mov push out jns (bad) es andl sbb pop mov xlat adc pop xor stos js dec popf push add add pop xor mov test and into adc or sahf ss sbb fwait mov or cmp cvtpi2ps sbb push jno cmpsl insl loope loope push fucomp mov dec xor es mov cltd cmc icebp stos mov push cmp lods cmp fcoml vpand leave push dec add push mov aad dec (bad) icebp (bad) int inc (bad) fisubrl and fwait sub xchg or fbld ret xchg add mov arpl int out dec dec adc inc lcall mov std pop cmc (bad) lea dec mov dec inc incl rol test fnstcw lds outsb add and scas sbb nop mov xchg enter ret push enter and and pushf imul dec sub icebp adc mov adc bound inc xchg push inc and inc lcall xor add enter adcb aas or repnz stc call jmp popf flds pop jg inc push add jg aad frstor hlt jp les sarb ret add inc orl pop imul sub movsl movsl or out push and (bad) jbe add pop push popa movsb (bad) xchg shl xor es xchg xor scas (bad) (bad) cltd icebp mov int3 scas lea dec cmp jg push cmpsl aaa scas dec or call jo stc or push add pop cmpsb (bad) (bad) int3 add sbb xor hlt inc or fdivrs (bad) out lods cmp sub cld in dec mov cmp mov fcmovnb (bad) jne or dec icebp dec pop mov cld dec cmp (bad) bound and stos jb bound imul cmp xchg jle xor dec jae out (bad) (bad) hlt popa mov mov outsb add add add and adc push inc mov push adc iret pushw bound rcrb pop or pushf ljmp add pushf dec inc and pusha (bad) sbb or dec outsl lcall int dec adc xchg lds ljmp jns fidivl ret add xchg (bad) or inc xchg xor ret inc insl dec popa and movsl add pushf (bad) push dec (bad) lcall xchg lock aaa out jae iret sub arpl jl push cld sbb dec mov nop bound add in sub cwtl mov push sahf inc repz sub adc fdiv or movsb push out (bad) inc push pushf add xchg es out inc xor loopne fiaddl xchg (bad) mov add (bad) mov pop cmp in imul iret ret mov clc repnz sbb bound out ret jnp sarb sbb sarl xchg mov hlt jb mov mov xchg mov ja inc dec lods mov sbb jae scas leave int cmp lods push lock add jbe xor rorl ds aaa and notb mov repz sbb es xor sbb mov pusha int push or rorl sarb nop push xchg test cmp cmc jne call fnstsw mov and push enter enter xor inc (bad) cmc jne aaa mov cmp loop xlat pushf jbe jge sti outsl fisttpll xchg scas lds fcom stos mov loopne sbb push push pop fcoms xlat inc pop push mov in into into ret sub jbe push mov inc fwait test sbb inc addl xor insb mov xor inc rcl or mov dec (bad) daa xchg jmp mov cltd pushl (bad) push fstpl pushf jnp jl sub leave xchg sbb scas mov call jl pop mov into data16 sbb popf xor sbb aad pop jo insb lret rclb mov cmp mov das shl or mov jl js xchg stos xchg lock inc shrb cmc mov inc mov (bad) pop loop xchg adc loope push push jle dec rclb aaa dec ret mov in ljmp dec enter stos loopne (bad) inc xchg or repnz ret push inc nop and enter sbb inc sahf mov cmpsl dec xor push add xchg pop push pop mov lock stos xor sub push or ss add xchg pop adc sub (bad) mov jo sub push stc sub es hlt inc mov inc or add fildl lea mov pop mov jecxz cmp leave push xchg mov (bad) xor inc fnstcw or adc mov fdivl xor cmpb jmp jl ret jge iret nop jle dec gs (bad) lock and loopnew rcrl (bad) xor aam pop xchg cli ret xor std mov cld lcall xchg add into int nop cltd mov jnp ret hlt pusha or inc test pop out icebp cmp jle ss ljmp jne fild mov leave inc jg mov sub loope inc push pop or std cmp push add xchg shrl jb add into add jge fmull imul dec xor sub pop fstpl push mov sbb sbb sbb add ljmp sub inc jle aas adc xchg jbe or scas ret cwtl (bad) cld mov std ret inc pop mov pop jle jb repnz pushl inc or aas sbb pop cmp sub lock add shll fcompl rorb pop dec dec xchg ds (bad) test sbb fnstcw es jle push or negl pop rolb sbb xor mov iret std jnp repnz sti fsubr fcompl es ljmp mov ds cmpsl dec jge idiv ja mov mov pop rclb in cli xchg and xor gs sbb pop test aad adc iret (bad) pop or add add mov scas loope nop mov inc sub mov faddl or xchg jae lods stos jge lahf sarb jge jbe xchg dec (bad) push cmp dec push inc test je cmpsl cmp lods movsb inc in xchg mov and jp cmpsl enter or imul push or addl js loop inc push inc dec in pop mov iret sub (bad) insb movsb test cmpl mov divb mov repz dec xlat dec mov add cmc mov cmp mov data16 xchg imul data16 in clc icebp insl arpl push enter in and pop add mov aam dec sti dec xor push xchg lahf jae stos or add cmpsb jge cmp in adc push addl add mov push movsl ljmp lds and and ror movsl (bad) (bad) orl mov mov inc cmp leave pop mov pop inc ds loopne std pop cmp or xor lretw loopne aam inc ret or test inc lds (bad) sbb jo xchg xlat lea dec push and leave dec xchg movsl stc rcrb test inc xor rorl mov xor jns das add add mov xor lret mov or adc sub inc jle mov pop push dec inc addr16 xor lds mov repnz push sar mov push mov push std inc cmp push lds dec adc outsb cmp or inc jno imul adc and mov fcoms test lret xchg inc inc xchg push testb cmpsl leave inc dec (bad) andb sbb mov cmp or fisttp inc and and jl cmp inc aad push dec orb popa mov xchg inc inc cmpsb xchg into dec jae iret sbb sub pushf ret jbe add jle int3 pop enter addr16 ljmp mov mov mov pop dec repnz in push inc pop xor cltd into mov rcrl arpl add syscall data16 repnz sub bound jns and sub ret push out mov aaa ret test lret rorb rorl cmpsb xchg popa (bad) pop dec push cmp scas out rclb cwtl dec adc add ljmp imul mov insl dec popf and cli push inc cmpsb pop out (bad) mov mov add add rcrl pop faddp es repz fstpt repz int3 movsb pop pop jbe cmp cmpsl inc or cltd je push add dec sbb int mov inc adc push sub xchg and repnz insb xor iret and jo and popa mov xchg or mov add xchg jl and negb lret add repnz cwtl leave popa in mov into add sbb push addl enter cmp cmpsb popa lea imulb cwtl xchg mov xchg aaa push inc test stos mov aas loop pop out pop icebp cmp fwait je (bad) cmp pop xlat xlat xor insl loope or add or fdivs lds jg push sub rol inc or dec push das or pop push std mov push or rolb sbb int lea add lock nop adc pop data16 xchg hlt mov lcall cmpsb ficoml gs fnop mov test xchg jle mov (bad) aaa and mov dec ret jle aas insl movsb dec and push inc (bad) stc jnp mov enter xchg ds pop and sbb lea scas jp pop cmpsb into dec mov push mov sahf sub push mov push and fsubrs adc lock enter dec (bad) iret fildl adc rclb dec mov daa lcall in lods iret sbb outsb or mov popa add int in lods mov cmp cltd or into push jnp arpl adc or les andl aas sbb sbbl outsl std xor dec lods ret clc pop lds shrb push xor pop push ljmp sahf int divl out push xor dec stos mov loope xor hlt mov test xor popf loopne sbb and jle sub sub mov (bad) repz cs cmp sti (bad) cmp into jle test xor push xchg mulb sbb or mov mov int3 dec adc aam sub ret pop sub scas (bad) in jmp cld repz fdivrl inc adc mov or scas ret repnz pop data16 enter adc lds add sbb shll scas add and (bad) mov or xchg int3 lods hlt sub testb mov mov push decb and call jl inc pop dec pop sub repz cmpsl xchg and dec scas cli xor enter push inc inc lods cmp imul lds das pop nop push fs test (bad) lret lock push fmulp test adc lret cmp push into adc leave sahf lret push call into orl dec mov inc xchg (bad) fs mov lahf sbb dec or test cs or or push rcll imul cli mov push and and sub sub in lret jns or lods arpl test ds nop test push (bad) or paddsb (bad) dec lea mov adc adc pop or (bad) lea cltd loope inc add mov pop int outsl aam lahf mov aam fidiv repnz mov loop rcll xchg cmp fildl sbb add push dec jb test push lds push xchg xchg sarl push ds push (bad) dec je or stos inc in imul xchg das jnp or dec test loopne fnstsw fs roll pop ss mov inc addl sub mov clc adc adc gs test fcoms mov fmul adcl inc (bad) out push sub xor aad and cmp adc dec xor bound pushf add sub mov fistpll push (bad) dec int3 jge dec xlat push dec xchg dec push mov leave imul adc pop add lret outsb push cmp xor test jae movsl push mov pop pop xchg inc rorl cs dec dec scas sbb mov rcr inc pop add xchg gs (bad) or dec add ret aaa jg xchg mov (bad) in inc pmaddwd out or fisttp ret xchg fsts push ljmp stos and lret xchg ja mov pop stc lds inc fwait je push mov xor xchg sub jmp add cs lds xchg xorl inc daa jmp cs jp pop push push or push dec mov sub shrl push xchg std (bad) lret and fwait inc adcb sub into xchg adc add sub inc push push xchg sub bound dec mov fistpl jmp push mov mov push int or imul mov jns nop jae outsb (bad) xchg aaa stos mov dec dec add stos stos xor nop add mov jae push enter aaa xchg mov sub pop add mov inc cmp rclb inc xor imul es push mov mov fdivrs dec jg xor and dec or iret dec or test and dec inc arpl scas or add scas fs jbe push imul lret dec pop mov and sti mov dec pop or mov daa dec shrb add scas and sub pop inc xor dec push loope dec inc test mov les mov inc mov dec pop shrl inc xor dec and mov loope outsl mov add inc mov ss hlt call (bad) mov les mov lret aam sbb xor subl and test fisttp cs mov cs push into push xchg mov mov pop repnz pop adc fisubrl sbb enter stos fiadd scas add sahf rorl fdivrp add out mov mov bound outsl and lret lods fistl cmp and dec cmp sbb lods or xchg fisubr fdivrl mov mov lea sub xor lret pusha nop and jl dec sub inc ret (bad) mov pushl push into mov add xor add push mov cmp sbb int3 sahf sbb lret cmp sub cmp dec inc dec ds jl push jp addr16 xor push inc ret pop cmp mov pop aam push js add insl add mulb push nop shrl inc xchg cmpsl data16 push push aam inc push sub inc sbb jo mov lretw mov lock rcrl push dec push lock pop xor xlat push and add into push mov xchg xlat add mov mov jo pop lock sbb xor fild add in leave jge dec push xchg fiaddl jg mov fldcw loopne dec xchg pop sahf iret mov add fimull (bad) pushf icebp cmp sbb sti jns sbb int or pop jnp xor push cmpb dec je mov jp addr16 (bad) mov (bad) sbb lret add add aaa adc adc lds inc cmp sub sar inc sub jo fwait imul sbb inc pop orb scas stos or inc hlt inc dec mov fist xchg push pop js clc scas mov sahf int mov xor add mov cli test ds inc shlb cmc ret cmc les mov push addr16 xor add popa insb add aam icebp (bad) mov xchg mov test inc loopne cs (bad) dec test pop dec mov ret mov lahf scas xor inc into inc sbb push inc ds fnsave jnp adc scas mov andl out dec into mov sub scas lret mov lds into in dec jno gs daa xor not jbe dec (bad) insl mov mov int andl (bad) sub faddl push pop lahf pop mov cmc pop call pop xchg daa daa jle dec inc popf addr16 (bad) push mov leave incl dec mov inc pop test lahf fmull inc inc inc add xor ret push push pop cwtl cmp cmc xor cmp mov pop xchg inc push mov xor sub ja,pn cmp and add jl mov mov dec inc xor mov aam adc xchg sub popf mov pop (bad) jno mov cmpsb in ja stos mov dec pop dec add dec mov dec push iret test push or dec and and jbe in nop jo notb fmul (bad) daa inc je sub dec cmp sub pop test vpcmpgtb aam jno sub ffree call jnp pusha jmp jmp inc adc push scas sub test (bad) mov push dec dec or (bad) shrl push xchg into dec push sbb cltd push lods loopne and repz or pop lods pop mov rcrl scas out into sub xor add pop pop je adc fiadd out dec dec xchg pusha pop sub sub ret mov ds aas xor (bad) js xlat mov and fdivrl jbe sbb push mov iret dec add fwait jmp push imul add inc mul out mov pop add cs pop pushf out jle adc inc out fs mov mov jle jno pop push lea clc in inc mov not cmc pusha add mov dec insl (bad) mov push arpl mov push into roll xchg stos adc add mov aas gs inc insb add ljmp push enter push jp (bad) movsb hlt dec dec push adc sbb in jecxz inc lcall or mov loope cmp mov xchg jne or out lock sub or and and into loopne adc adc pop inc dec xchg ret and dec ret out test sub repz in shr push mov cmc movsb sbb inc inc push xchg js aad mov pusha movsl imul fldt sub (bad) repz in cmp or sub mov hlt inc dec xchg movl sub incl and rclb (bad) xlat pop pop (bad) in movsb mov sbb pop mov (bad) mov lahf sarl xor fwait mov or mov sbb mov hlt repnz push outsb inc inc jle lret enter roll sub push pop xchg in repz out sbb pop jecxz dec pop push add dec sbb addr16 mov dec inc mov leave dec add mov or push leave stc cmc std xorb push rorb stos (bad) daa xor out sahf dec pop fnstcw mov mov xor outsb cmp cmp stos aas and fadd inc pop fs cmp or push cli popa stos shl sahf outsb ds loop dec shrl call xchg scas mov das sbb cmp inc (bad) ja pusha jne insb bound xchg inc cltd enter xchg stos or cwtl test loop dec sub js outsb xor push push test int3 sbb push adc jmp mov leave nop lds sub jno sub sub test (bad) loop into test lret inc inc dec push adc stos clc cli scas ret push leave push xor dec lret jmp mov pop xchg add push jmp cmp std or add fdivrl mov sahf inc sub sub adc addb xchg add cmpsb fldt inc jno or data16 cmpsl inc lret inc test push inc dec push dec push push or inc inc (bad) out push loop add jmp cli dec jne call mov sub mov in push or jo add xor inc in (bad) dec out popa inc xchg orl inc mov outsl dec loop push sbb jae movsl cmp ret inc mov dec out sbb daa cmp arpl inc shrb lret jge fidivrl adc shlb dec push push push mov jo pop (bad) pop roll mov rcll sbb xchg nop push inc (bad) ds cli into aas add pop repnz mov shlb (bad) xchg pop or outsb movb inc fild sbb lret jne pusha (bad) fdivs imul out mov xor pop movl stc dec pusha jno jl and xor add mov push imul es lock lea jecxz shrl sub cmp push stos jg roll (bad) in imul lds daa dec in imul add pop std aam ja int3 inc dec xchg mov loopne arpl dec inc insl fsub cmc inc std jge (bad) or and rolb pop lea push adc movsb pop and and sub cmp mov sbb cmp xor inc rolb mov ficomp jmp icebp repz sbb push dec inc cmp pop mov fild or mov dec or cmp (bad) lahf scas fstpl sbb pop bnd mov push (bad) repz jmp pop add inc push add mov enter testb dec add inc pop aas dec mov imul mov scas jno dec testl insb ss and mov mov add ret xor iret xchg pop inc push les sarb mov cmp mov movb leave sarl ror jno mov popf les push push mov xchg lahf or test push insl mov push inc pushl add jge inc dec inc popf mov aaa and scas sub (bad) xor rorl mov dec pusha xorl dec adc dec adc rcrb or lds dec (bad) mov sbb and add xlat push sbb sub and sub xchg cmp push cmpsl in pop sub push xchg sub or xlat cmp jne dec jmp add stc dec mov gs adcl lods out jno adc (bad) mov aaa int or nop add lret sbb inc mov dec dec cmpb cmp stos rorl sarb push mov add lret call xchg call movsl jne inc cmp out cli mov fist mov fcmovne sbb pop fistp mov xor ret lcall lret cmp testb push xchg in push sub mov fadd dec lcall cmp mov mov mov jge pop fmul sub mov mov push lcall mov into dec lods jge pop mov mov outsl scas sahf lret add in les nop loopne cmp scas call xchg mov pop fwait and and mov xchg jp insl ljmp in test in mov outsb lods in dec (bad) xlat jb repnz popa in (bad) out gs xchg (bad) mov adc sbb sub mov clc inc push mov xchg push in inc push inc sahf nop movsl js insb dec test pop les jmp (bad) xor and rorb inc out cltd dec adc ret dec std into dec or adc addr16 mov pop push ret cwtl les int add inc aam repnz popa mov ret add jae negb pop mov xor jnp sahf lds adc mov mov sbb pushf (bad) aam sbb and mov and pop pop enter lret jno jb fstpl lcall into (bad) loop dec dec cmp mov pop insl xchg jp add xor arpl leave push jb mov (bad) (bad) jp or mov mulb mov cmp (bad) jo in ja dec out iret push jno dec pop xor dec push and int in pop or cmp rolb mov xchg fisttpll (bad) scas test inc enter add mov pop jmp jle ret std les mov mull mov sbb add cmp inc lds addl push (bad) in cld mov ret pusha lock adcb mov or icebp sub adc push jg out push leave cmp pop pop mov call push mov inc out dec fdivrl dec sti push or or int3 mov fadds pop pop xor push pop mov fwait sbb add dec hlt inc (bad) jge iret xchg rcll hlt int mov ret cli mov or mov mov outsb pop pop (bad) mov arpl sub push push and sahf jmp add popa std loop ret (bad) sbb scas hlt mov sub pop jo adc mov fisttpll xor cmp lock ds push lea loope pop test xlat rolb loopne mov mov imul cltd pop pusha dec jbe dec xor in int3 lods or iret in cltd push cmp in sti lea ret ljmp dec jg jmp lret mov cmp jmp fxch inc pop jp (bad) jl xor xor or icebp test cli test inc inc lds scas adc push das or in cmp push enter mov outsb and inc mov xorl ret sbb mov inc fs cmp or aaa imul stos mov mov test jb add mov ja mov sbbl and inc loopne outsl mov sub into adc sub cmp icebp mov ret out int3 arpl int3 mov mov cmp push dec mov shll idiv xor shrl xor mov (bad) icebp (bad) mov dec ret and dec push movsl (bad) je inc (bad) ss sub jp mov stos fwait (bad) loopne test xorb or (bad) hlt mov or cs xor bound rorl push jb icebp negb (bad) ss inc mov xor pop lcall xor inc cwtl push scas inc adc mov xor xor popa cmp mov fnsave cmpsl cmp inc (bad) dec inc pop rorl incb das insb inc dec mov push xor push inc and out es pop pop ds gs ljmp repz jns ljmp daa iret or (bad) dec push sub and shll and or or adc xchg je andb and stc mov (bad) mov sub inc mov arpl lods or into sbb cli lcall and sti (bad) hlt cwtl pusha xchg dec call jp push add (bad) cwtl mov mov cmp cmpsb fcmovb xchg repnz xlat mov outsb add mov lock dec sub mov lds stc jae mov arpl add mov push adcb mov xor xor movsl pop dec lret xchg pop dec add sahf cwtl faddl (bad) fistpl inc mov repz xor lahf int bound popa add outsl std stos cmp stc sbb aas daa sbb mov repz hlt and dec ss xor cmp rol mov rcll idivb sub lret fwait push pop les dec add aas mov pusha lds or mov mov add xlat and test gs int3 sbb insl ds mov push lahf int push push push cli mov and fdivr inc imul inc out jb xor cmpsl ljmp lret sbb push sub mov and inc rcll movsb push cmp (bad) mov lds add ds mov mov inc int outsb and adc cld pop and sub cmp xor push cmp insb cmpsl mov orb dec mov fmuls inc push jae ds je or out leave popf dec mov jmp mov push pusha out push adc cltd push enter test mov ja enter jns push cmp inc imul enter xor js adc jae adc inc and add lret push (bad) mov bound inc mov dec xor push mov rcl scas and pop add add insl pop rolb xor movsb and mov mov (bad) cmc lcall jnp dec add add aad dec or (bad) dec or in inc lds into pop stc enter rcrb jp jl push inc add sub jmp add jns push or dec repnz jno push jp gs mov cs pop push push push fcomp fwait lods dec add push leave pop push outsl sub dec adc and bnd add enter popa and push add add (bad) pop je sbb cmp scas inc fisttp loopne imul sub fwait mov in aas dec jbe aad mov sbb dec cmp inc or das repz (bad) es sub push mov push movsl dec stos cmp mov lds lds stos rclb daa inc pop jb subb push mov popf rcrb dec rorl xchg add push xchg fldl push sub dec mov mov xor cmpsl sub lret dec std int aad mov sti and cmp push sub inc pop dec rolb mov xor sub inc imull and nop es (bad) or adc stc add and lea dec (bad) and push jo push adcw (bad) leave sahf sbb int3 enter mov into rcrl cmpsl fimull push cld sbb push es les pop push inc ret push push dec push xor dec push inc imul std xor roll bnd out sub push sbb pop adc (bad) jae sete pop in push or sahf ds inc push ret nop xor dec dec lret push xor scas mov push movsb cmp insl fcmovne and pop xorl aas pop dec push cmp lock add sub or pop cmpsb add out dec or mov bound outsb xor bnd jb jae add or or dec or sbb sbb ficomp daa jno jecxz mov iret dec xchg pop mov jl xchg xor js cltd jo into xor sbb loope add pop mov imul lods jmp ret mov mov xor sub mov mov and or aam push inc xchg mov or dec mov inc jbe (bad) hlt incb jecxz push mov addr16 pushf jle adcl adc mov sbb mov lds mov mov push dec arpl push xlat mov cmp leave sarb gs movsb or into test mov dec inc mov loope cmpsl popa inc cmp fsubrl aam push or inc fisttpl push cmc adc jbe and mov sub adc cmc xchg dec pop xchg mov mov dec jg outsb into rcrl popf push imul xchg push or pop sub jp mov or push cmpsb cmp adc or cmpsb addr16 loopne imul jecxz,pn dec mov das mov cli jge push movsb inc mov xor cmp dec loopne mov push lcall inc ret jno push iret mov in or nop xchg subb dec test pusha icebp add fild jno cmp inc push dec xchg mov addr16 push inc in enter stos pop push fbld ret rcrb jo notl (bad) mov dec (bad) and loopne pop mov shrl lret and adc pop jl push push xchg or (bad) push mov xchg mov jns mov mov ret clc add dec dec mov int cmp mov sbb sbb xor sbb jnp ret ds enter push cwtl mov mov leave std (bad) hlt (bad) pop xor push push and dec jb mov and xchg lahf xor xchg jg mov popa jno mov ja cli cmp incl sub xor dec jg dec pop mov inc xor in inc xchg xchg mov cmpsb (bad) adc inc arpl jae aaa adc mov inc stc leave aaa ljmp xchg pop xchg lds jle mov out push push aaa adc sub test maxps jg dec ja and fistl dec pminsw jg aaa pop sub mov in inc cmp push cld cmp dec aas hlt out sub adc mov ljmp fmuls dec ror int3 add imul add fdivrs sbb add add popa dec dec inc cs mov xchg int push mov and pop icebp xchg sbb pop scas or sahf rcll xor scas add sub sub leave mov sbb or adc and push pusha mov jle inc push arpl jle xchg fldt push sub lea xor dec push pusha (bad) cmc sbb das hlt xchg and jo stc mov (bad) daa push std or add ljmp xchg dec (bad) imul outsb rol mov sub cmc sub mov adc sub fnstsw xchg sbb aad and cs lcall push (bad) aad mov cli inc fmuls push jbe (bad) ja int3 push or cmp mov lret mov js inc jmp add pop mov (bad) fsts (bad) lea or xchg inc push out test sarl in xchg cmp dec pop lcall neg mov xchg dec mov mov jno shll lods cmpl sub pop ljmp xor aad mov sbb add (bad) push data16 ds jbe pop or push repz shlb mov lods xchg bound cmp sub push sub inc add dec sbb push (bad) insb movsl cltd dec jge sub (bad) jae out fildll and sbb sub xchg lods pop add cltd lret jno push cld jmp cltd push push adc push jp dec and or insl rorl xchg rolb gs lock mov insb cmp lret out in cltd sbb out aad mov fcmovbe sbbl dec push fs iret xchg pushf mov je add xor idivl fldt and cli inc adc rorb adc inc add int js sti sub sub mov aaa xor sbb adc (bad) rclb xchg add and bound fstpl sbb enter mov (bad) sbb inc sti std mov inc bnd jns aaa mov scas sub push push mov stos outsb inc mov pop xchg dec sti mulb test adc mov fs adc inc data16 sub (bad) cltd or outsl les fsubrp xchg and test insl inc into dec enter adc imul jb mov dec mov cs ss add or mov adc sbb nop pop dec ljmp scas pop test adc push add bound mov xor imul pop dec sbb fwait je lods fstpl sbb orb jnp mov xor and dec cmp mov mov dec stos sbb movsl adc ds lock jno adc or mov add or pusha add imul fs loope inc dec mov cmc xor inc sub xlat inc lcall (bad) lock cmp gs lcall fwait xchg addl data16 fadd aad cld push jae leave dec mov or add dec lret ret mov gs or fucomi jno mov int xorl or sub leave (bad) cli roll jbe pop push mov push jge pop add and sbb lcall movsb fisubrl sbb dec cmpl add dec clc lock pop popf and sub adc imul test out jecxz inc addl inc lcall mov cmp jmp std pusha mov dec je cltd mov cmpb pop cmp (bad) push or xor aaa xchg jno je inc imul mov dec leave inc lods ret (bad) lcall sbb jg mov adc es aas cltd stos push arpl mov inc sarb sub adc stc out (bad) bound shlb add xor xchg rcr jp sbb imull sub outsb mov or inc inc movb gs mov cltd and cmp stc dec push popa sbb fisubrl (bad) notb aad int into aaa and outsl mov jle xor int xchg dec or inc daa fidivl iret push adc mov into cmpsl fist push movsl sbb jnp xchg stc dec inc xor mov iret inc movb fwait in pop in adc xchg sti cltd sub push inc xchg add mov movsl xchg inc mov scas hlt or sbb pop jmp xor jg or (bad) mov mov es dec jo pushf addl xor dec (bad) mov gs popa pop cmpsl ljmp xor fisubl popf aam ret cvtps2pd cld out push xchg cs addb flds ja lock dec aaa or add insl ss mov xchg and loop jmp in mov adc mov or mov jne incl mov fmuls repnz inc mov rolb xor mov std leave cld sbb data16 jl xor leave dec sub outsl rcrb (bad) dec test outsb xchg mov pop inc pop imul pop add sbb iret rolb (bad) in popf mov push popf repz outsl and sbb push xor jb jle dec gs ja jns mov out cmp test dec aam aad or push in xchg rcr adc pop gs std repz sar xor popa (bad) outsb push fwait cli sbb and add mov dec ds outsb adc stos or enter mov loopne jb aaa dec xchg in push cltd (bad) jo (bad) scas add mov xchg jg mov mov (bad) pop add jmp inc gs pop pusha imul mov xor (bad) int addr16 gs inc adc addr16 sub and sbbl adc lret mov out fmul lods ret ret cmp inc push inc jg test ljmp pushf mov ss (bad) fsubs repz push mov adc pop sub das leave push (bad) es mov xrelease and mov (bad) scas dec dec lahf mov push jo loopne popa xchg or call pop mov inc ja je and sbb int3 into mov and inc pop jb add es mov cmc lret dec jmp sub mov or push shll (bad) sub mov (bad) sub data16 pop (bad) and orl mov cwtl fsubrl push sbb lods and and cld mov mov jbe adc xlat dec outsb int3 pop and inc mov in or fldcw sarb inc loope fdivrs and ss mov outsl inc in (bad) xchg fmull dec gs jecxz inc dec lods push pop push popf inc mov enter stos mov push push push imul movsl ficoml dec jbe pop popa add imul out add bound clc test es mov mov mov mov xchg cmp (bad) mov mov push pop ds call popa push mov cmp mov nop dec and jmp xor rolb cmpsb jnp out incb (bad) dec stc and dec mov lock hlt addl add int3 (bad) loop addb roll rcll stos test pop fisubrl and inc push cld xchg rorb lock lret and jb pop stos inc jbe sbb cwtl les or addl in jl fiaddl leave cmp ljmp int3 push add mov in sbb (bad) inc pop jns dec je inc aaa repz insb data16 loopne arpl inc cmp push xlat int3 add adc push push pop dec xlat mov dec xchg dec in fsubr ds repz lds in sbb mov (bad) stos pop adc sbb lahf pop ss ret push push pushf xchg adc inc cld adc repz outsl fnstsw and sub mov adc int pop into jp lea (bad) dec push inc dec mov push mov test ret rolb add push vmovdqu ljmp mov pusha adc clc inc mov xchg xor push stc add decb ret (bad) pextrw push bound xor test and cmp or and bound xchg inc int3 aas std mov stos iret les stos or pop aaa (bad) std into dec lock xor rcrl push sahf jge dec mov lods ja rcrb iret inc pop push inc add int jbe inc (bad) rcrl movl push add pop sti lea cltd mov movsl xchg xchg push int push sbb adc inc out jae push xchg inc movsl xchg push aam insb clc aam sub (bad) add incl in test mov and (bad) insb rcrl test inc (bad) lock pushf lock lods (bad) fcoml jb cmp xchg add ret repnz movntq fist enter mov or add adc das les push pushf call sub dec mov sbb aad pop aaa (bad) dec sarl cmc jo inc fs mov adc out (bad) fstps push inc repnz ret sbb stos and test jne pop pushl jb dec iret add into add loop or adc into pop mov push test daa push xor bound xor add ds inc xor (bad) sbb xchg inc push mov das das sbb mov inc xchg pop test push cmc gs cmpl adc clc jl fldcw movsl cmp sbb in or shrb inc loope sub adc jg and inc cmp jge xchg (bad) fmul mov cmp mov xchg nop stos hlt js repz and imul dec add lock xor pop lock jp loop push xor gs test inc jmp xchg adc test sarl movsb in sbb xor aad mov sub rclb adcl cli aad es jae cmp repz dec pop bound nop lods gs jno mov psrlw sbb lods loop sbb mov and imul (bad) enter fistp adc xchg mov lret (bad) bswap jae loope push loop ss and mov xor inc xchg lea stos mov in cmp push ret sarl sub rcll jbe pop adc loop adc mov into or and loop pop inc mov mov or insb pop and stos adcl mov movsl setle out cltd pop jp adc sahf imul sub fcomps sub mov test outsb add inc xor cltd jns (bad) push (bad) cmpsb and jno lds add rol sahf addr16 jmp pop pop insb jge mov and (bad) inc fwait dec jmp sbb dec cmp cmpsl daa sub and enter in (bad) cmpsl push or jo jnp out fist mov pop xor lahf (bad) dec cmpsl xchg fistp cs imul xchg insl ret mov or mov movsl adc repz fadds mov mov rorb lret outsb fwait xchg dec iret (bad) out bnd xor loope mov push sbbl dec lods flds and mov out cmp mov je popf sub add fisttpl mov int3 mov (bad) (bad) inc (bad) jo (bad) testb vmovups and dec or add andl fcoml arpl adc push mov push mov inc out ret rorb mov push sbb adc cs mov push outsl or jl pop mov popa xor cltd mov out cs outsb pop sub mov dec dec xlat add mov adc mov adc les xor pop xlat rorb jle jle push adc es xor push sbb mov jp or jle inc sbb aam daa mov sub sahf fidivl fs push pop and push inc mov jb ja xchg pop das or dec lods hlt push je or ret pop dec repnz mov xchg inc inc pop (bad) pop sub aad cmp (bad) add iret or (bad) or xchg outsb sub bndldx jne jle ror outsl cmp push leave adc push popf push inc dec mov fs pop ret or mov loop xchg ds mov lock fnstenv stos insl adc add mov pop push adc pop mov jae lret aaa push (bad) pop lret jo das push xor mov cli mov cli sub xchg scas xchg sub mov movsb push cmc nop push shrb movl test jae jmp (bad) adc out push xlat in jne test push fistp rolb dec fcoml mov notb inc pop test scas and mov mov mov icebp xchg ret aas jbe (bad) mov mov pop xchg inc dec dec sub xchg popa pop jb adc cmpsw mov sarb pop inc ret inc mov ret (bad) mov sub lcall sub leave into rol push jg cld adc jg sbb inc mov mov mov loope xchg enter fcoms dec and ljmp push shll mov mov in mov sub (bad) cld outsl bnd lret cmp push lret dec add and mov push repz lods sahf jl (bad) loopne push fs pop hlt fwait mov mov mov test (bad) sub sahf xchg in push pop sbb in lds arpl out cmp aam jne inc mov inc (bad) fcompl add push (bad) (bad) in mov dec lret ret pusha dec scas add dec cld mov jp pop inc lcall push cmc ljmp aam add es sahf pop (bad) add xchg in decb pop aad dec inc (bad) cli jmp addl inc push out mov rorl xlat mov dec cmpsb icebp or and in xchg or repz shl push leave xchg push xor pop or cmp xor mov enter pop sbb mov inc or add sbb lahf cld and cs mov repnz in repnz and jb stos mov add repz lea adc dec jge pop mov pop pop fmul (bad) push inc push push aas lods jecxz add lds jmp movsb mov add xor cmp dec je (bad) sbb repz dec lock int out mov adc mov add push mov jb add stos lret push push cmc sbbl push cli aas daa and mov sbb or sbb pop dec mov js bound into int3 mov xchg leave dec ror cmp pop xor xchg enter mov leave aad dec push pop xchg ds cli je pop addr16 jne es ds sbbl movb cmpsl cmp enter xchg or data16 add xor movsl dec push into rcrb rolb pop inc inc inc push fdivrs dec sub inc movsl sbb jae mov repnz lahf inc fsubrs sbb jb mov sbb sbb xchg mov sbb loop jnp fdivs push shrl pop lahf ss add mov push or aas (bad) in jo adc add mov stos and inc cwtl icebp in into lcall jp add out sahf pop xor inc xchg xor pop jb adc arpl rolb xchg sub mov push adc or rolb pop jns iret jge fcmovnb call bound out (bad) xor pop sahf (bad) into mov add and jnp push xor in mov jbe sub jp push jmp push pop push jg test cmp cmc push xchg mulb gs and inc fwait adc mov shrl sbb cwtl fcoms sub mov stos jecxz cmp into je jge inc clc mov sub xchg dec test inc ja mov jne mov dec inc fs addl pop xchg (bad) adc push out pop les lea cmp sbb out sub fcmovnb dec movsb push jg mov test rol dec bound jg into outsl (bad) repz cwtl fld pop cmp push (bad) jno clc rorb dec and lods in lea outsl les sbb insl adc mov pop jl test mov (bad) je stos outsb inc js movb dec loopne rclb dec addr16 sbb push (bad) fildll sbb mov mov in push int (bad) ljmp dec cmpb or repz (bad) iret sbb insl inc push sub mov jnp rcll clc jge lahf push mov mov mov or aad (bad) xor lods jle pop jle adc xchg repz lcall arpl (bad) ja dec in les xchg pushl sbb gs adc lcall out (bad) pop lahf mov test movsb sub inc adc ds inc lods jns loop pop cs mov rclb mov sbb (bad) in jne out rcl fwait pop test push sahf enter inc rolb mov lds xor mov shrl ljmp lods cmp test adc sub add test xor je xor xlat xchg std push pushf fdivr aaa or inc cmp add mov push mov inc sarl fdivrp data16 arpl (bad) inc mov std scas sbb sbb and aam and rcrb push in add out cltd push hlt (bad) sbb push ret mov in mov push and add pop insl and or gs adcb jo insl jp mov cmp and nop aaa push inc (bad) (bad) xor adc out imul jp adc jg mov cmpl jp test repnz xchg outsl jns sbb iret xchg (bad) xlat leave (bad) vmovntps movb fs mov in cli xor lea lea mov (bad) xchg push xchg mov mov sub xlat addl pop adc cmp push (bad) repz movsb cmp or xchg mov outsl test test repz inc in int3 loope and xchg ror shl add sbb imulb mov sub xor iret leave jbe setbe mov cmp cmp dec and lds add int3 or data16 jno test inc jle aaa add shrl out push dec iret push push inc (bad) mov add xchg cmp cmp adc lret dec adc testb sbb icebp mov fistpll dec (bad) (bad) mov xor mov pop lahf (bad) xor add shll push jle dec pushf dec enter movsb outsb sbb hlt adc and inc mov or dec inc es inc jnp js mov mov inc mov or push xchg pcmpeqd mov inc scas xor mov enter mov loop lret jo sbb loop call movb (bad) (bad) movl and lock hlt push inc ljmp or mov push mov das imul jbe pop mov enter cmp test and ja enter lret test fwait dec mov fs add out negl add lock fsubs rcrb mov jne pop mov push sbb data16 lea sbb rorb ret add enter (bad) mov mov lock cmp paddd nop xchg jmp xlat data16 mov fwait mov inc pusha rcr add dec pop and (bad) pop adc inc fimull loopne push sub push dec pop adc iret and add dec push imul sub push dec xchg es stc xor mov cmpsl pop shlb pop mov push sarb xchg xchg add mov call jmp xchg pop cmp fadds lahf lds push push movsl shrl icebp sub scas call and add mov (bad) ret add cld fisttp add pop inc movsl mov xchg lret daa test xchg pop push das add add jns cltd clc inc dec das (bad) scas cmpsl ficoml (bad) or int inc pop in jl scas fcompl leave sbb test xchg cmpsb sbb pop pop pop push sbb dec jmp dec test mov push pop cltd (bad) sbb cs mov pop mov ficom xor sub enter mov and add in adc push mov pop add add sub sbb cltd add push repnz aam fldl outsl adc (bad) dec dec dec jmp pushf mov cmpsb inc in repz (bad) ja add push push andb out mov dec cmpsb cmp xchg cmp imul add cmpsl jo shlb pop dec mov jne adc dec (bad) mov mov dec mov insl mov shlb mov xchg dec in loop mov imul aam outsl aam mov mov jle jl xchg and (bad) push shll inc (bad) (bad) mov inc push adc ret fadds gs rol dec or jno insl mov sbb nop mov mov xor aam xor inc clc push test pop jge in ret out (bad) cmpl rorl and cmpl push mov pop fsincos xchg or mov lods in sbb mov xchg cmp dec cmp xchg push adc out sub test ds push into ja,pt xchg dec pop lods cmp sarb or sbb push jl popl ficomp cs incl ret lea loope nop add test fwait movsl pop addl (bad) push jb cmp ss add xor into das fcmove jae adc xchg stc xchg scas (bad) pop (bad) xchg pop (bad) clc xchg call lods adc ss and inc xor mov dec jg push mov push imul mov jg push loopne xor orb lds cmp lahf cmpl adc add fdivr push xor outsb dec inc mov imul pop outsb popa (bad) sub sub (bad) fisubr cmp cmp mov pop add push repz adc fdivr adc dec popa add push push nop push (bad) xchg jns jl data16 cltd popf jns out imul adc and push inc push cmp cmpsb adc (bad) sub shlb push call addr16 xchg sbb fildl ss sub xchg and jmp inc dec add (bad) mov push cwtl push mov pop jbe cwtl add sbb movsb dec insb aad xchg cs add inc loope shll gs jno add aad mov jecxz jnp scas mov imulb outsl and sbbl push dec xchg scas push mov push fmuls gs fs movsb pop jbe pop sbb inc cmp pop daa jnp rolb jg in iret gs lcall or ja ret dec sahf mov push int cld push lods lahf hlt imul icebp (bad) dec lret mov pop fs push xchg mov dec jns xchg pop (bad) lahf adc xchg jns daa into dec andl (bad) cld jno jns mov adc je in das inc jns jmp push popf pop cli adc lea mov or repz cli test (bad) jbe pushf inc xchg pop dec inc clc sub sbbb adc das lods push stos pop in loope orb push inc mov dec sub xchg push mov incb mov int3 xchg imul xor (bad) rorb fcmovbe enter mov imul addr16 or mov leave rorb lds into mov out mov xor dec add dec sbb mov (bad) sbb xlat adc lock adc mov mov or fidivr out push out or inc add lahf adc pop add xchg les jecxz int ffree movsl (bad) ljmp jno jae daa inc out push mov pop inc lcall pop inc dec lcall loop divb nop cmp arpl stos mov orl cmp jno lret add arpl movsl cli icebp leave adc cltd call in or or mov in pusha inc inc outsl pop add les lcall push lret (bad) lret mov jno xchg (bad) mov or std or or fiaddl pushf loopne sub push nop dec std push sbb rcrb les stos sub xchg adc cltd jg outsl add daa cmpsb or pop push lret loope int3 addr16 adc outsb push jns aas dec push pop je ss cmp leave sub daa adc lods mov cmpb mov pop into or inc mov sub adc int arpl mov stos jb inc inc jp xor adc and (bad) cmp in xchg xchg xor push and sbb fimul mov jno in fs jmp ret dec cmp or pop fmull push sbb sub aaa ret stos xchg mov pop and xchg fs dec dec loopne das inc imul add cwtl adc shlb inc (bad) push or scas shlb popa (bad) cltd xor arpl mov adc mov dec xchg repnz (bad) jno cltd dec cltd mov dec xchg xchg lcall (bad) push in xor lods pusha (bad) iret es jg sub push repz cmpsl or pop push or into mov sub mov or mov jecxz adc lds les lcall jb scas add xchg daa mov dec sbb lods sbb repnz (bad) jl add mov mov add jge mov gs pop push jae add pop into push jae cmp jns inc leave push inc pop mov je stos das jae cmpsl cmp in cld and jno nop pop fcomps dec cmp cmpsb fbld lock mov push sarl pop stos add adc and add xor test jl rorb lret shr cltd addr16 dec push lret cs cmp and push or pop sbb int3 or ss fsts or cli sbb es adc jl cmc inc aaa mov push test hlt sbb pop roll stos (bad) roll sub mov dec mov sbb push int sbb xor add jge daa or adc cmp jns inc dec pop aad add out dec mov jge sub add ds jns inc pop sbb dec addr16 dec push adc (bad) jg jg push aas rorl pop fisttp and inc or popf push hlt rorb leave aaa push inc int3 sbb movsl and and pop add jmp or inc and (bad) push jnp int3 ja and paddd xchg ffree inc (bad) jae dec cmpsb fidiv (bad) and add int iret and repz sbb repz xchg pop into cmp dec test or lods das inc add mov cld inc int ljmp adc inc mov xchg xchg ss mov add dec lret mov dec sub lret jns pop ds lret sub adc add lds ja adc fcompl mov mov ja and mov dec fcoms dec adc rcrb push cmp pushf fsubp pop cmovp bound sub cmpsb lcall call push rclb add ja lahf lock nop xchg (bad) jne push cltd data16 add inc mov daa or or int xor pop push aaa addr16 int3 adc inc pop pusha lcall jo popa ret push sub sub push jae imul dec decb inc arpl add fiaddl xor out add decl js dec adc or dec add das adc pusha cltd je rol cltd cmp lds sub mov addl test mov aad outsb or loop add fcmovu notb dec pop popa roll cli imulb ret and std xchg loopne (bad) scas or or and xorb ret test es es jnp stos pop push sbb jns cmpsb pop push fldt xchg mov fs and insl lcall push xor or (bad) and jnp dec inc jne out out dec cwtl aad stos les add lcall sub xchg lsl cwtl inc mov ret pop inc inc into xlat (bad) pop xchg jecxz ret into adc (bad) (bad) xor jmp fldenv pop lds daa fisttp inc clc xchg in or mov jl jmp mov popf pop inc jle xor push mov mov loopne sahf inc inc inc add and mov inc popf push (bad) or jnp bound inc mov cwtl inc int jbe sti push faddl inc pop push fwait mov cli mov fsubs mov pop cmp mulb test in inc insb data16 jp or adc jecxz xchg cwtl dec mull bound dec (bad) mov out bound sbb push jae popa test sub xor xchg push adc lock cmp jno fisubr out fcmovnbe gs loopne cli and cltd repz dec jno mov js lcall jb xchg mov mov dec jg adc pop xchg repz xor enter repnz lods jbe enter jl shl dec pop fsubrs inc inc push dec out and gs outsb inc insb stos push adcl mov or or mov aad sbb ljmp mov outsb pmulhw jbe cwtl inc mov mov dec test int jae cmp ret movsb cmpsb aad insl jmp int3 inc stc lds xchg mov xchg mov or les cmp std inc and popa (bad) popa adc xor cmp mov mov xchg dec mov test dec dec and mov iret and dec and inc lret cli sub xchg cmc or ret jge cmp fs sbb sub push mov inc loopne cmp push xchg sub xchg into aaa (bad) sbbl inc into sub xor push aas jmp mov bound pushf (bad) shll call sbb loope inc rclb ret adc push push imul int dec xlat push inc dec in rcrl incb lds jns sub pop test inc mov xlat por imul stos ss es add out mov mov leave mov adc addr16 loope mov pop (bad) sarl int dec add push mov jne lret xchg psrad aaa sbb cmp inc xchg into inc jmp adc fldl pop lock mov nop jbe stos js cmp repz xchg push out or push dec insb xor (bad) xor mov inc hlt fistpll leave push sbb push push (bad) cs and mov pop cmpl push es add or sbb mov outsb pop mov outsb imul andb lcall js mov cs (bad) xchg mov dec xchg or mov cmp sub stc cmp popf inc xchg rcrl rorb aam outsb dec add push pop push test inc div lret cmp (bad) mov test add sub jmp inc or ljmp mov les stos lea leave add inc and dec dec and xor cli sub jo mov adc cmpsb sub pop cmc sbb add mov sub lahf or or sub pop and aas and push dec cmpb sub out testb popa lcall or lds (bad) jne popa lock insb addr16 mov inc femms mov das dec test pop les pop push (bad) int3 sbb dec dec cmp lea (bad) lret dec cmp pop sbb clc dec push (bad) adc outsb rorl jnp push gs pop jne inc mov mov adc cmc cmp ror dec xor in sub sub (bad) jle ja mov mov inc jnp jns sar pop sahf mov movsl push jecxz add dec lds mov cmc aam jbe fmull inc movsl pop dec outsl jge add add test push daa pop lods cmp loopne std mov xlat fldl add sub ljmp cmp shl in stos inc xchg dec sbb xchg jnp and scas inc push or (bad) adc push add lock adc cli in pop xchg adc mov xor mov inc outsb (bad) add xchg add cltd (bad) gs dec sub adc pop idivb pop mov jns ja sub sbbl jge lcall cmovnp xor and (bad) sbb sub cmpb roll or xchg or pop inc add push or inc cmc pop pop xchg sbb xchg dec mov and pop inc add push inc popa cltd inc outsl (bad) mov inc adc clc jecxz xlat dec dec jne jmp insl mov mov std push push mov jns pop adc dec inc cmp lods xchg push dec in jl ret mov (bad) mulb ret dec (bad) lret pop (bad) outsb sbb push ret adc add pop int inc mov dec sbb add sbb dec cli movl loopne and cmp pop inc ljmp inc les enter pusha mov pop xorb add cmpsl inc xor ja pop sti fistp mov dec add ficompl xchg inc fisubl add mov into (bad) js (bad) mov (bad) lods addr16 xor leave inc adc dec add cmp addr16 aad ja mov jae std pop pop jbe pop push inc lea jp xchg jmp xchg and fs insb push cmp fidivl aad sub jl lea jl loop inc or sbb sub push xchg jae jnp sub in es (bad) jo cmp inc gs pop fs inc or cld stos inc inc ljmp andl sbb lock mov sbb xor ret add orl jo mov (bad) repnz inc mov lret int3 in inc adc cmc repz and es and lock shrl mov enter inc pop (bad) in xor stc inc xchg mov addr16 ret sub or shrl adc dec into hlt jge faddl enter (bad) (bad) repnz sub leave fs pop fdiv stos aam nop in (bad) fistl testb sbb push mov cmpsl stc std addl add pusha push inc into mov add inc sub nop loope negb rorl jo movsb sbb movsb mov pop int3 fistl loopne or (bad) mov xchg sbb inc in adc inc mov mov jae push sub orl outsb in bound jmp gs push lret les adc cltd out push xchg push es add clc (bad) gs cwtd clc push and clc pusha sub sbb or dec mov fsubs add push test sub cld push ja iret xchg push mov push pop (bad) ss ss pop les lret pop clc jl std ljmp adc push mov outsb or jo lock andl dec in andl test mov inc call aaa mov push leave cmp add inc std jo iret push dec (bad) push cli (bad) jecxz xchg fs jno inc in xchg inc std xchg jl dec enter lock enter stos jno push lahf movsb xchg inc dec cmpsb xor ds outsl lcall jne into mov out lea les inc test test sub xchg cli jp xor inc mov insl ret dec into xchg pop sbb fnstsw sub xchg inc push push pop or scas inc xor xor pusha mov sahf cmpsb add loop pop addl and loop cmp inc cmovnp push cmpsb out mov or dec mov jnp sahf sarl hlt add into cmp mov outsb jp inc mov inc inc and je push (bad) out push dec movb push inc push loop ret in jl jnp out jne out sub mov iret test lahf std push add sti or scas ror and mov sti inc mov mov mov jo add dec xlat dec into outsl movsb sbb loopne jbe jl and jne (bad) mov cmp push imul dec pop cmp fadds cmp inc adc addl add add clc (bad) xorl addr16 jg push sub mov adc cmp movsl push test add std push lods xor ja push xchg cli and lea sahf imul les push imul aaa jb jmp orb jge lret clc inc out inc dec adc shlb xchg mov and cmp fbstp mov idivb mov add adc lret sub adc popa push inc rolb ret inc push clc mov sbb inc aam int mov roll inc test addr16 or mov add lret sbb (bad) dec mov or out aad fsts cs inc push (bad) cmpsl mov shlb (bad) dec (bad) jbe push or and cmpsl aas adc xchg dec repnz pop xchg (bad) push adc push pushw test mov test mov (bad) pop in inc mov jl aam or loopne or jge mov dec (bad) arpl call or mov int pop push ljmp pop mov je scas (bad) insb into push scas fisubrl fiaddl or jp push rorb ror adc aaa pop xchg stos sub mov jbe cmp stc mov stos cltd push and inc or push cmp (bad) insb mov popf dec imul mov xchg mov (bad) jne aaa aad or loope push adc cs xor mov inc into fwait push xor pop inc or int or bound stos es push into into out pop jg in lea out movsl into mov pop mov movsl xor orl xchg mov data16 pushf inc dec (bad) je rcrb lcall (bad) sub dec push cmp in (bad) notl enter sbb cmpsb xlat aaa push test dec push dec fisubl lea and or subl lfs jne arpl outsb (bad) add enter sbb fld1 (bad) pop inc sub mov movsl xchg std xchg mov add cwtl inc notl mov jo xor mulb bound leave lcall in dec xchg push jo add add into stos mov xchg add inc jb xor jns mov adc sub jge adc lea inc pop pop enter jmp jns mov sbb jmp clc outsl push sub push test (bad) adc popa xchg dec push mul sti fs mov push and sarb ds std mov lds mov aad in cltd test es adc add cld dec dec cli inc fs leave jp sbb cltd aad or fs mov pushf ror and lahf add push stos test dec mov mov dec jo xor stos push les enter xor push inc mov sar mov dec jb outsb mov out in push (bad) push sbb xor adc insl fnstcw sub xchg pop mov cmp push mov inc xor lods es jg push addr16 fildll hlt cwtl dec popa adc fwait mov movsb or ficompl and (bad) cmpsb ret xor xchg dec push lods sub in ret push jnp xchg dec push jecxz push sub popf enter scas imul and popa call out sbb int3 sbb pushf pop inc sub imul (bad) jg nop mov out dec cmc or lret xor dec lds inc and nop (bad) cltd loopne ds pop mov fwait and push rolb add in mov stos pop ffree fwait push outsl inc sub gs mov fwait data16 data16 in mov lahf (bad) loop xor emms inc (bad) jb xchg test (bad) decb mov jne push mov inc sbb sarl test xchg jo dec and jle popa out data16 xchg or add mov mov pusha test fcoml pop mov in cmpsb sbb sti ss fcom movsl fstps lds cmpsb lock lds jmp push mov lods mov mov cli xchg mov mov shrl cmp lock push sub inc xlat cltd (bad) lock push hlt push shrl sbb dec arpl (bad) sub adc clc int int push adc mov and fadds inc into (bad) pmaxsw fisubrl in ljmp sub lea dec push iret lahf dec mov dec or push sub mov add mov adc xor jns jne cmp mov int3 xor adc dec pop push iret sahf pop lret adc in dec inc scas mov xchg test mov insl int3 lock xchg imulb popa push dec dec dec sbb sub ret adc rolb xlat xchg into inc cwtl andl lods mov cmp jo jp push pop ss leave (bad) xlat int3 mov add sub pop mov pop test fiadd icebp sbb sti and iret pop iret into rorb (bad) sti add push out fs pusha icebp mov push (bad) fdivl add jle mov (bad) ds movsb vmread adc pop inc negl mov mov push lcall and jne hlt mov jne (bad) sub out repz pop push sub fnsave cltd mov or push jno outsb mov adc popf dec mov mov sbbl das and mov push pop (bad) mov push lret xor mov ds jp loopne pop add sub pop inc adc dec cltd dec movsb adc sbb loope (bad) test cmpsl add adc in lods jmp xchg loop hlt jge push push push loope pop into add fstp pop mov mov add push jmp add je aad mov and insl sub add popa pop push pop inc insl push jle pop or mov (bad) les adc out xor xor mov mov adc and in jmp jae push lock sbb add xchg arpl jbe cmc cmp dec ss lods stos and push inc or sbb fisttpll (bad) hlt inc inc les push mov lret mov gs rolb mov movsl inc dec shl stos test (bad) int jbe pop push aaa mov jmp shll pop mov inc xchg aam in (bad) mov xor mov jne call dec dec fstp idivb pop adc pop inc stos inc xor stos dec pop loop (bad) fistpl adc jp xchg dec loop int jg mov stos xchg cld pop mov mov push cmc ja movsl mov jg mov hlt xchg sbbl and (bad) dec mov and pop add (bad) leave iret int3 incb (bad) cmc xchg mov inc sub leave mov imul add pop test scas in cmp fdiv mov xchg xchg lahf mov test push push pop push add and inc xchg iret in fs jb jle xchg sub nop mov pop push je icebp or pop stos add push or ss les mov or popf aam popa cmp inc mov dec and cmp leave fadds xchg das push dec cli adc notl scas repz push sahf pop mov xor cmp test scas lret dec iret movsl and rcr sbb stos xchg int3 addb pusha insl std or movb adc scas stc fwait pop (bad) mov cmp scas jg movsb leave pusha lcall mov aaa decl lods inc dec jge mov (bad) int3 mov daa xchg mov push push add je rolb lret cmp xchg mov in dec sbb pop xchg mov inc or mov sbb iret out leave insl inc sbb adc lret push or and dec mov adc fcmove (bad) lock enter pop sub cld cmp mov cwtl mov jb mov cmc lret stc fcomps pop stos inc (bad) notb pop pop mov aaa (bad) jo mov fistl dec repz cltd sub push (bad) sbb out pop shrl pop into sbb hlt cmc ljmp rcrb data16 add dec push sub mov aaa pop dec lcall fsts sub jle sahf ljmp adc push in inc into daa adc scas (bad) ret fsubr xchg and adc aas pop lret loop aas xor stos inc mov bound sti (bad) je inc ljmp jp sub dec (bad) movl xchg add into (bad) (bad) sub add call mov mov (bad) enter in ret jae mov mov dec mov lods adc es rclb inc fwait pop jne test jge inc push icebp ret jno and push enter js mov lea adc xchg pop sub jno roll pop pop dec adc inc mov xchg pop mov xor test xchg mov stos outsl adc (bad) jbe jmp add mov dec (bad) ja (bad) ret ds push lods mov push xor lsl or or mov enter enter ds mov pop out shrl or push fs add pop dec jbe cmp ds pop orl push les or push pop mov push (bad) movsb sbb sahf fimul pop lret push push xchg bound push jmp jle inc popa out cwtl lcall inc jg cmpsl or (bad) das das (bad) inc in mov mov call and mov test fstps ljmp fcompl lock mov les push xchg mov adc lretw cltd (bad) stos int3 mov fmuls (bad) push lds in fs or pop cld aaa jg dec inc psubusb and cld rcrb stos gs dec xchg mov push or mov hlt scas adc jge out xchg (bad) cmp jmp jg mov faddl mov adc fucomp dec push or sub jo into nop mov dec pop xor stos addr16 ret dec ss jbe lea adc adc or aad push (bad) lcall divb enter xchg inc js dec sbb orl aam xor out cmc dec inc mov and mov push mov (bad) adc inc popf fisubl sbb sub add add jnp push add or (bad) (bad) lahf jae cmp rclb out dec aas subl xor std jmp roll add or sbb dec cmc out sahf adc pusha leave push inc lcall addr16 or add aas pop push push cmp adc fildl in cmp sbb fsubs xchg inc ljmp xchg dec fwait in nop xor (bad) sub add mov enter sub xchg or and adc (bad) loopne pop lret aam xlat mov xor sbb sbb push add (bad) push ljmp (bad) jg in xchg adc push xor push dec (bad) orl loop push push dec xchg pop imul cld ffreep rclb cmp mov cwtl adc sbb dec mov addr16 pushf lea inc push into pop or dec mov pop push inc sub in mov and cmp dec pop cltd push iret pop push jp jecxz push jl mov pop jge xor test loopne mov dec inc cmp clc dec jbe add stos pusha cltd lahf gs outsl mov xchg xchg lret in sub jae leave sbb or inc mov arpl dec bound pop mov leave (bad) nop xchg push jle xchg popf rcr (bad) out mov push mov dec nop ja sbb xlat int imul sahf and into jecxz add dec xchg ret incb pusha loope test push dec aam pusha lods push aam pop cmp dec les mov xchg enter mov inc dec mov pusha out loope inc imul lcall dec ss pop mov dec sub or mov mov fldl mov or scas into subl pop out pop es mov call ja mov xchg out push popa shrl fdivp les add mov roll sbb push ret dec push mov xchg or rolb add sbb or adc cmc enter push std lcall cli or or fmuls movsl pusha dec gs mov dec into dec adc rclb ss jge xor jns into inc xchg iret xlat test out mov int3 fmuls mov in and incb jge adc test dec test test push or ss (bad) mov xor xor (bad) in sub adc idivb jne add bsr mov roll xchg fstl aam lods and rorl inc cmp xrelease sarl (bad) pop pop lret or daa fidiv or xchg movsb lods or dec out and dec rcrl dec into mov cld xlat xchg fisubl pop lret xor xchg jbe inc inc sub lods and mov and push mov rcll iret mov dec mov dec (bad) lcall repnz aad loopne or xor add pushf repz es (bad) test mov fs mov std ljmp and movl into enter pop es mov mov add fwait mov xchg dec cmp push jle mov int3 ret sbb aam int3 add dec nop rol shrl fwait sub lods jnp (bad) movsb pop lahf lods push fcompl adc mov lea js mov cs js mov sub mov mov adc out (bad) pop int push jb jo outsl pop xor sbb inc pusha out sarb scas (bad) movsl (bad) and cmc (bad) pop test fwait cmpsb mov js lock push mov inc cltd fisub dec pusha insl adc cmp mov test lahf xchg cmp hlt jbe out xor or ret add xchg jno negb out cmp inc aas and jle adc mov insl jg icebp ret and and jae lahf mov jo loope ja cs scas inc pop jb insl push pop inc cmpsb xor mov xor jae cmp scas rol loop or and jae add rol (bad) dec cwtl sbb jge es mov in jle inc fisttp lods shlb sbb inc cmpsb imul jns add js and (bad) dec pop std inc out dec dec lahf lods repnz sub xchg push scas imul dec fildl mov inc xlat fmuls jno ja hlt push pop stos loopne push test mov adc out jg paddusb dec push sbb or lds imul adc sub pop leave ja fmuls dec mov pop sbb dec jae aam lcall push pop push jns mov cmc xchg nop lods inc mov lea rclb or xchg pop sbb jge mov cli call and loop inc call push ret push test stc mov repz pop xor fidivl shll push sub adc aad lods bound xor push jecxz outsb (bad) data16 mov and pop mov push mov inc int mov lret inc pop and popa push pop and adc inc and hlt pushf sub lea pxor adc sbb xor pop xchg mov pop adc xchg sub jge mov arpl mov sub push mov mov (bad) mov fcomi lds sbb push and xor cli and mov movsl push insb ja inc mov add pop popa push push stos and test dec pop in or jb dec dec daa popf mov je lret (bad) and fs cltd test (bad) mov mov and enter xor pop push loop lret outsb lcall lea aaa jg pushf das jbe enter cmp xor int mov dec or and xchg out dec dec or push ljmp jne mov in shlb xchg adc test adc pop sub jp scas (bad) jb cwtl pop loopne sbb movb cli inc lcall (bad) aaa cmp (bad) leave adc pop in or je push (bad) pusha inc loopne repz jne xor mov ds stc scas (bad) movsb aam sub mov xor xchg mov sbb mov sahf cmc arpl mov insb nop pop mov cmp inc out push dec lods lcall pop daa xchg dec push iret repz lret push push and jmp aam mov in sar push cmc insl icebp scas jae test mov cmp iret movsl inc push xor enter xchg dec xor imul push dec pushf and add ror jno push add icebp sub bound xchg std and and mov jb test out or xchg fisttpl push stc and xchg push pop sbb ja cli push or xor mov sti xor shrl pushf pop dec (bad) dec add lods mov mov lods js sbb add popa pop jecxz push mov addl sub jno pop xchg and lods pop xchg cld push xchg rolb mov out mov lock enter adc sbb cmpsl andl xor or mov scas (bad) adc cmpsb inc push sub fdivs cmc sbbb ret stc mov pop lds and inc xor xor xchg daa insl mov or cmpsb ret sbb push loope mov lods ret sbb orl data16 inc sbb and lods andl gs sbb pop in bound push icebp lods and cwtl enter bound lods xchg or int aad sbb daa jp jp leave dec aam xor xchg adc push mov xorl movb dec and mov bound ret or addl adc adc add or dec sbbb sti jge data16 inc lods push repnz scas ftst and stos push pop jno fbld push mov or xor adc popf xchg out sub lcall mov or jne repnz lcall int mov xor xor inc or addb and inc loopne sbb cmp pop adc addr16 cmc adc loop pushf addr16 mov push loopne push ljmp test std test testb cli imul cmp xor lods data16 test push (bad) std add dec cmpsl pop xchg xchg fsubr test sahf dec mov or adc in pusha rclb stos sbb cltd mov dec jnp push mov add push xchg sbb xor test es push iret pop fcom idivl mov (bad) sbb push jecxz or mov out mov fcomi mov popa dec pop mov je nop pushf adc add mov and (bad) mov test popa or jae and xchg inc adc out dec push fdivs push iret dec sbb inc fs xor lret sub cmp outsb add sbb mov push xorb push or out dec and enter in (bad) inc ds cltd pop pop (bad) dec je cmpsl lcall data16 int3 sahf inc add stc (bad) mov jg fcoml push rol shlb sub das clc dec shll and push aad push push ljmp hlt and out mov sub dec sub mov fcomps int3 jb scas aad orl stc pusha xorl outsb xor mov mov xchg ret adc test or cmpsb xchg and pop or rolb lods dec leave xchg int pop movsb cmpsb es and mov push adc aad into sub lret out inc inc (bad) pusha outsb lret in shrb sub hlt sub mov or mov add inc inc repz or cmp outsl adc adc xchg dec std lahf enter (bad) scas pushf (bad) pop mov sti mov sub inc testb mov loope les lret push inc ds std sbb insl mov stos push enter mov push inc jnp cmp (bad) cli (bad) aaa std dec fdivl or jne test fimul repz jl dec notb sub jo add dec inc rclb xchg inc mov cmp xor xor ja popa mov pop jo inc inc add add dec pop inc insl int3 jae out cmp cmp in jge inc pusha mov popf je imul pop imulb sub xor and in (bad) notb lret aas in jg stos (bad) adcb xchg sarb cmp and jmp xchg or adc aaa pop add pop inc sub testl nop lds iret mov jne jnp rcl mov test out and cmpsb inc pop pop mov aas clc cs push mov aam mov verw add push dec mov fbstp ffreep rcr (bad) je push dec add int3 dec iret and (bad) xor xlat dec loopne fadds mov xchg and or push (bad) adc data16 shlb ss mov es sbb repnz push movsl or push pop jns inc push lds sbb dec mov fwait leave insl xor ret scas out cmp inc sub sub jns or or outsl pop adc adc push lret bound jno jnp mov jo std xor or insb sahf push xor cmp adc sbb lret pop mov push out or pop dec adc into insb cmp pop jns mov or ss xchg push rcll pop mov rcl repnz push cmc pop sbb mov cmp lahf xor or ret pop sbb sub sub in inc jne sbb out cmp inc and xchg push or dec into mov add pop popf lods dec pop xchg (bad) mov lds (bad) dec aad dec sbb jae xchg xchg or ret enter movsb mov or adc scas jo dec lock inc test xchg push lea sbb adc stos inc dec mov push addr16 stos fidivr and xor ja (bad) sbb hlt xchg cmp loope xchg fisttp pop push lret or and add mov ds jge lods cs dec inc add push add les inc mov shlb or adc dec enter out popf xor shlb mov inc and loopne adc add mov and pop movsl movsl adc pop scas dec xchg sub jnp dec cs push push aaa test arpl fistl sbb inc jmp or mov pop pop sbb dec cld in rclb mov aam popa sub dec loopne loop inc loop dec scas out cwtl sbb dec roll in scas push daa pop or push fimull inc (bad) shrd (bad) lret sub jmp mov sbb int push ds ds xchg loop mov dec dec fmuls stos jo shll pop das xor (bad) lcall lret sub pop cld lcall cmpsl (bad) movsl xrelease add push push rcl test (bad) stos ss dec movsb inc fistpl jg cltd mov and mov (bad) push xor jo adc loop movsb scas jl push fwait lret and inc pop jae mov pop jo sbb pop cmp inc out jne inc shr inc mov xor cltd xorl loopne mov mov jb clc pop or js xchg pop and adc dec sub rcrb (bad) cmp loop ds aad dec je lar fadds sub cld sahf mov inc fisttpl std jp pop xchg (bad) sub test push into inc mov ret out insl fild ret mov fdecstp leave mov mov mov orl popf lods ljmp stos scas push cmp lea rolb mov lret sub popa jg cmp xchg mov hlt (bad) mov adc jge jns xor or jle or push hlt mov mulb bound cmp stos in out (bad) fadd add push or out test add aad inc (bad) fisttp insb (bad) nop sub inc iret fwait push xchg aaa (bad) xlat mov pop dec xlat imul repnz or mov pop imul inc jmp mov xchg (bad) inc mov in adc into ror dec adc dec pop ds jae addb addl push je jbe mov jecxz shr inc inc aam in lea sub pusha aad or fs pusha add movsb mov and aad cmpsl lods repnz push dec or add fldl out outsl mov loop out xchg popf fisttpl lock jno xchg out sahf lahf das and push cmp push jp mul pop shll ret push iret xor pop push sub out inc and dec out cwtl pop ss adc repnz popf aad dec arpl dec or adc jg add add (bad) pop cltd cli cmp outsl pop sbbl popa xlat ficompl mov out scas sub rol xchg lret xchg pop cmp pushf das mov std xchg repnz jbe xor inc lcall push or gs test fldcw push (bad) mov test xchg bound mov mov (bad) cmp notb gs test jno or ds jle cmp dec xchg out pusha add repz pop xchg cwtl mov loop adcl inc clc test mov (bad) mov sti pop rclb repz hlt call inc push dec pushf cli loop cwtl dec mov loop or mov jb das mov jb call in arpl and sbb int mov sub jmp add cmc and out int in or fisttpl push leave enter push sub sbb movsb leave dec add push lahf test (bad) adc mov shll dec nop in sbb xor add lret xchg push or (bad) pop rorl dec jns push gs xchg in add int3 jp mov (bad) jno dec mov pop icebp mov pop loope sbb push scas pop pop cmc lock ds out int3 cmpsb scas shl (bad) inc mov dec cwtl dec jnp negb or mov push lds and sub (bad) mov pop xlat stos push jno inc jnp mov (bad) (bad) iret stos sub pop ljmp lock inc test jmp adc into stos (bad) mov xchg sub les push pop ret (bad) or inc dec leave mov cld jbe dec inc (bad) cmp aam call test mov lods mov inc push pop (bad) arpl push sbb fwait bound hlt (bad) mov adc jnp outsb mov mov adc or std lock sbb faddl ret lds xlat push lds pop sbb xchg jb sbb outsl mov sub xor jbe xor iret push adc xor xchg push cmp cmp push xchg or xor add shlb cmp iret mov (bad) std aad xchg or or repz call lea inc dec shufps mov mov or push push lods dec leave or leave mov int push push addr16 xchg xor (bad) (bad) clc sub mov jg add popf cmpsb xchg fild out (bad) sahf adc mov cltd mov lds sub push dec pop mov fildl nop repz lock cld push insb and in pop stos sbb jno jle gs loop push xchg loope push roll xchg push rol in hlt inc xor mov mov icebp and inc adc mov iret js inc sbb cmp jp pop mov mov decb fisubrl push add mov jo aad lcall lret ljmp jle add aad in rorl ret push push inc and subl bound dec mov dec add fidivrl xchg inc add repz outsb ljmp scas xor popf cmp es fildll push (bad) sti les dec cmp rol leave or sub ret lcall pop rolb dec add lcall std pop or int into out and pop inc push sbb mov sub jge rolb mov jae (bad) push movb loopne dec ss ljmp or and dec mov dec inc pop scas mov jbe jg inc mov push jno stos stos jb popa lds xchg pop subl inc outsb ds adc jb xor mov sbb aas (bad) clc je mov add cmp xor inc in (bad) dec cmc pop fcomi jnp inc mov addr16 dec cld add icebp cltd inc fdivr addr16 jle and adc pop add inc leave (bad) or or lret cmp mov adc inc shr mov fldt negb insl xchg cltd pop ja gs push mov push in or jnp in push xchg jbe out lods mov inc ss xchg ret inc fdivs inc cld inc inc or and mov push insl jecxz outsl ret ds shr cmpsw and push add mov ss popf lds imul cmp fucom sub mov adc adc cmp mov sub inc les dec imul insl cmp xchg test pop out mov sub rorb jns dec add stc out bound fucomi push cmp mov stos mov push pusha pushf jne xor mov dec loopne ret popa xor xlat call stos cmp (bad) mov stos dec add pop add inc xchg sub or mov addr16 fucomi pop data16 mov add push add pop push and clc pop mov xchg sbb and aas add fstpl lods sbb mov mov xor idivb sbb movsbl (bad) jmp dec add jo cmpsb (bad) mov xor lods jb fwait loopne sbb xchg aad jne xorl jge lds cld xchg je jecxz fnstenv fstpt mov jno sub sub loop mov ja popa repz or pop xor (bad) sti popf dec dec cmp jae inc xchg push leave mov fnstcw lock aaa fs cmp inc lret fs sub cmc sar xor lret cmp (bad) mov les sbb cld push cmp mov test mov addr16 inc adc fmul cmp (bad) icebp out adc jecxz mov or (bad) int sub push clc imul mov mov dec jne cs pop (bad) out repz push ficoml xchg out inc or jge dec popf dec sub (bad) mov push push outsb fadds (bad) lcall ss add and test movb dec loopne loopw add dec cwtl fnsave sub adc sub outsb fiaddl jmp and clc fs push cli inc enter dec leave (bad) ja in mov ret mov sub imul push add inc xchg and bound mov hlt sbb dec sub mov push lea push xchg push outsl enter xor xor inc lea imul arpl inc dec xchg mov fimul fidivl in xchg or or dec (bad) and or xchg cmp movsl bound push imul loop sub and and (bad) mov xchg stos xchg mov push call inc fiaddl mov bound mov xor push inc movsl sarl (bad) lock mov sbb out dec call divl sarb lret rcr iret clc inc jl into inc or aas (bad) inc movsl cltd repz (bad) push sub push sbb add xchg lds movsl test add adc mov add push xchg mov mov push dec orb ret ret sbb cmp adc lock mov sbb ficompl arpl sub and inc fmulp push scas shlb stc push mov (bad) jo data16 dec xor mov push mov in rcll fistl hlt (bad) lock into pop or andl fdivrl jnp popf add addr16 cld and fldcw pop iret sahf push xchg dec ret jecxz jbe xor outsl lret jle mov pop int3 add xchg stos pop test pop int3 (bad) sub in add jbe and push fdiv mov adc fwait js jge fiadd cmp inc pop inc (bad) fistl jae push or jmp cmpsl test subb xlat mov pushf popf mov or sub cmp movsl repz jp int xor sub repnz clc sahf dec (bad) aam add pop add push jl xchg jmp out loop iret cmp (bad) dec mov xor test lea das push (bad) imulb mov xor push add jg xchg mov nopl lods mov cmp push mov in (bad) test scas leave adc adc xchg rorl sbb ret adc sbb pop icebp mov es int3 mov test and xor decb mov jl cmp mov adc mov mov into cltd lds setne jp or addr16 pusha ret xor icebp dec sbb jle jmp push sbb push andb ret adc push dec mov inc popf (bad) mov pop sub pop into dec inc movsb stos and (bad) inc or dec inc jmp mov and adc pop inc and adc and or ffree int add lret fcom sbb and inc lods test mov in sub sub in inc aam mov push les mov or push pop inc incb lea sub enterw cs add jne inc adc adc and sub pop xchg dec hlt cmp lods pop xchg pushf rcll jecxz adc int dec ja dec bound ficoml movsl jbe adc stos fiadd push xchg into sbb push test inc fidivl bound sub cmp fcmovu push negl fiaddl jle outsb mov out pop dec sahf pop sbb xor xchg out out inc mov in mov bound int3 sub xchg shlb push in lods movsb int3 out shrl add ds and sahf pop and int3 mov add lret jmp loope adc rorb xchg or popa ljmp pop (bad) dec push imul imul push mov cwtl lock and (bad) dec mov add fs xchg fs lcall daa ja xchg or outsl xor pop push ja jle aad inc xor fisubrl aad jge pop je adc (bad) pop and cli lret out fldt and and dec lea in dec add stos jecxz mov incb stc into adc pop push add lahf rclb inc inc sbb and xchg push add xchg dec out addl sbb scas push aam sub popaw loop mov stos push adc dec pop dec mov jge jle jp dec inc push adc pop jb fcmove adc sbb adc pop inc ja inc pop pop ret (bad) fist (bad) ret pop movb pusha xchg sbbl out push ja push add jecxz inc gs daa shrl out push shll lds imul fs inc hlt dec jb (bad) dec xor xor dec xor pop jb mov aaa inc push dec enter mov cmc es or inc sbb pusha or dec mov inc mov hlt stos rclb gs adc mov leave inc dec or pop sub aas push hlt test dec int xchg in sub adc (bad) ja jb mov sub jle and pop test xchg or loopne int3 test imul dec stos push addl pop lds scas loop dec push gs xchg lret and (bad) (bad) or aaa add dec or pop mov pop movsl loope xor sbb inc daa inc jo rcl or (bad) inc xor stos xor push pop mov or adc lahf xchg leave leave or ss add dec shrl inc cld pop pop inc test call mov cmc xor push test sti divl dec jo nop inc fisttpl ret cmpsl mov mov or or lret add add add (bad) std xchg and push in push push or lds or pop mov xor pop in outsl or (bad) add setb or popa jns mov int push push (bad) std lret mov gs mov sub add ret xlat scas sarb sahf push outsb inc (bad) (bad) fdivl or jb mov push dec (bad) cli jmp jecxz xchg xchg sbb inc and scas leave lods adc mov lods and and jb mov mov std das out inc cs mov scas add leave mov pop mov or or or rorl (bad) push add dec or jne test stos lods fidivr push nop mov (bad) xchg sbb mov xor add mov mov (bad) sti or fisub and out (bad) jno sti jecxz dec mov inc out push in fucompp dec negb jb cmpsl test in sub add or add jbe xchg cmc sar cmp mov dec jbe mov jbe mov jbe mov xchg mov mov jbe mov jbe push cmp idivb clc push fstpl std inc iret cli call test mov cmp push cmp dec (bad) dec out sbb in lds test sbb mov sbb shlb cwtl xor push inc dec mov adc adc pop xchg adc pop out adc and adc dec imull outsb in cld fwait (bad) clc push aad sbb push pop jo,pn fwait adc add ret dec fwait std in lds (bad) aaa cs stos mov xor dec cmc pop ds or mov xor dec sub jne and xchg and cmp (bad) jo pop dec xchg outsl iret cmp jbe in cli loop adc std lock fcmove test leave inc xor push add add rorl mov jbe mov or jmp mov mov lds int3 call shrl mov cmp xchg wrmsr loopne aas arpl cmpsl adc inc rol int inc leave leave dec mov pop or inc pop mov mov xchg mov (bad) dec data16 out jb mov outsl jbe add outsb je imul and outsb out add in jbe (bad) dec mov inc in mov add scas push mov dec adc (bad) jbe sub out outsb add inc test add test pop into mov add arpl pop ret pop jl roll mov daa into insb out cli or sub (bad) push (bad) mov dec inc call outsb xchg cmp push lock les ljmp dec js sub rorb push loope dec mov (bad) xor mov xchg lds mov nop pop add pop bnd jbe cmc int or ret or ror push add dec or (bad) jbe stos inc aam loopne cs mov repz call test sbb decb mov xor inc lret inc je jecxz adc add adc icebp mov adc rolb outsl loopne (bad) jb dec or decl adc xbegin mov subb iret loopne repz push jo lock jmp xorl out mov pop jle add rcll sbb inc test cmp sbb mov shlb push jl dec jae,pt mov cmp test or mov jnp orb pop shr jmp mov xchg mov sti pop rorb sbb lret jmp leave daa daa add push or adc push imul cs inc push enter mov dec movsb test outsb mov je mov faddl cmp lock pop loop outsb inc jne mov mov jmp je dec jo scas leave pop adc fdivrl mov lret (bad) xor sti mov je addr16 ret inc mov adc out (bad) lea xchg cltd push pushf jle insb add inc add (bad) jbe sbb lret push cmp inc add dec mov (bad) mov fwait dec dec test gs jns into rolb cs adc int pushf inc jmp shrl push inc mov loopne and dec lret cld (bad) cmp gs and scas test jns ljmp mov je xchg xchg sub cmp (bad) inc mov inc jl push mov lahf inc outsb ret ss sbb mov jne xchg push test pop and lcall adc inc repz inc sbbl fmul add sti inc mov mov or sbb mov lods loope adc sub fist dec add dec push addl mov repnz cmp rcrl ficoml popa inc ret inc mov enter test enter ret push inc gs aad xchg pop cmp shlb add (bad) or xor or mov push dec mov sub adc adc ds dec xlat push mov rcl clc pop mov pop xchg fwait sub insl mov xor fs sub mov rclb mov stos orl mov lods in pusha inc cltd push loope dec mov jb cmp (bad) lock daa iret (bad) and mov adc push nop inc addl or add pop adc xchg mov ret xchg sub xchg idivb outsb test cld fwait add fwait sbb add lret xlat dec adc mov inc add lret movb (bad) lods ret adc xchg (bad) dec arpl adc jmp jbe int mov inc fisttpl inc sub inc pop mov push mov loope,pn fs dec popa ljmp pop cmp mov or adc bound mov repnz lcall push mov ret rorl call mov jge sub fisubr adc push or xor inc inc or outsb ljmp or es push pop push sub lds add xchg inc or rolb in adc inc repnz pop lret cmp push pop push loopne fistpll adc iret mov mov jmp xchg ljmp pop (bad) scas pusha cmp xchg (bad) gs xor and out add dec inc ret dec push hlt jge stos jo fwait xchg rolb cmp imul les test mov shrl into push lds lcall pop sbb xchg jp jge mov (bad) in nop mov outsl bound push les imul cmp mov (bad) cmp fisubl cli jbe je pxor lods fmull cmpsb sti pop arpl push rorb ret pop dec push jp sub jmp aad mov push push jb movsb pop cld mov pushf dec ljmp mov cmp push rcrl insl sahf push pop jb sbb jns push adc push enter add mov (bad) int fdivr in loopne jns sbb dec out adc dec jns or mov cmp (bad) icebp sub mov jge add insb insb jb cli test mov jle sarl jns dec cmp sub dec mov notl (bad) pop icebp (bad) in rcrb mov mov jne mov jmp cmp adc cmp xor adc sbb pop cmc (bad) mov xchg sub push ds sbb and ds jl loopne dec or sub sti jle jbe push (bad) out les pop cmp xor dec inc ljmp loopne,pn inc xor dec pop movsb or cmp pop adc hlt (bad) jns cmp cli mov inc xchg adcl jp mov lcall xchg mov fistl cmp ret shr lea inc add sub sbb cmp fldl lret push ret inc cmp adc mov fwait int sbb jmp or adc aam loope inc fwait repz addr16 sarl lcall and mov pop jae push fnop sar test inc fisubl cmp mov mov push xor sub adc push lret push pop dec fisttp jmp mov stos rcl and cmpsl or fmuls shlb inc in sbb xchg pop push add rcrb fbld je xor or pusha and jl das xchg push add (bad) push push fcom mov out or cltd push add fwait lret js add out imul adc loopne daa or daa xor pop push sbb mov jge es push push les cwtl and repz ftst sbb xchg cmp loop in addr16 sbb add and ror mov mov gs xchg or bound fistpll cmp inc add sub lds sub dec aam ljmp inc pop xor es lock lods cmp outsb xor dec sbb xchg sub dec test ret mov push or enter mov push in mov cmp xchg in in orb leave pop adc (bad) test xchg add mov mov inc daa sbbb inc push pop hlt inc daa mov cmpl inc push enter mulb xor leave ret jmp test jb int3 xchg jb les test aaa add mov add xor push mov pop dec lret inc push and movsb push sub shl (bad) in in leave (bad) mov jmp push adc push mov lret push (bad) lret (bad) (bad) mov sbb lcall loop cltd and jae jge add aad mov and jae jne bound or hlt addr16 and pop mov lea adc movsb stos mov xor dec sub daa sbb adc push dec xor add gs sarb pop jl xchg stc mov xor push xchg lods int jg mov int3 int3 adc or sahf loopne push or aaa sub pop dec mov sbb mov add enter test or mov popf push hlt rclb and mov lcall or jmp dec jb push mov inc aas inc dec shll push jmp int mov fadds xchg ret xchg lock adc push inc pop adc sbb or fs int3 inc jns (bad) repz sbb cmp (bad) test cltd push outsl cmp inc cwtl sub es std jle sbb and into or add dec jbe push inc bnd (bad) pusha cmp xchg sahf pop push in jnp and data16 pushf fwait cmp sti shl mov fwait sbb xchg jno pop in ret roll sub into push mov leave stos in inc icebp or xchg aad lods adc cmp dec enter mov mov xchg jb mov jmp push or push sahf jo fnstcw add imul push ds push arpl sbb inc or loope and (bad) fwait aas loop int3 adc xchg cmp leave cmp lret data16 mov push lret mov ds into or ja cmovns inc dec dec xor or sbb jae rorl hlt mov lds mov pop incb cmp and cmpsb or inc pop pusha jmp repnz pop sbb add mov jle mov add mov sub (bad) push cmc iret (bad) lock lea inc inc pop js jl and nop popl ficomp adc dec pop and add xchg data16 dec icebp stos jmp ljmp cmpsl mov insb rorl enter push mov xchg movsl sbb ficomp pop cmpsb and or lcall test rorl in bound push mov pop outsl xor and lcall pop or push stos xor dec and or outsb sub inc rorl jge jmp cmc ljmp mov cmp add mov ss lock pop sbb ret ficomp add add jns adc fxch pop pop sahf push push cmp mov mov stos or and sub repnz test inc adc lods out push xchg xchg xor hlt jmp (bad) dec cmpsb lcall aam int3 pop xchg add cmpsb js imul cld nop lahf bound dec leave xor or sbb jmp aas mov test pop xchg xlat jmp shrl adc push int outsl add les cmp addr16 cmp in sub (bad) mov xor jne push scas dec xchg es mov addr16 ret stc (bad) movsb mov (bad) scas in inc add imul xchg add es xchg insl push push daa sbb xlat iret push lea icebp lock add cmp cwtl dec pusha movsb test (bad) inc repz (bad) push inc or rol ss dec repnz subl ficompl aas or dec cmp enter push (bad) rcrl add test push stos (bad) push sbb xchg add mov mov outsb inc mov jmp jb cmovno into dec xor xchg mov (bad) repz dec orb loop and mov inc pop sbb es andl mov sub push push push push in rorl stos xor lret inc lret shr cs pop inc cmp out outsl add (bad) dec xchg enter inc mov or fldenv rcrb mov pushf out adcl in add fisttp ds mov imul repnz adc xchg push inc lods int outsb sub (bad) or xor and adc push inc pop sbb mov test cli in packsswb inc mov push mov sub xchg mov push cmp add mov cmp or mov and add (bad) mov rcrb aad je loope push jo add mov es (bad) notl dec movb push arpl lret mov inc dec and sbb adc repnz es dec icebp add push lret dec icebp and shll ret inc push aaa mov cmp cmc inc jge (bad) int3 mov xlat lea mov pop push xchg ss sbb icebp data16 sub std inc push test movsb ljmp repnz ficoml popf nop push sbb mov js aam add add in outsb dec adc push jb test push in pop sub inc ficoml orb rol cmc dec xchg and inc push jl sahf dec mov sahf and dec repnz cld jo jno xchg rorb enter mov testb ja mov lock imul cmpsb in mov sbb and push sub pop mov or mov dec sbb xchg addl in loopne mov in shll inc enter bound call fidivl lret xor js inc aam xor mov xor jg lds fistp jg push add mov sub mov lods cmp jmp test mov sbb add adc dec adc and sahf rclb out xor or mov lods jnp stos push inc inc xchg mov dec dec adc xchg lcall (bad) fistpl xor push gs xchg mov sub pop imul loope cltd jg orb (bad) mov out push loop out mov movsl repnz mov jo test jns lcall in push sahf jns dec mov test int dec and dec mov dec inc cmp lret and mov out (bad) jmp mov les push out sub cmpsl dec mov mov add hlt lret bound in lds push jo cli jge rclb imul out cmp mov je pop cltd mov mov mov mov add jge out or es test adc dec fstps jne imul sbb es (bad) (bad) or fwait jne imul loop push sbb lret pop mov jno cli mov pop push adc rclb jmp movsl xor lds jmp mov mov in je lret add jno test jo cmpsl xor push into xor push imul xor in and jle add sbb or xor hlt cltd mov mov dec mov xor cmpsb pop cwtl loop xor jno not pop imull (bad) rcrb dec fistl aaa dec xchg adc insb inc mov pop xor aam jbe jp sbb les aam incl movl (bad) not jnp ja dec inc adc test jo lret loop das movsb mov xchg push xchg das push push mov int inc pinsrw fsubs ret (bad) jae pusha js aaa scas lock (bad) xor (bad) loope loope fucomi mov dec push jne xlat mov stos jnp jl sbb adc mov push imul jnp jg push add lcall call jg inc dec lcall push outsb (bad) movsl test xlat mov neg dec cmpl andl add jmp jle stos jns insb ja xchg mov mov icebp inc jl inc mov xchg add shr sbb aaa lcall inc and ja add das call sub (bad) jb adc sahf aas imul mov je cltd inc xlat lods xchg dec mov mov adc xor loopne pop xlat cmp pop add or xchg out clc jbe push leave push mov or sub mov or gs stc out xchg fistl or pop in ja arpl add lods xchg sbb xchg cmpsl xchg pop popa (bad) (bad) pop adc cs cs xchg xor dec inc int inc nop sub push (bad) shrl mov call dec xchg imul xchg enter add dec push mov loop popf push pop jb adc call or mov rcll xor xor jns inc std (bad) mov test jae dec leave sub ljmp (bad) (bad) and aas dec dec and lret addr16 and in out lcall cs jp push mov jmp mov sub (bad) arpl push mov lds sbb rclb push or jmp xor cmp gs add dec jo incb testl or inc sbb outsb int jmp dec test mov clc mov dec pop ret add and push addr16 cmp inc test xor into add js push cmp addr16 push sub sub stc push jge pop push xchg adc ja (bad) fucomip repnz (bad) jo lods les (bad) cmp nop mov in push fdivl mov sbb stos scas bound add adc rcr sbb push daa cmp or cmp int lods xor pop inc jns xchg cmp push mov inc or test mov outsl mov sub scas into inc jmp ljmp jg or pop in scas jb mov repz lods pop repnz xor lret out leave mov mov mov jp std xchg adcl and decb sti dec push loop xchg nop daa stos out rolb leave mov aad cli cwtl test inc pop inc test test dec mov sub movsl xorb dec sub add fs repz dec and dec mov cmp lds andb test lods add jmp and je daa (bad) dec sar push fnstenv rorl adc sbb outsl int inc add in rcrl xor inc sbb dec inc sub aam pop arpl test aad (bad) enter add jb enter vpshufhw shrb push jnp aas in cltd scas cmpsl loopne jge negl inc dec dec mov ret lea push cmc jge or or inc les jle pop sbb sarb into inc jl inc mov or dec pop cmpsl adc les adc aas je inc dec inc dec push sbb inc dec mov in shrb mov or sbb dec mov call (bad) push mov xchg dec (bad) pop xchg inc int3 ds in sbb (bad) xchg mov adc jle push add leave sbb mov aas or xchg loope sub pop jl push lock sub dec lret test push inc push rol lret int3 fs xor sub out xchg je pop gs xchg je fwait sbb jbe mov push jecxz xlat cltd or subl inc (bad) sbb dec fiadd pop (bad) jbe sbb imul pop inc mov in les mov out jl ret test push dec mov les lcall (bad) call (bad) in fldenv aas in mov dec mov sahf outsl ds negb (bad) das push xor aad (bad) in xchg xchg pop pop dec or jno (bad) je in push stos ljmp in pop sbb pop pop or mov jle or inc in lret mov ret fstpl cmpsb int3 sub mov dec sub or push pop fdivs inc shlb mov std sbb dec popf mov push (bad) cmp test xchg or xor mov cli sbb sub cltd ret xchg or push dec out or xor ret (bad) add in jne dec inc add cmp ss fnstcw add notl fsubs push push and in push lcall or lret mov nop inc inc leave mov fisubrl add and xor jo push das inc mov xchg iret sbb adc adc push xchg std and mov mov lds leave dec jb sbb adc icebp jns sbb fstpt jne insb mov pop mov fidivl pop fdivrl mov cli and dec cli pop pop cld jmp sub xchg add loopne icebp dec jecxz inc repz jns fldcw or mov mov shll inc cs sub in cmp xchg movsl subl lods push ret xchg xchg aaa insl cmc jns ja fs fisttpl test stos clc sub push add push jl js gs and mov jmp mov mov fstl ds xchg in sub pop xchg in sbb and out and cmp bound cltd je pop and enter sbb test (bad) inc inc hlt dec repnz cltd int push inc xor scas rorl or in repnz addl jecxz test sbb mov sbb into mov or ret mov lret shr lods mov adc jne pop sub pop cmp dec jb xor mov adc (bad) inc popa mov add pop cmp jge pop xor outsl cltd jg (bad) aaa or ret fwait cwtl pop push xchg jns push sub leave mov sbb iret cltd xor movsb out aad add in mov jl lds and and cmpsl inc fsub (bad) or pop dec cmpsl jge dec rorb out inc xor sbb data16 mov jp ja insb dec aaa jae mov xor popf dec adc xor int pop (bad) mov add (bad) mov in ja dec inc cwtl cmp sbb inc leave cs adc mov enter into lock sub pop aas xchg movb or ret xchg pop nop pop jne insb outsl pop lret push pop daa mov lcall mov daa xor fsubrl int inc fadds fld mov dec sub push movsb test outsb inc or ljmp sub and test imull mov (bad) xor lcall dec or mov jl xchg mov fdivs (bad) cmp push jns sbb and rclb iret stos insb or ficomp inc mov push pop mov inc int3 fisttp (bad) mull pop cmpsl dec stos mov rcrl adc imul pop push pop mov push xchg xchg sub stos test or imul push jno leave rcrb mov stos jle sub xor movsl lods inc lods les push rorb dec jl popa pop adc push clc (bad) pop out rcll add xchg (bad) sbb in push test fwait dec and das shll mov xchg jmp shlb loopne enter leave push add arpl adc dec mov or sbbl jns aas and push ja and push jns push pop sub add adc ds adc cmp pop adc pushl aaa fcoms stos and stc inc sub xchg incl pushf xchg dec addr16 iret inc jge imul cwtl and inc in pop outsl lods jbe jne xchg shrb addr16 dec add ljmp xchg push pop cmp xchg push rol and and (bad) dec sbb aas sbb icebp imull mov push jbe aas enter clc dec imul push xor pop sub sub lds aaa sub jg fstps aaa dec inc cltd jo inc repz inc push in cmpsl or es and (bad) arpl adc inc jns xor jbe xorb test sbb arpl in loopw push repz add push xor or clc pop pop push fist ss push mov cmp mov (bad) mov iret aaa in pusha cmp movl outsb call rcrl dec mov dec int out sub andb cmp mov sti lds (bad) lret enter xor cmp adc ds cmpps xor cmp dec pop inc sbb mov xor imul enter adc jnp je dec jae xlat jne rclb sub jmp enter cmc dec subb dec push enter ja inc xor in or dec jmp mov ret outsl popf frstor test mov inc je add lret push (bad) and orb xchg fwait inc inc ficom push int add push int3 or shlb (bad) outsb aad js dec int fadd xor or imul mov iret stos loope dec jle push stc out pop mov or cmc iret test leave inc ret das pop push push adc mov xor jne test push stc add dec fwait inc decb mov in fs popl sbb mov adc add dec jae sbb adc pop stc jns jmp lret cmp cmp loope pop dec mov mov (bad) sbb or mov (bad) aad (bad) ja dec adc fdivl vdivpd pop lods pop ret into pop popa jmp add (bad) or add or or out xchg (bad) mov dec xchg or aad xchg call mov push out aas in cmp insl int stos xchg lea mov pop (bad) push add push sub loopne inc pop lret push je lret imull pop lock xor clc gs popf cmp mov mov (bad) test std inc adc icebp (bad) mov mov sub add mov pusha fidivl (bad) sti ds jmp push and movsb xchg mov or push unpckhps clc dec ret add sub incl cmc leave icebp jmp fimull and iret das es lcall mov out add mov lds cmp out in mov scas mov jne push pop push xchg aas xchg sbb dec sbb pop or or xor sbb jne inc fadds dec sub aad hlt mov lret popf xor ret adc (bad) or dec jo ficompl fcmovne nop test xchg ffreep mov add mov push insb add aaa cld xchg dec sub jmp push inc int stos dec xor mov pop pop add fimull clc push mov inc mov pusha cmp int fs in jmp aam inc in add leave mov sub dec jne fs loopne rolb lock mov popf adc mov lock jbe inc icebp in mov pop stos push aas adc push jbe dec sub jbe insl add add inc enter ljmp mov pop jne les jp pop fist mov sbbb notb dec or dec dec fs fdiv xchg mov pusha testl pusha push mov mov in lock add into lcall push enter xchg int xor jp repz popf push pop mov and hlt inc dec dec dec leave movsb (bad) lret push insb sbb in stc pop jno push (bad) fimull (bad) lret les insb (bad) cmp cmp lret jb pushf xchg and push mov jbe inc lahf pop lret xchg ror in hlt insb and inc mov push pusha adc cmpsb dec pushf pop mov clc test (bad) (bad) movsb mov dec cwtl pop push add adc scas xchg fucomp mov imul (bad) enter scas dec mov dec sti imul inc jne mov dec mov jle jb mov pop mov mulb lds je imul push imul inc sub negb arpl or pop lods push jl stc sbb jl fwait dec cmp out loopne clc lods pop push std pop push or xchg es jo add inc js and pop adc les roll enter xchg push fmuls add mov add int3 mov flds (bad) nop or fadds les pop mov (bad) sbb pop xor out mov movsb pusha jbe mov sub pop cmc cwtl pop xor fld lods hlt ret xchg push out cltd sub dec in push subb cmpl jge pop lret jo bound (bad) int outsl les cld sub test add ret xchg jge in jne les adc jno js or jnp xchg movb add jl aas (bad) sahf ret test enter (bad) push mov inc sub ljmp int3 xchg pop ret into stos or (bad) cmp testb scas (bad) pop notl jne jmp xchg pop jmp sti imul (bad) and lods sbb shl jo fucomi popa push mov pop in rol and jae push xchg adc pop push dec add pop out (bad) sti add xchg lahf fcoms jo push movsb out and adc inc loope pop testl jno mov imul (bad) cld mov std pop mov or decl pop push jne push out cltd pop add fwait inc xchg xor push and inc add arpl inc and fild jmp pusha ror nop lds or call add (bad) mov mov xchg and inc dec add les ror adc cs in jbe jne dec dec insb and pop lock call leave aam push dec lret addr16 loope imul mov cmp ja dec xchg mov sub movb sbb outsb iret inc dec repz daa cmp out clc dec jp pop insb rcrb out data16 mov shlb add repnz inc inc or cmp sbb pop stos repnz dec outsl mov jno inc lret lret loopne std sub aas (bad) mov pop mov cli adc imul lahf testb inc sbb test mov int (bad) loopnew (bad) fmull ljmp sub enter mov ljmp test sarl sbb inc push rol lock dec sub sub aam movsl inc pop shr int3 push or fisubrl or insl fsubr inc mov jle sbb fadds adc lret aas mov jae in jnp in fbld into xchg sub mov movl jecxz (bad) js xchg test outsb jge mov xor (bad) cmp jno es rcll (bad) push insb setg popa bound (bad) push jbe daa sub push xlat add xlat inc pusha ret into into add xchg fwait sub lret js mov imul add pusha fimull dec sbb ds push mov add repnz push mov jge cli xor aad aam fcmove mov daa jp roll sbb pop fwait inc or imul ret xchg (bad) arpl add int3 inc dec and mov (bad) push leave mov mov dec inc lods shll inc iret jno in loopne jno cmp jecxz add lds leave pop sbb push (bad) out ficomp lods sub xor data16 sti cld mov mov inc add rorb mov mov push inc ss imulb out test adc cld fwait lret cmp sarb cmp int3 roll fsubr inc arpl dec sti fadds sub in adc dec mov pop xchg pop out rcl xlat dec xchg mov std push sahf shrb popa lods cmp cmp push push or pmaxub pop push je fsincos sbb int3 fild inc dec adc out pop aaa push inc or out add mov push pop (bad) pushf mov sub pushf sbb or push jae (bad) add add movsl lds movsl dec jmp xchg jle fisttp dec rolb cmc xorb xchg addr16 adc cli pop into loopne adc pop (bad) leave (bad) dec jns mov sbb xor test and fsin xchg imul inc mov ret (bad) cmp or (bad) push lock shlb sub inc jno adc pop data16 mov xlat sar pop xchg dec inc pop nop jmp inc shlb lods or jp or ret bound sti push shrw push repnz dec mov nop inc arpl dec (bad) push xor push sub jno scas clc and int js add pop nop dec inc add jno (bad) xchg ror inc jmp inc dec (bad) push pop pop rolb fucomip mov arpl int lea aas mov jg jo add mov xchg cmp cmpsb roll fimul mov je or (bad) and hlt dec jbe ficom inc xchg inc adc xchg out enter fneni(8087 pop lock mov clc dec xlat or mov push sub mov xchg ljmp lret cmp fstpl add rclb outsl mov (bad) daa inc cwtl jp jns popa lods inc lret add lret cli dec movsl dec jge fistl scas dec orl int pop mov les mov mov add popa clc dec je xchg bound rcrb fs clc push mov and or dec cmp xchg mov test jmp jle insb lock shrl enter pop imull iret scas sub xchg fnsave bound cli pusha jbe xchg je inc push loopne scas fstl out mov lods dec sbb out mov sti pop add xlat movsl mov addr16 adc sti sub loopne jns dec sbb lret add imul inc sub xchg int3 popa (bad) inc fadd rorb (bad) out adc insl pusha ret and adc pop mov addr16 jp adc lods aad dec jae (bad) or repz (bad) jno adcb inc addl sbb jns rcrl inc jbe adc hlt mov aaa fstl jmp push mov jne in xlat xor in add add xlat rorl test jecxz addl aaa push call pop mov sub add sti call pop dec mov jmp fnop mov fstps push inc mov (bad) imul mov ror popl test stc call clc or ret mov mov mov xchg mov out xor push push cli and cltd and adc pop mov dec out and mov adc dec outsl mov inc call adc jne js jae push (bad) jl inc push add subb or (bad) mov add sub fwait pop mov mov fistp xor lret push and out push xor push pop dec int jno and js push mov loopne psubw es movsb pop (bad) sub or mov (bad) gs push outsb add inc fldt cmp push cmp dec cmp lds ret push lods pop add dec jb push jp pop inc inc (bad) stos dec sub xchg sbb and pop mov adc sub xor fidiv fidivrl dec fistl mov stc mov add push jb jecxz lahf sub inc inc (bad) out vmwrite xchg lret or scas shr xor mov push and (bad) hlt adcl arpl (bad) out add outsb fnop popf pushf and adc outsb mov cmp cmp jecxz mov stos aad or xor mov aam sbb push push aad sbb in int3 mov test cmp add or int3 sti jmp mov stos xor lds xchg or dec adc or xor inc and xor js les push inc mov xor cltd jg ss outsl subb pop fcoms lret push mov push lcall dec add mov lea inc int3 push mov out pop jnp mov and xchg lcall cmp jg outsl and scas and jnp aaa cmp xchg jmp push enter cmpsb rcrb jmp ret imul hlt (bad) mov sbb lcall and or insb fnstcw faddl pop and inc xlat and js icebp lock push and jnp adc subps jg clc (bad) jno mov pop push push pop pop mov mov aaa push push bndstx rolb (bad) mov sub lods or add das sbb addr16 mov and ficompl mov mov in aad (bad) jne pop dec jmp and enter add mov and push popa out rcrb xchg push xor jg ljmp pop test push repnz dec jo sub je xchg fcomi (bad) into push scas popa jmp inc sbb or aad dec call xchg xlat inc or loopne inc push add sub lret or mov push pop mov in xchg mov push std das (bad) lret call push push or sub mov push cmc push je nop push negb stc push or cmpsl (bad) jns push push les repnz push dec xor lea (bad) xlat push cltd cli fist (bad) fs lahf bound ret (bad) popa pop aam call test mov (bad) mov lods int3 (bad) std lahf pushf repnz pop add inc xor dec add mov or test mov add mov mov add mov addr16 sbb and dec aam push jg and call dec jne popf in clc mov jae pop jo pop xor push cmp (bad) int xor mov sbb dec xchg mov lea ds jbe inc nop xor add inc lods cmpsb inc mov gs add daa cmp scas pop test xor outsb pop sub repnz add dec and outsb dec je or lock inc dec adcl fdiv sbb jae cmp jl stc std aad iret fistp sbb mov (bad) lret inc push mov lds fisubrl mov or cmp mov je jmp scas inc inc and add xchg or sbb mov ds inc ds add jecxz clc and test imul in push stc cmp lret mov mov dec mov cmp fwait aaa popa jmp repnz pop rclb inc push inc bound jl pop dec inc jne sub sbb inc les pop dec adc push movl and adc mov leave push (bad) out inc out inc popa inc (bad) imull mov popa adc sub loope lock cs (bad) or xchg add fidivr cld rorb repnz add es out inc out fs xor cltd or lds ljmp xor add sar jp les push dec inc bound pushf into into (bad) addr16 cmp rorb call adcl repnz popa dec cld sub shll out (bad) movsl loope xchg push enter ljmp test or faddl jns jne or sub (bad) sub insl movsl pusha mov out lods xchg dec xchg sbb add sbb inc mov mov pusha test xor inc hlt cmp and adc dec dec lods lea xor and xchg insb xor or ret outsb (bad) aaa rcrb push dec data16 xchg add push pop push popf jmp fucomp xchg sbb iret adc xor int jl mov std or insb mov into inc dec inc pop inc and mov adc enter bound bound or dec xchg and loope leave out cwtl push dec or fcmovnb sub pop out mov push in imul pop lret in rorb xlat ret push jp inc pop inc ret hlt dec rcl int mov (bad) add xor sarl pop adc push jp fadds fs cmp push iret je repnz dec cmp lahf dec xor lret out sbb mov inc push mov sub adc cmp mov inc ja push popa out cmp (bad) outsl and insb ds aam mov pop or testl or std push dec mov aaa dec lret or addl jne mov pop out inc pusha (bad) or or shrl addr16 jecxz pop xchg enter inc pop xchg lcall xchg push mov ret or (bad) cmpl sahf cs or push (bad) dec add loop shll shrb or xchg insb fcmovnu ja popf int mov (bad) xor sub sbb cld imul sub jno jnp test loop int3 xchg inc (bad) cs lods push int3 adc xchg xchg icebp ljmp mov (bad) cmp mov stos scas add scas push push outsl data16 imul adc (bad) and mov pushf loop outsb cltd sbb cld jl lret dec ret inc pop call mov mov lahf inc mov (bad) fs test xchg add xorl xchg push hlt xchg xor jnp dec mov sbb out mov out enter jns inc pushf dec push cmp push adc sbb inc (bad) popa sbb dec or ss inc lock jge imul pop insb push xor xor in es or ficom mov xor ret test dec mov dec jl ror sbb dec add (bad) dec mov rcrb add add enter add mov and mov mov sbb add cs imul push cmp pushf leave lret fwait xor xor sarb cmp inc jns les pop pop or or insl movsl ss dec sahf mov sub pushf push sahf bound push xor jbe xlat xor test or dec adc iret sub rol push insb sbb push shll test sub out popa cmp aas je lcall hlt lret push sub je ljmp push cli inc inc mov cmp or cmc addl jge bound imul dec jne into (bad) dec adc cmc inc movl dec and xchg (bad) repz ret add (bad) adc jge cmp fildl inc push and push les test mov in jo mov iret movsb mov lret fs pop cli aaa push shlb jge in xor stos outsb test jnp iret cmp or jns pop (bad) into pop cmp or inc clc xlat out mov fmull and jmp mov sbb pusha sarl mov add je (bad) shl sbb fwait cs cmpl cltd (bad) xchg sub ss pop mov cmpsb cmp scas push test mov or (bad) out add dec mov rclb mov enter jg push int cmp dec lods pop (bad) loop mov mov in jmp popa in mov fcoms jg fiaddl mov fstpt cli popa add dec pop pop sbb mov jp jne (bad) sub push jp xchg cwtl pop mov movl push xchg add subl or add push ret inc sub xchg fistpl pop (bad) addr16 xchg repz dec mov dec paddusb adc dec cmp inc and jae (bad) das sti mov jmp jle xchg dec pop dec xchg xchg pop dec scas pop lds subl mov sbb incl adc mov inc add inc inc mov cmpsb sub (bad) ljmp rcrl jne iret bound xor sub xchg lds and mov les cmp sub jle xchg mov jp lock xlat and out or add dec inc dec sub arpl dec (bad) ljmp push jle dec jle mov adc xor adc mov mov or mov jnp jg sub dec out fnstsw dec or test and sbb imul xchg and or inc fldt repnz iret test gs out adc pop or dec or aas inc dec mov sbb mov mov jns dec mov test mov iret push and mov xor cmpsl or mov cmove popf (bad) jne (bad) neg lds sub xchg push xchg out ja loope jl rcrb xchg mov (bad) jne loopne sub adc xchg adc leave (bad) push sbb add gs stc add hlt loopne xchg into imul push ficomp mov pop mov test inc push pop aam push incb dec (bad) mov sub dec shll into adcl repz call fisub inc mov (bad) mov pop pop xchg cmp pop inc int xor out jae ds xor dec cld jp in add test push inc dec js pop test int dec sbb mov pop popa sub dec mov cltd ret dec mov js int3 jp add dec bound imul cmp add inc addb sub pop sbb xchg sub popf and repz push insb rcrl inc pop outsb mov push or repnz pushf mov xchg fbstp dec inc xchg pop lds js mov lea gs ja inc jo jb push pop stos test aas or arpl out inc lret pusha cld xadd jae lret pusha (bad) fidivrl push insl sbb push sbb jae push inc sbb mov enter cmp rcll fistpl dec mov mov lret pop adc (bad) clc adc pop jns mov mov pop outsb cs movsb mov insb pop adc or push in push xchg mov fwait (bad) mov enter stc call das mov test jnp test xchg lahf iret xor in daa lahf gs (bad) or out jge adc movsl add and outsl orl rcll out jbe push cltd push dec and (bad) setno outsb adc rclb sarl or cmp add add dec pop cmp pop cmp test add sti push mov fs add (bad) dec add add cmp jle mov stos roll sahf sbb test mov popf (bad) popa xor pop push in sbb fist adc sbb in test sbb push xlat dec adc dec mov fsubrp push adc add inc cld out push aam call jo and mov mov aas and add inc mov add mov and mov pop out gs add add push mov enter jnp inc fsubs cmp mov dec xor push ljmp xchg movb int3 pop dec insl (bad) shr jnp and repz sbb push ljmp imul imul iret mov (bad) scas mov data16 and xchg test (bad) testl mov xlat mov cltd sahf inc dec nop mov cmp ret xor mov mov dec (bad) dec cli inc (bad) dec addr16 xchg bound mov push push fisub gs fisubrl mov (bad) or sahf push add pop daa xchg sub imul fistp loop pop leave inc dec xchg or rcll out mov mov mov push rcr ficom (bad) rclb aam or mov pop xchg fs jo xor ljmp test jne inc mov push ds push cmp xlat pmulhrsw enter cld insb or sbb aaa pop sahf jb jns push cmp sahf mov sbb lcall sbb sub sub xchg dec ret pop movb das mov pop jno fist out (bad) ja add fs xlat test adc pop or out dec fstp dec sub sbb rclb icebp std or bound jo (bad) dec jmp push int (bad) movsl popa add gs icebp test mov (bad) cmpsb xchg mov sbb inc ret mov loopne jno pop cmp xor gs imul pop out fidiv adc movsb bound jg inc inc shll in xchg je fdivl insb inc pop inc xchg add xchg bnd push cmc int mov mov jne ror andb es jl jbe fsts insl sub push pushf rorl ficom mov xor test cmp iret pcmpeqd in cmp lret and call adc inc ret xchg in fs inc loope inc addr16 mov loopne icebp pushf scas loopne add sbb inc nop pop pop icebp xchg sbb aad mov jnp mov inc mov lret (bad) loopne call dec test push push outsl and pop jp fs xor ret inc dec mov xchg xchg pop ret ja add dec mov xorl ds sarb dec xor xor pop pop or xor mov pop xor and jg (bad) add and dec jb pop or (bad) lcall sub ja repz cmp dec fwait es or les mov sub jmp mov jb pop cltd jmp cli pop push pop mov dec cmp test or rorb (bad) fs push pop insl sub jmp sub iret cmc push inc movd popf inc (bad) lea push sbb leave pusha fstpl stc pop popa push or test lahf jne push in in loope push push gs (bad) dec pop bound outsl jo xchg sbb mov negb push test xor or je and (bad) sub popf push xor pop inc inc leave inc dec pop pop iret cmpsb int repnz mov arpl pop sub xor test pop push shrl jbe jb orl push inc or mov mov push mov (bad) (bad) push inc push sbb inc lea jge push stc rcll mov movsl stos in dec and (bad) in fstps mov push pop jg push std add push js add jge mov push test insb std (bad) push jp adc popl add cmpsb mov sti out jo scas mov leave loop cmp dec aam inc ss (bad) pop clc xchg test pop mov mov adc xor insb inc sbb loopne xchg popa jecxz sub push call bound cmp jecxz flds ljmp jns test and mov sub xchg lods adc loope or cltd push xchg or sti lods aam inc inc or xchg sbb pop ja adc cmp xor and xor mov leave aaa sbb in sarb imul xchg cmp cmp shl mov mov push cmp dec or (bad) xor into add pop mov insb xor cs sub das jb repnz lds push gs jle xor add pop pushf (bad) pop push lods int3 xchg pusha std loopne iret (bad) hlt out fldcw mov jge jbe insl (bad) sbb data16 or inc bnd pop incl mov fwait lahf cmp sub loopne (bad) lods add dec cmpl sub aam into (bad) fucom js cmp pop jae iret dec sub mov add cmpsb into add pop (bad) int adc std dec loopne mov int out cmp rep push push sbb mov fbstp inc push cmp pop pop std cmp mov movsb xor int push dec lret rclb cs mov xor push ret cmpsl test fs lods cmp xor inc mov jns (bad) movsb aaa in sub mov jne rcrb push mov jns in cmpsl lods out jb test jnp and cwtl rorb inc cmpsb lret aad ret lds jle sbb pop dec inc mov rcrl in cmp js cmp mov add xor fs xor cmp hlt loop into cwtl loope mov push jmp xchg in je pop lock adc mulb add mov cs stc push add or (bad) or dec jge and mov sbb mov inc fdivrs dec mov push mov push xchg orl inc dec imul xor dec js sub or int3 add push mov adc mov repnz pop dec and mov icebp scas bound mov xchg (bad) push jecxz push dec call pushf xchg mov inc push in (bad) cmc pop je inc mov xchg out aam imul rolb out movsl xchg arpl push jbe or lods mov jbe pop add (bad) xor push scas insb push inc in mov les bound pop faddp dec and and xor inc inc hlt inc inc push leave out test xor pusha inc enter cmpsl scas sbb cmc xchg mov push out fstl push inc sub dec int3 pop inc jge fs or inc movsl xor push dec sbb fwait dec dec ds xlat inc and arpl jno sub xor jno and jl int3 pusha or mov fisttpll add jmp fadds mov dec or jge push in sbbb test mov push fildl mov notl push jne cmp (bad) sub pushf lock (bad) lcall insl pop pop inc jge test gs pop in pop scas sub icebp rcr pop std inc adc movl (bad) dec dec test out mov sub inc add aas call rcrl sahf push loope add rolb icebp in loopne or mov mov fs or or push pushf aam push lds xchg aaa push sub popa repnz cmp jp mov push (bad) mov in imul pusha js sub mov lret mov add cmp sbb out cmpsb dec test fwait jmp ret pop adc aaa dec pop push fs xor jge inc les push mov pop js pop sbb test lret popa insb (bad) or aam lahf cmp fs sub rorb (bad) iret and add jle int or (bad) xchg xor dec (bad) push js sbb and negb add in inc data16 fmulp sahf mov sahf rclb fsubrs (bad) push ja lods imul ret xchg out sbbl xchg add sub jne mov adc dec insb mov insl mov aaa jle cmp cwtl outsb sub push jno sti rolb push or jg push enter ljmp divl ret push push lock pop fs lods into or sbb xchg jecxz dec mov pop lret xchg xor jo pop pop xchg (bad) pop test jp push lret ljmp push mov jo ds daa rcll jnp decl adc insl inc lods push repnz enter fstpl je push jns pop push cmp dec repnz (bad) jge mov adcl ljmp movb (bad) jmp cli pop ret inc lret jns in inc (bad) jno icebp aas enter pop inc jns sub push xchg inc mov aas adc dec dec push ret add (bad) adc dec or xlat sub jg pusha dec push push sti dec enter data16 icebp push mov dec or insb fcomps insb fmuls jle add stos xchg dec scas cmpsb inc sbb xchg out jmp aaa jnp imul jbe ffree sbb push nop sbb lcall fwait cs adc push popf and ljmp outsl or out or in inc pop sti sbb mov ret add es mov inc add cwtl mov lret xchg outsb lcall stos mov sahf push rol mov nopl rcr imulb mov cmp sti repz inc dec fisttpll jle pop rcrl inc add jbe add ret vcvtss2si pushf fldcw jp fs push and pop mov dec mov maxps fdiv or loope rcrb mov cmp mov incl mov cmp xchg mov nop icebp mov adc pop sahf xorl jg pop lea push mov (bad) jp inc divl addr16 mov loope insb imul or inc lret add sub pop inc or or sub js ret and cmp xchg aas xor mov rep test push add mov mov shl enter ret xor pop dec pop sub ret pusha incl jnp bound and cld out icebp imul int3 mov sub into fcompl aad (bad) jo daa adc leave add xchg je iret test loopne cmpsl inc movsl dec je pop jns inc push nop xchg in sti cld dec repz addr16 dec inc dec daa cmp hlt jle dec ljmp loopne adc mov pop dec push lret in mov inc add cmpsb cmp outsb mov mov xor popf movq das das enter add push popf aas mov inc lret frstor into push xor hlt mov sbbl sbb add add lock fwait mov js push aam ss xor push xchg ja xor xchg inc into icebp mov addl cwtl dec xchg mov sub ljmp cmp pmuludq inc xlat test loop lods mov xchg sahf push int xchg add fistpl rcll imul lock jo xor out ljmp orl push out jae cmp add and (bad) (bad) sti negb stc sahf es inc aas bound pop jo enter mov mov daa sahf addr16 mov movsl inc jmp lea andnps xchg stos sub mov pop inc xchg addr16 mov sbb sub xor dec xchg (bad) sub add enter push jb xchg dec stos dec xchg bound ss or and pop xchg sub in lcall dec test lods push push adc jae push and mov mov testb jl (bad) push ror dec add fnsave add scas lahf pop mov jle jl das lret push dec inc adc push neg push adcl aad aad div sub in (bad) adc repnz sahf outsl loopne cmp dec sbb push nop push cld jns into ss mov mov inc out inc dec rorl add int3 mov xchg push cs inc aad rclb rcll (bad) fistp sbb notb into or cmpsb call test pop aas or pop ljmp xchg fsubs inc into dec mov in jecxz and jns pop mov mov pop call jecxz jl and mov xor inc lret insl add adc dec push inc mov or daa test push in out inc andl jae (bad) jno fcomip jbe add xchg cmp xchg dec dec daa shrb nop fisttp cwtl into ss ret xchg push pusha mov jmp (bad) and push aad mov imul add pop adc (bad) fs sbb repnz mov pop int3 cmp and mov push push dec fidivrl adc pop jo pop arpl xor (bad) push dec add pop push subl and (bad) lcall mov adc addr16 xlat enter dec inc jns or insb rclb outsb repz add out bound aam (bad) mov aaa mov in sbb mov (bad) add mov (bad) dec arpl pushf jns mov fwait push jbe in cmp lcall cmp sub dec (bad) fsub xchg push push outsb mov test fcomps inc and push cmc sbbl xor insl dec sub pop add adc dec into xchg or inc inc push xchg sub mov push add sub lcall inc outsl jne pop add lds cmpsl add enter add into inc jo inc adc add (bad) jecxz jnp mov out xchg adc loopne (bad) bnd lods pop ss adc adc fwait enter inc mov (bad) pop leave fcoms mov jmp or add loopne repz leave mov and out xchg or cmpsb cs adc dec sarb shr lea ja pop jb sbbb mov add jbe dec cli insl mov int3 and movsl punpcklwd scas adc and push arpl xchg ret fidivrl scas dec push mov hlt lods outsb repnz sub out dec mulb sub and loope dec push scas jbe add js jne pop jl lds (bad) int3 divb sub inc mov inc add inc (bad) push popa sub mov pop mov es or add (bad) or lods leave pop pop inc cmpsb scas jmp dec mov push xor dec ja push mul (bad) es nop inc jp andl push adc leave sub lahf pop (bad) repnz mov and cld mov into inc jb sbb fs pop inc ss and cmp pop jbe cltd aad pop ror jbe pop imul jno inc (bad) popf pusha add push cmpsl pop je jnp stos leave cwtl dec inc mov imul jp sahf (bad) pop test mov jbe inc rcrb cli rcrb pop adc add mov lcall dec pushf pop (bad) (bad) enter pop inc pop pop add inc dec fwait std push test cmp shr inc (bad) (bad) inc inc pop cs inc dec add stos inc test out rolb int inc sbb ret xor out jge or and jle or mov jns inc mov cs lcall sub xchg scas inc mov inc mov inc int3 dec push mov (bad) dec movsb xchg push andl xchg dec push repz pop mov inc stos mov push push dec (bad) and fwait mov xor cmpsb dec push mov in das (bad) ja jg push loope mov int add xchg add push popa jo out lods cltd mov mov (bad) ss sub rorl push and mov cmp pop inc mov add xor pusha and fdivrl in add into imul addr16 dec in out in add pop (bad) and out ja les mov test fisttp pop aas iret mov stos outsl or xchg and in adc decl stos mov out lret dec add movsl and dec leave xor rcrl xchg inc mov or les pop cmp xchg gs mov test stos das push lret pcmpgtw dec je inc adc push xadd add sub dec dec mov inc push icebp add push sar or sbb in (bad) ftst out outsl cs outsl pop jo leave inc (bad) fidivr stos push push lods sub roll inc or nop xchg lods outsl cmp aam lret push in iret rclb add sub popf inc xchg popf sub (bad) call xor xchg inc add mov sub inc adc inc movsl cmc divps xchg iret and ja int add fcomps int pop imulb out negb or mov xchg or loop sbb dec negl in pop jg (bad) inc rorl dec loop or mov dec test lret data16 shrb inc mov pop push out cmc add inc sbb sub push xchg out ljmp jbe mov outsb jne push or push ja js out jl inc mov or dec mov inc decl popa xchg (bad) jae xchg inc push (bad) add mov fisubr lret and mov xchg or or push pushf popa enter mov add dec sbb rcl js xchg dec mov (bad) pop mov scas lret pop ljmp xor jmp push cli and bnd popf pop pushf in (bad) iret icebp dec sub add roll and pushf in cltd mov adc add inc add dec add inc add cmp cwtl inc (bad) inc int or insb sub cmc iret cli movsl outsl cmp or aad adc (bad) cmp cli subl ss test cmp and cmp ret mov cmp fwait in dec mov fwait cmp lcall cmp call out in jmp cmp frstor hlt nop inc sbb xor jno clc inc rorb stc pop es xchg outsb fs adc inc or mov adc xor (bad) leave xchg repnz cmp lods shrb test cld dec mov jne cs adc xchg in pop inc jnp into cltd pop add notb ds mov pop out mov movsb in insl loopne ss js jo mov icebp pushl lea int3 xchg repz mov jge (bad) not sub xor lds push imul jl mov int sub jbe nop inc dec push mov lods cli sar add hlt dec repnz imul addl outsb add ljmp js test sub dec aam push stc push stos push sbb pop mov dec pop add mov (bad) addl sahf and fwait inc sbb mov cwtl inc mov cld and and or jl mov into mov inc sbb inc call push xor pop or xor decb call rclb ljmp (bad) pop or push ret inc enter js mov inc call dec fadd std dec adc leave (bad) push inc adc push mov inc add xor pop cmc out inc sub inc adc sub pop jbe sub outsl mov jbe mov imul cli testl inc jnp mov jbe mov jbe dec mov pushf jmp jbe inc mov xchg mov cmp cmp dec cmpl incl pop mov gs sbb dec loop sti idiv mov mov lock mov sti inc in mov xchg std pop in imul fisubrl mov mov sub stos repnz loopne and mov lea or add stos lock xchg jb pop push cmp dec fiadd lods xchg mov add ds sub std imul and lret xchg lcall and mov rclb adc mov mov xor pop add fisubr rorb sbb adc add and sti mov push push or mov cmpsb cs repz push adc cli pop cmp adc push pop jge jno jge sub cmpsb push dec pop jle xchg cmp xchg mov and pop popf (bad) dec cmc inc movsb loop js or test cmc rcrl (bad) ljmp sbb fstpt mov cmp or aam mov fnsave rorb dec jns lcall inc in push rcrl add push movsl sub imul (bad) mov fisttpl divb dec adc into lds mov add fidiv or out inc pop cwtl dec jb jbe cmp insl scas test dec fadds cmp loop sbb icebp mov adc stos add fstpt push cmp leave dec aas mov imul push mov mov dec into xchg jl mov dec inc dec and lret inc (bad) fiaddl push fidivr sbb xchg adc movsb sbb iret dec js out shrb dec lds sub in jmp inc dec (bad) rcrb cmpsb sub in mov pop xchg jmp sbbb incl in cltd out nop dec repnz sbb and mov cmp iret cmp mov xchg insb mov jns and xchg jb jg ret mov and bound jns push jb pop lret mov dec mov loope inc mov push mov paddq sti (bad) pop mov insb inc cwtl ror lret mov invd push data16 dec sahf fsubrs push dec inc je pop dec repz std dec jmp sub push xchg adc in push cmpb adc faddl add aad loopne cmp into sbb jns inc pop into and sbb mov dec sbb jp dec push pop xchg jmp mov (bad) jmp jb leave push adc inc aaa mov jecxz or ja dec (bad) or cmpsl daa or xchg and cld xor dec xchg mov jle scas and xchg xorps push or and pop jo aad dec jge xor and dec xchg mov jnp aad push xor push sub cltd pop add xchg mov cmp sbb test inc dec (bad) icebp loope notb dec xchg inc sarl jge xlat push into jge push xor add popa jp aad adc fimul imul or jbe sub (bad) dec loopne mov cmpsl jmp out dec (bad) ds inc and mov into (bad) mov mov adc enter inc test (bad) iret aad jl (bad) jno pop inc add lahf rol mov es sub inc or jae out (bad) enter inc mov out ja push dec jecxz push jp and (bad) fidivr (bad) mov inc pop push push sti lret and adc dec sbbl dec adc mov xchg dec xchg inc add sub call add cmp jle inc dec adc sarb aad movsb ljmp inc fdivrl hlt aad loop cmp sbb in (bad) rcrl lcall cmpsb mov lods out lret leavew loope push mov push movsb out inc or movlps cld adc jne sbb das pop jno jle add (bad) inc decl mov jne xchg iret and sti hlt push cmp mov sub push dec jl mov or (bad) std stos repnz cltd cmp inc (bad) pushf dec add cs imul clc sub je sbb push imul andl rcl add adc in adc loope dec xor data16 add xchg lds jbe sub jno and (bad) mul sub pop push add pop test push sbb andb test inc jnp es push adc fdivrp xchg add xor (bad) call and ret lret sub and mov movsb scas mov add push inc mov dec adc std data16 xchg sahf mov push xlat ficoml repz jl push push push jne push jge cwtl pop cmp pop aam enter dec mov push imul mov mov jnp mov mov rolb xor jle push pop add mov mov xlat call jb dec movb mov add adc pop push sbb pop inc mov adc push mov in aad in and and inc jo lock ret inc lods cwtl adc and js in inc scas jl jbe push enter and jb or (bad) add xchg nop loop inc mov xchg inc (bad) andb inc or mov cmp gs insb jl test sub xchg jle xlat sbb xchg adc sub (bad) xchg imul pop sbb dec insl push out or gs (bad) jne fld mov into flds insl dec stos lea mov push inc pop and add jo jb cld inc out dec inc or dec into xor outsb jae cmp push sub test (bad) (bad) stos push inc push jne sbb insb or aam pop jae lahf and lods dec insl dec xor rol sbb mov out or or xchg mov lret addr16 jle pop add leave aas and mov cmp ret hlt fimull jns inc xchg testb inc and sbb jp jle inc jne scas pop hlt cmp or sub inc and jge mov dec mov and in mov mov add dec xchg das int3 fwait cmpsb or faddl or mov or fiadd jg pop mov (bad) xor insb cld (bad) cmp mov or or adc popf xchg inc mov outsl out pusha mov mov ss movsl adc mov repz inc cmc xchg mov push mov pop inc push dec xchg shr sub aam push daa adc insl mov push out lock das shlw mov movsb dec (bad) popf ret sbb lret lcall add hlt imull lds out cmpsb inc adc cmpsb sub sbb sub div adc pusha or inc lods scas jbe xchg pop dec inc inc daa adc lds or pusha mov inc test push mov xchg iret xchg xrelease push cmp dec or inc fwait inc ffreep mov add and scas mov add sbb rol inc ret out in pop shrl ficoml push imul je mov xchg insb xor imul xchg push test jecxz dec popf out clc repz mov (bad) push dec or sbb mov adc lds jno sbb xor pop inc push push pushf jae inc add inc xchg adc mov xlat mov bound sub outsl (bad) aas adc lea pop mov sub add aam add xlat (bad) sub sbb push cli aad test rcrb lds inc fisubr adc lret inc sub lret les out cwtl mov out jmp mov pop sbb adc sbbb cmp dec (bad) push add roll pop fcmovne jle push es inc or mov jmp mov loope loope mov cmp sti inc mov stos je adc xlat ror dec dec (bad) xor int3 (bad) insb add dec fs out cmp ljmp jp (bad) enter mov fbld jl js jge in ret jae js or pop push push mov xor add and in pop xor mov daa in lret push and out xor inc sub out add xchg xchg mov (bad) into les xor add loop push popa in mov jne dec mov push out popa inc inc std mov mov pop mulb enter dec ret dec and add insb subl fildl sti dec push cmp inc push (bad) in push or inc pop in xchg add inc pop popa add (bad) sbb cmp xor adc or adc dec dec inc addr16 and pop cs ret xor adc inc out cmp in xchg adc add lret repnz fldcw push rolb mov pop inc jbe pop movsb enter loope dec mov inc and add push stos (bad) mov lret mov pop push and out xor pop cld out jne xchg int jo jns mov xchg xchg rcl aad jecxz test push ljmp add jmp add mov lahf sahf sbb out dec jns,pt sahf jmp cwtl int push jmp rol inc or push nop add sbb testb ja (bad) pushf push neg sbb push ret rorb cmp inc push orps mov jecxz push lret stos lds mov dec mov test cmp pop mov jl sub mov mov xor mov push gs in pop ret into mov and inc mov ss outsb aas mov jle dec xor insb cld add aaa sbb repz inc fimull mov adc andb cmpsb or pop xor outsb cmp lock push ss mov add loop inc lods mov jmp leave jno sbb pop sbb std mov and lock leave jge insb stc mov add cmp pop cmp jle insb iret adc push lcall lock xor pop data16 pop (bad) mov jecxz dec test adc cmc (bad) cmpsl inc cs imul xchg inc or gs mov dec jo add mov mov mov (bad) mov dec inc jmp cmp sub fs mov push call das aad inc adc mov mov popl (bad) loopne scas out adc loopne es dec jne sub adc daa orb add je pop sub pop push test dec adc ret jns rorb sbbl xchg push lret (bad) mov popa lods push das mov dec (bad) dec jno je xchg loopne idivl dec out adc pop rcrb andb pop pop add (bad) scas in jmp lret push add jnp xchg mov negl add xchg mov addr16 xor arpl and push sarl or pop or xchg mov cmp mov pop sub or (bad) mulb adc ret in jne xor pop ret sbb addr16 outsb lret xor fs popa sub pop (bad) cmc xchg xor push lods pop insb inc out mov leave inc pmovmskb add pop add lret inc cli fwait jge adc mov adc std sbb in push pop sub cli subb movsl cld cli lcall push dec call inc or pop push inc add push pop mov mov fcmovne mov sbb fcoms jne pop push mov fmul xchg mov push movb aad mov dec iret movsb mov rcll and mov xchg (bad) mov out sub sub or sub popf push ret push adc push mov sub dec rol push inc rcll push daa add push (bad) cmpsb jg add xchg mov lods adc je inc xchg out scas lods rorl cmpsb add push push ret sti jge dec adc pushf lahf loopne add (bad) ss lret cmpsb xchg bound dec (bad) fs sahf adc jno test lds adc inc fs lds or int cmp cmc ret subl mov mov xchg dec (bad) adc inc inc mov push push lds mov notl mov in cmpsb (bad) lock cmpl js push jo data16 add mov in lds movsb jg les xor adc inc lret (bad) inc addl inc push roll mov jb mov xor dec inc push pop and xchg and push pop shl dec pop push sahf out leave mov cld lea jge push lcall lds sti nop dec loopne inc mov push push cmc push fisub xchg cmp movsb fsubrs jb js xor lret cmp jne xchg (bad) lods mov int3 pmuludq mov leave pop adc call pusha or inc push jb sub cmp rol jne loop sahf sahf ret inc push pop cmc jb or lea push inc cmp inc inc sub dec xor data16 push rclb sbb mov mov adc sbb cmpsb (bad) inc stos addr16 lds add mov xor xchg popa or ret sub je les lahf fsubrl jno sbb pop xor or (bad) loop pop int mov lock (bad) psrlq mov pop test xor divl std mov dec (bad) ds and int lret ja sbb sbb add cmp and cmp invd and lcall or mov loop arpl xchg mov xlat adc pop push rolb arpl sbb lods mov aas inc test fildl push fldl sub fwait scas or lret (bad) jno pop xor jecxz rorl or sub xchg dec cwtl mov sbb rcl int inc cmpps jecxz and arpl bound cmp sub lods sbb cmp cltd aas sbb push insl ret les push or or jg add fwait sahf xchg cld sbb shrl adc mov mov int3 fsts loope inc dec (bad) or push outsb mov adc cld add jo mov jecxz dec inc jbe dec movl in into or ficoml cmp mov inc lret sbb cmpsl push ljmp ret test xchg add pop pusha dec mov xor jae add inc inc lds mov or rorb (bad) cmpsl fisubr loopne hlt mov push call mov test enter call mov jo sub sti sbb push shlb jl or xor pop adc aad jne cs dec mov inc scas iret lods dec dec iret jnp cmpsl inc or inc es and adc stos mov dec sub add lcall into aad inc push loop adc or lds dec rolb daa mov (bad) xlat sub ss cmpsb mov ljmp call adc dec arpl mov int push sbb cmp pop fcomps pop push (bad) imul lret mov leave popf push mov inc inc mov jp outsb (bad) mov jnp jno and lret dec add test movsb cld push xchg pop sbb dec (bad) cltd or dec hlt nop or std mov aad jbe sbb add adc push push (bad) adc ret cs or inc test add add adc aad pop test je jmp inc mov sbb leave jecxz loopne add adcl emms ret in leave sub loop jle int jle xchg aaa stos shrl jnp adc xchg mov test pusha iret addb push stos repnz pop push ljmp jbe push pop pop (bad) pop inc iret dec xchg or mov push xlat push repz ret mov jne fimull push push stc outsb sub mov jbe in sbb jns inc sbbb and xchg outsb mov xor or add mov ss pop jne stos xor cmpsl pusha push adc icebp inc xor sahf popa push add mov jmp imul sbb ret sbb sub movsb mov add pusha ja inc in fcoms jno jo push outsl inc mov dec imul pusha or xchg (bad) aaa xor gs cmp inc ret (bad) xchg fwait scas sbb cmp es add pop push or add jle shlb pop insb cli pop mov dec or add push ja xchg inc xor aam loop mov xchg jmp or mov inc jne pop push int sbb push orb (bad) push repnz test es jbe test push push jne dec fdiv test pop pop xchg popf inc pop add xchg push or inc dec xor dec cmpsb cmpsb fwait (bad) mov fadds sbb push jne push push into pop cmp jl inc jmp sti inc mov and inc cmp add push mov pushf mov mov lock outsb and dec mov push je jp outsl or int3 push int add dec fmuls pop sahf (bad) mov aad inc fistp xchg addr16 jge dec or sbb outsb int or pop popa inc mov jg movsl push push dec test inc xchg movsl je (bad) xchg ret inc int3 dec dec jge push sub jns adc lcall adc test mov iret push jb scas in cmpsb or dec lds jae,pt xchg (bad) adc rol add push mov lahf fsts pop mov in int3 xor int3 mul dec lds (bad) repz xchg gs and pusha adc test pop pushf xchg bound (bad) repnz ds dec push inc lea (bad) xlat mov or (bad) dec add push or inc jl ss xchg add xor dec stc jnp pop aas mov add mov pop int jb es stc mov mov aas aaa or in push inc add and mov dec and fadd jp cmpl rorl mov and inc dec mov mov and sahf stos sub push fadd loopne and fiaddl cmc out cwtl dec push leave cmp mov cmp dec cmpsl jb lea stos add push sbb aam inc jmp (bad) insb sbb incb movsl add jnp cmc jge jo out or mov test mov outsb aad rcll cmpsl pop sbb mov dec add jne mov jne adc mov push mov lods or jo or pusha jmp ret inc enter inc dec dec xchg dec pusha stos outsl sbb add push mov jno test xor xor (bad) and dec jbe or (bad) ja movsl push or dec jg dec add int3 inc dec dec xchg dec lret inc pop pop movl shl shlb test stos pusha inc xchg pop add adc icebp enter pop ret sub push outsl insb out hlt movsb push sti jno cs pop dec cmp out les mov lret (bad) push (bad) mov iret orb adc adc add lock pop jo push dec push mov lods dec sub lret (bad) adc dec (bad) sbb mov rcll enter negl or or push adc out pop lret pushw xchg xchg lret xchg inc jnp xchg pop nop lret out dec cmpsb push inc cmpsb push rol int adc or pop push dec mov mov gs or dec dec call and orb inc insl es sahf inc aaa or add xchg add or cltd and adc sbb lds and or pop inc orl int3 sub (bad) pop sbb pusha xor ret or clc enter mov or jg lods dec mov pop dec repnz fisttpl pop fnsave push int mov lea push std in mov cli fcomps dec dec data16 sbb push std pusha mov sbb lret lret stos rorl or test sbb enter mov jp and inc push cmp popf xor mov jmp lds cmp or mov (bad) jno fadds vcvtpd2ps and and push xlat mov adc outsb cmp out mov int3 push pusha push inc add leave or out (bad) mov mov xchg inc clc fldl push or jae sub add xor out jae mov xchg xor add data16 enter inc loope or jle in mov sbb mov aas pop inc mov pop scas dec sti int3 pushf inc pop jno std adc movl dec or adc cli int adc push xchg je jge ret sti (bad) dec popa (bad) cmpsl stos in mov push and in jg push loopne outsb mov mov sub adc xchg movsl add or aas inc push insl mov lods (bad) out dec les pop (bad) and lds push fnstcw jmp int scas cmp push ds lret popl es loope jmp inc add push popa push movsl aaa les adc cmp ljmp add dec std or xchg sub shrl cltd (bad) scas cmp push dec sub push mov jbe (bad) jno sti mov inc lea jne mov cmpsl push (bad) push jge inc push dec xchg dec bound xchg fiadd dec lods es mov loopne sbb shlb fsubrp pop mov or pusha jno jb rorl inc (bad) cli jne lods add rolb dec subb dec dec sbb mov hlt xor out mov add insb jne int jmp lahf call int3 mov shrb jb add testb mov (bad) mov or (bad) adc inc xor inc rcrb rolb xor sbb call std fadd shll inc pop repz icebp int3 push cmp mov inc mov cmp sub inc pop pop adc push adc lret nop push pusha cmp imul jno pop and xchg lods cmp and int3 mov and inc (bad) sub mov (bad) das add sbbb add cli stos jp stos ja,pt inc rolb jmp ss sahf and lcall sbb xchg sbb pop ret insb push out sbb push pop pop pop and jae sbb push mov dec fnsave int3 and nop sub ds mov and push (bad) fiadd mov xchg pushf inc pop out xchg mov pop pusha and jl jo mov lcall adc mov adc jecxz push (bad) add xor lock iret pop scas sub sub mul fmuls xlat outsb (bad) pop dec push pop mov fistpl movsb push push bound sub movsl or push mov icebp ret cmp addr16 mov test mov add cmp mov and (bad) sahf sbb loop sti popa (bad) pop in lea inc adc sbb outsb sub cmpsb add and pmulhuw push mov and adc (bad) cltd aas enter leave lcall pcmpeqw fsubrl sti dec or inc xchg pop sbb push int3 push xchg sbb mov fcoml (bad) xchg mov idiv push fs dec sbb push xor pop stos inc icebp dec mov sti mov dec in fisttpll testb fiadd jo push push pop and dec jge xor lcall or repnz mov dec dec xchg or mov adc scas xor dec pop hlt xor and shrb loope sub dec cs nop jle out xchg inc sbbb inc movsl add push and repz inc pushl (bad) mov cld notl cmp add mov in xchg pop add std clc clc rcll das dec ljmp xchg pop jbe test jp push (bad) es (bad) daa test test hlt mov dec jbe mov dec sbb push (bad) out pop pop push xchg cmp outsl in nop cmp dec push in sbb pusha jl xchg (bad) js push out mov (bad) pop das (bad) jge ja mov jp mov push push jno mov leave inc add adc fstp adc push jg sbb mov enter push or mov (bad) xor (bad) fwait xor gs lods in je inc fwait call sbb into je sub sub xchg mov data16 lret and fs inc ficomp cmp les imul mov add jns test xor sub mov push pusha push iret nop add insl cmc and das dec jae jge cmp mov xchg mov xor int3 inc cmp test mov insb stc xlat or call mov add jle (bad) sub sbb and jne les push (bad) nop ss sbb aam jmp or cmp xchg dec lods jnp leave cwtl fstl dec and rcrb lret ja inc or outsb in or push inc (bad) sbb add dec test aaa pop insl cmp mov push sub push lret std cmpsb pop jge xchg pop sub inc cmpsl cmp inc and pop push inc fs imul leave cwtl push add sbb adc push inc mov mov in push (bad) mov cmp inc sbb cmp mov fdivrp or jne (bad) jge inc lds pop in mov cmp sbb mov add mov dec je cmp mov rolb (bad) mov cmp outsb lret jb (bad) mov outsl outsb (bad) jbe mov rcll in pop popf int (bad) aam in sub test daa inc inc test mov cmc mov movsb (bad) test jp add cmc jno and mov cmp lds lahf jle cmc add int3 dec popa pop inc aas adc lds or ret dec das fldcw or call add ljmp mov aaa adc xor jmp inc xor icebp lahf and in lods imul jmp imul mov push sti push jne cld ljmp inc push add sub in in sti movsb cmp inc loopne sub dec sub mov push xchg jns mov enter add dec jmp adc mov data16 into mov cs outsb lret jnp pop jecxz sbb test push inc xchg bound mov and movsl or or push jl and mov pop xchg repnz pop mov nop or inc es out jp mov cmp dec mov (bad) (bad) cmp ficompl or in (bad) aad inc pop jle inc lods add fbld enter dec mov push sti dec lret and pop jbe les fnop lock jge dec inc mov in inc pushf mov jb dec fstl jg shl inc mov adc xchg push daa rcl push jo stos inc inc aaa xor xlat sbb in sbb push jp int3 inc pop pop inc add mov dec jae call jns xchg push insl (bad) xor pop hlt dec mov lret lea and test jp push add scas test dec xchg add fcom cs fiadd adc mov test ss sub push xor inc clc mov xor ret push push insl mov (bad) lds imul lds pusha xchg lcall xlat xor imul adc xchg xchg cmovae mov decb inc ja insl cmp cmpsb add arpl aaa and xchg daa mov and addr16 (bad) into ret pushl js xchg mov lea in and sbb xor ret mov call popf sahf xchg sub mov mov stos frndint sub cwtl inc dec std fldenv cmp inc mov inc inc cld jno inc inc xlat ss dec pop call test push pop mov mov adc pop les pop xlat test adc out add dec inc inc pushaw stos inc xor pop xchg mov sbb xchg cltd mov (bad) xor cmc (bad) ja jmp xchg bound mov inc jle rolb or inc adc jno jns imul lret add mov inc mov les jmp mov push jg aam pop inc faddl adcb add pop daa add popf pop dec insb pop (bad) pop inc (bad) imul ret mov inc lret and push add jmp movl adc mov or mov imul pop cmp pop xor int adc sbb lds (bad) out jae out push adc sarl or (bad) or or push pcmpgtb inc push inc bnd or jno push add adc adc and pop (bad) pop ret jns das arpl jns xchg rcll or stos pop inc scas add sub dec arpl jbe mov jmp test outsb add out push popa out movsl jmp and (bad) cld je xchg mov inc xchg dec mov or mov inc imul add mov mov sbb inc aaa sbb dec ds dec jge pop ja repz sub repnz imulb popl in fiaddl outsb fistpl shlb cwtl leave rorb pop fisttp adc sub aam aam push lret xor inc aas inc lret mov pusha mov shr outsb mov (bad) pop mov mov jne ret ss lret in (bad) mov jo mov xor push leave mov push inc outsb adc and out lret push xor sarb push ret mov xor dec xor lret push inc inc outsl mov xchg (bad) into dec ja push insl sub add or mov pushf (bad) lock push sub cmc pop sbb fsubs jp mov dec and sub jno pop or aad xchg outsb and int mov mov push pop fs fmull pop and sbb fisttpll int rorb pop ret lea std xchg push jmp xchg hlt (bad) cmp inc cmp xchg aad sub fbld sbbb sub sub add pop sbb dec xchg jo mov dec and sar lods sbb das cmp stc add mov jmp push pusha daa cmp sub jbe inc popa out sbb inc cli dec pop ret fwait dec ljmp jne jp (bad) rcl out loop xor pop and sub fwait sahf mov xchg or inc add fwait cmp jns int3 cmp das les adc pop jbe add sbb xlat mov mov jge insb xor out xchg sub push inc cli and add cmp xchg ja incl mov adc push ret jne mov push jle push divb pop aas inc rol aam mov lretw inc in lds and imul test sub sahf and loope push and pop loopne xor push popl inc xchg push inc lcall lods mov and mov call push (bad) jl pop in adc mov xchg xlat sbb loop insb or popa push popa fisttp sbb sbb push (bad) or lahf inc (bad) iret flds imul and pop rorl xchg sbbl adc out rclb dec push jb and push inc mov xlat pop adc adc rorl sub add idivb sbb or popf (bad) jmp push add in dec sub jp add loop push repz int pusha inc add jo (bad) mov push inc scas movsb or repz dec leave pop push (bad) stos loopne xor pop rolb mov xor push sahf mov in jae repz les insl push fstl in int3 lock js dec fsub (bad) xchg pop fdiv push out adc push inc int push cmc sub pop add or in lret pop add ja dec leave inc negb pop inc mov je mov pop mov nop mov jne push in out push dec dec mov push xor in mov mov pusha jne xor push imul shrb in xlat shrb inc mov pop pop hlt les inc movl dec addl push loope xor jg sub stc call call jge jp scas testb cmp jno out cmpsb cli insl cmp (bad) xor stos cltd aaa pop adc (bad) jl sub cli inc cwtl and shlb into xor pusha ljmp cmpl in add mov push xchg jg inc push mov loope xchg xor xchg mov aad xchg movups ret rcll imul enter inc adc aas rolb cmp push inc test dec adc dec push inc clc inc mov cmp into rcrl pop dec pop test ror xchg inc sbbb jmp (bad) push js (bad) stos mov push or push mov sbb gs xor popf dec pop das mov mov inc pop fwait xchg cltd mov add flds mov xlat xor jmp into dec jns test sub sbb cmp gs add ss ret lock mov (bad) fwait or (bad) hlt mov and addb pop fs fsts jle cmp xor or inc push fs sub sbb pop pusha mov aas inc leave outsb sahf push dec push jle mov out adc cmp jb sbb aas push push or fisubl dec data16 sub aad pushf inc lcall dec (bad) jne cmp int3 jp mov adc adc arpl cmp dec inc push inc fistpll xchg lds ja sbb rolb (bad) popa pop in out xchg jae int push push sub and in xor sub movl inc push cmpsl jmp inc cs mov daa in inc in popa cwtl aas sbb inc and inc inc inc mov push inc imul sub adc inc pop clc or push loopne xchg xor inc add mov sbb pop negl mov add add sarl or cmp mov dec jg aaa sub loop push xchg pop cmpl sbb test in xor xchg pop sbb mov daa xchg jmp push pop outsb mov push mov pop pushf cmpsl iret add push and xchg inc lock mov jp shrl mov mov pop jo adc popf push push (bad) dec mov (bad) pop add in adcl rcr out dec xor inc jl inc inc cmp ss pop and push mov push and ss adc xchg adc pop dec (bad) fiaddl decl inc (bad) loopne aaa cmc mov and push leave nop stos cli push xlat xchg xchg xchg cmpsl (bad) push dec sahf or lds pusha fisubr fs pop cmc fisubr dec mov add cmovno push mov pop in mov ret fmull xor sbb (bad) mulb add xor or and std imull dec xor ret ret mov push mov pop test xchg test pop dec (bad) pop push mov mov add fldl add out cmp stos and xor out in fisubrl and popa hlt (bad) mov (bad) cmc push sbb xchg (bad) dec adc mov popf int adcl xor add push pusha lcall xchg adc fistpl xorl fs add inc and mov adc fcoml sbbl fsubp outsb into pop popf (bad) in adc rcll shr test shr inc cmp or cmpb sti les mov stc xchg movsl add or cmp iret xchg int3 cmpsb ret or xchg data16 sub cli stos push aam inc jle adcl xchg orb mov pop mov je (bad) (bad) push or outsl push push adc shr add rcr lods test lea add pusha test js push sbb ret push and adc add pop ja xchg outsl in ss pop mov fsubrl jg pop mov arpl loope mov stos inc mov and (bad) loop sti push repz imul dec dec jmp insl es inc inc nop add mov push cmc fucomi lds repz fwait jno dec cmp dec push out jg xor dec dec dec inc mov (bad) mov adc pop and lahf out rcl call stc ljmp daa fwait dec popf pop cltd ds dec lret repnz add lds movb xor add (bad) push iret aad (bad) leave xlat inc mov and mov xchg fildll dec or jmp push jns sub rcrb rcr mov daa imul mov push cltd add mov out lea adc push dec sbb sahf mov and push inc loope dec cmc rolb cmc or and insb mov mov add sbb test jno outsl add xor adc mov xor jg cmp ret mov repz (bad) inc negb inc sub test pop in aam add fwait xchg xchg mov movsb inc dec sbb movl inc popf dec xor cmc or outsb (bad) inc orb inc test mov jb xor xor jnp xchg push push adc or jne dec lret call sbb mov push inc add (bad) shll cmp cld rol (bad) movhps sbb and data16 nop push pop push mul mov inc sbbb je inc js (bad) imul lock pop dec add mov (bad) inc or mov xor push (bad) push ret inc sub dec adc mov aad enter add cs sbb lods into push cmp cmpsl xchg ret push jno std je ficoml push (bad) inc and cwtl add xchg movsb push loope iret inc sub push je xchg adc sub leave push sbb dec orl fwait inc cs pop dec or dec push mov push cmp loop xchg repnz cmpsb dec dec int mov adc popa mov mov dec lcall sbb nop aaa sahf or cmp mov sbb adc and inc lcall rcr adc cmc in xchg insb pop pop inc push dec add lock scas testb cwtl inc dec sub mov mov nop pop inc sti and data16 imul pop mov lds fildll loopne push sbb sbb pop ljmp movsb xchg shlb dec mov mov (bad) add (bad) out enter pusha push clc mov sub sub (bad) dec fwait cmc imul cld (bad) out imul pop cmp out lods (bad) fs push add jmp dec pop repnz adc stos daa into je ret std xor inc orb sbb mov push cltd cmpsl popf sbbl pop aad fldl cmpsb pop shrl jg sbb fs movsb js leave inc (bad) dec sbb (bad) dec and ljmp in or icebp xchg jmp gs pop call inc test hlt sar add sti stc or aam outsl out cmp int lea add push cmpsl mov and dec in das out fild lahf (bad) lds inc mov push sub sti cvtpi2ps jns js lgs les pop adc fs lods dec push dec out ja pop les cmp xchg add push dec sbb push cmc push popf push ret lret or cmpsb push xchg sub outsb jecxz inc pop (bad) clc pushf cmpsb (bad) iret lahf dec jge dec pop repz pop inc adc mov fs dec push jge sub movb clc ficompl cmpsl pop adc ljmp nop dec mov jle loope out jne push imul add sub add sahf mov pop andb inc add mov push lret inc push add in dec jns lea cs inc xor in inc repnz sub sub (bad) ja stos pop add enter ljmp les dec xor dec add mov ja inc xor dec or push je adc imul or lods jl dec cmp aam in jbe (bad) lods inc mov test push cmp les jg jae fldcw sub cmp (bad) enter addr16 in mov inc jbe (bad) mov (bad) pusha mov sub xchg adc inc icebp inc and jge roll lods inc add scas clc decb pushf jb into icebp jg mov or pop pop aam pop jae fwait pusha imul push dec sahf sbb inc xor mov mov pop fidivrl cmp pop sub (bad) sbb and xor data16 cld adc dec xchg jmp repnz out adc gs mov inc pop jne (bad) cmp jne clc push fwait loop inc mov xor jle,pn inc out lret outsl mov sub inc cmp push int cltd adc les pop xchg imul push outsb dec push je cwtl cli ret loop ret mov cs (bad) (bad) sbb int fistp jne jns jecxz dec mov cld aam inc mov stos or push aaa add mov adc mov push sbb clc add pop inc addl inc sub or shlb adc fs or (bad) xchg push or push mov cli jb nop sub xor cmp test cmp sarb sub push ja xor repnz push sub jmp inc mov add sub pop sub inc cmc pop ss dec lret (bad) cmp insb push jns inc and inc push cs xor je aam xor outsl arpl sahf dec sub call lahf jp clc xchg out xchg mov inc repnz push push pop add ret jge cmp dec xor pop fwait addr16 pushf xchg das iret xchg cmp ret inc sub rcrb mov int3 subl dec mov jo into dec shl int3 test push data16 loopne push lds into sbb adc cwtl jl stos mov in je mov mov lea test dec push shl test int3 daa loopne stos xor (bad) fstpt xchg test (bad) fldt xor push roll add add inc ss test jbe pop jae mov lea cmc call es cltd fdiv sub lcall rolb or or pusha inc dec sbb rolb mov in jns,pn repnz sarl pop inc adc pop scas cmc mov or xor aam dec xchg pop mov cmp jecxz add (bad) orl cmc dec inc (bad) sub and in or dec inc xchg dec movl popa pop imul add ds scas fisttpl push pop loopne push xor data16 and decb imul cmc push mov mov pop adc mov or pop push nop lret stos cli insb icebp jae insl inc ret adc dec inc or idivb pusha test adc push pop mov adc mov aam add aad sub dec mov idivl and pop rcpps adc bound fs sub inc inc jb (bad) sub outsb cmpsl dec (bad) mov ret lahf push popf inc scas sub lcall or xchg adc imul jb cltd (bad) loopne push movsb leave jg daa mov pop adc sbb mov (bad) enter cmpsb imul jg dec mov adc mov dec dec in lods int3 pop mov dec pop sub and add and push sub (bad) lret jns divb and and and and leave dec push pop pop inc mov xchg dec dec lea mov inc pop out std jae dec outsl pusha xchg aaa shll (bad) jns sbb pop adc adc pop mov orl addr16 cmp fs or lret iret xor dec sbbb lods out cmc (bad) jns mov inc ds adcl pop cmp int3 dec test sqrtps and stos bound popf xor mov inc sbb mov call or xchg mov mov mov lahf addl pop xchg xlat aad mov inc insl dec icebp out orl test testb push pop xor mov sbb je mov push sbb fidivr xor pop push stos mov xchg outsb dec hlt or pop sbb ficom add arpl in mov fmulp push add (bad) mov mov std xchg and or xor jmp test pop xchg pop fcmovnbe cltd pop (bad) cli inc push inc dec mov sub call or pop adc cwtl pop fs out mov repnz add mov lds pop (bad) (bad) in add pop pop push and ret insb add push mov ffreep jp mov (bad) mov push lret nop xchg mov push add mov push xchg dec adc dec or adc pop adc outsl add dec cmp xor and loopne bound loopne mov and in pop inc aad out push hlt add and repz mov and pusha inc or test loop sub bound fisubl mov sbb sbb cmp dec adc mov jbe xlat jmp outsb cltd push lods repnz push ljmp jae mov movl leave iret popf add (bad) cmp xchg adc loope sbb ds subl movsb dec out fldenv lret xchg cmpsb cmp mov and xchg or push lea cmc cli cld aam xor jbe jle mov iret cmpsl inc adc sahf dec loope dec int3 pop dec decb cmp icebp rol dec out bound shlb jmp int (bad) out dec sub add jle fwait lods stc pop movsl dec lret mov sub mov insl test out (bad) mov xchg scas addb aam dec mov clc dec push rolb add imul clc inc (bad) jne paddb mov push mov pop mov ret movsl add sbb and push push je ficomp add dec nop inc out add loopne imul xlat push jbe mov inc push test add inc (bad) cmp addr16 cwtl jne or popa or cwtl jns add enter cmpsl push jbe lds mov or imul inc adc add dec inc inc leave dec jo inc add sub insb mov lods adc mov jmp repz pop sbb aad mov popa mov aam pusha (bad) cli add fcoms mov push aas jg loope xlat cld ret shrl pop ljmp xlat push popa les ds mov xlat lcall inc (bad) lea add and xabort pushf inc push shlb stos cli push int3 fcmove int3 lds outsb add aam xor testb adc push iret nop dec xchg loope dec cmp jns mov loop push push xlat scas inc and xor mov les jl inc dec push popa pop adc (bad) adc mov sub add ja cmp data16 xor adc push jle mov or mov mov pop mov into sub imul js cmp adc lret sbb adc cmc mov xor pop xlat push (bad) daa xor mov mov unpcklps ret mov cmpb out scas add push jmp out cs negl mov insl mov rcrb fiaddl gs xor cmpsl jge dec pop pop ret sbb cmp fcomp inc pop adc xchg rolb ret sbb scas (bad) repnz out xchg dec lcall jo ficompl push push mov pop subl dec out je xchg icebp call test data16 pop add fs sub inc xchg popa push mov (bad) jae lret or add popa sbb push in or add popa adc jg inc and dec fcoms iret addr16 pop pop ja jmp gs outsb enter add das push aam arpl fidiv into imull insb stos mov push jmp push push sbb int3 test mov pop dec ss or dec js jbe push xchg lea cmp inc inc dec inc es mov in adc jns mov add (bad) mov pop add xor lahf or xlat mov push roll jle inc lds adc add data16 in test (bad) or mov lret sahf es rclb add push mov and pop ret and imul xor rclb fucom call or mov add and jle xchg popa push jecxz dec fmuls imul dec sub imul mov xor push mov pop push jae,pn int mov xchg push (bad) and mov xorl xchg xor inc push roll jbe rolb inc into inc xchg fldenv add cwtl ret inc dec dec cmp (bad) push pop fs add fnstsw jecxz js adc mov ret inc mov syscall iret outsl loopne sub lcall and jo and popa cmp ljmp shl stos or or cmp xchg ret jns out add pop sub jbe cmp jns or leave mov rcrl mov fdivr icebp xor sbb add mov stos into sub cmp jp test pop ljmp gs push fisttpl int fnop inc pop pop add sub jbe (bad) xlat add iret test xchg adc xchg xlat ds push sub mov mov jg ds sahf cvtdq2ps lods addr16 out cmpsb into ja cmp rol mov (bad) dec ss mov in and xchg call shrl sub mov mov test adc xor xchg sbb jmp sbb lea dec or pop pop jle add push aas outsl dec cmp ljmp daa pushf xchg dec mov dec dec aas add add leave add xor imul (bad) neg iret push push dec adc adc int into rclb inc ret idivb pop mov cmpsb sub dec lea pop scas in insl mov leave rcrb inc mov dec jns into add dec repnz dec (bad) negb mov jnp ret or ret mov fidiv mull xchg push js push sbb adc ficom and out push add push pop rolb lds adc or or jg push push xchg ja aaa jecxz sub outsb lret into pop push xor adc test and cmp cld fcoml mov pop xchg inc push xor inc (bad) mov icebp idivb sbb jle add call dec or xor lds data16 pop lods pop sbb push in nop or push push cmpsl dec scas popf ret push int3 mov test mov adc mov push jp push orl outsl cwtl adc shl insb sbb xor xlat (bad) adc mov ja and xor test test adc aaa in mov mov inc or rcr dec rorb add inc into in pop inc rcrb loop mov lahf movsl push add or pop addl push imul and dec enter jl add test mov repnz daa in pushf xor xlat xchg dec js dec movsb inc imul mov out inc ja sub mov push adc daa aad int3 jmp add sbb fidivl xchg ret lds push mov sarb outsl in add pop and (bad) or mov lret push xlat jmp (bad) scas pop (bad) aas mov jb bnd jecxz mov std mov adc nop dec in xor insb lret scas sub pop push inc lret xor sub into mov jle movsb adc insl ljmp or fidiv movsb xor and ret (bad) pop adc enter sbb rorb mov dec aas ja push lcall push lret sub jl dec les in icebp adc sbb jo rcrb pop jno fucom inc movsl aad loope push cmp popa repz leave test aad bnd or mov or idiv test adc sahf or (bad) fldl add pop clc lcall jb xor (bad) mov adc inc popf jp pop out sbb repnz jle fucomip repnz xor test sbb mov testb dec xchg mov pop cmp fwait mov ror sub imul rcrb add pushf jp mov rorl xchg inc add idivl and nop std ret clc inc insl call inc rolb inc into gs mov aad jle jge adc pushf cltd lods das ret inc push ret or xchg inc jle int3 ret mov push lret inc push fwait push movsl pop lods fisubrl roll popa or sub sbb test xchg xchg sub dec in jbe xor dec fcoml push es dec dec pushf or data16 dec aaa push push dec dec (bad) jle lods enter cmp insb xlat jne adc shl in inc mov sub (bad) out adcl xchg push adc mov outsl mov cli push adc pop xor ds negl imulb test xchg movsb inc (bad) jle xlat add scas xor movsl lock std mov scas or cmp add test pop (bad) loop xchg cld in and jae or push sbb loopne xchg dec fstps insb les jbe add rcll xchg dec or int ss mov std rcll adc lds lods sbb sub or in (bad) pop int fsubs in iret mov (bad) jle inc xchg dec (bad) shr mov inc dec jle xchg push mov lret lds das ds daa push xchg sbb negb inc adc outsb orb lret ret jge (bad) shlb in dec pop dec ja stos dec icebp and sbb orb or push add std mov pop adc movsb out (bad) aam mov ret aad adc jle jne adc inc repnz xchg cmp call dec fildl gs mov xchg enter sarl mov dec dec addr16 pop mov jl mov xchg out shr mov add lea dec inc in nop inc test or add cmp cli stos (bad) mov pop pop push adc cmp push mov into mov dec psubusw lds rclb dec push imul sub push xadd inc adc movb ljmp stos insb inc lret xchg jle xchg (bad) sbb movsb pop jnp ret cmc out adc and mov xor loop push lds aam ja lea or roll pop adc push sbb cs dec lret and sbb sarl data16 adc roll inc sub inc cmp sub out shrl push inc xchg cltd pop inc shl mov icebp out inc inc mov enter fmuls aaa lock push clc push in in imul scas nop sbb jmp pop sub in pusha nop sbb ret mov ror xchg adc leave cmp out lock lret mov cmpsb or or add ror mov xchg loopne push xchg int3 popf push pusha or outsb jb jbe mov loop sub jmp cltd out or pusha bound faddp decb cli or int mov and enter xor addl jmp ficompl and addr16 cmpl xor daa jecxz sub int3 dec in gs pushf loope inc pop mov ret xorb aad jmp sbb add mov sbb add and xchg movsb das sub jns repnz mov inc sar pop inc xchg (bad) pop mov jb push push cltd pop mov inc mov pop sbb sarb jmp faddl jecxz pop loopne ja sbb iret ret mov roll call iret arpl sbb dec dec add inc xchg lcall and or mov jge push xlat xchg addr16 dec icebp sti xor into (bad) addr16 jb mov xchg mov ljmp cmpl xchg dec stc fcmovnb movsl mov stos pop xchg jl add int lcall xchg and pop cmp xchg sbb mov or jo das pusha push or pop push mov aam xchg or adc or aam add mov into or jns nop dec bswap pop inc (bad) leave inc dec cmovnp push jle or les jmp int3 dec pop pushf pop jo out or inc jg xchg out cmpsb adc add outsb inc flds scas xchg push xchg test adc lret xchg xchg (bad) jb mov ljmp stc movsb push xchg inc gs pop pop dec mov sbb addb add in push test add lret (bad) insl inc mov cli popa inc cli pop int3 ss pushf nop adc xor sub or and add dec je addr16 add mov jecxz out shl xchg enter shr cwtl adc jbe outsb or pop inc pop iret sub aam mov pop dec add and pop into inc outsb adc inc movsb jb inc outsb dec pop xchg (bad) cmp mov rcl (bad) mov mov pop lret out add sbb dec imul fldcw mov iret mov mov dec lret mov mov push sub std icebp dec sbb lds mov cwtl inc icebp and aam mov insb outsl or mov dec mov push dec je (bad) dec or (bad) testb addl aaa xor aas stc addr16 int3 dec inc in movsl loope lsl enter into fsubs lahf jecxz repnz mov sbb pop fs inc outsb adc sub enter fwait iret (bad) jge sbb gs hlt mov mov adc popa pop xchg out dec mov sub jae sarb push loop sbb je ret (bad) mov inc inc fwait sahf push xor fsubs push daa add sbb and sar (bad) and cmpsl add loop jns mov in ja inc stos pop pusha xchg in andb sarb mov add push (bad) (bad) or xor jnp int es adc and adc cmpsb sub push and cwtl stos fcompl adc cmp rcrb dec sahf add adc shll pop jno sti sarl inc lahf rdmsr in jmp ljmp pop hlt inc xlat es push insb pop out push in inc add rorb mov data16 push mov in push (bad) adc (bad) jnp xor bound dec into sub adc fildl adc sub bound push add adc in mov dec adc popa (bad) mov sub lods pop fldenv loop clc movsl ficoml sbb dec xor xor testb lods dec push mov into movsl sbb shr jmp xchg adc inc push sahf cmp or sti xor repnz lods inc outsb lret insl leave sbb pop rorl repz adc dec addr16 leave adc sub push (bad) xchg adcl test lea or call inc inc mov (bad) sti ret aaa jbe sti lret stc inc jbe std idiv sysret inc std lret jp rolb repz jl push out pop add addr16 pushf jl (bad) (bad) incb dec lret push (bad) push movsl mov add in or orl inc divb bound xchg int push cmc leave ret bound and and setbe pushw dec mov fmuls adc add xchg inc (bad) ja cmp adc adc pop jns stos inc mov push adc popa adc pop inc ret adc jmp loope popa (bad) imulb test sbb and (bad) cmpsb mulb fcomip push jge jbe dec je push test divb xor inc imul pusha and (bad) enter push sbb (bad) dec xchg movsb xchg push in cmpsb sbb mov push sbb dec dec sbb push sub (bad) out fstl lds fisttpll mov mov pop ss outsb inc lret and adc hlt addr16 fs fisubl pop or repnz add xchg push mov ret push and and shll movl gs mov in cltd add ljmp add and leave cmc rorb lcall add pop movsb push push test stc mov mov dec or incl (bad) cmpsb adc push push clc ret into sbb mov loopne jae dec xor and cmpsl dec stos fstl addr16 movsb cmpsb hlt mov pusha adc andl leave sub inc mov cmp popa lea adc in andl add inc movsb inc int and xor std out xor out adc adc arpl (bad) into into out stos pushf cmpsl push or mov pop sti leave and xchg pop xor subl sub jge testl push pop pop mov loopne mov jne sub inc test stos cmpl in sbb sub add sub push mov sbb inc cmp iret add stc daa sub xchg cmp pusha (bad) into jae and adc dec adc mov dec and dec sti push xlat popa sub xchg pop pusha aad leave xchg sarl fs pusha loopne outsb sub mov je lock lds or (bad) push and push rorb xchg jmp push popa adc adc inc sahf or pop scas cmp adc pop adc test (bad) out test sti xchg push cmp mov push add (bad) xchg or pop (bad) inc mov jmp mov les sbb adc jp inc pusha mov stc bound out sub cmp paddb ljmp push add je adc and subl (bad) negl or inc inc fwait jmp dec ret pop sub stos push cld pop (bad) (bad) jo std (bad) icebp push xor adc xor mov xchg out aas ss add push or loop dec push sub add outsb mov adc mov pop outsb add pop mov das inc fcomi repz in and adc test mov ss push xor xchg aam jbe jno out adc sbb bswap cltd cmpsb out dec jl adc pop into or pop out mov in jo adc loope dec in loope pop loope int pop std je push cli sub cmp arpl loop push out pop add in inc rclb push adc dec jo and mov adc push pop dec sub ss jb outsb adc sbb lea test push sbb xor lcall das jp es ret dec aam adc or (bad) mov scas pushf (bad) push xor insl adc ljmp push out push dec into dec popf outsl dec inc sub pop inc xor cmp jb inc cld pop (bad) ret mov mov popf jb jne (bad) push lock shrb pop pop xor push or int3 cmp push pop mov or aas jg andb iret (bad) pop sub popf mov mov push or lds and jbe push mov shrb cmp cmp ss and loope adc ljmp leave mov add clc add xor add (bad) jns inc xchg dec xchg and lods daa in push aam adc push or fucomip mov inc push add push cmp frstor aas ljmp jae push add xchg mov les mov add test outsl dec adc insb push push adc pushf je scas cmp sbb dec lods ss shlb loope mov test fsubrl xchg popf in pop pop lret (bad) fnsave jns push fmuls mov jne ljmp stos mov clc popa push pop sub aad lods mov in das inc adc cmp mov das push jno dec fs push sbb push or push test outsl mov sbb movb add xchg add int3 pop push scas pop das insb or fistpll out and sbb mov adc xor das sub f2xm1 add inc mov or inc or jmp (bad) fnop mov test adc cs adc jo mov pop fwait xchg mov das sub outsb loop pop xchg popa push std push xor (bad) adc dec add sar (bad) pop scas mov xchg mov mov add popf pusha add clc shrl inc iret adc and outsl sahf inc jmp das push pop xor xchg or and adc push faddl (bad) loop mov jmp inc mov imull dec sub jl movsl test sub psubd testl in rorb xchg (bad) mov mov mov inc push sub cmove push lahf push push dec cmp cmp das push dec les mov dec ror aam aam sub lods xchg cs jno adc dec clc mov test adc jp mov lcall sti push jle mov loope inc adc fldt mov inc popa jno xchg int dec xor dec enter clc inc sub jns pusha mov out ror faddl dec adc mov ss inc clc scas (bad) jo (bad) xor subl (bad) ror adc fsubrs inc popf das shr cmp sbb pop (bad) (bad) (bad) lods or jns hlt lods add lea adc stos dec or mov mov shrb pusha and int inc inc jle or xchg aas fstps insl stos cmc push dec ret adc mov push sub fcomps mov imul sbb inc shrb push test add mov add addr16 sbb ljmp mov pop adc orl bound inc sbb sub scas push jno dec into (bad) pop push and mov mov cmp mov push or sbb enter inc (bad) mov rclb push (bad) cmpsb dec add rol inc pop dec adc sbb icebp (bad) mov inc sbb xchg pop ss add ficomp in std push imul xchg adc out or fidiv mov mov sbb add (bad) popaw mov lret xchg xchg pushfw add pop test lcall dec jle cmp outsb movsb pop jl es movl push sub aas cmp xchg in xchg popa test loope cmc es lea cli mov clc xor imulb or ja (bad) sarb add fidiv test bound dec push orl sbb mov jbe and xchg and xor cmp icebp adc (bad) xor inc rcr jns mov add ret jg push pop repnz sbb lock lds jl mov leave ret cmpsb subl xor mov dec push lret jno lock mov or push es iret jp adc or add cs mov adcl sti inc sub ds aad dec push fstpl inc ljmp insl push cmc mov mov hlt inc pop lret pushf jle dec sbb stos xchg shll push fnstcw jae pusha add mov or dec mov enter xchg or inc int3 jb jge inc andl dec les aad jo rcll xorl xchg push dec cmpsl aam bound stos stos and jne dec stos outsb dec xor out cmc or dec popa xor arpl xor aam or push sbbb mov push mov imul push xchg inc pusha inc and dec pop in popa jl aad lret xlat mov dec mov add jbe mov dec sbb cmpsb imul sti mov sub dec jle outsb orl dec sbb mov push popf inc das mov into jge push cld pop call in subl repnz scas nop mov enter jbe std sbbb push out dec leave jp insl add aas mov sub push ljmp lods xor push xchg cmp loop xor dec in xchg jg xor inc push push ja data16 leave push mov ss insb xchg and mov mov mov lds cwtl js cmc dec push sahf pop or jle adc cs push icebp inc dec mov mov (bad) into cmp scas test push (bad) sub arpl inc in inc dec push push fs push in adc aam pusha jg inc push bound fdivr adc or jo adc xor movsb dec push push in fistp ss roll add mov out push scas cmpsl pop insl movsl les rcll or pop add cld add or mov mov jne jns outsl aam xchg dec xadd int mov add push pop and imul sub sbb mov xor pop repz call or or mov movsl or xor push call jge mov lods clc inc dec shrb jno cmp outsb jne mov xor cli mov xlat push push or or mov (bad) leave xor in cltd and lock ss push or pop xchg add ss insl push pop arpl bound xchg xor pop mov ret mov ljmp add stc rcrl mov imul xchg dec ffreep mov fldt cmp arpl or dec test das cs lret push (bad) jbe scas mov dec rorl dec dec pop dec enter add mov cli aam (bad) cmp leave xlat out shr xor push rorl or in stc jae add int jbe aad push sub sub xchg lds push sti fnstsw add leave adc inc fwait jle imul enter scas add test (bad) lret cmpsb mov push int jle arpl adc push je lahf call push inc sub fwait enter pop pop jno enter cmp repz push inc aam pop outsb dec inc and mov and pop ficom push xchg ret out bndstx jmp pop xor mov sub push loope movsb aad cmp test in xchg ljmp imul hlt mov out insb ljmp lock lahf inc push ja daa push cmp cmc ss fwait or enter rcll stos adc ds pop xor dec mov jne call in sub inc xchg daa insl sbb xchg movsb add daa rcll test ror jne (bad) repnz mov cwtl pop xor mov call insb sbb mov push push push jg xchg in pop inc aad mov push aas sub int jne enter in push pop into add and sub sub (bad) scas mov adc (bad) mov cs (bad) pop mov ljmp (bad) xchg pop gs aaa repz pop mov rolb add lods out or cmp mov sbb inc push ja movsb pop aam mov inc out decb aad push dec lret xor stos jbe cmpsl xchg inc push dec (bad) gs test insb mov adc lds imul xchg imul add fwait sub sbbl mov int3 mov jle mov aam imul sbb test add xchg fildl out dec add inc aas push sti cs mov je and and jp sahf add mov pusha adc insb dec pop mov mov (bad) dec les pop cmp push inc lds das mov fs out dec and and cwtl and pusha leave inc jae les push dec enter sub inc push push inc or push or sbb pop xchg (bad) int enter pop xchg outsb xor (bad) push lock lret xchg out inc add lock stos loop das xlat and pop add data16 add sub or ljmp fdivs add jo mov sub es push sub xor mov cmp aaa jle xlat rcr (bad) cmp jl inc xchg pop and (bad) xchg jnp dec add xor adc push adc into or push jg add les inc int3 (bad) int3 pop and add rcll rorl in xlat xchg jp fstl sbb xchg pop inc inc dec push jl jno xor push std sbb pop in cltd add jg sub fisubrl xor rorl push scas pop or jge leave dec mov push fimul daa pop sub orl ja cmpsl sub mov or or pop mov push jmp lock sub mov enter sbb sub sub or dec push (bad) pop dec insl int3 lock cmpsb sbb xor inc neg cmc mov ss ljmp xchg rolb sar push cmpsb mov test movsb or out or pop inc mov sbb pop mov push jl outsl or xor lret sbb mov int3 push outsl mov adc jno or mov adc insb insb ds pop adcb and dec (bad) (bad) push pop loope push je mov gs (bad) jge sub cmp les dec fdivrl je and in mov xchg out push test mov loope push (bad) lcall in or out aad mov or pop pop and shl out or cmp cmpsl xchg push pop movsb pop sub adc push vfrczss xchg push push es arpl (bad) xchg rol jo dec push movsb add scas jge clc adc xchg push lock test fidivr push and mov fisubl xor test xor pusha inc hlt mov push dec mov jne (bad) sbb add adc pop dec sbb sahf push fistl mov push stc leave jmp insb mov addr16 jp xor push add cmpsb data16 jae mov sbb push jl rol cli arpl adc fbstp ds icebp push inc and mov push adc xchg std cs or mov js test lret test inc movb fidiv push rol mov fwait loopnew mov dec xchg push lret add aaa mov mov sbb dec pushf inc jg cmp gs push jg out mov (bad) sbb (bad) sub push pop pop mov (bad) mov jo lret push inc push push addb adc pop jmp mov jle mov int3 dec out mov mov cmp lods dec (bad) iret icebp and popa sbb mov dec mov cmc adc or sti fcomps lret int fildl jo adc pop dec xchg daa ret sbb jae mov sub sbb in add mov pop add inc mov pop or sbb xor jo cmp jle add in in cmp neg rcrb or mov inc sbb loopne inc insb dec inc sbb cli add rcr fiadd enter lret lods or sbb jmp or add mov cmp cltd psllq cmc adc cmp rorb mov lret in inc cmp addl mov es stos add add mov pop adc imul xchg jb dec inc push iret cwtl addl and pushf (bad) test jl popa inc movsl (bad) or int iret sbb jmp mov lcall xor std inc adc lea lcall mov addr16 (bad) cli mov push jb fdivr add add ljmp dec int3 jb popa mov sub fstp movsl and jbe or addb movb xlat leave sub insl fisubr push inc gs mov xchg jge push mov mov lret mov lea dec pop lea pop gs popf inc lds adcb add xchg push push xor (bad) and fcmove loopne lds sbb add sub push test pop pop loope xchg inc push inc inc sbbl imul inc mov jp lds inc or push mov mov (bad) call loope push push aaa lret dec rcr test or push xchg sub sarb adc adc mov ret lock or xchg outsl cli xor aam fsubrs test mov or gs sbb adc fisttpl mov adc out adc xchg jbe pop push sub sahf fs rcrb xlat mov imul xchg mov dec test test in inc xchg inc xchg rsqrtps imul mov push inc add sti stos out xor pop push imul insl inc subl mov test stos inc push and jne jg adc data16 test in popa outsl pcmpgtb jb sbb mull daa jo add push lock inc xor adcl xchg stos cmpsb add push inc xor and dec (bad) xor aas adcl roll psrad xchg push movsb push leave dec lock cmp dec imul je and xor je or jns sub mov rclb cmpsb scas inc xchg pop cmp test jo es aam adc sub inc or push jno ljmp ror mov xchg stos adc scas loopne pop adc mov mov out (bad) pop out in mov test inc inc out decb push mov inc sti lea inc ret and pop pop jg pop inc xor int dec pop push add lea push sbb sbb out sub push or data16 sti cmpsb jle push sub mov (bad) pushaw dec in push push lds mov in dec aaa jl jb xor jle xchg sahf sub inc rorl aam icebp test sub push (bad) push pop mov pop (bad) cld mov inc mov es or pushw out cmpsl dec adc sbb fistpl pop stos ss dec xchg xor jg xchg cmc (bad) mov pop insb data16 jns add cld push jbe cmp sbb (bad) jbe (bad) cli jmp add fsubl mov cmc add andl js cmp movsl daa test gs inc jecxz and out xchg sub gs cltd pop lods scas pop ljmp cmpsb in stos inc inc xor lret gs push xchg adc fstps hlt xchg fstpl sbb enter lds push addl enter leave (bad) or xchg mov xor lret gs mov push push repz enter mov dec hlt idivb lea mov gs movsl ja push jecxz loop gs inc test dec hlt out jmp push lods insl out push cld imul adc sbb ds add jb sbb inc inc sti lret ret scas popf sarb push cmp jecxz daa xor mov or int3 mov push subl bswap sub sub (bad) ja lret mov (bad) aas test mov test pop jg pop cmpsb inc fs loop pop imul pop outsb dec iret icebp rolb and roll dec pusha jp fwait push inc xchg fwait movsb out mov stos in andl add lahf cmp xchg pop pop popa cli arpl adc dec xchg jg dec add adc inc mov ja stc scas jle dec or (bad) imul pusha sub scas dec or fs cmp inc push adc pusha mov dec cmp in and sar hlt popf pop push inc lret cmp adc lds inc aaa stc mov lds dec movsb cs xlat lds daa mov adc mov aam push adc or inc ret sbb (bad) dec (bad) cli sbbl dec inc movsb mov out cmpl cmc cs dec cs iret dec arpl notb into inc and inc pop insl loop sub sbb scas roll and data16 cmpsl mov inc sbbl sbb outsl fimul pop xor sbb dec orl fild mov xchg sub cmp sub jmp bound out jae inc scas es inc cmp sbb or xchg sub adc jl pop mov mov imul xor lahf jp add test push ds leave sahf sbb les dec hlt push add mov cmp xchg add xchg js sub inc imull add dec cmp push jmp fstpl fiadd pop inc cmp pop mov ds xor xchg data16 mov pop push xchg pop lock xlat ds inc inc dec add push neg je jbe or sbb in (bad) pop pop push enter lcall ljmp andl and and jb dec push imul xchg xchg or int3 dec mov stos (bad) negb into insl insb inc jbe es int sub cld dec push daa loop add or or add cwtl ss sbb mov inc in inc sahf cmpl jg jnp mov leave arpl xchg jl mov adc push push inc jne or fnstenv adc cwtl sbb lds push stos lret sbb jle movl cmp leave sub (bad) imul dec inc mov cmp lock (bad) lds inc sub popf bound xadd iret lods jp adc out pop and pop dec xchg repz (bad) sub adc js mov movl scas mov cltd push pop mov cltd lcall lcall push shrb stos lahf push sti lret lcall sub mov inc dec push xchg add (bad) je push ljmp or dec scas add sbb lret inc (bad) (bad) push enter push (bad) rcll lds pusha imul adc cmpsb dec inc popa movsl (bad) xchg fcomp add dec rorl pop in jnp ljmp sub push int3 mov and lds add ret (bad) mov mull dec rclb xchg dec xchg scas in jecxz mov pop aaa xchg xor cmp xchg xchg push dec cld sub fisubr out or inc pushf movsb and fimul jmp pop fdivl lcall into ret fsubs int3 xor mov and loopne or shrb loopne sbb xchg loop pop add cmpsb jge push imul lds and repnz roll jl push movsb ret cmpsb sub in xchg loopne mov adc and dec sbb cmp push jne vpacksswb adcl sbb repnz out mov mov int or xor add xchg mov shrl adc add dec lock jne sbbl xchg in outsb fnsave sbb and pop mov push andl insb in loopne xchg insl push das divl (bad) repz das insb imul ret mov pop jne inc fs mov (bad) or bound lods ficompl adc sbb test (bad) lret scas xchg dec pop mov setns andb imul dec punpcklwd cwtl mov dec cmp push mov mov add clc mov mov mov mov aaa mov sub mov pushf sub test outsb sbb and jno movsb mov jne (bad) dec lods inc aam std inc outsb mov incl cmp aam jp add rcl mov pop inc xor in test in test test jg loopne adc test xchg mov xchg dec pop add scas inc mov sub xchg push xchg mov cmp sarb ret add xchg inc push out sahf push and push and and sub push aaa pop hlt int3 lea dec je add xchg pop lds push xor push mov inc ficoml mov insl in mov scas outsb sub dec imul mov nop or test fs insl ss (bad) fwait insb aad aas aam pop inc int insb jb push jbe and rolb sbb push sarb add xchg xor orl xor push lcall mov jno inc xor popa sbb aam mov inc ficoml cmpsb jle (bad) mov scas push xor inc push inc xchg mov add and jmp lret bound add push add clc or cmc push inc xchg mov or pop dec rcrl mov stos fidivrl enter mov arpl into cmp inc arpl cmpsb cmp (bad) loopne in aad pop comiss mov rcl jmp or pop or lock mov xlat jmp imul (bad) int3 int3 mov shrl or bound add jmp xor cltd sbb and pop cmp cli push ss xor (bad) fistp mov iret bound repnz dec mov test dec or incl fcmovb dec push mov mov iret mov adc (bad) enter sub popf jne jno cld sbb pop push push subb addb sub mov sbb adc ds dec aam mov daa idivl lcall pusha push jo or (bad) push lods mov stos icebp and dec inc adc ljmp cli sti dec inc ljmp dec into out adc jl push adc lret aam (bad) xor mov in inc shlb mov push mov xchg and dec jae in (bad) lock jecxz syscall (bad) sub xor loopne (bad) int3 xor data16 jl push push push out popa pop push jae lds jecxz lods dec adc sbb mov lea (bad) scas into or and orl and dec jne inc loopne cmp lea inc int3 jbe push (bad) and test sub inc loop xor push jno,pn nop pop jmp ja lds std dec adc adc push ds inc add cmp outsb aad aam ret push sub dec dec add or fiadd dec mov pop mov dec push jne into lods mov push sbb pop inc mov ret sbb or mov and and xchg mov mov jle dec js (bad) sub ja cmp aam insl add (bad) xor and mov or jb aad pop push cmp sahf push add xchg or cmpsl (bad) xor ret lret inc cmp sub mov inc aaa lcall test or mov cmp mov outsb (bad) mov les fcmovnb cmp and aaa sbb cmp xor loope sbb jno pop shrb push mov cmpsb mov (bad) pusha push push push das pop fst or (bad) xor sub js jp or mov push sub dec sbb xchg inc add sub (bad) mov cmp add xbegin sub popa mov (bad) out popa dec mov or sar add (bad) jmp xchg repz inc or jb pop and inc test lock popa (bad) into push mov inc dec fcomp loop pop mov (bad) cli lds xchg mov push push sbb dec aas xchg pop add (bad) xor pop inc dec loopne (bad) shl pop (bad) enter push repnz inc mov inc jb jno dec or pop or test fsubs xchg fs stos dec xchg or add push stc mov cli add mov pop or dec xchg xchg jg je add cmp and vunpcklps mov push bound aas repnz into cs mov xlat (bad) xor icebp xchg rclb enter in (bad) xor pop andnps fimull dec pop mov addl or mov aam pop inc pop movsl sbb cmp jbe add cmp je jl sbb mov (bad) lcall mov dec popf mov add mov test aaa insb mov lods outsb andl or jecxz adc push add dec or test jle sub mov jns fcomip es sbb add in or mov movsl out popf pop and mov mov aad sbbl outsl dec shll rcl adc in into add add add fmuls fiadd jnp imul repnz (bad) dec neg inc dec mov sbb in sbb mov jae and mov inc frstor (bad) lret jge jae adc es lcall stos or inc jmp test mov fs test in iret rcl inc add stos ja (bad) pop enter bound sarb and dec sbb pusha add dec and pop divl push vprotq dec xor imul cld dec mov mov mov repz mov inc test xor sbb mov test dec scas test pop or push cs inc std movsl je push push jae das loopne iret incb dec push aaa pop dec add (bad) cmp push adc add inc cmp out push negl inc lods xchg inc xor lea (bad) sub inc inc jns xor xchg leave xor adc add mov pop xchg sbb test imul nop add arpl es dec shl sti fwait pop fdivrs adc bound pop xor mov mov inc inc and or mov adc inc inc jns aas aad cmp xor or fildl mov cltd rcrl call inc push and inc push inc mov ret int lea dec jns fistpl push nop std jmp loop,pt sti call cmp pop cmpsb lock iret or push lret inc ret js pusha add lds or cmpsb pop adc cmpsb movntps xor or (bad) jo (bad) jl add inc sub fs jbe sub and lcall mov mov cmp (bad) push adc rolb or lds adc jmp xor ss out dec inc or mov adc lret mov enter out push mov jmp in xchg or call rclb imul jno mov ss xor push mov push xchg lea add lret mov push ret adc pop cmp add adc push aad sbb cmpsb dec cmp and scas les inc ror pop mov nop test addr16 lds or daa sub push fildl (bad) gs out ss add push xlat mov lods cmpsl (bad) out and scas (bad) enter js sbb into dec dec popa (bad) aas mov dec dec fiadd xchg in test inc xor inc inc data16 mov push xor ds dec gs aaa or rcll inc pop xchg sarl and in push pop sbb lret and or jns inc fbld ret insl sub sub jb mov mov add movsl loope jne cmp shrl aaa xor push (bad) xor test jge or inc adc inc inc jne or int3 inc pop add out jne fs and (bad) mov cmp or incl (bad) jmp and pop sbbl aaa test ja adc add lods ret sbb or mov rorl sbb mov subps fcomps add jno adc inc cmp xorb leave aam xor movsb cltd jmp shll orl dec ja add push pop gs popf adc xor jno in mov mov pop xor ret es dec inc cmc sti xchg xchg test xchg cld jns (bad) in inc lret fcoms sub jl or push in or and (bad) ficoml xor ffree mov jns add ljmp scas (bad) mov mov or fcoms xchg and mov xor dec sub lret (bad) enter mov inc imul es pushf dec xor pop dec jno mov (bad) inc sub les add pop pop xlat mov mov mov pop jb mov cmc push pop inc jl or out push bswap js popa into inc inc outsb mov lret lods pop mov push repnz jno loop iret and ds inc cli add std gs (bad) xor dec jb push (bad) mov call inc mov mov rolb adc xchg and loop addl les pushf mov cmovs jecxz jg mov addr16 pop push andps out xor fldl xchg out lods cs arpl dec pop push rorb sub and sbb xor push push in call cld lds xchg inc mov rorb inc test sub arpl fildl add dec or sahf jl inc lock loopne lods sub push subb inc int in jle gs imul iret int3 mov es mov sbb lods mov or arpl xchg (bad) mov jno adc mov add mov (bad) movsl cwtl inc leave gs popa add add imul push add popa add gs xchg popa inc sti or ret mov sub cmp into cmp add xchg inc shlb pop jg ljmp jno sbb aam into out aad jb push scas mov xchg mov rorb mov dec lret (bad) sbb sbb push imul test xchg gs insl mov and xchg sub (bad) add loopne jp fcomps loope cmp fisttp jmp aad mov mov aam fdivs or and add lret mov loop (bad) ja lret mov fmull gs les jl jbe fisttpl popf and mov lahf or add sbbl je sti movsl data16 ss dec dec (bad) adc xchg test into shlb lea out jb add cmpsl mov scas xchg rorl jp sbb mov and shr jl mov add dec pop or sub (bad) ljmp jge add fmuls inc jno xor dec or add (bad) cmpsl lret cmpsl dec test or dec sub push les inc dec js xchg dec mov and loopne sub inc add push push popa jecxz mov insb xchg push loope stos jle dec inc aam (bad) adc cmp jno mov insl mov cld jl dec push pop rolb sub out and jno mov adc push fbstp leave adc rorb inc lea cmp sub adc push jae mov xor imul data16 mov or adc repnz test xchg pop sahf rcll loope jl rorb pop pop lcall and dec inc dec pop pop mov jo mov ss leave pusha fwait xor mov xchg inc out (bad) dec adc fcomps sbb popf scas ret rcl sbb into sbb push insb add int3 pushf (bad) mov push cld (bad) mov insb (bad) stc mov mov jno push aaa xchg sub push add dec scas and jb jge dec cmp aad add pop je lret test pop loopne jns mov jp dec dec push shll repnz xor test (bad) leave inc push ret sbb mov into xchg pop repnz xor mov hlt mov jge (bad) mov mov cmp enter nop mov adc dec jae dec into sub and outsl stos cmp and stc jbe lock jecxz inc xor repnz fadd push mov add dec aaa mov jbe sbb movsl (bad) cmp ret std lea (bad) dec or mov adc xchg test and ss jl cli insl mov mov in mov inc shrl (bad) jns imul xchg in mov mov sbb mov mov pop add (bad) sbb cmp lds or aaa mov ds inc dec adc dec fcmovnb in push idivb inc push mov mov dec push popf wbinvd or sub mov fiaddl sahf jl leave stc lahf mov jnp lret das pop xorl push push stos inc push dec xchg adc inc insl push xor in aas or adc (bad) jecxz mov push jmp data16 mov xor iret inc adc pop pop fisttpl push xor add push (bad) cmp pop loopne mov mov sub int3 and or loope inc (bad) js lret xor adc push jle imul xchg push dec enter iret lea dec sub lret insl icebp shrl ret jle dec dec loopne lcall push rcr or sbb xor dec inc addr16 lds pushf push adc push sub icebp popf (bad) enter mov cmpsb test xlat inc inc aam push fdivrs movsl mov mov insb imul pop mov test sti aad inc mov aam and and add outsb in push bound adc dec xchg pop hlt int3 mov lods iret inc aaa or inc xorb mov out jl lods mov add mov bound xlat jmp inc popf cmp xor mov loop hlt roll xchg gs loope lea add int3 push mov loopne xor push xor (bad) mov jae in mov cmp test mov dec (bad) mov pop popl shr fs mov sbb mov and addl ret push dec (bad) dec add leave or out mov push repnz inc loope jmp push loopne cwtl out or xchg sbb imul cmp add bound ds out (bad) adc or sbbl jno cmp divl pop inc jo dec inc mov jge and daa dec loopne int3 dec lods lret test jg jns into jl sti jp aas xchg lcall inc scas sbb outsl in rcrl test sbb (bad) or jl loopne push mov repnz mov jge fnstcw inc or out inc shll jbe mov (bad) hlt xlat mov mov dec test mov ret popa into sbb sub mov scas push mov (bad) rcrl shl pop inc jbe pop xchg inc leave fiaddl aaa mov inc sarb pusha (bad) add out lods das push pushf lods nop jp push rorl test out (bad) push pop rcl push sbb pusha nop pushaw adc fst pop aaa pushf stos int insb in pop mov inc dec push dec mov int3 add mov sbb sub loope jge add pop mov popa inc xchg push jmp push int3 dec adc sarb inc pop lds push mov dec call inc xchg mov or cmp mov push sti or test dec add add jbe push cmpsl push fist mov pop or push popa lahf in dec mov repz mov notb pop call lahf mov movl movsb xchg rorb cmp mov int3 dec pop or push add (bad) leave lds sub and jmp rcpps inc xor xchg dec jl in (bad) cmpw lock lea iret lods lret and pop ljmp jmp ds push faddl mov jnp inc push (bad) dec dec insb inc sbb dec add in push push adc fnstcw movsb xchg dec adc jl out rcrb ret jb rcrb or sub lret mov (bad) xor dec push add cmp sar test rcl (bad) leave xchg xchg push push les sbb insb xchg js pop test test les xor jmp adc and loopne push in and mov inc imul cs mov jns add lea gs sub adc les sbb pop or xor mov cmpsb dec push aaa pop cmp outsb in adc test sbb je push mov xchg add add bound lcall add roll test rcr or sub (bad) loopne sbb xlat or aaa cmp mov xchg fild jecxz add les mov nopl add gs push fldenv fldl2t sub pushf inc and pop and xchg imul pop call jmp jecxz adc in jno ret cmpsl dec adc lret pop push push popf mov out nop nop pop dec in dec add add inc das cmp push sub cmpsb jo and add gs sti arpl mov add ficom sbb inc pop data16 shlb push or xor sbb jae out sahf outsb mov lret (bad) jo jns sbb xchg adc in inc add ds cltd dec mov popf movsb dec xchg daa jno mov inc mov ljmp sbb sub add push popf outsb mov pop push data16 xchg test adc iret sbb lret ret data16 lret push (bad) push inc inc inc or mov push push sbb mov inc rol fwait sbb adc lea sbb mov fs gs adc aam dec cs iret sub pop and cmp adc (bad) aad sbb dec inc jmp push inc mov adc jo pop dec lret inc (bad) imul adc adc or push inc clc ljmp inc mov shll or rorb (bad) fsubrs sbb and lea fwait and jmp xchg aam fadds sbb repz stc jbe push and pop push add push shll lods inc fmul fdivrl out jg or test lods sub es jecxz in mov daa pop sbb stos outsb icebp ret aaa mul inc decb int and into mov or push testb sbb loope inc adcl popa sub iret mov xlat add (bad) ljmp push sbb mov test movsl mov rorl cmp mov les jae aaa (bad) out orl bound shrl andl js outsl mov int3 out (bad) icebp ret cli sub lret push sub dec aas rcll push push mov rorb test sub pusha mov jno mov out pop call dec jno daa adc enter add dec loope lods jg pusha mov leave fldt scas test mov data16 mov stos vshufps rcrb out mov mov sbb xlat stc dec sbb pop jns inc push cltd out call or testl or push cmp js mov int mov push out xor rclb sub (bad) mov das push push loope fcomi std ds dec sahf jne jmp outsb imul cmpsb inc clc call test add fnstsw (bad) imul or adc inc mov cmp leave push enter push lock leave mov les into (bad) call ret push pop shlb dec sahf js inc lcall adc sub add adc psraw imul out mov pop fs add xor mov flds pop cs dec daa out aaa ljmp mov and sbb jo aam and add inc imul clc test push in lahf mov out loop scas (bad) or pop outsb or stos inc call movsl into jg pushf hlt push fdivrl inc pop loop xor inc dec pop dec movsb std pop stos (bad) mov pop jge fwait je sarl jecxz push in xor out sbb daa xor scas aas insb inc ret xchg repnz int3 bound lods pop clc dec mov add rcrb pusha cmp adc sub cli sub pop and outsl sbbb mov scas sub testb cli or test ret pop adc stos hlt stos cmc or es inc or lods nop aad add dec pushf sbb iret lods jbe inc iret imul movsb jp lea jecxz push inc adc movsb inc pop inc jb dec loop mov xor (bad) xor cwtl jb dec push and or int xchg imul jo cmp shrl xchg dec dec insb out and es sbb jp ss cwtl add add jo or jno outsb inc inc loope sub sarl cwtl dec ja adc or out cmpl pop xchg sub decb dec fcomip movsb mov and inc pop push fldenv xor icebp pop xor inc or test iret fisttp mov push xlat xchg out punpcklbw sbb movl pop add stos neg xchg subb ljmp ret inc cmp sbb add pop cmp pop dec or pop xchg lds loopne,pt mov sarb dec sbb cmp inc pop sahf loope xchg push js lock stos gs xchg and test inc je shrb push push dec daa ss xor dec pop mov (bad) and mov adc or cltd jae add pusha push push cld les cmp inc cmc push push iret clc or push fiaddl mov push and clc pminsw sbb std push dec inc dec jno insl test call jmp mov inc fwait outsb lock push pop pop shll leave pop testb mov flds pusha sti int mov cmpsb sbb jmp fistp addr16 inc stos xlat push add cmp mov jmp sbb (bad) dec xchg or imul mov push and fdivp rcrl fidiv cmp add ss pusha dec outsl ja push inc and jnp sbb xchg add cmpsb cmp (bad) les (bad) mov stc and divl and add inc call jmp add mov aam or subl sbb insl out jge pushf iret (bad) lock ret (bad) sub push movsl test push push cmp fwait les cmc dec mov dec out push sbb jne clc mov insb xor test out sbb or (bad) loopne or push jb mov sub mov jb dec sar mov enter adc repz cmp jb les repnz in jecxz rcrb ret ret sub test mov pop repz mov mov and imul dec insl cmp inc adc xchg mov mov (bad) push pop add add in push int3 or sarb mov push xor cmovge pop sbbb add outsb cli out sbb aam mov cmpsl sbb into imul ljmp pop test leave or jnp pop inc stos int3 ss cld fs dec adc data16 inc notl js pop in stos imul fldt icebp call push mov sub push je outsb aam je fwait mov push sub hlt lcall cli fldcw jmp fs inc jp push clc scas mov not stos clc rcrb mov call popa push or sbb cmc mov dec push je cmp mov jne mov sub inc xchg rcll (bad) leave add in inc mov add les mov cltd inc add xor (bad) and mov jle das jmp inc ja aaa ss lock and fild pushf xor sbb adc jle aas jecxz aad xchg mov dec mov fnop push dec xlat add ds inc call (bad) push jno or push sub int3 andl test inc add int or subl fwait mov add orl dec movsl fcmovnbe jmp jo,pt pop lcall push psubd sub lods outsb fistp hlt ja inc mov xchg and in mov push xchg fdivrl iret push sbb jg sub clc adc pop jne jmp (bad) xchg loopne or adc ret xchg push xlat mov arpl push sti inc (bad) cmc push sub adc sbb jb xor jmp push adc out incl cmp inc inc out inc hlt mov lock aaa dec aaa add mov addb mov mov pop or (bad) dec imul dec xchg adc add addb pop mov mov jns dec jb dec std pop xchg (bad) jae inc lods cld insb dec mov mov and lea push jg mov inc jno adc sbb xchg push sbb je sbb (bad) dec iret or pusha sbb dec xor adc adc lock dec fcmove pusha movsb cli roll mov addr16 jno pop fidiv leave sbb pop lock lock jne add sbb add andl dec and lret pop mov xor sbb repnz mov fs mov and jbe dec dec popl ret pop mov xor adc cltd or jp dec popa fisubl repz mov xchg cmp shlb dec sbb sahf mov enter inc xor leave repnz std sbb sbb adc js dec or ss adc rcl cmc subb dec incb insl jl xlat and jmp nop sbb adc inc jno jo nop flds xchg ret sub sti push add dec inc cmp xchg cmpsb pop xchg bound or and push adc pop jmp fisttpl add pop (bad) into jae cmp into fwait cmc fcom inc fistp aam ds out add inc mov cmpsl inc inc sldt (bad) ljmp sahf mov sahf xchg mov mov xor rcll ret mov sar cmp shr dec pop (bad) or add int3 je cld and (bad) or test jmp subl pop xchg cmp add adc jns push sarb sbb adc cmc (bad) xor sti div and icebp sub es in out mov repnz cltd jl insb xchg repz popa int mov xchg lcall jns icebp or popa cli mov jb dec int3 lahf cs ljmp inc aam loop sub gs clc pop cmp inc jno fcomps push cld (bad) pop pop enter (bad) ja adc loopne xchg sub inc or lret add mov leave and sub xor imul inc jo and (bad) jbe and outsb out and jp push outsl mov pop (bad) push xchg pop insb jns or jecxz movb ficomp sub rolb mov add lahf (bad) addb or cmp out xor cmp lea dec push mov outsb cltd rcrb inc inc xchg loope or hlt and (bad) (bad) enter adc add sarl imul iret sbb push xchg pop dec popf outsl pop orl sbb mov (bad) insl mov hlt cmpsl mov fiaddl jle lods and xchg nop pop daa sub adc adc imul imul adc inc push xor push in xchg add lods aaa pop sub mov addl push daa push push inc stos xchg mov or arpl inc mov inc cmpsb jb sarb inc loope add mov cmpb dec jg fcompl pop fdivp sbb jnp idiv lea outsb les mov jnp xorl je sub cmpsb adc lock add ret push iret jno popf roll inc and rolb adc inc dec adc and jns add aad mov pop pop adc jle push popa data16 inc or jo cwtl mov mov scas cmp or dec sbb out in push inc push sbbl out (bad) or (bad) push cmc out adc pushf roll dec dec fiadd dec rclb mov mov and popf add sti jns or pop push xchg jl xor mov call sbb push xchg cmp je aam jl or int3 repz adc jmp and aad cmp mov dec jge push cmp push jbe cli lret or pop fwait push cli mov lds xor lahf popf dec fimull fmull stos pop add mov or call and adcb js sbb mov aad cmp xor insb adc mov inc test adc sahf inc cwtl cmp xor xor loope mov pushf shrb jmp enter into loopne lcall fldenv fadd mov lret jns or and adc sbb pop int3 inc pop cmp add mov sbb in cmpb push rorl int3 jle imul jns ret (bad) xlat ret pop push popa xchg aas inc jbe pusha ss inc lds data16 fisubrl in ds adc dec sub mov inc inc add mov cmp pop insl in pop movsb pop rol rcll inc add dec (bad) mov sub push jno xor mov mul sti or push shrb xlat adc adc and out popl cli or sarl mov mov (bad) or mov push (bad) ja cmp data16 cmp dec addl mov roll aaa sti add (bad) push and mov sbb rorb (bad) add fdiv lds mov loop push mov sti add iret mov cmp jl push lret rcl fisttp push mov fsts dec pop dec in les scas jo (bad) pop jecxz (bad) clc sbb mov sbb push xchg loope jl dec aam or push xlat stos int push sti test insl add push xor loopne jecxz xor adc mov addr16 or push (bad) repnz or and push rcrb cmp lret dec dec lret pop sub int xlat add movsl push inc sbb ss sqrtps cld mov shlb mov adc inc mov jmp or mov insl popfw push mov daa cmp pop std push push les xchg mov xor inc test in fdivrs sti fmuls add int3 or (bad) pop adc pop mov ficoml mov add int3 movsl pop adc sbbl jbe setb push push or in xchg mov bound (bad) (bad) push test sub lret ret iret cmp pop lahf cmpsl stos in (bad) cmp jno (bad) lahf (bad) hlt dec dec mov cs cmc inc pop fnop pop rol adc dec (bad) and jp incb fnop rorb cltd inc ljmp and ret push mov inc inc out test rol and sbb dec in xor inc mov sub cli cmp pusha mov push outsb enter adc mov ja std adc add and mov xor sub (bad) cmc fs nop dec add mov das fldenv ret pop jmp test fidivl dec cmp inc xor lret gs in dec adc mov ja inc dec pop or (bad) jne push testb iret xchg sub push xchg xor cwtl push push (bad) dec in movlps dec stos push (bad) jmp enter pop mov inc add xchg addb scas enter adc orl push (bad) bound out call jne (bad) sahf (bad) repnz fstpt dec mov (bad) dec mov test mov insl xor xor dec gs xchg (bad) push popf fldcw punpcklwd ror out insb jl mov ljmp xchg stos xor add adc mov push lds ljmp mov add test mov testl daa push xchg or mov inc and fmuls out into nop scas data16 fisttpll inc jmp rclb push inc arpl cli push jle inc stos sub xchg stos loope pop shll stos jne outsb xor pop xlat push (bad) mov xchg inc jbe pusha fstpl mov pop push stos xlat push dec insl mov mov insl adc cltd mov (bad) pop je (bad) in int andl cmc or addb inc add aad rcl pop and int dec int xchg or imul dec fldl sahf sbb and cmp xchg xor sub movl pop cmp movsl sahf rcll imul cwtl inc ret out push pop push fsub mov pushf stos inc add bound add and ja dec and push aam mov (bad) inc or add gs jp rorb pop rol add xlat dec gs sub iret je xchg (bad) adc out mov clc imul fisttpl push xor xchg add mov jns dec mov sub lds nop or dec or dec sbbb das or mov mov addl stos dec cmp xchg das jp stos inc testb pop mov cltd add pop xchg ficomp sub inc pop je inc mov push in jnp (bad) jno xor jno std and xor test pop daa dec (bad) pop and loopne xor mov sub xchg in xchg iret mov cs adc or and sub mov xor dec scas dec iretw or lret adc sub or lret out mov inc aas add mov inc aas inc js adc push mov sbb or hlt and int jae jnp jle (bad) loope adc jmp in push test ror adc mov stos in (bad) repnz pop enter dec dec ljmp icebp pop pop cli mov ret lea out cltd sbb imul xor dec inc jo scas out pushf push fs xchg test or add xchg sbb rclb lods sub add outsb mov and pop daa jns mov aam add imul out dec fstpt int add jl outsl mov jle roll decb dec rorb xor cmp jg push das mov aad ficom popa push jb xchg cmc fwait xchg dec iret repz add and fstpt (bad) ss or rcl fs dec lds stos out sub xchg xchg push pop sub imul lcall leave xor or ljmp enter inc ret push inc xchg or inc shrb (bad) ljmp add mov pop ja jo imul fldl cltd mov stos pusha dec jae nop lss mov jo aas (bad) pop add ficoml sti out cwtl push pop adc inc mov sub jl (bad) mov lret jb,pn gs sub mov dec cltd lret mov or out repz test push cli add adc add mov inc stos ret in dec and xchg cld xchg mov dec mov add pusha adc aam jbe (bad) add scas lar push pop pop aad lods out js mov mov push mov mov push leave ret xor je mov adc scas scas dec mov je add ret lods icebp add push aam jne push mov xchg xchg es in jne xchg fwait dec dec mov and push sbb lea inc stos add cltd push aam jecxz and lret out nop nop hlt cmc std dec jle ret popa add addr16 outsl sti test push in cmovno les push iret int3 popa pop inc adc cmp pop scas in xor and add or fadds adcl jecxz sub mull cs dec adc and outsb mov (bad) gs add (bad) cli mov xchg mov int3 mov jp adc mov arpl cmpsb popa loop inc into out cmc jae data16 and pusha inc dec jge enter xchg push in xor iret inc push leave mov lahf xchg sbb jbe shlb in jle mov and add push cmp cmpl pop call out dec sub inc mov (bad) imul mov mov pop mov jle nop inc je aaa enter dec add out stc js iret stc mov test arpl sbb popf out and mov test and cmp test stos das scas xchg push fimul dec xchg int3 dec pop sub (bad) sahf dec xor fadds or xchg mov (bad) or sbb inc adc inc fcomps xchg loop (bad) pop mov out dec lods enter in sub pop sti push and push push mov jmp or push scas dec mov dec xor scas inc and cmpsl ss inc fistp push nop and dec add push dec xchg adc jnp imul dec cmp aas stc (bad) dec push lea add nop lds subl mov lea mov push or xchg push outsb add adc mov (bad) dec (bad) inc test jg,pn push stos (bad) aam outsb xchg sahf pop stos xchg sbb or (bad) push scas sbb inc cmp inc inc les push xor push inc mov dec sbb loope ss outsb and dec adc xchg dec and out push outsb test (bad) (bad) xlat push push fcoms (bad) push stos xor mov dec out clc arpl mov dec cmp cmp xchg mov and add inc dec and xor fadd rolb hlt ret arpl leave add into sub ss inc or cmp movsl fidivrl push int3 push xorl arpl push or lret (bad) mov or push test test xchg push rcll pop popf or pop sub push iret push inc sbb push push outsl das sub nop pop pop popf push lds and sub cmpsb enter pop mov jae adc jp popf bound adc into jne pusha sarl cmp (bad) sti bound xchg xchg sub inc sbb inc dec mov in stos mov xchg or xchg push insl sbb repnz fdivs jp into (bad) or inc pop clc and xchg in adc pop jecxz mov push sbb aas inc push dec dec in jg adc and cltd das adc add or inc or sub in jmp pop ficompl cwtl pusha push push dec and das jg pop nop (bad) mov dec out std ljmp dec pop scas adc or je (bad) sub jecxz or push dec and adc dec out fsubs inc mov adc les leave aas fs xor pop pop inc test xor dec and push sbb xchg sbb mov push or scas adc push cltd sbb int push dec add or mov ficomp shlb push test or mov push dec cmp daa leave (bad) idivb fcoml jno jle pop push dec xchg jge dec cltd xlat pop jb fcoml jns jbe add cmp sahf (bad) enter pop push and inc cmpsl mov or xchg mov sarl ficomp out jns mov pop aad inc xor lret gs fcoml fstpl enter fstps orl lahf lds xor lret gs int3 xchg push int ror inc inc mov dec push dec hlt les lea js gs ja push push cmp inc inc jnp mov xor and cmpsl sub lret mov push sub inc inc imul push dec hlt and adc xchg sbb lret gs sbb ja push sbb inc inc pop sbb adc add xchg push fsubr jae mov iret hlt pop jno inc push (bad) xchg pop cmp jge pop xchg fstps dec int3 das adc scas fisubr out aam popa jg enter scas roll pushl mov fcmovne adc dec sbb mov add pop jl add stc pop dec (bad) lahf push dec out pop push andl ret or repnz aam lret movsl cmp mov adc les mov inc xchg sbbl sbb inc daa mov xchg mov into push addr16 (bad) mov and push and mov movsl popf out enter xchg and out push jbe or (bad) call cmpsl sub rcpss or mov daa add sbb jp roll bound gs test pop and std fs loopne loop dec aaa add je pop jle dec sbb ret sbb scas adc fsubrl test inc sti test inc mov mov test loop inc xchg mov push mov dec aas out jo sbb push and ret dec movsb pop mov xchg jg inc jne adc fwait daa adc in lods mov loopne inc sub pop sbb pop dec inc push pop shrb (bad) xor cmp xchg je jmp pop in lods sti ret sub cmp mov inc mov cmp inc leave cmp insb stos (bad) mov add loopne pushf leave mov ja sub inc add dec adc out lret bound sbb inc in jo rcl mov inc mov in test dec and test sub mov ds les add cli xchg scas dec out sbb xchg jne int3 or outsb push mov inc in dec mov mov cmc fstpt add mov add xchg sub jmp jle and clc sbb aam add xchg jnp aad sub jge ret dec test repz sbb lea sub dec xor xchg fisub jecxz mov add aas stc outsl mov testl sahf jmp mov dec ret xor rcr sbb pushf fidivr mov cli addr16 daa pop mov loop cmp inc rorl xchg (bad) xchg cs call nop xchg out mov (bad) cmp dec add scas add stc fistpl loop or bound mov sbb dec sub pusha and mov dec and jmp sub imul insl scas js repnz bound insb or stos xor pop aaa pushf frstor cld dec ss ss int add mov lods fldenv outsl call roll aad mov scas fdivrl dec inc addl inc jns mov (bad) push shll dec push pop ss adc jg mov push push das jb cmp mov test jne int3 bound (bad) pop in (bad) pop iret ja hlt lods jle out push flds fadd push push cmp sub push scas (bad) mov push xchg inc jnp and ds in sti sub ds (bad) jbe stos and mov dec mov fs cli push les push cmp lahf mov scas and ja xor push mov stos mov cmp mov cmp mov cmp mov pop jo nop add divl xor jbe jae push inc xchg sub cltd push aas int (bad) lahf test lret xchg xor (bad) mov jmp (bad) mov push push mov mov sbb mov add xchg scas in add jo push add pop xchg ds push or dec xchg mov jl xchg aas or addr16 sub mov or rep test and xchg push mov or out push mov push ds push cld mov sub ret cltd hlt scas mov in xchg adc xchg push dec cmp cmpl scas dec jmp or sbb movsl mov cmp xchg xor scas xchg inc pop int adc fsubr mov int mov pop pop inc pop fs nop adc lea dec das (bad) pop cs into jns in xchg add pop push insb ret adc cmpsl dec ljmp or cmp arpl inc sti dec jne mov lea pop pop sbb inc mov mov ljmp sahf call pop dec ret dec dec fiadd mov cmp mov clc pushf daa xorb pop mov push pusha cmp pushf pop xchg (bad) ficom aaa inc xor nop mov mov sub popa pop rolb shrb dec lock nop xor sub ja loopne mov lods loopne xor cmp lret mov aam daa jae dec xor inc movb mov mov jmp mov sub sub pop cli push outsb sbb mov lock ds scas lods ret pop push es int dec ret add dec loopne les dec or sbbl sarl inc nop or imul int jl xor inc mov addr16 lock mov es jae (bad) dec or rolb hlt lcall fldcw xor jno mov mov rol jne jg cmc dec mov lods test pop fisubl aas pop or cmpsb jmp dec mov fldcw mov pop and pop cli inc movsb lea add cmpb inc sub mov and jl int sahf incb mov scas ss and xchg aas pop movsb inc xchg or inc stos or popa add imul adc sbb das in dec ja sub xlat dec cmp sbb shlb push roll xchg pop repnz pop loopne (bad) push cmp out out mov push mov fistpll dec fstpt xchg loopne outsl fwait jne dec inc adc enter int3 stos lds cmp lods imul nop or les add sub mov sub lea clc stc (bad) out inc jne xor les or mov dec mov fisubl dec sbb inc inc push xadd jae push test in push inc (bad) dec addr16 sub addr16 jno test rorb daa pop icebp lock xchg mov pop (bad) dec les jmp (bad) or outsl pushf add (bad) pusha sbb adc gs lcall roll les sahf mov xchg ret fdivp or stos in in push jmp add jmp mov adc push dec lret dec sbb js push and ljmp xlat test and sub xchg xor xor inc call add cmp mov add stc (bad) dec (bad) shlb fsubr adc mov gs pop pusha aad das xlat sbb data16 or repz orl ds and cmpsl (bad) int3 inc mov push add adc stc mov andb push bound xlat inc lret cld adc push test or sbb pop push sbb or sbb cmp and out movhlps jae nop ret inc jle leave cltd rcrb sbb pop enter lock sbb imul push xor and inc fsubrs je push loope sbb (bad) lea (bad) jb fcmovb int3 adc fnstsw add add inc and add inc and stc jp sbb xor mov popf mov pop aas push jmp sub jns adc cmp (bad) xchg sub movsl sub xor aam sbb dec or out leave sbb out popa cmp popa jnp push sbb add and jne fisubrl rcrb iret xchg call fs ret jne dec add sub push cmp cmovnp dec lret cmp and dec pop add int push jb xor push pop das xchg xchg dec stos out add pop sub push loopne cwtl aaa out icebp sub inc cli xor ljmp inc test mov pop lds mov test sbb (bad) mov inc xor fwait repz pusha ficoml into or push jg mov adc mov test fwait jbe jecxz leave bound lods cmp ficomp ret mov add sub mov stos out sti xor inc mov mov mov xchg popf sbb xchg mov push push mov out dec or lret test pop (bad) into add sti pop cltd insb test dec xchg das inc or add jbe add leave mov out mov outsb push test push icebp out mov idivb sbb pushf fimul jae loopne sbb rolb jns sbb int3 data16 iret mov scas call jnp outsb xchg push push cmp ret cmp sahf nop cld adc dec ret mov mov inc or repz mov dec loopne inc add out imul fcompl cmp stc out pop test or inc stc data16 int3 lcall sub jle fbld push push cmp sbb mov cs (bad) mov jno loopne inc jae pop rol xchg adc pop and mov mov push (bad) and inc dec sub loop sub mov add loopne test pop jle es mov lret inc or pop sub lock cmpsb sbb iret xchg pushl cmp ret ljmp into jb test dec (bad) dec xchg (bad) push arpl dec cmc popf ja or push adc jecxz adc ficom cmp adc mov pcmpeqw sbb cmpsb enter jmp iret loop mov xchg sub lret test subl clc mov and icebp call pop add fisttpl lds mov mov add clc insl push or adc sbb jge cli popl inc loop pop xchg jae push lcall shll xor loope lock lds sub cltd push je xor push roll lahf shrb pop jle inc sbb lret sahf int (bad) jno (bad) pop je jecxz ret rolb clc into push stos mov in mov aad adc or pusha out dec sub xor inc data16 jnp sbb mov dec cmp push lret jge mov sub popa cmp mov mov lret jno stos inc or sbb popa mov xchg sub lds imul or ret shl jne in pop sahf and sbbl cmp cmp pop lock add mov pop movsb lds rolb sbb and push mov ja xchg daa mov orl mov cmp and ret cwtl aam push adc push xor sub inc xor add xchg sbb add cltd outsl sub lfs outsl (bad) ds or fisttp mov popa in (bad) cmp push adc push sbb xchg enter test scas jl or test pop out mull mov hlt (bad) xchg dec add adc sub adcl inc push xor test dec or pop or movsl dec xor mov mov mov jnp data16 orl mov enter inc and and xchg jnp dec mov sub scas repnz or test xchg xchg or (bad) lcall stos jge xor out push and mov inc cmp iret inc sub xchg push repnz cs xchg sub push push adc sub fcomi cmp in int mov ficompl lds push jg inc sbb add inc in mov int3 mov mov or inc (bad) not pushf shll xor sbb mov (bad) mov shll int and repz lret addr16 outsb pop xor movl sub rorl movb and es mov mov imul mov xchg inc and sub or or push pushf repz scas arpl cmpb and mov (bad) pop push xchg es push and dec mov out lret or jle call cwtl dec jmp mulb inc ret inc fistp dec cld pop pop add lock aaa shrl sub push in dec push mov cwtl pop push cli arpl jp (bad) pop sub add aas (bad) idivb xlat dec push xor adc cmp imul pop inc imul mov sti add jbe inc or pop lea imul sbb jl sbb not out push and mov pop inc loopne add jo adc sbb dec push aas lret in pop inc mov xor fs dec (bad) cmp push ret pop lods mov push in test (bad) push mov inc negl fwait repnz icebp xor out push data16 fwait pushf fadd inc shll push test cmp int3 add dec popf hlt sub xor bound sbb jmp pop sub inc cmpsl pop sbb icebp mov mov (bad) ret lock int jl xor mov loope pop loopne dec roll dec arpl and push dec int3 aas lcall xchg or je ret dec lds jmp jno inc repnz jl or xor call rorb jge dec inc xor stc add or js stc add int3 xchg jo ret jae xor inc add adcl sbb adc inc inc aas test imul sub lds stc out lock cmpsl vunpckhps enter ret or popa and dec fxch out lods fisubl in in ret call (bad) and leave jl das leave in mov mov jne outsl out inc cmp jns adc mov lea or sbb mov in dec xor dec cs aaa fisttpl test test jns lock std mov fst inc xchg movsb ror push adc fs out aas sub cmpl (bad) ret out fiaddl (bad) dec testl fisttpl stos dec mov push push jmp dec fbld push mov and (bad) dec mov dec (bad) in adc sub inc stos xor test adc aaa xor add mov lret xadd mov mov fwait sbb xor aas (bad) dec insl sub add pop (bad) ja movsl lods add and dec xchg add add outsb stc dec adc shr inc push fwait xchg rclb inc lods shl pusha nop aad push add scas jo jnp and loop dec or outsb sbb add flds js jl ret das cmp movsb xchg jo inc or xchg inc fs mov clc sub mov dec cmp in aas in dec lea repz cltd test push out scas les pop inc mov inc shrl mov inc sub and push pop je cmpsb in aad fs xchg pusha jb insb imul push push addr16 sti xchg dec push and mov sbb xor add push (bad) push sub iret loop es sbb js or imul mov or push jmp andl xchg gs sub xchg cmp lret lret adc in inc pop cmp or sbb cld aad mov push mov daa sub jle cltd add cli and jmp mov mov (bad) xor imul mov ret pop in push add sbb icebp xchg sub out imul ret lds lock leave enter jmp pop (bad) mov dec sarl push sbb mov mov fdivs and shrb inc push inc push ds cltd in test cwtl sbb mov push add dec or or add pop dec adc int outsb and insl test jae sbb test enter push ret popf push lea push xchg and dec stc pop sub adc dec jmp mov pop and jne adc (bad) pushf sbb mov adc outsl add dec cld sub fadds sahf mov pop mov lret sub xor dec stc das add pop add js pop fimull and movsl or (bad) es dec adc jecxz inc jmp or cwtl jp aaa outsb mov sbb jg cld inc xor mov test data16 inc ja out mov adc dec data16 dec (bad) faddp scas sbb dec mov js lods sub arpl addl leave mov ret jbe pop leave inc mov arpl and jg aad pop xchg jge dec adc pop push inc cs not jnp nop pop xchg cltd fwait add ds inc dec sar push and repz in cmp dec nop pop scas or push jbe push jb xor (bad) leave repnz pop add mov cmp (bad) (bad) jae push rol fcoml jp movsb mov or inc mov adc pop inc xlat mov aas inc dec lret sti fidiv in scas lock cs mov push out and repnz dec insb sti push sub xor aam dec mov or jl sub jnp movsl mov lods ret xchg roll push pop dec or or fnstsw iret inc (bad) (bad) xor sbb cmp bound sbb iret mov cmp icebp fwait inc pop inc push inc jbe xchg push pop pusha mov outsb add push and ljmp or add jle cmp pop pop mov xchg sub ss xchg outsb mov cmp dec sarl aaa fisttpll jno (bad) xor inc adc es cmp ror cmp mov xchg push cmp xor bnd das fimul sub test in mov stos push jns inc aad cs ret (bad) jl jl aas dec bound sbb pop aam rol inc mov jle push (bad) cmpsl lock pop out push mov and iret mov sarb arpl leave xchg stc call movsl stos cmp mov xor inc and pop hlt lret call mov xchg jle aas insl aam lea pop dec loop dec sub cltd dec xchg test sub (bad) jo ds inc cli jns pop pop sti fcomp cmp ds js inc adc mov xchg xchg mov dec xor mov cld jbe jge add fsubrl push mov sub sahf out push std sahf jmp insl cmp inc add lretw imul dec pop dec iret inc scas push enter fiadd sbb mov jnp,pn mov inc add and sub mov pop pop mov aaa out je rclb fdivrl jbe inc rcrl inc fdiv or sbb ljmp data16 mov jg push push sbb inc ss je ss rcrl les stc imul int3 jae push xchg jae inc bound inc es out mov lea mov in scas pushf fist ja pushf in or inc push add lods pop pop mov sbb mov add adc mov add pop xchg jns mov mov mov ret fisubrl cli cwtl or in rcrb xor clc sbb jp pop lds push add mov jno mov test xor push xorl or incb inc fwait jecxz push data16 push push xchg int stos icebp and sti ds or outsb out jno aam sbb dec add jb add pop xchg push dec cld xlat (bad) iret mov clc popa orl scas mov push je rcl mov inc mov test loop lods int3 out (bad) lret mov and cli add fnstcw and and dec mov imul cs jnp ljmp inc mov cmc outsb out out mov mov xchg daa push leave jle xchg adc clc push add sbb adc loop jno inc jl inc repnz subl fistpl mov or jg xchg inc jmp dec push jg and inc and ss adc dec push insl scas mov (bad) or and adc lret movsb fstps mov dec test mov adc mov lfs ret xchg clc add (bad) mov or js pop xor xchg mov jge inc lods pusha inc cmc sbbl aad xor xor pop movsb fcomip cmc ret push out pop insb push dec jns inc mov lea push gs sub inc mov out pop (bad) sub pop xor movd inc out gs xchg aas iret loopne and outsb orl sbbb lods dec lock mov ds pop imul add mov imul inc adc in lcall (bad) rorl sbb or into pop fwait out cmpsb aad mov pop inc mov sub rcl out fistpl xorl pop inc or cmp push call add fdivrl xchg xchg mov movsb sti mov movsb movl inc add fimul or dec inc rcll js popf icebp mov dec iret insb push xlat dec (bad) psubw or in inc ret int inc les ret adc scas jecxz inc push pop cmc aam ror inc in xchg jb test and (bad) mov mov add add scas idivl int3 push add ds pop sub les ret mov repz or add dec adc mov dec es inc lods add xor and lock or or pushf in sbb mov (bad) inc lahf sti sub sbb jbe pop ja mov (bad) and lret sarb mov jl sbb mov dec fildl rorl mov lea pusha xchg ljmp rol sahf fcomps cmp push gs outsb mov sub lret cmp or (bad) out xchg jne es sarl mov (bad) adc int jo lret jmp push mov and les (bad) xlat add test pop leave jbe dec (bad) mov shlb ret xchg (bad) cmp dec hlt lea call js inc jle mov scas cmp cwtl call adc inc dec pop ret shlb and test push jp push sub push imul subl push scas orl (bad) sarl push or push xlat jae adc leave or cmp insb (bad) lret cmp push jg dec pop push bound or rcrl inc rorl push inc fcmove pop push in test fisub mov and sbb pop adc jb insb sbb cli fs xchg push in xlat inc adc hlt imul add xadd scas mov and xor or cmpl (bad) inc shlb in imul jns insl ret fwait lods xchg dec stos in int add dec (bad) xchg pop add mov mov movsb push sbb out xchg test jns mov pop and add pop adc in xlat incb data16 rcll mov mov inc shrl rcll in fnstsw sbbl test xor pop push push icebp movsb and cmp ljmp jg mov (bad) xor jle ja pop adc or sub daa (bad) pop xchg test inc and inc dec mov loop sub push add mov rolb cmp js push xchg jns pop xchg pop and faddp mov test xchg (bad) and inc cmp aam cmp pop sub pop dec js lret fidivr and lds lret jno insl mov adc jo out and inc push sub pop fisttpl and cltd xor adc and repnz xor out out and repnz (bad) jno out cmc into and or mov jecxz shlb movsl pop in imul or rolb scas shlb in in imul cs pusha and lds xor jae leave cmpsb xor cmp (bad) lcall jno jle sbb adc inc jle adc sbb inc jle or add inc jle add or inc jle jns jb jno jle jno jp jno jle imul jle popa xchg jno jle pop mov jno jle push xchg pop push jno jle dec sahf inc pop jno jle inc cmpsb dec fs and sub cmp xor xor cmp lret scas dec imul dec imul inc push dec xor inc jecxz xchg sbb iret or adc dec mov pop push stos pop pushf push xchg out in jno mov sub pop les adc mov roll mov pushf out es add fsubr jg int push popa jl mov xchg or je stos int ja cs adc into cmp incl fcmovnb outsl mov (bad) cmp push mov andb push push dec dec cmp inc loopne mov push push mov mov push popa push mov push fimull mov aad fisttpll cs leave push mov aaa mov push mov cmp inc rcr lds test dec mov test push push inc and sbb int mov sbbl popa les pop dec outsl call push icebp mov or add push adc popa push push jb loopne fwait dec add adc pop inc leave mov adc mov add push and xchg (bad) push push jo push pop cmp or sbb dec insb shrb or adc mov rcll sbbl xor popa mov cmp push mov hlt push inc into mov jmp rorl mov test inc mov cmp hlt adc add fsubl inc call add mov cld arpl fild rorl mov xor sarb push gs jle push in insl mov ret insl add popf loopne push (bad) mov cmp bound jp adc mov xchg sbb fbld mov ds fdivrs push and xchg push pop mov jg push sbb or push pop fsub push inc roll xor mov and dec mov mov xor out imul jecxz aaa adc les gs stc jle cmp inc repnz das inc movsl sahf dec ret (bad) add mov mov inc into aas (bad) mov inc sbb inc pop rorb out lea sub (bad) dec inc inc int or dec (bad) mov xor add cmp jg push cmp enter xor lea sub mov gs mov pop adc cld iret add (bad) or inc cltd cmp jle xchg or jp imul inc cmpsb inc pop jg lods cwtl lret dec sub sbb push cmp stos pop fistl andl dec js test xchg std lret roll fidivr xchg jl sbb mov imul test mov add in lock jge,pt pop xchg cli int3 test pop fstpl sti dec fistl fwait int push adc sti out inc sub cs call int lahf or fiadd ror xchg inc sbb stc leave leave jbe pop inc (bad) mov hlt cltd sub push sbb addb jb pop popa outsl sbbb mov int3 mov out inc iret dec add xchg lret jnp mov lcall xor cmp push outsb or push push (bad) ss iret js jne les cmp xlat jbe out mov lea in sub lcall jno mov mov and lods sub push in lcall icebp popf scas and mov inc xchg cmp ja mov call push nop push icebp cli push cmpsl fiadd aaa lock scas js inc mov lock jno mov into jge push xchg pop cmpps mov inc dec js mov fiadd push dec pop sub ljmp push or stos add andl fcomps repnz lods addr16 ds subl in and out out rorb cli mov mov and icebp cmp incl add (bad) call cmc xorl add insb push or incb adc dec mov in mov les icebp fwait pusha ljmp add sarl out push lds mov lcall push xchg xchg mov lret mov add push adc mov rorl inc bound and pop or mov mov adc scas mov sub mov cmp leave jmp dec outsb inc sub or pop or cmpsb addb xchg movsl cmpsl stos leave jmp outsb or addr16 pop sahf ror fisubl aaa jle pop cwtl in xchg pop sub sbb test sti push mov push inc add xchg mov dec dec pop (bad) faddl cwtl daa pop and adc sub ret in in jge les jmp es mov cmp jmp pop outsb pop repnz push push sbb ss xor pop popa iret ljmp movb push dec pop xchg jnp popa pop ss pop jge leave (bad) mov dec xchg inc and subl sbb xchg sbb mov push mov jge stos leave sub push xchg push or mov or dec jmp je imul adc jge js fdiv push and mov lods adc frstor and dec push inc cmc out into inc lea add pop dec add sbb cmp inc xchg loope dec add popa lods in add jmp lds ja dec inc dec sub and pop jne push inc enter cmp inc div or mov repz clc inc sbb imul hlt (bad) mov aaa enter fnstenv pushf loopne inc call push dec push mov inc inc inc or xchg stos sub cmp xchg push adc push imul enter js push repnz mov pop sbb mov pop les div mov pushl jmp add xchg push aas lret int or mov or repnz stc lds sub sbb addr16 inc mov cmpsl jp imul cwtl push push loop cmp inc sbb sbb sub stos mov mov scas inc xor adc mov stc vmovdqa cli (bad) cmp jl sbb push movsl add fsubl inc add adc push sub mov mov dec lret sbb push fbld push lret das loop xlat pop pop mov pop sub mov jae das and lea adc push daa push out idivl je roll mov insb add ret lock inc stc add repz mov aas movsl ss and out pop movsb lods je sbb inc jb rcl in or inc fsubrs inc fxch sbb dec pop mov add mov push gs inc cmp sbb movsb sbb (bad) fbld add and mov aaa push pop out cmp sub xor lock mov jne mov mov dec jle imul jb jns fidivr dec and add decb jno xlat popf (bad) fisubrl mov push dec stc mov mov (bad) jmp mov push ret or adc into push add cmp (bad) mov xchg or dec out daa lret pop ljmp sbbl xchg pop lret inc lcall bound xchg jg cmp sahf lock test add imul xchg adc add cmp inc movsl dec mov xchg in xchg pop mov jo inc cs insl cmp xor ljmp mov cmp xchg pop dec lods inc lret pop xlat sti scas mov gs cmp es jge jbe or add nop sahf (bad) insl movsb ficoml pop out ds cmpsb cmp cli add (bad) mov xor iret add ds cmp (bad) aam in scas in test jne inc aas jbe mov in push jae jo clc in push int (bad) mov fwait jno fistl mov push adc aaa and adc pusha jns (bad) mov mov call outsb ficom ret mov mov movsb pop xor xchg xor in daa mov xchg lea pop adc orl and (bad) mov into lcall inc jae adc mov xchg je fildl mov movsb jp push xchg sbbl add cs jl mov rcll mov ja add sub and testl stos jmp (bad) xor leave outsb push lret (bad) and mov mov popa pop lret (bad) xor aaa adc cwtl mov inc stos sub test mov outsl in das outsb dec fdivl iret mov dec pop sbb ret push mov movsl jbe ror je push mov cmp enter jmp or jecxz sbb gs (bad) insb cltd loop push insl mov movsl add push (bad) mov xchg clc pop imul pop sti fcmovnbe icebp mov xchg cs ljmp jl inc cs outsb mov in ret lret stos lds add sub push cmp push add push cs mov int ds icebp (bad) mov push and adc pop (bad) jge mov adc cmp dec (bad) mov sub xor xchg mov jo mov in inc or and sub sub xchg or clc mov ds dec add and xlat jg cmp clc dec aaa mov ret stos fsts ja ret dec insb and inc cmp mov movsl xor sub xchg mov testb repz idivb pop fnop jae and mov lcall jmp sbb mov cli dec add inc out ret sbb rorb and jecxz loopne lahf dec aad mov push andps add adc (bad) jae jnp pop add push lods pop test pop sub ret mov mov (bad) rcr push out inc into insl inc fyl2x xchg mov and mov fisttpll or inc in popf or shlb repz pop mov (bad) (bad) lret push lds dec ficompl lcall or (bad) lahf test lahf mov push mov sub popa mov or add cmc dec add lods xchg xlat rep add xchg sbb (bad) adc sar or les in js jle mov push (bad) repz loopne inc pushl test push outsb sahf xor in jb shrl inc mov inc sahf xchg in nop in data16 ret sbb clc xchg sahf inc out lret (bad) jno lods cmp (bad) push add push push test sbb daa sbb cmp repnz jnp jno mov dec call or pop les cs mov dec xchg sbb mov dec and les xor inc push add jno movsb dec pop call mov push push push fdivl scas xchg mov or jmp addb sbb std jno in mov dec adc mov (bad) (bad) jnp je mov or ret push (bad) xchg test sbb andl dec iret dec lock (bad) pop in (bad) ja dec lret in cli push ljmp inc and xchg and inc lret jo xor cmp sub add mov ret mov jbe cmp (bad) movsl mov xor xchg cmp into repz dec rcll push adc popa sti adc jbe xchg mov sub ror jg mov jae mov mov lds inc mov dec inc sar insl sub push and (bad) jle cmp inc into leave add out outsl sbb mov icebp mov mov inc mov xor xor test jno fisttpl add das fimull repz fnsave adc out add cmp ror fwait and dec (bad) jle loopne inc push leave mov jge rorb push aam fcomps dec cmp add push jne rcl fidivrl ret dec dec jae mov rcll aam cli cmp mov cmpsb mov imul shr stos pop xor shl xchg xchg pop or daa inc jae dec inc sub jne and mov add lcall fadd rolb into inc or sbb ret cmp mov ja les enter mov and jo cmp dec std xchg jae pop push fistl popa roll cli sub in pop jnp sbb rcll fcos ret imulb es xor and pop icebp jle mov (bad) enter aam push inc stc nop push xor sbb sbb cmp mov hlt xor fs inc push fisttp faddl (bad) sbb dec dec mov ja pop mov or clc cs clc subl repz repz int3 loop lret mov add pusha int leave divb xchg xchg (bad) jnp aam and jmp pop fldl2e mov in sbb mov mov jns decb aam out jno loope pushw push (bad) jno test das xchg mov les jecxz test sahf popf cltd scas fwait dec pop adc popa push or mov shrb sahf mov int mov sbb xor jo in mov add and cvtpi2ps fisttp jle push mov lret cli push mov test rol dec mov lods ret inc cmpsb ss xchg xor push aad jl out leave inc rol pop (bad) test mov fstpl add adc adc movsb dec movl ss mov pop xchg leave (bad) add add inc adc leave and cmc inc jl into dec je ret sti adc push es scas enter ret sub inc push dec sbb test push adc fcmovnu inc lods loope inc add mov insl ljmp sbb pusha push in and push push sub daa je pop jg in andl mov xchg mov bound or jnp lret xchg xor push sahf imul in ret inc pop out mov cmp mov andps movsb bound data16 mov sbb testl rol ss (bad) adc mov push lods stos xor gs lods (bad) movsl xchg or sbb insb sub push jno pop (bad) aam loopne jb jnp xchg ja dec or mov xchg adc sbb aad shrb fistpl ljmp addb inc cmp out xchg fildl stos mov push sbb pop cli int cmp inc inc test cmpsb cltd popa cmp outsl xor fdiv movb push flds dec pop push mov xlat andb push inc or pusha js xchg roll push cmp xchg loopne fdivs scas repnz xor hlt ret pop roll xor gs push adc insl adc ss subl push or (bad) sar rcl push ret outsl les xor pop (bad) rol subl and xchg sub sbbl mov lcall sarb shlb sbb sbb sbb arpl inc sub jns mov sub pop jbe inc insl pop outsb cli mov push xchg adc push add pop sub push jmp je inc je sarl stos std aas and out dec cmpl stos test xor imul iret cltd sti imul mov push das dec icebp scas iret ret movsb not inc adc dec cmpsb xor cmc lods out or jns out or mov dec out fcoms adc aas gs sar testb mov es movb adc add dec notl cmpl in fiaddl xor push fsubl add rorb mov inc or pop sbbl dec les mov fcoms mov test or mov out push pop xchg inc add jmp mov xchg das js (bad) dec faddl push add add inc and mov iret jl loopne jb dec push push stos stos xor inc pop add or cli popf push add push clc pop jno mov gs inc mov (bad) sub ja mov cs scas xchg lret jnp (bad) mov inc int3 ret pop add push or xor stc into imul jbe daa add mov test xor inc xor test jbe fnsave icebp jbe jb inc aas inc mov push mov dec in rcr sbb outsl scas test stos imulb sub sti aas mov pop mov aaa mov cwtl lea dec dec leave sbb cmp cmp jge cmpsb fiaddl dec jl pop inc cmp cmp aam (bad) (bad) int test lds sbbb mov pop push mov vpsubusw push hlt jno sub lods inc sub sub test inc jp fisubr es push dec (bad) pop or lret add inc lock add pop shrl lods pmaxub cmc mov scas dec repz cmp pop lret mov (bad) or cmp fadds inc ret or pop stc xchg test jg mov inc dec dec fs fs xchg test in iret inc (bad) ljmp cld por sub mov add inc xchg or sbb pushf dec (bad) sbb subb inc lods and push insl outsb fwait dec sbb dec jl adc add dec aaa xchg ret enter inc test inc cs (bad) mov ret push jp sbb lahf aas add adc jnp xchg ret enter fldcw dec imul jmp push (bad) shrl and pop xchg sti push ret idivl or push movsl push iret into (bad) or fisttpll cmpl dec or hlt push xchg dec in mov insl xor xchg mov xor pop mov pop add popa cmp cmp or lret push out mov sbb in pop cli adc inc jbe sbb jecxz rcrb lods mov das mov je ret push dec enter adc push sub (bad) xor loop outsl scas mov mov fs mov lcall pop pop xor mov inc lahf dec test ret addr16 cmpb dec add mov jno pusha inc mov pop test pop mov ljmp rcrl aas inc sti (bad) jl imul sbb das aam adc aad roll adc push sbb int add add push push lcall or mov mov lret push jl add in dec jecxz push dec aam outsl aam out test inc dec jle mov movsl add enter pop add dec bound dec inc js ficomp scas test lcall rcll xchg into mov xchg mov add sbb pop jp jae xor pop gs inc aaa and std and inc dec xor push dec ret in push icebp inc xchg wrmsr jmp dec cmp test gs inc or push add rcll cmp jb xor (bad) adc imul sbb mov dec push inc or gs or mov inc lods ss into jle loopne jo xor add pavgw inc sub test mov xchg jb cmp dec xchg movsl (bad) sub int3 inc mov or cltd pop push sbb mov pop (bad) sub adc fwait cmp sti gs mov shlb ret and adc cmp xor ds jne insl pop push pop mov cld sahf jge flds lret xlat inc ja pushl mov popf out push jne ss xchg cmp xor cmp cmp xor push out xchg jmp cmp push pop cmc sbb mov jnp data16 pop xchg cmp inc push pushf std and dec ja inc mov sbb lahf add inc mov cmp mov dec in or out mov xor loopne xlat pop (bad) les pop mov repz iret fmull pop inc in dec xor pop and stc and fcmovb sub inc int gs lret or (bad) lret popa push push shrl add iret js pslld pop iret mov fs add adcb into sub adc or add div out add les mov lock and mov stc sub xchg mov loop add push add jg and push pop pop xchg push add xchg pop popl add add cmpsl es sahf and xchg fldcw fnsave sbb sub sahf xor or repnz push inc jecxz arpl mov iret into xor cmovl ja inc andb and sub mov cld adc add push aad fwait (bad) int test jp xchg aaa lods nop mov and ret adc push xchg lods cmpsb push adc imul and push mov adc mov jp inc shrb lds rorl in popf adc adc adc and test std cmp scas push xchg pop cltd mov enter sahf je popf rorl stos mov dec and mov rol xor leave push xlat out add jbe mov mov adc daa (bad) xlat dec (bad) aaa rcll movsl mov mov sbb into xlat mov add shll in (bad) (bad) sbb movsb xchg repnz std cmp adc jb pop xor jb (bad) push ficom push push roll dec pusha scas ret fiaddl inc ret test or sahf pop jl sub lods mov jle test fwait out sub dec js xchg fmull loopne scas ja mov pop fiadd inc jne lret xchg push adc lret xchg xor sbb push rorl arpl stc adc cltd ljmp fadds rolb clc sbb fnstsw xchg push inc inc dec xchg mov and or sbb orl pop mov les pop push xorl pop sbb or lea in sbb push lret iret repz and iret ret adc popf mov lock lret or idiv mov jno sbb ret push cld je imul mov dec movl stos je pop adc inc jecxz (bad) push out stos mov cmc add mov push pop push pop sbb and sbb jmp out push jmp mov lds (bad) lcall mov xor jmp adc test jecxz sub lea into rorl pop xchg sub ror sbb lret inc xlat jecxz les dec jo dec pop adc pop mov xchg scas pop xchg mov pusha and jge mov movsb inc mov out out imull dec xchg mov xor pop push jne and pop and or dec loopne add inc mov ret sarl mov mov push add jmp aaa popf ret dec js inc add addl mov int3 pushf test push push sub test fstps mov cmpsl or lcall push mov movl xchg insb adc jle and mov sub jl out xchg cmp hlt lcall push gs lods call test mov icebp cmp sub or and mov pop xor cmp push inc sahf pop mov xchg add test mov pop jg cmp push sbb in inc insl mov jns ds (bad) mov xor aas xchg push push pop inc bound dec xchg stc ja push mov mov imul add test push xchg xor dec jg jle insb adc rorl dec inc lret inc jg inc inc (bad) push and cmp js ret dec (bad) jmp pop inc dec cmp int3 add mov jp mov (bad) aam mov push or aas jbe push rcl inc ret sub sub xchg xor sub push mov pusha addr16 pop or cs lods mov xchg pop ror out out aam bound movsb les test add adc sbb sbb adc rcrb pop ret ljmp (bad) mov mov xchg lea mov push xchg je leave jno mov xchg bound or int3 movl fs lods and fdecstp pop xchg push pushf gs aas int3 ret mov stos pop incb lret inc cmp xchg out pop or in sbb push push pop mov push mov pushf shll cld sahf mov inc sbb cmpsl add lahf dec jge push add add stos pop jp dec addr16 mov fs push push sbb xor je sub mov enter jmp jmp mov imul jmp jbe jmp jbe rorl cli adc ds scas sar into scas aam fsubrs jbe or ljmp add adc stos cmp imul jp pop jp and bound jmp aam clc into adc xchg inc inc add into imul cmpl int jl rclb mov sbb xchg pop cmp lea cmpsl cltd cli sbb lahf (bad) push test inc movsl push or adc sub into jae mov push inc add lds rcr loopne push and inc add sbb sub in add inc call (bad) loop push sbb push push rcll stos xchg inc out pop dec pop into adc stc sarb dec fdivp dec and fstps jo enter in cs push add add lods add outsb mov lea aad into fstpl adc xor push mov movsl sbb jne dec inc mov int3 cmpsb sub pop movsl inc mov in jecxz ja ret jp push cmc ret jne pop sub adc dec jb fisttp (bad) mov mov sub inc clc aam lret adc cwtl popf in pop xchg mov push mov mov mov icebp fisttp fwait gs repnz push outsl ds cmp adc js mov dec mov daa (bad) lock inc fwait and sbb dec mov rorb fucomi cmp test add bound nop dec dec mov fmuls sub lock (bad) movsl mov xchg dec adc ret sub dec add mov cmp sbb ss mov hlt jb out arpl movsb pop push cmp cmp add lahf adc lcall add imul rcrb leave sbb jno push gs jge push xchg sbb adc sahf inc outsl fwait sbb adcl jb push xchg mov or lods add (bad) cmc adcb push sbb cmp outsb pop add sbb push ss or clc cmp shl stos ja (bad) into aad sbb lret push or nop insb lods push imul push inc mov enter mov rorl jl and add test ja aam adc loopne inc mov and les mov notl add or lret mov icebp sbb rorb xchg push loop clc adc ret cmp xlat or pop xor mov in sub push dec mov push xchg cltd sbb cli push rcll add mov and aas or dec and push mov inc or outsb and xchg ret sbb cmc call movsl pop stos and push out push cwtl or test inc mov test data16 add pop adc xchg das fs push cmp lock data16 push imul (bad) data16 cltd dec xor scas add les push or jle add pop pop test popa mov push push add cltd push pop sub addr16 addr16 sbb xchg into pushf dec adc push push inc outsl push and insl xchg add dec rcrl inc lret jne pusha aas sub mov pop add std xchg mov cld into nop mov pop in adc call sub adc ficomp xor or mov out mov push loop adc cmpsb and sbb stos lret pop xor inc adc inc push jno add out add dec sbb jle inc scas pop mov inc aam mov push pop (bad) mov xchg push mov cld shlb sbb add jo sarb sbb pop mov jg (bad) out xchg add out cltd add sbb pop loopne test in xchg add mov sub xchg mov add lea pop sti iret push insl outsl sbb das jg pop andl (bad) insl shll sub in cmp or jmp mov jge js icebp dec addr16 je cmc pop in test mov gs add repnz test dec or mov mov loopne jl call test scas pop push cmp xlat mov mov add dec sub ljmp push rorb xchg testl in jbe arpl cmpsl aaa add arpl jl xor gs mov mov dec cmp cmp out or movsb xchg cmp cmp dec cmp jnp jl or into lods mov dec dec xchg and sub pop jl pop mov adc push jl inc ds and mov dec int3 dec jne in jns ljmp push fs mov pushf jo rol ret jp scas out push cmpsl je cltd scas je (bad) aaa pop icebp repnz or inc xchg lods fild fist cltd pop cmp xchg and xchg push int mov idiv cwtl fcomps arpl cwtl in inc aas mov jmp cs popf bound inc leave orl push mov push mov sub clc sbb data16 inc es sti push dec mov mov (bad) dec mov inc das push adc inc push dec xchg jae call in inc jno sbb addl iret in mov call enter mov loop dec mov test pop (bad) pminsw xor jbe add dec push imul pop or jg jg ljmp adc jno sub cmpl jp std dec mov add mov rdtsc leave pop push add (bad) cmc mov jns or mov add into out sbb adc mov jbe xor imul inc mov popf call pop jb test aas pop xor dec ss push dec (bad) cmc lahf mov jle push fldenv sbb cmp or daa mov es xchg into les (bad) test add xor or lods add insl sub mov push mov scas xchg inc leave (bad) int sub xor xchg sub inc inc xchg or dec fistpl and lea rol out call enter sub pusha jl push imul sub lahf and sbb or mov or mov inc mov dec (bad) int aas lret rcrl roll scas dec pop push xor lds cmp lods cmpl in sub mov (bad) xchg and adc lods cmpsl inc fwait mov scas jb add adc lods pop push daa dec popf push push jmp lods push adc push or push cltd jle push jl mov adc imul aas imulb aad es dec inc bnd testb sub inc push xor pop push ja inc xchg cmc ret jne ror xchg pop mov mov fldenv cmp push mov xor (bad) dec sbb imul mov out cmp xchg adc xchg mov add pop pop inc or sbb push das or fwait mov xor mov fisttp loopne inc call mov jae push or sbb mov inc stc movd icebp ret sbb (bad) les daa les xchg lods xor loopne scas popf mov jo xorl mov push push xchg jecxz (bad) into xchg inc scas lcall push xchg test negb fiadd test xchg sub adc testb sarl xchg aas sub outsl sbb insb mov inc lea add fbstp rolb das pop or test xchg adc les in dec data16 (bad) adc add movb into insb mov stos andl das jg cmp inc sbbb (bad) into jne dec repz insb jnp pop push jnp sbb add fs iret subb sub push ret add jbe dec ret stc movsl iret sbb jmp jp aad scas or mov insb cmc rorl push xchg mov inc stos std lods (bad) rcrb enter imul incb jno loop rcrb dec in iret jnp sub movsb rorl stos (bad) pushf mov daa outsl call sub or stos lahf lods adc loopne pop int sbb or int test test sbb bound push push push mov addb maskmovq fwait jns mov es inc mov jle add mov pop iret imul outsb faddl in push (bad) insl or movsb shll xchg xchg idivl lods test sub push and rcrb sub pushf iret loopne cmp outsb and and ret ror test mov lods (bad) imul adc mov mov repz push je inc mov push xchg pusha dec or lret into out lret cmpsb adc ss (bad) (bad) stos mov adc sub inc imul jnp mov and ss inc aad add adc xchg sbb (bad) xor add mov or jns xor add cmc pushw pop fs mov dec (bad) les into out dec int3 and (bad) xlat out fimull mov or and adc rol nop clc or lods (bad) lods mov dec sub and mov sbb mov and xchg nop dec ljmp repz into scas push or add pop push dec or or rorl into pop xorl mov mov mov fs out nop leave adc call xchg jmp es cmp mov cmp mov dec ret xchg lea test fld push dec dec jg jmp mov rclb or cmp push (bad) xor in cmpsb inc or or insb imul xlat sbb in cmpsb hlt push imul inc in inc shll jge fsts cmpsl dec mov mov push sub xor mov stos pop inc jmp dec mov (bad) outsl cmc dec xor adc pop xlat add out fimul xor dec pop test popf ds in or pop mov push sub adc mov push push lds adc cmp sbb inc pop push xchg jecxz movsb cmp clc mov bound adc dec pop lods push lock call push push ret sub dec sub or jbe sbb dec movsl sbb dec or in add test in sti fwait xchg jmp sahf mov push mov dec and cmp add ss ret jb jno xchg ret xchg aam stos ja adc mov sbb (bad) inc cmpb pop cmp movl pop cmp repnz lret insl dec pop shr test dec dec pop rcll add add in aas cld enter js,pt addr16 das mov dec xchg test pop mov aam sbb add and cmp adc mov and out popa test or or js gs daa cmp jae dec fstpl add pop pop xlat andl loope rcrb inc dec sub inc mov dec inc outsl inc push pusha ss dec jge das sbb inc stos (bad) loopne lds dec mov mov push pushf mov sbb sbb cmp sbb push xchg sub push into jo mov and and xchg (bad) sbb pop mov jg into test mov xchg adc dec inc mov mov aam pop lret xchg (bad) and addr16 (bad) hlt sti mov lahf js mov inc (bad) or mov xor jne mull ds push cli ds xchg ds iret enter adcb lds (bad) lret jecxz inc dec je jb (bad) imul push dec ja,pt mov inc adc sbb cwtl xchg sbb in jne dec push adc sub (bad) mov jno mov iret and dec pop xor in adc aad jmp inc sub adc fiadd mov dec lcall inc jmp pop fsts insl and js addl add mov mov xor and scas inc add outsb xor lea outsl out sbb imul add inc pusha add inc sbb mov pop xor jbe out push (bad) aaa pop fstp jmp adc (bad) push or inc fwait mov dec cltd add insb add adc incl adc data16 dec orb add mov cmp pusha lds push fstps jecxz les lds adc inc jbe outsb pop pop jge cmp dec pop dec dec add in lret out mov push pop dec pusha bound idivb insb and push or aam or push adc (bad) cmp jns lds mov push push cmp add movsb sub lock cmp lea int outsb xor add mov ss lea lret js fmull push push mov push iret lret sahf andb test adc pop mov fsubs push dec outsb sbb fdecstp fldenv jmp xchg aas push sbb and mov ret add jbe mov cmp inc adc mov mov repz jge lcall jp bound sub jns jge subl rcrl pop ds setae les lods or dec mov fdivrl dec mov mov nop mov dec imul test cmpsb adc mov iret cltd or les xchg and aaa lcall icebp insb int3 inc inc mov rclb bound jo pop outsb fnsave xor xchg sub outsl inc (bad) xchg push in int ds je inc in aad lahf test add add or push pusha outsb adc in inc jb data16 inc adc roll xor int3 jecxz xchg inc js mov nop xchg mov dec (bad) sti jg xor mov xor jb jl xchg add and inc dec inc lea or xchg mov mov push fisubrl pop mov test aad sti sub aad xchg xor or mov in add mov cmp sub lret inc inc out nop pop cmp les (bad) adc push fsubl push inc or xchg jae test sarl (bad) mov and subl cli daa gs dec stos ss jb insl loope push out pop or cmpsl sub dec inc fnstenv pop mov sbb and movl inc test dec loope popa and dec dec sbb push mov lret loope cld xchg jecxz ret bound testl jp leave insl mov in pop add ja sub mov pop out stos std adc int and loope sub loope dec sub popa jae loopne mov push sbb pop sti adc in push dec push scas sbb mov dec jg addr16 notb leave cmp ret inc add es test xchg loopne add push xor movsb mov pusha aaa pop movsl xchg dec dec push xor out adc mov mov pop push pop rorl lcall sbb mov lret (bad) ss or lret or and bound xchg gs inc ss or dec stos (bad) dec insb ja pusha (bad) push xor cmp mov fidivr xchg jmp hlt or adc dec and push push sbb push into sbb or pop adc add push divl xchg bound xchg cld push jmp dec lcall fstp rorb adc xchg xor stc rcrb and or mov adc dec inc ret jmp mov subl lock lret jecxz or xchg rol popf mov push mov cmpsb mov ja sub dec adc repnz (bad) aaa cmpsb (bad) adc leave (bad) and lea in (bad) lock adc mov sar mov js adc scas jle inc dec inc dec mov lods (bad) les xchg pop movsl jbe outsl or mov mov jmp mov mov dec dec mov dec mov pusha mov dec sbb sbb out xadd jmp subl mov das aaa (bad) dec xchg pop xor fistpll dec dec fisub in and or jo je xchg push jg,pn mov cld cmp and mov jl decb mov addr16 or gs push adc shr dec leave adc js sbb sbb arpl lods xlat cmp inc pop repnz pop xchg sbb adc pop lock (bad) hlt mov mov sbb add mov mov mov sub push loop dec incl shr lahf dec and sbb (bad) jp push add xchg adc popf pop push out inc dec adc inc icebp nop cmp mov cwtl mov stos adc fnop dec sar call jge fldenv fild add jns (bad) push aad outsb inc mov fs mov fs std pop les lods push stos daa mov cli mov mov cli fnstsw dec sbb loopne (bad) sbb or and cld inc orl push mov inc add sbb dec lret sbb insl adc push sbb push das pop push out or lea add xor call clc cmp out inc or (bad) mov mull and xor test leave popf repz add hlt mov push mov mov (bad) ja dec aaa or aas int insl ss adc daa push inc mov mov faddl loopne or and into notb jmp inc sub out scas (bad) add sub pop or (bad) xchg pusha jb (bad) dec outsb pop in sarb mov jo pop (bad) or iret sub adc or pop aaa sub push in rolb adc movl mov pop add pop xchg dec dec in sarb push js ss xor xchg mov mov push or xor ret cmp inc (bad) add jge js ja mov rolb call pop inc mov inc out fcompl inc lds pop loope mov adc sbb or add bound xchg or leave iret and fwait pop jbe outsl push mov int int lret jge mov xchg lds ret mov jecxz xor jbe and xchg dec mov jl pop cmp fild test add jle repz xchg adc sub sbb adcl inc ret add push insb int popa test mov push pop add dec and jns mov push push mov mov or test push aaa mov in inc and mov inc sub icebp dec pop sbb add test scas jno sub mov ja inc ljmp xor cmp inc dec ret pop bound fsts test dec pop jbe dec inc or dec mov in adc inc ret cld es clc inc push inc xchg jns dec mov xor int3 repnz sub jle xchg fstpt (bad) and sub fwait push or xchg xor nop (bad) ds inc push mov pusha or daa clc add into inc scas jb add and lea mov sbb sahf sbb lds mov add test (bad) das daa push xchg aam mov outsl into push jne ret decb hlt enter push leave mov add push fcmovne add popa sub (bad) (bad) dec bound mov sub pop aas sbbl add adc divb push and sar or popf ja mov push pop inc dec mov in imul mov lret sahf mov push cmp into adc sbb dec insl test pop mov add dec jae inc js mov and jge xchg fimull xor pop jae outsb notl dec inc sub cmp inc jns int3 adcb fcmovnb pop addl test scas nop mov jne pop jno xor (bad) and push jne push negb shll imull mov push mov push shll ds adc lret test leave fdiv icebp mov fwait iret scas shlb sub pop insb adc pop add cmc ret adc (bad) mov lods push (bad) push (bad) jg inc adc (bad) jb inc les mov jle lods scas rcll inc int sub cvtpi2ps into cmpsl xchg sbb data16 cld outsl dec pop jmp test sub (bad) test push test das mov (bad) je inc mov ljmp jbe sahf xchg fisub jo sub xor enter inc arpl inc mov sub push test out add xchg lret jmp out out inc lret xor enter and mov test std inc iret aaa aad sub mov cmp aad pop jg mov sbb xchg jle jno cmp push mov xlat sub add lcall fimul or fldl xchg test inc test and scas lret out pop inc mov inc das cld inc je xlat out mov js sub popf jecxz ret sti fucom mov mov orl mov div outsl mov dec loopne dec adc loopne inc or cltd jle sbb sahf lret or testl gs insl testl adc mov stc lcall ret and aam in pop loope dec adc or inc add (bad) fs (bad) hlt orb in add xchg js mov mov xor jbe test data16 adc les and icebp pop or aas in mov inc mov lds (bad) and push loopne insl and test int in outsb mov xchg mov scas fcomps add push movl fisttp sbb test xchg push out inc scas jecxz add dec je push lcall add jo sub lock rcrb or out hlt lock stos xlat mov sbb mov pop les xor mov inc sbb xchg inc imul stc incl sahf inc mov mov insl (bad) rolb dec lods les add out (bad) aad sub jmp std sub lods mov mov dec mov mov (bad) pop adc sub push (bad) push jne iret bound mov xor xlat adc sub push xor les ss shrb xchg loope adc pop and sub push jmp aad scas imul inc or (bad) insl or pop lods jmp jmp xchg std addl (bad) ljmp mov lret inc fstl pop ret or and dec push in mov daa std cmpsl fsubl out inc repz lahf into jle aas ja (bad) jne shl mov sub or jnp mov cmpsb cmp jne loop cli cmp cmpsl dec (bad) addr16 dec sub add (bad) arpl push out (bad) addr16 inc jmp rorb lods adc push mov fbstp add or leave lahf fsubrs lret mov addl push (bad) xchg jle mov mov ss data16 xor jns ja dec mov jp ja jle sub shll mov inc rcrb mov xchg push rcrb loop pop sbb dec je pop and sbb pop lcall and xchg pop add adc ror mov (bad) jnp adc cmp dec dec rcl cwtl sbb aaa roll dec xlat jbe nop mov xchg out jp ss (bad) in or lods data16 sub vmovq sbb jns push in (bad) adc adc (bad) lcall (bad) cmp int jnp mov aam cwtl mov outsb cmp cli pop into mov jno inc cmovge sub jno int3 (bad) push mov mov sub sbb xchg mov cs mov fistp cmp fidiv sub adc into rcll rcll pop pop shlb fcoms push addr16 sbb dec rcr xor jmp sahf or imul pop lcall xchg fdivp ficomp dec inc sbb add mov outsb sbbb leave pushf in fnstsw pushf push push hlt pop mov add aam push sbbb ljmp xor mov and (bad) xor push aad pop (bad) xor jae cmp dec sub mov cmp cltd push lret insl (bad) add repz push xchg cmp push lods insb dec lods push pop pop dec daa adc mov notl xchg ljmp dec dec inc jns repz push (bad) in xchg movsl ret mov pusha out add dec fistp and dec pop jge cwtl cmp out mov push (bad) shrb daa mov dec (bad) adc pop jno xor mov xor pop ljmp or or (bad) dec add ja scas push ror pushf jns sub (bad) push lahf aad jb jp lret mov in xor dec jae inc (bad) hlt sbb out stos cmp sub mov movsl cmc into dec addr16 jle or pop mov lock adc fisubl cli aam stos jecxz adc sahf jcxz (bad) in jae negb jne int xor adc sbb push (bad) hlt or lret mov test pop inc into sub cli pop xchg daa inc icebp ret push lret mov cmc mov xor in (bad) mov push (bad) push or xchg xchg mov nop pop fdivl cmp shll mov lahf ss into jno push movl cmpl fisttpll fstl aad imulb (bad) xor in arpl adc ret add ss mov lahf (bad) aam pop enter mov jae ljmp push repnz into sti mov push push jge cmp sub sbb dec loop and inc popf or (bad) mov dec sub imul dec lock lahf mov popf inc (bad) enter cmp cmpsl ss and jns pop into inc push sbb jno (bad) (bad) int enter and pop or inc popa rcrb (bad) dec shll and pop cmp loope (bad) in pop ret mov sub cli push push (bad) movsl ret into lret outsl pop cmc inc decl cmp sbb loopne,pt adc jae pop or mov push mov scas loop stos outsb jecxz jno mov jno and add lahf arpl aas inc jle int3 push pop pop test or ret outsl int3 push mov pop mov cmp push sbb jno xor pop push mov cmp sti (bad) inc sahf rcrl and out test (bad) mov sub xor mov xchg inc jo out push xchg push stos push push movsb or mov mov imul (bad) repnz adc add xchg adc sahf pop outsl mov imul push popf cmp xor inc inc aas orb nop (bad) stc or add adc cwtl xor pop push add scas in mov cmp imul push popf imul movsl cmpsb push adc test pop cmp adc fisub rcrl lds ret pop jne ret inc mov insb mov jbe loope in or or in pop fnstcw lea xor int3 jbe cmc jne cmp rcrl aaa cmp rorb mov mov pop add gs js jmp loop in sub or jo gs dec push ret psrlq ss into add mov ret gs ljmp addr16 fdivl nop fstpt (bad) dec clc jg mov idiv and sbb xor das xor sahf loop mov lds and frstor inc inc lahf dec enter sbb jmp inc insb xor fwait les sub mov mov outsb xor cmpl cmp mov leave xchg mov sarl jge jge adc xchg movsl out (bad) dec dec xchg ja out test or dec (bad) lret fcomps push pop inc mov xor js aam add mov inc add mov call pop fdivl jmp mov adc push fmuls (bad) jl std (bad) push push push cli mov mov nop shrl jp add xchg jg sahf jne add not fs push outsl fwait jne pusha mov pop in dec mov jne inc hlt xchg jg xchg mov inc add gs adc inc gs push or cmpsb in xchg push push mov add lret leave jge xchg and and mov out xor push pop enter push and lea aad cmc push (bad) (bad) or push jnp push push inc add pop pushf (bad) jmp push dec pop testb mov movsb adc (bad) dec xlat (bad) adc (bad) dec cwtl add bound (bad) jge push push and dec stos std stos dec or push cld mov jmp dec fdivl pop out dec mov and mov scas jae scas sbb into rcrl dec lock fcmove pop and jmp lcall inc in xchg les inc arpl adc ret push je xchg inc in sahf vmovntps into pop nop inc push dec add inc dec pusha inc in add jmp ljmp xor add (bad) xchg xlat jmp into or xchg lods dec fadds pop or fild cmpsb sbb dec les cmpl push dec test je fdivl pop lret mov jp dec ret xchg sbb enterw data16 add or push in cmp pop mov pop fnsave call out add cld mov inc pop dec xlat sbb movsb xchg ja fiadd inc mov push add pop push add imul test in loopne ret adc loopne xchg push jp pop cmp std ljmp sti jge inc out out jo jg insb pop inc push scas pop addr16 in add test pop jge xor loopne xchg stc movsb fwait inc adc loop cld cwtl cwtl imul cmpsb push xor (bad) outsb stos test or xchg fcmovu sub pushf int3 push cmp xchg ds mov (bad) adc xchg jbe add decl push aad test sub jg dec int fdivrs xchg inc or inc movsl int3 inc add sbb mov inc and into adc data16 xor data16 stos iret dec add mov jne movsb lret or push jle mov inc adc push adc pop xchg mov mov dec call jns rolb dec stc idivl and cmpsl push cmp iret das dec fs ret stos lcall xor sub inc sbb cmp daa cld sti iret (bad) pop sbb and dec call jo mov cld xchg sbb dec add fildll and dec push mov mov (bad) lret mov push cmp pop lods sbb mov push imul cmp xchg fwait push negl push jns call cmp dec or inc mov cmp mov push out jae inc aaa or in cmp sbb sahf push sbb cmp sub sbb in sbb in outsb add or push loope and dec lods jae js and cmpsl rolb push ja icebp ret push mov pop test ss inc cwtl inc (bad) pusha jnp into jb insb mov mov push shll lret dec add and or sub insb push iret push xor int mov rolb stos sub xchg inc pushf mov ss stos add lcall dec dec pop add mov cmp push pop cmp sbb inc mov or pop lods xor fcomps sub jbe cmp iret jle les mov pop xor dec pop fcoml or das cmpsl insb or and inc mov call inc es inc inc sbb mov dec push and aaa pushf add inc mov pop inc and push sub scas sbb jae lea movl scas push xchg push or dec pop rcl jno int3 push lahf outsb outsl jb (bad) nop mov fsubs pop add add inc test jnp dec add xchg shrl dec and add xor jnp xor jb mov xor rcl dec (bad) and pusha mov (bad) fsub adc shrl jns cmp mov cmp (bad) mov and jb xorb mov inc mov add (bad) scas leave xor push popf dec pop cmp movl xchg fwait (bad) mov inc dec psadbw xor or adc fcmove mov movsb sbb dec mov cmpsl push push test adc ds xor add int3 loope mov cmp leave rcrl dec call test fbld push cld mov cmc (bad) divb call pop int push mov adc mull inc rclb arpl jp sbb xlat mov lods (bad) call sub aas mov jo aaa inc je mov movsb inc xor dec inc jb pusha cmpl adc lds and mov popf into int cmp or push dec pop cli or jge push test or sub push mov inc mov or add adcb cmp outsb lods and lds fucomi clc dec fisttp xchg mov sbb jmp sbb int3 out loopne or xor or inc and popf das cmc movsl inc jmp test inc dec int3 pop jne mov xor insl dec push xchg mov (bad) jnp lds mov stos xchg scas stos popa inc xor aaa ss das ljmp (bad) dec ss mov inc std dec lea mov xor hlt sbb sbb dec mov adc ds and add fwait cs es xor icebp inc out out inc add jbe pop or inc sti cmp mov nop mov cld push ret mov inc add stos mov jno mov sbb incb pop cmp pop ds lds mov xchg dec or (bad) and rclb add ljmp xchg fiaddl bound pop pop ficompl (bad) adc dec pop das or iret not fs es fmulp movsb dec xor lcall lret add xchg push loopne jmp clc (bad) jge aaa mov jecxz (bad) jb (bad) sti test cmp push aad sahf lret adc (bad) push repnz in es dec or loope lcall scas fcoms movsb xchg push stos ljmp (bad) jmp call xor cs mov mov push out pop (bad) dec pop or pop pop push push stc inc add or and pop std jmp push orl shrb jno incl popa mov or jno das sub xchg and inc xor je cld xchg rorb data16 stc mov ret mov or repz mov loopne xor (bad) mov fdivr xchg push fwait les add ror adc dec testb mov or inc add hlt out iret cli push inc sbb lret xchg nop add arpl ljmp sbb xchg push xor push stc inc mov lret outsb test decl fiadd dec test sbb lea mov cmp ret les inc push xchg and xor dec cmc ret rorb jb dec jo sub add cld (bad) movsb adc cld fcmove jge sbb cmp and jle adc in inc xchg mov xor js add into jae lret xor mov xchg fistpl hlt mov sti arpl cmc jge dec ficoml icebp shll jg inc dec test in add sub dec dec adc sbbl push xchg fstl pusha (bad) insl int3 add (bad) into mov pop scas in (bad) adc dec sbb or daa (bad) fucomp sub ss ja cmp das je lods dec pop test xor xchg xchg fs call (bad) jl rcrb pop inc mov jno notb jns ret and lret lock xchg xor and (bad) gs sbb mov inc mov cmp mov dec inc stos int3 adc movsb push lcall xlat je js jbe nop ret push inc pop shlb lcall std xor inc ret xchg pop ret jb dec add or repnz scas ss add imul out or mov mov xchg lahf xchg cmpsl (bad) sbb add stos rcr adc mov adc les or (bad) adc enter movl lods dec dec mov es and cmp mov aaa mov mov mov xor xor xchg mov rcr add daa sahf add call (bad) dec pusha sbb shlb dec movsl int3 xchg xor pop outsl jae (bad) aaa adc push sub mov das push mov inc xchg aam jg,pn ljmp ret leave sarl in push or inc push movsb dec outsb dec ror cld mov fsubs outsl push inc inc cmpsb adc cs fucomi cmp xchg push cmc stc loop dec popf pop mov gs dec test out dec mov mov dec fwait sbb int sbb dec jg add inc mov cwtl dec jb lret lock xchg orb push jae mov pushf into scas sub jno ret lret cmp jbe mov mov pushl lock cli pop (bad) (bad) and repz mov or and test ja mov std iret shl cmc out nop xchg int aam add adc mov mov inc call and or int3 dec adc test dec dec popa outsb test data16 sti jmp (bad) xchg add pop cltd outsl push dec inc cmp cmp fisubr pop lock dec cltd in int3 fnstsw add fwait and inc cmp pusha (bad) or inc xchg dec jle and sub ret out (bad) nop jg and sub repnz (bad) xor or dec sbb test imul ret or dec dec out mov mov xchg inc xor mov inc hlt dec jb mov shlb cld dec insl sub push fsts mov ss add inc mov lcall test inc sbb imul mov outsb iret hlt fcmovne ret outsl dec ja pop stos cli aad notl leave cmpb stos rcrb cmpl int3 mov xchg movsl pop push fcomp rclb movsl and maskmovq (bad) mov mov test push pop fwait pop push loop pop and adc dec dec mov mov popf sbb rorb test jne pop gs cmp or and pusha dec js lea and int dec sbb push cmp dec xorb mov (bad) cmp jge stos pop in pop test and inc xacquire aas or cmp rorl testb jnp decb fcoms adc inc dec push in xchg hlt lret push mov popa fisubl repnz mov sbb inc fisubr test sbb cs jl adc test pop adc mov cli jl mov or pop popf aam (bad) leave test and xchg pop or ret push jmp data16 inc cmpsl sub adc jp cmp lcall imull ss or xlat sub and sbb test or mov mov cmp or mov or push in jne xchg dec ret insl nop iret or adc cmpsb mov test rcrb push aam or cmp fwait xlat or daa pusha movnti mov or push pusha cmp sub inc adc add xor repnz or test shlb mov xchg kandnw inc inc mov inc (bad) int3 movsb cmp ljmp (bad) or std loop daa in pop xor pop and in outsb out jb adc dec mov leave inc or cli jns fnstcw leave add sub sbb cmp rcll ret mov or add sbb dec fistp addr16 xchg pop test fs ja scas adcb cld test mov sub push test loopne inc mov lods imul dec mov jae test sub jp inc cltd push mov pop push mov mov imul je stc or pop popa fxch jo dec dec loopne dec dec aas pop pop test and iret ficom xchg lret js orb iret push aad (bad) xchg push sub mov or add lods lock sbb fisub lds lgs (bad) push cmp in push hlt inc pop mov into dec enter or popa mov add in insl sbb push cmp dec sbb xor pop inc scas int3 pop insl add sub bound xlat xchg rclb icebp push lahf lahf push push mov fs ret in test adc dec xor pop push out or (bad) scas xchg pop mov (bad) and mov into jne dec ljmp es ds rcll les inc push sub clc xor fnclex les jmp iret lahf pusha leave cmp add push adc dec inc fs xchg pop adc cmpl fisttpl out sub or xor sbb test jns push add xchg jne inc ljmp cld push sub movsl pop xor sbb leave adc push int3 je inc mov push ss popf nop stos and ret dec int stos dec xlat ds adc sti xor mov mov pop std or ret into adc sub or and push push inc ret pop adc ret cli imul inc mov es sbb push push fsubl ret push in jl lods push (bad) ror frstor int xchg pop das outsl hlt pmaddwd pop or pop pop jmp lods xchg push test ret in das orb dec sub mov ret jmp or dec scas daa cmp rcrb movsb sbb lods ja pop sahf push repz leave inc je mov je xchg test nop imul cvtpi2ps jle loop xor add lods pop cwtl xchg xchg add pop sub or dec rcr fwait test fwait rorb adc pushf jge out data16 push mov mov dec cmp mov cmp loopne sahf pop pop push mov stos aam inc sbb fisttp pop inc lea dec (bad) mov pop les inc push adc add jle subl xlat push adc jg push inc pop add js or data16 lcall test lods test xchg dec shlb adc int3 inc and ds movsl mov pop int3 lds add push (bad) repnz mov into int and xor xor mov push leave cmp pop sbb dec xchg jo push insb pop rcrb dec add in fisubl add add int3 shr aad iret and out inc sub bound (bad) enter ja dec dec mov inc enter sbb jmp cli daa and mov mov push mov jbe dec pusha push jns loope and xor je out push jmp mov cli aad ret xchg or test inc aad push mov lret mov mov mov aam pusha shlb and jmp jne dec lcall ret mov dec bound jns jmp fsts pop push mov rorb sbb jl pop inc cmpb pop sbb int xor iret rorb jmp dec (bad) lods fild ret icebp mov jo in icebp test xrelease push or pop out mov push push (bad) jbe push pop xchg orl add lods dec xchg sahf push jnp xlat es lds or add notb (bad) imul push in outsl lods and and pusha je (bad) jbe das ficoml xchg insb movsl sbb or jne mov out ret (bad) in stc pop push arpl aam (bad) addr16 or lahf push mov dec inc outsl sbbl add mov or jne xor push sub jae mov ficompl rclb js (bad) leave add adc loope aam cmp dec paddusw (bad) pushf dec out fmulp lret push jmp movsl adc out enter jp loop inc add mov test sub cmpsl fcomps mov cmp mov pop inc push mov clc leave dec aaa add rorl cli les xor jle enter add cltd or xchg or inc mov fs adc js (bad) pop fsubs ljmp int ss adc js roll dec fsin mov jno fwait sub inc orb je dec mov mov cmp shll call inc xchg dec pop out and jmp cwtl cwtl sbb cs dec pop outsb push mov mov adc mov cmc and cmp pop mov mov or iret ja imull pop xchg pop inc mov ret stos jbe or add fst push inc mov mov pop xchg ficomp mov mov repz jge fwait rcll push xchg test xchg jp ljmp out test sahf mov add sbb cmpsl jle add push mov inc mov mov or (bad) cmpsb or lret aas sub es push lret xor dec mov inc add jle jno dec xor pop add repnz mov mov leave (bad) stc stos mov and (bad) bound inc mov int3 rcl je fwait shlb or xor rcrb mov inc sub xchg sbb in lock mov fstl pushf or jns mov cmp cli or rclb lods mov gs shlb push loopne aad dec add inc cmpsl sub lret fnstcw sbb in ds mov stos jle add add sbb aam push and out ds xchg xchg movsl adc sahf sub pop outsb mov test pop insl add insl hlt adc insl mov dec or cmp imul inc int3 dec mov int3 repz pop xchg xchg sub js std int3 xor push xchg ficoml cmp cmp out sub gs push repnz adc (bad) fdivl pusha bound fnsave cmc dec je les lods push arpl call or push lcall ret sti cmp test push or in xor adc out mov sar movsl int cld push popl daa pushf or mov push rcrb in push push mov inc push xor and rcll sbb aam sub jo fcmovnb test push sub icebp mov das call fs sbb xlat push jmp mov ljmp cmp gs jle mov aad jb inc ja mov xchg mov mov or aaa xchg add mov cs shll push fwait loope push (bad) (bad) pop inc mov adc lock sbb fcomip aas ja jge scas test lret (bad) stos (bad) and lods dec les lods outsl movsb stos fnsave add dec add mov das pop bswap cmc adc add sbb mov aam (bad) push cmc and movq sbb ss mov mov cmpsl insl inc lret adc adc ds mov sbb lahf adc cltd hlt jp loope repnz sbb jle add jbe push xchg stc sti je ror leave and arpl or add xorl sbb outsb fisttpl pop mov add into push jnp adc jo sti jmp divl or and sbb leave mov insl fnstenv sbb sub dec out xchg sbb ss cmp out pop add or and cmpsl dec sub push dec clc xor mov jmp push mov push dec dec fimul sbb push xor outsl test adc push jle adc pop sub mov arpl ret inc cmc fldl inc mov inc adc rcrl (bad) sahf (bad) lret jnp dec push xchg add dec add rcl jl ljmp das fimull push xor sahf test pop push dec rolb ret (bad) lock lds stc inc sub push dec cmp leave jp int adc dec dec mov das es mov add mov in sbb (bad) mov loopne jo mov ds mov sbb inc or ljmp mov or push mov xor dec add sbb sub pop inc lahf lret fiadd mov push jae adc mov sbb jnp std repnz push push outsb js add stc cmp sar shll or dec mov std addr16 mov mov jmp rcll pop repnz cltd aad or aad rcll dec nop jo add ret push dec sarb pop test out cmp lcall in ja shrl lds push sub scas int sti lods pop pop js mov push dec lret rcrl gs sbb outsl inc popf pop mov in dec pmaddwd jno fsubrs cmp out xchg jbe test out xchg sbb sub cs (bad) ret std enter push push (bad) mov dec adc push insb xchg mov aaa int push add push loopne xor sub popa les out inc mov rcrb cmp lds push arpl fucom out jbe ljmp inc int3 cmp xlat xchg stc jnp add dec mov mov mov adc fstl lods sub test popa mov subl int3 dec fnsave gs inc adc popa movl inc xchg roll xchg dec inc adc mov or pop adc dec xor arpl jmp jne leave fldenv aad into mov dec adc add mov out stc sbb pop dec mov or (bad) rcrb mov add loop adc inc imul ds adcl push outsl fistl push sbb lretw push sbb ljmp fcompl ja,pn xchg loopne push clc dec (bad) push push lret (bad) sarl testl mov insl xor mov stos (bad) sub popa repnz roll inc inc mov test ljmp mov movl in jg sub mov xor popa iret inc les sbb insw out ret push add pop inc out inc cmp mov adc movb pop dec fsubl xchg or dec stc inc and add nop cmp arpl bound scas fldl cmpsl negl xlat std jno clc data16 insl mov in dec mov lock jnp mov arpl int lcall (bad) out mov adc fildll mov xchg dec (bad) (bad) (bad) movsl test pop pop cmp pop ljmp push (bad) or sbb add adc add enter bound inc add mov or sub mov and and (bad) fmull mov and jge les dec mov inc sub lock xchg addr16 fisttpl mov in mov (bad) roll mov adc jmp pop cmpsb sbb pop pop jge es nop in jmp mov push push inc mov push std into push (bad) pop out sub (bad) daa mov cmp stos pop mov imul mov xchg add aaa mov inc out adc das lock pop push pop xchg popa cmpsb or inc inc imul push (bad) mov push xor sub add adc sbb lods sbb pop outsb mov pop ret adc movsl mov rolb leave mov xchg mov jns fmuls or test mov test mov lret inc fs mov dec lahf testb jne sub lds iret lret sarl pop les je rorl pop jmp jecxz shll sub imul insb aam push dec sbb in cmp mov push inc into pop (bad) jno inc or inc adc sti outsb ds ljmp in jo pushw insb adc (bad) adc adc inc pop movsb clc (bad) xor mov push sbb sbbb jmp xchg fisubrl or int3 lcall setle shlb test loope in lock movsl mov adc xchg repnz inc popa inc rolb and sub int3 adc ds fisubl sarb mov iret inc mov add xor and mov fs (bad) mov in (bad) out xchg xchg add inc pop dec psubsb lock jo daa movsl cmp loop sbb inc cmp pop pop and cmp es sbbb inc enter and ds mov xchg dec dec pop push testl imul adc aam mov push mov jg jae fs push push add lret push dec jp add push xchg sub gs sub stos fmul xor push mov sbb sbb dec mov test cmc dec and leave fwait adc xor sub loopne scas (bad) xchg lods add push add jl leave ljmp movsb push pop fistpll cltd dec mov shrl push loop inc add rclb adc push mov push mov add adc xchg push mov loope and inc mov dec or xor insl test cmp inc jb in push inc ret aad adc sub fbstp jne out cmp and popf movsl loop jecxz mov push incb jmp test cmp cmp sbb mov testb pop or je sahf xorb inc jge add xchg cmp and sub pop outsl jne xor nop mov inc addr16 cmp inc aas cwtl inc xlat fs sub add insb sahf push pop or fldt sarb sarb push sub dec jg bound addb in pop out or (bad) roll dec les int mov pop mov adc push test int (bad) xor xor push mov mov xor icebp fs add pop sbb inc push xor imul insl sbb sbb bound inc cmp daa dec sub push and pop jno sbb enter lods mov mov or add and inc inc fwait pop int cltd sbb (bad) imul xchg sbb and mov lods mov inc lods pop or dec mov arpl push pop aam and inc ja mov cmc push negb int insb aam and cmp jg xor aas std jmp popa mov mov shr cmp fmuls movsb inc pusha dec fcomp dec xor roll jecxz jns or scas addr16 dec int3 cmp jne rol in xchg push inc dec insl lret pop iret lock inc (bad) popa fistp and jb rorb adc arpl imul dec imul sbb mov notb (bad) std popf pop jmp bnd inc xorb ds int3 mov inc adc fstp pushf jo push jecxz xchg subl dec fstps push das cmp jg popf push mov insl xchg and sub loope mov ljmp push mov iret adc sub bound sahf pop adc inc pop xchg clc pop push jb push repz insb cmp ret out xchg xchg or fsubl or sahf pop mov push lock sbb and pop or (bad) cmp bound ljmp xchg in push sub xor imull fcoml lcall (bad) call cmp push xchg pop jnp outsl dec dec adc sar sub leave xchg ja sbb cmp adc jno cmp mov adc lret jne movsl cltd out scas lret cwtl mov test xchg push inc sbb lahf ficoml pop mov mov jae pop imul inc cmp push push mov pop lods iret and pop push stc adc test lods popa ret lods pop fmull pop add cmpsb lcall jg sub dec lret (bad) les xchg icebp and out call fisttpl fmul or mov xorl pop ret shll pop adc popa or loop movsb mov or rorl cmp int3 mov (bad) pushf push mov inc (bad) in sti push push inc jge sub fimull dec xchg mov mov xchg push lea mov (bad) dec stc ss fucom enter cli xchg adc xor (bad) test sub loopne cmc icebp lcall cmc fistpl ds mov in inc je mov dec dec inc sub pop nop adc push dec mov sbb shl sbb lock push insb in mov cmc push push test cmp sub push pop jge jo pop sbb cli testb inc adc inc stos add outsl dec imul ja int3 jmp add push in and pop mov lock nop and jns pop ret inc pop sub dec xor das jae es inc sub js add push jmp iret mov hlt pop insb rcrb cs dec mov pop out test sub lock mov cltd dec fnstcw push push cmp out sbb or insl mov nop or jne lods add inc pop inc sub adc jl pop mov dec outsl lock call sbb xchg inc jae inc mov or jmp adc dec adc cmp pop in lret sahf shl add jg test lret lock dec xor dec cmp sahf test mov dec dec int3 or push add xchg cmc pop add sar fucomi jge jp into cmp test adc sbb movsl and stc push fcoml sub je sti push loop das rcrl popa xchg xchg xchg jecxz jge adc btr mov iret mov jbe dec and mov push cmp xchg push stos xchg out pop int3 push pushf mov sub or mov and xor orb (bad) testb jp cmp call jle outsl jns lock and testb add jle push and mov hlt js push add lds outsl adc and ffreep es loope roll add ss push adc fcompl inc lock lods icebp pusha pop and aam pop push (bad) adc loop gs cmp cmc dec lds sub xchg dec add jae and jle pop (bad) out sbb iret pop out pop outsb and mov nop and jne push adc shlb and scas ljmp in add xor add sub xchg pop cwtl aad pmuludq inc sbb in orl fiadd mov jl pop pusha leave je scas jb and cld inc adc int or js fildl inc stos adcl mov push push inc dec jmp sbb outsl pop mulb sbb in jno ret fsubrp test (bad) or push insl nop push xor arpl add loopne hlt icebp xlat aas xchg adc outsb mov fcompl push fsubr dec sbb jns cli cmp inc or dec xchg incb xor dec outsl push sahf lahf int3 loopne or xchg or jb inc or push pop jno add dec push push mov mov push psllq inc and stc sbb stos lahf out adc jns incb test and pop pop nop lods nop bound cwtl dec pop adc mov out cld cmp and fs pop lahf sub dec enter or stos mov sbb add testl rol data16 (bad) push clc inc daa sbb mov sbb xchg dec sub (bad) fs sbb or add inc (bad) dec dec lods pop cmp aam out cmp sub mov dec push push rcll imul mov push mov fmull jecxz outsl (bad) lret pop shr push sub dec add inc sbb call mov pop das iret push pop mov scas inc inc outsb mov psubq push cmp xor cmpsl lock rorb int (bad) sbb rcrb lcall jb xchg jl int loopne dec pop push sbb dec dec iret add iret mov xchg xor fimul add scas popa inc lcall sarl inc addr16 insb ret insl jge pop (bad) in xor push mov pushfw sub push pop mov pop movsb jp add imul dec in add xchg inc imul add sub into push inc push inc dec shl pop xchg xchg iret jle fs sub add add inc jne aad xor adc xchg sbb jle push xor or ljmp jmp jne mov call and bound dec push loope fstl icebp mov push lods outsb xchg dec js ret das sub and fcomps mov mov jp lea cwtl jno test push (bad) lds sub leave pop je (bad) (bad) (bad) dec push lock add jbe rolb sbb sbb mov cmp jmp fdivp xchg les divb sub add push or aas lock dec test divb inc in and pop ficom inc inc or push mov repnz (bad) mov mov add ffreep or (bad) mov pop sbb test lret jl jmp adc mov bound lret adc call ror cmp (bad) xchg cmp or scas pop mov pop jecxz shl add inc ja int out sahf lods fs or inc imul push mov push add sahf movsl (bad) inc dec sub mov in ret out btc dec rcll add std mov cmpsl jae lret rclb daa test popf ret pop lds adc cwtl pushf iret iret pop ja icebp pop out sub inc push xchg sbb or sbb imul add inc and sbb dec insb repz lret inc mov inc dec lods pop int push cmc lods jg pop and inc fdivp add fs dec and cli cmc pushf add add sti mov dec rcrb jb xlat loope hlt test ja loope sahf cld push scas pop mov in hlt xor pop popf mov sbb sbb dec add mov xchg adc push ret dec jmp dec fs scas or inc fiadd mov pop lods inc test inc sub dec pop add fchs cli mov push icebp test jae sbb xchg sub fdivr xchg and push jmp push jns mov aas pop pop sbb (bad) xchg inc add loope add mov push or gs fldcw add dec idivl (bad) icebp inc mov gs js outsb cmp push sbb fs inc dec fidivrl inc (bad) pop pop dec insl push mov push std loop scas ficomp jmp add push or mov push enter pop pop ja cmp lret jecxz sub mov sbb dec jno xor or sbb (bad) mov test mov and push inc sbb rcrl into faddl test popa (bad) jno jae mov scas in push and inc aas xchg loopne into add data16 daa jne sbb pop mov test jbe pop movb lret sbb ret cli leave insb insl adc mov loope lds rorl dec mov inc fisttpl sub unpckhps mov inc xchg mov inc shr xor xchg and xor sbb stos pop lods (bad) push or pop xor inc push sti cmp rcll push int3 jo imul mov inc lret dec mov gs dec sbb shrb pop (bad) push imul mov xlat stos or pop jecxz xor mov fistl mov xor push sub inc pop and mov lea inc (bad) or cmp push mov dec jle (bad) and gs into add int3 lcall iret test adc jge mov js ja inc clc lahf sub enter and mov jno mov adc push roll mov pop xchg aam add into mov inc mov fsubrs jle mov mov ljmp jbe out sahf inc movsl xchg lock repnz cwtl inc xchg inc push je fcmovnb cs shlb push xor fisubrl mov jae dec xchg xchg aam xor fcompl mov mov or cmp dec mov lea sarl popf es xor jp jo jno xor inc bswap fistl lcall clc mov arpl jle pop pushf add cmp movsl xor stos out push cmp pop add fdivr std cwtl cmpsb (bad) test sbb in jns sub int3 xor lahf sbb sub (bad) leave mov iret adc sub stos push or xchg cs fadds ds sbb inc adc fiaddl adc sbb popa jae in adc data16 push mov push dec mov dec call (bad) and mov ret dec mov xchg dec inc inc pop cmp insb cwtl push push inc mov and rclb in fs js mov push popa mov aam call imul add push cvtdq2ps mov in sub pop gs and cmp cld mov and inc push jns int3 dec mov outsb iret addl arpl out xchg out outsl mov fwait pushf ret push incl (bad) push adc lret push mov add pmuludq mov js xchg cmp gs out and pop mov add test jmp das and mulb roll out adc (bad) ja push dec xchg sub pop hlt pop push adc clc xor dec clc and mov lcall (bad) inc push or adc std shlb cld xchg xor andl dec inc jns cwtl push aad scas daa cli cmp dec out dec es dec pop idivl dec adc ss aam repz je inc lods pop mov and imul repnz inc iret mov mulb adc mov ja arpl xor dec movsl xchg dec addr16 cltd and mov imul add inc andl inc outsl xchg int3 jno sahf out and gs std add dec push adc and sub dec ja sbb dec jle ds pop lods inc mov jmp sub or popf xchg push scas sub lcall iret jne test inc test jne ror cmpsb mov fcoml adc mov push popf adc push cmc loopne sbb lea push xchg int insl sarb ds call mov leave out cmp push sub stos xchg xchg mov cmp xlat jl pop lods test pop xlat movsb sbb pop iret or sbb jmp mov repz sbb xchg add adc pshufw nop inc iret ljmp or int mov addr16 (bad) rorl rcrb mov cmp les or pop xchg pop (bad) mov dec mov jp push cld mov xchg (bad) and add (bad) ss add rolb push push out xchg sbb dec inc xlat push push mov negb (bad) pop mov mov fimul and xchg xor arpl scas push xchg sub push sbb add mov movsl sbbl int3 lret scas mov add dec mov (bad) rorl gs mov lds inc dec int3 xor dec adc dec sub fcmovne jno insl int clc out pop pop and out add fmuls sub outsb mov cmp inc out lcall dec mov outsl or inc sbb lret add (bad) ss xlat and dec and pop rorb inc rolb sub inc sbb (bad) aam loopne rcrl jae xor (bad) xor dec pop jae cld xor clc test iret push add jge and jns dec int3 rorb mov sub in loope pop inc mov adc cmc add push sub pusha sub mov pushf dec inc dec inc js ljmp dec or inc enter stos les in outsl sbb ret inc push adc loope and xor mov xchg insb mov leave xchg insb jae cmpsl das adc test das outsl push loopne inc repz ljmp inc sbb inc arpl loopne sbb outsb inc push dec mov sub iret cmp rorb inc shl popf fldt iret jne cld sub mov pop xchg (bad) jbe clc cwtl loop add cltd pop dec inc cmpsb dec and inc inc or hlt sbb sbb jae ja sbb (bad) cmp mov rolb addr16 fiadd adc xchg cs adcb xor fld mov dec pop mov add sbb mov pop push fist sub add sub add push test adc cwtl cmp and mov push sub pop out mov pop xchg mov or push xchg inc sbb aaa mov or inc cmovno test fdivrs inc pop out mov xchg jl loope jnp sub dec sbb push or xchg (bad) stos add hlt dec xor hlt pop push cmp pop outsb inc aaa push mov roll inc inc into xor ljmp or lds jns dec sbb inc bound es out test pop gs or sub add push fbstp rol push xchg push or push push (bad) (bad) xor xchg lods adc push push inc xor inc rol adcl xchg test mov leave mov rcll cltd push add dec inc out inc insl jl fistp lea push inc ja add movsb pushf push xchg sbb addr16 xor fistpl xchg shl inc leave ret rcll dec or push popf dec adc (bad) cs xchg sbb pushf in sub push push sub (bad) dec lret ret (bad) jae pushf sti call mov dec push dec es int enter pop dec lds into and mov dec adc adc stc xchg push push rclb push shlb jo xchg push dec inc pop dec rorl mov adc inc mov mov (bad) lret cmc push rcrb push push scas or les ret dec pop dec dec push int3 fs jbe adc add pop inc mov mov ret (bad) hlt push hlt add push clc cwtl lea ds pop jg leave jo push sbb add aad outsb mov (bad) pop gs push icebp int cs adc ds xlat cli mov xchg fistpll or fisub adc inc (bad) enter in cmpsb lock test mov test mov cmpsb lock imul in or rclb in sbb loop and imul (bad) add in dec adc in pop and in insb xor in jl inc ret in mov push shlb in pushf in loop in lods cmc jb and imul adc fsubl in in mov mov add imul add pop sbb orb out sub orb idivb add push dec add push pop add cs sub or cmp mov orb push ficomp fldenv test orb jbe mov hlt or xchg push fistl mov push frstpm(287 mov push frstpm(287 mov push frstpm(287 mov push frstpm(287 mov and inc jnp (bad) shll sar inc and in add lret cmp imul loop sub orb bnd add (bad) add push sbb lods out fist pop and sbb dec pop sbb cs pop fistpll js inc push sbb mov push push sbb cwtl fldenv sbb test jbe sbb mov pop fisttp sbb fcomps fildll sbb clc mov cmc js dec sub jl mov ret mov rcrb (bad) cs jb mov test (bad) int3 and xchg fsubl mov mov fs mov lea (bad) enter or (bad) enter sbb (bad) enter sub (bad) enter cmp (bad) enter dec or (bad) enter pop sbb (bad) enter push lea (bad) enter mov push (bad) enter cwtl (bad) (bad) enter test push (bad) enter mov lea mov mov (bad) enter fcomps es call lea mov xchg aam dec add lret aam pop adc fcmovu xchg aam push insl ljmp jge fistl or push sbb fistl sub push cmp fistl int fistl fstpl xchg aam ljmp push cli mov jp xchg aam mov lea cmpsb in test movsl add sbb imul outsb (bad) bound add or (bad) cmp xchg out mov dec jl (bad) push add cs push adc shl dec sahf cmp pop test (bad) lods lea scas mov ljmp test pop int (bad) dec in sub rclb out xlat loope pop mov rcll add mov (bad) push jns ret dec add std or stos xor scas sub aaa lahf hlt ja adc ret cs roll out aas mov inc dec pop adc stos (bad) jl mov fisttpl ret xchg mov push cmp dec outsb or push icebp mov sbb incb pop push les dec mov lods mov cmp scas fdivl push in pop jle cmp (bad) dec push leave idivb mov xor cmp ss (bad) out mov cli or popf fadds xor fidiv inc add mov ja mov mov or lock loope push fistl aad je in jo xchg xchg or pop push xchg rcrb mov out sub dec fist pop push (bad) or jp mov cmp out lahf pop xor repz jnp decl or cmp xor inc aaa mov or fnstcw pop dec sti dec mov xlat insl mov add dec (bad) xor push (bad) leave sbb push sub into (bad) pusha dec sbb and xchg inc gs ljmp nop mov outsl dec mov sbb es sub pop (bad) jo je out outsl and sub push xchg or or in jmp ja sbb mov inc data16 cmp inc mov pushf gs (bad) lret xchg xlat (bad) xor lea scas dec fimull cmc (bad) push nop rcrl xor cltd dec mov adc ljmp xchg jae lcall mov nop mov add addr16 orb xchg pop push mov lock cmc xchg dec push mov ds (bad) fadds lds xchg int sbb jge out popa les loop pop mov ffree cmp test jb leave mov inc mov cmpsb call mov iret sub rolb xor (bad) dec push iret lret popa push jo sub lcall add or inc (bad) or sbb xchg or push aas dec nop fsubrs and or out add dec xchg mov inc lret data16 dec popa push pop dec mov add icebp outsb or inc in mov in sub pop leave jge loop inc mov dec ljmp dec mov mov or fnstsw push push pop shlb lahf sbb xchg das insl xor int3 sub jb and roll clc dec inc xor dec icebp lahf push dec insl dec xchg gs inc in add xor push inc stc mov adc pop lret inc xchg repz insl sbb cmc add sbb xor pop push mov or push and mov ljmp sbb pop (bad) xchg push xchg enter call daa push or imul inc pop inc and push pop xchg inc sbb pop lock roll gs mov pusha or mov mov pop test or mov and inc cmp push cmp xchg inc pop jge scas inc imul dec and add push add fstpl leave mov push pop dec xchg pop bound cmp (bad) jo dec sbb push push frstor orl cld mov movsl xchg cmp xor int3 mov nop add push dec decl inc jmp inc popa mov mov aas and imul mov cld jl mov stos sub cmpsl sbb mov or add inc lret ja je jnp sub into mov push popa push dec push mov fistpll jns js sub int3 dec sti movsl ret jecxz enter cmp add test bound mov mov or roll sub xor loope push ret cmp aaa daa or enter aad shlb sub into dec add inc into xchg and fcmove std test or mov sbb push and ret push jbe adc lods jg or jp add insl movsl xchg and shlb jbe mov clc add pop aad mov or adc scas insb gs fcoms push out lds pop int cmp out push sbb (bad) daa inc jmp xchg mov imul cmp add inc inc push (bad) sub je,pn mov xchg (bad) imul jp mov fwait pop sahf imul cmp push add inc insl add push into inc jno sbb outsb lret out xchg pop xchg adc inc outsl inc fiaddl or sbb pushf sub dec (bad) dec and addl push adc push dec inc jl xchg push (bad) (bad) lods aad mov out adc pushf sub jmp dec and cli mov and repnz dec inc sub or (bad) imul roll or ret add icebp or push jo jb xchg xor dec push ja rcrl push popa stc push cmp adc mov mov mov ret lret je (bad) fistpl cmp sub lcall lret stos dec ja jl jo xchg or cmpsb and loope mov mov xchg jb mov es imul mov cmp enter in pop (bad) pop in nop andl ficomp mov add or mov int3 ja jp sub push push dec inc jne sbb jne (bad) xlat and out xchg sbb lcall fcompl aam add aas ss adcl cmp dec movsb dec ficom mov or cs pusha adc and add ljmp push push dec add (bad) dec or adcb jnp dec pop mov and call scas or es ljmp jnp push pusha inc stos mov dec mov and cmpsl and cmpsb lcall mov mov imul pop mov lret inc or addb cmp push xorb lods daa sbb mov sub dec addb dec (bad) in ljmp dec pushf pop aas scas mov add popf cmp out inc ds xor jbe mov outsb add adc or pop ror loop jns scas leave test xchg or push insl dec fnclex inc cmp pop jns and mov pop and pop jbe push push pop lock hlt jno cwtl cmovle pop or imul clc mov or lret in cld (bad) cmc push (bad) jne aam cmp add (bad) ja xchg bound xchg int3 (bad) xor mov jle stos loop test jbe dec je adc mov ret mov scas jl (bad) fmulp push or jge in outsb leave jnp cs icebp lahf inc push mov stc dec pop cmc jne mov inc inc add loope popa inc lods mov or les inc inc mov adc push ret imul (bad) mov or push dec (bad) jno xchg pop pop jnp push inc xor repnz mov std dec or jbe inc xor (bad) jno cltd mov adc dec add inc jle xchg repnz add dec jmp scas les (bad) cmp movsl push jmp pop dec int pmullw outsb ret push mov mov insl mov pop jbe mov mov cld mov adcl xor icebp (bad) xor or sub in mov dec shrl loop std sub mov jmp aad rolb rcrl mov dec mov dec add jnp sbb jmp mov xchg inc add rolb lods jmp push add inc or sbb dec sbb dec out pusha pop inc or int mov ljmp repz int3 dec inc mov fisub or leave lds insb pushf out out pusha xchg dec add in imul mov and and shlb adc mov inc add pusha and scas shlb push (bad) xlat imul dec mov pop jmp ss sarl sub and std xor pop les loope int3 mov mov xor xor divb jmp mov popa stc cmp icebp inc xchg inc lret inc (bad) dec pop inc or (bad) inc mov sti bound inc cmp add sbb fadd sub mov mov (bad) dec inc addr16 and sub sar cld data16 inc mov push sbb adc inc push (bad) or add popf pop jl test sbb pop pusha inc dec in icebp int3 and ret aas sub cmp mov push imul cmp cmc imul test decb inc dec xchg push xor pop sub mov mov sarb pop mov sbb sahf push imul addl repz loop sbb lock add faddl mov xor or or dec add stc or or aad out dec add out push hlt popf and and add popf jbe cmpsb and lods lret mov and xchg and in lock ret jno loope (bad) lret xor jg insb shrl adc out push (bad) fidivl roll sub jmp insb push pop sub cmp xchg or dec aaa mov (bad) jbe dec insb push imul inc (bad) jbe inc xchg mov mov dec imul mov xor dec cmp push testl bnd mov xchg adc inc insl movsb jo inc stos and imul sahf (bad) xor push (bad) mov pop xor sub dec rorl data16 inc add cmp jnp dec inc push mulb leave add add sbb lret mov dec mov mov pop push mov xor xchg cmp fsubrl mov dec dec loope sub cmpsl and xchg xchg mov ss incb mov nop imul jnp dec add data16 push (bad) cmpsb add or pop je insb xor outsb insb and inc and and das mov push sub inc sbb gs or into mov xor pop add jge dec jbe in xchg dec jg leave inc push inc movsb inc leave add sarl fsubrs xor cli add fucom fld adc adc xchg test repnz and into jl and pop xchg mov dec testb pop dec (bad) cmp inc nop fisubrl les inc hlt imul inc (bad) or pop ja add add subl push mov push cmc popa dec arpl xchg orb loopne (bad) stos jmp ss pop jg jecxz sbb sub mov push std mov cmp dec push dec (bad) pop adc inc rorb insb ljmp inc ret arpl push enter in sub in push jbe cmp pop fidivl dec les outsl aad sbb ds mov data16 adc pusha or push pushf sub fimull dec rorl arpl push push push ret pusha and je sub add ds dec and orl dec dec inc out adc cltd pop int push popa test (bad) cmpsb sub pop loopne movsb inc sbb (bad) push data16 push in pop fbld mov dec adc insb aaa or mov adc test fbld xor mov and and in mov dec cmpsl cltd xor fsubs push mov add rclb loopne pop bound loope xorl jge mov jne scas pop imul hlt jns push push in sarl (bad) jmp xchg outsb arpl pop fwait (bad) sbb cs insl sbb mov push sub dec push ds push sbb mov inc rcrl and repz inc pop cmp popa mov leave and out adc xor outsb ljmp fldcw into imul mov repnz das mov mov insl xchg or imul add dec cmp dec inc or or scas mov xor mov mov jne xchg addr16 cmp jbe cmc nop ljmp shrl ret mov sti xchg sub daa repz mov sbb sub add xchg lret gs stos pop mov in mov mov dec jb sbb xor or outsl add fsubrs cmp mov das rolw xchg dec sub sub cmp push pop es mov stos test cmpsl sub jne,pn imul xor ljmp xchg movb imul mov lods or nop roll sub scas xor xor cmp xchg arpl cmp push imul dec push aaa aas dec (bad) jne movsb adc jge sub xchg sub sub xchg into pop or sar push test imul inc (bad) or inc inc (bad) xor push je fbstp jg push call pusha (bad) daa sub rcrb sarb push fildll dec stos adc sub cs data16 dec add and add push inc fcompl sub lea (bad) push push inc jg cmp add jbe das mov sti add dec or or ss adc outsl jle aad push push ficom mov push pop gs and lcall in popa sub call dec (bad) jg jbe jnp or sub loop push lcall outsb mov lret inc into test inc ret dec (bad) (bad) lret dec ficoml mov push rcrb fistpl mov jecxz loop out insl out jmp cli mov cmp mov jno mov sti jns roll (bad) leave (bad) or lcall adc xchg fstps ds mov mov out stos ss divb cmp out inc lret das out and shlb (bad) out cld imul hlt jns jb jle xor dec aaa jl add dec cmpsb pop pop sbb cltd xor test or adc loop xchg repnz (bad) cmc jb lds pop lahf ficompl jg clc movl sub push push loopnew push ja gs pop mov and xchg lcall inc cli inc sbb pushf or jp xor inc jg imul jg pop add (bad) outsl insl push dec mov push jns,pn jecxz sub jecxz fs aad adc push or mov test lahf pop xchg aas dec inc xchg adc dec xchg and lods out test pop or xor je inc cmpb insb and add pop jge adc cld das bound into pop out scas dec je mull or pop jo mov inc and loope in lcall out arpl mov pop xor aam push decb mov xchg sbb fwait jbe dec jle pop out clc sti jae lcall dec and rorl in mov sub sahf push nop inc shrl dec cmp mov cmpsl in mov jb inc pop or out mov and sub psubsb sarl pop pop xchg movsl jnp pop popf lret pusha out add movsb lds jle js popf sbb dec inc scas mov or lods add xor xchg jmp ss aad sub clc mov lret ss or jg call dec mov dec jo add es popf dec xchg (bad) push sub lret ret iret stc or mov insl es mov lcall inc loope or call xchg push jg std push push cmpsl pop or out adc fwait xchg dec test pop mov jle (bad) mov mov ja dec xor pop cmpsb sub iret jo imul in fwait mov sbb vmread cltd je jecxz cli dec test add outsb arpl add pop cwtl jo mov call jo xchg mov inc add sbb int3 sbb (bad) aad xchg leave insb in shll rcrl aam push test stos push rclb pop fisttp pop loop sbb inc imul xlat pop adc push rol or inc out cmp outsb cmpsl (bad) push outsl sbb (bad) cmp addr16 pop xchg dec aaa add mov mov decb mov pop xchg fidivrl dec jecxz addr16 lret xor and pop jmp jo cld xchg xchg dec aam addr16 sahf dec pop jno cltd xor mov jle xchg mov (bad) iret push pop (bad) jno xlat movsb call mov leave mov lahf fstps mov fbld lcall xchg mov test push add dec cmp cltd je pushf xor and add push mov stos cmc (bad) test out mov out leave insb sub orb add push pop mov jp inc inc pop enter or dec xor push (bad) pushf mov out jg hlt call xchg fldl les lcall ss lret push out nop add jp adc cmpsb cmp (bad) fistp mov inc cmp mov enter and xor push push icebp fnstcw add mov ret pop pusha stc dec or jno andl dec or dec sbb or sub test mov (bad) lods ja dec xor push sbb sarb dec xor or add repnz push idivb mov sbb adc inc inc test out and out in test pop mov pop jns mov iret mov ror (bad) cmp gs hlt xchg mov outsl jp jb sbb addr16 test xchg fstps xchg stc mov gs hlt lret mov jbe sub pop or sbb mov jmp cmp jl mov and sub xchg and ret scas int3 mov xchg (bad) mov cwtl push (bad) jns and sbb push push fs add adc (bad) lret push ja dec sahf psubsb out push (bad) dec or xchg push rolb bound cmpl and push les imul rorl mov pop add push mov sbb sarl test mov insl xlat mov dec mov jp jne arpl mov enter xor inc leave repz jno jge and pushf pop xchg out jp dec and jne pushf lea sub mov pop push xor stos jb xchg sub movsb out out push insl mov out pop add sbb adcl test dec or arpl es (bad) jne fmull cmp ret gs xchg mov push or pop add cmp into (bad) or add push mov insb sbb sti popf push pop out jnp xchg xor rcll insl and push mov add sub fs pop scas test in add and jb sbb sub popa int insb pop push fxch pop mov lahf sub adc push outsl cmpsb dec shrl xor xchg repnz push sbb jae mov push or inc mov adc data16 dec scas xor dec xchg mov sub imul mov jbe (bad) adc pop jb rcrl inc and adc mov imul and ds push sub (bad) push dec pop movsl (bad) cmp dec (bad) lret lock push gs bound push das mov insl fdivl cmp movsb or insb mov test sbb push or (bad) ljmp xchg loop push sbb push add mov popf xchg sbb std adc loop jb cmpsl (bad) and sub xor inc imul inc or sti cmp and enter dec sub lcall xchg je xchg and fistpll lcall sbb mov aad adc andps and outsl jp fmull ja cmpsl addl xchg mov or imul dec push sub push imul jl (bad) cli movsb loopne push push push (bad) dec test imul pop (bad) (bad) xchg dec inc pop add cmpl loope (bad) sbb sub xor lods or ret push sbb mov inc mov mov mov xor or ftst dec imul es int cld jle repz lret dec dec dec and lcall dec push inc lret jecxz shlb and sbb ljmp add jg xchg stos jl,pt lods dec xor das lock loop je xchg sbb jbe mov sbb (bad) sub push add lods sbb inc cmp lcall ss push fisub scas lock (bad) (bad) dec je or push and dec xor xor cwtl jl xchg test cmpsb out sub leave cmp or jle sbb inc and adc or push cltd xor adc add repnz inc inc into pop aaa mov stos xor adc repnz repnz shr data16 or in cs lcall mov sub ljmp pusha lret scas sub adc scas shlb push into shlb mov mov cmpsb sub (bad) cmp dec push in cltd xor push cmp lret mov pushf loope fmull jbe mov cs in imul mov scas clc lock push pop or inc mov push ret lcall roll cmpsb in adc (bad) jno xchg stc jb movsb xor movb sahf add jb push inc ret push rcll lret outsl les sbb sbb ja ljmp cmp dec rorb nop dec mov jle inc inc mov dec (bad) push inc adc leave call or add addr16 jle (bad) dec add or inc (bad) dec adc add cmp aam fdivr inc inc dec pop test inc xchg push call dec mov jbe gs scas lret push addl inc push or (bad) mov mov stos rolb popf insb push inc add xor aaa (bad) cmc lret leave add dec adc cs and std sarl and push inc addb push dec dec into or cmc movsl int jg add sbb pop mov lds das mov inc clc pop lds dec rcll adc adcl mov jp inc (bad) mov fimull lret jnp cmpsb sbb inc ss or and xor test and mov outsb inc mov dec jb sub lock lcall (bad) dec add leave push aas push mov mov pop jp popa inc stos mov dec lds fwait cltd dec dec (bad) pop and sti stos adc adc inc in push cmp mull push pop add pop sub sub mov mov xor sahf stos cmpsl loopne (bad) loop dec out pusha mov jge xchg inc aaa adc adc dec loopne or push lods push in loopne in dec xor clc and addb push fldenv dec mov scas sbb aad sub rcl jg stc dec cmovge jns js into push fdivp dec cld xchg and inc cli dec (bad) test add pop dec lock pop inc nop inc mov add pop dec pop and mov jp inc mov push cmpl inc mov add pop dec popa neg sbb inc adc ja pop std rorl bound jp add fs ss clc mov fidivl mov flds rorl push mov ds loope shlb in leave jb scas cmc test stos lods out sub dec jne xlat dec out jg jmp je stos dec bound (bad) data16 xchg test lock or cmp push (bad) dec mov push lds add lods lock sub btr jns (bad) aas scas push dec aaa jae jno call test cmovl leave or inc inc es call leave sti cmpsb mov pop pop add lret jl inc lds pop xchg mov popa xor cmp or or jb scas inc and mov es sub popf mov aas leave decl mov add and add or and jmp mov or enter pop scas cmp dec test cmpsl lock push add call jl or jge pop and sub xor jnp fwait pop lods cmp das je sub sub sub sarl mov je fistp popa add mov jnp dec int3 out inc cli add aas jo test hlt mov lods repz fidivr inc xchg sub fnsave xor dec sub stos jge or arpl add icebp test sti jb inc sarl pop xor jmp mov xchg xor int fs mov aaa jae fcompl gs mov cmp daa inc call in and xchg push cmc dec xor std sbb je cld xchg (bad) and fcoms sbb pop (bad) push dec daa sub andl pop (bad) push xchg stos dec sbb das add jmp (bad) ret mov aas push cmc out xor jecxz xor inc int cwtl gs xchg mov inc xor jno cwtl cmpsb (bad) lea jbe stos inc ja cltd into push cmp fstpt sub mov (bad) xchg dec mov xor and mull (bad) xchg add or mov adcb add movsl xor sbbb mov daa pop dec iret and and push movsl inc insl adc pop push xor and fdivl cmp and pop cmpsb sub push and and mov fs mov frndint andb mov sbb cli push inc xchg push leave jg cmp pop je inc out pop cs fnop pop mov and inc fstl enter popa lahf cmp dec or addl push loopne data16 (bad) dec pushw push inc adc scas and test addr16 inc adc push mov (bad) dec and and push mov sub jno pusha cmpsl je fistl iret aad ret lret outsl adc (bad) mov enter push stc xor dec xor dec push and mov and and (bad) mov popf pusha mov xchg jne dec and fildll int3 jle push xor add test addr16 aas hlt cmpsb jns pushf fisub je into mov and sbbl mov sub mov xchg rorl and dec and outsl repz pop jnp fidivrl stc inc xchg pop (bad) es sub dec mov sbb int3 mov int push sarl into es aam mov pop test sbb stc aaa jne (bad) lret xchg push cmp scas loopne gs mov stos and divl bound and inc mov imul sbb lret ja inc scas (bad) es xchg and inc mov push loop nop notl out movl inc loope idivl fidivr jnp adc pop pop lods outsl imul imul inc insl xor jnp sbb cmp inc ror aaa or inc sub xor lret insb dec frstor sub xchg xor dec fcomp fdivr and dec mov ret std nop mov cmp dec pop xchg ja lds mov repz xor inc (bad) xchg cld add cmp push xchg or iret push xchg xlat pop dec push mov mov inc mov mul decl lret sub lcall jae stos and cmp jns jbe popa call add pop and (bad) pop shll add aad loope (bad) mov pusha popa pop push inc loop imul inc jb (bad) imul test test and aas cmpl and dec sbb xchg cltd mov imul popf mov sub std rcll notb add xor and mov and cmc jmp pop push movq pop xor push gs insb inc inc and push andl push mulb clc rcl bound stos gs jae push jmp (bad) (bad) dec pop pop dec ret leave scas jnp bound jne inc mov repz rcr adc mov and mov (bad) mov test in fisttp mov jle dec pop jne or cltd imul stc scas repnz imul pop scas enter push pop cs sahf inc mov cmc in repz dec imul jnp cwtl pop pop inc dec and insl mov test add ret sbb (bad) mov jp aad dec mov xchg dec dec test add pop pop sbb mov mov lret dec or mov cld mov out ds fcmovne loop and stos cltd and xor stos dec js mov and push daa arpl xchg pop xchg mov ja cli mov push sub dec jb mov lret rcll sub fisttpl je and lods in xor add jmp mov subb ret fistpll insl xchg (bad) mov push cmp cs ret test mov cmp xor popa push sbb mov pop imul lret and mov (bad) in and ror bound mov jge jmp or sbb dec push rolb sub mov adc jbe sbb gs sbb jle jmp inc pextrw adc mov and push test xor popa (bad) jne cwtl add divl adc mov xchg pop pusha int sbb mov mov sub pop mov jae loope xchg xadd repz dec int3 call pop rorb sub pop adc pop mov and push pop adc lods in add dec in (bad) repz xchg out cmp pop test sahf push push add sub and aad or xor sbb lret mov jle pop xor int icebp fcmovnu pop (bad) jno dec ret js pop clc dec add pop fwait adc stos into xchg lods emms outsb mov scas sbb movsl movb insl push int3 push arpl pushf lahf pop cmp pop cwtl sub sbb add pop flds mov je pop pop (bad) xor push dec fwait mov les (bad) jnp into and mov add sbbl push in adc outsb mov inc xchg inc cmpsb (bad) insb pop shll mov loopne dec jge enter outsb inc inc rcl cmp les sub jbe or cmp lret inc inc inc inc pop hlt inc inc inc (bad) aam cmpsb movsl inc (bad) rolb jne mov adc mov or inc ljmp (bad) outsb test les (bad) insb mov mov test lds lds cmp xchg inc scas fiadd inc mov ss sbb movsb ss (bad) ljmp in mov cmp aas sbb sahf jl inc jmp test cmp inc fldt sub push (bad) js dec out add (bad) add dec xor lret push xchg and out mov inc movl loopne test add in adc inc (bad) push or xor (bad) adc xor in test inc stc popa inc addb sbb xchg jbe lret sbb add or mov inc dec jae push xchg push mov jbe into inc and lods ljmp xor iret cmpsl mov mov jbe or mov push sub dec pop push mov inc sbb push xchg sub into inc add mov mov inc ljmp dec mov sub add inc imul mov inc xchg dec dec pop mov inc inc dec xorl push pushf int3 stc mov into loope sub int3 jo mov adc bound sub fs iret pop into pop orb (bad) sub addr16 (bad) jbe enter or push push mov jne jle mov daa inc enter xchg adc mov out lret cmp repz mov mov mov cmp ret loopne mov repnz adc add ds not pushf adc addl dec xchg cmp ljmp mov fldcw adc pusha mulb sbb bound inc lret lds adc stos cs cmpb insb xchg jp dec cltd mov adc lret jl fmul and rsqrtps mov push inc mov xlat inc fwait adc fdivl mov out sete lea push lock dec xchg add imul mov enter sbb dec (bad) fimul movsb mov cli adc jo and dec in inc pusha adc or push inc or dec xor push or lods adcl inc jge mov lods dec imul cmpsb in daa int popl and jb push scas sub push fisttpll lods out push and das sahf pop pushf fmuls xor sbb cmp gs inc lcall xchg (bad) jmp or add add push addr16 pushf or mov mov popa aam imul jb mov out mov lea push xchg insl gs sbb fwait jns es iret jne pushf xor or mov or fistp push push into sbb push imul dec inc dec dec rorl inc push inc dec pop or (bad) lds int3 adc pop out stos fstl repz mov out leave inc dec gs jo jnp iret les inc sub dec mov mov or and int3 cld mov inc pop pop andb ss dec adc inc sbb sub js xlat pop mov inc xor call in ret arpl cli inc inc add and inc insb jae pop and add push push repnz add adc dec and pop je mov and (bad) (bad) fimull fcmovb adc jae or jl pop sub fcmovb push rcll push lret sbb repz leave dec mov fwait daa mov push push lret cmp inc (bad) stos adc (bad) pop sbb movb adc pop push pop jb mov or je fcomps addr16 fldl sub pop inc and mov push aad dec pop aas pop push adc cli xor jne rorl sub ds adc idiv (bad) (bad) enter sub inc push jae imul xchg add pop ja adc dec (bad) dec dec pop jle mov insl enter cmpsl mov gs mov repnz dec andl pop pop add jnp adc imul adc aam fisttpll dec inc test dec add daa lret mov and mov and ja pop fiadd inc sub push shrb pop insb inc jmp js jmp xor add ss hlt fistpll sub dec les mov dec cmp cmp (bad) out movsl ds xor push add nop leave xchg adc in or sbb hlt inc adc repz and cwtl push adc push cmc ljmp fidivr jo rolb xchg and movsb fwait sub dec dec in xorl addb fwait pop test test sbbl and stc adc adc push rorb and push inc pop mov adc nop push xor ror and add mov pop inc fild pop test xchg push pop test push cmp scas push sub mov stos aam gs (bad) pop push (bad) mov fcoms cli inc scas cmp or dec (bad) xchg vmwrite or adc sub pop (bad) sahf imul ret push inc sub cld mov pop addl sub stc pop popa jbe enter xchg cmc not int hlt pop mov jecxz inc cmp or insl mov xchg mov (bad) jl int3 inc xchg jb dec adc xlat sbb clc add push inc (bad) lds lret mov in push andl adc cmp loopne jg es loope pop or mov jmp (bad) rorl sub pop jae call fs leave hlt sub add (bad) iret sub dec loop inc adc rorb inc xchg data16 xor push add or enter push and dec cmp movsb push test mov mov mov push out jg jle dec pushf adc push adc aad or loope dec or idivb lcall sub (bad) cmpsl jp push xchg mov imul dec mov sahf add inc adc lret cmp or js (bad) cmc fs sub es xchg push (bad) (bad) and jbe addl cmpsb aad addr16 inc dec sahf mov and or imul jae ret mov pop adc insl movsb (bad) or sbb dec fwait xchg xchg test mov adc cmp add faddl fsubrl mov cwtl add pushf bound sub dec iret mov add and stos insl xchg sub stos fimull leave out fstpt addr16 inc lahf pop inc mov mov mov insl xor pop mov xchg or and cmc imul pop stos inc mov jl push ljmp xchg mov xchg pop data16 imul push jle xchg sub xor (bad) cmpsb cmpsb adc js inc fcompl scas enter pop push outsb sbb repz dec xor rcll xchg fs push jp inc jg sub or leave fsubs sub jno adc pop dec mov stos dec addr16 jle adc scas xchg xchg int shlb pop cmp sbbl sub inc std push repnz xchg xchg jge dec outsl dec cltd sarb rolb push andl pop dec (bad) adc popf sbb jne xor push ja add add mov mov add dec sbb fisub gs addl stos fsubl push outsl lds sbb das pop jb inc or mov pop adc sub pop iret aam (bad) rorl pop push outsl iret dec push dec iret inc push push loopne sbb mov fildl dec lret dec adc roll inc aad push fiaddl inc ret dec xor into inc add push fmuls out jbe lods inc add inc adc (bad) dec adc loopne cmp dec jge arpl inc adc stos dec and fdivl push je push pop cs outsb jae les in cmp dec mov cmp insl push decl jno pop adc add fsubs aas fidiv add movsb push push gs addl pop fimull mov lods mov cmp fimull or jle or ret xor mov mov ss add call dec lock mov mov pop loope sbb dec mov ja pop jp test cmp add mov jnp movb jae imul stc xor jbe rclb inc iret or out push cwtl test adc add pusha xchg lock cmpxchg ss mov popa (bad) imul push ret shl pop sub add push int (bad) dec xor add dec adc ret jno fs lock dec ret inc enter ss mov loopne and popa call aas xor cwtl adc fistp aam xor pop adc jge jl push mov xor ds daa pop out jbe sub cmp ret jns cld xlat (bad) popa (bad) je sub es xlat dec adc push add jbe dec dec (bad) push adc repz sbb ret inc lret outsl (bad) fimull jns shrl outsl ljmp pop leave mov repnz mov lret insb (bad) cld sbb outsl leave pop lock pop pop push in mov xor sbb imul dec sub inc shl adc ret push dec dec sbb aad or jno jg enter jo ret pop pop push adcl push aad aaa inc cmp cmp inc ror push jno popa sbb pop mov xchg jns jae cmp pop fdivrs inc dec (bad) fimul push int3 xor ror sbb and sbb xchg (bad) (bad) push adc or inc pop inc fsubrl sbb mov popa loope and dec sbb jp leave xchg adc sbbb (bad) jne je dec mov or insb pop push jg inc or js (bad) xor add sbb dec push stc out mov (bad) dec sub aaa ss add mov or nop or imul fwait mov adc mov mov (bad) cld sub pusha lock adc sbb push pop outsb popf jnp (bad) hlt pop sbb add mov push mov aam cmc push pop pop pop addl fadds inc fidivr inc arpl push pop lret dec rcll (bad) sub pop dec shrb outsb lahf inc adc mov rcl cmp test loop pop fs push pop out inc push sarl mov cmp jo jl mov sub imul (bad) inc mov push pop adc pop cs jecxz adc mov sahf cmp je mov xor dec lock (bad) pop xor mov or dec ret dec nop cmp cmp bound inc inc xor clc add add pop (bad) mov pop orl ss push (bad) lock mov or ss mov push xchg sub jg gs xchg and push pop bound cmp mov mov in xchg xor ret dec pusha das idivb (bad) mov xchg in fnstcw je mov xchg or pop shll sbbl dec fs add mov int mov hlt dec inc dec ss add mov mov add pop adc jns jmp ljmp or mov push daa push sub paddusw cmp push pop inc sbb pusha ret xor dec or movb (bad) jo jne mov daa rol aaa adc pop popf push adc fs out movb cld (bad) or out adc shrl cmp jo xor pop xchg pop fisttp and ja pop ret push or test cmp fiaddl sbb xor lret dec sbb rorl movw adc cmp lods shlb ret aam push repz pop add aaa inc mov mov push push stc jl ja bound jae imul xor dec jb (bad) rclb or sbb adc pop inc pop lret rclb ret push movsl (bad) dec cmp push jmp fdivrs ret jge pop (bad) pop sbb rol lret adc cmp or inc nop leave stc pusha dec jb aaa or jnp jl pusha js aas xlat enter (bad) lcall and shll pop lahf add iret mov ja mov sub add cld hlt sbb push outsl js jno push lods cmpsb push mov xchg outsl and pop dec dec fiadd xchg insb sbb push xor lcall inc push into aaa pop loopne sub dec lahf and cmc mov std aam or mov adc inc ss dec das mov in push jmp or push mov aas or sbb sub inc cld mov lret add enter push push cmp mov call add mov sbb sub push mov mov repnz cmp inc pop jo dec sbb dec sbb mov sbb xor dec push pop fist mov dec out inc and or adc dec lods out mov int sub add add jmp mov dec fcoms pop and rcrl insb add lret dec repnz lea sbb adc lock inc sbbl inc (bad) pop rcrl icebp sub mov add lods cmp sbb and idiv test pop pop loop or out and out and push daa outsb out inc pop pop shrl jbe fisubr ficoml repz push push (bad) jo imul jp loopne mov push sbb icebp and (bad) pop pop pop fdivl mov adcl int3 add clc das (bad) push mov jmp adc sbb inc mov pop out cmp loopne sub js mov jp fs insb es shrl lret subb (bad) into dec cmp je mov dec (bad) mov dec fildl fcompl and fdivrs outsl (bad) jbe fadd stos mov xor push (bad) (bad) bound push add xchg (bad) push jbe ja test rolb addr16 (bad) jmp sub popa lods pop imul mov insb cs pop add sarb es add dec pop sbb xchg dec adc std sub pop pop inc dec dec push mov fstps lcall dec rcrb int add ficomp cmp std jl outsb inc std mov leave cli push mov mov ds dec pushl sar je fbstp ror jo xchg mov lods dec inc data16 pop sbb sbb mov xor add insb cld xchg cli xor pop push sbb push sub sbb pop insb dec addb add movswl fildll pushf mov dec dec inc or js pop inc jno insl pop inc stos les adc push adc mov les push push sub push lock sub (bad) ss lods jo mov dec ss add mov or inc adc ds add ficomp push imul aam cmpl dec bound pop leave push aaa jl (bad) ds clc shll dec shll ror inc add int cld cmpsb lahf inc sbb test sub outsl out test mov test cltd inc lock pop push fadd jb sub decl sub inc test mov rcrb mov xor arpl xchg fsts or pop push out imul fadds or cmp push push in fisttpl pop sbb push and movsb test rcrb loope pop push call and or ds jmp jecxz jo dec aam push push dec (bad) cmc pop lock or imul (bad) pusha cmpsl sarl add aad inc push (bad) jbe out inc ret roll cli add (bad) mov outsb add pop das into int add pop cltd mov push leave pop jbe rolb roll ss les pop inc push ret imul jnp jno xlat dec mov inc aam adc pop shrb (bad) jns (bad) pusha push and jp fdivrs adc test imul mov pop dec loopne std (bad) mov mov jo inc jge jp mov out xlat mov pop cmp sub aad pop call and sbb inc loopne movsb data16 mov pop mov dec int push or adc sub (bad) dec push pop mov xchg inc push xchg mov (bad) scas push push xchg push pop pop shll push outsb insl jns (bad) rorb add movsl lret shrb jno shrl (bad) neg fiadd or xor jno mov xlat push fwait push add sbb mov inc add ss or ss mov in mov loopne in cmp aam enter fiaddl or push rorl dec ret fs insl push and mov or xchg pushf movb dec and jp es xchg (bad) add dec push pop stos mov dec push mov test test dec jo inc sbb popa jp out adc dec or jbe mov std inc or or sbb push dec rclb ret jmp push jae testb or jmp stos add rcrl mov adc (bad) call cld cmp loope leave (bad) mov add dec aaa jnp,pt jmp enterw push pop (bad) adc incl or (bad) cli cmc inc dec jmp inc fildl push jns mov jae xor into sbb adc insb adc pop outsl mov lret ds stos inc add les sub mov sbb popa cld cmp dec xchg push ss add xchg lock mov dec iret std add sub add data16 jnp sub lcall cmp dec lock (bad) jae (bad) les or jp mov jge shrl dec out dec inc jne in loopne fs sbb popf ret lret jbe xchg and add mov and (bad) mov enter lds push aam sbb in mov sbb bound jge movsb sub daa adc cmp add jns dec push sarl pop cmp mov cmpsb pop lock jl adc sub sub add inc sbb push and push icebp inc (bad) in ret sub dec iret mov dec xchg mov cld gs fnsave or stos ret sub cli pop xchg std sbb adc insl lock les inc mov jge mov dec sub mov mov dec sub ss push xchg outsl stos xchg mov aam in ret cmpsb lock dec push pop out jo pop inc dec shlb mov dec in adc add xchg cs pop shlb stos outsl xchg jmp dec mov dec movsl pop insb (bad) test mov js add lahf movb add mov jge jae mov clc jbe inc and das sub pop jb or loope push inc dec jecxz pop and ljmp icebp push aas inc (bad) adc inc mov incl roll push aaa lea dec add test pop xor rcrl fstl sti cli inc mov repz daa or jecxz and push or imul or inc jo,pn dec and fiadd sub leave lock cmc mov xchg add push dec fisttpl movsl test push jb out adc mov lcall sbb fnop inc pushf fidivr and add adc cltd rcrl nop add dec leave push and ret add push stos adc clc nop xchg js in cmpsb subb mov int3 sbb sub push ret or out popa mov out sub push pop stc dec inc push lock inc std dec aad and xor jae add pop loop sbb leave or cmpsl mov dec dec sbb jae lea es push and std pop pop negb in cmp adc mov iret dec imul dec push jmp hlt mov push pop inc imul dec (bad) jns ljmp cmp sbb add es cmp ja cld data16 out std add pop repnz inc pop mov mov repnz inc sub adc fstpt or push int3 jl push cwtl pop sub add sarl (bad) jle jmp pop push clc jnp xchg inc xor fs lods mov inc int3 or rcrl push sub (bad) ret insl test pop ljmp sbb fildll in push jg fstpt enter das inc sarl nop incl dec daa jle outsl ja adc xchg sbb scas cmp cmp inc movsl in outsl push pop push int retw je adc rorb dec mov clc mov or push ja adc jle xor mov sbb inc cli shlb and call in das jnp lock sub xchg xchg xchg lcall sbb inc ljmp ja jecxz mov sub inc shrb cmpsl push adc in jne (bad) cli clc dec sbb pop cli es jle sub leave jp int3 test dec leave pop aas add or dec and stos push out adc fsubrs dec xor es in inc inc mov or cmp mov dec in pop push jecxz (bad) fadd rcr xor push sbb pop add inc enter hlt daa (bad) jbe pop icebp pushf ret jecxz les insb fwait dec lds inc push dec aad icebp bound movsb pop out push push repnz stos xor insb mov push pop xlat pop xor cmc inc imulb mov (bad) lret rorl dec push pusha dec stos mov push stos adc les jle les xlat mov lock aam pop sahf lgs loopne pop mov roll cmc lret sub mov inc jecxz cmp push pop push in rorb frndint push mov in push imul pushf cmp mov dec jae sbb push mov mov mov rcrl iret jno outsb leave pop arpl jns dec jp dec mov mov dec leave push xor (bad) fiadd dec push inc aas and add dec add in xor mov std mov mov fwait dec or fsts push enter jo (bad) mov (bad) inc adc jge inc sbb repz xchg mov dec adc and or mov mov rcll sti data16 push cltd enter popf stc or mov push xlat pop (bad) insb rorl mov mov pop ds stos mov out push shrb adc mov push data16 out pop stos inc int3 jno add repnz pop call sub jp mov pop lds sub mov xor adc fstp ret ss inc pushf aas xchg xchg jo aam subb push mov xchg adc pop jno adc pop fsubl mov inc cs mov insl push mov xor dec cltd sub push dec and iret push (bad) stos inc or iret pop imul push jl clc sub sbb scas add pop insl push cmp sub push dec xchg sub ja xchg mov loop adc jbe adc pop jb adc sub inc and push sbb fwait in cltd mov push (bad) push out faddl push lcall mov (bad) sbb xor jmp xor pop leave leave inc sub mov mov dec adc mov lds pushl lret pop mov popa inc push or and sbb mov rcrb lds adc cmp jecxz (bad) mov push rcrl add cld les pop cmc push ds iret lods cs loop (bad) rcl push sbb push dec mov and pop adc mov in out pop pop je or mov sub push xchg push lret inc xor (bad) lods add adc push or and pop or push pop inc add adc fwait mov pop aaa inc movsl dec xchg adc stc or imul mov jge mov (bad) ja pop mov add fnop push cmp add xlat xlat rolb loopne mov lods inc out dec sub data16 dec cli (bad) repz pop test addl sbb inc sbb jnp loopne fwait inc inc inc iret pop and jg pop rcrl sub lock incb xchg pop sub push pop gs pop (bad) cs inc insl pop pop xor enter push jg sub sub mov lods mov addr16 adc test dec push sbb push mov xchg inc push inc addb xchg pop and (bad) push pop adc pop sbb les pop imulb dec in rcll dec push (bad) pop lds push and icebp inc (bad) jae outsl pop iret fwait push mov lock add dec dec xchg dec cs icebp fs push xchg push aaa jmp add xor inc jmp add push mov fmull mov (bad) imul sub cwtl inc inc jl loopne mov ljmp dec jl adc lret adc cmpsb inc out sub fistp push rclb cs pop fisttpl push cs test data16 rorb scas sti jae pop ja aaa push push call lock push lea popa in and sbb dec mov lret mov pop and push jno inc ss (bad) inc cmp mov rclb xchg shlb jl mov dec ds jmp movsl sbbb out dec and mov and ret xchg add push les outsb cmpsl sub and dec sbb ret sub inc popa jo sbb inc scas cmp mov test cmp xor add loope ret xor sti (bad) dec jge push outsb test sarb inc mov pop insl push cmp imul daa dec pop inc xor add lret std xor inc call dec cmp mov pop stos int in and inc cltd dec outsl insb (bad) inc lret hlt loope push rorl inc fiaddl add fimull dec (bad) push inc xor movsb jle dec and xchg adc push clc rcl sbb dec mov mov cmpsb shrb push data16 pop inc push or jl push add and (bad) into clc jne inc incb scas sbb pop int3 adc dec (bad) or nop lret lret mov lods mov in pop ret bound dec and xor outsb imulb gs dec mov data16 daa cwtl dec sbb xor xor dec lret lret (bad) imul adc pop mov fwait popa stos in xor clc inc cwtl mov sub mov dec gs dec or mov mov or dec mov ja dec cmp out cmp and xchg cmp jp sahf fisubr inc lea imul jae jmp cmp lock lds popa push outsb sbb dec into aad cmpsl ds inc jecxz cmp (bad) js and mov scas je iret jle cmp std and les int dec push in jbe and and jnp jmp jecxz pop adc mov into mov mov rcr inc lret seto fistpl inc (bad) lahf inc mov (bad) dec dec inc rorl jns add ja or into jp in mov add mov dec add jb push push cmp fdivp inc daa gs outsl mov jg dec push push pusha inc sub sbb (bad) sahf cs jg xchg mov aaa and lock inc (bad) mov sub dec daa add (bad) and inc dec jle push stos and ss es in repnz rolb pop insl or mov and data16 push xchg call gs sti das add xchg dec mov xor mov out add rorb (bad) dec add (bad) dec add dec add mov iret xchg pusha sti call hlt ror cmp mov dec push ficoml inc orl (bad) sub mov inc sbb leave out mov (bad) xchg jae mov mov movsb cld push sbb leave call movsl into rolb inc mov lds pop into fmul out mov (bad) xchg jne dec push subl aas and xchg jne dec push subl dec (bad) sub or fmul out mov inc mov les dec repz dec pop das (bad) cmp inc int or arpl (bad) leave ret dec addl mov (bad) mov jg daa inc mov add mov cmpb repnz rol inc mov mov ret add lds dec addl (bad) mov into roll add inc dec into xor xor mov in dec add dec dec inc dec push ds aas xor dec jno inc adc xor push mov movb rol movb rolb (bad) pop mov addl xor dec ret into (bad) test pop xchg sub stos adc dec dec addl adc mov (bad) dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add (bad) or add dec add add dec addb add (bad) dec orb add (bad) dec add (bad) dec add (bad) or add dec add add (bad) dec add (bad) dec addb add (bad) dec add (bad) dec add dec addb add (bad) dec add (bad) dec add (bad) or add dec add dec add (bad) dec add (bad) dec add dec add dec add dec add (bad) or add dec add dec add (bad) dec add dec add dec add dec add dec add dec add (bad) or add dec add dec add decb (bad) dec add dec add dec add dec add (bad) or add dec add dec add dec add decl (bad) dec add dec add dec add dec add (bad) or add dec add dec add dec add cld dec add dec add dec add dec add dec add (bad) or add dec add dec add std dec add dec add dec add dec add dec add (bad) or add dec add dec add (bad) dec add dec add dec add dec add dec add dec add (bad) or add inc add les mov dec add dec xorb dec cmpb dec cmpb cmpb dec cmpb dec cmpb dec cmpb dec cmpb dec cmpb dec addb add lds inc (bad) dec add (bad) or add dec add dec add dec add clc dec add (bad) dec add dec add dec add (bad) or add dec add dec add clc dec add (bad) dec add dec add dec add (bad) or add dec add dec add stc dec add (bad) dec add dec add dec add (bad) or add dec add dec add les jns dec add (bad) dec add dec add dec add (bad) or add dec add dec add les push test lds inc (bad) dec add dec add dec add (bad) or add dec add dec add orb dec add dec add dec add dec add (bad) or add dec add dec add dec add ret inc (bad) dec add dec add dec add (bad) or add dec add dec add dec add dec add dec add dec add dec add dec add (bad) or add dec add dec add mov lds inc (bad) dec add dec add dec add (bad) or add dec add dec add lds jmp lds inc (bad) dec add dec add dec add (bad) or add dec add dec add lds lds dec add dec add dec add dec add (bad) or add dec add dec add lahf dec add (bad) dec add dec add dec add (bad) or add dec add ret dec addb cmp dec subb addb add (bad) or add dec add dec add dec add dec add dec add dec add dec add dec add (bad) or add dec add dec add lcall inc (bad) dec add dec add dec add (bad) or add dec add dec cmpb dec cmpb dec cmpb dec cmpb dec cmpb dec cmpb dec addb add (bad) or add dec add dec add ret in dec add dec add dec add dec add dec add (bad) or add dec add dec add fwait dec add dec add dec add dec add dec add (bad) or add dec add dec add dec add (bad) dec add dec add dec add dec add (bad) or add dec add dec add dec add (bad) dec add dec add dec add dec add (bad) or add dec add dec add fwait dec add dec add dec add dec add dec add (bad) or add dec add dec add cwtl dec add dec add dec add dec add dec add (bad) or add dec add dec add ret dec add dec add dec add dec add dec add push add (bad) or or or or inc add (bad) or adc add push movb or push add movb add dec add dec add dec add dec add loopne add dec add dec add dec add dec add dec add dec add dec add dec add loopne add dec add dec add dec add dec add loopne add dec add dec add dec add dec add (bad) dec add dec add dec add dec add (bad) dec add dec add dec add dec add (bad) dec add dec add dec add dec add (bad) dec add dec add dec add loope add (bad) dec add dec add dec add dec add dec add loope add (bad) dec add (bad) dec add loope add dec add loope add dec add loope add dec add loope add dec add loope add dec add (bad) dec add dec addb add sbbl add push dec inc xchg push add add ja push dec or or test dec jbe fs or jns imul push imul inc jbe fs or or cmc js add rsqrtps fs or or hlt fs or sub sub mov inc inc (bad) or outsl xchg fs mov sbb test outsl mov dec add sub mov jae cltd or dec add scas ds sub das je stos and jne (bad) dec add es adc sbb xchg jb,pt test dec and ds push (bad) dec add dec add dec add dec add (bad) dec add dec add dec add out dec add out dec add fmuls stc (bad) push out add lea and dec add scas dec add dec add dec add dec add dec add dec add dec add dec add dec add lods dec add lods dec add lods dec add lods dec add lods dec add lods dec add stos dec add stos dec add test add mov add dec add mov add mov add mov add mov add dec add mov dec add mov dec add mov dec add out dec add in dec add dec add dec add in dec add dec add in dec add in dec add in dec add in dec add in dec add dec add dec add in dec add in dec add in dec add dec add dec add ljmp xlat ljmp movsb ljmp jl dec add jmp add jmp add jmp add jmp add jmp add call dec add dec add call dec add dec add call dec add call dec add pop add push add push add push add dec add dec add dec add push add push add push insl (bad) pusha add add push add insl add pop add inc add inc add inc add inc add add dec add add dec add dec add dec add dec inc popa mov add xor pop push add cmp repz xor and xor or mov jne mov push or and (bad) or mov jne mov push pop mov data16 cmp sub xor divl sub push push push test cmp (bad) or mov jne mov push or mov and inc xchg xor stos aas fs cmpl sub add hlt jp sub sbb sub test popa sub or sub cmp scas ds add xor xchg inc xor and xor and xor das add movsl aas outsb sub or test insb sub das add movsl aas outsb sub or scas imul or scas sub xor and stos and (bad) or scas sub xor and xor das add mov inc sub sub sub and xor cmp xchg adc or add mov push or outsb bound mov and mov jo decb insb and cmp xchg inc sub and inc xchg adc or mov cmp (bad) or mov jo xchg add adc cmp mov outsb and das jb mov jb mov inc or push dec or and and mov jbe xchg adc or test add test cs xor cmp add mov push or sbb mov das jb mov jb movsl xor scas dec inc or push dec or das popa and daa and mov jo repz cmp xchg push xor dec sub add adc cmp mov push and and jno mov inc or push dec or das outsb and and mov jo movsl xor (bad) or mov jo xchg add adc and push mov gs outsb jno mov xor es ss jae xchg sbb sub xchg adc or mov outsl cmpsl es sub imul cmp mov push add and cmpl sub jno mov add mov push or sbb aas jae mov das and mov jne idivl cmp ds sbb and inc xchg adc or mov outsb jno mov xor das jae cmpsl sub dec and dec inc or pop inc adc cmpl sub jne mov pop push test cmp xchg fs (bad) or mov jo cltd or mov inc aaa mov inc xor or mov jo cltd or mov dec mov sub add mov pop push test cmp addl xor mov jo cltd or mov dec mov and add mov pop push test cmp andl xchg sbb pop jae cltd add xchg jb,pt (bad) or mov jo cltd or mov dec mov dec inc or adc pop or and add mov pop push test sub ds or mov jo scas and xor sub and xor cmp xchg je movsl and test sub movb sub and mov and or dec pop sbb das bound mov dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec add dec in ja call in push push xor call cld push or sti (bad) jg test je pushl call mov mov pop pop ret ficom cmp je adc or add enter cli lock sub aas and pop add add push repnz leave cmp repnz mov xor outsl xor jge xchg das lock push push pop adc push fadds ss xor (bad) popf or push add and (bad) (bad) (bad) fildll inc or add jne sub mov xor and in in idiv push push push or cmp add (bad) dec incl or pop push pop lea mov cmp jne movb fucomi out decl movzbl mov adc (bad) (bad) pushl dec jns mov mov mov shl sar or mov adc jg fiadd enter jecxz shl or mov jne mov clc js fwait hlt add jb sub mov inc mov mov movb leave ret or jmp idiv in roll add add orl fucomp add ret or daa xchg adc mov into mov lds out es mov adc cwtl lea movsl decb mov fildll je fs leave jne push and xor mov or and outsl mov add add movsb jo cmp cld add out (bad) outsb test int pop adc fmuls test jae mov std inc lcall jne jns or sti in push lea movl (bad) shrb sbb rcl add outsb add mov push sti (bad) je xchg or fbld mov inc leave xor (bad) or cmp xlat andl push sub je push and jnp cmpl aam xor push pushl push jp push in test fldt bound ret jne jp pop add push sbb sub sub push roll pop pop cmc pop jbe xor lea push sbb js cmp (bad) mov pusha cmp jbe push xor sub and push (bad) add adc xchg in or or push lea sbb pop xor or fs add test adc xor push push clc pop lods sti cmp cmp push js fcomps rolb stc lock mov or sbb fldt or mov fwait push mov outsl js fdivrs insb add mov imul pop insb mov sbb mov outsl fistpl dec xchg and test xchg xor sbb out mov mov das nop adc xchg jbe inc adcb xor (bad) push adc sbb xor or xor inc nop cmpl (bad) iret rolb clc pop fidivrl sub add jb test add or or aaa icebp push movb call faddl jge (bad) stos stos stos lret fdivr insb mov mov xor sti jg mull or jmp mov lea lea adc add add fildll aam jmp cmp je inc cmp jne and repnz push lock and (bad) pushf mov ja pop or cltd fcmovbe push or sbb jmp inc or es mov and jmp adc add jbe dec adc or test in fist xor xchg adc cltd add jo inc sub jb add xchg cmp int cld clc cld sbb sbb aas fidivl and jg dec mov inc cs push add add data16 add test sbb shlb insb pop movsb (bad) lahf in fxch sub shr inc add sarb dec aam sbbb fcoml (bad) jge test std jbe movb (bad) or fidivr or add movsl adc aas movsb jmp je aaa std push sub push push (bad) cvtps2pi jb das xor sbb fnstenv sbb dec or jecxz flds mov pop leave mov jmp push add push sbb sbb or cmp es (bad) std mov sbb imul call enter mov into rcl xchg sbb iret bound pop and cltd scas dec dec mov push sbb data16 decb pushl jae sbb pop adc int fcoml (bad) insb sbb pop add jbe imul insl insb lock and fcmove int3 mov add imul add adc or repz ficomp or pop jmp cs mov (bad) clc mov in repz mov fsubs mov scas out mov pop mov daa mov fistl aam sbb jmp imul pusha repnz into into popa das enter in pop insb xor or pop add cltd in nop mov fsubl push pop fnsave dec pop mov adc loopne cld mov iret pusha or mov in pop xor push push add jno mov jo jne sbb push cmpl daa push aad push insb sarb in sub pop loopne das out jno sub adc mov mov xor push das or pop lds clc (bad) fnstcw cmp push enter cmp mov cmp pushf sub scas imul ja push (bad) cmp ret push fs dec int3 mov adc mov push sahf roll lea sbb push cmc and addr16 dec je adc ljmp loopne (bad) test dec test xchg mov data16 fcmovnb and jne test gs daa test outsb mov jbe add xlat push mov xor call inc xor jae ficomp testb fbld push push in aaa int3 or lock les push notb cmc je pop and in mov bound mov daa mov fistpl pop loopne out cmp movzbl push (bad) xchg shrb inc or es adc rcl int3 cwtl jb sbb xor dec add and pop pushf sti call mov jno lds pop push arpl xor jl popa in (bad) hlt or sti inc les pushw aaa insb lahf mov movups repz or (bad) in insl enter and jnp sub cli xlat sbb mov xor fdivs cmp je out pop je sbb fs or sbb outsb imul and sbb pop lea mov stos push inc out xor and out mov scas add loopne ja cmc je and sahf add adc jne pop sbb add or into (bad) popf sbb or sbb jne fwait lea push push (bad) fucomp mov cmp pop call add cmp data16 loopne or or add or adc dec push sbb fadds divb or popf ss dec sub ja ret add test lret sub je pop aad xchg and inc mov lods fisttp mov test in cli push int cwtl mov mov test inc pushf mov out xchg and cs test sub pop dec sub cli pusha mov jbe pop jl mov in add mov or cwtl les or sbb sbb stc test aam out jl fistp sti popa xor sbb int3 and out js adc outsb ljmp rorb or cmp xor scas push test rclb adc cltd cwtl ss je test out pop push or loope sbb daa mov outsb roll pop or dec sahf sbb mov ret movsb pop dec movsb ds xchg push push pop les dec inc dec test xchg or inc movsl cmpsb lods and cmpl in mov cmp addl shrl gs xor xchg mov pop and sbb and jb das xor das std pop adc add pop jae jmp mov les pop rolb push or je push add loopne aaa stc js mov icebp dec cld and sub push loope pop add pop push and inc mov inc lret mov add xor (bad) or inc insb jno je pop dec addr16 push or popl jae out out fcomps sbb enter xor or xchg mov inc pop mov xor loop jne push xchg aaa sub mov adc ret popa and adcl push and mov in sub push imul add cltd add or dec cmovne lds adc or ds mov inc cmp negb jne mov (bad) xor sbb jmp dec scas das ret and dec aaa pop push mov xor adc in and mov cmp pop sbb adc inc enter mov mov sbb jno inc inc mov sub add outsb sar sbb shl jne inc lods fiaddl js jne,pn or lea scas push out aam sub call sti mov (bad) xor lcall xchg ficom xor les enter push cli and mov leave in push inc cmp mov lret scas mov lea jl dec add iret insb pop loope aam cmp (bad) cmpl pop (bad) movzwl mov mov out pop lods mov aam int3 inc loopne xor sub out sti adcl dec iret jge jbe push cmp pop or push dec push mov mov add nopl mov sbb jae pop xor cmp sbb cld dec cmp mov xor enter jns ret movb nop add test js push in pop outsl jo je push inc pop fist popf add xchg jno ret pop jge call mov adc cld (bad) popa adc popa jb xchg and ret mov mov into mov mov sbb sbb fld mov test inc mov es ljmp sub les push mov (bad) outsb jmp jmp (bad) mov pop xor (bad) stc adc xchg test mov leave enter cwtl mov add jg push sbb cs adc fnstcw cld and push fwait or push nop add mov fsubrs ss mov jl push cs lea sti (bad) xchg xchg push ja push jb push sahf int mov pop outsl jbe adc mov decb mov sub push mov xor shr outsl lcall roll shl pop out xor inc sub ljmp add cmp jb push and cmc clc std jge sbb mov or jg leave dec fdivrs mov arpl std mov es lea jbe mov pop outsl gs push inc cwtl in xchg movb cltd adc pop push out push and movsl sub xor add negb out mov push std or or mov jno shrb int3 or xor xor aas ret call or cmp jne inc add pop add mov lea inc inc mov add add ret andl lret cli lea push mov int mov sbb lock dec adc or dec lock mov cmp retw insb out leave cmp jne imul mov std pop jecxz cmp cmp add cli jge xlat scas add or mov or and pop push mov popf pop mulb inc mov je pop lea xchg jne out loopne jge mov push pop add scas mov sarl mov or lea jge fnsave pop outsl mov push adc xchg outsl cmp test lea test fadds andl pop adc mov xchg xor sub (bad) lea push or addr16 sti insb pop or adc mov mov add push aas push xchg enter dec aaa push (bad) sarb andl jns and mov lea loopne rorb in ds mov mov push fs cli lret push adc clc adc mov pusha mov rorl arpl push fsubrp fildll add or xchg pop into std adc movl fcompl add rclb sub push int3 ret mov mov enter add xchg fcompl jl das rorl dec inc push jo or (bad) int3 adc imul sbb sub lea xchg and fildl adc jmp inc jae cmp or sub clc dec jbe mov mov push or dec lock lea jmp add mov mov inc cmp rolb sub xor int3 mov and inc decb add pop in xchg popf sti in push mov inc lock test int ss add inc sbb or hlt mov in xchg je cmp or and cmp cmp imul mov add lea orl xchg sub (bad) fdivl test aas jnp mov push das or mov mov push outsl gs push decb push and leave (bad) (bad) data16 sub sti cwtl jne cmp or inc mov inc pop fisubr cld add inc movsb insl sbb mov fidiv or ss cld (bad) lea lret in (bad) lock jl pop inc dec movb nop pop sub push mov arpl add rol cli pop cli mov inc push pusha cli mov push pop je jns icebp pop mov cli xchg adc mov divb out or jo cs push into and pop js dec int lea cmp xchg mov out jb sbb mov jo rol mov cli pop aaa jp test xchg andl and push dec push ljmp pushl dec repnz fwait mov mov pop mov xchg data16 stos stos and (bad) gs push jmp nop inc lcall adc jmp push pusha lahf inc mov cld test inc mov insl leave mov cmp xchg sbbl and cld sub and lods push or cmp adc lods xor push je xor cmp sbb js cld mov mov push shrb rorl dec outsb sbb jns jl lret xor loope lcall rcrb adc fldcw movsb xchg (bad) jae aad sbb shrl sbb inc ret fnstcw mov xlat xor or adc jne lods mov sub adc movsl and add imul je or or sbb jmp or cmp jb push xor mov sub test icebp add in jbe rorl mov pop or adc push push lock and fmuls sub xor push addr16 push mov xchg fmuls push (bad) jg pop clc lock inc xor cmp jl testb sbb daa inc xor mov sbb dec mov mov add movsl or mov push js adc mov test movsl (bad) lret add cmp pop test stos inc mov or repz ret adc jne out dec decl add les mov xor imul (bad) rcll fucomip stos xor mov sub mov xchg fildl push push cmp inc and sub shll push xchg xchg inc push sbb rcll pop or fsubrs lods sbb xorl sub pop add jb cld adc jo dec das and dec fdivs mov out (bad) popf ret jb push jae xor stos push movsl adc je,pt sar and cmp jnp sub nop mov mov add pop or pop pop sbb push sbb xchg jle push aas sub test jne push pop pop ret addr16 cmp sbb adc faddl xchg imul in daa add test scas sub sub dec jle dec pop or in out or test enter inc or test loope add fildll mov jecxz push jmp fisttpll pop jnp lock das sub aaa daa jne out xchg std popa and je and sub jne mov mov ret test out cltd insl jbe adc jne je divb cmp mov lock ljmp lahf mov mov add xor xor mov cmp mov add test fistpl ret or sub jmp and icebp adc rclb push or mov add arpl icebp inc test ja mov (bad) icebp and inc or adc fcoms or dec insb mov add mov fstp std rorl je mov push loopne dec jo pop daa push jb add out rdmsr cmp xor pop pop or pop jbe dec outsb add testb adc or xor inc lret mov push or sbb lods dec mov ja sbbl push or inc and and pop sub jb add adc loop sar test jne popa mov cmp andl mov and jo xchg and cmpb jge mov push or pop jo jbe dec in push jmp sub lods roll pop push addr16 pop fsubl mov or hlt fwait scas clc je sub lcall dec or movsb mov ss inc inc and mov lea mov fadds pop xor sub dec xor push lcall xchg insl add push mov jns inc inc jbe jbe and cmp or and mov cmp mov pop jne dec push lea xor bound pushf adc pop cmpsb enter in dec mov xchg jo ss shrb xchg fstps push or jo (bad) rorb push and jge je fsubrl (bad) jne jbe shrl jb or jbe cmp dec sub push ja mov std xchg (bad) ja imul mov dec insl jge fucomip mov sbb jmp addr16 aad and lock adc mov push sti test add imul in pusha add adc mov ret sub add sub mov xchg push sub iret lock sub cmp mov pop iret hlt pop mov jbe mov or add mov sbb iret ja mov ja push pop push pop popf and push rorl inc imul sub jmp and pop adc xchg push and push test leave sub pop es xchg sub adc xchg xor icebp lahf sbb and and sub mov adc sar in (bad) mov cmp push add sbb adc sub jne pop nopl pop cltd pop enter sbb enter fldcw push cwtl xor stos jmp repz fs pusha ss cmp or mov rcl icebp shll imul push sahf mov lea adc fldcw or adc hlt cmp jns clc clc mov das xor sub push inc adc sub (bad) (bad) mov clc jb jp fnop push jge clc cmp pop mov and fisttpl mov cmp dec enter push fsubrs (bad) jb repnz cmp sub jl sub daa mov outsl jg and inc gs mov adc cs mov ljmp push sbb adc test jae test inc pop clc sub test das mov add and ret (bad) movsb adc (bad) jmp imulb lock jnp xor mov pop jns inc jmp pop sbb cmp adc andl inc add pop rolb (bad) nop adcl pop or mov inc imul ja ss out or das lods jl std inc or xchg aam sbb (bad) mull ss int3 outsb jl jmp movl iret call push in xor cwtl lods push fwait jge cmp mov jge adc or mov out lds mov mov jne orl push in pop scas pop js pop mov (bad) jnp adc sbb cs scas lock aas fistl jge int3 jg outsb mov cmp adc jnp in js jle push imul cmpsb pop adc cmp enter pop and xor andb dec pop stos pop ja,pt adc jmp mov cltd out xchg push inc pushf mov inc lock push push jbe shld call mov out out xchg lret sbb xor adc gs leave adc jns (bad) std xchg jns mov add cmp loop loope or and dec adc inc movsl mov and and pop push cs xlat les movzwl jmp mov mov dec pop imul sbb xor std outsb or cmp jne das dec in adc cs pop lock fcoml (bad) pop sbb push fsubrl pusha cmp fnsave in das sti and fist arpl into roll xchg sub ret jae and mov mov cwtl mov rolb mov imul jnp xchg mov jno (bad) sub add (bad) pop mov xlat arpl lcall cmp lock lods adc sub icebp sbb push fwait xor inc faddl xor push mov pop (bad) sbb (bad) aaa test data16 jnp shlb push pop std movsb mov cmp cmp inc or xchg (bad) mov or test and popa mov aaa xor or and jmp xchg jg mov test push xchg and fcomi dec xchg adc cmp jp test and test push gs pop icebp adc popf or loopne pop push inc jne push mov add mov pop jle add in push pop sbbb adc dec sbb enter sbb cs mov dec jne inc test ret (bad) aam (bad) sbb fld xchg pop mov sar (bad) hlt adc loopne add xchg jmp or inc ss fildl mov or jecxz push push pop mov ret loope add or push xor inc push int sbb outsb cmp test daa jmp pop and pop lods xchg arpl push orl outsl std push mov decl js adc aaa fsubrs rclb or push daa push xchg testb or pop jnp cs fiaddl (bad) aas push jmp mov add xor add or xor in divb aas sub adc push aaa mov aad aas add clc inc add sub sbbb out xor jmp jg lea add fs mov enter fs mov push and sete sub (bad) or lods or loopne aam jne out mov pushf xchg clc enter dec inc cs sar or dec pusha sahf out or jg fwait daa sbb sar lea mov and lock fnstenv or (bad) faddl jae mov shrb mov scas inc sti popf rclb mov jl jns lea cmp ja (bad) fwait in out insl shr outsl cmovne push pop sar pop decl rorl jmp and fidivl sbbl xor and int3 lock repnz jnp xchg arpl add xchg sti (bad) or or mov or enter addl add (bad) or cld or fnstcw push decb lea negl jnp mov imul xchg lret or ss daa sbb nop es sti add test inc sub je add je insb je ja mov repz or pop es pusha jg insb jne inc adc scas and ss ljmp mov jne cmpb mov ret add adcb xor (bad) pop popf movsl mov fnstenv and cmp pop outsl sahf in sahf ss js pop inc int pop push and lea push divl sbb (bad) shlb mov (bad) scas inc jbe jae je (bad) mov and clc xchg (bad) mov daa pop xor mov loop push mov xor adc or sub mov xor ret mov jnp je fnstenv pop fdivl mov sahf add rcrb pusha mov das jne sbb outsl insl add lahf jecxz,pn sub sti or inc test call aas out dec es insb sub mov mov mov and mov sub mov fnstsw add cmp inc cld bound test mov hlt xchg sbb add pop push fistpl fs mov jg clc data16 cmp fs sarl cmp pushf sarb jle loopne ret adc sub sar lret or (bad) es cmc inc xchg mov push imul sub jo add mov jle jl arpl sbb outsb je insl test add jle test or insb cltd inc loope pop inc jmp addl mov mov pop bound inc arpl pop faddl imul imul dec inc insl insl lea idiv add es push add imul jle popf hlt mov (bad) aad popa mov xor mov call hlt push adc addr16 adc push cmp aam addr16 push mov std cmp pop sub adc mov inc push mov xchg xchg jno mov fsubr or out inc out ds stos mov xorb jecxz invd test and fs (bad) out dec out lds sbb add sub sbbl test or dec push sub sub loop push cmpsl call dec adc cmp sub or fldl push insb cwtl mov pop cmp xchg fstps jmp xor outsb sbb push sub cmp daa dec cmp daa and adc xor and (bad) nop xor ret xchg mov cmp jmp sbb push adc adc xor aas sbb shll adc (bad) or rclb aas mov (bad) gs cld adc cltd and and test jg jl fnstcw das jae neg adc neg loope inc pop call test ss mov aas inc add andl inc pop mov or adc loope scas jo lea fs mov sub push je mov mov pop clc cltd push push push push subl pop sbb mov jne cmp mov icebp pop call repz inc xchg outsl or sub (bad) jg push into cmpb je outsl lret (bad) movb inc sub sub popw cmp add inc xchg inc (bad) sbb sub inc mov jg jmp dec cmpb inc sub sbb mov jo add xor add es pop mov add je popf inc nop push ljmp lea adc hlt add pusha mov dec outsb or or imulb mov popf sub addl fs lcall lods or pop mov test gs jecxz les je es or lock insl or outsb mov nop or imul cmp lea cmpsb insl les into cwtl cmpsb jne jmp mov sub loopne sub es add je (bad) mov or scas (bad) notl push or lea pop fwait shr mov adc pop ljmp jmp dec and fwait push cmp (bad) add xorl lods sbb lods out orb pushf and pop push cmp nop cmp add push jo push popa jae add loopne push (bad) add in push push inc add iret and arpl ljmp inc mov data16 popf enter int and (bad) jno push dec add lods fildl xchg xor clc dec cld sbb xor pop jle dec or cld adc mov push mov dec cmp rcrb hlt clc stos push add add and adc push jo sbb xor pop fistl jp stc inc cmp xor mov shlb int sbb add mov inc mov div lea pop adc push pop mov push das test or sbb shr fcmovbe and or dec pop lahf lret ret fistl mov or int or jbe (bad) push or stos mov mov mov jmp movsb and insl in sub push lods mov jne loop sbb shl push or ret lcall adc add lret je test push adc sti add jmp fcoms shl push or ljmp xor add add xor and jle aad xor cmp loope jne and fcompl add and mov jbe inc cld cmp je sbb cmp je (bad) je add adc dec push aam xchg sub push pushf adc sbb pop xchg sub fildll std inc cltd inc stos (bad) fwait repz lock push inc and or add jg in mov data16 fist mov push lea cmpl loopne xchg jecxz push mov add pop jo enter js sbb add orl std test pop inc jmp cmp mov jmp or jne rorb test dec add sbb std add and in push lods rorl sub pop or and xchg mov mov jmp and adc ss (bad) sbb adc andb in mov movl lods mov push clc fwait lret or mov and push or (bad) lret sub mov add decb insb xor sbb inc mov aaa stos dec adc sbb mov ss add clc jbe add hlt mov jge and sbb or mov sti jmp pop mov imul add jo lock cld decb sbb (bad) cmp jge add or loope jmp jbe lahf notb mov je shr adc (bad) jne xchg aad stos add mov (bad) sarb pop jb pop cld (bad) cmp inc and jmp and lods cmp mov jmp test lds sbb cld inc cli or adc clc addr16 xor and jbe push lods and mov xchg adc mov cli lret gs jp les mov dec das dec ret lahf cmp dec (bad) jb xchg sub add add or mov mov pop arpl lods or repnz mov xchg adc (bad) je adc addr16 and cmp bound mov xchg jmp or sti lods push push add add jl sbb inc mov add shlb fmull ret jle cmp jb ficom rorb jle pop hlt cmp dec int3 sub (bad) imul fldenv add ds out nop scas ljmp iret xchg sbb add push mov cmp xchg mov jo out add sbb mov jbe push xor push and or cmp xor lret test xchg sbb mov rclb jle adc lcall aam rcrb fstpt aam faddl xor or sti jb pop cmp je or in arpl pushl adc adc sub out fdivs scas xor pop xor push inc sub add push mov add imul loopne loopne popf dec sahf shl mov rolb (bad) cmc mov adc and (bad) lahf adcb popf nop dec movsl pop inc mov mov sbb sub push add xchg adc pop leave sbb inc insl int3 add xchg lahf mov adc loopne pop push lock xor pop push mov clc aad pusha scas xchg cltd lods add mov aam test xchg fistpl andl cwtl push pop rcr addl xor les movb clc push cli add or add or mov inc lret punpcklwd dec sbb push call mov pop or dec bound inc dec dec dec add dec xchg mov lret cmpsl inc (bad) xor (bad) outsb je mov sbb mov inc jg int3 fdivs into add lahf and (bad) ja enter hlt ffree mov in jmp mov loopne mov and add and push push sbb inc fcmovu push sub or outsb pop mov and push adc mov push mov pushf fldcw jbe or out or cwtl pop cli loope mov insb dec or out and lret push or movsb cmp call adc imul lods mov adc or push push mov push inc sbb lret testb mov sbb or insl mov shl or inc adc clc (bad) out sbb sub into mov mov inc dec jne xor mov mov iret adc jns adc sbb push insb adc mov sarb add mov das add mov or inc and out adc lea add push sub inc push lea pop cmpsb push sti mov sub inc add insb (bad) je in int3 mov or cld outsl push push inc roll push cwtl mov xor xchg push push push pop jbe push xor dec xchg popl add lds and add xchg mov hlt push orb pop cld pop add stc jg cmp adc dec mov pushf push sbb bound jmp jmp inc mov (bad) je lahf sbb or incb add lea adc ja fs addr16 xchg push lea jmp cmp or loopne incl iret jb xor jl push push incl les setbe mov pop (bad) jo jg ja aad inc mov outsb or clc and add cmp bound hlt sbb shl cmp push loop pop mov sub addr16 push push or mov lock xor cltd orl mov push (bad) in aad pop dec rolb inc add cmp std jne (bad) test fistl cld dec add icebp mov jmp shll (bad) fcmovu xchg push mov inc clc jo adc mov popa movsb fisttpl test loopne je jle jecxz lds aad fdivs cmp and inc iret je or jge lds test cld push ds lret add cmp inc daa xchg cmp and sahf jae mov jbe stos aas rclb outsl jne mov (bad) or (bad) xor aam sub mov xchg or imul mov xchg mov inc mov stos mov xor sbb loopne adc dec fnstsw or dec add dec ljmp cmpb rcrb mov mov cmp sub inc or insl mov and push mov js mov pop mov and mov mov jne mov and mov sbb das or jbe pop jle xor (bad) aaa cmp mov inc dec jne mov push mov fadd push and jmp mov mov jnp cmpsl cmp cmp mov inc in jo pop adc jmp push (bad) hlt loopne or fsubl and jle mov repz sahf test jno push and sub add pop idiv xchg mov fwait adc add mov mov subl fdivrl push cmp daa push mov push sbb xlat testb ljmp popf add insl xchg mov adc lds js add test jae or push cld (bad) mov push jmp sbb dec sbb fnstenv out loopne jmp xlat mov popa sbb out fsubs cmpsl mov int testb xlat rorl movsb pop push fsubr xor jmp mov flds and jns testl push adc ja movl les push pop in add push or mov rorb add fadds les mov sbb add push popa movnti or hlt adc push ljmp xchg xchg mov xchg xchg add pop daa push inc mov xchg mov push push daa (bad) pop cmp jne or jbe daa (bad) pushl and add mov or int repz mov inc inc mov fldcw les int3 jbe cs xchg sub adc or dec rorb mov push jne cmp lea aam mov cltd test pop test cli xor cmp jnp test inc add add (bad) mov sarl cmp stos bsr sub mov das sar add cmpl sub sbb push pop test dec cmp xlat pop addb inc and and push jo test pop loopne fwait sbb sub mov sbb pop jmp sub add inc mov (bad) fcomps and fmull and and movsl arpl xor push push sub mov or xlat mov in inc jmp ja push sti mov pop out mov or fnstenv data16 or std inc push dec add add adc sbb and sub pop adc inc rcrb or insb scas xor faddl mov adc std and and xor push jp add mov adc cmp cwtl cmp inc inc cwtl sub and sbb xor das adc addr16 shr or pop mov pop imul pop js addr16 fwait je adc inc enter and test xchg test and xchg or enter dec enter dec pop cmp cmpsb adc lea or jns xchg adc push movsl pop dec ss rorl push mov pop cmp int3 adc inc push push adc or pop ss into mov push mov clc ja xchg dec mov lods insb and sbb cld or pop or dec sbb add aad and mov mov cmp adc mov and add mov add cmp mov popf nop mov shlb xchg xchg add mov sbbl adc shll and dec lcall xchg lret xchg int ss xchg aad jno add iret xor push push mov sbb pusha push adc pop pop or in mov dec call dec es jae mov push adc jns push cltd fwait xor xchg mov addl ja add push pop loopne in sti inc lcall push mov xor pop int3 or jecxz inc out mov push mov pop std movb adcl xor xchg sub leave push cld stos inc push fldt or clc push push push enter jo jecxz or cld cmpsb outsl cwtl and mov mov push mov dec stc xchg mov mov add add mov add loop pop bound jmp cmp mov (bad) mov fldl and adc mov out sbb add adc mov or add lret inc xor sbb jl push pop and pop rcr call popf mov out shl push pop (bad) jg arpl xor inc cmp mov jmp sub into pop int3 in jbe sbb iret jp pop test cmp dec test fistpll lock xor sbb sub lcall (bad) inc mov orl jo add and pusha cli movsl mov insb add dec das and bound xor icebp mov jp xor sbb outsb add shr or cltd lods das cmp ljmp jo xor xchg dec sub sbb lcall hlt add lock inc cmpb je mov cmp je cmp mov mov je mov or mov sub mov mov outsl inc inc outsl addb push push ret jg add lods mov sbb lcall fcmovnu fcoml push (bad) or or je pop sbb lods lret sub lods test sbb jnp icebp or pusha xor ret inc into push sbb push lods pop inc lock add fdivl add repnz jne push and outsb jne je icebp xchg mov mov je xor push inc add ret add fsub mov jne or jmp cmp cmp imulb adc jle mov adc xor or mov js loope popf and push ret fsubrs daa mov xchg or xor push mov mov jle push sti or jne sub xchg fnsave stos aam add iret nop insb daa push lret cmpl push pop arpl cmp insl lods adc cmp mull jmp push push push push mov push and mov inc add sub insl mov lret sub add mov add pop pushf mov push stos cwtl fsubl mov in add loopne xor (bad) lret (bad) xor lea cmp and fiaddl test jne test inc std add mov xchg ja pop xor sbb xchg xor or inc mov aas sbbl push ja jmp aas in jne xchg loopne push and popw xor cmovp sub xchg pop add jle sub (bad) pusha dec rcrb sbb shrb cmp popa mov cmp push andl xchg jp pop pop add orl popa adc jle or rolb ficoml into and and push push push push push xor sbb and fs rorl or push push mov push pop mov dec bnd lea arpl divb pop mov or int3 fcompl push js subb std ret or jmp popl fidiv testl xor or xor rcl jp subl je adc sbb jle pop and mov mov sub add add sub call icebp push mov popa sub lahf push fcomps xor pop push ljmp mov and out pop loop inc push in push push mov in add sbb xchg cmp pop or es or and inc jne jne sbb test out add push mov and add (bad) mov mov xlat das pop test push rcl or sub pop or mov (bad) xor (bad) mov or inc loop pop push lea psubsb push pop pop pop pop insb jmp mov and cmp pop mov scas popf mov stos fcmovnb push int push or cmp pop popf xchg sub xlat sbb stc add int lock jmp inc push adc or stc test dec push pop lds rclb pop loop cwtl pop push in mov test add sbb andl add movsb (bad) loopne cmp repz int fsubr sub in in pop mov sub and fstp or shl mov lcall pop jmp sbbl cmp test inc push add sub mov pop je mov add mov mov push decb sbb inc hlt add and (bad) lds or adc imul lcall add adc xor inc push fldt xor or push jecxz or pop cli mov mov mov push sub mov mov inc dec mov mov push ljmp ljmp js push mov das or mov insl (bad) cmp push and in aas mov adc sub xchg addr16 and sbb add or push (bad) pop pop fadds and (bad) sub fwait add test mov ss pop int3 xchg dec hlt lea dec mov insl and or loop cmpb int3 or add call insb ret sub rcrl and jae cmp das push pop aad in cmp mov inc (bad) mov xor das dec cmp jae lea cmpb mov jle adc dec mov jg insl incl orl mov or mov sbb dec fistl dec aad pop pop mov mov jle dec decl cmp cwtl popa enter push mov int inc nop (bad) (bad) inc js lods sbb ds inc in in and mov mov scas push mov inc adc or inc scas jbe push mov jg jl push dec pandn push jge inc cmpb push lret mov subl jp adc add fsubr inc ret (bad) mov negb push xor cmp and or sub adc cltd hlt push fldcw sub adc inc in adc lock out scas dec sbbl rolb mov dec in (bad) mov and pop or ja add ljmp adc xor rorb push mov jmp movsl adcw sbb arpl arpl push flds pop adc clc or pop inc jge arpl mov fcmovu cmp paddd add sbb pop or pop xor (bad) imulb adcl and enter sub inc sub divb popf popl sub or and xor jmp cmp sub in and incb out fdivrl pop sahf lea mov push or xor sbb xchg (bad) mov push repz in lods addl addr16 jg push pop gs add subl pop sarl inc add inc push fadd js sbb adc xor mov stos push sub je sahf in and sbb into test cmp outsb std adc fs push call das and inc push sub xchg mov push mov aam test push add xor sub jns adc pop pop das stos inc pusha orl fidiv or jmp sbb pushf insl (bad) sub sbb mov stos fs push pop push and jne int3 cmc or cmpsb (bad) and subl push mov add xchg mov inc lock jb neg arpl sub cmp int or mov test lret mov lret add stos pop jnp pushf mov daa ljmp add je je ret test sub push mov lock int xchg dec adc jmp sbb stos xor vaddpd test cmp xchg (bad) or jae fist push mov (bad) cmp and mov push lea pop addr16 add cmp mov sar mov aas add shr and (bad) aaa pop sbb sbb pop aam int cmp jo add push das mov jno nop (bad) es add or iret inc fildl dec push and popa fnstcw add iret xor mov cwtl fldenv pushf cmp push popa sbbl jl pop pop sub xchg test iret add daa xor or rclb addr16 mov sub mov xor sub js and mov std stos std hlt mov andl hlt push jmp jns jg les push sbb sub add arpl insb movsl sahf push jo pop sub test cmp inc decl mov push cwtl or (bad) cli lcall lea push arpl pop add (bad) cmp int cmc xor insb dec sub mov cltd packsswb cmp jno add lea cmp sub mov jl incl push add add add test or add cmp xor ss clc jo cmp mov xor cmp rcrl mov fisttp mov jg call jo sub cmp test pop sbb push add sbb pop push (bad) sub xchg pop pop mov loop outsl or movsb pop mov and push mov sbb cmp mov pop test imul std leave lret xor sub xor pop mov es pop popf loopne or mov cli dec xchg add adc adc es lret xor lock sub and adc inc add fiadd fadds mov fwait sbbl adc loop and pop nop (bad) mov inc add stos movsl btc fcomip cwtl mov inc stos adc out aam fisub sbbl mov movsl adc jo xor in mov adc push adc cmpl add add push cmp jne pop mov fs fcom stc pop cmp cmpl xchg in mov mov cmpsl mov xlat loopne push aam test and inc xor inc mov aam xchg jmp dec aam inc push sub ss fdivl das cmp aam es inc xchg sti mov test add mov sub jg jmp adc adc out or or mov dec cmp push push xchg insb push cmp sub dec cmp insb push inc sub adc inc dec push sahf mov adc mov aas sbb and fs xor adc dec or add xor adc and scas inc je outsb jno or sti enter fucomi and push jne test cmc and sub sub push pop adc cmpl getsec mov fisttpl std imul jo add ror pop cmp xor cs loop pop push jne les or mov mulb inc xor mov adc test push adc adcl adc xor mov xor cmpl mov loopne out hlt push or (bad) std lods inc sbb das cmp jne inc ret xchg popa jne jnp lcall lret lcall bndldx mov fdivl adc insb in inc jmp nop loopne jo mov (bad) jbe je adc test fmull sub mov test adc rcll cmp jbe mov mov mov sub sub sub jne or pop aaa mov outsl adc (bad) ja adc cmp jb rep jmp movl sbb push in adc sbb add push jbe push jmp addr16 (bad) loopne pop fs adc or add adc mov push data16 mov int add mov pop mov sub gs add add nop and pop aaa nop mov movl dec shll je insb into mov inc (bad) in call dec in in lock hlt sbb xor clc cld cld adc xchg mov clc or push add out mov cmp mov or adc adc sub mov addr16 cld andl jecxz ja insb rcll jns dec xchg stc mov js and addb fstpl imul add outsl push out add add add xchg adc and add lea sub ret outsb popa pop push and sub mov inc dec push arpl sbb sbb adc cmpsb imul cmpsb imul mov add scas and ret ret mov xchg push scas lcall mov inc lret frstor outsl (bad) mov sbb inc sub fnstenv push mov push clc xor sub push rcrb nop pop sub mov nop lods fisubl test sub pop (bad) into add jp les push out out jb push shrl sbb or jl jns pop arpl pop je and inc add sbb andl and push add add rcr pop xchg pop fs (bad) or fistl dec hlt movb pushf inc cmpsl add xor addr16 mov mov inc sub (bad) add xchg inc mov inc xlat imul and inc mov sub ficoml icebp cmpb sbb shrb lods mov pop dec je loope mov or iret vmread mov fsts add jmp pushf outsb adc jl mov xorl mov pop lock mov (bad) cwtl ret out push push xor ja dec loopne outsl push push push fdivrl and jl ja push aas add push add sbb mov push or (bad) outsl mov outsb es pop es mov jne jmp faddl push jmp and push std jnp xchg push and sub push les or adc or lock loopne xchg or inc jecxz pop js mov cmp inc xchg inc cltd adc add in (bad) mov in cmpsb (bad) add cmp add js xchg mov cmp repz sbb cmp push xchg push xor jge jmp lret cmp adc cwtl je inc aas push jb mov pop aad or add cmp jge xchg fldt mov cltd insb add mov imul dec add pop adc cmpsl loopne lahf adc sbb cmpb push mov loopne push cmp test in ret ja adc push push xchg mov sbb sti add pop inc push test movsb lcall dec cmp roll cmp sub inc mov test push xor sub mov sub push push sub mov pop and push (bad) loop repnz dec fcoms xchg push dec push mov jmp pop push add in hlt outsb ja mov cmpl inc mov je ss in or insb test cmp je inc cmp or fnstcw mov push adc lea movnti jne push movsb inc ret xchg add inc add cmc dec mov aaa mov daa lea call or add icebp dec mov pop repz sbb daa push add orl mov push data16 hlt fsubrs push and movsl or pop pusha mov xor test mov and jle andl (bad) fidiv add sbb in in aas cmc lods mov or or inc fs jle cmp out nop jno inc jle stc pop cmp (bad) in nop lahf (bad) ds xchg aas cmp mov cmp cmp cmp mov fs stos xor repz inc loopne add pusha jnp iret pop lret sbb mov lea push adc jl and stos movsl and ffree add and and xor (bad) xchg lods cli cmc mov loope add and xchg xchg shrl pop outsl jne pop adc sub mov jo jle popf pop sbb cmp cmp cld fadds add ljmp mov clc pop xor lods jmp fdivrl inc push jmp xor ss lahf xor and inc cmp or sub mov mov (bad) outsb les repz jl adc pusha in push xor mov and or in fdivl cs push push jne repnz sub inc mulb adc adc imul adc bound mov inc adc cmp test inc into add push or push push xchg dec adc adc mov pop out and jge lds popf sub outsb test add adc sti and sti or dec mov sbb dec out jmp dec dec push push cltd repz jmp sbb jl popf xor mov fidiv add inc inc and mov fcompl data16 ficompl roll add jmp mov into add mov shr out out mov pop adc add leave jne lret pop mov push mov inc (bad) insl add sub in data16 dec or jmp and sbb xchg sub pop imul xor jge jge adc nop mov or sbb jnp sbb adc jp mov jo repnz in mov pop fstpt sbb cmp aam js mov and jbe (bad) lea (bad) fwait ljmp stc pushl mov shl lahf cpuid ss pop add sub aad xor inc dec mov arpl pop add addl fdiv adc ja inc ja lods push das jb je mov xor add add lock stos (bad) jle ljmp stos or dec pop sar xlat mov cmp pop rorl mov mov hlt and add (bad) in mov xorb or call dec push mov std xchg and push push pop push je test roll push xor loope (bad) mov and mov orl fldt inc cmpsb or or and and mov idivb and add int push in mov mov lahf call push iret add je add mov fsubr fidivr in outsb jge mov pop in lahf dec push addl pop pop arpl pop push xor pop add xor lahf pushf out jbe mov or imul cmp jb xor pop inc bound or aad int3 fstpt inc add push sbb call mov fimull or stos sbb mov or stos nop mov movsl bound ja inc mov std insb ret or mov lret push scas push jecxz dec sti jl fistl idivb mov inc push jnp push orb jmp movb sub sbbl pop sbb popa (bad) cmc mov cmp leave ss inc push ds fwait xor js aas xrelease inc add add int or xchg je (bad) mov es xchg inc add loop add jl or pop push xor cmp imulb (bad) jg rolb mov sbb jp or xor add push pushw loopne sbb hlt inc shl aam dec add add add outsl sbb dec mov mov pop push or into movsl arpl push cmpsb dec dec mov inc stos arpl xor pop adc lock dec (bad) push push xor cmp insl mov dec pop jmp test aas (bad) or fucomi push push or fild pop cmpsl mov lcall push enter xchg pusha adc fcmovnu adcb out jmp pop push add mov mov dec push popf sti test adc or iret add jecxz cwtl lea and outsb push adc leave ficomp inc jge add sbb mov roll mov test add shll add lock xor loope push sbb mov or lods add (bad) jecxz push loopne sbb and mov mov fstp and xor and sub orl es ds orl movl lea subl (bad) or adc pop and loope inc mov cmpsb test or mov or cmp and pushl rcrl or loopne mov icebp lret enter jbe sbb sub add mov rcrl shll add mov adc cmp push mov repnz sbb das mov insl addr16 call test inc test lock xchg insb in pop adc sub (bad) std xchg stos leave and xchg add cmpsl je push ret int3 mov or arpl mov sarb clc mov cmp xorl sub push mov sub inc pop outsb cmp ljmp mov mov add pop je or or add sub cld pop cmp es jne arpl push or ljmp push scas cmpb mov or or popa bound mov or js dec inc pop mov sbb (bad) je dec jmp fcmovnb movsb mov push mov jae sti jbe add pop and add mov adc mov mov enter mov leave or push or inc xor inc (bad) push jmp or sub cmc inc mov push ret div mov out xlat pop push ret mull mov pop add jmp or and inc incl rcr shr rcr or hlt div das divl mov mul sub out pop popa sub mov jbe dec sub jo xor sub ficompl fsubrs sbb lret addr16 push mov mov xor call push xchg ja and inc pop jmp rcll mov movb fs or stc adc ljmp lea mov push das inc xchg test mov or sub and enter add adc mov enter or scas loope ret test rcll push and or or pop out loop ss ret sbbb jae sbb mov or scas jl stos add add cld cmp ja mov pop add sub (bad) mov dec insb dec (bad) mov dec inc dec adc push and roll inc or cmp adc mov into cmp dec push jmp andl push aad ja sbb je stos jbe push push loopne xchg les add loop push xorl idivb cmc aas mov mov push or cmp pushl push sbb dec lock dec or and (bad) hlt mov fadds pusha andl icebp dec push movsl jp xchg mov xchg inc jne inc sub cmpl xor jae cmc mov sbb pusha jl sub jnp pusha pop rorl sub mov aas push sub out lds xor sub push daa int gs inc push sbb mov inc ds adc lea cmp je inc rorb insl push aam hlt or mov jmp push jmp das jne or ret clc pop rolb sub jmp or xchg jns pop popf xchg nop jge or flds push sbb sub or gs dec aaa hlt or fmull xchg sub inc js lods ror add push inc pop fwait mov (bad) rcrb mov fist jl les enter or add movsb push cmp pushf aaa push sti icebp imul add mov leave or pop adc add stos and xorb clc fdivs add repnz pop pop add popf jmp add or rolb pushf clc sub jmp out adc xchg adc jmp pushl fidivl xchg xor lea fsts sub mov call or ds int3 jmp or enter js or sarb mul mov bound lret (bad) xchg loopne mov shrl in dec lock dec adc int3 int3 or roll rcrl sti (bad) push mov decl aam inc pusha pop jne or ds mov sub cwtl adc push pushf add cmp mov mov push pop mov (bad) jmp out and lret inc mov ret add loopne sbb mov test bound in mov outsb xchg push or fs sbb pop or pusha ret aam push xor push jmp roll shr mov push push rorl pop ret rcll insl xor xor out in push mov push xor pop inc movsl cld in sbb cmc jo jp dec push stc jb cmc add or or sub sbb ja call decb adc jbe add jnp or or test shll inc or dec pop pop cmp xchg sub sub sbb inc and call push out jg rcll mov push (bad) add add stc jns xor les push or out add aas fstp inc sub pusha lcall push sbb sub mov cmp or pop adcb cmp jge inc push test insl sub and adc cmp cmpsl inc and (bad) and or pop sub sub add jmp and pop arpl sbb pop xchg jge inc xor int push mov test mov adc sub xchg sbb xchg sbb push xlat adc lret lea fsubl lods push xor inc movsb mov adc or add in mov inc stos sbb test out inc xchg push or adc add (bad) mov insl mov mov data16 ss ja mov jge push jmp mov or aas imul mov clc lock mov mov pop (bad) and push push jmp and (bad) hlt fnstenv pop fdivl jae or movsb gs lret mov out xchg sub mov aaa lods mov mov xchg test mov sub sbb and mov sbb and std sub jle orl mov mov cmpsb mov test ja pop leave add sub in sbb xor rorb xchg jo and xchg aad adc nop sbb push add faddl add orl or adc fmul and ss and enter and sub orl xor popf adc enter inc and inc pop dec orl dec push push pop or enter pusha fs and and mov or mov dec test dec cs cs pushf mov movsb test pop jb and cmp mov fcomp loopne in dec in in in dec cs hlt leave dec cs xchg add mov pop jbe or adc adc pop jb and leave and leave and cmp xchg pop jb inc dec mov xchg lret cs inc push push xchg dec cs push adc sbb fadd scas mov push push in adc enter xor jbe cmp push ss xor dec or adc (bad) adc jl inc inc push sbb test mov fs cmp cmp movsb inc fs inc test lods fs inc push dec mov movsb cmp fs int3 pop pop inc mov add aaa push or stos add jmp sbb adc test fisttpll gs mov inc sar and cmp loopne push shrb add ljmp clc sub repnz mov mov inc sbb jge add dec jne xor arpl mov rol jge andps cmp outsl xor add xchg mov popa or bound jne adc outsl adc xchg gs add js outsb (bad) aaa push ret nop sbb (bad) icebp add inc pop out push rcrl jmp out jl addr16 fcoml add bound rol lds test inc aam jl cmovb lahf (bad) push xor lea xchg pop js sub rcrb mov cld jne mov or lcall call incl inc orl ret vmread add jmp or cmpsb mov cmp std jmp cld xlat cs cld jmp insl dec jmp jb fisubrl aaa std adc inc cmp jb popf add fwait sub add or test pop jae dec (bad) cld nop adc in clc or lea push jge es ret mov andb cmp sbb jge pop lds divl sbb add or inc lcall inc add call sub add mov push mov dec pop movsl xor js mov test and lods lea cmp outsb aam adc int (bad) fadd inc call jmp fadds and ds xchg add cs fmuls mov movb lds pop add (bad) inc cmp adc ret mov mov mov and and decl sbb mov sbb mov push arpl inc push push hlt mov jmp aaa add sbb insb call sbb int3 sarl xor or adc push cmp leave dec xchg pop mov aam ret enter aaa fdivrs mov lods pop popa pop mov fldt mov xor add dec or inc sub mov push cmp popa loope addr16 or cmp pop or mov or cmp ljmp shll dec sbb pop fidivr lcall dec add or sbb test sub test and cs aam jmp mov test jo adc scas leave push fmuls mov sbb aaa sub sarb fs add mov in or or dec jo mov mov and sub gs gs lds xor test gs mov cltd into inc adc (bad) test gs push mov sahf fsubrl (bad) or insl inc mov or sub or lods xchg mov mov cli fs sti sbb mov leave add pushl sub addl std andb adc mov push dec jle (bad) mov pop or xchg add pop rcl loop push xchg and pop push add cmp movsb test jns lock (bad) test sti sbb sbb (bad) jbe add sbb ret pop jmp adc sub test mov mov fsubl (bad) mov dec in push push fstps push adc mov jecxz cmp and add add lods add jne xchg incb add sbb (bad) mov inc nop mov add push stos fisubrl cmp (bad) pop and cmp insl lods cmp jns ss lahf (bad) (bad) jbe add jbe fiaddl pop push bound outsb fistl push or test inc jne sbb jmp mov mov push push or dec xchg int3 push adc add jge fist sub pusha pop ja int xor push pop sti into not sub cmc pop pusha fisubl int or movsb aam xor xchg jge dec mov adc imul stos and xor jp jne pop divb lret inc mov cmp bound in test mov std jle ret mov ds lcall out mov sub mov mov in add mov jp or fistpll sub and (bad) enter mov push lods xchg cwtl xor and xor and aaa add shl and or mov (bad) lret ljmp ficomp xor popa pop je and js fidivl dec or and popa or mov add dec sbb nop pop pop iret pop (bad) adc mov and push xor mov icebp jle fwait add jae sbb aam jne cmp (bad) rcrl inc aam cli and and in cmpsb (bad) sbb jo and push js int3 lret push or icebp fadd mov (bad) (bad) add mov cmc pop and add shll or mov (bad) xor inc (bad) add fstps in repz test in cli (bad) or cmp sbb xchg sub cmp es test dec loop sub inc sub push push add xor mov adc inc andb sbbl add gs outsb sbb sbb invlpg xchg pop fldt test outsl ljmp std sbb ds cs loope shlb lret and inc fdivr ja cmp jb add add jmp adc jb icebp mov and push clc lea testb push xchg fildl cmp into sub jle inc xchg out (bad) fdivrl je jb pop mov mov jne outsb xorb inc and xchg xchg xchg xchg dec dec dec dec cs xchg xchg dec dec cld cld xlat mov push inc into jb repz and ss inc sarl add lock jo stos jmp (bad) dec and dec aam shrb inc inc aam push cmc xchg sbbb or hlt cmpl sbb daa push lahf adc icebp mov clc add add stos (bad) push cwtl push hlt or gs inc cmp dec fcomp (bad) adc xor adc mov leave mov in inc push inc mov jbe int inc ss inc cmp and xchg sti popa clc jmp mov fs repz mov inc cli pop js cmc jne scas popf sub xor mov je enter add stos out mov add fldenv js mov (bad) sbb outsl xor add cld outsl adc pop and push sub and sbbb add popa (bad) out dec addb push push fs and cmp arpl or cmp sbb push xor ficom mov push push cmp mov outsl mov inc mov mov ss aaa pop xchg sub inc mov or jmp mov push sub cmp jno jg xorl or push or push xor fsubs rorl lcall aaa mov or push push push pop pop pop pop pop ret xchg stos push cmpsl stc push cwtl rcll stos xor sub decb es or call xor subb inc mov push or xlat icebp push push lret (bad) or push pop test push and rolb outsl or pop in (bad) mov cmp push roll fsubrs fadd or mov mov push push out int3 lret icebp and dec dec orl adc inc (bad) xchg sub mov sbb adc mov pop ret xor aad mov cmp pop stos int or add mov in shrl mov dec pop (bad) xor and sbb jne pop push and scas cltd adc pop pusha xor repz cmp (bad) mov (bad) lock xchg pop mov or cmp lds cwtl orb or or xor mov adc mov insb repnz (bad) sbb jge push mov stos shrb mov loopne lds xchg xlat orl or cmp ljmp sbb sub stc or xor fwait adcl notl or dec cld or mov mov xchg jmp sbb cmp cmpsl push sbb sar dec pushf add test mov add std push pop adcb sti sbb mov mov scas mov add pop ret movb sbb or cwtl xor in xor fstpl cmp and loope cmp sbb mov xor ret pop test jg pxor push cmp icebp sbb mov shr je mov pop jg add add jle out xor pusha jo mov aam test push sub lods inc inc je push movsl (bad) or aas push icebp xchg mov pcmpeqb pop ljmp sbb js in lods out sbb cli pop pop dec fdiv fildl fsubrs xchg mov sbb inc dec shr add (bad) (bad) rorb sub enter xorb jle push push loope lock push cmc jle mov pop mov cmc xor dec ss mov mov push add inc enter leave movb sub cmp jne adc shlb shrl cmpsl fmull push data16 push and sbb lret dec mov (bad) jge add mov xchg add pop cmp iret jl xor jae ret adc push push push (bad) add cmp jb jl outsl (bad) cmp mov (bad) lret mov fidivrl or xchg mov xor imul and sub pop cmp push mov add stos dec push cs not popa jno push jge les or sub pop add ret sub cmpsl inc jmp and add jne lahf in test adc in sahf and into push inc or aad push dec js push mov mov jle or or in xchg sbb inc push cmp les mov in (bad) dec push jmp rcl pushf dec cmp gs fwait dec outsl push cmpsb imul xor mov jns dec push pop outsl inc add push cmp shll pusha jle je outsl ja mov lea inc imul mov outsl pop pop outsl pusha lea lea and nop pop add movsl test rorl push mov sbb push in enter or or out pop test maskmovq negl ret mov sub sub popa movsl push mov push mov loop mov pop inc dec pop mov lds scas loopne push shr pop push add mov inc mov mov ret push cmp xor xor adc jo add insl test pop push xor cmp mov pop in loop xor mov aaa out jne mov dec sti je mov lea inc mov xorl cli nop push lods mov sbb dec xor ljmp sbb sbb clc push xchg and leave adc add mov xchg (bad) mov sub (bad) cmp and mov cwtl icebp subb xor out adc adc mov adc push and add xor sub idivl cmp sbb jae leave invd cs movsb out imulb and lock (bad) sbb dec push xor popf push sub call push ljmp mov cmpw out mov dec jne aad sub iret sub add shlb in inc push xchg dec ret inc sbb imul movsb fild lcall adc mov xor push mov jmp and push cmpsb push icebp mov xor mov daa jmp jnp repnz or mov jnp sbb jle push pop popf (bad) push mov inc xor outsb loopne cltd or push push inc dec (bad) pop or and cmp push xor sbb clc dec pop pop sub pop fistp pop dec aam mov aam pop (bad) mulb add add push mov mov push push cmp add xchg add cwtl cli aaa push mov test (bad) adcl lods push cwtl cmp in mov jno popl add les push aas ljmp mov or scas fidivl pop outsl adc push push adc call (bad) rcrl or pusha and adc nop jns or adc pop loopne fsubs dec mov daa dec je mov and (bad) pusha mov aad shr inc push push and rolb sub adc inc add sub shrb clc enter pop mov mov or and sub lea mov xor dec lea inc jl inc mov and pop jl add mov mov enter das xchg and fild sub sbb js push das ds mov push addr16 xchg sbb xor or sahf cltd push out sub mov cmpsl arpl or inc popf or leave cld and loop cld sti lcall roll mov fdivl das sahf add (bad) or jmp push mov cmp fdivr pop lods (bad) jmp cmp jg jl jae push inc xchg push cltd mov xchg jbe or dec pop dec cltd mov lock imul stos and decb decb in call adc push inc sub pop sub ficoml fstpl inc je stos add int push pop shll adc rorb sub icebp sbb into mov jns inc mov xor mov cmp (bad) je addb add les or dec ret push fidivl and adc add incl in hlt call jmp sbb and scas add mov add mov push pop adc aad mov mov add cli ljmp mov push mov mov pushf adc sub rcll ret dec es lock add and es mov add inc daa or cmpsb sti call lret jb cmp ja add cmp or inc inc inc jecxz cmp mov lods popf or neg mov pop (bad) int3 jmp shrl push outsb or test mov (bad) push adc jl shrb mov mov sub adc mov push lds inc jl cmp insb add lahf stos jo mov cmp (bad) dec inc and push and add out sbb add les arpl sub mov mov dec pushl cwtl adc jbe mov push and fild dec jb lea or and rolb push repnz clc add sbb inc hlt dec push jne adc aaa test addb test pop cmp sub les adc dec call and adc in and mov cmp cmp (bad) dec into mov cmpb xor mov insl mov add add inc cmpb mov pop jmp rolb push add clc adc aad ret inc outsl or negb pop pop sahf pop dec xor mov add jbe fdivrs push fucomip lahf adc mov rclb and xor hlt dec xchg outsb sbb cmp sub pop and popa loopne fdiv push add dec sbb fldl scas jne push int mov jp,pn push sarl jecxz sbb cld loopne nop call lods aaa mov test arpl jbe sahf outsb push inc cmp jne inc or jb sub je cltd push mov mov xor aad mov jbe sub push out ret js popf and ror mov and inc dec daa sbb in push adc jge fldt stc xchg je roll add std adc xor std call popa and insb outsl arpl imul add clc sub or add mov sub and fcmovnbe mov inc add push add add add jg iret add sub cmp pop or aaa xor push push pop cwtl ja test or pusha movsl (bad) or adc imul add xchg inc outsl jb js je mov lret push jb jae (bad) add add jb gs pop sarb add add movsb imul sub insb mov jp add adc int movb pop das das adc push pop inc inc insl jne pop mov gs bound jbe leave fstl add pop scas loope pop jo and xchg (bad) lock pop jns outsb jne cmp jnp das imul adc inc pop bound jnp aaa popa adc mov popa ret cmpl sbb sub jns ja addr16 pop (bad) or sbb mov andps aaa pusha adc fs fldl mov xor pop enter (bad) outsl insb fdivs inc (bad) out sbb aas and insl insl cmp xlat fsubrl sub dec and jns add das das or dec add or inc gs bound dec outsl jbe jg mov outsl or jo adc jne jne or sub dec sbb outsb enter clc inc jo imul bound out mov popa outsb or push pop neg jnp dec inc inc aaa jns jnp mov and insb cmp sahf dec pop or jae into push (bad) push push gs push jne dec iret int xchg rclb push jne inc cmp neg jnp das daa and add inc add xor dec add add imul out jae gs stos je jp,pn enter inc inc inc ljmp std ret pop add add or adc (bad) (bad) (bad) call sbb sbb push pop and and and es sub sub sub cs xor xor (bad) (bad) (bad) pushl cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push (bad) jmp pop pop pop pop pop pop pop pusha popa bound incw push insl outsb outsl jo add jns jnp jge test sarl push arpl push push inc sub ficompl fimull dec dec inc dec pop mov nop jl push outsb imul and lcall pop movsb jbe jae sub ljmp cmp imul dec icebp jb and and lcall push add (bad) mov push sbb sbb dec xlat inc and and ss aaa (bad) mov adc subl pop pop mov mov imul arpl push subl popa pop cmp scas dec jne jae (bad) icebp imul sarl imul cmpsl pop jp popf lahf push pop sbb daa fs arpl and add outsl jne enter jo push arpl mov sub sbb push insl adc int3 jge imul popf jb jnp cmp add test insb fpatan daa sub dec fwait jae sbb repz das add cmp add mov outsb mov mulb add cmp xchg cs js fwait xor int or je ja jmp popa jo arpl and dec outsl in test sbb addr16 xchg adc push out outsl fldenv je inc inc push xchg jb xor lahf cs fwait sbb (bad) (bad) xor aaa shll in xor cmp popa ja and add scas dec aaa mov ja outsl add movsl test enter test push jbe jb jne nop mov mov xor push adc ret sbb mov mov sbb (bad) jae outsl insl jg outsl test (bad) pop add notl xor lea xchg (bad) xor jne out mov xchg insl inc aaa insl in jmp pop jmp inc push add nop xchg lret imul inc push (bad) push dec xor stc test add jae in mov adc or add cmp dec sbb mov lahf dec add xor jecxz jae cmp fsts sbbw jnp xor ud2 insl mov ret rcrl test (bad) mov add pop fistpll jns in or loopne mov inc adc call adc jns in call sbb mov dec dec sbb clc push mov jns lock je in xchg jns jp cld xor jnp inc jp dec sbb pop adc push sti adc stc sub sub dec cmp add fsubs fisubr add cmp pop addr16 insl jnp dec imul add lcall push dec cmp dec add inc mov add add movsb sbb sbb nop add xchg xchg mov dec aaa and jns pop (bad) cs addb adc xchg scas insb jg adcb xor adcb mov stos jg daa cmp and movsb mov push mov sub cmp mov push js jo add sbb lahf int or and sub jns and adc adc add and add (bad) popa cmp add add inc pusha lret add add add push mov xchg (bad) and sbb add xchg sub adc das pusha mov add addl mov mov xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods (bad) (bad) (bad) ljmp mov mov mov mov mov ret (bad) enter int3 (bad) (bad) (bad) dec into iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in out call add (bad) in out out lock repnz cmc div clc stc cli sti cld add mov push adc stos adc (bad) jg inc sbb xorb add gs bound arpl outsw jb popa jl,pt fcoms sub gs das roll insl cmp dec shll gs mov in inc outsl js push add push and out dec add fldln2 ja out and insl jo dec and mov call daa sbb aaa push sti jae dec imul sbb push add inc gs jb or and test jnp mov inc pusha inc std scas insl sbb fldenv je jb xor mov shlb fs (bad) insl (bad) psraw arpl jns outsb sub xor jb adc cltd dec pusha and bound sub fdivl fs insl xchg pcmpgtw movsl test and fistpl inc and and imul daa pusha gs dec dec gs setae pop fxch es dec icebp roll popa lea ficomp inc sti add sub imul pop sbb jnp pop pminub cmovno and outsb gs (bad) leave adc push fsubl xchg imull and push push push dec jnp dec add dec aam jne jns cwtl push adc fsubs and adc fs pop aas imul mov imul mov xchg mov mov xor or adc shrl popa jne je ss jg mov adc or mov pop je ret mov inc sbb (bad) fnstenv or add stc dec es cmp or add sub and xor popa mov sub mov cmp add popf scas insl lcall sub sub inc sarl or cmpsl and and add lret mov pop pop jne loope push or fistl sbb jo ss gs faddp fcmovnu imul data16 (bad) jnp mov fmulp mov or push pop xlat pop int3 arpl ds jg xor fisub add or out hlt cmpsb imul jae lcall mov out xor mov test cmpsb js push imul cmpsb imul lcall lcall adc xor movsl imul (bad) xor (bad) lock loopne int3 dec (bad) xor shrb out xor or call cmpsb imul add hlt ror dec (bad) xor mov and clc int3 mov push cmp ljmp (bad) xor les or icebp adc adc outsb push mov scas jge outsl imul inc or adc push dec push mov inc roll push and es mov fwait mov pop inc mov or (bad) push out scas je inc js movhps mov sbb icebp xorl fwait divl lahf mov sub mov inc push jb push imul je (bad) adc fs inc mov (bad) fucomi imulb jae sub movsl das mov insb push push or jo push fdivl push das mov jnp stos dec cmp je mov xchg jnp lods lock jns stos push imul fldlg2 add inc ret mov and push pop mov inc addr16 ss sub xor xor push lods add xchg xchg sbb int3 dec push or dec inc std fs test jb jnp inc add mov and jae insl mov ret or xchg insl sbb outsl ja mov adc push xchg imul jo jmp sub xchg add mov outsw mov mov leave push inc push inc sub mov stc insb aad cmp mov ror cmp mov lcall ss imul lcall cmpsb imul imul cmpsb imul cmpsb imul dec lcall cmpsb imul cmpsb imul cmpsb imul imul imul adc mov jp jo aad jg xor xor sub sahf addr16 outsl (bad) cmp dec push dec inc and adc sub (bad) and and xor push inc fcmovnu outsl iret lahf xor dec inc inc xor cs inc sbb (bad) dec push and adc xor adc cs or xor pop pop stos sub adc bound inc ja inc fs sbb jo cli out dec icebp orl imul std jp sub sbb scas cmp xor pop pop sbb insb mov pop push lahf pop and add mov and popl sub push sahf xor xor mov sbb sub pop push in lods sbb sbb add dec cs cmp imul push push and es inc cld ja pop cmp ja,pn bound arpl cmpsl test mov pop jle jns je,pn pop mov jnp dec bound aas pop fistpll lds pop fs inc inc fisttp dec push sub fcoms push inc jo dec mov pop dec imul loopne pusha mov pop je aaa sub incb bound mov mov jae pusha sti out mov and push dec inc push push inc push inc pop comiss cs push or push cmp push mov movsb push dec jae mov push pop and and mov pop repz dec inc popf push dec jl jnp mov inc mov arpl cs xchg xor adc mov es gs mov je es jb xor jg push test and xchg xor aaa cmp fcmovb andb cmp pop mov outsb or addr16 xor dec sub jnp fmuls sub mov push aam popf arpl lock fs inc jp jns imul pop insl cmc mov xor insl dec fsts outsl mov push inc data16 je lds or pop iret pop orl push je pop cmp das outsl push push dec dec sub and hlt jne shrd pushf or jno xchg adc sbb test jne dec (bad) xchg jns or xor ja test jne insb xchg std aas push fstps lahf mov xor sbb xor ss cmp sub add push pop std lock and (bad) dec sahf xchg sysenter add xor mov mov enter and sbb js mov bound mov sarb adc aas mov enter jb jl mov jae mov (bad) xor pop (bad) das xchg fstpl daa test dec xchg mov das cmpsl xchg dec push jnp xchg xchg (bad) mov jbe (bad) in (bad) or in xchg or les sbb inc outsl pusha fisttpll cmp scas das xchg push jb dec aam or int3 push fcoml pusha das push pusha pop fcomps or mov or xchg inc pop pop pop shlb pop leave sub nopl je sbb mov out jbe gs inc jns lock aaa mov adc xchg lock mov xchg scas mov mov mov and subl pop mov adc test leave mov or adc nop mov add lock (bad) lock inc push mov pop inc sub sbb test inc sbb inc shrb divl out push pop sar add (bad) repz add add (bad) xor sbb orl or or fimul enter push cmp cmc push sti pop xorps adc pusha cmpl and enter xor fsubs push pop push pop pop xor pusha cmpl insl stos and das dec rcrl (bad) das xorb pusha xorl (bad) xor or sahf enter mov orl xlat adc pop xor xor test add add mov push mov ljmp and cmp addb test or stos mov add add movsb add pusha (bad) jns cmp enter fild mov sarb jle test shll in adc das out push sbb inc mov iret mov inc (bad) sbb in call (bad) push add add pop ficompl fisubrl xor fcomp loopne dec push dec outsb cmp jle inc aad cmpsb imul lcall pushf cmpsb imul cmpsb imul cmpsb imul inc lcall sbb aam lock xor shl fnop mov repz add test cwtl xor (bad) xor mov dec rcrl xor adc cld hlt in in lcall mov cmpsb imul cmpsb sbb and int imul mov dec ror mov adc inc psubw cmp add pop outsb das jecxz cmp nop jmp fcom in push inc incl jne push xchg adc pop add adc add test or jno xchg pop inc add add leave and add or and lahf lahf orb dec or rcrl lods lods sti pop pop jns mov das pop rolb inc mov cs add mov add fs stc jo,pt stos mov andb inc mov test push fdivr ja dec inc dec inc push push out sbb adc es pop mov add in (bad) jge push add or push pop pop add or or or or divl ljmp or prefetchw or ds or add adc adc fldt xchg adc add (bad) mov pop ljmp pop xor jmp mov add add add (bad) pushl inc push adc pop and xor inc mov adc xor (bad) cmp inc mov popa xor add add pop mov and push stos and adc or adc add xlat into add xor xlat adc addl or adc (bad) (bad) repnz incl adc pop popa jno and adc xchg mov lock rcl and loope icebp fcmovu fcomps in add mov or mov adc sub jae or adc add adc orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add orl orb adc adc nop push add add orl orb push add nop inc add add xorl adc add nop push add inc inc add add add fs adc nop push add add xchg mov adc add add pop nop fcomps push adc incl mov mov push decl pop mov int mov imul jb insl and adc outsb outsl je bound jb outsb and inc dec push and cs and sti ret (bad) pop sbb pusha ja,pt add jo inc popa pop jnp faddl out inc jmp and in ss arpl jbe cmp fadds in aaa xchg push imul mov xchg inc dec add inc mov push adc add and add or adc nop lock jnp add pop add add pop pop add push inc imulb fwait or pop push clc add add into frstor or and add jae inc and (bad) int3 daa push push pop xor pusha add jmp daa xor std out push push daa inc jb,pn jb add gs xchg pop daa sar adc xor or aaa jle and fstpl stos (bad) aam jmp int3 enter jecxz push adc inc adc or jl mov sti call dec push push jne xor and les insb add fdivr cmp cmp push outsl aaa adc push pop push call call std jmp lea sti xchg or mov cmp push push sar je add adc out pop xor push xchg and add inc cld call scas sti (bad) movsb mov out addr16 sub lea adc add cmp jno (bad) (bad) mov xor or adc or js lea adc or jge jne adc jo ljmp outsl (bad) (bad) mov addr16 data16 cmp jle push add mov add add decl in (bad) fistp ret ds sub push loope lea enter outsb in imul cli imul popl sbb (bad) (bad) in cmp sbb mov sbb fs and push inc sub pop in insl imul ja mov (bad) cmp (bad) sti jg (bad) (bad) cmp pop out pop and sub xor xor add sbb js mov popa ret pusha and or sahf and fadds ret sbb xchg (bad) (bad) jg pusha add cmp cltd sbb jno xlat jo test xor sbb adc loope ret push pop adc (bad) pushl cld ja fidiv push std push add adc and fistp call push adc xor push sti (bad) (bad) call xor arpl jae mov push push jnp sub xchg je or adc add hlt (bad) (bad) (bad) jg adc out mov and cwtl or and aaa jbe or push and sbb test call sub outsb add mov int3 add push cld jg (bad) pop scas sub in (bad) roll pop push cli and add mov cmc std pop aas insb mov push sub pop xor test cli fwait out jg jg lcall sbb push mov rorl sarb decb (bad) push pop test jg and pusha sub fsubr xchg push push loopne pop mov fwait mov xchg (bad) mov in cld lcall mov sbb mov loop outsl cld adc push mov cmp insb push rep fildl add add xor ret add int shrd sub ja adc movl lea mov in or pop pop ficom jle or loop (bad) mov push ja mov dec mov dec add push lock add add call or push lea decb mov sbb cs arpl push sbb sbb call (bad) xor pop in push adc push push lahf incb imul js adc jb sbb jbe nop xor test jne cmpsb cld add clc cmp clc das cld shrb cmp cmp jne push push inc push std lods fisttpll rolb jg push (bad) out inc mov xlat add insb push push inc cld pop or sub adc and pop add sub push imul pop daa out js insl test xchg xor lock sub jg sti push push js sbb fldl2t add push loop xor clc cs jbe lea adc and insb push push daa push insl stos lock cld mov hlt push adc lea mov ret dec sti (bad) mov sbb push ret sub (bad) stc push push test push nop dec pop (bad) xor mov dec int3 inc sub pop outsl jg outsl iret mov push lods sub fucomip xchg or jns mov js (bad) push rorb pop cmp ret clc lods (bad) (bad) in call push pop xor int sub jge lea fistp push pop test es pop pop insb or dec cmp pop push inc adc js icebp mov testb mov hlt push or add out and aam xchg out or pop cmpsb adc sbb mov inc neg xorl out hlt pop sbbl sbb fcoms cmc mov and push pusha sbb std sbb lea push jmp jp dec (bad) aas add or shr push adc (bad) lret push xchg fdivr std and pop pop bound and std neg mov cmp sbb push sbb in (bad) or das sysret clc (bad) sbb daa xchg xor lea push jmp stos push (bad) decl mov xchg ljmp jl pusha shll inc sbb (bad) lret or mov ljmp int3 pop notb pop rcrb out adc rcr mov pop jmp mov mov ss push mov jg dec cld aaa cmp or mov push mov in neg (bad) xor push xor lods push outsb clc ret adc cmp pop shrl test dec mov jge out sub pushf add mov (bad) (bad) (bad) add cwtl mov mov (bad) ds mov fistpl popf test add leave mov out je mov sbb pop jnp adc decl loop sbb xchg adc dec call mov aad push adc jae sbb push xor in sbb in sbb sbb push imul sbb lcall mov test or jg mov push ljmp cmovb mov into ds xor outsl (bad) out dec (bad) dec in lea sbb fimull pop pop cmp or cmp in xchg in cmc cmp mov dec mov pop loopne cmp pushf jmp testb (bad) pushl arpl jge push inc inc movsl scas mov jbe sub dec clc call (bad) test mov cmp pop push pop jge dec xorl int3 jg push pop push adc mov je sbb cs jnp out mov (bad) call insb and sbb std cmp je xchg imul lock outsl mov fsubr or or push and lock (bad) decl test inc cwtl mov (bad) fwait cmp cld outsb out mov (bad) mov dec add rcr test (bad) loope ret mov sbb ja or addr16 (bad) in (bad) and push push les mov popf fsub xchg cwtl and testl xor sbb js pop leave mov pop xor fisttpl in or mov adc call clc popf adc fs xor jg les rolb fdivrs pop cmp push clc outsl xchg jle out fs arpl or sbb mov aas loope std pop stos jle addl fwait in imul fiadd jg jo pop jecxz nop adc push push inc xor xor (bad) (bad) jmp xor enter add out lock ds sbb fnstcw lock mov testb call add jo (bad) dec mov fildll pop mov pop outsb fneni(8087 dec lret cmp mov cmp or and (bad) (bad) fstl std mov jnp jnp mov aad lea push xchg adc movsl outsl lock (bad) adc daa or sub das pop jnp lret cmp call loopne pop dec fdivl lahf fwait dec jb adc cmp stos aaa shr outsl cld mov movb std jne repz xchg push jl or cmp in outsb cli mov add pop (bad) (bad) lcall imul decb and jmp push and decb pop push test mov fwait and pop or pop sti aam out or (bad) fldt jmp push pop extrq sbb or push sbb pop dec or pop cld (bad) call fwait and cli fistpll insl sub sub (bad) iret shr jle incl (bad) mov or sahf pushf jne and sub wbinvd sub mov (bad) cld jl jbe (bad) xchg push in dec mov es dec mov je push icebp (bad) jg ret jmp lods add adc adcl clc loop add xchg call pop jmp or (bad) (bad) aam inc je push fstl adc xchg mov pop adc je incb (bad) fist por adc outsl (bad) mov dec add push push minps jle nop pop std inc hlt sbbl mov mov mov sbb sub jbe aaa (bad) cmp push (bad) fist push cmp je cmp or add mov subb shr sti call and push adc out insl test incl and mov outsl pop and push call das mov jmp popa dec adc mov in idiv (bad) or push aas or jg mov sbb (bad) in aas inc pushl jne mov mov loope fildll or jmp and jne add mov std xchg push or vmread and out xor pop (bad) (bad) fistpll movsb ds inc mov pushf cmp jo dec ss cmp xor std mov sub mov pushf pop add dec add sub cld and adc xchg and mov push sbb shr mov and outsl mov aas dec ficompl jle pushf push mov (bad) and pop cli sub ss setl fwait inc adc or push rcr push fisubrl xor ret jge nop add fmull (bad) jg pop push xor mov jecxz inc mov popa pushl mov test nop jg add sbb mov jne and sub add pusha mov push test ret in pusha aaa pushf ret pop mov arpl or movsb in fnop jle sub xchg lahf cmp or lcall add ret fwait or push (bad) ljmp push stc add dec mov pop pusha lods adcl ja jg (bad) mov (bad) add popa mov (bad) cmp addl in fisubr sbb add or inc decl (bad) fbld lock shrb into jle cmp jbe mov xor (bad) lcall adc in cmp push or icebp mov frstor in xor adc in arpl idivb sti jbe pop and in (bad) popf aad push mov pop fidivrl clc das (bad) aas nop push sbb cs ffreep aad dec icebp fnop (bad) lcall (bad) add lahf xchg je (bad) cli pop adc mov fdivl imul aas adc add lcall cmp loopne loopne inc enter fcmovnb pop int stc cmp inc mov mov (bad) mov roll aad mov lret push or jg pop loop push and sub sbb and cmpsb pop and fs add insb lea int (bad) dec in and in out mov stos xchg jae pop loope jnp cmp faddl and fucom jg fistpll insb cmp shll je cmp adc add mov xchg loopne mov sub test mov xchg lock (bad) cmp (bad) lcall ret lds je mov std pop and mov mov fiadd mov mov std call aaa add jae jae popa push nop cli mov inc jl (bad) lret xchg sbb inc and mov arpl add sti enter sbb popa mov xchg mov not and test push fimul aaa push call dec push adc je or jo clc ljmp jmp and pusha movsb and lods jmp cmp dec loopne pop clc fildll sbb iret hlt cwtl cmp fs popf jnp aad dec ret cmc out adc jbe pop jbe adc pusha jae fcoms (bad) (bad) jg lods sbb imul lods push push dec pop rclb test pop cld and pop or and imul jg sbb lcall inc sbb fsubrp clc popa lock pop pop or xchg sub mov (bad) movsb cmp test cld sbb dec pop daa cmp cs mov stos fildll scas sub clc push incl pop mov js sahf insb jbe adc call aam xchg sbb addr16 decl lret or inc jns rorb and pusha jg jb cmp ret mov decl decl xchg xchg subl add add dec test push test or clc jg jg aam cmovl pop or scas mov ja or pop call push roll (bad) mov or (bad) incl adc ss add xchg push xor (bad) xchg jge (bad) aaa jo pop mov xchg xor inc inc or in dec aam (bad) hlt sbb lret in pop xor je or popa push mov pop sbb push push movsl clc or repnz and adc add popa push mov dec aas (bad) std pop cmp addr16 pop cmpsb (bad) fsubrp pop je inc test mov or jg xchg (bad) cmp and pop (bad) outsl mov ss or push rol jo and fstp aaa subb (bad) fisub add cmpsl mov xchg dec lods dec inc push sbb cmp test dec test add jnp ffree adc jno adc dec inc add or adc incl icebp in aaa and aaa testb dec add enter cmp add inc pop mov adc repz negb insb sub loopne add fnstenv add pop sbb add adc jb neg and push js loopne cmpsl decl stc sbb fnstenv and andl mov mov lcall bound addr16 push add cmpsb aad push add stos aas fcmovne js icebp (bad) decl pop das cmp and (bad) mov pop inc and adc pop push push lahf jp xor or xor inc out ret rorl imul or cmpsl mov dec js mov dec or or out add xchg add sub dec inc add test in add mov mov inc sub jg jmp ud2 or mov (bad) pop pop les rcrl jl sub mov xor xchg cmc pop loopne imull or xchg lahf add les lods mov int3 sub inc add mov or ja pop dec mov sub je add loope push xor mov pusha (bad) sub subb rolb fnstenv les loop sub mov add inc (bad) stc faddp push add test or push jnp add les (bad) repz pop cmc push mov pushl sbb je clc add xor xor mov stos aas inc inc or (bad) mov out add or and aas or sbb push cltd inc orl or add rorb pop pop leave clc mov notb popa lods xchg outsb mov (bad) and pop xchg jle (bad) jp clc add mov jo inc pop lea enter (bad) jns fistp shlb jmp ljmp cli inc inc cmp (bad) ljmp fwait cmp decl push hlt sbb decb xor cmp das (bad) (bad) cld cld fisttpl xorl ljmp outsb sbb xor jmp xor xchg inc add mov aas push add call cmp pop jg gs clc inc xchg mov adc mov mov out cmp adc ds mov loop call mov sahf sti out xor cs addb (bad) adc fucomp aaa inc jae orl push sub out or add icebp or push or push ljmp pop adc aas inc add outsb mov orl adc add inc xor pusha outsb jl add add add push add out push jbe fs add jmp shl ja mov sbb out fistpll dec inc outsl popl imulb sbb add cmp lods ds jae ret shr mov shrb cmp leave jne lret (bad) je cmp clc out test (bad) out incl adc cltd jnp and jnp outsl mov sbb ret loope pusha jmp or mov jle mov inc mov ret leave xor cmp mov mov dec mov push add test andl add test pop clc ud1 add or add or add inc mov decl mov int3 or add inc mov icebp testb mov mov imull paddb in pop jno aas bound xor cmp mov adc aas sub or incb (bad) pusha outsl add sbb adcl lock and add inc in mov je mov mov les add adc push add jecxz sbb in (bad) in test pushf mov or (bad) (bad) lcall xchg push dec and pop das jl push push fadds and and loop push stc and pusha in mov xchg rorl mov ret jns cli imul add in ffree and adc lret sub pop dec mov call pop bound lret movl xchg loop xchg or outsl and (bad) pop pop jo les call pop iret (bad) shlb inc mov xor sub add adc adc fidivr call or or and loope push xor incl loop dec push mov fucom inc xchg mov stc das inc add je fisttpll cmp jne mov and lea dec ds push cmp fxch cmp mov aas idivl xchg cmpsl mov dec insb mov jge or ljmp pop ret jg dec incl adc or aas inc add loope sub (bad) jg test mov aaa std add ja dec jl or cltd (bad) hlt loopne push add aas add ljmp dec sub inc push lret imul and popl push movq dec dec std out cmc pop nop add adcl push nop hlt ja or and add add aas stos mov decl inc and outsl jne stos mov inc subl icebp adc cltd out or pop xor (bad) or push stos test loope stos sbbl pop jg push add adc mov loop sub jle nop mov xchg dec icebp mov fwait andb (bad) pop push add (bad) sbb ja das cs mov inc jb fbstp outsl cmp (bad) stos or pop jg cld insl mov dec inc cld (bad) in loopne or pop sbb add jl cli test push adc sub outsl mov mov mov imul rclb push xlat inc mov push cs jg push test cmp (bad) jg add jg jbe pusha add addb xor js stc adc jb sub add pop (bad) outsl hlt lea (bad) pop add fsubl icebp test pop push mov cmp lahf mov adc add aaa adc cld clc lods pop push adc jbe cli decl sub and jne sarl add aaa clc or pusha fadds les inc je ds mov jae cs (bad) ja aaa sub enter xchg jo fsubrl leave (bad) xlat icebp pop addb xchg pop push or ljmp fdivrl out jb pushl je call repz add ja add mov sub ja jbe clc test xorl push pop adc adc lret sti aas dec push add in aam jg loope incl test sti js or call push inc addb add mov ss sub sub movsb jne (bad) add and int3 rclb xor call cmp ds es lret push mov dec sub flds out jnp cmpsb stos incl mov mov add inc jl insl daa stc sbb mov push (bad) jg push xchg addb xor or ss cmp fs jmp sbb or loopne,pn inc cmpl loop cld pop dec sub fistp mov inc pushl mov jns aam pop int3 rcrb mov mov xchg push lcall gs and cwtl mov fs notl fistpll mov loope push xor sub mov jle or pop sbb inc xor pushl jg jnp xor lds mov or idivb sbb (bad) in pop movsl xchg inc xor aas sub clc add xor or add cmp adc fistp add jg xchg jbe jg js cmp faddp mov aas dec sbb mov dec ret fstpt in test fnstcw enter adc adc faddl ljmp ljmp adc or cmp and cmc movsl es mov xor add daa je pop jne fstpl sub or xorl pop sub xor jae ror (bad) mov adc out fist adc add mov out adc mov jg xchg mov (bad) insb sub xchg cmp mov push mov pop lods sti outsl cmp ret push add adc bound lret icebp ljmp or mov or adc scas jle adc adc add mov lcall and out sbb call mov (bad) (bad) into mov pop mov mov and or dec adc sbb sbb idiv dec mov lret fcom cmp jbe cmc or mov mov push (bad) jg enter hlt mov cld mov movb ret inc add subb icebp (bad) lods push pop sub inc mov dec push add jge adc adc xor push jnp push mov aas push enter mov mov push push mov orb adc les lods xchg and push add and aad adc and mov sti sub and (bad) cmp (bad) xchg movsb test sbb sbb cli call and bound mov (bad) mov jmp mov movl adc mov mov pop mov jnp movsb test js sub and insl cld jl and pop mov in push call pop sub or xchg mov add mov cmp push dec and inc add std jle icebp lcall cld lcall adc or (bad) (bad) fbld gs cltd pop sub jmp sbb pop in lock xor jg adc jne in data16 imul (bad) addr16 dec ja aaa (bad) loop cmpl jo mov movsl imul dec fnop inc xor pushf push lods pop (bad) ja lret inc test mov sub cmp adc push stos jg out fs or mov lds mov push jmp jbe sub shlb inc xchg shlb das xor out add adc add jmp sti mov nop and add std xchg (bad) lcall test les pop xor inc jl xchg pop cld jl std das xor mov and stos or clc decl add dec (bad) sub push syscall loopne jo dec call adc mov xor xchg lock inc or adc idivl dec xor in mov jmp addr16 mov adc les (bad) fistpll add ja jp mov aaa inc (bad) rolb mov ja dec decl mov push pop shrl out fwait cli ja push push inc mov sysexit das insb (bad) fistpll inc fucom mov movsb test add js or movsb test aas xor mov xchg (bad) ja mov test js aas dec push sti mov rol add cmpsb outsl std mov imul jge add jb cmp movl icebp fcomip sub cmp xchg jl sti mov or sbb mov cmp sub and cmpb cmp mov movsb xor cmp push push decl push push xor cmp jnp cmpsl out lcall ljmp mov mov pop (bad) adc jge jnp mov ja mov fwait adc (bad) jbe or xchg inc mov into or pop and and mov adc push pop mov jbe fpatan jl add cmc dec push add out call (bad) outsl add xor test ss cmpsl lods adc push (bad) jg cmovbe std adc pop xchg fsubr call add mov or ficompl jge lock clc lea movsl and mov std jg mov adc call ljmp adc adc sbb outsl pop (bad) call rolb jge sbb sbb out sahf clc xchg call add insl xchg (bad) mov mov addr16 mov add pushl xor xor (bad) cld push xor out ds sub push (bad) push adc cmp test test mov dec xor mov (bad) fbstp ja pop xchg mov add cwtl ficoml inc adc mov add adc aas orb dec cmp mov into add call dec ret adc dec std std fwait call xchg (bad) adc push or or ret jmp inc sbb mov ljmp popa sbb xchg push cmpsb icebp jg (bad) jbe cmpsl sbb loop jp aaa mov test outsl arpl mov and popf aad add sbb push loope (bad) xchg inc xchg cmp dec mov or cli mov add clc outsl pop mov arpl sbb rorb or push loope ljmp (bad) adc cld add jb or xor decl or mov leave lret es ret (bad) dec push imul pushl and nop mov out repz psubq lds adc xchg aam mov push add xor and jle aas jge test loop cmp pop mov push int3 call xor fsubrl push (bad) rorl jbe xor dec pusha pushf inc and test add xor push add sbb and fisub jg xorl lea mov data16 call cmp mov cmp out test sub xor cltd outsl cld ret jne sub shr (bad) cmp sub ljmp sub clc or es or fimull sbb ljmp andl cmp repz cwtl jmp xor outsl sbb mov or xor fucomip inc xchg sbb mov add loopne jge outsl cli inc add adc sbb int sahf dec roll or pop or pop cmc imulb add lahf and adc nop push fmull xchg sbb add bound sti push cmc push xchg pop add inc push add mov mov inc incl adc sbb insb jnp pop in xchg or (bad) shrb xchg in xchg add aas sbb sbb lods andb jg adc ret mov xchg test xor mov (bad) lahf icebp cmpsl adcl jle (bad) bound test add push and es xor sub stc cld out mov cld ljmp mov aam mov mov mov push cld add (bad) and jg mov lods mov aas adc loopne mov mov (bad) outsl add adc adc movsb dec (bad) in lcall scas adc scas pop int inc jl rcrb (bad) call fistpl nop push (bad) popf or jne mov clc js jmp adc xchg (bad) testb outsb jne dec add icebp fbstp (bad) gs (bad) (bad) add and data16 inc int3 fdivrs imul fild out mov xchg mov (bad) call nop aam or pop clc push das movsb adc push dec or out push xor lcall test push cld ja fiaddl icebp xchg jg lock fmuls pop (bad) cmpsb cli les or gs outsb mov cld mov cs push pop push decl jmp push adc xchg pop mov jbe jmp mov in jb daa rcr push add (bad) push fsubrs aas jp aas sub les pop inc outsb cmp mov clc std outsl hlt call inc loopne aad push aaa fild cld push jbe or imul out or mov pop popa decl iret jo push pushf mov adc std and cmp or mov mov mov add mov inc mov mov repnz add inc mov clc push add ljmp and cmc (bad) mov out addr16 add (bad) shrl fnop jge adc push mov push and adc nop clc inc cld inc add mov adc (bad) lcall mov and fsts jl fimul pusha push mov cmc dec mov fcoml ds dec insl ja in or sub stc movsb and loop fwait (bad) mov sbb sbb out scas jmp lea xchg adc mov and nop pop jge lcall cmp aaa cmc add and ficompl fcomp loop ljmp enter jle and fiadd adc ret mov dec out add jg mov and outsl lods incb adc rorl (bad) (bad) (bad) fildll aam push inc (bad) negb mov xchg jbe mov xchg mov add and pop call incb push pop aaa out fsubs dec roll movsb inc xchg sti add pop cld fcomip in cmp sub xor and clc je fnstenv dec xlat add (bad) stc jge mov push xchg dec bound idiv or adc (bad) jg jle and jnp out out imul pop push add mov add aaa xchg jg enter sub lock cmpb mov icebp fisttpl mov push add cmpsb jg lcall cmp pop adc push pop mov popa and or jp xchg (bad) mov jbe push enter scas cmp sbb outsl adc push add jle es inc sbbl std dec inc je add ljmp push ja jg mov movb xor pop mov sbb sbb andl jle jge pop cld or sub dec adc inc movsl xchg in js inc mov imul xorb and add ja add and and cltd fs gs lea push or cld lods and popf or icebp jg sbb aaa decb fwait mov test push push push sbb icebp aas push add inc icebp add push cld clc sbb add mov pushl sub in clc cld xor inc fistl clc frstor adc (bad) sub cs ror or insb hlt pop stos aam std fistpll pop push push inc iret (bad) push adc sbb xor or ljmp push cmpl jmp fs loop xor mov incl add push jge test mov mov ret sbb push adc ret scas mov cld sarb and outsb mov pop inc add lock fcos mov sub sbb xor (bad) pop xchg lods mov (bad) mov insb icebp insl popl pop das xor scas and xchg aas fisttp mov jne fcoms test ljmp cmpsb pop adc ret (bad) mov cmc imul arpl jbe jo inc mov jg pop outsl pop (bad) std push out cmp adc mov cs ss mov (bad) ds movb pop addl sahf add pop pop push add idivb (bad) (bad) aas das jae inc sub pop dec es addr16 push setg mov clc mov inc sbb (bad) and xor or pop sar pop jge fdivs pop jl jae xor mov cmp (bad) ljmp jg mov lret push mov mov rorl (bad) lcall mov adc dec push mov sub sub fbstp or mov inc mov movl ss pushl fmull call (bad) jb inc mov fldenv dec hlt and or js sbb lds mov adcb imul fild pop or daa adc adc mov sbb call inc aas mov adc dec (bad) (bad) jg xor pop or dec inc adc or jno cmp pushl mov or subl std movsb and jbe std push sub adc adc outsl test subb lcall call das and enter mov out aam mov popl cmovnp out mov add xchg mov int (bad) fadds adc sbbb sbb mov outsl jmp cmp mov adc and push inc adc inc dec inc push fs dec rcr sbb dec mov jbe std aam leave cmp inc cmc pop pop cli add imul cmc hlt sbb adc push sbb mov (bad) lcall cld add cmpb std cmc and into mov ljmp fiadd mov adc inc pop cli and orl adc add push insb cmp jle mov cmp adcb daa add orb fbld add std call or add pop adc adc popa xor ja or stos add and jne jmp sti (bad) adc and inc fwait jle int3 negl mov mov es cmc aas dec or int3 fs jno adc addb lret add ret in aad jnp in call rorl insl jbe gs cli ja jnp andl add sub or mov icebp pop adc call (bad) lcall mov fcomps test pop or in add push add (bad) mov (bad) stc jg add xlat mov xchg clc lds aas sub add cwtl sahf mov cmp and pop inc in popf sti and adc pop aaa jne outsl (bad) lcall adc call shl rcrl xor int loop call pop or test pop icebp inc (bad) std lea sub mov cld mov add adc sbb sbb outsl and pop push adc add or (bad) aas pusha and cltd ja push pop adc scas mov inc adc push adc les push add enter sub enter icebp decl jno loope push and jg popa decl add adc js cmp std xor mov fcomps pop in add (bad) adc adc or test cld ret xchg test push test xor cmp and incb sbb test decl add std push test (bad) jne mov push inc into mov push or dec pop (bad) mov or sbb or das stc (bad) fistp dec xchg (bad) out ss dec (bad) dec push sbb or or push sub ret add aam add and mov nop and jmp mov adc div (bad) decl inc dec pusha dec sub pop xor dec lret dec mov add imul call lock hlt or out outsb lcall aaa mov cltd out sub add jl sbb dec sti pusha out sbb xchg ljmp xor fcoms mov mov and cld inc lsl and incl push inc adc ja aas dec pushf (bad) call dec dec dec xchg pushf cmp dec mov loopne adc pushl mov lahf pop dec cld (bad) call adc pop dec mov cltd jle adc mov (bad) fistl sbb nop daa fistpl add mov adc in mov xor xor adc ret (bad) xlat pop pusha jno mov add js xor (bad) mov imul sbb rcll rcll (bad) fistpll or or fwait insl rcrb mov xchg icebp (bad) decl arpl add aaa jae cwtl adc mov mov sbb and andl push dec mov jmp add icebp adc pop stc jmp jbe test js xor mov cmpsl js xadd inc das cld outsl pushl adc push rorb clc mov add xor dec jge xor jge test nopl add xchg jmp stos scas adc xor nop lcall add outsl jl pop test lods lahf mov cmpsl xchg je mov or nop mov addb dec lret push dec sub sub addb mov pop mov pop mov les cld or mov pop and daa iret xlat sti ljmp std or sbb push pop aam outsb test ja in mov cli jg sbb (bad) xor (bad) mov add adc incb lret push ljmp lret xchg cmp push outsb xlat ffree mov add jo dec sbb je div adc add ja out jbe je pop inc add pop cli and add imul jmp loopne in mov push xchg lock addr16 int addr16 xchg mov daa jmp subb sub movsl fisttp sub ja dec jne or mov push inc and (bad) in pop inc cwtl int inc or or loop sti idiv jb cmpb adc int3 inc cmp jge jg sar movsl xor xchg add (bad) rolb or sub aas pusha add dec js es test dec aam mov and cli out sub or fildll in sbb rolb das lock pusha and mov sti mov inc jg clc push (bad) or int3 stos sub xor push cli fisttpll inc xor pop negb sbb add pushl cld std pop rcll das add pusha clc xchg dec popf sbb rorl popa xor adc inc jl push push or lds mov sub iret adc inc push in incb push rol jl jo clc std ljmp mov push sbbb orl mov enter adc aaa cs dec mov nop cld adcb pusha incl sti or dec adc xchg fwait or es xor push add inc add outsl dec je incl mov sub jg loop (bad) mov dec icebp and cld (bad) ljmp adc repz and inc push pusha jo cmp rorb sar rorl and add sbb roll sbb inc aad add push adc out lret mov mov sbb mov dec pop mov add push sub add sti push xchg add add les cld sub xor adc mov rclb (bad) ds sbb and push jge (bad) (bad) (bad) outsl push add outsl push outsl pop fsubrs pop fisttpl jg jg outsl data16 mov push (bad) ljmp outsl jbe jle and cmp fwait int outsl jecxz out and dec mov (bad) aaa in add and inc mov inc idiv xorl xchg fwait js inc add or icebp push mov cmp pop faddl or sbb inc ds fistpll add cmp loope mov inc xchg ds inc dec xor add cli decl outsl sbb mov and test and mov ljmp popa sub incl scas xor add in mov es mov push add mov sbbl scas daa sub push fsubrs fcom dec fnstsw adc push jne sub testb daa mov inc jb add outsb das hlt pop ja fldl or inc lock pop push or mov shlb sbb lcallw pop pop enter sti mov mov mov add leave pop or pushl sti jg (bad) xor int add (bad) mov pop push enter dec clc xor or cmp ret adc mov (bad) fmulp ret testl fildl movsl xlat sbbb mov in sarl pushl je mov or cld jo inc icebp and loop lods loopne sub adc arpl mov insl sub imul xchg popf sub lock adc xchg lea data16 loopne pop sbb sbb arpl or and jae inc push cmp sub insl mov test jle sub lea push and cltd jmp sarb hlt sahf sub add pop aaa outsb call mov adc ror aas jle leave mov ljmp push mov adc jno popa sti pop push mov pop (bad) lcall iret lea xchg sahf jecxz loopne push jae bound in pushl mov push add mov inc pusha jl add (bad) ja and sub and (bad) fcomip and leave and mov lea add pop add lods mov cld pushl daa pop fsubs or mov pop sub orb les pop loopne push ljmp or ret les add and and adc daa add add ficom cmp mov or or (bad) jg sti out xor adc lahf int jge movsb mov pop into adc jbe (bad) mov sub mov add mov cmp add mov and flds xor mov add inc mov (bad) ja add jb movsb adc push sub sub bound ljmp es lahf mov add popf and aas and in loop out out lahf addb or jecxz shll cmp push clc ja in sub bound sub add jg mov add inc insb mov les aaa in repnz or (bad) out pop xchg add fisttpl pop stos fwait ret icebp lods xchg adc adc xor adc mov add sub sbb insl and and sub or mov or mov mov (bad) out add add pop cld add fcomp mul fild cmpsb jle jmp mov add pop sbb add incl fnop adc jbe cltd add inc xor fwait cmp inc xor nop and add adc les (bad) out (bad) mov push shll add addr16 inc add pop add lret inc jbe add roll inc clc push cmp add sub add test (bad) incl pop rorl xchg or idivb add (bad) call mov pop nop and add xchg or outsl das sub mov or push decl add pop shrl (bad) sbb jmp fs add and lea popf jns sbb pop das cld out mov movsl mov pop inc inc loope or pushl jb (bad) sbb mov dec inc je out push xor and and (bad) incl or jae dec dec or jae mov sub push mov dec (bad) ljmp ud2 arpl pop xlat insl mov or add outsb imul inc and fnstenv (bad) cmp push (bad) mov add jne subl mov sub lock lcall mov popa add push outsl je aaa push lods sbb andps ljmp inc movsb jmp push jae mov scas mov imul sarb std sbb dec aas outsb xor punpcklwd mov loopw fidivrl gs aas int imul and or push jg addb mov inc add add dec pop add push xchg dec aam incl add sti fs lock xchg je add or push add jo (bad) insl clc xchg ss pop repz inc jle stos add ficomp gs out scas add in (bad) pop inc bound jnp jb or xchg and mov add aas xor (bad) stos add aaa outsb testl (bad) cmp add fstpt jle dec or pop ljmp mov stos add or scas dec add in das pop sbb push movl aaa mov call daa jle mov mov push imul lcall xchg jb pop inc rcrb (bad) lcall mov pop push push and and sbb (bad) fisttp cmp sbb mov pop inc and pop push push pusha fildll add fstl imul dec lock mov inc lahf mov dec add pushf cmp rorl lea cwtl insl and cmp sbb jns test dec (bad) (bad) lcall out xchg and push sub xchg xlat dec imul imul inc jp dec jecxz sbb mov mov (bad) (bad) jg jae xor and outsb jae dec popf cmp jo push xor xor stos insl adc pop mov pop out push stos jg insl adc imul cmp adc sahf stos leave xor jge jg push loope leave jge addr16 clc cmpb insl jnp gs jl xor (bad) popl scas adc pop js ret pop test pmulhw add inc lods jnp popa pop outsb loope outsb sti divb cmp mov mov (bad) outsl hlt shrl sbb jecxz (bad) (bad) (bad) decl mov out xor out outsb cmp mov jns mov and (bad) cmp ja (bad) arpl das cld xchg mov in cmc out data16 insb sbb addr16 pusha test mov push push push ret inc pop adc inc lahf push add or mov dec and inc sub lcall (bad) xor sbb mov aaa jno in dec mov negb test mov cmpsl insb push and cli xchg jle lods inc and pop or cmp pop sti test jg outsl and out add mov dec pop fnstenv leave jo nop sbb dec cwtl in mov jo aad loopne sti mov (bad) sti jbe jb mov adc in insb cmp (bad) jg adc test das pop (bad) pusha ljmp std mov or add sub fldenv mov cmp ljmp subl mov rcl iret outsl scas icebp fs out (bad) call inc idivl jo arpl xlat cmpsl popa pop jmp sub cli sbb aas lahf inc cmc loope scas insl cmc push xchg push mov (bad) jae imul sub and jmp mov and cmp or jge (bad) clc xchg je push sub xchg hlt (bad) (bad) dec xchg adc push xorb addr16 xor aas push fwait inc clc pop setge (bad) jmp add addr16 push xchg insl leave pop inc mov das lock xor pop jge jbe decl jb test dec jo cmp cmp iret lds jmp sar jmp sbb push iret call pop or sahf aam or outsb adc insl mov (bad) jg inc push mov and insb sarb mov pop pusha adc adc dec fdivr rcrb inc sahf cmp sub push push jns enter rcrb (bad) cmp in nop pop push dec pusha adc js hlt call (bad) (bad) cmp push jns xor sbb hlt fmul outsb pop enter dec mov icebp fildll popf jo (bad) movsb adcl imul add lcall push push psubusw mov jb hlt (bad) ljmp lahf orl push cs or call addr16 popa fist ret xchg dec imul sub lods xchg (bad) call aaa aas in and shll (bad) lcall jae repz push add mov add mov add (bad) pop add test xor cli add inc mov aam jnp inc (bad) or ret push aas pop std aaa clc jg and push adc fwait xor or add add add adc add adc (bad) jg aaa mov lock and das in xchg mov inc mov fwait int3 or mov and das xchg add add add das and adc xchg and das xchg add add add add aaa popa and mov ret insb push fstps outsl hlt add stos jg inc inc dec andl or test jg pusha rolb ret (bad) punpckhwd inc sub xor mov mov sbb lcall inc addr16 add incb sbb add cmpsb pop sarl push inc stos adc pop sbb adc sbb or jge not scas or inc cltd mov push (bad) adc call inc jmp in inc (bad) out stos jo push push mov inc lcall mov mov loope dec shll je insb pop mov mov push add ljmp mov arpl test fs outsl popa fs insb js outsb mov dec pop xchg push jns jp ret incl xchg push insl repz jns cmpsb gs xor inc add lcall stos push and arpl pop xor enter xor pop sub jge add (bad) sub mov jmp jmp mov and add mov std jge pop cmpsl jns (bad) dec push adc mov (bad) (bad) dec pop add test das clc mov hlt aas fsubs test pop pop decb mov call dec cmp loope loopne xchg outsb push mov adc pop ja fnsave aas jg pop loop xor pop xor jmp fdivl xlat jmp cmp aaa stc xor xor js xor aaa add outsl mov pop aam imulb sarl (bad) (bad) jg add push js mov or repz cmp ret stc popa xor sbb cmc fstpl xchg sub sbb mov mov aaa mov push inc js push call into jne gs pop push dec inc out clc popa dec cld (bad) stos call mov push popa dec push mov jmp aas add xchg sti aaa pop fistl sbb test fdivrs or push pcmpeqd (bad) decl nop xor jp pop or dec mov dec testl clc (bad) mov jle xchg adc xor loop inc mov mov inc or out js lods xchg dec add rcrl mov test notb jbe sti adc aam jno add insb ljmp pop cmp adc imul push stos and adc inc daa ret jle sub sbb (bad) ljmp adc or xchg mov outsl inc sbb pop jnp test add or pop mov push jbe scas sub int3 jg adcb mov pop lret fstpt sbb mov cmp cmp pop cmp mov and push rorl sbb dec mov orb (bad) cmp or (bad) in mov (bad) idivb pop fidiv (bad) and icebp mov mov sbb pop sysret mull cmp movsl pop jl call loopne sub int3 xor les mov iret lcall jl je insb push or sarl xor sub and lcall mov lock mov pop les sbb into jne in divb dec xchg fs lods add fs or mov or jg mov into add loopne inc mov paddw arpl pop arpl fistl fild arpl arpl push arpl cld (bad) in rolb push mov cmp jecxz fldt xlat arpl (bad) jmp arpl arpl pop sub adc jmp lcall bound ret mov lret sbb insb pusha xchg xchg imul mov push imul lock mov push stos out jo jge push rolb das cld mov xchg add in mov loope dec pop jno xchg push movsl adc push mov cmc fwait adc or cltd push rcr add mov clc aaa add ret mov clc psubd or push sti pop push cmpsb fild or loopne test incl adc jg inc jle pop ljmp shr adc test cmp lods jae or mov (bad) mov push push sar add arpl pop pop jle xor (bad) mov jo xchg sub std or pop enter scas jnp ja mov dec sub rcr push lret cli or test pop add xchg add and adc mov inc push cmp sbb sbb adc mov or inc xchg pop loop sbb sti fsub mov pop push jecxz iret lret pop daa aaa data16 pop scas insl setae pop (bad) pop push mov test xlat les enter add rolb js mov rcrb sbb dec xlat mov add mov shr inc or insl lahf lea adc loope push sbb add mov aas pop insb icebp add jae dec test out jg jmp add pop je ret add xor cmp shrl (bad) jmp out add lods loop add mov push push clc (bad) jnp adc push adc (bad) mov (bad) testb pusha add sbb imul jb lock stos stos sbb divl clc ret adc or aam push nop loopne test insl inc stos stos (bad) fisttp fwait mov dec lret add arpl cld mov lea mov push jo push popa lret inc (bad) fisttp push push lds in int ljmp mov cmp pop loopne cmp in (bad) outsl cmpsb push sti fbld jg sbb aas or pusha outsb xor out sbb (bad) adc dec loop xchg mov aas mov jg pop and xor leave (bad) aas clc pop das mov jae and hlt js sbb mov lods test test lcall jmp xor add sub inc adc cwtl push jmp fdivr idivb add jae dec jae fistpl gs nop inc fildl push jle jo clc cwtl adc ds outsl add out dec inc adc dec dec iret sbb ljmp adc pop dec ljmp icebp push (bad) (bad) pushl stc insb cmp cwtl mov dec mov ja test imulb stos push adc cmovno outsl rorb and sbb lock aaa in mov arpl ja,pt cmp cmp subl popa (bad) or bound fildll sub outsb jnp mov cmp add lock push pop or lock dec scas add fmuls mov mov pop inc push push lock ja out fldenv and inc insb fcmovnu push pushf imul iret jo push jne outsb mov dec inc xor iret adc dec fbld inc jae sbb in push jo xor cmp push imul mov icebp mov loopne push mov jmp ljmp pop movsl jo xchg jbe xor shr mov mov jae dec cltd inc push add insb fiadd je jecxz xor (bad) in cmp scas outsl (bad) push jne push cld sarb neg mov add scas gs stc push jg setns push sub fdivrp addr16 adc (bad) (bad) mov mov (bad) push fstl (bad) mov add dec inc dec jae insl clc or out fwait push lock clc outsl jbe (bad) or or adc (bad) or mov test cld insl mov int3 xchg jecxz jl outsl jl (bad) jne mov lahf cmp jmp sub lahf add loop push sti addl pushf fs call sbb popa lahf out incl addr16 lcall mov ffreep pop (bad) jo inc data16 (bad) or cld xchg arpl inc mov xchg je outsl call sbb and inc and popa xor mov and pop and adc stos push or fist call adc sbb push adc or mov or xor push push xor or dec inc pop push sub or daa or and and inc adc add and fistpl inc push clc dec sarl sub push ja adc or adcb cmp or cmp fistpl mov push sub jl or mov or adc push inc std out jle mov pop push or or or and testb not fistpll es or or push femms imul ficomp push add repz (bad) mov add add push push ja or mov out or xchg sbb push adc push aaa add sbb call push adc add or or or mov push add es sbb sub outsl inc pop adc (bad) sbb and adc int3 adc fistpll cmp inc or adc lock sbb dec int mov or and clc lods or or sbb or sub sti mov adc and sbb jle das jge and push out dec dec push ret js,pn jae cmp and dec cmp push (bad) xchg dec or lock in sbb sub xor outsl pop jne adc mov jae sbb or daa sub sbb das inc sub push jge dec fidivl (bad) mov aaa (bad) push and adc or cmp add popa dec insb out jg mov adc or cmp fldt ja add pop pop mov or mov jb inc sbb fs push jae xor adc hlt decl cltd add or lock add hlt sti lods ret dec cltd rolb xor dec (bad) or jg add sub push pop add ja sahf add or add and xor or aas pop and push aad mov sar push outsl cmp sbb add pop push xor cli or mov mov add add sub lock inc out cld dec and in cmp add popf and mov adc add or sub addb flds mov and jg insl sti mov ja adc adc cmp jnp push or add ret sub std fwait jp icebp and dec add lea pop not pop or (bad) pushl rolb mov or sub sbb andl pushl fidiv adc (bad) out push out jae (bad) xor xor and shlb fisttpl lret cmp mov fstpt shrb pop clc mov cmp int3 inc orl call (bad) pop inc xchg or cmpsl je cltd jae mov mov add jbe cs cs loop (bad) jb test bound push push mov pop pop sbb (bad) fist xchg sub cwtl add test sbb sbb pop in orl add push jno push dec push (bad) (bad) fistl pop outsb add int3 cmp add add notl outsb inc add shlb add fcomp add fcmovnb in adc jl or mov hlt adc int incl nop add inc mov inc add jne mov sub adc jb pusha das mov xchg adc rorb or jae xor subl dec (bad) jb popf cmp sti je mov das leave or and dec pop enter jg pop push roll lea orl jbe mov inc xchg shr arpl inc mov nop mov xor add icebp cld jmp insl sti mov mov sub cmp ja cmpb jne mov mov (bad) imul shr rol xchg sub sub jp add fistpl int cld les adc daa (bad) mulb mov or xchg sbb or outsl fstl mov push dec repnz push adc push add cs mov add loope xor push mov ja or and ja add mov jo push loope pop jo loop mov pop loope add scas and scas push jo fdivrl loop push push call lea jg (bad) (bad) fcomip pusha sub adc lea push cmp jne sub jmp mov xor push cli inc mov add add pop nop and add sbb subb out xor pop or sbb add mov in xor insb jns js insb (bad) fnstsw outsb jae nop jb cmp push push push add sub test cmp insl jbe,pn and sbb data16 subb scas rcrl cld push xor xor ds pusha xchg dec xor call jg in mov push jno gs subb call test push mov mov xchg insb add imul mov insb xchg arpl adc sub in (bad) addr16 das cmp adc push fsubrs jge stos adc prefetchw adcl out fcoml arpl adc movsb sbb jne imul pop roll lcall orl in dec inc push dec inc dec xor add fdivr inc dec dec add push inc push dec or mov dec pop sbb push push lods sbb pop or inc mov add setno subb je (bad) stos cmpsl je xchg add add push scas ss cmp dec inc adc ja mov push scas xor cmpl add wrmsr add cmp adc loopne pop nop push adc adc cmp fsubs dec jne push sbb xlat adc imul or sub cwtl mov inc mov bound imul sarl fs inc frstor cwtl lock test in xor xor xor push add xchg (bad) mov sub adc lret out or add xchg push loopne lret xor enter add and add out sbb imul mov mov mov mov icebp or sub mov cmp and inc inc or adc adc (bad) (bad) mov (bad) (bad) lret push push outsl mov add or (bad) ret inc inc arpl roll inc int3 outsb popa dec data16 pop ss push enter (bad) aaa jnp ret inc inc mov pushf cwtl add sbb and loope or ret and adc sub sbb mov inc push mov adc in dec jae xor inc mov fs pop mov popa fs xor pop adc int or xor jb,pn push fadd sub pop sub loope (bad) (bad) pusha mov jo push sbb adc xchg add adc mov mov push das (bad) mov mov mov nop inc int3 add and cs inc gs aaa pop add push mov or imul es add push add or out xor test xchg fdivrl mov jbe adc xchg add sbb nop dec adc push movsb or and ret sub pop jp dec test nop xchg and or push (bad) jno or sarl popa imul movsb mov push pop into sub mov jns jae sub rcrl ret xchg inc aad das (bad) out hlt push mov lods adc push add lods (bad) gs xchg shlb les xchg sub jae (bad) and push and push mov inc inc cmp xor mov shrl lods inc adc and push mov int inc inc adc or add pusha push in adc mov lds or fwait xor (bad) mov push push pop insl fldt sbb adc add jne scas sub sbb adc add (bad) (bad) decl or pi2fd add and push and cmp dec and adc rcll icebp (bad) lcall dec push sbb add femms add mov and sub adc xor and sbb dec mov push syscall and sti sub adc adc sub movhps or adc adc and pop push sub dec pop sbb (bad) ljmp add and pop das inc push or inc and sbb push push pop sti mov jle adc push add adc adc xor (bad) (bad) (bad) call sbb dec or xchg add adc or inc push pop xor inc inc or and xor in or push pop aad adc sbb mov push idiv adc xor or lock push sbb sbb (bad) adc dec mov mov lods dec adc (bad) lea add sub das xor or or adc and or adc or or push add sti nop inc xor pop lock jecxz jg cli add sbb adc lock jl and in inc pushf mov add (bad) cmp cmp pop sub dec or loop mov movsl call sub mov or or mov xor bound or jo jmp jo sub add sub dec fiadd loop rclb (bad) sbb das add sbb sbb adc add (bad) pushl adc and (bad) cmpsl add pop pop pop sub or adc adc jb push xor (bad) push test mov mov ja aad mov mov and and lock pop lock add (bad) xor inc pop popf sbb add mov and and out add pop adc dec push add push and xor fistpll pusha cmp movsb sbb push js subl xchg fs push lds pop push mov in sbb inc jno mov adc in decl dec or mov push dec push cmp cmp pusha add sbb mov mov outsb sbb add pop lds and ds lock adc adc outsl push push add or or subb adc inc sub fistpll add cmp push pop and (bad) pop (bad) aas (bad) das adc and push sub sub mov clc incl cmp or lock add sub loope adc ss push add add mov ret add or fcomip lcall mov jl pop sub leave sbb adc lock pop incb add lock outsb or adc add (bad) xor lods or push sub xor (bad) lock or fsubs xchg xchg sbb or or add mov rolb add add test jnp or call outsb add js data16 inc pusha add and or xchg mov add sub iret sub or add in ror (bad) aam mov inc sbb and loop jb add dec inc cmp and add aaa fs dec decb mov add or lahf enter inc cmpsl mov das mov cmpsb je es pop enter jmp jp (bad) jbe sub xchg fidivrl sti push or cmp cli inc and jae cmp xchg js aaa sbb jmp dec mov repz bound inc mov gs add data16 inc add add mov inc adc add add add add incl add add add add or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add or 