(bad) cmc ret mov inc add add add sbb add cld sbb jae (bad) or cli inc imul in or dec popf insb push sbb loopne jnp sahf cltd testl shrl addr16 fsubr bswap nop mov jae pop mov add cmp sbbl push fwait subl (bad) je test rcr mov mov push xchg lods add imul out jns (bad) repz mov lods ljmp xor pop adc sub out mov sahf cmpsb push std push push (bad) ret fnsave sub push clc mov mov mov insl adc sbb or sahf in cltd cltd push pop mov mov xchg xchg xchg sub fisttpl clc outsl add xor cmp and cmpsl add aad jg cld mov mov divb int3 push xchg (bad) cli pminsw jmp and jmp add jo mov sahf push jb push push mov xlat and lods jle daa add jns out pusha cmp jge sahf push dec or xor fisubrl fwait in pusha mov adc ret xchg sbb or cmp das inc enter inc popf sarl xor jne lahf or fisub dec inc mov fwait lock cs inc imul inc aam cmp (bad) fisttp insl mull and stc xchg pop cmp incb divl inc add xor mov ss out std xchg dec std pop pop mov sti popf sbb into inc cmp mov hlt mov and jp jp ljmp push lcall (bad) jnp in and icebp xor and cmp xchg xchg cmp push sbb jbe lahf ret ret pop mov push (bad) mov mov xor int3 ja scas icebp mov clc rorl fsubl sbb add je xor pop lret shl call mov mov adc xchg or push das mov cvtps2pd xchg jmp mov hlt push add jns in addr16 arpl out xor stos pop addr16 aam arpl mov (bad) pop adc add xchg bound push adc mull fsubrp (bad) int cmpl loop xor pop lds adc add stos and sbb adc fisttp push loope (bad) jmp mov sti jae adc cmp fidivrl gs pop scas int mov cltd scas cmp push push xor mov call aas addl and push sarb push inc or xchg (bad) jb dec inc loope dec loopne mov fnstcw cmp aaa stos xor jmp enter mov hlt adc (bad) das popa inc push shr sub cs aaa cmp aaa dec test dec cld inc adc je sbb sub ret mov adc lret fwait outsl xchg (bad) daa push into mov inc mov push movsb aas aaa ja outsb adc ja jo leave insl inc test inc (bad) fstl pop and adcl insb sub mov and cmp jp dec sub inc jp xor or dec dec lods pop sbb sahf lea aam push cmpsb (bad) (bad) cmp and inc test jnp mov fsub in negb (bad) sub dec (bad) lret or jns ret aad or bound leave int3 divl fbstp push adc mov xchg lods adc leave and outsl add adc (bad) mov xchg imul xchg sahf arpl lret cmc pop int3 cmp stos lea sbb dec pop dec push sahf xor popf mov out repnz fs sbb stos cmp out add xor in push or xchg leave push cmp jmp pop jnp pop inc mov mov xor mov pslld push pop jg push inc sub (bad) call sbb adc fwait jnp movsl fwait jl imul lods mov sub cmp or push jnp loop fsub lods stos faddl (bad) std sbb dec pop pop in jb fwait test xor and int3 ljmp int3 xor pop mov ljmp stc mov xor jl sbb pop or mov mov ja xor shrl das and mov xchg imul inc aas cltd scas stos std imul mov mov sub (bad) fild push (bad) sti xor jne lock mov shll jae test lahf insb out jno cld cmpb xor jp in dec in xchg jbe imul pop adc scas out lds cmp sbbl bound (bad) nop xchg cmp rorl sub xchg mov mov push addr16 mov (bad) std push (bad) jmp xor or mov sbb idivb push mov pop dec js (bad) repz inc sub dec pop fcomps push shlb jnp mov jo out cmpxchg dec sub and daa sub adc dec sarl sti das pop add cmp pop cs fisubrl nop sub (bad) sbb std jg inc cmp pop nop xor imul das loope loop loope imul jmp mov sub nop inc cs loope fsubl int3 add sub fistpl movsl clc cwtl ret loope test xchg and stos mov pop imul sub jne pushf rep sahf mov sarl das push repz push push dec call pop cmp lods mov mov adc adc test jns push shrl (bad) sbb cs jno icebp pop lret mov inc jmp pop jbe outsb data16 out push mov std xchg add jne cmc incb mov (bad) repz aam lods (bad) out sub loop das xor xor in xchg shlb hlt add sbb gs pusha pop popf add mov sbb in es adc out pusha add (bad) jno ds lock (bad) mov jno aas jnp gs pusha cmp mov and (bad) in daa stc movsb nop xlat sbb popf imul jl cld jb int3 cli gs and mov test cmp push push in inc fldenv test pushf nop xchg jp insl jmp xchg pop movsb or sub xchg rcr mov jnp imul dec cmpsb mov push std mov or js xchg lock imul jno stos cwtl imul movsb in sub adc fidivrl test fcmovne fwait or pop xchg jns loop out push bound add scas mov enter sbb dec push fnstcw mov out mov push cmc movsl cmc jnp sti dec loopne add push repnz (bad) mov cmp iret pop cmp push push pop jae and jne nop (bad) leave ret xchg out stc mov rcrb lock xlat fs out mov push loop xor xchg sbb xor add pusha jecxz (bad) jo int3 xchg dec in inc sbb xlat xchg sbb push mov std sbb scas pop int3 fidivr cmc jge es ret add lcall notb mov jne pop mov xchg or mov repz or iret sahf dec sub dec fsubrs push jl leave in loope movsb pop fwait notb push insb sub int3 adc rcrb (bad) je in push xchg cmp cmp fsubrp test jnp cmp or mov xor call and push loope xlat mov pushf sub xchg cmp add pop imul cmp mov (bad) xor int3 sub mov ljmp or stos int3 or iret mov loopne movsb cmp pop adc jbe push push add xchg rcrl pop jne push into jmp rcll mov add xor and adc mov mov mov daa out pop cli fcoml xchg inc int jo adc xchg sahf cmpsb les es lret scas js adc dec stos sub add jg mov push jno dec mov andl mov dec in jp jne es in (bad) and dec outsb sar adc lret out fstl xor in xor mov xchg adc push and cmp cmc out jle jge mov cli fsubrs jmp daa cmpsb jne sbbb fisttp adc push loop rep enter gs push in xchg flds and aas loopne pop cmpsl ret (bad) push (bad) fcmove shrb loopne (bad) into mov xorl clc sub lods sub mov xchg lods jno arpl cmp dec cmp add pop mov test cmp (bad) inc hlt mov (bad) in clc into mov (bad) xor cmp pop clc pushf jp (bad) ss imul mov sbb cmp push push (bad) xchg ja je (bad) into adcl lea adc add lcall xchg jle scas cmp xchg outsb aaa test (bad) jne xor sub push and mov fisubl adc (bad) mov mov lret test shlb inc pop ret jns aas mov shrb inc jp mov or or shrl sbb xchg lea mov cli bound pop inc adc (bad) push loopne sbb xor sbb pop fisubr call test add test pushf mov or les les (bad) sbb lock clc sbb mov mov xor xchg test les mov leave dec jmp mov push push ljmp fwait adc sbbl dec jmp (bad) add cmc icebp (bad) dec arpl sbb mov dec xchg outsl mov cmpsl pop stos bound add sub xchg xchg jge push pushf add jl shrl imul push aaa clc xchg pop and add popa stc push movsb xlat pop add sub outsl xor xor cld inc clc adc sub repz enter in outsb xchg and sbb adc pop sti cmpsb test insl lret sub fnsave cmpsb adc out jg mov jb mov xor xor adc sbb mov push repnz xchg movd rclb pushf rorl mov lret mov adc mov push xor cmpsl rolb hlt imul rcll mov (bad) in and stc out xchg out lret jge and and pop (bad) mov mov add push (bad) or pop sub nop inc add mov push add (bad) mov (bad) (bad) dec or jnp out pop jmp adc mov js xor lcall push push sub dec mov fcmovu cmpsl stos push add out xchg ljmp cltd adc das jp cli jbe mov adc rclb or mov fsub loopne lret cmpsb push fcmovb inc into dec inc insl mov (bad) insb pop push daa or cltd inc xchg test xor xor cli fs adc jns aad xor xchg dec loop push jbe dec (bad) (bad) mov (bad) cmp mov clc mov mov pushl pushf mov call out js test xor xchg inc inc sub adc and add flds lcall jb (bad) insb inc fsubrl lods test inc std lods cmp push inc mov out sbb imul mov cmp push ficom mov jne xor pop repnz adc ds ja mov (bad) pushf scas sub test mov sbb sarl mov push pop pop testb fstpl pop mov dec xlat pop fs cmc insb jnp in push jle pusha imul cltd (bad) aam loopne stc outsb rol outsb sti mov dec (bad) int xlat lods and mov popf negl push (bad) push imul adc sbb sbb out aad shr sahf cmp rorl lock and xchg push dec xchg push push sbb xchg xchg mov inc sti fs pop aam add or les repnz add cmp xchg and mov cmp adc js pop pop dec push xchg cltd in sbb jbe dec lea pop push fldt xor jmp and cmp dec es shll mov mov xchg pop lock fisubrl lock (bad) int xchg gs lcall add daa pop mov lds xor dec add int repnz rorb and adc dec movsl mov ret lret mov scas emms push jl jns mov inc sar decl mov das push mov in mov xchg je push in mov inc xchg push inc (bad) mov test jne fdiv fucomi adc roll je jmp mov push (bad) pop test push ficoml je lret stos jl imul clc lret test pop sbbl (bad) ljmp jle push xchg leave out loopne lock xchg xchg cmp (bad) scas movsb or test cmp ja mov mov mov fcoml aad sbb cmp repz or gs sbbb push jge sbb push push int3 pushf scas jne xchg add sar cs jne pop cld ret das xchg jp scas cmp add std cmp shrb imul mov or sti inc cltd hlt ljmp cmp outsl adc das sub mov in test cli into sbb adc dec jnp pop xor jmp call push and xor clc stos or cli rep ss std ljmp ljmp push movsl (bad) mov xchg ss cmpsb pushf mov popf (bad) int inc mov je daa or or clc inc push adc rorb lret lcallw mov push mov lret (bad) insb adc mov jmp cmp pop ja cli (bad) add scas enter push lea add aaa fldenv mov scas test xor xor rcr mov mov sahf (bad) push push loop push repz mov lock int repz dec adc ds in (bad) sbb sbb mov rcl sbb or fstps (bad) hlt add int pushf ss mov incl mov sti jne in push pusha and jl lcall hlt pop xchg lcall push xchg sub push sbb icebp (bad) call loope xlat movb pop in mov push je test ds lods out int3 iret pop inc fwait cmp (bad) lret movsl xlat arpl xchg add mov jg (bad) jne aad xor into scas jns mov lret jbe xchg idiv add iret push shll out stos mov idivb dec enter push inc or jo fucom cmp mov loopne (bad) into jo cwtl sahf adc (bad) in push jns outsb outsl inc pop inc mov or (bad) fcompl add xchg pop lds lret add xor loop jbe jecxz lcall or imul add dec aas insl nop xchg faddl aaa inc jns cmpsl out stos pop cmp cltd cmpsl shlb cmc ret push insl mov mov mov pop push push or push fist sti and mov outsb lcall popf and fisubl mov mov mov sub popa sub mov and mov or stos sub push dec xor jle mov loope cld inc xor pusha fcompl out inc inc mov mov sub lret ja rol adc lcall lret dec shll jns fcmovu pop in out cwtl mov xor mov ja lds mov std jno push add fiadd and bound lret iret push sti cmp stos ss jnp mov (bad) insb mov inc and lret lods ret daa cmc pop out js out xchg fwait and xchg pop fwait xchg pop adc mov fnsave rcll pop loopne push xchg rcrb add mov dec leave (bad) test (bad) or pop repz xchg dec mov ds and or xchg mov int (bad) pop dec dec cltd aaa imul mov or adc aas or scas mov push repnz push jg or adc ret into cmp mov popa pop add push adc pop cmpsb adc call mov or ficoml stc inc addb mov (bad) add pop (bad) lret std mov push popa clc push inc jns insl fs aad hlt jp movb mov sbb fldt (bad) mov fwait push ds rcrl xor lea push lret ss sti andl jns cli push cs bound clc and jno mov jle sarl les sbb loopne gs pop lds jnp xlat hlt cmp xchg in and and xchg lret cmp pop sub daa scas mov ja xchg add mov jnp fadd jno aam ret push xchg and daa nop scas (bad) mov push lea cmp (bad) mov pop xchg dec inc insl push xor out movsb cmp lea fsub sub mov (bad) in and lods out sub cltd loop mov xchg fcmovnb outsl movsl jae mov jns cmpsb sub mov scas aam push jmp icebp lahf sbb insl (bad) in mov lret addl add add pop mov gs and xor jle ljmp mov pusha mov jp add mov stc jae mov aas notl mov cmp loop imul (bad) add out inc jo icebp pop lods jbe lea loope std das (bad) mov (bad) imul or out shr lods out add dec mov mov push rcr test sbbb popa not mov push ds cmp stc lret gs (bad) lock (bad) pop scas lcall add inc xchg pop xor in lods mov jmp add xor push aas inc (bad) lret lahf mull dec dec notb fwait stos jne and stc into outsl jbe sub mov jg sti mov iret outsb xor mov and insl insl nop adc mov jae jno in or xlat rcr jno mov dec sub pop jmp cmp sti and inc fmuls das sbb pop std addr16 test lods xchg fmulp mov in lret movsb pop test cltd call sbb arpl hlt in sub mov movsb xorl cmpsb sarb add je dec dec ja sbb sti push add sarl push (bad) mov jb (bad) and jb js mov mov iret or jo int sub jnp adc sub call mov mov jge int3 jecxz shrl cltd leave stos stos clc lahf or je sbb out mov clc gs fdiv out inc xor popa in dec dec push push out aad rcll dec insl mov enter sub lods loop dec (bad) xchg lcall pop gs int xchg pop or add insl jae xchg and dec cmp jno push daa daa mov xor mov jle inc loopne loope cmp leave push mov int3 int shrb repnz data16 and jnp xor xor xor inc push add les roll sub pop xchg pop or and in adc (bad) xchg xor mov lret jge insl fwait stos xchg mov sub pop int3 popa xorb outsb cmpsl jbe movsb and xchg jl push mov sub adcb inc xchg test add cld out cmc vpaddsb inc or or out fwait out and sbb or mov into dec mov std xchg outsl jle adc mov in ljmp (bad) es lods fcoml mov inc cmpb sub mov dec push aas adc cld and js in lcall loop out mov inc cwtl xor push pop or mov fldcw push cmc dec jns arpl data16 stos (bad) shl xor in cmp dec push and les lock pusha jmp push jno lcall dec divl xchg leave and pop jecxz xorps mov cmp mov mov cwtl call fcoms bnd cltd test mov pop xchg hlt jns jmp repnz imul scas dec jo or inc shlb jb xchg fsubrs cmc fistl add fstpl xlat or xchg inc les movsl mov les scas jns out add jmp mov jecxz outsb cwtl hlt jmp fstpt leave sub push loope sbb roll dec sbb in call in inc mov xchg jmp in test sub ret std add ss dec sarb mov inc aad pusha and xor test (bad) stos sub ja mulb xchg cmc outsb push xor cltd in push sub sub mov push fidiv add adc xchg mov jo insb in or in pop cmpsl cmc fcmove dec inc jp repnz in sti jne enter fisttp insb and push sbb lods xor adc sub sbb and pop sbb cwtl xor in test addr16 outsb jbe adc xor xchg (bad) je dec cmp mov and lods xchg add xchg push pop insl or in mov inc loopne (bad) cmp mov test mov dec es cld (bad) fdivl or xor leave arpl or das movsb jmp mov xchg in push adc aas push dec out (bad) mov in mov orl and mov sub add cmc mov or repnz (bad) out lds inc loop shll stos arpl pop and xor mov scas adc push ret cmc jnp ss (bad) xchg xchg sub jmp out inc add sarl sub sub mov xor popa mov neg add xor (bad) fsubrl (bad) pop (bad) in and xchg or or test mov and adc notb xchg mov test xchg movups in or inc lods inc sub jbe sbb and inc push mov rorl mov rol arpl mov pusha loope inc cld pop push sub subl roll movsb add jns ret enter aam sbb fistl mov imul dec jae xchg cmpsl sub lods fnstcw popf pusha aaa aad lcall xchg xchg jb pop enter add jo xor push movsl pop adc fcompl sub in pop movsb out ja sub push pop cmpsb add out lcall mov mov adc (bad) mov sub ss push push scas and outsl add jo mov push or add rcrb mov in push cmp out sub jne aad mov ret push or lahf sbb lods out lret xchg jnp sub xor push xor pop cltd xchg xorl and mov jg les mov rcl add and loop xor shl fldcw inc fs mov sub cmp mov push in subl insl push add jae xor fnsave push scas das jl das xchg mov sub shrl or lds movsl mov (bad) icebp fcmovb fnstenv adc and out adc push cwtl lcall mov xor sub push jno push sbb repz pop (bad) mull sti inc rorb sub mov xchg lods pop iret movsl fadd sub bnd inc (bad) inc jbe push dec xor xchg rorb into push mov (bad) fcmovu sub add (bad) jmp (bad) dec xchg mov sbb xor sub or sub popa es gs mov pop mov mov pop cwtl add cs mov cli test andb mov outsb or add adc mov aam sbb or fcomip sub jg sbb pop in pop cs mov test outsl push popa stos out xchg imul pop lock icebp into sub fs xor xchg xchg xchg cmp xlat push (bad) int3 loopne out vpsadbw in fmuls idivl mov push lcall test push fsts pop in xor jmp stc ret adc pop dec and dec add dec inc sbb mov dec xchg mov dec sbbb popa leave shr add adc push dec inc inc push xor push imul int shlb xchg mov push mov dec loop stc dec sbb (bad) arpl (bad) or cmp test adc sub push or inc jo cmp push xor dec mov sub add in adc arpl fisttp sbb mov mov out divb add pop sahf (bad) nop xchg sti rolb inc push popf mov lea mov fsts jmp fdivrl (bad) mov ret ss mov xlat xor sub adc mov cli sub daa (bad) pop scas xchg sarb out insl cwtl into ss adc icebp inc adc pop repnz mov or xchg mov lea and pop ja cltd push or ret (bad) sbb push mov pop dec add jcxz mov fistpl push cmp nop mov leave jbe add lret mov (bad) pop sbb cmpb cli test (bad) rcrl add inc lods insb pop jle pop stos pop ret jbe js jne out in mov repz push pop lods add addr16 or lods fucomip cs push hlt int3 add or ljmp bound sar mov arpl jae mulb roll or mov in imul aaa ficompl inc add xor outsb add mov cmp ret xlat fistp dec (bad) dec push imul fcomip adc sar mov in sahf iret cli mov out sub mov (bad) jge and jbe aad jg jl dec aas ds in pusha xor cwtl add xor iret (bad) cld jl push test push xchg jl (bad) mov lock mov add pop and or sub lea mov jo cmpsl cld lret stos push sbbl jg xchg out stc ljmp jno sti mov or rcll inc cwtl ffreep iret dec cmpsb pop mov adc push cmp mov test fstpl test cltd int3 insb jmp stc pop xchg ss mov out push cmp test (bad) cmp lea mov push iret (bad) (bad) xlat mov movl and jo fnsave and sbb mov dec adc xchg outsb sub test loopne aas jae xor ja xchg pop js inc xlat es pop xchg cs in jl cmp mov popf je test pop jbe add insb pop movsb in pop clc sub sahf push cmpsl loop and nop mov rclb lret scas jbe push push dec xchg and sbb adc outsl mov daa push push mov sub es addr16 (bad) pusha leave pcmpeqw sub sub cwtl jge mov sbb and jbe pop fimul and in mov repnz mov pop insl adc hlt add idivb push stc mov jecxz movsb jmp test jle aad sub jecxz jge dec xor aam imul jne clc dec roll or ret rol xchg rcrl jae cmc cmp cmp in into cltd inc xchg xchg jecxz pop cmp push out in sbb add sbb sbb xor mov mov push xchg push jecxz push inc sbb cld addl mov lock sub mov cmp dec mov sub lds enter enter push sbb fwait pop cld push sahf insb shrb subl scas addr16 xchg and dec xor int out mov es (bad) jbe out and sahf dec mov (bad) clc cmp sub mov jge cmp add ret outsl addr16 lods jns push out pop das cmpsb out or in faddl scas cmc loope xor xchg mov inc (bad) sub sahf lahf jecxz (bad) es sub mov aam int3 jnp xchg xchg and mov inc clc (bad) mov xor mov test dec int mov fcoms dec loopne insb (bad) das shr mov mov mov dec dec ret push and jle cmp mov rolb hlt fcmovnbe test jbe imul lret rcrl int adc aas push das dec lcall aad or or cli pop enter pop push mov adc pop push bound (bad) mov rcll cltd das dec fisttp adc pop lret inc fisubrl movsb push out icebp cmp (bad) mov pop (bad) stos cmp pop js cmp add inc mov sti sbb add mov js repnz (bad) sbb (bad) xor and je jno ror int inc insb cmpsl mov xor xchg ss mov les ficoml xchg sub shl adcl aaa xchg fidivrl flds es pushf iret and jge sbb inc hlt sub (bad) cmc and push loope cli out mov sub mov xor imul adcl add dec test inc inc push sub das mov sbb clc add jge push int es xchg xor adcb sbb jp out lcall jnp in xchg out lods outsl imul mov pop inc cltd enter mov jl sbb scas dec or sahf out cs pop fs mov mov jg cs xchg fs mov push cs push int3 push ja dec out push sub sbb pop sti mov ljmp or mov jno adcl or mov leave mov mov adc xchg inc mov jmp pop push jmp test sub (bad) iret mov adc and jg cld es repnz dec shlb xchg push adc add scas cmp (bad) jo pop (bad) xchg add fsubrs stos test es inc fmulp fwait inc lods mov pop mov push dec iret dec sub sbb movl jp icebp gs lahf andb xor xor lods insb cmc ds aad (bad) iret adc lock (bad) xchg test or jl (bad) (bad) aad popf outsb cvtdq2ps inc test aaa push sti sysret jbe dec lods into test add jp je outsb addr16 popa mov jmp cmpsb or cltd mov (bad) xchg jo mov loop (bad) mov cld (bad) fbstp movsl fdivrl adc pusha mov mov imul fimull out xchg (bad) cltd (bad) leave arpl (bad) xchg mov cmp sub sbb push add or cmp ja cld lock inc addl mov jmp cmpsl pop aad bound xor stc aaa jp mov xchg xor pop lock mov push rcrb inc or pop lock inc ja xor and stos push pop stc pop push loope stos out insl inc mov adc push (bad) aas inc das lahf fmuls lds out mov sbb mov adc mov xchg aas iret dec push loopne push cwtl rolb or push mov jge adc add ret mov mov sti outsb cld movsb dec push (bad) pop ret xchg es jne jb cld in loopne mov mov loopne inc cs fstp push repz pop push mov aam (bad) pop das test aas cs mov pop ja cmpsb push mov loop add mov and mov jne into and ljmp data16 sub adc fildl jns xchg scas repnz cmp add insb mov loopne sub mov movsl mov sub call lcall sahf mov mov loope and fisub test imul test je pop ss (bad) cmp stos and cmp les daa add mov fdivl xchg xchg (bad) test comiss negb xor mov mov aaa shr sbb aaa movsl sbb dec sahf cli dec enter mov scas sbb (bad) jae fmull or dec das (bad) mov in pushf movsl add pop lret push mov aas mov push xchg inc pop daa mov sbb popf add push (bad) mov inc insb repz fs pop cmp xchg enter mov jno divb scas into xor (bad) lret pop scas jp mov pop lcall bound cmpsb jp pop lock les jecxz lods xor mov pop sbb sarb decb mov and cs mov add xlat mov fcomps inc stos adc repz std sbb or out adc lret cmp mov mov aas push add push push and cmp daa push pushf jbe jmp jl inc and jl or mov lds out lcall call pop mov std push (bad) fsts xchg mov stc mov cmp sbb imul mov mov gs ja sbb insl add loope mov cmp adc imulb ja imul jle,pt xchg test lahf push (bad) movb cmp (bad) push loopne out dec xor cmp or shlb decl cmp dec scas ljmp cwtl call leave mov mov push gs jns loopne mov lock je adc insl push xchg push cmc nop (bad) cmp sub or adcl roll dec je,pn ret mov add cmp pop imul mov inc add lahf dec pop mov cmpsl xchg pop out mov mov (bad) cmc and adcl xchg movsb push daa xor mov test loop jno int3 or xchg sub mov popf or repz mov dec cmp xchg push pop scas pop jle stc stos fdivrl xor cmpsb xchg pop sarb push and cltd adc scas lds cmpsl pop push cmc fiaddl cmp repz das stos xor (bad) jl dec mov ds hlt lods roll sbb jecxz out fidivrl add std cmpsb add or (bad) test push je ljmp stos fchs bound or sbb cmp outsb cmp or dec push gs es mov call insl lods (bad) mov or pop hlt int3 jne mov mov cmpb int3 leave xchg jnp and xchg cmp repnz push cwtl int3 push fmul ret sbb bound cwtl cltd jg repnz arpl or mov lods xchg gs mov cmpsl mov xor sbb fbld divl loop add cmp ret cmp rorb iret in ret cli in and cli pop call pushf fcmove fdivrs push pop jp cwtl sub rcrb fcmovnbe ss push aaa push push xchg mov jg adc ss hlt (bad) and and jl (bad) cmp ja push adc cwtl int sub add aas arpl inc pop lret xor mov sub lea lods pop xchg jp mov in out je cmc int3 xchg mov jmp sti mov inc fwait mov jge test xchg add push adc xor xchg bnd (bad) (bad) iret xor (bad) lods lcall jp mov mov pop sub sbb mov cmp out and lahf inc mov imul cmp outsl enter inc mov push mov push adc incb xchg mov cmp fs lds mov xor lahf sbb cmp mov aad add loopne call pop push pushf mov mov xlat outsl and and mov pop (bad) mov rol popf lcall cltd mov nop sbb in negl insl add push mov je cmpsl lahf sbb pushf imul push pop rcll or push xchg lds mov (bad) idivl shr divl inc int pop adc xor insl lods testl daa xchg (bad) sub lea add cwtl mov inc or jne movsl inc inc add mov je popf jne dec or lret dec push lea movl aas mov jns data16 inc sub rolb jbe out (bad) call inc adc mov bound int outsl ret jnp jp (bad) jno ds repz cmpsb aas fstp mov cli or cltd cmpsb sbb sbb cld mov lret aad xchg xor popf lods xchg in add insb inc sub les pop cmp mov cwtl xchg xchg push loop fstpt mov aam mov cmp (bad) adc sbb je daa cli pop inc mov ja pop mov icebp xor ja insb inc dec pop std jmp and (bad) repz sub stc pop (bad) push and xchg gs ss clc fs nop lods cld (bad) push hlt aas fcomi or daa xchg aam sbb mov push push jns pushf out (bad) icebp lods orl icebp xchg xor mov test mov dec adc aam mov test mov insb pop mov lods sti (bad) subl jmp add test jle mov aaa xchg les mov cmp (bad) imul fisubr hlt mov lcall sub bound insb negl es (bad) pop or pop or popf jae cmp int3 nop aam mov (bad) xchg bswap stos das cmpsl (bad) add and (bad) pop add mov dec js mov stos inc je xchg jg dec andl fld repnz xchg cmp add call push in sbbl push mov add xchg mov pop js (bad) mov out test add jae adc js sti lahf (bad) mov sbb mov (bad) jno les or (bad) fwait icebp (bad) pop stos and sarl mov fstpt insb cmp lods cli fwait addr16 popf pop inc ds sub fwait cmp daa pop rorb mov (bad) cmp das jle aas inc cwtl cmp pop mov addr16 push mov cmpsl ret repnz popf xor test push pop mov inc popf mov xchg mov sub cld push mov (bad) lock ficomp lock lods cmp cld xor fs jae mov add fcom aad mov fildll cwtl add into rol or sbb and cmp mov mov lcall xchg ss arpl jmp xchg ljmp jbe add imul cmp adc and ret xchg int3 add mov push imul cmp jge sbb sbb xchg or inc int in or jge movsl arpl roll push mov dec stos jnp sbbl movsl jl (bad) insl xchg mov outsb enter jo sbb jp push add jp imul push and cld gs pushf shlb mov mov repz imul lahf adc push bound (bad) iret mov ror inc (bad) fcmovnb ja int3 pop loop add xor pushf or sub sub sub andl pop dec inc jle pusha mov decl pushf fs pop inc fsub mov addl rcrl add mov addr16 jl (bad) inc test pop jp js xchg lea call hlt lea out sti push jmp call scas fldl out iret scas dec inc jbe xor insb lods and cs jb jne mov cmp dec loopne popa loop mov push das add cmp push xlat adc (bad) mov xor mov mov repnz call jb inc xor ja loop ja mov xor rcrb pushf xlat fisttpl add mov mov xchg xchg xor dec dec sbb sub mov insb sub xchg cmc xor ja jnp mov iret into sbb jae mov mov push in movsl push hlt pop xchg int3 fidivr ret adc jg aas cmpsb jae xchg pop icebp adcb mov mov je inc out or mov jo pusha rclb inc pop xchg cmpsl mov (bad) arpl in mov jb out and jo sub add call jbe pop dec dec dec sbb xchg mov clc icebp cmpsb clc xor outsb dec fwait xchg jp ds outsb adc sub sbb call add (bad) mov lahf mov jg adc loope,pn in or pcmpgtb xchg adc xor in out pop xchg jg add daa or ret jl sbb push cmovs xchg push aam jae je jno push fnsave jns push cmp adc js mov mov ret out mov (bad) out mov xor test cs dec push (bad) jae jge xor mov scas mov or sbb jp mov mov mov aaa sti xchg jbe ret in inc repz and aaa mov xchg out push (bad) dec mov scas andl (bad) mov mov xlat addl iret mov test pop sub sbb xchg sub push insb popf das fnstcw xchg push cmpsb mov push mov testl sbb jp push fistl xor push jae stos insl ficomp fidiv mov loopne adc jbe arpl jp jecxz sti cli add jge data16 pusha popf mov int addr16 xor inc lahf xchg dec daa inc mov ret loopne jmp or into ja out sbbl fdivr sqrtps rcrl leave push aas mov hlt enter (bad) mov push and push push gs aas mov pop in call popf adc add pop inc sbb inc in xchg fmuls clc imul in mov mov ljmp sub jmp fldcw inc das fmuls mov ret sub push out (bad) testb push jp mov xchg lahf mov jl jmp xor (bad) or jo dec pop gs sbb fstpl lods into scas mov ret push popf xlat std int in mov out push test and in stc std push out sbb sbb jp lods push lods inc xor mov and test push inc mov data16 or xchg (bad) cmp test ljmp clc xchg xchg pop wrmsr cmpsb inc outsl lea sbb scas push (bad) movsb sar jns addr16 cli sbb divb cltd sbb popf jl jb jo jg sbb inc iret clc mov dec jge sub sarb (bad) jno push das es rol scas stos add dec cwtl aaa insl pop (bad) cmp mov mov fisttpll mov mov push fcmovne mov push xor rclb fcomi cmp outsl mov cs xor in scas inc mov xchg xor jmp fnop inc pop lds or pop (bad) push mov push aaa fisub xchg mov cmp mov jno clc xchg das out outsb cmp out pop js pop fdivrs test popa sahf cmpsl xchg bound xchg push sbb xchg dec and xor fmuls cwtl adc dec lcall jge outsb pop fistl orb dec test inc inc pop xor inc out jg nop jl aaa (bad) inc pop aad cmp dec xchg dec daa sub ja (bad) or mov aas xchg ret fldt sbb out out cmp pop lds fimul aad dec mov add fcomip and adc dec std mov sub add loopne bsf mov pop pop cmp xchg cs movsl dec call (bad) mov cltd sbb sbb push mov fmul fcomi outsb mov push je repz dec cltd sbb sub xchg imull (bad) mov stc out and or mov icebp lock sahf into lock dec push insb sbb xchg inc (bad) call mov mov mov jo lahf cmpsb inc cmp inc jnp pop js daa mov xlat xchg dec pop stos mov jecxz sbb test mov xchg sti pop popa push dec imul imul scas adc push lret jae hlt jb xchg into sub cmp add dec cmp and pusha test dec std sub sbb and inc mov adc (bad) repz add xchg and adc adc push fsubr fisttp or std jae jne push cwtl push ret aad mov or mov xchg jns mov shrb stc icebp xor rcll jno jmp sub lods popa or pop pop in out add pop movsl mov mov adc xchg push rcll adc ficoml xor cmp dec ds push out inc push inc fsubrl repz or scas mov lret stos lock or ja popa adc mov lcall pop lds ret jo pop fwait outsb icebp stc add push iret sbb jae cmp adc lods push fdivrs add int je ljmp inc cmp fadd (bad) cs xchg push mov stos aam push or imul dec cmp dec xchg cltd loop test cwtl pop cltd mov xchg xchg xchg mov (bad) negl cmpsl mov mov push sbb push jecxz jno out movl hlt cli test (bad) jae xchg jle out sub fisubrl (bad) int sub orl lcall dec lea pop mov xor pop push in loopne hlt fwait or ja xchg fmuls jg shr lds lds inc sub push dec xchg ja call add sbb xchg arpl fisttpll pop xchg ret push test pop or cmpsl test jnp ret loop mov pop cmpsl fstps clc fistpll test mov test push mov lahf and loope pop rcr movsb cmpsb or push xchg adc inc xor or repnz pop rcrb in popa movsl test xlat (bad) adc test mov dec push call ljmp dec add xchg pop fstpl pushf adc popf sbb (bad) xor pop arpl jmp sbb jbe js mov (bad) xor rcrl lret clc lods sub repnz mov xor xchg (bad) or (bad) mov loope sub gs mov dec lahf and pop adc xchg jb adc int3 xlat sub lods add scas jge,pt mov mov add sub xor cmp (bad) loop test cmpsl nop sub inc outsb dec in push mov out out push pop arpl jmp (bad) adc push mov icebp pop lret cmp in stos xlat adc pop loopne xchg mov mov mov push lods push fnstenv mov fs lods sbb pop insb mov or jmp jmp fdiv mov sbb inc addl adc xor cmp push mov xchg mov repz out lods xor btl inc inc in pop adc ss add xlat adc mov push in repnz into loope hlt or cmpsb shll add orl int3 cli cli push repz pop sarb pusha aad es jg stc adc adc (bad) hlt jp xchg jl jb popf mov cmpsl xchg fs clc lret insl push scas sbb pop mov repz in js push mov mov mov add dec cltd dec pop sub test loopne xchg add clc xchg pop and pop pushf and push add xchg test cmp add daa or hlt cmc iret cmpsb sbb adc push stos dec mov cmp jnp push lahf fwait scas push mov outsl mov inc fisubr mov sti shl les and inc repz inc or jnp jmp or (bad) fisubr pushf dec dec inc rcrl mov mov and and out fwait in push cld push ss (bad) arpl xor pop loope jle inc sahf xchg iret test add rclb sub lods sub push xor in sub (bad) notb jmp add outsb out xchg gs cwtl lcall push out dec repnz (bad) test jg or ja xchg push aas scas jbe sbb jbe ret push sub fs xor adc cmp jne int3 loope cld sti cld icebp pop adc rcll jle fidivrl dec inc cmp subl sbb sub dec jns pop in (bad) jmp into xor or jnp int3 sbb daa test ja jno ret xchg and cmp xchg jp add pop xchg mov add ficompl add sbb push mov sbb sbb fistpll jbe sub shrd outsl lcall loopne mov mov sbb fistp mov lcall aad sbbb hlt clc pop mov icebp leave add inc mov (bad) jmp push rol jns ret jp jle js xor movsl jno rcrl test cmp ret pusha fistpl adc jae jmp bound or jg jmp repnz xchg scas mov into add add jmp daa lcall test int push movsl mov rorl dec into movsl mov popa ja andl dec aam push xor or fmuls dec push lock sbb push movsl mov jb mov arpl lcall mov popa mov or dec ds loop popa push outsb jne cmp insb sub lret lock fild fmuls daa shl push inc and and adc fidivl pop (bad) pop repz jl outsb cld cmpsb and xor rcl aaa repz sti ret push jae mov mov xor pop xchg test adc fistp sbb mov testl adc ss xchg ja jle int3 mov mov lret push pop jnp push xor stc inc or pop sub xor pop lds sub in jbe sbb push jl fistl sub cmp fmull jecxz jge ret add dec sbb jne fidiv ret add pop lcall pop and mov jne push les dec xor sub mov cmp jne sbb fistl cmp push jl cli cwtl sbb dec push dec scas into fisubr test jno int fwait (bad) push mov dec out call ljmp gs xchg lods mov adc push iret faddl jge fisttpl jo cmp sbb jb (bad) jno pop jl (bad) mov scas pop (bad) mov or insl xchg add mov outsb dec xchg test xor and cmp mov dec mov iret xabort or pop fs push dec jb es inc pop pop popw iret mov repz xchg out mov lds xor popa xlat adc jbe cld sub jmp xor cmpsb xor pop std or cltd clc sub out push cmp addr16 arpl std mov leave fistl xchg jp ss mov aaa cmp sbb clc out dec jge jle test cltd xor inc or cmp in bound mov scas add cli rcl in or lcall or add adc mov pop pop pusha dec in out les cmpsl stos aam jl pop es cli stc (bad) mov sub inc sub shrl jg inc sub push inc jmp xchg into inc push test repz mov and and scas cmp aad inc cli xchg shlb xor pop insb push ljmp dec inc (bad) stc dec jne (bad) les add addr16 fld in mov imul sub nop or (bad) cli cmpsb dec mov in aaa and ds shll scas mov jl mov jne lahf push dec inc or push mov test inc cwtl xchg mov mov dec outsb push cld pushf adc in pop outsl cld cli dec cs sarb xchg sub call imul or pop lock push mov and lcall sbb cwtl mov (bad) fnsave mov insl push fdivr shrb aas adc xor hlt dec (bad) mov clc out iret into (bad) add lods test inc nop jnp sbb dec mov aas xor inc xor dec mov jle xor mov daa inc fwait lea lret xor shlb fistpl mov adc cmp push and sbb lcall fldt add mov jl mov xchg imul push mov xor cmpsl ja pop sub add cmp leave ffreep ja add xor adc (bad) jns xor es nop shlb mov push testl popf pop pop insb mov paddusw fdivrs cmp (bad) ja repnz cli sbb inc inc mov xlat cmp vmulsd rorb push popa pop mov dec mov imul cmp jo add add adc mov push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add or add and add lock addb add add add add add add add xor add xor add cmp add cmp add add add add add add add push roll sbb add in add add add add add add add nop add add add add add add add add add add add add mov jmp add in add add add add add add add loopne add js add push add add add add add add add add add or add add add add add add add add add and add inc and add add in add add add add inc add add add add dec add aas js insb and jb imul xor and arpl imul inc sub je outsb fs insb outsl outsb gs and or jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor or and jae gs bound fs je je or and and jb imul xor xor xor or and and outsl arpl jae jb jb push je jb cmp and and and outsb popa insl gs jo outsb jns popa insl gs jb fs je popa insl gs outsl jne inc jo and and and je jo cmp xor and das or and gs jb jo imul gs jb jo imul cmp gs outsb fs arpl or and and gs outsb fs je jae gs bound or and and and jae gs bound fs je je or and and and and gs xor and and and and and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae or and and and and jb imul xor xor xor or and and and and outsl arpl jae jb jb push je jb cmp and and and and and jo bound dec gs outsl imul and xor xor xor arpl xor or and and and and addr16 addr16 das or and and fs outsb fs je jae gs bound or and fs outsb fs arpl or cmp popa jae gs bound push mov add pop and add and add and add add add and add add add and add add add and add add add and add add add and add or add sbb add cmp add push and add fs add js add add add test add mov add lcall add add mov add add push dec inc dec xor cs dec dec add dec inc push dec xor cs insb add dec xor cs insb add push inc push push cs insb add inc xor cs insb add inc dec dec xor cs insb add dec push inc push dec cs insb add inc push xor cs insb add add fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec outsb imul inc outsl outsb je outsl insb jae add je imul outsl jb add insl jae je add dec outsb imul add push push js arpl gs js add add je push jne je push jo arpl inc add dec jae push popa cmp (bad) cmc ret mov inc add add add sbb add cld sbb jae (bad) or cli inc imul in or dec popf insb push sbb loopne jnp sahf cltd testl shrl addr16 fsubr bswap nop mov jae pop mov add cmp sbbl push fwait subl (bad) je test rcr mov mov push xchg lods add imul out jns (bad) repz mov lods ljmp xor pop adc sub out mov sahf cmpsb push std push push (bad) ret fnsave sub push clc mov mov mov insl adc sbb or sahf in cltd cltd push pop mov mov xchg xchg xchg sub fisttpl clc outsl add xor cmp and cmpsl add aad jg cld mov mov divb int3 push xchg (bad) cli pminsw jmp and jmp add jo mov sahf push jb push push mov xlat and lods jle daa add jns out pusha cmp jge sahf push dec or xor fisubrl fwait in pusha mov adc ret xchg sbb or cmp das inc enter inc popf sarl xor jne lahf or fisub dec inc mov fwait lock cs inc imul inc aam cmp (bad) fisttp insl mull and stc xchg pop cmp incb divl inc add xor mov ss out std xchg dec std pop pop mov sti popf sbb into inc cmp mov hlt mov and jp jp ljmp push lcall (bad) jnp in and icebp xor and cmp xchg xchg cmp push sbb jbe lahf ret ret pop mov push (bad) mov mov xor int3 ja scas icebp mov clc rorl fsubl sbb add je xor pop lret shl call mov mov adc xchg or push das mov cvtps2pd xchg jmp mov hlt push add jns in addr16 arpl out xor stos pop addr16 aam arpl mov (bad) pop adc add xchg bound push adc mull fsubrp (bad) int cmpl loop xor pop lds adc add stos and sbb adc fisttp push loope (bad) jmp mov sti jae adc cmp fidivrl gs pop scas int mov cltd scas cmp push push xor mov call aas addl and push sarb push inc or xchg (bad) jb dec inc loope dec loopne mov fnstcw cmp aaa stos xor jmp enter mov hlt adc (bad) das popa inc push shr sub cs aaa cmp aaa dec test dec cld inc adc je sbb sub ret mov adc lret fwait outsl xchg (bad) daa push into mov inc mov push movsb aas aaa ja outsb adc ja jo leave insl inc test inc (bad) fstl pop and adcl insb sub mov and cmp jp dec sub inc jp xor or dec dec lods pop sbb sahf lea aam push cmpsb (bad) (bad) cmp and inc test jnp mov fsub in negb (bad) sub dec (bad) lret or jns ret aad or bound leave int3 divl fbstp push adc mov xchg lods adc leave and outsl add adc (bad) mov xchg imul xchg sahf arpl lret cmc pop int3 cmp stos lea sbb dec pop dec push sahf xor popf mov out repnz fs sbb stos cmp out add xor in push or xchg leave push cmp jmp pop jnp pop inc mov mov xor mov pslld push pop jg push inc sub (bad) call sbb adc fwait jnp movsl fwait jl imul lods mov sub cmp or push jnp loop fsub lods stos faddl (bad) std sbb dec pop pop in jb fwait test xor and int3 ljmp int3 xor pop mov ljmp stc mov xor jl sbb pop or mov mov ja xor shrl das and mov xchg imul inc aas cltd scas stos std imul mov mov sub (bad) fild push (bad) sti xor jne lock mov shll jae test lahf insb out jno cld cmpb xor jp in dec in xchg jbe imul pop adc scas out lds cmp sbbl bound (bad) nop xchg cmp rorl sub xchg mov mov push addr16 mov (bad) std push (bad) jmp xor or mov sbb idivb push mov pop dec js (bad) repz inc sub dec pop fcomps push shlb jnp mov jo out cmpxchg dec sub and daa sub adc dec sarl sti das pop add cmp pop cs fisubrl nop sub (bad) sbb std jg inc cmp pop nop xor imul das loope loop loope imul jmp mov sub nop inc cs loope fsubl int3 add sub fistpl movsl clc cwtl ret loope test xchg and stos mov pop imul sub jne pushf rep sahf mov sarl das push repz push push dec call pop cmp lods mov mov adc adc test jns push shrl (bad) sbb cs jno icebp pop lret mov inc jmp pop jbe outsb data16 out push mov std xchg add jne cmc incb mov (bad) repz aam lods (bad) out sub loop das xor xor in xchg shlb hlt add sbb gs pusha pop popf add mov sbb in es adc out pusha add (bad) jno ds lock (bad) mov jno aas jnp gs pusha cmp mov and (bad) in daa stc movsb nop xlat sbb popf imul jl cld jb int3 cli gs and mov test cmp push push in inc fldenv test pushf nop xchg jp insl jmp xchg pop movsb or sub xchg rcr mov jnp imul dec cmpsb mov push std mov or js xchg lock imul jno stos cwtl imul movsb in sub adc fidivrl test fcmovne fwait or pop xchg jns loop out push bound add scas mov enter sbb dec push fnstcw mov out mov push cmc movsl cmc jnp sti dec loopne add push repnz (bad) mov cmp iret pop cmp push push pop jae and jne nop (bad) leave ret xchg out stc mov rcrb lock xlat fs out mov push loop xor xchg sbb xor add pusha jecxz (bad) jo int3 xchg dec in inc sbb xlat xchg sbb push mov std sbb scas pop int3 fidivr cmc jge es ret add lcall notb mov jne pop mov xchg or mov repz or iret sahf dec sub dec fsubrs push jl leave in loope movsb pop fwait notb push insb sub int3 adc rcrb (bad) je in push xchg cmp cmp fsubrp test jnp cmp or mov xor call and push loope xlat mov pushf sub xchg cmp add pop imul cmp mov (bad) xor int3 sub mov ljmp or stos int3 or iret mov loopne movsb cmp pop adc jbe push push add xchg rcrl pop jne push into jmp rcll mov add xor and adc mov mov mov daa out pop cli fcoml xchg inc int jo adc xchg sahf cmpsb les es lret scas js adc dec stos sub add jg mov push jno dec mov andl mov dec in jp jne es in (bad) and dec outsb sar adc lret out fstl xor in xor mov xchg adc push and cmp cmc out jle jge mov cli fsubrs jmp daa cmpsb jne sbbb fisttp adc push loop rep enter gs push in xchg flds and aas loopne pop cmpsl ret (bad) push (bad) fcmove shrb loopne (bad) into mov xorl clc sub lods sub mov xchg lods jno arpl cmp dec cmp add pop mov test cmp (bad) inc hlt mov (bad) in clc into mov (bad) xor cmp pop clc pushf jp (bad) ss imul mov sbb cmp push push (bad) xchg ja je (bad) into adcl lea adc add lcall xchg jle scas cmp xchg outsb aaa test (bad) jne xor sub push and mov fisubl adc (bad) mov mov lret test shlb inc pop ret jns aas mov shrb inc jp mov or or shrl sbb xchg lea mov cli bound pop inc adc (bad) push loopne sbb xor sbb pop fisubr call test add test pushf mov or les les (bad) sbb lock clc sbb mov mov xor xchg test les mov leave dec jmp mov push push ljmp fwait adc sbbl dec jmp (bad) add cmc icebp (bad) dec arpl sbb mov dec xchg outsl mov cmpsl pop stos bound add sub xchg xchg jge push pushf add jl shrl imul push aaa clc xchg pop and add popa stc push movsb xlat pop add sub outsl xor xor cld inc clc adc sub repz enter in outsb xchg and sbb adc pop sti cmpsb test insl lret sub fnsave cmpsb adc out jg mov jb mov xor xor adc sbb mov push repnz xchg movd rclb pushf rorl mov lret mov adc mov push xor cmpsl rolb hlt imul rcll mov (bad) in and stc out xchg out lret jge and and pop (bad) mov mov add push (bad) or pop sub nop inc add mov push add (bad) mov (bad) (bad) dec or jnp out pop jmp adc mov js xor lcall push push sub dec mov fcmovu cmpsl stos push add out xchg ljmp cltd adc das jp cli jbe mov adc rclb or mov fsub loopne lret cmpsb push fcmovb inc into dec inc insl mov (bad) insb pop push daa or cltd inc xchg test xor xor cli fs adc jns aad xor xchg dec loop push jbe dec (bad) (bad) mov (bad) cmp mov clc mov mov pushl pushf mov call out js test xor xchg inc inc sub adc and add flds lcall jb (bad) insb inc fsubrl lods test inc std lods cmp push inc mov out sbb imul mov cmp push ficom mov jne xor pop repnz adc ds ja mov (bad) pushf scas sub test mov sbb sarl mov push pop pop testb fstpl pop mov dec xlat pop fs cmc insb jnp in push jle pusha imul cltd (bad) aam loopne stc outsb rol outsb sti mov dec (bad) int xlat lods and mov popf negl push (bad) push imul adc sbb sbb out aad shr sahf cmp rorl lock and xchg push dec xchg push push sbb xchg xchg mov inc sti fs pop aam add or les repnz add cmp xchg and mov cmp adc js pop pop dec push xchg cltd in sbb jbe dec lea pop push fldt xor jmp and cmp dec es shll mov mov xchg pop lock fisubrl lock (bad) int xchg gs lcall add daa pop mov lds xor dec add int repnz rorb and adc dec movsl mov ret lret mov scas emms push jl jns mov inc sar decl mov das push mov in mov xchg je push in mov inc xchg push inc (bad) mov test jne fdiv fucomi adc roll je jmp mov push (bad) pop test push ficoml je lret stos jl imul clc lret test pop sbbl (bad) ljmp jle push xchg leave out loopne lock xchg xchg cmp (bad) scas movsb or test cmp ja mov mov mov fcoml aad sbb cmp repz or gs sbbb push jge sbb push push int3 pushf scas jne xchg add sar cs jne pop cld ret das xchg jp scas cmp add std cmp shrb imul mov or sti inc cltd hlt ljmp cmp outsl adc das sub mov in test cli into sbb adc dec jnp pop xor jmp call push and xor clc stos or cli rep ss std ljmp ljmp push movsl (bad) mov xchg ss cmpsb pushf mov popf (bad) int inc mov je daa or or clc inc push adc rorb lret lcallw mov push mov lret (bad) insb adc mov jmp cmp pop ja cli (bad) add scas enter push lea add aaa fldenv mov scas test xor xor rcr mov mov sahf (bad) push push loop push repz mov lock int repz dec adc ds in (bad) sbb sbb mov rcl sbb or fstps (bad) hlt add int pushf ss mov incl mov sti jne in push pusha and jl lcall hlt pop xchg lcall push xchg sub push sbb icebp (bad) call loope xlat movb pop in mov push je test ds lods out int3 iret pop inc fwait cmp (bad) lret movsl xlat arpl xchg add mov jg (bad) jne aad xor into scas jns mov lret jbe xchg idiv add iret push shll out stos mov idivb dec enter push inc or jo fucom cmp mov loopne (bad) into jo cwtl sahf adc (bad) in push jns outsb outsl inc pop inc mov or (bad) fcompl add xchg pop lds lret add xor loop jbe jecxz lcall or imul add dec aas insl nop xchg faddl aaa inc jns cmpsl out stos pop cmp cltd cmpsl shlb cmc ret push insl mov mov mov pop push push or push fist sti and mov outsb lcall popf and fisubl mov mov mov sub popa sub mov and mov or stos sub push dec xor jle mov loope cld inc xor pusha fcompl out inc inc mov mov sub lret ja rol adc lcall lret dec shll jns fcmovu pop in out cwtl mov xor mov ja lds mov std jno push add fiadd and bound lret iret push sti cmp stos ss jnp mov (bad) insb mov inc and lret lods ret daa cmc pop out js out xchg fwait and xchg pop fwait xchg pop adc mov fnsave rcll pop loopne push xchg rcrb add mov dec leave (bad) test (bad) or pop repz xchg dec mov ds and or xchg mov int (bad) pop dec dec cltd aaa imul mov or adc aas or scas mov push repnz push jg or adc ret into cmp mov popa pop add push adc pop cmpsb adc call mov or ficoml stc inc addb mov (bad) add pop (bad) lret std mov push popa clc push inc jns insl fs aad hlt jp movb mov sbb fldt (bad) mov fwait push ds rcrl xor lea push lret ss sti andl jns cli push cs bound clc and jno mov jle sarl les sbb loopne gs pop lds jnp xlat hlt cmp xchg in and and xchg lret cmp pop sub daa scas mov ja xchg add mov jnp fadd jno aam ret push xchg and daa nop scas (bad) mov push lea cmp (bad) mov pop xchg dec inc insl push xor out movsb cmp lea fsub sub mov (bad) in and lods out sub cltd loop mov xchg fcmovnb outsl movsl jae mov jns cmpsb sub mov scas aam push jmp icebp lahf sbb insl (bad) in mov lret addl add add pop mov gs and xor jle ljmp mov pusha mov jp add mov stc jae mov aas notl mov cmp loop imul (bad) add out inc jo icebp pop lods jbe lea loope std das (bad) mov (bad) imul or out shr lods out add dec mov mov push rcr test sbbb popa not mov push ds cmp stc lret gs (bad) lock (bad) pop scas lcall add inc xchg pop xor in lods mov jmp add xor push aas inc (bad) lret lahf mull dec dec notb fwait stos jne and stc into outsl jbe sub mov jg sti mov iret outsb xor mov and insl insl nop adc mov jae jno in or xlat rcr jno mov dec sub pop jmp cmp sti and inc fmuls das sbb pop std addr16 test lods xchg fmulp mov in lret movsb pop test cltd call sbb arpl hlt in sub mov movsb xorl cmpsb sarb add je dec dec ja sbb sti push add sarl push (bad) mov jb (bad) and jb js mov mov iret or jo int sub jnp adc sub call mov mov jge int3 jecxz shrl cltd leave stos stos clc lahf or je sbb out mov clc gs fdiv out inc xor popa in dec dec push push out aad rcll dec insl mov enter sub lods loop dec (bad) xchg lcall pop gs int xchg pop or add insl jae xchg and dec cmp jno push daa daa mov xor mov jle inc loopne loope cmp leave push mov int3 int shrb repnz data16 and jnp xor xor xor inc push add les roll sub pop xchg pop or and in adc (bad) xchg xor mov lret jge insl fwait stos xchg mov sub pop int3 popa xorb outsb cmpsl jbe movsb and xchg jl push mov sub adcb inc xchg test add cld out cmc vpaddsb inc or or out fwait out and sbb or mov into dec mov std xchg outsl jle adc mov in ljmp (bad) es lods fcoml mov inc cmpb sub mov dec push aas adc cld and js in lcall loop out mov inc cwtl xor push pop or mov fldcw push cmc dec jns arpl data16 stos (bad) shl xor in cmp dec push and les lock pusha jmp push jno lcall dec divl xchg leave and pop jecxz xorps mov cmp mov mov cwtl call fcoms bnd cltd test mov pop xchg hlt jns jmp repnz imul scas dec jo or inc shlb jb xchg fsubrs cmc fistl add fstpl xlat or xchg inc les movsl mov les scas jns out add jmp mov jecxz outsb cwtl hlt jmp fstpt leave sub push loope sbb roll dec sbb in call in inc mov xchg jmp in test sub ret std add ss dec sarb mov inc aad pusha and xor test (bad) stos sub ja mulb xchg cmc outsb push xor cltd in push sub sub mov push fidiv add adc xchg mov jo insb in or in pop cmpsl cmc fcmove dec inc jp repnz in sti jne enter fisttp insb and push sbb lods xor adc sub sbb and pop sbb cwtl xor in test addr16 outsb jbe adc xor xchg (bad) je dec cmp mov and lods xchg add xchg push pop insl or in mov inc loopne (bad) cmp mov test mov dec es cld (bad) fdivl or xor leave arpl or das movsb jmp mov xchg in push adc aas push dec out (bad) mov in mov orl and mov sub add cmc mov or repnz (bad) out lds inc loop shll stos arpl pop and xor mov scas adc push ret cmc jnp ss (bad) xchg xchg sub jmp out inc add sarl sub sub mov xor popa mov neg add xor (bad) fsubrl (bad) pop (bad) in and xchg or or test mov and adc notb xchg mov test xchg movups in or inc lods inc sub jbe sbb and inc push mov rorl mov rol arpl mov pusha loope inc cld pop push sub subl roll movsb add jns ret enter aam sbb fistl mov imul dec jae xchg cmpsl sub lods fnstcw popf pusha aaa aad lcall xchg xchg jb pop enter add jo xor push movsl pop adc fcompl sub in pop movsb out ja sub push pop cmpsb add out lcall mov mov adc (bad) mov sub ss push push scas and outsl add jo mov push or add rcrb mov in push cmp out sub jne aad mov ret push or lahf sbb lods out lret xchg jnp sub xor push xor pop cltd xchg xorl and mov jg les mov rcl add and loop xor shl fldcw inc fs mov sub cmp mov push in subl insl push add jae xor fnsave push scas das jl das xchg mov sub shrl or lds movsl mov (bad) icebp fcmovb fnstenv adc and out adc push cwtl lcall mov xor sub push jno push sbb repz pop (bad) mull sti inc rorb sub mov xchg lods pop iret movsl fadd sub bnd inc (bad) inc jbe push dec xor xchg rorb into push mov (bad) fcmovu sub add (bad) jmp (bad) dec xchg mov sbb xor sub or sub popa es gs mov pop mov mov pop cwtl add cs mov cli test andb mov outsb or add adc mov aam sbb or fcomip sub jg sbb pop in pop cs mov test outsl push popa stos out xchg imul pop lock icebp into sub fs xor xchg xchg xchg cmp xlat push (bad) int3 loopne out vpsadbw in fmuls idivl mov push lcall test push fsts pop in xor jmp stc ret adc pop dec and dec add dec inc sbb mov dec xchg mov dec sbbb popa leave shr add adc push dec inc inc push xor push imul int shlb xchg mov push mov dec loop stc dec sbb (bad) arpl (bad) or cmp test adc sub push or inc jo cmp push xor dec mov sub add in adc arpl fisttp sbb mov mov out divb add pop sahf (bad) nop xchg sti rolb inc push popf mov lea mov fsts jmp fdivrl (bad) mov ret ss mov xlat xor sub adc mov cli sub daa (bad) pop scas xchg sarb out insl cwtl into ss adc icebp inc adc pop repnz mov or xchg mov lea and pop ja cltd push or ret (bad) sbb push mov pop dec add jcxz mov fistpl push cmp nop mov leave jbe add lret mov (bad) pop sbb cmpb cli test (bad) rcrl add inc lods insb pop jle pop stos pop ret jbe js jne out in mov repz push pop lods add addr16 or lods fucomip cs push hlt int3 add or ljmp bound sar mov arpl jae mulb roll or mov in imul aaa ficompl inc add xor outsb add mov cmp ret xlat fistp dec (bad) dec push imul fcomip adc sar mov in sahf iret cli mov out sub mov (bad) jge and jbe aad jg jl dec aas ds in pusha xor cwtl add xor iret (bad) cld jl push test push xchg jl (bad) mov lock mov add pop and or sub lea mov jo cmpsl cld lret stos push sbbl jg xchg out stc ljmp jno sti mov or rcll inc cwtl ffreep iret dec cmpsb pop mov adc push cmp mov test fstpl test cltd int3 insb jmp stc pop xchg ss mov out push cmp test (bad) cmp lea mov push iret (bad) (bad) xlat mov movl and jo fnsave and sbb mov dec adc xchg outsb sub test loopne aas jae xor ja xchg pop js inc xlat es pop xchg cs in jl cmp mov popf je test pop jbe add insb pop movsb in pop clc sub sahf push cmpsl loop and nop mov rclb lret scas jbe push push dec xchg and sbb adc outsl mov daa push push mov sub es addr16 (bad) pusha leave pcmpeqw sub sub cwtl jge mov sbb and jbe pop fimul and in mov repnz mov pop insl adc hlt add idivb push stc mov jecxz movsb jmp test jle aad sub jecxz jge dec xor aam imul jne clc dec roll or ret rol xchg rcrl jae cmc cmp cmp in into cltd inc xchg xchg jecxz pop cmp push out in sbb add sbb sbb xor mov mov push xchg push jecxz push inc sbb cld addl mov lock sub mov cmp dec mov sub lds enter enter push sbb fwait pop cld push sahf insb shrb subl scas addr16 xchg and dec xor int out mov es (bad) jbe out and sahf dec mov (bad) clc cmp sub mov jge cmp add ret outsl addr16 lods jns push out pop das cmpsb out or in faddl scas cmc loope xor xchg mov inc (bad) sub sahf lahf jecxz (bad) es sub mov aam int3 jnp xchg xchg and mov inc clc (bad) mov xor mov test dec int mov fcoms dec loopne insb (bad) das shr mov mov mov dec dec ret push and jle cmp mov rolb hlt fcmovnbe test jbe imul lret rcrl int adc aas push das dec lcall aad or or cli pop enter pop push mov adc pop push bound (bad) mov rcll cltd das dec fisttp adc pop lret inc fisubrl movsb push out icebp cmp (bad) mov pop (bad) stos cmp pop js cmp add inc mov sti sbb add mov js repnz (bad) sbb (bad) xor and je jno ror int inc insb cmpsl mov xor xchg ss mov les ficoml xchg sub shl adcl aaa xchg fidivrl flds es pushf iret and jge sbb inc hlt sub (bad) cmc and push loope cli out mov sub mov xor imul adcl add dec test inc inc push sub das mov sbb clc add jge push int es xchg xor adcb sbb jp out lcall jnp in xchg out lods outsl imul mov pop inc cltd enter mov jl sbb scas dec or sahf out cs pop fs mov mov jg cs xchg fs mov push cs push int3 push ja dec out push sub sbb pop sti mov ljmp or mov jno adcl or mov leave mov mov adc xchg inc mov jmp pop push jmp test sub (bad) iret mov adc and jg cld es repnz dec shlb xchg push adc add scas cmp (bad) jo pop (bad) xchg add fsubrs stos test es inc fmulp fwait inc lods mov pop mov push dec iret dec sub sbb movl jp icebp gs lahf andb xor xor lods insb cmc ds aad (bad) iret adc lock (bad) xchg test or jl (bad) (bad) aad popf outsb cvtdq2ps inc test aaa push sti sysret jbe dec lods into test add jp je outsb addr16 popa mov jmp cmpsb or cltd mov (bad) xchg jo mov loop (bad) mov cld (bad) fbstp movsl fdivrl adc pusha mov mov imul fimull out xchg (bad) cltd (bad) leave arpl (bad) xchg mov cmp sub sbb push add or cmp ja cld lock inc addl mov jmp cmpsl pop aad bound xor stc aaa jp mov xchg xor pop lock mov push rcrb inc or pop lock inc ja xor and stos push pop stc pop push loope stos out insl inc mov adc push (bad) aas inc das lahf fmuls lds out mov sbb mov adc mov xchg aas iret dec push loopne push cwtl rolb or push mov jge adc add ret mov mov sti outsb cld movsb dec push (bad) pop ret xchg es jne jb cld in loopne mov mov loopne inc cs fstp push repz pop push mov aam (bad) pop das test aas cs mov pop ja cmpsb push mov loop add mov and mov jne into and ljmp data16 sub adc fildl jns xchg scas repnz cmp add insb mov loopne sub mov movsl mov sub call lcall sahf mov mov loope and fisub test imul test je pop ss (bad) cmp stos and cmp les daa add mov fdivl xchg xchg (bad) test comiss negb xor mov mov aaa shr sbb aaa movsl sbb dec sahf cli dec enter mov scas sbb (bad) jae fmull or dec das (bad) mov in pushf movsl add pop lret push mov aas mov push xchg inc pop daa mov sbb popf add push (bad) mov inc insb repz fs pop cmp xchg enter mov jno divb scas into xor (bad) lret pop scas jp mov pop lcall bound cmpsb jp pop lock les jecxz lods xor mov pop sbb sarb decb mov and cs mov add xlat mov fcomps inc stos adc repz std sbb or out adc lret cmp mov mov aas push add push push and cmp daa push pushf jbe jmp jl inc and jl or mov lds out lcall call pop mov std push (bad) fsts xchg mov stc mov cmp sbb imul mov mov gs ja sbb insl add loope mov cmp adc imulb ja imul jle,pt xchg test lahf push (bad) movb cmp (bad) push loopne out dec xor cmp or shlb decl cmp dec scas ljmp cwtl call leave mov mov push gs jns loopne mov lock je adc insl push xchg push cmc nop (bad) cmp sub or adcl roll dec je,pn ret mov add cmp pop imul mov inc add lahf dec pop mov cmpsl xchg pop out mov mov (bad) cmc and adcl xchg movsb push daa xor mov test loop jno int3 or xchg sub mov popf or repz mov dec cmp xchg push pop scas pop jle stc stos fdivrl xor cmpsb xchg pop sarb push and cltd adc scas lds cmpsl pop push cmc fiaddl cmp repz das stos xor (bad) jl dec mov ds hlt lods roll sbb jecxz out fidivrl add std cmpsb add or (bad) test push je ljmp stos fchs bound or sbb cmp outsb cmp or dec push gs es mov call insl lods (bad) mov or pop hlt int3 jne mov mov cmpb int3 leave xchg jnp and xchg cmp repnz push cwtl int3 push fmul ret sbb bound cwtl cltd jg repnz arpl or mov lods xchg gs mov cmpsl mov xor sbb fbld divl loop add cmp ret cmp rorb iret in ret cli in and cli pop call pushf fcmove fdivrs push pop jp cwtl sub rcrb fcmovnbe ss push aaa push push xchg mov jg adc ss hlt (bad) and and jl (bad) cmp ja push adc cwtl int sub add aas arpl inc pop lret xor mov sub lea lods pop xchg jp mov in out je cmc int3 xchg mov jmp sti mov inc fwait mov jge test xchg add push adc xor xchg bnd (bad) (bad) iret xor (bad) lods lcall jp mov mov pop sub sbb mov cmp out and lahf inc mov imul cmp outsl enter inc mov push mov push adc incb xchg mov cmp fs lds mov xor lahf sbb cmp mov aad add loopne call pop push pushf mov mov xlat outsl and and mov pop (bad) mov rol popf lcall cltd mov nop sbb in negl insl add push mov je cmpsl lahf sbb pushf imul push pop rcll or push xchg lds mov (bad) idivl shr divl inc int pop adc xor insl lods testl daa xchg (bad) sub lea add cwtl mov inc or jne movsl inc inc add mov je popf jne dec or lret dec push lea movl aas mov jns data16 inc sub rolb jbe out (bad) call inc adc mov bound int outsl ret jnp jp (bad) jno ds repz cmpsb aas fstp mov cli or cltd cmpsb sbb sbb cld mov lret aad xchg xor popf lods xchg in add insb inc sub les pop cmp mov cwtl xchg xchg push loop fstpt mov aam mov cmp (bad) adc sbb je daa cli pop inc mov ja pop mov icebp xor ja insb inc dec pop std jmp and (bad) repz sub stc pop (bad) push and xchg gs ss clc fs nop lods cld (bad) push hlt aas fcomi or daa xchg aam sbb mov push push jns pushf out (bad) icebp lods orl icebp xchg xor mov test mov dec adc aam mov test mov insb pop mov lods sti (bad) subl jmp add test jle mov aaa xchg les mov cmp (bad) imul fisubr hlt mov lcall sub bound insb negl es (bad) pop or pop or popf jae cmp int3 nop aam mov (bad) xchg bswap stos das cmpsl (bad) add and (bad) pop add mov dec js mov stos inc je xchg jg dec andl fld repnz xchg cmp add call push in sbbl push mov add xchg mov pop js (bad) mov out test add jae adc js sti lahf (bad) mov sbb mov (bad) jno les or (bad) fwait icebp (bad) pop stos and sarl mov fstpt insb cmp lods cli fwait addr16 popf pop inc ds sub fwait cmp daa pop rorb mov (bad) cmp das jle aas inc cwtl cmp pop mov addr16 push mov cmpsl ret repnz popf xor test push pop mov inc popf mov xchg mov sub cld push mov (bad) lock ficomp lock lods cmp cld xor fs jae mov add fcom aad mov fildll cwtl add into rol or sbb and cmp mov mov lcall xchg ss arpl jmp xchg ljmp jbe add imul cmp adc and ret xchg int3 add mov push imul cmp jge sbb sbb xchg or inc int in or jge movsl arpl roll push mov dec stos jnp sbbl movsl jl (bad) insl xchg mov outsb enter jo sbb jp push add jp imul push and cld gs pushf shlb mov mov repz imul lahf adc push bound (bad) iret mov ror inc (bad) fcmovnb ja int3 pop loop add xor pushf or sub sub sub andl pop dec inc jle pusha mov decl pushf fs pop inc fsub mov addl rcrl add mov addr16 jl (bad) inc test pop jp js xchg lea call hlt lea out sti push jmp call scas fldl out iret scas dec inc jbe xor insb lods and cs jb jne mov cmp dec loopne popa loop mov push das add cmp push xlat adc (bad) mov xor mov mov repnz call jb inc xor ja loop ja mov xor rcrb pushf xlat fisttpl add mov mov xchg xchg xor dec dec sbb sub mov insb sub xchg cmc xor ja jnp mov iret into sbb jae mov mov push in movsl push hlt pop xchg int3 fidivr ret adc jg aas cmpsb jae xchg pop icebp adcb mov mov je inc out or mov jo pusha rclb inc pop xchg cmpsl mov (bad) arpl in mov jb out and jo sub add call jbe pop dec dec dec sbb xchg mov clc icebp cmpsb clc xor outsb dec fwait xchg jp ds outsb adc sub sbb call add (bad) mov lahf mov jg adc loope,pn in or pcmpgtb xchg adc xor in out pop xchg jg add daa or ret jl sbb push cmovs xchg push aam jae je jno push fnsave jns push cmp adc js mov mov ret out mov (bad) out mov xor test cs dec push (bad) jae jge xor mov scas mov or sbb jp mov mov mov aaa sti xchg jbe ret in inc repz and aaa mov xchg out push (bad) dec mov scas andl (bad) mov mov xlat addl iret mov test pop sub sbb xchg sub push insb popf das fnstcw xchg push cmpsb mov push mov testl sbb jp push fistl xor push jae stos insl ficomp fidiv mov loopne adc jbe arpl jp jecxz sti cli add jge data16 pusha popf mov int addr16 xor inc lahf xchg dec daa inc mov ret loopne jmp or into ja out sbbl fdivr sqrtps rcrl leave push aas mov hlt enter (bad) mov push and push push gs aas mov pop in call popf adc add pop inc sbb inc in xchg fmuls clc imul in mov mov ljmp sub jmp fldcw inc das fmuls mov ret sub push out (bad) testb push jp mov xchg lahf mov jl jmp xor (bad) or jo dec pop gs sbb fstpl lods into scas mov ret push popf xlat std int in mov out push test and in stc std push out sbb sbb jp lods push lods inc xor mov and test push inc mov data16 or xchg (bad) cmp test ljmp clc xchg xchg pop wrmsr cmpsb inc outsl lea sbb scas push (bad) movsb sar jns addr16 cli sbb divb cltd sbb popf jl jb jo jg sbb inc iret clc mov dec jge sub sarb (bad) jno push das es rol scas stos add dec cwtl aaa insl pop (bad) cmp mov mov fisttpll mov mov push fcmovne mov push xor rclb fcomi cmp outsl mov cs xor in scas inc mov xchg xor jmp fnop inc pop lds or pop (bad) push mov push aaa fisub xchg mov cmp mov jno clc xchg das out outsb cmp out pop js pop fdivrs test popa sahf cmpsl xchg bound xchg push sbb xchg dec and xor fmuls cwtl adc dec lcall jge outsb pop fistl orb dec test inc inc pop xor inc out jg nop jl aaa (bad) inc pop aad cmp dec xchg dec daa sub ja (bad) or mov aas xchg ret fldt sbb out out cmp pop lds fimul aad dec mov add fcomip and adc dec std mov sub add loopne bsf mov pop pop cmp xchg cs movsl dec call (bad) mov cltd sbb sbb push mov fmul fcomi outsb mov push je repz dec cltd sbb sub xchg imull (bad) mov stc out and or mov icebp lock sahf into lock dec push insb sbb xchg inc (bad) call mov mov mov jo lahf cmpsb inc cmp inc jnp pop js daa mov xlat xchg dec pop stos mov jecxz sbb test mov xchg sti pop popa push dec imul imul scas adc push lret jae hlt jb xchg into sub cmp add dec cmp and pusha test dec std sub sbb and inc mov adc (bad) repz add xchg and adc adc push fsubr fisttp or std jae jne push cwtl push ret aad mov or mov xchg jns mov shrb stc icebp xor rcll jno jmp sub lods popa or pop pop in out add pop movsl mov mov adc xchg push rcll adc ficoml xor cmp dec ds push out inc push inc fsubrl repz or scas mov lret stos lock or ja popa adc mov lcall pop lds ret jo pop fwait outsb icebp stc add push iret sbb jae cmp adc lods push fdivrs add int je ljmp inc cmp fadd (bad) cs xchg push mov stos aam push or imul dec cmp dec xchg cltd loop test cwtl pop cltd mov xchg xchg xchg mov (bad) negl cmpsl mov mov push sbb push jecxz jno out movl hlt cli test (bad) jae xchg jle out sub fisubrl (bad) int sub orl lcall dec lea pop mov xor pop push in loopne hlt fwait or ja xchg fmuls jg shr lds lds inc sub push dec xchg ja call add sbb xchg arpl fisttpll pop xchg ret push test pop or cmpsl test jnp ret loop mov pop cmpsl fstps clc fistpll test mov test push mov lahf and loope pop rcr movsb cmpsb or push xchg adc inc xor or repnz pop rcrb in popa movsl test xlat (bad) adc test mov dec push call ljmp dec add xchg pop fstpl pushf adc popf sbb (bad) xor pop arpl jmp sbb jbe js mov (bad) xor rcrl lret clc lods sub repnz mov xor xchg (bad) or (bad) mov loope sub gs mov dec lahf and pop adc xchg jb adc int3 xlat sub lods add scas jge,pt mov mov add sub xor cmp (bad) loop test cmpsl nop sub inc outsb dec in push mov out out push pop arpl jmp (bad) adc push mov icebp pop lret cmp in stos xlat adc pop loopne xchg mov mov mov push lods push fnstenv mov fs lods sbb pop insb mov or jmp jmp fdiv mov sbb inc addl adc xor cmp push mov xchg mov repz out lods xor btl inc inc in pop adc ss add xlat adc mov push in repnz into loope hlt or cmpsb shll add orl int3 cli cli push repz pop sarb pusha aad es jg stc adc adc (bad) hlt jp xchg jl jb popf mov cmpsl xchg fs clc lret insl push scas sbb pop mov repz in js push mov mov mov add dec cltd dec pop sub test loopne xchg add clc xchg pop and pop pushf and push add xchg test cmp add daa or hlt cmc iret cmpsb sbb adc push stos dec mov cmp jnp push lahf fwait scas push mov outsl mov inc fisubr mov sti shl les and inc repz inc or jnp jmp or (bad) fisubr pushf dec dec inc rcrl mov mov and and out fwait in push cld push ss (bad) arpl xor pop loope jle inc sahf xchg iret test add rclb sub lods sub push xor in sub (bad) notb jmp add outsb out xchg gs cwtl lcall push out dec repnz (bad) test jg or ja xchg push aas scas jbe sbb jbe ret push sub fs xor adc cmp jne int3 loope cld sti cld icebp pop adc rcll jle fidivrl dec inc cmp subl sbb sub dec jns pop in (bad) jmp into xor or jnp int3 sbb daa test ja jno ret xchg and cmp xchg jp add pop xchg mov add ficompl add sbb push mov sbb sbb fistpll jbe sub shrd outsl lcall loopne mov mov sbb fistp mov lcall aad sbbb hlt clc pop mov icebp leave add inc mov (bad) jmp push rol jns ret jp jle js xor movsl jno rcrl test cmp ret pusha fistpl adc jae jmp bound or jg jmp repnz xchg scas mov into add add jmp daa lcall test int push movsl mov rorl dec into movsl mov popa ja andl dec aam push xor or fmuls dec push lock sbb push movsl mov jb mov arpl lcall mov popa mov or dec ds loop popa push outsb jne cmp insb sub lret lock fild fmuls daa shl push inc and and adc fidivl pop (bad) pop repz jl outsb cld cmpsb and xor rcl aaa repz sti ret push jae mov mov xor pop xchg test adc fistp sbb mov testl adc ss xchg ja jle int3 mov mov lret push pop jnp push xor stc inc or pop sub xor pop lds sub in jbe sbb push jl fistl sub cmp fmull jecxz jge ret add dec sbb jne fidiv ret add pop lcall pop and mov jne push les dec xor sub mov cmp jne sbb fistl cmp push jl cli cwtl sbb dec push dec scas into fisubr test jno int fwait (bad) push mov dec out call ljmp gs xchg lods mov adc push iret faddl jge fisttpl jo cmp sbb jb (bad) jno pop jl (bad) mov scas pop (bad) mov or insl xchg add mov outsb dec xchg test xor and cmp mov dec mov iret xabort or pop fs push dec jb es inc pop pop popw iret mov repz xchg out mov lds xor popa xlat adc jbe cld sub jmp xor cmpsb xor pop std or cltd clc sub out push cmp addr16 arpl std mov leave fistl xchg jp ss mov aaa cmp sbb clc out dec jge jle test cltd xor inc or cmp in bound mov scas add cli rcl in or lcall or add adc mov pop pop pusha dec in out les cmpsl stos aam jl pop es cli stc (bad) mov sub inc sub shrl jg inc sub push inc jmp xchg into inc push test repz mov and and scas cmp aad inc cli xchg shlb xor pop insb push ljmp dec inc (bad) stc dec jne (bad) les add addr16 fld in mov imul sub nop or (bad) cli cmpsb dec mov in aaa and ds shll scas mov jl mov jne lahf push dec inc or push mov test inc cwtl xchg mov mov dec outsb push cld pushf adc in pop outsl cld cli dec cs sarb xchg sub call imul or pop lock push mov and lcall sbb cwtl mov (bad) fnsave mov insl push fdivr shrb aas adc xor hlt dec (bad) mov clc out iret into (bad) add lods test inc nop jnp sbb dec mov aas xor inc xor dec mov jle xor mov daa inc fwait lea lret xor shlb fistpl mov adc cmp push and sbb lcall fldt add mov jl mov xchg imul push mov xor cmpsl ja pop sub add cmp leave ffreep ja add xor adc (bad) jns xor es nop shlb mov push testl popf pop pop insb mov paddusw fdivrs cmp (bad) ja repnz cli sbb inc inc mov xlat cmp vmulsd rorb push popa pop mov dec mov imul cmp jo add add adc mov push mov lea xor push cmp jne inc inc push push push add push push push add push push movl nop nop nop nop nop push push push push sub mov movl movb mov lea mov mov movzbl mov shl mov dec mov movzbl shl dec mov mov movzbl movl movl movl mov mov movl movl movl movl movzbl add shl lea cmp jae mov movw add loop mov xor movl mov add mov xor cmp je movzbl shl inc inc or cmp jle mov cmp jae mov and mov mov shl mov add cmpl lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar mov lea movzbl mov mov and mov shl mov sub sar add imul cmpl lea mov jle mov sub mov movzbl mov shll mov lea mov and cmpl lea mov lea ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar cmpl lea mov je jmp sub sub mov lea shr sub cmpl mov je cmp jle jmp cmp jg lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub mov sar lea mov jmp sub sub mov lea shr sub mov jmp mov mov mov mov mov inc cmpl mov jg movl jmp cmpl jg subl jmp subl jmp mov sub mov sub mov shr sub cmp mov mov lea mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar mov lea mov mov mov mov mov mov mov xor cmpl setg add lea mov jmp mov sub sub mov shr mov sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub movl mov sar lea mov mov mov mov shl add cmp lea ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae sub sarl mov mov cmpl lea mov je xor cmpl mov mov setg lea mov mov sub mov mov mov inc mov jmp sub sub mov shr sub mov jmp mov sub shr mov sub sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov cmp mov ja cmp je movzbl shl shl inc or mov mov shr mov movzwl imul cmp jae mov mov sub mov sar lea mov mov jmp mov sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl mov setg add lea mov cmp ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov jmp sub sub mov shr sub cmp mov ja cmp je movzbl shl shl inc or mov mov shr movzwl imul cmp jae mov mov sub shll sar movl lea mov mov lea mov movl jmp sub sub mov mov shr movl sub movl mov add mov mov mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov lea mov dec mov jne mov mov shl sub add cmpl mov jg addl cmp mov jle mov mov shl movl lea mov mov lea mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub lea mov mov dec mov jne lea cmp mov jle mov mov sar and lea or cmp mov jg mov shl add mov lea sub add mov jmp lea cmpl ja cmp je shll movzbl shl inc or shrl add cmp jb sub or dec jne mov shl mov add movl mov movl mov mov add mov add cmpl ja cmp je shll movzbl shl inc or mov mov shr movzwl imul cmp jae mov mov sub sar lea mov mov jmp sub sub mov shr sub mov mov mov inc or mov shll dec mov jne mov inc mov je mov mov add cmp ja mov mov sub add lea mov inc mov mov inc incl dec je mov cmp jb jmp mov cmp jb cmpl ja cmp mov je jmp mov jmp inc sub xor mov mov mov mov mov add pop pop pop pop add add xor lea mov push cmp jne mov xor pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 